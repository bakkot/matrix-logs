2022-04-01
[23:32:28.0182] <annevk>
It's not useful to know that it can only throw due to OOM? Is there anything else?

[08:46:36.0334] <Domenic>
Stack overflow IIRC was a big thing for our implementation

[09:55:29.0747] <mgaudet>
annevk: I'm not sure. Certainly for reading the specification, and trying to hold it together as a concept I think it's helpful. As an implementer, I'm less sure of the value (could be wrong, would welcome other opinion). 

[09:55:30.0931] <mgaudet>
I know I definitely came into some of this with an incorrect assumption that OOM handling was something done on the web in complicated code bases-- that seems to not actually be the case though?

[09:56:32.0326] <mgaudet>
(The concern I had/have is broken streams that originate from states 'impossible' in the specification, generated by things like OOM, or stack overflow) 

[13:21:31.0325] <Jesper van den Ende>
Hey, I noticed setting Node.parentElement works in all browsers. But the spec says it is readonly, doesn't that mean setting it should throw. Or am I missing something?

[13:24:06.0541] <evilpie>
How could I get someone else interested in https://github.com/whatwg/html/issues/3255  ?

[13:31:41.0751] <Jesper van den Ende>
> <@jespertheend:matrix.org> Hey, I noticed setting Node.parentElement works in all browsers. But the spec says it is readonly, doesn't that mean setting it should throw. Or am I missing something?

ah never mind, I was trying this in the inspector console, which doesn't use `"use strict"` I guess


2022-04-02
[08:37:20.0920] <annevk>
mgaudet: I think only for ArrayBuffer allocation is OOM defined; some have the ambition to define it more exhaustively, but I haven't seen progress on that for many years


2022-04-03
[15:19:56.0300] <Domenic>
> <@evilpie:mozilla.org> How could I get someone else interested in https://github.com/whatwg/html/issues/3255  ?

I will ping the relevant internal team chat, and make frowny faces at them for not responding earlier :(


2022-04-04
[07:42:06.0079] <evilpie>
> <@domenicdenicola:matrix.org> I will ping the relevant internal team chat, and make frowny faces at them for not responding earlier :(

Thank you!

[14:13:23.0296] <smaug>
hober: by any chance, do you happen to know examples of "we found several examples of web pages that had incorrect behavior when requestAnimationFrame() callbacks were fired at a non-60Hz frequency." mentioned in https://github.com/WebKit/explainers/tree/main/animation-frame-rate ?

[14:14:13.0115] <hober>
> <@smaug:mozilla.org> hober: by any chance, do you happen to know examples of "we found several examples of web pages that had incorrect behavior when requestAnimationFrame() callbacks were fired at a non-60Hz frequency." mentioned in https://github.com/WebKit/explainers/tree/main/animation-frame-rate ?

I'll ask!

[14:14:21.0458] <smaug>
thanks!

[16:20:22.0927] <c8fdy5dbkp>
smaug: 


2022-04-05
[14:49:27.0838] <vrafaeli>
Anyone can explain the difference between embed and iframe tags? (any reason to ever use embed instead of iframe in modern browsers)

[14:49:46.0333] <vrafaeli>
 * Anyone can explain the difference between embed and iframe tags? (any reason to ever use embed instead of iframe)

[14:50:07.0196] <vrafaeli>
 * Anyone can explain the difference between embed and iframe tags? (any reason to ever use embed instead of iframe in modern browsers)

[14:51:15.0749] <Andreu Botella>
come to think about it, maybe embed and object could be moved to the obsolete features section

[14:52:18.0944] <vrafaeli>
btw nice to see you Andreu. I think we chatted a bit before on IRC


2022-04-06
[23:35:57.0122] <annevk>
Yeah, the plan is to obsolete `embed`/`object`. `object` in particular has some capabilities that are unique to it still, but we're chipping away at those.

[01:02:51.0320] <annevk>
GitHub's "smart URL paste" continues to trip me up, I keep forgetting it's there and ending up with a result I don't want

[01:03:18.0944] <annevk>
And I kinda worry that if I learn it I'll expect it in other places and run into trouble there

[02:23:57.0117] <freddy>
I'm looking for something that resets a whole document, including expando attributes etc. - I suppose I could emulate this by serializing+parsing the whole document or by cloning it. But, ideally, I'm looking for existing patterns for this "reset" or at least individual puzzle pieces. It seems to me that even the puzzle piece that removes "all" event handlers from an element seems to be a "no" already :/

[04:54:03.0550] <annevk>
freddy: "document open steps" does a bunch of that

[04:55:20.0364] <freddy>
I _did_ see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#opening-the-input-stream, but it "replace the document with a new object" sounded to me as if the corresponding element-tree would be gone?!

[04:56:03.0246] <freddy>
OK, I realize I only read the non-normative stuff (I feel bad now)

[04:56:08.0438] <freddy>
 * OK, I realize I only read the non-normative stuff (I feel bad now)

[04:57:36.0122] <annevk>
freddy: it definitely doesn't do sanitization though; for sanitize() I'm still curious what the actual envisioned usage patterns are

[04:58:13.0194] <annevk>
But we do have primitives such as "remove all listeners" in the platform, but they're not widely available

[04:59:41.0350] <freddy>
Yeah, so the thing is that there's an apparent lack of "inside knowledge" from the sanitizer folks (freddy, otherdaniel, koto) about the potential state that could be attached to the document. The lack of knowledge lead to a security-conservative "we want it all gone" design goal. Similar to the other security-conservative choices we made (can't just a string-to-string API and hope for the best, can't parse a string with implicit/wrong context element, etc.).

[05:00:17.0222] <freddy>
So, one ideas is that I'm trying to find out if there's an algorithm that would a) shine some light on the apparent lack of details and b) alleviate the concerns by being an existing thing.

[05:00:54.0823] <annevk>
Again though, what's the actual input here? If you start with a tree, don't you have to trust that tree already?

[05:01:08.0909] <freddy>
On the other hand, I know that all other sanitizer libraries traverse a DOM tree based on the input (or parse it based on the input) and not even re-use those elements but create completely new ones and copy the bits over selectively. Which is a bit like a clone, but more... iterative

[05:01:56.0050] <freddy>
No. You don't. E.g., `<iframe sandbox="allow-same-origin" src="bad stuff>` contains attacker-controlled stuff and you want to "promote" it into the current document, but need it to be sanitized first

[05:02:13.0997] <freddy>
so `sanitize(iframe.contentDocument)`

[05:03:50.0083] <freddy>
OK, admittedly a `sandbox`ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is `<iframe sandbox="allow-script" src="some-sandbox-domain-for-user-content">` (google, github, mdn, bugzilla use those sandbox-domains _A LOT_). And if you'd want to promote that into a current document you wouldn't iframe it, but instead `XHR()` it and sanitize the returned `document`

[05:04:03.0954] <freddy>
 * OK, admittedly a `sandbox`ed iframe wouldn't have event listeners (because it doesnt script). But maybe your privilege-separation mechanism is `<iframe sandbox="allow-script" src="some-sandbox-domain-for-user-content">` (google, github, mdn, bugzilla use those sandbox-domains _A LOT_). And if you'd want to promote that into a current document you wouldn't iframe it, but instead `XHR()` it and sanitize the returned `document`

[09:13:31.0461] <vrafaeli>
Let me explain one thing that I'm concerned now. Imagine the following scenario.
You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.

But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?
We can hide this HTML element using CSS I guess which is probably optimal.
One of the alternatives is to put "about:blank" in the "src" attribute. But then "iframe" will lose the type information.
So I'm concerned that in this alternative the browser's PDF engine will get "remounted" which might cause performance penalty?

(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)

[09:14:11.0833] <vrafaeli>
> <@annevk:mozilla.org> Yeah, the plan is to obsolete `embed`/`object`. `object` in particular has some capabilities that are unique to it still, but we're chipping away at those.

 * Let me explain one thing that I'm concerned now. Imagine the following scenario.
You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.

But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?
We can hide this HTML element using CSS I guess which is probably optimal.
One of the alternatives is to put "about:blank" in the "src" attribute. But then "iframe" will lose the type information.
So I'm concerned that in this alternative the browsers PDF engine will do the "remount" which might cause performance penalty?

(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)

[09:14:40.0987] <vrafaeli>
 * Let me explain one thing that I'm concerned now. Imagine the following scenario.
You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.

But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?
We can hide this HTML element using CSS I guess which is probably optimal.
One of the alternatives is to put "about:blank" in the "src" attribute. But then "iframe" will lose the type information.
So I'm concerned that in this alternative the browser's PDF engine will do the "remount" which might cause performance penalty?

(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)

[09:14:55.0456] <vrafaeli>
 * Let me explain one thing that I'm concerned now. Imagine the following scenario.
You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.

But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?
We can hide this HTML element using CSS I guess which is probably optimal.
One of the alternatives is to put "about:blank" in the "src" attribute. But then "iframe" will lose the type information.
So I'm concerned that in this alternative the browser's PDF engine will get "remounted" which might cause performance penalty?

(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)

[09:15:52.0811] <vrafaeli>
 * Let me explain one thing that I'm concerned now. Imagine the following scenario.
You list through several PDFs, and in-between (when the loading happens for example) you don't want to show the document.

But I guess we don't want the iframe/embed/object to be removed from the DOM and then added again, cause that might cause performance penalty?
We can hide this HTML element using CSS I guess which is probably optimal.
One of the alternatives is to put "about:blank" in the "src" attribute. But then "iframe" will lose the type information because it doesn't have the "type" attribute.
So I'm concerned that in this alternative the browser's PDF engine will get "remounted" which might cause performance penalty?

(this is perhaps browser specific thing, but I'd appreciate your thoughts on this)

[09:39:08.0693] <annevk>
vrafaeli: the only thing I know about performance is that you want to measure first

[09:40:04.0483] <annevk>
freddy: how would you get iframe.contentDocument unless it's same-origin?

[09:47:07.0133] <freddy>
annevk: (Sorry, I somehow changed direction midsentence above?!) I suppose the more realistic scenario, is that the content is on a sandbox domain that is CORS-enabled and you fetch it via XHR? OK, I see...then the follow-up question is why would anyone add stuff to the document before sanitizing? Mh. I suppose assuming that a framework is operating in mysterious ways? Realistically, people don't write all the code themselves. I admit that it's getting handwavy. 😕 But given that we took the conservative approach with all string-returning APIs, why don't we take the conservative approach when accepting documents?

[09:48:19.0996] <freddy>
Actually, I really have to disconnect. I will be back tomorrow.

[10:24:07.0495] <annevk>
freddy: the conservative approach is to just add setHTML() until we understand this better, imo

[10:53:44.0515] <ntim>
https://twitter.com/argyleink/status/1511761383024521218 pretty sure this should use <popup>


2022-04-08
[06:12:01.0774] <mrkishi>
hey, folks! i think there's a couple of issues with the [named character reference state](https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state) in the html spec but i wanted to check i'm not missing anything before filing an issue...

- the example says character references are not parsed in attributes, but this is not reflected in the algorithm. wouldn't a properly matched name would fall in the `if there's a match > otherwise` branch? (if inside attribute AND last not a semicolon AND followed by either equals or alphanumeric, then flush it, _otherwise_...)
- while browsers will indeed not parse `&notit;` in attributes, they'll parse at least `&amp;`, `&quot;` and `&apos;`, so even if the example is right it doesn't seem to be the whole story

does this seem right?

[06:17:25.0407] <mrkishi>
 * hey, folks! i think there's a couple of issues with the [named character reference state](https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state) in the html spec but i wanted to check i'm not missing anything before filing an issue...

- the example says character references are not parsed in attributes, but this is not reflected in the algorithm. wouldn't a properly matched name fall in the `if there's a match > otherwise` branch? (if inside attribute AND last not a semicolon AND followed by either equals or alphanumeric, then flush it, _otherwise_...)
- while browsers will indeed not parse `&notit;` in attributes, they'll parse at least `&amp;`, `&quot;` and `&apos;`, so even if the example is right it doesn't seem to be the whole story

does this seem right?

[07:35:28.0727] <Yaser Nojavan gol>
Hi

[07:35:53.0600] <vrafaeli>
Anyone knows what the hack is going on with iframe:
https://codesandbox.io/s/iframe-size-bug-bb3hgi?file=/src/App.tsx
Why is it 10% bigger than the defined size? same in Chrome and Mozilla

(The space on the right seems to be of the size of the vetical scrollbar, which is not there. Perhaps the same is true for the bottom excessive size.)

[07:52:06.0376] <emilio>
Without having looked in depth (on the phone) iframes have borders by default, and the default box-sizing is content-box, so the width is what you specified plus borders

[08:03:22.0721] <vrafaeli>
> <@emilio:mozilla.org> Without having looked in depth (on the phone) iframes have borders by default, and the default box-sizing is content-box, so the width is what you specified plus borders

You are rigth regarding the borders. I noticed that also. But the borders are only 2px big. Removing them does reduce the size by negligible amount.

[08:05:14.0764] <vrafaeli>
Seems like the additional size is (borders +) scrollbar

[08:06:44.0515] <vrafaeli>
first is with the 2px iframe border, second is without that

[08:38:38.0591] <vrafaeli>
> <@emilio:mozilla.org> Without having looked in depth (on the phone) iframes have borders by default, and the default box-sizing is content-box, so the width is what you specified plus borders

 * You are correct about the fact that borders do exist. I noticed that also. But the borders are only 2px big and removing them does reduce the size by negligible amount.

[08:50:40.0908] <emilio>
vrafaeli: ok at the computer now. Other than the border, what you're seeing is that the iframe is baseline-aligned by default. You can avoid that with `display: block`, for example

[08:51:02.0659] <emilio>
`<iframe>` is `display: inline` by default, like `<img>` and other replaced elements

[08:52:26.0573] <emilio>
Also `vertical-align: top` would work in your example

[08:52:32.0363] <emilio>
Anyways that's all behaving as expected

[08:57:51.0726] <vrafaeli>
> <@emilio:mozilla.org> vrafaeli: ok at the computer now. Other than the border, what you're seeing is that the iframe is baseline-aligned by default. You can avoid that with `display: block`, for example

I see. Thanks a lot.

[10:11:45.0008] <annevk>
mrkishi: it's an example, by necessity it's not the whole story; and it's an example about a very specific instance so generalizing from it in that way would be wrong

[10:13:00.0896] <mrkishi>
> <@annevk:mozilla.org> mrkishi: it's an example, by necessity it's not the whole story; and it's an example about a very specific instance so generalizing from it in that way would be wrong

right, but the example isn't reflected in the algorithm, and neither is current browser behavior... unless i'm missing something?

[10:14:23.0120] <mrkishi>
i know examples aren't normative :p

[10:14:57.0128] <annevk>
mrkishi: I'm pretty sure the example is correct

[10:16:37.0652] <mrkishi>
> <@annevk:mozilla.org> mrkishi: I'm pretty sure the example is correct

what's your interpretation of this, then?

> If the character reference was consumed as part of an attribute, and the last character matched is not a U+003B SEMICOLON character (;), and the next input character is either a U+003D EQUALS SIGN character (=) or an ASCII alphanumeric, then, for historical reasons, flush code points consumed as a character reference and switch to the return state.
> 
> Otherwise:

and where is the `&amp;`, `&apos;` and `&quot;` exceptions handled?

[10:17:12.0041] <annevk>
Well, you need to start with the first paragraph of https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state

[10:17:50.0255] <annevk>
For `&notit;` that gives you `not` in the table, as the example says. So you have a match.

[10:18:15.0567] <annevk>
But say you're parsing an attribute it won't work as it doesn't end in `;`

[10:18:35.0250] <annevk>
But if the input was `&quot;` it would, since that does end in `;`

[10:18:37.0844] <mrkishi>
oh, i'm an idiot.

[10:19:02.0615] <mrkishi>
this whole time i thought not's named reference was `&notit;`

[10:19:03.0785] <annevk>
Well, I wouldn't go that far; reading specifications is a skill you need to learn

[10:20:00.0952] <mrkishi>
> <@annevk:mozilla.org> Well, I wouldn't go that far; reading specifications is a skill you need to learn

i have some other pretty convincing rationale, but i'll spare you the details

[10:20:05.0806] <annevk>
And even then it can be involved 🙂

[10:20:25.0983] <mrkishi>
thanks for taking a look and so sorry for wasting your time.

[10:20:45.0944] <annevk>
No worries, was fun to learn this again!

[13:53:31.0994] <Yaser Nojavan gol>
vrafaeli: 

[13:55:32.0325] <Yaser Nojavan gol>
💛🤍💜 

[13:55:44.0544] <Yaser Nojavan gol>
Hi


2022-04-10
[00:18:31.0828] <annevk>
I wonder if we should start moderating "Update?" comments. Or would that just create more of them? I'd be inclined to mark them as "Off topic" and see how it goes.


2022-04-12
[01:38:47.0926] <omninode>
Is there a place where one easily can see what features and updates that has been created since the html5 was launched?

[05:13:22.0981] <zcorpan>
 omninode https://platform.html5.org/history/ has history between 2003 and 2014

[05:17:10.0363] <zcorpan>
omninode: https://github.com/whatwg/html/pulls?q=label%3Aaddition%2Fproposal+is%3Apr+is%3Amerged is merged PRs with "addition/proposal" label, though I don't know how consistently the label is used


2022-04-13
[04:57:31.0489] <zcorpan>
This term doesn't show up. What gives? https://respec.org/xref/?term=expose+legacy+touch+event+apis - https://github.com/w3c/touch-events/pull/113 was merged yesterday

[07:16:41.0356] <Domenic>
> <@zcorpan_:matrix.org> This term doesn't show up. What gives? https://respec.org/xref/?term=expose+legacy+touch+event+apis - https://github.com/w3c/touch-events/pull/113 was merged yesterday

Shouldn't it be <dfn export> not <dfn class="export">?

[07:17:13.0169] <zcorpan>
Domenic: https://respec.org/docs/#data-export

[07:20:33.0537] <zcorpan>
https://github.com/w3c/webref/blob/main/ed/dfns/touch-events.json was updated 5 days ago, but the latest reffy run was 2 hours ago

[07:23:16.0914] <Domenic>
Hmm OK, no ideas then :-/

[08:38:33.0775] <zcorpan>
Domenic: ok, thanks. Filed https://github.com/w3c/webref/issues/560

[08:40:53.0221] <zcorpan>
well, now it's there: https://github.com/w3c/webref/blob/main/ed/dfns/touch-events.json#L1266

[08:45:26.0847] <Domenic>
Haha, nice. Just time I guess...

[08:45:37.0200] <Domenic>
Anyone remember navigator.connect and have any links to relevant documentation?

[08:46:15.0708] <zcorpan>
Domenic: yeah. the build still fails, but hopefully some more time will fix it

[08:47:47.0603] <Domenic>
> <@domenicdenicola:matrix.org> Anyone remember navigator.connect and have any links to relevant documentation?

Nevermind, found it: https://mkruisselbrink.github.io/navigator-connect/

[08:48:00.0628] <zcorpan>
Would be nice to shorten the time it takes for terms to flow through


2022-04-14
[08:44:59.0426] <Domenic>
Noam Rosenthal: do you know if PDF responses will respect early hints?

[08:46:36.0683] <Domenic>
Also will step 18 of https://html.spec.whatwg.org/#initialise-the-document-object sometimes try to iterate over null?

[08:52:03.0496] <Domenic>
Filed https://github.com/whatwg/html/issues/7823

[09:15:19.0416] <Noam Rosenthal>
> <@domenicdenicola:matrix.org> Noam Rosenthal: do you know if PDF responses will respect early hints?

I think not
Will double check 

[09:15:45.0584] <Domenic>
Yeah I was unsure whether they happen more at the network layer or inside the document-creation layer or both

[13:56:09.0751] <Domenic>
Does anyone know any realistic URL schemes that use [opaque hosts](https://url.spec.whatwg.org/#opaque-host)?

[15:42:26.0220] <sideshowbarker>
Domenic: https://stackoverflow.com/questions/71872980/cors-cross-origin-error-on-dynamic-load-of-resource

> The base URL is about:blank because import() is called from a CORS-cross-origin script.

…I’ve never seen that error message before

[15:42:36.0980] <sideshowbarker>
 * Domenic: https://stackoverflow.com/questions/71872980/cors-cross-origin-error-on-dynamic-load-of-resource

> The base URL is about:blank because import() is called from a CORS-cross-origin script.

…I’ve never seen that error message before

