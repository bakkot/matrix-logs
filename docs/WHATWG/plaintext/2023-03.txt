2023-03-01
[18:18:42.0118] <zero-one>
this might be a dumb question, but at step 4 of https://url.spec.whatwg.org/#host-parsing , what exactly is meant by "UTF-8 decode"?

[18:18:59.0817] <zero-one>
decoded into... UTF32? i.e, the codepoint value?

[18:19:44.0728] <zero-one>
the link to the encoding spec doesn't really clear it up for me

[18:36:39.0003] <Domenic>
It means "run the algorithm given at that link"

[18:36:58.0432] <Jeremy Roman>
It's not super explicit; the algorithm at that link yields an I/O queue of scalar values

[18:37:29.0631] <zero-one>
yeah, but the algorithm just says that UTF-8 has a decoder, it doesn't explain what that means

[18:37:33.0678] <zero-one>
and to run it

[18:37:39.0995] <Domenic>
Well, if you try to implement it, I wonder where you get stuck

[18:37:44.0804] <Domenic>
You need to keep following the links

[18:38:01.0157] <Domenic>
https://encoding.spec.whatwg.org/#concept-encoding-run , https://encoding.spec.whatwg.org/#concept-encoding-process , etc.

[18:38:16.0646] <Jeremy Roman>
at no point does it ever actually construct a string though

[18:38:43.0384] <Jeremy Roman>
(that I could find)

[18:38:53.0453] <Domenic>
Eventually you end up running the UTF-8 decoder's [handler](https://encoding.spec.whatwg.org/#handler). That is defined at https://encoding.spec.whatwg.org/#ref-for-handler%E2%91%A3 .

[18:40:34.0616] <Jeremy Roman>
process an item pushes said code points into the I/O queue output, and process a queue does so until it fails or reaches the end of the input queue

[18:41:10.0265] <Jeremy Roman>
but UTF-8 decode simply returns that I/O queue of scalar values (code points)

[18:41:44.0014] <Jeremy Roman>
whereas infra describes a string as consisting of code units and then handwaves at ECMA-262 to say that if you have code units you can think of them as code points

[18:43:00.0047] <Jeremy Roman>
even though afaict the linked section of ECMA-262 only actually describes how to interpret code units as code points (and not the reverse), the intent seems to be that a conversion takes place and the URL spec is operating on infra strings

[18:43:43.0157] <Jeremy Roman>
(because nothing else would be sensible)

[18:43:53.0828] <Domenic>
The conversion is defined here: https://encoding.spec.whatwg.org/#from-i-o-queue-convert . I think it is intended to be explicit, but it used to be implicit, and maybe not all cases were updated...

[18:44:48.0171] <Domenic>
Or maybe https://github.com/whatwg/infra/issues/319 is saying that it's meant to be implicit, but not defined yet

[18:45:35.0270] <Andreu Botella>
Yeah, the idea was to have implicit conversions between I/O streams and strings/lists, but looking back at it I'm not sure that's a great idea anymore

[18:45:55.0761] <Andreu Botella>
That was my first relatively large spec contribution 😬

[18:48:03.0085] <Jeremy Roman>
I think there probably should be an explicit algorithm that does the UTF-16 encode on the scalar values; just kinda saying that somehow you end up with a string that UTF-16 decodes into the same scalar values feels magical to me

[18:48:08.0881] <Jeremy Roman>
though dunno if it's a big deal

[18:48:27.0204] <zero-one>
as an amateur trying to implement all these specs, i wonder why we don't just assume UTF-8-encoded input for the URL parser

[18:48:34.0480] <zero-one>
given that you have to do the conversion several times anyway

[18:49:06.0893] <zero-one>
and in 2023, i have to imagine that implementations not using UTF-8 anyway are few and far between

[18:49:43.0480] <Jeremy Roman>
afaik most implementations actually pass UTF-16 to the URL parser quite frequently

[18:49:53.0172] <Jeremy Roman>
because ECMAScript defines strings as having 16-bit code units

[18:50:00.0226] <Jeremy Roman>
even though that's now what's spoken on the wire

[18:50:26.0093] <Jeremy Roman>
 * afaik implementations actually pass UTF-16 to the URL parser quite frequently

[18:51:16.0360] <Jeremy Roman>
https://infra.spec.whatwg.org/#strings

[18:52:23.0694] <zero-one>
i guess if the URL parser is tightly coupled to a js engine, it makes more sense

[18:52:29.0516] <zero-one>
but if there's an IO boundary there, then idk

[18:55:13.0353] <Jeremy Roman>
short version is the use of UTF-8 on the wire and 16-bit code units in ECMAScript means there's nothing that doesn't end up with some amount of transcoding around the place

[18:55:31.0071] <Andreu Botella>
In the case of the URL parser, the `encoding` argument (which is the HTML page's encoding) affects how query strings are encoded, but not the rest of the URL

[18:55:33.0673] <Jeremy Roman>
at least for valid sequences of Unicode scalar values that's lossless

[18:55:45.0514] <Andreu Botella>
The reason behind this is probably historical

[18:56:07.0566] <zero-one>
> <@abotella:igalia.com> In the case of the URL parser, the `encoding` argument (which is the HTML page's encoding) affects how query strings are encoded, but not the rest of the URL

ah

[18:59:49.0941] <Jeremy Roman>
> <@abotella:igalia.com> The reason behind this is probably historical

good old hysterical raisins

[19:03:48.0662] <Andreu Botella>
I just remembered this ISO-2022-JP weirdness that affects query string percent-encoding: https://encoding.spec.whatwg.org/#pit-of-iso-2022-jp

[00:53:26.0858] <Ms2ger>
TabAtkins: 
```
WARNING: Error downloading anchors/anchors-ur.data, full error was:

WARNING: Error downloading anchors/anchors-vi.data, full error was:

Updated 2398/2400, 1 errors...
FATAL ERROR: Done, but there were 2 errors (of 2400 total) in downloading or saving. Run `bikeshed update` again to retry.

```

[06:13:32.0575] <annevk>
I think implicit conversion is still fine. Though if we wanted to avoid that we'd need a bunch of wrapper algorithms instead. Putting the burden on each caller to do the conversion seems bad.

Defining the URL parser as byte sequence -> URL is an interesting idea and it definitely makes sense for implementations. Conceptually though scalar value string -> URL seems a lot cleaner.

And as most formats tend to do a byte sequence -> scalar value string conversion early on it's probably also better for callers. Though again that might only be true in concept as implementations could certainly store those URL inputs as byte sequences too.

[06:21:45.0851] <Ms2ger>
> <@ms2ger:igalia.com> TabAtkins: 
> ```
> WARNING: Error downloading anchors/anchors-ur.data, full error was:
> 
> WARNING: Error downloading anchors/anchors-vi.data, full error was:
> 
> Updated 2398/2400, 1 errors...
> FATAL ERROR: Done, but there were 2 errors (of 2400 total) in downloading or saving. Run `bikeshed update` again to retry.
> 
> ```

Not sure what I did, but I managed an update and now everything seems to work again

[06:26:12.0668] <annevk>
WebIDLpedia \o/ https://dontcallmedom.github.io/webidlpedia/


2023-03-02
[16:20:04.0837] <annevk>
mfreed: any chance you could look at the remaining popover issues/PRs this week?

[01:22:16.0657] <hsivonen>
miketayl_r: Does Privacy Budget currently sometimes deny `getHighEntropyValues` or cause it to alter its response or does `getHighEntropyValues` always succeed and return actual high-entropy values?

[01:24:35.0953] <hsivonen>
> <@hsivonen:mozilla.org> miketayl_r: Does Privacy Budget currently sometimes deny `getHighEntropyValues` or cause it to alter its response or does `getHighEntropyValues` always succeed and return actual high-entropy values?

I'm somewhat skeptical of the practicality of Chrome implementing https://bugs.chromium.org/p/chromium/issues/detail?id=1259413 or any other browser implementing a user-visible prompt with the first and promoted-to-Web-developers implementation having been out there without a prompt.

[07:11:27.0902] <annevk>
So many leftover popover issues. And review already took quite a while. Sigh.

[10:44:33.0945] <Dominic Farolino>
postMessaging a SharedArrayBuffer cross-agent-cluster should result in a DataClone error, right? Per https://html.spec.whatwg.org/multipage/structured-data.html#structureddeserialize:~:text=is%20%22SharedArrayBuffer%22%2C%20then%3A-,If%20targetRealm%27s%20corresponding%20agent%20cluster%20is%20not%20serialized.%5B%5BAgentCluster%5D%5D%2C%20then%20then%20throw,-a%20%22DataCloneError (step 12 > 1).

[10:48:06.0929] <Andreu Botella>
The spec says to throw a DataClone error thrown when deserializing a `SharedArrayBuffer` from a different agent cluster (so not in `postMessage`; instead, you'd get an `error` event at the other end rather than a `message` event), but I don't think that is even possible

[10:49:12.0723] <Dominic Farolino>
yeah I can't reproduce an error event on the receiving end in either Chrome or Firefox, unless I'm doing it wrong

[10:50:16.0916] <Andreu Botella>
I had the mental model that it was impossible to `postMessage` anything to a different agent cluster, but I'm not actually sure if that's right

[10:51:09.0197] <Dominic Farolino>
postMessage is mostly for things in a different agent cluster

[10:51:15.0155] <Dominic Farolino>
i.e., cross-origin iframes

[10:51:46.0184] <Dominic Farolino>
its just that SharedArrayBuffers are restricted to moving between agents _inside_ an Agent cluster, since we don't have cross-origin shared memory

[10:52:19.0949] <Andreu Botella>
my mental model was mostly based on `Worker.prototype.postMessage`, I think

[10:52:28.0842] <Andreu Botella>
since I was working on that in the context of Deno

[10:52:30.0011] <Dominic Farolino>
I see

[10:56:42.0045] <annevk>
Dominic Farolino: since you don't know upfront whether it'll go cross-agent-cluster the error happens when deserializing

[10:58:33.0671] <Dominic Farolino>
Right, I knew that part (I didn't clarify that in my question). I just can't observe the error being thrown on the receiver side

[10:59:24.0569] <annevk>
Dominic Farolino: there's no `messageerror` event?

[11:00:09.0758] <Dominic Farolino>
Sheesh. I thought I could catch it with `window.onerror`, sorry :/

[11:01:10.0126] <Dominic Farolino>
Heh, yep that works

[11:01:32.0382] <annevk>
Ah great, this was all a bit of a crapshoot at some point so it's nice that at least parts of it work as intended now.

[11:04:35.0129] <Dominic Farolino>
Yeah I definitely missed the part of https://html.spec.whatwg.org/#posted-message-task-source that says "If this throws an exception, catch it, fire an event named messageerror at targetWindow [...]". Cool, thanks


2023-03-03
[17:27:42.0833] <Domenic>
> <@annevk:matrix.org> So many leftover popover issues. And review already took quite a while. Sigh.

There are some Google folks brainstorming on how we can do better in cases like this. I think there are ways we can make the process less painful (a major part of their concern) but ultimately I also think for large features like this you sometimes just have to accept you'll discover spec bugs in the second implementation. I think that's happened with many other large features too, e.g. service workers.

[17:31:47.0377] <annevk>
This isn't anything like introducing a new environment though. Or at least, I don't think it is.

[17:32:40.0250] <annevk>
I think automated formatting would go a long way toward making the process less painful.

[17:36:09.0018] <Domenic>
I agree it would be less painful, but many of the issues you all are finding aren't formatting issues

[17:36:32.0778] <Domenic>
Some of them are theoretically tooling-detectable (e.g. mismatched algorithm declarations vs. call sites) but several are just solid consistency finds, better APIs, ...

[05:52:10.0385] <annevk>
That's true, but at least I notice I find it hard to spot those when there's formatting errors. And I worry that once I've put a bunch of effort into pointing out various errors, I might no longer be as vigilant the next time around, but that might vary depending on how much time has passed.

[07:39:42.0079] <Dominic Farolino>
Heh, any chance specfmt could help there? (specifically with the formatting)

[08:17:09.0886] <annevk>
Dominic Farolino: if it gets to a stage where it's part of CI somehow, yes


2023-03-06
[15:22:50.0771] <annevk>
dlrobertson: you wrote the 1000th Fetch commit \o/

[15:23:56.0223] <dlrobertson>
Ha! I'll make a plaque for this

[15:24:05.0015] <dlrobertson>
Definitely my greatest achievement to date

[15:25:34.0979] <dlrobertson>
expect a acceptance/life-achievement speech posted to the youtubes shortly 😆


2023-03-07
[06:21:49.0918] <annevk>
Adam Rice: all those isURL libraries do seem to do the equivalent of a hypothetical URL.canParse. Why do you expect that callers want something else? What would they want?

[06:24:59.0891] <Adam Rice>
Thanks for checking. I thought they might want a validation that the input "looks" like a URL, eg. it only has one colon after the scheme, no punctuation in the hostname, no double-slashes in the path, stuff like that.

[06:27:23.0701] <Adam Rice>
I don't know what to make of the fact that there are three different libraries that do the equivalent of `new URL` inside a try ... catch. I guess we need to "pave the cowpath" here.

[06:35:58.0074] <annevk>
Adam Rice: some do offer additional things like isHTTPURL() (not sure how to case that properly), but that's on top

[07:57:43.0035] <Eric Portis (he/him)>
Noam Rosenthal: I need to do some thinking about https://github.com/whatwg/html/issues/8143#issuecomment-1457636957 (particularly the "it's easy" bit...), but my first reaction is, what about audio and video?

[08:01:25.0574] <Noam Rosenthal>
Eric Portis (he/him): yea, easier than with images, I'll reword.

[08:03:42.0277] <Noam Rosenthal>
Eric Portis (he/him): you mean like CSS video backgrounds? Is that a thing? Video/Audio elements have a `crossorigin` attribute

[08:06:48.0280] <Eric Portis (he/him)>
Ok so adding `crossorigin` falls under the "it's easy" part, hm. background-image: url(whatever.mp4) might actually work in Safari? I should test that. But generally not a thing.

[08:07:34.0292] <Noam Rosenthal>
Eric Portis (he/him): adding `crossorigin` in conjunction with usually having a lot more images from different sources on the page than video/audio

[08:08:08.0616] <Noam Rosenthal>
but I think starting with images and perhaps expanding to audio/video if we see a need/value/adoption is reasonable

[08:08:54.0512] <Noam Rosenthal>
note also that no-cors video/audio has strange issues with service-workers because of range (206) requests

[08:41:05.0813] <Noam Rosenthal>
Eric Portis (he/him): btw for CSS images I hope to get this in at some point: https://github.com/w3c/csswg-drafts/pull/8222 but it won't make CORS CSS images "easy" (only "possible")

[09:37:09.0949] <Eric Portis (he/him)>
@noamr amazing, thank you!! (also thanks for [plugging CSS image fetching into Fetch](https://github.com/w3c/csswg-drafts/pull/6715]... 🙌🏻🙏🏻)

[09:38:05.0829] <Eric Portis (he/him)>
 * Noam Rosenthal:  amazing, thank you!! (also thanks for \[plugging CSS image fetching into Fetch\](https://github.com/w3c/csswg-drafts/pull/6715\]... 🙌🏻🙏🏻)

[09:38:34.0252] <Eric Portis (he/him)>
 * Noam Rosenthal:  amazing, thank you!! (also thanks for plugging CSS image fetching into Fetch (https://github.com/w3c/csswg-drafts/pull/6715)... 🙌🏻🙏🏻)

[10:45:03.0261] <TabAtkins>
Noam Rosenthal: apologies for the delay on #8222, will get to it as soon as i can


2023-03-08
[23:18:22.0928] <Domenic>
jsdom/whatwg-url, and thus Live URL viewer, has finally figured out its IDNA issues. Fun examples like https://jsdom.github.io/whatwg-url/#url=aHR0cHM6Ly94bi0tNC0wYmQxNTgwOGEuLi4v&base=YWJvdXQ6Ymxhbms= and https://jsdom.github.io/whatwg-url/#url=aHR0cDovL3huLS1sczhoPS8=&base=YWJvdXQ6Ymxhbms= now match the spec.

[00:46:23.0644] <zcorpan>
The spec PR preview links for html are in alphabetical order. Is it possible to make them be in the spec's natural order instead?

[00:47:36.0241] <zcorpan>
or maybe a link to an annotated ToC would be better

[06:20:59.0702] <annevk>
Domenic: oh that's great, good place to be in before Unicode considers our feedback

[11:48:44.0926] <Lucas Carlesso>
Is there a contradiction between the description of the b and strong elements? If strong can be used to "distinguish the part that really matters from other parts that might be more detailed, more jovial, or merely boilerplate." And "to denote the part of the text that the user is intended to read first." would not it also cover "key words in a document abstract" and "an article lede", which are given as use cases for the b element?


2023-03-09
[00:10:25.0714] <hsivonen>
https://github.com/WebKit/standards-positions/issues/140#issuecomment-1461388677 indicates that WebKit has a bucket-based privacy mechanism for `navigator.languages`. Where can I read a description of the mechanism?

[00:56:26.0637] <Domenic>
Maybe https://github.com/WebKit/WebKit ? :)

[00:57:40.0118] <hsivonen>
> <@domenicdenicola:matrix.org> Maybe https://github.com/WebKit/WebKit ? :)

I was hoping for something other that trying to locate the relevant bits in the source.

[00:59:03.0239] <Domenic>
I got as far as https://github.com/WebKit/WebKit/blob/main/Source/WTF/wtf/Language.cpp#L98, seems promising

[01:08:23.0677] <hsivonen>
AFAICT, the actual minimization happens in `minimizedLanguagesFromLanguages` of `NSLocale`. Is that a private undocumented API?

[11:41:41.0122] <zcorpan>
Chris Harrelson: what is the chromium status is for https://github.com/w3c/csswg-drafts/issues/8261 ?

[11:42:13.0206] <zcorpan>
emilio: ^ same for firefox :) looks like we render visible boxes on release for U+0000

[11:44:39.0969] <zcorpan>
(context: https://bugzilla.mozilla.org/show_bug.cgi?id=1818910 )

[12:31:34.0679] <timothygu>
annevk: is it too late to add something to the Unicode meeting agenda? https://github.com/whatwg/url/issues/760 seems like a UTS 46 bug

[13:36:23.0026] <leoskay12311>
ass

[13:39:17.0145] <Triton Creations>
I'm dead 💀 xd


2023-03-10
[17:08:12.0821] <annevk>
timothygu: are you willing to file? I can also file

[17:08:43.0318] <timothygu>
annevk: it'd be great if you could do it, considering you already have a list of other related issues

[17:09:49.0154] <annevk>
timothygu: I already submitted those, but I can next week I guess

[17:09:53.0627] <annevk>
timothygu: https://corp.unicode.org/reporting/error.html is the form

[17:10:46.0553] <timothygu>
Hmm okay, I can try to write it up. I'll update the ticket if I do

[17:24:41.0374] <Domenic>
The fact that Unicode people updated ICU but not TR46 seems bad... is that common?

[04:23:10.0897] <sideshowbarker>
Is anybody aware of a list somewhere of web-platform features that are implemented in Chromium/Blink but not enabled/shipped in Edge?

[04:24:13.0619] <sideshowbarker>
I guess I could write something to generate a list myself based on BCD data, but would like to same myself the time if possible

[04:26:14.0093] <sideshowbarker>
for example, I’m aware of [the case of AVIF not being enabled in Edge](https://caniuse.com/avif) and would like to identify other such cases 

[04:26:55.0783] <sideshowbarker>
(and I’m aware already that the AVIF case happens to be due to a licensing issue)

[05:48:11.0422] <annevk>
I was going to write that ICU only recently became part of Unicode, but apparently that happened in 2016... So yeah, that does seem bad.

[06:45:55.0991] <annevk>
hsivonen: I regret not paying closer attention to `Intl.`; those APIs pulling in end user preferences is such a bad idea

[09:58:10.0587] <emilio>
zcorpan: I'd ask jfkthame

[09:58:11.0610] <emilio>
(sorry I replied to this earlier but bad internet connection)

[09:58:12.0279] <emilio>
So I just noticed it hadn't been sent


2023-03-12
[23:33:01.0925] <Domenic>
Anyone able to be a good reviewer for CSSOMView / MouseEvents stuff? A community contributor to jsdom is trying to improve the test coverage, and it looks like browsers aren't doing great, so getting some opinion on which of the browser/test/specs should change would be helpful: https://github.com/web-platform-tests/wpt/pull/38912

[06:44:52.0790] <Noam Rosenthal>
Domenic: yes I encountered these exact issues when I was chasing layout thrashing in wikipedia. e.g. https://bugs.chromium.org/p/chromium/issues/detail?id=1054515. My opinion is that interop around mouse events is terrible. Perhaps this can go into interop2024?

[06:45:29.0440] <Noam Rosenthal>
it needs a concentrated cross-vendor effort to get fixed

[06:52:12.0890] <Noam Rosenthal>
IIRC there was some reluctancy to touch any of this because of backwards compatibility


2023-03-13
[01:08:35.0915] <sideshowbarker>
Sam Sneddon [:gsnedders]: jgraham it’d be great if one of you could either give me owner access to the html5lib-tests repo, or else take a look at https://github.com/html5lib/html5lib-tests/pull/152 and figure out why the workflow isn’t running.

I suspect it may be because the repo has some setting that requires approvals for workflows in PRs before they can run.

Otherwise, I don’t know what would be preventing the workflow from running there.

[03:44:25.0697] <Sam Sneddon [:gsnedders]>
> <@noamr:matrix.org> Domenic: yes I encountered these exact issues when I was chasing layout thrashing in wikipedia. e.g. https://bugs.chromium.org/p/chromium/issues/detail?id=1054515. My opinion is that interop around mouse events is terrible. Perhaps this can go into interop2024?

documenting all the cases where it's caused problems (like layout thrashing in Wikipedia) seems like it would both be a lot of effort _but_ would probably make a much more compelling argument in favour of including it in Interop

[03:49:47.0754] <jgraham>
Yeah, seems like it would be an investigation, right? Unless we already have a very clear idea of what the behaviour should be and the problem is just that people aren't implementing it right. I don't off the top of my head have loads of examples of it causing webcompat issues, but maybe if it's a perf footgun that would be enough of an argument.

