2015-10-01
[18:13:02.0000] <botie>
zcorpan_, at 2015-09-14 16:21 UTC, MikeSmith said: about https://critic.hoppipolla.co.uk/r/5796 (SVG thing) yeah I've spoken with the commenter and I need to also fix the bug in the checker code

[01:50:57.0000] <philipj>
annevk: reviewers wondering why !important on ::background { display: block } in https://codereview.chromium.org/1372413004/

[02:01:01.0000] <annevk>
philipj: I suspect anything else would lead to some undefined behavior

[02:01:18.0000] <annevk>
philipj: e.g., is it defined what display-table-row means for a box floating around?

[02:01:48.0000] <philipj>
annevk: hmm, perhaps, I'm not sure how the backdrop is actually implemented

[02:01:52.0000] <tobie>
robertkowalski: this is sort of a chicken and egg problem. Implementors want to use the language they're familiar with.

[02:02:03.0000] <philipj>
I'll link to here and let the reviewers ponder the issue

[02:03:04.0000] <annevk>
philipj: generally though I'd like to defer to roc when it comes to the styling issues

[02:03:06.0000] <tobie>
robertkowalski: …argue that they're not getting any help from Web developers, so why would they make the effort of converting everything in a new technology?

[02:04:19.0000] <tobie>
robertkowalski: arguably, that's circular logic of the same kind as saying you don't need to support browser X as you have no traffic using said browser (because your site doesn't work with it).

[02:04:53.0000] <tobie>
robertkowalski: but on the other hand, it is very possible that no one is using that browser.

[02:05:36.0000] <philipj>
annevk: does roc have a GitHub account? I can't find him

[02:05:39.0000] <tobie>
robertkowalski: if you don't have external data to validate your assumption, you can't make an informed decision.

[02:05:52.0000] <annevk>
philipj: rocallahan

[02:05:58.0000] <tobie>
robertkowalski: and thus, we're stuck with python. :)

[02:06:10.0000] <philipj>
annevk: thanks

[02:08:24.0000] <annevk>
Updating OS X has been painless thus far \o/

[04:20:30.0000] <annevk>
Domenic: writing out all those URL members again is no fun

[04:21:30.0000] <annevk>
Domenic: also, once they're all written out, we should probably try to deduplicate some, since the repetition of requirements across four features is not great

[04:57:13.0000] <smaug____>
annevk: any opinion on whether an API which should work only in top level browsing context and other browsing context from the same domain should be hidden in other contexts

[04:57:16.0000] <smaug____>
or just no-op

[04:58:52.0000] <annevk>
smaug____: no-op/throw

[04:59:02.0000] <smaug____>
k

[04:59:15.0000] <smaug____>
any particular reason?

[04:59:16.0000] <annevk>
smaug____: e.g., APIs only allowed in "secure contexts" throw in insecure contexts

[04:59:26.0000] <smaug____>
I don't have any opinion on this matter :)

[05:00:03.0000] <annevk>
smaug____: and there might be some difficulty with low-level VM sharing stuff if the APIs we expose differ, but that's all rather theoretical at this point I believe

[05:01:07.0000] <smaug____>
not sure what sharing that would be about

[05:01:20.0000] <smaug____>
but in Gecko hiding APIs would be rather trivial

[05:01:44.0000] <smaug____>
(we do hide plenty of chromejs only APIs from content, and also b2g APIs)

[05:41:16.0000] <annevk>
smaug____: yeah I know, but I think at this point we should keep hiding for non-web stuff and have web stuff exposed everywhere

[05:41:37.0000] <annevk>
smaug____: PortCollection is gone from the specification btw

[05:41:56.0000] <smaug____>
noticed, thanks

[05:42:08.0000] <smaug____>
annevk: well, we certainly don't want to expose chromejs stuff

[05:42:20.0000] <annevk>
right

[06:09:11.0000] <Guest62>
hello,

[06:09:40.0000] <Guest62>
I need to talk with Tab Atkins,

[06:10:09.0000] <tscosj>
Tab,

[06:10:14.0000] <tscosj>
Can I talk to you rn?

[07:05:26.0000] <annevk>
philipj: apologies for flip-flopping on that super trivial PR

[07:05:34.0000] <annevk>
philipj: still up to you what you do though

[07:07:29.0000] <philipj>
annevk: I'll flip it back then :)

[08:22:17.0000] <smaug____>
!seen foolip

[08:22:36.0000] <smaug____>
hmm, perhaps there isn't any bot here to answer to that

[08:22:51.0000] <smaug____>
/me wonders if blink doesn't event warn about /deep/

[08:22:57.0000] <Ms2ger>
philipj, ^

[08:24:30.0000] <smaug____>
aha, wrong nick

[08:28:05.0000] <caitp>
did the whole "what do we do about cross-origin uses of well-known symbols" thing on public-script-coord ever get definitively resolved?

[08:41:00.0000] <annevk>
caitp: no, there's a couple open issues against the HTML standard on defining cross-origin Location and Window objects

[08:41:31.0000] <annevk>
caitp: it's something I want to look into if nobody beats me to it, since it seems like a rather important thing to define

[08:47:42.0000] <caitp>
I ask because I'm not sure how flexible we need to make this "don't throw if the object needs security checks" thing needs to be

[08:50:49.0000] <caitp>
like, if it's good enough to just make the value look undefined/not present, or if it's important to know that the value couldn't be retrieved due to a failed access check

[09:10:42.0000] <annevk>
caitp: I haven't investigated

[09:10:55.0000] <annevk>
caitp: from past experience some folks want security errors to throw, others prefer silent failure

[09:18:12.0000] <TabAtkins>
caitp: I think there's supposed to be a symbol registry, where you can obtain a symbol associated with a string, and they're identical across windows when generated from the sand string?

[09:18:54.0000] <caitp>
right, but I mean, the spec uses well known symbol hooks, and doesn't care about whether anything is cross origin/whatever

[09:19:38.0000] <TabAtkins>
Yeah, the spec's "well-known symbols" are identical cross origin.

[09:19:54.0000] <caitp>
so it's like, 1 option is just pretend cross origin objects don't have the symbol hook at all, and that splits into "the spec'd access won't throw, it will just ignore it, but user accesses to the hook will throw"

[09:19:57.0000] <TabAtkins>
P sure

[09:20:12.0000] <caitp>
or another one is "never throw, just treat the symbol hook as undefined for cross origin objects"

[09:21:48.0000] <TabAtkins>
I wonder who that Guest62 person was?

[09:28:19.0000] <annevk>
TabAtkins: sam as tscosj most likely but not sure who that is either

[09:29:20.0000] <TabAtkins>
Oh, I blocked tscosj as some random pming me.

[09:29:32.0000] <TabAtkins>
How do I unignore?

[09:29:40.0000] <TabAtkins>
Also, who Sam?

[09:30:18.0000] <TabAtkins>
Dammit, autocorrect, I meant rando.

[09:35:05.0000] <annevk>
TabAtkins: s/sam/same/

[09:35:34.0000] <TabAtkins>
Ah

[11:42:21.0000] <tobie>
TabAtkins: quick bikeshed question: Would need to add a small paragraphe to the conventions section found in the footer. Is there anyway for me to do this simply?

[11:43:10.0000] <TabAtkins>
tobie: Need to adjust your footer include.

[11:43:27.0000] <TabAtkins>
For whatever group you're publishing as.

[11:44:37.0000] <tobie>
Mmm. So I can't have custom, per spec conventions, then.

[11:46:28.0000] <tobie>
:(

[12:16:03.0000] <tobie>
I guess I'll just stick the content in a note somewhere.

[13:14:48.0000] <Domenic>
tobie: I just hide the conventions boilerplate and add my own section.

[14:31:45.0000] <aleray>
hi, how can I replace html entites by their equivalent unicode code point?

[14:32:09.0000] <aleray>
using htmllib python

[14:32:32.0000] <gsnedders>
aleray: htmllib or html5lib?

[14:33:47.0000] <gsnedders>
aleray: and what are you actually trying to do? why do you want to replace them?

[14:33:51.0000] <aleray>
I'm working on a filter for typography (fixing various spacing/punctuation patterns) and I get chuncked Character tokens because of HTML entities like &nbsp;

[14:34:03.0000] <aleray>
gsnedders, html5lib, sorry

[14:34:55.0000] <gsnedders>
aleray: you probably want to parse the whole thing into a tree and then work from that, tbh

[14:35:06.0000] <gsnedders>
aleray: the tokenizer alone is probably always never the way to go

[14:36:33.0000] <gsnedders>
aleray: basically the tokenizer makes no guarantees, and in some situations won't work correctly without the parser's feedback

[14:37:35.0000] <aleray>
so I I have "name&thinsp;: value" it seems like the tokens yield are "name" + &nbsp + ": value"

[14:37:52.0000] <aleray>
gsnedders, here is how I use my filter: http://dpaste.com/1WBAYG6

[14:38:01.0000] <gsnedders>
the API makes no guarantees as to where character tokens get split up, FWIW

[14:38:17.0000] <gsnedders>
I'm pretty sure the tokenizer shouldn't return an character reference ever?

[14:38:41.0000] <gsnedders>
oh, you're doing this at the serialiser level

[14:38:48.0000] <gsnedders>
sorry, I thought you meant the tokenizer tokens

[14:39:57.0000] <aleray>
gsnedders, my explanations might be confused, sorry.

[14:40:30.0000] <gsnedders>
aleray: nah, we just have two things called "tokens" and it's really bloody confusing.

[14:40:44.0000] <gsnedders>
aleray: we should name stuff better, but I don't know what's better :)

[14:43:58.0000] <gsnedders>
aleray: um, the filter is getting three character tokens, u'name', u'\u2009', and u': value'. there's no character references there.

[14:46:24.0000] <gsnedders>
aleray: so that's definitely a bug in html5lib, because it shouldn't be creating adjacent text nodes in the DOM leading to that. the simplest suggestion would be to use etree (which is the default) instead of dom, if you're not wed to the tree format anywhere

[14:46:52.0000] <gsnedders>
aleray: then with etree you get {u'data': u'name\u2009: value', u'type': u'Characters'} which is what I'd expect?

[14:47:06.0000] <gsnedders>
aleray: (sorry for being a bit rambly here)

[14:49:17.0000] <aleray>
gsnedders, sorry, back

[14:50:12.0000] <aleray>
gsnedders, yes, this is exactly what I want

[14:50:55.0000] <aleray>
let me try

[14:52:16.0000] <gsnedders>
aleray: note if anyone touches the DOM you can end up with adjecent text nodes (because they can just append another) and in a few cases the HTML parser creates them (e.g., foo<table>bar</table> creates "foo", followed by "bar", followed by an empty table element)

[14:52:27.0000] <gsnedders>
aleray: but in that case that's just a bug in html5lib

[14:53:07.0000] <aleray>
gsnedders, thanks. I switched to etree and that is perfect

[14:53:22.0000] <gsnedders>
aleray: (etree avoids this because it /can't/ have adjacent text nodes in its data model)

[14:53:30.0000] <aleray>
Should this be documented somewhere?

[14:54:07.0000] <aleray>
I don't remember why I used dom in the first place. Maybe because it was easier to work with�

[14:54:53.0000] <gsnedders>
I'm filing a bug on this.

[14:55:09.0000] <gsnedders>
When we finally get round to having decent docs, we should push people more strongly away from dom.

[14:55:56.0000] <aleray>
gsnedders, let me know when you filled the bug so I can reference to it in my code

[14:56:20.0000] <aleray>
and just so you know I'm in love with HTML5lib

[14:57:33.0000] <gsnedders>
https://github.com/html5lib/html5lib-python/issues/208

[14:59:08.0000] <gsnedders>
aleray: ^^

[15:02:43.0000] <aleray>
gsnedders, thanks. Reference in my code. Thanks a lot for your help. It turned out to be more simple than I though :)

[15:06:50.0000] <gsnedders>
aleray: np, in general dom is just hidious in python


2015-10-02
[18:09:53.0000] <MikeSmith>
annevk: http://stackoverflow.com/questions/32897921/why-does-this-cors-request-to-a-google-drive-sheet-fail-in-firefox-works-in-c

[19:22:34.0000] <zewt>
what the holy shit

[19:22:48.0000] <zewt>
adblock hijacked new window on chrome to show an ad for itself

[19:23:08.0000] <zewt>
google should kill the extension outright for that level of abuse

[19:24:45.0000] <zewt>
time to try ublock

[23:54:46.0000] <zcorpan>
jgraham: i nominate cvrebert for push access to web-platform-tests

[23:59:32.0000] <MikeSmith>
zcorpan: seconded

[00:22:41.0000] <annevk>
MikeSmith: seems like a security bug in Chrome

[00:22:51.0000] <annevk>
MikeSmith: they're not requiring CORS headers on redirects

[00:24:38.0000] <MikeSmith>
annevk: oh

[00:25:44.0000] <annevk>
I would have thought that would be covered by the testsuite though

[00:25:52.0000] <annevk>
But perhaps Chrome is not really trying to conform to it

[00:32:04.0000] <MikeSmith>
Ms2ger: > zcorpan: jgraham: i nominate cvrebert for push access to web-platform-tests

[00:32:16.0000] <MikeSmith>
Ms2ger: > MikeSmith: zcorpan: seconded

[00:32:19.0000] <Ms2ger>
thirded

[00:32:26.0000] <MikeSmith>
k

[00:33:27.0000] <MikeSmith>
Ms2ger: so we can either wait to get confirmation from jgraham or one of us can just flip on his push perms now

[00:34:07.0000] <Ms2ger>
Go for it

[00:37:00.0000] <MikeSmith>
done

[01:30:01.0000] <mkwst>
annevk: Good morning! Would you prefer that I specify `frame-ancestors` as a network error in Fetch, or as a something something for Documents in HTML?

[01:30:20.0000] <mkwst>
MikeSmith: I think that CORS issue is an artifact of Chrome's HSTS handling.

[01:31:15.0000] <mkwst>
MikeSmith: docs.google.com is preloaded in Chrome, so the redirect never really happens.

[01:32:33.0000] <annevk>
mkwst: I'm not sure

[01:34:38.0000] <mkwst>
annevk: Me neither. :)

[01:35:17.0000] <mkwst>
Fetch is appealing, because it seems straightforward and avoids the work necessary to figure out _where_ in HTML to do the check.

[01:36:05.0000] <annevk>
mkwst: sounds reasonable

[01:36:21.0000] <annevk>
mkwst: if it's trivial to do in Fetch, just do it there I guess

[01:36:23.0000] <mkwst>
annevk: I'll type it up and then we can go back and decide it was a bad idea later.

[01:36:28.0000] <annevk>
mkwst: can always refactor

[01:36:37.0000] <annevk>
mkwst: either way it needs to behave as a network error

[01:38:09.0000] <mkwst>
Actually, we have a CSP hook at the bottom of main fetch anyway. I'll just do it there. Ha.

[01:39:36.0000] <mkwst>
But it might be reasonable to have a check for `x-frame-options` as well?

[01:39:37.0000] <mkwst>
Hrm.

[01:57:43.0000] <annevk>
mkwst: can't CSP also handle x-frame-options?

[01:57:53.0000] <annevk>
mkwst: seems like the easiest for CSP to just define both headers

[01:58:06.0000] <annevk>
mkwst: and handle them in the same algorithm

[01:58:16.0000] <annevk>
mkwst: presumably that's what implementations do too

[01:58:59.0000] <mkwst>
If only they acted the same.

[01:59:15.0000] <mkwst>
x-frame-options is a bit broken, as it only checks the top-level origin.

[01:59:26.0000] <mkwst>
But sure. *shrug* Isn't there an RFC?

[02:00:04.0000] <annevk>
there is http://tools.ietf.org/html/rfc7034 it seems but that's kind of useless without integration

[02:00:24.0000] <annevk>
also very verbose...

[02:00:54.0000] <mkwst>
Well, let me finish the things I know I need to do before I grab more work. :)

[02:02:25.0000] <annevk>
if you don't specify it please file an issue on Fetch

[02:02:38.0000] <annevk>
seems like a shame to not define how that header actually interacts with Fetch

[02:34:21.0000] <mkwst>
annevk_: yes. it ought to be defined. if i have time, i'll do it.

[02:34:44.0000] <annevk_>
\o/

[02:58:29.0000] <yhirano_>
annevk_: can you take a look at https://github.com/whatwg/fetch/pull/128?

[03:18:00.0000] <annevk>
yhirano_: will do today, sorry

[03:24:42.0000] <yhirano_>
annevk: thank you

[03:54:31.0000] <annevk>
I think I understand mounir's feelings about reviewing a little better now

[03:54:44.0000] <annevk>
It's no fun

[04:04:31.0000] <mounir>
annevk: tell me more about that :)

[04:04:31.0000] <botie>
will do

[04:06:40.0000] <zcorpan>
/me slaps botie

[05:09:26.0000] <annevk>
mounir: reviewing PRs to standards is not the most fun thing to do

[05:10:04.0000] <annevk>
mounir: but it's necessary to grow the set of folks who can write them

[05:15:39.0000] <annevk>
Domenic: basically, the problem is that if you assign a blob URL to a number of elements, you want to know which one ends up using it

[05:16:15.0000] <annevk>
Domenic: if I assign a blob URL to two <a> elements, and it sorta depends which one ends up getting the reference to the blob as to where the user clicks, that'd be suboptimal

[05:16:32.0000] <annevk>
(or of which you ended up checking another member)

[05:16:38.0000] <Domenic>
annevk: how is clicking involved? I don't see any steps in the spec that invoke cloning when you click a hyperlink

[05:16:59.0000] <annevk>
Domenic: presumably that would lazily figure out the url, no?

[05:17:17.0000] <annevk>
Domenic: I mean if we don't figure out the url immediately, we'd have to figure it out later

[05:17:24.0000] <Domenic>
annevk: right now I believe it just lazily consults the internal URL. It doesn't call re-initialise or anything.

[05:17:26.0000] <annevk>
Domenic: during hover perhaps?

[05:18:40.0000] <Domenic>
bbiab

[05:21:01.0000] <annevk>
Mean I really don't want to write all the domintro garbage

[05:21:36.0000] <annevk>
I should probably just get over it, but given the long list of important bugs to fix I'm finding it hard to justify

[05:36:53.0000] <Domenic>
Authors will appreciate it!

[05:49:44.0000] <annevk>
Domenic: well, as long as we're not generating that developer edition

[05:52:10.0000] <Domenic>
:(

[05:52:16.0000] <annevk>
Also, not all specifications do this so I have some worries about the longevity of all this

[05:52:18.0000] <Domenic>
_That_ would be a good intern project...

[05:52:28.0000] <caitp>
http://caitp.github.io/spidermonkey-wks-security/  wip thing to try to figure out cross-browser cross-origin access to well-known symbol-named properties, just for fun.

[05:52:43.0000] <annevk>
I really want to work on this meta-language thing for standards

[05:53:07.0000] <annevk>
Having that defined could simplify the decision making process when defining something new so much

[05:53:18.0000] <annevk>
But it should really be in IDL and IDL is well...

[05:53:42.0000] <Domenic>
caitp: SyntaxError in Chrome, blank page in Firefox?

[05:54:05.0000] <caitp>
nightly is a syntax error for all 3 supported symbols

[05:54:08.0000] <caitp>
FF nightly*

[05:54:31.0000] <caitp>
chrome with --harmony is all security errors, but the behaviour Toon wants is very different

[05:54:33.0000] <Domenic>
Oh HTTPS everywhere is screwing me

[05:54:50.0000] <caitp>
er, nightly is not a syntax error, it's a security error*

[05:55:07.0000] <caitp>
which more or less matches current Chrome

[05:57:05.0000] <mkwst>
annevk: meta-language thing?

[05:57:21.0000] <annevk>
caitp: you are aware of https://etherpad-mozilla.org/html5-cross-origin-objects and such, right?

[05:58:17.0000] <annevk>
mkwst: yeah, a more formal definition of what we're doing, including a bunch of convenient shorthands

[05:58:32.0000] <mkwst>
annevk: for example?

[05:58:38.0000] <annevk>
mkwst: e.g., ECMAScript is much better at having precise language

[05:58:38.0000] <caitp>
i've read the etherpad previously, yeah

[05:58:46.0000] <annevk>
mkwst: but ECMAScript is quite verbose

[05:58:58.0000] <annevk>
mkwst: Domenic and others came up with a bunch of constructs that make that better

[05:59:16.0000] <Domenic>
bterlson wants to get rid of ReturnIfAbrupt in ES, which would make it even better.

[05:59:19.0000] <annevk>
mkwst: however, since we're not defining JavaScript, but IDL, we cannot really reuse that

[05:59:34.0000] <caitp>
from bugmail it just sounds like SM is getting further along with matching the etherpad semantics

[05:59:58.0000] <annevk>
mkwst: so what I'd like is for IDL to define that kind of language, that specifications can then use, so they all read the same more or less and it becomes easier to spot bugs

[06:00:04.0000] <annevk>
mkwst: and also hopefully becomes easier to write them

[06:00:30.0000] <mkwst>
annevk: makes sense. I'm sure there are constructs that get cargo-culted everywhere. Formalizing them might be helpful.

[06:01:56.0000] <annevk>
MikeSmith: reporting the error for the correct line just saved me going through a 100 lines of HTML

[06:02:36.0000] <annevk>
Domenic: added domintro to a/area

[06:02:44.0000] <annevk>
very basic

[06:03:12.0000] <Domenic>
annevk: will re-review in a few hours

[06:04:28.0000] <zcorpan>
TabAtkins: can you have a look at https://github.com/tabatkins/bikeshed/pull/498 ?

[06:07:56.0000] <MikeSmith>
annevk: glad the line-number reporting is working

[06:08:13.0000] <MikeSmith>
I need to finish up the remaining changes to the build script

[06:32:02.0000] <zcorpan>
https://developer.apple.com/library/safari/releasenotes/General/WhatsNewInSafari/Articles/Safari_9.html <link rel="icon" sizes="any" mask href="website_icon.svg"> :-(

[06:55:49.0000] <annevk>
Hmm I thought they fixed that

[06:59:18.0000] <hasather>
zcorpan: annevk: probably just out-of-date documentation, twitter and pinterest uses rel="mask-icon"

[06:59:51.0000] <annevk>
hasather: was thinking that too

[07:00:22.0000] <annevk>
hasather: hober also put himself on the hook for writing a PR for mask-icon so I'm guessing all is fine

[07:01:09.0000] <hasather>
there's a feeback link at the bottom, I'll use that

[07:23:09.0000] <Domenic>
Yeah hober where's our PR :)

[07:23:37.0000] <Domenic>
/me is scared of the <meta> area of the spec

[07:25:21.0000] <wanderview>
annevk: ping

[07:25:50.0000] <wanderview>
or anyone else who can help with relative URLs in stylesheet subresources

[07:27:06.0000] <wanderview>
if window a.com loads stylesheet a.com/foo.css which is redirected to b.com/foo.css, and there is a bg-image with URL "./bg.jpg"... is that bg-image URL relative to a.com or b.com?

[07:30:58.0000] <Ms2ger>
See #content :)

[07:33:15.0000] <annevk>
wanderview: I would expect b.com

[07:33:41.0000] <annevk>
wanderview: however, even with workers browsers differ on this apparently

[07:33:50.0000] <wanderview>
annevk: apparently gecko is loading a.com/bg.jpg according to this test I wrote

[07:34:12.0000] <annevk>
wanderview: wow, that's very magical

[07:34:17.0000] <annevk>
wanderview: is that without service workers?

[07:34:19.0000] <wanderview>
where is the css spec?

[07:34:29.0000] <nox>
Which one?

[07:34:34.0000] <wanderview>
annevk: I have a service worker, but its not calling .respondWith()

[07:34:49.0000] <wanderview>
the latest/best one for defining how bg-image is handled

[07:35:26.0000] <wanderview>
well, I guess it is calling .respondWith(), but it doesn't matter... since gecko decided this before triggering the FetchEvent

[07:35:28.0000] <Ms2ger>
CSS doesn't exactly define much here

[07:35:32.0000] <Ms2ger>
Complain at TabAtkins :)

[07:35:56.0000] <annevk>
wanderview: the stylesheet is not served through a service worker?

[07:36:12.0000] <wanderview>
isn't there a github repo for the css specs now?

[07:36:15.0000] <wanderview>
I can't find it

[07:36:17.0000] <annevk>
wanderview: because a service worker can have effect on what the URL of the stylesheet becomes, but I guess that might not be play

[07:36:28.0000] <annevk>
wanderview: https://drafts.csswg.org/

[07:36:40.0000] <annevk>
wanderview: doesn't really define any of this though

[07:36:48.0000] <wanderview>
annevk: I am intercepting the stylesheet, but its just passing the url through to fetch()

[07:36:55.0000] <wanderview>
annevk: I want to write an issue :-)

[07:37:08.0000] <annevk>
wanderview: right, so fetch() ends up eating the redirect

[07:37:20.0000] <wanderview>
oh...

[07:37:22.0000] <annevk>
wanderview: which means the base URL becomes the request URL

[07:37:38.0000] <wanderview>
right

[07:37:40.0000] <wanderview>
hmm

[07:38:16.0000] <wanderview>
I guess I could make it not call .respondWith()

[07:38:53.0000] <wanderview>
actually, I can't

[07:39:14.0000] <wanderview>
since I need to perform async work in the fetchevent handler

[07:39:29.0000] <wanderview>
/me mumbles something about coffee.

[07:39:31.0000] <wanderview>
annevk: thanks

[07:40:37.0000] <annevk>
wanderview: it seemed too unlikely that Gecko would not use the "final" stylesheet URL

[07:44:41.0000] <wanderview>
annevk: actually, isn't this bad?

[07:45:14.0000] <wanderview>
annevk: it seems this is a case where installing a service worker that just does e.respondWith(fetch(e.request)) changes or breaks the website

[07:45:40.0000] <wanderview>
annevk: since suddenly the website stops loading b.com/bg.jpg and tries to load a.com/bg.jpg which might not exist

[07:46:56.0000] <annevk>
wanderview: I defer to JakeA and slightlyoff

[07:47:37.0000] <annevk>
wanderview: too much other stuff going on, but fetch() is not without side effects, even if we change this somehow

[07:48:20.0000] <wanderview>
annevk: I'll write an issue

[07:58:10.0000] <wanderview>
annevk: seems "manual" RequestRedirect could solve it

[07:58:15.0000] <wanderview>
annevk: but I wrote the issue here: https://github.com/slightlyoff/ServiceWorker/issues/757

[07:58:54.0000] <annevk>
wanderview: no that wouldn't solve it

[07:59:06.0000] <wanderview>
why not? then the stylesheet would see the final URL?

[07:59:08.0000] <annevk>
wanderview: we cannot expose redirects to the service worker, remember

[07:59:40.0000] <wanderview>
annevk: well, yea, that would be a side-effect, but whats the problem with it?

[07:59:53.0000] <annevk>
wanderview: security vulnerability?

[08:00:05.0000] <annevk>
wanderview: https://fetch.spec.whatwg.org/#atomic-http-redirect-handling

[08:00:26.0000] <annevk>
wanderview: there's a reason it's an "opaqueredirect"; making it non-opaque is not okay

[08:00:27.0000] <wanderview>
annevk: I guess the same problem exists for other resources anyway... like a script that uses a relative importScripts()

[08:00:47.0000] <wanderview>
annevk: wait... it would still be an opaqueredirect... just passed immediately to .respondWith()

[08:00:52.0000] <annevk>
wanderview: those URLs are resolved against the base URL of the global

[08:01:13.0000] <annevk>
wanderview: and then always go to the network with no way of making it work offline?

[08:01:22.0000] <wanderview>
annevk: why wouldn't it get intercepted again?

[08:01:28.0000] <annevk>
wanderview: how would the CSS loader handle this manual redirect?

[08:01:37.0000] <annevk>
wanderview: bypass the SW?

[08:01:48.0000] <annevk>
wanderview: or reveal secrets?

[08:02:08.0000] <wanderview>
annevk: if its same origin within scope, then yes same SW... otherwise other controlling service worker might handle it

[08:02:32.0000] <annevk>
wanderview: that's how navigation works, that's not how subresources work

[08:03:07.0000] <wanderview>
annevk: for script case... where top level script is redirected and we do e.respondWith(fetch(e.request)), what is the global base URL?  the original script URL or the final URL?

[08:03:24.0000] <annevk>
wanderview: so yes, if you feed the redirect-to URL into a SW you created a security vulnerability

[08:03:27.0000] <Ms2ger>
/me wonders if http://test.csswg.org/suites/css21_dev/nightly-unstable/xhtml1/root-box-003.xht is correct

[08:03:34.0000] <Ms2ger>
(pass condition in <title>)

[08:03:46.0000] <wanderview>
I guess its defined by the document or worker, and both those have the manual redirect mode

[08:03:47.0000] <annevk>
wanderview: the base URL of the document

[08:04:00.0000] <annevk>
wanderview: workers don't have manual mode

[08:04:26.0000] <wanderview>
annevk: whats the global base URL for a worker, then

[08:04:27.0000] <wanderview>
?

[08:05:36.0000] <annevk>
Ms2ger: I think it might be invalid now

[08:05:45.0000] <annevk>
wanderview: the final URL

[08:06:11.0000] <wanderview>
annevk: unless a service worker eats the redirect and then its the same problem as the stylesheet

[08:06:30.0000] <annevk>
wanderview: ah yeah, for workers that's true

[08:07:02.0000] <annevk>
wanderview: I'm just saying that manual is not the solution here

[08:07:12.0000] <annevk>
wanderview: if you want this different we actually need to change the model

[08:07:51.0000] <annevk>
wanderview: which not be a bad idea, but it's a bit late

[08:08:40.0000] <annevk>
wanderview: I tried to get this nailed down at some point, but sicking and slightlyoff didn't really want to discuss it much back then

[08:08:50.0000] <annevk>
wanderview: and we still had this fetch() vs event.default() thing which was weird

[08:09:04.0000] <wanderview>
annevk: I won't be too upset if people say "corner case... wontfix"... I just want people to be aware of it

[08:09:23.0000] <annevk>
fair

[08:09:38.0000] <wanderview>
its a definite footgun for developers, though

[08:09:48.0000] <annevk>
Yeah, I think we should maybe try to change it

[08:10:11.0000] <annevk>
We've changed a lot of things in fetch() so that it doesn't break defaults

[08:10:24.0000] <annevk>
E.g., referrer was a recent one

[08:10:42.0000] <TabAtkins>
zcorpan: merged

[08:10:49.0000] <wanderview>
annevk: like this example would break: https://jakearchibald.com/2014/offline-cookbook/#on-network-response

[08:12:04.0000] <annevk>
wanderview: added a comment

[08:12:09.0000] <wanderview>
thanks

[09:28:51.0000] <annevk>
WHATWG aka DOM WG

[12:13:47.0000] <MikeSmith>
beverloo: http://stackoverflow.com/questions/32908826/multiple-chrome-push-notifications-automatically-closes-except-the-last-one

[12:15:11.0000] <beverloo>
MikeSmith, 'morning :)

[12:15:22.0000] <beverloo>
I haven't heard of that before

[12:20:50.0000] <MikeSmith>
howdy beverloo

[12:25:24.0000] <beverloo>
MikeSmith, ah I got it

[12:25:48.0000] <beverloo>
he sets the `tag` as the beginning of the event, and then fetches multiple notifications from his server, displaying them with the same tag

[12:26:03.0000] <beverloo>
solution is to not use `tag` except for his error notification

[12:26:09.0000] <beverloo>
let me create an account (way overdue anyway) and reply

[12:26:11.0000] <beverloo>
thanks for the pointer :)

[12:40:17.0000] <Domenic>
annevk: so where do we stuff things that we want to put on the global now?

[12:40:28.0000] <Domenic>
i can't actually find any examples of putting things on the environment settings object

[12:41:21.0000] <annevk>
Domenic: I've been thinking a bit more about this and putting things on the global instead of document might actually be problematic due to document.open() (which replaces the global)

[12:41:32.0000] <annevk>
Domenic: but I guess it depends

[12:42:10.0000] <Domenic>
annevk: so i guess my immediate confusion is that settings objects only have algorithms right now, whereas I want to put a couple data structures on them

[12:42:23.0000] <Domenic>
where does HTML put all its global state??

[12:42:31.0000] <annevk>
Domenic: document

[12:42:34.0000] <annevk>
Domenic: mostly

[12:42:41.0000] <Domenic>
annevk: what about in workers? :(

[12:43:02.0000] <annevk>
Domenic: the environment settings object

[12:43:15.0000] <annevk>
Domenic: and now a bit on the global too

[12:43:24.0000] <Domenic>
annevk: any examples? I think I am just searching wrong.

[12:43:32.0000] <annevk>
Domenic: HTTPS state?

[12:43:32.0000] <botie>
HTTPS state is poorly defined. I don't think it's in HTML yet. I'm hedging mkwst's bets. :)

[12:44:09.0000] <annevk>
Domenic: also WorkerGlobalObject's url

[12:44:11.0000] <Domenic>
annevk: meh, I don't want an algorithm for obtaining a list, I want a list...

[12:44:31.0000] <annevk>
I'm not really following I'm afraid

[12:44:44.0000] <annevk>
I also gotta go, so maybe tomorrow

[12:44:45.0000] <Domenic>
WorkerGlobalScope's URL is better

[12:44:51.0000] <Domenic>
I'll try to follow that model.

[12:54:11.0000] <MikeSmith>
beverloo: thanks much! (and upvoted)


2015-10-03
[04:08:27.0000] <sanjay>
Hello everyone

[13:38:11.0000] <rits>
Hello i am participating in outreachy winter session and would like to discuss about the project "Contribute to the HTML standard".

[14:09:39.0000] <MikeSmith>
hi rits

[14:10:02.0000] <rits>
MikeSmith: Hello :)

[14:10:59.0000] <MikeSmith>
it's typically quiet here on the weekends, especially at the time of day when people in Europe are away/offline

[14:11:52.0000] <MikeSmith>
I think you'll find it a lot more active on Monday

[14:12:25.0000] <MikeSmith>
rits: but anyway I'm here now :)

[14:12:38.0000] <rits>
MikeSmith: oh ya, ok no problem

[14:12:49.0000] <MikeSmith>
if you have any questions at this point I'm happy to help

[14:13:32.0000] <rits>
MikeSmith: great :), i wanted to discuss about the project https://wiki.mozilla.org/Outreachy/2016/December_to_March#Contribute_to_the_HTML_Standard.21

[14:13:52.0000] <MikeSmith>
OK

[14:15:00.0000] <MikeSmith>
so we have the source for the spec at https://github.com/whatwg/html

[14:15:16.0000] <MikeSmith>
and we have an issue tracker there https://github.com/whatwg/html/issues

[14:15:37.0000] <MikeSmith>
and we have some issues there which are labeled "good first bug"

[14:15:49.0000] <MikeSmith>
https://github.com/whatwg/html/labels/good%20first%20bug

[14:15:59.0000] <MikeSmith>
so that's one thing to look through

[14:17:06.0000] <rits>
MikeSmith: ok i will go through the bugs and work up on it

[14:17:22.0000] <MikeSmith>
OK

[14:17:25.0000] <MikeSmith>
we also have an older "good first bugs" list at https://goo.gl/WfGDTd

[14:17:57.0000] <MikeSmith>
rits: one approach I'd recommend is to find a bug that you really care a lot about personally

[14:19:17.0000] <rits>
MikeSmith: ok i will work with this thought, will be back with a good first bug :)

[14:19:26.0000] <MikeSmith>
super

[14:19:50.0000] <rits>
MikeSmith: Thanks :)

[14:20:03.0000] <MikeSmith>
cheers


2015-10-04
[07:20:40.0000] <odinho>
Hm, is there a way to go from old-whatwg mailing list archive URL to new on w3c address?

[09:43:03.0000] <annevk>
odinho: yeah, wget it

[09:43:20.0000] <annevk>
odinho: access it with a client that doesn't do HSTS

[09:55:19.0000] <odinho>
annevk: Thank you :)  I lost the URL in the meantime, and it doesn't seem to have been saved to history.  Haha :)  I'll find it again later.

[14:31:58.0000] <zcorpan>
nox: insertAdjacentHTML should be implemented

[14:32:07.0000] <nox>
zcorpan: Ok.

[14:32:42.0000] <zcorpan>
it's supported everywhere http://caniuse.com/#search=insertadjacenthtml


2015-10-05
[22:20:21.0000] <babita>
Hi annevk, I am an OPW applicant and would like to work on the project "Contribute to the HTML Standard!". Where should I start?

[22:40:07.0000] <annevk>
hey babita, I haven't completely read up on the application process yet, but I believe the idea is that you fix one or more bugs/issues

[22:40:39.0000] <annevk>
babita: the wiki page has some pointers to those that are easy to start with

[22:42:18.0000] <annevk>
babita: the specification itself is hosted at https://github.com/whatwg/html

[22:42:31.0000] <annevk>
babita: and you can build it using the scripts here: https://github.com/whatwg/html-build

[22:45:36.0000] <annevk>
babita: if you haven't read it yet, https://wiki.gnome.org/Outreachy#Make_a_Small_Contribution has some tips on this front from Outreachy

[22:46:01.0000] <annevk>
babita: back later today

[23:15:58.0000] <babita>
annevk: thank you so much for the pointers, will go through them now.

[00:15:41.0000] <annevk>
babita: cool!

[00:23:38.0000] <annevk>
/me updated https://wiki.mozilla.org/Outreachy/2016/December_to_March#Contribute_to_the_HTML_Standard.21 to make the initial set of steps clearer

[00:28:24.0000] <MikeSmith>
annevk: thanks for updating that; there we somebody else on here this weekend also asking how to get started

[01:20:39.0000] <annevk>
MikeSmith: yeah saw that, it happening again made me realize the instructions should probably be there

[02:28:07.0000] <annevk>
Domenic: you have a WindowProxy rewrite somewhere, correct?

[02:28:33.0000] <annevk>
Domenic: I guess for the cross-origin stuff, we want to have special instances of that object?

[04:43:55.0000] <annevk>
smaug____: what are the contents of a history entry?

[04:44:22.0000] <smaug____>
/me tries to interpret that

[04:45:58.0000] <annevk>
smaug____: from reading the specification it seems it contains a "request", a "Document object", a "browsing context name", ...

[04:46:15.0000] <annevk>
smaug____: but it's never really made explicit or enumerated

[04:46:41.0000] <smaug____>
hmm, request

[04:46:54.0000] <annevk>
I guess it says "Each session history entry consists, at a minimum, of a URL, and each entry may in addition have a state object, a title, a Document object, form data, a scroll position, and other information associated with it."

[04:46:59.0000] <smaug____>
or even document object?

[04:47:08.0000] <smaug____>
why document object

[04:47:26.0000] <annevk>
But although it says URL, it seems to manipulate the request method at times so that's clearly more complicated

[04:47:33.0000] <smaug____>
only bfcache hentry contains document object

[04:47:42.0000] <annevk>
smaug____: right, it's for bfcache

[04:47:58.0000] <annevk>
smaug____: the Document object is optional

[04:48:21.0000] <smaug____>
http://mxr.mozilla.org/mozilla-central/source/docshell/shistory/nsISHEntry.idl

[04:49:10.0000] <smaug____>
title, formstate, scroll info, url are there

[04:49:56.0000] <smaug____>
it is not clear to me what "request" is about

[04:50:26.0000] <annevk>
smaug____: in the spec it accounts for the entry initially being requested using the GET method

[04:53:16.0000] <annevk>
smaug____: from that it seems we also store referrer and referrer policy, all of which would be part of request

[04:53:25.0000] <annevk>
smaug____: so maybe there's something to that idea

[04:56:13.0000] <smaug____>
ah, yes, those might be part of request in spec

[04:58:30.0000] <mkwst>
annevk: CSPish things are starting to come together at https://w3c.github.io/webappsec-csp/#integrations. It's nowhere near done, but probably worth your time to skim that section now so I don't continue off in directions you wouldn't like for either Fetch or HTML.

[04:58:48.0000] <mkwst>
annevk: I think it should take care of the things you noted last time around as being undesirable.

[06:10:36.0000] <annevk>
mkwst: is the CSP header recognized for all resources or only those that create global objects?

[06:10:47.0000] <annevk>
mkwst: if the latter, shouldn't the parsing be hooked into HTML someplace?

[06:14:18.0000] <mkwst>
annevk: If we want to do something like http://w3c.github.io/webappsec-csp/cookies/, we need the policy before we process `set-cookies` (which is the next step after the monkey-patch point).

[06:14:42.0000] <mkwst>
annevk: And if we want to do referrers, we need to do something in fetch.

[06:15:11.0000] <mkwst>
annevk: There are a few things like that which effect the way Fetch works, outside the context of a global object. For that reason, it seemed simplest to do the parsing in Fetch.

[06:37:07.0000] <annevk>
mkwst: I see

[06:37:16.0000] <annevk>
mkwst: did you figure out when it happens relative to service workers?

[06:37:42.0000] <annevk>
mkwst: it seems you decided service workers do not get to set policy

[06:37:58.0000] <annevk>
mkwst: whereas JakeA and slightlyoff I believe think they will

[06:38:21.0000] <JakeA>
/me awakens

[06:38:39.0000] <annevk>
mkwst: of course, letting CSP control set-cookie and letting CSP be set from SW are potentially somewhat contradictory goals

[06:40:13.0000] <JakeA>
I'll pop this onto my todo list, need to process it a bit to work out how it interacts with SW

[06:40:37.0000] <JakeA>
I'm not dead set on SW being able to set CSP, I just couldn't think of another way of doing it at the time

[07:23:53.0000] <JakeA>
annevk: mkwst: since the response's policy can only be set from an http fetch, it cannot be set manually - am I reading that right? Does that mean `new Response` always has no policy?

[07:37:37.0000] <jochen__>
annevk: a more detailed response to your email...

[07:37:48.0000] <jochen__>
annevk: nothing else is updated for css requests either (in blink)

[07:38:16.0000] <jochen__>
annevk: i'm not saying that this is great, but I can hardly define for css how it should fetch resources in the referrer spec

[07:40:11.0000] <annevk>
jochen__: no, but we can all agree on what the model is

[07:42:43.0000] <jochen__>
not sure I understand?

[07:43:05.0000] <jochen__>
the model should be fetch, no?

[07:43:39.0000] <annevk>
jochen__: the model for how CSS should work

[07:43:57.0000] <jochen__>
it should use fetch, right?

[07:44:16.0000] <annevk>
jochen__: sure, but we're discussing how it uses fetch

[07:44:31.0000] <jochen__>
hum

[07:44:37.0000] <jochen__>
i'm not really discussing that

[07:44:38.0000] <mkwst>
annevk: I don't recall the problem with allowing service workers to control a page's policy. The model in this document allows the service worker to replace/mody a request/response, but forces the response back through the page's policy. That's the agreement that I recall.

[07:44:41.0000] <annevk>
jochen__: you're saying that it shouldn't have a referrer policy, whereas others have been saying it should have one, that of the document

[07:44:46.0000] <mkwst>
JakeA: ^^

[07:44:52.0000] <jochen__>
no

[07:45:09.0000] <jochen__>
i'm saying whatever has a referrer should have a policy

[07:45:16.0000] <jochen__>
and it should take the one from whereever it got the referrer

[07:45:38.0000] <jochen__>
and I understood what you said as "but I don't like where the referrer came from"

[07:46:58.0000] <annevk>
jochen__: I guess I'm disagreeing with that notion

[07:47:16.0000] <annevk>
jochen__: I think it's fine for the referrer to come from the stylesheet, whereas the referrer policy comes from the stylesheet's document

[07:48:38.0000] <jochen__>
mhm

[07:48:59.0000] <jochen__>
and it should use the policy from the document whenever the network request actually hits the wire?

[07:49:38.0000] <jochen__>
or from when the stylesheet is loaded?

[07:50:45.0000] <JakeA>
mkwst: but if the policy is only applied through http fetch, doesn't that mean CSP is always empty via new Response() (even if headers are set manually)

[07:52:55.0000] <annevk>
jochen__: well, that's an open question for any request

[07:53:10.0000] <annevk>
jochen__: if we allow the referrer policy to change in general, we should also allow it to change for stylesheets

[07:53:38.0000] <jochen__>
i agree that this sounds good in general

[07:54:00.0000] <jochen__>
however, if the referrer comes from the document, it's odd to only propagate referrer policy changes but not referrer changes

[07:55:17.0000] <annevk>
the referrer comes from the stylesheet, it cannot really change

[07:55:36.0000] <annevk>
CSSOM allows changes a bit, but none that would affect the referrer

[07:56:39.0000] <jochen__>
so if the referer cannot really change, the policy shouldn't change either imo

[07:57:02.0000] <jochen__>
i mean, a referrer can't change all that much anyway

[07:57:20.0000] <jochen__>
basically, anything that you can do via history.pushState

[07:59:52.0000] <annevk>
right, for documents it can change

[08:00:28.0000] <annevk>
given that you have <meta name=referrer> you're going to allow some kind of change to the referrer policy either way

[08:01:08.0000] <annevk>
the main question is whether that is bounded somehow to the first occurrence and whether that makes sense

[08:01:31.0000] <annevk>
I guess I don't really care strongly about that

[08:02:20.0000] <annevk>
I'd go for whatever is easy to implement, but I don't think you can say "no modifications" since clearly <script src=...> <meta name=referrer ...> would be one of the tests

[08:42:31.0000] <jochen__>
annevk: indeed, we have such a test in blink

[08:42:41.0000] <jochen__>
annevk: and currently, it tests that the policy is not updated for the stylesheet

[08:43:18.0000] <jochen__>
annevk: the thing is, i'd rather not fix one behavior for css in the referrer policy

[08:43:30.0000] <jochen__>
annevk: i'd rather have css to make up its mind how to integrate with fetch

[08:44:03.0000] <annevk>
jochen__: euhm, you didn't let HTML make up its mind either

[08:44:15.0000] <annevk>
jochen__: I don't see what is so hard about deciding on something here

[08:44:36.0000] <annevk>
jochen__: clearly it needs to be specified elsewhere, but for now we can have a note in the specification about what it's going to be

[08:45:14.0000] <annevk>
jochen__: but I guess you could email www-style⊙wo and let them chime in, but I'm pretty sure they'd just defer back

[08:45:28.0000] <jochen__>
mhm

[08:45:54.0000] <jochen__>
i'll just run the layout test on firefox and see what happens

[08:46:02.0000] <jochen__>
in the best case, it just passes, then we have a decision

[08:47:58.0000] <annevk>
jochen__: that still doesn't make a lot of sense to me

[08:48:29.0000] <annevk>
jochen__: anyway, what happens for <script src=...> <meta name=referrer ...> <script src=...> <meta name=referrer ...> <link rel=stylesheet> etc.

[08:48:39.0000] <annevk>
jochen__: does the policy keep changing?

[08:49:22.0000] <jochen__>
yes

[08:49:34.0000] <jochen__>
<meta> is pretty random anyway

[08:49:43.0000] <jochen__>
as the preload scanner does some funky stuff with it

[08:49:49.0000] <jochen__>
i'd rather only of CSP delivery

[08:50:58.0000] <jochen__>
anyway, off for today

[08:51:14.0000] <annevk>
jochen__: so the question for stylesheets is whether we copy the policy in or whether it's a reference

[08:51:56.0000] <annevk>
jochen__: given CSSOM I'd say it should by reference

[08:52:10.0000] <annevk>
be by*

[09:49:26.0000] <Domenic>
annevk: WindowProxy at https://github.com/domenic/window-proxy-spec but it has no knowledge of cross-origin complications, yeah.

[09:51:57.0000] <annevk>
Domenic: for cross-origin we basically want to consolidate the object creation to a single point

[09:52:14.0000] <annevk>
Domenic: and that then branches to create the correct objects

[09:52:21.0000] <Domenic>
annevk: I don't really have enough context to know what that means. What objects are you even talking about.

[09:52:23.0000] <annevk>
Domenic: same for returning objects, obviously

[09:52:48.0000] <annevk>
Domenic: WindowProxy and Location objects have their own cross-origin objects per the etherpad draft

[09:53:13.0000] <Domenic>
annevk: hmm OK, makes sense I guess.

[09:53:29.0000] <wanderview>
annevk: JakeA: I asked in issue, but do you think a document in SW scope should still be considered "controlled" if `disableFetch()` has been called?

[09:54:48.0000] <beverloo>
fwiw, from a push messaging perspective, I quite dislike the disableFetch() method (while I understand the reasoning of not wanting listening to events to have side-effects)

[09:55:07.0000] <beverloo>
there's major performance improvements a UA can make if it's known whether an event will be handled by a SW or not

[09:55:31.0000] <beverloo>
making features opt-out doesn't scale very well (disablePush()? disableSync()?)

[09:56:10.0000] <JakeA>
Yeah, I'd still rather listening was just observable

[09:57:07.0000] <JakeA>
wanderview: …but is we had disableFetch() my hunch would be that the pages are still controlled.

[09:57:10.0000] <wanderview>
beverloo: push and sync are explicitly opt-in, so not sure why we would need to add disable calls for those... I think many people would prefer fetch was opt-in as well

[09:57:52.0000] <beverloo>
wanderview, for now, but onpushsubscriptionchange/onpusherror/hypothetical onnotificationclose wouldn't be

[09:58:46.0000] <JakeA>
It allows you to defer idb upgrades to an activate event of a sw, avoiding multiple tabs with different versions. Also makes sense with clients.matchAll

[09:59:32.0000] <wanderview>
JakeA: the controlled status does those things?  or is that a different topic?

[10:00:07.0000] <wanderview>
I'm fine with it being controlled... I just suddenly wasn't sure if the definition of "controlled" implied fetch events or not

[10:00:32.0000] <JakeA>
wanderview: a new SW will wait behind the active one while controlled pages exist using the active one

[10:00:46.0000] <JakeA>
wanderview: clients.matchAll() will return only controlled clients by default

[10:00:48.0000] <wanderview>
right, ok... its more a lifecycle thing

[10:01:41.0000] <wanderview>
my mental model was wrong... I was thinking of it as being "controlled" in the sense the fetch interception lets the service worker have its way with the page

[10:04:15.0000] <wanderview>
thanks


2015-10-06
[23:38:33.0000] <annevk>
yhirano_: hey, do you want me to rebase and all that?

[23:39:29.0000] <annevk>
yhirano_: cause it looks good now, apart from that

[23:46:31.0000] <yhirano_>
annevk: yeah,  I'll do

[23:46:39.0000] <annevk>
yhirano_: thank you

[23:57:29.0000] <annevk>
yhirano_: all good now?

[00:04:51.0000] <yhirano_>
annevk: i'm reading through now, so please wait for a minute.

[00:05:05.0000] <annevk>
sure

[00:24:25.0000] <annevk>
yhirano_: can you remove the "." from the commit title?

[00:25:04.0000] <annevk>
yhirano_: perhaps make the title "Fix #118: add Response.prototype.body"

[00:27:03.0000] <yhirano_>
annevk: got it >> "."

[00:27:55.0000] <yhirano_>
annevk: I plan to add example (https://github.com/yutakahirano/fetch-with-streams/#fetch-api) as a separate commit so i planned to close the issue after that

[00:28:25.0000] <yhirano_>
annevk: though it is possible to include the example change in this commit

[00:28:49.0000] <annevk>
yhirano_: new PR is fine

[00:35:58.0000] <yhirano_>
annevk: fixed the commit title and message

[00:41:16.0000] <mkwst>
annevk, JakeA: I'm around if you two still have concerns about the Fetch handling proposed in the CSP3 draft.

[00:41:32.0000] <mkwst>
Or we can chat later today. Whatever works.

[00:43:23.0000] <annevk>
mkwst: working on something else at the moment, but have you thought through whether it makes sense for the service worker to be able to set the policy of a synthetic response (or perhaps a non-opaque response it got from somewhere) similar to how a server can?

[00:45:18.0000] <mkwst>
annevk: I'd like to get this bit hammered out this week, but no rush to get it done today. If you're busy, we can chat later.

[00:47:40.0000] <mkwst>
annevk: To the specific question, the SW is the network, right? I don't see why it wouldn't be able to set headers on a response. There are particular headers that must take effect before the SW has a chance to screw with them (`clear-site-data` comes to mind), but I guess if the SW can create an entirely synthetic response, there's no real value in

[00:47:40.0000] <mkwst>
restricting its access to the CSP header.

[00:48:27.0000] <annevk>
mkwst: given that you patched HTTP-network fetch, it wouldn't have any effect

[00:49:07.0000] <mkwst>
annevk: Ah, I see the concern. Yeah. It makes sense that we'd need to parse the headers somewhere further down for that case.

[00:49:54.0000] <mkwst>
Not sure how to do that and preserve the option to effect `set-cookie` behavior, but I'll hack something together and ask you to take a look at it later.

[00:50:28.0000] <mkwst>
n:1

[00:52:58.0000] <annevk>
Affecting the set-cookie header sounds intriguing, I guess I should review that

[01:02:32.0000] <mkwst>
annevk: I guess I should write it up. Will eventually live in https://w3c.github.io/webappsec-csp/cookies/, which modifies cookies currently, but also needs to poke at Fetch.

[01:06:19.0000] <annevk>
mkwst: interesting

[01:07:41.0000] <annevk>
mkwst: https://w3c.github.io/webappsec-csp/cookies/#monkey-patching-rfc6264 should be a patch to Fetch afaict

[01:08:02.0000] <annevk>
mkwst: although I guess if you're going to do this on a per-cookie basis... hmm

[01:08:25.0000] <annevk>
mkwst: I guess in that case you'd have to do that

[01:08:45.0000] <annevk>
mkwst: although "none" could still be handled at the Fetch level

[01:09:10.0000] <mkwst>
We need to do that for `document.cookie = 'x=y';`. I guess we could do more granular `set-cookie` handling in Fetch, but if we're already doing it here for the JS interface, there's not much advantage in doing it twice.

[01:09:23.0000] <mkwst>
'none' could certainly be handled in Fetch.

[01:11:01.0000] <mkwst>
annevk: I'll try to spell it out in more detail today and send it over for you to skim.

[01:11:37.0000] <annevk>
mkwst: I would really prefer we just give an API to block document.cookie/domain

[01:11:44.0000] <annevk>
mkwst: HTTP-based API

[01:11:55.0000] <annevk>
mkwst: instead of granular control over what can be set

[01:12:00.0000] <mkwst>
annevk: Why?

[01:12:15.0000] <annevk>
mkwst: even with granular control you can still exhaust the store through XSS

[01:13:04.0000] <annevk>
mkwst: because both are bad APIs and should be avoided

[01:13:37.0000] <mkwst>
annevk: Yes. Both should be avoided. And we should give folks the ability to turn them off (and I plan to).

[01:14:22.0000] <mkwst>
annevk: But apps use them, for better or worse. Allowing them to lock down the usage to their specific needs seems like a way of allowing those apps to harden themselves, and doesn't seem like it adds substantial complexity.

[01:14:43.0000] <mkwst>
annevk: I'll write it up one way or the other, and we can argue about whether or not it makes sense. :)

[01:15:26.0000] <annevk>
mkwst: I'd rather always block those two and offer a new asynchronous API where you would get more granular access

[01:15:46.0000] <annevk>
but okay, will wait

[01:16:24.0000] <mkwst>
*shrug* I think it's better to spend our time getting CSP's integrations into shape, and then we can argue about what kind of new stuff to add on top. :)

[01:16:42.0000] <mkwst>
So when I said "today", I think I was lying. :)

[01:31:52.0000] <Ms2ger>
> Symbol.iterator is undefined for document.all

[01:31:54.0000] <Ms2ger>
._.

[02:37:29.0000] <Mikaela>
Hi, I am wondering `Error: Bad value Content-Security-Policy for attribute http-equiv on element meta.` which I get when validating my site. From what I have understood it's w3 standard, so why would it cause validation error? Or was that just invented by caniuse.com or Chrome? http://caniuse.com/#feat=upgradeinsecurerequests Validation results in question:

[02:37:29.0000] <Mikaela>
https://validator.w3.org/nu/?doc=https%3A%2F%2Fmikaela.info%2F

[02:39:25.0000] <Ms2ger>
http-equiv doesn't support all headers

[02:39:41.0000] <Ms2ger>
However, I seem to recall ongoing work to support CSP there

[02:40:43.0000] <Mikaela>
I see, so I can just safely ignore it for now?

[02:41:57.0000] <Ms2ger>
I don't think it'll do anything right now, so you can ignore it unless you actually want CSP to apply

[02:42:41.0000] <Mikaela>
thanks, It does apply on Chrome, no idea on the others

[02:43:09.0000] <Ms2ger>
mkwst, ^

[02:43:29.0000] <mkwst>
Ask MikeSmith.

[02:43:49.0000] <mkwst>
I added it to HTML, but I don't think the validator is updated yet.

[02:44:20.0000] <mkwst>
https://html.spec.whatwg.org/#attr-meta-http-equiv-content-security-policy

[02:47:07.0000] <mkwst>
Mikaela: That directive in particular works in Chrome today, and will work in Firefox 42+.

[02:48:05.0000] <Mikaela>
and is valid?

[02:48:30.0000] <Mikaela>
(that link seems to be loading forever here)

[02:49:17.0000] <mkwst>
Mikaela: Yes. The HTML spec is monstrous. It'll take forever to load, but once it does, you'll see that the `http-equiv` value is indeed specified.

[02:49:28.0000] <Mikaela>
thanks :)

[02:49:39.0000] <mkwst>
Mikaela: The validator hasn't been updated, which is reasonable, since the value just got added to the spec ~weeks ago.

[02:50:38.0000] <Ms2ger>
https://html.spec.whatwg.org/multipage/#attr-meta-http-equiv-content-security-policy is less monstrous

[02:50:52.0000] <MikeSmith>
Mikaela: yeah, sorry I've just not made time to update the sources of the HTML checker yet

[02:51:25.0000] <Ms2ger>
On an unrelated note, is there a way to write a css rule that's overridden by a preshint?

[02:51:26.0000] <Mikaela>
no problem, I was just curious as I was quite sure that it's valid

[02:51:38.0000] <Mikaela>
that less monstrous version works, thanks

[02:52:43.0000] <Ms2ger>
zcorpan, surely you'd know that ^ :)

[02:53:31.0000] <zcorpan>
Ms2ger: write it in your user stylesheet without !important

[02:53:42.0000] <zcorpan>
not very test-friendly

[02:54:12.0000] <raintrap_>
hey guys, any nice WYSIWYG editor you can recommend?

[02:55:45.0000] <Ms2ger>
zcorpan, yeah, no :)

[02:55:57.0000] <Ms2ger>
I don't want this test that badly

[02:58:33.0000] <zcorpan>
preshint vs UA style is not material to interop anyway

[02:59:01.0000] <Ms2ger>
I was trying to test whether ol type=decimal is supported

[02:59:31.0000] <Ms2ger>
But if it only affects people with weird user styles.. Meh

[03:00:27.0000] <annevk>
MikeSmith: http://dev.w3.org/html5/html4-differences/ redirects to a 404

[03:00:39.0000] <Ms2ger>
Is that bad? :)

[03:01:34.0000] <zcorpan>
Ms2ger: you can test <ul><li type=decimal> though

[03:01:40.0000] <annevk>
Ms2ger: someone emailed me and suggest I replace a link from my site to that location with some spam

[03:15:23.0000] <nox>
annevk: Sorry for the useless issue. :)

[03:15:55.0000] <annevk>
it's cool, I think I mistakenly reported that one too once

[03:37:28.0000] <MikeSmith>
annevk: hmm yeah lemme fix that

[03:39:18.0000] <MikeSmith>
ah good after upgrading to El Capitan it seems there's no longer an Apple-provided cvs command

[03:39:31.0000] <MikeSmith>
which is as things should be

[03:39:37.0000] <MikeSmith>
/me homebrews is

[03:43:04.0000] <MikeSmith>
annevk: fixed that redirect

[03:43:14.0000] <MikeSmith>
thanks for the heads-up

[03:43:55.0000] <annevk>
MikeSmith: brave new era of useful spam

[03:48:46.0000] <MikeSmith>
hah

[03:49:20.0000] <MikeSmith>
achievement unlocked, found a valid use case for spam

[03:52:13.0000] <MikeSmith>
in similar news, we found somebody actually prefers the IETF for something https://twitter.com/mikewest/status/651342403962601473

[03:52:23.0000] <MikeSmith>
will wonders never cease

[03:54:11.0000] <annevk>
lol, creating a new IANA registry

[03:56:34.0000] <mkwst>
Oh, the exciting life of me.

[03:56:52.0000] <mkwst>
The IETF's publication system is so simple. It puts the W3C's to shame.

[03:57:06.0000] <mkwst>
I think I've mentioned this before.

[04:00:25.0000] <MikeSmith>
yeah among other things, the result is  great for weeding out the people who might ever want try to read some part a spec on a smartphone

[04:01:34.0000] <MikeSmith>
the lack of ability to include useful internal cross-reference also frees up editors from the nuisance of trying to fill their documents with them

[04:13:18.0000] <Ms2ger>
/me remembers when Hixie was told to stop publishing so often, because the publishmonkey couldn't keep up

[04:44:32.0000] <annevk>
Yeah, the W3C is averse to change, but the IETF is worse

[05:22:26.0000] <annevk>
philipj: hmm, now I'm thinking that perhaps navigation doesn't always discard

[05:28:01.0000] <philipj>
annevk: https://html.spec.whatwg.org/#navigate calls "unload a document" which calls "discard the document", but I didn't check for early returns or conditions or anything

[05:29:29.0000] <annevk>
philipj: only when it cannot be salvaged

[05:29:41.0000] <annevk>
philipj: so my patch probably breaks Mozilla's bfcache

[05:29:52.0000] <annevk>
good times

[05:30:24.0000] <jgraham>
Hmm?

[05:30:39.0000] <philipj>
oh, the spec actually doesn't just pretend that every navigation loads the URL from scratch?

[05:30:48.0000] <jgraham>
No

[05:31:00.0000] <jgraham>
Because that's observably different

[05:31:24.0000] <jgraham>
/me doesn't know the context btw

[05:31:27.0000] <philipj>
Right, but I have pretty low expectations in the area of navigation :)

[05:31:45.0000] <jgraham>
Well fair enough but it *tries* to be right

[05:31:55.0000] <philipj>
Fascinating

[05:32:12.0000] <jgraham>
So it gets things right like pageshow being different for actual loads vs history navigations

[05:32:16.0000] <philipj>
I guess that means annevk needs to understand how this works, and then I need to pretend to have understood the change :P

[05:32:31.0000] <jgraham>
What is "this"?

[05:32:40.0000] <philipj>
jgraham: when to exit fullscreen during navigation

[05:32:46.0000] <jgraham>
Oh

[05:33:12.0000] <jgraham>
Is that supposed to be always?

[05:33:46.0000] <philipj>
for top-level documents, yes, but not when navigating an iframe

[05:34:24.0000] <philipj>
I'm actually not sure what these restrictions achieve, though.

[05:35:19.0000] <jgraham>
Seems like it might be right to exit fullscreen after firing pagehide if the document is in a tlbc, or something?

[05:35:26.0000] <jgraham>
/me hasn't thought about it too much

[05:44:11.0000] <annevk>
jgraham: yeah maybe, though we also need to tackle browsing contexts closing

[05:44:23.0000] <annevk>
jgraham: if you close a browsing context, I guess history is not preserved?

[05:47:39.0000] <jgraham>
Well if you close a child browsing context, the join session history doesn't change. If you close a tlbc I think it all goes through the same steps to fire pagehide+unload+etc.

[06:05:51.0000] <annevk>
philipj: are you sure we shouldn't fire the event btw?

[06:06:06.0000] <annevk>
philipj: wouldn't it be better if the site could still perform animations and such before being navigated

[06:07:00.0000] <izhak>
Hi, guys! What is the status of the multipart responses in http 1.*, http 2.0 and current browsers?

[06:07:27.0000] <izhak>
I mean, how well is it supported in browsers as well as in protocols..&

[06:07:29.0000] <izhak>
?

[06:28:58.0000] <philipj>
annevk: I would think it's too late to do anything at that point, or how long could the animation be?

[06:29:21.0000] <annevk>
philipj: dunno, but there's other events firing at that point

[06:30:24.0000] <philipj>
annevk: an easy way to find out is to just use the incantations that will result in events being fired and see if implementors complain that it doesn't make any sense.

[06:30:38.0000] <philipj>
or more likely, if it doesn't make sense, the events just won't be fired anyway

[06:31:12.0000] <annevk>
hmm

[06:31:28.0000] <annevk>
We should actually know

[06:33:58.0000] <philipj>
Well, for documents that aren't salvageable and are being discarded, it doesn't make much sense to fire any events I think

[06:34:40.0000] <philipj>
but if you can navigate away from a fullscreen page and then back without a full reload, it would be very strange if the page still thinks it's fullscreen because no event has been fired

[07:04:28.0000] <annevk>
/me finds "If any event listeners were triggered by the earlier unload event step" and wonders how that is explained

[07:06:49.0000] <Ms2ger>
Not

[07:07:30.0000] <Ms2ger>
annevk, did we ever have dom explain the IDB "if any event listener threw an exception" pattern?

[07:07:47.0000] <annevk>
Ms2ger: nope

[07:08:02.0000] <annevk>
how many fricking hacks did people add?

[07:08:42.0000] <annevk>
IDB no less, I though there was no real theoretical reason to dislike that API

[07:09:24.0000] <annevk>
time for 😓

[07:09:48.0000] <annevk>
or maybe 😭 since it seems the floodgates on event listener hacks are open

[07:11:12.0000] <Ms2ger>
> Call for Review: W3C DOM4 Proposed Recommendation Published

[07:11:13.0000] <Ms2ger>
lol

[07:16:02.0000] <annevk>
wat

[07:16:14.0000] <annevk>
"This branch is 209 commits ahead, 120 commits behind whatwg:master."

[07:16:40.0000] <gsnedders>
So, uh, how many tests did they have to get to PR?

[07:17:38.0000] <annevk>
Ms2ger: another interesting data point for https://github.com/w3c/charter-html/issues/112#issuecomment-141880890 though I doubt anyone really cares

[07:19:08.0000] <annevk>
plh is on his solo mission to replicate all things WHATWG

[07:20:00.0000] <annevk>
but not doing a great job of it for the couple of things I checked

[07:21:34.0000] <wanderview>
can stylesheet @imports be cross-origin?

[07:23:12.0000] <ondras>
wanderview: that opens a potential xss vector, as you can verify whether a certain css rule was applied and thus if that rule has been defined, right?

[07:23:41.0000] <wanderview>
ondras: I don't know... I would be happy to hear its spec'd as same-origin only

[07:26:32.0000] <wanderview>
ah, here it is: "The origin of an imported style sheet is the same as the origin of the style sheet that imported it."

[07:26:49.0000] <wanderview>
although maybe that means its just changing the origin of the imported stylesheet? hmm

[07:27:13.0000] <wanderview>
oh, thats some css origin concept

[07:28:46.0000] <ondras>
http://jsfiddle.net/m4drt18k/

[07:28:56.0000] <ondras>
loading cross origin css apparently works

[07:30:47.0000] <ondras>
and the followup... http://jsfiddle.net/m4drt18k/1/

[07:34:06.0000] <annevk>
wanderview: yes they can

[07:34:25.0000] <wanderview>
yea... nice way to start the morning :-\

[07:34:50.0000] <annevk>
wanderview: CSS is full of SOP fail

[07:35:16.0000] <wanderview>
my easy bug fix is turning into a month-long endeavor

[07:53:05.0000] <caitp>
isn't that just the worst?

[08:05:17.0000] <gsnedders>
is it deliberate the Acid tests don't have any clear license on them?

[09:43:13.0000] <smaug____>
hmm, stable links to html spec would be nice

[10:22:15.0000] <annevk>
smaug____: what link broke?

[10:27:38.0000] <smaug____>
annevk: https://html.spec.whatwg.org/multipage/webappapis.html#processing-model-9:run-the-animation-frame-callbacks

[10:30:23.0000] <Domenic>
smaug____: so, I do have plans for this

[10:31:10.0000] <Domenic>
You'll be able to press "y" on your keyboard and your URL will mutate to something like https://streams.spec.whatwg.org/commit-snapshots/02e0a6431731da258d0dcad8b813c216c9f16d7c/#queuing-strategies (but for HTML of course)

[10:32:48.0000] <smaug____>
well, what I'd like to see is to avoid removing fragment identifiers from the spec if just possible

[10:33:05.0000] <smaug____>
but of course that isn't always possible

[10:33:46.0000] <Domenic>
hmm

[10:55:11.0000] <annevk>
smaug____: I'm guessing that fragment identifier was generated by dfn.js

[10:55:35.0000] <annevk>
or maybe Wattsi, not sure what's up

[11:18:32.0000] <Domenic>
yay URL!

[12:37:21.0000] <Domenic>
Can you not CC people by email on W3C bugzilla

[12:41:06.0000] <smaug____>
one needs to have a bugzilla account

[12:41:43.0000] <smaug____>
or perhaps you meant something else

[12:42:46.0000] <Domenic>
yeah

[12:42:51.0000] <Domenic>
that is annoying

[12:43:21.0000] <smaug____>
Domenic: how is that different to github or chromium's bug tracker?

[12:43:46.0000] <Domenic>
smaug____: neither of those have CC fields which list email addresses, inviting you to simply add another email address

[12:44:33.0000] <smaug____>
oh. Never seen it that way

[12:45:10.0000] <smaug____>
/me is annoyed by chromium's bug tracker requiring a Google account

[12:45:29.0000] <Domenic>
that is pretty bullshit :-/

[12:46:59.0000] <smaug____>
Domenic: well, it in practice reduces the likelihood I'd file blink bugs

[12:47:30.0000] <smaug____>
I do have google accounts but try to not use them

[12:47:38.0000] <smaug____>
(since google tends to track me so well)

[12:47:49.0000] <smaug____>
oh well

[12:48:24.0000] <Domenic>
I heard there was a header you could send </troll>

[12:54:59.0000] <annevk>
heycam|away: we need (undefined or type) stuff in IDL

[12:55:16.0000] <annevk>
heycam|away: on the input side it exists as optional type, but there's nothing for the return side

[12:55:43.0000] <annevk>
(if someone wants to file a bug on that, be my guest, I'll get to it eventually otherwise)

[13:01:21.0000] <annevk>
smaug____: feel free to file them through IRC proxy

[13:03:27.0000] <smaug____>
annevk: blink bugs?


2015-10-07
[19:39:21.0000] <heycam>
annevk, I agree

[19:39:27.0000] <heycam>
it's too awkward to use any

[19:41:39.0000] <heycam>
annevk, I filed https://github.com/heycam/webidl/issues/60

[22:09:10.0000] <hendry>
anyone care to please review my table markup for an invoice type use case? https://jsbin.com/bovuyo/edit?html,css,output

[22:14:17.0000] <annevk_>
heycam|away: ta

[01:01:21.0000] <Ms2ger>
mkwst, no, what you ought to do is reference the WHATWG spec

[01:02:11.0000] <mkwst>
Ms2ger: 1. Obviously. 2. That hasn't been a successful path for snapshots published by the W3C.

[01:04:56.0000] <MikeSmith>
as far as #2, I think we have some hope of seeing a change get made there within coming weeks/months

[01:05:24.0000] <MikeSmith>
the WebAppSec bringing it up at TPAC would help

[01:06:48.0000] <MikeSmith>
I would personally prefer the group state it something along the lines of some euphemistic formulation of "We think this de-facto policy is bullshit, and it's preventing us from getting or work done. So stop."

[01:07:42.0000] <Ms2ger>
I would prefer a non-euphemistic formulation

[01:09:37.0000] <MikeSmith>
Ms2ger: I'm shocked that you would say that. Very out of character

[01:10:14.0000] <MikeSmith>
your middle name is, after all, "Tact"

[01:13:41.0000] <Ms2ger>
> ...  excluding any that are descendants of descendants of the option element ...

[02:03:43.0000] <MikeSmith>
ah cool, now our keygen johnny one-note is reopening ancient resolved bugzilla issues against dead components

[02:03:46.0000] <MikeSmith>
http://stemkoski.github.io/Three.js/Graphulus-Curve.html

[02:03:50.0000] <MikeSmith>
oofs

[02:03:54.0000] <MikeSmith>
http://stemkoski.github.io/Three.js/Graphulus-Curve.html

[02:03:57.0000] <MikeSmith>
shit

[02:05:03.0000] <MikeSmith>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=13518#c4

[02:05:19.0000] <MikeSmith>
(momentary copy-paste fail)

[02:44:15.0000] <rits>
Hello, i have build the source on my computer and want to work on https://www.w3.org/Bugs/Public/show_bug.cgi?id=27672 as my first bug

[03:04:23.0000] <zcorpan>
rits: great! do you want guidance?

[03:05:48.0000] <rits>
zcorpan: yeah do i need to get it assigned or just i can file the PR directly

[03:06:11.0000] <zcorpan>
rits: just file the PR

[03:06:41.0000] <rits>
zcorpan: ok great! thanks

[03:06:42.0000] <zcorpan>
say "Fixes https://www.w3.org/Bugs/Public/show_bug.cgi?id=27672." on a separate line in the commit message

[03:07:56.0000] <rits>
zcorpan: ok will do that, thanks :)

[03:08:12.0000] <zcorpan>
thank *you* :-)

[04:32:31.0000] <rits>
zcorpan: Hii, i made changes in the index file but then git status is showing up working directory clean?

[04:33:05.0000] <zcorpan>
rits: edit the "source" file

[04:33:21.0000] <zcorpan>
index is the generated one

[04:33:59.0000] <rits>
zcorpan: ok

[04:59:22.0000] <rits>
zcorpan: the git status is still showing the working directory clean,i have made changes in the source file now and run the build script also

[05:00:34.0000] <zcorpan>
rits: are you in the html directory or html-build directory?

[05:00:46.0000] <rits>
html-build

[05:01:22.0000] <rits>
yeah its showing the changes :)

[05:01:30.0000] <rits>
in html directory

[05:01:37.0000] <zcorpan>
good :-)

[05:02:31.0000] <rits>
:)

[05:35:19.0000] <rits>
zcorpan: Should i file the PR through master branch or from the different branch?

[05:39:01.0000] <zcorpan>
rits: you should create a new branch in your fork, make the changes in that branch, and the PR should be to whatwg/html master

[05:39:41.0000] <rits>
zcorpan: ok

[11:57:22.0000] <rits>
Hello, While making a PR i am getting fatal errors, as the permissions denied

[11:57:53.0000] <rits>
what steps should i follow as i made a different branch in my forked repository and tried to submit the PR through that

[12:10:11.0000] <Domenic>
rits: what step are you getting errors on? Can you paste a link to your repository with its branch?

[12:11:55.0000] <rits>
Domenic: i have forked the repo i am working on this https://github.com/Ritsyy/html-build and i created the branch Bug27672

[12:12:21.0000] <rits>
i am getting the error when i did the git push origin my_branch_name

[12:12:40.0000] <rits>
and the error is fatal: unable to access 'https://github.com/whatwg/html.git/': The requested URL returned error: 403

[12:14:20.0000] <Domenic>
rits: I see the problem. MikeSmith needs to finish up his thing that makes the process clearer :)

[12:14:39.0000] <Domenic>
rits: you need to actually fork the HTML spec repo instead of the build repo. At https://github.com/whatwg/html

[12:15:17.0000] <Domenic>
rits: after you do that, inside your local html folder, do the following: git remote remove origin; git remote add origin https://github.com/Ritsyy/html.git;

[12:16:10.0000] <rits>
Domenic: oh ok got it now, doing it, thanks :)

[12:16:51.0000] <Domenic>
rits: feel free to ping me if it gives you any more trouble. Things aren't quite as smooth as we would like them to be yet :)

[12:19:44.0000] <rits>
Domenic: yeah i will, thanks :D

[12:35:14.0000] <MikeSmith>
Domenic: sorry for the delay, will attempt to get it wrapped up by this time tomorrow at the latest

[12:35:37.0000] <Domenic>
MikeSmith: all good :)

[12:50:19.0000] <MikeSmith>
rits: thanks for being patient with our only semi-functional build setup; you're one of the first people to really come in try all this out from scratch, so you're a true pioneer and fwiw your efforts will have the benefit of helping us learn too so that we can make things easier for other future contributors, and get the docs updated, etc.

[13:02:14.0000] <rits>
MikeSmith: sorry was away from the keyboard, yeah its totally fine no problem at all, the irc response is very good which make the new contributors solve the errors, its great working in whatwg :). I would also love to work on the updations of the docs and other features also :)

[13:13:27.0000] <MikeSmith>
rits: super :) glad you're here

[13:13:39.0000] <rits>
MikeSmith: Domenic : My PR https://github.com/whatwg/html/pull/238 , please review it when possible. Thanks

[13:15:06.0000] <rits>
MikeSmith: I am having fun working here. Nice to meet you :)

[13:17:33.0000] <Domenic>
yay \o/

[13:19:24.0000] <rits>
Domenic: :D yay, doing the changes :)

[13:19:54.0000] <Domenic>
rits: Oh! I forgot one thing. Let me comment on the bug...

[13:20:50.0000] <rits>
Domenic: okay,

[13:21:00.0000] <Domenic>
* on the PR

[13:24:37.0000] <rits>
Domenic: where i have to add the name for the acknowledgments

[13:25:14.0000] <Domenic>
rits: somewhere around line 118740 or so, depending on where you are in the alphabet

[13:27:22.0000] <rits>
Domenic: okey, cool!

[13:36:15.0000] <smaug____>
zcorpan: 8 incompatibilities ?

[13:36:20.0000] <smaug____>
what you mean with that?

[13:36:46.0000] <smaug____>
oh, I see

[13:36:47.0000] <zcorpan>
smaug____: "As far as I can tell the spec differs in the following ways from what " in https://lists.w3.org/Archives/Public/public-whatwg-archive/2012Dec/0264.html

[13:37:07.0000] <smaug____>
yeah, the spec was updated to something that no one implements

[13:37:59.0000] <smaug____>
and we on purpose didn't want to implement all the odd stuff the spec had before our implementation , IIRC

[13:38:39.0000] <zcorpan>
right the old stuff is not relevant

[13:39:22.0000] <zcorpan>
but blink now has an impl behind a flag of the current spec. i haven't checked how well it conforms (although i know it doesn't "limit to only known values" for .type). but it does support type=popup

[13:40:59.0000] <zcorpan>
smaug____: also if you have information not considered in https://github.com/whatwg/html/issues/234 or if you think the proposal there is super-awesome, would be good to know :-)

[13:41:46.0000] <Domenic>
smaug____: also https://github.com/whatwg/html/issues/237 !

[13:46:23.0000] <rits>
Domenic: while changing the commit message when i did this: git push --force Bug27672 , got this error http://pastebin.com/Gwmu70qj

[13:46:49.0000] <Domenic>
rits: just git push --force should work

[13:47:08.0000] <Domenic>
rits: you might want to do "git config --global push.default simple" as well

[13:48:53.0000] <rits>
Domenic: git push --force worked, actually i applied it before this "git config --global push.default simple", thanks

[13:50:04.0000] <jgraham>
I think push.default is simple as long as you have a modern git version

[13:50:32.0000] <Domenic>
rits: looks good! now just add yourself to acknowledgments and do the same thing

[13:51:04.0000] <jgraham>
(although it turns out that I don't have a modern git version by this standard; I should fix that)

[13:51:35.0000] <rits>
Domenic:  yeah doing that,

[13:52:56.0000] <smaug____>
Domenic: I would need to reread the spec for 237. The spec was a mess at some point, and looks like it is still too complicated

[13:53:00.0000] <rits>
jgraham: the docs also needs to be updated, i actually didn't notice the error the push.default in was suggested there https://help.github.com/articles/changing-a-commit-message/

[13:53:13.0000] <Domenic>
smaug____: I tried to summarize what the spec contains in 237

[13:55:17.0000] <jgraham>
(fwliw I think that the right value for that config option is "upstream")

[14:18:32.0000] <rits>
Domenic: Should i write Added "My_Name" as Acknowledger in the final commit message?

[14:19:26.0000] <Domenic>
rits: no, best to just leave that out

[14:19:58.0000] <rits>
Domenic: okay

[14:27:08.0000] <rits>
Domenic: got this error while pushing the changes http://pastebin.com/5x35ACB5

[14:27:35.0000] <Domenic>
rits: You need to do git push --force

[14:28:11.0000] <Domenic>
/me is git push --force'ing on another spec PR right this minute in fact

[14:29:02.0000] <rits>
Domenic: oh great, but i used git push --force first time, its really helpful :D

[14:29:42.0000] <Domenic>
rits: just be sure never to do it on master :)

[14:30:12.0000] <Domenic>
rits: OK this is ready for me to merge! I'll do so now...

[14:30:33.0000] <rits>
Domenic: Hhah never ever, that would be my biggest mistake

[14:30:53.0000] <rits>
Domenic: Great :D \o/

[14:37:25.0000] <zcorpan>
rits: Domenic: thanks! now pls take a moment and make some changes to the READMEs so things are more obvious for the next contributor :-)

[14:37:44.0000] <Domenic>
The acknowledgments thing is the big missing bit

[14:37:54.0000] <Domenic>
Also the stumbling block with which repo to clone will be fixed soon

[14:43:27.0000] <rits>
zcorpan: your welcome :), Domenic : Thanks for the Acknowledgments actually it made the work more interesting for me :)

[14:49:13.0000] <rits>
/me is feeling great to meet you all, see you all tomorrow :)

[16:05:24.0000] <gsnedders>
I remember seeing some research into JS library CDN cache hit rates. Anyone able to dig up a link?

[16:45:14.0000] <MikeSmith>
gsnedders: not at httparchive?

[16:47:04.0000] <MikeSmith>
gsnedders: maybe? > http://www.fse.guru/2014/03/cdn-usage-and-javascript-library#toc_5

[16:51:05.0000] <MikeSmith>
gsnedders: http://trends.builtwith.com/cdn/jQuery-CDN


2015-10-08
[17:47:04.0000] <gsnedders>
MikeSmith: those are usage, not cache hit rates

[01:12:57.0000] <zcorpan>
philipj: oops, sorry. imo we can push minor fixes like that directly to master

[01:14:50.0000] <philipj>
zcorpan: I think so too, just being overly cautious

[01:54:57.0000] <MikeSmith>
yeah I too think pushing minor fix(up)s to master is fine

[03:02:44.0000] <annevk>
Yesterday's chat here was so great to read in the logs <3

[03:43:32.0000] <rits>
annevk: Hi, are you saying about the yesterday's chat? , sorry not sure that's why asking for it

[03:45:35.0000] <annevk>
rits: happy you felt welcome and got the help you needed, that's all :-)

[03:46:58.0000] <rits>
annevk: yeah totally, going to work on more bugs, enjoying here in the community, thanks for the welcome :)

[03:47:27.0000] <annevk>
sounds great

[03:49:04.0000] <rits>
:)

[03:50:47.0000] <annevk>
yhirano_: hey, do you have a Twitter account?

[03:58:14.0000] <yhirano_>
annevk: yeah, hirano_y_aa

[05:37:00.0000] <zcorpan>
TabAtkins: PTAL https://github.com/tabatkins/bikeshed/pull/500

[05:39:01.0000] <Ms2ger>
Why does the bikeshed repo have webvtt files?

[06:00:42.0000] <zcorpan>
Ms2ger: bikeshed has boilerplate files per group, e.g. csswg and whatwg have different header files

[07:59:51.0000] <swarnim>
Hello

[07:59:51.0000] <botie>
privet, swarnim

[08:12:07.0000] <caitp>
you know how window.length refers to the number of child frames in a window, and webidl says that because it has that and an indexed getter, it should be iterable?

[08:12:22.0000] <caitp>
that seems like it would create a really weird looking api that doesn't clearly explain what it's doing

[08:42:11.0000] <Domenic>
You can always use the window.frames alias if you want

[08:42:42.0000] <caitp>
I mostly just want to get rid of it so that I can get rid of the bug in my CL without fixing it :<

[11:00:57.0000] <TabAtkins>
var frames = [...window];

[11:13:13.0000] <Domenic>
*const

[11:16:31.0000] <TabAtkins>
WHATEVER YOU'RE NOT MY REAL DAD

[13:56:45.0000] <zcorpan>
how do i rename master to gh-pages for an existing repo?

[14:01:32.0000] <gsnedders>
zcorpan: locally or on GitHub?

[14:01:39.0000] <zcorpan>
gsnedders: on github

[14:01:59.0000] <gsnedders>
zcorpan: push the branch as gh-pages, then delete master

[14:02:32.0000] <gsnedders>
zcorpan: git push origin master:gh-pages; git push origin :master

[14:09:09.0000] <zcorpan>
thx. what happens with pull requests that want to merge to master if i delete master?

[14:24:43.0000] <TabAtkins>
zcorpan: http://www.xanthir.com/b4Zz0

[14:24:58.0000] <TabAtkins>
Dunno about your second question, tho.

[14:26:49.0000] <zcorpan>
ok, thx. i'll wait with removing master for now

[14:29:59.0000] <zcorpan>
https://w3c.github.io/webvtt/ now works

[14:30:33.0000] <zcorpan>
MikeSmith: can you redirect http://dev.w3.org/html5/webvtt/ to the above url pls?

[14:31:05.0000] <gsnedders>
zcorpan: I have no idea

[14:31:27.0000] <gsnedders>
zcorpan: tbh this sounds like the exact sort of thing GH Support can probably sort out in seconds

[14:31:41.0000] <gsnedders>
zcorpan: they tend to be pretty good, in my experience, if you just drop them an email

[14:32:22.0000] <zcorpan>
gsnedders: ok

[14:33:07.0000] <MikeSmith>
zcorpan: will do right now

[14:35:17.0000] <MikeSmith>
zcorpan: done

[14:35:36.0000] <zcorpan>
thanks!

[14:43:58.0000] <zcorpan>
https://github.com/isaacs/github/issues/18

[15:14:08.0000] <MikeSmith>
haha

[15:14:10.0000] <MikeSmith>
epic


2015-10-09
[17:04:24.0000] <terinjokes>
in SRI, what's the point of "except when the user agent intends to consume the content with content-encodings applied" in 3.3.1?

[18:48:20.0000] <cvrebert>
botie: sup?

[18:48:21.0000] <botie>
cvrebert: bugger all, i dunno

[01:37:41.0000] <rits>
annevk: Hello, I am participating in outreachy and as my initial contribution what i should be doing for the project?,Thanks

[01:41:19.0000] <annevk>
rits: hey, you already made an initial contribution I saw :-)

[01:41:45.0000] <annevk>
rits: your welcome to tick of more good first bugs if you want

[01:42:27.0000] <rits>
annevk: yes :), ok i will work more on the good first bugs, actually wanted to discuss more for the project

[01:42:53.0000] <annevk>
rits: ah okay, basically it would be up to you what you work on

[01:43:57.0000] <annevk>
rits: but that might be a tad too open ended so I guess I should figure out what bugs would be good as a step up from "good first bugs"

[01:44:55.0000] <rits>
annevk: yes yes, i wanted to know that which bugs will be suitable according to the project

[01:45:46.0000] <annevk>
rits: in theory all of them (or issues you locate yourself)

[01:46:16.0000] <rits>
annevk: ok great!

[01:46:22.0000] <annevk>
rits: one thing that'd be really valuable actually is documentation on what you found missing when you started

[01:47:08.0000] <annevk>
rits: documentation is a bit lacking and another thing we need is a style guide of sorts for other newcomers

[01:47:42.0000] <rits>
annevk: yeah, that have to be altered through the readme of the github repo,

[01:50:30.0000] <rits>
annevk: didn't catch up for the style guide, if you could explain a bit

[01:51:32.0000] <annevk>
rits: ah, we need to write down somewhere that the document is in British English, that we use the Oxford comma, how to write and format an algorithm, etc.

[01:52:31.0000] <annevk>
rits: https://github.com/whatwg/html/issues/120 is the corresponding issue

[01:53:26.0000] <rits>
annevk: yeah ok, i am reading it

[01:54:00.0000] <annevk>
rits: but really, you're welcome to work on anything you fancy, so if you want more technical work, I'm happy to help you out

[01:55:02.0000] <rits>
annevk: yeah if there are more bugs related to technical issues i will be very happy to work on that, i didn't find any

[01:55:49.0000] <annevk>
rits: e.g., https://www.w3.org/Bugs/Public/show_bug.cgi?id=28338

[01:57:22.0000] <rits>
annevk: yeah great! i will work upon it, thanks :)

[01:59:26.0000] <annevk>
rits: there's also https://www.w3.org/Bugs/Public/show_bug.cgi?id=27867 and a few others

[01:59:49.0000] <annevk>
rits: bit busy today unfortunately so hopefully someone else can help you out further if there's anything else

[02:01:20.0000] <rits>
annevk: no its fine, it was great talking to you, i will ask up here if caught in any further issues,

[02:04:24.0000] <jgraham>
/me sees http://rocallahan.github.io/innerText-spec/index.html

[08:42:06.0000] <smaug____>
hmm, no ann

[08:42:08.0000] <smaug____>
e

[08:43:52.0000] <wanderview>
smaug____: I think he's at fronteers conf

[08:44:39.0000] <smaug____>
ah, visiting homeland


2015-10-10
[06:31:00.0000] <frewsxcv>
why is this length not unsigned? https://html.spec.whatwg.org/#HTMLPreElement-partial

[06:35:12.0000] <nox>
frewsxcv: Obsolete stuff?

[06:35:18.0000] <frewsxcv>
yep

[12:45:15.0000] <rits>
Hello, wanted a review for this PR https://github.com/whatwg/html/pull/245 , thanks

[14:23:36.0000] <nox>
https://html.spec.whatwg.org/multipage/tables.html#dom-tbody-insertrow

[14:23:58.0000] <nox>
This should probably include a note to make clear about what's the expected behaviour in the case where there are no rows and the index is -1.

[15:46:40.0000] <MikeSmith>
http://stackoverflow.com/questions/33059442/how-as-a-programmer-to-report-bugs-i-find-in-core-gecko-browser-engine-behavio

[15:47:07.0000] <MikeSmith>
please upvote (or downvote) as your heart leads you

[15:47:44.0000] <MikeSmith>
smaug____: FYI http://stackoverflow.com/questions/32910126/webworker-calculates-slow-regexp-matches-significantly-slower-3x-firefox-onl seems to be a Firefox-specific Workers perf issue

[15:48:18.0000] <MikeSmith>
I asked the OP to raise a bug but he gave up in frustration from trying to figure out where/how to file it

[15:49:02.0000] <MikeSmith>
hence the http://stackoverflow.com/questions/33059442/how-as-a-programmer-to-report-bugs-i-find-in-core-gecko-browser-engine-behavio question I created

[16:18:08.0000] <smaug____>
MikeSmith: thanks

[16:21:48.0000] <smaug____>
/me pinged some js engine folks

[16:31:20.0000] <MikeSmith>
smaug____: thanks

[16:31:25.0000] <MikeSmith>
oh

[16:31:33.0000] <MikeSmith>
it's not a DOM thing then?

[16:31:50.0000] <smaug____>
could be that too

[16:31:55.0000] <MikeSmith>
k


2015-10-12
[03:25:02.0000] <rits>
annevk: Hello, No i didn't submit a proposal for outreachy yet,

[03:30:10.0000] <annevk>
rits: okay, but you are aware that is needed?

[03:30:39.0000] <annevk>
rits: I realized that if you just found out about this project through Twitter you might not have seen the application process

[03:32:19.0000] <rits>
annevk: no i knew about the outreachy too, i have started making the project's proposal

[03:33:44.0000] <annevk>
rits: you can get help with questions regarding Outreachy on Mozilla IRC's #outreachy too

[03:34:53.0000] <rits>
annevk: ok, i will clear some of my doubts about outreachy there, thanks

[03:36:03.0000] <rits>
annevk: As Mozilla have not given any particular details for the proposal, i am following the proposal format given on the outreachy page, is it fine?

[03:36:19.0000] <annevk>
rits: yeah

[03:36:34.0000] <rits>
annevk: ok great! :)

[03:36:35.0000] <annevk>
rits: Mozilla is the sponsor of the projects

[03:36:47.0000] <annevk>
rits: well, the projects outlined on the Mozilla wiki

[03:38:03.0000] <rits>
annevk: yeah, ok

[04:59:22.0000] <annevk>
mkwst: https://github.com/mikewest/internetdrafts/commit/7c538ce3642a7b449b02c32e1bbca091f5f822fa what about changing ports?

[04:59:31.0000] <annevk>
mkwst: seems like Origin might still be a better term

[04:59:54.0000] <mkwst>
1. I uploaded that ~4m ago. You are stalking me.

[05:02:29.0000] <mkwst>
I changed it to "host" because we can't take ports into consideration with cookies today. We just don't have the data in the database. I kinda like that the prefix proposal just takes the tools we have in the garage today, and forces their application.

[05:02:54.0000] <mkwst>
I'm starting to think that https://tools.ietf.org/html/draft-west-origin-cookies-01 is probably not worth doing if we can do this, as it gives 90% of the benefit with 0% of the work.

[05:03:22.0000] <mkwst>
it would continue to leak across ports, and wouldn't work for non-secure origins, but those are small risks compared to today.

[05:04:12.0000] <annevk>
perhaps with a further HSTS extension that forces 443 as port for HTTP we could close the remaining gap?

[05:05:02.0000] <mkwst>
Sounds like a better use of our time than poking at the cookie spec.

[05:05:06.0000] <mkwst>
meeting. back in a bit.

[06:49:39.0000] <siddhism>
clear

[11:09:59.0000] <Domenic>
botie, tell calvaris Hey, any thoughts on the licensing issues for https://github.com/whatwg/streams/pull/397 ?

[11:10:00.0000] <botie>
will do


2015-10-13
[01:22:24.0000] <rniwa>
annevk: yt?

[01:23:11.0000] <annevk>
rniwa: yeah

[01:23:18.0000] <rniwa>
annevk: hello

[01:23:36.0000] <annevk>
morning

[01:23:54.0000] <rniwa>
annevk: so my colleague is interested in finalizing ES6 module semantics in HTML

[01:24:02.0000] <rniwa>
annevk: which W3C WG would be appropriate for that?

[01:24:17.0000] <rniwa>
(basically, I'm trying to recruit more people into standards work ;) )

[01:24:44.0000] <Ms2ger>
WHATWG

[01:25:25.0000] <rniwa>
Ms2ger: does that mean it'll be HTML WG in W3C?

[01:25:39.0000] <Ms2ger>
Ding dong, the HTML WG is dead

[01:25:43.0000] <rniwa>
(i know the irony of asking this question on #whatwg)

[01:25:56.0000] <rniwa>
Ms2ger: I'm trying to figure out which meeting he can attend at TPAC if any

[01:26:00.0000] <annevk>
rniwa: W3C is not involved

[01:26:04.0000] <rniwa>
annevk: oh

[01:26:11.0000] <annevk>
rniwa: https://github.com/whatwg/loader is where the work happens

[01:26:19.0000] <rniwa>
annevk: that seems really bad from IP perspective...

[01:26:34.0000] <annevk>
rniwa: I'm not a lawyer

[01:26:40.0000] <rniwa>
annevk: I understand

[01:27:03.0000] <rniwa>
annevk: alright, let me bring that up somewhere sane so that we can get patent protection.

[01:27:15.0000] <rniwa>
/me is always paranoid

[01:27:22.0000] <JonathanC>
where can I promote my proposed working group and find people wanting to help implement the specification? and make my coffee and lunch?

[01:28:19.0000] <rniwa>
JonathanC: you can do that at TPAC!

[01:28:27.0000] <rniwa>
JonathanC: join us on hallway conversasions

[01:29:30.0000] <JonathanC>
thanks

[01:30:24.0000] <rniwa>
annevk: btw, is anyone at Mozilla implementing that spec?

[01:30:29.0000] <rniwa>
annevk: at least module part?

[01:30:52.0000] <annevk>
rniwa: well, it isn't really done yet

[01:31:02.0000] <annevk>
rniwa: so we're mostly blocked on design

[01:31:07.0000] <rniwa>
annevk: oh I see

[01:31:31.0000] <rniwa>
annevk: http://trac.webkit.org/changeset/190272

[01:31:41.0000] <rniwa>
annevk: we're pretty much done introducing all the hooks there

[01:31:59.0000] <rniwa>
and we've been waiting for the spec to stabilize but it seems like we need to figure out all the dtails

[01:32:37.0000] <annevk>
I think everyone is at that point now

[01:32:58.0000] <annevk>
well, seems like it, but nobody has taken the time to write up the details

[01:33:13.0000] <rniwa>
okay :(

[01:33:24.0000] <rniwa>
annevk: will you be interested in talking about it at TPAC?

[01:33:46.0000] <rniwa>
unfortunately, I won't know enough about details myself but I might be able to convince someone to along with us ;)

[01:35:35.0000] <annevk>
rniwa: sure, that seems worthwhile

[01:35:57.0000] <rniwa>
annevk: great!

[01:36:04.0000] <rniwa>
/me is really excited about modules

[01:36:28.0000] <rniwa>
although I'm also very scared of its perf impact

[01:51:10.0000] <JonathanC>
rniwa: are you saying the event? or is there a channel I can also join

[01:51:43.0000] <rniwa>
JonathanC: http://www.w3.org/2015/10/TPAC/

[01:52:46.0000] <JonathanC>
I dont meet requirments :(

[01:52:58.0000] <rniwa>
oh oops :(

[01:53:25.0000] <JonathanC>
have to work on that first then.

[01:54:46.0000] <JonathanC>
or silently check in some new code into the browser source

[01:55:25.0000] <annevk>
JonathanC: which specification are you talking about?

[01:56:18.0000] <JonathanC>
Just the idea: DataSheets https://www.w3.org/community/blog/2015/10/08/proposed-group-datasheets-community-group

[02:03:33.0000] <botie>
calvaris, at 2015-10-12 18:09 UTC, Domenic said: Hey, any thoughts on the licensing issues for https://github.com/whatwg/streams/pull/397 ?

[07:35:28.0000] <gsnedders>
SimonSapin_: any chance of getting access to Template-Python on PyPi to fix https://github.com/gsnedders/Template-Python/issues/2?

[07:36:29.0000] <SimonSapin_>
gsnedders: same username?

[07:36:35.0000] <gsnedders>
SimonSapin_: yeah

[07:36:46.0000] <SimonSapin_>
done :)

[07:39:08.0000] <gsnedders>
SimonSapin_: takk

[07:47:03.0000] <gsnedders>
SimonSapin_: and pushed a 0.1post1, with a fixed MANIFEST

[07:47:09.0000] <gsnedders>
SimonSapin_: if you care at all

[07:48:46.0000] <SimonSapin_>
good to know that you’re improving this, but yeah I only care as far as building the css2 test suite

[07:48:56.0000] <SimonSapin_>
which I think Ms2ger automated to happen on Travis-CI

[07:49:07.0000] <gsnedders>
SimonSapin_: that's all I really care, too

[07:49:24.0000] <gsnedders>
SimonSapin_: but the broken MANIFEST meant that it wouldn't work for building the CSS testsuites

[07:50:49.0000] <JakeA>
Domenic: probably stupid question, could the readable stream controller be piped to?

[07:53:44.0000] <SimonSapin_>
ok, thanks for fixing it

[07:54:52.0000] <Ms2ger>
gsnedders, the bogus names are what's being tested :)

[07:55:12.0000] <gsnedders>
Ms2ger: ohhh

[07:55:44.0000] <Ms2ger>
gsnedders, I sure hope nobody would come up with those accidentally :)

[07:55:59.0000] <gsnedders>
Ms2ger: I really didn't investigate closely :)

[08:10:07.0000] <Domenic>
JakeA: no, the RSC is just a holder for a few methods, think of it like just an object literal.

[08:10:21.0000] <JakeA>
gothca, cheera

[08:10:23.0000] <JakeA>
and cheers

[08:55:25.0000] <wanderview>
MikeSmith: do you know about the w3c validator?

[08:58:21.0000] <wanderview>
MikeSmith: does the feed validator have a different tls deployment?  it seems to fail on tls for my blog feed here: https://validator.w3.org/feed/check.cgi?url=https%3A%2F%2Fblog.wanderview.com%2Fatom-mozilla.xml

[09:00:15.0000] <gsnedders>
wanderview: AFAIK they're entirely different, just with a vaguely common front-end

[09:00:35.0000] <wanderview>
hmm, but I get success if I enter the URL on validator.w3.org/ : https://validator.w3.org/check?uri=https%3A%2F%2Fblog.wanderview.com%2Fatom-mozilla.xml&charset=%28detect+automatically%29&doctype=Inline&group=0

[09:01:38.0000] <wanderview>
hmm

[09:01:40.0000] <wanderview>
gsnedders: thanks

[09:03:58.0000] <gsnedders>
wanderview: notably, the feed validator uses http://feedvalidator.org, presumably with some Python HTTP library and whatever TLS setup that uses (likely OpenSSL in some configuration or other)

[09:12:21.0000] <MikeSmith>
wanderview: what gsnedders said

[09:12:47.0000] <wanderview>
ok, thanks

[09:12:59.0000] <MikeSmith>
I know the feed validator at least has problems wish SNI

[09:13:40.0000] <MikeSmith>
I believe that's because python 2.7 doesn't do SNI

[09:14:18.0000] <MikeSmith>
it may also have other TLS problems beyond that

[09:15:17.0000] <MikeSmith>
last I knew, Sam Ruby was the one maintaining the feed-validator code

[09:18:41.0000] <jgraham>
2.7.9 supports SNI

[11:30:34.0000] <JakeA>
wanderview: is there a comment in the streams centithread that explains why a revealing constructor (even if it's called straight away) is bad, and your transform stream / pipe solution is good?

[11:31:28.0000] <wanderview>
JakeA: you mean in issue 30?

[11:31:41.0000] <JakeA>
wanderview: or #59, yeah

[11:32:32.0000] <JakeA>
wanderview: https://github.com/yutakahirano/fetch-with-streams/issues/59#issuecomment-147773920 - I get that one of the bodyWriters here will be used, and 2 of them won't, but I don't get why that's bad, or why creating 3 pipes would work around the badness

[11:33:41.0000] <wanderview>
JakeA: you don't create 3 pipes... just one pipe... and you can then later pick which ReadableStream to write into the pipe

[11:36:35.0000] <wanderview>
JakeA: not sure there is a good summary comment in issue 30, but I think this one somes up a lot of my opinions: https://github.com/yutakahirano/fetch-with-streams/issues/30#issuecomment-93039367

[11:37:07.0000] <wanderview>
JakeA: also note, a lot of the issues in comment 30 were more about Request than Response...

[11:46:39.0000] <JakeA>
cheers!

[11:48:44.0000] <JakeA>
wanderview: so why can't new Response(writableStream => cacheResponse.pipeTo(writableStream)) be optimised in the same way (done off thread), or is it just API preference?

[11:52:07.0000] <frewsxcv>
https://html.spec.whatwg.org/multipage/#ask-for-a-reset

[11:52:14.0000] <wanderview>
JakeA: well, I was thinking more for Request... with a pipe you can move the pipe off thread immediate on fetch(request)... with the writer revealer function I have to go back to javascript once I have the tcp connection established and the outgoing upload stream ready to write to...  this is an extra round trip to js

[11:52:15.0000] <frewsxcv>
"If the multiple attribute is present..."

[11:52:30.0000] <frewsxcv>
is that paragraph part of the 'ask for a reset' section?

[11:53:19.0000] <wanderview>
JakeA: I would be happy to allow the revealer function if it just implied "automatically create a pipe and caller revealer function with writer side of pipe"

[11:53:43.0000] <wanderview>
I think its unnecessary API contortions, though

[11:54:52.0000] <wanderview>
JakeA: Request and Response are inherently time-disconnected from the event that consumes them... so I think a buffered pipe is the correct representation for their body streams

[11:55:06.0000] <wanderview>
because time-disconnected effectively requires buffering

[11:56:24.0000] <JakeA>
thanks! I think I get it now

[11:57:06.0000] <Domenic>
The time-disconnected => writable stream revealer does not work argument makes a lot of sense to me

[11:57:13.0000] <Domenic>
That led me to the idea of putting the writable stream somewhere else

[11:57:22.0000] <Domenic>
But the pipe version also looks nice and simple

[11:57:42.0000] <Domenic>
So if tyoshino and yhirano_ are OK with it then it sounds good to me

[11:58:20.0000] <JakeA>
what's the difference between this pipe thing and a null transform stream?

[11:58:49.0000] <Domenic>
JakeA: pipe is what wanderview likes to call identify transform stream

[11:59:09.0000] <Domenic>
POSIX has a similar concept called pipe

[11:59:13.0000] <wanderview>
pipe is shorter

[11:59:25.0000] <JakeA>
hah, gotcha

[12:02:21.0000] <JakeA>
not that it matters, but wanderview's pipe idea sounds great to me

[12:03:01.0000] <wanderview>
I guess we also call it a pipe in gecko

[12:03:19.0000] <JakeA>
Domenic: wanderview: is it worth having a Pipe() constructor, or would it just be TransformStream with no transform specified?

[12:04:12.0000] <Domenic>
JakeA: I am not sure yet but I would prefer the latter. I think in theory that should work given that the reader and writer and pipeThrough/pipeTo design is all locked down to allow optimizations...

[12:04:58.0000] <Domenic>
this means i'm going to have to get my stuff together and finish writable streams/transform streams, eek.

[12:05:21.0000] <Domenic>
i was hoping that getting author-constructed readable streams in chrome would be enough

[12:05:23.0000] <JakeA>
Domenic: wanderview: just so you know I've been telling everyone that streams will be the major web platform addition of 2016 so you better not fuck this up

[12:05:26.0000] <JakeA>
:D

[12:05:26.0000] <Domenic>
(almost done with that patch)

[12:05:31.0000] <Domenic>
haha

[12:05:34.0000] <Domenic>
2016 we can manage

[12:06:06.0000] <wanderview>
JakeA: well, at the right things are going... no promises

[12:06:29.0000] <JakeA>
Well, even with readable streams I can prototype the perf benefits from within a service worker

[12:06:35.0000] <Domenic>
that's true

[12:07:45.0000] <JakeA>
If it beats the current client render strategy of https://wiki-offline.jakearchibald.com/ *before* optimisation, that's pretty big news

[12:08:58.0000] <Domenic>
It seems like there would be some cost in evangelizing one pattern only to later evangelize the better one though

[12:09:12.0000] <Domenic>
I guess that's life on the bleeding edge...

[12:10:24.0000] <JakeA>
Well… it depends where you're coming from. If you're starting with a JS client driven SPA, the shell approach works with little modification

[12:10:49.0000] <JakeA>
If you're a server driven site, the streaming approach is less invasive than having to create a client-driven thing

[12:11:38.0000] <JakeA>
I wouldn't change https://jakearchibald.github.io/svgomg/ for instance.

[12:31:26.0000] <smaug____>
/me assumes wpt doesn't have too many session history tests

[13:36:50.0000] <gsnedders>
smaug____: mostly the ones jgraham wrote while at Opera that finally got merged. from memory, the number isn't massive, but they're quite evil.

[13:38:15.0000] <smaug____>
I'm in process of hacking push/replaceState handling when called during page load

[13:43:25.0000] <jgraham>
smaug____: I'm not sure I wrote tests for that specific case

[13:43:29.0000] <jgraham>
But we will see

[13:43:36.0000] <jgraham>
Also if I didn't you should :)

[13:43:43.0000] <jgraham>
Also if I did you should

[13:46:33.0000] <gsnedders>
jgraham: I'm pretty sure you did.

[13:48:30.0000] <jgraham>
Maybe! But smaug still should.

[13:49:09.0000] <smaug____>
iik

[13:49:18.0000] <smaug____>
but yes, I should

[13:50:01.0000] <smaug____>
session history is after all this nice piece of web platform which isn't specified nor implemented properly anywhere

[13:50:23.0000] <jgraham>
And whiuch servo still has to implement

[13:50:33.0000] <jgraham>
So there's a very clear payoff there

[13:50:36.0000] <jgraham>
Also lag

[13:50:42.0000] <jgraham>
Can't see anything I'm typing

[13:51:46.0000] <gsnedders>
jgraham: can you remember what happened with all the Core 3 feedback, or did it just all fall into the category of "we need to rewrite all of this, because who knows what we need, halp"?

[13:53:03.0000] <jgraham>
I filed some bug reports

[13:53:13.0000] <jgraham>
I don't know what happened to them


2015-10-14
[09:00:41.0000] <Domenic>
Nobody wants to review https://github.com/whatwg/html/pull/244 ? ;_;

[09:17:23.0000] <terinjokes>
Domenic: i'm always :+1: for removing dead code

[09:37:12.0000] <annevk>
Domenic: I thought you wanted to add more things to it

[09:37:36.0000] <annevk>
Domenic: was "but there are still things to do" not meant as an indication you were going to update the PR?

[09:37:42.0000] <Domenic>
annevk: oh, no, some time soon I might do the rest, but those two stand alone for now.

[09:38:12.0000] <annevk>
Domenic: some command concepts remaining seemed a bit confusing, but I think overall it was fine

[09:39:05.0000] <annevk>
Domenic: so... LGTM

[09:39:15.0000] <Domenic>
\o/

[09:39:42.0000] <annevk>
Domenic: will you rebase & merge?

[09:39:49.0000] <Domenic>
annevk: yeah

[09:44:23.0000] <Domenic>
I wonder if we should consider some kind of... background color, maybe? ... for authoring requirements

[09:44:40.0000] <annevk>
There used to be some kind of switch

[09:45:15.0000] <annevk>
To highlight the "impl" bits mostly, since sometimes those are intertwined

[09:45:42.0000] <Domenic>
The w-nodev markers can allow you to remove the impl bits

[09:45:54.0000] <Domenic>
But the confusion we're seeing most recently is authors saying "but my browser allows this just fine"

[09:46:08.0000] <Domenic>
i.e. authors not realizing that authoring conformance criteria are meant to constrain them, not to constrain browsers.

[09:47:02.0000] <annevk>
It probably needs to be called out in text in some way too

[09:47:07.0000] <annevk>
To make it accessible

[09:47:49.0000] <Domenic>
I have vague visions of margin annotations

[09:47:53.0000] <Domenic>
Let me see if I can make a mockup

[10:01:32.0000] <Domenic>
Something like this maybe https://usercontent.irccloud-cdn.com/file/cO7Wucwf/authoring.png

[10:02:33.0000] <Domenic>
Would be a lot of work to go find all the authoring requirements though

[13:59:57.0000] <roc>
is this new Streams spec supposed to obsolete existing transformation APIs such as MediaRecorder?

[14:00:28.0000] <wanderview>
Domenic: ^^^

[14:00:32.0000] <Domenic>
roc: it is a primitive like Promise. Ideally specs upgrade to use it, like they have been doing for callbacks vs. promises

[14:00:50.0000] <Domenic>
roc: for example I threw together https://domenic.github.io/streaming-mediastreams/

[14:01:55.0000] <roc>
is MediaStreamRecorder supposed to be something totally different to MediaRecorder, or did you mean to write MediaRecorder?

[14:02:37.0000] <Domenic>
roc: it is meant to be an alternative design that is based on streams instead of having ad-hoc stream-esque interfaces

[14:03:42.0000] <roc>
so the intent *is* to replace MediaRecorder?

[14:04:26.0000] <Domenic>
roc: yes, I guess. Although it would depend on the relevant people working up the energy to implement something new, which in this particular case seems low.

[14:05:07.0000] <Domenic>
roc: just like with promises, I'm sure we'll see lots of older APIs stick with the old ad-hoc mismash of patterns (XHR's events, IDB's callbacks, etc.), while new APIs are developed that use promises (Fetch, IDB+Promises draft, ...)

[14:05:20.0000] <Domenic>
s/use promises/use the new primitive/

[14:05:24.0000] <roc>
it certainly makes sense for me for MediaRecorder to be able to produce a readable stream

[14:06:39.0000] <Domenic>
IMO that would be like saying it make sense for the XMLHttpRequest object to produce a promise. I guess it works, but it'd be better not to have to go through the old interface on your way to the new primitive.

[14:07:40.0000] <roc>
MediaRecorder has useful state like RecordingState

[14:07:53.0000] <roc>
and a MIME type

[14:08:16.0000] <Domenic>
Yes, those are present in MediaStreamRecorder as well.

[14:08:32.0000] <Domenic>
https://domenic.github.io/streaming-mediastreams/#mediastreamrecorder

[14:08:34.0000] <roc>
the state isn't, actually, but that's not so important

[14:08:54.0000] <Domenic>
well, it's in the ReadableStream class (somewhat implicitly)

[14:10:05.0000] <Domenic>
(We used to expose the state as a sync getter but people preferred not having to shuffle that information back to the main thread in the general case.)

[14:10:16.0000] <roc>
you don't have pause and resume methods and states on ReadableStreams do you?

[14:10:32.0000] <Domenic>
roc: they implicitly pause when nobody is reading from them. It's a pull model instead of a push one.

[14:10:57.0000] <roc>
ok

[14:11:09.0000] <roc>
suppose I connect a MediaStreamRecorder to an IndexedDB writeable stream

[14:11:24.0000] <roc>
I'd like to be able to pause() and resume() recording in response to user input

[14:11:32.0000] <roc>
how do I write that code in your model?

[14:12:26.0000] <roc>
that aside

[14:12:31.0000] <Domenic>
You would not use the convenience method pipeTo(idbWS), but would instead write a few lines to do reads from the MSR and writes to the IDB WS

[14:12:43.0000] <Domenic>
Then you could stop doing reads/writes at will

[14:12:56.0000] <Domenic>
pipeTo is a convenience for wanting to pipe things unconditionally

[14:13:46.0000] <Domenic>
The code would be very similar to the second example

[14:14:21.0000] <Domenic>
I would write it up but I get the sense from your "that aside" that we are moving on now :)

[14:14:24.0000] <roc>
refraining from reading is not a good signal to pause the MediaRecorder

[14:14:58.0000] <roc>
obviously there'll have to be some buffering inside the MediaRecorder or we'll lose data

[14:15:20.0000] <roc>
so pausing-by-not-reading will basically force that buffer to fill and then we'll drop data

[14:15:32.0000] <roc>
so we'll necessarily incur latency corresponding to the size of the buffer

[14:15:34.0000] <Domenic>
Oh, sorry, I misunderstood what you meant by "pausing"

[14:15:48.0000] <Domenic>
I thought you meant "pausing reading" not "pausing recording"

[14:16:05.0000] <roc>
no I mean this: http://www.w3.org/TR/mediastream-recording/#widl-MediaRecorder-pause-void

[14:16:17.0000] <Domenic>
Right

[14:16:50.0000] <Domenic>
I had an answer for this, several months ago, ... trying to dredge it up

[14:17:08.0000] <roc>
ok, so moving on :-)

[14:17:35.0000] <roc>
seems to me that MediaStreamRecorder aggregates a readable stream by inheritance

[14:17:43.0000] <Domenic>
I think it might have been that you can simply cancel the stream and create a new one when you want to resume, with the realization that if that is a naive approach, then it's easy to add pause/resume methods to pause/resume the flow of data into the readable stream

[14:18:09.0000] <roc>
that's not ideal, yes

[14:18:20.0000] <roc>
or we would have designed MediaRecorder that way

[14:18:24.0000] <Domenic>
Fair enough

[14:18:57.0000] <Domenic>
Re inheritance: yes, the intent is that many consumers of MediaStreamRecorder would treat it as a generic stream-of-blobs. Those who care specifically about the stuff exposed in https://domenic.github.io/streaming-mediastreams/#mediastreamrecorder could use those properties if they wanted.

[14:19:12.0000] <roc>
the main problem being that the recorded data has headers (and trailers) and it's not always valid to just concatenate blobs to produce a new valid media file

[14:19:26.0000] <Domenic>
Ah yeah, makes sense

[14:20:15.0000] <roc>
if MediaRecorder exposed a readable stream as a property, that would be aggregating by membership

[14:20:34.0000] <roc>
I don't think this is a huge difference

[14:21:04.0000] <Domenic>
I agree

[14:21:15.0000] <Domenic>
But MediaRecorder has a bunch of stuff that is just an ad-hoc readable stream interface

[14:21:32.0000] <roc>
aggregation by membership is often preferred, especially when you might need multiple inheritance, like EventTarget if you want to something to fire custom events at

[14:21:46.0000] <Domenic>
If the argument is to preserve compat for backward-compat purposes then that makes sense

[14:21:54.0000] <roc>
I agree, and maybe that can be deprecated or removed later

[14:22:08.0000] <Domenic>
Yeah, that seems like a reasonable way to evolve

[14:22:13.0000] <roc>
removing those parts is simpler and less risky than replacing the entire interface

[14:22:26.0000] <Domenic>
I wasn't really clear what the interop status on MediaRecorder was

[14:22:36.0000] <roc>
Firefox ships it

[14:22:45.0000] <roc>
AFAIK Chrome is close to having an implementation

[14:23:28.0000] <Domenic>
Cool, yeah.

[14:23:54.0000] <Domenic>
If there were interest I'd be happy to recast this as an extension to existing MediaRecorder. Right now it was mostly just a POC.

[14:24:08.0000] <roc>
I have another question about structured elements in streams. The spec draft talks about passing video frames and stuff like that

[14:24:17.0000] <Domenic>
Heh.

[14:24:19.0000] <roc>
I'm a bit dubious aobut that

[14:24:21.0000] <roc>
but

[14:24:24.0000] <Domenic>
Yes, that is a bit handwavey

[14:24:28.0000] <roc>
I don't have time to talk about it right now!

[14:24:36.0000] <roc>
so, I'll catch you later :-)

[14:24:40.0000] <Domenic>
Cool :)


2015-10-15
[02:52:27.0000] <FND>
hi - could someone provide an authoritative assessment of the state of fetch here: https://github.com/neo4j/neo4j/issues/5628#issuecomment-148325581

[02:52:49.0000] <FND>
I reckon the CORS restrictions can be considered stable?

[02:59:03.0000] <MikeSmith>
FND: CORS restrictions can definitely be considered stable

[02:59:41.0000] <FND>
MikeSmith: would you mind commenting as much on the ticket - or should I just quote you?

[03:00:18.0000] <MikeSmith>
FND: I will reply there right now

[03:00:24.0000] <FND>
thank you!

[03:07:31.0000] <annevk>
FND: note that just supplying the Origin is not sufficient

[03:07:41.0000] <annevk>
FND: you also need to have Access-Control-Allow-Credentials

[03:08:18.0000] <annevk>
FND: however, do you really need to allow for credentials in your request?

[03:09:12.0000] <FND>
annevk: yeah, I'm aware of that - in this case, I'm writing an SPA on top of Neo4j's REST API, both of which are only accessible behind Basic Auth

[03:09:55.0000] <annevk>
FND: note that if you pass credentials yourself, you might not necessarily need credentials: include

[03:10:21.0000] <FND>
annevk: I don't quite follow

[03:10:23.0000] <annevk>
FND: the credentials parameter is really only for browser-supplied credentials, such as previously set cookies or stored authentication data

[03:10:51.0000] <annevk>
FND: I need to explain that better in the specification at some point, but it's somewhat complicated :/

[03:10:59.0000] <MikeSmith>
I commented at https://github.com/neo4j/neo4j/issues/5628#issuecomment-148341540

[03:11:02.0000] <FND>
ah, right, of course - thus the Basic Auth mention above

[03:11:21.0000] <FND>
thanks MikeSmith!

[03:11:24.0000] <MikeSmith>
annevk maybe should comment there as well I suppose

[03:11:29.0000] <annevk>
FND: yeah, if you don't set the Authorization header yourself, I guess you'll need to have credentials included

[03:11:34.0000] <MikeSmith>
FND: thanks for the heads-up

[03:16:22.0000] <FND>
thanks guys, this was a delightfully straightforward interaction

[04:11:01.0000] <FND>
annevk: thanks for the clarification on that ticket - so am I to assume that ikwattro's assertion regarding non-fetch CORS requests doesn't apply for withCredentials?

[04:11:37.0000] <annevk>
FND: I'm not sure what you mean by that

[04:11:57.0000] <annevk>
FND: fetch() and XMLHttpRequest basically do the same thing, fetch() just has a couple more settings

[04:12:04.0000] <FND>
so ikwattro said "I can make CORS requests (without fetch) to a local neo4j instance from a web application without problems"

[04:12:24.0000] <FND>
but he's probably only tested it without credentials then?

[04:12:26.0000] <annevk>
FND: I suppose that he hasn't set withCredentials to true there, yes

[04:12:32.0000] <FND>
roger, thank you

[04:50:58.0000] <mkwst>
annevk: Is the first item of a request's `url list` something I could safely reference to grab the URL that a page thinks that it's requesting?

[04:51:52.0000] <annevk>
mkwst: you could just use request's url

[04:52:17.0000] <mkwst>
Oh. I though the url was changed during redirects.

[04:53:13.0000] <mkwst>
Yeah, I guess I misread. That's simpler. Thanks! :)

[04:54:09.0000] <annevk>
That changed a while back to make Request / request more similar

[04:54:46.0000] <mkwst>
Makes sense. :)

[06:22:16.0000] <annevk>
gsnedders: what's the deal with https://groups.google.com/forum/#!forum/html5lib-discuss?

[06:22:29.0000] <annevk>
gsnedders: abandoned?

[06:24:24.0000] <Ms2ger>
Sounds likely

[06:35:53.0000] <nox>
I have a PR on Servo that updates various WPT tests to use latest interfaces defined in the URL spec btw.

[06:49:30.0000] <gsnedders>
annevk: it, uh, theoretically still exists.

[06:50:39.0000] <gsnedders>
annevk: de-facto StackOverflow has kinda taken over

[07:02:51.0000] <Ms2ger>
<html requestVisibility=1>

[07:03:00.0000] <Ms2ger>
I hope someone is reviewing this...

[07:03:16.0000] <jgraham>
?

[07:04:12.0000] <annevk>
Ms2ger: what is that?

[07:05:24.0000] <Ms2ger>
https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/qRGtrVZ1X98

[07:06:57.0000] <annevk>
Ms2ger: ah, the one email I didn't read

[07:07:20.0000] <Ms2ger>
Heh

[07:08:10.0000] <annevk>
Ms2ger: that proposal didn't really seem thought out

[07:08:47.0000] <Ms2ger>
I stopped reading at the first code snippet

[09:25:20.0000] <MikeSmith>
Domenic: I like https://usercontent.irccloud-cdn.com/file/cO7Wucwf/authoring.png and think it's worth pursuing

[14:25:19.0000] <TabAtkins>
Anyone know the reasoning behind moving WebAppsWG to WPWG?

[14:27:49.0000] <gsnedders>
TabAtkins: merging in the HTML WG, given it was

[14:28:05.0000] <TabAtkins>
...and why does that require closing WebApps?

[14:28:11.0000] <gsnedders>
TabAtkins: the charter expired

[14:28:28.0000] <gsnedders>
TabAtkins: and rechartering is essentially creating a new WG

[14:28:28.0000] <TabAtkins>
...and why does that require closing WebApps (rather than just reupping the charter)?

[14:28:47.0000] <TabAtkins>
"essentially", but requires everyone to move over and re-join.

[14:29:20.0000] <gsnedders>
MikeSmith said something about rechartering (as opposed to extensions) requiring everyone to rejoin anyway.

[14:30:05.0000] <jgraham>
Ours is not to reason why, ours is but to get on with useful work in whatever forum and let the lawyers keep themselves country clubs arguing over the rest.

[14:30:32.0000] <jgraham>
/me is not exactly Tennyson

[16:29:28.0000] <MikeSmith>
The move to the new WG was not just a W3C team preference; it was discussed and planned with quite a lot of input/requirements from various parties. In particular, a number of different people from all the browser-engine projects had a voice in helping to determine what the plans would be.

[16:30:30.0000] <MikeSmith>
TabAtkins: You can ask internally on the Chrome team for more insight on why/how the particular makeup on the new group was arrived at

[16:31:32.0000] <MikeSmith>
in the end, as usual, not everybody who took the time to help get the details worked out was completely happy with the result

[16:32:12.0000] <MikeSmith>
but I think plh did a pretty great job of synthesizing all the input/requirements he was given to work with, and coming up with some balance

[16:33:14.0000] <MikeSmith>
anyway, the WebApps WG was around in the form it had for 8 years or whatever, and in mostly the same form for a couple years before that, as the Web APIs WG

[16:35:14.0000] <MikeSmith>
so it was bordering on 10 years of life, and was sorta due anyway for having some assumptions re-examined, and refinements made

[16:38:41.0000] <MikeSmith>
and simply doing another charter extension of the WebApps WG as not an option, and we needed to fully recharter it anyway; and re-chartering a group in practice basically amounts to creating a new group (since among other things, as gsnedders mentioned, it requires all the participants to do the steps of (re)joining after its launched)

[16:39:55.0000] <MikeSmith>
anyway, fwiw, I think plh got it all right and the group is going to turn out to be at least as useful a place to get work done as the WebApps WG was

[16:43:32.0000] <TabAtkins>
MikeSmith: All right. I just stumbled across the announcement, and there was no mention whatsoever of the reasoning.


2015-10-16
[19:30:47.0000] <MikeSmith>
my Canary on OS X is failing to update for the last couple days. Wondering if others are having the same problem

[19:31:41.0000] <MikeSmith>
normally I would just give up and build it from sources, but I have XCode7 installed, and that currently breaks clang compiling of the blink code all over the place

[21:02:15.0000] <caitp>
MikeSmith: that sounds like the issue of not having the OSX 10.10 sdk, probably

[21:03:26.0000] <caitp>
but no, not having that issue here

[00:55:47.0000] <MikeSmith>
caitp: yeah I've since re-tried the build and it actually ran to completion and I've got a new Chromium binary so I'm all good now

[00:57:32.0000] <MikeSmith>
I had basically been away for an entire week, til today, so I guess all the fixes got made in the mean time

[00:59:05.0000] <MikeSmith>
caitp: for historical interest, https://code.google.com/p/chromium/issues/detail?id=517914 (resolved Oct 13)

[01:29:05.0000] <philipj>
annevk: do you know how arangana of File API fame is? https://github.com/w3c/FileAPI/commit/613b4d5b679cc651184275d784c1d74e078c3fdf

[01:29:40.0000] <annevk>
philipj: I suspect Arun

[01:30:22.0000] <philipj>
annevk: https://github.com/arunranga that is?

[01:30:33.0000] <annevk>
philipj: yes

[01:30:37.0000] <philipj>
ok, thanks!

[01:33:31.0000] <philipj>
annevk: the context is https://github.com/w3c/webrtc-pc/issues/324#issuecomment-148652950

[02:00:37.0000] <MikeSmith>
philipj: Arun is a wonderfully reasonable and responsive guy. He's even around on this channel sometimes.

[02:02:07.0000] <MikeSmith>
And he is somewhat actively contributing recently to discussion on some new spec proposal (though I forget right now which one), so I know he is around

[02:02:31.0000] <MikeSmith>
at least he was a week or so ago before I took my golf vacation

[03:26:47.0000] <gsnedders>
Is microdata essentially entirely dead now?

[03:27:10.0000] <gsnedders>
oh, it's just gone from the W3C spec?

[03:27:22.0000] <jgraham>
The API is dead

[03:27:33.0000] <jgraham>
The markup is less dead

[03:34:24.0000] <gsnedders>
Given everything that supports microdata also supports RDFa, as far as I can tell, and some things *only* support RDFa, it seems dubious to me as to why I should use it.

[03:35:00.0000] <jgraham>
So that you don't have to use RDFa?

[03:35:09.0000] <jgraham>
I mean that's the value proposition

[03:35:22.0000] <jgraham>
If you don't think that's valuable then you aren't going to like it

[03:35:56.0000] <gsnedders>
RDFa really isn't that bad if you use a simple subset, though…

[03:36:33.0000] <gsnedders>
esp. now RDFa Lite is supported everywhere

[03:36:57.0000] <jgraham>
Shrug

[03:37:04.0000] <gsnedders>
I agree the full thing is implementation hell, but the reality is that it's supported everywhere and microdata isn't.

[03:37:06.0000] <jgraham>
They all solve a problem I have never had

[03:37:33.0000] <gsnedders>
(the problem in question here is "getting 'Rich Snippets' on Google search")

[03:37:48.0000] <gsnedders>
And "reasonable auto-link descriptions on Facebook"

[03:37:53.0000] <gsnedders>
And things along this line.

[03:50:56.0000] <gsnedders>
oh god

[03:51:02.0000] <gsnedders>
ended up looking at the *full* RDFa spec

[03:51:04.0000] <gsnedders>
I'm so lost.

[03:51:16.0000] <gsnedders>
And I'm someone who's done a fair bit with RDF previously…

[04:51:38.0000] <annevk>
That's why we have Microdata

[07:01:41.0000] <smaug____>
annevk: "Apply the URL parser to url, with base as the base URL, with encoding as the encoding." means what

[07:02:19.0000] <smaug____>
is it about "basic URL parser"in https://url.spec.whatwg.org/#concept-basic-url-parser ?

[07:02:22.0000] <smaug____>
or something else

[07:02:56.0000] <smaug____>
hmm, maybe not, since HTML spec uses both "URL parser" and "basic URL parser"

[07:03:52.0000] <smaug____>
and " basic URL parser" takes and input, and url and base are optionals

[07:04:05.0000] <gsnedders>
smaug____: https://url.spec.whatwg.org/#url-parsing

[07:05:12.0000] <smaug____>
hmm, it takes input

[07:05:30.0000] <smaug____>
I guess "url" maps to that "input"

[07:06:05.0000] <gsnedders>
yeah

[07:36:47.0000] <annevk>
smaug____: is URL parser not xref'd?

[07:46:49.0000] <smaug____>
I didn't see a link

[07:47:00.0000] <smaug____>
there was a link to "basic URL parser"

[07:54:25.0000] <annevk>
smaug____: anyway, URL parser is https://url.spec.whatwg.org/#concept-url-parser

[07:54:39.0000] <annevk>
smaug____: which takes a url, base URL, and an encoding

[07:55:04.0000] <smaug____>
it takes "input"

[07:55:19.0000] <smaug____>
but something else is passing "url"

[07:55:27.0000] <smaug____>
so that was just a bit misleading, silly me

[07:56:10.0000] <annevk>
smaug____: I see, still need to update HTML a bit around URL handling

[07:56:12.0000] <smaug____>
/me almost understands how push/replaceState should behave per spec ;)

[07:56:49.0000] <Ms2ger>
How about you write a couple hundred tests? :)

[08:08:43.0000] <annevk>
Ms2ger: what is the frameURI business in https://github.com/w3c/web-platform-tests/blob/master/html/browsers/origin/cross-origin-objects/win-documentdomain.html?

[08:10:13.0000] <Ms2ger>
No clue

[08:12:16.0000] <annevk>
"Addressed Ms2ger's review comments."

[08:12:18.0000] <annevk>
hmm

[08:13:09.0000] <annevk>
Ms2ger: https://critic.hoppipolla.co.uk/r/2116

[08:13:32.0000] <annevk>
I don't understand assigning window.frames in https://github.com/w3c/web-platform-tests/blob/master/html/browsers/origin/cross-origin-objects/frame.html either

[08:14:16.0000] <Ms2ger>
Ask bholley?

[08:14:26.0000] <Ms2ger>
Or bz

[08:16:25.0000] <annevk>
I guess I have to :-/

[08:16:35.0000] <annevk>
I already have some outstanding questions

[08:16:40.0000] <annevk>
This is a bit hard

[11:07:08.0000] <Domenic>
So the correct type for representing timestamps is unsigned long long?

[11:07:31.0000] <TabAtkins>
Isn't it DOMTimestamp

[11:07:32.0000] <TabAtkins>
?

[11:07:40.0000] <Domenic>
I think that is changing to be offset from page load?

[11:08:09.0000] <Domenic>
No, I am wrong

[11:08:22.0000] <gsnedders>
https://dom.spec.whatwg.org/#interface-htmlcollection has what I'd expect to be a link to "Elements" at the start of the note… and it's not xref'd

[11:10:05.0000] <TabAtkins>
Yeah, the Elements definition is written in pseudo-ES6/IDL, rather than actual WebIDL, so it's not auto-marked-up by Bikeshed, and Anne hasn't manually marked it up.

[11:10:28.0000] <gsnedders>
well you guys suck!

[11:35:52.0000] <TabAtkins>
Ugh, I still hate the "in parallel, do..." construction. Every time I see it, it looks like it's telling me to shard out the nested operations in parallel.

[12:03:00.0000] <Domenic>
Anyone have examples of APIs that use an abbreviation as their first word in a method or property?

[12:03:07.0000] <Domenic>
So far all I've found is document.URL

[12:04:18.0000] <Domenic>
OK, document.fgColor, bgColor

[12:04:32.0000] <Domenic>
cssElementMap

[12:04:34.0000] <Domenic>
I conclude lowercase

[12:05:39.0000] <Domenic>
Nobody seems to implement cssElementMap, we should probably kill that

[12:33:46.0000] <annevk>
Domenic: yes, lowercase for properties

[13:10:41.0000] <bholley>
annevk: let's talk here

[13:10:51.0000] <bholley>
annevk: what do you mean 'corresponds to'?

[13:10:54.0000] <bholley>
annevk: do you mean 'describes'?

[13:11:00.0000] <bholley>
annevk: or do you mean 'is an object in the scope of'

[13:11:05.0000] <annevk>
bholley: hmm, I guess it describes the active document

[13:11:10.0000] <bholley>
annevk: exactly

[13:11:12.0000] <annevk>
bholley: which could be cross-origin

[13:11:15.0000] <bholley>
annevk: that's the weird thing about location

[13:11:24.0000] <bholley>
annevk: which is why same-origin Location objects still need security checks

[13:11:33.0000] <bholley>
annevk: because you might not be the active document

[13:11:40.0000] <bholley>
annevk: but that's distinct from how we handle cross-origin objects

[13:12:25.0000] <annevk>
bholley: is the only difference the prototype stuff and expandos and some things around enumerability?

[13:12:36.0000] <bholley>
annevk: difference between what and what?

[13:13:03.0000] <annevk>
bholley: between same-origin Location object describing "cross-origin active document" and cross-origin Location object

[13:13:19.0000] <bholley>
annevk: they are different "concepts"

[13:13:22.0000] <bholley>
annevk: which might be confusing you

[13:13:36.0000] <bholley>
annevk: the "concept" is not "the URL of the browsing context"

[13:13:57.0000] <bholley>
annevk: the "concept" is "the Location interface associated with a given Window"

[13:14:06.0000] <bholley>
annevk: which, for bizarre reasons, doesn't necessarily describe that window

[13:14:37.0000] <bholley>
annevk: but for our purposes, two Location objects that describe the same browsing context are totally distinct

[13:14:49.0000] <bholley>
annevk: this is web-observable, FWIW

[13:15:18.0000] <bholley>
annevk: grab xoIframe.contentWindow.location, navigate it to something else, grab the location again

[13:15:22.0000] <bholley>
annevk: they're two different objects

[13:15:38.0000] <annevk>
sure, Location objects are minted per Document

[13:15:41.0000] <bholley>
right

[13:16:12.0000] <bholley>
annevk: and you can only read the information if the associated Document is same-origin _and_ the Document's BC's active Document is same-origin

[13:16:23.0000] <bholley>
as in, we take a union of the two security restrictions

[13:17:44.0000] <annevk>
makes sense

[13:18:13.0000] <annevk>
the "concept" thing is a bit weird, since the cross-origin wrapper will forward behavior and at that point we basically expect that behavior to be JavaScript-object-like

[13:18:40.0000] <annevk>
or something JavaScript can call into

[13:19:16.0000] <bholley>
annevk: please don't spec this in terms of wrappers

[13:20:12.0000] <annevk>
bholley: html5-cross-origin-objects is basically a description of proxy objects

[13:20:31.0000] <annevk>
bholley: I guess I shouldn't use the word wrapper for proxy, but in mind they're somewhat interchangeable

[14:49:49.0000] <nox>
annevk: The URL spec says: "A URLSearchParams object’s update steps are to set url object’s url’s query …" and "A URLSearchParams object has an associated url object, which is initially null.",

[14:50:13.0000] <nox>
annevk: but it also says "A URL object has an associated url (a URL) and query object (a URLSearchParams object)."

[14:50:50.0000] <nox>
So, can URLSearchParams' "url object" be something else than an instance of the interface named URL?

[16:50:09.0000] <rniwa>
Domenic: yt?

[16:50:15.0000] <rniwa>
annevk: yt?


2015-10-17
[16:52:48.0000] <aleray>
hi, I'm having troubles with html5lib python and lxml. I get the message `ValueError: All strings must be XML compatible: Unicode or ASCII, no NULL bytes or control characters` with my script which is here: http://dpaste.com/1AWKEG8

[16:52:52.0000] <aleray>
it is a python 2 script


2015-10-18
[17:05:43.0000] <MikeSmith>
aleray: if that is in fact a message coming from the html5lib module and not lxml itself, gsnedders might have a clue

[17:07:12.0000] <MikeSmith>
aleray: a code grep indicates that it's an lxml message

[17:07:34.0000] <MikeSmith>
src/lxml/lxml.etree.c

[17:09:40.0000] <aleray>
MikeSmith, thanks. I found this solution: `html = ''.join(c for c in html if valid_xml_char_ordinal(c))` on a forum

[17:09:46.0000] <MikeSmith>
ah, that's a generated file

[17:09:49.0000] <MikeSmith>
ah OK

[17:09:57.0000] <aleray>
not sure if it strips any important thing though

[17:10:23.0000] <aleray>
or just junk characters (the HTML is generated with ckeditor from word documents)

[17:10:52.0000] <aleray>
Here is the  link to the forum: http://www.itsprite.com/pythonfiltering-out-certain-bytes-in-python/

[17:10:59.0000] <MikeSmith>
/me looks

[17:12:14.0000] <MikeSmith>
looks like http://stackoverflow.com/questions/8733233/filtering-out-certain-bytes-in-python might also be useful

[17:12:57.0000] <aleray>
MikeSmith, same post actually. thanks for pointing ti the source though

[17:13:04.0000] <MikeSmith>
ah ok

[17:13:41.0000] <MikeSmith>
these days I always go to StackOverflow first

[17:15:57.0000] <aleray>
MikeSmith, so it seems to work. I have another small issue: I parse an html fragment with no root element. my code fails because of that because it is expecting a root node and I get a list of elements instead

[17:16:57.0000] <MikeSmith>
aleray: yeah I understand that problem there but can't be of much help just at the moment. Will be freed up in about 2 hours if you're still around

[17:17:45.0000] <aleray>
MikeSmith, thanks. i'll be sleeping probably. Any direction to search myself?

[17:43:20.0000] <gsnedders>
aleray: known bug, but kinda horrible to fix accurately and hence not done yet :\

[17:43:44.0000] <gsnedders>
aleray: I'm increasingly leaning towards just hacking together some horrible fix for it that should at least /mostly/ fix it

[18:02:08.0000] <aleray>
gsnedders, Hi; talking about the invalid xml characters?

[18:03:00.0000] <aleray>
I'm glad the solution I found seems working at least

[18:04:45.0000] <aleray>
gsnedders, may be you could help me with the other thig, that is to be able to parse a fragment with lxml and get an tree rather than a list of elements

[18:06:05.0000] <aleray>
the code here: http://dpaste.com/0XQHK9D raises an `AttributeError: 'list' object has no attribute 'xpath'`

[18:06:43.0000] <aleray>
because `tree = parser.parseFragment(html)` returns a list

[18:07:34.0000] <aleray>
because my fragment contains several elements

[18:13:07.0000] <aleray>
etree and lxml behave differently. See http://dpaste.com/3SE8103 and http://dpaste.com/3G7N7JS

[18:13:38.0000] <aleray>
I'd like the etree behaviour with lxml, So I could use xpath on it

[01:39:07.0000] <zewt_>
"filename.zip may harm your browsing experience, so Chrome has blocked it" nice of Chrome to ask my permission before "blocking it" a harmless file that I now have to download again in firefox

[01:39:34.0000] <zewt_>
all browsers have turned to crap

[01:49:50.0000] <zewt_>
when did it become okay for browsers to override the user on his own system, bodes deeply ill for the future of the web

[01:53:45.0000] <JonathanC>
https://www.w3.org/community/ DataSheets - need members

[03:19:31.0000] <aleray>
I'm stuck with my problem from yesterday: using lxml the parseFragment methods gives me a list of nodes

[03:19:41.0000] <aleray>
with etree it gives me one single element

[03:19:55.0000] <aleray>
because I have a list, I can't use methods like "xpath"

[04:39:51.0000] <annevk>
2016 is close and the Location object is still poorly understood and defined: https://lists.w3.org/Archives/Public/www-archive/2015Oct/0051.html

[05:16:49.0000] <gsnedders>
aleray: hmm… both options seem kinda bad :\

[07:26:53.0000] <aleray>
gsnedders, hi, what do you meean?

[12:24:01.0000] <nox>
annevk: Should an url object's query become null again when its URLSearchParams becomes empty?


2015-10-19
[00:15:49.0000] <annevk>
nox: should always be 1:1

[00:20:06.0000] <nox>
annevk: I mean null vs empty value.

[00:21:00.0000] <annevk>
nox: oh sorry

[00:21:33.0000] <annevk>
nox: I'm not sure

[00:21:44.0000] <annevk>
nox: maybe that would be nice, dunno

[00:22:30.0000] <annevk>
nox: seems like it might be tricky to represent it being the empty string then

[00:33:14.0000] <nox>
annevk: Is there actually any difference in how the two are handled or serialised?

[00:33:49.0000] <annevk>
nox: yeah, the difference is whether you see a ? in the URL

[00:35:02.0000] <nox>
Oh.

[01:02:46.0000] <zcorpan>
hello whatwg

[01:03:36.0000] <MikeSmith>
hola zcorpan

[01:05:21.0000] <Ms2ger>
Morning

[06:48:33.0000] <annevk>
Domenic: formatting in https://streams.spec.whatwg.org/#get-viewed-array-buffer seems wrong

[07:52:51.0000] <wanderview>
JakeA: previously you were telling me you thought e.respondWith() should not timeout the SW like waitUntil() does

[07:53:10.0000] <wanderview>
JakeA: what about if the script does e.respondWith(new Promise())... a promise that never resolves...  how does chrome handle that?

[07:58:00.0000] <wanderview>
JakeA: of course, now I'm trying to remember why we wanted long running respondWith() anyway

[08:46:58.0000] <annevk>
Domenic: so the approach for Location seems to be to just define an object and override all the internal methods somehow

[08:47:34.0000] <Domenic>
annevk: that seems totally legit. It's an exotic object.

[08:47:47.0000] <Domenic>
annevk: would be implemented with a Proxy in self-hosted land

[08:47:53.0000] <annevk>
Domenic: however, is there some way to use the default behavior for an internal method from the overriding variant?

[08:48:15.0000] <Domenic>
annevk: yes, let me see if I can find some prose that does that.

[08:48:17.0000] <annevk>
Domenic: e.g. [[Delete]] does the ordinary [[Delete]] behavior for "same-origin", but simply throws otherwise

[08:49:46.0000] <Domenic>
annevk: well maybe there is an OrdinaryDelete etc.... here is how Array delegates to OrdinaryDefineOwnProperty: https://tc39.github.io/ecma262/#sec-array-exotic-objects-defineownproperty-p-desc

[08:50:27.0000] <Domenic>
annevk: it doesn't look like everything is factored to allow this though

[08:50:34.0000] <Domenic>
which is something we could in theory pull request to ES for

[08:50:41.0000] <annevk>
okay

[08:50:51.0000] <annevk>
that would make sense perhaps

[08:51:37.0000] <Domenic>
But it also seems legit to say something like "return the result of applying the [[GetOwnProperty]]() method for ordinary objects to O" or something

[08:52:04.0000] <annevk>
If "same-origin", then TODOOrdinaryDelete(this, P).

[08:52:15.0000] <annevk>
Hmm yeah, was wondering about that

[08:52:48.0000] <Domenic>
I'll open an issue

[08:52:52.0000] <Domenic>
Maybe Allen will have advice

[08:52:59.0000] <Domenic>
Or maybe he'll be like "yeah we should have factored them all out"

[08:57:03.0000] <annevk>
So next is the own properties... W should probably have a heading per thing. "set href" etc. However, maybe they shouldn't really be properties but just behave as such from the outside?

[08:57:42.0000] <Domenic>
Hmm, if you are redefining [[Set]]/[[Get]] then yeah, your object isn't going to have properties really

[08:57:44.0000] <annevk>
Especially with the "A Caller-Appropriate Cross-Origin Representation of a Method, Getter, or Setter" stuff defining properties directly seems kind of pointless since their behavior needs to be wrapped

[08:58:11.0000] <Domenic>
Yeah I think each of your internal method definitions is going to have some sort of lookup.

[08:58:50.0000] <Domenic>
If P is "href", return X. If P is "origin", return Y.

[08:59:03.0000] <Domenic>
Maybe use a table or a <ul class="switch"> or whatever

[09:01:57.0000] <Domenic>
annevk: an alternate idea approach for all this is that if there happens to be a real underlying object (or several), you can dispatch to it

[09:02:16.0000] <Domenic>
annevk: so "If flag X is set, throw. Otherwise, return SetPrototypeOf(targetObj, V)"

[09:04:36.0000] <annevk>
[[SetPrototypeOf]] always happens to throw

[09:04:38.0000] <annevk>
but yeah

[09:04:46.0000] <annevk>
that might be a tad more readable

[09:06:08.0000] <JakeA>
wanderview: I think respondWith should time out like regular requests do (unless there's a good reason to do something different?)

[09:06:34.0000] <wanderview>
JakeA: you mean timeout the network request, not the service worker lifetime timeout, right?

[09:17:02.0000] <Domenic>
annevk: yeah actually now that I think about it, you'll almost certainly need a few targetObjs to implement the caller-appropriate cross-origin representation thing.

[09:17:16.0000] <Domenic>
Otherwise you'll need some place to store the getter/setter function objects

[09:17:40.0000] <annevk>
Domenic: well yeah, my plan for that was to have a WeakMap

[09:17:42.0000] <Domenic>
Seems better to have a caller-appropriate cross-origin target object

[09:17:46.0000] <Domenic>
right

[09:18:34.0000] <annevk>
Domenic: I guess it could be an object on the other side of the WeakMap rather than a function...

[09:18:48.0000] <Domenic>
i guess i am just saying that the distinction between a WeakMap mapping callers to { hrefSet, hrefGet, originSet, originGet, ... } and a WeakMap mapping callers to CrossOriginLocation-esque objects is not big

[09:19:09.0000] <Domenic>
whichever is more convenient to spec I guess

[09:19:43.0000] <annevk>
In the hrefSet scenario those would simply be internal slots, right?

[09:20:15.0000] <Domenic>
internal slots of what?

[09:20:20.0000] <annevk>
of the Location object

[09:20:58.0000] <annevk>
and then when [[Get]] happens it would try to pull them out of the weakmap and if that fails wrap them and put them in the weakmap and then return them

[09:21:13.0000] <Domenic>
I still don't understand what internal slots you are talking about

[09:21:43.0000] <annevk>
Domenic: to describe Location.protocol et al

[09:21:59.0000] <Domenic>
annevk: can you give these slots a name and what object they live on please?

[09:22:40.0000] <annevk>
Domenic: I'm talking about the behavior of e.g. the protocol getter/setter, where that has to live

[09:22:51.0000] <Domenic>
annevk: so you need one getter/setter per caller right?

[09:23:20.0000] <Domenic>
(for some definition of "caller")

[09:23:24.0000] <annevk>
Domenic: per tuple of sorts, right

[09:23:46.0000] <annevk>
Domenic: though for cross-origin there's really only two: set href / replace

[09:24:45.0000] <Domenic>
So I see two possibilities: 1. let wm = this@[[AccessorWeakMap]]; 2. if wm has caller, let accessors = get caller from wm and return accessors.[[Get]]; 3. otherwise, create accessors, store, return.

[09:24:48.0000] <Domenic>
or

[09:25:38.0000] <Domenic>
1. let wm = this@[[RepresentationWeakMap]]; 2. if wm has caller, let obj = get caller from wm; 3. otherwise, let obj = new CrossOriginLocationRepresentation, and store it in wm; 4. return Get(obj, "origin")

[09:26:39.0000] <Domenic>
I tend to think the latter will work better

[09:27:13.0000] <Domenic>
If you go with the former though it probably won't be bad, just maybe a little messy, and we could refactor it into the latter if indeed it ends up isomorphic

[09:30:27.0000] <annevk>
Domenic: so since for Location it's only "href" and "replace" that are magical cross-origin, perhaps actually defining own properties and having some special behavior cross-origin with the WeakMap would be even simpler

[09:31:04.0000] <Domenic>
annevk: you can't define own properties once you've taken over the definition of [[Get]]/[[Set]]/[[DefineOwnProperty]]/et al.

[09:31:05.0000] <annevk>
Domenic: and "href" and "replace" and the cross-origin variants of them would simply invoke an abstract operation

[09:31:09.0000] <Domenic>
In other words proxies cannot have own properties

[09:31:16.0000] <annevk>
Domenic: oh, they cannot defer?

[09:31:19.0000] <annevk>
Domenic: okay

[09:31:26.0000] <Domenic>
They can defer to a different target object

[09:31:37.0000] <annevk>
Domenic: in that case defining a LocationBackend seems sensible

[09:31:40.0000] <Domenic>
And they can use the ordinary behavior

[09:31:57.0000] <Domenic>
Hmm actually

[09:32:01.0000] <Domenic>
How does Array length work

[09:32:43.0000] <Domenic>
I might be wrong

[09:32:49.0000] <Domenic>
Array length is defined like https://tc39.github.io/ecma262/#sec-properties-of-array-instances-length

[09:32:52.0000] <Ms2ger>
It doesn't

[09:33:19.0000] <Domenic>
Ah and then DefineOwnProperty handles that specially https://tc39.github.io/ecma262/#sec-array-exotic-objects-defineownproperty-p-desc

[09:33:28.0000] <Domenic>
So annevk I think your strategy is also valid

[09:34:23.0000] <Domenic>
But you'll need to have [[Get]]/etc. say "if P is not href or replace, do the ordinary thing"

[09:36:30.0000] <annevk>
Domenic: yeah, I was just thinking that; if you can defer to the ordinary thing, this should also work

[11:32:25.0000] <jsx>
Is XHR standardization now done at WHATWG completely (as opposed to at W3C)?

[11:46:55.0000] <Domenic>
jsx: yes. See https://wiki.whatwg.org/wiki/Fork_tracking

[11:47:43.0000] <Domenic>
We should probably add HTML there hrm

[11:48:30.0000] <jsx>
Ok, thanks.

[11:50:33.0000] <jsx>
"Confusion Persists"

[11:55:38.0000] <Domenic>
Why does the wiki always recaptcha me...

[11:58:09.0000] <gsnedders>
In case anyone going to Japan knows: http://travel.stackexchange.com/questions/57622/ana-domestic-carry-on-allowance-can-i-take-a-laptop-bag-as-well-as-a-rucksack

[13:17:20.0000] <annevk>
Domenic: made you an admin on the wiki, hope that helps

[13:17:28.0000] <annevk>
Domenic: if not, ping GPHemsley

[13:51:48.0000] <caitp>
regardless of whether or not it's possible to get rid of a vendor prefixed name for something at a specific point in time, what is the point in validating its existence in a spec document?

[14:02:55.0000] <Domenic>
What is the point of speccing any feature that web pages are using?

[14:27:42.0000] <jamesr>
what is the normative reference for one hand clapping?

[14:35:24.0000] <Dashiva>
One hand clapping is just an example, it has no normative status

[14:43:39.0000] <jgraham>
One hand clapping doesn't sound very informative

[15:14:10.0000] <MikeSmith>
gsnedders: in practice, you can carry both a laptop bag and rucksack on domestic flights in Japan. I don't know what the documented rules but if the rules say you can only have one bag, I can say that they are certainly not strict about enforcing that.

[15:15:29.0000] <MikeSmith>
gsnedders: and even in the case if they were to question you about it, it would not be confrontational/rude/matter-of-fact thing like what would happen in the US or some parts of Europe.

[15:16:52.0000] <MikeSmith>
gsnedders: If you just be human (nice) and ask nicely and treat other people like fellow humans here, it goes a long way. And people generally bend over backwards to be accomodating.

[15:19:49.0000] <MikeSmith>
gsnedders: and there is a saying in Japanese busines, お客様は神様です ("The customer is God.") which is not a joke, really. People in service jobs in Japan take that very seriously and take doing their jobs the right way (that is, actually helping people) very seriously no matter how menial anyone else might judge their jobs to be.

[15:21:12.0000] <MikeSmith>
gsnedders: in short, plan to take your rucksack and laptop bag on, and if there's any problem, plan for success at working with the airline staff to get it worked out without any drama

[15:24:23.0000] <MikeSmith>
caitp: documenting it so that all browser-engine implementors (current and future) are working from the same set of information, and there are no ambiguities, no undocumented lore that only those already in the know are aware of

[16:33:42.0000] <smaug____>
annevk: ping

[16:33:49.0000] <smaug____>
or perhaps JakeA

[16:38:41.0000] <MikeSmith>
smaug____: I reckon both are afk/asleep at this point (and you may be the only person here who keeps even weirder hours than me)

[16:40:22.0000] <smaug____>
hey, it isn't even 3am

[16:40:39.0000] <smaug____>
/me doesn't know where JakeA lives

[16:44:22.0000] <jgraham>
Speaking of weird hours I guess I should be asleep

[16:44:31.0000] <jgraham>
JakeA is in the UK I think

[16:45:17.0000] <boogyman>
that's where he resides, but he was in the US last week i believe.

[16:45:43.0000] <jgraham>
So who knows what state his body clock could be in

[16:45:55.0000] <jgraham>
Probably best to spam him once an hour ;)


2015-10-20
[18:22:47.0000] <MikeSmith>
heycam: http://stackoverflow.com/questions/33215722/how-to-use-w3c-svg-test-suite (if you can provide any help)

[23:05:05.0000] <JakeA>
/me awakens

[23:07:34.0000] <JakeA>
smaug____: morning!

[23:10:14.0000] <JakeA>
wanderview: sorry, I missed your follow-up message, yeah, network timeout

[00:44:22.0000] <zcorpan>
wow i have never reflected that whitelist/blacklist had anything to do with skin color

[00:46:57.0000] <rniwa>
zcorpan: me neither

[00:47:05.0000] <rniwa>
zcorpan: what's a proper term we should all be using?

[00:47:30.0000] <zcorpan>
https://github.com/whatwg/html/issues/265

[00:47:37.0000] <zcorpan>
safelist/blocklist

[00:48:20.0000] <rniwa>
zcorpan: how about blocklist/allowedlist?

[00:49:26.0000] <rniwa>
zcorpan: nice

[00:51:30.0000] <zcorpan>
it's not clear to me anyone is actually offended by these terms today, although it is slightly uncomfortable if they indeed originated from skin color

[00:52:33.0000] <rniwa>
zcorpan: now that I think about it, it's very offensive.

[00:52:58.0000] <Ms2ger>
Just wait until you next hear someone use master/slave

[00:53:01.0000] <annevk>
zcorpan: same here, can't believe it never occurred to me before

[00:53:06.0000] <annevk>
Ms2ger: that too, geez

[00:53:21.0000] <jochen__>
rniwa: hey

[00:53:27.0000] <rniwa>
jochen__: hello, what's up?

[00:53:36.0000] <JakeA>
holy shit, never thought of white/blacklist in that way

[00:53:46.0000] <JakeA>
/me rewires brain

[00:53:47.0000] <jochen__>
rniwa: who in webkit land would be a good person to talk to about domenic's promise rejection events proposal?

[00:54:03.0000] <rniwa>
Ms2ger: master/slave is okay because it doesn't discriminate against any race

[00:54:19.0000] <zcorpan>
yeah

[00:54:32.0000] <rniwa>
jochen__: probably weinig since he implemented promise in WebKit/JSC

[00:54:50.0000] <jochen__>
ta

[00:55:01.0000] <rniwa>
jochen__: probably the best way to get in touch with him will be to file a WebKit bug and cc him

[00:55:08.0000] <rniwa>
he's a really busy guy these days

[00:55:15.0000] <jochen__>
who isn't

[00:59:06.0000] <jochen__>
filed https://bugs.webkit.org/show_bug.cgi?id=150358

[01:02:16.0000] <zcorpan>
some people in http://english.stackexchange.com/questions/51088/alternative-term-to-blacklist-and-whitelist claim that the origin isn't skin color

[01:04:40.0000] <annevk>
zcorpan: I don't think that matters much

[01:06:14.0000] <annevk>
zcorpan: it's more that the use in this context suggests that black=bad, white=good, which is somewhat pervasive in Western society and not great

[01:06:58.0000] <zcorpan>
yeah sure

[01:08:26.0000] <zcorpan>
next up: white hat, black hat

[01:12:27.0000] <zcorpan>
and white lies

[02:05:05.0000] <annevk>
Writing ECMAScript stuff is rather fun

[02:24:14.0000] <Ms2ger>
Anyone have Edge nearby?

[02:31:26.0000] <gsnedders>
I can. But I don't have a stable internet connection. :)

[02:38:36.0000] <Ms2ger>
Pah

[02:38:47.0000] <Ms2ger>
I'm interested in http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3697

[02:41:10.0000] <gsnedders>
uh, for some reason can't copy/paste

[02:41:26.0000] <gsnedders>
log: function CSS() { [native code] }, log: undefined

[02:41:39.0000] <Ms2ger>
Hrm

[02:41:40.0000] <Ms2ger>
Thanks

[04:27:41.0000] <JeanCarloMachado>
 /msg NickServ identify wisdom20

[04:27:49.0000] <JeanCarloMachado>
d

[05:02:15.0000] <annevk>
Domenic: given https://github.com/annevk/html-cross-origin-objects/blob/master/Location.md I think it's very feasible to create some kind of generic %CrossOriginObject% thingie that Location and WindowProxy both use

[05:02:30.0000] <annevk>
Domenic: if we want to list all the [[InternalMethod]] stuff only once

[05:02:44.0000] <annevk>
Domenic: but maybe that is overkill

[05:18:22.0000] <Ms2ger>
If anyone feels like being sad, r? https://github.com/w3c/web-platform-tests/pull/2266

[05:19:26.0000] <jgraham>
Ms2ger: I am on it

[05:19:32.0000] <jgraham>
In fact I was already

[05:19:49.0000] <jgraham>
So obviously I naturally gravitate toward sadness

[05:20:00.0000] <Ms2ger>
You do live in the UK

[05:26:00.0000] <jgraham>
Ms2ger: Any special reason you created a new file rather than just running the same tests like ["matches", "webkitMatchesSelector"].each(function() {}) ?

[05:27:36.0000] <Ms2ger>
jgraham, nothing particularly though out; just felt better this way

[05:27:59.0000] <Ms2ger>
It might be nice to share some more code, but I didn't really want to spend more time on it

[05:29:15.0000] <smaug____>
how should openWindow work in SW?

[05:29:37.0000] <smaug____>
how long should it actually wait before resolving the Promise on worker side

[05:30:40.0000] <smaug____>
If I read the spec correctly, the promise is resolved ASAP we have a new document

[05:30:44.0000] <smaug____>
but perhaps I'm missing something

[05:31:00.0000] <smaug____>
JakeA: annevk: ^ you might know

[05:31:41.0000] <annevk>
smaug____: yeah, I think once a document is created it'll be resolved

[05:32:00.0000] <annevk>
fulfilled, I suppose

[05:32:20.0000] <JakeA>
Agreed

[05:32:26.0000] <smaug____>
annevk: so the Document might not actually have any content

[05:32:32.0000] <smaug____>
like scripts loaded or anything

[05:32:48.0000] <smaug____>
and sw could already try to communicate with it?

[05:33:06.0000] <annevk>
smaug____: yeah... I think that was roughly the idea

[05:33:23.0000] <annevk>
smaug____: hasn't really been specified in detail

[05:33:28.0000] <smaug____>
hmm, rather racy setup

[05:33:45.0000] <JakeA>
hm, yeah. Although since it opened it, it could put init data in the fragment or search

[05:33:48.0000] <smaug____>
but perhaps that is fine. perhaps the idea is that the new Window sends something to sw when it thinks it is ready enough

[05:34:22.0000] <zcorpan>
browsers don't have built-in feed readers anymore, do they?

[05:34:28.0000] <JakeA>
If it becomes a pain, we could add a client.ready promise or something to that effect

[05:34:46.0000] <smaug____>
and visibility and focus states can be anything at the moment Promise is resolved

[05:37:17.0000] <smaug____>
zcorpan: FF has still

[05:37:39.0000] <smaug____>
if live bookmarks is a "feed reader"

[05:39:20.0000] <zcorpan>
sure. ok i see "subscribe to this page" in firefox. but clicking it takes me to https://annevankesteren.nl/feeds/weblog which is mostly empty in Nightly and clicking "subscribe now" appears to do nothing

[05:40:59.0000] <smaug____>
hmm, I do use livebookmarks all the time

[05:41:05.0000] <smaug____>
but those were created long ago

[05:42:00.0000] <smaug____>
zcorpan: ah, you're using nightly?

[05:42:02.0000] <smaug____>
with e10s?

[05:42:55.0000] <zcorpan>
yeah. i don't know what e10s is but there is a "new non-e10s window" menu item

[05:43:06.0000] <smaug____>
it is an e10s issue

[05:43:09.0000] <Ms2ger>
Multiprocess Firefox

[05:43:21.0000] <zcorpan>
ok

[05:46:09.0000] <smaug____>
filed https://bugzilla.mozilla.org/show_bug.cgi?id=1216513

[05:55:39.0000] <smaug____>
annevk: JakeA: FWIW, I'm rather worried that openWindow setup is too fragile, and ends up causing issues where on slow network something doesn't work, but on fast network, which web devs probably use, things work just fine because data is transferred fast enough so that script etc are loaded before sw's message to client window is processed.

[05:56:04.0000] <smaug____>
(and better to fix the API sooner than later)

[05:57:16.0000] <smaug____>
explicit ready() call, or implicit ready at 'load' time might work quite well

[05:58:25.0000] <smaug____>
(explicit ready() before 'load' would override the implicit ready call)

[05:59:27.0000] <smaug____>
/me files a bug

[06:00:09.0000] <smaug____>
ah, there is https://github.com/slightlyoff/ServiceWorker/issues/728

[06:12:02.0000] <JakeA>
smaug____: cheers, I've added this to our TPAC agenda

[06:12:45.0000] <annevk>
smaug____: yeah, it seems better to wait for DOMContentLoaded or some such

[06:14:21.0000] <JakeA>
I guess having the SW open a bit longer isn't a performance issue here, as the SW will likely be used for the new window's fetch. At the very least the browser needs to be running

[06:16:25.0000] <annevk>
If anyone is interested in security of Window and Location: https://github.com/annevk/html-cross-origin-objects

[06:16:43.0000] <annevk>
(Window is not yet covered, waiting on some feedback for Location first.)

[06:26:05.0000] <smaug____>
Window and Location ... sounds complicated ;)

[06:26:25.0000] <annevk>
smaug____: quite

[09:35:26.0000] <Domenic>
annevk: why bound functions?

[09:35:38.0000] <annevk>
Domenic: that looked close to what I wanted...

[09:35:48.0000] <Domenic>
what did you want?

[09:36:06.0000] <annevk>
Domenic: "a wrapper function" is that clear enough?

[09:36:20.0000] <Domenic>
not sure... what is a wrapper function...

[09:36:34.0000] <annevk>
Domenic: function() { actualFunction(); }

[09:36:40.0000] <Domenic>
got it

[09:36:43.0000] <Domenic>
hmm

[09:37:37.0000] <annevk>
Oh yeah, WeakMap is wrong

[09:37:40.0000] <annevk>
Bummer

[09:38:03.0000] <Domenic>
Separate question: so originalDesc.[[Get]] is a function from another realm, and crossOriginGet is supposed to be instantiated in the current realm?

[09:38:22.0000] <annevk>
Is there a way to get the key removed if the value is GC'd?

[09:38:23.0000] <Domenic>
I think everything related to that is correct as-is, but it's quite implicit because of how ES is usually implicit about current realm

[09:38:26.0000] <annevk>
Or some pattern?

[09:38:57.0000] <Domenic>
Hmm

[09:39:39.0000] <annevk>
Domenic: yeah, I forgot about that, crossOriginGet needs to be from the current realm and have the correct Function.prototype thing

[09:39:52.0000] <Domenic>
I think it does that automatically

[09:39:56.0000] <annevk>
Domenic: that's why it's wrapping

[09:40:00.0000] <Domenic>
But adding a NOTE might be helpful since it's implicit

[09:40:12.0000] <annevk>
I will file an issue for now

[09:40:27.0000] <Domenic>
And probably replace bound function with something different

[09:40:36.0000] <Domenic>
bound functions are weird, they don't have a varying `this`

[09:41:05.0000] <Domenic>
so you want a tuple -> list map where if the list gets deleted the items in the tuple are not held by GC

[09:41:11.0000] <Domenic>
?

[09:41:42.0000] <Domenic>
no, not the list gets deleted

[09:41:46.0000] <Domenic>
if all the items in the list get GCed

[09:46:08.0000] <annevk>
Domenic: it's a tuple -> Property Descriptor Record map

[09:46:34.0000] <annevk>
Domenic: and if everything in the Property Descriptor Record map is no longer used, the whole map entry can be GC'd

[09:46:48.0000] <Domenic>
The map is keys -> propdescs? makes sense

[09:47:06.0000] <annevk>
Domenic: yeah, since that is what GetOwnProperty returns that seemed easiest

[09:47:42.0000] <Domenic>
Wait, is it a map or is it just a single propdesc

[09:47:52.0000] <Domenic>
[[GetOwnProperty]] seems to imply just a single propdesc

[09:48:23.0000] <annevk>
The internal structure is a map of tuple -> propdesc

[09:48:37.0000] <Domenic>
i think i understand

[09:48:45.0000] <annevk>
[[GetOwnProperty]] returns one propdesc out of that map at most

[09:48:48.0000] <Domenic>
what is in the tuple? anything object-like we can use?

[09:48:53.0000] <annevk>
no

[09:49:12.0000] <Domenic>
then i don't think we should worry about GCing the keys

[09:49:23.0000] <Domenic>
if they are just primitives then there is no notion of them being allocated or not

[09:49:44.0000] <annevk>
origin + effective script origin or maybe just effective script origin

[09:50:03.0000] <Domenic>
cool

[09:50:16.0000] <Domenic>
but we ... still don't want to hold strong references to the propdescs?

[09:50:30.0000] <Domenic>
(and more specifically to the functions)

[09:50:40.0000] <annevk>
yeah

[09:50:51.0000] <Domenic>
hmm, but that seems like it would expose GC:

[09:51:13.0000] <Domenic>
I do const x = Object.getOwnPropertyDescriptor(location, "href").get;

[09:51:25.0000] <annevk>
e.g. if I do document.domain = "x.x.x.com" and then later do document.domain = "x.x.com" it makes little sense for the Location object to keep functions alive I can never possibly access again

[09:51:38.0000] <Domenic>
I see

[09:51:54.0000] <annevk>
sure, if you have a ref to them, they shouldn't be collected

[09:52:20.0000] <annevk>
this is mostly about them getting stored once you access them and then there not being a way for them to get removed again

[09:52:37.0000] <annevk>
other than GC, which I thought WeakMap would address but really doesn't

[09:52:38.0000] <Domenic>
I'm tempted to go with something a bit handwavy about GC behavior instead of saying that we have found the perfect data structure

[09:52:45.0000] <Domenic>
Something like:

[09:54:07.0000] <annevk>
I do see now why I was totally wrong about WeakMap

[09:54:35.0000] <Domenic>
"The UA should allow the property descriptors their accessor functions stored in [[crossOriginPropertyDescriptorMap]] to be garbage collected if no references to them exist and it is not possible for them to be accessed." Then give 2+ examples, one where the author did window.x = Object.getOwnPropertyDescriptor(location, "href").get so it must stay alive,

[09:54:35.0000] <Domenic>
and one where they did document.domain so now it can be collected.

[09:55:31.0000] <annevk>
Seems reasonable

[10:01:50.0000] <annevk>
Domenic: so for Window, my thinking is that once Location.md is better I try to duplicate the text I have there first and create a WindowProxy.md based off it

[10:01:55.0000] <annevk>
Domenic: then we review that

[10:02:32.0000] <annevk>
Domenic: then we can attempt a potential %AllenWirfsBrockObjectMagicHappens% merger?

[10:03:59.0000] <annevk>
Domenic: and even if we decide not to merge the objects (mostly to avoid duplicate [[PreventExtensions]] ( ) and friends), things like CrossOriginPropertyDescriptor will be reused of course

[10:05:12.0000] <annevk>
that's all I got for today, more tomorrow, I'm sure

[10:23:40.0000] <Domenic>
annevk: yeah that sounds like a good plan.

[10:50:16.0000] <Joseph__Silber>
TabAtkins, is it possible to use `justify-content: center` for a multi-line flexbox, and have the last line left aligned to the edge of the previous line??

[10:51:01.0000] <TabAtkins>
Joseph__Silber: Nope. Handling the "last line problem" will happen in Flexbox 2.

[10:51:18.0000] <Joseph__Silber>
K. Thanks.

[10:51:37.0000] <Joseph__Silber>
Guess the only way to solve it now is with another wrapper.


2015-10-21
[23:26:21.0000] <rniwa>
Domenic: yt?

[23:26:24.0000] <rniwa>
annevk: yt?

[00:15:26.0000] <annevk>
rniwa: yup

[00:15:41.0000] <rniwa>
annevk: so I've been looking into sync creation of custom elements

[00:15:52.0000] <rniwa>
annevk: I'm consulting with my colleagues as well

[00:16:04.0000] <rniwa>
annevk: but the biggest problems i've found thus far are:

[00:16:19.0000] <rniwa>
1. adoption agency algorithm creates an arbitrary element so this algorithm needs to be robust against scripting

[00:17:32.0000] <rniwa>
2. SVG use elements as implemented in WebKit/Blink clones elements such that we need to completely prohibit the use of custom elements inside a SVG context that's referred by use elements if I wanted to have any chance of shipping this in near term

[00:18:25.0000] <rniwa>
3. We create document fragment in various places for internal use; e.g. for copy/paste, and those codes can't instantiate custom elements as that would be observable

[00:18:38.0000] <rniwa>
I think 3 is quite fixable

[00:18:47.0000] <rniwa>
annevk: I think 1 and 2 are trickier

[00:18:50.0000] <annevk>
Isn't cloning a kind of important operation to support either way? Frequently used for shadow DOM, no?

[00:19:03.0000] <rniwa>
annevk: supporting cloning is not that bad

[00:19:27.0000] <rniwa>
annevk: the problem with SVG use element is that we use cloning internally to implement "use" element's capability to replicate SVG contents

[00:59:05.0000] <JonathanC>
Still looking for one more W3C member to join us on DataSheets - https://www.w3.org/community/groups/proposed/

[01:03:55.0000] <annevk>
rniwa: sounds like Mozilla's problem with cloning, we use it for printing

[01:04:05.0000] <rniwa>
annevk: yeah, kind of

[01:04:05.0000] <annevk>
rniwa: well, one of the problems we have with synchronous stuff

[01:07:15.0000] <rniwa>
annevk: yeah

[01:07:35.0000] <rniwa>
annevk: I guess we need to talk about this during TPAC

[01:07:58.0000] <rniwa>
I'm hoping to put all web components related topics on Tue so that I can attend Web Perf WG on Monday

[01:08:12.0000] <rniwa>
it's really annoying that Service Worker meeting is happening concurrently on Tuesday :(

[01:08:26.0000] <annevk>
rniwa: Tue is also service workers so that would be a major pain

[01:08:28.0000] <rniwa>
I don't understand why it's not on Monday or Tuesday with Web Platform WG's meeting

[01:08:33.0000] <rniwa>
annevk: yeah :(

[01:08:40.0000] <rniwa>
annevk: do you need to attend SW meeting as well?

[01:08:45.0000] <annevk>
yes

[01:08:48.0000] <rniwa>
okay

[01:09:04.0000] <rniwa>
annevk: I guess we need you for modules stuff though

[01:09:05.0000] <annevk>
well, depends a bit on what is going to be discussed I guess, but I suspect so

[01:09:27.0000] <annevk>
this is why WG meetings don't make sense, should just all be unconference

[01:09:45.0000] <rniwa>
annevk: or rather we should make time arrangements in advance

[01:10:00.0000] <annevk>
yeah I guess if we already know the topics

[01:10:22.0000] <annevk>
also not having Domenic around when discussing custom elements is sad

[01:10:33.0000] <rniwa>
e.g. why is WebApps, SW, CSS, and WebPerf all having meetings at the same time?

[01:10:46.0000] <rniwa>
the set of people who need to attend those meetings tend to overlap

[01:10:53.0000] <annevk>
I don't know, it seems like anything discussed at TPAC won't be much conclusive, so I'm mostly going to say hi

[01:10:55.0000] <rniwa>
so it would make more sense to spread them out

[01:11:01.0000] <rniwa>
since HTML WG is basically dead now

[01:11:26.0000] <rniwa>
annevk: oh Domenic won't be at TPAC!?

[01:11:30.0000] <annevk>
nope

[01:11:33.0000] <zcorpan>
which meetings are you guys planning to attend? we can suggest agenda items for things we want to talk about

[01:11:37.0000] <rniwa>
fuuuuuu

[01:11:45.0000] <annevk>
he'll be in Japan and we'll meet up, but not at TPAC

[01:12:02.0000] <annevk>
back in a bit

[01:12:04.0000] <rniwa>
I'd like to iron out shadow DOM styling, custom elements, and ES6 modules

[01:12:10.0000] <roc>
rniwa, annevk: seems to me that when cloning for printing we'd want to actually clone the shadow tree, not create a fresh instance of the custom element

[01:12:12.0000] <rniwa>
and attend WebPerf WG as much as I can

[01:12:24.0000] <rniwa>
roc: makes sense

[01:12:30.0000] <roc>
that would cover copy-paste as well

[01:12:37.0000] <rniwa>
roc: selection/focus is another topic we need to discuss

[01:12:38.0000] <zcorpan>
(i'm planning on attending css, houdini, texttracks, but might jump in somewhere else)

[01:12:59.0000] <rniwa>
roc, annevk: right now, the spec says selection behavior is up to implementation which makes zero sense.

[01:13:04.0000] <rniwa>
since the API is Web exposed

[01:13:19.0000] <roc>
right

[01:15:00.0000] <rniwa>
annevk: do you think we should discuss ES6 modules during HTML WG meetings on Thursday or Friday?

[01:15:04.0000] <rniwa>
instead*

[01:15:38.0000] <rniwa>
it's kind of weird to have it in HTML WG given WG is dead but maybe that's an argument for stealing some time from it

[01:16:03.0000] <rniwa>
I almost don't care whether it'll be discussed during a formal meeting either

[01:16:19.0000] <rniwa>
but keeping things in minutes help for remote participants

[01:18:15.0000] <Ms2ger>
Clearly we need a WHATWG room

[01:19:00.0000] <rniwa>
Ms2ger: I'd vote for that

[01:19:13.0000] <rniwa>
Ms2ger: our meeting will be held on Monday, Tuesday, Thursday, and Friday :D

[01:19:23.0000] <rniwa>
annevk: you could just do ^

[01:19:30.0000] <rniwa>
and ditch all WGs LOL

[01:20:23.0000] <Ms2ger>
Ask MikeSmith to set up something for an "XML RDF Application Business Group", nobody'd dare complain about that

[01:21:13.0000] <roc>
the real XML RDF Application Business Group would complain

[01:35:49.0000] <terinjokes>
the who?

[01:47:05.0000] <annevk>
roc: the custom element might have some logic associated with cloning, such as cloning an internal value slot or some such

[01:47:11.0000] <annevk>
roc: similar to what <input> does

[01:47:14.0000] <roc>
yes

[01:47:18.0000] <roc>
which we should not run when printing!

[01:47:40.0000] <annevk>
roc: but then the print doesn't include the text you want printed

[01:47:56.0000] <roc>
it will if we clone the shadow tree of the original document

[01:48:36.0000] <annevk>
roc: I guess if everything ends up there or <canvas> or CSS that might work...

[01:48:51.0000] <annevk>
/me hasn't tried to think that through

[01:49:04.0000] <annevk>
maybe that would work

[01:49:14.0000] <roc>
anything that's not in the shadow tree or canvas or CSS shouldn't affect the printout

[01:50:38.0000] <roc>
Houdini custom style and layout, now, that's different

[01:56:36.0000] <annevk>
yeah, whatever that means

[03:35:25.0000] <zcorpan>
annevk: in adding inline style support for webvtt, i find i need to set the base URL of the stylesheet to the <track>'s URL post redirects (because that's what CSS does, afaict). HTML only exposes the pre-redirect URL. how should i spec this?

[03:35:49.0000] <Ms2ger>
Probably fix HTML

[03:36:04.0000] <Ms2ger>
Base urls should always be post-redirect

[03:36:41.0000] <annevk>
zcorpan: you need to fix HTML and if you support @import in WebVTT you also need to have some kind of security story

[03:37:04.0000] <annevk>
zcorpan: and you need to think through referrer behavior I guess

[03:38:08.0000] <zcorpan>
annevk: the idea is to support @import and all, but security issues haven't been discussed yet

[03:40:29.0000] <annevk>
zcorpan: I would try to avoid introducing more "opaque" CSS

[03:50:25.0000] <zcorpan>
annevk: what do you mean "opaque"?

[03:51:25.0000] <annevk>
zcorpan: https://fetch.spec.whatwg.org/#concept-filtered-response-opaque

[03:53:52.0000] <zcorpan>
annevk: ok... i don't really follow. what uses that today?

[03:54:23.0000] <annevk>
zcorpan: CSS, at times

[03:55:08.0000] <annevk>
zcorpan: basically, require CORS

[03:56:06.0000] <annevk>
zcorpan: though you should probably read up on Fetch if WebVTT is going to fetch subresources with itself as base URL and referrer and such

[03:56:24.0000] <annevk>
zcorpan: there's not that many resource types that do that today

[03:59:43.0000] <zcorpan>
ok. yeah. my idea would be to let the CSS specs handle fetching, though possibly i'd have to fix CSS to do what i want. but i should first consider security if we want to allow fetches at all

[04:00:29.0000] <zcorpan>
possibly people expect <track> (and <video> with in-band tracks) to be safe like <img>

[04:02:46.0000] <zcorpan>
even if i require cors, one can write a webvtt file or video with webvtt embedded that pings your server when each cue is rendered

[04:16:23.0000] <mounir>
annevk: I would like your input on this, if you don't mind: do you think it's better to have one request() method like: sequence<PermissionStatus> request(sequence<Permission>)

[04:16:39.0000] <mounir>
hmm, scratch that

[04:16:55.0000] <mounir>
^ Promise<sequence<PermissionStatus>> request(sequence<Permission>)

[04:17:09.0000] <mounir>
or: Promise<PermissionStatus> request(Permission)

[04:17:29.0000] <mounir>
+ Promise<sequence<PermissionStatuS>> requestAll(sequence<Permission>)

[04:17:43.0000] <mounir>
annevk: ^ putting aside the fact that you do not like the Permissions API :)

[04:23:02.0000] <annevk>
zcorpan: yeah that's a good point, WebVTT having network side effects might have to be opt in to begin with

[04:23:32.0000] <annevk>
mounir: yeah I dunno

[04:24:24.0000] <mounir>
annevk: ok

[04:24:47.0000] <zcorpan>
annevk: yeah and how would you opt-in from a standalone video player? asking the user seems like a bad idea :-)

[04:27:31.0000] <annevk>
zcorpan: well, it's up to the video player

[04:27:39.0000] <annevk>
zcorpan: be that <video> or some standalone thing

[04:27:51.0000] <annevk>
zcorpan: it isn't really up to the user

[04:28:16.0000] <zcorpan>
yeah

[04:29:21.0000] <annevk>
The more I poke at these cross-origin objects the weirder they get

[04:31:40.0000] <mounir>
annevk: oh, speaking of cross origin, do you know why cors restrictions are opt-out instead of opt-in?

[05:10:12.0000] <annevk>
mounir: I'm not sure what you mean

[05:24:12.0000] <mounir>
annevk: an xhr will, by default not succeed if done an a cross origin unless the headers have the right flags

[05:24:15.0000] <mounir>
it's failing by default

[05:24:23.0000] <mounir>
contrary to stuff like <img>

[05:24:40.0000] <mounir>
I was wondering if you had any background around the reasons that lead to that

[05:24:51.0000] <annevk>
mounir: <img> doesn't do a CORS request by default

[05:24:58.0000] <Ms2ger>
MikeSmith, ping

[05:25:01.0000] <mounir>
that's what I meant

[05:25:10.0000] <annevk>
mounir: it's just a legacy SOP hole

[05:25:18.0000] <annevk>
mounir: see https://annevankesteren.nl/2015/02/same-origin-policy

[05:25:42.0000] <mkwst>
annevk: Do y'all have a process for PRs that sit on top of other PRs? Like https://github.com/whatwg/html/pull/273 and https://github.com/whatwg/html/pull/272? I'd like to give you small chunks to review, but it's not clear that it makes things any simpler. :)

[05:26:18.0000] <annevk>
mkwst: I guess tell us which one to do first and then rebase?

[05:26:45.0000] <mkwst>
annevk: Ok. *shrug* I'll do that, then.

[05:51:21.0000] <JonathanC>
/me is away: I'm busy

[05:57:11.0000] <annevk>
Ms2ger: I'm going to delete the www-dom hook anyway

[05:57:30.0000] <annevk>
Ms2ger: it's really annoying and makes me want to unsubscribe from www-dom

[06:08:49.0000] <MikeSmith>
Ms2ger: her enow

[06:35:39.0000] <Ms2ger>
annevk, could we set up a dedicated list?

[06:35:53.0000] <Ms2ger>
MikeSmith, can you give Domenic push access to wpt?

[06:41:56.0000] <MikeSmith>
Ms2ger: yup but I thought you could as well

[06:42:41.0000] <Ms2ger>
MikeSmith, only for people who are already in the w3c org

[06:42:54.0000] <philipj>
zcorpan: do you understand why STYLE blocks must precede cues?

[06:43:54.0000] <zcorpan>
philipj: to support streaming

[06:44:06.0000] <zcorpan>
which we don't yet

[06:45:07.0000] <philipj>
zcorpan: right, and if we did it would only mean that if all of the style isn't known up front, one would have to start a new WebVTT stream if one actually needs new style

[06:45:17.0000] <MikeSmith>
Ms2ger: ah OK, lemme do it right now

[06:45:44.0000] <philipj>
zcorpan: doesn't seem to make much sense in a browser, to me at least

[06:46:07.0000] <Ms2ger>
どうも有難う

[06:49:17.0000] <zcorpan>
philipj: i'm not familiar enough with inband tracks to know what makes sense for that when there's streaming or seeking and so

[06:51:59.0000] <philipj>
zcorpan: Me neither really, but I trust that you really do want all of the STYLE up front in that case. I don't follow why that should carry over to the standalone file format, however.

[06:55:51.0000] <zcorpan>
philipj: it is possible that it is not strictly necessary. but it seems premature to open the door to STYLE blocks after cues before we have figured out how streaming should work (esp. for out-of-band tracks)

[06:58:02.0000] <annevk>
Ms2ger: you could I guess

[06:58:18.0000] <philipj>
zcorpan: Sure, perhaps as a precaution, but I genuinely don't understand what Singer is telling me. It would be nice if it were spec'd in a way where the STYLE blocks are all recognized and parsed just fine, but there's a very artificial-looking condition to drop them if there's already a cue.

[06:58:31.0000] <philipj>
gotta go

[07:05:30.0000] <zcorpan>
philipj: that would not be strictly equivalent to the current spec i think, a bad cue makes STYLE be ignored also. i suppose the parser can set a flag when first seeing "-->"

[07:27:06.0000] <MikeSmith>
Ms2ger: nice Japanese :)

[07:27:17.0000] <MikeSmith>
Domenic should have wpt push access now

[07:27:26.0000] <Ms2ger>
MikeSmith, the internet is excellent at it :)

[07:27:32.0000] <MikeSmith>
heh

[07:31:40.0000] <MikeSmith>
I have no idea what github doesn't allow the (non-"owner") admins for a particular repo to give anybody they want push access or admin access to the repo

[07:32:09.0000] <MikeSmith>
I'll be charitable and assume they have some good reason that's just not clear

[07:32:36.0000] <MikeSmith>
s/no idea what github/no idea why github/

[07:33:45.0000] <MikeSmith>
ideally, giving somebody admin access to a repo should just make them the full "owners" of the repo so that they can do anything they want with it

[07:36:22.0000] <MikeSmith>
but as it works now, the full rights still seem to be restricted to people who are "owners" in the org the repo happens to be placed in, and so the only way to give somebody full admin rights to a repo is to make them an "owner" in the parent org, but that then also has the consequence that they have full rights to all other repos in the org as well (including any private repos)

[07:49:57.0000] <annevk>
I wish we could have different permissions for master vs everything else

[07:50:23.0000] <annevk>
Big team with push access, but not to master, small set of folks can push to master

[07:50:32.0000] <Ms2ger>
Ditto

[07:57:19.0000] <beverloo>
annevk, johnme points out that ULL may not be the ideal type for `timestamp`, since it wouldn't allow dates prior to 1970 (whereas Date does)

[07:57:46.0000] <beverloo>
annevk, Date.now() returns a Number, which'd map to an unrestricted double, but I'm not sure what the expected behavior for Inf/NaN would be

[07:58:27.0000] <beverloo>
annevk, do you prefer any type over another?

[07:59:09.0000] <annevk>
beverloo: hmm, IDL has https://heycam.github.io/webidl/#common-DOMTimeStamp too

[07:59:24.0000] <beverloo>
yes, but that's only used for events afaik

[07:59:28.0000] <annevk>
beverloo: when would we have an event prior to 1970 though?

[07:59:57.0000] <beverloo>
newer specs seem to use either "long long" (file api) or "unrestricted double" (battery api, media controller, media source) for times/durations

[08:00:11.0000] <annevk>
what a mess

[08:01:19.0000] <beverloo>
yes. I don't have any solid use-cases ("on this day N years ago"?), but from a purist point of view it's not great that we use Date-created timestamps, but don't support all values

[08:01:53.0000] <annevk>
I wish there were some principles we could draw from, since it's not at all clear to me what needs to be considered here

[08:02:53.0000] <beverloo>
issue 2 on WebIDL is exactly about this :) https://github.com/heycam/webidl/issues/2 /cc Domenic

[08:02:59.0000] <annevk>
beverloo: lazy me thinks you should write a PR for unrestricted double and get Domenic to review it

[08:03:39.0000] <annevk>
beverloo: if DOMTimeStamp is indeed only for Event it should probably be removed from IDL since it will likely be removed from Event

[08:04:19.0000] <annevk>
per https://github.com/whatwg/dom/issues/23 if you're interested

[08:19:22.0000] <beverloo>
annevk, https://github.com/whatwg/notifications/pull/56

[08:35:36.0000] <JonathanC>
/me is back (gone 02:44:14)

[08:35:50.0000] <JonathanC>
/me is away: I'm busy

[08:40:19.0000] <annevk>
beverloo: should probably handle NaN/Inf or does unrestricted mean they throw?

[08:40:24.0000] <annevk>
beverloo: would be weird

[08:41:20.0000] <beverloo>
unrestricted means they're allowed, restricted (normal double) throws

[08:43:47.0000] <annevk>
beverloo: it does seem they need to be handled given the other definitions around this concept

[08:43:56.0000] <annevk>
beverloo: either by throwing or in prose

[08:43:58.0000] <JonathanC>
/me is back (gone 00:08:18)

[08:44:12.0000] <JonathanC>
/me is away: I'm busy

[08:44:29.0000] <annevk>
JonathanC: could you perhaps disable posting status messages through /me for this channel?

[08:44:32.0000] <JonathanC>
/me is back (gone 00:00:08)

[08:45:53.0000] <JonathanC>
ssorry

[10:25:09.0000] <TabAtkins>
Man, what sort of obnoxious client actually thinks that's a good thing to spam?

[12:42:40.0000] <TabAtkins>
rniwa: *I'll* be at TPAC, and can handle shadow dom styling. The rest is def Domenic material, tho. ^_^


2015-10-22
[03:17:55.0000] <zcorpan_>
can someone with Edge check http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3699 ?

[05:19:46.0000] <Ms2ger>
> Steven Pemberton gives a talk entitled: "After HTML5, What Next?"

[05:19:52.0000] <Ms2ger>
Not sure I want to know

[05:30:25.0000] <jgraham>
/me expects it involves Namespaces. And RDF.

[05:33:48.0000] <zcorpan_>
philipj: it's not clear to me what you want the shape of the parser to be like

[05:35:46.0000] <philipj>
zcorpan_: basically, first write it as if interleaved cue and style blocks were supported, then add a check right before actually using the contents of a style block, so that supporting interleaved blocks is just a matter of removing that check

[05:36:03.0000] <philipj>
that we there won't be too much to think about in terms of test changes and the like if that change is made

[05:36:09.0000] <philipj>
s/we/way/

[05:37:21.0000] <philipj>
zcorpan_: was that clarifying, or is it how to actually make that true that's not clear?

[05:38:53.0000] <zcorpan_>
i guess my problem is that the current algorithm being flat and jumping around makes it insane, but i suppose i can change it to use a different style

[05:40:28.0000] <philipj>
once one gets safely to step 17 (cue loop) it should be a matter of checking for "STYLE" before assuming that what we have is a cue, right?

[05:41:44.0000] <philipj>
of course cue loop will then be a terrible name

[05:42:13.0000] <zcorpan_>
do you want the algorithm to share the steps to "slurp data until a blank line" between STYLE and cue?

[05:44:12.0000] <philipj>
zcorpan_: that sounds nice on the face of it, especially if that could also be used while looking for a blank line immediately after the WEBVTT line

[05:44:15.0000] <philipj>
  void setMetadata(MediaMetadata metadata);

[05:44:18.0000] <philipj>
oops

[05:44:51.0000] <philipj>
zcorpan_: if you could also handle NOTE and explicitly ignore it, it would make it obvious how to avoid emitting console warnings for them in implementations

[05:46:16.0000] <philipj>
and in all of this block handling, I suppose that lines with --> or that start with STYLE/NOTE, should always start a new block even without a newline?

[05:47:24.0000] <zcorpan_>
yeah --> should attempt to create a cue

[05:50:48.0000] <zcorpan_>
philipj: i'm not sure it's a good idea to revamp the parser in this PR though

[05:58:39.0000] <philipj>
zcorpan_: perhaps not, but if it is going to happen at all, it would be nice to do it before adding STYLE, or at least that's the order I'd like to see it implemented, otherwise it's extra churn

[05:59:44.0000] <philipj>
it's pretty unlikely that I'll be the one actually implementing this, though, so my word shouldn't carry too much weight if you think I'm just wrong :)

[06:01:25.0000] <zcorpan_>
i suppose i can revamp and then rebase the PR

[11:01:18.0000] <nikkibee>
hello

[11:01:18.0000] <botie>
hey, nikkibee

[11:01:34.0000] <nikkibee>
I'm looking to do an internship with outreachy and I was interested in this project :)

[11:01:58.0000] <nikkibee>
I've already built the git repo like it says here https://wiki.mozilla.org/Outreachy/2016/December_to_March#Contribute_to_the_HTML_Standard.21

[11:02:15.0000] <nikkibee>
I've looked at the bugs marked easy but I'm not sure where I could start

[12:20:07.0000] <Mek>
hmm, how do specs generally deal with race conditions between "in parallel" algorithms... From the definition of "in parallel" it seems any possible interleaving is allowed, but any algorithm that checks some state and then updates it in a later step would have potentially bad race conditions then...

[12:38:21.0000] <wanderview>
nikkibee: you probably want to talk to annevk (who is probably traveling to the TPAC conference right now)

[12:38:44.0000] <nikkibee>
yep, I saw on the project page that annevk is the mentor for it

[12:39:00.0000] <nikkibee>
so are they going to be busy with the conference until next week?

[12:43:11.0000] <nikkibee>
http://www.w3.org/2015/10/TPAC/ this is the conference, right?

[12:43:39.0000] <nikkibee>
looks like I won't be able to really reach him in time for the outreachy deadline :X

[12:43:53.0000] <wanderview>
nikkibee: yea, the conference is all week,.. and its in Japan so he will probably online at opposite times from right now

[12:44:23.0000] <nikkibee>
gotcha

[12:44:33.0000] <wanderview>
nikkibee: when is the deadline?  I would recommend email... his address is one his mozillians profile: https://mozillians.org/en-US/u/annevk/

[12:44:45.0000] <nikkibee>
the deadline for the application is november 2nd

[12:45:26.0000] <nikkibee>
I could email him and hope he can respond, but I'd also need help on getting started enough for the application process from other people here

[12:45:49.0000] <nikkibee>
I tried out a team where they were in a far-apart timezone and I couldn't do anything with just a few comments over night

[12:49:44.0000] <wanderview>
nikkibee: I guess I would recommend starting with an email to annevk... depending on which issues you are interested in he might be able to direct you to someone in this timezone who knows about it

[12:50:10.0000] <wanderview>
nikkibee: the timing is tough, though, since a lot of people from this channel are at that conference :-\

[12:50:17.0000] <nikkibee>
ah :X

[12:50:23.0000] <nikkibee>
I'll still try an email

[12:50:34.0000] <nikkibee>
I've been having a rough time with finding a project so far so now I'm just trying a lot at once

[12:52:52.0000] <wanderview>
hopefully we can get it worked out... annevk is normally pretty responsive

[12:57:44.0000] <nikkibee>
that's good!

[12:57:53.0000] <nikkibee>
thanks for letting me know how it is right now wanderview, I'll get started on that email

[14:15:09.0000] <zcorpan>
nikkibee: maybe i can help

[14:17:46.0000] <zcorpan>
nikkibee: how about starting with this one https://github.com/whatwg/html/issues/265 ?

[14:18:50.0000] <zcorpan>
nikkibee: also add yourself to the spec's Acknowledgements section in the PR

[14:21:43.0000] <nikkibee>
zcorpan: hi! that was one I was interested in doing

[14:21:47.0000] <zcorpan>
Mek: yes, but specs should not be doing that. they should check state before starting "in parallel" and then update state with "queue a task"

[14:22:16.0000] <nikkibee>
I don't know what you mean by the spec's Acknowledgements section. do you mean when I make a PR?

[14:22:58.0000] <zcorpan>
yeah. at the end of the spec there's a list of names of people who have contributed

[14:23:39.0000] <zcorpan>
we want people who contribute to add their name to the list as part of their first contribution, but this might not be properly documented yet

[14:23:41.0000] <Mek>
zcorpan: unfortunately that's not what all specs are doing... http://www.w3.org/TR/service-workers/#unregister-algorithm for example "in parallel" looks up a registration and then checks if it fonud one

[14:24:17.0000] <nikkibee>
zcorpan: I can certainly do that

[14:25:24.0000] <nikkibee>
https://github.com/whatwg/html-build I git cloned this and followed the build instructions. what do I do next? I'm not sure if I need to make a fork of the https://github.com/whatwg/html directory and start there, or if I can make my fork from what I have locally now, or what

[14:26:33.0000] <zcorpan>
Mek: ok. i'm not familiar enough with service workers to be able to tell if it's a bug or not, but certainly you can raise an issue about it

[14:26:58.0000] <zcorpan>
nikkibee: you should fork whatwg/html and make a PR in that repo

[14:27:05.0000] <Mek>
well, that's just one example of it (and it's definitely a bug, since it means two unregister could both return true when only one should)

[14:27:14.0000] <nikkibee>
I will do so

[14:28:14.0000] <Mek>
zcorpan: in some other algorithms it has "Run the following steps atomically". I suppose adding such language in more spots would also work to fix the issue...

[14:29:01.0000] <Mek>
actually maybe it's not a bug in this case

[14:30:41.0000] <zcorpan>
gotta go. good luck nikkibee :-) and good night

[14:30:55.0000] <nikkibee>
thanks! goodnight- oop


2015-10-23
[17:54:59.0000] <nikkibee>
hi annevk_, I just saw your email

[17:55:16.0000] <annevk_>
nikkibee: ah hey!

[17:55:42.0000] <annevk_>
nikkibee: email is still better, not the most reliable connection on the train here

[17:55:48.0000] <annevk_>
nikkibee: and I have to transfer soonish

[17:55:58.0000] <nikkibee>
vakila messaged me after they saw my message on issue 265 and we chatted about that

[17:56:00.0000] <nikkibee>
gotcha!

[17:56:19.0000] <annevk>
ah okay, vakila helped you out?

[17:56:44.0000] <nikkibee>
I was actually in the process of forking the repo when they saw my message on github saying I wanted to do it

[17:56:51.0000] <nikkibee>
so no problem there

[17:57:49.0000] <nikkibee>
so if I'm reading you right, working on most of the good first bugs means updating documentation as described, without changing the code. but I need to look at the relevant code to make sure the documentation matches?

[17:57:54.0000] <MikeSmith>
nikkibee: I'll be around and can help answer questions when needed (I won't be at the TPAC conference myself)

[17:58:01.0000] <nikkibee>
thanks MikeSmith!

[17:58:24.0000] <annevk>
nikkibee: nothing requires changes to html-build afaik

[17:58:33.0000] <annevk>
nikkibee: you only need to change "source", which is HTML

[17:58:43.0000] <nikkibee>
right

[17:59:05.0000] <annevk>
nikkibee: but that HTML does describe algorithms and such, which you sometimes will need to understand in order to make a change

[17:59:20.0000] <annevk>
nikkibee: but you can't really run it, since it's English

[17:59:42.0000] <nikkibee>
ohh. I get it. these are the html standards

[17:59:46.0000] <annevk>
nikkibee: so it's a slightly different exercise from writing code in general

[18:00:00.0000] <nikkibee>
implementations are up to vendors... so there's no code for me to look at to compare documentation to really

[18:00:06.0000] <annevk>
nikkibee: yeah "source" is basically the HTML standard, and html-build makes it a bit prettier

[18:00:50.0000] <annevk>
nikkibee: yeah, well, you can of course look at the source code of various browsers

[18:01:11.0000] <annevk>
nikkibee: or write a testcase/demo to find out what a browser does and whether that matches the standard

[18:01:19.0000] <nikkibee>
mhm. but I can't take how one browser does it as necessarily definitive

[18:01:33.0000] <annevk>
nikkibee: unfortunately not

[18:02:01.0000] <annevk>
nikkibee: you have to test all the browsers and then make a decision of sorts as to what is best, but we can help you with that once you get there

[18:02:14.0000] <nikkibee>
thanks

[18:02:15.0000] <annevk>
nikkibee: most of the good first bugs shouldn't require that much research though

[18:02:32.0000] <nikkibee>
just looking at the "source" file?

[18:02:50.0000] <annevk>
yeah, just looking at that and changing some things around

[18:03:01.0000] <nikkibee>
I get it a lot better now, thanks

[18:03:43.0000] <nikkibee>
I'll start with https://github.com/whatwg/html/issues/179 like you mentioned in the email

[18:03:47.0000] <annevk>
nikkibee: improving the documentation is very much welcome though, although not always the most rewarding

[18:04:11.0000] <annevk>
I've been meaning to do that, but got distracted

[18:04:21.0000] <annevk>
back later

[18:04:22.0000] <nikkibee>
that's alright, right now I'm looking to test the waters in general and get something in on time for my outreachy application

[18:47:28.0000] <nikkibee>
https://github.com/whatwg/html#pull-requests I don't understand the 100 characters convention

[18:47:57.0000] <nikkibee>
does this only apply to the text that will be shown? because a lot of lines go beyond 100 characters

[19:21:12.0000] <nikkibee>
https://github.com/whatwg/html-build#prerequisites is it possible to follow this on windows? like using cygwin or something

[19:30:23.0000] <Domenic>
nikkibee: it applies to the length of lines in the source file

[19:30:51.0000] <Domenic>
nikkibee: cygwin might work; I have not tried it. I use a Linux machine and most people seem to use Macs.

[19:31:08.0000] <nikkibee>
I thought it meant line length. but a lot of lines don't follow it

[19:31:21.0000] <nikkibee>
should I fix up lines in the same section that I'm working on rn?

[19:31:52.0000] <nikkibee>
I got a linux vm which I'm competent with, I just find it easier and faster to edit files on the host os

[19:32:43.0000] <Domenic>
nikkibee: generally we only fix up the smallest number of lines possible, to avoid generating diffs that are just moving whitespace around.

[19:32:51.0000] <nikkibee>
that makes sense

[19:33:00.0000] <nikkibee>
I'll try out cygwin later, right now I just want to get my first PR in :)

[19:33:06.0000] <Domenic>
:)

[19:39:53.0000] <nikkibee>
Domenic: for the line length, is it okay to split a <> block in half or so?

[19:40:29.0000] <nikkibee>
like I have a part where "<code data-x="dom-windowtimers-setTimeout">"  is at the end of a line and half-way through it hits the 100 character limit

[19:40:48.0000] <nikkibee>
should I put a line-break there, or right before the whole block?

[19:43:53.0000] <Domenic>
nikkibee: it is OK to split that after "<code" but not anywhere else

[19:44:17.0000] <nikkibee>
gotcha! thanks

[19:44:54.0000] <nikkibee>
I'd rather split it at the start cause it's only a 5 character difference, and it's more readable that way imo. that's OK too, right?

[19:46:31.0000] <Domenic>
sure, np

[19:46:42.0000] <nikkibee>
good

[19:49:04.0000] <nikkibee>
https://github.com/whatwg/html/issues/179 I'm working on this issue, and I noticed near the start of the timers section, right above the big note block giving an overview of the functions, is the html comment <!-- in practice clearInterval() and clearTimeout() are synonyms, but we don't mention this here -->

[19:49:26.0000] <nikkibee>
since I'm now clarifying that this is the case, should I remove that comment, since it's contradictory to the section?

[19:52:06.0000] <Domenic>
yes, that seems like a good idea

[19:53:18.0000] <nikkibee>
done

[20:16:35.0000] <nikkibee>
https://github.com/whatwg/html/pull/282 PR made! @ Domenic

[20:41:53.0000] <nikkibee>
hey Domenic, I'm having a hard time with squashing

[20:42:03.0000] <nikkibee>
http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html I've been shown to follow this which I can do fine

[20:42:10.0000] <nikkibee>
but after squashing the commits I'm not sure what to do next

[20:42:52.0000] <nikkibee>
I did some history digging with somebody else and last time I did `git push origin master -f`, but they I was talking to about it said I should check with you about running that

[20:48:12.0000] <Domenic>
nikkibee: git push origin master -f is fine in this case

[20:48:24.0000] <nikkibee>
thanks

[20:52:54.0000] <nikkibee>
oof I must've done something wrong cause there's four commits now :S

[20:53:24.0000] <caitp>
uh oh

[20:53:55.0000] <nikkibee>
I tried to rebase again to change the syntaxt of the commit message to follow this better https://github.com/erlang/otp/wiki/Writing-good-commit-messages

[20:55:16.0000] <caitp>
if you do `git rebase -i HEAD~4` and replace `pick` with `s` in the text editor, and then force push, you should be okay

[20:55:56.0000] <Domenic>
Also when editing the commit message be sure to remove the previous ones instead of leaving them there

[20:55:58.0000] <caitp>
er, except for the first commit, leave that one as pick --- and uh, make sure they're all your commits

[20:57:45.0000] <nikkibee>
alright, I've done all of those now

[20:58:35.0000] <nikkibee>
argh that didn't turn out right

[20:59:04.0000] <caitp>
it has the changes from at least 3 of the commits, the diff looks pretty close to how it did before

[20:59:45.0000] <nikkibee>
but the commit title isn't what I left behind, and the full message has all the stuff from before for some reason

[21:00:04.0000] <caitp>
easy fix: git commit --amend

[21:00:09.0000] <caitp>
and force push again

[21:00:24.0000] <nikkibee>
thanks :)

[21:00:51.0000] <nikkibee>
how do I delete a line in VIM? I seem unable to

[21:01:03.0000] <nikkibee>
I've deleted like. all the text except the commit message I want

[21:01:12.0000] <nikkibee>
but I have a bunch of blank lines before and after I can't seem to remove

[21:01:21.0000] <caitp>
in the not-insertion-mode, press `d` twice to delete a single line that you're on

[21:01:44.0000] <nikkibee>
thanks

[21:02:08.0000] <nikkibee>
I just realized I can do it in insert mode, I just accidentally left it

[21:02:36.0000] <nikkibee>
there we go

[21:04:22.0000] <nikkibee>
Domenic: how does it look now? https://github.com/whatwg/html/pull/282

[21:10:14.0000] <Domenic>
nikkibee: almost right. Go with "Fixes #179: Add note about clearing timers" (titles don't consist of two sentences, and you want to use present tense consistently)

[21:10:43.0000] <nikkibee>
that makes more sense

[21:11:50.0000] <nikkibee>
done and pushed @ Domenic

[21:12:44.0000] <Domenic>
nikkibee: perfect! Now I just need to dig out my Linux machine to verify and merge... might take ~15 minutes, I'm in the middle of some packing for a trip.

[21:14:58.0000] <nikkibee>
alright, sounds good

[21:49:34.0000] <nikkibee>
urk I think I hit a weird key combo in vim by mistake

[21:50:20.0000] <nikkibee>
it took me back to the git prompt but I can't do anything, anything I type just makes "More?" appear on the input line

[21:51:01.0000] <Domenic>
nikkibee: there are ways to set the git editor to something less crazy than vim...

[21:51:09.0000] <Domenic>
nikkibee: probably to get out of your current state, Ctrl+C?

[21:51:31.0000] <nikkibee>
ctrl+c just makes the git prompt line appear again

[21:51:35.0000] <nikkibee>
I'm still stuck in this

[21:51:45.0000] <nikkibee>
can I make the git editor default to like, sublime text?

[21:52:01.0000] <nikkibee>
I don't want to close the terminal cause I'm in the middle of rebasing

[21:52:45.0000] <Domenic>
yeah you can, there's a slight trick to it, let me find that

[21:53:00.0000] <Domenic>
i would close the terminal then reopen it and do "git rebase --abort" so you can get into a fresh state

[21:53:44.0000] <nikkibee>
okay, that sounds fine then

[21:53:59.0000] <Domenic>
https://stackoverflow.com/questions/8951275/how-can-i-make-sublime-text-the-default-editor-for-git/9408117#9408117

[21:54:32.0000] <nikkibee>
that's rad, thanks

[21:55:42.0000] <nikkibee>
I miss the handy text colouring to let me know what I'm doing right, but this is much less stressful

[21:57:27.0000] <caitp>
theres probably a git syntax highlighter for sublime, isnt there?

[21:57:47.0000] <nikkibee>
not by default it doesn't look like

[21:58:10.0000] <nikkibee>
these files don't have an extension so I'm not sure how sublime would pick up on it

[21:59:31.0000] <caitp>
looks like there are lots of git plugins for it

[21:59:49.0000] <nikkibee>
that would be handy! I'm sure if there's plugins they know how to get sublime to recognize it

[22:00:51.0000] <nikkibee>
I've squashed and pushed the commits again @ Domenic

[22:07:35.0000] <Domenic>
nikkibee: great, re-building now!

[22:09:08.0000] <nikkibee>
:)

[22:11:07.0000] <Domenic>
Yay, merged!! Thank you so much!

[22:11:43.0000] <nikkibee>
:D thank you too for all the help!

[22:11:48.0000] <nikkibee>
I'm excited to be part of this

[22:14:09.0000] <Domenic>
\o/

[07:26:48.0000] <Ms2ger>
TabAtkins, where does bikeshed get its [[REFS]]?

[07:58:55.0000] <TabAtkins>
Ms2ger: Mostly SpecRef, but also Bikeshed's linking database (if [[ref]] is the shortname of a spec indexed by Shepherd/Bikeshed, it'll link).

[08:07:08.0000] <Ms2ger>
Pointer? It's missing OMGIDL

[08:52:02.0000] <caitp>
are iterable<> interfaces with an integer length property necessarily supposed to use %ArrayProto_values% as their iterator, or does that only apply to interfaces with the integer-typed length attr, indexed element getter, and no other form of iterable<> declaration

[11:00:29.0000] <hatmaker>
Hello!

[11:00:49.0000] <nikkibee>
hello

[11:00:49.0000] <botie>
privet, nikkibee

[11:01:06.0000] <hatmaker>
anyone here know Alystair?

[11:31:06.0000] <nikkibee>
http://testthewebforward.org/docs/configuration.html#branch I'm following these steps for https://github.com/w3c/web-platform-tests/issues/2277

[11:31:24.0000] <nikkibee>
I'm trying to think of a good name for the branch

[11:31:52.0000] <nikkibee>
"timers-cleartimeout-clearinterval"?

[11:39:32.0000] <nox>
https://reviewable.io/reviews/servo/servo/8114#-K1BFtVuDw8ymsMAeG5Q Apparently, dataset is badly specified, could someone clarify whether this is intended or not?

[11:39:52.0000] <nox>
https://html.spec.whatwg.org/multipage/dom.html#custom-data-attribute 'name starts with the string "data-", has at least one character after the hyphen'

[11:40:33.0000] <nox>
https://html.spec.whatwg.org/multipage/dom.html#dom-dataset 'For each content attribute on the element whose first five characters are the string "data-" and whose remaining characters (if any)'

[11:40:49.0000] <nox>
That 'if any' contradicts the first HTML spec link I pasted.

[11:54:58.0000] <jgraham>
nikkibee: The branch name doesn't matter at all, but that sounds fine

[11:55:05.0000] <nikkibee>
okay, thanks

[11:55:16.0000] <jgraham>
I mean having something somewhat descriptive helps, but it's shortlived anyway

[11:55:50.0000] <jgraham>
nox: Without reading the spec that sounds like UA requirements vs author requirements

[11:57:47.0000] <nikkibee>
https://github.com/nikkisquared/web-platform-tests#running-the-tests I'm trying to follow this and I get an error from a python file after running ./serve

[11:57:52.0000] <nikkibee>
note that I'm on windows

[11:57:58.0000] <nikkibee>
I followed the windows notes

[11:58:55.0000] <nikkibee>
https://gist.github.com/nikkisquared/5217fb6847348e149107 this is the error

[11:59:40.0000] <nikkibee>
I tried following the note at the end about `openssl` not working on the commandline but I don't think I'm doing it right

[11:59:53.0000] <nikkibee>
it doesn't work on the command line for me, even though I put it in the path

[12:00:16.0000] <nikkibee>
oh what the! the path didn't save my changes

[12:01:48.0000] <nikkibee>
I can run `openssl` now but I still get that error

[12:03:34.0000] <nikkibee>
I'd like knowing I can run the tests myself

[12:27:45.0000] <nox>
jgraham: Oh I see.

[12:31:46.0000] <Domenic>
Wasn't there some attempt at making inputEl.files assignable? sicking might remember?

[12:32:25.0000] <sicking>
Domenic: yeah. Mainly we need the .item() problem solved

[12:33:01.0000] <Domenic>
sicking: but couldn't we allow inputEl.files = any sequence and then convert it to a FileList? Separately from fixing FileList vs. array

[12:33:02.0000] <sicking>
Domenic: i think that's the only remaining blocker

[12:33:43.0000] <sicking>
Domenic: true, we could. You couldn't express that in WebIDL, though that's a relatively small hurdle

[12:33:53.0000] <Domenic>
Hmm I see.

[14:53:25.0000] <TabAtkins>
sicking: Use a getter/setter pair and some prose.

[14:53:53.0000] <sicking>
TabAtkins: that doesn't let us use the .files syntax, does it?

[14:54:02.0000] <TabAtkins>
ms2ger: https://github.com/tobie/specref

[14:54:13.0000] <TabAtkins>
sicking: Of course it does.

[14:54:43.0000] <TabAtkins>
getter/setter pairs looks like an attributde

[14:54:46.0000] <sicking>
that's webidl syntax i don't know if on that case

[14:56:00.0000] <sicking>
oh, i don't think we'd want the overhead of turning HTMLInputElement into a proxy, if that's what you're referring to?

[15:06:43.0000] <sicking>
Domenic: i would be a very happy camper if we got sequence_with_item<> in WebIDL. Or if ES Arrays grew a .item() function. Though the latter is probably not web compatible given that even adding .contains() wasn't possible.

[15:07:34.0000] <sicking>
Domenic: hmm... we probably need FrozenArrrayWithItem actually

[15:25:30.0000] <TabAtkins>
sicking: It's just getter/setter pairs in JS. WebIDL supports it.  All "attributes" in WebIDL are actually getter/setter pairs when translated to JS, too.

[15:25:56.0000] <sicking>
TabAtkins: ok, this is some WebIDL feature I don't know about then

[15:26:12.0000] <TabAtkins>
Again, this isn't WebIDL. It's JS. WebIDL just supports it.

[15:26:32.0000] <sicking>
i don't know what you mean by "WebIDL just supports it"

[15:26:53.0000] <sicking>
i know JS has getters and setters. That doesn't mean that webidl can do what Dominic is asking for

[15:26:59.0000] <TabAtkins>
WebIDL has syntax to express it.

[15:27:16.0000] <sicking>
if that's the case, then that's some WebIDL feature that I don't know about

[15:28:03.0000] <TabAtkins>
I'm still confused. There's nothing to "know about". If you know about JS getters and setters, then you know about WebIDL ones.  The only detail is the precise way to write one in an interface.

[15:28:38.0000] <sicking>
i just know about "[readonly] attribute <type> <name>"

[15:28:44.0000] <sicking>
which is not enough here

[15:28:59.0000] <sicking>
since Dominic was asking for different types for the getter and setter

[15:29:07.0000] <TabAtkins>
I'm not convinced you know about JS getters and setters here. ^_^

[15:29:15.0000] <sicking>
ok

[15:29:20.0000] <TabAtkins>
^_^

[15:29:27.0000] <TabAtkins>
You just have a getter that takes a sequence, converts it to a FileList, and assigns that to the internal [[files]] slot. Then a setter that returns the [[files]] slot.

[15:29:37.0000] <sicking>
show me the WebIDL syntax

[15:30:01.0000] <sicking>
i know perfectly well that JS suppots this

[15:30:04.0000] <sicking>
i haven't claimed otherwise

[15:31:43.0000] <TabAtkins>
Okay, I'm the stupid one here.  I'm recalling a WebIDL bug that heycam hasn't fixed yet. IDL getter/setter is for proxies. Ugh.

[15:32:25.0000] <sicking>
cool

[15:32:40.0000] <TabAtkins>
Sorry about that.

[15:32:57.0000] <sicking>
no worries, glad we came to clarity :)

[16:48:21.0000] <jsbell>
tuning in late, but sicking: stats show it'll be difficult to remove .items() on the DSL from Location.ancestorOrigins and .contains() on the DSLs from IndexedDB :(

[16:49:20.0000] <jsbell>
(i.e. yeah, sequence_with_XXX<> looks necessary)

[16:49:33.0000] <jsbell>
I'll mail webapps when I have cycles to care

[16:49:36.0000] <sicking>
jsbell: yup. That was my expectation

[16:49:44.0000] <sicking>
jsbell: heh

[16:50:00.0000] <sicking>
jsbell: Gecko is blocked by still not supporting subclassing Array as I understand it

[16:50:54.0000] <sicking>
once that is possible I'd like to simply switch a few classes over rather than waiting for WebIDL to catch up

[16:51:27.0000] <jsbell>
We welcome your implementation feedback. ;-)

[16:51:48.0000] <sicking>
cool :)


2015-10-24
[17:19:41.0000] <Domenic>
Yeah +1 to just making things happen once subclasses show up

[12:45:28.0000] <nox>
https://html.spec.whatwg.org/multipage/forms.html#labeled-control 'If the attribute is specified, the attribute's value must be the ID of a labelable element in the same Document as the label element.' Is that true regardless whether the label is in the tree or not?

[14:27:23.0000] <nox>
"in the same Document" should probably refer to https://dom.spec.whatwg.org/#in-a-document in some way so that no one has to wonder about that ever again.

[14:37:10.0000] <frewsxcv>
https://github.com/whatwg/html/issues/283


2015-10-25
[20:52:56.0000] <nikkibee>
I'm trying to read documentation so I'll know how to get started on this https://github.com/w3c/web-platform-tests/issues/2277 but I'm just not finding enough

[20:54:01.0000] <nikkibee>
I don't know what language to write the test in or where to store it

[20:54:41.0000] <nikkibee>
http://testthewebforward.org/docs/testharness.html I'm guessing this will be what's relevant to the tests to write

[20:55:30.0000] <nikkibee>
https://github.com/w3c/web-platform-tests#finding-things but as for where to put it, I can't find "timers" on that I don't know how to run `node tools/scripts/id2path.js your-id`

[20:55:37.0000] <nikkibee>
erf that wasn't a complete message

[20:56:07.0000] <nikkibee>
I can't find timers on that w3 page, and I don't know how to run that command. what is "your-id" supposed to be replaced with?

[20:57:32.0000] <nikkibee>
I can't find anything called "timers" by searching that in the directory anyways

[20:59:28.0000] <nikkibee>
https://github.com/w3c/web-platform-tests#running-the-tests and `python ./serve` crashes, which means I can't run tests anyways

[06:00:36.0000] <gsnedders>
probably the worst time to ask, but does anyone have any list of things that use microdata?

[11:00:08.0000] <rits>
annevk: hello, i am resuming my work on proposal, i couldn't work on it last week due to previous commitments of a hackathon. I wanted to know about the scope and span of the project work in the winter season of outreachy in more detail.

[11:00:28.0000] <rits>
 As much of the project will be related to fix the previous issues and what more needs to be done

[11:08:11.0000] <nikkibee>
hello

[11:08:12.0000] <botie>
niihau, nikkibee

[11:59:47.0000] <rits>
annevk: Hello

[14:37:16.0000] <annevk>
JakeA: could meet a little earlier too if you want

[14:37:39.0000] <annevk>
Anyone else at the hotel formerly named Renaissance?

[14:38:13.0000] <JakeA>
annevk: I've been awake since 4 so sure. Let me get properly up.

[14:38:34.0000] <annevk>
JakeA: heh, since six here. Aim for 7:15 then?

[14:38:50.0000] <annevk>
/me is pretty hungry

[14:42:30.0000] <JakeA>
annevk: yep, or even 7? (there was an f1 race this morning which accounts for my early waking, mostly)

[14:42:57.0000] <annevk>
JakeA: if I rush I could probably make 7, still need to answer one email and shower

[14:43:00.0000] <annevk>
JakeA: let's try that

[14:44:24.0000] <JakeA>
annevk: oh, don't rush. Just didn't want you starving :)


2015-10-26
[17:44:11.0000] <annevk>
talking about starving, already hungry again

[17:44:21.0000] <annevk>
I should learn how to breakfast

[17:47:59.0000] <nikkibee>
I hope the convention has meals... pycon would have been a lot harder for me if they didn't serve lunches there

[17:52:40.0000] <gsnedders>
We have food. We'll see how good it is. :)

[18:11:55.0000] <MikeSmith>
I reckon the food there will be pretty good, but I look forward to hearing y'alls assessments

[18:59:08.0000] <gsnedders>
TabAtkins: well that explains why you ignored me earlier :P

[19:00:55.0000] <TabAtkins>
People aren't allowed to change their hair style.

[19:01:30.0000] <gsnedders>
WELL I'M SORRY

[19:01:41.0000] <TabAtkins>
YOU SHOULD BE

[19:09:01.0000] <karlcow>
hober: about innerText  https://github.com/whatwg/compat/issues/5

[19:09:02.0000] <karlcow>
and spec https://github.com/rocallahan/innerText-spec

[19:09:02.0000] <karlcow>
and Gecko bug https://bugzilla.mozilla.org/show_bug.cgi?id=264412

[19:09:02.0000] <karlcow>
necessary for Web Compat issues.

[19:49:51.0000] <gsnedders>
I still don't get the structure of idlharness.js

[20:01:20.0000] <caitp>
does it not parse a webidl file, and build assertions about the interfaces it defines?

[20:01:45.0000] <caitp>
and then yell at you if your implementation doesn't match the expected interface?

[20:01:55.0000] <MikeSmith>
yeah

[20:02:00.0000] <MikeSmith>
though there are two parts of it

[20:02:13.0000] <MikeSmith>
the parser part is a separate script

[20:02:26.0000] <gsnedders>
caitp: yes, that's how it works

[20:02:29.0000] <MikeSmith>
idlharness.js itself just does the comparing

[20:02:39.0000] <gsnedders>
caitp: but it's how stuff is arranged within the JS implementation of idlharness.js

[20:04:44.0000] <MikeSmith>
/me tries to remember who wrote it

[20:05:39.0000] <MikeSmith>
I hacked^Wwrote some parts of it, to add support for particular featuresーbut I can't be blamed for the whole thing

[20:08:00.0000] <caitp>
all the bound closures are a bit hrd to reason about

[21:38:55.0000] <annevk>
nikkibee: heh, there's food

[22:10:55.0000] <jgraham>
Well there wasn't by 1pm

[22:14:47.0000] <zcorpan>
so anyone want to design a new logo for webvtt? see https://twitter.com/webvtt

[22:15:07.0000] <MikeSmith>
yeah I seems they need to do some significant correction on the food sizing for the rest of the week

[22:15:37.0000] <gsnedders>
MikeSmith: food was good while it lasted. even those of us who got food didn't get much.

[22:17:50.0000] <MikeSmith>
yeah, in Japan, people typically eat a lot more rice at meals than most folks from elsewhere typically eat

[22:18:00.0000] <MikeSmith>
so, you kinda of fill up on that, and the portions of the other stuff are smaller

[22:19:26.0000] <MikeSmith>
I think people at, like, maybe twice as much rice as most people from elsewhere would eat with a meal

[22:20:13.0000] <MikeSmith>
anyway, I am told by the organizers that they are on it

[22:22:47.0000] <MikeSmith>
zcorpan: suggest a font with rounded letters

[22:22:59.0000] <MikeSmith>
like, balloon shape

[22:24:04.0000] <MikeSmith>
and much thinner white border part

[22:24:31.0000] <MikeSmith>
otherwise I think you should keep that basic idea

[22:47:19.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3703

[22:51:56.0000] <MikeSmith>
zcorpan: like!

[22:52:18.0000] <TabAtkins>
+1, nice logo

[22:52:31.0000] <zcorpan>
w00t

[22:55:36.0000] <gsnedders>
Speaking of editing APIs, what's the best open source WYSIWYG editor nowadays?

[22:59:42.0000] <caitp>
browser devtools, probably

[23:03:01.0000] <MikeSmith>
indeed yeah

[23:03:29.0000] <MikeSmith>
never thought of it in those terms

[23:09:36.0000] <gsnedders>
caitp: that's not exactly end-user friendly :)

[23:15:09.0000] <caitp>
dreamweaver? microsoft office 98?

[23:15:11.0000] <caitp>
idk

[23:17:48.0000] <gsnedders>
I meant of the JS sort

[23:17:51.0000] <gsnedders>
Like TinyMCE

[23:19:13.0000] <caitp>
raptor-editor looks pretty flashy

[00:17:13.0000] <zcorpan>
TabAtkins: https://github.com/tabatkins/bikeshed/pull/508

[00:40:14.0000] <TabAtkins>
zcorpan: merged

[00:40:27.0000] <zcorpan>
ty

[00:45:29.0000] <zcorpan>
TabAtkins: updating bikeshed i now get FATAL ERROR: No 'property' refs found for 'unicode-bidi' compatible with status 'ED'. - previously it linked to https://drafts.csswg.org/css-writing-modes-3/#propdef-unicode-bidi which looks like an ED

[00:46:46.0000] <TabAtkins>
zcorpan: WM isn't building right now, I need to fix whatever's fucking it up.

[00:47:08.0000] <zcorpan>
ok

[00:47:18.0000] <TabAtkins>
Tho we do serve the old version, so, hmm. Probably a bug in Shepherd.

[00:47:36.0000] <TabAtkins>
I'll bug plinss.

[04:12:33.0000] <schalkneethling>
hi there all

[04:12:49.0000] <schalkneethling>
I have a quick question I would like to get people's opinion on

[04:13:19.0000] <schalkneethling>
what is the standard with the widest support, and longevity between microdata and microformats?

[04:13:40.0000] <schalkneethling>
From the microforat wiki it seems that microformats2 has "replaced" microdata

[04:13:46.0000] <schalkneethling>
is this true?

[04:14:19.0000] <schalkneethling>
I know it is still maintained as part of the HTML spec by the WhatWG but that the W3C has dropped it (seems like ~2013)

[04:14:35.0000] <schalkneethling>
so I am curious as to the current and future status

[04:14:38.0000] <schalkneethling>
thank you

[05:11:34.0000] <espadrine>
schalkneethling: you want to focus on what is implemented, which is probably what schema.org supports.

[05:16:11.0000] <espadrine>
microdata is pretty simple, which is probably good, but in some places such as email, json-ld is preferred

[05:19:33.0000] <espadrine>
it all depends on what you build though — if it's meant to be read by search engines, or email engines, or custom tools in an intranet…

[05:42:51.0000] <schalkneethling>
thanks espadrine

[05:43:26.0000] <schalkneethling>
just general research on the state of things like microdata

[06:21:51.0000] <philipj>
zcorpan: is annevk at TPAC?

[06:23:28.0000] <zcorpan>
philipj: yes

[06:24:02.0000] <philipj>
zcorpan: ok, then I'll wait until he's back to bug him about some fetch stuff

[06:25:25.0000] <zcorpan>
philipj: wdyt about the new webvtt logo?

[06:25:45.0000] <philipj>
zcorpan: where it it?

[06:26:35.0000] <zcorpan>
https://twitter.com/webvtt and https://github.com/w3c/webvtt (soon as favicon on the spec too, though there was a problem with bikeshed)

[06:27:22.0000] <philipj>
zcorpan: who made it?

[06:27:30.0000] <zcorpan>
i did

[06:28:04.0000] <philipj>
phone

[06:30:43.0000] <philipj>
it's nice, a speech bubble was precisely what I had in mind

[06:31:06.0000] <philipj>
in my master plan, it was of course green with a question mark in, but that didn't work out :)

[06:32:23.0000] <philipj>
between the two Ts there's just enough space that you'll get some different result depending on rasterization, maybe smashing them together entirely or pulling them a part a little would look better

[06:32:44.0000] <philipj>
also, obviously the text should scroll up :)

[06:42:38.0000] <zcorpan>
ok thx. it doesn't bother me about the Ts

[06:43:31.0000] <zcorpan>
one day i might do an SVG version

[06:43:59.0000] <zcorpan>
i designed it in live dom viewer using css :-)

[06:48:23.0000] <philipj>
oh... I assumed this was SVG :)

[06:49:29.0000] <philipj>
zcorpan: url to logo in live dom viewer?

[06:49:56.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3703

[06:51:08.0000] <zcorpan>
whenever i write svg i have to constantly look up how to do things. css i can do without looking things up

[06:52:57.0000] <philipj>
zcorpan: I thought the text was boxes as well, needs some font I don't have :)

[06:53:25.0000] <zcorpan>
yeah

[10:26:20.0000] <johnme>
sicking: did you get a chance to look at https://github.com/whatwg/notifications/pull/48?

[11:01:32.0000] <sicking>
johnme: hrm.. hard to review a diff to the spec source, given that I don't know the spec that well, and not the source at all. From what I can tell by the webidl changes it looks good though.

[11:02:26.0000] <johnme>
Jonas: might be easier to review in HTML form?: http://services.w3.org/htmldiff?doc1=https%3A%2F%2Frawgit.com%2Fjohnmellor%2Fnotifications%2Ff72a0417b9cacc3e29194bc7e0e602d97224e5a5%2Fnotifications.html&doc2=https%3A%2F%2Frawgit.com%2Fjohnmellor%2Fnotifications%2F5022b8399443601162f77557d023e80411a15154%2Fnotifications.html

[11:02:40.0000] <johnme>
sicking: oops, wrong username above :)

[11:02:53.0000] <sicking>
either works actually :)

[11:03:30.0000] <johnme>
sicking: annevk took a look and seems happy, but wanted your second opinion: https://github.com/whatwg/notifications/pull/48?#issuecomment-149230945

[11:04:13.0000] <sicking>
johnme: i'm still bummed that we can't support icons in the actions. You guys should lean on the Android team to fix that

[11:05:22.0000] <sicking>
johnme: obviously it's just as impossible for us to fix that in Firefox for Android as it is for you guys though, so i'm fine with the spec as-is

[11:05:29.0000] <johnme>
sicking: actually, we're making progress there - Marshmallow lets us pass in arbitrary bitmaps for the icons, and we're exploring the possibility of using custom layouts on older versions of Android in order to support icons

[11:05:43.0000] <sicking>
oh, interesting!

[11:05:44.0000] <johnme>
sicking: once this lands, I'll work on a proposal for icons

[11:05:54.0000] <sicking>
very cool!

[11:06:30.0000] <johnme>
sicking: good to hear you're happy with it. mind commenting on the PR so Anne can land it?

[11:06:58.0000] <sicking>
lemme skim through the rest of the HTML-diff and i'll do it after

[11:07:02.0000] <johnme>
thanks

[12:22:34.0000] <Guest19153>
Hello all, I wanted to introduce myself. I am a potential candidate for the OPW intership with the HTML standards project. Was wondering if there was anyone who had time to possibly mentor me as I attempt to make my first open source contribution to this project?

[12:25:27.0000] <nikkibee>
hello. annevk (the mentor for the project) and a lot of the group are at a web related conference this week, in Japan

[12:25:48.0000] <nikkibee>
there's still people around who can help though, so you should be able to make a contribution

[12:55:50.0000] <nikkibee>
Guest19153: I'd reccomend emailing annevk at annevk⊙an for advice on where to get started. that's what I did, and he was able to respond soon

[12:57:34.0000] <Guest19153>
Thank you all for the feedback, I actually reached out to him and although he is at a conference he was kind enough to respond. I just didn't want to bug him too much but I only have 5 days to submit a contribution to apply for the intership. I found out about it pretty late, but I'll start w/reading the docs tonight

[13:04:44.0000] <rits>
Domenic: Hello, actually i am working on the outreachy proposal and was working on the timeline of the project, but i have not been able to contact annevk for the same,

[13:04:54.0000] <rits>
so could you help me by giving some hints what main objectives have to be achieved during the internship period, thanks


2015-10-27
[21:39:47.0000] <gsnedders>
Do any drafts of CSS 1 survive any more?

[21:40:40.0000] <tantek>
like w3.org/tr/css1 with the big red warning

[21:46:23.0000] <gsnedders>
tantek: nah, I mean actual drafts of it prior to REC

[21:46:39.0000] <gsnedders>
I found <http://www.w3.org/TR/WD-css1-960220.html>, but I can't find any index of them

[21:47:00.0000] <tantek>
you mean before http://www.w3.org/TR/REC-CSS1-961217 ?

[21:47:14.0000] <gsnedders>
Yeah.

[21:48:22.0000] <tantek>
that's before my time there unfortunately - not sure where to find those

[21:50:27.0000] <gsnedders>
really half of what I want is likely in MO space, inc. the archives

[00:30:46.0000] <zcorpan>
has anyone written a webhook to send an email when a github issue or PR is opened/closed?

[00:32:28.0000] <gsnedders>
zcorpan: to a given mailing list or what?

[00:32:38.0000] <zcorpan>
yeah

[00:32:48.0000] <zcorpan>
public-texttracks for webvtt

[00:41:33.0000] <gsnedders>
https://help.github.com/articles/receiving-email-notifications-for-pushes-to-a-repository/ may or may not help

[00:51:57.0000] <zcorpan>
there's email sent to www-dom for whatwg/dom PRs, but it seems that's not a github webhook

[01:17:18.0000] <zcorpan>
https://github.com/github/github-services/pull/284 -_-

[01:27:47.0000] <annevk>
zcorpan: it used to be

[01:27:53.0000] <annevk>
zcorpan: but I removed it

[01:28:06.0000] <annevk>
zcorpan: talk to dom

[01:28:52.0000] <zcorpan>
annevk: ok, thx

[01:58:43.0000] <MikeSmith>
yeah Dom wrote something

[03:14:11.0000] <pyfisch>
are the encodings for MIME types described in https://tools.ietf.org/html/rfc2231 actually used by browsers?

[04:30:04.0000] <annevk>
pyfisch: to some extent

[04:31:03.0000] <annevk>
pyfisch: actually, unsure since that doesn't really define MIME types

[05:13:21.0000] <pyfisch>
annevk: what encodings of parameters are actually supported by the browser?

[05:17:55.0000] <annevk>
pyfisch: I'm not sure, I think some might be supported for content-disposition, but I don't really have much knowledge on this

[05:34:05.0000] <zoey>
Hi, I'm new and I would like to contribute, can someone get me started? This is in reference to Outreachy.

[05:36:09.0000] <Ms2ger>
Welcome zoey

[05:36:29.0000] <annevk>
zoey: did you read through https://wiki.mozilla.org/Outreachy/2016/December_to_March?

[05:37:02.0000] <annevk>
zoey: in particular, the bit about HTML

[05:38:37.0000] <zoey>
Yes, I have read the bit about HTML. I have knowledge of HTML and CSS.

[05:39:25.0000] <annevk>
zoey: alright, any of the bugs/issues look interesting?

[05:40:31.0000] <annevk>
zoey: e.g., you could attempt to fix https://www.w3.org/Bugs/Public/show_bug.cgi?id=28076 which is just a simple grammar issue

[05:40:50.0000] <annevk>
well, wording

[05:40:58.0000] <zoey>
Okay

[05:43:40.0000] <annevk>
zoey: for what it's worth, I'm at a conference this week so might always be available on IRC, but feel free to email and I'll try to reply as soon as possible

[05:44:09.0000] <annevk>
zoey: hopefully that's not too inconvenient

[05:45:24.0000] <zoey>
Its fine, I'm new to this so I'll probably take some time to figure things out.

[05:48:56.0000] <annevk>
zoey: thank you for trying it out and there will usually be someone here who can help you get unstuck (may you get stuck in the first place)

[06:19:52.0000] <zoey>
I found out that on line 648 colspan="2" but there is only one column defined! So there would be an error!

[10:02:01.0000] <IZh>
Hi. What you think about the post about <input>: http://meowni.ca/posts/a-story-about-input/ ?

[10:40:34.0000] <zoey>
So should I just keep debugging some HTML code?

[10:57:50.0000] <caitp>
what have you been doing so far? I saw you got linked an editorial bug earlier

[13:19:42.0000] <johnme>
annevk: is https://github.com/whatwg/notifications/pull/48 ready to land?

[14:46:33.0000] <Joseph_Silber>
Why can't a label's for attribute refer to an input's name?

[14:46:44.0000] <Joseph_Silber>
Why do I have to pollute everything with IDs?

[14:54:40.0000] <svl>
Joseph_Silber: multiple input elements can share the same name. Only ID attributes 'require' uniqueness.

[14:55:24.0000] <Joseph_Silber>
So it should have some some algorithm to determine it. Probably the first one.

[14:56:18.0000] <Joseph_Silber>
The first one in the current form.

[14:56:56.0000] <Joseph_Silber>
It's quite common to have multiple forms on the same page. Imagine they both collect an email. They would both have an input named `email`.

[14:57:10.0000] <Joseph_Silber>
Using a label `for="email"` is quite intuitive.

[14:57:24.0000] <Joseph_Silber>
Instead, I have to now give them separate email_1 and email_2 IDs.

[14:57:26.0000] <Joseph_Silber>
Ugh!

[14:58:08.0000] <Joseph_Silber>
<svl> multiple input elements can share the same name. Only ID attributes 'require' uniqueness.

[14:58:28.0000] <Joseph_Silber>
Good thing you put require in scare quotes, because it's not enforced anywhere.

[14:58:36.0000] <Joseph_Silber>
Your CSS will still work.

[14:58:55.0000] <Joseph_Silber>
Even querySelectorAll('#non-unique-id') will select them all.

[14:59:15.0000] <Joseph_Silber>
Only getElementById('non-unique-id') will return the first one.

[14:59:34.0000] <Joseph_Silber>
Not that I would EVER advise anyone to have non unique IDs.

[15:00:36.0000] <Joseph_Silber>
Regardless, I don't see how allowing `for` to match against `name` is a bad idea.

[15:02:26.0000] <nox>
It seems like https://html.spec.whatwg.org/multipage/comms.html#dom-websocket-bufferedamount doesn't match Blob.size,

[15:02:45.0000] <nox>
yet WebSocket.send() can take a Blob argument, and must increase bufferedAmount by that Blob's size.


2015-10-28
[19:07:59.0000] <zoey>
Should I just start finding bugs in the HTML script?

[19:12:00.0000] <annevk>
hey zoey

[19:12:26.0000] <zoey>
hi

[19:13:24.0000] <annevk>
zoey: http://krijnhoetmer.nl/irc-logs/whatwg/20151023#l-80 has a conversation with someone else where I tried to explain the basics

[19:13:46.0000] <annevk>
zoey: the basic goal is fixing issues in whatwg/html's "source" resource

[19:13:56.0000] <annevk>
zoey: which is a giant HTML file

[19:14:19.0000] <annevk>
zoey: that happens to be the HTML standard

[19:14:53.0000] <zoey>
Oh okay

[19:15:03.0000] <zoey>
thank you

[19:16:13.0000] <annevk>
zoey: I'll try to get to your email in a bit

[19:17:09.0000] <zoey>
sure

[19:17:16.0000] <annevk>
zoey: which file did you find the colspan="2" in?

[19:17:35.0000] <annevk>
zoey: doesn't seem to be source, at least not on that line

[19:17:50.0000] <zoey>
the one whose link you sent me

[19:17:54.0000] <zoey>
let me check

[19:20:18.0000] <zoey>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=28076

[19:20:21.0000] <zoey>
line 662

[19:20:35.0000] <annevk>
oh, I think you might have misunderstood

[19:20:50.0000] <annevk>
that is a bug report and describes an issue with whatwg/html's source document

[19:21:29.0000] <annevk>
Bugzilla might have issues of itself, but they are not important to this project

[19:21:57.0000] <zoey>
Ohh

[19:22:27.0000] <zoey>
can you please send me the link again?

[19:22:47.0000] <annevk>
zoey: you mean https://wiki.mozilla.org/Outreachy/2016/December_to_March#Contribute_to_the_HTML_Standard.21?

[19:23:58.0000] <zoey>
No, the link you sent for me to find an error, so that I could get started

[19:25:55.0000] <annevk>
So the link I gave you was https://www.w3.org/Bugs/Public/show_bug.cgi?id=28076 which describes a problem you could attempt to fix

[19:29:14.0000] <annevk>
zoey: you can also find another problem to fix by following the links to issues and bugs given in the "Contribute to the HTML Standard" section I linked to before

[19:39:41.0000] <zoey>
ok thanks i 'll straight get down to this now

[19:42:55.0000] <annevk>
zoey: enjoy!

[23:51:03.0000] <MikeSmith>
big congrats heycam|away https://twitter.com/heycam/status/659243858509697024

[23:51:38.0000] <MikeSmith>
you look very distinguished there

[23:52:00.0000] <MikeSmith>
now take a vacation and come visit me in Tokyo

[00:10:09.0000] <hober>
MikeSmith: i should have extended this trip so i could visit

[00:11:48.0000] <MikeSmith>
hober: come in the spring and we can all have hanami party under the cherry trees

[00:12:48.0000] <hober>
YES

[00:13:04.0000] <hober>
actually that's what i did when i was last in tokyo

[00:13:17.0000] <hober>
though sadly not with you. iirc you were out of town

[00:13:25.0000] <MikeSmith>
ah yeah

[00:15:19.0000] <MikeSmith>
hober: well you didn't do it in my neighborhood though; where I live now I have two big cherry trees just 20 yards away from my place, just waiting for you

[00:15:59.0000] <MikeSmith>
btw whoever made http://w3cmemes.tumblr.com/post/132069383207/brad-chooses-his-new-fido-challenge-method I love them

[00:17:03.0000] <MikeSmith>
it even looks *exactly* like Brad, but with 75 extra pounds, and a tiny bit less hair, and scarier

[00:54:03.0000] <jgraham>
53 minutes into meeting on future of HTML; first mention of WHATWG

[00:54:18.0000] <gsnedders>
Woah.

[00:54:28.0000] <gsnedders>
so, is XHTML2 the future?

[00:57:24.0000] <jgraham>
Goodness only knows. I feel like people in this conversation are working from the position that WHATWG doesn't exist.

[00:59:13.0000] <gsnedders>
But the W3C is a standards org. WHATWG is just a bunch of people conspiring!

[01:00:01.0000] <jgraham>
Now Charles is advocating delta specifications

[01:12:53.0000] <zcorpan>
nox: problem in the spec or some impl? (re bufferedAmount)

[04:57:37.0000] <JeanCarloMachado>
 /msg NickServ identify wisdom20

[04:57:53.0000] <JeanCarloMachado>
oh crap

[06:13:25.0000] <smaug____>
SW spec if oddly written. It doesn't first tell what some method does. It just has the algorithm

[06:13:39.0000] <smaug____>
I have no idea from the name of matchAll what it does

[16:29:20.0000] <zcorpan>
https://medium.com/@stevefaulkner/thoughts-on-notes-from-the-future-of-html-session-at-tpac-1c2f6f204cea#.19klrh3n7 hmmmm... what if w3c would publish a webdev version of the spec, without the impl requirements?


2015-10-29
[17:01:20.0000] <jgraham>
/me finds a table with power and a Firefox plushie

[17:16:45.0000] <zcorpan>
hober: we'll discuss HTMLCue now, in case you want to attend that (if not that's fine)

[04:28:53.0000] <akanksha_>
Hello, I wish to start contributing to whatwg. I am a new contributor. Can someone guid me in the right direction ?

[04:58:40.0000] <philipj>
akanksha_: there's a lot to do, are you interested in writing specs, tests, or something else?

[04:59:44.0000] <philipj>
akanksha_: https://wiki.whatwg.org/wiki/What_you_can_do has some info

[05:00:17.0000] <philipj>
akanksha_: and https://github.com/whatwg/html/labels/good%20first%20bug is a list of "easy" HTML bugs if that's your interest

[05:02:30.0000] <misterxavier>
Hi everyone

[05:02:46.0000] <misterxavier>
I wish to start contribute on html project

[05:03:30.0000] <philipj>
misterxavier: as I just told akanksha_, https://wiki.whatwg.org/wiki/What_you_can_do and https://github.com/whatwg/html/labels/good%20first%20bug may be a starting point

[05:04:28.0000] <misterxavier>
i gonna read

[05:04:33.0000] <misterxavier>
tks for the moment


2015-10-30
[22:15:30.0000] <annevk>
zcorpan: for https://github.com/whatwg/html/issues/296 it would be good to identify some WebSocket implementors

[22:15:40.0000] <annevk>
zcorpan: I cannot really think of any though

[22:16:28.0000] <zcorpan>
annevk: yeah i don't know either offhand but i can have a hunt in bug databases to find candidates

[23:22:34.0000] <zcorpan>
is @dwsinger on github David Singer ?

[23:23:25.0000] <MikeSmith>
zcorpan: yeah I think so

[23:23:36.0000] <zcorpan>
ty

[02:25:29.0000] <Ms2ger>
Anyone know where chrome's code to evaluate javascript: urls is?

[02:43:48.0000] <Ms2ger>
If people are into obfuscated code: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3720

[02:47:43.0000] <MikeSmith>
Ms2ger: interesting

[02:48:51.0000] <MikeSmith>
and cool that every browser engine behaves differently with that

[02:49:36.0000] <MikeSmith>
well, didn't try Edge yet

[02:50:00.0000] <MikeSmith>
Ms2ger: is this exposing a spec bug or shortcoming?

[02:50:15.0000] <Ms2ger>
Several? :)

[02:50:38.0000] <MikeSmith>
gotta love that then

[02:50:40.0000] <Ms2ger>
I mean, Chrome is annoying about data urls, not sure what's specced there

[02:50:47.0000] <Ms2ger>
Firefox is correct per spec

[02:51:06.0000] <MikeSmith>
ok

[02:51:42.0000] <Ms2ger>
Chrome seems to match the spec too, doing it manually

[02:51:53.0000] <MikeSmith>
oh

[02:51:55.0000] <Ms2ger>
Servo doesn't

[02:53:09.0000] <Ms2ger>
MikeSmith, got any clever ideas to test `#` instead of `?`?

[02:53:34.0000] <MikeSmith>
hmm

[02:53:42.0000] <MikeSmith>
none jump to mind

[02:53:53.0000] <MikeSmith>
annevk might

[02:54:03.0000] <MikeSmith>
Hixie might too :)

[02:55:52.0000] <Ms2ger>
You don't have a zcorpan nearby? :)

[02:58:35.0000] <Ms2ger>
And really I was trying to answer two other questions about js urls...

[02:58:41.0000] <Ms2ger>
/me is bad at not shaving yaks

[04:51:18.0000] <zcorpan>
is @PoojaSanklecha a first-time contributor for html? (the contributors page doesn't seem to finish loading for me)

[04:52:09.0000] <Ms2ger>
There we have a zcorpan

[04:55:51.0000] <zcorpan>
Ms2ger: ok now i understand what this thing is doing

[04:55:56.0000] <zcorpan>
Ms2ger: what about #

[04:56:55.0000] <Ms2ger>
zcorpan, the spec says to parse the url and append ?<query>#<fragment> to the script if those are in the url

[04:57:20.0000] <Ms2ger>
zcorpan, I'm looking for a way to test that the fragment isn't forgotten

[04:58:39.0000] <zcorpan>
Ms2ger: <script>w(location.hash)</script>#foo

[04:58:47.0000] <Ms2ger>
/me idly wonders whether https://dom.spec.whatwg.org/#dom-document-contenttype can contain unpaired surrogates

[05:00:21.0000] <zcorpan>
(percent-escape the # if you want url inception)

[05:01:51.0000] <zcorpan>
i think i should go to gate

[08:24:48.0000] <zcorpan>
Ms2ger: isn't it just http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3722 ?

[08:26:45.0000] <zcorpan>
Ms2ger: or do you want something that is valid JS if it were truncated at the # ?

[08:27:25.0000] <Ms2ger>
That would be optimal

[08:34:27.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/3723

[08:35:49.0000] <zcorpan>
/me -> gate

[08:36:35.0000] <Ms2ger>
Oho, clever

[08:42:24.0000] <Ms2ger>
How would people feel about using USVString for things like TextDecoder#encoding, which are basically enums?

[10:57:17.0000] <caitp>
@-mentioning @WHATWG is pretty useless isn't it

[10:57:38.0000] <caitp>
well, if anyone gets that message, feel free to direct comments at me

[14:27:42.0000] <MikeSmith>
caitp: I read all the @whatwg messages, and I know annevk does also

[14:28:07.0000] <MikeSmith>
I don't know the answer to that question though (which particular threads)

[14:28:45.0000] <Domenic>
Same

[14:35:07.0000] <caitp>
i doubt if any of them are still active anyway


2015-10-31
[13:43:37.0000] <sluijs>
Is there a special channel regarding EPUB questions?

