2009-10-01
[17:00:00.0000] <othermaciej>
probably worth pointing out

[17:23:00.0000] <Philip`>
/me wonders what the proportion of facts vs namespace religion will be

[17:25:00.0000] <Philip`>
/me won't point out obvious mistakes like the failure to use a URI as the namespace attribute value

[17:33:00.0000] <Philip`>
/me likes how he finally has enough RAM to run three web browsers at once, plus a virtual machine with Windows and another five web browsers, without anything slowing down noticeably

[17:40:00.0000] <tantek>
/me thinks the proposal is one of the more hilarious things he's seen on the public-html list in quite some time.

[17:40:01.0000] <tantek>
s/distributed extensibility/proprietary extensibility/

[17:40:02.0000] <tantek>
for more humor value (and perhaps even "truer" statements)

[17:41:00.0000] <tantek>
/me is resisting the temptation to write a massive "bitch-slap" (technical term) email to public-html in response to the proposal. (Microsoft people ought to know better)

[17:46:00.0000] <Philip`>
tantek: Please do resist, it doesn't sound like it would contribute to productive discussion :-p

[17:53:00.0000] <Philip`>
/me reads a bit further

[17:54:00.0000] <Philip`>
The scripting and CSS examples seem crazy - why would you want to process/style elements based solely on their namespace?

[17:54:01.0000] <tantek>
/me resists by attempting to focus on higher priority things.

[17:55:00.0000] <tantek>
Philip` - in this case another way of saying 'crazy' is 'completely made up and unrelated to any real world practice', what we in #microformats call "purely theoretical" and handily dismiss as not worth discussing.

[17:56:00.0000] <Philip`>
"The proposal is made in a modular way so that any components causing unacceptable compatibility concerns could be abandoned." - indeed, we can just abandon the entire thing and tell people never to touch elements or attributes containing the character ':' because it's a compatibility nightmare

[18:06:00.0000] <othermaciej>
Philip`: it would be useful to do have test data on attributes too

[18:10:00.0000] <othermaciej>
how do you get at HTTP headers in PHP?

[18:10:01.0000] <othermaciej>
(sorry for asking all my dumb PHP questions here)

[18:17:00.0000] <Philip`>
othermaciej: Like that? [on list]

[18:18:00.0000] <othermaciej>
Philip`: namespaces don't have that tagUrn property in IE?

[18:18:01.0000] <othermaciej>
er, attributes rather

[18:18:02.0000] <othermaciej>
Philip`: does the Microsoft proposal specify how xmlns:foo attributes should look in the DOM?

[18:19:00.0000] <othermaciej>
Philip`: that might be another good thing to test

[18:19:01.0000] <Philip`>
othermaciej: $_SERVER['HTTP_UPPERCASED_HEADER_NAME'] perhaps?

[18:19:02.0000] <othermaciej>
Philip`: thank you sir

[18:19:03.0000] <Philip`>
othermaciej: IE doesn't do any namespace processing of attributes at all, so tagUrn is always just undefined

[18:19:04.0000] <othermaciej>
I neglected to uppercase

[18:20:00.0000] <Philip`>
(so I excluded it from the email)

[18:20:01.0000] <othermaciej>
Philip`: might be good to state that, since it's sort of the substitute namespaceURI for elements

[18:20:02.0000] <Philip`>
I don't think they say anything about xmlns:foo, but all text/html treat it identically to any other attribute with or without a colon

[18:20:03.0000] <Philip`>
s/treat/browsers treat/

[18:22:00.0000] <Philip`>
/me won't bother sending another email to state anything now, since it seems better to go to bed

[18:23:00.0000] <Philip`>
(Also, most of this stuff has been discussed years ago anyway)

[18:23:01.0000] <Philip`>
(xmlns-dom.html was 1.5 years old)

[18:25:00.0000] <Philip`>
(Also the details don't seem too important when their claim of IE compatibility appears to be fundamentally bogus)

[18:25:01.0000] <Philip`>
/me goes to bed, and will try to predict how many "+1" responses the proposal gets by tomorrow

[00:20:00.0000] <hsivonen>
tantek: please do write your concerns about what is wrong with the "decentralized extensibility" proposal to the list

[02:04:00.0000] <tantek>
hsivonen - in short, the justifications provided for "decentralized extensibility" in Microsoft's proposal are either theoretical, solved by other mechanisms in HTML5, or are a poor rationalization for what amounts to proprietary extensions, which are known to be bad, and thus should be discouraged as far as standard formats are concerned.

[02:04:01.0000] <Hixie>
i encourage you to post that to the list, i think most people on the list are desensitised to me and henri saying this by now

[02:05:00.0000] <Philip`>
Hixie: You need a sock puppet

[02:06:00.0000] <tantek>
perhaps in the (PDT) morning, time for me to sleep on it.

[02:43:00.0000] <hsivonen>
are iframes supposed to delay the onload event of the parent?

[02:43:01.0000] <zcorpan_>
yes

[02:43:02.0000] <hsivonen>
ok

[02:44:00.0000] <zcorpan_>
"When there is an active parser in the iframe, and when anything in the iframe is delaying the load event of the iframe's browsing context's active document, the iframe must delay the load event of its document."

[02:44:01.0000] <hsivonen>
so, on on both www.aol.com and www.cnn.com I see more things trying to unblock onload than blocking onload

[02:44:02.0000] <hsivonen>
and on www.aol.com I see attempts to unblock onload periodically

[02:45:00.0000] <zcorpan_>
how do you unblock onload?

[02:45:01.0000] <hsivonen>
zcorpan_: I mean internal onload unblocking code

[02:45:02.0000] <zcorpan_>
ah

[02:46:00.0000] <hsivonen>
/me goes set a breakpoint to catch the periodic thing

[02:47:00.0000] <zcorpan_>
hsivonen: i did some research on <script><!-- yesterday

[02:47:01.0000] <hsivonen>
ha! I have innerHTML setter accidentally unblocking onload

[02:47:02.0000] <hsivonen>
/me wonders how innerHTML itself and images inserted by innerHTML should interact with onload

[02:48:00.0000] <hsivonen>
zcorpan_: did you manage to disqualify any proposals?

[02:48:01.0000] <zcorpan_>
hsivonen: yes

[02:48:02.0000] <hsivonen>
cool

[02:48:03.0000] <Philip`>
All of them?

[02:49:00.0000] <hsivonen>
so proposal 3 is the only one not marked as FAIL

[02:49:01.0000] <zcorpan_>
Philip`: i think proposal #3 breaks the least out of the lot

[02:49:02.0000] <zcorpan_>
but it still breaks some pages

[02:50:00.0000] <hsivonen>
intuitively, proposal 3 scares me more than what's specced now

[02:50:01.0000] <jgraham>
hsivonen: Why?

[02:50:02.0000] <jgraham>
/me doesn't really like any of the proposals

[02:50:03.0000] <hsivonen>
jgraham: proposal 3 breaks random sites out there

[02:50:04.0000] <zcorpan_>
what's specced now breaks more sites out there :)

[02:51:00.0000] <hsivonen>
jgraham: what's currently been reported about the spec is that it breaks one developer-oriented tool and one attempt of writing test cases

[02:51:01.0000] <hsivonen>
zcorpan_: ok. no one has bothered to note the other sites broken by the spec on bugzilla.mozilla.org

[02:51:02.0000] <zcorpan_>
hsivonen: what's specced now also breaks all of these http://philip.html5.org/data/script-close-in-escape-without-script-open-2.txt

[02:52:00.0000] <hsivonen>
ooh. scary.

[02:52:01.0000] <Philip`>
I propose getting rid of <script>

[02:52:02.0000] <zcorpan_>
proposal #3 only breaks 3 sites in there or so

[02:52:03.0000] <hsivonen>
//--><!--</script>

[02:52:04.0000] <hsivonen>
that's pattern is so, so, sad

[02:53:00.0000] <Philip`>
/me wonders if reparsing is really so bad, given that everybody does it

[02:54:00.0000] <hsivonen>
what are people thinking when they finish their script not with //--> but with //--><!--

[02:54:01.0000] <jgraham>
/me wonders the same as Philip` 

[02:54:02.0000] <zcorpan_>
they are clearly confused by all the comment tags "//", "<!--" and "-->" so don't know when to use which

[02:55:00.0000] <zcorpan_>
and it doesn't matter because it all works in browsers today

[02:56:00.0000] <hsivonen>
zcorpan_, Philip`: thanks for analyzing the proposals

[02:57:00.0000] <zcorpan_>
maybe we also need to look at pages that do have <script inside escaped text span, too

[02:58:00.0000] <zcorpan_>
to find pages with the second kind of breakage of #3

[02:58:01.0000] <Philip`>
hsivonen: I blame Hixie, for writing a document that suggests <script><!--//--><![CDATA[//><!-- ...

[02:59:00.0000] <Philip`>
thus causing people to completely give up all hope of understanding commenting, and to just randomly insert comment characters until it works

[02:59:01.0000] <zcorpan_>
oh right, i forgot the other two comment tags "<![CDATA[" and "]]>"

[03:00:00.0000] <gsnedders>
/me calls theoretical on the whole security hole Hixie worries about here

[03:00:01.0000] <hsivonen>
Philip`: we have a problem with debating complexity on the Web

[03:01:00.0000] <hsivonen>
Philip`: if you say that something is impossible, you are wrong, but if you show that the possibility is ridiculously complex, there's always someone who copies and pastes it

[03:02:00.0000] <hsivonen>
it's like every complex piece of badness is an attractive nuisance

[03:02:01.0000] <jgraham>
/me suggests that the whoile situation would have been much simpler if <!-- --> just indicated a comment in an inline script block from the start

[03:03:00.0000] <Philip`>
hsivonen: Maybe we should convert any demonstrations of ridiculous complexity into images rather than text, so people can't copy-and-paste and fewer will manually type it all out

[03:04:00.0000] <hsivonen>
Philip`: that would be inaccessible

[03:04:01.0000] <zcorpan_>
Philip`: just do ondragstart="return false"

[03:04:02.0000] <jgraham>
(since HTML-aware text editors tend to be insuffciently HTML-aware to make their comment function notice that it is working in a script block rather than in some random HTML

[03:04:03.0000] <jgraham>
hsivonen: Not with alt text

[03:04:04.0000] <hsivonen>
Philip`: also, consider all the typos people would make when typing it

[03:05:00.0000] <hsivonen>
/me assumed alt text got copied

[03:05:01.0000] <jgraham>
But people won't expect it to work when they can't select it

[03:06:00.0000] <jgraham>
(well I know you can select images but people generally wouldn't select an image of text expecting the alt text to be the text)

[03:08:00.0000] <Philip`>
hsivonen: The inaccessibility has to be balanced against the humanity of not subjecting screen reader users to a spoken version of <script><!--//--><![CDATA[//><!--

[03:12:00.0000] <hsivonen>
now that I've seen what kind of browser bugs are possible with innerHTML during load, innerHTML during load scares me a bit even for cases that aren't browser bugs

[03:17:00.0000] <Philip`>
/me wonders why Laurens Holst picked, of all the legitimate examples of insane complexities in HTML5, one that is actually very simple in HTML and is only confusing because of promotion of XHTML-as-text/html

[03:21:00.0000] <hsivonen>
/me wonders if Julian programs with namespaces, writes namespace-wise correct code and likes the experience

[03:25:00.0000] <hsivonen>
Yay. I fixed the innerHTML setting during load issue

[03:25:01.0000] <hsivonen>
It worries me that even the fix was non-obvious

[03:29:00.0000] <Philip`>
hsivonen: You don't necessarily have to like the experience of working with namespaces, you just have to not dislike it enough to counteract the benefits

[03:29:01.0000] <hsivonen>
Philip`: good point.

[03:29:02.0000] <hsivonen>
I rank the benefits the be negative.

[03:30:00.0000] <Philip`>
That sounds like a type error

[03:30:01.0000] <Philip`>
Benefits are by definition positive :-p

[03:30:02.0000] <Philip`>
s/positive/non-negative/

[03:52:00.0000] <mookid>
anyone got any recommendations on web based open source scrum tools (preferably LAMP stack)?

[03:53:00.0000] <Philip`>
/me doesn't know many open source rugby simulators

[04:29:00.0000] <hsivonen>
/me wonders why texts that discuss multithreading don't explain how the multiple runtime stacks are typically laid out in the address space of the process

[04:30:00.0000] <hsivonen>
while texts that discuss processes commonly mention the address layout of the stack and the heap

[04:32:00.0000] <Philip`>
Is there much to discuss?

[04:32:01.0000] <hsivonen>
Philip`: saying how they are laid out

[04:32:02.0000] <Philip`>
I thought it was just like thread n has a stack at base-n*max_stack_size and that's about it and otherwise it's the same as a single-threaded process

[04:33:00.0000] <hsivonen>
Philip`: well, that's the bit that usually goes unmentioned

[04:33:01.0000] <hsivonen>
btw, what mechanism is there to prevent a stack longer than max_stack_size overwriting the next stack?

[04:34:00.0000] <Philip`>
You could put a non-writable page between stacks

[04:34:01.0000] <hsivonen>
OK

[04:34:02.0000] <Philip`>
Don't know whether that happens in practice, though

[04:35:00.0000] <hsivonen>
well, that's the thing. it's easy to solve these problems in theory, but no one ever says how they are solved in real systems

[04:35:01.0000] <Philip`>
http://gcc.gnu.org/onlinedocs/gcc-4.1.2/gnat_ugn_unw/Stack-Overflow-Checking.html - "For most operating systems, gcc does not perform stack overflow checking by default."

[04:37:00.0000] <hsivonen>
generating additional instructions seems worse than wasting a page of virtual address space

[04:37:01.0000] <Philip`>
(I expect you'd get a segmentation fault though, since the stack would extend into unallocated address space)

[04:37:02.0000] <Philip`>
(in the single-threaded case)

[04:43:00.0000] <Philip`>
Anyway, just don't overflow your stack and it'll all be fine :-)

[04:44:00.0000] <Philip`>
(and certainly don't use recursive functions)

[06:34:00.0000] <annevk2>
if anyone knows a more correct Unicode symbol for average than x̅ please let know

[06:34:01.0000] <annevk2>
x̅ doesn't look quite right and is somewhat of a hack I suppose

[06:36:00.0000] <jgraham>
Is that supposed to be x with a line on top?

[06:36:01.0000] <jgraham>
If so that is one of two common ways I can think of of prepresenting average

[06:36:02.0000] <jgraham>
the other being <x>

[06:36:03.0000] <Philip`>
I suggest using more than one symbol, such as "mean(x)"

[06:37:00.0000] <Philip`>
which has the bonus that it doesn't like identical to "x" in my IRC client

[06:37:01.0000] <jgraham>
Philip`: It depends what you are trying to do

[06:37:02.0000] <jgraham>
If you are writing an equation <x> or so is nicer

[06:38:00.0000] <Philip`>
If I was writing an equation I'd write something like \xbar

[06:39:00.0000] <Philip`>
(rather than trying to do it with Unicode)

[06:40:00.0000] <annevk2>
see http://annevankesteren.nl/2009/10/tirsdagspils for the use case

[06:40:01.0000] <annevk2>
jgraham, i.e. &lt;x> in HTML?

[06:41:00.0000] <jgraham>
/me assumes that it is not possible to do something like \overline{x^2} using pure unicode

[06:41:01.0000] <Philip`>
annevk2: Just write "average" or "avg" or "mean"

[06:41:02.0000] <jgraham>
annevk2: Yeah. There are maybe "more proper" symbols to use than < and > 

[06:42:00.0000] <Philip`>
The mathematical symbols don't seem to make sense in this context

[06:42:01.0000] <Philip`>
e.g. because you're never defining what 'x' is

[06:42:02.0000] <jgraham>
/me wonders what the context is

[06:42:03.0000] <Philip`>
jgraham: See annevk2's link

[06:43:00.0000] <jgraham>
Oh, I missed that

[06:43:01.0000] <jgraham>
Obviously

[06:44:00.0000] <jgraham>
Yeah, what Philip` said

[06:44:01.0000] <jgraham>
You should say "mean" or something if you want to be precise

[06:45:00.0000] <Philip`>
You could show the mean, median and standard deviation, to make sure people have enough information to make a good decision

[06:45:01.0000] <annevk2>
lame

[06:46:00.0000] <annevk2>
but thanks

[07:09:00.0000] <annevk2>
/me files more bugs

[07:10:00.0000] <zcorpan_>
annevk2: xml:lang?

[07:11:00.0000] <annevk2>
zcorpan_, guess my post-processor is not doing its job everywhere

[07:11:01.0000] <annevk2>
I should fix some of these things I suppose

[07:35:00.0000] <annevk2>
does anyone recall whether Hixie wanted bugs on normal text referencing impl-protected text?

[07:36:00.0000] <annevk2>
e.g. the definitions of the constants for the appcache API do that a lot

[07:37:00.0000] <zcorpan_>
annevk2: i think he doesn't want bugs on that

[07:40:00.0000] <annevk2>
k

[07:41:00.0000] <annevk2>
/me feels a little bad for filing all these bugs now

[08:06:00.0000] <annevk2>
http://www.w3.org/2001/tag/2009/09/HTMLIssuesRevised.pdf

[08:06:01.0000] <annevk2>
(from an Excel file?!)

[08:08:00.0000] <Philip`>
It's really terrible that people might use a spreadsheet program to write a spreadsheet

[08:08:01.0000] <annevk2>
agreed

[08:09:00.0000] <hsivonen>
annevk2: what's "?!" about Excel?

[08:10:00.0000] <annevk2>
surprise

[08:11:00.0000] <hsivonen>
so each TAG member assigned number of beans per issue 

[08:11:01.0000] <hsivonen>
and the number can be > 1

[08:11:02.0000] <hsivonen>
and there's no clear bean maximum

[08:11:03.0000] <annevk2>
I wasn't quite sure how the number game worked

[08:12:00.0000] <Philip`>
Maybe the implicit maximum is 10, but if you want you can turn it up to 11

[08:13:00.0000] <hsivonen>
hmm. TimBL gave 4 beans to RDF triples but otherwise only one other TAG member gave a bean

[08:14:00.0000] <hsivonen>
at least the XPath thing got 0 beans

[08:14:01.0000] <Philip`>
Are the ones in purple magic beans?

[08:15:00.0000] <hsivonen>
hmm. lack of doc.write in XML got a bean

[08:17:00.0000] <hsivonen>
what does issue 7 (relationship of DOM & serialization) entail?

[08:18:00.0000] <Philip`>
That document indicates no TAG member wants to look for positive feedback

[08:18:01.0000] <Philip`>
hsivonen: Maybe that was the disabled=banana thing?

[08:19:00.0000] <hsivonen>
Philip`: disabled=banana is issue 13

[08:20:00.0000] <Philip`>
hsivonen: That's what the layout indicates, but Henry's question seemed to be about issue 7

[08:21:00.0000] <Philip`>
(particularly about what DOM you get from the serialisation disabled="banana")

[08:24:00.0000] <Philip`>
The interaction of prefix binding and table foster-parenting seems like a really boring issue

[08:24:01.0000] <Philip`>
since there's only one way it can possibly work that is not totally insane

[08:25:00.0000] <hsivonen>
Philip`: I hope we have the same idea of what isn't totally insane

[08:26:00.0000] <Philip`>
Anything that depends on the source characters, not on the parsed DOM, is totally insane

[08:26:01.0000] <hsivonen>
good

[08:57:00.0000] <Philip`>
/me wonders if there's a good JS editor plugin for Eclipse

[09:31:00.0000] <Dashiva>
Great game: http://www.stfj.net/art/2009/loselose/

[09:34:00.0000] <TabAtkins>
Heh, interesting.

[09:35:00.0000] <Philip`>
Sadly its deep meaning is rendered futile by virtual machine snapshots that remove all possible consequences

[09:35:01.0000] <TabAtkins>
Actually, that just brings up further existential questions revolving around simulation and the consequences of Singularity.

[09:36:00.0000] <TabAtkins>
Is it truly killing if there is an exact copy that can be restored?  How can we modify our ethics to handle this situation consistently?

[09:38:00.0000] <Philip`>
http://home.wildit.net.au/hellohelloben/mystery.html is a game with far more morally serious and unavoidable life-and-death consequences

[09:39:00.0000] <Dashiva>
The opening screen doesn't make me want to press start

[09:39:01.0000] <TabAtkins>
Are we doing something unethical when we create simulated life while talking with someone (modeling them mentally to predict reactions)?  What about when a hyperintelligent AI is able to simulate us to arbitrary precision while talking to us, then deleting the simulations when done?

[09:40:00.0000] <Philip`>
Dashiva: It's one of the games of decade, according to http://www.eurogamer.net/articles/eurogamer-editors-games-of-the-decade-article?page=3

[09:41:00.0000] <TabAtkins>
Oh jeezus haploid christ.

[09:42:00.0000] <Philip`>
TabAtkins: If I delete all the files on your hard disk and you have a backup, does that mean I didn't really delete all the files on your hard disk?

[09:42:01.0000] <TabAtkins>
Philip`, ethically, did you?  What if those files are sapient entities?  Did you commit murder?

[09:43:00.0000] <Philip`>
/me is reminded of Glasshouse, where everyone has backups of themselves, and murder is common but considered a far less serious crime than identity theft

[09:43:01.0000] <TabAtkins>
/me liked that book.

[09:44:00.0000] <TabAtkins>
Though that only barely touches on the issues of identity and existence in the face of simulation.

[09:45:00.0000] <Philip`>
The existence of backups doesn't change the definition of "murder", it just changes how much we care about it and how much effort we put into trying to stop it

[09:46:00.0000] <Philip`>
which are much more concrete ideas than the concept of 'ethics'

[09:46:01.0000] <Dashiva>
But you lose everything since the latest backup

[09:46:02.0000] <TabAtkins>
Hmm?  Ethics are vitally important when you're talking about the possibility of an action being duplicated across trillions or more conscious entities in a moment.

[09:47:00.0000] <TabAtkins>
Such as in the simulation spaces of a hyperintelligent AI.

[09:47:01.0000] <Philip`>
Dashiva: Well, you need to work out a decent backup schedule

[09:47:02.0000] <TabAtkins>
Is it ethical to torture someone to death if you can restore them back to before the torture started with no memories of it?

[09:47:03.0000] <Philip`>
Knowing most people, they wouldn't actually back themselves up until they'd already been killed, and then it'd be too late

[09:48:00.0000] <Dashiva>
The real question is how they do the reanimation

[09:48:01.0000] <TabAtkins>
(I'd like to say no, but I'm honestly not sure if that's correct, given that it's only an issue of computation resources that distinguishes the poor copies of others I create in my mind and copies that are functionally indistinguishable from real people.)

[09:49:00.0000] <TabAtkins>
(And I don't think it's unethical to torture a mental image.  Probably.)

[09:49:01.0000] <Dashiva>
In associated news: Squids are one of the four fundamental forces of the universe, alongside the Weak Force, the Strong Force and Gravity.

[09:49:02.0000] <Philip`>
Dungeon Keeper had a torture chamber

[09:49:03.0000] <Philip`>
That was a fun game, so I'll decide it's not unethical

[09:49:04.0000] <TabAtkins>
This is your fault, Dashiva.

[09:50:00.0000] <TabAtkins>
Philip`, I'll see if you change your mind when the AI who is executing this universe in its mind decides to torture everyone to death.

[09:51:00.0000] <Dashiva>
Actually, lose/lose reminds me of Only You Can Save Mankind

[09:51:01.0000] <Philip`>
Also your cursor was a Hand of Evil, and you could slap all your imps

[09:52:00.0000] <TabAtkins>
/me has fond memories of being an evil god in Black and White.

[09:52:01.0000] <TabAtkins>
My people led a life of unrestricted hedonism, as long as they were willing to give me about half their babies.

[09:53:00.0000] <Philip`>
Dashiva: I always wanted a copy of the real-time journey-to-alpha-centauri game from that

[09:56:00.0000] <TabAtkins>
Philip`, go get one.  It's just a few jumps from the Wikipedia article.

[09:57:00.0000] <Philip`>
TabAtkins: I stopped wanting it about ten years ago :-p

[09:57:01.0000] <TabAtkins>
Hehe.

[11:26:00.0000] <Fernandos>
hi

[11:26:01.0000] <TabAtkins>
yo

[11:27:00.0000] <Fernandos>
can someone help me debugging a site made with basic html5

[11:27:01.0000] <TabAtkins>
Possibly.  Shoot us the link.

[11:27:02.0000] <Fernandos>
http://fif-moebel.de

[11:28:00.0000] <Fernandos>
I get 3 errors which make no sense to me.

[11:28:01.0000] <Fernandos>
I doubt the validator is wrong http://html5.validator.nu/?doc=http%3A%2F%2Ffif-moebel.de%2F&showimagereport=yes

[11:28:02.0000] <Fernandos>
I thought <meta http-equiv="language" content="de" /> is correct and neccessary for seo

[11:29:00.0000] <Fernandos>
I used media query like media="speech" with a speech stylesheet

[11:29:01.0000] <Fernandos>
but it tells me that is an invalid media query.

[11:29:02.0000] <Fernandos>
I know it was aural before and now it is speech, whyever..

[11:30:00.0000] <TabAtkins>
CSS2 changed it from aural to speech, but it's possible that HTML didn't update itself.

[11:30:01.0000] <Fernandos>
last thing, <meta http-equiv="pics-Label"... is correct but why does it tell me it's an error?

[11:31:00.0000] <Fernandos>
I know it's all a working draft some even just experimental, but hey html5 is not alpha software

[11:31:01.0000] <Fernandos>
I respect the work you do and it's government grade quality or higher in usual.

[11:33:00.0000] <Fernandos>
any ideas

[11:34:00.0000] <TabAtkins>
Hmm.

[11:34:01.0000] <Philip`>
Fernandos: You might want http-equiv="content-language" instead

[11:34:02.0000] <gsnedders>
Only a few meta elements are allowed, almost all are ignored anyway.

[11:34:03.0000] <Philip`>
though that should give a warning telling you to use <html lang="de"> instead

[11:35:00.0000] <Philip`>
(See http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#attr-meta-http-equiv-content-language )

[11:35:01.0000] <Fernandos>
Philip`: I just removed http-equiv="content-language" because it told me it is obsolete

[11:36:00.0000] <Fernandos>
I already use <html xmlns="http://www.w3.org/1999/xhtml" lang="de"> 

[11:37:00.0000] <Philip`>
HTML5 only allows a handful of http-equiv values, plus anything that's on http://wiki.whatwg.org/wiki/PragmaExtensions

[11:37:01.0000] <Philip`>
I don't know whether pics-label satisfies the criteria to be added to that page

[11:37:02.0000] <TabAtkins>
The media=speech issue seems to be a validator bug.  HTML5 references MQ, which says that "speech" should be a recognized value.

[11:38:00.0000] <Philip`>
http://about.validator.nu/#reporting-bugs for validator bugs

[11:38:01.0000] <Fernandos>
TabAtkins: indeed. but the pics-label?

[11:38:02.0000] <Fernandos>
which is the official html5 validator?

[11:38:03.0000] <TabAtkins>
Fernandos: See Philip`'s response.

[11:39:00.0000] <Philip`>
Fernandos: There is no official HTML5 validator

[11:39:01.0000] <Philip`>
The idea is to encourage competition between validators, rather than blessing one as 'official'

[11:39:02.0000] <Philip`>
(though there's only one proper implementation so far)

[11:41:00.0000] <Fernandos>
that is?

[11:43:00.0000] <Philip`>
That implementation is used by validator.nu and validator.w3.org

[11:44:00.0000] <webben>
pics-label might be worth allowing

[11:44:01.0000] <webben>
only a few bits of software support it

[11:44:02.0000] <webben>
but one of them is MS Content Advisor.

[11:44:03.0000] <webben>
i read up about this a while back

[11:45:00.0000] <webben>
and apparently if you turn on Content Advisor and then don't configure it, it blocks webpages without the pics-label

[11:45:01.0000] <webben>
otoh you /can/ also just use the HTTP header so I guess it depends on how convenient one wants it to be.

[11:48:00.0000] <TabAtkins>
Filed a bug on the validator flagging media=speech as invalid.

[11:49:00.0000] <Fernandos>
thx TabAtkins

[12:52:00.0000] <Philip`>
Hmm, a microsoft.com comment on the canvas API

[12:53:00.0000] <Philip`>
Clearly a great opportunity to read too much into the existence of an email

[12:53:01.0000] <Philip`>
(http://lists.w3.org/Archives/Public/public-canvas-api/2009OctDec/0000.html for those not subscribed there)

[12:53:02.0000] <TabAtkins>
Never pass up an opportunity to misinterpret something.

[13:00:00.0000] <zcorpan_>
(?i)<script[^>]*>([^<]|<(?!/script[\s/>]))*<!--([^-]|-(?!->))*<script[\s/>]([^-]|-(?!->))*</script[\s/>]

[13:01:00.0000] <zcorpan_>
script close in escape *with* script open

[13:01:01.0000] <zcorpan_>
Philip`: any chance you could take that regexp for a ride? :)

[13:01:02.0000] <zcorpan_>
/me hopes he got the regexp right

[14:22:00.0000] <zcorpan_>
" I think the HTML5 way of incorporating  

[14:22:01.0000] <zcorpan_>
SVG and MathML is less magic in the sense that there are no spells for  

[14:22:02.0000] <zcorpan_>
the author to cast." -- http://markmail.org/message/uywp4yfc4lvz6erd

[14:22:03.0000] <zcorpan_>
heh

[14:38:00.0000] <zcorpan_>
hsivonen: shouldn't the html5 dom viewer hide the Uhhhhhh syntax from the user?

[14:39:00.0000] <zcorpan_>
hmm maybe not, since it would be hard to figure out why scripts don't work as intended

[14:41:00.0000] <zcorpan_>
"Namespaces in HTML5" wouldn't make any sense, because HTML5 is layered on top of DOM Level 2 which is layered on top of Namespaces in XML which is layered on top of XML

[14:41:01.0000] <zcorpan_>
so Namespaces in HTML5 would have to violate layering and completely change HTML5's parsing rules

[14:41:02.0000] <zcorpan_>
if it's supposed to change namespaceURI of elements parsed from text/html

[14:43:00.0000] <TabAtkins>
It's an exciting new form of Namespaces.

[14:44:00.0000] <zcorpan_>
<com.netscape.blink> form of namespaces could be layered on top of HTML5

[14:44:01.0000] <zcorpan_>
but that wouldn't change parsing or namespaceURI

[14:45:00.0000] <TabAtkins>
I have no idea why poor-man's namespaces is so unacceptable.  It's easy and wonderful and great.

[14:46:00.0000] <TabAtkins>
I mean, I'm unbelievably frightened of a <calendar> element appearing in a Microsoft proposal.  There will be something crazy like Outlook integration involved there.  But <com.microsoft.calendar>?  That seems downright sensible.

[14:49:00.0000] <zcorpan_>
doesn't ie8 also have a restriction that you can't use xmlns on elements whose tag name happens to match a known html tag name (like "table")?

[14:49:01.0000] <Philip`>
"Namespaces in XML" only works because everybody implements a Namespaces in XML processor, and nobody implements a plain XML processor

[14:50:00.0000] <Philip`>
so there's interoperability

[14:50:01.0000] <Philip`>
It'd be a nightmare if half the people implemented Namespaces in XML, and half didn't, and you had to write hacky scripts to parse raw xmlns:* attributes to get consistent application behaviour

[14:50:02.0000] <zcorpan_>
indeed

[14:51:00.0000] <zcorpan_>
the xml core wg should really merge those two specs, and remove the vanilla XML profile

[14:51:01.0000] <zcorpan_>
and the external subset

[14:51:02.0000] <zcorpan_>
and define more default entities

[14:52:00.0000] <Philip`>
I assume it originally made sense because they wanted to push XML to REC before finishing the Namespaces design

[14:52:01.0000] <Philip`>
but the layering seems potentially harmful from a technical perspective

[14:52:02.0000] <Philip`>
and therefore not a good thing to emulate

[14:52:03.0000] <zcorpan_>
and maybe move back to 4th ed productions, because 5th ed breaks with the rest of the toolchain so no-one wants to implement it

[14:54:00.0000] <jgraham>
But apart from that verything is good

[14:55:00.0000] <virtuelv>
the one bit about zcorpan_'s proposal that worries me is "define more default entities"

[14:55:01.0000] <TabAtkins>
I like entities...

[14:55:02.0000] <Philip`>
I like parsers that don't have hundred-kilobyte entity lookup tables

[14:55:03.0000] <jgraham>
/me cannot believe that we are still having the "should we include XML-style namespaces in HTML even though a large fraction of the people that deal with them in XML hate them" discussion

[14:55:04.0000] <zcorpan_>
virtuelv: either that or define magic FPIs like browsers do

[14:56:00.0000] <zcorpan_>
virtuelv: personally i'm fine with either but more default entities would be more author-friendly

[14:56:01.0000] <jgraham>
Philip`: It seems like a small, seldom paid cost

[14:56:02.0000] <zcorpan_>
i still don't understand why we have the mathml entities at all

[14:57:00.0000] <zcorpan_>
Hixie thought it was a simple thing to add them to text/html, so he just went ahead and did so?

[14:57:01.0000] <jgraham>
virtuelv: Shouldn't you be asleep or something?

[14:58:00.0000] <zcorpan_>
why did the mathml wg mint the entities in the first place?

[14:58:01.0000] <jgraham>
(at least I assume you are being woken up all night)

[14:58:02.0000] <jgraham>
zcorpan_: LaTeX

[14:58:03.0000] <Philip`>
zcorpan_: I expect they're necessary for the use-case of copy-and-pasting MathML markup (that currently exists, or is generated by current tools) into HTML

[14:59:00.0000] <zcorpan_>
jgraham: what about it?

[14:59:01.0000] <zcorpan_>
Philip`: i thought the main use case was to enable math input in a blog and have the blog software emit mathml markup

[15:00:00.0000] <jgraham>
zcorpan_: People who expect to author MathML by hand don't want to spend their whole life looking up the unmemorable codepoint for "counter clockwise contour integral"

[15:00:01.0000] <jgraham>
when they have already learnt the latex code for it

[15:00:02.0000] <jgraham>
so instead you make the LaTeX code work in HTML

[15:00:03.0000] <jgraham>
well in MathML

[15:01:00.0000] <zcorpan_>
but you don't write mathml by hand 

[15:01:01.0000] <zcorpan_>
you write latex

[15:01:02.0000] <jgraham>
zcorpan_: I'm not sure that the MathML working group would agree with that position

[15:02:00.0000] <jgraham>
(actually since I have written MathML by hnd, I'm not sure I would agree with that position either. But I can't say the experience is one I will be looking to repeat)

[15:02:01.0000] <zcorpan_>
i've written mathml by hand, too

[15:03:00.0000] <zcorpan_>
i'm not going to do it again, either

[15:03:01.0000] <Philip`>
zcorpan_: Not many people have blog software that supports MathML, and more have e.g. Microsoft Word which can export equations as MathML

[15:03:02.0000] <zcorpan_>
Philip`: does Word emit mathml entities?

[15:04:00.0000] <Philip`>
zcorpan_: If I remember correctly, no

[15:04:01.0000] <zcorpan_>
are there any other commonly-used tools that emit mathml with entities?

[15:05:00.0000] <Philip`>
<mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:m="http://schemas.openxmlformats.org/officeDocument/2006/math"><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">iπ</mml:mi></mml:mrow></mml:msup></mml:math>

[15:05:01.0000] <Philip`>
(You'd just need a find-and-replace on "mml:" before pasting it into HTML)

[15:05:02.0000] <jgraham>
If you believe MathML is never written by hand the entities make no sense. But the theory is clearly that it is written by hand otherwise ideas like &InvisibleTimes; would be nonsensical

[15:06:00.0000] <zcorpan_>
jgraham: indeed

[15:06:01.0000] <zcorpan_>
i think the entities make no sense :)

[15:06:02.0000] <jgraham>
(As, possibly, would the whole of conten MathML but maybe Mathematica or something can produce that)

[15:06:03.0000] <jgraham>
*content

[15:08:00.0000] <jgraham>
/me is quite sad at how many hard-to-hand-author languages have ended up on the web

[15:08:01.0000] <TabAtkins>
I'm happy CSS has stayed as easy as it is.

[15:08:02.0000] <jgraham>
Yeah CSS is more or less OK. Although selectors kinda sucks

[15:09:00.0000] <jgraham>
(for complex selectors)

[15:09:01.0000] <Philip`>
I find writing PNGs by hand to be a bit challenging

[15:09:02.0000] <Philip`>
Should have stuck with PPM

[15:09:03.0000] <TabAtkins>
Yeah, I find complex selectors pretty easy, but I know I'm atypical.

[15:10:00.0000] <jgraham>
Philip`: I think images are a different case. Argualy that excuses SVG too

[15:10:01.0000] <zcorpan_>
Philip`: btw, any chance you could do a dump for (?i)<script[^>]*>([^<]|<(?!/script[\s/>]))*<!--([^-]|-(?!->))*<script[\s/>]([^-]|-(?!->))*</script[\s/>]

[15:11:00.0000] <jgraham>
TabAtkins: The main problem is guessing which arbitarity-chosen symbol will be used for the operation you want

[15:11:01.0000] <Philip`>
zcorpan_: Oops, I forgot you asked already

[15:11:02.0000] <Philip`>
zcorpan_: I could probably try that later this evening (in maybe an hour), if I don't forget aain

[15:11:03.0000] <Philip`>
s//g/

[15:11:04.0000] <zcorpan_>
ok

[15:11:05.0000] <TabAtkins>
jgraham: Ah, yeah, that's a very valid criticism.

[15:12:00.0000] <zcorpan_>
has anyone checked what the compat situation is with the new entities, btw?

[15:13:00.0000] <TabAtkins>
/me wishes IE would treat alt-text properly rather than calling it out as extra-special-missing-image-right-here.

[15:14:00.0000] <zcorpan_>
do pages use e.g. &wp; and expect it to be "&wp;" and not ℘

[15:23:00.0000] <virtuelv>
jgraham: me, not so much. baby's being fed right now

[15:23:01.0000] <virtuelv>
zcorpan_: my problem with defining additional entities is that we don't know what kind of off-web breakage it will cause

[15:24:00.0000] <virtuelv>
and by "don't know", I mean we lack data, and means to collect them

[15:25:00.0000] <virtuelv>
I would like to think that authors haven't been braindead enough to use the HTML 4.01 defined entities for something else in their own formats

[15:25:01.0000] <virtuelv>
but I certainly wouldn't discount it

[15:28:00.0000] <virtuelv>
either way, now is bedtime

[15:33:00.0000] <zcorpan_>
virtuelv: yes, good point

[15:40:00.0000] <TabAtkins>
Ah.  Interesting.  Julian's gone for the "insane" option.

[16:21:00.0000] <zcorpan_>
Philip`: an hour has past :)

[16:26:00.0000] <gsnedders>
/me waits for "two hours have past"

[16:29:00.0000] <zcorpan_>
i guess the exit criteria for web idl should be two independent specs that use web idl and themselves have passed their exit criteria

[16:36:00.0000] <Hixie>
zcorpan_: for each feature

[16:37:00.0000] <zcorpan_>
Hixie: uh yeah

[16:38:00.0000] <zcorpan_>
i guess that might be too high a bar, given that it's unlikely that there'll be two specs for each feature

[16:38:01.0000] <zcorpan_>
maybe one spec for each feature


2009-10-02
[17:09:00.0000] <Philip`>
zcorpan_: What is the regexp intending to look for?

[17:09:01.0000] <Philip`>
Something like <script>...<!-- <script></script> ?

[17:10:00.0000] <zcorpan_>
Philip`: yes

[17:14:00.0000] <Dashiva>
Ho-hum

[17:14:01.0000] <Dashiva>
So how do the RDFa guys feel about the (implicit) claim that RDFa fails to deliver distributed extensibility?

[17:16:00.0000] <Philip`>
Has anyone defined what distributed extensibility is?

[17:16:01.0000] <Philip`>
so that we could evaluate whether a proposal provides it

[17:16:02.0000] <Philip`>
(and could work out why the features currently in HTML5 are insufficient)

[17:17:00.0000] <zcorpan_>
namespaces can haz it

[17:17:01.0000] <Dashiva>
Distributed extensibility means you can do stupid things and nobody gets to tell you no

[17:18:00.0000] <Dashiva>
And it still validates

[17:18:01.0000] <Hixie>
Philip`: last time i tried asking that question i got blasted for being obstructionist

[17:19:00.0000] <Hixie>
(i really don't know the answer, though, and would love to find out)

[17:19:01.0000] <Hixie>
(for exactly the reason you give)

[17:19:02.0000] <Philip`>
Dashiva: That seems to miss the apparent fact that it's not distributed extensibility unless it uses colons

[17:20:00.0000] <zcorpan_>
oh yes

[17:20:01.0000] <Hixie>
i thought rdfa used colons

[17:20:02.0000] <zcorpan_>
it's not namespaces that haz extensibility

[17:20:03.0000] <zcorpan_>
it's the colon

[17:21:00.0000] <hober>
"distributed" refers to the space between the two dots in :

[17:21:01.0000] <Dashiva>
No, it's the fact that the color distributes the tagName into the prefix and localname

[17:22:00.0000] <othermaciej>
I think it would be worth stating reasons why it may be a bad idea, both in general and specifically Microsoft's proposal

[17:22:01.0000] <othermaciej>
(or good idea, if you like it)

[17:22:02.0000] <Dashiva>
othermaciej: I haven't seen any rebuttals to sicking's list yet

[17:24:00.0000] <Dashiva>
http://lists.w3.org/Archives/Public/public-html/2009Sep/1218.html

[17:24:01.0000] <Dashiva>
"The risk of that could be mitigated by having a central registry that's, for instance, a wiki page."

[17:24:02.0000] <Dashiva>
Not very distributed then, is it?

[17:25:00.0000] <othermaciej>
I don't think anyone has asked what namespaces-in-html add that RDFa (plus other existing extension mechanisms) doesn't, perhaps that is a question worth asking

[17:25:01.0000] <zcorpan_>
we could have a distributed registry

[17:25:02.0000] <Philip`>
The registry could be put on Wave

[17:25:03.0000] <Dashiva>
Maybe I'll send a mail for once

[17:26:00.0000] <Dashiva>
It's such a pain to do replies when you're not on the list

[17:26:01.0000] <Philip`>
Dashiva: The Reply links in the archive work alright for me, as long as I fix their double-escaping of angle brackets

[17:26:02.0000] <Dashiva>
Philip`: Yeah, but then I have to make a quote

[17:27:00.0000] <Philip`>
Dashiva: Ctrl+C, Alt+Tab, Ctrl+Shift+V?

[17:27:01.0000] <Dashiva>
What's that last one?

[17:27:02.0000] <Philip`>
or Ctrl+Alt+V or whatever it is

[17:27:03.0000] <Philip`>
It's "paste as quote" in Thunderbird

[17:30:00.0000] <Dashiva>
Oh, I see

[17:30:01.0000] <Dashiva>
That could simplify things

[17:30:02.0000] <Dashiva>
But it will still take a day or two before my message arrives, I guess

[17:32:00.0000] <Philip`>
s/day/minute/

[17:32:01.0000] <Dashiva>
At least the archives page is smart enough to realize I want to reply to the list

[17:32:02.0000] <Philip`>
(It's already arrived)

[17:32:03.0000] <Dashiva>
I thought they got stuck in a queue for checking?

[17:33:00.0000] <Philip`>
Only the first email from each address

[17:33:01.0000] <Philip`>
After that it's instant

[17:33:02.0000] <Dashiva>
I see

[17:36:00.0000] <Philip`>
References: %3C7c2a12e20909301619u21339617g447565bc2a3ffbb1⊙mgc%3E

[17:36:01.0000] <Philip`>
You didn't fix the double-escaping :-(

[17:36:02.0000] <Philip`>
(i.e. replace the archive mailto link's %253C with %3C etc)

[17:37:00.0000] <Dashiva>
Well, how can I do that once the message is inside thunderbird?

[17:37:01.0000] <Philip`>
You can't, as far as I'm aware

[17:37:02.0000] <Philip`>
So do it before it's in Thunderbird :-)

[17:38:00.0000] <Philip`>
(by editing the mailto URL)

[17:38:01.0000] <Philip`>
Or I suppose you could work out how to report the bug in the archive system to

[17:38:02.0000] <Philip`>
s/how/who/

[17:38:03.0000] <Dashiva>
I've already done that, I delegate to you

[17:38:04.0000] <Philip`>
I've already failed to work out who to tell for about two years

[17:39:00.0000] <Philip`>
Maybe someone who's reading the IRC logs can report/fix it

[17:40:00.0000] <Dashiva>
Use the Plotkin algorithm for recursion

[17:40:01.0000] <Dashiva>
Find someone who is closer to the problem than you, and ask them

[17:40:02.0000] <Dashiva>
karl and mike should do

[17:41:00.0000] <Dashiva>
Or even othermaciej ;)

[17:43:00.0000] <othermaciej>
Dashiva: ask me what?

[17:43:01.0000] <Philip`>
Dashiva: That assumes "closer" is a partial order

[17:43:02.0000] <Philip`>
which is unlikely to be true when it's based on people's subjective views of closeness

[17:43:03.0000] <Philip`>
so you might end up with k < m < o < k and the algorithm will never terminate

[17:44:00.0000] <Philip`>
and I'd hate for WG members to be eternally tied up by infinite loops

[17:45:00.0000] <Dashiva>
Philip`: That's their problem, not yours

[17:45:01.0000] <Dashiva>
Besides, that assumes they use the algorithm as well

[17:45:02.0000] <Dashiva>
This is unlikely, when you're close to the problem you probably have a more effective alternative

[17:46:00.0000] <Philip`>
More effective than being lazy and telling someone else to do it? That seems unlikely

[17:47:00.0000] <Philip`>
Oh, I forgot about zcorpan

[17:48:00.0000] <Philip`>
/me goes back to check his grep...

[17:48:01.0000] <Dashiva>
You have to judge the efficiency including the benefit of avoiding loops

[17:48:02.0000] <Philip`>
Hmm, actually I should go to sleep instead

[17:49:00.0000] <Philip`>
zcorpan: Remind me to upload the results tomorrow

[17:49:01.0000] <Philip`>
(by which I mean later today, for most definitions of today)

[17:49:02.0000] <Philip`>
assuming you even read this

[17:50:00.0000] <Philip`>
Dashiva: I suppose we could always add a TTL to the recursion, so it won't go on forever

[17:51:00.0000] <Dashiva>
No, that won't work

[17:51:01.0000] <Dashiva>
The problem will still exist and the loop will begin anew

[18:09:00.0000] <karlcow>
/me is reading the back log of Dashiva and Philip` and he's trying to figure out how I could possibly solve something :p

[18:09:01.0000] <Dashiva>
You can't solve it, but you can pass it on to someone closer to the solution

[18:12:00.0000] <karlcow>
Dashiva: pass what ? :)

[18:12:01.0000] <karlcow>
Right now I might have fruits around me if it's what you need

[18:12:02.0000] <Dashiva>
[01:44:35] <Philip`> References: %3C7c2a12e20909301619u21339617g447565bc2a3ffbb1⊙mgc%3E

[18:12:03.0000] <Dashiva>
[01:44:47] <Philip`> You didn't fix the double-escaping :-(

[18:14:00.0000] <karlcow>
Do you mean there are issues with w3c mailing lists? I guess I could send an email to the sysadmin but anyone could do. I'm as distant as you or Philip from the sysadmins. :)

[18:15:00.0000] <Dashiva>
I didn't even know they had email, so see, you're closer :)

[18:15:01.0000] <Dashiva>
The issue is when you click the reply link in the archives

[18:15:02.0000] <karlcow>
Let me try to find a Web page

[18:16:00.0000] <karlcow>
found. Good memory. http://www.w3.org/Mail/

[18:44:00.0000] <Dashiva>
"XML documents cannot have syntax errors" makes me think about true scotsmen

[19:36:00.0000] <MikeSmith>
it'd be nice if the CSS WG allowed people to use bugzilla to report bugs 

[19:36:01.0000] <MikeSmith>
I really don't want to have to post to www-style

[20:51:00.0000] <Hixie>
how do people feel about loops with <itemref>?

[20:52:00.0000] <Hixie>
<div itemscope><span id=a><itemref refid=a> <span itemprop=x>y</span></span></div>

[20:52:01.0000] <Hixie>
<div id=a> <span itemprop=x>y</span> <div itemscope> <itemref refid=a> </div> </div>

[20:53:00.0000] <Dashiva>
It's hard to understand loop examples with only a single instance

[20:54:00.0000] <Hixie>
<div id=a> <span itemprop=x>y</span> <itemref refid=b> </div>  <div itemscope> <div id=b> <span itemprop=q>r</span> <itemref refid=a> </div> </div>

[20:56:00.0000] <Dashiva>
Referencing inside->outside of main scope seems weird to me

[20:56:01.0000] <Hixie>
that's the main use case

[20:56:02.0000] <Hixie>
in fact referencing within the same scope is likely always a mistake

[20:56:03.0000] <Dashiva>
I thought that was outside->inside

[20:57:00.0000] <Dashiva>
I'm not 100% up to speed on microdata

[20:57:01.0000] <Hixie>
that was itemfor=""

[20:57:02.0000] <Hixie>
<itemref> is itemfor="" backwards

[20:57:03.0000] <Dashiva>
Then I reverse my statement

[20:58:00.0000] <Dashiva>
I can't think of a reason why you'd want bidirectional links

[20:58:01.0000] <Hixie>
i guess i'll make it just so that to validate itemref you have to construct the chain, and if at any point you get to an element you've already processed, it's an error

[20:58:02.0000] <Dashiva>
Should itemref be allowed outside itemscope at all?

[20:58:03.0000] <Hixie>
and for microdata parsers you stop looping at that point

[20:59:00.0000] <Hixie>
well it doesn't make sense to only allow two-step chains if you put the second step inside an otherwise bogus itemscope=""

[20:59:01.0000] <Dashiva>
True

[20:59:02.0000] <Dashiva>
But only trees, not graphs with cycles

[21:00:00.0000] <Dashiva>
Or is the intent to allow several items to reference the same external item?

[21:00:01.0000] <Hixie>
yes

[21:00:02.0000] <Hixie>
on a related note, i wonder if i should make it invalid for an itemprop="" to be part of more than one type of itemscope

[21:00:03.0000] <jcranmer>
Dashiva: what about DAGs, which are neither trees nor cyclic?

[21:00:04.0000] <Dashiva>
It seems like a DAG is the right term here

[21:01:00.0000] <Hixie>
e.g. <div itemscope itemtype=a><itemref refid="x"></div><div itemscope itemtype=b><itemref refid="y"> <span itemprop=c id=x>...</span>

[21:01:01.0000] <Hixie>
since what that property means will be different for the two items

[21:01:02.0000] <Hixie>
which is kinda weird

[21:01:03.0000] <Hixie>
eh, i guess i'll leave it

[21:02:00.0000] <Dashiva>
I could see that being used as a translator

[21:02:01.0000] <Dashiva>
But the chances of multiple vocabularies having identical props with same meaning seems low

[21:02:02.0000] <Dashiva>
Unless it's like a version upgrade...

[21:03:00.0000] <Hixie>
it seems pretty clear that if it happens intentionally, it'll be for a hack

[21:04:00.0000] <Dashiva>
Mhm... even if you'd be able to share some props, you'd still need to handle the rest, so there's no real gain

[21:08:00.0000] <Dashiva>
Is an item using itemfor a top-level item?

[21:09:00.0000] <Hixie>
itemfor is gone now

[21:09:01.0000] <Hixie>
see damowmow.com/playground/microdata/NOTES

[21:09:02.0000] <TabAtkins>
I'm okay with cycles causing an error and stopping the parser.

[21:09:03.0000] <Hixie>
i think i'll just make cycles cause the parser to skip nodes it's already seen

[21:12:00.0000] <Dashiva>
So itemprop=itemid gives the prefix?

[21:12:01.0000] <Hixie>
prefix?

[21:13:00.0000] <Dashiva>
The com.damowmow part

[21:23:00.0000] <Hixie>
Dashiva: i don't follow

[21:24:00.0000] <Dashiva>
I'm not sure what is itemtype and what is itemprop=itemid

[21:41:00.0000] <Hixie>
itemprop=itemid is going away, actually, in favour of just itemid=""

[21:41:01.0000] <Hixie>
itemtype="" gives the type of the item

[21:41:02.0000] <Hixie>
see the 004/introduction file

[21:42:00.0000] <Hixie>
itemid="" gives the URI that in RDF identifies the subject

[21:44:00.0000] <Dashiva>
Oh, okay

[21:50:00.0000] <othermaciej>
what does itemref do?

[21:50:01.0000] <Dashiva>
Links an external item as part of this item

[21:51:00.0000] <othermaciej>
so it lets you make a non-tree graph I presume

[21:51:01.0000] <Dashiva>
It's a DAG, as I understand it

[21:51:02.0000] <Dashiva>
No cycles allowed

[21:53:00.0000] <othermaciej>
unless <itemref> loops are allowed as Hixie suggested ~ 1 hour ago

[21:53:01.0000] <othermaciej>
(I assume)

[21:55:00.0000] <Dashiva>
Yeah

[21:56:00.0000] <othermaciej>
if there's such a thing as <itemref> at all you may as well allow cycles - IMO

[21:57:00.0000] <Hixie>
cycles through another item are fine

[21:57:01.0000] <Hixie>
cycles within the same item make no sense

[21:57:02.0000] <Hixie>
like, a.b = a is fine

[21:58:00.0000] <Dashiva>
Hmm, then it's not a dag anymore

[21:58:01.0000] <Hixie>
but itemref pointing to the itemref's own parent makes no sense

[21:58:02.0000] <othermaciej>
I can't think of a meaningful use case for self-reference

[21:58:03.0000] <othermaciej>
at least offhand

[21:59:00.0000] <othermaciej>
maybe in a family tree for a fictional universe allowing time travel

[21:59:01.0000] <othermaciej>
where someone may be their own parent

[22:00:00.0000] <Hixie>
the cycles i were talking about were syntactic, not model cycles

[22:00:01.0000] <Hixie>
they were the equivalent of #including a file in itself

[22:00:02.0000] <othermaciej>
do syntactic cycles not create a model cycle?

[22:00:03.0000] <Hixie>
not necessarily

[22:00:04.0000] <othermaciej>
I guess I don't understand <itemref>

[22:00:05.0000] <Hixie>
<div itemscope> <div id=a> <itemref refid=a> </div> </div>

[22:00:06.0000] <Hixie>
creates a syntactic loop

[22:01:00.0000] <Hixie>
but within the loop there are no properties at all

[22:01:01.0000] <Hixie>
so it's not a model loop at all

[22:01:02.0000] <othermaciej>
I see, property a references itself

[22:01:03.0000] <othermaciej>
as opposed to two different itemscopes having properties referencing each other - that would be a model cycle

[22:02:00.0000] <othermaciej>
but what if the itemscope div was the one referenced by the itemref?

[22:02:01.0000] <othermaciej>
that would be a property with a reference to the object that has the property, i.e. a model cycle?

[22:04:00.0000] <Hixie>
there is no property at all in that example

[22:05:00.0000] <Hixie>
the normal use case for this is as follows:

[22:06:00.0000] <Hixie>
<div itemscope> (some properties) <itemref refid=more> </div>  ...later... <div id=more> (some more properties) </div>

[22:06:01.0000] <Hixie>
and basically the <div> with id=more gets #included where the <itemref> is

[22:27:00.0000] <othermaciej>
I see

[22:27:01.0000] <othermaciej>
so <itemref> includes properties by reference, it doesn't make a property value reference another object?

[22:28:00.0000] <othermaciej>
that doesn't align with what I would expect a "reference" to be, but then, I am a programmer

[22:28:01.0000] <Hixie>
i'm open other names

[22:28:02.0000] <Hixie>
i'd like it to start with <item...>

[22:30:00.0000] <othermaciej>
well <iteminclude> would be one literal-minded suggestion

[22:30:01.0000] <othermaciej>
or <includeitems> or <shareitems> or something

[22:30:02.0000] <othermaciej>
/me shrugs

[22:30:03.0000] <Dashiva>
itemcontains

[22:30:04.0000] <othermaciej>
I have to go to the drug store, will think about it on the way

[22:31:00.0000] <othermaciej>
oh yeah I guess includeitems is the wrong semantic, the div is the item, what's included is item rroperties

[22:32:00.0000] <Hixie>
<itemref> has the advantage that we know at least one person understands it

[22:35:00.0000] <erlehmann>
your metadata models sicken me

[22:35:01.0000] <erlehmann>
Hixie, all tests done ?

[22:36:00.0000] <Hixie>
yeah

[22:36:01.0000] <erlehmann>
so, what were the results ?

[22:37:00.0000] <Hixie>
004 fared well

[22:37:01.0000] <Hixie>
i'm writing it up in the spec as the proposal

[22:38:00.0000] <erlehmann>
\o/

[22:38:01.0000] <erlehmann>
/me wont touch any spec parts with a 3 m pole as long as it isnt frozen.

[22:39:00.0000] <Hixie>
define frozen :-)

[23:20:00.0000] <Hixie>
/me gets a headache from trying to explain the conformance criteria for authors for microdata

[23:20:01.0000] <Hixie>
since properties can be properties of multiple items, it's kinda screwy

[23:22:00.0000] <MikeSmith>
Hixie: maybe for the sake of truth in advertising, it should be named "somewhat-less-complicated-data"

[23:22:01.0000] <Hixie>
i don't think anyone's ever claimed that microdata is simple :-)

[23:27:00.0000] <othermaciej>
it's not called simpledata

[23:27:01.0000] <othermaciej>
Hixie: what made you conclude that an include mechanism is needed? do people need shared templates of stock properties?

[23:29:00.0000] <MikeSmith>
Hixie: btw, one a completely different topic, I seem to remember a while back there being some discussion of moving the Timers stuff out into a separate draft. Do we still want to do that or not?

[23:41:00.0000] <Hixie>
othermaciej: the yahoo searchmonkey team were the main proponents of such a mechanism, iirc

[23:42:00.0000] <Hixie>
MikeSmith: i gave up waiting for an editor to do it

[23:42:01.0000] <othermaciej>
MikeSmith: that seems like one that is good in theory but not a blocker if it doesn't happen - I don't think anyone is complaining

[23:45:00.0000] <MikeSmith>
othermaciej, Hixie : Ok, understood

[23:49:00.0000] <MikeSmith>
on another topic, I hope the CSS WG can be encouraged to provide W3C bugzilla as an option for spec comments and bug reports, at least for editorial stuff, because I really don't think requiring people who have editorial suggestions to post them to www-style is so great

[23:49:01.0000] <MikeSmith>
I have some very minor suggestions about the text of the Media Queries abstract and intro

[23:51:00.0000] <othermaciej>
I have mixed feelings about the bugzilla system - on the one hand, it's good for tracking, and keeps some noise off the list, on the other hand, sometimes it buries interesting discussion

[23:51:01.0000] <othermaciej>
overall a good thing compared to just email comments though, I think

[00:07:00.0000] <MikeSmith>
othermaciej: yeah, it's definitely a tradeoff. But when mailing list traffic gets excessive, interesting discussion effectively ends up getting buried anyway, because people have said there's no way they can keep up with it and so they just delete who threads (or mark them read), including ones that have some interest in by just not time to read through

[00:07:01.0000] <MikeSmith>
I think chaals said something along those lines recently

[00:08:00.0000] <MikeSmith>
but others have said as much in the past too

[00:08:01.0000] <MikeSmith>
s/delete who threads/delete whole threads/

[00:09:00.0000] <othermaciej>
yeah in the case of public-html, moving some threads off the list is on the whole a good thing

[00:10:00.0000] <MikeSmith>
ultimately, having some may of modding list messages would be really useful

[00:10:01.0000] <MikeSmith>
I wonder if Google Wave has some way to do that

[00:15:00.0000] <MikeSmith>
annevk42: I have some minor comments on the Media Queries editor's draft. Would be nice to have the option to submit them as W3C bugzilla bugs. Hope that CSS WG can provide that as an option eventually. In the mean time, can I just e-mail them to you?

[00:16:00.0000] <annevk42>
yeah

[00:16:01.0000] <MikeSmith>
OK

[00:16:02.0000] <annevk42>
you could suggest it to the CSS WG

[00:16:03.0000] <annevk42>
would be sort of nice I gues to log issues there

[00:18:00.0000] <MikeSmith>
hmm, does the group have a list for administrative things? (instead of www-style)

[00:19:00.0000] <annevk42>
we do have a tracker instance

[00:21:00.0000] <MikeSmith>
annevk42: think it'd be OK for me to raise an issue there?

[00:23:00.0000] <annevk42>
I rather have email

[00:23:01.0000] <annevk42>
but yeah, if you have access that's fine I suppose

[00:24:00.0000] <MikeSmith>
annevk42: I'll send the mail, but I was thinking more of opening an issue to suggest the group provide bugzilla reporting as an option

[00:24:01.0000] <annevk42>
ah ok

[00:34:00.0000] <annevk42>
/me thinks it would make sense if Timers went into the timer draft submitted by Google

[00:36:00.0000] <othermaciej>
Google's timer draft isn't about that kind of timer at all

[00:37:00.0000] <othermaciej>
(afaict)

[00:37:01.0000] <othermaciej>
I had a high-res timer proposal a while back that might combine well with classic timers

[00:39:00.0000] <annevk42>
true, it's a bit different

[00:40:00.0000] <annevk42>
damn it, i like having the entities

[01:22:00.0000] <hsivonen>
anyone going to the HyBi BoF?

[01:24:00.0000] <othermaciej>
where is it going to be?

[01:24:01.0000] <othermaciej>
in the IETF in Japan?

[01:25:00.0000] <zcorpan_>
Philip`: http://krijnhoetmer.nl/irc-logs/whatwg/20091002#l-157

[01:26:00.0000] <othermaciej>
so do any of you Opera folks have the data on Opera's experience with trying namespaces in HTML?

[01:27:00.0000] <othermaciej>
that would be a useful addition to the distributed extensibility thread

[01:31:00.0000] <zcorpan_>
iirc, we removed it completely because it broke sites. but i think we allowed it on elements with known tag names, which was the main reason for breakage

[01:38:00.0000] <Philip`>
zcorpan_: http://philip.html5.org/data/script-open-in-escape.txt

[01:39:00.0000] <zcorpan_>
Philip`: thanks

[01:57:00.0000] <annevk2>
hsivonen, do you think it's worth visiting the hybi thingie?

[01:58:00.0000] <hsivonen>
annevk2: I don't know. Probably not. Certainly not for me personally.

[02:02:00.0000] <annevk2>
/me would like the MathML entities to stay

[02:08:00.0000] <hsivonen>
Philip`: btw, if element and attribute namespacing were added to the HTML parsing algorithm, those should depend on namespace mapping context held on the tree builder stack

[02:08:01.0000] <hsivonen>
Philip`: so xmlns:foo on a <table> would affect the element and attribute namespaces of foster-parented descendants but wouldn't affect CURIEs in foster-parented descendants

[02:09:00.0000] <annevk2>
I kind of liked the earlier <org.example.table> proposal though I'm not convinced any of this is needed

[02:11:00.0000] <hsivonen>
annevk2: it would suck with Selectors, though

[02:11:01.0000] <hsivonen>
annevk2: since you'd have to escape the dot

[02:12:00.0000] <hsivonen>
annevk2: sicking's idea wouldn't suck with Selectors

[02:12:01.0000] <Hixie>
has anyone explained what the problem all this is solving is yet?

[02:12:02.0000] <hsivonen>
Hixie: of course not

[02:12:03.0000] <Hixie>
then how are you all evaluating how good the proposals are

[02:13:00.0000] <annevk2>
taste?

[02:13:01.0000] <Philip`>
hsivonen: Hmm, I suppose that's only sane way to do it, otherwise <html><foo:bar><foo:bar>...<html xmlns:foo> would be a pain

[02:13:02.0000] <annevk2>
well, and some experience with complexity of namespaces

[02:13:03.0000] <Philip`>
Hixie: We're not evaluating how good the proposals are, only how bad they are

[02:13:04.0000] <hsivonen>
Hixie: I'm not evaluation the goodness. I'm evaluating the badness that can be seen regardless of purpose.

[02:13:05.0000] <Hixie>
fair enough

[02:14:00.0000] <Hixie>
that doesn't seem all that useful though

[02:14:01.0000] <hsivonen>
s/evaluation/evaluating/

[02:14:02.0000] <Hixie>
i mean it's like looking at cars and saying "well that one's wheels are flat, so it's no good" without knowing that the problem is painting someone's living room

[02:15:00.0000] <hsivonen>
Hixie: note that my first email to the thread was almost entirely questions

[02:15:01.0000] <Hixie>
yeah

[02:15:02.0000] <hsivonen>
Hixie: and my latest is explaining one of the questions

[02:16:00.0000] <Philip`>
Hixie: It's like someone proposes "let's all use this car", and you say "that one uses babies as fuel instead of petrol", and so you can easily discard the proposed solution, without having to go through the long complex process of working out what the problem was

[02:17:00.0000] <Hixie>
Philip`: maybe the problem is that the babies are all turning evil and the car combustion engine is actually somehow an evil purifier

[02:17:01.0000] <Hixie>
ok that response got away from me somehow

[02:19:00.0000] <Philip`>
Even if it could be safely used for purifying evil babies, if you unleash it on the world nobody's going to understand the details or the implications and they'll just stick any common or garden baby in there as long as it makes the engine go round

[02:20:00.0000] <Hixie>
well, i can't argue with the line of reasoning that namespaces kills babies, certainly

[02:26:00.0000] <hsivonen>
/me wonders what should happen if a script removes the defer attribute or the src attribute of a defer script before EOF is parsed

[02:26:01.0000] <hsivonen>
/me opens the spec

[02:26:02.0000] <Philip`>
(Also the fuel tank looks like a baby seat in the back of the car, so people who upgrade to this new model of car will be surprised when the function of the apparent seat turns out to be incompatible with the old behaviour)

[02:26:03.0000] <hsivonen>
analogy carried too far?

[02:26:04.0000] <Philip`>
Analogies can never be carried too far

[02:39:00.0000] <hsivonen>
Hixie: is it intentional that inline scripts with async are async?

[02:39:01.0000] <hsivonen>
Hixie: why isn't async only for external scripts?

[02:39:02.0000] <Hixie>
is this a trick question...?

[02:40:00.0000] <hsivonen>
Hixie: not a trick question

[02:40:01.0000] <Hixie>
then i dunno, i guess it just made sense to me

[02:40:02.0000] <Hixie>
why would it not apply?

[02:40:03.0000] <hsivonen>
If an inline script has async set, are there any differences compared to inline scripts without async?

[02:40:04.0000] <hsivonen>
does document.write() work?

[02:41:00.0000] <Hixie>
Atom makes a bunch of stuff required that i don't know how to fake

[02:41:01.0000] <Hixie>
like "author"

[02:41:02.0000] <Hixie>
hsivonen: document.write() does not work

[02:41:03.0000] <Hixie>
hsivonen: as far as i recall

[02:41:04.0000] <Hixie>
hsivonen: i honestly don't think i gave much thought to inline <script>s with async

[02:41:05.0000] <hsivonen>
Hixie: are you sure that's a good idea?

[02:41:06.0000] <Hixie>
i don't know why anyone would do that

[02:42:00.0000] <Hixie>
then again they do it with defer, i guess

[02:42:01.0000] <hsivonen>
right

[02:42:02.0000] <Hixie>
if you want it changed, it's an easy fix, file a bug

[02:42:03.0000] <hsivonen>
ok

[02:42:04.0000] <Hixie>
/me wonders what to do about the conversion to atom now that he's removing the predefined vocabs, given that it relied on vcard

[02:43:00.0000] <hsivonen>
Hixie: remove conversion to atom?

[02:43:01.0000] <Hixie>
that rather fails to address the use case of replacing atom with html to reduce repetition

[02:48:00.0000] <hsivonen>
hey! async on inline script is the promise not to do document.write! it would allow an optimization in speculative parsing

[02:49:00.0000] <hsivonen>
still dangerously backwards-incompatible, though :-(

[02:50:00.0000] <hsivonen>
and people who do serious scripting on user-facing sites tend to use external scripts anyway

[03:18:00.0000] <hsivonen>
/me wonders if the sentence "Changing the src, type, charset, async, and defer  attributes dynamically has no direct effect; these attribute are only used at specific times described below (namely, when the element is inserted into the document)." is correct

[03:19:00.0000] <hsivonen>
Gecko considers those at the time the end tag is parsed

[03:19:01.0000] <hsivonen>
not when the element is inserted

[03:20:00.0000] <hsivonen>
hmm. maybe I'm wrong

[03:21:00.0000] <annevk2>
is there an observable difference?

[03:22:00.0000] <jgraham>
With innerHTML maybe?

[03:23:00.0000] <zcorpan_>
hsivonen: doesn't the parser run the script when the end tag is parsed per html5?

[03:23:01.0000] <hsivonen>
zcorpan_: yes

[03:24:00.0000] <hsivonen>
annevk2: yes, if the parser inserts the element, spins the event loop, timeout runs and the parser continues and parses the end tag

[03:24:01.0000] <hsivonen>
zcorpan_: yes

[03:26:00.0000] <annevk2>
ooh right

[03:26:01.0000] <annevk2>
tricky

[04:05:00.0000] <annevk2>
/me finds out that because of "The HTTP Origin header" draft CORS does not need to depend on HTML5 anymore

[04:15:00.0000] <MikeSmith>
annevk2: so we should take the Origin spec and CORS to PR together in WebApps

[04:25:00.0000] <hsivonen>
MikeSmith: can WebApps take the Origin spec to PR if the IETF has the spec?

[04:26:00.0000] <MikeSmith>
hsivonen: IETF and HTTP WG in particular said they were not interested in publishing the spec

[04:26:01.0000] <hsivonen>
ooh

[04:26:02.0000] <hsivonen>
/me has trouble keeping up with Origin politics

[04:36:00.0000] <beowulf>
part

[04:36:01.0000] <beowulf>
heh

[04:51:00.0000] <annevk2>
MikeSmith, Adam is still pushing it at IETF it seems

[04:51:01.0000] <annevk2>
MikeSmith, if they don't do it we should, yes, that makes sense

[04:53:00.0000] <MikeSmith>
annevk2: I can't imagine them changing their minds. the message was pretty much an unequivocal No the first time

[04:54:00.0000] <MikeSmith>
/me remembers there's an IETF/W3C coordination call some time soon and figures he should probably add this to the agenda

[04:54:01.0000] <hsivonen>
I hope the IANA still agrees to register Origin

[04:54:02.0000] <hsivonen>
oops.

[04:54:03.0000] <hsivonen>
it's already registered for CORS, right?

[04:55:00.0000] <annevk2>
yes

[04:56:00.0000] <annevk2>
MikeSmith, if that's the case maybe you should contact adam and ask him to reformat it so we can have FPWD?

[04:57:00.0000] <annevk2>
the concept it defines fits better at the W3C as well I think

[04:57:01.0000] <MikeSmith>
annevk2: yeah, I saw your e-mail comment about that

[04:58:00.0000] <hsivonen>
did proxy vendors ever comment on Origin?

[04:59:00.0000] <MikeSmith>
annevk2: dunno if there's ever been a spec "foo Concept".. maybe Origin Mechanism?

[05:00:00.0000] <MikeSmith>
annevk2: before Adam goes the trouble of reformatting, I will try to get some more info, by the end of next week, I think

[05:00:01.0000] <MikeSmith>
I think the Strict Transport Security spec fits better at the W3C as well

[05:01:00.0000] <annevk2>
yeah

[05:02:00.0000] <annevk2>
most things fit better at the W3C if alone for their non-ancient publishing format (though if it's just about publishing format I guess WHATWG wins :p )

[05:04:00.0000] <hsivonen>
specs with scripts FTW!

[05:13:00.0000] <MikeSmith>
W3C specs can have scripts. there's nothing in pubrules or anything else I've looked at that says they're prohibited

[05:14:00.0000] <MikeSmith>
hsivonen: I don't remember anybody in the previous discussion explicitly stating that they were are a proxy vendor

[05:21:00.0000] <hsivonen>
MikeSmith: ok. is it just a matter of no one porting the crossref script to the W3C spec?

[05:22:00.0000] <hsivonen>
MikeSmith: not having explicit negative feedback from (people identifying selves as) proxy vendors is encouraging

[05:22:01.0000] <MikeSmith>
hsivonen: yeah

[05:22:02.0000] <MikeSmith>
about crossref script, yeah, pretty much

[05:23:00.0000] <MikeSmith>
I'm already using it on my markup draft though

[05:23:01.0000] <MikeSmith>
the single-page version of that

[05:23:02.0000] <MikeSmith>
http://dev.w3.org/html5/markup/spec.html

[05:24:00.0000] <MikeSmith>
e.g., if you to to http://dev.w3.org/html5/markup/spec.html#common.data.uri-mdl and click on the "uri" in orangered

[05:24:01.0000] <annevk2>
I wonder why that script does not work in Opera

[05:25:00.0000] <MikeSmith>
/me is due to lose battery power in 8 minutes

[05:25:01.0000] <annevk2>
oh, now it does

[05:25:02.0000] <annevk2>
hmm

[05:26:00.0000] <ato>
Was <dialog> taken out of the specification?

[05:26:01.0000] <annevk2>
yes

[05:26:02.0000] <ato>
I've been searching the archives, but what was the reasoning behind that?

[05:26:03.0000] <MikeSmith>
I plan to add a generated index from <dfn>s as an alternative to the xref script, for the multipage version

[05:27:00.0000] <annevk2>
ato, didn't address the use cases well enough and was only for a relatively minor use cases

[05:27:01.0000] <annevk2>
-s

[05:28:00.0000] <ato>
annevk2: Ok, thanks!

[05:49:00.0000] <annevk2>
hmm, referencing httpbis is a pain

[05:49:01.0000] <annevk2>
http is now all over the place :/

[08:33:00.0000] <Omnipotent>
On this page: http://yankele.co.il/test/canvas.html why when I increase the "red" the red actually decreases, ?

[08:34:00.0000] <Omnipotent>
Anyone here? :P.

[08:35:00.0000] <Philip`>
Yes :-)

[08:36:00.0000] <jgraham>
No

[08:36:01.0000] <Philip`>
If you set e.g. red=0.99, what the arc() call is doing is taking the point at 'offset' on the second, and then the point that's 0.99 of the way around the circle in a clockwise direction

[08:37:00.0000] <Philip`>
and then you're drawing the arc between those two points in an *anti*-clockwise direction

[08:37:01.0000] <Philip`>
so it only fill 0.01 of the circle

[08:38:00.0000] <Omnipotent>
So basically it switches the start and end points?

[08:38:01.0000] <Philip`>
What you probably want is for the second point to be 0.99 around anticlockwise instead, so you'd have to use offset-Math.PI*2*red instead of Math.PI*2*red+offset

[08:39:00.0000] <Philip`>
(Uh, "'offset' on the second"? I think I meant "'offset' on the circle")

[08:39:01.0000] <Omnipotent>
Philip` - without the offset, it would start in a point I don't want it

[08:39:02.0000] <Omnipotent>
I want it to start at the bottom, like it does now.

[08:39:03.0000] <Omnipotent>
Or on the top for that matters.

[08:40:00.0000] <Philip`>
Omnipotent: You still have offset, you're just subtracting the red (so higher red values result in a point that's further around anticlockwise from offset) instead of adding it

[08:41:00.0000] <Philip`>
Try entering -0.1, -0.2, -0.3, ... in the 'red' input box and I think it gives the appearance you probably want

[08:41:01.0000] <Philip`>
so you just need to do that negation in the script where it uses red

[08:43:00.0000] <Omnipotent>
There we go.

[08:43:01.0000] <Omnipotent>
Ctx.arc(75,75,50,offset,-Math.PI*2*red+offset,true);.

[08:44:00.0000] <Omnipotent>
Now I just need to understand completely how it solved it XD.

[08:45:00.0000] <hsivonen>
I wish someone wrote down a litmus test that can be applied to determine if a particular solution constitutes "decentralized extensibility"

[08:45:01.0000] <Philip`>
hsivonen: I think the test requires colons

[08:46:00.0000] <hsivonen>
s/someone/rubys/

[08:48:00.0000] <TabAtkins>
That thread is going really nicely, though.  Relatively little in the way of rhetoric, and heavy on actual discussion.

[08:49:00.0000] <jgraham>
I was just going to praise hsivonen's ability to be level headed in the face of shrillness

[08:49:01.0000] <TabAtkins>
Only because you guys are putting so much effort into counteracting the rhetoric, though.

[08:49:02.0000] <TabAtkins>
Yeah.

[08:49:03.0000] <Philip`>
/me must be reading a slightly different thread to TabAtkins

[08:50:00.0000] <TabAtkins>
Philip`, I'm comparing it to previous threads about namespaces.  >_<

[08:50:01.0000] <jgraham>
/me guesses he should actually do the praise rather than allude to it

[08:51:00.0000] <jgraham>
hsivonen: I admire you ability to be level headed in the face of shrillness and hyperbole

[08:51:01.0000] <jgraham>
/me should try to get better at that

[08:54:00.0000] <hsivonen>
jgraham: thanks

[08:55:00.0000] <TabAtkins>
hsivonen, Philip`, I also really admire y'all's ability to comport yourselves in that kind of thread.  I wouldn't be able to.

[08:56:00.0000] <TabAtkins>
Which is why I've merely watched.  I didn't want to increase the noise.

[09:00:00.0000] <Philip`>
/me generally tries to avoid posting about anything other than facts

[09:00:01.0000] <Philip`>
which makes life much simpler

[09:01:00.0000] <hsivonen>
Philip`: facts have a strong liberal bias, though

[09:12:00.0000] <jgraham>
In this case it seems like the facts about web compatibility should be enough to sink any proposal involving colons based on compatibility alone

[09:12:01.0000] <jgraham>
er, I just repeated myself

[09:13:00.0000] <hsivonen>
your are assuming your valuations of compat vs. desirability of colons

[09:13:01.0000] <Philip`>
The facts have just been about browser compability, not about web compatibility

[09:14:00.0000] <jgraham>
Philip`: I don't understand what you mean

[09:14:01.0000] <hsivonen>
aargh. the whole of www.cnn.com leaks one attribute holder in the parser

[09:14:02.0000] <hsivonen>
now I need to find out *where*

[09:14:03.0000] <jgraham>
hsivonen: I am making the normal assumption that proposals that would cause a marketshare hit to conforming browsers should be discarded

[09:15:00.0000] <hsivonen>
jgraham: you are part of the Vast Browser-Wing Conspiracy, so of course you value that

[09:19:00.0000] <Philip`>
jgraham: Showing that the proposed behaviour is incompatible with IE does not mean that it's incompatible with significant content on the web

[09:19:01.0000] <hsivonen>
jgraham: it would be *very* interesting too see MS ship and implementation of their proposal as the first mover

[09:19:02.0000] <hsivonen>
Philip`: good point

[09:19:03.0000] <Dashiva>
I smiled when Shelley implied that once Microsoft wanted to, they could immediately upgrade the entire IE6 installed base

[09:20:00.0000] <TabAtkins>
I wish they had such powers.

[09:20:01.0000] <hsivonen>
so I'm looking at a leak of one attribute value on www.cnn.com including all iframes

[09:21:00.0000] <Philip`>
It's surprisingly hard to find actual real examples of DOM/CSS code that would break if browsers did something more Namespacey

[09:21:01.0000] <Philip`>
(Namespacious?)

[09:21:02.0000] <hsivonen>
Philip`: I took a look at the CSS of Ubiquity XForms

[09:21:03.0000] <Dashiva>
Namespatial

[09:21:04.0000] <hsivonen>
Philip`: they seem to be pretty defensive

[09:21:05.0000] <Philip`>
hsivonen: I assume they test it in real XHTML too

[09:22:00.0000] <hsivonen>
Philip`: but OTOH, it would really suck for authors to have to be that defensive

[09:22:01.0000] <Philip`>
Lots of content seems to test for document.namespaces

[09:22:02.0000] <Philip`>
and use that for e.g. VML

[09:22:03.0000] <hsivonen>
Philip`: where in a normal HTML case you'd have one Selector and ruleset, they have 4 selectors and 2 rulesets

[09:22:04.0000] <Philip`>
so it seems lots of IE-only content would break if IE removed that

[09:22:05.0000] <jgraham>
Philip`: If the Great Opera Namespace Experiment had the results ascribed to it by legend then there is sufficient breaking content that colons are out

[09:23:00.0000] <jgraham>
Sadly I don't know where to find the definitive data about that

[09:23:01.0000] <Philip`>
jgraham: Legends != facts :-p

[09:23:02.0000] <Philip`>
(in general)

[09:24:00.0000] <jgraham>
Yeah, which is why I would like some data

[09:24:01.0000] <jgraham>
But I guess it is a few bug reports in the database somewhere

[09:26:00.0000] <Philip`>
DSK-117765 sounds relevant

[09:31:00.0000] <jgraham>
Yeah it is hard to tell what was specific to our implementation and what was a generic problem. But there are specific sites listed and some generic problems with e.g. content produced in Word

[09:36:00.0000] <Philip`>
The specific problems listed seem to be partly about default namespace declarations on HTML elements, and partly seemingly about Opera treating <foo:bar> similar to the HTML element <bar> (where <bar> = <a> and <p>)

[09:38:00.0000] <Philip`>
Actually I suppose at least the one with <foo:a> might have been triggered by <style>a { text-decoration: underline }</style> in theory

[09:44:00.0000] <Philip`>
/me tries importing a ~6GB SVN repository into hg and git, and concludes that git is quite a lot faster

[10:07:00.0000] <Philip`>
(...although "faster" just means ~4 hours, vs unknown-but-several-times-larger)

[10:46:00.0000] <AryehGregor>
Philip`, I think 

[10:46:01.0000] <Philip`>
AryehGregor: You are

[10:47:00.0000] <AryehGregor>
Philip`, I think I once tried timing an svn checkout of mediawiki trunk, against a git clone of mediawiki trunk+branches+tags+all history.  And IIRC, the svn checkout was in the same datacenter, and the git clone was across the Atlantic.  And git was faster.

[10:47:01.0000] <AryehGregor>
(I could be misremembering something, okay)

[10:48:00.0000] <AryehGregor>
But git svn is horribly slow.  The translation from svn to git takes forever.  git svn rebase takes like a second per commit, or an appreciable fraction thereof, and new branches can take an eternity to process.

[10:48:01.0000] <AryehGregor>
/me is pushing MediaWiki to use git proper for exactly this reason

[10:48:02.0000] <Philip`>
SVN doesn't seem to be the most efficient user of HTTP in existence

[10:48:03.0000] <Philip`>
but I'm just doing everything with file:///

[10:48:04.0000] <AryehGregor>
Yeah, to be fair, I was using http:// for SVN and git:// for git, so that's not so fair.  :P

[10:48:05.0000] <Philip`>
(after having rsynced the SVN repository)

[10:49:00.0000] <Philip`>
Fortunately this SVN repository has zero branches

[10:49:01.0000] <Philip`>
so that part is not a problem

[10:49:02.0000] <AryehGregor>
"Perhaps the real issue is we're not all speaking the same "language", and I don't mean English or otherwise. You're seeing the proposal from one view, I'm seeing it from another, and we haven't established a common communication means to express ourselves to one another."  +5 Insightful

[10:50:00.0000] <Philip`>
-1 Obvious :-p

[10:51:00.0000] <Philip`>
I think I failed to see a response to hsivonen's question of what anyone means by "decentralized extensibility"

[10:52:00.0000] <Philip`>
which is probably critical for establishing a common communication means

[10:52:01.0000] <AryehGregor>
They mean "decentralized extensibility", duh.

[10:52:02.0000] <AryehGregor>
I think it's fairly obvious.

[10:52:03.0000] <AryehGregor>
It means "a mechanism for people to make up new nonstandard stuff without knowing about all the other people doing so".

[10:53:00.0000] <Philip`>
That's easy, just use class attributes

[10:53:01.0000] <AryehGregor>
The appropriate question is, what are the specific deficiencies in things like microdata or <object> that require this?

[10:53:02.0000] <AryehGregor>
Right.

[10:53:03.0000] <AryehGregor>
Microsoft's proposal mentioned a few things, like CSS selection, but they seemed very weak.

[10:53:04.0000] <Philip`>
The literal meaning is clearly not the whole of what anyone means when they're asking for decentralized extensibility

[10:54:00.0000] <AryehGregor>
Well, the question is what deficiencies they find in the existing stuff like class.

[10:54:01.0000] <Philip`>
/me waits patiently while git gc compresses 42999 objects

[10:55:00.0000] <Philip`>
Hmm, does git gc want to load the entire repository into RAM?

[10:55:01.0000] <Dashiva>
AryehGregor: Class is kind of a red herring even, since it's rather weak compared to @data-* and microdata and RDFa lined up as well

[10:56:00.0000] <Philip`>
Compression progress: 2%

[10:56:01.0000] <Philip`>
Memory usage: 800MB

[10:56:02.0000] <Philip`>
and growing

[10:56:03.0000] <AryehGregor>
Philip`, probably not the whole repository, no, but as a general rule git doesn't handle huge files or repos too well.

[10:56:04.0000] <AryehGregor>
What kind of repository is it?

[10:56:05.0000] <TabAtkins>
Dashiva: Even with its weakness, jQuery UI works pretty well with it.

[10:57:00.0000] <Dashiva>
TabAtkins: True, just saying you should consider the entire available toolset

[10:57:01.0000] <Philip`>
AryehGregor: It's the kind that's been imported via git-svn, from a repository with lots of binary files (but not many more than a few tens of megabytes each)

[10:57:02.0000] <AryehGregor>
Binary files a few tens of megabytes each sounds bad.

[10:57:03.0000] <TabAtkins>
I haven't ever heard anything to address the basic problem of how accessibility software is supposed to deal with "distributed extensibility".

[10:58:00.0000] <Dashiva>
TabAtkins: Distributed accessibility :D

[10:58:01.0000] <AryehGregor>
For one thing, compression won't work so well, so if they change, the repo will be pretty huge.

[10:58:02.0000] <TabAtkins>
Specifically of the "mint new namespaced elements" variety.

[10:58:03.0000] <Philip`>
AryehGregor: SVN handles them with no problem ;-)

[10:58:04.0000] <AryehGregor>
TabAtkins, we should just replace accessibility software by hiring people from third-world countries to explain the pages to the blind people.  From what I've heard, it would probably cost less than JAWS.

[10:59:00.0000] <AryehGregor>
Philip`, SVN doesn't keep the whole history of the repo in every checkout.

[10:59:01.0000] <Philip`>
AryehGregor: It keeps the whole history of the repository in the repository, though

[10:59:02.0000] <Philip`>
AryehGregor: and that works fine

[10:59:03.0000] <AryehGregor>
Using git for anything that's not source-code-like is potentially dangerous.

[10:59:04.0000] <TabAtkins>
Crowdsourcing as replacement for algorithms.  It's being done already, I guess.

[10:59:05.0000] <AryehGregor>
Yes, but that doesn't affect checkout time.

[11:00:00.0000] <AryehGregor>
Anyway, git might end up not being so good for this kind of thing.  For source code (or similar) it's great.

[11:00:01.0000] <AryehGregor>
Try it and see.

[11:00:02.0000] <Philip`>
AryehGregor: Probably what I ought to do is expose a subset of the SVN repository that only has the code-like stuff

[11:00:03.0000] <Philip`>
and then clone that

[11:00:04.0000] <AryehGregor>
I had the bright idea of using it to do incremental backups of a multi-gigabyte .sql backup file.  "git add" OOMed.

[11:00:05.0000] <Philip`>
but I wanted to see if it'd work with the whole repository first

[11:01:00.0000] <Philip`>
In practice I think I'll use Mercurial anyway

[11:01:01.0000] <Philip`>
but that's taking much longer to import from SVN

[11:02:00.0000] <Philip`>
Compression progress: 3%

[11:02:01.0000] <Philip`>
Memory usage: 1.2GB

[11:02:02.0000] <Philip`>
Compression progress: 5%

[11:03:00.0000] <Philip`>
Memory usage: 100MB

[11:03:01.0000] <Philip`>
That's good progress

[11:05:00.0000] <Philip`>
Maybe it was just loading an entire revision into RAM at once (some of them are ~600MB)

[11:05:01.0000] <AryehGregor>
Yes, I think it does that.

[11:09:00.0000] <Philip`>
TabAtkins: Instead of something like <input class="proprietary-special-thingy" readonly>, all you have to do is <proprietary:specialThingy role="textbox" aria-readonly="true"> plus a thousand lines of script library and then it'll work fine and be accessible and everything

[11:10:00.0000] <TabAtkins>
Philip`, brilliant!

[11:12:00.0000] <Philip`>
Well, you might have to wait five years until enough browsers support it

[11:12:01.0000] <Philip`>
but then finally you'll be able to write great markup like that

[11:12:02.0000] <TabAtkins>
I quiver with anticipation.

[11:52:00.0000] <Philip`>
Hmm, so that hour-long 'git gc' just finished, and saved a whopping 4% of my repository size

[11:53:00.0000] <Philip`>
s/4/12/

[11:54:00.0000] <AryehGregor>
Because it's probably mostly binary files.

[11:55:00.0000] <AryehGregor>
I don't know if git even bothers trying to compress them.

[11:55:01.0000] <AryehGregor>
It probably assumes they're some small, mostly-static PNGs and such, like you'd find in most source-code repos.

[11:58:00.0000] <Philip`>
/me wishes it was possible to integrate SVN and hg/git/etc nicely

[11:58:01.0000] <Philip`>
so I could have all the source code in hg/git/etc, and all the art data in SVN

[11:59:00.0000] <Philip`>
and so nobody would have to understand the difference and would just run one 'update' command and one 'commit' command and it would all work like magic

[11:59:01.0000] <Philip`>
(on Windows too)

[11:59:02.0000] <AryehGregor>
Or someone should fix hg/git/etc. to handle big rapidly-changing binary files well.

[12:00:00.0000] <Philip`>
They'd also have to fix it so you don't have to download the whole repository

[12:01:00.0000] <Philip`>
(by excluding paths, and excluding history)

[12:02:00.0000] <AryehGregor>
Selectively excluding history, maybe, for large often-changing binary files.

[12:02:01.0000] <AryehGregor>
That would complicate the model considerably, of course.

[12:07:00.0000] <Dashiva>
So how many times has Shelley quit public-html?

[12:09:00.0000] <Philip`>
public-html, or the HTML WG?

[12:09:01.0000] <Dashiva>
public-html

[13:19:00.0000] <Hixie>
regenned with new microdata section; not yet uploaded

[14:18:00.0000] <smaug>
Hixie: ping

[15:20:00.0000] <Hixie>
smaug: pong

[15:21:00.0000] <smaug>
Hixie: just sent an email about session history, that I was going to ask about

[15:21:01.0000] <Hixie>
k

[15:29:00.0000] <Hixie>
i guess i should write a blog post about the usability study

[15:29:01.0000] <Hixie>
what <hx> level should i use in posts?

[15:31:00.0000] <hober>
are you asking for a bikeshed or are you serious? :) if serious, I use <h3> for highest-subsection-insid-a-post, allowing for <h1> as site-wide heading and <h2> as blog post title

[15:31:01.0000] <AryehGregor>
I guess he's asking if he should just use <h1> everywhere.

[15:32:00.0000] <hober>
(I say "allowing for" because these days I don't really have a site-wide heading, and am using <h1> for blog post titles. nevertheless, I keep with <h3> in case I change that.)

[15:32:01.0000] <gsnedders>
Hixie: You could try asking the guy who wrote the HTML 5 spec.

[15:32:02.0000] <Hixie>
i mean on the whatwg blog

[15:32:03.0000] <Hixie>
i guess i could look at the source

[15:33:00.0000] <Hixie>
but i'm lazy

[16:33:00.0000] <Hixie>
weird

[16:33:01.0000] <Hixie>
i just got a whole series of kernel panics

[16:34:00.0000] <Hixie>
all in panic(cpu 1 caller 0x0087D888): @/SourceCache/AirPortDriverAtheros5424/AirPortDriverAtheros5424-320.16.2/src/net80211/ieee80211_scan_sta.c:1787

[16:40:00.0000] <Hixie>
i've no idea if this is the right line 1787, but if it is, i'm amused:

[16:40:01.0000] <Hixie>
http://fxr.watson.org/fxr/source/net80211/ieee80211_scan_sta.c#L1787

[16:41:00.0000] <Philip`>
/me imagines it's quite unlikely for a comment to cause a panic

[16:42:00.0000] <Hixie>
well i'm sure the darwin version isn't quite line-for-lien aligned with that one


2009-10-03
[19:03:00.0000] <TabAtkins>
Hixie: In "Selecting names when defining vocabularies"'s list of properties that appear in the example at the bottom, you say "This example has one item with two types...".  I only see the one type, though.

[19:04:00.0000] <Hixie>
fixed thanks

[19:13:00.0000] <TabAtkins>
What *possible* times would an *element* be needed for customization where a class wouldn't cut it?

[19:13:01.0000] <TabAtkins>
That... that just doesn't make sense.  <div class="foo"></div> is functionally identical to <foo></foo> for purposes of extending the language.  The only difference is that the first one works right now and is accepted by everyone.

[19:15:00.0000] <Hixie>
chapter 3 of http://www.rfc-editor.org/rfc/rfc5434.txt seems relevant

[19:35:00.0000] <othermaciej>
TabAtkins: I looked at some SVG files where Inkscape adds elements and not just attributes for its design-time metadata

[19:35:01.0000] <othermaciej>
TabAtkins: it does seem to use elements for some things

[19:36:00.0000] <othermaciej>
TabAtkins: it seems to be in cases where there are logical "objects" with a bunch of key-value pairs, where in principle you may have more than one such object per document or per affected parent element

[19:36:01.0000] <othermaciej>
TabAtkins: so you can't just add attributes to the affected element

[19:36:02.0000] <othermaciej>
TabAtkins: or at least, that would be awkward

[19:36:03.0000] <othermaciej>
you have to use a semantically null, non-rendering element

[19:36:04.0000] <othermaciej>
<div> is not great because, even though it has no semantics, it renders by default

[19:37:00.0000] <othermaciej>
<meta> might work, though only for things that have document-wide scope

[19:41:00.0000] <TabAtkins>
/me is sorry, was off making dinner.

[19:42:00.0000] <TabAtkins>
That makes sense, but we have tools for that now.

[19:42:01.0000] <TabAtkins>
Microdata is the obvious candidate.

[19:43:00.0000] <TabAtkins>
Plus the aforementioned just-use-a-comment suggestion.

[19:43:01.0000] <TabAtkins>
Hell, embed xml in your comment or whatever.  If you have the source, that's more than adequate.

[19:43:02.0000] <TabAtkins>
And it doesn't mess with what anyone else sees, as intended.

[19:46:00.0000] <TabAtkins>
Though I see how comments would fail the "must roundtrip through editting tools" requirement.

[19:51:00.0000] <othermaciej>
yes, I think comments fail due to round-tripping

[19:51:01.0000] <othermaciej>
microdata could work in place of data-* attributes, but I think it has the same issue as RDFa of introducing overconstraining model structure

[19:52:00.0000] <othermaciej>
microdata doesn't by itself provide a solution to the kinds of use cases that would call for an element with null semantics and no rendering

[19:53:00.0000] <othermaciej>
(and which can be placed anywhere)

[19:54:00.0000] <othermaciej>
like if your editor wants to represent multiple "viewports" (where you might have different size/shape windows zooming into different parts of the image), there is likely no existing element in the document to associate each one with

[19:54:01.0000] <othermaciej>
and it's hard to express as a single set of key-value pairs on the root element

[19:55:00.0000] <othermaciej>
I suppose you could do it with sufficient extra levels of indirection, it would just be messy

[19:57:00.0000] <othermaciej>
OK, microdata can do it, using <meta itemprop itemscope>

[19:59:00.0000] <othermaciej>
but requiring a separate element for each property would be a significant burden, I think

[20:00:00.0000] <othermaciej>
it would be nice it you could add properties directly to the itemscope element with attributes of some kind, maybe something analogous to data-* attributes

[20:10:00.0000] <Hixie>
can't inkscape just use xml as its internal format, like, well, like it does already?

[20:13:00.0000] <othermaciej>
I think Inkscape is being used as a stand-in for HTML editing tools that may similarly want to record design-time information

[20:14:00.0000] <othermaciej>
(including hypothetical future SVG-in-HTML tools)

[20:14:01.0000] <othermaciej>
at least that's how I am thinking about it

[20:16:00.0000] <othermaciej>
(but it provides more of a concrete example than a purely hypothetical example)

[20:25:00.0000] <TabAtkins>
It seems like we're talking about tools here, so I'm not sure why lots of <meta>s is so bad.  It would be inconvenient when hand-authoring, but that's not the use-case we're talking about.

[20:26:00.0000] <TabAtkins>
It's a bit weighty, but not horribly so.

[20:27:00.0000] <TabAtkins>
And with a lot of properties that are grouped, you can wrap them in a <div itemscope itemtype="foo" hidden></div> to save on the per-item weight.

[20:32:00.0000] <Hixie>
othermaciej: can't they use xhtml, then? or does the on-the-wire format have to have this stuff? it seems bad for bandwidth to be encouraging people to export this proprietary stuff onto their site

[22:29:00.0000] <boblet>
On a weblog homepage showing excerpts of recent articles (wrapped in <article>), these shouldn’t be inside a parent <article>, should they (<section> instead, right?)

[00:33:00.0000] <annevk42>
Hixie, wouldn't itemScope etc. be more consistent?

[00:51:00.0000] <MikeSmith>
Hixie: I thought you had mentioned dropping the predefined vocabularies

[00:52:00.0000] <annevk42>
are they not dropped?

[00:54:00.0000] <annevk42>
/me doesn't see them

[00:54:01.0000] <MikeSmith>
diff seems to just show that they moved

[00:57:00.0000] <annevk42>
I think it shows they are no longer in HTML5 but still in the source doc

[00:58:00.0000] <annevk42>
itemtype doesn't even allow predefined vocabs

[00:59:00.0000] <MikeSmith>
annevk42: yeah, OK, I see now

[01:00:00.0000] <othermaciej>
well, there's one issue we can resolve

[01:01:00.0000] <annevk42>
I guess the idea is to define org.w3.vcard or some such

[10:08:00.0000] <Dashiva>
http://www.jgc.org/blog/2009/09/javascript-must-die.html

[10:13:00.0000] <miketaylr>
deprecate javascript, that's cute

[10:17:00.0000] <gsnedders>
I think that'll have about as much effect as deprecating presentational markup has had.

[10:36:00.0000] <othermaciej>
there's a lot of sloppy thinking and/or sloppy communication in those slides

[10:50:00.0000] <Dashiva>
Oh, poor RDFa. It only supports RDF.


2009-10-04
[18:44:00.0000] <Hixie>
vcard.org, vcard.net, vevent.org, and vevent.net are all squatted

[18:44:01.0000] <Hixie>
sigh

[18:48:00.0000] <Dashiva>
No country code .rd either

[18:49:00.0000] <Dashiva>
ard.vc maybe? :)

[18:50:00.0000] <Hixie>
i don't like splitting words with dots like that

[18:50:01.0000] <erlehmann>
Domain Information

[18:50:02.0000] <erlehmann>
Query: ml.ht

[18:50:03.0000] <erlehmann>
Status: Not Registered

[18:50:04.0000] <erlehmann>
;D

[18:51:00.0000] <Hixie>
ai guess i'll go with http://n.whatwg.org/vcard and http://n.whatwg.org/vevent

[18:51:01.0000] <erlehmann>
D:

[18:51:02.0000] <tantek>
Hixie - inventing yet another vocabulary space?

[18:51:03.0000] <Hixie>
no, just finding URLs for the vcard and vevent vocabularies

[18:52:00.0000] <Hixie>
so they can be identified in microdata and so they can be converted to rdf

[18:52:01.0000] <erlehmann>
ht.ml.vcard would have been sooo nice :/

[18:52:02.0000] <tantek>
Hixie - http://microformats.org/profile/hcard and http://microformats.org/profile/hcalendar already define the vcard and vevent vocabularies in the context of HTML (microformats etc.)

[18:52:03.0000] <tantek>
and work as URLs for when converting to RDF

[18:52:04.0000] <tantek>
with the proper #term suffix and everything

[18:53:00.0000] <tantek>
no need to reinvent your own new URLs

[18:53:01.0000] <tantek>
e.g. http://microformats.org/profile/hcard#fn

[18:53:02.0000] <Hixie>
that's for hcard and hcalendar though

[18:53:03.0000] <tantek>
and http://microformats.org/profile/hcalendar#dtstart

[18:53:04.0000] <Hixie>
also, the #foo stuff works differently in microdata

[18:53:05.0000] <tantek>
hcard = vcard in HTML

[18:53:06.0000] <tantek>
hcalendar = icalendar and vevent in HTML

[18:53:07.0000] <Hixie>
no, hcard = vcard in class="" in HTML

[18:53:08.0000] <tantek>
the "h" = HTML

[18:53:09.0000] <Hixie>
i'm talking about microdata

[18:53:10.0000] <Hixie>
i mean, i don't mind reusing that URL if you want

[18:54:00.0000] <Hixie>
but it doesn't seem that you'd want me to

[18:54:01.0000] <tantek>
Hixie, I'll clarify the profiles to make it clear they're not just for class

[18:54:02.0000] <tantek>
/me notes a to-do

[18:55:00.0000] <tantek>
as the hCard 1.0.1 and hCalendar 1.0.1 separate the notion of the vocabularies from the host language extension points (e.g. class in HTML3, HTML4, and HTML5, and microdata in HTML5)

[18:55:01.0000] <Hixie>
k, i'll use http://microformats.org/profile/hcard

[18:55:02.0000] <Hixie>
seems confusing to me to have two nearly-identical vocabularies with different conversions to RDF using the same vocabulary name, but whatever

[18:56:00.0000] <tantek>
how will the conversions to RDF be different?

[18:56:01.0000] <tantek>
I'm not sure I understand

[18:56:02.0000] <tantek>
Hixie, if you have an "ideal" conversion to RDF already in mind, I am willing to look into re-using it.

[18:57:00.0000] <tantek>
I don't see any good reason for there to be two different conversions for hCard/vCard to RDF.

[18:57:01.0000] <tantek>
and the #foo suffix on the URLs was done deliberately to be compatible with RDF style URLs - I'd advise keeping that compatibility (unless you have a very good reason to be different).

[18:58:00.0000] <Hixie>
short names converted to rdf from microdata, e.g. "fn" in vcard, end up looking like "http://www.w3.org/1999/xhtml/vocab#http%3A%2F%2Fmicroformats.org%2Fprofile%2Fhcard%23fn"

[18:58:01.0000] <Hixie>
s/vocab/custom/

[18:58:02.0000] <tantek>
whoa that's nasty

[18:59:00.0000] <Hixie>
i can't see another way to prevent people from ending up using the full names when roubd-tripping

[18:59:01.0000] <Hixie>
round

[19:01:00.0000] <tantek>
is round-tripping a requirement? based on which use case?

[19:02:00.0000] <tantek>
exporting to legacy formats (like .vcf) inevitably will result in some loss of fidelity

[19:02:01.0000] <Hixie>
round-tripping isn't a requirement, it's just something that's likely to happen that it's important we don't let screw us up

[19:02:02.0000] <tantek>
I disagree

[19:02:03.0000] <Hixie>
ok

[19:02:04.0000] <tantek>
if there isn't a use case for it

[19:02:05.0000] <tantek>
then round-tripping unnecessarily compromises the design

[19:02:06.0000] <tantek>
both .vcf and .rdf/xml are legacy stream formats IMHO

[19:03:00.0000] <Hixie>
i'm talking about round-tripping through a triple store

[19:03:01.0000] <Hixie>
which sems highly likely to occur if rdf and microdata ever get used together

[19:05:00.0000] <tantek>
I don't know - do you have any existing examples of HTML (of any kind) being produced from a triple-store?

[19:05:01.0000] <Hixie>
sure, dbpedia.org for example

[19:05:02.0000] <tantek>
I'm not sure that a triple-store isn't lossy in the first place

[19:05:03.0000] <Hixie>
or anything metaweb produces

[19:06:00.0000] <tantek>
I bet the HTML produced from those is lossy compared to the HTML semantics they consumed to create the triple-store.

[19:06:01.0000] <Hixie>
microdata is (amongst other things) an rdf serialisation, so i don't see any reason why it'd be lossy

[19:06:02.0000] <Hixie>
it's not like microformats in that respect

[19:06:03.0000] <Hixie>
microformats -> rdf is definitely lossy, sure

[19:06:04.0000] <tantek>
sort of

[19:06:05.0000] <tantek>
no that's not lossy

[19:06:06.0000] <tantek>
because it works with URLs

[19:06:07.0000] <tantek>
for each term

[19:07:00.0000] <Hixie>
so what's lossy then?

[19:07:01.0000] <tantek>
it's the reverse that's lossy

[19:07:02.0000] <Hixie>
i'm very confused as to what you're saying

[19:07:03.0000] <tantek>
rdf -> microdata

[19:07:04.0000] <tantek>
the end result

[19:07:05.0000] <Hixie>
oh sure, arbitrary rdf to microdata can be lossy, e.g. you lose datatypes

[19:07:06.0000] <Hixie>
i'm talking about microdata -> rdf -> microdata

[19:07:07.0000] <tantek>
but once it enters a triple store, who knows what else gets added to it

[19:07:08.0000] <tantek>
that's my point

[19:08:00.0000] <Hixie>
my point is just that i don't want people writing <span itemprop="http://microformats.org/profile/hcard#fn">...</span> and expecting it to be treated the same as <span itemprop="fn">...</span>

[19:09:00.0000] <tantek>
why?

[19:09:01.0000] <Hixie>
because that's an interop nightmare

[19:09:02.0000] <Hixie>
the whole point of microdata is that you don't have ambiguity of this nature

[19:09:03.0000] <Hixie>
you can do string compares at each stage of the way

[19:10:00.0000] <Hixie>
without needing any built-in knowledge of the vocabularies

[19:10:01.0000] <tantek>
why not just define itemprop="fn" to be a shorthand for itemprop="http://microformats.org/profile/hcard#fn"

[19:10:02.0000] <tantek>
?

[19:10:03.0000] <tantek>
basically, define the predefined vocabularies in terms of microformats profile URLs

[19:10:04.0000] <tantek>
make them equivalent

[19:10:05.0000] <tantek>
rather than needlessly slightly different

[19:10:06.0000] <Hixie>
because then you need to know the vocabulary to do anything

[19:10:07.0000] <tantek>
that applies to *any* predefined vocabulary

[19:10:08.0000] <tantek>
based on that argument you should toss all predefined vocabs

[19:10:09.0000] <Hixie>
no, the whole point of microdata is to fix the problem that microformats had whereby you need knowledge of the vocabulary to do _anything_

[19:11:00.0000] <tantek>
which the predefined vocabularies replicate

[19:11:01.0000] <tantek>
ergo, drop the predefined vocabularies from HTML5 microdata

[19:11:02.0000] <Hixie>
what predefiend vocabularies?

[19:11:03.0000] <Hixie>
html5 doesn't have predefined vocabularies

[19:11:04.0000] <Hixie>
they've been gone for hours

[19:12:00.0000] <Hixie>
my point is that with microdata, you can parse any microdata into a tree, then compare it to another tree, and e.g. say whether they're the same or not, without knowing the vocabularies

[19:12:01.0000] <Hixie>
but if we start saying that multiple strings mean the same thing, we've lost that

[19:12:02.0000] <Hixie>
and that's a problem

[19:14:00.0000] <tantek>
"gone for hours"?!?

[19:14:01.0000] <Hixie>
yes, keep up :-)

[19:15:00.0000] <Hixie>
r4066 removed them

[19:15:01.0000] <tantek>
LOL - wow - ok, right then.

[19:15:02.0000] <tantek>
/me will re-read the section later tonight

[19:15:03.0000] <Hixie>
more than hours in fact, almost a day and a half :-)

[19:16:00.0000] <tantek>
/me has been busy writing up and running #microformats value-class-pattern date and time separation test cases.

[19:16:01.0000] <tantek>
(as part of the inclusion of required value-class-pattern support into hCard 1.0.1 and hCalendar 1.0.1)

[23:07:00.0000] <Hixie>
/me tries to work out what URL to use for vEvent

[23:08:00.0000] <Hixie>
i guess tantek said to use hCalendar's URL

[23:08:01.0000] <Hixie>
but that seems even more wrong than using hCard's

[23:24:00.0000] <othermaciej>
is there no such thing as hEvent?

[23:43:00.0000] <Hixie>
no

[00:34:00.0000] <tantek>
othermaciej - common misconception

[00:35:00.0000] <tantek>
hCalendar is based on the iCalendar vocabulary, and allows either "vcalendar" or "vevent" as root class names

[00:36:00.0000] <othermaciej>
where does the v come from?

[00:37:00.0000] <Hixie>
the iCalendar spec

[00:37:01.0000] <Hixie>
tantek: so what URL should I use to identify a vEvent?

[00:37:02.0000] <tantek>
http://microformats.org/profile/hcalendar#vevent

[00:38:00.0000] <Hixie>
<div itemscope itemtype="http://microformats.org/profile/hcalendar#vevent"> ?

[00:38:01.0000] <Hixie>
that's a little verbose

[00:38:02.0000] <tantek>
URLs tend to be verbose, yeah

[00:39:00.0000] <tantek>
hence people invented prefixes, for convenience sake, thus unwittingly creating a solution with problems worse than the original problem

[00:39:01.0000] <Hixie>
hm, it also means i have to come up with another way to generate the the property name URLs

[00:39:02.0000] <Hixie>
since http://microformats.org/profile/hcalendar#vevent#sequence isn't a valid URL

[00:40:00.0000] <Hixie>
http://n.whatwg.org/vevent would be much shorter

[00:40:01.0000] <tantek>
Hixie, if you're looking for shortening, I've partially implemented a URL shortener for microformats.org

[00:40:02.0000] <tantek>
coincidentally, profiles were the first set of URLs that I shortened

[00:40:03.0000] <Hixie>
i'm really looking for memorable rather than short

[00:41:00.0000] <Hixie>
and without a "#"

[00:41:01.0000] <tantek>
e.g. http://ufs.cc/x/hcalendar is the shortlink for http://microformats.org/profile/hcalendar

[00:41:02.0000] <Hixie>
not a semantically equivalent one, i hope

[00:41:03.0000] <tantek>
why?

[00:41:04.0000] <Hixie>
aliases are evil

[00:41:05.0000] <Hixie>
they cause implementation nightmares

[00:41:06.0000] <Hixie>
as we were discussing earlier

[00:42:00.0000] <Hixie>
identifiers should be unique

[00:42:01.0000] <tantek>
tough. HTTP 301. every implementation MUST support.

[00:42:02.0000] <tantek>
and tons of interoperable implementations do

[00:42:03.0000] <tantek>
e.g. search engines

[00:42:04.0000] <Hixie>
wait, you want people to do HTTP traffic to microformats.org every time they interpret this stuff?

[00:42:05.0000] <tantek>
what do you mean by "interpret"?

[00:43:00.0000] <Hixie>
everytime they parse a microdata blob and want to find out what it is -- if you're saying that 301 must be supported, that means they have to actually fetch this value and see what it resolves to

[00:43:01.0000] <Hixie>
which seems like a really expensive idea for whoever is hosting microformats.org

[00:44:00.0000] <Hixie>
i mean, w3.org can't handle the load for DOCTYPEs, and they have multiple mirrors and dedicated IT staff

[00:44:01.0000] <tantek>
nah - just like they don't have to fetch DTD URLs everytime

[00:44:02.0000] <Hixie>
and DOCTYPEs aren't even supposed to be fetched at all

[00:45:00.0000] <tantek>
welcome to the spiraling unscalable nightmare that is "distributed extensibility"

[00:45:01.0000] <Hixie>
it seems perfectly scalable to me if you just don't resolve the URLs

[00:45:02.0000] <Hixie>
and just treat them as opaque strings

[00:45:03.0000] <Hixie>
which is what microdata says

[00:45:04.0000] <tantek>
sure, you just invent another layer to make them equivalent (like OWL)

[00:46:00.0000] <Hixie>
why would you need anything to declare them equivalent

[00:46:01.0000] <Hixie>
just don't have duplicates in the first place

[00:46:02.0000] <tantek>
ask the OWL folks

[00:46:03.0000] <tantek>
in practice, duplicates happen

[00:46:04.0000] <Hixie>
no need to create them on purpose...

[00:48:00.0000] <tantek>
history and all that

[00:48:01.0000] <tantek>
e.g. I bet you could find numerous "aliases" for the "canonical" Dublin Core terms

[00:49:00.0000] <tantek>
and there was no need to create them on purpose either

[00:49:01.0000] <tantek>
but, it happened

[00:49:02.0000] <Hixie>
sure, but you're suggesting creating some on purpose

[00:49:03.0000] <tantek>
so, to expect that they won't happen, is against currently available data

[02:29:00.0000] <Hixie>
wow, no objections to the microdata vocabularies spec idea yet

[04:06:00.0000] <Hixie>
http://www.whatwg.org/specs/vocabs/current-work/

[04:07:00.0000] <Hixie>
http://dev.w3.org/html5/mdvcard/

[04:07:01.0000] <Hixie>
http://dev.w3.org/html5/mdvevent/

[04:07:02.0000] <Hixie>
http://dev.w3.org/html5/mdwork/

[05:38:00.0000] <Hixie>
i like how john calls the whatwg our "club" in http://lists.w3.org/Archives/Public/public-html/2009Sep/0267.html

[05:38:01.0000] <Hixie>
do we get a treehouse?

[07:17:00.0000] <Dashiva>
#whatwg-secret-tree-house-no-patents-allowed

[09:54:00.0000] <gsnedders>
jgraham: ping

[10:15:00.0000] <jgraham>
gsnedders: pong

[10:17:00.0000] <gsnedders>
jgraham: You remember what you agreed to a couple of days ago?

[10:23:00.0000] <gsnedders>
jgraham: Like, me coming over?  Today?

[10:28:00.0000] <jgraham>
gsnedders: Yes

[10:31:00.0000] <gsnedders>
Gah. Caller ID doesn't work when people use other people's phones.

[11:05:00.0000] <TabAtkins>
Well, it took all of 5 minutes to get xampp running on my machine, including download time.  I really don't understand what I was whining about before.


2009-10-05
[17:05:00.0000] <Hixie>
man, this Nick guy i so verbose

[17:06:00.0000] <Hixie>
i don't think i've ever seen him write a comment on a bug report that actually fits on one page of my laptop's screen

[17:41:00.0000] <Philip`>
Hixie: You could try rotating the screen ninety degrees, assuming it's a widescreen laptop, and then it may be more likely to fit

[18:11:00.0000] <Hixie>
Philip`: even then...

[20:45:00.0000] <Hixie>
othermaciej: http://www.w3.org/Bugs/Public/show_bug.cgi?id=7657#c8

[20:45:01.0000] <Hixie>
othermaciej: any chance the official process will be made public soon? :-)

[20:46:00.0000] <othermaciej>
Hixie: Sam and I have a disagreement about some details - I'll try to get it settled soon (target is next week)

[20:46:01.0000] <Hixie>
k

[21:03:00.0000] <miketaylr>
i'm pleased to see that boolean attributes work as css selectors, i.e., [list] {background:#ff0;}

[21:03:01.0000] <miketaylr>
(in opera/chromium)

[21:04:00.0000] <miketaylr>
are there any opera devs in the house?

[21:07:00.0000] <TabAtkins>
They're either just waking up or starting work.  Give 'em a few hours.

[21:08:00.0000] <TabAtkins>
Or, if you wait until American morning, they're just ending work, and hang out a lot.

[21:08:01.0000] <miketaylr>
TabAtkins: oh yeah, i suck at time zones.

[21:08:02.0000] <miketaylr>
thanks

[21:08:03.0000] <TabAtkins>
np

[21:46:00.0000] <inimino>
 /b 19

[21:46:01.0000] <inimino>
oops

[05:12:00.0000] <Hixie>
ok nn

[06:53:00.0000] <zcorpan>
hsivonen: should i make the pseudo-attributes processing of xml-stylesheet unattached to processing instructions so that they can be invoked for any string (e.g. comment data)?

[06:56:00.0000] <hsivonen>
zcorpan: do you mean for reuse in other specs?

[06:57:00.0000] <zcorpan>
hsivonen: yeah

[06:57:01.0000] <hsivonen>
zcorpan: If it's easy to have that kind of generality, I guess having it doesn't hurt

[06:57:02.0000] <zcorpan>
it would be easy

[06:58:00.0000] <hsivonen>
seems like a good idea in that case

[07:00:00.0000] <annevk2>
/me wonders if we're turning into framework designers :p

[07:12:00.0000] <hsivonen>
annevk2: if you organize a program into methods, you aren't an astronaut just yet :-)

[07:17:00.0000] <TabAtkins>
Man, why does my optimism about humanity's inherent honesty have to be so sorely tested even on something where honesty should be so *simple* like a technical mailing list?

[07:18:00.0000] <Philip`>
What makes you imagine it's a technical mailing list?

[07:18:01.0000] <hsivonen>
TabAtkins: which mailing list is testing your optimism about honesty?

[07:19:00.0000] <TabAtkins>
hsivonen, htmlwg.  ;_;

[07:19:01.0000] <hsivonen>
TabAtkins: anything in particular that doesn't appear inherently honest?

[07:19:02.0000] <TabAtkins>
Philip`, it's the technology that does it, I think.

[07:19:03.0000] <TabAtkins>
hsivonen: Shelley's attempts to reframe your arguments.

[07:20:00.0000] <hsivonen>
TabAtkins: I don't think there's dishonesty involved. 

[07:21:00.0000] <hsivonen>
It is a bit annoying though that following up on the hypothetical offered previously is countered with additional requirements that don't seem to allow hypotheticals.

[07:21:01.0000] <TabAtkins>
I find it difficult to imagine that she's being honest in constantly turning your arguments over and poking at what she perceives is the weakest *social* point of it, while completely ignoring the technical discussion that is the point of your arguments.

[07:22:00.0000] <TabAtkins>
I think it's one of the most stark examples of incompatible worldviews I've ever personally witnessed.

[07:23:00.0000] <hsivonen>
TabAtkins: what was the weakest social point in my argument?

[07:24:00.0000] <TabAtkins>
Imo, the fact that you are purposely playing dumb to force the other side to elucidate their proposals more concretely.

[07:25:00.0000] <TabAtkins>
Shelley then twists that into implying that you are either ignoring them for dishonest reasons, or are just too stupid to realize that they've given answers (inadequate though they may be).

[07:26:00.0000] <hsivonen>
I'm not purposely playing dumb. I honestly don't know if the set of characteristics of "decentralized extensibility" is a proper subset of the characteristics of Namespaces.

[07:26:01.0000] <hsivonen>
but every time I try to understand what's essence and what's incidental to an implementation, people don't want to answer me

[07:27:00.0000] <TabAtkins>
I know, that's what you're trying to force them to answer.  But they think the answer is obvious, and so assume that you're being dishonest.

[07:28:00.0000] <hsivonen>
frankly, if there's nothing you can change about Namespaces without it stopping being "decentralized extensibility", we should remove the fancy term and just talk about Namespaces

[07:29:00.0000] <TabAtkins>
Ah, but that removes the ability to trap people into agreeing on principle, so they can't reject Namespaces when the full proposal is put forth.

[07:29:01.0000] <hsivonen>
if there's a distinct principle to agree on, I think the principle should be explicitly formulated

[07:31:00.0000] <TabAtkins>
I agree 100%.  Which brings us around to my optimism about humanity's honesty being tested.

[07:50:00.0000] <TabAtkins>
Anyone know how to get a Print Preview out of Chrome?  Trying to debug a media=print stylesheet in it, and it's more difficult if I have to actually print every time (even if only to a pdf).

[07:53:00.0000] <Philip`>
Install Safari, select 'print preview' menu option?

[07:53:01.0000] <Philip`>
(I assume it has one...)

[07:54:00.0000] <TabAtkins>
I need to reinstall safari anyway, so sure.

[07:54:01.0000] <gavin>
on mac it uses the built-in platform print-preview, presumably

[07:54:02.0000] <gavin>
does it implement its own on windows?

[08:11:00.0000] <othermaciej>
Safari on Mac just generates a PDF for Print Preview - dunno what it does on Windows

[08:14:00.0000] <TabAtkins>
othermaciej: What would be the best way to complain about Webkit's rendering of broken images with alt-text?

[08:15:00.0000] <TabAtkins>
(The bug I was addressing wasn't about print stylesheets at all, but rather about the print button on the page, which doesn't currently have an image.  I was relying on Firefox's treatment, where it's literally indistinguishable from just having the alt-text there instead.)

[08:15:01.0000] <TabAtkins>
(For small images, though, the "broken image" icon completely overlays the text.)

[08:16:00.0000] <TabAtkins>
(In webkit)

[08:16:01.0000] <Philip`>
/me suggests fixing the image so it's not broken

[08:16:02.0000] <TabAtkins>
Part of the reason I *add* alt-text, though, is so I can rely on the page still being usable when images *do* break for whatever reason.

[08:17:00.0000] <TabAtkins>
In this case I was just waiting for the actual image, so I slid in an <img> tag without a @src for now.

[08:17:01.0000] <Rik|work>
TabAtkins: https://bugs.webkit.org/show_bug.cgi?id=11200 and https://bugs.webkit.org/show_bug.cgi?id=5566

[08:17:02.0000] <othermaciej>
TabAtkins: bugzilla

[08:17:03.0000] <Rik|work>
TabAtkins: shake those oooold bugs

[08:17:04.0000] <othermaciej>
TabAtkins: but I suspect your complaints are known issues, so commenting in the existing bugs would be best

[08:32:00.0000] <TabAtkins>
Thanks, you two.

[08:44:00.0000] <zcorpan>
hsivonen: btw, after having looked at http://philip.html5.org/data/script-open-in-escape.txt too, i found one site (www.jeuxactu.com) with 3 pages that breaks with proposal #3

[08:45:00.0000] <zcorpan>
hsivonen: so it is on the order of 10 pages out of 425000 that break with proposal #3

[08:47:00.0000] <zcorpan>
hsivonen: where there around 600-700 out of 425000 that break with what's in the spec now, afaict

[08:48:00.0000] <Philip`>
How many break with what browsers currently implement?

[08:49:00.0000] <zcorpan>
Philip`: 0 for the purposes of the numbers above

[08:51:00.0000] <zcorpan>
there might well be pages that do something like <script><!-- foo() </script> <script><!-- bar() //--></script> and expect both foo() and bar() to run

[08:51:01.0000] <zcorpan>
which they would with proposal #3 but don't in current browsers

[08:51:02.0000] <zcorpan>
i haven't looked for such pages

[08:53:00.0000] <zcorpan>
(or there might be pages with that pattern but expect none of them to run)

[08:56:00.0000] <zcorpan>
sorry, 600-1300 out of 425000

[08:56:01.0000] <zcorpan>
since i don't know what the overlap is between the two sets of data

[09:02:00.0000] <zcorpan>
hmm, if i look at http://www.marchander.com/catalog-9500-gallery.html it has commented out the script element, so it is not relevant

[09:03:00.0000] <zcorpan>
so the breakage could be less than 600

[09:03:01.0000] <annevk2>
the win being no reparsing?

[09:04:00.0000] <zcorpan>
yes

[09:04:01.0000] <zcorpan>
no reparsing means better performance, too

[09:04:02.0000] <zcorpan>
since we don't need to wait for the whole page to load before deciding where to close the script element

[09:05:00.0000] <zcorpan>
reparsing also means potentially reparsing several times

[09:06:00.0000] <zcorpan>
<script><!-- foo() </script> <script><!-- foo() </script> <script><!-- foo() </script> etc

[09:43:00.0000] <annevk2>
more anecdotal namespace fun: http://www.w3.org/mid/op.u1b23ela64w2qv@annevk-t60

[09:45:00.0000] <Philip`>
div[xml|lang|="ar"]

[09:45:01.0000] <Philip`>
I like how the excellent unambiguous syntax makes it really easy to read

[10:01:00.0000] <zcorpan>
div:lang(ar)

[10:02:00.0000] <annevk2>
they're not the same

[10:02:01.0000] <annevk2>
people should not use a Selector such as [xml|lang] in general

[10:24:00.0000] <gsnedders>
Hixie: yt?

[10:26:00.0000] <jgraham>
gsnedders: He went to bed not very many hours ago

[10:27:00.0000] <TabAtkins>
What timezone is Hixie in?

[10:27:01.0000] <gsnedders>
TabAtkins: America/San_Franicso

[10:27:02.0000] <gsnedders>
jgraham: He's normally getting up around now, how am I to know? :P

[10:28:00.0000] <TabAtkins>
k.  He acts like he lives in -12 or something.

[11:02:00.0000] <gsnedders>
Does IE throw when it comes across an undefined variable in JS?

[11:39:00.0000] <jgraham>
gsnedders: iirc then yes, for some definition of undefined

[11:39:01.0000] <gsnedders>
/me wonders what rev of html5lib he has installed at home, as he's getting diff. output from anolis :\

[11:41:00.0000] <gsnedders>
/me notes anolis does not work with html5lib tip

[11:46:00.0000] <jgraham>
/me wonders if this is the namespace issue or something else

[11:50:00.0000] <gsnedders>
Dunno/

[12:21:00.0000] <gsnedders>
Hmm, jgraham: you got any idea where I could get a couple of GB -> Euro power adapters here?

[12:26:00.0000] <TabAtkins>
A drug store?

[12:29:00.0000] <Dashiva>
gsnedders: Clas Ohlson probably

[12:29:01.0000] <gsnedders>
Dashiva: Ah, that sounds likely.

[12:34:00.0000] <gsnedders>
/me shudders at the thought of trying to find things in Clas Ohlson

[12:39:00.0000] <Dashiva>
That's what the catalogue and/or employees are for

[12:40:00.0000] <TabAtkins>
/me is having fun abusing a "functional programming is too inefficient!" weenie who thinks that functional programming is just what you get when you use recursion.

[12:42:00.0000] <TabAtkins>
 /educating

[12:43:00.0000] <Philip`>
That seems backwards

[12:43:01.0000] <Philip`>
Recursion is what you get when you use functional programming

[12:43:02.0000] <TabAtkins>
Aw, Philip`, now I have to educate you too.

[12:43:03.0000] <Dashiva>
"I have only learned now that there is a "text/palin" option that I have never heard of"

[12:43:04.0000] <TabAtkins>
Recursion is a low-level operation that you should use as little as possible.

[12:44:00.0000] <TabAtkins>
Functional programming can probably be best defined as using maps and folds a lot.

[12:44:01.0000] <TabAtkins>
At least as a decent heuristic.

[12:44:02.0000] <Dashiva>
Functional programming can be described as the designer forgetting to include variables

[12:45:00.0000] <TabAtkins>
Iteration is perfectly fine in a functional language.  It's just usually unnecessary, just as recursion is usually unnecessary.

[12:45:01.0000] <Philip`>
TabAtkins: Maps and folds are just abstractions of recursion

[12:45:02.0000] <TabAtkins>
Because you're almost always using much more powerful primitives.

[12:46:00.0000] <TabAtkins>
Philip`, um?  Maps and folds *can* be thought of as recursive.  They can also be thought of as iterative.  The distinction is really unnecessary here.

[12:47:00.0000] <TabAtkins>
Because both iteration and recursion are low-level operations that are basically equivalent.  You just choose one or the other based on how easy they make a particular problem.

[12:47:01.0000] <Philip`>
TabAtkins: The defining feature of functional languages is there's a simple core that just does (recursive) function calls and not much else, and everything else is built on top of that

[12:48:00.0000] <TabAtkins>
Perhaps of functional *languages*, yes.  Not functional *programming*.

[12:48:01.0000] <Philip`>
and the underlying recursiveness is critical for issues like performance of folds

[12:48:02.0000] <TabAtkins>
All functional programming needs is the ability to define functions as first-class objects.

[12:49:00.0000] <TabAtkins>
?_?  You can get equal performance out of an iterative fold as you can with a recursive one.

[12:49:01.0000] <Philip`>
(and pure functional languages can't do iteration at all, because it doesn't make sense when there's no mutable state)

[12:50:00.0000] <Philip`>
TabAtkins: I'm talking about functional programming in terms of programming in functional programming languages, not in terms of writing stuff with functions in other languages ;-)

[12:50:01.0000] <TabAtkins>
I'm talking about functional programming in terms of writing Lisp code that passes functions around properly.  I rarely iterate *or* recurse in my programs, because neither are necessary.

[12:51:00.0000] <TabAtkins>
And whether mapcar is implemented as a recursive function or an iterative is irrelevant to me, as long as it's performant.

[12:52:00.0000] <TabAtkins>
(The most natural implementation is a pretty trivial iterative one, actually, that builds a list by holding onto the tail as it constructs it.)

[12:52:01.0000] <Philip`>
TabAtkins: The performance issue is relevant because some folds might take O(n) stack space, due to their recursive nature

[12:53:00.0000] <Dashiva>
That's what kept nagging me about prolog

[12:54:00.0000] <Dashiva>
Sure, it works now. It works most of the time. But I can never be sure what crazy antics it will pull on me.

[12:54:01.0000] <TabAtkins>
Indeed, performance is important.  But how it works underneath isn't.  If your fold primitive is inefficient because it's implemented recursively, then you need a better compiler that can instead unfold it into an iteration.

[12:57:00.0000] <Philip`>
Dashiva: I expect that's partly why C (and C++ to a lesser extent) is nice for high-performance code, because you can know pretty much exactly what any line of code is going to do, and you can read it and profile it and optimise it and it makes sense

[12:57:01.0000] <Philip`>
whereas other languages might do all kinds of crazy black-box runtime stuff

[12:58:00.0000] <TabAtkins>
That's what profilers are for, and hooks that allow you to drop down the abstraction ladder when necessary.

[12:59:00.0000] <Philip`>
and even if other languages are theoretically more efficient (e.g. JITs can use dynamic profiling data), in practice it seems much harder to write efficient (because e.g. the JIT will magically stop working if you have too much bytecode and there's no good way to debug it and work out the problem)

[13:00:00.0000] <Philip`>
TabAtkins: Dropping down the abstraction ladder can be really hard

[13:00:01.0000] <TabAtkins>
So make sure you have a compiler that makes it unnecessary most of the time.  ^_^

[13:01:00.0000] <Philip`>
and working out what high-level modifications will result in desired low-level changes, several levels of abstraction away, can also be really hard

[13:01:01.0000] <Philip`>
TabAtkins: The ability for a compiler to make it unnecessary seems largely determined by the language

[13:02:00.0000] <TabAtkins>
Philip`, explain?

[13:02:01.0000] <Philip`>
hence C being good because it encourages compilers to have very little abstraction from the hardware

[13:02:02.0000] <Philip`>
and Prolog being less good because it takes a lot of effort to work out what the hardware's doing, regardless of how clever your tools are

[13:04:00.0000] <TabAtkins>
Okay, I see that.

[13:04:01.0000] <TabAtkins>
But many languages (especially multiparadigm functional languages) do make it relatively easy to do so.

[13:06:00.0000] <TabAtkins>
(I'm not convinced that logic programming is at all a good general paradigm, though, so my opinion of Prolog is fairly low to start with.)

[13:07:00.0000] <Philip`>
/me wonders what multiparadigm functional languages are

[13:07:01.0000] <TabAtkins>
Lisp, for one.

[13:07:02.0000] <TabAtkins>
/me is a Lisper, and so uses a lot of examples from it.

[13:07:03.0000] <Philip`>
(If it's not just syntactic sugar for lambda calculus then it doesn't sound like a functional programming language to me :-p )

[13:08:00.0000] <TabAtkins>
It *can* be.  Or you can do OO programming with CLOS.  Or iteration with whatever the hell you want.  Or aspect-oriented.  Or logic programming.  Whatever.

[13:09:00.0000] <TabAtkins>
Lisp doesn't go out of its way to be pure, shutting down useful avenues for making a program easier to write (this is basically why I haven't switched to Haskell yet).

[13:55:00.0000] <jgraham>
/me wonders if anyone else thought of Michael Palin rather than Sarah Palin

[14:12:00.0000] <Philip`>
jgraham: http://www.michaelpalinforpresident.com/ did

[14:43:00.0000] <jgraham>
TabAtkins: http://cgi.cse.unsw.edu.au/~dons/blog/2008/05/16 is rather suggestive of (at least one) functional language being non-trivial to optimize

[14:43:01.0000] <jgraham>
(although the author is trying to make quite the opposite point)

[14:44:00.0000] <jgraham>
However I guess C and similar is rather hard to optimize when you move from simple single thread/core to highly concurent problems

[14:44:01.0000] <jgraham>
(although obviously it can be done; see MPI and similar)

[14:47:00.0000] <Philip`>
/me saw a talk on automatic concurrency optimisation of Haskell programs

[14:47:01.0000] <Philip`>
and it didn't seem particularly awesome

[14:48:00.0000] <Philip`>
With an infinite number of cores and zero added overhead it was at most something like 50% faster on real programs

[14:48:01.0000] <Philip`>
which didn't really seem worth the effort

[14:48:02.0000] <Philip`>
(I've probably got the numbers entirely wrong)

[15:03:00.0000] <Dashiva>
Philip`: That might be amdahl's fault, though

[15:05:00.0000] <Philip`>
Dashiva: Indeed, and the result is that programmers still need to understand concurrency and data dependencies in order to optimise their code, and the language can't do it for you

[15:09:00.0000] <heycam>
sicking, http://dev.w3.org/2006/webapi/WebIDL/dom/

[15:09:01.0000] <heycam>
that is dom core etc. with nullable annotations added (and some getters and things)

[15:12:00.0000] <sephr>
what codec do I put in a <source type> for MP3? I have a <source> for OGG vorbis that is audio/ogg;codecs=vorbis but I don't know what audio/mpeg;codecs= should be

[15:14:00.0000] <webben>
sephr: I'm thinking the answer is, it shouldn't: http://www.faqs.org/rfcs/rfc3003.html

[15:16:00.0000] <sephr>
webben: thanks, I thought there were differing codecs for audio/mpeg

[15:16:01.0000] <sephr>
(like the mp3 hd codec?)

[15:17:00.0000] <webben>
i dunno... there may be ... but there doesn't appear to be a codecs parameter in the media type registration

[15:20:00.0000] <weinig>
heycam: should [Callback=FunctionOnly] allow objects that implement Call (like a NodeList) in addition to function objects?

[15:20:01.0000] <heycam>
weinig, currently yes that's what webidl requires

[15:21:00.0000] <heycam>
it just tries to do the [[Call]] at the appropriate time, iirc

[15:25:00.0000] <heycam>
webben, oh sorry i'm wrong

[15:25:01.0000] <heycam>
it explicitly mentions Function objects

[15:25:02.0000] <heycam>
er, weinig ^

[15:25:03.0000] <weinig>
/me nods

[15:25:04.0000] <heycam>
opinions welcome on what makes sense

[15:26:00.0000] <weinig>
I think we allow passing objects that implement Call in most cases

[15:26:01.0000] <jgraham>
heycam: Is this somthing that the ES people are likely to want changed?

[15:27:00.0000] <jgraham>
Since iirc ES5 says that only functions implement [[Call]]

[15:27:01.0000] <heycam>
jgraham, that's a good point, i'll bring it up

[15:28:00.0000] <weinig>
jgraham: really? Wouldn't the host object exception get around that?

[15:28:01.0000] <jgraham>
weinig: The ES people don't like the host object exception 

[15:28:02.0000] <heycam>
weinig, sounds like the host object exception is something the ES folks don't want to be invoked

[15:28:03.0000] <heycam>
right

[15:28:04.0000] <weinig>
I see

[15:29:00.0000] <jgraham>
(They would like WebIDL APIs to be impementable in ECMAScript)

[15:29:01.0000] <jgraham>
*implementable

[15:31:00.0000] <weinig>
jgraham: ok, what is the use case for that

[15:32:00.0000] <jgraham>
weinig: I'm not really sure. There was a lot of discussion and I didn't take all of it in

[15:32:01.0000] <weinig>
/me nods

[15:32:02.0000] <jgraham>
One suggestion was implementing secure mock-DOM objects in ECMAScript, but I think that was shown to be impractical

[15:33:00.0000] <webben>
Do you recall where that was shown?

[15:33:01.0000] <jgraham>
weinig: It was in a post from othermaciej_ 

[15:34:00.0000] <webben>
on public-html?

[15:34:01.0000] <jgraham>
On the es-discuss / webapps/ public-html lists

[15:34:02.0000] <webben>
too ... many ... lists ;)

[15:34:03.0000] <weinig>
/me saw that cross-posting awesomeness

[15:35:00.0000] <weinig>
/me will ask maciej on the way to coffee

[15:35:01.0000] <jgraham>
webben: Basically he pointed out that you would end up needing to reimplement a substantial fraction of the browser

[15:36:00.0000] <jgraham>
http://lists.w3.org/Archives/Public/public-html/2009Sep/1060.html

[15:36:01.0000] <webben>
ta

[15:36:02.0000] <webben>
it's worth noting that people are in practice trying to build DOM cages like that

[15:36:03.0000] <webben>
e.g. Caja

[15:54:00.0000] <TabAtkins>
jgraham: That link doesn't show a failure mode of Haskell as a functional language, but rather a failure mode from it being a *lazy* language.

[15:55:00.0000] <jgraham>
TabAtkins: Fair enough

[15:55:01.0000] <jgraham>
/me -> sleep

[15:55:02.0000] <TabAtkins>
jgraham is also a lazy language.

[15:55:03.0000] <TabAtkins>
Always sleeping...

[16:11:00.0000] <TabAtkins>
Also, jgraham: http://donsbot.wordpress.com/2008/06/

[16:11:01.0000] <TabAtkins>
Same author, a month later, explaining how the issue *can* be optimized away by the compiler, but GHC's current compiler is biased in a particular way that makes it difficult.

[16:12:00.0000] <TabAtkins>
He then pulls out a library that augments the compiler (easy to do in GHC) that fixes the bias and optimizes it properly, while using very high-level concepts the whole time.

[16:33:00.0000] <Philip`>
TabAtkins: Libraries that augment GHC compiler optimisations are very high-level concepts?

[16:33:01.0000] <TabAtkins>
Philip`, huh?  No, the library makes the compiler smarter.

[16:33:02.0000] <TabAtkins>
Anything to do with compilers is by necessity probably not high-level.

[16:34:00.0000] <TabAtkins>
The point, though, is that then he can continue using proper high-level primitives in his code, secure in the knowledge that the compiler is smart enough to optimize it properly.

[16:38:00.0000] <Dashiva>
TabAtkins: He wasn't secure before, and he isn't secure now. It's just a matter of time before he hits the next compiler weirdness.

[16:38:01.0000] <Philip`>
TabAtkins: He can only be secure in that knowledge because he's looked at compiler details and disassembly output to work out that the compiler will be smart enough in this particular case

[16:41:00.0000] <TabAtkins>
Dashiva, Philip`, well duh.  There will always be places where the compiler fails.  What was shown is that you *can* achieve that super-tight assembly in pure Haskell, which means the rest of your code (which is *not* performance-critical) can also be in Haskell.  The person writing pure C has to do the entire thing in C, which is a punishment all by itself.

[16:42:00.0000] <TabAtkins>
And those compiler-failures are pretty much only relevant on tight inner loops, which you can find via profiling and spend the effort necessary to rewrite into a more efficient form.

[16:43:00.0000] <TabAtkins>
As opposed to writing in a low-level language, where you have to deal with that sort of thing *all the time*, because you simply don't *have* higher-level primitives to work with.

[16:44:00.0000] <Philip`>
At least the person writing C did the whole inner loop in a single line of pretty straightforward code, and got performance equivalent to a whole series of blog posts on writing the same thing in Haskell :-p

[16:44:01.0000] <Dashiva>
And it's amazing how something as simple as summing a list becomes a degenerate case :)

[16:45:00.0000] <TabAtkins>
Dashiva: Summing a list of 1e9 doubles is a degenerate case in *any* language.

[16:46:00.0000] <TabAtkins>
Philip`, the trivial transformation for Haskell (done in the first post linked by jgraham) is basically equivalent to the C code.

[16:47:00.0000] <TabAtkins>
Except that it still gets to use the wonderful abstraction of a list of 1e9 doubles elsewhere, while C can *never* do so - it has to manually implement laziness at the point of necessity.

[16:48:00.0000] <Philip`>
/me remembers reading a vaguely interesting thing about a game that was developed in a custom dialect of Lisp, including a whole sub-language for writing PS2 assembly code for performance-critical bits

[16:49:00.0000] <TabAtkins>
That'd be one of the Crash Bandicoot games.

[16:49:01.0000] <TabAtkins>
One of the things it did was optimize the placement of resources on the disk, allowing for data-streaming at a level that would have been impossible by hand.

[16:49:02.0000] <TabAtkins>
It was in GamaSutra originally.

[16:51:00.0000] <TabAtkins>
http://c2.com/cgi/wiki?LispInJakAndDaxter

[16:51:01.0000] <Philip`>
(But then they got bought by EA and had to standardise on C++)

[16:52:00.0000] <daedb>
Sony owns Naughty Dog

[16:52:01.0000] <Philip`>
Oh, okay, I guessed wrong :-)

[16:53:00.0000] <Philip`>
/me notes that he can count the number of times he's wished for a list of 1e9 doubles on the fingers of one elbow

[16:55:00.0000] <TabAtkins>
Philip`, so you won't have to worry about the compiler failing when you use a naive strategy in Haskell, will you?

[16:56:00.0000] <TabAtkins>
And yeah, part of the problem with ND was they overevolved their dialect, so that when enough engineers left they no longer had the knowledge necessary to maintain it.


2009-10-06
[17:04:00.0000] <Hixie>
should i add document.head?

[17:05:00.0000] <Hixie>
i think it makes sense on the long run; would it be bad to add it now?

[17:05:01.0000] <TabAtkins>
I think it's probably fine.  I doubt many people add .head to document, unless they're specifically emulating what we're trying to do.

[17:06:00.0000] <TabAtkins>
(Though my opinion doesn't count for much, since I'm not an implementor.)

[17:13:00.0000] <Hixie>
jgraham: pimpmyspec.net is hanging doing w3c annotations

[17:14:00.0000] <Hixie>
oh nevermind, it unblocked

[19:24:00.0000] <roc>
TabAtkins: "And those compiler-failures are pretty much only relevant on tight inner loops, which you can find via profiling and spend the effort necessary to rewrite into a more efficient form." --- that is very much not true

[21:17:00.0000] <GPHemsley>
You can always tell when Hixie gets bored

[21:23:00.0000] <GPHemsley>
;)

[21:54:00.0000] <Hixie>
bored?

[22:38:00.0000] <GPHemsley>
Hixie: Yeah, when you're bored my inbox fills up. ;)

[22:38:01.0000] <Hixie>
that's not when i get bored

[22:38:02.0000] <Hixie>
that's when i do my job

[22:39:00.0000] <Hixie>
quite the opposite of when i get bored in fact

[22:40:00.0000] <GPHemsley>
same difference :P

[22:44:00.0000] <Hixie>
for you maybe :-P

[23:10:00.0000] <Dashiva>
<div clas=ohlson>

[00:22:00.0000] <boblet>
does anyone know if it’s possible to change a W3 bugtracker registered user email? can’t seem to see this option…

[00:24:00.0000] <Hixie>
boblet: i think so, but i don't recall how

[00:24:01.0000] <Hixie>
i know i've changed my e-mail address in the past

[00:25:00.0000] <boblet>
Hixie: thanks. will keep looking. you’d think “email preferences”, but nooo…

[00:30:00.0000] <boblet>
/me gives up

[00:53:00.0000] <cedricv>
hey guys!  is the webgl draft spec available somewhere? i cannot find it

[00:55:00.0000] <hsivonen>
cedricv: I couldn't find I last I checked. 

[00:57:00.0000] <cedricv>
hmm weird

[00:58:00.0000] <hsivonen>
cedricv: the Khronos mailing lists are secret, too

[01:00:00.0000] <cedricv>
hmm i guess that's why some people say that the only docs available for now are the idl files in webkit / mozilla sources...

[01:30:00.0000] <MikeSmith>
cedricv: we're told that efforts are being made to add more public transparency to the WebGL group but so far nothing tangible seems to have happened

[01:30:01.0000] <Hixie>
annevk2: yt?

[01:31:00.0000] <Hixie>
MikeSmith: "more"?

[01:31:01.0000] <MikeSmith>
cedricv: it would at least help to have some kind of statement from the group about when they estimate the spec will be made available for public review, and what the public-review process is

[01:31:02.0000] <MikeSmith>
Hixie: I'm trying to be generous

[01:31:03.0000] <Hixie>
hah

[01:32:00.0000] <MikeSmith>
I have faith that they're eventually going to get around to doing the right thing

[01:33:00.0000] <Hixie>
before or after they're done? </cynic>

[01:33:01.0000] <cedricv>
hmm yeah that would be nice indeed...

[01:34:00.0000] <Hixie>
/me tries to work out how to register HTTP headers

[01:34:01.0000] <hsivonen>
Hixie: what header are you registering?

[01:37:00.0000] <Hixie>
Last-Event-ID, Ping-From, Ping-To, WebSocket-Origin, WebSocket-Protocol, WebSocket-Location

[01:40:00.0000] <hsivonen>
Hixie: is Last-Event-ID a new thing that Opera's impl didn't have?

[01:55:00.0000] <gsnedders|work>
Anyone know if there's any reason why calling DOMImplementation.createDocument with a doctype created by a different implementation doesn't throw in any browser?

[01:55:01.0000] <hsivonen>
gsnedders|work: not even in IE6 if you create the doctype using the XHR ActiveX thingy?

[01:56:00.0000] <hsivonen>
gsnedders|work: and offer it to the broweser DOM

[01:56:01.0000] <gsnedders|work>
hsivonen: I don't actually have IE6 here

[01:56:02.0000] <hsivonen>
gsnedders|work: how do you obtain different DOMImplementations?

[01:56:03.0000] <gsnedders|work>
hsivonen: Different documents have different DOMImplementations

[01:56:04.0000] <hsivonen>
really?

[01:57:00.0000] <hsivonen>
for security reasons?

[01:57:01.0000] <hsivonen>
they wrap the same implementation, though, right?

[01:57:02.0000] <gsnedders|work>
Hmnm, maybe that's just Web DOM Core that says that

[02:00:00.0000] <gsnedders|work>
According to zcorpan's copy of Web DOM Core, createDocument with, as the third argument, function(){ var bar = document.implementation.createDocument(null, null, null); return bar.implementation.createDocumentType("bar", "", ""); }() should throw

[02:00:01.0000] <gsnedders|work>
I guess I should just ask zcorpan.

[02:00:02.0000] <hsivonen>
Isn't the purpose of DOMImplementation that you can use Xerces and Crimson DOMs in the same app

[02:00:03.0000] <hsivonen>
but you can't mix their objects without explicit import

[02:00:04.0000] <gsnedders|work>
Yeah, I think

[02:04:00.0000] <gsnedders|work>
"WRONG_DOCUMENT_ERR: Raised if doctype has already been used with a different document or was created from a different implementation." — DOM 3 Core

[02:04:01.0000] <gsnedders|work>
It doesn't what it means by a "different implementation" though

[02:05:00.0000] <gsnedders|work>
How I've always read it is the same as you, and I can't see any way to test a web browser does that.

[02:06:00.0000] <gsnedders|work>
http://www.w3.org/TR/DOM-Level-3-Core/core.html#Embedded-DOM

[02:06:01.0000] <gsnedders|work>
hmm, does that mean HTMLDocument should give a different implementation to SVGDocument, for example?

[02:08:00.0000] <gsnedders|work>
hsivonen: You wouildn't happen to know why Gecko, against spec, throws NAMESPACE_ERR for createElementNS when namespaceURI is not empty and qname is?

[02:09:00.0000] <hsivonen>
gsnedders|work: no idea. sorry

[02:12:00.0000] <Hixie>
hsivonen: probably

[02:26:00.0000] <hsivonen>
where can I find a Web page that tris to install Chrome Frame but that doesn't require a Wave invite?

[02:32:00.0000] <hsivonen>
how do I see which process is causing excessive network traffic on Mac?

[02:34:00.0000] <Philip`>
hsivonen: http://code.google.com/chrome/chromeframe/developers_guide.html#Detecting_Google_Chrome_Frame

[02:34:01.0000] <Philip`>
Sounds like that's how to do the prompting

[02:35:00.0000] <Rik`>
hsivonen: lsof -n I think

[02:36:00.0000] <hsivonen>
Rik`: it seems to show all local pipes, too

[02:36:01.0000] <hsivonen>
should I sort them by offset and assume that the process with a huge offset is the problem?

[02:37:00.0000] <hsivonen>
Philip`: Thanks. I was being lazy so I didn't have to put that on my own site for testing.

[02:38:00.0000] <Rik`>
looking man lsof, it might be lsof -i

[02:39:00.0000] <Philip`>
hsivonen: Would http://software.hixie.ch/utilities/js/live-dom-viewer/saved/260 satisfy your laziness? :-)

[02:39:01.0000] <Philip`>
Oh, that doesn't work so well due to XSS

[02:48:00.0000] <annevk2>
Hixie, am now

[02:48:01.0000] <Hixie>
dude

[02:48:02.0000] <Hixie>
i'm reading 3864

[02:48:03.0000] <Hixie>
but tl;dr

[02:49:00.0000] <annevk2>
wait, what?

[02:49:01.0000] <annevk2>
ah, registering headers

[02:50:00.0000] <Hixie>
there's really no reason the instructions for registering http headers should be longer than 40 or so lines of text

[02:50:01.0000] <Hixie>
but the table of contents is about 40 lines!

[02:50:02.0000] <annevk2>
heh

[02:50:03.0000] <annevk2>
I skipped to the template myself

[02:51:00.0000] <Hixie>
seems wise

[02:51:01.0000] <Hixie>
that's what i'm looking at now

[02:53:00.0000] <annevk2>
hsivonen, Last-ID is new

[02:56:00.0000] <hsivonen>
annevk2: ok

[03:07:00.0000] <hsivonen>
http://www.w3.org/2001/tag/2009/10/01-minutes.html is interesting

[03:07:01.0000] <hsivonen>
removal of document.write() is considered an item up for debate

[03:09:00.0000] <othermaciej>
hsivonen: well, it wouldn't be impossible to remove it from the spec, just foolish

[03:10:00.0000] <othermaciej>
it would be impossible to remove it from implementations - unclear if that was requested

[03:13:00.0000] <MikeSmith>
we should have a hall of fame for really bad Web platform (mis)features that we are now stuck with forever

[03:13:01.0000] <othermaciej>
man that would just be depressing

[03:13:02.0000] <MikeSmith>
heh

[03:14:00.0000] <Hixie>
isn't that called "HTML5"?

[03:14:01.0000] <MikeSmith>
lol

[03:14:02.0000] <MikeSmith>
Hixie: color-coding, man, I'm telling you

[03:15:00.0000] <MikeSmith>
misfeatures in pink

[03:15:01.0000] <othermaciej>
why would we want to color the whole spec pink?

[03:15:02.0000] <othermaciej>
that would be hard to read

[03:15:03.0000] <Hixie>
i'd be hard pressed to find anything that's widely implemented that i couldn't point out fundamental problems with

[03:15:04.0000] <Hixie>
even the new stuff like canvas

[03:15:05.0000] <othermaciej>
DanC is so sensible in those TAG minutes

[03:15:06.0000] <othermaciej>
I enjoy reading his lines in the minutes

[03:16:00.0000] <MikeSmith>
or maybe misfeatures in <blink> would be better

[03:17:00.0000] <othermaciej>
how about we paint misfeatures in the blood of whoever first implemented them

[03:17:01.0000] <othermaciej>
/me wonders how many pints he'd have to donate

[03:20:00.0000] <gsnedders|work>
Sorry, I'm not allowed to give blood at home.

[03:25:00.0000] <othermaciej>
Noah is very sensible too

[03:38:00.0000] <Hixie>
Philip`: btw, i asked the rdfa guys at work and they said that the preview page is the same code as we use internally for snippet generation.

[03:44:00.0000] <Hixie>
ok, iana consideration sections for the http headers are all written up

[03:44:01.0000] <Hixie>
bed time now

[03:44:02.0000] <Hixie>
nn

[03:47:00.0000] <Philip`>
Hixie: Okay, good to know

[03:51:00.0000] <annevk2>
/me wonders why the TAG spends so much time discussing matters such as document.write(); it's like a decade too late to have an architecture discussion on that

[03:58:00.0000] <MikeSmith>
annevk2: from the minutes, it seems like what they were discussing it in the context of whether it would be worthwhile to have a separate spec that documented HTML processing minus the bad stuff

[03:59:00.0000] <Philip`>
You mean an empty document?

[04:00:00.0000] <annevk2>
MikeSmith, could publish an empty document

[04:00:01.0000] <MikeSmith>
heh

[04:00:02.0000] <MikeSmith>
I think in a better world it would be a great thing

[04:01:00.0000] <annevk2>
I wonder why they waste so much time trying to understand HTML5 by brainstorming with each other while a few questions to the HTML WG list would work as well

[04:07:00.0000] <othermaciej>
indeed, they seem to think it may be valuable to suggest making a separate spec that is a "clean subset", or perhaps just a description in the main spec itself of what such a subset could be

[04:07:01.0000] <othermaciej>
timbl thought it was as simple as not using document.write() and avoiding implicit <tbody>

[04:07:02.0000] <othermaciej>
it would be interesting to document the intersection of HTML and XML that results in identical processing, but quite challenging

[04:08:00.0000] <annevk2>
you fail at <html xmlns

[04:08:01.0000] <annevk2>
as someone pointed out recently

[04:09:00.0000] <jgraham>
That does seem to be an unusually subtle issue to trap the unwary indeed

[04:09:01.0000] <jgraham>
I guess there is some value in documenting the intersection that gives the minimum achievable difference between HTML and XML processing

[04:15:00.0000] <othermaciej>
annevk2: fair enough - it couldn't be identical, it would have to be some definition of "close enough" processing

[04:15:01.0000] <othermaciej>
annevk2: which would be hard to define in itself

[04:15:02.0000] <othermaciej>
you'd also have to rule out all use of script if you want the subset to be statically checkable

[04:17:00.0000] <annevk2>
and CSS

[04:17:01.0000] <annevk2>
e.g. html[xmlns] { background:papayawhip }

[04:19:00.0000] <csarven>
Is or was there anything in the talks of doing something along the line of <input type="rememberme">? It would be a checkbox, but it would work similar to type="password" where the default behaviour of the UA will fill in i.e., remember me in login forms by default or not

[04:20:00.0000] <hsivonen>
did the Super Friends ever follow up with Sam on the polyglot stuff?

[04:20:01.0000] <jgraham>
annevk2: That seems like it is about observability not static checkability

[04:20:02.0000] <MikeSmith>
csarven: autocomplete?

[04:21:00.0000] <jgraham>
hsivonen: I don't recall anything from them except the individual emails sent bu Jeremy Keith and tantek

[04:21:01.0000] <hsivonen>
jgraham: I don't recall emails on polyglottal issues

[04:22:00.0000] <hsivonen>
jgraham: I do recall adactio sending other email

[04:22:01.0000] <jgraham>
hsivonen: Yes that was what I meant

[04:22:02.0000] <jgraham>
(sorry for being unclear)

[04:23:00.0000] <csarven>
MikeSmith I guess that'd be it. <input type="checkbox" autocomplete="on">. But autocomplete doesn't appear to apply checkbox. Would this be a good case to do so? The only problem is that, the UA doesn't know it is about 'rememberme'

[04:23:01.0000] <hsivonen>
I guess I'll proceed to zapping the new menu from V.nu if the Super Friends aren't going to follow up with Sam

[04:24:00.0000] <MikeSmith>
csarven: it might be worth proposing in a e-mail to one of the mailing lists or through W3C bugzilla

[04:24:01.0000] <gsnedders|work>
http: doesn't match URI-reference, right?

[04:25:00.0000] <csarven>
MikeSmith Thanks, I could do that, but, I wanted some quick feedback on it before going ahead. There may have been discussions around that already.

[04:26:00.0000] <annevk2>
remembering is a UI feature

[04:26:01.0000] <annevk2>
autocomplete can be used to turn things off, on is not really a meaningful value

[04:29:00.0000] <csarven>
annevk2 So, what you are saying is that <input type="checkbox" autocomplete="on"> would be sufficient?

[04:57:00.0000] <annevk2>
no

[04:58:00.0000] <annevk2>
Hixie, the title attribute for the set-cookie header is wrong, you made it http-setcookie2

[04:58:01.0000] <annevk2>
Hixie, not sure if it affects anythings

[05:33:00.0000] <gsnedders|work>
Hixie: You got any idea why I'm not getting any whatwg email to gsnedders@op?

[05:37:00.0000] <Philip`>
gsnedders|work: Maybe you're not subscribed

[05:37:01.0000] <gsnedders|work>
Philip`: I was before, but I tried filling out the form… didn't even get confirmatioin email

[05:48:00.0000] <mpt>
Argh

[05:49:00.0000] <hsivonen>
mpt: ?

[05:50:00.0000] <mpt>
I've wandered into one of those places where people still think draconian error handling for a markup language targeted primarily at humans is a good idea

[05:50:01.0000] <hsivonen>
what place is that?

[05:50:02.0000] <mpt>
http://mail.gnome.org/archives/gnome-doc-list/2009-October/msg00014.html

[05:52:00.0000] <mpt>
/me wonders about the most productive way to reply

[05:53:00.0000] <annevk2>
mu

[05:53:01.0000] <hsivonen>
mpt: is Gnome practicing decentralized extensibility and minting stuff like <demo>?

[05:53:02.0000] <mpt>
haha

[05:54:00.0000] <mpt>
Hm, now you're making me think what it would be in non-extensible HTML

[05:55:00.0000] <mpt>
Probably something like <a href="demo:%20awkwardly-escaped%20script%20goes%20here">

[05:56:00.0000] <mpt>
with the demo: protocol restricted to access only from ghelp: URLs

[06:01:00.0000] <othermaciej>
generally when you find yourself making a new markup language, you're probably doing it wrong

[06:01:01.0000] <gsnedders|work>
Blatantly we should just use triple stores, SPARQL, and transform everything to HTML.

[06:02:00.0000] <othermaciej>
mpt: is it true that feed readers ignore well-formedness for Atom? (I knew that was true for RSS)

[06:02:01.0000] <gsnedders|work>
othermaciej: They use the same parser

[06:03:00.0000] <gsnedders|work>
othermaciej: It's not that they ignore well-formedness completely, normally, though

[06:03:01.0000] <othermaciej>
I'm wondering if maybe Safari's (well, PubSub's) Atom implementation might use real XML parsing

[06:03:02.0000] <othermaciej>
I know the RSS implementation is very... generous

[06:04:00.0000] <gsnedders|work>
othermaciej: You still need to ignore invalid byte sequences, but otherwise you get away with it fine in Atom

[06:04:01.0000] <othermaciej>
of course, real standalone feed readers completely ignore the MIME type so they'd have to use a single parser

[06:04:02.0000] <othermaciej>
(even if that parser just does some sniffing and then switches)

[06:04:03.0000] <gsnedders|work>
zcorpan: http://krijnhoetmer.nl/irc-logs/whatwg/20091006#l-217

[06:04:04.0000] <othermaciej>
(and people bitch about the sniffing browsers do...)

[06:05:00.0000] <gsnedders|work>
othermaciej: SimplePie at least just uses a real XML parser for everything

[06:06:00.0000] <hsivonen>
othermaciej: my recollection of hearsay is that Safari doesn't treat encoding errors as fatal

[06:06:01.0000] <mpt>
othermaciej, I see that the Universal Feed Parser accepts non-well-formed XML <http://www.feedparser.org/docs/bozo.html>, but I haven't done an actual survey

[06:06:02.0000] <othermaciej>
I remember doing some experiments once where I got Apache to serve an RSS feed with the Atom mime type and the Atom feed with an RSS MIME type

[06:06:03.0000] <mpt>
othermaciej, non-well-formed Atom, I mean

[06:06:04.0000] <gsnedders|work>
mpt: That uses an XML parser and falls back to a custom one

[06:06:05.0000] <othermaciej>
(and of course it worked fine everywhere)

[06:07:00.0000] <gsnedders|work>
othermaciej: SimplePie forks based upon the root element. I don't think you do actually need to support those two mixed up, it's more supporting application/xml and text/xml feeds.

[06:07:01.0000] <gsnedders|work>
othermaciej: Oh, the other spec you have to break for Atom compat. is RFC3023

[06:08:00.0000] <othermaciej>
gsnedders|work: break which aspect? the text/xml encoding lie?

[06:08:01.0000] <gsnedders|work>
othermaciej: yeah

[06:08:02.0000] <othermaciej>
right, I don't think you need them mixed up, was just experimenting to determine the extent of sniffing

[06:09:00.0000] <othermaciej>
I was able to serve both feed types as each other, as text/html, as image/jpeg, as image/svg+xml, as application/pdf, and of course all of those worked in every feed reader I could find

[06:09:01.0000] <othermaciej>
I did not, at the time, try introducing well-formedness errors

[06:10:00.0000] <othermaciej>
it's sad that feed readers handle bogus Atom, when one purpose of Atom was supposed to be to make a clean break from all that

[06:11:00.0000] <gsnedders|work>
othermaciej: Basically you establish a document is a feed, and use the same code-path thereon

[06:11:01.0000] <othermaciej>
(I should mention that not all those types worked in feed readers built into browsers of course; they would fail on types that don't get sniffed for feeds)

[06:12:00.0000] <othermaciej>
but of course the fact that feed readers ignore Content-Type is what requires you to sniff for feeds in the first placr

[06:12:01.0000] <othermaciej>
*place

[06:12:02.0000] <gsnedders|work>
SimplePie rejects any feed not served as application/rss+xml, application/atom+xml, application/xml, application/rdf+xml, text/xml, or text/html (with HTML5-heristics)

[06:13:00.0000] <gsnedders|work>
We've got very, very, very few bug reports from not supporting more. The only one that used to come up a fair bit was text/plain, but since Firefox and Safari stopped sniffing that that has almost totally vanished.

[06:14:00.0000] <gsnedders|work>
The number of bug reports from unescaped ampersands far exceeds MIME-type issues.

[06:14:01.0000] <othermaciej>
that is omewhat encouraging

[06:14:02.0000] <gsnedders|work>
And from memory most of the XML well-formedness issues are in RSS feeds, not Atom ones.

[06:15:00.0000] <gsnedders|work>
Atom, as I said before, you have to allow invalid byte sequences, but I think that's the only real concession you have to make for compatibility

[06:16:00.0000] <gsnedders|work>
(and this is something with millions of deployed copies, and as far as I can tell we've reached the point where increasing marketshare has more or less stopped causing such a dramatic increase in broken things being found, so that is probably representative of the feed landscape in general)

[06:20:00.0000] <gsnedders|work>
The number of cases of unescaped ampersands, which AFAIK is the cause of 90% or so of well-formedness errors (excluding invalid byte sequences, which are the most common), is certainly decreasing. I made the decision two/three years ago to stop supporting such feeds in SimplePie, and the number of bug reports we're getting on them is going down over time, quite clearly.

[06:22:00.0000] <jgraham>
Maybe people are just not bothering to file bugs on you anymore since you wontfixed all the other bugs

[06:22:01.0000] <gsnedders|work>
(I decided to remove support primarily because we don't have our own XML parser: having one in PHP would be ungodly slow, so anything to special case certain errors is quite hackish, and this was causing some compat. issues with certain combinations of (valid) things (Atom + XHTML content + CDATA, IIRC), so I took the decision to favour the valid)

[06:22:02.0000] <gsnedders|work>
jgraham: Maybe, but there are still plenty of other duplicates we get filed :)

[06:23:00.0000] <gsnedders|work>
I am fairly certain from what I've seen elsewhere (e.g., what rubys has posted on his blog of stats from feed validator) that the state of feeds is getting better.

[06:24:00.0000] <gsnedders|work>
I'd say it is a realistic thing to change to using an XML (+NS) parser that allows invalid byte sequences and ignores RFC3023 (for text/xml charset)

[06:24:01.0000] <gsnedders|work>
</soapbox>

[06:34:00.0000] <jgraham>
http://www.youtube.com/watch?v=yFYH9BCRPAw

[06:56:00.0000] <GPHemsley>
/me is getting tired of the <cite> argument

[07:11:00.0000] <Philip`>
GPHemsley: Is it not endlessly fascinating?

[08:18:00.0000] <gsnedders|work>
/me guesses that IE's DOM-like thing has to have protection to stop XPath causing infinite loops.

[08:25:00.0000] <Philip`>
gsnedders|work: I know nothing about this, but: Isn't XPath just supported in XML, where presumably IE uses MSXML which has a real DOM and is completely independent of the IE's HTML DOM-like thing?

[08:26:00.0000] <gsnedders|work>
Philip`: XPath is supported in HTML too

[08:27:00.0000] <Philip`>
Oh, okay

[08:53:00.0000] <gsnedders|work>
Philip`: Oh, I'm wrong

[09:29:00.0000] <gsnedders|work>
Anyone got any idea about what the best way to count the descendants of a document is?

[09:29:01.0000] <gsnedders|work>
(pref. in a way that works in IE)

[09:29:02.0000] <jgraham>
It is important to clarify that you mean "Nodes"

[09:31:00.0000] <zcorpan>
just c/p from live dom viewer

[09:31:01.0000] <zcorpan>
and don't count the red nodes

[09:31:02.0000] <jgraham>
(but the short answer is "walk the 'tree' being careful to not count any node twice or descend into the descendants of nodes that you have seen before"

[09:31:03.0000] <jgraham>
)

[10:10:00.0000] <jgraham>
Where does HTML5 say normatively that event handler attributes are null in the absence of being defined

[10:10:01.0000] <jgraham>
I can see where it says they are null if the content attribute doesn't compile

[10:10:02.0000] <jgraham>
or if the IDL attribute is removed

[10:11:00.0000] <jgraham>
Oh, nevermind it was obvious

[10:12:00.0000] <jgraham>
(just in the paragraph above where I was looking)

[10:13:00.0000] <GPHemsley>
Philip`: No, actually, it's endlessly repetitive.

[10:17:00.0000] <gsnedders|work>
http://www.betanews.com/article/Yahoo-Apple-Adobe-others-named-in-Eolas-patent-lawsuit-blitz/1254842259

[10:20:00.0000] <tantek>
ah the ghost of patent trolls past raises its ugly head

[10:23:00.0000] <Philip`>
We should all be glad that their innovation allowed us to have interactive plugins embedded in web pages

[10:24:00.0000] <Philip`>
Surely it's fair that they deserve a billion dollars for that?

[10:28:00.0000] <Dashiva>
And patents don't have any chinese wall equivalent either, do they?

[10:28:01.0000] <Dashiva>
Even if you didn't know about the patent, you're infringing someone else's innovation

[10:30:00.0000] <Philip`>
Indeed, otherwise it'd be trivial to steal someone's legitimate patent and just pretend you never read about it, which would be pretty much impossible to disprove

[10:33:00.0000] <tantek>
I wonder if history will repeat or not.

[10:33:01.0000] <cardona507>
hello - there was a really great video that went around the public_html mailing list last week about HTML5 and what it can do and how well it is supported in the different browsers. I am pretty sure it was made by someone at google. I can't seem to locate it in my email. Can someone point me toward it? (I apologize if the description is kinda vague)

[10:34:00.0000] <cardona507>
I want to post it to my HTML/CSS class forum

[10:34:01.0000] <tantek>
Last time, various folks (including TBL) wrote friend of the court briefs outlining how the so called "innovations" were previously openly discussed - by others - on w3.org mailing lists. But that didn't seem to affect the outcome.

[10:34:02.0000] <webben>
cardona507: http://vimeo.com/6691519 ?

[10:35:00.0000] <cardona507>
webben - exactly :) thanks

[11:04:00.0000] <gsnedders|work>
Philip`: yt?

[11:06:00.0000] <Philip`>
gsnedders|work: Y

[11:06:01.0000] <gsnedders|work>
Philip`: What pages contain: document.createElement(["']<

[11:07:00.0000] <Philip`>
gsnedders|work: Do you mean document\.createElement\(["']< ?

[11:07:01.0000] <gsnedders|work>
Philip`: yeah

[11:08:00.0000] <Philip`>
gsnedders|work: Ask me again in five minutes

[11:12:00.0000] <gsnedders|work>
Philip`: again?

[11:14:00.0000] <Philip`>
gsnedders|work: http://philip.html5.org/data/createelement-with-angle-bracket.txt

[11:15:00.0000] <gsnedders|work>
Philip`: thx

[12:47:00.0000] <GPHemsley>
/me shifts uncomfortably after reading the latest response in the <cite> debate.

[12:50:00.0000] <TabAtkins>
GPHemsley: To be fair, I totally agree with him, and don't understand quite how it could be misconstrued as badly as it is by Hixie.

[12:51:00.0000] <GPHemsley>
I'm personally of the belief that <cite> should be used to mark up an entire entry in a bibliography, so I don't even bother getting directly involved in the discussion.

[12:51:01.0000] <GPHemsley>
But yeah, I certainly don't agree that <cite> should be restricted to just titles of works

[12:51:02.0000] <TabAtkins>
Interesting, but totally against legacy usage, so can be struck immediately.  ^_^

[12:52:00.0000] <GPHemsley>
Precisely :P

[12:52:01.0000] <TabAtkins>
Yeah, I just added an example from my own site to the whatwg wiki page about it.

[12:52:02.0000] <TabAtkins>
As I use the <blockquote>/<cite> pair to mark up testimonials, and expect to continue to do so in the future.

[12:53:00.0000] <GPHemsley>
right

[12:53:01.0000] <GPHemsley>
what is the link to the wiki article, please?

[12:53:02.0000] <TabAtkins>
One sec.

[12:55:00.0000] <TabAtkins>
GPHemsley: http://wiki.whatwg.org/wiki/Cite_element

[12:55:01.0000] <GPHemsley>
thanks

[12:58:00.0000] <GPHemsley>
perhaps we should analyze the word 'cite' itself?

[12:58:01.0000] <GPHemsley>
if so, the first question is, are we using it as a verb or a noun?

[12:59:00.0000] <TabAtkins>
I use it as a verb.  I'm citing whatever's in the <cite>.

[13:01:00.0000] <GPHemsley>
hmm... according to the main definition of the verb 'cite', it cane be used to refer to quotes/quotations, titles, and people

[13:01:01.0000] <GPHemsley>
s/cane/can/

[13:02:00.0000] <TabAtkins>
Yeah, the first one doesn't jive with legacy <cite>, but the second and third definitely do.

[13:03:00.0000] <TabAtkins>
Which is why I don't understand why Hixie keeps splitting things the way he does.  We want to use <cite> for "things we cite".  He seems to be slicing things differently - he wants to use for "x things", making sure that x is a category that can be reliably styled as a citation.

[13:03:01.0000] <TabAtkins>
Which is why names don't work for his logic - most of the time you *don't* want to mark up a name, or style it with italics.

[13:03:02.0000] <GPHemsley>
reading the FAQ entry on it, it seems that the main issue is the difference in styling (i.e. italics) between titles and authors

[13:04:00.0000] <TabAtkins>
I just don't see a significant difference, though.  I italicize cited names.

[13:04:01.0000] <TabAtkins>
And if I was bolding them or something, I'd be bolding work names too.

[13:05:00.0000] <GPHemsley>
I think <cite> should be used for things such as parenthetical citations or footnotes (e.g. in spec documents, like <cite>[RFC3066]</cite>), rather than any off-handed mention of a work's title

[13:06:00.0000] <TabAtkins>
Basically I just don't want to be stuck with <span class=cite> when I'm trying to mark up names being attributed for styling purposes when there's a perfectly serviceable <cite> element right here.

[13:06:01.0000] <GPHemsley>
...or author, for that matter

[13:06:02.0000] <TabAtkins>
Well, you *do* often style works, even if you're not directly quoting them.

[13:06:03.0000] <GPHemsley>
yes

[13:06:04.0000] <GPHemsley>
that is true

[13:06:05.0000] <GPHemsley>
but I think that should be dealt with separately

[13:07:00.0000] <TabAtkins>
And saying that "too bad, that's not *enough* quotation to get special <cite> styling, off to <span>-land with you" is weird and would just cause problems.

[13:07:01.0000] <TabAtkins>
A simpler rule is "are you citing something, and do you want it styled specially?".

[13:07:02.0000] <GPHemsley>
I think you'd be better off with <cite class="title"> and <cite class="author">

[13:07:03.0000] <TabAtkins>
Possibly, if you need to slice things that thinly.

[13:07:04.0000] <GPHemsley>
right

[13:08:00.0000] <GPHemsley>
so, leave the default styling as italics (for legacy issues), and then allow any reference to any work or author, with the granularity decided by the author

[13:08:01.0000] <TabAtkins>
My rule for semantics is that if I can't explain it in terms of a single easy question, it's too complicated.

[13:08:02.0000] <TabAtkins>
Yeah, that's about what I want.

[13:08:03.0000] <GPHemsley>
seems simple enough

[13:09:00.0000] <GPHemsley>
Hixie: ^^

[13:13:00.0000] <TabAtkins>
Ah, spending some time just sitting down and styling a page is so relaxing.

[13:15:00.0000] <GPHemsley>
heh

[13:15:01.0000] <GPHemsley>
while you're at it, I'd recommend to changing -- to em dashes ;)

[13:15:02.0000] <GPHemsley>
s/to/you/

[13:16:00.0000] <TabAtkins>
Yeah, probably.  I always forget how to do unicode in the content property, though.

[13:16:01.0000] <GPHemsley>
\u2014

[13:16:02.0000] <GPHemsley>
I think

[13:17:00.0000] <TabAtkins>
Lemme try.  One sec.

[13:18:00.0000] <TabAtkins>
Nope.  >_<

[13:19:00.0000] <GPHemsley>
you did it wrong :P

[13:19:01.0000] <TabAtkins>
I've done it four different ways now.

[13:19:02.0000] <GPHemsley>
oh

[13:19:03.0000] <GPHemsley>
meh

[13:19:04.0000] <GPHemsley>
hang on

[13:19:05.0000] <GPHemsley>
oh

[13:19:06.0000] <GPHemsley>
\2014

[13:20:00.0000] <TabAtkins>
Ah, excellent.

[13:20:01.0000] <GPHemsley>
weird... the space disappeared

[13:21:00.0000] <TabAtkins>
Yeah, but I don't care enough to debug.  It's good enough.

[13:22:00.0000] <GPHemsley>
perhaps you want a \00A0 (NBSP) or \2002 (en space) \2003 (em space)

[13:23:00.0000] <GPHemsley>
(there's an "or" missing in there)

[13:25:00.0000] <tantek>
TabAtkins - re: cite element, perhaps add your voice of support to the opinions section on the wiki: http://wiki.whatwg.org/wiki/Cite_element

[13:25:01.0000] <tantek>
(and add any examples you have on the web as well)

[13:25:02.0000] <TabAtkins>
tantek: I already added an example - it's the Go Figure one.

[13:25:03.0000] <tantek>
oh cool - awesome

[13:25:04.0000] <TabAtkins>
GPHemsley: Yeah, an nbsp did it.

[13:26:00.0000] <GPHemsley>
TabAtkins: Cool

[13:26:01.0000] <TabAtkins>
Odd that it would lose an ordinary space, though.  Hmm.

[13:26:02.0000] <GPHemsley>
TabAtkins: Incidently, I'd recommend indenting those lines just a tad, as well.

[13:26:03.0000] <tantek>
TabAtkins, GPHemsley, still worth adding a +1 here IMHO: http://wiki.whatwg.org/wiki/Cite_element#opinions

[13:26:04.0000] <TabAtkins>
Oh, the cite lines?

[13:26:05.0000] <GPHemsley>
yeah

[13:27:00.0000] <tantek>
if any strawpoll is conducted in the wg, it can include the opinions there in absentia

[13:27:01.0000] <GPHemsley>
what are we +1ing, though?

[13:28:00.0000] <tantek>
the use of the cite element to mark up names of speakers/people for quotations

[13:28:01.0000] <TabAtkins>
tantek: done

[13:29:00.0000] <TabAtkins>
GPHemsley: You're right, that looks better.

[13:29:01.0000] <GPHemsley>
:)

[13:29:02.0000] <GPHemsley>
TabAtkins: And perhaps a little extra space above, too

[13:30:00.0000] <TabAtkins>
above the cite or above the blockquote?

[13:30:01.0000] <GPHemsley>
above the cite

[13:30:02.0000] <GPHemsley>
(hmm... thanks for alerting to me to the 'text-indent' property, BTW)

[13:30:03.0000] <GPHemsley>
/me really cannot type.

[13:30:04.0000] <TabAtkins>
Heh, np.

[13:31:00.0000] <GPHemsley>
yeah, that's better

[13:31:01.0000] <TabAtkins>
Okay, .25em is a bit too much.  I like the space, but want only a very fine one.

[13:31:02.0000] <TabAtkins>
Ah, better.

[13:32:00.0000] <TabAtkins>
.15em it is.  I still want a very strong visual correlation with the preceding blockquote.

[13:32:01.0000] <GPHemsley>
right

[13:33:00.0000] <GPHemsley>
I'm gonna write a message to the cite thread regarding our discussion, BTW

[13:33:01.0000] <TabAtkins>
kk.  That saves me having to do so.

[13:36:00.0000] <TabAtkins>
lunch - be back in 2 hours

[13:44:00.0000] <GPHemsley>
sent

[13:46:00.0000] <GPHemsley>
tantek: I'm now on record with what I support. Still not sure whether that fits into that +1 list.

[13:47:00.0000] <tantek>
GPHemsley - the beginning of the section describes what is proposed

[13:47:01.0000] <tantek>
http://wiki.whatwg.org/wiki/Cite_element#speaker

[13:47:02.0000] <GPHemsley>
Yeah, I'm there

[13:47:03.0000] <GPHemsley>
it's kind of a dinky sentence

[13:48:00.0000] <GPHemsley>
it should probably be propped up with more direct wording, like "we all support this, that, and the other thing"

[13:48:01.0000] <GPHemsley>
IDK, just my opinion

[13:48:02.0000] <GPHemsley>
easy to miss

[13:49:00.0000] <tantek>
ok

[13:49:01.0000] <Philip`>
/me adds a -1, just to balance things out

[13:50:00.0000] <GPHemsley>
:P

[13:53:00.0000] <Dashiva>
Philip`: Make it -10 just in case

[13:55:00.0000] <tantek>
Philip` - I encourage you to add your opinion to the wiki, along with links to any supporting materials: http://wiki.whatwg.org/wiki/Cite_element#opinions

[13:55:01.0000] <tantek>
GPHemsley - reload that link - I've added a summary opinion sentence to address the issue you raised

[13:59:00.0000] <GPHemsley>
tantek: That's better, but it's still a little submissive and ambiguous. It should make clear what +1 means versus -1.

[14:04:00.0000] <Philip`>
tantek: Oh, I don't want to bother actually reading the page or having an informed opinion

[16:32:00.0000] <TabAtkins>
Goddammit, the lack of <di> or ::di strikes again!

[16:34:00.0000] <TabAtkins>
/me now has to rewrite his <dl> into a <ul> with headings and paragraphs, just to get it styled in a sane way.

[16:35:00.0000] <TabAtkins>
Actually, I'll rewrite it as <section>s.

[16:43:00.0000] <TabAtkins>
Huh.  I've got a weird rendering issue using figure and dt/dd in Firefox.  Dunno what's causing it, but if anyone wants to troubleshoot it with me in case it's something we need to worry about on the list, let me know.

[16:47:00.0000] <erlehmann>
TabAtkins, i liek figure.

[16:47:01.0000] <TabAtkins>
Wait, never mind.  I forgot to make <figure> display:block, so it was generating borders around empty line-boxes before and after its normal content.

[16:47:02.0000] <erlehmann>
TabAtkins, tellme.

[16:47:03.0000] <erlehmann>
lol

[16:47:04.0000] <erlehmann>
TabAtkins, line-boxes ?

[16:48:00.0000] <TabAtkins>
CSS term.  an inline element with block contents will still generate an anonymous inline block before and after the block contents.

[16:49:00.0000] <TabAtkins>
(Or rather, I think the collapsed whitespace between the element's start tag and the content element's start tag (similarly for end tags) causes it.)

[16:49:01.0000] <Hixie>
gsnedders|work: i replied to your e-mail (saying that i had no ideas), so if you don't get it, that could be indicative of a further problem


2009-10-07
[19:18:00.0000] <Dashiva>
Extensible ponies are the best

[22:17:00.0000] <StreVat>
Hello all

[22:18:00.0000] <StreVat>
Just getting started developing a blog here and I wanna take the opportunity to do what I can in html5

[22:18:01.0000] <StreVat>
if anyone has any prized examples, let me know!

[22:38:00.0000] <othermaciej>
if the entire main content of a document is an article, is it appropriate to use <article>?

[22:50:00.0000] <Hixie>
othermaciej: yes

[00:43:00.0000] <boblet>
StreVat: re HTML5 blog, two overviews of HTML5 sectioning elements (of most interest to authors) are:

[00:43:01.0000] <boblet>
http://edward.oconnor.cx/2009/09/using-the-html5-sectioning-elements

[00:43:02.0000] <boblet>
http://boblet.tumblr.com/post/141239118/html5-structure4

[00:44:00.0000] <boblet>
Also, http://html5doctor.com/ has a lot of good articles

[00:44:01.0000] <boblet>
any questions ask here, and someone will generally help you out

[00:48:00.0000] <hsivonen>
/me wonders how to make an eclipse project notice its Team function should now belong to MercurialEclipse--not Subclipse

[01:45:00.0000] <Hixie>
thanks to Ms2ger, HTML5 now has an index of elements

[01:46:00.0000] <nessy>
w00t!

[01:48:00.0000] <Philip`>
Rather than index, you should call it a periodic table

[01:49:00.0000] <othermaciej>
would anyone like to help me proofread http://dev.w3.org/html5/decision-policy/decision-policy.html before I send it to the HTML WG mailing list?

[01:53:00.0000] <Philip`>
othermaciej: Shouldn't the bug be closed in 5.b.?

[01:54:00.0000] <othermaciej>
Let me see

[01:54:01.0000] <Philip`>
(It seems bad to leave open bugs hanging around forever)

[01:54:02.0000] <Philip`>
s/in 5.b./somewhere in the path leading up to 5.b./

[01:55:00.0000] <othermaciej>
Philip`: that's more substantive feedback than proofreading - right now by design we don't close it in that case, since the originator could come back at some later point

[01:55:01.0000] <othermaciej>
Philip`: probably good feedback to post on the mailing list once I post this

[01:55:02.0000] <othermaciej>
Philip`: we did discuss a possibility like tagging with a keyword or marking CLOSED with a keyword after some period of time and no reply

[01:55:03.0000] <othermaciej>
PS I just fixed the broken anchor links

[01:56:00.0000] <Philip`>
/me reads the bit later on

[01:56:01.0000] <nessy>
othermaciej: that looks very helpful! will read later! gotta go talk about video a11y...

[01:56:02.0000] <Philip`>
Oh, it gets set to RESOLVED, so maybe that's enough

[01:56:03.0000] <othermaciej>
nessy: good luck

[01:56:04.0000] <nessy>
thanks :)

[01:56:05.0000] <othermaciej>
nessy: it will be in VERIFY by that point

[01:56:06.0000] <nessy>
just a 3 min webjam talk :)

[01:56:07.0000] <othermaciej>
er

[01:56:08.0000] <othermaciej>
meant that for Philip` 

[01:56:09.0000] <nessy>
no worries :)

[01:58:00.0000] <Philip`>
othermaciej: "its usually not a good idea to repeatedly reopen the same bug" - s//'/

[01:58:01.0000] <othermaciej>
hmm, is the state really VERIFIED or is it VERIFY? Can't remember

[01:59:00.0000] <zcorpan>
the former

[01:59:01.0000] <othermaciej>
all righty

[01:59:02.0000] <othermaciej>
Philip`: thanks, fixed in my copy

[02:00:00.0000] <hsivonen>
othermaciej: the arrow from 6. WG Decision to 7.a. is not properly anchored

[02:00:01.0000] <Philip`>
othermaciej: "Rasied issue" (in diagram)

[02:00:02.0000] <Hixie>
othermaciej: in step 2, is "A rationale for the change or lack of change (at least enough for the Disposition of Comments).", is saying nothing and just marking the bug fixed acceptable when the bug report is, e.g., a typo?

[02:01:00.0000] <Hixie>
othermaciej: or would the editor have to say "I corrected this because I agree that that is a spelling mistake" or something asinine like that

[02:01:01.0000] <hsivonen>
othermaciej: why does a bug have to include at least one fix suggestion?

[02:01:02.0000] <Philip`>
othermaciej: "settled amicably, If spec" - s/,/./

[02:01:03.0000] <othermaciej>
Hixie: for trivial typos where you accept the comment, no rationale is needed; would you like me to clarify explicitly?

[02:01:04.0000] <othermaciej>
hsivonen: it doesn't have to - that's a suggestion

[02:01:05.0000] <Hixie>
othermaciej: nah, just curious

[02:02:00.0000] <hsivonen>
othermaciej: also, sample spec text needs to be rewritten anyway to wash away copyright

[02:03:00.0000] <othermaciej>
hsivonen: I can remove that part of the suggestion, but in some cases, short pieces of sample spec text have been useful to Hixie

[02:03:01.0000] <othermaciej>
e.g. the XPath issue

[02:03:02.0000] <hsivonen>
othermaciej: oh, OK. in general Hixie has discouraged spec text

[02:03:03.0000] <Hixie>
the XPath issue was a very rare exception

[02:03:04.0000] <othermaciej>
I can imagine that in many cases they'll be useful for Manu's HTML+RDFa draft as well

[02:03:05.0000] <hsivonen>
othermaciej: ok

[02:03:06.0000] <othermaciej>
this policy is meant to apply to all deliverables that reach at least Working Draft status

[02:04:00.0000] <Hixie>
(with the XPath issue, what happened is that the commentor disagreed on an editorial basis, and I couldn't work out why without seeing what they thought was the right answer.)

[02:05:00.0000] <hsivonen>
othermaciej: is Bugzilla flexible enough to let bug reporters change state to CLOSED?

[02:06:00.0000] <hsivonen>
othermaciej: also, this doesn't cover anonymous comments from the WHATWG system

[02:06:01.0000] <othermaciej>
hsivonen: if you make an anonymous comment, then it is your choice to either identify yourself in the bug or let it stay in VERIFY whatever the resolution

[02:07:00.0000] <hsivonen>
othermaciej: I think you need a cutoff timeout for 5.b. Otherwise, there will be huge permathreads on when we can stop waiting.

[02:07:01.0000] <othermaciej>
hsivonen: I am sure MikeSmith can do the necessary bugzilla magic, but if not we can tweak that step

[02:07:02.0000] <othermaciej>
hsivonen: all right - I recommend giving that feedback on the list after I post this 

[02:07:03.0000] <othermaciej>
(don't want to make substantial changes right now)

[02:07:04.0000] <othermaciej>
Philip` made the same point and I agree

[02:08:00.0000] <hsivonen>
If I make that point on the list, there's a risk of a huge permathread right there

[02:09:00.0000] <othermaciej>
I'm inclined to say you get a month to reply to the editor's disposition but I don't want to change it right now since my co-chairs signed off on the substance of what is there now

[02:10:00.0000] <Hixie>
what's 5b?

[02:10:01.0000] <Hixie>
isn't that the "nobody replied" state?

[02:10:02.0000] <othermaciej>
yes

[02:11:00.0000] <Hixie>
there's no point having a cut-off for that -- someone not replying until after the cut-off is the same as someone filing a new bug

[02:11:01.0000] <Hixie>
in fact in general there's no difference between someone disagreeing and someone filing a new bug

[02:11:02.0000] <Hixie>
so there's no point having a cut-off

[02:13:00.0000] <hsivonen>
in that case, there should be some mechanism for deflecting dupes

[02:14:00.0000] <Dashiva>
Is there a consistent meaning to squares, diamonds and ovals?

[02:14:01.0000] <othermaciej>
dupes should be resolved DUPLICATE unless they contain new information

[02:15:00.0000] <othermaciej>
rounded rects are start or end points, rectangles are process steps, diamonds are decisions

[02:15:01.0000] <othermaciej>
per standard flowchart usage

[02:15:02.0000] <Philip`>
/me notes that the change proposal deadline doesn't particularly important, because you could always raise an identical issue months later and attach your change proposal

[02:15:03.0000] <Philip`>
s/doesn't/doesn't seem/

[02:15:04.0000] <Dashiva>
Escalation step 2b doesn't seem like a decision

[02:16:00.0000] <othermaciej>
oh that's because I forgot to add an arrow pointing to 2a

[02:16:01.0000] <othermaciej>
fixing...

[02:18:00.0000] <hsivonen>
What happens if the person who escalated a bug to ISSUE is willing to settle amicably but someone else wants to stir up trouble? does the other person have to restart the whole process?

[02:19:00.0000] <hsivonen>
there seems to be a loophole in the case where the editor has a co-conspirator:

[02:20:00.0000] <othermaciej>
then the issue stays RAISED and someone has to make a Change Proposal (presumably not the person who first raised it)

[02:20:01.0000] <hsivonen>
the co-conspirator escalates an issue, fails to produce a proposal and the issue gets closed and deferred to the next version of HTML

[02:20:02.0000] <othermaciej>
amicable resolution does not apply if somebody objects, but then it's up to them to drive the issue

[02:20:03.0000] <Dashiva>
Maybe there should be an option for bug reporters to close as INVALID if they realize they misunderstood or have been convinced in other channels?

[02:21:00.0000] <Dashiva>
Similar to amicable resolution in escalation

[02:21:01.0000] <othermaciej>
I'm assuming that is allowed, but I guess it could be spelled out more explicitly

[02:22:00.0000] <othermaciej>
hsivonen: what's the alternative - that someone else would have escalated it later when they had more time to write a Change Proposal?

[02:22:01.0000] <hsivonen>
othermaciej: right

[02:22:02.0000] <othermaciej>
hsivonen: multiple people can volunteer to make a Change Proposal, so to do that someone would have to lie about their intent to make one and convince others that it's one they will like

[02:23:00.0000] <hsivonen>
othermaciej: true

[02:23:01.0000] <Dashiva>
Well, with the right timing, maybe the people who care are all busy with other proposals, or on vacation, or something :)

[02:24:00.0000] <hsivonen>
othermaciej: shouldn't Proposal Details be required to come with a copyright waiver? 

[02:25:00.0000] <hsivonen>
or a super-permissive license, rather

[02:25:01.0000] <othermaciej>
I'm going to assume no one is going to escalate in bad faith - if we caught someone doing that, we'd likely treat it as a de facto amicable resolution (leaving someone else free to re-raise the issue or object or whatever)

[02:25:02.0000] <othermaciej>
we'd probably also have a stern talk with their AC rep

[02:25:03.0000] <Hixie>
what if they _are_ the AC rep? :-)

[02:26:00.0000] <Hixie>
(i don't understand the issue, personally. Why can't someone just write a proposal later, when they feel like it?)

[02:26:01.0000] <Dashiva>
What if they're an IE?

[02:26:02.0000] <othermaciej>
sure, anyone can write a proposal later - it can still be considered, it just won't be a blocker to wait for it

[02:27:00.0000] <hsivonen>
othermaciej: oh does the decision to defer to the next version of HTML get reversed if someone else re-escaletes the same issue?

[02:28:00.0000] <othermaciej>
hsivonen: I guess it's not very crisply defined as written

[02:28:01.0000] <Hixie>
there's no way to prevent that, as far as i can see; someone can always claim that the issue they are raising is subtly different

[02:28:02.0000] <Hixie>
(which is fine)

[02:28:03.0000] <Hixie>
ok, index is checked in. File bugs if you find any. I'm going to bed. nn.

[02:29:00.0000] <hsivonen>
ok. in that case, the process isn't vulnerable to trying to pre-empt decision by getting them deferred but the process is vulnerable to Denial of Productivity escalation flood

[02:29:01.0000] <othermaciej>
Dashiva: if you don't mind saying, what's your real world name (so I can credit you for finding a mistake in my commit message)

[02:29:02.0000] <hsivonen>
which may be something that isn't worth fixing unless a flood happens

[02:29:03.0000] <Dashiva>
othermaciej: Magnus Kristiansen

[02:30:00.0000] <othermaciej>
hsivonen: the intent is that for your escalation flood to really have an effect, you have to do some work - someone re-raising the same timed-out issue over and over would be bad-faith behavior though, which we'd have to address if someone did it

[02:30:01.0000] <hsivonen>
othermaciej: OK. 

[02:30:02.0000] <othermaciej>
I think I'm going to mail this to public-html, if there are no more obvious typos

[02:36:00.0000] <Philip`>
othermaciej: I think there's a big typo - you accidentally wrote whole pages of text, instead of "Hixie decides everything."

[02:36:01.0000] <othermaciej>
lol

[02:37:00.0000] <Dashiva>
So how does the process ensure that someone defined D.E. before a WG decision is made?

[02:38:00.0000] <hsivonen>
Dashiva: excellent point

[02:39:00.0000] <zcorpan>
D.E. == Dead End?

[02:39:01.0000] <hsivonen>
hehe

[02:43:00.0000] <zcorpan>
othermaciej: you have both "Full Working Group" and "full Working Group"

[02:44:00.0000] <othermaciej>
the Full shouldn't be capitalized

[02:44:01.0000] <othermaciej>
thanks

[03:19:00.0000] <gsnedders|work>
Hmm, pne of the issues on Web DOM Core says, "should we remove error checking altogether?", which looks to be impossible (as that will break websites!)

[03:20:00.0000] <gsnedders|work>
I wonder if it's more possible to go the other way, and require the DOM to represent well-formed XML

[03:20:01.0000] <gsnedders|work>
The current middle-ground is just idiotic

[03:20:02.0000] <hsivonen>
gsnedders|work: what site patterns rely on DOM Core error checking?

[03:20:03.0000] <jgraham>
gsnedders|work: I doubt it

[03:20:04.0000] <hsivonen>
gsnedders|work: you can't require a DOM to be serializable without breaking L1 colon usage

[03:21:00.0000] <gsnedders|work>
hsivonen: A lot of those that use e.g., document.createElement("<div class=foobar>") for IE rely upon that throwing an exception to have their code work in other browsers

[03:21:01.0000] <gsnedders|work>
hsivonen: Ah yeah, that's true

[03:21:02.0000] <gsnedders|work>
hsivonen: And would break RDFa, totally :P

[03:21:03.0000] <othermaciej>
gsnedders|work: wait, that works in IE?

[03:21:04.0000] <gsnedders|work>
othermaciej: Yes.

[03:22:00.0000] <othermaciej>
/me facepalms

[03:22:01.0000] <jgraham>
gsnedders|work: But there are downsides too, rihgt? ;)

[03:22:02.0000] <gsnedders|work>
othermaciej: Firefox supports it without attributes in quirks mode

[03:22:03.0000] <hsivonen>
gsnedders|work: ouch. so we can't make that syntax work in other browsers?

[03:22:04.0000] <hsivonen>
gsnedders|work: IIRC, Gecko had some half-way magic on that point

[03:22:05.0000] <othermaciej>
we've never supported anything like that in WebKit afaik

[03:22:06.0000] <gsnedders|work>
hsivonen: We could, but I don't like the idea of making DOM rely upon having an HTML tokenizer around

[03:22:07.0000] <hsivonen>
gsnedders|work: does the Web expect document.createElement("<div>") to create a div element, though?

[03:22:08.0000] <gsnedders|work>
othermaciej: Nor does Opera. It doesn't cause any site compat issues I've found

[03:22:09.0000] <gsnedders|work>
hsivonen: No

[03:23:00.0000] <hsivonen>
hmm.

[03:23:01.0000] <gsnedders|work>
Anyhow, lunch

[03:23:02.0000] <jgraham>
hsivonen: (except in IE)

[03:23:03.0000] <othermaciej>
if sites depended on that working and not throwing, I would expect compat bugs, since scripts unexpectedly throwing tends to cause severe failure modes

[03:25:00.0000] <hsivonen>
jgraham, gsnedders|work: my recollection was right. Gecko does have the half-way magic in the quirks mode

[03:25:01.0000] <hsivonen>
http://mxr.mozilla.org/mozilla-central/source/content/html/document/src/nsHTMLDocument.cpp#1208

[03:26:00.0000] <hsivonen>
if the argument starts with < and ends with >, those characters are stripped in the quirks mode before proceeding

[03:27:00.0000] <othermaciej>
indeed I see the code doing that

[03:28:00.0000] <hsivonen>
(I mentioned what the code does in case people are prohibited from looking at code on MXR.)

[03:30:00.0000] <hsivonen>
https://bugzilla.mozilla.org/show_bug.cgi?id=245274

[03:30:01.0000] <hsivonen>
https://bugzilla.mozilla.org/show_bug.cgi?id=245274#c7

[03:32:00.0000] <jgraham>
Interesting

[03:32:01.0000] <jgraham>
Is there other DOM stuff that depends on the quirkiness of the document?

[03:33:00.0000] <hsivonen>
jgraham: IIRC, yes

[03:33:01.0000] <othermaciej>
interesting - we never got those reports

[03:33:02.0000] <othermaciej>
(though we have had many bug reports from IBM on problems with their enterprise web apps)

[03:34:00.0000] <jgraham>
(I note in his absence that gsnedders|work found some stuff that used this to detect IE vs non IE and give them diffeent code paths)

[03:34:01.0000] <jgraham>
(and so broke in Gecko)

[03:34:02.0000] <jgraham>
(but I'm not sure how much)

[03:34:03.0000] <othermaciej>
wild

[03:35:00.0000] <hsivonen>
getElementsByClassName() 

[03:36:00.0000] <hsivonen>
scroll info for body

[03:37:00.0000] <hsivonen>
document.all

[03:37:01.0000] <hsivonen>
color parsing

[03:37:02.0000] <hsivonen>
in attribute values

[03:39:00.0000] <hsivonen>
various attributes in tables

[03:41:00.0000] <zcorpan>
http://forums.whatwg.org/viewtopic.php?p=5274#5281

[03:42:00.0000] <zcorpan>
othermaciej: "These components are not absolutely mandatory for a bug reports." s/a bug/all bug/

[03:43:00.0000] <othermaciej>
zcorpan: thanks

[03:43:01.0000] <zcorpan>
othermaciej: i thought bugs with insufficient information would be RESOLVED NEEDSINFO?

[03:43:02.0000] <othermaciej>
zcorpan: I guess it depends on the nature of what is missing

[03:44:00.0000] <othermaciej>
zcorpan: can you send that feedback to public-html please? I'd rather have substantive feedback on the list

[03:45:00.0000] <zcorpan>
ok

[04:08:00.0000] <gsnedders|work>
othermaciej: We've never had bug reports about it either

[04:08:01.0000] <gsnedders|work>
As far as I can tell, Gecko's half-way state is the worst for web compat

[04:13:00.0000] <jgraham>
gsnedders|work: But possibly the best for intranet compat :(

[04:22:00.0000] <gsnedders|work>
hsivonen: How many of the quirks do you think need to be in Web DOM Core and not HTML 5?

[04:23:00.0000] <othermaciej>
anything specific to HTML APIs should clearly be in HTML5

[04:23:01.0000] <othermaciej>
core DOM quirks, I could see an argument either way

[04:23:02.0000] <othermaciej>
though it would be nice if DOM Core itself could be kept free of quirks-mode-specific behaviors

[04:25:00.0000] <gsnedders|work>
That's what I think too. I'm just trying to think of whether there are any quirks that need to be in DOM Core

[04:27:00.0000] <gsnedders|work>
The fact that neither WebKit nor Opera supports the <…> createElement fun is encouraging, though it's unclear whether intranet stuff relies upon it stil.

[04:27:01.0000] <hsivonen>
gsnedders|work: they can all be in HTML5 if you accept the delta spec section in HTML5 that already modifies DOM Core

[04:27:02.0000] <othermaciej>
well that createElement quirk would be a candidate, but I'm hoping it's safe to just drop

[04:27:03.0000] <othermaciej>
the other things hsivonen mentioned are specific to HTML APIs I think not DOM Core APIs

[04:27:04.0000] <hsivonen>
/me wonders how much IBM intranet stuff relies on IE Custom Tags

[04:28:00.0000] <hsivonen>
depends on whether one views document.all as HTML or Core

[04:28:01.0000] <othermaciej>
true; you could put document.all in Core

[04:28:02.0000] <hsivonen>
though one might argue that Gecko is wrong to make document.all conditional on the quirkiness

[04:28:03.0000] <othermaciej>
in WebKit I believe we expose undetectable document.all in all modes

[04:29:00.0000] <gsnedders|work>
hsivonen: There's no way around having HTML 5 modify certain behaviours for HTMLDocumnent and HTMLElement AFAIK. I'd rather document.all was HTMLDocument.all

[04:29:01.0000] <gsnedders|work>
I really don't see any reason for that to create onto Document.all

[04:29:02.0000] <hsivonen>
gsnedders|work: how does that help when HTML5 requires all document objects to implement HTMLDocument and SVGDocument anyway?

[04:30:00.0000] <othermaciej>
since HTML5 requires all document objects to implement HTMLDocument and SVGDocument, there's not much practical benefit to moving APIs from HTML5 to DOM Core

[04:30:01.0000] <hsivonen>
keeping Core clean and applying a delta in HTML5 reminds me of the latest TAG minutes

[04:30:02.0000] <othermaciej>
just a potential question for spec purity

[04:30:03.0000] <othermaciej>
for cases where HTML5 modifies the behavior of existing DOM Core methods, that should ideally be in DOM Core

[04:31:00.0000] <othermaciej>
those aren't quirks, just changes (applicable only to HTML documents)

[04:31:01.0000] <gsnedders|work>
othermaciej: Some of those are specific to HTML documents though

[04:31:02.0000] <gsnedders|work>
othermaciej: And it seems silly for those to be in DOM Core when they only apply to HTML documents

[04:31:03.0000] <othermaciej>
I wonder if it would be useful to expose the HTMLness bit of the Document in some more explicit way

[04:32:00.0000] <othermaciej>
gsnedders|work: at the very least DOM Core should be written in a way that HTML5 doesn't have to *contradict* it

[04:32:01.0000] <othermaciej>
I think it would be fine to have an extension point instead of specifying html document behaviors directly

[04:32:02.0000] <othermaciej>
though that creates a bit more risk that things fall through the cracks between the documents

[04:33:00.0000] <gsnedders|work>
othermaciej: How can we avoid having HTMLDocument override things like createElement though, to do case-insensitive creation?

[04:33:01.0000] <othermaciej>
I think it would be fine for DOM Core to be aware of the idea of XML documents and HTML documents as different things

[04:33:02.0000] <othermaciej>
gsnedders|work: that's a property of being an "html document" (as opposed to an xml document), not a property of the HTMLDocument interface

[04:54:00.0000] <hsivonen>
based on the test case Opera and WebKit don't do the magic

[04:54:01.0000] <zcorpan>
the test might be bogus for opera

[04:54:02.0000] <othermaciej>
we do look at the namespaceURI parameter to createDocument() to decide what document interface to create

[04:55:00.0000] <othermaciej>
we do not yet do the HTML5 thing of all interfaces on all documents

[04:56:00.0000] <hsivonen>
/me goes file a bug

[05:00:00.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/263 has a correct test for opera

[05:01:00.0000] <zcorpan>
when i think about it, i'm not sure opera has the htmlness bit on the document, but has it on elements instead

[05:02:00.0000] <zcorpan>
uh, that test is still bogus

[05:03:00.0000] <zcorpan>
a HEAD element is inserted...

[05:03:01.0000] <zcorpan>
/me gives up

[05:03:02.0000] <gsnedders|work>
Honestly, can't you write a non-bogus test?

[05:03:03.0000] <zcorpan>
no

[05:05:00.0000] <hsivonen>
ttps://bugzilla.mozilla.org/show_bug.cgi?id=520969

[05:05:01.0000] <hsivonen>
https://bugzilla.mozilla.org/show_bug.cgi?id=520969

[05:07:00.0000] <hsivonen>
/me wishes Congress took the Eastern District of Texas out of business already

[05:08:00.0000] <hsivonen>
or SCOTUS if the Congress can't get their act together

[05:08:01.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/264 is non-bogus for opera (but bogus for others)

[06:17:00.0000] <Philip`>
/me wonders why http://www.quirksmode.org/webkit.html includes Konqueror 3.5 in its list of WebKits

[07:03:00.0000] <zcorpan>
http://simon.html5.org/dump/html+js+css+atom.html - a file that is interpreted as html, as js, as css and as atom at the same time

[07:03:01.0000] <zcorpan>
works in firefox at least

[07:03:02.0000] <zcorpan>
the atom part doesn't seem to work in opera

[07:05:00.0000] <Rik|work>
Philip`: I even wonder if Konqueror is on a phone

[07:05:01.0000] <TabAtkins>
Heh, interesting zcorpan.

[07:06:00.0000] <zcorpan>
hmm i have a css syntax error at the end

[07:07:00.0000] <zcorpan>
solved

[07:07:01.0000] <jgraham>
You need a hobby

[07:07:02.0000] <jgraham>
A better one I mean

[07:07:03.0000] <Philip`>
zcorpan: Make it a PNG too

[07:08:00.0000] <zcorpan>
Philip`: how?

[07:08:01.0000] <Philip`>
That's your problem, not mine :-p

[07:08:02.0000] <zcorpan>
i tried making it SVG too but couldn't find a way to link it in and being rendered as SVG

[09:53:00.0000] <mpilgrim>
i committed a few fixes to the python3 branch of html5lib

[09:53:01.0000] <mpilgrim>
it crashes less now

[09:54:00.0000] <mpilgrim>
i haven't tried anything crazy like running the test suite

[09:56:00.0000] <jgraham>
mpilgrim: I noticed, thanks

[09:56:01.0000] <mpilgrim>
what is the status of the python3 port?

[09:57:00.0000] <jgraham>
It was an experimental 1 weekend hack to see if it would work

[09:57:01.0000] <mpilgrim>
that's what i suspected

[09:57:02.0000] <jgraham>
It is not up to date wrt to the trunk 

[09:57:03.0000] <mpilgrim>
how far behind is it?

[09:58:00.0000] <jgraham>
More to the point I don't really know how to do parallel maintainance of the python 3 and python 2 versions without lots of manual work porting patches

[09:58:01.0000] <mpilgrim>
neither do i

[09:58:02.0000] <jgraham>
mpilgrim: A few months but not a huge amount has happened in that time

[09:58:03.0000] <gsnedders>
s/in/to the Python port in/

[09:59:00.0000] <mpilgrim>
i managed to get it to work with a string input

[09:59:01.0000] <mpilgrim>
i can't get it to work with a file

[09:59:02.0000] <mpilgrim>
er, file object

[09:59:03.0000] <jgraham>
mpilgrim: I remember that I couldn't decide how to deal with file input

[09:59:04.0000] <mpilgrim>
it complains that binary files are not supported

[09:59:05.0000] <mpilgrim>
even though i opened the file in non-binary mode

[09:59:06.0000] <jgraham>
hmm

[10:00:00.0000] <jgraham>
The problem I remember is that html5lib really really wants bytestreams

[10:00:01.0000] <mpilgrim>
but if i read the file myself and pass a python string to the parser, it works

[10:00:02.0000] <jgraham>
not files with encodings

[10:00:03.0000] <jgraham>
a string not a byte (whatever the name is)?

[10:00:04.0000] <Philip`>
Is it possible for core parts of html5lib to be written in a common subset of Pythons 2 and 3, and just use version-specific ports for the stuff around the edges?

[10:00:05.0000] <Philip`>
or are the differences more fundamental?

[10:01:00.0000] <jgraham>
Philip`: I think the differences are more non-trivial than that

[10:01:01.0000] <jgraham>
For example .iteritems v .items

[10:01:02.0000] <mpilgrim>
it might be possible to structure some of the code in such a way that it can be automatically converted to (or from) python 3

[10:02:00.0000] <mpilgrim>
that will cover things like syntax differences in importing relative paths within the codebase

[10:02:01.0000] <mpilgrim>
and print statements

[10:02:02.0000] <mpilgrim>
and such

[10:02:03.0000] <mpilgrim>
the big problem is python 2 has "strings" and "unicode strings"

[10:02:04.0000] <mpilgrim>
while python 3 has "bytes" and "unicode strings"

[10:03:00.0000] <mpilgrim>
python 2 implicitly converts between them

[10:03:01.0000] <mpilgrim>
python 3 does not

[10:03:02.0000] <jgraham>
Yeah, so like I said html5lib really wants bytes, always

[10:04:00.0000] <jgraham>
because it really wants to figure out the encoding on its own

[10:04:01.0000] <jgraham>
But then internally everything should be unicode strings

[10:05:00.0000] <gsnedders>
It should cope fine with getting a Unicode string though

[10:06:00.0000] <gsnedders>
And should just do no decoding of any sort whatsoever

[10:06:01.0000] <jgraham>
gsnedders: Well you can't really do that and implement the spec

[10:06:02.0000] <jgraham>
Or maybe you can and treat it like a HTTP header

[10:06:03.0000] <gsnedders>
jgraham: If you already know the encoding you don't need to detect it

[10:07:00.0000] <mpilgrim>
well, some parts of html5lib can certainly be made python-version-independent

[10:07:01.0000] <jgraham>
Yeah fair enough

[10:07:02.0000] <jgraham>
(that was aimed at gsnedders)

[10:07:03.0000] <gsnedders>
jgraham: It makes no sense to do anything else with Unicode strings

[10:07:04.0000] <mpilgrim>
or at least automatically-convertible

[10:07:05.0000] <mpilgrim>
constants.py, for example, could be automatically converted

[10:08:00.0000] <jgraham>
mpilgrim: I think it should be possible to make most of the code except some parts of inputstream.py automatically convertable

[10:08:01.0000] <jgraham>
But that is just conjecture

[10:08:02.0000] <gsnedders>
It's being transported within memory and that has a defined encoding, so step 1 of the encoding sniffing algorithm applies.

[10:09:00.0000] <jgraham>
gsnedders: (I seem to remember that there was still some reason you wanted a byte array but I don't recall what it was... maybe to do with replacement characters or something?)

[10:09:01.0000] <gsnedders>
jgraham: That was in PHP, no?

[10:09:02.0000] <jgraham>
gsnedders: No

[10:25:00.0000] <mpilgrim>
html5lib/utils.py can be safely auto-converted

[10:26:00.0000] <mpilgrim>
grr

[10:26:01.0000] <mpilgrim>
html5lib/constants.py contains some strings that are later used in %-replacement string formatting

[10:28:00.0000] <zcorpan_>
MikeSmith: did you hear from someone about trouble with bugzilla account?

[10:29:00.0000] <mpilgrim>
html5lib/ihatexml.py can be safely auto-converted

[10:31:00.0000] <jgraham>
mpilgrim: Do the strings correspond to the error messages? I'm not sure that feature provides much value

[10:31:01.0000] <mpilgrim>
python3/html5lib/sanitizer.py appears to be out of date, but i think it can be safely auto-converted too

[10:31:02.0000] <mpilgrim>
yes

[10:31:03.0000] <mpilgrim>
there are strings like

[10:31:04.0000] <mpilgrim>
    "cant-convert-numeric-entity":

[10:31:05.0000] <mpilgrim>
       _(u"Numeric entity couldn't be converted to character "

[10:31:06.0000] <mpilgrim>
         u"(codepoint U+%(charAsInt)08x)."),

[10:32:00.0000] <mpilgrim>
and others like

[10:32:01.0000] <mpilgrim>
    "expected-closing-tag-but-got-char":

[10:32:02.0000] <mpilgrim>
       _(u"Expected closing tag. Unexpected character '%(data)s' found."),

[10:32:03.0000] <mpilgrim>
basically, search the file for occurrences of the "%" character

[10:32:04.0000] <mpilgrim>
some of them do provide quite a bit of value

[10:32:05.0000] <mpilgrim>
for example:

[10:32:06.0000] <mpilgrim>
    "unexpected-end-tag":

[10:32:07.0000] <mpilgrim>
       _(u"Unexpected end tag (%(name)s). Ignored."),

[10:33:00.0000] <mpilgrim>
i don't want to strip that information

[10:33:01.0000] <mpilgrim>
but string formatting in py3 is completely different

[10:34:00.0000] <jgraham>
Well it is not impossible to make some compatibility function for templating in either language

[10:34:01.0000] <Philip`>
/me wonders when an HTML WG telcon announcement email last got all the dates and times correct

[10:35:00.0000] <Philip`>
(or even just self-consistent)

[10:37:00.0000] <mpilgrim>
python3/html5lib/tokenizer.py is badly out of date

[10:37:01.0000] <mpilgrim>
but as far as i can tell, it only deals with unicode strings

[10:39:00.0000] <mpilgrim>
html5lib/tokenizer.py contains this line:

[10:39:01.0000] <mpilgrim>
char = eval("u'\\U%08x'" % charAsInt)

[10:39:02.0000] <mpilgrim>
which is quite funky and will fail in py3

[10:39:03.0000] <mpilgrim>
and will not be auto-converted to anything useful

[10:40:00.0000] <mpilgrim>
perhaps we can split that out into a separate function in a separate file

[10:40:01.0000] <mpilgrim>
because other than that, i believe tokenizer.py can be safely auto-converted

[10:41:00.0000] <jgraham>
That could probably be rewritten not to use string formatting

[10:41:01.0000] <mpilgrim>
or eval

[10:41:02.0000] <jgraham>
Yeah :)

[10:42:00.0000] <jgraham>
/me wonders who wrote that code in the first place

[10:42:01.0000] <jgraham>
I'm pretty sure it wasn't me

[10:42:02.0000] <mpilgrim>
html5parser.py is too badly out of date for me to tell whether auto-conversion would work

[10:45:00.0000] <mpilgrim>
actually, the old-style string formatting still works in python 3.1

[10:45:01.0000] <mpilgrim>
it's just deprecated

[10:45:02.0000] <mpilgrim>
so we can ignore the problems in constants.py, for now

[10:45:03.0000] <mpilgrim>
(though that eval still wouldn't work, since it uses the u"" form that no longer exists)

[10:47:00.0000] <mpilgrim>
html5lib/filters/* can all be safely auto-converted

[10:47:01.0000] <mpilgrim>
(lint.py uses %-style string formatting though)

[10:52:00.0000] <mpilgrim>
html5lib/serializer/htmlserializer.py contains a call to reduce()

[10:52:01.0000] <mpilgrim>
which should probably be rewritten with a for loop

[10:53:00.0000] <mpilgrim>
after which, html5lib/serializer/* could be safely auto-converted

[10:54:00.0000] <mpilgrim>
html5lib/treebuilders/__init__.py contains several import statements not on the top level

[10:54:01.0000] <mpilgrim>
those do not get auto-converted by 2to3

[10:55:00.0000] <Dashiva>
reduce is gone?

[10:55:01.0000] <Dashiva>
I'm so out of it

[10:55:02.0000] <mpilgrim>
Dashiva: http://diveintopython3.org/porting-code-to-python-3-with-2to3.html#reduce

[10:55:03.0000] <mpilgrim>
and those import statements are broken in py3

[10:56:00.0000] <mpilgrim>
they need to be rewritten using the new syntax for relative imports

[10:56:01.0000] <mpilgrim>
but since they're not at the top level of the module, 2to3 won't rewrite them

[10:56:02.0000] <mpilgrim>
not sure what to do about that, except fork it

[10:57:00.0000] <Philip`>
Write a custom preprocessor

[10:58:00.0000] <mpilgrim>
not sure it's worth it

[10:59:00.0000] <mpilgrim>
html5lib/treebuilders/_base.py can be safely auto-converted

[11:02:00.0000] <mpilgrim>
treebuilders/dom.py is out of date, but i believe it can be safely auto-converted

[11:04:00.0000] <mpilgrim>
treebuilders/etree.py is out of date, and it uses %-style string formatting, but i believe it can be safely auto-converted

[11:06:00.0000] <mpilgrim>
treebuilders/etree_lxml.py is out of date, and it uses %-style string formatting, but i believe it can be safely auto-converted

[11:06:01.0000] <mpilgrim>
i'm not entirely sure though

[11:07:00.0000] <mpilgrim>
it has some relative imports that 2to3 might choke on

[11:07:01.0000] <zcorpan_>
wouldn't the justgiving example in http://html5doctor.com/measure-up-with-the-meter-tag/ use <progress>?

[11:08:00.0000] <mpilgrim>
treebuilders/simpletree.py can be safely auto-converted

[11:08:01.0000] <TabAtkins>
zcorpan_: Yeah, that's a <progress>.

[11:11:00.0000] <zcorpan_>
what do people think should happen for data:text/xml,<!DOCTYPE x [<?xml-stylesheet href='data:text/css,x{background:papayawip}'?>]><x/>

[11:11:01.0000] <mpilgrim>
treebuilders/soup.py is out of date, and it uses %-style string formatting, but i believe i can be safely auto-converted

[11:11:02.0000] <zcorpan_>
xml-stylesheet 1st ed says it should be applied

[11:12:00.0000] <zcorpan_>
ie and webkit apply it, firefox and opera don't

[11:12:01.0000] <zcorpan_>
s/papayawip/papayawhip/

[11:23:00.0000] <TabAtkins>
zcorpan_: I don't see any particular reason to think it shouldn't be applied.  Is the issue the nesting of data: urls, or just whether or not xml-stylesheet should accept data: urls?

[11:23:01.0000] <TabAtkins>
(In either case, I think it should be fine.)

[11:23:02.0000] <jgraham>
mpilgrim: To find out just what can't be auto-converted it might be better to start from the python 2 trunk -- except inputstream.py -- 2to3 everything else, see where things break, and try to fix up the python 2 source so they don't break anymore

[11:23:03.0000] <zcorpan_>
TabAtkins: no, the question is whether a PI in the internal subset should be applied as an xml-stylesheet PI for the document

[11:24:00.0000] <zcorpan_>
TabAtkins: or whether it should be ignored

[11:30:00.0000] <TabAtkins>
zcorpan_: Oh, okay.  Sorry for the noise then.  I have no opinion.

[11:30:01.0000] <zcorpan_>
ok

[11:42:00.0000] <Philip`>
zcorpan_: Why would it be ignored?

[11:42:01.0000] <Philip`>
/me doesn't see why it'd be different to e.g. inserting a <style> element via the internal subset

[11:43:00.0000] <zcorpan_>
Philip`: you can't have elements in the internal subset

[11:44:00.0000] <zcorpan_>
you can have an entity declaration in the internal subset and then an entity reference somewhere that expands to a <style> element, but that's not the same thing

[11:45:00.0000] <Philip`>
Oh

[11:48:00.0000] <zcorpan_>
PIs in the internal subset are not represented in the DOM at all, other than part of the internalSubset attribute which is just a DOMString

[11:48:01.0000] <zcorpan_>
(which is tentatively dropped in web dom core)

[11:54:00.0000] <mpilgrim>
jgraham: yeah, i was expecting more breakage than i found looking through diffs

[12:03:00.0000] <zcorpan_>
if someone can find any content that uses an xml-stylesheet PI in the internal (or external) subset, or can provide data about lack of such content, i would appreciate it

[12:05:00.0000] <Philip`>
/me can't, since he can barely even find page that use XHTML

[12:05:01.0000] <Philip`>
*pages

[12:06:00.0000] <borismus>
 /j cmu

[12:06:01.0000] <erlehmann>
my page does. and occasionally breaks

[12:08:00.0000] <Philip`>
erlehmann: Your site is http://blog.dieweltistgarnichtso.net/ ?

[12:08:01.0000] <Philip`>
Even http://blog.dieweltistgarnichtso.net/?s=cheese breaks

[12:08:02.0000] <Philip`>
never mind http://blog.dieweltistgarnichtso.net/?s=%ef%bf%bf

[12:08:03.0000] <erlehmann>
every search term breaks it. havent updated the theme for a while.

[12:09:00.0000] <Philip`>
The second one breaks it more than the first, though :-p

[12:10:00.0000] <erlehmann>
damn wordpress

[12:10:01.0000] <Philip`>
erlehmann: Blame XML

[12:10:02.0000] <Philip`>
It makes these things far too complex

[12:11:00.0000] <erlehmann>
no i dont.

[12:11:01.0000] <erlehmann>
u just haven't got a good token-thingy

[12:11:02.0000] <erlehmann>
hopefully html5lib will change that

[12:12:00.0000] <erlehmann>
but the theme devs as well as wordpress devs CLAIMED it could do xhtml

[12:12:01.0000] <Philip`>
/me wouldn't mind draconian error handling of element syntax and nesting, because that's pretty trivial to get right; it's just the obscure little edge cases of invalid characters or forbidden sequences of characters or forbidden names or forbidden attribute values that are a huge pain to protect against

[13:00:00.0000] <zcorpan_>
/me doesn't see an internal subset in http://blog.dieweltistgarnichtso.net/

[13:09:00.0000] <Philip`>
zcorpan_: I think he just meant his page uses XHTML

[13:57:00.0000] <tantek>
greetings - anybody here know who has admin privs on http://wiki.whatwg.org/ ?

[13:57:01.0000] <tantek>
there's been a couple of spam pages added (see http://wiki.whatwg.org/wiki/Special:RecentChanges ) and I'd like to help out by deleting them and blocking the spammers

[14:23:00.0000] <jgraham>
tantek: I don't. I seem o recall that Lachy does but he is away. Hixie does too of course

[14:23:01.0000] <tantek>
thanks jgraham.

[14:24:00.0000] <tantek>
Hixie, Lachy, there's been a couple of spam pages added (see http://wiki.whatwg.org/wiki/Special:RecentChanges ) and I'd like to help out by volunteering to be a wiki admin to delete and block  spammers.


2009-10-08
[20:44:00.0000] <Lachy>
hey, anyone in here have any idea about topics I should try to cover in a panel about the state of the web as a platform?  So far I have web storage/database, appcache, workers, video/audio, canvas.

[20:47:00.0000] <Lachy>
the panel is a discussion between browser vendor reps, adobe flash and W3C, talking about the web as a platform. Though, it's in the business track, so it has a business focuss rather than an overly technical focus

[21:19:00.0000] <MikeSmith>
Lachy: Web Sockets

[00:50:00.0000] <othermaciej>
the HTML5 editor's draft is now in my Top Sites in Safari

[00:51:00.0000] <othermaciej>
I guess I should only be surprised that it wasn't before

[01:49:00.0000] <jgraham>
/me wonders if Philip` has enough data to determine if detecting the encoding from the XML prolog is needed

[02:03:00.0000] <Philip`>
jgraham: Seems hard to analyse - I can't just autodetect the charset and then compare against the correct charset, because the only way I can determine the correct charset is by guessing based on the autodetection

[02:05:00.0000] <gsnedders>
Philip`: Number of errors when decoding?

[02:05:01.0000] <jgraham>
Philip`: Yeah I know it's not easy. Perhaps just find pages for which the XML prolog makes a difference and then manually decide if they are better or worse with the XML prolog charset

[02:06:00.0000] <jgraham>
gsnedders: It doesn't seem like the differences would neccesarily be errors though?

[02:06:01.0000] <gsnedders>
jgraham: Right, I know, it's a limitation, but I can't see any better way to do it withoiut manual inspection of every file

[02:07:00.0000] <jgraham>
gsnedders: Right but there might only be a handful of files where it makes a difference

[02:07:01.0000] <jgraham>
If there's not just inspecting the first few should give an idea if it makes it better or worse

[02:08:00.0000] <Philip`>
gsnedders: Number of errors doesn't help when the default fallback is Win1252 and everything decodes with zero errors

[02:09:00.0000] <gsnedders>
Philip`: If the other encoding also decodes with zero errors? I know that it will always decode with zero with the fallback.

[02:10:00.0000] <Philip`>
/me doesn't even know whether he's currently decoding pages correctly using the current algorithm, and doesn't know an easy way to test it

[02:10:01.0000] <Philip`>
(I think I attempt to put the content-type charset into some stream object and then let the validator.nu parser sort it out, or something, but it seems to go wrong in a lot of cases)

[03:17:00.0000] <smaug>
Hixie: do you have plans to fix history session in HTML5? I'll propose something if I figure out how I'd like it to work.

[03:18:00.0000] <Hixie>
i wasn't aware that it was broken

[03:18:01.0000] <Hixie>
if it's broken, then i plan to fix it

[03:19:00.0000] <smaug>
Hixie: I sent an email about it

[03:19:01.0000] <Hixie>
ah then i have plans to read and respond to your e-mail, yes

[03:19:02.0000] <Hixie>
it'll be in my queue somewhere

[03:20:00.0000] <Hixie>
is it urgent?

[03:20:01.0000] <smaug>
it doesn't explain how iframe history works in previous top level pages

[03:20:02.0000] <Hixie>
(i plan to basically respond to all outstanding bugs and e-mails by the end of the month)

[03:20:03.0000] <smaug>
well, I'd like to implement it, like now :)

[03:21:00.0000] <Hixie>
ah ok

[03:21:01.0000] <Hixie>
let me see if i can give you a preliminary answer

[03:24:00.0000] <Hixie>
do you know if there are compatibility concerns here?

[03:25:00.0000] <Hixie>
looks like IE8 does what the spec says right?

[03:26:00.0000] <smaug>
browsers implement go() in different ways, so perhaps no compatibility concerns 

[03:26:01.0000] <smaug>
IE8 is quite close

[03:26:02.0000] <smaug>
those its back button doesn't map to go() handling. Maybe that is UA dependent thing

[03:27:00.0000] <smaug>
s/those/though/

[03:28:00.0000] <smaug>
Hixie: still, what in the spec explains that the previous top level page should load latest iframe document?

[03:29:00.0000] <roc>
dammit

[03:29:01.0000] <smaug>
the draft doesn't really say anything about what should happen to sub-browsing contexts when previous top level page is loaded

[03:30:00.0000] <roc>
I thought I found an ambiguity in the spec, but I was wrong

[03:30:01.0000] <Hixie>
what IE8 does seems to have security advantages, though it does mean that for go(x) where |x| > 1 the back button doesn't match the API

[03:30:02.0000] <Hixie>
dunno if that's a problem

[03:31:00.0000] <Hixie>
smaug: hold on, minor cat emergency

[03:33:00.0000] <roc>
is it documented what the owner document is for an element created with "new Audio()"?

[03:36:00.0000] <zcorpan_>
roc: what happens for new Image()?

[03:36:01.0000] <roc>
no idea

[03:37:00.0000] <roc>
I *assume* that you use the document of the current global object, which must be a Window

[03:37:01.0000] <roc>
I'm not JS-savvy enough to know if you can get into a situation where there is no Window in scope

[03:38:00.0000] <roc>
but the spec doesn't seem to say, or if it does, I don't know where

[03:38:01.0000] <othermaciej>
the spec doesn't say what the owner document should be (very clearly)

[03:39:00.0000] <othermaciej>
it should say invoking the Audio constructor is equivalent to document.createElement() followed by setting some attributes

[03:39:01.0000] <othermaciej>
or something like that

[03:39:02.0000] <roc>
it can't say that since 'document' might refer to something strange

[03:40:00.0000] <zcorpan_>
/me files a bug

[03:40:01.0000] <smaug>
roc: yeah, at least gecko finds the document from caller and uses that as owner document

[03:42:00.0000] <Hixie>
smaug: ok back

[03:43:00.0000] <Hixie>
smaug: assuming we do go with the IE8 model, then a literal reading of the spec would mean that when you go back, you just end up in whatever state you happened to last be when that top-level browsing context last had that document active

[03:43:01.0000] <Hixie>
smaug: which means that if you were to go to A-2, then fast-forward to B-2, then go(-2), you should end up at A-2 again

[03:44:00.0000] <Hixie>
smaug: even though going go(+1) from there would take you to A-3

[03:44:01.0000] <Hixie>
smaug: and then going go(+1) again would take you to B-2, not B-1

[03:44:02.0000] <roc>
smaug: do you happen to know what happens if we call new Audio in a context where there is no document? like say a JS XPCOM component? (this is obviously beyond the realm of HTML5)

[03:44:03.0000] <Hixie>
i guess we should see what IE does with those cases

[03:44:04.0000] <smaug>
roc: I don't think that is supported

[03:45:00.0000] <roc>
ok, but what happens? :-)

[03:45:01.0000] <smaug>
roc: calling the constructor fails

[03:45:02.0000] <Hixie>
smaug: can you stick a javascript:go(-2) and a javascript:go(+1) to A-2, A-3, B-1, and B-2?

[03:45:03.0000] <roc>
ok

[03:46:00.0000] <smaug>
/me boots a windows machine

[03:46:01.0000] <Hixie>
woo, IE8 does do what i said for the first thing i described

[03:46:02.0000] <Hixie>
the go(-2) case where you navigated the history as i described

[03:47:00.0000] <Hixie>
and then clicking forward from A-2 goes to A-3, and from there goes to B-2

[03:47:01.0000] <Hixie>
and clicking back there goes to B-1

[03:47:02.0000] <Hixie>
not saying that's the most understandable UI

[03:47:03.0000] <Hixie>
but it does match what I'd expect the API to do per the spec

[03:47:04.0000] <smaug>
Hixie: but the go(-3) goes to the startpage in my testcase

[03:48:00.0000] <Hixie>
right, it would

[03:48:01.0000] <Hixie>
because the subframes aren't in the joint history

[03:48:02.0000] <Hixie>
the subframes of the inactive documents, i mean

[03:48:03.0000] <smaug>
and still, where does the draft say what the iframes should load when going back in top level page?

[03:49:00.0000] <Hixie>
well there are two possible cases:

[03:49:01.0000] <Hixie>
1. bfcache is active, doc is in the cache: you just show it as it was, unchanged

[03:49:02.0000] <smaug>
that is easy

[03:49:03.0000] <smaug>
that is why I disable bfcache

[03:49:04.0000] <smaug>
at least for gecko

[03:49:05.0000] <smaug>
but without bfcache

[03:50:00.0000] <smaug>
(btw, do all the browsers have something like? maybe chrome doesn't, at least its back-forward is slower than in other browsers)

[03:51:00.0000] <Hixie>
2. doc was evicted from bfcache, and you have to refetch the document and rerender it and so forth: the iframes are considered "persisted user state" which the UA is allowed to resync

[03:51:01.0000] <Hixie>
i should probably spec that in more detail

[03:52:00.0000] <smaug>
and how can the browser know which iframe loads which page?

[03:52:01.0000] <Hixie>
beats me

[03:52:02.0000] <Hixie>
how does firefox do it?

[03:52:03.0000] <Hixie>
the most obvious solution is to serialise the state of each frame's frames[] hierarchy

[03:53:00.0000] <smaug>
gecko has a tree of browsing contexts 

[03:53:01.0000] <smaug>
or tree of session histories

[03:53:02.0000] <Hixie>
and just walk down the tree as each one onloads, navigating its subframes accordingly

[03:53:03.0000] <Hixie>
but how does it map them to iframes?

[03:53:04.0000] <smaug>
but the way it is implemented doesn't work well with dynamic iframe additions/removals

[03:54:00.0000] <smaug>
it tries to map session history tree to browsing context tree 

[03:54:01.0000] <smaug>
and with dynamic iframe additions/removals that isn't always right

[03:54:02.0000] <smaug>
...and that is what I'm trying to fix

[03:55:00.0000] <smaug>
but I'd like to fix it to do something which is actually spec'ed somewhere

[03:55:01.0000] <Hixie>
what do other UAs do?

[03:56:00.0000] <smaug>
not sure.

[03:56:01.0000] <smaug>
well, webkit's go() handling is already so strange that it is difficult to test

[03:58:00.0000] <smaug>
but as a starting point I'd like to understand how go() should work

[03:58:01.0000] <smaug>
and then figure out what to do with dynamic changes

[03:59:00.0000] <Hixie>
well the spec doesn't really say what to do with iframes when reloading a document evicted from the bfcache (or never stored in the first place)

[03:59:01.0000] <Hixie>
i'm more or less happy to spec anything you come up with, if it's sane and/or matches implementations and/or legacy content expectations

[04:00:00.0000] <smaug>
ok, I'll continue testing

[04:00:01.0000] <Hixie>
for things in the bfcache, it seems the spec matches IE8, which is good

[04:00:02.0000] <Hixie>
so i'd like to standardise on that

[04:01:00.0000] <Hixie>
it seems to make sense and is relatively easy to describe

[04:01:01.0000] <smaug>
yeah, I haven't seen anything in IE8's behavior that I'm against at. (except its back button functionality)

[04:02:00.0000] <Hixie>
well the back button and the go() API don't have to match, so you're welcome to make that work however you like

[04:03:00.0000] <smaug>
does anyone know how to disable bfcache in IE?  Would unload handler be enough?

[04:21:00.0000] <zcorpan_>
i wonder what i'm doing wrong with getting a webkit nightly to run with safari on windows

[04:22:00.0000] <zcorpan_>
run-nightly-webkit.cmd doesn't do anything, and FindSafari.exe gives an error message saying some configuration is wrong

[04:22:01.0000] <annevk2>
did you run the install script?

[04:22:02.0000] <annevk2>
/me remembers some exe file

[04:22:03.0000] <annevk2>
oh, dunno then

[04:25:00.0000] <zcorpan_>
if i paste the contents of the extracted folder into the Safari folder and replace the files, then FindSafari.exe and run-nightly-webkit.cmd still do the same thing and Safari.exe stops working

[04:26:00.0000] <annevk2>
nuke all and start over?

[04:26:01.0000] <zcorpan_>
still same result

[04:26:02.0000] <annevk2>
ask in #webkit?

[04:26:03.0000] <zcorpan_>
k

[04:43:00.0000] <hsivonen>
another nail in the coffin of conneg: https://twitter.com/glazou/statuses/4705685278

[04:47:00.0000] <gsnedders>
Single language keywords in indexes pose a problem for HTTP conneg?

[04:48:00.0000] <gsnedders>
Or am I proving I'm half-asleep at the moment, under the theory I can't do any language when half asleep?

[04:48:01.0000] <hsivonen>
crawlers presumably index only one of the language alternatives

[04:48:02.0000] <gsnedders>
Ah, that sort of index

[04:48:03.0000] <gsnedders>
I was thinking of the sort of index that CSS 2.1 has of various terms

[04:48:04.0000] <gsnedders>
(which has no problems with conneg)

[04:49:00.0000] <hsivonen>
the kind of conneg that works is gzip conneg.

[04:49:01.0000] <hsivonen>
which arguably is an architectural error

[04:49:02.0000] <hsivonen>
shoud be a characteristic of the HTTP hop--not the representation

[04:50:00.0000] <hsivonen>
should

[04:51:00.0000] <jgraham>
HTTP hop?

[04:51:01.0000] <gsnedders>
A hop and a jump, obviously.

[04:51:02.0000] <hsivonen>
jgraham: origin server to intermediary or intermediary to intermediary or intermediary to client

[04:52:00.0000] <jgraham>
Hmm I don't clearly see what alternative you are proposing

[04:53:00.0000] <jgraham>
(for some definition of proposing which means "not proposing but suggesting might have been better in the first place")

[04:54:00.0000] <hsivonen>
jgraham: Transfer-Encoding

[04:54:01.0000] <jgraham>
Ah

[04:54:02.0000] <gsnedders>
(Quick! Music suggestions!)

[04:56:00.0000] <jgraham>
The minute waltz is quite a quick piece of music

[05:45:00.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/#attributes-0

[05:45:01.0000] <Hixie>
doesn't include global attributes

[05:45:02.0000] <Hixie>
file bugs with problems!

[05:45:03.0000] <Hixie>
bed time now

[05:45:04.0000] <Hixie>
nn

[05:54:00.0000] <annevk2>
/me still wonders whether this is generated or not

[05:55:00.0000] <annevk2>
default value might be nice (i.e. what happens if omitted)

[06:12:00.0000] <hsivonen>
are chaals' parisweb slides available online yet?

[06:14:00.0000] <Philip`>
hsivonen: Hop-based compression sounds bad for deployability, since to add a new compression method you need everybody on your HTTP path to support it, rather than just getting servers and clients to cooperate

[06:16:00.0000] <Philip`>
But I suppose it's necessary in order to get sane behaviour from proxies

[06:17:00.0000] <Philip`>
(particularly with partial downloads etc)

[06:19:00.0000] <hsivonen>
Philip`: no, with per-hop compression, you get benefits even if one hop is compressed

[06:37:00.0000] <zcorpan_>
hsivonen: woah, i was completely unaware of createHTMLDocument

[06:45:00.0000] <hsivonen>
zcorpan_: it's a bit scary how the functionality has been discussed here before and people have appeared to be unaware

[06:45:01.0000] <hsivonen>
(I was unaware until today)

[07:12:00.0000] <othermaciej>
wait, is createHTMLDocument a real public method? cause when we were discussing it the other day I saw it in the WebKit source and I assumed it was an extension of some kind

[07:12:01.0000] <othermaciej>
ah, HTMLDOMImplementation

[07:13:00.0000] <hsivonen>
othermaciej: it seems it's a real public method that was axed from specs between DOM Level 2 HTML CR and REC

[07:13:01.0000] <othermaciej>
I see

[07:14:00.0000] <othermaciej>
WebKit's IDL claims it is real but I didn't see it in the spec

[07:14:01.0000] <othermaciej>
HTML5 should spec it IMO

[07:14:02.0000] <Philip`>
"... our first Last Call ... a second Last Call ..." - this must be a new meaning of 'last' with which I was previously unfamiliar

[07:15:00.0000] <othermaciej>
Philip`: W3C Process makes it highly unlikely that a large spec of wide interest could have just one

[07:16:00.0000] <Philip`>
The process seems sensible, it's just that the naming doesn't quite :-)

[07:16:01.0000] <othermaciej>
we can rename it Awesome Call if you'd like

[07:17:00.0000] <othermaciej>
what browsers support createHTMLDocument?

[07:17:01.0000] <hsivonen>
othermaciej: Opera and WebKit have it (as non-undefined)

[07:17:02.0000] <hsivonen>
othermaciej: undefined in Gecko

[07:18:00.0000] <hsivonen>
othermaciej: didn't test IE

[07:18:01.0000] <hsivonen>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/266

[07:20:00.0000] <othermaciej>
damn, I was halfway through filing a bug on createHTMLDocument when I remembered that I should follow what I said about what goes in a bug report

[07:20:01.0000] <gsnedders>
othermaciej: I'd say it should be in Web DOM Core

[07:20:02.0000] <gsnedders>
But nobody's working on that, so that's mainly a theoretical concern

[07:20:03.0000] <annevk2>
it seems very HTML-specific

[07:20:04.0000] <othermaciej>
gsnedders: it was originally a DOM2HTML method... I could see the argument either way I suppose

[07:21:00.0000] <annevk2>
so if you don't want a normative dependency on DOM Core putting it in HTML5 makes sense

[07:21:01.0000] <gsnedders>
We're going to end up with HTML specific stuff in DOM Core if we want to avoid having HTML 5 contradicting DOM Core

[07:21:02.0000] <gsnedders>
(See IRC logs from yesterday)

[07:24:00.0000] <othermaciej>
filed http://www.w3.org/Bugs/Public/show_bug.cgi?id=7842

[07:24:01.0000] <othermaciej>
feel free to add comments if you think it should go in Web DOM Core instead

[07:25:00.0000] <othermaciej>
I would feel better about that approach if Web DOM Core was under active development

[07:26:00.0000] <gsnedders>
Right, as Web DOM Core isn't, I don't feel very strongly eitehr way

[07:29:00.0000] <jgraham>
/me would generally feel better if WDC was under active development

[07:31:00.0000] <annevk2>
now and then I'm somewhat tempted to pick it up, but I already dropped the ball on CSSOM and hardly have time

[07:33:00.0000] <othermaciej>
oops, didn't see the whatwg email, I guess my bug is somewhat redundant

[07:35:00.0000] <jgraham>
Yeah now and then I'm somewhat tempted to pick it up but I guess I don't need more to (not) do at the weekend

[07:40:00.0000] <othermaciej>
speaking of specs in need of editing action, Web IDL might need a co-editor, given the time pressure due to dependencies and the fact that heycam has been super busy for a while

[07:40:01.0000] <hsivonen>
hmm. am I testing wrong or does IE8 not even have createDocument?

[07:40:02.0000] <othermaciej>
unlike Web DOM Core and CSSOM, that could block things from progressing

[07:41:00.0000] <zcorpan_>
hsivonen: i think ie8 doesn't have createDocument

[07:43:00.0000] <hsivonen>
at times I'm surprised how wide the IE and everything else chasm is, even though I should know better not to be surprised anymore

[07:43:01.0000] <othermaciej>
in a way, it's because IE did too well at Browser War 1.0

[07:44:00.0000] <othermaciej>
they embraced and extended so far, that it was way easier to clone Mozilla's behavior than theirs

[07:45:00.0000] <TabAtkins>
Worse Is Better, essentially?

[07:45:01.0000] <othermaciej>
I don't know if it was fair to say Gecko was "Worse" than Trident

[07:46:00.0000] <hsivonen>
part of the story is that the de jure specs were notable different from both IE and Netscape 4

[07:46:01.0000] <othermaciej>
it just had fewer inexplicably complex quirks, fewer super complex proprietary technologies that you have to implement to work with their code path, and source you can look at

[07:47:00.0000] <hsivonen>
and Mozilla went pretty far following the de jure specs instead of getting the specs changed to match what was out there already

[07:47:01.0000] <othermaciej>
basically there were a lot of cases where we could have chosen to implement IE behavior instead of Mozilla behavior in WebKit, but only if we were also willing to implement ActiveX, VBScript, VML...

[07:47:02.0000] <othermaciej>
that is true as well - having the specs on your side helps with evangelism I guess

[07:48:00.0000] <hsivonen>
in retrospect, I wish the idea of changing the specs to match reality had been discovered early enough to avoid the Almost Standards Mode and <p><table>

[07:48:01.0000] <jgraham>
The size of this gap seems to create a problem for the spec now as people occasionally try to throw an idea right down the middle of the chasm

[07:49:00.0000] <othermaciej>
but our early strategy for Safari was much more "copy Gecko" than "follow standards", and largely because IE successfully made it really hard to copy them

[07:49:01.0000] <jgraham>
On the basis that anything closer to the WebKit Gecko Presto side wouldn't be implementable in IE

[07:49:02.0000] <jgraham>
But you end up with something that is implementable in nheither

[07:49:03.0000] <jgraham>
*neither

[07:50:00.0000] <zcorpan_>
hsivonen: and standards mode

[07:50:01.0000] <hsivonen>
zcorpan_: that, too

[07:51:00.0000] <hsivonen>
/me sees no value in toggling unitless number parsing behavior and class case-sensitivity

[07:54:00.0000] <othermaciej>
some standards mode changes seem gratuitous

[07:54:01.0000] <othermaciej>
but some quirks mode quirks are pretty messed up

[07:55:00.0000] <othermaciej>
I can understand the temptation to get away from all that

[07:55:01.0000] <hsivonen>
not inheriting to tables is messed up

[07:55:02.0000] <hsivonen>
but having to write table { quirks: none; } would probably be a better switch that the doctype

[07:55:03.0000] <hsivonen>
*than

[07:56:00.0000] <othermaciej>
true

[07:56:01.0000] <othermaciej>
one of the annoying things about quirks mode is that it switches so many different things

[07:57:00.0000] <annevk2>
fortunately we can make it a fixed list when we realize what all the quirks are and never extend them

[07:58:00.0000] <zcorpan_>
...other than for having things consistent in the quirks mode (e.g. getElementsByClassName and case-sensitivity)

[08:05:00.0000] <annevk2>
true :/

[08:05:01.0000] <annevk2>
though classList is not consistent

[08:06:00.0000] <annevk2>
it would prolly have made more sense to define that classes are always interned to lowercase in quirks mode and that comparisons are case-sensitive

[08:06:01.0000] <annevk2>
but that requires changes to CSS too

[08:07:00.0000] <TabAtkins>
Anyone who uses uppercase in their classes is a weirdo anyway.

[08:08:00.0000] <jgraham>
class=ImSaneAndHaveACertificateToProveIt

[08:16:00.0000] <hsivonen>
Either I've broken the parser or the AOL front page has an *insane* number of <script> elements

[08:22:00.0000] <hsivonen>
wow. looks like CNN latest news list has a script per line or something like that

[08:24:00.0000] <lmorchard>
Rendering that timestamp just so is a job best left to the client, apparently

[08:27:00.0000] <hsivonen>
the good news is that even though both AOL and CNN have a large number of scripts on the front page, they don't document.write() unbalanced trees

[08:27:01.0000] <hsivonen>
all speculations seem to succeed

[09:17:00.0000] <TabAtkins>
What's a decent feature-test for <details> support?

[09:22:00.0000] <jgraham>
details.open !== undefined

[09:24:00.0000] <TabAtkins>
See, that's what I thought, but it's throwing a "details is not defined" error in FF.

[09:25:00.0000] <jgraham>
you did var details = document.getElementsByTagName("details")[0]?

[09:25:01.0000] <TabAtkins>
Of course not, because I am dumb.

[09:25:02.0000] <jgraham>
var details = document.createElement("details")

[09:26:00.0000] <jgraham>
+or

[09:27:00.0000] <TabAtkins>
All right, works.  :facepalm:

[09:43:00.0000] <TabAtkins>
Yay for tantek's "A Study of Regular Polygons".  Now my details support is complete without using any images.

[10:03:00.0000] <TabAtkins>
Hey, Tantek, I just (about half an hour ago) made good use of your regular polygons while implementing details support.  Thanks.  ^_^

[10:04:00.0000] <TabAtkins>
(Used it on detail>dt::before for the toggler arrow.)

[10:43:00.0000] <gsnedders>
Why does javascript:alert(document.createElement("iframe").contentDocument) output null/undefined? Because the iframe hasn't loaded yet? Shouldn't it default to about:blank?

[10:51:00.0000] <gsnedders>
Hmm, needs to be added to the document to render

[10:52:00.0000] <gsnedders>
s/to render/to not be null/

[10:52:01.0000] <gsnedders>
Even if a child of head, for example

[10:52:02.0000] <gsnedders>
Odd

[10:57:00.0000] <gsnedders>
Oh, even odder. In Opera, if it is in a script before <body> then it is always null.

[10:57:01.0000] <annevk42>
what does HTML5 say?

[10:57:02.0000] <gsnedders>
If it (the script) is after body it works even if the iframe is put in head

[10:58:00.0000] <gsnedders>
annevk42: I've been looking, and I'm not quite sure. As far as I can tell it says that it should never return null and always the document

[11:00:00.0000] <gsnedders>
(If someone could confirm whether I'm right/wrong about HTML 5 it'd be nice)

[11:35:00.0000] <annevk42>
/me looks

[11:48:00.0000] <tantek>
TabAtkins - good to hear! Do you have a URL to share?

[14:20:00.0000] <TabAtkins>
tantek: You want a permanent url, or is a temporary good enough?  The actual usage is on an intranet app that's behind a password, but I can either turn off the password temporarily, or just duplicate the page entirely.

[14:21:00.0000] <tantek>
I'd say better to duplicate (perhaps a simplified version) of the page to keep public as part of your portfolio

[14:21:01.0000] <tantek>
so others can benefit from the techniques as wwell

[14:21:02.0000] <TabAtkins>
k, one moment.

[14:24:00.0000] <TabAtkins>
tantek: http://www.xanthir.com/etc/details/

[14:25:00.0000] <tantek>
nice!

[14:28:00.0000] <TabAtkins>
It works in IE8, but not very smoothly.  Dunno why.

[14:30:00.0000] <TabAtkins>
That reminds me, there are a few other clever tricks I've been meaning to show off that are locked behind intranet pages here at work.  I'll get a few of those uploaded today.

[14:37:00.0000] <TabAtkins>
tantek: Frex, here's me putting the "hidden radio buttons" trick to work to simplify a giant list - http://www.xanthir.com/etc/hidden-radios/

[15:06:00.0000] <daedb>
TabAtkins: that's a neat trick :)

[15:06:01.0000] <TabAtkins>
Can't take full credit - I learned it from Brad Kemper.  But I do think the use I put it to is pretty clever.  ^_^

[15:30:00.0000] <Hixie>
annevk2: no, it's all manually generated


2009-10-09
[19:54:00.0000] <Hixie>
ok. The green line is at 0. (Well, it's at 1, but that 1 issue is "define SQL" which isn't a blocker for any spec but WebDB.)

[19:54:01.0000] <Hixie>
food now.

[22:10:00.0000] <Hixie>
sicking: i'm looking at async=""

[22:11:00.0000] <Hixie>
and your e-mail

[22:11:01.0000] <Hixie>
hsivonen: i'm lookin at async=""

[22:11:02.0000] <Hixie>
and your bug

[22:11:03.0000] <Hixie>
i wonder if i should make async="" and defer="" just be ignored for anything but parser-inserted elements

[22:12:00.0000] <Hixie>
sicking's suggestion to make async scripts work just like appendChild()ed scripts makes sense

[22:13:00.0000] <Hixie>
but it means async="" only has an effect when parsing

[22:13:01.0000] <Hixie>
should we make defer="" consistent with that?

[22:13:02.0000] <Hixie>
or should it still have an effect (when async="" isn't also present)

[22:13:03.0000] <Hixie>
it seems weird that right now you cannot appendChild() in a way that blocks, but you can appendChild() with defer and it'll execute later than it otherwise could

[22:14:00.0000] <Hixie>
whereas in the markup you have to go out of your way to get that effect

[22:30:00.0000] <othermaciej>
Hixie: WebKit makes all programmatically inserted scripts act effectively like async=""

[22:30:01.0000] <Hixie>
the spec does too now

[22:30:02.0000] <othermaciej>
(we don't have the async attribute, but appendChild()ing a script won't block and there is no order guarantee)

[22:31:00.0000] <othermaciej>
well, it won't block on I/O, could block if it's a long-running inline script of course

[22:34:00.0000] <Hixie>
i wonder what zcorpan wants me to call the uberdocument he wants the whatwg to host

[22:34:01.0000] <Hixie>
containing all of html5, eventsource, localstorage, webdb, websockets api and protocol, vocabs, etc

[22:35:00.0000] <othermaciej>
I dunno

[22:36:00.0000] <Hixie>
i could call it Web Applications 1.0

[22:36:01.0000] <othermaciej>
the uberdocument does not sound very useful to me; his explanation (broken cross-references) sounds like a reason to keep them separate so people notice and point it out

[22:36:02.0000] <othermaciej>
that being said, having information in more forms is in general a good thing

[22:37:00.0000] <Hixie>
the broken cross-references are only broken because the documents are split

[22:37:01.0000] <Hixie>
and gsnedders' script doesn't do cross-doc references

[22:38:00.0000] <othermaciej>
if it will be fixed by a tool change then I guess it's less important to make every instance obvious

[22:38:01.0000] <Hixie>
the instances are already obvious

[22:38:02.0000] <GPHemsley>
Hixie: Have you seen the latest <cite> discussion?

[22:38:03.0000] <Hixie>
they have thick blue or green underline

[22:38:04.0000] <Hixie>
GPHemsley: haven't read it yet, no

[22:38:05.0000] <GPHemsley>
k

[22:45:00.0000] <GPHemsley>
Is anyone else having trouble connecting to the Mozilla IRC server?

[22:45:01.0000] <Hixie>
wfm

[22:45:02.0000] <GPHemsley>
Most of my connection attempts time out, and when I do get through, I get Z-lined as a dronebot, for some reason.

[22:46:00.0000] <Hixie>
weird

[23:27:00.0000] <sicking>
Hixie: still there?

[23:27:01.0000] <Hixie>
hey

[23:28:00.0000] <sicking>
so I think async should have meaning always

[23:28:01.0000] <sicking>
*but*

[23:28:02.0000] <sicking>
that always makes sense if I get my other suggestion, that i haven't sent to the list yet, goes through

[23:28:03.0000] <sicking>
so Gecko today always executs scripts in the order they were inserted into the DOM

[23:29:00.0000] <sicking>
in order to not have interdependency issues

[23:29:01.0000] <sicking>
i'm told webkit doesn't do that

[23:29:02.0000] <Hixie>
nor does html5 now

[23:29:03.0000] <sicking>
i know

[23:29:04.0000] <Hixie>
as you suggested :-)

[23:29:05.0000] <sicking>
well, i just suggested to change async, so far

[23:30:00.0000] <sicking>
i'm curious what IE does

[23:30:01.0000] <sicking>
i'm sort of worried about changing geckos behavior, that dynamically created scripts are essentially always async

[23:31:00.0000] <sicking>
s/that/so that/

[23:32:00.0000] <sicking>
i totally think that async should always execute as-soon-as-possible-order-doesn't-matter

[23:33:00.0000] <othermaciej>
we don't seem to have problems with programatically added scripts executing async, but it's entirely possible that it causes subtle compat issues that we just haven't diagnosed yet

[23:33:01.0000] <othermaciej>
though I tend to suspect not

[23:33:02.0000] <sicking>
yeah, i'm of split mind, which is why i want to test in IE

[23:34:00.0000] <othermaciej>
but obviously it's hard to tell how some of these edge case behavior differences impact the long tail of the Web

[23:34:01.0000] <sicking>
right

[23:34:02.0000] <othermaciej>
we did have some kind of bug reports on dynamically inserted scripts (can't remember if it didn't work at all or something...)

[23:34:03.0000] <othermaciej>
lemme search the ChangeLogs

[23:36:00.0000] <othermaciej>
we had a bug where a dynamically insered script that removed itself would cause a crash

[23:37:00.0000] <othermaciej>
(so we've seen at least some examples of people doing strange things)

[23:38:00.0000] <Hixie>
on the web? people doing strange things? surely you jest

[23:38:01.0000] <Hixie>
surely, sir

[23:38:02.0000] <Hixie>
that seems highly unlikely

[23:38:03.0000] <othermaciej>
hmm, speaking of <script>, one thing we recently did is stop executing scripts with a "for" attribute

[23:39:00.0000] <othermaciej>
        https://bugs.webkit.org/show_bug.cgi?id=21193

[23:39:01.0000] <sicking>
othermaciej: ouch

[23:40:00.0000] <sicking>
othermaciej: i know we ended up with some hacks for that

[23:40:01.0000] <sicking>
othermaciej: back in the day gecko actually supported the "for" and "event" attributes. But only in embedded environments i think

[23:40:02.0000] <othermaciej>
I'm not sure we want to actually implement <script for>, but since it doesn't seem viable to completely ignore it, it would be good to agree on some interoperable behavior

[23:41:00.0000] <sicking>
othermaciej: ugh, i should have removed that from gecko a long time ago

[23:41:01.0000] <Hixie>
well i'm happy to just say "if there's a for attribute, abort these steps" somewhere

[23:41:02.0000] <sicking>
othermaciej: yeah, i definitely don't want to implement for fully

[23:41:03.0000] <Hixie>
file a bug :-)

[23:42:00.0000] <sicking>
othermaciej: lemme check what gecko does

[23:42:01.0000] <othermaciej>
sicking: ok

[23:42:02.0000] <othermaciej>
Hixie: will do once we figure out what should happen

[23:42:03.0000] <Hixie>
k thanks

[23:43:00.0000] <sicking>
this stuff is nasty

[23:43:01.0000] <sicking>
so

[23:44:00.0000] <sicking>
if "for" or "event" is missing, process as normal

[23:44:01.0000] <sicking>
if "for" is something other than "window", don't process

[23:46:00.0000] <sicking>
if "event" starts with "onload " or "onload(" (case insensitive compare) then don't process

[23:46:01.0000] <sicking>
otherwise process as normal

[23:46:02.0000] <othermaciej>
wild

[23:46:03.0000] <sicking>
oh yeah

[23:46:04.0000] <othermaciej>
wait

[23:46:05.0000] <sicking>
so i think the situation was this

[23:47:00.0000] <othermaciej>
so if "for" is "window" and "event" does *not* start with "onload" you run the script?

[23:47:01.0000] <sicking>
at the dawn of time we ignored 'for' and 'event'

[23:47:02.0000] <othermaciej>
so <script for="window" event="onclick"> would run immediately?

[23:48:00.0000] <Hixie>
that's pretty special

[23:48:01.0000] <Hixie>
even for the web :-P

[23:48:02.0000] <sicking>
sorry

[23:48:03.0000] <sicking>
arg, so many negatives

[23:49:00.0000] <sicking>
so if it starts with "onload " or "onload(", then run as normal

[23:49:01.0000] <sicking>
otherwise don't process

[23:49:02.0000] <othermaciej>
that makes more sense

[23:49:03.0000] <sicking>
but only by a smidgen

[23:50:00.0000] <othermaciej>
so let me try to restate it to make sure I understand

[23:50:01.0000] <sicking>
i'd really hate to put this in the spec though

[23:50:02.0000] <sicking>
i've been meaning to nuke all of this crap for ages, never got around to it

[23:50:03.0000] <sicking>
basically, if it has "for" *and* "event", then don't process

[23:51:00.0000] <sicking>
*except*

[23:51:01.0000] <othermaciej>
well, maybe WebKit's recent behavior is good enough - I dunno

[23:51:02.0000] <othermaciej>
we just refuse to run anything with a "for" attribute

[23:51:03.0000] <sicking>
if it's for="window" event="onload(..."

[23:51:04.0000] <sicking>
or for="window" event="onload ..."

[23:51:05.0000] <othermaciej>
ok

[23:52:00.0000] <othermaciej>
what if it's just event="onload" with no paren or space?

[23:52:01.0000] <Hixie>
event="" in IE can have ()s? o_O

[23:53:00.0000] <othermaciej>
getting back to dynamically inserted scripts - here is where we added support: http://trac.webkit.org/changeset/9105

[23:54:00.0000] <othermaciej>
the bug is sadly internal bug we had numerous separate reports and developer requests

[23:54:01.0000] <othermaciej>
since 2005, we have not had a bug that we diagnosed as being due to lack of order guarantee

[23:56:00.0000] <othermaciej>
we later added load events for script elements: http://bugzilla.opendarwin.org/show_bug.cgi?id=5812

[23:56:01.0000] <othermaciej>
sorry, antique URL, you want https://bugs.webkit.org/show_bug.cgi?id=5812

[06:01:00.0000] <smaug>
now Chrome went to some strange state where it loads wrong url to iframe, even if script explicitly says something else :/

[06:01:01.0000] <smaug>
/me needs to try trunk Chrome

[06:06:00.0000] <Philip`>
"< hsivonen> multiple instances of one image can't be totally rare" - <img src=blank.gif><img src=blank.gif><img src=blank.gif>...

[06:08:00.0000] <hsivonen>
the Web should pin blank.gif to cache

[06:08:01.0000] <Philip`>
Lots of sites have hundreds like that

[06:09:00.0000] <Philip`>
One page had the same <script src> 1001 times

[06:10:00.0000] <Philip`>
Zillions of pages have half a dozen identical ad-insertion scripts

[06:10:01.0000] <hsivonen>
ouch. I hope these aren't the top sites whose perf makes or breaks the perception of the perf of a browser

[06:11:00.0000] <Philip`>
(The 1001 is probably a weird anomaly and the page doesn't exist now anyway)

[06:12:00.0000] <Philip`>
The ad-insertion scripts are on lots of sensible legitimate-looking sites

[06:12:01.0000] <remysharp>
hi - couple of things - the multipage HTML5 spec is broken again (I thought it was fixed) :-(

[06:12:02.0000] <smaug>
Hixie: with the latest nightly chromium I do get the same "TopLevelA", but "replaced iframe" problem

[06:13:00.0000] <Philip`>
remysharp: It was fixed :-)

[06:13:01.0000] <remysharp>
Philip`: it broke again

[06:13:02.0000] <Philip`>
http://www.whatwg.org/specs/web-apps/current-work/multipage/stderr.txt

[06:13:03.0000] <smaug>
does nightly chromium use latest webkit trunk?

[06:13:04.0000] <Philip`>
Hixie: lxml doesn't like HTML5 elements :-(

[06:15:00.0000] <remysharp>
section doesn't allow aria roles according to the validator, but I couldn't see that restriction on the section element

[06:15:01.0000] <remysharp>
as robert__ is about to say!

[06:16:00.0000] <robert__>
Ok, I just bother people and then they go here... :-)

[06:16:01.0000] <gsnedders>
/me grumbles something about the complexity of configuring mice in Ubuntu

[06:16:02.0000] <robert__>
But yes, the spec claims the role="main" is allowed on the section element, but any HTML5 validator claims it isn't

[06:17:00.0000] <gsnedders>
Then I guess the validator is wrong :)

[06:17:01.0000] <robert__>
Yeah, me too

[06:17:02.0000] <robert__>
Just wanted some confirmation wheter that is the case

[06:17:03.0000] <Philip`>
gsnedders: What do you expect when you're configuring protrusions into our dimension of hyper-intellegent pan-dimensional beings?

[06:17:04.0000] <remysharp>
gsnedders: is there a way to bug report on the validator?

[06:18:00.0000] <hsivonen>
remysharp: bugzilla.validator.nu

[06:18:01.0000] <gsnedders>
Philip`: Magic.

[06:18:02.0000] <remysharp>
hsivonen: wholesome :) cheers

[06:19:00.0000] <Philip`>
http://www.gansudaily.com.cn/20040715/802/default.htm has 691 instances of the same script src

[06:20:00.0000] <hsivonen>
/me wonders what the purpose of those scripts is

[06:21:00.0000] <hsivonen>
I also wonder what the median number of scripts, sheets and images on a page is

[06:23:00.0000] <Philip`>
http://www.alhadath.info/akhbar/2/197.php has awesome markup

[06:23:01.0000] <Philip`>
include 62 of the same stylesheet

[06:23:02.0000] <Philip`>
*including

[06:23:03.0000] <Philip`>
Seems like only a few pages have more than a dozen, but a lot have a handful of the same <link href>

[06:24:00.0000] <hsivonen>
/me wonders what post processing has happened after that markup left FrontPage

[06:24:01.0000] <Philip`>
/me has no data for medians

[06:26:00.0000] <Philip`>
hsivonen: Do you care about more detailed data on repeated <script src>/<link href> values?

[06:27:00.0000] <hsivonen>
I just care about a ballpark size for the size of the map holding the URLs

[06:27:01.0000] <Philip`>
Ah

[06:28:00.0000] <hsivonen>
I guessed 127

[06:30:00.0000] <Philip`>
The mean number of elements per page on dmoz.org was 18 <img>, 1.2 <link>, 3.8 <script>

[06:31:00.0000] <hsivonen>
thanks

[06:31:01.0000] <Philip`>
I would guess the curves are such that median would be lower than mean

[06:31:02.0000] <hsivonen>
/me lowers the guess to 23

[06:32:00.0000] <Philip`>
(since there'll be a few pages with abnormally many elements, and none with abnormally few (because even 0 wouldn't be abnormal))

[06:33:00.0000] <Philip`>
Do you really want an average estimate? I'd have thought you'd care more about optimising slow pages, i.e. abnormally complex pages

[06:34:00.0000] <Philip`>
(Those means come from http://philip.html5.org/data/tag-count-total.txt)

[06:34:01.0000] <hsivonen>
the hash wants me to pick a number

[06:35:00.0000] <Philip`>
Pick 1

[06:35:01.0000] <hsivonen>
presumably picking a big number wastes memory, presumably picking a small number makes things slighly slower

[06:35:02.0000] <hsivonen>
probably I don't have the right data to decide anyway

[06:35:03.0000] <hsivonen>
and I'd be better off if the hash creator had picked something at random

[06:36:00.0000] <Philip`>
/me presumes picking 0 is not possible, and so 1 has the justification that it's the first possible number, which is less arbitrary than 23 :-)

[06:36:01.0000] <hsivonen>
Philip`: thanks. I think I'm going to stick to 23

[06:37:00.0000] <robert__>
Ok, sorry for stupid question, but at http://bugzilla.validator.nu, is there any way to turn off the display of my e-mail address? Couldn't find anything in the Preferences...

[06:38:00.0000] <hsivonen>
robert__: nope. it's a vanilla bugzilla

[06:38:01.0000] <robert__>
Ok... Sorry to hear that, but thanks for the reply!

[06:40:00.0000] <smaug>
Hixie: I can't reproduce the toplevelA/replaced-iframe problem on nightly webkit, but that build seems to have pretty broken cache/unload handling. (unload doesn't fire always)

[06:40:01.0000] <Philip`>
So, um, does anyone know how to fix http://www.whatwg.org/specs/web-apps/current-work/multipage/stderr.txt trivially?

[06:41:00.0000] <Philip`>
(without using a parser that is incredibly slow (i.e. html5lib))

[06:45:00.0000] <hsivonen>
/me fails miserably at guessing which chapter of SVG 1.2 Tiny deals with bitmaps

[06:45:01.0000] <hsivonen>
/me loads the PDF

[06:45:02.0000] <gsnedders>
Philip`: Rewrite html5lib in C.

[06:46:00.0000] <hsivonen>
whoa. there's a single-page version. yay

[06:46:01.0000] <Philip`>
gsnedders: No thanks

[06:47:00.0000] <Philip`>
I wonder if http://intertwingly.net/blog/2009/06/12/Validator-Nu-on-GCJ still works...

[06:47:01.0000] <gsnedders>
html2xml + xml parser support in Anolis?

[06:47:02.0000] <gsnedders>
:P

[06:50:00.0000] <Philip`>
I don't care about Anolis at all

[06:50:01.0000] <Philip`>
I just want the spec-splitter to work with the current input document

[06:57:00.0000] <smaug>
Hixie: ah, webkit nightlies have some experimental "break unload" feature set on. That breaks my testing

[07:09:00.0000] <smaug>
Hixie: a build just before that change has the same "feature" as IE and gecko.

[07:19:00.0000] <Philip`>
Hmm, turns out the gcj version is half the speed as the plain java version, and uses about the same amount of memory

[07:20:00.0000] <hsivonen>
radically traditional compilation FTW!

[07:21:00.0000] <Philip`>
gcj has much better startup time, though

[07:22:00.0000] <Philip`>
echo hello|HTML2XML takes about 0.9s with java, 0.2s with gcj

[07:23:00.0000] <Philip`>
(java catches up when tokenising the HTML5 spec)

[07:28:00.0000] <Philip`>
(Also, ~60MB just to stream some HTML to XML seems silly in any case)

[07:35:00.0000] <Philip`>
Dijkstra ought to have had a name that's easier to spell

[07:36:00.0000] <hsivonen>
is there any difference between absent type or charset attribute on <script> or having them set to the empty string?

[07:38:00.0000] <hsivonen>
apparently no difference for type

[07:46:00.0000] <hsivonen>
/me wishes he didn't have to search a space-separated list of tokens to discover stylesheet but not alternate stylesheet links

[07:47:00.0000] <Philip`>
(If anyone comes here and complains about the multipage spec, let them know I'll fix it later tonight)

[07:47:01.0000] <Philip`>
(Also, tell them it's all Hixie's fault)

[07:47:02.0000] <Philip`>
/me goes away

[07:49:00.0000] <hsivonen>
hmm. apparently the old parser only speculatively loads style sheets if the value of rel is exactly "stylesheet" in lower case

[07:49:01.0000] <hsivonen>
I guess I'll cut corners likewise

[07:54:00.0000] <hsivonen>
the worst that can happen is Hixie's sites loading a bit more slowly :-)

[07:57:00.0000] <Philip`>
http://philip.html5.org/data/link-rel-rev.txt

[07:57:01.0000] <Philip`>
Non-lowercase is quite common

[07:57:02.0000] <Philip`>
/me goes away for real (almost)

[07:58:00.0000] <hsivonen>
Philip`: I made an ASCII-case-insensitive check

[08:09:00.0000] <zcorpan_>
<link rel="stylesheet.off" ...>

[08:09:01.0000] <zcorpan_>
<link rel="&#10;stylesheet" ...>

[08:10:00.0000] <zcorpan_>
(just 1 out of 127249)

[09:51:00.0000] <hsivonen>
how. MIME types are being registered for MathML

[09:51:01.0000] <hsivonen>
only a decade late

[09:51:02.0000] <hsivonen>
MIME types FTW!

[12:52:00.0000] <AryehGregor>
"You are arguing for imposing one way of doing things. Ugh."

[12:52:01.0000] <AryehGregor>
That's a great quote from someone posting on a standards list.

[12:57:00.0000] <AryehGregor>
Is this broken?  http://www.whatwg.org/specs/web-apps/current-work/multipage/

[12:57:01.0000] <AryehGregor>
I'm getting an index page.

[13:17:00.0000] <Philip`>
AryehGregor: Yes, it's broken

[13:18:00.0000] <Philip`>
AryehGregor: Blame Hixie

[13:18:01.0000] <Philip`>
He's doing crazy things like trying to use HTML5 in HTML5

[13:18:02.0000] <AryehGregor>
/me dutifully blames Hixie

[15:00:00.0000] <Philip`>
Oh, I'm stupid

[15:01:00.0000] <Philip`>
The gcj version of the parser had no optimisation enabled

[15:01:01.0000] <Philip`>
so it ended up taking twice as long to parse the spec as the java version

[15:01:02.0000] <Philip`>
If I compile with -O1, then the gcj parser takes about 40% of the time it used to

[15:02:00.0000] <Philip`>
hsivonen: ^ gcj isn't so useless after all :-)

[15:03:00.0000] <Philip`>
Only problem is it takes ~0.5GB RAM to compile, and my server barely has that much, and my desktop machine is 64-bit and can't make 32-bit binaries with gcj, and the server is 32-bit, so I can't actually run it on there :-/

[15:15:00.0000] <Dashiva>
Is there a word for "quick to take offense"?

[15:16:00.0000] <gratz|home>
sensitive?

[15:16:01.0000] <gratz|home>
lol

[15:23:00.0000] <AryehGregor>
Quick-tempered?  Touchy?

[15:48:00.0000] <deltab>
Dashiva: thin-skinned

[16:07:00.0000] <jgraham>
Philip`: gcj can't cross compile?

[16:08:00.0000] <Philip`>
jgraham: It can, but it fails when linking with -lgcj because it can only find 64-bit libraries

[16:08:01.0000] <Philip`>
(because I don't have 32-bit ones installed)

[16:08:02.0000] <jgraham>
Couldn't you install the 32bit ones?

[16:09:00.0000] <Philip`>
No

[16:09:01.0000] <Philip`>
I just do "emerge gcc" and it does whatever it wants, which seemingly doesn't involve installing 32-bit gcj libraries

[16:09:02.0000] <Philip`>
and I don't fancy doing anything more complex than that

[16:38:00.0000] <Philip`>
Why does lxml's XMLParser seem to think the document consists solely of the <head> element?

[16:39:00.0000] <Dashiva>
Is there a <html> element?

[16:39:01.0000] <Philip`>
Yes

[16:39:02.0000] <Philip`>
There's a <body> element too

[16:39:03.0000] <Philip`>
but doc.find('body') returns None

[16:40:00.0000] <Philip`>
/me gives up trying to fix the spec-splitter properly, and just uses lxml's HTMLParser with recover=True and hopes it doesn't misparse anything seriously


2009-10-10
[19:19:00.0000] <Hixie>
othermaciej: yt?

[19:19:01.0000] <othermaciej>
hey Hixie 

[19:19:02.0000] <Hixie>
did you say webkit had plans to do something about blocking script on stylesheets?

[19:20:00.0000] <othermaciej>
I believe we currently block script execution when there are pending stylesheets

[19:20:01.0000] <othermaciej>
I believe that has been true since shortly after we added speculative loading of scripts

[19:21:00.0000] <Hixie>
http://www.hixie.ch/tests/adhoc/html/parsing/script-style-blocking/001.html says otherwise

[19:22:00.0000] <othermaciej>
I could be mis-remembering

[19:22:01.0000] <othermaciej>
or it could be buggy (though that case seems exceptionally simple)

[19:22:02.0000] <othermaciej>
it's possible we only block external scripts on stylesheets, even though that would be really stupid

[19:22:03.0000] <Hixie>
hm, let me test externals only

[19:23:00.0000] <Hixie>
ooh, yes, that blocked

[19:25:00.0000] <othermaciej>
so yeah, that's kinda dumb - not sure if it was intentional

[19:28:00.0000] <Hixie>
i'm concerned about http://www.hixie.ch/tests/adhoc/html/parsing/script-style-blocking/002.html if we make internals block also

[20:07:00.0000] <mpilgrim>
any opera employees around?

[20:07:01.0000] <mpilgrim>
i am aware that http://diveintohtml5.org/ renders very badly in Opera 10.0.0

[20:07:02.0000] <mpilgrim>
due to wacky rendering of embedded fonts

[20:08:00.0000] <mpilgrim>
i wonder if there is something i can do to fix my fonts, or if there is something y'all can do to fix opera, or some combination of both

[20:09:00.0000] <mpilgrim>
an opera user sent me this (unconfirmed) report: "I got some further information about the bug. It would appear that the styles are only properly applied to the first document if I open multiple tabs. As long as I look at the documents one by one, the styles work fine."

[21:31:00.0000] <Hixie>
/me wishes someone would take over CSSOM already

[21:31:01.0000] <Hixie>
not having someone working on CSSOM is really making my life harder

[21:37:00.0000] <othermaciej>
Hixie: concerned in what way (about that test case)

[21:38:00.0000] <Hixie>
bz and i talked it out

[03:11:00.0000] <Hixie>
!@#^&*

[03:12:00.0000] <Hixie>
HTTP "Link:" headers screw me over again

[03:12:01.0000] <Hixie>
i hate that Mark refuses to define their processing model

[03:13:00.0000] <Hixie>
it leaves them in a dumb limbo with no spec that defines their interaction with other features like html parsing

[03:13:01.0000] <Hixie>
not that xml-stylesheet does much better

[03:15:00.0000] <othermaciej>
what did Link do to you?

[03:15:01.0000] <Hixie>
how am i suppose to define how they block <script> processing?

[03:15:02.0000] <Hixie>
there's no spec that actually makes them part of the CSSOM model

[03:16:00.0000] <othermaciej>
do browsers actually support loading a stylesheet via a Link header?

[03:16:01.0000] <Hixie>
firefox does

[03:16:02.0000] <Hixie>
i wish other browsers would :-)

[03:17:00.0000] <othermaciej>
sure, I'd love to implement a feature that's complicated, useless, and has no spec that defines processing requirements

[03:21:00.0000] <Hixie>
it's not useless

[03:21:01.0000] <Hixie>
i actually used it just the other day with the microdata study

[03:24:00.0000] <othermaciej>
what are the use cases for using the Link header to apply a stylesheet (or really for any other purpose) that are not served by <link rel="stylesheet">?

[03:25:00.0000] <stevierabie>
when us html5 out

[03:25:01.0000] <othermaciej>
I'm going to assume the cases where you cannot under any circumstances alter the document fail the 80/20 rule

[03:26:00.0000] <Hixie>
othermaciej: what are the use cases for using a <link> header to apply a style sheet that are not served by <style>@import ?

[03:26:01.0000] <Hixie>
othermaciej: Link: lets you apply a style sheet to a whole site with one line in an .htaccess file

[03:27:00.0000] <Hixie>
othermaciej: with the microdata study, I used a Link: header and a data: URL to style <img> elements without having to include anything into the files that would interfere with the study, for instance

[03:27:01.0000] <Hixie>
stevierabie: what do you mean by "out"? it's been public since we started, at http://whatwg.org/html5

[03:27:02.0000] <othermaciej>
Hixie: whether <link> has an independent use case from @import is no longer a relevant consideration, since it is required for compatibility

[03:28:00.0000] <Hixie>
(Link: is also useful as a hack for applying styles to text/plain documents, but that's probably not something i'd want to advertise. :-) )

[03:28:01.0000] <othermaciej>
that sounds like a bug

[03:29:00.0000] <Hixie>
HTML5 defines the DOM that text/plain files generate in browsers

[03:29:01.0000] <Hixie>
so not really

[03:31:00.0000] <othermaciej>
I remember back in the day when we discovered for Safari that we had to generate an HTML DOM for plain text files

[03:31:01.0000] <othermaciej>
for compatibility

[03:31:02.0000] <othermaciej>
that was a sad day

[03:31:03.0000] <Hixie>
hehe

[03:32:00.0000] <othermaciej>
does HTML5 require making a DOM for images or plugin content as a top-level resource?

[03:32:01.0000] <Hixie>
yes

[03:32:02.0000] <othermaciej>
we do it in that case too, though not yet for PDF

[03:33:00.0000] <Hixie>
there are certain dispensations for cases like PDF

[03:33:01.0000] <Hixie>
though i think you have to have a Document in all cases, even if it's a fake one

[03:34:00.0000] <Hixie>
i wonder if <?xml-stylesheet?> is the target of a 'load' event when its style sheet loads

[03:34:01.0000] <Hixie>
anyone know?

[03:39:00.0000] <othermaciej>
it does not appear to dispatch a "load" event in WebKit

[03:39:01.0000] <Hixie>
k

[03:39:02.0000] <othermaciej>
(though, oddly, hyatt made it dispatch the "beforeload" thing he came up with)

[03:39:03.0000] <Hixie>
thanks

[03:39:04.0000] <gavin>
/me would be surprised if it did in gecko

[03:39:05.0000] <Hixie>
beforeload?

[03:39:06.0000] <othermaciej>
it should probably dispatch "load"

[03:40:00.0000] <othermaciej>
I wonder if "beforeload" matches the semantics of any of the Progress Events

[03:40:01.0000] <othermaciej>
in which case I should suggest he change it

[03:40:02.0000] <Hixie>
/me added this to the Companion Specs wiki page

[03:41:00.0000] <othermaciej>
it's dispatched before an element starts loading, you can preventDefault() on it to stop the load

[03:42:00.0000] <othermaciej>
intended for scripts that want to alter the behavior of sites to prevent certain kinds of content from loading

[03:42:01.0000] <othermaciej>
I should propose it for Progress Events

[03:42:02.0000] <Hixie>
sounds like it would add a lot of complexity

[03:42:03.0000] <Hixie>
to the spec

[03:43:00.0000] <othermaciej>
making loadstart cancelable would be sufficient

[03:43:01.0000] <othermaciej>
bizzarely, the current Editor's Draft of Progress Events does not define whether the events bubble or are cancelable

[03:45:00.0000] <othermaciej>
so I guess making loadstart cancelable would be a suggestion for HTML5, not Progress Events

[03:46:00.0000] <Hixie>
i don't really understand progress events

[03:46:01.0000] <othermaciej>
is it a suggestion I should make (in which case I'd ask hyatt to get rid of "beforeload") or should we keep our nonstandard thing for now?

[03:46:02.0000] <Hixie>
as far as i can tell, it should just define the interface, and suggest a few event names

[03:46:03.0000] <othermaciej>
Progress Events has a weird combination of exacting detailed requirements and totally undefined things

[03:46:04.0000] <Hixie>
but instead it has a ton of requirements i don't understand

[03:46:05.0000] <Hixie>
yeah

[03:46:06.0000] <Hixie>
you should send review comments

[03:47:00.0000] <Hixie>
chaals hasn't been very responsive to my own

[03:47:01.0000] <Hixie>
but virtually nobody else has sent him review comments

[03:47:02.0000] <othermaciej>
I sent a bunch long ago

[03:47:03.0000] <Hixie>
re beforeload, i would like to defer new features like that from html5 at this stage

[03:47:04.0000] <othermaciej>
maybe it could use a fresh round of review

[03:47:05.0000] <Hixie>
but it could make sense for html6

[03:47:06.0000] <othermaciej>
I don't want to suggest adding beforeload to html5

[03:48:00.0000] <othermaciej>
but I would consider suggesting making "loadstart" cancelable in HTML5, if you thought that was a reasonable option

[03:48:01.0000] <othermaciej>
(in which case we'd get rid of "beforeload")

[03:51:00.0000] <othermaciej>
Hixie: so should I file a bug that suggests making "loadstart" cancelable, or is that a dumb idea?

[03:51:01.0000] <othermaciej>
or I can just file the bug and wait for the answer if you are not sure right now

[03:52:00.0000] <othermaciej>
hmm, it looks like loadstart only applies to media elements in HTML5

[03:57:00.0000] <annevk42>
fwiw, there were a bunch of comments on posts stuck in moderation (in particular for "Usability testing HTML5") -- I just approved them

[03:59:00.0000] <Hixie>
othermaciej: the name of the event doesn't really matter to me, i just meant the feature :-)

[03:59:01.0000] <Hixie>
othermaciej: i only fire progress events for media elements at the moment (and for appcache, but there i'm totally violating the progress events spec anyway)

[04:00:00.0000] <othermaciej>
Hixie: the reason I bring up the name is that HTML5 currently renders it noncomforming to make "loadstart" cancelable, so we have to introduce a new event

[04:14:00.0000] <gsnedders_>
/me ponders why he cannot get any WHATWG email

[04:17:00.0000] <annevk42>
othermaciej, fwiw, version is not new; it was a deprecated feature of HTML4 iirc

[04:18:00.0000] <othermaciej>
ah, you're right

[04:18:01.0000] <othermaciej>
although HTML4 does not define the syntax

[04:18:02.0000] <othermaciej>
and I'm not sure what the pre-HTML4 syntax was

[04:19:00.0000] <othermaciej>
what it said was: "The value of this attribute specifies which HTML DTD version governs the current document. This attribute has been deprecated because it is redundant with version information provided by the document type declaration."

[04:19:01.0000] <othermaciej>
that's obviously not applicable to HTML5 though and does not seem to be what the new version attribute does

[04:20:00.0000] <annevk42>
yeah, it's a bit sad that every now and then people try to invent some kind of versioning for the Web

[04:20:01.0000] <othermaciej>
HTML3.2 does not seem to have a version attribute

[04:20:02.0000] <Hixie>
othermaciej: i don't really see the use case for canceling loadstart on <video> or appcache

[04:21:00.0000] <othermaciej>
was it added to HTML4 and immediately deprecated?

[04:22:00.0000] <othermaciej>
Hixie: it's that same as our use case for beforeload, namely to give script that may not be closely tied to the site to prevent a resource from loading

[04:22:01.0000] <othermaciej>
though granted, much more likely uses will be for <script>, <object> and <img>

[04:23:00.0000] <Hixie>
why doesn't it just remove the element

[04:24:00.0000] <annevk42>
othermaciej, it seems it was part of the HTML 3.2 DTD at least

[04:24:01.0000] <othermaciej>
how would it be able to find out about the element soon enough? mutation events don't fire during parsing

[04:25:00.0000] <othermaciej>
maybe I misread the DTD

[04:26:00.0000] <Hixie>
annevk42: how much do i need to pay you to get you to work on CSSOM? :-)

[04:27:00.0000] <Hixie>
oh hey, CSSOM has a section on Link:, awesome

[04:27:01.0000] <othermaciej>
I see, its in the DTD for HTML 3.2 but not documented at all in prose

[04:27:02.0000] <othermaciej>
and OMG, HTML 3.2 makes HTML 4.01 look like a good spec

[04:28:00.0000] <othermaciej>
it is documented in HTML 3.0 and says "This is fixed by the DTD as the string "-//W3O//DTD W3 HTML 3.0//EN""

[04:29:00.0000] <annevk42>
Hixie, I guess I should get back to it after XHR/CORS are somewhat more stable

[04:29:01.0000] <Hixie>
annevk42: oooh

[04:29:02.0000] <Hixie>
othermaciej: why are we even still talking about versioning

[04:29:03.0000] <Hixie>
othermaciej: didn't we throw that out half a decade ago?

[04:29:04.0000] <annevk42>
not everyone got the memo :/

[04:30:00.0000] <Hixie>
sigh

[04:30:01.0000] <othermaciej>
Hixie: it was not my idea to make a spec supposedly for the profile attribute where 90% of the content is about the version attribute

[04:32:00.0000] <annevk42>
Hixie, did you ever discuss CORS with Mark Miller?

[04:32:01.0000] <Hixie>
yes, but i never really understood what his concern was

[04:32:02.0000] <othermaciej>
what does #FIXED in a DTD mean?

[04:33:00.0000] <Hixie>
othermaciej: that the attribute is optional but if present must have the given value

[04:33:01.0000] <Hixie>
othermaciej: and that the attribute has the given value even if omitted

[04:33:02.0000] <othermaciej>
Hixie: I think Mark Miller hates origin-based security and loves capabilities-based security

[04:33:03.0000] <Hixie>
that is certainly the case

[04:33:04.0000] <Hixie>
but the web is origin-based

[04:34:00.0000] <othermaciej>
I think that is the root of his concern about CORS

[04:34:01.0000] <othermaciej>
retrofitting capabilities-based security on the web seems like a fool's errand

[04:34:02.0000] <Hixie>
seems more dangerous to have a hybrid model than a single bad model

[04:34:03.0000] <othermaciej>
I wonder how things like Caja and ADSafe enable content to get added to the DOM

[04:35:00.0000] <othermaciej>
it seems almost impossible to make a safe capabilities facade on top of the DOM

[04:35:01.0000] <Hixie>
nah, it's pretty easy

[04:35:02.0000] <Hixie>
but you can't do it with existing web content

[04:36:00.0000] <othermaciej>
if you're willing to have your facade not look anything like the DOM API that exists today, then sure

[04:36:01.0000] <Hixie>
right

[04:36:02.0000] <othermaciej>
ADSAFE seems to essentially expose a postMessage-like interface for injected content to interact with the page

[04:37:00.0000] <othermaciej>
it seems like it would be easier (and possibly safer) to just use an iframe and postMessage

[04:37:01.0000] <annevk42>
it does seem like most sites and such move to a capability-based model with OAuth

[04:38:00.0000] <othermaciej>
OAuth is not the kind of object-capability scheme that Mark Miller (and Doug Crockford) are interested in

[04:40:00.0000] <othermaciej>
I'm trying to figure out what OAuth actually does, from the spec

[04:40:01.0000] <othermaciej>
is it expected that you make the OAuth authorization request from the server side?

[04:41:00.0000] <annevk42>
though it seems to me you can do the things they want on top of CORS if you just view CORS as necessary infrastructure

[04:41:01.0000] <othermaciej>
i.e. it's a server-to-server cross-site scheme?

[04:42:00.0000] <othermaciej>
the spec doesn't say, but it looks like it has to be

[04:42:01.0000] <annevk42>
are you sure it's not what they're talking about?

[04:43:00.0000] <annevk42>
the example Tyler gave looks a lot like the OAuth abstract example

[04:43:01.0000] <othermaciej>
oh, I'm not saying Mark Miller doesn't like OAuth (I have no idea), just that it's not an object-capability scheme

[04:43:02.0000] <annevk42>
I'm not very familiar with OAuth myself unfortunately

[04:43:03.0000] <othermaciej>
as far as I can tell, it's a way of formalizing one-time secret tokens

[04:44:00.0000] <othermaciej>
I don't think OAuth is implementable on the client on top of XHR+CORS

[04:44:01.0000] <othermaciej>
because it requires the service provider and consumer to have a shared secret which is used in the protocol, and you can't be sending out your shared secret in client-side JS

[04:46:00.0000] <stevierabie>
lol

[04:46:01.0000] <stevierabie>
:D 

[04:46:02.0000] <stevierabie>
:| 

[04:46:03.0000] <othermaciej>
CORS would replace the use of a consumer secret with the Origin header plus something to verify that the request is coming from the user's browser (e.g. a cookie)

[04:49:00.0000] <othermaciej>
you also have to sign requests with an RSA private key

[04:49:01.0000] <annevk42>
they're no fan of cookies either

[04:50:00.0000] <othermaciej>
OAuth as designed seems to require server-to-server communication for cross-site requests

[04:50:01.0000] <othermaciej>
I'm not sure how you would apply this model to a client-to-server cross-site mechanism

[04:59:00.0000] <annevk42>
It seems like use stuff such as ADSafe and Caja is also solved by sandboxed iframes

[04:59:01.0000] <annevk42>
it would actually be good to get that implemented

[05:00:00.0000] <annevk42>
though if only a few browsers do it there's less of a benefit of course

[05:12:00.0000] <othermaciej>
I don't think I really understand how Caja works

[05:16:00.0000] <othermaciej>
omg it really does have a DOM wrapper

[05:19:00.0000] <Hixie>
doesn't it have to?

[05:20:00.0000] <annevk42>
I'm always somewhat worried that CORS is completely the wrong solution. It is certainly a lot more complex than desired. But then the critique has been vague and not quite compelling...

[05:22:00.0000] <Hixie>
as maciej said earlier, the critique has been basically "the web's security model sucks"

[05:22:01.0000] <Hixie>
which is true

[05:22:02.0000] <Hixie>
but doesn't do much to help us come up with a solution

[05:23:00.0000] <annevk42>
an alternative model I could imagine is that you do not have the origin and the server simply states whether it accepts cross-origin requests

[05:24:00.0000] <annevk42>
and there's never cookies or authentication involved I guess

[05:24:01.0000] <Hixie>
then how do you do things on behalf of the user?

[05:25:00.0000] <annevk42>
with some key exchange I suppose

[05:25:01.0000] <Hixie>
if you can't send cookies to the third party site, how do you do that?

[05:25:02.0000] <Hixie>
even things like openid rely on being able to send cookies to teh third party host, though they do it at the top level or in iframes, not with XHR

[05:26:00.0000] <othermaciej>
omg, Caja actually has its own HTML parser

[05:26:01.0000] <Hixie>
is it html5-compliant?

[05:27:00.0000] <othermaciej>
I'm pretty sure it's not

[05:28:00.0000] <othermaciej>
I do see a comment: "TODO(mikesamuel): validate sanitizer regexs against the HTML5 grammar"

[05:28:01.0000] <Hixie>
they use regexps?!

[05:28:02.0000] <othermaciej>
so it seems

[05:29:00.0000] <Hixie>
jesus, making style sheets block scripts in the parser is turning into quite the gigantic rewrite

[05:33:00.0000] <Hixie>
well i'm sure glad English supports continuations

[05:34:00.0000] <Hixie>
it's gonna make describing how to spin an event loop while waiting for something a lot easier

[05:37:00.0000] <annevk42>
for algorithms like this I certainly don't envy the person trying to test it

[05:37:01.0000] <Hixie>
actually testing that is relatively easy, compared to implementing it

[05:38:00.0000] <othermaciej>
Hixie: how is waiting for style sheets any different than waiting for the script itself (in the external script case)?

[05:39:00.0000] <gsnedders_>
annevk42, jgraham: get my email?

[05:39:01.0000] <othermaciej>
Caja also has a CSS parser (for style= values) which amounts to splitting on ; and then splitting on :

[05:39:02.0000] <Hixie>
othermaciej: i have to trigger the run based on either the last style sheet completing its fetching algorithm _or_ the script completing _its_, whichever comes last

[05:39:03.0000] <Hixie>
othermaciej: also, i'm taking this opportunity to change the way the parser is specified so that it doesn't hang the browser while waiting for the script to load

[05:40:00.0000] <Hixie>
othermaciej: but instead spins the event loop while waiting

[05:40:01.0000] <stevierabie>
SHUT UP

[05:40:02.0000] <stevierabie>
plz

[05:40:03.0000] <Hixie>
othermaciej: (that's a big part of the rewrite)

[05:40:04.0000] <annevk42>
gsnedders_, I did; so no movie?

[05:40:05.0000] <othermaciej>
Hixie: all you have to do is test for whether execution can continue when the script finishes loading, and every time a stylesheet finishes loading

[05:40:06.0000] <Hixie>
stevierabie: hm?

[05:40:07.0000] <gsnedders_>
annevk42: right

[05:40:08.0000] <stevierabie>
lol

[05:40:09.0000] <annevk42>
gsnedders_ :/

[05:40:10.0000] <gsnedders_>
annevk42: Unless you want to see something else

[05:40:11.0000] <othermaciej>
Hixie: ah, that would be a major bug in the old way it was specified

[05:40:12.0000] <annevk42>
gsnedders_, I've no idea what they're showing

[05:41:00.0000] <annevk42>
gsnedders_, we could maybe do movie/food here at Arjan's place

[05:41:01.0000] <gsnedders_>
annevk42: Dunno if jgraham knows where that is though

[05:41:02.0000] <annevk42>
gsnedders_, he's still a bit sleepy though, but prolly up for it

[05:41:03.0000] <Hixie>
othermaciej: "all you have to do" makes it sound easy, but it's a lot harder to have two different tasks trigger something to resume rather than just having no task at all and hanging until something is ready :-)

[05:41:04.0000] <annevk42>
gsnedders_, are you at jgraham's place?

[05:42:00.0000] <gsnedders_>
annevk42: No, but I'm quite close to it

[05:42:01.0000] <othermaciej>
Hixie: well the hanging was a bug anyway

[05:42:02.0000] <annevk42>
Arjan's place is downtown, real easy to find

[05:42:03.0000] <Hixie>
othermaciej: indeed

[05:42:04.0000] <othermaciej>
fixing the hanging is the only plausibly hard part

[05:43:00.0000] <othermaciej>
having two tasks trigger something instead of one just needs state

[05:43:01.0000] <othermaciej>
(i.e. each task updates state, checks the other's output state, and resumes if both things are complete)

[05:43:02.0000] <gsnedders_>
annevk42: Yeah, I know where it is. Been there before.

[05:43:03.0000] <gsnedders_>
annevk42: Coco - livet före Chanel, Det enda rationella, Fame, Flickan som lekte med elden, Harry Potter och halvblodspri, Inglourious Basterds, Julie & Julia, Kalas Alfons!, Michael Jackson's - This is it, Surrogates, Taking Woodstock, The Ugly Truth, Äntligen Midsommar!

[05:43:04.0000] <gsnedders_>
annevk42: That's what's on

[05:44:00.0000] <othermaciej>
I wonder if hsivonen implemented hanging in Mozilla's html5 parser

[05:44:01.0000] <othermaciej>
I can't imagine he did

[05:44:02.0000] <Hixie>
othermaciej: because of the hanging part, it used to be that there were no tasks triggering state

[05:44:03.0000] <Hixie>
i don't think he did

[05:44:04.0000] <othermaciej>
I'm kinda surprised no one spotted the bug - maybe he just assumed stopping parsing and resuming later was equivalent

[05:45:00.0000] <othermaciej>
(which it isn't, since events can be processed)

[05:45:01.0000] <annevk42>
gsnedders_, hmm, of those that I haven't seen Taking Woodstock seems kind of interesting

[05:45:02.0000] <Hixie>
i believe this bug has been brought to my attention before

[05:45:03.0000] <Hixie>
but maybe only on irc

[05:46:00.0000] <gsnedders_>
annevk42: I don't really mind what we do

[05:50:00.0000] <annevk42>
try to think of something :)

[05:50:01.0000] <gsnedders_>
annevk42: Me? Decisive? :P

[05:58:00.0000] <othermaciej>
I think I found at least two obvious security bugs in Caja's DOM facade just by code inspection

[06:00:00.0000] <Hixie>
ok i did it

[06:00:01.0000] <Hixie>
i'll review it tomorrow

[06:00:02.0000] <Hixie>
nn

[06:20:00.0000] <annevk42>
gsnedders_, see pm

[10:19:00.0000] <erlehmann>
is the timeline for last call still oct 2009 (this month ?)

[13:53:00.0000] <foolip>
does anyone know a script hacks to cause unknown element to be parsed as void elements?

[13:54:00.0000] <foolip>
in IE they are by default and the document.createElement hack can make them be parsed as element with end tags

[13:55:00.0000] <foolip>
for all other browsers something to cause e.g. <source> or <itemref> as void elements would be nice

[13:56:00.0000] <foolip>
*to be parsed as

[14:48:00.0000] <annevk42>
foolip, don't think there's such a thing

[14:58:00.0000] <Philip`>
foolip: No sane browser allows scripts to change parser behaviour

[15:15:00.0000] <foolip>
Philip`: no, I guess that might be strange

[15:16:00.0000] <gsnedders_>
annevk42: http://en.wiktionary.org/wiki/Anne#Dutch

[15:19:00.0000] <foolip>
http://en.wiktionary.org/wiki/Anne#Swedish

[15:27:00.0000] <Philip`>
foolip: Well, browsers do lots of things that could be considered "strange"

[15:29:00.0000] <Philip`>
but changing the parser by calling createElement seems to go beyond that and is exposing implementation details in a crazy way

[15:31:00.0000] <foolip>
Philip`: IEs behavior could hardly have been intentional as a service to those who want the choice between void/non-void parsing for new elements

[15:32:00.0000] <Philip`>
Indeed

[15:32:01.0000] <foolip>
hmmm, is http://livedom.validator.nu/ actually a JS implementation of the HTML5 parsing algorithm?

[15:34:00.0000] <Philip`>
/me assumes it indicates something like IE having a per-document map of element names, initialised with standard HTML elements with the 'parse as HTML' flag enabled, and createElement accidentally inserts the named element in that map (with the parse-as-XML behaviour (like it uses for 'namespaced' elements) instead of parse-as-HTML), and the parser looks in that map to work out how to parse things

[15:34:01.0000] <Philip`>
or something roughly along those lines

[15:34:02.0000] <Philip`>
foolip: Yes

[15:34:03.0000] <Philip`>
foolip: (It's a Java implementation compiled to JS using GWT)

[15:37:00.0000] <foolip>
wow, that was not pretty code

[15:38:00.0000] <foolip>
(http://livedom.validator.nu/nu.validator.htmlparser.HtmlParser.nocache)

[15:40:00.0000] <Philip`>
foolip: http://philip.html5.org/tools/parser/ has a partial parser with readable code

[15:40:01.0000] <foolip>
yeah, I've tried that before, but assume that "old and unfinished and broken" is true

[15:41:00.0000] <Philip`>
It is :-)

[15:41:01.0000] <Dashiva>
http://www.engadget.com/2009/10/10/t-mobile-we-probably-lost-all-your-sidekick-data/

[15:41:02.0000] <Dashiva>
"oops"

[15:42:00.0000] <Philip`>
It could be made to work, but I expect it would take quite a bit of effort :-(

[15:42:01.0000] <Philip`>
(Most of the work could be reusable for generating parsers in other languages though)

[15:45:00.0000] <Philip`>
Dashiva: With all this talk of cloud computing, I presumed someone would have noticed that atmospheric clouds tend to be quite short-lived phenomena

[15:45:01.0000] <Dashiva>
Or, you know, that backups are a good idea

[15:46:00.0000] <Philip`>
(Actually, how do clouds die?)

[15:46:01.0000] <Dashiva>
How can you kill that which has no life?

[15:47:00.0000] <Philip`>
(Do they usually precipitate away, or do they just disperse or something?)

[15:47:01.0000] <Philip`>
(Wikipedia doesn't seem to have any details on the full lifecycle of a cloud)

[15:47:02.0000] <Philip`>
Dashiva: I was speaking metaphorically :-p

[15:48:00.0000] <Philip`>
Anyway, zombies aren't alive and you can kill them with cricket bats

[15:48:01.0000] <Dashiva>
I think the proper term is deanimate

[15:50:00.0000] <Philip`>
During a zombie invasion, I bet you'd be shouting "kill them!" and not "deanimate them!"

[15:50:01.0000] <Dashiva>
Sure, but proper rules are the first victims of any war

[15:50:02.0000] <Dashiva>
Especially the zombie apocalypse kind

[15:54:00.0000] <Dashiva>
"This multicell cloud structure exists until a cold downdraft preceding the cumulonimbus at ground level flows before the cloud at a distance sufficient to disrupt updraft (5–10 kilometers). From this moment on the cumulonimbus cloud quickly degrades and dissipates, forming cirrus spissatus, dense anvil-like cirrus, stratocumulus diurnalis or stratocumulus vesperalis."

[15:57:00.0000] <Philip`>
Well, duh

[15:58:00.0000] <Philip`>
I thought that was obvious

[15:59:00.0000] <Philip`>
but that's just saying how they change, not how they finally disappear

[16:19:00.0000] <Dashiva>
Philip`: Just apply the same method to the resulting cloud until the result isn't a cloud anymore :)

[16:24:00.0000] <Philip`>
Dashiva: But that method will result in an infinite number of clouds

[16:25:00.0000] <Philip`>
which is clearly not the answer, because we would all drown

[16:25:01.0000] <Dashiva>
Well, the results aren't always clouds

[16:25:02.0000] <Philip`>
Okay, an infinite number of clouds plus a lot of anvils

[16:25:03.0000] <Philip`>
if I'm reading your quote correctly

[16:26:00.0000] <Dashiva>
No, no

[16:26:01.0000] <Dashiva>
The quote only describes the result when input is cumulonimbus

[16:26:02.0000] <Dashiva>
A dissipating cirrus spissatus would result in something else

[16:27:00.0000] <Philip`>
Could you be more specific?

[16:27:01.0000] <Philip`>
For all I know, it results in another cumolonimbus, twice the size of the original one

[16:29:00.0000] <Dashiva>
Philip`: I don't think that jives with "dissipating"


2009-10-11
[23:15:00.0000] <hagabaka>
hmm, still have to use <a> for linking?

[00:39:00.0000] <deltab>
hagabaka: if you mean making something the target of a link, no; that's not been necessary since HTML4

[00:40:00.0000] <deltab>
hagabaka: instead you can set an id attribute on almost any element

[00:41:00.0000] <deltab>
<a href="#section2">section 2</a> ... <div id="section2"> ...

[01:14:00.0000] <boblet>
hey all, anyone know what’s up with validator.nu profiles? Pedagogical and polyglot don’t seem to be active

[03:34:00.0000] <Hixie>
http://www.hixie.ch/tests/adhoc/html/navigation/unload/001.html

[03:43:00.0000] <annevk42>
fwiw, I've often been bit by not changing enctype and type=file

[03:45:00.0000] <annevk42>
the spec should maybe have some kind of warning around type=file

[03:45:01.0000] <annevk42>
or an example

[03:46:00.0000] <annevk42>
Hixie, fun, didn't even know we supported onunload

[03:57:00.0000] <remysharp>
Hixie mentioned some time ago how many different type of heading elements there were, do you know if it was 18 or 22?

[04:19:00.0000] <zcorpan_>
caption,dt,h1,h2,h3,h4,h5,h6,hgroup,label,legend,optgroup,rt,th,title ... are 15

[04:28:00.0000] <zcorpan_>
"The applet element is a Java-specific variant of the embed element. The applet element is now obsoleted so that all extension frameworks (Java, .NET, Flash, etc) are handled in a consistent manner."

[04:28:01.0000] <zcorpan_>
is .NET a client-side extension framework?

[04:28:02.0000] <annevk42>
works in Silverlight I think

[04:29:00.0000] <zcorpan_>
ah

[04:33:00.0000] <gsnedders_>
Hixie: Do you have any way of manually adding people to the list yourself?

[04:33:01.0000] <gsnedders_>
Actually, I know you do in Mailman…

[04:33:02.0000] <webben>
it's a bit meaningless to count all 6 hX elements as a types of heading elements.

[04:34:00.0000] <gsnedders_>
Hixie: Seeming I can't get subscribed to it myself, can you try adding gsnedders@op? Also, look to see if gsneddon@op is subscribed?

[04:55:00.0000] <Philip`>
webben: Why? They are elements, and they have heading-related semantics

[04:56:00.0000] <Philip`>
so it seems justifiable to include them in a count of heading elements

[04:57:00.0000] <Philip`>
"There are already about 18 elements in HTML that have some kind of semantic that basically boils down to "heading" (<head> <title> <h1> - <h6> <hgroup> <header> <strong> <caption> <thead> <th> <label> <legend> <optgroup> <dt>)"

[05:09:00.0000] <daedb>
Philip`: Why is <strong> in that list?

[05:30:00.0000] <Philip`>
daedb: Ask Hixie :-)

[06:02:00.0000] <daedb>
Hixie: Why is <strong> included in the 18-element heading list?

[06:20:00.0000] <webben>
daedb: I guess because headings are important text?

[06:20:01.0000] <webben>
Full disclosure: I've used <strong> in the past when I ran out of h-levels.

[07:40:00.0000] <Dashiva>
So if there's no @version, RDFa content is assumed to be the most recent version, and they're expecting incompatible changes between versions. Sounds like fun.

[09:46:00.0000] <Dashiva>
Maybe the inline bug report feature should have a note suggesting people include rationales

[09:53:00.0000] <Philip`>
Dashiva: A single-line text box seems to actively discourage rationales

[09:55:00.0000] <Dashiva>
Maybe there should be two boxes, one for the comment and another for rationale. That might be even more effective than a single, larger box.

[09:55:01.0000] <Philip`>
Don't want to discourage people from quick comments on typos etc, though

[09:56:00.0000] <Philip`>
Extra boxes might scare people away

[09:59:00.0000] <Dashiva>
I don't think losing typo corrections is a big deal, as those can be fixed without any process at all

[09:59:01.0000] <Dashiva>
Whereas technical changes lead to discussion and can take quite a bit of time to resolve

[10:13:00.0000] <jgraham>
I think the feedback thing should have something like Summary: [  ] and Description (optional): [     ] to make it work for typos and other feedback too

[10:14:00.0000] <Dashiva>
I don't think that'd help for cases like [Bug 7886] New: Drop applet, marquee

[10:17:00.0000] <jgraham>
Hmm... I don't really see what the problem would be. The second box would allow people to provide long rationale

[10:20:00.0000] <Dashiva>
Allow, but it wouldn't encourage

[10:22:00.0000] <jgraham>
Sure but it should be pretty obvious that if you put "drop applet, marquee" with no extra information that doesn't constitute actionable feedback

[13:58:00.0000] <Hixie>
http://www.hixie.ch/tests/adhoc/html/navigation/unload/

[16:18:00.0000] <caution>
are frames/iframes removed from the html5 standard?

[16:18:01.0000] <Hixie>
frames are, iframes aren't

[16:19:00.0000] <Hixie>
frames were also removed from html4


2009-10-12
[18:52:00.0000] <Hixie>
othermaciej: any news on http://www.w3.org/mid/4ACB684A.9020505⊙wo ?

[23:57:00.0000] <hsivonen>
someone has said something to me but my IRC client no longer remembers

[23:58:00.0000] <annevk42>
Hixie, <span title="dom-input-value-default">value</span> s/value</default</

[23:59:00.0000] <Hixie>
thanks fixed

[00:00:00.0000] <hsivonen>
I'm surprised that Larry seems unaware of the reason for the Windows-1252 default.

[00:18:00.0000] <othermaciej>
Hixie: Jeanne agreed to refile those as bugs

[00:19:00.0000] <Hixie>
k thx

[01:40:00.0000] <ginger>
M65FLXFAILZAOVV3MGBZKTGQDLOPNXSP6ORA4VCGOV5S6YEIMHJK-

[01:40:01.0000] <ginger>
MH3GP3PAP4MTWCLHNEB62EZON43CNIHWOBXMSATQKC6VMLXTC6QJ-

[01:40:02.0000] <ginger>
4JCRXRKCLNMSNRTDZTYX25DU5BXTRDLE5BBPIWSPIVSCGOAQY

[01:40:03.0000] <ginger>
ups

[01:40:04.0000] <ginger>
sorry

[01:42:00.0000] <ginger>
exit

[01:43:00.0000] <pesla>
lol

[01:45:00.0000] <othermaciej>
hsivonen: do you know where in a Firefox .app bundle I can find the default encoding used for HTML in this localization? or is the table in the source somewhere?

[01:55:00.0000] <hsivonen>
othermaciej: in the local jar (en-US.jar in the en-US case) in file locale/LOCALENAME/global-platform/OS/intl.properties

[01:55:01.0000] <hsivonen>
othermaciej: pref intl.charset.default

[01:56:00.0000] <hsivonen>
where LOCALENAME is a code like en-US

[01:56:01.0000] <hsivonen>
and OS is mac, unix or win

[01:56:02.0000] <hsivonen>
s/local jar/locale jar

[01:56:03.0000] <othermaciej>
is that in the source code or in the binary?

[01:57:00.0000] <othermaciej>
ok I found it

[01:57:01.0000] <hsivonen>
http://mxr.mozilla.org/l10n-mozilla1.9.1/find?text=&kind=text&string=intl.properties

[01:58:00.0000] <othermaciej>
we should probably copy the Firefox behavior for Safari/WebKit

[01:58:01.0000] <hsivonen>
Korean sets it to EUC-KR, for example: http://mxr.mozilla.org/l10n-mozilla1.9.1/source/ko/toolkit/chrome/global/intl.properties

[01:58:02.0000] <othermaciej>
right now we use WinLatin1 as the default for all locales

[01:59:00.0000] <hsivonen>
othermaciej: interesting! I guess it's good enough, then. Do you know if users routinely change it e.g. in Japan or Russia?

[02:00:00.0000] <othermaciej>
hsivonen: I think it's not good enough for at least some locales

[02:00:01.0000] <hsivonen>
ok

[02:00:02.0000] <othermaciej>
hsivonen: Apple just doesn't sell as much to those locales so it hasn't been a priority

[02:00:03.0000] <othermaciej>
I know that in Russia, defaulting to Latin1 fails

[02:00:04.0000] <othermaciej>
I believe it's bad in China and Japan too

[02:00:05.0000] <othermaciej>
and probably Korea

[02:00:06.0000] <othermaciej>
other than that, I don't know

[02:01:00.0000] <othermaciej>
I have not heard of problem reports from Israel, Greece, Eastern/Central Europe, etc where I believe we have non-trivial presence

[02:02:00.0000] <othermaciej>
I just wanted to verify that some of the countries in Hixie's map of the "Western World" don't get Latin-1 in Firefox

[02:03:00.0000] <hsivonen>
othermaciej: which country doesn't?

[02:03:01.0000] <othermaciej>
Poland, Greece, Israel are the three I checked

[02:04:00.0000] <othermaciej>
based on that I would expect that Czech, Hungary, the baltic states, slovakia, and croatia do not either

[02:04:01.0000] <hsivonen>
where did Hixie define any of those countries as Western? (I see Firefox defines Greece as Western)

[02:04:02.0000] <othermaciej>
he linked to this map of "the Western world": http://upload.wikimedia.org/wikipedia/commons/6/6f/Westerncultures_map.png

[02:05:00.0000] <othermaciej>
(not in the spec, in email discussion)

[02:05:01.0000] <hsivonen>
OK. that clearly doesn't properly match Windows-1252

[02:06:00.0000] <othermaciej>
I suggested that instead of "Western demographics", the spec should refer to "locales that use the Latin script", perhaps with explicit reference to windows-1252 completely or almost completely covering their alphabets

[02:06:01.0000] <othermaciej>
but it might be that Windows-1252 is also the default in some locales for historic reasons only; I did not check

[02:07:00.0000] <othermaciej>
I suspect there are also countries not on Hixie's map that would probably use 1252 (probably Albania for instance)

[02:07:01.0000] <hsivonen>
othermaciej: that would still be wrong for Polish, Czech, etc.

[02:08:00.0000] <othermaciej>
hsivonen: yes, just saying "Latin script" would be wrong, but saying "locales that primarily use the Latin script, and where Windows-1252 completely or almost completely covers their alphabet" would be right

[02:08:01.0000] <hsivonen>
othermaciej: I'm not yet sure if that covers Estonia the right way

[02:08:02.0000] <othermaciej>
the Estonian language is not covered by 1252

[02:09:00.0000] <othermaciej>
whether 1252 gets used anyway, I don't know

[02:09:01.0000] <hsivonen>
othermaciej: but do browsers still traditionally ship with a Windows-1252 default to Estonia?

[02:09:02.0000] <annevk2>
othermaciej, such a definition is very close to circular

[02:09:03.0000] <othermaciej>
annevk2: it's not circular at all

[02:10:00.0000] <annevk2>
i guess not, but still

[02:10:01.0000] <othermaciej>
it assumes a text encoding based on the alphabet of the locale 

[02:10:02.0000] <hsivonen>
I still think it would be more useful to define the defaults for locales where you don't get away with shipping with Windows-1252

[02:10:03.0000] <othermaciej>
which is in fact how that decision is actually made

[02:10:04.0000] <othermaciej>
hsivonen: there's definitely some locales where shipping Windows-1252 is a big problem

[02:11:00.0000] <othermaciej>
hsivonen: I don't think any current browser has a custom default encoding for only those locales

[02:11:01.0000] <hsivonen>
othermaciej: FWIW, in the 1980s, Apple (rightly) decided to ship MacRoman to Finland even though MacRoman doesn't cover the whole alphabet according to orthographers in ivory towers

[02:13:00.0000] <othermaciej>
hsivonen: I'm not saying it would be wrong to change the default encoding for only a small number of locales; I'm just not sure anyone actually would do that

[02:24:00.0000] <Hixie>
hsivonen and i were talking about this earlier, and i think the preferable solution would be a table that lists the places where 1252 isn't the default, and lists what the default should be there

[02:24:01.0000] <Hixie>
and then says "1252 for everything else"

[02:25:00.0000] <jgraham>
/me thinks this has generated a lot of discussion for a non-normative sentence that could be cut from the spec without significant harm

[02:25:01.0000] <jgraham>
(unless you do actually spec the default in other places but I guess that will cause even more discussion)

[02:27:00.0000] <annevk2>
Hixie, that sounds good, although it still sucks

[02:27:01.0000] <annevk2>
one day I'll find a better solution

[02:28:00.0000] <Hixie>
HTML sucks, but one day we'll find a better solution. :-)

[02:28:01.0000] <jgraham>
Listing it based on places rather than language sounds wrong.

[02:28:02.0000] <Hixie>
i don't mind what the key is

[02:28:03.0000] <othermaciej>
Hixie: I like that idea, if browsers are actually willing to follow such a list

[02:28:04.0000] <annevk2>
having pages render correctly based on the local of your browser is just a tad too wrong

[02:29:00.0000] <annevk2>
though apparently so far the only workable solution

[02:29:01.0000] <jgraham>
Yeah the whole idea of a locale-specific default is clearly broken. But there is nothing we can do

[02:29:02.0000] <othermaciej>
annevk2: another possibility is to try to guess the language, or do it based on country code TLDs, but I suspect that would be more broken too

[02:29:03.0000] <hsivonen>
annevk2: Opera Mini doesn't have charset defaulting UI, and Opera Mini works in Norway and Russia. How does it deal?

[02:29:04.0000] <jgraham>
othermaciej: The spec already allows for that of course

[02:30:00.0000] <annevk2>
hsivonen, we don't? I've no idea

[02:30:01.0000] <othermaciej>
The spec does let you autodetect encoding, I don't think it lets you guess based on the TLD

[02:30:02.0000] <annevk2>
/me is fixing XHR bugs

[02:30:03.0000] <annevk2>
after that I'm going to strongly consider working on CSSOM again

[02:30:04.0000] <annevk2>
seems more high-pri than Web Encoding

[02:30:05.0000] <annevk2>
s

[02:31:00.0000] <hsivonen>
I have no idea how charsets work in Opera Mini, but the inputs have to be page, heuristics, server domain, client localization and/or client address, because there's no UI

[02:32:00.0000] <jgraham>
othermaciej: I don't see why "other algorithms to the data stream" couldn't include looking at the URL

[02:32:01.0000] <hsivonen>
Interestingly, Nokia felt they should include the charset menu in MicroB

[02:33:00.0000] <annevk2>
mkay, I'm somewhat intrigued now, if I run across someone from what team I'll ask

[02:33:01.0000] <hsivonen>
/me isn't curious enough to install a Russian localization of Mini for testing if the UI language is an input

[02:34:00.0000] <jgraham>
annevk2: You could go up a couple of floors and you would run into dozens of them ;)

[02:34:01.0000] <annevk2>
that'd require effort :)

[02:36:00.0000] <jgraham>
othermaciej: (ALthough I guess data stream could be interpreted as the document rather than the document+headers but it's hard to tell because that section variously talks about "resource", "file" and "data stream")

[02:36:01.0000] <othermaciej>
jgraham: if it turns out to be a workable solution I'm sure no one will let the spec stop them

[02:37:00.0000] <jgraham>
othermaciej: Indeed, so we may as well make it explicitly allowed

[02:38:00.0000] <jgraham>
/me will file a bug

[03:02:00.0000] <annevk2>
I guess XHR should get domintro boxes as well

[03:02:01.0000] <annevk2>
but maybe during CR so I don't have to fix bugs all the time in two places

[03:02:02.0000] <annevk2>
/me adds a note

[03:04:00.0000] <gsnedders>
domintro?

[03:05:00.0000] <gsnedders>
Just introduction to the DOM in general, or?

[03:08:00.0000] <annevk2>
gsnedders, class=domintro

[03:08:01.0000] <annevk2>
see html5

[04:34:00.0000] <annevk2>
funny thing: UTF-8 doubles size of requests so use a single-byte encoding and percent-escape it

[04:35:00.0000] <Dashiva>
... what?

[04:35:01.0000] <Dashiva>
Percent-encoding can potentially triple the size, though

[04:41:00.0000] <hsivonen>
annevk2: huh?

[04:41:01.0000] <annevk2>
Dashiva, the triple sizing is the joke

[04:41:02.0000] <annevk2>
for reference: http://lists.w3.org/Archives/Public/public-webapps/2009OctDec/0136.html

[05:17:00.0000] <hsivonen>
Out of personal interest, I started a spreadsheet where I try to score W3C TR page publications from 0 to 4 depending on how many of Gecko, WebKit, Presto and Trident make a serious effort to support a given spec

[05:18:00.0000] <hsivonen>
Three findings: 1) Lots of zeros. 2) I'm ignorant about the implementation status of a lot of stuff. 3) I'm ignorant about the way the SVG WG organizes its specs.

[05:20:00.0000] <annevk2>
is it an online spreadsheet so others can help out?

[05:20:01.0000] <hsivonen>
annevk2: not yet.

[05:21:00.0000] <hsivonen>
annevk2: should I put it on Google Docs or elsewhere?

[05:21:01.0000] <annevk2>
wiki or google works I suppose

[05:21:02.0000] <hsivonen>
OK.

[05:21:03.0000] <othermaciej>
hsivonen: how would you could "serious effort"?

[05:22:00.0000] <othermaciej>
and what counts as supporting? Does Gecko "support" RDF for instance?

[05:22:01.0000] <hsivonen>
othermaciej: I marked Gecko as supporting RDF/XML and RDF concepts

[05:22:02.0000] <hsivonen>
othermaciej: and I marked all four supporting ARIA

[05:22:03.0000] <Hixie>
i thought we dropped our rdf support

[05:22:04.0000] <othermaciej>
does Gecko expose its support for RDF/XML to the Web somehow?

[05:22:05.0000] <hsivonen>
othermaciej: so maybe the bar should be any support at all 

[05:22:06.0000] <hsivonen>
othermaciej: as opposed to "serious"

[05:22:07.0000] <hsivonen>
othermaciej: I have no idea

[05:22:08.0000] <othermaciej>
there's a lot of TR publications, wow

[05:23:00.0000] <hsivonen>
othermaciej: if it doesn't, it shouldn't count towards to score

[05:23:01.0000] <hsivonen>
othermaciej: see my finding #2 above

[05:24:00.0000] <annevk2>
you should prolly also have something like spec-obsolete-in-favor-of-something-else

[05:24:01.0000] <annevk2>
e.g. for HTML4, CSS1, etc.

[05:24:02.0000] <othermaciej>
sXBL scores a 0 *and* is obsolete in favor of something else

[05:25:00.0000] <annevk2>
maybe we could just color those light grey

[05:26:00.0000] <annevk2>
e.g. colors for draft maturity and numbers for impl status per vendor

[05:27:00.0000] <othermaciej>
I'm definitely interested in seeing this data, and possibly in helping to complete it

[05:28:00.0000] <smaug>
hsivonen: so are you looking at *all* the TRs?

[05:30:00.0000] <Hixie>
annevk2: so i have some feedback regarding legacy encodings and stuff like that... should I tell them you're dealing with that?

[05:31:00.0000] <hsivonen>
smaug: all except Notes and WDs officially classified as abandoned

[05:31:01.0000] <jgraham>
At least one Note has multiple implementations (XPath)

[05:32:00.0000] <smaug>
There are of course TRs which aren't for browsers

[05:34:00.0000] <hsivonen>
smaug: those would simply score 0 as far as implementations in browser engines go

[05:34:01.0000] <smaug>
right

[05:34:02.0000] <hsivonen>
/me has trouble getting Google Docs accept an HTML file as a spreadsheet

[05:35:00.0000] <Hixie>
ok bed time now

[05:35:01.0000] <Hixie>
nn

[05:35:02.0000] <smaug>
hsivonen: do you count extensions as "make a serious effort to support"?

[05:36:00.0000] <hsivonen>
smaug: I don't

[05:36:01.0000] <hsivonen>
hmm. Do Google Docs spreadsheets not support hyperlinks in table cells?

[05:37:00.0000] <annevk2>
Hixie, not sure, if I'm going to do CSSOM again also dealing with encodings would be distracting

[05:37:01.0000] <annevk2>
/me needs a real annevk2

[05:37:02.0000] <smaug>
Btw, gecko does still support some rdf

[05:37:03.0000] <smaug>
at least with templates

[05:38:00.0000] <hsivonen>
smaug: is it Web-exposed? I tentatively scored RDF concepts and RDF/XML as being implemented in Gecko

[05:38:01.0000] <hsivonen>
I'll try to battle Google Docs later.

[05:38:02.0000] <smaug>
yes, you can use templates in content pages

[05:38:03.0000] <hsivonen>
clearly, Google Docs still has a long way to go to compete with Excel and OOo Calc

[05:38:04.0000] <hsivonen>
smaug: OK. thanks

[06:09:00.0000] <hsivonen>
OK. I finally managed to get Google Docs ingest the spreadsheet after I used .xls format...

[06:09:01.0000] <hsivonen>
http://spreadsheets.google.com/ccc?key=0AtnDcoh7FXfAdEFuWVlVVDZTVkFWdnRqaWFGMzNYM3c&hl=en

[06:09:02.0000] <hsivonen>
now back to work

[06:10:00.0000] <smaug>
hsivonen: I think Opera has some VoiceXML support (at least Opera used to support XHTML+Voice)

[06:11:00.0000] <smaug>
ah, you marked it ?

[06:11:01.0000] <hsivonen>
I think I now made it world-writable

[06:13:00.0000] <smaug>
hsivonen: should I ? if there is a patch waiting for review to implement a spec?

[06:13:01.0000] <smaug>
patch which might even land

[06:14:00.0000] <hsivonen>
smaug: go ahead. Please use the notes column to mention it's about to land

[06:17:00.0000] <daedb>
CSS question: Are styles with a :lang() selector really supposed to be applied to descendants in a different language?

[06:19:00.0000] <gsnedders>
Well sure, normal inheritance rules apply.

[06:19:01.0000] <gsnedders>
How you specify what element to set properties on has no effect on how they are inherited.

[06:19:02.0000] <gsnedders>
daedb: ^^

[06:20:00.0000] <hsivonen>
I hate it when I break Hixie's Live DOM Viewer

[06:21:00.0000] <daedb>
gsnedders: That seems counter-intuitive to me, but alright :)

[06:24:00.0000] <Dashiva>
daedb: If you want to limit it, use :lang() to target the descendants with specified language

[06:29:00.0000] <daedb>
Dashiva: It's not terribly important to me. I was just playing around with it and was surprised with some of the results.

[06:37:00.0000] <othermaciej>
hsivonen: interesting that there's more 4s than 3s

[06:38:00.0000] <othermaciej>
doesn't IE support Selectors API?

[06:41:00.0000] <gsnedders>
othermaciej: IE8 does

[06:41:01.0000] <othermaciej>
gsnedders: yeah, I fixed it already

[06:43:00.0000] <hsivonen>
/me wonders if someone else broke Hixie's Live DOM Viewer

[06:43:01.0000] <othermaciej>
hsivonen: I updated a few things - should I re-sort by score?

[06:43:02.0000] <hsivonen>
othermaciej: sure if you can figure out how to resort. I couldn't.

[06:46:00.0000] <othermaciej>
hsivonen: hmm, how serious should an attempt at "support" be? I noticed you didn't score anyone for HTML5

[06:46:01.0000] <hsivonen>
HTML5 is a tough one

[06:46:02.0000] <othermaciej>
obviously no one has an implementation that you could claim to be complete yet

[06:47:00.0000] <hsivonen>
Maybe it should be marked as supported, since the point of the table is to see which specs have part-of-the-platform kind of browser vendor buy-in

[06:47:01.0000] <othermaciej>
but everyone has a partial implementation, in some cases including quite complicated new parts of the spec, and everyone has an intent to do more

[06:48:00.0000] <hsivonen>
Whoa! WebKit has MathML support now?

[06:48:01.0000] <othermaciej>
partial

[06:48:02.0000] <hsivonen>
cool

[06:48:03.0000] <othermaciej>
with more in progress

[06:48:04.0000] <othermaciej>
I think everyone supports 'Syntax of CSS rules in HTML's "style" attribute'

[06:49:00.0000] <jgraham>
othermaciej: nice

[06:49:01.0000] <jgraham>
(about the MathML)

[06:51:00.0000] <othermaciej>
how does one determine if browsers support "Modularization of XHTML 1.0"?

[06:51:01.0000] <othermaciej>
are the implementation requirements any different than regular XHTML 1.0?

[06:51:02.0000] <hsivonen>
othermaciej: AFAICT, browsers that don't support DTD loading can't support it

[06:52:00.0000] <hsivonen>
when there are multiple versions of a spec, I've marked the latest not supported if only the subset already covered by a previous version is supported

[06:52:01.0000] <hsivonen>
so no browser supports XHTML 1.1

[06:52:02.0000] <hsivonen>
since the delta from 1.0 to 1.1 is ruby and no browser supports ruby in the right mime type

[06:53:00.0000] <hsivonen>
(unless Google's contribution to WebKit landed already)

[06:54:00.0000] <othermaciej>
I sucessfully sorted

[06:54:01.0000] <othermaciej>
Google has landed some Ruby stuff, though I don't know if it works sufficiently per XHTML 1.1 requirements

[06:55:00.0000] <othermaciej>
it's sad that "1" is the second-largest score category after "4"

[06:56:00.0000] <othermaciej>
though maybe Opera's next major release will greatly increase the quantity of "3"

[07:01:00.0000] <othermaciej>
I'm tempted to flip some of the HTML5 columns to 1 but I'll leave it to hsivonen's judgment

[07:04:00.0000] <othermaciej>
it looks like Gecko+WebKit is the most popular 2-combo, and the 1s are pretty evenly distributed among non-Trident engines

[07:26:00.0000] <boblet>
wonders if <h> might be worth considering for the ongoing <figure> title saga. If there are no repurposable elements that might be a nice one to add…

[07:48:00.0000] <hsivonen>
i18n FTW. Someone's email client broke Mark Davis' and Martin Dürst's names in email and the errors propagate down the thread.

[08:00:00.0000] <annevk2>
thanks othermaciej for chiming in

[08:00:01.0000] <othermaciej>
annevk2: I figured since Mark cited a specific scenario I should actually read it - I kind of tuned this discussion out last time around

[08:36:00.0000] <TabAtkins>
This is heartening information: http://4734020732036341599-a-1802744773732722657-s-sites.googlegroups.com/site/macchiato/main/updated-unicode-growth/growth_of_unicode_on_the_web.png?attachauth=ANoY7cqYWCRCtFSL4QvZl_L1Bza9-sscXBYmqJ3juoLgiogEdU53GeXZ6kVdMxir7WxjpmA1n0T0yUuu1mRKtw4bTgBXFO9-LalamXut92p1_QkEJrEqjYcyfcatfMF57R9AkxLiXEnXSljJdqihzNtp0KJDYfU6RR3Idxwc5oNgsMKqIJSm6GYFaiyj4dMyps_gby7qLjZhyIQ

[08:36:01.0000] <TabAtkins>
bLql0rUWFelspOgAlb2n0VcrsvqQso6LR-XLA6gPEwHXVqJTieitMguV0EPw0&attredirects=0

[08:38:00.0000] <jcranmer>
UTF-8 is only ~38%?

[08:38:01.0000] <TabAtkins>
Apparently.  The heartening part is the upward climb.

[08:39:00.0000] <hsivonen>
though there's still non-Unicode Chinese growth

[08:39:01.0000] <jcranmer>
how is it measured?

[08:39:02.0000] <TabAtkins>
jcranmer: Not sure.  It came from i18n thread.

[08:39:03.0000] <hsivonen>
jcranmer: I'd expect it to be percentages from the Google index as detected by Google's detector

[08:40:00.0000] <jcranmer>
I expect that it may be based on what pages claim

[08:40:01.0000] <TabAtkins>
hsivonen: Yeah, a bit.  I dunno quite why, though - utf8 is more efficient on most chinese pages.

[08:40:02.0000] <hsivonen>
TabAtkins: it's probably more about legacy software or legacy mindset than about efficiency

[08:40:03.0000] <TabAtkins>
True.

[08:43:00.0000] <annevk2>
and gov endorsed maybe, in case of gb23..

[08:43:01.0000] <zcorpan_>
the number of pages using legacy encodings might still be growing (just that utf-8 is growing faster)

[08:44:00.0000] <jgraham>
Given that the number of webpages is probably growing exponentially and nothing seems to be declining fater than linearly that would appear to be the case, yes

[08:44:01.0000] <jgraham>
*faster\

[08:45:00.0000] <hsivonen>
Is the govt still actively endorsing GB18030?

[09:13:00.0000] <annevk2>
hmm interesting, shouldn't data:... in data URLs be case-insensitive i.e. data:,x and datA:,x are the same?

[09:14:00.0000] <gsnedders|work>
Yeah

[09:14:01.0000] <annevk2>
in Firefox it seems case-sensitive

[09:15:00.0000] <gsnedders|work>
Scheme and host should be case-insensitive, every other part of the URI should be case-sensitive

[09:15:01.0000] <gsnedders|work>
(ASCII case-insensitive, that is)

[09:20:00.0000] <TabAtkins>
omg I'm bored with the frameset discussion.

[09:22:00.0000] <Dashiva>
I don't get the security aspect

[09:22:01.0000] <Dashiva>
Anyone can just right-click and choose 'open frame', then bookmark that

[09:22:02.0000] <TabAtkins>
I suspect the OP is completely irrational about that point.

[09:22:03.0000] <hendry>
has someone crafted a good HTML5 audio test? Something that tests looping, fallback to different formats and media that can perhaps test stereo?

[09:23:00.0000] <zcorpan_>
mmm stereo

[09:27:00.0000] <TabAtkins>
Dashiva: I hadn't thought of that, though, so I've gone ahead and posted it to the list.  Maybe we can get him to shut up about breaking bookmarking.

[09:29:00.0000] <TabAtkins>
It's really not hard to do properly on the server-side, if you want to.  Just pass an expiring secret around, and redirect to the front-page if the secret is out of date.

[09:30:00.0000] <hendry>
/me discovers http://en.wikipedia.org/wiki/Reference_tone

[10:16:00.0000] <annevk2>
CSSOM is a lot of work; sigh

[10:16:01.0000] <annevk2>
for every bit you write you can immediately think of like ten questions you have to answer so you can rewrite it

[10:17:00.0000] <annevk2>
exponential pain :p

[10:24:00.0000] <annevk2>
class task: define "supported style sheet language" so that CSS is included and XSLT is out without naming either

[10:25:00.0000] <TabAtkins>
"not xml-based"

[10:25:01.0000] <annevk2>
fallback: forget about architecture and just deal with it explicitly

[10:25:02.0000] <annevk2>
I should add that it is about the fundamental difference

[10:26:00.0000] <annevk2>
CSS could be xml-based and still work pretty much the same way

[10:26:01.0000] <Dashiva>
"Using a non-distributed or non-extensible language"

[10:26:02.0000] <annevk2>
lol, also an F for you :p

[10:26:03.0000] <Dashiva>
Then you just define language to be CSS

[10:26:04.0000] <TabAtkins>
Since you've only got two stylesheet languages, and I don't *think* it's likely that another will emerge in the near future, I'd go with the fallback.  Specific language can be easily amended in the future if more appropriate languages are created, but a seemingly-general classification (that's really just meant to differentiate two things) is harder to work around conceptually.

[10:27:00.0000] <TabAtkins>
...if it turns out, upon the creation of the new language, that the classification used doesn't capture the correct details.

[10:43:00.0000] <TabAtkins>
Man, db abstractions are complicated.

[10:43:01.0000] <TabAtkins>
/me is going through legacy code to update to current abstractions, and should probably add another feature to eliminate even more direct SQL strings.

[10:44:00.0000] <othermaciej>
annevk2: would XSL-FO styling count, if anyone implemented it?

[10:44:01.0000] <othermaciej>
annevk2: XSLT isn't really a stylesheet language in the same sense as CSS, it's a transform language, so there's no runtime style information resulting

[10:45:00.0000] <othermaciej>
annevk2: anyway, what part of CSSOM needs to reference the concept of "supported style sheet language"?

[11:11:00.0000] <annevk42>
othermaciej, XSL-FO would count I suppose

[11:11:01.0000] <annevk42>
othermaciej, it's the part on style sheets and the DOM; in particular whether or not a style sheet is to be created for certain Link headers and ProcessingInstruction nodes

[11:12:00.0000] <annevk42>
HTML and SVG presumably need to reference such a concept as well for <style>, <link>, etc. so maybe I should look there

[11:12:01.0000] <othermaciej>
annevk42: I see

[11:12:02.0000] <othermaciej>
annevk42: I think you should just limit it to CSS

[11:12:03.0000] <othermaciej>
there's no actually existing stylesheet language where it would be useful to expose a DOM stylesheet object, other than CSS

[11:13:00.0000] <annevk42>
Hixie just uses "specified styling language" without a link to a definition

[11:13:01.0000] <othermaciej>
or you could say MUST include CSS stylesheets, MAY include other recognized stylesheet languages that produce runtime style information rather than modifying the content

[11:14:00.0000] <annevk42>
ta

[11:14:01.0000] <TabAtkins>
annevk42: Actually, it looks like Hixie offloads the definition to CSSOM.  ^_^

[11:14:02.0000] <annevk42>
guess I'll fiddle with it a bit tomorrow

[11:15:00.0000] <annevk42>
TabAtkins, not that one

[11:15:01.0000] <TabAtkins>
Not 4.2.8?

[11:15:02.0000] <annevk42>
yes, but that term is not said to be defined in the CSSOM

[11:16:00.0000] <TabAtkins>
Okay, true, but it does defer the idea of what styling information is to CSSOM.

[11:16:01.0000] <annevk42>
just some of it

[11:17:00.0000] <annevk42>
seems hixie also defines some other concepts around style sheets that do assume CSS

[11:17:01.0000] <TabAtkins>
Those may be spec bugs.

[11:18:00.0000] <annevk42>
/me wonders whether SVG elements can have style sheets blocking scripts

[11:18:01.0000] <TabAtkins>
HTML5 should merely assume that CSS is a commonly supported styling language, not that it is the "correct" language.

[11:19:00.0000] <annevk42>
it's inside an e.g. actually

[11:19:01.0000] <TabAtkins>
Oh, right.  Those are just examples, then.

[11:20:00.0000] <TabAtkins>
Or rather, that one line (since there's only one) is.

[13:13:00.0000] <remysharp>
I've a question about the example code in the spec

[13:13:01.0000] <remysharp>
http://www.whatwg.org/specs/web-apps/current-work/multipage/sections.html#the-section-element

[13:14:00.0000] <remysharp>
the code directly above that point - the online - offline example

[13:14:01.0000] <remysharp>
I'm sure there's lots more like it, but why is it using inline JavaScript rather than DOM scripting?

[14:45:00.0000] <annevk42>
othermaciej, CaretPosition wfm too

[14:45:01.0000] <annevk42>
othermaciej, I think only WebKit implemented it and only recently

[14:45:02.0000] <annevk42>
othermaciej, so that should certainly be possible

[14:46:00.0000] <othermaciej>
annevk42: yeah it's a recent addition

[14:47:00.0000] <annevk42>
othermaciej, so containingNode is one of Element or Text?

[14:48:00.0000] <annevk42>
prolly don't need offsetKind

[14:49:00.0000] <othermaciej>
annevk42: well, you could identify form controls by their tag name

[14:50:00.0000] <othermaciej>
annevk42: but if the pointer is between two adjacent images for instance, you could get an Element that's not a form control (not sure what actually happened in our implementation)

[14:50:01.0000] <annevk42>
and maybe change containingNode to ownerNode (that is used in e.g. StyleSheet anyway)

[14:51:00.0000] <othermaciej>
I'm not sure ownerNode is the right terminology for the node containing a position - it doesn't "own" the position, that's just where the position was found

[14:51:01.0000] <annevk42>
hmm true

[14:52:00.0000] <annevk42>
just container would be somewhat compatible with DOM Range

[14:54:00.0000] <annevk42>
anyway, this can certainly work

[14:54:01.0000] <annevk42>
lets see what the Google guy thinks


2009-10-13
[20:50:00.0000] <boblet>
Hixie: a little OT, but I noticed you’re the CSS3 generated content editor. How should generated content-inserted images be positioned? position:absolute seems overkil but margin/padding/vertical-align don’t seem to work…

[23:27:00.0000] <eighty4>
gsnedders|work: you like sushi?

[00:19:00.0000] <eighty4>
gsnedders|work: got by "do you like sushi?" question?

[01:55:00.0000] <gsnedders|work>
eighty4: yes, I got the question. No, I do not.

[01:56:00.0000] <eighty4>
gsnedders|work: :)

[01:56:01.0000] <eighty4>
gsnedders|work: any preferenses?

[01:56:02.0000] <jgraham>
silly gsnedders

[01:57:00.0000] <gsnedders|work>
eighty4: Something I like.

[01:57:01.0000] <gsnedders|work>
(Which is most non-spicy stuff, which at lunch time means almost anywhere is fine.)

[01:57:02.0000] <gsnedders|work>
(Just not sushi.)

[02:02:00.0000] <eighty4>
gsnedders|work: I'm not really eating lunch down down that much. Any suggestions?

[02:03:00.0000] <gsnedders|work>
eighty4: We normally go to either Kikkobar or Yogi, occasionally further afield

[02:07:00.0000] <eighty4>
gsnedders|work: want to try something new or just go to Yogi?

[02:08:00.0000] <annevk2>
you don't like sushi? dude

[02:09:00.0000] <gsnedders|work>
That's it, I'm going to Mini to get away from you and jgraham!

[02:09:01.0000] <annevk2>
so far I'm just stalking you on IRC

[02:09:02.0000] <gsnedders|work>
eighty4: Well, there's likely going to be a large number of p[eople from Opera there today as one of the things they have is raggmonk, though that said I'm perfectly happy to go there

[02:10:00.0000] <gsnedders|work>
I… I… I… saw you when I got to work today!

[02:10:01.0000] <eighty4>
:|

[02:11:00.0000] <eighty4>
don't like raggmunk

[02:11:01.0000] <gsnedders|work>
They have other things too

[02:11:02.0000] <eighty4>
gsnedders|work: oho? on the bus?

[02:11:03.0000] <eighty4>
:)

[02:11:04.0000] <eighty4>
then lets go there

[02:11:05.0000] <gsnedders|work>
They had a really spicy curry…

[02:11:06.0000] <gsnedders|work>
And something else

[02:11:07.0000] <gsnedders|work>
eighty4: oho?

[02:13:00.0000] <gsnedders|work>
I'd rather go somewhere in the centre myself, though

[02:13:01.0000] <gsnedders|work>
But maybe I'm bias

[02:20:00.0000] <annevk2>
so zcorpan_ I can just use "xml-stylesheet processing instruction" as term I suppose?

[02:23:00.0000] <eighty4>
gsnedders|work: sure, its up to you. I just don't know what's good and whats not

[02:23:01.0000] <Dashiva>
Why not McDonalds?

[02:26:00.0000] <eighty4>
Dashiva: that's no fun

[02:26:01.0000] <gsnedders|work>
Dashiva: We have this thing called "sanity".

[02:43:00.0000] <gsnedders|work>
eighty4: Do you want to meet outside Kikkobar? We can then look there and elsewhere…

[02:43:01.0000] <gsnedders|work>
eighty4: Any idea of time?

[02:44:00.0000] <eighty4>
gsnedders|work: could meat outside opera, it's on the way for me. Around 12 ?

[02:44:01.0000] <eighty4>
we usally eat 12 here

[02:45:00.0000] <gsnedders|work>
eighty4: That means going out of the front entrance :P

[02:45:01.0000] <gsnedders|work>
eighty4: Sure, though

[02:46:00.0000] <eighty4>
gsnedders|work: you don't happen to know how I can get the year form a /blog/2009 wordpress link?

[02:46:01.0000] <gsnedders|work>
eighty4: See: #wordpress

[02:46:02.0000] <gsnedders|work>
eighty4: I haven't touched most of WP in years

[02:46:03.0000] <eighty4>
gsnedders|work: just asked in there, but it's usally so quite :/

[02:47:00.0000] <gsnedders|work>
#wordpress-dev is more active, but you'll be screamed at if you ask any support questions there

[02:53:00.0000] <annevk2>
/me now has enough memory to actually run the VirtualBox

[02:54:00.0000] <annevk2>
my machine became somewhat noisy though

[02:55:00.0000] <Philip`>
Adding memory made it noisy?

[02:55:01.0000] <annevk2>
running more software did I think

[03:01:00.0000] <annevk2>
hmm, the Link header supports multiple title parameters right?

[03:01:01.0000] <annevk2>
guess I'll just pick whatever is the first

[03:01:02.0000] <Hixie>
i think mark changed it so it can only have one title and maybe multiple title*

[03:02:00.0000] <Hixie>
though i'm not sure what software he expects to implement title*

[03:02:01.0000] <Hixie>
(and he wouldn't, or didn't, tell me, iirc)

[03:06:00.0000] <annevk2>
so either title or the first title* whichever is first?

[03:06:01.0000] <annevk2>
grmbl

[03:06:02.0000] <Hixie>
title* is some complex thing with languages

[03:06:03.0000] <annevk2>
CSSOM just has a single concept of title

[03:06:04.0000] <Hixie>
oh this is for CSSOM, not an implementation?

[03:06:05.0000] <annevk2>
yeah, there's the "style sheet title"

[03:07:00.0000] <Hixie>
i would recommend having the alternative style sheet stuff just say to use title and ignore title*, but I guess that screws over non-english locales, since the HTTP guys refuse to use UTF-8 still (!)

[03:07:01.0000] <Hixie>
so yeah, you'll have to require the crazy title* processing

[03:07:02.0000] <annevk2>
the claim is that UTF-8 is not backwards compatible enough with iso-8859-1 what HTTP supposedly is in

[03:07:03.0000] <gsnedders|work>
There are plenty of cases where that claim is true

[03:08:00.0000] <annevk2>
I think that may be true for some set of the headers, but definitely not all

[03:08:01.0000] <Hixie>
i thought HTTP was ASCII

[03:08:02.0000] <Hixie>
it's 8859-1?

[03:08:03.0000] <annevk2>
yeah

[03:08:04.0000] <annevk2>
that's the main issue

[03:09:00.0000] <annevk2>
e.g. with HTTP auth you definitely have non-ASCII characters in passwords and such

[03:09:01.0000] <hsivonen>
but it's possible to distinguish UTF-8 from ISO-8859-1 with good enough confidence

[03:10:00.0000] <hsivonen>
does the IETF not do "good enough confidence"?

[03:10:01.0000] <Hixie>
you could just have a header that triggers UTF-8 processing, too

[03:10:02.0000] <Hixie>
like Content-Type but for headers

[03:10:03.0000] <Hixie>
anyway

[03:10:04.0000] <Hixie>
not my problem

[03:13:00.0000] <zcorpan_>
it's possible to use utf-8 in headers with base64 escaping, no?

[03:13:01.0000] <gsnedders|work>
Hixie: For streaming processing that'd mean having it before other headers, and that means making the order of headers important

[03:13:02.0000] <zcorpan_>
Foo-Header: =UTF-8=...base64...=

[03:13:03.0000] <gsnedders|work>
zcorpan_: For BASIC auth, yeah. Nothing else uses base64 AFAIK

[03:13:04.0000] <Hixie>
gsnedders|work: and the problem with that would be...?

[03:14:00.0000] <Hixie>
(it could also be on the first line)

[03:14:01.0000] <gsnedders|work>
Hixie: Changing something from having order with no meaning to having order with meaning is a fairly major change

[03:14:02.0000] <zcorpan_>
at least i've used that for sending emails for the From header etc

[03:14:03.0000] <gsnedders|work>
Hixie: Changing the first line breaks strict implementations, and would rely upon unspecified headers

[03:15:00.0000] <gsnedders|work>
zcorpan_: Ah, you can in MIME, sure. Not in HTTP.

[03:15:01.0000] <zcorpan_>
ok

[03:15:02.0000] <Hixie>
gsnedders|work: sounds like excuses to me

[03:15:03.0000] <gsnedders|work>
s/headers/behaviour in other implementations/

[03:17:00.0000] <gsnedders|work>
Hixie: Given a streaming processor and one that does all the processing at once, if the header is not the first header, it can easily effect all headers after it still in the streaming impl, but can only effect either all headers or no headers in the non-streaming one. There are major issues with adding a header for it too.,

[03:17:01.0000] <gsnedders|work>
Hixie: It's technically a horrible thing to change without requiring quite a lot of implementations to be rewritten in a large way

[03:18:00.0000] <Hixie>
gsnedders|work: adding Unicode support requires implementation changes regardless of what the solution is

[03:18:01.0000] <Hixie>
gsnedders|work: i'd rather have a change that, e.g., made it so the second line was some magic features-enabling line, than having to use the asinine =?= nonsense

[03:19:00.0000] <hsivonen>
Base64 in HTTP would be terrible

[03:19:01.0000] <gsnedders|work>
Hixie: I guess you could get away with making the second line magic if you could live without defined error handling if it wasn't the first

[03:19:02.0000] <gsnedders|work>
s/first/second/

[03:19:03.0000] <annevk2>
the problem is that both servers and clients have to change

[03:19:04.0000] <gsnedders|work>
It also wouldn't degrade nicely

[03:19:05.0000] <Hixie>
why couldn't you define error handling?

[03:19:06.0000] <annevk2>
i.e. clients cannot suddenly start sending out UTF-8 for all HTTP requests

[03:19:07.0000] <gsnedders|work>
Hixie: See what I said above. At a protocol level, you can't break 50% of clients/servers.

[03:20:00.0000] <gsnedders|work>
It's a backwards incompatible protocol change.

[03:20:01.0000] <Hixie>
what i'm proposing wouldn't break anything. old uas would just ignore the unknown header.

[03:20:02.0000] <gsnedders|work>
It can't really be done until HTTP/2.0

[03:20:03.0000] <gsnedders|work>
Hixie: And then wouldn't work with the data passed. Couldn't ever log-in, for example.

[03:20:04.0000] <hsivonen>
gsnedders|work: can't or the WG won't?

[03:20:05.0000] <Hixie>
that's the case with the current solution too!

[03:21:00.0000] <gsnedders|work>
hsivonen: I'd say there are good technical reasons it couldn't be done until 2.0

[03:22:00.0000] <annevk2>
how does a version number help matters?

[03:22:01.0000] <Hixie>
i am not even remotely convinced of that, but even if we grant that, wtf are we waiting for then?

[03:22:02.0000] <annevk2>
you still have the same client/server issue

[03:22:03.0000] <hsivonen>
what are the practical problems of saying that HTTP headers are UTF-8 if they decode as UTF-8 without error and Windows-1252 otherwise?

[03:22:04.0000] <Hixie>
let's do HTTP 2.0 already

[03:22:05.0000] <gsnedders|work>
Hixie: Indeed. We should've done 2.0 years ago.

[03:22:06.0000] <hsivonen>
I predict there will never be 2.0

[03:23:00.0000] <gsnedders|work>
hsivonen: Likewise.

[03:23:01.0000] <hsivonen>
for the same reason XML 1.1 flopped

[03:23:02.0000] <Hixie>
but i don't buy your argument. either hsivonen's idea or my own can work fine in a 1.2 (or 1.1bis).

[03:23:03.0000] <Hixie>
without breaking things

[03:23:04.0000] <eighty4>
gsnedders|work: I'll ping you here before I go. Should take me a couple of minutes to get outside Opera

[03:23:05.0000] <gsnedders|work>
eighty4: No need to ping me

[03:23:06.0000] <gsnedders|work>
It doesn't take me long to get downstairs :)

[03:24:00.0000] <eighty4>
gsnedders|work: just so that you don't need wait for me

[03:24:01.0000] <hsivonen>
we are lucky we aren't trying to develop interoperable DRM systems

[03:24:02.0000] <hsivonen>
Web interop is easier :-)

[03:25:00.0000] <Hixie>
DRM systems are impossible

[03:25:01.0000] <Hixie>
speaking of which... Lachy, yt?

[03:27:00.0000] <Philip`>
/me saw the marketing material for his new monitor said "HDCP is not designed to prevent copying or recording of digital content but to protect the integrity of content as it is being transmitted"

[03:27:01.0000] <Philip`>
I can't work out who they're trying to protect the integrity against, other than me

[03:27:02.0000] <zcorpan_>
Philip`: could you merge video.html and media.html in the multipage version?

[03:27:03.0000] <Hixie>
Philip`: wow, what a crock

[03:28:00.0000] <gsnedders|work>
Hixie: Also, there's the political reasons of 1.1bis not being chartered to extend HTTP

[03:28:01.0000] <Hixie>
more excuses

[03:29:00.0000] <Philip`>
zcorpan_: Hmm, I thought I'd already done that, but maybe I'd just said "I'll do that some time soon" when you first asked ages ago :-/

[03:29:01.0000] <hsivonen>
Philip`: if you want to protect the integrity of the signal, you should get an HDMI cable with gilded connectors :-)

[03:30:00.0000] <gsnedders|work>
Hixie: For better or for worse, WGs normally operate under specific charters, and will get in trouble if they don't stick to them. At least in the IETF other people can as individuals write specs

[03:31:00.0000] <Philip`>
zcorpan_: Done

[03:31:01.0000] <Hixie>
gsnedders|work: that's BS. The charters don't just come out of thin air. If the group really wanted to solve problems instead of just gilding the current ones, they'd write a charter that gave them the authority to do so.

[03:32:00.0000] <gsnedders|work>
Hixie: Most WGs don't have the authority to write charters to give themselves authority

[03:32:01.0000] <Hixie>
nonsense

[03:32:02.0000] <Hixie>
all WGs write their own charter

[03:33:00.0000] <Hixie>
it's not like other people say "oh hey, people over there, here's a job for you to do"

[03:33:01.0000] <gsnedders|work>
They still need to be approved, and there are times when pushing endlessly won't help

[03:33:02.0000] <Hixie>
they don't need to be approved

[03:33:03.0000] <Hixie>
as exhibit A i present the whatwg.

[03:35:00.0000] <gsnedders|work>
Hixie: If you want to get your spec published by any normal organization which you need for anyone to pay attention to it.

[03:35:01.0000] <Hixie>
again, nonsense. HTML5 had attention paid to it without a "normal organisation" publishing it.

[03:35:02.0000] <Hixie>
you get attention by addressing the needs of the implementors and authors.

[03:36:00.0000] <gsnedders|work>
Hixie: Yes, but it also had one browser vendor writing it and others participating

[03:36:01.0000] <Hixie>
right, _that_'s what you need

[03:36:02.0000] <Hixie>
the w3c and ietf publish plenty of drafts that nobody pays attention to

[03:36:03.0000] <Hixie>
and they are not required (and indeed are of little help, imho) for people to pay attention to you

[03:36:04.0000] <gsnedders|work>
Hixie: Writing a spec from scratch without a browser vendor being involved in writing it is very hard to get any browser vendor to care about, as far as I can tell

[03:37:00.0000] <gsnedders|work>
(as in, an employee of the vendor writing it)

[03:37:01.0000] <gsnedders|work>
Or at least that was my experience with HTTP parsing

[03:37:02.0000] <Hixie>
pingback got the attention of the blog software writers without the writer working for a blog software company

[03:37:03.0000] <gsnedders|work>
That assumes blog software is like browsers

[03:37:04.0000] <gsnedders|work>
That doesn't follow.

[03:37:05.0000] <Hixie>
fair enough, but in that case, just get the browser vendors on board

[03:38:00.0000] <Hixie>
who from the browser vendors is on board with http?

[03:38:01.0000] <gsnedders|work>
I _tried_.

[03:38:02.0000] <gsnedders|work>
Out of all the major implementers, the only one I got much out of was IIS!

[03:39:00.0000] <gsnedders|work>
There are a few people from each browser vendor on the httpbis list

[03:39:01.0000] <Hixie>
i'm not really sure what point your trying to make here. The point I'm trying to make is that the red tape and bureaucracy arguments are a smoke screen and that if a WG actually wants to make significant progress, they can do so regardless of the process rules.

[03:39:02.0000] <Hixie>
(and that the httpwg isn't an example of this.)

[03:40:00.0000] <gsnedders|work>
My point is making significant progress within browsers is hard to do without a browser vendor writing the spec, as far as I can tell.

[03:40:01.0000] <Hixie>
(it looks like the URI/IRI world might become an example of this, though; larry, amongst others, really does seem to want to tackle the hard problems. we'll see how well that goes. I have good hopes.)

[03:40:02.0000] <Hixie>
i don't think that's true, but I do agree that if you want browsers to implement your feature, you have to have their buy-in.

[03:40:03.0000] <Hixie>
but then you want that anyway

[03:41:00.0000] <Hixie>
so i don't see why that's a problem

[03:41:01.0000] <gsnedders|work>
That was very much my experience with HTTP parsing, when I was working on it.

[03:41:02.0000] <Hixie>
if you didn't get a browser vendor writing the spec, how do you know that's what would have been necessary?

[03:42:00.0000] <Hixie>
it could just be that you weren't addressing the problems they wanted addressing

[03:42:01.0000] <Hixie>
(not saying it was, i'm just saying that it seems to me that there are many possible explanations that match what you've described other than the one you've given)

[03:42:02.0000] <gsnedders|work>
Hixie: The couple of occasions I did anything over the summer I got more information out of people than I did before.

[03:43:00.0000] <gsnedders|work>
Hixie: As far as I can tell, nothing changed in the month (or two?) between me working on it apart from me then having an opera.com email address.

[03:43:01.0000] <Hixie>
over time and as you form more relationships with people in the community and gain more respect and trust from people in the community, people will respond more

[03:44:00.0000] <Hixie>
having an opera.com address means you passed the "not a moron" filter that opera applies to hires

[03:44:01.0000] <Hixie>
other people use that as a (probably subconscious) guide to how much they should respect/trust you

[03:44:02.0000] <gsnedders|work>
I still think it is very true that who you work for does play a significant role in getting people working on stuff

[03:44:03.0000] <Hixie>
i think it's certainly a big influence, yes

[03:44:04.0000] <Hixie>
but i don't think it's a requirement

[03:45:00.0000] <gsnedders|work>
Right, I think if you already have the influence, you can get away without

[03:45:01.0000] <Hixie>
that's how life works in general

[03:45:02.0000] <jgraham>
I swear gsnedders|work types more loudly when he is disagreeing

[03:45:03.0000] <Hixie>
hah

[03:45:04.0000] <eighty4>
gsnedders|work: I'm on my way now. Outside Opera in 4?

[03:46:00.0000] <gsnedders|work>
The problem is getting any influence whatsoever in the spec world is fairly difficult, as far as I can tell

[03:46:01.0000] <gsnedders|work>
/me makes an effort to type more quietly

[03:46:02.0000] <Hixie>
getting influence anywhere is hard

[03:46:03.0000] <Hixie>
you basically have to earn it by proving ability over many years

[03:46:04.0000] <Hixie>
and it's trivial to lose it

[03:46:05.0000] <gsnedders|work>
(But yes, it is true that I do in general type fairly loudly)

[03:47:00.0000] <Hixie>
in my experience the easiest way to gain it is just do Do Stuff

[03:47:01.0000] <Hixie>
e.g. i got of lot of mileage out of writing a bazillion test cases and filing bugs while i was at university

[03:47:02.0000] <gsnedders|work>
Hixie: My experience with HTTP parsing is there is little point in trying to edit any spec until you have a certain amount of influence

[03:48:00.0000] <eighty4>
/me pokes gsnedders|work

[03:48:01.0000] <gsnedders|work>
eighty4: Yes, I saw

[03:48:02.0000] <Hixie>
there's probably little point trying to get people to do something (anything) until you have influence, yes

[03:48:03.0000] <eighty4>
:)

[03:48:04.0000] <gsnedders|work>
eighty4: I have another two minutes :)

[03:48:05.0000] <eighty4>
/me disapears

[03:48:06.0000] <Hixie>
whether that's by editing the spec or something else

[03:48:07.0000] <gsnedders|work>
Hixie: The few things I've started in Atom land got further, but equally I have more experience with shipping stuff there

[03:49:00.0000] <gsnedders|work>
Anyhow, I better head downstairs now and head out to lunch

[03:49:01.0000] <Hixie>
later

[03:55:00.0000] <Hixie>
/me opens a bazillion intl.properties files

[04:13:00.0000] <annevk2>
/me wonders how Opera hides document.all

[04:14:00.0000] <annevk2>
jgraham?

[04:14:01.0000] <jgraham>
annevk2: Not sure. I was wondering the same thing

[04:23:00.0000] <othermaciej>
my mega-thread with Brendan is a little out of control

[04:23:01.0000] <hsivonen>
Hixie: I suggest making it clear that the motivation of the charset table is compat with existing content and that i18n enthusiasts shouldn't bikeshed it using forward-looking rationales

[04:24:00.0000] <Hixie>
done

[04:24:01.0000] <hsivonen>
othermaciej: does the public-html thread count as mega-thread or is there more to see elsewhere?

[04:25:00.0000] <Hixie>
i think he means on public-script-coord

[04:25:01.0000] <hsivonen>
oh

[04:27:00.0000] <othermaciej>
the combination of the two

[04:28:00.0000] <jgraham>
annevk2: It _seems_ to be an ordinary object that happens to ToBoolean to false

[04:29:00.0000] <hsivonen>
/me wonders if the UTF-8 locales are really maximally successful defaulting to UTF-8 or if it is more about politics

[04:29:01.0000] <annevk2>
so yeah, we override ToBoolean and typeof

[04:29:02.0000] <othermaciej>
annevk2: I guess that's basically the same as what WebKit does

[04:29:03.0000] <annevk2>
Gecko "fails" in many ways according to at least one Opera dev

[04:29:04.0000] <hsivonen>
I'm pretty surprised that Arabic and Vietnamese don't default to the Windows-* encodings

[04:30:00.0000] <othermaciej>
annevk2: that would be useful info

[04:30:01.0000] <jgraham>
annevk2: And [[HasProperty]] or whatever it is called

[04:31:00.0000] <othermaciej>
oddly in WebKit we don't override HasProperty, so ("all" in document) is true

[04:31:01.0000] <othermaciej>
not a lot of people test that way, although I think the in operator is arguably the best way to do feature testing

[04:32:00.0000] <jgraham>
The Opera behaviour seems pretty simple. We sould standardise it ;)

[04:32:01.0000] <jgraham>
*should

[04:32:02.0000] <othermaciej>
actually, ("all" in document) is true in the Opera I'm testing

[04:33:00.0000] <jgraham>
oops I was loooking at the wrong browser

[04:33:01.0000] <Philip`>
http://google.com/codesearch?q=%5C%22all%5C%22%5C+in%5C+document

[04:33:02.0000] <othermaciej>
it sounds like Opera's behavior is likely to be more or less the same as WebKit

[04:33:03.0000] <jgraham>
We indeed don't override [[HasProperty]] although I think we should

[04:34:00.0000] <othermaciej>
I think that would be easier to do than all the other all-related hackery

[04:34:01.0000] <Philip`>
/me wonders what uuppa-js is, but all the documentation seems to be Japanese

[04:34:02.0000] <othermaciej>
Philip`: I'm curious about the result that's not in the Gecko regression tests

[04:35:00.0000] <annevk2>
aah, I forgot how Hixie made everything influence the style sheet disabled flag

[04:36:00.0000] <othermaciej>
Hixie, hsivonen: some of my colleagues were doubting the wisdom of rejecting EBCDIC-based encodings and UTF-32

[04:36:01.0000] <annevk2>
othermaciej, we haven't had a single report

[04:36:02.0000] <othermaciej>
(we just blacklisted UTF-7 and will likely add the other mandatory banned encodings)

[04:36:03.0000] <annevk2>
othermaciej, Opera 10 doesn't support either

[04:36:04.0000] <othermaciej>
annevk2: interesting

[04:36:05.0000] <othermaciej>
thanks for that data

[04:37:00.0000] <annevk2>
Opera overall hasn't supported EBCDIC since like ever

[04:37:01.0000] <Hixie>
othermaciej: let me know when you find a UTF-32 page

[04:37:02.0000] <annevk2>
and we haven't had a request for it

[04:37:03.0000] <Hixie>
othermaciej: or, for that matter, an EBCDIC page

[04:37:04.0000] <annevk2>
UTF-32 was removed for Opera 10 and the only page we knew about was a test

[04:37:05.0000] <othermaciej>
we just accidentally support everything that ICU does

[04:37:06.0000] <annevk2>
othermaciej, I'd still appreciate a table of some kind btw for what ICU does

[04:37:07.0000] <othermaciej>
Hixie: I don't believe either exist, but there was some concern about intranet pages and whether those might outweigh the security benefit of banning oddball encodings

[04:37:08.0000] <annevk2>
othermaciej, for the Web Encodings page

[04:38:00.0000] <Hixie>
othermaciej: my priorities are different. :-)

[04:38:01.0000] <othermaciej>
annevk2: I don't think I can accurately describe what ICU does without reading the ICU source code

[04:38:02.0000] <othermaciej>
Hixie: in any case it sounds like the worry may be misplaced, based on what annevk2 says

[04:38:03.0000] <Philip`>
http://search.ultraseek.com/query.html?charset=cp037&qt=%3Cscript%3Ealert('oh%20%5Cx6eo')%3C/script%3E&oldqt=%3Cscript%3Ealert('oh%20%5Cx6eo')%3C/script%3E

[04:39:00.0000] <Philip`>
There's an EBCDIC page!

[04:40:00.0000] <othermaciej>
jgraham, annevk2: it might be useful to at least describe Opera's implementation of document.all, if there are flaws in the Gecko behavior those would be good to know too

[04:40:01.0000] <Philip`>
(Only does XSS in browsers that don't support EBCDIC, though)

[04:41:00.0000] <Dashiva>
How does that even work

[04:41:01.0000] <hsivonen>
the main use case for EBCDIC

[04:43:00.0000] <annevk2>
Hixie, this "style sheet set" stuff is a bit weird

[04:43:01.0000] <Lachy>
Hixie, I'm here now

[04:43:02.0000] <Hixie>
yes

[04:43:03.0000] <annevk2>
Hixie, it seems like it tries to be both a string and a collection of style sheets

[04:43:04.0000] <Dashiva>
.style ?

[04:44:00.0000] <annevk2>
Dashiva, no, think of alternative style sheets and all

[04:44:01.0000] <Hixie>
annevk2: i'm not at all familiar with what i wrote, though iirc it was pretty solid when you took it over

[04:44:02.0000] <annevk2>
well, it didn't really define any kind of model

[04:44:03.0000] <annevk2>
or when style sheets would actually apply etc.

[04:45:00.0000] <othermaciej>
being both a string and something else is awkard

[04:45:01.0000] <annevk2>
hmm

[04:46:00.0000] <Dashiva>
Isn't that how .style works, though? It's a collection of properties, but can also be read and assigned directly.

[04:46:01.0000] <annevk2>
Hixie, like HTML5 says to set the preferred style sheet to a string value and the text you wrote both talks about preferred style sheet set and the name of the preferred style sheet set somewhat interchangeably

[04:47:00.0000] <annevk2>
Dashiva, we're not discussing .style

[04:47:01.0000] <Dashiva>
I know

[04:47:02.0000] <Hixie>
annevk2: ah, that might need tightening up, yeah

[04:47:03.0000] <annevk2>
Hixie, I guess I'll go with style sheet set and style sheet set name then

[04:48:00.0000] <annevk2>
and something like "setting the preferred style sheet name"

[04:48:01.0000] <hsivonen>
Hixie: if a document has a script-created parser, should the synchronous SVG load event be able to do document.write()?

[04:48:02.0000] <hsivonen>
seems like badness if yes

[04:49:00.0000] <Hixie>
there's only one place that sets the magic for document.write() correctly enough for document.write() to "work" (as opposed to blowing away the document)

[04:49:01.0000] <Hixie>
and that's <script> in HTML

[04:49:02.0000] <gsnedders|work>
uk locale defaults to windows-1251? odd.

[04:50:00.0000] <hsivonen>
Hixie: insertion point is set all the time when the entire document is document.written, right?

[04:50:01.0000] <Hixie>
yeah, it would work in that case

[04:50:02.0000] <Hixie>
gsnedders|work: "uk" isn't "en-gb"

[04:50:03.0000] <hsivonen>
Hixie: I tentatively want to prohibit document.write() from SVG load event even when the insertion point is defined all the time

[04:50:04.0000] <Hixie>
hsivonen: how?

[04:50:05.0000] <gsnedders|work>
Hixie: What's uk then?

[04:51:00.0000] <eighty4>
United Kingdom :P

[04:51:01.0000] <Hixie>
gsnedders|work: i forget, but i remember doing a double take when looking at that

[04:51:02.0000] <gsnedders|work>
Hixie: Where is it defined what locale is what? Is it just ISO country codes?

[04:52:00.0000] <hsivonen>
Hixie: not sure yet. I will have to think this through some more

[04:52:01.0000] <Hixie>
gsnedders|work: i just copied what mozilla does.

[04:52:02.0000] <gsnedders|work>
Hixie: That's undefined!

[04:52:03.0000] <Hixie>
hsivonen: i'm happy to put an explicit "if SVG 'load' event, bail" into the d.w algorithm

[04:53:00.0000] <gsnedders|work>
Hixie: I'd make the assumption if I didn't know better it was ISO-3166-1 alpha-2 codes, and UK is reserved by request of the UK to stop it being used for other countries, and would assume it was used for GB!

[04:54:00.0000] <Hixie>
gsnedders|work: you're gonna make me look it up again aren't you

[04:54:01.0000] <gsnedders|work>
Hixie: I'm gonna make you spec it :)

[04:54:02.0000] <Hixie>
gsnedders|work: http://mxr.mozilla.org/l10n-mozilla1.9.1/source/uk/toolkit/chrome/global/intl.properties

[04:55:00.0000] <Hixie>
http://mozilla-europe.org/uk/

[04:55:01.0000] <Hixie>
ukrain?

[04:55:02.0000] <Hixie>
ukraine, even

[04:55:03.0000] <Hixie>
http://mxr.mozilla.org/l10n-mozilla1.9.1/source/uk/browser/README.txt?raw=1&ctype=text/plain suggests so

[04:55:04.0000] <Hixie>
looks like it should be ua

[04:55:05.0000] <Hixie>
i'll fix the spec

[04:56:00.0000] <Hixie>
fixed

[04:56:01.0000] <gsnedders|work>
Hixie: By changing to ua?

[04:57:00.0000] <Hixie>
yes

[05:00:00.0000] <hsivonen>
I'm trying to figure out what other situations could cause scripts to run syncronously with the parser except </script> and the SVG load event

[05:01:00.0000] <hsivonen>
Hixie: does XBL2 run scripts synchronously with the parse when it binds to parser-inserted nodes or does it defer to the task queue like XBL1?

[05:01:01.0000] <Hixie>
off-hand I've no idea

[05:01:02.0000] <Hixie>
but i would want it to be async

[05:01:03.0000] <Hixie>
xbl2 was written before i had a firm handle on sync vs async events

[05:01:04.0000] <hsivonen>
/me wonders how XBL2 was defined before the task queue concept was specced

[05:03:00.0000] <hsivonen>
I think I'm going to prohibit document.write() if the parser is flushing tree ops and it's not specifically dealing with </script>

[05:03:01.0000] <hsivonen>
that should catch the SVG load event

[05:03:02.0000] <hsivonen>
and also avoid crashing if there are cases I am unaware of

[05:04:00.0000] <hsivonen>
even if in those cases prohibiting document.write() would currently be non-conforming per spec if the parser is script-created

[05:04:01.0000] <Hixie>
you can document.write() on a timeout, if you have document.open()ed first

[05:04:02.0000] <Hixie>
(or anywhere else)

[05:05:00.0000] <hsivonen>
timeouts can only run when the event loops spins

[05:05:01.0000] <gsnedders|work>
Hixie: Can you search the whatwg subscriber list for gsneddon@opera to check whether I'm still subscribed, seeming I get nothing?

[05:05:02.0000] <hsivonen>
and you can only get a nested event loop when the parser deals with </script>, right?

[05:05:03.0000] <Hixie>
hsivonen: oh, i see

[05:05:04.0000] <hsivonen>
ooooops.

[05:05:05.0000] <hsivonen>
if the SVG load event does sync XHR!!!

[05:05:06.0000] <hsivonen>
that would create a nested event loop

[05:05:07.0000] <hsivonen>
evil

[05:06:00.0000] <Hixie>
gsnedders|work: tis not

[05:06:01.0000] <Hixie>
gsnedders|work: want me to add it manually while i'm here?

[05:06:02.0000] <gsnedders|work>
Hixie: Can you try adding it?

[05:07:00.0000] <remysharp>
gsnedders|work Is the outliner up to date, as in the parsing rules from the spec? 

[05:07:01.0000] <Hixie>
done

[05:07:02.0000] <Hixie>
you are member 1203.

[05:07:03.0000] <gsnedders|work>
remysharp: The actual html5 parsing or the outlining algorithm?

[05:07:04.0000] <hsivonen>
nested event loops are unhappiness

[05:07:05.0000] <remysharp>
gsnedders|work: I think I mean the outlining algorithm

[05:08:00.0000] <Hixie>
hsivonen: technically, html5 never spins nested event loops

[05:08:01.0000] <gsnedders|work>
remysharp: Unless Hixie changed it in September, which AFAIK he did not, yes.

[05:08:02.0000] <hsivonen>
Hixie: how does HTML5 do alert() or sync XHR?

[05:09:00.0000] <Hixie>
hsivonen: alert() just pauses. A few places use the "spin the event loop" algorithm, but that actually returns to the main event loop while running code in the background which at some point queues a task to regain synchnorous control.

[05:09:01.0000] <hsivonen>
at least the off-the-main-thread + speculation move made the parser less unhappy with nested loops

[05:09:02.0000] <Hixie>
hsivonen: basically i fork off subthreads, and then queue a continuation later.

[05:10:00.0000] <Hixie>
dunno what xhr does

[05:10:01.0000] <hsivonen>
Hixie: pause and subthread sound like not matching reality

[05:10:02.0000] <hsivonen>
in the implementation sense

[05:10:03.0000] <Hixie>
pause might not

[05:10:04.0000] <hsivonen>
Gecko and WebKit both do nested event loops, right?

[05:11:00.0000] <Hixie>
the subthread/continuation thing is functionally equivalent to a nested event loop

[05:11:01.0000] <othermaciej>
for sync XHR, WebKit blocks without re-entering the event loop

[05:11:02.0000] <othermaciej>
(I think that's how it currently works anyway)

[05:12:00.0000] <hsivonen>
anyway, I think I'm going to implement the plan I mentioned

[05:12:01.0000] <hsivonen>
that is, prevent document.write if something happens to be devious enough to cause scripts to run as a side effect of the tree op flush (other than </script>)

[05:13:00.0000] <hsivonen>
/me wonders who came up with the synchronous SVG load event

[05:13:01.0000] <hsivonen>
don't we have some ground rules against stuff like that?

[05:14:00.0000] <remysharp>
gsnedders|work: am I right in saying that <header> doesn't affect the outline at all (I couldn't find a ref in the spec)

[05:15:00.0000] <gsnedders|work>
remysharp: Correct

[05:16:00.0000] <remysharp>
gsnedders|work: is there any reason why I can't use it to wrap the heading of a figure? (aside from the validation)

[05:16:01.0000] <gsnedders|work>
Don't ask me, I just wrote the impl :P

[05:16:02.0000] <remysharp>
:)

[05:17:00.0000] <remysharp>
Hixie: to you then I guess, is there any reason why I shouldn't wrap my figure heading in <header> (aside from the current validation rules)

[05:18:00.0000] <remysharp>
Lachy suggested some time ago "that in the future User Agents may treat the header element properly" - but I'm not sure what that means

[05:20:00.0000] <Lachy>
when did I say that, and in what context?

[05:22:00.0000] <gsnedders|work>
Context is overrrated.

[05:23:00.0000] <remysharp>
Lachy: sorry, some time ago, and it may be wrong, I'd be happy for you to say you didn't then I'm just waiting for the argument against using header :)

[05:23:01.0000] <remysharp>
context was with respect to finding an alternative to using legend in details and figure

[05:26:00.0000] <annevk2>
othermaciej, that's how I specced it for XHR

[05:27:00.0000] <annevk2>
othermaciej, you are supposed to one event at the end of the request, but that's it

[05:27:01.0000] <annevk2>
dispatch/\

[05:27:02.0000] <Hixie>
remysharp: it'd be ambiguous with content that is allowed as the content of the element

[05:29:00.0000] <Lachy>
remysharp, I don't remember saying it. I might have, but it's difficult to know what I meant by it if I did without reading it in full context

[05:29:01.0000] <remysharp>
Hixie: such as? or rather are you saying that it shouldn't be a heading but a caption or label (though I'm not saying those elements are appropriate)

[05:29:02.0000] <remysharp>
Lachy: no worries - let's say for argument's sake you didn't say anything.

[05:29:03.0000] <remysharp>
:)

[05:30:00.0000] <Hixie>
remysharp: <figure> <dt> bla bla <dd> <header> foo </header> baz </figure>

[05:31:00.0000] <remysharp>
Hixie: I meant as a replacement to ditch the dt/dd proposal

[05:31:01.0000] <remysharp>
<figure> <header>My figure</header> <img src="..."></figure>

[05:31:02.0000] <annevk2>
Gecko does something wrong with sync XHR to not block UI or something but that caused side effects they haven't fixed

[05:31:03.0000] <daedb>
<header> would be very awkward for captions below the content

[05:32:00.0000] <remysharp>
daedb: why, it's the heading to the content, it doesn't matter if it's top, left, bottom does it?

[05:33:00.0000] <jgraham>
Yeah there is nothing in principle wrong with header except that in a different context it means something quite different and, as an english word, doesn't quite fit

[05:33:01.0000] <remysharp>
neither does article, but it's still being used for "interactive widgets"

[05:34:00.0000] <remysharp>
currently it's down to the spec to define it's use, just as the word article is being stretched to cover different meanings, header can quite easily be seen as the "heading to the content" - be it above or below

[05:35:00.0000] <daedb>
remysharp: header as a word is fairly strongly associated with top positioning, at least in my mind... using it for a caption bottom just feels odd

[05:35:01.0000] <remysharp>
daedb: and article?

[05:35:02.0000] <gsnedders|work>
Hixie: Still hasn't worked, guess the issue is at the Opera end

[05:35:03.0000] <Lachy>
I still need to catch up on about 1000 public-html/whatwg e-mails and spec changes after being away for a week, but does the spec now use <header> for captions, or is that just a proposal?

[05:35:04.0000] <remysharp>
Lachy: that's me proposing

[05:36:00.0000] <Hixie>
remysharp: i understood what you were proposing

[05:36:01.0000] <daedb>
remysharp: What about it? Completely separate issue.

[05:36:02.0000] <remysharp>
Lachy: because the dt/dd breaks IE, hard.

[05:36:03.0000] <gsnedders|work>
Lachy: I still need to _recieve_ all of the Sep/Oct emaiols :P

[05:36:04.0000] <gsnedders|work>
*Emails

[05:36:05.0000] <Hixie>
remysharp: i'm saying <header> is valid figure content, so it'd be ambiguous if we used it for the legend also

[05:37:00.0000] <Lachy>
yeah, dt/dd sucks just as badly as legend, and I never liked it being used for figure.

[05:37:01.0000] <remysharp>
Hixie: but so is dt in the content of figure or details

[05:37:02.0000] <Lachy>
it was ok for details, but still sucks for compat

[05:38:00.0000] <remysharp>
Lachy: I wrote up Dean Edwards findings yesterday: http://html5doctor.com/dd-details-wrong-again/ - it doesn't work for either details or figure

[05:38:01.0000] <Hixie>
remysharp: how so?

[05:39:00.0000] <remysharp>
Hixie: you're saying that using <header> is ambiguous if used as the caption/legend in figure because it can appear in the content - is that correct?

[05:40:00.0000] <remysharp>
Hixie: if so, currently the solution is to use a dt as the caption/legend, which can equally appear in the contents

[05:40:01.0000] <remysharp>
Hixie: in fact the example for detail actually includes it - 

[05:41:00.0000] <remysharp>
how is that any less ambiguous?

[05:41:01.0000] <daedb>
dd acts as a wrapper around all the content, which removes ambiguity

[05:41:02.0000] <remysharp>
okay, go back to when legend was being used in the spec

[05:42:00.0000] <remysharp>
sorry, you'll give the same argument 

[05:42:01.0000] <remysharp>
The styling rules that the spec has states how it should be treated though, wasn't it something like details > legend:first-child

[05:44:00.0000] <Hixie>
remysharp: how can it appear in the contents? i don't follow

[05:45:00.0000] <Hixie>
remysharp: in the spec now, only <dt> and <dd> can appear as children of <figure>

[05:45:01.0000] <Hixie>
remysharp: when we used <legend>, <legend> wasn't allowed in <figure> except as the legend.

[05:46:00.0000] <remysharp>
Hixie: Could I not use it in details, by way of having advanced search fields?

[05:46:01.0000] <Hixie>
remysharp: not as a child, no

[05:46:02.0000] <Hixie>
remysharp: as a descendant, sure, but that's fine

[05:46:03.0000] <Hixie>
remysharp: no ambiguity there

[05:47:00.0000] <smaug>
is it just my browser, or is there something wrong with html5 draft styling. The page looks strange

[05:47:01.0000] <remysharp>
I can see what you're saying, but you've hit the exact same problem with dd as we did with legend.  They both expect to be children of some specific element, therefore the styling goes to crap (dd only in IE, but IE is obviously important)

[05:49:00.0000] <Hixie>
remysharp: at this point i'm basically this ->||<- close to just dropping the elements altogether and waiting until the parser is more widely deployed.

[05:49:01.0000] <Hixie>
that way we can go back to <legend>

[05:49:02.0000] <remysharp>
Don't the same kind of problems also apply to <caption> which is why it's not a decent candidate to solve this problem

[05:50:00.0000] <Hixie>
<caption> won't ever parse right

[05:50:01.0000] <Hixie>
<legend> and <dt>/<dd> will parse right in html5 parsers

[05:50:02.0000] <remysharp>
Hixie: I know, you're that close, and myself and others really want to get our hands on these elements

[05:50:03.0000] <daedb>
I don't want <figure> dropped, it's actually one of my favourite new elements... don't really care much about <details>

[05:50:04.0000] <Hixie>
just use <div>

[06:01:00.0000] <remysharp>
so here's the options: 1) repurpose /another/ element that can only be a child of some other element. Chances are there will be similar rendering issues.  2) repurpose an existing element or repurpose a new HTML5 element, both cause ambiguity issues.  3) create another heading type element to allow details & figure to remain in the spec, something like <c>, but there's a shed load of headings already.  4) Ditch them until HTML5 is supported in the 

[06:01:01.0000] <remysharp>
majority market-share - by which point it'll be 10 years.  5) Ditch them entirely. Just use a div.

[06:02:00.0000] <Hixie>
6) leave them in, and use <div> for now while you wait for the browsers to catch up, like with almost all other new features

[06:03:00.0000] <remysharp>
Hixie: authors will use them though, and the wonder what the hell is going on - unless you specific put that note in the spec?

[06:04:00.0000] <Hixie>
will authors use <style scoped> before that works in browsers?

[06:05:00.0000] <remysharp>
possibly not, but figure (and details?) are popular amongst authors, 

[06:05:01.0000] <jgraham>
Hixie: I thionk that is a horribly unfair comparison

[06:05:02.0000] <remysharp>
they/we see the new semantics as something we want to lay our hands on right now - give better meaning to our markup

[06:05:03.0000] <jgraham>
<style scoped> is almost impossible to use without native support

[06:05:04.0000] <jgraham>
<figure> and <details> are trivial

[06:06:00.0000] <Hixie>
<details> only works with UA support

[06:06:01.0000] <remysharp>
Or JS support

[06:06:02.0000] <remysharp>
which is exactly what's going to happen

[06:06:03.0000] <jgraham>
Hixie: Not if you are willing to use js and degrade to always open

[06:06:04.0000] <Hixie>
<style scoped> works fine if you hack your style sheets

[06:06:05.0000] <jgraham>
Which I have already done a couple of times

[06:07:00.0000] <remysharp>
Let's be honest, if I asked your average Joe web author, who knew a little about HTML5, they'd sooner know about figure and details than they would <style scoped>

[06:07:01.0000] <Hixie>
i dunno about that

[06:08:00.0000] <jgraham>
A js library seems like a significantly lower burden to authors than using a CSS preprocessor to support <style scoped>

[06:08:01.0000] <Hixie>
iirc i made up <details>, whereas <style scoped> was added based on author feedback

[06:08:02.0000] <remysharp>
okay, but it's still an unfair comparison :)

[06:08:03.0000] <Hixie>
ok, <input list="">

[06:08:04.0000] <Hixie>
<menu type=context>

[06:08:05.0000] <Hixie>
new WebSocket()

[06:09:00.0000] <Hixie>
draggable=""

[06:09:01.0000] <Hixie>
pick one

[06:09:02.0000] <remysharp>
you don't have to sell me on any of that stuff, I'm all over it - but the majority of authors out there are focusing on the /new/ markup

[06:09:03.0000] <jgraham>
I can imagine people using whichever of those can be emulated in script before browsers support them, yes

[06:10:00.0000] <Hixie>
you can simulate <details> and <figure> using <div>

[06:10:01.0000] <Hixie>
i really don't get the problem

[06:10:02.0000] <remysharp>
There's two types of web authors - those who know and use JS, and those who don't (particularly).  

[06:10:03.0000] <remysharp>
I know that I can replicate details with JS

[06:11:00.0000] <remysharp>
but the other type of author isn't

[06:11:01.0000] <remysharp>
the point being is that I know that functionality isn't possible without JS, so I'm going to add it

[06:11:02.0000] <jgraham>
Hixie: If you change the markup you lose the native support in browsers that implement it

[06:11:03.0000] <remysharp>
the average html author is going to see figure, and use it

[06:11:04.0000] <remysharp>
unless they're told to avoid using it until X time.

[06:14:00.0000] <Hixie>
jgraham: if people are hacking JS to get the support, they'll likely screw up the native support anyway, to the point where UAs can't ship native support

[06:14:01.0000] <gsnedders|work>
/me blinks

[06:14:02.0000] <gsnedders|work>
I just got a WHATWG email!

[06:15:00.0000] <remysharp>
Hixie: no, because eventually there'll emerge an HTML5 JS library that uses PE to support this stuff. Just like DOM scripting libraries have done.

[06:15:01.0000] <Hixie>
PE?

[06:15:02.0000] <jgraham>
Hixie: That seems like a rather unfair assumption given that is quite a common approach with DOM

[06:15:03.0000] <remysharp>
Hixie: sorry, progressively enhance

[06:15:04.0000] <Hixie>
oh i'm sure some people will do it right

[06:15:05.0000] <jgraham>
And Modernizr or similar should have reasonable quality control

[06:16:00.0000] <remysharp>
and they'll become defacto 

[06:16:01.0000] <remysharp>
and yep - they will be people who screw it up

[06:16:02.0000] <gsnedders|work>
There are plenty of badly written DOM libraries that are widely used that break

[06:16:03.0000] <remysharp>
but we're talking about the majority

[06:16:04.0000] <gsnedders|work>
jQuery Validation until recently broke if you implemented HTML 5 forms or WF2

[06:20:00.0000] <remysharp>
gsnedders|work: so the point being is that people still screw it up even when following directions - i.e. use this library - 

[06:20:01.0000] <annevk2>
another problem with the current alternative style sheet text is that it assumes sync loading

[06:20:02.0000] <Hixie>
remysharp: no, we're talking about enough to break enough pages that browsers can't deploy. That can be as little as 0.2% or less, in practice.

[06:20:03.0000] <remysharp>
exactly the same thing will happen when new authors read that they can use details and figure with dd

[06:21:00.0000] <annevk2>
e.g. if you get a Default-Style after some Link headers it is very unlikely you even know that those Link headers will become style sheet objects until quite a bit later

[06:21:01.0000] <Hixie>
annevk2: when you get tired of trying to get CSSOM working, encodings'll be waiting for you. Isn't your life fun? :-D

[06:21:02.0000] <remysharp>
but figure & dd can be styled, but it screws up styling on other elements

[06:21:03.0000] <remysharp>
and that's in IE

[06:21:04.0000] <remysharp>
which is a lot more than 0.2%

[06:21:05.0000] <Hixie>
annevk2: (seriously though, these are really important things, so thanks a ton for working on them.)

[06:21:06.0000] <annevk2>
Hixie, I appreciate your morale support

[06:21:07.0000] <jgraham>
Hixie: You are fine as long as someone with notable marketshare deploys before a significant legacy has built up

[06:21:08.0000] <annevk2>
ah, too late

[06:22:00.0000] <jgraham>
Which increasingly seems to be the case

[06:22:01.0000] <Hixie>
jgraham: yeah, that would help.

[06:22:02.0000] <Hixie>
anyway, 5:30am is far past my bed time

[06:22:03.0000] <Hixie>
nn

[06:22:04.0000] <annevk2>
nn

[06:22:05.0000] <jgraham>
Hixie: Well in the <details> case othermaciej was working on it iirc

[06:22:06.0000] <remysharp>
Hixie: nn - cheers.

[06:22:07.0000] <jgraham>
gn

[06:22:08.0000] <othermaciej>
I do have <details> on my todo list

[06:23:00.0000] <othermaciej>
I'm wondering if I should wait out the planned Change Proposal in case we end up bikeshedding the name of the label element again, but I suppose that part is easy to change

[07:11:00.0000] <hendry>
Anyone care to comment? http://static.webvm.net/audio/test.html

[07:26:00.0000] <zcorpan_>
hendry: don't nest <audio>

[07:26:01.0000] <zcorpan_>
hendry: use <audio><source>

[07:26:02.0000] <gsnedders|work>
http://www.w3.org/2001/tag/2009/10/08-minutes.html#item07

[07:27:00.0000] <hsivonen>
gsnedders|work: I don't follow. Is LMM arguing against the TAG MIME Respect finding or for it?

[07:27:01.0000] <gsnedders|work>
I'm not sure I entirely follow either.

[07:31:00.0000] <hendry>
zcorpan_: ok, updated... though i am not sure about codecs for mp3/wav

[07:36:00.0000] <jgraham>
hsivonen: At the least I get the sense that someone is arguing against making the HTML/XHTML distinction a property of the MIME type

[07:37:00.0000] <hsivonen>
jgraham: that ship sailed years ago

[07:37:01.0000] <othermaciej>
jgraham: not everyone on the TAG has a clear view of the harbor

[07:38:00.0000] <jgraham>
I'm not suggesting it is a sane thing to be arguning :)

[07:38:01.0000] <jgraham>
*arguing

[07:38:02.0000] <othermaciej>
er, meant that comment for hsivonen but you guys know what I meant

[07:43:00.0000] <hendry>
I am little confused by audio loop http://www.whatwg.org/specs/web-apps/current-work/#attr-media-loop When combined with autoplay... should it just play continuously?

[07:44:00.0000] <othermaciej>
I don't think anyone suggested switching browser *behavior* for XHTML/HTML based on anything other than MIME type, but there was an argument that it's ok if some document that in some sense "is" XHTML as text/html, if processing as HTML is what you want

[07:44:01.0000] <othermaciej>
I think, anyway

[07:44:02.0000] <othermaciej>
minutes are muddled

[07:47:00.0000] <jgraham>
/me doesn't really understand the distinction between what a document is and how it behaves

[07:48:00.0000] <jgraham>
But that is some sort of philosophical position I guess

[07:50:00.0000] <othermaciej>
well, the spec introduces this distinction somewhat, when it says, "XML documents that use elements or attributes from the HTML namespace and that are served over the wire (e.g. by HTTP) must be sent using an XML MIME type such as application/xml or application/xhtml+xml and must not be served as text/html."

[07:50:01.0000] <othermaciej>
so that raises the question whether a document "is" an XML document - particularly tricky in light of polyglot document support

[07:51:00.0000] <othermaciej>
the spec already says separately that anything sent as text/html will be treated as HTML

[07:51:01.0000] <MikeSmith>
fwiw, I think the above paragraph is not necessary, or at least should be worded differently

[07:52:00.0000] <othermaciej>
I'm not sure I even know what that paragraph means

[07:52:01.0000] <MikeSmith>
it should just say that documents in the HTML namespace served with an XML mime type must conform to the XML (XHTML) syntax

[07:52:02.0000] <MikeSmith>
and that documents served as text/html must conform to the HTML syntax

[07:52:03.0000] <MikeSmith>
and leave it at that

[07:53:00.0000] <othermaciej>
I think the MIME type registrations included in the document might already say that

[07:53:01.0000] <othermaciej>
(maybe not as to XML documents served as text/xml or application/xml instead of application/xhtml+xml)

[07:54:00.0000] <othermaciej>
but yeah, anything that doesn't form to the HTML syntax must not be served as text/html

[07:54:01.0000] <othermaciej>
anything that conforms to the XML syntax either is also valid HTML (in which case you can in fact send it as text/html), or it's not, in which case it's already invalid

[07:54:02.0000] <Dashiva>
"Definition: A data object is an XML document if it is well-formed, as defined in this specification." - What is a data object?

[07:55:00.0000] <othermaciej>
the sentence I cited superficially seems to forbid serving polyglot documents as text/html, which is inconsistent with the rest of the spec

[07:56:00.0000] <MikeSmith>
yeah

[07:57:00.0000] <MikeSmith>
I don't think it's necessary for it to have that prohibition nor anything similar

[07:58:00.0000] <othermaciej>
I don't think it even means to prohibit that

[07:59:00.0000] <othermaciej>
it seems like it assumes there's some platonic sense in which something is either an HTML document or an XML document (based on author's intent? I dunno) and thus can't really be checked

[07:59:01.0000] <MikeSmith>
yeah, that's a good way to put it

[08:00:00.0000] <othermaciej>
it sort of seems like it's saying "don't serve XHTML as HTML unless you know it's not really going to get processed as XML"

[08:06:00.0000] <Dashiva>
"Don't serve XHTML as text/html unless it's also valid HTML"

[08:06:01.0000] <othermaciej>
that would be a fine thing to say

[08:55:00.0000] <annevk2>
so I rewrote Hixie's stuff and while less ambiguous I've no idea whether it's more clear

[08:56:00.0000] <annevk2>
at least it now fits in the overall picture so I guess that's progress

[10:16:00.0000] <AryehGregor>
"Your mail to 'whatwg' with the subject   Re: [whatwg] X-UA-Compatible, X-* headers, validators, etc.  Is being held until the list moderator can review it for approval.  The reason it is being held:   Too many recipients to the message"

[10:17:00.0000] <TabAtkins>
We're not having a party in here, AryehGregor.  Cut that CC list down!

[10:17:01.0000] <AryehGregor>
"Reply all" is standard on whatwg, right?

[10:17:02.0000] <TabAtkins>
Hehe, yeah.

[10:17:03.0000] <AryehGregor>
So am I really expected to manually prune CC lists, or is this just a misconfiguration?

[10:17:04.0000] <AryehGregor>
(Why does the mailing list care anyway?  It only got one copy.)

[10:18:00.0000] <TabAtkins>
I would expect the latter.

[10:19:00.0000] <jgraham>
I would expect you to prune CC lists

[10:19:01.0000] <jgraham>
At least I tend to do that

[10:20:00.0000] <jgraham>
(also I assume you are aware that the moderation queue is basically /dev/null)

[10:20:01.0000] <AryehGregor>
Hmm, no, I wasn't.

[10:20:02.0000] <jgraham>
(so don't wait on Hixie to approve it or anything)

[10:20:03.0000] <AryehGregor>
Having to prune CC lists manually seems like an unnecessary burden.

[10:20:04.0000] <TabAtkins>
I don't ever prune cc lists, unless I know that another mailing list is there which isn't supposed to be cc'ed to.

[10:20:05.0000] <Dashiva>
Someone has to put the foot down

[10:21:00.0000] <Dashiva>
Otherwise the CC list will just grow into infinity

[10:21:01.0000] <TabAtkins>
I don't see what the problem is with that.

[10:22:00.0000] <Dashiva>
Sending a message does mean you want a copy of every reply that's even remotely related 

[10:22:01.0000] <GPHemsley>
Hixie: You know that 'uk' is the Ukrainian language, right? 'ua' is not a language code.

[10:23:00.0000] <AryehGregor>
Well, so you can block the thread.  I mean, 95% of the people on the CC list are probably on the list anyway.

[10:24:00.0000] <TabAtkins>
Dashiva: correct, it does mean that.

[10:24:01.0000] <AryehGregor>
Unless we're talking cross-posting.

[10:24:02.0000] <Dashiva>
TabAtkins: I was being sarcastic, I guess I failed

[10:24:03.0000] <TabAtkins>
Also: I don't find myself generally knowledgeable enough to know who *won't* want to receive a reply, except in the limited circumstances of stopping crossposting and in off-list conversations.

[10:25:00.0000] <Dashiva>
Yes, reply-all is broken by design

[10:25:01.0000] <Dashiva>
It should be reply-to-list-and-people-who-explicitly-say-they-want-to-be-included

[10:25:02.0000] <TabAtkins>
True, but we're screwed at this point.

[10:26:00.0000] <Dashiva>
And that's why you trim CC lists

[10:27:00.0000] <TabAtkins>
No it's not.  I just said that I don't have enough knowledge to know who should be trimmed.

[10:27:01.0000] <TabAtkins>
Best case, I can remove people who I know are on the list, but that's it.

[10:28:00.0000] <TabAtkins>
That doesn't reduce any email volume, as they'll still receive the reply via the list, but it does reduce cc-lists, at the cost of my time.

[10:28:01.0000] <TabAtkins>
Which I don't find a worthwhile tradeoff.

[10:29:00.0000] <Dashiva>
TabAtkins: It's easy, trim everyone except the previous N posters

[10:29:01.0000] <TabAtkins>
That doesn't resolve the fundamental problem of me having to spend time doing this.

[10:30:00.0000] <AryehGregor>
Agreed.

[10:30:01.0000] <AryehGregor>
Now, who can reconfigure the mailing list?

[10:31:00.0000] <Dashiva>
Heh

[10:33:00.0000] <Dashiva>
The topic tends to bring out near-religious tendencies, not unlike those of resource-vs-representation

[10:33:01.0000] <TabAtkins>
Man, what is up with that, while we're on that topic.

[10:34:00.0000] <TabAtkins>
I get the idea of an abstract resource server handing out representations, but seriously, nobody actually talks about that.  We just refer to resources on the web and let context disambiguate when necessary.

[10:34:01.0000] <AryehGregor>
I had a lengthy private argument with Julian about it.

[10:34:02.0000] <AryehGregor>
I was profoundly unconvinced.

[10:34:03.0000] <AryehGregor>
It's that whole "theoretical purity" issue, except not even conceivably useful theoretical purity in this case.

[10:34:04.0000] <TabAtkins>
It just feels like an architecture astronautics exercise.

[10:36:00.0000] <TabAtkins>
I stayed out of that discussion, luckily.  I just got into it with Masinter (bad idea) about urls.

[10:38:00.0000] <Dashiva>
It's not practical to track which URLs are the same resource (maybe it was in the early 90s), so in practice URLs are all different 

[10:39:00.0000] <TabAtkins>
yeah

[10:42:00.0000] <Dashiva>
Although even if you could, the mess would remain. When the bits change, has the resource changed or not?

[10:43:00.0000] <TabAtkins>
Exactly.  The theoretical "resource" is an invisible, untouchable abstract idea living in a Platonic realm.  You cannot answer any questions about it.

[10:43:01.0000] <TabAtkins>
Maybe the url is pointing to a new resource.  Maybe the resource's state has changed.  There's no way to tell, even theoretically, *because there isn't a difference*.

[10:44:00.0000] <AryehGregor>
You could define things so there's a difference, but the difference is useless in practice anyway.

[10:44:01.0000] <AryehGregor>
There's no way to reliably tell whether two URLs identify the same resource.

[10:44:02.0000] <AryehGregor>
Even on the server side.

[10:44:03.0000] <TabAtkins>
Yeah, the definition would be untestable and thus useless.

[10:45:00.0000] <TabAtkins>
You could never pass an A/B test where I get you to guess whether two urls identify the same resource or not.

[10:45:01.0000] <AryehGregor>
I have yet to see a statement involving resources that could not be reworded in terms of URLs, servers, and bags of bits with an increase in clarity and no significant increase in length.

[13:09:00.0000] <kerihenare>
Shouldn't the input type "image" be removed from HTML5? Seems that this is something that should be handled by CSS.

[13:12:00.0000] <gratz|home>
how would you then achieve the image map?

[13:13:00.0000] <TabAtkins>
Is there any particular reason to remove it?  It already exists, so there's reason to keep it right there, and it's not horrifying bad.  As well, as gratz|home says, it allows for imagemaps (which aren't great, but shrug).

[13:14:00.0000] <kerihenare>
Don't you use an <img> for Image maps? And besides, I would happily remove the <map> element. You should be using CSS their too.

[13:14:01.0000] <kerihenare>
*there

[13:17:00.0000] <kerihenare>
<center> already exists and that was removed and it's no less bad than <input type="image" />

[13:17:01.0000] <annevk42>
according to you

[13:17:02.0000] <annevk42>
but not everyone shares that opinion

[13:19:00.0000] <kerihenare>
lol

[15:12:00.0000] <jgraham>
http://hoppipolla.co.uk/tests/document_all/document_all.html

[15:12:01.0000] <jgraham>
Dunno if that is useful to anyone

[15:17:00.0000] <jgraham>
Oh it looks like hallvord just posed something more comprehensive

[15:21:00.0000] <Hixie>
GPHemsley: oh. then i'd better change it back! :-)


2009-10-14
[00:48:00.0000] <hsivonen>
hmm. www.w3.org is really slow today

[00:50:00.0000] <Lachy>
hsivonen, that's probably because they apparently launched the new design for their homepage today, so everyone is looking at it

[00:53:00.0000] <hsivonen>
the new design looks quite nice, but I suspect they aren't respecting my font size pref

[01:07:00.0000] <hsivonen>
/me wonders if anyone has data on whether it's feasible to get rid of the SVG load event given existing content

[01:07:01.0000] <hsivonen>
of course there's no SVG-in-text/html existing content

[01:07:02.0000] <hsivonen>
but it seems bad to zap it only on the text/html side

[01:18:00.0000] <hsivonen>
reading http://www.xmltoday.org/content/coming-html-5-train-wreck did "the biggest names in XML - from Uche Ogbuji and Micah Dubinko to Liam Quin" ever send their proposal to the HTML WG or the WHATWG?

[01:18:01.0000] <hsivonen>
the proposal that was on xml-dev didn't fall "on completely deaf ears", since I replied

[01:19:00.0000] <hsivonen>
(assuming, of course, that I'm part of the HTML5 community)

[01:19:01.0000] <hsivonen>
and why might it be appropriate to put stuff like "the rich white (primarily American) boys that make up the committee" in the article?

[01:21:00.0000] <hsivonen>
that is, why would it be appropriate to refer to the wealth, color, nationality, age or gender of the people who make up "the committee"?

[01:21:01.0000] <Hixie>
primarily american?

[01:21:02.0000] <Hixie>
are _any_ of us american? :-)

[01:22:00.0000] <annevk2>
if anything we're biased towards Europe I think

[01:24:00.0000] <annevk2>
hsivonen, would be great if we could zap the load event imo

[01:24:01.0000] <annevk2>
hsivonen, I don't think it makes a lot of sense

[01:24:02.0000] <heycam>
ok i'm going on my few-month break now

[01:25:00.0000] <heycam>
i'll see you all on irc next year some time! :)

[01:25:01.0000] <annevk2>
heycam, good luck!

[01:25:02.0000] <hsivonen>
heycam: see you!

[01:25:03.0000] <heycam>
erik will be mailing in the svgwg's comments on the svg-in-text/html stuff some time soon

[01:25:04.0000] <heycam>
annevk2, thanks!

[01:25:05.0000] <heycam>
later

[01:34:00.0000] <Hixie>
/me comments on the article

[01:34:01.0000] <Hixie>
i like where he refers to a "recent WHATWG meeting"

[01:35:00.0000] <Hixie>
are you guys having meetings without telling me?

[01:35:01.0000] <annevk2>
you don't know about #secrettreehouse?

[01:35:02.0000] <annevk2>
I guess someone has been masquerading as Hixie then...

[01:35:03.0000] <Hixie>
hah

[01:36:00.0000] <hsivonen>
Hixie: I thought the implication that it's OK to refer to wealth, color, nationality, age and gender was so inappropriate that I figured I wouldn't start correcting which parts were factually incorrect and to what degree

[01:36:01.0000] <Hixie>
oh i didn't correct him

[01:37:00.0000] <Hixie>
i just said that given where we started (the web today), that if our endpoint is a mere trainwreck, i'll be happy!

[01:38:00.0000] <hsivonen>
I don't understand why people are still concerned about processing HTML using an XML parser

[01:38:01.0000] <hsivonen>
if one considers the entire stack, putting an HTML parser in there is a small part

[01:38:02.0000] <Hixie>
because for years that was put forward as the panacea

[01:39:00.0000] <Hixie>
and people don't like having to consider changing their world view

[01:39:01.0000] <annevk2>
I wonder how often he predicted something that's accurate

[01:40:00.0000] <Lachy>
wtf? Whoever wrote that article seems absolutely clueless about boolean (or, as he calls them, "binary") attributes, and how to use them in XML, and yet he's an XML proponent?!

[01:40:01.0000] <annevk2>
there was a site to log stuff like this so we can verify in the future if the person was indeed right or just sharing bullshit

[01:41:00.0000] <Hixie>
hsivonen: just consider the way organised religion (the poster child for sticking to a position beyond it's sell-by date) handled change in the paste, e.g. galileo

[01:41:01.0000] <Hixie>
in the past

[01:41:02.0000] <Lachy>
"What has emerged as a result of this "process" is a standard that seems to incorporate just those features that seem to appeal most to the rich white (primarily American) boys that make up the committee"

[01:41:03.0000] <Hixie>
not the paste

[01:41:04.0000] <Lachy>
WTF? Who among us in the WHATWG is actually an american?

[01:42:00.0000] <Hixie>
i'm sure _some_ of us are!

[01:42:01.0000] <Hixie>
isn't shelley american?

[01:42:02.0000] <Hixie>
and hey, i consider that quote better than what most people complain about -- usually they say the spec says just what _I_ want

[01:42:03.0000] <Hixie>
at least this time he suggested you all were to blame too!

[01:42:04.0000] <Lachy>
yeah, but I can't think of who. At least, none of us who would be considered to be in the "cabal" are American

[01:42:05.0000] <Lachy>
oh, mjs maybe

[01:42:06.0000] <annevk2>
no dude

[01:42:07.0000] <annevk2>
mjs is Polish

[01:42:08.0000] <Hixie>
he's turkish or something

[01:42:09.0000] <Hixie>
polish

[01:42:10.0000] <Hixie>
right

[01:43:00.0000] <Hixie>
tantek is turkish

[01:43:01.0000] <annevk2>
Chris_Wilson on the other hand :)

[01:44:00.0000] <gsnedders>
I mean, there are loads of guys in the USA called Anne

[01:44:01.0000] <gsnedders>
Obviously we're all American.

[01:44:02.0000] <gsnedders>
We speak English, so obviously we're American.

[01:45:00.0000] <Lachy>
oh

[01:48:00.0000] <annevk2>
I didn't realize before, but I guess in CSSOM I also need to define that the UA is to actually fetch resources linked from Link headers with rel set to stylesheet

[01:49:00.0000] <Hixie>
yeah

[01:49:01.0000] <Hixie>
xml-s too

[01:52:00.0000] <annevk2>
i see

[01:52:01.0000] <annevk2>
good times

[01:53:00.0000] <Dashiva>
Oh wow

[01:54:00.0000] <Hixie>
you could edit xml-s and write an RFC to define Link: rel=stylesheet processing to move it out of CSSOM :-)

[01:54:01.0000] <annevk2>
i'll keep it simple, thanks :)

[01:56:00.0000] <Dashiva>
I remember we tried to find an American whatwg teamster before, but nobody was found

[01:58:00.0000] <Dashiva>
Haha, "The WHATWG was not formed by a standards body. It was a small coalition of AJAX developers"

[01:59:00.0000] <roc>
no, it's a coalition of browser developers

[01:59:01.0000] <roc>
no, it's Google

[01:59:02.0000] <annevk2>
lol, that article sounds like a joke

[01:59:03.0000] <annevk2>
maybe I should read it

[01:59:04.0000] <roc>
you really shouldn't

[01:59:05.0000] <roc>
you especially shouldn't read the comments

[02:00:00.0000] <annevk2>
you realize you make things more tempting right? anyway, I'll go back to editing CSSOM for now

[02:00:01.0000] <roc>
this is pretty cool

[02:00:02.0000] <roc>
http://labs.thecssninja.com/font_dragr/

[02:02:00.0000] <Dashiva>
annevk2: Seriously, it's weird. It's like this massive conspiracy theory, but all the posts are old men.

[02:02:01.0000] <Dashiva>
Well, the pictures next to the posts :)

[02:02:02.0000] <Hixie>
don't forget, google is supporting html5 because it would have been too expensive for google to support xhtml2 in adsense!

[02:02:03.0000] <Dashiva>
Actually, that's amusing. That XML is the old man technology now.

[02:03:00.0000] <Hixie>
(that's still my favourite html5 conspiracy theory)

[02:03:01.0000] <Dashiva>
Hixie: No, they're supporting HTML5 because with XHTML2 the internet would automatically become semantic and nobody would need Google anymore, they'd just RDF their way to pages!

[02:03:02.0000] <Hixie>
anyone object to making setting src="" imply a call to load() on <video> and <audio>?

[02:03:03.0000] <annevk2>
Dashiva, maybe we should make a theory up around that

[02:03:04.0000] <Hixie>
even if the element isn't in the document or is already playing?

[02:03:05.0000] <Hixie>
(roc, particularly interested in your opinion on that)

[02:03:06.0000] <annevk2>
foolip, ^^

[02:03:07.0000] <Hixie>
foolip_ too, indeed

[02:04:00.0000] <hsivonen>
roc: wow. that's cool. Is it all spec-based?

[02:04:01.0000] <roc>
hsivonen: I haven't inspected it, but I think it's claiming to be

[02:05:00.0000] <Dashiva>
I wonder how long until the replies appear on the post

[02:05:01.0000] <roc>
Hixie: it sounds reasonable to me

[02:05:02.0000] <roc>
Hixie: although I don't keep the resource selection algorithm in my head so I may miss something subtle

[02:07:00.0000] <Hixie>
k

[02:07:01.0000] <Hixie>
well i can always change it back

[02:07:02.0000] <Hixie>
but we got a couple of complaints that setting src="" while it was playing didn't do anything

[02:07:03.0000] <Hixie>
so this seems like it would at least give them more feedback

[02:07:04.0000] <gsnedders|work>
Hixie: Get the bounce for what message-id?

[02:07:05.0000] <Hixie>
(since it would stop the video)

[02:07:06.0000] <gsnedders|work>
Hixie: I got several emails from you overnight

[02:07:07.0000] <Hixie>
gsnedders|work: um, i dunno, i deleted it like hours ago

[02:08:00.0000] <gsnedders|work>
Hixie: I guessed that :P

[02:08:01.0000] <foolip_>
Hixie: I was just going to reply to that on public-html-comments

[02:09:00.0000] <foolip_>
Hixie: I think it makes sense, no objections if all the details are sorted out properly

[02:09:01.0000] <Hixie>
foolip_: k

[02:09:02.0000] <Hixie>
foolip_: i'm replying to the thread now

[02:09:03.0000] <Hixie>
foolip_: so hold off and see my reply and let me know if i missed something :-)

[02:09:04.0000] <Lachy>
"... a small coalition of AJAX developers, most of whom couldn't give a fig for XML" - maybe he forgot that the X in AJAX stands for XML, cause that just doesn't make sense.

[02:11:00.0000] <hsivonen>
I wonder if people who think we don't care about XML noticed all the Infoset coercion stuff and generally trying hard to make stuff work sanely in both lands

[02:11:01.0000] <hsivonen>
of course, then RDFa comes along and ruins it 

[02:13:00.0000] <foolip_>
Hixie: also, can we make it explicit what happens if the src attribute is removed (for <img> too if it hasn't been done, implementations vary)

[02:13:01.0000] <Dashiva>
Lachy: No, it stands for JXSON

[02:14:00.0000] <hsivonen>
aside: how people view RDFa reveals who belongs to the bits-on-the-wire school of XML and who belongs to the Infoset school of XML.

[02:14:01.0000] <Dashiva>
Isn't document.all === undefined a red herring, nobody should be using document.all in new code

[02:15:00.0000] <Hixie>
foolip_: already explicit for <video> (nothing special happens)

[02:15:01.0000] <Hixie>
foolip_: i'll do it for <img> too

[02:15:02.0000] <annevk2>
Dashiva, the discussion is about old code

[02:15:03.0000] <Hixie>
looks like kurt cagle is an xforms user (based on posts to mozilla's xforms newsgroups)

[02:15:04.0000] <Hixie>
(in 2006)

[02:16:00.0000] <foolip_>
Hixie: thanks

[02:16:01.0000] <hsivonen>
Hixie: he is an xml-dev regular

[02:16:02.0000] <Hixie>
in 2005 i rejected one of his ideas for xbl2 (namely to use xslt instead)

[02:17:00.0000] <Dashiva>
annevk2: No, === is about people using jslint, which implies the code is being maintained

[02:17:01.0000] <Hixie>
OHHH!

[02:17:02.0000] <Hixie>
Kurt Cagle is the reason XBL2 split off from sXBL!

[02:17:03.0000] <hsivonen>
Hixie: URL?

[02:18:00.0000] <Hixie>
not really his fault, but he was the catalyst

[02:18:01.0000] <Hixie>
hold on

[02:18:02.0000] <Hixie>
http://www.w3.org/mid/41386042.20050901045702⊙wo

[02:18:03.0000] <jgraham>
Dashiva: It seems like the idea is that people might JSLint old code or have mixed old/new code or something

[02:18:04.0000] <jgraham>
I think changing === is a bad idea though

[02:20:00.0000] <roc>
ah, the bad old days

[02:20:01.0000] <jgraham>
Brendan's proposal 3b  + typeof document.all == "undefined" seems like a reasonable solution

[02:20:02.0000] <hsivonen>
Hixie: oh. that kind of reason. Interesting.

[02:20:03.0000] <Dashiva>
jgraham: Well, if you update the code you'll also realize the breakage was from your update

[02:21:00.0000] <jgraham>
Dashiva: depends where you test after the update. 

[02:21:01.0000] <jgraham>
If you only test in IE and Firefox you won't notice that you broke Opera + Webkit iirc

[02:22:00.0000] <Dashiva>
But isn't this all assuming that FF would align with the spec?

[02:22:01.0000] <Dashiva>
So you'd notice it in any non-IE browser

[02:22:02.0000] <jgraham>
I mean at the moment

[02:22:03.0000] <Hixie>
jgraham: there seems to be some intermittent thing whereby the call to pms for the w3c version (with annotations) doesn't work every now and then, and i have to restart my script, at which point it works fine

[02:23:00.0000] <jgraham>
Hixie: Hmm. It sounds like something is occasionally timing out or something

[02:26:00.0000] <hsivonen>
is Web content relying on timeouts being able to call document.write on document.opened documents?

[02:27:00.0000] <hsivonen>
/me wonders if anyone does sync XHR from an XBL constructor

[02:29:00.0000] <roc>
no

[02:29:01.0000] <annevk2>
hsivonen, Erik believes we do load pretty much like in HTML though we also dispatch SVGLoad at the moment

[02:29:02.0000] <annevk2>
hsivonen, so maybe SVG should be changed?

[02:30:00.0000] <jgraham>
roc: Which question was that a "no" to?

[02:30:01.0000] <roc>
that wasn't an answer, that was an exclamation

[02:30:02.0000] <hsivonen>
annevk2: given the data available to me (no data about existing content) I don't object to SVG changing

[02:31:00.0000] <annevk2>
hsivonen, maybe you should just propose that while you nuke support for the load event?

[02:31:01.0000] <jgraham>
roc: Ah. Sounds like a use case for an exclaimation mark then ;)

[02:31:02.0000] <Dashiva>
I know it's the web, but timeout-triggered document.write is mindboggling

[02:31:03.0000] <annevk2>
hsivonen, I've the feeling the SVG WG is ok nowadays with having more synergy with HTML

[02:31:04.0000] <jgraham>
timeout triggered document write sounds quite likely

[02:32:00.0000] <jgraham>
I mean crazy but...

[02:32:01.0000] <Dashiva>
jgraham: What's the use case?

[02:32:02.0000] <roc>
annevk2: of course, the WHATWG cabal has seized control of SVG too

[02:32:03.0000] <roc>
mwahahahaha

[02:32:04.0000] <Hixie>
we have?

[02:32:05.0000] <Hixie>
sweet

[02:32:06.0000] <roc>
yeah

[02:32:07.0000] <Hixie>
i must have missed that memo

[02:32:08.0000] <roc>
well, I have

[02:32:09.0000] <Hixie>
who's the editor!

[02:32:10.0000] <Hixie>
there are so many changes we can get through now!

[02:33:00.0000] <Dashiva>
You're the editor

[02:33:01.0000] <Philip`>
I think we should remove <circle/>

[02:33:02.0000] <Dashiva>
Or did you mean who the puppet is?

[02:33:03.0000] <Philip`>
I don't like circles

[02:33:04.0000] <Philip`>
They're too round

[02:33:05.0000] <Hixie>
<polygon> vs <polyline> would be my first choice amongst the shapes

[02:33:06.0000] <hsivonen>
roc: nice

[02:34:00.0000] <Dashiva>
Replace svg with <embed image.vml>

[02:35:00.0000] <annevk2>
roc, I'm sitting next to the co-chair at the moment of the SVG WG :)

[02:35:01.0000] <Dashiva>
chaals?

[02:35:02.0000] <roc>
Erik

[02:36:00.0000] <roc>
I presume

[02:36:01.0000] <annevk2>
yeah

[02:37:00.0000] <roc>
WHATWG operative sits next to SVG WG co-chair, what more proof is needed?

[02:37:01.0000] <Dashiva>
Since we do we need proof anyhow?

[02:39:00.0000] <hsivonen>
what creates a nested event loop other than sync XHR, alert(), confirm(), prompt(), print() and showModalDialog()?

[02:40:00.0000] <Hixie>
</script>

[02:40:01.0000] <Hixie>
in certain caises

[02:40:02.0000] <annevk2>
what do you mean with "nested"?

[02:40:03.0000] <Hixie>
cases, too

[02:40:04.0000] <annevk2>
that sounds Gecko-specific

[02:40:05.0000] <hsivonen>
right, </script>, too

[02:41:00.0000] <Hixie>
he means running a task while another is running

[02:41:01.0000] <hsivonen>
annevk2: I thought WebKit and Trident had nested event loops, too

[02:41:02.0000] <Hixie>
"spin the event loop", in html5 terms, i think

[02:41:03.0000] <hsivonen>
annevk2: maybe I'm totally wrong about that, though

[02:41:04.0000] <annevk2>
I suppose they might, but in HTML5 terms everything is blocked, no?

[02:42:00.0000] <annevk2>
at least for sync XHR the idea is that no events are dispatched etc.

[02:43:00.0000] <hsivonen>
the case I'm interested in is something dequeueing a JS timeout from an odd place

[02:43:01.0000] <hsivonen>
when the document has been document.opened()

[02:45:00.0000] <hsivonen>
After all, if one never document.close()s the document, it should, in principle, be safe to call document.write() from a timeout or interval

[02:46:00.0000] <annevk2>
in theory a timeout would always dispatch after the syncxhr or after alert() etc. afaik

[02:51:00.0000] <jgraham>
hsivonen: Is there a fundamental difference between a timeout and some other event here

[02:52:00.0000] <hsivonen>
jgraham: no fundamental difference between a timeout and event that are dispatched through the event loop

[02:52:01.0000] <hsivonen>
*events

[02:53:00.0000] <hsivonen>
do people document.write from arbitrary async event handlers?

[02:53:01.0000] <jgraham>
It isn't hard to imagine someone doing var doc = document.open(); document.onsomeevent = function() {doc.write("foo")}

[02:56:00.0000] <hsivonen>
that would be very sad

[02:56:01.0000] <jgraham>
Why? I mean it doesn't obviously look worse than document.write in general

[02:56:02.0000] <hsivonen>
it would be feasible to make document.write not tokenize synchronously in crazy cases, if crazy cases must be supported

[02:57:00.0000] <hsivonen>
jgraham: for the network stream case: I need the speculative parsing thread to know where potential document.write()-caused discontinuities can be 

[02:58:00.0000] <hsivonen>
jgraham: for the document.open case: I don't want to be able to batch notifications (that notify layout that the DOM has changed)

[02:59:00.0000] <hsivonen>
jgraham: it would be bad to have potential discontinuity points all over the place

[03:03:00.0000] <hsivonen>
doh. I *do* want to be able to batch notifications

[03:04:00.0000] <hsivonen>
/me sucks at cleaning up negations after editing a sentence.

[03:29:00.0000] <Hixie>
roc, foolip_: i'm looking at the 'load' thread... any opinion on whether I should just make the progress events use Event instead of ProgressEvent so that there's no 'total' attribute to worry about?

[03:31:00.0000] <roc>
I'd like that

[03:31:01.0000] <roc>
we won't be able to implement that immediately though

[03:31:02.0000] <roc>
and I don't know how much content would break :-(

[03:32:00.0000] <Hixie>
i've dropped NETWORK_LOADED, which had value 3; should I renumber NETWORK_NO_SOURCE from 4 to 3 or is that not worth it?

[03:32:01.0000] <roc>
(currently our own controls, and I think other people's controls, use progress 'loaded' and 'total' when they should be using 'buffered', since we don't support 'buffered' yet)

[03:32:02.0000] <roc>
implementing 'buffered' isn't hard, but there's some stuff we're in the middle of changing and we wanted to implement 'buffered' after that was done

[03:32:03.0000] <hsivonen>
Hixie: renumbering symbols that have shipped seems scary. those have shipped, right?

[03:33:00.0000] <Hixie>
i'm fine not renumbering if people think that's wiser

[03:33:01.0000] <roc>
hsivonen: renumbering symbols seems less scary than removing one

[03:33:02.0000] <hsivonen>
roc: OK

[03:33:03.0000] <Hixie>
(i'm not familiar with how widely this is supported)

[03:33:04.0000] <roc>
I think everyone supports these symbols

[03:34:00.0000] <roc>
Safari and Gecko will set NETWORK_LOADED in some situations, apparently Chrome never does except for files

[03:35:00.0000] <Hixie>
should i renumber NETWORK_NO_SOURCE though?

[03:35:01.0000] <roc>
I think it's probably OK to renumber NETWORK_NO_SOURCE to 3

[03:35:02.0000] <Hixie>
k

[03:35:03.0000] <roc>
and drop NETWORK_LOADED

[03:35:04.0000] <roc>
we'll see how it goes

[03:36:00.0000] <roc>
if there's a compat issue we might want to re-add NETWORK_LOADED with value 2

[03:36:01.0000] <roc>
I dunno

[03:36:02.0000] <roc>
hopefully not

[03:36:03.0000] <Hixie>
i assume you mean value 3

[03:36:04.0000] <roc>
no

[03:37:00.0000] <Hixie>
oh, i see what you mean

[03:37:01.0000] <roc>
hopefully we can just bludgeon on through

[03:39:00.0000] <Hixie>
hm, making these not progress events will be more invasive than i expected. let's do that as a second patch in a second.

[03:39:01.0000] <Hixie>
load event first.

[03:39:02.0000] <Hixie>
actually if we readd LOADED it should be value 1, i think

[03:39:03.0000] <Hixie>
(IDLO)

[03:39:04.0000] <Hixie>
(IDLE, even)

[03:44:00.0000] <roc>
perhaps so

[03:54:00.0000] <Hixie>
is zcorpan anywhere nearby?

[04:03:00.0000] <jgraham>
Hixie: I guess he might be responsive to email

[04:14:00.0000] <foolip_>
Hixie: I don't have a strong opinion on using progress events or not. They're not particularly useful, though.

[04:16:00.0000] <foolip_>
not exposing the size in bytes at all will save us an origin-check, I guess

[04:17:00.0000] <foolip_>
zcorpan is probably en route to the office

[04:18:00.0000] <Hixie>
i made them simple events

[04:18:01.0000] <Hixie>
and i replied to zcorpan by e-mail

[04:18:02.0000] <Hixie>
anyone here have an opinion on whether to remove the character encoding support for scripts in Workers?

[04:18:03.0000] <Hixie>
and just always use UTF-8?

[04:19:00.0000] <Lachy>
sure, if it's not too late for browsers to drop support for other encodings in workers, I would

[04:21:00.0000] <Hixie>
anyone remember why i added support in the first place?

[04:26:00.0000] <roc>
I thought the reason was that people might want to import existing scripts into a worker

[04:27:00.0000] <hsivonen>
gsnedders|work: did you already have a demo that shows if document.close() tokenizes?

[04:27:01.0000] <gsnedders|work>
uh, somewhere

[04:31:00.0000] <gsnedders|work>
hsivonen: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/272 if that's what you mean

[04:31:01.0000] <Hixie>
roc: seems likely... is that a good enough reason?

[04:31:02.0000] <roc>
I don't think so myself

[04:32:00.0000] <gsnedders|work>
hsivonen: Or for the Gecko bug http://software.hixie.ch/utilities/js/live-dom-viewer/saved/273

[04:37:00.0000] <annevk2>
it would make sense to have text/worker or some such for worker scripts then

[04:38:00.0000] <annevk2>
at least to justify the different encoding rules, it can be ignored in practice I suppose

[04:39:00.0000] <Hixie>
the mime type is ignored anyway...

[04:42:00.0000] <hsivonen>
gsnedders|work: thanks

[04:47:00.0000] <hsivonen>
gsnedders|work: I think that test case doesn't test the right thing

[04:47:01.0000] <gsnedders|work>
hsivonen: I'm not sure what your meaning

[04:47:02.0000] <gsnedders|work>
(that you want to test)

[04:49:00.0000] <hsivonen>
If a document.write() doesn't fully tokenize its argument (due to nested script), I want to see if a subsequent .close() tokenizes what was left in the stream

[04:49:01.0000] <gsnedders|work>
ah, no, I don't have tests for that

[04:49:02.0000] <hsivonen>
ok. thanks

[04:49:03.0000] <hsivonen>
I'll write one

[05:05:00.0000] <hsivonen>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/276

[05:05:01.0000] <hsivonen>
fun results

[05:06:00.0000] <hsivonen>
I see different output in Firefox trunk with old parser, Firefox trunk with new parser, Safari 4 and Opera 10

[05:06:01.0000] <hsivonen>
/me starts a VM for IE8

[05:14:00.0000] <hsivonen>
grr. I wish IE told me what property or method is missing when I try to invoke something that doesn't exist in IE

[05:19:00.0000] <hsivonen>
Completely puzzled by IE's behavior

[05:19:01.0000] <hsivonen>
again

[05:20:00.0000] <hsivonen>
stringifying an HTMLCollection says it has property length

[05:20:01.0000] <hsivonen>
but accessing it with .length kills the script

[05:23:00.0000] <zcorpan_>
Hixie: did you ping me?

[05:25:00.0000] <hsivonen>
now I'm puzzled by the behavior of IE, Safari and Opera

[05:25:01.0000] <hsivonen>
they all seem to tokenize to completion on .close() even if there are external scripts in the way

[05:27:00.0000] <hsivonen>
whoa. whoa. do IE and Safari disable script execution when tokenizing on .close()?

[05:28:00.0000] <hsivonen>
and Opera

[05:28:01.0000] <hsivonen>
what makes the src=script scripts not run here: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/278

[05:29:00.0000] <hsivonen>
hmm. maybe I'm testing wrong

[05:29:01.0000] <hsivonen>
this is hard

[05:30:00.0000] <hsivonen>
woohoo! Safari does what I thought was sane after all

[05:33:00.0000] <hsivonen>
Opera does something harder

[05:33:01.0000] <Hixie>
zcorpan_: sent mail replies instead

[05:34:00.0000] <zcorpan_>
ok

[05:35:00.0000] <hsivonen>
I've been working on the HTML5 parser for so long that I independently arrive at the same solutions as whoever wrote the parser in WebKit...

[05:35:01.0000] <hsivonen>
Hixie: I think the document.close() definition is wrong.

[05:35:02.0000] <hsivonen>
I tentatively suggest changing it to what WebKit does

[05:36:00.0000] <hsivonen>
which may be what IE does, too

[05:36:01.0000] <hsivonen>
what opera does is too hard

[05:36:02.0000] <hsivonen>
and what Gecko does is further away from the other three

[05:36:03.0000] <hsivonen>
what the spec says is what Gecko does, btw

[05:37:00.0000] <Hixie>
send mail

[05:37:01.0000] <annevk2>
Hixie, so elements can now participate in the microdata model?

[05:37:02.0000] <annevk2>
given the itemValue thingie

[05:37:03.0000] <Hixie>
hsivonen: (i have no idea what you're talking about :-) )

[05:37:04.0000] <Hixie>
annevk2: not any more than before

[05:48:00.0000] <hsivonen>
Hixie: filed http://www.w3.org/Bugs/Public/show_bug.cgi?id=7917

[05:49:00.0000] <Hixie>
thanks

[05:51:00.0000] <Hixie>
hsivonen: any opinion on the issue of whether we should sniff for charsets inside <?xml?> stuff in text/html?

[05:51:01.0000] <hsivonen>
Hixie: I'd be happier if I didn't have to write code for that...

[05:52:00.0000] <hsivonen>
Hixie: what do Trident, WebKit and Presto do?

[05:52:01.0000] <Hixie>
i meant more an opinion about whether you knew of any bugs because you took that code out

[05:52:02.0000] <Hixie>
everyone seems to do it according to what i'm told

[05:52:03.0000] <hsivonen>
Hixie: I don't recall

[05:53:00.0000] <Hixie>
k. let me know if you stumble across any relevant stuff, i'm likely to look at this again tomorrow.

[05:54:00.0000] <Hixie>
sweet, i dealt with enough e-mail tonight that my naive script's prediction is back into october

[05:57:00.0000] <Lachy>
is that the prediciton for Last Call?

[05:58:00.0000] <Hixie>
yeah

[05:58:01.0000] <Lachy>
what's the HTML WG's status in relation to publishing a Last Call soon?

[05:59:00.0000] <Hixie>
i believe the status is "hahaha".

[05:59:01.0000] <Hixie>
it may best be described by this chart: http://damowmow.com/playground/htmlwg/chart.html

[05:59:02.0000] <Lachy>
hahaha :-)

[06:00:00.0000] <Lachy>
what date do you expect to publish a Last Call snapshot on whatwg.org?

[06:00:01.0000] <Hixie>
sometime this month

[06:00:02.0000] <Hixie>
i hope!

[06:01:00.0000] <Lachy>
well, I gathered that much already. I guess that means you don't have a specific date in mind.

[06:01:01.0000] <annevk2>
on a scale of twenty years a month is quite specific

[06:02:00.0000] <Lachy>
yeah, but given that it's this month, with only 16 or so days left, I thought it might start getting a bit more specific

[06:03:00.0000] <hsivonen>
Hixie: if the graph is "Last updated today.", why does it end in mid-September?

[06:03:01.0000] <Hixie>
it'll happen as soon as all three lines are at zero

[06:03:02.0000] <Hixie>
(well, the issues line will be at 1, since WebSQL is an XXX issue and I ain't taking that draft to LC this month)

[06:04:00.0000] <Hixie>
hsivonen: what browser?

[06:04:01.0000] <hsivonen>
Hixie: Firefox trunk-ish

[06:04:02.0000] <Hixie>
wfm

[06:08:00.0000] <Philip`>
Warning: 08 is not a legal ECMA-262 octal constant

[06:08:01.0000] <Philip`>
Source Code: new Date(2009, 08-1, 26-1), // Aug 26, Chris steps down, Maciej and Paul take over - http://lists.w3.org/Archives/Public/public-html/2009Aug/1293.html 

[06:08:02.0000] <Philip`>
says my Firefox

[06:08:03.0000] <Philip`>
/me doesn't know if that's relevant at all

[06:09:00.0000] <Lachy>
hsivonen, the graph appears to end in mid-october for me

[06:10:00.0000] <Philip`>
What month does it start with?

[06:10:01.0000] <Hixie>
Philip`: that warning should be harmless

[06:10:02.0000] <Philip`>
/me sees it end in mid-September, with FF 3.5.something

[06:10:03.0000] <hsivonen>
that chart fails even more in Opera and Safari

[06:10:04.0000] <hsivonen>
yay for interop

[06:11:00.0000] <annevk2>
we don't have text support yet

[06:11:01.0000] <hsivonen>
but in safari, too, the last named month is September

[06:11:02.0000] <hsivonen>
dunno where the chart would end

[06:11:03.0000] <Hixie>
o_O

[06:11:04.0000] <hsivonen>
the chart itself isn't drawn although the axes are

[06:11:05.0000] <Lachy>
Hixie, If I select the "9 months" time scale on the graph, the year says "2010" under the first column. It says 2009 for other time scales.

[06:11:06.0000] <jgraham>
I see the same as hsivonen

[06:12:00.0000] <jgraham>
The first marked month is October 2008, the last is September 2009

[06:12:01.0000] <Hixie>
if you're not seeing the actual chart, please upgrade to a browser from this year

[06:12:02.0000] <Hixie>
or month

[06:12:03.0000] <Hixie>
or week

[06:12:04.0000] <Hixie>
or however recent it has to be :-)

[06:12:05.0000] <Philip`>
row.date = new Date(Date.UTC(dateComponents[0], dateComponents[1]-1, dateComponents[2]));

[06:12:06.0000] <jgraham>
or from the future

[06:13:00.0000] <Philip`>
Why does that do -1?

[06:13:01.0000] <Hixie>
Philip`: months start from 0 for some reason

[06:13:02.0000] <jgraham>
Aren't javascript months number from 0-11 or something?

[06:13:03.0000] <Lachy>
yes, unfortunately

[06:13:04.0000] <jgraham>
(whereas days are numbered from 1 and called "dates")

[06:15:00.0000] <virtuelv_>
fwiw, getDay() returns offset from zero

[06:15:01.0000] <virtuelv_>
(that's day of week)

[06:16:00.0000] <virtuelv_>
get*Month() is zero-offset

[06:16:01.0000] <gsnedders|work>
Who thought JS was consistent anyway? :P

[06:16:02.0000] <virtuelv_>
also, browsers accept wildly differing input to new Date()

[06:17:00.0000] <Hixie>
charts look fine to me under firefox trunk and webkit trunk at all zoom levels

[06:17:01.0000] <Hixie>
so i don't know what y'all are seeing

[06:17:02.0000] <daedb>
/me sees only a single small green box in Opera 10.10 beta

[06:17:03.0000] <gsnedders|work>
(which causes site compat. bugs more or less whatever you7 do)

[06:18:00.0000] <Philip`>
The .csv starts with 2007-11-02, but the first label on the chart is October

[06:18:01.0000] <Philip`>
so it looks like the whole thing is off by one

[06:19:00.0000] <jgraham>
Please never mention javascript date parsing anywhere where I can hear

[06:19:01.0000] <annevk2>
/me gets the urge to say something now

[06:20:00.0000] <gsnedders|work>
jgraham: So never in the Opera bug tracker/

[06:20:01.0000] <jgraham>
gsnedders|work: For preference

[06:21:00.0000] <Hixie>
Philip`: says november for me

[06:21:01.0000] <Hixie>
maybe it's a timezone issue?

[06:21:02.0000] <Hixie>
i bet it's a timezone issue

[06:21:03.0000] <Hixie>
anyway, bed time

[06:21:04.0000] <Hixie>
nn

[06:23:00.0000] <Philip`>
Timezone sounds possible

[06:35:00.0000] <Lachy>
if I set my timezone to Helsinki, same as hsivonen, then it still works fine for me in Firefox trunk. So it can't simply be a timezone issue.

[07:55:00.0000] <annevk2>
hmm great

[07:55:01.0000] <annevk2>
I thought I could reverse engineer MediaList from Firefox but it's toally useless

[08:12:00.0000] <annevk2>
(Opera is slightly better, but not great either, fwiw)

[08:12:01.0000] <annevk2>
(I don't think this API is used much :) )

[08:53:00.0000] <annevk2>
http://dev.w3.org/csswg/cssom/ chapter 4 and 5 are new; I've yet to start on 6

[08:54:00.0000] <annevk2>
and with new I mean rewritten

[08:54:01.0000] <annevk2>
and with new I don't mean entirely done

[08:54:02.0000] <annevk2>
though it's quite close

[08:54:03.0000] <annevk2>
(I had to check something in, I was getting afraid of accidentally deleting characters and not noticing because the diff was not usable)

[09:07:00.0000] <jgraham>
hsivonen: btw it is not clear to me that a table of fallback encodings is the right solution

[09:09:00.0000] <jgraham>
And I am even less convinced that a table primarilly designed by Firefox localisers is a good idea

[09:15:00.0000] <adactio>
I just had a thought, reading back through a discussion about the <legend> element ...should the <fieldset> element be a sectioning root?

[09:17:00.0000] <TabAtkins>
adactio: Hmm, maybe.  I know that I sometimes use headings within my <fieldset>s (to label the individual inputs).

[09:17:01.0000] <adactio>
TabAtkins: and would you want those headings to contribute to the overall outline of the document?

[09:17:02.0000] <TabAtkins>
No, I wouldn't.

[09:18:00.0000] <TabAtkins>
I'd like the <legend> to contribute, but not the inner headings.

[09:18:01.0000] <adactio>
TabAtkins: sounds like <fieldset> could be a good candidate for sectioning root, then. It "feels" kind of like <blockquote> and <td> in that respect.

[09:18:02.0000] <TabAtkins>
I think you're probably right.

[09:19:00.0000] <TabAtkins>
You wanna write it up?

[09:20:00.0000] <adactio>
TabAtkins: I'll fire off an email to the list.

[09:20:01.0000] <TabAtkins>
kk

[09:29:00.0000] <TabAtkins>
Man, is the multipage spec broken (still?/)again?

[09:30:00.0000] <adactio>
Looks that way.

[09:30:01.0000] <TabAtkins>
;_;

[09:34:00.0000] <Philip`>
I blame Hixie again!

[09:34:01.0000] <TabAtkins>
I'm happy to also blame Hixie.

[09:35:00.0000] <Philip`>
Hmm, I can't access http://whatwg.org at all

[09:35:01.0000] <TabAtkins>
Yeah, I was just trying that.

[09:35:02.0000] <gsnedders|work>
Sounds like Hixie's fault.

[09:36:00.0000] <Philip`>
If you get a directory listing instead of the multipage spec, that's probably my fault (though I'll blame Hixie)

[09:36:01.0000] <Philip`>
but it sounds like the whole web server is down

[09:36:02.0000] <Philip`>
which is nothing to do with me

[09:37:00.0000] <TabAtkins>
I blame both you and Hixie.  And Google.

[09:38:00.0000] <annevk2>
maybe blame DreamHost?

[09:39:00.0000] <Philip`>
It still responds to ping

[09:39:01.0000] <Philip`>
so presumably the server itself is alive, just not Apache

[10:09:00.0000] <zcorpan_>
hmm, specs on w3.org/tr now have a fancy style

[10:09:01.0000] <zcorpan_>
might be old news

[10:10:00.0000] <zcorpan_>
wonder why they have links instead of using media queries for the different views

[10:11:00.0000] <aroben>
is whatwg.org down?

[10:11:01.0000] <aroben>
lists.whatwg.org works

[10:12:00.0000] <aroben>
but I can't get to any specs

[10:12:01.0000] <aroben>
or the homepage

[10:13:00.0000] <zcorpan_>
down for me too

[11:28:00.0000] <a-ja>
Hixie: is http://html5.org/tools/web-apps-tracker broken?

[11:31:00.0000] <jgraham>
a-ja: Could be; Hixie's server is down. Dunno how much the webapps tracker accesses per request and how much is cahced though

[11:32:00.0000] <a-ja>
jgraham: tks....will try again later

[11:38:00.0000] <mpt>
/me discovers SWFObject and cries

[11:43:00.0000] <zcorpan_>
/me wonders why mpt cries

[11:44:00.0000] <mpt>
Because it means the page doesn't contain an <embed>, and therefore Ubuntu Firefox's plug-in installer doesn't get triggered

[11:44:01.0000] <zcorpan_>
ah

[11:45:00.0000] <zcorpan_>
here you go: data:text/html,<embed src=data:application/x-shockwave-flash,>

[11:46:00.0000] <mpt>
Example #13829 of browsers doing X badly -> Web sites hacking around it -> browsers stymied when they improve X

[11:47:00.0000] <zcorpan_>
i guess you could file a bug on swfobject

[11:50:00.0000] <mpt>
so we could

[11:59:00.0000] <cardona507>
why is whatwg.org down?

[12:00:00.0000] <jgraham>
cardona507: Why not?

[12:00:01.0000] <jgraham>
(I think the theoy is that Hixie's apache is down but I guess that might be wrong)

[12:00:02.0000] <jgraham>
(and he is likely asleep)

[12:01:00.0000] <cardona507>
ok - thanks jgraham

[12:40:00.0000] <robertnyman>
This has probably already been discussed, but is there any estimate when http://whatwg.org/ will  be up again?

[12:45:00.0000] <gsnedders|work>
robertnyman: Soon after Hixie gets out of bed.

[12:46:00.0000] <robertnyman>
Fair enough :-) A little sleep-in is always deserved...

[12:50:00.0000] <gsnedders|work>
More generally, for people who want to see the spec: http://dev.w3.org/html5/spec/

[13:03:00.0000] <robertnyman>
Well, yes, but I have an upcoming article about HTML5 with links to some content only available at whatwg.org - so, I can't publish it till the site is available

[14:32:00.0000] <robertnyman>
Good to see whatwg.org up again. If interesting, I just published my introduction to HTML5 article at http://robertnyman.com/2009/10/14/an-introduction-to-html5/

[15:00:00.0000] <cardona507>
very cool robertnyman

[16:30:00.0000] <ato>
Lachy: Hope you're alright.

[16:30:01.0000] <Lachy>
ato, yeah, fine.

[16:31:00.0000] <Lachy>
the fire was on the other side of the building

[16:31:01.0000] <ato>
Ah, your apartment faces Waldemar Thranesgate?

[16:31:02.0000] <Lachy>
yes

[16:31:03.0000] <ato>
Good to know.

[16:32:00.0000] <Lachy>
ato, do I know you?

[16:32:01.0000] <ato>
No.  But wilhelm directed me to your Twitter-account.

[16:32:02.0000] <ato>
(And I live next door.)

[16:32:03.0000] <Lachy>
ok.

[16:34:00.0000] <Dashiva>
Darn

[16:34:01.0000] <Dashiva>
I was hoping lastweek would have an american for us

[16:36:00.0000] <Lachy>
is MikeSmith American?

[16:36:01.0000] <MikeSmith>
Lachy: I am a citizen of the world

[16:36:02.0000] <Lachy>
this has been bugging me all day. There must be at least one American in the cabal.

[16:36:03.0000] <Dashiva>
MikeSmith is too close to the w3c to count

[16:36:04.0000] <Dashiva>
And he's basically Japanese anyhow

[16:37:00.0000] <Rik`>
Lachy: he has a copyright on his name, so he must be american 

[16:37:01.0000] <Dashiva>
Trademark

[16:37:02.0000] <MikeSmith>
I have a patent on the business process I used to develop the trademark for my name

[16:38:00.0000] <Rik`>
I think I just sprained my brain

[16:39:00.0000] <Lachy>
MikeSmith, I assume you also have copyright on the software that implements the process used to develop the trademark for your name too, right?

[16:40:00.0000] <Philip`>
Lachy: He can't tell you, it's a trade secret

[16:41:00.0000] <MikeSmith>
the team of lawyers I keep on retainer tells me that EOLAS is infringing on our IP, so I have a pot o' gold waiting for me

[16:43:00.0000] <MikeSmith>
with that, along with with my Reorg In Box product, I will have enough money to be set for life

[16:44:00.0000] <MikeSmith>
http://logopoeia.com/softexec/about.html#reorg


2009-10-15
[17:29:00.0000] <TabAtkins>
Who all is in the cabal?  Me and Aryeh are American.

[20:16:00.0000] <bartek>
Hi. I'm testing out some HTML5 code, mainly using some SVG. I've set my <!DOCTYPE html> but it seems if I serve the file locally, using a simple http server from python I get nothing. If I view the same code online, it works. Do I need be to sending specific mimetypes to the browser in order for it to render the html correctly?

[20:17:00.0000] <inimino>
bartek: should be text/html, most any HTTP server will do that automatically if the filename ends with ".html"

[20:18:00.0000] <Dashiva>
Many browsers let you see the mimetype from the server

[20:18:01.0000] <bartek>
hmm, then I wonder what the issue is

[20:18:02.0000] <bartek>
I literally get no rendering of html5-spec stuff on my localhost

[20:38:00.0000] <bartek>
Ah, I figured it out. I need to be serving back text/xml, not text/html. The browser renders it great if it's text/xml but I might be wrong and just setting something weird in my code .. :)

[20:38:01.0000] <bartek>
(it works now, though)

[20:51:00.0000] <TabAtkins>
bartek: Sounds like your browser isn't using an html5 renderer.  If you're using FF, frex, it will *not* render SVG in HTML unless you're using one of the nightlies and have the html5 parser turned on.  That's probably why you're having to serve it as text/xml.

[20:58:00.0000] <bartek>
I'm using Chromium nightly for Ubuntu. Not sure if it does it right. It works on most sites, just had to use t ext/xml on my localhost

[21:03:00.0000] <roc>
webkit doesn't support SVG in text/html

[00:02:00.0000] <cardona507>
I am working with appcache - and I think I got it , but when I disconnect from the network my browser has all of the tabs that were open in it's cache -so I can't tell if appcache worked or not. Can someone recommend a way to test my appcache?

[00:14:00.0000] <annevk42>
load one image or so over the network, do not set the online whitelist flag, and do not mention the image in the manifest, then load the app and then reload, if the image is still there there's a bug

[00:14:01.0000] <annevk42>
(iirc)

[00:24:00.0000] <cardona507>
thanks annevk42

[01:51:00.0000] <annevk2>
hmm, should I rename CSSOM to "Web DOM Style" or some such so the part on the CSSOM can actually be called that way?

[01:54:00.0000] <annevk2>
I think I'll just called it "CSS Style Sheets" which is somewhat double, but consistent as well

[01:55:00.0000] <robertnyman>
About meta tag usage....

[01:55:01.0000] <robertnyman>
If I use the old way of specifying it, (<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">) which is still supported, it validates fine with the validator at W3C

[01:56:00.0000] <robertnyman>
But if I use the new version (<meta charset="UTF-8">), it only tentatively validates, since it claims it can't find the character encoding

[01:56:01.0000] <robertnyman>
Is this something to be implemented by the validator? Should I report it as a bug?

[01:57:00.0000] <annevk2>
sounds like a bug of some kind, yes

[01:57:01.0000] <annevk2>
what does validator.nu do?

[01:57:02.0000] <robertnyman>
From what I could see there, it just said it was valid in both cases

[01:57:03.0000] <robertnyman>
Should try it without character encoding at all, to see if it even checks that

[01:59:00.0000] <annevk2>
if it can't find the encoding it's a bug

[01:59:01.0000] <annevk2>
unless you put it in the wrong place, but then it should report that too, so it's a bug either way

[02:00:00.0000] <robertnyman>
Hmmm...

[02:00:01.0000] <robertnyman>
Well, if I check by URL (e.g. http://robertnyman.com), it seems to validate fine

[02:01:00.0000] <annevk2>
anyone a good name for a section that defines .style, getComputedStyle, and possibly new friends?

[02:01:01.0000] <robertnyman>
But if I validate by text field at validator.nu, it doesn't consider character encoding at all...

[02:01:02.0000] <robertnyman>
Oh, well, I need to make some consistent sense out of this

[02:01:03.0000] <robertnyman>
Thanks!

[02:03:00.0000] <gsnedders|work>
robertnyman: That's because you specify a series of characters, not a series of bytes (with an associated character encoding)

[02:04:00.0000] <robertnyman>
Ah, right

[02:22:00.0000] <jgraham>
annevk2: If you call it CSS Style Sheets then you will get nothing but complaints that it means Cascading Style Sheets Style Sheets

[02:22:01.0000] <annevk2>
I'll just point to CSSStyleSheet

[02:24:00.0000] <hsivonen>
sigh. I broke frames.

[02:27:00.0000] <hsivonen>
I need one of those "Have you stopped breaking the Web yet?" t-shirts.

[02:33:00.0000] <gsnedders|work>
hsivonen: What? Where?

[02:34:00.0000] <hsivonen>
gsnedders|work: I only broke frames locally. I think the t-shirt is on the level of a suggestion on twitter at this point.

[02:34:01.0000] <gsnedders|work>
ah.

[02:34:02.0000] <gsnedders|work>
Aww…

[03:04:00.0000] <hsivonen>
HTML5 doesn't have a normative reference to any flavor of RDFa, right?

[03:04:01.0000] <hsivonen>
at least I can't find the string "RDFa" in the spec

[03:04:02.0000] <Hixie>
no

[03:04:03.0000] <hsivonen>
ok

[03:10:00.0000] <jgraham>
Hixie: The encoding table in the spec isn't really based on data it's based on other peoples guesses

[03:11:00.0000] <Hixie>
it's based on what firefox does

[03:13:00.0000] <jgraham>
Yeah and what Firefox does is based on the individual localisers right? And presumably they have not actually run studies to determine the most useful encoding, they have just guessed

[03:13:01.0000] <Hixie>
i expect there's been more of a feedback loop than that, but sure

[03:14:00.0000] <Hixie>
i would be more than happy to use better data

[03:18:00.0000] <jgraham>
Hixie: I think the fact the Welsh suggests UTF-8 rather than Windows-1252 even though, presumably, most welsh speaksers will primarilly interact with English-language content is evidence of a poor feedback loop

[03:18:01.0000] <hsivonen>
jgraham: it's quite possible that the younger localizations or the ones with a less populous user base reflect more the choices of an individual localizer rather than a feedback loop converging on what works best with legacy content

[03:19:00.0000] <hsivonen>
jgraham: my guess about how UTF-8 has ended up as default is the same as Leif's, but that's just a guess

[03:19:01.0000] <Hixie>
jgraham: i'm happy to use better data if you have it. For example, what does Opera's Welsh localisation use?

[03:19:02.0000] <Hixie>
or IE's?

[03:19:03.0000] <jgraham>
What is Leif's guess?

[03:20:00.0000] <hsivonen>
jgraham: Leif guessed that it's motto-based

[03:20:01.0000] <Hixie>
are there bugs filed by Welsh users?

[03:20:02.0000] <Hixie>
etc

[03:20:03.0000] <jgraham>
/me can't remember or didn't folloow

[03:20:04.0000] <jgraham>
motto-based? As in "unicode is good"?

[03:20:05.0000] <hsivonen>
jgraham: right

[03:21:00.0000] <Hixie>
(i could probably be convinced to just remove all the utf-8 cases in favour of win1252, but if you want that, file a bug)

[03:21:01.0000] <jgraham>
I can't see any evidence that unicode covers the Welsh digraphs

[03:21:02.0000] <Hixie>
anyway, gotta go

[03:21:03.0000] <Hixie>
bbl

[03:21:04.0000] <jgraham>
so it makes no sense to use UTF-8 as the default rather than Win-1252

[03:21:05.0000] <hsivonen>
I'm kinda curious enough that I might file bugs against the Welsh, Romanian and Vietnamese localizations asking for rationale

[03:23:00.0000] <hsivonen>
I'm inclined to think nothing should default to UTF-8 to force authors to label their UTF-8 content

[03:25:00.0000] <jgraham>
Although it seems that they use optional accented letters that might not be covered by Win-1252. Nevertheless I have great difficulty believeing that the material consumed by Welsh-language-browser-users is not primarilly English

[03:25:01.0000] <hsivonen>
I was very surprised to find that the Vietnamese localization didn't default to the Windows-* code page for Vietnamese

[03:26:00.0000] <hsivonen>
fwiw, the Firefox localization have other oddities like Swedish defaulting to chardet on.

[03:26:01.0000] <hsivonen>
which is clearly bogus.

[06:11:00.0000] <gsnedders|work>
Philip`: ping

[06:52:00.0000] <Philip`>
gsnedders|work: Space Invaders

[06:52:01.0000] <gsnedders|work>
Philip`: So how long do I have to wait?

[06:53:00.0000] <Philip`>
gsnedders|work: For what?

[06:53:01.0000] <gsnedders|work>
Philip`: For you to properly pong me? :P

[06:54:00.0000] <Philip`>
gsnedders|work: Oh, sorry, I just got mixed up a bit

[06:54:01.0000] <Philip`>
I'll be away in a small number of minutes, but am here now

[06:54:02.0000] <gsnedders|work>
Philip`: How did you organize the dotbot data such that you could easily run regex and get the URL of the page?

[06:58:00.0000] <Philip`>
gsnedders|work: All I did was have a four-byte URL length int, then the URL string, then a four-byte response length, then the response, then repeat

[06:59:00.0000] <Philip`>
and alternated between 16 output files to allow some parallelism in processing (which the grep tool doesn't use)

[06:59:01.0000] <Philip`>
and gzipped all the files

[06:59:02.0000] <gsnedders|work>
Philip`: So how do you run regex? Via some script?

[06:59:03.0000] <Philip`>
and then wrote some Java code that would load all the files and run regexps

[06:59:04.0000] <gsnedders|work>
k

[07:00:00.0000] <Philip`>
(and parse the HTTP headers etc)

[07:02:00.0000] <Philip`>
(The initial file format conversion / splitting was just to make things easier to parse efficiently in Java, and to allow parallel processing on separate chunks of pages)

[07:36:00.0000] <TabAtkins>
Woah, woah, woah.  " No one, not even those who support RDF/RDFa has suggested dumping Microdata."  At what point did Shelley switch from being misleading to outright lying?

[07:38:00.0000] <hsivonen>
TabAtkins: citation-needed for suggestion of dumping microdata.

[07:38:01.0000] <TabAtkins>
Hmm, I'll go look for it.

[07:50:00.0000] <TabAtkins>
All right, point.  Nowhere that I can find does Shelley explicitly say that she wants to dump Microdata.  There is the point where she ragequit the group because of Microdata, and several places where she expressed that it was useless or similar, but nowhere where she actually said something along the lines of "We should kill Microdata".

[07:57:00.0000] <hsivonen>
wow. I was unaware that PICS is the oldest non-superceded REC

[07:58:00.0000] <hsivonen>
/me wonders what PICS 1.0 was

[07:58:01.0000] <hsivonen>
if 1.1 is from 1996

[08:13:00.0000] <Lachy>
TabAtkins, Shelley and others have advocated the position that Microdata should be removed from HTML5 and developed in its own independent spec, but I suspect such people have avoided directly saying that it should be dropped

[08:13:01.0000] <TabAtkins>
Yeah, that's the line of the hour.

[08:14:00.0000] <Lachy>
though, I suspect that ultimately, they want the end result to be that Microdata dies off in favour of RDFa

[08:15:00.0000] <Lachy>
whereas, I don't have a problem with saying directly that I think RDFa should just die.

[08:15:01.0000] <annevk2>
don't assume bad faith

[08:17:00.0000] <MikeSmith>
amen to what annevk2 said

[08:17:01.0000] <Lachy>
I'm not assuming bad faith.

[08:18:00.0000] <MikeSmith>
Lachy: no, you just "suspect" it

[08:18:01.0000] <MikeSmith>
clearly that's very different from assuming it

[08:18:02.0000] <MikeSmith>
my bad

[08:18:03.0000] <TabAtkins>
I don't think bad faith is involved in wanting one option to win among multiple.

[08:19:00.0000] <annevk2>
TabAtkins, you're missing the point

[08:19:01.0000] <Lachy>
what I said had nothing to do with assuming/suspecting bad faith. It's just the logical conclusion from the fact that they openly don't support Microdata and are strongly pushing RDFa instead.

[08:19:02.0000] <annevk2>
TabAtkins, assuming bad faith is not about you, but what you think the plans of the other party are

[08:20:00.0000] <TabAtkins>
annevk2: Indeed, and I think I know exactly what their plans are, and I don't have a problem with that.  I do have a problem with certain people attempting to profess neutrality when they are advocates of a particular side, but that's it.

[08:20:01.0000] <othermaciej>
it seems clear that most people asking for Microdata to be removed from the main spec have a preference for RDFa and would in some sense like it to win

[08:20:02.0000] <annevk2>
Lachy, voicing support for A and not B does not mean you want B to die off

[08:20:03.0000] <annevk2>
that's not at all logical

[08:20:04.0000] <othermaciej>
but it seems reasonable to ask for RDFa and Microdata to be on a level playing field

[08:21:00.0000] <othermaciej>
and that request is not equivalent to blocking Microdata and doesn't necessarily imply a secret desire to kill it

[08:21:01.0000] <othermaciej>
so it's a request that should be considered on the merits

[08:22:00.0000] <othermaciej>
on the other hand, I also think it's a fair position to say that Microdata is better than RDFa and *should* be given the advantage, or to argue the opposite

[08:22:01.0000] <Lachy>
sure, but that's not bad faith either.  Bad faith suggests that they have a malicious motive with what they're doing to undermine some work, and that's not what they're doing.

[08:22:02.0000] <othermaciej>
but arguments of the form "A is better than B so we should make it win" don't tend to use any rationale that would be convincing to the other side

[08:23:00.0000] <othermaciej>
even potentially convincing

[08:23:01.0000] <othermaciej>
whereas "let's put these on an even footing for reasons of fairness" is something you could in theory agree with whether you prefer A or B

[08:24:00.0000] <hsivonen>
I think accusing people of lying without citing evidence is improper, but I don't think it would be bad faith on the part of the RDFa proponents if they openly wanted to kill Microdata if they believed RDFa is better for the Web and Microdata is bad for the Web.

[08:24:01.0000] <othermaciej>
it would not be in bad faith to openly pursue that goal

[08:24:02.0000] <TabAtkins>
Well, wait a moment.  That's not something you can agree with in general.  Most proposals should *not* be on an even footing, because one is clearly better than the other.

[08:25:00.0000] <othermaciej>
it could be seen as bad faith to claim to just want fairness but only as a preliminary step to a secret goal of defeating the opposition in some other way

[08:25:01.0000] <othermaciej>
TabAtkins: I'm not saying that argument is always persuasive regardless of the specific A and B or the person considering the argument

[08:26:00.0000] <jgraham>
Once people are thinkiong in terms of opposition and defeating you have lost anyway

[08:26:01.0000] <annevk2>
btw, I forgot but the document.all stuff also applies to .style.filter

[08:26:02.0000] <TabAtkins>
othermaciej: All right, just making sure.  Falsely equating unequal things can make bad stuff happen.

[08:26:03.0000] <hsivonen>
jgraham: haven't we had that situation ever since 2004 with the WHATWG and the XHTML2 WG?

[08:27:00.0000] <othermaciej>
just that it's something that *could* be persuasive, at least if you think reasonable people can disagree about A vs. B, even if you prefer one or the other

[08:28:00.0000] <othermaciej>
whereas "B is better" has very little chance of persuading A advocates, or at least in this debate I have yet to see anyone shift their position based on such arguments

[08:28:01.0000] <TabAtkins>
jgraham: Conflict is a necessary part of development.  Opposition and defeat *are* a part of every useful process.  It shouldn't be a core resolution method to every problem (compromise is often useful), but nor should it be ignored.

[08:28:02.0000] <hsivonen>
annevk2: whoa, whoa. are there other undetectable objects besides document.all? across all of Gecko, WebKit and Opera?

[08:28:03.0000] <othermaciej>
hsivonen: in WebKit, document.all and style.filter are the only two objects that masquerade as undefined

[08:28:04.0000] <hsivonen>
does Gecko have a magic style.filter?

[08:28:05.0000] <othermaciej>
(style.filter returns a subclass of the ECMAScript built-in String class that masquerades as undefined)

[08:29:00.0000] <annevk2>
hsivonen, Gecko doesn't do filter

[08:29:01.0000] <othermaciej>
I think Gecko does not have style.filter at all yet, but a Gecko developer recently asked me what we do for SVG CSS properties in the CSSOM, including filter, and I told him

[08:29:02.0000] <annevk2>
hsivonen, it's hidden in Opera too

[08:29:03.0000] <jgraham>
TabAtkins: Sure. But it is helpful if the conflict is at a level where it can be resolved by technical merit rather than something else

[08:29:04.0000] <annevk2>
I told the SVG WG they should rename it cssFilter just like cssFloat

[08:29:05.0000] <annevk2>
but that didn't happen :/

[08:29:06.0000] <hsivonen>
Is this about SVG not carefully avoiding names that IE has already taken?

[08:29:07.0000] <jgraham>
(i.e. where people are prepared to accept technical arguments.)

[08:30:00.0000] <annevk2>
hsivonen, yes

[08:30:01.0000] <hsivonen>
annevk2: well, that sucks. Why didn't WebKit and Opera devs just require SVG to change?

[08:31:00.0000] <othermaciej>
we considered just dropping style.filter from the DOM entirely

[08:31:01.0000] <othermaciej>
at the time this came up, the SVG WG was less open to consideration of pragmatic concerns for browsers than it is now

[08:32:00.0000] <hsivonen>
:-(

[08:32:01.0000] <othermaciej>
I believe the CSS WG even asked the SVG WG not to use a CSS property named 'filter' in the first place, due to collision with the proprietary IE property and the resulting potential for problems

[08:32:02.0000] <othermaciej>
but SVG WG rejected that comment

[08:32:03.0000] <othermaciej>
I don't know if there is a lot of content depending on style.filter, so it may not be too late to change

[08:33:00.0000] <othermaciej>
I can't remember if there was a specific reason we didn't want to just rip it out entirely

[08:33:01.0000] <zcorpan_>
can we still change style.filter to something sane?

[08:33:02.0000] <gsnedders|work>
"The specifications the Web is built upon are often rather crappy" — wilhelm

[08:34:00.0000] <gsnedders|work>
(sorry, I found that amusing because normally I only hear really vulgar things about specs or trying-hard-to-be-polite-while-saying-they-suck things)

[08:35:00.0000] <annevk2>
hsivonen, apparently Mozilla didn't agree to change the name...

[08:37:00.0000] <hsivonen>
annevk2: interesting situation.

[08:39:00.0000] <annevk2>
yes :)

[08:45:00.0000] <svtech>
gsnedders|work, and the technologies used by most browsers are also rather crappy.

[08:46:00.0000] <svtech>
Why can't we still smooth zoom our web pages or enjoy hardware accelerated rendering :(

[08:46:01.0000] <othermaciej>
annevk2: Mozilla didn't agree to change the name of a property they still haven't implemented?

[08:49:00.0000] <gsnedders|work>
svtech: Opera is working on a hardware accelerated backend for rendering

[08:53:00.0000] <annevk2>
othermaciej, that's what Erik told me, yes

[08:53:01.0000] <annevk2>
othermaciej, prolly over Brendan Eigh's dead body, too :)

[08:54:00.0000] <annevk2>
s/gh/ch/ oop

[08:54:01.0000] <annevk2>
s

[08:54:02.0000] <othermaciej>
annevk2: we should probably propose changing it again so we can get rid of the stupid undetectability hack

[08:54:03.0000] <othermaciej>
annevk2: because for style.filter, it's completely a self-inflicted wound

[08:56:00.0000] <annevk2>
yes, I said so to Erik, but then he had to go

[08:56:01.0000] <Philip`>
svtech: I've found that I can effectively emulate smooth zooming without any additional hardware requirements, by moving my head backwards and forwards

[08:58:00.0000] <Philip`>
/me wonders how much more effective hardware acceleration could be if it was designed for web browsers rather than for games

[09:02:00.0000] <annevk2>
where in HTML5 is it defined when layout is supposed to be done?

[09:04:00.0000] <zcorpan_>
annevk2: event loop?

[09:05:00.0000] <zcorpan_>
"If necessary, update the rendering or user interface of any Document or browsing context to reflect the current state."

[10:13:00.0000] <Philip`>
http://www.w3.org/News/2009#entry-6521 - hmm, I had to look at the image's alt text before I could figure out what the image meant

[10:14:00.0000] <JoePeck>
Philip`: lol =)

[11:23:00.0000] <mpilgrim>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=7542

[11:27:00.0000] <mpilgrim>
"

[11:27:01.0000] <mpilgrim>
One way to resolve this issue, and ensure its closure before Last Call is

[11:27:02.0000] <mpilgrim>
to remove the Microdata section, either into its own spec, or entirely.

[11:27:03.0000] <mpilgrim>
"

[11:28:00.0000] <mpilgrim>
@Lachy, @hsivonen, @TabAtkins

[11:29:00.0000] <Philip`>
Is that in relation to "something along the lines of "We should kill Microdata""? If so, I don't see how "X is possible" implies "We should do X"

[11:32:00.0000] <mpilgrim>
http://lists.w3.org/Archives/Public/public-html/2009May/0074.html

[11:32:01.0000] <mpilgrim>
"There are exactly two options for metadata going forward ... 

[11:32:02.0000] <mpilgrim>
The options 

[11:32:03.0000] <mpilgrim>
are microformats, and RDFa.

[11:32:04.0000] <mpilgrim>
"

[11:34:00.0000] <TabAtkins>
I'm heading to lunch - I'll respond later.

[11:37:00.0000] <mpilgrim>
http://lists.w3.org/Archives/Public/public-html/2009May/0069.html

[11:38:00.0000] <mpilgrim>
"To be blunt, I'm only interested in this specification because I hope to see it advance two other specifications that have been hindered by their XHTML-only state: SVG and RDFa."

[11:41:00.0000] <annevk42>
I'm getting particularly bored with all the non-constructive meta discussions

[11:42:00.0000] <annevk42>
On the upside I am much better trained now at spotting and ignoring them

[11:43:00.0000] <Philip`>
Are there ever constructive meta discussions?

[11:44:00.0000] <annevk42>
I had one at TPAC last year about what needs to be done to solve the HTML to AT mapping issue

[11:44:01.0000] <annevk42>
And I've had several with members of the i18n WG

[11:46:00.0000] <mpilgrim>
"meta is murder": http://www.codinghorror.com/blog/archives/001282.html

[11:49:00.0000] <mpilgrim>
(which is not an argument against all meta discussions, just an argument for having them somewhere else)

[11:50:00.0000] <gsnedders>
jgraham: Can you push your fixes to html5lib?

[12:38:00.0000] <shelleyp>
annevk2: by your disinterest in discussions about metadata, which is what Microdata is, I think we can take it that you agree with removing it from HTML5

[12:40:00.0000] <shelleyp>
In fact, by much of the disinterest I see in this group, I believe we can achieve this goal by lazy consensus, and then we'll never need discuss it again

[12:42:00.0000] <TabAtkins>
shelleyp: I am interested in metadata at least somewhat, and feel that Microdata is a superior solution which deserves to be in the spec.  (I'm still at lunch, though, so if you reply I'll be a while in seeing it.)

[12:42:01.0000] <othermaciej>
hi shelleyp

[12:42:02.0000] <shelleyp>
You need to reply to the email list

[12:42:03.0000] <shelleyp>
Hi Maciej

[12:43:00.0000] <shelleyp>
TabAtkins: sorry, I think you need to reply to the email lists. That way a positive note can be recorded in favor of keeping microdata

[12:43:01.0000] <othermaciej>
definitely anyone who thinks that Microdata should stay in the spec should post their position and rationale to public-html

[12:43:02.0000] <shelleyp>
othermaciej: agree. It would be most helpful

[12:44:00.0000] <othermaciej>
if there are no strong reasons given for including it in HTML5, then a Change Proposal to remove it would likely succeed by default

[12:44:01.0000] <shelleyp>
othermaciej: agree with that also. 

[12:45:00.0000] <othermaciej>
(I haven't closely reviewed the reasons for keeping it in that people posted so far)

[12:46:00.0000] <shelleyp>
othermaciej: I've seen two, but could be wrong. One is all markup should stay together, the second RDFa is bad

[12:46:01.0000] <shelleyp>
othermaciej: but the RDFa is bad argument isn't pertinent to keeping Microdata

[12:47:00.0000] <othermaciej>
Jonas said: "I think microformats are a very interesting feature and important enough to keep in the main specification" but he didn't expand on that in more detail

[12:47:01.0000] <shelleyp>
othermaciej: microformats?

[12:47:02.0000] <jgraham>
gsnedders: I'll push now (just go back from Swedish)

[12:47:03.0000] <othermaciej>
I assume he misspoke

[12:48:00.0000] <othermaciej>
I cut & pasted from his email

[12:48:01.0000] <shelleyp>
othermaciej: I think he might have. At the same time, though, there has been a conflation between microdata and microformats

[12:48:02.0000] <shelleyp>
othermaciej: we should leave microformats totally out of the discussion, because its a completely independent effort

[12:49:00.0000] <Philip`>
/me suggests renaming microdata to something that doesn't contain "micro", to avoid confusion

[12:49:01.0000] <othermaciej>
he also said he thinks Microdata is "an integral part of the HTML language" though without much further justification

[12:49:02.0000] <othermaciej>
I think people citing microformats either misspoke (I think that's the case with Jonas) or were drawing functional comparisons

[12:49:03.0000] <shelleyp>
othermaciej: That's kind of why I want to move away from the RDFa is bad argument. That's not a viable reason for keeping Microdata.

[12:50:00.0000] <othermaciej>
Philip Jägenstedt said he thinks microdata should be included because "it is a fairly simple syntax/model and a DOM interface which should be familar to web developers while still solving real use cases"

[12:50:01.0000] <shelleyp>
othermaciej: For instance, ask a person who likes RDFa why, they won't answer "Because Microdata is so bad"

[12:50:02.0000] <othermaciej>
I think some people failed to consider the "other applicable specifications" clause

[12:51:00.0000] <shelleyp>
othermaciej: That explains why Microdata could exist, but not necessarily why it should stay in the HTML spec

[12:51:01.0000] <othermaciej>
shelleyp: I'm quoting the reasons here, not necessarily endorsing them

[12:52:00.0000] <shelleyp>
othermaciej: Sure, I'm kind of just ruminating on the statements. I appreciated that Philip did provide specifics

[12:52:01.0000] <othermaciej>
a lot of people did make arguments of roughly the form "Microdata is better than RDFa"

[12:53:00.0000] <shelleyp>
othermaciej: what is the "other applicable specifications" clause?

[12:53:01.0000] <othermaciej>
I tend to agree that's not a strong reason by itself to put it in the main spec

[12:53:02.0000] <othermaciej>
shelleyp: basically that HTML5 allows extension specifications to define additional elements and attributes

[12:53:03.0000] <othermaciej>
shelleyp: so the argument that all the element and attributes have to be in the main spec is not correct, at least on a technical level

[12:54:00.0000] <othermaciej>
see http://dev.w3.org/html5/spec/Overview.html#semantics-0

[12:54:01.0000] <othermaciej>
"Authors must not use elements, attributes, and attribute values that are not permitted by this specification or other applicable specifications."

[12:55:00.0000] <othermaciej>
and the link to http://dev.w3.org/html5/spec/Overview.html#other-applicable-specifications (scroll up a bit)

[12:55:01.0000] <shelleyp>
othermaciej: that would definitely cover Microdata in a separate spec. 

[12:55:02.0000] <othermaciej>
indeed, and it also covers RDFa in a separate spec

[12:56:00.0000] <othermaciej>
so there's no technical obstacle to having some elements and attributes defined in a separate spec

[12:56:01.0000] <jgraham>
It seems to me that "RDFa is bad" is a valid reason for having an asymmetry between RDFa and Microdata and not having such an asymmetry has been one of the reasons stated for removing Microdata from the spec

[12:56:02.0000] <Philip`>
I suppose it would also cover <em> and <object> and hundreds of other things in separate specs

[12:56:03.0000] <othermaciej>
my personal feelings on this issue are:

[12:57:00.0000] <othermaciej>
- I think Microdata is technically a better solution for its use cases than RDFa

[12:57:01.0000] <othermaciej>
- I expect people will continue to use RDFa in text/html no matter what we say, so it may as well have a proper spec

[12:58:00.0000] <jgraham>
(so I think that if you want to remove arguments that depend on the technical merits of Microdata vs RDFa you need to do so symmetrically; that is you need to argue for removal on its own merits and not because of some sense of fairness)

[12:58:01.0000] <othermaciej>
- I think there's enough reasonable difference of opinion on the relative merits of RDFa and Microdata that it will make the HTML WG's life much easier to put them on an even footing, and let them compete in the market on their own merits

[12:59:00.0000] <othermaciej>
I don't really want to argue these points too strongly in the thread, because I'd like to be able to referee the discussion reasonably

[12:59:01.0000] <othermaciej>
I think people should consider the following thoughts:

[12:59:02.0000] <shelleyp>
othermaciej: I agree. And you're right, this discussion should be happening in the email list. 

[13:01:00.0000] <othermaciej>
a) Can you think of a form of the position you disagree with that casts in in the best possible light, and is something you could almost consider agreeing with? Addressing the strongest form of an argument tends to be more persuasive (or who knows, you may change your own mind.)

[13:01:01.0000] <othermaciej>
b) Can you think of arguments for your position that might have a chance of seeming reasonable from the point of view of people coming to the conversation with different premises?

[13:01:02.0000] <shelleyp>
othermaciej: a little offputting to have people say, in effect, shut up on this subject in the email list, when the WG chairs asked for this discussion

[13:02:00.0000] <shelleyp>
othermaciej: those are good points

[13:03:00.0000] <othermaciej>
in technical disputes, it's easy to fall to the temptation to come up with the weakest form of your opponent's position instead of the strongest, and to preach to the choir instead of looking at ways to persuade people who disagree

[13:03:01.0000] <othermaciej>
heck, I'm sure I do that myself at times

[13:03:02.0000] <othermaciej>
but the above two ideas are things I thought of in the course of discussion threads that got way more heated than they were ever supposed to

[13:04:00.0000] <gsnedders>
/me just generally accepts that rhetoric is something he isn't good at and stays out of technical disputes… which is somewhat problematic in this line of work :)

[13:04:01.0000] <gsnedders>
9

[13:05:00.0000] <gsnedders>
(I was actually going to email something about RDFa and Microdata tomorrow, though)

[13:05:01.0000] <Philip`>
(If the disputes require rhetoric, it sounds like they're not really technical disputes)

[13:05:02.0000] <othermaciej>
I think engaging in this discussion is fine, as long as people can keep it about the issues and avoid being insulting and losing their tempers

[13:06:00.0000] <othermaciej>
I think mostly people are doing ok in that regard

[13:06:01.0000] <othermaciej>
Philip`: it's nice to think that technical issues can have completely objective answers, but that's only really true if the parties to the discussion have the same goals and values

[13:07:00.0000] <gsnedders>
Philip`: But rhetoric is generally just the art of persuasive speaking, how you are persuasive is beside the point

[13:07:01.0000] <othermaciej>
WHATWG tends to have shared goals and values because of self-selection effects

[13:07:02.0000] <Philip`>
othermaciej: Maybe I'm interpreting "technical issue" differently

[13:07:03.0000] <othermaciej>
HTML WG has people with different goals and values, and is not allowed to just ignore people who dissent from a particular point of view 

[13:09:00.0000] <shelleyp>
Philip: there can be two equally good technical choices, and sometimes the only way a choice can be made is to provide a strong argument 

[13:09:01.0000] <shelleyp>
Philip: based on interest, passion, existing work, whatever. Not everything can always reduce down to purely technical issues

[13:09:02.0000] <jgraham>
/me wishes he was using mq

[13:10:00.0000] <shelleyp>
Anyway, good arguments here, I hope to see them in the mailing list ;-)

[13:18:00.0000] <Philip`>
jgraham: I can see an easy solution to that: Start using mq

[13:21:00.0000] <jgraham>
Philip`: It's not a solution that helps rectroactively. So I guess I was imprecise. I wish I had previosuly been using mq

[13:23:00.0000] <Philip`>
jgraham: Can't you just convert your previous commits into mq patches and then delete the commits?

[13:23:01.0000] <jgraham>
gsnedders: changes now pushed. I get 3 fails and 1 error, 2 of which are in bs

[13:23:02.0000] <Philip`>
s/commits/revisions/ or whatever they're called

[13:24:00.0000] <jgraham>
(one is the missing feature one is an encoding detection thing that I should check out)

[13:24:01.0000] <jgraham>
(of the others that is)

[13:24:02.0000] <jgraham>
Philip`: Maybe. Still I solved the problem for now

[13:27:00.0000] <gsnedders>
oo, nice.

[13:27:01.0000] <gsnedders>
I get 1 fail and 1 error

[13:33:00.0000] <Dashiva>
element . properties - If the element has an item attribute, returns an HTMLPropertyCollection object (...)

[13:33:01.0000] <Dashiva>
"an item attribute" seems a bit vague. Is it supposed to mean any of itemscope/itemid/itemtype/etc?

[13:36:00.0000] <gsnedders>
/me sighs, realizing his copy of the SGML handbook is in Scotland

[13:36:01.0000] <gsnedders>
/me realizes the XML subset is probably enough

[13:38:00.0000] <TabAtkins>
Man, Shelley left.  shelleyp, if you're reading this from the logs: so far I don't have any good reason to chime in on the thread, because jgraham and hsivonen have expressed my opinions adequately.  If there's a poll I'll speak up, but for now all the technical points I might make have already been made by others, and are being argued sufficiently.

[13:40:00.0000] <Philip`>
gsnedders: Just make things up and say they're what the SGML handbook says, nobody's going to bother to check

[13:45:00.0000] <gsnedders>
Philip`: :)

[13:46:00.0000] <jgraham>
gsnedders: Did you pull html5lib? Does it work?

[13:46:01.0000] <gsnedders>
jgraham: As I said above, 1 pass and 1 error

[13:47:00.0000] <gsnedders>
jgraham: Do you happen to know if we have a copy of the SGML spec at work?

[13:48:00.0000] <jgraham>
gsnedders: Oh well I wasn't reading above

[13:49:00.0000] <jgraham>
gsnedders: No idea about SGML. I can't see why we would since we have never shipped anything SGML based that I know of

[13:49:01.0000] <Handcrafted>
I have a question about the storage spec

[13:49:02.0000] <gsnedders>
jgraham: I dunno. We implemented some more eccentric stuff in our HTML parser than anyone else. We might.

[13:49:03.0000] <Handcrafted>
What is the current state of the persisten, cross session sql storage?

[13:51:00.0000] <Dashiva>
Philip`: The SGML handbook says you can't make things up or you'll explode

[13:52:00.0000] <Dashiva>
Anyone want to chime in on my microdata question from earlier?

[13:53:00.0000] <jgraham>
Dashiva: What was the question?

[13:53:01.0000] <Dashiva>
[21:42:11] <Dashiva> element . properties - If the element has an item attribute, returns an HTMLPropertyCollection object (...)

[13:53:02.0000] <Dashiva>
[21:42:32] <Dashiva> "an item attribute" seems a bit vague. Is it supposed to mean any of itemscope/itemid/itemtype/etc?

[13:54:00.0000] <jgraham>
Oh yeah. I don't know what you're quoting

[13:54:01.0000] <Dashiva>
http://www.whatwg.org/specs/web-apps/current-work/multipage/microdata.html#microdata-dom-api

[13:55:00.0000] <jgraham>
Dashiva: I think that is a bug

[13:55:01.0000] <jgraham>
But I'm not enirely sure

[13:56:00.0000] <Dashiva>
Should be itemscope instead of item?

[13:56:01.0000] <jgraham>
Yes

[14:00:00.0000] <Hixie>
http://twitter.com/timbray/status/4890085030 - am i the only one _not_ seeing htat?

[14:01:00.0000] <roc>
jgraham, Philip`: hg qimport -r tip

[14:01:01.0000] <othermaciej>
Hixie: I believe they have now fixed it

[14:02:00.0000] <Hixie>
oh it wasn't intentional?

[14:02:01.0000] <othermaciej>
Hixie: it was intentional, there was some pushback though

[14:02:02.0000] <Hixie>
ah

[14:02:03.0000] <othermaciej>
Hixie: I can post a screenshot of what the changed version looked like - I have a cached copy of HTML4.01

[14:02:04.0000] <Hixie>
nah, it's ok

[14:02:05.0000] <Dashiva>
Hixie: Comment on the microdata lines just before you returned?

[14:03:00.0000] <othermaciej>
Hixie: basically they added the header and footer of the new w3.org site

[14:03:01.0000] <Hixie>
Dashiva: should be itemscope. file a bug with the widget.

[14:03:02.0000] <othermaciej>
Hixie: moved SotD to the bottom

[14:03:03.0000] <Hixie>
Dashiva: (and thanks)

[14:03:04.0000] <othermaciej>
Hixie: added an odd new intro section

[14:03:05.0000] <othermaciej>
Hixie: broke some custom styling on some of the RECs

[14:03:06.0000] <Hixie>
i could see why people might get upset

[14:04:00.0000] <othermaciej>
where was some consternation on chairs

[14:04:01.0000] <gsnedders>
jgraham: Is there any reason why <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">foo doesn't round-trip in html5lib?

[14:05:00.0000] <roc>
othermaciej: were specific compatibility issues discovered with detectable support for style.filter?

[14:05:01.0000] <othermaciej>
roc: yes

[14:05:02.0000] <jgraham>
gsnedders: Yes. Don't know what it is though

[14:05:03.0000] <othermaciej>
roc: sites broke

[14:05:04.0000] <gsnedders>
jgraham: Like, is it deliberate it does not?

[14:05:05.0000] <Dashiva>
I wonder what reports were envisioned when the "May be seen by hundreds of peopel" was added :)

[14:05:06.0000] <othermaciej>
specifically, there were several sites that set opacity in the following way:

[14:05:07.0000] <jgraham>
gsnedders: Not afaik. What does it roundtrip to and with which treebuilder?

[14:06:00.0000] <othermaciej>
- if the style.filter property exists, then assume you should use IE DirectX filters to set opacity; else if style.mozOpacity is present use that; else if style.webkitOpacity is present use that; else if style.opacity is present use that

[14:06:01.0000] <gsnedders>
jgraham: <!doctype html>foo. Treebuilder is irrelevant, as the serializer never outputs public/systemid (though all the code is there to even pass it to the serializer!)

[14:06:02.0000] <roc>
ok, thanks. and who was it at Mozilla who told you we wouldn't rename it?

[14:06:03.0000] <othermaciej>
roc: which, of course, is totally backwards, but there were enough of these sites that we decided to surrender

[14:06:04.0000] <gsnedders>
jgraham: I have patch ready to go

[14:06:05.0000] <othermaciej>
roc: no one from Mozilla told me that

[14:06:06.0000] <jgraham>
gsnedders: Feel free to fix it if you want. I din't write the serializer

[14:07:00.0000] <othermaciej>
roc: Anne said that Erik told him that someone from Mozilla was against renaming it

[14:07:01.0000] <jgraham>
gsnedders: Needs tests though

[14:07:02.0000] <roc>
ah

[14:07:03.0000] <othermaciej>
roc: I think we may have brought it up with the SVG WG at the time, but I don't remember for sure if we did, or if so what the outcome was

[14:07:04.0000] <roc>
well, I agree to use a different name

[14:07:05.0000] <roc>
problem solved

[14:07:06.0000] <othermaciej>
me too!

[14:07:07.0000] <othermaciej>
what specs (if any) should be changed?

[14:07:08.0000] <jgraham>
/me loves specs chinese whispers

[14:08:00.0000] <Handcrafted>
I'd like to re-ask my question: What is the current state of the persisten, cross session sql storage?

[14:08:01.0000] <roc>
no idea

[14:08:02.0000] <jgraham>
Handcrafted: What do you mean "state"?

[14:08:03.0000] <gsnedders>
jgraham: That means changing the test format.

[14:08:04.0000] <othermaciej>
Handcrafted: it's implemented in Safari, coming soon in Chrome, Opera has announced plans to support, Mozilla doesn't like it, no clear statement either way from Microsoft

[14:09:00.0000] <Handcrafted>
jgraham: Well, it seems like it has been removed from the spec. I can't find it anywhere

[14:09:01.0000] <Handcrafted>
othermaciej: Same as I said to jgraham

[14:10:00.0000] <jgraham>
gsnedders: Really? You can always just make a one-off test using the normal unittest api if you like

[14:10:01.0000] <jgraham>
Handcrafted: yeah it is in a seperate file now

[14:10:02.0000] <othermaciej>
Handcrafted: it's in a separate spec

[14:10:03.0000] <gsnedders>
jgraham: The one reason, apart from tests that makes me weary about committing it, is I'm not entirely sure what the SGML format of DOCTYPEs is

[14:10:04.0000] <gsnedders>
http://dev.w3.org/html5/webstorage/

[14:11:00.0000] <jgraham>
gsnedders: Why do you care? I would expect, at best, to match XML

[14:11:01.0000] <gsnedders>
database storage is in yet another spec now

[14:11:02.0000] <jgraham>
Yay for splitting out specs

[14:11:03.0000] <Handcrafted>
I don't know if it was to me, but that docuemnt isn't about the sql 

[14:11:04.0000] <gsnedders>
jgraham: XML doesn't allow <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">

[14:11:05.0000] <Hixie>
Handcrafted: if you like it in the same spec as HTML, you can find all the stuff that used to be in HTML5 here: http://www.whatwg.org/specs/web-apps/current-work/complete.html

[14:12:00.0000] <Handcrafted>
Hixie: Thanks!

[14:12:01.0000] <Hixie>
13-specs-in-1

[14:12:02.0000] <gsnedders>
Hixie: Add more specs, plz.

[14:12:03.0000] <jgraham>
gsnedders: Hmm. I would prefer if we always emitted a polyglot-friendly doctype

[14:13:00.0000] <gsnedders>
jgraham: Then I really need to check, for the sake of DOCTYPEs like that, what SGML says…

[14:13:01.0000] <gsnedders>
jgraham: The test format currently uses a list, 0th member is token type, and for the DOCTYPE token it has only one more, the element name.

[14:14:00.0000] <gsnedders>
jgraham: I guess I could add more without breaking anything

[14:14:01.0000] <jgraham>
gsnedders: Why? It seems much easier just to do what XML allows rather than sticking pedantically to some spec that no-one even has and no relevant UA ever implemented

[14:14:02.0000] <gsnedders>
jgraham: Because people _want_ to output valid HTML 4.01

[14:15:00.0000] <gsnedders>
jgraham: If you put anything in that is possible in a polyglot document, you will get something polyglot out

[14:15:01.0000] <gsnedders>
I don't think it's an issue.

[14:16:00.0000] <gsnedders>
hsivonen: you around?

[14:19:00.0000] <gsnedders>
jgraham: http://pastebin.ca/1622716

[14:26:00.0000] <Hixie>
http://www.w3.org/mid/49142F02149340458FDD20841AD0AD56299545A7⊙Twwnmc

[14:27:00.0000] <Hixie>
i see they are still effectively fracturing the web, presumably despite their best intentions

[14:53:00.0000] <scherkus>
anyone care to help me understand "awaiting for a stable state?"

[14:57:00.0000] <Hixie>
scherkus: context?

[14:58:00.0000] <roc>
I still think these modes a colossal burden that will eventually crush them, without affecting the rest of us much

[14:59:00.0000] <scherkus>
Hixie: media selection algorithm

[14:59:01.0000] <scherkus>
Hixie: http://www.whatwg.org/specs/web-apps/current-work/#concept-media-load-algorithm

[15:00:00.0000] <Hixie>
ah if you mean "awaiting a stable state", that's a term defined in the event loop section

[15:00:01.0000] <Hixie>
click the link that says "await a stable state"

[15:00:02.0000] <Hixie>
for the definition

[15:01:00.0000] <scherkus>
so run the asynchronous algorithm's synchronous section?

[15:01:01.0000] <Hixie>
more or less, yes

[15:01:02.0000] <Hixie>
it means waiting for the event loop to be done running its current task

[15:01:03.0000] <scherkus>
right

[15:02:00.0000] <scherkus>
ok that makes more sense now

[15:02:01.0000] <scherkus>
but if that was already taken care of

[15:02:02.0000] <scherkus>
then essentially I'm already in a stable state

[15:25:00.0000] <Dashiva>
I guess this fear that microdata will steamroll RDFa if it isn't removed from the spec is a pretty good stamp of quality

[15:26:00.0000] <jgraham>
gsnedders: No need for the tre lines of += at the end just use a single formtting string like "%s %s %s)%(quote_char, doctype["ystemId"], quote_char)

[15:27:00.0000] <othermaciej>
I think whether microdata steamrolls RDFa (or vice versa) will not bear much relation to whether it is in the spec

[15:27:01.0000] <Dashiva>
othermaciej: That's also a reasonable position, but in that case we're wasting a lot of cycles discussing it

[15:28:00.0000] <othermaciej>
Dashiva: my feeling is this - failing to resolve the issue (even if it is largely political) will cause the HTML WG even more pain and hassle down the road

[15:28:01.0000] <othermaciej>
maybe I am being selfish hear, since I will have to bear the brunt of much of the future hassle

[15:28:02.0000] <othermaciej>
s/hear/here/

[15:29:00.0000] <Dashiva>
No, that's right. I don't think agreement to just drop the issue will ever appear.

[15:30:00.0000] <Dashiva>
But it might say something about people's motivations

[15:31:00.0000] <Dashiva>
Hang in there, by the way. We need all the chairing we can get ;)

[15:31:01.0000] <gsnedders>
jgraham: That's ugly too

[15:34:00.0000] <Prest0>
is html5 finalized?

[15:35:00.0000] <daedb>
no

[15:36:00.0000] <Prest0>
is it anywhere close?

[15:37:00.0000] <TabAtkins>
Prest0: What do you mean by 'finalized'?

[15:38:00.0000] <Prest0>
is the specifications finished and implemented

[15:38:01.0000] <TabAtkins>
(daedb was right for any reasonable definition, but your second question needs clarification.)

[15:38:02.0000] <TabAtkins>
How much implementation is required, and by how many people?

[15:38:03.0000] <TabAtkins>
s/people/browsers/

[15:39:00.0000] <Prest0>
hah, i know mozilla is saying how great it is and that they are adopting it and microsoft recently said that they will implement it

[15:39:01.0000] <TabAtkins>
Yes, everyone's committed to implementing it.  But I need to know what your criteria is before I can say how far we are from meeting it.

[15:40:00.0000] <Prest0>
are all features that the html5 spec defines implemented in atleast 1 browser

[15:40:01.0000] <TabAtkins>
Frex, if your criteria is "100% implementation by at least two implementors" (the requirements for w3c Recs), then the best guess is the old 2022 date.  (Note, though, that HTML4 isn't 'finalized' by this criteria.

[15:40:02.0000] <TabAtkins>
No, not all of them.

[15:41:00.0000] <Prest0>
what is missing in firefox?

[15:41:01.0000] <Prest0>
(who i assume is farthest along atm)

[15:41:02.0000] <TabAtkins>
The spec should make that relatively clear per-feature with the implementation statuses.

[15:41:03.0000] <TabAtkins>
(And actually, webkit may be 'farthest along', though that's probably a meaningless statement.)

[15:41:04.0000] <Prest0>
where are the statuses?

[15:42:00.0000] <TabAtkins>
When you're looking at the spec on whatwg.org, next to each feature, along the left side, is a colored box.  It'll have pictures of the browsers that support that feature.

[15:42:01.0000] <Prest0>
does ie8 work with the new tag elements?

[15:42:02.0000] <TabAtkins>
If you hover over one of them, it'll give more details on the level of support.

[15:42:03.0000] <Prest0>
ah cool

[15:42:04.0000] <daedb>
New elements in IE8 needs a script.

[15:43:00.0000] <TabAtkins>
IE8 has the same level of support as IE7 and below - it still treats them as unknown elements, and parses them badly unless you do the createElement() hack.

[15:44:00.0000] <Prest0>
is 2022 a real date laid out in some roadmap or just a hyperbole for a long time from now

[15:45:00.0000] <TabAtkins>
It was a best-guess made by Ian.

[15:46:00.0000] <Prest0>
cool, thanks for all the info

[15:46:01.0000] <TabAtkins>
Like I said, though, HTML4 isn't finalized by that criteria yet, and never will be.

[15:46:02.0000] <TabAtkins>
Neither is CSS1.

[15:46:03.0000] <TabAtkins>
Both of which are over a decade old.

[15:47:00.0000] <Prest0>
haha, when will html be as useable as html4 do you think?

[15:49:00.0000] <TabAtkins>
Hmm, depends somewhat on what parts you're talking about, but I'd say give it a few years.  If we can get legacy IEs to die at an appropriate pace we'll be in business - they'll be the albatross around our neck for a long time.

[15:49:01.0000] <TabAtkins>
You can start using some of HTML5 right now, of course.  After all, quite a bit of it was reverse-engineered *from* IE.

[15:50:00.0000] <Philip`>
/me really doesn't understand what Martin McEvoy means about landing planes

[15:50:01.0000] <TabAtkins>
Philip`, I'm actually having a hard time understanding him at all.  I've asked him to break up his sentences a bit more, as it's very hard to parse sentences that span an entire paragraph.

[15:53:00.0000] <Philip`>
I can understand his paragraphs fine, by inferring sentence breaks

[15:53:01.0000] <Philip`>
I think I just don't understand his underlying points or perspective

[15:54:00.0000] <mikekelly>
hi fans

[15:54:01.0000] <mikekelly>
:P

[15:55:00.0000] <mikekelly>
Hixie: guess what I've been discussing again.. :D

[15:56:00.0000] <Philip`>
mikekelly: Does it begin with "con" and end with "tent negotiation"?

[15:58:00.0000] <daedb>
Philip`: How do you negotiate with tents anyway? :)

[15:59:00.0000] <mikekelly>
it *might* do

[15:59:01.0000] <mikekelly>
yeah it does

[15:59:02.0000] <TabAtkins>
daedb: Have you ever been to a con?  Tents are srs bznss.

[15:59:03.0000] <mikekelly>
I need help

[15:59:04.0000] <mikekelly>
but first, I have to help you sort out this poopy hyperlink problem you have

[16:00:00.0000] <mikekelly>
I keep giving up on you and then thinking about better ways to explain it and coming back

[16:00:01.0000] <daedb>
TabAtkins: I have, but not recently... it was before the tents took over.

[16:01:00.0000] <Philip`>
daedb: It's basically the same as negotiating with terrorists, only ... uh, tentier

[16:02:00.0000] <TabAtkins>
We have a hyperlink problem?  I only hyperlink with friends!  It's social hyperlinking!

[16:03:00.0000] <mikekelly>
don't be ridiculous being social is a centralised process

[16:03:01.0000] <mikekelly>
you need accurate ratings for this shit

[16:03:02.0000] <mikekelly>
it's serious stuff.

[16:04:00.0000] <mikekelly>
so anyway I think I've found some hint of support for what I was going on about before

[16:04:01.0000] <mikekelly>
http://tech.groups.yahoo.com/group/rest-discuss/message/13858 - read on from there, if you dare!

[16:05:00.0000] <Philip`>
s/dare/care/

[16:06:00.0000] <mikekelly>
I was going to put that but it's just asking for it

[16:07:00.0000] <mikekelly>
smarty pants.

[16:07:01.0000] <mikekelly>
I would seriously like someone to take a read of that and give the official line

[16:08:00.0000] <Philip`>
The WHATWG doesn't do "official"

[16:08:01.0000] <mikekelly>
on the mailing list or on here I don't care I just want to know where we stand because I've had nothing further back on the bug since it was insta-resolved by Ian

[16:08:02.0000] <mikekelly>
well I've had something back since then but I have un-addressed replies

[16:09:00.0000] <mikekelly>
if necessary I'd like to escalate this to the chair

[16:10:00.0000] <hober>
IIRC the WHATWG doesn't have a chair

[16:10:01.0000] <mikekelly>
Ian suggested that as the next course of action

[16:10:02.0000] <mikekelly>
oh wait.

[16:10:03.0000] <Philip`>
We all have to stand up

[16:10:04.0000] <hober>
there are people in the WHATWG charter who can override Ian, but that's never happened.

[16:10:05.0000] <TabAtkins>
HTMLWG, of course, has a chair.  It has three of them!

[16:10:06.0000] <TabAtkins>
We all share.

[16:10:07.0000] <Philip`>
If he said that in the W3C Bugzilla, it was probably in the context of the HTML WG

[16:11:00.0000] <mikekelly>
joking aside.. what is actually the next steps here

[16:12:00.0000] <TabAtkins>
(Officially I have no position on this issue.  I'm not certain if it solves a worthwhile problem, but if it does, then I'm not opposed to the proposed solution.)

[16:12:01.0000] <TabAtkins>
(Officially I have no more authority than you, though.)

[16:12:02.0000] <TabAtkins>
Well, was it in the w3c bugtracker?

[16:12:03.0000] <TabAtkins>
We have a whole Process now.  It's official.

[16:12:04.0000] <Philip`>
mikekelly: The recently-proposed (not yet accepted, but generally uncontroversial) HTML WG process is at http://dev.w3.org/html5/decision-policy/decision-policy.html

[16:13:00.0000] <mikekelly>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=7697

[16:14:00.0000] <mikekelly>
for guys looking to stick to HTTP and be strict on resource identification

[16:14:01.0000] <mikekelly>
html is a serious limitation

[16:15:00.0000] <mikekelly>
The XInclude spec [1] defines the accept and accept-language attributes for links: http://www.w3.org/TR/xinclude/#include_element

[16:15:01.0000] <TabAtkins>
All right, so by the flow-chart you can either take path 5c or 5d.  Be careful, though, as you may be eaten by a Grue.

[16:16:00.0000] <TabAtkins>
Without further information (which it doens't look like exists from the bug), 5c is probably not the way to go.  So 5d, escalate to Issue, would probably be the correct path.

[16:17:00.0000] <mikekelly>
lovely warm robotic feeling to this process

[16:17:01.0000] <TabAtkins>
Most robots are warm due to their steam engines.  It is indeed lovely.

[16:17:02.0000] <mikekelly>
you the man.

[16:20:00.0000] <Philip`>
/me has fun writing a fourth SpiderMonkey<->C++ bridge in his game

[16:20:01.0000] <TabAtkins>
What game?

[16:21:00.0000] <Philip`>
Just some unfinished RTS game

[16:22:00.0000] <mikekelly>
serious project or just something to impress the ladies?

[16:22:01.0000] <TabAtkins>
?_?  Team Foundation Server is marking the wrong lines as changed in this diff.  How strange.

[16:23:00.0000] <scherkus>
quick clarification... when the spec says "when the media element has no src attribute" does that imply that it was never set, or that it was set to something like "" (empty string)

[16:23:01.0000] <Philip`>
Supposedly serious, and I doubt it will have the latter effect

[16:24:00.0000] <Hixie>
scherkus: it implies that the element at the time of the check does not have a src attribute at all

[16:24:01.0000] <Hixie>
scherkus: (the attribute could have been set and then removed, and it would match this)

[16:24:02.0000] <Hixie>
scherkus: (but setting it to "" counts as it being present)

[16:24:03.0000] <scherkus>
Hixie: ok, so then we should expect an error because loading "" is not a valid URL

[16:25:00.0000] <Hixie>
"" is a valid URL

[16:25:01.0000] <Hixie>
it's a relative URL that resolves to the same thing as the base URL

[16:25:02.0000] <Hixie>
(typically the web page, but not necessarily)

[16:25:03.0000] <scherkus>
Hixie: er.. right but to the underlying media engine it will probably throw an error heh

[16:26:00.0000] <scherkus>
Hixie: it looks like webkit gets stuck in NETWORK_LOADING because the "" case slips through the cracks

[16:27:00.0000] <Hixie>
scherkus: typically it should end up trying to use an HTML page as a video, and that would fail, yeah

[16:27:01.0000] <Hixie>
scherkus: but the base URL could be set to a video

[16:27:02.0000] <Hixie>
scherkus: or the server could return an HTML file the first time and a video the second

[16:27:03.0000] <Hixie>
i've written similar test cases for CSS

[16:28:00.0000] <mikekelly>
hi Ian

[16:29:00.0000] <scherkus>
Hixie: yeah that makes sense.. it says right there that the url gets resolved and loaded.. don't see a reason why "" would be excepted

[16:29:01.0000] <scherkus>
thanks!  I'll plug away

[16:32:00.0000] <TabAtkins>
I wonder if there's any way to make a polyglot video/html page?  Do any of the video formats accept arbitrary data in a header or something?

[16:34:00.0000] <Philip`>
TabAtkins: It's easy when the HTML doesn't have to be valid

[16:36:00.0000] <TabAtkins>
Yeah, that'd probably be the idea.

[16:44:00.0000] <nessy>
TabAtkins: you can throw arbitrary data into Ogg headers - either in skeleton (for the complete file) or in vorbiscomment (per track)

[16:52:00.0000] <mikekelly>
isn't that what chunked encoding is for?


2009-10-16
[21:58:00.0000] <cardona507>
does anyone know of a page that shows what support safari mobile has for html5?

[00:50:00.0000] <jgraham>
gsnedders: It is way less ugly (and probably less inefficient) than your code

[02:33:00.0000] <annevk2>
it seems Microsoft is using the DOM consistency principle in the opposite direction

[02:33:01.0000] <annevk2>
I thought it was only about HTML documents giving a DOM that is as close as possible to what XHTML would generate for equivalent input?

[02:39:00.0000] <hsivonen>
annevk2: I guess I should reply, but first, I'm doing to debug some software to avoid a situation where I get tarpitted writing too much public-html mail

[02:42:00.0000] <hsivonen>
s/doing/going/

[02:55:00.0000] <hsivonen>
what was the right gesture for getting the inverse link menu on the spec?

[02:56:00.0000] <hsivonen>
option-doubleclick seems to be the annotation UI

[02:56:01.0000] <Hixie>
inverse link menu?

[02:56:02.0000] <Hixie>
oh

[02:56:03.0000] <Hixie>
click on a dfn

[02:56:04.0000] <Hixie>
has to be index or complete.html

[02:59:00.0000] <hsivonen>
Hixie: thanks. got it after reloading and waiting for some beach balling

[02:59:01.0000] <hsivonen>
/me tries to locate the processing model for <base> but is failing

[03:00:00.0000] <mikekelly>
Hi Ian

[03:01:00.0000] <zcorpan_>
/me notes that http://www.w3.org/standards/techs/css at the bottom includes abandoned WDs

[03:02:00.0000] <hsivonen>
does the CSS WG ever bother to tombstone abandoned WDs as Notes?

[03:02:01.0000] <hsivonen>
it seems to me that WGs still in charter don't bother to bury their abandoned docs

[03:03:00.0000] <hsivonen>
just before the site update, the TR page had various obviously old "requirements" WDs

[03:03:01.0000] <hsivonen>
where the stuff the requirements were for was already at REC

[03:05:00.0000] <mikekelly>
Hixie: I think I can make a good case for either changing the significance of @type for out-going links or adding in new attributes for conneg

[03:06:00.0000] <mikekelly>
I'm not the only person running into this problem: http://tech.groups.yahoo.com/group/rest-discuss/message/13871 http://tech.groups.yahoo.com/group/rest-discuss/message/13866

[03:07:00.0000] <mikekelly>
I mean - if you look at the HTTP spec and the way that @type is defined

[03:08:00.0000] <mikekelly>
it really doesn't make sense that @type isn't used to modify the Accept header

[03:10:00.0000] <mikekelly>
since the purpose of @type is to infer what should be expected from a response in a non-authoratative way.. then it seems to make sense to also modify the out-going request accordingly so that the Accept header indicates this context to the destination server

[03:11:00.0000] <mikekelly>
there's nothing authorative about the Accept header - the server is free to disregard it completely and return whatever content-type it pleases, this doesn't break clients or HTTP spec

[03:12:00.0000] <mikekelly>
what it does do is give the ability for me to chose whether or not I want to use HTTP conneg in my html driven applications

[03:12:01.0000] <zcorpan_>
mikekelly: have you lobbied browser vendors whether they're interested in implementing?

[03:13:00.0000] <mikekelly>
I would prefer to do that after the HTML spec was changed

[03:13:01.0000] <hsivonen>
hi, mookid

[03:13:02.0000] <mikekelly>
hello

[03:14:00.0000] <zcorpan_>
why?

[03:14:01.0000] <mikekelly>
because that is the most efficient path to the objective

[03:14:02.0000] <mikekelly>
I don't know anything about who's who in browsers

[03:15:00.0000] <mikekelly>
this is an issue with HTML first and foremost

[03:15:01.0000] <zcorpan_>
my experience is different; in many cases specs don't change until browsers have changed

[03:15:02.0000] <zcorpan_>
see http://wiki.whatwg.org/wiki/FAQ#Is_there_a_process_for_adding_new_features_to_a_specification.3F

[03:16:00.0000] <mikekelly>
so there's no parts of HTML5 that have/are working this way

[03:16:01.0000] <mikekelly>
?

[03:17:00.0000] <mikekelly>
it's pretty crazy that browsers have so much control of this situation

[03:17:01.0000] <zcorpan_>
in general, and especially at this stage, things are only added to html5 if it's clear that browsers are interested in implementing

[03:17:02.0000] <mikekelly>
that's pretty sad state of affairs for something this important.

[03:17:03.0000] <zcorpan_>
if it turns out later that browsers haven't implemented something, it'll be dropped

[03:18:00.0000] <gsnedders|work>
mikekelly: You can add it to the spec… and if browsers don't implement it, you've gained nothing.

[03:18:01.0000] <zcorpan_>
indeed

[03:18:02.0000] <mikekelly>
at least if it is changed in the spec

[03:18:03.0000] <mikekelly>
I have something to reference bugs against

[03:18:04.0000] <mikekelly>
rather than just have browsers go 'well wtf is this I dont care what you want its not in the spec go away'

[03:19:00.0000] <mikekelly>
which is exactly what will happen and you know it.

[03:19:01.0000] <zcorpan_>
that's not how opera react at least

[03:19:02.0000] <gsnedders|work>
mikekelly: Whether something is in a spec has little relevance to whether we will support it or not

[03:19:03.0000] <mikekelly>
oh well that's ok then

[03:19:04.0000] <zcorpan_>
if we see something useful, we'll want to implement it regardless of whether it's in a spec or not

[03:19:05.0000] <zcorpan_>
if we're going to implement it, we want it specced, too

[03:20:00.0000] <mikekelly>
yeah - it's not practical to expect uptake unless these mechanisms are implemented across the board

[03:20:01.0000] <mikekelly>
it doesn't work like that

[03:20:02.0000] <mikekelly>
which is the WHOLE REASON for specs in the first place

[03:20:03.0000] <mikekelly>
otherwise what is the need for gimpy specs

[03:20:04.0000] <mikekelly>
if all that matters is what the general consensus is..?

[03:21:00.0000] <zcorpan_>
the reason for specs is interop and reduce need for expensive reverse engineering :)

[03:21:01.0000] <annevk2>
hsivonen, I think the requirements for <base> were removed from the spec and Hixie expected them to be covered by iri-bis or some such

[03:21:02.0000] <mikekelly>
interop.. well content negotiation is a pretty big deal in terms of interop

[03:21:03.0000] <annevk2>
hsivonen, however that seems somewhat wrong, I recall I emailed about that, but I'm not sure given that Hixie recently went all the way to zero

[03:22:00.0000] <mikekelly>
this is actually pretty sad - how long is the human race expected to put up the mess you guys are going to produce?

[03:23:00.0000] <mikekelly>
it's all very clever for you to be like "well if we add it to the spec and it doesnt get implemented it doesnt matter - so go get it implemented first"

[03:23:01.0000] <mikekelly>
very smart - I see what you're doing there

[03:24:00.0000] <zcorpan_>
that's how most new features in html5 were added

[03:24:01.0000] <mikekelly>
well that's bs quite frankly

[03:24:02.0000] <mikekelly>
the spec should be adjusted to suit applicability of the markup

[03:24:03.0000] <mikekelly>
if browsers don't conform they are BROKEN

[03:24:04.0000] <mikekelly>
and bugs should be logged against that

[03:26:00.0000] <mikekelly>
browsers are *just* a client, the fact that you have your little oligopoly shouldn't give you the right to strong-arm features in and out

[03:28:00.0000] <zcorpan_>
certainly there are other implementors other than browsers

[03:28:01.0000] <mikekelly>
well then - the spec should say what is most appropriate in the context of web architecture

[03:28:02.0000] <zcorpan_>
if you can get your feature implemented somewhere, then that might be good enough to get it added to html5

[03:28:03.0000] <mikekelly>
and if browsers fail to comply then they are broken

[03:28:04.0000] <mikekelly>
it's really very simple.

[03:29:00.0000] <zcorpan_>
the spec is not of much use if it says to do something that implementors don't want to do

[03:29:01.0000] <mikekelly>
bullshit.

[03:29:02.0000] <mikekelly>
the clients are not much use if they don't conform to the spec

[03:29:03.0000] <mikekelly>
you have that totally the wrong way round

[03:30:00.0000] <zcorpan_>
well, clearly we have different points of view on the matter :)

[03:30:01.0000] <mikekelly>
I wonder why..

[03:30:02.0000] <mikekelly>
what a joke.

[03:30:03.0000] <zcorpan_>
specs and implementations should converge on a single behavior

[03:30:04.0000] <mikekelly>
no

[03:30:05.0000] <zcorpan_>
no?

[03:31:00.0000] <mikekelly>
the spec provides the convergence

[03:31:01.0000] <mikekelly>
that is its purpose

[03:31:02.0000] <jgraham>
/me wonders what the use of deliberatly speccing something that no one will implement is

[03:31:03.0000] <mikekelly>
if you don't converge

[03:31:04.0000] <mikekelly>
you are BROKEN

[03:31:05.0000] <mikekelly>
jgraham: because if 'no one' will implement it 

[03:31:06.0000] <mikekelly>
then 'no one' is a client that actually works

[03:32:00.0000] <jgraham>
That was a word game not a reason

[03:32:01.0000] <mikekelly>
yeah yeah

[03:32:02.0000] <mikekelly>
word game

[03:32:03.0000] <mikekelly>
whatever if you are seriously trying to tell me you don't understand what I am saying then you definitely shouldn't be at the level of responsibility you apparently have

[03:33:00.0000] <jgraham>
It seems like the main reason is so that you can have a feeling of self-satisfaction about being on the self-stated moral high ground

[03:33:01.0000] <mikekelly>
that is not a coherent form of governance

[03:33:02.0000] <jgraham>
/me has no responsibility for anything much

[03:33:03.0000] <mikekelly>
it's just appealing to your insufficiecies

[03:33:04.0000] <mikekelly>
guess what

[03:33:05.0000] <mikekelly>
progress hurts

[03:34:00.0000] <mikekelly>
if you get accomodated you will continue, as a group, to take the piss and do whatever you want

[03:34:01.0000] <mikekelly>
which is a bullshit situation, you should read the fking spec and implement it properly

[03:34:02.0000] <mikekelly>
I fail to see how and why it should be any other way

[03:35:00.0000] <mikekelly>
at least from the perspective of society

[03:35:01.0000] <mikekelly>
rather than

[03:35:02.0000] <mikekelly>
'the guys who work for browsers and want things they way they think it should be'

[03:35:03.0000] <zcorpan_>
my job is to read the fking spec and make sure opera implements it properly (for <video> atm)

[03:35:04.0000] <mikekelly>
yeah - those all important video tags

[03:35:05.0000] <mikekelly>
thank god for them

[03:35:06.0000] <mikekelly>
can't wait for video in web pages

[03:36:00.0000] <zcorpan_>
glad to hear it :)

[03:36:01.0000] <mikekelly>
...

[03:37:00.0000] <mikekelly>
jgraham: it's not moral it's common sense

[03:37:01.0000] <mikekelly>
the spec should be there to serve as a guide - once a descision is made the spec changes and clients have to conform

[03:37:02.0000] <mikekelly>
if tha twas actually respected maybe a descision could be made on codecs

[03:37:03.0000] <mikekelly>
and you guys can get your act togather

[03:38:00.0000] <mikekelly>
rather than bitching  and pulling hair and getting the world NOWHERE

[03:38:01.0000] <AryehGregor>
mikekelly, the problem is, clients can't be forced to conform.

[03:38:02.0000] <AryehGregor>
And the reality is they won't unless they want to.

[03:38:03.0000] <AryehGregor>
This was demonstrated pretty conclusively by, e.g., XHTML .

[03:38:04.0000] <AryehGregor>
2.

[03:38:05.0000] <mikekelly>
yes they can that's what bugs are supposed to be logged for

[03:38:06.0000] <AryehGregor>
XHTML 2.

[03:39:00.0000] <AryehGregor>
mikekelly, can be closed WONTFIX.

[03:39:01.0000] <AryehGregor>
The W3C can't force anyone to follow its specs.

[03:39:02.0000] <mikekelly>
yeah XHTML2 doesn't work in the context of

[03:39:03.0000] <AryehGregor>
Historically, browsers often ignore parts of specs they don't want to implement.

[03:39:04.0000] <mikekelly>
browser guys going

[03:39:05.0000] <mikekelly>
"hmm... HTML5 is a gang bang where we just do what we want.. XHTML seems like a painin the arse and my opinion won't be importan.."

[03:39:06.0000] <mikekelly>
hmm...

[03:39:07.0000] <mikekelly>
I wonder..

[03:40:00.0000] <mikekelly>
that is why

[03:40:01.0000] <AryehGregor>
. . .

[03:40:02.0000] <mikekelly>
dress it up how you want that's the blatant reality

[03:40:03.0000] <AryehGregor>
The reality is there's no point in speccing something that won't be implemented.

[03:40:04.0000] <mikekelly>
in the context of some slut called HTML5

[03:40:05.0000] <AryehGregor>
Browser implementers can and do say "no, we won't implement that because the spec is stupid".

[03:40:06.0000] <AryehGregor>
They don't blindly follow specs.

[03:40:07.0000] <AryehGregor>
So there's no point in writing a spec unless you think they'll follow it.

[03:40:08.0000] <mikekelly>
ok well then thye are shockingly bad clients

[03:41:00.0000] <mikekelly>
that is not an acceptable situation

[03:41:01.0000] <mikekelly>
given how much social responsibility they have

[03:41:02.0000] <AryehGregor>
Okay, well, so what do you propose we do?

[03:41:03.0000] <mikekelly>
DEFINE A SPEC

[03:41:04.0000] <mikekelly>
AND STICK TO IT

[03:41:05.0000] <AryehGregor>
"We" as in spec writers.

[03:41:06.0000] <AryehGregor>
We can't "stick to it" if we aren't writing the browsers.

[03:41:07.0000] <mikekelly>
if clients don't stick to it

[03:41:08.0000] <mikekelly>
log bugs

[03:41:09.0000] <AryehGregor>
And if they refuse to fix them?

[03:41:10.0000] <mikekelly>
they are buggy clients

[03:42:00.0000] <AryehGregor>
Okay, great, so then what?

[03:42:01.0000] <AryehGregor>
You haven't gained anything except the right to call them buggy.

[03:42:02.0000] <AryehGregor>
That doesn't help anyone much.

[03:42:03.0000] <mikekelly>
that's something

[03:42:04.0000] <mikekelly>
at least that gives some leverage

[03:42:05.0000] <mikekelly>
whether that is ever resolved is another issue

[03:42:06.0000] <mikekelly>
not for HTML spec to worry about

[03:42:07.0000] <AryehGregor>
Surely the only important one?

[03:42:08.0000] <mikekelly>
nol..

[03:42:09.0000] <mikekelly>
that is a practicality

[03:43:00.0000] <mikekelly>
and a completely differnet governance issue

[03:43:01.0000] <AryehGregor>
So you're saying specs should spec what's right in theory, while totally ignoring practical utility?

[03:43:02.0000] <mikekelly>
there is no need for them to be coupled together

[03:43:03.0000] <mikekelly>
other than your desire to be powerful

[03:43:04.0000] <AryehGregor>
Okay, well, we're going to have to just agree to disagree.

[03:43:05.0000] <mikekelly>
oh OK THEN

[03:43:06.0000] <mikekelly>
nevemrind your social responsibility

[03:43:07.0000] <mikekelly>
we'll just disagree.

[03:44:00.0000] <mikekelly>
good grief.

[03:45:00.0000] <AryehGregor>
<zcorpan_> that's not how opera react at least <-- So how does Opera react to bug reports?  Because I filed one a while back on how input validation is unusable on password fields in Opera (prints the entered value in plaintext), but never got a response.

[03:45:01.0000] <mikekelly>
do you not even understand how some people might read you saying that and take exception to it?

[03:46:00.0000] <jgraham>
AryehGregor: Do you have a bug number?

[03:46:01.0000] <AryehGregor>
mikekelly, I understand, and think they're simply wrong.  Anyone who thinks specs have moral authority, rather than merely being useful tools that improve consistency and thereby help out users and authors, is living in a fantasy world.

[03:47:00.0000] <mikekelly>
a fantasy world where browser developers have some level of humility?

[03:47:01.0000] <mikekelly>
I see how that works

[03:47:02.0000] <AryehGregor>
A fantasy world where browser developers have no right to an independent opinion on what's best for their users.

[03:47:03.0000] <mikekelly>
what?

[03:47:04.0000] <AryehGregor>
Where they won't ignore specs that they think are bad.

[03:48:00.0000] <AryehGregor>
jgraham, DSK-262266

[03:48:01.0000] <mikekelly>
they have no right to that but yet they can opt to completely ignore the spec they are supposed to conform to?

[03:48:02.0000] <mikekelly>
that doesnt make any sense

[03:48:03.0000] <AryehGregor>
Who says they're supposed to conform to it?

[03:48:04.0000] <AryehGregor>
Is the W3C invested with God-given moral authority?

[03:48:05.0000] <mikekelly>
good lord.

[03:48:06.0000] <AryehGregor>
Are you ready to agree to disagree yet?  :)

[03:48:07.0000] <mikekelly>
I'd rather they have authority than a bunch of uppity browser devs

[03:48:08.0000] <mikekelly>
at least there's some collective process invovled

[03:48:09.0000] <AryehGregor>
Why?

[03:49:00.0000] <mikekelly>
because other parties can direct the technology

[03:49:01.0000] <AryehGregor>
Why is that better than competition?

[03:49:02.0000] <mikekelly>
and not just dorks on the client side

[03:49:03.0000] <mikekelly>
HTML is releveant to server side

[03:49:04.0000] <mikekelly>
and to intemediaries aswell

[03:49:05.0000] <mikekelly>
because HTML governs the behaviour between client and server

[03:49:06.0000] <mikekelly>
so if you're building intermediaries like caches

[03:49:07.0000] <mikekelly>
that has a direct effect on how the systems behave

[03:49:08.0000] <mikekelly>
and what you can achieve with your technology

[03:50:00.0000] <mikekelly>
but you, as a browser vendor, are very unlikely to appreciate that

[03:50:01.0000] <mikekelly>
you need guidance

[03:50:02.0000] <mikekelly>
and help

[03:50:03.0000] <AryehGregor>
Well, whatever.  This is pointless.  I'd tell you to go join the XHTML Working Group, except the W3C has recognized that approach is pointless and is discontinuing it.

[03:50:04.0000] <mikekelly>
it's completely impractical to expect you to appreciate these itricacies

[03:50:05.0000] <mikekelly>
yeah POINTLESS

[03:50:06.0000] <mikekelly>
oh well

[03:50:07.0000] <AryehGregor>
I'm not a browser vendor, by the way.

[03:50:08.0000] <AryehGregor>
I'm a web developer.

[03:50:09.0000] <mikekelly>
right ok

[03:50:10.0000] <mikekelly>
well then your response to my explanation there is

[03:50:11.0000] <mikekelly>
"this is pointless"

[03:50:12.0000] <mikekelly>
terrific.

[03:51:00.0000] <mikekelly>
this is not some stupid little dork game we are playing - this is directly affecting society

[03:52:00.0000] <mikekelly>
I think, if what youa re describing is true, that the governance around HTML5 is seriously wrong

[03:52:01.0000] <mikekelly>
from a societal perspective

[03:52:02.0000] <mikekelly>
not from a browser vendor perspective.

[03:53:00.0000] <mikekelly>
and that is a pretty big assertion so you'd do well to provide evidence that is not the case.

[03:54:00.0000] <mikekelly>
pelase.

[03:54:01.0000] <mikekelly>
please^

[03:56:00.0000] <AryehGregor>
All I can say is that as a web developer, I think the HTML5 process has produced a drastically better standard much faster than any other standards process I've been involved with.

[03:56:01.0000] <mikekelly>
if you are referring to XHTML2 it is hardly suprising that struggled when HTML5 provided an excuse to follow a path of less resistence

[03:56:02.0000] <mikekelly>
that is what happened.

[03:57:00.0000] <mikekelly>
not only less resistence - more power

[03:57:01.0000] <mikekelly>
pretty sad.

[03:57:02.0000] <mikekelly>
but at least we have video tags, I guess.

[03:58:00.0000] <mikekelly>
XHTML = organic food shop, HTML5 = McDonalds

[03:59:00.0000] <mikekelly>
guess where the kids go.

[04:14:00.0000] <annevk2>
lol

[04:16:00.0000] <mikekelly>
:)

[04:17:00.0000] <mikekelly>
so.. anyone want to explain why the current governance of HTML5 is actually in the best interests of society?

[04:17:01.0000] <Philip`>
/me prefers inorganic food shops

[04:17:02.0000] <Philip`>
The plastic gives it a nice crunch

[04:17:03.0000] <AryehGregor>
Mmm, sodium chloride.

[04:18:00.0000] <AryehGregor>
mikekelly, you've made it abundantly clear that you violently disagree with us on all possible levels, and it's obvious that there's no point in discussing it.  Sorry.

[04:18:01.0000] <hsivonen>
annevk2: OK. that's a bit of a problem. We got a bug report about <base> and I don't find spec text to refer to.

[04:18:02.0000] <mikekelly>
what? I'm asking you to make your point so I can understand it

[04:18:03.0000] <annevk2>
hsivonen, agreed

[04:18:04.0000] <AryehGregor>
(Oh, wait, am I not allowed to say that there's no point in discussing something?  Or is that only verboten in the W3C?  :) )

[04:18:05.0000] <annevk2>
damn it, Opera IRC doesn't know /ignore

[04:19:00.0000] <mikekelly>
I disagree because nothing has been explained

[04:19:01.0000] <mikekelly>
annevk2: don't be pathetic.

[04:19:02.0000] <jgraham>
irssi ftw :)

[04:20:00.0000] <mikekelly>
what exactly is so unreasonable about that question? if you can't answer it you might have some reflecting to do

[04:20:01.0000] <AryehGregor>
. . .

[04:20:02.0000] <AryehGregor>
Wait, no one has registered #whatwg?

[04:20:03.0000] <AryehGregor>
That seems like a bad idea?

[04:20:04.0000] <hsivonen>
AryehGregor: we haven't had ops here in years

[04:21:00.0000] <jgraham>
HAve we ever>

[04:21:01.0000] <Philip`>
AryehGregor: It's bad if somebody else is able to register it and get ops, despite there being lots of non-ops in here

[04:21:02.0000] <jgraham>
s/>/?/

[04:21:03.0000] <AryehGregor>
Well, but what if everyone is forced out of the channel somehow, and someone takes it over?  I guess freenode would sort it out by request in that case, practically speaking.

[04:21:04.0000] <Philip`>
(Apparently that's possible on QuakeNet)

[04:21:05.0000] <hsivonen>
jgraham: surely the first person who /joined #whatwg became an op for a while?

[04:21:06.0000] <AryehGregor>
Interesting.

[04:22:00.0000] <mikekelly>
why exactly do you feel the need for ops?

[04:22:01.0000] <mikekelly>
:)

[04:22:02.0000] <Philip`>
AryehGregor: That seems very unlikely, given the number of people here :-)

[04:22:03.0000] <jgraham>
hsivonen: Dunno

[04:22:04.0000] <AryehGregor>
Philip`, could be some server problem.

[04:22:05.0000] <Philip`>
AryehGregor: People here are on lots of servers

[04:22:06.0000] <AryehGregor>
But I guess ultimately you do have ops, you could just ask an IRCop.

[04:22:07.0000] <AryehGregor>
A server software bug, then, maybe.  Whatever.

[04:22:08.0000] <Philip`>
AryehGregor: We could always move to #whatwg2 anyway

[04:22:09.0000] <jgraham>
#secret0treehouse

[04:22:10.0000] <AryehGregor>
Anyway, IRCops here are actually friendly and helpful and sane, unlike on QuakeNet, so it's probably not an issue.

[04:22:11.0000] <Philip`>
It's not the channel name has any importance

[04:23:00.0000] <AryehGregor>
Deliciously anarchic, really.  A quite big channel working with no ops.

[04:23:01.0000] <AryehGregor>
That's better than the Wikipedia-related channels.

[04:23:02.0000] <Philip`>
It's survived longer than the open Twitter account

[04:23:03.0000] <gsnedders|work>
mikekelly: The practical good that will come out of the existence of the HTML 5 spec is the ability for new browsers to emerge that are compatible with the existing web content without having to spend years reverse-engineering other browsers.

[04:24:00.0000] <mikekelly>
.. lol

[04:24:01.0000] <mikekelly>
:)

[04:24:02.0000] <Philip`>
gsnedders|work: Does that mean if nobody creates a new browser in the future, because Gecko and WebKit are good enough, that HTML 5 will provide no practical good?

[04:24:03.0000] <mikekelly>
bingo!

[04:25:00.0000] <jgraham>
Philip`: Was that just a thinly veiled way of saying that Presto isn't good enough?

[04:25:01.0000] <AryehGregor>
jgraham, was that just a thinly-veiled way of saying that Trident isn't good enough?

[04:26:00.0000] <AryehGregor>
Or would you prefer to say that explicitly?  :P

[04:26:01.0000] <jgraham>
AryehGregor: Nah, I will say that explicitly

[04:26:02.0000] <jgraham>
With demos if need be

[04:26:03.0000] <mikekelly>
it's hardly suprising Trident has such distain for the specs

[04:26:04.0000] <mikekelly>
they just have unfashionable disdain

[04:26:05.0000] <Philip`>
jgraham: No, just saying that if someone wants to make a new browser-like thing in the future, Presto isn't useful as a base for them to build it on, whereas Gecko and WebKit are (since they're open source)

[04:27:00.0000] <Philip`>
(I probably should have said "if nobody creates a new browser engine in the future")

[04:27:01.0000] <AryehGregor>
Well, except if you want to write something closed-source.

[04:27:02.0000] <AryehGregor>
Then you can't look at the source code too closely.

[04:27:03.0000] <mikekelly>
well then you pay the price

[04:27:04.0000] <mikekelly>
'tough shit' is the technical phrase for that I think

[04:27:05.0000] <AryehGregor>
Or if you want to write something BSD-licensed.  Or whatever.

[04:27:06.0000] <Philip`>
and given the complexity of building browser engines (regardless of whether you've got a spec to follow), people probably won't build browser engines when they can reuse the free ones that are already available

[04:27:07.0000] <AryehGregor>
(okay, I don't like the BSD license either, so I'm not going to cry over that)

[04:27:08.0000] <jgraham>
Philip`: Hmm? It's not obvious why the opensourciness of existing browser engines is a big factor when creating a novel browser engine

[04:28:00.0000] <AryehGregor>
jgraham, well, practically speaking, the last two major new browsers to be deployed just used existing open-source browser engines.

[04:28:01.0000] <mikekelly>
:)

[04:28:02.0000] <jgraham>
Yeah I agree that existing browser engines may cause you to not bother crating a new one

[04:28:03.0000] <gsnedders|work>
mikekelly: In that case HTML 5 will lead to browsers becoming interoperable, which should reduce the abundance of pages that only work in the browser they are designed for.

[04:28:04.0000] <AryehGregor>
Even though Apple would not have been predisposed a priori to use an open-source rendering engine.

[04:28:05.0000] <Philip`>
jgraham: It seems like a factor when building a new browser front-end (reusing an engine), because it's easier and cheaper than sorting out complex licensing deals

[04:29:00.0000] <jgraham>
Either by licensing a commercial one or reusing an open source one

[04:29:01.0000] <mikekelly>
gsnedders|work: isn't that what the doctype is for?

[04:29:02.0000] <Philip`>
hence loads of people writing WebKit-based mobile browsers

[04:29:03.0000] <mikekelly>
it's ridiculous - HTML5 wont be backwards compatible so what point are you trying to make here?

[04:29:04.0000] <AryehGregor>
The last time anyone actually wrote a serious new HTML renderer from scratch was sometime in the 1990s, I suspect.

[04:30:00.0000] <AryehGregor>
("serious" meaning "eventually saw significant adoption in web browsers", just to make it clear how much I'm hedging here)

[04:30:01.0000] <mikekelly>
exactly

[04:30:02.0000] <gsnedders|work>
mikekelly: The DOCTYPE merely defines the valid structure of the document — it says nothing about how to process the document, or what things mean, or how to display them, or how they map onto DOM APIs…

[04:30:03.0000] <jgraham>
Philip`: Hmm I think I was misunderstanding you a bit

[04:30:04.0000] <AryehGregor>
But practically speaking, HTML5 aims to improve consistency among existing browsers too.

[04:30:05.0000] <Philip`>
jgraham: I was probably misunderstanding and misexplaining myself, too

[04:30:06.0000] <AryehGregor>
In regards to, e.g., parsing, which has been an undocumented and non-interoperable mess forever.

[04:30:07.0000] <mikekelly>
gsnedders|work: what point are you making?

[04:31:00.0000] <mikekelly>
that we have to live in the shadow of crappy old html forever?

[04:31:01.0000] <hsivonen>
wow mookid has caused quite a discussion again

[04:32:00.0000] <gsnedders|work>
mikekelly: Unless you can see an viable way of getting rid of crappy old html, yes.

[04:32:01.0000] <mikekelly>
lol.

[04:32:02.0000] <Philip`>
jgraham: I think my idea was: Writing browser engines is hard (despite HTML5 helping). People want to write browsers, not engines. There are free, good-enough engines (Gecko, WebKit) they can reuse. So they will probably use those, instead of writing their own, and HTML5 won't help them much

[04:32:03.0000] <gsnedders|work>
I'm sure most, and probably all, browser vendors would love to do so.

[04:33:00.0000] <mikekelly>
gsnedders|work: so why not have a way to let applications be specific

[04:33:01.0000] <mikekelly>
by having an internet media type assigned for strict html5

[04:33:02.0000] <jgraham>
hsivonen: Yeah it seems that it is hard to protect against this sort of discussion growing beyond reasonable bounds

[04:33:03.0000] <Philip`>
jgraham: and so the argument about HTML5 helping people write new browser engines seems a bit theoretical

[04:33:04.0000] <jgraham>
Philip`: Agreed

[04:34:00.0000] <mikekelly>
jgraham: yeah you shuold just ban me for 'being a douche'

[04:34:01.0000] <jgraham>
But it becomes non-theoretical the first time it happens

[04:34:02.0000] <mikekelly>
cmon..

[04:34:03.0000] <gsnedders|work>
mikekelly: We already have that with the XML serialization of HTML 4.01, and of the XML serialization of HTML 5

[04:34:04.0000] <mikekelly>
so what is the problem?

[04:34:05.0000] <Philip`>
(Lots of stuff in HTML5 is useful for non-browser UAs, which people write frequently, but lots more (like all the script-related stuff) is only really useful for browsers)

[04:35:00.0000] <jgraham>
(and the argument about it helping existing browsers come closer to interoperability is non-theoretical)

[04:35:01.0000] <Philip`>
jgraham: That's assuming it ever happens a first time :-)

[04:35:02.0000] <Philip`>
jgraham: (That's true, but it's a different argument)

[04:35:03.0000] <mikekelly>
gsnedders|work: my proposal involve new attributes or just an updating of the signficance of the existing type attribute

[04:36:00.0000] <mikekelly>
I still don't understand the point you are making

[04:36:01.0000] <jgraham>
(I think it's not really a different argument. A novel browser engine is just a special case of "helps UAs become more interoperable")

[04:37:00.0000] <AryehGregor>
jgraham, Philip`: well, people have written *browsers* mostly from scratch recently.  They just haven't written *renderers* from scratch.  A lot of Safari's and Chromium's actual browser-y code, including some stuff that HTML5 specs, was written from scratch, right?

[04:37:01.0000] <mikekelly>
if you reject every change on the basis that it might potentially cause pain somewhere - would you ever change anything at all?!

[04:37:02.0000] <AryehGregor>
Also, for that matter, Gecko looks like it will be switching to a new parser written from scratch, based precisely on HTML5.

[04:38:00.0000] <AryehGregor>
So actually this seems like a somewhat practical argument.

[04:38:01.0000] <mikekelly>
it's a blanket excuse for not having to implement changes you don't think are necessary

[04:39:00.0000] <mikekelly>
important word being *think*

[04:39:01.0000] <Philip`>
AryehGregor: Adding/updating features to/in existing browser engines seems like quite a different way of framing the argument than talking about helping people write new browser engines

[04:40:00.0000] <AryehGregor>
Chrome and Safari are new browser engines.  Except for certain (rather large) components.

[04:40:01.0000] <AryehGregor>
Like the entire parsing and rendering part.

[04:40:02.0000] <Philip`>
e.g. it doesn't result in ideas about increasing competition in the browser engine space, because there's always going to be the same handful of engines

[04:40:03.0000] <AryehGregor>
Well, it remains to be seen.

[04:41:00.0000] <AryehGregor>
Maybe HTML5 will prompt more new engines to be written.

[04:41:01.0000] <AryehGregor>
It lowers the bar drastically.

[04:41:02.0000] <Philip`>
AryehGregor: I'm using the term "[browser] engine" to mean the entire parsing and rendering etc part

[04:41:03.0000] <AryehGregor>
/me notes "etc"

[04:42:00.0000] <Philip`>
(not the front-end UI stuff, and not the back-end OS-dependent stuff like HTTP implementations and whatever)

[04:42:01.0000] <hsivonen>
AryehGregor: I Chrome to use the same engine as Safari

[04:42:02.0000] <Philip`>
/me wonders how drastic the reduction really is, because implementing the whole spec still seems really really hard even when it's all written down

[04:43:00.0000] <AryehGregor>
hsivonen, parse error, unexpected noun immediately following pronoun.

[04:43:01.0000] <hsivonen>
*I consider

[04:43:02.0000] <AryehGregor>
Well, it uses the same parsing and rendering engine, so . . . yeah, most of what HTML5 actually specs.

[04:43:03.0000] <AryehGregor>
. . . anyway, who knows.

[04:43:04.0000] <AryehGregor>
There are other reasons to spec things carefully.

[04:43:05.0000] <AryehGregor>
Even existing vendors often find themselves reverse-engineering other browsers.

[04:44:00.0000] <AryehGregor>
HTML5 should hopefully get all the reverse-engineering done in one place for good, for the sake of old and new browsers alike.

[04:44:01.0000] <Philip`>
/me isn't talking about other reasons, just about the claimed reason that it will greatly help competitive new browser[ engine]s 

[04:44:02.0000] <hsivonen>
Philip`: btw, what's your guess on how the IE9 mode of IE9 is being developed?

[04:45:00.0000] <Philip`>
hsivonen: I guess they're not starting from scratch

[04:45:01.0000] <jgraham>
AryehGregor: That seems like the wrong parse error because you could say "I, James, am a fish" and, admittedly that requires commas but if you don't have the level of error correcting needed to fix that you will never understand IRC

[04:45:02.0000] <AryehGregor>
Hmm.

[04:46:00.0000] <AryehGregor>
Yeah, you're right, the parse error really occurs at "to".

[04:46:01.0000] <hsivonen>
Philip`: I wonder, though, if their delta to IE8 mode is reverse-engineering-based or spec-based

[04:46:02.0000] <AryehGregor>
Except of course it doesn't occur at any specific place.

[04:46:03.0000] <mikekelly>
gsnedders|work: so, ignoring the stuff about browsers willing to implement a change, what exactly is the problem create by the change in signficance of the type header to be more inline with HTTP and/or adding optional attributes for conneg ?? Please can someone answer this

[04:46:04.0000] <jgraham>
:)

[04:46:05.0000] <AryehGregor>
It's more of a general failure of error-correction mechanisms.

[04:47:00.0000] <AryehGregor>
Crazy unparseable human language.

[04:47:01.0000] <jgraham>
Except that I error corrected to the right result but with low confidence

[04:47:02.0000] <jgraham>
But high enough not to bother asking

[04:47:03.0000] <AryehGregor>
hsivonen, I hope they can use the same CSS engine for both, and mostly deploy JS/parsing fixes.  CSS seems to be nailed down pretty well in IE8.

[04:47:04.0000] <mikekelly>
the last thing I got on this was Ian's invalid reference to the HTTP spec about the Accept header being inteended to represent a UA's generic preference

[04:47:05.0000] <mikekelly>
which is clearly not if you read the spec.

[04:47:06.0000] <AryehGregor>
I mean, they don't implement as much as I'd like, but what they do implement seems sane.

[04:48:00.0000] <AryehGregor>
MediaWiki doesn't need any IE8Fixes.css so far.

[04:48:01.0000] <AryehGregor>
Apparently there are still huge JS incompatibilies, though.

[04:48:02.0000] <AryehGregor>
I mostly avoid JS, so I don't know personally.

[04:56:00.0000] <AryehGregor>
$ cd skins/monobook/; ls *Fixes.css

[04:56:01.0000] <AryehGregor>
FF2Fixes.css  IE50Fixes.css  IE55Fixes.css  IE60Fixes.css  IE70Fixes.css  IEMacFixes.css  Opera6Fixes.css  Opera7Fixes.css  Opera9Fixes.css

[04:56:02.0000] <AryehGregor>
No FF3, no WebKit, no IE8, no Opera 10.  <3 standards.

[05:02:00.0000] <Dashiva>
AryehGregor: Well, maybe wikipedia is on the compat list? 

[05:03:00.0000] <AryehGregor>
All the other MediaWiki sites wouldn't be.

[05:03:01.0000] <AryehGregor>
Probably.

[05:03:02.0000] <AryehGregor>
Unless it's autodetecting MediaWiki somehow, like WebKit does for our old broken KHTMLFixes.css.

[05:03:03.0000] <hsivonen>
AryehGregor: do you mean API incompatibilities or JS language incompatibilities?

[05:03:04.0000] <AryehGregor>
I have no idea.

[05:03:05.0000] <AryehGregor>
I don't do much JS, as I said.

[05:18:00.0000] <Philip`>
http://www.w3.org/News/2009#entry-6526

[05:18:01.0000] <Philip`>
Hmm, did nobody post about that in public-html?

[05:21:00.0000] <annevk2>
don't think so

[05:21:01.0000] <hsivonen>
Philip`: I got a patent exclusion email in my HTML WG / WHATWG folder 

[05:22:00.0000] <hsivonen>
http://www.w3.org/mid/42366A9C-A6ED-4188-8DB2-CCB777EC5448⊙wo

[05:25:00.0000] <Philip`>
/me can't help but feel that half the RDFa people don't understand levels of abstraction properly, and mix up serialisations and abstract models, e.g. thinking that RDF/XML is relevant when discussing the canonicalisation of RDF literals produced by an RDFa parser

[05:25:01.0000] <Philip`>
(which also causes confusion when thinking about HTML vs XHTML)

[05:26:00.0000] <mikekelly>
I don't think there's need for RDFa if HTTP Link header works out ok

[05:26:01.0000] <Dashiva>
It's okay, because it works

[05:27:00.0000] <Philip`>
hsivonen: I got that too, but didn't really consider it to be an announcement

[05:27:01.0000] <hsivonen>
mikekelly: have you expressed that to the RDFa TF?

[05:27:02.0000] <mikekelly>
no - I discussing this with swig - there's issues like

[05:27:03.0000] <mikekelly>
you can't do bnodes or literals with Link headers

[05:28:00.0000] <mikekelly>
but that doesn't massively concern me because I don't think that either of those has value or should exist

[05:29:00.0000] <Philip`>
You don't need literals anyway, just use resources like http://purl.org/integers/42 instead of literals like "42"

[05:29:01.0000] <mikekelly>
I'm pretty new to all the semweb stuff though and a lot of the tooling isn't built for distributed approach

[05:30:00.0000] <Philip`>
(Then there's the bonus that somebody can use OWL to define that 42 is the same as 48)

[05:30:01.0000] <Philip`>
(which you couldn't do with boring old literals)

[05:30:02.0000] <Dashiva>
How's that trust coming along?

[05:31:00.0000] <hsivonen>
/me wonders if algebra can flow out of RDF inference if you figure out the right kind of recursive definition of integers as chains of triples

[05:32:00.0000] <Dashiva>
So what do we do if Philip` poisons the web with 42 = 48?

[05:33:00.0000] <Dashiva>
It would ruin everything related to RDF algebra

[05:33:01.0000] <Dashiva>
In general, how do you handle triples that are untrue?

[05:37:00.0000] <hsivonen>
Dashiva: implementation detail

[05:38:00.0000] <Philip`>
Dashiva: Maybe you only load inferences from trusted sources

[05:38:01.0000] <Philip`>
(and then apply it to data loaded from anywhere)

[05:40:00.0000] <Dashiva>
So now we need decentralized trust too?

[05:40:01.0000] <jgraham>
Maybe you do inferer trust and then use that to decide how much to trust other things

[05:40:02.0000] <jgraham>
s/things/statements/

[05:41:00.0000] <jgraham>
Dashiva: The impression I get is that distributed trust is the holy grail for people who are into such things

[05:41:01.0000] <Dashiva>
So in other words, it doesn't exist, but would be really nice if it did?

[05:42:00.0000] <jgraham>
It seems that way to me. At least I don't recall ever actually using anything that would be described as distributed trust. But I do recall lots of talks about it

[05:42:01.0000] <gsnedders|work>
It's far from impossible to infer trust, but it does more or less have to be calculated on a per-application basis

[05:43:00.0000] <gsnedders|work>
(You can't really distribute the trust network unless you can trust the source of that network)

[05:43:01.0000] <gsnedders|work>
(Equally, different applications have different ideal means of calculating trust)

[05:44:00.0000] <Dashiva>
Is it possible to infer trust on the same level as the data, without meta?

[05:46:00.0000] <mikekelly>
distributed trust seems pretty simple if you have semantics for linking trusted objects together

[05:47:00.0000] <mikekelly>
you'd have to be able to dereference all the URIs though

[05:50:00.0000] <Dashiva>
And you'd need to trust DNS

[05:51:00.0000] <hsivonen>
http://lost-contact.mit.edu/afs/cern.ch/w3.org/www/Architecture/Letter_1.html

[05:51:01.0000] <hsivonen>
(via www-archive)

[06:03:00.0000] <Philip`>
/me likes the definition "a trusted system or component is one whose failure can break the security policy"

[06:04:00.0000] <Philip`>
since it highlights that trust is dangerous and should be minimised

[06:04:01.0000] <Dashiva>
Single point of betrayal

[06:05:00.0000] <Dashiva>
>> Huh?  There are tons of cases not addressed by microformats (at least, not addressed easily).  That's the entire reason stuff like RDFa *exists*.

[06:05:01.0000] <Dashiva>
> No actually it isn't RDFa exist because people want to embed "specifically" RDF in X/HTML

[06:09:00.0000] <Philip`>
/me wishes Opera had better multi-monitor support (on Linux at least)

[06:09:01.0000] <hsivonen>
Philip`: for media queries?

[06:09:02.0000] <Dashiva>
Hmm

[06:09:03.0000] <Dashiva>
Non-draconian namespaces, better or worse than draconian namespaces?

[06:09:04.0000] <Philip`>
hsivonen: No, for stuff like not opening menus that are much taller than the monitor they're on

[06:10:00.0000] <hsivonen>
multi-monitor is one reason why media queries shouldn't be allowed to query the screen--only the window.

[06:10:01.0000] <hsivonen>
Dashiva: IIRC, Gecko has non-Draconian namespaces in XML, but I could remember wrong

[06:11:00.0000] <Philip`>
A while ago it was popping up tab preview thumbnails on the wrong monitor too, but it seems to have got that fixed after I restarted it

[06:13:00.0000] <Dashiva>
I guess by non-draconian I mean that namespaces coexist with e.g. foo:bar with no xmlns:foo in scope

[06:14:00.0000] <hsivonen>
Dashiva: doesn't that "work" in Gecko for some definition of "work"?

[06:14:01.0000] <hsivonen>
in XML

[06:17:00.0000] <Dashiva>
http://dashiva.net/test/noxmlns.xhtml

[06:25:00.0000] <Dashiva>
I wonder how "dumb RDF" processors cope with typed RDF

[06:27:00.0000] <zcorpan_>
hendry: you can't have content inside <source>

[06:27:01.0000] <mikekelly>
Dashiva: re DNS - http://ha.ckers.org/blog/20091015/dnssec-certs-as-a-replacement-for-ssls-transport-security/

[06:28:00.0000] <Philip`>
Dashiva: What's a ""dumb RDF" processor"?

[06:28:01.0000] <Dashiva>
Philip`: one that doesn't understand the ^^ syntax

[06:28:02.0000] <Philip`>
Dashiva: RDF doesn't have ^^ syntax

[06:29:00.0000] <Philip`>
(Some serialisations of RDF do, but they're different from RDF)

[06:29:01.0000] <Dashiva>
One that doesn't know about data types, I mean

[06:30:00.0000] <mikekelly>
wouldn't it make more sense to just have a mechnaism by which you can include a link element with type="application/rdf+xml" in the header?

[06:31:00.0000] <mikekelly>
rather than trying to embed it in html..

[06:31:01.0000] <Dashiva>
mikekelly: That's risky because the metadata can easily get out of sync

[06:32:00.0000] <mikekelly>
? don't understand what you mean by that

[06:32:01.0000] <Dashiva>
Embedded metadata is more reliable because it reflects the visible content

[06:32:02.0000] <mikekelly>
that's an artificial benefit

[06:32:03.0000] <mikekelly>
I don't think that is actually the case

[06:33:00.0000] <Philip`>
Dashiva: They ought to know enough about datatypes to preserve the datatypes that are associated with literals, but they can treat literals as opaque blobs or manipulate them as strings without having to understand the meaning of the datatype

[06:33:01.0000] <Dashiva>
I see

[06:33:02.0000] <Dashiva>
mikekelly: It's not artificial at all

[06:34:00.0000] <Dashiva>
When you have two copies of the same data, they can disagree. If there's only one, no disagreement is possible.

[06:34:01.0000] <mikekelly>
I don't think that embedding metadata makes it any more or less likely to reflect content

[06:35:00.0000] <Philip`>
It's not just about embedding, it's about reusing data

[06:36:00.0000] <Dashiva>
<span itemprop=author>Your name</span> seems highly likely to reflect

[06:37:00.0000] <mikekelly>
but that is probably generated from some model

[06:37:01.0000] <mikekelly>
which is shared

[06:37:02.0000] <mikekelly>
and the data persisted between the two

[06:38:00.0000] <Dashiva>
Well, first you have to assume it's generated. And then you have to assume nobody introduces redundancies by entering a name directly instead of using ${author}

[06:40:00.0000] <mikekelly>
yeah people can break good technology with bad practice

[06:40:01.0000] <Philip`>
Lots of it isn't generated from some model - it's stuff like licensing information copied-and-pasted into static HTML pages

[06:41:00.0000] <mikekelly>
ok well fair enough if you want to accomodate that kind of system then good luck to you

[06:41:01.0000] <Dashiva>
That's kind of what the web is for

[06:41:02.0000] <Dashiva>
Accomodating people

[06:41:03.0000] <mikekelly>
not rreeeeaaally

[06:42:00.0000] <mikekelly>
well actually if that's the case can we get the type attribute definition changed so I can do HTTP conneg?

[06:42:01.0000] <mikekelly>
since we're all about accomodation

[06:42:02.0000] <Dashiva>
No, because that's accomodating quirky experts, not people

[06:43:00.0000] <mikekelly>
yeah

[06:43:01.0000] <mikekelly>
I'm not people

[06:43:02.0000] <mikekelly>
and the people who use my systems arent people

[06:43:03.0000] <mikekelly>
makes perfect sense.

[06:44:00.0000] <mikekelly>
anyway - back to the RDF thing

[06:44:01.0000] <mikekelly>
you're kind of stretching the definition of a resource is your RDF representation is not directly tied to the content it is augmenting

[06:44:02.0000] <mikekelly>
s/is/if

[06:45:00.0000] <Philip`>
Oh no, not the definition of resource :-(

[06:46:00.0000] <Dashiva>
The precious definition of a resource

[06:46:01.0000] <Philip`>
(There was a fun thread on public-html about the definition of resource recently)

[06:46:02.0000] <Dashiva>
You call that fun?

[06:46:03.0000] <mikekelly>
didn't read it

[06:46:04.0000] <mikekelly>
probably full of The Stupid(tm)

[06:48:00.0000] <mikekelly>
why was that being discussed?

[06:48:01.0000] <Philip`>
Dashiva: Ironically

[06:48:02.0000] <Dashiva>
Because the precious definition of a resource was under attack

[06:50:00.0000] <jgraham>
Ironically the real-world definition of a resource is practically "that which is precious"

[06:51:00.0000] <mikekelly>
actually it's just "a concept that can be represented by some (internet) media type"

[06:52:00.0000] <mikekelly>
by some/at least one

[06:54:00.0000] <mikekelly>
the choice over resource identification and conneg should be up to system implementors

[06:56:00.0000] <mikekelly>
there isn't any practical choice at the moment, all your representations have to be resources in their own right - *because* html and browsers force you to do it that way

[06:57:00.0000] <annevk2>
wow, conneg bs is still going on?

[06:57:01.0000] <annevk2>
way to go

[06:57:02.0000] <mikekelly>
well I'm yet to get a coherent response

[06:57:03.0000] <mikekelly>
and the only hint of consideration came from someone last night who said they wouldn't be opposed to accomodating this approach

[06:58:00.0000] <mikekelly>
recent conversation on another mailing list provided evidence that others have had to find ways to get around this restriction, and would be much better off if the problem was solved

[06:59:00.0000] <mikekelly>
the issue was raised against the HTML5 spec and Ian instantly resolved it for no apparent reason

[06:59:01.0000] <mikekelly>
he then gave a response in which he completely misrepresented the HTTP spec in his justification

[07:00:00.0000] <mikekelly>
which I pointed out, and his only constructive response was 'you have to escalate this to the chair if you want to go any further'

[07:00:01.0000] <mikekelly>
not very helpful.

[07:01:00.0000] <Philip`>
annevk2: There was a detour through RDFa before getting back to conneg

[07:01:01.0000] <annevk2>
ah I see

[07:01:02.0000] <annevk2>
RDFa is fun too of course

[07:02:00.0000] <annevk2>
and slightly less theoretical than the whole conneg nonsense

[07:02:01.0000] <Philip`>
Exceedingly

[07:02:02.0000] <mikekelly>
why are you calling it nonsense?

[07:02:03.0000] <mikekelly>
if it's nonsense

[07:02:04.0000] <mikekelly>
why don't you drop the rhetoric and explain why that is the case

[07:02:05.0000] <AryehGregor>
Wow, this is still going on?

[07:02:06.0000] <Philip`>
/me is also trying to work out why the SpiderMonkey API doesn't have anything equivalent to the "new" operator

[07:03:00.0000] <hsivonen>
AryehGregor: isn't it awesome how this same discussion repeats itself and always at length?

[07:03:01.0000] <mikekelly>
what the hell am I supposed to do in this situation.. I've explained myself several times, had no response as to why that perspective is wrong and..

[07:03:02.0000] <AryehGregor>
mikekelly, you disagree with the whole WHATWG on a completely fundamental level.  Try the W3C, like the public-html mailing list.

[07:03:03.0000] <mikekelly>
nothing happens

[07:04:00.0000] <hsivonen>
AryehGregor: nooooo!

[07:04:01.0000] <AryehGregor>
hsivonen, yeah, I shouldn't be surprised, I guess.  This discussion has really been going on for several years now, so it shouldn't be remarkable that one particular instance goes on for a couple of hours.

[07:04:02.0000] <mikekelly>
well if that is the case you should have lots of counter points to make

[07:04:03.0000] <Philip`>
AryehGregor: This discussion only goes on when mikekelly is here

[07:04:04.0000] <AryehGregor>
mikekelly, this is called "we disagree and can't come to an agreement".  It happens sometimes in real life, sadly.  

[07:04:05.0000] <mikekelly>
of which you've currently provided a big fat 0

[07:05:00.0000] <AryehGregor>
mikekelly, we did, you just ignored them or rejected them.

[07:05:01.0000] <mikekelly>
such as..?

[07:05:02.0000] <mikekelly>
feel free to comment on the bug

[07:05:03.0000] <Philip`>
/me suggests not going through them all again on IRC

[07:05:04.0000] <mikekelly>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=7697

[07:05:05.0000] <daedb>
I'm gonna need more popcorn

[07:05:06.0000] <mikekelly>
why don't you just give the top 2 reasons

[07:06:00.0000] <mikekelly>
why its a bad idea

[07:06:01.0000] <annevk2>
/me finds that pretending Opera has /ignore works pretty well

[07:06:02.0000] <mikekelly>
...?

[07:06:03.0000] <AryehGregor>
mikekelly, I don't know about the specific issue, I can only talk about the philosophical questions you raised here just now.

[07:07:00.0000] <mikekelly>
ok well forget that I don't care that much, I think it's pretty immoral but it's not important

[07:07:01.0000] <AryehGregor>
Okay, hmm.

[07:07:02.0000] <mikekelly>
so going back to this conneg thing..

[07:07:03.0000] <mikekelly>
if you guys want me to stop

[07:07:04.0000] <mikekelly>
why don't you actually give a coherent response

[07:08:00.0000] <AryehGregor>
So you're saying that you should be able to do <img src="foo" type="image/jpeg"> <img src="foo" type="image/png"> and have the first one be JPEG and the second PNG based on content negotiation?

[07:08:01.0000] <mikekelly>
correct.

[07:08:02.0000] <jgraham>
Philip`: It doesn't have anything called construct?

[07:08:03.0000] <AryehGregor>
mikekelly, FWIW, I think you'd have gotten a coherent response much earlier if you hadn't launched into tirades about moral responsibility and so on.

[07:09:00.0000] <mikekelly>
well we launched straight into 'you cant raise that with the spec until you convince browser vendors its a good idea'

[07:09:01.0000] <AryehGregor>
mikekelly, what you're suggesting doesn't seem to be the intended purpose of content negotiation.  conneg is supposed to allow the server to provide one of several resources that are interchangeable, in whatever format is most convenient for it.

[07:09:02.0000] <AryehGregor>
What's the advantage to doing what you suggest instead of <img src="foo.jpg"><img src="foo.png">?

[07:09:03.0000] <mikekelly>
:)

[07:09:04.0000] <mikekelly>
there's a huge difference

[07:09:05.0000] <mikekelly>
one is representations of a resource

[07:09:06.0000] <mikekelly>
the other is two resources

[07:09:07.0000] <AryehGregor>
Ah.

[07:09:08.0000] <mikekelly>
a better example

[07:10:00.0000] <AryehGregor>
If it's really the same resource, why would you want to force particular versions of it to be used?  That suggests they aren't really interchangeable and are different resources to begin with.

[07:10:01.0000] <mikekelly>
<a href="/blog" type="application/atom+xml"> and <a href="/blog" type="text/html">

[07:10:02.0000] <AryehGregor>
Although, for what it's worth, HTML5 deliberately ignores the entire concept of resources as a pointless abstraction.

[07:10:03.0000] <mikekelly>
no in the context of a particular application flow

[07:10:04.0000] <mikekelly>
not ^

[07:10:05.0000] <mikekelly>
so if I have a homepage and want to link to blog and atom feed as above

[07:10:06.0000] <jgraham>
Philip`: JS_ConstructObject?

[07:11:00.0000] <mikekelly>
atom/html are representations of my blog

[07:11:01.0000] <Philip`>
jgraham: It has JS_ConstructObject, but that's for native C classes and not for calling JS constructors

[07:11:02.0000] <AryehGregor>
Atom and HTML are totally different formats.  They can't possibly represent the same resource, that just makes no sense.  Reading the HTML and reading the feed are very different operations.

[07:11:03.0000] <mikekelly>
you're wrong

[07:11:04.0000] <AryehGregor>
Also FWIW, though, HTML5 gives an algorithm allowing HTML to be used as a feed format, so you could just serve HTML for both when that's supported.

[07:11:05.0000] <jgraham>
Philip`: Oh.

[07:12:00.0000] <mikekelly>
atom and html are supposed to be distinct otherwise they wouldnt be distinct representations

[07:12:01.0000] <AryehGregor>
mikekelly, tip: saying things like "you're wrong" rather than "I think you're mistaken" is likely to get people to ignore you.

[07:12:02.0000] <mikekelly>
atom and html are supposed to be distinct otherwise they wouldnt be distinct representations

[07:12:03.0000] <AryehGregor>
Diplomacy helps.

[07:12:04.0000] <mikekelly>
how can you have distinct representations that are the same?

[07:12:05.0000] <mikekelly>
that doesnt make any sense.

[07:12:06.0000] <jgraham>
Philip`: Is JS_NewObject wrong too?

[07:12:07.0000] <AryehGregor>
They can be the same logical "thing" encoded in two different formats, like JPEG and PNG.

[07:12:08.0000] <Philip`>
jgraham: The documentation for JS_ConstructObject* says "Neither of these functions is quite like the JavaScript new keyword."

[07:12:09.0000] <AryehGregor>
Both of those are the same image.

[07:13:00.0000] <mikekelly>
a blog in html as opposed to a blog in atom *are* the same thing!

[07:13:01.0000] <Philip`>
jgraham: Yes, that doesn't call constructors at all

[07:13:02.0000] <mikekelly>
you are making wild assumptions it's difficulat to know what to say other than 'you are wrong'

[07:13:03.0000] <jgraham>
Philip`: How silly

[07:13:04.0000] <AryehGregor>
mikekelly, then why do you care which one you serve?

[07:13:05.0000] <mikekelly>
because in the context of application flow

[07:13:06.0000] <AryehGregor>
Just serve text/html if it's supported, else application/xml+atom.

[07:13:07.0000] <mikekelly>
you may need 2 links which are specific

[07:14:00.0000] <AryehGregor>
"you are making wild assumptions it's difficulat to know what to say other than 'you are wrong'"  Again not productive.

[07:14:01.0000] <mikekelly>
i.e. links to the atom feed or the actual html page

[07:14:02.0000] <AryehGregor>
I'm going to stop responding again if you aren't going to be polite.

[07:14:03.0000] <mikekelly>
from your homepage

[07:14:04.0000] <Philip`>
jgraham: (My current approach is to use JS_GetProperty("prototype") and JS_GetParent, pass those to JS_NewObject, then call JS_CallFunctionValue on the constructor function, which seems to work okay but isn't very elegant)

[07:14:05.0000] <AryehGregor>
mikekelly, but if they're functionally the same thing, why would you have separate links to each?

[07:14:06.0000] <mikekelly>
because the distinction between the representations is relevant to *application flow*

[07:15:00.0000] <mikekelly>
which is the primary concen of hypermedia formats like HTML

[07:15:01.0000] <AryehGregor>
Then they're distinct enough that they represent different resources, IMO.  If there's a visible difference to the user, they deserve to be different resources.

[07:15:02.0000] <AryehGregor>
If you believe in the idea of "resources" at all, which I don't.

[07:15:03.0000] <mikekelly>
you don't believe in resources?!

[07:16:00.0000] <mikekelly>
are you trolling me?

[07:16:01.0000] <AryehGregor>
No.  They're a pointless abstraction.

[07:16:02.0000] <AryehGregor>
No.

[07:16:03.0000] <AryehGregor>
See recent discussions on public-html about this.

[07:16:04.0000] <mikekelly>
pointless?

[07:16:05.0000] <mikekelly>
how are they pointles

[07:16:06.0000] <AryehGregor>
Okay, I'm using /ignore for the first time in a very, very long time.  Sorry.

[07:16:07.0000] <mikekelly>
the smenatics of HTTP only make sense *because* of the notion of resources and representation

[07:17:00.0000] <mikekelly>
why are you ignoring me because I'm making sense?

[07:18:00.0000] <mikekelly>
it's a bit rich to get involved in a discussion over resources and representations and then when you get towards the end proclaim 'well I dont even believe in resources'

[07:18:01.0000] <mikekelly>
wtf is that about..

[07:18:02.0000] <AryehGregor>
Ignoring people makes me sad.  I just lack the restraint not to respond, apparently.

[07:18:03.0000] <AryehGregor>
http://xkcd.com/386/

[07:19:00.0000] <mikekelly>
some of you people are umbelievably weak.

[07:21:00.0000] <mikekelly>
what a joke :)

[07:23:00.0000] <mikekelly>
so.. still lacking a coherent explanation - "resources are a pointless abstraction" doesn't cut it for me, sorry.

[07:30:00.0000] <mikekelly>
that resource discussion looks like it could be quite a good laugh

[07:33:00.0000] <mikekelly>
wow, pretty disgusting.

[07:34:00.0000] <TabAtkins>
mikekelly: I told you what the next step is for you.  You created a bug, it was resolved, you weren't happy with the resolution, you don't have new information to cause the editor to reconsider, so you *raise it as an Issue*.

[07:34:01.0000] <Philip`>
Or you drop it

[07:35:00.0000] <TabAtkins>
That's the appropriate response, as detailed in the new HTMLWG decision policy, and as explained to you yesterday.

[07:41:00.0000] <mikekelly>
fair enough

[07:48:00.0000] <mikekelly>
this is pure craziness: RFC2616's terminology is more abstract than is useful for most Web 

[07:49:00.0000] <mikekelly>
developers, and therefore this kind of terminology confuses people.

[08:07:00.0000] <mikekelly>
how do I raise an issue?

[08:07:01.0000] <mikekelly>
:(

[08:07:02.0000] <Dashiva>
Talk to someone with issue tracker access

[08:07:03.0000] <mikekelly>
can someone point me in the right direction here then please

[08:07:04.0000] <Dashiva>
Or just post to public-html and it should happen during the flow of discussion

[08:08:00.0000] <mikekelly>
hmm ok fair enough

[08:08:01.0000] <Dashiva>
Just make it clear from the mail that you've tried bugzilla and wish to raise an issue 

[08:08:02.0000] <mikekelly>
ok will do, thanks

[08:14:00.0000] <mikekelly>
I have to be invited in order to participate in that list right?

[08:15:00.0000] <Dashiva>
No

[08:15:01.0000] <Dashiva>
You have to be a member to subscribe to it, but anyone can send email and read the archives

[08:15:02.0000] <TabAtkins>
(Make sure to indicate in the email if you aren't subscribed, so people will keep you in the cc lists.)

[08:16:00.0000] <mikekelly>
ah ok that makes sense

[10:13:00.0000] <mikekelly>
done and sent

[10:14:00.0000] <mikekelly>
TabAtkins: thanks for the guideance, sorry for being douche :)

[10:19:00.0000] <AryehGregor>
The WHATWG FAQ needs an entry like "Your attitude toward web standards is short-sighted/irresponsible/uninformed/evil/insane/etc."  We get that so much.

[10:19:01.0000] <AryehGregor>
Culture conflict.

[10:21:00.0000] <TabAtkins>
mikekelly: We're all douches sometime.  It's cool.  Just don't make it a habit.

[10:21:01.0000] <TabAtkins>
AryehGregor: I agree!

[10:21:02.0000] <TabAtkins>
/me might write it this weekend.

[10:22:00.0000] <AryehGregor>
It needs to say something like 1) it's not helpful to get upset about people with different attitudes toward the web's future, 2) the WHATWG is mostly composed of people who have a lot of web standards experience and know what they're doing, 3) justification for the major philosophical differences (e.g., concreteness and pragmatism).

[10:23:00.0000] <TabAtkins>
Expand on how (1) might read?

[10:27:00.0000] <webben>
"Explaining the reasons for your beliefs is more effective than castigating other people for holding different beliefs. We welcome alternate points of view." ?

[10:27:01.0000] <TabAtkins>
Hehe, excert from just-written code: array("name"=>$name->name)

[10:27:02.0000] <AryehGregor>
Well, just general advice when encountering opinions that seem crazy to you, you know.

[10:27:03.0000] <AryehGregor>
I wouldn't say we welcome alternate points of view, but we're sure going to ignore you if you're only capable of ranting and calling us names.

[10:27:04.0000] <webben>
*more likely to effect changes to our specifications

[10:28:00.0000] <TabAtkins>
webben, that's helpful.

[10:28:01.0000] <webben>
rather than "more effective"

[10:30:00.0000] <TabAtkins>
Arlag;hes;lageh I keep screwing up the order of arguments in this function.  Damn my bad API design!

[10:38:00.0000] <TabAtkins>
AryehGregor: Your idea of <a onlyreplace="foo"> is intriguing.  It's essentially browser-supported AJAX that decays into perfectly serviceable links.

[10:38:01.0000] <AryehGregor>
TabAtkins, yes, but the problem of authors relying on it and not actually making the pages the same is very troublesome.

[10:38:02.0000] <TabAtkins>
Or, rather, AJAH, in the simple form where it just retrieves content and plugs it straight in.

[10:38:03.0000] <AryehGregor>
Better than AJAX in that regard, to be fair.

[10:39:00.0000] <AryehGregor>
At least this somewhat encourages working links.

[10:39:01.0000] <AryehGregor>
Maybe some tweak could make them more or less mandatory, but I'm not sure what.

[10:39:02.0000] <TabAtkins>
Yeah, that's what I like best.  It seems to decay with the most ease and usefulness.

[10:40:00.0000] <TabAtkins>
Plus you don't have to mess around with listeners and such dying on page reloads, and possibly persisting them (I don't know how)...  

[10:40:01.0000] <TabAtkins>
Honestly I like it a *lot*.

[10:41:00.0000] <TabAtkins>
Worst case, authors will produce a single static page and then all the "linked" pages will contain just the bit of content they'll want to swap in.  That will break search engine and bookmarking spectacularly, though, so it'll probably be pretty obvious when it happens.

[10:41:01.0000] <AryehGregor>
You could say the same of frames.

[10:42:00.0000] <TabAtkins>
Nah, frames break that by design, and in a different way (you just always return to the 'main' page).  In this, if you bookmarked deep into the site, you'll just get an unstyled chunk of content, which is much worse.

[10:42:01.0000] <TabAtkins>
Which gives correspondingly greater pressure to *not* take that sort of shortcut, and just do it right (produce full pages).

[10:43:00.0000] <AryehGregor>
It could be made to fail somehow if there were serious problems with the retrieved thingie.

[10:43:01.0000] <AryehGregor>
But I'm not sure how to do that elegantly, if it's possible.

[10:43:02.0000] <TabAtkins>
Like some kind of check that, if it fails, will ignore the @onlyreplace and just swap the entire page out (with obvious bad effects if you're doing it wrong).

[10:44:00.0000] <TabAtkins>
That should have ended with a ?.

[10:45:00.0000] <AryehGregor>
The trick is making it so the error can kick in quickly, so you don't get the page loading partially and then reloading.

[10:45:01.0000] <AryehGregor>
Also I'm not sure what to trigger off.

[10:45:02.0000] <TabAtkins>
Yeah, not sure either.  We can do some basic stuff, like it having a doctype and <title>.  That'll at least require a *little* bit more than just the content chunk.

[10:47:00.0000] <AryehGregor>
Neither a doctype nor a <title> are required to exist in a working page.

[10:47:01.0000] <AryehGregor>
Although both are required in a valid page, of course.

[10:47:02.0000] <TabAtkins>
Exactly.  Requiring some form of validity doesn't hurt.

[10:47:03.0000] <AryehGregor>
Well, it does if you want the feature to not be the one thing in HTML5 to totally break for no apparent reason because you don't have a doctype.

[10:48:00.0000] <AryehGregor>
Quirks mode is one thing, that's another.

[10:48:01.0000] <AryehGregor>
The differences between rendering modes should be minimized if possible.

[10:48:02.0000] <AryehGregor>
Remember that if possible, we wouldn't require a doctype at all.

[10:48:03.0000] <TabAtkins>
The great thing about this idea, why I think it has serious potential, is that it also cleanly addresses the "permanent script" idea that got bandied about a while back.  Doing the "single-page app" was a suggested solution, but people balked at the difficulty of doing that with AJAX.

[10:48:04.0000] <TabAtkins>
This is true.

[10:49:00.0000] <AryehGregor>
I guess you could argue that my proposal is more or less strictly better than AJAX for this use-case.

[10:49:01.0000] <TabAtkins>
Also, this would presumably update history/url accordingly, so bookmarking worked properly without any effort.

[10:49:02.0000] <TabAtkins>
It is strictly better.

[10:49:03.0000] <TabAtkins>
It is a wonderfully automatic solution to a problem that is currently being solved by a much more general (and thus harder to use) tool.

[10:49:04.0000] <cardona507>
does the iphone safari support <audio> ?

[10:51:00.0000] <AryehGregor>
TabAtkins, another question is how much benefit there is to implementing something so specific in a declarative fashion.  We could try mimicking lots of behavior without JS; is it worth it?

[10:51:01.0000] <AryehGregor>
Maybe the new behavior would make more sense if it were JS-based instead of declarative?

[10:51:02.0000] <AryehGregor>
cardona507, I think the very latest ones do, but I don't know for sure offhand.

[10:52:00.0000] <cardona507>
thanks

[10:54:00.0000] <AryehGregor>
I wonder if the functionality is complicated enough from a JS perspective to really justify a new function, if it's okay to require JS.

[10:54:01.0000] <AryehGregor>
I guess nobody would do it manually if it weren't a built-in function, because it seems wasteful.

[10:55:00.0000] <AryehGregor>
Which it is, without SDCH or such.

[10:56:00.0000] <TabAtkins>
AryehGregor: Yes, I think this is absolutely worth it.  This is already a common pattern; it's being held back by concerns about accessibility and the simple difficulty of doing it right.

[10:56:01.0000] <TabAtkins>
I really think this will revolutionize html applications.

[10:56:02.0000] <AryehGregor>
Now you're getting into hyperbole.

[10:57:00.0000] <AryehGregor>
It would make one part of the AJAX pattern easier.

[10:57:01.0000] <TabAtkins>
No, seriously, I had to go walk around the living room to calm down over how awesome this would be.

[10:57:02.0000] <AryehGregor>
Yes, but that's because you're very excitable.

[10:57:03.0000] <TabAtkins>
Beside the point!

[10:58:00.0000] <TabAtkins>
It's already a common pattern, it's a solution to some real and persistent problems going forward (like globalScript), and it's just so unbelievably trivial to use.

[10:59:00.0000] <TabAtkins>
And it's trivially accessible.  Win-win-win.

[10:59:01.0000] <AryehGregor>
What use cases would greatly benefit from it, concretely?  From the point of view of a conventional app like MediaWiki, or static pages, it mostly just prevents flicker on navigation.

[10:59:02.0000] <AryehGregor>
It only seems really useful if you have very script-intensive stuff that you don't want to vanish on navigation.

[11:00:00.0000] <TabAtkins>
The author just has to write a perfectly normal site, unchanged from how they've done so for the past 10 years.  Add this one little attribute to your links, and suddenly you've got the new hotness of AJAX.

[11:00:01.0000] <AryehGregor>
Concretely, I said.

[11:00:02.0000] <AryehGregor>
"the new hotness of AJAX" does not count as a concrete use-case.

[11:00:03.0000] <TabAtkins>
Aryeh: Yup, and that's very valuable.  Script-heavy apps will get more and more prevalent.

[11:00:04.0000] <AryehGregor>
Yes, but they're already script-heavy, and probably using giant libraries.  Isn't using an AJAX library good enough for them?

[11:01:00.0000] <TabAtkins>
No, it's still more difficult than it needs to be, *and* you have to architect around it.

[11:01:01.0000] <TabAtkins>
This requires *no* architecture changes at all.

[11:01:02.0000] <AryehGregor>
Relative to a set of static pages.

[11:01:03.0000] <TabAtkins>
Yes.

[11:01:04.0000] <TabAtkins>
Which are still the default.

[11:02:00.0000] <AryehGregor>
Relative to a totally JS-driven app, which is the only place where there seems to be a lot of benefit, lack of architecture changes isn't really relevant.

[11:02:01.0000] <TabAtkins>
I'd love to not have to reload jQuery on every pageload of my company's sites.

[11:02:02.0000] <AryehGregor>
Hmm, that's a point.

[11:02:03.0000] <AryehGregor>
It might significantly improve performance to avoid rerendering and so on.

[11:02:04.0000] <TabAtkins>
Yup.

[11:02:05.0000] <AryehGregor>
And reexecuting script.

[11:02:06.0000] <TabAtkins>
Yup.

[11:02:07.0000] <TabAtkins>
This is why I'm excited about it.

[11:03:00.0000] <TabAtkins>
The best solution to "I don't want to reload libraries" *is* a single-page app, but that's difficult right now, and will always be annoying.  This solves it trivially.

[11:03:01.0000] <TabAtkins>
And you don't have to worry about SEO hits from bots not executing JS, etc.

[11:03:02.0000] <TabAtkins>
They'll just see a static site.

[11:04:00.0000] <mikekelly>
did my email hit the list?

[11:05:00.0000] <TabAtkins>
I don't see it yet.

[11:05:01.0000] <mikekelly>
hmmm

[11:05:02.0000] <mikekelly>
I sent it a while ago

[11:05:03.0000] <mikekelly>
I had to approve my address do I need to resend it?

[11:05:04.0000] <Philip`>
mikekelly: If it's the first time you've posted to the list, you'll need to respond to the confirmation it sends back to you, and then wait a few days

[11:05:05.0000] <mikekelly>
a few days?! :(

[11:05:06.0000] <Philip`>
mikekelly: No need to resend

[11:06:00.0000] <Philip`>
mikekelly: Yeah, I'm not sure why but the W3C lists have a delay the first time you post a message

[11:06:01.0000] <AryehGregor>
It took me like two weeks to get approved to be a public-html member.

[11:06:02.0000] <Philip`>
(I guess it needs human approval or something)

[11:08:00.0000] <mikekelly>
:(

[11:09:00.0000] <mikekelly>
what's the difference between html-public and the whatwg list?

[11:09:01.0000] <Philip`>
The whatwg list is older, and has more members, and anyone can subscribe

[11:10:00.0000] <TabAtkins>
whatwg was original.  htmlwg was commandered when the w3c took html5 in.

[11:11:00.0000] <Philip`>
public-html is the W3C list, and only HTML WG members can subscribe, and it's the appropriate place for W3C-related discussions (like the W3C Issue Tracker and the W3C Chairs)

[11:13:00.0000] <Philip`>
mikekelly: Oh, it's on the list now

[11:14:00.0000] <othermaciej>
the HTML WG was actually created before the W3C decided to adopt HTML5 as the spec the HTML WG would be working on

[11:14:01.0000] <othermaciej>
though adopting HTML5 was one of our few actual Working Group decisions

[11:16:00.0000] <Philip`>
I remember it seeming totally obvious that the HTML WG was created for the purpose of adopting HTML5, so the "decision" was a formality and never really in question

[11:21:00.0000] <cardona507>
what is the browser support for <audio> ? I don't see the controls in firefox and I see the controls but can't get it to play back in safari

[11:21:01.0000] <AryehGregor>
You need to do <audio controls>, are you doing that?

[11:21:02.0000] <AryehGregor>
What version of Firefox, and what format of audio are you using?

[11:22:00.0000] <mikekelly>
ah nice one

[11:23:00.0000] <mikekelly>
maybe if we have the ability to specify conneg controls for hyerlinks Ian won't be quite so confused about what a resource is

[11:23:01.0000] <cardona507>
aryehgregor - I have <audio src="grace.mp3" controls=""></audio> and I am using firefox 3.5.3 and safari 4 - 

[11:24:00.0000] <AryehGregor>
Firefox and Opera don't support any patent-encumbered audio formats, including MP3.  You have to use Ogg Vorbis for them.

[11:24:01.0000] <AryehGregor>
Safari should support whatever codecs are installed, AFAIK.

[11:24:02.0000] <AryehGregor>
Ugh, where's a non-retarded <audio> tutorial?

[11:24:03.0000] <mikekelly>
is that like some hippt protest by them or is there a practical reason for that?

[11:24:04.0000] <mikekelly>
hippy^

[11:25:00.0000] <Philip`>
mikekelly: The reason is not having to pay licensing fees and not getting sued

[11:25:01.0000] <mikekelly>
hippy.

[11:25:02.0000] <mikekelly>
:D

[11:25:03.0000] <Philip`>
and being portable across all platforms

[11:26:00.0000] <mikekelly>
I know, I'm kidding I'm all for open standards

[11:26:01.0000] <AryehGregor>
It's a principled stand, it's not about licensing fees.

[11:26:02.0000] <AryehGregor>
Mozilla and Opera could get reasonable licensing fees if they wanted them.

[11:27:00.0000] <AryehGregor>
The various consortia involved aren't stupid, they want the exposure.

[11:27:01.0000] <mikekelly>
dork fight!

[11:27:02.0000] <Philip`>
AryehGregor: What is the principle, if it's not about no-fee usage?

[11:28:00.0000] <mikekelly>
I agree with athat principal - those formats should be public domain

[11:28:01.0000] <AryehGregor>
Well, you made it sound like they don't want to have pay licensing fees, personally.

[11:28:02.0000] <AryehGregor>
They don't want anyone to have to pay licensing fees anywhere on the web.

[11:28:03.0000] <AryehGregor>
*They* could pay them if they wanted, I'm sure.

[11:28:04.0000] <mikekelly>
we shouldn't pander to crusty dinosaurish nonsense any more

[11:28:05.0000] <mikekelly>
we don't need to

[11:28:06.0000] <Philip`>
AryehGregor: Ah, I think I agree with you

[11:29:00.0000] <mikekelly>
yeah good for them :)

[11:29:01.0000] <mikekelly>
fight the powa!

[11:30:00.0000] <mikekelly>
what's the best ipod alternative that plays all the stinky hippy formats?

[11:31:00.0000] <Philip`>
mikekelly: Just connect some speakers to a laptop

[11:31:01.0000] <mikekelly>
yeah it's a toss up between that and a boombox

[11:31:02.0000] <Philip`>
Works fine as long as you don't want to do anything crazy like walking outside

[11:32:00.0000] <AryehGregor>
You could use one of the ones with full-fledged Linux, like the N900 or something, I guess.

[11:32:01.0000] <TabAtkins>
Worked great for me while I was doing work on my house.  Could compete with the construction works using actual radios next door.

[11:32:02.0000] <Philip`>
You could memorise all the songs and then hum them

[11:33:00.0000] <mikekelly>
yeah I do that anyway

[11:33:01.0000] <mikekelly>
quite hard to hum my type of music though

[12:02:00.0000] <TabAtkins>
AryehGregor: I promoted your <a onlyreplace> to a top-level post with more commentary.

[12:02:01.0000] <AryehGregor>
It was already promoted to a top-level post within like the last day, but oh well.

[12:07:00.0000] <TabAtkins>
Nah, your top-level post was about several things, and only mentioned <a onlyreplace> in an offhand manner.  I think it deserves more attention than that.

[12:09:00.0000] <daedb>
TabAtkins: which post is that?

[12:10:00.0000] <TabAtkins>
Something with "<a onlyreplace>" in the subject.  On the whatwg list.

[12:11:00.0000] <TabAtkins>
Man, *every* thread started by a google employee gets itself flagged as spam by gmail due to possible spoofing.  then I'm all confused by the second post arriving in my inbox and talking about stuff that I can't see.

[12:13:00.0000] <Philip`>
How is <a onlyreplace> better than <iframe seamless> and <a target>?

[12:13:01.0000] <daedb>
ah, now I found it :)

[12:13:02.0000] <AryehGregor>
Philip`, it updates URLs, for one thing.

[12:14:00.0000] <AryehGregor>
So bookmarking actually works.

[12:14:01.0000] <AryehGregor>
It also keeps everything in one page, so more natural to use.

[12:14:02.0000] <Philip`>
AryehGregor: It seems like bookmarking usually wouldn't work, because you'll be viewing some complex combination of browsing history and it couldn't be re-retrived by a single URL

[12:15:00.0000] <AryehGregor>
Philip`, it could be used that way, but that's not the idea.  The idea is you take a normal set of static pages and just add in onlyreplace where you know the next page only has a few parts significantly different.

[12:16:00.0000] <AryehGregor>
So it works well with bookmarking then.  iframes can never work well with bookmarking, AFAICT, unless maybe you hook all links with JS and use the history push thing.

[12:16:01.0000] <TabAtkins>
Philip`: it also doesn't require architecting your page into a series of snippets that are linked from an iframe.

[12:16:02.0000] <Philip`>
AryehGregor: If it's solely intended as an optimisation, it seems better for browsers to focus on optimising page load times, rather than forcing authors to do something weird and fragile

[12:16:03.0000] <AryehGregor>
I'm not the one enthusiastically advocating it, don't look at me.  :)

[12:17:00.0000] <AryehGregor>
On the other hand, I don't see what optimizations will permit pages to be loaded without at least flickering.

[12:17:01.0000] <TabAtkins>
Philip`: As far as I know, there is *no* way for browsers to optimize stuff like js library load/execution time sufficiently, which is why proposals like GlobalScript exist.

[12:17:02.0000] <AryehGregor>
The browser can't assume that the new page bears any resemblance to the old, so it has to render it from scratch . . . hmm.  Maybe not.

[12:17:03.0000] <TabAtkins>
(Which this solves.)

[12:17:04.0000] <AryehGregor>
It could strategically delay things, but not very effectively without messing up progressive rendering.

[12:17:05.0000] <Philip`>
AryehGregor: They'd just need to delay rendering the page until enough of it has loaded

[12:18:00.0000] <AryehGregor>
MediaWiki has sidebars at the bottom of the HTML source.  You'd have to delay until the whole page was loaded.

[12:18:01.0000] <Philip`>
which they try to do already, and if they loaded pages faster then they'd be more likely to have enough of it loaded before first rendering

[12:18:02.0000] <AryehGregor>
(having sidebars at the bottom of the source is good practice for good fallback to non-CSS UAs, in theory)

[12:18:03.0000] <Philip`>
(Opera even has a preference for how many seconds to wait before redrawing a newly-loaded page)

[12:18:04.0000] <AryehGregor>
I agree that this technique seems dubious as an optimization effort, but the fact is, lots of places go to a lot of trouble to do something even more fragile and much harder to do using AJAX.

[12:19:00.0000] <AryehGregor>
For the same effect, I mean.

[12:19:01.0000] <Philip`>
When you're doing it with AJAX, you get the benefit that you're only transmitting the content that's needed, and not tens of kilobytes of irrelevant unchanging page content

[12:20:00.0000] <Philip`>
(with the server-side delays needed to compute all that content before transmitting it)

[12:20:01.0000] <TabAtkins>
In what I imagine is the typical use-case, you're mainly replacing content, so the only irrelevant content is the relatively small (in comparison) template.

[12:20:02.0000] <AryehGregor>
Also, this is what SDCH is for, in theory.

[12:21:00.0000] <Philip`>
How would <script> and document.write() interact with onlyreplace?

[12:21:01.0000] <AryehGregor>
Same as if they had been inserted by script, presumably.

[12:21:02.0000] <Philip`>
(Would you execute all scripts? no scripts? only scripts in the elements that are being replaced? what if those elements are written by scripts?)

[12:21:03.0000] <TabAtkins>
In terms of the requested page having <script>s and document.write()?

[12:21:04.0000] <TabAtkins>
I'd execute no scripts.

[12:22:00.0000] <AryehGregor>
The proposal doesn't suggest anything that doesn't have a pretty clear mapping to JS already.

[12:22:01.0000] <TabAtkins>
The existing page can hook the links and execute something equivalent itself.

[12:22:02.0000] <Philip`>
Wouldn't people want to e.g. re-execute their Google Ad scripts on each new page, so it shows ads relevant to the content?

[12:22:03.0000] <AryehGregor>
I wouldn't add special handling for script.

[12:22:04.0000] <AryehGregor>
Just let it do whatever it normally does if you insert it in the DOM.

[12:22:05.0000] <AryehGregor>
Which I guess is execute.

[12:23:00.0000] <AryehGregor>
You can always just not include any <script>s if you don't like that.

[12:23:01.0000] <TabAtkins>
Philip`: I think there's a way to reload Google Ads anyway?

[12:23:02.0000] <TabAtkins>
Aryeh: Executing all scripts, though, kills a lot of the 'optimization'.

[12:23:03.0000] <AryehGregor>
Executing all scripts in the snippet you loaded.

[12:23:04.0000] <AryehGregor>
Which might contain no scripts at all.

[12:23:05.0000] <AryehGregor>
Typically wouldn't, I'd think.

[12:23:06.0000] <TabAtkins>
If some way doesn't currently exist to reload Google Ads, it will once this becomes common.

[12:24:00.0000] <AryehGregor>
Google Ads are JS-based and should be able to reload themselves occasionally if they feel like it, I assume.

[12:24:01.0000] <TabAtkins>
AryehGregor, oh.  Eh, sure.

[12:24:02.0000] <Philip`>
Hooray, my code no longer gives segmentation faults and stack smashing errors

[12:24:03.0000] <AryehGregor>
Nor does mine, because I only write in scripting languages.

[12:25:00.0000] <AryehGregor>
. . . Of course, that's no guarantee for PHP.

[12:25:01.0000] <AryehGregor>
<?php function f() { f(); } f();

[12:25:02.0000] <AryehGregor>
$ echo '<?php function f() { f(); } f();' | php

[12:25:03.0000] <AryehGregor>
Segmentation fault

[12:25:04.0000] <AryehGregor>
Yay PHP!

[12:25:05.0000] <TabAtkins>
Heh.

[12:26:00.0000] <TabAtkins>
Strange that that segfaults rather than throwing with OutOfStack or whatever.

[12:26:01.0000] <Philip`>
I'm trying to write in scripting languages, but the interface between the scripting language and native code is what crashes

[12:26:02.0000] <AryehGregor>
$ echo -e "def f():\n    f()\n\nf()" | python 2>&1 | tail -n1

[12:26:03.0000] <AryehGregor>
RuntimeError: maximum recursion depth exceeded

[12:26:04.0000] <AryehGregor>
TabAtkins, not a bug, according to them.  Duh, a segfault is the only reasonable answer if you hit infinite recursion.

[12:27:00.0000] <TabAtkins>
O...k?

[12:27:01.0000] <AryehGregor>
/me likes how Python helpfully prints the call stack here, which is of course 1000 lines long

[12:28:00.0000] <AryehGregor>
To be fair: $ echo -e "import sys\nsys.setrecursionlimit(1000000000)\ndef f():\n    f()\n\nf()" | python 2>&1

[12:28:01.0000] <AryehGregor>
Segmentation fault

[12:28:02.0000] <AryehGregor>
Python lets you shoot yourself in the foot too, but at least you have to opt in.

[12:29:00.0000] <TabAtkins>
Philip`: How often is page 10s of k when just considering content?  That sort of weight is relatively typical when you include scripts and css and such, but actual html is usually relatively small.

[12:29:01.0000] <TabAtkins>
At least, I think.

[12:29:02.0000] <TabAtkins>
Does C segfault on infinite recursion?

[12:29:03.0000] <AryehGregor>
$ wget -qO- http://www.cnn.com/ | wc -c

[12:29:04.0000] <AryehGregor>
98818

[12:29:05.0000] <TabAtkins>
Both PHP and Python are built on C, so shrug.

[12:29:06.0000] <Philip`>
TabAtkins: The mean size of HTML pages from a few sources (dmoz.org, dotnetdotcom) was about 25KB, if I remember correctly

[12:30:00.0000] <TabAtkins>
All right.  I wonder how much of that is content, and how much is template?

[12:31:00.0000] <TabAtkins>
That'd tell us the inefficiency with respect to a simple AHAH with content chunks.

[12:32:00.0000] <TabAtkins>
AryehGregor: CNN's front page probably isn't a good example, as it's full of tons of stuff.  I'd want to hit an inner page instead.

[12:35:00.0000] <AryehGregor>
TabAtkins, C has no opinion on the matter.  It's platform-dependent.  Typically, yes, the operating system will kill the process if the stack grows too large, for user-mode code, but in principle it doesn't have to.

[12:37:00.0000] <AryehGregor>
On Unix, SIGSEGV can be caught, if you like.

[12:39:00.0000] <AryehGregor>
C is fun.  Assembly is even funner.

[12:39:01.0000] <AryehGregor>
In their own way.

[12:40:00.0000] <TabAtkins>
Hmm, okay.  In my own site, the template is 16kb, while the content for the homepage (representative of most pages) is 17kb total.  Those are all uncompressed numbers.

[12:41:00.0000] <TabAtkins>
I mean, the whole homepage is 17kb.  So that's roughly 1kb of content.

[12:42:00.0000] <TabAtkins>
Now, of course, those 17kb or so are currently being delivered on every pageload, plus jQuery has to be reloaded and scripting applied to a few interface elements.

[12:43:00.0000] <AryehGregor>
The 17 KB would still be loaded in the proposal you like so much.

[12:43:01.0000] <TabAtkins>
So, worst case, I'm still getting a better experience, since the page doesn't ever flicker and jQuery can stay loaded the whole time.

[12:43:02.0000] <AryehGregor>
How long does jQuery take to load?

[12:43:03.0000] <TabAtkins>
AryehGregor: Yup.

[12:43:04.0000] <TabAtkins>
AryehGregor: Dunno!  I'd have to test.

[12:45:00.0000] <TabAtkins>
I suppose to do so I'd alter the jQuery source to record the time before and after the rest of the code was executed?

[12:49:00.0000] <AryehGregor>
Or add <script>s before and after.

[12:50:00.0000] <TabAtkins>
Looks like I'm averaging about 13ms?

[12:51:00.0000] <TabAtkins>
+ however much time it takes to wait for document.ready, and apply stuff to the nav.

[12:54:00.0000] <AryehGregor>
13ms is fairly far below the level of perceptibility.

[12:54:01.0000] <TabAtkins>
I purposely avoid heavier manipulation of the page, to avoid FOUC (the U is for "unscripted", in this case).

[12:54:02.0000] <TabAtkins>
Aryeh: I'm also loading *only* jQuery, not anything like jQuery UI which can get *enormous*.

[12:55:00.0000] <TabAtkins>
And it's not 13ms by itself.  It's 13ms added to the page load time.

[12:55:01.0000] <TabAtkins>
(I think 50ms or so is the general point at which we perceive a delay?)

[12:58:00.0000] <TabAtkins>
Also interesting: applying this to a form submission.

[13:01:00.0000] <TabAtkins>
Point, though, is that currently whatever benefits I can gain from making a single-page site are *far* outweighed by the difficulties of actually *implementing* it correctly right now.  This would put single-page apps in the hands of the average webdev who doesn't know the esoterica of js and accessibility.

[13:02:00.0000] <TabAtkins>
Without costing me a thing, especially if I can activate it just by adding onlyreplace="left-nav bc" to my <base> tag.

[13:03:00.0000] <AryehGregor>
It's not obvious to me that the potential pitfalls and the implementation difficulty would be worth the benefit.

[13:04:00.0000] <TabAtkins>
Then solutions can be built on top of this to allow better optimization, such as the browser specifically requesting only those elements, and the server returning only what's necessary.

[13:04:01.0000] <TabAtkins>
What pitfalls do you see besides the already-mentioned one of authors being stupid and writing subpages that are just content chunks?

[13:05:00.0000] <TabAtkins>
(Re optimizations: that's why I love declarative mechanisms!  When you state what you want, rather than how you want it, you can do a lot of transparent optimization behind the scenes without ever affecting anything visibly.)

[13:51:00.0000] <cying>
how is WHATWG pronounced?

[13:51:01.0000] <cying>
"what working group" ?

[13:52:00.0000] <tantek>
or "what double you gee"

[13:53:00.0000] <cying>
ahhh

[13:54:00.0000] <Hixie>
i pronounce it "whatwuhjee"

[13:55:00.0000] <cying>
Hixie: interesting... wuhjee?

[13:56:00.0000] <tantek>
Hixie, makes sense, like "wuh wuh wuh dot ..."

[13:56:01.0000] <Hixie>
yeah

[13:56:02.0000] <Hixie>
or wuhwuhstyle for www-style

[13:58:00.0000] <gavin>
weird!

[14:11:00.0000] <Hixie>
i wonder whether we should drop the reversed DNS labels

[14:11:01.0000] <Hixie>
from microdata

[14:12:00.0000] <AryehGregor>
"www" is remarkable, as an abbreviation that takes like twice as long to say as the thing it ostensibly abbreviates.

[14:12:01.0000] <Hixie>
it's an abbreviation for writing

[14:12:02.0000] <Hixie>
not talking

[14:13:00.0000] <Philip`>
AryehGregor: How do you get "twice"?

[14:13:01.0000] <Philip`>
given that "w" is three syllables

[14:17:00.0000] <AryehGregor>
"like"

[14:17:01.0000] <AryehGregor>
Closer to three times, it's true.

[14:17:02.0000] <Philip`>
Two is not much like three

[14:20:00.0000] <TabAtkins>
I pronounce WHATWG as "what"+"wig".

[14:20:01.0000] <TabAtkins>
And when pronouncing "www" I say "dub dub dub".

[14:21:00.0000] <TabAtkins>
(A shortening of "dubya", the texan way to pronounce that letter.)

[14:21:01.0000] <Philip`>
/me pronounces WHATWG as "what"+mumble, because he never actually says it out loud and in his own brain he doesn't need to pronounce the entire word to know what he's thinking of

[14:22:00.0000] <TabAtkins>
I pronounce all of my acronyms as words.  HTML is "heh teh mul", CSS is "sess es", etc.

[14:26:00.0000] <Philip`>
Hixie: The advantages that I remember (slightly shorter since you don't have to write "http://", and can't be accidentally deferenced) don't really seem compelling compared to the disadvantages (more complex to explain, more unnecessary choices when designing vocabularies, ambiguous ownership of identifiers, can't be intentionally dereferenced, ugly)

[14:26:01.0000] <Philip`>
s/deferenced/dereferenced/

[14:26:02.0000] <Philip`>
/me wonders if he's forgetting advantages

[14:27:00.0000] <Philip`>
TabAtkins: You're weird

[14:27:01.0000] <Philip`>
I thought everyone said "HTML" as four letters :-)

[14:28:00.0000] <TabAtkins>
Philip`: I save a syllable, and the leftover syllables are easier to say quickly too.

[14:28:01.0000] <Philip`>
TabAtkins: If the primary requirement is saving syllables, you could just grunt

[14:29:00.0000] <TabAtkins>
But then other people don't have a chance of understanding me.  Plus my language organ isn't trained to recognize or produce meaningfully grunting beyond the existing near-primal sounds we all make.

[14:30:00.0000] <TabAtkins>
If I set an element's innerHTML with a chunk of code that includes a <script> block, does the script run?

[14:32:00.0000] <Hixie>
Philip`: yeah that was my conclusion too

[14:32:01.0000] <gsnedders>
TabAtkins: yes

[14:32:02.0000] <Hixie>
they're a bitch to remove from the spec though

[14:32:03.0000] <Hixie>
sheesh

[14:33:00.0000] <TabAtkins>
gsnedders: I thought so.  Thanks.  I don't muck about with innerHTML often.

[14:33:01.0000] <TabAtkins>
(At least not manually - I think jQuery uses it a lot.)

[14:35:00.0000] <Hixie>
didn't shelley say she rejoined the group?

[14:35:01.0000] <Hixie>
i don't see her on the list of members

[14:35:02.0000] <TabAtkins>
She did, yes.

[14:35:03.0000] <gsnedders>
Maybe she left.

[14:41:00.0000] <Philip`>
/me attempts to confuse himself horribly by using versioned Mercurial queues

[14:42:00.0000] <Philip`>
so now I've got a remote repository, a local repository, and a local patch repository, and I'm sure I'll forget what changes I've got where

[14:44:00.0000] <TabAtkins>
This is a bad idea, Philip`.

[14:44:01.0000] <TabAtkins>
/me just keeps all his repos always updated to the same level.


2009-10-17
[17:05:00.0000] <TabAtkins>
Dammit, <fieldset>.  Quit having special arcane rendering rules!

[17:05:01.0000] <TabAtkins>
/me will be very happy when <legend> and <fieldset> stop being magic.

[17:06:00.0000] <cying>
http://www.satine.org/archives/2009/10/16/wuh-working-group/

[17:07:00.0000] <TabAtkins>
Hehe.

[17:20:00.0000] <Dashiva>
I agree with TabAtkins

[17:20:01.0000] <Dashiva>
Acronyms are much better when pronounced as words

[17:22:00.0000] <TabAtkins>
 /high-five

[18:35:00.0000] <ilhan>
Is this allowed in datime? 2009-06-03T-07:00   meaning time zone is "-7"?

[18:38:00.0000] <Lachy>
ilhan, no. You need at least an hour and minute for the time

[18:39:00.0000] <Lachy>
so you could do 2009-06-03T00:00-07:00

[18:39:01.0000] <ilhan>
ok, thanks a lot

[21:51:00.0000] <TabAtkins>
All right, McEvoy is on ignore now.  >_<

[23:35:00.0000] <Hixie>
does this play for anyone in the uk? http://www.channel4.com/programmes/bremner-bird-and-fortune/4od#2973181

[00:34:00.0000] <annevk42>
w3.org down?

[01:16:00.0000] <jgraham>
annevk42: WFM now

[01:16:01.0000] <annevk42>
yup

[01:16:02.0000] <annevk42>
ta

[02:54:00.0000] <annevk42>
/me is in the train to Stockholm

[03:33:00.0000] <Hixie>
really? <textarea> doesn't need magic?

[03:33:01.0000] <Hixie>
/me is skeptical

[03:49:00.0000] <zcorpan_>
i guess we should research all the (r)cdata elements using the current parsing rules and look at pages that contain </foo where foo is the element's tag name

[04:03:00.0000] <gsnedders>
/me finally emails jgraham 

[04:16:00.0000] <gsnedders>
http://code.google.com/p/html5lib/source/detail?r=937a421712e2edc2dbf498040f5ad3d6e13d395b

[04:17:00.0000] <zcorpan_>
the pronunciation discussion makes me think of http://www.youtube.com/watch?v=xqpd7WcBmjM

[05:18:00.0000] <gsnedders>
Down to one test failure in html5lib!

[05:18:01.0000] <Philip`>
Delete the test and then you'll be down to zero!

[05:20:00.0000] <jgraham>
gsnedders: That last checkin totally needs tests

[05:20:01.0000] <jgraham>
I mean apart from the one test we already have

[05:22:00.0000] <gsnedders>
/me finds he's broken it in another way

[05:22:01.0000] <jgraham>
Since the one existing test didn't catch whatever issues previously existed

[05:22:02.0000] <gsnedders>
I've now got the html element always in no namespace instead of always in it.

[05:23:00.0000] <gsnedders>
/me swears that didn't happen when he last ran he test script

[05:23:01.0000] <jgraham>
gsnedders: I don't remember what code there already is, but does it work correctly with things that require you to look for all the elements in certain categories

[05:23:02.0000] <jgraham>
Since those lists use (namespace, name) pairs

[05:24:00.0000] <gsnedders>
/me grumbles at the html element being special cased all over the place

[05:25:00.0000] <jgraham>
(so you have to check that the .nameTuple property always returns the right thing regardless of whether the element is actually in a namespace or not

[05:25:01.0000] <jgraham>
)

[05:27:00.0000] <gsnedders>
/me will get it working today, dammit

[05:29:00.0000] <jgraham>
Totally different question: anybody have any good advice about how to structure a socket-based program that may get multiple incoming messages in a go or multiple outgoing messages wih no incoming message

[05:29:01.0000] <gsnedders>
(That's the I-will-not-lose-against-jgraham's-code statement.)

[05:31:00.0000] <jgraham>
(the problem being that afaik while True: self.socket.recieve(); self.send_queued_messages(); won't ever process the queued messages unless it recieves a message first)

[05:31:01.0000] <jgraham>
(assuming the socket is blocking and so on)

[05:31:02.0000] <Philip`>
jgraham: Use Twisted instead of synchronous sockets?

[05:32:00.0000] <jgraham>
(and I'm not horribly misunderstanding the problem space)

[05:32:01.0000] <jgraham>
(which is possible since I have never written anything more complex than an echoing server with sockets)

[05:32:02.0000] <Philip`>
jgraham: Use 'accept' (with a timeout) to detect whether there's anything to receive, before doing a blocking receive?

[05:33:00.0000] <jgraham>
Philip`: I'm avoiding twisted since this is partially just a learning excercise

[05:33:01.0000] <jgraham>
maybe accept will work

[05:34:00.0000] <jgraham>
/me guesses he could also try using non-blocking sockets and select

[05:34:01.0000] <Philip`>
Oh

[05:34:02.0000] <Philip`>
I meant select, not accept

[05:34:03.0000] <Philip`>
I think

[05:35:00.0000] <Philip`>
Ah, yes, I did mean select

[05:35:01.0000] <Philip`>
You shouldn't need non-blocking sockets, because select will let you detect and avoid the situations that would block

[05:35:02.0000] <jgraham>
True

[05:36:00.0000] <Philip`>
unless I'm wrong

[05:37:00.0000] <Philip`>
But if it's a learning exercise, you ought to learn about Twisted instead of raw sockets :-)

[05:38:00.0000] <jgraham>
Philip`: Doesn't help if the goal is to learn about raw sockets :)

[05:38:01.0000] <jgraham>
(I would also like to learn bout twisted but maybe a different day)

[05:44:00.0000] <mikekelly>
I think there's going to be over-lap between this conneg thread and the resource thread

[05:44:01.0000] <mikekelly>
hopefully the concept of resources/representations is made clearer by the example I gave involving cache invalidation

[05:45:00.0000] <mikekelly>
Hixie: did that help explain the distinction?

[05:46:00.0000] <mikekelly>
and/or the practical benefits of that constraint for intermediaries

[06:59:00.0000] <lazni>
is this an appropriate use of <br>? http://lazny.tang.la/jbo/cukta/jbobaucku/jbobaucku.html

[06:59:01.0000] <lazni>
bible-like sentence numbering

[07:00:00.0000] <webben>
I would suggest span to wrap your sentences rather than line break

[07:01:00.0000] <lazni>
I wrap the sentence separator to easily insert it with a yas snippet, <br><span>.i</span>

[07:01:01.0000] <webben>
if people are supposed to refer to the numbers, I probably wouldn't use CSS.

[07:02:00.0000] <lazni>
so that I can write sentences more or less normally

[07:02:01.0000] <lazni>
good point

[07:02:02.0000] <webben>
i think that's an example of not using good enough authoring tools and letting bad authoring process dictate your deliverable.

[08:33:00.0000] <jgraham>
gsnedders: 18:15

[08:33:01.0000] <gsnedders>
jgraham: When you leave or when you get here?

[08:34:00.0000] <jgraham>
gsnedders: When we pick you up

[08:34:01.0000] <gsnedders>
jgraham: Where I suggested?

[08:34:02.0000] <jgraham>
Where did you suggest?

[08:35:00.0000] <gsnedders>
jgraham: Djurgårdsgatan

[08:36:00.0000] <jgraham>
gsnedders: How about the dorner of there and Barnhemsgatan?

[08:36:01.0000] <jgraham>
*corner

[08:57:00.0000] <gsnedders>
/me adds, as promised, "No, you're just high." to his about page

[09:42:00.0000] <Philip`>
gsnedders: You appear to keep accidentally modifying html5lib without adding tests for the changed behaviour :-)

[09:43:00.0000] <gsnedders>
Philip`: I'm not sure how to get all the tests checking the namespaces on the created nodes

[09:44:00.0000] <Philip`>
gsnedders: Maybe it would be adequate to have just a .py file doing some custom tests, rather than going through the testdata/*.dat files

[09:45:00.0000] <gsnedders>
Philip`: The reason why I made another commit was because my prior one had broken stuff with namespacing both enabled and disabled, this seems to work

[10:12:00.0000] <mikekelly>
why do I get the impression this Smylers guy isn't actually interested in considering any of the points I make

[10:12:01.0000] <mikekelly>
he keeps asking for stuff I've already provided

[10:20:00.0000] <webben>
mikekelly: Stuff like what?

[11:07:00.0000] <eighty4>
would it be semanticly ok to use both a <header> for the head of the page and a <header> in every <article>, containing meta info about a blog post

[11:56:00.0000] <webben>
eighty4: if the "meta info" constitutes a "group of introductory or navigational aids", then yes.

[11:58:00.0000] <eighty4>
webben: h* for the post, date, comment count and permalink to the post.

[11:58:01.0000] <webben>
sounds okay to me.

[12:00:00.0000] <eighty4>
that was my thought, but always good to check here :)

[15:47:00.0000] <cardona507>
I am trying to get <video> to work on firefox and my server doesn't support .ogv - I want to change this with an .htaccess file but am having trouble - this is what i have in my .htaccess file: AddType video/ogg .ogv - I am new to .htaccess - can someone help out? I have the .htaccess file in the same directory as the video and index.html

[15:51:00.0000] <cardona507>
/join #web

[16:26:00.0000] <eighty4>
cardona507: sounds more like a apache question

[16:26:01.0000] <cardona507>
eighty4 - I got it working

[16:28:00.0000] <cardona507>
is there a solution to getting html5 pages that have the chrome frame meta tag to validate?

[16:28:01.0000] <eighty4>
nice

[16:29:00.0000] <cardona507>
I was told to serve up the file with this mime type application/chromeframe - but that makes firefox want to download the file


2009-10-18
[17:00:00.0000] <gsnedders>
cardona507: No, there is no solution.

[17:01:00.0000] <cardona507>
too bad

[17:01:01.0000] <cardona507>
thanks gsnedders

[17:01:02.0000] <gsnedders>
(on the basis that vendor-specific stuff is bad)

[17:01:03.0000] <cardona507>
i understand

[17:02:00.0000] <eighty4>
hey, up late gsnedders :)

[17:02:01.0000] <gsnedders>
eighty4: Just got home :)

[17:02:02.0000] <gsnedders>
eighty4: Been over in Lambohov (sp?)

[17:03:00.0000] <eighty4>
so you can answer a question. Is it more proper to wrap a blogposts <p>s with a div or a section?

[17:03:01.0000] <eighty4>
sp?

[17:03:02.0000] <gsnedders>
spelling

[17:04:00.0000] <eighty4>
Lambohov is correct, I think

[17:11:00.0000] <eighty4>
gsnedders: and what happend at lambo?

[17:12:00.0000] <gsnedders>
eighty4: Just out at colleague's flat

[17:14:00.0000] <eighty4>
nice

[17:14:01.0000] <eighty4>
oh, there's a html5 watcher at twitter. My "HTML5 is missing a <comments> tag got a replay :P

[17:18:00.0000] <gsnedders>
eighty4: Quite a few of us watch that, to varying degrees of attentiveness

[17:19:00.0000] <eighty4>
:)

[17:20:00.0000] <Dashiva>
Hypothesis: The main use case for google alerts is Hixie

[17:25:00.0000] <gsnedders>
Sounds plausible.

[17:29:00.0000] <gsnedders>
eighty4: I used to follow it until it got to the point where it was impossible to keep up with

[17:29:01.0000] <gsnedders>
eighty4: When it was one tweet every 15 minutes or so, I could cope. Now it's closer to one per minute.

[17:31:00.0000] <gsnedders>
eighty4: Anyhow, what would the use of <comments> be?

[18:31:00.0000] <cardona507>
is it possible to have the <canvas> width be fluid?

[23:25:00.0000] <Hixie>
jgraham: w3c copy is hanging again if you're around and care to investigate

[23:31:00.0000] <Hixie>
ok every time i break down and complain, it starts working again

[00:04:00.0000] <hamaji>
Hixie: are there any scripts which generated ahem font?

[00:04:01.0000] <hamaji>
Hixie: i found this, but it's 500 http://hixie.ch/resources/fonts/iw-generator.py

[00:46:00.0000] <eighty4>
gsnedders: the use of it would be in my blog theme, so that I wouldn't have to use a list for comments :D

[01:01:00.0000] <Hixie>
hamaji: ahem font was made by hand

[01:01:01.0000] <Hixie>
in a font editor

[01:03:00.0000] <eighty4>
Hixie: you're saying not all fonts are made by hand?

[01:04:00.0000] <Hixie>
eighty4: some of the test fonts i use are created by a script, as hamaji pointed out

[01:05:00.0000] <eighty4>
Hixie: you're no fun :/

[01:15:00.0000] <Adrian__>
Hixie: Hello! Im pretty new to all this web protocol stuff and until recently I had no idea that there was so much politic behind the internet! im hoping you can tell me a little about HTML5 and more specifically WebSocket

[01:16:00.0000] <Hixie>
anything in particular? 

[01:16:01.0000] <Adrian__>
well just the jist of it and a point in the right direction so i can learn more

[01:16:02.0000] <Hixie>
and hi, welcome :-)

[01:17:00.0000] <Adrian__>
i worked with orbited, porting tcpsocket to flash

[01:17:01.0000] <Hixie>
best place to get up to speed is probably the FAQ: http://wiki.whatwg.org/wiki/FAQ

[01:17:02.0000] <Hixie>
for the overall view

[01:17:03.0000] <Hixie>
if you have any specific questions, though, i'd be more than happy to answer them

[01:18:00.0000] <Adrian__>
yah sure thanks

[01:18:01.0000] <Adrian__>
what time are you usually on here?

[01:19:00.0000] <Hixie>
anytime except about 6am to 11am US west coast time

[01:21:00.0000] <Hixie>
(my waking hours vary a lot)

[01:32:00.0000] <Adrian__>
Hixie: Do you know how far along WebSocket is?

[01:32:01.0000] <Adrian__>
could i write a client right now?

[01:32:02.0000] <Adrian__>
are there any demos out there you know of?

[01:32:03.0000] <Hixie>
a craw lient, or a web page using the api?

[01:32:04.0000] <Hixie>
a raw client, rather

[01:33:00.0000] <Hixie>
there's work going on for safari, chrome, and firefox, i think

[01:33:01.0000] <Hixie>
they're probably waiting to see what happens with the spec

[01:34:00.0000] <Hixie>
and there's a server implementation for apache or something, iirc

[01:34:01.0000] <Hixie>
other than that, nothing much yet

[01:34:02.0000] <Adrian__>
so i couldnt get anything to work in a browser right now?

[01:34:03.0000] <Hixie>
the spec is pretty stable though, i think

[01:34:04.0000] <Hixie>
not any shipping browsers, no

[01:34:05.0000] <hamaji>
Hixie: i see... thanks!

[01:35:00.0000] <hamaji>
Adrian__: i tried a flash implementation of websockets and it worked nicely http://github.com/gimite/web-socket-js

[01:36:00.0000] <Adrian__>
so i could put a flash app on  a web page?

[01:40:00.0000] <hamaji>
this library provides standard js api of websocket, but it's implemented by flash. so, though you can write js to use websocket, but you need to put WebSocketMain.swf in your server. i think it's good as a preview of websocket for now

[01:50:00.0000] <Adrian__>
hamaji: does ruby work on windows?

[01:54:00.0000] <hamaji>
Adrian__: sometimes i use ruby with cygwin, and there are non-cywin implementations as well

[01:55:00.0000] <hamaji>
Adrian__: also, if you prefer python, there is a websocket server in python http://code.google.com/p/pywebsocket/

[01:55:01.0000] <Adrian__>
heh yah ty

[01:55:02.0000] <Adrian__>
thatlll probably be easier

[03:30:00.0000] <MikeSmith>
Hixie: I'm looking at r4152.. "remove reversed DNS label support from microdata".. wondering why you mad that change

[03:32:00.0000] <Hixie>
http://lists.w3.org/Archives/Public/public-html/2009Oct/0536.html

[03:34:00.0000] <MikeSmith>
Hixie: "if aesthetics are important then authors will presumably use itemtype and short property names" is the actual rationale I guess

[03:34:01.0000] <Hixie>
people didn't seem to have trouble with URLs much

[03:35:00.0000] <MikeSmith>
yeah

[03:35:01.0000] <Hixie>
(contrary to what i expected)

[03:36:00.0000] <MikeSmith>
given that in the vast majority of use cases (regardless of the syntax), this stuff is going to be generated by some kind of CMS anyway

[04:17:00.0000] <gavin>
http://gavinsharp.com/irc/whatwg.html

[04:17:01.0000] <gavin>
just added #whatwg to my daily stats cronjob

[04:17:02.0000] <Hixie>
oh dear

[04:17:03.0000] <gavin>
should have thought of it sooner!

[04:18:00.0000] <Hixie>
hey now that's not fair, i look like i've chatted a lot, but people like anne have their stats split across a bazillion nicks

[04:18:01.0000] <gavin>
I can fix that

[04:19:00.0000] <Hixie>
lol, krijnh got the :-) bonus and krijn got the sadness bonus

[04:20:00.0000] <Hixie>
words #1 #3 and #6 were would, should, and could respectively

[04:21:00.0000] <Hixie>
gavin: what time zone is the chart at the top?

[04:22:00.0000] <Hixie>
that's actually useful data

[04:22:01.0000] <gavin>
"time in Toronto"

[04:22:02.0000] <gavin>
EDT or EST, depending

[04:22:03.0000] <Hixie>
-5?

[04:22:04.0000] <gavin>
yeah

[04:22:05.0000] <gavin>
I guess it isn't consistent

[04:23:00.0000] <Hixie>
so we have peaks at around midnight and noon UTC? or 10am and 10pm, i can't quite work out which way to send those numbers

[04:24:00.0000] <gavin>
10&10

[04:24:01.0000] <Hixie>
so 3am on your chart is my midnight, roughly

[04:24:02.0000] <Hixie>
ok

[04:24:03.0000] <gavin>
yeah

[04:24:04.0000] <Hixie>
so 8pm to midnight is when the channel has least traffic, interesting

[04:25:00.0000] <Hixie>
ok

[04:26:00.0000] <jgraham>
I'm slightly surprised that zcorpan has said more than me

[04:27:00.0000] <Hixie>
jgraham: btw, the status annotator has been very flaky ever since they changed their site

[04:27:01.0000] <Hixie>
i have to give two or three tries each time i regen the spec

[04:28:00.0000] <jgraham>
Hixie: Oh. I wonder if they hve made their site very slow

[04:28:01.0000] <jgraham>
Or at least slower than it was before

[04:29:00.0000] <jgraham>
Hixie: you should encourage mjs to fix the problem by resolving all the issues :)

[04:30:00.0000] <jgraham>
I guess I should look seriously at caching some of the data

[04:32:00.0000] <jgraham>
(well in addition to the HTTP caching which doesn't seem to be having any effect)

[04:37:00.0000] <gavin>
I just regenerated the stats with some aliases added

[04:37:01.0000] <gavin>
annevk made it to second place, and zcorpan's ever further ahead of jgraham now :)

[04:38:00.0000] <Hixie>
:-)

[04:54:00.0000] <mikekelly>
caching?

[04:55:00.0000] <mikekelly>
I hope you can provide some data as evidence that caching is a good idea

[04:56:00.0000] <mikekelly>
this is science

[06:21:00.0000] <Lachy>
I'm a little disappointed I only got 5th place in the rankings :-(

[06:21:01.0000] <Lachy>
oh

[06:21:02.0000] <Lachy>
well,

[06:21:03.0000] <Lachy>
I

[06:21:04.0000] <Lachy>
can

[06:21:05.0000] <Lachy>
fix

[06:21:06.0000] <Lachy>
that

[06:21:07.0000] <Lachy>
:-)

[06:26:00.0000] <erlehmann>
Lachy, which rankings?

[06:27:00.0000] <erlehmann>
ah wait

[06:27:01.0000] <erlehmann>
i got it

[06:27:02.0000] <erlehmann>
brace for

[06:27:03.0000] <erlehmann>
IMPACT :D

[06:41:00.0000] <gsnedders>
/me is surprised at some of the people he's above there

[07:05:00.0000] <gsnedders>
/me wonders how long he needs to leave to change between two Schengen flights at Schiphol…

[08:05:00.0000] <Lachy>
gsnedders, it depends if you need to collect luggage and re-check it in, or go through a passport check between flights.

[08:07:00.0000] <Lachy>
if you're switching from an international flight to a domestic flight, then I believe you would have to at least pick up luggage and re-check it in

[08:33:00.0000] <Philip`>
/me clearly spends too much time on IRC :-(

[08:34:00.0000] <AryehGregor>
"this 1049-day reporting period"

[08:34:01.0000] <AryehGregor>
And I'm still in 27th place, despite having used this nick for only like . . . a month?

[08:37:00.0000] <Philip`>
/me is apparently "Hixie's faithful follower"

[08:41:00.0000] <Philip`>
Could I say "HTML5 really seems something which people should think would" and take over the entire "Most used words / Last Used by" column?

[08:46:00.0000] <AryehGregor>
/me always wants to stab someone when he sees ">From" at the beginning of a line in an e-mail, and it's not a quote.

[08:46:01.0000] <AryehGregor>
THIS IS NOT 1995.  THERE ARE BETTER STORAGE FORMATS THAN MBOX AVAILABLE.

[08:47:00.0000] <AryehGregor>
Including trivial variants like mboxrd that don't corrupt mail.

[08:52:00.0000] <gsnedders>
Lachy: If your checked in through, and by "Schengen" I was meaning the Schengen Agreement, I treaty which led to the removal of border controls.

[08:54:00.0000] <Lachy>
where are you travelling from and to?

[08:57:00.0000] <Lachy>
anyway, if you're sure you won't need to collect luggage, then you should only need to leave an hour, but that also assumes there are no unexpected delays for your first flight

[09:08:00.0000] <gsnedders>
Lachy: Linköping to Lyon

[09:08:01.0000] <gsnedders>
Lachy: I have a choice of 40 mins to change planes, or 5 hours.

[10:13:00.0000] <Lachy>
gsnedders, ask the airline customer service if 40 min is enough.

[10:22:00.0000] <AryehGregor>
"My main concern with namespaces is that people would use them."

[11:11:00.0000] <TabAtkins>
Hah, I love the IRC stats at http://gavinsharp.com/irc/whatwg.html

[11:12:00.0000] <TabAtkins>
Somehow, despite it measuring over a 3-year period and me only really joining the room a month or two ago, I'm already the 17th most prolific chatter.

[11:14:00.0000] <TabAtkins>
Had it been generated like the previous week, I'd definitely be #16, since mookid is just *barely* ahead of me.

[12:07:00.0000] <annevk42>
gsnedders, fourty minutes is plenty

[12:07:01.0000] <annevk42>
if it's the same airline company anyway

[12:42:00.0000] <gsnedders>
annevk42: k, thx

[12:57:00.0000] <gsnedders>
What effect does the frameset-ok flag have?

[12:59:00.0000] <Philip`>
If it's not set, framesets might not be ok

[12:59:01.0000] <Philip`>
/me is just guessing here

[13:02:00.0000] <gsnedders>
OK, so (ignoring fragment case) frameset is ignored in body if it is false, and otherwise the body element is removed from its parent and from the stack and a frameset element is added

[13:04:00.0000] <gsnedders>
How do I make sure I get the errors in an html5lib test right?

[13:05:00.0000] <Philip`>
I think you can only test the number of errors, not their positions or values

[13:05:01.0000] <Philip`>
using the normal tree-construction test format

[13:05:02.0000] <gsnedders>
So the strings themselves are meaningless?

[13:06:00.0000] <Philip`>
Yes, since the tests are meant to be portable between implementations and error strings are not portable

[13:06:01.0000] <Philip`>
as far as I'm aware

[13:06:02.0000] <gsnedders>
As far as I can tell, the Python impl doesn't even check the number

[13:07:00.0000] <Philip`>
self.assertEquals(len(p.errors), len(errors), errorMsg2.encode("utf-8"))

[13:07:01.0000] <Philip`>
Isn't that it?

[13:08:00.0000] <gsnedders>
I just added five more lines of errors to one test and it still passes.

[13:09:00.0000] <Philip`>
#Run the parse error checks

[13:09:01.0000] <Philip`>
checkParseErrors = False

[13:09:02.0000] <gsnedders>
Oh great.

[13:10:00.0000] <gsnedders>
Wow. Absolutely tons of failures with that true.

[13:11:00.0000] <gsnedders>
Philip`: errorMsg2 seems to try and contain the expected strings

[13:12:00.0000] <Philip`>
http://code.google.com/p/html5lib/source/diff?spec=svn84ba7e9cfe61830f13ef4f354b24397332386a39&r=84ba7e9cfe61830f13ef4f354b24397332386a39&format=side&path=/python/tests/test_parser.py

[13:13:00.0000] <Philip`>
It defaults to False, and the -p command-line option sets it to False

[13:13:01.0000] <Philip`>
Something's definitely dodgy there

[13:13:02.0000] <Philip`>
I don't see why it shouldn't always be enabled

[13:13:03.0000] <gsnedders>
I think it always should

[13:13:04.0000] <Philip`>
gsnedders: It prints the strings for debugging, it doesn't compare the strings

[13:13:05.0000] <gsnedders>
A lot more tests need to pass if it is enabled though

[13:14:00.0000] <Philip`>
Removing test assertions is not the bestest way to get high test pass rates

[13:14:01.0000] <gsnedders>
Indeed.

[13:16:00.0000] <jgraham>
/me has the alternative theory that we should stop reporting parse errors

[13:17:00.0000] <jgraham>
Or loging them rather

[13:17:01.0000] <Philip`>
Why?

[13:17:02.0000] <gsnedders>
jgraham: Until we drop support, it should work.

[13:18:00.0000] <jgraham>
Roughly no one cares, it adds complexity and probably a small but noticble amount of performance

[13:18:01.0000] <gsnedders>
247 test failures with them enabled, 0 with them disabled.

[13:18:02.0000] <jgraham>
Especially since it constrains the implementation

[13:18:03.0000] <jgraham>
(so it prevents useful refactorings)

[13:19:00.0000] <Philip`>
It seems like it would help detect subtle bugs where the wrong code-path is executed but it gives the same tree output (but different error messages)

[13:19:01.0000] <Philip`>
but maybe that's untrue

[13:19:02.0000] <Hixie>
shelley is a wg member again!

[13:19:03.0000] <jgraham>
Philip`: Since no one looks at the error messages anyway I doubt it helps

[13:19:04.0000] <Philip`>
s/different error/different number of error/

[13:20:00.0000] <jgraham>
I believe to date we have had exactly 0 bug reports about the error reporting

[13:21:00.0000] <gsnedders>
/me makes yet another commit

[13:21:01.0000] <Philip`>
gsnedders: Don't commit so much, or hg will run out of SHA1s :-(

[13:21:02.0000] <jgraham>
And I don't recall it finding significant bugs other than just "forgot to report an error"

[13:23:00.0000] <jgraham>
(In case you are wondering I would bet that I switched off the parse error reporting when adding the namespace support since I wanted to fix important bugs before trivial pedantic things)

[13:24:00.0000] <jgraham>
(but I guess you can check if you like)

[14:04:00.0000] <GPHemsley>
Am I the only one who sees the importance of exposing and processing the contents of @lang?

[14:33:00.0000] <Philip`>
/me wonders if getElementsByTagNameNS("http://example.org/widgets/", "*") would really provide any practical performance benefits over querySelector("widget-foo, widget-bar, widget-baz")

[14:53:00.0000] <Hixie>
/me looks cross-eyed at public-html

[14:53:01.0000] <Hixie>
are we really talking about making HTML say that Microsoft can invent tags at random?

[14:53:02.0000] <Hixie>
what happened to people being upset about <marquee> and <blink>?

[14:54:00.0000] <AryehGregor>
Well, the spec already sort of says that for the XML serialization, doesn't it?  You're allowed to use other namespaces there, IIRC.

[14:54:01.0000] <jgraham>
Apparently if it had been http://microsoft.com/happy/shiny/namespaces/holding/hands::marquee then everything would have been hunky-dory

[14:54:02.0000] <Hixie>
AryehGregor: it only allows elements that are allowed by an appropriate spec

[14:58:00.0000] <AryehGregor>
Hixie, so why is everyone saying stuff like "Non-colon-based stuff would be better" instead of "We don't want more <marquee>s"?

[14:59:00.0000] <TabAtkins>
Because nobody would use <com_microsoft_marquee> anyway, unless it was *really* useful, in which case everyone really should adopt it.  If you have to allow bad things, making them hard to is good.

[14:59:01.0000] <Philip`>
AryehGregor: Because non-colon-based stuff would be better

[14:59:02.0000] <Philip`>
since it wouldn't pollute the language with colons and associated complexities and weirdnesses and incompatibilities

[15:00:00.0000] <Philip`>
(Being better doesn't mean it's good, though)

[15:00:01.0000] <Philip`>
(but if someone's going to do bad things anyway, it seems sensible to limit the damage the cause)

[15:00:02.0000] <jgraham>
Non colon based stuff would be better. But not making it easy to invent single-implemtation features with no clear path for standarisation would be best

[15:00:03.0000] <Philip`>
s/the cause/they cause/

[15:02:00.0000] <jgraham>
(because, as has been previously pointed you can't really have <com_microsoft_wordart> and a w3c-endorsed <wordart> on the same page so there is no way to transition away from the prefixes)

[15:02:01.0000] <jgraham>
(unlike with css properties or DOM functions or similar)

[15:02:02.0000] <TabAtkins>
jgraham: Why can't you have them both on the same page?

[15:03:00.0000] <jgraham>
TabAtkins: Well you can but you can't make them mutually exclusive

[15:03:01.0000] <jgraham>
For the same content

[15:03:02.0000] <jgraham>
(in general)

[15:03:03.0000] <Hixie>
AryehGregor: beats me

[15:03:04.0000] <TabAtkins>
Oh, I see.  Like CSS's ability to put "-moz-foo" and follow it with "foo".

[15:04:00.0000] <jgraham>
TabAtkins: Right

[15:04:01.0000] <TabAtkins>
That's sort of bad anyway, because it just makes me copy the contents of "-moz-foo" into "foo", which won't work if the syntax changes in the official implementation.  Transitioning off of prefixes is always painful.

[15:04:02.0000] <Hixie>
TabAtkins: consider <canvas>, it'd be even more painful with HTML than in CSS

[15:04:03.0000] <jgraham>
I mean with the wordart example it might, possibly, work to do <com_microsoft_wordart><wordart>Village Fete!</></>

[15:04:04.0000] <jgraham>
(but with real closing tags obviously)

[15:05:00.0000] <jgraham>
But it might not

[15:05:01.0000] <jgraham>
With canvas it would be a real pain

[15:05:02.0000] <TabAtkins>
I see, so you'd have to do an all-or-nothing transition over, or else risk legacy clients not getting the functionality.

[15:06:00.0000] <TabAtkins>
Which is strictly worse than just standardizing the original browser-specific name, which at least works in one browser while people transition to newer UAs.

[15:09:00.0000] <GPHemsley>
Hixie: Did you ever revert that ua/uk issue?

[15:09:01.0000] <TabAtkins>
Clearly this means we need some way of multi-naming an element, so the browser has a choice of which name it wants to use.  <com_microsoft_wordart|com_moz_wordart|wordart>Village Fete!</>

[15:09:02.0000] <TabAtkins>
/me is not serious, though it would solve at least part of the problem.

[15:09:03.0000] <Hixie>
GPHemsley: yes, right after you said to :-)

[15:10:00.0000] <Hixie>
TabAtkins: that would be a security nightmare

[15:10:01.0000] <GPHemsley>
Hixie: Oh, OK. I never saw a tweet about it. That's why I asked. :)

[15:10:02.0000] <TabAtkins>
Indeed!

[15:10:03.0000] <TabAtkins>
It would be horrifying.  Just saying, that's basically how CSS's prefixed properties work.  The browser just ignores all the properties it doesn't want to pay attention to.

[15:12:00.0000] <AryehGregor>
Someone needs to make a JavaScript validator.

[15:13:00.0000] <AryehGregor>
That will guess whether your JS is standards-compliant.

[15:13:01.0000] <AryehGregor>
(guess because of halting problem, natch)

[15:13:02.0000] <TabAtkins>
Or better would be some way of indicating that an element is 'experimental' and can be ignored if the browser wants.  <wordart><com_microsoft_com wordart experimental>Village Fete!</></>

[15:13:03.0000] <AryehGregor>
Nobody pays any attention to JS validity, only HTML/CSS validity, presumably because JS doesn't have validators.

[15:14:00.0000] <TabAtkins>
Or, hrm.  Man, translating this into HTML is hard.

[15:14:01.0000] <TabAtkins>
AryehGregor: Something like jslint doesn't go far enough?

[15:14:02.0000] <AryehGregor>
jslint is for checking code quality more than standards compliance, isn't it?

[15:14:03.0000] <TabAtkins>
Also, I *totally* screwed up the proprietary tag in the last example.

[15:15:00.0000] <TabAtkins>
AryehGregor: Yeah, but what standards are talking about?

[15:15:01.0000] <AryehGregor>
ECMAScript, DOM, HTML5, . . .

[15:16:00.0000] <TabAtkins>
Oh, so like if you're using properties that actually exist in the relevant standard?

[15:16:01.0000] <Hixie>
GPHemsley: it was editorial so it didn't get tweeted on @WHATWG -- if you want all the tweets, @HTML5 has all the HTML5 ones. There's no twitter for all the edits ever, though.

[15:16:02.0000] <Hixie>
GPHemsley: there's a mailing list for those if you want them though

[15:18:00.0000] <roc>
AryehGregor: it's a lot easier to validate declarative content than a program

[15:18:01.0000] <AryehGregor>
Yeah, I know.

[15:18:02.0000] <jcranmer>
is HTML 5 in last call?

[15:18:03.0000] <AryehGregor>
"A lot easier" meaning "not impossible, unlike with a program".

[15:18:04.0000] <webben>
jcranmer: No.

[15:19:00.0000] <roc>
well

[15:19:01.0000] <jcranmer>
I misread something at some point in time, then

[15:19:02.0000] <AryehGregor>
But it should be possible to try *some* kind of validation of JavaScript.  So it could say "definitely invalid", "definitely valid", "maybe valid" in some very restricted cases.

[15:19:03.0000] <roc>
there are some things you can validate about programs

[15:19:04.0000] <AryehGregor>
Right.

[15:19:05.0000] <roc>
and there are some things you can't validate about declarative markup

[15:19:06.0000] <AryehGregor>
True, like semantic usage.

[15:20:00.0000] <webben>
AryehGregor: You could sniff JS for likely mistakes.

[15:20:01.0000] <AryehGregor>
Right.

[15:21:00.0000] <Hixie>
jcranmer: few more days!

[15:21:01.0000] <jcranmer>
I'm arguing with someone who claims HTML 5 is...

[15:21:02.0000] <jcranmer>
"

[15:21:03.0000] <jcranmer>
In violation of what? "HTML 5" is just a sketchy draft, purported to mainly describe how browsers actually behave, more or less. Why would you treat it as if it were a standard? "

[15:21:04.0000] <AryehGregor>
Typical.

[15:21:05.0000] <Hixie>
jcranmer: it's a "draft standard"

[15:21:06.0000] <Hixie>
jcranmer: and it's more accurate and detailed than HTML4

[15:21:07.0000] <Hixie>
jcranmer: has been for years

[15:22:00.0000] <jcranmer>
I know

[15:22:01.0000] <tantek>
except for all the new stuff ;)

[15:22:02.0000] <jgraham>
Experience suggests that you would treat it as a standard because it is the closest thing to a functional standard that exists in the HTML5 space

[15:22:03.0000] <AryehGregor>
CSS Text is a WD too, is that also "a sketchy draft . . . why would you treat it as if it were a standard?"

[15:22:04.0000] <webben>
jcranmer: Maybe the argument needs to be about something other than its "standards" status, and focus on the interoperability angle?

[15:22:05.0000] <AryehGregor>
jgraham, s/5//?

[15:22:06.0000] <jcranmer>
I'm specifically arguing about some of the text it says on "applet"

[15:22:07.0000] <jgraham>
AryehGregor: Indeed

[15:23:00.0000] <jcranmer>
specifically about the interaction between <applet> and display: none

[15:23:01.0000] <tantek>
jcranmer - applet's been deprecated for over a decade, why would you bother with it at all?

[15:23:02.0000] <webben>
tantek: Migrating away from applet is non-trivial.

[15:23:03.0000] <Hixie>
jcranmer: i just added that in the last few hours!

[15:23:04.0000] <Hixie>
webben: really?

[15:23:05.0000] <tantek>
webben - it's one checkbox in the browser for me. works great.

[15:24:00.0000] <jcranmer>
Hixie: really?

[15:24:01.0000] <Hixie>
jcranmer: yup

[15:24:02.0000] <webben>
Hixie: In my experience, yeah.

[15:24:03.0000] <Hixie>
jcranmer: if it's wrong, let me know

[15:24:04.0000] <jcranmer>
hmm, 5:39 AM

[15:24:05.0000] <Hixie>
webben: should be relatively simple, it just maps to <embed> basically. what's difficult?

[15:24:06.0000] <jcranmer>
apparently IE and FF 3.0.1 differ in that regard

[15:24:07.0000] <jcranmer>
er, IE 7

[15:24:08.0000] <webben>
Hixie: I tried to migrate to "object". iirc.

[15:24:09.0000] <Hixie>
jcranmer: oh, that's possible, yes. FF devs in particular have told me that's a known bug.

[15:25:00.0000] <Hixie>
webben: oh well <object> in general is non-trivial

[15:25:01.0000] <jcranmer>
mostly because IE and everybody else seem to implement it differently

[15:27:00.0000] <TabAtkins>
Hmm, the <link itemref="foo"> idea seems interesting.  Would make it usable faster.

[15:27:01.0000] <tantek>
Hixie, jcranmer, worse yet, anything that invokes plugins (e.g. object, embed) may be impacted by http://en.wikipedia.org/wiki/Eolas

[15:29:00.0000] <jcranmer>
/me prays for an in re Bilski blanket invalidation of software patents

[15:30:00.0000] <TabAtkins>
jcranmer: Me too.  Sigh, me too.

[15:31:00.0000] <jcranmer>
doesn't help the H.264 patent problems, though, unless you kill DSP patents as well

[15:32:00.0000] <TabAtkins>
Can we just wish for the death of patents in general?

[15:32:01.0000] <AryehGregor>
No.

[15:32:02.0000] <AryehGregor>
Some things have enormous R&D costs and would be impossible to make without patents.

[15:33:00.0000] <AryehGregor>
Like drug research.  Much though people hate on big pharma, it costs hundreds of millions of dollars to get a new drug approved, and the process requires publishing enough info that any competitor could make your new drug en masse for cheap.

[15:33:01.0000] <jcranmer>
hundreds of millions of dollars and years

[15:33:02.0000] <AryehGregor>
So the end of patents would be the end of private drug research as we know it.  The same doubtless applies to a variety of other fields.

[15:34:00.0000] <AryehGregor>
Software is already protected by copyright, though, and there's the potential for massive lock-in.

[15:34:01.0000] <jcranmer>
first you have to find biological mechanisms, then you have to attack those mechanisms, introduce various chemicals, and then find efficient ways to manufacture complex organic compounds

[15:34:02.0000] <AryehGregor>
If Pfizer comes out with a great new treatment for X, and they dominate for five years, that doesn't stop them losing out to a new drug someone else comes out with that works better or is cheaper.

[15:34:03.0000] <TabAtkins>
AryehGregor: I really don't wanna get into arguments about the validity of patents in certain realms, but the short answer is that experience has shown that patents do *not* increase innovaction in the medical research market.

[15:34:04.0000] <jcranmer>
and then you get to go through years of multi-phase trials

[15:35:00.0000] <AryehGregor>
TabAtkins, how would research occur *at all* without patents?  Who would pay for the trials?

[15:35:01.0000] <AryehGregor>
You'd have to redo the system, like have the government fund the trials.

[15:35:02.0000] <TabAtkins>
(Some countries persisted quite a while into the modern era without patents on medical research, so we can compare their previous rates of innovation with their current.)

[15:35:03.0000] <AryehGregor>
TabAtkins, innovation including paying for trials, or did they let companies do that in countries where they could turn a profit off them?

[15:36:00.0000] <AryehGregor>
It's not just a matter of innovation, it's also a matter of you have to run multiple trials of many thousands of people according to demanding standards . . . something has to pay for that.

[15:36:01.0000] <tantek>
AryehGregor - plenty of research happens on food nutrition and other non-patented substances. So someone is paying for them. Who cares about who is paying? Fact remains, such research does happen.

[15:36:02.0000] <TabAtkins>
AryehGregor: I'd have to look up details of the papers that have been cited, but like I said, not really wanting to get into that sort of discussion atm.

[15:36:03.0000] <AryehGregor>
tantek, most food research doesn't have to go through the same FDA approval process as prescription drugs.

[15:36:04.0000] <tantek>
AyrehGregor - same thing with common vitamins

[15:36:05.0000] <AryehGregor>
Of course, you could say we should get rid of that approval process, or greatly cut it back.

[15:37:00.0000] <AryehGregor>
That might be sensible.

[15:37:01.0000] <jcranmer>
well, considering the high costs of a failure in the approval process

[15:37:02.0000] <tantek>
the point is, that there are plenty of things that improve your health, combat sickness etc. that are researched that are not-patented

[15:37:03.0000] <tantek>
focusing on drugs is the wrong framing. focusing on health is the right framing.

[15:37:04.0000] <AryehGregor>
Well, I'm pointing specifically to prescription drugs, because they have a necessary baseline cost due to FDA approval.

[15:38:00.0000] <AryehGregor>
I'm not commenting on other things that might not have such large overhead for introducing new products.

[15:38:01.0000] <AryehGregor>
Those are a different story and might not benefit at all from patents.

[15:38:02.0000] <TabAtkins>
So, worst case, government pays for FDA-level approvals, once a drug has sufficient promise from privately-run trials.  Shrug.  That would prevent people from locking up medical research behind paywalls.

[15:39:00.0000] <tantek>
/me is a little surprised that the HTML5 patent disclosures http://www.w3.org/2004/01/pp-impl/40318/status#current-disclosures do not list http://en.wikipedia.org/wiki/Eolas

[15:40:00.0000] <cardona507_>
hello, I am trying to get appcache setup and I believe that I have it. The browser asks if it is ok to store data on my computer for offline use - and I have the .manifest serving up with the correct mime type. And I have all of the files in the cache manifest . but it isn't working - does anyone have any trouble shooting tips?

[15:40:01.0000] <tantek>
Hixie, are <object> and <embed> optional for UAs? Can they simply ignore them as empty elements? Or just "always" go to fallback content? Or only handle "native" support and simply never invoke any plugin code? (nevermind if this is practical or not, just wondering if HTML5 allows such "degenerate" treatment of those tags)

[15:41:00.0000] <Hixie>
AryehGregor: re your mail about ajax

[15:41:01.0000] <jcranmer>
software was for the most part only patentable in the US since 1994, from what I can tell

[15:41:02.0000] <Hixie>
AryehGregor: i think it's pretty easy to do it in ajax while being backwards compatible -- you'd just grab every click using a capture listener, and cancel the navigation

[15:42:00.0000] <Hixie>
AryehGregor: and instead XHR the page over, pushState() the new URL, and replace the contents of the old page with the new page using innerHTML

[15:42:01.0000] <Hixie>
AryehGregor: it's probably like a 20 lne script

[15:42:02.0000] <Hixie>
tantek: they are not required to support any plugins

[15:42:03.0000] <TabAtkins>
Hixie: that works if you're willing to replace the whole page.

[15:43:00.0000] <tantek>
Hixie - ok, that is good to know. Thanks for the summary.

[15:43:01.0000] <Hixie>
TabAtkins: you can do it with bits of the page too

[15:43:02.0000] <TabAtkins>
Hixie: If you're not, you'll have to duplicate content.

[15:43:03.0000] <Hixie>
TabAtkins: duplicate how?

[15:44:00.0000] <TabAtkins>
Hixie: Well, how are you doing it with bits?  Either the server is trimming pages down to particular bits based on the request (ajax call tells it what bits it wants), or you're parsing/trimming the response client-side, which is complex.

[15:44:01.0000] <AryehGregor>
/me needs to read more of the HTML5 spec, but first needs to do the complex analysis homework that he planned to do . . . oh, 12 hours ago

[15:44:02.0000] <Hixie>
TabAtkins: trimming the response client-side is easy

[15:44:03.0000] <tantek>
Hixie, as long as plugins are optional for conforming UAs in HTML5, I don't reasonably believe that http://en.wikipedia.org/wiki/Eolas will become essential for HTML5. (IANAL and all that) Therefore I won't be filling out this form accordingly: http://www.w3.org/2004/01/pp-impl/40318/disclose

[15:44:04.0000] <TabAtkins>
?_?  Seriously?  The best way I've seen so far is to load it into an iframe and pull chunks out.

[15:45:00.0000] <TabAtkins>
Which is suboptimal, since it runs scripts, requests resources, etc. that may not even affect the bits you're pulling out.

[15:45:01.0000] <Hixie>
TabAtkins: you do a querySelectorAll('.replace') on the current document, then for each element in that list, you do a getElementById() on the DOM of the XHRed document, and replace the element in the old doc with the element in the XHRed doc.

[15:45:02.0000] <TabAtkins>
Okay, so see previous response.

[15:45:03.0000] <Hixie>
for instance

[15:45:04.0000] <tantek>
BTW - it's amazing how much faster how many sites get if you uncheck "[  ]  Enable plug-ins"

[15:46:00.0000] <Hixie>
tantek: i think you want #htmlwg, for that issue :-)

[15:46:01.0000] <tantek>
Thanks Hixie. I will strongly support the current position of HTML5 that supporting plugins is optional for conforming UAs.

[15:47:00.0000] <Hixie>
it'd be basically impossible for us to require support for plugins

[15:47:01.0000] <Hixie>
since we'd have to define binary interfaces for all platforms

[15:48:00.0000] <TabAtkins>
If you do the "build the XHRed document's DOM, and extract bits", that means a possibly substantial wait while images load, scripts run, etc. when all you want is a particular chunk of content.

[15:48:01.0000] <TabAtkins>
For a js-heavy site, the kind that benefits most from being a single-page app, this will *always* be relatively substantial.

[15:49:00.0000] <Hixie>
TabAtkins: no scripts or images load when doing XHR

[15:49:01.0000] <TabAtkins>
(In my own hack-support for @onlyreplace, I'm going to mangle script and img elements on the page, then unmangle them for the bits that I'm replacing.)

[15:49:02.0000] <TabAtkins>
Hixie: When you build the DOM they do, certainly?

[15:50:00.0000] <GarethAdams|Home>
TabAtkins: external resources are only loaded when loaded into the DOM, an XHR isn't loaded into the DOM (it's just a external request)

[15:50:01.0000] <GarethAdams|Home>
*into the windowed document

[15:51:00.0000] <TabAtkins>
GarethAdams|Home: But to do what Hixie is saying you have to turn the XHR response into a separate DOM so you can yank chunks out of it.

[15:51:01.0000] <TabAtkins>
Which should, unless I'm wrong, download/execute linked resources.

[15:51:02.0000] <TabAtkins>
(If I am wrong, that's weird, but helpful.)

[15:52:00.0000] <GarethAdams|Home>
yes, I corrected myself, the DOM of an XHR isn't the same as the DOM of window.documentElement

[15:52:01.0000] <GarethAdams|Home>
there's no need to load CSS for example for a document that isn't being displayed

[15:53:00.0000] <TabAtkins>
Really?  There's something going on that I'm not understanding, then.  How would you take the response to an XHR and use document.getElementByID on it?

[15:53:01.0000] <TabAtkins>
/me may very well just be ignorant.

[15:55:00.0000] <Hixie>
TabAtkins: XHR itself givs you the DOM, no script execution

[15:55:01.0000] <TabAtkins>
In which property of the response object?

[15:55:02.0000] <Hixie>
TabAtkins: responseXML

[15:55:03.0000] <GarethAdams|Home>
https://developer.mozilla.org/en/XMLHttpRequest - an XHR has responseXML: "The response to the request as a DOM Document object"

[15:55:04.0000] <TabAtkins>
Hrm.  I thought that only worked when you returned valid XML.

[15:56:00.0000] <Hixie>
i think XHR2 says to use that for HTML too

[15:56:01.0000] <GarethAdams|Home>
"Note: If the server doesn't apply the text/xml Content-Type header, you can use overrideMimeType() to force XMLHttpRequest to parse it as XML anyway."

[15:56:02.0000] <GarethAdams|Home>
but that's just mozilla's implementation being described there, AFAIK

[15:56:03.0000] <TabAtkins>
Okay, if XHR2 allows that to contain the DOM for an HTML document, then that's easy, sure.

[15:57:00.0000] <TabAtkins>
Of course, is that implemented by anyone yet?

[15:57:01.0000] <TabAtkins>
/me can't put together an experimental implementation of something that still relies on unimplemented behavior.

[16:06:00.0000] <foolip>
Hixie: I'd like some clarification on HTMLPropertyCollection. Are the items in tree-order and if so, why does the "the properties of an item" algorithm concern itself about order at all?

[16:07:00.0000] <GPHemsley>
Hixie: Did you ever get around to reading the <cite> thread, and the new proposal in it?

[16:07:01.0000] <TabAtkins>
annevk: Do you know if anyone supports XHR2 yet?  Specifically, the ability for responseXML to contain HTML documents?

[16:08:00.0000] <Hixie>
foolip: looking...

[16:09:00.0000] <Hixie>
GPHemsley: yes, i believe i sent a reply

[16:09:01.0000] <foolip>
In the general section on collections it is noted that "In the absence of specific requirements to the contrary, the nodes within the collection must be sorted in tree order." I don't see anything explicit to the contrary.

[16:10:00.0000] <GPHemsley>
Hixie: I'm not seeing it. The thread is called "the cite element", and the pertinent discussion ran between Oct. 6 and 9.

[16:14:00.0000] <GPHemsley>
Also, if anyone wants to weigh in on this, it'd be greatly appreciated: https://bugzilla.mozilla.org/show_bug.cgi?id=522913 (completely unrelated to <cite>, FYI)

[16:15:00.0000] <Hixie>
foolip: the HTMLPropertyCollection actually explicitly says tree order, it seems

[16:15:01.0000] <Hixie>
foolip: probably for ease of implementation

[16:16:00.0000] <Hixie>
foolip: i could change the other algorithm to say that you resort the list in tree order

[16:16:01.0000] <foolip>
There's also the not that "Within an item, the properties are unordered with respect to each other, except for properties with the same name, which are ordered in the order they are given by the algorithm that defines the properties of an item." I'm not sure when that order is supposed to matter.

[16:17:00.0000] <Hixie>
foolip: it only matters when, e.g., finding the first value for a property name, which is useful when there's only supposed to be one

[16:17:01.0000] <Hixie>
foolip: what would be easier? the order as determined by crawling the doc (as per the algorithm that defines the properties of an item), or tree order?

[16:17:02.0000] <foolip>
I'm trying to determine exactly that

[16:17:03.0000] <Hixie>
foolip: i can change the spec either way, basically

[16:18:00.0000] <foolip>
it's itemref that makes crawling in tree order rather complex

[16:19:00.0000] <Hixie>
yes

[16:19:01.0000] <foolip>
but actually using the algorithm in the spec would also be non-trivial and certainly can't be hooked into the same code that handles all other collections

[16:19:02.0000] <foolip>
is it necessary to allow recursive itemrefs?

[16:20:00.0000] <Hixie>
you mean loops?

[16:20:01.0000] <Hixie>
or do you mean just two down?

[16:20:02.0000] <Hixie>
chains

[16:20:03.0000] <foolip>
I mean two down

[16:20:04.0000] <foolip>
chained

[16:20:05.0000] <foolip>
was there a use case for it or did it just happen that way because of the way the algorithm was specced?

[16:21:00.0000] <Hixie>
i think it'd be really weird to not allow it, personally

[16:21:01.0000] <Hixie>
but i don't think there was a strong use case for it

[16:22:00.0000] <foolip>
yes, all else equals its nice to allow it

[16:22:01.0000] <TabAtkins>
What if the ref'd subtree contained an @itemscope which had more refs?  That sort of case is really weird to disallow.

[16:23:00.0000] <TabAtkins>
(I can see how not allowing a simple chained itemref within a single @itemscope would be justifiable.)

[16:23:01.0000] <Hixie>
TabAtkins: that'd be different

[16:23:02.0000] <foolip>
TabAtkins: but the PropertyNodeList just contains the properties for one item

[16:23:03.0000] <TabAtkins>
Okay, wasn't sure if it would be different or not.

[16:24:00.0000] <foolip>
but ok, it sounds like there's nothing deliberate about the order here, I'm going to try understanding better which is actually easier to implement and if necessary suggest that the spec is changed

[16:25:00.0000] <Hixie>
foolip: k. i definitely agree that it'd be nice to have those two orders be consistent, at least

[16:25:01.0000] <TabAtkins>
foolip: I suspect that algorithm-order would make more sense to authors.  It would to me, at least.

[16:26:00.0000] <foolip>
TabAtkins: surely the order shouldn't matter as long as it doesn't vary between implementations?

[16:27:00.0000] <Hixie>
there's some logic to the crawled order

[16:27:01.0000] <Hixie>
but then i guess tree order is also easy to understand

[16:27:02.0000] <TabAtkins>
What about the case Hixie detailed, about checking the first/last prop with a given name (frex when the given prop should only appear once, and you're doing error-recovery).

[16:28:00.0000] <Hixie>
TabAtkins: we'd redefine the order returned by the algorithm to be tree order, so that'd still be consistent

[16:28:01.0000] <foolip>
sure, either is fine I guess, in the model properties are unordered anyway

[16:28:02.0000] <Hixie>
TabAtkins: it would just mean that tools that implement this by crawling would have to reorder their nodes before returning them

[16:28:03.0000] <TabAtkins>
Sure, that makes sense.  I guess it doesn't matter, then.

[16:28:04.0000] <Hixie>
foolip: oh wait, what am i talking about

[16:29:00.0000] <foolip>
Hixie: ?

[16:29:01.0000] <Hixie>
foolip: the order of the elements in that object has nothing to do with the order of the properties

[16:29:02.0000] <Hixie>
foolip: elements there can have multiple properties

[16:30:00.0000] <foolip>
Hixie: oh right you are

[16:30:01.0000] <Hixie>
foolip: it's .namedItem()'s list whose order we should be talking about

[16:30:02.0000] <Hixie>
foolip: but then our entire converesation applies equally to that one, so carry on

[16:30:03.0000] <foolip>
but first, is .item() in tree order?

[16:31:00.0000] <Hixie>
yeah

[16:31:01.0000] <Hixie>
In the absence of specific requirements to the contrary, the nodes within the collection must be sorted in tree order.

[16:31:02.0000] <foolip>
right

[16:31:03.0000] <foolip>
just checking if this is deliberate

[16:32:00.0000] <foolip>
that sounds good, even though it's probably a bit messy to implement by walking in tree-order

[16:32:01.0000] <foolip>
but on to .namedItem

[16:33:00.0000] <foolip>
oh, it's already defined to be in tree-order

[16:33:01.0000] <Hixie>
yeah PropertyNodeList should be either changed to algorithm-order or the algorithm changed to tree-order

[16:35:00.0000] <foolip>
is the algorithm actually used for anything except determining which elements are the properties of an item, couldn't it just as well produce an unordered set of properties (conceptually at least)

[16:35:01.0000] <foolip>
?

[16:35:02.0000] <Hixie>
well we need to define the relative ordering of values within a property

[16:35:03.0000] <AryehGregor>
Hixie, it occurs to me that AJAX doesn't really replicate native look and feel.  For instance, the native browser "loading" bar doesn't fire; scripts can't manipulate it (can they?).  Instead, each AJAX app makes up its own weird, hacky progress spinner that doesn't appear in the right place.

[16:36:00.0000] <AryehGregor>
You expect stuff like the favicon to be replaced by a little spinner, or whatever your browser usually does.

[16:36:01.0000] <foolip>
Hixie: for PropertyNodeList.values?

[16:36:02.0000] <Hixie>
AryehGregor: i guess... don't most authors consider that a feature not a bug? :-)

[16:36:03.0000] <foolip>
that's already defined to be in tree-order

[16:36:04.0000] <Hixie>
foolip: yeah, either we should redefine the algorithm or .values

[16:37:00.0000] <AryehGregor>
As a user I get annoyed sometimes when I see little made-up spinners instead of my usual loading cues.  It's disorienting somehow.  I don't know.

[16:37:01.0000] <AryehGregor>
Maybe I'm the only one.

[16:37:02.0000] <AryehGregor>
Maybe the annoyance is because I tend to get annoyed at overuse of AJAX.

[16:37:03.0000] <Hixie>
AryehGregor: to be honest i don't really get the use case. Why is what we have now a problem?

[16:37:04.0000] <AryehGregor>
I don't really know, as I said.

[16:38:00.0000] <foolip>
Hixie: fine, there's no big hurry I think, perhaps implementor feedback might be useful. I'll file a bug

[16:38:01.0000] <AryehGregor>
I wasn't the one who originally said that what we have is inadequate.

[16:38:02.0000] <AryehGregor>
I was just making a suggestion based on the premise that it is.

[16:38:03.0000] <Hixie>
foolip: thanks

[16:38:04.0000] <Hixie>
AryehGregor: right

[16:38:05.0000] <Hixie>
anyway. new features are not for this version.

[16:38:06.0000] <AryehGregor>
I'm not at all sure that this is useful enough middle ground to have a special declarative syntax.

[16:38:07.0000] <AryehGregor>
Right, certainly not.

[16:38:08.0000] <AryehGregor>
I said that in my first post on the matter.

[16:38:09.0000] <Hixie>
:-)

[16:39:00.0000] <AryehGregor>
GPHemsley, can't you usually tell what language something is in by looking at it?  Or do you often want to know what language something is when you don't know the language, *and* the author has actually used correct language markup (which most don't, I imagine)?

[16:40:00.0000] <GPHemsley>
AryehGregor: Once you get beyond your own language and its relatives, it becomes increasingly more difficult to determine what language something is in. Or what script. Or what dialect. Etc.

[16:41:00.0000] <AryehGregor>
GPHemsley, but do authors actually mark up language reliably enough for this to be useful in practice?

[16:41:01.0000] <AryehGregor>
For instance, Wikipedia has mostly correct lang tags on the root element, but everything below that tends to be unmarked-up.

[16:42:00.0000] <AryehGregor>
And the one on the root element is sometimes a nonstandard code, too.

[16:42:01.0000] <AryehGregor>
And Wikipedia seems to be on the more enthusiastic-about-standards side of things compared to most websites.

[16:43:00.0000] <GPHemsley>
Yes. And if they had somewhere for that information to be displayed, they're probably do it more.

[16:43:01.0000] <GPHemsley>
AryehGregor: I'd like to continue this conversation, but I actually have to run right now. I'll be back in about an hour or so, OK?

[16:44:00.0000] <AryehGregor>
I might or might not be here.

[16:44:01.0000] <GPHemsley>
Alright, well, if you are. :)

[16:44:02.0000] <AryehGregor>
My opinion is irrelevant to what Mozilla does anyway, I'm a web developer.

[16:44:03.0000] <GPHemsley>
heh

[16:44:04.0000] <GPHemsley>
anyway, gotta go

[16:48:00.0000] <mikekelly>
lol


2009-10-19
[17:32:00.0000] <Hixie>
annevk: one bug per issue please, btw :-)

[18:03:00.0000] <GPHemsley>
AryehGregor: Do you have an example of a Wikipedia article that you think warrants a lang attribute it doesn't have?

[18:03:01.0000] <GPHemsley>
AryehGregor: And also one of a non-standard code?

[18:04:00.0000] <AryehGregor>
GPHemsley, I don't know what you think warrants a lang attribute.  Go to any English Wikipedia article on a French phrase or whatnot and there will be foreign-language content that's not marked up, almost certainly.

[18:04:01.0000] <GPHemsley>
Fair enough.

[18:04:02.0000] <AryehGregor>
Or just look at the language links in the lower left.

[18:04:03.0000] <AryehGregor>
<li class="interwiki-ar"><a href="http://ar.wikipedia.org/wiki/">العربية</a></li> 

[18:05:00.0000] <GPHemsley>
Ah. Hmm/

[18:05:01.0000] <AryehGregor>
As for non-standard codes, view-source:http://zh-yue.wikipedia.org/wiki/頭版

[18:05:02.0000] <AryehGregor>
Er.

[18:05:03.0000] <AryehGregor>
That's Chrome-specific, I think.

[18:05:04.0000] <AryehGregor>
http://zh-yue.wikipedia.org/wiki/頭版

[18:05:05.0000] <AryehGregor>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="zh-yue" lang="zh-yue" dir="ltr">

[18:05:06.0000] <GPHemsley>
nah, that's what Firefox uses, too

[18:05:07.0000] <AryehGregor>
Well, anyway.

[18:06:00.0000] <AryehGregor>
The correct code there is yue, not zh-yue, as far as I understand.

[18:06:01.0000] <AryehGregor>
There are others too.

[18:06:02.0000] <GPHemsley>
Nope, it's zh-yue

[18:06:03.0000] <GPHemsley>
Type: language

[18:06:04.0000] <GPHemsley>
Subtag: yue

[18:06:05.0000] <GPHemsley>
Description: Yue Chinese

[18:06:06.0000] <GPHemsley>
Added: 2009-07-29

[18:06:07.0000] <GPHemsley>
Macrolanguage: zh

[18:07:00.0000] <GPHemsley>
hmm

[18:07:01.0000] <AryehGregor>
Pretty sure not.

[18:07:02.0000] <GPHemsley>
yeah, lemme look that up further

[18:07:03.0000] <AryehGregor>
ISO 639-3 code is yue.

[18:07:04.0000] <GPHemsley>
Oh, it's valid... just obsolete

[18:07:05.0000] <GPHemsley>
Type: extlang

[18:07:06.0000] <GPHemsley>
Subtag: yue

[18:07:07.0000] <GPHemsley>
Description: Yue Chinese

[18:07:08.0000] <GPHemsley>
Added: 2009-07-29

[18:07:09.0000] <GPHemsley>
Preferred-Value: yue

[18:07:10.0000] <AryehGregor>
http://validator.nu/?doc=http://zh-yue.wikipedia.org/wiki/頭版&profile=permissive

[18:07:11.0000] <GPHemsley>
Prefix: zh

[18:07:12.0000] <GPHemsley>
Macrolanguage: zh

[18:08:00.0000] <AryehGregor>
"Bad value zh-yue for attribute lang on element html: Found reserved language extension subtag."

[18:09:00.0000] <AryehGregor>
http://validator.nu/?doc=http://www.wikipedia.org&profile=permissive

[18:09:01.0000] <AryehGregor>
That has a bunch more.

[18:09:02.0000] <AryehGregor>
Some are just warnings, though.

[18:09:03.0000] <AryehGregor>
And some might be bogus.

[18:10:00.0000] <GPHemsley>
Yeah, it seems that the parser doesn't allow extlang values

[18:10:01.0000] <GPHemsley>
s/allow/account for/

[18:11:00.0000] <AryehGregor>
I filed a bug.

[18:12:00.0000] <GPHemsley>
k

[18:12:01.0000] <GPHemsley>
URL?

[18:13:00.0000] <AryehGregor>
http://bugzilla.validator.nu/buglist.cgi?bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&email1=Simetrical%2Bvalidator⊙gc&emailtype1=exact&emailassigned_to1=1&emailreporter1=1

[18:19:00.0000] <AryehGregor>
Hixie, so, if standards shouldn't allow anything that isn't itself standard, why does <object> validate?  (I assume it does, anyway.)

[18:23:00.0000] <GPHemsley>
AryehGregor: Alright, I've CC'd myself on those related bugs

[18:23:01.0000] <GPHemsley>
AryehGregor: http://meta.wikimedia.org/wiki/List_of_Wikipedias

[18:24:00.0000] <AryehGregor>
GPHemsley, what about it?

[18:24:01.0000] <GPHemsley>
That helps to sort out which of the errors are real errors

[18:24:02.0000] <AryehGregor>
How?

[18:24:03.0000] <GPHemsley>
as it gives the English name of what the Wikipedia is for

[18:24:04.0000] <GPHemsley>
to help match against the IANA registry

[18:24:05.0000] <AryehGregor>
Ah.

[18:25:00.0000] <GPHemsley>
zh-yue is Cantonese

[18:25:01.0000] <AryehGregor>
Well, yes, I knew that.

[18:25:02.0000] <GPHemsley>
sh is inded Serbo-Croatian

[18:25:03.0000] <GPHemsley>
indeed

[18:25:04.0000] <GPHemsley>
so the tag is right

[18:26:00.0000] <GPHemsley>
despite the comment that "sr, hr, bs are preferred for most modern uses"

[18:27:00.0000] <GPHemsley>
The one that interests me is the one that doesn't use a valid tag at all, for http://en.wikipedia.org/wiki/Emilian-Romagnol_language

[18:27:01.0000] <GPHemsley>
Wikipedia uses eml

[18:27:02.0000] <AryehGregor>
#mediawiki-i18n is the place to ask if you're curious here.

[18:28:00.0000] <AryehGregor>
The overwhelming majority of Wikipedias do use valid, current language codes.

[18:28:01.0000] <AryehGregor>
The remaining ones are theoretically being renamed over time, but it's a hassle to do the rename, and I don't think any have actually happened in the last year or two.

[18:29:00.0000] <GPHemsley>
doesn't seem too hard... just change the domain and have the old one redirect, no?

[18:30:00.0000] <AryehGregor>
I imagine so.  I'm not a Wikimedia sysadmin, so I dunno.  Anyway, they haven't gotten done, from what I've seen.

[18:30:01.0000] <AryehGregor>
But I don't follow that too closely.

[18:46:00.0000] <AryehGregor>
Okay, I finally realized that the correct translation of "decentralized extensibility" is "allowing the use in HTML of nonstandard, proprietary technologies that can possibly only be processed by a single vendor's tools".  I will post accordingly from now on.

[18:46:01.0000] <AryehGregor>
(starting with my last post, in fact)

[18:52:00.0000] <cardona507>
I am reading http://dev.w3.org/html5/html-author/ and it says "The manifest attribute gives the address of the document’s application cache manifest, if there is one. If the attribute is present, the attribute’s value must be a valid URL." can it be a path like <html manifest="manifest/foo.manifest"> or must if be a URL like <html manifest="http://www.example.com/manifest/foo.manifest"> ?

[20:30:00.0000] <Hixie>
AryehGregor: hm?

[21:15:00.0000] <GrantG>
Does anyone know where to report z-index issues when applied to links on IE8?

[21:16:00.0000] <GrantG>
IE8 seems to have issues with CSS's :hover property when used on links that are positioned in a z-index

[21:17:00.0000] <GrantG>
hello?

[21:18:00.0000] <GrantG>
/me leaves the address of the site experiencing problems in IE8 and below (and only in IE) as http://help.grantgalitz.com/index.php

[21:19:00.0000] <GrantG>
The CSS is correct, though the use of proprietary extensions is true.

[21:19:01.0000] <GrantG>
CSS3 in application/xhtml+xml and text/html mode shows up the same for the site.

[21:21:00.0000] <GrantG>
leaving

[21:21:01.0000] <GrantG>
(I guess everyone is asleep or dead)...

[21:21:02.0000] <GPHemsley>
...or you need to wait longer than 5 minutes for a response

[21:22:00.0000] <erlehmann>
that. and well, the WHATWG is certainly not the first place i'd choose to bitch about IE

[21:22:01.0000] <GPHemsley>
Does anyone know of any reason why Safari wouldn't center an image that has the usual margin/text-center CSS, while Firefox does?

[21:22:02.0000] <GPHemsley>
err, text-align

[21:23:00.0000] <erlehmann>
GPHemsley, images are inline replaced content, aren't they? akin to inline-block, so i'd expect the firefox behaviour to be correct, then.

[21:23:01.0000] <GPHemsley>
erlehmann: No idea. I just want to know how to fix it. ;)

[21:24:00.0000] <erlehmann>
GPHemsley, provide example

[21:24:01.0000] <erlehmann>
also, what hinders you to make the image display:block and apply auto margin ?

[21:26:00.0000] <GPHemsley>
http://gphemsley.pastebin.com/d35994e89

[21:27:00.0000] <GPHemsley>
erlehmann: Hmm... hadn't thought of changing the display. Hang on

[21:27:01.0000] <GPHemsley>
Yup, that works

[21:28:00.0000] <erlehmann>
GPHemsley, be aware that text-align: center; on the image means nothing

[21:29:00.0000] <GPHemsley>
erlehmann: Perhaps that's where Firefox and Safari are in conflict?

[21:29:01.0000] <GPHemsley>
Or it's the display property

[21:29:02.0000] <GPHemsley>
not sure

[21:30:00.0000] <erlehmann>
further research is necessary. try a normal image with text-align on the parent element, i believe that is most likely

[21:36:00.0000] <GPHemsley>
meh, I don't have the patience to right now :/

[21:48:00.0000] <erlehmann>
GPHemsley, if you dont pinpoint the error and report it, it will never be fixey

[21:48:01.0000] <erlehmann>
d

[21:48:02.0000] <GPHemsley>
I know, but I don't use Safari :P

[21:56:00.0000] <erlehmann>
use another webkit instead

[21:56:01.0000] <erlehmann>
or try browsershots.org

[22:48:00.0000] <Hixie>
Philip`, hsivonen: any idea if we need the <!--/--> magic in <textarea>?

[23:27:00.0000] <zcorpan>
"Page start-up performance for this kind of behaviour is important." - http://www.w3.org/mid/104E6B5B6535E849970CDFBB1C5216EB061F0F28⊙Trcmc

[23:27:01.0000] <zcorpan>
then i guess the perf impact on parsing should be considered

[23:44:00.0000] <Hixie>
should i just replace the content model flag with tokenizer modes?

[23:44:01.0000] <Hixie>
that is, when the tree constructor changes the content model flag, just have it change the tokenizer's state?

[00:10:00.0000] <hsivonen>
Hixie: yes, please. That's what I already do.

[00:10:01.0000] <hsivonen>
tokenizer states, that is

[00:10:02.0000] <hsivonen>
not tokenizer "modes"

[00:11:00.0000] <hsivonen>
Hixie: I don't have any data suggesting that the <!--/--> magic were needed in textarea

[00:11:01.0000] <hsivonen>
Hixie: I have data suggesting it's harmful in xmp

[00:12:00.0000] <hsivonen>
well, more like a datum than data

[00:28:00.0000] <Hixie>
k well i guess i'll just avoid doing it at all outside <script> for now

[01:49:00.0000] <Hixie>
this sure is a lot of new states

[01:49:01.0000] <cying>
Hixie: didn't know if you saw this ;) http://www.satine.org/archives/2009/10/16/wuh-working-group/

[01:49:02.0000] <cying>
i couldn't resist

[01:49:03.0000] <Hixie>
i was there :-)

[01:49:04.0000] <Hixie>
oh you mean saw that you had blogged it

[01:50:00.0000] <cying>
ya

[01:50:01.0000] <Hixie>
yes, my alerts mentioned it

[01:50:02.0000] <cying>
heehee

[01:53:00.0000] <hsivonen>
Hixie: when a state needs to gather something like UBLIC or YSTEM, I have those as one state plus index into the string

[01:54:00.0000] <hsivonen>
I'd probably do <script and </script the same way

[01:57:00.0000] <roc>
Philip`: I think I've found a mistake in your tests

[01:58:00.0000] <annevk>
hmm, I was at like 400 emails yet to deal with and now it's 670

[02:00:00.0000] <annevk>
in other news, there's no implementation of XHR responseXML yet

[02:01:00.0000] <annevk>
I'm still not quite sure whether responseXML is specified in sufficient detail

[02:19:00.0000] <Creap>
swedish is good, we just say "v" instead of "double-u"

[02:20:00.0000] <Creap>
I say what VG

[02:20:01.0000] <Creap>
and vvv = www

[02:20:02.0000] <annevk>
/me says what-wii-gee

[02:21:00.0000] <Creap>
I met a guy who called the DOM "DOOM"

[02:21:01.0000] <Creap>
quite fitting sometimes

[02:31:00.0000] <Philip`>
Hixie: I'm afraid your question was not of the form "can you run this regexp on your collection of pages?" and therefore I'm unable to answer it :-p

[02:32:00.0000] <Philip`>
roc: That sounds quite possible - which things seem broken?

[02:33:00.0000] <roc>
as named in our tests, test_2d_shadow_composite_3() and test_2d_shadow_composite_4()

[02:34:00.0000] <roc>
basically you do "ctx.shadowColor = '#f00';" and expect a shadow to be drawn

[02:34:01.0000] <roc>
but the spec currently says that a shadow should be drawn only if at least one of shadowBlur, shadowOffsetX and shadowOffsetY are nonzero

[02:34:02.0000] <Philip`>
Ah, yes, that's because the spec changed

[02:34:03.0000] <roc>
yeah, that's what I thought

[02:34:04.0000] <Philip`>
(and I haven't updated the tests)

[02:36:00.0000] <Philip`>
At some point I need to go over all the canvas spec changes from the past year or so, and fix the tests

[02:37:00.0000] <roc>
ok

[02:38:00.0000] <roc>
thanks

[02:40:00.0000] <Philip`>
(It hasn't really been a high priority for the past year or so, so I've not got around to it yet :-( )

[02:45:00.0000] <zcorpan>
Philip`: to rephrase Hixie's question, can you run the html parser and check for the textarea elements that contain the text "</textarea" case-insensitively

[02:45:01.0000] <zcorpan>
Philip`: and similarly for all other (r)cdata elements

[02:46:00.0000] <Philip`>
zcorpan: Using the same (r)cdata parsing that's implemented by validator.nu a few months ago?

[02:46:01.0000] <zcorpan>
Philip`: yeah

[02:47:00.0000] <Philip`>
Can do, though it's harder to set up than a regexp search, so I'll try to do it some time later today

[02:49:00.0000] <zcorpan>
Philip`: ideally with the output url, element name, textContent for each matching element

[02:51:00.0000] <zcorpan>
Philip`: whether all in one page or separate pages for each element, whatever is easier to set up

[02:51:01.0000] <zcorpan>
s/element/element type/

[02:56:00.0000] <Philip`>
hsivonen: "I choose not to support splitting it out merely in order to show confidence." - I think that sentence is ambiguous, and I think I parsed it wrong when I originally read it

[02:57:00.0000] <Philip`>
(I thought it meant "Merely in order to show confidence, I choose not to support splitting it out")

[02:57:01.0000] <hsivonen>
Philip`: English needs parentheses for grouping.

[02:57:02.0000] <Philip`>
(but it seems it was intended differently)

[02:57:03.0000] <hsivonen>
yes, it was intended differently

[02:58:00.0000] <Philip`>
(Maybe "I don't choose to support splitting it out merely ..." is less ambiguous)

[02:58:01.0000] <hsivonen>
yeah

[03:20:00.0000] <annevk>
I don't understand why we need namespaces for something classes handle perfectly

[03:20:01.0000] <annevk>
i.e. grouping

[03:29:00.0000] <erlehmann>
so i just made elinks acutely aware of the <video> object

[03:30:00.0000] <erlehmann>
but i somehow doubt they'll drag libtheora along ;)

[03:31:00.0000] <roc>
aalib

[03:33:00.0000] <erlehmann>
roc, aalib wont do anything without decoding capabilities

[03:57:00.0000] <Hixie>
hsivonen: i've recast just the RCDATA mode as new states: http://www.whatwg.org/specs/web-apps/current-work/#rcdata-state

[03:57:01.0000] <Hixie>
hsivonen: is it ok?

[04:19:00.0000] <hsivonen>
Hixie: RCDATA looks sensible at least after a superficial look

[04:19:01.0000] <mikekell1>
Hi guys - is this Smylers guy heavily involved in the working group?

[04:19:02.0000] <Hixie>
hsivonen: k

[04:19:03.0000] <hsivonen>
Hixie: are the script states still being edited?

[04:19:04.0000] <Hixie>
yes

[04:20:00.0000] <Hixie>
actively

[04:20:01.0000] <mikekelly>
ok so he is giving me the 'official party line' ?

[04:20:02.0000] <mikekelly>
:)

[04:20:03.0000] <Hixie>
RAWTEXT is done though

[04:22:00.0000] <mikekelly>
I think the 'interventionism' stuff is pretty disturbing, I have to say

[04:23:00.0000] <mikekelly>
if you don't like the pain of interop then perhaps writing web architecture related specs are not for you, eh?

[04:24:00.0000] <mikekelly>
hiding your subjective opinion behind some brittle notion of 'user experience pragmatism' is a little dubious.

[04:24:01.0000] <mikekelly>
to say the least.

[04:25:00.0000] <mikekelly>
and more than a little risky given that the entire planet will have to put up with what you produce for the next.. xyz years

[04:25:01.0000] <Hixie>
hsivonen: ok, the script stuff should now match what it was before, just in states instead of flags

[04:26:00.0000] <Philip`>
mikekelly: I haven't read this discussion much, but Smylers generally seems to say things that seem sensible and reasonable

[04:26:01.0000] <hsivonen>
Hixie: do you intend to edit it now like zcorpan requested?

[04:26:02.0000] <mikekelly>
ok well he's quoting and contesting points that are either clarified or justified underneath

[04:27:00.0000] <Hixie>
after checking this in, yes

[04:27:01.0000] <hsivonen>
ok

[04:27:02.0000] <mikekelly>
Philip`: he's not being particularly constructive.

[04:27:03.0000] <Philip`>
so if there was such a concept as an official party line, he probably would be roughly aligned with that

[04:27:04.0000] <Hixie>
first i want to convert it to this method

[04:27:05.0000] <Hixie>
then i will change it

[04:27:06.0000] <Philip`>
(which is not true of all HTML WG members)

[04:27:07.0000] <Hixie>
so that hopefully we can isolate the mistakes in the conversion from the mistakes in the additions

[04:28:00.0000] <mikekelly>
is 'authors' an official HTML term?

[04:28:01.0000] <hsivonen>
mikekelly: to the extent we have anything official, yes

[04:28:02.0000] <Philip`>
mikekelly: It's the term used to refer to people who produce HTML

[04:28:03.0000] <mikekelly>
well I think that term is crap and shuold be clarified

[04:28:04.0000] <Philip`>
(vs users, who are just viewing stuff through user agents)

[04:29:00.0000] <mikekelly>
web content is barely ever 'authored' in html

[04:30:00.0000] <mikekelly>
users complete forms which render to areas of pre-defined templates

[04:30:01.0000] <hsivonen>
mikekelly: for the purposes of the spec, "author" is the person who writes the templates

[04:30:02.0000] <mikekelly>
ok well that is not a very clear term then

[04:30:03.0000] <mikekelly>
why not use something more sensible like 'provider'

[04:31:00.0000] <mikekelly>
I don't know, whatever, there's got to be better terms than author

[04:31:01.0000] <hsivonen>
mikekelly: author is pretty established

[04:31:02.0000] <mikekelly>
I don't think so

[04:31:03.0000] <Philip`>
'provider' means lots of other things in this context, like hosting provider and internet service provider and whatever

[04:32:00.0000] <mikekelly>
what?

[04:32:01.0000] <mikekelly>
how are those entities relevant to the HTML spec?

[04:33:00.0000] <Philip`>
They're relevant to discussions around the spec, e.g. "my provider won't let me set MIME types for my video files"

[04:33:01.0000] <daedb|>
'author' is a lot more clear than 'provider'

[04:33:02.0000] <mikekelly>
no it isn't. lol.

[04:33:03.0000] <Philip`>
/me wouldn't object to changing the term "author" is there was something that seemed significantly better

[04:33:04.0000] <Philip`>
s/is/if/

[04:33:05.0000] <mikekelly>
if you look at web pages like they are flat files - then fine

[04:34:00.0000] <mikekelly>
that is not how a large majority of modern content providers output html content

[04:34:01.0000] <mikekelly>
fact.

[04:35:00.0000] <mikekelly>
author has personified conotations for a start

[04:37:00.0000] <mikekelly>
what if my HTML is rendered automatically from properties of Model atrributes in an MVC application

[04:38:00.0000] <annevk>
the author would be the person that wrote the code that generates the HTML

[04:38:01.0000] <mikekelly>
right...

[04:38:02.0000] <mikekelly>
that's perfectly clear

[04:38:03.0000] <mikekelly>
:P

[04:38:04.0000] <daedb>
I'm not saying 'author' is a perfect term, but it's more obvious than 'provider' at least.

[04:38:05.0000] <mikekelly>
yeah ok I didnt put all that much thought into that one

[04:39:00.0000] <annevk>
it is to me

[04:39:01.0000] <mikekelly>
what about the poor idiot html authors that need patronising and protecting from the evils of 'The Experts' ?

[04:41:00.0000] <mikekelly>
you can't include something just because it's useful

[04:41:01.0000] <mikekelly>
it has to be 100% idiot proof

[04:41:02.0000] <mikekelly>
apparently.

[04:41:03.0000] <annevk>
you're not making much sense

[04:41:04.0000] <mikekelly>
I couldn't agree more.

[04:42:00.0000] <mikekelly>
I quote:

[04:43:00.0000] <mikekelly>
Content negotiation could succeed if only those who know what they are

[04:43:01.0000] <mikekelly>
doing touch it, that typical authors aren't somehow tempted to start

[04:43:02.0000] <mikekelly>
playing with it.  That's possible, but not certain.  I don't know how

[04:43:03.0000] <mikekelly>
we'd gather data either way. 

[04:43:04.0000] <gsnedders|work>
/me notes mikekelly hasn't replied to Larry's email

[04:43:05.0000] <annevk>
can you please take your conneg bs elsewhere?

[04:44:00.0000] <mikekelly>
excuse me?

[04:44:01.0000] <annevk>
even co-authors of HTTP and URI disagree with you

[04:44:02.0000] <mikekelly>
ok good for them, then they can explain coherently why what I am suggesting is wrong

[04:44:03.0000] <mikekelly>
rather than explaining it's not done now

[04:44:04.0000] <mikekelly>
which I am fully aware of

[04:44:05.0000] <erlehmann>
=_=

[04:46:00.0000] <mikekelly>
annevk: I thought you were all against this appeal to authority stuff?

[04:46:01.0000] <mikekelly>
no?

[04:46:02.0000] <mikekelly>
I didn't get the memo.

[04:47:00.0000] <Hixie>
christ, describing the new states zcorpand wants in terms of authoring conformance criteria is going to be very exciting

[04:47:01.0000] <Hixie>
zcorpan, even

[04:47:02.0000] <Hixie>
oh, i know, i can just make </script always a parse error

[04:47:03.0000] <gsnedders|work>
/me tries to check the latest commit

[04:47:04.0000] <Hixie>
when it would be ignored

[04:47:05.0000] <Hixie>
oh no wait that won't work

[04:47:06.0000] <Hixie>
gah, this is going to be a nightmare

[04:48:00.0000] <Hixie>
the rule has to be that the element's text cannot end after a <!--<script> sequence that hasn't been matched by a --> or a </script>--> or something

[04:48:01.0000] <Hixie>
except the <!-- and <script> are independent...

[04:48:02.0000] <Hixie>
hsivonen: good luck describing this in your UI

[04:49:00.0000] <Hixie>
i'll write this up tomorrow

[04:49:01.0000] <Hixie>
i

[04:49:02.0000] <Hixie>
am too tired to think straight enough to do this

[04:49:03.0000] <Hixie>
nn

[04:49:04.0000] <gsnedders|work>
/me reads the commit very quickly, and thinks it doesn't break anything

[04:49:05.0000] <annevk>
g'night

[04:50:00.0000] <hsivonen>
nn

[05:26:00.0000] <annevk>
kind of annoying that the CSS WG never dealt with the CSSOM, nothing makes much sense

[05:27:00.0000] <annevk>
e.g. [*|ATTR] in a text/html resource ends up as [*|attr] in WebKit and [attr] in Firefox

[05:28:00.0000] <annevk>
also as [abbr] in Opera

[05:30:00.0000] <annevk>
in Opera type selectors preserve their case, but when there's a default namespace they serialize to "|type" which is quite the opposite from what you want

[05:44:00.0000] <mikekelly>
gsnedders|work: I responded to Larry :P

[06:04:00.0000] <Dashiva>
http://lists.w3.org/Archives/Public/public-html/2009Oct/0608.html

[06:04:01.0000] <Dashiva>
I'm not sure how that relates to @namespace in CSS...

[06:12:00.0000] <annevk>
I'm not sure why I let myself get dragged into that discussion

[06:13:00.0000] <annevk>
Potentially because I hit a small wall in CSSOM work

[06:32:00.0000] <mikekelly>
is it possible for a document to  have a request property with the details of the HTTP request used to access it?

[06:35:00.0000] <mikekelly>
so javascript can view it and work out what's going on

[07:08:00.0000] <karlushi>
http://woorkup.com/2009/10/17/most-used-html-tags-in-50-popular-web-sites/

[07:08:01.0000] <karlushi>
Most Used HTML Tags in 50 Popular Web Sites

[07:36:00.0000] <hsivonen>
Hixie: clearly, you need to make it clear that it's ok to use data-* attributes for passing data to JS libraries imported by the page

[07:40:00.0000] <Lachy>
hsivonen, who doesn't think it's ok to do that? I thought it was already clear

[07:41:00.0000] <hsivonen>
Lachy: see Shelley's and Leif's emails to public-html

[07:43:00.0000] <Lachy>
they've sent a lot of mails, and unfortunately, I'm quite far behind on reading mailing lists.

[07:44:00.0000] <hsivonen>
there seems to be quita bit of filibustering going on

[07:44:01.0000] <Lachy>
oh, found this one from shelley? http://lists.w3.org/Archives/Public/public-html/2009Oct/0613.html

[07:44:02.0000] <hsivonen>
Lachy: that one and Leif's follow-up

[07:44:03.0000] <Lachy>
Not sure what she means by "they're not meant to be used for anything other than by an author for a single author's needs."

[07:46:00.0000] <hsivonen>
the four people who've sent the most email to public-html this month are Maciej, Hixie, Julian and Shelley.

[07:46:01.0000] <Dashiva>
Is Leif number five? :)

[07:47:00.0000] <hsivonen>
I might be.

[07:47:01.0000] <hsivonen>
let's see

[07:48:00.0000] <Lachy>
hmm, it seems Lief might be misunderstanding "These attributes are not intended for use by software that is independent of the site that uses the attributes." as including to 3rd party JS libraries used on the page.

[07:48:01.0000] <Lachy>
though, I'm not sure. It's not entirely clear what Leif means.

[07:49:00.0000] <karlushi>
http://www.w3.org/TR/html5/dom.html#embedding-custom-non-visible-data

[07:49:01.0000] <hsivonen>
Dashiva: yeah, Leif seems to be #5

[07:49:02.0000] <karlushi>
>Custom data attributes  are intended to store custom data private to the page or application, for which there are no more appropriate attributes or elements.

[07:50:00.0000] <Lachy>
dammit. Somehow I've ended up with nearly 3000 unread messages across various HTMLWG and WHATWG mailing lists over the past 3 weeks :-(

[07:50:01.0000] <karlushi>
>These attributes are not intended for use by software that is independent of the site that uses the attributes.

[07:50:02.0000] <hsivonen>
karlushi: right. the wording sucks.

[07:50:03.0000] <Lachy>
and it's only going to get worse as I'm incredibly busy travelling over the next 3 weeks too

[07:50:04.0000] <karlushi>
>

[07:50:05.0000] <karlushi>
User agents must not derive any implementation behavior from these attributes or values. Specifications intended for user agents must not define these attributes to have any meaningful values.

[07:51:00.0000] <karlushi>
so I would say that Leif and Shelley are right given the current spec wording.

[07:51:01.0000] <Dashiva>
Eh?

[07:51:02.0000] <hsivonen>
karlushi: the spec bug is that it can be read to say that Dojo et al. shoudn't use the data-* attributes. But data-* attributes exist for Dojo et al.

[07:52:00.0000] <karlushi>
If the spec is misleading, it has to be changed.

[07:52:01.0000] <Dashiva>
If you use a script on your site, that script is not independent of the site

[07:52:02.0000] <hsivonen>
karlushi: indeed. 

[07:52:03.0000] <karlushi>
Dashiva, understood that ;)

[07:53:00.0000] <karlushi>
The full thing is completely ambiguous IMHO. Specifically in the age of clown computing. s/clown/cloud/

[08:03:00.0000] <zcorpan_>
Hixie: yeah, i realize explaining the escaping thing for authors will suck

[08:06:00.0000] <hsivonen>
is it too bad to make it non-conforming to have the string "<script" or the string "</script" in a script?

[08:09:00.0000] <zcorpan_>
there's no problem with <script> document.write('<script><\/script>') </script>

[08:09:01.0000] <hsivonen>
did Hixie add some red lines to Damowmow portal or is my browser broken?

[08:10:00.0000] <hsivonen>
zcorpan_: there is in older UAs

[08:10:01.0000] <zcorpan_>
i see red lines in opera

[08:10:02.0000] <zcorpan_>
hsivonen: oh?

[08:11:00.0000] <hsivonen>
oops. sorry

[08:11:01.0000] <hsivonen>
I misread what you wrote

[08:18:00.0000] <zcorpan_>
i guess with the current landscape of tags(), the bugs would kind of go away if we limit document.all to quirks mode and tags() to document.all

[08:21:00.0000] <hsivonen>
/me is not too fond of Microdata introducing a new void element now

[08:24:00.0000] <Lachy>
woah, I missed the addition of the itemref element till now.

[08:24:01.0000] <Lachy>
/me wonders what it's for

[08:26:00.0000] <Lachy>
woah. That seems to complicate microdata significantly

[08:34:00.0000] <TabAtkins>
annevk: Thanks for the response re XHR's responseXML.

[08:42:00.0000] <TabAtkins>
Lachy: Just do what I do and spend an hour every morning wading through stuff.

[08:43:00.0000] <TabAtkins>
/me isn't sure it's quite a good use of 1/24th of his time to be doing so.

[09:13:00.0000] <Koterpillar>
Does HTML5 support sound recording?

[09:13:01.0000] <annevk>
nope

[09:14:00.0000] <annevk>
well, in theory a browser could tie it into <input type=file>

[09:14:01.0000] <annevk>
but then you still wouldn't have support for streaming it to a server and all

[09:15:00.0000] <Koterpillar>
so it still doesn't match Flash...

[09:16:00.0000] <annevk>
still doesn't?

[09:19:00.0000] <Koterpillar>
never mind, saying own thoughts aloud. In fact, I've seen that audio recording capability in Flash, and hoped that there's something standard along that lines

[09:22:00.0000] <Lachy>
we might get such functionality one day, but there are so many issues that need to be solved before we get there, it's going to take a while

[09:22:01.0000] <annevk>
Koterpillar, we should have it, yes

[09:22:02.0000] <annevk>
Koterpillar, nobody has proposed an API so far

[09:43:00.0000] <mikekelly>
if I have a page /example.html and my server provides the html page and a custom header e.g. X-Something-Interest: foo - can javascript running off the page get at that custom header?

[09:44:00.0000] <mikekelly>
I don't know how to ask that question in a smart way sorry :(

[09:44:01.0000] <annevk>
yes, via XMLHttpRequest

[09:45:00.0000] <mikekelly>
in retrospect of the current page?

[09:45:01.0000] <mikekelly>
or you mean make a HEAD request back?

[09:45:02.0000] <annevk>
either way

[09:46:00.0000] <mikekelly>
so for every page request in a browser there's a default object containing the request used to get it?

[09:46:01.0000] <annevk>
no

[09:47:00.0000] <mikekelly>
but the response?

[09:47:01.0000] <annevk>
no

[09:48:00.0000] <mikekelly>
.. so I do have to make a HEAD request then..?

[09:48:01.0000] <annevk>
you could

[09:48:02.0000] <mikekelly>
how come the browser discards the request/response data for a page and doesn't make it available to js?

[09:49:00.0000] <annevk>
just not a feature that's been requested often prolly so it was not added

[09:50:00.0000] <annevk>
there was some discussion on this on the WHATWG list a while back

[09:50:01.0000] <mikekelly>
another thing - it's not possible to force a location change with custom headers is it?

[09:50:02.0000] <mikekelly>
all you can provide is a URI and that's it

[09:51:00.0000] <mikekelly>
custom request headers*

[09:51:01.0000] <annevk>
I don't understand

[09:51:02.0000] <mikekelly>
well say I make a XHR I can modify request headers

[09:51:03.0000] <mikekelly>
but if I want to point the browser to a new location I can only provide a URI

[09:52:00.0000] <annevk>
is this about conneg again?

[09:52:01.0000] <annevk>
please go away

[09:52:02.0000] <mikekelly>
I can't make the browser include custom headers for 'location changes'

[09:54:00.0000] <annevk>
TabAtkins, me too

[09:54:01.0000] <mikekelly>
annevk: this is me figuring out whether I can get around it or not

[09:54:02.0000] <annevk>
just a little afraid of legacy though I guess @namespace is not used much (if at all) and certainly not in weird ways like that

[09:55:00.0000] <mikekelly>
which is a good thing

[09:55:01.0000] <mikekelly>
or at least I'd assume it was a good thing given how shitty you are being about it :)

[09:55:02.0000] <TabAtkins>
annevk: Yeah, I've never seen it myself.  Admittedly, my experience with other people's stylesheets is somewhat limited, but still.

[09:56:00.0000] <TabAtkins>
I suspect we can make the change now, before namespace cruft gets shoveled into HTML, and be fine.

[09:57:00.0000] <mikekelly>
I'm guessing the answer as to whether I can give the request when a browser's location changes custom headers is no 

[09:58:00.0000] <annevk>
mikekelly, there's no such thing; the reason I'm shitty is that you wasted more than a few hours of everyone's time by repeatedly bringing it up here and have been ignoring what people are saying to you

[09:58:01.0000] <mikekelly>
or.. I understand what they are saying.. I'm giving them responses they don't understand.. and the opposite is happening

[09:58:02.0000] <mikekelly>
that's always possible

[10:00:00.0000] <annevk>
mu

[10:00:01.0000] <mikekelly>
I'm forced to repeat myself because I keep being provided with retorts that I've already addressed..

[10:01:00.0000] <mikekelly>
my last email on the list to Thomas Broyer was yet more repitition of stuff I'd already said

[10:01:01.0000] <mikekelly>
and he'd plainly ignored

[10:02:00.0000] <mikekelly>
I may be abrasive but your attitude stinks just as bad

[10:03:00.0000] <mikekelly>
at least I'm upfront about it.

[11:16:00.0000] <zcorpan_>
Philip`: any progress?

[11:22:00.0000] <annevk42>
hsivonen, did you end up filing a bug on the <base> thing?

[11:22:01.0000] <annevk42>
hsivonen, it does not seem to be in /issues/ so if there ever was an email about it that has not made an impact

[11:25:00.0000] <annevk42>
I don't see a bug

[11:25:01.0000] <annevk42>
/me files one

[11:27:00.0000] <annevk42>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=7971

[11:35:00.0000] <zcorpan_>
annevk: s/kronor/krona/

[11:57:00.0000] <annevk42>
isn't kronor plural?

[11:57:01.0000] <daedb>
kronor = plural

[11:58:00.0000] <Philip`>
zcorpan_: No, because I forgot about it

[11:59:00.0000] <annevk42>
ah, but I wrote "every kronor"; fail

[13:00:00.0000] <Rodi01>
is the dd and dt required inside a figure tag?

[13:05:00.0000] <annevk42>
Rodi01, dt is optional

[13:05:01.0000] <annevk42>
Did anyone review http://dev.w3.org/2006/webapi/DataCache/ ?

[13:09:00.0000] <Rodi01>
I'm using a figure tag to render an avatar inside a comment list. Inside the figure tag, there is an image wrapped by an anchor. Should I wrap everything inside a dd? or use an aside instead?

[13:14:00.0000] <annevk42>
you don't really need either I think

[13:55:00.0000] <TabAtkins>
/me really doesn't understand how the CSS inline model works.

[13:58:00.0000] <karlushi>
http://geocitieslycostripod.com/ I think it is the best html5 Web site I have seen for a long time.

[14:01:00.0000] <Philip`>
That site is clearly unrealistic - it doesn't even have an "under construction" sign

[14:02:00.0000] <annevk42>
ah, from http://piecesofrakesh.blogspot.com/

[14:02:01.0000] <annevk42>
/me thought he recognized that name

[14:02:02.0000] <TabAtkins>
karlushi: Awesome.  ^_^  Unfortunately he's using <legend> in his <figure>.

[14:03:00.0000] <jgraham>
Philip`: http://geocitieslycostripod.com/under_construction.html

[14:04:00.0000] <annevk42>
TabAtkins, inline box model is hard

[14:04:01.0000] <annevk42>
let me rephrase that, CSS is hard

[14:04:02.0000] <TabAtkins>
Nah, CSS is easy.  Inline is hard.

[14:04:03.0000] <Philip`>
jgraham: Oh, I didn't see that

[14:04:04.0000] <TabAtkins>
/me just wants these stupid inline-blocks to align their tops, rather than their bottoms.  WHY IS THIS IMPOSSIBLE?!?

[14:05:00.0000] <karlushi>
TabAtkins, gravity!

[14:05:01.0000] <Hixie>
holy crap, go art! a chair of a w3c wg actually maintaining the community! impressive

[14:06:00.0000] <TabAtkins>
karlushi: We should be able to defy gravity by now.  I demand it!

[14:07:00.0000] <Philip`>
On the subject of data-* name clashes: because the scripts using the attributes are not independent of the site, the site author can just edit the scripts to use non-conflicting names

[14:07:01.0000] <TabAtkins>
Philip`: True, but that may be non-trivial.

[14:07:02.0000] <Philip`>
which is also a way of clarifying what it means for a script to be independent of the site (or whatever the terminology was)

[14:07:03.0000] <TabAtkins>
Philip`: In any case, there's a very simple way to go about things that should make that almost never necessary.

[14:08:00.0000] <TabAtkins>
Hixie: Details?

[14:08:01.0000] <Hixie>
see member-webapps

[14:08:02.0000] <jgraham>
Yeah. I'm reasonably sure that most use cases don't need the bondance and discipline implied by URIs everywhere

[14:09:00.0000] <TabAtkins>
Wow, that's an interesting substitution.

[14:09:01.0000] <jgraham>
er...

[14:09:02.0000] <jgraham>
bondage

[14:12:00.0000] <Philip`>
URIs make it hard for less-than-perfect developers to accidentally create ambiguous names that will hurt them in the future

[14:14:00.0000] <annevk42>
so use a URL in a class name

[14:14:01.0000] <annevk42>
you could even make it so that the data- attributes are scoped by that in your design so there's even less chance of clashes

[14:14:02.0000] <jgraham>
Philip`: Sounds like the sort of argument that java is great because it has all sorts of mechanisms to prevent less than perfect developers shooting themselves in the foot

[14:15:00.0000] <jgraham>
(at the expense of great pain to everyone who has to use it)

[14:15:01.0000] <Dashiva>
And everyone seems to ignore the fact that since you don't have to resolve namespace URIs, anyone can use any URI even if they don't own the domain

[14:16:00.0000] <jgraham>
Dashiva: And also the fact that htp URIs are temporarly non-unique so you either have to use tag uris or uuids or something

[14:44:00.0000] <annevk42>
/me approved some more blog comments and deleted some Ajaxian-copiers that seemed like spam and marked others that were clearly spam as spam

[14:44:01.0000] <annevk42>
most were made on http://blog.whatwg.org/spelling-html5

[14:45:00.0000] <annevk42>
oh, I also fixed a link in one of markp's older posts on contentEditable since I got a bunch of errors logged on my server

[14:45:01.0000] <annevk42>
top 5 error this month according to the silly statistics software that came with DreamHost

[14:55:00.0000] <annevk42>
/me changes topic to 'WHATWG: http://www.whatwg.org/ -- logs: http://krijnhoetmer.nl/irc-logs/ -- stats: http://gavinsharp.com/irc/whatwg.html -- Please leave your sense of logic at the door, thanks!'

[15:03:00.0000] <jgraham>
gah, Hixie is disconnected

[15:03:01.0000] <annevk42>
anarchy

[15:03:02.0000] <annevk42>
oh wait, that's nothing new :p

[15:04:00.0000] <jgraham>
Anarchy in the WHATWG. Sounds like a fun punk album

[15:05:00.0000] <annevk42>
/me feels another boring last week post coming up

[15:07:00.0000] <jgraham>
Is there another kind?

[15:07:01.0000] <annevk42>
not lately anyway

[15:09:00.0000] <jgraham>
Well if he/she/it wants something else to write about, the end of neutral milk hotel's "On Avery Island" is rather nice

[15:11:00.0000] <jgraham>
Seem like a more interesting thing to tell the world than what goes on in here anyway

[15:13:00.0000] <annevk42>
shouldn't we pretend that what goes on here is the most awesome? seems to be better fit the image the narrator tries to convey

[15:14:00.0000] <jgraham>
Dunno if I can pull off pretense at that level

[15:15:00.0000] <TabAtkins>
We also probably shouldn't cater to the delusions of the mentally ill.

[15:34:00.0000] <TabAtkins>
sicking: Microformats are not a specification of metadata vocabularies to be implemented by RDFa/Microdata/etc.  They're a competing format based mostly on use of @class.

[15:35:00.0000] <sicking>
TabAtkins: depends on your definition of microformats i guess

[15:35:01.0000] <TabAtkins>
I'm going with the microformats.org.  ^_^

[15:36:00.0000] <TabAtkins>
The only difference is that microformats have to carry around their parsing rules as well, while RDFa and Microdata have general parsing rules that are used by all vocabs.

[15:36:01.0000] <annevk42>
microformats.org is the namespace used in some of the splitted out Microdata vocabularies though

[15:36:02.0000] <annevk42>
so maybe you wanna read up on that

[15:36:03.0000] <sicking>
TabAtkins: from front page "microformats are a set of simple, open data formats"

[15:37:00.0000] <Philip`>
Maybe microdata should be marketed as JSONa (since it's basically embedding trees of strings into HTML attributes)

[15:37:01.0000] <TabAtkins>
Hmm, ok, point to you guys.  The Microformats community *does* define a number of vocabularies.  Microformats is *also* a competing syntax for embedding said vocabularies.

[15:38:00.0000] <sicking>
i'd say HTML4 class+rel+"a few more" are a competing syntax

[15:38:01.0000] <TabAtkins>
sicking: And that combination is precisely what is used by Microformats.  It's not an arbitrary collection of stuff that people just happen to sometimes use to encode microformat vocabs.

[15:42:00.0000] <TabAtkins>
Is there any way to copy text out of a putty shell without doing the stupid "Copy All to Clipboard" option?

[15:42:01.0000] <TabAtkins>
I keep accidentally Ctrl-C-ing and aborting whatever program I'm running.  >_<

[15:42:02.0000] <Philip`>
TabAtkins: I thought it copied automatically when you select text

[15:43:00.0000] <hober>
TabAtkins: microformats use the existing HTML extension mechanisms; microdata is an addition to HTML's extension mechanisms. When microdata ships, microformats can naturally use microdata's attributes as they currently use class

[15:43:01.0000] <hober>
which is to say, microdata & microformats are on different layers.

[15:43:02.0000] <TabAtkins>
hober: Okay, makes sense.  That would probably be a very nice net win, actually, so that microformats don't have to define their own parsing rules.

[15:44:00.0000] <TabAtkins>
Philip`: ... ... ... WHY DID I NEVER KNOW THIS?

[15:44:01.0000] <Philip`>
TabAtkins: Because you never tried to select some text and then right-click to open a context menu to copy it

[15:45:00.0000] <TabAtkins>
No.  No I did not.

[15:45:01.0000] <Philip`>
which is how I discovered the copy feature and also the paste feature

[15:45:02.0000] <TabAtkins>
I know about pasting, somehow.  I just can't believe I never knew about copying.  Wow.


2009-10-20
[18:03:00.0000] <Hixie>
sweet mother of kittens

[18:03:01.0000] <Hixie>
i sure hope zcorpan and hsivonen are sure about this

[19:22:00.0000] <meoblast001>
HTML5 here?

[19:25:00.0000] <Hixie>
yep

[19:25:01.0000] <Hixie>
right here on the mantelpiece

[19:25:02.0000] <Hixie>
above our roaring fire

[19:25:03.0000] <Hixie>
do you like the frame?

[19:26:00.0000] <Hixie>
/me goes off to dinner

[19:28:00.0000] <meoblast001>
how do you loop audio

[19:28:01.0000] <meoblast001>
playcount won't do it

[19:28:02.0000] <meoblast001>
i have Firefox

[19:28:03.0000] <meoblast001>
for GNU/Linux

[19:32:00.0000] <MikeSmith>
meoblast001: loop attribute?

[19:32:01.0000] <meoblast001>
there's one of those?

[19:32:02.0000] <meoblast001>
i only saw playcount

[19:33:00.0000] <MikeSmith>
meoblast001: I think playcount was removed from the spec long ago

[19:33:01.0000] <meoblast001>
loop is not doing anything

[19:34:00.0000] <kinetik>
the loop attribute isn't implemented in firefox yet (bug 449157)

[19:34:01.0000] <meoblast001>
wtf :/

[19:34:02.0000] <kinetik>
you can get roughly the same behaviour by calling play() when the ended event fires

[19:35:00.0000] <kinetik>
in script

[20:04:00.0000] <AryehGregor>
Hixie, you didn't think it was reasonable for a standard to permit something like X-UA-Compatible where there wouldn't be multiple interoperable implementations in practice.  But isn't <object> a lot like that?  An HTML page including Flash via <object> is valid HTML, right?

[20:31:00.0000] <meoblast001>
kinetik: how do you "play()"?

[20:32:00.0000] <meoblast001>
javascript?

[20:32:01.0000] <kinetik>
yes, call play() on the element in script

[20:33:00.0000] <meoblast001>
kinetik: document.getElementById('object').play();?

[20:33:01.0000] <meoblast001>
and the event is onabort?

[20:34:00.0000] <kinetik>
the event is 'ended'

[20:35:00.0000] <meoblast001>
kinetik: onended?

[20:35:01.0000] <roc>
you can just write <video ... onended="event.target.play()">

[23:12:00.0000] <zcorpan_>
"script data double escaped dash dash state"

[23:14:00.0000] <zcorpan_>
could we rename it to script data double escaped double dash state? :)

[23:29:00.0000] <zcorpan_>
script data states outnumber the doctype states

[23:35:00.0000] <zcorpan_>
does the abnf allow things like <!--<!--<script><script></script>-->?

[23:36:00.0000] <Hixie>
i hope so

[23:36:01.0000] <Hixie>
shouldn't it?

[23:36:02.0000] <Hixie>
jgraham: dude, pms is being really slow

[23:36:03.0000] <zcorpan_>
yeah it should

[23:37:00.0000] <zcorpan_>
on a first pass reading, the spec looks good

[23:37:01.0000] <Hixie>
cool

[23:38:00.0000] <zcorpan_>
maybe there should be some more cases that should trigger a parse error, though i didn't think about that while reading

[23:39:00.0000] <Hixie>
i think we don't need any parse errors, given the script abnf nonsense

[23:39:01.0000] <zcorpan_>
ah, the abnf applies to conformance checkers?

[23:40:00.0000] <Hixie>
it's intended to

[23:40:01.0000] <Hixie>
if i missed the "must", let me know

[23:41:00.0000] <zcorpan_>
i thought it was in the syntax section at first. just read the diff with not enough context :)

[23:47:00.0000] <MikeSmith>
tyoshino: you around?

[23:48:00.0000] <zcorpan_>
sicking: i've filed a bug on removing tags() in opera

[23:48:01.0000] <MikeSmith>
ukai: ping

[23:48:02.0000] <sicking>
zcorpan_: yay, sweet!

[23:52:00.0000] <tyoshino>
hi

[23:52:01.0000] <tyoshino>
MIkeSmith: hi

[23:56:00.0000] <ukai>
MikeSmith: hi

[00:12:00.0000] <sirdarckcat>
hey! one question

[00:12:01.0000] <sirdarckcat>
<script src="something.js"></script><link href="something.css" rel="stylesheet" type="text/css">

[00:13:00.0000] <sirdarckcat>
should the browser start the request to something.css before executing the JS of something.js?

[00:13:01.0000] <sirdarckcat>
since something.js may have document.write("<plaintext>") or whatever

[00:14:00.0000] <hsivonen>
annevk: no, I didn't get around to filing a bug about <base>. I'll file one now.

[00:15:00.0000] <hsivonen>
annevk: I see you filed one already. Thanks

[00:16:00.0000] <hsivonen>
sirdarckcat: Gecko will start requesting the style sheet but may not end up applying it

[00:16:01.0000] <sirdarckcat>
:(

[00:16:02.0000] <sirdarckcat>
also IE

[00:17:00.0000] <sirdarckcat>
and chrome

[00:17:01.0000] <sirdarckcat>
opera and safari wont

[00:17:02.0000] <hsivonen>
sirdarckcat: however, you should not rely on script-set cookies to take effect for requesting later resources on the same page

[00:17:03.0000] <hsivonen>
sirdarckcat: why :-( ? It's an awesome optimization.

[00:18:00.0000] <hsivonen>
I'm surprised if Safari doesn't prefetch, too, in that case

[00:19:00.0000] <sirdarckcat>
because I was relying that was not going to happen

[00:19:01.0000] <sirdarckcat>
there are several reasons but

[00:19:02.0000] <hsivonen>
it would also be odd if Opera didn't start prefetching in order to be competitive perf-wise

[00:20:00.0000] <sirdarckcat>
but how the browser knows?

[00:20:01.0000] <sirdarckcat>
what if the script makes a

[00:20:02.0000] <sirdarckcat>
document.write(base)

[00:20:03.0000] <sirdarckcat>
well

[00:20:04.0000] <sirdarckcat>
<base href="">

[00:20:05.0000] <sirdarckcat>
they dont know the real location

[00:20:06.0000] <sirdarckcat>
"yet"

[00:21:00.0000] <sirdarckcat>
I'll try to make some tests, maybe I can disable it with a <plaintext> or something like that

[00:22:00.0000] <zcorpan_>
how did you rely on it not going to happen?

[00:23:00.0000] <sirdarckcat>
since I dont want the referrer to be leaked

[00:23:01.0000] <sirdarckcat>
anyway, I think I can fix it with a <plaintext> after the <script>

[00:27:00.0000] <zcorpan_>
do you have document.write('<plaintext>') now?

[00:28:00.0000] <sirdarckcat>
yes

[00:28:01.0000] <sirdarckcat>
<script src="..."></script><script>document.write("<plaintext>")</script>

[00:29:00.0000] <sirdarckcat>
anyway, is this standarized or is just a defacto optimisation?

[00:29:01.0000] <zcorpan_>
defacto

[00:29:02.0000] <sirdarckcat>
hmm I see

[00:29:03.0000] <sirdarckcat>
well.. I see why browsers would like to do it

[00:29:04.0000] <sirdarckcat>
:) thanks zcorpan

[00:29:05.0000] <sirdarckcat>
and hsivoben

[00:29:06.0000] <sirdarckcat>
hsivonen

[00:29:07.0000] <hsivonen>
sirdarckcat: if you have <base> at all, Gecko just makes bogus speculative GETs

[00:30:00.0000] <hsivonen>
sirdarckcat: GET is idempotent and safe, so it only wastes bits

[00:30:01.0000] <hsivonen>
if you want your site to be fast, don't use <base>

[00:30:02.0000] <sirdarckcat>
oh, I dont want to use base

[00:30:03.0000] <hsivonen>
(I might fix that some day, but it's not a priority.)

[00:30:04.0000] <sirdarckcat>
but I should support sites that use it

[00:31:00.0000] <sirdarckcat>
there are a lot of things that shouldnt exist, multiple <base> tags being one of them

[00:31:01.0000] <hsivonen>
Support for multiple <base> tags is on its way out, IIRC.

[00:31:02.0000] <sirdarckcat>
haha its gonna be standard?

[00:31:03.0000] <sirdarckcat>
no way!

[00:32:00.0000] <sirdarckcat>
xDDD

[00:32:01.0000] <sirdarckcat>
that sucks

[00:32:02.0000] <sirdarckcat>
well

[00:32:03.0000] <sirdarckcat>
what problem does that solve?

[00:32:04.0000] <sirdarckcat>
I can only think on xss

[00:32:05.0000] <zcorpan_>
ie only uses the first <base>

[00:32:06.0000] <sirdarckcat>
yeah

[00:32:07.0000] <zcorpan_>
html5 matches ie

[00:32:08.0000] <sirdarckcat>
I think that's the way to go

[00:32:09.0000] <sirdarckcat>
yeah I agree

[00:32:10.0000] <sirdarckcat>
but then, what do u mean with

[00:33:00.0000] <sirdarckcat>
oh

[00:33:01.0000] <sirdarckcat>
wait

[00:33:02.0000] <sirdarckcat>
wait

[00:33:03.0000] <sirdarckcat>
you said

[00:33:04.0000] <hsivonen>
zcorpan_: I think HTML5 is silent ATM

[00:33:05.0000] <sirdarckcat>
"on its way out"

[00:33:06.0000] <sirdarckcat>
ohhh sorry

[00:33:07.0000] <sirdarckcat>
haha, I misunderstood u

[00:33:08.0000] <zcorpan_>
hsivonen: no it isn't :)

[00:33:09.0000] <sirdarckcat>
:) 

[00:33:10.0000] <hsivonen>
zcorpan_: where's the normative text?

[00:33:11.0000] <hsivonen>
zcorpan_: I only saw an informative note

[00:34:00.0000] <sirdarckcat>
I filled a bug on the multiple base tags on webkit&mozilla 2 days ago

[00:34:01.0000] <sirdarckcat>
https://bugzilla.mozilla.org/show_bug.cgi?id=522658

[00:34:02.0000] <zcorpan_>
oh maybe it was removed as part of URLs

[00:35:00.0000] <sirdarckcat>
informative note means its optional?

[00:35:01.0000] <hsivonen>
sirdarckcat: yeah, the spec bug exists because I was unable to determine the spec-compliance status of the Gecko bug you filed

[00:35:02.0000] <hsivonen>
sirdarckcat: informative note means the editor goofed

[00:36:00.0000] <zcorpan_>
hsivonen: "The document base URL of a Document object is the document base Web address as defined by the Web addresses specification. [WEBADDRESSES]"

[00:37:00.0000] <sirdarckcat>
hmm mmm

[00:37:01.0000] <sirdarckcat>
Contexts in which this element may be used:

[00:37:02.0000] <sirdarckcat>
In a head element containing no other base elements.

[00:37:03.0000] <sirdarckcat>
whats the informative note?

[00:37:04.0000] <sirdarckcat>
http://www.whatwg.org/specs/web-apps/current-work/#the-base-element

[00:37:05.0000] <zcorpan_>
the note is "Note: If there are multiple base elements with href attributes, all but the first are ignored."

[00:38:00.0000] <hsivonen>
zcorpan_: does [WEBADDRESSES] deal with multiple <base>s and script-inserted bases?

[00:38:01.0000] <sirdarckcat>
AH RIGHT

[00:39:00.0000] <zcorpan_>
hsivonen: yes. "Otherwise, let w be the value of the href attribute of the first such element."

[00:39:01.0000] <hsivonen>
zcorpan_: oh ok. thanks

[00:40:00.0000] <hsivonen>
ok so Hixie didn't good. sorry. but it would sure be clearer to have the <base> processing model in HTML5

[00:40:01.0000] <sirdarckcat>
mmm well webkit says they wont fix it unless gecko does it.. =/

[00:40:02.0000] <sirdarckcat>
https://bugs.webkit.org/show_bug.cgi?id=30432#c3

[00:40:03.0000] <sirdarckcat>
anyway

[00:40:04.0000] <sirdarckcat>
maybe

[00:40:05.0000] <zcorpan_>
webaddress doesn't define what "the head element" is

[00:46:00.0000] <hsivonen>
duped the bug against https://bugzilla.mozilla.org/show_bug.cgi?id=515401 ; see sicking's comment #13 there.

[01:03:00.0000] <sirdarckcat>
@hsivone thnx

[01:03:01.0000] <sirdarckcat>
what's the meaning of Whiteboard:  [good first bug]  ?

[01:17:00.0000] <sirdarckcat>
oh nvm, http://www-archive.mozilla.org/contribute/hacking/first-bugs/

[01:28:00.0000] <erlehmann>
more HTML5 on your console browser, coming soon: http://img3.imageshack.us/img3/1247/bildschirmfoto2eb.png

[01:30:00.0000] <zcorpan_>
erlehmann: cool

[01:30:01.0000] <zcorpan_>
erlehmann: does it use an html5 parser?

[01:31:00.0000] <erlehmann>
zcorpan_, haha, no. the source is a mess, as far as i can tell.

[01:31:01.0000] <jgraham>
Hixie: Is pms being more reliable? I made a small change that may improve reliability at the expense of a little speed, but it may not have helped

[01:31:02.0000] <jgraham>
erlehmann: Those things are not mutually exclusive...

[01:31:03.0000] <zcorpan_>
erlehmann: do you support <video><source src>?

[01:32:00.0000] <erlehmann>
zcorpan_, no. there are three bugs i will probably fix in the next days.

[01:32:01.0000] <Hixie>
jgraham: it was significantly slower earlier, but yes, it was eventually completing. However, the slowness was for everything, not just the W3C copy.

[01:32:02.0000] <erlehmann>
first, no <source> element parsing

[01:32:03.0000] <Hixie>
jgraham: haven't tried in the last few hours.

[01:32:04.0000] <erlehmann>
second, element contents are still displayed

[01:32:05.0000] <jgraham>
Hixie: Might just have been a server problem then

[01:33:00.0000] <erlehmann>
third, the poster attribute. inserting a fake image before the video link will do it.

[01:33:01.0000] <Hixie>
jgraham: yeah

[01:33:02.0000] <hsivonen>
years ago, when I still thought XHTML was the Right Thing for the Web, I wanted to add expat to Lynx as a weekend hack

[01:33:03.0000] <erlehmann>
zcorpan_, if you want to add the javascript interface for media elements in elinks, good luck with that :D

[01:34:00.0000] <zcorpan_>
erlehmann: heh

[01:34:01.0000] <hsivonen>
I looked at the source and it was a bunch of undocumented pointer magic

[01:34:02.0000] <hsivonen>
then I turned to links

[01:34:03.0000] <hsivonen>
and it looked similar

[01:34:04.0000] <hsivonen>
so I gave up

[01:34:05.0000] <hsivonen>
maybe elinks is better now

[01:35:00.0000] <Hixie>
hsivonen: i was hoping one day to make an aalib GFX for Gecko

[01:35:01.0000] <zcorpan_>
would be cool to asciify the rendered output of a modern rendering engine

[01:35:02.0000] <erlehmann>
Hixie, better make embedded aalib rendering for elinks ;)

[01:36:00.0000] <zcorpan_>
with <video> playing as ascii art

[01:36:01.0000] <hsivonen>
Hixie: these days, I think TTY browsers should put a TTY presentation layer on a mainstead browser engine impl

[01:36:02.0000] <erlehmann>
i think that too btw

[01:36:03.0000] <Hixie>
yeah, i don't think using elinks would be worth it

[01:36:04.0000] <Hixie>
you want all the CSS support, etc

[01:38:00.0000] <erlehmann>
i thought elinks does some CSS

[01:40:00.0000] <zcorpan_>
the html5 doctors are a bit slow at fixing their templates

[01:40:01.0000] <zcorpan_>
wonder if someone can help

[02:16:00.0000] <jgraham>
So one reason that clashing html/non-html tag names in foreign content is bad is the need for the breaking out of foreign content mode stuff. Were the other reasons mostly increased implementation complexity?

[02:17:00.0000] <zcorpan_>
v=document.createElement('video'); v.src='foo'; v.load();

[02:17:01.0000] <zcorpan_>
will fire an emptied event, right?

[02:17:02.0000] <erlehmann>
zcorpan_, elinks uses spidermonkey, so if you can get that to work, i't would be cool

[02:18:00.0000] <zcorpan_>
because setting src invokes the load algorithm, which invokes resource selection, which sets networkState to NETWORK_NO_SOURCE

[02:19:00.0000] <zcorpan_>
then calling load() will run the load algorithm again, see that networkState is not NETWORK_EMPTY, and thus fire 'emptied'

[02:21:00.0000] <zcorpan_>
seems a bit annoying

[02:27:00.0000] <mikekelly>
hi fans

[02:28:00.0000] <zcorpan_>
foolip: ping

[02:28:01.0000] <mikekelly>
are there any javascript/browser geniuses around?

[02:28:02.0000] <mikekelly>
:P

[02:30:00.0000] <mikekelly>
I need to figure out if it is possible to shift browser location to a new URL and add custom headers to the request

[02:30:01.0000] <Philip`>
mikekelly: Use XHR and then document.write the responseText, maybe?

[02:30:02.0000] <Philip`>
/me doesn't know what else could work

[02:31:00.0000] <mikekelly>
hmm

[02:31:01.0000] <mikekelly>
presumably that doesn't work for docs like pdf, or images

[02:31:02.0000] <Philip`>
Use XHR and then convert the responseText into a data: URI and load that, maybe

[02:32:00.0000] <Philip`>
That might not work at all

[02:36:00.0000] <zcorpan_>
so should we limit document.all to quirks mode?

[02:49:00.0000] <jgraham>
zcorpan_: It seems like it might be OK

[02:50:00.0000] <jgraham>
I mean it is already such a disaster that no one should be using it. And Mozilla seem to get away with it

[02:50:01.0000] <jgraham>
s/using it/using it in new code/

[02:51:00.0000] <jgraham>
The main arguments against are: it is added complexity which is bad, and there is a possibility that other browsers will have more compat problems than Mozilla (e.g. because they get a differnt codpath due to a different level of IE emulation)

[02:53:00.0000] <zcorpan_>
yeah, we probably need to investigate the compat situation

[02:54:00.0000] <zcorpan_>
opera more often gets to the ie code path than mozilla

[02:54:01.0000] <zcorpan_>
so if we remove document.all from standards mode, sites might break in opera but continue to work in ie and moz

[02:56:00.0000] <jgraham>
I guess the other fix is to emulate less of IE in Opera :)

[02:56:01.0000] <zcorpan_>
sure

[02:57:00.0000] <Hixie>
p4200

[02:57:01.0000] <Hixie>
er

[02:57:02.0000] <Hixie>
r4200

[02:58:00.0000] <jgraham>
But yes it would be good to get an idea of compat 

[02:58:01.0000] <jgraham>
Hixie: just for the nice number?

[02:59:00.0000] <zcorpan_>
we should rename the spec to HTML4200

[03:00:00.0000] <zcorpan_>
and change it every revision

[03:00:01.0000] <Philip`>
That would be a good way to demonstrate the meaninglessness of version numbers

[03:01:00.0000] <erlehmann>
<DOCTYPE html4321> :D

[03:01:01.0000] <Hixie>
jgraham: yeah

[03:01:02.0000] <jgraham>
Ah, how I pine for the days of HTML4198

[03:02:00.0000] <Hixie>
i'm amused that the ietf people keep being shocked that websocket is at r48

[03:02:01.0000] <Hixie>
48! shocking! such a high number of revisions!

[03:03:00.0000] <zcorpan_>
/me hears Hixie go lalala complete.html gets like 48 revisions a day

[03:05:00.0000] <erlehmann>
i guess charces stross was wrong about the IETF being capable of coping with the coming singularity

[03:05:01.0000] <jgraham>
/me feels zcorpan might be immortalised in the html5lib code for the Script data double escaped dash dash state

[03:05:02.0000] <foolip|work>
zcorpan_: you rang?

[03:06:00.0000] <zcorpan_>
foolip|work: what do you think about the load algorithm being invoked twice in v=document.createElement('video'); v.src='foo'; v.load(); ?

[03:06:01.0000] <zcorpan_>
foolip|work: and thus firing 'emptied' afaict

[03:07:00.0000] <erlehmann>
"Rachel grinned humorlessly as she held up a warrant card. Her head, surrounded by the UN three-W logo on a background of stars."

[03:07:01.0000] <foolip|work>
zcorpan_: don't call load() ?

[03:07:02.0000] <erlehmann>
in the next revision of iron sunrise it will be a green question mark, i bet ;)

[03:07:03.0000] <webben>
erlehmann: It does (do some CSS).

[03:08:00.0000] <zcorpan_>
foolip|work: sure but then it wouldn't load in older browsers

[03:09:00.0000] <annevk>
seems like a short term problem not worth fixing

[03:10:00.0000] <zcorpan_>
v=document.createElement('video'); v.src='foo'; v.load(); doesn't look wrong, so people will probably do it even though load() isn't necessary, and would maybe be surprised when it fires an 'emptied' event

[03:11:00.0000] <foolip|work>
zcorpan_: I'm not sure this is a problem, why would anyone listen to the emptied event to begin with?

[03:12:00.0000] <zcorpan_>
i don't know. what's the use case for the event?

[03:13:00.0000] <foolip|work>
beats me :)

[03:15:00.0000] <zcorpan_>
/me files a spec bug

[03:19:00.0000] <foolip|work>
Hixie: re: http://www.w3.org/Bugs/Public/show_bug.cgi?id=7843 no other event on media elements can be trusted to be in sync with the state of the element, why would it be important for abort or emptied?

[03:21:00.0000] <hsivonen>
hmm. type="x-shader/x-fragment"

[03:21:01.0000] <hsivonen>
on <script>

[03:22:00.0000] <foolip|work>
especially since the state of the element in 'abort' or emptied' is reset, there's nothing interesting for the script to check on the element anyway

[03:22:01.0000] <hsivonen>
maybe in the future I should special-case those not to create speculative futures

[03:22:02.0000] <zcorpan_>
hsivonen: we probably need an official type that authors can use for their script data blocks

[03:22:03.0000] <Hixie>
foolip|work: i dunno, maybe. i'm scared of race conditions. feel free to reopen the bug.

[03:23:00.0000] <foolip|work>
Hixie: ok, will do :)

[03:31:00.0000] <Hixie>
foolip|work: while you're here, http://www.w3.org/Bugs/Public/show_bug.cgi?id=7844

[03:32:00.0000] <zcorpan_>
Hixie: i filed that bug

[03:33:00.0000] <Hixie>
zcorpan_: cool, you can answer my question too then :-)

[03:33:01.0000] <Hixie>
anyway, my question is: do we want media elements to be live after being created?

[03:33:02.0000] <Hixie>
it seems weird that one wouldn't be able to construct an <audio> while it's dead, and invoke the loading later

[03:34:00.0000] <Philip`>
hsivonen: Shouldn't you special case text/javascript and similar things that will get executed, rather than special-casing a few of the infinitely many types that won't get executed?

[03:35:00.0000] <hsivonen>
Philip`: Gecko has this extensibility thing going...

[03:36:00.0000] <hsivonen>
Philip`: so the parser would have to know that it's doing exactly the same comparisons as the script loader when Python etc. is loaded

[03:36:01.0000] <hsivonen>
and IIRC, Python is chrome-only, etc.

[03:36:02.0000] <hsivonen>
and the parser doesn't know if it is parsing a chrome doc, etc.

[03:37:00.0000] <Philip`>
hsivonen: I thought speculative parsing was only particularly useful for high-latency web documents, so you can pre-fetch resources, and would have minimal effect in chrome

[03:37:01.0000] <zcorpan_>
Hixie: hmm, not sure when one would want to have a dead <audio>

[03:38:00.0000] <Hixie>
zcorpan_: precreating a number of videos, say, so they can be inserted when desired? dunno

[03:38:01.0000] <zcorpan_>
maybe

[03:39:00.0000] <zcorpan_>
but you'd have to use <source> as the spec is now

[03:40:00.0000] <zcorpan_>
it's not the most obvious thing that it loads automatically when you set src and when you insert a <source> when it's in a document but not when you insert a <source> when it's not in a document

[03:40:01.0000] <Hixie>
yeah i agree we should make that consistent

[03:41:00.0000] <zcorpan_>
if there's a need for dead media elements, maybe a new attribute or something?

[03:42:00.0000] <zcorpan_>
<video loadondemand>?

[03:42:01.0000] <Hixie>
it's not important enough to have its own feature, imho

[03:43:00.0000] <zcorpan_>
yeah

[03:58:00.0000] <Hixie>
what should location.search do in data: pages...?

[04:04:00.0000] <Lachy>
are data URLs not allowed to have query components?

[04:04:01.0000] <Hixie>
no

[04:04:02.0000] <Hixie>
nor pathname

[04:04:03.0000] <Hixie>
looks like i just overlooked this

[04:04:04.0000] <Hixie>
i'll make them just ignore .pathname and .search

[04:04:05.0000] <Lachy>
then do what Mozilla does and return an empty string

[04:05:00.0000] <Hixie>
yeah

[04:07:00.0000] <Lachy>
data:text/html,<!DOCTYPE html><script>if(location.search===""){document.write("PASS");}else{document.write(location.search)}</script><!--?FAIL

[04:08:00.0000] <Lachy>
Opera outputs "?FAIL"

[04:08:01.0000] <Lachy>
woah, Safari outputs "?FAIL?FAIL"

[04:08:02.0000] <Hixie>
yeah i tested the browsers before asking :-)

[04:09:00.0000] <Lachy>
ok

[04:09:01.0000] <Lachy>
oh, Safari does that cause it reparses the comment

[04:10:00.0000] <Hixie>
reparses?

[04:11:00.0000] <Lachy>
yeah, when it sees <!--XXX with no closing -->, doesn't it do reparsing to handle the error?

[04:11:01.0000] <Hixie>
why would that make it say ?FAIL?FAIL ?

[04:11:02.0000] <Hixie>
it doesn't affect the URL

[04:12:00.0000] <Lachy>
because the first one is the result of the document.write(), the latter is a result of it actually being part of the page content.

[04:12:01.0000] <Lachy>
the result is the same as doing this: <script>document.write("?FAIL");</script>?FAIL

[04:13:00.0000] <Hixie>
oh, right

[04:20:00.0000] <Hixie>
is "decentralized extension" newspeak for non-standard extension? http://www.w3.org/Bugs/Public/show_bug.cgi?id=7855

[04:32:00.0000] <zcorpan_>
a standard is centralized, so it probably follows that non-standard is decentralized

[04:49:00.0000] <zcorpan_>
hmm

[04:49:01.0000] <zcorpan_>
if a browser supports video formats A and B

[04:49:02.0000] <zcorpan_>
and a video using format A is labeled as content-type: B

[04:50:00.0000] <zcorpan_>
should the video be played?

[04:53:00.0000] <zcorpan_>
i think the spec says yes, because the algorithm only fails if the mime type is unsupported or the video can't be decoded

[04:53:01.0000] <annevk>
that depends on whether you want to enforce some additional pedantic check

[04:55:00.0000] <Hixie>
yes, the spec says that the MIME type has to be supported, but it doesn't say the MIME type has to match the content

[04:56:00.0000] <zcorpan_>
yep

[04:56:01.0000] <Hixie>
wasn't really what i meant to spec, but i don't propose changing it :-)

[04:57:00.0000] <zcorpan_>
i think it's fine

[04:57:01.0000] <zcorpan_>
makes it easier to test, too

[04:58:00.0000] <zcorpan_>
also matches how <img> works

[04:58:01.0000] <zcorpan_>
except for SVG vs PNG i guess

[04:59:00.0000] <zcorpan_>
haven't tested though

[05:00:00.0000] <Philip`>
zcorpan_: Why are standards centralized?

[05:00:01.0000] <Philip`>
It seems quite common for independent groups to spring up and make standards, without being part of the existing centralized standards organisations

[05:01:00.0000] <zcorpan_>
maybe

[05:06:00.0000] <jgraham>
Why are existing organisations making standards centralized but new organisations doing the same thing decentralised?

[05:06:01.0000] <jgraham>
e.g. I wouldn't describe what the WHATWG did as "decentralised extensibility"

[05:09:00.0000] <Philip`>
They become centres of standardisation after existing for a while and being successful

[05:09:01.0000] <Philip`>
jgraham: That's because HTML didn't support distributed extensibility, and the realistic option was to start from scratch instead of extending it

[05:10:00.0000] <jgraham>
Philip`: I doubt we would have had {http://whatwg.org/ns/webapps}video even if it had been possible

[05:11:00.0000] <Philip`>
In the magical world of distributed extensibility, I suppose the idea is some random group of people could form a WHYWG and define a video element without needing to get approval from existing standard organisations (though still needing cooperation from browser vendors)

[05:12:00.0000] <Philip`>
but presumably that'd only work if features using the extension mechanism were as good as 'native' non-extension features

[05:13:00.0000] <Philip`>
(and it wouldn't work if extension features had to use complex namespaces while native feature didn't)

[05:15:00.0000] <jgraham>
Maybe fans of namespaces in html should set up the Web Hypertext Extensibility Namespaces Working Group

[05:21:00.0000] <zcorpan_>
foolip: reopened the bug and gave you permissions to edit bugs and give other people permissions

[05:26:00.0000] <gsnedders|work>
jgraham: You aware that html5lib.parse("foo", "etree") will never work?

[05:30:00.0000] <zcorpan_>
application/octet-stream; codecs=foobar

[05:30:01.0000] <zcorpan_>
is that a type that the ua knows it cannot render?

[05:37:00.0000] <zcorpan_>
Hixie: does the term "MIME type" include parameters or not?

[05:40:00.0000] <zcorpan_>
"valid MIME type" seems to include parameters, so i guess "MIME type" does too

[05:45:00.0000] <hsivonen>
how does WebKit deal with https://bugzilla.mozilla.org/show_bug.cgi?id=510063 ?

[05:46:00.0000] <zcorpan_>
hsivonen: by not foster parenting forms

[05:49:00.0000] <hsivonen>
zcorpan_: does that lead to bad craziness?

[05:49:01.0000] <hsivonen>
zcorpan_: if not, why doesn't HTML5 copy WebKit here?

[05:49:02.0000] <zcorpan_>
i guess Hixie didn't think it was needed for compat and didn't want to add unneeded complexity

[05:49:03.0000] <zcorpan_>
but clearly it's a bug in html5

[05:50:00.0000] <zcorpan_>
old gecko also doesn't foster parent forms

[05:58:00.0000] <zcorpan_>
maybe the quirks mode form margin could be zapped, but presumably it's there for compat with content and not just a leftover from netscape?

[05:59:00.0000] <hsivonen>
I have no idea

[06:00:00.0000] <zcorpan_>
hmm opera has the margin in standards mode too

[06:01:00.0000] <zcorpan_>
does ie have the margin in standards mode?

[06:19:00.0000] <hsivonen>
/me wonders if Opera does the reloading charset switch in mid-parse

[06:25:00.0000] <annevk>
should createHTMLDocument talk about quirks mode?

[06:26:00.0000] <annevk>
or is that implied from createDocument() somehow?

[06:26:01.0000] <gsnedders|work>
I thought the spec said that all documents were by default in no-quirks

[06:26:02.0000] <gsnedders|work>
So unless it is explicitly set to quirks/limited-quirks, it's in no-quirks

[06:26:03.0000] <hsivonen>
gsnedders|work is right

[06:27:00.0000] <hsivonen>
an informative note wouldn't hurt, though

[06:39:00.0000] <annevk>
fair enough

[06:41:00.0000] <zcorpan_>
hsivonen: http://simon.html5.org/test/html/parsing/encoding/charset-reload-2k.htm http://simon.html5.org/test/html/parsing/encoding/charset-reload-200k.htm 

[06:41:01.0000] <zcorpan_>
apparently we don't reload, we just give up trying to find the encoding at some point

[06:42:00.0000] <zcorpan_>
possibly based on a timer, because i needed more bytes when testing locally

[06:42:01.0000] <zcorpan_>
that or my test is bogus

[06:43:00.0000] <annevk>
Hixie, onload can also be specified for a lot of elements besides body

[06:43:01.0000] <hsivonen>
ok. so Opera doesn't reparse, WebKit doesn't reparse

[06:43:02.0000] <hsivonen>
does IE reparse?

[06:43:03.0000] <annevk>
(same for other such restricted elements)

[06:43:04.0000] <zcorpan_>
ie reparses

[06:44:00.0000] <hsivonen>
I've spent way too much time tweaking reparsing

[06:47:00.0000] <zcorpan_>
but webkit doesn't give up trying to find the encoding, or does it?

[06:47:01.0000] <hsivonen>
IIRC, WebKit prescans 1KB and that's it

[06:48:00.0000] <zcorpan_>
i get an Ђ in chrome with a meta after 2MB

[06:49:00.0000] <hsivonen>
oh

[06:49:01.0000] <hsivonen>
I wonder if they write the charset to the cache entry like Gecko does

[07:29:00.0000] <TabAtkins>
Can anyone give an estimate of how much time is required, on a modern website, to download + parse the page, versus downloading all linked resources, execute scripts, apply css, and render?

[07:29:01.0000] <TabAtkins>
Intuitively I'd expect it to be a very small part of the overall time.

[07:29:02.0000] <gsnedders|work>
/me points out that some resources block parsing

[07:29:03.0000] <Philip`>
What's a modern website?

[07:29:04.0000] <Philip`>
You can't parse the page without executing scripts anyway, since modern websites use document.write

[07:29:05.0000] <gsnedders|work>
(if you ignore the parser being blocked by other resources, then it's almost no cost at all)

[07:29:06.0000] <TabAtkins>
gsnedders|work: Assume no scripts are run at all, so parsing can proceed without dealing with that (as happens when an XHR is parsed into responseXML).

[07:31:00.0000] <TabAtkins>
Would it be realistic to assume that, when XHR2 is implemented and HTML pages are allowed to be fetched and parsed into responseXML, scripts still won't run?

[07:31:01.0000] <jgraham>
Well downloading can be pretty slow of course

[07:31:02.0000] <Philip`>
You should be able to measure download times easily using any kind of web profiler

[07:31:03.0000] <jgraham>
Basically parsing is fast compared to layout

[07:31:04.0000] <gsnedders|work>
TabAtkins: HTML 5 takes a while to download and parse

[07:31:05.0000] <Philip`>
(and compare time for initial page download vs total download time)

[07:31:06.0000] <TabAtkins>
I think html5 is an edge case.  ^_^

[07:32:00.0000] <Philip`>
HTML5 only takes fractions of a second to parse, if I remember correctly

[07:32:01.0000] <jgraham>
(in most cases)

[07:32:02.0000] <jgraham>
(although you can probably create pathological testcases with mesnested formatting elements and so on)

[07:33:00.0000] <gsnedders|work>
Philip`: The download time is more than that, though

[07:33:01.0000] <Philip`>
gsnedders|work: That's why I said "parse", not "download" :-p

[07:33:02.0000] <jgraham>
gsnedders|work: Not if you load it from file:// pointing to a ram disk

[07:33:03.0000] <jgraham>
;p

[07:33:04.0000] <TabAtkins>
"Average" website being 30k-40k of page, at most.

[07:34:00.0000] <gsnedders|work>
jgraham: I don't normally keep HTML 5 on a RAM-disk backed place accessible by file:// ;P

[07:34:01.0000] <Philip`>
Load the HTML5 spec from a data: URL and then there's no IO at all

[07:34:02.0000] <jgraham>
gsnedders|work: Your problem, not mine ;)

[07:36:00.0000] <TabAtkins>
Hmm, I could have sworn YSlow gav a nice litte graph showing a visual timeline of the resource requests.  I can't find anything like it now.

[07:37:00.0000] <jgraham>
TabAtkins: Firebug and Web Inspector both do that don't they>

[07:37:01.0000] <jgraham>
s/>/?/

[07:37:02.0000] <TabAtkins>
Firebug doesn't do it by itself, but the YSlow extension used to.  I don't use Web Inspector.

[07:38:00.0000] <TabAtkins>
Oh, nm.  It was the Net panel.  My current system colors make it *really* hard to see disabled tabs.

[07:39:00.0000] <Philip`>
/me is fairly sure Firebug does it by itself

[07:45:00.0000] <TabAtkins>
Philip`: Yeah, you're right.  Okay, so it takes about 200ms to completely receive the request for my company's home page.

[07:47:00.0000] <TabAtkins>
Scripts *aren't* parsed currently when building responseXML's DOM in an XHR, right?

[07:48:00.0000] <TabAtkins>
(Can document.write() even be used in XML?)

[07:48:01.0000] <jgraham>
No

[07:49:00.0000] <TabAtkins>
Do you think scripts *will* be parsed once XHR2 is implemented and responseXML can contain HTML documents?

[07:53:00.0000] <gsnedders|work>
TabAtkins: Only in the case that they are HTML documents

[07:53:01.0000] <gsnedders|work>
(and not XML ones, of any sort, inc. XHTML ones)

[07:54:00.0000] <TabAtkins>
Yeah, assumed that much.  Hrm.

[07:54:01.0000] <TabAtkins>
I'm trying to gauge how much time it will take for an average document to be checked for the relevant #ids in my <a onlyreplace> proposal.

[07:55:00.0000] <gsnedders|work>
document.getElementsById is cheap.

[07:55:01.0000] <gsnedders|work>
Like, really cheap.

[07:55:02.0000] <TabAtkins>
Yeah, but you have to build the document first.

[07:55:03.0000] <gsnedders|work>
Yeah, so?

[07:55:04.0000] <TabAtkins>
I know it's nearly free, since you keep a hash of elements by id.

[07:55:05.0000] <TabAtkins>
So if there are slow scripts involved, it can still be slow to build the DOM and decide that you need to fail and render the whole page.

[07:56:00.0000] <TabAtkins>
From my data here, it doesn't look *that* slow, though.  The only slow scripts are the external customer tracking ones.  Everything else completes downloading in another 200ms.

[07:57:00.0000] <annevk>
my plan was to parse assuming scripts were disabled

[07:57:01.0000] <annevk>
i guess we could execute them but it seems weird

[07:58:00.0000] <TabAtkins>
Yay!  That was my hope.

[07:58:01.0000] <annevk>
we also don't want to load external resources and all

[07:58:02.0000] <TabAtkins>
k, so worst case there are some document.write() embedded directly in the page.  That shouldn't be at all significant.

[08:23:00.0000] <annevk>
argh, how do you write that :nth-child(4n+0) serializes to :nth-child(4n)

[08:24:00.0000] <TabAtkins>
Can you just outright state that +0 is dropped when there's a non-zero n term?

[08:25:00.0000] <annevk>
maybe, now I wonder what happens for 0n

[08:25:01.0000] <TabAtkins>
Preferably it would serialize to :nth-child(0).

[08:26:00.0000] <annevk>
Firefox does that

[08:26:01.0000] <annevk>
WebKit gives 0n

[08:26:02.0000] <annevk>
I guess Firefox wins

[08:26:03.0000] <TabAtkins>
What about 0n+2?

[08:26:04.0000] <annevk>
any idea why I can't have a space after n?

[08:26:05.0000] <annevk>
after ( I mean, e.g. in :not( [foo] )

[08:27:00.0000] <TabAtkins>
Huh?  You can't?  That's bizarre.  Sounds like a spec bug.

[08:27:01.0000] <annevk>
it fails to parse in WebKit/Opera

[08:27:02.0000] <annevk>
not in Gecko though

[08:27:03.0000] <TabAtkins>
How strange.

[08:27:04.0000] <TabAtkins>
I doubt that it's correct to fail there.

[08:27:05.0000] <annevk>
0n +2 gives 2 in Gecko

[08:28:00.0000] <annevk>
also gives 2 in Opera

[08:28:01.0000] <annevk>
Opera drops 0n on the floor

[08:28:02.0000] <annevk>
which might make sense because it never matches

[08:28:03.0000] <TabAtkins>
Yeah.

[08:28:04.0000] <TabAtkins>
I like that behavior.

[08:29:00.0000] <annevk>
WebKit also fails to parse for 0n+ 2 (note the space)

[08:29:01.0000] <annevk>
0n+2 gives 0n+2

[08:30:00.0000] <annevk>
leading and trailing whitespace is allowed per CSS

[08:31:00.0000] <TabAtkins>
Yeah, just an under-permissive parser there then.  Those need bugs.

[08:32:00.0000] <annevk>
odd becomes 2n+1

[08:32:01.0000] <annevk>
except in WebKit

[08:33:00.0000] <TabAtkins>
I forget - does n start at 0?

[08:33:01.0000] <annevk>
you found a spec bug

[08:33:02.0000] <TabAtkins>
Heh, ok.

[08:34:00.0000] <annevk>
the spec says 1, but the definition of odd/even assume 0

[08:34:01.0000] <annevk>
i think authors also assume 0

[08:34:02.0000] <TabAtkins>
I think everyone assumes 0, yeah.

[08:34:03.0000] <Lachy>
annevk, TabAtkins, you can't have spaces in :not( [foo] ) because a simple selector can't contain leading or trailing whitespace

[08:34:04.0000] <annevk>
TabAtkins, will you file a comment?

[08:34:05.0000] <TabAtkins>
annevk: Where do I do so?  Just the mailing list?

[08:34:06.0000] <annevk>
www-style

[08:35:00.0000] <annevk>
[css3-selectors] as subject

[08:35:01.0000] <Lachy>
oh, actually. The space says S* is allowed

[08:35:02.0000] <TabAtkins>
Yeah, I'll do so.  One moment.

[08:35:03.0000] <Lachy>
The *spec* says...

[08:35:04.0000] <annevk>
also for :not?

[08:35:05.0000] <annevk>
hmm

[08:36:00.0000] <Lachy>
yeah, it says:

[08:36:01.0000] <Lachy>
negation

[08:36:02.0000] <Lachy>
  : NOT S* negation_arg S* ')'

[08:36:03.0000] <annevk>
ah ok

[08:37:00.0000] <annevk>
I guess I should file a bug on 0 -> ignored/error

[08:37:01.0000] <TabAtkins>
Hmm, you sure that it's a spec bug, annevk?  It says that the index of the first element is 1, but that doesn't bear on the values used for n.

[08:38:00.0000] <annevk>
oh no, it's not

[08:38:01.0000] <annevk>
my bad

[08:38:02.0000] <TabAtkins>
Ah, but it *does* say that an+b matches the bth element in each group of a elements.  That's assuming 0-numbering.

[08:38:03.0000] <annevk>
though if you're writing an email now maybe you can bring up the :nth-child(0) issue

[08:38:04.0000] <TabAtkins>
Which then contradicts the "first element is 1" bit.

[08:38:05.0000] <annevk>
it also says "for a given positive integer or zero value of n"

[08:39:00.0000] <annevk>
I guess it should say that a/b cannot be both zero at the same time

[08:39:01.0000] <TabAtkins>
Hmm, I think it's fine if they are, as long as it's clear that it means "0", which doesn't match anything.

[08:40:00.0000] <annevk>
since it indicates an authoring error I think what Opera does (dropping the rule) makes more sense

[08:40:01.0000] <TabAtkins>
... :nth-child(0) *doesn't* match anything, right?  It shouldn't, per spec.

[08:42:00.0000] <TabAtkins>
Is there a difference between dropping it and just leaving it around as a non-matching rule?

[08:42:01.0000] <annevk>
yes

[08:43:00.0000] <annevk>
I thought you said CSS was easy? :p

[08:43:01.0000] <TabAtkins>
Arcana is never easy.  ^_^

[08:44:00.0000] <TabAtkins>
I guess the difference is in, say, :not(:nth-child(0))?

[08:44:01.0000] <annevk>
difference is in the CSSOM, it is in whether :nth-child(0), p {} will match p elements, etc.

[08:45:00.0000] <TabAtkins>
Oh, I assumed that a dropped rule didn't invalidate the whole block.

[08:46:00.0000] <MikeSmith>
it will be interesting to see how CSSOM progresses

[08:46:01.0000] <MikeSmith>
annevk: you planning specific CSSOM discussion for CSS WG f2f at TPAC?

[08:46:02.0000] <annevk>
yeah, so far the chapters on Media Queries and Style Sheets in http://dev.w3.org/csswg/cssom/ are somewhat adequate

[08:46:03.0000] <annevk>
the rest needs work

[08:47:00.0000] <annevk>
MikeSmith, I can't attend the CSS WG meeting

[08:47:01.0000] <Philip`>
'":{N}{O}{T}("    return NOT;' - surely that should be ":"{N}{O}{T}"(" ?

[08:47:02.0000] <MikeSmith>
hmm

[08:47:03.0000] <annevk>
Philip`, prolly, email www-style

[08:47:04.0000] <MikeSmith>
sometimes I think CSS WG just has too much on its plate

[08:47:05.0000] <Philip`>
/me is too lazy

[08:48:00.0000] <annevk>
CSS grammar is a gigantic pain

[08:48:01.0000] <annevk>
MikeSmith, it's not exactly clear to me how you'd split it up

[08:48:02.0000] <MikeSmith>
I guess we have too much too (as far as a API side)

[08:49:00.0000] <annevk>
I guess you could have syntax / object model vs layout vs text or some such

[08:49:01.0000] <annevk>
but they are something intertwined

[08:49:02.0000] <annevk>
s/something/somewhat/

[08:50:00.0000] <annevk>
and there's only a limited people with sufficient knowledge on all those topics anyway

[08:50:01.0000] <annevk>
number of people*

[08:50:02.0000] <TabAtkins>
Yeah, finding good editors is always the problem.

[08:50:03.0000] <annevk>
so whether they meet in three different groups or one really doesn't matter, you'll end up with the same 10 persons :)

[08:53:00.0000] <TabAtkins>
So it's like saying that HTML5 is too big, so we should split it up?

[08:53:01.0000] <Philip`>
Maybe it's like saying the web is too big, so we should split it up into markup and styling and scripting etc in different groups

[08:54:00.0000] <TabAtkins>
But that's clearly a silly idea, Philip`.

[08:54:01.0000] <annevk>
Philip`, emailed the grammar issue to www-style

[08:55:00.0000] <TabAtkins>
d'oh, Anne, I already sent a message about a=b=0, since you asked me too.

[08:56:00.0000] <annevk>
the orthogonality works to some extent except you do need to remember to build the bridges (e.g. the rendering section in HTML5)

[08:56:01.0000] <annevk>
TabAtkins, oh, I thought you didn't want to, sorry

[08:56:02.0000] <TabAtkins>
It's cool.  It just means fantasai has to read both of our messages.

[08:57:00.0000] <Philip`>
annevk: Thanks

[08:57:01.0000] <annevk>
not a huge burden

[10:29:00.0000] <TabAtkins>
Man, why does jQuery still use eval for JSON, when IE and FF (and maybe others?) have native JSON parsing now?

[12:55:00.0000] <jgraham>
Did we already have a discussion about the confusion that will arise when authors try to do document.createElement("svg") and expect it to work?

[12:57:00.0000] <annevk42>
yes, we decided it was not worth the complexity of making it work

[12:58:00.0000] <zcorpan_>
the right solution for now is probably to have js libraries to paper over the confusingness

[13:01:00.0000] <jgraham>
Right I don't really see how you woulf make it work in general

[13:01:01.0000] <jgraham>
All I can imagine is having createSVGElement and so on

[13:01:02.0000] <jgraham>
Which would mean that you didn't have to remember the namespace at least

[13:01:03.0000] <zcorpan_>
doug had an idea of Element.createElement

[13:01:04.0000] <annevk42>
the SVG WG has some plan on adding a bunch of constructors I believe

[13:02:00.0000] <zcorpan_>
which would use the same namespace as the element you're calling it on

[13:02:01.0000] <jgraham>
Interesting

[13:02:02.0000] <jgraham>
I guess that might help

[13:03:00.0000] <zcorpan_>
doesn't help if you want to create a new <svg> root in an html document

[13:03:01.0000] <jgraham>
Indeed

[13:04:00.0000] <jgraham>
I guess javascript libraries can just have tagname->namspace mappings

[13:04:01.0000] <jgraham>
which will almost-always work

[13:05:00.0000] <zcorpan_>
i think we should wait and see how js libraries solve this before extending dom core

[13:05:01.0000] <annevk42>
I sort of doubt they'll solve this on the element-level

[13:06:00.0000] <annevk42>
JS libraries that create SVG today have more high-level functionality

[13:07:00.0000] <zcorpan_>
if authors don't feel the need to solve it on the element level, we shouldn't extend dom core to solve it

[13:27:00.0000] <annevk42>
jgraham, you really think the way the HTML parser works is a bug?

[13:27:01.0000] <annevk42>
/me kind of likes it

[13:47:00.0000] <deltab>
TabAtkins: JSON.parse not in jQuery? it's release lag — the development version has it: http://code.jquery.com/jquery-nightly.js

[13:50:00.0000] <jgraham>
annevk42: I think the way the DOM layer works is unfortunate

[13:53:00.0000] <annevk42>
how should it work instead?

[13:55:00.0000] <jgraham>
In a way that doesn't require authors o understand XML namespaces

[13:55:01.0000] <jgraham>
(I don 't know if we could have done better in the circumstances though)

[13:56:00.0000] <annevk42>
ah ok

[13:56:01.0000] <annevk42>
yeah it would've been nicer if markup had been a bit more coordinated

[13:58:00.0000] <Philip`>
/me notes that nobody has shipped SVG in text/html and so it wouldn't be too late to change that

[13:58:01.0000] <annevk42>
it would require changing how MathML and SVG work in XML and all

[13:58:02.0000] <annevk42>
at least, if I understand what jgraham is saying

[13:58:03.0000] <Philip`>
That part might be more of a problem

[13:59:00.0000] <jgraham>
I'm not really saying anything concrete

[13:59:01.0000] <jgraham>
I'm just saying that what we have is bad

[14:00:00.0000] <jgraham>
(and that we shouldn't use use this badness as an excuse for introducing more pervasive forms of the same badness)

[14:00:01.0000] <annevk42>
seems that Julian took it the wrong way

[14:01:00.0000] <jgraham>
Oh I should check my email then

[14:09:00.0000] <TabAtkins>
deltab: Ah, k.  It's been around for a while, so I would have thought it'd be in 1.3.2.  Shrug.

[14:10:00.0000] <deltab>
TabAtkins: 1.3.2 is ten months old! JSON.parse was added five months ago

[14:11:00.0000] <TabAtkins>
!_! really?  Never mind, then.

[14:12:00.0000] <deltab>
there's no newer release, mind — you have to use the svn version for something more up-to-date

[14:13:00.0000] <TabAtkins>
Yeah, I just wait for releases.

[16:12:00.0000] <roc>
TabAtkins: sorry, my question was about the use of <angle> with radial gradients

[16:12:01.0000] <TabAtkins>
roc: I'm sorry, I'm too dumb to answer questions today.

[16:12:02.0000] <roc>
ok, I'll ask again tomorrow :-)

[16:12:03.0000] <TabAtkins>
/me pulls the email back up to answer it properly.

[16:13:00.0000] <roc>
I've got linear gradients pretty much implemented, working on radial now

[16:13:01.0000] <TabAtkins>
Okay, yes.  I somehow skipped putting in the default value.  It's 0.

[16:14:00.0000] <roc>
ok, thanks

[16:14:01.0000] <TabAtkins>
roc: If you want to be my hero, also do square/rectangle and diamond/rhombus radial gradients.

[16:14:02.0000] <TabAtkins>
They're really really simple once you've got everything else done.

[16:14:03.0000] <roc>
they're hard to implement actually

[16:14:04.0000] <roc>
common graphics libraries don't support them directly

[16:14:05.0000] <TabAtkins>
Really?  It took me like 5 minutes to do them once I got circle and oval working.

[16:15:00.0000] <TabAtkins>
Most of it was just trying to figure out the filledRectangle syntax.

[16:15:01.0000] <roc>
we don't draw gradients with a lot of rectangles

[16:15:02.0000] <roc>
we pass them down

[16:16:00.0000] <roc>
to various native libraries

[16:16:01.0000] <TabAtkins>
Ah, I see.

[16:16:02.0000] <TabAtkins>
Damns.

[16:16:03.0000] <TabAtkins>
/me just started from the bottom.

[16:16:04.0000] <roc>
I suppose we could approximate squares etc with linear gradients and clipping

[16:16:05.0000] <TabAtkins>
Hmm, maybe that'll work.

[16:17:00.0000] <roc>
you really want them implemented as close to the graphics hardware as possible, for performance

[16:17:01.0000] <roc>
(gradients in general, I mean)

[16:17:02.0000] <TabAtkins>
That won't help us solve the 7th gradient-shape I wanted, though - box (shape of the box, taking into account border-radius).

[16:17:03.0000] <TabAtkins>
;_;

[16:18:00.0000] <TabAtkins>
Though, to be honest, that's not as useful now that I don't skew the gradient.

[16:18:01.0000] <roc>
we should define a new SVG Filter for that

[16:18:02.0000] <TabAtkins>
I really just have no idea what can be done with SVG.  I need to learn up on it.

[16:19:00.0000] <roc>
actually

[16:19:01.0000] <roc>
with feMorphology erode/dilate you can kind of approximate the effect

[16:22:00.0000] <roc>
the only bit of heroism I'm considering is adding -moz-repeating-linear-gradient and -moz-repeating-radial-gradient, since they'd be really easy

[16:22:01.0000] <Philip`>
Hixie: Gavin > Garrett

[16:22:02.0000] <TabAtkins>
That's a long name, but sure.  I still don't like the idea of other background properties leaking into image generation.  Making it explicit is better.

[16:23:00.0000] <gavin>
Philip`: ?

[16:23:01.0000] <Philip`>
(alphabetically)

[16:23:02.0000] <Hixie>
ooh

[16:23:03.0000] <Philip`>
gavin: I think they're wrongly ordered in the credits section

[16:23:04.0000] <Hixie>
alphabets are hard

[16:24:00.0000] <TabAtkins>
roc: But I do like the idea behind repeating gradients, so I'd be happy to see them in there.

[16:25:00.0000] <TabAtkins>
What would be the effect, though, of -moz-repeating-linear-gradient(red, blue)?

[16:25:01.0000] <TabAtkins>
(Since, for a normal linear gradient, that defines a single sweep from red to blue across the entire height of the gradient.)

[16:26:00.0000] <TabAtkins>
s/height of the gradient/height of the box/

[16:26:01.0000] <gavin>
I'm in the credits?

[16:26:02.0000] <gavin>
what for, I wonder

[16:27:00.0000] <gavin>
oh, it's not me!

[16:27:01.0000] <Philip`>
gavin: You're not the only person in the world called Gavin ;-)

[16:27:02.0000] <gavin>
it's Gavin Carothers

[16:27:03.0000] <gavin>
hate that guy

[16:27:04.0000] <Philip`>
Because he stole your name?

[16:28:00.0000] <gavin>
yeah

[16:29:00.0000] <Philip`>
Good a reason as any to hate somebody

[16:31:00.0000] <TabAtkins>
roc: Also, I assume that -moz-repeating-linear-gradient(red -10px, blue 50px) repeats with a 60px period?

[16:31:01.0000] <roc>
yeah

[16:32:00.0000] <TabAtkins>
Hmm.  Is that equivalent to linear-gradient(red -10px, blue 50px, red 110px, blue 170px, ...)?

[16:32:01.0000] <roc>
no

[16:32:02.0000] <TabAtkins>
red -10px, blue 50px, red 50px, blue 110px?

[16:32:03.0000] <roc>
it's equivalent to linear-gradient(red -10px, blue 50px, red 50px, blue 110px, ...)

[16:32:04.0000] <TabAtkins>
k, yeah.

[16:32:05.0000] <TabAtkins>
That makes better sense.

[16:33:00.0000] <roc>
so you get an abrupt transition when the starting and ending colors are not the same

[16:33:01.0000] <TabAtkins>
Yeah.

[16:33:02.0000] <roc>
but I think that's OK, it's pretty obvious what to do to get a smooth transition there

[16:33:03.0000] <TabAtkins>
Yeah, and I can put an example in the spec for it too.

[16:33:04.0000] <roc>
and you might want the abrupt transition

[16:35:00.0000] <TabAtkins>
I guess sure.  Possibly more in radial - I dont' think I'd ever want it to be abrupt in linear.  But there's no reason to prevent it.

[16:54:00.0000] <roc>
TabAtkins: a couple more questions, if I may trouble you...

[16:54:01.0000] <TabAtkins>
Go for it.

[16:54:02.0000] <roc>
"In certain circumstances it is impossible to determine an appropriate ending-shape from the given parameters; in these instances the gradient image is just a solid color, defined by the last color-stop in the list. The following combinations of values will trigger this: closest-side  if the starting-point is on a box edge, closest-corner if the starting-point is on a box corner, ellipse and closest-corner  if the starting-point is on a box-edge,"

[16:55:00.0000] <roc>
in those situations, the shape is simply a circle/ellipse with radius 0, isn't it?

[16:55:01.0000] <TabAtkins>
Yes.

[16:55:02.0000] <TabAtkins>
Which is also "a solid color, defined by the last color-stop in the list".

[16:55:03.0000] <roc>
ok, I suggest you rephrase "it is impossible to determine an appropriate ending-shape" then

[16:55:04.0000] <TabAtkins>
Hmm, okay.

[16:55:05.0000] <roc>
there' nothing really inappropriate about an empty circle or ellipse

[16:56:00.0000] <TabAtkins>
Well, it's sort of a degenerate circle.

[16:56:01.0000] <TabAtkins>
Equivalent to a point.

[16:56:02.0000] <roc>
yeah

[16:56:03.0000] <TabAtkins>
Depending on who you're talking to, degenerate shapes aren't valid.  ^_^  I'll rephrase it, though.

[16:56:04.0000] <roc>
"and finally ellipse and either closest-corner  or closest-side if the starting-point is outside of the box."

[16:57:00.0000] <roc>
I don't think we need to call out degenerate shapes in the spec, unless the spec demands behavior for the degenerate shape that is different from what you would get applying the normal rules

[16:58:00.0000] <TabAtkins>
That last one really is an error, though.  There's no way to determine the dimensions of the ellipse in that case.

[16:59:00.0000] <roc>
there is

[16:59:01.0000] <roc>
suppose I'm using closest-side

[16:59:02.0000] <TabAtkins>
Unless you extend the lines defined by the sides outside of the box, I guess.

[16:59:03.0000] <roc>
right

[16:59:04.0000] <TabAtkins>
You can attempt to infer that, but I don't say anything that would make that required.

[16:59:05.0000] <roc>
I dunno if it's useful

[16:59:06.0000] <roc>
but it's what my code does


2009-10-21
[17:00:00.0000] <roc>
I'll have to add extra code to detect the outside-box case to match the spec as written

[17:00:01.0000] <TabAtkins>
Yeah, I had to do so as well (my code didn't gracefully handle it, so it was required anyway).

[17:01:00.0000] <roc>
so I suggest changing the spec to make that the behaiour

[17:01:01.0000] <anoopb>
any recommendations for tutorials/demos of the canvas element and images?

[17:01:02.0000] <TabAtkins>
Hm, k.  I'll see if I can do so gracefully.

[17:01:03.0000] <anoopb>
more specifically, i'm looking for effects.

[17:02:00.0000] <roc>
I think it probably would be useful, e.g. it means you could animate the movement of an ellipse into the box by animating the start position

[17:02:01.0000] <roc>
oh wait, that wouldn't work

[17:02:02.0000] <roc>
so I dunno :-)

[17:02:03.0000] <TabAtkins>
Nah, it'll collapse to a line as it crosses the box-edge.  ^_^

[17:04:00.0000] <TabAtkins>
I mean, you could still use it when it was outside of the box.  You'd have to use color-stop positions greater than 100%, but still.

[17:04:01.0000] <TabAtkins>
I just figured using farthest-side/farthest-corner was equally useful.

[17:11:00.0000] <TabAtkins>
roc: Doing the animated ellipse thing would be doable relatively easily with an explicitly sized SVG gradient, and animating the background-position.

[17:12:00.0000] <roc>
yeah

[17:12:01.0000] <deltab>
anoopb: https://developer.mozilla.org/en/Canvas_tutorial

[17:12:02.0000] <deltab>
anoopb: effects?

[17:13:00.0000] <TabAtkins>
roc: I'm heading out to do some yardwork, but I'll stay in the channel and be back later.  If you have any more questions, just ask.

[17:13:01.0000] <roc>
sure, thanks a ton

[17:14:00.0000] <anoopb>
deltab: i didn't mean effects. I wanted to be able to do some neat things like expand the image in focus while shrinking others to maintain the bounds of the canvas

[17:15:00.0000] <deltab>
transformations? https://developer.mozilla.org/en/Canvas_tutorial/Transformations

[17:20:00.0000] <anoopb>
deltab: that's it. thank you.

[17:50:00.0000] <TabAtkins>
roc: Here's an interesting question.  I say that the "box" referred to throughout the rules is simply a rectangle the same size as an SVG image without intrinsic dimensions (in background situations, that's the size of the background bounding-box).  However, once that's calculated, it doesn't change.  If you used background-position to *move* the gradient image, it shouldn't adjust to the...

[17:50:01.0000] <TabAtkins>
...new box edges, right?

[17:50:02.0000] <roc>
no

[17:50:03.0000] <roc>
it shouldn't

[17:51:00.0000] <roc>
I should write a test for that but I'm pretty we'll do that right

[17:51:01.0000] <TabAtkins>
Frex, radial-gradient(ellipse farthest-side, red, blue) should create a gradient that turns blue *right* at the box edges.  But if I then do background-position: 100px top (in a 200px wide box) it'll instead look like a half-ellipse, correct?

[17:52:00.0000] <TabAtkins>
One that starts on the right side and turns blue halfway through the box.

[17:56:00.0000] <roc>
yes

[18:22:00.0000] <othermaciej>
hey all

[18:24:00.0000] <othermaciej>
is anyone around who is familiar with the html5 spec production toolchain, and perhaps willing to volunteer to enhance it?

[18:30:00.0000] <TabAtkins>
That'd be philip and/or gsnedders, right?

[18:35:00.0000] <othermaciej>
I don't actually know anything about the mechanics

[18:35:01.0000] <othermaciej>
I know jgraham has done something with it as well (adding the issue markers)

[18:36:00.0000] <othermaciej>
specifically I wanted to get someone to make the change to add spec diff links to bugzilla bugs based on commit messages

[19:45:00.0000] <roc>
TabAtkins: for radial gradients, does <shape> default to 'circle' and <size> default to 'closest-side'?

[19:45:01.0000] <roc>
oh wait

[19:46:00.0000] <roc>
<size> defaults to cover, with mean farthest-corner, ok. I still don't see the default for <shape>

[22:38:00.0000] <TabAtkins>
roc: Dangit, how did I forget that one too?  It defaults to ellipse.

[22:38:01.0000] <roc>
ok, thanks

[22:56:00.0000] <TabAtkins>
roc, I'm making edits to the draft on my personal site now.  I think you were ok with linear-gradient being 'invalid' if it points in the wrong direction, right?  But you wanted the final 'invalid' radial-gradient case to be valid?

[22:57:00.0000] <roc>
TabAtkins: actually in my implementation it was simplest to not make linear-gradient invalid

[22:57:01.0000] <roc>
we pick the destination corner based entirely on the angle

[22:58:00.0000] <TabAtkins>
Hmm.  What happens with -10px -10px 180deg, then?

[22:58:01.0000] <roc>
the destination corner is the top-right corner

[22:59:00.0000] <TabAtkins>
Really?  How do you figure?  180deg points to the left.

[22:59:01.0000] <roc>
oh sorry, it's the opposite corner, right

[23:00:00.0000] <roc>
bottom left

[23:00:01.0000] <roc>
then we find the point that is the intersection of the gradient line with the line that passes through the bottom-left corner and is perpendicular to the gradient line

[23:00:02.0000] <roc>
that's the gradient line end point

[23:01:00.0000] <roc>
you can always follow the instructions in your draft, and it will give you a unique point

[23:01:01.0000] <TabAtkins>
Ah, k.  So you're okay with the direction getting flipped in degenerate cases like that.

[23:01:02.0000] <roc>
yeah

[23:01:03.0000] <TabAtkins>
k.

[23:01:04.0000] <roc>
it would be extra code to detect that case and do something special

[23:03:00.0000] <TabAtkins>
No problem.  I don't have a particular preference on that; I just chose what felt like a reasonable behavior.

[23:05:00.0000] <roc>
I've got radial gradients all working now, but writing the automated tests for gradients sucks :-(

[23:07:00.0000] <TabAtkins>
Yeah, I'm sure.

[23:07:01.0000] <TabAtkins>
Thanks for implementing it all, though!  Woo!

[23:15:00.0000] <TabAtkins>
roc: I'm willing to spec repeating-linear-gradient and repeating-radial-gradient.  The only difference is that the color-stops repeat infinitely in both directions, +/- multiples of the distance between the first and last stop, right?

[23:16:00.0000] <roc>
right

[23:16:01.0000] <roc>
you need to define the rendering when stops all coincide

[23:17:00.0000] <TabAtkins>
Hmm?  You mean when you have linear-gradient(red 50px, blue 50px)?

[23:17:01.0000] <roc>
yeah

[23:17:02.0000] <roc>
actually

[23:18:00.0000] <roc>
yeah

[23:18:01.0000] <roc>
:-)

[23:18:02.0000] <TabAtkins>
That should be already defined.  Before the first color-stop it's red, and after the last it's blue.

[23:18:03.0000] <roc>
I mean repeating-linear-gradient(red 50px, blue 50px)

[23:18:04.0000] <TabAtkins>
Oh!  Um.

[23:19:00.0000] <TabAtkins>
I'll just say it's purple.  ^_^

[23:19:01.0000] <TabAtkins>
Do you have anything in mind to do yet?  There's no 'right' behavior here - anything I spec will be essentially arbitrary.

[23:21:00.0000] <TabAtkins>
Actually, I'll probably just be consistent with the other failure modes and say it's blue.

[23:24:00.0000] <TabAtkins>
k, all the changes are made except for the 'invalid' linear-gradient case.  I'm still trying to figure out an elegant way to say that.

[23:25:00.0000] <roc>
yeah, I'd say "blue"

[23:31:00.0000] <TabAtkins>
/me will try very hard not to actually say "blue" when he writes it up.

[00:17:00.0000] <zcorpan>
good morning

[00:17:01.0000] <annevk42>
morning

[00:17:02.0000] <annevk42>
/me is still somewhat asleep

[00:27:00.0000] <zcorpan>
Philip`: any progress yet? :)

[00:33:00.0000] <zcorpan>
Hixie: should nextid and rb get the isindex treatment wrt HTMLUnknownElement?

[00:34:00.0000] <Hixie>
hm?

[00:34:01.0000] <zcorpan>
i'm pretty sure <nextid> is an HTMLUnknownElement in browsers

[00:34:02.0000] <Hixie>
ah

[00:34:03.0000] <Hixie>
file a bug

[00:34:04.0000] <Hixie>
:-)

[00:35:00.0000] <Hixie>
/me is trying to figure out why prince doesn't seem to support <style> in SVG

[00:35:01.0000] <zcorpan>
i'll check all obsolete elements to see if there are more

[00:35:02.0000] <Hixie>
cool, thanks

[00:41:00.0000] <annevk42>
/me wonders what <a methods> did

[00:42:00.0000] <annevk42>
hmm, weird

[00:45:00.0000] <othermaciej>
<a methods>?

[00:47:00.0000] <zcorpan>
html2?

[00:49:00.0000] <annevk42>
http://www.utoronto.ca/web/HTMLdocs/NewHTML/a_methods.html

[00:51:00.0000] <annevk42>
looks like it might be for non-browser UAs though the search icon remark suggests otherwise

[00:51:01.0000] <annevk42>
/me doesn't really get the design

[00:52:00.0000] <othermaciej>
maybe the idea was that the browser would let you choose what method to use to dereference the link?

[00:53:00.0000] <Hixie>
<a methods> is just like <a urn> and <head profile>

[00:53:01.0000] <Hixie>
nonsensical solution to a non-problem

[00:54:00.0000] <othermaciej>
I have no idea what <a urn> is either

[00:54:01.0000] <othermaciej>
man, every time I think I have heard of everything that was ever in HTML, something new surprises me

[00:56:00.0000] <othermaciej>
I love what the HTML 2.0 spec says: "The syntax and semantics of the URN attribute are not yet specified."

[00:56:01.0000] <othermaciej>
rare moment of honesty!

[00:59:00.0000] <zcorpan>
anyone have ie8 around?

[00:59:01.0000] <Hixie>
.sure

[00:59:02.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/283

[00:59:03.0000] <Hixie>
othermaciej: are recent bugs what you had in mind?

[01:00:00.0000] <othermaciej>
Hixie: yes, thank you very much sir

[01:01:00.0000] <Hixie>
cool

[01:01:01.0000] <zcorpan>
do we have to mark bugs as closed?

[01:01:02.0000] <Hixie>
zcorpan: i got an error

[01:01:03.0000] <Hixie>
looks like IE broke the link

[01:01:04.0000] <Hixie>
can you upload it?

[01:02:00.0000] <othermaciej>
zcorpan: if you don't it will get marked as "no reply from commenter" eventually, so depends on whether you care about that

[01:02:01.0000] <zcorpan>
Hixie: done

[01:02:02.0000] <Philip`>
/me still thinks Hixie should add the header that disables IE XSS protection on the Live DOM Viewer

[01:02:03.0000] <zcorpan>
othermaciej: ok

[01:03:00.0000] <Hixie>
zcorpan: got another error

[01:03:01.0000] <Hixie>
Philip`: i refuse to add a non-standard header whose purpose it is to tell the browser to follow the spec

[01:03:02.0000] <zcorpan>
Hixie: error about <applet>? or other?

[01:03:03.0000] <zcorpan>
Hixie: (you can change the prefs in ie to disable the xss protection)

[01:04:00.0000] <Hixie>
zcorpan: Object doesn't support this property or method on line 30

[01:04:01.0000] <othermaciej>
zcorpan: once we're actually in Last Call, it's probably good to do so, because our Disposition of Comments will look suspicious if all of them indicate no reply and there aren't any "agree" responses

[01:05:00.0000] <zcorpan>
maybe i can batch-close my bugs at some point

[01:10:00.0000] <zcorpan>
anyone got an opinion on whether <spacer> should be HTMLElement or HTMLUnknownElement?

[01:10:01.0000] <ttepasse>
Hey, HTML 3.0 ditches <a urn> but has instead <html urn="...">

[01:11:00.0000] <zcorpan>
why is spacer a void element in the html5 parser?

[01:12:00.0000] <zcorpan>
it's void and HTMLSpacerElement in gecko but a normal unknown element in webkit, opera and ie, afaict

[01:12:01.0000] <annevk42>
yeah

[01:13:00.0000] <othermaciej>
I had no idea <spacer> existed

[01:13:01.0000] <annevk42>
could remove that quirk

[01:13:02.0000] <othermaciej>
we don't do anything special for it afaik

[01:13:03.0000] <annevk42>
Safari on Mac doesn't afaict

[01:13:04.0000] <annevk42>
nor Chrome

[01:17:00.0000] <zcorpan>
ok filed bugs

[01:17:01.0000] <Hixie>
thanks

[01:19:00.0000] <zcorpan>
ie7 has the form margin in standards mode too (like opera)

[01:19:01.0000] <ttepasse>
zcorpan, in Netscape 3 <spacer> was a void element. Says this tutorial from 1998.

[01:35:00.0000] <zcorpan>
"Inserting a form on a page would often break the pixel-perfect design by pushing things around. That was caused by the form’s margins, but I didn’t know that. So to prevent this I used to insert the form’s start and end tags between table rows." - http://www.456bereastreet.com/archive/200511/reveal_your_old_school_web_development_hacks/

[01:41:00.0000] <othermaciej>
/me facepalms

[01:43:00.0000] <zcorpan>
i think we should just change the parser to not foster parent forms

[01:45:00.0000] <Dashiva>
Having per-row forms would be useful for many things

[01:46:00.0000] <zcorpan>
Dashiva: form="" handles that

[01:47:00.0000] <Dashiva>
Yeah, but that leads to really silly markup

[01:47:01.0000] <Dashiva>
A hundred empty form tags outside the table

[01:47:02.0000] <zcorpan>
they don't have to be outside the table

[01:47:03.0000] <zcorpan>
can be in the first cell

[01:47:04.0000] <Dashiva>
True

[01:47:05.0000] <zcorpan>
of the relevant row

[01:47:06.0000] <Dashiva>
Didn't think of that

[01:48:00.0000] <zcorpan>
i agree though that it'd be nice to support forms in tables as if they were <tbody>, but Hixie didn't want to experiment with it and it'd probably break things anyway

[01:56:00.0000] <zcorpan>
Hixie: should we have <link rel=author> too, mapping to atom <author><uri>?

[01:56:01.0000] <Hixie>
no way to map it to a name

[01:57:00.0000] <zcorpan>
you get the name from <meta name=author>

[01:58:00.0000] <Hixie>
but how do you know which rel=author maps to which name=author?

[01:59:00.0000] <zcorpan>
ah... i thought you'd only have one

[02:11:00.0000] <annevk>
you could map it based on the title attribute

[02:11:01.0000] <annevk>
if you specify that for rel=author the title attribute gives the name

[02:11:02.0000] <annevk>
and that for name=author content gives the name

[02:12:00.0000] <annevk>
not sure you'd need <meta name=author> in that case though

[02:13:00.0000] <Hixie>
so <link rel=author href="http://ln.hixie.ch/" title="Hixie's Natural Log"> would be invalid?

[02:14:00.0000] <annevk>
yes

[02:14:01.0000] <annevk>
prolly not ideal

[02:14:02.0000] <Hixie>
annevk: what's the latest ED of MQ? http://www.w3.org/TR/css3-mediaqueries/ is more recent than http://dev.w3.org/csswg/css3-mediaqueries/

[02:15:00.0000] <annevk>
it's more recent because I made all the edits way in advance and Bert did the WD version in private

[02:15:01.0000] <annevk>
with "way in advance" I mean that publication was "way delayed"

[02:16:00.0000] <Hixie>
so what should i reference? the TR which will become out of date, or the ED which is out of date?

[02:16:01.0000] <annevk>
how is the ED out of date?

[02:17:00.0000] <hsivonen>
I guess MS has problems getting people to install Silverlight. Now Flip4Mac is used as a Silverlight delivery device.

[02:24:00.0000] <Hixie>
annevk: it's august

[02:24:01.0000] <Hixie>
annevk: TR is sept

[02:25:00.0000] <Hixie>
oh i see

[02:25:01.0000] <Hixie>
you mean it's the same version

[02:25:02.0000] <Hixie>
just different date

[02:25:03.0000] <annevk>
yes

[02:25:04.0000] <Hixie>
ok

[02:26:00.0000] <Hixie>
thanks

[02:27:00.0000] <Hixie>
othermaciej: when i mark a bug as NEEDSINFO because I simply don't understand the request, should I be giving the Rejected boilerplate, or can i just mark it NEEDSINFO without the boilerplate?

[02:28:00.0000] <othermaciej>
Hixie: I think it would be good to have the boilerplate, but maybe there should be a version specifically for NEEDSINFO bugs that highlights the need to provide the requested info

[02:29:00.0000] <othermaciej>
Hixie: specifically, I wouldn't want someone to complain that they didn't know they had to take action on their NEEDSINFO bug to have it actually addressed

[02:30:00.0000] <Hixie>
k. i'll use rejected until further notice then.

[02:31:00.0000] <zcorpan>
will we see the boilerplate over and over in the same bug when it's reopened and NEEDSINFOed back and forth?

[02:31:01.0000] <zcorpan>
or just the first time it's NEEDSINFOed

[02:33:00.0000] <Dashiva>
Maybe just a link to the process

[02:33:01.0000] <Hixie>
othermaciej: is http://www.w3.org/Bugs/Public/show_bug.cgi?id=7923#c1 ok?

[02:33:02.0000] <othermaciej>
Hixie: works4me

[02:33:03.0000] <Hixie>
k

[02:34:00.0000] <othermaciej>
zcorpan: yeah, I don't think it's necessary to repeat the whole thing over and over - though hopefully it's rare for that to happen at all

[02:34:01.0000] <annevk>
the contributor⊙wo bugs prolly deserve special status anyway

[02:34:02.0000] <zcorpan>
othermaciej: it has happened a couple of times

[02:35:00.0000] <jgraham>
I guess in most cases the original commenter never sees the replies to thoise bugs

[02:35:01.0000] <annevk>
cause unless the person that files them keeps track it's unlikely the person will close it

[02:35:02.0000] <othermaciej>
yeah

[02:35:03.0000] <othermaciej>
they're highly likely to end up in the NoReply pile

[02:35:04.0000] <zcorpan>
would be nice if the comment box would hook into the annotation login system and add the email to cc

[02:36:00.0000] <annevk>
only registered emails can be on the cc

[02:36:01.0000] <zcorpan>
oh well

[02:37:00.0000] <jgraham>
It would be nice if you could add your email address to the comment box anyway

[02:37:01.0000] <jgraham>
Or at least if it gave you a link to the bug page (an actual link not just an alert)

[02:37:02.0000] <Hixie>
you can just copy and paste the link from the alert

[02:38:00.0000] <Hixie>
anyway, patches welcome, so long as it doesn't make the UI any more complicated

[02:38:01.0000] <jgraham>
Hixie: That's significantly more work

[02:38:02.0000] <jgraham>
(one middle click on a link vs select text + copy + open new tab + paste + press return)

[02:38:03.0000] <zcorpan>
Hixie: is a line above the comment box showing status/link instead of alert more comlicated UI?

[02:39:00.0000] <Hixie>
zcorpan: that might work

[02:41:00.0000] <hsivonen>
/me wonders how many names with capital letters X3D has

[02:41:01.0000] <hsivonen>
/me wonders what the level of browser vendor interest in X3D as Part of the Platform is

[02:42:00.0000] <Philip`>
hsivonen: All of them have capitals

[02:42:01.0000] <hsivonen>
Philip`: how many is "All"?

[02:44:00.0000] <Philip`>
hsivonen: Zillions

[02:44:01.0000] <Philip`>
(approximately)

[02:44:02.0000] <Philip`>
http://www.web3d.org/x3d/specifications/ISO-IEC-FDIS-19776-1.2-X3DEncodings-XML/Part01/Schema.html

[02:45:00.0000] <Hixie>
othermaciej: what is "auto-click" in the safari bookmark manager?

[02:45:01.0000] <othermaciej>
Hixie: the worst name for a feature ever

[02:45:02.0000] <othermaciej>
Hixie: but what it does is...

[02:45:03.0000] <Philip`>
(http://www.web3d.org/x3d/specifications/ISO-IEC-FDIS-19776-1.2-X3DEncodings-XML/Part01/examples.html#SimpleExample has specific examples)

[02:46:00.0000] <othermaciej>
if you check that box that for a bookmark folder, then selecting that folder will open its contents in tabs (one tab per bookmark)

[02:46:01.0000] <hsivonen>
Philip`: the use of XSD doesn't make a good first impression

[02:47:00.0000] <Hixie>
othermaciej: ...i see

[02:47:01.0000] <othermaciej>
hsivonen: I'm curious how X3D compares to Google's O3D (which I gather is now built in to Chrome but not yet proposed for standardization afaik)

[02:47:02.0000] <othermaciej>
Hixie: it's a useful feature - just very badly named for reasons I can't get into here

[02:47:03.0000] <hsivonen>
I don't think I'm putting X3D in the parser for plug-ins. And I'm not seeing any interest in shipping a native X3D impl. in Gecko.

[02:47:04.0000] <Philip`>
hsivonen: I expect they didn't have any realistic choices other than DTD and XSD when writing the spec (several years ago)

[02:48:00.0000] <jgraham>
/me hoped that autoclick would cause random and unexpected click events to be dispatched all over the screen

[02:48:01.0000] <Hixie>
othermaciej: the only thing i use bookmarks for is bookmarklets, so not useful for me, but i can see it might be useful :-)

[02:48:02.0000] <Philip`>
othermaciej: They seem totally different, since X3D is declarative and O3D is imperative

[02:48:03.0000] <jgraham>
It would be like the days when Yahoo had the "take me to a random site" feature

[02:49:00.0000] <othermaciej>
Philip`: but both are based on a retained scene graph model

[02:49:01.0000] <hsivonen>
othermaciej: do you mean Google is putting O3D into Chrome even though Gecko and WebKit have this WebGL thing going?

[02:49:02.0000] <othermaciej>
(unlike WebGL which is immediate mode)

[02:49:03.0000] <othermaciej>
hsivonen: well, Google is also putting WebGL into Chrome

[02:50:00.0000] <othermaciej>
O3D is different from WebGL - it's retained mode, so a bit more like Opera's old 3D canvas experiment, or like X3D (not sure if it has a serialized markup form though)

[02:50:01.0000] <hsivonen>
so we are headed towards 3 out of 5 supporting WebGL, 1 out of 5 supporting O3D and 0 out of 5 supporting X3D?

[02:50:02.0000] <othermaciej>
Google is also shipping Native Client built in (I believe you can now start a Worker that loads and runs x86 native code)

[02:51:00.0000] <othermaciej>
I believe Opera is in the Khronos subgroup that is working on WebGL but I'm not 100% sure

[02:51:01.0000] <hsivonen>
does built-in mean that O3D and Native Client aren't in the NPAPI prison?

[02:51:02.0000] <annevk>
we are

[02:51:03.0000] <othermaciej>
I suspect Microsoft will never ever implement it because Mozilla chose to do it at Khronos, a standards body that Microsoft will never join in a million years

[02:51:04.0000] <Philip`>
othermaciej: Hmm, I suppose the retainedness thing is true, though O3D seems to be more of a low-level render graph while X3D is a higher-level thing

[02:51:05.0000] <Dashiva>
Why not?

[02:51:06.0000] <annevk>
not sure if our old 3D stuff was retained, but it was definitely higher-level

[02:52:00.0000] <othermaciej>
hsivonen: I believe that is the case for NaCl, at least that was their plan

[02:52:01.0000] <hsivonen>
othermaciej: I see

[02:52:02.0000] <Philip`>
X3D also has support for interactivity (routing messages between objects, optionally with scripts and stuff), whereas O3D presumably leaves it all to JS

[02:52:03.0000] <othermaciej>
I'm kind of concerned about pushing x86 native code into the Web platform, even if supposedly safely sandboxed

[02:52:04.0000] <annevk>
as long as they ensure it can be implemented on top of DirectX Microsoft can probably do it

[02:52:05.0000] <hsivonen>
I hope we don't end up in a situation where all devices have to support i386 instructions for Web compat

[02:53:00.0000] <annevk>
othermaciej, last I heard they had not specced the details of sandboxing

[02:54:00.0000] <hsivonen>
even if Google manages to badger people into publishing x86, x86_64 and arm code, it would we a huge barrier for entry for novel CPU architectures

[02:54:01.0000] <othermaciej>
I asked some Chrome folks about this and they said the solution was to let Web sites post native code binaries for whatever architectures they cared to, and eventually they'd port Native Client to support some other architectures that they care about

[02:54:02.0000] <othermaciej>
that or some server component would translate to different native instruction sets on the fly

[02:54:03.0000] <Philip`>
I thought the idea was to emulate x86 on other CPUs, but that seems to be missing the performance aspect

[02:54:04.0000] <annevk>
othermaciej, ouch

[02:55:00.0000] <Philip`>
(and performance seems to be largely the point of native code)

[02:55:01.0000] <othermaciej>
any of these approaches seems pretty detrimental to innovation in CPU arhictectures

[02:55:02.0000] <hsivonen>
it would suck big time if Native Client was already established enough to require iPhone and N900 to support x86 instructions

[02:55:03.0000] <Philip`>
Intel ought to be promoting NaCl

[02:55:04.0000] <othermaciej>
anyway, yeah, no formal spec, not proposed as a standard, only barely less terrible for the Web than ActiveX, and now available in Chrome

[02:56:00.0000] <annevk>
hopefully they don't become market leader

[02:56:01.0000] <Dashiva>
The people saying "Google is becoming Microsoft" must feel vindicated

[02:57:00.0000] <Philip`>
Is Google planning to support all these features backward-compatibly in Chrome forever?

[02:57:01.0000] <hsivonen>
I think disrespecting JS as a language and treating it as a mere GWT compile target is way better than sending x86 code down the wire

[02:57:02.0000] <othermaciej>
the IE team seems more hesitant to push proprietary extensions than the Chrome team

[02:58:00.0000] <Philip`>
That's not surprising given the different reactions those teams get when pushing proprietary extensions

[02:59:00.0000] <othermaciej>
I think sending a portable low-level bytecode down the wire would be better than sending x86 code down the wire but apparently it's impossible for the world's brightest engineers to make that fast enough

[03:00:00.0000] <othermaciej>
I did see some minor blowback about Native Client on the programming reddit, but some cheering too

[03:00:01.0000] <hsivonen>
couldn't they at least spec a register-oriente abstract byte code, target LLVM to the byte code and ship JITs in the client?

[03:00:02.0000] <hsivonen>
x86 seems like an awful choice for the universal bytecode

[03:00:03.0000] <Philip`>
Or use the JVM, which is a pretty popular bytecode format

[03:01:00.0000] <Philip`>
hsivonen: About X3D plugins vs native implementations: what about script implementations, which are neither? (Would it be worth changing the language to support those better?)

[03:01:01.0000] <jgraham>
Everything old is new again?

[03:02:00.0000] <othermaciej>
Native Client was interesting as a proof of concept but it won't be all that funny if Google starts posting x86 binaries as part of their Web apps

[03:03:00.0000] <hsivonen>
Philip`: for script implementations, I'd rather see script implementations of the feature set using WebGL and XHR before taking any steps to put it in the HTML parser in anticipation

[03:03:01.0000] <othermaciej>
Philip`: seems to me like <object> and XMLHttpRequest respectively give all you need for plugin and script implementations

[03:03:02.0000] <othermaciej>
apparently the X3D guys have a demo of it running on top of WebGL

[03:04:00.0000] <hsivonen>
Philip`: I imagine Oracle would line up the lawyers if Google wanted to use the JVM byte code in workers without the standard library

[03:05:00.0000] <hsivonen>
Philip`: there has to be a reason to do Dalvik

[03:05:01.0000] <hsivonen>
Philip`: and if you invent a new byte code, you might as well make it register-based to avoid having to undo the stackness in the JIT

[03:07:00.0000] <Philip`>
I assume the X3D guys' demo is basically my demo from years ago, updated a bit

[03:09:00.0000] <Philip`>
(which used inline X3D in XHTML)

[03:09:01.0000] <othermaciej>
rendering to WebGL?

[03:11:00.0000] <annevk>
might as well try to standardize JS bytecode then

[03:13:00.0000] <Philip`>
othermaciej: Rendering to Mozilla's GL API from years ago, which is basically the same as WebGL

[03:14:00.0000] <Philip`>
/me goes away

[03:15:00.0000] <Philip`>
Oh, no I don't

[03:16:00.0000] <jgraham>
Philip`: You're a bit early for pantomime season

[03:26:00.0000] <zcorpan>
Philip`: any progress on end tag data?

[03:33:00.0000] <Philip`>
zcorpan: No, I keep forgetting about it

[03:33:01.0000] <zcorpan>
does it help that i keep reminding you about it?

[03:34:00.0000] <Philip`>
Yes, because eventually you'll remind me at a time when I can't think of anything better to do :-)

[03:34:01.0000] <zcorpan>
like now?

[03:35:00.0000] <Philip`>
No

[03:35:01.0000] <zcorpan>
bummer

[03:37:00.0000] <Hixie>
man, the number of times i mistype "typo" isn't even funny

[03:38:00.0000] <zcorpan>
you should have a macro key that types "typo"

[03:41:00.0000] <Hixie>
hm, not a bad idea

[03:42:00.0000] <Hixie>
unfortunately i need PS/2 to USB adapter to use my macro keyboard

[03:42:01.0000] <Hixie>
and i'm out of keys to use for macros on my main keyboard

[03:42:02.0000] <Philip`>
Use mouse gestures

[03:43:00.0000] <Philip`>
Or you could use longer combinations of keys to activate the macro, for example "t"+"y"+"p"+"o"

[03:43:01.0000] <Hixie>
mmmhm

[03:52:00.0000] <Hixie>
19 e-mails remaining; 1 issues remaining; 24 bugs remaining!

[03:52:01.0000] <Hixie>
totally doable by the end of the month

[03:53:00.0000] <zcorpan>
yay

[03:53:01.0000] <jgraham>
Can we have a WHATWG LC sweepstakes now? And a seperate HTMLWG one (with higher stakes)

[03:54:00.0000] <jgraham>
(since the probability distribution is rather broader and has a really long tail)

[03:55:00.0000] <Dashiva>
Possibly infinite

[03:55:01.0000] <Philip`>
Hixie: Does that mean you'll have time left over to rewrite the spec into rhyming couplets?

[03:55:02.0000] <Hixie>
nooo

[03:55:03.0000] <Dashiva>
What's wrong with pentameter?

[03:58:00.0000] <Philip`>
Whoever decided that a pentameter contains five feet clearly wasn't an expert on measurement units

[04:12:00.0000] <AryehGregor>
This spec aims to evolve HTML / and all of its related APIs, / to help the authoring of Web-based apps.

[04:13:00.0000] <AryehGregor>
Hmm, now can I make it rhyme?

[04:15:00.0000] <Philip`>
AryehGregor: Those aren't iambs, the stresses are all wrong :-(

[04:15:01.0000] <Philip`>
Actually the second and third lines seem alright, but the first doesn't, unless I'm just reading it wrong

[04:16:00.0000] <AryehGregor>
So sue me.  I only even know what an iamb is because of some undergrad world humanities course three years ago that I didn't even mean to take.

[04:17:00.0000] <AryehGregor>
You have to stress "to" in the first line, maybe that's wrong?

[04:17:01.0000] <AryehGregor>
I dunno.

[04:18:00.0000] <Philip`>
The pronunciation of "HTML" as four letters seems incompatible with the requirements

[04:18:01.0000] <Philip`>
since I'd stress the "H" and "L"

[04:18:02.0000] <zcorpan>
so pronounce it as "hutmel"

[04:19:00.0000] <Philip`>
zcorpan: Too few syllables in that case

[04:19:01.0000] <AryehGregor>
Yeah, you have to stress the T and L instead of the H and L.

[04:20:00.0000] <AryehGregor>
"Hypertext" is also a problem, so you can't just expand the acronym.

[04:20:01.0000] <Philip`>
"Hypertext" seems okay to me

[04:20:02.0000] <mikekelly>
=/

[04:20:03.0000] <Philip`>
(as long as you follow it with something unstressed, i.e. not "Markup")

[04:21:00.0000] <AryehGregor>
You'd have to stress it "HYperTEXT", I guess?  I suppose that works.

[04:21:01.0000] <Philip`>
though I'm certainly not an expert on any of these things and I barely know what a syllable is

[04:22:00.0000] <AryehGregor>
You can read what I wrote as iambic pentameter if you want, anyway.

[04:22:01.0000] <AryehGregor>
It's just not the most natural way to read it.

[04:22:02.0000] <AryehGregor>
It's not like I'm putting stresses like "auTHORing" that are completely crazy.

[04:22:03.0000] <Philip`>
It seems wholly unnatural to me :-)

[04:22:04.0000] <AryehGregor>
Oh well.

[04:22:05.0000] <Philip`>
(The first sentence anyway)

[04:22:06.0000] <Philip`>
But don't ask me to produce anything better :-p

[04:23:00.0000] <Philip`>
/me wonders how Shakespeare would have written a play about HTML

[04:23:01.0000] <AryehGregor>
Most of Shakespeare isn't in verse.

[04:23:02.0000] <AryehGregor>
So he's safe.

[04:23:03.0000] <AryehGregor>
/me doesn't dare trying to rewrite even a single sentence of the spec in Elizabethan English

[04:24:00.0000] <AryehGregor>
Archaic Hebrew I can do, English not so much.

[04:52:00.0000] <mikekelly>
Philip`: was it you was saying the other day a discussion came up about providing access to request object for a page?

[04:53:00.0000] <mikekelly>
trying to find it but got no idea what I should be looking for :(

[04:54:00.0000] <hsivonen>
Does this make sense: http://groups.google.com/group/mozilla.dev.tech.dom/msg/6dfd6196523b02e9 ?

[04:54:01.0000] <hsivonen>
also, has the issue already moved to the WebApps WG?

[04:58:00.0000] <othermaciej>
I don't recall addChild() being proposed

[04:59:00.0000] <othermaciej>
the proposal strikes me as a little odd

[05:00:00.0000] <hsivonen>
othermaciej: it's basically DWIM that hides the need to pass NS URIs to the APIs

[05:00:01.0000] <hsivonen>
in Minefield, http://www.apple.com/imac/the-new-imac/#large plays the sound but no video

[05:01:00.0000] <othermaciej>
why is append the only case of DOM insertion that needs a convenient built-in way to create the element?

[05:01:01.0000] <hsivonen>
that's supposed to be HTML5 <video>, right?

[05:02:00.0000] <othermaciej>
that page does use a <video> element (at least what it serves to Safari includes a <video> element)

[05:02:01.0000] <hsivonen>
othermaciej: append is a natural excuse for taking an existing element as context

[05:02:02.0000] <annevk42>
hsivonen, innerHTML strikes me as a much more convenient API

[05:02:03.0000] <hsivonen>
annevk42: we don't have an efficient appendInnerHTML API

[05:02:04.0000] <othermaciej>
hsivonen: to the point that you should fall completely off the API cliff if you want to prepend, insert, replace or make a detached subtree?

[05:03:00.0000] <hsivonen>
annevk42: Firebug rolls its own using createContextualFragment

[05:03:01.0000] <othermaciej>
actually, there's insertAdjacentHTML()

[05:03:02.0000] <othermaciej>
(which I guess Mozilla doesn't have yet?)

[05:03:03.0000] <hsivonen>
hmm. that could be useful

[05:03:04.0000] <hsivonen>
assuming of course, that it's added to SVG elements, too

[05:03:05.0000] <hsivonen>
no idea if Mozilla has it yet

[05:03:06.0000] <annevk42>
I'm not too sure we should be inventing new DOM APIs before we have some more experience with what libraries are doing and what authors want

[05:04:00.0000] <othermaciej>
insertAdjacentHTML is probably easier to use than what is proposed, though arguably more sloppy since it does runtime parsing of markup

[05:04:01.0000] <annevk42>
especially since everything is already possible so it seems like too much premature optimization to me

[05:04:02.0000] <hsivonen>
annevk42: libraries can deal with the horror of NS URIs anyway

[05:04:03.0000] <othermaciej>
but it does solve the problems with using innerHTML to append though

[05:04:04.0000] <othermaciej>
I too am hesitant to add DOM APIs

[05:04:05.0000] <annevk42>
hsivonen, right, so why have new APIs?

[05:04:06.0000] <hsivonen>
othermaciej: insertAdjacentHTML may be a nicer API if you don't need to vary the attribute values depending on program state

[05:05:00.0000] <othermaciej>
I'd like to see us have a sound DOM4 Core draft that strips out the useless/unimplemented DOM APIs first, then consider additions very carefully

[05:05:01.0000] <othermaciej>
hsivonen: depends on whether string-pasting is acceptable as a way to vary the attributes

[05:05:02.0000] <hsivonen>
othermaciej: escaping them to be parser-safe seems awfully inefficient

[05:05:03.0000] <othermaciej>
having to allocate a JS object to hold the attributes solely to pass them is an efficiency hit, though one that is common in JS libraries

[05:05:04.0000] <annevk42>
I'm with othermaciej

[05:05:05.0000] <annevk42>
that's pretty much what I'm doing for CSSOM

[05:05:06.0000] <Hixie>
me too

[05:06:00.0000] <Hixie>
what zcorpan was doing with Web DOM Core seemed like the right thing to do

[05:07:00.0000] <othermaciej>
hsivonen: anyway I'm not totally convinced that the separateness of create and append is a major pain point

[05:08:00.0000] <othermaciej>
hsivonen: I do think that dealing with the few well-known namespaces, and defining attributes after creating are real pain points

[05:08:01.0000] <othermaciej>
hsivonen: on the other hand, why built-in handling for setting attributes but not text content?

[05:09:00.0000] <annevk42>
is setAttribute() really that bad?

[05:09:01.0000] <jgraham>
FWIW I find create+setAttribute being seperate to be a bigger pain point

[05:09:02.0000] <othermaciej>
having to create and insert a Text node separately is kind of a pain

[05:09:03.0000] <hsivonen>
when coding without libs on the raw DOM, creating and appending as separate ops sucks pretty badly, IMO

[05:09:04.0000] <jgraham>
Oh yeah and the text node thing for sure

[05:09:05.0000] <annevk42>
true, we should prolly overload a few methods at some point to also accept strings

[05:09:06.0000] <hsivonen>
looks like the iMac ad uses <embed> in Minefield

[05:09:07.0000] <othermaciej>
given that there are multiple useful ways to insert, there should be an uncombined version of the most convenient form of create

[05:09:08.0000] <hsivonen>
no idea why the video doesn't render

[05:10:00.0000] <othermaciej>
in my raw DOM programming (mostly for WebKit test cases), the most annoying part of dynamically creating elements is usually making a text node to add text content

[05:10:01.0000] <jgraham>
I sometimes create a wrapper funciton like Element(name, attributes, children)

[05:10:02.0000] <jgraham>
where children can be a list of elements or text

[05:10:03.0000] <jgraham>
But it's not a great design

[05:11:00.0000] <hsivonen>
looks like Apple doesn't want to provide Theora video :-(

[05:11:01.0000] <othermaciej>
is that in any way surprising?

[05:11:02.0000] <hsivonen>
othermaciej: not really. just makes the hype about the ad using HTML5 fall a bit flat

[05:12:00.0000] <othermaciej>
I guess assigning foo.textContent would be easier than creating a Text node, though less cross-browser portable

[05:13:00.0000] <annevk42>
I usually set textContent

[05:13:01.0000] <annevk42>
or innerHTML

[05:13:02.0000] <annevk42>
depending on the string

[05:13:03.0000] <annevk42>
and what browsers it needs to work in

[05:13:04.0000] <othermaciej>
I use innerHTML or document.write() when I am lazy

[05:13:05.0000] <gsnedders|work>
document.write() is just evil though

[05:13:06.0000] <hsivonen>
I guess one might argue that all DOM sugaring that isn't perf-oriented like the Selectors API should just go in JS libs

[05:13:07.0000] <othermaciej>
I guess that no longer stops my tests from being standards-compliant

[05:14:00.0000] <othermaciej>
document.write() is only a little bit more evil than innerHTML

[05:14:01.0000] <hsivonen>
othermaciej: document.write() is way, way more evil

[05:14:02.0000] <annevk42>
ah yeah, I use document.write a lot too

[05:14:03.0000] <annevk42>
very convenient for tests

[05:14:04.0000] <gsnedders|work>
document.write() affects the parser as it is parsing. innerHTML doesn't do anything like that.

[05:14:05.0000] <hsivonen>
/me has spent insanely more time on implementing document.write than innerHTML

[05:14:06.0000] <gsnedders|work>
Hence, document.write is more evil

[05:15:00.0000] <othermaciej>
mere implementation concerns!

[05:15:01.0000] <annevk42>
my test case writing trumps your implementing :p

[05:15:02.0000] <othermaciej>
hsivonen: I think it's plausible that some sugar in the core would be useful, but if so it should be based on carefully studying what popular JS libraries do (perhaps after SVG-in-HTML and such is available)

[05:16:00.0000] <othermaciej>
hsivonen: I think with Selectors API we made a mistake by not studying JS libs close enough, and ended up implementing something that didn't really work for them or their clients

[05:16:01.0000] <othermaciej>
s/implementing/specifying and implementing/

[05:18:00.0000] <jgraham>
FWIW I don't think you should hace to pull in thousands of lines of jQuery to do simple things in a clean way

[05:18:01.0000] <othermaciej>
agreed

[05:18:02.0000] <jgraham>
But I agree that we shouldn't specify something that doesn't work for jQuery too

[05:19:00.0000] <othermaciej>
in the case of DOM Core sugar, it would be more a question of whether it could serve the needs of jQuery (or Dojo or YUI) clients directly

[05:19:01.0000] <othermaciej>
cause it doesn't matter that much what you use to implement the libraries

[05:20:00.0000] <othermaciej>
it's actually kind of hard to make a sugary API that works better for implementing library-based convenience APIs, unless it exactly matches the API

[05:21:00.0000] <jgraham>
Arguably that means it doesn't matter too much if it meets the exact needs of the library since the use case would be people doing something too simple to want to pull in a whole complex library

[05:21:01.0000] <othermaciej>
the question to ask would be how often does it save you from having to pull in the whole library

[05:22:00.0000] <jgraham>
Indeed. For me it would be a big win but I'm quite atypical

[05:22:01.0000] <othermaciej>
this is why I prefer such an API not to have a steep "cliff" - so if it doesn't do exactly what you want, you can just add a couple of other raw DOM calls, rather than having to find a completely separate way to do it

[05:24:00.0000] <mikekelly>
which one is better to use - document.location.href or just document.location? or does it not make a diff?

[05:24:01.0000] <othermaciej>
it doesn't really matter

[05:24:02.0000] <mikekelly>
ok cool thanks

[05:24:03.0000] <mikekelly>
do browsers store the location as an <a> tag then?

[05:25:00.0000] <mikekelly>
also - are browsers coming up with a 'microformat' type giblet for storing bookmarks

[05:25:01.0000] <mikekelly>
that would be snazzy

[05:33:00.0000] <Philip`>
mikekelly: It wasn't me

[05:34:00.0000] <gsnedders|work>
mikekelly: No, they store the location as a URL (or as an entire DOMLocation object)

[05:35:00.0000] <gsnedders|work>
mikekelly: It would make no sense to store it as an a element

[05:36:00.0000] <Philip`>
othermaciej: Reported telecon date is wrong again :-p

[05:36:01.0000] <Philip`>
Subject says 22, body says 15, link says 8

[05:36:02.0000] <othermaciej>
dammit!

[05:37:00.0000] <Philip`>
(of October)

[05:37:01.0000] <othermaciej>
at least I got it right in the subject

[05:37:02.0000] <othermaciej>
clearly too much copy-pastery involved

[05:52:00.0000] <smaug_>
 Hixie: ping

[05:52:01.0000] <smaug_>
Hixie: dnd doesn't seem to handle drop on form controls properly

[05:53:00.0000] <Hixie>
how so?

[05:53:01.0000] <smaug_>
basically, should drop fire?

[05:54:00.0000] <Hixie>
generally speaking, yes

[05:54:01.0000] <smaug_>
"If the dragover  event is not canceled, the current drag operation must be reset to "none"."

[05:55:00.0000] <smaug_>
"If the current drag operation is none (no drag operation), or, if the user ended the drag-and-drop operation by canceling it (e.g. by hitting the Escape key), or if the current target element is null, then the drag operation failed"

[05:55:01.0000] <smaug_>
so what does cancel dragover when dropping to form controls?

[05:56:00.0000] <mikekelly>
hmm seems the only way I can get headers for current page's response is to make a new HEAD request with XHR to document.location

[05:56:01.0000] <Hixie>
smaug_: oh, i see. dragover should have some default behaviour that sets the current drag operation for form controls, or something

[05:56:02.0000] <Hixie>
smaug_: send a mail or file a bug?

[05:56:03.0000] <smaug_>
ok, will send a amil

[05:56:04.0000] <smaug_>
mail

[05:56:05.0000] <mikekelly>
is there any other way to approach this or is that the solution?

[05:57:00.0000] <Philip`>
mikekelly: I think that's the only client-side solution

[05:57:01.0000] <Hixie>
smaug_: thanks

[05:57:02.0000] <mikekelly>
Philip`: so browser deliberately drop the response data once the page is loaded?

[05:57:03.0000] <Philip`>
mikekelly: (You could instead approach it by passing everything through a proxy server that captures headers and returns them on demand, or something, but that wouldn't be great)

[05:58:00.0000] <Philip`>
mikekelly: I believe so

[05:58:01.0000] <mikekelly>
is there a specific reason for that or is it just how its ended up?

[05:58:02.0000] <Philip`>
mikekelly: (or at least they don't expose it to scripts)

[05:58:03.0000] <Philip`>
mikekelly: Features don't exist by default

[05:59:00.0000] <mikekelly>
hmm I guess not

[05:59:01.0000] <Hixie>
wow, did i really just address all those bugs?

[05:59:02.0000] <Hixie>
it seems like the pile suddenly got smaller.

[05:59:03.0000] <mikekelly>
most dev platforms make sure their APIs present all the relevant information :P

[05:59:04.0000] <mikekelly>
fair enough though

[06:00:00.0000] <mikekelly>
I doubt anyone will be convinced that is a good idea so looks like have to stick to making HEAD requests back

[06:00:01.0000] <mikekelly>
all this inefficiency probably costs like.. a million trees a year or something like that

[06:01:00.0000] <Philip`>
mikekelly: Seems unlikely, since it's a feature that approximately zero people want and emulate with HEAD requests

[06:01:01.0000] <Philip`>
Also, trees are big and HTTP requests are tiny

[06:01:02.0000] <mikekelly>
scale

[06:01:03.0000] <mikekelly>
plus - people are moving away from message oriented approaches

[06:02:00.0000] <Philip`>
Trees are really really big and HTTP requests are really really tiny

[06:02:01.0000] <mikekelly>
and towards using HTTP headers for metadata

[06:03:00.0000] <mikekelly>
so I don't think it's as crazy an idea as you think it is :P

[06:05:00.0000] <mikekelly>
just a bit frustrating have to go back to fetch data that could've been made available already

[06:06:00.0000] <mikekelly>
but hey - I'm sure it's within everyone's best interests to have it that way

[06:06:01.0000] <Philip`>
It wouldn't be a problem if the server put all the needed data in the response body

[06:06:02.0000] <mikekelly>
;D

[06:06:03.0000] <mikekelly>
that is not the same thing.

[06:06:04.0000] <Philip`>
/me doesn't think it's a crazy idea, he just doesn't care about it

[06:07:00.0000] <mikekelly>
if you standardise your application's metadata in the headers you get metadata across all content-types

[06:07:01.0000] <mikekelly>
jpg/png/html/doc/pdf/xml/json

[06:08:00.0000] <mikekelly>
OCCI looks like it is going this way

[06:08:01.0000] <Hixie>
ok bed time

[06:08:02.0000] <Hixie>
nn

[06:10:00.0000] <mikekelly>
Philip`: you still disagree it is not equivalent to put metadata in the entity body?

[06:10:01.0000] <hsivonen>
/me wonders if Opera and WebKit have a pseudoclass for matchin on the HTMLness bit of the owner document

[06:10:02.0000] <hsivonen>
Gecko has :-moz-is-html

[06:13:00.0000] <Philip`>
mikekelly: I agree they're different, but that doesn't mean you can't put the data in the HTML entity body to avoid the problem of scripts wanting headers from the current response

[06:13:01.0000] <Philip`>
(You might introduce other problems by doing that, of course)

[06:22:00.0000] <mikekelly>
Philip`: exactly :)

[06:24:00.0000] <Philip`>
Would anyone shoot me for reporting WHATWG-copy-of-spec-specific issues in the W3C bug tracker?

[06:25:00.0000] <hsivonen>
Philip`: people who disapprove of the existence of the WHATWG might

[06:26:00.0000] <hsivonen>
Am I imagining things or does GCC run faster on Snow Leopard than on Leopard?

[06:26:01.0000] <hsivonen>
x86_64 additional registers maybe?

[06:27:00.0000] <Philip`>
Newer version of GCC?

[06:29:00.0000] <hsivonen>
maybe

[06:29:01.0000] <hsivonen>
no, actually, the big digits of the GCC version are supposed to be the same, I think

[06:30:00.0000] <hsivonen>
hmm. did heycam ever file the bug about insertion modes when there are nested <td><svg>s?

[06:31:00.0000] <Philip`>
Compiling for different targets (32-bit vs 64-bit)? or is it only the compiler itself that changed to 64-bit?

[06:32:00.0000] <hsivonen>
Philip`: 32-bit target still

[07:09:00.0000] <mikekelly>
Philip`: meh - this works fine so can't really complain http://jsbin.com/eyobo

[07:09:01.0000] <mikekelly>
apart from the state of the resource being modified between requests..

[07:10:00.0000] <mikekelly>
and the server providing inconsistent headers between GET/HEAD

[07:10:01.0000] <mikekelly>
if you look at the content-length on that link it's actually wrong

[07:10:02.0000] <smaug_>
Hixie: btw, could you remove initXXXEventNS methods from the draft? D3E draft doesn't have namespaced events anymore.

[07:12:00.0000] <Dashiva>
He already did, I believe

[07:12:01.0000] <Dashiva>
r4204

[07:14:00.0000] <smaug_>
ah

[07:14:01.0000] <smaug_>
hmm

[07:14:02.0000] <smaug_>
did I load the draft from cache 

[07:15:00.0000] <smaug_>
I guess I did

[08:15:00.0000] <Philip`>
mikekelly: Yeah, HEAD doesn't really work well enough to rely on if you don't control the server

[08:15:01.0000] <Philip`>
If I remember correctly, I once found a server that returned four random bytes (like uninitialised memory or something) for Content-Type on HEAD requests

[08:15:02.0000] <mikekelly>
which is why it would be nice to have access to the original request :P

[08:16:00.0000] <mikekelly>
technically if a server isn't consistent across GET/HEAD then it''s breaking HTTP

[08:17:00.0000] <mikekelly>
it's still annoyingly inefficient to have to make another request for information that's already been downloaded

[08:20:00.0000] <mikekelly>
i'm not saying it should be - but how does stuff like that get standarised across browsers if it's decided it should be added?

[08:25:00.0000] <Philip`>
mikekelly: Someone writes a specification for the stuff (often as part of an existing spec or working group), then someone convinces browser developers to implement it (by asking them, preferably showing usefulness and demand from users), then people write tests and documentation and stuff, and then everyone waits a few years until they can use it

[08:25:01.0000] <mikekelly>
lol

[08:25:02.0000] <Philip`>
(not necessarily in that order)

[08:25:03.0000] <mikekelly>
I hope google chrome does well so we don't have to put up with nonsense much longer

[08:26:00.0000] <Philip`>
Which nonsense?

[08:26:01.0000] <mikekelly>
the nonsense you just described

[08:26:02.0000] <mikekelly>
:P

[08:27:00.0000] <Philip`>
The nonsense of developing clear specifications and getting browser developers to agree to implement it interoperably?

[08:27:01.0000] <mikekelly>
yeah there's too many browsers that try to do too much

[08:27:02.0000] <TabAtkins>
...so you want a monoculture again?

[08:27:03.0000] <mikekelly>
google chrome monoculture looks good to me

[08:27:04.0000] <TabAtkins>
::shudders::

[08:28:00.0000] <mikekelly>
look at their extension system

[08:28:01.0000] <TabAtkins>
There is no such thing as a good monoculture in tech.

[08:28:02.0000] <mikekelly>
I'm sure Ian would have something to say about that

[08:28:03.0000] <TabAtkins>
?_?

[08:29:00.0000] <mikekelly>
:D

[08:29:01.0000] <Philip`>
I think I prefer standards rather than the alternative approach of Google adding hugely complex features willy-nilly and hoping they become de facto standards

[08:29:02.0000] <mikekelly>
yeah I agree - personally I think browsers should do nothing other than render html/css and run javascript

[08:29:03.0000] <mikekelly>
but that's just me

[08:30:00.0000] <mpilgrim>
you're welcome to build one that does nothing but that

[08:30:01.0000] <mikekelly>
I might well do that if I get time.

[08:30:02.0000] <mikekelly>
or if that's what google chrom OS turns out to be I wont have to bother

[08:31:00.0000] <TabAtkins>
Chrome OS is just going to be a light-weight Linux with a new windowing system that's designed to run webapps well, somehow.

[08:31:01.0000] <Philip`>
/me was just at a talk about V8, and the person said Chrome OS wouldn't have device drivers written in JS :-(

[08:31:02.0000] <mikekelly>
be cool to bootstrap my browser off my web server :)

[08:31:03.0000] <Philip`>
mikekelly: By "cool" you mean "really slow"?

[08:31:04.0000] <mpilgrim>
/me still isn't sure what chrome os is

[08:31:05.0000] <mikekelly>
Philip`: why would that be slow?

[08:31:06.0000] <TabAtkins>
mpilgrim: It's what I just described.

[08:32:00.0000] <Philip`>
It's an OS that's shiny

[08:32:01.0000] <Philip`>
That's enough to get excited about

[08:32:02.0000] <mikekelly>
if the core engine for rendering html/css and running javascript is on the client

[08:32:03.0000] <Philip`>
No need to worry about technical details like what it is

[08:32:04.0000] <mikekelly>
the rest is just UI components

[08:33:00.0000] <mikekelly>
you recon it's not possible to design a browser UI with html5/css3/javascript?

[08:33:01.0000] <mikekelly>
looks to me like it is/will be

[08:33:02.0000] <mpilgrim>
i have that already

[08:33:03.0000] <mikekelly>
well then.

[08:33:04.0000] <mpilgrim>
it's called linux

[08:34:00.0000] <mpilgrim>
(oops, that was responding to TabAtkins)

[08:34:01.0000] <mikekelly>
yeah I know sorry =)

[08:34:02.0000] <TabAtkins>
Yeah, just with a new windowing system, like I said.

[08:34:03.0000] <mpilgrim>
i like my windowing system

[08:34:04.0000] <TabAtkins>
Then don't use Chrome OS.  ^_^

[08:35:00.0000] <mpilgrim>
but given the default windowing systems on various platforms, i can certainly see the market opportunity for one that doesn't suck

[08:35:01.0000] <mikekelly>
I got one desktop on ubuntu full screen chrome

[08:35:02.0000] <mikekelly>
does that count?

[08:35:03.0000] <Philip`>
The V8 person suggested it was largely for people like his daughters, who use no applications other than the web browser

[08:35:04.0000] <TabAtkins>
Yah, I think it's supposed to make the distinction between webapps/native apps mostly disappear too, like Chrome browser currently does with Application Shortcuts.

[08:36:00.0000] <TabAtkins>
Only more so.

[08:36:01.0000] <Philip`>
(which presumably doesn't apply to anybody who's in here)

[08:36:02.0000] <mikekelly>
I don't think google will store any of this on the client

[08:36:03.0000] <mikekelly>
well I wouldn't anyway

[08:36:04.0000] <Philip`>
(Ah, the V8 person was Lars Bak)

[08:37:00.0000] <TabAtkins>
Actually, I could get by pretty well with a browser-focused OS.  My current spread of windows is pretty typical - 4 browser windows, IRC (in an FF plugin), and my music player.

[08:37:01.0000] <mpilgrim>
/me decides, apropos of nothing, that what "dive into html5" needs is a recurring "ask doctor markup" sidebar

[08:38:00.0000] <TabAtkins>
mpilgrim: Ooh!  Ooh!  Make it be an <html> tag with glasses!

[08:38:01.0000] <TabAtkins>
Like Dr. Swordopolis!

[08:38:02.0000] <mikekelly>
I'd need a terminal client

[08:38:03.0000] <Philip`>
Why only a doctor? Make him a professor, with crazy hair

[08:38:04.0000] <mpilgrim>
ooh, i might even have clip art of a crazy-haired professor

[08:38:05.0000] <mikekelly>
there's no way I'm going out to the fucking cloud just to get a terminal session going

[08:38:06.0000] <mpilgrim>
now i'm going to lose the next two hours to looking at clip art

[08:39:00.0000] <TabAtkins>
mikekelly: It's still going to be Linux.

[08:39:01.0000] <Philip`>
mikekelly: What would you do with the terminal session, when all your data and applications are in the cloud?

[08:39:02.0000] <mikekelly>
Philip`: connect to my shell

[08:39:03.0000] <mikekelly>
where irssi lives

[08:40:00.0000] <mikekelly>
that is unless IRC moves onto HTTP

[08:40:01.0000] <mpilgrim>
how about http://openclipart.org/people/johnny_automatic/johnny_automatic_little_professor.svg

[08:41:00.0000] <mikekelly>
there's that mebbit thing I guess

[08:41:01.0000] <TabAtkins>
Dang that'd be good, mpilgrim.

[08:42:00.0000] <TabAtkins>
sgalineau: http://www.engadget.com/2009/09/24/video-windows-7-launch-party-parody-is-bleeping-genius/

[08:42:01.0000] <Philip`>
Trim out the background and have him point at the sidebar and I expect it'd be good

[08:43:00.0000] <mpilgrim>
or http://commons.wikimedia.org/wiki/File:Stethoscope_(PSF).png

[08:43:01.0000] <mpilgrim>
/me hearts the Pearson Scott Foresman collection

[08:44:00.0000] <TabAtkins>
I like the chubby professor.

[08:44:01.0000] <TabAtkins>
He's adorable.

[08:44:02.0000] <Philip`>
The person with the stethoscope scares me

[08:45:00.0000] <Philip`>
I'm not even sure if it's male or female

[08:45:01.0000] <mpilgrim>
chubby professor it is

[08:46:00.0000] <mpilgrim>
and Professor Markup is born

[08:46:01.0000] <TabAtkins>
Woo!

[08:47:00.0000] <mikekelly>
lol.

[09:27:00.0000] <ttepasse>
Uh. <spacer> died.

[09:30:00.0000] <Philip`>
Nobody will mourn it

[09:30:01.0000] <mpilgrim>
TabAtkins: http://diveintohtml5.org/canvas.html#reset

[09:31:00.0000] <TabAtkins>
mpilgrim: I sort of think he needs a bit of a shadow to lift him off of the bottom border, but otherwise I love him to pieces.

[09:31:01.0000] <ttepasse>
/me has some nostalgia for these nn3 elements. Also: <multicol>.

[09:32:00.0000] <Philip`>
How odd, that page is no longer unreadable in Opera

[09:34:00.0000] <Philip`>
http://diveintohtml5.org/canvas.html#pixel-madness - he's been scalped :-(

[09:40:00.0000] <mpilgrim>
adding a min-height...

[09:41:00.0000] <mpilgrim>
CSS is awesome http://www.zazzle.com/css_is_awesome_mug-168716435071981928

[12:10:00.0000] <yael>
Hi, I am working on implementation of http://dev.w3.org/html5/spec/infrastructure.html#url-decomposition-idl-attributes, and I cannot find a clear explanation of what is a "Server-based naming authority". Can anyone here help me? thanks

[12:34:00.0000] <mattl>
i fear i'm going insane, but does a poster attr on a video tag really need to relative to the src URL?

[12:34:01.0000] <anoopb>
so twitpics api allows to upload/uploadandpost but not view pics?

[12:45:00.0000] <Philip`>
mattl: As far as I can tell, the spec says it's just relative to the normal document base URL

[12:46:00.0000] <Philip`>
(or technically the base URL of the <video> element)

[12:46:01.0000] <Philip`>
and src should be irrelevant

[13:05:00.0000] <TabAtkins>
yael: I found this - http://www.cs.tut.fi/~jkorpela/rfc/2396/full.html - that looks somewhat useful.

[13:27:00.0000] <aroben>
what's the recommended way to provide feedback on HTML5 these days? should I send an email to the list? should I use the comment form on the spec page?

[13:28:00.0000] <TabAtkins>
Use an email if you want to discuss the issue, or just file a bug in bugzilla.

[13:28:01.0000] <TabAtkins>
(The spec's comment form also works for this, though you won't automatically receive replies.)

[13:28:02.0000] <aroben>
TabAtkins: thanks

[13:44:00.0000] <yael>
TabAtkins: Thank you.  The RFC 2396 says that "server-based naming authority" is  tied to schemes that use IP based protocol. I have tested setting host and port on URLs with the sceme foo:. So I assume it should not work, but both IE8 and FF allowed that . 

[13:49:00.0000] <TabAtkins>
yael: I *really* don't have the experience necessary to answer that appropriately, but it does sound like unknown schemes probably shouldn't be assumed to use a server-based naming authority.

[13:50:00.0000] <TabAtkins>
Search the mailing list, though - I think I recall some discussion around that issue previously.

[13:51:00.0000] <yael>
TabAtkins: thanks, appreciate your help. 

[13:52:00.0000] <TabAtkins>
No problem.

[16:33:00.0000] <TabAtkins>
I've got a friend who wants to know what character of text is under the mouse during a mouseDown event.  There's not any way to determine that currently, right (without horrible hacks like wrapping every character in a span)?  Where would be an appropriate place to tell him to suggest an offsetText property or similar?

[16:36:00.0000] <Hixie>
anne's already looking at that for cssom iirc

[16:37:00.0000] <TabAtkins>
Ah, cool.

[16:57:00.0000] <othermaciej>
TabAtkins: there was a proposed caretRangeFromPoint() API

[16:58:00.0000] <othermaciej>
TabAtkins: there's the slight complication right now that people want it to work for plaintext controls like <textarea> and <input type="text">, but a DOM Range can't represent a text range inside a form control

[16:59:00.0000] <TabAtkins>
My friend wasn't wanting that - just the character in a normal text node.

[16:59:01.0000] <othermaciej>
well, caretRangeFromPoint() will do that in WebKit, but like I said the API is likely to change incompatibly


2009-10-22
[17:00:00.0000] <othermaciej>
Mozilla also has some nonstandard extensions right in the mouse event - caretRangeFromPoint() lets you do the hit testing at any time though, you don't need an event

[17:04:00.0000] <TabAtkins>
Thanks, othermaciej.  I've passed the info along.

[17:12:00.0000] <othermaciej>
so I hear Web Fonts is going to define not one but two new font formats

[17:12:01.0000] <othermaciej>
/me is not sure what to think of this

[17:12:02.0000] <Rik`>
WOFF and ?

[17:13:00.0000] <TabAtkins>
CWT.

[17:13:01.0000] <TabAtkins>
Which is a fancy name for version 1 EOT.

[17:13:02.0000] <TabAtkins>
With some of the header cruft ignored.

[17:13:03.0000] <othermaciej>
and then it will also recommend regular OTF and SVG fonts, and require browsers to implement at least 2

[17:13:04.0000] <othermaciej>
call me crazy, but isn't this even worse for interop than the status quo?

[17:14:00.0000] <TabAtkins>
I don't see how it can possibly be worse.

[17:14:01.0000] <TabAtkins>
But it's likely that everyone will end up supporting WOFF.

[17:14:02.0000] <Rik`>
othermaciej: my understanding is that the goal is not interop but font makers pleasure

[17:14:03.0000] <othermaciej>
I'm trying to figure out if I should ask our AC Rep to oppose this or just close my eyes and think of england

[17:16:00.0000] <TabAtkins>
What would you propose if you opposed it?

[17:17:00.0000] <othermaciej>
not having a Fonts working group at all

[17:17:01.0000] <TabAtkins>
And then do what about font interop?  Hope it all works out?

[17:19:00.0000] <othermaciej>
wait for one side or the other to capitulate

[17:20:00.0000] <othermaciej>
another alternative would be to pursue only one new font format and get everybody on board with implementing it, instead of the weird "pick 2 of 4" thing

[17:20:01.0000] <TabAtkins>
Sylvain appears to be hinting that WOFF is his expected consensus solution.

[17:21:00.0000] <TabAtkins>
(Though I'm still gunning for CWT.)

[17:21:01.0000] <othermaciej>
that being said, WOFF seems DRM-free

[17:21:02.0000] <TabAtkins>
None of the 4 formats are DRMed in any way, shape, or form.

[17:21:03.0000] <othermaciej>
it just seems like implementing it is a giant waste of effort

[17:22:00.0000] <TabAtkins>
Yeah, but MS hasn't given up and implemented TTF yet, and hasn't given any indications that they'd like to, either.

[17:23:00.0000] <Rik`>
TabAtkins: MS hasn't implemented addEventListener but no one has invented yet another way to add handlers because of that

[17:24:00.0000] <TabAtkins>
Yeah, but has MS consistently openly refused to implement it, and had strong statements from people in the organization that they don't expect to?

[17:25:00.0000] <Rik`>
that's not the point

[17:25:01.0000] <TabAtkins>
It is.  There's a difference between "hasn't done it yet" and "has refused to do it".

[17:25:02.0000] <Rik`>
developers know how to use different code paths for stupid browsers

[17:27:00.0000] <Rik`>
if MS doesn't want to play ball and developers have a cross browser solution, why would you invent something else ?

[17:27:01.0000] <TabAtkins>
But JS differences can be papered over trivially in libraries so you never have to think about it again.  This isn't the same thing.

[17:27:02.0000] <TabAtkins>
...we *don't* have a cross-browser solution.  We have two separate solutions that we have to weld together manually every single time we want to use them.

[17:28:00.0000] <Rik`>
they are ttf2eot tools, it's a one line fix

[17:28:01.0000] <TabAtkins>
And you have to store both and link both every time.

[17:29:00.0000] <Rik`>
"store" a  < 1mo file ?

[17:30:00.0000] <Rik`>
people already have a lot of CSS path for IE

[17:30:01.0000] <TabAtkins>
It's still a hassle.  Imagine if you had to duplicate every image you used on your site and link both of them.

[17:30:02.0000] <Rik`>
isn't that what people do for PNG alpha transparency ?

[17:30:03.0000] <TabAtkins>
No.  They either link a non-PNG, or they use one of the pngFix libraries, or they just ignore ie6.

[17:31:00.0000] <Rik`>
and fwiw, people can just treat IE as one of the non supporting browsers

[17:32:00.0000] <TabAtkins>
Yeah, not actually possible when the marketing department wants a special headline font.

[17:33:00.0000] <Rik`>
or you can create a JS library that reads your font-face rules and create a new rule for IE

[17:34:00.0000] <TabAtkins>
That then ties to you js (which is okay if you're doing purely visual tweaks, but not if you're linking in a font for your uncommon language), and still requires two font files to be created (not much of a hassle by itself, but still more than should be necessary).

[17:35:00.0000] <Rik`>
what about the hassle of waiting three years before seeing a version of IE supporting those new formats

[17:36:00.0000] <TabAtkins>
That's why I support CWT.

[17:36:01.0000] <TabAtkins>
Then IE6+ will all work, and I only have to wait for the other browsers to update, which is much faster.

[17:36:02.0000] <Rik`>
and the user base ?

[17:36:03.0000] <TabAtkins>
The userbase of non-IE browsers updates *much* faster.

[17:37:00.0000] <TabAtkins>
I imagine mostly because the browsers are actually willing to auto-update.

[17:37:01.0000] <Rik`>
still need around one year after release

[17:37:02.0000] <TabAtkins>
Yup, that's not so bad.  It is the fastest path to interop among all the options.

[17:37:03.0000] <TabAtkins>
I mean, even if IE promised TTF support in IE9, it'd still be 5+ years before it's usable.

[17:38:00.0000] <Rik`>
or use ttf + eot right now

[17:38:01.0000] <Rik`>
(or in one year for a solid userbase)

[17:38:02.0000] <TabAtkins>
Yeah, that's still a crappy option though.

[17:40:00.0000] <AryehGregor>
How does CWT handle origin control?

[17:41:00.0000] <AryehGregor>
I recall that being a sticking point for an EOT-based solution before I stopped following www-font.

[17:41:01.0000] <TabAtkins>
AryehGregor: The same way TTF does - through same-origin controls.

[17:41:02.0000] <Rik`>
anyway, off to bed

[17:42:00.0000] <TabAtkins>
Later, Rik`.

[17:42:01.0000] <AryehGregor>
If the rootstring is nonempty, is it ignored, or do non-IE browsers refuse to process the file?

[17:43:00.0000] <TabAtkins>
CWT has no rootstring - it's current based on eot version 1.

[17:43:01.0000] <AryehGregor>
So IE <= 8 (i.e., large majority of users' browsers) won't implement origin restrictions at all, then?

[17:43:02.0000] <TabAtkins>
Even when it was based on version 2, cwt itself had no rootstring, it just had meaningless padding.  Whether or not legacy nonconforming clients interpreted that padding as a rootstring was up to them.

[17:43:03.0000] <TabAtkins>
(Which I preferred, but people bitched about it.)

[17:43:04.0000] <AryehGregor>
Are font foundries actually willing to license anything in this format?

[17:43:05.0000] <TabAtkins>
And yes.

[17:44:00.0000] <TabAtkins>
Anyone who's licensing in TTF would obviously license in CWT.

[17:44:01.0000] <AryehGregor>
Right, but the point is a lot of foundries don't want to license in TTF, I thought?

[17:44:02.0000] <AryehGregor>
Or have a lot of them cracked by now?

[17:45:00.0000] <TabAtkins>
There's still plenty that don't.

[17:45:01.0000] <TabAtkins>
;_;

[17:46:00.0000] <TabAtkins>
But that's why I thought the whole uproar over basing CWT on EOTv2 was stupid.  It would let us make an end-run around that crap without bringing rootstring baggage into future browsers.

[17:46:01.0000] <AryehGregor>
Has any foundry said they'll license EOT but not WOFF, or is everyone as okay with WOFF as they're going to get?

[17:46:02.0000] <TabAtkins>
I dunno.  I know Ascender's cool with CWT, but I dunno if anyone's outright said that they're cool with WOFF.

[17:47:00.0000] <TabAtkins>
/me is heading to dinner now.

[17:47:01.0000] <AryehGregor>
Oh well.  We'll see.

[18:28:00.0000] <roc>
TabAtkins: CWT really isn't appealing as currently specified, see my email. You would have to use Referer checking. Easier to just produce and serve two (or more) font files.

[18:28:01.0000] <roc>
othermaciej: WOFF is trivial. At worst, implementing it is a *tiny* waste of effort

[18:29:00.0000] <othermaciej>
the font guys at Apple were not at all enthusiastic about supporting a new font format

[18:29:01.0000] <othermaciej>
if WOFF can easily and efficiently be converted to OTF or TTF then I guess it's somewhat less of a waste of time

[18:31:00.0000] <roc>
it really is the thinnest possible wrapper around OTF+TTF, plus per-table zlib compression

[18:31:01.0000] <othermaciej>
I'm wary that the "plus" is what will make it nontrivial to implement efficiently (at least given only a blackbox OTF/TTF implementation)

[18:32:00.0000] <roc>
you have to decompress the tables

[18:32:01.0000] <roc>
but you already have to mangle tables

[18:32:02.0000] <othermaciej>
I do?

[18:32:03.0000] <roc>
to work around Windows bugs etc

[18:32:04.0000] <roc>
yep

[18:32:05.0000] <roc>
you do

[18:32:06.0000] <roc>
and the zlib decompression is easier than that

[18:34:00.0000] <roc>
OTF/TTF implementations are more of a black box to us than to you, remember

[18:34:01.0000] <roc>
at least until we ship Harfbuzz

[18:34:02.0000] <othermaciej>
I don't think we do any mangling of tables

[18:35:00.0000] <othermaciej>
(that's either due to my ignorance, or due to the fact that we use Apple's font implementation on Windows)

[18:35:01.0000] <othermaciej>
still seems like a waste of time to me

[18:35:02.0000] <roc>
I'm pretty sure you do

[18:36:00.0000] <othermaciej>
pursuing both WOFF and CWT (but then effectively not mandating either) seems even more wasteful

[18:36:01.0000] <roc>
yeah, we're not interested in that

[18:38:00.0000] <othermaciej>
if everyone else implements WOFF then we'll probably have to, but I can't say the prospect fills me with any enthusiasm

[18:39:00.0000] <roc>
you implemented SVG fonts, which are considerably more useless IMHO

[18:39:01.0000] <othermaciej>
incidentally - am I wrong to be concerned about the idea of a Microsoft-edited Canvas spec? Can't tell if I'm being too paranoid or not paranoid enough

[18:39:02.0000] <roc>
I thought that was weird too

[18:39:03.0000] <jcranmer>
roc: I think Hixie disagrees... it's in Acid3, after all

[18:40:00.0000] <othermaciej>
SVG fonts are kind of useless for real content, but at least they can achieve special effects that other font formats can't do

[18:40:01.0000] <roc>
othermaciej: yeah, but you didn't implement that part

[18:40:02.0000] <roc>
jcranmer: I think Hixie may regret putting in Acid3, you should ask him

[18:40:03.0000] <othermaciej>
what do you mean? colored glyphs work fine afaik

[18:41:00.0000] <roc>
not in my tests

[18:41:01.0000] <othermaciej>
as does crazy stuff like per-character rotation and positioning on a path (though the latter I think you can do with SVG text and non-SVG fonts)

[18:41:02.0000] <roc>
yes, you can

[18:42:00.0000] <jcranmer>
hmm, why are the animation tests failing on FF 3.6?

[18:42:01.0000] <roc>
othermaciej: see http://lists.w3.org/Archives/Public/www-svg/2009Sep/0013.html

[18:42:02.0000] <othermaciej>
text on a path should really be doable without using SVG at all IMO

[18:42:03.0000] <roc>
maybe my testcase is broken but no-one contradicted me

[18:43:00.0000] <othermaciej>
our implementation doesn't rasterize the glyphs, it just draws them anew every time, so I'd be surprised if it had that limitation

[18:43:01.0000] <roc>
what limitation?

[18:43:02.0000] <roc>
SVG glyphs really have two parts

[18:44:00.0000] <roc>
a path in the "d" attribute of the <glyph> element

[18:44:01.0000] <roc>
and arbitrary SVG content in the subtree rooted at <glyph>

[18:44:02.0000] <roc>
as far as I could tell, Opera and Webkit support the former but not the latter

[18:44:03.0000] <roc>
again, maybe I'm wrong

[18:44:04.0000] <othermaciej>
I see

[18:45:00.0000] <roc>
if you read that thread, I have some arguments that the way arbitrary-content glyphs are handled is actually quite broken

[18:46:00.0000] <roc>
oh, in a slightly later thread: http://lists.w3.org/Archives/Public/www-svg/2009Sep/0043.html

[18:47:00.0000] <othermaciej>
I'm sure you're right - <foreignObject> in a glyph could be quite crazy

[18:47:01.0000] <othermaciej>
(though not that much worse than <use>)

[18:48:00.0000] <roc>
somewhat worse, since you have to support associating the anonymous content with HTML text, you can't just confine the madness to SVG

[18:50:00.0000] <roc>
the quandry we have over SVG fonts is whether to implement the subset you guys did --- basically to just pass Acid3, since it offers nothing that is not more conveniently expressed with normal downloadable fonts --- or to implement the whole thing, which actually might be useful but has serious implementation difficulties that no-one else has seen fit to tackle yet

[18:50:01.0000] <roc>
and actually kinda sucks for authors anyway

[19:00:00.0000] <othermaciej>
the original reason we have SVG fonts at all is due to enthusiasm of some of the contributors who wrote our original SVG implementation

[19:01:00.0000] <othermaciej>
(they added fonts later, but it was the same guys basically)

[19:01:01.0000] <othermaciej>
although we did fix a bunch of bugs with metrics and other arcane details for Acid3

[19:02:00.0000] <othermaciej>
I think having SVG font and SVG animation tests in Acid3 was kind of lame; at the time only Opera had these things implemented and I think it was an Opera developer who submitted those particular tests

[19:02:01.0000] <roc>
that is true

[19:04:00.0000] <roc>
Acid3 marketing is likely to just force us to implement at least that subset of SVG fonts

[19:05:00.0000] <roc>
but if the arbitrary-SVG feature doesn't get implemented, or does get implemented according to the current spec and sucks as much as I think it will, then Acid3 will be responsible for a stupid wart in the Web platform

[19:08:00.0000] <roc>
oh well, few participants are completely guiltless on that score :-)

[19:18:00.0000] <othermaciej>
indeed

[19:18:01.0000] <othermaciej>
there's no shortage of warts

[19:23:00.0000] <roc>
they still irritate me

[19:23:01.0000] <othermaciej>
I try to focus my irritation on proposals to add new warts

[20:08:00.0000] <TabAtkins>
roc, othermaciej: If I recall correctly, CWT is similarly a super-thin wrapper over TTF.  Isn't it nothing more than a header of a couple of bytes?  It doesn't even employ any manipulation of the font-data (EOT can do compression on fonts, but the CWT proposal currently specifies uncompressed fonts, to avoid patent issues).

[20:09:00.0000] <othermaciej>
doesn't EOT have XOR "encryption"?

[20:09:01.0000] <TabAtkins>
I don't believe that the EOT version used for CWT does.

[20:09:02.0000] <TabAtkins>
(It's been a few months since the font discussion, though.)

[20:10:00.0000] <TabAtkins>
/me is pulling up the archives real quick to see if he can answer definitively.

[20:14:00.0000] <TabAtkins>
othermaciej: I just confirmed - CWT uses *no* scrambling, XOR, MTX, or otherwise.

[20:14:01.0000] <othermaciej>
does it alter the font file less than WOFF?

[20:16:00.0000] <TabAtkins>
*All* that it does is prepend the font with some header bytes.  That's literally it.  Chop off the header and you've got a perfectly valid ttf font.

[20:17:00.0000] <TabAtkins>
So, yes.

[20:17:01.0000] <TabAtkins>
(Since WOFF does the per-table compression.)

[20:17:02.0000] <othermaciej>
I guess that is an advantage - the downside being that people who only test in IE may accidentally serve EOT fonts using more than the CWT subset

[20:19:00.0000] <TabAtkins>
True, but the common options used when generating EOT will make it immediately fail in a normal CWT-supporting browser.  So you'd really have to test *only* in IE.

[20:20:00.0000] <TabAtkins>
Here's Daggett's 1.1 proposal.  I think it's the latest 'official' specced version: http://lists.w3.org/Archives/Public/www-font/2009JulSep/0969.html

[20:21:00.0000] <othermaciej>
"the common options used when generating EOT will make it immediately fail in a normal CWT-supporting browser" -- that's not a feature!

[20:21:01.0000] <TabAtkins>
Sure it is.  It keeps you from accidentally serving EOT.  ^_^

[20:22:00.0000] <othermaciej>
it would be much better if the common options used when generating EOT made it Just Work(tm) in a normal CWT-supporting browser

[20:22:01.0000] <othermaciej>
though I'm sure the tradeoff there is implementation complexity

[20:23:00.0000] <TabAtkins>
But the common option is one of the compression options.

[20:23:01.0000] <TabAtkins>
Yeah.

[02:41:00.0000] <gsnedders>
/me is trying to fix the only test failure in html5lib

[03:05:00.0000] <MikeSmith>
hsivonen, Hixie: I just checked in a v.nu change to fix the <caption> error

[03:05:01.0000] <MikeSmith>
so the spec now validates once again

[03:05:02.0000] <MikeSmith>
http://qa-dev.w3.org:8888/?doc=http://www.whatwg.org/specs/web-apps/current-work/

[03:06:00.0000] <Hixie>
i bet the complete.html file still doesn't validate :-)

[03:06:01.0000] <MikeSmith>
ah

[03:06:02.0000] <MikeSmith>
OK, I'll check that next

[03:06:03.0000] <MikeSmith>
Hixie: that was due to the microdata thing, right?

[03:06:04.0000] <Hixie>
yeah

[03:06:05.0000] <MikeSmith>
OK

[03:06:06.0000] <MikeSmith>
I'll look at that next

[03:08:00.0000] <MikeSmith>
hsivonen: it seems that maxFileSize needs to be increased once again

[03:08:01.0000] <MikeSmith>
HTML5 is now 4304 KB

[03:09:00.0000] <MikeSmith>
/me hopes complete.html is not more than 5MB

[03:34:00.0000] <Philip`>
MikeSmith: Content-Length: 4831259

[03:35:00.0000] <Philip`>
But I bet it'll grow :-p

[03:35:01.0000] <MikeSmith>
yeah

[03:35:02.0000] <MikeSmith>
I upped it to 5120 on qa-dev for now

[03:36:00.0000] <MikeSmith>
Hixie: OK, patched it enough for now to get complete.html to validate -

[03:36:01.0000] <MikeSmith>
http://qa-dev.w3.org:8888/?doc=http://www.whatwg.org/specs/web-apps/current-work/complete.html

[03:36:02.0000] <Hixie>
i'm gonna have to start writing test cases for validators :-)

[03:36:03.0000] <MikeSmith>
heh

[03:36:04.0000] <MikeSmith>
<snort>

[03:38:00.0000] <MikeSmith>
with that, I gots to drop off and catch a train back to civilization.. back later

[03:58:00.0000] <mikekelly>
I hope Roy doesn't bite my head off :(

[04:00:00.0000] <mikekelly>
we RESTafarians have a vengeful god

[04:02:00.0000] <Dashiva>
Don't worry, Roy bites everyone's head off

[04:03:00.0000] <Philip`>
How is this "other applicable specifications" thing meant to work when applying multiple specs that conflict?

[04:03:01.0000] <Philip`>
and you'd get a different interpretation depending on which order you apply them in

[04:04:00.0000] <Dashiva>
Philip`: If they conflict they aren't all applicable?

[04:06:00.0000] <Philip`>
/me tries in vain to think of a concrete example

[04:09:00.0000] <Philip`>
I don't mean things that conflict incompatibly, just things that define non-commutative changes to parts of HTML5

[04:10:00.0000] <mikekelly>
Is that point the Smylers guy made true - that html implements the features of related specs/protocols that it deems appropriate?

[04:10:01.0000] <Philip`>
No

[04:10:02.0000] <mikekelly>
so interop is an objective?

[04:11:00.0000] <Dashiva>
Philip`: Could you make up an unrealistic example?

[04:11:01.0000] <mikekelly>
I really think that http conneg needs to be accepted how its defined right now (as I'm reading it) or re-written to suit the purposes of everyon else's interpretation

[04:12:00.0000] <Hixie>
Philip`: you have to pick the order in which they apply

[04:12:01.0000] <mikekelly>
because everyone else's interpretation (regardless of whether it's "practical or not") makes assumptions which are not specified in the spec

[04:12:02.0000] <Philip`>
Dashiva: Maybe I'm thinking of something like if HTML5 didn't include SVG itself, and a separate spec said "parse everything as normal except when you get an xmlns:xlink attribute do this magic thing etc", and another spec says "parse everything as normal except when you get an xmlns:* attribute do Namespaces-like processing"

[04:13:00.0000] <Dashiva>
Right

[04:13:01.0000] <Dashiva>
That's the motivation for internalizing everything requiring parser/tokenizer changes

[04:13:02.0000] <Dashiva>
Maybe that should be clarified

[04:14:00.0000] <Philip`>
and so an HTML5+SVG+NS implementation will give different output to an HTML5+NS+SVG implementation

[04:14:01.0000] <Hixie>
always a risk

[04:14:02.0000] <Hixie>
but that's the case regardless of what html5 says

[04:14:03.0000] <Hixie>
since other specs can always say they override it

[04:14:04.0000] <Hixie>
and you can always chose to honour or not honour spces

[04:14:05.0000] <Hixie>
specs

[04:16:00.0000] <mikekelly>
you can assuming you are comfortable with the social costs of doing that

[04:17:00.0000] <Philip`>
The (hypothetical) issue is that you choose to perfectly honour precisely the same set of specs as somebody else, yet get a different output because you're interpreting them in a different order

[04:17:01.0000] <mikekelly>
of course that is not of massive concern if you live with your head up your anus

[04:17:02.0000] <Philip`>
so the order is just as important as the choice of honouring or not

[04:18:00.0000] <Hixie>
Philip`: yes

[04:19:00.0000] <Philip`>
mikekelly: Rewriting specs to match reality sounds like a good idea - try asking the HTTP people to do that, if you think they're wrong

[04:19:01.0000] <Dashiva>
HTTP being wrong? Heresy

[04:21:00.0000] <Philip`>
mikekelly: Oh, when I said "No" to you earlier I had misread your question

[04:21:01.0000] <Philip`>
I thought you said "Is that the point ..." and it wasn't that point, but that wasn't what you said

[04:21:02.0000] <Philip`>
so ignore my response

[04:25:00.0000] <mikekelly>
ok..

[04:25:01.0000] <mikekelly>
what of http isn't written to match reality?

[04:26:00.0000] <mikekelly>
i'm not challenging you I'm asking for your opinion

[04:26:01.0000] <Philip`>
mikekelly: Presumably the bits where you say everybody (except you) disagrees with it

[04:27:00.0000] <mikekelly>
right - so the conneg definitions which clearly state they are tied to a *request* and yet everyone insist they are somehow tied to client default preferences

[04:27:01.0000] <mikekelly>
I agree.

[04:28:00.0000] <mikekelly>
I think you're all missing an opportunity for efficiency gains

[04:28:01.0000] <mikekelly>
but that's fine - it should be cleared up in the http spec if everyone insists on being wrong :P

[04:29:00.0000] <mikekelly>
the world of caching shall forever be flat.

[04:30:00.0000] <mikekelly>
aside from that, I don't think http gets much wrong

[04:30:01.0000] <mikekelly>
what else did you have in mind?

[04:31:00.0000] <mikekelly>
(bearing in mind that HTML's deficiencies will play a large role in what does or doesn't work "in practice")

[04:31:01.0000] <mikekelly>
presumably why PUT/DELETE are being added

[04:32:00.0000] <mikekelly>
even though "in practice" PUT/DELETE "don't work"

[04:32:01.0000] <mikekelly>
because they "aren't used"

[04:32:02.0000] <gsnedders>
mikekelly: See AryehGregor's email for an example where HTTP cannot help caching, due to the complexity of a lot of websites

[04:32:03.0000] <gsnedders>
mikekelly: e.g., on my blog, posting a new page via PUT would only invalid one page's cache, not the entire website's as would be needed

[04:32:04.0000] <mikekelly>
gsnedders: I deliberately didn't repsond to that because the response would be long winded and not a lot to do with html

[04:32:05.0000] <mikekelly>
it's to do with how you identify resources

[04:32:06.0000] <mikekelly>
and how granular you make them

[04:33:00.0000] <mikekelly>
and/or how much you avoid composite resources

[04:33:01.0000] <mikekelly>
which derive state from other resources

[04:33:02.0000] <mikekelly>
that is a design decision and your application can address those issues depending on the requirements

[04:33:03.0000] <mikekelly>
there's also absolutely no requirement to implement that kind of caching mechanisms across the board

[04:33:04.0000] <mikekelly>
it can be applied where and when it is most valuable

[04:35:00.0000] <mikekelly>
feel free to contest that btw..

[04:36:00.0000] <mikekelly>
gsnedders: if you submit a new post with POST to your 'root' blog resource

[04:36:01.0000] <mikekelly>
POST /Blog would indicate the blog resource shouldbe invalidated

[04:37:00.0000] <mikekelly>
a composite resource at blog would emit the blog post information within the blog resource

[04:37:01.0000] <mikekelly>
the alternative is to simply provie the links to the posts

[04:37:02.0000] <mikekelly>
and use javascript to fetch each post and render it onto the page

[04:38:00.0000] <mikekelly>
which prevents the blog page becoming stale if you PUT a new version of a particular post

[04:39:00.0000] <mikekelly>
 obviously if you create a new blog post using PUT to a new URI - then the blog page would not be updated

[04:39:01.0000] <mikekelly>
that makes sense..

[04:39:02.0000] <mikekelly>
which is why it would make more sense to use POST

[04:39:03.0000] <annevk>
/me is with othermaciej on the fonts crap

[04:40:00.0000] <Philip`>
(Becuse a dozen cached requests to generate a blog's front page with a dozen posts is going to be much more efficient than a single uncached request?)

[04:40:01.0000] <Philip`>
s//a/

[04:40:02.0000] <mikekelly>
depends on the complexity behind the URI

[04:40:03.0000] <mikekelly>
that is just an example

[04:40:04.0000] <mikekelly>
it's a trade-off

[04:40:05.0000] <mikekelly>
I think I've said that about 12 times now :)

[04:42:00.0000] <mikekelly>
disagree?

[04:43:00.0000] <mikekelly>
ok.. then..

[04:43:01.0000] <mikekelly>
:)

[04:45:00.0000] <Philip`>
/me is too busy eating biscuits to disagree

[04:45:01.0000] <mikekelly>
heh, this is a good example of why we are going round in circles

[04:46:00.0000] <mikekelly>
gsnedders: which parts of that do you disagree with/are skeptical about?

[04:47:00.0000] <annevk>
gsnedders, where are you?

[04:47:01.0000] <annevk>
gsnedders, and where do we need to be? I'm somewhere close to the bar, near the beachfront

[04:48:00.0000] <gsnedders>
annevk: Between the restaurant and the room we were in earlier

[04:48:01.0000] <gsnedders>
annevk: I'm sitting with jgraham hacking on html5lib

[04:48:02.0000] <annevk>
good stuff

[04:49:00.0000] <annevk>
I haven't gotten further than reading email

[04:49:01.0000] <annevk>
/me was planning on editing

[04:51:00.0000] <annevk>
with regards to the range API discussion earlier

[04:51:01.0000] <annevk>
that is planned

[04:51:02.0000] <annevk>
but note that hit testing is not actually defined yet anywhere

[04:52:00.0000] <annevk>
so technically everything is up in the air

[04:52:01.0000] <annevk>
but if a UA implements a sensible definition of hit testing it will prolly work

[04:55:00.0000] <gsnedders>
annevk: Is it cold there?

[04:55:01.0000] <jgraham>
/me would prefer nto be near the beach

[04:55:02.0000] <annevk>
not really

[04:55:03.0000] <jgraham>
Or on the beach if the wifi would extend that far

[04:55:04.0000] <annevk>
dunno about that

[04:55:05.0000] <gsnedders>
That would be cold.

[04:56:00.0000] <gsnedders>
This is Sweden, after all.

[04:56:01.0000] <annevk>
yeah, you need more than a t-shirt

[04:56:02.0000] <jgraham>
I could get a hat

[04:56:03.0000] <annevk>
it'd be a start

[04:56:04.0000] <jgraham>
gloves might make typing hard though

[04:56:05.0000] <annevk>
though sand in your keyboard sucks

[04:56:06.0000] <gsnedders>
I have a hoodie t-shirt on, so anything on this looks kinda stupid

[04:57:00.0000] <gsnedders>
annevk: How'd you get there? Just through the big hall?

[05:04:00.0000] <annevk>
I ate lunch here

[05:04:01.0000] <annevk>
there's a staircase just before you enter the dining area

[05:11:00.0000] <gsnedders>
annevk: Oh, that place, I thought by "near the beachfront" you meant outside. But there again, here, near the beachfront can quite easily be inside :)

[05:12:00.0000] <annevk>
indeed

[07:44:00.0000] <gsnedders>
html5lib now passes 100% on a stock Python setup!

[07:44:01.0000] <jgraham>
gsnedders: Now install bs

[07:44:02.0000] <gsnedders>
jgraham: That's bullshit

[07:44:03.0000] <jgraham>
Sigh

[07:52:00.0000] <TabAtkins>
/me giggles.

[08:27:00.0000] <TabAtkins>
Would anyone have any idea/way of checking if aria roles are already commonly used in HTML on the web?

[08:30:00.0000] <Philip`>
TabAtkins: I wouldn't

[08:30:01.0000] <Philip`>
(I can only look at stuff from six months ago)

[08:30:02.0000] <TabAtkins>
k.

[08:30:03.0000] <TabAtkins>
Well hey, was aria common the web six months ago?

[08:36:00.0000] <Philip`>
TabAtkins: http://philip.html5.org/data/role-attributes-raw.txt is the raw data from 425K dotbot pages

[08:36:01.0000] <Philip`>
(including non-text/html pages)

[08:42:00.0000] <Philip`>
Does the validator.nu parser have the scripting flag enabled or disabled by default?

[08:45:00.0000] <TabAtkins>
Philip`: Thanks, that's very useful!  It appears that aria was almost completely unused.

[08:52:00.0000] <Philip`>
TabAtkins: Almost completely used in static markup in pages which were in the sample

[08:52:01.0000] <TabAtkins>
Yus.  Good enough for me.

[08:52:02.0000] <Philip`>
The "static" is probably the main issue - it's presumably used a lot more in scripted widget libraries, not static content

[08:53:00.0000] <TabAtkins>
Philip`: But I don't see a single aria-related use of role which is grossly changing the semantics of the element it is applied to, which is what I was looking for.

[08:54:00.0000] <TabAtkins>
I expect that widget libraries tend to rely on <div> and <span>, where all roles are valid, and thus they aren't relevant to the discussion with Leif.

[08:54:01.0000] <Philip`>
TabAtkins: http://google.com/codesearch?q=role%3D+lang%3Ahtml

[08:54:02.0000] <Philip`>
That might be more useful

[08:55:00.0000] <Philip`>
http://google.com/codesearch?q=role%3D+lang%3Ajs too

[08:56:00.0000] <TabAtkins>
That is useful, thank ou!

[08:56:01.0000] <Philip`>
Dojo uses waiRole="..."? I thought it was meant to be role="..."...

[09:03:00.0000] <Philip`>
Why aren't computers infinitely fast :-(

[09:44:00.0000] <TabAtkins>
Philip`: Because if they were we'd be living in a simulation with probability 100%.

[09:49:00.0000] <mikekelly>
hello browser people

[09:51:00.0000] <gsnedders>
jgraham: Can I just make html5lib raise a warning with bs + ns?

[09:51:01.0000] <mikekelly>
is there a chance we could ever have functionality where javascript can cause new page to load with custom headers?

[09:55:00.0000] <Philip`>
zcorpan: Ping

[09:56:00.0000] <gsnedders>
/me notes he hasn't seen zcorpan with a computer all day

[09:56:01.0000] <Philip`>
He can read logs :-)

[09:56:02.0000] <gsnedders>
I am aware. I'm just letting you know you won't get a quick response

[09:56:03.0000] <Philip`>
Or you could ping him manually

[09:56:04.0000] <Philip`>
if you're near him

[09:57:00.0000] <gsnedders>
Philip`: I don't think he's in this room

[09:57:01.0000] <Philip`>
or even point him at http://philip.html5.org/data/cdata-containing-self-close.txt

[09:57:02.0000] <Philip`>
which hopefully isn't too incompatible with what he wanted

[09:58:00.0000] <Philip`>
/me is happy to wait until whenever he gets back here

[10:09:00.0000] <gsnedders>
Philip`: pong from zcorpan

[10:09:01.0000] <jgraham>
gsnedders: It already does, doesn't it?

[10:09:02.0000] <gsnedders>
Philip`: thanks from zcorpan

[10:19:00.0000] <gsnedders>
Hixie: WAKE UP!

[10:27:00.0000] <Philip`>
gsnedders: If you use figlet you can shout louder on IRC, which might wake him up

[10:28:00.0000] <RIK|WORK>
PS : IT IS CAPS LOCK DAY

[10:31:00.0000] <Philip`>
RIK|WORK: I have caps lock on all the time but I hold down shift too so that I irritate people less

[10:52:00.0000] <Philip`>
The spec comment box ought to be bigger

[16:00:00.0000] <TabAtkins>
roc: Which is easier for you - (1) defaulting the first/last stops if necessary, then correcting misordered stops, then defaulting any remaining stops, or (2) correcting misordered stops, then defaulting all remaining stops, with first being min(0,first specified stop) and last being max(100%,last specified stop)?

[16:00:01.0000] <roc>
the former, since that's what I implemented

[16:01:00.0000] <TabAtkins>
kk.

[16:01:01.0000] <roc>
it's efficient, I do it in O(N) time in the number of stops, and it's reasonably simple

[16:03:00.0000] <sicking>
Hixie: does @rel no longer allow URI tokens?

[16:04:00.0000] <sicking>
Hixie: without registring them in the wiki that is

[16:04:01.0000] <Hixie>
it's never allowed tokens that aren't registered as far as i recall

[16:04:02.0000] <Hixie>
registering them is pretty trivial though

[16:09:00.0000] <TabAtkins>
roc: Changes made, and are visible in the draft on my site.  Thanks for the "specified position" terminology - I was struggling with how to say that.  Also rearranged/reworded linear-gradient()'s treatment of the two <angle> cases to allow the behavior you've implemented.

[16:09:01.0000] <roc>
yay, thanks

[16:12:00.0000] <TabAtkins>
No problem; thanks for implementing it.  ^_^  I'm speccing the repeating-* functions now.

[16:14:00.0000] <roc>
BTW, Firefox builds with the implementation here: https://build.mozilla.org/tryserver-builds/zweinberg⊙mc

[16:15:00.0000] <TabAtkins>
There any instructions on installing ff builds?  Never done one before.

[16:23:00.0000] <roc>
depends on the platform

[16:23:01.0000] <roc>
but these builds install just like any other Firefox release

[16:24:00.0000] <roc>
if you're on Windows, the easiest thing to do is to just download the ZIP, unzip it somewhere, and run firefox.exe

[16:24:01.0000] <roc>
it's that simple

[16:25:00.0000] <Philip`>
and make sure you're not already running a Firefox process

[16:25:01.0000] <roc>
you may want to run "firefox.exe -P" and create a new profile for testing, that lets you run concurrently with an already-running Firefox

[16:26:00.0000] <Philip`>
Don't you need to add -noremote or something?

[16:26:01.0000] <roc>
yeah, you probably do

[16:27:00.0000] <Philip`>
So it's not quite that simple ;-)

[16:27:01.0000] <roc>
running with a different profile can also be good because there is also a small chance that running a trunk build with your existing profile will cause problems when you go back to using your release version with that profile, although that has never happened to me, so the chances are very small indeed

[16:28:00.0000] <TabAtkins>
Since I do IRC using chatzilla, being able to run it concurrently seems useful.

[16:28:01.0000] <roc>
Philip`: perhaps Tab runs IE as his main browser? :-)

[16:29:00.0000] <jwalden>
TabAtkins: http://chatzilla.rdmsoft.com/xulrunner/

[16:29:01.0000] <Philip`>
/me shudders

[16:29:02.0000] <TabAtkins>
No, I run chatzilla in FF, gmail in chrome, then everything else in whichever one is handy when I ctrl+t.

[16:31:00.0000] <TabAtkins>
jwalden: Thanks!

[16:33:00.0000] <jwalden>
chatzilla as its own app is so much money it's not even funny

[16:34:00.0000] <jwalden>
especially back when its link-opening behavior wouldn't open a new tab but rather blow away the most recent one

[16:35:00.0000] <daedb>
sigh... I'm trying to learn some simple <canvas> stuff (using Dive into html5 as a guide), and I can't even get past the first bloody getContext. Javascript hates me :(

[16:38:00.0000] <Philip`>
daedb: Sounds like a bug in Dive into HTML5 if you can't get its examples to work

[16:38:01.0000] <Philip`>
daedb: Blame mpilgrim :-)

[16:40:00.0000] <TabAtkins>
All right, got it running.  Awesome.

[16:40:01.0000] <TabAtkins>
That was too easy.

[16:43:00.0000] <daedb>
Philip`: I found a tutorial on Mozilla's dev site, and it's exactly the same with their example code...

[16:45:00.0000] <Philip`>
daedb: What kind of problem are you getting?

[16:45:01.0000] <Philip`>
daedb: Also, what browser are you running it in? (I hope it's not IE :-) )

[16:46:00.0000] <daedb>
Philip`: <script>var canvas = document.getElementById('tid'); var context = canvas.getContext('2d');</script> <-- all my code so far, gives a TypeError (message: Statement on line 1: Cannot convert undefined or null to Object

[16:46:01.0000] <daedb>
)

[16:46:02.0000] <daedb>
this is in Opera, btw

[16:46:03.0000] <Philip`>
daedb: Do you have a <canvas id=tid></canvas>, before the script?

[16:48:00.0000] <daedb>
The <canvas> has to be before the <script>? I had the script in the head...

[16:48:01.0000] <TabAtkins>
The script is trying to run before the <canvas> is loaded.

[16:49:00.0000] <Philip`>
Is there some way I can do something equivalent to <div style="background: black; opacity: 0.8"> (on top of a background image) that also works in IE6+?

[16:49:01.0000] <daedb>
Whee, it works after moving down the script. Thanks, Philip`!

[16:49:02.0000] <Philip`>
daedb: The <script> executes as soon as it's parsed, so the <canvas> hasn't been parsed yet, but you could solve it more nicely by using onload

[16:49:03.0000] <TabAtkins>
Philip: use a PNG and one of the pngFix libraries?

[16:49:04.0000] <Philip`>
daedb: like <script>function draw() { var canvas = ... }; window.onload = draw;</script> ... <canvas>

[16:51:00.0000] <TabAtkins>
Or like <script>$(function(){ var canvas=...; });</script> ^_^

[16:51:01.0000] <Philip`>
TabAtkins: My way requires tens of kilobytes less scripting :-p

[16:51:02.0000] <TabAtkins>
Bah.

[16:52:00.0000] <daedb>
heh, I don't do much javascript... I should probably learn it properly some day :p

[16:53:00.0000] <TabAtkins>
It's a good language, once you library your way past the bad DOM apis.

[16:57:00.0000] <TabAtkins>
Sigh... Damn you, magic fieldset styling.  I hate you *so* much.


2009-10-23
[17:03:00.0000] <TabAtkins>
Ah, but bless you, details.  Trivial to hack support for, and just the right element for my needs.

[17:12:00.0000] <Philip`>
TabAtkins: Aha, it works if I do a transparent-PNG-fix style thing

[17:12:01.0000] <Philip`>
without needing an actual PNG

[17:12:02.0000] <Philip`>
just using filter:progid:DXImageTransform.Microsoft.Alpha(opacity=80);

[17:12:03.0000] <Philip`>
(at least in IE8, I assume it'll work in IE6/7 too)

[17:19:00.0000] <Hixie>
hm

[17:19:01.0000] <Hixie>
i don't say how to handle <link type=""> if the type can't be parsed

[17:19:02.0000] <Hixie>
wonder what the spec should say for that case

[17:23:00.0000] <Philip`>
Fatal error, YSOD

[17:25:00.0000] <Hixie>
mmhm

[17:26:00.0000] <Hixie>
webkit seems to ignore type="" altogether

[17:54:00.0000] <TabAtkins>
Philip`: Oh, duh.  I knew MS had a plain opacity filter.  Silly me.

[18:23:00.0000] <TabAtkins>
roc: Specced repeating gradients.  Let me know if something doesn't match your implementation.

[18:23:01.0000] <roc>
ta

[18:38:00.0000] <roc>
TabAtkins: looks great

[18:41:00.0000] <Hixie>
watcha guys working on that has all these gradient thingies?

[18:42:00.0000] <roc>
CSS gradients spec

[18:42:01.0000] <roc>
sorry, off topic

[18:42:02.0000] <Hixie>
oh, cool

[18:42:03.0000] <Hixie>
not at all off topic, don't worry

[18:42:04.0000] <Hixie>
this channel has no topic

[18:42:05.0000] <Hixie>
the only thing that's off-topic is logic

[18:50:00.0000] <Hixie>
anyone remember what IE's equivalent of event.target is?

[18:53:00.0000] <miketaylr>
event.srcElement?

[18:54:00.0000] <Hixie>
thanks

[18:54:01.0000] <miketaylr>
np

[19:52:00.0000] <TabAtkins>
roc: Oh man, gradient support looks beautiful.  Thanks so much.

[19:52:01.0000] <roc>
pleasure

[19:52:02.0000] <roc>
thanks for writing a decent spec

[19:53:00.0000] <roc>
a good spec, atually

[19:54:00.0000] <TabAtkins>
Woo!

[19:54:01.0000] <TabAtkins>
 /spec high-five

[21:53:00.0000] <othermaciej>
we should update WebKit's gradient implementation

[22:00:00.0000] <Hixie>
what does an HTTP client do when an HTTP _server_ (not proxy) replies with 407?

[22:01:00.0000] <weinig>
othermaciej: how different is the new spec?

[22:02:00.0000] <othermaciej>
weinig: different (arguably better) syntax from what we had I think

[22:02:01.0000] <weinig>
/me should take a look

[22:02:02.0000] <othermaciej>
Hixie: I would assume either "get really confused" or "report an error"

[22:03:00.0000] <othermaciej>
oddly, it's not something we've tested

[22:04:00.0000] <othermaciej>
weinig: if I'm well enough to come in tomorrow I may borrow you part of the day to work on some standards stuff - we need to give feedback on File API and maybe you can help me, and maybe I can take a whack at helping you update Web IDL to ES5

[22:04:01.0000] <weinig>
othermaciej: I would very much like that

[22:04:02.0000] <othermaciej>
that being said, my throat still feels like it's full of razor blades duct taped to angry badgers, so I have my doubts about being in tomorrow

[22:05:00.0000] <weinig>
othermaciej: :(

[22:06:00.0000] <othermaciej>
weinig: it sound like a lot of our team is out of action with something possibly similar, so I'm hesitant to go into the office til I'm confident that I am not contagious

[22:08:00.0000] <weinig>
othermaciej: yeah, it does seem like there is a hit out on the safari team, flu wise

[22:16:00.0000] <Hixie>
0 e-mails

[22:16:01.0000] <Hixie>
1 XXX marker (which I am not fixing this year, it's "define WebSQL")

[22:16:02.0000] <Hixie>
22 bugs!

[22:16:03.0000] <Hixie>
where did they come from!

[22:16:04.0000] <Hixie>
we were at zero!

[22:16:05.0000] <Hixie>
man, this never ends

[22:51:00.0000] <JoePeck>
Where would I go to find out about all the html node list / collection types? NodeList, HTMLCollection, HTMLOptionsCollection. Are there others?

[22:55:00.0000] <MikeSmith>
fyi: error messages for obsolete messages now patched in v.nu source to include suggestions about what to use instead

[22:55:01.0000] <MikeSmith>
e.g., http://qa-dev.w3.org:8888/?doc=http://dev.w3.org/html5/tests/validation/full/invalid/obsolete/acronym.html

[22:55:02.0000] <MikeSmith>
"The acronym element is obsolete. Use the abbr element instead."

[22:57:00.0000] <MikeSmith>
still need to add reporting for obsolete attributes

[22:59:00.0000] <Hixie>
JoePeck: HTML5 defines some of them, the rest are probably in DOM Core

[22:59:01.0000] <JoePeck>
Hixie: thanks, bdash pointed me to http://www.whatwg.org/specs/web-apps/current-work/#collections-0

[23:09:00.0000] <Hixie>
/me tries to remember why we need a secondary insertion mode at all

[23:12:00.0000] <Hixie>
oh it's so that <table><tr><td><svg></table> closes the table

[01:36:00.0000] <Hixie>
well

[01:36:01.0000] <Hixie>
technically i'm at 0,1,0

[01:36:02.0000] <Hixie>
i guess it's time to find out what i'm supposed to do to go to last call with all these specs

[01:38:00.0000] <Philip`>
Quick, somebody file more bugs!

[01:39:00.0000] <Philip`>
"If you are satisfied with this response, please change the state of this bug to CLOSED." - does that need to be done by the reporter even for ones reported anonymously through the spec comment box?

[01:40:00.0000] <Hixie>
othermaciej said no, i think

[01:41:00.0000] <Hixie>
not sure though

[01:41:01.0000] <othermaciej>
no one *has* to do it

[01:41:02.0000] <othermaciej>
but if it's not done, then eventually the bug times out into NoReply

[01:41:03.0000] <Philip`>
Is it something that preferably should be done?

[01:42:00.0000] <othermaciej>
it would be nice to have a record of agreement for some comments, at least once HTML WG Last Call begins

[01:42:01.0000] <othermaciej>
and also, I like it when the bug system accurately reflects reality

[01:42:02.0000] <othermaciej>
so I personally prefer it

[01:42:03.0000] <othermaciej>
but no one will yell at you if you don't do it

[01:44:00.0000] <Hixie>
Philip`: if you agree with all of them, just search for your IP and mass-close them :-)

[01:44:01.0000] <Philip`>
Reflecting reality sounds like a worthwhile goal

[01:44:02.0000] <Hixie>
oh, hey, it turns out the whatwg charter doesn't have a "last call" stage

[01:44:03.0000] <Hixie>
we just keep doing call for comments until we're done

[01:44:04.0000] <Hixie>
that's pretty sensible

[01:44:05.0000] <Philip`>
Hixie: Mass-closing doesn't help much when I have to individually read every one to work out if I agree or not :-)

[01:45:00.0000] <Hixie>
Philip`: well you can read them in your e-mail client

[01:45:01.0000] <Hixie>
Philip`: but if you go to the bug, then sure

[01:45:02.0000] <Philip`>
Oh

[01:45:03.0000] <Philip`>
Problem: I can't close the bugs

[01:45:04.0000] <Philip`>
since I'm not the owner or anything

[01:47:00.0000] <Hixie>
zcorpan has rights to give you rights to give yourself the rights to close the bug, iirc

[01:47:01.0000] <Hixie>
(i do not, again iirc)

[01:52:00.0000] <Philip`>
Seems like a flaw in the LC process if reporters can't close their bugs without asking zcorpan

[02:02:00.0000] <Philip`>
MikeSmith: Can somebody like you give me bug-editing privileges?

[02:06:00.0000] <othermaciej>
Philip`: MikeSmith almost certainly can give you the privileges and probably will be willing to if you are a heavy bug filer

[02:09:00.0000] <MikeSmith>
Philip`: I will give you editbugs now

[02:09:01.0000] <Philip`>
I have something like a dozen that I mostly want to close now, and will probably have more in the future since I only read up to about p30 out of 654 :-)

[02:11:00.0000] <Philip`>
MikeSmith: Thanks!

[02:11:01.0000] <Philip`>
MikeSmith: (Do you need to know my email address or anything?)

[02:12:00.0000] <MikeSmith>
Philip`: excors one, right?

[02:12:01.0000] <Philip`>
MikeSmith: Yep

[02:14:00.0000] <Philip`>
MikeSmith: Seems to work fine

[02:15:00.0000] <Philip`>
Don't know if I really need the "member of the XSL or XQuery WG" permission bit but I won't complain

[02:16:00.0000] <MikeSmith>
Philip`: yeah, it does that for everybody .. I have no idea why

[02:16:01.0000] <Philip`>
Sounds like they're even more open than the HTML WG

[02:16:02.0000] <Philip`>
since anybody can become a member, whether they want to be or not

[02:16:03.0000] <gsnedders>
/me stretches and goes back to html5lib work

[02:36:00.0000] <Philip`>
"omitting tags doesn't lead to people dying" - but what if you're using HTML to control a nuclear power station?

[02:36:01.0000] <Hixie>
aw man, are you really gonna make me rewrite that algorithm using position/input

[02:37:00.0000] <MikeSmith>
or to control an electric chair

[02:38:00.0000] <MikeSmith>
(another use case to consider)

[02:39:00.0000] <Philip`>
Hixie: Feel free to rewrite it however you want, as long as it's not more ambiguous than the rest of the spec :-)

[02:39:01.0000] <Hixie>
i was at zero bugs for 30 minutes

[02:40:00.0000] <Hixie>
30 minutes!

[02:40:01.0000] <Philip`>
MikeSmith: Then errors in the markup might accidentally lead to not killing somebody, which seems like exactly the opposite problem

[02:40:02.0000] <Hixie>
admittedly i was rather lost for those 30 minutes, not sure what to do with myself

[02:40:03.0000] <Hixie>
i mean, i've had things on this pile for 6 years now

[02:40:04.0000] <Hixie>
and suddenly there was no pile

[02:40:05.0000] <Hixie>
so it's reassuring to know the pile grows back so fast

[02:40:06.0000] <Hixie>
but still

[03:11:00.0000] <gsnedders>
<!DOCTYPE html PUBLICa> throws two parse errors in the DOCTYPE

[03:11:01.0000] <gsnedders>
Both at the "a"

[03:11:02.0000] <gsnedders>
Firstly, in "anything else" in After DOCTYPE public keyord state

[03:11:03.0000] <gsnedders>
Then a second parse error in the Before DOCTYPE public identifer state when it is reconsumed there

[03:12:00.0000] <Philip`>
Does that matter?

[03:12:01.0000] <gsnedders>
Normally we've tried to avoid a single error giving multiple parse errors, no?

[03:12:02.0000] <Hixie>
file a bug

[03:13:00.0000] <Hixie>
telling me how to fix it

[03:13:01.0000] <gsnedders>
Hixie: You never used to require that!

[03:13:02.0000] <Hixie>
i'm lazier now :-P

[03:13:03.0000] <gsnedders>
/me is too

[03:13:04.0000] <Hixie>
/me just changed the status of all the sections that were in pre-LC to LC

[03:14:00.0000] <gsnedders>
So WHATWG is in LC now?

[03:14:01.0000] <Hixie>
not yet

[03:15:00.0000] <Hixie>
actually technically as i discovered earlier, whatwg doesn't have an lc state :-)

[03:15:01.0000] <gsnedders>
s/an/a/

[03:15:02.0000] <Hixie>
"an ell sea"

[03:15:03.0000] <Philip`>
"a lick"

[03:16:00.0000] <gsnedders>
"a last call"

[03:16:01.0000] <Hixie>
should i add section markers to all <h3>s and <h4>s that don't have one?

[03:16:02.0000] <Hixie>
i mean, status markers

[03:16:03.0000] <gsnedders>
/me grumbles at being unable to change the email address in the W3C bug tracker

[03:24:00.0000] <gsnedders>
Hixie: The space characters cases within the before DOCTYPE public/system identifier states can never be reached. To fix that, remove those cases.

[03:25:00.0000] <Hixie>
type that into the box and hit "send review comments" :-)

[03:25:01.0000] <gsnedders>
8018

[03:25:02.0000] <Hixie>
ta

[03:29:00.0000] <erlehmann>
Hixie, what is the next state called then ? waiting for implementations ?

[03:30:00.0000] <Hixie>
yeah

[03:31:00.0000] <gsnedders>
/me is trying to get html5lib shipped in around a week

[03:31:01.0000] <Hixie>
cool

[03:32:00.0000] <gsnedders>
(I got to the point where the impl passes all TCs yesterday)

[03:32:01.0000] <gsnedders>
It's just neither the TCs nor the impl are entirely up to date :)

[03:33:00.0000] <Hixie>
i know _that_ feeling

[03:34:00.0000] <Philip`>
gsnedders: At least the spec is up to date, so the situation is not all bad

[03:34:01.0000] <Philip`>
Well, up to date except for the bug you just filed

[03:34:02.0000] <Hixie>
he filed 2! :-)

[03:35:00.0000] <gsnedders>
Well, it seemed easier to fix all the failing tests first

[03:38:00.0000] <gsnedders>
I also got stuff properly tested in both namespaced and non-namespaced mode

[04:46:00.0000] <Philip`>
I'm glad we have a relatively regular calendar system now, and don't have to make do with datetime strings like "nine months after the death of Tiberius, on the eighteenth day before the Kalends of January, just as the sun rose"

[05:15:00.0000] <Dashiva>
Philip`: You still have to deal with it if you're a classical scholar

[05:15:01.0000] <Philip`>
Dashiva: Fortunately I'm not

[05:15:02.0000] <Dashiva>
Although wouldn't 18 days before kalends be referenced relative to ides instead?

[05:16:00.0000] <Philip`>
http://www.medievalgenealogy.org.uk/cal/jansas.htm says no

[05:16:01.0000] <Dashiva>
Or nones, for that matter. Just not kalends.

[05:17:00.0000] <Dashiva>
Oh, right, december has ides on the 13th

[05:17:01.0000] <Philip`>
I don't quite understand why the 3rd day before Kalends of January is the day before the day before Kalends of January

[05:19:00.0000] <Dashiva>
It's a translation issue

[05:19:01.0000] <Dashiva>
There was a special word for the day before

[05:19:02.0000] <Philip`>
Anyway, you probably shouldn't disagree with C. Suetonius Tranquillus about Roman calendars :-p

[05:20:00.0000] <gsnedders>
Hixie: Does http://www.w3.org/Bugs/Public/show_bug.cgi?id=8019 look all right?

[05:20:01.0000] <Hixie>
yeah

[05:20:02.0000] <Dashiva>
"Pridie"

[05:20:03.0000] <Philip`>
Dashiva: Even with a special word, why is it "3rd"?

[05:20:04.0000] <Dashiva>
I've forgotten so much

[05:21:00.0000] <Philip`>
/me didn't even know so much

[05:21:01.0000] <Dashiva>
Philip`: They count inclusively

[05:23:00.0000] <Dashiva>
You see the same with easter

[05:23:01.0000] <Dashiva>
Jesus is supposed to be dead three days, but he cheats and gets up on the second day because he's counting inclusively

[05:25:00.0000] <Philip`>
kalends, pridie kalendas, tertio kalendas (going backwards) it seems

[05:25:01.0000] <Philip`>
I suppose it makes sense if you don't translate as "day before"

[05:28:00.0000] <gsnedders>
Philip`: You have any intention to update your generated tests soon?

[05:28:01.0000] <Philip`>
gsnedders: The tokeniser ones?

[05:29:00.0000] <gsnedders>
Philip`: Yeah

[05:30:00.0000] <gsnedders>
Philip`: With my proposed edit to the spec in 8019 404 tests fail, almost all because of DOCTYPE changes at end of Sept

[05:30:01.0000] <Philip`>
gsnedders: No, unless I run out of other things to work on first, or someone gives me lots of money to do it :-p

[05:31:00.0000] <Philip`>
(I think it'd involve lots of rewriting the OCaml tokeniser to match years of spec changes)

[05:31:01.0000] <Philip`>
(which is a bit tedious)

[05:37:00.0000] <bogphanny>
Can someone please give me an example of how the <keygen> tag would typically be used in a real life example?

[05:55:00.0000] <gsnedders>
Philip`: OK, I've manually updated them now

[06:00:00.0000] <gsnedders>
Hixie: you still there?

[06:00:01.0000] <Hixie>
yup

[06:01:00.0000] <gsnedders>
RCDATA state when it comes to & goes to character reference in data state, and then after parsing entity it goes to data state. bug, right?

[06:01:01.0000] <Hixie>
yeah

[06:02:00.0000] <gsnedders>
/me files yet another bug

[06:03:00.0000] <Hixie>
good lord

[06:04:00.0000] <murr4y>
you miss those 30 minutes now, eh? :D

[06:05:00.0000] <gsnedders>
/me has only filed three bugs today :P

[06:06:00.0000] <Hixie>
http://www.whatwg.org/issues/data.html?period=0 is depressing

[06:06:01.0000] <Hixie>
(well ok not really)

[06:06:02.0000] <Hixie>
(it's pretty awesome really)

[06:06:03.0000] <Hixie>
but still!

[06:07:00.0000] <gsnedders>
/me just sees yellow block in all browsers

[06:07:01.0000] <murr4y>
/me too :p

[06:07:02.0000] <murr4y>
(all 2, ff3/opera10)

[06:09:00.0000] <Hixie>
y'all need better browsers

[06:09:01.0000] <gsnedders>
Estimated date for last e-mail based on the data above: 2009-10-23

[06:12:00.0000] <gsnedders>
Hixie: If you can fix 8029 soon…

[06:12:01.0000] <Hixie>
i expect to bring the bug list to 0 tomorrow again

[06:13:00.0000] <gsnedders>
yay!

[06:13:01.0000] <gsnedders>
/me generally just wants to get html5lib out ASAP

[06:13:02.0000] <gsnedders>
(Last release was in Jun 2008)

[06:14:00.0000] <Hixie>
i'm preparing the blog post for when we go to last call

[06:14:01.0000] <Hixie>
anything i should mention?

[06:15:00.0000] <gsnedders>
"We need a test suite, kthxbai"

[06:16:00.0000] <Hixie>
i don't plan to start looking at the test suite til 2011, according to the time table

[06:16:01.0000] <Philip`>
Got to leave plenty of time for untested buggy implementations to establish legacy for future generations

[06:17:00.0000] <Philip`>
Then we can write test suites and say "ha ha you got it all wrong" and it'll be too late to change anything

[06:17:01.0000] <Hixie>
well there are plenty of bits of testsuite all over the place

[06:17:02.0000] <Philip`>
Sounds like a good plan to me

[06:18:00.0000] <Hixie>
what we really need is someone who can do this as a fulltime job

[06:20:00.0000] <annevk42>
chaals talks about standards: "WHAT-WG: Hacking with friends"

[06:20:01.0000] <Philip`>
Hixie: What we really need is employers who let people do it as a fulltime job

[06:21:00.0000] <Hixie>
ok i think i'm ready to go to cfc/lc as soon as the bug list is back to zero again

[06:22:00.0000] <Hixie>
i just need to change the web workers, vocab, html5, and complete.html drafts to class=cfc instead of class=draft and post the blog post

[06:24:00.0000] <annevk42>
a stable copy would be nice

[06:24:01.0000] <annevk42>
like we did with Web Forms back in the days when it was in Last Call

[06:24:02.0000] <Hixie>
yeah

[06:24:03.0000] <Hixie>
the scripts won't work in that though

[06:24:04.0000] <Hixie>
at least the status and bug reporting ones won't

[06:24:05.0000] <annevk42>
makes sense

[06:24:06.0000] <Philip`>
/me will have to keep filing new bugs

[06:25:00.0000] <Philip`>
Someone needs to set up an IRC bot that alerts everyone when there's only one bug left

[06:25:01.0000] <Hixie>
Philip`: your bugs are starting to get so editorial that they're almost trivial to deal with, you need to find more serious problems if you want to slow me down. :-)

[06:25:02.0000] <Philip`>
so we can all rush and add more

[06:25:03.0000] <gsnedders>
/me has found three technical issues today, hence he > Philip` 

[06:26:00.0000] <Hixie>
oh gsnedders did the change to the 'reset' algorithm fix the foreign content stuff?

[06:26:01.0000] <gsnedders>
Hixie: What where?

[06:27:00.0000] <Hixie>
the "reset the insertion mode" algorithm changed earlier today

[06:27:01.0000] <gsnedders>
Oh, I've not changed html5lib for that yet

[06:27:02.0000] <Philip`>
/me probably shouldn't have started reading the spec from the beginning, if he wanted to find serious issues

[06:28:00.0000] <gsnedders>
I just got the tokenizer up to the end of September (excluding things that have changed this month too)

[06:28:01.0000] <Hixie>
ah ok

[06:28:02.0000] <annevk42>
so Philip` finally got bored with finding bugs in XML tools and is now taking on the full HTML5 spec? :)

[06:28:03.0000] <Hixie>
i'd love to know if the reset change i did earlier today actually fixes the problem

[06:28:04.0000] <Hixie>
i wasn't 100% convinced it would

[06:29:00.0000] <Hixie>
btw to fix the entity stuff i'm just gonna have to create a new state for entities in rcdata, right?

[06:29:01.0000] <gsnedders>
Hixie: right

[06:29:02.0000] <Hixie>
k that'll be easy then

[06:30:00.0000] <gsnedders>
I didn't say I was finding hard technical issues :)

[06:32:00.0000] <Philip`>
annevk42: I wouldn't say "full", because I'm sure I'll stop before I get to the end of it :-p

[06:35:00.0000] <Hixie>
right. I'm gonna go to bed so that the 13 bugs can become 50 bugs and give me some stuff to do tomorrow

[09:07:00.0000] <gsnedders>
"script data escaped dash dash state"… oh dear…

[12:46:00.0000] <TabAtkins>
Quick question: In C, do variable names and function names live in separate namespaces?  (Unrelated to current namespace-related discussion. ^_^)

[12:47:00.0000] <boogyman>
hola

[12:47:01.0000] <Philip`>
TabAtkins: No

[12:48:00.0000] <Philip`>
TabAtkins: or yes

[12:48:01.0000] <TabAtkins>
Hrm.  So I can't have a function named "add" and a variable named "add"?

[12:48:02.0000] <Philip`>
You can have a global function called "add" and a local variable called "add" (which will shadow the function)

[12:48:03.0000] <TabAtkins>
Damns, I thought they were separate.  Kk.

[12:49:00.0000] <TabAtkins>
How does that not cause problems?  ::boggles::

[12:49:01.0000] <Philip`>
The syntax lets you write stuff like &add which will apply to both functions and variables

[12:49:02.0000] <boogyman>
can someone please explain the functionality http://dev.w3.org/html5/spec/Overview.html#ping 

[12:50:00.0000] <Philip`>
TabAtkins: Why would it cause problems?

[12:50:01.0000] <TabAtkins>
boogyman: If a user clicks on a link with @ping, the UA will do a normal navigation to whatever the @href is, but it will *also* fire off GET requests to all the urls in @ping.

[12:50:02.0000] <Philip`>
If you have a function and say "int add = 2;" then 'add' (in that scope) will refer to that variable, regardless of what's defined in global scope, which seems quite sensible

[12:51:00.0000] <TabAtkins>
Philip`: Well, you basically have a big set of global variables you have to manage, and be careful not to shadow.

[12:51:01.0000] <TabAtkins>
Because then you can't go "add(add,3)"

[12:51:02.0000] <Philip`>
POST, not GET

[12:51:03.0000] <Philip`>
(for ping)

[12:51:04.0000] <Philip`>
TabAtkins: You can just rename the local variable in that case

[12:52:00.0000] <Philip`>
(C++ lets you write ::add to refer to the global scope, but that's ugly)

[12:53:00.0000] <TabAtkins>
Philip`: Maybe the C-likes don't have the same problems with names that Lisps do.  We name a lot of functions with words that also are useful as argument names.

[12:53:01.0000] <TabAtkins>
Like the word "list", which shadows the "list" function in Scheme.  (In CL it doens't shadow, because they live in different namespaces.)

[12:53:02.0000] <boogyman>
TabAtkins: so @ping provides a method to multi-submit the corresponding node?

[12:54:00.0000] <TabAtkins>
boogyman: If "node" means what I assume it does, then yes?

[12:54:01.0000] <TabAtkins>
It's meant to allow you to, frex, track how often a particular link is clicked.

[12:54:02.0000] <Philip`>
TabAtkins: C-like languages don't have the problem of dynamic scoping, which makes it more easily manageable

[12:55:00.0000] <TabAtkins>
Lexical, you mean.  C-likes *do* use dynamic scoping.  ^_^

[12:55:01.0000] <Philip`>
TabAtkins: I think you've got it precisely the wrong way round

[12:55:02.0000] <boogyman>
so not necessarily multi-submit the node for processing, but submit the node to @href for processing and @ping for "tracking" purposes?

[12:56:00.0000] <TabAtkins>
boogyman: Yes.

[12:56:01.0000] <boogyman>
ok, thx

[12:56:02.0000] <Philip`>
There's nothing dynamic about scoping in C, it's just based on the nesting in the syntax, hence being lexical scoping

[12:57:00.0000] <TabAtkins>
Philip`: No, you've got it wrong way round.  Lexical scoping is what allows closures - you resolve free variables based on what's present at the time the function is defined.  Dynamic means you resolve based on what's present at call-time.

[12:58:00.0000] <TabAtkins>
http://en.wikipedia.org/wiki/Scope_(programming)

[12:58:01.0000] <TabAtkins>
Rather, not at the time the function is defined, but simply at what's present in the surrounding text where the free variable occurs.

[12:59:00.0000] <Philip`>
TabAtkins: No, *you've* got it the wrong way round :-p

[12:59:01.0000] <Philip`>
http://foldoc.org/lexical+scope vs http://foldoc.org/dynamic+scope etc - C does lexical (static) scoping

[13:00:00.0000] <TabAtkins>
In C:

[13:00:01.0000] <TabAtkins>
int x = 0;

[13:00:02.0000] <TabAtkins>
int f() { return x; }

[13:00:03.0000] <TabAtkins>
int g() { int x = 1; return f(); }

[13:00:04.0000] <TabAtkins>
What does g() return?

[13:00:05.0000] <Philip`>


[13:00:06.0000] <Philip`>
because it's not dynamic scoping

[13:01:00.0000] <Philip`>
and the references to x are resolved statically at compile-time

[13:01:01.0000] <Philip`>
based on lexical information, not dynamic run-time information

[13:01:02.0000] <TabAtkins>
I could have *sworn* C-likes used dynamic scoping.  Guess I'm misremembering my high-school days.

[13:02:00.0000] <TabAtkins>
In any case, CL and Scheme are both lexical-scope languages, except for their special variables.

[13:02:01.0000] <Philip`>
It would be really weird if C did dictionary lookups on every variable reference

[13:03:00.0000] <TabAtkins>
It doesn't need dictionary lookups to implement dynamic scope.  You just keep a stack around for each binding, pushing and popping as you move between scopes.

[13:06:00.0000] <TabAtkins>
Man, what is *up* with that foldoc article.  I *assure* you that "(setf x 0) (defun f () x) (defun g () (let ((x 1)) (f))) (g)" returns 0.  Emacs-lisp is a dynamic-scope language, and a number of early lisps were as well, but *all* modern lisps are lexical.

[13:07:00.0000] <Philip`>
What's "modern"?

[13:07:01.0000] <Philip`>
That page was last updated 13 years ago

[13:08:00.0000] <TabAtkins>
Common Lisp and anything created after it.

[13:08:01.0000] <TabAtkins>
Wow, no wonder.  CL was a new guy at that point.

[13:08:02.0000] <TabAtkins>
Jeezus.

[13:09:00.0000] <TabAtkins>
So in conclusion: I had it the right way round, I was just misremembering my C.

[13:13:00.0000] <TabAtkins>
Unrelated: Just got my first "Good Answer" badge on SO with a question about <video>.  ^_^

[14:20:00.0000] <and`>
/me finds it ironic that his last e-mail on character encoding problems is affected by that very issue.

[14:20:01.0000] <Dashiva>
That's not ironic

[14:21:00.0000] <Dashiva>
Ironic would be if your email was about having fixed the character encoding problems :)

[14:23:00.0000] <and`>
Right. I actually tried to fix a problem with missing curly quotes by adding ASCII quotes and ended up with both.

[15:06:00.0000] <Hixie>
Philip`: the "sets of..." are all strings

[15:31:00.0000] <Philip`>
Hixie: Indeed, but they're called sets and it says they're sets

[15:32:00.0000] <Philip`>
when they're actually just strings that represent sets

[15:51:00.0000] <inimino>
Philip`: as opposed to being just bytes in some datatype that represent a set? ;-)

[15:54:00.0000] <Philip`>
inimino: As opposed to being a mathematical construct that is a set, and that can be manipulated in a normal set-based way and can be parsed from strings and serialised to strings

[15:59:00.0000] <Philip`>
/me happily manages to get his C++ code call JS code that calls C++ code, but unhappily realises he implemented infinite recursion

[16:05:00.0000] <Hixie>
where does it say they are sets?

[16:05:01.0000] <Hixie>
oh, i see

[16:07:00.0000] <Philip`>
I don't think it's worth changing the spec, since it's easy enough to work out they're strings

[16:07:01.0000] <Hixie>
i changed the "is a set" bit

[16:07:02.0000] <Hixie>
i didn't change the names of the things

[16:07:03.0000] <Hixie>
the names are opaque!

[16:07:04.0000] <Hixie>
or so i shall claim

[16:08:00.0000] <Hixie>
ok, e-mail is back to zero

[16:08:01.0000] <Hixie>
17 bugs!

[16:08:02.0000] <Hixie>
man

[16:09:00.0000] <Philip`>
/me quite likes RDF's clear separation of lexical spaces and value spaces

[16:09:01.0000] <Philip`>
Hixie: It's not the 50 that you asked for :-(

[16:09:02.0000] <Hixie>
heh

[16:10:00.0000] <Hixie>
(agreed about lexical vs value being a useful seggregation -- i'll know better for next time, i guess)

[16:11:00.0000] <Hixie>
ok shower, meeting, bbl.

[16:17:00.0000] <othermaciej>
I have some bugs I need to file

[16:17:01.0000] <othermaciej>
maybe now is a good time


2009-10-24
[18:36:00.0000] <annodomini>
Are there any groups working on standardizing any sort of web archive format (bundle of web pages and resources that can be distributed as a single file)?

[18:37:00.0000] <torchie>
so does <canvas width="100" height="100"> make a canvas that fills up the whole view or does that need percentages

[18:38:00.0000] <annodomini>
From what I can tell, Safari has its own web archive format, Microsoft has its own, KDE has it's own, and there's ePub for a specialized niche, but nothing general purpose.

[18:46:00.0000] <Philip`>
torchie: That is the size of the canvas bitmap in pixels

[18:46:01.0000] <torchie>
 oh

[18:47:00.0000] <Philip`>
You'd have to use CSS if you want to stretch it to percentage sizes

[18:47:01.0000] <Philip`>
(but that won't make the bitmap have more pixels, so it won't look very good)

[18:47:02.0000] <Philip`>
(so you'd have to write some script to resize and redraw the canvas bitmap as necessary)

[18:47:03.0000] <torchie>
well what I wanted to do was make something that scaled depending on the size of the window

[18:47:04.0000] <torchie>
oh

[18:49:00.0000] <Philip`>
It can't be done entirely automatically, because the browser can't redraw the bitmap at a higher resolution, so you have to manually script it

[18:49:01.0000] <annodomini>
If you want something that scales with the window, you might want to look into SVG. Otherwise, you're going to have to listen for resize events, and set the width and heigh in pixels to the size of the window.

[18:54:00.0000] <torchie>
is <canvas> raster? can you render an svg graphic onto it?

[18:58:00.0000] <annodomini>
Canvas is a raster drawing surface with various raster and vector drawing operations for drawing to it.

[18:58:01.0000] <Philip`>
Some browsers let you put SVG in <img> and pass that to drawImage

[19:00:00.0000] <annodomini>
What I was referring to was simply using SVG, either inline in the HTML (currently only works in XHTML) or in an <object> or <img> tag.

[19:01:00.0000] <annodomini>
See http://emacsformacosx.com/ for a good example of scalable SVG being used to fit the whole window.

[19:01:01.0000] <othermaciej>
annodomini: that page is cool!

[19:01:02.0000] <othermaciej>
I mean, maybe I am just easily impressed but I dig the scaling

[19:02:00.0000] <annodomini>
Yeah, the scaling impressed me.

[19:03:00.0000] <torchie>
hmm

[19:03:01.0000] <torchie>
only some browsers, huh

[19:04:00.0000] <annodomini>
Canvas and SVG are not currently supported in IE.

[19:04:01.0000] <torchie>
doesn't osx already come with emacs

[19:04:02.0000] <annodomini>
It does, but just a command line version; this is a build of the cocoa version.

[19:05:00.0000] <torchie>
wouldn't that count as 'extras' and 'nonsense'

[19:05:01.0000] <annodomini>
I'm not sure I follow.

[19:05:02.0000] <torchie>
I thought emacs was primarily command line

[19:06:00.0000] <annodomini>
It's useful to be able to select text with the mouse, use more varied fonts, and get better keybinding by not running within Terminal.app

[19:07:00.0000] <annodomini>
Emacs has lots of frontends; a terminal based one, X based ones, Cocoa, Windows, etc.

[19:07:01.0000] <torchie>
i see

[19:08:00.0000] <torchie>
I'll check this out then; I've been using textwrangler lately

[19:08:01.0000] <annodomini>
Also, on the "only some browsers" point, there are projects for adding canvas & svg support to browsers that don't have them.

[19:09:00.0000] <annodomini>
There's excanvas http://excanvas.sourceforge.net/ which adds canvas support to IE by using VML, IE's proprietary vector language.

[19:09:01.0000] <annodomini>
And there's svgweb http://code.google.com/p/svgweb/ for adding SVG support to any browser that doesn't have it, by using Flash to render SVG.

[19:10:00.0000] <annodomini>
Both are going to have a few rough edges, but can be used for compatibility in a pinch.

[19:10:01.0000] <torchie>
I'm wondering how things will look for a canvas on larger and smaller screens 

[20:25:00.0000] <TabAtkins>
annodomini: I'll be using excanvas for a project I'm working on.  It performs great for what I need (generating graphs).

[02:02:00.0000] <aho>
why isn't there a clear() function in the canvas specs? clearRect(x,y,w,h) looks awfully longwinded... canvas.width = canvas.width is easier, but that kind of code is very weird, because everyone who didn't take a very close look at the specs will assume that this line doesn't do anything (but it clears the canvas)

[02:03:00.0000] <aho>
and why the f- aren't the push and pop functions called... y'know... push() and pop()?

[02:03:01.0000] <aho>
void save(); // push state on state stack

[02:03:02.0000] <aho>
void restore(); // pop state stack and restore state

[02:03:03.0000] <aho>
i mean... seriously... :>

[02:04:00.0000] <aho>
it *IS* a stack

[02:18:00.0000] <Hixie>
aho: ask whoever first invented the api at apple :-)

[02:21:00.0000] <aho>
i also think it would be nice if there would be some flag/hint for indicating that you're going to overdraw everything. the implementation won't have to use some buffer then (eg fbo in opengl) which would be a tad faster

[02:21:01.0000] <aho>
even more so if no fbos are available

[02:22:00.0000] <aho>
eg with the gles stuff on this embedded thingy here i don't even have fbos available :f

[02:23:00.0000] <aho>
so, the canvas specs are already set in stone?

[02:33:00.0000] <Hixie>
aho: what exists now is pretty stable, but i'm sure we'll add things over time

[02:33:01.0000] <Hixie>
i doubt we'll be changing what is there already though

[02:33:02.0000] <Hixie>
there are pages that depend on it already

[02:34:00.0000] <aho>
well, push and pop can be added.... save and restore can be kept (deprecated)

[02:35:00.0000] <Hixie>
we can never remove them, so just having two ways of doing the same thing just adds bloat for no good reason

[02:36:00.0000] <aho>
save/restore suggests a single state

[02:36:01.0000] <aho>
save/restore is different from other similar apis

[02:36:02.0000] <aho>
how does webgl call it? :>

[02:37:00.0000] <aho>
is the draft spec finally available (it was supposed to be released to the public in october)

[02:37:01.0000] <aho>
?

[02:41:00.0000] <aho>
and well... those save/restore comments basically read like "yea this should have been called push... and this one over there is actually pop" :>

[02:54:00.0000] <Hixie>
aho: html5 has been released to the public since 2003

[02:54:01.0000] <Hixie>
aho: http://whatwg.org/html5

[02:55:00.0000] <aho>
webgl draft spec

[02:55:01.0000] <aho>
.)

[02:55:02.0000] <Hixie>
aah

[02:55:03.0000] <Hixie>
dunno about webgl

[02:55:04.0000] <Hixie>
i'm waiting myself

[02:56:00.0000] <aho>
heh

[02:59:00.0000] <aho>
i'll probably need a new graphics card to try it

[02:59:01.0000] <Philip`>
You'll probably need one that supports OpenGL 2.0

[02:59:02.0000] <aho>
theoretically this one should be able to do it... but... well... it's ati. the ff nightly stuff only works in sw mode

[03:02:00.0000] <aho>
(fwiw it claims to support 2.1) :f

[03:08:00.0000] <aho>
ye, ezquake says gl_version 2.1.xxxx release

[03:08:01.0000] <aho>
should be good enough... in theory

[03:11:00.0000] <Philip`>
Hmm, maybe FF relies on other extensions that ATI doesn't implement?

[03:11:01.0000] <Philip`>
Seems like a bug if it doesn't work on a reasonably modern graphics card like that

[03:15:00.0000] <aho>
well, ati means bad drivers... they also stopped supporting it a few months after the release

[03:35:00.0000] <Dashiva>
I wonder what creates this overwhelming hatred for the design principles in some people

[03:38:00.0000] <aho>
?:)

[03:57:00.0000] <othermaciej>
aho: in the context of graphics, it's pretty normal to speak of saving and restoring graphics contexts, rather than pushing and popping

[03:58:00.0000] <othermaciej>
(even though the saving and restoring follows a nested, stack-like model)

[03:59:00.0000] <ako>
push and pop are usually called push and pop, because things are pushed onto a stack or popped from one

[03:59:01.0000] <ako>
in opengl it's also push and pop

[04:00:00.0000] <ako>
so... webgl will most likely call these things also push and pop

[04:00:01.0000] <othermaciej>
in CoreCraphics, it's called CGContextSaveGState and CGContextRestoreGState

[04:00:02.0000] <ako>
to me it looks like they added the ability to save the transformation... and later on decided it might be nicer if it were a stack instead

[04:00:03.0000] <othermaciej>
<canvas> was originally modeled on the Mac OS X CoreGraphics API

[04:01:00.0000] <ako>
what's coregraphics? some apple thing?

[04:01:01.0000] <ako>
ye, well... that doesnt count then

[04:01:02.0000] <ako>
:)

[04:01:03.0000] <othermaciej>
it's the 2D graphics API of Mac OS X

[04:01:04.0000] <jgraham>
"let queue be a stack of elements" -- that's kind of confusing

[04:01:05.0000] <jgraham>
(Nothing to do with canvas I should note)

[04:02:00.0000] <othermaciej>
well, since <canvas> was originally invented by a team at Apple in the browser that ships with the Mac, it made sense at the time

[04:02:01.0000] <othermaciej>
personally I would have added a noun to the verb, since the naked verbs don't make it clear what is being saved and restored (or pushed and popped)

[04:02:02.0000] <othermaciej>
in that sense CG's SaveGState is more clear

[04:04:00.0000] <Dashiva>
jgraham: Java's Deque class is a better stack than the Stack class :)

[04:04:01.0000] <Dashiva>
Well, ArrayDeque to be specific

[04:04:02.0000] <zcorpan>
hello everyone

[04:04:03.0000] <jgraham>
zcorpan: hello

[04:05:00.0000] <othermaciej>
for what it's worth, CanvasRenderingContext3D doesn't seem to have eihter push/pop or save/restore

[04:05:01.0000] <othermaciej>
at least not the current copy in WebKit

[04:08:00.0000] <ako>
there is no push pop stuff in gles 1.x or 2.0

[04:08:01.0000] <ako>
hum

[04:08:02.0000] <othermaciej>
hmm, I only just noticed that CanvasRenderingContext2D has readonly attribute HTMLCanvasElement canvas

[04:09:00.0000] <othermaciej>
amusingly this is retained in the breakout spec verbatim

[04:10:00.0000] <Philip`>
ako: I think the idea is it's something the application can handle itself, and the GL library should be as small as possible and avoid that stuff

[04:10:01.0000] <Philip`>
(in GLES, that is)

[04:10:02.0000] <othermaciej>
WebGL is roughly modeled on GLES 2.0

[04:11:00.0000] <ako>
Many other areas of functionality have been removed in version 1.0 to produce a lightweight interface: for example, quad and polygon primitive rendering[...], push and pop state attributes, [...].

[04:11:01.0000] <ako>
that's what wikipedia says .)

[04:11:02.0000] <Philip`>
"Client and server attribute stacks are not supported by the proﬁles; consequently, the commands PushAttrib, PopAttrib, PushClientAttrib, and PopClientAttrib are not supported."

[04:12:00.0000] <Philip`>
That's what the spec says

[04:12:01.0000] <ako>
but there are also things like push/popmatrix in opengl

[04:14:00.0000] <Dashiva>
Yeah, the matrix stacks are kinda important

[04:14:01.0000] <ako>
ah... there is push/popmatrix in gles 1.0

[04:15:00.0000] <gsnedders>
zcorpan: Really, do you need to spend emails that lead to names like the "script data escaped end tag open state"?

[04:15:01.0000] <ako>
guess that makes sense... all that fixed pipeline stuff was stripped away in gles2.0

[04:15:02.0000] <zcorpan>
gsnedders: yes

[04:16:00.0000] <gsnedders>
zcorpan: Damn you.

[04:16:01.0000] <gsnedders>
/me is currently implementing that one

[04:17:00.0000] <zcorpan>
so when's WHATWG LC?

[04:17:01.0000] <Hixie>
probably monday

[04:17:02.0000] <gsnedders>
As far as I can tell, when Hixie gets around to announcing it

[04:17:03.0000] <Hixie>
or tuesday

[04:17:04.0000] <gsnedders>
Hixie: Can you fix the parser bugs I reported? Pretty please?

[04:17:05.0000] <zcorpan>
cool

[04:17:06.0000] <Hixie>
gsnedders: yeah, gonna do that in the next hour or so. responding to mail about websockets first.

[04:18:00.0000] <zcorpan>
Hixie: good work

[04:18:01.0000] <gsnedders>
Hixie: thx, I guess I'll get the impl done of everything when I get back to Linköping, but likely tomorrow, after sleeping

[04:19:00.0000] <gsnedders>
/me doesn't think allowing himself to be bullied  into dancing for four hours last night was a good idea

[04:21:00.0000] <Hixie>
zcorpan: i'm more impressed by my timeline prediction being accurate

[04:21:01.0000] <aho>
generally the canvas spec stuff is pretty well done though. eg it does specifiy the clear color (transparent black). java (java2d that is) for example didn't get this right

[04:23:00.0000] <gsnedders>
/me wonders why jgraham was looking at him

[04:24:00.0000] <Hixie>
oh hey, good news. according to the htmlwg charter (the "realistic" timetable, vs the one i predicted), we'll be at PR in Q2 next year!

[04:24:01.0000] <Hixie>
and we've been at CR for a years now

[04:24:02.0000] <Philip`>
aho: If there's anything that it doesn't specify pretty well, please file bugs :-)

[04:24:03.0000] <Hixie>
(LC was summer last year!)

[04:24:04.0000] <zcorpan>
Hixie: maybe you just worked your ass off to meet the prediction

[04:24:05.0000] <Hixie>
i did

[04:25:00.0000] <Hixie>
for 6 years :-P

[04:25:01.0000] <Philip`>
You can't stop now :-p

[04:25:02.0000] <aho>
Philip`, well... save/restore sucks :> (but since it's js it isn't much of a deal... one can just make push/pop point at those functions)

[04:26:00.0000] <zcorpan>
Hixie: yeah but you've been on a spree this year :)

[04:26:01.0000] <Philip`>
aho: Well, I meant "well" more in the sense of "precisely", rather than "good design" :-)

[04:26:02.0000] <Hixie>
zcorpan: no more than previously, i don't think. It's just been more feedback focussed this year rather than new-feature focussed

[04:27:00.0000] <zcorpan>
Hixie: ok

[04:28:00.0000] <aho>
Philip`, i'm only interested in a very small subset... but these things do look just fine

[04:28:01.0000] <aho>
(transformations, images, solid fill, and fillrect - that's it)

[04:30:00.0000] <aho>
it's the minimum one needs for games... and it's the maximum i'm willing to implement ;)

[04:31:00.0000] <Philip`>
/me wonders what aho is implementing it for

[04:31:01.0000] <aho>
some small embedded thingy

[04:32:00.0000] <aho>
v8 is far smaller than python and about 10 times faster... it also starts up far quicker

[04:32:01.0000] <Philip`>
Ah

[04:33:00.0000] <aho>
ye, it's also far quicker than bloody as2 (got a rather bugged implementation there) :f

[04:34:00.0000] <aho>
the canvas subset is so interesting because you can easily test it anywhere

[04:34:01.0000] <aho>
that's the big idea... basically

[04:34:02.0000] <aho>
well, and the overhead is rather small

[04:36:00.0000] <aho>
webgl would have been also great, but unfortunately the device only supports gles 1.1

[04:37:00.0000] <jgraham>
/me notes that gsnedders is between him and the windows so he was likely not looking at gsnedders at all

[04:37:01.0000] <gsnedders>
/me was guessing that might be the case, but it's true that it's really not interesting what you can see through the window

[04:47:00.0000] <gsnedders>
/me is finally close to the end of all the script states

[04:47:01.0000] <gsnedders>
/me glares at zcorpan 

[04:48:00.0000] <Hixie>
gsnedders: btw in the future if you want me to prioritise a bug, mark it critical, so it goes red in the bug list

[04:49:00.0000] <Hixie>
is http://www.w3.org/Bugs/Public/show_bug.cgi?id=8019 the one you want me to deal with?

[04:49:01.0000] <gsnedders>
8029 most urgently

[04:50:00.0000] <gsnedders>
Then 8019 just so I can claim the tests/impl actually match the spec

[04:50:01.0000] <zcorpan>
does someone know what the correct -o-link syntax is?

[04:53:00.0000] <Philip`>
zcorpan: Probably like http://software.hixie.ch/utilities/js/live-dom-viewer/saved/160

[04:53:01.0000] <Hixie>
gsnedders: done 8029

[04:53:02.0000] <gsnedders>
Hixie: Buses have arrived

[04:53:03.0000] <Hixie>
later

[05:20:00.0000] <Philip`>
/me is made happier

[05:20:01.0000] <Philip`>
though I suppose now I have to read and check the new version :-(

[05:50:00.0000] <Philip`>
The "set of space-separated tokens" definition seems somewhat pointless, since it's effectively saying a set of space-separated tokens is any string with zero or more characters

[05:50:01.0000] <Philip`>
so it's just a synonym of "string"

[05:51:00.0000] <Philip`>
Oh, that's not true, because " " isn't a set of space-separated tokens, though it's valid when you have a string containing a set of space-separated tokens

[05:52:00.0000] <Philip`>
but since any set of etc is a string, and certainly contains a set of etc, then presumably the set of etc may have leading and trailing spaces

[05:52:01.0000] <Philip`>
so it's just a convoluted synonym of "string"

[10:16:00.0000] <gsnedders>
/me looks a logs, and notices he didn't tell Hixie what he meant to earlier

[10:16:01.0000] <gsnedders>
s/Buses have arrived/I'll look later, as the buses have arrived/

[15:37:00.0000] <deadowl>
Is there a continuity tag proposal yet?

[15:42:00.0000] <deadowl>
Hi Rimdeker

[15:42:01.0000] <Rimdeker>
Hi deadbowl

[15:42:02.0000] <Rimdeker>
lol

[15:42:03.0000] <Rimdeker>
How are you? Long time no see.

[15:42:04.0000] <deadowl>
I'm okay

[15:43:00.0000] <Rimdeker>
What did you do with your share of THE money, you know what I'm talking about?

[15:43:01.0000] <deadowl>
I want to know whether there's going to be a continuity tag in HTML 5.

[15:43:02.0000] <deadowl>
I spent it on a futon because my bed imploded.

[15:43:03.0000] <Rimdeker>
...that's gotta be one damn expensive futon

[15:44:00.0000] <deadowl>
well, the frame is made out of the bones of notable mathematicians throughout history.

[15:44:01.0000] <deadowl>
so that was kind of expensive to make happen.

[15:45:00.0000] <Rimdeker>
Disturbing yet interesting.

[15:45:01.0000] <deadowl>
Do you know what I'm talking about by continuity tag?<thereismore>...</thereismore>

[15:45:02.0000] <Rimdeker>
I'll be honest with you, I started learning HTML , CSS and PHP about a week ago

[15:45:03.0000] <Rimdeker>
I know nothign

[15:46:00.0000] <deadowl>
I learned  html 10 years ago, css like 8 years ago, and php last year.

[15:46:01.0000] <Rimdeker>
Somehow you make it sound like a painful expierience

[15:47:00.0000] <Rimdeker>
http://rimdeker.org is technically my first ever website, really do not be fooled by the awesome looks lol, I totally suck in webcoding

[15:47:01.0000] <deadowl>
oh, it's only painful if you try to maintain an expanding website and don't know a serverside programming language.

[15:48:00.0000] <deadowl>
of course when I was 12 and learning HTML, I didn't have a clue what a serverside programming language was.

[15:49:00.0000] <deadowl>
and xhtml/dhtml sounded intimidating at that point in my life.

[15:49:01.0000] <deadowl>
my mind is more spongey these days somehow

[15:49:02.0000] <Rimdeker>
...basically you expanded and maintained websites with html only for almost a decade?

[15:49:03.0000] <gsnedders>
/me wonders how old he was when he learnt HTML now…

[15:50:00.0000] <deadowl>
Rimdeker: no, I used frames and didn't make complex websites.

[15:51:00.0000] <deadowl>
It's like... okay, a FAQ site.

[15:51:01.0000] <gsnedders>
/me guesses he started playing around with HTML a bit when he was 8 or 9

[15:51:02.0000] <deadowl>
I wish I had a computer when I was 8 or 9.

[15:52:00.0000] <deadowl>
I got my mom to defect before peak aol.

[15:52:01.0000] <gsnedders>
And I must've been 11 when I finally got bullied into standards and this HTML5-like thing that'll replace HTML called XHTML.

[15:52:02.0000] <deadowl>
xhtml is html5-like?

[15:53:00.0000] <gsnedders>
deadowl: Well, this predates HTML 5 existing, and if it is the replacement of HTML 4.01, then it is sort of :P

[15:53:01.0000] <Rimdeker>
Isn't it actually other way around?

[15:53:02.0000] <Hixie>
gsnedders: re http://www.w3.org/Bugs/Public/show_bug.cgi?id=8019

[15:53:03.0000] <gsnedders>
14 when I joined WHATWG mailing list I guess

[15:53:04.0000] <Rimdeker>
I thought HTML 5 is gonna combine HTML and XHTML

[15:53:05.0000] <Hixie>
gsnedders: there are two errors -- missing space, and missing quote

[15:54:00.0000] <Hixie>
gsnedders: you want just one reported?

[15:54:01.0000] <gsnedders>
Hixie: Yeah, I don't think it makes sense to throw multiple parse errors for a single character

[15:54:02.0000] <Hixie>
k

[15:54:03.0000] <gsnedders>
(and I don't want to update the html5lib tests again) :P

[15:55:00.0000] <Rimdeker>
So Ian, how are you today?

[15:55:01.0000] <Rimdeker>
Wie ist es so in der Schweiz)

[15:55:02.0000] <Rimdeker>
?*

[15:55:03.0000] <Hixie>
actually i am from la suisse romande

[15:55:04.0000] <Hixie>
and i live in california at the moment :-)

[15:56:00.0000] <Rimdeker>
...I suppose ian⊙hc is not you and I suppose your IRC information saying Norway is not true either

[15:56:01.0000] <Hixie>
actually it is me

[15:56:02.0000] <Hixie>
and my irc client is in norway

[15:56:03.0000] <Hixie>
i just connect to it using ssh from california

[15:57:00.0000] <gsnedders>
Oh duh, 8018 really is dumb

[15:57:01.0000] <Rimdeker>
Ian , I like pie.

[15:57:02.0000] <Rimdeker>
That said what's HTML 5 gonna be like?

[15:57:03.0000] <Hixie>
pretty similar to http://whatwg.org/html5, i guess

[15:58:00.0000] <gsnedders>
Rimdeker: People called XHTML 1.0 "HTML 5" when the W3C was pushing XHTML as a replacement for HTML several years back.

[15:58:01.0000] <deadowl>
Okay, so I was wondering is if there is a tag that can be used to express a disconnection in continuity

[15:58:02.0000] <gsnedders>
deadowl: section? aside?

[15:58:03.0000] <gsnedders>
Hixie: Are there any other cases in the parser where a single char can throw multiple parse errors?

[15:59:00.0000] <deadowl>
gsnedders: This is a sentence and<disconnect>...</disconnect>

[15:59:01.0000] <gsnedders>
deadowl: Also, why do you want to mark that up? What do you gain by marking it up?

[16:00:00.0000] <deadowl>
gsnedders: it would be useful in contexts that aren't necessarily well-formed

[16:00:01.0000] <Hixie>
gsnedders: i hope not, but Philip` might know

[16:00:02.0000] <deadowl>
gsnedders: like DOM Ranges

[16:01:00.0000] <gsnedders>
deadowl: I guess I'm missing what you're trying to do

[16:01:01.0000] <gsnedders>
Hixie: If you hope there aren't, I guess this case shouldn't be there either :)

[16:01:02.0000] <deadowl>
gsnedders: let's say you have an unordered list, you know how document.selection can go part way into a list?

[16:02:00.0000] <gsnedders>
deadowl: yeah

[16:02:01.0000] <Hixie>
gsnedders: you already convinced me dude :-)

[16:02:02.0000] <gsnedders>
Hixie: :P

[16:03:00.0000] <gsnedders>
Anyhow, I scarcely got any sleep last night after party/disco at Eng. seminar, so I kinda need sleep

[16:03:01.0000] <Hixie>
though for sanity my fix is a little different than your request

[16:03:02.0000] <Philip`>
Hixie: I don't know!

[16:03:03.0000] <Hixie>
Philip`: you have ocaml magic

[16:03:04.0000] <Philip`>
/me doesn't like being accused of knowing things :-(

[16:03:05.0000] <Philip`>
Hixie: It's years out of date, though

[16:03:06.0000] <gsnedders>
Hixie: I just threw together the first thing I could think of that would fix it, I didn't claim it was elegant :P

[16:04:00.0000] <Hixie>
Philip`: didn't you have some regexps to nearly auto-generate it?

[16:04:01.0000] <gsnedders>
Hixie: Is there anything that can implemented in an hour or less than you want in Anolis soon?

[16:04:02.0000] <Philip`>
Hixie: Yes, except not very "auto", since the spec used lots of inconsistent phrasing so it needed hundreds of regexps to match everything

[16:05:00.0000] <Philip`>
and it couldn't automatically deduce high-level meanings, like phases or modes or whatever they are

[16:05:01.0000] <Philip`>
so that structure had to be hard-coded

[16:05:02.0000] <Philip`>
and then you changed it all :-(

[16:05:03.0000] <gsnedders>
(Equally, that question about Anolis goes to anyone else who wants anything soon)

[16:06:00.0000] <deadowl>
gsnedders: if I put a range over something that's well formed, and then extract or clone it's contents. I have no way of knowing in that range whether or not the well-formed contents of the clone/extraction reflect the well-formed origin. Hence the utility of having a tag to signify a lack of continuity.

[16:07:00.0000] <gsnedders>
deadowl: In what way does just comparing nodes not work?

[16:07:01.0000] <Philip`>
(Also I never finished a complete implementation of the tree construction stuff)

[16:07:02.0000] <gsnedders>
Anyhow, time for me to deal with four hours of non-stop dancing. Feel free to leave messages to me about Anolis.

[16:08:00.0000] <gsnedders>
(That's not strictly true, I had a five minute or so break every hour.)

[16:08:01.0000] <Philip`>
It'd be possible (and possibly useful) to update and fix all the code, but I guess it'd take several days' work

[16:08:02.0000] <deadowl>
gsnedders: let's say you're doing an XMLHttpRequest for an incomplete list

[16:09:00.0000] <deadowl>
so you could do something like <ul><li>a</li><li>b</li><li>c</li><disconnect>more...</disconnect></ul>

[16:10:00.0000] <deadowl>
and then replace the disconnect with a continuity for the list.

[16:10:01.0000] <deadowl>
that could be followed by another disconnect.

[16:10:02.0000] <deadowl>
though for me its useful context would be in document selections.

[16:10:03.0000] <Hixie>
Philip`: heh.

[16:10:04.0000] <Hixie>
Philip`: it should be more consistent now fwiw

[16:11:00.0000] <Hixie>
gsnedders i think i'm out of requests for anolis at this point (don't need even cross-doc-cross-refs anymore)

[16:12:00.0000] <Hixie>
/me really should rewrite his sawzall implementation of the parser

[16:12:01.0000] <Philip`>
Hmm, why was I talking about the tree construction stuff?

[16:12:02.0000] <Philip`>
The doctype bits are just in the tokeniser

[16:13:00.0000] <Philip`>
which did (at one point) have a complete working implementation

[16:13:01.0000] <Philip`>
(though it wasn't generated from regexps, it was just a manual transcription of the algorithm)

[16:13:02.0000] <Hixie>
it's not that hard to just manually implement the parser from the spec

[16:13:03.0000] <Hixie>
just tedious

[16:14:00.0000] <deadowl>
gsnedders: the lexical equivalent for the English language would be ellipses.

[16:15:00.0000] <Philip`>
((A manual transcription into a data structure that could then be processed by OCaml code, to make graphs and test cases and to generate implementations, to be specific))

[16:16:00.0000] <deadowl>
gsnedders:???

[16:16:01.0000] <Philip`>
/me wouldn't want to simply write code that implements a parser, because that'd be far too obvious and dull and sensible

[16:18:00.0000] <Hixie>
that'd be a lot easier than an actual parser ;-)

[16:18:01.0000] <Hixie>
though it was quite useful iirc

[16:18:02.0000] <Hixie>
it found a bunch of problems, no?

[16:19:00.0000] <deadowl>
The fact that nodes can be partially selected in HTML, just as words can be partially selected in English, leaves a gaping hole over the fact that HTML does not have the expressive power to perform the functionality that would be the equivalent of the ellipses in the English language.

[16:19:01.0000] <deadowl>
anyone?

[16:19:02.0000] <Hixie>
deadowl: what's the use case?

[16:20:00.0000] <Hixie>
deadowl: i mean, what kind of site would you use this in and why?

[16:20:01.0000] <deadowl>
A search engine that contains partial text from a page for instance.

[16:21:00.0000] <jgraham>
gsnedders: html5lib 0.12 support

[16:21:01.0000] <deadowl>
Any website that employs pagination.

[16:21:02.0000] <jgraham>
(also, by extension, html5lib 0.12 to be released)

[16:22:00.0000] <deadowl>
if i controlled DOM ranges, partially selected nodes in DOM ranges during extraction, etc.

[16:22:01.0000] <jgraham>
(Mybe we shold call it html5lib 1.0LC to confuse people)

[16:23:00.0000] <deadowl>
why? so I can lexically distinguish complete data from incomplete data.

[16:23:01.0000] <deadowl>
should I expand on the use cases more?

[16:30:00.0000] <Philip`>
Since when did select.value work? I thought I still had to do select.options[select.selectedIndex].value

[16:33:00.0000] <deadowl>
Hixie: abstract use case: http://pastebin.org/48025

[16:34:00.0000] <Hixie>
deadowl: i don't understand what problem the "break" there is helping with that you couldn't do with <li class="more">...</li>

[16:35:00.0000] <deadowl>
Hixie: it's the transformation that's more important, and being able to reassemble it from across contexts with limited information. Currently DOM ranges don't add an <li class="more"> tag when they extract partially selected nodes.

[16:36:00.0000] <Hixie>
deadowl: then your use case didn't seem to really show what you meant :-)

[16:36:01.0000] <deadowl>
it's not only lexically meaningful, it's generalizable to the DOM core.

[16:36:02.0000] <Hixie>
deadowl: could you show a concrete use case showing what problem you think this fixes?

[16:36:03.0000] <Hixie>
i.e. what code would look like today that is a problem?

[16:37:00.0000] <deadowl>
Hixie: you mean the code where I added the requirement for well formed XML?

[16:37:01.0000] <Hixie>
i don't know

[16:37:02.0000] <Hixie>
i don't understand what problem we are trying to solve with this

[16:38:00.0000] <deadowl>
well, in any case, partially it's annoyance with not being able to serverside DOM interpret a file that contains partial html.

[16:38:01.0000] <deadowl>
it's very much an ajax communication issue.

[16:39:00.0000] <deadowl>
oh, another use case actually

[16:39:01.0000] <deadowl>
XHR readyState=3

[16:39:02.0000] <deadowl>
where responseText is loaded but responseXML isn't because of the well-formedness requirement.

[16:40:00.0000] <deadowl>
you could partially load the responseXML if you had a tag to specify where continuity left off. 

[16:40:01.0000] <Hixie>
so the problem is "you can't read a partial responseXML when there is a well-formedness error in the XHR data"?

[16:41:00.0000] <deadowl>
that wasn't technically the use case that brought it to mind, but it was one that I just thought of

[16:41:01.0000] <Hixie>
i don't understand the other problem... could you phrase it in the way i just phrased the xhr one?

[16:42:00.0000] <deadowl>
Hixie: One problem is that response.readyState==3 isn't useful if you're working with XML data. The XML data can't be accessed until request.readyState==4, even if a usable amount of XML is already loaded.

[16:44:00.0000] <deadowl>
a continuity tag would allow you to easily reconnect multiple pieces of XML broken up into smaller parts if used at DOM level.

[16:44:01.0000] <Philip`>
Hixie: Why doesn't http://www.w3.org/Bugs/Public/show_bug.cgi?id=8023 have a diff?

[16:44:02.0000] <deadowl>
At document level it could be used to expand paginated data.

[16:44:03.0000] <deadowl>
Oh, it could also be used to connect diffs.

[16:45:00.0000] <deadowl>
interchangably even.

[16:47:00.0000] <Philip`>
deadowl: Do you mean you could have XML like "<a> x <b> y | z </b> w </a>", split it at the "|" into two XML documents with some extra tag, and then merge them back into the original?

[16:53:00.0000] <Hixie>
Philip`: dunno, script failure somewhere i guess. i added it manually.

[16:54:00.0000] <Hixie>
deadowl: sounds like it would make life a lot more complicated than just use document fragments or a custom DOM node, or even a range showing what's new

[16:54:01.0000] <Hixie>
deadowl: generally speaking you're going about this wrong, though -- we prefer to start with a clear problem description, and no idea of the solution, and then to consider solutions by evaluating them against how well they resolve the problem

[16:55:00.0000] <deadowl>
yea

[16:55:01.0000] <Philip`>
Hixie: Thanks

[16:56:00.0000] <Philip`>
/me notes that the bug reporting system didn't cope very well with Unicode in that bug

[16:56:01.0000] <deadowl>
i'm going backward in my mind though because i thought of this as the best solution after having a problem, but its been a while since aving the problem

[16:56:02.0000] <Hixie>
Philip`: looks fine to me...

[16:57:00.0000] <Philip`>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=8023 looks like "â‰¤" to me (in the title and comment text)

[16:58:00.0000] <Hixie>
maybe i set my default to utf-8

[16:58:01.0000] <Philip`>
/me gets the problem in Opera and Firefox


2009-10-25
[17:11:00.0000] <daedb>
Philip`: I saw "â‰¤" in the title for like a half a second, then it auto-corrected itself (in Opera)... IE shows it unless I switch to utf-8...

[17:12:00.0000] <daedb>
Kinda funky, actually :)

[17:41:00.0000] <boogyman>
can someone please explain the meaning of "dirty value"

[17:41:01.0000] <Philip`>
In what context?

[17:42:00.0000] <boogyman>
I am reading the HTML5 spec and the input declaration mentions a dirty value flag, but the description is confusing

[17:44:00.0000] <boogyman>
reference http://dev.w3.org/html5/spec/Overview.html#concept-input-value-dirty-flag for the description given

[17:51:00.0000] <AryehGregor>
It's just a flag.  The spec says when to set it and unset it, that's all the semantics it has.

[17:51:01.0000] <AryehGregor>
The general idea is that it's set in some cases when the value of the input is changed, and potentially cleared when the value returns to its default.  You have to read the actual spec to get the full details.

[17:52:00.0000] <boogyman>
so it's User Agent (browser) info?

[17:53:00.0000] <AryehGregor>
IIRC, it's relevant to scripting as well, but I could be misremembering.

[18:00:00.0000] <boogyman>
I just re-read the description "Each input element has a boolean dirty value flag. When it is true, the element is said to have a dirty value. The dirty value flag  must be initially set to false when the element is created, and must be set to true whenever the user interacts with the control in a way that changes the value." ... does that translate into being any user-defined value... eg...

[18:00:01.0000] <boogyman>
...not the defaultValue

[18:01:00.0000] <Philip`>
This bug reporting system seems a bit inefficient in terms of number of emails

[18:02:00.0000] <AryehGregor>
What do you mean?

[18:02:00.0000] <Philip`>
since the most trivial issue will involve at least four separate changes that trigger mail

[18:02:01.0000] <AryehGregor>
The dirty value flag is a boolean flag, it's not part of the value itself.

[18:02:02.0000] <AryehGregor>
(I already commented elsewhere that "value" seems to be used for too many things in this part of the spec.)

[18:03:00.0000] <Philip`>
I don't know who Dave is but he must be getting fed up with all this spam

[18:04:00.0000] <boogyman>
AryehGregor: it appears to be tied to the "value" of a node

[18:04:01.0000] <boogyman>
"The dirty value flag must be initially set to false when the element is created, and must be set to true whenever the user interacts with the control in a way that changes the value"

[18:04:02.0000] <boogyman>
so when the value of the node is "changed" the flag is changed from false to true...

[18:05:00.0000] <AryehGregor>
Yes.  I'm not sure what you're asking now.

[18:05:00.0000] <AryehGregor>
You mean Bugzilla?

[18:05:01.0000] <boogyman>
nothing now... was just confirming

[18:06:00.0000] <AryehGregor>
A threading client is handy.  :)

[18:06:01.0000] <AryehGregor>
/me finally finds a site that uses <video> in its blog posts -- hacks.mozilla.org, predictably -- and of course it turns out the videos don't work properly in Chrome, audio is out of sync.  Ugh.

[18:13:00.0000] <nessy>
is it a chrome bug?

[18:19:00.0000] <AryehGregor>
I have no idea.

[18:20:00.0000] <AryehGregor>
http://videos.mozilla.org/serv/blizzard/woff/features-screencast-500.ogv

[18:20:01.0000] <AryehGregor>
The audio only starts a few seconds in, and it's clearly out of sync if you watch for a while.

[18:20:02.0000] <AryehGregor>
At least for me.

[18:20:03.0000] <nessy>
yeah, here, too

[18:21:00.0000] <nessy>
I just downloaded the latest chromium for mac

[18:22:00.0000] <nessy>
btw: http://blog.gingertech.net/ on my blog there are some <video> s in ogg, too - the second video doesn't seem to be scaled correctly (width/height)

[18:23:00.0000] <nessy>
also, strangely, a lot of the videos from http://tinyvid.tv don't work

[18:24:00.0000] <nessy>
I think <video> and Ogg in chrome just isn't quite there yet

[18:24:01.0000] <nessy>
it's great to see it working though!!

[18:25:00.0000] <AryehGregor>
I don't know if it's Chrome specifically, or what.  It could be there would be some videos that only work in Chrome and not Firefox.

[18:51:00.0000] <boogyman>
does the <button> element have a default type ?

[18:51:01.0000] <boogyman>
nevermind

[19:17:00.0000] <AryehGregor>
/me suspects he's going to have to write a small essay in response to that decentralized extensibility thread at some point, time permitting

[19:17:01.0000] <AryehGregor>
/me hasn't looked at it for days

[19:55:00.0000] <nessy>
funny - http://videos.mozilla.org/serv/blizzard/woff/features-screencast-500.ogv breaks in my vlc

[01:48:00.0000] <Philip`>
AryehGregor: I do mean Bugzilla, though it doesn't affect me directly since I've reported all the bugs anonymously and never get emailed

[01:54:00.0000] <Hixie>
i just filter it all out

[01:54:01.0000] <Hixie>
and hope that someone is checking that reporters are REOPENing bugs they filed when they reply

[01:54:02.0000] <Hixie>
(i am a little concerned that the default permissions don't allow that)

[01:55:00.0000] <Hixie>
(i've been spot-checking e-mails that don't look like e-mails caused by me or indicating someone marking a bug CLOSED

[01:55:01.0000] <Hixie>
in case nobody else is looking...)

[02:16:00.0000] <Philip`>
Am I right in assuming the float reflection stuff is all new (for <progress> and <meter>) and not already implemented anywhere?

[02:18:00.0000] <Hixie>
progress, meter, and some <input> stuff

[02:18:01.0000] <Hixie>
all new though yes

[02:19:00.0000] <Hixie>
dunno if the input stuff is implemented in opera/webkit yet

[02:19:01.0000] <Hixie>
it probably needs updating if it is anyway

[02:19:02.0000] <Hixie>
so it's changeable

[04:19:00.0000] <Philip`>
zcorpan: Do you have any idea why the '<' of </title> got eaten on lots of pages?

[04:20:00.0000] <Philip`>
I only looked at one but that seemed to be labelled as shift_jis properly, so I wonder if it's a problem with the decoder

[04:20:01.0000] <Philip`>
(rather than with the encoding detector)

[04:23:00.0000] <zcorpan>
Philip`: yeah maybe it's a problem with the decoder

[05:14:00.0000] <gsnedders>
jgraham: Yeah, html5lib 0.12 will be required for Anolis 1.1, which is the entire reason I've been pushing to get 0.12 out :)

[05:32:00.0000] <zcorpan>
it would probably be good to make <style><!--</style> invalid

[05:39:00.0000] <jgraham>
gsnedders: and all this time I thought that you cared :(

[05:39:01.0000] <gsnedders>
jgraham: No, not really.

[05:49:00.0000] <erlehmann>
zcorpan, it it such a hardship for parsers? if so, why doesn't that also apply to <script><!--</script> ?

[06:02:00.0000] <gsnedders>
erlehmann: That already is invalid

[06:02:01.0000] <erlehmann>
urgs

[06:02:02.0000] <gsnedders>
erlehmann: I guess the point is to stop the conformance criteria for script and style from diverging

[06:03:00.0000] <gsnedders>
erlehmann: There's a lot of magic in the parser for script, esp. involving comments.

[06:04:00.0000] <erlehmann>
curse those SGML inventors

[06:05:00.0000] <gsnedders>
This has nothing to do with SGML, but with legacy content with all kinds of weird comments in script, and not wanting to reparse

[06:07:00.0000] <zcorpan>
erlehmann: this sillyness is a result of browsers doing reparsing

[06:08:00.0000] <Lachy>
erlehmann, SGML actually had relatively sane parsing requirements for CDATA element content, compared with what we have now for <script>

[06:14:00.0000] <Philip`>
It would have been fine if browsers had all used SGML parsers

[09:04:00.0000] <jgraham>
gsnedders: Technically the license requires a link back to the flickr page as well

[09:05:00.0000] <gsnedders>
jgraham: Stop using other people's Facebook accounts.

[09:05:01.0000] <jgraham>
(since you bothered to get the bit about the link to the license right, I guess you should probably follow its terms :) ) 

[09:05:02.0000] <gsnedders>
jgraham: Where does it require a link back to Flickr?

[09:05:03.0000] <jgraham>
gsnedders: Other people using their facebook accounts told me about the information displyed therein

[09:06:00.0000] <gsnedders>
jgraham: AFAIK all I'm required to do is credit the creator of the work, which I do

[09:06:01.0000] <jgraham>
gsnedders: 4.c

[09:06:02.0000] <jgraham>
"to the extent reasonably practicable, the Uniform Resource Identifier, if any, that Licensor specifies to be associated with the Work"

[09:07:00.0000] <jgraham>
which n this cse could reasnably be assumed to be the flickr page and is evidently practical (since you can create links and all)

[09:07:01.0000] <gsnedders>
jgraham: Ah, I didn't see that before. Fixed now.

[09:08:00.0000] <gsnedders>
/me wonders how his hair manages to look as if it is not up against his head without hanging down


2009-10-26
[00:56:00.0000] <hsivonen>
looks like I should redeploy V.nu

[01:13:00.0000] <MikeSmith>
hsivonen: yeah, a few changes went in last week

[01:38:00.0000] <hsivonen>
the design of http://xkcd.com/ is awesome today

[01:40:00.0000] <annevk42>
source code too

[01:40:01.0000] <annevk42>
<HTML WEB="2.0">

[01:40:02.0000] <annevk42>
<SCRIPT LANGUAGE="QBASIC">IF $BROWSER = "IE" THEN GOTO 50</SCRIPT>

[01:41:00.0000] <annevk42>
and as Netscape icon it has the one from IE

[01:41:01.0000] <annevk42>
good stuff :)

[01:43:00.0000] <hsivonen>
has MS announced something about implementing HTML5 forms in IE9?

[01:44:00.0000] <annevk42>
not that I know

[01:45:00.0000] <annevk42>
but I'm a little out of the loop

[01:46:00.0000] <hsivonen>
I just noticed an interesting parity-IE annotation on b.m.o

[01:47:00.0000] <annevk42>
pointer?

[01:47:01.0000] <hsivonen>
https://bugzilla.mozilla.org/show_bug.cgi?id=344614

[01:48:00.0000] <annevk42>
seems you can ask a colleague about it

[01:50:00.0000] <annevk42>
heh, Gmail is using <input type=url>, didn't know

[02:01:00.0000] <hsivonen>
MikeSmith: I'm about to check in a version of build.py that uses the hg repo for the htmlparser.

[02:01:01.0000] <hsivonen>
MikeSmith: is there anything I should do to make it suck less for users who already have an svn checkout of the parser?

[02:02:00.0000] <hsivonen>
/me has no idea what happens if one tries to do a hg pull onto a location that already has an svn sandbox

[02:05:00.0000] <zcorpan_>
Hixie: comment box is broken

[02:05:01.0000] <MikeSmith>
hsivonen: no clue from me.. but if you go ahead and check it in, I'll test it right away

[02:05:02.0000] <hsivonen>
what does "private repositories" mean on bitbucket?

[02:05:03.0000] <MikeSmith>
zcorpan_: that's probably because W3C bugzilla is down

[02:05:04.0000] <MikeSmith>
or maybe

[02:06:00.0000] <zcorpan_>
ok

[02:06:01.0000] <hsivonen>
MikeSmith: OK. committed

[02:06:02.0000] <Philip`>
hsivonen: I believe it means ones that aren't public

[02:06:03.0000] <Philip`>
and only authorised users can read

[02:07:00.0000] <hsivonen>
Philip`: you mean like non-Open Source?

[02:08:00.0000] <zcorpan_>
Philip`: did you see my suggestion for "further research"? :)

[02:08:01.0000] <hsivonen>
my use cases are: 1) Making a staging repo for the hg.mozilla.org htmlparser repo and 2) moving all the rest of the V.nu repos to hg

[02:09:00.0000] <hsivonen>
are there other hg hosting providers besides bitbucket and Google Code?

[02:09:01.0000] <hsivonen>
Google insists on one license per repo, right?

[02:09:02.0000] <hsivonen>
so Google is out of question

[02:09:03.0000] <Philip`>
hsivonen: You can give people read access to non-OS code, and you can not give read access to OS code, so those seem unrelated concerns

[02:10:00.0000] <Philip`>
I don't believe Bitbucket has any licensing requirements on any type of repository

[02:11:00.0000] <hsivonen>
so assuming other committers are OK with BitBucket, would BitBucket be sensible or is there something awful I should be aware of?

[02:11:01.0000] <Philip`>
(The only constraint is you can't stop people reading public repositories)

[02:12:00.0000] <Philip`>
hsivonen: I've only used it a tiny bit but it seemed to work alright

[02:12:01.0000] <Philip`>
It seems like it shouldn't be an important decision, because you can simply clone the repository and move it somewhere else whenever you want

[02:16:00.0000] <Philip`>
zcorpan_: If someone can tell me how to make validator.nu parse with scripting enabled, it should be easy enough to do

[02:17:00.0000] <jgraham>
hsivonen: I have never heard anything bad about bitbucket

[02:17:01.0000] <zcorpan_>
hsivonen: how does Philip` make v.nu parse with scripting enabled?

[02:18:00.0000] <Philip`>
jgraham: That could be because you have never heard anything about it at all

[02:18:01.0000] <jgraham>
Philip`: Indeed. However I have heard some things about it. SO it's not that

[02:19:00.0000] <hsivonen>
Philip`, jgraham: thanks for comments about bitbucket

[02:19:01.0000] <hsivonen>
zcorpan_: do you mean parsing with the "scripting enabled" bit set or do you mean actually running scripts?

[02:20:00.0000] <Philip`>
/me more recently just set up hgweb.cgi on his own server because it seemed easier (and less restrictive of disk space) than using external providers

[02:20:01.0000] <zcorpan_>
hsivonen: the former

[02:20:02.0000] <hsivonen>
Philip`: I want professionals to take care of backups for me

[02:20:03.0000] <Philip`>
hsivonen: "hg pull" should take care of backups

[02:20:04.0000] <Philip`>
unless I'm missing something

[02:21:00.0000] <hsivonen>
Well, I suppose I could have the repos on validator.nu and have a cron job on html5.validator.nu pulling them as backups

[02:22:00.0000] <jgraham>
/me has hgweb set upfor various things

[02:23:00.0000] <jgraham>
but not for anything really useful

[02:23:01.0000] <hsivonen>
zcorpan_: the various API wrapper objects for the V.nu parser have a setScriptingEnabled() method

[02:24:00.0000] <hsivonen>
passing true should do the trick

[02:24:01.0000] <zcorpan_>
http://about.validator.nu/htmlparser/apidocs/nu/validator/htmlparser/dom/HtmlDocumentBuilder.html#setScriptingEnabled(boolean) ?

[02:24:02.0000] <hsivonen>
zcorpan_: yes

[02:24:03.0000] <zcorpan_>
Philip`: ^

[02:26:00.0000] <Philip`>
zcorpan_: Tell hsivonen thanks

[02:26:01.0000] <zcorpan_>
hsivonen: thanks

[02:27:00.0000] <Philip`>
(from me)

[02:27:01.0000] <hsivonen>
zcorpan_, Philip` : you're welcome

[02:27:02.0000] <MikeSmith>
hsivonen: I guess I need to whack my existing htmlparser directory before running the build script?

[02:28:00.0000] <Philip`>
/me wishes the documentation for all this stuff like setScriptingEnabled said what the default was

[02:28:01.0000] <hsivonen>
MikeSmith: probably

[02:28:02.0000] <MikeSmith>
OK

[02:29:00.0000] <zcorpan_>
maybe the default for setScriptingEnabled should be true

[02:30:00.0000] <hsivonen>
zcorpan_: why?

[02:30:01.0000] <Philip`>
zcorpan_: What elements do you want searched for?

[02:31:00.0000] <zcorpan_>
Philip`: script and noscript

[02:31:01.0000] <Philip`>
zcorpan_: and no others?

[02:31:02.0000] <zcorpan_>
Philip`: right

[02:32:00.0000] <zcorpan_>
hsivonen: i guess it depends on what people expect the default to be

[02:32:01.0000] <jgraham>
hsivonen: My expectation is that non-browsxer applications that do not support scripting are expected to behave more like the scripting enabled case but not run scripts

[02:33:00.0000] <hsivonen>
clearly, this <noscript> thing isn't a winner design

[02:33:01.0000] <Philip`>
zcorpan_: Running...

[02:33:02.0000] <zcorpan_>
cool

[02:33:03.0000] <Philip`>
(Might take a while)

[02:37:00.0000] <zcorpan_>
maybe there are pages with <noscript><!--</noscript>FOO<noscript>--></noscript>

[02:37:01.0000] <zcorpan_>
although that wouldn't be too useful since it'd always be hidden

[02:37:02.0000] <zcorpan_>
(today)

[02:39:00.0000] <Philip`>
Hmm, there's quite a lot of <script> textContent

[02:40:00.0000] <MikeSmith>
hsivonen: so, I think the current build script isn't going to work for initial checkout

[02:40:01.0000] <MikeSmith>
I think for initial checkout, it needs to do an hg clone

[02:40:02.0000] <hsivonen>
aargh

[02:41:00.0000] <zcorpan_>
Philip`: i think that's expected

[02:41:01.0000] <hsivonen>
good point

[02:41:02.0000] <hsivonen>
sorry

[02:41:03.0000] <MikeSmith>
np

[02:41:04.0000] <MikeSmith>
hsivonen: I'm going to drop off for a bit but will be back on later

[02:41:05.0000] <zcorpan_>
maybe there are pages with <noscript><!--</noscript>FOO<noscript>--!></noscript>

[02:41:06.0000] <hsivonen>
/me wonders what happens if hg clone is done over an existing clone

[02:42:00.0000] <zcorpan_>
which would trigger reparsing with scripting enabled but hide the FOO with scripting disabled

[02:42:01.0000] <jgraham>
hsivonen: You can presumably rather easilly check if you have an existing repository

[02:43:00.0000] <Philip`>
hsivonen: I think it might complain that the target directory already exists

[02:43:01.0000] <jgraham>
(at the very least you can look for a .hg; if you are using the api then you can probably do something more fancy)

[02:44:00.0000] <zcorpan_>
Philip`: if <script> textContent is several hundred, then it's probably right; if it is several thousand then it might be something wrong

[02:45:00.0000] <Philip`>
So far I don't see any noscript with "</noscript" in it

[02:46:00.0000] <zcorpan_>
that's good :)

[02:47:00.0000] <Philip`>
Assuming it's not an error in the parser or in my scripts :-)

[02:49:00.0000] <hsivonen>
/me tries to figure out how to run hg pull from outside the local repo

[02:49:01.0000] <hsivonen>
/me tries to find out what -R

[02:49:02.0000] <hsivonen>
does

[02:52:00.0000] <zcorpan_>
hsivonen: livedom.validator.nu doesn't have the bit set but runs scripts

[02:52:01.0000] <hsivonen>
zcorpan_: oops. thanks for noticing.

[02:53:00.0000] <Philip`>
/me really should have split his set of pages into much smaller chunks

[02:53:01.0000] <Philip`>
I just split it into 16, and it can take ~10 minutes to run one of them, so it's not very good for progress indication or for parallelism when it's only got one chunk left :-(

[02:57:00.0000] <hsivonen>
whoa. <a role=button> sure has generated a lot of email while I wasn't looking

[02:58:00.0000] <hsivonen>
when the whole thing should really have been a super-simple spec fix: allowing roles on <a>

[02:58:01.0000] <hsivonen>
Whoa. WONTFIX

[02:58:02.0000] <zcorpan_>
i think <a role=button> is like <p>&nbsp;</p>

[03:00:00.0000] <hsivonen>
Hixie: I think <a> has enough of abuse history that is should be considered sacrificed like <div>

[03:02:00.0000] <zcorpan_>
using <a> for a button also isn't too bad

[03:02:01.0000] <zcorpan_>
you get keyboard access, which is better than <span>

[03:02:02.0000] <zcorpan_>
and <button> is annoying to style in some browsers

[03:05:00.0000] <zcorpan_>
i wonder if <noscript> parsing when scripting is enabled is good enough or if pages rely on the IE way of parsing it

[03:06:00.0000] <hsivonen>
what's the IE way?

[03:06:01.0000] <zcorpan_>
dropping the tokens, iirc

[03:10:00.0000] <jgraham>
/me takes it that hsivonen doesn't susbscribe to the HTTP-weenie philosophy that users use the difference between links and buttons to determine safe vs unsafe operations

[03:11:00.0000] <hsivonen>
jgraham: users can only use the difference if the <a> element looks like a link

[03:11:01.0000] <hsivonen>
jgraham: if it looks like a button, it should be announced as a button by screen readers, too

[03:12:00.0000] <jgraham>
hsivonen: Right, so the theory is that links should never look like buttons and therefore should never have role=button

[03:12:01.0000] <jgraham>
/me doesn't subscribe to this philosophy

[03:12:02.0000] <hsivonen>
jgraham: it sucks that the accessibility bit is the only part that can be realistically caught programmatically as the author doing something bad

[03:13:00.0000] <hsivonen>
jgraham: but if the validator whines, the authors are just going to break accessibility. they aren't going to stop repurposing links as buttons

[03:13:01.0000] <jgraham>
(in particular I don't think that real users actually make the distinction that HTTP people claim that they should be making)

[03:13:02.0000] <Philip`>
I think that's what Steve Faulkner said

[03:14:00.0000] <Philip`>
and it seemed quite a reasonable argument to me

[03:14:01.0000] <jgraham>
(I haven't actually read any of that thread yet so I'm only saying things that have come up the previous N times this discussion has happened)

[03:14:02.0000] <Philip`>
People don't care if they're violating the spec, they just care if the validators complains that they are, and they will make minimal changes to stop the validator complaining

[03:15:00.0000] <Philip`>
s/that's what/what hsivonen said about programmatic catchability is what/

[03:16:00.0000] <zcorpan_>
Philip`: indeed

[03:40:00.0000] <zcorpan_>
hmm, i meant "i wonder if <noscript> parsing when scripting is *dis*abled is good enough or if pages rely on the IE way of parsing it"

[03:42:00.0000] <Philip`>
zcorpan_: http://philip.html5.org/data/cdata-containing-self-close-with-script.txt

[03:43:00.0000] <zcorpan_>
Philip`: thanks!

[03:51:00.0000] <zcorpan_>
http://simon.html5.org/dump/cdata-containing-self-close-with-script.xml

[03:52:00.0000] <zcorpan_>
884 occurrences for script

[03:52:01.0000] <zcorpan_>
5 for noscript

[03:55:00.0000] <zcorpan_>
two of the noscript have the encoding problem

[03:55:01.0000] <zcorpan_>
one would show "-->"

[03:55:02.0000] <zcorpan_>
one works equally with or without escapedness

[03:56:00.0000] <zcorpan_>
and one has the <noscript><!--</noscript>FOO<noscript>--></noscript> "trick"

[04:01:00.0000] <zcorpan_>
which will actually start to work as a trick with the currently specified parsing rules

[04:05:00.0000] <zcorpan_>
hsivonen: maybe parity-IE refers to IE with dean's wf2 script

[04:16:00.0000] <zcorpan_>
document.write('</SCRIPT\> \n');

[04:16:01.0000] <zcorpan_>
also a way to escape the end tag...

[04:20:00.0000] <hsivonen>
zcorpan_: could be referring to Dean's scripts, yes. dunno.

[04:21:00.0000] <zcorpan_>
wonder if we want to whine about people who do <script><!--d.w('<script></script\>');--></script>

[04:25:00.0000] <Philip`>
zcorpan_: Is it possible to detect and whine in a way that tells the user what they should do to fix the problem properly?

[04:26:00.0000] <Philip`>
(presumably telling them to write <\/script> or something)

[04:36:00.0000] <zcorpan_>
Philip`: actually writing it as <\/script> would also be invalid

[04:37:00.0000] <zcorpan_>
assuming i've understood the abnf correctly

[04:39:00.0000] <zcorpan_>
i guess the right recommendation is to not use <!-- at all

[04:44:00.0000] <zcorpan_>
maybe i should try to ignore the validation aspect and focus on compat first

[04:45:00.0000] <jgraham>
Validation is for wimps anyway

[04:52:00.0000] <hsivonen>
MikeSmith: I've now redeployed V.nu

[04:52:01.0000] <MikeSmith>
hsivonen: cool

[04:53:00.0000] <zcorpan_>
MikeSmith: any highlights?

[04:54:00.0000] <hsivonen>
MikeSmith: thanks for developing stuff to deploy

[04:57:00.0000] <MikeSmith>
zcorpan_: Nothing so big. I added some "Use FOO instead." suggestions to the error messages for obsolete elements, and updated the microdata stuff and content model for <caption> so that the HTML5 spec would validate

[04:57:01.0000] <zcorpan_>
MikeSmith: cool

[04:58:00.0000] <zcorpan_>
does html5 have a requirement along the lines of "conformance checkers must report this document as valid"? :)

[04:58:01.0000] <MikeSmith>
hsivonen: thanks for making something worthwhile that people can help develop stuff for :)

[05:00:00.0000] <MikeSmith>
hsivonen: btw, I think I finally made some time to work on the datatype warnings mechanism.. but will need some time from you to answer questions

[05:00:01.0000] <MikeSmith>
hsivonen: assuming you think it's worth pursuing

[05:01:00.0000] <MikeSmith>
hsivonen: first question would be, how should the messages be flagged as warnings? just with a magic substring as part of the message text? or some other flagging mechanism?

[05:02:00.0000] <darobin>
hey

[05:03:00.0000] <darobin>
is there a reason why entries in an appcache manifest must have the same scheme as the manifest itself?

[05:03:01.0000] <MikeSmith>
hsivonen: also, seems like we need to add a Java property name. nu.validator.servlet.warnings=1 ? or something like that?

[05:03:02.0000] <hsivonen>
MikeSmith: assuming that the plan is to go with the trick that Jing thinks there's an error but the UI downgrades the presentation to a warning, I think the warningness should be a flag on the exception object or a subclass of the datatype exception class

[05:03:03.0000] <MikeSmith>
OK

[05:04:00.0000] <hsivonen>
MikeSmith: the property name should probably show that it belongs to the datatype package rather than the servlet front end, but yeah, a system property is needed

[05:04:01.0000] <darobin>
I was hacking on something that's local, but for which I'd like remote resources to be appcached so that I can keep hacking while travelling

[05:04:02.0000] <darobin>
but this prevents it

[05:05:00.0000] <hsivonen>
darobin: my guess is that the point is to prevent the case where an evil origin pins stuff in the cache from a good origin

[05:05:01.0000] <darobin>
I can't seem to think of a reason why an appcache couldn't reference things from all over the place

[05:05:02.0000] <hsivonen>
darobin: and then the scheme restriction just falls out of that

[05:05:03.0000] <hsivonen>
/me knows almost nothing about app cache

[05:06:00.0000] <darobin>
hsivonen: well, I'd expect stuff in appcache to only be appcached for pages that point to that manifest

[05:06:01.0000] <darobin>
note that it's only same-scheme, it's not same-origin (that I can tell)

[05:06:02.0000] <darobin>
this is a bummer

[05:07:00.0000] <hsivonen>
ah. I know nothing about that.

[05:07:01.0000] <hsivonen>
http://html5.org/tools/web-apps-tracker?from=4287&to=4288 has a copy-paste error, right?

[05:08:00.0000] <darobin>
ah well, thanks anyway

[05:10:00.0000] <hsivonen>
/me finds a page that gives the YSoD in Minefield but not in Safari or Opera

[05:10:01.0000] <hsivonen>
yay for serving broken XML to Gecko only as XML

[05:10:02.0000] <zcorpan_>
hsivonen: yes, i've sent email about that

[05:11:00.0000] <hsivonen>
Hixie: Boris had a reason for making the <form> element hiding HTML-document-only. I don't recall what the reason was.

[05:12:00.0000] <MikeSmith>
darobin: I think I found the reason

[05:12:01.0000] <MikeSmith>
hang on, I'll get you a URL

[05:14:00.0000] <darobin>
ah, that'd be cool

[05:14:01.0000] <MikeSmith>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2007-October/012689.html

[05:15:00.0000] <MikeSmith>
the paragraphs that begins, "I'm not sure how to work around this."

[05:15:01.0000] <zcorpan_>
hsivonen: it seems such forms aren't display:none in opera even in html

[05:15:02.0000] <darobin>
MikeSmith: you're a star, I coudn't dig anything up

[05:16:00.0000] <hsivonen>
zcorpan_: does Opera have other magic for ensuring the such forms don't break the table layout?

[05:16:01.0000] <MikeSmith>
darobin: so now you need to tell Hixie to come up with a better workaround..

[05:17:00.0000] <darobin>
mmmm, right, this is really a workaround :)

[05:17:01.0000] <darobin>
and big workaround, I really mean big ugly dirty hack

[05:17:02.0000] <zcorpan_>
hsivonen: the forms end up in an anonymous <caption> box

[05:18:00.0000] <hsivonen>
zcorpan_: ok

[05:18:01.0000] <hsivonen>
Hixie: https://bugzilla.mozilla.org/show_bug.cgi?id=349695

[05:19:00.0000] <annevk42>
darobin, appcache is supposed to be same-origin

[05:19:01.0000] <annevk42>
darobin, sadly the reason as to why escapes me at the moment

[05:20:00.0000] <MikeSmith>
hsivonen: about the build script, I think one more refinement that could be made is, for the case where the htmlparsers dir exists but doesn't have an .hg subdir (because it's the existing svn checkout), either (1) emit a message telling the user to manually move or delete the existing htmlparser subdir, and exit; or (2) have the build script move the existing htmlparser to htmlparser-svn or whatever, emit a message telling the user it's been moved, a

[05:20:01.0000] <MikeSmith>
nd continue with the build.

[05:20:02.0000] <zcorpan_>
hsivonen: but it seems that opera produces a margin because of the form

[05:21:00.0000] <zcorpan_>
i wonder how ie deals with it

[05:21:01.0000] <hsivonen>
MikeSmith: I'll change the build script

[05:21:02.0000] <MikeSmith>
hsivonen: OK

[05:24:00.0000] <zcorpan_>
oh right, ie produces a non-tree

[05:25:00.0000] <hsivonen>
MikeSmith: done

[05:25:01.0000] <MikeSmith>
cheers

[05:26:00.0000] <zcorpan_>
or something funny at least (the tbody is nested inside the form)

[05:27:00.0000] <darobin>
annevk42: mmmm, same-origin doesn't sound like a great idea for appcache

[05:27:01.0000] <darobin>
it pretty much makes it useless in fact

[05:28:00.0000] <darobin>
actually, master entries must be same origin, but not explicit entries

[05:28:01.0000] <annevk42>
oh ok

[05:28:02.0000] <annevk42>
hmm

[05:28:03.0000] <annevk42>
and here I thought I knew how stuff worked

[05:30:00.0000] <darobin>
yeah, I don't really understand either :)

[05:31:00.0000] <annevk42>
I think the problem you might be facing is that file: has an undefined security model

[05:31:01.0000] <MikeSmith>
hsivonen: "hg pull: option --rebase not recognized"

[05:31:02.0000] <annevk42>
You would probably be better off installing lighthttpd or some such

[05:31:03.0000] <hsivonen>
MikeSmith: which version of hg?

[05:31:04.0000] <annevk42>
lighttpd that is

[05:31:05.0000] <hsivonen>
maybe I should take out "--rebase" until I actually need it

[05:32:00.0000] <MikeSmith>
hsivonen: I've got 1.3.1 installed

[05:32:01.0000] <hsivonen>
MikeSmith: ok. apparently, --rebase is only recognized if you've enabled it

[05:32:02.0000] <hsivonen>
MikeSmith: I took it out

[05:32:03.0000] <MikeSmith>
OK

[05:33:00.0000] <hsivonen>
oh. now I need to add -u or something instead

[05:33:01.0000] <hsivonen>
hmm.

[05:33:02.0000] <MikeSmith>
hsivonen: enabled at compile time? or through a user config option?

[05:34:00.0000] <MikeSmith>
ha

[05:34:01.0000] <hsivonen>
MikeSmith: user config

[05:34:02.0000] <MikeSmith>
ah

[05:34:03.0000] <hsivonen>
I put in --update instead

[05:34:04.0000] <MikeSmith>
I see -- I'm reading the man page now, "Using additional features"

[05:36:00.0000] <MikeSmith>
/me syncs ups

[05:36:01.0000] <hsivonen>
http://mercurial.selenic.com/wiki/RebaseExtension

[05:38:00.0000] <MikeSmith>
/me takes a look

[05:39:00.0000] <MikeSmith>
hsivonen: do you anticipate making changes that'll require a rebase instead of just an update?

[05:39:01.0000] <MikeSmith>
wow.. Guha posted to public-html

[05:40:00.0000] <hsivonen>
I was thinking --rebase would be useful if one started using mercurial queues in the same sandbox that is use by build.py

[05:40:01.0000] <hsivonen>
let's cross that bridge when we get there

[05:41:00.0000] <MikeSmith>
sounds sane to me

[05:42:00.0000] <darobin>
annevk42: yeah I know that, but that defeats the point of making things simple — plus I think I'll still run into same-origin issues

[05:42:01.0000] <darobin>
another option is for me to set up a caching proxy locally

[05:46:00.0000] <hsivonen>
was there a decision about async scripts waiting / not waiting for style sheets?

[05:49:00.0000] <annevk42>
I think Hixie changed the spec on that front, yes

[05:59:00.0000] <zcorpan_>
almost all </script\> cases are document.written VBScripts

[05:59:01.0000] <hsivonen>
/me wonders if there's a famous VBScript tutorial with that pattern

[06:00:00.0000] <zcorpan_>
it seems to be boilerplate for including something for Flash

[06:01:00.0000] <annevk42>
wtf, ffmpeg is a disaster on Mac

[06:02:00.0000] <annevk42>
/me wonders if it's because of Chrome that it keeps running in the background and never shuts down and then crashes every couple of minutes

[06:05:00.0000] <zcorpan_>
up to 57; i've now found the two kinds of breakage with double escape (same pages as found with the regexp search)

[06:06:00.0000] <zcorpan_>
the rest seem to work as intended with double escape

[06:08:00.0000] <zcorpan_>
the encoding problem shows up in <script> too

[06:09:00.0000] <zcorpan_>
 var strAdBegin="<!--鐢讳腑鐢诲紑濮�->";

[06:10:00.0000] <zcorpan_>
(though double escape takes care of closing the script at the right place)

[06:11:00.0000] <zcorpan_>
<script></script\></div></body></html> - hmm

[06:17:00.0000] <Philip`>
Encoding problem is annoying :-(

[06:17:01.0000] <Philip`>
/me ought to look into it and work out what he's doing wrong

[06:20:00.0000] <zcorpan_>
Philip`: the encoding of one page i checked seems right in firefox with html5.enable

[06:21:00.0000] <zcorpan_>
Philip`: also right when validating in v.nu

[06:27:00.0000] <Philip`>
zcorpan_: Yeah, I guess I might have a funny icu4j or something

[06:53:00.0000] <annevk42>
zcorpan_, you should fix your email clock

[07:06:00.0000] <zcorpan_>
annevk42: i blame opera

[08:19:00.0000] <deadowl>
Can I propose links to anchors cascading across viewports?

[08:22:00.0000] <jgraham>
Erm, you ca propose anything you like

[08:22:01.0000] <jgraham>
Although it isn't clear, at least to me, what you have in mind here

[08:22:02.0000] <deadowl>
I have a navigation: <prev | Mon: mm/dd/yy | Tue: ... | Wed | Thu | Fri | Sat | Sun | next >. I have a div using overflow:auto; to behave as a scrolling area (viewport). I was thinking that if I could have overflow:hidden for the prev/next so I could anchor different versions that would link to the same day, but of the next week.

[08:23:00.0000] <deadowl>
Mon/Tue/Wed acting as anchor names with links within the page, and prev/fwd acting as links to separate pages.

[08:25:00.0000] <deadowl>
however, that would require duplicating all of the content on the page 7 times.

[08:26:00.0000] <deadowl>
going to lunch.

[08:31:00.0000] <zcorpan_>
there are no </script\>s in http://philip.html5.org/data/script-open-in-escape.txt which either means that they are not problematic for double escape or the regexp is written in such a way to exclude the problematic pages

[08:32:00.0000] <zcorpan_>
i envision someone doing <script><!--d.w('<script></script\>');</script>

[08:34:00.0000] <zcorpan_>
it appears that pages escaping the end tag with a trailing backslash either don't use <!-- at all or have a matching --> at the end

[08:35:00.0000] <Philip`>
It could also mean the validator.nu parser is not matching those patterns

[08:36:00.0000] <zcorpan_>
the above data didn't use the v.nu parser at all

[08:42:00.0000] <Philip`>
Oh, right

[08:43:00.0000] <hsivonen>
cool. it seems the <itemref> element went away before I got around to complaining about it on the mailing list

[08:43:01.0000] <TabAtkins>
deadowl: I'm still not sure quite what you're getting at with the talk of "viewports", but yes, you'd need to write out the content 7 times, once for each day, if you want Mon-Sun to just be anchors into the page.  Alternately, use js to update the page appropriately.

[08:45:00.0000] <TabAtkins>
deadowl: Oh wait, I think I get what you're saying now.  If you've already clicked on Tuesday, frex, and are thus at foo.html#tuesday, then you click "next", you'd like to show bar.html#tuesday, rather than just bar.html.  Right?

[08:46:00.0000] <zcorpan_>
i don't see any <\/script> anywhere. that seems fishy. why are there no <\/script> in the above?

[08:46:01.0000] <TabAtkins>
deadowl: For now, just js-update the prev/next links to contain the appropriate anchor whenever you click on one of the Mon-Sun links.  This degrades acceptably.

[08:47:00.0000] <Dashiva>
zcorpan_: The regexp only looks for </script>?

[08:47:01.0000] <Dashiva>
Or well, </script

[08:50:00.0000] <zcorpan_>
Dashiva: http://philip.html5.org/data/script-open-in-escape.txt shouldn't exclude pages with say <script><!--d.w('<script><\/script>');</script>, right?

[08:51:00.0000] <Philip`>
(?i)<script[^>]*>([^<]|<(?!/script[\s/>]))*<!--([^-]|-(?!->))*<script[\s/>]([^-]|-(?!->))*</script[\s/>]

[08:51:01.0000] <Philip`>
Looks like it shouldn't exclude it

[08:52:00.0000] <Philip`>
$ echo '<script><!--d.w("<script><\/script>");</script>' | grep -P '(?i)<script[^>]*>([^<]|<(?!/script[\s/>]))*<!--([^-]|-(?!->))*<script[\s/>]([^-]|-(?!->))*</script[\s/>]'

[08:52:01.0000] <Philip`>
That says it matches

[08:55:00.0000] <zcorpan_>
ok

[08:57:00.0000] <zcorpan_>
i guess that's good and we can keep <\/script> and </script\> invalid inside double escape

[11:23:00.0000] <Tripknotix>
hi everyone

[11:23:01.0000] <Tripknotix>
ive got a question about html5

[11:23:02.0000] <Tripknotix>
for div's with scrollbars to automatically show the last bit of content without needing a focus call

[11:23:03.0000] <Tripknotix>
<Tripknotix> when its added

[11:23:04.0000] <Tripknotix>
like how current chats are made 

[11:24:00.0000] <webben>
Tripknotix: HTML5 doesn't have a special concept of a changing region. WAI-ARIA has live regions - but that's for passing information to assistive technologies, not for changing the visual rendering.

[11:25:00.0000] <Tripknotix>
know any tricks for such a thing beyond the usually, add to the bottom and focus to it

[11:26:00.0000] <Tripknotix>
my old setup was to add to it, focus,t hen back to the typing box to focus

[11:26:01.0000] <Tripknotix>
but it caused a delay when someone was typing

[11:26:02.0000] <Tripknotix>
in frames

[11:26:03.0000] <annevk2>
set scrollTop

[11:27:00.0000] <Tripknotix>
hows that work

[11:28:00.0000] <Tripknotix>
<--googling

[11:28:01.0000] <webben>
Tripknotix: https://developer.mozilla.org/en/DOM/element.scrollTop

[11:28:02.0000] <Tripknotix>
was already on that page =P

[11:28:03.0000] <Tripknotix>
but thank u

[11:29:00.0000] <zcorpan_>
Tripknotix: or scrollIntoView()

[11:30:00.0000] <Tripknotix>
that first one is interesting, i dont understand what it would be used for

[11:30:01.0000] <Tripknotix>
it jut sets a number

[11:31:00.0000] <Tripknotix>
scroll into view sounds very interesting

[11:32:00.0000] <Tripknotix>
the only issue i see is

[11:32:01.0000] <Tripknotix>
actually

[11:32:02.0000] <Tripknotix>
i dont see an issue

[11:32:03.0000] <Tripknotix>
heres another quesiton

[11:32:04.0000] <Tripknotix>
would it take focus off of another frame? if the user is typing in "frames"

[11:32:05.0000] <Tripknotix>
 ?

[11:32:06.0000] <Tripknotix>
i'd understand if so, but it would be great if it didnt

[11:33:00.0000] <zcorpan_>
i think it'd just scroll, but haven't tested

[11:58:00.0000] <gsnedders|work>
What does this[xxx] do?

[11:58:01.0000] <gsnedders|work>
(in Javascript)

[11:59:00.0000] <inimino>
gsnedders|work: it's property access

[11:59:01.0000] <zcorpan_>
xxx gets toString()ed and then does a property lookup on this, or something like that

[11:59:02.0000] <gsnedders|work>
And the properties on the this object are variables in the current scope?

[12:00:00.0000] <gsnedders|work>
(and other things bound to identifiers like functions)

[12:00:01.0000] <inimino>
no

[12:00:02.0000] <inimino>
they are the properties of 'this', the value of which depends on context

[12:00:03.0000] <JoePeck>
gsnedders|work: it is "bracket notation" => https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Operators/Member_Operators

[12:01:00.0000] <gsnedders|work>
/me grumbles at how much he hates this

[12:01:01.0000] <zcorpan_>
variables in the global scope become properties on the window, but variables scoped to functions don't become properties of the function, iirc

[12:01:02.0000] <gsnedders|work>
JoePeck: Yeah, right, I know that much

[12:23:00.0000] <jgraham>
gsnedders|work: Did you work it out yet?

[12:23:01.0000] <gsnedders|work>
jgraham: No, but I've basically given up.

[12:23:02.0000] <gsnedders|work>
jgraham: (for today)

[12:24:00.0000] <gsnedders|work>
jgraham: I'll ask you tomorrow

[12:26:00.0000] <jgraham>
gsnedders|work: Good (that you gave up for today)

[12:26:01.0000] <jgraham>
Go sleep or something

[12:26:02.0000] <gsnedders|work>
I've done little but that all day :)

[12:27:00.0000] <jgraham>
Yeah well you're ill :)

[12:28:00.0000] <gsnedders|work>
No worse than normal, now

[12:30:00.0000] <jgraham>
Hmm OK. 

[12:30:01.0000] <jgraham>
As long as you don't make me sick :)

[12:30:02.0000] <gsnedders|work>
You survived over the seminar, so I guess you will

[12:35:00.0000] <jgraham>
/me hopes the sentence being cut off wasn't indicative of gsnedders|work suddenly dying

[12:35:01.0000] <Philip`>
Suddenly dying onto his enter key?

[12:38:00.0000] <jgraham>
Philip`: Could happen

[12:39:00.0000] <jgraham>
othermaciej_: btw the proposal to use vendor-prefixed attributes for user-agent experimental features seems good to me

[12:41:00.0000] <othermaciej_>
jgraham: I'm not sure I'd go so far as calling it a proposal, but it does seem sensible to me in light of how CSS experimental properties work

[14:22:00.0000] <annevk>
is anyone planning on writing a proposal to maintain the Microdata status quo?

[14:23:00.0000] <annevk>
also, do I understand it correctly that for every issue that opposes the status quo those who like the status quo need to write a proposal to keep it that way?

[14:24:00.0000] <annevk>
I somehow missed that

[14:26:00.0000] <Dashiva>
Well, if the change proposal is rejected, you don't have to do anything

[14:26:01.0000] <Dashiva>
But that's a long bet to take

[15:33:00.0000] <JonathanNeal>
Is there a downable version of outliner?

[16:21:00.0000] <hober>
annevk: my understanding is that microdata is a one-off re: your question about status quo proposals


2009-10-27
[17:01:00.0000] <Tripknotix>
whats, whatwg stand for

[17:02:00.0000] <Hixie>
Tripknotix: Web Hypertext Application Technology Working Group

[17:03:00.0000] <Tripknotix>
so whys this the place to talk about html5 ?

[17:03:01.0000] <Hixie>
WHATWG is one of the groups working on HTML5

[17:04:00.0000] <Tripknotix>
oh

[17:04:01.0000] <Tripknotix>
interesting

[17:04:02.0000] <Hixie>
see also www.whatwg.org and http://wiki.whatwg.org/wiki/FAQ

[17:29:00.0000] <Hixie>
hsivonen: yt?

[22:15:00.0000] <MikeSmith>
hsivonen_: please ping me when you get back on -- if/when you have time to chat a little. I want to ask some boneheaded questions about how to actually get the v.nu error-handling backend to report warnings for exceptions that have warningness set

[22:19:00.0000] <MikeSmith>
hsivonen_: in the mean time I'll read more through the code to try to give myself some clue

[22:19:01.0000] <MikeSmith>
and your thesis

[00:22:00.0000] <hsivonen_>
Hixie: I'm here now

[00:22:01.0000] <hsivonen_>
looks like MikeSmith just left :-(

[00:25:00.0000] <hsivonen_>
oh. a new ED of XHTML2

[00:43:00.0000] <Hixie>
hsivonen_: i don't recall why i was pinging you, sorry.

[00:45:00.0000] <hsivonen_>
Hixie: ok

[00:58:00.0000] <Philip`>
"<zcorpan> so when's WHATWG LC?  <Hixie> probably monday" - it's late :'-(

[00:58:01.0000] <Philip`>
in most timezones

[00:58:02.0000] <Hixie>
yeah, gonna be tomorrow night my timezone i think

[01:12:00.0000] <a-ja>
anyone know of a microdata extractor/tester service that works with recent spec changes?

[01:13:00.0000] <a-ja>
/me only found one for circa may timeframe

[01:15:00.0000] <Hixie>
i'm not aware of any, but it wouldn't be hard to make one

[01:16:00.0000] <a-ja>
was just playing with trying to make some calendars / vcards "multi-lingual"....uF and microdata

[01:17:00.0000] <Hixie>
cool

[01:18:00.0000] <a-ja>
it's not exactly pretty :)

[01:23:00.0000] <jgraham>
a-ja: I am in the process of updating my python implementation to the latest spec. It will probably take a few more evenings since I'm not trying very hard

[01:24:00.0000] <a-ja>
oh, cool....i'll check it again soon then

[01:28:00.0000] <Philip`>
I'm not in the process of updating my JS implementation

[01:28:01.0000] <Philip`>
Someone else could feel free to fix it for me :-)

[01:28:02.0000] <a-ja>
fwiw....seemed to me that included format adr & geo should get added to html5.  and perhaps let vevent location have addr/geo instead of just text                    

[01:29:00.0000] <a-ja>
erm....adr/geo/vcard

[01:30:00.0000] <a-ja>
Philip`: URL?

[01:34:00.0000] <Philip`>
a-ja: http://philip.html5.org/demos/microdata/demo.html

[01:35:00.0000] <a-ja>
tks......seen it before and have it bookmarked already

[02:04:00.0000] <hsivonen_>
Is a control named isindex magic in IE even if the submission encoding type is not the default?

[02:08:00.0000] <hsivonen>
never mind

[02:12:00.0000] <hsivonen>
eww. Are browsers really supposed to submit the localized string for "Submit" when the submit button has no specified value?

[02:15:00.0000] <Hixie>
they already do, no?

[02:16:00.0000] <zcorpan_>
doesn't the spec just talk about the button's label?

[02:16:01.0000] <Hixie>
hm, maybe the spec doesn't require it?

[02:16:02.0000] <Hixie>
i dunno

[02:16:03.0000] <Hixie>
file bugs if the spec is wrong

[02:16:04.0000] <zcorpan_>
"If the element has a value attribute, the button's label must be the value of that attribute; otherwise, it must be an implementation-defined string that means "Submit" or some such."

[02:16:05.0000] <zcorpan_>
what does "it" refer to?

[02:18:00.0000] <zcorpan_>
i guess it can only refer to "the button's label"

[02:18:01.0000] <zcorpan_>
/me looks at the form submission algorithm

[02:23:00.0000] <zcorpan_>
"The value IDL attribute is in mode default."

[02:24:00.0000] <zcorpan_>
"On getting, if the element has a value attribute, it must return that attribute's value; otherwise, it must return the empty string."

[02:26:00.0000] <zcorpan_>
"Each input element has a value, which is exposed by the value IDL attribute."

[02:27:00.0000] <zcorpan_>
"Otherwise, append an entry in the form data set with name as the name, the value of the field element as the value, and type as the type."

[02:29:00.0000] <zcorpan_>
is that right?

[02:31:00.0000] <hsivonen>
Hixie: it seems that Gecko already submits the localized string for "Submit"

[02:32:00.0000] <hsivonen>
it seems like a bad idea to make the submission dependent on localization, but I guess that's the way the legacy is

[02:34:00.0000] <Hixie>
does it affect the DOM also?

[02:34:01.0000] <Hixie>
oh, crap, the IETF is having a meeting again, so I can't update the I-D

[02:34:02.0000] <Hixie>
man, the IETF is really annoying

[02:35:00.0000] <zcorpan_>
opera even sets the content attribute value="Submit"

[02:35:01.0000] <zcorpan_>
but that's a bug

[02:39:00.0000] <zcorpan_>
Hixie: don't we want to have the same requirement for <title> and the others?

[02:40:00.0000] <Philip`>
/me sees that websocket has long surpassed http://tools.ietf.org/html/draft-ietf-dnsext-mdns-47 in number of revisions

[02:42:00.0000] <Hixie>
zcorpan_: hm?

[02:43:00.0000] <Hixie>
Philip`: it's still far behind html5!

[02:43:01.0000] <zcorpan_>
Hixie: the restriction you added to <style>

[02:43:02.0000] <Hixie>
i don't really want to have it on <style>, let alone anything else

[02:43:03.0000] <gsnedders|work>
/me wonders what happens after 99

[02:43:04.0000] <Philip`>
gsnedders|work: 100

[02:44:00.0000] <Philip`>
gsnedders|work: I thought you knew how to count

[02:44:01.0000] <gsnedders|work>
/me wonders if any I-D has ever hit that

[02:44:02.0000] <Philip`>
gsnedders|work: websocket seems to be the highest that I can see, and dnsext-mdns is second

[02:44:03.0000] <zcorpan_>
Hixie: ok. i guess it's mostly just a problem for script and style anyway

[02:44:04.0000] <gsnedders|work>
Philip`: But they're deleted after six months, so that's not very interested

[02:44:05.0000] <gsnedders|work>
*interesting

[02:45:00.0000] <Philip`>
Hixie: Sadly HTML5 still has far to go before catching up with KDE in number of revisions

[02:46:00.0000] <Hixie>
There's only one of me :-P

[02:46:01.0000] <Philip`>
gsnedders|work: Deleted from tools.ietf.org too?

[02:46:02.0000] <gsnedders|work>
Philip`: Ah, no, they aren't.

[02:46:03.0000] <gsnedders|work>
Hixie: Clone yourself.

[02:47:00.0000] <Philip`>
/me was looking at stuff like http://www.google.co.uk/search?q=site%3Atools.ietf.org+inurl%3Ahtml%2Fdraft+inurl%3A30

[02:51:00.0000] <hsivonen>
hrm. VideoPress supports Theora but their front page tries to serve Flash to Minefield

[02:55:00.0000] <zcorpan_>
hsivonen: because Minefield isn't Firefox 3.5?

[02:55:01.0000] <hsivonen>
zcorpan_: dunno

[03:00:00.0000] <Hixie>
Philip`: for 8047, any reason I couldn't just invoke the WebIDL algorithm directly?

[03:04:00.0000] <Philip`>
Hixie: That would be a type error, because the WebIDL algorithm expects an ECMAScript value whereas HTML5 has an unlimited-precision decimal number

[03:04:01.0000] <Hixie>
yeah, but other than that

[03:05:00.0000] <DrEvil>
can web workers 'watch' page transitions?

[03:05:01.0000] <Hixie>
DrEvil: shared workers can listen to what their pages tell them, but they have no view to the outside world other than that

[03:05:02.0000] <Philip`>
and I think the type error has practical consequences, because it affects how rounding is computed

[03:05:03.0000] <Hixie>
k

[03:06:00.0000] <DrEvil>
Hixie: so a web worker cannot watch to see the window location changing?

[03:06:01.0000] <Hixie>
correct

[03:06:02.0000] <Hixie>
a

[03:06:03.0000] <Hixie>
a dedicated worker will be shut down when the pages moves on

[03:06:04.0000] <Hixie>
a shared worker will live on if other pages are talking to it only

[03:07:00.0000] <Hixie>
Philip`: can you think of any reason why the parsing algorithm shouldn't just always convert to a float?

[03:07:01.0000] <Philip`>
Maybe it'd be much easier to replace the whole float-parsing thing with ECMAScript ToNumber, and have it return a proper floating-point number rather than an impossible hypothetical unlimited-precision number

[03:07:02.0000] <DrEvil>
hmm so there is not a way for which to view informations on page changes with browsers?

[03:08:00.0000] <Hixie>
DrEvil: how do you mean?

[03:08:01.0000] <DrEvil>
say for analysing requests and responses from server

[03:09:00.0000] <Hixie>
DrEvil: what are you trying to do?

[03:09:01.0000] <jgraham>
/me thought that most ES algorithms were written in terms of abstract, unlimited precision numbers and converted to concrete representations at the last possible moment

[03:09:02.0000] <webben>
DrEvil: Isn't that what your server access logs do?

[03:09:03.0000] <DrEvil>
on the client I mean

[03:09:04.0000] <DrEvil>
with javascript

[03:09:05.0000] <jgraham>
(but I don't recall exactly what you are talking about and I don't fedel incline to check unless someone wants me to)

[03:09:06.0000] <Philip`>
jgraham: I don't know about most algorithms, but it defines how to convert a string into a Number (i.e. a 64-bit floating point value), and WebIDL defines how to convert a Number to an IDL float (32-bit)

[03:09:07.0000] <webben>
DrEvil: Sure there is. Firebug and LiveHTTPHeaders do so, for instance. They just don't run out of a page.

[03:09:08.0000] <Philip`>
which seems to be what's needed here

[03:10:00.0000] <DrEvil>
webben: I am looking for something to run as code on demand not to be requiring addon

[03:10:01.0000] <jgraham>
Philip`: So you're saying that HTML5 should just work in terms of some concrete representation rather than an abstract number?

[03:11:00.0000] <webben>
DrEvil: There's no reason a browser can't incorporate those features if it wants.

[03:11:01.0000] <DrEvil>
as an example - I want to create a javascript application which can be included into page - it will read the details of requests/response for page and provide a status bar with details at the bottom of the pgae

[03:11:02.0000] <DrEvil>
but I cannot see this information with javascrit

[03:11:03.0000] <DrEvil>
I cannot do with workers?

[03:12:00.0000] <webben>
DrEvil: You can see it if your script is making the requests.

[03:12:01.0000] <DrEvil>
but if the browser location is changing?

[03:12:02.0000] <DrEvil>
I want to host the script and have authors include this one script in their pages

[03:12:03.0000] <Philip`>
jgraham: The view ES/WebIDL takes (if I'm not mistaken) is that floating-point numbers are an abstract concept of a finite set of real numbers, and the byte-level representation is irrelevant

[03:13:00.0000] <Philip`>
jgraham: so it's still non-concrete

[03:13:01.0000] <DrEvil>
but at the moment I cannot see how it is I can get this information with javascript

[03:13:02.0000] <webben>
DrEvil: It sounds to me like allowing any old script in a page to capture requests/responses even after the page was closed would contravene the browser security model left right and center, and is it's easy for developers to use tools like Firebug, I don't really see what real-world problem you are solving.

[03:13:03.0000] <webben>
*as it's

[03:14:00.0000] <DrEvil>
I don't think that is much security concern

[03:15:00.0000] <DrEvil>
maybe for request you would remove authorization

[03:15:01.0000] <webben>
Really? What would be the limitation on someone including a script in a page and using it to track all my subsequent movements?

[03:15:02.0000] <DrEvil>
but for response it is not risk

[03:15:03.0000] <Philip`>
I think I'm saying that instead of HTML5 defining how to parse a string into an unlimited-precision number, and then defining how to convert it to a member of the finite floating-point set of numbers for IDL, it should instead parse the string into a member of the finite set directly in the same way that ES does

[03:15:04.0000] <Philip`>
(and then the conversion to ES Number is trivial)

[03:15:05.0000] <DrEvil>
what http headers are you thinking of in response that present risk?

[03:15:06.0000] <Philip`>
(and WebIDL handles the conversion to IDL float)

[03:15:07.0000] <webben>
DrEvil: All of them. It's /my/ traffic. Not to be sniffed by random websites I visit.

[03:15:08.0000] <Philip`>
(unless I'm getting stuff mixed up)

[03:16:00.0000] <DrEvil>
it's not sniffed random the author has to chose to include script

[03:16:01.0000] <DrEvil>
so this is correct - it is possible for author to design now custom solution with on click events for links

[03:16:02.0000] <webben>
DrEvil: Yes. But you want the sniffing to continue once one has left the page.

[03:17:00.0000] <DrEvil>
no for response information available each page

[03:17:01.0000] <DrEvil>
individually

[03:17:02.0000] <jgraham>
Philip`: I see. There is some level of concreteness in Ecmascript through the to (U)Int algorithms which are needed for things like bitwise operators applied to Numbers

[03:17:03.0000] <webben>
DrEvil: You asked what happens if .location changes - that's leaving the page.

[03:17:04.0000] <DrEvil>
this is interesting because some sites they use URI for sensitive information - this is available already to javascript

[03:17:05.0000] <jgraham>
Philip`: But you plan sounds like a rather sensible approach

[03:18:00.0000] <webben>
DrEvil: Not to scripts loaded on previously visited pages.

[03:18:01.0000] <hsivonen>
hrm. XiphQT doesn't with QuickTime Player X

[03:18:02.0000] <DrEvil>
I do not need to scripts on previous pages I was thinking more to find a solution

[03:18:03.0000] <DrEvil>
if it is possible some other way that my javascript can include on the page and get that inforamtion each time that is better

[03:19:00.0000] <DrEvil>
so I can access the response information - more than just location

[03:19:01.0000] <webben>
DrEvil: If you "do not need to scripts on previous pages", what do you mean by tracking traffic across .location changes?

[03:19:02.0000] <Philip`>
(Oh, I might be a little mixed up - if the IDL uses float, then HTML5 probably needs the value to be part of the set of 32-bit floats. Or HTML5 could just use double.)

[03:19:03.0000] <gsnedders|work>
hsivonen: AFAIK it should work if you have QT7 installed

[03:19:04.0000] <DrEvil>
I say wrong - I mean to say that I wish to view response information on each page

[03:19:05.0000] <hsivonen>
gsnedders|work: yes, I noticed that

[03:20:00.0000] <webben>
DrEvil: What if a page requests a resource (e.g. an iframe src) on another domain?

[03:20:01.0000] <gsnedders|work>
(QT X has no native support extensions, and just uses QTKit for unknown codecs if it is installed)

[03:20:02.0000] <webben>
DrEvil: Sniffing that would contravene same-origin policies.

[03:20:03.0000] <gsnedders|work>
s/ if it is installed//

[03:20:04.0000] <webben>
DrEvil: Your use-case is handled so much better by tools like Firebug.

[03:21:00.0000] <DrEvil>
webben: I am not understanding this is relevant I am not saying sniffing

[03:21:01.0000] <hsivonen>
gsnedders|work: do QT X and QT 7 have totally different back ends?

[03:21:02.0000] <gsnedders|work>
hsivonen: As I understand it, yes.

[03:21:03.0000] <DrEvil>
I meant to say that when a page loads I wish to see the information after the fact

[03:21:04.0000] <DrEvil>
from the response

[03:21:05.0000] <webben>
DrEvil: s/sniffing/viewing/

[03:21:06.0000] <gsnedders|work>
hsivonen: Both can be used via QTKit, and QTKit just chooses the best for what codec you want

[03:21:07.0000] <DrEvil>
so I can show maybe ETag headers.. ?

[03:21:08.0000] <DrEvil>
or something like this

[03:21:09.0000] <hsivonen>
gsnedders|work: I see. That wasn't exactly clear from marketing material or from the Snow Leopard installer

[03:22:00.0000] <DrEvil>
I have some application which it presents standard information in the server responses

[03:22:01.0000] <DrEvil>
in the headers

[03:22:02.0000] <DrEvil>
if I am use XHR I can get this

[03:22:03.0000] <gsnedders|work>
(and for anything apart from the default built-in codecs in QT X, that means using QT7)

[03:22:04.0000] <hsivonen>
gsnedders|work: and QT Player X deliberately configures QTKit never to use the QuickTime 7 back end? that's odd

[03:22:05.0000] <gsnedders|work>
hsivonen: No

[03:22:06.0000] <webben>
DrEvil: Yes I understand what you're saying - but it's totally undesirable from a security/privacy standpoint AFAICT.

[03:22:07.0000] <DrEvil>
but for new page javascript cannot see - all javascript sees is the location

[03:23:00.0000] <DrEvil>
webben: what information in response you are talking about security ?

[03:23:01.0000] <hsivonen>
why doesn't QT Player X choose the QT7 back end for ogg, then?

[03:23:02.0000] <gsnedders|work>
hsivonen: It should

[03:23:03.0000] <hsivonen>
hmm.

[03:23:04.0000] <webben>
DrEvil: Whereas in-built browser tools or add-ons like Firebug can do more and do it better and without damaging security/privacy

[03:23:05.0000] <DrEvil>
webben: there must be trust given to code on demand

[03:23:06.0000] <hsivonen>
does the new back end have extension APIs at all or just new extension APIs?

[03:23:07.0000] <DrEvil>
has to be there is sensitive information in pages which use javascript

[03:24:00.0000] <gsnedders|work>
hsivonen: It has none AFAIK

[03:24:01.0000] <webben>
DrEvil: On the contrary, such code should be distrusted as much as possible.

[03:24:02.0000] <DrEvil>
this is just more of information in response that is in headers

[03:24:03.0000] <DrEvil>
not more or less sensitive

[03:24:04.0000] <DrEvil>
just more information

[03:24:05.0000] <hsivonen>
gsnedders|work: well that's an interesting change of policy

[03:24:06.0000] <DrEvil>
if it is html page I can still use javascript extract values from page elements

[03:24:07.0000] <hsivonen>
Snow Leopard installer didn't make it exactly clear what the "older media formats" that require QuickTime Player 7 are

[03:24:08.0000] <DrEvil>
so what of the headers - they are just information to me

[03:24:09.0000] <DrEvil>
I want to understand what it is in the headers you are worrying about

[03:24:10.0000] <hsivonen>
QT7 back end is installed by default even though the player isn't, right?

[03:24:11.0000] <DrEvil>
so I can think about this

[03:25:00.0000] <webben>
DrEvil: Yes. However, if there's an iframe on the page and its from another domain you cannot introspect its DOM.

[03:25:01.0000] <hsivonen>
since the QT7 Player option was just a couple of MB

[03:25:02.0000] <webben>
DrEvil: It would be similarly inappropriate to allow scripts to introspect its headers.

[03:25:03.0000] <DrEvil>
no - this would not be the case either for javascript is only capable of seeing request information from its current window

[03:25:04.0000] <DrEvil>
same as location etc.

[03:26:00.0000] <webben>
DrEvil: So you're not asking for the ability to view HTTP information for resources included in the page from other domains?

[03:26:01.0000] <DrEvil>
no

[03:26:02.0000] <DrEvil>
just for current page

[03:26:03.0000] <DrEvil>
window.XHResponse.getHeader('Etag')

[03:26:04.0000] <webben>
DrEvil: When you say the current page... do you mean the HTML page as opposed to the resources it includes?

[03:26:05.0000] <DrEvil>
or something like this

[03:27:00.0000] <DrEvil>
I mean for the URI really

[03:27:01.0000] <webben>
I see.

[03:27:02.0000] <hsivonen>
I guess I should have read the John Siracusa treatment of SL

[03:27:03.0000] <DrEvil>
for the response but html/javascript is main use case

[03:27:04.0000] <DrEvil>
I assume this is good place asking?

[03:27:05.0000] <DrEvil>
I will stop if that is wrong

[03:27:06.0000] <webben>
It's not a bad place.

[03:28:00.0000] <DrEvil>
but this makes sense yes? it is the same as window.location

[03:28:01.0000] <DrEvil>
but for the other metadata in the response also

[03:28:02.0000] <DrEvil>
I cannot see the way to do this now

[03:28:03.0000] <Hixie>
nn

[03:29:00.0000] <webben>
DrEvil: Can you think of a use-case other than creating a poor man's Firebug/wireshark?

[03:29:01.0000] <DrEvil>
for some standard of server responses and metadata framework

[03:29:02.0000] <DrEvil>
for standard information on a resource

[03:30:00.0000] <DrEvil>
create standard widget which inspect response on page load

[03:30:01.0000] <webben>
for what?

[03:30:02.0000] <DrEvil>
provide metadata widget

[03:30:03.0000] <DrEvil>
from information in headers

[03:30:04.0000] <webben>
why would a user want a "metadata widget from information in headers"?

[03:30:05.0000] <DrEvil>
because there are standards which are using this

[03:31:00.0000] <DrEvil>
such as new OCCI standard using this

[03:31:01.0000] <DrEvil>
and they make use http headers so they page load but need to render the metadata to a page for users

[03:31:02.0000] <webben>
DrEvil: What metadata that a user would want to see is being send as an HTTP response header?

[03:31:03.0000] <webben>
*sent

[03:32:00.0000] <DrEvil>
they have standards such as resource ID, link relations, resource category

[03:32:01.0000] <DrEvil>
this is something that can be in html

[03:32:02.0000] <webben>
Indeed.

[03:32:03.0000] <DrEvil>
but mostly for display authorative is headers

[03:32:04.0000] <DrEvil>
so for system pruposes and standard

[03:32:05.0000] <DrEvil>
easier if standard library which is included in page for this

[03:32:06.0000] <webben>
Doesn't sound like it needs changes to the DOM ... just put the information in the body of the response.

[03:33:00.0000] <webben>
That way, it will work without scripting.

[03:33:01.0000] <webben>
So the end-user benefits.

[03:33:02.0000] <DrEvil>
yes it is possible to do this but to go with standard it will need analyse the headers

[03:34:00.0000] <DrEvil>
so user can use browser viewing raw data as machine

[03:34:01.0000] <DrEvil>
also html is useful but to view true headers is necessary use case

[03:35:00.0000] <DrEvil>
there is to say there is not to be this in browser ever a solution?

[03:35:01.0000] <DrEvil>
:(

[03:35:02.0000] <webben>
DrEvil: I'm not sure I understand what you're saying

[03:36:00.0000] <annevk2>
probably not a generic solution for a long time

[03:36:01.0000] <DrEvil>
this is information which is there for the browser to present to javascript

[03:36:02.0000] <annevk2>
for reading response headers

[03:36:03.0000] <DrEvil>
yes?

[03:36:04.0000] <webben>
DrEvil: Could you link to the standard which says you must use HTTP headers not the body to present the information?

[03:36:05.0000] <DrEvil>
yes ok 2 mins

[03:38:00.0000] <DrEvil>
http://occi.googlecode.com/hg/docs/occi-core.html

[03:38:01.0000] <DrEvil>
metadata standardised with headers

[03:38:02.0000] <DrEvil>
this means all metadata can be provided regardless of format

[03:39:00.0000] <DrEvil>
so can still have useful response for jpeg/pdf/html/OVF/etc.

[03:39:01.0000] <DrEvil>
better standardise this way gives more flexibility for providers

[03:40:00.0000] <DrEvil>
annevk2: for a long time?

[03:40:01.0000] <DrEvil>
a couple of weeks?

[03:40:02.0000] <DrEvil>
:))

[03:40:03.0000] <DrEvil>
I would be interested to know how long this is you are thinking

[03:40:04.0000] <DrEvil>
that is bad news if it is very very long time, there are many people look now to use headers for this purpose

[03:41:00.0000] <annevk2>
many different nicks which I suspect are the same person certainly are

[03:41:01.0000] <annevk2>
other than that, not so much

[03:42:00.0000] <DrEvil>
?

[03:42:01.0000] <DrEvil>
occi spec is example

[03:43:00.0000] <DrEvil>
there is other case like couchdb use etag and things like this

[03:43:01.0000] <DrEvil>
amazon web service also

[03:43:02.0000] <DrEvil>
annevk2: you not say how much time you were meaning

[03:44:00.0000] <annevk2>
a decade or so

[03:44:01.0000] <DrEvil>
oh wow - why do you think this?

[03:44:02.0000] <DrEvil>
it is not easy just ammend where window.location to include also window.response something

[03:45:00.0000] <annevk2>
no

[03:45:01.0000] <DrEvil>
:( what are the problems here

[03:46:00.0000] <webben>
DrEvil: That OCCI spec specifically mentions in-band link relationships in HTML, I don't see a requirement to keep them in HTTP only.

[03:46:01.0000] <DrEvil>
webben: that is fine but does not to say it is more useufl to be using the authorative information which is headers

[03:46:02.0000] <DrEvil>
it is leaky

[03:47:00.0000] <DrEvil>
please can I ask for some more information why it is this is not happening for decade

[03:47:01.0000] <webben>
DrEvil: Sorry "does not to say it is more useufl to be using the authorative information which is headers" ... where does it say that's the headers are more authorative?

[03:47:02.0000] <DrEvil>
well this is the spec is defined against this method

[03:48:00.0000] <DrEvil>
they are required so it is natural this is cae

[03:48:01.0000] <DrEvil>
case

[03:48:02.0000] <annevk2>
DrEvil, there's hardly any demand so I sort of doubt it will happen a decade from now to be honest

[03:48:03.0000] <annevk2>
DrEvil, there's more important things to work on and worry about

[03:48:04.0000] <webben>
DrEvil: Where does the spec say you must supply metadata out-of-band rather than in-bad?

[03:48:05.0000] <webben>
*in-band

[03:48:06.0000] <DrEvil>
it is for making tool consistent

[03:48:07.0000] <DrEvil>
this information must be consistent format for headers

[03:49:00.0000] <webben>
DrEvil: for example the spec says "The root (“/”) should expose collections in-band and/or out-of-band in order for clients to discover resources." note the "and/or"

[03:49:01.0000] <DrEvil>
that is data not metadata

[03:49:02.0000] <DrEvil>
no wonder

[03:49:03.0000] <DrEvil>
annevk2: how it is not important to do this I don't think

[03:50:00.0000] <DrEvil>
many seeing more use in this area would be easier making browsers more easy to be involved

[03:50:01.0000] <DrEvil>
it is not so hard to make this object available for scripts, no?

[03:50:02.0000] <DrEvil>
what is the difficulty for this?

[03:51:00.0000] <annevk2>
added complexity

[03:51:01.0000] <DrEvil>
it is complex to do this? really?

[03:51:02.0000] <annevk2>
yes, each feature adds complexity

[03:51:03.0000] <webben>
DrEvil: It seems like the approach you are suggesting is actually user-hostile since it encourages publishers to make the display of information the user is interested in dependent on scripts.

[03:51:04.0000] <DrEvil>
yes that is obvious statement if I not to be rude

[03:51:05.0000] <annevk2>
and could potentially be some kind of attack vector, etc.

[03:51:06.0000] <annevk2>
yes it is

[03:52:00.0000] <annevk2>
so we need to evaluate which features to add based on their merit

[03:52:01.0000] <annevk2>
to only increase complexity so much

[03:52:02.0000] <DrEvil>
hmm that is sad it is maybe moving development idea faster if possible

[03:53:00.0000] <DrEvil>
thinking of news things to do

[03:53:01.0000] <DrEvil>
but cannot because browsers too slow to react

[03:53:02.0000] <DrEvil>
no?

[03:53:03.0000] <annevk2>
I've a hard time following your ramblings

[03:53:04.0000] <DrEvil>
better browser focus low level see as open platform 

[03:53:05.0000] <DrEvil>
allow build on top

[03:53:06.0000] <DrEvil>
bottom up

[03:54:00.0000] <DrEvil>
not making complicated solution top down that is slow to react in fast pace world

[03:54:01.0000] <annevk2>
I suggest you start here: http://wiki.whatwg.org/wiki/FAQ#Is_there_a_process_for_adding_new_features_to_a_specification.3F

[03:54:02.0000] <DrEvil>
that is bad for me for everyone

[03:54:03.0000] <DrEvil>
yes I am just talking with you

[03:54:04.0000] <DrEvil>
I can read processes but processes seem they are the problem no?

[03:55:00.0000] <annevk2>
no idea, but your ramblings won't get you anywhere

[03:55:01.0000] <annevk2>
that piece of process might

[03:55:02.0000] <DrEvil>
I see that browsers they have a bad time because there are many features - but I think approach is old and bad

[03:56:00.0000] <DrEvil>
need more open and start at the basics

[03:56:01.0000] <DrEvil>
provide a platform for build complexity

[03:56:02.0000] <annevk2>
sure sure, brave new world thinking is always fun

[03:56:03.0000] <DrEvil>
I think the world it is too rapid for your beuracracy

[03:56:04.0000] <DrEvil>
you are slowing progression I think

[03:56:05.0000] <annevk2>
but that ain't gonna fly if we want today's web to work as well

[03:57:00.0000] <annevk2>
so route around me

[03:57:01.0000] <DrEvil>
I think disruption sometimes it is necessary

[03:57:02.0000] <DrEvil>
maybe we fire you all and make new browsers

[03:57:03.0000] <DrEvil>
:D

[03:57:04.0000] <annevk2>
go for it

[03:57:05.0000] <DrEvil>
it is a shame that is so difficult - maybe if we have operating systems more for the web

[03:57:06.0000] <DrEvil>
you will hopefully become less important

[03:57:07.0000] <DrEvil>
and the world will be better more advancing place faster

[03:58:00.0000] <DrEvil>
not waiting for you to decide all the time

[03:58:01.0000] <DrEvil>
why it is not just to make the very essentials easy accessible and programmable?

[03:58:02.0000] <DrEvil>
you say there is no demand but that may be more reflection of supply

[03:58:03.0000] <DrEvil>
and that is you.. no?

[03:59:00.0000] <annevk2>
what are you still wasting your time here for? go plot and scheme how to destroy the establishment!

[03:59:01.0000] <Dashiva>
Or just make a browser

[04:00:00.0000] <DrEvil>
I tihnk google are best direction

[04:00:01.0000] <DrEvil>
I not do a lot better than they are

[04:00:02.0000] <Philip`>
/me wonders why annevk2 is being unusually hostile

[04:00:03.0000] <DrEvil>
he is homo

[04:00:04.0000] <DrEvil>
lady name

[04:01:00.0000] <DrEvil>
i joke this is not me I am friendly just like to talk about this to understand

[04:01:01.0000] <Philip`>
That's not a productive way to continue the conversation either :-p

[04:02:00.0000] <DrEvil>
I think interesting to see why not to implement the core functionality for web

[04:02:01.0000] <DrEvil>
like this and then build on top

[04:02:02.0000] <annevk2>
Philip`, getting tired of unstructured ramblings mostly

[04:02:03.0000] <Dashiva>
It seems to end up that way whenever HTTP is invoked

[04:03:00.0000] <DrEvil>
I see

[04:03:01.0000] <DrEvil>
HTTP it is the web mostly!

[04:03:02.0000] <annevk2>
DrEvil, the reason we have process is so that not every feature that is being proposed has to be done

[04:03:03.0000] <ttepasse>
Given that Last Call is dooming it's probably to late to repropose <line>, isn't it?

[04:03:04.0000] <Dashiva>
That misconception is probably a big part of it

[04:03:05.0000] <annevk2>
DrEvil, the process is there so that feature proposals get more structured and can be more easily evaluated against other proposals

[04:03:06.0000] <DrEvil>
Dashiva: that is not mis-thinking that is true

[04:03:07.0000] <annevk2>
DrEvil, it makes it clear what problems are being solved, what the use cases are, etc.

[04:04:00.0000] <Dashiva>
HTTP is just a transfer protocol, it's largely irrelevant

[04:04:01.0000] <DrEvil>
annevk2: that is nice politician talking

[04:04:02.0000] <annevk2>
DrEvil, now if you think that is not needed I'm afraid you won't get much further here

[04:04:03.0000] <DrEvil>
Dashiva: HTTP is irrelevant?! that is crazy man :)

[04:05:00.0000] <DrEvil>
annevk2: I think that is poor justification and protective approach for beauracracts

[04:05:01.0000] <DrEvil>
to be important and decide things

[04:05:02.0000] <Dashiva>
Sure, it's the one we happen to use

[04:05:03.0000] <Dashiva>
But there's nothing special about HTTP

[04:05:04.0000] <DrEvil>
I wonder why1

[04:05:05.0000] <gavin>
"http is irrelevant" and "http is irrelevant to whether I want peanut butter on my sandwich" are two very different statements

[04:05:06.0000] <DrEvil>
really?

[04:05:07.0000] <gavin>
I think dashiva's statement was a variant of the latter :)

[04:06:00.0000] <DrEvil>
if http is irrelevant

[04:06:01.0000] <DrEvil>
why it is you add PUT/DELETE?

[04:07:00.0000] <DrEvil>
I am saying something you all dead now?

[04:07:01.0000] <Dashiva>
That's the thing in a nutshell, isn't it

[04:07:02.0000] <Dashiva>
The web is adding PUT/DELETE

[04:07:03.0000] <DrEvil>
no http has had this for since 1.1

[04:07:04.0000] <Dashiva>
Yes, and nobody cared for a long time

[04:07:05.0000] <DrEvil>
this is something html has not had

[04:08:00.0000] <DrEvil>
Dashiva: I think people have cared for while but more since XHR it came to fix a little bit the shitness of HTML

[04:08:01.0000] <DrEvil>
but there is still many problems 

[04:09:00.0000] <DrEvil>
html it is very having lots of shitness

[04:09:01.0000] <Dashiva>
Roy would be proud of you

[04:09:02.0000] <DrEvil>
you are angry people with nothing to say

[04:09:03.0000] <DrEvil>
you attack

[04:09:04.0000] <DrEvil>
that is all

[04:09:05.0000] <DrEvil>
do you listen?

[04:09:06.0000] <DrEvil>
no because you are the most important

[04:10:00.0000] <DrEvil>
I think browsers and html have such big responsibility but you do not have ability to fulfill this

[04:10:01.0000] <Dashiva>
Now that's just asking to be taken out of context :)

[04:10:02.0000] <DrEvil>
maybe because of process, people, both

[04:10:03.0000] <DrEvil>
but you are failing the world

[04:11:00.0000] <DrEvil>
there is missed opportunity because of your bad processes

[04:11:01.0000] <DrEvil>
fact.

[04:11:02.0000] <Dashiva>
Axiomatic proof

[04:11:03.0000] <DrEvil>
Dork comment

[04:12:00.0000] <DrEvil>
this is just too bad

[04:13:00.0000] <DrEvil>
you people do not deserve to be in control if you are not willing to acknowledge the scope of your responsibilities

[04:13:01.0000] <Dashiva>
Nobody is in control

[04:13:02.0000] <Dashiva>
You're free to go out and make a new web

[04:14:00.0000] <DrEvil>
you're an idiot if you think that statement has merit

[04:14:01.0000] <DrEvil>
I don't think you do.

[04:15:00.0000] <Dashiva>
Oh, but it does

[04:15:01.0000] <Dashiva>
Becausae HTTP is most important, right?

[04:15:02.0000] <Dashiva>
You can just add some minor stuff on top of it and you're done

[04:15:03.0000] <DrEvil>
no HTTP is just a foundation

[04:15:04.0000] <DrEvil>
that is unavoidable fact

[04:15:05.0000] <DrEvil>
the same as TCP is important

[04:15:06.0000] <DrEvil>
unavaoidable

[04:15:07.0000] <DrEvil>
I do not see why it is you contest this

[04:16:00.0000] <DrEvil>
you have HTTP notions in your spec

[04:16:01.0000] <DrEvil>
(apart from your pathetic conception of resources)

[04:16:02.0000] <DrEvil>
oh look..

[04:16:03.0000] <DrEvil>
make anothe rstupid comment to avoid the point

[04:16:04.0000] <DrEvil>
pathetic.

[04:17:00.0000] <DrEvil>
like it or not, HTTP is a brilliant piece of engineering and is the reason the web works

[04:17:01.0000] <Dashiva>
Do you have a point?

[04:17:02.0000] <DrEvil>
HTTP/URI's lead to hypermedia formats

[04:17:03.0000] <DrEvil>
html happens to be the one that took off 

[04:18:00.0000] <DrEvil>
it's shit.

[04:18:01.0000] <DrEvil>
and there's virtually nothing in it that's of massive complexity or importance

[04:18:02.0000] <DrEvil>
all the clever stuff is in the protocols

[04:18:03.0000] <DrEvil>
boo hoo

[04:18:04.0000] <Dashiva>
The importance is in the _content_

[04:19:00.0000] <DrEvil>
you can get sand in your vadge over that if you want

[04:19:01.0000] <DrEvil>
I don't care

[04:19:02.0000] <DrEvil>
no actually it's 

[04:19:03.0000] <DrEvil>
*information*

[04:19:04.0000] <DrEvil>
and

[04:19:05.0000] <Dashiva>
No, it's the content. Really.

[04:19:06.0000] <DrEvil>
*relationships*

[04:19:07.0000] <DrEvil>
No. Really. Socrates. It's not.

[04:19:08.0000] <Dashiva>
You may have some kind of distorted HTTP view of reality

[04:19:09.0000] <DrEvil>
you can live in your robotic dork world

[04:19:10.0000] <Dashiva>
But the people use the web for content

[04:19:11.0000] <DrEvil>
where that is your reality

[04:19:12.0000] <DrEvil>
but it's bullshit, and you're in idiot.

[04:20:00.0000] <DrEvil>
people use the web

[04:20:01.0000] <DrEvil>
they dont use html

[04:20:02.0000] <DrEvil>
the web is related information

[04:20:03.0000] <DrEvil>
it's not "lots of amazing wonderful html document"

[04:20:04.0000] <DrEvil>
nobody gives a shit.

[04:20:05.0000] <DrEvil>
XML/JSON/RIAs

[04:20:06.0000] <DrEvil>
Ajax

[04:20:07.0000] <beowulf>
is DrEvil a bot?

[04:21:00.0000] <hsivonen>
beowulf: DrEvil is mookid

[04:21:01.0000] <DrEvil>
I did a really good job of pretending to be foreign though

[04:21:02.0000] <DrEvil>
give me cretdit

[04:21:03.0000] <Dashiva>
No, not really

[04:21:04.0000] <zcorpan_>
Hixie: where's the data about <meta content-language>?

[04:21:05.0000] <DrEvil>
I'm not actually mookid btw

[04:21:06.0000] <Dashiva>
You have content-type:troll/mookid written all over you

[04:21:07.0000] <beowulf>
DrEvil: foreign?

[04:22:00.0000] <DrEvil>
yes it is correct I am make you think that

[04:22:01.0000] <beowulf>
DrEvil: foreign to where?

[04:22:02.0000] <beowulf>
or whom?

[04:22:03.0000] <DrEvil>
yeah whatever foreign to where I am actually located

[04:23:00.0000] <DrEvil>
smarty pants.

[04:23:01.0000] <beowulf>
i still think it's a bot

[04:23:02.0000] <DrEvil>
if it is the singularity just happened

[04:23:03.0000] <DrEvil>
because I am on FIRE right now

[04:23:04.0000] <ment>
hi, anybody fluently speaking html5?

[04:23:05.0000] <DrEvil>
yep <bag of shit />

[04:23:06.0000] <ment>
i think i don't understand how <LI> open tag algorithm works, (9.2.5.10 The "in body" insertion mode).

[04:24:00.0000] <Dashiva>
What part of it is unclear?

[04:24:01.0000] <ment>
becouse it seems the algorithm does nothing

[04:24:02.0000] <jgraham>
ment: What are you expecting it to do?

[04:25:00.0000] <ment>
it skips formatting and phrasing elements to produce "node" variable and then it does nothing with it

[04:25:01.0000] <Dashiva>
It uses it to close previous <li> elements

[04:25:02.0000] <Dashiva>
Step 3

[04:27:00.0000] <DrEvil>
well I hope you're going to apologise for how you've treated me this morning

[04:27:01.0000] <DrEvil>
I feel very upset

[04:27:02.0000] <DrEvil>
how dare you accuse me of caring about the application protocol web developers work with

[04:28:00.0000] <DrEvil>
and then daring to relate that to html

[04:28:01.0000] <ment>
Dashiva: 3) close LI if on top 4) if (node->tag not in Formatting or Phrasing) goto 6; 5) node = previous node on stack; goto 4; 6) this is the last step 7) insert_li_on_top()

[04:28:02.0000] <Dashiva>
No, goto 3

[04:28:03.0000] <DrEvil>
goodbye cruel world!

[04:28:04.0000] <Dashiva>
Where node is reused

[04:29:00.0000] <ment>
Dashiva: 5. Otherwise, set node to the previous entry in the stack of open elements and return to the step labeled loop.

[04:29:01.0000] <annevk2>
ment, the node is inserted in step 6

[04:29:02.0000] <Dashiva>
ment: And the labeled step is #3

[04:29:03.0000] <annevk2>
ment, the node variable is just a temporary thing to check various conditions

[04:29:04.0000] <ment>
Dashiva: no, as #3

[04:29:05.0000] <ment>
hrmz, maybe i have just the wrong version

[04:30:00.0000] <Dashiva>
Which page are you using?

[04:30:01.0000] <annevk2>
/me is looking at http://html5.org/spec

[04:30:02.0000] <Dashiva>
http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#parsing-main-inbody

[04:30:03.0000] <ment>
http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody

[04:30:04.0000] <Dashiva>
Ah, that one is outdated

[04:30:05.0000] <Dashiva>
Very much so

[04:30:06.0000] <annevk2>
but not for this algo it seems

[04:31:00.0000] <zcorpan_>
TR/ should be called outdated/

[04:31:01.0000] <Dashiva>
ment: In that version, your issue is indeed present

[04:32:00.0000] <Dashiva>
But it seems to have been fixed since then

[04:32:01.0000] <ment>
are there any changelogs for the whatwg specs to see what is different?

[04:32:02.0000] <gsnedders|work>
ment: http://html5.org/tools/web-apps-tracker

[04:32:03.0000] <Dashiva>
Yes, but there's a ton to read :)

[04:32:04.0000] <annevk2>
Dashiva, what is different?

[04:33:00.0000] <Dashiva>
annevk: The loop label has moved from step 4 to step 3

[04:33:01.0000] <ment>
gsnedders|work: thanks

[04:33:02.0000] <annevk2>
aaah

[04:34:00.0000] <ment>
however, any _big_ changes in html5 parser? (for example something like, we abandoned adoption agency algorithm, we are using something completely different and three times as complicated instead)

[04:34:01.0000] <DrEvil>
couldn't you just stop talking crap in here and go implement my window.response object ?

[04:34:02.0000] <DrEvil>
that would be far more productive

[04:35:00.0000] <DrEvil>
please, I forgot to say please

[04:35:01.0000] <gsnedders|work>
ment: Depends how "big" is big :)

[04:35:02.0000] <Dashiva>
ment: There's been some back-and-forth about escaped text in <script> and related elements

[04:35:03.0000] <gsnedders|work>
ment: I guess all the new script stuff, the removal of insertion modes, is big

[04:36:00.0000] <Dashiva>
Table taint is gone, I think?

[04:36:01.0000] <gsnedders|work>
s/insertion modes/content model flags/

[04:37:00.0000] <gsnedders|work>
Yeahj

[04:37:01.0000] <ment>
aw, i like content model flags :/

[04:37:02.0000] <gsnedders|work>
resetting the insertion mode has changed

[04:37:03.0000] <Dashiva>
I think the changes have been in the direction of less complexity

[04:37:04.0000] <Dashiva>
Not more

[04:38:00.0000] <gsnedders|work>
Yeah, it is also more similar to how you wanted to have it for perf reasons before

[04:39:00.0000] <gsnedders|work>
ment: you implementing the parser?

[04:39:01.0000] <ment>
well if you want less complexity, the tokenizer could be shortened by few pages by replacing the unrolled state automaton with regexps and lookback buffer :)

[04:39:02.0000] <ment>
gsnedders|work: i've almost implemented tokenizer and parser

[04:40:00.0000] <gsnedders|work>
ment: in what language?

[04:40:01.0000] <ment>
gsnedders|work: C

[04:40:02.0000] <hsivonen>
ment: the [R]CDATA changes might count as 'big'

[04:40:03.0000] <gsnedders|work>
ment: That's more complex if you want to implement it without regexp :)

[04:40:04.0000] <jgraham>
Indeed more complexity != longer description

[04:41:00.0000] <jgraham>
/me wonders why his copy of spotify is behaving so badly today

[04:41:01.0000] <gsnedders|work>
Mine is behaving fine, FWIW

[04:41:02.0000] <DrEvil>
http://clouddevelopertips.blogspot.com/2009/10/what-language-does-cloud-speak-now-and.html

[04:41:03.0000] <gsnedders|work>
(And I guess that's slightly more useful than some random person saying that)

[04:42:00.0000] <jgraham>
Yeah I guess it's not network problems

[04:42:01.0000] <jgraham>
then

[04:42:02.0000] <gsnedders|work>
Or maybe I'm using the entire bandwidth of the office :P

[04:42:03.0000] <ment>
gsnedders|work: but this description is more complicated to implement, because i have to put the regexps together from state machine (not an pleasant thing to do) and then unroll it again into my representation

[04:43:00.0000] <Dashiva>
Maybe there can be some informative un-unrolled state examples made when the spec is finalized

[04:43:01.0000] <jgraham>
ment: If you are making an implementation that is significantly different from the spec it is always more complex to be sure you are right

[04:43:02.0000] <gsnedders|work>
ment: FWIW, all the implementations thus far wouldn't have gained by having it in regex

[04:43:03.0000] <Dashiva>
But I believe the unrolled state is better for review

[04:44:00.0000] <gsnedders|work>
ment: Why do you need to go from spec -> regex -> your repr? Why the middle-step?

[04:44:01.0000] <ment>
gsnedders|work: http://ibawizard.net/~thement/com.txt

[04:45:00.0000] <jgraham>
/me wonders if that is supposed to be an answer

[04:45:01.0000] <ment>
gsnedders|work: then i can after <!-- just fill buffer and every time i see '>' i would run this regexp

[04:45:02.0000] <gsnedders|work>
/me wonders if doing it in a regexp way is very performant

[04:46:00.0000] <ment>
gsnedders|work: of course unrolled into five-line c code

[04:46:01.0000] <gsnedders|work>
ment: Most of the impls do similar quick grabbing from the input stream, and regex wouldn't have helped

[04:47:00.0000] <gsnedders|work>
(AFAIK the longest look-behind any have is one character_

[04:47:01.0000] <gsnedders|work>
(And the validator/Gecko one has no look-behind or look-ahead)

[04:48:00.0000] <jgraham>
If anyone sees rubys, can they remind me to talk to him about html5lib-commits?

[04:49:00.0000] <ment>
gsnedders|work: i need to store the comment in dom tree anyway. but if i wanted DFA, i could just unroll my own from those regexs and it would be much less error prone

[04:49:01.0000] <gsnedders|work>
DFA?

[04:49:02.0000] <ment>
deterministic automaton

[04:50:00.0000] <gsnedders|work>
Ah. I think the basic state is that using regex in places would benefit some and hurt others

[04:51:00.0000] <hsivonen>
ment: do you mean writing regexps and turning those into automata would be less error prone than hand-implementing the specced state machine?

[04:51:01.0000] <jgraham>
/me can't see why regexps should ever be faster assuming a sufficiently low-level implementation

[04:51:02.0000] <hsivonen>
jgraham: indeed

[04:52:00.0000] <hsivonen>
besides, most "regexp" implementations out there are worse than DFA perf-wise

[04:52:01.0000] <jgraham>
hsivonen: I think the paper that claimed that really only applied to a special case

[04:53:00.0000] <hsivonen>
jgraham: I mean that the regexps you get from Perl, Java, Python, JS, etc. aren't DFA

[04:53:01.0000] <jgraham>
At least I recall a forum discussion with a (perl?) person suggesting that the paper focused on a type of regexp which is uncommon and is very bad in real implementations

[04:53:02.0000] <jgraham>
but ignored the fact that real (non-DFA) implementations are faster for commoner cases

[04:54:00.0000] <jgraham>
(maybe not faster in terms of algorithmic complexity but actually faster to run)

[04:54:01.0000] <jgraham>
(but I don't recall the details so I might be wrong)

[04:54:02.0000] <hsivonen>
/me doubts they are faster but they do enable things like capturing parentheses

[04:55:00.0000] <gsnedders|work>
/me thinks you should try slower languages like PHP

[04:55:01.0000] <gsnedders|work>
but there again, PCRE is fairly easy to segfault, which is suboptimal

[04:55:02.0000] <jgraham>
/me might be mistaken about the whole thing

[04:55:03.0000] <ment>
http://swtch.com/~rsc/regexp/regexp1.html

[04:57:00.0000] <ment>
hsivonen: html5 tokenizer is in non-machine readable format, so i have either step-by-step implement it or decompile it into high-level representation (states and regexes) and then compile it into tokenizer

[04:58:00.0000] <ment>
hsivonen: and the latter is much easier given that in the former i have to explicitly check if some state hasn't "now dance monkey dance" action (and i'm only human)

[05:00:00.0000] <hsivonen>
having implemented it by hand, I doubt that you could get the buffering just right efficiently by using a generic compilation tool

[05:00:01.0000] <hsivonen>
I use Java as the abstraction from which I generate C++

[05:01:00.0000] <ment>
hsivonen: specification in regexes -> NFA -> DFA, then some state minimization and i've got the _exact_ same tokenizer

[05:01:01.0000] <ment>
hsivonen: and i have a guarantee my tokenizer doesn't end in endless loop due to missing state in html5 specs

[05:02:00.0000] <jcranmer>
and you rely on the correctness of three other internal generation schemes

[05:04:00.0000] <hsivonen>
ment: but the state machine isn't enough. it also needs to store e.g. element names as it traverses over them

[05:05:00.0000] <jcranmer>
you can do semantic action processing on state transitions

[05:05:01.0000] <jcranmer>
although that's not amenable to minimization

[05:07:00.0000] <jgraham>
hsivonen: http://www.perlmonks.org/?node_id=597364

[05:08:00.0000] <ment>
jcranmer: not to underestimate you, but those three algorithms has been proven to produce correct result and it's implementation takes few KB instead of half-meg of specs

[05:09:00.0000] <jcranmer>
I'm reminded of that Knuth quote

[05:09:01.0000] <jcranmer>
Beware of bugs in the above code; I have only proved it correct, not tried it. -- Donald E. Knuth

[05:11:00.0000] <hsivonen>
jgraham: well, the Unicode concern is a bit on the side of the less common case. For every DFA operating on Unicode characters, there's an equivalent DFA (potentially with more states) operating on UTF-8

[05:11:01.0000] <hsivonen>
jgraham: and the most common regexps out there probably match on ASCII code points anyway

[05:12:00.0000] <hsivonen>
I can appreciate the utility of backreferences, etc., though

[05:12:01.0000] <gsnedders|work>
/me doesn't see why you can't just compile [^a] to $char != 'a' instead of $char == 'b' || $char == 'c' etc.

[05:12:02.0000] <jcranmer>
well, backrefs easily make languages context-sensitive

[05:13:00.0000] <jcranmer>
(.*)\1 is neither regular nor context-free

[05:13:01.0000] <hsivonen>
jcranmer: sure. Perl "regular expressions" aren't regular

[05:13:02.0000] <jgraham>
hsivonen: His claim that the real world performance of perl-like implementations will likely be better seems at least plausible

[05:14:00.0000] <hsivonen>
jgraham: yes, it is plausible. and probably also depends on when expression compilation happens and how often

[05:15:00.0000] <Philip`>
ment: http://canvex.lazyilluminati.com/svn/tokeniser/tokeniser_spec.ml <-- there's a machine-readable version of the tokeniser :-)

[05:15:01.0000] <jgraham>
Of course. In any case the general idea that it is dangerous to extrapolate from a single pathological case to general ideas about goodness seems sound

[05:15:02.0000] <jgraham>
Philip`: s/machine-readable/out-of-date/

[05:16:00.0000] <gsnedders|work>
Philip`: r2548? wow.

[05:16:01.0000] <ment>
Philip`: cute :)

[05:18:00.0000] <Philip`>
ment: and it can be converted to graphs like http://canvex.lazyilluminati.com/misc/tokeniser_states.png and code like http://philip.html5.org/tools/parser/tokeniser_auto.js etc

[05:18:01.0000] <Philip`>
It is indeed horrendously out of date :-(

[05:20:00.0000] <hsivonen>
jgraham: well, at least with DFAs the failure mode is running out of heap during pattern compilation instead of running out of stack space during matching. :-)

[05:20:01.0000] <Philip`>
So with DFAs your program will fail to execute at all, whereas with NFAs it'll work fine with normal inputs

[05:21:00.0000] <ment>
that's another thing, the <!doctype>. why not just grab <!([^>]+)> and then parse it in sub-grammar instead of pluging it directly in the main tokenizer?

[05:21:01.0000] <hsivonen>
ment: to touch the memory fewer times

[05:22:00.0000] <hsivonen>
ment: anyway, the spec allows you to implement any algorithmic transformation you see fit as long as it doesn't change the black-box behavior

[05:22:01.0000] <Philip`>
Is it possible to statically determine whether a Perl-style regexp will run in non-exponential time/space on any input?

[05:24:00.0000] <jgraham>
Philip`: Doesn't perl allow you to run arbitary functions as part of the process? I would guess in those cases the answer is no...

[05:24:01.0000] <ment>
hsivonen: you don't event know how ridiculous that argument sounds in HTML5 context

[05:25:00.0000] <Philip`>
/me would like to be able to detect bugs like the one that made the html5lib sanitiser exponentially slow

[05:25:01.0000] <Philip`>
jgraham: That's true, so I was thinking more of other cases :-)

[05:25:02.0000] <gsnedders|work>
jgraham: I guess if you ignore the e flag

[05:26:00.0000] <hsivonen>
ment: what's ridiculous?

[05:26:01.0000] <hsivonen>
/me has implemented some things differently from the spec concept but with the same behavior

[05:26:02.0000] <Philip`>
gsnedders|work: In Perl regexps? That's only relevant for substitutions, not pattern matching

[05:26:03.0000] <ment>
hsivonen: "to touch the memory" wtf?

[05:27:00.0000] <ment>
hsivonen: you are running javascript-sqllite-svg virtual machine and now you are going to count cycles?

[05:27:01.0000] <hsivonen>
ment: in infrastructure of the beast, sure

[05:28:00.0000] <ment>
hsivonen: moreover, the while(c != '>') add_char(); parse_doctype(); would be still faster given that the doctype string is reasonably small (few KBs tops)

[05:29:00.0000] <hsivonen>
ment: you are permitted to implement it that way

[05:30:00.0000] <Philip`>
hsivonen: Your earlier statements seem to be contradictory - if you can implement any black-box-equivalent behaviour, the spec could easily say to grab the whole string and then parse it as a later step, and it wouldn't affect the memory use patterns of implementations

[05:31:00.0000] <hsivonen>
Philip`: yeah, the real reason why the doctype stuff is in the same state machine is more likely that the idea that > needs to break out even within quotes came relative late in the speccing cycle

[05:32:00.0000] <Philip`>
ment: Why would that be faster? (I'd have thought that parse_doctype would have to do the same amount of work that an exploded tokeniser would do, and you're also doing an extra loop over the characters)

[05:34:00.0000] <ment>
Philip`: you don't have to jump back-and-forth in the whole state machine and it breaks down to while (c == ...) grab(); while (c != ...) skip(); so jump prediction would work as expected (given that it fits in L1 so no "touching memory" occurs)

[05:35:00.0000] <ment>
Philip`: but cycle counting is still ridiculous in this context

[05:35:01.0000] <hsivonen>
ment: if all the state transitions are compiled down to gotos, surely code locality-based caching should do the right thing when you are jumping among the doctype-related states?

[05:36:00.0000] <hsivonen>
/me intends to make that stuff use gotos instead of switch eventually

[05:37:00.0000] <gsnedders|work>
/me could see what effect using goto instead of switch in PHP 5.3 has… I doubt much

[05:37:01.0000] <hsivonen>
gsnedders|work: PHP has goto?

[05:37:02.0000] <gsnedders|work>
hsivonen: Since 5.3

[05:37:03.0000] <hsivonen>
yay

[05:38:00.0000] <hsivonen>
/me wishes Java had goto

[05:38:01.0000] <gsnedders|work>
And the manual page for goto has http://xkcd.com/292/ on it

[05:38:02.0000] <ment>
hsivonen: the doctype parser states are jump-forward only (given that in one state you can have small loop on != or ==), so yes

[05:39:00.0000] <gsnedders|work>
(The original PHP tokenizer used methods, but the function call overhead made that stupidly slow0

[05:39:01.0000] <ment>
hsivonen: replacing switch with goto? the compiler reorders your code anyway. have you even tried to profile it?

[05:39:02.0000] <gsnedders|work>
ment: You still have to go through all the options in the switch each time

[05:40:00.0000] <hsivonen>
ment: I haven't profiled switch vs. goto

[05:40:01.0000] <hsivonen>
ment: I don't see why goto would be slower than switch, though. dunno if it's going to be a win.

[05:40:02.0000] <ment>
gsnedders|work: have you ever heard of things like jump tables? or binary trees?

[05:41:00.0000] <gsnedders|work>
ment: Yes, but I would still expect goto to be quicker

[05:41:01.0000] <gsnedders|work>
(Though perhaps the difference is almost irrelevantly small)

[05:45:00.0000] <ment>
gsnedders|work: for(;;) switch (state) { case STATE_A: ...; state = STATE_B; break; case STATE_B: ...; } would have the break compiled as goto anyway

[05:46:00.0000] <hsivonen>
ment: goto to STATE_B? which compiler?

[05:47:00.0000] <ment>
hsivonen: gcc

[05:47:01.0000] <hsivonen>
ment: cool.

[05:47:02.0000] <gsnedders|work>
/me doesn't remember seeing that before

[05:47:03.0000] <Philip`>
I guess you have to be careful not to do anything (like read the next character) outside the switch for that to work

[05:47:04.0000] <hsivonen>
/me should disassemble gcc output some time

[05:47:05.0000] <Philip`>
but that doesn't seem too hard

[05:50:00.0000] <ment>
you could define a macro and use it instead of break: #define NEXT(st) state = st; c = getc(); break

[05:53:00.0000] <ment>
or better #define NEXT(st) c=getc(); state = st; break

[05:53:01.0000] <hsivonen>
/me has trouble seeing how hiding break; inside a macro is any more righteous than goto.

[05:54:00.0000] <jcranmer>
it isn't, IMHO

[05:59:00.0000] <zcorpan_>
does audio/ogg; codecs=1 mean Ogg container with PCM audio?

[06:01:00.0000] <ment>
btw, what does "fragment case" exactly mean?

[06:01:01.0000] <hsivonen>
ment: innerHTML

[06:01:02.0000] <ment>
ah, this thing. thanks

[06:02:00.0000] <gsnedders|work>
(It also applies to some things like HTML fragments in Atom)

[06:03:00.0000] <hsivonen>
and createContextualFragment

[06:03:01.0000] <gsnedders|work>
And numerous other beautiful parts of the web arch

[06:04:00.0000] <hsivonen>
/me wonders if there's any sane way to report line numbers in document.written content

[06:05:00.0000] <hsivonen>
hmm. is it Oct 30th yet? http://www.w3.org/2005/Incubator/app-backplane/XGR-app-backplane-20091030/

[06:06:00.0000] <Dashiva>
Is it LC yet?

[06:06:01.0000] <annevk2>
hsivonen, might be the pubdate

[06:06:02.0000] <annevk2>
sometimes editor's drafts are a bit ahead of time

[06:06:03.0000] <hsivonen>
annevk2: ah. right. it's not under TR

[06:07:00.0000] <hsivonen>
/me wonders what "X" in "XG" means except that X is always cool

[06:08:00.0000] <zcorpan_>
extensible group?

[06:08:01.0000] <ment>
btw is there any list of html5 elements together with their flags (like IS_SCOPING, IS_FORMATTING, etc.)?

[06:09:00.0000] <Dashiva>
The X means 'incubator'

[06:09:01.0000] <hsivonen>
ment: http://hg.mozilla.org/mozilla-central/file/57e42052ea96/parser/html/nsHtml5ElementName.cpp

[06:10:00.0000] <gsnedders|work>
ment: Look in the stack of opoen elmenets]

[06:10:01.0000] <gsnedders|work>
(just spelt correctly)

[06:11:00.0000] <Dashiva>
Maybe IG was taken by interest group, so they decided to pick another letter

[06:11:01.0000] <ment>
gsnedders|work: phrasing category seems to be defined negatively

[06:12:00.0000] <gsnedders|work>
ment: Well, it's impossible to define it otherwise

[06:13:00.0000] <gsnedders|work>
ment: As it has to cover an infinite number of elements

[06:13:01.0000] <ment>
gsnedders|work: what do you mean? i thought that the set of html5 elements (not in foreign content) is finite

[06:14:00.0000] <gsnedders|work>
ment: <acompletelyfakeelement> is a phrasing element for the parser

[06:14:01.0000] <gsnedders|work>
ment: There's an infinite number of HTML elements that are non-conforming

[06:15:00.0000] <ment>
gsnedders|work: oh, so in html5 i could create new elements on the fly?

[06:15:01.0000] <gsnedders|work>
ment: No, it's non-conforming, but the parser defines how to parse any byte-stream

[06:16:00.0000] <ment>
gsnedders|work: i see your point. but that's quite a good idea!

[06:16:01.0000] <gsnedders|work>
ment: Everyone making up their own elements a good idea?

[06:17:00.0000] <gsnedders|work>
ment: Shouldn't they go to standards organizations to specify them?

[06:18:00.0000] <Philip`>
gsnedders|work: Not if they put colons in the names

[06:19:00.0000] <ment>
gsnedders|work: if they don't have any special meaning, why not?

[06:19:01.0000] <gsnedders|work>
Philip`: Oh yeah, right

[06:19:02.0000] <gsnedders|work>
ment: What do you gain by having your own elements?

[06:19:03.0000] <Philip`>
ment: We might want to give them special meaning in the future

[06:21:00.0000] <zcorpan_>
Philip`: we can solve that with namespaces!

[06:21:01.0000] <zcorpan_>
or versioning

[06:21:02.0000] <ment>
gsnedders|work: for example, i could build a new languages on html5

[06:21:03.0000] <jgraham>
ment: What's wrong with class?

[06:21:04.0000] <gsnedders|work>
ment: Why?

[06:21:05.0000] <zcorpan_>
or both

[06:21:06.0000] <jgraham>
zcorpan_: Versioned namespaces?

[06:22:00.0000] <ment>
Philip`: for example, reserve all element names with name shorter than 6 characters

[06:22:01.0000] <hsivonen>
it's interesting how namespace proponents ignore the situation we had with the XHTML2 WG and the HTML WG using the same namespace

[06:22:02.0000] <Philip`>
jgraham: Namespaced versions

[06:22:03.0000] <hsivonen>
and that issue had a social solution--not a technical solution

[06:22:04.0000] <gsnedders|work>
Philip`: of namespaces?

[06:22:05.0000] <TabAtkins>
ment: unknown elements have *no* semantics.  They're <div>s to any user agent, which means they're horrible for accessibility.

[06:23:00.0000] <hsivonen>
TabAtkins: it's safer to talk about <span>s to avoid giving any wrong ideas about behavior

[06:23:01.0000] <ment>
jgraham: i don't know. i just plugged my own tags and attributes in the parser.

[06:23:02.0000] <TabAtkins>
As well, as noted, it pollutes the language with private extensions that may not be well-thought out, and may prevent us from using appropriate names in the future.

[06:23:03.0000] <jgraham>
Philip`: Nah, we should have syntax like using:xmlns="http://some/long/uri/version/2" so that we can change the namespace processing of documents in the future

[06:23:04.0000] <ment>
TabAtkins: because ajax web site is so much more accessible for blind user

[06:23:05.0000] <TabAtkins>
hsivonen: True, and actually they act more like a <span> anyway.

[06:23:06.0000] <gsnedders|work>
ment: Unless they're standardized, they bring no advantage to anyone over data-* attributes for example

[06:23:07.0000] <gsnedders|work>
ment: It is entirely possible for them to be accessible

[06:23:08.0000] <jgraham>
ment: (I should note that there is a certain amount of sarcasm going around)

[06:24:00.0000] <gsnedders|work>
jgraham: Or maybe a URI as the namespace in curly brackets with an ISO 8601:2004 date following it?

[06:24:01.0000] <TabAtkins>
Also, we really shouldn't be going out of our way to make sites less accessible.  Rather the opposite, if possible.

[06:25:00.0000] <DrEvil>
what about i-hate-blind-people.com ?

[06:25:01.0000] <jgraham>
ment: I still don't understand why you want private extensions beyond what is already possible

[06:25:02.0000] <jgraham>
I see why browser vendoes might but as noted on the mailing list, inventing elements doesn't work in that case (even with namespaces)

[06:26:00.0000] <ment>
jgraham: i just think it's nice thing to have parser and tokenizer capable of working with non-standardized tags just like any other <div> (for example for future extensions)

[06:26:01.0000] <ment>
jgraham: or any other purpose

[06:26:02.0000] <jgraham>
ment: They can. It's just that you shouldn't create extensions using element names except as part of the HTML standard

[06:27:00.0000] <TabAtkins>
Indeed, the parser definitely needs to be *able* to handle unknown elements, exactly for extending the language - we don't want a repeat of FF2 or IE6/7's unknown tag handling.

[06:27:01.0000] <gsnedders|work>
But IE6 is awesome.

[06:27:02.0000] <TabAtkins>
But extending the language element-wise is *not* something we want to enable for everyone, precisely because it's a *bad* extensibility mechanism.

[06:27:03.0000] <TabAtkins>
gsnedders|work: You're right, I should apologize.

[06:28:00.0000] <TabAtkins>
IE6 leaves me in awe, I just won't say of what.

[06:28:01.0000] <gsnedders|work>
The smell of it reminds of when I went to antique stores as a kid.

[06:29:00.0000] <TabAtkins>
Heh, I like your quit message.

[06:29:01.0000] <gsnedders|work>
/me wonders what it is

[06:29:02.0000] <gsnedders|work>
Oh, that

[06:41:00.0000] <Philip`>
Floating-point is irritating

[06:41:01.0000] <Philip`>
I think what's currently in the spec is still slightly impossible to implement correctly

[06:43:00.0000] <Philip`>
because of numbers like 1.000000000000000111022302462516

[06:43:01.0000] <Philip`>
which could be indefinitely long

[06:48:00.0000] <Philip`>
Oh, hmm, Firefox doesn't implement what ECMAScript seemingly requires

[06:48:01.0000] <Philip`>
(for parsing floats in JS)

[06:56:00.0000] <Philip`>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/293

[06:57:00.0000] <ment>
/me desperately needs modern text browser

[06:57:01.0000] <Philip`>
Firefox, Safari and Opera on Windows give one output

[06:57:02.0000] <Philip`>
IE on Windows gives a second output

[06:57:03.0000] <Philip`>
Opera on Linux gives a third

[06:59:00.0000] <Philip`>
(Firefox on Linux gives the first output)

[06:59:01.0000] <Philip`>
I suppose it's alright to expect the first output, then

[07:00:00.0000] <Philip`>
which I think is what the HTML5 text expects

[07:00:01.0000] <Philip`>
so that's okay

[07:01:00.0000] <zcorpan_>
on mac my browsers give 2.220446049250313e-16 for the first four and 0 for the last two

[07:06:00.0000] <Philip`>
zcorpan_: That matches the first outputs I got

[07:06:01.0000] <Philip`>
so it's just IE and Opera-on-Linux that differ

[07:09:00.0000] <Philip`>
I think only IE matches what ECMAScript requires

[07:09:01.0000] <Philip`>
(It returns one 2.2etc and then all 0s)

[07:11:00.0000] <Philip`>
Hmm, I think Opera matches what ES requires too

[07:11:01.0000] <Philip`>
on Linux

[07:11:02.0000] <Philip`>
(though it's a different output to IE)

[07:16:00.0000] <DrEvil>
if I used a data URI to embed a jpeg or pdf file in my page

[07:16:01.0000] <DrEvil>
can a user still get the normal save as/download dialogue?

[07:18:00.0000] <Philip`>
DrEvil: It should act the same as any normal JPEG or PDF that doesn't use funny HTTP headers

[07:19:00.0000] <Philip`>
(i.e. you can't use content-disposition to force a dialog box)

[07:21:00.0000] <zcorpan_>
but you can use data:application/octet-stream;base64,... which will probably bring up the save as dialog

[07:21:01.0000] <DrEvil>
oooh snazzy

[07:21:02.0000] <DrEvil>
so we can actually have any XHR'd data presented for download to users

[07:21:03.0000] <DrEvil>
that would immense.

[07:21:04.0000] <DrEvil>
be^

[07:24:00.0000] <Philip`>
Oh, I think I was interpreting ES as being stricter than it is

[07:24:01.0000] <Philip`>
and actually all browsers are acceptable given its requirements

[07:25:00.0000] <zcorpan_>
Philip`: are there other outputs that are acceptable too?

[07:25:01.0000] <Philip`>
zcorpan_: ES says to truncate after 20 significant digits, and then optionally add 1 to the 20th digit

[07:26:00.0000] <Philip`>
and it doesn't say you have to choose the same option all the time

[07:26:01.0000] <Philip`>
so it's acceptable to examine an unlimited number of digits before deciding whether to move the 20th digit up or not

[07:26:02.0000] <Philip`>
(which is what most implementations do)

[07:30:00.0000] <Philip`>
(IE ignores digits after the 20th, Opera on Linux ignores digits after the 21st, if I'm not mistaken)

[07:33:00.0000] <zcorpan_>
has anyone written tests for the new script parsing?

[07:37:00.0000] <gsnedders|work>
I'd quite like them for html5lib soon, FWIW

[07:38:00.0000] <TabAtkins>
Seriously, why are we talking about @longdesc?  The discussion was over a long time ago - of the tiny fraction of pages that use it, almost all of them use it incorrectly, and screenreaders tend to ignore the attribute because of this.

[07:39:00.0000] <Philip`>
TabAtkins: We're talking about it because someone submitted a change proposal, and if nobody submits a counter-proposal then it will get accepted by default

[07:40:00.0000] <TabAtkins>
Philip`: Ok.  Then let's just make the counterproposal and stop talking about it.  It's just spam.

[07:40:01.0000] <Philip`>
TabAtkins: Indeed

[07:42:00.0000] <Philip`>
Seems like the counter-proposal needs to be a summary of all the arguments against longdesc from the past many years

[07:42:01.0000] <Philip`>
though I suppose it should be called "rationale" rather than "arguments"

[07:44:00.0000] <zcorpan_>
gsnedders|work: have you started writing tests?

[07:44:01.0000] <gsnedders|work>
zcorpan_: No

[07:44:02.0000] <gsnedders|work>
zcorpan_: If nobody else has by the time I finish implementing it, I will

[07:44:03.0000] <zcorpan_>
can we run html5lib tests in opera these days?

[07:45:00.0000] <gsnedders|work>
zcorpan_: We already do

[07:45:01.0000] <zcorpan_>
ok so where should i get cracking?

[07:45:02.0000] <gsnedders|work>
/me can't remember where he has them though

[07:46:00.0000] <gsnedders|work>
Somewhere on gsnedders.html5.org

[07:46:01.0000] <TabAtkins>
Well, since I picked up the project to document why features exist, and haven't done anything about it yet, I suppose I could do so.  Documenting why features *don't* exist is about as useful in some cases.

[07:48:00.0000] <gsnedders|work>
I guess we need to do something about contentModelFlags.test and escapeFlag.test now

[07:48:01.0000] <gsnedders|work>
And probably need to add some way to start the tokenizer in a specific state

[07:48:02.0000] <gsnedders|work>
(As otherwise the tokenizer tests could never test the script data states)

[07:56:00.0000] <zcorpan_>
/me clones html5lib

[08:35:00.0000] <zcorpan_>
hmm, it's a bad idea to drink coffee, sneeze and have your macbook on the lap at the same time

[08:38:00.0000] <jgraham>
zcorpan_: Assiming your computer isn't currently giving you an electric shock, what does the test you just changed now expect? Two adjacent text nodes?

[08:39:00.0000] <zcorpan_>
jgraham: yes

[08:39:01.0000] <jgraham>
Hmm, I thought that didn't happen

[08:39:02.0000] <zcorpan_>
happens when there's a token in between

[08:40:00.0000] <zcorpan_>
it was changed in the spec at some point

[08:40:01.0000] <jgraham>
/me wonders if html5lib can deal with that

[08:42:00.0000] <Philip`>
It should be changed so it can :-)

[08:42:01.0000] <Philip`>
and also so it doesn't have O(n^2) behaviour in any text-concatenation cases, hopefully

[08:42:02.0000] <ment>
btw is there any html5lib for C?

[08:43:00.0000] <jgraham>
ment: Nothing that actually works

[08:43:01.0000] <jgraham>
I keep starting writing bits of it and then get bored quite quickly

[08:43:02.0000] <gsnedders|work>
jgraham: You only append a char to a text node if the text node was the last node added to the document

[08:43:03.0000] <Philip`>
There's hubbub, I think

[08:44:00.0000] <jgraham>
Oh yes, there is a C implementation

[08:44:01.0000] <Philip`>
http://www.netsurf-browser.org/projects/hubbub/

[08:44:02.0000] <jgraham>
But not a html5lib (tm)

[08:44:03.0000] <jgraham>
Note: not a real trademark

[08:44:04.0000] <Philip`>
jgraham: What makes an HTML5 implementation a html5lib (tm)?

[08:44:05.0000] <Philip`>
s//parser/

[08:44:06.0000] <jgraham>
Philip`: It is in the html5lib repository

[08:45:00.0000] <jgraham>
(as far as I'm concerned the Pyhton implementation is the only true html5lib; the ruby one was but it died)

[08:45:01.0000] <Philip`>
In these days of decentralised VCSs, what is "the ... repository"?

[08:46:00.0000] <jgraham>
Philip`: On code.google.com

[08:46:01.0000] <ment>
i think i'll name my library 5libhtml or lib5html

[08:46:02.0000] <gsnedders|work>
jgraham: So PHP is a just an illusion?

[08:46:03.0000] <ment>
jgraham: yes, it is boring, because the standard isn't machine readable :)

[08:46:04.0000] <gsnedders|work>
Probably the best way, though

[08:47:00.0000] <Philip`>
ment: My machine can easily the spec and display its words to me

[08:47:01.0000] <Philip`>
*read the spec

[08:47:02.0000] <gsnedders|work>
/me notes it wasn't reading the spec that was what bored jgraham

[08:49:00.0000] <Philip`>
If nothing changed since I last checked, it should be possible for html5lib-in-Python to avoid ever concatenating strings multiple times (which can be very slow)

[08:49:01.0000] <Philip`>
but as far as I'm aware it doesn't avoid that

[08:49:02.0000] <Philip`>
so someone should fix that :-)

[08:50:00.0000] <gsnedders|work>
My work on the tokenizer does that a fair bit

[08:50:01.0000] <gsnedders|work>
But mainly for temporaryBuffer

[08:50:02.0000] <gsnedders|work>
Though I guess we could have that as a list

[08:50:03.0000] <Philip`>
(The idea was that you'd keep a list of text nodes to be inserted, instead of inserting immediately, and when you insert any other node you first concatenate and flush that list and then carry on)

[08:51:00.0000] <Philip`>
(I hope that's what the spec allows)

[08:51:01.0000] <ment>
text nodes ought to be coalesced together? ie. "text</ignoredendtag>text" => "texttext" ?

[08:53:00.0000] <Philip`>
ment: http://whatwg.org/html5#insert-a-character

[08:54:00.0000] <Philip`>
i.e. yes

[08:54:01.0000] <Philip`>
in your particular example

[08:59:00.0000] <gsnedders|work>
zcorpan_: May I, however, point out that every TC you change delays the release of html5lib 0.12 :P

[09:01:00.0000] <zcorpan_>
gsnedders|work: i was just changing that tc to make sure that i could commit properly

[09:01:01.0000] <Philip`>
gsnedders|work: You need a release branch

[09:01:02.0000] <zcorpan_>
gsnedders|work: my objective is to create new tests for script parsing

[09:02:00.0000] <Philip`>
on which you can ignore non-obvious bugs such as spec mismatches

[09:07:00.0000] <jgraham>
Philip`, gsnedders|work I think we should do that at WHATWG LC and aim to make 0.12 as correct per the LC draft as possible

[09:07:01.0000] <jgraham>
Then we should call it 1.0 or something

[09:08:00.0000] <jgraham>
gsnedders|work: Can't hear a word you're saying

[09:08:01.0000] <zcorpan_>
is there a policy i should adhere to before pushing a new set of tests?

[09:08:02.0000] <jgraham>
zcorpan_: Like what?

[09:08:03.0000] <gsnedders|work>
jgraham: Ah, is this this "selective hearing" thing? :P

[09:08:04.0000] <zcorpan_>
dunno, like trying to run the tests or something

[09:08:05.0000] <jgraham>
gsnedders|work: No more good headphones

[09:08:06.0000] <gsnedders|work>
jgraham: So we should release 0.12, and then call it 1.0?

[09:08:07.0000] <jgraham>
+ extra commas

[09:08:08.0000] <gsnedders|work>
jgraham: But you could hear I was speaking

[09:09:00.0000] <gsnedders|work>
jgraham: Your headphones blatantly aren't good enough

[09:09:01.0000] <jgraham>
zcorpan_: You should check that you didn't cause any regressions. But if you only changed tests you can't really

[09:10:00.0000] <jgraham>
I guess in an ideal world you would ping html5lib-discuss about new tests that the current code fails

[09:10:01.0000] <jgraham>
But that never happens

[09:11:00.0000] <zcorpan_>
/me has now pushed some untested work in progress tests for script

[09:12:00.0000] <zcorpan_>
feel free to fix any bugs :)

[09:12:01.0000] <gsnedders|work>
zcorpan_: Can't I just nag you?

[09:13:00.0000] <gsnedders|work>
zcorpan_: What's the diff between line 109 and 121?

[09:13:01.0000] <gsnedders|work>
zcorpan_: and 192 and 204

[09:13:02.0000] <zcorpan_>
a trailing space if i'm guessing correctly which lines you're talking about

[09:16:00.0000] <gsnedders|work>
Ah

[09:50:00.0000] <gsnedders|work>
jgraham: Spotify working for you?

[09:50:01.0000] <jgraham>
gsnedders|work: No

[09:50:02.0000] <Rik`>
gsnedders|work: it just restarted here and not working since

[09:51:00.0000] <gsnedders|work>
/me has it offline, but still has the rest of the track he's on in buffer

[09:51:01.0000] <jgraham>
This is what happens when I decide to pay for it :(

[09:51:02.0000] <gsnedders|work>
(which is rather nice, being a 17 min long track)

[09:51:03.0000] <gsnedders|work>
Oh, and now it's just come back

[10:03:00.0000] <Philip`>
Someone ought to stop me from filing bugs that would make HTML5 harder to read

[10:03:01.0000] <Philip`>
(like http://www.w3.org/Bugs/Public/show_bug.cgi?id=8087)

[10:37:00.0000] <ment>
in which state starts fragment parser?

[10:37:01.0000] <gsnedders|work>
ment: That depends

[10:37:02.0000] <gsnedders|work>
ment: see http://www.whatwg.org/specs/web-apps/current-work/#html-fragment-parsing-algorithm

[10:38:00.0000] <ment>
i see, thanks

[12:47:00.0000] <Hixie>
wtf is johab

[12:48:00.0000] <Philip`>
http://unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/KSC/JOHAB.TXT

[12:48:01.0000] <Philip`>
/me shrugs

[12:48:02.0000] <Philip`>
All I know is that it appears to exist

[12:49:00.0000] <Hixie>
man, jshin has been at this a while

[12:51:00.0000] <Hixie>
it appears to be KS C-5601-1992

[12:52:00.0000] <Hixie>
hah, Wikipedia is explicitly missing 1361

[12:53:00.0000] <Hixie>
apparently KS C 5601 is now KS X 1001

[12:53:01.0000] <Hixie>
oh no wait

[12:53:02.0000] <Hixie>
that's the character set

[12:53:03.0000] <Hixie>
not the encoding

[12:54:00.0000] <Hixie>
but the encoding is listed in KS X 1001 annex 3

[12:55:00.0000] <Philip`>
http://unicode.org/mail-arch/unicode-ml/Archives-Old/UML011/0205.html - "Johab should NOT be considered as included in KS C 5601-1992"

[12:56:00.0000] <Philip`>
/me knows nothing about this, except that iconv supports an encoding under the name "johab", and is quite happy not knowing any more :-)

[12:57:00.0000] <Hixie>
i was quite happy not knowing that much!

[12:57:01.0000] <Hixie>
now i am less happy :-P

[13:03:00.0000] <Hixie>
Philip`: your no-c-end is wrong

[13:03:01.0000] <Hixie>
Philip`: because it doesn't allow a string ending in "-"

[13:04:00.0000] <gsnedders>
/me wonders whether he should bother going to uni

[13:04:01.0000] <Hixie>
i suppose we could add  [ %x2d [ %x2d ] ]  at the end of it

[13:04:02.0000] <Hixie>
gsnedders: i would encourage it, personally. e.g. it is orders of magnitude harder to get hired by google if you don't have at _least_ an undergrad degree

[13:06:00.0000] <gsnedders>
Hixie: I may end up doing something that wouldn't help me get hired by Google anyway :P

[13:06:01.0000] <TabAtkins>
gsnedders: I'd recommend going for the same reason.  It's not as necessary in the States as I understand it to be in the UK, but still, very helpful.

[13:06:02.0000] <Hixie>
gsnedders: how so?

[13:07:00.0000] <gsnedders>
Hixie: How beneficial is English Language and Linguistics to getting hired by Google?

[13:07:01.0000] <Hixie>
gsnedders: significantly more than Physics

[13:07:02.0000] <Hixie>
gsnedders: we have a whole linguistics team

[13:07:03.0000] <gsnedders>
Hixie: And you were trying to convince me to do physics before :P

[13:07:04.0000] <Hixie>
gsnedders: but the subject matter doesn't matter half as much as the fact that you got a degree

[13:07:05.0000] <jcranmer>
not surprising

[13:08:00.0000] <jcranmer>
since, after all, Google is first and foremost a search engine

[13:08:01.0000] <Hixie>
i was trying to convince you to do something broadly useful, not something specific to getting hired by google :-)

[13:09:00.0000] <jcranmer>
hmm, I keep forgetting that we're supposed to leave our sense of logic by the door

[13:09:01.0000] <gsnedders>
Applying for uni would in general be easier if: a) I had decent exam results from my last year of school; b) I had a clue about what subject to apply for; c) Where to apply; d) Whether I really want to go to uni.

[13:10:00.0000] <jcranmer>
I suspect I could have gotten a job without uni, but it tends to be harder to do so

[13:10:01.0000] <jcranmer>
treat uni as 3 or 4 years of laying back

[13:11:00.0000] <inimino>
and getting into debt ;-)

[13:11:01.0000] <jcranmer>
not in my case

[13:12:00.0000] <jcranmer>
3 years + parents who have fiscal sanity

[13:12:01.0000] <hsivonen>
so according to engadget, android 2.0 adds html5 support

[13:12:02.0000] <hsivonen>
does it mean canvas and h.264 <video> or something else?

[13:13:00.0000] <otherarun>
gsnedders, or you could write a great work of literature, and forgo all this "job" tomfoolery.

[13:14:00.0000] <Philip`>
Hixie: Oh, good point

[13:14:01.0000] <gsnedders>
Gah. decisions that have some vague effect on your future!

[13:14:02.0000] <otherarun>
*sigh these days there's no specificity in the term "HTML5 support."

[13:14:03.0000] <otherarun>
It's become a marketing catchphrase.

[13:15:00.0000] <Hixie>
Philip`: it gets way more complicated for the script case

[13:16:00.0000] <Philip`>
Hixie: The script case seems alright since it's not invalid ABNF

[13:16:01.0000] <Philip`>
or at least relatively alright

[13:16:02.0000] <erlehmann>
inimino, i live in a state without horrendous study debts. berlin ;)

[13:16:03.0000] <Philip`>
(though it's kind of cheating to use ABNF and then stick big lumps of prose in it)

[13:16:04.0000] <roc>
otherarun: this actually works to our advantage in the end, I think

[13:17:00.0000] <gsnedders>
In Scotland you can still expect to spend around £30k in total over the course of uni, primarily just on living

[13:17:01.0000] <inimino>
erlehmann: yes, a lot of it depends on where you live (and on your grades/test scores)

[13:17:02.0000] <Hixie>
otherarun: did you get my e-mail re thursday?

[13:18:00.0000] <jcranmer>
I estimate my total university cost at around $100K

[13:18:01.0000] <gsnedders>
That just seems completely ridiculous.

[13:18:02.0000] <erlehmann>
inimino, in most german states, studying is essentially free of charge

[13:19:00.0000] <otherarun>
roc, yeah, the W3C developer thing that brendan, fantasai and I are talking at has attracted lots of folks intrigued by HTML5.  maybe you're right.

[13:19:01.0000] <otherarun>
Hixie, yep got it.  responding now-ish....

[13:19:02.0000] <jcranmer>
hey, it's an out-of-state school

[13:19:03.0000] <Hixie>
otherarun: k

[13:20:00.0000] <gsnedders>
jcranmer: Going to anywhere in the UK would cost me around 30k GBP, going to somewhere in Sweden would cost me around the same…

[13:20:01.0000] <Philip`>
/me had something like £12K of student loans and spent a bit less than that over three years, if he remembers correctly

[13:20:02.0000] <erlehmann>
gsnedders: come to germany, we have hackers here :3

[13:21:00.0000] <gsnedders>
Philip`: So £9k on tutition fees, and £1k/year on living :P

[13:21:01.0000] <gsnedders>
erlehmann: That means learning German :P

[13:22:00.0000] <erlehmann>
gsnedders it isnt so hart. listen and repeat: JAWOHL HAUPTKOMMISSAR SCHWEINEHUND

[13:22:01.0000] <erlehmann>
ZU BEFEHL FEUER SAUERKRAUT

[13:22:02.0000] <Philip`>
gsnedders: Tuition fees were only added in my last year

[13:22:03.0000] <gsnedders>
Philip`: Silly English.

[13:23:00.0000] <gsnedders>
erlehmann: Hey, I'm going to Berlin for Christmas. I'm learning, dammit!

[13:23:01.0000] <Philip`>
The only German I learnt and remembered is from Wolfenstein 3D

[13:23:02.0000] <erlehmann>
gsnedders, you are attending 26c3 ? are you with the kaminsky crowd ?

[13:23:03.0000] <Dashiva>
What about Indiana Jones?

[13:24:00.0000] <gsnedders>
erlehmann: wah?

[13:25:00.0000] <gsnedders>
erlehmann: (judging by the fact I've never heard of either, no)

[13:25:01.0000] <erlehmann>
gsnedders: 26C3 is the 26th chaos communication congress, 3 to 4 days between christmas and sylvester. several thousand attendees, also international (hey, i unexpectedly ran into bre pettis there)

[13:25:02.0000] <erlehmann>
go there, it is awesome

[13:25:03.0000] <gsnedders>
erlehmann: Looking it up, I could only go to the first day

[13:26:00.0000] <gsnedders>
(I leave for my parent's on the 28th)

[13:27:00.0000] <erlehmann>
then go there for a day

[13:27:01.0000] <erlehmann>
its the most awesome event to attend in that timeframe

[13:27:02.0000] <gsnedders>
erlehmann: I'm unlikely to have the time

[13:27:03.0000] <gsnedders>
Also, I should probably finally get around to having supper

[13:28:00.0000] <erlehmann>
sad thing.

[13:29:00.0000] <gsnedders>
/me turns oven on, and realizes he has to wait

[13:30:00.0000] <gsnedders>
/me was blatantly spoiled growing up with his parents with an Aga and not having to wait

[13:30:01.0000] <Hixie>
mmm agas

[13:30:02.0000] <Hixie>
i wish they had those here

[13:31:00.0000] <erlehmann>
what is an „aga“?

[13:31:01.0000] <gsnedders>
erlehmann: http://en.wikipedia.org/wiki/AGA_cooker

[13:31:02.0000] <Philip`>
Is it like a microwave?

[13:31:03.0000] <Philip`>
You don't have to wait for those

[13:33:00.0000] <Hixie>
you'll wait forever if you wait for them to cook the food properly

[13:33:01.0000] <erlehmann>
Philip`, it seems to be an expensive, energy-hungry cooking artifact from 80 years ago.

[13:34:00.0000] <gsnedders>
/me guesses the one at his parent's house is around 30 years old

[13:35:00.0000] <Hixie>
it's usually used as a replacement or supplement for the house hot water or radiator heating, so it turns out not to be more wasteful than most systems

[13:35:01.0000] <Hixie>
though it's certainly not what one would call "Efficient"

[13:36:00.0000] <gsnedders>
When you're dealing with an Edwardian house where heat seeps out through the walls and windows like there's no tomorrow, keeping one room at a reasonable temperature is a challenge in and of itself

[13:37:00.0000] <gsnedders>
(And keeping a room at a sane temp. basically means having a gas fire on continuously 24/7 over the winter)

[13:38:00.0000] <gsnedders>
(As even if you turn it off overnight, you then spend the first 10 hours of the day getting the room up to any temp. where you can bear to be in it)

[13:38:01.0000] <Hixie>
or, one could use something known as "insulation"

[13:38:02.0000] <Hixie>
but don't feel bad, californians don't know what that is either

[13:38:03.0000] <gsnedders>
Hixie: You can't really do much about the outside walls of the house

[13:38:04.0000] <gsnedders>
Hixie: (at least without significant structural changes, which with a listed building…)

[13:38:05.0000] <Hixie>
this isn't my area of expertise, but i'd be surprised if there was really nothing one could do

[13:39:00.0000] <TabAtkins>
You just tear out the drywall and stuff insulation in there, then put it back.  (Though your houses may not be built to work like that...)

[13:39:01.0000] <gsnedders>
TabAtkins: Edwardian houses don't have Drywall in general :)

[13:39:02.0000] <Hixie>
hey so good news everyone!

[13:39:03.0000] <Hixie>
i'm at 0,1,0 again

[13:39:04.0000] <TabAtkins>
Woo!

[13:40:00.0000] <TabAtkins>
gsnedders: Then your houses are built wrong.  ^_^

[13:40:01.0000] <gsnedders>
TabAtkins: No, not really. You have brick walls with plaster directly applied to the,

[13:41:00.0000] <TabAtkins>
so the walls themselves are brick?

[13:41:01.0000] <gsnedders>
TabAtkins: Yes

[13:41:02.0000] <gsnedders>
A hundred years ago, if you wanted a wall in house, you used bricks.

[13:42:00.0000] <TabAtkins>
Interesting.  I've only ever seen brick used as a facade.  Still, if you don't mind losing a few inches off the room dimensions, you could improvise drywall into the room, allowing you to sandwich insulation between the wall layers.

[13:43:00.0000] <gsnedders>
TabAtkins: See: http://en.wikipedia.org/wiki/Listed_building

[13:43:01.0000] <Philip`>
Oops, I failed to notice that cp1361 == johab

[13:44:00.0000] <Philip`>
or forgot from when I last looked at it

[13:44:01.0000] <TabAtkins>
Ah, that sort of mod probably would count as being against code, then.

[13:44:02.0000] <mpilgrim>
gsnedders, jgraham: which html5 outliner should i point people to?

[13:44:03.0000] <gsnedders>
mpilgrim: Mine, his is out of date

[13:45:00.0000] <Philip`>
Why are approximately none of the rationale comments getting through to public-html-bugzilla?

[13:45:01.0000] <gsnedders>
TabAtkins: Esp. when it is listed because it has almost all original fittings

[13:45:02.0000] <mpilgrim>
ok, thanks

[13:45:03.0000] <gsnedders>
TabAtkins: And when there's a lot of fine-wood around the walls in places…

[13:51:00.0000] <gsnedders>
jgraham: Where can you buy tissues here? I've not seen anywhere selling them anywhere…

[13:55:00.0000] <ment>
what for are the attributes in closing tags? </b xxx=zz> ?

[13:55:01.0000] <Hixie>
nothing

[13:55:02.0000] <Philip`>
Hmph, it takes more effort to close bugs than to file them

[13:59:00.0000] <Hixie>
hah

[13:59:01.0000] <Philip`>
Also it's hard to find which bugs are mine

[13:59:02.0000] <Hixie>
even with the IP address?

[13:59:03.0000] <Philip`>
because I have dozens of different IP addresses

[14:00:00.0000] <Philip`>
I use at least three different internet connections each day, none of which have static IPs

[14:06:00.0000] <jgraham>
gsnedders: Apoteket for sure. also I think the supermarket

[14:07:00.0000] <Philip`>
Hmm, I think I got them all now

[14:07:01.0000] <Philip`>
and only had to reopen one

[14:07:02.0000] <Dashiva>
gsnedders: Normal food stores have them

[14:09:00.0000] <Hixie>
Philip`: good times

[14:10:00.0000] <ment>
script-data-double-escaped-dash-dash-state ... what the fuck

[14:11:00.0000] <gsnedders>
jgraham: hmm, I didn't see any when I looked (albeit very briefly before)

[14:12:00.0000] <Dashiva>
They're well hidden

[14:12:01.0000] <Dashiva>
Sometimes there's just a single type and a single brand

[14:14:00.0000] <jgraham>
gsnedders: BTW you are really making oo big a deal out of this whole university thing. You should just pick something

[14:14:01.0000] <jgraham>
It doesn't matter what so much

[14:14:02.0000] <jgraham>
or where

[14:14:03.0000] <jgraham>
(wihin reasonable limits in both cases)

[14:15:00.0000] <jgraham>
(i.e. it has to be something you expect to enjoy somewhere you can bear to live and aren't embarassedto graduate from)

[14:15:01.0000] <jgraham>
You can't make a prefect objective decision because all the necessary facts aren't there

[14:20:00.0000] <JonathanNeal>
is the source code for outliner available?

[14:22:00.0000] <Hixie>
Philip`: yt?

[14:23:00.0000] <Hixie>
Philip`: is there a version of your multipage script that takes an argument for which index file to process and an argument for where to post the results?

[14:23:01.0000] <Hixie>
Philip`: or alternatively, can you mail me the multipage version of http://www.whatwg.org/specs/web-apps/2009-10-27/ ?

[14:23:02.0000] <Philip`>
Hixie: There's not an online version that does that, only the offline Python script

[14:24:00.0000] <Philip`>
/me could do that in an hour or so

[14:24:01.0000] <Hixie>
cool, thanks

[14:25:00.0000] <Philip`>
/me should make sure the sections are sensibly split, too

[14:26:00.0000] <ment>
i know i will be probably banned for this statement, but the author (or team of authors) who created html5 tokenizer (the latest version) deserves to get an inoperable tumor at the base of his spine

[14:26:01.0000] <Hixie>
ment: :-(

[14:28:00.0000] <ment>
now i have to either retype 300KB worth of DFA state machine or draw several pages of diagrams to figure out all the hidden exceptions of latest tokenizer

[14:29:00.0000] <Hixie>
ment: anything in particular that can make it sier for you? i think the changes actually made the parser simpler, not more complex (though it has more states)

[14:29:01.0000] <Hixie>
(the changes were necessary to be compatible with legacy content)

[14:31:00.0000] <jgraham>
JonathanNeal: There is an ouliner as part of anolis which I think is the basis for gsnedders online one

[14:31:01.0000] <jgraham>
look at hg.gsnedders.org or so

[14:31:02.0000] <gsnedders>
s/org/com/

[14:31:03.0000] <ment>
Hixie: well if i ever finish the diagrams, i will show you simpler way to describe automatons like this

[14:32:00.0000] <Hixie>
ment: that'd be great

[14:32:01.0000] <jgraham>
/me finds the current spec reaonably simple to understand

[14:32:02.0000] <jgraham>
*reasonably

[14:33:00.0000] <JonathanNeal>
This is great, thanks jgraham and gsnedders

[14:33:01.0000] <jgraham>
(certianly not so complex that I am wishing painful death on Hixie)

[14:34:00.0000] <gsnedders>
So you just do that for different reasons?

[14:35:00.0000] <Hixie>
ok, anyone have any reason i shouldn't hit "submit" on this blog post?

[14:35:01.0000] <gsnedders>
Because the button is labelled, "Publish"

[14:35:02.0000] <Hixie>
btw i only created a static copy of the html5 spec, not the complete, vocabs, and workers specs

[14:35:03.0000] <Hixie>
because that takes way the hell too long per spec

[14:35:04.0000] <Hixie>
and it's not clear to me what the benefit is

[14:35:05.0000] <Hixie>
gsnedders: good reason, any others? :-)

[14:36:00.0000] <jgraham>
Hixie: No

[14:36:01.0000] <Hixie>
ok i have scheduled it for 21:55, which i guess is in about 10 minutes

[14:36:02.0000] <Philip`>
Because there's no multipage version yet and so you'll crash people's browsers when they look at it? :-)

[14:38:00.0000] <Hixie>
the blog post just links to the current-work/ spec: http://blog.whatwg.org/html5-at-last-call

[14:38:01.0000] <Hixie>
actually it links to current-work/multipage/

[14:41:00.0000] <Philip`>
/me tries multipaging it now

[14:43:00.0000] <Hixie>
4 minutes to go!

[14:43:01.0000] <mpilgrim>
future-posts are evil

[14:44:00.0000] <mpilgrim>
i tweeted it and then realized that the link is 404 for anyone not logged into blog.whatwg.org

[14:44:01.0000] <gsnedders>
The past and the future are only illusions, there is only now.

[14:44:02.0000] <erlehmann>
quick, mpilgrim, submit it to slashdot, so subscribers can see posts IN THE FUTURE

[14:44:03.0000] <Hixie>
mpilgrim: hah

[14:44:04.0000] <Hixie>
/me advances the publication time!

[14:44:05.0000] <mpilgrim>
no no, i don't want to be responsible for html5 going to last call before it's ready!

[14:45:00.0000] <Hixie>
we're live baby!

[14:45:01.0000] <erlehmann>
Hixie, you need an additional status code, akin to 410 gone. 4xx - Not There Yet for stuff reserved for future use ;)

[14:46:00.0000] <Hixie>
erlehmann: heh

[14:46:01.0000] <Hixie>
erlehmann: i'm sure that exists in some HTTP extension somewhere

[14:47:00.0000] <Dashiva>
erlehmann: Just set up a chain of "see other" redirects that goes on until the resource comes into existence

[14:48:00.0000] <mpilgrim>
damn, someone replied to my tweet saying the link was 404

[14:48:01.0000] <erlehmann>
Dashiva, browsers will stop if there are dozens of redirect

[14:48:02.0000] <erlehmann>
s

[14:48:03.0000] <mpilgrim>
damn the real-time web!

[14:49:00.0000] <mpilgrim>
seriously though, this is a historic moment

[14:49:01.0000] <jgraham>
Hixie: Might have been good o mention that the HTMLWG don't consider the spec in LC yet

[14:49:02.0000] <mpilgrim>
i'm just glad i was here to help fuck it up

[14:49:03.0000] <Dashiva>
erlehmann: Okay, make it only one redirect, but it hangs (or writes junk headers) until the location exists

[14:49:04.0000] <gsnedders>
Hmm, free shipping on deviantart today

[14:50:00.0000] <Philip`>
Hixie: http://philip.html5.org/misc/multipage-web-apps-2009-10-27.tar.gz might be it

[14:50:01.0000] <gsnedders>
jgraham: Also, what's the whole deal with recieving large packages in the post here?

[14:51:00.0000] <Hixie>
jgraham: i figured if i qualified it as "at the WHATWG" each time, that'd be clear enough. I don't want to sound like I'm saying "neener neener" or something like that.

[14:51:01.0000] <Hixie>
our relations are strained enough as it is

[14:51:02.0000] <Philip`>
Dashiva: Why redirect? Just let the server hold onto the HTTP session forever, until the response is ready

[14:52:00.0000] <Philip`>
Dashiva: (sending an "X-Ping: .........." header with a new byte every few seconds to stop it timing out)

[14:52:01.0000] <Dashiva>
I imagined a dedicated server handling these long connections

[14:52:02.0000] <TabAtkins>
gsnedders: Man, wish I had some money to order a few prints, then.

[14:52:03.0000] <Dashiva>
So the real content doesn't have to worry

[14:52:04.0000] <jgraham>
gsnedders: They end up at the postofice usually

[14:52:05.0000] <jgraham>
Well at the place on Nygatan

[14:53:00.0000] <gsnedders>
jgraham: The one parallel to Vasa vagen?

[14:53:01.0000] <jgraham>
Hixie: I think the current text could be construed as misleading

[14:53:02.0000] <gsnedders>
TabAtkins: I wish I could find what I thought I had saved as a favourite before :(

[14:53:03.0000] <jgraham>
gsnedders: Er not sure. Maybe I am wrong abou the name of the stree

[14:54:00.0000] <TabAtkins>
gsnedders: Yeah, that's often the problem.  The site's too big!  o_O

[14:54:01.0000] <gsnedders>
jgraham: Well, where?

[14:54:02.0000] <jgraham>
gsnedders: Near Hemkop

[14:54:03.0000] <jgraham>
(the one near St Lars)

[14:55:00.0000] <gsnedders>
Where there?

[14:55:01.0000] <erlehmann>
i hope moot implements some audio / video (don't they have a flash board?)

[14:55:02.0000] <jgraham>
gsnedders: In the spel + tobac (sp?)

[14:55:03.0000] <jgraham>
you get a note through the door

[14:56:00.0000] <jgraham>
(I guess it might end up in a different place for you)

[14:56:01.0000] <erlehmann>
i predict YTMND will be the most obnoxious HTML5 page in the next decade

[14:56:02.0000] <gsnedders>
From where I know where places are, I don't think we live far enough apart for there to really be any difference

[14:56:03.0000] <Hixie>
jgraham: ok, updated

[14:56:04.0000] <Hixie>
jgraham: (added a note at the bottom)

[14:57:00.0000] <mpilgrim>
just put a note that says "it's all over but the screaming"

[14:57:01.0000] <gsnedders>
TabAtkins: And now I keep finding things that aren't available as prints. gah.

[14:57:02.0000] <othermaciej>
Hixie: I have a question about bug hygiene

[14:57:03.0000] <Hixie>
othermaciej: yes sir

[14:57:04.0000] <othermaciej>
Hixie: you resolved a couple of my bugs in a way that completely addresses the original problem, but introduces what I think is a new, totally different problem

[14:58:00.0000] <othermaciej>
Hixie: should I reopen the bugs or file new ones?

[14:58:01.0000] <TabAtkins>
gsnedders: I just don't understand creators that don't make everything print-availabl.  It's silly.

[14:58:02.0000] <Hixie>
othermaciej: either is fine by me, i'd recommend asking the chairs for their advice but that's you :-P

[14:58:03.0000] <gsnedders>
/me would really like http://pyromaniac.deviantart.com/art/Saving-all-my-words-24031392 as a print

[14:58:04.0000] <othermaciej>
Hixie: yeah I wanted to see if you have a preference

[14:58:05.0000] <gsnedders>
/me knows he'll be mocked by jgraham for that

[14:58:06.0000] <Hixie>
othermaciej: i think generally new bugs is better, but in practice it makes little difference

[14:59:00.0000] <othermaciej>
to be specific the problem is that HTMLCollection subclasses now violate the Liskov Substitution Principle

[14:59:01.0000] <othermaciej>
I'll file a new bug

[15:00:00.0000] <Dashiva>
That sounds serious

[15:00:01.0000] <mpilgrim>
ok, i looked that up on wikipedia and now i'm even more confused

[15:00:02.0000] <Philip`>
gsnedders: Surely it'd be better to get something less depressing

[15:00:03.0000] <Hixie>
othermaciej: i don't see how changing the type would change that

[15:00:04.0000] <mpilgrim>
it's probably my fault for dropping out of CS and pursuing a philosophy degree

[15:01:00.0000] <mpilgrim>
but could someone explain the liskov substitution principle without using any greek letters?

[15:01:01.0000] <Hixie>
othermaciej: regardless of what the interface says, the parent interface is always going to return only Element objects, whereas the subclasses can return more

[15:01:02.0000] <othermaciej>
Hixie: LSP is about the contract, not the behavior

[15:01:03.0000] <gsnedders>
/me did the same, it's just he doesn't have a degree at all

[15:01:04.0000] <othermaciej>
Hixie: you can't promise in the base class to return only Element if subclasses might return more general types

[15:01:05.0000] <Hixie>
othermaciej: that seems like a distinction without a difference, as people say

[15:02:00.0000] <Hixie>
othermaciej: we do promise (in prose) to only return Element objects

[15:02:01.0000] <Hixie>
regardless of what the interface says

[15:02:02.0000] <Philip`>
mpilgrim: I think the idea is that whenever you write code based on the requirements/guarantees of class(/interface) A, then you can safely pass it an object of any subclass of A and it won't violate the contract

[15:02:03.0000] <ment>
html5 specs is written by philosophers? :))

[15:02:04.0000] <Hixie>
othermaciej: and regardless of what the interface says, you can always screw around with the prototype and have any object return anything for anything

[15:02:05.0000] <othermaciej>
Hixie: the way it's a practical problem is that you can't generate interfaces for any statically typed language from the WebIDL as currently written (including Java and Objective-C)

[15:02:06.0000] <gsnedders>
Philip`: That really isn't very dark

[15:02:07.0000] <Hixie>
ah, that's a more interesting problem

[15:03:00.0000] <Philip`>
(e.g. a subclass might override a method to return a subtype of the original type, but can't return a supertype)

[15:03:01.0000] <gsnedders>
Philip`: Maybe my perception of such things is a bit off, though

[15:03:02.0000] <Hixie>
othermaciej: file that as the bug :-)

[15:03:03.0000] <othermaciej>
Hixie: doing so

[15:03:04.0000] <mpilgrim>
Philip`: thanks, that makes sense

[15:04:00.0000] <Philip`>
gsnedders: It's all blacks and greys and crying. You should get something like http://veganya.deviantart.com/art/Pony-41998085 which has nice colours and happy animals

[15:05:00.0000] <gsnedders>
Philip`: Not available as a print, sorry

[15:05:01.0000] <mpilgrim>
for the benefit of people reading this discussion later, i recommend http://c2.com/cgi/wiki?LiskovSubstitutionPrinciple instead of the wikipedia article

[15:05:02.0000] <jgraham>
gsnedders: Also the artist seems to see himself as a short man with an enormous red penis hanging from his forhead

[15:06:00.0000] <othermaciej>
Hixie: http://www.w3.org/Bugs/Public/show_bug.cgi?id=8092

[15:06:01.0000] <Hixie>
othermaciej: thanks

[15:07:00.0000] <ment>
speaking of deviantart, does anybody know why it has <keeper for="Smoothie.thumbs"></keeper><smoothie q="special:dd" qx="1"...> tags in body or what they are good for?

[15:07:01.0000] <Philip`>
/me notes that he doesn't remember hearing of the LSP in his CS degree at all

[15:08:00.0000] <othermaciej>
Philip`: I had Barbara Liskov for a professor

[15:08:01.0000] <othermaciej>
(though she didn't bring up the principle by that name in class)

[15:08:02.0000] <Philip`>
I didn't :-(

[15:09:00.0000] <gsnedders>
Why is it that the majority of "People" prints on deviantART are either half-naked or completely-naked?

[15:09:01.0000] <jgraham>
/me thinks that constrining subtypes to always have the same behaviour as supertypes sounds rather limiting

[15:09:02.0000] <othermaciej>
the rule isn't that they have to have "the same" behavior

[15:10:00.0000] <othermaciej>
just that if a caller follows the contract, a subtype will respect the contract

[15:10:01.0000] <othermaciej>
HTMLVideoElement doesn't have the same behavior as HTMLElement, but all HTMLElement methods do what is guaranteed by contract

[15:10:02.0000] <jgraham>
Hmm, the c2.com wiki says "What is wanted here is something like the following substitution property: If for each object o1 of type S there is an object o2 of type T such that for all programs P defined in terms of T, the behavior of P is unchanged when o1 is substituted for o2 then S is a subtype of T."

[15:10:03.0000] <Dashiva>
Apparently you have to be logged in to buy the naked prints :P

[15:11:00.0000] <gsnedders>
Thankfully, I'm logged in :P

[15:13:00.0000] <Philip`>
jgraham: I don't believe that's the same as the definition I usually associated with the term

[15:13:01.0000] <jgraham>
othermaciej: But you could check if an element had a play method, for example and that would be a program that didn't run unchanged when a HTMLVideoElement was passed in instead of a HTMLElement

[15:13:02.0000] <othermaciej>
the idea is if you have a only reference to the base type, any code you write that works with that interface and follows its side of the contract should remain correct, if you actually pass it an object that's an instance of a subtype

[15:13:03.0000] <Philip`>
*usually see associated

[15:13:04.0000] <othermaciej>
that's true - but lacking a "play" method is not part of HTMLElement's contract

[15:14:00.0000] <jgraham>
So how do you tell which parts are contract and which parts are not?

[15:14:01.0000] <Philip`>
The static type information is part of the contract

[15:14:02.0000] <Philip`>
i.e. the types in the IDL

[15:14:03.0000] <Dashiva>
The interfaces only promise existence, not non-existence

[15:15:00.0000] <Philip`>
and then I guess anything else is typically in comments

[15:15:01.0000] <Philip`>
(or, rather, typically not stated at all, but if was anywhere it'd probably be in comments)

[15:15:02.0000] <jgraham>
It isn't obvious to me why existence is more important than non existance

[15:16:00.0000] <jgraham>
(or why types are more important than other things)

[15:16:01.0000] <gsnedders>
/me wishes he could find what he was looking for

[15:17:00.0000] <gsnedders>
"But I still haven't found what I'm looking for"

[15:17:01.0000] <Dashiva>
Try looking in the last place 

[15:17:02.0000] <othermaciej>
I don't think there's a question of important or not - just what is or isn't promised

[15:17:03.0000] <othermaciej>
Web IDL is a contract - it guarantees that if you have an instance of a certain interface, the methods and properties have the stated type signatures

[15:17:04.0000] <othermaciej>
it doesn't promise that an object lacks other interfaces

[15:18:00.0000] <othermaciej>
it does promise that an object also implements the inherited interfaces

[15:18:01.0000] <Philip`>
Existence is important because typically you'll write code that acts on objects, and you know the interface of the objects, and you want to be sure that if you call some method with arguments that follow certain requirements (like types) it'll return something that follows certain requirements (like types), else you've got no hope of writing working code

[15:18:02.0000] <jgraham>
gsnedders: I wouldn't worry. U2 didn't manage that and they have still been quite successful

[15:18:03.0000] <jgraham>
Oh you said that

[15:18:04.0000] <jgraham>
don't mind me

[15:18:05.0000] <Philip`>
and you'll rarely write code that assumes you'll get an exception if you call a certain method that wasn't defined

[15:19:00.0000] <Philip`>
(especially in statically-typed languages where you'd get a compile error)

[15:19:01.0000] <Dashiva>
Unless it's a method throwing NotImplementedException

[15:19:02.0000] <jgraham>
It seems like a reasonable strategy in non-static languages though

[15:20:00.0000] <Philip`>
Non-static languages are weird and crazy and you've got no hope of writing working code

[15:21:00.0000] <Philip`>
At least with Web IDL you can work under the impresion that you've got a proper class-based language

[15:22:00.0000] <jgraham>
(also LSP seems like it should want to say something about duck typing since that is about interfaces if not subtypes. But in practice it is quite common for similar types to not fully replace each other, and the world doesn't collapse)

[15:22:01.0000] <othermaciej>
I really shouldn't have cited LSP for my issue anyway

[15:23:00.0000] <othermaciej>
since in this case the subtyping fails on a syntactic / type signature level, not just a semantic level

[15:23:01.0000] <Philip`>
Hixie: Did you see the multipage thing I mentioned here earlier?

[15:23:02.0000] <jgraham>
/me is not meaning to suggest that LSP is not useful or anything, just to try and understand it better

[15:23:03.0000] <othermaciej>
Liskov's original statement was something like "Let q(x) be a property provable about objects x of type T. Then q(y) should be true for objects y of type S where S is a subtype of T."

[15:23:04.0000] <Philip`>
/me is wondering since the URL still redirects to current-work/multipage

[15:24:00.0000] <othermaciej>
so then it depends on what "provable property" means

[15:24:01.0000] <othermaciej>
which depends on how T is defined

[15:24:02.0000] <othermaciej>
if T is defined in terms of some sort of contract, then everything that can be inferred from that contract is a "provable property"

[15:24:03.0000] <Hixie>
Philip`: i had not, but got it now, thanks. downloading...

[15:25:00.0000] <othermaciej>
so going back to the HTMLElement interface, it's a provable property that any HTML element has a click() method with no arguments and void return type

[15:26:00.0000] <othermaciej>
it's not a provable property that an HTMLElement *lacks* a play() method

[15:27:00.0000] <othermaciej>
but anyway a contravariant return type is a violation of more basic notions of subtyping than LSP

[15:55:00.0000] <GPHemsley>
Hixie: I don't think you ever replied to the <cite> proposal.

[15:56:00.0000] <roc>
it's Liskov-WING substitution, please

[15:57:00.0000] <roc>
poor Jeannette

[15:57:01.0000] <doublec>
she has to suffer like the 'et al' in the design patterns authors :)

[15:58:00.0000] <Philip`>
Al coauthored an awful lot of books

[15:58:01.0000] <Philip`>
roc: That makes it sound less like a science-fiction name

[16:01:00.0000] <roc>
actually, since Ms Wing is a preternaturally youthful martial-arts badass, she adds to the sci-fi cachet

[16:04:00.0000] <doublec>
it's a wonder it wasn't named the 'wing substitution principle' then

[16:05:00.0000] <roc>
come into the office, I'll tell you some stories

[16:07:00.0000] <doublec>
hehe, hopefully soon

[16:07:01.0000] <doublec>
my landlord is giving me free furniture

[16:13:00.0000] <ment>
ok, i have a question: parser is in script data state, on the input is '<!-- </script> --> </script>'

[16:13:01.0000] <ment>
s/parser/tokenizer/

[16:14:00.0000] <ment>
after which </script> will the tokenizer switch to non-script state?

[16:15:00.0000] <ment>
(for example, data state)

[16:15:01.0000] <gsnedders>
ment: the second

[16:15:02.0000] <ment>
nope, the first (if i haven't missed something)

[16:17:00.0000] <gsnedders>
hmm, that appears to be right, and that surely has to be a bug

[16:18:00.0000] <ment>
i can draw you a diagram how it looks like now

[16:22:00.0000] <gsnedders>
Oh, no, it is right, I think

[16:22:01.0000] <ment>
http://ibawizard.net/~thement/sds.png

[16:25:00.0000] <ment>
what does it behave like that? it makes no sense

[16:27:00.0000] <gsnedders>
ment: Legacy content.

[16:27:01.0000] <gsnedders>
(and not wanting to reparse)

[16:39:00.0000] <aboodman>
let's wait one round

[16:44:00.0000] <Hixie>
GPHemsley: which one? there were hundreds over the years :-)

[16:49:00.0000] <Lachy>
Hixie, are you aware that the new complete copy of the spec here hangs in Minefield? http://www.whatwg.org/specs/web-apps/current-work/complete.html

[16:50:00.0000] <Lachy>
which browser can actually handle loading it?

[16:50:01.0000] <Hixie>
works fine in safari nightlies and chrome nightlies last i tried

[16:51:00.0000] <Hixie>
/me tries firefox

[16:51:01.0000] <Hixie>
works fine for me on a firefox nightly with html5.enable

[16:52:00.0000] <Hixie>
and in opera 10.something

[16:52:01.0000] <Hixie>
oh, wait, firefox is hanging now

[16:52:02.0000] <Hixie>
is one of the scripts doing bad things in firefox?

[16:52:03.0000] <othermaciej>
seems to load ok in Safari 

[16:53:00.0000] <Lachy>
yeah, it's working in safari and opera 10

[16:53:01.0000] <Hixie>
bringing up the error console in safari is a bad idea because it tries to show the 5MB DOM

[16:53:02.0000] <othermaciej>
(but I'm also on a really fast network so likely not as much incremental layout was needed)

[16:53:03.0000] <othermaciej>
man we so need a datagrid for the Web Inspector

[16:53:04.0000] <Hixie>
scrolling in opera is painful

[16:54:00.0000] <JoePeck>
othermaciej: mention it in #webkit-inspector

[16:55:00.0000] <Lachy>
scrolling in opera isn't painful for me

[16:55:01.0000] <Lachy>
but I have Smart Scroll installed on my system, which is probably helping

[16:58:00.0000] <ment>
may i ask you again what's the motivation behind having attributes in closing tags?

[16:58:01.0000] <ment>
like </a href="xxx"/>


2009-10-28
[17:05:00.0000] <Philip`>
ment: There aren't attributes in closing tags

[17:05:01.0000] <ment>
but it's not a parser error either

[17:06:00.0000] <annevk2>
ment, it is

[17:06:01.0000] <Philip`>
The spec pretends end tags have attributes so it doesn't have to define a whole new set of states for parsing end tags, if I remember correctly

[17:06:02.0000] <ment>
DS -> TOS -> CTOS -> TNS -> ... (no error reported along the chain)

[17:06:03.0000] <Philip`>
but they have no effect other than causing a parse error

[17:07:00.0000] <ment>
but when does this error reporting occur?

[17:07:01.0000] <Philip`>
ment: "When an end tag token is emitted with attributes, that is a parse error."

[17:07:02.0000] <Philip`>
(in the tokenizer intro section)

[17:07:03.0000] <ment>
ah, it's hidden in the intro

[17:07:04.0000] <ment>
thanks

[17:08:00.0000] <Philip`>
Indeed, if by "hidden" you mean "visible and explicitly stated in its own paragraph" ;-)

[17:09:00.0000] <Philip`>
/me does find it easy to lose track of indirect requirements, though

[17:23:00.0000] <GPHemsley>
Hixie: The most recent one ;)

[17:24:00.0000] <GPHemsley>
Hixie: http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2009-October/023342.html and its responses

[17:43:00.0000] <Hixie>
GPHemsley: i remember replying to that, but i can't find the reply... looking still...

[17:52:00.0000] <Hixie>
weird

[17:52:01.0000] <Hixie>
i found the e-mail in my sent folder

[17:52:02.0000] <Hixie>
but it never made it to the list

[17:57:00.0000] <Hixie>
GPHemsley: resent it

[17:58:00.0000] <Hixie>
very weird, messages on either side of it made it fine

[18:04:00.0000] <roc>
Lachy: you might want to read the comments here http://weblogs.mozillazine.org/bz/archives/020267.html

[20:10:00.0000] <Hixie>
aw, shelley, you're always a member of the whatwg. Everyone's a member of the whatwg! We're an all-inclusive community of people who disagree with each other. :-)

[20:11:00.0000] <TabAtkins>
So everyone's a member whether they like it or not?  ^_^

[20:12:00.0000] <othermaciej>
you don't want to join a club that would have you as a member?

[20:27:00.0000] <Hixie>
TabAtkins: yup :-P

[20:28:00.0000] <Hixie>
TabAtkins: even people who don't know about the whatwg :-P

[20:28:01.0000] <TabAtkins>
I will inform them!

[20:28:02.0000] <Hixie>
excellent, thanks!

[20:54:00.0000] <GPHemsley>
Hixie: So are you saying that the <cite> element actually has an implied name of <worktitle>?

[21:04:00.0000] <The_Madcapper>
Could someone please point me to the Javascript channel?  :)  Is the channel name just "javascript" or is it something special?

[21:12:00.0000] <GPHemsley>
Also, is the WHATWG so named for the plausible deniability? ("What working group? I don't know what you're talking about.")

[21:29:00.0000] <Hixie>
GPHemsley: no implied name, but the meaning of the element in html5 is basically "title of work", yes (as per the spec)

[21:30:00.0000] <GPHemsley>
well, you said that if you had your way it wouldn't be there, and that the name is legacy from HTML4, so figuratively implied, no?

[21:30:01.0000] <GPHemsley>
(i.e. informatively implied)

[21:30:02.0000] <Hixie>
not really sure what you mean by an "implied name"

[21:31:00.0000] <GPHemsley>
implied as in, by "cite", you really mean "worktitle"

[21:32:00.0000] <Hixie>
the meaning of <cite> in html5 is (currently) "title of work", yes

[21:33:00.0000] <GPHemsley>
but apparently only in certain contexts?

[21:33:01.0000] <Hixie>
no?

[21:33:02.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#the-cite-element

[21:33:03.0000] <GPHemsley>
you were giving examples where a title of a work doesn't get <cite>d

[21:34:00.0000] <Hixie>
i was?

[21:34:01.0000] <GPHemsley>
I thought

[21:34:02.0000] <GPHemsley>
hang on

[21:34:03.0000] <Hixie>
sorry, it's been a while since i wrote that e-mail :-)

[21:35:00.0000] <Hixie>
...which still hasn't made it to the archives, wtf

[21:35:01.0000] <Hixie>
oh i see, it went in at the original date

[21:35:02.0000] <Hixie>
how confusing

[21:35:03.0000] <GPHemsley>
oh, maybe you were referring to the old definition

[21:35:04.0000] <GPHemsley>
oh, it was both

[21:35:05.0000] <GPHemsley>
here we go

[21:35:06.0000] <GPHemsley>
:

[21:35:07.0000] <GPHemsley>
> That leaves usages of 'cite' for both titles of works and authors of

[21:35:08.0000] <GPHemsley>
> works. Putting aside the issue of styling for a moment, these two pieces

[21:35:09.0000] <GPHemsley>
> of data both fall under the semantic meaning of 'cite'.

[21:35:10.0000] <GPHemsley>
No, not at all. Consider:

[21:35:11.0000] <GPHemsley>
  <p>I met Ian today. He was carrying The New Hacker's Dictionary.</p>

[21:35:12.0000] <GPHemsley>
This contains no citation, but it contains both the name of an author and

[21:36:00.0000] <GPHemsley>
the title of a work.

[21:36:01.0000] <GPHemsley>
/me just realized that "semantic meaning" is rather redundant

[21:37:00.0000] <Hixie>
per html5, you can label the title in that paragraph with a <cite>.

[21:37:01.0000] <GPHemsley>
right

[21:37:02.0000] <GPHemsley>
and I agree that you should

[21:37:03.0000] <Hixie>
but it's not a citation

[21:38:00.0000] <GPHemsley>
true

[21:39:00.0000] <GPHemsley>
but, and this is perhaps confusing, in the context of my argument, I was (I think) putting aside the issue of "a citation" and just addressing "what can be cited"

[21:40:00.0000] <GPHemsley>
"sing it as a verb, the

[21:40:01.0000] <GPHemsley>
definition of 'cite' applies to quotes/quotations, titles, and people,

[21:40:02.0000] <GPHemsley>
depending on the context."

[21:40:03.0000] <GPHemsley>
+U

[22:22:00.0000] <GPHemsley>
Hixie: Is there an updated timeline beyond the FAQ, given today's Last Call?

[22:23:00.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/TIMETABLE is the only timeline so far

[22:24:00.0000] <GPHemsley>
oh, so, everything's on schedule then?

[22:24:01.0000] <Hixie>
at least in the WHATWG!

[22:24:02.0000] <GPHemsley>
heh

[22:24:03.0000] <Hixie>
The W3C's timetable... not so much

[22:25:00.0000] <GPHemsley>
I'm leaving the WHATWG as the definitive source for HTML5 ;)

[22:25:01.0000] <GPHemsley>
is it conceivable that work on HTML6 will begin before REC for HTML5?

[22:27:00.0000] <GPHemsley>
Also, what's the plan for the test suite(s)?

[22:27:01.0000] <GPHemsley>
in terms of contributing, etc.

[22:43:00.0000] <mpilgrim>
http://diveintohtml5.org/semantics.html

[22:43:01.0000] <mpilgrim>
please stop changing the semantics now

[22:44:00.0000] <othermaciej>
ah, almost standards mode

[22:52:00.0000] <zcorpan_>
ok now i've written a bunch of tests for script parsing and the other r|cdata elements

[22:54:00.0000] <zcorpan_>
http://code.google.com/p/html5lib/source/browse/testdata/tree-construction/tests16.dat

[22:54:01.0000] <zcorpan_>
hope they're correct

[22:57:00.0000] <Hixie>
GPHemsley: very conceivable

[22:58:00.0000] <Hixie>
GPHemsley: no plan really yet... if you want to be in charge of the test suite, it's definitely something that needs doing :-)

[22:58:01.0000] <GPHemsley>
Hixie: Is there a scratchpad for what might be in HTML6?

[22:58:02.0000] <GPHemsley>
Hixie: Heh. That seems like quite a task to take on.

[22:59:00.0000] <erlehmann>
zcorpan_, reading that, all these <!--<script --> cases seem pretty counterintuitive

[22:59:01.0000] <erlehmann>
:(

[22:59:02.0000] <Hixie>
GPHemsley: search for "v2" in the source

[22:59:03.0000] <Hixie>
erlehmann: yeah no kidding

[23:00:00.0000] <erlehmann>
hmm, if there is a line break between <!-- and <script> or <style>, is it okay then?

[23:00:01.0000] <GPHemsley>
Hixie: Someone should make a script that scrapes them out. :)

[23:01:00.0000] <erlehmann>
or doesn't that affect parsing at all?

[23:01:01.0000] <GPHemsley>
/me runs and hides

[23:01:02.0000] <GPHemsley>
alright, I think it's time for bed

[23:02:00.0000] <Hixie>
nn

[23:02:01.0000] <GPHemsley>
g'night/g'morning :P

[23:02:02.0000] <Hixie>
erlehmann: hm?

[23:07:00.0000] <zcorpan_>
erlehmann: doesn't affect parsing

[23:08:00.0000] <erlehmann>
i see. thank you.

[23:15:00.0000] <zcorpan_>
mpilgrim: there are an infinite number of doctypes that trigger standards mode

[23:17:00.0000] <othermaciej>
so what's the stylistically preferred way to write the HTML5 doctype in a document?

[23:18:00.0000] <othermaciej>
I always write <!DOCTYPE html> but maybe all-lowercase would be more elegant

[23:18:01.0000] <zcorpan_>
i prefer <!doctype html> because i don't like holding down shift

[23:19:00.0000] <othermaciej>
the WHATWG copy of the HTML5 spec has it as <!DOCTYPE html>

[23:20:00.0000] <othermaciej>
google's homepage does <!doctype html>

[23:24:00.0000] <othermaciej>
I <3 Professor Markup

[23:26:00.0000] <MikeSmith>
zcorpan_: any opinion about http://bugzilla.validator.nu/show_bug.cgi?id=488 (add obsolete attributes to assertions checking)

[23:26:01.0000] <JoePeck>
othermaciej: probably lowercase, since it might benefit from gzipping html tags that are lowercase

[23:27:00.0000] <erlehmann>
othermaciej, i bet if you ask hixie he will say that its okay to be inconsistent in examples, to show what is possible ;)

[23:27:01.0000] <JoePeck>
erlehmann: that is so true =)

[23:27:02.0000] <othermaciej>
erlehmann: I'm thinking about good style for documents that I write for purposes other than markup pedagogy

[23:27:03.0000] <MikeSmith>
zcorpan_: I seem to remember having a discussion about that with you, that you reckoned it would be good to explicitly report about obsolete attributes

[23:28:00.0000] <othermaciej>
I like to use good style if I can

[23:28:01.0000] <erlehmann>
othree_, all lowercase. uppercase tags are sooooo 1997

[23:30:00.0000] <zcorpan_>
MikeSmith: yeah, i think it would be nice

[23:36:00.0000] <Hixie>
personally i prefer <!DOCTYPE HTML>

[23:38:00.0000] <Hixie>
MikeSmith: we're going to have to start giving everyone who comments or files on bugs the rights to reopen the bugs, because i've gotten very close to missing bugs because the commentor couldn't reopen it

[23:39:00.0000] <MikeSmith>
Hixie: OK

[23:40:00.0000] <Hixie>
( http://www.reddit.com/r/programming/comments/9yejl/whats_the_biggest_programming_mistake_youve_ever/c0f13p2 )

[23:42:00.0000] <MikeSmith>
zcorpan_: OK, I will try to get it added today

[23:42:01.0000] <zcorpan_>
MikeSmith: cool

[23:51:00.0000] <othermaciej>
mpilgrim__: IE's DOM s even weirder than what you say - I think it also makes an empty element with a tag name of "/article"

[23:57:00.0000] <zcorpan_>
mpilgrim__: "To ease migration to and from XHTML, authors may specify an attribute in no namespace with no prefix and with the literal localname "xml:lang" on <html> elements" - should be "HTML elements"

[00:33:00.0000] <hsivonen>
Spotify sure self-updates often. I wonder what the Web would be like if people got new browsers as often.

[00:35:00.0000] <erlehmann>
we'll see

[00:54:00.0000] <zcorpan_>
mpilgrim__: the first article example probably ought to set display:block

[00:57:00.0000] <MikeSmith>
hsivonen: I think you might consider setting default heapSize for v.nu to 128

[00:59:00.0000] <hsivonen>
MikeSmith: ok

[01:00:00.0000] <MikeSmith>
hsivonen: at least in the case of qa-dev, I can't run v.nu on that machine at all unless I feed it heap=128

[01:00:01.0000] <jgraham>
hsivonen: I thought spotify just self-updated to make it harder to hack somehow, not for major functionaility chnages

[01:00:02.0000] <hsivonen>
jgraham: oh.

[01:01:00.0000] <hsivonen>
jgraham: recently it has added the ability to download playlists for offline use

[01:01:01.0000] <hsivonen>
jgraham: and it has added a category for "Purchased" (no idea how to purchase)

[01:01:02.0000] <hsivonen>
dunno what the update this morning was about

[01:02:00.0000] <hsivonen>
if it's just for DRM, that sucks

[01:02:01.0000] <hsivonen>
can't one already "hack" spotify by using the paid-account-only Open Source Linux client?

[01:03:00.0000] <hsivonen>
or is "hacking" not about DRM of the content but about using the system without ads *and* without paying?

[01:03:01.0000] <hsivonen>
MikeSmith: fixed

[01:04:00.0000] <MikeSmith>
thanks

[01:05:00.0000] <zcorpan_>
mpilgrim__: "and everything else on the page will stay where it is in the document outline." is not true if you're using implied sections too

[01:05:01.0000] <MikeSmith>
http://qa-dev.w3.org:8888/?doc=http://dev.w3.org/html5/tests/validation/full/invalid/obsolete/longdesc.html

[01:05:02.0000] <MikeSmith>
zcorpan_, hsivonen : ↑

[01:05:03.0000] <MikeSmith>
ideally, we want only one error message for obsolete attributes, right? (not two)

[01:06:00.0000] <hsivonen>
MikeSmith: yes

[01:06:01.0000] <hsivonen>
is longdesc obsolete-but-conforming these days?

[01:06:02.0000] <zcorpan_>
no

[01:06:03.0000] <MikeSmith>
right, obsolete and not conforming

[01:07:00.0000] <hsivonen>
but yeah, legacy.rnc should allow it and the obsolete checker should disallow it

[01:07:01.0000] <MikeSmith>
hsivonen: OK, I'll make the changes to legacy.rnc

[01:08:00.0000] <hsivonen>
thanks

[01:08:01.0000] <MikeSmith>
but before I looked back at this today, I hadn't realized how many obsolete-nonconforming attributes there are

[01:09:00.0000] <MikeSmith>
about obsolete-but-conforming vs. obsolete-and-noconforming, I'm wondering what we can say in the error messages to make it more clear

[01:09:01.0000] <MikeSmith>
because the error messages for both cases just say, "The foo element|attribute is obsolete. [Use bar instead.]"

[01:09:02.0000] <Hixie>
/me thinks that's ideal :-)

[01:10:00.0000] <zcorpan_>
/me agrees with Hixie

[01:10:01.0000] <MikeSmith>
OK

[01:11:00.0000] <MikeSmith>
anyway, the UI does clearly indicate that first case is a warning and the second and erro

[01:11:01.0000] <MikeSmith>
*error

[01:12:00.0000] <zcorpan_>
MikeSmith: maybe you could point to or use text from http://wiki.whatwg.org/wiki/Presentational_elements_and_attributes in some messages?

[01:13:00.0000] <hsivonen>
/me finds it odd that Opera has this new-found interest in @longdesc when they could have implemented @aria-describedby in accordance with the WAI Consensus and skipped @longdesc.

[01:13:01.0000] <MikeSmith>
zcorpan_: I guess we could experiment with that at least

[01:15:00.0000] <hsivonen>
grr. A Web site that I wanted to use as a test case is down for maintenance.

[01:15:01.0000] <hsivonen>
people should keep test cases up

[01:16:00.0000] <hsivonen>
speaking of house insulation, I should guess a preference between two hotels in California. I know one of them has bad but bearable insulation and I don't know about the winter characteristics of the other.

[01:18:00.0000] <MikeSmith>
extra blankets

[01:19:00.0000] <MikeSmith>
hsivonen: btw, I still want to get back to trying to implement the datatypes warning mechanism. I have an idea about what to do in the datatype code itself, but I am realizing that I don't understand the error-handling backend well enough yet. For example, I don't know how to get the backend to actually emit a warning for DatatypeException instead of an error.

[01:20:00.0000] <hsivonen>
MikeSmith: I suggest adding an IsWarning() method to Html5DatatypeException

[01:23:00.0000] <hsivonen>
MikeSmith: hmm. the design of MessageEmitterAdapter will make this ugly

[01:23:01.0000] <hsivonen>
totally ugly

[01:23:02.0000] <MikeSmith>
/me goes to take another look

[01:24:00.0000] <hsivonen>
you have a change to do things with Html5DatatypeException a few levels of method calls down from the point where it's decided if it's going to be an error or a warning

[01:24:01.0000] <hsivonen>
s/change/chance/

[01:25:00.0000] <MikeSmith>
OK

[01:27:00.0000] <MikeSmith>
I'm wondering how many cases we might really need this for. So far, I remember it being the messages for grandfathered and redundant language tags that are deprecated

[01:27:01.0000] <MikeSmith>
maybe there's not enough others to make it worthwhile to add this

[01:28:00.0000] <MikeSmith>
but end users would at least lose those two if the change isn't made

[01:28:01.0000] <hsivonen>
MikeSmith: so in the method called message() in MessageEmitterAdaptor, you need to examine the the Expection object and go change the MessageType object if you decide it's going to be downgrade to a Warning

[01:28:02.0000] <hsivonen>
MikeSmith: now that I've figured out what needs to be done, I could write the code while I'm at it

[01:29:00.0000] <MikeSmith>
aha

[01:29:01.0000] <MikeSmith>
well, I can try to in the mean time

[01:29:02.0000] <MikeSmith>
that last thing you said was the one bit of clue I really needed

[01:30:00.0000] <hsivonen>
MikeSmith: ok. that works for me, too.

[01:30:01.0000] <hsivonen>
the check should go as the the first thing in message() even before the if (loggingOk) bit

[01:31:00.0000] <MikeSmith>
OK, right after line 545 you mean, right?

[01:31:01.0000] <hsivonen>
yes

[01:32:00.0000] <MikeSmith>
OK, got it

[01:34:00.0000] <hsivonen>
MikeSmith: I think the right check is that the message gets downgraded to warning if all the Html5DatatypeExceptions wrapped by the main exception are warnings

[01:35:00.0000] <hsivonen>
and all there are no non-Html5 DatatypeExceptions there

[01:35:01.0000] <MikeSmith>
OK

[01:36:00.0000] <hsivonen>
hmm. are there cases where the schema says "" | w:something-that-emits-a-warning

[01:36:01.0000] <hsivonen>
what I just said could be wrong in that case

[01:36:02.0000] <hsivonen>
not sure

[01:36:03.0000] <hsivonen>
doh.

[01:37:00.0000] <hsivonen>
I think you need to try what Jing gives you in that case

[01:37:01.0000] <MikeSmith>
hmm, OK

[01:38:00.0000] <MikeSmith>
I hadn't noticed any of those before

[01:38:01.0000] <MikeSmith>
/me goes to look now

[01:40:00.0000] <nessy>
congrats on "Last Call"!

[01:40:01.0000] <nessy>
I still hope we can get video accessibility into this all before W3C decides to put html5 at last call :-)

[01:41:00.0000] <Hixie>
we have video accessibility already

[01:41:01.0000] <MikeSmith>
hsivonen: hmm, I'm confused by 'there cases where the schema says "" | w:something-that-emits-a-warning'.. can you give me an example?

[01:42:00.0000] <Hixie>
nessy: you mean new features for explicit external subtitles, and the like

[01:42:01.0000] <hsivonen>
MikeSmith: the lang attribute can take string "" or the language tag datatype

[01:43:00.0000] <hsivonen>
MikeSmith: so when you have an obsolete language tag, Jing will fail on both string "" and the language tag datatype but the latter says it's only a warning

[01:43:01.0000] <MikeSmith>
hsivonen: ah, I see now

[01:43:02.0000] <MikeSmith>
yeah

[01:45:00.0000] <hsivonen>
/me doesn't like debugging stuff by sending printfs to a remote machine and waiting for a couple of hours to get the printout back

[01:46:00.0000] <othermaciej>
hsivonen: that doesn't sound fun!

[01:51:00.0000] <hsivonen>
well in the old day, they carries decks of FORTRAN cards to an operator through wind and thick snow to even get a compiler error

[01:51:01.0000] <hsivonen>
*days

[01:53:00.0000] <zcorpan_>
mpilgrim__: shouldn't the <time> be inside <header>?

[02:01:00.0000] <zcorpan_>
mpilgrim__: maybe you should make it clearer that one doesn't have to use h1, and that since software haven't been updated to support the sectioning elements yet, it might be a good idea to continue using lower ranked headings for a while longer

[02:23:00.0000] <hsivonen>
/me tries to figure out a sane way to report line numbers with document.write

[02:24:00.0000] <hsivonen>
presumably, if the whole doc is document.written, the document.writes from outside the document itself should form a coherent succession of line numbers just like the network stream

[02:24:01.0000] <gsnedders|work>
You said that yesterday.

[02:25:00.0000] <hsivonen>
gsnedders|work: still trying

[02:25:01.0000] <hsivonen>
document.write is trouble in so many different ways

[02:26:00.0000] <gsnedders|work>
Could you not just report the line on which the document.write call is?

[02:26:01.0000] <othermaciej>
when I first learned about document.write it totally blew my mind with its craziness

[02:26:02.0000] <othermaciej>
now it seems totally normal to me

[02:26:03.0000] <othermaciej>
I have totally forgotten how weird it is

[02:26:04.0000] <hsivonen>
gsnedders|work: I want the tokenizer and the tree builder not change their behavior

[02:26:05.0000] <hsivonen>
gsnedders|work: so document.written stuff will increment the line number

[02:27:00.0000] <gsnedders|work>
I think when I first came across it I was already familiar enough with the web platform to just think, "Oh, that's kinda screwy. Oh well."

[02:27:01.0000] <hsivonen>
but I need the line number to roll back when the stream reaches a point that was written by an outer script

[02:28:00.0000] <hsivonen>
hmm. I think I'll make the buffer objects that represent the stream have a start line number that can be -1

[02:28:01.0000] <othermaciej>
it's really dismaying that I feel more awake and productive at 2 AM than 2 PM in my local time zone

[02:28:02.0000] <othermaciej>
good night folks

[02:28:03.0000] <hsivonen>
nn

[02:29:00.0000] <hsivonen>
so before document.write inserts to the list of buffers, the current line number well be stored into the the then-first buffer object

[02:29:01.0000] <hsivonen>
and new buffer objects start out with -1

[02:29:02.0000] <hsivonen>
which means don't change the line number

[02:30:00.0000] <hsivonen>
and otherwise when a buffer with a non--1 line number is reached, the line number of the tokenizer is reset to that number

[02:30:01.0000] <hsivonen>
I wonder if that makes sense

[02:31:00.0000] <annevk>
hsivonen, seems you were right after all about the weird pubdate: http://www.w3.org/News/2009.html#entry-8641

[02:32:00.0000] <gsnedders|work>
/me realizes he hasn't actually looked at the new W3C site yet

[02:32:01.0000] <hsivonen>
/me wonders why there needs to be a "standardized architecture and API for XML and HTML interaction formats implemented in Javascript"

[02:32:02.0000] <zcorpan_>
gsnedders|work: you know what's wrong with runner.html?

[02:32:03.0000] <hsivonen>
I guess reading the report would tell me

[02:32:04.0000] <gsnedders|work>
zcorpan_: A lot

[02:32:05.0000] <gsnedders|work>
zcorpan_: wrt to query?

[02:33:00.0000] <zcorpan_>
gsnedders|work: yeah

[02:33:01.0000] <gsnedders|work>
zcorpan_: The query string makes it run only the TC with that sha1 hash of input, and makes all others pass. don't ask. I just needed a simple way to see if one test pass/failed.

[02:33:02.0000] <annevk>
hsivonen, sounds like the story from last year's TPAC

[02:33:03.0000] <gsnedders|work>
zcorpan_: But, please go ahead and make it saner.

[02:34:00.0000] <jgraham>
/me doesn't even understand what an " XML and HTML interaction formats 

[02:34:01.0000] <jgraham>
          implemented in Javascript" is

[02:34:02.0000] <jgraham>
s/formats/format/

[02:35:00.0000] <hsivonen>
annevk: do you mean the story Raman and TimBL talked about during the panel or something else?

[02:35:01.0000] <zcorpan_>
gsnedders|work: i don't understand what sha1 is doing :)

[02:35:02.0000] <AryehGregor>
jgraham, that makes two of us.

[02:37:00.0000] <Philip`>
jgraham: It seems to be about writing JS libraries to implement markup features that browser vendors won't implement

[02:38:00.0000] <Philip`>
like XForms and SMIL

[02:38:01.0000] <jgraham>
SMIL seems like a poor example since it seems to have some traction

[02:39:00.0000] <jgraham>
But anyway... yeah, it is unclear why that demands a standard

[02:40:00.0000] <hsivonen>
jgraham: it doesn't for consumer interop

[02:40:01.0000] <hsivonen>
jgraham: but it could for authoring tool interop

[02:40:02.0000] <hsivonen>
jgraham: or interop of certified backplane engineers

[02:41:00.0000] <annevk>
maybe it was that

[02:42:00.0000] <annevk>
I remember talk about standardized ways to extend browsers with support for new markup languages through JavaScript

[02:42:01.0000] <Philip`>
jgraham: You might use lots of different JS libraries implementing features on the same page, and they might conflict and not work nicely together

[02:43:00.0000] <hsivonen>
annevk: isn't it called XBL2?

[02:43:01.0000] <Philip`>
(http://code.google.com/p/ubiquity/ seems quite relevant)

[02:43:02.0000] <hsivonen>
Philip`: why does Ubiquity XForms need anything to be standardized?

[02:43:03.0000] <hsivonen>
(that isn't already, that is)

[02:45:00.0000] <annevk>
hsivonen, prolly

[02:45:01.0000] <Philip`>
hsivonen: Because people make Ubiquity SMIL and Ubiquity RDFa etc, and the extensions might interact poorly unless they follow certain conventions, and the Ubiquity project tries to tie those ones together but third parties might want to use the same mechanism and need a stable standard

[02:46:00.0000] <Philip`>
I guess

[02:46:01.0000] <Philip`>
having only briefly glanced at the document

[02:46:02.0000] <jgraham>
And then a random piece of javascript might come along and mess up the whole thing anyway so you didn't gain much

[02:47:00.0000] <annevk>
hmm, CSSStyleDeclaration is not really interoperable

[02:47:01.0000] <annevk>
and also somewhat confusing

[02:47:02.0000] <Philip`>
jgraham: It's always easy to make a page stop working - what you gain is the ability to make it first start working without so much pain

[02:48:00.0000] <annevk>
I doubt anyone really sees property priority is separate from property value though it does make some sense I guess

[02:49:00.0000] <jgraham>
Philip`: But it seems much more likely that a user will be using a js-implemented markup extension and some other random javascript code than that they will be using multiple js-markup extensions

[02:49:01.0000] <jgraham>
and it seems much easier to simply test the combination of known markup extensions than test markup extensions + all other code

[02:51:00.0000] <Philip`>
jgraham: Why are users relevant? Authors are in control of what scripted markup extensions are in use on their pages, because they write <script src=ubiquity.js?xforms,smil,rdfa> or whatever

[02:51:01.0000] <Philip`>
and they can choose to only include scripts which work together nicely

[02:52:00.0000] <Philip`>
(and so it's useful making more scripts work together nicely)

[02:55:00.0000] <jgraham>
Philip`: By users I mean "users of the extensions i.e. authors"

[02:58:00.0000] <Lachy>
is there anyone here who knows anything about american cars?  I'm wondering whether a dodge charger would be a reasonable choice for a rental car when we arrive in SF this week

[02:59:00.0000] <Lachy>
we need it to be roomy enough for 3 of us, and powerful

[03:00:00.0000] <jgraham>
/me notes that powerful sounds like a solution not a problem statement, making it harder to evaluate if it actually fits your needs :)

[03:00:01.0000] <jgraham>
/me also has no idea about cars

[03:01:00.0000] <Philip`>
/me notes that powerful sounds more like a desire than a need

[03:02:00.0000] <Dashiva>
It sounds like Lachy is turning into a manager

[03:02:01.0000] <annevk>
he's managing the car part of our trip

[03:02:02.0000] <jgraham>
Oh except that a surprising number of Swedish people are into American classic cars and, possibly relatedly,

[03:03:00.0000] <Lachy>
jgraham, the problem is, we're a group of young hooligans who get their kicks from unnecessarily powerful cars. The solution is to get a powerful car :-)

[03:03:01.0000] <jgraham>
a surprising number of Swedish people can be seen by the side of the road, in the rain, peering at the car engine

[03:04:00.0000] <jgraham>
Lachy: Oh so the problem statement is something like "should be fun to drive"?

[03:04:01.0000] <jgraham>
or rather "we want to have fun driving the car" or so?

[03:04:02.0000] <Dashiva>
Should lead to reckless endangerment of bystanders

[03:05:00.0000] <annevk>
should be fun to drive, potentially slightly rough terrain

[03:05:01.0000] <jgraham>
(the difference is that a truck might well be powerful in the sense of having a big engine but be heavy and steer poorly and be no fun at all)

[03:05:02.0000] <annevk>
should be fun to sit in as well for those without driver's license :)

[03:05:03.0000] <gsnedders|work>
jgraham: Hey, I got all the way to Stockholm and back in a 70s American muscle car, they aren't all bad

[03:10:00.0000] <Lachy>
annevk, the dodge charger has a tv in the back for you

[03:11:00.0000] <annevk>
there we go :)

[03:13:00.0000] <jgraham>
Just remember kids TV +_speed + rough terrain + hangover === hefty cleaning bill

[03:15:00.0000] <annevk>
aka jealous :p

[03:16:00.0000] <gsnedders|work>
/me wonders whether jgraham means "kids TV" or "just remember kids,"

[03:17:00.0000] <jgraham>
I don't think I would need the hangover, the (unusually high) speed or the rough terrain to make me sick watching TV in the back of the car

[03:17:01.0000] <jgraham>
just a few bends in the road

[03:17:02.0000] <jgraham>
(well I probably wouldn't be sick but I would likely feel sick)

[03:18:00.0000] <Lachy>
gsnedders|work, of course he meant kids TV. Cartoon Network, nickelodeon and disney channel rule!

[03:18:01.0000] <jgraham>
/me misses rugrats

[03:19:00.0000] <AryehGregor>
I remember Rugrats.

[03:19:01.0000] <Lachy>
hah. Was just thinking the same :-)

[03:19:02.0000] <gsnedders|work>
Man, Rainbow is where it's at.

[03:19:03.0000] <gsnedders|work>
I mean, they even have a character called Geoffrey!

[03:21:00.0000] <Lachy>
Rainbow?

[03:21:01.0000] <Lachy>
never heard of it

[03:22:00.0000] <Lachy>
/me goes back to watching Cabbage Patch Kids and Care Bears

[03:22:01.0000] <jgraham>
It was a british thing from the 70s or so

[03:23:00.0000] <gsnedders|work>
As far as I can tell, British children's TV was basically the same in the 90s as it was in the late 70s

[03:24:00.0000] <jgraham>
So, is there a good, general, way of duplicating a directory tree without performing unnecessary file copies? Something like copy-on-write for files? I guess that is probably a filesystem dependent thing...

[03:26:00.0000] <Dashiva>
Raid?

[03:28:00.0000] <jgraham>
Not quite what I want

[03:29:00.0000] <AryehGregor>
jgraham, the possibility of a reflink() or copyfile() system call was recently being discussed on lkml.  As far as I know, no OS currently supports copy-on-write on a per-file basis, for some reason.

[03:29:01.0000] <AryehGregor>
It would be an awesome feature.

[03:32:00.0000] <jgraham>
(the problem is that I want to run two instances of a program with different configurations. This is not really easy since it is not possible to change the path to the config file when I launch it so the obvious solution is to make two copies of the whole program)

[03:32:01.0000] <AryehGregor>
You could use hard links.

[03:32:02.0000] <AryehGregor>
cp -rl

[03:32:03.0000] <AryehGregor>
Of course, changes to one side of the directory tree will change the other, if the file is modified in-place.

[03:32:04.0000] <jgraham>
That could maybe work on linux at least

[03:32:05.0000] <jgraham>
Dunno about windows

[03:32:06.0000] <AryehGregor>
But not if it's copied and the copy is rename()d over it, which is usually what's done on Unix.  So a poor man's copy-on-write.

[03:32:07.0000] <AryehGregor>
I think all versions of NT support hard links, or certainly all recent ones.  Definitely Vista, anyway, and I think XP also.

[03:32:08.0000] <AryehGregor>
Of course, you might have to write a script yourself instead of being able to use cp -rl.

[03:34:00.0000] <AryehGregor>
Or use Cygwin.

[03:36:00.0000] <Dashiva>
It was added in vista

[03:39:00.0000] <nessy>
Hixie: subtitles, audio description etc are all regarded as part of "video accessibility" generally - and yes, they would be a new feature to current html5

[03:40:00.0000] <nessy>
(sorry for the late reply :)

[03:40:01.0000] <AryehGregor>
Dashiva, symlink support was added in Vista, but hard link support too?

[03:42:00.0000] <Dashiva>
Hum, maybe my memory is faulty

[03:43:00.0000] <Dashiva>
No, it was in 6.0 according to wikipedia

[03:43:01.0000] <Dashiva>
No

[03:43:02.0000] <Dashiva>
Ah, there's my error. It was a different way to create them before Vista.

[03:43:03.0000] <Dashiva>
Carry on :)

[04:03:00.0000] <Philip`>
jgraham: Use symlinks?

[04:03:01.0000] <Philip`>
(You can't hardlink directories, if I remember correctly)

[04:04:00.0000] <Philip`>
(because it could cause cycles, which would make GC hard)

[04:13:00.0000] <workmad3>
Philip`: correct

[04:21:00.0000] <gsnedders|work>
jgraham: The Apotek in Stora Torget didn't have any tissues, will try Hemköp later

[04:23:00.0000] <Philip`>
SSE naming is confusing - after SSE comes SSE2, and after SSE2 comes SSE3 but Linux calls it PNI, and after that is SSSE3 

[04:26:00.0000] <jgraham>
gsnedders|work: I have bought some from there before

[04:27:00.0000] <jgraham>
The Apoteket

[04:27:01.0000] <jgraham>
too many definitives there

[04:27:02.0000] <gsnedders|work>
/me didn't see any on the shelves there

[04:28:00.0000] <jgraham>
hsivonen: BTW is despotify the open source client you were talking about?

[04:28:01.0000] <jgraham>
/me wonders whether to try that since wine is not so reliable

[04:29:00.0000] <jgraham>
(so if you have tried it it would be good to know)

[04:29:01.0000] <jgraham>
(although the curser interface doesn't seem to friendly)

[04:29:02.0000] <jgraham>
*curses

[04:30:00.0000] <hsivonen>
jgraham: I don't remember the name

[04:41:00.0000] <crash\>
Hixie: congratulations for the Last Call draft ;)

[05:00:00.0000] <hsivonen>
/me expects a bikeshed on the URI identifiers used in microdata vocabs

[05:09:00.0000] <Dashiva>
hsivonen: Good thing microdata is so controversial, it will keep many people out of the shed

[05:10:00.0000] <jgraham>
Don't you have to be outside the shed to paint it?

[05:10:01.0000] <jgraham>
At least I never imagine bikeshedding as people decorating the interior of the bikeshed

[05:11:00.0000] <Dashiva>
The paint color decision meeting is held inside the shed

[05:12:00.0000] <gsnedders|work>
That must be one large shed

[05:12:01.0000] <Philip`>
Won't the people inside the shed die from inhaling paint fumes?

[05:12:02.0000] <Dashiva>
No, because no painting happens until the meeting is done

[05:12:03.0000] <jgraham>
What if someone were to graffitti the shed while the meeting was happening?

[05:13:00.0000] <Philip`>
Dashiva: People might paint patches of the shed during the meeting, to demonstrate what it will look like

[05:13:01.0000] <Dashiva>
Those people should bring gas masks then

[05:14:00.0000] <Philip`>
I suppose they'll die anyway from radiation from the adjacent nuclear power station that was designed and constructed and switched on during their meeting

[05:15:00.0000] <jgraham>
More to the point what if the graffitti is actually a bansky containing an ironic depiction of a dysfunctional beuracracy that immediately makes the shed hugely valuable and thus prevents anyone from painting it at all

[05:16:00.0000] <Dashiva>
Well, when they've invested so much time in deciding the color, they're not going to just stop because of a minor detail like that

[05:17:00.0000] <hsivonen>
wow. gopher: still works in Firefox

[05:17:01.0000] <hsivonen>
but not in Safari

[05:18:00.0000] <gsnedders|work>
Safari never supported it, ever

[05:18:01.0000] <gsnedders|work>
IE7 removed support for Gopher, IIRC

[05:18:02.0000] <hsivonen>
can't test Opera. Opera keeps bouncing in the Dock and the bouncing frequency isn't stable

[05:19:00.0000] <jgraham>
I guess it would be cruel and unfair to draw some analogy between the graffiti artist, the debaters, the WHATWG and the W3C. So I won't do that

[05:25:00.0000] <hsivonen>
aargh. OS X made fork temporarily unavailable even though I don't even have an insane number of processes

[05:27:00.0000] <Dashiva>
jgraham: The graffiti artist is lastweek? :)

[05:44:00.0000] <hsivonen>
The WHATWG HTML5 LC seems to be pretty effective at getting people to reveal their (already known) political alignment on twitter.

[06:05:00.0000] <TabAtkins>
hsivonen: I need to follow more people on twitter.  I've only got a handful of people talking about it.

[06:11:00.0000] <Philip`>
TabAtkins: Just watch http://search.twitter.com/search?q=html5

[06:11:01.0000] <TabAtkins>
Philip`: I prefer http://toriseye.quodis.com/#html5

[06:25:00.0000] <Philip`>
"when RDFa in HTML hits the street, the issues will have been resolved" - except that people are already implementing it in HTML and deploying content in HTML, before anyone even started writing a rough draft of how RDFa ought to work in HTML, and there are still lots of unresolved issues that are getting ignored by people who want to use it now

[06:25:01.0000] <Philip`>
so that doesn't seem great

[06:30:00.0000] <TabAtkins>
I'm resisting posting by distracting myself with stories about the world's military attacking Heaven.

[06:31:00.0000] <Philip`>
Seems implausible

[06:32:00.0000] <Philip`>
The world's military wouldn't just ally like that

[06:33:00.0000] <TabAtkins>
Well, it happens after Hell tries to invade.

[06:34:00.0000] <Philip`>
Hell tries to invade the world, or Heaven?

[06:34:01.0000] <TabAtkins>
The former.

[06:34:02.0000] <Philip`>
So why attack Heaven?

[06:34:03.0000] <hsivonen>
I assume a non-obvious definition of hitting the street.

[06:34:04.0000] <TabAtkins>
Because Hell was allowed to invade by God, who basically said "Fuck off, jerks, Heaven's closed."

[06:35:00.0000] <Philip`>
Oh, okay

[06:37:00.0000] <TabAtkins>
Also, I love that the reason the story was implausible was because the world's military wouldn't ally together, not because they were attacking heaven.

[06:55:00.0000] <Dashiva>
TabAtkins: There's lots of prior art on attacking heaven, none for world unity :P

[06:56:00.0000] <TabAtkins>
Dashiva: Really?  I didn't know there was much about crashing tanks into the pearly gates.

[06:57:00.0000] <Dashiva>
Well, the specific armaments vary

[06:57:01.0000] <hsivonen>
hmm. how is the twitter front and search pages different from the user pages in terms of styling mechanics?

[06:57:02.0000] <hsivonen>
the front page is CSSless for me

[06:57:03.0000] <Dashiva>
Is it possible to see the front page without logging out?

[06:58:00.0000] <hsivonen>
dunno

[06:58:01.0000] <hsivonen>
hmm. looks like they specify different media

[06:59:00.0000] <hsivonen>
I wonder if I or someone else has broken style sheets with unusual media attributes

[06:59:01.0000] <Dashiva>
Heh, the w3c twitter RT'd julian's LC comment instead of making a separate statement

[07:00:00.0000] <TabAtkins>
What's the w3c twitter?

[07:00:01.0000] <Dashiva>
/w3c

[07:00:02.0000] <Philip`>
http://twitter.com/w3c amazingly enough

[07:00:03.0000] <TabAtkins>
I suppose I should have expected that.

[07:02:00.0000] <Dashiva>
http://twitter.com/shepazu/status/5214106553

[07:02:01.0000] <Dashiva>
What is this I don't even

[07:08:00.0000] <TabAtkins>
Dashiva: I suppose the idea is that he's comparing WHATWG LC to a bait-and-switch?

[07:12:00.0000] <Dashiva>
I don't really see it, but okay

[07:14:00.0000] <Philip`>
I thought the idea was cars?

[07:15:00.0000] <Dashiva>
Elaborate, if you would

[07:17:00.0000] <brucel>
sense check anyone? what's wrong with <input type=range min=5 max=30 step=5> ? Mr validator tells me "Zero is not a positive floating point number."

[07:17:01.0000] <TabAtkins>
There is no sense in that.

[07:18:00.0000] <gsnedders|work>
jgraham: ping

[07:18:01.0000] <Philip`>
It's true the zero is not a positive floating point number

[07:18:02.0000] <Philip`>
s/the/that/

[07:18:03.0000] <Dashiva>
Probably a bug that snuck in during the recent update

[07:18:04.0000] <Dashiva>
Or "deployment" as the fancy pants call it

[07:18:05.0000] <Philip`>
It's not necessarily bad for the validator to say true things

[07:18:06.0000] <brucel>
it is true that zero isn't a +ve FP number... but I've said step=5, not step=0

[07:19:00.0000] <brucel>
tho i like the idea of a random gnomic truism from the validator every time

[07:19:01.0000] <TabAtkins>
What if the validator just tells you to rethink your life decisions?

[07:19:02.0000] <jgraham>
gsnedders|work: gnip

[07:19:03.0000] <Dashiva>
Sounds useful

[07:19:04.0000] <gsnedders|work>
jgraham: bratell wants you

[07:19:05.0000] <Dashiva>
Is there a uselessfactlib?

[07:21:00.0000] <brucel>
there's Daves' Web Of Lies http://www.davesweboflies.com/: lie of the day "If left alone together in a field, two field mice will naturally dig parallel tunnels."

[07:22:00.0000] <Dashiva>
"Quacking like a duck for five minutes every day will prevent the onset of ague."

[07:22:01.0000] <Dashiva>
I don't know what ague is, but I don't like the sound of it

[07:25:00.0000] <Philip`>
Looks like FloatingPointPositive ignores the first digit, when deciding whether something is zero

[07:25:01.0000] <Philip`>
for (int i = 1; i < literal.length(); i++) { ... looks for digits ... }

[07:26:00.0000] <TabAtkins>
That's strange.

[07:26:01.0000] <Philip`>
Looks like FloatingPointPositive is bogus anyway because it doesn't like 'e' in floats

[07:27:00.0000] <Philip`>
/me wonders if he's missing a good reason why i should start at 1

[07:28:00.0000] <Dashiva>
Maybe it assumes the presence of + or -

[07:28:01.0000] <Dashiva>
"Sergei Bubka, the world record pole-vaulter, has recently admitted to filling his shorts with helium for extra lift."

[07:28:02.0000] <TabAtkins>
That would be my assumption.

[07:28:03.0000] <zcorpan_>
Hixie: the "editor's draft" link in the SotD is broken in http://www.whatwg.org/specs/web-apps/2009-10-27/multipage/

[07:28:04.0000] <Philip`>
Hmm, nope, it's totally wrong

[07:29:00.0000] <Philip`>
It accepts range=11 and range=x1, and not range=10 or range=1

[07:29:01.0000] <Philip`>
Someone less lazy should report it as a validator.nu bug somewhere

[07:29:02.0000] <Dashiva>
Sounds like a job for you

[07:29:03.0000] <Philip`>
"less lazy [than me]"

[07:29:04.0000] <brucel>
i can report it but to whom? 

[07:30:00.0000] <Philip`>
brucel: http://bugzilla.validator.nu/ probably

[07:32:00.0000] <brucel>
giving a sign for the step <input type=range min=5 max=30 step=+5> suppressed the error message. Tho it's difficult to see how you can get from 5 to 30 in steps of anything other than positive numbers, so the sign seems superfluous.

[07:32:01.0000] <Philip`>
brucel: That makes your content invalid

[07:32:02.0000] <Philip`>
(+ is not allowed in valid floating point numbers)

[07:32:03.0000] <brucel>
(Cue some mathematician telling me that it's perfectly possibe in non-Euclidian Calabai-Yau space)

[07:33:00.0000] <Philip`>
brucel: It's perfectly possible in modular arithmetic

[07:33:01.0000] <TabAtkins>
All you need is a finite group.

[07:33:02.0000] <TabAtkins>
Z/50, frex, would do it.

[07:33:03.0000] <brucel>
the validator shut its face when I gave it step=+5, though. 

[07:33:04.0000] <Philip`>
brucel: The validator shuts its face when you give it step=x5 too

[07:34:00.0000] <Philip`>
or step=-5

[07:34:01.0000] <brucel>
x5 is perfectly acceptable in Swedenborgian algebraic topology, of course

[07:34:02.0000] <Philip`>
The shortest thing that's valid and that the validator accepts is step=05, I believe

[07:35:00.0000] <brucel>
so it's a validator bug and not my brainfart?

[07:35:01.0000] <Philip`>
(The validator ought to accept "05", "5", "5e0", "5.5e5", etc, and reject "0", "0e5", "1e-100", etc)

[07:35:02.0000] <hsivonen>
clearly, the datatype for positive integer is bogus

[07:35:03.0000] <Philip`>
(and it gets almost all of them wrong)

[07:35:04.0000] <hsivonen>
or positive float 

[07:35:05.0000] <Philip`>
hsivonen: Float, not integer

[07:37:00.0000] <hsivonen>
well, this is embarrassing

[07:38:00.0000] <Philip`>
/me notes that 1e-100 seems like quite a nasty case, since you really have to parse the string into a float and can't just examine its characters

[07:38:01.0000] <hsivonen>
the datatype iterates from index 1 not 0

[07:38:02.0000] <Philip`>
(because 1e-100 parses into 0, as of yesterday, I believe)

[07:40:00.0000] <brucel>
Henri, can I formally report the bug to you now please?

[07:43:00.0000] <hsivonen>
brucel: yes

[07:53:00.0000] <brucel>
ok, thanks for saving my sanity all

[07:55:00.0000] <Philip`>
/me sees there's already an open validator bug for exponents in floats

[07:55:01.0000] <gsnedders|work>
Sanity? pff.

[07:56:00.0000] <Philip`>
/me wonders if it's worth filing a new bug for cases like 1. and .1 and 1e-100

[07:59:00.0000] <ment>
do you belive there will ever be a conforming implementation of the _whole_ html5 specs?

[07:59:01.0000] <ment>
or that microsoft will adapt it right?

[07:59:02.0000] <TabAtkins>
Sure, in 2022.  ^_^  (Actually, that's the projected date for *two* of them.)

[08:00:00.0000] <gsnedders|work>
ment: All W3C specs are required to have two interoperable implementations before going to REC

[08:00:01.0000] <jgraham>
(some features from the current spec will likely be cut/changed before that happens)

[08:00:02.0000] <gsnedders|work>
And the intention for HTML 5 is to have two complete interoperable implementations

[08:01:00.0000] <ment>
so the two will be webkit and gecko?

[08:02:00.0000] <hsivonen>
ment: the Process make the spec get smaller and smaller until there are two interoperable implementations

[08:02:01.0000] <jgraham>
gsnedders|work: I think you are actually allowed some freedom in deciding the exit criteria for Rec

[08:02:02.0000] <hsivonen>
*makes

[08:02:03.0000] <jgraham>
s/for Rec/from CR/

[08:03:00.0000] <hsivonen>
jgraham: sure, the XHTML2 WG can decide that two validators that don't barf on DTDs count as implementations

[08:03:01.0000] <hsivonen>
jgraham: I expect the bar to be higher in the HTML WG

[08:03:02.0000] <ment>
hsivonen: huh, what do you mean by that? like you cut off parts of the standard because one of the implementators didn't do it right?

[08:03:03.0000] <hsivonen>
ment: right

[08:04:00.0000] <hsivonen>
ment: or more to the point, if there aren't two implementations getting it right, it gets cut

[08:04:01.0000] <ment>
hsivonen: do you cooperate with microsoft in any way?

[08:05:00.0000] <Philip`>
Or the spec hangs around in CR until everyone gets fed up and gives up on it

[08:05:01.0000] <hsivonen>
ment: MS is in the WG

[08:06:00.0000] <Philip`>
(which isn't necessarily bad, since getting to Rec shouldn't be a goal; the goals should be about having enough interoperability that people don't suffer from lack of it)

[08:06:01.0000] <hsivonen>
ment: however, it's sufficient for the two impls to be in the set {Gecko, WebKit, Opera}

[08:06:02.0000] <hsivonen>
ment: IE implementing stuff isn't a requirement for REC

[08:07:00.0000] <hsivonen>
(there could be a surprise new entrant to the market, too)

[08:07:01.0000] <ment>
hsivonen: well but from the practical point of view if microsoft doesn't implement html5, that's it for the standard

[08:07:02.0000] <TabAtkins>
Though, of course, IE *not* implementing stuff is a reason to cut that stuff from the spec, as they're a significant implementor.

[08:07:03.0000] <hsivonen>
or NetFront becoming conforming or something

[08:08:00.0000] <hsivonen>
ment: some features of HTML5 (mainly the form stuff) has been explicitly designed so that it can be emulated in IE using JS libs without binary plug-ins

[08:09:00.0000] <Philip`>
ment: The standard isn't a monolithic thing - it's a set of features, some of which will succeed and some of which will fail, and the standard as a whole won't be a failure just because some features don't get widely implemented

[08:09:01.0000] <Philip`>
It would be a failure if none got widely implemented, but many already have (including by Microsoft)

[08:09:02.0000] <zcorpan_>
http://www.peterbuick.com/news/how-to-add-your-own-video-to-firefox-html5

[08:15:00.0000] <hsivonen>
brucel: fixed and deployed

[08:31:00.0000] <gsnedders|work>
Is there any way of knowing what order IRC load events will fire in?

[08:31:01.0000] <gsnedders|work>
s/events/event handlers/

[08:31:02.0000] <Philip`>
IRC has event handlers?

[08:31:03.0000] <gsnedders|work>
/me is getting distracted by people speaking to him

[08:31:04.0000] <gsnedders|work>
s/IRC//

[08:32:00.0000] <jgraham>
gsnedders|work: they fire in the order they were registered

[08:32:01.0000] <TabAtkins>
I need to form a group called ATGNAT - All The Good Names Are Taken.

[08:32:02.0000] <Philip`>
TabAtkins: That's a good name

[08:33:00.0000] <TabAtkins>
Philip`: It's like the smallest integer that can't be described in less than twelve words.

[08:38:00.0000] <jthomas_sb>
Can anyone watch a full video here, with HTML5 embedded video?  I don't know if its my Iceweasel that is having issues or the Apache2 server, but all three of those videos stop halfway through and never recover...   http://support.sierrabravo.net/files/HowTo--Email_Setups/  The videos worked in the past but don't seem to want to fully play anymore.

[08:39:00.0000] <hsivonen>
jthomas_sb: WFM in Minefield.

[08:40:00.0000] <jthomas_sb>
i don't understand

[08:41:00.0000] <hsivonen>
jthomas_sb: works for me in a build of firefox trunk I made from the mercurial repo

[08:41:01.0000] <TabAtkins>
works for me in Chrome, too.  However, the *sound* goes extra fast and cuts out halfway through.

[08:41:02.0000] <jthomas_sb>
wfm = works for me, gotcha

[08:41:03.0000] <hsivonen>
jthomas_sb: is your iceweasel recent enough?

[08:41:04.0000] <jthomas_sb>
yeah the sound is a seperate issue

[08:41:05.0000] <jthomas_sb>
perhaps not, but it is 3.5 and it did work before...

[08:42:00.0000] <jthomas_sb>
if its working for you all i'll go with it, thanks all

[08:42:01.0000] <hsivonen>
jthomas_sb: if you tweaked mime types, you may have bad stuff in cache

[08:44:00.0000] <jthomas_sb>
i've not touched the site since i set it up 2mo ago or something, i was wanting to check some of what it is telling the user to do when i noticed the frozen-at-halfway-mark...

[08:45:00.0000] <brucel>
hsivonen thanks man

[08:46:00.0000] <hsivonen>
jthomas_sb: does the sound track end half way into the video?

[08:46:01.0000] <hsivonen>
maybe the old Gecko stops when the sound track ends

[08:47:00.0000] <hsivonen>
and a newer gecko plays the video track to completion anyway

[08:47:01.0000] <jthomas_sb>
it seems to, although I've never really worried about it; something about the gtk-recordmedesktop made the audio double-speed even tho I told it not to record audio.  That may be the issues exactly, that when the audio ends the video stops....

[08:56:00.0000] <brucel>
hsivonen is the source for the validator available for nosing at?

[08:59:00.0000] <hsivonen>
brucel: yes

[08:59:01.0000] <hsivonen>
brucel: http://about.validator.nu/#src

[09:06:00.0000] <brucel>
hsivonen groovy as The Beatles on spacehoppers. Thx.

[09:24:00.0000] <GPHemsley>
Hixie: Getting back to the test case issue, are there any existing HTML5 test cases? Are we going to modify the existing HTML4 test cases or start from scratch?

[09:25:00.0000] <Philip`>
GPHemsley: http://wiki.whatwg.org/wiki/Testsuite#Existing_tests

[09:25:01.0000] <Philip`>
As far as I'm aware, there aren't any HTML4 tests that are particularly useful

[09:26:00.0000] <GPHemsley>
Philip`: Ah, wasn't aware of that. Hixie said last night that there wasn't a plan yet.

[09:26:01.0000] <Philip`>
There isn't a plan yet

[09:26:02.0000] <Philip`>
There's just some people writing some tests

[09:27:00.0000] <Philip`>
and some rough ideas about what a test suite should look like

[09:27:01.0000] <GPHemsley>
ah

[09:31:00.0000] <zcorpan_>
would be nice to be able to measure the test coverage of the spec

[09:34:00.0000] <Philip`>
It'd be nice if people could point at a paragraph/phrase/sentence/word/etc in the spec and say "there needs to be a test for this"

[09:34:01.0000] <Philip`>
and then tie test cases to those pointers

[09:34:02.0000] <zcorpan_>
yes

[09:35:00.0000] <Philip`>
and then you can work out how many points are not tested at all

[09:35:01.0000] <Philip`>
(though this wouldn't help with testing interactions between features, or with making sure each point is properly tested)

[09:35:02.0000] <zcorpan_>
would still be a useful thing to do

[09:36:00.0000] <Philip`>
The end result could look like http://philip.html5.org/tests/canvas/suite/tests/spec.html :-)

[09:47:00.0000] <zcorpan_>
"The amount of bugs that are related to contentEditable, text ranges, drag and drop and the Document Object Model in general are staggering." -- http://blog.typlab.com/2009/10/love-web-development-again/

[09:47:01.0000] <zcorpan_>
i guess contentEditable and ranges still need a proper spec

[09:51:00.0000] <annevk2>
like pretty much everything :(

[10:02:00.0000] <zcorpan_>
i think i'll start to include the string "zcorpan" in my bugs so i can find them and close them later

[10:05:00.0000] <Philip`>
/me was thinking of doing the same

[10:05:01.0000] <Philip`>
(Well, not exactly the same, I wouldn't put "zcorpan" in them)

[10:06:00.0000] <jgraham>
If you did then zcorpan would deal with them for you

[10:07:00.0000] <gsnedders>
/me does bug cleanup on html5lib

[10:13:00.0000] <gsnedders>
/me finds a bug in google code

[10:15:00.0000] <mpilgrim>
zcorpan_: i'm not sure what you mean by "the first article example probably ought to set display:block"

[10:15:01.0000] <gsnedders>
Hixie: mpilgrim: Could either of you file a bug for me? It's creating a link to http://code.google.com/p/html5lib/issues/list?q=label:0.12-blocker which is (bogusly) failing to find anything.

[10:15:02.0000] <zcorpan_>
mpilgrim: the part that currently says article { border: 1px solid red }

[10:16:00.0000] <mpilgrim>
aha

[10:16:01.0000] <mpilgrim>
thanks

[10:17:00.0000] <mpilgrim>
ok, next question

[10:17:01.0000] <mpilgrim>
how should i rephrase "and everything else on the page will stay where it is in the document outline"

[10:17:02.0000] <mpilgrim>
what i mean is that it won't screw up the header nesting levels

[10:17:03.0000] <mpilgrim>
because the article is a self-enclosed universe

[10:18:00.0000] <mpilgrim>
or something

[10:18:01.0000] <mpilgrim>
i'm drawing a blank on how to explain that

[10:19:00.0000] <zcorpan_>
but it will screw up the header nesting levels in e.g. <body><h1>a</h1><h2>b</h2>(article here)<h2>c</h2>

[10:19:01.0000] <mpilgrim>
really? why?

[10:20:00.0000] <zcorpan_>
because the article becomes a subsection of body and headers after the article become headings of new implied sections that are on the same level as body, iirc

[10:21:00.0000] <mpilgrim>
/me writes a test case

[10:21:01.0000] <gsnedders>
/me doesn't think that's right

[10:22:00.0000] <Philip`>
gsnedders: http://code.google.com/p/support/issues/list

[10:22:01.0000] <Philip`>
for filing bugs

[10:23:00.0000] <mpilgrim>
http://gsnedders.html5.org/outliner/process.py?url=http://diveintomark.org/tmp/headers.html

[10:23:01.0000] <mpilgrim>
looks like what i would expect

[10:23:02.0000] <gsnedders>
That's what I'd expect too

[10:24:00.0000] <gsnedders>
The fact there's an article there should have no effect

[10:24:01.0000] <jgraham>
It is not impossible that you would expect d as a child of b

[10:24:02.0000] <zcorpan_>
hmm, then either i was having a different case in mind or i was just wrong

[10:24:03.0000] <mpilgrim>
ok, well change the question:

[10:25:00.0000] <mpilgrim>
how do i rephrase the sentence to say that if you do http://diveintomark.org/tmp/headers.html , you get the outline given by http://gsnedders.html5.org/outliner/process.py?url=http://diveintomark.org/tmp/headers.html

[10:25:01.0000] <mpilgrim>
maybe just say that

[10:25:02.0000] <zcorpan_>
<h1>a</h1><h2>b</h2><h3>c</h3><article><h1>article</h1></article><h3>d</h3>

[10:26:00.0000] <zcorpan_>
b and d are the same level

[10:26:01.0000] <zcorpan_>
without the article, c and d are the same level

[10:26:02.0000] <zcorpan_>
so inserting the article screws up the level of d

[10:27:00.0000] <mpilgrim>
interesting

[10:31:00.0000] <gsnedders>
What's the "lint" filter in html5lib?

[10:32:00.0000] <zcorpan_>
i think it's like this because otherwise the automatic resizing of h1 wouldn't work without killing performance with a magic selector that depends on the outline algorithm, or something

[10:32:01.0000] <Rik`>
mpilgrim: on http://diveintohtml5.org/semantics.html, your link to apple documentation is wrong, it should be http://developer.apple.com/safari/library/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html#//apple_ref/doc/uid/TP40002051-CH3-SW4

[10:33:00.0000] <gsnedders>
zcorpan_: In that case the article is a section in and of itself, with a rank of 1, no?

[10:33:01.0000] <Philip`>
gsnedders: It stops html5lib getting clogged up when you dry markup

[10:34:00.0000] <zcorpan_>
gsnedders: no it's a subsection of a

[10:35:00.0000] <mpilgrim>
Rik`: thanks, that'll be fixed in the next update

[10:37:00.0000] <jgraham>
gsnedders: Well look at the source

[10:37:01.0000] <jgraham>
It checks some stuff. I don't recall what

[10:37:02.0000] <jgraham>
Thomas Broyer wrote it

[10:38:00.0000] <gsnedders>
jgraham: Can you look at #112 and #74?

[10:38:01.0000] <gsnedders>
jgraham: It touches the content model flags a lot

[10:38:02.0000] <zcorpan_>
gsnedders: for the html5lib quotes thing, can't we just quote for U+0000..U+0020, U+0060, plus the old opera characters?

[10:38:03.0000] <jgraham>
gsnedders: Not now, I have to leave (and am out this evening)

[10:47:00.0000] <gsnedders>
http://code.google.com/p/html5lib/issues/list?q=label:Milestone-Release1.0

[10:48:00.0000] <ment>
i thought content model flags are gone

[12:30:00.0000] <kangax>
Was `StorageItem` interface dropped from the web storage?

[13:22:00.0000] <krijn>
mpilgrim__: you're missing a </ul> in the fat footers example on http://diveintohtml5.org/semantics.html


2009-10-29
[17:23:00.0000] <ment>
correct me if i'm wrong, but tokenizer in data state with string '</* xxx>' on input returns a comment token with text '* xxx' ?

[17:52:00.0000] <MikeSmith>
ment: yeah, as far as I can see

[18:15:00.0000] <mpilgrim>
krijnh: fixed the missing </ul>s, thanks

[22:44:00.0000] <MikeSmith>
JoePeck: nice posting about the Web Inspector changes

[22:45:00.0000] <JoePeck>
MikeSmith: thanks!

[23:04:00.0000] <MikeSmith>
JoePeck: for the Web Inspector wishlist: https://bugs.webkit.org/show_bug.cgi?id=24529

[23:05:00.0000] <JoePeck>
MikeSmith: a man after my own heart. I'm going to be doing some work with application cache for my masters project. I'll have my eye on what I will want to display with Application Cache

[23:09:00.0000] <MikeSmith>
JoePeck: troubleshooting Application Cache problems seems to be a particular pain point for developers

[23:10:00.0000] <MikeSmith>
e.g., the message that David Kilzer cites there

[23:10:01.0000] <othermaciej>
definitely a place where tools can help

[23:10:02.0000] <JoePeck>
MikeSmith: yah, my first 30 minutes with it and I found a nasty issue with WebKit that nearly stopped me dead in my tracks => https://bugs.webkit.org/show_bug.cgi?id=29690

[23:12:00.0000] <MikeSmith>
wow

[23:12:01.0000] <MikeSmith>
it doesn't seem like that could be per spec

[23:13:00.0000] <MikeSmith>
/me wonders what other browsers do for this case

[02:35:00.0000] <MikeSmith>
some useful stuff at http://miketaylr.com/

[02:35:01.0000] <Dashiva>
Hey Mike, do you know the reason Incubation Group is abbreviated XG?

[02:35:02.0000] <MikeSmith>
e.g., http://miketaylr.com/code/input-type-attr.html

[02:36:00.0000] <MikeSmith>
Dashiva: you already know the answer to that question, right?

[02:37:00.0000] <Dashiva>
No. Or at least I don't know it's the actual answer.

[02:37:01.0000] <MikeSmith>
the answer is that anything starting with X in is automatically good

[02:38:00.0000] <MikeSmith>
oh, and one other thing: W3C also already had something called Interest Group, which laid claim to "IG"

[02:38:01.0000] <MikeSmith>
one of those two answers is the real answer

[02:39:00.0000] <MikeSmith>
I suggested XXXG, but that got voted down

[02:41:00.0000] <MikeSmith>
that was my nickname in elementary school: Michael "triple-X O.G." Smith... but I shortened that nickname to to just "(tm)"

[02:41:01.0000] <MikeSmith>
so my (tm) actually stands for "triple-X O.G.", similar to the way XG stands for "Incubator Group"

[02:41:02.0000] <Dashiva>
I... see...

[02:42:00.0000] <Dashiva>
And what does O.G. stand for?

[02:44:00.0000] <Philip`>
Maybe it's XG because you put eggs in an incubator, and X sound like eggs

[02:46:00.0000] <MikeSmith>
Dashiva: not sure what O.G. stands for -- all I know is that's just what people called me: What up, O.G.? or What up, thug|player|holmes etc.

[02:49:00.0000] <MikeSmith>
Philip`: you sharp, O.G. -- Despite my lame attempts at misdirection, you saw right into the true reason

[02:49:01.0000] <MikeSmith>
Philip`: when you can snatch the pebble from my hand, it will be time for you leave

[02:50:00.0000] <MikeSmith>
(and after you walk the rice paper without leaving any footprints, and lift the red-hot iron pot with your forearms to get branded with the Tiger and Dragon)

[02:51:00.0000] <MikeSmith>
俺の話を聞け!

[02:51:01.0000] <Dashiva>
俺は誰だと思ってる！

[02:51:02.0000] <Philip`>
That sounds like far too much effort

[02:52:00.0000] <Philip`>
/me poisons MikeSmith's fish

[02:53:00.0000] <jgraham>
I think it is quite clear MikeSmith has had his fish poisoned already

[02:53:01.0000] <Dashiva>
The kanji for poison looks like 'mom' and 'vegetable'

[02:53:02.0000] <MikeSmith>
morning-glory seeds

[02:53:03.0000] <Dashiva>
The conclusion is left to the reader

[02:56:00.0000] <MikeSmith>
alright all y'all gangster lean, time for me to go

[02:56:01.0000] <MikeSmith>
back on later

[02:57:00.0000] <erlehmann_>
 博は、この衛星の言語です

[02:58:00.0000] <Dashiva>
That sounds like it came through Google

[02:58:01.0000] <erlehmann_>
:D

[02:58:02.0000] <Dashiva>
I'm not sure what the original was...

[02:59:00.0000] <erlehmann_>
Dashiva, i input "moon speak" into google and it put out 満月を話す, but that seems to mean "speaking moon"

[03:00:00.0000] <Dashiva>
So you tried with... "Dr. moon language" or something?

[03:01:00.0000] <Philip`>
숍訊昱穿!

[03:03:00.0000] <erlehmann_>
Dashiva, "wtf is this moon language" なった

[03:04:00.0000] <Dashiva>
wtf, how does wtf become 博

[03:08:00.0000] <jgraham>
/me is glad that hs left his sense of logic at the door

[03:23:00.0000] <erlehmann_>
Dashiva, what does this glyph mean?

[03:25:00.0000] <Dashiva>
http://www.df.lth.se/cgi-bin/j-e/euc/inline/dokanji?index=t&ivalue=476e&

[03:25:01.0000] <Dashiva>
See for yourself :)

[03:25:02.0000] <erlehmann>
win acclaim !!

[03:29:00.0000] <erlehmann>
٪)

[03:30:00.0000] <Dashiva>
http://cdn.okcimg.com/blog/mofo_mysteries/American-Geniuses.png

[03:30:01.0000] <Dashiva>
Percentage of people in each state who consider themselves geniuses

[03:31:00.0000] <erlehmann>
YOU ARE A SCARY MAN WHO IS SCARING ME IN THE FACE.

[03:33:00.0000] <Philip`>
...according to an online dating site

[03:34:00.0000] <Philip`>
in which there is clearly no incentive to say things you don't believe

[03:36:00.0000] <Dashiva>
If you try building a relationship based on being a genius, I think you'll be busted pretty soon

[03:38:00.0000] <nessy>
you'd be surprised - some ppl are geniuses at faking

[03:38:01.0000] <Dashiva>
Are they really faking then?

[03:38:02.0000] <nessy>
depends on your pov :)

[05:04:00.0000] <smaug_>
is html5 somehow in "last call"?

[05:05:00.0000] <smaug_>
or what does the "Last call for comments" mean

[05:05:01.0000] <hsivonen>
smaug_: it's in LC at the WHATWG but not at the W3C

[05:05:02.0000] <hsivonen>
smaug_: it's not at all clear what it means

[05:06:00.0000] <hsivonen>
smaug_: other than making the point that Hixie kept the schedule he made in 2006 or so

[05:07:00.0000] <smaug_>
is the assumption that the draft will be in last call a year or so?

[05:07:01.0000] <hsivonen>
smaug_: http://www.whatwg.org/specs/web-apps/current-work/TIMETABLE

[05:07:02.0000] <smaug_>
though, if it is not clear what "last call" means, that is not very relevant question

[05:07:03.0000] <hsivonen>
smaug_: more like 3 years, it seems

[05:08:00.0000] <jgraham>
hsivonen: It means that we briefly reached 0 outstanding, non-escalated, issues

[05:08:01.0000] <Dashiva>
In other words, if you have unadressed issues you need to speak up, because they aren't on the todo list

[05:08:02.0000] <jgraham>
which makes sense as a definition of last call

[05:09:00.0000] <smaug_>
/me needs to read the whole draft at some point

[05:10:00.0000] <smaug_>
currently it is still in a state that (almost) whenever one implements something, problems are found also in the spec

[05:10:01.0000] <smaug_>
but that is ok

[05:10:02.0000] <jgraham>
Right, that is more or less expected I think

[05:10:03.0000] <smaug_>
since it is just a draft

[05:11:00.0000] <Dashiva>
LC is for getting the theoretical issues in place, CR for the real problems :)

[05:12:00.0000] <jgraham>
Don't most groups have like a three week LC period?

[05:12:01.0000] <jgraham>
(supposedly)

[05:12:02.0000] <smaug_>
but 2-3 years should be enough for reading the draft. Unless it grows up exponentially.

[05:12:03.0000] <Dashiva>
jgraham: Repeatedly

[05:13:00.0000] <hsivonen>
It seems to me that the main point of the WHATWG LC is that it's the HTML WG chairs who are letting the schedule slip--not the editor

[05:13:01.0000] <Dashiva>
Not sure what the average number of iterations is, but only a single LC is rare from what I've heard

[05:13:02.0000] <jgraham>
smaug_: At this point I would expect the size to remain basically stable

[05:15:00.0000] <Dashiva>
Barring sections being split out into separate specs

[05:17:00.0000] <jgraham>
hsivonen: Arguably that is the point of giving it a name like "last call". But the fact is that Hixie did stick to his schedule. Which is pretty impressive really

[05:18:00.0000] <Dashiva>
I wonder how much overtime he did towards the end :)

[05:18:01.0000] <jgraham>
and it was a state-triggered status change not a date-triggered change

[05:18:02.0000] <hsivonen>
jgraham: yeah, Hixie sticking to his schedule is impressive

[05:18:03.0000] <erlehmann>
i'll look forward to 2022 then \o/

[05:19:00.0000] <Dashiva>
Why, are you a test suite fanatic? :)

[05:20:00.0000] <jgraham>
Dashiva: I wonder how much overtime he would be owed if he was paid extra for time in excess of 40 hours/week as per standard (not contract-changed) Swedish law

[05:22:00.0000] <Dashiva>
He probably has a salary

[05:22:01.0000] <jgraham>
(or however it works, I don't really understand it, but for the sake of argument lets assume he was supposed to do 40 hours/week Mon-Fri and got overtime for unsociable hours like weekends and excess work)

[05:22:02.0000] <jgraham>
Dashiva: Yeah, I'm sure he does :) This is purely hypothetical :)

[05:47:00.0000] <zcorpan_>
going to file:/// gives me an xml parse error in firefox :-(

[05:48:00.0000] <jgraham>
zcorpan_: Well you should make sure that your root directory is well formed then :)

[05:49:00.0000] <zcorpan_>
<td sortable-data="2.zip">

[05:50:00.0000] <zcorpan_>
where the funny character is a U+0003

[05:51:00.0000] <hsivonen>
zcorpan_: XML FTW!

[05:51:01.0000] <hsivonen>
zcorpan_: FWIW, having the directory listings be XHTML is also a problem with FTP

[05:52:00.0000] <hsivonen>
zcorpan_: since the XHTML code path doesn't allow manual charset override or something along those lines

[05:53:00.0000] <zcorpan_>
wonder where that zip file came from

[05:53:01.0000] <zcorpan_>
/me hopes it was harmless to remove it

[05:54:00.0000] <jgraham>
/me reproduces problem

[05:55:00.0000] <jgraham>
I guess we can add whoever is responsible for that page to the bozo list :)

[05:56:00.0000] <zcorpan_>
we have a bozo list?

[05:56:01.0000] <zcorpan_>
isn't it easier to assume that everyone is a bozo until proven otherwise?

[05:57:00.0000] <hsivonen>
I bet the person who wrote the directory list generation code wrote it for text/html and someone else made it application/xhtml+xml later.

[05:57:01.0000] <jgraham>
zcorpan_: That is probably more efficient, yes

[05:58:00.0000] <jgraham>
/me assumes someone will file a bug

[06:17:00.0000] <Philip`>
zcorpan_: It's impossible to prove that someone is not a bozo

[06:17:01.0000] <Philip`>
You can only demonstrate the positive

[06:17:02.0000] <Philip`>
The only way to not be a bozo is to not use XML :-)

[06:18:00.0000] <jgraham>
Philip`: Maybe that was what tim was getting at

[06:20:00.0000] <jgraham>
/me suggests t-shirts reading "XML is a strange game. The only winning move is to not play"

[06:20:01.0000] <gsnedders|work>
jgraham: That string is really too long for a t-shirt

[06:20:02.0000] <Philip`>
Get a bigger t-shirt

[06:20:03.0000] <gsnedders|work>
/me would rather go for: "XML: FAIL"

[06:21:00.0000] <gsnedders|work>
(in red)

[06:21:01.0000] <Philip`>
(on light yellow)

[06:22:00.0000] <gsnedders|work>
/me is tempted to get that

[06:22:01.0000] <jgraham>
gsnedders|work:It is shorter than http://store.xkcd.com/xkcd/#LinuxCheatShirt

[06:23:00.0000] <hsivonen>
the problem with t-shirts that make statements is that most of the time, it's too cold to wear only a t-shirt without covering the message

[06:23:01.0000] <hsivonen>
there should be woolly sweaters with messages on them

[06:23:02.0000] <gsnedders|work>
hsivonen: goto SPAIN

[06:25:00.0000] <AryehGregor>
Dashiva, why does that map color-code low percentages as red and high as green?  High percentages would seem to be worse.

[06:26:00.0000] <Philip`>
AryehGregor: High is better, because it indicates the state is more geniuser

[06:27:00.0000] <TabAtkins>
hsivonen: Yeah, move somewhere hot.  We've done a barbecue during Xmas the past two years.

[06:28:00.0000] <TabAtkins>
Everyone in shorts and tshirts, enjoying a cool 75F afternoon on the patio.

[06:28:01.0000] <AryehGregor>
hsivonen, where do you live?  You can get by with just a T-shirt here for at least half the year.

[06:29:00.0000] <AryehGregor>
Philip`, since the correct figure is probably less than 1% by any reasonable definition, I'd say that a lower number is indicative of marginally more sanity.

[06:29:01.0000] <AryehGregor>
Kind of like how what, 90 or 95% of people consider themselves to be more intelligent than the median person?

[06:29:02.0000] <erlehmann>
gsnedders|work, you surely meant <xml:fail/>

[06:30:00.0000] <gsnedders|work>
erlehmann: But that's using someone else's namespace!

[06:30:01.0000] <erlehmann>
hsivonen, that is so true. i was wearing a mozille shirt yesterday. and a pullover. and a jacket.

[06:31:00.0000] <gsnedders|work>
erlehmann: And that means the fail ends immediately!

[06:31:01.0000] <erlehmann>
wargarbl

[06:31:02.0000] <hsivonen>
AryehGregor: Helsinki, Finland

[06:32:00.0000] <erlehmann>
i wish mozilla would give better parsing errors

[06:32:01.0000] <AryehGregor>
hsivonen, oh, no wonder.

[06:32:02.0000] <erlehmann>
hate them hate them hate them

[06:32:03.0000] <erlehmann>
presentation is sooo 1995

[06:41:00.0000] <AryehGregor>
Can't people at least see your brilliant T-shirts when you're indoors?

[06:44:00.0000] <hsivonen>
AryehGregor: Usually indoors isn't warm enough for just a t-shirt. (Even though in Finland indoors is usually more t-shirt-friendly than in places where there's always cold AC.)

[06:44:01.0000] <AryehGregor>
You don't have central heating in Finland, or what?

[06:44:02.0000] <hsivonen>
AryehGregor: we do

[06:44:03.0000] <hsivonen>
very central in fact

[06:44:04.0000] <AryehGregor>
Maybe you guys are so used to being cold that you can't be bothered to keep the temperature decently warm indoors?

[06:45:00.0000] <hsivonen>
AryehGregor: on the contrary

[06:45:01.0000] <hsivonen>
AryehGregor: I often feel that hotel rooms and conference centers abroad aren't warm enough

[06:45:02.0000] <Dashiva>
hsivonen is just cold in general

[06:47:00.0000] <hsivonen>
/me still hasn't decided what the right strategy for choosing a hotel in California for December is: choosing a hotel with bad but bearable winter proofness or a hotel with unknown winter proofness

[06:49:00.0000] <jgraham>
Sweden at least has very good insulation and good heating. I still wear a jumper indoors though

[06:50:00.0000] <jgraham>
(typically not a thick one like you want outside for the winter but still...)

[06:54:00.0000] <TabAtkins>
Hotels are always cold, actually.  Everywhere in the US.  I dunno why.

[06:54:01.0000] <jgraham>
Because they are big and expensive to heat but people don't realise they will be cold until they have already booked?

[06:55:00.0000] <AryehGregor>
Over here (New York City), in most places you never have to wear a jacket indoors.  If you do, people complain bitterly about how cold it is.

[06:58:00.0000] <hsivonen>
I generally assume a jacket indoors isn't needed in Finland but is needed in California due to AC.

[06:59:00.0000] <jgraham>
/me is actually quite cold indoors right now

[07:03:00.0000] <AryehGregor>
When I was in California, I mostly didn't need a jacket there, either.

[07:03:01.0000] <TabAtkins>
jgraham: No, they're *always* cold.  Even down here in Houston, where it's always hot.  If a hotel is hot it's because (a) the hotel is super-crappy or (b) the power is out.

[07:03:02.0000] <AryehGregor>
We were probably spending most of our time in different types of buildings, though.

[07:03:03.0000] <AryehGregor>
Also, I was in Berkeley, and even in the summer it doesn't need much air conditioning.  Very temperate place.

[07:04:00.0000] <AryehGregor>
(Climatically, I mean.  Not, for instance, politically.)

[07:05:00.0000] <AryehGregor>
(I could swear that every second stop sign had something written under "STOP".  "STOP war", "STOP eating animals", "STOP Bush", . . .

[07:05:01.0000] <AryehGregor>
)

[07:14:00.0000] <ment>
http://www.chrishiggins.com/blog/archives/images/portland_stop_hammer_time.jpg

[07:24:00.0000] <ment>
in the section 9.2.4.10 Tag name state, where are the lowercase letters?

[07:25:00.0000] <ment>
(reading from 27.10.09 draft, is there any newer version?)

[07:33:00.0000] <Dashiva>
ment: They are "everything else"

[07:34:00.0000] <Dashiva>
Uppercase are called out because they have to be lowercased

[07:34:01.0000] <ment>
oh i see. thanks.

[07:35:00.0000] <Famic>
is it too soon to create sites using html5 or is it ok ?

[07:35:01.0000] <Dashiva>
Yes and no

[07:35:02.0000] <Dashiva>
Some features work fine, others haven't been implemented yet

[07:36:00.0000] <Famic>
what about just using new tags instead of divs to organise the contents ?

[07:36:01.0000] <Dashiva>
As long as you use the workaround for old IE, that should be fine

[07:36:02.0000] <Famic>
I'm thinking section, article, footer, time, etc

[07:37:00.0000] <Famic>
you mean html5shiv ?

[07:37:01.0000] <Famic>
seems not. What workaround then ?

[07:37:02.0000] <Dashiva>
That's the one

[07:38:00.0000] <Famic>
ok so I can safely use those tags instead of divs and hell won't break loose on my site ?

[07:38:01.0000] <Dashiva>
Well, not from those tags at least

[07:39:00.0000] <Famic>
kewl then :)

[08:06:00.0000] <crash\>
disabled on <fieldset> is good, but why not also on <form>?

[08:06:01.0000] <zcorpan_>
what's the use case?

[08:08:00.0000] <crash\>
<from disable> and enabling it via scripting

[08:08:01.0000] <crash\>
for example

[08:08:02.0000] <crash\>
+d

[08:08:03.0000] <crash\>
since some element may not grouped by <fieldset>

[08:09:00.0000] <zcorpan_>
why would you disable a whole form?

[08:09:01.0000] <crash\>
after sending a form

[08:11:00.0000] <zcorpan_>
you want to disable a form when the user clicks submit?

[08:14:00.0000] <crash\>
for example

[08:23:00.0000] <erlehmann>
crash\, disable the submit button instead. problem solved.

[08:25:00.0000] <crash\>
true, just a question :)

[08:45:00.0000] <myakura>
lol http://f.hatena.ne.jp/edvakf/20091030004848

[09:11:00.0000] <gsnedders|work>
Apparently I have a scary laugh

[09:12:00.0000] <TabAtkins>
It fits you.

[09:12:01.0000] <gsnedders|work>
Listening to goth metal, laughing scarily, and working. And annoying jgraham from time to time.

[09:13:00.0000] <TabAtkins>
I've got something that sounds like goth disco.  That's about the closest I get.  The rest of my music is hard rock and house, mostly.

[09:14:00.0000] <gsnedders|work>
goth disco?

[09:14:01.0000] <gsnedders|work>
/me is curious now

[09:14:02.0000] <TabAtkins>
The Rasmus.

[09:14:03.0000] <gsnedders|work>
(Sounds like something I wouldn't like, but it sounds interesting nevertheless)

[09:31:00.0000] <gsnedders|work>
Gah. Only one Kittie album on Spotify.

[09:35:00.0000] <daedb>
Kittie still exists?

[09:35:01.0000] <gsnedders|work>
daedb: Yeah

[09:37:00.0000] <daedb>
I haven't heard anything from them in about 8 years...

[09:41:00.0000] <gsnedders|work>
daedb: Heh. The only album by them on Spotify is from this year. :)

[09:41:01.0000] <gsnedders|work>
(It's all right, but I prefer some of their older stuff more.)

[10:13:00.0000] <daedb>
gsnedders|work: Their new album sounds pretty decent, better than I expected :)

[10:21:00.0000] <gsnedders|work>
What var foo = "bar"; does within a with statement depends upon the context in which the with statement is executed.

[10:21:01.0000] <gsnedders|work>
Um, OK.

[11:32:00.0000] <gsnedders|work>
hsivonen: yt?

[11:34:00.0000] <gsnedders|work>
hsivonen: I'm trying to get the parser (in Java) to parse from a string to a DOM

[11:42:00.0000] <Philip`>
gsnedders|work: What problems are you having?

[11:42:01.0000] <gsnedders|work>
Philip`: I have no idea how to start

[11:44:00.0000] <gsnedders|work>
/me is trying to use JRuby, but that's starting to seem a bit weird

[11:46:00.0000] <Philip`>
    HtmlDocumentBuilder parser = new HtmlDocumentBuilder(XmlViolationPolicy.ALTER_INFOSET);

[11:46:01.0000] <Philip`>
    Reader reader = new StringReader(input);

[11:46:02.0000] <Philip`>
I think that might do it

[11:46:03.0000] <Philip`>
    Document doc = parser.parse(reader);

[11:47:00.0000] <Philip`>
(Not tested, though)

[11:52:00.0000] <gsnedders|work>
There's something whacky going on with JRuby

[11:52:01.0000] <gsnedders|work>
gah

[11:52:02.0000] <gsnedders|work>
Writing Java for the first time in around five years is starting to look like a good solution

[12:01:00.0000] <Philip`>
Writing Java's not too bad, as long as you've got an autocompleting IDE :-)

[12:01:01.0000] <gsnedders|work>
And you have a vague clue of the language

[12:02:00.0000] <Philip`>
and it seems likely to cause fewer layers of problems than JRuby

[12:02:01.0000] <gsnedders|work>
Which I don't really have any more :)

[12:02:02.0000] <gsnedders|work>
Philip`: Indeed

[12:02:03.0000] <Philip`>
It's just like Javascript with types

[12:02:04.0000] <gsnedders|work>
/me could also head out to get food, which would be nice

[12:02:05.0000] <gsnedders|work>
and speed, that's another thing it has on Javascript

[12:02:06.0000] <Philip`>
so you must have a vague clue :-)

[12:03:00.0000] <Philip`>
It only has speed because JS implementations were rubbish

[12:04:00.0000] <Philip`>
All you need to do is write JS very carefully in a restricted subset that looks a lot like Java, and then use V8 and it'll go fast

[12:04:01.0000] <Philip`>
(from what I've heard)

[12:04:02.0000] <gsnedders|work>
So we can have HTML parsers in Javascript? :P

[12:05:00.0000] <Philip`>
String manipulation probably isn't part of that restricted subset :-p

[12:08:00.0000] <gsnedders|work>
Wow, yui2's git repo is huge

[12:27:00.0000] <TabAtkins>
>_< Philip`, you should know very well that javascript is nothing like Java.  They both share a C-like syntax, that's all.

[12:33:00.0000] <Philip`>
TabAtkins: They have variables and functions and strings and numbers and stuff too

[12:34:00.0000] <TabAtkins>
By that logic, nearly all programming languages are basically Java.

[12:34:01.0000] <Philip`>
Sure

[12:34:02.0000] <TabAtkins>
I challenge your discriminatory abilities, and will not send out for anything without an extremely detailed description of what I want.

[12:35:00.0000] <TabAtkins>
Otherwise I'll end up with a yellow-painted apple instead of the banana I asked for.

[12:38:00.0000] <Philip`>
You're focusing far too much on differences and far too little on similarities

[12:38:01.0000] <Philip`>
You should be glad if I bring you a yellow apple, and not staples or clouds or many other things

[12:47:00.0000] <ment>
how would be parsed attributes in this link? <a title= class=link href=http://slashdot.org>

[12:47:01.0000] <ment>
"title" => " class=link", right?

[13:00:00.0000] <erlehmann>
ment, what are you trying to accomplish?

[13:02:00.0000] <ment>
erlehmann: only checking if it's the right behaviour

[13:05:00.0000] <erlehmann>
http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#attribute-name-state

[13:05:01.0000] <erlehmann>
so wo go from attribute name state to before attribute value state

[13:05:02.0000] <erlehmann>
then we consume a space character

[13:06:00.0000] <erlehmann>
and stay in the … seems you are right. thats counter-intuitive

[13:06:01.0000] <ment>
i know, i've clicked through it too. but i've also seen <a attr= otherattr= href=...> in the "wild"

[13:07:00.0000] <erlehmann>
Hixie, can you explain the rationale of handling attributes like this? isn't this more likely to break existing content then the alternative?

[13:08:00.0000] <erlehmann>
i would have expected that a space triggers before attribute name state or something

[13:09:00.0000] <erlehmann>
ment, i guess it has something to do with <span class=foo bar baz>

[13:10:00.0000] <erlehmann>
but still :(

[13:11:00.0000] <erlehmann>
weird, as everything in here

[13:11:01.0000] <ment>
class=foo bar baz would get parsed as class="foo" bar baz

[13:11:02.0000] <erlehmann>
just realized it too

[13:11:03.0000] <erlehmann>
9.2.4.40 Attribute value (unquoted) state ends on a space

[13:14:00.0000] <erlehmann>
ment, how about sending that to the list?

[13:16:00.0000] <ment>
good idea

[13:18:00.0000] <gsnedders|work>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Ca%20title%3D%20class%3Dlink%20href%3Dhttp%3A%2F%2Fslashdot.org%3E shows all browsers on my system doing the same

[13:18:01.0000] <gsnedders|work>
(and matching html5)

[13:20:00.0000] <erlehmann>
gsnedders|work, so ment and i are both dumb.

[13:22:00.0000] <erlehmann>
gsnedders|work, after the equals sign, are we in before attribute value state ? if so, what is done when encountering a space char? http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#before-attribute-value-state

[13:22:01.0000] <gsnedders|work>
erlehmann: Stay in that state

[13:23:00.0000] <gsnedders|work>
Odd.

[13:23:01.0000] <gsnedders|work>
What does IE do?

[13:23:02.0000] <erlehmann>
well, then i'm confused

[13:23:03.0000] <gsnedders|work>
Oh, wait

[13:23:04.0000] <gsnedders|work>
No

[13:24:00.0000] <gsnedders|work>
That makes complete sense

[13:24:01.0000] <erlehmann>
care to elaborate?

[13:24:02.0000] <gsnedders|work>
consume "=" char in the attribute name state, change to before attribute value state.

[13:24:03.0000] <gsnedders|work>
consume " " in the before attribute value state, stay in same state.

[13:25:00.0000] <gsnedders|work>
consume "c" in the before attribute value state, create attribute whose name is "c", change to attribute value (unquoted) state

[13:25:01.0000] <gsnedders|work>
(nothing interesting happens…)

[13:26:00.0000] <gsnedders|work>
consume "k" in the attribute value (unquoted) state, append "k" to attribute value"

[13:26:01.0000] <gsnedders|work>
s/create attribute whose name is/set attribute value to/

[13:26:02.0000] <erlehmann>
wait

[13:26:03.0000] <gsnedders|work>
consume " " in attribute value (unquoted) state, switch to before attribute name state

[13:26:04.0000] <gsnedders|work>
This matches all browsers

[13:28:00.0000] <erlehmann>
gsnedders|work, i can't follow you at the "c" consuming process. doesn't it match the "anything else" provision of section 9.2.4.37 ?

[13:28:01.0000] <gsnedders|work>
Yes

[13:28:02.0000] <gsnedders|work>
so you consume it, append it to the attribute value, and switch to that state

[13:28:03.0000] <gsnedders|work>
(make sure you evaluate the substituion I wrote above fixing a fairly major bug in what I wrote)

[13:29:00.0000] <erlehmann>
some day i will make a big poster of the HTML5 state machine

[13:29:01.0000] <erlehmann>
and put it on my wall 

[13:30:00.0000] <erlehmann>
to confuse guests

[13:30:01.0000] <erlehmann>
right beside the openTTD airport state machine, just to see how simple handling airplanes is compared to this mess

[13:30:02.0000] <webben>
"a big poster of the HTML5 state machine" *Do Want* ;)

[13:30:03.0000] <ment>
hehe

[13:30:04.0000] <gsnedders|work>
s/big/very big/

[13:31:00.0000] <gsnedders|work>
Sorry, I want to read it.

[14:08:00.0000] <jgraham>
/me wants the HTML5 state machine poster to be drawn by the xkcd guy

[14:09:00.0000] <TabAtkins>
jgraham: Randall Munroe.

[14:15:00.0000] <jgraham>
TabAtkins: Yeah I know but it is more fun to say "the xkcd guy" (and I guess more accessible)

[14:15:01.0000] <TabAtkins>
Makes sense.

[14:16:00.0000] <zcorpan>
there's http://canvex.lazyilluminati.com/misc/states10.png but it's out of date

[14:17:00.0000] <TabAtkins>
Holy crap.

[14:17:01.0000] <zcorpan>
Philip`: can you make a new one that's up to date?

[14:18:00.0000] <TabAtkins>
I'll bet that could be rearranged to make less line-crossing.

[14:19:00.0000] <TabAtkins>
I was pretty good at that one game where you had to rearrange nodes to create a planar graph.

[14:19:01.0000] <zcorpan>
TabAtkins: go for it

[14:20:00.0000] <TabAtkins>
I don't want to put in the effort to create the initial graph, though.  If I was given something already created I'd spend the time to rearrange it.

[14:20:01.0000] <jgraham>
Imagine that, drawn by the xkcd guy, on our office wall

[14:20:02.0000] <Philip`>
I think http://philip.html5.org/misc/tokeniser_states.png is the latest version

[14:20:03.0000] <Philip`>
zcorpan: I can't, until I make loads of updates to my tokeniser

[14:20:04.0000] <jgraham>
In unrelated news I had a bizzare dream that TabAtkins was an oldish guy with a beard working at a supermarket checkout 

[14:21:00.0000] <TabAtkins>
I'm young and a webdev, but I do have a beard.

[14:21:01.0000] <TabAtkins>
I haven't ever dreamed about any of you guys, though.

[14:22:00.0000] <Philip`>
http://philip.html5.org/misc/insertion-modes-3.png

[14:22:01.0000] <Philip`>
is the equivalent for the tree construction algorithm

[14:23:00.0000] <erlehmann>
jgraham, one can emulate his style pretty easily ;)

[14:23:01.0000] <Philip`>
(Red for parse errors, blue for EOF, I think)

[14:23:02.0000] <TabAtkins>
That one's not bad, Philip`.

[14:24:00.0000] <erlehmann>
TabAtkins, if you are good at that game (gplanarity?), better patch graphviz, so we all wan benefit from that

[14:25:00.0000] <TabAtkins>
Yeah, as soon as I mentioned it I went and googled for it.  I'm playing it right now.

[14:25:01.0000] <Philip`>
(All these graphs are just generated automatically from OCaml encodings of the algorithms)

[14:25:02.0000] <TabAtkins>
Just plain Planarity.

[14:26:00.0000] <erlehmann>
Philip`, so can i have the .dot files to experiment a bit?

[14:26:01.0000] <TabAtkins>
Is it possible to prove planarity of a graph?

[14:26:02.0000] <Philip`>
What do you mean by "prove planarity"?

[14:26:03.0000] <TabAtkins>
I know Planarity just generates planar graphs and then scrambles the nodes.

[14:27:00.0000] <Philip`>
Prove that it is possible to find a 2d embedding that is planar, or something?

[14:27:01.0000] <TabAtkins>
Prove whether the graph can be made planar, or if there *must* be an edge-crossing (or alternately, if the graph must be 3-dimensional).

[14:27:02.0000] <erlehmann>
TabAtkins, you mean compute if a graph is planar just by having a node list, using some simple rule ?

[14:27:03.0000] <TabAtkins>
erlehmann: As long as "simple" is less than "throw a computer at it to bruteforce it", yes.

[14:27:04.0000] <hober>
oh, my friend John wrote planarity.

[14:28:00.0000] <TabAtkins>
hober: Awesome!  Pass along my thanks.  I whiled away several hours with that.  In other news, I like untangling knots.

[14:29:00.0000] <Philip`>
http://en.wikipedia.org/wiki/Planarity_testing

[14:30:00.0000] <TabAtkins>
Ah, excellent.  I feared it might be a bad problem.  Wonderful.

[14:30:01.0000] <erlehmann>
oh, some guy i know took planarity, dumped the level files and wrote an application for a home-built multitouch-desk

[14:30:02.0000] <TabAtkins>
There are so many things that'll be great once surfaces get smart.

[14:31:00.0000] <TabAtkins>
If anyone's an RPG dork, there's a group writing a D&D 4e battlemat for MS's Surface.

[14:31:01.0000] <Philip`>
I hope they get smart enough to tell the difference between fingers and elbows and mugs

[14:31:02.0000] <erlehmann>
TabAtkins, if you have a multitouch display, install python-libavg and try this https://www.libavg.de/svn/trunk/avg_media/mtc/planarity/

[14:31:03.0000] <TabAtkins>
I don't, but I'll bookmark that.

[14:32:00.0000] <erlehmann>
or otherwise, if you ever come to berlin, the local hacker space has one ;)

[14:32:01.0000] <TabAtkins>
Man, where were you guys like 4 years ago when I was in Berlin?

[14:32:02.0000] <erlehmann>
better: one of the local hackerspaces ;)

[14:32:03.0000] <TabAtkins>
(For like 2 days, but still.)

[14:33:00.0000] <erlehmann>
the c-base existed 4 years ago. this software did not.

[14:33:01.0000] <TabAtkins>
I'll look you up next time I hop the ocean.  ^_^

[14:33:02.0000] <Philip`>
erlehmann: I don't seem to have the .dot files for the tree constructor graph

[14:33:03.0000] <erlehmann>
\o/

[14:34:00.0000] <erlehmann>
Philip`, aww sad thing.

[14:34:01.0000] <erlehmann>
i once used graphviz to document most of the relationships at our school

[14:34:02.0000] <TabAtkins>
That would be interesting.

[14:34:03.0000] <erlehmann>
that is, only the publicly known

[14:35:00.0000] <erlehmann>
for obvious reasons

[14:35:01.0000] <erlehmann>
wait, i can upload it (anonymiz'd)

[14:35:02.0000] <TabAtkins>
I have an urge to write something that will let me do planarity-type manipulation on arbitrary graphs.

[14:36:00.0000] <erlehmann>
oh shi-

[14:36:01.0000] <Philip`>
erlehmann: Hmm, but the code still compiles and produces a similar graph

[14:36:02.0000] <TabAtkins>
Should I learn <canvas> or just do it in DOM?

[14:36:03.0000] <TabAtkins>
(Probably the latter.)

[14:37:00.0000] <erlehmann>
TabAtkins, do it using SVG.

[14:37:01.0000] <TabAtkins>
I don't know SVG, though.  I'd have to learn that too.

[14:37:02.0000] <TabAtkins>
Though I *have* been meaning to learn SVG anyway.

[14:37:03.0000] <TabAtkins>
And I'm certain it can do better curvy lines.

[14:37:04.0000] <TabAtkins>
/me will start on it this weekend.

[14:38:00.0000] <TabAtkins>
And then I'll make your graphs all pretty-like.

[14:39:00.0000] <Philip`>
erlehmann: Oh, whoops, I already had a .dot uploaded

[14:39:01.0000] <Philip`>
http://philip.html5.org/misc/insertion-modes-3.dot

[14:39:02.0000] <erlehmann>
thank dou

[14:39:03.0000] <Philip`>
Also there's http://philip.html5.org/misc/insertion-modes-4.dot (newly generated) which is a bit different

[14:39:04.0000] <erlehmann>
i won't do the relationship-thingy btw. realized it isnt so anonymous after all

[14:39:05.0000] <ment>
yeah, graphing relationships rulez

[14:39:06.0000] <ment>
http://ibawizard.net/~thement/sapphic_map.jpg

[14:41:00.0000] <erlehmann>
haha ment. mine is like that, only that the bubbles contain full names and i also denoted one-way-crush and ONS etc.

[14:42:00.0000] <ment>
how did you collect data?

[14:42:01.0000] <erlehmann>
wait, that are only girls names

[14:42:02.0000] <erlehmann>
lesbians \o/

[14:43:00.0000] <TabAtkins>
Thus "sapphic"

[14:43:01.0000] <erlehmann>
ment, i know pretty much about relationships, but i asked around what could be deemed as „public“

[14:43:02.0000] <ment>
ah, gossip-graph

[14:43:03.0000] <erlehmann>
didn't include for examble my best friends one night stand with some guy that only settled for her because … its a long story

[14:44:00.0000] <erlehmann>
no, i asked the people directly

[14:44:01.0000] <erlehmann>
was at a boarding school

[14:44:02.0000] <erlehmann>
and bored in class

[14:52:00.0000] <erlehmann>
Philip`, sadly only dot produces meaningful results. too much chatter among these lines

[14:57:00.0000] <erlehmann>
nice :) http://img405.imageshack.us/img405/8049/html5dot.png

[14:59:00.0000] <TabAtkins>
Way to kill everyone, erlehmann.

[15:00:00.0000] <erlehmann>
hai guys

[15:00:01.0000] <gsnedders>
erlehmann: killa.

[15:00:02.0000] <erlehmann>
as if

[15:00:03.0000] <TabAtkins>
Bastard.

[15:00:04.0000] <erlehmann>
"too much chatter", hehehe

[15:07:00.0000] <TabAtkins>
Am I being dumb, or is there a way to unset a radio button group?

[15:08:00.0000] <gsnedders>
TabAtkins: Via UI? Scripting?

[15:08:01.0000] <TabAtkins>
Scripting.

[15:09:00.0000] <gsnedders>
TabAtkins: loop over all radio buttons and set checked to false?

[15:09:01.0000] <gsnedders>
(or maybe it's called something different)

[15:10:00.0000] <gsnedders>
checked

[15:11:00.0000] <TabAtkins>
Doesn't appear to work.  (I'm doing $("#foo input").removeAttr("checked").)

[15:11:01.0000] <gsnedders>
Not removeAttr

[15:11:02.0000] <TabAtkins>
Never mind, that does work.  Bug in my code, then.

[15:11:03.0000] <TabAtkins>
jQuery, silly.

[15:11:04.0000] <gsnedders>
I meant the DOM attribute, not the content attribute

[15:11:05.0000] <gsnedders>
But I guess content attribute should work too

[15:12:00.0000] <TabAtkins>
I don't usually have to understand the difference with jq, luckily.

[15:13:00.0000] <TabAtkins>
So the answer is that I was being stupid.  Forgot the # in front of #foo.

[15:13:01.0000] <gsnedders>
TabAtkins: jQuery doesn't save you from that

[15:14:00.0000] <gsnedders>
TabAtkins: You need a better framework obviously

[15:14:01.0000] <TabAtkins>
Obviously.  One which understands what I mean when I mistype a selector.

[15:14:02.0000] <gsnedders>
Yeah, I mean it's AI that makes HTML error-handling awesome.

[15:15:00.0000] <TabAtkins>
Couldn't code without the cool, metallic feel of it wrapped around me.

[15:15:01.0000] <gsnedders>
And Windows nowadays has HAL, so AI is spreading across the world!

[15:16:00.0000] <Philip`>
"nowadays"?

[15:16:01.0000] <TabAtkins>
On that note, http://www.cleverbot.com/ is the best chatterbot I've ever seen.

[15:16:02.0000] <Philip`>
Windows NT always had HAL

[15:16:03.0000] <gsnedders>
Philip`: I know.

[15:16:04.0000] <gsnedders>
Philip`: But in terms of widely-used releases, only two releases ago.

[15:17:00.0000] <Philip`>
Or, in all releases within the past decade

[15:17:01.0000] <gsnedders>
Philip`: What about ME?

[15:17:02.0000] <Philip`>
That doesn't exist

[15:18:00.0000] <roc>
dot can output SVG

[15:19:00.0000] <Philip`>
Like http://philip.html5.org/misc/insertion-modes-3.svg

[15:19:01.0000] <Philip`>
but the text overlaps the lines :-(

[15:20:00.0000] <TabAtkins>
Why don't I get scrollbars when I view that?  (In Chrome.)

[15:21:00.0000] <roc>
because Webkit follows a part of the SVG spec that makes no sense

[15:21:01.0000] <roc>
although I thought we got the spec changed

[15:21:02.0000] <TabAtkins>
I see.  So I need to bug that, I suppose.

[15:22:00.0000] <roc>
I seem to recall a bug on it, but I may be wrong

[15:22:01.0000] <roc>
Philip`: works for me, I guess you have different fonts. Just need to hack dot to use @font-face with a data: url

[15:24:00.0000] <roc>
unfortunately your graph suffers from the problem that dot doesn't try to do anything to keep the aspect ratio of the graph sane

[15:28:00.0000] <erlehmann>
i figured out it would be pretty boring … http://img21.imageshack.us/img21/3418/html5.png

[15:28:01.0000] <erlehmann>
jgraham, see? its a waste of time.

[15:30:00.0000] <TabAtkins>
Damn, I'm going to have to trawl the "Make XKCD slightly worse" thread to find that font again.

[15:31:00.0000] <TabAtkins>
Btw: "macically".

[16:03:00.0000] <erlehmann>
TabAtkins, its humor sans. sub-standard from a font geek perspective, but usable for xkcd-rip-offs.

[16:03:01.0000] <erlehmann>
i think it got published on the xkcd blog some time ago

[16:04:00.0000] <erlehmann>
err, the xkcd SUCKS blog

[16:08:00.0000] <jgraham>
erlehmann: Not a waste of time. And I don't really want the jokes or anything. I just want the drawing style

[16:08:01.0000] <jgraham>
and a signature

[16:09:00.0000] <erlehmann>
jgraham, well, then chat randall up on IRC. though last time I did that he took 9 hours to reply (time-zones, hah)

[16:09:01.0000] <jgraham>
(since the whole point is to have a cool physical artifact)

[16:09:02.0000] <erlehmann>
or, just do a little magic with the svg output of dot.

[16:10:00.0000] <erlehmann>
like, using humor sans and wiggling the points by a few pixals

[16:10:01.0000] <erlehmann>
then attend a convention and get it signed :D

[16:10:02.0000] <jgraham>
erlehmann: Not sonvinced that would work. "Hi do you fancy making a drawing of some huely complex state machine so that I can have a cool poster for my office wall?" "No." "Oh.")

[16:11:00.0000] <erlehmann>
i guess so, but you can try

[16:11:01.0000] <TabAtkins>
Oh, huh.  Well, xkcd forumites put together an actual font made from Randall's writing, too.

[16:11:02.0000] <erlehmann>
TabAtkins, is it better than humor sans?

[16:11:03.0000] <TabAtkins>
It's remarkably similar.

[16:11:04.0000] <jgraham>
erlehmann: Nothing fake is worthwhile. You seem to be missing the point that it only has aesthetic value and the aesthetic value of a fake is zero

[16:11:05.0000] <TabAtkins>
After all, I thought you were using it.

[16:12:00.0000] <TabAtkins>
jgraham: I challenge that assertion.

[16:12:01.0000] <jgraham>
OK, it's actually negative

[16:12:02.0000] <erlehmann>
jgraham, i challenge that assertion. i have produced some really funny xkcd fakes, jusf for shits and giggles. (and got "oh, when did that come out ?" :D)

[16:13:00.0000] <erlehmann>
and others have too, mostly satirically

[16:13:01.0000] <TabAtkins>
Aesthetics has little to nothing to do with provenance.

[16:13:02.0000] <jgraham>
In the sense that I would rather have something that looked different than something that was a fake-xkcd-style thing with the same information

[16:13:03.0000] <Philip`>
jgraham: If someone made a fake and told you it was real and sold it to you for lots of money, would it have more aesthetic value?

[16:14:00.0000] <erlehmann>
hah, we're getting philosophical \o/

[16:14:01.0000] <jgraham>
Philip`: Happens all the time in the art world. When the fake is discovered all the value is lost

[16:14:02.0000] <TabAtkins>
The monetary value is lost.  The aesthetic value isn't.  That's just silly to say.

[16:15:00.0000] <TabAtkins>
The fact that it has the same aesthetic value is the reason it was a successful fake in the first place.

[16:15:01.0000] <jgraham>
TabAtkins: No it's not. How many owners of fake painings do you think enjoy looking at them as much as they didwhen they believed they were non-fake

[16:16:00.0000] <TabAtkins>
That has nothing to do with aesthetics.  It's affected by an entirely different value.

[16:16:01.0000] <ment>
but not all good paintings were paint by one particular painter

[16:16:02.0000] <TabAtkins>
(Namely, that an original is inherently better than a copy.)

[16:16:03.0000] <jgraham>
Only if you have a very narrow definition of aesthetics.

[16:16:04.0000] <erlehmann>
jgraham, we live in a digital age. its all about information. in my room there is a laptop on which the first draft of the german pirate party was noted down, on the evening before founding of that party, in a beer garden. i do not consider that laptop as of great value (in fact, it is broken), but the information that was collected on it is really nice.

[16:16:05.0000] <TabAtkins>
(Also, that one has a painting that is worth a lot, rather than a fake worth relatively little.)

[16:17:00.0000] <TabAtkins>
Monetary value has a surprising, um, value to people.

[16:17:01.0000] <erlehmann>
my brother has a fake watch that looks expensive. it doesn't  make a difference for him.

[16:17:02.0000] <erlehmann>
neather for me.

[16:18:00.0000] <erlehmann>
jgraham, do you think that sentimental value is assigned to objects or to ideas of objects?

[16:19:00.0000] <jgraham>
Right so creuly briging up the original point again, having a fake-xkcd style diagram would be worthless /to me/. I would rather have a different style. Having a real one would be cool.

[16:19:01.0000] <jgraham>
/me doesn't know what an idea of an object is

[16:19:02.0000] <erlehmann>
jgraham, then chat up randall and ask if he does commissioned diagrams. just do it. its the only way to be sure.

[16:19:03.0000] <Philip`>
Having one which you believe is real would be just as cool

[16:20:00.0000] <jgraham>
Philip`: Yes. Until it was shown to be fake

[16:20:01.0000] <jgraham>
/me doesn't actually want this enough to do anything about it

[16:20:02.0000] <erlehmann>
i mean, for him its probably not a big deal. many artists work for hire.

[16:20:03.0000] <Philip`>
Lock it up in a private collection and don't let anyone look at it

[16:20:04.0000] <Philip`>
so they'll never have an opportunity to show it's fake

[16:23:00.0000] <erlehmann>
jgraham, an idea, well a concept. compare a person to the concept you have of that person internally. what is the entity you attach value to?

[16:23:01.0000] <erlehmann>
for me, it would be the idea. obv.

[16:24:00.0000] <Philip`>
What if I think no entity has any value at all?

[16:36:00.0000] <othermaciej>
the longdesc thread is long

[16:37:00.0000] <othermaciej>
I should probably catch up with it at some point

[16:37:01.0000] <erlehmann>
Philip`, you are nihilist. proceed to the reeducation chamber ASAP.


2009-10-30
[17:02:00.0000] <Philip`>
erlehmann: That's not a reeducation chamber, it's an incineration chamber

[17:02:01.0000] <Philip`>
You can't fool me that easily

[17:04:00.0000] <erlehmann>
Philip`, its perfecty safe. the WHATWG wishes to remind you that incineration state is not yet part of the spec.

[17:10:00.0000] <TabAtkins>
No one would happen to have an xp home sp3 license key, would they?  I'm reimaging a comp for a friend, and of course his windows disk is long gone.

[17:11:00.0000] <TabAtkins>
Alternately, a trustable iso for xp without any service packs.  I have a key for that.

[17:14:00.0000] <Philip`>
Don't computers normally have license keys printed in a sticker on the back or something?

[17:14:01.0000] <Philip`>
s/in/on/

[17:15:00.0000] <TabAtkins>
Yeah, but that's for xp home sp0.  The key won't work for a higher service pack.

[17:15:01.0000] <TabAtkins>
double alternately, I have an xp pro sp2 disk.  I have a surfeit of keys and disks, but none that match.

[17:33:00.0000] <MikeSmith>
can somebody who has IE7 or IE8 running please do a quick test of something for me?

[17:33:01.0000] <MikeSmith>
/me too lazy to start his Windows VM

[17:34:00.0000] <TabAtkins>
shoot

[17:53:00.0000] <CryptoQuick>
Reposted from #html (sorry!)-- Hello folks! I have a very specialized problem... while using canvas within foreignobject in SVG, I can't stack two canvases on top of each other and have the one behind it still be visible. one canvas I have markers and cursors and stuff that's updated often, then in the other is CPU-intensive, persistent stuff.

[17:53:01.0000] <CryptoQuick>
trying this doesn't work:

[17:53:02.0000] <CryptoQuick>
ctx.globalCompositeOperation("destination-over");

[17:53:03.0000] <CryptoQuick>
ctx.drawImage(bg, 0, 0, 1000, 800);

[17:56:00.0000] <erlehmann>
CryptoQuick, why don't you just have one canvas?

[17:56:01.0000] <erlehmann>
also, isn't this a browser-specific thing?

[17:56:02.0000] <CryptoQuick>
I'm trying that now, actually-- with save and restore?

[17:56:03.0000] <CryptoQuick>
browser-specific? no, I don't think so, it does the same in Firefox and WebKit

[17:56:04.0000] <erlehmann>
CryptoQuick, tried it with all of webkit, gecko and presto ?

[17:57:00.0000] <CryptoQuick>
I can try presto now, one sec

[17:57:01.0000] <CryptoQuick>
oh lord

[17:57:02.0000] <CryptoQuick>
I hope people don't use opera :P

[17:57:03.0000] <CryptoQuick>
it messed up my unicode! >:I

[17:57:04.0000] <CryptoQuick>
anyway

[17:58:00.0000] <CryptoQuick>
now my new approach is to draw the markers directly on the canvas, then restore it at the end of the function...

[17:58:01.0000] <CryptoQuick>
is that the right way to do it? :I

[17:59:00.0000] <erlehmann>
dunno. i'm no canvas expert.

[17:59:01.0000] <erlehmann>
CryptoQuick, i'd ask on mozilla IRC if i were you.

[17:59:02.0000] <CryptoQuick>
alrighty, thanks :)

[18:42:00.0000] <MikeSmith>
anybody running dev-channel Chrome on Linux? I've got 223.11 and my status bar seems to have completely disappeared.. wondering if it's a known issue

[19:04:00.0000] <MikeSmith>
http://www.indicthreads.com/3625/html-5-websocket-cracks-the-http-request-response-barrier/

[20:21:00.0000] <MikeSmith>
http://trac.tools.ietf.org/area/app/trac/wiki/IriWorkGoals

[20:26:00.0000] <Hixie>
/me goes cross-eyed trying to understand some of the e-mails on the hybi list

[20:29:00.0000] <MikeSmith>
Hixie: I just added links to the "Error handling in URIs" discussion thread on the uri⊙wo list from last year

[20:30:00.0000] <MikeSmith>
added to that wiki page, that is

[20:30:01.0000] <MikeSmith>
speaking of HyBi - http://trac.tools.ietf.org/bof/trac/wiki/HyBi

[20:56:00.0000] <othermaciej>
good evening

[21:05:00.0000] <MikeSmith>
othermaciej: so I'll be at both the HyBi and IRI BOFs on November 10 in Hiroshima, nominally representing W3C and the HTML WG. At some point between now and then, would like to make sure I'm synced up with others from the group to make sure I can try to make whatever points we want made

[21:05:01.0000] <MikeSmith>
Hixie also　↑

[21:05:02.0000] <Hixie>
yeah let's meet next week

[21:05:03.0000] <Hixie>
grab me at some point

[21:05:04.0000] <MikeSmith>
OK

[21:05:05.0000] <MikeSmith>
hai

[21:05:06.0000] <Hixie>
i'm gonna be running around like a headless chicken

[21:06:00.0000] <MikeSmith>
I know Larry has been working on try to put together some f2f time for IRI discussion next Thursday, but don't know that it's been decided yet or not (I've got some e-mail in my inbox to read yet)

[21:07:00.0000] <Hixie>
no decision that i've seen

[21:07:01.0000] <Hixie>
unicode is meeting at the same time in cupertino or something

[21:07:02.0000] <MikeSmith>
yeah

[21:07:03.0000] <Hixie>
some of us might have to take a ride down there at some point

[21:07:04.0000] <Hixie>
dunno what the story is

[21:08:00.0000] <MikeSmith>
I'll look into to.. figure out where it is at least

[21:09:00.0000] <MikeSmith>
anyway, I have to step out for bit now. back later

[21:11:00.0000] <othermaciej>
MikeSmith: I would be glad to chat about it sometime during the next week

[21:11:01.0000] <othermaciej>
Hixie: I'm sending Alexey to the Unicode meeting

[21:11:02.0000] <othermaciej>
at least, to the part that's supposed to be relevant to IDNA

[21:13:00.0000] <Hixie>
I hope they fix the mess that is IDNA2008

[21:13:01.0000] <Hixie>
making it incompatible with IDNA2003 is just so stupid

[21:14:00.0000] <othermaciej>
yeah the meeting is all about how to fix the security and compatibility issues caused by IDNA2008 changes

[21:14:01.0000] <othermaciej>
which led both Alexey and me to think, "in that case, why are we changing it?"

[03:24:00.0000] <gsnedders|work>
hsivonen: I realized I wasn't really going to be able to do it quickly enough for the script to really be worthwhile, and didn't do it

[03:26:00.0000] <hsivonen>
:-(

[03:38:00.0000] <hsivonen>
whoa. google paper-spams me to advertise Web advertising

[03:44:00.0000] <erlehmann>
  ┌─┐

[03:44:01.0000] <erlehmann>
  ┴─┴ 

[03:44:02.0000] <erlehmann>
  ಠ_̼ರೃ 

[03:44:03.0000] <erlehmann>
GENTLEMEN

[03:47:00.0000] <jgraham>
erlehmann: BTW the answer is both

[03:49:00.0000] <erlehmann>
jgraham, please elaborate on that in the context of the original-fake distinction

[03:51:00.0000] <erlehmann>
if the object you believed to me orininal turns out to be fake, does the object lose value? or does the idea of the object lose value and the objects value stays the same?

[03:51:01.0000] <erlehmann>
s/to me/to be/g

[03:57:00.0000] <jgraham>
erlehmann: The idea of the object loses value (where value is the personal worth I abscribe to it) because in the case of art it is the concept that is valuble (in the case of e.g. an oven it is the object itself that is valuble since the idea of an oven is useless for making food)

[03:58:00.0000] <erlehmann>
got it. thanks

[04:34:00.0000] <hsivonen>
I wonder if I should take the Google ad bait just to burn the 75 euros of "free" advertising credit on Validator.nu

[04:35:00.0000] <hsivonen>
there must be a catch, but I fail to see the catch

[04:37:00.0000] <gsnedders|work>
hsivonen: When I have more time I may look closer again

[05:02:00.0000] <Dashiva>
hsivonen: You get addicted to the added traffic and start paying for it

[05:32:00.0000] <hsivonen>
is http://www.w3.org/TR/MathML3/ the latest public MathML 3 draft?

[05:36:00.0000] <MikeSmith>
hsivonen: you mean WD? or editor's draft?

[05:41:00.0000] <hsivonen>
MikeSmith: whatever is the latest. probably ED

[05:42:00.0000] <MikeSmith>
hsivonen: I'm trying to look and see if I can find an ED

[05:43:00.0000] <hsivonen>
(it just seems useless to read WDs if EDs are public)

[05:43:01.0000] <hsivonen>
/me tried to google with site:dev.w3.org but failed

[05:43:02.0000] <zcorpan_>
their WG page didn't seem to point to any EDs

[05:44:00.0000] <hsivonen>
ok

[05:44:01.0000] <hsivonen>
maybe I should just read the WD, then

[05:48:00.0000] <MikeSmith>
hsivonen: they don't use dev.w3.org

[05:48:01.0000] <MikeSmith>
but I can't find where elsewhere they store them

[05:48:02.0000] <hsivonen>
MikeSmith: OK. thanks

[05:48:03.0000] <MikeSmith>
but anyway, I checked their member-only list

[05:49:00.0000] <MikeSmith>
there's no mention of an updated ED in their list archives

[05:49:01.0000] <hsivonen>
MikeSmith: I don't want to read anything secret, because I want to be able to discuss stuff if I find something to comment on

[05:49:02.0000] <MikeSmith>
hsivonen: yeah

[05:49:03.0000] <MikeSmith>
anyway, it does seem the WD is the latest

[05:50:00.0000] <zcorpan_>
hsivonen: you can discuss it in secret

[05:51:00.0000] <jgraham>
You could talk to yourself about it, for example

[05:51:01.0000] <hsivonen>
zcorpan_: I want to be able to whine here on IRC without going to #secrettreehouse.

[05:55:00.0000] <hsivonen>
aargh. need to find a way to kill the "click and hold Dock icon for Exposé" feature on SL

[05:55:01.0000] <hsivonen>
I've now triggered Exposé a zilloin times on SL without wanting to trigger it

[05:56:00.0000] <hsivonen>
s/oin/ion/

[05:57:00.0000] <Rik`>
hsivonen: i've never such an option

[05:57:01.0000] <Rik`>
and it's for your own good, they know what you want :)

[05:57:02.0000] <MikeSmith>
hsivonen: wait, how do you know about #secrettreehouse !?

[05:58:00.0000] <zcorpan_>
MikeSmith: he's part of the cabal

[05:58:01.0000] <MikeSmith>
/me shuts down #secrettreehouse and moves to #reallysecrettreehouse

[06:12:00.0000] <gsnedders|work>
MikeSmith: Where's that? Same location in the Amazon as the previous one, just higher up that tree?

[06:18:00.0000] <Philip`>
gsnedders|work: If he said, it would hardly be secret

[06:19:00.0000] <jgraham>
I thought Amazon keps all its treehouses in the Colouds these days

[06:19:01.0000] <jgraham>
*Clouds

[06:20:00.0000] <MikeSmith>
gsnedders|work: the old #secrettreehouse was actually in Romania

[06:20:01.0000] <gsnedders|work>
Surely they aren't treehouses then any more?

[06:20:02.0000] <MikeSmith>
former Bush administration extraordinary-rendition site

[06:20:03.0000] <MikeSmith>
the thing about the Amazon was a ruse

[06:20:04.0000] <gsnedders|work>
/me wonders whether to make some really obscure Twilight reference to the fact it used to be in Romania

[06:21:00.0000] <gsnedders|work>
I'd probably get it wrong though.

[06:22:00.0000] <MikeSmith>
/me reads some e-mail and wonders, Why can't people just love me for who I am?

[06:22:01.0000] <MikeSmith>
the only person in this whole thing who is more lovable than me is gsnedders|work 

[06:22:02.0000] <MikeSmith>
it's downhill from there

[06:23:00.0000] <gsnedders|work>
Obviously I should lose all my old-world romanticism and become more like everyone else.

[06:23:01.0000] <MikeSmith>
we should have a ranking

[06:24:00.0000] <MikeSmith>
Que es mas encantador?

[06:24:01.0000] <MikeSmith>
¿Senor gsnedders|work o Senor MikeSmith?

[06:27:00.0000] <MikeSmith>
dammit... 22:30 and I'm getting kicked of the Starbucks terrace at Ebisu station

[06:27:01.0000] <MikeSmith>
now have to find somewhere else to steal electricity

[06:28:00.0000] <gsnedders|work>
"There are no tears/Just pity and fear"

[06:30:00.0000] <MikeSmith>
that's a bright thought

[06:30:01.0000] <MikeSmith>
gsnedders|work: see, that's why people love you

[06:34:00.0000] <MikeSmith>
whiskey

[07:01:00.0000] <Dashiva>
I didn't see this one posted anywhere: http://www.flickr.com/photos/mrlastweek/4014327734/

[07:06:00.0000] <TabAtkins>
Dashiva: ::sigh::

[07:45:00.0000] <Dashiva>
The ARIA discussions are so wobbly

[07:45:01.0000] <Dashiva>
On one hand, ARIA is supposed to be really good and useful. But on the other hand, there's a constant refrain of "We can't do that, because it would require tools to support ARIA"

[07:46:00.0000] <Dashiva>
You'd think supporting core accessibility technology would be a given for accessibility tools

[07:57:00.0000] <mikekelly>
hi fans

[07:58:00.0000] <mikekelly>
what was the upshot of the discussion about http authorization - did anything change?

[08:35:00.0000] <gsnedders|work>
Wow, it's dark outside.

[08:36:00.0000] <gsnedders|work>
Halloween must be upon us!

[08:36:01.0000] <Phae>
you up in the highlands?

[08:36:02.0000] <gsnedders|work>
Phae: Linköping

[08:36:03.0000] <Phae>
oh. i thought you were UK somewhere.

[08:36:04.0000] <Phae>
fair dos.

[08:36:05.0000] <gsnedders|work>
Phae: I have more sense than to be in the highlands over Halloween

[08:36:06.0000] <Phae>
:)

[08:36:07.0000] <gsnedders|work>
Phae: Until June I was at secondary school in St Andrews, where I'd lived me entire life. Then some idiot at Opera decided to give me a job. :P

[08:37:00.0000] <gsnedders|work>
(So, yes, I was in the UK somewhere)

[08:39:00.0000] <Phae>
ah, ok. that's what i thought

[08:54:00.0000] <TabAtkins>
Hmm, I didn't realize that anchor links counted as "relative" for the purpose of <base>.

[08:54:01.0000] <TabAtkins>
That sort of sucks.

[09:07:00.0000] <AryehGregor>
That is a pain.

[09:08:00.0000] <Philip`>
TabAtkins: Why would they be anything other than relative links?

[09:08:01.0000] <TabAtkins>
Philip`: Because they're anchor links, which in my mind is a third category.  No page is named at all.

[09:08:02.0000] <AryehGregor>
The point is that clicking them shouldn't navigate to a different page if <base> is specified.  That's unexpected.

[09:09:00.0000] <AryehGregor>
Of course, <base> is kind of evil anyway except for testing.

[09:09:01.0000] <gsnedders|work>
I don't think using it for testing makes it less evil, it's just there's no less evil way of doing the testing

[09:09:02.0000] <TabAtkins>
Heh, <base> is really useful to me, actually.  It lets me rewrite the hierarchy of my site without caring about all the links in content.

[09:46:00.0000] <Philip`>
/me decides to append his initials to bug reports, so that he has a non-zero chance of finding them all again

[11:01:00.0000] <MikeSmith>
/me wonders if [pt] is a representation for the sound of spitting

[11:03:00.0000] <MikeSmith>
e.g., "the script would run when the attribute was set, not when the element was ; appended" [sound of spitting]

[11:08:00.0000] <Philip`>
Quite possibly

[11:09:00.0000] <Philip`>
It's useful as a unique string to search on, since not many other people spit on their bugs

[11:18:00.0000] <MikeSmith>
Philip`: I'm going to start to put [pt] on my bugs

[11:18:01.0000] <MikeSmith>
or [ppppt]

[11:18:02.0000] <MikeSmith>
for extra "p"

[14:46:00.0000] <ap>
hsivonen: is http://www.w3.org/Bugs/Public/show_bug.cgi?id=7059#c20 still what we need to do?

[15:31:00.0000] <ap>
Hixie: DTD parsing is optional, but if a UA supports entities in normal parsed source (as we do), why not support them in innerHTML?

[15:31:01.0000] <Hixie>
you shouldn't support them in normal parsed source either, imho

[15:34:00.0000] <ap>
Hixie: besides, an entity could be declared in internal subset, which isn't optional to parse IIRC. if the spec just said that the DTD should be taken from target, both cases would work automatically

[15:34:01.0000] <Hixie>
i guess

[15:36:00.0000] <ap>
Hixie: not supporting &nbsp; and friends is not really an option for us, because they work in Firefox

[15:36:01.0000] <Hixie>
it bugs me that xml left this massive interop hole

[15:37:00.0000] <Hixie>
i don't really mind how we fill it

[15:37:01.0000] <ap>
Hixie: you could document what WebKit does :)

[15:37:02.0000] <Hixie>
but we need to make it clear what browsers and other XHTML UAs are to do

[15:37:03.0000] <ap>
Hixie: i.e. hardcode known XHTML DTDs and support character entities

[15:37:04.0000] <Hixie>
i guess i have to bite the bullet and "profile" XML

[15:40:00.0000] <Dashiva>
That sounds like the author-friendly solution

[15:41:00.0000] <Hixie>
ap: can you file a bug or send a mail or something asking me specifically to define how entities are to be parsed by XHTML5 UAs?

[15:41:01.0000] <Hixie>
ap: (if you send mail, send it to public-html so that all the "you can't profile xml!!!!!" people see it and can raise a stink now rather than once i put it in the spec "without discussion")

[15:44:00.0000] <ap>
Hixie: ok

[15:44:01.0000] <ttepasse>
I declare: We need an appendix of the HTML5 parsing algorithm expressed in State Chart XML.

[15:44:02.0000] <Hixie>
ttepasse: if you can provide one (and instructions on how to keep it up to date when the spec changes), i'm happy to add it to the spec :-)

[15:45:00.0000] <ttepasse>
That sound's like work. I just like to see it for my personal amusement. ;)

[15:47:00.0000] <Dashiva>
I'm sure Philip` can drum something up eventually

[15:47:01.0000] <Dashiva>
He's the go-to guy on weird stuff like that :)

[15:48:00.0000] <ttepasse>
Can he do EmotionML on HTML5?

[15:48:01.0000] <ttepasse>
(Sorry, catching up on W3C news ...)

[16:08:00.0000] <Philip`>
It's easy to encode the HTML5 parser as a state machine

[16:08:01.0000] <Philip`>
Start with an initial, then for every HTML document add a transition labelled with that document as a string, leading to a node which is associated with the appropriate DOM

[16:08:02.0000] <Philip`>
s/initial/initial state/

[16:14:00.0000] <Dashiva>
Actually

[16:14:01.0000] <Dashiva>
By what metric are we judging?

[16:14:02.0000] <Dashiva>
Because I don't think that parser would fit on my hard drive


2009-10-31
[18:09:00.0000] <MikeSmith>
Hixie: in your description of the Web development model, I don't understand what the distinction is between event-based and stream-based

[18:10:00.0000] <MikeSmith>
wondering what is an example of something that's stream-based that's not also event-based

[18:10:01.0000] <Hixie>
TCP

[18:10:02.0000] <MikeSmith>
ah

[18:10:03.0000] <Hixie>
event-based may be the wrong terminology

[18:11:00.0000] <Hixie>
maybe poll vs push is more the right comparison?

[18:11:01.0000] <Hixie>
browsers use an event loop, so scripts get notified of things

[18:11:02.0000] <Hixie>
socket-based programming usually boils down to a select() loop somewhere

[18:12:00.0000] <Hixie>
i.e. the program waits for data to be ready

[18:12:01.0000] <Hixie>
now, we could just fire an event each time a packet comes in, i guess

[18:13:00.0000] <Hixie>
but that doesn't really fit the way the platform usually works

[18:13:01.0000] <MikeSmith>
yeah, let's do that

[18:14:00.0000] <Hixie>
it also makes it harder to handle binary data later when we introduce it

[18:14:01.0000] <Dashiva>
Let's fire an event every cycle, even if there isn't a packet

[18:16:00.0000] <MikeSmith>
Hixie: hey yeah, about that, it would seem like a good idea to have that on the agenda for joint f2f discussion with TC 39 folks at TPAC

[18:18:00.0000] <Hixie>
a higher priority would be to get them to stop introducing new modes

[18:18:01.0000] <Hixie>
but i'm not holding out much hope there either :-(

[18:23:00.0000] <othermaciej>
I need to write up some sort of rough proposal for binary data

[18:23:01.0000] <othermaciej>
also for how to allow WebKit/Opera-style objects that masquerade as undefined

[18:25:00.0000] <Dashiva>
Are there any plans (solid or not) for 3D SVG?

[18:25:01.0000] <MikeSmith>
othermaciej, Hixie: I wondering if we should open a bugzilla bug for tracking Alexey's entities-in-XHTML issue

[18:26:00.0000] <MikeSmith>
Dashiva: there was a related draft of some kind a while back

[18:26:01.0000] <othermaciej>
it should go in bugzilla, yes

[18:26:02.0000] <MikeSmith>
/me goes too look

[18:26:03.0000] <othermaciej>
I can suggest that to him

[18:26:04.0000] <MikeSmith>
OK

[18:26:05.0000] <Hixie>
MikeSmith: fine by me, i am just hoping we can get the people who are going to complain about this to complain before i make the change

[18:27:00.0000] <Hixie>
because i'm tired of people saying that we don't have discussion first

[18:27:01.0000] <MikeSmith>
complain early, complain often

[18:28:00.0000] <Dashiva>
I can imagine a complaint that you're trying to sidetrack complaints of acting unilaterally

[18:29:00.0000] <MikeSmith>
them song: Willie Mabon's "I Don't Know" .. "What should I say to make you mad this time?"

[18:29:01.0000] <MikeSmith>
*theme

[18:30:00.0000] <Dashiva>
Oh Mikey

[18:32:00.0000] <Dashiva>
Do you know why google translate would translate wtf into 博?

[18:38:00.0000] <MikeSmith>
Dashiva: no clue

[18:39:00.0000] <MikeSmith>
weird

[18:47:00.0000] <MikeSmith>
Dashiva: at least if you put a question mark it gets it right

[18:48:00.0000] <MikeSmith>
一体何だ

[19:01:00.0000] <MikeSmith>
JoePeck: the Event Listeners pane is mighty cool

[19:02:00.0000] <JoePeck>
MikeSmith: yah, debugging event listeners should plague me a lot less now =)

[02:31:00.0000] <hsivonen>
Hixie: for entities in XML, the Gecko way can be implemented with any compliant XML parser without having to profile off-the-shelf parser software

[02:35:00.0000] <Philip`>
Dashiva: 3D SVG sounds like X3D

[02:36:00.0000] <hsivonen>
the entity thing is going to be "fun"

[02:37:00.0000] <hsivonen>
there will be a faction that'll complain that the WHATWG tries to kill XML by insisting on a pure XML parser (no entitites)

[02:38:00.0000] <hsivonen>
and there will be another faction that'll complain about the WHATWG changing/profiling XML

[02:39:00.0000] <hsivonen>
the real solution is that xml-core defines XML5 with HTML5-like tokenization including all the MathML 3 entitities hard-wired

[02:39:01.0000] <hsivonen>
the other real solution is to use text/html 

[02:42:00.0000] <hsivonen>
for avoidance of ambiguity, above "by insisting" meant the WHATWG doing the insisting to use a pure XML parser

[02:47:00.0000] <Hixie>
so should innerHTML support the entities in XML?

[02:48:00.0000] <Hixie>
should it depend on whether there's a DOCTYPE present?

[02:48:01.0000] <Hixie>
what FPIs should be recognised?

[02:48:02.0000] <Hixie>
etc.

[02:48:03.0000] <Hixie>
however you cut it, it's a profile

[02:52:00.0000] <hsivonen>
Hixie: my general feeling is that the XML code path is a legacy thing. the XML Web that never came. I'd rather not spend time polishing it by adding entitities to innerHTML

[02:52:01.0000] <Hixie>
then you'd better remove it from firefox :-)

[02:53:00.0000] <hsivonen>
Hixie: however, you can add entity support withou profiling XML

[02:53:01.0000] <Hixie>
because the webkit guys are saying they need it for compat with firefox

[02:53:02.0000] <Hixie>
how?

[02:53:03.0000] <hsivonen>
Hixie: whoa! does Gecko support entities in innerHTML?

[02:53:04.0000] <Hixie>
it's what i'm told

[02:53:05.0000] <hsivonen>
eww

[02:54:00.0000] <hsivonen>
Hixie: by feeding a doctypeless XML document to the XML processor and expanding entities by intercepting the undeclared entity non-errors on the application layer

[02:55:00.0000] <Hixie>
i'd call that a profile, but ok

[02:55:01.0000] <hsivonen>
skippedEntity in SAX

[02:55:02.0000] <hsivonen>
Hixie: the skippedEntity callback flows directly from the XML spec

[02:55:03.0000] <hsivonen>
Hixie: it's totally spec-based

[02:55:04.0000] <Hixie>
sure but requiring that something be done based on it is a different matter

[02:55:05.0000] <Hixie>
i'm not against it

[02:55:06.0000] <Hixie>
i should clarify

[02:55:07.0000] <Hixie>
i'm quite happy to profile other specs

[02:56:00.0000] <Hixie>
i'm just expecting complaints

[02:56:01.0000] <hsivonen>
I've been agains making skippedEntity processing part of a spec for years

[02:56:02.0000] <hsivonen>
but now it seems it's a lesser evil than profiling XML itself

[02:57:00.0000] <hsivonen>
Hixie:like I said above, there will be at least two mutually-unpleasable factions

[02:57:01.0000] <Hixie>
as usual

[02:57:02.0000] <hsivonen>
I guess I should read the code to see what Gecko does for entities in innerHTML

[02:58:00.0000] <hsivonen>
I'm very surprised at the allegation that they'd get expanded

[02:58:01.0000] <jgraham>
to be fair as an author you would expect entities to work in innerHTML

[02:58:02.0000] <jgraham>
It would be highly surprising if they didn't

[02:59:00.0000] <hsivonen>
jgraham: only if you don't know the XML spec well

[02:59:01.0000] <jgraham>
hsivonen: How many authors know the XML spec well?

[02:59:02.0000] <hsivonen>
jgraham: are you suggesting there are people using XML without knowing what they've gotten themselves into?

[03:00:00.0000] <jgraham>
Heh

[03:00:01.0000] <jgraham>
But yeah, the right solution is to not use XML on the web

[03:03:00.0000] <Philip`>
Does innerHTML let you do stuff like <div xmlns:foo="..."></div> ... div.innerHTML = "<foo:bar/">?

[03:15:00.0000] <hsivonen>
Philip`: IIRC, yes

[03:22:00.0000] <Philip`>
If it does context-dependent parsing in that case, so it's mostly equivalent to writing the text into the original markup, I'd expect it to support entities in the same way

[03:22:01.0000] <Philip`>
(as an author)

[03:23:00.0000] <hsivonen>
I guess once you have a synthetic root element having a synthetic doctype isn't far away

[03:24:00.0000] <hsivonen>
aside: treating SVG and MahtML in text/html as precedent for X3D in text/html misses the point majorly

[03:24:01.0000] <hsivonen>
the above-DOM part of SVG and MathML existed already

[03:24:02.0000] <hsivonen>
not so for X3D

[03:34:00.0000] <Philip`>
It seems the first job would be to make the above-DOM part exist in browsers, and just use it in XHTML for now

[03:35:00.0000] <Philip`>
which seems to be what the X3D people are currently thinking about

[03:35:01.0000] <Philip`>
and that's probably enough to keep them busy for a few years

[03:36:00.0000] <hsivonen>
well, first one should make a use-case-based case for having a retained-mode 3D engine with a standard model serialization as part of the browser

[03:36:01.0000] <hsivonen>
as opposed to shipping your engine of choce as JS to the browser and the browser having WebGL

[03:36:02.0000] <hsivonen>
(totally violates the Rule of Least Power, of course)

[03:37:00.0000] <hsivonen>
s/choce/choice/

[03:37:01.0000] <Philip`>
Doing it in JS doesn't remove any of the questions about how the markup should work and how it should be integrated into the document - that just seems like an implementation detail

[03:38:00.0000] <hsivonen>
Philip`: why does it need to be in the markup instead of being a separate HTTP resource retrieved via XHR?

[03:38:01.0000] <hsivonen>
if the engine is in JS, you've already lost declarativity 

[03:40:00.0000] <Philip`>
hsivonen: I guess for the same reasons SVG needs to be in the markup

[03:42:00.0000] <hsivonen>
Philip`: does the analogy work with 3D? is 3D expected to integrate into the CSS formatter canvas on as low a level as SVG?

[03:42:01.0000] <hsivonen>
Philip`: also, the case for SVG itself is a bit shaky

[03:42:02.0000] <hsivonen>
Philip`: more like people want it rather than here's a good reason to want it

[03:47:00.0000] <gsnedders>
/me wonders whether to work on DOM Core or html5lib today

[03:47:01.0000] <gsnedders>
(I'll work on the other tomorrow)

[04:01:00.0000] <gsnedders>
/me thinks he's finished updating the html5lib tokenizer now

[04:02:00.0000] <hsivonen>
gsnedders: to new script text stuff?

[04:02:01.0000] <gsnedders>
yeah

[04:02:02.0000] <hsivonen>
cool

[04:02:03.0000] <hsivonen>
are test cases up-to-date, too?

[04:02:04.0000] <gsnedders>
No

[04:02:05.0000] <hsivonen>
not so cool

[04:02:06.0000] <gsnedders>
Indeed

[04:03:00.0000] <gsnedders>
Several of the contentModelFlags tests fail, unsurprisingly :P

[04:04:00.0000] <jgraham>
gsnedders: It sounds you are already working on hml5lib Given the implied exclusivity in your question I think we can leave the job of answering to lady logic

[04:04:01.0000] <gsnedders>
jgraham: Well, I hadn't started when I asked that question

[04:06:00.0000] <Mathias__>
Sup guys

[04:07:00.0000] <hsivonen>
jgraham: lady logic?

[04:07:01.0000] <Mathias__>
I was wondering why HTML5 doesn't introduce <link rel="script"> or something similar

[04:07:02.0000] <Mathias__>
A solution that doesn't require an unnecessary closing tag, like <script src="foo"> does at the moment

[04:07:03.0000] <hsivonen>
Mathias__: because <script src> already works

[04:09:00.0000] <Mathias__>
Yeah, but it requires a closing tag, even if it's just used to link to an external file

[04:09:01.0000] <Mathias__>
In which case the parser ignores anything in between the starting and closing tags anyway

[04:10:00.0000] <hsivonen>
Mathias__: it's backwards-compatible

[04:10:01.0000] <gsnedders>
Mathias__: $yourOtherSyntax doesn't work today. <script src> already does. What is gained by having a new syntax that doesn't already work?

[04:11:00.0000] <Mathias__>
hsivonen, gsnedders: It would be perfectly possible to make something like <link rel="script"> backwards compatible through JavaScript

[04:11:01.0000] <gsnedders>
Maurice: Requiring </script> is far from the ugliest thing in HTML.

[04:13:00.0000] <Mathias__>
The advantage would be not having to use </script> when you're just linking to another file anyway. Cleaner code. Linking JavaScript files would be more similar to linking stylesheets

[04:13:01.0000] <gsnedders>
Mathias__: <script> is exectued as soon as it is added to the document, that wouldn't be.

[04:13:02.0000] <Philip`>
Mathias__: "backwards compatible through script" - doesn't that defeat the point of having a cleaner syntax for including scripts? :-)

[04:13:03.0000] <gsnedders>
Mathias__: Which is internally inconsistent within HTML. (If you made it do consistent in the spec, you couldn't make it work through JS.)

[04:13:04.0000] <Philip`>
Now you've got to include the script, *and* the script that loads the script

[04:14:00.0000] <hsivonen>
Mathias__: <link rel="script" href=""> is 27 characters.  <script src=""></script> is 24 characters.

[04:14:01.0000] <Mathias__>
The same thing can be said about any new HTML5 feature

[04:14:02.0000] <Mathias__>
hsivonen, I'm not saying it's shorter, I'm saying it would make more sense when compared to how stylesheets are inserted

[04:15:00.0000] <hsivonen>
Mathias__: see topic

[04:15:01.0000] <Mathias__>
hsivonen: You got me there :(

[04:15:02.0000] <krijnh>
\o/

[04:16:00.0000] <Mathias__>
CSS inline: <style></style>

[04:16:01.0000] <Philip`>
Mathias__: Many new HTML5 features can't be properly implemented with scripts, since they're not just new syntax for old features, so you can't say the same about all of them

[04:16:02.0000] <Mathias__>
Linking to CSS: <link rel="stylesheet" src="">

[04:17:00.0000] <Mathias__>
JS inline: <script></script>

[04:17:01.0000] <Mathias__>
Linking to JS: <script src=""></script>

[04:17:02.0000] <Philip`>
Mathias__: (You mean href in link)

[04:17:03.0000] <Mathias__>
Philip`: Whoops, I stand corrected :)

[04:18:00.0000] <Philip`>
Mathias__: The attribute names aren't that consistent :-)

[04:18:01.0000] <Mathias__>
But you get my point, right? It just seems like an anomaly to me

[04:18:02.0000] <Mathias__>
Philip`: My point exactly

[04:18:03.0000] <gsnedders>
It's no less an anomaly than half the other things in HTML

[04:18:04.0000] <Philip`>
That doesn't make it not an anomaly

[04:18:05.0000] <Philip`>
Just probably not one that's worth fixing

[04:18:06.0000] <gsnedders>
Philip`: I'm not saying it isn't one.

[04:18:07.0000] <Mathias__>
What Philip` said

[04:19:00.0000] <Mathias__>
gsnedders: You're saying this shouldn't be an issue because there are bigger / more important “problems”

[04:19:01.0000] <hsivonen>
Mathias__: compatibility trumps consistency

[04:19:02.0000] <gsnedders>
HTML is completely inconsistent, and the cost of fixing all of them would be prohibitively high. There just isn't that much gained by fixing them all, especially more minor ones such as this.

[04:20:00.0000] <krijnh>
XHTML2 fixes all of this Mathias__

[04:22:00.0000] <jgraham>
/me still gets the </script> thing wong sometimes

[04:22:01.0000] <jgraham>
*wrong

[04:22:02.0000] <jgraham>
But i still isn't worth fixing

[04:22:03.0000] <jgraham>
it

[04:22:04.0000] <gsnedders>
Mathias__: If you came up with a version of HTML that fixed all the inconsistencies it would bear little resemblance to HTML 4.01. The cost of creating a new language is very high. HTML is a mess due to having things hacked on left, right, and centre by most vendors, but nothing short of a total redesign of the language will fix that.

[04:22:05.0000] <jgraham>
Gah

[04:23:00.0000] <Philip`>
At least HTML is quite consistently inconsistent

[04:23:01.0000] <Philip`>
If you cleaned up part of it then it's be inconsistently inconsistent

[04:23:02.0000] <gsnedders>
Mathias__: As XHTML proved, a fairly minor redesign of the language, only touching the syntax, just didn't get the uptake. HTML, and the whole mess of compatibility it brings with it, just isn't going to go away.

[04:25:00.0000] <Mathias__>
I don't understand… Even the simplest new features of HTML5 require JS to make them work in older browsers

[04:25:01.0000] <Mathias__>
Why would it be so bad to introduce one more new thing in HTML5 which could be backwards compatible in the very same way? 

[04:26:00.0000] <gsnedders>
Mathias__: What new features are recreations of existing features?

[04:26:01.0000] <Philip`>
gsnedders: <meta charset>

[04:27:00.0000] <gsnedders>
Philip`: That don't already work in browsers. :)

[04:27:01.0000] <Philip`>
It don't?

[04:27:02.0000] <Philip`>
Did you mean the opposite?

[04:27:03.0000] <gsnedders>
Philip`: You know what I mean, dammit.

[04:28:00.0000] <Mathias__>
gsnedders: <header> is a recreation of <div id="header">. The same goes for other HTML5 elements

[04:28:01.0000] <krijnh>
(It is for <div class="header">, I hope)

[04:28:02.0000] <Mathias__>
krijnh: Oh shut it! You get my point :p

[04:28:03.0000] <gsnedders>
What new features are there in HTML 5 that are recreations of existing features that don't work in browsers today?

[04:29:00.0000] <gsnedders>
Mathias__: It's not, at all. One has semantic meaning and an effect on semantics, the other does not.

[04:29:01.0000] <Philip`>
<header> doesn't work in most browsers today

[04:29:02.0000] <jgraham>
Mathias__: Not really. At least for sectioning elements they are really a new concept

[04:29:03.0000] <Philip`>
if by "work" you mean "is stylable"

[04:29:04.0000] <jgraham>
Philip`: depends wht you mean by "most"

[04:30:00.0000] <krijnh>
gsnedders: Microdata? :]

[04:30:01.0000] <Philip`>
jgraham: Weighted by number of users

[04:32:00.0000] <Mathias__>
gsnedders: Ok, so it's not a recreation of existing features. My point exactly. This completely new feature can "work" in every single browser by using JavaScript

[04:33:00.0000] <Mathias__>
Why would it be so bad to introduce another new thing, that can be made backwards compatible in the same way?

[04:34:00.0000] <Philip`>
Mathias__: I don't think it could be implemented in JS in a way that is compatible with the behaviour it should have when implemented natively

[04:34:01.0000] <gsnedders>
If you want it to work the same as <script  src>, how do you get: <link rel=script href=foo.js><script>alert(foo)</script> (where foo.js contains "var foo = 1") to work?

[04:34:02.0000] <gsnedders>
/me doesn't either

[04:34:03.0000] <Philip`>
e.g. document.write probably wouldn't work

[04:36:00.0000] <Mathias__>
Hmm, good point, I hadn't thought of that

[04:37:00.0000] <Mathias__>
Don't know if that's possible at all, or not

[04:37:01.0000] <krijnh>
I don't understand why you would even try all this mess

[04:37:02.0000] <krijnh>
Just so that we can ditch </script> in about 20 years

[04:40:00.0000] <krijnh>
So, next issue? :)

[04:40:01.0000] <Philip`>
/me really doesn't want to be using HTML in 20 years from now

[04:40:02.0000] <gsnedders>
The adoption agency algorithm is impossible to understand.

[04:41:00.0000] <Philip`>
gsnedders: At least you're using a language where you can transcribe the algorithm into code

[04:41:01.0000] <Philip`>
and you don't have to reverse-engineer it into a side-effect-free functional form :-p

[04:42:00.0000] <gsnedders>
Philip`: n00b :P

[04:45:00.0000] <Philip`>
http://canvex.lazyilluminati.com/svn/tokeniser/treeconstructor_interp.ml (the "let rec adoptionAgency name state =" bit)

[06:10:00.0000] <krijnh>
gsnedders: (when) will your outliner be integrated in the w3.org checker?

[06:10:01.0000] <krijnh>
Or in validator.nu

[06:19:00.0000] <gsnedders>
krijnh: I assume not, as Python is rather hard to integrate into Perl/Java :)

[06:21:00.0000] <Dashiva>
jpython?

[06:21:01.0000] <Dashiva>
Or jython or whatnot

[06:21:02.0000] <gsnedders>
Dashiva: I rely upon specific C extensions for CPython

[06:22:00.0000] <krijnh>
Then port it :)

[06:45:00.0000] <jgraham>
gsnedders: lxml?

[06:54:00.0000] <gsnedders>
jgraham: ya

[07:00:00.0000] <Dashiva>
Aren't there native python parsers available, though?

[07:01:00.0000] <jgraham>
Dashiva: Nothing so good

[07:01:01.0000] <jgraham>
But gsnedders could probably swap it for ElementTree with some efort

[07:02:00.0000] <jgraham>
(no parent pointers is rather a drag)

[07:04:00.0000] <Philip`>
Seems easier just to rewrite the algorithm in Java

[07:05:00.0000] <Philip`>
and far less hassle than trying to integrate Jython into validator.nu

[07:11:00.0000] <jgraham>
Yes

[07:12:00.0000] <hsivonen>
is the algorithm stable no?

[07:13:00.0000] <jgraham>
hsivonen: Well it is in LC...

[07:34:00.0000] <ment>
gsnedders: adoption agency is easy, if you rewrite it into one-pass forward form

[07:36:00.0000] <jgraham>
/me would like to see an "easy" version of the AAA

[07:44:00.0000] <jgraham>
http://james.html5.org/microdata/ microdata parser, halloween editon

[07:45:00.0000] <jgraham>
The RDF output seems o be somewhat broken

[07:45:01.0000] <Dashiva>
<type 'exceptions.AttributeError'>

[07:45:02.0000] <jgraham>
Amongst other things

[07:45:03.0000] <erlehmann>
ahaha oh wow

[07:46:00.0000] <jgraham>
(I have only tried the O'Reilly example from the spec, and that only enough to determine that it is m

[07:46:01.0000] <Dashiva>
'Item' object has no attribute 'doc'

[07:46:02.0000] <jgraham>
s/m/n/

[07:46:03.0000] <jgraham>
ot quite right

[07:46:04.0000] <jgraham>
Dashiva: url?

[07:46:05.0000] <Dashiva>
I just pressed submit on that page

[07:46:06.0000] <jgraham>
Oh I didn't try that yet :)

[08:02:00.0000] <jgraham>
Dashiva: It now does something if you press the button without changing anything

[08:03:00.0000] <jgraham>
It isn't the _right_ thing

[08:03:01.0000] <jgraham>
But it is something

[08:03:02.0000] <Dashiva>
Well, it did something earlier too

[08:03:03.0000] <jgraham>
OK something other than throw an error

[08:04:00.0000] <Dashiva>
At least the error was an obvious sign that the output was incorrect, rather than subtle bugs :P

[08:06:00.0000] <jgraham>
Good reason to get everyone else to tell me what all the subtle bugs are now so I don't have o find them all myself

[08:10:00.0000] <ment>
jgraham: http://codepad.org/F7SaXBiD that's the "easy" version of AAA algorithm (it does only two forward passes over the data)

[08:25:00.0000] <gsnedders>
Man, this flat is ridiculous in quite a few ways.

[08:32:00.0000] <TabAtkins>
Man, old JS is ridiculous in quite a few ways.

[08:33:00.0000] <Philip`>
New JS too

[08:33:01.0000] <TabAtkins>
I really can't believe that anyone, *ever*, thought it was a good idea to put elements with @name as variables in the global scope.

[08:34:00.0000] <TabAtkins>
/me is helping a newb with coding style.  She has obviously been trained by js tutorials from 1995.

[08:34:01.0000] <gsnedders>
/me guesses it's more someone thought it was a good idea to put them on window and then they got into the global scope as a side-effect.

[08:34:02.0000] <TabAtkins>
Putting them on window is an equally bad idea.

[08:49:00.0000] <Philip`>
TabAtkins: You can't believe people thought <a href="contact.htm" onmouseover="contactbutton.src='contact-in.gif'" onmouseout="contactbutton.src='contact.gif'"><img src="contact.gif" name="contactbutton"></a> was a good idea?

[08:49:01.0000] <TabAtkins>
No.  No I cannot.

[08:49:02.0000] <Philip`>
and they ought to write onmouseover="document.getElementsByName('contactbutton')[0].src='contact-in.gif'" etc?

[08:50:00.0000] <Philip`>
As far as I can remember, changing images was pretty much the only thing you could do with JS when it was introduced

[08:51:00.0000] <TabAtkins>
They ought to write <a href="contact.htm" id=foo>Contact Us</a><style>#foo { background: url(contact.gif); } #foo:hover { background: url(contact-in.gif); }</style>

[08:52:00.0000] <Dashiva>
You're funny

[08:54:00.0000] <TabAtkins>
The funny thing is that mine seems *ridiculously* easier to me.  And yet we have people asking for presentational HTML because CSS is too hard.

[08:54:01.0000] <Philip`>
TabAtkins: Need to add width:150; height:50; too

[08:55:00.0000] <Philip`>
(Obviously you wouldn't put "px" on it)

[08:55:01.0000] <TabAtkins>
Philip`: True.  That can be avoided if I use content instead of background.

[08:55:02.0000] <Dashiva>
And content support was added in 1997?

[08:55:03.0000] <Philip`>
TabAtkins: That doesn't even work in many current browsers, never mind Netscape 2 :-p

[08:55:04.0000] <Philip`>
(or 3 or whatever it was)

[08:56:00.0000] <TabAtkins>
Philip`: Indeed, which is why I didn't use it in my example.  ^_^

[08:56:01.0000] <TabAtkins>
Dashiva: Nope.  I just hate all the tutorials originating from 1997 that are still on the web, and high on the google charts.

[08:56:02.0000] <Dashiva>
TabAtkins: It's the same with Java

[08:56:03.0000] <Dashiva>
"This issue you have is going to be fixed in Java 1.0"

[08:57:00.0000] <Dashiva>
First hit on google

[08:57:01.0000] <TabAtkins>
Anyway, just rewrote the newb's code to teach her proper style.

[08:59:00.0000] <Philip`>
Yeah, people should have to get a license before they're allowed to put tutorials on the web, with annual renewal

[08:59:01.0000] <hsivonen>
Philip`: how would you license the licensor?

[08:59:02.0000] <Dashiva>
Hixie would handle that

[08:59:03.0000] <Dashiva>
Duh

[08:59:04.0000] <hsivonen>
good point

[09:00:00.0000] <TabAtkins>
I approve of making Hixie our sole point of failure.

[09:00:01.0000] <Dashiva>
sole point of success

[09:00:02.0000] <Philip`>
If you concentrating all points of failure into one, there's less chance of failure

[09:00:03.0000] <Philip`>
s/concentrating/concentrate/

[09:01:00.0000] <Dashiva>
If you only have one strong link, don't make a chain

[09:17:00.0000] <Dashiva>
Random question, anyone know how I can make eclipse stop focusing the currently open file in the package explorer?

[09:20:00.0000] <Philip`>
Dashiva: Doesn't seem to focus anything automatically for me

[09:20:01.0000] <Philip`>
unless I'm just looking in the wrong windows

[09:21:00.0000] <jgraham>
Philip`: since 'this' in an event handler attribute points to the element on which the attribute is locted you could make your example simpler without needing .getElementByWhatever

[09:21:01.0000] <jgraham>
like this.firstChild.src='whatever'

[09:23:00.0000] <Dashiva>
Philip`: I think it started happening in galileo, not present in ganymede

[09:23:01.0000] <Philip`>
jgraham: That sounds complicated, because it'd require you to view the document as a tree rather than as a series of tags

[09:25:00.0000] <jgraham>
Philip`: A more reasonable objection would be that no-one understand how the "this" object works

[09:27:00.0000] <Philip`>
/me can't remember how long it took him to realise the DOM concept existed

[09:27:01.0000] <jgraham>
Anyway the truth seems to be that 50% of the web platform was designed assuming that we had to throw out all experience on how to write good code in order to make things easy whilst the other 50% was designed assuming that everyone has a perfect understanding of all the specs

[09:27:02.0000] <jgraham>
and never makes errors

[09:28:00.0000] <gsnedders>
/me never does, and perfectly understands the this object

[09:34:00.0000] <Dashiva>
jgraham: I feel there should be a clause on the latter part like "and therefore didn't feel the need to make the specs perfect"

[10:23:00.0000] <TabAtkins_>
Of course, the day before I leave for TPAC my car develops a mysterious problem.

[10:38:00.0000] <Philip`>
Hmph, Google Code Search regexps don't support backrefs :-(

[10:50:00.0000] <rubys>
<i> Configuring ruby-1.9.1-head using , this may take a while depending on your cpu(s)... </i>

[10:50:01.0000] <rubys>
Note the missing text prior to the comma

[10:50:02.0000] <rubys>
oops, wrong window :-)

[10:51:00.0000] <Dashiva>
Also, it's missing an s in rubys-1.9.1 :P

[10:52:00.0000] <rubys>
:-)

[10:52:01.0000] <Philip`>
<i>? How unsemantic

[10:53:00.0000] <rubys>
Philip`: it is even worse: as near as I can tell, it isn't HTML

[10:53:01.0000] <rubys>
that is spit out to STDOUT by rvm

[11:49:00.0000] <Dashiva>
Oh look, a totally unexpected response to alexey's email about entities

[12:06:00.0000] <Mathias__>
Evening guys

[12:06:01.0000] <Mathias__>
I have a, HTML5-related question

[12:06:02.0000] <Mathias__>
an*

[12:07:00.0000] <Mathias__>
Does <nav> require a heading of some sort?

[12:08:00.0000] <Mathias__>
I ran my site through gsnedders's excellent HTML5 outliner, and got this: http://gsnedders.html5.org/outliner/process.py?url=http://adlebbeke.be/index

[12:08:01.0000] <Dashiva>
<nav> is a sectioning element, yes

[12:09:00.0000] <Mathias__>
<nav> is causing the 'Untitled Section'

[12:09:01.0000] <Dashiva>
But it doesn't _require_ a heading

[12:10:00.0000] <Mathias__>
I understand it doesn't require a heading (i.e. to validate as HTML5)

[12:11:00.0000] <Mathias__>
But should a heading be added, or not? Considering the only heading text I can think of is something like "Navigation", or "Menu"

[12:11:01.0000] <webben1>
/me wonders whether the outline algorithm should include provision for generic sections like navigation

[12:11:02.0000] <Mathias__>
/me isn't sure if that would add semantic value

[12:11:03.0000] <webben1>
Mathias__: The example in the spec uses <h1>Navigation</h1>

[12:11:04.0000] <webben1>
http://www.whatwg.org/specs/web-apps/current-work/multipage/sections.html#the-nav-element

[12:12:00.0000] <Mathias__>
Hmmm

[12:13:00.0000] <Mathias__>
Probably, it's useful to add a heading to <nav> when using more than one <nav> element in your document

[12:13:01.0000] <Mathias__>
When there's only one <nav> element, it's safe to assume it's the main site navigation, right?

[12:14:00.0000] <webben1>
"wonders whether the outline algorithm should include provision for generic sections like navigation" ... oh wait, it does

[12:14:01.0000] <webben1>
http://www.whatwg.org/specs/web-apps/current-work/multipage/sections.html#headings-and-sections

[12:14:02.0000] <webben1>
"User agents should provide default headings for sections that do not have explicit section headings." "These default headings ("Untitled document", "Navigation", "Sidebar") are not specified by this specification, and might vary with the user's language, the page's language, the user's preferences, the user agent implementor's preferences, etc."

[12:15:00.0000] <Dashiva>
gsnedders|work: Is this enough to be considered a bug report?

[12:17:00.0000] <webben1>
Mathias__: So the upshot is, no, you should not need a heading if you only have the one nav.

[12:18:00.0000] <webben1>
Mathias__: Although that's not the same as the heading between useless - e.g. might be useful in today's user agents.

[12:19:00.0000] <Mathias__>
Ok, thanks for the help!

[12:20:00.0000] <Mathias__>
I'd be interested to know if the HTML4 

[12:20:01.0000] <Mathias__>
I'd be interested to know if the HTML5* outliner will be updated in order to reflect what webben1 said

[14:22:00.0000] <ScoobyDoo>
Is it possible to automaticly click a button on a webpage via client side scripting?

[15:16:00.0000] <gsnedders>
Well duh, convenience is overrated.

[15:29:00.0000] <Philip`>
gsnedders: What would consider an acceptable rating for convenience, out of five stars?

[15:29:01.0000] <gsnedders>
/me shrugs

[15:30:00.0000] <gsnedders>
jgraham: yt?

[16:32:00.0000] <jgraham>
gsnedders: Breifly

[16:32:01.0000] <gsnedders>
jgraham: I can't remember now.

[16:32:02.0000] <jgraham>
gsnedders: Oh well in that case it can't be too important

