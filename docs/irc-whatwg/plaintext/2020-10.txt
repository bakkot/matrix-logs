2020-10-01
[20:25:50.0000] <TimothyGu>
alright, gonna do my share of spam tagging

[03:41:31.0000] <annevk>
zcorpan_: you'll enjoy https://twitter.com/Foone/status/1310888119898529792

[03:41:43.0000] <annevk>
(iirc you wrote that algorithm)

[08:27:56.0000] <annevk>
Domenic: did you email Digital Ocean to opt out?

[08:28:20.0000] <Domenic>
annevk: yep. As I predicted though, it's not like the spammers check DigitalOcean's internal opt-out list before spamming us...

[08:28:39.0000] <annevk>
uhuh

[08:30:56.0000] <noamr>
Morning TabAtkins, pinging you again regarding EXIF orientation/resolution

[09:04:51.0000] <annevk>
noamr: I can have another look next week, but what I'd really like to see is some progress on the implementation side; might be worth emailing heycam and I for Firefox, not entirely sure for other browsers

[09:06:00.0000] <annevk>
noamr: that is, we have a safe solution, but if it's not getting shipped we need to know why

[09:06:52.0000] <annevk>
(and to be clear, I'm not a big fan of trying to solve this metadata-piece-by-metadata-piece, so I'd rather start with resolution which already shipped)

[09:08:16.0000] <noamr>
annevk you mean orientation

[09:08:43.0000] <annevk>
noamr: oh yes

[09:09:03.0000] <noamr>
I can create patches for chromium/safari myself, and see what responses it gets

[09:09:13.0000] <annevk>
noamr: sounds amazing

[09:09:39.0000] <annevk>
Take care, gonna call it a day

[09:09:55.0000] <noamr>
Cool. Enjoy the evening . Thanks!

[10:11:57.0000] <Domenic>
Flash is getting removed from Chrome

[10:12:11.0000] <Domenic>
If that was the last plugin, I wonder if we can simplify HTML

[10:12:18.0000] <Domenic>
But, PDF viewers might still count as plugins...

[10:12:29.0000] <Domenic>
And <embed> and <object> can embed HTML pages...

[10:23:49.0000] <andreubotella>
It seems to me like PDFs would count as "non-document content" in the page load algorithms, so the plugin section could be removed

[10:36:33.0000] <Domenic>
Ah, yeah, that one definitely seems promising

[10:54:50.0000] <Domenic>
Filed https://github.com/whatwg/html/issues/6003

[14:15:58.0000] <devsnek>
annevk: tbh i would leave the invalid label on 5982 cuz its extraordinarily unlikely they will update it further


2020-10-02
[03:56:51.0000] <andreubotella>
annevk: could you merge the style-dfn-panel PRs?

[03:56:56.0000] <andreubotella>
unless you see anything wrong, ofc

[08:59:29.0000] <Domenic>
merged :)

[09:38:50.0000] <devsnek>
are there tests for the scheduling api?

[09:48:08.0000] <Domenic>
devsnek: for some reason they are being kept in wpt_internal, perhaps until there is a real spec. https://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/web_tests/wpt_internal/scheduler/;l=1?q=scheduler%20wpt&sq=&ss=chromium

[09:48:21.0000] <devsnek>
thanks!

[09:48:54.0000] <devsnek>
wasn't there supposed to be some initiative to write tests that only use js in js files

[09:48:59.0000] <devsnek>
i might be completely misremembering

[09:58:54.0000] <Domenic>
It's an option, some people do it, some people don't. PRs to switch to .js files are welcome.


2020-10-05
[02:54:25.0000] <annevk>
So I haven't really looked into TPAC yet as much as I should. Does one need to register in order to attend breakout sessions?

[03:10:44.0000] <jgraham>
I mean it says you're supposed to register, but who knows if it's enforced

[03:10:55.0000] <jgraham>
It's at least not hard to do

[12:24:58.0000] <TabAtkins>
...how do I actually refer to a resource that is CORS-cleared?

[12:25:14.0000] <TabAtkins>
Like, what term do I use to distinguish between "this cross-origin resource is okay" vs "it's not"?

[12:25:23.0000] <TabAtkins>
The Fetch spec doesn't seem to give me anything.

[14:05:19.0000] <Domenic>
TabAtkins: "opaque response" vs. not?

[14:06:58.0000] <TabAtkins>
Term does not exist; closest is "opaque filtered response" <https://fetch.spec.whatwg.org/#concept-filtered-response-opaque>, is that what I should be deciding on?

[14:19:07.0000] <Mek>
closest is "a response whose type is opaque"

[14:19:39.0000] <Mek>
but what are you actually trying to do...

[14:29:38.0000] <TabAtkins>
cross-origin images that haven't been cleared thru CORS need to censor their orientation/resolution data in certain ways

[15:25:57.0000] <zcorpan>
TabAtkins: I think (opaque filtered response OR opaque-redirect filtered response) - but HTML doesn't use those terms: https://html.spec.whatwg.org/multipage/urls-and-fetching.html#cors-same-origin

[15:27:35.0000] <zcorpan>
annevk: ^

[15:37:07.0000] <TabAtkins>
Ah, I like HTML's terms.


2020-10-06
[01:08:35.0000] <annevk>
Yeah, that could probably do with some refactoring

[01:43:51.0000] <constantinescum>
Hi guys! I am trying to find a HTML date-picker that will work on all the browsers,at the moment I use <input type="date"> and it seems it doesn't work on Safari and IE

[03:53:58.0000] <annevk>
https://github.com/whatwg/misc-server/issues/107#issuecomment-704159463 that's a lot of bytes

[04:15:25.0000] <zcorpan>
annevk: have we discussed making multipage the default view?

[04:19:44.0000] <annevk>
I mean, it has come up

[04:25:47.0000] <annevk>
And maybe we should discuss it given this data; I only ever use multipage when linked to it or on whatpr, but quite likely that editors are outliers

[04:32:37.0000] <zcorpan>
yeah. i recall folks saying they always regret clicking a link to the single page version. which would still be a problem if we flip the default, though.

[07:28:26.0000] <Domenic>
Multipage feels so useless to me... I need my Ctrl+F

[07:45:10.0000] <annevk>
yoav: are you saying that performance.now() has a higher resolution than SAB or that it's easier to make SAB harmless than performance.now()?

[08:05:36.0000] <annevk>
yoav: feel free to disregard that question, I'll follow-up in the issue


2020-10-07
[19:02:24.0000] <Krinkle>
Domenic: (/me puts foot in mouth) Did you try the PDF? :)

[19:03:46.0000] <Krinkle>
the single page version actually renders quite quickly in Firefox these days. I'm impressed.

[22:41:58.0000] <TabAtkins>
I usually know the section I'm looking for, so multipage is way way better for me 90%+ of the time

[22:42:25.0000] <TabAtkins>
(most of the time it's just Ctrl-F for "X ele" and then root around near there)

[00:21:43.0000] <MikeSmith>
twitter poll could be useful

[04:30:59.0000] <PiersW>
I only ever use the single page version, because of ctrl-f. But that doesn't mean the default can't change.

[04:37:42.0000] <annevk>
https://twitter.com/annevk/status/1313805658588938240

[04:38:03.0000] <annevk>
tune in tomorrow for the results

[04:39:43.0000] <annevk>
I wanted to include "Cover-to-cover, multiple times, then backwards at least once, and finally by picking random sections from the contents list and following all the cross-references." but it went over the character limit

[04:44:10.0000] <JakeA>
annevk: I hacked together a version of the single-page HTML spec that uses content-visibility to defer layout https://html-spec-with-c-v.glitch.me/

[04:44:26.0000] <JakeA>
In Chrome, it takes the initial layout time from 50s down to 400ms

[04:46:06.0000] <annevk>
JakeA: I saw that tweet, what kind of changes would be required?

[04:49:05.0000] <JakeA>
annevk: wrap sections of the spec in an element (probably all h2 sections and h3 sections?), then give them `content-visibility: auto; contain-intrinsic-size: 1px 5000px;` - ideally the 5000px should be a rough height of the element, which is used before layout is done properly. I guess you might use a different number for the h2 sections vs h3.

[04:49:32.0000] <JakeA>
I don't know if it's ready to go yet. I'm finding issues with in-page links sometimes not working. But I'm filing bugs as I find them.

[04:49:49.0000] <annevk>
Hmm, wouldn't that be a function of font size?

[04:50:29.0000] <JakeA>
And page width yeah, but it really doesn't matter if it's wildly wrong

[04:50:33.0000] <annevk>
Anyway, sounds interesting and I believe Domenic has been thinking about using more structural elements

[04:50:56.0000] <JakeA>
The more wrong the value is, the more the scrollbar will jump when layout is computed properly

[04:51:23.0000] <JakeA>
But meh, scrollbars are jumpy on native mobile for the same reasons

[04:51:26.0000] <annevk>
I see, that sounds rather janky

[04:52:18.0000] <annevk>
But interactive sooner is nice of course

[04:52:31.0000] <JakeA>
It's a tradeoff yeah. If you wanted accurate values I guess a build system could generate them for various widths? But I don't think it's a big deal vs the gains

[04:52:49.0000] <JakeA>
Scrolling remains smooth etc etc

[04:53:30.0000] <annevk>
JakeA: what if you gave it a calc()?

[04:53:50.0000] <annevk>
vw * some em size

[04:54:40.0000] <annevk>
Might still go wrong depending on unusual constructs, so hmm

[04:54:48.0000] <JakeA>
yeah that might give you more accurate values. Although you're either having to calculate that at build time, or come up with a generic value for all sections, which will still be massively out for some sections

[04:55:00.0000] <JakeA>
Since some sections of the spec are short, some are massive

[04:55:40.0000] <JakeA>
Butâ€¦ the scrollbar jumps around in the HTML spec already as it's loading. This is just doing it later

[07:08:53.0000] <tobie>
annevk: I have no trace of your latest update to 5953.

[07:09:05.0000] <tobie>
annevk: I'm not sure what's up.

[07:09:29.0000] <Domenic>
The scrollbar was pretty unusable in the c-v version for me... Like, I couldn't scroll down.

[07:10:27.0000] <tobie>
annevk: I have a hunch, though. Can you try deleting the log dump from the PR body?

[07:11:02.0000] <tobie>
annevk: it seems rather large, and I found an unattributed "Error: request entity too large" in the logs

[07:11:39.0000] <annevk>
tobie: looking

[07:13:24.0000] <annevk>
tobie: I elided the log and left everything else

[07:13:51.0000] <tobie>
annevk: OK, saw the error again here.

[07:14:05.0000] <tobie>
annevk: so you're clearly triggering that error

[07:16:35.0000] <annevk>
tobie: so that's something on your end or can GitHub not deal?

[07:17:13.0000] <tobie>
annevk: no, no, that's the pr-preview app itself (well the underlying Express framework, really).

[07:17:24.0000] <tobie>
annevk: Thanks for helping identify the problem.

[07:17:38.0000] <tobie>
annevk: now I have no idea what the solution is. :)

[07:17:43.0000] <tobie>
annevk: will research.

[07:17:49.0000] <annevk>
thanks!

[07:18:27.0000] <annevk>
I'm somewhat surprised we didn't hit this before, maybe we generate somewhat longer logs these days

[07:19:12.0000] <tobie>
annevk: it doesn't seem to be related to the log, really.

[07:19:23.0000] <tobie>
annevk: can you run it one last time?

[07:23:04.0000] <annevk>
tobie: you got it

[07:24:13.0000] <tobie>
annevk: right so that is just the payload size is an issue.

[07:25:34.0000] <tobie>
annevk: ok, so it's not solved for now.

[07:25:52.0000] <annevk>
tobie: what payload though? The size of OP?

[07:25:57.0000] <tobie>
yes

[07:25:59.0000] <tobie>
:D

[07:26:03.0000] <annevk>
tobie: does it also include all the revisions?

[07:26:23.0000] <annevk>
And how does that explain it not triggering again upon new commits?

[07:26:30.0000] <tobie>
annevk: no, it includes the update and the prior version.

[07:26:45.0000] <tobie>
annevk: so you had to run it twice to get rid of the log.

[07:41:20.0000] <tobie>
annevk: increased the limit from  100kb to 5mb.

[07:41:33.0000] <tobie>
annevk: this should do the trick

[07:41:51.0000] <tobie>
annevk: lmk if you still have the issue.

[07:43:11.0000] <annevk>
tobie: was that also the problem for IDL though?

[07:43:54.0000] <annevk>
tobie: I updated OP of https://github.com/whatwg/html/pull/5953 again to see if PR Preview does a thing now

[07:44:56.0000] <tobie>
annevk: biab

[09:22:41.0000] <annevk>
tobie: seems itâ€™s still stuck

[09:46:51.0000] <tobie>
annevk: I managed to include a typo in a 12 character change.

[09:47:05.0000] <tobie>
Should be fixed now.

[09:47:19.0000] <tobie>
(No comment and apologies.)

[09:59:34.0000] <annevk>
ta, trying once more

[10:25:22.0000] <annevk>
tobie: I guess it seems to work, but it doesn't build for some reason

[10:25:50.0000] <annevk>
tobie: that might be a different problem though

[10:32:36.0000] <Domenic>
annevk: yeah, old PRs need rebasing

[10:33:05.0000] <annevk>
ah good

[12:42:39.0000] <Domenic>
annevk: thoughts on merging https://github.com/whatwg/html/pull/5889 , or waiting for further review?


2020-10-08
[05:48:20.0000] <annevk>
So https://twitter.com/annevk/status/1313805658588938240 got 190 votes and single-page is close to 42%, multi-page 34%, dev edition 5%, and some comments cover the remainder

[05:48:34.0000] <annevk>
Based on this very scientific study I suggest we leave things unchanged

[05:49:54.0000] <JakeA>
What's the current state of 'internal slots'? What's the point of using them rather then just saying "[=Foo=] has a <dfn>bar</dfn>"?

[05:49:56.0000] <annevk>
If we had specification-wide search it could put multi-page in the lead, but I doubt that would ever be as fast

[05:50:23.0000] <annevk>
JakeA: they are still equivalent, nothing formalized one way or another

[05:50:39.0000] <annevk>
JakeA: perhaps Bikeshed has some shorthand syntax for slots these days? Not sure

[05:52:45.0000] <JakeA>
ta

[07:01:20.0000] <Domenic>
I prefer "has a" style and regret using slots in Streams and probably being responsible for a lot of usage of them.

[07:03:33.0000] <jgraham>
How does the "has a" style work? e.g. if I want to check if a js object is a Map

[07:04:30.0000] <annevk>
I mostly wish we had a consistent style that was part of IDL so we wouldn't have to define a large number of getters and we could some issues for Event classes more easily

[07:05:03.0000] <annevk>
Maybe there are alternative solutions for Event classes if everyone does them in the same way, but still

[07:05:11.0000] <annevk>
jgraham: for that case it doesn't

[07:05:27.0000] <annevk>
jgraham: this is about IDL platform objects

[07:06:43.0000] <jgraham>
Oh just for platform objects

[07:06:59.0000] <jgraham>
That makes sense

[07:17:21.0000] <annevk>
Domenic: so I "discovered" another magical end tag

[07:17:46.0000] <annevk>
(context: HTML issues)

[08:02:23.0000] <Domenic>
annevk: magical end tag?

[08:03:54.0000] <annevk>
Domenic: like </svg> (when it pops something from the stack) queues a task

[08:04:00.0000] <annevk>
s/like//

[08:04:12.0000] <annevk>
(I don't like it)

[08:34:50.0000] <Domenic>
Oh I caught up to my email

[08:34:53.0000] <Domenic>
Grossss

[08:40:27.0000] <annevk>
People implemented a lot of weird things back in the day

[08:40:40.0000] <annevk>
And I guess they'll say the same about us some time from now

[08:40:51.0000] <annevk>
But hopefully a bit less

[10:02:21.0000] <Domenic>
hober: that is some amazing ASCII art in https://tess.oconnor.cx/2020/10/parties#users

[10:02:27.0000] <Domenic>
Unicode art, I should say

[10:03:14.0000] <annevk>
oh my, it has HTTPS today \o/

[10:41:00.0000] <hober>
Domenic: I made sure it was 80x24 so it would fit on a terminal :)

[10:41:22.0000] <hober>
annevk: yeah, actually writing a blog post was the pressure i needed to finally fix my letsencrypt setup

[10:42:51.0000] <hober>
i suppose it'll break again in a few months


2020-10-09
[00:07:37.0000] <hsivonen>
zcorpan: has a date and time for the speculating parsing TPAC breakout been set?

[06:03:58.0000] <annevk>
hsivonen: I think the W3C will schedule them though per the FAQ it's all TBD

[08:49:36.0000] <Domenic>
JakeA: do you want to take a pass at https://github.com/whatwg/html/pull/6039 ? Totally fine if you don't have the time.

[09:39:03.0000] <Domenic>
annevk: TabAtkins: how do we make progress on https://github.com/whatwg/html/pull/5936#issuecomment-703574559 ?

[09:39:55.0000] <TabAtkins>
The approach sounds good to me, just open an issue in CSSWG to get eyes on it.

[09:40:47.0000] <TabAtkins>
(nothing wrong with other specs defining pseudos specific to them, but letting the CSSWG know is good in case there will be naming clashes or what-have-you)

[12:45:53.0000] <annevk>
Domenic: bfgeek already put it on the CSS WG agenda afaict

[14:48:36.0000] <Domenic>
Oh woah this is cool http://commontype.org/

[14:49:19.0000] <Domenic>
Someone apparently got sick of OpenType being some sort of Microsoft-controlled dead standard and created a living fork

[14:49:58.0000] <Domenic>
Some relatively serious Web IDL abuse, but oh well


2020-10-10
[03:02:01.0000] <JakeA>
Domenic: I'll take a peek on Monday


2020-10-12
[22:58:52.0000] <mathiasbynens>
quick WebIDL question: is there an easy way to mark an attribute as non-configurable (other than [LegacyUnforgeable], which does that + more)?

[00:43:31.0000] <zcorpan_>
annevk: are we doing only TPAC breakout sessions, or a "WG" meeting this week?

[00:46:52.0000] <zcorpan_>
mathiasbynens: per https://heycam.github.io/webidl/#define-the-attributes attributes are only non-configurable if they're LegacyUnforgeable

[00:47:01.0000] <zcorpan_>
mathiasbynens: but constants are also non-configurable

[00:47:34.0000] <mathiasbynens>
zcorpan_: I was afraid of that. thanks for confirming

[00:48:24.0000] <zcorpan_>
mathiasbynens: whare are you trying to do?

[00:51:37.0000] <mathiasbynens>
zcorpan_: `navigator.webdriver` is currently configurable, and so spammers using WebDriver/Puppeteer like to `delete` it to try and bypass protections

[00:52:20.0000] <mathiasbynens>
zcorpan_: all it takes to fix this is to mark it non-configurable, and I was wondering if there was a way to do that directly, since LegacyUnforgeable does more (in particular, it moves it from the prototype to an own property)

[00:55:44.0000] <zcorpan_>
mathiasbynens: hmmm. navigator itself isn't LegacyUnforgeable

[01:17:50.0000] <tobie>
annevk: Just checking to see if pr-preview is stable for you since the changes I made last week (I have no signs that it isnâ€™t; just wanted to make sure youâ€™re all good).

[02:45:03.0000] <annevk>
tobie: I think so, yes, but I'll ping you if not ðŸ™‚

[02:45:10.0000] <annevk>
tobie: thanks for looking into it

[05:45:23.0000] <mathiasbynens>
does AVIF need an entry on https://mimesniff.spec.whatwg.org/#matching-an-image-type-pattern or not?

[05:49:17.0000] <annevk>
mathiasbynens: afaik it's mp4

[05:49:41.0000] <annevk>
mathiasbynens: or at least an existing container thingy

[05:50:26.0000] <annevk>
mathiasbynens: hmm, but maybe that does mean that should be updated as that only covers images

[05:50:47.0000] <annevk>
mathiasbynens: I had only considered it from the perspective of https://github.com/annevk/orb

[05:51:10.0000] <annevk>
/me wonders if that's enough reason to still try to require a MIME type

[06:51:40.0000] <croraf>
Anyone knows if ES is parsable by LR(1) parser?

[06:56:42.0000] <annevk>
jorendorff: ^

[06:58:35.0000] <jorendorff>
croraf: You have to use lots of force to jam ES into an LR(1) form

[06:58:40.0000] <jorendorff>
please see https://github.com/mozilla-spidermonkey/jsparagus/blob/master/js-quirks.md

[06:58:58.0000] <jorendorff>
if you don't want to read all that, then the answer is no for you :)

[06:59:15.0000] <croraf>
thanks jorendorff , i also put the same quesiton on jsparagus discord :)

[06:59:27.0000] <jorendorff>
haha

[07:00:41.0000] <croraf>
So in short, does JSparagus use LR(1) or some other type? And which one would you recommend now to use?

[07:03:51.0000] <croraf>
jorendorff,  I remember these quirks being a lot shorter last time i checked half a year ago :|

[07:05:02.0000] <jorendorff>
croraf: it depends on the goal. if you want a complete JS parser e.g. for writing a standard-compliant JS engine, then

[07:05:07.0000] <jorendorff>
by far the easiest thing that will work is recursive descent

[07:06:57.0000] <croraf>
this will have bad performance? jorendorff

[07:07:27.0000] <jorendorff>
Recursive descent can have good performance because it's extremely hackable

[07:07:41.0000] <jorendorff>
If you write the dumbest thing that can possibly work, then the performance is so-so

[07:08:19.0000] <jorendorff>
but it's easy to hack in some optimizations to make it a bit faster, and then a bit faster again...

[07:10:37.0000] <croraf>
jorendorff, thanks a lot. I think in Boa we actually use recursive descent.

[07:10:46.0000] <jorendorff>
Yes, I think so

[07:11:26.0000] <jorendorff>
I think all the major JS implementations do. jsparagus was trying something outside the mainstream :)

[07:12:19.0000] <croraf>
cool, jorendorff you are the best ;)

[07:12:32.0000] <jorendorff>
/me blushes.

[07:18:22.0000] <croraf>
jorendorff, Was this the case of putting something in the editorial version of the spec that was not LR(1) compliant that was then immediately removed from the spec? https://github.com/tc39/ecma262/issues/776

[07:19:52.0000] <jorendorff>
The `async of` conflict is separate. As far as I know it was never discussed in the standard committee and hasn't been removed.

[07:22:42.0000] <croraf>
jorendorff, yes, I'm not talking about "async of" example but mentioning this as another similar example that was revoked?

[07:23:19.0000] <jorendorff>
Yes, that's right


2020-10-13
[03:49:04.0000] <annevk>
yoav: should stuff like https://github.com/WICG/cross-origin-embedder-policy be archived?

[03:49:24.0000] <annevk>
(I would file an issue but can't)

[03:57:03.0000] <yoav>
Weird that you can't file one... I'll look

[04:00:09.0000] <yoav>
someone turned off issues on that repo...

[04:00:25.0000] <yoav>
I'll bug people and see if we can archive. Thanks for flagging!

[04:00:58.0000] <annevk>
To be clear, I understand why they disabled issue filing

[04:01:56.0000] <annevk>
Thanks!

[05:34:11.0000] <annevk>
MikeSmith: do we still need the test-mdn-annotations branch on https://github.com/whatwg/html-build/branches?

[05:34:37.0000] <MikeSmith>
annevk: nope

[05:34:45.0000] <MikeSmith>
feel free to delete it

[05:34:53.0000] <annevk>
done

[05:56:59.0000] <annevk>
https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-06#section-5.2.2.2 is somewhat weird to me. So A2 in A1->B->A2 is cross-site, but A2's service worker is not... If service worker adoption would be universal, it seems you could do the same kind of attacks...

[06:01:22.0000] <annevk>
/me files https://github.com/httpwg/http-extensions/issues/1288

[08:19:56.0000] <annevk>
Domenic: sorry, I'm actually no longer sure a worklet needs a reference to anything

[08:20:10.0000] <annevk>
Domenic: we just call it to do something and then it returns a value

[08:20:20.0000] <annevk>
Domenic: and when we're done with it we discard it

[08:20:23.0000] <Domenic>
Hmm

[08:20:37.0000] <annevk>
Domenic: even the secure context check seems weird as they shouldn't even be instantiated if that's false?

[08:20:53.0000] <Domenic>
annevk: in the worklets spec today there is no securecontext requirement

[08:21:08.0000] <Domenic>
annevk: it looks like the CSSWG prefers no secure context requirement but Chrome implemented it as SecureContext

[08:21:32.0000] <annevk>
Domenic: Mozilla wants that too, although I'm not a 100% on what we did for audio worklets

[08:21:37.0000] <annevk>
I think they are restricted

[08:21:47.0000] <Domenic>
Cool, yeah, we should probably change that when incorporating

[08:22:49.0000] <Domenic>
annevk: The current model creates worklet agents (1) when you call addModule(), if there are no agents, and optionally even if there are; (2) on UA discretion when it needs them, e.g. as in https://whatpr.org/html/6056/worklets.html#worklets-example-registering

[08:22:51.0000] <annevk>
But yeah, thinking about it more a worklet having a reference to the outside by default is a bit of a smell as they are designed as isolated environments (again, specific types of worklets can override that and audio worklets have a communication channel)

[08:23:47.0000] <Domenic>
annevk: the issue is how do we shut down worklets when you discard a document. I guess you are thinking a document -> all worklets pointer, instead of the inverse?

[08:24:12.0000] <annevk>
Domenic: yeah, or document->agent->agent cluster->worklet agents

[08:24:24.0000] <Domenic>
Hmm

[08:24:43.0000] <annevk>
I think there's only ever one window agent per agent cluster, but this falls flat when dedicated workers can have a worklet

[08:24:57.0000] <Domenic>
They currently cannot; it's [Exposed=Window]

[08:25:05.0000] <Domenic>
Did we put worklets in the window agent cluster?

[08:25:26.0000] <annevk>
I'm not sure that's formalized, it was one of the somewhat open questions

[08:25:31.0000] <annevk>
It's needed for audio worklets

[08:25:43.0000] <Domenic>
It looks like we did

[08:25:44.0000] <annevk>
Other worklets could potentially also sit in their own agent cluster

[08:25:51.0000] <Domenic>
They don't get isTopLevel

[08:26:10.0000] <annevk>
Yeah true, but they could in theory is what I'm saying,  there's nothing binding them

[08:26:20.0000] <Domenic>
Yeah

[08:26:31.0000] <Domenic>
document -> worklets pointer seems fine

[08:26:37.0000] <Domenic>
Honestly that would be better for workers too

[08:26:55.0000] <Domenic>
Right now "discard a Document" is pretty backward, it says something like "all workers whose owner document is this document"

[08:27:08.0000] <annevk>
Yeah I don't like that

[08:28:13.0000] <Domenic>
AudioWorklet looks to be SecureContext in Firefox too https://searchfox.org/mozilla-central/source/dom/webidl/AudioWorklet.webidl

[08:28:23.0000] <annevk>
\o/

[09:19:30.0000] <Domenic>
annevk: I think https://github.com/w3c/css-houdini-drafts/issues/843 can be closed?

[09:20:12.0000] <Domenic>
Now that we have one event loop per agent, it's pretty clear they have their own event loop. And it's also clear it may interleave with (instead of being parallel to) a window's event loop, or whichever, but that's already allowed for all non-[[CanBlock]] cases.

[09:21:36.0000] <annevk>
Domenic: what runs the event loop though? Does create a worklet do that?

[09:22:00.0000] <annevk>
Domenic: and does the event loop algorithm need worklet-specific steps similar to what it does for workers?

[09:22:14.0000] <annevk>
(to be clear, I haven't thought about the second question much at all)

[09:22:38.0000] <Domenic>
I guess we should add a counterpart sentence like workers' "Event loop: Run the responsible event loop specified by inside settings until it is destroyed."

[09:22:50.0000] <Domenic>
That's easy enough.

[09:23:37.0000] <Domenic>
Oh wait, it already exists

[09:24:09.0000] <Domenic>
https://whatpr.org/html/6056/worklets.html#create-a-worklet-global-scope (but it is misnested)

[09:27:41.0000] <Domenic>
It looks like no need for worklet-specific steps in event loop processing model. However, we should explicitly state that when you terminate a worklet, its event loop gets destroyed. For workers the event loop processing model checks that every time (which is a bit strange).

[09:37:00.0000] <annevk>
Cool, I'll do a more detailed read tomorrow

[09:37:12.0000] <annevk>
I should probably start with the PR Preview version as that's just much easier

[09:46:23.0000] <Domenic>
Yeah definitely

[10:13:49.0000] <shu>
Domenic: i got a few naive questions about worklets if you got a min

[10:14:22.0000] <Domenic>
shu: for sure

[10:15:02.0000] <shu>
Domenic: the encouragement for idempotence in the worklet spec has no normative teeth, is that right?

[10:15:06.0000] <shu>
currently, that is

[10:15:21.0000] <Domenic>
shu: indeed.

[10:15:30.0000] <shu>
judging by your (3) prohibiting `eval('this')`, i imagine currently `eval('this')` actually returns the global?

[10:16:37.0000] <Domenic>
shu: I didn't test implementations, but it does in specs. "global this value" is left as its default (= global) when creating the realm.

[10:16:49.0000] <shu>
Domenic: gotcha, thanks.

[10:21:52.0000] <shu>
this seems to be the same problem as freezing all inadvertent "side channels", which is, as you know, pretty difficult to plug. jumping through hoops to remove the obvious ways to access the global is only a portion of the API surface where the author can accidentally end up depending on persistent global state

[10:22:29.0000] <shu>
e.g., stuff added to built-in protos

[10:23:30.0000] <Domenic>
shu: for sure. The intention was always just to avoid obvious easy footguns, not to be airtight.

[10:23:48.0000] <Domenic>
From that perspective I guess prohibiting `eval('this')` is not really a win.

[10:24:39.0000] <shu>
okay, i see

[10:24:56.0000] <Domenic>
But e.g. I think the hope is that you wouldn't be able to use some isomorphic library which relies on globalThis to store global state

[10:25:03.0000] <Domenic>
I'm not sure how we feel about polyfills...

[10:25:56.0000] <shu>
yeah, that came to mind as a primary concern

[10:26:25.0000] <shu>
in practice i think you're saying "don't polyfill", since polyfilling everytime goes against the performance reasons you're using worklets to begin with, i imagine

[10:28:54.0000] <Domenic>
Yeah, I suspect that was the intention

[10:29:08.0000] <Domenic>
(HTML is inheriting this spec from the original authors, so I am not 100% on much of this.)

[10:35:23.0000] <shu>
thanks for the background

[10:35:49.0000] <shu>
i think right now, given the intention of plugging the obvious badness, i like the idea of shallow freezing the global object the most

[10:39:23.0000] <Domenic>
Yeah that sounds pretty nice. Let's see what folks say.

[16:16:32.0000] <innovati>
Was XML5 ever an official proposal or just a dream spec kind of thing? https://ygg01.github.io/xml5_draft/

[16:20:27.0000] <Domenic>
The latter

[16:22:03.0000] <innovati>
Thanks Domenic :D

[16:44:45.0000] <Domenic>
It might be implemented in Servo now that I think harder


2020-10-16
[00:19:16.0000] <annevk>
Oh wow, https://github.com/tc39/ecma262/issues/678 got fixed

[01:23:05.0000] <annevk>
andreubotella: thanks for fixing that <link rel=icon> thing in Fx, that's great

[01:24:01.0000] <annevk>
andreubotella: I can still reproduce it, but it might not have made it to Nightly yet

[01:24:44.0000] <andreubotella>
annevk: no problem ^^

[01:24:56.0000] <andreubotella>
when I test on my local build, it does work

[01:25:35.0000] <andreubotella>
this was my first browser bug, and when I decided to dive into the code last Saturday I didn't expect to find anything I could fix

[01:25:56.0000] <andreubotella>
*first browser fix, rather

[01:31:27.0000] <annevk>
andreubotella: that's great, I'll verify later today when Nightly is updated to include it; will be nice to see the inline logos again

[01:33:06.0000] <andreubotella>
ok

[08:30:42.0000] <Domenic>
annevk: when should we remove appcache?

[10:00:59.0000] <annevk>
Domenic: Iâ€™m not up to speed with what has shipped to release; also with respect to the API

[10:01:17.0000] <Domenic>
It looks like Chrome removed it with a reverse origin trial.

[10:04:23.0000] <Domenic>
Time to figure out how to write WPTs for worklets...

[11:53:15.0000] <TabAtkins>
Domenic: Ugh, good luck

[11:53:24.0000] <Domenic>
I kind of gave up

[11:53:34.0000] <Domenic>
I think I could do it for a single worklet type at a time

[11:53:49.0000] <TabAtkins>
yeah, hopefully we can exercise necessary stuff in the individual worklet types

[11:54:15.0000] <Domenic>
That's a lot of work for me though :-/


2020-10-18
[21:27:37.0000] <Paul__>
hello I am trying to build a website


2020-10-19
[08:16:02.0000] <Domenic>
annevk: does https://github.com/w3c/css-houdini-drafts/issues/473#issuecomment-711733408 mean "close with no action"? I still don't understand the issue that well...

[09:54:13.0000] <annevk>
Domenic: yeah, but I didn't close it to see if someone had a different take

[09:54:25.0000] <annevk>
Domenic: in particular I wonder if wanderview agrees

[09:56:43.0000] <Domenic>
annevk: makes sense. Will leave open for a bit at least...

[10:00:35.0000] <annevk>
"I think they communicate errors out via onprocessorerror." So there's no need for integration with "report an error" whatsoever? I guess there might not be a lot of callers...

[10:13:16.0000] <Domenic>
annevk: yeah, I mean, there might be room for improving the formalization of the web audio spec in that regard, but right now they seem to wrap a bunch of potentially-erroring things in a spec try/catch and forward the errors.

[14:45:24.0000] <wanderview>
annevk: domenic: I don't have any objections at this point

[14:45:39.0000] <Domenic>
Cool, thanks!

[14:49:25.0000] <TabAtkins>
Domenic: I'm doing some Bikeshed fixes, and as part of it I'm going to have a minor behavior change that'll affect the Streams spec. I'll submit the PR, but there's no reasonable transitional form that'll work both pre- and post-change. Do you want to me to wait on pushing the Bikeshed fix until you've merged the PR, or are you okay with me pushing now and you merging the fix after?

[14:49:38.0000] <TabAtkins>
(The change is just that some links will break until you apply the fix.)

[14:49:57.0000] <Domenic>
TabAtkins: OK either way.

[14:50:12.0000] <TabAtkins>
kk


2020-10-20
[01:03:40.0000] <hsivonen>
Has the scheduling of the speculative parsing meeting progressed from TBD?

[01:08:31.0000] <annevk>
I haven't heard anything and the wiki page doesn't say anything either (it's now protected though so I guess they won't allow more sessions)

[04:57:08.0000] <smaug____>
does wpt have something like info("dump this message to terminal"); ?

[04:58:50.0000] <annevk>
smaug____: I'd ask in irc.w3.org #testing, but I don't think so

[04:59:06.0000] <annevk>
smaug____: you can certainly print from server-side scripts though

[04:59:33.0000] <smaug____>
mochitest has info() and it is quite useful

[05:48:28.0000] <annevk>
hsivonen: I don't see it on https://www.w3.org/wiki/TPAC/2020/SessionIdeas so I guess it hasn't made it in

[05:48:43.0000] <annevk>
The breakout schedule is published on https://www.w3.org/2020/10/TPAC/breakout-schedule.html#calendar now

[05:50:26.0000] <hsivonen>
annevk: thanks. I wonder if I should attend Client Hints (which overlaps a team meeting)

[05:50:39.0000] <hsivonen>
zcorpan: are you still pursuing the speculative parsing breakout?

[05:51:14.0000] <annevk>
hsivonen: it would be kinda good if someone from Mozilla were there at least

[05:52:30.0000] <zcorpan>
hsivonen: hmmmm. I was going to. but I think I missed the deadline to propose breakout sessions :(

[05:53:21.0000] <zcorpan>
I proposed IntersectionObserver breakout last night, but forgot to propose one for speculative parsing

[05:53:26.0000] <hsivonen>
zcorpan: I see

[05:58:44.0000] <zcorpan>
should we ask dom if we can still add breakout sessions for things in https://github.com/whatwg/html/issues/5856 ?

[06:00:01.0000] <zcorpan>
MikeSmith: ^

[06:01:04.0000] <annevk>
zcorpan: it seems Joey had a bunch of constraints there; we could also just do an ad-hoc thing the week after

[06:01:25.0000] <annevk>
oh wait, he doesn't seem to mind

[06:04:33.0000] <zcorpan>
annevk: the week after doesn't work as well for me unfortunately

[06:06:47.0000] <zcorpan>
I'll email dom

[06:51:46.0000] <zcorpan>
annevk: hsivonen: dom said we can propose it. should we add a "WHATWG" breakout, and try to cover all things in issue 5856?

[06:53:44.0000] <hsivonen>
zcorpan: not sure how much time we'd need for all the topics, but WFM in principle

[06:59:05.0000] <annevk>
zcorpan: sure

[07:01:59.0000] <hsivonen>
As for timing conflicts, next week, I have other meetings on Tuesday from 15:00 Sweden time to 15:30 Sweden time. and on Wednesday from 15:00 Sweden time to 16:00 Sweden time.

[07:09:14.0000] <zcorpan>
hsivonen: ok, I can mention those conflicts to dom

[07:16:19.0000] <zcorpan>
Title: WHATWG

[07:16:19.0000] <zcorpan>
Proposer: Simon Pieters

[07:16:19.0000] <zcorpan>
Email address of proposer: simonâŠ™bc

[07:16:21.0000] <zcorpan>
Summary (one-sentence or so): Discuss lazy-loading, reusable image fetching logic, HTML speculative parsing, render blocking stylesheets, and beforematch event. SeeÂ https://github.com/whatwg/html/issues/5856

[07:16:23.0000] <zcorpan>
Type of session (e.g.: open discussion, talk, panel, etc.): open discussion

[07:16:25.0000] <zcorpan>
Goals: Make progress on the listed issues.

[07:16:27.0000] <zcorpan>
shortname: whatwg

[07:16:29.0000] <zcorpan>
Apply to be a #Public_Breakout (breakouts open to the world at large, not just the W3C community): yes

[08:24:51.0000] <annevk>
Domenic: https://hg.mozilla.org/integration/autoland/rev/bab939b79a05 (patch to disable AppCache storage; we'll still expose a no-op API aiui)

[08:25:23.0000] <annevk>
patch that landed and is on its way to release*

[08:28:28.0000] <Domenic>
annevk: very nice

[08:57:26.0000] <MikeSmith>
zcorpan: about adding a breakout session, will ask too

[09:04:50.0000] <MikeSmith>
zcorpan: dom says heâ€™s added it to the schedule

[09:05:55.0000] <MikeSmith>
https://www.w3.org/2020/10/TPAC/breakout-schedule.html#whatwg

[09:06:22.0000] <MikeSmith>
26 October 15:00â€“16:00 UTC

[11:02:48.0000] <zcorpan>
does somebody have a link to the webappsec tpac meeting?

[11:03:38.0000] <MikeSmith>
zcorpan: I am looking now too

[11:04:30.0000] <zcorpan>
MikeSmith: https://www.w3.org/2011/webappsec/webex.html

[11:04:41.0000] <MikeSmith>
ah cool

[11:22:35.0000] <hober>
i thought it was cancelled

[11:34:56.0000] <MikeSmith>
hober: yeah we ending up finding that out

[12:47:30.0000] <croraf>
Can someone clarify me the usefulness of the "label"'s form attribute?

[12:47:35.0000] <croraf>
Is it only for the screen readers?

[12:48:04.0000] <croraf>
Does the screen reader reads that aloud?

[12:48:45.0000] <croraf>
I mean if the screen reader reads the bound input element aloud I don't see the point of the "form" attribute?

[12:52:39.0000] <andreubotella>
That's not a `form` attribute on the label element, but a `form` WebIDL attribute (a `form` field in the DOM object)

[13:16:14.0000] <croraf>
I'm confused about the difference.

[13:16:31.0000] <croraf>
Does the label element have the "for" attribute?

[13:16:34.0000] <croraf>
andreubotella,

[13:17:03.0000] <andreubotella>
The `for` attribute, sure, not `form`

[13:17:51.0000] <croraf>
So w3schools is wrong here: https://www.w3schools.com/tags/tag_label.asp

[13:18:26.0000] <croraf>
Does "label" not have the "form" attribute, along with the "for" attribute?

[13:18:48.0000] <croraf>
MDN only indicates the "for" attribute: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label

[13:19:39.0000] <croraf>
Check this example: https://www.w3schools.com/tags/att_label_form.asp

[13:20:50.0000] <andreubotella>
it's not listed as an attribute for `label` in the element's section, or on obsolete features

[13:21:12.0000] <andreubotella>
so unless there's something I'm not aware of, w3schools is wrong

[13:21:33.0000] <croraf>
They even note that all browsers support it.

[13:22:58.0000] <andreubotella>
What does it mean for a browser to support an attribute, though?

[13:23:12.0000] <andreubotella>
If the attribute has things it triggers, that's one thing, but here there's nothing it triggers.

[13:23:33.0000] <andreubotella>
Browsers will let you set whatever attributes you want, they'll just do nothing with them other than listing them in the DOM node.

[13:24:10.0000] <croraf>
Well, that was my initial question, what does "form" attribute on the "label" give you.

[13:24:32.0000] <croraf>
It looks like it is available, so it should give something.

[13:25:21.0000] <croraf>
It seems to allow the labels (and inputs) to be outside of the form and still belong to the form.

[13:25:33.0000] <croraf>
For the inputs for example, they will be submitted when the form is submitted.

[13:25:42.0000] <croraf>
For the labels I dont know, perhaps something there is.

[13:27:13.0000] <andreubotella>
Not really, if you check the `form` field on the DOM node, you'll get the form that the `for`-element belongs to, whether you use the `form` attribute or not.

[13:27:37.0000] <andreubotella>
on the DOM node for the label, that is

[13:28:46.0000] <croraf>
(sorry if I don't understand you completely, cause I'm very tired) but check this: https://html.spec.whatwg.org/multipage/forms.html#the-label-element

[13:29:18.0000] <andreubotella>
yeah, there's a `form` WebIDL attribute, but `form` isn't listed as an attribute on the element

[13:29:22.0000] <croraf>
https://pasteboard.co/JwzgFMr.png

[13:29:57.0000] <andreubotella>
once again, WebIDL's terminology is confusing

[13:30:01.0000] <croraf>
I see, what you are saying.

[13:30:31.0000] <croraf>
So let's say you put a label outside a form, ok?

[13:30:40.0000] <croraf>
It won't have it's form field pointing to the form?

[13:31:13.0000] <croraf>
If the label is in the form it will have the "form" field pointing to the form?

[13:32:09.0000] <andreubotella>
if the label is outside a form, it'll point to a form if you have a `for` attribute pointing to a control in the form

[13:32:41.0000] <croraf>
OK, what if you dont have that for attribute and you put a "form" attribute"?

[13:32:51.0000] <croraf>
This shouldn't cause any effect?

[13:33:45.0000] <andreubotella>
it returns null

[13:34:15.0000] <croraf>
You tried to put a "form" attribute on a label outside the form. And retrieve it's form field using JS?

[13:34:32.0000] <andreubotella>
yeah, I just did that on firefox

[13:34:43.0000] <andreubotella>
let me get my chrome and webkit

[13:34:44.0000] <croraf>
Then, w3schools is awfully wrong.

[13:35:21.0000] <andreubotella>
yeah, it is

[13:37:19.0000] <andreubotella>
I understand that sometimes the spec text is intimidating, but even the domintro (the "for web developers" block) talks about the form owner of the associated form control, not about being directly associated to a form

[13:39:16.0000] <croraf>
andreubotella, thanks a lot

[13:39:26.0000] <croraf>
I tried putting label in the form without the for

[13:39:40.0000] <croraf>
And even if it is in the form, that doesnt mean its .form is pointing to the form

[13:39:59.0000] <croraf>
It needs to have the for pointing to the <input> that belongs to the form.

[13:40:42.0000] <croraf>
Right?

[13:41:35.0000] <andreubotella>
Looks like it

[13:41:57.0000] <croraf>
The input on the other hand implicitly belongs to the form if it is nested within one. And explicitly if it is outside of one.

[13:42:01.0000] <croraf>
Cool.

[13:42:45.0000] <croraf>
andreubotella, thanks a lot again

[13:43:01.0000] <andreubotella>
sure

[16:43:13.0000] <MikeSmith>
miketaylr: if you still lived in New York, weâ€™d have the fun of calling you Mike East

[16:43:27.0000] <MikeSmith>
but in reality I guess Mike West is the real Mike East

[16:44:10.0000] <MikeSmith>
so to clear up the confusion, I think from now on we need to call you Sonny Red, and Mike West has to be Sonny Black


2020-10-21
[04:02:40.0000] <smaug____>
Does anyone recall if wpt has some server side helper thingie to make page load  slower

[04:03:13.0000] <annevk>
smaug____: time.sleep

[04:03:34.0000] <smaug____>
annevk: is that on the web page?

[04:03:34.0000] <annevk>
smaug____: grep for sleep recursively in the xhr folder to see some examples

[04:03:46.0000] <annevk>
smaug____: no the Python script generating the page

[04:03:48.0000] <smaug____>
or does that make some request being slow

[04:03:50.0000] <smaug____>
ah, great

[07:34:29.0000] <gsnedders>
smaug____: http://web-platform-tests.org/writing-tests/server-pipes.html#trickle would be better than writing custom (cc annevk)

[07:36:03.0000] <annevk>
gsnedders: interesting, guess someone should check if the existing sleep stuff can be refactored

[07:39:02.0000] <smaug____>
that looks handy

[07:39:18.0000] <smaug____>
/me ended up reusing some existing sleep stuff

[07:43:26.0000] <smaug____>
gsnedders: what does "indicate that the preceding N items must be repeated" ?

[07:43:29.0000] <smaug____>
mean

[07:45:48.0000] <gsnedders>
smaug____: see the example at the bottom

[07:46:00.0000] <smaug____>
still don't undersatnd

[07:46:02.0000] <smaug____>
stand

[07:46:09.0000] <smaug____>
what is an "item"

[08:08:40.0000] <gsnedders>
I think a colon-separated thing?


2020-10-22
[22:42:18.0000] <MikeSmith>
only now noticing that Matrix generates and depends on invalid URLs like https://chat.mozilla.org/#/room/#mdn:mozilla.org (that have another # in the fragment part)

[02:26:15.0000] <MikeSmith>
folks here planning to attend any particular TPAC meetings today? Or dropping in on any?

[02:27:22.0000] <MikeSmith>
anything look especially interesting today on any agendas?

[02:28:06.0000] <MikeSmith>
I guess I will be lurking ing the Service Workers and Web Performance meetings anyway

[02:28:57.0000] <MikeSmith>
ah wait, no Service Workers today; just Web Performance

[03:29:02.0000] <annevk>
yoav: do you recall where that thread was with Artur Janc et al about CORP, CORS, and metadata?

[03:29:42.0000] <annevk>
Oh maybe it was via email

[03:30:15.0000] <annevk>
yoav: https://lists.w3.org/Archives/Public/public-webappsec/2020Jul/thread.html#msg5

[03:30:51.0000] <yoav>
indeed https://lists.w3.org/Archives/Public/public-webappsec/2020Jul/0005.html

[03:33:11.0000] <annevk>
yoav: I guess for the thing later today https://lists.w3.org/Archives/Public/public-webappsec/2020Jul/0012.html captures my feelings pretty well, as well as https://lists.w3.org/Archives/Public/public-webappsec/2020Jul/0013.html (did you invite Camille?)

[03:33:47.0000] <yoav>
yup

[03:36:40.0000] <yoav>
From my perspective, we don't have to solve metadata (beyond size) today, as no RT feature exposes it

[03:37:14.0000] <yoav>
there are feature requests that would need that resolution, but that's less urgent than what's already shipping

[03:39:43.0000] <annevk>
I think we should be careful with setting developer expectations though

[03:40:02.0000] <annevk>
Spectre-only yesterday, sizing today, and all metadata tomorrow would not be a good look

[05:50:55.0000] <zcorpan>
Domenic: annevk: how do i address "using a method of iteration which does not trigger developer-modifiable array accessors or iteration hooks"? https://html.spec.whatwg.org/multipage/urls-and-fetching.html#start-intersection-observing-a-lazy-loading-element

[05:51:29.0000] <annevk>
zcorpan: with a low-level primitive?

[05:51:56.0000] <zcorpan>
annevk: any spec language that doesn't need an "XXX" wrapper

[05:52:39.0000] <annevk>
zcorpan: my question was somewhat rhetorical

[05:53:16.0000] <zcorpan>
ok :)

[05:53:27.0000] <annevk>
zcorpan: that is, we need a non-JavaScript hook into intersection observer that the intersection observer API builds on and we can too

[05:55:52.0000] <zcorpan>
annevk: ok so the issue I filed on intersectionobserver was closed by https://github.com/w3c/IntersectionObserver/pull/449 , but doesn't address at least .isIntersecting , and it seems also we need a way to enumerate entries with Infra Standard language

[05:57:01.0000] <annevk>
"The {{IntersectionObserver/thresholds}} attribute getter will return"

[05:57:14.0000] <annevk>
That leads me to think they didn't really address your issue ðŸ™‚

[05:57:27.0000] <annevk>
If they did, there would be internal slots and such to poke at

[05:58:14.0000] <annevk>
(That quote out of context is actually confusing. The problem is that the quote appears in the constructor steps.)

[05:58:48.0000] <zcorpan>
annevk: yeah... https://w3c.github.io/IntersectionObserver/#initialize-new-intersection-observer

[06:11:29.0000] <andreubotella>
annevk: that brain fart was embarrassing

[06:27:10.0000] <zcorpan>
https://github.com/w3c/IntersectionObserver/issues/464

[07:39:47.0000] <annevk>
andreubotella: it isn't really, I had similar thoughts when attempting to address this

[13:59:54.0000] <andreubotella>
> (Registration for public breakouts closed on October 22.)

[14:00:01.0000] <andreubotella>
it doesn't list a timezone though

[14:00:04.0000] <andreubotella>
is it too late?

[14:05:50.0000] <zcorpan>
andreubotella: send an email to dom at w3.org and ask

[14:07:51.0000] <andreubotella>
zcorpan: I'll try that


2020-10-23
[23:18:56.0000] <annevk>
andreubotella: let me know if for some reason that doesnâ€™t work, happy to pull some strings


2020-10-24
[13:25:13.0000] <mitchell>
Test

[13:28:26.0000] <zeroed>
true


2020-10-26
[04:06:05.0000] <annevk>
andreubotella: I guess I should wait a bit with landing your PR to see if Wolf has thoughts?

[04:06:13.0000] <andreubotella>
annevk: sure

[04:07:30.0000] <annevk>
(spotted the Oxford comma issue only after your comment about inlining the assert looking weird)

[04:10:25.0000] <andreubotella>
right

[04:10:40.0000] <andreubotella>
and I went ahead and fixed it in the other convert algorithm too

[04:11:48.0000] <andreubotella>
Personally, I don't like the Oxford comma (probably because it's not common in Spanish), but I'm all for consistency

[06:44:16.0000] <zcorpan>
annevk: Domenic: for the tpac breakout, I was thinking of using a google doc for taking notes, and not IRC

[06:44:59.0000] <annevk>
zcorpan: sure

[06:46:00.0000] <annevk>
andreubotella: itâ€™s not part of Dutch and German either, though it is in mine sometimes

[06:46:21.0000] <zcorpan>
Though the IRC channel for the breakout is on irc.w3.org

[07:43:35.0000] <zcorpan>
Heads up: WHATWG TPAC breakout session starts in ~20 minutes. Agenda and notes in https://docs.google.com/document/d/1fGGOXKC_zM7cYfdZYS3Ns3W2JpjaRwCRhP-5c32BV2s/edit?usp=sharing

[07:53:30.0000] <EveryOS>
Hey, I was taking a look at the spec when I noticed this https://usercontent.irccloud-cdn.com/file/y0rf26SI/image.png

[07:54:06.0000] <EveryOS>
It prevents inserting iframes, but I can't help but think there are ways to clickjack somebody besides inserting iframes

[07:54:38.0000] <EveryOS>
For example, you could write a clicker game where the user repeatedly clicks

[07:54:53.0000] <EveryOS>
And then use `document.location` to redirect to another page, no iframe needed

[07:55:19.0000] <annevk>
And hope the navigation completes before the user clicks again and the user doesn't notice?

[07:55:25.0000] <EveryOS>
Yea

[07:56:08.0000] <annevk>
I guess in theory that might apply yes, and maybe in practice at some point too

[07:56:44.0000] <EveryOS>
Yea. It could probably be fixed by having the UA temporarily disabling use input on a page load, for like a second or two

[07:58:38.0000] <hsivonen>
Where do I get the meeting password for the WHATWG breakout?

[07:59:39.0000] <zcorpan>
hsivonen: are you joining by phone or with Zoom?

[07:59:47.0000] <hsivonen>
Zoom

[08:00:21.0000] <zcorpan>
hsivonen: the "Join Zoom" link in https://www.w3.org/2020/10/TPAC/breakout-schedule.html#whatwg worked for me

[08:09:30.0000] <jgraham>
/me worries that these introductions are going to take 10 minutes

[08:10:39.0000] <annevk>
yeah

[08:11:00.0000] <andreubotella>
I have no clue what I'm doing ^^

[08:12:01.0000] <MikeSmith>
andreubotella, welcome to the club :p

[08:12:19.0000] <annevk>
/me also does stuff

[08:13:42.0000] <Domenic>
In general I think intros only work for <10 people meetings

[08:13:47.0000] <Domenic>
This meeting is impressively popular

[08:14:31.0000] <annevk>
Especially given like 4 people registered on whatwg/html

[08:14:46.0000] <annevk>
I guess that method doesn't work and we should be more proactive

[08:17:00.0000] <Domenic>
I suspect part of it is people who decided they're going to attend a session for every open time slot

[08:17:23.0000] <Domenic>
i.e. their starting point is not WHATWG space but instead https://www.w3.org/2020/10/TPAC/breakout-schedule.html

[08:18:55.0000] <annevk>
Yeah, our only competition adtech

[08:18:58.0000] <annevk>
is*

[08:39:08.0000] <annevk>
zcorpan: FWIW, I'm interested in the image fetching and decoding problem, but someone else needs to drive it

[08:54:19.0000] <annevk>
It's like the module map without being specified :/

[08:54:34.0000] <annevk>
(re caches for style sheets / images / ...)

[09:03:26.0000] <annevk>
nice job zcorpan

[09:03:47.0000] <zcorpan>
thanks annevk

[09:04:28.0000] <hsivonen>
Filed https://bugzilla.mozilla.org/show_bug.cgi?id=1673407 . Thanks.

[09:06:11.0000] <hsivonen>
The general problem seems to be that we lack a "do you need to change the speculative loader?" check list item in reviews for new features (CSP in this case).

[09:16:07.0000] <annevk>
I think ideally we don't disable it btw, we just let it take into account the CSP that we found

[09:16:42.0000] <annevk>
ah, that's what you wrote down

[10:54:50.0000] <zcorpan>
hsivonen: thanks! Out of curiosity, how does speculative `manifest` work? I thought it only worked on the first <html> token, and speculative parsing can only start at </script>. So any manifest seen during speculative parsing ought to have no effect?

[10:55:40.0000] <hsivonen>
The `manifest` travels from the parser thread to the main thread in the speculative op queue so that it is registered before any speculative loads can happen.

[10:56:26.0000] <zcorpan>
hsivonen: ooh. so it's not itself from speculation, but gets into the same queue

[11:04:52.0000] <hsivonen>
Right. It's not speculative but always committed to, because a `document.write` before it is impossible.

[11:05:56.0000] <hsivonen>
With CSP, we'd probably want to make them just stick and not have a mechanism to undo them.

[11:06:12.0000] <hsivonen>
even if a `document.write` could intervene

[11:45:35.0000] <EveryOS>
Sorry to nitpick, but the lack of a comma here confused me for a second https://usercontent.irccloud-cdn.com/file/fD1Sscqc/image.png

[11:47:15.0000] <MikeSmith>
EveryOS: yeah it rightly should have a comma

[11:47:43.0000] <MikeSmith>
can you raise a PR with fix?

[11:49:15.0000] <EveryOS>
Sure, just a second

[11:51:40.0000] <EveryOS>
I haven't PRd before, so I gotta read the prereqs. Tbh, I'd rather not add my name to the Acknowledgments section

[11:54:18.0000] <annevk>
You donâ€™t have to, but the agreement does require a name

[11:54:39.0000] <annevk>
If you file an issue Iâ€™m happy to fix it though

[11:55:16.0000] <EveryOS>
I'll just file an issue

[12:09:06.0000] <EveryOS>
Submitted an issue

[12:09:06.0000] <EveryOS>
https://github.com/whatwg/dom/issues/906

[12:22:51.0000] <EveryOS>
It does feel kind of weird that I opened an issue for something so trivial as the insertion of a single character

[12:42:50.0000] <innovati>
How do you view historic versions of the HTML spec - for example I'm trying to see when the text about HTML custom element tag names showed up

[12:45:52.0000] <zcorpan>
hsivonen: it seems I have a mistake in my test for document.write-ing a <meta charset>. I forgot that the main meta charset scanner looks inside <script>s, and that picked up what I intended to be only seen by speculative parsing in document.write

[12:46:21.0000] <zcorpan>
 /html/syntax/speculative-parsing/generated/document-write/meta-charset-script-src.tentative.sub.html

[12:49:39.0000] <zcorpan>
hsivonen: see https://github.com/web-platform-tests/wpt/pull/24521/commits/b6757f4fbe08f7362903558bb9d73bda83a42ced

[12:51:05.0000] <zcorpan>
hsivonen: so, now the meta charset (backslash-escaped, in document.write) has no effect on the speculative fetch's url encoding in firefox. Is that what we want?

[12:53:06.0000] <zcorpan>
innovati: the history is in git. git log --grep can help

[12:54:09.0000] <Domenic>
innovati: https://html.spec.whatwg.org/commit-snapshots/ , but it might not be as helpful as you're hoping.

[12:54:34.0000] <innovati>
thanks both <3

[12:54:40.0000] <Domenic>
innovati: it probably works best when combined with searching through commit messages

[12:54:48.0000] <zcorpan>
innovati: or searching for merged PRs in github. searching for "custom elements" I found https://github.com/whatwg/html/pull/1012

[12:54:56.0000] <Domenic>
Ah, yeah, that's by far the best technique

[12:55:25.0000] <Domenic>
zcorpan: hsivonen: but note https://github.com/whatwg/html/issues/5913

[12:55:32.0000] <innovati>
I'm used to CSS specs where previous versions are listed, but they're also not updated nearly daily so that would never work for HTML

[12:56:19.0000] <zcorpan>
Domenic: yeah


2020-10-27
[20:25:38.0000] <EveryOS>
I decided to map HTML5 DOM to Java (: Almost finished `Event`. The default implementation that Java provides seems outdated. https://usercontent.irccloud-cdn.com/file/eTliOGYk/image.png

[20:46:17.0000] <MikeSmith>
EveryOS: that sounds interesting

[20:46:35.0000] <MikeSmith>
you plan to release it eventually as a library?

[20:51:35.0000] <EveryOS>
Maybe

[20:54:05.0000] <MikeSmith>
that would be cool

[23:58:46.0000] <hsivonen>
zcorpan: At least I expected document.written charset not to be taken into account. Does the document.written charset trigger a late charset reload? I assume it does. And then speculative fetches for that parse should be right.

[23:59:08.0000] <hsivonen>
zcorpan: from my perspective, document.writing a meta charset is a bad, bad idea

[05:30:57.0000] <zcorpan>
hsivonen: I haven't tested if it'll trigger a reload. The tests do document.write('<plaintext>') to isolate the effect of speculative parsing

[10:27:47.0000] <EveryOS>
I was playing around with a chromium-based browser some, when I noticed some weird things about `Window`.

[10:29:00.0000] <EveryOS>
First off, the spec says that Window should directly extend EventTarget, but in practice, there seems to be a layer of indirection there, with some sort of `WindowProperties` class in between https://usercontent.irccloud-cdn.com/file/0I3EmYpe/image.png

[10:29:44.0000] <annevk>
EveryOS: IDL should define that

[10:30:09.0000] <annevk>
EveryOS: Window is quite special (see also WindowProxy, which you mostly interact with)

[10:31:09.0000] <EveryOS>
From what I can tell, Window directly extends EventTarget https://usercontent.irccloud-cdn.com/file/1sOgl6YN/image.png

[10:32:05.0000] <EveryOS>
Maybe there is something else I missed elsewhere in the spec

[10:35:13.0000] <EveryOS>
Oh wait, you mean within the WebIDL spec itself?

[10:35:46.0000] <EveryOS>
No, it's not there either... https://usercontent.irccloud-cdn.com/file/KO5Fkvxt/image.png

[10:39:29.0000] <EveryOS>
And then the other thing I was curious about was the lack of methods within Window's prototype, even though they appear on an initialized window. https://usercontent.irccloud-cdn.com/file/sNihFABF/image.png

[10:39:49.0000] <EveryOS>
Though I am going to guess that also has something to do with `WindowProxy`

[10:40:31.0000] <EveryOS>
I'm probably just looking at the WindowProxy class and it's just calling itself Window anyways

[10:43:13.0000] <annevk>
EveryOS: you want to search for stuff IDL does for globals with named properties

[10:43:25.0000] <annevk>
EveryOS: it doesn't mention the object directly

[10:44:30.0000] <EveryOS>
Oh, I see

[11:01:40.0000] <EveryOS>
Ok, yea, that explains everything I noticed

[11:01:40.0000] <EveryOS>
1. Any named properties will be exposed on an object in the prototype chain â€“ the named properties object â€“ rather than on the object itself.

[11:01:40.0000] <EveryOS>
2. Interface members from the interface will correspond to properties on the object itself rather than on interface prototype objects.

[11:02:46.0000] <EveryOS>
To be honest, the specs are just so large, there will probably always be something I don't understand

[12:27:20.0000] <annevk>
Itâ€™s too much for one person for sure

[15:26:08.0000] <EveryOS>
`if EventTarget IS A ServiceWorkerGlobalScopeObject...`How does the "is a" relationship work woth Ecmascript Objects? Do we compare .name, compare .__proto__, or do we use an internal slot which we then compare? https://usercontent.irccloud-cdn.com/file/1J1XuClo/Screenshot_20201027-175903.png

[15:28:15.0000] <andreubotella>
https://heycam.github.io/webidl/#idl-objects

[15:29:26.0000] <andreubotella>
I thought there was also a [[PromiseObject]] internal slot, but I might be misremembering

[15:30:32.0000] <EveryOS>
On the site you linked, it says it is implementation specific, but does suggest using internal state/internal slot. Thanks!

[15:31:03.0000] <EveryOS>
Sooner or later I should read the WebIDL spec from top to bottom, and take notes


2020-10-28
[18:01:53.0000] <EveryOS>
When I put licenses on my code, I use my username instead of my legal name. I really hope that never comes back to hunt me

[00:15:18.0000] <noamr>
Morning zcorpan and annevk, I'm trying to dig into an old irritating issue called MouseEvent.offsetX... thought you might be able to shed some light on it.

[00:17:14.0000] <noamr>
... seems like Blink/WebKit are doing something different from Gecko, which matches the spec, especially in terms of inline elements. Trying to see how to remedy this without causing major compatibility issues

[00:33:08.0000] <annevk>
noamr: I only recall that I thought we should define those directly in UI events

[00:34:24.0000] <annevk>
noamr: other steps that come to mind: looking if there are existing bug reports against browsers, spec issues, and tests, and organize all that a bit (and complete test coverage if incomplete)

[00:38:00.0000] <noamr>
That's what I've done so far, annevk. The response I got from both WebKit & Blink folks is caution due to backwards compatibility

[00:39:45.0000] <annevk>
noamr: and Gecko has no existing bugs due to this?

[00:40:58.0000] <annevk>
noamr: if that's the case I guess for Gecko to change we'd want some telemetry and perhaps look at some usage in HTTP Archive or GitHub (code search) to see what the results might be; then if that looks okay roll it out to Nightly/Beta for a bit and then Release

[00:42:18.0000] <noamr>
annevk you mean roll out something like conforming Gecko to the Blink/WebKit behavior?

[00:42:38.0000] <annevk>
noamr: yeah

[00:44:51.0000] <noamr>
I actually think the Gecko/spec behavior makes a lot more sense, but consistency would be better than what we have now... let me see what I can dig in terms of http archive etc. thanks for now annevk

[00:46:34.0000] <annevk>
It might be worth seeing what their requirements are for changing this to get past the unease, but without might insight into this particular situation it seems more challenging to get them to change

[01:15:26.0000] <noamr>
I think it's similar requirements... to see how it's used in the wild. apparently the strange behavior in inline elements is an inheritance from IE

[02:41:31.0000] <zcorpan>
noamr: what is the behavior difference?

[02:42:35.0000] <noamr>
zcorpan: the main one is with inline elements. In Gecko & the spec, offsetX is the offset from the target (inline) element. In WebKit/Blink/previously-in-IE, offsetX is the offset from the nearest block ancestor

[02:44:24.0000] <annevk>
noamr: does offsetParent play a role on this?

[02:44:52.0000] <annevk>
the CSSOM has a lot of somewhat sad APIs :-(

[02:44:54.0000] <noamr>
No. offsetParent is the nearest positioned ancestor, while the behvior is the nearest block ancestor

[02:45:35.0000] <zcorpan>
noamr: ok. it might be hard to find interesting cases through code search. But you could maybe add a use counter in chromium. It's possible to query for use counter matches in httparchive (but you'll need to wait until it's in stable + the next httparchive run)

[02:45:39.0000] <noamr>
Yes, which later creates even sadder performance problems as devs use getBoundingClientRect() as a solution and cause layout-thrashing

[02:46:18.0000] <noamr>
I think a UseCounter for using offsetX/offsetY on an inline element would be an interesting one

[02:51:36.0000] <noamr>
Another more subtle difference is that Firefox computes offsetXY when the even is dispatched, and Blink/WebKit compute it when it's first requested, which could be after additional layouts have happened. But I think that can be fixed without a big effect on compatibility

[02:53:35.0000] <annevk>
noamr: so right, another thing to test is the values of those properties for synthetic events

[02:53:49.0000] <annevk>
noamr: I think the current spec might not really account for those

[02:57:32.0000] <noamr>
Actually it does! synthetic events get offsetX/offsetY = 0

[03:07:28.0000] <annevk>
noamr: but that's wrong, right? https://software.hixie.ch/utilities/js/live-dom-viewer/saved/8635

[03:11:38.0000] <noamr>
Possibly. Will add that to my research

[03:20:03.0000] <annevk>
I mean, that logs -8 in all browsers for me

[03:21:15.0000] <annevk>
Another interesting test might be moving the element and then checking the property again; it kinda seems like it's just computed on the fly

[03:24:25.0000] <zcorpan>
noamr: I found https://www.w3.org/Bugs/Public/show_bug.cgi?id=16673

[04:05:02.0000] <noamr>
annevk: It's computed on the fly, but cached after the first time. unintuitive IMO

[04:06:23.0000] <annevk>
oh wow, that's pretty bad

[04:14:02.0000] <noamr>
it's for "performance" but can actually create performance bottlenecks by creating unexpected layout thrashing

[06:20:03.0000] <noamr>
annevk: re. the synthetic test event, clientX/clientY are 0, and offsetX is derived from that (in this case it's 8 due to the body margin)

[06:23:28.0000] <annevk>
noamr: so it seems there are Gecko bugs btw, such as https://bugzilla.mozilla.org/show_bug.cgi?id=1359440

[06:23:42.0000] <annevk>
There's also various open issues at https://github.com/w3c/csswg-drafts/issues?q=is%3Aissue+is%3Aopen+offsetX

[06:25:19.0000] <noamr>
annevk: yes, I've recently opened one of them, I think the SVG one is similar, and there is another issue there that I've mentioned before (re. timing of the event)

[06:27:10.0000] <annevk>
Ah, https://github.com/w3c/uievents/issues/24 is a continuation of a bug I filed in 2014

[11:05:07.0000] <annevk>
Domenic: where is the whatbot code?

[11:05:22.0000] <Domenic>
annevk: https://github.com/whatwg/participate.whatwg.org

[11:05:44.0000] <Domenic>
annevk: mostly https://github.com/whatwg/participate.whatwg.org/blob/master/lib/pr-webhook.js

[11:06:03.0000] <annevk>
Oh so I was looking there but grepping for whatbot yielded nothing

[11:06:07.0000] <annevk>
Thanks!

[11:06:09.0000] <Domenic>
it logs in using https://github.com/whatwg/participate.whatwg.org/blob/master/lib/helpers/github.js#L6-L8

[12:13:26.0000] <EveryOS>
I can see that using the argument as a function is preferred over using the argument's `handleEvent` as a function. Where exactly is this precedence defined? The spec only says `It can be implemented by any object, as described`, I can't find where it defines the precedence. https://usercontent.irccloud-cdn.com/file/4wekvbW2/image.png

[12:14:52.0000] <Domenic>
EveryOS: https://heycam.github.io/webidl/#call-a-user-objects-operation

[12:17:09.0000] <EveryOS>
Domenic: Thanks, I had been looking at section 2.4, which has the same name as section 3.11. Didn't realize it was specified further down.


2020-10-29
[19:45:16.0000] <EveryOS>
Language bindings between Ecmascript and a type-safe language sounds hard. If it were simply reflection, it wouldn't be too hard. But say you want to map a function to a native interface implementation. I can see a few options. The easiest sounding one is to tell the WebIDL binding library how to convert a function to a native interface implementation, say `registerBinding("EventListener", EventListener.class,

[19:45:16.0000] <EveryOS>
func->((event)->func.call(event)))`, which would effectively tell our IDL code to convert a Javascript Function to the interface required by the language we are binding to.

[19:46:10.0000] <EveryOS>
But that wiould decrease modularity, by increasing dependency on the IDL Binding library. But I suppose there is no getting away from that, in the first place

[19:46:29.0000] <EveryOS>
The other option would be to generate and load bytecode on the fly, which would be much harder

[04:58:24.0000] <ondras>
so, img[crossorigin] - is there an API to detect a CORS error when loading such image (via JS) ?

[07:04:22.0000] <innovati>
are you allowed to invent custom attribute names for autonomous custom elements (declared in HTML alone, like <hello-world custom></hello-world> with no associated customElements definition)?

[07:16:15.0000] <devsnek>
how does TLA work with multiple module tags

[07:16:40.0000] <devsnek>
in the context of this comment anyway https://github.com/tc39/proposal-compartments/issues/27#issuecomment-718772705

[07:26:47.0000] <zcorpan>
hsivonen: hmmmmm, will gecko avoid speculatively fetching anything if the encoding is still unknown?

[07:27:37.0000] <hsivonen>
zcorpan: no, the encoding is always known by the time the non-meta-prescanner tokenizer runs.

[07:28:05.0000] <hsivonen>
zcorpan: however, it's possible that a charset reload is triggered later, but then that tokenization happens with an encoding that's treated as known

[07:28:46.0000] <hsivonen>
so what you call "unknown" is considered "late" but Gecko

[07:29:00.0000] <hsivonen>
and "late" reloads the page

[07:29:07.0000] <hsivonen>
unless it's a POST response

[07:31:39.0000] <zcorpan>
hsivonen: ok. with this change https://github.com/web-platform-tests/wpt/pull/24521/commits/08e66e7a5580e1750abea123806a026cd5ec667a , firefox no longer fetches the script in the "page-load" test

[07:33:18.0000] <hsivonen>
zcorpan: yeah, that look like it's working as expected

[07:37:39.0000] <zcorpan>
hsivonen: I don't understand why it doesn't speculatively fetch the script

[07:39:15.0000] <hsivonen>
Hmm. Yeah, the plaintext hasn't really happened at that point.

[07:39:55.0000] <hsivonen>
I don't have an answer to that.

[07:40:25.0000] <zcorpan>
hsivonen: ok :) maybe it's a bug then

[08:18:45.0000] <EveryOS>
/me I saw this and thought that there was an error in the browser implementation, but then I realized my battery was at 99% lol

[08:18:55.0000] <EveryOS>
https://usercontent.irccloud-cdn.com/file/Q2wK8Hgf/image.png

[08:19:15.0000] <EveryOS>
Huh, IRC formatted my message weirdly

[13:52:42.0000] <zcorpan>
Lazy-loading fans may be interested in this tpac breakout session tomorrow: https://www.w3.org/2020/10/TPAC/breakout-schedule.html#intersectionobserver

[14:52:31.0000] <EveryOS>
I haven't had much time to work on that DOM library I was writing (I've been busy). I'm currently on dispatching events, but I am not at home right now because I clock into work in a few minutes. Tomorrow I get a day off, so if I'm lucky, I might make some progress. I'm really wanting to get to the part where I implement nodes.

[14:53:42.0000] <Domenic>
EveryOS: I assume you're aware of https://github.com/jsdom/jsdom ?

[14:56:12.0000] <EveryOS>
No, but I am actually using Java, not JS. But I just starred the repo in case it comes in handy.

[14:57:18.0000] <EveryOS>
Btw, the reason I don't just use the org.w3c package is that it appears outdated. It has methods that the spec specifically says should not exist, and that type of stuff.

[14:59:59.0000] <EveryOS>
I gotta clock in, so bye


2020-10-31
[20:45:46.0000] <EveryOS>
I am literally so stupid I keep misspelling EventTarget over and over again and then wondering why the class does not exist https://usercontent.irccloud-cdn.com/file/7yAD0TLl/image.png

[00:13:22.0000] <yoonus>
hi

[00:14:49.0000] <yoonus>
I am having trouble with my website while purchasing via paypal. I got the console error, what is it? Problem with Paypal or End User?

[00:15:03.0000] <yoonus>
[Deprecation] Synchronous XMLHttpRequest on the main thread is deprecated because of its detrimental effects to the end user's experience. For more help, check https://xhr.spec.whatwg.org/.

[00:15:03.0000] <yoonus>
send @ jquery-2.1.1.min.js:4

[00:15:35.0000] <yoonus>
Please help me out..

[00:22:35.0000] <yoonus>
Any reply??

[00:25:04.0000] <andreubotella>
hi

[00:25:26.0000] <andreubotella>
this IRC channel is for developing web standards, or at least helping people understand the standards, not for dev help

[00:26:10.0000] <andreubotella>
you got here because the link in the console warning points to the XHR spec -- ideally it should point to MDN instead

[00:26:39.0000] <andreubotella>
that said, it's quite odd for even old versions of jQuery to be using synchronous XHR

[00:27:05.0000] <andreubotella>
I'd try asking on stackOverflow

[00:30:13.0000] <andreubotella>
huh, now that I look at it, jQuery *does* let you do sync fetches

[00:30:18.0000] <andreubotella>
are you using $.ajax({async: false})?

[00:31:50.0000] <yoonus>
Thanks. I am not expert in Ajax. I used pre-made Ecommerce templates. Finally this error appeared after paypal configuration...

[00:35:10.0000] <andreubotella>
If the code on your site has async: false on the parameters to $.ajax, that's what's causing the warning

[00:36:17.0000] <andreubotella>
synchronous fetches will block the site from doing anything, even reacting to clicks or scrolling, until they're done -- which isn't good

[00:36:39.0000] <andreubotella>
but be aware that removing the async: false parameter might change the behavior of the rest of the code

[00:37:36.0000] <andreubotella>
if you have anything else, you should ask over on StackOverflow

[00:38:48.0000] <yoonus>
Thank you very much indeed for helping me..

[01:34:56.0000] <yoonus>
Yes. I used ajax({async: false}). Now I changed it to ajax({async: true}), But the problem still appears..

[02:01:56.0000] <lockywolf>
Hello, everyone. Who can fix a broken link at the blog?

[02:01:58.0000] <lockywolf>
http://diveintomark.org/archives/2002/05/30/rss_autodiscovery

[02:02:06.0000] <lockywolf>
https://blog.whatwg.org/feed-autodiscovery

[02:02:22.0000] <lockywolf>
Can be replaced with a "web archive" link, for example.

[03:53:37.0000] <annevk>
lockywolf: could you file an issue against whatwg/meta on GitHub? Iâ€™ll do it Monday unless someone beats me to it

