2013-06-01
[17:01:18.0000] <Hixie>
hey we let _you_ edit

[17:01:20.0000] <Hixie>
/me ducks

[18:53:16.0000] <GPHemsley>
Specs todo could probably use a good audit

[19:02:19.0000] <zewt>
add it to the spec todo

[19:04:17.0000] <GPHemsley>
heh

[19:05:04.0000] <boogyman>
haha

[00:39:00.0000] <annevk>
odinho_: can you look at https://bugzilla.mozilla.org/show_bug.cgi?id=869874 please

[01:41:24.0000] <dekiss>
good morning all

[02:19:49.0000] <dkiss>
is this complete list of http-equiv attribute posible values? http://msdn.microsoft.com/en-us/library/ie/ms537417(v=vs.85).aspx

[02:28:25.0000] <dekiss>
which is best way to cntrol how browsers cahce my web page?

[04:05:49.0000] <odinho_>
annevk: Yeah, I took a look at it, but I have not a full debugging setup since I've changed computers since moving to Desktop.

[04:07:31.0000] <odinho>
I will do that when back at work again where I probably should set up a system again.

[04:30:51.0000] <dekiss>
what I don't understand about expire http header is this, someone visit my webpage and current date is after the expires date on my webpage so he gets fresh copy but then he visits again in the next day and he again takes fresh copy? or his browser knows that he has good copy on hdd?

[05:29:52.0000] <annevk>
odinho: cool

[08:27:29.0000] <GPHemsley>
SimonSapin: Were you aware of http://greenbytes.de/tech/tc/datauri/ ? (It's from jreschke.)

[08:27:42.0000] <GPHemsley>
/me enjoys talking to people through logs they're unlikely to read.

[09:07:50.0000] <odinho>
GPHemsley: annevk seems to read logs (hi there, man!)

[09:18:28.0000] <GPHemsley>
odinho: Yeah, but he's the only one I know of.

[09:18:38.0000] <Ms2ger>
/me raises hand

[09:19:50.0000] <GPHemsley>
good to know

[09:21:09.0000] <GPHemsley>
Help me out with phrasing here: " Once a MIME type has been extracted according to the syntax of its containing protocol, it must be parsed in order to obtain the information it contains. "

[09:21:53.0000] <Ms2ger>
What are you trying to accomplish? :)

[09:22:55.0000] <GPHemsley>
I want to tell anyone implementing the "parse a MIME type" algorithm that they're to handle any protocol-specific stuff (like URL encoding, or multi-line unescaping) before they run the algorithm, and that the only way to extract information from a MIME type is by running this algorithm

[09:25:00.0000] <Ms2ger>
Mm

[09:26:44.0000] <Ms2ger>
I'd think the first part should be obvious from the layering

[09:27:27.0000] <GPHemsley>
you'd think, but you wouldn't always be right ;)

[09:37:02.0000] <odinho>
I'm always on, and I frequently read backlog.

[09:37:19.0000] <odinho>
That's the same as log reading, only without the irritating log reading.

[09:38:40.0000] <dekiss>
guys did I talked to real Hixie yesterday?

[09:39:54.0000] <tantek>
dekiss, identity on IRC, it is a challenge isn't it?

[09:40:22.0000] <dekiss>
yep :)

[09:40:55.0000] <dekiss>
he said he is he was admin here but never replied to my mail i sent him test email and asked for him to reply as I see he is really him :)

[09:41:55.0000] <tantek>
he gets a lot of email :)

[09:56:37.0000] <GPHemsley>
odinho: Indeed.

[09:56:48.0000] <GPHemsley>
dekiss: If we tell you no, will you stop asking?

[10:01:59.0000] <GPHemsley>
Ms2ger: No tips?

[10:02:43.0000] <Ms2ger>
Can't come up with anything, I'm afraid

[10:03:14.0000] <dekiss>
GPHemsley im not sure

[10:04:25.0000] <Ms2ger>
dekiss, and yes, Hixie is Hixie

[10:08:22.0000] <dekiss>
have you edited some html css content or something else

[11:49:18.0000] <zcorpan>
GPHemsley: for parameters, you can test parsing in other headers than content-type. For instance, Link: <foo.css>; type=stylesheet; title=etc

[11:49:39.0000] <zcorpan>
GPHemsley: or Content-Disposition: download; filename="..."

[11:51:10.0000] <zcorpan>
er, attachment

[11:51:40.0000] <zcorpan>
Refresh: ...

[11:51:50.0000] <zcorpan>
Set-Cookie:

[12:02:21.0000] <Ms2ger>
Set-Cookie2

[12:02:23.0000] <Ms2ger>
/me ducks

[12:08:22.0000] <GPHemsley>
zcorpan: I was wondering about that... are all HTTP headers parsed the same? Because this algorithm assumes it only applies specifically to MIME types.

[12:12:13.0000] <zcorpan>
GPHemsley: i don't know, but it might be worth looking into

[12:12:24.0000] <GPHemsley>
perhaps

[12:12:34.0000] <zcorpan>
it would make sense to parse them the same

[12:13:14.0000] <GPHemsley>
in some ways yes and in some ways no

[12:13:29.0000] <GPHemsley>
MIME types are (now) defined independent of HTTP

[12:13:48.0000] <GPHemsley>
and I don't know the extent of coordination between the two

[12:13:57.0000] <GPHemsley>
(since HTTP 1.1 was defined)

[12:16:07.0000] <zcorpan>
i'm more interested in whether current implementations use the same parser for all headers

[12:26:39.0000] <GPHemsley>
I don't think they do

[12:26:49.0000] <GPHemsley>
but that's just my anecdotal impression

[12:27:04.0000] <GPHemsley>
(since I know I've look at MIME type-specific code)

[12:27:07.0000] <GPHemsley>
+ed

[12:37:29.0000] <GPHemsley>
/me wonders why IETF has so often chosen to abbreviate "parameter" as "parm" instead of "param"...

[12:37:35.0000] <GPHemsley>
it makes me hungry...

[12:42:10.0000] <GPHemsley>
Ms2ger: Is there a way to make anolis use a different timezone than UTC?

[12:44:02.0000] <Ms2ger>
GPHemsley, not at this point; patches welcome

[12:44:18.0000] <GPHemsley>
Where in the code might that go?

[12:44:55.0000] <Ms2ger>
anolislib/processes/sub.py

[12:45:05.0000] <Ms2ger>
Where it says time.gmtime() now :)

[12:59:42.0000] <dekiss>
should I wrap my website in article element?

[12:59:55.0000] <dekiss>
if I want to make in the left side logo and in right some picture or s;lideshow should I put invisible header element?

[13:01:20.0000] <dekiss>
in which element should I wrap my website?

[13:02:01.0000] <Ms2ger>
body

[13:02:26.0000] <dekiss>
:)

[13:02:35.0000] <dekiss>
other,

[13:02:43.0000] <dekiss>
so I can put my website in middle of screen

[13:02:47.0000] <dekiss>
div? or

[13:04:18.0000] <dekiss>
I cant put body in the middle, that way I must put every element in the middle separately

[13:04:27.0000] <dekiss>
and I will not have control over webwite

[13:13:05.0000] <GPHemsley>
Ms2ger: Not the best code, but there you go.

[13:16:58.0000] <dekiss>
why when I put h1 and h2 heading in hgroup element they are boh same size?

[14:00:00.0000] <GPHemsley>
Hixie: What was the difficulty in defining a "resource" again?

[14:11:23.0000] <dekiss>
should I give ids and classes to html5 semantic section element like header nav section article?

[15:08:52.0000] <GPHemsley>
/me grumbles something about bug reporters who don't accept bugmail

[15:39:44.0000] <dekiss>
is it ok to put articles in sections?


2013-06-02
[17:25:01.0000] <GPHemsley>
Is there by any chance a list of CSS properties that use url() and related resource-requesting methods?

[17:52:29.0000] <dekiss>
margin: 0px; margin-left: 10px; is this mistake?

[18:11:34.0000] <boogyman>
dekiss: yes, "0" does not have unit.

[18:12:16.0000] <SimonSapin>
(0px still works, of course. Unitless is just shorter.)

[18:13:13.0000] <SimonSapin>
dekiss: not a mistake, no. top, bottom and right will be 0px, left 10px

[18:15:16.0000] <dekiss>
yeah

[18:15:39.0000] <dekiss>
assigning 10 same properties with different values is not mistake in css it seem so..

[18:17:07.0000] <SimonSapin>
shorthands are equivalent to having declarations for their longhands at the same place, and multiple declarations with the same name are fine: the last valid one is used

[18:17:08.0000] <boogyman>
dekiss: the rules of specificity define what gets defined as "most important"

[18:18:28.0000] <dekiss>
yeah

[18:19:42.0000] <dekiss>
oh guys

[18:19:47.0000] <dekiss>
im so exited abotu my project :)

[18:20:34.0000] <dekiss>
im not sure if I am doing this right ill paste code in jsfiddle for you to see ok?

[18:20:56.0000] <dekiss>
http://pastebin.com/XaBUFhmV

[18:21:08.0000] <dekiss>
please guys what you think about this html code?

[18:21:11.0000] <dekiss>
is it good?

[18:26:02.0000] <GPHemsley>
SimonSapin: Do you read the logs from when you're offline?

[18:26:25.0000] <SimonSapin>
GPHemsley: rarely

[18:26:30.0000] <SimonSapin>
why?

[18:26:39.0000] <GPHemsley>
I posted something in here for you earlier

[18:27:37.0000] <SimonSapin>
http://greenbytes.de/tech/tc/datauri/ this? Yes, I’m aware of it

[18:27:51.0000] <GPHemsley>
ah, ok

[18:28:12.0000] <SimonSapin>
but haven’t looked into it in details, nor have done anything with data: for some time

[18:28:19.0000] <GPHemsley>
oh

[18:28:25.0000] <GPHemsley>
alright

[18:29:47.0000] <SimonSapin>
Not sure when I’ll get to it … if someone else wants to work on data:, feel free to do so

[19:27:13.0000] <GPHemsley>
Is Document restricted to HTML/XML documents, or is it present in any document the browser loads?

[19:28:23.0000] <GPHemsley>
And, by extension, then, is a browsing context restricted to HTML/XML documents, or does it apply to any document the browser loads?

[01:15:33.0000] <Ms2ger>
GPHemsley, does http://www.whatwg.org/html/#read-text answer your question?

[06:55:02.0000] <GPHemsley>
Ms2ger: Actually, http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#read-media is probably more relevant

[06:55:10.0000] <GPHemsley>
But thanks for the pointer

[06:55:17.0000] <Ms2ger>
Well, yes, all the subsections there :)

[06:55:30.0000] <GPHemsley>
this document is so big, I have no idea these sections even exist

[06:55:50.0000] <GPHemsley>
I should really just assume that if I have a question, it's answered in the spec somewhere

[06:56:15.0000] <GPHemsley>
(which is probably why Hixie suggested I just keep the one-page version open all the time)

[06:57:31.0000] <Ms2ger>
Yeah, the kitchen sink picture is more accurate than is given account for :)

[06:58:33.0000] <GPHemsley>
interestingly, in addition to finding out about new sections, I also find out about new places mimesniff is implicitly referenced

[07:23:24.0000] <GPHemsley>
Ms2ger: 404 http://ms2ger.freehostia.com/tests/html5/browsing-the-web/load-text-plain.html

[07:23:41.0000] <GPHemsley>
from http://www.whatwg.org/specs/web-apps/current-work/show-tests.html?section=read-text

[07:23:42.0000] <Ms2ger>
Oh dear

[07:24:22.0000] <Ms2ger>
Should be http://w3c-test.org/web-platform-tests/master/html/browsers/browsing-the-web/read-text/load-text-plain.html

[07:24:28.0000] <Ms2ger>
But looks like it's broken...

[07:27:20.0000] <Ms2ger>
I'll fix when github comes back up

[07:34:27.0000] <GPHemsley>
github is down again?

[07:34:33.0000] <GPHemsley>
how are they able to get away with that?

[08:05:38.0000] <Ms2ger>
GPHemsley, should be fixed now

[08:40:20.0000] <GPHemsley>
Ms2ger: Out of curiosity, did you check for others?

[08:40:34.0000] <Ms2ger>
No

[08:40:44.0000] <GPHemsley>
(and, of course, the other problem is that this 404s too: http://w3c-test.org/web-platform-tests/common/text-plain.txt )

[08:40:46.0000] <Ms2ger>
I need to look through them all at some point

[08:41:10.0000] <Ms2ger>
Refresh, I should have fixed that

[08:41:25.0000] <GPHemsley>
ah

[08:41:27.0000] <GPHemsley>
yup

[08:42:09.0000] <GPHemsley>
hmm...

[08:42:34.0000] <GPHemsley>
the reason Safari fails this test (which is the reason it caught my eye in the first place) is because it doesn't get "text/plain" out of it

[08:42:46.0000] <GPHemsley>
assert_equals: expected (string) "text/plain" but got (undefined) undefined

[08:43:35.0000] <GPHemsley>
Chrome is the same

[08:44:44.0000] <GPHemsley>
and apparently IE8 doesn't even run the test properly

[08:45:05.0000] <boogyman>
IE10 gives 404 too

[08:46:07.0000] <GPHemsley>
oh, right, I was reading somewhere that document.contentType is Mozilla-only

[08:46:18.0000] <GPHemsley>
IE has .mimeType, but WebKit doesn't have either

[08:46:23.0000] <GPHemsley>
(from what I've read)

[08:46:56.0000] <GPHemsley>
though apparently Opera doesn't have a problem

[08:47:57.0000] <Ms2ger>
It's in the spec ;)

[08:48:28.0000] <GPHemsley>
is it?

[08:48:36.0000] <GPHemsley>
these tests seem to be a problem all over

[08:48:46.0000] <GPHemsley>
apparently nobody implements this stuff except Mozilla

[08:49:01.0000] <GPHemsley>
(the read-media tests fail even worse than read-text)

[08:50:09.0000] <GPHemsley>
IE8 fails simply because it doesn't like data: URLs and redirects straight to them

[09:45:28.0000] <GPHemsley>
I can't figure out where multipart/x-mixed-replace is defined...

[09:45:43.0000] <GPHemsley>
and/or what its purpose is

[09:47:04.0000] <Ms2ger>
There's several assumptions there...

[09:50:46.0000] <GPHemsley>
?

[09:52:08.0000] <Ms2ger>
That it is defined

[09:52:12.0000] <Ms2ger>
That it has a purpose

[09:56:03.0000] <zewt>
some definition in html...

[10:23:45.0000] <GPHemsley>
Ms2ger: I'll settle for a usecase or any indication as to why it is exists and is mentioned in the HTML spec :)

[10:35:47.0000] <zewt>
GPHemsley: the html spec mentions mjpeg

[10:36:38.0000] <GPHemsley>
ah, that instance of "multipart/x-mixed-replace" isn't linked

[10:36:49.0000] <GPHemsley>
that's why I didn't find it

[10:36:54.0000] <GPHemsley>
/me didn't search manually

[10:37:32.0000] <GPHemsley>
zewt: Thanks, though!

[10:42:40.0000] <GPHemsley>
looks to be the only instance not linked, despite being the only indication as what "multipart/x-mixed-replace" actually is

[10:47:07.0000] <GPHemsley>
Ms2ger: It's further confusing because a MIME type registration card for multipart/x-mixed-replace is included in the spec

[10:50:39.0000] <zewt>
perplexed by mail to www-dom

[10:51:09.0000] <zewt>
someone @chromium.org who is 1: surprised that exceptions are caught during event invocation and 2: reading the TR of dom level 2

[11:44:08.0000] <Ms2ger>
zewt, hrm, I think the default is to propagate exceptions, actually...

[13:49:18.0000] <dekiss>
why IE didn't implemented transition in IE 9?

[13:49:34.0000] <dekiss>
I find this hard to understand

[15:20:50.0000] <zewt>
ms2ger (this is a test of the Ms2ger Reads Logs system): i don't think "spec algorithms propagate exceptions by default" makes sense, since that would leave the precise behavior underspecified

[15:21:14.0000] <zewt>
If this results in an exception, then abort the overall structured clone algorithm, with that exception being passed through to the caller."

[15:21:21.0000] <zewt>
thanks irc client for removing the first half of my line

[15:21:29.0000] <zewt>
in many places html says things like ^

[16:02:21.0000] <dekiss>
is it dangerious to use new html5 elements? for security

[16:02:43.0000] <Hixie>
we don't really call it html5 anymore, it's just html

[16:03:21.0000] <Hixie>
and to answer your question: in general, no, though specific elements may have security concerns you should be aware of

[16:03:24.0000] <Hixie>
like iframe

[16:05:52.0000] <dekiss>
hey Hixie thanks for help

[16:06:38.0000] <dekiss>
when html 5 will be w3c recomendatiton (w3c implements it like html5.)

[16:06:52.0000] <dekiss>
and why it implements it like html5.. but thats another subject :)

[16:07:10.0000] <Hixie>
don't ask me, i don't see much point in the w3c's work on html

[16:07:22.0000] <dekiss>
I plan to use drag drop and content editable and such for my new website

[16:07:39.0000] <dekiss>
you work together on the spec?

[16:07:56.0000] <Hixie>
no, they just copy what we do and then screw it up

[16:08:03.0000] <dekiss>
hah :)

[16:08:09.0000] <Hixie>
(intentionally sometimes, unintentionally other times)

[16:08:14.0000] <dekiss>
I tell kids you work together on it ^^ :D

[16:08:19.0000] <zewt>
(you think he's joking)

[16:08:26.0000] <dekiss>
zewt nope :D

[16:08:51.0000] <dekiss>
hm

[16:09:36.0000] <dekiss>
Hixie I have though about this subject alot honestly, and I think that w3c had other plans for the web then browser vendors

[16:09:57.0000] <dekiss>
I think they wanted to make direction for the web in where it will go in the future

[16:10:10.0000] <Hixie>
it's a mistake to assign to the w3c a single desire or direction

[16:10:22.0000] <dekiss>
though I never have read xhtml specs entirely

[16:10:30.0000] <Hixie>
as a venue for multiple companies to discuss matters, there are many opinions

[16:14:07.0000] <zewt>
also the w3c can have all the "plans" for the web they want, they can also want a singing unicorn

[16:15:56.0000] <dekiss>
they are good people

[16:16:10.0000] <dekiss>
they mean good for web and people, its just different people different opinions

[16:16:41.0000] <zewt>
everyone means well, that doesn't go very far :)

[16:17:05.0000] <Hixie>
not sure what you mean by "good people" in this context

[16:17:12.0000] <dekiss>
if yo uask me, I want web to be free and opened to as much peopel as posible -(peopel with assistive technology most),

[16:17:27.0000] <Hixie>
i have definitely met people through the w3c who were quite happy to put their corporation's interests ahead of the web's

[16:17:36.0000] <Hixie>
which doesn't seem "good" to me

[16:17:52.0000] <Hixie>
q.v. the w3c working on drm now

[16:17:54.0000] <dekiss>
but that is only way web will go I think it will develop a lot in the future as the demand for it is enormous

[16:18:08.0000] <dekiss>
Hixie hm

[16:18:17.0000] <dekiss>
yeah there are such people everywhere

[16:18:28.0000] <dekiss>
when I say 'they' I refer to Tim :0

[16:18:46.0000] <dekiss>
and people liek him, I beleive they hold key positions, but ye I am against paid membership

[16:19:04.0000] <dekiss>
its only around 2000 $ yearly for my country for 1 year membership

[16:19:20.0000] <Hixie>
not clear that tim does anything for the web these days, unless you count the rdf stuff, and i'm not even sure he's much involved in that anymore

[16:19:22.0000] <dekiss>
that means almost anyone can get in

[16:19:56.0000] <dekiss>
if you ask me I think there should not be paid membership, but only membership with some work done in the past, people with titles etc prizes

[16:20:00.0000] <dekiss>
not money

[16:21:07.0000] <dekiss>
Hixie I think its time for new ceo of w3c

[16:21:26.0000] <dekiss>
or he must take work in his hands

[16:21:31.0000] <dekiss>
and fix things

[16:22:17.0000] <dekiss>
I think web lacks a lot of legislation

[16:22:51.0000] <dekiss>
in my country for example they only added few laws that include web in 2-3 years ago

[16:23:01.0000] <dekiss>
and they have no idea how to regulate other stuff that is on the web

[16:23:21.0000] <dekiss>
first thing msut be done is forbid adult content from web at all liek chinese did

[16:24:10.0000] <tdsmith>
sounds uncontroversial

[16:24:13.0000] <dekiss>
here I watch 12 year old kids go on some "web portal" some bad web site and see - News, Poliics, Economy, SEX & EROTICS, sport, culture, showbiz..

[16:24:30.0000] <dekiss>
I mean cmon.. every so called web portal has sex and erotics section these days

[16:24:33.0000] <dekiss>
at least in my country

[16:24:45.0000] <dekiss>
and next to the website there are ads from t-mobile and such..

[16:25:09.0000] <dekiss>
second thing is microsoft and viruses

[16:25:16.0000] <dekiss>
and hacks

[16:25:19.0000] <dekiss>
ddos third

[16:25:25.0000] <dekiss>
etc

[16:25:51.0000] <dekiss>
imo icann iana ietf w3c wahtwg should come in one body and regulate this stuff asap

[16:26:06.0000] <dekiss>
add soem security work with countries to make legislations

[16:26:17.0000] <zewt>
... standards bodies != governments ...

[16:27:02.0000] <dekiss>
zewt they must colaborate

[16:27:14.0000] <zewt>
(and the idea of the w3c influencing legislation is a bit terrifying)

[16:27:17.0000] <dekiss>
to make web good place

[16:27:46.0000] <dekiss>
not influencing but workign together with governments to make laws

[16:27:56.0000] <dekiss>
working together != influence

[16:28:09.0000] <zewt>
well no working together == influence

[16:28:21.0000] <dekiss>
someone with clear mind must forbid adult and bizzare content from web

[16:28:26.0000] <dekiss>
and all countries must apply that

[16:28:36.0000] <dekiss>
yo ucan find literally anything these days on the web

[16:28:50.0000] <dekiss>
and web is given to kids of 12 years or younger and they can easy see this content

[16:28:57.0000] <dekiss>
just write it on google and boom you have it..

[16:29:05.0000] <dekiss>
that is very very bad for the world

[16:29:08.0000] <TabAtkins>
lolwut

[16:29:12.0000] <zewt>
TabAtkins: don't ask me

[16:29:54.0000] <dekiss>
someone must stand up and say from tomorow there is no adult content and bizzare content on the web and content is censored

[16:30:23.0000] <TabAtkins>
Lots of people stand up and say that today.  They're all stupid, wrong, and don't get anything done besides wasting money.

[16:30:39.0000] <dekiss>
otherwise mee too will keep my kid away from the web, because I know what he can see easy on the web..

[16:30:54.0000] <dekiss>
TabAtkins why you want bizzare content on the web?

[16:31:06.0000] <dekiss>
like videos of executions

[16:31:25.0000] <dekiss>
more bizzare is wehn I see these things on cnn but thats another subject

[16:31:53.0000] <dekiss>
TabAtkins chinese did something..

[16:32:23.0000] <TabAtkins>
That's... not a model to follow. Massive, government-run censorship is a terrible, terrible idea, and you're going back on ignore now.

[16:32:44.0000] <dekiss>
someone must decide what web is and where it should go and make it go that way, and I think web can go in thousand directions other then atracting visitors with videos of executioning people

[16:32:58.0000] <dekiss>
and adult content and trading pirated material and getting money for that

[16:33:00.0000] <TabAtkins>
And if you actually think Chinese people can't get access to porn and "bizarre" things, you're extremely naive.

[16:33:27.0000] <dekiss>
TabAtkins im not sure what chinese people can or canot view

[16:33:38.0000] <dekiss>
but there must be some change on the top level for the web

[16:33:43.0000] <dekiss>
this got out of control already

[16:33:52.0000] <dekiss>
TabAtkins and ok I dont care if you put me on ignore :D

[16:33:54.0000] <zewt>
indeed, the internet badly needs more pornography

[16:34:02.0000] <zewt>
i think the w3c needs to see to that

[16:34:09.0000] <dekiss>
zewt

[16:34:11.0000] <dekiss>
hah nvm

[16:34:15.0000] <dekiss>
I disagree with you man

[16:34:28.0000] <dekiss>
but i wont put you on ignore coz im not frustrated nerd :D

[16:34:43.0000] <dekiss>
I respect other opinions as I value people that I sepak to

[16:34:51.0000] <dekiss>
al have points

[16:34:55.0000] <dekiss>
zewt tell me your point

[16:35:06.0000] <TabAtkins>
Unless the other people are "frustrated nerds", apparently.

[16:35:35.0000] <Philip`>
TabAtkins: I think your ignore feature is broken


2013-06-03
[17:30:04.0000] <GPHemsley>
/me wonders what to do with http://wiki.whatwg.org/wiki/AAFC_Metadata_Application_Profile

[23:41:47.0000] <Ms2ger>
zewt, test succeeded :)

[23:42:35.0000] <Ms2ger>
The issue is that checking for exceptions at every step is terribly error-prone

[23:54:12.0000] <zcorpan>
this dekiss guy is adding a lot of noise

[00:08:30.0000] <zcorpan>
can we make anolis warn about xref-able elements without a title that don't get xreffed?

[00:12:56.0000] <Ms2ger>
Actually, you can make it error

[00:13:35.0000] <Ms2ger>
--use-strict

[01:47:58.0000] <codeho>
argh

[01:58:02.0000] <smaug____>
annevk: ping

[01:58:13.0000] <annevk>
smaug____: whoa, why are you awake?

[01:58:36.0000] <smaug____>
(someone called me around 9am and tried to sell something)

[01:59:05.0000] <smaug____>
and hey, it is noon

[01:59:13.0000] <Ms2ger>
smaug____, exactly :)

[01:59:21.0000] <smaug____>
annevk: https://bugzilla.mozilla.org/show_bug.cgi?id=780953

[01:59:38.0000] <smaug____>
do you recall if that has been discussed somewhere

[01:59:42.0000] <smaug____>
whatwg or w3

[02:00:21.0000] <annevk>
smaug____: hasn't been discussed

[02:00:43.0000] <annevk>
smaug____: pretty sure anyway, I recommend raising on WHATWG

[02:01:46.0000] <annevk>
I don't think OS-level changes have had much consideration in general

[02:02:45.0000] <darobin>
smaug____: this has been discussed in sysapps

[02:03:21.0000] <smaug____>
darobin: well, needs to happen in WhatWG, at least partially

[02:03:27.0000] <darobin>
smaug____: https://www.w3.org/Bugs/Public/show_bug.cgi?id=21290

[02:03:34.0000] <smaug____>
since the change requires Navigator to inherit EventTarget

[02:03:43.0000] <smaug____>
ah

[02:03:46.0000] <smaug____>
thanks

[02:03:58.0000] <darobin>
it needs to happen in the HTML spec for sure I would say

[02:04:01.0000] <smaug____>
uh, could I change the product

[02:04:05.0000] <darobin>
who does it, I don't care

[02:04:23.0000] <darobin>
if you want to put it on the WHATWG's plate, please don't change the product, but instead clone it

[02:04:41.0000] <darobin>
I reckon it'll happen anyway, it's useful

[02:06:02.0000] <smaug____>
yeah, it is useful

[02:06:07.0000] <smaug____>
and simple thing

[02:06:16.0000] <darobin>
indeed

[02:07:40.0000] <zcorpan>
MikeSmith: https://dvcs.w3.org/hg/csswg/rev/20c14a9da2c1 gives me 500

[02:10:36.0000] <zcorpan>
Ms2ger: thanks. however, it gives an error for <!--copyright--> :-(

[02:10:47.0000] <Ms2ger>
Lovely

[02:11:54.0000] <Ms2ger>
/me puts that on his todo list

[02:13:38.0000] <zcorpan>
probably <abbr> shouldn't be an xref element

[02:14:03.0000] <annevk>
smaug____: it's already filed against WHATWG, darobin referenced the wrong bug

[02:14:20.0000] <annevk>
smaug____: https://www.w3.org/Bugs/Public/show_bug.cgi?id=21289

[02:14:33.0000] <Ms2ger>
Yeah, I think it's based on Bert's xref elements

[02:15:02.0000] <zcorpan>
i'd like it if <var> wasn't an xref element, too

[02:15:02.0000] <annevk>
Ms2ger: should move anolis to GitHub

[02:15:12.0000] <annevk>
yeah, we should not have <var> be xref

[02:15:18.0000] <annevk>
or <i>

[02:15:38.0000] <zcorpan>
why not <i>?

[02:15:49.0000] <Ms2ger>
annevk, you know I'm not much of a git fan :)

[02:16:18.0000] <annevk>
zcorpan: <i> is for algorithm flags and they're typically not xreffed

[02:16:29.0000] <annevk>
Ms2ger: that's a losing proposition

[02:17:12.0000] <Ms2ger>
Some people like to think so

[02:18:14.0000] <darobin>
/me didn't reference the wrong bug, just the bug he knew of (which is also the correct one ;)

[02:18:32.0000] <Ms2ger>
darobin, not in this channel ;)

[02:19:01.0000] <darobin>
zcorpan: are you still getting 500 on dvcs.w3? it seems to be back up here

[02:19:20.0000] <zcorpan>
darobin: ah, works now

[02:20:26.0000] <darobin>
/me likes <a> being an xref element, strangely

[02:22:20.0000] <smaug____>
annevk: ah, thanks

[02:22:50.0000] <annevk>
darobin: instead of <span>?

[02:22:55.0000] <annevk>
darobin: that might actually be nice

[02:23:00.0000] <annevk>
Ms2ger: ^^

[02:23:26.0000] <Ms2ger>
File a bug :)

[02:23:55.0000] <darobin>
annevk: that's what ReSpec uses

[02:24:01.0000] <darobin>
it makes more sense I find

[02:24:14.0000] <darobin>
it's even a correct use of HTML!!!!1

[02:37:11.0000] <zcorpan>
Ms2ger: https://bitbucket.org/ms2ger/anolis/pull-request/6/remove-and-from-the-list-of-xref-elements/diff

[02:38:00.0000] <jgraham>
darobin: Don't be silly, it's not possible to use HTML correctly.

[02:41:42.0000] <darobin>
jgraham: I was waiting for that one :)

[02:42:52.0000] <jgraham>
We have a great future as a comedy double act.

[02:44:01.0000] <Ms2ger>
Dry British wit... And darobin?

[02:48:04.0000] <darobin>
Drunk French humour?

[02:48:35.0000] <Ms2ger>
Sounds about right

[02:48:51.0000] <Ms2ger>
/me passes darobin a glass of wine

[02:51:27.0000] <zcorpan>
should i add <a> in the same PR?

[02:51:58.0000] <darobin>
/me puts on a béret and camembert sandwich

[02:52:07.0000] <zcorpan>
i guess <a> would need more work than just adding it to the list to not screw up

[02:54:34.0000] <Ms2ger>
Sure

[02:54:40.0000] <Ms2ger>
(Did you run tests?)

[02:55:02.0000] <zcorpan>
no, i didn't

[02:55:34.0000] <zcorpan>
FAILED (failures=1)

[02:57:51.0000] <zcorpan>
FAIL: test_tests/toc-basic.src.html, however that seems unaffected by the change

[03:06:31.0000] <MikeSmith>
zcorpan: I been getting reports of intermittent 500s from dvcs.w3.org but can't see any problem on the server side

[03:06:47.0000] <zcorpan>
MikeSmith: ok

[03:07:06.0000] <MikeSmith>
the only troubleshooting solution that's worked in the past is for use to just restart apache there

[03:07:47.0000] <MikeSmith>
but in the past the only time we had 500s was when the server was completely wedged and consistently unresponsive

[03:36:05.0000] <joesavage>
Unsure if this is the right place to ask, but an element on my page (an "a" element with an "img" inside) simply isn't being focused in the Tab cycle, how can I fix this? I've tried adding a "tabindex" value, but it doesn't work, instead the textbox just next to it in the markup always gets focused first, and then everything else on the page after that.

[03:37:45.0000] <darobin>
joesavage: perhaps not the best forum for such questions, but does your <a> have an href with something useful in it?

[03:37:49.0000] <darobin>
if not, it's not focusable

[03:39:41.0000] <joesavage>
It's just linking to "/", but I've tried a bunch of other values in my troubleshooting process, so I guess it's not this.

[03:40:39.0000] <joesavage>
Interestingly, if I add some text after the image (i.e. <a href="/"><img src="whatever"/>test</a>), then it focuses first.

[03:42:43.0000] <joesavage>
I also notice that taking the "float: left;" away from it in the CSS makes it focus correctly too. Very odd.

[04:58:01.0000] <annevk>
fwiw: http://annevankesteren.nl/2013/06/london-tag (not comprehensive)

[05:03:35.0000] <jgraham>
annevk: "Getting there from where we are today is though"

[05:03:56.0000] <Ms2ger>
Sounds right

[05:04:37.0000] <jgraham>
Also, I'm not sure why the "champions" model is a good thing

[05:05:06.0000] <annevk>
jgraham: not sure what you meant by quoting that?

[05:05:09.0000] <Ms2ger>
tough?

[05:06:05.0000] <jgraham>
You either misspelt or just missed a word

[05:06:26.0000] <annevk>
ooh

[05:06:50.0000] <Ms2ger>
Damn English

[05:07:17.0000] <annevk>
jgraham: thanks

[05:07:39.0000] <annevk>
jgraham: not sure if champions is good, but is there anything else that scales?

[05:11:50.0000] <tobie>
annevk: why a separate GitHub org for W3C tag?

[05:12:20.0000] <Ms2ger>
See discussion in this channel a few days ago

[05:14:01.0000] <annevk>
tobie: easier to setup repos

[05:14:33.0000] <tobie>
annevk: how so?

[05:15:30.0000] <tobie>
I mean, if TAG members can't get admin rights on gh.com/w3c...

[05:15:48.0000] <tobie>
we'd need to fix that. :)

[05:16:41.0000] <tobie>
annevk: feels like a missed opportunity for visibility and transparency.

[05:17:17.0000] <darobin>
/me thinks it doesn't make that much difference

[05:17:20.0000] <annevk>
that sounds very opaque

[05:34:50.0000] <tobie>
annevk: what does?

[06:39:54.0000] <zewt>
Ms2ger: not explicitly saying what to do with exceptions is terribly not saying what to do--if you don't know exactly which steps in an algorithm might throw an exception, you can't see all of the code paths

[06:40:26.0000] <zewt>
and if the spec author doesn't know all of those places, that's error prone as well

[07:11:44.0000] <annevk>
tobie: what you said about the TAG not sharing a GitHub account

[07:12:15.0000] <tobie>
what's opaque about that?

[07:14:30.0000] <annevk>
it seems important our work is on GitHub, it doesn't matter much where afaict

[07:15:01.0000] <annevk>
and in fact, for people interested in what the TAG works on, a single page seems a lot clearer

[07:15:52.0000] <jgraham>
No one cares about that though

[07:16:04.0000] <jgraham>
Or no one should

[07:16:25.0000] <jgraham>
They should care about "are good web technologies being standardised and shipped"

[07:18:04.0000] <jgraham>
(a similar argument could be made that the CSS WG needs it own repos, and the HTML WG and the WebApps WG, and the Web Performance working group and…)

[07:18:14.0000] <jgraham>
s/repos/account/

[07:20:32.0000] <annevk>
I think it helps to have some granularity so you know who is accountable

[07:20:57.0000] <annevk>
That we have a gazillion groups doing APIs these days is indeed not helping

[07:21:36.0000] <gsnedders>
But organizations don't do work; individuals do.

[07:21:43.0000] <jgraham>
I don't understand your argument

[07:22:17.0000] <jgraham>
Even if we only had HTML/WebApps/CSS it would still be strictly worse to split up all their stuff

[07:22:46.0000] <jgraham>
If you want namespacing that is possible by naming the repos groupname-whatever

[07:22:56.0000] <gsnedders>
/me doesn't really know what's going on, being on holiday and all

[07:25:45.0000] <jgraham>
(c.f. Conway's Law)

[07:39:40.0000] <annevk>
jgraham: I see it more as being about size

[07:39:47.0000] <annevk>
jgraham: if it's too large it becomes hard to follow

[07:40:16.0000] <annevk>
jgraham: e.g. that's why some specs have their own twitter account, or why we have separate specs to begin with

[07:40:25.0000] <annevk>
jgraham: even though they're all representing the same platform

[07:40:41.0000] <darobin>
I thought Conway's law was if you arrange black squares on a grid in a special way, you get spaceships

[07:41:50.0000] <annevk>
want

[07:42:03.0000] <SimonSapin>
sounds accurate

[07:42:07.0000] <Ms2ger>
Fun fact: the game of life is Turing-complete

[07:42:53.0000] <Ms2ger>
/me found that part of that textbook more interesting than the part about RDF

[07:43:00.0000] <jgraham>
Fun fact: So is W3C Process

[07:44:04.0000] <jgraham>
Dammit I think I just nerd-sniped myself. Now I wonder if you can abuse W3C Process to perform computations

[07:44:36.0000] <Philip`>
Implementing a Turing machine in Life is unfortunately slightly less practical than implementing one in C++ templates

[07:44:42.0000] <darobin>
jgraham: ROFL

[07:45:02.0000] <darobin>
well, we have loops for sure

[07:45:17.0000] <darobin>
I don't think you need the full process, Rec track might be T-complete

[07:45:54.0000] <darobin>
/me wonders what textbook Ms2ger had that featured both the GoL and RDF

[07:46:06.0000] <darobin>
someone must've been smoking something pretty damn good at the textbook factory

[07:46:56.0000] <Ms2ger>
darobin, Rich's Automata, Computability and Complexity

[07:47:10.0000] <Ms2ger>
It also featured claims that HTML is a regular language

[07:47:57.0000] <darobin>
I guess it was more than just smoking then

[07:48:40.0000] <darobin>
mmm, that book ain't cheap, too

[07:48:50.0000] <Ms2ger>
Indeed it isn't

[07:51:49.0000] <darobin>
I reckon that if you treat drafts as storage space then given LC is a conditional loop you have Turing-completeness

[07:53:04.0000] <gsnedders>
Unforunately it doesn't define the computation engine itself, merely everything else.

[07:54:51.0000] <darobin>
:)

[09:33:28.0000] <jgraham>
So, just how many testing-related IRC channels does W3C need?

[09:34:01.0000] <Ms2ger>
42

[09:35:04.0000] <jgraham>
That would explain a lot

[09:36:29.0000] <tobie>
jgraham: #htmlt, #test, #testing what else?

[09:47:04.0000] <jgraham>
tobie: I have no idea. Until today I didn't know that #test existed.

[09:47:25.0000] <MikeSmith>
me neither

[09:47:37.0000] <MikeSmith>
what's #test for?

[09:47:40.0000] <tobie>
jgraham: with the move to GitHub, it feels like some reconciling would be useful.

[09:49:16.0000] <tobie>
jgraham: including mailing lists

[09:49:21.0000] <tobie>
tracking that here:

[09:49:35.0000] <tobie>
https://github.com/w3c/ttwf-docs/issues/7

[09:49:50.0000] <tobie>
MikeSmith: used by the testing tf

[09:50:06.0000] <MikeSmith>
ok

[09:50:30.0000] <Ms2ger>
#css-test

[09:56:20.0000] <tobie>
Ms2ger: ty

[09:56:30.0000] <Ms2ger>
Np

[11:17:00.0000] <jgraham>
tobie: Anyway I would happily close them all apart from #testing

[11:17:53.0000] <jgraham>
Mind you, I wouldn't spin up a bunch of closed membership task forces either

[11:23:40.0000] <tobie>
jgraham: neither would I, but corps are touchy when it comes to $$$.

[11:32:23.0000] <dekiss>
how is html language made? who is making it? html editors?

[11:32:49.0000] <dekiss>
I have hard time understanding it, how that mailing lists work etc.

[11:37:55.0000] <jgraham>
Unrelatedly, is there some reason that people are pushing everything to happen at "end of microtask" rather than just using normal tasks?

[11:38:18.0000] <jgraham>
(for small values of "everything" that includes a bunch of new stuff)

[11:53:16.0000] <Ms2ger>
So we're at the point where we're doing d3e conf calls without anything to talk about again?

[12:00:05.0000] <jgraham>
Someone else is doing D3E calls

[12:12:36.0000] <jgraham>
Also, "we were forced to do bad thing $X because of the $$$" seems to be the standard W3C excuse at the moment

[12:18:08.0000] <jarek>
is there any chance that Goolge will be trying to standardise DOM improvements made in Dart?

[12:19:00.0000] <jarek>
I mean things like query() or events as streams

[12:19:21.0000] <Ms2ger>
The idea behind those was that there's no legacy dart content, so breaking stuff is free, right?

[12:19:33.0000] <Ms2ger>
Breaking stuff on the actual web is far from free

[12:21:25.0000] <jarek>
I'm not aware of Dart internals, but it looks like most of the improvements are implemented as wrappers on top of standard DOM

[12:21:29.0000] <jarek>
http://www.dartlang.org/articles/improving-the-dom/

[12:22:29.0000] <tantek>
jgraham - w3cexcuses.tumblr.com ?

[12:23:13.0000] <jgraham>
jarek: Nor am I, but I doubt they want to reimplement the C++ bits

[12:24:46.0000] <jgraham>
I mean, the DOM still has to exist. So having something fundamentally different exposed to Dart and JS seems hard

[12:25:00.0000] <jarek>
why NodeList and DOMTokenList don't inherit from Array.prototype? Does the spec prohibit this explicitly?

[12:25:16.0000] <Ms2ger>
NodeList explicitly inherits from Array.prototype in the spec

[12:25:34.0000] <Ms2ger>
We're waiting on Blink to try implementing it

[12:25:46.0000] <Ms2ger>
Last time we tried, a lot of Google sites broke

[12:26:59.0000] <Ms2ger>
And having wrappers on top of the DOM only increases the API surface for little gain, making the platform harder to learn and to maintain

[12:27:39.0000] <jgraham>
Ms2ger: Wait, what? Why does the spec say something that's known not to work?

[12:28:01.0000] <annevk>
TabAtkins: yo, if you're around, if you could reply to the www-dom thread with MM that'd be grand

[12:28:24.0000] <Ms2ger>
jgraham, because Google could maybe have fixed its site

[12:28:25.0000] <Ms2ger>
s

[12:28:33.0000] <jgraham>
It should at best say Note: It has been suggested that (foo). Experiments with (foo) showed a significant web compat impact.

[12:28:58.0000] <jgraham>
Ms2ger: If it broke Google sites it seems highly likely it also broke other sites

[12:29:18.0000] <Ms2ger>
Perhaps

[12:29:23.0000] <Ms2ger>
I haven't looked into it closely

[12:29:43.0000] <jgraham>
and expecting Google to spend resources fixing its sites to make some blink people happy seems unreasonably optimistic

[12:30:10.0000] <jgraham>
In any case I don't think the spec should be left in a state where it requires knwon-broken behaviour

[12:30:13.0000] <jgraham>
*known

[12:41:26.0000] <Ms2ger>
jgraham, notice added

[12:43:13.0000] <jgraham>
Ms2ger: Thanks

[13:37:03.0000] <GPHemsley>
Hixie: Ah, one catch you forgot to mention about keeping the whole spec open: I have to reload it all when changes are made! ;)

[14:52:04.0000] <dglazkov>
good morning, Whatwg!

[16:18:18.0000] <dekiss>
can I send informations from server to client every 1 min while web page is open? websockets I think is used for this? is that ok if I use it or which are my options?

[16:25:33.0000] <Hixie>
dekiss: for web authoring questions you probably want another forum, like #html5 or some such

[16:25:51.0000] <Hixie>
dekiss: here you're more likely to get snarky comments and venting than advice :-)

[16:25:54.0000] <dekiss>
can I restrict some web page so not all can see it? and if yes how please?

[16:26:27.0000] <dekiss>
should I check for origin or?

[16:26:48.0000] <dekiss>
Hixie ah ok man sry :)

[16:27:27.0000] <dekiss>
I never understood who make html and how it's made and this mailing system

[16:27:59.0000] <Hixie>
i'm not saying you can't ask here, just that if you want answers, this isn't hte best place for you :-)

[16:28:06.0000] <Hixie>
at least, if you want useful answers

[16:28:19.0000] <dekiss>
ok thanks

[16:28:34.0000] <dekiss>
man who makes HTML specification?

[16:28:39.0000] <dekiss>
you? ^^

[16:28:43.0000] <dekiss>
editors?

[16:29:34.0000] <Hixie>
i write the text

[16:29:40.0000] <Hixie>
if that's what you mean

[16:32:36.0000] <ap>
Hixie: I honestly have a difficulty responding to <https://www.w3.org/Bugs/Public/show_bug.cgi?id=21416>. There is a word "associate" in the algorithm that I don't understand. What is the expected result of doing an "associate"?

[16:33:10.0000] <ap>
Hixie: is it that both sides will immediately know that they are "associated"?

[16:33:21.0000] <dekiss>
I ment who is making the web these days?

[16:33:29.0000] <dekiss>
HTML standard

[16:33:43.0000] <ap>
Hixie: in such case, I just don't know how to implement that

[16:35:03.0000] <Hixie>
ap: is there any observable way to tell if it's instant or not?

[16:35:26.0000] <Hixie>
dekiss: if you mean http://whatwg.org/html, then i write the text, based on feedback here and on the mailing list, etc

[16:36:10.0000] <dekiss>
thanks that was what I ment

[16:36:56.0000] <dekiss>
Hixie one more quetion, will menu be disbanded?

[16:37:04.0000] <dekiss>
and rarely used elements?

[16:37:05.0000] <Hixie>
menu?

[16:37:11.0000] <ap>
Hixie: unsure - the string "associat" is not found elsewhere in text (other than as "association list", which I think is different). So the effect of "association" is implicit and thus difficult for me to verify

[16:38:04.0000] <dekiss>
yes "menu" element

[16:38:48.0000] <dekiss>
hm I am not sure I tihink I saw in w3c.org spec that it was not used much and is considered to be disbanded

[16:38:53.0000] <dekiss>
also hgroup

[16:38:54.0000] <Hixie>
ap: it means "let them be entangled"

[16:39:11.0000] <Hixie>
dekiss: <menu> and <hgroup> are new, i have no plans to remove them

[16:39:23.0000] <Hixie>
<hgroup> in particular is used in over 100,000,000 pages already

[16:39:46.0000] <ap>
Hixie: the spec defines "entangle" through "associate", so explaining "associate" through "entangle" doesn

[16:39:46.0000] <ap>
t

[16:39:48.0000] <ap>
 help

[16:40:19.0000] <Hixie>
ap: elsewhere in the spec there are algorithms that refer to whether a port is entangled with another or not, and that refer to the entangled port.

[16:40:29.0000] <Hixie>
ap: this algorithm is attempting to create that connection.

[16:40:34.0000] <ap>
Hixie: or is "entagle" only called on ports that have not been shipped yet?

[16:41:22.0000] <zewt>
grr stumbling over new Event() because of the bad option defaults

[16:42:44.0000] <ap>
Hixie: so there is the clone algotithm:

[16:42:46.0000] <ap>
If the original port is entangled with another port, then run these substeps:

[16:42:47.0000] <Hixie>
ap: entangling of a port is something that happens upon its creation, and when its entangled port is cloned (when you clone a port A into a new port B, where A and C are entangled, A and C are disentangled and B and C are entangled)

[16:42:51.0000] <ap>
Let the remote port be the port with which the original port is entangled.

[16:43:58.0000] <ap>
Hixie: how can one detect if the original port is entangled? maybe another side has already initiated disentanglement, but it's still unknown to this side

[16:44:46.0000] <ap>
Hixie: e.g. ports A and B are entangled, and are in separate processes already. Scripts call clone() on them at the same time

[16:44:56.0000] <Hixie>
ap: you have to act as if it's instantaneous. Suppose you have A-B entangled, and you clone A to A' and B to B' at the "same time". You should end up with A'-B' entangled.

[16:45:25.0000] <ap>
Hixie: I doubt that there are implementations that do that

[16:45:41.0000] <ap>
Hixie: WebKit's certainly doesn't seems like it does

[16:46:33.0000] <Hixie>
ap: does webkit support cloning ports at all yet?

[16:48:32.0000] <ap>
Hixie: is this what you do when passing a port via postMessage? yes, that works (hopefully correctly when workers are not involved, and kind of maybe when they are)

[16:49:04.0000] <Hixie>
ap: well if it doesn't work i guess you have a bug :-)

[16:50:55.0000] <ap>
Hixie: it is of course something we can think of ourselves eventually, but it would be helpful if someone could think about whether the spec is implementable without unacceptable performance problems

[16:51:12.0000] <ap>
Hixie: such as pausing all processes to synchronize

[16:52:27.0000] <ap>
Hixie: anyway, I think that you answered bug 21416 - in that it's supposed to behave as if there was a cross-process mutex around all MessagePort operations

[16:52:51.0000] <Hixie>
ap: this doesn't require any synchronisation

[16:52:53.0000] <zewt>
drawing a blank for some reason: any examples of APIs that dispatch events, other than really weirdo things (in particular other than element.click)

[16:52:57.0000] <zewt>
er

[16:53:01.0000] <zewt>
that dispatch events synchronously

[16:53:26.0000] <ap>
zewt: execCommand :-p

[16:53:28.0000] <Hixie>
ap: just make sure you forward all your messages appropriately (and essentially leave a forwarding address)

[16:53:36.0000] <zewt>
ap: i'll bundle that in with weirdo things :P

[16:53:51.0000] <Hixie>
zewt: seach for "fire a " in the html spec

[16:54:04.0000] <zewt>
that'll have hundreds of hits, most of which are async

[16:54:28.0000] <Hixie>
oh synchronously

[16:54:28.0000] <zewt>
sorry, I mean JS entry points that fire events synchronously to script

[16:54:29.0000] <Hixie>
my bad

[16:54:38.0000] <Hixie>
dispatchEvent() is the main one

[16:55:04.0000] <ap>
Hixie: no, I understand that leaving a forwarding address is the next step. It's just that then I need to rip apart most of the other algorithms in the spec that don't explicitly account for that (most importantly those that explain object lifetime)

[16:55:05.0000] <zewt>
yeah (that's the one I was looking to compare to, actually)

[16:56:24.0000] <Hixie>
ap: like what? i'm happy to make the spec clearer, i just don't understand what the problem is here

[16:56:55.0000] <zewt>
(and I don't want to use click() as an example, there's so much horribly wrong with onclick it makes a bad comparison)

[16:57:27.0000] <ap>
Hixie: I _think_ that for every sentence that has the word "entangled" in it, I will need to think about whether it's actually "entangled or a forwarder to entangled"

[16:58:05.0000] <ap>
Hixie: and devise a protocol for dropping the forwarder privileges eventually

[16:58:50.0000] <Hixie>
ap: sure, that's like for every object that mentioned HTMLElement objects, you have to think about whether it means the C++-side of the object or the C++-side plus its JS-engine wrapper, or whatever is going on in the rendering engine. Figuring out these things is kind of your job. :-)

[16:58:52.0000] <ap>
Hixie: because when I have process A and process B, and a port gets shipped across the boundary and then back, we probably don't want to keep doing two cross-process messages any more

[16:59:01.0000] <Hixie>
ap: sure

[16:59:37.0000] <Hixie>
ap: doing cross-process IPC with pipes whose endpoints can be moved around the world is definitely non-trivial

[16:59:43.0000] <Hixie>
ap: i don't think anyone would argue otherwise :-)

[16:59:58.0000] <Hixie>
ap: our goal here is to try to make it as trivial as possible for Web authors, but that means eating a lot of pain


2013-06-04
[17:00:26.0000] <ap>
Hixie: perhaps the spec would be easier to follow if the lifetime algorithms were just removed from it

[17:00:43.0000] <ap>
Hixie: as they will just be so different in practice

[17:01:02.0000] <Hixie>
well we need to define the detectable aspects of lifetime

[17:01:05.0000] <Hixie>
that's all the spec is trying to define

[17:01:17.0000] <Hixie>
obviously the actual implementations will likely be different

[17:01:19.0000] <ap>
Hixie: what are the detectable aspects?

[17:01:26.0000] <Hixie>
e.g. when does the worker stop running

[17:01:27.0000] <ap>
Hixie: usually the goal that there are none :)

[17:01:31.0000] <dekiss>
Hixie ok thanks for info man

[17:02:00.0000] <TabAtkins>
annevk: Which thread is this?  Have I already responded to it?

[17:02:09.0000] <dekiss>
Hixie assistive technology devices can interpret javascript and dom?

[17:02:39.0000] <Hixie>
dekiss: in practice, or in theory?

[17:02:45.0000] <ap>
Hixie: is there a way to explain the shutdown procedure without the algorithms? Because they seem unlikely to help implementations converge in this case

[17:02:51.0000] <dekiss>
um

[17:03:00.0000] <dekiss>
both

[17:03:24.0000] <ap>
Hixie: people will just have another barrier trying to understand what the algorithm means in spec's synchronous world, and then implement differently anyway

[17:03:51.0000] <Hixie>
ap: i tried various ways to define it, but what's in the spec is the simplest, least confusing, most declarative manner i was able to come up with

[17:04:00.0000] <ap>
Hixie: ok

[17:04:08.0000] <Hixie>
ap: i'm very open to alternative phrasings if you can come up with any though, they're pretty horrific

[17:04:32.0000] <Hixie>
ap: definitely not a part of the spec i would point to when going up for promotion, shall we say

[17:05:47.0000] <Hixie>
ap: see the diff i just posted to the bug (https://www.w3.org/Bugs/Public/show_bug.cgi?id=21416), in case that helps... not sure what else to add

[17:06:41.0000] <ap>
Hixie: I'll see what I can do if I get a chance to work on channel messaging again. The last time, I had a hard time comparing the spec and the existing WebKit implementation to understand if it was doing something at least related to what's correct

[17:07:18.0000] <ap>
Hixie: I think that the change you made is helpful

[17:08:08.0000] <Hixie>
ap: cool, thanks (on both fronts)

[17:08:24.0000] <ap>
thank you!

[17:08:36.0000] <Hixie>
ap: totally agreed that this isn't easy to think about. It's probably the second most complicated part of web platform i've worked on

[17:08:54.0000] <dekiss>
Hixie?

[17:08:54.0000] <Hixie>
most complicated being xbl2, if we can count that as part of the "web platform" :-|

[17:09:20.0000] <Hixie>
dekiss: sorry, had to help ap first, he's an implementor, they're my peeps :-P to answe you, yes, ATs can be part of browsers.

[17:12:43.0000] <dekiss>
ok thanks man

[17:12:46.0000] <dekiss>
np

[17:23:05.0000] <Hixie>
ap: fwiw, safari seems to handle this test ok: http://www.hixie.ch/tests/adhoc/dom/workers/002.html

[17:23:40.0000] <Hixie>
ap: what i do there is create two workers, then a message channel, and i pass one side of each message channel to each worker at the same time, then wait a second, then have them send their parts back, then i send a message from one side to the other

[17:24:37.0000] <Hixie>
(Firefox doesn't seem to support MessageChannel, sadly)

[17:27:09.0000] <Hixie>
bbl

[17:32:36.0000] <ap>
Hixie: I think that have an actual mutex for dedicated workers (unsure if we lock it in all the right places, or what we do with shared ones)

[17:33:19.0000] <ap>
as shared ones were only out of process in chromium port

[17:37:58.0000] <zewt>
it seems like there's a gap between what the spec wants to happen and how to actually do it in practice--i wonder if a small sample implementation would help narrow that (on top of unix pipes or something)

[17:58:34.0000] <zewt>
(for that matter, I don't know if it can be sanely implemented with simple pipes, or if it wants some form of shm)

[18:02:14.0000] <zewt>
heh cute, apparently mousewheel scrolling in chrome closes the context menu

[18:02:46.0000] <zewt>
handy way when I right-click by accident, want to close the menu, but ... can't find anywhere to click that won't have side-effects

[18:03:20.0000] <zewt>
(and more natural than hitting esc)

[20:16:19.0000] <JonathanNeal>
Why does the meta tag not allow virtually any name/content pairing?

[20:16:59.0000] <JonathanNeal>
Ideally, should Twiter and Facebook be dropping the cards and the open graphs? Realistically, should the spec reflect the true state of <meta>?

[20:23:27.0000] <JonathanNeal>
I'm just reacting to validator errors versus warnings.

[21:02:28.0000] <MikeSmith>
JonathanNeal: about arbitrary names not being allowed for meta, it's because the spec says so

[21:02:31.0000] <MikeSmith>
currently

[21:02:52.0000] <MikeSmith>
I personally have come around to thinking it's a lost cause

[21:03:12.0000] <MikeSmith>
that is, it's a lost cause to disallow arbitrary name values

[21:03:33.0000] <MikeSmith>
but Hixie believes differently, I think

[21:03:43.0000] <MikeSmith>
I guess I should file a bug

[21:04:16.0000] <MikeSmith>
btw, you can put anything you want into the value of the content attribute, thoug

[21:04:22.0000] <MikeSmith>
there are no restrictions on that

[21:21:54.0000] <jernoble_>
ok

[21:21:55.0000] <Hixie>
no, i agree that the current state is not viable

[21:22:14.0000] <Hixie>
the wiki experiment has been a great success

[21:22:58.0000] <Hixie>
it's shown that a lot of people really are wasting their time, and a lot of other people (far more than i expected) are doing things with meta and link rel and so on that are specific to their deployments

[21:23:39.0000] <Hixie>
there's a bunch of bugs about how to deal with this

[21:26:21.0000] <MikeSmith>
well, I just added one more

[21:26:23.0000] <MikeSmith>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=22257

[21:27:03.0000] <MikeSmith>
Hixie: you meant to say that the the wiki experiment has *not* been a great success?

[21:27:14.0000] <Hixie>
no, it's been a success

[21:27:19.0000] <MikeSmith>
oh

[21:27:20.0000] <Hixie>
it has taught us much

[21:27:26.0000] <Hixie>
at least, it's taught me much :-)

[21:27:50.0000] <MikeSmith>
yeah

[21:27:59.0000] <MikeSmith>
I agree about that too

[21:28:20.0000] <MikeSmith>
anyway I hope hsivonen can weigh in with his opinion on it

[21:28:33.0000] <MikeSmith>
I'll send a message to the list

[21:28:46.0000] <Hixie>
i'm not looking at this until sometime next year at the earliest, fwiw

[21:28:58.0000] <Hixie>
trying to get all the bugs that relate to interop dealt with first

[21:29:03.0000] <Hixie>
browser interop

[21:29:22.0000] <MikeSmith>
ok

[22:34:31.0000] <JonathanNeal>
excellent, twitter cards will soon be valid, thanks to Hixie and MikeSmith and the rest of the gang.

[22:40:15.0000] <Hixie>
are they invalid now?

[22:41:54.0000] <MikeSmith>
Hixie: https://dev.twitter.com/docs/cards

[22:42:03.0000] <MikeSmith>
https://dev.twitter.com/docs/cards/markup-reference

[22:42:42.0000] <JonathanNeal>
Bad value twitter:card for attribute name on element meta: Keyword twitter:card is not registered.

[22:42:57.0000] <Hixie>
why doesn't someone just register them? they, unlike almost every other meta tag, actually have a spec!

[22:43:20.0000] <MikeSmith>
hmm I see that some of them are now registered, actually

[22:43:21.0000] <MikeSmith>
http://wiki.whatwg.org/wiki/MetaExtensions

[22:43:28.0000] <JonathanNeal>
They are http://wiki.whatwg.org/wiki/MetaExtensions

[22:43:36.0000] <Hixie>
ah. then they're valid already

[22:43:44.0000] <MikeSmith>
/me goes to add those to the validator source

[22:43:50.0000] <Hixie>
heh

[22:44:01.0000] <Hixie>
that's definitely one part of this that doesn't scale well

[22:44:27.0000] <JonathanNeal>
Ooo, better sneak benschwarz' in there now.

[22:45:18.0000] <JonathanNeal>
or not, but that's what made me start thinking about this https://github.com/benschwarz/metaquery

[22:45:56.0000] <JonathanNeal>
You really ought to just make the <meta> element's name attribute open.

[22:46:17.0000] <Hixie>
the problem is that that would lead to a lot of authors wasting a lot of time

[22:46:30.0000] <Hixie>
because a lot of authors spend ages including things that are totally pointless

[22:46:46.0000] <JonathanNeal>
to whom?

[22:46:55.0000] <Hixie>
pointless to anyone

[22:47:05.0000] <Hixie>
as in, <meta> tags that are never used by any software at all

[22:47:38.0000] <MikeSmith>
Hixie: they waste time now running stuff throught the validator now and getting errors they don't care about

[22:47:58.0000] <JonathanNeal>
That's a relative statement. For instance, HTML5 Boilerplate rejected adding twitter cards because "most sites or apps will never use this and too many people will accidentally leave it in there."

[22:48:00.0000] <MikeSmith>
and then complaining through bug reports and mailing-list messages and e-mail to me

[22:48:33.0000] <Hixie>
MikeSmith: i disagree with the premise that it's a waste of their time to be told that something they're doing is pointless.

[22:48:52.0000] <Hixie>
but i agree that the current system isn't working

[22:49:03.0000] <JonathanNeal>
"Keyword X is not registered." hardly communicates what you are saying.

[22:49:30.0000] <MikeSmith>
Hixie: It's not an absolute waste of time, it's a relative/net waste of time

[22:49:30.0000] <Hixie>
yeah, the current system isn't working, like i said

[22:50:13.0000] <MikeSmith>
it's like the validator complaining aobut table@border is a net waste of time, I think

[22:50:18.0000] <Hixie>
MikeSmith: if an author spends 10 minutes per project on a <meta> that gives nobody value, and one day they validate and the validator says "this is a waste of your time, stop doing it", then they can save 10 minutes per future project.

[22:50:40.0000] <MikeSmith>
Hixie: the thing is, they don't change their markup

[22:50:46.0000] <JonathanNeal>
Then you pick which meta tags are a waste of time, or are they all?

[22:50:49.0000] <Hixie>
MikeSmith: then we're not communicating it well, like JonathanNeal said

[22:50:52.0000] <JonathanNeal>
Also, is that really an error, or maybe just a warning?

[22:51:14.0000] <JonathanNeal>
twitter cards might not be so arbitrary from the point of view of, say, twitter.

[22:51:15.0000] <MikeSmith>
Hixie: they keep the meta@name values, and they keep table@border. The main thing they learn is to ignore the validator for those cases

[22:51:24.0000] <Hixie>
JonathanNeal: well, right now we're in a kind of learning state where we are finding out what the proportion of useful values to not-useful values is

[22:51:56.0000] <Hixie>
MikeSmith: then we're not communicating to them why those are errors well enough.

[22:52:16.0000] <Hixie>
MikeSmith: especially for <meta>, that's unsurprising, given that it's not well defined in the first place :-)

[22:52:26.0000] <MikeSmith>
true

[22:58:08.0000] <JonathanNeal>
IMHO, as long as HTML is the language of the browsers, the <meta> tag will continue down a liberal path, as developers continually extend it to communicate data about the document.

[22:59:06.0000] <Hixie>
sure, but in reality it's not that simple.

[22:59:16.0000] <Hixie>
metadata that nobody reads ends up bitrotting

[22:59:30.0000] <MikeSmith>
JonathanNeal: please try your twitter cards with http://validator.w3.org/nu/ or http://validator.w3.org/ now

[22:59:47.0000] <Hixie>
metadata that isn't in a specified format starts useless (with everyone using different syntaxes, etc)

[22:59:55.0000] <JonathanNeal>
And the variations can be quite popular, as they have been for apple, facebook, and now twitter.

[22:59:59.0000] <JonathanNeal>
I will, thanks.

[23:00:33.0000] <JonathanNeal>
whoops, was using validator.nu, will try w3's

[23:00:40.0000] <JonathanNeal>
VALID

[23:00:59.0000] <MikeSmith>
yeah I'll ping hsivonen about pulling the changes to validator.nu too

[23:01:26.0000] <MikeSmith>
JonathanNeal: only twitter ones I added are the ones that are actually registered

[23:01:26.0000] <JonathanNeal>
The error is still "Bad value X for attribute name on element meta: Keyword X is not registered." I tried throwing something random in there.

[23:01:44.0000] <Hixie>
bbl, sleep

[23:01:45.0000] <MikeSmith>
not the other 50,000 other ones in their developer docs

[23:01:49.0000] <MikeSmith>
Hixie: nn

[23:02:05.0000] <JonathanNeal>
Yea, cause now you are maintaining a <meta name="twitter:X"> spec.

[23:06:14.0000] <benschwarz>
No sneak required

[23:06:30.0000] <JonathanNeal>
:)

[23:07:04.0000] <JonathanNeal>
I think this is a step forward, and hopefully opens folks up to the idea of letting meta name be free.

[23:34:58.0000] <hsivonen>
http://lists.xml.org/archives/xml-dev/201306/msg00002.html trying to make sense of the black text on black background

[23:39:30.0000] <Ms2ger>
hsivonen, I read "I am as high as a kite"

[23:40:01.0000] <hsivonen>
"You are using an unregistered meta keyword. Go read Cory Doctorow's metacrap essay."

[23:41:42.0000] <hsivonen>
so much opportunity for 386 on xml-dev

[02:59:53.0000] <Ms2ger>
/me wonders who writes like TimBL speaks

[03:03:17.0000] <jgraham>
/me wonders the context for Ms2ger's wondering

[03:05:52.0000] <jgraham>
Kerouac?

[03:06:14.0000] <jgraham>
Not sure that's really a good fit…

[03:09:56.0000] <darobin>
TimBL writes like TimBL speaks

[03:10:30.0000] <darobin>
otherwise, I'm tempted to suggest Robert Shea + Robert Anton Wilson

[03:17:14.0000] <Ms2ger>
https://twitter.com/glazou/status/341819288182726657

[04:14:18.0000] <dekiss>
what is the best way to make something like Facebook posts?

[04:17:58.0000] <dekiss>
content editable?

[04:22:11.0000] <dekiss>
I want to make sokmething like Facebook posts, how can I make this what is the best way? Using content editable or using textarea or?

[04:23:56.0000] <jgraham>
marcosc: No plan because testharness.js has been on github for a long time already

[04:24:15.0000] <marcosc>
jgraham, ah, should have known :)

[04:34:53.0000] <zcorpan>
anolis doesn't support referencing a section, or does it?

[04:35:59.0000] <zcorpan>
dekiss: try asking in #html5 or something instead

[04:36:28.0000] <dekiss>
ok

[04:53:17.0000] <jgraham>
tobie: So am I allowed to merge things in ttwf-docs, or is that only for special people?

[04:53:43.0000] <jgraham>
(also I wonder why the documentation is branded as "ttwf")

[04:54:30.0000] <jgraham>
(not only because the TTWF people settled on TestTWF which doesn't have such a bad reputation on urban dictionary)

[04:55:19.0000] <tobie>
Darn. forgot about that.

[04:55:27.0000] <jgraham>
(not that I really mind, but at least at present TestTWF is a branch of the testing effort rather than the whole thing.)

[04:56:44.0000] <tobie>
jgraham: plan is to use TestTWF for the overall web platform testing effort

[04:57:02.0000] <tobie>
and have the event organization be a part of that.

[04:57:11.0000] <jgraham>
I see

[04:57:53.0000] <tobie>
but yeah need to fix the urban dic ref.

[04:57:56.0000] <tobie>
:(

[04:58:31.0000] <tobie>
jgraham: I think everyone relates to the dinos really well

[05:00:17.0000] <jgraham>
The dinos are cool

[05:00:22.0000] <tobie>
and you can go ahead and merge stuff there.

[05:00:35.0000] <tobie>
I added you to the project with that in mind. :)

[05:02:54.0000] <darobin>
dinos++

[06:17:59.0000] <hallvors>
annevk: shouldn't stuff like "enum XMLHttpRequestResponseType" be marked with [NoInterfaceObject] in the IDL?

[06:18:11.0000] <annevk>
no

[06:18:20.0000] <hallvors>
http://xhr.spec.whatwg.org/#interface-xmlhttprequest

[06:19:06.0000] <hallvors>
Why not? I see no point in having window.XMLHttpRequestOptions and window.XMLHttpRequestResponseType around

[06:21:19.0000] <annevk>
hallvors: it appears you're either not reading WebIDL, or WebIDL says something silly

[06:21:48.0000] <hallvors>
Oh, maybe I'm making assumptions here..

[06:23:30.0000] <hallvors>
ah, only relevant for "interface"

[06:23:36.0000] <hallvors>
ofc ;)

[06:33:09.0000] <annevk>
hallvors: your pull requests are super unclear btw

[06:33:16.0000] <annevk>
hallvors: you should really rebase or some such first

[06:33:19.0000] <hallvors>
sorry

[06:33:33.0000] <hallvors>
I know. I've just forgotten to do so

[06:33:38.0000] <hallvors>
:-/

[06:34:28.0000] <hallvors>
but I've appointed jgraham as my Git guru, so the future is bright

[06:40:09.0000] <zcorpan>
heycam|away: how should i spec style['font-size']? attribute CSSStyleDeclaration font-size; isn't valid webidl

[06:42:25.0000] <zcorpan>
DOMString*

[06:42:30.0000] <darobin>
I don't think that's possible

[06:43:18.0000] <zcorpan>
not in the syntax, no

[06:43:35.0000] <zcorpan>
but i can require a dancing unicorn in prose if i like

[06:44:08.0000] <zewt>
amusing when people try to puff themselves up by saying "open letter" when they mean "blog post"

[06:44:28.0000] <zcorpan>
"open blog post"?

[06:44:32.0000] <darobin>
zcorpan: that just makes me sad that you haven't sent me a dancing unicorn

[06:44:39.0000] <zcorpan>
i keep my blog posts to myself

[06:44:51.0000] <hallvors>
annevk - PR 9 should be a somewhat improved version of PR8

[06:45:00.0000] <zewt>
do you open each post with "dear diary"

[06:46:05.0000] <zcorpan>
darobin: it hasn't arrived yet? maybe it died trying to swim across the sea :-(

[06:46:31.0000] <annevk>
zcorpan: why is it not fontSize?

[06:46:45.0000] <annevk>
zcorpan: sadness prevailed?

[06:46:51.0000] <zcorpan>
annevk: because /topic

[06:47:37.0000] <annevk>
I thought CSS had that bit right

[06:47:46.0000] <zcorpan>
/me needs to go

[06:48:05.0000] <zcorpan>
annevk: apparently trident/webkit/blink support both fontSize and font-size

[06:48:41.0000] <annevk>
that does sound like sadness has prevailed

[06:49:44.0000] <annevk>
hallvors: so don't you think we should do that in Fetch

[06:49:54.0000] <annevk>
hallvors: e.g. <img src=...> should not do the fragment thing either

[06:50:15.0000] <annevk>
hallvors: I think even old Fetch (which XHR references) requires this

[06:53:17.0000] <hallvors>
I certainly think we should do it in Fetch ;)

[06:53:36.0000] <hallvors>
so you can add it there if you want

[06:54:08.0000] <hallvors>
- just that my main concern still is shipping the XHR spec in a usable state

[06:54:39.0000] <annevk>
right, you realize shipping XHR also references fetch?

[06:55:47.0000] <hallvors>
I'm not sure if we'll be "allowed" to - what are those pub rules again? Isn't Fetch too immature?

[06:56:41.0000] <hallvors>
anyway, it's up to you. By all means add it in Fetch if you would rather do that

[06:56:49.0000] <annevk>
there's Fetch and HTML fetch

[06:56:52.0000] <annevk>
the lowercase was intentional

[06:56:59.0000] <annevk>
XHR has referenced the latter for an eternity

[06:57:01.0000] <annevk>
you can't remove that

[06:57:11.0000] <annevk>
you should really know this if you're editing XHR...

[07:01:30.0000] <hallvors>
Right - it's already covered by HTML5 fetch text. Good.

[07:52:04.0000] <JonathanNeal>
hello

[08:12:33.0000] <Ms2ger>
tobie, for http://www.w3.org/wiki/Testing/Infra/Notification_Hell , can I propose critic as an alternative solution?

[08:14:18.0000] <tobie>
Ms2ger: jgraham brought that up on #testing earlier.

[08:17:17.0000] <Ms2ger>
And if you guys like dinos, Mozilla has a nice one ;)

[08:17:54.0000] <Ms2ger>
Ah, zcorpan

[08:18:16.0000] <Ms2ger>
/me continues reading backlog

[08:18:17.0000] <Ms2ger>
Nvm :)

[08:19:12.0000] <Ms2ger>
"To JavaScript programmers, it's the only thing that makes sense."

[08:19:15.0000] <Ms2ger>
/me stops reading

[08:36:37.0000] <reyre>
is the w3c html page down?

[08:37:14.0000] <JonathanNeal>
which one, reyre?

[08:37:33.0000] <reyre>
JonathanNeal: http://www.w3.org/html/wg/drafts/html/master/

[08:39:37.0000] <Ms2ger>
whatwg.org/html is up

[08:41:08.0000] <reyre>
Ms2ger: awesome, i'll use that :)

[08:41:11.0000] <reyre>
thanks

[08:41:18.0000] <Ms2ger>
Np

[08:41:52.0000] <reyre>
Ms2ger: is this less up to date then w3c site?

[08:42:16.0000] <Ms2ger>
More

[08:44:57.0000] <reyre>
Ms2ger: agh :( that means the spec has changed again for WEBVTT ...

[08:45:01.0000] <reyre>
sigh

[08:58:58.0000] <Philip`>
reyre: I think they're divergent forks, so different people will have different opinions in which is more up to date

[09:01:02.0000] <Ms2ger>
But he works on Mozilla, so for his purposes, the WHATWG version is most up to date :)

[09:10:10.0000] <jgraham>
(is that also true for WebVTT? I'm not sure what happened there)

[09:12:52.0000] <rillian>
jgraham: iirc silvia is maintaining the spec at http://dev.w3.org/html5/webvtt/

[09:13:19.0000] <rillian>
I don't know about the whatwg side

[09:23:18.0000] <annevk>
the format is W3C-only

[09:23:22.0000] <annevk>
or CG-only

[09:23:35.0000] <annevk>
<track> and such are part of HTML still

[10:27:47.0000] <SteveF>
Ms2ger: depends on which folks at Mozilla for which spec to use

[10:28:00.0000] <Ms2ger>
Track

[10:28:55.0000] <SteveF>
for acc implementations the W3C html spec is generally more up to date and followed

[10:29:42.0000] <Ms2ger>
Ah, we're implementing longdesc?

[10:30:18.0000] <SteveF>
Ms2ger: nut talking about longdesc

[10:30:34.0000] <SteveF>
Ms2ger: thats not in the HTML spec

[10:31:18.0000] <SteveF>
Ms2ger: but alas you are

[10:31:32.0000] <annevk>
I wonder how that was decided

[10:32:30.0000] <SteveF>
the acc support for longdesc has been implemented in Firefox for donkeys years, only browser that implemented AFAIK

[10:32:57.0000] <tantek>
Here is the bug: https://bugzilla.mozilla.org/show_bug.cgi?id=854848

[11:10:45.0000] <MikeSmith>
"While we've considered longdesc in the past, the landscape has changed and there are reasons to support it now.  For one, the W3C validator now supports it, making it more likely to be supported across browsers."

[11:10:50.0000] <MikeSmith>
sigh

[11:11:26.0000] <MikeSmith>
I didn't add support for it to the validator as an endorsement.

[11:11:48.0000] <MikeSmith>
I added it mostly because of aggressive lobbying.

[11:12:19.0000] <MikeSmith>
Similar to the kind of aggressive lobbying you can see in the comments in that bug.

[11:13:41.0000] <MikeSmith>
Where the word "aggressive" is an understatement.

[11:13:56.0000] <MikeSmith>
There are a lot of other words that kind of thing could be called.

[11:14:03.0000] <Philip`>
Seems like an effective way to do lobbying - you increase the pressure until just one of your opponents cracks, and then you can use them as leverage against your remaining opponents, until you win

[11:14:14.0000] <tantek>
MikeSmith, apparently, "successful"?

[11:14:44.0000] <MikeSmith>
tantek: not sure it's successful for users

[11:15:12.0000] <MikeSmith>
certainly yeah it's successful for the longdesc partisans

[11:15:20.0000] <jacobolus>
MikeSmith: you could just add snippets of whatever bits you found most obnoxious to the validator output whenever it finds a longdesc

[11:15:22.0000] <tantek>
MikeSmith - indeed, or for the web, or for accessibility overall.

[11:15:42.0000] <MikeSmith>
Philip`: sadly yeah I guess so

[11:17:45.0000] <MikeSmith>
jacobolus: Yeah I should have the validator emit a warning, "Despite some people wanting you to think otherwise, there is no consensus among accessibility professionals that the longdesc attribute is a win for accessibility."

[11:20:35.0000] <SteveF>
better to let it be, there are other things to waste ones time on

[11:21:05.0000] <MikeSmith>
yeah

[11:21:28.0000] <hober>
we don't always reach consensus, but when we do, it's by exhaustion

[11:21:55.0000] <MikeSmith>
heh

[11:35:33.0000] <jacobolus>
way too mild. name names! step it up!

[11:35:33.0000] <jacobolus>
"X, Y, and Z companies pressured the validator to add 'longdesc', but everyone else on the web thinks it's a dumb idea"

[11:35:53.0000] <jacobolus>
:p

[12:14:59.0000] <JonathanNeal>
So, <meta>!

[12:18:53.0000] <zcorpan>
jacobolus: companies or individuals?

[12:19:21.0000] <jacobolus>
zcorpan: I dunno. I'm just joking :)

[12:27:25.0000] <jgraham_>
jacobolus: You should be warned that one of the Commandments of The Lobby is "Thou Shalt Not Joke About Longdesc"

[12:28:30.0000] <jacobolus>
jgraham_: maybe browsers can just put in a picture of longcat every time someone uses a longdesc?

[12:28:46.0000] <jacobolus>
(completely serious recommendation)

[12:28:57.0000] <Ms2ger>
jacobolus, but how will the blind people see it?

[12:29:11.0000] <jacobolus>
long meows?

[13:11:40.0000] <Hixie_>
woah, crashed gecko

[13:11:43.0000] <Hixie_>
it's been a while

[13:11:49.0000] <Hixie_>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2276

[13:12:04.0000] <Hixie_>
Ms2ger: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=21736

[13:12:55.0000] <Ms2ger>
Hixie_, which Gecko?

[13:13:47.0000] <Hixie_>
Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:23.0) Gecko/20130508 Firefox/23.0

[13:15:24.0000] <Ms2ger>
/me frowns

[13:17:17.0000] <jgraham>
That's pretty out of date?

[13:17:45.0000] <Ms2ger>
I can find no proof in the code that a named getter would ever have existed on select

[13:18:56.0000] <Ms2ger>
Hixie_, huh.

[13:19:03.0000] <Hixie_>
"pretty out of date"! that's barely a month old! and i've been gone for most of that month! :-P

[13:19:12.0000] <Hixie_>
gotta give the poor browser time to download its updates

[13:19:39.0000] <Hixie_>
i'm actually surprised it's not older, since i was afk from 0504! :-)

[13:19:55.0000] <Ms2ger>
The crash with namedItem is probably https://bugzilla.mozilla.org/show_bug.cgi?id=877910

[13:20:28.0000] <Ms2ger>
But I'm quite confused where I got that

[13:20:29.0000] <Hixie_>
any idea what made you file the bug? :-)

[13:21:48.0000] <Ms2ger>
I presume something

[13:23:11.0000] <jgraham>
I thought that "more than 24 hours" was "pretty out of date" for a browser these days :p

[13:23:28.0000] <jgraham>
Although actually some of mine are rather more out of date than that

[13:23:43.0000] <jgraham>
Opera 12.16 for example...

[13:24:14.0000] <Ms2ger>
/me looks at the bugs he touched around that time

[13:25:11.0000] <Ms2ger>
https://bugzilla.mozilla.org/show_bug.cgi?id=862084 presumably...

[13:26:14.0000] <Ms2ger>
Hixie_, so I probably just got confused by the namedItem

[13:26:21.0000] <Hixie_>
k

[13:27:57.0000] <Ms2ger>
Hixie_, while you're in the area, https://www.w3.org/Bugs/Public/show_bug.cgi?id=22225

[13:29:46.0000] <Hixie_>
i've long left the area, but i'll be back. :-)

[13:30:03.0000] <Ms2ger>
That fixes the crash you hit ;)

[13:30:16.0000] <Hixie_>
...how? o_O

[13:30:30.0000] <Hixie_>
resource selection algorithm, 9, <source>, 10: Failed: Queue a task, using the DOM manipulation task source, to fire a simple event named error at the candidate element, in the context of the fetching process that was used to try to obtain candidate's corresponding media resource in the resource fetch algorithm.

[13:30:34.0000] <Ms2ger>
Because JSAPI sucks :)

[13:30:52.0000] <Hixie_>
anyone have any idea wtf i was talking about when i wrote "in the context of..." above?

[13:31:33.0000] <Ms2ger>
And in particular, we were creating the returned JS object manually, and needed the JS object for the options collection to exist for that

[13:32:49.0000] <jgraham>
Hixie_: Not a clue.

[13:33:13.0000] <Hixie_>
ok i'm removing that text

[13:33:16.0000] <Hixie_>
doesn't seem to mean anything

[13:33:22.0000] <Hixie_>
and i've no idea what i was trying to say

[13:33:42.0000] <Hixie_>
Ms2ger: that sounds... unrelated to the idl? :-)

[13:34:00.0000] <Ms2ger>
Hixie_, well, our IDL said 'object'

[13:34:16.0000] <Ms2ger>
And if it says that, you need to use JSObjects

[13:34:20.0000] <Ms2ger>
It sucks

[13:34:24.0000] <Hixie_>
k

[13:34:28.0000] <Hixie_>
i guess

[13:34:29.0000] <Hixie_>
:-)

[13:36:07.0000] <Ms2ger>
Hixie_, fun stuff! :)

[13:36:37.0000] <jgraham>
Can your IDL not express A or B

[13:36:39.0000] <jgraham>
?

[13:36:42.0000] <Ms2ger>
Yes

[13:36:46.0000] <Ms2ger>
But not for return values

[13:36:55.0000] <jgraham>
Oh

[13:37:06.0000] <Ms2ger>
Lifetime management there is somewhat annoying, aiui

[13:38:01.0000] <Ms2ger>
It'll come eventually, I hope

[13:48:47.0000] <GPHemsley>
hmm... the crash report comments for that crash are really angry

[13:49:06.0000] <GPHemsley>
and/or uninformed

[13:51:39.0000] <Ms2ger>
Better than uniformed, which is what i read first

[13:54:18.0000] <Hixie_>
so... why do we allow flow content in <dt> and <th>

[14:14:01.0000] <zcorpan>
interesting that view-source:http://svn.whatwg.org/webapps/source is horribly slow in browsers. except presto is fast

[14:15:40.0000] <zcorpan>
does <pre class="idl foobar"> make webidl-check skip validation?

[14:17:18.0000] <zcorpan>
Hixie_: for <dt> i think the use case was something like Q&A. for <th> i guess things like forms?

[14:20:17.0000] <Hixie_>
"idl extract" is to make the idl checker skip the block, yeah

[14:20:31.0000] <Hixie_>
those use cases kind of make sense i guess

[14:24:41.0000] <zcorpan>
thanks

[14:27:33.0000] <annevk>
Hixie_: allowing flow content there... wasn't that a zcorpan thing?

[14:27:50.0000] <annevk>
Hixie_: convoluted examples of complex markup in header cells

[14:29:51.0000] <zcorpan>
annevk: don't think so :-)

[14:31:42.0000] <zcorpan>
i recall 2006-ish when we pondered about content models i argued for phrasing-only in dt/th. but recently someone came up with the above use cases and the spec was changed to allow flow content. (also in figcaption)

[14:33:41.0000] <zcorpan>
http://lists.whatwg.org/pipermail/commit-watchers-whatwg.org/2011/005776.html

[14:33:52.0000] <zcorpan>
http://lists.whatwg.org/pipermail/commit-watchers-whatwg.org/2010/004216.html

[14:34:05.0000] <dglazkov>
good morning, Whatwg!

[14:35:46.0000] <Hixie_>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=13174#c6 already mentioned my plans for <dialog> in <th> :-)

[14:37:10.0000] <Hixie_>
those examples seem to have changed :-(

[14:39:34.0000] <zcorpan>
maybe we should start attaching snapshots of pages to bugs

[14:40:49.0000] <Hixie_>
well comment 2 has all you really need

[14:46:29.0000] <GPHemsley>
/me notices dglazkov's mornings getting later and later

[14:58:22.0000] <Hixie_>
anyone got IE10? IE9 is acting odd on http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2280

[15:00:09.0000] <Hixie_>
sicking: mounir pinged you on https://www.w3.org/Bugs/Public/show_bug.cgi?id=20580

[15:00:58.0000] <Philip`>
Hixie_: I get "error: Invalid argument. on line 4" in IE10

[15:01:14.0000] <Hixie_>
well at least the line number makes more sense

[15:01:16.0000] <Philip`>
following a single "log:"

[15:01:18.0000] <Hixie_>
IE9 was saying line 128

[15:01:29.0000] <Hixie_>
but that still makes no sense

[15:01:32.0000] <Hixie_>
thanks though!

[15:01:36.0000] <Hixie_>
anyone understand https://www.w3.org/Bugs/Public/show_bug.cgi?id=21800 ?

[15:05:23.0000] <TabAtkins>
I don't even know what s/b is.

[15:07:06.0000] <Hixie_>
the google says maybe "should be"?

[15:08:57.0000] <JonathanNeal>
Are <meta> tags liberal?

[15:09:32.0000] <JonathanNeal>
Howdy Hixie_, Did you and MikeSmith end up emailing folks about the meta name property?

[15:10:33.0000] <Hixie_>
JonathanNeal: it's on my list of things to deal with in 2014 Q1

[15:10:41.0000] <Hixie_>
then again, it was on my list for 2013 Q1

[15:11:06.0000] <annevk>
https://twitter.com/antimattur/status/342036107585806336 beautiful

[15:11:39.0000] <annevk>
oh god, that's an actual quote http://www.altova.com/list/xml-dev/201306/msg1000330505.html

[15:11:45.0000] <annevk>
lol interwebs

[15:15:53.0000] <Hixie_>
he does go on to say "it is virtually forgotten" so it's not clear what he meant...

[15:16:26.0000] <Hixie_>
xforms wasn't a thorn in the side, it was the catalyst :-)

[15:17:21.0000] <Hixie_>
bbiab.

[15:25:05.0000] <jarek>
omg, Boeing is using SVG

[15:27:32.0000] <jarek>
not the best choice for circuit diagraming

[16:28:12.0000] <zcorpan>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=21791 stupid browsers :-|

[16:41:59.0000] <dekiss>
Hixie_, here

[16:42:00.0000] <dekiss>
?

[16:42:13.0000] <dekiss>
if any html editor here please I have one question thanks

[16:47:54.0000] <rillian>
dekiss: don't ask to ask.

[16:48:15.0000] <rillian>
it's hard to tell if anyone knows the answer to your question if you don't state it.


2013-06-05
[18:07:20.0000] <MikeSmith>
JonathanNeal: I e-mailed the mailing list to invite some feedback but I don't plan on mailing anybody else

[18:07:36.0000] <MikeSmith>
who do you think we should e-mail>

[18:07:42.0000] <MikeSmith>
?

[18:07:43.0000] <MikeSmith>
?

[18:12:26.0000] <JonathanNeal>
I dunno. I tweeted it for some feedback.

[18:16:10.0000] <dekiss>
rillian, sry now I saw

[18:16:21.0000] <dekiss>
rillian, who edit html spec?

[18:16:28.0000] <dekiss>
who is authorized?

[18:29:48.0000] <MikeSmith>
https://twitter.com/TVRaman/status/342047516025552896

[18:30:00.0000] <MikeSmith>
Xforms in the air today I guess

[18:30:08.0000] <MikeSmith>
even got Raman tweeting

[18:30:23.0000] <MikeSmith>
I didn't even know he was twitter

[18:34:49.0000] <dekiss>
MikeSmith, you guys get feedback in emails and here and edit hmtl specification based on the feedback?

[18:38:58.0000] <MikeSmith>
dekiss: Hixie is the sole editor of the whatwg HTML spec. The W3C publishes a version of the spec also, based mostly only the whatwg spec but with some additions and changes. There are several editors of the W3C HTML spec but probably the most active one is SteveF, who's on this channel often and who focuses on accessibility features.

[18:41:02.0000] <dekiss>
nice

[18:41:36.0000] <dekiss>
I will look for him to ask him if accessibility technology devices can interpret dom and javascript

[18:43:17.0000] <MikeSmith>
dekiss: the answer is that the DOM and the results of JS operations on the DOM do get exposed to accessibility software

[18:43:37.0000] <MikeSmith>
though in a somewhat different form

[18:44:42.0000] <dekiss>
MikeSmith,  thanks I will download and/or buy some devices to check it myself

[18:58:08.0000] <JonathanNeal>
Did you guys change the validator to stop allowing <span> from wrapping block content?

[18:58:59.0000] <MikeSmith>
JonathanNeal: it doesn't allow it now

[18:59:08.0000] <MikeSmith>
there's been no change

[18:59:29.0000] <MikeSmith>
that causes an error to be reported

[19:35:05.0000] <tantek>
JonathanNeal - see, I was pretty sure you couldn't <span><blockquote></blockquote></span>

[22:54:54.0000] <MikeSmith>
Hixie: are you referencing level 4 of Selectors in HTML because something in the spec specifically requires something in level 4, or rather just because it's the latest?

[23:20:40.0000] <Hixie_>
MikeSmith: i believe i'm not referencing the editor's draft, actually

[23:20:44.0000] <Hixie_>
er

[23:20:44.0000] <Hixie_>
now

[23:20:45.0000] <Hixie_>
not not

[23:21:21.0000] <Hixie_>
yeah, i'm just referencing the editor's draft

[23:21:32.0000] <Hixie_>
(closest they have to a "living standard")

[23:32:30.0000] <MikeSmith>
Hixie_: ok

[23:47:57.0000] <Ms2ger>
OH: "Good ideas never die ... XForms..."

[00:08:12.0000] <jgraham>
Ms2ger: "proves that bad ideas never die, either"?

[00:17:18.0000] <Ms2ger>
<SimonSapin> http://w3cmemes.tumblr.com/post/34634329920/csswg-resolves-to-use-less-magic

[00:17:19.0000] <Ms2ger>
<fantasai> dbaron: Could introduce some magic

[00:59:01.0000] <dbaron>
it's really not *that* magical

[01:11:00.0000] <jgraham>
tobie: Are you going to rename the ttwf-docs repo?

[01:11:17.0000] <tobie>
yeah, I absolutely should.

[01:12:07.0000] <tobie>
also the docs suffix is idiotic

[01:12:15.0000] <tobie>
as we'll have more in there than just docs

[01:12:20.0000] <tobie>
including the main page, etc.

[01:12:29.0000] <tobie>
… the events

[01:13:27.0000] <tobie>
testtwf-website?

[01:14:01.0000] <jgraham>
WFM

[01:14:07.0000] <tobie>
deal

[02:11:24.0000] <MikeSmith>
tobie: in general I take the "docs" abbreviation to just mean (Web) "documents" and not necessarily documentation

[02:11:33.0000] <MikeSmith>
e.g., "/www/docs" and such

[02:11:46.0000] <tobie>
oh, you're old school, man!

[02:11:51.0000] <MikeSmith>
heh

[02:11:57.0000] <MikeSmith>
I am that, I guess

[02:12:13.0000] <MikeSmith>
anyway, -website is definitely clearer

[02:16:41.0000] <darobin>
bah

[02:16:53.0000] <darobin>
it should be testtwf-var-www-sites

[02:17:35.0000] <MikeSmith>
heh

[02:18:08.0000] <jgraham>
Hmm, we would attract more users if we went all OSX. Library-WebServer-Documents-TestTWF ftw

[02:37:02.0000] <MikeSmith>
good brainstorming

[03:04:13.0000] <jgraham>
lol at "let's proceed only on es-discuss. This is […] not a browser issue"

[03:05:32.0000] <jgraham>
In other news, skepticism remains about how much TC39 really want to work with the rest of the community.

[03:07:15.0000] <darobin>
ouch

[03:07:38.0000] <Ms2ger>
:/

[03:35:32.0000] <annevk>
I don't know why he insists on trolling all the time

[03:35:41.0000] <annevk>
it's annoying

[03:43:37.0000] <Ms2ger>
Habit?

[03:44:19.0000] <annevk>
You would know

[03:50:40.0000] <Ms2ger>
Indeed so

[03:58:08.0000] <hsivonen>
annevk: this text misunderstands the meaning of CORS-same-origin, right: https://dvcs.w3.org/hg/html-media/rev/69dbfb8baca8#l1.18 ?

[03:59:12.0000] <annevk>
hsivonen: that reads very weird

[03:59:20.0000] <hsivonen>
annevk: that is, the CORS-same-origin concept covers the case where CORS has been used, so the "or use the crossorigin..." bit is confused

[04:00:00.0000] <annevk>
hsivonen: yes

[04:00:34.0000] <annevk>
also, xsl:template o_O

[04:10:21.0000] <hsivonen>
annevk: my bank exposed an expired certificate in production this morning and my reaction was "also, ISO-8859-15 o_O"

[04:11:48.0000] <annevk>
need a bigger O

[04:11:49.0000] <Ms2ger>
I wonder if cobol outputs ISO-8859-15

[04:19:12.0000] <hsivonen>
Ms2ger: ISO-8859-1 is way too new for Cobol

[04:19:16.0000] <hsivonen>
argh

[04:19:21.0000] <hsivonen>
-15

[06:09:42.0000] <annevk>
hsivonen: http://i.imgur.com/4J7Il0m.jpg is  beautiful

[06:13:59.0000] <zcorpan>
annevk: btw philipj suggested maybe Fetch should cover the fetching story that apply to media elements

[06:14:27.0000] <annevk>
I know there's a sad story for <img> elements. There's one for media elements too?

[06:14:39.0000] <zcorpan>
what's about <img<?

[06:14:41.0000] <annevk>
I should write these stories down somewhere so I don't forget about them.

[06:15:09.0000] <zcorpan>
well media elements support http range requests

[06:15:25.0000] <annevk>
zcorpan: per Document a URL is only fetched once and then simply retrieved from cache, irrespective of HTTP cache headers on the fetch.

[06:15:58.0000] <annevk>
I'll be back in 45min, need to ensure I have dry clothes before traveling Friday :)

[06:16:22.0000] <Ms2ger>
Eh, dry clothes are overrated

[06:16:33.0000] <zcorpan>
loading an .ogg resource means doing a range request from 0 to infinity, then if the server supports range requests and the ogg resource doesn't have an index, you seek to the end (i.e. abort the first request and do a new request) of the file to find out the duration, then you do a third request from where you left of from the first request

[06:17:27.0000] <zcorpan>
and there's a different cache for media resources

[06:18:29.0000] <zcorpan>
we reverse engineered gecko in this area :-)

[06:19:16.0000] <zcorpan>
also, there are unsubmitted tests in this area :-/

[06:21:42.0000] <jgraham>
zcorpan: Yeah, I noticed that the other day when Ms2ger was asking

[06:22:29.0000] <jgraham>
Making Gecko run tests on their own reverse-engineered behaviour should be reason enough to release them ;)

[06:26:15.0000] <zcorpan>
the media cache tests are ugly php hacks

[06:26:15.0000] <zcorpan>
with state management being text files on the server, iirc

[06:26:50.0000] <jgraham>
Nice

[06:27:11.0000] <zewt_>
zcorpan: seems really wasteful to send a request expecting to abort it, since the server will probably push out a ton of data that would get discarded

[06:27:38.0000] <zewt>
surprised it doesn't just leave the first request running, and run a second request at the end in parallel

[06:27:42.0000] <zcorpan>
zewt: yeah well

[06:28:29.0000] <zewt>
the server probably can't tell the difference (it might not even be able to detect the abort until after the second request starts anyway), and it'd be a lot more efficient

[06:28:55.0000] <zcorpan>
yeah i've pondered about that as a way to do it as well

[06:28:56.0000] <zcorpan>
but it was hard to argue that we should spend time implementing such a tweak when there were lots of more important things to implement

[06:29:11.0000] <jgraham>
I presume a certain amount of real world experience went into this design

[06:29:17.0000] <jgraham>
Although I might be wrong ofc

[06:29:59.0000] <zewt>
i'm wary about making that assumption these days :)

[06:30:31.0000] <zcorpan>
i don't know if the parallel strategy was considered before things got implemented in gecko and presto

[06:31:02.0000] <jgraham>
Well it seems kind of obvious

[06:31:45.0000] <jgraham>
So I favour the explaination that it was considered and rejected over the explaination that no one even thought of it

[06:32:34.0000] <zcorpan>
i thought of it, but not until after we had implemented the aborting strategy

[06:33:17.0000] <zcorpan>
maybe the gecko people thought of it too and rejected it because it wouldn't work with some proxies or whatever

[06:33:21.0000] <zewt>
also means that if the server doesn't support range, you get fewer round-trips (since the main request doesn't have to be a Range and you don't have to redo it if it doesn't work), not that broken servers is a big optimization point

[06:33:43.0000] <zewt>
(also are)

[06:34:18.0000] <zewt>
though I guess you want to know that (in the "don't need to read from the end of the file" case) anyway, to know whether to enable seeking

[06:34:56.0000] <zcorpan>
zewt: if the server doesn't support range, the first request is carried on as if it wasn't a range request

[06:38:03.0000] <zewt>
though I guess you want to know that (in the "don't need to read from the end of the file" case) anyway, to know whether to enable seeking

[06:38:06.0000] <zcorpan>
zewt: if the server doesn't support range, the first request is carried on as if it wasn't a range request

[06:40:41.0000] <zcorpan>
now i don't follow :-)

[07:07:15.0000] <zewt>
ie10 still doesn't put spaces between console.log parameters? :|

[07:09:50.0000] <annevk5>
jgraham: I'd favour asking

[07:11:05.0000] <annevk5>
jgraham: I'd favour asking

[07:12:32.0000] <zewt>
ie10 still doesn't put spaces between console.log parameters? :|

[07:14:52.0000] <jgraham>
annevk: Yes, of course, I wouldn't suggest we blindly assume everything must have been done for a good reason. But I also wouldn't go in with the attitude that things that look suboptimal don't have any reasoning behind them.

[07:19:59.0000] <GPHemsley>
annevk: So... when do we start on that common definitions spec?

[07:21:00.0000] <annevk>
GPHemsley: do you have spare time?

[07:21:12.0000] <GPHemsley>
ain't that a loaded question

[07:21:44.0000] <GPHemsley>
/me really wishes he got paid for his spare time

[07:21:59.0000] <annevk>
heh

[07:22:12.0000] <Ms2ger>
Too much, clearly ;)

[07:22:51.0000] <jgraham>
You get paid for it in time

[07:23:06.0000] <jgraham>
Which is, I have been led to believe, money

[07:23:40.0000] <GPHemsley>
aha

[07:27:36.0000] <annevk>
heh

[07:31:25.0000] <annevk>
GPHemsley: I'm not sure we're quite there yet. Might need some more incremental evolution first.

[07:31:49.0000] <GPHemsley>
incremental evolution where? because we may start to have divergent definitions

[07:33:15.0000] <jgraham>
Well talking to each other helps with that :)

[07:33:52.0000] <GPHemsley>
jgraham: I'm probably more worried about the cases where we don't even realize we're using/defining the same terms.

[07:33:56.0000] <jgraham>
At some level you always have people not specs

[07:34:22.0000] <jgraham>
Well if people aren't reading each other's specs, we have a bigger problem

[07:36:05.0000] <GPHemsley>
Why is that? There are plenty of specs (that annevk writes) that have nothing to do with what I'm doing.

[07:37:12.0000] <GPHemsley>
Ms2ger: Where in the code will I need to look to fix this? https://bitbucket.org/ms2ger/anolis/issue/8/should-override

[07:37:20.0000] <annevk>
GPHemsley: I think as a specification editor it's part of your job to be familiar with a large set of specifications. That's the only way you avoid needlessly introducing new concepts and terminology into the world.

[07:37:30.0000] <jgraham>
GPHemsley: I didn't say that everyone had to read everyone else's specs. But if you are writing a spec and it isn't being read by anyone that is writing/reading any other specs, that's not good

[07:37:50.0000] <jgraham>
Also, as annevk says, the reverse is true

[07:37:51.0000] <annevk>
GPHemsley: It'll also help understand where we might need to abstract or share concepts.

[07:38:46.0000] <Ms2ger>
GPHemsley, either xref.py or xspecxref.py in anolislib/processes

[07:39:33.0000] <jgraham>
tobie: Any chance of giving me whatever the permissions are on testtwf-website so that I can add hooks? (admin?)

[07:40:14.0000] <GPHemsley>
annevk: By that logic, then, you should already be familiar with all the stuff I'm doing in mimesniff, right?

[07:40:57.0000] <GPHemsley>
Ms2ger: Oh, and I heard there were tests I can run?

[07:41:28.0000] <Ms2ger>
Yeah

[07:41:36.0000] <annevk>
GPHemsley: I don't think that follows directly from what I said and I haven't checked mimesniff lately

[07:42:24.0000] <Ms2ger>
GPHemsley, python runtests.py in the top dir

[07:42:36.0000] <GPHemsley>
Ms2ger: Ah, k, thanks

[07:42:55.0000] <Ms2ger>
GPHemsley, adding a test for your case when you fix it is appreciated ;)

[07:43:04.0000] <GPHemsley>
k

[07:50:36.0000] <GPHemsley>
argh, I forget how hg works

[07:56:06.0000] <tantek>
GPHemsley - that happens to me all the time. I forget how (insert command line tool here) works.

[07:56:18.0000] <GPHemsley>
heh

[07:56:28.0000] <jgraham>
Well hg in particular is bad

[07:56:32.0000] <GPHemsley>
well this is specifically because I've been spending so much time with git lately

[07:57:40.0000] <tantek>
So when learning any new one, I end up making "xyz for dummies" wiki pages for each such command line tool, because I can predict fairly accurately that my future self will be a dummy with regards to said xyz command line tool.

[07:58:45.0000] <tantek>
e.g. for hg, I didn't make this one, but I've contributed to it: http://wiki.csswg.org/tools/hg

[07:59:06.0000] <tantek>
you may find it of some use, and feel free to add any problems / questions you encounter

[08:02:25.0000] <Ms2ger>
jgraham, it's much better than git, fortunately

[08:06:36.0000] <jgraham>
Yes, because applications where the first step in using them is "fiddle about with a configureation file to enable essential features" are so easy to use

[08:08:57.0000] <Ms2ger>
jgraham, "I forgot how to set it up" is a lot less of a problem than "I forgot how to use it"

[08:10:44.0000] <jgraham>
I rarely know how to use things that I have to Google to even set up correctly.

[08:12:59.0000] <tantek>
jgraham - LOL: "fiddle about with a configureation file to enable essential features" are so easy to use

[08:13:07.0000] <tantek>
yeah, that.

[08:16:04.0000] <jgraham>
Although it does look like if you have new enough mercurial, you get histedit with only a config option and not a config option + downloading a random script from the internet

[08:16:09.0000] <jgraham>
So I guess that's progress

[08:17:02.0000] <GPHemsley>
Ms2ger: Are the tests themselves documented? Because I've got one failing without telling me why or what it's for.

[08:17:13.0000] <jgraham>
Still would be nice if someone would go back in time and convinve the hg people that cheap, temporary, local branches are an essential feature

[08:17:24.0000] <jgraham>
Unfortunately, they don't believe in editing history\

[08:18:06.0000] <Ms2ger>
GPHemsley, which one fails? They all pass for me

[08:18:17.0000] <GPHemsley>
toc-basic.src.html

[08:18:35.0000] <GPHemsley>
apparently x != y

[08:18:41.0000] <GPHemsley>
but the difference is subtle and hard to see

[08:19:44.0000] <GPHemsley>
id=baz? vs id=baz

[08:19:59.0000] <Ms2ger>
Interesting

[08:20:53.0000] <Ms2ger>
Ignore it for now and/or file a bug, I guess

[08:22:28.0000] <GPHemsley>
Ms2ger: How is it that you're not seeing it?

[08:22:37.0000] <GPHemsley>
(Maybe a different version of html5lib?)

[08:22:48.0000] <Ms2ger>
Yeah, that's the most likely

[08:26:59.0000] <jgraham>
0.95 vs 1.0b?

[08:27:19.0000] <jgraham>
Would be interested in knowing if it's that

[08:27:37.0000] <Ms2ger>
Doesn't seem to make a difference

[08:28:54.0000] <GPHemsley>
Ms2ger: Is there a fake xref file I can use?

[08:29:41.0000] <Ms2ger>
GPHemsley, I don't think so

[08:29:55.0000] <Ms2ger>
You'll probably need an .options file too

[08:32:24.0000] <GPHemsley>
Ms2ger: How do I add the xspecxref process?

[08:32:28.0000] <GPHemsley>
(to the options)

[08:32:55.0000] <Ms2ger>
/me reads some code

[08:32:59.0000] <GPHemsley>
heh

[08:33:33.0000] <Ms2ger>
{ 'processes': 'xspecxref' }

[08:33:51.0000] <GPHemsley>
"TypeError: buildReferences() takes at least 3 arguments (2 given)"

[08:33:52.0000] <Ms2ger>
Hrm

[08:34:04.0000] <Ms2ger>
Or ['xspecxref']

[08:34:36.0000] <Ms2ger>
Yeah, needs to be an array

[08:34:37.0000] <GPHemsley>
yeah, right, already did that :)

[08:34:48.0000] <GPHemsley>
the issue may be with not having an xref file

[08:35:17.0000] <Ms2ger>
You may need to point at it...

[08:36:07.0000] <Ms2ger>
'xref': 'data' or whatever you called the dir

[08:51:02.0000] <GPHemsley>
Ms2ger: https://bitbucket.org/ms2ger/anolis/pull-request/8/fix-8-should-override/diff

[08:51:53.0000] <Ms2ger>
Thanks, going to look in a bit

[09:38:17.0000] <jgraham>
odinho: I think I suggested the shutdown. I'm only still there to turn out the lights :)

[09:42:44.0000] <nimbu>
jgraham: ARE YOU IN OSLO

[09:43:45.0000] <Ms2ger>
/me covers his ears

[09:50:24.0000] <jgraham>
nimbu: NO. YOU KNOW THAT THE INTERNET LETS YOU TALK TO PEOPLE A LONG WAY AWAY WITHOUT SHOUTING?

[09:50:54.0000] <jgraham>
THATS WHY IT IS GOOD

[09:51:04.0000] <jgraham>
So we can probably talk at a normal volume

[10:07:42.0000] <annevk>
BUT THE TUBES

[10:08:50.0000] <miketaylr>
have to shout over the noise of splits

[10:21:54.0000] <rillian>
miketaylr: when you say that, I think you don't appreciate the elegance of minimal spanning trees

[10:22:46.0000] <miketaylr>
:)

[10:22:48.0000] <Ms2ger>
/me throws a brick at rillian 

[10:23:09.0000] <Ms2ger>
/me thinks he's done having classes about MSTs now

[10:44:11.0000] <JonathanNeal>
hello

[10:57:34.0000] <GPHemsley>
Feedback welcome: http://wiki.whatwg.org/wiki/Contexts

[10:57:46.0000] <GPHemsley>
especially from Hixie_ (HTML) and annevk (Fetch) ^^

[10:58:09.0000] <GPHemsley>
and any CSS folks who care to weigh in (TabAtkins, SimonSapin, etc.)

[10:58:19.0000] <annevk>
GPHemsley: for bonus points, plot that against CSP fetch types

[10:58:54.0000] <annevk>
GPHemsley: CSS has these img-src, media-src, etc. thingies we need to integrate into the rest of the stack somehow

[10:59:00.0000] <annevk>
not CSS, CSP

[10:59:02.0000] <annevk>
grmbl

[10:59:08.0000] <GPHemsley>
ah, k

[10:59:12.0000] <GPHemsley>
do you have a link handy/

[10:59:13.0000] <GPHemsley>
?

[10:59:22.0000] <annevk>
https://dvcs.w3.org/hg/content-security-policy/raw-file/tip/csp-1.0-specification.html

[10:59:34.0000] <annevk>
I think there might be a 1.1 too somewhere

[10:59:43.0000] <annevk>
it's not very well organized over on w3.org :/

[10:59:55.0000] <GPHemsley>
MDN says https://dvcs.w3.org/hg/content-security-policy/raw-file/tip/csp-specification.dev.html

[11:00:03.0000] <tantek>
annevk, perhaps it could be better organized on w3.org/wiki ;)

[11:00:08.0000] <annevk>
GPHemsley: nice

[11:02:20.0000] <GPHemsley>
incidentally, I think there may also need to be an 'embed' or 'plugin' context, but I haven't quite figured that out yet

[11:06:21.0000] <annevk>
yeah, HTML defines a bunch of that itself

[11:06:43.0000] <annevk>
getting these things extracted is good work

[11:08:01.0000] <GPHemsley>
HTML currently only uses "browsing context" by name

[11:08:07.0000] <GPHemsley>
the rest are currently implicit

[11:08:07.0000] <GPHemsley>
the rest are currently implicit

[11:08:34.0000] <GPHemsley>
but I needed to figure them out so that I could have separate sniffing algorithms for each

[11:18:12.0000] <matjas>
annevk: any idea why i can’t seem to ssh into html5.org anymore?

[11:18:19.0000] <matjas>
getting “Connection to html5.org closed by remote host. Connection to html5.org closed.”

[11:18:20.0000] <GPHemsley>
annevk: OK, updated with CSP directives and 'plugin' context type

[11:19:44.0000] <GPHemsley>
oh, hmm, maybe I should move that column

[11:23:50.0000] <rillian>
Ms2ger: I'm actually a little surprised no one's tried to fix the MSP thing. It's not like the network doesn't have to run the same daemon on all servers, so it should be easy to extend the protocol on that side to do multiple routing and de-dup

[11:24:37.0000] <Ms2ger>
?

[11:26:32.0000] <GPHemsley>
Updated: http://wiki.whatwg.org/wiki/Contexts

[11:26:46.0000] <GPHemsley>
(Help removing questions marks appreciated.)

[11:29:19.0000] <rillian>
Ms2ger: MST, not MSP. It's going to be one of those typo days

[11:29:23.0000] <rillian>
/me considers tea

[11:30:09.0000] <Ms2ger>
Michigan State Police?

[11:30:14.0000] <Ms2ger>
Ministerio de Salud P�blica?

[11:30:29.0000] <GPHemsley>
how are those different?

[11:30:30.0000] <Ms2ger>
Measurements of Student Progress?

[11:30:31.0000] <GPHemsley>
^_^

[11:31:41.0000] <Ms2ger>
/me wonders if there's any website with reasonable UX in English that covers most European rail

[11:35:54.0000] <jgraham>
I thought everyone used the german rail website for tat

[11:35:56.0000] <jgraham>
*that

[11:36:05.0000] <jgraham>
But I don't know about "reasonable UX"

[11:37:01.0000] <jgraham>
Although if search is anything to go by, my information might be outdated

[11:38:28.0000] <Domenic_>
hmm this is getting linked to from a popular-this-week stackoverflow answer; someone (annevk?) might want to update it... https://developer.mozilla.org/en-US/docs/DOM_Levels

[11:39:18.0000] <rillian>
Ms2ger: Minimal Spanning Tree. I was referring to your comments of an hour past

[11:39:22.0000] <jgraham>
Domenic_: Which SO? Or don't you know?

[11:41:03.0000] <Domenic_>
jgraham: I got it in my weekly Programmers newsletter. http://programmers.stackexchange.com/questions/200247/a-few-clarifications-about-the-dom?newsletter=1&nlcode=31316|4c54

[11:42:05.0000] <annevk>
Domenic_: heh, that seems quite out of date

[11:42:14.0000] <Ms2ger>
jgraham, yeah, that does look a lot better than what I ended up with before, thanks

[11:42:18.0000] <annevk>
matjas: no, email me?

[11:42:28.0000] <annevk>
matjas: can sort out tomorrow hopefully

[11:44:56.0000] <jgraham>
Hmm, someone with a SO account might like to provide a better answer

[11:45:10.0000] <Ms2ger>
(It's Dutch translation doesn't appear to be entirely accurate, but hey, there is one)

[12:23:00.0000] <Ms2ger>
Heh, CSS Eleven

[12:23:07.0000] <nimbu>
wat

[12:25:16.0000] <Ms2ger>
http://my.opera.com/dstorey/blog/css-eleven seems to be a contemporary blog post about them

[12:28:26.0000] <miketaylr>
is this like html5 superfriends?

[12:28:31.0000] <Ms2ger>
Heh, CSS Eleven

[12:28:33.0000] <nimbu>
wat

[12:28:55.0000] <Ms2ger>
http://my.opera.com/dstorey/blog/css-eleven seems to be a contemporary blog post about them

[12:28:56.0000] <miketaylr>
is this like html5 superfriends?

[12:29:32.0000] <Ms2ger>
Mm, forgot about those too

[12:29:51.0000] <Ms2ger>
I guess those turned out just as useless

[12:35:24.0000] <tantek>
Ms2ger - nah - html5superfriends had an impact on the spec

[12:35:44.0000] <tantek>
e.g. <time> improvements very much started from brainstorming among the html5superfriends

[12:36:00.0000] <tantek>
also, AFAIK CSS Eleven as just an announcement - I don't know of any actual output

[12:36:31.0000] <tantek>
whereas HTML5 Super Friends published http://www.zeldman.com/superfriends/

[12:36:33.0000] <tantek>
and http://www.zeldman.com/superfriends/guide/

[12:36:48.0000] <tantek>
and was also one of the inspirations for me to write my book on HTML5.

[12:43:37.0000] <jgraham>
I'm pretty sure that "guide" was entirely ignored

[12:44:00.0000] <jgraham>
Except to the extent that you personally championed issues on the mailing lists

[12:44:17.0000] <jgraham>
Which is not surprising

[12:45:49.0000] <jgraham>
Making fancy announcements doesn't impress anyone

[12:45:57.0000] <jgraham>
Doing actual work does

[12:58:43.0000] <tantek>
jgraham, nah, the guide was well read because it was easy to read by a broad audience.

[12:58:51.0000] <tantek>
and then we filed follow-up issues to get actual changes made

[12:59:09.0000] <tantek>
the context of 2009 is also important, when there was a lot of hype+disappointment

[12:59:12.0000] <tantek>
in "HTML5"

[12:59:38.0000] <tantek>
so part of the point was to provide a broader recommendation that yes, in general HTML5 is good, and that web designers ought to move forward with it

[13:00:27.0000] <tantek>
web designers read blogs/twitter more than #whatwg or certainly lists^H^H^H^H^H support forums.

[13:16:25.0000] <Hixie_>
tantek: the "superfriends" didn't influence the spec, you did

[13:16:38.0000] <tantek>
Hixie - the superfriends influenced me

[13:16:43.0000] <tantek>
transitive

[13:16:54.0000] <tantek>
even if bottlenecked - which you know something about

[13:16:57.0000] <Hixie_>
in that case the war on iraq influenced the spec :-P

[13:17:31.0000] <tantek>
http://en.wikipedia.org/wiki/Butterfly_effect :P

[13:17:43.0000] <Hixie_>
yeah i don't think that's a useful definition for discussion :-)

[14:49:02.0000] <shepazu>
hober, is this a candidate for W3CMemes? http://schepers.cc/svg/text/simply-wrap-text-in-SVG.png

[15:10:47.0000] <Hixie_>
/me comes across a comment in the html spec that says "<!-- This algorithm is a monument to bad design. Go legacy! -->"

[15:18:03.0000] <Hixie_>
well that's interesting

[15:18:17.0000] <Hixie_>
while firefox supports svg in <embed>, chrome just supports anything. html. images.

[15:18:38.0000] <Hixie_>
/me brings out IE as a tie-breaker

[15:21:46.0000] <Hixie_>
great, the version of IE I have won't even load flash

[15:21:51.0000] <Hixie_>
anyone got IE10?

[15:22:16.0000] <Hixie_>
control test: does this say "pass"? http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2283

[15:22:28.0000] <Hixie_>
image test: what does this do? http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2284

[15:22:36.0000] <Hixie_>
html test: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2285

[15:22:53.0000] <Hixie_>
svg type test: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2286

[15:23:06.0000] <Hixie_>
(ignore the dump button)

[15:25:46.0000] <Hixie_>
and finally, svg test: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2287

[15:28:01.0000] <Hixie_>
and finally finally, if the previous test actually worked: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2288

[16:43:11.0000] <GPHemsley>
Hixie_: IE8:

[16:43:19.0000] <GPHemsley>
2283 - pass

[16:44:07.0000] <GPHemsley>
2284 has a disabled, empty box with a scrollbar

[16:44:50.0000] <GPHemsley>
2285 has a tiny little empty square

[16:45:11.0000] <GPHemsley>
same for 2286

[16:45:38.0000] <GPHemsley>
2287 has a wide empty rectangle

[16:46:11.0000] <GPHemsley>
2288 wants to run MSXML plugin

[16:46:34.0000] <GPHemsley>
so... none of them in any way match the "control", if they were supposed to

[16:54:21.0000] <Hixie_>
GPHemsley: cool, thanks


2013-06-06
[17:48:11.0000] <dglazkov>
good morning Whatwg!

[18:13:52.0000] <boogyman>
hi

[03:10:41.0000] <annevk>
Given WebRAW http://blog.bitops.com/blog/2013/06/04/webraw-asmjs/ and WebP, maybe allowing JavaScript to be an image decoder is not too bad...

[03:11:33.0000] <annevk>
Would have to sandbox it somehow so it also works for cross-origin images. And needs a story for sniffing.

[03:14:44.0000] <annevk>
Hixie_: Giving https://www.w3.org/Bugs/Public/show_bug.cgi?id=22185 priority would be great

[03:17:20.0000] <jgraham>
annevk: Well you could scope it to same-origin only, perhaps

[03:17:35.0000] <annevk>
jgraham: that's not acceptable

[03:17:42.0000] <jgraham>
Why not?

[03:17:51.0000] <annevk>
jgraham: because that doesn't match what the platform can do

[03:17:52.0000] <jgraham>
It seems strivtly better than it not working at all

[03:18:15.0000] <annevk>
jgraham: I think a worker without networking APIs or postMessage would be workable

[03:18:26.0000] <jgraham>
And matches what people retrospectively wish the platform had done

[03:18:29.0000] <annevk>
jgraham: the only thing it can do is decode a stream

[03:19:13.0000] <jgraham>
Making up a new kind of global scope for each new feature doesn't sound like fun

[03:19:26.0000] <MikeSmith>
fyi for anybody using w3c-test.org: I just spent an hour on there trying to unwedge apache problems due to debian upgrade bullshit and I have it running again but I very likely broke some other behavior of the web server in the process. So if you notice any problems please let me know.

[03:20:30.0000] <annevk>
jgraham: parallelize all the things

[03:21:04.0000] <annevk>
might be a problem even with that, you could encode data in output width/height

[03:59:12.0000] <annevk>
matjas: contacted DH

[03:59:16.0000] <annevk>
matjas: cc'd you

[04:14:42.0000] <annevk>
Ms2ger: yo

[04:14:52.0000] <Ms2ger>
/me appears

[04:15:11.0000] <annevk>
Is "The term context object means the object on which the algorithm (typically a method or attribute) being discussed was called. When the context object is unambiguous, the term can be omitted." clear enough you think?

[04:15:27.0000] <annevk>
Ms2ger: http://lists.w3.org/Archives/Public/www-dom/2013AprJun/0154.html

[04:16:15.0000] <Ms2ger>
Hm

[04:16:27.0000] <Ms2ger>
A method/attribute isn't really an algorithm, though

[04:18:02.0000] <annevk>
so just or the things?

[04:18:08.0000] <Ms2ger>
"typically defining the behavior of a method or attribute" maybe?

[04:18:15.0000] <Ms2ger>
/me is not good with words

[04:18:35.0000] <annevk>
"The term <dfn>context object</dfn> means the object on which the algorithm, method, or attribute being discussed was called."

[04:18:42.0000] <hallvors>
context object === this object ?

[04:18:45.0000] <Ms2ger>
Yeah

[04:19:19.0000] <hallvors>
text is still a bit clumsy, in that you can not call an attribute

[04:19:41.0000] <jgraham>
"accessed"

[04:19:59.0000] <annevk>
thanks jgraham

[04:20:08.0000] <Ms2ger>
But can you access an algorithm?

[04:20:30.0000] <hallvors>
but if you mean the "this object" perhaps you could just reference a suitable definition in ES?

[04:20:40.0000] <hallvors>
though they might not do one for properties..

[04:20:42.0000] <Ms2ger>
Maybe ... on which an algorithm, method, or attribute getter or setter ...

[04:20:53.0000] <annevk>
Ms2ger: yeah

[04:21:07.0000] <Ms2ger>
hallvors, well, it isn't a ES object :)

[04:21:22.0000] <annevk>
JSIDL will make most of this obsolete

[04:21:26.0000] <hallvors>
/me lacks context for the context object discussion

[04:21:38.0000] <annevk>
hallvors: see the link earlier

[04:21:56.0000] <hallvors>
/me is recontextualising

[04:22:15.0000] <jgraham>
JSIDL: Pretending it's turtles^Wjavascript all the way down since 2013

[04:24:03.0000] <annevk>
jgraham: not very different from pretending there's no hardware limits

[04:25:10.0000] <jgraham>
Well sure, it might be a good pretense, I don't know

[04:26:12.0000] <jgraham>
Personally I am waiting for the time when we can design APIs where DOM objects hold references to JS objects

[04:27:12.0000] <annevk>
jgraham: like promises?

[04:27:24.0000] <Ms2ger>
Is Safari going to implement?

[04:27:41.0000] <annevk>
Ms2ger: implement what?

[04:27:51.0000] <Ms2ger>
Promises

[04:28:35.0000] <annevk>
Dunno, I'd assume so

[04:28:49.0000] <jgraham>
Doesn't Blink still have the same issue?

[04:29:34.0000] <jgraham>
So "is anyone other than Gecko going to implement DOM Promises", perhaps?

[04:32:35.0000] <annevk>
Blink is implementing for sure

[04:34:28.0000] <jgraham>
Interesting

[04:35:13.0000] <annevk>
Microsoft will too

[04:35:19.0000] <jgraham>
Last time I heard from abarth they had no plans to change thier memory management to deal with DOM->JS->DOM cycles

[04:35:53.0000] <jgraham>
This was pre-blink of course

[04:36:33.0000] <annevk>
abarth basically recommends implementing most directly in JS

[04:36:43.0000] <annevk>
which makes sense, as it'll end up there anyway

[04:37:38.0000] <jgraham>
I guess that might solve the problem for them

[04:55:39.0000] <hallvors>
annevk: "The plan is for debugging tools to solve this." - don't forget that it's common for web apps to log errors happening client-side and send the details home

[06:23:40.0000] <annevk>
hallvors: if at the end of your chain of futures you use .chain(e => log(e)) you'll be fine

[06:24:33.0000] <hallvors>
OK

[06:25:12.0000] <annevk>
sorry, .catch(...)

[06:40:54.0000] <annevk5>
marcosc: http://sysapps.github.io/sysapps/proposals/Contacts/Contacts.html is broken

[06:47:01.0000] <marcosc>
annevk: thanks, will fix

[06:48:02.0000] <Ms2ger>
/me liked the "[editing] Editing spec is no longer online" thread

[06:48:45.0000] <annevk>
Timestamps indicate darobin was quickest, but slowest to appear in my inbox :/

[06:49:01.0000] <Ms2ger>
He was first for me

[06:49:10.0000] <Ms2ger>
Then you, then Art

[06:49:33.0000] <darobin>
there may be more replies to come

[06:49:43.0000] <Ms2ger>
/me replies

[06:49:43.0000] <annevk>
Given the lag, yes

[06:49:45.0000] <darobin>
Ms2ger hasn't responded yet, for instance

[06:50:09.0000] <annevk>
I should have learned by now not to reply to those emails

[06:50:14.0000] <annevk>
But every now and then...

[06:50:18.0000] <darobin>
yeah so should I

[06:50:29.0000] <darobin>
but then no one replies and it's not nice either

[06:55:05.0000] <hallvors>
guys, just relax and enjoy random syncronicity

[06:56:26.0000] <annevk>
hallvors: I think that's the problem, there'd be less 386 if I was relaxed

[07:16:50.0000] <manu-db>
darobin: HTML5 DOM question for you about the language associated with nodes. Does the document language expressed via the HTTP Header "Content-Language" get used by the DOM in any way? We're trying to figure out if the language specified in an HTTP Header is transferred in any way to a DOM environment.

[07:17:05.0000] <manu-db>
Hixie_: same question ^^

[07:17:44.0000] <manu-db>
darobin, Hixie_: From a read of the spec, it doesn't look like it is... wondering if it's somewhere else in the spec.

[07:20:08.0000] <Ms2ger>
  <p>If neither the node nor any of the node's ancestors, including the <span>root element</span>,

[07:20:08.0000] <Ms2ger>
  have either attribute set, but there is a <span>pragma-set default language</span> set, then that

[07:20:08.0000] <Ms2ger>
  is the language of the node. If there is no <span>pragma-set default language</span> set, then

[07:20:08.0000] <Ms2ger>
  language information from a higher-level protocol (such as HTTP), if any, must be used as the

[07:20:08.0000] <Ms2ger>
  final fallback language instead. In the absence of any such language information, and in cases

[07:20:10.0000] <Ms2ger>
  where the higher-level protocol reports multiple languages, the language of the node is unknown,

[07:20:12.0000] <Ms2ger>
  and the corresponding language tag is the empty string.</p>

[07:20:25.0000] <manu-db>
Yes, already read the spec...

[07:20:32.0000] <manu-db>
Let me rephrase the question.

[07:20:43.0000] <GPHemsley>
annevk: See also: https://github.com/GPHemsley/tiff-js , https://github.com/jnordberg/gif.js

[07:21:11.0000] <darobin>
manu-db: my understanding is that it does; at the very least setting Content-Language through <meta> certainly works

[07:21:14.0000] <manu-db>
Is there a way for an HTML+JavaScript app to get the "Content-Language" http header.

[07:21:24.0000] <darobin>
ah, that's a completely different question

[07:21:35.0000] <annevk>
GPHemsley: cool, yeah we should do this, but we need to figure out a way to deal with the width/height thing

[07:21:43.0000] <manu-db>
basically, I don't think that what's in the HTML spec is implementable in a JavaScript environment, is that true?

[07:21:53.0000] <Ms2ger>
No

[07:21:56.0000] <darobin>
presumably you mean the one that was used for the current page?

[07:21:57.0000] <manu-db>
and if so, what should we say in our specs when determining the language.

[07:22:00.0000] <Ms2ger>
But you have to implement HTTP as well

[07:22:04.0000] <manu-db>
darobin: yes

[07:22:48.0000] <manu-db>
Ms2ger: what do you mean, "you have to implement HTTP as well"?

[07:23:41.0000] <annevk>
Man, scumbag language. Almost always wrong, yet keeps wasting a bunch of time with regards to how to set it declaratively and how its inheritance chain works.

[07:23:47.0000] <Ms2ger>
HTML can be implemented in any language you want, but you can't necessarily pick just one section and implement it based on the rest of the platform

[07:23:52.0000] <manu-db>
darobin, Ms2ger: Here's the actual issue - Microdata and RDFa processors written in JavaScript need to be able to get the language of the current node... if the language is set via "Content-Language", there is no way for them to get at that information... so, should the spec just say that all Microdata and RDFa implementations shouldn't pay attention to Content-Language?

[07:24:34.0000] <annevk>
manu-db: I think the theoretical answer is that such implementations would be non-conforming until that primitive is exposed.

[07:24:35.0000] <Ms2ger>
I don't see why

[07:25:26.0000] <darobin>
no no, you don't want to say that implementation should ignore Content-Language just because you don't happen to have that information right now

[07:25:29.0000] <manu-db>
annevk: the only workaround we've found is for the processor to do an XHR request for the exact same document and get the Content-Language like that, but - super kludge (and you don't know if you're making the same request the browser did)

[07:25:50.0000] <darobin>
that's one way

[07:25:51.0000] <manu-db>
annevk: Is there a plan to get at the Content-Language primitive?

[07:26:02.0000] <darobin>
manu-db: well you seem to have a use case :

[07:26:03.0000] <darobin>
:)

[07:26:38.0000] <manu-db>
darobin: This discussion is going in a direction I didn't want it to go in. :)

[07:26:48.0000] <annevk>
manu-db: there's an open bug for it

[07:27:11.0000] <annevk>
manu-db: see DOM Standard's open bugs

[07:27:18.0000] <darobin>
manu-db: can't you use XPath for that?

[07:27:28.0000] <manu-db>
annevk: ok, thanks... reading now.

[07:27:37.0000] <manu-db>
darobin: I'm not hip with the XPath - how would you do that?

[07:27:41.0000] <annevk>
manu-db: it comes up every now and then, my main problem with doing it is that language seems so theoretical

[07:28:11.0000] <GPHemsley>
/me is still wondering what to do with http://wiki.whatwg.org/wiki/AAFC_Metadata_Application_Profile

[07:28:22.0000] <manu-db>
annevk: Yeah, I have the same issue with it - don't know of a single case where this would be useful... but we have a LC comment that we need to answer in a fairly logical way.

[07:28:30.0000] <annevk>
(other than as a rendering hint to work around Han unification, but we have heuristics for that)

[07:28:47.0000] <darobin>
ah, no, you can test for a language in XPath but not get one

[07:28:50.0000] <darobin>
that's a shame

[07:28:52.0000] <annevk>
(non-standardized heuristics, someone has to fix that)

[07:29:46.0000] <Ms2ger>
darobin, don't need xpath for that either

[07:29:46.0000] <annevk>
GPHemsley: seems fine

[07:29:49.0000] <annevk>
GPHemsley: it's not spam

[07:29:51.0000] <darobin>
isn't language also used to pick the proper glyph in parts of CJK?

[07:30:05.0000] <annevk>
darobin: see my () comments above

[07:30:24.0000] <darobin>
Ms2ger: yeah, CSS does that too. I thought XPath's lang() did more

[07:31:02.0000] <darobin>
annevk: ah, duh, hadn't seen that line about Han unification

[07:31:22.0000] <GPHemsley>
annevk: But does it belong on the wiki? And is it public domain?

[07:32:26.0000] <darobin>
I guess language information could also be used for automatic translation and for spellchecking of forms/editable

[07:37:45.0000] <manu-db>
annevk, darobin, Ms2ger: Ok, so just to be clear - I'm going to respond with something to this effect: "At present, it is impossible for a JavaScript implementation to deterministically retrieve an HTML5 element's language if no language information is provided in the document, but the language was set via the Content-Language HTTP Header. These Javascript-based implementations will continue...

[07:37:45.0000] <manu-db>
...to be non-conforming in this specific case until the DOM exposes the language of an element [DOM bug #16489]. For this reason, document authors should specify the language of the document in the document itself to ensure that all HTML/RDFa implementations are capable of retrieving the language of the element." Is that response aligned with each of your thoughts on the matter?

[07:38:13.0000] <annevk>
manu-db: yeah

[07:38:41.0000] <manu-db>
annevk: ok, thanks - much appreciated. :)

[07:40:51.0000] <darobin>
manu-db: yeah that makes sense

[07:52:31.0000] <manu-db>
darobin, annevk: Outlined the use case for DOM element language property: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16489#c1

[07:53:11.0000] <darobin>
Using HTTP for metadata sucks. Film at 11.

[08:12:52.0000] <manu-db>
Anyone here working at Google w/ the Gmail+schemas folks? You may want to tell them that their HTML+Microdata markup is so broken that it will be mis-interpreted horribly when processed by a conforming Microdata implementation: https://developers.google.com/gmail/schemas/embedding-schemas-in-emails -- or is putting a <span> element with embedded <time> elements a "thing" in HTML5 now?

[08:13:16.0000] <manu-db>
(that is, putting <time> in <span> in the <head>)

[08:13:36.0000] <manu-db>
(to see the problem, scroll down halfway on the page, click the "Microdata" example tab)

[08:18:31.0000] <Ms2ger>
/me wonders about http://twitpic.com/cvmib9

[08:18:45.0000] <manu-db>
darobin: actually, just to sanity check - there are no plans on supporting arbitrary flow/phrasing content in HEAD are there?

[08:21:30.0000] <darobin>
manu-db: you mean like <head><p>blah</head>?

[08:21:57.0000] <manu-db>
darobin: I mean, specifically: <head><span><time .../></span></head>

[08:22:07.0000] <manu-db>
(like what they're doing in Gmail now)

[08:22:07.0000] <darobin>
mmmm, not that I know of, no

[08:22:20.0000] <darobin>
that would be... problematic, unless I'm missing something

[08:22:30.0000] <manu-db>
darobin: I'll tell them to stop doing that, then.

[08:22:44.0000] <manu-db>
the current algorithm will move that <span> block into body, right?

[08:23:11.0000] <darobin>
yeah

[08:23:23.0000] <darobin>
unless there's something I'm not thinking of, <head> is really restricted

[08:39:24.0000] <tantek>
manu-db - you care about emails that are "Best Views In Gmail" ?

[08:39:43.0000] <tantek>
"Best Viewed In Gmail"

[08:39:57.0000] <tantek>
clearly we need buttons for that to embed in email signatures

[08:42:05.0000] <manu-db>
tantek: I don't quite understand your question. I care that Google is asking developers to create invalid markup. There's nothing that specifically limits that usage to Gmail. It could work with any e-mail client that supports HTML content (which is most of them).

[08:43:05.0000] <manu-db>
tantek: They also claimed that their partners didn't like Microdata, which is why they adopted JSON-LD as the primary way of marking up that data.

[08:44:28.0000] <tantek>
Google is suggesting invalid markup in email? Tell me again about how often HTML email validates.

[08:46:37.0000] <manu-db>
tantek: Well in this particular case, the markup could be moved around by the HTML processing algorithm in such a way that the Microdata expresses something completely broken (like if they did <title itemtype="..."> ... <span itemprop="reservation" itemtype="..."></span></title>

[08:47:02.0000] <manu-db>
(meaning, what the developer thinks the markup means is going to be interpreted by a Microdata processor in the wrong way)

[08:48:13.0000] <manu-db>
tantek: Guidance to developers should really be - "just put it in the body"

[08:48:28.0000] <manu-db>
tantek: but they probably didnt' want to do that because they wanted the JSON-LD and Microdata to look the same.

[10:10:07.0000] <GPHemsley>
/me wonders why Ms2ger thinks the Mozilla HTML5 bug doesn't serve a purpose

[10:13:12.0000] <Ms2ger>
Do you have any?

[10:13:52.0000] <GPHemsley>
that's a personal question

[10:13:54.0000] <GPHemsley>
;)

[10:14:36.0000] <GPHemsley>
but yeah, isn't it used as a tracking bug for all the other bugs? it's a good way (in theory) to keep track of all the HTML spec-related bugs in one place

[10:15:05.0000] <GPHemsley>
particularly because it's one of the blockers for the living standards bug

[10:15:19.0000] <GPHemsley>
s/particularly because it's/it's also/

[10:15:58.0000] <Ms2ger>
There's way too many such bugs to have them all tracked that way

[10:17:46.0000] <GPHemsley>
well, this tends to be a meta bug to track meta bugs, IIUC

[11:05:45.0000] <GPHemsley>
(annevk:) (In reference to bz's WebAppSec post which I didn't get CC'd on) <object> is a hybrid element that could be any one of image, audio/video, or plugin contexts, and the spec says that.

[11:06:21.0000] <GPHemsley>
I don't think it's a nested browsing context, but I could be wrong

[11:06:49.0000] <GPHemsley>
(I'm not on the WebAppSec mailing list)

[11:08:05.0000] <GPHemsley>
oh, apparently <object> is actually an image, a nested browsing, or a plugin context

[11:08:10.0000] <GPHemsley>
spec doesn't mention audio/video

[11:09:36.0000] <GPHemsley>
but it seems the <object> definition could use some updating to tie in better with mimesniff (though admittedly mimesniff is not in the best state to be tied in with yet)

[11:10:07.0000] <GPHemsley>
/me needs to get things out of his head and into the spec

[13:04:19.0000] <Hixie_>
anyone understand https://www.w3.org/Bugs/Public/show_bug.cgi?id=21870 ?

[13:04:58.0000] <Ms2ger>
Sure

[13:05:16.0000] <Ms2ger>
Look at the "Content attributes:" part of the green box

[13:05:31.0000] <Hixie_>
yeah?

[13:05:33.0000] <Hixie_>
what about it?

[13:05:49.0000] <Ms2ger>
Last line only has the name, no description

[13:06:57.0000] <Hixie_>
under <menu> ?

[13:07:07.0000] <Ms2ger>
No, button

[13:07:19.0000] <Hixie_>
oohhhhhhh

[13:07:21.0000] <Hixie_>
thanks

[13:07:23.0000] <Ms2ger>
Np

[13:07:49.0000] <Ms2ger>
You should really start looking at the links ;)

[13:08:05.0000] <Hixie_>
i do...... i swear

[13:08:07.0000] <Hixie_>
sometimes

[13:12:09.0000] <jgraham>
Just upgraded critic on critic.hoppipolla.co.uk

[13:12:42.0000] <jgraham>
It is possible that breakage has occured; please report any issues

[13:30:41.0000] <Hixie_>
mounir: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=11937#c14

[14:31:44.0000] <GPHemsley>
Hixie_: For future reference, what's the quickest way to get your attention on something? (Choices include IRC, e-mail, bug, skywriting, etc.)

[14:32:22.0000] <Hixie_>
IRC if i'm around

[14:32:39.0000] <Hixie_>
e-mail direct to ian⊙hc (not cc'ed to a mailing list) if i'm not

[14:33:13.0000] <Hixie_>
if you need to catch me when i'm not working, g+ is a good way to get me too

[14:33:24.0000] <GPHemsley>
heh... when are you not working?

[14:33:37.0000] <Hixie_>
like last month :-)

[14:33:42.0000] <GPHemsley>
ah, ok

[14:34:12.0000] <GPHemsley>
and I can judge whether you're around on IRC by whether you're "away"?

[14:34:18.0000] <Hixie_>
no

[14:34:26.0000] <Hixie_>
i'm always /away :-(

[14:34:34.0000] <GPHemsley>
oh

[14:34:43.0000] <Hixie_>
i use it to track what people are saying in other channels

[14:34:59.0000] <GPHemsley>
how does that work?

[14:35:35.0000] <Hixie_>
i have a bunch of things that cause irssi to add stuff to the away log

[14:35:39.0000] <Hixie_>
like if anyone says "hixie"

[14:35:47.0000] <Hixie_>
and then every now and then i look at hte away log

[14:35:55.0000] <Hixie_>
but i can't do that if i'm not /away as far as i can tell

[14:36:00.0000] <GPHemsley>
I see... that seems rather hackish

[14:36:05.0000] <GPHemsley>
/me uses X-Chat

[14:36:14.0000] <Hixie_>
very hackish

[14:36:20.0000] <GPHemsley>
but anyway, since you're here now

[14:36:25.0000] <Hixie_>
anyway, you can tell if i'm on irc by pinging me and seeing if i respond

[14:36:46.0000] <GPHemsley>
what were your reservations about defining "resource" again?

[14:37:06.0000] <Hixie_>
dunno how to do it well

[14:37:41.0000] <GPHemsley>
what were the consequences of doing it poorly, again?

[14:40:43.0000] <Hixie_>
depends on how it's used

[14:41:11.0000] <Hixie_>
if you say "a resource is an apple" and somewhere else you say "browsers much support downloading resources" then you've just required that browsers support downloading physical objects

[14:46:38.0000] <GPHemsley>
Hixie_: and if I stick to the digital realm with something like "a resource is a container of data, often represented as a byte sequence, that may have one or more items of metadata associated with it"?

[14:47:35.0000] <Hixie_>
so a bucket with dictionaries in it is a resource? :-)

[14:49:19.0000] <GPHemsley>
"...a digital container of data..."?

[14:50:12.0000] <Hixie_>
so when i hold an apple in my hand? :-P

[14:50:30.0000] <GPHemsley>
/me slaps Hixie_ with a circa 2003 trout

[14:50:46.0000] <Hixie_>
:-P

[14:51:14.0000] <GPHemsley>
I will force user agents to download your hand if you don't watch out

[14:52:48.0000] <GPHemsley>
in other news, do you have any opinion on codifying these other contexts? http://wiki.whatwg.org/wiki/Contexts

[14:53:07.0000] <GPHemsley>
I want to make sniffing talk only about contexts

[14:53:17.0000] <GPHemsley>
and have each context have its own sniffing algorithm

[14:53:40.0000] <GPHemsley>
and then not have any "generic" or "general" or "default" sniffing algorithms

[14:56:18.0000] <GPHemsley>
Hixie_: ^^

[14:56:26.0000] <Hixie_>
i'm reading, i'm reading :-P

[14:56:29.0000] <Hixie_>
patience boy :-P

[14:56:54.0000] <GPHemsley>
ah, I always worry about you disappearing :P

[14:57:04.0000] <Hixie_>
a fair concern

[14:57:20.0000] <Hixie_>
i think the Contexts thing is fine assuming it doesn't affect the interface to other specs

[14:58:33.0000] <GPHemsley>
I think it may help them too

[14:58:57.0000] <GPHemsley>
but my first question is really, do you want to put them in HTML, or should I put them in mimesniff?

[14:59:31.0000] <GPHemsley>
annevk et al. might be able to tell you more about how it relates to CSP and Fetch and other things

[15:00:14.0000] <GPHemsley>
see e.g. http://lists.w3.org/Archives/Public/public-webappsec/2013Jun/0027.html

[15:02:02.0000] <GPHemsley>
basically, the idea is that you can't fetch something from an HTML page without having a context to fetch it through

[15:02:29.0000] <GPHemsley>
(I'm picturing "context" as a tunnel or a tube or a lens)

[15:03:12.0000] <GPHemsley>
same with CSS

[15:09:33.0000] <Hixie_>
GPHemsley: mimesniffm i think

[15:09:45.0000] <Hixie_>
or fetch

[15:12:33.0000] <GPHemsley>
yeah, maybe fetch

[15:12:42.0000] <GPHemsley>
but I think HTML should at least mention them

[15:13:07.0000] <GPHemsley>
because they tend to be associated with particular elements

[15:13:18.0000] <GPHemsley>
I plan to make a list of them, if no one beats me to it

[15:13:30.0000] <Hixie_>
i'd rather not do anything that is purely editorial in the near future

[15:13:43.0000] <Hixie_>
trying to deal with feedback of a more serious nature first

[15:13:48.0000] <Hixie_>
since i'm getting behind on it

[15:14:06.0000] <Hixie_>
"the perfect is the enemy of the good", and all

[15:26:11.0000] <GPHemsley>
oh, I wasn't viewing it as purely editorial, but ok

[15:28:41.0000] <Hixie_>
oh

[15:28:44.0000] <Hixie_>
what's the normative effect?

[15:36:02.0000] <GPHemsley>
it's a hook, essentially

[15:36:15.0000] <GPHemsley>
for other specs to latch on to

[15:36:34.0000] <GPHemsley>
and to make clear how to treat fetches

[15:36:52.0000] <GPHemsley>
(you can only fetch within a context)

[15:38:20.0000] <Hixie_>
i don't really see what this gains us over what we have now

[15:52:50.0000] <GPHemsley>
clarity and explicitness?

[15:53:23.0000] <Hixie_>
right, that's editorial :-)

[15:53:29.0000] <Hixie_>
i'm not denying that editorial improvements have value

[15:53:35.0000] <Hixie_>
just that right now, for me, they're not a priority

[15:53:40.0000] <GPHemsley>
alright

[15:53:50.0000] <Hixie_>
because they're always lower priority than actual normative issues, and right now i'm unable to keep up with normative issues

[15:53:53.0000] <GPHemsley>
but I'll proceed as if somebody plans to add them somewhere at some point

[15:53:55.0000] <Hixie_>
with reasonable lag

[15:54:16.0000] <Hixie_>
if you need more important stuff to work on, we have plenty of stuff that will have more impact :-)

[15:54:41.0000] <GPHemsley>
I think this is important within the realm of mimesniff

[15:54:58.0000] <GPHemsley>
though it's debatable where mimesniff itself falls on the importance scale

[15:55:48.0000] <GPHemsley>
I think the organization of mimesniff is dreadful right now

[15:56:01.0000] <GPHemsley>
so adding this context stuff will make it less dreadful

[15:56:08.0000] <GPHemsley>
but if you have other ideas, I'm all ears

[15:57:12.0000] <GPHemsley>
(like I said, I plan to have a separate sniffing algorithm for each context in that list)

[15:58:01.0000] <GPHemsley>
(the style context needs one the most, I think, of those that don't already have one)

[15:59:01.0000] <GPHemsley>
though I do agree that not many people seem to care about mimesniff

[16:01:19.0000] <Hixie_>
GPHemsley: i think mimesniff is closer to done than you do :-)

[16:01:28.0000] <GPHemsley>
perhaps

[16:01:43.0000] <Hixie_>
GPHemsley: put it this way, if you had to edit mimesniff and the entire html spec, how much would you care now? :-)

[16:01:54.0000] <GPHemsley>
oh, yeah, no, I get it :)

[16:02:17.0000] <GPHemsley>
but if you have other things for me to do, let me know

[16:02:23.0000] <GPHemsley>
I'm pondering the GIF thing

[16:02:33.0000] <GPHemsley>
but that's probably mostly done, too

[16:03:27.0000] <GPHemsley>
(I have to admit, though, that I feel like I've only just gotten a handle on mimesniff in the last few weeks)

[16:03:32.0000] <GPHemsley>
(mentally, that is)

[16:04:01.0000] <Hixie_>
there's a big list of things that need doing, see the wiki :-)

[16:04:13.0000] <Hixie_>
i can help out more with that tomorrow morning if you want

[16:04:16.0000] <Hixie_>
right now i gotta go soon

[16:04:32.0000] <GPHemsley>
alright

[16:04:42.0000] <GPHemsley>
though I think the specs todo page could use an audit itself

[16:05:05.0000] <GPHemsley>
(and I'm not sure how many of the things on that list I'm actually capable of tackling)


2013-06-07
[00:05:22.0000] <matjas>
“Like all of the WHATWG specs, it initially looks like the aftermath of a cluster bomb in a scrabble factory, but once you’ve read it for the 5th time and wiped the blood from your eyes, it’s actually pretty interesting” — http://www.html5rocks.com/en/tutorials/speed/script-loading/

[02:31:51.0000] <zcorpan>
so webkit/blink allow insertRule() for cross-origin style sheets but gecko/presto don't

[02:33:48.0000] <zcorpan>
ie10 allows it as well

[03:03:41.0000] <Ms2ger>
MikeSmit1, ping

[03:05:45.0000] <MikeSmit1>
yup

[03:06:40.0000] <Ms2ger>
Something fun about the list archives

[03:06:57.0000] <Ms2ger>
I hit [ respond to this message ] on http://lists.w3.org/Archives/Public/public-webappsec-testsuite/2013Jun/0001.html

[03:07:10.0000] <MikeSmith>
/me looks

[03:07:15.0000] <jgraham>
MikeSmith: (btw, while you are here, were you going to send Rebecca a list of tests for TestTWF Tokyo?)

[03:07:20.0000] <jgraham>
*test areas

[03:07:26.0000] <Ms2ger>
But the In reply to link at http://lists.w3.org/Archives/Public/public-test-infra/2013AprJun/0095.html managed to end up broken

[03:07:38.0000] <Ms2ger>
It links to http://www.w3.org/mid/%3C370C9BEB4DD6154FA963E2F79ADC6F2E27AEAD7F⊙Dcec%3E

[03:07:58.0000] <Ms2ger>
Where it should be http://www.w3.org/mid/370C9BEB4DD6154FA963E2F79ADC6F2E27AEAD7F⊙Dcec (without the <>)

[03:08:05.0000] <MikeSmith>
jgraham: didn't yet but if you have time, can you?

[03:08:16.0000] <MikeSmith>
I'm on my mobile

[03:08:45.0000] <jgraham>
MikeSmith: I guess I can try and do that. I don't remember what we decided though

[03:08:59.0000] <Ms2ger>
Logs are your friend :)

[03:09:06.0000] <jgraham>
Indeed :)

[03:09:17.0000] <Ms2ger>
And hallvors had some stuff too in #webapps

[03:09:34.0000] <MikeSmith>
w didn't decide -- just bounced a few ideas

[03:09:58.0000] <MikeSmith>
hallvors mentioned xhr tests

[03:10:36.0000] <Ms2ger>
(Somehow I suspect none of them will want to review the webappsec PRs)

[03:11:01.0000] <MikeSmith>
Ms2ger: no clue on that archive weirdness. I'll alert the systems team

[03:11:14.0000] <hallvors>
I sent Rebecca an E-mail and she replied.

[03:11:33.0000] <Ms2ger>
MikeSmith, ta

[03:12:13.0000] <Ms2ger>
I asked her about box-sizing on IRC; she wanted to hear what fantasai thought, but fantasai didn't want to think

[03:12:14.0000] <odinho>
WAT!

[03:12:21.0000] <hallvors>
They have a list of stuff to focus on (some of it especially related to Japanese issues, which seems like a good idea)

[03:12:32.0000] <odinho>
I wanted help with CORS tests :P -- And EventSource-fix for mozilla.

[03:12:39.0000] <Ms2ger>
hallvors, marquee? ;)

[03:12:58.0000] <jgraham>
hallvors: You already sent an XHR list?

[03:13:06.0000] <jgraham>
https://etherpad.mozilla.org/VkkW1BU54C

[03:13:44.0000] <jgraham>
Did we decide form elements?

[03:13:48.0000] <hallvors>
I just point out the list I already put in a comment on https://github.com/w3c/web-platform-tests/pull/128

[03:18:56.0000] <jgraham>
I feel like suggesting applet is too cruel

[03:25:05.0000] <jgraham>
hallvors: Do you have any recollection of whether the script scheduling tests tested XML?

[03:25:47.0000] <jgraham>
http://www.whatwg.org/specs/web-apps/current-work/multipage/the-xhtml-syntax.html#parsing-xhtml-documents "When an XML parser"

[03:27:30.0000] <Ms2ger>
You were talking cruel?

[03:27:36.0000] <jgraham>
/me is sad that those are still under old-tests

[03:27:51.0000] <jgraham>
Well it's less bad than the HTML case :)

[03:30:00.0000] <jgraham>
The amount of stuff still under old-tests/submissions/ is sadness

[03:30:55.0000] <Ms2ger>
Getting Aryeh's reflection tests merged would be nice too...

[03:33:39.0000] <Ms2ger>
Lovely: https://www.w3.org/Bugs/Public/show_bug.cgi?id=22291

[03:34:30.0000] <jgraham>
/me is glad that bz doesn't want to be a supervillan

[03:35:09.0000] <jgraham>
Also, getting people to address issues on existing pull requests/reviews is a good idea

[03:40:51.0000] <Ms2ger>
Is there any way to get a diff that doesn't cut off all the text in https://github.com/dontcallmedom/web-platform-tests/commit/1179ab58108d5fb7e0eb2ef55fe90b2401be9cb3 ?

[03:44:11.0000] <odinho>
12:37 < jgraham> Also, getting people to address issues on existing pull requests/reviews is a good idea <<--- this what I wanted with the CORS tests

[04:11:43.0000] <jgraham>
Hmm, there are some nicy easy looking reviews for anyone that knows CSP

[04:15:52.0000] <jgraham>
I wonder if we have a policy about UA-specific cruft in tests

[04:16:09.0000] <jgraham>
abarth has submitted CSP tests with X-WebKit headers in

[04:18:32.0000] <Ms2ger>
I believe the policy is "no"

[04:18:42.0000] <jgraham>
So do I

[04:18:53.0000] <jgraham>
Not sure we have it written down anywhere though

[04:19:42.0000] <jochen__>
that might just an oversight

[04:19:50.0000] <jochen__>
given that blink wants to go prefix-less nowadays

[04:30:07.0000] <hsivonen>
Are there now X-WebKit headers???

[04:30:31.0000] <hsivonen>
or just did you just mean WebKit-specific X-Foo?

[04:32:26.0000] <jgraham>
Well

[04:33:08.0000] <jgraham>
The test has Content-Security-Policy, X-Content-Security-Policy and X-WebKit-Content-Security-Policy

[04:33:24.0000] <jgraham>
Oh, sorry

[04:33:26.0000] <hsivonen>
sadness

[04:33:32.0000] <jgraham>
X-WebKit-CSP

[05:16:00.0000] <hallvors>
jgraham: sorry, didn't see question "Do you have any recollection of whether the script scheduling tests tested XML?" before

[05:16:16.0000] <hallvors>
but I'm pretty sure the answer is "no, they don't"

[05:37:05.0000] <hsivonen>
what should my schedule expactiations be for the CSS WG processing http://lists.w3.org/Archives/Public/public-css-testsuite/2012Dec/0000.html and publishing a revised version of the CSS 2.1 test suite?

[05:37:16.0000] <hsivonen>
*expectations

[05:37:43.0000] <hsivonen>
it's harmful to have outdated test suites out there

[05:41:35.0000] <Ms2ger>
TabAtkins, ^

[05:42:30.0000] <hsivonen>
some more UTF-16 uselessness: https://bugzilla.mozilla.org/show_bug.cgi?id=879753

[06:52:54.0000] <GPHemsley>
Safari is the most frustrating browser when it comes to unsupported MIME types...

[06:53:03.0000] <GPHemsley>
it just downloads everything it doesn't recognize automatically

[06:53:13.0000] <GPHemsley>
so now I have a whole downloads folder of Safari cruft

[06:53:23.0000] <GPHemsley>
all without my consent

[06:55:09.0000] <zewt>
asking for user consent seems to be a dying idea

[06:55:22.0000] <zewt>
remember when things would actually ask permission before updating? yeah i can hardly remember that myself

[07:01:37.0000] <GPHemsley>
oh cynicism

[07:16:01.0000] <zewt>
skype nagged me to update (to a version I knew had an unusable UI) over and over, then it just updated without asking

[07:18:04.0000] <GPHemsley>
ah

[07:18:28.0000] <GPHemsley>
but I'm more concerned about Safari downloading something that

[07:18:34.0000] <GPHemsley>
's potentially unsafe

[09:06:51.0000] <GPHemsley>
Hixie_: Oh, one reason that the context change is more than editorial is because it should refer directly to mimesniff

[09:07:15.0000] <GPHemsley>
http://mimesniff.spec.whatwg.org/#context-specific-sniffing

[09:07:24.0000] <GPHemsley>
(I'm fleshing these out)

[09:12:02.0000] <Hixie_>
what difference will it require in implementations?

[09:13:10.0000] <GPHemsley>
assuming the implementations are not already interoperable, it will require them to become so

[09:13:34.0000] <GPHemsley>
in terms of when/what/how to sniff in each context

[09:13:41.0000] <GPHemsley>
because the contexts do not all have the same rules

[09:13:50.0000] <GPHemsley>
(or won't, when they're actually written)

[09:13:53.0000] <Hixie_>
doesn't HTML already explicitly say which rules to use when?

[09:16:00.0000] <GPHemsley>
only for certain contexts

[09:16:33.0000] <GPHemsley>
not for others

[09:16:45.0000] <GPHemsley>
but I still concede this is still ~90% editorial

[09:17:58.0000] <Hixie_>
which doesn't it specify it for?

[09:19:24.0000] <GPHemsley>
I think browsing, image, and audio/video specified

[09:19:29.0000] <GPHemsley>
but the rest aren't, AFAIK

[09:19:39.0000] <Hixie_>
do any of the rest do any sniffing at all?

[09:20:24.0000] <GPHemsley>
perhaps not yet, but they should—these are edge cases that perhaps people haven't considered yet

[09:20:37.0000] <Hixie_>
i'm pretty sure i've considered them :-)

[09:21:01.0000] <GPHemsley>
there are a number of issues on file with Mozilla about how to sniff in the style context that I'm tackling now

[09:22:09.0000] <Hixie_>
style context?

[09:22:25.0000] <GPHemsley>
see, you have no definition ;)

[09:23:01.0000] <GPHemsley>
the "style context" is whenever a stylesheet is loaded

[09:23:11.0000] <GPHemsley>
in HTML, that's mostly <link rel=stylesheet>

[09:23:17.0000] <Hixie_>
that shouldn't sniff at all

[09:23:18.0000] <GPHemsley>
in CSS, it's @import

[09:23:43.0000] <GPHemsley>
what happens if the resource is served without a Content-Type header?

[09:23:52.0000] <Hixie_>
treat as text/css

[09:24:01.0000] <GPHemsley>
that has security implications

[09:24:39.0000] <GPHemsley>
if an untagged HTML file is treated as text/css, unexpected things can happen

[09:24:50.0000] <Hixie_>
like what?

[09:25:07.0000] <Hixie_>
you can't read the DOM unless it's same origin

[09:25:31.0000] <GPHemsley>
https://bugzilla.mozilla.org/show_bug.cgi?id=560388

[09:25:37.0000] <GPHemsley>
https://bugzilla.mozilla.org/show_bug.cgi?id=562377

[09:26:39.0000] <Hixie_>
that first one seems to apply to all "contexts", it's just about distinguishing bogus from missing

[09:27:54.0000] <Hixie_>
that second one seems to just say that i was wrong about the no-type case

[09:27:59.0000] <Hixie_>
it should be treated as bogus

[09:28:58.0000] <GPHemsley>
sorry, was trying to have two conversations at once

[09:29:02.0000] <GPHemsley>
apparently that's hard

[09:29:07.0000] <GPHemsley>
anyway

[09:29:50.0000] <GPHemsley>
the bottom line with 562377 was that the style context can't use the same sniffing rules as the browsing context

[09:30:17.0000] <GPHemsley>
err

[09:30:25.0000] <GPHemsley>
560388

[09:30:39.0000] <Hixie_>
seems like the conclusion is that it shouldn't sniff at all

[09:30:52.0000] <Hixie_>
it definitely shouldn't use the same sniffing rules as the browsing context, nobody is suggesting it should, as far as i can tell

[09:30:55.0000] <Hixie_>
certainly not the spec, right?

[09:31:04.0000] <GPHemsley>
well, that's the part I'm trying to clarify

[09:31:07.0000] <GPHemsley>
with these contexts

[09:31:18.0000] <GPHemsley>
but no, I don't think HTML says it should

[09:31:26.0000] <GPHemsley>
mimesniff used to seem that way, though

[09:31:42.0000] <GPHemsley>
which is the part I'm working on now

[09:35:11.0000] <Hixie_>
i think if mimesniff just provides algorithms, and doesn't invoke any of them itself, it's quite sufficient

[09:39:02.0000] <GPHemsley>
Hixie_: I'm not sure what you mean; what is it currently invoking (or what do you think I want it to be invoking)?

[09:39:22.0000] <Hixie_>
i'm not saying it is or will

[09:39:26.0000] <Hixie_>
was just being complete in my description

[09:39:31.0000] <GPHemsley>
ah

[09:39:35.0000] <GPHemsley>
well, yeah, then I agree

[09:40:14.0000] <Hixie_>
this context stuff seems like a very convoluted way of doing it :-)

[09:40:28.0000] <GPHemsley>
really? convoluted how? I thought it makes things clearer

[09:40:39.0000] <GPHemsley>
(and annevk seemed to like it)

[09:41:33.0000] <Hixie_>
"run sniffing algorithm #3 for resource /x/, to obtain sniffed type /y/" seems nice and trivial and doesn't involve having to define contexts

[09:41:40.0000] <GPHemsley>
if you always fetch through the lens of a context, you never have confusion as to which set of rules to follow

[09:41:49.0000] <GPHemsley>
I mean, it's just a name

[09:41:57.0000] <Hixie_>
if you always just call the sniffing algorithm directly there's no confusion either :-)

[09:42:09.0000] <Hixie_>
what is confused today?

[09:42:22.0000] <GPHemsley>
this modularizes the sniffing algorithm so that you don't have one big complex thing

[09:42:47.0000] <Hixie_>
we don't have one big complex thing today either do we?

[09:42:47.0000] <GPHemsley>
like I said, prior to the context stuff I added today, it seemed like the MIME sniffing algorithm should be used everywhere

[09:43:06.0000] <GPHemsley>
which, as written, is/was not appropriate

[09:43:14.0000] <Hixie_>
oh well i'm fine with adding non-normative text that says "don't use this unless you have a legacy compat reason to do so"

[09:43:30.0000] <Hixie_>
i kinda assumed we already had that

[09:43:48.0000] <GPHemsley>
I think a lot of this issue is bogged down by legacy terminology

[09:44:09.0000] <GPHemsley>
in that "sniffing" is a bit of a misnomer for my current vision of this spec

[09:44:33.0000] <Hixie_>
(re "anne likes it" -- anne has a habit of making these same kinds of "simplifications" that require tons of changes to html too :-P)

[09:44:58.0000] <GPHemsley>
my current vision of this spec is to describe how to determine the MIME type of a file—whether through sniffing or otherwise

[09:45:11.0000] <Hixie_>
the mime type of a file without sniffing is trivial

[09:45:15.0000] <Hixie_>
it's the value of the Content-Type header

[09:46:15.0000] <GPHemsley>
it's not always that simple

[09:46:22.0000] <GPHemsley>
but I feel like we could argue this around in circles

[09:47:57.0000] <GPHemsley>
this is mostly about terminological homogenization

[09:48:40.0000] <GPHemsley>
Hixie_: Did you see this? http://lists.w3.org/Archives/Public/public-webappsec/2013Jun/0027.html

[09:49:20.0000] <GPHemsley>
also, the "How to use a context" set of steps on the wiki page?

[09:49:27.0000] <Hixie_>
i don't object to stuff like this in general

[09:49:58.0000] <GPHemsley>
I can't tell if you're objecting to the idea, or just the cost-benefit ratio of adding it to the HTML spec :P

[09:50:03.0000] <Hixie_>
i just object to it while we have higher-priority stuff missing or broken

[09:50:06.0000] <Hixie_>
the latter

[09:50:24.0000] <Hixie_>
i'm not updating the HTML spec for this kind of stuff any time soon (like, coming year, probably)

[09:50:35.0000] <Hixie_>
i've got a ton of higher-priority stuff

[09:50:51.0000] <GPHemsley>
that's fine

[09:50:52.0000] <Hixie_>
same with anne's fetch spec, that's why he has the "legacy" algorithms

[09:51:00.0000] <Hixie_>
or as i call them, "the algorithms" :-P

[09:51:04.0000] <GPHemsley>
heh

[09:52:17.0000] <Hixie_>
btw if you want something more important to do, the editing spec is in dire need of an editor

[09:52:27.0000] <Hixie_>
since aryeh has had to move on to other things

[09:52:32.0000] <GPHemsley>
link?

[09:52:43.0000] <Ms2ger>
https://dvcs.w3.org/hg/editing

[09:52:56.0000] <Hixie_>
...ms2ger beat me to it

[09:52:59.0000] <GPHemsley>
ugh, you want me to work with the W3C? >_>

[09:53:07.0000] <Ms2ger>
It's a CG

[09:53:09.0000] <Hixie_>
it's in a cg, like html

[09:53:18.0000] <Hixie_>
if you want to merge it with the whatwg cg that's fine by me

[09:53:47.0000] <GPHemsley>
I have to admit, I've remained relatively ignorant of the bureaucracy over there

[09:54:04.0000] <Hixie_>
there's basically none for cgs

[09:54:40.0000] <Hixie_>
if you did want to work on that spec and wanted to skip all bureaucracy, you could just take it and make it a whatwg spec the same way as the mime sniffing spec

[09:54:52.0000] <Hixie_>
since it's an open license spec

[09:55:03.0000] <Hixie_>
and the old version is not maintained

[09:56:38.0000] <GPHemsley>
FFR, this was more the type of I link I was interested in: https://dvcs.w3.org/hg/editing/raw-file/tip/editing.html

[09:56:40.0000] <GPHemsley>
;)

[09:56:46.0000] <GPHemsley>
but apparently the styling is broken

[09:56:58.0000] <Hixie_>
oh i thought that's what Ms2ger gave, my bad :-)

[09:59:35.0000] <GPHemsley>
does the whatwg stylesheet prevent cross-site loading?

[09:59:50.0000] <Hixie_>
not in theory, but there might be cross-protocol blocking going on

[09:59:56.0000] <Hixie_>
whatwg is not https:

[10:00:26.0000] <GPHemsley>
ah

[10:00:43.0000] <GPHemsley>
indeed, Aurora is giving me a half shield

[10:01:03.0000] <GPHemsley>
there we go

[10:01:39.0000] <GPHemsley>
"This is an open issue. All issues other than this one are non-normative. "

[10:01:48.0000] <GPHemsley>
somewhat paradoxical

[10:04:06.0000] <GPHemsley>
oh, this would take me ages to understand...

[10:04:20.0000] <Hixie_>
that's how you know it's important :-P

[10:04:52.0000] <GPHemsley>
I've never even *used* HTML editing

[10:06:00.0000] <GPHemsley>
you'd _definitely_ have to pay me to work on this :P

[10:06:24.0000] <Hixie_>
hah

[10:09:53.0000] <Ms2ger>
That's how he sucked in Aryeh, and we know how that ended...

[10:12:19.0000] <GPHemsley>
I mean, I'm generous with my time, but I'm not *this* generous ;)

[10:12:38.0000] <Hixie_>
:-)

[10:13:16.0000] <GPHemsley>
I do have bills that I need paid

[13:14:16.0000] <GPHemsley>
It's always fun to see which sites are parsing Accept-Language incorrectly

[13:15:23.0000] <GPHemsley>
and by "fun" I mean "sad"

[13:21:17.0000] <Hixie_>
isn't it harder to find some parsing it right? :-)

[13:32:41.0000] <GPHemsley>
probably... but there's a clear distinction between parsing it wrong and not parsing it right, and my particular Accept-Language settings bring that to light

[15:47:48.0000] <Hixie_>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=21964 ??

[15:49:30.0000] <miketaylr>
O_o

[15:54:36.0000] <Hixie_>
heycam|away: ping

[15:55:44.0000] <Hixie_>
heycam|away: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=21946

[16:16:49.0000] <zewt>
stream of consciousness bugs

[16:22:51.0000] <zewt>
what the heck does "font security" even mean? are people encoding passwords as character widths in fonts? heh

[16:23:17.0000] <zewt>
seems like a bizarre pair of words

[16:30:14.0000] <Hixie_>
zewt: i guess you could get Roboto 3.0's font metrics out of Google before Google announced it, or something

[16:30:25.0000] <Hixie_>
(i've no idea if Roboto has a 3.0 or if it's even a Google-made font)

[16:37:53.0000] <GPHemsley>
/me wishes Hixie_ would clarify his commit messages a bit

[16:39:06.0000] <Hixie_>
which ones?

[16:39:27.0000] <Hixie_>
most of hte patches seems self-explanatory

[16:40:05.0000] <Hixie_>
r7941's was a mistake (s/Example/Allow/)

[16:40:13.0000] <Hixie_>
but for the editorial ones...

[16:40:18.0000] <Hixie_>
they're fixing editorial problems

[16:40:19.0000] <GPHemsley>
the patches come after the click ;)

[16:40:21.0000] <Hixie_>
what more can i say

[16:41:49.0000] <GPHemsley>
"clarification" and "match reality" are rather non-descript when all you see is the commit message

[16:42:03.0000] <GPHemsley>
just saying

[16:42:05.0000] <Hixie_>
what would you suggest instead?

[16:42:13.0000] <Hixie_>
i'm open to making it better, but i'm not sure how to

[16:42:21.0000] <Hixie_>
short of just putting the diff in the commit message...

[16:43:11.0000] <GPHemsley>
just add a few words about which small part of the humongous spec you're changing ;)

[16:43:31.0000] <GPHemsley>
keep in mind that many people (or just me?) follow along via Twitter

[16:43:41.0000] <GPHemsley>
you gotta click the link to see the patch

[16:44:12.0000] <GPHemsley>
"clarify X" or "make Y match reality" would be a major improvement

[16:44:26.0000] <Hixie_>
i don't know what section it is half the time

[16:44:38.0000] <GPHemsley>
heh

[16:44:53.0000] <Hixie_>
but i'll try to include a vague idea of what topic it might be :-)

[16:45:06.0000] <Hixie_>
at least for the non-editorial or "clarification" ones

[16:45:14.0000] <GPHemsley>
much appreciated

[16:47:42.0000] <GPHemsley>
because otherwise it turns out like this: http://imgur.com/IU2z3bz

[16:49:04.0000] <Hixie_>
yeah, well, given the kind of crap i've been fixing today, that's about right :-)

[16:52:35.0000] <GPHemsley>
:P


2013-06-08
[17:11:11.0000] <Hixie_>
seriously, the html spec subscription e-mails have this long paragraph about how to unsubscribe

[17:11:26.0000] <Hixie_>
why do people not know how to unsubscribe?

[17:11:50.0000] <zewt>
maybe because it's a long paragraph, you need to use short sentences if you want people to read them

[17:13:01.0000] <Hixie_>
why would you subscribe to this service if you didn't want to read

[17:13:49.0000] <zewt>
shrug

[17:15:17.0000] <zewt>
talking about what people actually will read, not their desires :)

[17:15:34.0000] <zewt>
if a sentence is short enough people read it whether they mean to or not

[17:58:31.0000] <MikeSmith>
testTWF starting here in Tokyo

[18:08:15.0000] <sangwhan>
Good morning Tokyo!

[23:31:04.0000] <SteveF>
MikeSmith: that's why my inbox is filling up with test related emails ;-)

[23:32:07.0000] <MikeSmith>
SteveF: yup

[23:36:19.0000] <jgraham>
Tell me about it

[23:37:05.0000] <jgraham>
I don't know how many tests you have written, but I think I got about 250 new emails

[23:41:24.0000] <MikeSmith>
jgraham: if you have time to view PRs, that'd be great

[23:41:31.0000] <MikeSmith>
for HT

[23:41:49.0000] <MikeSmith>
for https://github.com/w3c/web-platform-tests/pulls I mean

[23:41:52.0000] <jgraham>
HT?

[23:42:00.0000] <MikeSmith>
typo

[23:42:55.0000] <MikeSmith>
the room I'm in here, we have people writing tests for the HTML spec and for XHR and for WebSocket and maybe Web Messagin

[23:43:03.0000] <MikeSmith>
and some other API stuff

[23:43:09.0000] <MikeSmith>
WebGL for one

[23:43:56.0000] <MikeSmith>
anyway, e.g., https://github.com/w3c/web-platform-tests/pull/153

[23:44:08.0000] <MikeSmith>
oh but I see odinho there already

[01:11:48.0000] <sangwhan>
odinho: sup

[01:12:01.0000] <sangwhan>
odinho: more of, isn't it saturday there?

[01:14:17.0000] <jgraham>
sangwhan: It's Saturday there too :p

[01:15:00.0000] <Ms2ger>
I know it is here

[01:15:04.0000] <odinho>
True dat

[01:15:10.0000] <odinho>
I was up eeeaaaarrllyy like 7

[01:15:27.0000] <odinho>
(on a saturday, for me, late-sleeper)

[01:18:17.0000] <sangwhan>
odinho: Did you by any chance hook up your phone with the mail account that gets PRs from web-platform-test? :)

[01:19:45.0000] <odinho>
sangwhan: Yea, I have, but that was not the reason, -- Rebecca already asked if I was going to get up early to take a look :P

[01:19:58.0000] <odinho>
Sat up late for Seattle last time.

[01:22:28.0000] <sangwhan>
odinho: Is Rebecca going to pay you overtime? :P

[01:24:57.0000] <odinho>
sangwhan: Nope, rhauck is from adobe :P

[01:25:23.0000] <odinho>
sangwhan: I don't work with this anymore, so it's not like I can do it in normal work hours anyway

[01:25:37.0000] <sangwhan>
odinho: :)

[01:26:04.0000] <Ms2ger>
If you worked for Mozilla, we'd let you do this in your normal hours ;)

[03:00:01.0000] <sangwhan>
/me thinks Ms2ger should be working in HR instead

[03:07:29.0000] <odinho>
Ms2ger is the best robot evar <3

[03:39:30.0000] <Ms2ger>
<3 odinho

[04:15:14.0000] <PatomaS>
hi, i have a question about testing the microdata for an email in the google data testing tool

[04:17:12.0000] <PatomaS>
if i try to test something like this: <a href="mailto:user⊙hc" itemprop="email">patomas</a> the tool shows patomas as a property, is that correct?

[04:17:50.0000] <PatomaS>
shouldn't that be user⊙hc or even mailto:user⊙hc?

[07:42:10.0000] <GPHemsley>
this is pretty amazing/helpful/interesting/etc. : http://i.stack.imgur.com/whhD1.png


2013-06-09
[21:39:51.0000] <SimonSapin>
Hi. "Version history" at the top of the HTML spec has a link to svn.whatwg.org. Shouldn’t it be github?

[23:55:38.0000] <Ms2ger>
SimonSapin: no, the canonical vcs for the spec is svn.w.o

[15:12:25.0000] <KevinMarks>
what was that site that microsoft set up to plead with devs to not just use webkit prefixes? something with a .ie

[16:37:27.0000] <Yitro>
KevinMarks, http://www.modern.ie ?


2013-06-10
[17:28:19.0000] <MikeSmith>
hsivonen: bugzilla.validator.nu unresponsive

[17:28:32.0000] <MikeSmith>
or responding only very slowly

[17:29:18.0000] <MikeSmith>
"Remote DOM Community Group"?

[17:29:40.0000] <MikeSmith>
http://www.w3.org/community/blog/2013/06/09/proposed-group-remote-dom-community-group/

[17:29:56.0000] <MikeSmith>
[[Similarly to how the Shadow DOM paved the way for custom elements using web technologies, a “Remote DOM” could allow display of portions of the web app to be displayed on “remote” (i.e. “external”) devices, such as screens, Smart TVs, etc.

[19:16:59.0000] <MikeSmith>
help me out here

[19:17:03.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/current-work/multipage/named-character-references.html#entity-copy-legacy

[19:17:52.0000] <MikeSmith>
that means the spec requires "&copy" (without the semicolon) to be displayed as U+000A9 (the copyright symbol), right?

[19:20:42.0000] <annevk>
MikeSmith: might depend on the context

[19:20:54.0000] <MikeSmith>
k

[19:21:24.0000] <annevk>
MikeSmith: actually, testing <body title=&copy>test&copytest that seems to be what it means

[19:22:57.0000] <MikeSmith>
annevk: yeah, and in stuff like href='http://example.org/demo?id=hello&copy=1&world=fun' too

[19:23:05.0000] <MikeSmith>
anywhere actually

[19:23:12.0000] <MikeSmith>
regardless of the context, I think

[19:23:21.0000] <MikeSmith>
as far as the parser behavior goes

[19:25:18.0000] <annevk>
MikeSmith: so actually

[19:25:56.0000] <annevk>
MikeSmith: "If the character reference is being consumed as part of an attribute, and the last character matched is not a U+003B SEMICOLON character (;), and the next character is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be unconsumed, and nothing is returned."

[19:26:30.0000] <annevk>
MikeSmith: so <body title=&copys> has a title of "&copys"

[19:26:42.0000] <annevk>
and not "©s"

[19:27:06.0000] <MikeSmith>
hmm OK

[19:27:16.0000] <MikeSmith>
I missed the part about the equals sign

[19:27:33.0000] <MikeSmith>
ah yeah, "alphanumeric ASCII character" too

[19:31:08.0000] <MikeSmith>
shit now I have to scribe

[19:54:44.0000] <annevk>
did you give the person asking a shit-bow?

[20:11:41.0000] <MikeSmith>
man I didn't do a good job of scribing that

[20:48:43.0000] <annevk>
Do we have anything else besides WebSocket with regards to streaming?

[20:48:51.0000] <annevk>
Oh doh, EventSource

[20:50:52.0000] <annevk>
http://wiki.whatwg.org/wiki/Streams ...

[22:28:56.0000] <JonathanNeal>
So, <hn> elements section content by nature, correct?

[00:06:48.0000] <SteveF>
JonathanNeal: yup

[01:04:08.0000] <hsivonen>
MikeSmith: seems to work now but slowly

[01:05:49.0000] <MikeSmith>
hsivonen: yeah very slowly

[01:14:04.0000] <hsivonen>
MikeSmith: it should now be better for a little while again

[01:15:01.0000] <hsivonen>
the validator process would benefit from running on Heroku-like infrastructure

[01:15:36.0000] <hsivonen>
but I don't want the DMCA exposure of hosting it in the U.S.

[01:16:04.0000] <hsivonen>
and European companies seem to be too incompetent to come up with something like Heroku

[01:16:05.0000] <Ms2ger>
It's already hosted on the NSA servers too

[01:16:24.0000] <MikeSmith>
hsivonen: thanks I just tried again and it's better and I'll take advantage of it to update a few bugs :-)

[01:16:48.0000] <hsivonen>
Ms2ger: I don't mean in terms of NSA exposure. I mean in terms of the public U.S. legal system.

[01:18:00.0000] <Ms2ger>
(Just joking about the NSA now, because everyone will have forgotten next month)

[01:26:31.0000] <hsivonen>
If I decided to pay for a separate bugzilla server, what guide should I follow to set up bugzilla in such a way that getting security updates works?

[01:29:20.0000] <hsivonen>
oh. awesome. We don't seem to fire DOMContentLoaded for XSLT-generated docs

[01:29:37.0000] <hsivonen>
bug or feature?

[01:30:34.0000] <darobin>
I would assume that no one knows :)

[01:31:12.0000] <MikeSmith>
hsivonen: run Debian stable on the server you use for bugzilla?

[01:31:19.0000] <hsivonen>
my patch starts accidentally firing DOMFrameContentLoaded for the XSLT source docs

[01:31:28.0000] <hsivonen>
MikeSmith: do they backport patches?

[01:31:43.0000] <hsivonen>
MikeSmith: do I get an ancient Bugzilla?

[01:32:40.0000] <MikeSmith>
hsivonen: current Debian stable has version 4.2.5 I think

[01:32:46.0000] <hsivonen>
Gecko also has a bug when it comes to sizing the view port for an XSLT-generated doc in an iframe

[01:32:49.0000] <Ms2ger`>
Yay, XSLT

[01:33:07.0000] <hsivonen>
my problem: I don't forget to test XSLT

[01:33:30.0000] <Ms2ger`>
No good deed goes unpunished

[01:33:40.0000] <MikeSmith>
hsivonen: I don't know how Debian handles patches but I think stable gets regular security-patch updates

[01:33:51.0000] <darobin>
wait, you mean you've made it so that the xml-stylesheet PI fires DOMFrameContentLoaded?

[01:34:04.0000] <darobin>
somehow I find that very funny

[01:34:07.0000] <darobin>
not entirely sure why

[01:35:01.0000] <Ms2ger`>
darobin, you're French, and drunk? I dunno

[01:35:09.0000] <jgraham>
darobin: Not enough coffee? Too much coffee?

[01:35:54.0000] <darobin>
I opt for jgraham's explanation

[01:36:23.0000] <darobin>
maybe the last shreds of sanity I had has finally evaporated

[01:37:40.0000] <hsivonen>
So since we have a pre-existing bug about XSLT not filing DOMContentLoaded, I think I'll take the EME approach and declare that fixing that bug is out of scope of the fix for the bug I'm trying to fix

[01:39:25.0000] <darobin>
when would XSLT fire DCL anyway? before or after transformation? (given that new resources are likely involved)

[01:41:12.0000] <jgraham>
I would assume after

[01:41:54.0000] <jgraham>
OTOH, as we previously discussed, Gecko's XSLT suffers from trying to do things too well

[01:41:55.0000] <hsivonen>
darobin: after

[01:45:14.0000] <zcorpan>
https://github.com/Masterminds/html5-php "This project initially began with the seemingly abandoned html5lib project original source. But after some initial refactoring work, we began a new parser."

[01:46:18.0000] <zcorpan>
hsivonen: have you opened a bug yet about abandoning the xslt code path (i.e. doing the wrong thing)?

[01:47:47.0000] <jgraham>
"The Tokenizer requests data off of the scanner, parses it, clasifies it, and sends it to an EventHandler. It is a recursive descent parser."

[01:47:54.0000] <jgraham>
I don't understand

[01:48:01.0000] <hsivonen>
zcorpan: I haven't

[01:49:49.0000] <zcorpan>
hsivonen: are you going to? :-)

[01:55:28.0000] <zcorpan>
"Processor Instructions: The HTML5 spec does not allow processor instructions. We do. Since this is a server-side library, we think this is useful."

[01:55:34.0000] <hsivonen>
zcorpan: not sure. I was planning on fixing XSLT as part of the planned but always deferred XML rewrite project

[01:56:21.0000] <Ms2ger`>
Processor, eh

[01:56:40.0000] <hsivonen>
Ms2ger`: HTML5 bans your processor from running instructions

[01:57:15.0000] <jgraham>
Unless Hollywood allow it

[02:06:03.0000] <zcorpan>
MikeSmith: i think href="&copy=" is an error currently. "However, if this next character is in fact a U+003D EQUALS SIGN character (=), then this is a parse error, because some legacy user agents will misinterpret the markup in those cases."

[02:06:28.0000] <zcorpan>
http://www.whatwg.org/specs/web-apps/current-work/#tokenizing-character-references

[02:06:47.0000] <hendry>
anyone good with legalese? Just trying to write a phrase where I try explain: if you use my company's services without paying, we reserve the right to persue you for payment.

[02:07:25.0000] <MikeSmith>
zcorpan: oh

[02:08:30.0000] <zcorpan>
also, i don't have a strong opinion on the document conformance around ampersands. i have had strong opinions about how they should be parsed, though :-)

[02:09:32.0000] <zcorpan>
http://html5.org/r/7679 is the change

[02:11:18.0000] <zcorpan>
/me commented in the bug

[02:15:21.0000] <hendry>
oh crap, wrong channel

[02:21:20.0000] <marcdm>
Hello sleeping people and those that are awake. i'm seeking some answers regarding the new API for html5lib-python can anyone help?

[02:22:08.0000] <jgraham>
Sure

[02:22:26.0000] <marcdm>
thanks jgraham.

[02:22:52.0000] <marcdm>
I'm seeking to modify bleach for my own purposes, but I can't seem to understand one or 2 little things about the new API....

[02:23:13.0000] <marcdm>
1. how would I access Element.type and ...

[02:23:21.0000] <MikeSmith>
zcorpan: thanks fur the big comment

[02:24:29.0000] <jgraham>
marcdm: Which "API" do you mean? The one for the tree of elements that you get after parsing? Or something else?

[02:24:43.0000] <marcdm>
yes jgraham

[02:24:48.0000] <marcdm>
2. If I want to modify the tree, say I want to make changes to the list I get from .get_children(), which docs should I read for how i can make a new tree or modify it inplace

[02:25:00.0000] <zcorpan>
hmm, seems i messed up with the anolis .tail fix

[02:25:39.0000] <zcorpan>
  File "build/bdist.macosx-10.8-intel/egg/anolislib/processes/filter.py", line 32, in filter

[02:25:40.0000] <zcorpan>
TypeError: unsupported operand type(s) for +: 'NoneType' and 'NoneType'

[02:25:49.0000] <marcdm>
the real problem is that in bleach they do an in-place modification using a while loop through tree.childNodes

[02:25:58.0000] <jgraham>
Right, so now html5lib itself doesn't actually have any built-in tree representation. It just outputs a tree in an existing format

[02:26:26.0000] <jgraham>
Before it had this built-in "simpletree" thing, that wasn't really supposed to be production-quality

[02:26:34.0000] <marcdm>
so I'm really just at the mercy of what I can get from ElementTree

[02:26:38.0000] <jgraham>
So the new default is to use ElementTree

[02:26:45.0000] <jgraham>
Which is in the stdlib

[02:27:03.0000] <marcdm>
ah, and the bleach guys implemented their algorithm using the simpletree API

[02:27:17.0000] <jgraham>
Yes, I think they did

[02:27:38.0000] <marcdm>
uphill task. changing into 2nd gear.

[02:28:35.0000] <jgraham>
So, if I understand the situation with bleach right, they need to rework their use of html5lib to use ElementTree

[02:28:36.0000] <marcdm>
and I think the easiest thing might be to implement a fake simpletree over elementTree to provide those attributes they want

[02:28:58.0000] <jgraham>
That might be simple, but it doesn't sound like a great fix.

[02:29:11.0000] <marcdm>
totally agreed.

[02:29:31.0000] <marcdm>
I'm looking at the faulty code now, wanting to run it in Py3.2 on Wheezy

[02:29:32.0000] <jgraham>
I haven't looked closely at bleach, but I wouldn't have thought it was hard to make it work with ElementTree

[02:30:17.0000] <marcdm>
well, since I didn't quite understand how html5lib works, I wasn't quite sure what to expect from the code.

[02:32:16.0000] <jgraham>
So it looks like it's just linkify that needs to be updated?

[02:32:16.0000] <marcdm>
jgraham, just to confirm, parser.parseFragment(text) produces a regular ElementTree.Element right?

[02:32:23.0000] <marcdm>
yup.

[02:32:39.0000] <jgraham>
I think it can return a list of elements

[02:32:45.0000] <marcdm>
more specifically, linkify_nodes within linkify

[02:33:03.0000] <jgraham>
For cases like "<div>foo</div><div>bar</div>"

[02:33:14.0000] <jgraham>
But that is very much from memory

[02:33:48.0000] <marcdm>
huh?

[02:34:25.0000] <marcdm>
the tree is passed in and modified in-place... heading to the etree docs

[02:35:09.0000] <jgraham>
Oh

[02:35:17.0000] <jgraham>
Not a list, a custom element type

[02:35:29.0000] <jgraham>
In [1]: import html5lib

[02:35:29.0000] <jgraham>
In [2]: p = html5lib.HTMLParser()

[02:35:29.0000] <jgraham>
In [3]: p.parseFragment("<div>foo</div><div>bar</div>")

[02:35:29.0000] <jgraham>
Out[3]: <Element u'DOCUMENT_FRAGMENT' at 0x371c300>

[02:35:38.0000] <marcdm>
yup

[02:36:11.0000] <marcdm>
when I try to getchildren on that, which is what linkify_nodes wants to do, I get the 1st div tho

[02:36:19.0000] <marcdm>
I mean I get the divs

[02:36:50.0000] <zcorpan>
how do i sync my anolis fork?

[02:37:08.0000] <jgraham>
yeah, just doing list(p.parseFragment("<div>foo</div><div>bar</div>")) works

[02:37:21.0000] <marcdm>
(facepalm)

[02:37:41.0000] <zcorpan>
Ms2ger`: ^

[02:37:49.0000] <zcorpan>
/me switching trains

[02:38:43.0000] <Ms2ger`>
hg pull -u https://zcorpan⊙bo/ms2ger/anolis && hg push https://zcorpan⊙bo/zcorpan/anolis I guess

[02:38:56.0000] <marcdm>
try this (p.parseFragment("http://foo.co and <div>bar</div> you⊙mu")

[02:39:33.0000] <marcdm>
syntax corrections where necessary

[02:40:23.0000] <jgraham>
Yeah, that is going to be harder I guess

[02:42:27.0000] <marcdm>
tree.text gives me the text before the div, but I haven't gotten at the text after the div yet

[02:42:46.0000] <jgraham>
It is the .tail of the last element

[02:43:42.0000] <marcdm>
so I'd want t a list containing the .text of the parent, the children and the .tail of each child?

[02:44:10.0000] <marcdm>
heading to look at simpletree code

[02:44:55.0000] <marcdm>
.itertext?

[02:45:40.0000] <jgraham>
Iterates over all the text in a subtree

[02:46:00.0000] <jgraham>
Which might not be enough for you, since you also need to know what the parent element was

[02:46:33.0000] <marcdm>
well, the bleach code wraps all things in a div (I think), so we can control the parent that way

[02:47:52.0000] <jgraham>
Right, but I mean if you have <div>foo <span>bar <i>http://example.com</i></span> baz</div>, you need to know that the link should be a child of the <i>

[02:48:13.0000] <marcdm>
if I remember right, BeautifuSoup gives us some kind of "node" iterator that treats bits of text as TextNodes.... I need something like that

[02:48:35.0000] <marcdm>
yeah, I know what you mean, I realized it wasn't a complete solution

[02:56:15.0000] <zcorpan>
Ms2ger`: thanks. new pr coming up

[02:57:23.0000] <Ms2ger`>
Np

[02:58:49.0000] <zcorpan>
https://bitbucket.org/ms2ger/anolis/pull-request/9/turns-out-none-none-throws/diff

[03:00:11.0000] <Ms2ger>
zcorpan, thanks

[03:00:16.0000] <Ms2ger>
/me kicks .tail

[03:00:45.0000] <zcorpan>
yeah, seriously. it shouldn't be this hard to remove an element

[03:02:27.0000] <Ms2ger>
I kinda liked simpletree ;)

[03:07:02.0000] <marcdm>
simpletree was nice for what we're trying to do here, _read_ html. etree is awesome when you trying to write x/html

[03:22:42.0000] <marcdm>
I think I sufficiently understand etree api to reimplement the faulty parts of bleach. thanks for your help jgraham

[03:27:14.0000] <zcorpan>
hmm. --w3c-compat turns on lots of xref elements. but turning it off takes away features like [STATUS], <!--logo-->, etc. maybe we should just trim the list of xref elements for w3c mode as well

[03:31:39.0000] <Ms2ger>
--w3c-compat-substitutions?

[03:35:58.0000] <zcorpan>
ah, that seems to do what i want

[03:43:22.0000] <hsivonen>
:-( MDN says the load event is defined by DOM Level 3

[03:43:28.0000] <hsivonen>
it's a wiki, I know

[03:47:59.0000] <Ms2ger>
Yeah, they aren't terribly up to date

[03:54:53.0000] <marcdm>
I have a fairly blonde question, does html5lib-python always return {http://www.w3.org/1999/xhtml} as the namespace for html files?

[03:55:06.0000] <marcdm>
when using etree

[03:56:09.0000] <SimonSapin>
marcdm: yes, for HTML elements. For SVG elements you will get the SVG namespace, etc. This is per the spec

[03:56:47.0000] <marcdm>
what about the newer html elements like aside, section, audio and video?

[03:57:27.0000] <zcorpan>
why does anolis when not in --w3c-compat mode turn <code> into <a><code> but in --w3c-compat mode <code><a>?

[03:57:56.0000] <SimonSapin>
I think there is a list of special cases like SVG and MathML that change the namespace, but everything else defaults to the XHTML namespace.

[03:57:57.0000] <zcorpan>
the former gives blue underlines :-(

[03:58:11.0000] <zcorpan>
which isn't fixable with css afaict

[03:58:26.0000] <marcdm>
SimonSapin: thanks.

[04:18:21.0000] <hsivonen>
looking forward to UTF-16-encoded XSLT

[04:20:55.0000] <Ms2ger>
zcorpan, there's an option for that :)

[04:21:02.0000] <Ms2ger>
--w3c-compat-xref-a-placement

[04:21:22.0000] <zcorpan>
Ms2ger: yeah, i noticed. but what's the point?

[04:21:30.0000] <Ms2ger>
301 gsnedders

[04:33:36.0000] <hsivonen>
Ms2ger: what's the current thinking on exposing an interface object on the global object when speccing a new WebIDL interface?

[04:34:21.0000] <Ms2ger>
In general, just expose it

[04:35:38.0000] <hsivonen>
Ms2ger: what's the mechanism in our code that makes an interface exposed?

[04:36:30.0000] <Ms2ger>
Somewhere in classinfo, I think. There's a few ways to get exposed

[04:36:32.0000] <Ms2ger>
* webidl interface without [NoInterfaceObject]

[04:36:42.0000] <Ms2ger>
* XPIDL interface that starts with nsIDOM

[04:36:55.0000] <Ms2ger>
* XPIDL interface that starts with nsI and has classinfo for some reason

[04:37:05.0000] <hsivonen>
thanks

[04:37:24.0000] <Ms2ger>
I *think* that's all of them

[04:37:35.0000] <hsivonen>
I have been tasked with zapping interface objects that shouldn't be exposed

[04:38:36.0000] <Ms2ger>
The fun part is that a lot of the b2g stuff uses xpidl + classinfo

[04:38:56.0000] <hsivonen>
looks like most items I need to zap are XUL or B2G

[04:39:13.0000] <hsivonen>
yay B2G for moz prefix proliferation

[04:39:34.0000] <Ms2ger>
Yeah, they want to ship :/

[04:39:39.0000] <zcorpan>
presto mostly had the opposite problem, we didn't expose enough

[04:40:04.0000] <hsivonen>
Ms2ger: they could ship without prefixes...

[04:40:50.0000] <hsivonen>
I guess my next step is taking the list from http://hg.mozilla.org/mozilla-central/annotate/tip/dom/tests/mochitest/general/test_interfaces.html and checking it against Blink, WebKit, Presto and Trident

[04:43:49.0000] <Ms2ger>
Note that it doesn't actually fail if there's interfaces in there that aren't exposed

[04:44:08.0000] <Ms2ger>
Say, if you forget to remove MozBlobBuilder

[04:55:20.0000] <hsivonen>
clearly, for a DOM peer, I know quite little about the DOM

[04:55:48.0000] <Ms2ger>
You know about XSLT ;)

[04:55:51.0000] <hsivonen>
why doesn't for (var name in window) {...} not show any interface objects?

[04:56:26.0000] <hsivonen>
s/not//

[04:57:24.0000] <Ms2ger>
w(Object.getOwnPropertyDescriptor(window, "XMLHttpRequest").enumerable)

[04:57:28.0000] <Ms2ger>
log: false

[04:58:00.0000] <hsivonen>
Ms2ger: I suspected there was a concept like that

[04:58:24.0000] <hsivonen>
but of course it's useful that personalbar is enumerable, for instance

[04:58:51.0000] <Ms2ger>
These BarProps are lovely

[05:00:57.0000] <Ms2ger>
Maybe you want Object.getOwnPropertyNames(window)

[05:04:33.0000] <hsivonen>
Ms2ger: indeed, the test case lists a number of names that aren't actually exposed on window

[05:04:43.0000] <hsivonen>
in the sense that (foo in window) would be true

[05:05:20.0000] <Ms2ger>
Any others than HTMLCommandElement and MozBlobBuilder?

[05:06:47.0000] <hsivonen>
SVGStylable, SVGTransformable, MozMobileCellInfo, etc.

[05:06:50.0000] <hsivonen>
many others

[05:07:08.0000] <Ms2ger>
Mm

[05:14:43.0000] <hsivonen>
Ms2ger: awesome. there are also interfaces that aren't exposed but aren't listed in the test case

[05:14:52.0000] <hsivonen>
/me wonders what the test case is good for

[05:14:53.0000] <smaug____>
hmm

[05:15:05.0000] <smaug____>
hsivonen: exposed in which way?

[05:15:08.0000] <Ms2ger>
Hmm

[05:15:25.0000] <Ms2ger>
I guess we don't put WebIDL-only interfaces on Ci

[05:15:35.0000] <smaug____>
hsivonen: I added the test to make it less likely to expose random stuff to web

[05:15:36.0000] <hsivonen>
smaug____: listed by Object.getOwnPropertyNames(window)

[05:16:02.0000] <smaug____>
the test was added before we started to webidlfy stuff

[05:16:16.0000] <hsivonen>
smaug____: so the test only cares about nsI stuff getting accidentally exposed, it seems

[05:16:23.0000] <smaug____>
and nsIDOM

[05:16:52.0000] <smaug____>
but I'm not sure about Webidl stuff

[05:17:20.0000] <smaug____>
(nsI and nsIDOM are handled very differently in this kind of case)

[05:52:15.0000] <hsivonen>
hmm. no Object.getOwnPropertyNames() in Chrome

[05:54:01.0000] <jgraham>
Really?!

[05:55:17.0000] <hsivonen>
oh, it's uneval that's missing

[05:55:23.0000] <hsivonen>
/me thought everyone had uneval

[05:55:38.0000] <hsivonen>
do I really have to write my own array serializer?

[05:55:46.0000] <jgraham>
JSON.stringify

[05:55:52.0000] <hsivonen>
thanks

[05:55:56.0000] <Ms2ger>
.toString()?

[05:56:27.0000] <jgraham>
Well if he wants something that will parse later with eval

[05:56:39.0000] <jgraham>
... then that's probably a problem on its own

[05:56:43.0000] <Ms2ger>
Fair

[05:57:32.0000] <jgraham>
(I thought only gecko had uneval)

[05:57:40.0000] <hsivonen>
jgraham: so it seems

[05:57:58.0000] <Ms2ger>
/me had never heard of uneval

[05:57:59.0000] <hsivonen>
but how am I supposed to know that we're the abnormal ones

[05:58:17.0000] <jgraham>
Well to be fair with js, that's the common case :)

[05:59:03.0000] <Ms2ger>
The question is, is it an e4xism

[05:59:07.0000] <jgraham>
(you were the only ones with E4X and all the js 1.x stuff)

[05:59:18.0000] <jgraham>
(for various values of x)

[05:59:42.0000] <Ms2ger>
We're planning to move to 1js, though, I hear

[06:05:31.0000] <darobin>
JSON.stringify doesn't work on everything, though, obviously

[06:05:53.0000] <darobin>
in some cases IIRC you still need toSource(), but I think that's mostly for old Geckos

[08:14:30.0000] <Ms2ger>
Mm, we're implementing WAP

[08:19:42.0000] <jgraham>
But in good news, I guess my time machine works

[08:21:46.0000] <jgraham>
Ms2ger: Bug or it didn't happen

[08:21:58.0000] <Ms2ger>
https://bugzilla.mozilla.org/show_bug.cgi?id=853715

[09:16:35.0000] <sangwhan_>
Ms2ger: Does the fact that Opera has already done it make it hurt less?

[09:17:00.0000] <Ms2ger>
Opera did it first, eh

[09:17:37.0000] <sangwhan_>
Wait till you have to implement OMA DRM

[09:19:20.0000] <Ms2ger>
I don't think I want to know what that is

[09:19:27.0000] <Ms2ger>
I don't think I want to know what that is

[09:26:12.0000] <sangwhan_>
Looking at the commit, it's not _that_ bad :)

[09:43:58.0000] <KevinMarks>
thanks Yitro - I used it in http://techcrunch.com/2013/06/09/how-apples-ios-fragmentation-problems-distort-design-thinking/

[10:36:57.0000] <rafaelw>
Hixie: ping

[11:07:01.0000] <KevinMarks>
was that an Exclusions demo in Safari?

[11:43:22.0000] <Ms2ger>
zcorpan: can you look at bz's comment in https://bugzilla.mozilla.org/show_bug.cgi?id=880997 please?

[12:06:56.0000] <Hixie>
rafaelw: pong

[12:28:34.0000] <rafaelw>
Hixie: can you read my last comment on https://www.w3.org/Bugs/Public/show_bug.cgi?id=22185

[13:11:53.0000] <Hixie>
rafaelw: looking...

[13:15:00.0000] <Hixie>
rafaelw: as far as i can tell, your last comment and my last coment are orthogonal

[13:15:32.0000] <rafaelw>
Ok. can we take them one at a time?

[13:15:47.0000] <rafaelw>
Am I mis-reading the spec, or is it incorrect?

[13:17:14.0000] <Hixie>
i don't think those are mutually exclusive :-)

[13:17:29.0000] <Hixie>
i don't think there's any doubt in anyone's mind that the  jump to a code entry-point  algorithm shouldn't call the mutation observers

[13:17:37.0000] <Hixie>
(at least, not unless it's the last script)

[13:17:56.0000] <Hixie>
the question is, should it even both calling it if it's the last script, and do you really want to remove the call to mutation observes in the parser

[13:19:34.0000] <rafaelw>
So I offered a proposal of a simple way to make the current spec accurate. Did my proposal remove the call to mutation observers from the parser?

[13:20:59.0000] <Hixie>
your proposal and your suggested changes were contradictory, so i wasn't sure what you intended, hence my follow-up questions

[13:21:55.0000] <Hixie>
(i don't have an opinion about what exactly should happen)

[13:28:13.0000] <rafaelw>
Can you explain the contradiction?

[13:28:41.0000] <rafaelw>
There's a step in the text insertion mode that says to run a microtask checkpoint open reaching a </script>.

[13:29:09.0000] <rafaelw>
If my proposal changed that, it wasn't intentional.

[13:29:20.0000] <rafaelw>
hixie: ^^

[13:29:23.0000] <Hixie>
comment 18, right?

[13:30:18.0000] <Hixie>
you say "should happen at two times", but neither of the times you list is the parser, but then your suggested chnanges don't change the parser

[13:30:33.0000] <Hixie>
this isn't a criticism or anything, i was (and am) just trying to make sure i do what you actually intended

[13:30:34.0000] <rafaelw>
I see.

[13:30:39.0000] <rafaelw>
You are correc.t

[13:30:45.0000] <rafaelw>
It should be "three times".

[13:30:49.0000] <rafaelw>
I can go back and clarify that.

[13:30:54.0000] <Hixie>
here's fine :-)

[13:31:19.0000] <Hixie>
how about the other thing? are we sure we want to fire mutation observers twice per task if the task fires two scripts synchronously, rather than just once at the end of the task?

[13:31:44.0000] <rafaelw>
This was debated at length when we designed mutation observers.

[13:31:56.0000] <rafaelw>
It was intentional.

[13:31:59.0000] <Hixie>
(as opposed to the example in comment 21, which is about firing them twice within a script (as per the spec now, which is bogus, we all agree) vs once at the end of a script)

[13:32:51.0000] <rafaelw>
Take the case of a click. If there are multiple handlers, and mutation observers registered, then the observers should go after *each* event handler, so that the next event handler sees a "stable" state of the world.

[13:33:32.0000] <rafaelw>
Is this the case you are referring to?

[13:34:02.0000] <Hixie>
yeah, that's a good example of it

[13:34:52.0000] <Hixie>
btw, what's the change in your proposal regarding "global script clean-up jobs" to do with?

[13:35:39.0000] <rafaelw>
I suppose you can look at that as orthogonal.

[13:35:52.0000] <Hixie>
k

[13:35:56.0000] <rafaelw>
It looked to me like that was added out of a misunderstanding of how microtask checkpoints should work.

[13:36:10.0000] <Hixie>
global script clean-up jobs are unrelated to microtask checkpoints, iirc

[13:36:51.0000] <rafaelw>
Mutation Observers *is* a script clean-up job.

[13:37:05.0000] <rafaelw>
My point is that there are now two mechanims doing exactly the same thing.

[13:37:31.0000] <rafaelw>
You can make them be seperate, but it seems silly to me.

[13:37:34.0000] <Hixie>
you mean, they are in principle, or they are in concrete?

[13:37:45.0000] <rafaelw>
Principle.

[13:37:50.0000] <rafaelw>
And there are going to be more.

[13:38:04.0000] <rafaelw>
ECMAScript Object.observe callbacks, Promises, etc...

[13:38:28.0000] <Hixie>
the global script clean-up jobs only run at the end of a script (every script, though whether that means nested ones or not is not clear yet)

[13:38:33.0000] <rafaelw>
I was hoping that we could end up with one "period to run stuff that needs to put the world back in order" thingie.

[13:38:35.0000] <Hixie>
they don't run e.g. before scripts run in the parser

[13:38:46.0000] <Hixie>
or after non-script tasks

[13:38:58.0000] <Hixie>
(like parsing)

[13:39:57.0000] <rafaelw>
Is their any client for end-of-script cleanup jobs other than FileURLs?

[13:40:34.0000] <Hixie>
not as far as i know of, currently

[13:40:48.0000] <Hixie>
one key thing is that end-of-script cleanup jobs cannot run scripts of their own

[13:40:52.0000] <Hixie>
since their ordering isn't defined

[13:41:25.0000] <rafaelw>
So I'm confused by your message of "leave FileURL out of this" vs "How does script-clean-up fit into all of this"

[13:42:08.0000] <Hixie>
"this" in the first of those is the bug, "this" in the second is your specific proposal

[13:42:45.0000] <rafaelw>
I see. Well the I propose we simply remove the script clean up language.

[13:43:46.0000] <rafaelw>
Actually, I retract everything I said about script-clean-up.

[13:44:01.0000] <Hixie>
k :-)

[13:44:07.0000] <rafaelw>
If it only has one client and the requirements aren't clean, then I guess I don't really care about it.

[13:44:21.0000] <rafaelw>
(Although it seems odd to me to have language about it in that case)

[13:44:36.0000] <Hixie>
the requirements are clean, they're just different than microtassks

[13:44:36.0000] <rafaelw>
Ok, how about if I (on the bug):

[13:45:06.0000] <rafaelw>
1) Clarify that microtask checkpoint should be run at three times

[13:45:23.0000] <rafaelw>
2) Clarify my proposal to ignore the script clean-up.

[13:46:15.0000] <Hixie>
don't worry about it, i've already edited the spec as you were suggesting

[13:46:19.0000] <Hixie>
i'm committing the change now

[13:47:14.0000] <rafaelw>
Ok. Thank you.

[13:47:21.0000] <Hixie>
np

[13:47:28.0000] <Hixie>
(unfortunately for my credibility, the change also includes some unrelated editorial fixes to the script clean-up job stuff. but we'll ignore that.)

[13:48:26.0000] <Hixie>
at least this is an easy one. the thing about the parser's namespace-sensitivity is distressingly less so.

[13:49:12.0000] <rafaelw>
Good topic.

[13:49:36.0000] <rafaelw>
So WebKit/blink already implemented what adam proposed.

[13:50:00.0000] <rafaelw>
Aside from the conflict about what the author most likely meant,

[13:50:44.0000] <rafaelw>
One main motivation is that ambiguity like that in the parser as a source of crashers that the security folks found.

[13:50:50.0000] <Hixie>
there's cases where i don't even understand what we can do. e.g. "If the stack of open elements has a p element in button scope, then act as if an end tag with the tag name "p" had been seen." - what if there's a, <svg:p> on the stack, won't that close that instead?

[13:50:50.0000] <rafaelw>
s/as/was

[13:51:01.0000] <Hixie>
i don't understand why it caused crashes

[13:51:17.0000] <Hixie>
the spec wasn't ambiguous, it was (is) just weird in certain cases, as far as i can tell

[13:52:05.0000] <rafaelw>
The main problem is a conceptual one inside the implementation of the parser.

[13:52:34.0000] <rafaelw>
As I mentioned in the bug, when a token is encountered, it's namespace goes from abstract to concrete.

[13:53:52.0000] <rafaelw>
The parser code is written with the assumption that end tags match start tags of the same namespace.

[13:54:09.0000] <Hixie>
ah, that's definitely not a good assumption

[13:54:18.0000] <rafaelw>
You are suggesting that they should be tolerant of this, but it's just not how the code was written.

[13:54:19.0000] <Hixie>
in particular, end tags don't have a namespace

[13:54:31.0000] <Hixie>
tags in general don't have a namespace, in fact

[13:58:24.0000] <rafaelw>
I don't think that matters.

[13:58:58.0000] <rafaelw>
It just is the case that we fixed a bunch of crashers related to invalid assumptions in the parser code which generally takes the view I'm describing.

[13:59:28.0000] <rafaelw>
And based on my discussions with Mozilla re:<template> parsing, I suspect their code is similarly structured.

[14:00:24.0000] <rafaelw>
My point is that even if I agreed with your view that <foreignObject></div> should match an <svg:div>, I'd have a hard time landing that patch.

[14:04:12.0000] <Hixie>
i don't understand how you assign a namespace to a tag

[14:38:16.0000] <Hixie>
GPHemsley: (btw, if you could avoid cc'ing other lists that'd be great, because it causes all kinds of confusing thread fragmentation. e.g. i can't make heads or tails of your subthread that got cc'ed to apps-discuss.)

[14:38:44.0000] <Hixie>
GPHemsley: (though that could just be because the other guy only replied to you each time?)

[14:43:30.0000] <Hixie>
heycam|away: any feedback on https://www.w3.org/Bugs/Public/show_bug.cgi?id=22102 ?

[15:17:25.0000] <aklein>
Hixie: this might be easier to discuss if the spec were fixed in the places where it _doesn't_ use a namespace for comparison. that is, where it says "... with the same tag name as that of the token" instead of "... has a td element in whatever scope"

[15:17:48.0000] <aklein>
it's not just that the spec was "weird", it was (as I think you said) "inaccurate"

[15:21:09.0000] <aklein>
Hixie: those passages where the spec sees, e.g., a </tr> and then says to go look for a "tr element" are those places where a namespace is being "assigned", conceptually, to a tag (in the WebKit and Blink implementations anyway)

[15:22:24.0000] <Hixie>
hm, interesting

[15:22:56.0000] <Hixie>
i'm not sure that's the right fix for that though

[15:23:18.0000] <Hixie>
with the foreign content stuff, i think we maybe need to stop acting as if we saw a tag

[15:23:26.0000] <Hixie>
and just do what we think acting that way should do

[15:24:03.0000] <Hixie>
so e.g. instead of "if a <th> element is in scope, act as if you saw a </th> tag token", we should just close the <th> (popping the stack, etc) directly

[15:35:14.0000] <aklein>
I think that would allay a lot of my concerns; that'd be a new concept though, wouldn't it?

[15:42:18.0000] <Hixie>
we do it in some places, i think

[15:42:41.0000] <Hixie>
but it would involve some normative changes, yes

[15:42:46.0000] <Hixie>
i think it'd probably make it easier to understand

[15:42:58.0000] <Hixie>
which would be a win

[15:43:38.0000] <aklein>
yeah, that sort of change sounds good to me regardless of this whole conversation

[15:43:54.0000] <aklein>
just by being more direct

[15:47:33.0000] <Hixie>
filed as https://www.w3.org/Bugs/Public/show_bug.cgi?id=22322

[15:57:16.0000] <nessy>
Hixie: I'd like to discuss TextTrackCue API changes with you - want me to email WHATWG or what's your preference?

[15:57:37.0000] <zcorpan>
Hixie: do you want me to elaborate on what you should say in the html spec for https://www.w3.org/Bugs/Public/show_bug.cgi?id=15588#c11 ?

[16:00:25.0000] <GPHemsley>
Hixie: Any CCing of other lists happened as a result of a reply-all. I'm not actually on any other lists.

[16:02:05.0000] <GPHemsley>
Hixie: (So if you got multiple copies because you're on other lists, feel free to ignore anything not from the WHATWG list.)

[16:14:32.0000] <Hixie>
nessy: i'm here now if you want to talk here

[16:15:24.0000] <Hixie>
zcorpan_: i just need to use "beginning of the document" right?

[16:16:00.0000] <zcorpan_>
Hixie: well currently the html spec invokes "scroll an element into view" with "top of the document" which is bogus since that's not an element

[16:16:44.0000] <Hixie>
zcorpan_: if you have a specific wording you'd like the html spec to use, please do let me know in the bug. but i can probably work it out.

[16:16:48.0000] <GPHemsley>
FYI: http://tools.ietf.org/html/draft-ietf-appsawg-xml-mediatypes

[16:16:52.0000] <Hixie>
GPHemsley: ah

[16:17:25.0000] <Hixie>
GPHemsley: i don't get multiple copies (gmail dedupes and i filter all mail through gmail), but if there were e-mails sent to you and apps-discuss from people not on whatwg, they didn't make it to the whatwg list

[16:17:30.0000] <Hixie>
GPHemsley: (but your replies would have)

[16:17:39.0000] <zcorpan_>
Hixie: ok. i'll comment in the bug while i have it paged in :-)

[16:17:47.0000] <Hixie>
zcorpan_: thanks :-)

[16:18:39.0000] <GPHemsley>
Hixie: AFAIK, those threads were only me and Peter, and I thought he's on the WHATWG list. There was one time where he only replied to me, but I reintroduced the WHATWG list in my reply.

[16:18:49.0000] <Hixie>
k

[16:18:58.0000] <nessy>
Hixie: it's particularly about this bug: https://www.w3.org/Bugs/Public/show_bug.cgi?id=21851

[16:19:13.0000] <Hixie>
looking...

[16:19:57.0000] <nessy>
Hixie: I'm wondering if we should rename TextTrackCue to AbstractTextTrackCue, then inherit a TextTrackCue object from it that has .text in it

[16:20:01.0000] <GPHemsley>
Hixie: And it looks like my e-mails never even went through to apps-discuss because I'm not on that list.

[16:20:17.0000] <nessy>
Hixie: then WebVTTCue can inherit from that

[16:20:20.0000] <GPHemsley>
Hixie: (Nor is Peter, AFAICT.)

[16:20:44.0000] <nessy>
Hixie: then, TextTrackCue can have its constructor back, too

[16:20:48.0000] <Hixie>
nessy: that's what i suggested in comment 2

[16:21:08.0000] <Hixie>
nessy: but it still makes no sense for TextTrackCue to have a constructor in this scenario

[16:21:14.0000] <nessy>
Hixie: did you? … looking...

[16:21:17.0000] <Hixie>
GPHemsley: good times

[16:21:25.0000] <GPHemsley>
indeed

[16:22:17.0000] <nessy>
Hixie: why would a constructor not make sense?

[16:22:48.0000] <Hixie>
nessy: let's go back to first principles here for this API. stop me as soon as i say something you think is wrong.

[16:22:56.0000] <nessy>
Hixie: ok

[16:23:15.0000] <zcorpan_>
Hixie: maybe i can provide a term "scroll to the beginning of the document" which would be less boilerplate for you

[16:23:43.0000] <Hixie>
nessy: first, each format (like WebVTT, TTML, DVD bitmap subtitles, etc) has an algorithm that defines how cues are rendered to the video frame

[16:24:07.0000] <nessy>
Hixie: no, not all formats are rendered

[16:24:10.0000] <Hixie>
nessy: so for example, WebVTT has the complicated algorithm for avoiding cue overlap. DVD bitmap subtitles just render an image over the video at an x,y coordinate. etc.

[16:24:26.0000] <nessy>
Hixie: some of them are for metadata only and left to deal with by JS

[16:24:47.0000] <Hixie>
nessy: there are subtitle/caption formats that are never rendered?

[16:24:50.0000] <Hixie>
nessy: like what?

[16:25:22.0000] <nessy>
Hixie: TextTrackCue also applies to @kind=metadata cues

[16:25:39.0000] <nessy>
Hixie: that could be JSON or anything else

[16:26:04.0000] <rillian>
chapters as well

[16:26:18.0000] <Hixie>
that's orthogonal

[16:26:30.0000] <nessy>
Hixie: they would not be exposed in a TextTrackCue ???

[16:26:46.0000] <Hixie>
let's start over

[16:27:19.0000] <Hixie>
there are subtitle formats. these are formats for files that contain text cues. these formats can be separate files, or embedded in media resources. correct so far?

[16:27:22.0000] <nessy>
/me is not sure what I'm missing...

[16:27:47.0000] <nessy>
well, WebVTT and TTML are not just subtitle formats, but more generic

[16:28:02.0000] <nessy>
why are you restricting it to subtitle formats?

[16:28:03.0000] <Hixie>
s/subtitle formats/text track formats/

[16:28:15.0000] <nessy>
ah ok, agreed

[16:28:45.0000] <Hixie>
ok. each of these formats come with a set of rendering rules. these rules might not apply to any particular cue at any particular time, but each format nonetheless has a set of rules. correct so far?

[16:29:09.0000] <Hixie>
zcorpan_: yeah, that'd be awesome

[16:29:12.0000] <nessy>
no, there are only rendering rules for certain types of these files

[16:29:21.0000] <nessy>
for example only when they contain captions or subtitles

[16:29:35.0000] <nessy>
when they contain descriptions or metadata, there is no rendering

[16:29:44.0000] <nessy>
they just get exposed to JS

[16:30:02.0000] <nessy>
(well, you could say that "descriptions" have rendering - but definitely not "metadata")

[16:30:41.0000] <Hixie>
ok i see the problem.

[16:30:44.0000] <nessy>
or put in a different way: WebVTT can contain cues that contain just JSON

[16:31:06.0000] <Hixie>
you are confusing the format's properties, with the properties of a specific instance of a text track in the HTML API

[16:31:07.0000] <nessy>
that could be exposed in a TextTrackCue with .text

[16:31:41.0000] <nessy>
where? when I say "WebVTT can contain cues that contain just JSON" ?

[16:32:32.0000] <rillian>
Hixie: are you saying that if the cues don't display they need to have a separate type?

[16:32:37.0000] <Hixie>
there's no such thing as a "metadata WebVTT file" or a "chapters TTML file" or a "descriptions DVD subtitle file"

[16:32:56.0000] <Hixie>
there's a WebVTT file, and if it's imported as a kind=subtitles file, it renders

[16:33:02.0000] <Hixie>
and if it's imported as a kind=metadata file, it doesn't

[16:33:13.0000] <Hixie>
but either way, WebVTT has a set of rules that say how it would render, if it were to be rendered

[16:33:19.0000] <nessy>
ok, but it still needs to expose its content to HTML

[16:33:38.0000] <nessy>
s/HTML/JS/ (more correctely)

[16:34:18.0000] <Hixie>
ok so let's go back to what i saw saying earlier

[16:34:24.0000] <Hixie>
each format has a set of rules for how it is rendered

[16:34:30.0000] <nessy>
ok :-)

[16:34:49.0000] <Hixie>
at any one time, the cue may or may not be rendered, but the cue, if it were to be rendered, has a set of rules to follow

[16:35:10.0000] <Hixie>
these rules come from what format the cue was parsed from

[16:35:22.0000] <Hixie>
so e.g. a cue from a webvtt file uses the webvtt rules

[16:35:27.0000] <Hixie>
a cue from a ttml file uses the ttml rules

[16:35:40.0000] <Hixie>
a cue from a DVD bitmap subtitle track uses the DVD bitmap subtitle rules

[16:35:42.0000] <Hixie>
right?

[16:35:49.0000] <nessy>
yup

[16:36:09.0000] <Hixie>
each cue has an object in the DOM

[16:36:21.0000] <nessy>
so a cue that is rendered from a WebVTT file is exposed as a WebVTTCue object

[16:36:42.0000] <Hixie>
that object is also associated with some rendering tules, the same rendering rules as the cue, derived from the file from which it was parsed

[16:36:50.0000] <Hixie>
but some cues aren't parsed, they're created from JS

[16:37:02.0000] <Hixie>
those cues need to know what rules they should use if they were suddenly to be rendered

[16:37:12.0000] <Hixie>
right?

[16:37:17.0000] <nessy>
yup, following this far

[16:37:58.0000] <Hixie>
so each set of rules that the browser supports being created from JS -- TTML, WebVTT, DVD bitmaps, whatever -- needs its own constructor

[16:38:18.0000] <Hixie>
(or factory method, or argument to a factory method, or some other mechanism, but contructor is how WebVTTCue does it)

[16:38:48.0000] <Hixie>
right?

[16:38:52.0000] <nessy>
yup, I think we're all good with cues that get rendered - we have the rendering rules associated with the particular objects etc

[16:39:05.0000] <Hixie>
_all_ cues can get rendered

[16:39:16.0000] <Hixie>
they _all_ have rendering rules just in case they are rendered

[16:40:20.0000] <nessy>
right …. how can that work for cues that are part of a kind=metadata track and are not rendered? can you run me through such cues all the way, too?

[16:40:53.0000] <nessy>
I'm a JS developer and have created a track with kind=metadata

[16:40:57.0000] <nessy>
how do I add cues?

[16:41:21.0000] <Hixie>
the kind is irrelevant

[16:41:28.0000] <Hixie>
you add it the same way you would if it was kind=anythingelse

[16:42:01.0000] <nessy>
I want to add cues that contain JSON and I don't have rendering rules for them, because they are not meant to be displayed, but used by JS only

[16:42:21.0000] <Hixie>
there's no such thing as a cue that doesn't have rendering rules

[16:42:37.0000] <Hixie>
if it's a webvtt cue, it has webvtt rules. if it's a ttml cue, it has ttml rules.

[16:42:46.0000] <nessy>
assume my rendering rules are "don't display anything"

[16:43:03.0000] <nessy>
yeah, I don't think that works

[16:43:14.0000] <Hixie>
you don't get to pick the rendering rules, the rendering rules are those of the formats the browser supports

[16:43:20.0000] <Hixie>
i don't understand what is difficult about this

[16:43:32.0000] <Hixie>
it's exactly the same as a WebVTT file imported with kind=metadata

[16:44:56.0000] <nessy>
are you saying, even if I have WebVTT cues that contain JSON, they will be exposed as WebVTTCue objects?

[16:45:15.0000] <Hixie>
yes

[16:45:37.0000] <Hixie>
because at any time you could change the .kind of the TextTrack object to "subtitles" and then they'd render

[16:45:51.0000] <Hixie>
there's _nothing special_ about metadata tracks

[16:45:51.0000] <nessy>
are you further saying that, given I want to do everything in JS, I am forced to pick a cue format that provides rendering, even if I know that I will never ever want to render it (and in fact some of the content that I may have would be really really bad when rendered)?

[16:46:14.0000] <Hixie>
well you're nor "forced to pick a cue format that provides rendering", you just pick the only format browsers support, WebVTT

[16:48:06.0000] <nessy>
so, can't we introduce a cue object that has rendering rules that simply say not to render anything?

[16:48:43.0000] <Hixie>
what's the point?

[16:49:25.0000] <Hixie>
note that right now, you can really easily debug these cues by just setting kind=subtitles instead of kind=metadata

[16:49:29.0000] <nessy>
it makes for simpler objects

[16:49:43.0000] <Hixie>
it makes for more interfaces, that's not simpler

[16:49:51.0000] <zcorpan_>
Hixie: done

[16:49:54.0000] <zcorpan_>
nn

[16:50:11.0000] <rillian>
Hixie: you just explained how every cue type has associated rendering rules. Therefore metadata and chapter cues should have rendering rules saying nothing is drawn. :P

[16:50:32.0000] <Hixie>
zcorpan_: nn

[16:50:34.0000] <Hixie>
zcorpan_: thanks

[16:50:54.0000] <Hixie>
rillian: "metadata" and "chapter" are not "cue types"

[16:51:01.0000] <Hixie>
rillian: that's the whole point

[16:51:16.0000] <Hixie>
rillian: they're text track kinds which every "cue type" can be set to

[16:51:50.0000] <rillian>
hrm

[16:52:03.0000] <nessy>
ok, then maybe we can create an object that does only simple bottom middle of video plain text rendering

[16:52:14.0000] <rillian>
(I also don't understand why we're breaking the old api if no one's going to implement anything but webvtt)

[16:52:29.0000] <rillian>
nessy: TextTrackCue? :)

[16:52:31.0000] <nessy>
no overlap avoidance, no complicated rendering

[16:52:44.0000] <Hixie>
nessy: why?

[16:52:55.0000] <nessy>
rillian: Microsoft are implementing (and already support) TTML

[16:52:59.0000] <Hixie>
rillian: because apparently people _are_ implementing other formats, in some weird places

[16:53:06.0000] <Hixie>
rillian: in general i agree that that's bad, mind you

[16:53:25.0000] <Hixie>
nessy: i don't understand what problem you are trying to solve

[16:53:42.0000] <nessy>
Hixie: so we can create cues in JS that don't bear the heavy weight of WebVTT cues

[16:53:58.0000] <Hixie>
nessy: what "heavy weight"?

[16:54:05.0000] <Hixie>
nessy: WebVTT is a really light-weight format

[16:54:16.0000] <rillian>
Hixie: you added all those positioning attributes

[16:55:13.0000] <Hixie>
i think it's crazy that we're seriously debating whether to create yet another subtitling format for the web, personally

[16:55:37.0000] <Hixie>
but putting that aside, the way one would do it is the same way we have WebVTT or TTML in the web platform: just create a new spec that defines the new format.

[16:55:38.0000] <nessy>
not a file format - just a cue format

[16:55:48.0000] <nessy>
an object in HTML

[16:55:51.0000] <Hixie>
file format without a serialisation, it's still a file format

[16:55:56.0000] <Hixie>
for these purposes

[16:56:13.0000] <Hixie>
(and i bet you'd shortly be asked "can we have a serialisation")

[16:56:16.0000] <nessy>
that's why I suggested no rendering rules

[16:56:46.0000] <nessy>
no, serialisation is already possible in TTML or WebVTT or SRT or anything else that does times plain text for that matter

[16:56:49.0000] <nessy>
no need for a new file format

[16:56:58.0000] <Hixie>
all of this is already possible in WebVTT

[16:57:04.0000] <Hixie>
this literally adds nothing new

[16:57:29.0000] <zewt>
i don't understand the "heavy weight WebVTT cues" argument (you're already paying the cost of implementing WebVTT; are you suggesting WebVTT cues use a lot of memory or something?)

[16:57:35.0000] <rillian>
nessy: looking at it from the other side, what do the webvtt cue settings mean on a metadata track where the cue text is json?

[16:57:40.0000] <zewt>
what does "heavy weight" mean in this context?

[16:58:45.0000] <nessy>
instantiating a WebVTTCue object creates interfaces (vertical, snapToLines, line, position, size, align, text, getCueAsHTML() ) that are irrelevant for cues that are not rendered

[16:58:52.0000] <zewt>
so?

[16:59:10.0000] <zewt>
(putting aside whether they can be optimized out or whatever--who cares?)

[16:59:11.0000] <Hixie>
man, you should see the HTMLElement interface if you think WebVTTCue is "heavy"

[16:59:57.0000] <Hixie>
bbiab


2013-06-11
[17:00:00.0000] <zewt>
have you measured the actual impact (memory? cpu time?) that you're worried about in a production implementation, to find out if you're solving a problem that actually exists?

[17:00:32.0000] <zewt>
because instantiating an object with some unused properties sounds like a long-past problem to me

[17:00:49.0000] <nessy>
but it can lead to some really wrong rendering - e.g. a metadata cue that was interpreted with WebVTT rendering rules could be displayed as formatted text that is absolute gibberish

[17:01:28.0000] <nessy>
I'm approaching this from a mental overload / semantic meaning point of view

[17:01:42.0000] <zewt>
(the last two things you said don't seem related to me)

[17:02:22.0000] <nessy>
if I am to author JSON cues and wanted them rendered, I'd want them rendered as plain text

[17:03:19.0000] <zewt>
err, json cues would be metadata, therefore not rendered?

[17:03:43.0000] <nessy>
read up - Hixie says all cues need to be regarded as potentially rendered

[17:03:46.0000] <zewt>
(sorry, coming in late to this and may have missed some bits)

[17:04:10.0000] <zewt>
guessing "you might render a metadata cue onscreen" isn't what he meant, but I'll punt until he gets back and can speak for himself

[17:04:10.0000] <nessy>
the not-rendering of some cues is the whole point of this discussion

[17:04:51.0000] <nessy>
Hixie's point is that a kind=metadata track can be converted into a kind=subtitles track at any time and would then need to be rendered

[17:05:02.0000] <nessy>
therefore, all tracks have an associated rendering rule

[17:06:13.0000] <zewt>
don't have anything to add beyond restating that I don't think the expectation is that metadata cues should make any sense when rendered onscreen (though certainly the result should be well-defined)

[17:06:30.0000] <nessy>
I guess what I want is that tracks should never be able to change their @kind - and therefore there are tracks that are never rendered and never meant to be rendered

[17:07:27.0000] <nessy>
brb

[17:07:36.0000] <zewt>
unless a script for some reason forces a track from one kind to another I don't know why that would happen

[17:08:31.0000] <zewt>
from what I understand (and it's been a while), the point of metadata tracks is to have non-caption-like data available to scripts, which is never rendered automatically

[17:09:19.0000] <zewt>
afk

[17:13:46.0000] <TabAtkins>
heycam: Yo, any ETA on the MapLike feature?

[17:13:59.0000] <TabAtkins>
Got specs we wanna use it in, like, yesterday.  ^_^

[17:14:15.0000] <TabAtkins>
(And I keep recommending more do so - just wrote feedback on WebMIDI that they should use a MapLike.)

[17:14:22.0000] <heycam>
TabAtkins, you can just start using it before I add it, that's what Hixie usually does ;)

[17:14:29.0000] <heycam>
TabAtkins, but next week, probably

[17:14:40.0000] <TabAtkins>
Yeah, but I dunno what syntax you'll want for it!  Sketch it for me, and I'll go ahead.

[17:15:30.0000] <heycam>
TabAtkins, ok I guess it probably needs a bit of thought; it's not just like [ArrayLike].

[17:17:32.0000] <heycam>
/me will need to get to it next week, so hold tight. :)

[17:17:37.0000] <TabAtkins>
Actually, it's probably pretty similar.  Declaring an interface to be [MapLike] just means you need to define the list of key/value tuples (which automatically defines an @@iterator method), and if it's writeable, a set and delete method.  You *should* define a get() method.

[17:18:00.0000] <TabAtkins>
But anyway, I'm okay with waiting a week.  ^_^

[17:18:04.0000] <heycam>
cool

[17:19:38.0000] <TabAtkins>
It would be cool if we got assigning behavior for free; that is, if an attribute is defined to be a MapLike type, and is writeable, then assigning a Map-like to it (anything with Map on the prototype) does a .clear() on the existing map, then adds all the new key/values to it.

[17:34:02.0000] <Hixie>
(back, but laggy)

[17:34:14.0000] <Hixie>
nessy: a track wouldn't change from metadata to subtitles unless you specifically told it to

[17:34:33.0000] <Hixie>
nessy: just like you could convert a "DontRenderCue" to a "WebVTTCue"

[17:34:39.0000] <Hixie>
if we added a DontRenderCue

[17:34:49.0000] <Hixie>
so that doesn't seem like a compelling argument

[17:35:09.0000] <Hixie>
(though i'm confused about why your reason for wanting this has changed over time... you went from "it's heavy" to "it might be rendered", e.g.)

[17:35:13.0000] <reyre_>
what's the use case for adding JSON data to some kind of trakc?

[17:35:35.0000] <Hixie>
reyre_: well you might want time-aligned data, and WebVTT provides a convenient way to do that

[17:35:46.0000] <Hixie>
reyre_: e.g. for timing when to load up advertising

[17:36:59.0000] <reyre_>
Hixie: why use JSON in that case tho? WEBVTT will provide. i'm confused on how this JSON would be meant to be added. as the cue text? as metadata? or something else .. ?

[17:37:04.0000] <reyre_>
or jsut the ability to add JSON in general?

[17:37:31.0000] <TabAtkins>
reyre_: As a metadata track.  You'll get notified with the track value when the cue gets activated, so you can act on it.

[17:37:40.0000] <Hixie>
reyre_: you don't have to use json

[17:37:44.0000] <Hixie>
reyre_: you can use whatever you want

[17:37:46.0000] <Hixie>
reyre_: it's just text

[17:37:53.0000] <Hixie>
could use xml, your own format, whatever

[17:39:48.0000] <reyre_>
so nessy wants to add JSON to webvt text, without rendering, so that you can do whatever you want with it via JS when the cue is detected as active?

[17:40:04.0000] <Hixie>
you can already do all this

[17:40:07.0000] <reyre_>
yea

[17:40:22.0000] <Hixie>
what nessy wants is to invent a new format separate from WebVTT that does the same thing (and doesn't have a serialisation)

[17:41:03.0000] <reyre_>
alright, i understand now, heh, thank you

[17:41:25.0000] <Hixie>
glad you do, i still don't :-)

[17:42:46.0000] <reyre_>
well i understand the crux of the conversation ;) now, not why we need another track spec

[17:57:38.0000] <TabAtkins>
heycam: I've gone ahead and used some pretend syntax for [MapClass] in http://dev.w3.org/csswg/css-variables/#the-CSSVariablesMap-interface

[17:58:02.0000] <heycam>
TabAtkins, great!

[17:58:18.0000] <heycam>
/me notes it down

[17:59:42.0000] <TabAtkins>
heycam: The [MapClass()] attribute takes two arguments, which define the key and value types of the map tuples.  The spec author has to define set() and delete() methods if the interface is writeable.  The spec author *may* define get() and has() methods (I have to, in this case, because I have to do some argument mangling); otherwise, the argument is looked

[17:59:43.0000] <TabAtkins>
up in the map tuples and returned directly.  You get size() for free from the definition of the map tuples, and the rest of the Map methods are free from https://gist.github.com/jorendorff/5662673

[18:00:11.0000] <TabAtkins>
Oh yeah, the spec author has to define the map tuples, similar to defining the list of named properties on a getter/setter interface.

[18:00:35.0000] <TabAtkins>
The attribute, like [ArrayClass], puts Map as the interface's prototype.

[18:00:45.0000] <heycam>
TabAtkins, so actual Map.prototype?

[18:00:56.0000] <TabAtkins>
Yeah.

[18:01:08.0000] <heycam>
TabAtkins, I thought we had come to the conclusion that just having same named similar behaviour methods on the object is preferable

[18:01:10.0000] <TabAtkins>
So that "obj instanceof Map" works.

[18:01:18.0000] <TabAtkins>
heycam: Still need a reliable ducktype.

[18:01:31.0000] <TabAtkins>
The Map.prototype objects don't actually work on the object.

[18:01:33.0000] <heycam>
so how do you solve the problem that Map.prototype.blah can get around the restrictions that your specific map type wants to enforce?

[18:01:35.0000] <TabAtkins>
It's just used for typing.

[18:01:39.0000] <heycam>
oh

[18:01:40.0000] <heycam>
I see

[18:01:45.0000] <TabAtkins>
They can't, because [[MapData]] doesn't exist on the object. ^_^

[18:01:47.0000] <heycam>
and all its methods are shadowed?

[18:01:48.0000] <heycam>
right

[18:01:52.0000] <TabAtkins>
Yeah.

[18:02:16.0000] <TabAtkins>
[SetClass(valType)] works similarly.

[18:03:23.0000] <heycam>
ok

[18:03:36.0000] <heycam>
I am not sure that inheriting from Map.prototype is worth it

[18:04:03.0000] <TabAtkins>
It works with [ArrayClass], why not here?

[18:05:25.0000] <nessy>
reyre_, Hixie: I don't want to invent a new format separate from WebVTT

[18:05:41.0000] <heycam>
TabAtkins, most of the Array.prototype methods are generic, and don't require the object to be an actual array instance

[18:05:44.0000] <TabAtkins>
(I'm also not sure why [ArrayClass] prevents the interface from being extended.  That doesn't seem like a necessary restriction for [MapClass].)

[18:06:06.0000] <TabAtkins>
heycam: Yeah, it's a failure of Map/Set that that's not true of them.  Frustrating that tc39 doesn't see that.

[18:06:07.0000] <nessy>
reyre_, Hixie: I want to have an object that conveys that it is not being rendered

[18:06:44.0000] <TabAtkins>
I mean, if they just defined the additional methods on top of the core 5 (@@iterator, get, set, has, delete), it would work easily.

[18:06:45.0000] <heycam>
TabAtkins, because how do you set MyArrayClassInterface.prototype to both Array.prototype and the interface prototype object of the interface you would inherit from?

[18:06:56.0000] <nessy>
reyre_, Hixie: as I said - WebVTT, TTML and all other caption formats are already serialisations for non-rendered timed text cues

[18:07:28.0000] <TabAtkins>
heycam: Oh, is *that* what you're saying?  It sounds like it's saying you can't have "MyArraylikeSubclass extends MyArraylikeClass {...}".

[18:07:34.0000] <TabAtkins>
Which sounded silly.

[18:08:21.0000] <heycam>
TabAtkins, yeah, the other way around

[18:08:26.0000] <heycam>
TabAtkins, please file a bug if it's unclear :)

[18:08:29.0000] <TabAtkins>
Ah, I was misreading.  I actually followed the link now.

[18:08:35.0000] <nessy>
reyre_, Hixie: a cue that is not making use of any of the rendering functionality that is associated with a serialised timed text format should not have to be classified as being a representations of one such format

[18:08:38.0000] <TabAtkins>
It's quite clear if you click on "inherited interfaces".

[18:09:10.0000] <nessy>
reyre_, Hixie: in particular if that cue is authored in JS only

[18:10:21.0000] <heycam>
cool

[18:10:44.0000] <heycam>
so yeah I'll think and respond to your use of [MapClass] some time next week. thanks for the prodding. :)

[18:11:01.0000] <TabAtkins>
Cool.  I'm poking the thread right now with everything I've said here.

[18:11:06.0000] <Hixie>
nessy: if you have a WebVTT file, you're getting WebVTTCue objects out of it

[18:11:22.0000] <nessy>
Hixie: if you're authoring in JS, you don't have a WebVTT file

[18:12:08.0000] <Hixie>
nessy: i really don't understand what you're arguing

[18:13:10.0000] <Hixie>
nessy: if "WebVTT, TTML and all other caption formats are already serialisations for non-rendered timed text cues", then how can those cues not use WebVTTCue or TTMLCue or whatever?

[18:13:12.0000] <nessy>
Hixie: I create a new track using addTextTrack("metadata")

[18:13:29.0000] <nessy>
Hixie: then I want to add cues to that - why would they need to be WebVTTCue objects?

[18:13:42.0000] <Hixie>
nessy: they can be whatever format you want (that the browser supports)

[18:13:53.0000] <Hixie>
nessy: why would they _not_ be WebVTTCue objects?

[18:14:07.0000] <nessy>
Hixie: because I don't care about the WebVTT functionality

[18:14:18.0000] <nessy>
Hixie: or the TTML or whatever

[18:16:15.0000] <Hixie>
nessy: do you think that we should have a subset of Element that doesn't have the namespaceURI attribute, for people who don't care about namespaces?

[18:17:06.0000] <nessy>
Hixie: no, obviously not - but why then are we distinguishing between WebVTTCue and TextTrackCue if everything is the same anyway?

[18:17:31.0000] <Hixie>
nessy: WebVTTCue is like HTMLBodyElement, TextTrackCue is like HTMLElement

[18:17:52.0000] <Hixie>
or actually, WebVTTCue is like HTMLElement, and TextTrackCue is like Element

[18:18:03.0000] <Hixie>
actually even that's not quite right

[18:18:11.0000] <Hixie>
it's more like WebVTTCue is like Element, and TextTrackCue is like Node

[18:18:47.0000] <Hixie>
nessy: it's specifically because everything is _not_ the same

[18:18:53.0000] <Hixie>
nessy: some cues have text, some cues are images

[18:19:18.0000] <nessy>
Hixie: can cues with images end up being TextTrackCue objects?

[18:20:56.0000] <Hixie>
nessy: e.g. if a browser supports DVD's format, and exposes the bitmap image cues

[18:21:25.0000] <Hixie>
i should say, some text tracks have cues that have text, other text tracks have cues that are images

[18:21:33.0000] <Hixie>
within a single text track, all cues are the same type

[18:21:52.0000] <nessy>
Hixie: a browser would require to create a new DVDImageCue object with a specific rendering algorithm to support bitmap image cues, right?

[18:22:45.0000] <nessy>
Hixie: if we can only have cues that have a rendering algorithm associated, TextTrackCue is never used, because it doesn't have a rendering algorithm, right?

[18:23:23.0000] <Hixie>
nessy: TextTrackCue is an abstract interface that is inherited from by all the concrete cue types

[18:23:26.0000] <Hixie>
just like Node

[18:23:30.0000] <Hixie>
you never construct an actual Node

[18:24:57.0000] <nessy>
the browser internally constructs nodes and handles them - but TextTrackCue - when would it construct and handle such an object?

[18:25:27.0000] <Hixie>
the browser never constructs and handles an instance of Node

[18:25:47.0000] <Hixie>
just like a browser never constructs or handles an instance of TextTrackCue

[18:26:12.0000] <Hixie>
browsers always deal with objects that implement interfaces that inherit from Node or TextTrackCue

[18:29:07.0000] <nessy>
Hixie: ok, let me see if I follow

[18:36:15.0000] <nessy>
Hixie: when in JS and I construct a track with addTrack("metadata") assuming I am in a browser, which supports WebVTTCue, TTMLCue and DVDBitmapCue , then it doesn't matter if I use WebVTTCue or TTMLCue to create e.g. JSON cues ?

[18:37:13.0000] <nessy>
Hixie: even if that means that when I try to debug the JSON and thus turn the track from kind="metadata" to kind="subtitles" will be rendered funnily either the WebVTT way or the TTML way?

[18:37:43.0000] <Hixie>
well, it matters depending on what you want from it. for example, if you want to compatible with another browser that only does WebVTTCue, then you should probably use that.

[18:37:45.0000] <nessy>
(s/JSON/custom XML/ if you prefer)

[18:37:50.0000] <Hixie>
but beyond that, it doesn't matter, indeed

[18:38:04.0000] <Hixie>
(dinner bbiab)

[19:34:46.0000] <nessy>
Hixie: a bit of a follow-on: what's the difference between the two rendering algorithms in WebVTT http://dev.w3.org/html5/webvtt/#rendering ?

[19:36:01.0000] <nessy>
Hixie: is the first one about how we render cues when they are not overlayed on a video? or is that for how to render webvtt chapters?

[19:36:36.0000] <nessy>
Hixie: I'm just not clear if they are two different rendering algorithms to be used with <track> or what problem the first one is supposed to solve...

[20:11:59.0000] <Hixie>
nessy: first one is for when e.g. you are rendering a chapter title in the UI

[20:12:14.0000] <Hixie>
nessy: the other one is for when you are rendering cues over video

[20:14:20.0000] <nessy>
Hixie: what were your intentions for how to render chapter title in the UI - was that basically a hierarchical list in a drop-down box? Did we want to prescribe this?

[20:14:42.0000] <Hixie>
i don't expect it'd be anything clever

[20:14:44.0000] <Hixie>
just has to be defined

[20:14:54.0000] <Hixie>
so that UAs do the same thing

[20:44:48.0000] <nessy>
Hixie: so that rendering algorithm comes into effect when kind=chapters while the other one when kind={captions,subtitles} - correct?

[20:47:02.0000] <Hixie>
not necessarily, but usually, sure

[20:48:21.0000] <nessy>
Hixie: would a TTMLCue that renders chapters need to provide its pwn rendering rules, too?

[20:48:33.0000] <nessy>
s/pwn/own/

[20:51:53.0000] <Hixie>
yup

[20:56:48.0000] <nessy>
Hixie: isn't that a bit of a waste -  every text-based track format re-defining it, and could potentially lead to different chapter UIs based on which format you use?

[21:04:42.0000] <Hixie>
?

[21:04:47.0000] <Hixie>
we need to define how it works...

[21:04:50.0000] <Hixie>
how else could you do it?

[21:05:11.0000] <Hixie>
that's like saying "isn't it a waste that html and svg both have to define their DOM APIs" or something...

[21:08:36.0000] <nessy>
well, if there was a ChapterCue and it had the rendering algorithm in HTML, and tracks with kind=chapters would cause only ChapterCues to be created from a TTML or WebVTT file, then neither would need to define it

[21:09:09.0000] <Hixie>
o_O

[21:09:51.0000] <nessy>
then it would be well defined how chapters in HTML are rendered, but other platforms could render them in other ways

[21:10:08.0000] <Hixie>
i don't understand what you are proposing at all

[21:10:15.0000] <Hixie>
how do you know what cue is a chapter cue?

[21:10:28.0000] <Hixie>
how do you convert from TTML to this chapter cue format?

[21:11:28.0000] <nessy>
it's plain text, there is no conversion

[21:11:43.0000] <Hixie>
???

[21:11:51.0000] <Hixie>
TTML is XML, not plain text...

[21:12:03.0000] <nessy>
right, I mean: after the cues are extracted

[21:12:50.0000] <nessy>
a chapter in WebVTT is a cue with some plain text that is the chapter title, right?

[21:13:16.0000] <nessy>
that plain text needs no conversion - it's just a parsed out cue

[21:13:16.0000] <Hixie>
that's what this algorithm would be about defining

[21:18:00.0000] <nessy>
what I'm grappling with is: for chapters, metadata, plain descriptions and even plain subtitles, all we need is cues with plain text

[21:18:20.0000] <nessy>
and this is universal, no matter how they get into the browser

[21:18:53.0000] <nessy>
trying to make them look like they are WebVTTCue or TTMLCue or something else that they are not, is very confusing

[21:19:00.0000] <nessy>
to a JS dev

[01:45:36.0000] <zcorpan>
TabAtkins: how should i invoke "parse a rule"? the input is a stream of tokens or component values but i have a string

[01:55:26.0000] <SimonSapin>
zcorpan_: the tokenizer does that … but we should have Syntax define that its used when the input is a string, so you don’t have to.

[01:55:48.0000] <zcorpan_>
yeah

[01:55:57.0000] <zcorpan_>
i'll just invoke it with a string for now

[01:56:06.0000] <SimonSapin>
should be fine

[04:29:03.0000] <zcorpan>
i don't know if i should change http://dev.w3.org/csswg/cssom/#parse-a-css-value to say something in terms of css-syntax or not

[04:29:11.0000] <zcorpan>
TabAtkins: SimonSapin: ^

[04:36:03.0000] <hsivonen>
So fun when a bunch of tests fail when adding an extra event loop spin where the spec requires one

[04:37:59.0000] <jgraham>
hsivonen: What did you break^Wfix this time?

[04:42:12.0000] <hsivonen>
jgraham: <script defer> still

[04:42:53.0000] <hsivonen>
but even without any deferred scripts, adding an event loop spin between the readystatechange to interactive and DOMContentLoaded seems to break a bunch of tests for no obvious reason

[05:00:06.0000] <darobin>
zcorpan: do you have a bit more information to provide on https://www.w3.org/Bugs/Public/show_bug.cgi?id=21912 ? It's a tad terse

[05:02:29.0000] <zcorpan>
darobin: commented

[05:02:35.0000] <darobin>
thanks

[05:03:05.0000] <darobin>
oh, that, yes

[05:09:26.0000] <zcorpan>
TabAtkins: should i put Serializing <an+b> in cssom?

[07:11:54.0000] <zcorpan_>
annevk: how do i abort a fetch?

[08:48:53.0000] <GPHemsley>
annevk: ICYMI: "parse a MIME type" is now defined in mimesniff, so you can update Fetch's definition of a "simple header"

[08:49:38.0000] <GPHemsley>
annevk: Oh, I should have read further. I guess we'll have to discuss.

[08:50:48.0000] <Hixie>
heh

[08:54:14.0000] <GPHemsley>
What is the opposite of "parse"? "construct"? "assemble"?

[08:54:19.0000] <Hixie>
serialise

[08:54:32.0000] <GPHemsley>
en-US, please :P

[08:54:39.0000] <Hixie>
adapt as desired :-)

[08:55:17.0000] <GPHemsley>
so what's the difference between "parse" and "deserialize"?

[08:55:26.0000] <Hixie>
nothing

[08:55:29.0000] <GPHemsley>
ah

[08:55:43.0000] <Hixie>
well

[08:55:52.0000] <GPHemsley>
I was gonna suggest that "parse" is a jump-in point for a (de)serialize loop

[08:56:02.0000] <Hixie>
"deserialize" tends to imply that the data is expected to have been generated by the same, or closely related, code

[08:56:26.0000] <Hixie>
whereas "parse" tends to imply, if anything, that the data was generated by a human, or some unrelated, less trusted code

[08:56:51.0000] <GPHemsley>
ah, so I was pretty close, then

[08:57:14.0000] <GPHemsley>
effectively, (de)serialize would follow an ABNF, while "parse" likely wouldn't

[08:57:27.0000] <Hixie>
no, it's more about where the data came from

[08:57:54.0000] <Hixie>
e.g. you parse HTML or JSON, but you deserialise a save file in a game

[08:58:09.0000] <GPHemsley>
hmm

[08:58:10.0000] <Hixie>
but really they mean the same thing, that distinction is a bit rarefied imho

[08:58:21.0000] <GPHemsley>
effectively, (de)serialize would follow an ABNF, while "parse" likely wouldn't

[08:58:21.0000] <Hixie>
no, it's more about where the data came from

[08:58:22.0000] <Hixie>
e.g. you parse HTML or JSON, but you deserialise a save file in a game

[08:58:22.0000] <GPHemsley>
hmm

[08:58:22.0000] <Hixie>
but really they mean the same thing, that distinction is a bit rarefied imho

[08:58:24.0000] <GPHemsley>
presumably deserialize is a subset of parse

[08:58:30.0000] <GPHemsley>
in terms of accepted input

[08:59:02.0000] <Hixie>
i would recommend always using "parse" :-)

[08:59:18.0000] <GPHemsley>
naturally :)

[08:59:26.0000] <jgraham>
JSON.parse(JSON.serialize(some_object)) <- deserialize; JSON.parse('[{some:"human"}, "input"]' <- parse

[08:59:34.0000] <jgraham>
In hixie's vernacular

[08:59:39.0000] <GPHemsley>
right

[08:59:43.0000] <Hixie>
yeah, something like that

[08:59:45.0000] <Ms2ger>
)

[08:59:50.0000] <GPHemsley>
:)

[08:59:56.0000] <Hixie>
oh no, now we have two!

[09:00:02.0000] <jgraham>
In my opinion, deserialize is a silly word :)

[09:00:07.0000] <Hixie>
yeah, mine too

[09:00:17.0000] <jgraham>
Almost as bad as uneval

[09:00:30.0000] <GPHemsley>
for my purposes, "parse" is my (the WHATWG's) job, "deserialize" is the IETF's job

[09:00:44.0000] <jgraham>
(I kind of expect uneval(4) === 2+2)

[09:01:04.0000] <Hixie>
uneval(sendEmail()) => e-mail is no longer sent? :-)

[09:01:20.0000] <GPHemsley>
/me walks away from the edge of the rabbit hole

[09:06:59.0000] <Ms2ger>
/me pushes GPHemsley back in

[09:08:30.0000] <jgraham>
GPHemsley: I recommend avoiding the honey

[09:41:21.0000] <Ms2ger>
"Reopening the casing issue"

[09:41:32.0000] <Hixie>
which one is that?

[09:41:33.0000] <Ms2ger>
Yeah, like I didn't get enough email

[09:41:39.0000] <Ms2ger>
css-variables

[09:41:51.0000] <Hixie>
oh dear

[10:08:28.0000] <gsnedders>
/me wonders whether it's worth fighting to get more trees the parser can create to have obvious serializations

[10:14:07.0000] <Ms2ger>
"Steven Pemberton, Chair of the Forms Working Group, gives a talk..."

[10:14:11.0000] <Ms2ger>
Want to guess a date?

[11:09:53.0000] <GPHemsley>
<3 "Are you sure you want to reload this page?"

[11:15:15.0000] <GPHemsley>
which is better? "the U+XXXX FOOBAR character" or "the character U+XXX FOOBAR"?

[11:15:16.0000] <GPHemsley>
which is better? "the U+XXXX FOOBAR character" or "the character U+XXX FOOBAR"?

[11:15:35.0000] <GPHemsley>
does context matter?

[11:19:15.0000] <Hixie>
i prefer the U+0073 LATIN SMALL LETTER S character

[11:19:26.0000] <Hixie>
and to make it easy to be consistent, that's the format that http://software.hixie.ch/utilities/cgi/unicode-decoder/character-identifier?characters=s outputs

[11:19:45.0000] <Hixie>
(that script is broken for non-ascii characters)

[11:20:03.0000] <jsbell>
hee hee

[11:20:32.0000] <Hixie>
(and for punctuation, i prefer this, also used by that script: U+002E FULL STOP character (.) )

[11:24:13.0000] <GPHemsley>
ah, very nice

[11:33:24.0000] <GPHemsley>
Feedback welcome: http://mimesniff.spec.whatwg.org/#serialize-a-mime-type

[11:36:54.0000] <matjas>
Hixie, GPHemsley: zcorpan made a similar tool that is useful when writing specs: http://simon.html5.org/tools/js/unicodeize/

[12:45:29.0000] <Hixie>
matjas: nice

[12:45:55.0000] <matjas>
annevk (if you’re reading the logs): for https://github.com/annevk/url, e.g. if you ever need to turn http://url.spec.whatwg.org/#url-code-points into a JavaScript-compatible regular expression, you may want to use http://mths.be/regenerate

[12:47:10.0000] <GPHemsley>
matjas, zcorpan: Do you know what format that's using? (Could it be changed to the one Hixie and I discussed earlier?)

[12:47:26.0000] <GPHemsley>
or add some toggles or something

[12:47:41.0000] <matjas>
GPHemsley: example output is used here http://javascript.spec.whatwg.org/#escapeattributevalue

[12:47:54.0000] <Hixie>
it's just a string in quotes followed by the same characters as unicode codepoints without names, in parenthesese

[12:48:00.0000] <matjas>
GPHemsley: IIRC zcorpan uses the same format in his specs too

[12:48:12.0000] <GPHemsley>
ah, hmm

[12:48:17.0000] <Hixie>
so it's more for strings than characters

[12:48:21.0000] <Hixie>
i use a similar format sometimes

[12:48:32.0000] <GPHemsley>
yeah, I suppose

[12:48:36.0000] <Hixie>
though i tend to give the character names as well

[12:48:45.0000] <Hixie>
e.g.: the string "</" (U+003C LESS-THAN SIGN, U+002F SOLIDUS)

[12:49:03.0000] <GPHemsley>
actually, 'Let escaped be value with each U+0022 QUOTATION MARK character replaced with the string “&quot;” (U+0026 U+0071 U+0075 U+006F U+0074 U+003B).' is a good example of both used together

[12:49:19.0000] <GPHemsley>
although I see that uses fancy quotes

[12:52:29.0000] <Hixie>
heycam|away: yt?

[12:59:58.0000] <matjas>
annevk: e.g. https://gist.github.com/mathiasbynens/5760113

[13:00:29.0000] <matjas>
GPHemsley: any reason not to use fancy quotes?

[13:00:46.0000] <GPHemsley>
matjas: Just that most of us don't.

[15:12:38.0000] <Hixie>
man, that bug didn't stay closed more than 10 minutes

[15:24:24.0000] <zcorpan>
what bug?

[15:32:53.0000] <Hixie>
the "incumbent script" one


2013-06-12
[17:05:17.0000] <Hixie>
fantastic

[17:05:34.0000] <Hixie>
for china, gecko uses GB18030, chrome uses GBK, and windows uses windows-936

[17:05:44.0000] <Hixie>
note that windows-936 isn't even in encoding.spec.whatwg.org

[17:06:15.0000] <Hixie>
and wikipedia says of it, "Originally it was identical to GB 2312, and expanded to cover most part of GBK with the release of Windows 95; now superseded by Code page 54936 (GB 18030)."

[17:07:07.0000] <Hixie>
"GB18030 also maintains compatibility with Windows Codepage 936, sometimes known as GBK, which is Microsoft's extended version of GB2312, with the exception of the euro sign which is given a single byte code of 0x80 in Microsoft's later versions of GBK and a two byte code of A2 E3 in GB18030"

[17:07:12.0000] <Hixie>
fricking encodings

[17:10:39.0000] <Hixie>
i love it. gecko, chrome, and Windows all use different names for shift_jis.

[17:16:18.0000] <Hixie>
only gecko has the locale 'ku'

[17:16:25.0000] <zewt>
Hixie: "and windows" do you mean IE?

[17:16:31.0000] <Hixie>
i did a google search for [locale ku] and all that comes up is firefox packages

[17:16:46.0000] <Hixie>
zewt: i mean vista default code pages - http://msdn.microsoft.com/en-us/goglobal/bb896001

[17:17:06.0000] <Hixie>
(ku is kurdish, it seems)

[17:43:13.0000] <GPHemsley>
/me wonders what the context is

[18:26:48.0000] <GPHemsley>
serialize( type, subtype, parameters )

[18:26:55.0000] <GPHemsley>
" The MIME type portion of a parsable MIME type is the result of serializing the type and subtype that result from parsing the parsable MIME type and null parameters. "

[18:27:37.0000] <GPHemsley>
Does that make sense? It's supposed to mean: serialize( type, subtype, null )

[18:27:59.0000] <GPHemsley>
For reference: " A parsed MIME type is the result of parsing a parsable MIME type. A parsed MIME type is made up of a type, a subtype, and a dictionary of parameters. "

[18:40:01.0000] <GPHemsley>
"A parsable MIME type is a MIME type for which the parse a MIME type algorithm does not return undefined. Every parsable MIME type has a corresponding parsed MIME type, which is the result of parsing the parsable MIME type. A parsed MIME type is made up of a type, a subtype, and a dictionary of parameters. "

[18:40:09.0000] <GPHemsley>
"The MIME type portion of a parsable MIME type is the result of serializing the type and subtype of its parsed MIME type with null parameters. "

[18:44:33.0000] <GPHemsley>
tell me github is down again

[18:45:07.0000] <GPHemsley>
" 1:45 UTC Major service outage. "

[18:45:12.0000] <GPHemsley>
argh

[19:07:11.0000] <GPHemsley>
Hixie: If you could bump the wiki server to PHP 5.3.2 or higher (preferably 5.4.x), I could update the wiki to the latest MediaWiki software. (With our current version of PHP, I'm restricted to the 1.19.x line we're currently on.)

[19:07:44.0000] <Hixie>
let me look

[19:08:55.0000] <Hixie>
odd, the only options i get are labeled "old, not recommended"

[19:09:17.0000] <GPHemsley>
hmm

[19:10:30.0000] <Hixie>
wtf

[19:10:40.0000] <GPHemsley>
that's very strange

[19:11:31.0000] <GPHemsley>
well, no rush

[19:11:48.0000] <GPHemsley>
I just realized recently I hadn't been keeping the wiki software up to date

[19:12:29.0000] <Hixie>
looks like the machine doesn't have a later php, let me see if i can fix that...

[19:13:08.0000] <Hixie>
no idea. let me send a support request.

[19:14:05.0000] <GPHemsley>
k

[00:01:40.0000] <matjas>
annevk: see logs starting here http://krijnhoetmer.nl/irc-logs/whatwg/20130611#l-936 (if you haven’t already)

[00:02:16.0000] <matjas>
annevk: also, any news from DreamHost yet (without me CC’ed, perhaps)?

[00:02:52.0000] <annevk>
matjas: I thought they reactivated the account. The main problem was you compiling Node.js which they don't allow

[00:03:30.0000] <annevk>
matjas: search for "support⊙dc" in your spam maybe? Email went out June 6

[00:03:53.0000] <matjas>
annevk: ah, that explains it. thanks!

[00:17:23.0000] <annevk>
I should probably read the logs... Been somewhat busy last couple of days.

[00:52:13.0000] <nessy>
annevk: nice effort in the captions discussion, btw!

[01:03:02.0000] <jgraham>
Can I be grumpy for a moment, and mention that the presentation of this whole "Extend the Web Forward" thing really distracts from the useful technical discussion? Presenting a point of view as a "manifesto" prominently featuring a list of endorsments comes across as a little self-aggrandising and amounts to a form of argument by authority. Also, asking people to tweet some hashtag suggests an intention to devolve technical discussions to popularity

[01:04:02.0000] <jgraham>
Note that I'm not complaining about (or commenting on) the technical aspects; only the presentation, which in my eyes leaves good people looking worse than they deserve.

[01:06:11.0000] <annevk>
nessy: thanks

[01:06:34.0000] <annevk>
nessy: mostly tried to relay the concerns from rillian et al

[01:07:00.0000] <annevk>
kinda sounds like it'll be okay either way

[01:11:48.0000] <annevk>
jgraham: Are you talking about the document itself or the blog posts around it?

[01:13:04.0000] <jgraham>
annevk: To a certain extent both. Although I'm sure I haven't seen all the blog posts

[01:15:10.0000] <annevk>
jgraham: having a new set of principles to rally around is kind of a hard concept to communicate

[01:15:33.0000] <annevk>
jgraham: see e.g. the HTML design principles for what happened last time

[01:15:54.0000] <annevk>
jgraham: 1JS didn't go smoothly either I believe, but I'm not really familiar with that discussion

[01:16:20.0000] <jgraham>
The HTML design principles worked extremely well

[01:16:50.0000] <annevk>
jgraham: yes, but getting the people on board who were not already on board were extremely skeptical of them is what I mean

[01:17:13.0000] <foolip>
annevk, nessy, which discussion is that?

[01:17:15.0000] <annevk>
jgraham: there was quite some resistance to "this is how it is"

[01:17:43.0000] <annevk>
foolip: [redacted]

[01:18:14.0000] <jgraham>
annevk: I think this approach is even worse for people who don't buy into the philosophy

[01:18:53.0000] <jgraham>
It's practically self-identifying a clique

[01:20:22.0000] <hsivonen>
Are there some AC meeting minutes that I get to read somewhere?

[01:20:53.0000] <annevk>
hsivonen: https://lists.w3.org/Archives/Member/w3c-ac-forum/2013AprJun/0430.html

[01:21:31.0000] <annevk>
jgraham: you mean with people writing their name at the end of it?

[01:21:44.0000] <hsivonen>
annevk: thanks

[01:25:06.0000] <annevk>
jgraham: might be easier to understand your feedback if you got more concrete, either here or in private

[01:32:28.0000] <jgraham>
annevk: With the list of names, the fact that there wasn't really any public discussion, etc. At least with the HTML design principles we could point to the fact that they were extracted from what we were doing anyway, and were formalised in public.

[01:35:01.0000] <annevk>
jgraham: so this similarly follows from public activity: web components, navigation controller, and promises

[01:35:27.0000] <annevk>
jgraham: it was written down as some higher level set of principles to get more people on board

[01:35:38.0000] <annevk>
jgraham: and as an explanation of what is happening

[01:39:54.0000] <jgraham>
Right, the specs are public (although suggesting NavigationController has been designed in public is somewhat laughable; a high bandwidth F2F makes sense, but locking it up in a private repo for months afterwards is inexcusable), but there has been no public discussion about whether the high level principles make sense. They have just been presented as a fait accompli. And, to circle back to the original point, that presentation has a strong element

[01:58:05.0000] <SteveF>
interesting discussion in the AC minutes, ashame its memeber only

[01:58:10.0000] <hsivonen>
Quite [redacted] that [redacted] is [redacted] in the AC meeting.

[01:59:16.0000] <Ms2ger>
I'm quite [redacted] that you feel that way

[01:59:26.0000] <annevk>
[redacted]

[01:59:54.0000] <Ms2ger>
[DRMd]

[02:01:03.0000] <annevk>
jgraham: I basically agree with that

[02:01:50.0000] <annevk>
jgraham: slightlyoff thinks brainstorming in public before the details are done might get you dragged down somehow, but that's certainly not my experience

[02:02:07.0000] <annevk>
jgraham: I recommend raising this somewhere

[02:38:23.0000] <hsivonen>
annevk++ for the AC meeting.

[03:03:13.0000] <nessy>
annevk: nothing new really, but you are right - I don't expect people that want to continue working on WebVTT to join the TTWG because WebVTT there will only be taken though to rec - the real development in my eyes continues in the TTCG

[03:06:31.0000] <nessy>
foolip: just a discussion of the new proposed charter for the TTWG in the AC meeting - I think it's ok to mention that a discussion took place

[03:07:16.0000] <annevk>
nessy: btw, you're an AC rep these days?

[03:11:26.0000] <matjas>
annevk: fyi, dreamhost seems to have unblocked my account now. thanks for the help!

[03:12:27.0000] <nessy>
annevk: yes, my new employer made me their AC rep - really interesting new role!

[03:14:12.0000] <darobin>
AC rep is the best thing to do in W3C

[03:14:31.0000] <Ms2ger>
/me read "<annevk> yes, my new employer made me their AC rep - really interesting new role!"

[03:14:37.0000] <Ms2ger>
That was rather surprising

[03:14:40.0000] <darobin>
whenever you're pissed off, in a bad mood, or whatever, you can just post a big grumpy rant on ac-forum

[03:14:45.0000] <darobin>
it's rather liberating

[03:14:57.0000] <darobin>
even better if drunk

[03:15:12.0000] <hsivonen>
darobin: with the implication that your rant is backed by some $$$.

[03:15:32.0000] <Ms2ger>
That's the main difference with Bj�rn / www-archive, I guess

[03:15:35.0000] <darobin>
hsivonen: better, you're advising, so it has to be constructive

[03:16:39.0000] <darobin>
you have options, too, it doesn't have to be about the team; it can be about AB reps, who are elected by you and therefore take everything politely :)

[03:16:57.0000] <nessy>
darobin: I just stand on the sidelines and shake my head on most of those discussions

[03:17:04.0000] <darobin>
nessy: :)

[03:17:08.0000] <darobin>
you're too kind

[05:33:52.0000] <TabAtkins>
zcorpan: Added text to the parser that allows the algos to be invoked directly on strings.

[05:34:16.0000] <zcorpan>
TabAtkins: thanks

[05:34:47.0000] <TabAtkins>
For "parse a CSS value", it looks like you've already got a token stream, and are just matching it against the grammar, right?  If so, Syntax doesn't need to do anything further.

[05:34:59.0000] <TabAtkins>
If you want a token stream to match against the grammar, invoke "parse a list of component values" first.

[05:35:45.0000] <TabAtkins>
Go ahead and put the <an+b> serialization rules in CSSOM, yeah.

[05:38:53.0000] <zcorpan>
TabAtkins: "parse a CSS value" is invoked with a string

[05:39:10.0000] <zcorpan>
by http://dev.w3.org/csswg/cssom/#dom-cssstyledeclaration-setproperty

[05:40:02.0000] <TabAtkins>
Okay, so since grammar productions ultimately simplify to tokens (/component values), you should invoke Syntax there.

[05:40:45.0000] <zcorpan>
"parse a list of component values"?

[05:41:23.0000] <TabAtkins>
Yes.

[05:41:37.0000] <TabAtkins>
Which'll produce a list of tokens + functions and blocks.

[06:06:53.0000] <zcorpan>
should i say to match the list against the grammar for the property? is that always a boolean result or can a property alter the list?

[06:08:19.0000] <hsivonen>
does anyone happen to have examples of pages that require BOM to override HTTP in order to work? The pages were broken when I made the Gecko change have migrated away from UTF-16 since then

[06:14:39.0000] <zcorpan>
TabAtkins: ^

[06:21:38.0000] <SimonSapin>
TabAtkins: is "a string" unambiguously Unicode and not bytes?

[06:24:12.0000] <zcorpan>
from CSSOM's point of view it's DOMString i.e. 16-bit units

[06:25:07.0000] <zcorpan>
not sure what should happen to lone surrogates

[06:25:36.0000] <SimonSapin>
uh

[06:25:51.0000] <zcorpan>
iirc document.write just lets lone surrogates through

[06:25:57.0000] <SimonSapin>
well, anything non-ASCII is a "name character" for the tokenizer, so it should round-trip

[07:24:39.0000] <sangwhan>
media.readyState has a note about being able to jump between readyStates discontinously - does that mean a compliant implementation can jump straight from HAVE_NOTHING to HAVE_CURRENT_DATA?

[07:25:13.0000] <sangwhan>
(While bad, I've seen a corner case where this happens. Just wondering if that can be considered a compliance issue)

[07:25:28.0000] <hsivonen>
Is there a summary of the <hgroup>/<subhead> bikeshed in a few sentences?

[07:25:55.0000] <Ms2ger>
"W3C tries to assert dominance"

[07:26:01.0000] <Ms2ger>
Is one "a few"?

[07:26:53.0000] <hsivonen>
Ms2ger: W3C or SteveF?

[07:27:16.0000] <Ms2ger>
Dunno, I look from afar

[07:27:42.0000] <hsivonen>
/me moves to the next thread

[07:28:36.0000] <SteveF>
hsivonen: bikeshead is good, nothing to do with dominence

[07:29:28.0000] <SteveF>
hsivonen: trying to work out if people really want/need some way to identify a subheading (that works)

[07:30:03.0000] <SteveF>
hsivonen: my take is that people should make use of 'custom elements'

[07:31:16.0000] <hsivonen>
SteveF: custom elements seems like a bad story for something as common for static text

[07:31:41.0000] <hsivonen>
depends on whether one believes commonly-undestood copyable and pasteable markup has value

[07:32:00.0000] <SteveF>
hsivonen: i agree, but think they will be used to make all sort crazy semantic stuff

[07:32:37.0000] <hsivonen>
semantics of custom elements will be an illusion. lots of 386 ahead :-(

[07:33:06.0000] <SteveF>
semantics of native elements is often an illusion

[07:33:34.0000] <Ms2ger>
Semantics is an illusion, sheeple

[07:33:36.0000] <SteveF>
unless they actually do something useful

[07:33:41.0000] <hsivonen>
SteveF: yeah

[07:35:59.0000] <SteveF>
hsivonen: if you want to read something about subhead i try to put it into perspective here http://lists.w3.org/Archives/Public/public-html/2013Jun/0025.html

[07:37:05.0000] <hsivonen>
/me notes "semi-mythical outline algorithm" :-)

[07:38:06.0000] <hsivonen>
SteveF: thanks

[07:38:13.0000] <SteveF>
np

[07:38:45.0000] <hsivonen>
I'm unhappy to find more MPEG-2 references in my backlog of HTML WG email.

[07:44:59.0000] <jgraham>
I'm pretty sure that along the axis of "less valuable to have have known semantics" to "more valuable to have known semantics" headings are on the "more valuable" end

[07:45:23.0000] <jgraham>
Saying "custom elements" is more or less like saying "just use <font>"

[07:47:34.0000] <Ms2ger>
People here might be interested in https://groups.google.com/a/chromium.org/forum/#!topic/chromium-dev/wDV9JHs0mBA as well

[07:47:44.0000] <darobin>
I agree that custom elements aren't a good way of handling subheaders

[07:47:56.0000] <darobin>
slightly better than <font> though :)

[07:48:24.0000] <jgraham>
<font class="subheading"> if you want it to be readable :p

[07:48:31.0000] <SteveF>
darobin: the custom elements comment was a light hearted one

[07:48:56.0000] <darobin>
SteveF: it seems to be discussed seriously though :)

[07:49:37.0000] <jgraham>
Although really people will be writing templates, so more like {{subheading}}foo{{/subheading}} that expands to <font size=24 face="Comic Sans">foo</font>

[07:49:39.0000] <SteveF>
jgraham: i have been trying to work out how custom elements work, i believe you can extend an element like thus <p is="fancyparagraph></p> which leaves the base semantics (as far as acc API) is concerened, intact

[07:50:17.0000] <darobin>
SteveF: you don't need web components for a custom element that has no behaviour beyond styling

[07:51:14.0000] <SteveF>
darobin: right, but people want a way to define stuff like custom semantic elements to make them more real and legit

[07:51:33.0000] <darobin>
mulling it over a bit, I reckon that <subwhatever> would mostly be useful if it had sane default styling (unless there are e.g. outlining use cases I haven't thought of)

[07:52:43.0000] <SteveF>
darobin: did you read the email i pointed henry to just before?

[07:52:51.0000] <jgraham>
SteveF: I might have lost track of custom elements a bit, but last I heard that syntax was only there to placate Hixie and everyone else planned to use something like <x-foo> (I am probably a lot behind though)

[07:53:17.0000] <jgraham>
They might even have dropped the x- bit

[07:53:58.0000] <darobin>
SteveF: hmmm, so you thinking about something like https://gist.github.com/anonymous/be98f147a2f885257108 ?

[07:54:00.0000] <Ms2ger>
I hear they now use <foo-bar>

[07:54:13.0000] <darobin>
SteveF: yes I read it, I know the UC

[07:54:28.0000] <SteveF>
jgraham: right, and I have been looking at the examples in polymer, all of which appear to be of the interactive UI with no useful information exposed and no keyboard interaction

[07:55:02.0000] <darobin>
polymer is a rather impressive undertaking, but the examples could be better

[07:55:05.0000] <SteveF>
darobin: yes that sort of thing

[07:55:24.0000] <SteveF>
darobin:  now they are only examples, but doesn't auger well

[07:56:21.0000] <darobin>
SteveF: the thing is, given that to get that you'd have to either inline the <element>...</element> or use <link rel=import href=path/to/element.html> you're going to need to use many subheadings before it becomes more useful than <span role=subheading>

[07:57:02.0000] <darobin>
I don't think it bodes that bad

[07:57:06.0000] <SteveF>
darobin also <element name=sub-head extends="p"> is supposed to mean the it uses the pelement thingy in the DOM

[07:57:29.0000] <darobin>
those are clearly hacker examples, it doesn't necessarily reflect usage

[07:57:34.0000] <darobin>
right, yes, that would work

[07:58:19.0000] <jgraham>
/me has the opinion that <hgroup> might not be perfect, but it is likely good enough, and certainly not so bad as to be worth the months of anguish

[07:59:14.0000] <SteveF>
jgraham: no anguish

[07:59:52.0000] <darobin>
more like some form of vague angst

[08:00:09.0000] <darobin>
the kind you'd find in a 1920s Austrian experimental film

[08:00:42.0000] <SteveF>
jgraham: i don't think a formal feature is needed but if it was hgroup would not be my choice...

[08:01:38.0000] <jgraham>
Well there was a poll of some sort and a WHATWG/W3C fork and multiple(?) extension specs and lots and lots of email that I stopped reading. Which seems quite like anguish to me.

[08:11:55.0000] <GPHemsley>
hsivonen: See also: https://gist.github.com/jonathantneal/5672276

[08:12:46.0000] <GPHemsley>
hsivonen: SteveF's mailing list post doesn't take into account the discussion that JonathanNeal and I had which suggested separate use cases for <hgroup> and <subline>.

[08:15:34.0000] <GPHemsley>
hsivonen: (Note that I don't necessarily agree with all that JonathanNeal wrote in that document; you might want to check the logs from around that time to see the full discussion.)

[08:27:54.0000] <hsivonen>
GPHemsley: thanks

[09:08:03.0000] <SteveF>
jgraham: "Well there was a poll of some sort and a WHATWG/W3C fork and multiple(?) extension specs and lots and lots of email that I stopped reading. Which seems quite like anguish to me." think it was a fair indication that it was a flawed feature

[09:09:16.0000] <Ms2ger>
subhead?

[09:10:10.0000] <SteveF>
Ms2ger: thats not a feature its an idea

[09:10:31.0000] <jgraham>
SteveF: Or an indication that people are apt to get hung up about really unimportant things and overlook significant ones

[09:11:54.0000] <SteveF>
jgraham: depends on what you think is important

[09:15:58.0000] <SteveF>
jgraham: there was an intransigence in the W3C wg at that time that is no longer evident, which makes it easier to get stuff done or undone as the case may be

[09:35:29.0000] <Hixie>
jgraham++

[09:35:34.0000] <Hixie>
bummer, missed anne again

[09:35:45.0000] <Hixie>
i got up at like 7am and i still missed him

[09:35:49.0000] <Hixie>
what crazy schedule is the man on!

[09:36:16.0000] <Hixie>
hsivonen: want me to move to Traditional vs Simplified, or should I leave the region names from Vista's list?

[09:36:27.0000] <Hixie>
hsivonen: (i'm happy to go whichever way you prefer on this)

[09:38:54.0000] <SimonSapin>
Hixie: I think he’s still in Japan

[09:40:23.0000] <Hixie>
any idea if he's getting up late or early?

[09:40:42.0000] <Hixie>
i'll try again this evening i guess

[09:41:31.0000] <SimonSapin>
we also that that new thing called email ;)

[09:41:43.0000] <Hixie>
wat

[09:41:43.0000] <SimonSapin>
s/that that/have that/

[09:44:29.0000] <Hixie>
(actually one of the things i want to ask him is why he didn't reply to my e-mail :-P )

[09:44:38.0000] <SimonSapin>
oh

[09:45:28.0000] <Hixie>
GPHemsley: ok so apparently i'm on debian 4 and to move to newer php we have to upgrade to debian 6

[09:45:32.0000] <Hixie>
this seems like a win in general

[09:45:33.0000] <Hixie>
however

[09:45:33.0000] <Hixie>
however

[09:45:38.0000] <Hixie>
expect EVERYTHING to break this week

[09:45:39.0000] <Hixie>
:-)

[09:46:58.0000] <SimonSapin>
Why stop at Debian 6? 7 is stable

[09:47:29.0000] <Hixie>
maybe dreamhost haven't got 7 ready yet, who knows

[09:52:33.0000] <reyre>
Hixie: for the webvtt API is there any validation things that we need to do? like the end time of a cue can't be greater then the start time of the cue? the spec doesn't say anything about that

[09:53:03.0000] <Hixie>
validation where?

[09:54:43.0000] <reyre>
Hixie: so when a user sets the endTime, or any of the properties on a WebVTTCue, should there be any validation taking place?

[09:55:36.0000] <Ms2ger>
What does the spec say? :)

[09:55:41.0000] <Hixie>
not per the spec, currently

[09:56:11.0000] <reyre>
Hixie: hmm this my bad.. the WebVTTCue spec seems to be okay with setters..

[09:56:14.0000] <Ms2ger>
On another note

[09:56:17.0000] <Ms2ger>
http://dev.w3.org/html5/webvtt/ is ugly :(

[09:56:32.0000] <Hixie>
reyre: iirc we intentionally made it possible to set negative-time cues, because otherwise it's hard to set the times on a cue (you have to figure out which of the two you have to set first based on the old values and new values)

[09:56:46.0000] <Hixie>
reyre: all the other algorithms in the spec should, in theory, handle them gracefully

[09:57:03.0000] <Hixie>
(endTime is on TextTrackCue, not WebVTTCue, btw)

[09:57:33.0000] <reyre>
Hixie: yeah, my bad about that. okay thanks for the info

[09:57:51.0000] <Hixie>
not an problem at all, please do feel free to ask :-)

[09:57:54.0000] <Hixie>
better safe than sorry :-)

[09:58:05.0000] <reyre>
Hixie: :) sounds good

[09:58:06.0000] <Hixie>
and it's not unusual for this kind of question to find errors in the spec :-)

[09:59:25.0000] <reyre>
Hixie: yeah i've encountered a couple of those already heh

[10:30:00.0000] <reyre_>
Hixie: so in the WEBVTT data model we have a writing direction, but in the API we have 'vertical' property

[10:30:03.0000] <reyre_>
how do those two relate?

[10:30:25.0000] <Hixie>
that's more a question for nessy, she's the editor now. but let me see if i can answer your question, one sec...

[10:31:45.0000] <Hixie>
reyre_: is the definition of 'vertical' not clear?

[10:31:50.0000] <Hixie>
reyre_: i'm confused as to the question

[10:31:58.0000] <Hixie>
what's not clear?

[10:32:57.0000] <Hixie>
abarth: a webkit bug in the parser is described here https://www.w3.org/Bugs/Public/show_bug.cgi?id=22183

[10:34:02.0000] <reyre_>
Hixie: i guess what's not clear is if writing direction and the vertical property are the same thing

[10:34:05.0000] <reyre_>
which i'm thinking they are

[10:34:13.0000] <Hixie>
how is that not clear?

[10:34:22.0000] <Hixie>
(are we looking at the same spec?)

[10:34:38.0000] <reyre_>
Hixie: http://dev.w3.org/html5/webvtt ?

[10:34:38.0000] <Hixie>
is http://dev.w3.org/html5/webvtt/#dfn-dom-texttrackcue-vertical what you're reading?

[10:34:44.0000] <reyre_>
yep

[10:34:54.0000] <Hixie>
i don't understand how that leaves any room for interpretation

[10:35:28.0000] <reyre_>
"On setting, the text track cue writing direction" that makes me think there is a property called 'writing direction' instead of the vertical property where it is actually stored

[10:35:51.0000] <reyre_>
"On setting, the text track cue writing direction must be set to the value given"

[10:36:17.0000] <Ms2ger>
Could you file a bug to make that an enum too?

[10:36:50.0000] <Hixie>
reyre_: ??

[10:36:53.0000] <reyre_>
Ms2ger: isn't the other bug to make the kind _not_ an enum? (if that's what your referring to)

[10:37:01.0000] <Hixie>
reyre_: what do you mean by "property"?

[10:37:24.0000] <reyre_>
Hixie: sorry i mean 'attribute in the webidl'

[10:37:28.0000] <reyre_>
so the vertical attribute

[10:37:31.0000] <Hixie>
reyre_: the attributes don't store anything

[10:37:40.0000] <reyre_>
:/

[10:38:01.0000] <Ms2ger>
reyre_, so there's one bug to make HTMLTrackElement.kind not an enum; the other things like that should be, though

[10:38:01.0000] <Hixie>
there's a "text track cue" thing, which is represented in JS by a "TextTrackCue" object

[10:38:24.0000] <Hixie>
the "TextTrackCue" object is just an API that exposes, in various ways, the values of the "text track cue" thing

[10:38:25.0000] <Ms2ger>
reyre_, and you should think about attributes as getter/setter pairs, that helps :)

[10:38:34.0000] <Hixie>
one of those values is "the text track cue writing direction"

[10:39:08.0000] <Hixie>
the "vertical" attribute on the TextTrackCue interface has a getter and setter which poke at values of the "text track cue" thing

[10:39:28.0000] <Hixie>
specifically, the "the text track cue writing direction" value, but that's an implementation detail

[10:39:39.0000] <Hixie>
as in, it could easily have been multiple values

[10:40:17.0000] <Hixie>
reyre_: does that make sense?

[10:40:49.0000] <reyre_>
Hixie: yep, i'm just trying to piece it together with how we do things in Gecko

[10:41:33.0000] <reyre_>
Ms2ger: i'll file a bug :)

[10:41:50.0000] <reyre_>
thanks Hixie

[10:42:00.0000] <Hixie>
np, sorry if i came over as rude :-/

[10:42:08.0000] <reyre_>
Hixie: not at all :)

[10:42:11.0000] <Hixie>
phew

[10:53:59.0000] <Hixie>
anyone know if you can do a bugzilla search that excludes bugs that have open dependencies?

[10:54:54.0000] <Hixie>
heycam|away: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=22218

[10:55:37.0000] <Hixie>
Ms2ger: https://www.w3.org/Bugs/Public/show_bug.cgi?id=22221 ?

[10:55:57.0000] <Ms2ger>
Yessir?

[10:56:17.0000] <Hixie>
why is it inconsistent?

[10:56:22.0000] <Hixie>
i thought you _liked_ enums

[10:57:53.0000] <Ms2ger>
Yes

[10:58:01.0000] <Ms2ger>
But not for reflected attributes, I realized

[10:58:50.0000] <Hixie>
oh is it that it throws an exception instead of ignoring?

[10:59:13.0000] <Ms2ger>
Ignores instead of transparently setting the content attribute

[10:59:39.0000] <Hixie>
oh ok

[10:59:43.0000] <Hixie>
right

[11:04:00.0000] <Hixie>
i wonder if there's a way to get the behaviour we want while still using enums

[11:04:35.0000] <Hixie>
i guess not

[11:04:37.0000] <Hixie>
oh well

[11:04:38.0000] <Hixie>
no biggie

[11:04:44.0000] <Ms2ger>
The point of using enums is that your prose doesn't see invalid values, no? :)

[11:04:45.0000] <Ms2ger>
The point of using enums is that your prose doesn't see invalid values, no? :)

[11:05:36.0000] <Hixie>
mostly the point is just to be clearer about intent

[11:06:16.0000] <Ms2ger>
I guess you could say that too

[11:15:44.0000] <GPHemsley>
Hixie: Good to know. I'm surprised they haven't done things automatically. Did you put in for the upgrade?

[11:15:55.0000] <Hixie>
yeah

[11:16:04.0000] <Hixie>
i expect they minimise upgrades to avoid breaking stuff

[11:16:24.0000] <Hixie>
it does explain why i've been stuck with such an ancient perl, though

[11:16:59.0000] <GPHemsley>
do we have a lot of scripts on the server?

[11:17:05.0000] <GPHemsley>
(of any kind)

[11:19:13.0000] <jgraham>
Debian 4? Isn't that the version that Jesus used?

[11:19:38.0000] <Hixie>
GPHemsley: yes

[11:19:50.0000] <Hixie>
the server hosts ~60 domains and subdomains

[11:19:56.0000] <GPHemsley>
oh

[11:19:58.0000] <GPHemsley>
this should be fun

[11:20:00.0000] <Hixie>
including e.g. software.hixie.ch

[11:20:07.0000] <Hixie>
which has all my games and tools and so on

[11:20:12.0000] <GPHemsley>
games?

[11:20:22.0000] <Hixie>
stuff i do in my spare time

[11:20:33.0000] <GPHemsley>
you have spare time?

[11:20:47.0000] <Hixie>
some

[11:20:54.0000] <Hixie>
none of the games are finished...

[11:21:04.0000] <GPHemsley>
ah

[11:21:05.0000] <jgraham>
Hixie: I hear there are plenty of specs looking for editors ;)

[11:21:09.0000] <GPHemsley>
heh

[11:21:24.0000] <Hixie>
jgraham: if i spend too much time editing, i burn out :-)

[11:21:30.0000] <Hixie>
jgraham: gotta keep a balance :-)

[11:41:54.0000] <Hixie>
man it's hard to work out how the url parser can ever fail

[11:44:38.0000] <Hixie>
in fact i think the answer might be it can't

[11:44:44.0000] <Hixie>
which is fascinating

[11:46:00.0000] <Hixie>
i wonder if that's intentional

[11:46:03.0000] <Hixie>
more questions for anne!

[14:41:14.0000] <Hixie>
http://test:test/ huh

[14:44:30.0000] <Hixie>
awesome, spec agrees with firefox

[14:44:58.0000] <Hixie>
bummer, sicking was useful and gave me more things to test

[14:45:02.0000] <Hixie>
(https://www.w3.org/Bugs/Public/show_bug.cgi?id=20580)

[14:53:14.0000] <Hixie>
/me writes a test case and finds every browser does the same thing

[14:53:17.0000] <Hixie>
clearly i wrote my test wrong

[15:25:15.0000] <Hixie>
so since adding the referer info to the bugs, i'm finding that many of the bogus bugs have no referer field at all. https:->http: maybe? (searches maybe?)

[15:25:18.0000] <Hixie>
e.g. https://www.w3.org/Bugs/Public/show_bug.cgi?id=22285

[15:46:42.0000] <TabAtkins>
If they have no referrer, it's likely that they... weren't referred.  They were direct submissions against the submission url by probing spambots.

[15:46:43.0000] <TabAtkins>
If they have no referrer, it's likely that they... weren't referred.  They were direct submissions against the submission url by probing spambots.

[15:49:12.0000] <Hixie>
i mean the referrer of the spec, not of the file-bug.cgi script

[15:49:27.0000] <Hixie>
the referrer of the latter seems to always be one of the specs

[15:50:01.0000] <Hixie>
(anecdotally, more often the w3.org/TR specs for the crazy bugs, more often the whatwg.org/html multipage spec for the annoyingly insightful and hard to fix bugs)

[16:02:43.0000] <reyre_>
Hixie: so the WebVTTCue webidl doesn't have [setter throws] on the alignment, vertical, and position attributes, but down lower it says that they are supposed to throw on setting

[16:02:53.0000] <reyre_>
is that correct?

[16:03:02.0000] <Hixie>
what is [setter throws] ?

[16:04:36.0000] <reyre_>
Hixie: i could be wrong about this, but i've seen before in other webidls that when an attribute could throw an error on setting it has a [SetterThrows] above the attribute ?

[16:04:46.0000] <Hixie>
ah

[16:04:49.0000] <Hixie>
that's new to me

[16:04:57.0000] <Hixie>
i don't think i've put that on any of the webidl i've ever written

[16:05:01.0000] <jsbell>
It's old

[16:05:26.0000] <jsbell>
A couple years (more?) ago the need to express throwing behavior in WebIDL was removed.

[16:05:33.0000] <jsbell>
All done in prose now.

[16:06:40.0000] <reyre_>
hmm okay thanks jsbell

[16:06:47.0000] <reyre_>
thanks Hixie

[16:22:04.0000] <rillian>
reyre_: [SetterThrows] survives in the mozilla webidl compiler as an extension to control code generation

[16:22:26.0000] <rillian>
so it's needed in the implementation's webidl, but not the spec

[16:22:31.0000] <rillian>
https://developer.mozilla.org/en-US/docs/Mozilla/WebIDL_bindings#Throws

[16:23:21.0000] <rillian>
i.e. we omit the error object reference in the binding call when that decorator is not present

[16:23:41.0000] <Hixie>
seems like it'd be safer to have [NeverThrows], so the code gets generated in the case where someone didn't think to check

[16:24:46.0000] <rillian>
I think they'd notice when they implemented the exception, because there'd be no way to throw it.

[16:25:26.0000] <jsbell>
Blink and Blink have something similar.

[16:25:26.0000] <rillian>
and concensus was (we wanted that) most things didn't throw

[16:25:27.0000] <GPHemsley>
/me wonders if HTML shouldn't have its own custom icon like the other specs, to differentiate from WHATWG itself.

[16:25:36.0000] <jsbell>
Er, Blink and WebKIt

[16:26:35.0000] <reyre_>
rillian: awesome

[16:26:58.0000] <reyre_>
i think marcus is good to go for that then

[16:27:06.0000] <rillian>
great

[16:27:06.0000] <msaad>
yeap

[16:30:52.0000] <GPHemsley>
Hixie: @WHATWG seems not to have tweeted any changes after r7953

[16:31:28.0000] <Hixie>
that's anne's department

[16:32:07.0000] <GPHemsley>
naturally


2013-06-13
[18:32:27.0000] <annevk>
So that is weird... For @WHATWG to stop and html5.org to continue...

[18:44:55.0000] <annevk>
So it seems a Python module has disappeared

[18:47:33.0000] <GPHemsley>
Hixie: How quickly did DreamHost say they were going to upgrade?

[19:02:01.0000] <annevk>
It seems "{'errors': [{'message': 'The Twitter REST API v1 will soon stop functioning. Please migrate to API v1.1. https://dev.twitter.com/docs/api/1.1/overview.', 'code': 68}]}" might be the problem :/

[19:02:37.0000] <zewt>
nothing encourages using apis like forcing everyone to rewrite things

[19:08:23.0000] <annevk>
Yeah, not really sure what the right approach is here.

[19:10:33.0000] <Hixie>
is there a python twitter module we can rely on?

[19:10:39.0000] <Hixie>
also, woot, an anne online!

[19:10:51.0000] <Hixie>
there was some bug i was supposed to ask you about

[19:11:08.0000] <annevk>
Hixie: the GBK thing is not completely sorted out, basically

[19:11:27.0000] <Hixie>
ah yeah, that's the one

[19:11:28.0000] <Hixie>
ok

[19:11:29.0000] <annevk>
Hixie: there's some outstanding questions as to whether we can merge it into gb18030 or not

[19:11:42.0000] <Hixie>
is there some bug i can follow on that?

[19:13:55.0000] <annevk>
Hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16862

[19:14:23.0000] <Hixie>
awesome

[19:14:45.0000] <annevk>
Hixie: there's a Python module which we're using. However, I'm having a hard time understanding how Python module updates work, especially across Python versions, etc.

[19:15:16.0000] <annevk>
Hixie: versioned software development is not something I'm very capable at. And understanding which Python version executes and which modules it'll pick up... I don't even...

[19:15:27.0000] <annevk>
/me prefers browsers

[19:15:39.0000] <Hixie>
yeah i dunno how it works for python

[19:16:16.0000] <Hixie>
ok. based on that bug i'm guessing that GB18030 is fine as a default encoding.

[19:16:26.0000] <Hixie>
gonna call it for now until i get a specific compat complaint.

[19:28:24.0000] <annevk>
Twitter account will remain broken for a bit until I find someone that can fix the Python setup. Not really interested in going through that while sleep deprived.

[19:28:31.0000] <annevk>
Twitter account will remain broken for a bit until I find someone that can fix the Python setup. Not really interested in going through that while sleep deprived.

[23:38:10.0000] <matjas>
Twitter — breaking the web one API endpoint at a time

[01:09:04.0000] <jgraham>
(In principle I can probably help fix the Twitter thing. Or at least I generally understand how Python works)

[04:01:31.0000] <Ms2ger>
reyre, [SetterThrows] is Gecko-only, it isn't supposed to end up in specs

[04:14:40.0000] <mitsuhiko>
hey everybody

[04:14:50.0000] <mitsuhiko>
does anyone have some authoritive answer in regards to http headers and rfc5987?

[04:15:14.0000] <mitsuhiko>
it looks like browsers are currently handling this encoding for their internal usage, but xmlhttprequest returns the raw string?

[04:16:10.0000] <mitsuhiko>
does that mean users of the XMLHttpRequest object are supposed to do that on their own?

[06:08:33.0000] <SimonSapin>
hsivonen: Do you know about this? (See mitsuhiko’s question above.)

[06:30:01.0000] <zewt>
did something happen to the styling of the webvtt spec, heh

[06:30:29.0000] <zewt>
seems hard to read now (but I'm not sure why), and I don't remember getting that impression the last time I opened it

[06:32:47.0000] <zewt>
oh, it's because the underlined text is black, instead of blue (thanks @ web.archive.org)

[06:32:57.0000] <zewt>
or maybe because the spacing changed

[06:37:25.0000] <annevk>
jgraham: still interested?

[06:38:23.0000] <jgraham>
annevk: In?

[06:38:57.0000] <jgraham>
The twitter thing?

[06:39:27.0000] <jgraham>
Sure

[06:39:39.0000] <jgraham>
Also, probably for most other things that I previously expressed interest in

[06:39:50.0000] <SimonSapin>
annevk: Do you know about this? http://krijnhoetmer.nl/irc-logs/whatwg/20130613#l-308

[06:39:52.0000] <MikeSmith>
annevk: http://krijnhoetmer.nl/irc-logs/whatwg/20130613#l-308

[06:40:02.0000] <MikeSmith>
SimonSapin: jinx

[06:41:58.0000] <annevk>
SimonSapin: the specification doesn't care

[06:42:20.0000] <annevk>
SimonSapin: well, it treats values as byte sequences, not strings

[06:42:31.0000] <annevk>
(although it somewhat confusingly exposes them as strings...)

[06:42:45.0000] <SimonSapin>
mitsuhiko: ^

[06:43:52.0000] <mitsuhiko>
annevk: eg: client libraries have to decode the headers by hand?

[06:44:11.0000] <mitsuhiko>
does that also apply to outgoing headers?

[06:44:12.0000] <annevk>
mitsuhiko: yeah

[06:44:25.0000] <annevk>
yeah

[06:45:44.0000] <annevk>
basically the core HTTP header value type is byte sequences on top of which they created a number more specific value types

[06:45:57.0000] <annevk>
however, the API only knows about the core HTTP header value type

[06:46:43.0000] <mitsuhiko>
it's a bit of an unfortunate situation because from what i can see, no javascript high level library actually implements proper header parsing/emitting wrt to unicode

[06:49:43.0000] <annevk>
it'd be quite complicated to do so even

[06:50:13.0000] <annevk>
mitsuhiko: you might want to file a bug on http://xhr.spec.whatwg.org/ with the use case for outgoing and incoming headers you have in mind

[06:50:29.0000] <annevk>
mitsuhiko: it might be worth considering for an upgrade or new API

[06:51:22.0000] <mitsuhiko>
annevk: i will have to think about this first before i propose anything. I am just going through various unicode related issues for a server side http library right now and wanted to compare with browsers.

[06:51:40.0000] <annevk>
fair enough

[06:52:08.0000] <annevk>
in general I think they haven't really designed HTTP headers particularly well

[06:53:07.0000] <mitsuhiko>
it definitely got worse over time. by now 5 rfcs are involved in encoding and headers: http://greenbytes.de/tech/tc2231/ (not counting the cookie headers)

[06:53:12.0000] <SimonSapin>
there might have been more evolution than design involved…

[06:53:38.0000] <mitsuhiko>
SimonSapin: i'm not complaining :)

[06:53:57.0000] <SimonSapin>
I am :)

[07:12:44.0000] <GPHemsley>
mitsuhiko: Hey, that's a useful link. Thanks for that!

[07:14:17.0000] <GPHemsley>
annevk: I'm not too familiar with CSP; I think I got the directive wrong for the regular browsing context

[07:14:26.0000] <GPHemsley>
annevk: (I used 'connect-src')

[07:14:46.0000] <GPHemsley>
annevk: Which makes me wonder if there even is a directive for the regular browsing context (maybe 'default-src'?)

[07:15:12.0000] <GPHemsley>
annevk: Also, it makes me wonder if we need another context for 'connect-src'

[07:15:13.0000] <GPHemsley>
annevk: Also, it makes me wonder if we need another context for 'connect-src'

[07:15:51.0000] <annevk>
GPHemsley: I don't think CSP blocks following links

[07:16:05.0000] <GPHemsley>
perhaps not

[07:52:07.0000] <GPHemsley>
hmm...

[07:53:24.0000] <GPHemsley>
parse natural DNA into natural pre-RNA; remove introns from natural pre-RNA to make natural mRNA; serialize natural mRNA into synthetic cDNA; patent synthetic cDNA

[07:55:00.0000] <GPHemsley>
(that's like saying a potentially-malformed format from the wild is natural and unpatentable, but serializing it into a format that follows the ABNF results in a patentable form)

[07:55:13.0000] <GPHemsley>
/me throws his hands up

[09:03:59.0000] <zewt>
today's insanity: in mobile safari, body { 50%; } works, but html body { 50%; } gives 25%

[09:04:24.0000] <Ms2ger>
html, body?

[09:05:15.0000] <zewt>
no, the real rule is html[something] body

[09:05:19.0000] <zewt>
oh i see what's happening

[09:05:19.0000] <zewt>
oh i see what's happening

[09:05:34.0000] <zewt>
body { zoom: 50%; } body { body: 50%; } becomes 25%, instead of just overriding the rule

[09:05:38.0000] <zewt>
that's ... batshit insane

[09:05:58.0000] <zewt>
er, zoom:

[09:08:23.0000] <SimonSapin>
zewt: is zoom supposed to be the same as scale() in a transform?

[09:08:46.0000] <zewt>
i'm not sure of the particulars

[09:11:23.0000] <GPHemsley>
/me recalls 'zoom' not being an interoperable property

[09:11:42.0000] <zewt>
i don't think so: a transform lays the contents out the same way, then scales the result; zoom changes the size of the contents, so it affects the actual flow

[09:11:54.0000] <Ms2ger>
I thought it was something you used to... Force hasLayout in IE?

[09:15:23.0000] <GPHemsley>
annevk: I wonder if the 'sandbox' directive might be more appropriate?

[09:17:47.0000] <GPHemsley>
Hixie: Does HTML treat XHR/WebSocket/EventSource requests as different from <script> requests?

[09:43:33.0000] <GPHemsley>
/me wonders why CSP uses 400 instead of 403

[10:11:18.0000] <GPHemsley>
hmm... an XHR/WebSocket/EventSource request is sort of a hybrid between a script context and a (nested) browsing context...

[10:12:57.0000] <GPHemsley>
leaning more towards the latter

[10:44:13.0000] <smaug____>
slightlyoff: ping

[10:44:21.0000] <smaug____>
since annevk isn't here

[10:46:46.0000] <smaug____>
do you recall why http://dom.spec.whatwg.org/#promises-model requires then-property to be callabke.

[10:47:19.0000] <smaug____>
it would be simpler to just throw and catch and call reject in case then wasn't callable

[10:51:50.0000] <slightlyoff>
We're going to go for ghetto branding, not what's there now, methinks

[10:52:54.0000] <Ms2ger>
/me wonders why we're even implementing it now if we're going to have to rewrite everything anyway

[10:56:10.0000] <smaug____>
Ms2ger: yeah

[11:51:07.0000] <Hixie>
GPHemsley: yes, but maybe not in the way you care about? not sure what you're asking

[11:51:29.0000] <Hixie>
hm, floats are hard to use right.

[11:51:41.0000] <Hixie>
i want something that floats to the right of my paragraph, but comes after the paragraph in the dom

[11:51:58.0000] <Hixie>
not sure that's even possible

[11:52:31.0000] <Ms2ger>
Float your paragraph left?

[11:52:49.0000] <Hixie>
the paragraph is part of a long document

[11:52:50.0000] <Hixie>
the paragraph is part of a long document

[11:53:07.0000] <Hixie>
think <p> vs <p class=note> in the spec

[11:53:13.0000] <Hixie>
i want the .note to float to the right of the p

[11:53:24.0000] <Ms2ger>
!p + p.note {}?

[11:53:43.0000] <Hixie>
that doesn't work if i don't know their relative sizes ahead of time

[11:53:45.0000] <Ms2ger>
Or do you want something that works practically rather than theoretically?

[11:53:53.0000] <Hixie>
practically, yes

[11:54:00.0000] <Ms2ger>
No idea, then

[11:54:16.0000] <Hixie>
(also, really, we're going with the "!" thing? ugh)

[11:54:29.0000] <Hixie>
(:matches is such a better solution.)

[11:55:46.0000] <Ms2ger>
I dunno

[11:55:55.0000] <Ms2ger>
It's not like anybody is implementing

[11:58:26.0000] <GPHemsley>
what's 1?

[11:58:28.0000] <GPHemsley>
err, !

[11:58:35.0000] <GPHemsley>
what's !?

[11:58:35.0000] <GPHemsley>
what's !?

[12:01:30.0000] <Ms2ger>
If you have !a + b { color: green }, the a is green

[12:03:01.0000] <jgraham>
Hasn't Hixie been promoting :matches since like 2000?

[12:03:19.0000] <Hixie>
yeah

[12:03:27.0000] <Hixie>
but i'm not active in the wg

[12:03:29.0000] <Hixie>
so... :-)

[12:04:49.0000] <jgraham>
Well yeah, but it's like "<Hixie> We should solve it using :matches" is a permanent feature of the web

[14:10:02.0000] <GPHemsley>
IDK, ! makes sense to me, now that I remember what it means.

[14:10:10.0000] <GPHemsley>
since it patterns with !important

[14:13:34.0000] <GPHemsley>
plus, you'd have to explain to me how :matches would work

[14:40:42.0000] <Hixie>
GPHemsley: with !, how do you pick an element that has either a <p> next sibling, a <div> next sibling, or an <ol> next sibling?

[14:41:10.0000] <GPHemsley>
isn't there any() for that?

[14:41:19.0000] <Hixie>
any is a variant of matches

[14:41:57.0000] <GPHemsley>
!* :any(p, div, ol)

[14:42:00.0000] <GPHemsley>
or something

[14:42:09.0000] <Hixie>
an even better example would be, how do you match an element that has both an <ul> following subling, and an <ol> following sibling

[14:42:29.0000] <GPHemsley>
when would that happen?

[14:42:33.0000] <GPHemsley>
or you mean generically

[14:42:35.0000] <GPHemsley>
not immediately

[14:42:37.0000] <GPHemsley>
himm

[14:42:39.0000] <GPHemsley>
-i

[14:42:40.0000] <Hixie>
you could do it as a pair, as in: !* ~ ul ~ ol, !* ~ ol ~ ul

[14:42:50.0000] <Hixie>
but that quickly gets out of hand

[14:43:09.0000] <GPHemsley>
!* ul/ol

[14:43:12.0000] <Hixie>
with :matches it's just  :matches(# ~ ol):matches(# ~ ul)

[14:43:17.0000] <GPHemsley>
/me needs to brush up on his selectors

[14:43:22.0000] <Hixie>
what's "/"?

[14:43:23.0000] <Hixie>
what's "/"?

[14:43:27.0000] <GPHemsley>
dunno

[14:43:27.0000] <GPHemsley>
dunno

[14:43:29.0000] <GPHemsley>
just made it up

[14:43:29.0000] <Hixie>
hah

[14:43:31.0000] <Hixie>
k

[14:43:37.0000] <Hixie>
i guess that's fair

[14:43:41.0000] <Hixie>
i'm making up :matches :-D

[14:43:46.0000] <GPHemsley>
:)

[14:44:37.0000] <Hixie>
anyway :matches() is just a pseudo that matches if its selector matches the node in question, with "#" being a placeholder in the argument for "the current element being checked"

[14:47:00.0000] <GPHemsley>
does :nth-match() help here?

[14:47:24.0000] <GPHemsley>
(the spec is kinda sparse on examples)

[14:47:32.0000] <GPHemsley>
(the spec is kinda sparse on examples)

[14:48:46.0000] <GPHemsley>
oh, it's E! not !E

[14:50:08.0000] <GPHemsley>
*! ( (~ ul) && (~ ol) )

[14:51:34.0000] <GPHemsley>
oh, apparently the spec is not consistent on the placement of the !

[14:56:17.0000] <GPHemsley>
oh, apparently :matches() is already in the spec, too

[14:56:46.0000] <GPHemsley>
but it only takes two arguments?

[14:56:53.0000] <GPHemsley>
I'm not clear on the syntax here

[14:57:08.0000] <GPHemsley>
*|*:matches(:hover, :focus)

[14:57:44.0000] <GPHemsley>
!*:matches(~ ul, ~ol) would probably be the right thing, then

[14:57:49.0000] <GPHemsley>
~ ol

[14:57:57.0000] <GPHemsley>
(are the spaces signficant?)

[14:58:00.0000] <GPHemsley>
+i

[14:58:02.0000] <GPHemsley>
(are the spaces signficant?)

[14:58:02.0000] <GPHemsley>
+i

[14:58:27.0000] <GPHemsley>
oh, hmm

[14:58:42.0000] <GPHemsley>
namespaces are confusing

[15:06:58.0000] <Hixie>
i don't think the :matches() in the spec supports the "#" part i suggested

[15:17:14.0000] <GPHemsley>
nope

[15:17:24.0000] <GPHemsley>
but I'm not sure that it needs to


2013-06-14
[23:23:28.0000] <annevk>
jgraham: it seems you fixed it!

[23:29:36.0000] <jgraham>
annevk: Great!

[23:30:13.0000] <annevk>
ah you just put a copy of Python there

[23:30:14.0000] <annevk>
interesting

[23:31:01.0000] <jgraham>
It's running in its own virtualenv

[23:31:30.0000] <jgraham>
So it's mostly links to the system python, but with a totally seperate set of libraries

[23:36:22.0000] <annevk>
k

[02:00:21.0000] <gazzwi86>
Just wondering where I would submit a proposal for a new html element?

[02:01:29.0000] <tomasf>
implement it, submit patches and hope nobody notices

[02:03:04.0000] <webben>
gazzwi86: see the whatwg faq page

[02:07:11.0000] <Ms2ger>
I would suggest submitting a use case instead

[02:07:38.0000] <miketaylr>
form a CG

[02:07:41.0000] <miketaylr>
(jk)

[02:08:06.0000] <gazzwi86>
I was going to tell you guys what I'm planning on suggesting adding but my computer is crashing at the moment

[02:08:13.0000] <gazzwi86>
so unresponsive

[02:10:32.0000] <gazzwi86>
I was thinking it would be good to add a meta tag for age restricted content.  I haven't seen one being used before and figured if it became standard the browsers could better protect younger users from the content they are able to access

[02:10:47.0000] <gazzwi86>
what do you think?

[02:11:51.0000] <jgraham>
Tried that, didn't work

[02:13:24.0000] <gazzwi86>
why?

[02:13:57.0000] <gazzwi86>
I'm sure that if there were EU legislation to go with it, just like the poorly thought out Cookie policy then it could work

[02:14:07.0000] <gazzwi86>
It would be somewhat enforced

[02:18:00.0000] <divya>
TabAtkins: SOS

[02:18:45.0000] <jgraham>
Ah, so you believe in souls?

[02:19:05.0000] <divya>
strangeee question to ask jgraham but only strange if you are asking me

[02:19:35.0000] <Ms2ger>
Sounds about jgraham-level strangeish

[02:19:46.0000] <jgraham>
Oh, although wikipedia suggests that primary school lied to me

[02:19:54.0000] <jgraham>
and SOS doesn't actually stand for anything

[02:20:10.0000] <jgraham>
So, as you were on the philosophical points

[02:22:31.0000] <divya>
OH

[02:22:36.0000] <divya>
I GET IT NOW

[02:23:00.0000] <divya>
i was hoping to gain attention of Tab who is sitting a seat away.

[02:23:08.0000] <divya>
but he is actually revising his talk

[02:23:21.0000] <divya>
jgraham: i was in oslo but you were not!

[02:23:40.0000] <jgraham>
I am not usually in oslo!

[02:23:53.0000] <Ms2ger>
Why not!

[02:24:35.0000] <divya>
:D

[02:24:39.0000] <divya>
exactly Ms2ger

[02:25:07.0000] <jgraham>
Because it would be a long way to commute to Linköping every day?

[02:25:11.0000] <divya>
:D

[02:25:30.0000] <Ms2ger>
Oh, you're *there*

[02:25:40.0000] <divya>
terrible

[02:28:12.0000] <divya>
jgraham: Ms2ger i had this view that box shadows are never hardware-accel do you know by any chance this to be true?

[02:28:23.0000] <divya>
i also dont know how to search for this assertion on the internetz

[02:28:28.0000] <Ms2ger>
No idea

[02:29:13.0000] <divya>
oh it is accel in IE

[02:29:15.0000] <jgraham>
I don't know

[02:29:23.0000] <jgraham>
It sounds implementation specific

[02:29:37.0000] <divya>
yes it is ;(

[03:25:03.0000] <gazzwi86>
Are there any proposed suggestions on how to resolve the restriction of adult content to minors?

[03:26:08.0000] <Ms2ger>
I think the usual suggestion is that adults have a trusted relationship with their children

[03:37:16.0000] <gazzwi86>
Ms2ger: hmmm… that tends not to satisfy the more netortic of idividuals

[03:37:45.0000] <gazzwi86>
neurotic*

[03:38:40.0000] <gazzwi86>
IE uses certificates does it not?  Certs. that most people don't bother to apply for

[06:09:46.0000] <reyre_>
are WebVTT Lang Objects not supposed to be translated to DOM content ? http://dev.w3.org/html5/webvtt/#webvtt-cue-text-dom-construction-rules

[06:10:33.0000] <Ms2ger>
"HTMLElement element node with localName "span", and a lang attribute set to the WebVTT Language Object's applicable language. "?

[06:11:01.0000] <Ms2ger>
Looks like a typo in that table to me

[06:11:08.0000] <reyre_>
Ms2ger: i'm also wondering if the lang object should have it's own translation not just as a property on another object

[06:11:10.0000] <Ms2ger>
There's two entries for "WebVTT Class Object"

[06:11:26.0000] <reyre_>
ah good eye Ms2ger

[06:11:28.0000] <reyre_>
ah good eye Ms2ger

[06:11:39.0000] <Ms2ger>
/me bows

[06:12:14.0000] <reyre_>
i'll open a bug, thanks :)

[06:13:11.0000] <Ms2ger>
Thank you :)

[06:13:12.0000] <Ms2ger>
Thank you :)

[06:26:34.0000] <darobin>
Hixie: heads up that I just imported <template>, which is a fairly large change

[07:10:46.0000] <GPHemsley>
I thought ETags were for content grading?

[07:11:31.0000] <GPHemsley>
s/grading/rating/

[07:18:23.0000] <zewt>
etag? that's a cache thing

[07:20:02.0000] <reyre_>
any reason why the webvtt pseudo element only allows the matching of a particular number of css selectors?

[07:25:34.0000] <GPHemsley>
zewt: Yeah, I just realized. But I could've sworn there was something with a similar name. PICS?

[07:25:45.0000] <GPHemsley>
yeah, PICS

[07:25:47.0000] <GPHemsley>
that's what I meant

[07:44:04.0000] <GPHemsley>
gazzwi86: PICS already exists http://www.w3.org/PICS/

[07:44:30.0000] <GPHemsley>
gazzwi86: Though apparently it's been superseded by POWDER: http://www.w3.org/2007/powder/

[07:44:48.0000] <GPHemsley>
(which has been shuttered, too)

[07:45:04.0000] <GPHemsley>
which I suppose is to say that it's been tried and failed twice now

[07:45:37.0000] <Ms2ger>
PICS was just a way to block the US Congress, no?

[07:46:32.0000] <darobin>
nicely put

[07:47:03.0000] <darobin>
GPHemsley: PICS was actually moderately successful. For a while almost everyone used it.

[07:47:17.0000] <darobin>
then people realised that no serious product was taking it into account...

[07:47:25.0000] <darobin>
then people realised that no serious product was taking it into account...

[07:47:32.0000] <darobin>
but it stuck for quite a while because it was in a lot of templates

[07:53:18.0000] <annevk>
darobin: you're potentially gonna end up in merge pain

[07:53:26.0000] <annevk>
darobin: Hixie's gonna do other parser changes first

[07:53:38.0000] <darobin>
oh, didn't know that

[07:53:50.0000] <darobin>
annevk: do you know what other changes?

[07:53:57.0000] <darobin>
I would assume they would be relatively orthogonal

[07:54:02.0000] <darobin>
has he started?

[07:54:06.0000] <annevk>
the way the parser talks about tags and such

[07:54:10.0000] <annevk>
he commented on the <template> bug

[07:54:16.0000] <darobin>
ah, so terminology?

[07:54:22.0000] <darobin>
really?

[07:54:25.0000] <darobin>
/me looks

[07:54:30.0000] <annevk>
prolly just the WHATWG one

[07:55:34.0000] <darobin>
ah, damn, he commented that right after I started (I had looked at the bug)

[07:55:52.0000] <darobin>
actually, this might be a good hting

[07:55:54.0000] <darobin>
*thing

[07:56:51.0000] <darobin>
annevk: it looks like he hasn't started

[07:57:35.0000] <darobin>
and applying the change for https://www.w3.org/Bugs/Public/show_bug.cgi?id=22322 is likely to be easier after incorporating template since it requires the same switches

[07:57:36.0000] <darobin>
and applying the change for https://www.w3.org/Bugs/Public/show_bug.cgi?id=22322 is likely to be easier after incorporating template since it requires the same switches

[07:57:38.0000] <darobin>
I'll point that out in the bug

[08:08:54.0000] <annevk>
darobin: fwiw, parts of Shadow DOM will likely move to DOM once I get to it

[08:09:06.0000] <annevk>
might wait a bit more with that though

[08:09:24.0000] <annevk>
seems it's not quite ready yet

[08:10:06.0000] <darobin>
annevk: yeah, that would make sense

[08:10:13.0000] <darobin>
though probably not all the spec?

[08:10:29.0000] <annevk>
no just parts

[08:10:32.0000] <darobin>
annevk: btw did you see that there's a bit of Templates for DOM, too?

[08:10:48.0000] <annevk>
it's already in DOM if you mean the host concept

[08:10:55.0000] <darobin>
no, it's about cloning

[08:11:11.0000] <annevk>
oh, but cloning is extensible

[08:11:19.0000] <darobin>
https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/templates/index.html#node-clone-additions

[08:11:27.0000] <annevk>
or do you need a different hook because of the children thing?

[08:11:34.0000] <darobin>
if you prefer that to go into HTML just lmk

[08:11:40.0000] <darobin>
it's certainly HTML specific

[08:11:40.0000] <annevk>
oh wow

[08:11:44.0000] <darobin>
yeah

[08:12:11.0000] <annevk>
kinda wish someone would have given feedback to that effect before implementing

[08:12:44.0000] <darobin>
well, it makes sense relative to the feature

[08:12:58.0000] <darobin>
but I'm not sure it's the best place to monkey patch

[08:13:53.0000] <annevk>
it's okay to monkey patch, but you should tell the host spec you're doing that and where

[08:13:55.0000] <annevk>
and how

[08:14:10.0000] <annevk>
surprises are no good

[08:14:22.0000] <annevk>
but it makes sense

[08:14:25.0000] <darobin>
yeah, that's why I was surprised I could see a reaction from you :)

[08:14:39.0000] <darobin>
yeah, you actually can't make it work at all without specifying this

[08:14:46.0000] <gazzwi86>
GPHemsley: thanks! I'll look into that!

[08:15:03.0000] <annevk>
I don't really see why they can't use the "cloning steps" extension hook though

[08:15:11.0000] <annevk>
I guess it doesn't get passed the flag

[08:15:19.0000] <annevk>
or the original algorithm

[08:15:20.0000] <darobin>
in general I don't mind monkey patching, but when it gets to "add this step beneath step 27" I'd rather it not stay that way too long; you know it's just going to go wrong at some point

[08:15:22.0000] <annevk>
meh

[08:15:34.0000] <annevk>
oh yeah, it ought to be integrated

[08:15:41.0000] <annevk>
but it should also be coordinated upfront imo

[08:15:51.0000] <darobin>
annevk: let me look more closely, maybe I can just go ahead and fix that

[08:16:17.0000] <annevk>
nah it needs to go in, pretty sure

[08:16:28.0000] <annevk>
someone file a bug I guess, it's sleepytime here

[08:16:52.0000] <darobin>
annevk: nah, I'll just fix it now — forget about this, I'll add it to HTML and use the proper extension point instead of this

[08:17:02.0000] <annevk>
so you can't

[08:17:10.0000] <annevk>
the extension point is not passed any of the details you need

[08:17:32.0000] <darobin>
how do you mean?

[08:17:49.0000] <annevk>
guess it depends on how you read it

[08:18:00.0000] <annevk>
oh well, nn

[08:18:11.0000] <darobin>
I can just saw "at the step in the cloning algo that say blah other applicable specs, do this"

[08:18:12.0000] <darobin>
nn :)

[08:18:23.0000] <darobin>
*say

[08:20:10.0000] <jgraham>
In general I mind monkey patching

[08:20:16.0000] <jgraham>
HTML even does it to itself

[08:20:27.0000] <jgraham>
and I have seen implementors make mistakes for that reason

[08:21:22.0000] <jgraham>
(if you consider the seperation of "obsolete but conforming" into a chapter at the end that then patches other APIs to be "monkey patching")

[08:21:32.0000] <jgraham>
Or just "obsolete"

[08:26:15.0000] <darobin>
jgraham: I guess it depends on the type of monkey patching

[08:26:54.0000] <darobin>
monkey patching algorithms that don't have a well-defined extension point is a problem

[08:26:58.0000] <darobin>
but other things less so

[08:27:01.0000] <jgraham>
Well, in general monkey-patching introduces non-locality

[08:27:33.0000] <jgraham>
Which is generally considered bad for readable code, and I think the same applies to specifications

[08:28:23.0000] <darobin>
up to a point

[08:28:40.0000] <darobin>
putting everything in the same spec can also hurt readability

[08:28:51.0000] <darobin>
it's a hard problem, let's have beer

[08:30:26.0000] <Ms2ger>
As bz said, the HTML spec is spaghetti code

[08:39:34.0000] <darobin>
at more than one level :)

[08:39:51.0000] <darobin>
the spaghetti are made of spaghetti

[08:39:54.0000] <darobin>
it's hyperspaghetti

[08:40:05.0000] <Ms2ger>
Mm

[08:40:08.0000] <darobin>
which is very sensible if you think about it

[08:40:12.0000] <darobin>
hmmmm, spaghetti

[08:40:13.0000] <Ms2ger>
/me would like him some hyperspaghetti

[08:40:22.0000] <Ms2ger>
Now I'm hungry

[08:40:23.0000] <darobin>
yeah, shit I'm hungry now

[08:40:25.0000] <darobin>
heh

[08:40:48.0000] <Ms2ger>
Damn you!

[08:40:53.0000] <Ms2ger>
And me!

[08:40:58.0000] <darobin>
I blame the spec, really

[08:41:03.0000] <Ms2ger>
wfm

[08:53:54.0000] <darobin>
there, annevk can sleep soundly, I put the cloning op in HTML

[08:54:23.0000] <darobin>
there, annevk can sleep soundly, I put the cloning op in HTML

[09:05:55.0000] <GPHemsley>
/me worries about darobin's alcohol intake

[09:07:02.0000] <Ms2ger>
He's French, he can deal

[09:08:15.0000] <odinho>
Don't we all.

[09:39:59.0000] <jgraham>
The problem with extension points is that they are the spec equivalent of COMEFROM

[09:57:18.0000] <Ms2ger>
Mm, comefrom

[10:42:39.0000] <GPHemsley>
Is there a tool that validates WebIDL (and perhaps demonstrates its output)?

[10:43:25.0000] <GPHemsley>
Also, is there a way to define a foo() that ouputs a string when called as foo but is an object when called as foo.bar?

[10:44:17.0000] <Hixie>
in webidl?

[10:44:22.0000] <Hixie>
there's legacycaller

[10:44:32.0000] <Hixie>
as its name may suggest, heycam doesn't want you using it :-)

[10:44:49.0000] <Ms2ger>
Nah

[10:44:53.0000] <Ms2ger>
PutForward

[10:45:10.0000] <Ms2ger>
/me doesn't see how Hixie matched that with legacycaller

[10:45:16.0000] <Hixie>
foo() returns a string?

[10:45:19.0000] <Hixie>
that's call

[10:46:10.0000] <Hixie>
if you mean an object that stringifies, then there's stringifier

[10:46:57.0000] <Hixie>
if you mean an attribute that can be set to a string but that retains its identity as an object when you do so, there's, as Ms2ger says, [PutForwards]

[10:48:37.0000] <Ms2ger>
I read ... to define an attribute foo that returns a string when gotten as foo, but returns an object when gotten as foo.bar

[10:48:43.0000] <Ms2ger>
But maybe I misread that

[10:53:26.0000] <Hixie>
ah then you want serialiser

[10:53:31.0000] <Hixie>
not putforwards

[10:55:34.0000] <Ms2ger>
GPHemsley, what *do* you want?

[11:00:37.0000] <reyre_>
for the text track spec -- there seems to be a conflict with how TextTrackCueList::ActiveCues is defined to work

[11:00:38.0000] <reyre_>
for the text track spec -- there seems to be a conflict with how TextTrackCueList::ActiveCues is defined to work

[11:01:29.0000] <reyre_>
here http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#texttrack in the definition of the webidl it says that it should be all the cues whose start times and end times fall within the current play back time

[11:01:49.0000] <reyre_>
however here, http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#dom-texttrack-activecues it says that it is all the cues who have the active flag set

[11:02:55.0000] <Hixie>
reyre_: look at the top of the green box at that first url

[11:03:23.0000] <Hixie>
reyre_: anything that's green, in the spec, as an implementor, you should just ignore

[11:03:42.0000] <reyre_>
Hixie: ah okay >.<

[11:03:43.0000] <Hixie>
reyre_: it's intended for authors and often presents a simplified view of the world

[11:04:02.0000] <Hixie>
(that's what "non-normative" means)

[11:04:15.0000] <GPHemsley>
I want something that looks like a string but acts like an object

[11:04:34.0000] <reyre_>
Hixie: okay thanks

[11:05:23.0000] <GPHemsley>
Hixie: Is that what stringifier does?

[11:05:41.0000] <Ms2ger>
Probably

[11:05:50.0000] <Ms2ger>
Depends on what you mean exactly

[11:05:52.0000] <Hixie>
stringifier handles the "looks like a string" part, PutForwards handles the "quacks like string" part

[11:06:07.0000] <Hixie>
stringifier makes the object have a custom toString

[11:06:10.0000] <GPHemsley>
are they not mutually exclusive? maybe links would help

[11:06:28.0000] <GPHemsley>
if I do console.log(foo) I want it to output a string

[11:06:30.0000] <Hixie>
PutForwards makes an attribute forward getting set to a value to an attribute in the attribute's object

[11:06:33.0000] <GPHemsley>
but I want foo.bar to not be an error

[11:06:34.0000] <Hixie>
that's stringifier

[11:08:38.0000] <GPHemsley>
so now, is there an easy way to test that I'm writing WebIDL correctly? A validator of some sort?

[11:09:08.0000] <Ms2ger>
Hixie, don't you have that in your pipeline?

[11:09:21.0000] <Hixie>
have what?

[11:09:30.0000] <Ms2ger>
Something to check your webidl

[11:09:35.0000] <Hixie>
oh

[11:09:40.0000] <Hixie>
yeah, i use webidl checker or something

[11:09:58.0000] <Hixie>
http://www.w3.org/2009/07/webidl-check

[11:10:18.0000] <GPHemsley>
excellent, thanks

[11:11:58.0000] <Hixie>
anyone here responsible for filing this bug about onresize and onblur? https://www.w3.org/Bugs/Public/show_bug.cgi?id=21972

[11:22:08.0000] <GPHemsley>
what is the right type for a dictionary that has a variable list of keys?

[11:22:18.0000] <Ms2ger>
There is no such thing

[11:22:36.0000] <GPHemsley>
really?

[11:22:41.0000] <GPHemsley>
how would one do that, then?

[11:22:53.0000] <Hixie>
"object"

[11:23:07.0000] <Hixie>
but maybe you should describe what you're doing :-)

[11:23:33.0000] <Hixie>
your questions sound a lot like the kinds of questions i ask a few horus before i get scolded for designing bad apis :-P

[11:23:42.0000] <GPHemsley>
heh

[11:24:00.0000] <GPHemsley>
I'm trying to write up document.contentType/mimeType

[11:24:16.0000] <GPHemsley>
and I was hoping to have document.contentType.parameters

[11:24:25.0000] <Hixie>
any browsers interested in implementing that?

[11:24:44.0000] <GPHemsley>
well, the stringified parts are already there

[11:25:03.0000] <GPHemsley>
Opera and Gecko have document.contentType

[11:25:15.0000] <GPHemsley>
whose value corresponds to "MIME type portion" in mimesniff

[11:25:16.0000] <GPHemsley>
whose value corresponds to "MIME type portion" in mimesniff

[11:25:17.0000] <Hixie>
there's a vast difference in complexity between returning a string, and returning an object with detailed parsing and stringifying and so on...

[11:25:46.0000] <GPHemsley>
perhaps, but it's no more complex than the algorithms I've already defined

[11:25:53.0000] <GPHemsley>
in that, they'd be the same

[11:27:47.0000] <GPHemsley>
my thought is that a web author would be able to do: if (document.contentType.type === "image") {}

[11:27:53.0000] <GPHemsley>
etc.

[11:28:14.0000] <GPHemsley>
or if ("charset" in document.contentType.parameters) {}

[11:29:29.0000] <GPHemsley>
oh, actually

[11:29:53.0000] <GPHemsley>
if (document.contentType.parameters["charset"] !== undefined) {}

[11:33:11.0000] <Hixie>
does anyone actually use document.contentType today?

[11:34:02.0000] <GPHemsley>
some people do

[11:34:21.0000] <GPHemsley>
(and it's not like it's going away, because it's used in Gecko extensions and internal code, AFAIK)

[11:34:34.0000] <GPHemsley>
the problem, of course, is that WebKit/Blink don't have it

[11:35:08.0000] <GPHemsley>
(it's probably used more for iframes than the main window)

[11:45:47.0000] <Hixie>
i strongly recommend getting clear indications from browser vendors that they want to implement and extend this

[11:46:09.0000] <Hixie>
or at least clear indications from Web authors that this is something they really need (which would convince the former)

[11:46:54.0000] <GPHemsley>
meh

[11:46:56.0000] <GPHemsley>
you're no fun

[11:47:53.0000] <Ms2ger>
Nobody's ever accused Hixie of being fun

[11:48:01.0000] <Ms2ger>
Except when there are board games

[11:49:27.0000] <GPHemsley>
Ms2ger: Any chance you could speak to whether browser vendors would want to implement this? >_>

[11:49:46.0000] <Ms2ger>
I can't talk for Mozilla, but I'd expect a "meh"

[11:49:58.0000] <GPHemsley>
That's all I ever get regarding mimesniff ;_;

[11:50:22.0000] <Ms2ger>
It's true, it's not fancy

[11:51:11.0000] <Hixie>
html editing apis-- well, they aren't any more sexy, i'll admit. but there's probably more implementation interest in fixing things there and more opportunity to create nice apis.

[11:51:18.0000] <Ms2ger>
Hardly

[11:51:23.0000] <Hixie>
and more likelihood of people having opinions.

[11:51:35.0000] <Ms2ger>
Our editor is all but dead

[11:51:57.0000] <Hixie>
Ms2ger: the web needs better text editing apis, i doubt anyone disagrees with that

[11:52:10.0000] <Ms2ger>
Sure

[11:52:11.0000] <Ms2ger>
Sure

[11:52:35.0000] <Ms2ger>
But that doesn't mean I'm going to read or implement the spec :)

[11:52:36.0000] <Ms2ger>
But that doesn't mean I'm going to read or implement the spec :)

[11:53:40.0000] <GPHemsley>
nevertheless, I should probably at least document the existing document.contentType

[11:53:49.0000] <GPHemsley>
(IE's document.mimeType is weird)

[11:54:39.0000] <GPHemsley>
/me has been wondering the last few days why we opted for "MIME type" in favor of "content type"

[11:54:47.0000] <GPHemsley>
s/in favor/over/

[11:54:56.0000] <GPHemsley>
s/ of//

[11:55:46.0000] <Hixie>
because the content's type often doesn't match the "MIME type"

[11:55:53.0000] <GPHemsley>
For reference, this is the existing documentation: https://developer.mozilla.org/en-US/docs/Web/API/document.contentType

[11:56:20.0000] <GPHemsley>
and the IDL: http://dxr.mozilla.org/mozilla-central/source/dom/interfaces/core/nsIDOMDocument.idl#l276

[11:56:37.0000] <GPHemsley>
for the lazy: "readonly attribute DOMString      contentType;"

[11:58:53.0000] <GPHemsley>
on a side note, I think MXR is still better than DXR

[11:59:09.0000] <GPHemsley>
though I suppose it depends on your usecase

[12:02:04.0000] <GPHemsley>
hmm... document.contentType has been around since the CVS days

[12:02:27.0000] <GPHemsley>
so probably much longer than that

[12:03:59.0000] <jgraham>
It took me the longest time to work out that "our editor is all but dead" didn't refer to Aryeh

[12:04:27.0000] <GPHemsley>
2001: https://bugzilla.mozilla.org/show_bug.cgi?id=73847

[12:04:38.0000] <GPHemsley>
jgraham: I didn't even get that

[12:04:54.0000] <GPHemsley>
jgraham: But it makes much more sense now

[12:07:40.0000] <Ms2ger>
GPHemsley, that idl doesn't count anymore, it's now dom/webidl/Document.webidl

[12:10:19.0000] <GPHemsley>
ah, hmm

[12:11:19.0000] <GPHemsley>
oh, so annevk's already specced it

[12:11:21.0000] <GPHemsley>
well then

[12:11:51.0000] <GPHemsley>
/me goes back to puttering, then

[13:14:50.0000] <zewt>
GPHemsley: because "mime type" is what people actually call it, not "content type"

[13:15:09.0000] <zewt>
if you call a mime type a content type, i'll look at you strange in the same way as if you said "MiB" :)

[13:18:37.0000] <GPHemsley>
/me likes MiB

[13:51:50.0000] <GPHemsley>
If anyone is wondering: light WHATWG green is #CCE79A

[13:58:47.0000] <rillian>
E79A? that doesn't sound web safe.

[14:00:54.0000] <jsbell>
The 90's called; they want their 8-bit display adapter back.

[14:06:29.0000] <rillian>
it's retro now. tell them to go back to their discrete transistors if they want nostalgia.

[14:36:25.0000] <GPHemsley>
is the HTML spec really asking me how satisfied I am with this website?

[14:50:46.0000] <Hixie>
yup :-)

[15:40:07.0000] <GPHemsley>
dependencies of the WHATWG specs: http://whatwg.gphemsley.org/web.png

[15:40:35.0000] <Hixie>
that's actually less bad than i expected :-)

[15:40:37.0000] <GPHemsley>
(HTML is only partial)

[15:41:20.0000] <GPHemsley>
source is here: http://whatwg.gphemsley.org/web.gv

[15:41:55.0000] <Hixie>
yeah i was gonna say, where are the papal bulls!

[15:42:23.0000] <GPHemsley>
:)

[15:42:31.0000] <GPHemsley>
I left HTML until the end, since I knew it had a long list

[15:42:38.0000] <GPHemsley>
and then I only added the ones that were used in other specs

[15:43:22.0000] <GPHemsley>
I probably could have auto-generated this from xref, but I chose to do it by hand instead

[15:43:26.0000] <GPHemsley>
took me ~2 hours

[15:43:32.0000] <Hixie>
:-)

[15:43:53.0000] <GPHemsley>
(not that I knew it was going to take that long when I started...)

[15:45:46.0000] <GPHemsley>
(this would probably be a lot cleaner if I took out the references to RFC 2119...)

[15:46:02.0000] <Hixie>
heh

[15:48:45.0000] <GPHemsley>
well, "a lot" is relative, but it does seem to be a bit cleaner

[15:48:58.0000] <GPHemsley>
though it's got funky arrows

[15:49:09.0000] <GPHemsley>
/me goes to eat


2013-06-15
[17:30:36.0000] <GPHemsley>
"When a <code>dialog</code> element is created, it must be placed

[17:30:37.0000] <GPHemsley>
+  in the <span>mundanely aligned</span> mode, the user agent must <span>set up the default static

[17:30:37.0000] <GPHemsley>
+  position</span> for that element, without an anchor."

[17:30:50.0000] <GPHemsley>
Hixie: Is there a word missing?

[17:31:43.0000] <GPHemsley>
"then", perhaps?

[17:32:03.0000] <GPHemsley>
or even better: "and then"

[17:32:25.0000] <GPHemsley>
hmm, maybe not better

[17:32:43.0000] <GPHemsley>
two sentences would probably be better

[17:32:51.0000] <GPHemsley>
betterer

[17:32:53.0000] <Hixie>
yeah, "and"

[17:32:54.0000] <Hixie>
oops

[17:33:14.0000] <GPHemsley>
"<Span>"

[17:35:19.0000] <Hixie>
fixed

[17:35:20.0000] <Hixie>
thanks

[19:14:27.0000] <GPHemsley>
Now in hyperlinked SVG goodness: http://whatwg.gphemsley.org/web.svg

[19:16:35.0000] <GPHemsley>
oh, wait, anolis generates references on the fly

[19:16:42.0000] <GPHemsley>
I couldn't have automated this directly

[19:16:45.0000] <GPHemsley>
\o/

[19:16:55.0000] <shepazu>
GPHemsley, is that graphviz?

[19:17:02.0000] <GPHemsley>
yup

[19:17:22.0000] <GPHemsley>
source is here: http://whatwg.gphemsley.org/web.gv

[19:18:13.0000] <shepazu>
cool

[23:26:20.0000] <Ms2ger>
krijn down?

[23:29:04.0000] <Ms2ger>
GPHemsley, it might be cleaner if you only used the normative references

[03:26:40.0000] <krijn>
Ms2ger: am I?

[03:28:27.0000] <krijn>
On it!

[03:37:06.0000] <Ms2ger>
It seemed like that, at least

[03:37:06.0000] <Ms2ger>
It seemed like that, at least

[03:48:46.0000] <krijnh>
Back

[03:48:46.0000] <krijnh>
Back

[03:49:24.0000] <krijnh>
I'll ask TabAtkins what happened, he knows everything :)

[04:07:30.0000] <Ms2ger>
Thanks :)

[07:41:01.0000] <SteveF>
anybody know the syntax for writing multiple git commands on the same line?

[07:42:05.0000] <SteveF>
as in if i want to do git cherry-pick and git rm at same time rather than doing one then the other or is that not possible?

[07:50:58.0000] <SteveF>
worked it out ;

[08:20:01.0000] <GPHemsley>
Ms2ger: What does --dump-backrefs do?

[08:21:40.0000] <Ms2ger>
Something for clicking a definition and getting the references to it?

[08:23:36.0000] <GPHemsley>
oh

[08:23:40.0000] <GPHemsley>
ok, that's not what I want

[08:24:13.0000] <GPHemsley>
I want to add the ability to dump dependencies along with xrefs

[08:26:28.0000] <GPHemsley>
Ms2ger: Are you alright with that?

[08:27:09.0000] <Ms2ger>
Sure

[08:30:33.0000] <GPHemsley>
Ms2ger: Where's the best place to put it? xref.py?

[08:31:26.0000] <Ms2ger>
refs.py

[08:33:37.0000] <GPHemsley>
Well, I was gonna include it in the xrefs JSON file...

[08:38:22.0000] <Ms2ger>
Mm, do you need that?

[08:38:30.0000] <Ms2ger>
It seems pretty orthogonal

[08:39:30.0000] <GPHemsley>
the alternative is what, having all references in a single file?

[08:39:39.0000] <GPHemsley>
(the terminology here is confusing to me)

[08:39:51.0000] <GPHemsley>
what's a reference and what's a cross-reference?

[08:40:09.0000] <GPHemsley>
or should I have a dependencies.json?

[08:49:33.0000] <GPHemsley>
Ms2ger: What is specs.json used for?

[08:49:34.0000] <GPHemsley>
Ms2ger: What is specs.json used for?

[08:50:08.0000] <GPHemsley>
oh, right, data-anolis-spec

[08:50:34.0000] <Ms2ger>
Right

[08:50:50.0000] <GPHemsley>
shouldn't data-anolis-ref and data-anolis-spec be reconciled?

[08:50:58.0000] <Ms2ger>
So a reference is something for the References section, and a cross-reference is an inline link to a definition

[08:51:17.0000] <GPHemsley>
they use different IDs, with different case

[08:51:51.0000] <Ms2ger>
They do completely different thing :)

[08:51:52.0000] <Ms2ger>
s

[08:53:09.0000] <GPHemsley>
that doesn't mean they can't use the same ID, does it — it's one .json file per spec, right?

[08:53:39.0000] <GPHemsley>
(is CORS deprecated in favor of Fetch? what's the story there?)

[08:53:41.0000] <Ms2ger>
Well, no, they're different files :)

[08:53:58.0000] <Ms2ger>
The idea is the Fetch includes everything that CORS did, and more

[08:54:19.0000] <GPHemsley>
sorry, I shouldn't be asking two different questions at once..

[08:54:50.0000] <GPHemsley>
specs.json lists the .json files that have the xrefs for various specs

[08:55:02.0000] <GPHemsley>
is there a reason we can't identify them by the ID used in references.json?

[08:56:09.0000] <Ms2ger>
I dunno, the references one is typically upper case, which we probably don't want for xrefs

[08:56:24.0000] <Ms2ger>
But matching them up case-insensitively seems fine

[08:56:50.0000] <Ms2ger>
Though I'm not sure I'd want to require that in Anolis

[08:56:53.0000] <GPHemsley>
why don't we want uppercase for xrefs?

[08:57:22.0000] <Ms2ger>
Because I don't want to write <span data-anolis-spec=DOMPARSINGANDSERIALIZATION>foo</span>

[08:57:56.0000] <GPHemsley>
oh, right, that's the other point I was making: they're not always the same, even case-insensitively

[08:58:09.0000] <GPHemsley>
but I guess we could add a "spec" field to references.json

[08:58:54.0000] <GPHemsley>
but that's probably orthogonal to the other thing I'm trying to do

[08:59:36.0000] <GPHemsley>
so, should I create a dependencies.json?

[09:00:57.0000] <GPHemsley>
it'd be a single file that'd be updated with each compilation of a src file

[09:01:19.0000] <GPHemsley>
oh, wait... references.json isn't even auto-generated, is it?

[09:01:22.0000] <GPHemsley>
hmm

[09:01:29.0000] <GPHemsley>
/me ponders whether that's relevant

[10:34:22.0000] <GPHemsley>
ah, darn it, I'll need some way to specify what the current spec is

[11:04:22.0000] <GPHemsley>
/me slaps Ms2ger with consistent indentation

[11:05:00.0000] <Ms2ger>
Yeah, I was young

[11:18:37.0000] <Ms2ger>
Heads up for javascripters: Array.values() is not web-compatible

[11:21:05.0000] <GPHemsley>
Do we have a policy on messing with other people's specs?

[11:21:42.0000] <GPHemsley>
Ms2ger: Also, did I see right that I have write permissions to anolis now?

[11:22:15.0000] <Ms2ger>
/me looks

[11:22:57.0000] <Ms2ger>
Looks like you do, yes

[11:23:06.0000] <GPHemsley>
so is it alright if I commit directly?

[11:23:28.0000] <Ms2ger>
I'd appreciate it if you tell me about first, but sure :)

[11:40:40.0000] <GPHemsley>
Ms2ger: Alright, changes coming (with a test!)

[11:41:50.0000] <GPHemsley>
oh, heh

[11:41:53.0000] <GPHemsley>
testing the wrong thing

[11:44:19.0000] <GPHemsley>
Ms2ger: What's the proper way to include a boolean argument in .options?

[11:45:03.0000] <GPHemsley>
and arguments with dashes, for that matter

[11:46:58.0000] <Ms2ger>
I think dashes -> underscores

[11:47:13.0000] <Ms2ger>
and just "foo": true for boolean arguments?

[11:47:13.0000] <Ms2ger>
and just "foo": true for boolean arguments?

[11:47:49.0000] <GPHemsley>
actually, nevermind

[11:47:54.0000] <GPHemsley>
it's not a boolean argument >_>

[11:49:52.0000] <GPHemsley>
hmm...

[11:50:17.0000] <GPHemsley>
Ms2ger: How do I test/compare a file that's not compiled directly? Or can I?

[11:50:43.0000] <Ms2ger>
You mean, compare the json or whatever?

[11:50:53.0000] <GPHemsley>
yeah

[11:51:00.0000] <Ms2ger>
I don't think the test runner does that at the moment :/

[11:51:04.0000] <GPHemsley>
alright

[11:51:10.0000] <GPHemsley>
I suppose we can rely on hg for that for now

[11:51:31.0000] <Ms2ger>
wfm

[11:51:48.0000] <Ms2ger>
Want to file an issue so I can think about this once I have seas of free time?

[11:51:56.0000] <Ms2ger>
(When I retire, I guess)

[11:52:02.0000] <GPHemsley>
heh

[11:52:38.0000] <GPHemsley>
alright, I've added the actually --dump-refs test

[11:52:54.0000] <GPHemsley>
(my original test only tested refs, which was fine, because that also didn't have a test)

[11:53:00.0000] <GPHemsley>
this one kinda tests both now

[11:54:22.0000] <Ms2ger>
I've not exactly been disciplined about adding tests :)

[11:54:36.0000] <GPHemsley>
yeah, that's alright

[11:54:43.0000] <GPHemsley>
https://bitbucket.org/ms2ger/anolis/issue/15/add-support-for-testing-comparing-json

[11:54:53.0000] <Ms2ger>
Thanks

[11:55:40.0000] <GPHemsley>
see also my 3 commits

[11:57:19.0000] <Ms2ger>
Nice

[12:02:18.0000] <GPHemsley>
I'm working on getting xref updated to handle it

[12:26:07.0000] <GPHemsley>
Spec authors: If you could update your Makefile to add an entry like this: https://github.com/whatwg/mimesniff/commit/a42a0e361be3ea4038a17ddaa71f27a8f0ca8381

[12:26:31.0000] <GPHemsley>
you'd populate the new files in xref/refs/

[12:29:06.0000] <GPHemsley>
annevk, Hixie, Ms2ger, etc.: ^

[12:29:59.0000] <Hixie>
i don't use anolis directly, i just invoke jgraham's service

[12:30:29.0000] <GPHemsley>
I'm not familiar

[12:31:11.0000] <GPHemsley>
oh, side note: you'll have to update your installation of anolis before that would work

[12:50:45.0000] <GPHemsley>
Ms2ger: Oh, BTW, I still get that test failure with the question mark (and why wouldn't I, since nothing changed :P)

[12:51:17.0000] <Ms2ger>
I still don't get it

[12:51:32.0000] <GPHemsley>
On another note, are we aware of this? https://en.wikipedia.org/wiki/Anolis_grahami

[12:51:42.0000] <GPHemsley>
Ms2ger: Which part?

[12:51:50.0000] <GPHemsley>
I thought we decided it was html5lib

[12:54:00.0000] <GPHemsley>
oh, the version is hardcoded as 0.95

[12:54:01.0000] <GPHemsley>
hmm

[12:55:53.0000] <GPHemsley>
actually, it's not clear to me which html5lib is being used

[12:56:13.0000] <GPHemsley>
the install script searches specifically for html5lib==0.95

[12:56:31.0000] <GPHemsley>
but the instructions for anolis say to have your own copy of html5lib

[12:56:40.0000] <GPHemsley>
and mine is still the old hg/Google Code one

[12:58:11.0000] <Ms2ger>
/me sees html5lib>=0.95

[12:58:55.0000] <Ms2ger>
/me wanders off

[13:00:06.0000] <GPHemsley>
oh, now I really broke things

[13:01:50.0000] <gavinc>
Nooo! comeback w3c dvcs :( HTTP Error 500: Internal Server Error

[13:02:00.0000] <GPHemsley>
html5lib apparently now has a dependency on 'six'

[13:02:24.0000] <gavinc>
https://dvcs.w3.org/hg it's all gone!

[13:02:25.0000] <GPHemsley>
and using the latest html5lib breaks a whole bunch of anolis tests

[13:02:26.0000] <gavinc>
:(

[13:02:37.0000] <GPHemsley>
yikes

[13:03:23.0000] <GPHemsley>
hmm... html5lib seems to have changed the order of attributes

[13:03:34.0000] <GPHemsley>
jgraham: I don't suppose you're around?

[13:03:34.0000] <GPHemsley>
jgraham: I don't suppose you're around?

[13:06:19.0000] <GPHemsley>
gsnedders: Or you?

[13:10:37.0000] <GPHemsley>
Oh, hmm... apparently html5lib now maintains the existing attribute order?

[13:11:07.0000] <GPHemsley>
nope, that's not right

[13:12:36.0000] <GPHemsley>
I have no clue what's going on

[15:35:18.0000] <dekiss>
can I make contenteditable to not make new divs for each enter key I press?

[15:40:48.0000] <dekiss>
what is best way to make wysiwyg editor?

[16:07:20.0000] <dekiss>
can I put in html unicode code of some character and in browser to show the cahracter not t he code

[16:07:22.0000] <dekiss>
can I put in html unicode code of some character and in browser to show the cahracter not t he code

[16:17:45.0000] <slowhands>
hmm

[16:18:00.0000] <slowhands>
there is this component called CKEditor, it may be open source

[16:18:17.0000] <slowhands>
you might want to take a look at that

[16:57:07.0000] <dekiss>
slowhands, thanks for information

[16:57:20.0000] <slowhands>
np also check out redactor

[16:57:21.0000] <slowhands>
np also check out redactor

[16:57:21.0000] <dekiss>
yeah I know it I am concerned about security so I think ilkl make my own editor

[16:57:23.0000] <dekiss>
however

[16:57:24.0000] <dekiss>
<dekiss> enter is newline character in html?

[16:57:25.0000] <dekiss>
<dekiss> https://developer.mozilla.org/en-US/docs/Web/CSS/white-space

[16:57:25.0000] <dekiss>
<dekiss> which is newline character?

[16:57:25.0000] <dekiss>
<dekiss> https://developer.mozilla.org/en-US/docs/Web/CSS/white-space

[16:57:25.0000] <dekiss>
<dekiss> which is newline character?

[16:57:40.0000] <slowhands>
new line in html?

[16:57:50.0000] <slowhands>
you might want a <br>

[16:58:19.0000] <slowhands>
or <br/> depending on your html target

[16:58:23.0000] <Hixie>
you're unlikely to need a <br>

[16:58:32.0000] <Hixie>
unless you're doing a postal address or poem or some such

[16:59:25.0000] <slowhands>
the white-space property is extremely helpful

[16:59:38.0000] <slowhands>
especially when you don't want line breaks


2013-06-16
[17:00:08.0000] <dekiss>
yeah I know but here I am not sure what 'newline character' is : https://developer.mozilla.org/en-US/docs/Web/CSS/white-space

[17:00:14.0000] <dekiss>
thank you for help

[17:00:41.0000] <dekiss>
Hixie nice live DOM tree viewer if you made it  ^^ :) http://software.hixie.ch/utilities/js/live-dom-viewer/#

[17:00:44.0000] <dekiss>
good job

[17:01:50.0000] <Hixie>
thanks

[17:02:09.0000] <dekiss>
I am not sure why but I have set white-space: pre-wrap; on textarea and when I press enter and when I put more white spaces with spacebar nothing hapens

[17:02:11.0000] <slowhands>
it would be really cool if you integrated it with jsfiddle or gists

[17:02:20.0000] <Hixie>
not gonna happen :-)

[17:02:21.0000] <dekiss>
in paragraph sorry not textarea

[17:04:10.0000] <slowhands>
it would be cool. but thats ok

[17:05:42.0000] <dekiss>
I am sorry I missed the selector -_-

[17:06:17.0000] <slowhands>
i didn't realize you were referring to form inputs

[17:07:12.0000] <dekiss>
yaa word-space ftw!

[17:07:17.0000] <dekiss>
white* haha

[17:07:28.0000] <dekiss>
omg I need one episode of star trek to make little pause ^^

[17:11:25.0000] <dekiss>
which is best element for making structure of webpage? I use section element as generic element to divide my webpage into sections I have a lot of section elements is this bad? any idea what to use if not section? div will be better? or it doesn't matter so much?

[17:14:16.0000] <slowhands>
no not bad

[17:14:23.0000] <slowhands>
but older browsers will bug out

[17:14:35.0000] <slowhands>
you will need the shiv/shim

[17:14:44.0000] <dekiss>
ok thanks

[17:14:56.0000] <slowhands>
the typical hierarchy is sections then articles

[17:15:05.0000] <slowhands>
divs for more unconventional things

[17:15:12.0000] <slowhands>
try to keep it semantic

[17:15:26.0000] <slowhands>
with nav and footer

[17:15:59.0000] <slowhands>
a good resource is CodeSchool. I really like their html5 course. its really interactive and pretty fast

[18:59:43.0000] <dekiss>
which is newline character in html?On deciaml html unicode code unit of enter key I don't get new line

[19:56:23.0000] <dekiss>
YEEEEEEEEE

[09:40:27.0000] <marcdm>
hey all

[09:41:04.0000] <marcdm>
I have some questions regarding html5lib-python, anyone want to help me out?

[09:46:05.0000] <Ms2ger>
You can always try

[10:20:14.0000] <SimonSapin>
marcdm: just ask, someone might answer later

[10:21:08.0000] <marcdm>
it's ok. I think I posted it to the mailing list. If it doesn't go thru (I don't see it yet), I'll post an issue on github

[10:22:19.0000] <marcdm>
it's about the treewalker/_base.py. it does isinstance(name, six.text_type) where I think it should be isinstance(name, six.string_types)

[10:48:33.0000] <GPHemsley>
Ms2ger: Did you see all my babbling from yesterday after you left?

[10:48:55.0000] <GPHemsley>
about html5lib and anolis

[10:49:34.0000] <Ms2ger>
Attribute order? I don't quite remember what the story was there

[10:49:45.0000] <Ms2ger>
/me looks

[10:51:58.0000] <Ms2ger>
http://code.google.com/p/html5lib/issues/detail?id=153

[10:52:56.0000] <GPHemsley>
https://github.com/html5lib/html5lib-python/issues/37

[10:53:59.0000] <GPHemsley>
but AFAICT, attributes are not actually maintained in their original order

[10:54:19.0000] <GPHemsley>
(and there appear to be 4 different commits associated with that bug that presume to do the same thing)

[10:54:57.0000] <GPHemsley>
oh, I should say that I installed the git html5lib using the instructions on the wiki

[10:55:04.0000] <GPHemsley>
and I didn't get the dependencies I needed

[10:55:08.0000] <GPHemsley>
so it's possible that I missed others

[10:56:00.0000] <GPHemsley>
"sudo python setup.py install" apparently doesn't use the requirements.txt file(s)

[10:58:06.0000] <gsnedders>
GPHemsley: Basically no Python document tree API preserves attribute order

[10:58:14.0000] <gsnedders>
GPHemsley: So what html5lib does is basically irrelevant

[10:59:04.0000] <GPHemsley>
gsnedders: Are you sure that your fix made things better and not worse? At least sorting them alphabetically maintains a predictable order.

[10:59:22.0000] <gsnedders>
GPHemsley: There's a filter that gives the old behaviour

[11:00:01.0000] <gsnedders>
GPHemsley: Of giving alphabetical order.

[11:00:42.0000] <GPHemsley>
gsnedders: How does that work? (Or does Ms2ger already know?)

[11:00:49.0000] <Ms2ger>
I don't

[11:00:53.0000] <Ms2ger>
I don't

[11:01:26.0000] <GPHemsley>
because this breaks the tests for anolis, and will likely cause unnecessary churn in specs (IIUC)

[11:01:38.0000] <gsnedders>
GPHemsley: The point is given a tree API that does preserve order, html5lib should roundtrip correctly. This means we can't blindingly reorder attributes.

[11:02:35.0000] <GPHemsley>
gsnedders: Well, I don't know the particulars, but it doesn't seem like whatever anolis is using is preserving order, either alphabetical or given

[11:02:46.0000] <gsnedders>
Probably we should make the filter have a native API in the serializer much as inject_meta_charset, etc., is

[11:03:23.0000] <gsnedders>
GPHemsley: Right, given a lot of tree APIs in Python you will get no defined order (in practice, it's the hash of a dict key)

[11:03:24.0000] <gsnedders>
GPHemsley: Right, given a lot of tree APIs in Python you will get no defined order (in practice, it's the hash of a dict key)

[11:04:44.0000] <GPHemsley>
gsnedders: So are you saying that you removed the alphabetical sorting from html5lib without replacing it with something that preserves order? (I don't really know how html5lib works.)

[11:05:34.0000] <gsnedders>
GPHemsley: By default, yes. (You have to realize html5lib doesn't have any tree format of its own — it just uses various existing XML toolchains, and they're what don't preserve order.)

[11:06:00.0000] <gsnedders>
GPHemsley: Optionally, you can preserve order. We do this for the html5lib test suite, for obvious reason (i.e., determinism).

[11:06:01.0000] <GPHemsley>
gsnedders: So you have to tell html5lib which tree format to us?

[11:06:01.0000] <gsnedders>
GPHemsley: Optionally, you can preserve order. We do this for the html5lib test suite, for obvious reason (i.e., determinism).

[11:06:04.0000] <gsnedders>
GPHemsley: Yes.

[11:06:18.0000] <GPHemsley>
Ms2ger: So I guess we need to do this?

[11:07:09.0000] <gsnedders>
GPHemsley, Ms2ger: can one of you file a bug on the AlphabeticizeAttributes filter not having a native API like inject_meta_charset?

[11:07:18.0000] <gsnedders>
Because that is an oversight.

[11:07:42.0000] <GPHemsley>
Ms2ger: I'll leave that to you, as I assume you have a better knowledge of the inner workings of html5lib.

[11:07:53.0000] <gsnedders>
(html5lib.serialize(my_document, alphabeticize_attributes=True) should work as an API basically)

[11:08:03.0000] <gsnedders>
Rather than having to use the long-hand API.

[11:08:33.0000] <gsnedders>
marcdm: Oh, someone mentioned that on IRC before.

[11:08:46.0000] <gsnedders>
marcdm: File a bug, as that probably shouldn't be the behaviour on Python 2.

[11:08:50.0000] <GPHemsley>
gsnedders: As an aside, do you have any idea why I wouldn't have gotten the right dependencies installed when I installed html5lib per the WHATWG wiki article?

[11:09:04.0000] <gsnedders>
What wiki article?

[11:09:23.0000] <GPHemsley>
sudo python setup.py install

[11:09:25.0000] <GPHemsley>
err

[11:09:26.0000] <GPHemsley>
ugh

[11:09:30.0000] <Ms2ger>
GPHemsley, that's an assumption I'm not sure is warranted :)

[11:09:36.0000] <GPHemsley>
http://wiki.whatwg.org/wiki/Anolis

[11:09:53.0000] <GPHemsley>
Ms2ger: Well, I defer to you anyway ;)

[11:10:02.0000] <Ms2ger>
I don't want to think about attribute order tonight, file an issue? :)

[11:10:04.0000] <gsnedders>
Why does that wiki article not just say to use pip for all of them?

[11:10:38.0000] <GPHemsley>
gsnedders: Probably for historical reasons

[11:10:49.0000] <GPHemsley>
gsnedders: (Which is not to say it shouldn't now.)

[11:10:53.0000] <Ms2ger>
pip? What's that? ;)

[11:11:28.0000] <Ms2ger>
And in particular, that'd require me to upload anolis to pypy rather more often, I'd think

[11:11:39.0000] <gsnedders>
Ms2ger: I meant for the dependencies.

[11:11:55.0000] <Ms2ger>
Python dependencies make me cry

[11:12:00.0000] <gsnedders>
Ms2ger: Do what the hell you want for Anolis, that's your project. ;P

[11:12:34.0000] <Ms2ger>
If you mean for lxml/cssselect, I blame... tantek?

[11:12:50.0000] <GPHemsley>
gsnedders, Ms2ger: https://github.com/html5lib/html5lib-python/issues/62

[11:12:53.0000] <gsnedders>
For html5lib it says you have to use it from git. I wonder why.

[11:13:02.0000] <gsnedders>
Did Anolis not work with 0.95?

[11:13:07.0000] <Ms2ger>
It did

[11:13:27.0000] <gsnedders>
GPHemsley: Cheers.

[11:13:38.0000] <Ms2ger>
(It used to refer to google code)

[11:13:43.0000] <gsnedders>
Now really I'm going away.

[11:14:38.0000] <Ms2ger>
/me waves

[11:16:40.0000] <GPHemsley>
Ms2ger: So now what do we do with this order filter thing?

[11:17:15.0000] <Ms2ger>
File an Anolis issue? :)

[11:17:31.0000] <marcdm>
gsnedders: issue #63 submitted on github

[11:31:04.0000] <GPHemsley>
Ms2ger: https://bitbucket.org/ms2ger/anolis/issue/16/force-sorted-attributes

[11:41:05.0000] <Ms2ger>
Thanks

[15:43:56.0000] <gsnedders>
jgraham: https://critic.hoppipolla.co.uk/r/103 has stopped tracking GitHub when I pushed a rebase (that I told Critic about) to GH.

[15:50:00.0000] <gsnedders>
jgraham: "Refusing to perform a review rebase via an automatic update"

[15:50:06.0000] <gsnedders>
jgraham: But I can't manually update it.

[16:59:01.0000] <marcdm>
gsnedders: not only did I post a bug report, I submitted a pull-request as well


2013-06-17
[18:24:25.0000] <TabAtkins>
heycam: You're spamming my inbox. >_<

[18:25:01.0000] <heycam>
TabAtkins, sorry. :( couldn't find a way to do the change in bulk all at once...

[18:25:11.0000] <TabAtkins>
Just ask MikeSmith!

[18:25:33.0000] <heycam>
ah

[18:25:41.0000] <heycam>
well, at most 24 more bugs for me to triage, so...

[18:32:28.0000] <heycam>
bug spam finished

[18:32:53.0000] <TabAtkins>
GPHemsley: How did you get the idea that :matches() only takes two arguments?  I don't see any possible way to do that, unless you're absorbing syntax by example only.

[23:53:49.0000] <zcorpan>
"The move towards the ReSpec is on purpose - it's the baseline for CG specs." ?

[23:55:41.0000] <jgraham>
gsnedders: Rebasing tracked branches works differently. In theory https://critic.hoppipolla.co.uk/rebasetrackingreview?review=103 should work, although I seem to be doing it wrong.

[23:56:53.0000] <Hixie>
zcorpan: o_O

[01:22:08.0000] <jgraham>
Bah. The spec got less good as documentation when the Location API moved into URL, because now I can't tell which bits are implemented and which bits are future possibilities

[01:22:09.0000] <jgraham>
Bah. The spec got less good as documentation when the Location API moved into URL, because now I can't tell which bits are implemented and which bits are future possibilities

[01:22:22.0000] <jgraham>
We really needc to get better at marking things

[01:22:26.0000] <jgraham>
Somehow

[01:43:27.0000] <SteveF>
MikeSmith: ping

[02:08:41.0000] <MikeSmith>
SteveF:  hey

[02:09:22.0000] <SteveF>
MikseSmith: hi can you add users to the w3c github repo?

[02:09:47.0000] <MikeSmith>
trash

[02:09:53.0000] <MikeSmith>
yeah

[02:10:25.0000] <MikeSmith>
(Autocomplete:

[02:10:42.0000] <zcorpan>
annevk: yt?

[02:10:54.0000] <SteveF>
MikeSmith: can I ask you to add a few for the html-api-map?

[02:18:16.0000] <MikeSmith>
yup

[02:38:31.0000] <SteveF>
MikeSmith: do you need only usernames? or email as well?

[02:39:03.0000] <MikeSmith>
SteveF: just the usernames

[02:41:51.0000] <SteveF>
MikeSmith: for https://github.com/w3c/html-api-map  can you add asurkov and jasonkiss -thanks and FYI we now have surkov on the editors team which is great

[02:42:58.0000] <MikeSmith>
SteveF: ah cool yeah, getting him on is great

[02:43:12.0000] <SteveF>
MikeSmith: yep

[02:51:09.0000] <MikeSmith>
SteveF: ok, ALex and Jason have push perms for that repo now

[02:51:24.0000] <SteveF>
MikeSmith: thanks!

[04:07:53.0000] <annevk>
zcorpan: yeah

[04:08:02.0000] <annevk>
/me curses [v1]

[04:11:09.0000] <zcorpan>
annevk: i was going to ask about Fetch and CORS-same-origin, context: http://lists.w3.org/Archives/Public/public-whatwg-archive/2013Jun/0073.html

[04:12:33.0000] <zcorpan>
annevk: if we want to spec the other way of doing it, a response would need an origin

[04:14:25.0000] <annevk>
so why do we want a different model there?

[04:14:37.0000] <annevk>
(interesting testcase btw)

[04:14:38.0000] <annevk>
(interesting testcase btw)

[04:21:13.0000] <gsnedders>
jgraham: I can't get that to trigger the rebase, even with having created a duplicate branch with a different name

[04:23:18.0000] <gsnedders>
jgraham: Oh, now I'm getting "failed to check conflicts status"

[04:23:19.0000] <gsnedders>
jgraham: Oh, now I'm getting "failed to check conflicts status"

[04:31:08.0000] <jgraham>
gsnedders: And this time I got an error message (yay!)

[04:31:28.0000] <jgraham>
It looks like critic needs to run as a user that git knows about

[04:32:34.0000] <jgraham>
I can fix, but maybe not right now

[04:36:06.0000] <zcorpan>
annevk: i don't think we want a different model there

[04:36:28.0000] <annevk>
zcorpan: I asked bz the same question in the thread

[04:37:04.0000] <annevk>
I think it'd be nice if we could explain things in terms of Response / CORS Response / Tainted Response (new tentative names)

[04:40:34.0000] <annevk>
jgraham: how did you tell before?

[04:40:45.0000] <annevk>
(re: Location)

[04:42:16.0000] <jgraham>
annevk: Well before there wasn't much new stuff in the spec, right?

[04:42:37.0000] <jgraham>
It is possible that I'm just confused ofc

[04:43:46.0000] <Onderhond>
Hey guys.

[04:43:47.0000] <Onderhond>
Is there any reason why the spec is so strict when it comes to nesting headers/footers in header/footers?

[04:44:40.0000] <annevk>
jgraham: there's not much new stuff now though

[04:44:41.0000] <annevk>
jgraham: there's not much new stuff now though

[05:21:28.0000] <jgraham>
Anyone from Moz. know who the right person to ask about http://lists.w3.org/Archives/Public/www-style/2013Jun/0216.html is?

[05:22:02.0000] <jgraham>
annevk: ^

[05:23:01.0000] <annevk>
jgraham: see pm, dunno if I can share his email address

[05:23:09.0000] <annevk>
in public

[05:23:17.0000] <jgraham>
OK

[05:23:46.0000] <jgraham>
Thanks

[05:23:46.0000] <jgraham>
Thanks

[05:46:22.0000] <codepython777>
anyone knows how to use html5 to validate a page source?

[05:47:33.0000] <webben>
codepython777: http://validator.nu/

[05:50:05.0000] <SteveF>
codepython777: or http://validator.w3.org/nu/ if you are concerned about conforming to HTML5 as against the whatwg living standard

[05:58:27.0000] <codepython777>
I'm looking to validate html in python or programmatically

[05:58:38.0000] <codepython777>
validator seems to be asking us not to validate on the webpage

[06:03:07.0000] <codepython777>
does anyone know if this can be done using html5-python? validation of html5?

[06:05:31.0000] <gsnedders>
codepython777: Someone implemented such a thing years ago, but it'll be massively out of date now and probably not work

[06:06:04.0000] <codepython777>
gsnedders: how do i programmatically take a source page (html 5) and validate it?

[06:06:38.0000] <gsnedders>
codepython777: I'd use the validator.nu code and call into the JVM either using Jython or through the JNI or possibly through some sort of RPC.

[06:07:13.0000] <codepython777>
gsnedders: you mean run it locally?

[06:07:44.0000] <gsnedders>
codepython777: Yeah. I mean, if you aren't requesting that much you could use it remotely.

[06:08:08.0000] <codepython777>
where is the code for it?

[06:08:54.0000] <gsnedders>
codepython777: http://about.validator.nu/ has stuff about the RESTful API as well as where the code is etc

[06:14:46.0000] <codepython777>
trying the api, thanks

[06:16:55.0000] <zcorpan>
Onderhond: what's the use case for such nesting?

[06:18:19.0000] <Onderhond>
Imagine a newslist in a fat footer?

[06:18:24.0000] <jgraham>
web-platform-tests needs some sort of basi formatting policy

[06:18:28.0000] <jgraham>
*basic

[06:18:36.0000] <jgraham>
Like no trailing whitespace

[06:18:48.0000] <jgraham>
And no tabs for indentation

[06:18:55.0000] <GPHemsley>
TabAtkins: Examples do play a big part in how I absorb syntax, yes. But I don't recall seeing anything else to contradict that, either. But, given your reaction, I must have missed something.

[06:21:41.0000] <zcorpan>
Onderhond: why wouldn't that just be a section in the footer?

[06:22:21.0000] <zcorpan>
jgraham: why?

[06:24:20.0000] <jgraham>
zcorpan: To decrease the cognitive burden of reading other people's tests

[06:24:37.0000] <jgraham>
Also, because trailing whitespace makes for messy diffs

[06:24:56.0000] <zcorpan>
ok

[06:37:42.0000] <Onderhond>
zcorpan: it is a section in the footer, but the section has it's own header and footer

[06:37:49.0000] <Onderhond>
the "read all" link is in the footer fe

[06:38:07.0000] <Onderhond>
*its

[06:38:45.0000] <zcorpan>
Onderhond: send that use case to the list

[06:40:09.0000] <Onderhond>
Will do!

[07:45:05.0000] <codepython777>
interesting: so validator.nu's own source does not validate!

[07:46:12.0000] <codepython777>
is there a page in the world that validates on validator.nu? :)

[07:50:30.0000] <miketaylr>
doubt it

[07:51:15.0000] <jgraham>
http://validator.nu/?doc=http%3A%2F%2Fvalidator.nu%2F

[07:51:29.0000] <jgraham>
"The document validates according to the specified schema(s) and to additional constraints checked by the validator."

[08:41:43.0000] <dglazkov>
good morning, Whatwg!

[09:45:49.0000] <TabAtkins>
GPHemsley: I'm just curious as to how you reached that point *at all*.  The very first sentence of that section says "taking a selector list as its argument".

[09:45:58.0000] <TabAtkins>
(It needs a proper grammar definition, I agree.)

[10:43:26.0000] <jgraham>
gsnedders: Retry your rebase?

[10:43:32.0000] <jgraham>
(might not work still)

[10:44:55.0000] <gsnedders>
jgraham: Still fails.

[11:26:57.0000] <gsnedders>
jgraham: The two recent reviews should be 30s jobs, FWIW

[12:12:03.0000] <GPHemsley>
TabAtkins: Without a formal definition, I skipped right to the example. I didn't really read the prose.

[12:14:45.0000] <jgraham>
gsnedders: Try again?

[14:16:41.0000] <Hixie>
who's a blog admin these days?

[14:18:44.0000] <Hixie>
GPHemsley: any idea what the "lb" guy is saying, on the wiki account request alias?

[14:52:29.0000] <GPHemsley>
Hixie: Nope. :)

[14:53:10.0000] <GPHemsley>
Hixie: (If I haven't addressed something after a few days, it's because I don't know the best way forward—or because I know my preference will differ from yours.)

[14:53:44.0000] <GPHemsley>
But I'm guessing he needs to update a bunch of things about his initials

[14:54:18.0000] <GPHemsley>
Hixie: (Which is to say, I tend to handle the easy ones quickly.)

[14:55:46.0000] <GPHemsley>
Basically: If you follow the instructions, I'll give you your username ASAP. If you don't, I let Hixie get around to it at some point.

[14:56:42.0000] <Hixie>
heh

[15:53:11.0000] <gsnedders>
jgraham: Rebasing seems to have changed, uh, nothing.

[15:53:37.0000] <gsnedders>
jgraham: Or rather it's now able to track it again, but the commits shown are wrong


2013-06-18
[23:41:17.0000] <zcorpan>
i don't understand the purpose of CSSConditionRule http://dev.w3.org/csswg/css-conditional/#the-cssconditionrule-interface

[00:41:11.0000] <jgraham>
gsnedders: Well it is possible I broke the review earlier. Or it is possible that you should ask jl :)

[00:59:42.0000] <zcorpan>
do events have a document associated with them?

[01:07:42.0000] <zcorpan>
they do

[01:07:50.0000] <zcorpan>
at least for the purpose of pageX

[01:15:38.0000] <zcorpan>
or maybe a window

[01:21:16.0000] <Ms2ger>
UIEvents, that is

[01:23:57.0000] <zcorpan>
MouseEvent

[01:53:18.0000] <zcorpan>
anyone feel like bikeshedding? https://www.w3.org/Bugs/Public/show_bug.cgi?id=17152

[02:19:52.0000] <zcorpan>
/me isn't sure what to make of https://www.w3.org/Bugs/Public/show_bug.cgi?id=14072

[03:06:19.0000] <hsivonen>
zcorpan: I much prefer your attitude in that bug report

[03:07:37.0000] <hsivonen>
zcorpan: that sort of thing, if added, is exactly the sort of thing that hasty WebKit ports would fail to get right and that would require clueful manual testing and, hence, go untested

[03:08:02.0000] <zcorpan>
hsivonen: i'm almost tempted to spec the attributes to return 24

[03:08:11.0000] <hsivonen>
even Firefox for Android gets things of that nature wrong

[03:08:26.0000] <zcorpan>
it would reduce fingerprinting

[03:08:45.0000] <hsivonen>
has Screen.colorDepth ever existed?

[03:09:04.0000] <jgraham>
Got to love the attitude of "it doesn't matter if anyone wants to use or implement this, because I believe it's The Right Thing To Do (TM)"

[03:09:58.0000] <hsivonen>
zcorpan: it's a shame that Firefox for Android uses 16-bit color on full color devices

[03:10:10.0000] <hsivonen>
/me wonders what Firefox for Android returns

[03:12:12.0000] <hsivonen>
zcorpan: Firefox for Android actually returns 16 for screen.colorDepth

[03:12:17.0000] <hsivonen>
which is actually right!

[03:12:38.0000] <zcorpan>
hsivonen: thanks

[03:12:40.0000] <hsivonen>
/me is surprised to see an API of this nature return true data

[03:13:27.0000] <hsivonen>
(16 being right for the *browser* but not the *device*, but the browser won't let you access the full capability of the device)

[03:15:57.0000] <jgraham>
hsivonen: Presumably if it's hardcoded to be 16, it's not hard to get the property right

[03:16:15.0000] <hsivonen>
jgraham: maybe

[03:16:20.0000] <jgraham>
If you had a mix of 16 and 24 and 12 and whatever, it would be much harder to get right

[03:16:33.0000] <hsivonen>
well, Gecko in general has a mix

[03:16:45.0000] <hsivonen>
but Gecko is forced to 16 on Android

[03:16:50.0000] <hsivonen>
which is sad in my opinion

[03:17:03.0000] <jgraham>
What's the reason?

[03:17:21.0000] <hsivonen>
jgraham: N800 was 16-bit, so things were made 16-bit

[03:17:41.0000] <hsivonen>
jgraham: then Fennec started running on 24-bit devices, but the N800 hard-coding persisted

[03:17:53.0000] <jgraham>
So it's "forced" in the sense that some of the code doesn't work on > 16bits?

[03:18:10.0000] <hsivonen>
jgraham: then changing to 24-bit would have regressed perf relative to the 16-bit status quo

[03:18:25.0000] <hsivonen>
jgraham: so switching to 24-bit is still actually a topic up for debate :-(

[03:18:53.0000] <hsivonen>
jgraham: it's forced in the sense that removing the forcing would regress memory footprint / perf

[03:19:06.0000] <jgraham>
OK, so it actually is forced

[03:19:49.0000] <jgraham>
More like #ifdef ANDROID; COLOR_DEPTH=16 than "huge swathes of code would need to be rewritten to support >16bits on android"

[03:19:57.0000] <hsivonen>
right

[03:23:11.0000] <zcorpan>
interesting

[03:23:28.0000] <zcorpan>
hsivonen: feel free to chime in on www-style

[04:12:36.0000] <gsnedders>
jgraham: Oh, I think I'm just misunderstanding how Critic handles it

[04:12:54.0000] <gsnedders>
jgraham: It's fine, I think

[04:13:04.0000] <gsnedders>
jgraham: But I would like to see all that reviewed :)

[04:35:22.0000] <jgraham>
gsnedders: Oh, you want me to run the review system *and* do the review? :p

[04:35:37.0000] <jgraham>
OK, I will look (not not now)

[04:44:20.0000] <karlcow>
Hixie: http://www.whatwg.org/specs/web-apps/current-work/multipage/association-of-controls-and-forms.html#attr-fe-autocomplete-tel

[04:44:44.0000] <karlcow>
ASCII digits and U+0020 SPACE characters, prefixed by a U+002B PLUS SIGN character (+)

[04:45:05.0000] <karlcow>
I was wondering if minus sign should be allowed too.

[04:45:37.0000] <karlcow>
so this +1-617-253-5702 and +1 617 253 5702  would be allowed

[04:45:49.0000] <karlcow>
https://tools.ietf.org/html/rfc3966

[04:46:37.0000] <karlcow>
/me has a tendency to type +1-617-253-5702 in his address books

[05:08:10.0000] <gsnedders>
jgraham: Yay!

[05:08:27.0000] <jgraham>
s/not not/but not/

[05:08:45.0000] <gsnedders>
jgraham: I guessed that :)

[05:09:05.0000] <jgraham>
Not sure what the "Yay" was for…

[05:12:42.0000] <gsnedders>
jgraham: It getting reviewed after, like, a month.

[06:01:42.0000] <zcorpan>
should an <svg> stay upright in vertical writing modes?

[06:02:32.0000] <zcorpan>
<img> (with svg in it) does. in blink/webkit, <svg> doesn't.

[06:02:32.0000] <SimonSapin>
zcorpan: what do <object>, <iframe> and <img> do?

[06:03:40.0000] <SimonSapin>
zcorpan: "The content of replaced elements do not rotate due to the writing mode:    images, for example, remain upright. …

[06:03:40.0000] <SimonSapin>
However replaced content involving    text (such as MathML content or form elements) should match the replaced    element's writing mode and line orientation if the UA supports such a    vertical writing mode for the replaced content."

[06:04:05.0000] <SimonSapin>
http://dev.w3.org/csswg/css-writing-modes/#writing-mode

[06:04:20.0000] <zcorpan>
SimonSapin: yeah. that doesn't clarify things much for me :-(

[06:04:38.0000] <zcorpan>
<svg> is an image

[06:04:39.0000] <SimonSapin>
I’d say ask fantasai

[06:04:51.0000] <zcorpan>
<svg> supports setting writing-mode of <text> etc

[06:09:31.0000] <zcorpan>
in IE10 <svg> is upright

[06:11:16.0000] <karlcow>
/me would say that the content of the SVG is a different context.

[06:12:00.0000] <karlcow>
>There is usually only one direction for all text throughout a book, but there are cases where horizontal writing mode is used in certain parts of vertically composed books (see [Fig.19]). Tables, captions for illustrations, running heads, and page numbers are usually composed horizontally in a page with a vertical writing mode. — http://www.w3.org/TR/2009/NOTE-jlreq-20090604/#en-subheading1_3

[06:38:39.0000] <jgraham>
Is inline <svg> replaced content?

[06:39:11.0000] <pdr|uk>
jgraham, I think so

[06:52:57.0000] <zcorpan>
jgraham: yes

[06:53:33.0000] <zcorpan>
hmm, in scrollIntoView i've assumed that the element has the same writing mode as the scrolling box, but that's not necessarily the case

[07:36:47.0000] <mounir>
Hixie: ping

[08:14:23.0000] <dglazkov>
good morning, Whatwg!

[08:14:33.0000] <Ms2ger>
G'day

[09:25:06.0000] <mounir>
Hixie: un-ping

[09:50:36.0000] <Ms2ger>
SimonSapin, I would approve of more mathematical proofs in specs ;)

[09:52:21.0000] <SimonSapin>
well, this one is not strictly required to define the feature

[09:54:51.0000] <SimonSapin>
Ms2ger: it’s a bonus so that the next person doesn’t spen a few hours getting the math wrong like I did :)

[09:55:04.0000] <SimonSapin>
s/spen/waste/

[10:07:22.0000] <SimonSapin>
Eh. The one time I write math on a mailing list, I get it wrong :)

[10:07:23.0000] <Ms2ger>
SimonSapin, sounds like bz wants to see the proof ;)

[10:44:13.0000] <marcdm>
Ms2ger, do u know anything about the testing framework used in html5lib-py?

[10:45:06.0000] <Ms2ger>
No

[10:45:38.0000] <marcdm>
Does anyone? :(

[10:52:47.0000] <marcdm>
Can anyone tell me if the different treewalkers support similar APIs?

[13:47:12.0000] <jgraham>
marcdm: Depends what you mean

[13:47:28.0000] <jgraham>
The point of treewalkers is that they all have the same external API

[13:47:39.0000] <jgraham>
But obviously different internal APIs

[13:48:06.0000] <jgraham>
Esentially they normalise the process of iterating a tree over several tree formats

[14:11:41.0000] <marcdm>
jgraham: I went looking at the code and found out how it/they work

[14:11:58.0000] <marcdm>
just created instances of them and poked around in ipython

[14:13:33.0000] <marcdm>
I was trying to write a test to expose a bug in html5lib-python ... but couldn't figure out how to reproduce it using another treewalker from etree

[15:35:03.0000] <Hixie>
TabAtkins: in case it dropped off your radar, https://www.w3.org/Bugs/Public/show_bug.cgi?id=22118


2013-06-19
[17:50:33.0000] <TabAtkins>
Hixie: Haven't gotten back to my desk yet. ^_^

[17:52:12.0000] <TabAtkins>
zcorpan: CSSConditionRule is what it sounds like - a superclass for all the condition rules.  There are two of them right now (@media, @supports), but there was a third (@document) that got punted to the next level.

[17:56:35.0000] <TabAtkins>
Is anyone aware of anything in the platform where some default action only occurs if there is no listener attached to the element?  That is, the "default action" is cancelled by default when an event listener runs?

[19:26:44.0000] <GPHemsley>
TabAtkins: It has been suggested that I ask you to also track how much web content sends style resources without any Content-Type header sent

[19:27:57.0000] <GPHemsley>
TabAtkins: In particular, to determine the cost of outright blocking/rejecting/ignoring CSS files that are served without a Content-Type (since CSS is difficult to sniff)

[19:30:14.0000] <GPHemsley>
TabAtkins: Though if you could track what types (or lack thereof) that style files are served as, that'd probably be an even bigger help

[21:21:59.0000] <annevk>
http://blog.tojicode.com/2013/06/a-tale-of-two-web-technologies.html#c2359382555491358783 is a pretty awesome comment on why we don't start from scratch.

[22:43:43.0000] <annevk>
TypeScript looks pretty exciting

[22:43:56.0000] <annevk>
http://channel9.msdn.com/Blogs/Charles/Anders-Hejlsberg-Steve-Lucco-and-Luke-Hoban-Inside-TypeScript-09

[23:14:08.0000] <zcorpan>
annevk: using origin as the boundary seems best, is my immediate reaction

[23:14:40.0000] <annevk>
zcorpan: same, but a large number of people seem to see that as a large limitation :

[23:14:41.0000] <annevk>
:/

[23:15:35.0000] <zcorpan>
i guess it is, too. but the Web works with it anyway

[23:23:12.0000] <annevk>
As in they're not willing to work with that limitation. I guess you still run into similar issues as to how to find the controller or event pages though so maybe sticking to origin only makes security boundaries clearer...

[23:43:19.0000] <MikeSmith>
"template content kidnapping" is a nice addition to the set of names for the various weird-ass parts of the parsing algorithm

[23:43:28.0000] <MikeSmith>
bravo Rafael

[23:43:34.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-webapps/2013AprJun/0945.html

[23:43:48.0000] <MikeSmith>
Hixie: seriously you should use that

[23:58:39.0000] <annevk>
MikeSmith: also for http://wiki.whatwg.org/wiki/Band_names maybe? :)

[00:05:04.0000] <TabAtkins>
annevk: Per-origin would kinda suck.  For example, I host several apps on my origin, and would like to host more.  I don't have the ability to set up subdomains, I thinkk.

[00:05:21.0000] <annevk>
TabAtkins: yeah agreed

[00:06:01.0000] <annevk>
TabAtkins: "scope of an app" sucks too

[00:06:19.0000] <annevk>
but meh

[00:07:23.0000] <TabAtkins>
Yup. :/

[00:08:52.0000] <annevk>
The other thing I (and others) have in mind long term is providing additional sandboxing for applications. E.g. being able to opt into not sharing your cache with URLs outside your applications.

[00:09:05.0000] <annevk>
And not sharing cookies and such either I suppose.

[00:09:51.0000] <annevk>
So <img src=resource> from within an app would potentially do a different request from one outside the app

[00:09:57.0000] <annevk>
(for instance)

[00:13:07.0000] <zcorpan>
maybe we don't need to prevent multiple apps per origin, but if there are multiple apps in one origin, they just share the security context?

[00:13:42.0000] <zcorpan>
i haven't followed discussions in this area so i might be saying useless things :-P

[00:15:05.0000] <zcorpan>
i think i've come to a state where the spec for scrollIntoView actually does something useful

[00:21:00.0000] <jgraham_>
MikeSmith: I fully support that naming convention. And not only because I managed to document a particularly confusing part of our code using relationship types (monogamy|polygamy|secret affair|just dating)

[00:25:20.0000] <MikeSmith>
hah

[00:25:28.0000] <MikeSmith>
nice

[00:27:17.0000] <Ms2ger>
jgraham, sounds like the thing that became the AAA in the spec

[00:28:19.0000] <jgraham>
Ms2ger: When I said "our code", I really meant "our test system"

[00:28:36.0000] <Ms2ger>
Ah

[00:31:51.0000] <zcorpan>
TabAtkins: yes, but the condition rules are different for all three...

[00:32:13.0000] <TabAtkins>
The verification rules for setting, yes.  On getting, it's just the text.

[00:32:17.0000] <TabAtkins>
Similar to properties.

[00:35:29.0000] <annevk>
zcorpan: maybe, origin could grow path information potentially

[00:35:37.0000] <annevk>
zcorpan: as an opt-in thingie

[00:35:53.0000] <zcorpan>
TabAtkins: yeah. i'm still unconvinced that it's a good idea to expose a new property on CSSMediaRule is a good idea

[00:36:37.0000] <zcorpan>
annevk: that sounds scary :-)

[00:37:01.0000] <annevk>
change always does? :p

[00:37:26.0000] <annevk>
seems worth exploring what we can do to improve matters

[00:37:47.0000] <zcorpan>
particularly when it involves security foundations

[00:39:34.0000] <TabAtkins>
There's nothing really magical about the dot-separated part that makes it more secure, except that it's hard to breach one by accident.

[00:40:23.0000] <TabAtkins>
Interesting thing about opting-in to a "subdomain" carved out of the path segments is that you'll only know about it if you visit something in that path.  If you first land elsewhere in the origin, you'll still be able to treat that path as same-domain.

[00:40:29.0000] <TabAtkins>
Unless it has to be sent in headers, perhaps?

[00:41:06.0000] <TabAtkins>
But then it'd just be something like an extra token sent in headers, and everything in an origin that returns the same token is in a sub-origin.

[00:41:28.0000] <TabAtkins>
(And the same resource can vary its origin over time by sending different tokens.)

[00:42:15.0000] <TabAtkins>
Well, maybe the token is just a (ancestral?) path segment.

[00:42:22.0000] <TabAtkins>
So you can't spoof it from elsewhere in the origin.

[00:43:30.0000] <zcorpan>
what would document.domain do when you've opted in to path origin?

[00:44:30.0000] <annevk>
I'd presume we'd disable that as part of opting in

[00:45:14.0000] <annevk>
TabAtkins: well yes, we need a way to identify whether a URL belongs to an application

[00:45:58.0000] <annevk>
TabAtkins: that could work with a manifest maybe, although that does not work for images per se, though I suspect the manifest could claim a URL space in some manner

[01:45:49.0000] <annevk>
zcorpan: btw, you might want to extract the "fetch a stylesheet" bits in CSSOM

[01:46:04.0000] <annevk>
zcorpan: to ensure they're identical for the various pieces that can do such a fetch

[01:46:46.0000] <zcorpan>
annevk: <?xml-stylesheet?> and Link: don't support crossorigin="" (should they?)

[01:47:37.0000] <annevk>
zcorpan: I'm not sure we should support Link: at all, but the crossorigin bit could be a parameter that xml-stylesheet simply doesn't supply

[01:47:51.0000] <zcorpan>
true

[01:48:12.0000] <zcorpan>
if gecko removes Link: i'll nuke it from the spec

[01:48:30.0000] <annevk>
I wonder if there's a bug on that

[01:48:43.0000] <zcorpan>
annevk: please file a bug (on the spec, about fetch)

[01:49:35.0000] <annevk>
https://bugzilla.mozilla.org/show_bug.cgi?id=748294

[01:49:41.0000] <annevk>
zcorpan: k

[01:55:59.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=14072 o_O

[02:06:25.0000] <zcorpan>
would be nice if anolis supported defining macros

[02:10:55.0000] <Ms2ger>
zcorpan, interesting idea... I'd probably take patches ;)

[02:11:39.0000] <zcorpan>
filed https://bitbucket.org/ms2ger/anolis/issue/17/should-support-defining-macros

[02:11:49.0000] <Ms2ger>
Thanks

[02:26:35.0000] <jgraham>
annevk: I dont know what you mean "incompatible with existing web application infrastructure"

[02:27:11.0000] <annevk>
jgraham: multiple applications deployed on the same origin is pretty common

[02:27:21.0000] <jgraham>
At the moment, for a web application, if you are using > 1 application per origin, they have to be mutually trusting

[02:27:47.0000] <annevk>
sure

[02:30:00.0000] <jgraham>
Well I would say that the current infrastructure strongly favours the one app, one origin model. Although I agree that sometimes people make things that look like multiple apps on a single origin. However I would argue that *infrastructure* wise, they are really the same app. It's just that the UX doesn't match the infrastructure

[02:42:49.0000] <grr>
367 new mails! these must be very interesting

[02:45:00.0000] <Ms2ger>
Sounds like an average day on public-html

[02:45:27.0000] <jgraham>
He said "new", not "useless"

[02:45:38.0000] <jgraham>
</rimshot>

[02:45:55.0000] <annevk>
"must be very interesting" does not follow from "new"

[02:46:23.0000] <jgraham>
Well no, from "new" we can't deduce intrestingness at all I guess

[02:46:32.0000] <annevk>
jgraham: depends on what you mean by infrastructure

[02:47:12.0000] <annevk>
jgraham: might very well be very different teams and very different code, just sharing a domain name

[02:47:53.0000] <jgraham>
Sure

[02:48:19.0000] <jgraham>
But from a web-infrastructure perspective they are making two parts of the same app

[02:49:10.0000] <annevk>
If you're just saying that currently we have an origin model that doesn't consider paths, well sure...

[02:49:17.0000] <annevk>
Not sure anyone is arguing against that :-)

[02:49:54.0000] <zcorpan>
Ms2ger: i guess this removes tail as well, in utils.py:         node.getparent().remove(node)

[02:50:34.0000] <Ms2ger>
:(

[02:51:08.0000] <Ms2ger>
Sounds like we need to add a utils.removeFromParent

[02:54:06.0000] <zcorpan>
hmm, or something before that fiddles with the tail. not sure if it's correct (looks wrong if node is the first child)

[02:54:08.0000] <zcorpan>
so yeah

[04:07:29.0000] <zcorpan>
i've managed to get the defining macro removed but the instances are untouched

[04:10:55.0000] <zcorpan>
Ms2ger: http://pastebin.com/MJQmA0zV - is it obvious what i'm doing wrong?

[04:12:35.0000] <zcorpan>
the code path from line 51 works but 56 does nothing, not even throw when i use a bogus ident

[04:13:48.0000] <Ms2ger>
What if you use data-anolis-use=something?

[04:13:53.0000] <zcorpan>
same

[04:15:39.0000] <Ms2ger>
Nothing obvious to me

[04:16:47.0000] <zcorpan>
ok. :-/ i guess i'll dump the code for now and get on with something else

[04:30:27.0000] <zcorpan>
jgraham: if you could have a look at https://bitbucket.org/ms2ger/anolis/issue/17/should-support-defining-macros at some point that'd be much appreciated :-)

[04:34:01.0000] <jgraham>
zcorpan: Sure

[04:34:09.0000] <zcorpan>
thanks

[06:08:44.0000] <asmodai>
Mmm, second time around FF 21 on Ubuntu 13 with only 4 tabs open starts to claim 3-4 GB resident memory :|

[06:33:03.0000] <zewt_>
what the hell

[06:33:21.0000] <zewt_>
why is whatwg.com/c covering the page I'm trying to view with an obnoxious survey popup :|

[06:38:12.0000] <Ms2ger>
Anyone around who knows a little about the AAA?

[06:40:49.0000] <gsnedders>
Ms2ger: A little.

[06:41:34.0000] <Ms2ger>
Enough to tell if https://bugzilla.mozilla.org/show_bug.cgi?id=884795 hits the O(n�)-loop-protection-limit?

[06:43:13.0000] <gsnedders>
I believe it does.

[06:43:37.0000] <Ms2ger>
Thanks

[06:44:30.0000] <gsnedders>
That it depends on the attribute sounds like a real issue though

[06:47:08.0000] <jgraham>
zewt: Hixie hates you

[07:54:29.0000] <Hixie>
zewt: if you dismiss it (or reply to it) once it won't come back for at least 30 days

[07:55:36.0000] <Hixie>
in other news: it finally happened, someone asked if i can put a Promise API in HTML. anyone got a tutorial on promises up yet so i can figure out what that means? i've intentionally not been following that discussion since i have no spare bandwidth these days.

[07:58:03.0000] <SteveF>
zcorpan: FYI new html set available http://webdevdata.org/

[08:05:23.0000] <Ms2ger>
Hixie, afaict, there's consensus on precisely nothing

[08:06:17.0000] <jgraham>
Ms2ger: Context?

[08:06:27.0000] <Ms2ger>
Promises

[08:06:29.0000] <jgraham>
Although I guess that statement is true in general\

[08:06:40.0000] <jgraham>
Ah

[08:06:46.0000] <jgraham>
Yeah

[08:06:53.0000] <Ms2ger>
In other news, the Navigator spec is crap

[08:06:59.0000] <jgraham>
The consensus seems to be "Promise all the things"

[08:07:43.0000] <jgraham>
(with some Promises design we can't agree on)

[08:15:18.0000] <jgraham>
Navigator spec?

[08:16:26.0000] <Ms2ger>
The part that only defines half the stuff that should be on Navigator

[08:19:19.0000] <jgraham>
Oh you mean the Navigator part of the HTML spec

[08:19:57.0000] <jgraham>
Isn't some of the other stuff hidden away in other specs that just extend the interface?

[08:20:10.0000] <jgraham>
That might not be the half you are missing though

[08:21:26.0000] <jgraham>
(e.g. geolocation, web performance, probably others)

[08:21:40.0000] <jgraham>
(navigator has become a fashionable dumping ground)

[08:22:31.0000] <jgraham>
(extending other spec's interfaces is pretty annoying)

[08:23:54.0000] <Hixie>
Ms2ger: file bugs if it's the navigator stuff in the whatwg spec that's crap

[08:24:17.0000] <Hixie>
jgraham: don't partial interfaces make it reasonable?

[08:24:38.0000] <Ms2ger>
Hixie, bz is filing

[08:24:53.0000] <Hixie>
damnit, that means it'll be insightful and hard to fix

[08:25:00.0000] <Ms2ger>
Hixie, you've got them in comments in the spec source, just not in the actual spec

[08:25:28.0000] <Hixie>
oh the things that are comented out are commented out intentionally, because not everyone implements them, and it's better to drop them than implement them.

[08:25:41.0000] <Ms2ger>
I don't expect us to drop them

[08:25:48.0000] <Hixie>
booo

[08:25:58.0000] <Ms2ger>
Especially if weblinkit support them too

[08:28:38.0000] <Ms2ger>
And even more if IE+weblinkit+Gecko have them, like appCodeName

[08:29:30.0000] <Hixie>
if they all have them, then the spec should have them

[08:29:38.0000] <Ms2ger>
Right :)

[08:30:07.0000] <Hixie>
that one is marked "redundant" apparently

[08:30:44.0000] <Ms2ger>
They all claim Mozilla

[08:31:17.0000] <Ms2ger>
Following the usual rule that you should claim to be WebKit for CSS and Gecko for DOM

[08:33:20.0000] <dglazkov>
good morning, Whatwg!

[09:08:45.0000] <jgraham>
Hixie: The unreasonableness is that you have to look in N different places to find out about an interface, and you don't know either the value of N or waht any of the places are

[09:16:45.0000] <Hixie>
jgraham: oh well that's just a problem with having multiple specs. i'm happy to add links to other specs that add things in the HTML spec, if that would help for that kind of thing.

[09:17:23.0000] <Ms2ger>
Also, has anyone been involved with the DNT spec?

[09:49:12.0000] <jgraham>
Hixie: Well I would either like a tool that can scrape all the specs and produce a complete IDL for the web platform, with links to the relevant specs for each part of each interface, or a rule that each interface is only defined in one place, possibly with links to other specs to define specific interface members

[09:50:08.0000] <jgraham>
I imagine people would moan about the latter option, even though it is convenient for authors and matches the likely setup of implementations

[09:53:26.0000] <Ms2ger>
/me has had such a tool at the back of his mind for quite a while

[09:53:40.0000] <Ms2ger>
But I never found a good python webidl parser

[09:53:45.0000] <Ms2ger>
Maybe I should try Gecko's

[10:07:18.0000] <TabAtkins>
Hixie: Don't listen to Ms2ger. Promises are done, tc39 likes what we've got, etc.  Anne is still bugfixing the algos, but that's it.

[10:07:40.0000] <Ms2ger>
We'll see

[10:07:54.0000] <TabAtkins>
Well, we'll all fight anyone who tries to change the core now.

[10:08:05.0000] <Ms2ger>
We'll see

[10:08:29.0000] <TabAtkins>
But anyway, Promises are easy as hell.  I should write a blog post about how to use them in specs.

[10:20:30.0000] <dglazkov>
TabAtkins: do you use the csswg mirror on github?

[10:20:41.0000] <dglazkov>
and if anyone does, how does it work?

[10:23:29.0000] <TabAtkins>
dglazkov: No, it's a readonly mirror.

[10:23:39.0000] <dglazkov>
kay

[10:23:48.0000] <TabAtkins>
If you want to use git, you have to use git-hg or one of the bridges to still talk to the hg repo.

[10:25:31.0000] <SimonSapin>
dglazkov: I use git locally, but still need to push to Mercurial

[10:25:47.0000] <SimonSapin>
so I don’t use the github mirror

[10:25:48.0000] <dglazkov>
SimonSapin: I see

[10:26:06.0000] <SimonSapin>
sometimes I push to my fork on the mirror to get review before changing an ED

[10:29:26.0000] <dglazkov>
SimonSapin: can you share examples?

[10:30:10.0000] <SimonSapin>
eh, I removed my fork. These change ended up in EDs

[10:31:10.0000] <dglazkov>
:)

[10:31:42.0000] <SimonSapin>
it’s still all a bit experimental

[10:31:50.0000] <SimonSapin>
I’d love to be able to make pull requests

[10:37:38.0000] <dglazkov>
the problem I am trying to solve now is being to able to do the proper review cycle for spec changes

[10:37:58.0000] <dglazkov>
if anyone has great ideas/solutions, I am all ears

[10:41:17.0000] <Hixie>
jgraham: well i'm all for the former (a script that magically generates one spec), but let's not let the perfect be the enemy of the good -- if we can, in the meantime, just include references to other possibly relevant specs, that seems like a good start.

[10:42:13.0000] <SimonSapin>
dglazkov: switch to github, drop mercurial, do pull requests

[10:42:28.0000] <Hixie>
TabAtkins: something just slightly more fleshed out than http://dom.spec.whatwg.org/#promises would be perfect

[10:42:43.0000] <SimonSapin>
dglazkov: nobody changes/merges anything to master they have written themselves

[10:42:59.0000] <TabAtkins>
Yeah, you don't want to figure out how to spec a promise from that spec.  ^_^

[10:43:04.0000] <Hixie>
TabAtkins: right now the dom spec just goes from an overview from geostationary orbit to pseudocode, which is a bit of a deep dive :-)

[10:43:12.0000] <SimonSapin>
this requires at least two editors per document, so they can review each other

[10:43:38.0000] <Hixie>
TabAtkins: i'm sure it's straight-forward, i just haven't been watching the discussion so i know nothing yet

[10:43:49.0000] <TabAtkins>
Digging my way out of work email at the moment, but I'll get to that shortly.

[10:43:52.0000] <Hixie>
TabAtkins: if you're around this afternoon, i can just come over and have you brief me in person if you like :-)

[10:44:01.0000] <TabAtkins>
That works too!

[10:44:15.0000] <TabAtkins>
(I should still write the post, but I can give you a high-bandwidth summary pretty quick.)

[10:44:29.0000] <Hixie>
cool, will dorp by

[10:44:50.0000] <Hixie>
drop even

[10:45:00.0000] <Hixie>
though "dorp" is probably appriopriate too

[10:45:29.0000] <TabAtkins>
^_^

[11:01:31.0000] <SimonSapin>
dglazkov: If WebApps shows the way in getting reviews for every edit (possibly through pull requests) that would be a great help to push the same in CSS WG

[11:01:51.0000] <Ms2ger>
I don't see that happening

[11:02:18.0000] <SimonSapin>
Ms2ger: in either WG? Well, we can at least start pushing

[11:02:50.0000] <Ms2ger>
I'm not sure it would be a good idea in any case

[11:04:43.0000] <SimonSapin>
At least start with having the tools in place for the editors who do want to get and make reviews

[11:09:32.0000] <jgraham>
Not sure about doing pre-commit reviews on all spec changes

[11:11:35.0000] <jgraham>
Reviews done well have a significant cost

[11:13:43.0000] <TabAtkins>
Yeah, also: we make tons and tons of edits.

[11:14:05.0000] <Ms2ger>
Also: nobody reviews specs unless they're implementing, and then they review the spec, not the edits

[11:14:22.0000] <TabAtkins>
And it would render workflows like what fantasai and I do (pair-edit the specs in a marathon sessions) impossible.

[11:14:42.0000] <TabAtkins>
Given how productive those are, I'd straight-up ignore anything that made it harder to do that.

[11:15:00.0000] <SimonSapin1>
maybe that’s too much, but starting from "reviews are good" it’s a way to track what’s been reviewed or not.

[11:16:14.0000] <SimonSapin1>
TabAtkins: the point is to get two sets of eyes, so pair editing is fine

[11:16:29.0000] <SimonSapin1>
it’s great, even

[11:16:29.0000] <Hixie>
i'd hope we already have far more than two pairs of eyes per spec

[11:16:44.0000] <Hixie>
a spec with only two people paying attention is probably not going very far

[11:16:48.0000] <jgraham>
Right, I think the valuable review for specs is when they get implemented

[11:16:49.0000] <SimonSapin1>
Hixie: well, I don’t know :)

[11:16:54.0000] <TabAtkins>
I'm not sure that's really right.  The point is to get an additional set of eyes that wasn't involved in teh original writing, and so isn't obviously subject to the same internal blindness as the author.

[11:17:07.0000] <TabAtkins>
While pair-editing does reduce the error rate, I'm not sure it qualifies.

[11:17:17.0000] <SimonSapin1>
TabAtkins: fair point

[11:17:24.0000] <jgraham>
and bz or jl or other two-letter people look at them

[11:17:54.0000] <Hixie>
jgraham: or you :-P

[11:18:01.0000] <Hixie>
or zcorpan...

[11:18:04.0000] <SimonSapin1>
Hixie: when I push changes to CSS Page Media, I’m not sure anyone looks at them until I bug fantasai about it

[11:18:11.0000] <Hixie>
the number of bugs you guys find

[11:18:14.0000] <Hixie>
is too damn high!

[11:18:17.0000] <Hixie>
:-P

[11:18:32.0000] <TabAtkins>
SimonSapin: That's because not many people are implementing Paged Media.

[11:18:36.0000] <SimonSapin>
and yes, it’s not a spec doing especially well …

[11:18:41.0000] <Ms2ger>
Hixie, the number of bugs in your spec is too damn high ;)

[11:19:00.0000] <Hixie>
SimonSapin: the problem isn't that you're able to edit the spec without review. the problem is that nobody is reviewing. pre-commit or post-commit wouldn't matter.

[11:19:13.0000] <SimonSapin>
ok

[11:19:30.0000] <Hixie>
SimonSapin: though i'll grant you that if you had to get a review pre-commit, it might stop you spending time on the spec at all, which, i guess, might be a good thing if nobody is implementing :-)

[11:19:32.0000] <SimonSapin>
still, tooling could be better

[11:19:37.0000] <Hixie>
Ms2ger: can't argue with that!

[11:19:47.0000] <Hixie>
/me likes the tooling the html spec has

[11:19:55.0000] <Hixie>
(http://html5.org/tools/web-apps-tracker)

[11:20:14.0000] <SimonSapin>
what are colors for?

[11:21:00.0000] <Hixie>
the redder, the more mature the part of the spec being edited

[11:21:06.0000] <Hixie>
gray is non-normative changes

[11:21:41.0000] <Ms2ger>
What I'd like is a way to attach test links to changes

[11:21:59.0000] <SimonSapin>
so red = danger when changing mature stuff?

[11:22:10.0000] <Hixie>
SimonSapin: basically

[11:22:29.0000] <Hixie>
Ms2ger: i usually put the tests either in the spec source or the bug that i mention in the checkin comment

[11:22:46.0000] <Hixie>
but sometimes my tests aren't really coherent enough for reuse, or there's just too many of them

[11:22:50.0000] <Ms2ger>
Hixie, no, I mean a pointer to a test in the spec's test suite

[11:22:54.0000] <Hixie>
oh, that kind of test

[11:23:05.0000] <Hixie>
yeah that'd be nice. i don't have a good enough handle on the html test suite at this time.

[11:23:12.0000] <Ms2ger>
A test that people that are not you look at :)

[11:23:17.0000] <Hixie>
right

[11:23:41.0000] <Ms2ger>
The status is that there's a repo and a bunch of pull requests

[11:23:43.0000] <Hixie>
i think anne's tool is in a repo somewhere if you want to try to hack that in, fwiw

[11:23:54.0000] <Ms2ger>
And that the HTMLWG claims everything is interoperable

[11:24:15.0000] <Ms2ger>
Yeah, I think I've even touched that code once :)

[11:24:32.0000] <Ms2ger>
But it'd need to store the links somewhere, I guess

[11:24:45.0000] <Hixie>
don't even get me started on the htmlwg's testing methodology

[11:24:59.0000] <Hixie>
i can provide a mysql db if you want one

[11:25:05.0000] <Hixie>
(though i'd recommend sqlite)

[11:25:11.0000] <Ms2ger>
Mm

[11:25:27.0000] <Ms2ger>
I think I used mysql once a decade ago or so

[11:25:39.0000] <Ms2ger>
/me usually avoids databases

[11:25:41.0000] <Hixie>
what i really want to do is a "blame" view of the spec that lets you drill down on a sentence nad work out what happened to it

[11:25:47.0000] <Hixie>
but that's a ton of work

[11:26:05.0000] <Hixie>
(a view of the spec parsed as html, not the source)

[11:26:14.0000] <Ms2ger>
That would be interesting

[11:47:55.0000] <jgraham>
Hixie: Which part of the W3C testing are you unhappy with? The part where they  ignore testing for rec track purposes, or the mpore general effort?

[11:48:46.0000] <Hixie>
the former

[11:48:52.0000] <Hixie>
the testing effort as a whole is admirable

[11:49:06.0000] <Hixie>
one of the best things the w3c is doign right now

[11:54:36.0000] <jgraham>
Yeah. So my feeling is that the marriage of Rec. track and testing is an uneasy one at best. Not that many players seriously care about spec status, and the ones that do are unlikely to produce great tests when their goal is "get the spec to Rec. asap". I would rather that people seperately got specs to Rec quickly for the lawyers (and we eventually figured out a living standard model that would keep them happy) and developed tests aiming to find bu

[11:54:43.0000] <jgraham>
... there aren't any.

[11:56:24.0000] <zcorpan>
SteveF: nice, thanks

[11:56:28.0000] <Ms2ger>
aiming to find bu[cut off]

[11:59:03.0000] <Hixie>
jgraham: yeah. lawyers in my experience would be happy with just going to REC every year, fwiw.

[11:59:26.0000] <Hixie>
not sure what it'll take to convince w3c

[12:00:59.0000] <jgraham>
Ms2ger: really? Sigh. "bugs rather than make out ..."

[12:01:29.0000] <Ms2ger>
I'm in violent agreement with all of you here :)

[12:15:30.0000] <gavinc>
So I think some of it has to do with the lovely bit of patent law that makes willful infringement create triple damages. Thus trying to make sure that patents are disclosed early enough that no one started an implementation that could be seen to be willfully infringing. Not sure that the "PROCESS" really makes that any better anyway

[12:17:07.0000] <gavinc>
That's the only reason I can imagine for tying the technical progress of a recommendation to the legal progress?

[12:17:25.0000] <Ms2ger>
I'm not sure how that relates

[12:20:29.0000] <gavinc>
"lawyers in my experience would be happy with just going to REC every year"

[12:20:51.0000] <Ms2ger>
Are you saying they wouldn't be?

[12:20:58.0000] <gavinc>
For established recommendations I would agree, not so sure for new ones?

[13:19:17.0000] <TabAtkins>
heycam|away: Bugging you to track addition of [MapClass].  ^_^

[13:47:32.0000] <TabAtkins>
annevk: Do you still think that Beacon should just be in the XHR spec or something?  https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/Beacon/Overview.html

[13:47:50.0000] <TabAtkins>
annevk: Since it's just a simple API for a lazy, no-response XHR.

[14:13:27.0000] <TabAtkins>
What are current thoughts on using NodeList?  Should we still be using that for returning array of Nodes, or should we just return arrays of Nodes in new code?

[14:16:09.0000] <Hixie>
make a new subclass of HTMLCollection and return that

[14:16:13.0000] <Hixie>
/me runs away giggling

[14:22:40.0000] <TabAtkins>
ಠ_ಠ

[14:27:23.0000] <Hixie>
seriously though, i dunno, the best current practice seems to always be changing

[14:27:54.0000] <Hixie>
pretty sure whatever you want you don't want it to be live, and you don't want it to be returned from an attribute that is on an object that itself is live

[14:28:12.0000] <Hixie>
beyond that, array or NodeList, not sure there's much difference these days

[14:36:19.0000] <TabAtkins>
Well, the big difference is that NodeList still isn't an Array subclass, so you have to do [].slice.call(nodelist) if you want to do a .map(), .filter(), etc. on it.

[14:56:09.0000] <aklein>
Hixie: question about PopStateEvent.state: is it meant to behave differently whether it was created via history.pushState() or new PopStateEvent()?

[14:56:58.0000] <aklein>
Hixie: the spec says (non-normatively) that state 'Returns a copy of the information that was provided to pushState() or replaceState().'; but normatively, it also says 'The state attribute must return the value it was initialized to. '

[14:57:21.0000] <aklein>
(looking at http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#popstateevent)

[15:00:15.0000] <TabAtkins>
zcorpan: Mind altering the preprocessor you use to generate the same ToC markup as the other CSS specs?  You're using the CSS stylesheet now, but the ToC looks ugly. ;_;


2013-06-20
[21:17:08.0000] <annevk>
From blink-dev: "Opera, I think, and <not-public>IE, with a developer release, soon</not-public>" <not-public> does not work that way :-)

[21:18:57.0000] <JonathanNeal>
What's the proper way to mark something like this up? "National Academy of Sports Medicine (NASM)"

[21:19:14.0000] <Hixie>
what's wrong with "National Academy of Sports Medicine (NASM)" ?

[21:19:23.0000] <JonathanNeal>
National Academy of Sports Medicine (<abbr>NASM</abbr>) ... or ... National Academy of Sports Medicine (<abbr title="National Academy of Sports Medicine">NASM</abbr>) ... or without the abbr or something else?

[21:20:13.0000] <JonathanNeal>
Hixie: I wasn't sure if all abbreviations should be marked up in abbr, and if so, how they should be marked up when next to their non-abbreviated form.

[21:20:22.0000] <Hixie>
there's a bunch of examples in the spec that cover this, see the <abbr> element section

[21:20:43.0000] <Hixie>
but note in particular where it says "Abbreviations do not have to be marked up using this element" and then gives some reasons why you might want to sometimes

[21:20:50.0000] <slowhands>
MASM

[21:20:59.0000] <slowhands>
FASM?

[21:21:03.0000] <slowhands>
all good things

[21:21:06.0000] <JonathanNeal>
indeed http://developers.whatwg.org/text-level-semantics.html#the-abbr-element

[21:22:45.0000] <JonathanNeal>
Actually, the examples in the link I just provided are very confusing to me.

[21:22:56.0000] <Hixie>
d'oh

[21:23:00.0000] <JonathanNeal>
They say the abbr element must contain an expansion of the abbreviation, but then go on to show examples without it.

[21:23:37.0000] <Hixie>
where does it say the first thing?

[21:23:39.0000] <JonathanNeal>
oh, the title attribute must, if present.

[21:24:06.0000] <JonathanNeal>
I was wrong. *echoes across the internet*

[21:24:10.0000] <Hixie>
ah ok

[22:05:27.0000] <annevk>
TabAtkins: it depends on what Beacon evolves into I think

[22:05:37.0000] <annevk>
TabAtkins: and how we design fetch()

[22:06:38.0000] <annevk>
TabAtkins: I think we haven't solved Array<Node> yet and nobody is working on it.

[22:35:17.0000] <annevk>
Sometimes I wish Gmail had merge thread

[22:54:37.0000] <annevk>
MikeSmith: https://www.w3.org/Bugs/Public/quips.cgi needs to be filled up with random stuff :-)

[23:08:18.0000] <MikeSmith>
annevk: indeed

[23:08:33.0000] <MikeSmith>
/me tries to figure out how to enable the quips feature

[23:08:58.0000] <MikeSmith>
enablequips

[23:12:57.0000] <MikeSmith>
all right friends, go to town: https://www.w3.org/Bugs/Public/quips.cgi

[23:13:13.0000] <MikeSmith>
please ignore the part that says "but not obscene or offensive, please"

[23:13:24.0000] <MikeSmith>
annevk: ↑

[23:20:12.0000] <annevk>
"Implement it, submit patches and hope nobody notices." :-)

[23:20:26.0000] <MikeSmith>
heh

[23:22:14.0000] <MikeSmith>
annevk: that quote is from tomasf btw

[23:25:46.0000] <annevk>
https://twitter.com/tomasf ?

[23:25:55.0000] <annevk>
/me doesn't see it there

[23:26:28.0000] <MikeSmith>
http://krijnhoetmer.nl/irc-logs/whatwg/20130614#l-223

[23:28:20.0000] <MikeSmith>
miketaylr "form a CG" was a pretty good response to that question too

[23:29:58.0000] <zcorpan>
anyone here able to merge https://bitbucket.org/ms2ger/anolis/pull-request/10/use-for-the-toc-in-w3c_compat-since-csswgs/diff ?

[23:31:16.0000] <zcorpan>
annevk: ^

[23:31:57.0000] <annevk>
oh man

[23:32:01.0000] <annevk>
can't we just patch CSS?

[23:32:19.0000] <annevk>
but uh, Ms2ger will have to do that

[23:33:20.0000] <zcorpan>
i guess default.css could be changed instead, i don't care either way

[23:33:41.0000] <zcorpan>
except changing anolis is now sunk cost

[23:33:56.0000] <annevk>
now I wonder whether HTML says anything about ToCs

[23:34:21.0000] <annevk>
zcorpan: not sure that's how that argument works :-)

[23:35:16.0000] <zcorpan>
annevk: what, sunk cost?

[23:36:47.0000] <annevk>
yeah

[23:37:40.0000] <zcorpan>
"In economics and business decision-making, a sunk cost is a retrospective (past) cost that has already been incurred and cannot be recovered." seems about right to me

[23:39:44.0000] <annevk>
What I question is using it as an argument for not doing something else instead

[23:40:04.0000] <annevk>
As that seems kinda counter to the whole point of the sunk cost fallacy

[23:41:35.0000] <zcorpan>
ah

[23:43:57.0000] <annevk>
MikeSmith: bug the UI team until they get fed up seems also reasonably effective

[23:45:57.0000] <MikeSmith>
annevk: you mean that longd*sc bug?

[23:46:15.0000] <annevk>
MikeSmith: uhuh

[23:47:55.0000] <MikeSmith>
DDOBR

[23:48:16.0000] <MikeSmith>
distributed denial of bug resolution

[23:48:49.0000] <annevk>
ah, http://www.urbandictionary.com/define.php?term=DDOBR didn't help

[23:49:41.0000] <annevk>
it's kinda like climate change denial really

[23:52:45.0000] <MikeSmith>
smells like victory

[23:54:03.0000] <MikeSmith>
all that's missing is the Wagner playing from the loudspeakers on the Hueys

[00:05:09.0000] <annevk>
Domenic_: I finally rewrote the introduction of https://developer.mozilla.org/en-US/docs/DOM_Levels

[00:05:15.0000] <annevk>
Domenic_: since nobody else picked that up

[00:07:58.0000] <MikeSmith>
Hixie: about http://html5.org/tools/web-apps-tracker?from=7990&to=7991 if you're going to say, "optionally with a caption, that is self-contained (like a complete sentence)" I think you should omit the comma and just say, "optionally with a caption that is self-contained (like a complete sentence)"

[00:08:34.0000] <MikeSmith>
oh wait I guess that's not what you actually mean

[00:57:33.0000] <annevk>
marcosc: yo yo

[00:57:38.0000] <annevk>
marcosc: thanks for the feedback

[00:57:47.0000] <marcosc>
np, thanks for the awesome spec :)

[00:58:06.0000] <annevk>
marcosc: I had this idea about maybe trying out that pair-spec-editing

[00:58:15.0000] <annevk>
marcosc: maybe in Toronto?

[00:58:25.0000] <marcosc>
sure, sounds good

[00:59:29.0000] <marcosc>
annevk: let me know which spec in particular so I can do some background research

[01:00:51.0000] <annevk>
marcosc: yeah, I need to make this more concrete for it to actually work I suppose :-)

[01:01:57.0000] <annevk>
marcosc: I mostly want a better balance between developer and implementer concerns, currently I'm mostly err'ing on the side of the latter so it'd be great to find ways to achieve both

[02:09:55.0000] <SimonSapin>
Are the data-* attributes defined on SVG elements?

[02:16:20.0000] <zcorpan>
SimonSapin: don't think so

[02:17:05.0000] <jgraham>
I seem to remember that someone wanted them to be, at least

[02:17:09.0000] <jgraham>
TabAtkins, perhaps

[02:17:30.0000] <zcorpan>
i seem to remember svg people wanting html features for years but nothing happens from what i can tell

[02:55:58.0000] <annevk>
Maybe we should uplift data-* to DOM?

[02:56:12.0000] <annevk>
Has anyone implemented Element.id / Element.className yet?

[03:01:10.0000] <annevk>
Hixie: re promises, now you know what the event loop thing feels like :-)

[03:02:59.0000] <jgraham>
heh

[03:51:41.0000] <zcorpan>
This section is non-normative.

[03:51:41.0000] <zcorpan>
XSLT processing should ...

[03:52:00.0000] <zcorpan>
http://www.w3.org/html/wg/drafts/html/master/templating.html#template-XSLT-XPath

[06:02:41.0000] <zcorpan>
hmm. i kind of missed that anne got married

[06:25:11.0000] <Ms2ger>
annevk: I should find my patch to implement Element.className/id...

[06:25:29.0000] <Ms2ger>
Anne got married?

[06:25:56.0000] <zcorpan>
https://twitter.com/annevk/status/347696720173486080

[06:26:41.0000] <zcorpan>
Ms2ger: can you merge https://bitbucket.org/ms2ger/anolis/pull-request/10/use-for-the-toc-in-w3c_compat-since-csswgs/diff pls?

[06:27:26.0000] <Ms2ger>
Where does the w3c_compat_class_toc thing come from?

[06:28:05.0000] <zcorpan>
it was there before. it's just a flag you can provide when invoking anolis

[06:28:45.0000] <Ms2ger>
Oh, hmm

[06:29:17.0000] <Ms2ger>
Fair enough, I guess

[06:29:35.0000] <Ms2ger>
But could you write a test? :)

[06:30:01.0000] <zcorpan>
yeah i guess

[06:33:23.0000] <GPHemsley>
/me did not interpret that tweet as involving Anne

[06:33:34.0000] <GPHemsley>
/me assumed a public bathroom

[06:35:49.0000] <gsnedders>
/me did what GPHemsley did

[06:37:56.0000] <GPHemsley>
annevk (or someone): Remind me: XSL and XSLT are different things?

[06:38:42.0000] <gsnedders>
XSL == XSL-FO, typically

[06:39:33.0000] <Ms2ger>
It's the thing weird Glenn uses to argue for silly stuff in CSS

[06:40:39.0000] <GPHemsley>
which one is used for styling?

[06:40:41.0000] <zcorpan>
Ms2ger: should the .options file use dashes or underscore?

[06:41:03.0000] <GPHemsley>
zcorpan: underscore

[06:41:13.0000] <gsnedders>
GPHemsley: XSL-FO

[06:41:29.0000] <GPHemsley>
gsnedders: So what is XSLT for then?

[06:41:33.0000] <gsnedders>
GPHemsley: XSLT has the vital T in it — it's merely a transformation language/

[06:41:52.0000] <gsnedders>
It transforms an XML tree into something else (typically another XML tree, but can be any byte stream).

[06:41:53.0000] <Ms2ger>
zcorpan, underscores, like in **kwargs

[06:42:21.0000] <GPHemsley>
gsnedders: Would you call it a script?

[06:42:26.0000] <GPHemsley>
[ing language]

[06:42:37.0000] <gsnedders>
GPHemsley: Well, it's Turing complete…

[06:42:58.0000] <GPHemsley>
hmm

[06:43:12.0000] <gsnedders>
GPHemsley: I mean, it's basically just a DSL to transform XML trees to other XML trees.

[06:43:58.0000] <gsnedders>
It's also amusing because nobody uses it client-side, thus Opera/Presto being broken with IRIs in any transformed document for over a decade before anyone noticed.

[06:44:12.0000] <GPHemsley>
gsnedders: And how do you use it on a page?

[06:44:27.0000] <gsnedders>
A PI on an XML page.

[06:44:55.0000] <GPHemsley>
oh, was that <?xml-transform ?> or something?

[06:45:11.0000] <zcorpan>
Ms2ger: toc-basic fails because the ref has "id=baz" rather than "id=baz?"

[06:45:21.0000] <zcorpan>
GPHemsley: <?xml-stylesheet?>

[06:45:22.0000] <GPHemsley>
zcorpan: We know :)

[06:45:26.0000] <GPHemsley>
zcorpan: You're lucky nothing else fails

[06:45:41.0000] <GPHemsley>
zcorpan: (Don't upgrade html5lib)

[06:46:08.0000] <gsnedders>
GPHemsley: Either what zcorpan said, or you use some API.

[06:46:30.0000] <GPHemsley>
zcorpan, gsnedders: So, there's no difference between how XSL and XSLT are called in a page?

[06:47:08.0000] <Ms2ger>
zcorpan, yeah, I need to figure that out

[06:47:24.0000] <gsnedders>
GPHemsley: I believe not. XSLT is a part of XSL, as is what is de-facto called XSL-FO.

[06:47:35.0000] <GPHemsley>
gsnedders: Well, that

[06:47:36.0000] <gsnedders>
(XSL-FO officially is just "the formatting section of XSL")

[06:47:44.0000] <GPHemsley>
gsnedders: Well, that's unfortunate.

[06:47:57.0000] <GPHemsley>
gsnedders: Is CSS Turing-complete, too?

[06:48:21.0000] <gsnedders>
GPHemsley: I believe not. HTML + CSS + a user to advance the tape is Turing complete.

[06:48:29.0000] <GPHemsley>
hmm

[06:48:50.0000] <gsnedders>
I don't believe there's any way to advance the tape without user interaction.

[06:48:51.0000] <GPHemsley>
gsnedders: So XSLT is a script called as a style? That's complex

[06:49:04.0000] <GPHemsley>
Or, rather, that complicates things

[06:49:40.0000] <maximmat>
Hey guys, I got a question I was wondering if you could help me with (not sure if this is the right place). I'm using Python 2.7, and when I import the html5lib module, it gives me a " File "C:\Python27\lib\site-packages\html5lib\html5parser.py", line 2, in <module>     from six import with_metaclass ImportError: No module named six" error. Any idea on what to do?

[06:49:56.0000] <gsnedders>
maximmat: Install six.

[06:50:17.0000] <maximmat>
and how do I do that?

[06:50:19.0000] <GPHemsley>
I guess I'm not the only one for which the html5lib dependencies didn't install

[06:50:28.0000] <gsnedders>
maximmat: How did you install html5lib?

[06:50:30.0000] <GPHemsley>
s/which/whom/

[06:51:12.0000] <maximmat>
downloaded from the github, installed from there

[06:52:12.0000] <GPHemsley>
maximmat: sudo python setup.py install?

[06:52:47.0000] <maximmat>
on windows, but yes

[06:53:14.0000] <GPHemsley>
gsnedders: For some reason, the setup.py script doesn't install dependencies

[06:53:54.0000] <gsnedders>
GPHemsley: On Python 2?

[06:54:10.0000] <GPHemsley>
gsnedders: Yeah

[06:54:17.0000] <gsnedders>
Or rather, I believe distutils never installs dependencies.

[06:54:44.0000] <maximmat>
So I have to use pip install or easy_install or something like that?

[06:55:09.0000] <gsnedders>
maximmat: You don't have to, but it'll be a lot less painful in general. Otherwise, go download six off PyPI and install it manually.

[06:55:23.0000] <maximmat>
Alright, thank you so much

[06:55:49.0000] <zcorpan>
hmm. i added a test, but if i modify the expected file so it should fail, it doesn't fail, so i guess it doesn't run?

[06:56:13.0000] <GPHemsley>
zcorpan: You have 3 files?

[06:56:18.0000] <zcorpan>
yes

[06:56:42.0000] <GPHemsley>
zcorpan: I usually start by leaving the target file empty

[06:57:49.0000] <GPHemsley>
zcorpan: Then you can see, for example, where in the test order it falls

[06:58:43.0000] <zcorpan>
does the test runner abort on first fail?

[06:58:50.0000] <GPHemsley>
I don't think so

[06:59:06.0000] <GPHemsley>
your source file has .src.html, right?

[07:00:44.0000] <zcorpan>
yeah

[07:01:04.0000] <GPHemsley>
and it's not running?

[07:01:05.0000] <zcorpan>
i fixed the toc-basic file so it now passes, and get a different error

[07:01:07.0000] <zcorpan>
ImportError: No module named w3c_compat_class_toc

[07:01:24.0000] <zcorpan>
so my options file is wrong

[07:02:02.0000] <Ms2ger>
I probably should have documented the format...

[07:02:37.0000] <Ms2ger>
{ "w3c_compat_class_toc": true }, I think?

[07:02:45.0000] <GPHemsley>
that's what I was gonna say :)

[07:03:38.0000] <zcorpan>
and now i'm getting a PASS

[07:04:04.0000] <zcorpan>
should i commit the fix for toc-basic too?

[07:04:37.0000] <Ms2ger>
The weird thing is that toc-basic doesn't fail for me :)

[07:04:53.0000] <GPHemsley>
Ms2ger: What version of html5lib are you using, anyway?

[07:05:24.0000] <zcorpan>
Ms2ger: does any other test fail?

[07:05:48.0000] <Ms2ger>
1.0b1 it seems

[07:05:54.0000] <Ms2ger>
test_tests/dfn_data-anolis-spec_collision.src.html

[07:06:05.0000] <Ms2ger>
Because of the attribute order thing

[07:06:29.0000] <GPHemsley>
Ms2ger: Right... with such a new version a whole bunch of tests fail

[07:07:39.0000] <zcorpan>
Ms2ger: is that the only one failing?

[07:07:57.0000] <Ms2ger>
For me, yes

[07:07:58.0000] <GPHemsley>
/me has 6 failures

[07:08:20.0000] <GPHemsley>
but I also probably have a later version of html5lib

[07:08:28.0000] <Ms2ger>
I need to dive in a bit deeper...

[07:08:34.0000] <Ms2ger>
Probably next week

[07:19:03.0000] <zcorpan>
ok pushed the test

[07:19:12.0000] <zcorpan>
see you next week

[07:54:14.0000] <GPHemsley>
Anyone else getting a phantom Google Notifications bell icon?

[07:54:57.0000] <GPHemsley>
hmm... maybe my Google JavaScript has stopped working...

[07:55:38.0000] <GPHemsley>
/me shrugs

[08:23:21.0000] <Domenic_>
Has anyone ever tried standardizing `outline-radius`? TabAtkins, you seem to know things about CSS specs? Mostly just curious.

[08:27:53.0000] <dglazkov>
good morning, Whatwg!

[10:06:12.0000] <TabAtkins>
annevk: According to Arv, for static arrays we should just use sequence<Node>.  I've suggested that in the appropriate thread (about the return value of document.elementsFromPoint()).

[10:07:57.0000] <TabAtkins>
zcorpan: Oh, I didn't actually look at our markup.  I thought you were just missing a class or something.  If it's a matter of ol versus ul, I can just go adjust the stylesheet.

[10:09:05.0000] <TabAtkins>
SimonSapin: The data-* attributes either have been added to SVG, or will be.  It was definitely approved to be so, at least.

[10:11:36.0000] <TabAtkins>
Domenic_: Dunno.  It's just in Moz, I think?

[10:44:51.0000] <Domenic_>
TabAtkins: yeah, it's a non-standard Moz thing. It's quite useful though, so was just wondering if anyone had tried making it official.

[12:20:34.0000] <aklein>
Hixie: g'afternoon. did you happen to see my question about PopStateEvent yesterday afternoon?

[13:32:28.0000] <aklein>
Hixie: filed as https://www.w3.org/Bugs/Public/show_bug.cgi?id=22420

[13:55:39.0000] <Hixie>
aklein: i didn't, sorry, i went off irc for a bit. looking at bug now.

[14:04:12.0000] <Hixie>
aklein: commented

[14:09:42.0000] <aklein>
Hixie: thanks, responded. happy to discuss here too.

[14:22:15.0000] <Hixie>
aklein: if you want prompt responses, here is best for you :-)

[14:22:59.0000] <Hixie>
aklein: i don't understand the implementation concern. Just implement these objects as you would any other event objects.

[14:24:16.0000] <aklein>
Hixie: since bringing up this concern started from implementation concerns, I suppose I ought to just explain the main one. it has to do with extensions

[14:24:45.0000] <aklein>
they operate in "isolated worlds", which have access to the same DOM but with different JS wrappers for each host object

[14:24:53.0000] <aklein>
that is, different from the "main world"

[14:26:06.0000] <Hixie>
heycam|away: ping

[14:26:09.0000] <Hixie>
aklein: ok

[14:26:10.0000] <aklein>
the trouble comes in if I do new PopStateEvent('popstate', {state: document}) in one world and then handle the event in another world

[14:27:11.0000] <Hixie>
/me mumbles something about extensions being the problem here

[14:27:28.0000] <aklein>
I don't entirely disagree

[14:27:39.0000] <Hixie>
doesn't this problem occur whenever you have an "any" IDL type that transfers stuff from one "world" to another?

[14:27:50.0000] <Hixie>
or any callbacks, or any dictionaries, or...

[14:28:26.0000] <aklein>
yes, it would, I think the ping to heycam|away is perhaps appropriate (for him to tell me I'm wrong :)

[14:28:41.0000] <Hixie>
oh i need heycam for entirely different reasons, but yeah :-)

[14:28:47.0000] <Hixie>
i don't think you're wrong

[14:28:59.0000] <Hixie>
i think this is a perfect example of why bz wants us to change the web security model

[14:29:13.0000] <Hixie>
to do checks on every property access

[14:29:30.0000] <Hixie>
rather than just at specific borders

[14:29:53.0000] <aklein>
note, though, that it's not an error to handle an event fired from one world in another

[14:30:05.0000] <Hixie>
anyway i think your answer is just, you need to protect any case where you have data that can cross boundaries

[14:30:12.0000] <aklein>
for "organic" PopStateEvents, we just deserialize the object twice, once for each world

[14:30:15.0000] <Hixie>
by creating new wrappers or whatnot

[14:30:52.0000] <Hixie>
what do you do if an extension calls showModalDialog() and passes some structured dialogArguments?

[14:30:54.0000] <aklein>
Hixie: my likely fix for this issue if the spec isn't changed is just to do the cloning for worlds other than the one that created the event

[14:32:10.0000] <Hixie>
is there no way for an extension to call into the page's own JS?

[14:33:17.0000] <aklein>
injecting a script tag is usually the way that's done

[14:33:27.0000] <aklein>
that obviously doesn't meet all use cases, but it meets a good number

[14:33:45.0000] <aklein>
/me looks at what we do for showModalDialog

[14:33:55.0000] <Hixie>
that's just adding new js, not calling into it, right?

[14:34:06.0000] <Hixie>
i mean, you can't inject a <script> that defines a function, and then call that function

[14:35:11.0000] <aklein>
right, there's no sanctioned way for an extension to interact directly with the page's own script (though there are a variety of holes at the moment, which I'm trying to close)

[14:38:20.0000] <Hixie>
yeah then i would just say yeah, close each hole :-)

[14:38:34.0000] <Hixie>
basically anywhere there's an "any" argument or attribute

[14:39:00.0000] <Hixie>
assuming all host objects have their own wrappers already, that should be it, though i may be missing some things off-hand

[14:41:53.0000] <aklein>
yeah, I'm fine with doing that myself, I just wondered if it might be worth speccing these events differently; events are a big opportunity for leakiness because of how dispatching works. but it sounds like this doesn't sound like a concern of the HTML spec to you (and the consistency argument isn't strong enough)?

[14:44:46.0000] <Hixie>
the consistency argument is in the other direction, imho

[14:45:01.0000] <aklein>
to your showModalDialog question, btw, the dialogFeatures are only set on the global of whatever world called showModalDialog

[14:45:17.0000] <Hixie>
same with return value?

[14:45:53.0000] <Hixie>
(re consistency, i mean, event interfaces don't try to enforce event semantics from one event fired by the UA on all events that use that interface)

[14:45:54.0000] <aklein>
yup, that's read directly off the global

[14:47:03.0000] <aklein>
I see. Well, at least that means we just need a rule for what "any" means across worlds and stick with that. CustomEvent is the other place where this came up.

[14:47:56.0000] <Hixie>
CustomEvent can probably just be dropped, no?

[14:47:58.0000] <Hixie>
i think that's dead

[14:48:21.0000] <Hixie>
oh i guess not

[14:48:23.0000] <Hixie>
nevermind

[14:49:05.0000] <aklein>
actually the biggest leak was EventHandler attributes, which I just fixed in a slightly different way last week

[14:50:34.0000] <Hixie>
EventHandler attributes?

[14:50:42.0000] <Hixie>
oh because you shared them across worlds?

[14:50:48.0000] <Hixie>
instead of having one set per world?

[14:50:51.0000] <aklein>
yeah

[14:51:03.0000] <Hixie>
extensions suck.

[14:51:06.0000] <aklein>
:)

[14:51:09.0000] <Hixie>
:-)

[14:51:22.0000] <aklein>
interestingly, it looks like HTML now requires that EventHandlers be callable?

[14:51:38.0000] <aklein>
does that mean it no longer supports { handleEvent: function() { } } as an EventHandler?

[14:51:55.0000] <Hixie>
i forget what the conclusion was on that

[14:52:06.0000] <Hixie>
but it was a heated debate

[14:52:12.0000] <aklein>
I was having some fun setting a <button> as its own onclick handler and then giving it a handleEvent method

[14:52:30.0000] <aklein>
the current spec uses [TreatNonCallableAsNull]

[14:53:28.0000] <Hixie>
webidl says "the only known valid use of [TreatNonCallableAsNull] is for the callback functions used as the type of event handler IDL attributes" in HTML, so i guess i'm doing the right thing here. :-P

[14:54:11.0000] <aklein>
ha

[14:54:57.0000] <aklein>
nice, Firefox is following the spec here

[14:55:04.0000] <aklein>
I wonder if Blink could get away with doing that too

[14:57:05.0000] <Hixie>
if you can't, the spec is probably wrong

[14:58:49.0000] <Hixie>
i wonder what the right technical term is for a property of a JS object that a script adds, rather than one that is under the management of the browser

[15:00:50.0000] <dekiss>
check ecmascript language specification :)

[15:17:02.0000] <dekiss>
if I add enter key html unicode code unit to the text node as text and if that text node is in element which has white-space: pre-wrap, will that make new line?

[15:20:26.0000] <Hixie>
wtf. why does http://www.hixie.ch/tests/adhoc/dom/level0/location/cross-origin/001.html sometimes fail in chrome.

[15:20:33.0000] <rafaelw>
Hixie: IE seems to through away content attribute values it doesn't like. Gecko/WK/Blink all keep (but ignore) them. Trying to figure out what the spec says about this.

[15:20:52.0000] <Hixie>
rafaelw: content attributes are never sanitised.

[15:20:56.0000] <rafaelw>
http://jsbin.com/aputuk/7/edit

[15:21:05.0000] <Hixie>
rafaelw: they can always be set, they can always be removed, they can always be read.

[15:21:17.0000] <Hixie>
rafaelw: (specced in DOM Core)

[15:21:25.0000] <rafaelw>
reference?

[15:22:05.0000] <Hixie>
hard to say what to reference, since it's the absence of any requirements to the contrary that define this :-)

[15:22:46.0000] <rafaelw>
I see.

[15:23:24.0000] <Hixie>
but e.g. see the spec for setAttribute()

[15:25:11.0000] <rafaelw>
Ok. Thanks.

[15:45:15.0000] <dekiss>
why this doesn't output value if the charset attribute alert(document.childNodes[1].childNodes[0].childNodes[1].charset);

[16:33:17.0000] <heycam>
Hixie, pong


2013-06-21
[17:25:14.0000] <TabAtkins>
heycam: !

[17:25:20.0000] <heycam>
TabAtkins, hi :)

[17:25:25.0000] <TabAtkins>
[MapClass]?

[17:25:31.0000] <heycam>
yes yes, I know :)

[17:25:34.0000] <TabAtkins>
^_^

[17:25:55.0000] <heycam>
/me still has a few days left in the week to make good

[17:26:07.0000] <heycam>
I saw the thread on www-style

[17:26:23.0000] <heycam>
(so I guess the implementation work is why you'd like it looked at soon)

[17:31:54.0000] <TabAtkins>
Yup!

[17:32:03.0000] <TabAtkins>
Was talking with the implementor a few minutes ago.

[17:32:52.0000] <heycam>
cool

[17:52:25.0000] <TabAtkins>
Hixie: Yo, are the W3C versions of PostMessage/SSE/WebWorkers/etc all still accurate?  Are they genned off of the current WHATWG spec, or what?

[19:58:35.0000] <annevk>
TabAtkins: sequence<Node> won't have .find and .findAll on it, so I think arv is wrong

[20:24:13.0000] <Hixie>
TabAtkins: i think the ones in dev.w3.org are, but i wouldn't bet on it

[20:24:32.0000] <Hixie>
TabAtkins: certainly the canonical material as far as i'm concerned is the material in whatwg.org/c

[23:49:16.0000] <MikeSmith>
damn who fuglied up the desktop notifications in the Chromium trunk, and why

[00:29:58.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=22422 is pretty ugly :/

[00:30:21.0000] <annevk>
Maybe Hixie already handles that for images in HTML... But that wouldn't cover CSS so I guess not

[00:44:48.0000] <annevk>
Doesn't seem to be handled. I wonder if the HTTP gods are aware of this.

[01:34:36.0000] <annevk>
hallvors: so, 304 is a very distinct case from redirects

[01:35:10.0000] <annevk>
hallvors: I'm sure the HTTP gods had some interesting reason to mix it in with them, but when it comes down to it, the logic for it is different and it needs to be handled separately

[01:35:27.0000] <hallvors>
you're right

[01:36:13.0000] <hallvors>
/me is curious about Anne's religion

[01:36:48.0000] <hallvors>
I should rather investigate how much of that header stuff is implemented

[01:37:46.0000] <hallvors>
/me #stilsleepy

[01:40:52.0000] <annevk>
hallvors: I don't believe in the HTTP gods, but they do exist

[01:42:09.0000] <hallvors>
X-Anne-Faith: HTTP-Conditional

[01:42:27.0000] <hallvors>
Well, at least Chrome supports the 304 stuff in the spec as written

[01:42:37.0000] <hallvors>
according to your test

[01:43:16.0000] <hallvors>
I'm a bit surprised Opera didn't support it according to that test - because we did some work on behaving like a "caching proxy" for XHR a while back

[01:43:43.0000] <annevk>
That bug was still open when I still had an account :)

[01:43:48.0000] <hallvors>
(but there may also still be some magic somewhere that makes requests with query less caching)

[01:44:18.0000] <hallvors>
hm.. I thought some work was done on it, maybe not enough to actually ship a fix though

[01:44:20.0000] <annevk>
It's a bit unclear to me what the spec says is actionable enough. I feel like maybe we should turn that into some kind of flag too...

[01:44:34.0000] <hallvors>
I should look up the bug

[01:44:51.0000] <annevk>
E.g. if you set header 1 or 2, set the "pass 304 through flag". If that flag is set, don't change 304 into 200.

[01:47:00.0000] <annevk>
Or more likely, if it's unset, change 304 into 200 :)

[01:49:25.0000] <MikeSmith>
http://m.itworld.com/361807/foxconn-hire-3000-support-firefox-os-and-software-development

[01:50:01.0000] <annevk>
wow, they went from .5-1 Mozilla to 3 Mozillas pretty quickly

[01:50:54.0000] <karlcow>
hallvors: CORE-37327

[01:50:59.0000] <karlcow>
maybe

[01:51:40.0000] <Ms2ger>
"It's looking for software engineers with skills in HTML5 operating systems"

[01:51:48.0000] <Ms2ger>
All 20 of them?

[01:55:46.0000] <miketaylr>
what if i have skills in 15 - 18 HTML5 OSes, do i get the job?

[02:00:18.0000] <annevk>
I think Ms2ger meant there's only 20 people with the relevant skills

[02:00:49.0000] <annevk>
Like that now decade old IBM job listing. Might as well list them by name

[02:02:26.0000] <Ms2ger>
/me thought of the same thing

[02:03:13.0000] <miketaylr>
boo, thanks for ruining my joke annevk

[02:03:41.0000] <karlcow>
:)

[02:06:24.0000] <hallvors>
karlcow: thanks - that's the fixed one, CORE-1033 is the still open one

[02:07:16.0000] <karlcow>
damned, I was not subscribed to this one. Not in my mail archive. :)

[02:51:44.0000] <SteveF>
hixie: appears the mutlipage and the one page of the whatwg spec are out of phase the multi-page is a day behind

[02:54:46.0000] <SteveF>
Hixie: appears the mutlipage and the one page of the whatwg spec are out of phase the multi-page is a day behind (once again with right nick)

[07:34:44.0000] <zewt>
hixie==hixie

[08:35:17.0000] <dglazkov>
good morning, Whatwg!

[09:00:16.0000] <TabAtkins>
annevk: What. The. Fuck.  Jeezus, the webidl situation up in here is *fucked up* if all I want is freaking array of nodes with useful functions.

[09:01:44.0000] <TabAtkins>
annevk: On the other hand, going with NodeList means you don't get .filter or .map.

[09:01:50.0000] <TabAtkins>
This shouldn't be a choice we have to make.

[09:41:52.0000] <gsnedders>
FYI: am migrating remaining html5lib-python issues from Google Code.

[09:42:14.0000] <Ms2ger>
I read "to"

[10:36:11.0000] <gsnedders>
Zero issues remaining on GCode.

[11:50:41.0000] <abarth>
I tried to write a proposal that would let you connect to a remote window in a similar way to how you can connect to a shared worker: http://wiki.whatwg.org/wiki/RemoteDocumentMessaging

[11:50:49.0000] <abarth>
how badly did I screw it up?  :)

[11:56:21.0000] <abarth>
i guess folks aren't around.  I'll ask on the mailing list

[12:04:13.0000] <Hixie>
remote in what sense?

[12:04:39.0000] <abarth>
not in the same unit of related browsing contexts

[12:04:58.0000] <abarth>
e.g., you don't already have a JavaScript reference to the window object

[12:05:03.0000] <Hixie>
why not just use a shared worker? that's what they're for :-)

[12:05:13.0000] <abarth>
they consume resources

[12:05:19.0000] <abarth>
e.g., memory

[12:05:50.0000] <Hixie>
hmm

[12:06:47.0000] <abarth>
as far as I can tell, all the mechanisms exist in the platform

[12:06:49.0000] <Hixie>
so much as to be prohibitive? what are y'all putting in these workers? :-P

[12:07:08.0000] <abarth>
consider the use case in the wiki page

[12:07:16.0000] <Hixie>
i'm not sure window.name would be the best way to identify a target, but other than that this could work

[12:07:25.0000] <abarth>
should the word processing site always spin up a shared worker just in case?

[12:07:38.0000] <Hixie>
if they're cheap, yeah

[12:08:03.0000] <Hixie>
if they're not, i'd have gone more for a "broadcast message to same origin pages" approach, where you tell everyone "hey anyone out there?" and see if anyone responds

[12:08:43.0000] <abarth>
why not broadcast to some name within an origin?

[12:08:51.0000] <abarth>
if you've got a large origin with lots of different stuff

[12:09:20.0000] <Hixie>
/me sits down rather than typing over the desk

[12:09:21.0000] <abarth>
you don't want them have to bring all the pages out of swap

[12:09:29.0000] <abarth>
just to send them a message they don't care about

[12:09:33.0000] <Hixie>
yeah, that's fair enough

[12:09:45.0000] <Hixie>
window.name isn't unique

[12:10:05.0000] <Hixie>
in particular, what you really want in the case you mentioned on the wiki page is to broadcast to other instances of yourself

[12:10:14.0000] <abarth>
yeah

[12:10:17.0000] <Hixie>
so window.name would be awkward

[12:10:30.0000] <Hixie>
but you could register to receive messages on a particular topic, for instance

[12:10:30.0000] <abarth>
we should use a different name

[12:10:46.0000] <abarth>
window.subscribeTo("the-topic")

[12:11:09.0000] <Hixie>
another solution might be to make shared workers much cheaper by having a way to delay the actual shared worker creation until such time as multiple connections are attempted

[12:11:10.0000] <abarth>
window.broadcastMessage("hi there", "the-topic") ?

[12:11:41.0000] <Hixie>
but i'm not sure the shared worker being expensive is that big a deal. wouldn't an editor want a worker to be doing all the work in the background anyway?

[12:11:47.0000] <Hixie>
in which case, making it shared is a non-issue

[12:11:58.0000] <Hixie>
brb, oqne sec

[12:16:49.0000] <abarth>
I agree with you that if shared workers were free, web sites could build this mechanism themselves

[12:16:53.0000] <abarth>
but they're not free :)

[12:18:07.0000] <Hixie>
back

[12:18:15.0000] <Hixie>
yeah, but in the case of an editor, isn't it a sunk cost anyway?

[12:18:29.0000] <abarth>
I'm not sure I follow?

[12:18:45.0000] <Hixie>
wouldn't an editor want to put its networking and stuff in a worker?

[12:19:47.0000] <abarth>
this feature request is coming from the tech lead of an editor, and he says wouldn't need a shared worker anymore if we had this feature

[12:20:01.0000] <abarth>
currently, his shared worker is eating 70 MB of memory on my machine :)

[12:20:04.0000] <Hixie>
why wouldn't they use a worker, that's weird

[12:20:11.0000] <Hixie>
wait, wtf is he doing in his worker

[12:20:18.0000] <Hixie>
just to send messages takes 70 MB?!

[12:20:26.0000] <Hixie>
how about we fix that, rather than adding more features

[12:20:28.0000] <Hixie>
that's absurd

[12:20:42.0000] <abarth>
the problem is that shared workers are long-lived

[12:20:49.0000] <abarth>
so they accumulate resources

[12:21:04.0000] <Hixie>
that's... not how that works

[12:21:19.0000] <Hixie>
what are they accumulating?

[12:21:20.0000] <abarth>
e.g., the object graph grows if you're not careful to drop all references, and the heap fragments

[12:21:27.0000] <abarth>
dunno

[12:21:35.0000] <Hixie>
all he's doing is sending messages back and forth, how hard can it possibly be

[12:22:05.0000] <abarth>
by the way, I currently have zero documents open :)

[12:22:59.0000] <abarth>
one of the nice properties of the web is that resources are scoped to tabs

[12:23:10.0000] <abarth>
so you naturally clear them out as you browse around

[12:23:22.0000] <abarth>
shared workers are persistent, so they tend to accumulate cruft

[12:23:44.0000] <Hixie>
maybe i'm not understanding how this is going to work. when you open three of these tabs on the same document, is one of the tabs going to get promoted to master tab or something?

[12:23:45.0000] <abarth>
which means they require much higher skill levels use correctly

[12:23:48.0000] <Hixie>
and the others act as slaves?

[12:24:05.0000] <Hixie>
it just seems silly to me not to use a shared worker in this case. it's made for this precise thing.

[12:24:23.0000] <Hixie>
if it doesn't work for this, then we've failed and should just scrap shared workers.

[12:24:51.0000] <Ms2ger>
Sounds like it's time to land the Gecko implementation, then

[12:25:17.0000] <Hixie>
if there's only one document open, and the shared worker is only used for managing multiple documents, then we can make the shared worker take zero resources until another tab attempts to connect to it

[12:25:33.0000] <Hixie>
by having an API that says "but don't actually create it until there's another client"

[12:26:17.0000] <Hixie>
which is to say, i understand that if there's just one client, having a shared worker is more expensive than necessary. but with multiple clients, especially N > 2, it seems just silly to avoid them.

[12:26:26.0000] <abarth>
I guess I don't understand why you need something as complicated as a shared worker just to do cross-document messaging

[12:26:42.0000] <Hixie>
i don't understand why you think shared workers are complicated

[12:27:29.0000] <abarth>
I just want to send a message from one document to another.  it seems unnecessary to make me write a third entity just to route the messages

[12:28:09.0000] <abarth>
should we make all cross-document messages flow through a shared worker?

[12:28:30.0000] <abarth>
why are cross-document messages in a single unit of related browsing contexts special and get to avoid the shared worker?

[12:28:56.0000] <abarth>
you agree it would be crazy to require a document to spin up a shared worker just to postMessage to one of its iframes, right?

[12:29:17.0000] <abarth>
or two iframes on the same page

[12:29:34.0000] <abarth>
so, why require a shared worker if the two iframes are in different windows?

[12:29:41.0000] <Hixie>
if it's 1:1, sure. but this use case isn't 1:1. it's n:n, with shared networking and shared document state, and with conflict resolution.

[12:29:47.0000] <Hixie>
that's not just 1:1 communication.

[12:30:32.0000] <abarth>
I don't understand how the "two iframes in the same window" case is different from the "two frames in different windows" case

[12:31:35.0000] <abarth>
my point is just that a shared worker is massive overkill for this use case

[12:31:45.0000] <Hixie>
i'm not saying it is, i'm saying this use case isn't that

[12:33:11.0000] <abarth>
let me connect this back to my original use case

[12:33:39.0000] <abarth>
there are two ways of opening word processing documents

[12:33:48.0000] <abarth>
you can go to the list of all your documents and open them

[12:33:57.0000] <abarth>
or you can make a new tab, and open it by pasting in the URL

[12:33:57.0000] <hober>
/me double click on it in Finder? :)

[12:34:06.0000] <abarth>
yes :)

[12:34:18.0000] <abarth>
in the first case, all the documents are in the same unit of related browsing contexts

[12:34:29.0000] <abarth>
and can communicate easily

[12:34:44.0000] <abarth>
in the second case, they can't because they don't have a script connection

[12:35:00.0000] <abarth>
so, just because they were opened by pasting in the URL, now they need to spin up a shared worker

[12:35:04.0000] <Hixie>
you're assuming that the user didn't open the list again to open the second doc

[12:35:14.0000] <Hixie>
(which i almost always do)

[12:35:31.0000] <abarth>
there are many ways they can end up without a script connection

[12:36:01.0000] <abarth>
but there are also cases where they share a script connection, depending on how you ended up opening the documents

[12:36:04.0000] <Hixie>
in the common case, there is no script connection. yes.

[12:36:21.0000] <Hixie>
what does it matter if there's a script connection or not?

[12:36:26.0000] <abarth>
why is a shared worker required in the second case but not in the first case?

[12:36:39.0000] <Hixie>
i'd use one if the first case too

[12:36:53.0000] <Hixie>
the shared worker makes this problem like a zillion times easier

[12:37:05.0000] <abarth>
in what way?

[12:37:17.0000] <abarth>
the shared worker seems like massively more complexity than I need here

[12:37:34.0000] <Hixie>
you don't have to implement a "slave" mode for the tab and "master" mode for the tab.

[12:37:36.0000] <abarth>
why do should I need to author a separate script just to route messages?

[12:37:43.0000] <Hixie>
you don't have to worry, e.g., about your "master" tab getting killed half-way through synchronising a complicated merge.

[12:37:56.0000] <abarth>
why do I have to elect a master?

[12:38:00.0000] <abarth>
i'm confused

[12:38:28.0000] <Hixie>
you want to try to do n-way edit merges using some sort of cooperative algorithm??

[12:38:51.0000] <Hixie>
who should be in charge of sending the edits to the server, if not a master tab?

[12:39:03.0000] <Hixie>
this is just begging for a master-slave organisation.

[12:39:13.0000] <Hixie>
which is exactly what shared workers are for.

[12:40:18.0000] <abarth>
you're saying that one needs to be in charge of persisting the document to stable storage

[12:40:42.0000] <abarth>
normally, the server is in charge of that

[12:40:56.0000] <abarth>
if you're online, this is just a latency optimization to avoid round-tripping with the server

[12:41:00.0000] <Hixie>
one of them needs to be in charge of telling the server what the edits are

[12:41:30.0000] <abarth>
well, the edits originate in one window

[12:41:42.0000] <abarth>
the same problem occurs if the two documents are open on two different computers

[12:42:03.0000] <Hixie>
or the same computer in different browsers, sure. but in that case, they're not coordinating.

[12:42:04.0000] <abarth>
just in that case, you'll tolerate more latency to round-trip with the server

[12:42:38.0000] <abarth>
you could imagine being able to message between browsers, but that's a bit of an obscure case

[12:44:13.0000] <abarth>
thanks for the feedback.  /me needs to get some lunch

[12:44:23.0000] <abarth>
I'll give it some more thought

[12:45:55.0000] <abarth>
https://code.google.com/p/chromium/issues/detail?id=161070   <--- If you're interested in this topic, you can CC yourself on this bug, which is the original feature request from the document editing folks

[12:47:17.0000] <Hixie>
separate from whether this use case should be solved that way, i don't a priori see anything wrong with a broadcast mechanism, fwiw.

[12:47:31.0000] <Hixie>
especially if we don't provide a zero-cost way to defer-start a shared worker.

[12:47:42.0000] <Hixie>
then i could see it as a way to coordinate when to start one, for instance.

[12:48:21.0000] <abarth>
this is related to the distributed locking proposal that fishd sent to the whatwg list a while ago

[12:48:33.0000] <abarth>
that's a sort of "one bit" coordination approach

[12:48:48.0000] <Hixie>
(not sure about using window.name, though. although maybe tha's better than having yet another registration mechanism.)

[12:49:51.0000] <abarth>
window.open("...", "the-channel")

[12:50:03.0000] <abarth>
has similar properties

[12:50:24.0000] <abarth>
in that you either create a new window or get back a way to communicate with an existing window of that name

[12:50:47.0000] <abarth>
but the security is screwed up because the names aren't scoped to an origin

[12:51:15.0000] <abarth>
it's the current "discovery" mechanism

[12:51:38.0000] <abarth>
but yeah, I'm not sure window.name is the right thing either

[12:51:52.0000] <abarth>
i'll be back in a bit after I get some lunch

[12:53:34.0000] <Hixie>
later.

[13:48:08.0000] <abarth>
I reworked the proposal to be a broadcast channel: http://wiki.whatwg.org/wiki/RemoteDocumentMessaging

[13:48:41.0000] <abarth>
there's still the question of whether a shared worker is a better fit for the use case, but I agree with you that the broadcast formulation is much cleaner

[14:04:46.0000] <TabAtkins>
abarth: Looks nice and simple!  At least, it seems to basically  just be a super-simple pre-provided Shared Worker that just forwards messages to all connected pages.

[14:05:30.0000] <TabAtkins>
In fact, maybe we can just do it like that?  Define a browser-provided (about:?) link that starts up a forwarding Worker.

[14:05:52.0000] <abarth>
you'd still want to have channel names

[14:06:00.0000] <TabAtkins>
Yeah, deifnitely.

[14:06:06.0000] <TabAtkins>
Bake that into the urls as an extension point.

[14:06:20.0000] <TabAtkins>
var port = new SharedWorker("about:bouncer/foo").port;

[14:06:53.0000] <TabAtkins>
You need domain magic to make this work, I guess.

[14:07:28.0000] <abarth>
the other nice thing about a channel name is that you can use a nonce

[14:07:34.0000] <abarth>
and have something like a private channel

[14:07:44.0000] <TabAtkins>
I'm agreeing with you. ^_^

[14:07:59.0000] <abarth>
sorry, I was just thinking outloud

[14:08:26.0000] <abarth>
I don't understand how this stuff interacts with transferable objects

[14:08:46.0000] <abarth>
like, does this support zero-copy sending of ArrayBuffers?

[14:08:55.0000] <TabAtkins>
Hm, neuterable objects wouldn't work, since it's multi-cast.

[14:08:59.0000] <TabAtkins>
Only things that could by copied.

[14:09:18.0000] <abarth>
so, can I send a MessagePort through the BroadcastChannel?

[14:09:27.0000] <abarth>
i guess only one listener would be able to receive it

[14:09:35.0000] <TabAtkins>
Those are copyable, no?

[14:09:42.0000] <TabAtkins>
Maybe not.

[14:09:45.0000] <TabAtkins>
/me doesn't know.

[14:58:18.0000] <TabAtkins>
abarth: You could have two types of bouncers - one that's multicast and accepts as many channels as you want, and one that's singlecast and only accepts two connections at a time.

[14:58:44.0000] <TabAtkins>
abarth: Dunno how to indicate that the connection limit has been hit - immediately send a message back saying that it's full?

[14:59:11.0000] <abarth>
that's sort of like the async lock proposal

[14:59:16.0000] <abarth>
except the limit is 1

[14:59:29.0000] <abarth>
so, you're suggesting something more like a semaphore

[14:59:36.0000] <TabAtkins>
Yeah, but when you're trying to do a zero-copy transfer, that's exactly what you need.

[15:01:03.0000] <TabAtkins>
Two pages in an origin can use a multicast bouncer to coordinate with each other and agree on a singlecast channel name to use for transfer communication.

[15:01:13.0000] <TabAtkins>
about:bouncer and about:transferer?

[15:03:43.0000] <TabAtkins>
Reusing SharedWorker literally might not be the best idea - it may still be better to provide dedicated constructors - but I think explaining them in terms of browser-provided shared workers is pretty interesting.

[15:04:23.0000] <TabAtkins>
If we did use dedicated constructors, I like your BroadcastChannel name, and we can augment it with a TransferChannel name for the singlecast variant.

[15:20:03.0000] <abarth>
i'd have to think about how the transfer channel would handle error cases

[15:20:25.0000] <abarth>
you might want something that just hands off a message port to the parties

[15:20:42.0000] <abarth>
e.g., MessageChannel

[15:21:19.0000] <abarth>
you could imagine giving one of the message ports to the broadcast channel

[15:21:26.0000] <abarth>
and the first one to grab it wins

[15:24:57.0000] <TabAtkins>
Hmm, yeah, that's just as correct I guess.

[15:25:23.0000] <TabAtkins>
You'd need some way to explicitly open the port, or something like that.

[15:25:31.0000] <TabAtkins>
First to attach an onMessage handler?

[15:25:59.0000] <abarth>
there's a start() function

[15:26:16.0000] <abarth>
so, you could claim it by doing that

[15:26:18.0000] <TabAtkins>
Ah, indeed there is.

[15:26:23.0000] <TabAtkins>
I'd missed that.

[15:27:22.0000] <TabAtkins>
So that's just a matter of adding a constructor to MessagePort, which is nice and elegant.

[15:27:43.0000] <TabAtkins>
Well, kinda.

[15:28:00.0000] <TabAtkins>
You need to get a pair of them.

[15:28:10.0000] <abarth>
that's what MessageChannel does for you

[15:28:16.0000] <TabAtkins>
So yeah, MessageChannel.

[15:28:17.0000] <abarth>
it has port1 and port2

[15:28:30.0000] <TabAtkins>
Oh, durp, I should really read this whole Workers chapter again.

[15:28:39.0000] <abarth>
the missing piece is a way to hand one of the ports to the remote document

[15:28:43.0000] <abarth>
without a script connection

[15:28:53.0000] <abarth>
my first draft went after that problem directly

[15:29:03.0000] <abarth>
but letting you trigger a "connect" event on the remote document

[15:29:10.0000] <abarth>
with the message port

[15:29:18.0000] <TabAtkins>
Yeah, and the BroadcastChannel works well.  I like it's elegance - the way it can be described as a browser-defined "bouncer" SharedWorker.

[15:29:27.0000] <abarth>
but that felt a bit like electing a leader

[15:29:37.0000] <TabAtkins>
Yeah.

[15:29:41.0000] <abarth>
since there's a distinguished instance that gets the connect event

[15:29:54.0000] <abarth>
and if you're going to elect a leader, you probably should be using a shared worker

[15:30:00.0000] <abarth>
so the leader can outlive all the followers

[15:30:16.0000] <abarth>
BroadcastChannel is more symmetric

[15:30:42.0000] <TabAtkins>
Yup.

[15:40:06.0000] <TabAtkins>
abarth: Problem with just transferring the port is that it gets neutered as it is transferred.  You can't have the broadcast channel send it to multiple other senders.

[15:40:58.0000] <abarth>
Maybe BroadcastChannel could allow transferrable if there's only one listener?

[15:41:11.0000] <abarth>
so, you could agree with someone what channel name to use

[15:41:35.0000] <abarth>
and then hop onto that channel

[15:42:03.0000] <abarth>
e.g., one channel is used for signaling and the other is used for data

[15:42:08.0000] <TabAtkins>
That does mean that it's possible to be DOSed by something else on your origin, but that's probably a sufficiently okay problem - you can already have lots of bad things happen from your own origin.

[15:42:31.0000] <abarth>
if they want to DOS you, they can just make a sync XHR :)

[15:42:35.0000] <abarth>
they don't even have to be in your origin

[15:43:01.0000] <TabAtkins>
I meant that something else on your origin, which knows your signaling channel, can listen in and connect to any ports you attempt to use for data.

[15:43:14.0000] <TabAtkins>
But they're already within your origin, so you're screwed.

[15:44:33.0000] <TabAtkins>
And I don't see how that's possible to solve without a direct connection anyway.  You *must* use a spoofable token to identify the channel, precisely so that the other side can spoof it.

[15:58:41.0000] <abarth>
TabAtkins: you could make up a nonce on the server

[15:58:49.0000] <abarth>
and send it to the two pages

[15:58:56.0000] <abarth>
and they could use it as the channel name

[15:59:22.0000] <TabAtkins>
Sure, there are ways to avoid it if you bring in a trusted third party.

[15:59:29.0000] <TabAtkins>
Anyway, I dont' think it's a real concern.

[15:59:38.0000] <TabAtkins>
If an attacker is inside your origin, you're already screwed.

[15:59:45.0000] <abarth>
I wonder if NamedChannel would be a better name

[15:59:56.0000] <TabAtkins>
Hm, maybe.

[15:59:58.0000] <abarth>
you might even subclass MessageChannel

[16:00:07.0000] <abarth>
and the ports could null themselves out as they were grabbed

[16:01:36.0000] <abarth>
i guess that doesn't work as well for the broadcast case

[16:01:40.0000] <abarth>
and there's a race condition

[16:01:53.0000] <TabAtkins>
Yeah.

[16:02:21.0000] <TabAtkins>
You'd have to agree on which port each should take.


2013-06-22
[20:35:47.0000] <zewt>
what the

[20:35:58.0000] <zewt>
http://www.gamefaqs.com/snes/588331-final-fantasy-v/faqs/30040 <- did somebody write a spec for ff5 combat

[05:01:37.0000] <Goboka>
/me slaps [[zzz]] around a bit with a large trout

[05:04:09.0000] <gallant>
where can I see complete Unicode HTML entities list?

[05:49:52.0000] <Redface>
http://www.htmlentities.com/html/entities/

[05:50:16.0000] <Redface>
check out this site to see html entities. it will be helpful :)

[14:46:12.0000] <gallant>
is there another way to make img src local file except with file api?


2013-06-23
[20:21:10.0000] <annevk>
abarth: RemoteDocumentMessaging can be done through localStorage

[20:21:34.0000] <abarth>
yes, but that has bad performance

[20:21:42.0000] <annevk>
abarth: not exactly ideal because of synchronous IO, but might be worth studying how people use that today

[20:22:02.0000] <annevk>
abarth: I added a pointer to the wiki which has further pointers

[20:22:10.0000] <abarth>
thanks

[20:23:47.0000] <annevk>
hahaha: http://www.google.com/patents/US7730419

[20:24:12.0000] <annevk>
http://www.google.com/patents/US7426699 if you can patent that kind of stuff... geez

[20:30:19.0000] <abarth>
annevk: do you other thoughts on the proposal?

[20:31:38.0000] <annevk>
abarth: I'm a bit worried that we made workers so costly and not good enough API-wise that we're instead inventing things like event pages and such (for which I imagine this is meant as well) that do not exactly lead us towards a better parallel world

[20:33:05.0000] <annevk>
abarth: it's kinda orthogonal in a way I suppose, but we should really start figuring something out there

[20:33:12.0000] <abarth>
i'm not sure I understand.  i guess you're saying that you'd prefer if we found a way for workers to use less resources?

[20:33:39.0000] <abarth>
event pages seem somewhat unrelated to me

[20:33:55.0000] <abarth>
we could make shared workers have a "wake me up when needed" semantic

[20:34:38.0000] <annevk>
Well, event pages need a way to communicate with other windows... I was kinda hoping event pages for the web could just be workers, but it seems like workers are not ready yet for that :/

[20:35:13.0000] <abarth>
why can't event pages just use message ports, like workers?

[20:35:28.0000] <abarth>
i guess it depends on how they're created

[20:36:04.0000] <abarth>
because the worker is created by a page, the page has a JS interface that has a message port hanging off of it

[20:36:23.0000] <abarth>
so, it's more about the creation mechanism than about unicast versus multicast

[20:36:49.0000] <annevk>
fair enough, but I thought workers was our solution for things not running on the main thread

[20:37:18.0000] <abarth>
in Chrome, we have many main threads, one per process

[20:37:30.0000] <annevk>
sure

[20:37:48.0000] <abarth>
BroadcastChannel lets them communicate

[20:38:02.0000] <abarth>
iirespective of event pages

[20:38:25.0000] <annevk>
I understand all that. As I said, my concern is kinda orthogonal

[20:38:40.0000] <annevk>
Something like broadcastchannel makes sense to have.

[20:38:40.0000] <abarth>
ah ok

[20:39:31.0000] <abarth>
my understanding is that reason the extension folks chose event/background pages rather than workers

[20:39:47.0000] <abarth>
is because they wanted them to be able to build DOM

[20:39:57.0000] <abarth>
and present that DOM in UI surfaces, like balloons

[20:40:15.0000] <abarth>
I'm not sure how many extensions actually do that

[20:40:33.0000] <abarth>
in that sense, they're on the main thread

[20:40:46.0000] <annevk>
What I heard was 1) more APIs available 2) workers require too much resources

[20:41:07.0000] <abarth>
workers require fewer resources than HTML documents

[20:41:16.0000] <abarth>
more API -> the ability to build DOM

[20:41:40.0000] <annevk>
I think the way workers are implemented they're more costly than running another thing on the main thread.

[20:41:54.0000] <annevk>
Which is rather sucky :(

[20:41:55.0000] <abarth>
in chrome or in other browsers?

[20:42:03.0000] <abarth>
that was true in the original implementation in chrome

[20:42:07.0000] <annevk>
Both Chrome and Firefox?

[20:42:09.0000] <annevk>
Oh

[20:42:09.0000] <abarth>
but we've fixed that :)

[20:42:24.0000] <annevk>
I think we might have regressed

[20:42:32.0000] <abarth>
we didn't use to be able to run multiple JS threads in the same process

[20:42:39.0000] <abarth>
but we can now

[20:42:51.0000] <annevk>
cool cool

[20:43:10.0000] <abarth>
dedicated workers, however, are very rarely used

[20:43:19.0000] <abarth>
essentially all workers are shared workers

[20:43:30.0000] <abarth>
at least according to usage stats

[20:43:44.0000] <annevk>
interesting, I think we might have just landed support for shared workers

[20:44:27.0000] <annevk>
hmm I need to go, I think it's boarding time

[20:44:31.0000] <annevk>
thanks for the chat

[20:44:35.0000] <abarth>
have a good flight

[20:44:41.0000] <abarth>
thanks for the feedback

[10:29:41.0000] <zcorpan>
Hixie: should this be marked as FINGERPRINT?:

[10:29:44.0000] <zcorpan>
+   <li><p>Let <var title="">message</var> be a user-agent-defined

[10:29:44.0000] <zcorpan>
+   string describing the error in a helpful manner.</p></li>

[10:30:55.0000] <zcorpan>
(maybe that should be fleshed out so we get interop on the message?)

[11:16:51.0000] <GPHemsley>
annevk: Please review: http://wiki.whatwg.org/index.php?title=Contexts&oldid=9195

[11:19:43.0000] <GPHemsley>
annevk: Actually, better link: http://wiki.whatwg.org/index.php?title=Contexts&diff=9195&oldid=9180

[11:33:49.0000] <GPHemsley>
Hixie: Can you elaborate on how javascript: URLs are used in <img> elements? http://www.whatwg.org/specs/web-apps/current-work/#javascript-protocol

[12:08:39.0000] <gsnedders>
jgraham: I suspect r/103 is just you having missed comments on a issue you raised


2013-06-24
[23:33:29.0000] <TabAtkins>
zewt: You should see the spec for FFTactics, particularly the interactions of Quick and reaction abilities with the turn order.

[00:29:52.0000] <asmodai>
Does Firefox' "show windows and tabs from last time" funtion the same as Chrome's "Continue where I left off", i.e. session cookies are kept after a browser restart?

[00:31:22.0000] <zcorpan_>
data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="-1 -1 2 2"><style>svg { background:url("") } </style><circle r="1"/></svg>

[00:32:23.0000] <heycam>
zcorpan_, that's fun

[00:32:40.0000] <zcorpan_>
looks like presto and gecko don't use the background

[00:32:49.0000] <heycam>
zcorpan_, doesn't seem to work in Firefox, but I wonder if the <svg> were inline whether we paint backgrounds there?

[00:32:55.0000] <heycam>
zcorpan_, oh but then url("") wouldn't be an SVG document anyway

[00:35:24.0000] <asmodai>
Mmm, so if we cannot use the mark session cookie to be deleted on browser restart, I wonder how we need to deal with this for our certificate/token functionality.

[00:42:23.0000] <zcorpan_>
does ie10 still not support data urls from the address bar?

[00:42:30.0000] <zcorpan_>
or is that on purpose?

[01:07:37.0000] <MikeSmith>
hsivonen: fyi all the w3c vnu backends are now running under Java7

[01:08:00.0000] <MikeSmith>
for the last day or so

[01:08:11.0000] <MikeSmith>
with no apparent problems so far

[01:22:12.0000] <MikeSmith>
zcorpan_: about http://lists.w3.org/Archives/Public/public-whatwg-archive/2013Jun/0174.html you're already working on a spec that relates to?

[01:22:25.0000] <MikeSmith>
(ViewportObserver API proposal)

[01:22:53.0000] <MikeSmith>
oh CSSOM View?

[01:22:57.0000] <zcorpan_>
MikeSmith: right

[01:23:00.0000] <MikeSmith>
ok

[01:24:03.0000] <MikeSmith>
is there some overlap with the thing in the Web Performance WG?

[01:24:09.0000] <MikeSmith>
https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/ResourcePriorities/Overview.html

[01:25:15.0000] <zcorpan_>
maybe that's a different solution to the same use case

[01:25:49.0000] <MikeSmith>
ok

[01:26:05.0000] <zcorpan_>
i haven't looked into it yet

[01:26:16.0000] <zcorpan_>
i wonder what <svg lazyload> is supposed to do

[01:26:30.0000] <zcorpan_>
<script lazyload>? please no

[01:26:39.0000] <MikeSmith>
man the name "Resource Priorities" for that spec seems like not such a great choice

[01:26:53.0000] <MikeSmith>
oh I though it was just for images

[01:27:20.0000] <MikeSmith>
have they scope-creeped it out to everything else already?

[01:27:26.0000] <zcorpan_>
seems so

[01:27:32.0000] <MikeSmith>
geez

[01:28:08.0000] <zcorpan_>
or just applied it to all the tags that load something, and some others too

[01:28:18.0000] <MikeSmith>
oh man

[01:28:46.0000] <MikeSmith>
just now seeing the actual <script src="Analytics.js" lazyload ></script> in there

[01:29:34.0000] <MikeSmith>
974 ftw

[01:31:52.0000] <MikeSmith>
I don't remember anybody actually ever describing a problem around this for anything other than images

[01:37:39.0000] <zcorpan_>
what's the current thinking on naming of methods with both singular and plural forms?

[01:38:51.0000] <zcorpan_>
e.g. elementFromPoint (already exists) and elementsFromPoint

[02:18:11.0000] <annevk>
GPHemsley: I think the problem http://wiki.whatwg.org/wiki/Contexts has now is that <object> is always object-src per CSP. So either HTML has something special for it sniffing-wise, or the table is simply wrong.

[02:41:34.0000] <annevk>
Ms2ger: https://bugzilla.mozilla.org/show_bug.cgi?id=444380

[02:44:52.0000] <zcorpan_>
annevk: you should have said that you have authority because you're on the TAG :-)

[02:45:15.0000] <zcorpan_>
why is memory an issue for svg but not for html?

[02:48:09.0000] <annevk>
SVG files have a tendency to have most of their information in an attribute value...

[02:48:33.0000] <annevk>
I don't buy it would be twice the memory though. You'd just to design a better storage solution.

[02:49:01.0000] <annevk>
I would buy that it sucks and maybe is not worth it...

[03:04:08.0000] <annevk>
http://lists.w3.org/Archives/Public/public-media-annotation/2013Jun/0008.html may have been a bit much, but geez...

[04:17:47.0000] <MikeSmith>
"Unfortunately, your comment about callback syntax is out of scope of this 3rd Last Call."

[04:22:32.0000] <Ms2ger>
Don't worry, it'll be in scope for the fourth

[04:40:56.0000] <annevk>
It seems we're implementing something much simpler anyway so maybe most of that work needs to ignored in the end anyway?

[04:42:32.0000] <zcorpan_>
MikeSmith: how could you forget about <!DOCTYPE &amp;> & <!--&amp;--> & <?&amp;> & <!&amp;> & <p &amp;="foo"> & <foo&amp;> & <svg><![CDATA[&amp;]]></svg> & ..... ???

[04:43:10.0000] <MikeSmith>
heh

[04:43:42.0000] <MikeSmith>
I knew I shouldn't have responded to that message

[05:17:40.0000] <zcorpan_>
hmmm. looks like Glenn made MediaList a constructor, but i see no discussion about that

[05:20:42.0000] <zcorpan_>
and a MediaList object created with the constructor can't be used for anything

[05:33:14.0000] <zcorpan_>
Ms2ger: poke https://bitbucket.org/ms2ger/anolis/pull-request/10/use-for-the-toc-in-w3c_compat-since-csswgs/diff

[05:56:41.0000] <annevk>
I'm flying to the Netherlands... "You are required to enter Advance Passenger Information (API) for your trip" I wonder what the Netherlands thinks they do not know about me...

[05:59:13.0000] <annevk>
Following the link reveals nothing. klm.com is such a great website.

[06:06:30.0000] <Ms2ger>
zcorpan_, gah.

[06:06:35.0000] <Ms2ger>
Later this week, I think

[06:08:42.0000] <zcorpan_>
Ms2ger: great :-) i'm not in a rush, i was just looking through my open tabs

[06:21:08.0000] <zcorpan_>
hmm, i tried to implement a new option for xref.py, but i get this error: anolis: error: unrecognized arguments: --xref-use-a

[06:21:50.0000] <Ms2ger>
Did you  add it to ./anolis?

[06:23:40.0000] <zcorpan_>
aha. i didn't

[06:44:22.0000] <GPHemsley>
annevk: <object> is complex, because it basically has to be sniffed twice.

[06:45:35.0000] <GPHemsley>
annevk: http://www.whatwg.org/specs/web-apps/current-work/#object-type-detection

[06:46:43.0000] <Ms2ger>
Yay, single-page

[06:47:38.0000] <GPHemsley>
Ms2ger: Yeah, sorry

[06:47:47.0000] <Ms2ger>
/me didn't click :)

[06:48:06.0000] <GPHemsley>
annevk: object-src really seems to be more suited towards the plugin type of <object>

[06:48:32.0000] <GPHemsley>
annevk: (And <applet> doesn't really need to be sniffed, because it's always Java.)

[06:53:00.0000] <zcorpan_>
hmm, looks like i did a mistake. https://bitbucket.org/zcorpan/anolis/commits/featurebranches - how do i make the xref_use_a branch include only the last commit (compared to the default branch)?

[06:56:46.0000] <zcorpan_>
Ms2ger: ^

[06:57:38.0000] <Ms2ger>
/me looks

[06:58:13.0000] <Ms2ger>
zcorpan_, so you want it on top of 5ce506b ?

[07:00:20.0000] <zcorpan_>
Ms2ger: yeah, i guess. unless it's better if i sync with upstream first

[07:00:50.0000] <Ms2ger>
No, that's fine

[07:01:52.0000] <Ms2ger>
hg up 5ce506b5da30d429083217fce4695013bf012a39

[07:02:00.0000] <Ms2ger>
hg branch <foo>

[07:02:34.0000] <Ms2ger>
hg di -r 0c807914e393f0bcd87da4f3779c20f6955e70bc:7890a059a0a30f4887cc4044587c5216f2120b1a | patch -p1

[07:02:52.0000] <Ms2ger>
hg comm -m "bar"

[07:02:54.0000] <Ms2ger>
I think

[07:03:02.0000] <Ms2ger>
And then strip the original

[07:03:24.0000] <zcorpan_>
<foo> should be something like xref_use_a_2 ?

[07:03:38.0000] <Ms2ger>
I suppose so, yes

[07:04:00.0000] <zcorpan_>
ok, i'll try

[07:06:11.0000] <matjas>
looks like pretty much all existing npm modules dealing with HTML entities are broken

[07:07:02.0000] <annevk>
GPHemsley: I guess what I'm saying is that the sniffing cannot be reconciled with CSP contexts and is sort of a separate thing later on

[07:07:11.0000] <matjas>
only 1 lib has the complete list of HTML5 entities as per http://www.whatwg.org/specs/web-apps/current-work/multipage/entities.json, and none of them support astral symbols at all

[07:07:18.0000] <matjas>
may need to write my own

[07:07:18.0000] <zcorpan_>
Ms2ger: looks like it did the trick. thanks!

[07:07:20.0000] <Ms2ger>
Np

[07:07:21.0000] <matjas>
</rant>

[07:08:23.0000] <GPHemsley>
annevk: For <object> or for everything? I think we could make it work, if we allow context switching.

[07:08:47.0000] <GPHemsley>
annevk: We'll likely need it for the browsing context anyway.

[07:10:25.0000] <annevk>
GPHemsley: I guess the alternative is that you say <object> uses the "<object> context" which implies object-src for CSP purposes and complicated rules for sniffing purposes

[07:10:46.0000] <annevk>
GPHemsley: however, it's not entirely clear to me whether Fetch and sniffing ought to be merged in this way

[07:11:07.0000] <annevk>
GPHemsley: sniffing might actually be okay as a local per API endpoint affair

[07:11:28.0000] <annevk>
Hmm, although for images you always want to sniff... Ugh.

[07:11:41.0000] <GPHemsley>
right

[07:13:01.0000] <annevk>
Maybe some contexts should leave it up to the caller and others do it automatically?

[07:13:20.0000] <annevk>
E.g. for connect-src you want to leave it up to the caller... For object-src prolly too given the complexity.

[07:14:05.0000] <annevk>
And also, we could leave it always up to the caller and define something like "image fetch" that does the right for images.

[07:17:10.0000] <GPHemsley>
I'm not clear on what the issue/potential conflict is here. The contexts are just a tunnel with which to travel when fetching a resource. It's OK if sniffing branches, because it's downstream from fetch.

[07:19:16.0000] <GPHemsley>
annevk: Oh, I see the issue. The "trigger" part. Hmm...

[07:19:52.0000] <annevk>
API, does a, Fetch (potentially blocked due to CSP), then potentially Sniff (depending on API), ...

[07:20:16.0000] <GPHemsley>
annevk: What are some of the possible APIs we're discussing here?

[07:20:31.0000] <annevk>
So CSP and Fetch need to become integrated, sniffing seems like a convenience

[07:20:50.0000] <annevk>
GPHemsley: everything on the platform that does a Fetch, simple example is <img>

[07:21:19.0000] <GPHemsley>
annevk: Right, but what is the "API"? HTML?

[07:22:03.0000] <annevk>
GPHemsley: <img> is an API, background-image is another

[07:22:11.0000] <GPHemsley>
hmm

[07:22:36.0000] <GPHemsley>
And when would the Sniff part differ by API?

[07:23:15.0000] <GPHemsley>
Presumably all APIs of a given context are dealing with the same realities on the Web

[07:23:16.0000] <annevk>
<img> does sniffing for images. XMLHttpRequest only sometimes ignores Content-Type, but does no real sniffing.

[07:23:35.0000] <GPHemsley>
Well, the connection context is one that requires a little more thought

[07:24:34.0000] <GPHemsley>
But I think the rest are fairly established

[07:25:21.0000] <annevk>
No, e.g. <script> and Worker both mostly ignore Content-Type, but Worker also ignores encoding

[07:25:30.0000] <annevk>
Both are script-src though.

[07:25:48.0000] <GPHemsley>
(The connection context was added to provide a home in the table for connect-src.)

[07:25:57.0000] <annevk>
And object-src covers <applet>/<object>/<embed>, which have vastly different sniffing rules

[07:26:20.0000] <GPHemsley>
<applet> doesn't really need sniffing, AFAICT. It's always Java.

[07:26:25.0000] <annevk>
Whereas in your table <object> is sometimes tied with image which is just wrong

[07:26:37.0000] <annevk>
GPHemsley: it's also always object-src

[07:26:54.0000] <GPHemsley>
And the sniffing for <object> is a superset of the sniffing for <embed>

[07:26:59.0000] <annevk>
As I said, the sniffing is distinct

[07:27:29.0000] <annevk>
And it's not clear that if we introduce a new similar context we want the same sniffing.

[07:27:39.0000] <annevk>
E.g. for <script> we added Worker but wanted different rules.

[07:28:55.0000] <GPHemsley>
So what do you propose?

[07:30:36.0000] <annevk>
I think we should marry CSP contexts and Fetch. Then for sniffing we should find the right level of abstraction.

[07:31:16.0000] <annevk>
I think for most cases handling the sniffing where the fetching for the API is defined is fine, as it's e.g. done for <object> today. We might want to introduce something like "image fetch" as there are many APIs that fetch images.

[07:32:44.0000] <GPHemsley>
annevk: So where does that leave http://mimesniff.spec.whatwg.org/#context-specific-sniffing ?

[07:33:11.0000] <GPHemsley>
(which was the whole reason I compiled the contexts list)

[07:34:38.0000] <annevk>
Those look like useful shorthands for the various APIs we have today, no? Although maybe some just want to inline that so the badness doesn't leak further...

[07:35:04.0000] <annevk>
And in some cases they might not be okay, e.g. the example of <script> vs Worker

[07:35:23.0000] <annevk>
Basically script does not do sniffing. It simply does not look at content-type at all.

[07:35:44.0000] <annevk>
Well, except to determine the encoding, in case of <script> (not Worker).

[07:36:25.0000] <GPHemsley>
So what determines the script type? The type hint?

[07:37:00.0000] <annevk>
The API.

[07:37:18.0000] <GPHemsley>
(Keep in mind that I'm totally fine with defining a sniffing algorithm to not actually do any sniffing.)

[07:37:39.0000] <GPHemsley>
Is Worker always JavaScript?

[07:37:52.0000] <GPHemsley>
(How do you call Worker, anyway?)

[07:38:22.0000] <annevk>
new Worker("url")

[07:38:24.0000] <annevk>
GPHemsley: yes

[07:38:49.0000] <GPHemsley>
So isn't that a connection context, not a script context?

[07:40:09.0000] <annevk>
GPHemsley: For Sniff, maybe. Not for CSP.

[07:40:22.0000] <GPHemsley>
Ah, I see

[07:41:04.0000] <GPHemsley>
hmm

[07:43:02.0000] <GPHemsley>
Well, I suppose CSP doesn't have to map cleanly onto the contexts... The CSP directives kinda form their own contexts anyway

[07:43:50.0000] <GPHemsley>
They apply at different levels anyway

[07:44:03.0000] <GPHemsley>
annevk: Are you OK with the "How to use a context" steps?

[07:44:45.0000] <annevk>
It seems you'd sniff before handling, no?

[07:44:57.0000] <annevk>
Potentially as one-step (e.g. as many image libraries do)

[07:45:41.0000] <annevk>
Also, it seems you can only set the no-sniff flag after you actually fetched it

[07:46:00.0000] <GPHemsley>
annevk: "Handle" refers to http://mimesniff.spec.whatwg.org/#handling-a-resource

[07:46:36.0000] <GPHemsley>
annevk: And Sniff allows the UA to decide that they don't want to sniff based on the URL before the type is determined.

[07:47:00.0000] <GPHemsley>
(Like a nosniff whitelist)

[07:47:35.0000] <annevk>
Again, if you don't fetch it, you don't have a resource

[07:50:10.0000] <GPHemsley>
Not sure I understand what you're getting at

[07:50:24.0000] <GPHemsley>
If you don't have a resource, you can abort the steps

[07:50:44.0000] <GPHemsley>
s/can //

[07:51:04.0000] <GPHemsley>
Step 2

[07:55:18.0000] <annevk>
2. "Set no-sniff flag on resource" 3. "Fetch resource"

[07:55:24.0000] <annevk>
You cannot do 2 without 3

[07:55:52.0000] <GPHemsley>
ah

[07:55:53.0000] <GPHemsley>
well

[07:57:04.0000] <GPHemsley>
ok, so you're prefer steps 3 and 4 to be switched?

[07:57:59.0000] <jgraham>
annevk: FWIW I got the API thing from KLM too. Couldn't tell if I had filled it in right since it didn't really day what was required. Katie assumed that the mail was a scam.

[07:58:31.0000] <annevk>
jgraham: a scam that points to your actual booking?

[07:58:48.0000] <jgraham>
Well, yeah it quickly became clear it wasn't

[07:58:51.0000] <annevk>
GPHemsley: I think I'm a bit at a loss as to what the benefit of the sniffing contexts is

[07:59:15.0000] <jgraham>
But she has been trained to assume that unexpected mails asking for personal information aren't to be trusted

[07:59:16.0000] <annevk>
GPHemsley: there's a clear outcome of the CSP object-src context and why <object> needs to mention it

[07:59:37.0000] <annevk>
GPHemsley: it's not obvious that refactoring <object> with these sniffing contexts would be a win for the <object> spec

[08:00:02.0000] <annevk>
jgraham: fair enough

[08:00:57.0000] <GPHemsley>
annevk: I'm not sure I'm following. I compiled this list based on the existing concepts in HTML and CSS, in order to facilitate having different sniffing algorithms for each. The addition of CSP was per your request.

[08:01:45.0000] <annevk>
GPHemsley: "existing concepts"?

[08:02:14.0000] <GPHemsley>
annevk: Yes, these concepts are implicitly defined by the various parts of the HTML spec which detail sniffing. I just put a name on them.

[08:02:40.0000] <annevk>
And invented some more?

[08:03:08.0000] <GPHemsley>
Which ones do you consider "invented"?

[08:04:29.0000] <annevk>
script

[08:04:57.0000] <annevk>
plugin?

[08:06:16.0000] <GPHemsley>
Well, OK, the contexts weren't all based on explicit sniffing instructions in HTML. They were compiled based on every possible fetch point.

[08:06:18.0000] <annevk>
So, I'm behind the goal of getting CSS and HTML to agree on how to fetch an image and sniff the hell out of it.

[08:06:50.0000] <annevk>
But most of the other stuff defined in HTML is really HTML-specific and does not warrant abstraction I think.

[08:07:53.0000] <GPHemsley>
Well, the mimesniff spec has been created much to abstract sniffing out of the HTML spec.

[08:09:01.0000] <GPHemsley>
But all the sniffing algorithms need to be explicitly referenced by a calling spec.

[08:11:00.0000] <annevk>
"Abstract sniffing out" by itself is not enough of a goal. Having someone else maintain most of the details might be one. Having more specs use it might be another.

[08:11:09.0000] <annevk>
But too much abstraction comes at a cost.

[08:11:51.0000] <GPHemsley>
What is the cost here?

[08:12:39.0000] <annevk>
Shifting text around for no benefit is costly as people who once understood what's going on have to relearn.

[08:13:32.0000] <annevk>
And if it does not need to be referenced by other specs moving it away further from where the text is required can make the algorithm harder to follow (though sometimes easier)

[08:14:36.0000] <GPHemsley>
You seem to be speaking in hypotheticals.

[08:17:14.0000] <annevk>
GPHemsley: I have some experience shifting bits around and I'm questioning some of what you're doing here

[08:17:36.0000] <annevk>
GPHemsley: I don't think you've clearly illustrated the benefit other than "the goal of Sniff is to further abstract HTML" which I don't think is a worthy goal

[08:23:21.0000] <GPHemsley>
annevk: Yet you described two other possible goals that you do think are worthy, and would be fulfilled by the same outcome.

[08:25:40.0000] <annevk>
The only benefit is the image stuff, but I thought we already had that particular invocation point long ago...

[08:29:30.0000] <annevk>
I think it may have been partly my fault for encouraging you in this direction though. My apologies. That was mostly due to CSP/Fetch convergence which is necessary. (CSP necessitates changes to the Fetch algorithm.)

[08:33:03.0000] <Ms2ger>
Peanut gallery:

[08:33:14.0000] <Ms2ger>
Is matches() safe to unprefix?

[08:34:03.0000] <annevk>
Ms2ger: implementation of http://dev.w3.org/2006/webapi/selectors-api2/ ?

[08:34:07.0000] <Ms2ger>
Yep

[08:34:57.0000] <annevk>
Ms2ger: with relative selectors and all?

[08:35:16.0000] <annevk>
that's pretty interesting; I would have expected find/findAll to happen first

[08:35:37.0000] <annevk>
That IDL should use different variable names for querySelector and find...

[08:35:39.0000] <Ms2ger>
We've had mozMatchesSelector since forever

[08:35:46.0000] <Ms2ger>
Not sure how close it is to the spec

[08:35:52.0000] <annevk>
Ms2ger: that's way different

[08:37:05.0000] <Ms2ger>
Want to comment in bug 886308?

[08:37:18.0000] <annevk>
sure

[08:37:32.0000] <Ms2ger>
Ta

[08:38:34.0000] <annevk>
GPHemsley: so in general what you want is to make the minimal number of changes, until there's sort of sufficient build up of reasons for why the organisation of things should change; and to me it's not the case we're there for sniffing

[10:02:01.0000] <annevk>
I guess bz meant requiring type for XSLT, as data:text/xml,<?xml-stylesheet href="data:text/css,:root{background:lime}"?><test/> works fine.

[10:25:08.0000] <reyre>
is there a default display for WebVTT voice objects?

[10:25:20.0000] <reyre>
tooltips don't work in a video element currently

[11:04:49.0000] <TabAtkins>
reyre: What do you mean by "default display"?

[11:05:33.0000] <reyre>
TabAtkins: how should voice cues be displayed by default? should they be displayed? i.e. currently a voice tag is translated to a span with a title attribute that is the voice of the speaker

[11:05:40.0000] <reyre>
which would usually mean you could mouse over and see a tooltip

[11:05:58.0000] <reyre>
is that what we want?

[11:06:08.0000] <TabAtkins>
Ah, I dunno.

[11:06:14.0000] <reyre>
or would it make more sense to have something like "Title: Text"

[11:07:18.0000] <reyre>
TabAtkins: okay, i'll send an email to the mailing list, maybe we need some discussion about it or something

[11:07:25.0000] <TabAtkins>
That should be easy enough to do, btw, though I'm not sure that the ::cue() syntax allows it right now.  Something like ::cue(voice::before) { content: attr(title) ": "; }

[11:08:00.0000] <reyre>
yeah an author could do that, but do we want a default display or something ?

[11:08:06.0000] <TabAtkins>
Dunno!

[11:08:09.0000] <reyre>
okay :)

[13:04:12.0000] <haelwenn>
hello

[13:05:03.0000] <haelwenn>
i want to add the twitter:domain thing on the wiki can someone do it or can someone create an account for me (username: lanodan)

[13:06:37.0000] <haelwenn>
are you all AFK/away ?

[13:06:51.0000] <haelwenn>
i give you a minute

[13:08:11.0000] <haelwenn>
ok the minute is pass i'll send an email

[13:08:40.0000] <jorgepedret>
I guess there's a bunch of us just reading, I'm new here and don't have access to anything :-)

[13:09:44.0000] <TabAtkins>
I believe we're moving to just allowing anything in <meta> anyway, so the wiki will become obsolete.

[15:51:39.0000] <Hixie>
rafaelw: ping (at your leisure)

[16:22:17.0000] <rafaelw>
hixie: poing.

[16:22:46.0000] <Hixie>
hey

[16:22:56.0000] <Hixie>
so i'm trying to integrate the template parser thing

[16:23:23.0000] <Hixie>
and i've got some questions :-)

[16:23:40.0000] <rafaelw>
sure.

[16:23:51.0000] <Hixie>
one is, if you have <table><template>text</template</table>, am i missing something, or do the suggested changes not handle the text right?

[16:24:03.0000] <Hixie>
seems like you'll end up in table text mode

[16:24:27.0000] <Hixie>
which will then trigger the foster parenting

[16:24:34.0000] <Hixie>
rather than the template parenting

[16:25:51.0000] <Hixie>
(i think we should probably just define an "insert" algorithm that handles the foster and template parenting hacks rather than doing it as now with "comefrom"-style programming, fwiw. but that's an editorial thing.)

[16:27:07.0000] <rafaelw>
when do you end up in table text mode?

[16:27:12.0000] <Hixie>
<table>text

[16:27:31.0000] <rafaelw>
but which token put you in table text mode?

[16:27:36.0000] <Hixie>
the "t"

[16:27:48.0000] <Hixie>
oh, i see, <template> will be the current node in the template case

[16:27:53.0000] <Hixie>
hmm, interesting

[16:28:18.0000] <Hixie>
oh that _is_ interesting

[16:28:30.0000] <rafaelw>
nope. the <template> put you in "template contents" mode.

[16:28:32.0000] <Hixie>
that means we never get to foster parent text _or_ comment nodes

[16:28:42.0000] <Hixie>
rafaelw: yeah, got it

[16:29:03.0000] <Hixie>
rafaelw: so, next question; is the lack of foreign content support intentional?

[16:29:12.0000] <Hixie>
or is it magically supported some way i can't tell :-)

[16:29:22.0000] <rafaelw>
what looks like isn't supported?

[16:29:32.0000] <Hixie>
like, <html><svg><template>

[16:30:03.0000] <rafaelw>
Well, in that case, it's a <template> in the svg namespace.

[16:30:11.0000] <rafaelw>
Which doesn't do much interesting.

[16:30:19.0000] <Hixie>
right

[16:30:23.0000] <Hixie>
that's intentional?

[16:30:29.0000] <rafaelw>
We can still make the call that <template> is even more magical and behaves the same in svg & mathml.

[16:30:46.0000] <rafaelw>
I'd say: not addressed yet.

[16:30:51.0000] <Hixie>
ok, cool

[16:30:52.0000] <Hixie>
thanks

[16:31:09.0000] <rafaelw>
We discussed this with Tab and kind of concluded that that could be left to the svg/mathml to champion.

[16:31:26.0000] <Hixie>
sgtm

[16:31:27.0000] <rafaelw>
svg/mathml *folks*

[16:31:31.0000] <rafaelw>
Anything else?

[16:31:38.0000] <rafaelw>
I'll review Robin's changes right now.

[16:31:43.0000] <Hixie>
not right now, but i'm still looking :-)

[16:32:01.0000] <rafaelw>
let me know =-)

[16:32:12.0000] <Hixie>
i think i might end up doing a separate merge from darobin's, i'm finding too many things i disagree with at an editorial level

[16:32:35.0000] <Hixie>
e.g. having the template parenting use comefrom-style prose as well as foster parenting doing that makes the whole insertion thing really hard to follow now

[16:32:48.0000] <Hixie>
so i think i should merge it all into one clear algorithm

[16:33:03.0000] <Hixie>
still just going through trying to understand it, right now, though

[16:35:19.0000] <Hixie>
rafaelw: oh, another question; is there some reason for section 7.2 in https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/templates/index.html#creating-an-element-for-a-token ?

[16:35:25.0000] <Hixie>
the bit that talks about ownerDocument?

[16:35:38.0000] <Hixie>
it seems like every node will be inserted into another node, which forces the ownerDocument anyway, no?

[16:35:47.0000] <Hixie>
or is there some way you can end up with orphan nodes?

[16:36:05.0000] <rafaelw>
the issue is that the node needs to be constructed into the correct document.

[16:36:17.0000] <rafaelw>
If it's constructed in a "live" document, even transiently, it can have side effects.

[16:36:25.0000] <Hixie>
ah, interesting

[16:36:26.0000] <rafaelw>
The goal of template content is that it's inner.

[16:36:29.0000] <rafaelw>
inert.

[16:36:36.0000] <Hixie>
yeah

[16:43:53.0000] <TabAtkins>
rafaelw: Given that I'm an SVG folk, I think I should champion it.  ^_^

[16:44:13.0000] <TabAtkins>
I definitely know I'd like to be able to use <template> in SVG.

[16:44:14.0000] <Hixie>
should be simpler for svg than html, no crazy parsing rules to deal with

[16:44:37.0000] <Hixie>
well, except for shunting into a separate doc

[16:44:42.0000] <rafaelw>
Ah, those salt-of-the-earth SVG folk. Good people.

[16:44:51.0000] <shepazu>
I've always assumed that <template> would work in SVG, happy if you'll hande the details, TabAtkins

[16:45:03.0000] <Hixie>
btw did we ever come to a decision on how this works i xml?

[16:45:05.0000] <Hixie>
in

[16:49:06.0000] <TabAtkins>
Don't think so?

[16:50:11.0000] <rafaelw>
Well, the spec has some to say about XHTML, but not XML in general.

[16:50:24.0000] <rafaelw>
(also XSLT & XPath)

[16:53:13.0000] <Hixie>
xhtml and xml are basically the same thing for these purposes

[16:54:40.0000] <rafaelw>
so the spec doesn't answer this question for you?

[16:56:07.0000] <Hixie>
looks like the answer is, yes, we concluded that we were changing the xml parser :-)

[16:56:31.0000] <Hixie>
to have special rules specefically for nodes in[4~ the HTML namespace

[16:56:47.0000] <Hixie>
which isn't really new, it's just pushing what we had already a little further

[16:57:08.0000] <rafaelw>
yep. this was basically henri's requirement for supporting the whole plan.

[16:57:36.0000] <rafaelw>
(which i also happen to agree with(.

[16:57:43.0000] <rafaelw>
).

[16:59:04.0000] <Hixie>
given that i am the last one to this party, it having been specced in both webapps and the htmlwg before i'd even begun, i wonder if i'm still the one who's gonna get the blunt end of the criticsm from the xml community...

[16:59:43.0000] <TabAtkins>
Hixie: How can you even ask that question?  Of course you will.


2013-06-25
[17:00:13.0000] <TabAtkins>
Largely *because* you're the last one to the party.  Also because you're Hixie.

[17:00:34.0000] <Hixie>
uh huh :-|

[17:00:47.0000] <rafaelw>
What criticism do you expect?

[17:01:59.0000] <Hixie>
rafaelw: that we are "unilaterally ruining the web" and "making the beautiful world that is xml" be all "ruined" and so forth

[17:02:36.0000] <rafaelw>
oh....that....

[17:02:38.0000] <rafaelw>
;-)

[17:02:44.0000] <zewt>
ruining xml

[17:03:14.0000] <rafaelw>
I think that maintaining the XHTML/HTML equivalence was a good thing,

[17:03:14.0000] <zewt>
is that like emptying a bag of dirt into a port-a-potty

[17:03:48.0000] <rafaelw>
but to be honest, I kind of feel like I'm happy letting the XML folks decide for themselves.

[17:04:11.0000] <rafaelw>
You can XHTML/HTML equivalence or not change the XML parser. Not both.

[17:04:51.0000] <Hixie>
yup

[17:04:53.0000] <rafaelw>
The thing that isn't reasonable is claiming that HTML parsing should never be able to express anything that the XML parser can't understand -- if you're uninterested in changing the XML parsing.

[17:06:25.0000] <Hixie>
yeah, no need to convince me

[17:06:26.0000] <Hixie>
:-)

[17:06:48.0000] <Hixie>
i'm the first one to suggest divergent parsing and so forth

[17:06:49.0000] <rafaelw>
/me gets down off the soap box.

[18:23:54.0000] <zewt>
hearing "WebVTT depending on TTML", loading TTML spec, hoping it's just a *really* bad joke

[18:52:35.0000] <nessy>
zewt: that's definitely a misunderstanding!

[18:53:27.0000] <zewt>
from the number of posts talking about using TTML for chapters in webvtt, i sure wonder how it could be :)

[19:43:11.0000] <nessy>
zewt: there's a difference between WebVTT and the TextTrackAPI

[19:43:42.0000] <nessy>
but I'm sure that thread is confusing to some

[19:46:09.0000] <nessy>
I'm gonna let go for now - I'm obviously not making my point well enough :-)

[21:00:52.0000] <MikeSmith>
rafaelw, Hixie : regarding the XML partisans potentially making a fuss about the parsing and XSLT/XPath changes: Do we expect that tools other than browsers are going to need to do any special processing of <template>? Or that we'd even want them to?

[21:03:22.0000] <Hixie>
MikeSmith: dunno

[21:03:42.0000] <MikeSmith>
ok

[21:04:06.0000] <Hixie>
MikeSmith: i would imagine that xslt would want to have the same result whether done on a dom tree parsed by a browser or offline

[21:05:02.0000] <MikeSmith>
Hixie: even if the purpose of the xslt is to generate something that's then going to be sent over the wire to Web clients?

[21:05:41.0000] <Hixie>
i guess it's possible that you never want to use the same xslt on a browser and on a server if you're using <template>, independent of the different parse behaviour

[21:07:12.0000] <MikeSmith>
but wait is the spec actually defining any change in XSLT behavior anyway?

[21:07:20.0000] <Hixie>
xml behaviour

[21:07:23.0000] <MikeSmith>
it says, "XSLT processing should to treat template contents as descendants of the template element when contained in XHTML input of an XSLT transform and place the descendants of a template element into template contents in XSLT output."

[21:07:41.0000] <Hixie>
oh, interesting

[21:07:56.0000] <Hixie>
ok so the difference would be with other technologies like xslt that aren't xslt

[21:08:16.0000] <MikeSmith>
of course XPath handling is different though

[21:08:40.0000] <Hixie>
just so we're clear, i personally am not particularly worried one way or the other :-)

[21:10:00.0000] <MikeSmith>
heh :)

[21:10:03.0000] <MikeSmith>
yeah, I figured

[21:12:03.0000] <a-ja>
/me decides not to hold his breath waiting for two interoperable implementations

[21:37:59.0000] <MikeSmith>
manu-db: it would really help if the definitions of shared terminology in the RDFa spec were unambiguous. Or even if they were defined at all.

[21:38:12.0000] <MikeSmith>
re: http://www.w3.org/TR/rdfa-syntax/#A-prefix

[21:39:03.0000] <MikeSmith>
the spec doesn't define what a "white space separated list" is

[21:53:36.0000] <MikeSmith>
OK now I find http://www.w3.org/TR/rdfa-syntax/#white_space

[21:54:45.0000] <MikeSmith>
"When attributes accept a white space separated list of tokens, an RDFa Processor must ignore any leading or trailing white space."

[21:55:22.0000] <MikeSmith>
I'm not actually implementing a conforming RDFa Processor (nor need to to) but OK

[22:04:51.0000] <Hixie>
how the hell does the AAA ever trigger foster parenting in step 10

[22:06:05.0000] <Hixie>
oh, duh

[22:06:06.0000] <Hixie>
nevermind

[23:57:20.0000] <zcorpan_>
hmm. didn't the spec used to have "escaped text spans" for things like <title>&amp; <!-- &amp; --></title>?

[23:59:10.0000] <zcorpan_>
i guess it was dropped as part of the script parsing rewrite

[00:04:09.0000] <zcorpan_>
so we accidentally killed a quirk that turned out to not be necessary for compat

[00:04:49.0000] <zcorpan_>
(quirk as in weird behavior, not related to the modes)

[01:18:08.0000] <jgraham>
/me note to self: quote Hixie on "one clear algorithm" later :)

[01:51:26.0000] <annevk>
http://what-if.xkcd.com/51/ what about the squirrel suit?!!

[01:58:11.0000] <jgraham>
Isn't a squirrel suit a type of wingsuit? I'm not sure that literally dressing as a squirrel would help nearly as much…

[02:01:38.0000] <annevk>
Oh it is. Disappointing.

[02:44:58.0000] <tobie>
^ :D

[02:57:26.0000] <zcorpan_>
annevk: do you recall why MediaList has a stringifier?

[02:57:58.0000] <annevk>
zcorpan_: I think I had some idea of .media returning a MediaList

[02:58:17.0000] <zcorpan_>
annevk: which .media?

[02:58:22.0000] <annevk>
zcorpan_: all of them :)

[02:58:43.0000] <zcorpan_>
<link>.media?

[02:59:03.0000] <annevk>
Yeah, back then <a> too, but that's gone it seems

[02:59:17.0000] <annevk>
Note that I'm no longer sure if that's actually realistic

[02:59:44.0000] <annevk>
Or a good idea really, MediaList is not a great API

[03:00:21.0000] <zcorpan_>
maybe i can use [PutForwards=mediaText] on StyleSheet.media at least

[03:01:06.0000] <zcorpan_>
similar to .style

[03:01:55.0000] <zcorpan_>
i'm not sure it's a good idea to make <link>.media return MediaList since a <link> doesn't necessarily have a style sheet to begin with

[03:02:16.0000] <zcorpan_>
but changing media="" should probably update mediaText

[03:02:23.0000] <annevk>
Well, .media always holds media queries

[03:02:58.0000] <zcorpan_>
true

[03:03:25.0000] <annevk>
Oh, MediaList has a constructor now?

[03:03:33.0000] <zcorpan_>
not any more

[03:04:28.0000] <annevk>
I guess MediaList is conceptually a Set, but probably an ordered Set in practice...

[03:04:53.0000] <annevk>
Because of serialization. It would've been nice if we had invented all those primitives before all these adhoc APIs.

[03:05:28.0000] <zcorpan_>
would've been nice if document.write wasn't invented :-P

[03:05:49.0000] <annevk>
Hey, shut up and give me a pony

[03:05:53.0000] <zcorpan_>
on it

[03:06:59.0000] <zcorpan_>
hey look, CSSImportRule already has [PutForwards=mediaText]

[03:09:00.0000] <zcorpan_>
i wonder what elementFromPoint should do if the root element has pointer-events:none

[03:17:36.0000] <zcorpan_>
i also wonder what elementsFromPoint should do in a case like this http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2365

[03:23:01.0000] <annevk>
Hint: define hit testing

[03:43:18.0000] <annevk>
Hmm... So Fetch not being able to just deal with a Document object is somewhat annoying...

[03:43:56.0000] <annevk>
(It cannot have a document object association if we assume the eventual architecture is that Fetch is a distinct thread.)

[03:45:28.0000] <annevk>
But e.g. for CSP having a load group would make a lot of sense. The load group holds the policy and enforces it for each fetch that gets queued in it.

[04:23:22.0000] <annevk>
zcorpan_: could you maybe update my email address at the top of the CSSOM spec?

[04:23:43.0000] <annevk>
zcorpan_: people still try to contact me through my former @opera.com address so the less it's out there the better

[04:23:52.0000] <zcorpan_>
annevk: sure

[04:24:53.0000] <zcorpan_>
annevk: should i change the opera affiliation?

[05:24:32.0000] <annevk>
zcorpan_: I guess

[05:25:13.0000] <zcorpan_>
annevk: i left it saying opera since you worked for opera when you stopped editing

[05:25:42.0000] <annevk>
zcorpan_: fair enough

[05:40:43.0000] <zcorpan_>
Ms2ger: can you add me to the anolis project so i can close bugs?

[05:41:35.0000] <zcorpan_>
/me looks at https://bitbucket.org/site/master/issue/4084/close-resolve-issues-using-comment-of-a

[05:56:00.0000] <Ms2ger>
zcorpan_, I will as soon as I can log in :)

[06:00:06.0000] <zcorpan_>
TabAtkins: what's the status on http://lists.w3.org/Archives/Public/www-style/2013Jun/0038.html ? is there a bug or something i can follow?

[06:17:28.0000] <manu-db>
MikeSmith: are you referring to the 'prefix' thing? Yeah, I noticed that when I went looking for the whitespace allowance for the contents of prefix. It's unfortunate that the discussion didn't happen two weeks ago. We could've done something to fix it in the PER for RDFa Core 1.1 (which goes out today)

[06:17:58.0000] <manu-db>
MikeSmith: We can put it in the errata so that the next rev will pick it up.

[06:22:55.0000] <annevk>
Anolis should move to GH...

[06:23:51.0000] <Ms2ger>
No thanks

[06:46:49.0000] <MikeSmith>
manu-db: ok, thanks -- yeah, I'll try to write up some proposed text

[06:48:43.0000] <manu-db>
MikeSmith: ok, thx, much appreciated - gotta prep for a call in 12 minutes, let me know if you have something you want me to look at and I can check it out after the call.

[06:49:52.0000] <MikeSmith>
ok

[06:54:46.0000] <annevk>
Hmm, did http://labs.ft.com/2013/01/seamless-iframes-not-quite-seamless/ ever come up on a mailing list?

[06:59:07.0000] <MikeSmith>
"Netscape Navigator 4 supported a src attribute on DIV tags which pretty much solved all of these problems..."

[07:00:02.0000] <Ms2ger>
If only we'd all implemented <layer>...

[07:11:25.0000] <annevk>
<ilayer> is where it's at I hear

[07:12:23.0000] <annevk>
I need to get out of this hole of writing specs that are important but nobody really cares about

[07:15:30.0000] <Ms2ger>
We care

[07:15:32.0000] <Ms2ger>
Abstractly

[07:18:39.0000] <jgraham>
I think what Ms2ger means is "we care about the abstracts"

[07:18:53.0000] <jgraham>
Because who has time to actually read whole specs these days?

[07:19:39.0000] <nessy1>
annevk: look at it as a niche rather than a hole ;-)

[07:20:01.0000] <annevk>
jgraham: heh

[07:21:08.0000] <annevk>
nessy1: yeah, that prolly came of worse than I meant it, but it would be nice to work on stuff that has more collaboration without having to ask people to partake

[07:22:12.0000] <Ms2ger>
annevk, you could go and work on webrtc ;)

[07:23:03.0000] <annevk>
I'm getting the impression it's IETF-zoned.

[07:23:56.0000] <jgraham>
It is at least true that people get very excited about it

[07:24:32.0000] <SimonSapin>
annevk: AFAIU the network/protocols part is in IETF, the browser/APIs part in W3C

[07:25:06.0000] <annevk>
SimonSapin: did you check who's involved W3C-side?

[07:26:33.0000] <SimonSapin>
annevk: no, just heard Adam Roach talk about it in Taipei

[07:26:37.0000] <SimonSapin>
https://intranet.mozilla.org/images/7/7d/Intro-to-IETF.pdf

[07:27:54.0000] <Ms2ger>
Boo, intranet

[07:30:06.0000] <SimonSapin>
sorry :/

[07:30:43.0000] <Ms2ger>
Want to poke whoever put it there? :)

[07:30:57.0000] <Ms2ger>
Or tell me who it was, so I can shout

[07:31:16.0000] <SimonSapin>
Ms2ger: Adam Roach, abr on IRC

[07:31:36.0000] <SimonSapin>
"Standardization and Mozilla: IETF"

[07:36:54.0000] <SimonSapin>
pinged about making our work week slides public

[07:37:51.0000] <Ms2ger>
Ta

[07:41:55.0000] <MikeSmith>
https://github.com/philipwalton/html-inspector is nice

[08:17:54.0000] <Ms2ger>
https://dl.dropboxusercontent.com/u/53717247/Intro-to-IETF.pdf in case people are interested

[08:30:12.0000] <zewt>
"Your search - python backtrace - did not match any documents." go home google you are drunk

[08:45:16.0000] <dglazkov>
good morning, Whatwg!

[08:45:56.0000] <MikeSmith>
Ms2ger: thanks

[08:46:09.0000] <Ms2ger>
Np

[08:58:34.0000] <zcorpan>
/me sent an email about lazyload=""

[10:08:40.0000] <annevk>
Ms2ger++

[10:08:57.0000] <annevk>
/me encourages SimonSapin to share more links that ought to be public

[10:09:26.0000] <Ms2ger>
https://lists.w3.org/Archives/Member/w3c-css-wg/?

[10:09:31.0000] <SimonSapin>
annevk: I talked to Jet, he agrees that work week talks should be public

[10:10:42.0000] <SimonSapin>
Ms2ger: we don’t have much there, but yeah

[10:11:48.0000] <Ms2ger>
I'm afraid dbaron wouldn't approve if I made that public :)

[10:41:21.0000] <rillian>
annevk: your webvtt validator could give a better error message for '00:01.500 -> 00:02.300'

[10:41:58.0000] <annevk>
Is this where I say, "patches welcome"?

[10:42:26.0000] <rillian>
I'm sure that's one of the dialog choices in the menu

[10:42:59.0000] <annevk>
"Line 4, column 1: Timestamp must start with a character in the range 0-9." is kinda poor indeed

[10:52:14.0000] <rillian>
annevk: quite

[11:17:27.0000] <annevk>
rillian: so it seems like you found an actual bug somewhere

[11:17:47.0000] <annevk>
rillian: code suggests it should alert "No valid timestamp separator found." so something is amiss :/

[11:22:15.0000] <rillian>
bug!

[11:23:23.0000] <annevk>
rillian: ooh, so what happens is that because the line does not contain "-->" it becomes an ID

[11:24:09.0000] <annevk>
rillian: because that's how WebVTT handles IDs...

[11:24:24.0000] <annevk>
rillian: so I'm not sure there's anything I can do here really

[11:24:54.0000] <annevk>
rillian: you'll get a much more sensible message for "ID\n00:11.000 -> 00:13.000"

[11:30:07.0000] <rillian>
annevk: maybe change the error to 'couldn't find valid timestamps'?

[11:30:16.0000] <rillian>
/me is out for a bit

[11:39:25.0000] <annevk>
might give it another look tomorrow

[11:41:01.0000] <jgraham>
SimonSapin: You are supposed to thinkn in terms of "does this need to be private", not "does this need to be public" :p

[13:53:51.0000] <Hixie_>
i'm actually doing deep enough work on the html parser that i'm swapping in my parser knowledge again

[13:53:55.0000] <Hixie_>
yikes

[13:54:18.0000] <Ms2ger>
Yikes indeed

[13:55:34.0000] <Hixie_>
http://html5.org/tools/web-apps-tracker?from=7997&to=7999

[14:22:18.0000] <Ms2ger>
I have to say I'm quite fascinated that TC39 apparently decided to add Number.parseInt, which does the same thing as parseInt

[14:46:14.0000] <Hixie_>
rafaelw: yt?

[14:46:48.0000] <rafaelw>
hixie: here

[14:49:21.0000] <Hixie_>
rafaelw: can you walk me through the foster parenting case for template?

[14:49:48.0000] <rafaelw>
sure.

[14:49:50.0000] <Hixie_>
rafaelw: what would happen that you don't want to have happen if that line wasn't there?

[14:50:19.0000] <rafaelw>
you can't have any content lifted out of the template.

[14:50:24.0000] <rafaelw>
that's the main thing.

[14:50:46.0000] <Hixie_>
what's an example of input that would trigger that?

[14:51:27.0000] <rafaelw>
Trying swap of all this back in.

[14:51:38.0000] <rafaelw>
I think, for example, <template><tr>Foo

[14:51:49.0000] <rafaelw>
would have attempted to lift the Foo outside the template.

[14:53:19.0000] <Hixie_>
oh right, i keep forgetting <template> applies in cases like that

[14:53:20.0000] <Hixie_>
ok, thanks

[14:53:25.0000] <rafaelw>
;-)

[14:55:11.0000] <Hixie_>
rafaelw: in the "or a table element immediately below it" case, isn't that the same as normal foster parenting?

[14:55:25.0000] <Hixie_>
( https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/templates/index.html#foster-parent-addition )

[14:59:16.0000] <rafaelw>
no. i'm trying to remember why.

[14:59:28.0000] <rafaelw>
i know there's an html5lib case that covers it.

[14:59:33.0000] <rafaelw>
(brain is slow today)

[15:00:44.0000] <Hixie_>
i can't figure out a way in which it's different... "The foster parent element is the parent element of the last table element in the stack of open elements, if there is a table element and it has such a parent element"

[15:00:59.0000] <Hixie_>
if the element before <table> is <template>, that's what it would be, no?

[15:01:10.0000] <Hixie_>
oh except that it wouldn't be the parent...

[15:01:22.0000] <Hixie_>
maybe that's it

[15:01:31.0000] <Hixie_>
it's to handle the case where it would be the parent, except for template's logic

[15:03:17.0000] <zcorpan>
Hixie_: is this correct?

[15:03:20.0000] <zcorpan>
Elements in other namespaces whose interface is not defined by

[15:03:21.0000] <zcorpan>
+    that namespace's specification must use the interface <code>Element</code>.</p>

[15:04:15.0000] <rafaelw>
Yes. That's it.

[15:04:31.0000] <rafaelw>
I think.

[15:04:42.0000] <rafaelw>
You can't lift the node and make it a child of the template element.

[15:05:06.0000] <zcorpan>
Hixie_: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2369 foobar is SVGElement in presto/blink/gecko

[15:05:30.0000] <Hixie_>
zcorpan: interesting

[15:05:38.0000] <Hixie_>
zcorpan: can you file a bug?

[15:05:40.0000] <zcorpan>
sure

[15:05:44.0000] <Hixie_>
zcorpan: that hasn't changed, fwiw

[15:05:53.0000] <Hixie_>
but i'm glad the recent changes brought it to light :-)

[15:05:54.0000] <Hixie_>
thanks

[15:06:11.0000] <zcorpan>
i wish web-apps-tracker had a bug filer

[15:14:26.0000] <zcorpan>
<script async> shouldn't block the load event per spec, right?

[15:16:11.0000] <rafaelw>
hixie: I can't remember exactly.

[15:16:27.0000] <rafaelw>
If you want I can build with that line removed from blink and see which html5lib test fails.

[15:16:57.0000] <zcorpan>
hmm... "Fetching an external script must delay the load event of the element's document until the task that is queued by the networking task source once the resource has been fetched (defined above) has been run."

[15:17:06.0000] <Hixie_>
rafaelw: if it's trivial to do so, sure, more data is always good. but otherwise don't worry, i'm confident that the cases above are sufficient for my understanding of this.

[15:24:40.0000] <Hixie_>
rafaelw: actually, i take what i said back. i think the spec already handles the case of <template><table>x, since it'd put the x before the <table> in the template contents.

[15:25:09.0000] <Hixie_>
rafaelw: so yeah, i'd love to see what breaks if you remove the code equivalent of "or a table element immediately below it"

[15:26:03.0000] <rafaelw>
ok.

[15:27:34.0000] <Hixie_>
in fact, as written, i think the spec is wrong. it makes <template><table>x actualy put the "x" text node in the template, not the template contents.

[15:27:53.0000] <Hixie_>
i assume the intent is that the "x" end up _before_ the <table> in the template contents?

[15:53:03.0000] <gsnedders>
Gah! Moving this into spec means I lose my excuse to not bother implementing it in html5lib!

[15:53:57.0000] <Hixie_>
looks like it's actually not that hard to implement. i'm doing most of the hard work (other than designing this all in the first place, that is!), which is to work out how it integrates with foster parenting in an explicit fashion.

[15:57:26.0000] <annevk>
Starship Troopers is basically awesome

[15:57:47.0000] <rafaelw>
hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=21430

[15:59:34.0000] <Hixie_>
rafaelw: so i get the second part of that bug, where <template><tr><div> should parse into a DOM with one empty <template>, whose tempalte contents are <><div/><tr/></> (where <>..</> is a doc frag)

[15:59:54.0000] <Hixie_>
rafaelw: but what's wrong with the first part, where the foster parent element is the document fragment?

[16:00:00.0000] <Hixie_>
rafaelw: isn't that exactly what we want?

[16:01:14.0000] <Hixie_>
btw i'm doing what you said in comment 1 (make it into one algorithm)

[16:02:09.0000] <Hixie_>
oh, i see, the spec says "if it's not an element..."

[16:02:17.0000] <Hixie_>
well we should just remove that, no?

[16:02:26.0000] <Hixie_>
i wonder why we refuse to foster parent if it's not an element...

[16:04:55.0000] <rafaelw>
yeah.

[16:05:04.0000] <rafaelw>
i think that's what anne was suggesting in the bug.

[16:05:23.0000] <rafaelw>
i think maybe i got this wrong.

[16:05:29.0000] <rafaelw>
the test in html5lib that fails is: <template><template><table>Foo

[16:05:47.0000] <rafaelw>
the failure is that (without the additional rule), the foo comes before the table, rather than after.

[16:05:48.0000] <Hixie_>
what do you end up doing in the two cases?

[16:05:54.0000] <Hixie_>
ah

[16:06:06.0000] <Hixie_>
why is that a failure?

[16:06:10.0000] <Hixie_>
surely you want it to come before

[16:06:27.0000] <Hixie_>
(i say "surely" like this makes any sense, hah)

[16:06:37.0000] <Hixie_>
i mean, for consistency with non-template markup

[16:09:42.0000] <rafaelw>
I am serious... And stop calling me "Shurly".

[16:10:28.0000] <Hixie_>
(in other news, modulo this discussion, so far i've integrated 7.1 to 7.5. and my patches so far are hundreds of lines long. :-|)

[16:10:30.0000] <Hixie_>
(amazing how much you can do with just a few lines of monkeypatching spec prose :-) )

[16:10:37.0000] <rafaelw>
http://www.youtube.com/watch?v=0A5t5_O8hdA

[16:10:56.0000] <Hixie_>
airplane?

[16:10:59.0000] <rafaelw>
yup.

[16:11:02.0000] <rafaelw>
classic.

[16:11:05.0000] <Hixie_>
indeed

[16:11:05.0000] <rafaelw>
anyhow.

[16:11:14.0000] <rafaelw>
back to html parsing hurting land.

[16:11:30.0000] <Hixie_>
btw feel free to tell me darobin already figured this out if i'm asking you stuff he already asked you :-)

[16:11:35.0000] <rafaelw>
I can't honestly remember why that needed to come after.

[16:11:37.0000] <rafaelw>
seems wrong now.

[16:11:50.0000] <rafaelw>
nope. he didn't ask any of this stuff.

[16:12:11.0000] <Hixie_>
k

[16:12:47.0000] <Hixie_>
any objection to me making foster parented stuff come out above the <table> in the <template>?

[16:13:30.0000] <Hixie_>
bummer, next section is 'Additions to "reset the insertion mode appropriately"', that sounds painful

[16:14:04.0000] <rafaelw>
can we leave it as is for now

[16:14:06.0000] <rafaelw>
and open a bug.

[16:14:20.0000] <rafaelw>
i just tested FF nightly, but found another bug in their impl.

[16:14:27.0000] <rafaelw>
(was curious what they implemented).

[16:15:57.0000] <rafaelw>
Ok. FF also implemented what we did

[16:16:01.0000] <rafaelw>
(text node comes after table).

[16:16:11.0000] <rafaelw>
I think we should open a bug and see what everyone thinks.

[16:16:23.0000] <rafaelw>
It may be there was a good reason for this and I'm not remembering right now.

[16:18:48.0000] <rafaelw>
sorry. i think i imagined the bug in FF impl. Looks right.

[16:20:48.0000] <Hixie_>
sure. can you file the bug? (not sure where it should get filed exactly. if it's a whatwg spec bug, i just fix it!)

[16:21:33.0000] <Hixie_>
so the case i have to hack in the spec is if you have a table whose parent is the template contents doc frag, it should be appended, not inserted above the table, right?

[16:26:07.0000] <Hixie_>
in particular, the issue here is that it means <template><table>2<td>1</table></template> and <template><div><table>1<td>2</table></div></template> act differently

[16:28:51.0000] <gsnedders>
Hixie_: effort("not that hard") > effort("delaying")

[16:29:11.0000] <Hixie_>
believe me, i understand

[16:29:17.0000] <Hixie_>
i delayed this as long as i could too :-P

[16:29:50.0000] <gsnedders>
I don't want to swap the parser back into my head. Thankfully almost everything on the 1.0 to-do list doesn't really involve the parser. :P

[16:30:28.0000] <Hixie_>
again, i know _exactly_ how you feel :-P

[16:30:37.0000] <gsnedders>
Really what I don't want to do is fix up the (placeholder) error messages around the AAA.

[16:30:50.0000] <gsnedders>
Useful parse error messages for the AAA, ergh.

[16:31:49.0000] <gsnedders>
And I expect you know _exactly_ how AAA hell feels, too. :P

[16:34:35.0000] <Hixie_>
i just tweaked the AAA yesterday

[16:34:46.0000] <Hixie_>
i need say no more, i'm sure

[16:35:26.0000] <gsnedders>
Hixie_: Hate you. Hate you forever. >_>

[16:37:43.0000] <Hixie_>
:-)

[16:37:58.0000] <Hixie_>
i actually tweaked it by making it slightly simpler, factoring out the foster parenting logic

[16:38:03.0000] <Hixie_>
(should be an editorial change)

[16:38:25.0000] <gsnedders>
Oh, provided it's editorial it's fine. I can ignore it. :P

[16:38:41.0000] <gsnedders>
(even if it means impl strategy diverges)

[16:38:51.0000] <gsnedders>
Will resync when a normative change happens.

[16:39:40.0000] <Hixie_>
rafaelw: (see comments above the discussion between gsnedders and i)

[16:39:43.0000] <gsnedders>
(Please don't make one, so I never have to.)

[16:39:57.0000] <Hixie_>
gsnedders: very next commit will be a huge normative change to the parser.

[16:40:06.0000] <gsnedders>
Hixie_: The template one?

[16:40:08.0000] <Hixie_>
yeah

[16:40:30.0000] <gsnedders>
Thus my complaint about "not that hard" being more than "delaying" :P

[16:40:45.0000] <Hixie_>
man, <template> really supports templates in <colgroup> amd <frameset>?

[16:40:48.0000] <Hixie_>
ok...

[16:41:25.0000] <gsnedders>
Ewwwwwwwwwwwwwwwwwwwwwwwwwwwwwww

[16:41:46.0000] <gsnedders>
(Maybe a few more "w"s were needed?)

[16:42:35.0000] <rafaelw>
Hixie: what I'm asking is if we can file a bug to *ask* if the template spec behavior *is* bug.

[16:42:46.0000] <rafaelw>
I think it may be, but I'd like to not assume right now that it is.

[16:42:51.0000] <Hixie_>
rafaelw: right

[16:43:09.0000] <Hixie_>
rafaelw: that's what i said :-)

[16:43:11.0000] <Hixie_>
no?

[16:43:49.0000] <rafaelw>
ok. so file a whatwg bug and cc the moz folks?

[16:44:11.0000] <Hixie_>
if you file a whatwg bug, then the person you're asking is me, and i know what i'd say, hence my question of how we file a bug :-)

[16:44:48.0000] <rafaelw>
how about if you *not* just resolve it in the case because we actually want other opinions?

[16:45:19.0000] <rafaelw>
alternatively, if you prefer me to file a w3c bug, i'm happy to do that.

[16:45:30.0000] <Hixie_>
/me follows the "spec editors make decisions" philosophy, not the "consensus" philosophy

[16:45:53.0000] <Hixie_>
and in this case, you're the editor :-)

[16:45:55.0000] <rafaelw>
They why did you ask me?

[16:45:59.0000] <Hixie_>
you and tony, anyway

[16:46:04.0000] <rafaelw>
s/They/then

[16:46:12.0000] <Hixie_>
cos you're the editor :-)

[16:46:13.0000] <gsnedders>
rafaelw: So he could ignore you knowing your opinion.

[16:46:14.0000] <rafaelw>
ah.

[16:46:32.0000] <gsnedders>
Sorry, I'll go away again.

[16:46:35.0000] <Hixie_>
anyway i'm happy to spec whichever; right now i've specced what the template spec said and left a marker in the spec

[16:46:43.0000] <rafaelw>
ok.

[16:46:44.0000] <Hixie_>
saying that this is likely a bug

[16:47:08.0000] <rafaelw>
ok. filing a w3c bug.

[16:47:11.0000] <Hixie_>
cool

[16:47:15.0000] <Hixie_>
thanks

[16:50:14.0000] <Hixie_>
rafaelw: where should <body><template><body></body><!----> put the comment?

[16:50:24.0000] <gsnedders>
So running `git blame` on the spec may have been a bad idea… :)

[16:51:47.0000] <gsnedders>
Oh, actually, while you're around Hixie_: should there be trees that can *only* be created with parse errors (or through scripting, obv.)?

[16:52:04.0000] <Hixie_>
gsnedders: if you need blames for the html spec, see http://www.whatwg.org/specs/web-apps/current-work/blames-list.cgi

[16:52:21.0000] <Hixie_>
gsnedders: how do you mean?

[16:53:48.0000] <Hixie_>
rafaelw: similar question with <button><template><button>; should the template have a button in it?

[16:53:53.0000] <rafaelw>
Hold on.

[16:53:55.0000] <rafaelw>
I got it wrong.

[16:54:09.0000] <rafaelw>
That extra language is *so that* the text node comes before the table.

[16:54:12.0000] <gsnedders>
Hixie_: I can't recall the exact example, but I came across some tree that could only be produced by the parser with inputs that caused a parse error.

[16:54:14.0000] <rafaelw>
https://code.google.com/p/html5lib/source/browse/testdata/tree-construction/template.dat#1140

[16:54:35.0000] <rafaelw>
hixie: sorry. i slept poorly last night and i'm juggling to many things at once.

[16:55:01.0000] <Hixie_>
rafaelw: ah ok, cool, thanks makes more sense. so it's basically just working around the thing in the old spec that said to act weird if the parent was non-null but not an element (i.e., a doc or doc fragment)

[16:55:24.0000] <rafaelw>
yes

[16:55:24.0000] <Hixie_>
ok.

[16:55:27.0000] <gsnedders>
Hixie_: If that makes any more sense?

[16:55:38.0000] <Hixie_>
rafaelw: i'm gonna stop working on this now and resume tomorrow. hopefully we'll both be better rested :-)

[16:55:50.0000] <rafaelw>
Yeah. I was gonna sk.

[16:55:52.0000] <rafaelw>
ask

[16:55:53.0000] <rafaelw>
THanks =-0

[16:55:55.0000] <rafaelw>
;-)

[16:56:06.0000] <rafaelw>
I think I'll be more help with a good nights sleep.

[16:56:39.0000] <Hixie_>
i'm clearly a masochist because this merge is starting to actually be fun

[16:56:54.0000] <Hixie_>
i haven't done work on the parser this deep since before the foreign content stuff

[16:57:07.0000] <Hixie_>
and the foreign content stuff suffered from my not being deep enough in it, i think


2013-06-26
[17:25:46.0000] <zewt_>
dear google: stop returning 4 results and then going "results for similar searches" with no way to get more real non-irrelevant results

[17:50:31.0000] <TabAtkins>
zcorpan: Regarding http://lists.w3.org/Archives/Public/www-style/2013Jun/0038.html, no bug yet.  I haven't done it yet, but expect to get to several UseCounter things this week.

[17:54:06.0000] <TabAtkins>
SimonSapin: Except for the occasional thread where we mess up, the css private list is solely for things like dinner plans and f2f details.  We discuss nothing of importance there, but some of the things we *do* discuss are mildly sensitive, and are best done privately.

[22:55:01.0000] <UserC479>
hi there - i need help - trying to figure out how to get background image and body content one color

[02:14:25.0000] <Ms2ger>
zcorpan, you should have access now

[02:14:38.0000] <zcorpan>
Ms2ger: thanks

[02:21:59.0000] <MikeSmith>
jgraham: it'd be nice to have a message bot on #whatwg too

[02:32:40.0000] <Ms2ger>
zcorpan, how do you feel like adding a test for https://bitbucket.org/ms2ger/anolis/pull-request/11/enable-usage-of-instead-of-for-xrefs-also/diff too? :)

[02:34:36.0000] <zcorpan>
Ms2ger: (╯°□°)╯︵ ┻━┻

[02:35:05.0000] <Ms2ger>
That seems unhappy :)

[02:36:26.0000] <zcorpan>
i'll add a test

[02:36:41.0000] <Ms2ger>
Thanks :)

[02:48:04.0000] <Ms2ger>
Is there anything else I promised someone here to do this week?

[03:18:18.0000] <zcorpan>
annevk: can you update web-apps-tracker please?

[03:19:51.0000] <annevk>
zcorpan: we're just gonna 404 web-workers-tracker?

[03:20:24.0000] <zcorpan>
annevk: yeah, why not?

[03:20:56.0000] <annevk>
seems it ought to be 410

[03:21:24.0000] <zcorpan>
fair enough

[03:22:06.0000] <annevk>
you also forgot to update the .htaccess

[03:22:16.0000] <annevk>
do you want me to do that?

[03:24:48.0000] <annevk>
i'm gonna do that

[03:28:21.0000] <annevk>
I wonder why I couldn't do that online

[03:31:07.0000] <annevk>
hmm scp * doesn't copy .htaccess

[03:59:21.0000] <annevk>
Ms2ger: I think you promised to do AttrExodus this week

[03:59:36.0000] <Ms2ger>
Ha

[04:04:08.0000] <annevk>
zcorpan: btw, I synced the whole thing now

[04:04:34.0000] <zcorpan>
annevk: thanks!

[04:11:27.0000] <annevk>
Asked Domenic_ about a better NodeList for find/findAll: https://gist.github.com/domenic/5864658

[04:11:55.0000] <annevk>
Not entirely sure why it uses const, but the logic looks reasonable.

[04:25:35.0000] <annevk>
zcorpan: "url += location.protocol+'//'+location.host+location.pathname+location.search;" why not just echo location? Want to avoid the fragment?

[04:30:37.0000] <zcorpan>
annevk: yeah

[05:06:20.0000] <zcorpan>
Ms2ger: i wrote a test but i get this error:

[05:06:25.0000] <zcorpan>
    self.buildReferences(ElementTree, **kwargs)

[05:06:25.0000] <zcorpan>
TypeError: buildReferences() takes at least 3 arguments (2 given)

[05:06:53.0000] <zcorpan>
from xspecxref.py

[05:08:04.0000] <Ms2ger>
Hmm

[05:08:18.0000] <Ms2ger>
Try adding "allow_duplicate_dfns": false in the options?

[05:09:01.0000] <zcorpan>
TypeError: buildReferences() takes at least 3 arguments (3 given)

[05:11:45.0000] <Ms2ger>
Oh, wait

[05:11:49.0000] <Ms2ger>
/me blames annevk 

[05:12:25.0000] <Ms2ger>
How about if you change...

[05:12:38.0000] <Ms2ger>
-  def buildReferences(self, ElementTree, xref, allow_duplicate_dfns=False, **kwargs):

[05:12:45.0000] <Ms2ger>
+  def buildReferences(self, ElementTree, xref="data/", allow_duplicate_dfns=False, **kwargs):

[05:12:55.0000] <Ms2ger>
Or without the slash

[05:15:48.0000] <zcorpan>
then i get SyntaxError: Specification not found: foobar. i guess i should have "xref":"xref" in options?

[05:15:58.0000] <Ms2ger>
Yeah

[05:17:26.0000] <zcorpan>
tests/xref even

[05:17:43.0000] <zcorpan>
ok now it seems to work

[05:25:29.0000] <zcorpan>
thanks. pushed

[05:34:29.0000] <annevk>
Ms2ger: I don't even

[05:49:38.0000] <zcorpan>
TabAtkins: ok cssom toc is now non-ugly

[06:44:51.0000] <annevk>
Hmm, http:@/example.com/ ends up as http:///example.com/ which ends up as http://example.com/

[06:47:11.0000] <MikeSmith>
annevk: is that bad?

[06:48:38.0000] <annevk>
MikeSmith: it would be nice if parsing URLs was idempotent

[06:48:53.0000] <MikeSmith>
ah

[06:49:38.0000] <annevk>
MikeSmith: maybe that's not quite the right term, but parse(serialize(parse(x))) is ideally equal to parse(x)

[06:50:10.0000] <hober>
that's the right term

[06:50:34.0000] <Hixie_>
mornin' all

[06:51:39.0000] <annevk>
hober: Hixie_: early much? :)

[06:53:25.0000] <Hixie_>
yes.

[06:57:40.0000] <annevk>
hober: yeah so ap suggested this

[06:58:34.0000] <annevk>
hober: it seems we'd have to forbid empty host names to make that actually work out

[06:59:34.0000] <annevk>
aaah

[06:59:38.0000] <annevk>
that's what he implemented

[07:04:23.0000] <hober>
annevk: re: early, yeah, got an early morning appt

[07:16:58.0000] <Hixie_>
i think my least favourite people who aren't actually evil are people who complain about things in vague terms but refuse to give specifics because they "know" that the complaints won't be fixed

[07:17:57.0000] <Ms2ger>
Me?

[07:18:06.0000] <Ms2ger>
I guess I'm actually evil

[07:18:18.0000] <Hixie_>
no, you file tons of specific bugs

[07:18:48.0000] <Hixie_>
i mean like http://www.reddit.com/r/web_design/comments/1gtxtz/i_need_clarification_on_article_and_section/caqed9q

[07:20:32.0000] <zcorpan>
Hixie_: i commented on https://www.w3.org/Bugs/Public/show_bug.cgi?id=14703 - let me know if you need something more or if i'm being unclear

[07:21:02.0000] <annevk>
"Even the writing ability is lower in this document compared to previous HTML versions." what does this mean?

[07:21:43.0000] <zcorpan>
annevk: idempotent should be a requirement

[07:22:03.0000] <annevk>
Heh, what did Chris Wilson do?

[07:22:35.0000] <annevk>
zcorpan: is this just a "makes sense" remark or is this coming from somewhere?

[07:23:12.0000] <Hixie_>
zcorpan: cool, thanks

[07:24:45.0000] <annevk>
zcorpan: Hixie_: HTML should probably define <?xml-stylesheet?> in total, so it can also define when to do XSLT

[07:24:51.0000] <annevk>
XSLT \o/

[07:25:10.0000] <SimonSapin>
Can HTML even do XSLT?

[07:25:12.0000] <Hixie_>
i don't understand xslt, and nobody else seems to care enough to tell me what it should say, so i'm not doing xslt stuff.

[07:25:42.0000] <zcorpan>
annevk: not being idempotent can lead to bugs like http://labs.spotify.com/2013/06/18/creative-usernames/

[07:25:42.0000] <MikeSmith>
annevk: yeah about URL parsing, I understood what you meant. Maybe plain-old "round-trippable" is a better term

[07:25:44.0000] <Hixie_>
annevk: see bug 18460

[07:25:56.0000] <annevk>
SimonSapin: I meant HTML as in the HTML Standard

[07:26:12.0000] <Hixie_>
annevk: and bug 17976

[07:26:15.0000] <annevk>
SimonSapin: I think our XSLT APIs might allow for non-XML DOMs to be used though, haven't played with that

[07:26:38.0000] <annevk>
Hixie_: yeah I'm aware, I don't care enough really to fix that up, if it was up to me we'd nuke <?xml-stylesheet?>

[07:26:45.0000] <Hixie_>
ditto

[07:28:18.0000] <zcorpan>
Hixie_: i've made CSSOM only know about CSS as the supported styling language, btw

[07:28:26.0000] <annevk>
zcorpan: heh, that's pretty much why I'm looking into this (different exploit of course)

[07:29:15.0000] <annevk>
zcorpan: Hixie_: I think embracing CSS / JavaScript makes sense as we'd have to rethink a whole lot of things anyway when it comes to introducing something new

[07:30:00.0000] <annevk>
zcorpan: Hixie_: also, for most other features our extensibility story is almost never that we anticipate something new but that we leave ways for new things to be introduced later

[07:30:00.0000] <Ms2ger>
Hixie_, if you want to know about xslt, you just need to ask hsivonen :)

[07:30:26.0000] <annevk>
zcorpan: Hixie_: seems kinda weird that for CSS and JavaScript we explicitly call out some theoretical non-CSS and non-JavaScript thingies

[07:30:53.0000] <zcorpan>
annevk: yeah. the features have intertwingled with css and js specifics anyway already

[07:31:12.0000] <zcorpan>
so the theory is just an illusion

[07:31:25.0000] <annevk>
right

[07:52:56.0000] <Hixie_>
Ms2ger: pretty sure he's cc'ed on those bugs

[07:53:28.0000] <Hixie_>
zcorpan: vbscript and dart have both been implemented in browsers, so it's not that much an illusion. it's just that we're not doing a good job of it.

[07:53:36.0000] <Hixie_>
(and i agree that we shouldn't...)

[07:56:54.0000] <zcorpan>
Hixie_: dart has a separate API for the DOM, right?

[07:57:09.0000] <Hixie_>
probably

[08:02:24.0000] <annevk>
rillian: http://quuz.org/webvtt/ has that error message you wanted now

[08:03:07.0000] <annevk>
rillian: see https://github.com/annevk/webvtt/commit/89316fa128668bd953be9db162dd9751a990f4d7 for the change if you're interested

[08:41:46.0000] <Hixie_>
rafaelw: ping

[08:50:32.0000] <SteveF>
question: does the browser update the value if you do a setfocus on an element whose tabindex value is set to -1? or does it just return the tabindex value for the element as set in the element attribute set? and where is this specced?

[08:51:08.0000] <annevk>
SteveF: as an editor of HTML5.1...

[08:52:20.0000] <SteveF>
annevk: I don't expect to know everything and thats HTML 5.1 to you ;-)

[08:52:47.0000] <annevk>
SteveF: you correct spelling of such things is quite rich, but fair enough

[08:52:47.0000] <SteveF>
annevk: and am happy to show my ignorance in order to get a helpful answer

[08:52:57.0000] <annevk>
correcting, even

[08:53:58.0000] <SteveF>
annevk: tongue in cheek is the term i would use, so do you know i just  wanted to bait me?

[08:54:06.0000] <annevk>
SteveF: it's not entirely clear what your question means, but I do know the answer can be found in HTML

[08:54:11.0000] <SteveF>
or just

[08:54:23.0000] <SteveF>
OK so will look some more

[08:55:15.0000] <annevk>
SteveF: e.g. whether you're talking about the DOM property or the content attribute

[08:55:26.0000] <annevk>
SteveF: and what "value" refers to

[08:58:24.0000] <SteveF>
annevk: I am talking about the HTMLElement interface property. Not the content attribute

[08:58:26.0000] <SteveF>
interface HTMLElement : Element {

[08:58:27.0000] <SteveF>
  // metadata attributes

[08:58:29.0000] <SteveF>
           attribute DOMString title;

[08:58:30.0000] <SteveF>
           attribute DOMString lang;

[08:58:32.0000] <SteveF>
           attribute boolean translate;

[08:58:33.0000] <SteveF>
           attribute DOMString dir;

[08:58:35.0000] <SteveF>
  readonly attribute DOMStringMap dataset;

[08:58:36.0000] <SteveF>
  // user interaction

[08:58:38.0000] <SteveF>
           attribute boolean hidden;

[08:58:39.0000] <SteveF>
  void click();

[08:58:41.0000] <SteveF>
           attribute long tabIndex;

[08:58:42.0000] <SteveF>
annevk: btw asking for a friend

[08:59:32.0000] <annevk>
"The tabIndex IDL attribute must reflect the value of the tabindex content attribute. Its default value is 0 for elements that are focusable and −1 for elements that are not focusable."

[09:00:29.0000] <SteveF>
annevk: thanks

[09:05:17.0000] <Hixie_>
annevk: you don't honestly expect w3c editors to have read the spec they're editing, do you?

[09:06:49.0000] <annevk>
I was going to say "I don't even" but I think I reached my quota for that

[09:07:04.0000] <annevk>
/me defers to the topic

[09:07:52.0000] <Hixie_>
(one would imagine that "reading the spec" would be a prerequisite for being assigned as editor or chair, but...)

[09:18:03.0000] <Hixie_>
darobin: since rafaelw's not around, maybe you can help. do you have any idea why rafael and tony added the "in html scope" thing? Isn't it equivalent to just asking if the element is in the stack at all?

[09:18:43.0000] <Hixie_>
darobin: (or for that matter, do you have any info on the questions i was asking yesterday, like, "<body><template><body></body><!---->; where does the comment go?")

[09:19:30.0000] <annevk>
Hixie_: are you considering nested <template> elements?

[09:20:00.0000] <annevk>
(I haven't read the <template> spec in detail, just thinking some of it might be related to that)

[09:21:25.0000] <Hixie_>
yes

[09:21:30.0000] <Hixie_>
i don't think nested templates do anything special in these cases

[09:21:33.0000] <Hixie_>
but i could be wrong, certainly

[09:26:59.0000] <annevk>
Hixie_: reading it, it does seem like all it means is if there's a <template> on the stack

[09:27:47.0000] <Hixie_>
it can't just be that, surely. otherwise why woudl rafael and tony and darobin all write it the way they did instead of the simpler way.

[09:28:55.0000] <annevk>
Hmm, how does that stack concept work? Don't <template> elements have their own stack?

[09:29:18.0000] <Hixie_>
of open elements?

[09:29:27.0000] <Hixie_>
there's just one of those

[09:30:39.0000] <Hixie_>
i'm really confused by 7.7

[09:30:39.0000] <Hixie_>
why do they only add "template" to the table scope list

[09:30:46.0000] <Hixie_>
surely it should be in all the scope lists?

[09:33:08.0000] <annevk>
/me is lost

[09:33:15.0000] <annevk>
/me goes back to hacking his URL parser

[09:33:25.0000] <Hixie_>
eh

[09:33:27.0000] <Hixie_>
heh even

[09:34:26.0000] <Hixie_>
next question. why does <template> not reset the frameset-ok flag?

[09:35:39.0000] <Hixie_>
/me also wonders why they went with "template contents" instead of "in template" for the insertion mode, given the style of all the other modes

[09:43:59.0000] <annevk>
Hixie_: consistency does not seem high on the list for most people; e.g. CSP decided to use URI throughout contrary to most of the platform

[09:45:54.0000] <rafaelw>
hixie: here now.

[09:47:47.0000] <rafaelw>
yes. that is the idea.

[09:47:53.0000] <rafaelw>
i'd be fine saying it a different way.

[09:49:38.0000] <Hixie_>
rafaelw is here! woot

[09:49:49.0000] <Hixie_>
rafaelw: ok, let me go back to my list of questions. i hope you slept well. :-)

[09:50:44.0000] <Hixie_>
rafaelw: given <button><template><button>, should the template have a button in it?

[09:52:12.0000] <Hixie_>
(currently chrome says yes, firefox says no)

[09:52:21.0000] <Hixie_>
(as far as i can tell, the spec says no)

[09:53:08.0000] <Hixie_>
(but it seems like yes is the better answer? from my naive perspective, anyway...)

[09:53:55.0000] <Hixie_>
basically this boils down to "should 'template' be added to the various lists of "in foo scope" elements, in addition to just the "in table scope" one that is specified currently"

[10:02:40.0000] <Hixie_>
(i guess we don't have to add it to the select scope list, i can't see a way in which that would affect parsing)

[10:05:29.0000] <rafaelw>
yes. slept better.

[10:05:30.0000] <rafaelw>
thanks.

[10:05:37.0000] <rafaelw>
good question. i don't think this came up previously.

[10:05:37.0000] <rafaelw>
looking

[10:08:09.0000] <dglazkov>
good morning, Whatwg!

[10:08:52.0000] <Hixie_>
rafaelw: similar question would be how to parse <body><template><body></body><!--x-->

[10:09:10.0000] <Hixie_>
rafaelw: in firefox and the spec, the comment ends up outside the template. in chrome, it goes inside the tempalte

[10:09:35.0000] <Hixie_>
(in neither case does a second <body> get created, obviously)

[10:10:43.0000] <rafaelw>
Ok. So WebKit/blink added template as a new element in the set of scope markers.

[10:10:43.0000] <Hixie_>
(nor do attributes on the second get propagated)

[10:10:47.0000] <rafaelw>
I know this was intentional.

[10:10:48.0000] <Hixie_>
seems like the right thing to do

[10:10:52.0000] <rafaelw>
That explains the button example.

[10:11:07.0000] <rafaelw>
I know the spec adds template as a "special" element.

[10:11:22.0000] <rafaelw>
(which means it gets a cute hat)

[10:12:58.0000] <Hixie_>
it also explains the comment example, i think

[10:13:06.0000] <Hixie_>
the scope thing, i mean

[10:13:12.0000] <Hixie_>
not the hat :-)

[10:15:29.0000] <MikeSmith>
Hixie_: btw not to break your train of thought, but in <p><style scoped>/* first */</style><style scoped>/* second */</style> is the second <style> instance valid or should it be reported as an error?

[10:15:40.0000] <rafaelw>
I think maybe the spec needs to add template as a (general) scope marker.

[10:15:53.0000] <Hixie_>
MikeSmith: off the top of my head, should be valid, i think. is the spec unclear?

[10:15:57.0000] <Hixie_>
rafaelw: k

[10:16:12.0000] <annevk>
you cannot have <body> inside <template>? that's kinda sad

[10:16:36.0000] <rafaelw>
you can't have <body><head> or <frameset> inside a template.

[10:16:54.0000] <rafaelw>
allowing this would have made the parser changes WAY more invasive.

[10:16:57.0000] <MikeSmith>
Hixie_: I'll make it valid in the validator for now but it's not clear to me from the spec, so I'll file a bug

[10:16:58.0000] <Hixie_>
yeah

[10:17:04.0000] <Hixie_>
MikeSmith: cool, thanks man

[10:17:10.0000] <Hixie_>
rafaelw: so next question

[10:17:18.0000] <Hixie_>
annevk: what's the use case?

[10:17:44.0000] <Hixie_>
rafaelw: <table><tr><td><select><template></template><caption>A</table> vs <table><tr><td><select><xxxxxxxx></xxxxxxxx><caption>A</table>

[10:17:56.0000] <Hixie_>
rafaelw: is the difference intentional?

[10:18:14.0000] <annevk>
Hixie_: creating generic template for some <iframe>s

[10:18:16.0000] <Hixie_>
rafaelw: http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=2374

[10:18:41.0000] <Hixie_>
annevk: just do the template for the contents of the <body> and dump it into the body

[10:18:49.0000] <Hixie_>
annevk: no need to explicitly list the body in the template

[10:19:04.0000] <Hixie_>
annevk: unless you mean you want to template the whole thing, <head>, <title>, and all?

[10:19:38.0000] <rillian>
annevk: thanks!

[10:19:50.0000] <rafaelw>
(working)

[10:19:58.0000] <annevk>
Hixie_: you might want to modify some attributes on <body> too, but sure

[10:20:42.0000] <annevk>
Hixie_: just seems annoying to have exceptions given how generic it otherwise is

[10:21:17.0000] <Hixie_>
annevk: no disagreement there

[10:21:37.0000] <Hixie_>
annevk: seems like if you're going to template the whole document, though, you might as well... just use a document

[10:21:42.0000] <annevk>
badum tish

[10:22:43.0000] <TabAtkins>
Hixie_: One use-case I saw was a code editor, which will put the code into an <iframe> afterwards.

[10:22:56.0000] <TabAtkins>
And it wants its contents to be used literally, like a <textarea>.

[10:23:44.0000] <Hixie_>
can you elaborate on how <template> fits in here?

[10:24:37.0000] <TabAtkins>
Well, I was thinking that a <template> could be wrapped around the contents to "protect" it.

[10:24:45.0000] <TabAtkins>
But then, <xmp> can be used just as well for this case.

[10:25:37.0000] <Hixie_>
or <textarea> :-)

[10:25:38.0000] <annevk>
except <xmp> is non-standard

[10:27:54.0000] <rafaelw>
Hixie: does it make sense to you why the later case doesn't ignore the <caption>A

[10:27:55.0000] <rafaelw>
?

[10:28:07.0000] <rafaelw>
Clearly Chrome doesn't, but I'm not getting why yet

[10:28:18.0000] <rafaelw>
Seems like you stay in InSelect mode and keep ignoring tokens.

[10:28:21.0000] <rafaelw>
What am I mising.

[10:28:22.0000] <rafaelw>
?

[10:28:23.0000] <Hixie_>
rafaelw: yeah, it's because the reset algorithm resets to 'in select' instead of 'in select in table' which is what it was in before

[10:28:34.0000] <Hixie_>
it's easily fixed by making the reset algorithm detect that case

[10:29:02.0000] <Hixie_>
(i think... haven't checked what that would entail yet)

[10:29:14.0000] <Hixie_>
(i hope it would just entail checking the stack for a <td> or <th>)

[10:29:19.0000] <Hixie_>
(or <caption>)

[10:29:23.0000] <rafaelw>
Ah.

[10:29:30.0000] <rafaelw>
I see. Thank you.

[10:29:32.0000] <Hixie_>
(or any table node, maybe?)

[10:29:36.0000] <rafaelw>
<sigh>

[10:29:48.0000] <rafaelw>
Well, the reset would need to do more work in this case.

[10:30:06.0000] <Hixie_>
yeah, but only in the case that it currently detects a "select"

[10:30:08.0000] <Hixie_>
so it's not a hot path

[10:30:12.0000] <rafaelw>
If it finds a <select> it would need to look further up to see if the select is in a table.

[10:30:18.0000] <Hixie_>
yeah

[10:30:20.0000] <rafaelw>
No.

[10:30:30.0000] <rafaelw>
Good catch.

[10:30:44.0000] <Hixie_>
so, i should fix that one?

[10:31:42.0000] <rafaelw>
so aside from just popping a <template>, how else can reset get called with <select> as the bottom element?

[10:32:07.0000] <Hixie_>
the only way it could before <template> was innerHTML, i think

[10:32:45.0000] <Hixie_>
(incidentally, i think i'm gonna remove all the "(fragment case)" annotations, they're becoming really convoluted to maintain and not that useful as far as i can tell)

[10:33:04.0000] <rafaelw>
no complaint.

[10:34:13.0000] <rafaelw>
i only see three places that reset: </template> (generally), </table> (when InTable), and </select> (when InSelect)

[10:34:38.0000] <rafaelw>
don't think the later two can have a <template> as the bottom element afterwards.

[10:34:40.0000] <rafaelw>
Seems safe.

[10:34:44.0000] <rafaelw>
I'll open a w3c bug

[10:34:47.0000] <bholley>
Hixie_: curious about https://www.w3.org/Bugs/Public/show_bug.cgi?id=22102#c6 when you get the chance. Let me know if there's some better way to get questions like that in your queue

[10:35:04.0000] <TabAtkins>
annevk: <xmp> is perfectly well-standardized.  It's just hidden away. ^_^

[10:35:42.0000] <annevk>
okay...

[10:36:01.0000] <bholley>
Hixie_: FWIW, I think it would be awesome to get NEEDINFO up and running on the WHATWG bugzilla. It's majorly helpful on BMO

[10:36:37.0000] <rafaelw>
Hixie: So does reset insertion mode need to just look at the previous element to see if it's a table cell element?

[10:37:18.0000] <Hixie_>
rafaelw: not just previous, it needs to check if there's a table-related element in scope, i think. for some definition of scope.

[10:37:29.0000] <Hixie_>
rafaelw: i haven't worked otu exactly what it should be yet.

[10:38:09.0000] <Hixie_>
bholley: best way is just to reopen the bug, if you want me to look at it :-) looking now...

[10:38:23.0000] <bholley>
Hixie_: ok - wasn't sure if that was kosher :-)

[10:38:25.0000] <Hixie_>
bholley: hm, yeah, dunno why i thought window.document was accessible per spec.

[10:38:32.0000] <Hixie_>
bholley: oh definitely feel free to reopen bugs

[10:38:35.0000] <Hixie_>
bholley: not a problem

[10:38:38.0000] <bholley>
Hixie_: ok, cool

[10:38:39.0000] <Hixie_>
bholley: especially from you!

[10:38:42.0000] <bholley>
:-)

[10:38:49.0000] <bholley>
Hixie_: also curious about comment 7

[10:38:52.0000] <Hixie_>
bholley: Storage is accessible cross-domain when you change document.domain

[10:39:05.0000] <Hixie_>
bholley: it's the one thing that gets neutered when you change d.d

[10:39:21.0000] <bholley>
Hixie_: why that and only that?

[10:39:32.0000] <bholley>
Hixie_: (Gecko neuters everything)

[10:40:18.0000] <Hixie_>
bholley: well, other things don't get neutered because they never did (gecko is a lone pioneer in changing that, currently)

[10:40:26.0000] <bholley>
Hixie_: (Presto too, but that's kind of moot these days)

[10:40:33.0000] <rafaelw>
How does the <select> rule for InBody get reached if the insertion mode is InTable, InTableBody etc...

[10:40:36.0000] <Hixie_>
bholley: but Storage has to be neutered because otherwise it breaks the ability to do locking or some such

[10:40:51.0000] <Hixie_>
rafaelw: the "any other" rule falls through to in body

[10:40:59.0000] <bholley>
Hixie_: locking?

[10:41:07.0000] <Hixie_>
bholley: storage mutex

[10:41:17.0000] <Hixie_>
bholley: on a per-origin basis

[10:41:26.0000] <Hixie_>
not that anyone actually implements that

[10:41:35.0000] <Hixie_>
but the spec tries to keep it possible

[10:43:13.0000] <Hixie_>
rafaelw: the next question, assuming you agree we should fix the reset algorithm for that rare edge case of 'in select', is more editorial, i hope. the spec uses "template element in html scope" -- does that just mean the same as "has a template element in the stack of open elements"?

[10:43:40.0000] <bholley>
Hixie_: Ah, I see. It would be helpful to mention that in the spec at http://www.whatwg.org/specs/web-apps/current-work/#security-localStorage  - I'll file a bug

[10:43:47.0000] <Hixie_>
bholley: thanks

[10:44:04.0000] <bholley>
Hixie_: np

[10:44:15.0000] <rafaelw>
hixie: yes

[10:44:49.0000] <rafaelw>
so presumably the point of the in select in table mode is to allow tables to close when there is a select inside which fails to close itself?

[10:46:21.0000] <Hixie_>
rafaelw: yeah

[10:46:28.0000] <Hixie_>
rafaelw: (welcome to legacy web parsing)

[10:46:39.0000] <rafaelw>
:-(

[10:47:28.0000] <Hixie_>
rafaelw: oh another question, when you see <template> you don't reset the frameset-ok flag. is that intentional? i don't remember how that flag works exactly...

[10:48:59.0000] <Hixie_>
i guess it must be, or you couldn't have a template in <head> and then use <frameset>

[10:49:47.0000] <rafaelw>
Filed: https://www.w3.org/Bugs/Public/show_bug.cgi?id=22482

[10:51:05.0000] <Hixie_>
cool

[10:51:28.0000] <Hixie_>
k, the only other thing i had on my list so far is a small comment on the way the ownerDocument requirement is phrased

[10:51:52.0000] <Hixie_>
right now it only actually sets ownerDocument to the template doc for nodes that are children of the <template>

[10:52:18.0000] <Hixie_>
so e.g. <template><div><img src='...'> would create the <div> in the template doc, but it doesn't say what the <img> would be created in

[10:52:23.0000] <Hixie_>
i assume that's just an oversight?

[10:54:29.0000] <rafaelw>
hixie: frameset-ok.

[10:54:45.0000] <Hixie_>
man, i really did a poor job of putting the start tag / end tag cases in the spec in any sort of sane order

[10:57:39.0000] <TabAtkins>
I'd always wondered what order you based that on.

[10:57:59.0000] <rafaelw>
I'm pretty sure setting frameset-ok inside template would allow <frameset>

[10:58:02.0000] <rafaelw>
which we don't want.

[10:58:21.0000] <Hixie_>
rafaelw: it's set by default, and right now you don't unset it

[10:58:28.0000] <rafaelw>
i'm now trying to convince myself that the parser *can't* currently end up inside <template> with frameset-ok set to 'ok'

[10:58:37.0000] <Hixie_>
rafaelw: if you unset it, you'd prevent <head><template></template><frameset> from working

[10:59:19.0000] <Hixie_>
rafaelw: currently you do indeed support <head><template><frameset>; i haven't checked to see what that implies.

[11:00:15.0000] <Hixie_>
(not sure why it doesn't get parsed in firefox)

[11:00:36.0000] <Hixie_>
(or chrome)

[11:00:59.0000] <Hixie_>
oh, i see

[11:01:09.0000] <rafaelw>
nope. that throws away the <frameset>.

[11:01:09.0000] <Hixie_>
<frameset> only gets parsed after head and in body

[11:01:28.0000] <Hixie_>
and in body only if you've already seen a <body> but are still frameset-ok

[11:02:11.0000] <Hixie_>
yeah i haven't studied this closely enough yet to have educated things to say about it

[11:02:15.0000] <Hixie_>
i'll add it to my list

[11:09:04.0000] <rafaelw>
I see

[11:09:05.0000] <rafaelw>
.

[11:09:30.0000] <rafaelw>
We don't need to unset it because the test for in body on <frameset> fails if a template is open.

[11:09:55.0000] <rafaelw>
If the second element on the stack of open elements is not a body element, or, if the stack of open elements has only one node on it, then ignore the token. (fragment case)

[11:09:57.0000] <rafaelw>
== false

[11:10:31.0000] <rafaelw>
this is the case for <head><template><frameset>

[11:13:55.0000] <rafaelw>
Also opened: https://www.w3.org/Bugs/Public/show_bug.cgi?id=22484

[11:17:15.0000] <Hixie_>
cool

[11:20:03.0000] <Hixie_>
so here's an interesting case: <!DOCTYPE html>&#0;<template></template><frameset></frameset>

[11:20:17.0000] <Hixie_>
the U+0000 null character pushes us into <body> mode, but doesn't reset the frameset-ok flag

[11:20:32.0000] <Hixie_>
we then parse the <template>, then get to the <frameset>, and we're still frameset-ok

[11:20:42.0000] <Hixie_>
so we nuke the entire <body>, <template> and all, and replace it with a <frameset>.

[11:21:20.0000] <Hixie_>
you'd get the same result with <!DOCTYPE html>&#0;<!-- --><frameset></frameset>

[11:21:40.0000] <Hixie_>
or <!DOCTYPE html>&#0;<link><frameset></frameset>

[11:21:54.0000] <Hixie_>
so it's probably ok to keep it with <template>

[11:25:07.0000] <Hixie_>
rafaelw: what's the change that's intended to the "A start tag whose tag name is "frameset"" part of "in body"? is it just changing the parenthetical?

[11:26:03.0000] <rafaelw>
yes.

[11:26:15.0000] <rafaelw>
before, this could only happen in the fragment case.

[11:26:20.0000] <rafaelw>
now it's template case as well.

[11:28:19.0000] <Hixie_>
k

[11:50:52.0000] <Yuhong>
IE10 finally supports Mutation Observers: http://msdn.microsoft.com/en-us/library/ie/dn265034(v=vs.85).aspx

[11:50:52.0000] <Yuhong>
*IE11

[11:51:28.0000] <Yuhong>
But with two releases of IE only supporting Mutation Events, I wonder if they can ever be removed from the platform.

[12:26:05.0000] <smaug____>
dglazkov: curious, what does "registration context." actually mean

[12:26:20.0000] <smaug____>
the window of a document may change

[12:38:57.0000] <gsnedders>
What tree should <p><table></p> give per spec?

[12:40:12.0000] <dglazkov>
smaug____: when? tell me more.

[12:41:49.0000] <smaug____>
dglazkov: I filed a bug

[12:41:55.0000] <smaug____>
dglazkov: but document.open

[12:41:55.0000] <dglazkov>
smaug____: great!

[12:42:13.0000] <smaug____>
http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#dom-document-open step 15

[12:42:56.0000] <dglazkov>
aha

[12:50:56.0000] <smaug____>
dglazkov: webkit at least used to have buggy document.open, so blink may have too

[12:51:15.0000] <dglazkov>
smaug____: right, we don't create new Window, or Document for that matter

[12:51:43.0000] <smaug____>
document.open obviously doesn't create a new document ;)

[12:52:01.0000] <dglazkov>
smaug____: sorry, right

[12:52:24.0000] <smaug____>
(well, it does, if it forwards open call to window, but that is not the case we're talking here)

[12:52:32.0000] <Hixie_>
not sure if this is relevant here, but note that a Window's Document can change too

[12:52:37.0000] <dglazkov>
intuitively, if I call document.open, I should probably blow away the custom element registry

[12:52:50.0000] <Hixie_>
specifically, if you open an iframe then navigate it, the Document changes from the about:blank one to a new one, but the Window remains.

[12:53:04.0000] <dglazkov>
Hixie_: that part's okay.

[12:53:11.0000] <Hixie_>
ok just checking

[12:53:12.0000] <dglazkov>
it's the other way around that I haven't thought through

[12:53:28.0000] <dglazkov>
smaug____: thanks for checking on me :)

[12:56:44.0000] <Hixie_>
rafaelw: why does the in body EOF token handler defer to the template contents EOF handler?

[12:56:55.0000] <Hixie_>
rafaelw: does it do something in particular that you're looking to trigger?

[12:58:09.0000] <gsnedders>
So <p><table><p> is the only case in which you can get a p element as a child of a p element from the parser. Lovely. Seems a bit horrible.

[12:58:39.0000] <Hixie_>
gsnedders: only in quirks mode right?

[12:58:45.0000] <gsnedders>
Yes.

[12:58:55.0000] <Hixie_>
and that's why quirks mode is non-conforming.

[12:58:59.0000] <gsnedders>
I may have just caused myself and abarth a panic through not realizing that. :)

[12:59:21.0000] <Hixie_>
no panicking abarth

[12:59:38.0000] <abarth>
:)

[12:59:44.0000] <Hixie_>
panicking security researchers can have adverse effects

[13:00:34.0000] <gsnedders>
/me is now imagining abarth as having a big red STOP EVERYTHING button next to him :)

[13:00:39.0000] <abarth>
SHUT DOWN EVERYTHING

[13:02:43.0000] <Hixie_>
i don't understand the EOF handling in the <template> spec

[13:03:08.0000] <Hixie_>
it looks like <template>.innerHTML = '' never stops parsing, for instance.

[13:03:45.0000] <gsnedders>
Hixie_: So html5lib has 49 tests that don't roundtrip (take tree, serialize, parse, compare tree). I wonder if this is worthwhile trying to reduce. If we ignore html5lib's serializer's brokenness with <plaintext>, it takes it down to 36. Things like <p><table><p> having no obvious serialization when presented with the tree (XML: <p><p/><table/></p>).

[13:04:21.0000] <abarth>
data:text/html,<template id="foo"><script>alert("no template support")</script></template><script>document.getElementById("foo").innerHTML = "";alert(1)</script>

[13:04:24.0000] <abarth>
seems to termiante

[13:04:24.0000] <Hixie_>
if there are any that are conforming inputs, that's definitely a problem

[13:04:31.0000] <abarth>
maybe the spec doesn't match the impl?

[13:05:38.0000] <Hixie_>
abarth: well by "doesn't stop parsing" i mean the behaviour is undefined. You run out of tokens, but never get to invoke the "stop parsing" steps.

[13:06:49.0000] <Hixie_>
gsnedders: as a general rule there's lots of things that parse into a state that can't be represented in conforming content

[13:07:04.0000] <Hixie_>
gsnedders: and the serialisation only tries to form conforming content

[13:07:24.0000] <Hixie_>
gsnedders: e.g. anything involving the form pointer would fail to round-trip correctly (i doubt html5lib would even catch that case)

[13:07:35.0000] <Hixie_>
gsnedders: but i'm happy to examine the cases if you want to talk about any in particular

[13:07:56.0000] <Hixie_>
especially now that i've the parser swapped in

[13:09:09.0000] <gsnedders>
BTW, can you remember what the "CDATA" category was renamed to?

[13:09:32.0000] <gsnedders>
escapable raw text elements, actually

[13:09:40.0000] <Hixie_>
yeah, sounds right

[13:09:45.0000] <gsnedders>
/me realizes he could just look what elements are in that group and compare :P

[13:09:46.0000] <Hixie_>
that's in syntax, not in parsing

[13:10:00.0000] <Hixie_>
parser still uses cdata

[13:10:13.0000] <rafaelw>
hixie: yes, all the potentially nested <template>s need to unwind.

[13:10:21.0000] <Hixie_>
rafaelw: why?

[13:10:31.0000] <gsnedders>
Hixie_: Parser doesn't have CDATA, just RCDATA

[13:10:42.0000] <Hixie_>
rafaelw: or rather, what does that do that just popping all the nodes like the "stop parsing" rules say to do doesn't do?

[13:10:48.0000] <Hixie_>
gsnedders: oh, right

[13:10:58.0000] <Hixie_>
gsnedders: cdata is raw text, rcdata is escapable raw text. or something.

[13:11:32.0000] <rafaelw>
let me see what it breaks =-)

[13:11:40.0000] <Hixie_>
rafaelw: i don't see anything that acts outside the parser in the </template> handling...

[13:11:47.0000] <Hixie_>
quite possible i'm missing something though

[13:12:24.0000] <gsnedders>
Hixie_: Right, so CDATA became RCDATA, and RCDATA became RAWTEXT it would appear.

[13:12:26.0000] <rafaelw>
I know there was a reason. We had a lengthy discussion about it.

[13:12:34.0000] <rafaelw>
Actually, let me try to find the bug

[13:12:38.0000] <gsnedders>
html5lib ought rename them before I get even more confused :)

[13:12:39.0000] <Hixie_>
gsnedders: that doesn't sound right

[13:13:52.0000] <gsnedders>
html5lib has cdata: title, textarea; rcdata: style, script, xmp, iframe, noembed, noframes, noscript

[13:13:57.0000] <rafaelw>
hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20924

[13:14:16.0000] <Hixie_>
aah, after-head

[13:14:17.0000] <Hixie_>
ok

[13:14:23.0000] <rafaelw>
basically, it's possible to hit EOF in body (in head)

[13:16:05.0000] <Hixie_>
yeah, this makes sense

[13:20:57.0000] <gsnedders>
Hixie_: Given I've forgotten the conclusion here, do we want nested a elements being created by the parser?

[13:21:02.0000] <gsnedders>
(non-conforming case)

[13:23:07.0000] <Hixie_>
gsnedders: in what case?

[13:23:22.0000] <Hixie_>
gsnedders: we definitely can end up with it if there's enough scoping going on, i would guess

[13:23:30.0000] <Hixie_>
gsnedders: maybe e.g. <a><table><tr><td><a> or some such

[13:23:43.0000] <Hixie_>
or <a><button><a>, i dunno off-hand what scoping "a" start tags check

[13:23:44.0000] <gsnedders>
Hixie_: Yeah, that sort of case

[13:23:52.0000] <Hixie_>
pretty sure that yes

[13:42:48.0000] <Hixie_>
i wonder why "in table"'s EOF rule doesn't defer to in body

[13:42:55.0000] <Hixie_>
it's basically the same thing...

[14:16:26.0000] <Hixie_>
i wonder why we support <template><frame><frameset> but not <template><frameset><frame>

[14:22:39.0000] <Hixie_>
this has to be an error

[14:23:04.0000] <Hixie_>
if i'm reading this right, the spec says <template><frame><frameset></frameset><frameset></frameset> ignores the end tags.

[14:36:31.0000] <zcorpan>
gsnedders: CDATA didn't become RCDATA. CDATA just became RAWTEXT. and RCDATA was always RCDATA

[14:36:51.0000] <zcorpan>
gsnedders: and the writing section renamed RCDATA to escapable text elements

[14:37:03.0000] <zcorpan>
s//raw/

[14:38:36.0000] <zcorpan>
gsnedders: looks like html5lib has cdata and rcdata backwards re http://krijnhoetmer.nl/irc-logs/whatwg/20130626#l-1058

[14:41:15.0000] <Hixie_>
i think you mean "s//raw/dwim" :-P

[14:42:34.0000] <gsnedders>
zcorpan: Weird.

[14:46:26.0000] <Hixie_>
hmm... i wonder why link, script, style, meta, and template are treated differently than base, basefont, bgsound, noframes, and title in <template>

[14:46:52.0000] <Hixie_>
maybe that's a web component thing...

[15:02:40.0000] <zcorpan>
Hixie_: those flags are on by default in irc :-)

[15:12:41.0000] <gsnedders>
html5lib-tests needs people to actually review stuff if it's actually going to be review-then-commit

[15:21:04.0000] <jgraham>
gsnedders: Sure. Encourage other people to become reviewers on that repo. But I might have time tomorrow (although I have said that about a number of other things)

[15:22:11.0000] <jgraham>
gsnedders: Oh, wait, it's not even in critic

[15:22:56.0000] <jgraham>
OK, first I should fix that, then you should encourage other people to become reviewers for it

[15:23:19.0000] <jgraham>
But tomorrow

[15:24:07.0000] <gsnedders>
jgraham: You've agreed to fix that before :P

[15:24:11.0000] <jgraham>
Or "today, after I sleep", if you don't speak en-GB-x-Hixie

[15:24:30.0000] <jgraham>
gsnedders: Well, maybe

[15:24:45.0000] <jgraham>
It is tedious to fix at the moment because it needs manual setup

[15:24:57.0000] <jgraham>
Still not going to do it before the morning though

[15:25:46.0000] <gsnedders>
Okay, so html5lib would now fail a lot of the tokenizer tests if it were up to date with the submodule.


2013-06-27
[22:34:56.0000] <matjas>
I’ve written a JavaScript library to encode/decode HTML entities as per the HTML spec (since no fully compliant library seemed to exist). Source: http://mths.be/he Demo: http://mothereff.in/html-entities Let me know if you think of any edge cases it fails on.

[22:35:42.0000] <matjas>
Hixie: needless to say, the entities.json file was extremely useful for this ^

[02:09:00.0000] <zcorpan_>
are there any specs that specify quirks apart from quirks-mode, html, cssom and cssom-view?

[02:25:21.0000] <Ms2ger>
zcorpan_, css-syntax?

[02:25:33.0000] <zcorpan_>
Ms2ger: those two quirks were moved back

[02:26:04.0000] <Ms2ger>
Ah

[02:53:23.0000] <matjas>
zcorpan_: thanks for the feedback. you mean like running this on http://mothereff.in/js-escapes (through dev tools)? var el = document.querySelector('textarea'); el.value = 'high surrogate: \uD834 low surrogate: \uDF06 surrogate pair in the wrong order: \uDF06\uD834'; el.oninput()

[02:53:53.0000] <matjas>
that returns the output I’d expect, but I’m probably missing something

[02:54:39.0000] <zcorpan_>
matjas: yes. the other direction is typing &#xD800; in the lower textarea in http://mothereff.in/html-entities which throws here

[02:54:43.0000] <matjas>
i meant http://mothereff.in/html-entities sorry

[02:56:21.0000] <matjas>
zcorpan_: ah, I see. `he.decode('&#xD800;')` works fine, it’s just that encodeURIComponent(surrogate) throws

[02:56:43.0000] <matjas>
zcorpan_: is it even possible to URLencode a lone surrogate?

[02:57:14.0000] <zcorpan_>
probably not

[02:59:11.0000] <zcorpan_>
matjas: "Otherwise, if the number is in the range 0xD800 to 0xDFFF or is greater than 0x10FFFF, then this is a parse error. Return a U+FFFD REPLACEMENT CHARACTER."

[02:59:20.0000] <matjas>
:(

[03:00:53.0000] <matjas>
/me adds a try/catch to avoid the error

[03:01:41.0000] <zcorpan_>
matjas: the output should be U+FFFD for &#xD800; per spec

[03:01:42.0000] <zcorpan_>
http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references

[03:02:27.0000] <zcorpan_>
even &#xD834;&#xDF06; -> U+FFFD U+FFFD

[03:03:40.0000] <matjas>
holy shit

[03:03:45.0000] <matjas>
good catch!

[03:04:31.0000] <zcorpan_>
you need to implement that table, too

[03:04:44.0000] <zcorpan_>
e.g. &#x0; -> U+FFFD

[03:06:06.0000] <zcorpan_>
&#x80; -> €

[03:06:22.0000] <jgraham>
gsnedders, zcorpan_, hsivonen, abarth, Hixie_, others: add yourselves as reviewers for html5lib-tests at https://critic.hoppipolla.co.uk

[03:06:45.0000] <Ms2ger>
jgraham, while you're here...

[03:06:48.0000] <Ms2ger>
http://webappsec-test.info/web-platform-tests/CSP/script-src/CSP_1_2.php

[03:06:53.0000] <jgraham>
Ms2ger: You too

[03:06:59.0000] <Ms2ger>
Is that a sane thing to do?

[03:07:35.0000] <jgraham>
Ms2ger: Seems pretty insane to me

[03:08:26.0000] <jgraham>
Or at least, I think it *could* work

[03:08:48.0000] <jgraham>
But it is likely to break people's assumptions when they try to gather test results

[03:08:59.0000] <jgraham>
So they will get 1 or 2 results but not 3

[03:09:26.0000] <Ms2ger>
That's why I'm getting complained at :)

[03:09:47.0000] <Ms2ger>
My test runner jumps to the next test before it's done

[03:09:55.0000] <jgraham>
Yep

[03:10:01.0000] <jgraham>
That's what I would expect

[03:10:31.0000] <Ms2ger>
So I reply with "don't do that"? :)

[03:10:44.0000] <jgraham>
Isn't it possible to have all three tests defined in the top-most frame and report up the tree by hand?

[03:10:56.0000] <jgraham>
Yeah, that's the best idea I think

[03:11:08.0000] <jgraham>
(to reply "don't do that")

[03:11:34.0000] <Ms2ger>
/me cc's jgraham 

[03:16:55.0000] <annevk>
zcorpan_: DOM defines quirks

[03:17:10.0000] <annevk>
zcorpan_: and uses it to define compatMode

[03:30:26.0000] <annevk>
SimonSapin: so why does css-syntax not have the quirks inlined?

[03:31:11.0000] <SimonSapin>
annevk: removed because it belongs in Values, not in Syntax

[03:31:12.0000] <Ms2ger>
annevk, because we don't want them in syntax

[03:31:31.0000] <SimonSapin>
whether it should be inlined or not is another question

[03:31:40.0000] <annevk>
SimonSapin: that sounds reasonable

[03:39:44.0000] <zcorpan>
annevk: thanks

[03:41:36.0000] <zcorpan>
also for getElementsByClassName

[03:54:09.0000] <zcorpan>
matjas: you could try looping through all possible charrefs from 0 to ffff and compare the output with what a browser gives from innerHTML

[03:55:27.0000] <zcorpan>
matjas: also, do you intend to support the different parsing mode that is used in attribute values?

[04:04:37.0000] <zcorpan>
matjas: Å gets turned into &angst; which isn't wrong but i expected &Aring;

[04:11:27.0000] <zcorpan>
matjas: are there some characters that you choose not to convert to entities? is that configurable? i notice that U+000A doesn't turn into &NewLine;

[04:14:56.0000] <zcorpan>
matjas: http://mothereff.in/html-entities throws when entering newlines in the "encoded" textarea

[04:15:07.0000] <zcorpan>
ok i think that's enough playing with it for now

[04:42:14.0000] <matjas>
zcorpan: when more than one named reference is possible for a given symbol, `he` uses the shortest one, or the one with the fewest uppercase symbols

[04:42:24.0000] <matjas>
hence &angst; instead of &Aring;

[04:42:33.0000] <zcorpan>
matjas: i see

[04:43:02.0000] <zcorpan>
matjas: i think &Aring; has better compat though in older browsers

[04:43:08.0000] <matjas>
also, it only escapes symbols that are not printable ASCII or <>"'&

[04:44:01.0000] <zcorpan>
U+OOOA isn't printable ASCII

[04:44:32.0000] <matjas>
i explicitly added \n to the whitelist a few minor versions back

[04:44:38.0000] <zcorpan>
ok

[04:44:58.0000] <matjas>
should it be configurable? i figured most of the time people wouldn’t want to use &NewLine;

[04:45:55.0000] <matjas>
(similarly, he will never output &plus; and stuff like that)

[04:45:57.0000] <zcorpan>
yeah i dunno, i was just curious if there was a rule

[04:46:39.0000] <matjas>
 support the different parsing mode that is used in attribute values → i need to look into that, but it sounds like a plan

[04:47:02.0000] <zcorpan>
maybe it'd be useful to opt to avoid named references if one wants better compat with old browsers

[04:47:39.0000] <zcorpan>
e.g. old IE doesn't support &apos;

[04:47:55.0000] <zcorpan>
nor the 1000s of mathml entities

[04:52:24.0000] <matjas>
/me files issues for everything zcorpan says

[04:56:37.0000] <Ms2ger>
Lovely

[04:56:49.0000] <Ms2ger>
We've got sites depending on img.x working

[04:56:58.0000] <Ms2ger>
And then we've got sites depending on it not working

[05:19:57.0000] <zcorpan>
matjas: give zcorpan 1,000,000 SEK

[05:20:58.0000] <zcorpan>
Ms2ger: interesting

[05:21:17.0000] <zcorpan>
Ms2ger: do you have pointer to bugs?

[05:23:48.0000] <zcorpan>
/me sees https://bugzilla.mozilla.org/show_bug.cgi?id=887660

[05:32:34.0000] <zcorpan>
Ms2ger: so webkit/blink/presto have x but IE10 doesn't

[05:37:31.0000] <matjas>
zcorpan: cannot reproduce the issue; WONTFIX

[05:37:51.0000] <zcorpan>
matjas: dang :-|

[05:39:44.0000] <gsnedders>
jgraham, ambv: am intending on pushing out a 1.0b2 over lunch (i.e., now)

[05:40:02.0000] <ambv>
Great. Do you need any help?

[05:42:06.0000] <gsnedders>
ambv: https://github.com/html5lib/html5lib-python/pull/84

[05:43:18.0000] <ambv>
gsnedders: the previous order in "Patches and suggestions" was chronological

[05:43:44.0000] <ambv>
now it's dubious because to get "alphabetical" you'd have to sort by last name

[05:44:21.0000] <gsnedders>
We need to make the order clear, at least. :)

[05:44:30.0000] <gsnedders>
(and last-name ordering is locale specific)

[05:45:57.0000] <ambv>
first name as well. Łukasz sorts after Luke and not after Zed.

[05:46:51.0000] <ambv>
I mean, that's a non-issue really, don't think I'm putting too much weight on it.

[05:46:57.0000] <gsnedders>
Yeah, I know.

[05:47:03.0000] <gsnedders>
Ordering stuff is hard.

[05:47:26.0000] <gsnedders>
/me tries to work out where fantasai should be in that list

[05:47:46.0000] <ambv>
Ordering is indeed hard. Tell me about it… http://bugs.python.org/issue18244#msg191535

[05:48:05.0000] <ambv>
Look at GVR's response below :D

[05:48:35.0000] <gsnedders>
Hah, not even touching MRO.

[05:48:58.0000] <gsnedders>
I try and *avoid* understanding it. :)

[05:50:30.0000] <gsnedders>
ambv: https://github.com/html5lib/html5lib-python/pull/84/files - that better?

[05:51:23.0000] <SimonSapin>
http://xkcd.com/541/

[05:56:14.0000] <Ms2ger>
Hixie_, you're writing down all those parsing edge cases somewhere, I hope?

[05:59:25.0000] <gsnedders>
Ms2ger: For template?

[05:59:33.0000] <Ms2ger>
Yeah

[06:00:52.0000] <Ms2ger>
jgraham, a critic question...

[06:01:10.0000] <Ms2ger>
You have select.repository { background-color: white; }

[06:01:12.0000] <Ms2ger>
Why?

[06:02:07.0000] <Ms2ger>
And what's the difference between Reviewer and Watcher?

[06:11:55.0000] <jgraham>
Ms2ger: I don't know why the background colour thing

[06:12:22.0000] <jgraham>
Ms2ger: A watcher is someone who gets the mail about a review but isn't allowed to mark changes as reviewed

[06:12:54.0000] <Ms2ger>
Seems not-so-useful

[06:13:06.0000] <jgraham>
So if there is some piece of code that you want to be able to comment on, but where you aren't the actual owner

[06:13:29.0000] <jgraham>
Well we use it a fair bit in Opera

[06:13:51.0000] <Ms2ger>
Seems useful if you want to restrict who can review what, I guess

[06:13:52.0000] <jgraham>
It can be useful for learning bits of the code that you want to know better

[06:14:07.0000] <Ms2ger>
On another note, did you see ehsan's PR?

[06:14:18.0000] <jgraham>
Yeah, I commented onit

[06:14:25.0000] <jgraham>
It's the wrong fix, I think

[06:15:45.0000] <gsnedders>
jgraham: Can you eyeball https://github.com/html5lib/html5lib-python/pull/84/files — it's purely a documentation change for 1.0b2

[06:15:53.0000] <jgraham>
Ms2ger: https://critic.hoppipolla.co.uk/r/187

[06:16:30.0000] <Ms2ger>
Will try to catch ehsan

[06:16:42.0000] <Ms2ger>
I don't want to page this in :)

[06:16:56.0000] <jgraham>
gsnedders: lr+tm

[06:19:05.0000] <SimonSapin>
Does html5lib test character encoding detection? How do you store the tests, plain files?

[06:19:36.0000] <gsnedders>
With tears.

[06:19:53.0000] <gsnedders>
https://github.com/html5lib/html5lib-tests/tree/master/encoding

[06:20:43.0000] <SimonSapin>
I’m writing many CSS Syntax tests in few JSON files, considering what to do when the input needs to be bytes

[06:21:06.0000] <gsnedders>
We use unicode escapes then encode as ISO-8859-1 in places.

[06:21:24.0000] <gsnedders>
Note that some JSON impls don't cope with characters in general category Cc as unicode escapes.

[06:21:50.0000] <SimonSapin>
I’m considering http://encoding.spec.whatwg.org/#x-user-defined

[06:23:10.0000] <SimonSapin>
which uses "private use" characters to map 0x80~0xFF

[06:27:19.0000] <SimonSapin>
It’s a shame the web does not have "real" ISO-8859-1, if only to encode bytes

[06:28:14.0000] <gsnedders>
We just take that attitude that you probably have a ISO-8859-1 encoder anyway. And if you don't, go implement one. It's not exactly hard.

[06:29:27.0000] <SimonSapin>
It’s not hard when you have a binary data type in your language ;)

[06:30:26.0000] <gsnedders>
:)

[06:30:43.0000] <gsnedders>
Yeah, had some weird issues with dom.js's HTML parser. :)

[06:46:19.0000] <matjas>
zcorpan: fixed/added everything you suggested, except for the attribute parsing: http://mothereff.in/html-entities

[06:53:41.0000] <zcorpan>
matjas: nice! here's a cookie! 🍪

[06:55:21.0000] <SimonSapin>
is it a tracking cookie?

[06:56:45.0000] <zcorpan>
it might be. but if it is, it stops tracking you when it leaves your body again.

[06:57:35.0000] <matjas>
unless that happens at Google. they collect that data (http://annevankesteren.nl/2010/04/no-joke-today)

[06:59:18.0000] <zcorpan>
matjas: the cookie would still stop tracking you when it leaves your body

[07:00:05.0000] <zcorpan>
maybe it could plant something that stays in the body, like a virus or a parasite

[07:17:47.0000] <annevk>
Can someone ask Hixie_ when he's around if all the setup about defining what objects are exposed in workers is done now in HTML?

[07:18:36.0000] <annevk>
I want to make it much clearer for XMLHttpRequest, FormData, URL, and URLQuery.

[07:18:50.0000] <annevk>
Oh, and TextEncoder and TextDecoder. Anything else?

[07:35:31.0000] <annevk>
Yes, too much email :(

[07:53:26.0000] <matjas>
zcorpan: i’m probably oversimplifying my code but the attribute value parsing seems pretty simple to implement

[07:54:25.0000] <matjas>
he.decode('foo&ampbar', { 'isAttributeValue': true }); // 'foo&ampbar'

[07:57:00.0000] <zcorpan>
matjas: do you not expand it when the next char is alphanumeric or = ?

[08:02:15.0000] <matjas>
yeah

[08:02:34.0000] <matjas>
i’ll push my commit soon. still wondering if I’m missing anything

[08:17:16.0000] <matjas>
https://github.com/mathiasbynens/he/commit/6816219031b1c1793a0dcbf29337411c2599e1a5

[08:22:58.0000] <matjas>
zcorpan_: if you wanna sanity-check the attribute parsing, reload mothereff.in/html-entities and test `he.decode()` in the console

[08:26:36.0000] <annevk>
Actually found a bug in the URL standard, yay

[08:27:16.0000] <dglazkov>
good morning, Whatwg!

[08:31:09.0000] <zcorpan_>
matjas: looks OK

[09:06:31.0000] <Hixie_>
ok. templates, day 3.

[09:13:07.0000] <annevk>
Hixie_: http://krijnhoetmer.nl/irc-logs/whatwg/20130627#l-634

[09:14:30.0000] <Hixie_>
/me looks

[09:14:42.0000] <Hixie_>
how do you mean?

[09:14:49.0000] <Hixie_>
workes and html is the same thing

[09:15:16.0000] <Hixie_>
you mean like where do we say "exposed"?

[09:15:58.0000] <Hixie_>
search for "exposed to javascript"

[09:17:35.0000] <annevk>
Hixie_: I guess what I'm wondering about is whether that's done

[09:17:42.0000] <Hixie_>
probably not

[09:17:49.0000] <Hixie_>
i don't think i yet do it for Element and company, for instance

[09:17:55.0000] <annevk>
Hixie_: when you made that commit I seem to recall you wanted to do more

[09:18:01.0000] <Hixie_>
the main problem is "The interfaces and exceptions defined by this specification, except where further restricted by explicit requirements in this specification" is far too inclusive

[09:18:07.0000] <annevk>
I cannot find the commit however :/

[09:18:08.0000] <Hixie_>
maybe i should just remove that

[09:18:13.0000] <Hixie_>
/me looks at blame

[09:18:30.0000] <Hixie_>
7851?

[09:19:48.0000] <Hixie_>
just filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=22493

[09:19:58.0000] <Hixie_>
feel free to comment in that bug about what you think should be exposed

[09:20:17.0000] <annevk>
Hixie_: yeah, which brought me to http://krijnhoetmer.nl/irc-logs/whatwg/20130424#l-597

[09:20:34.0000] <annevk>
Not entirely sure what the "relevant bug" is

[09:21:13.0000] <Hixie_>
relevant bug?

[09:21:21.0000] <Hixie_>
oh, zcorpan's comment

[09:21:23.0000] <Hixie_>
dunno

[09:22:05.0000] <annevk>
But okay, it seems I can use this for Event, Promise, URL, etc.

[09:22:08.0000] <Hixie_>
anyway, zcorpan's comment is a truism

[09:22:13.0000] <Hixie_>
i'm always intending to clarify things more :-)

[09:22:30.0000] <Hixie_>
yeah

[09:22:41.0000] <annevk>
Will look into that tomorrow. It'd be good to have that a bit clearer in those specifications.

[09:23:06.0000] <Hixie_>
anything you'd rather i list explicitly in the workers section rather than have in dom or wherever, feel free to put in the bug above (22493)

[09:23:56.0000] <annevk>
I feel like we should embrace workers as first-class citizens and that therefore it's better if we don't have magic lists.

[09:24:35.0000] <Hixie_>
lgtm

[09:41:42.0000] <Hixie_>
rafaelw: ping

[09:48:16.0000] <TabAtkins>
heycam|away: "dfn-consequential-interface" isn't a real target.

[09:59:11.0000] <Hixie_>
i don't understand why <title> triggers in-body mode when <link> doesn't.

[10:01:14.0000] <gsnedders>
Hixie_: Trigger from where?

[10:01:23.0000] <gsnedders>
(templates, I guess?)

[10:01:23.0000] <Hixie_>
<template>

[10:02:17.0000] <Hixie_>
<template><title></title><col> ends up in in-body mode, <col> is dropped. <template><link><col> ends up in colgroup mode, <col> and <link> end up as siblings.

[11:06:35.0000] <Hixie_>
it strikes me that where the HTML spec refers to "the rules given in the XML specification to map a string of bytes or characters into a Document object", it's making stuff up

[11:06:38.0000] <Hixie_>
no such rules actually exist

[11:10:13.0000] <hober>
that's right, yeah

[11:10:29.0000] <hober>
iirc there is no "xml->dom" spec, there's just the infoset doc

[11:48:25.0000] <miketaylr>
back

[13:10:30.0000] <Jasper>
http://dev.w3.org/csswg/css-syntax/ -- is it a bug that the railroad diagrams on this page are missing?

[13:11:38.0000] <Hixie_>
is it me or is "A host-including inclusive ancestor is either an inclusive ancestor or a host-including inclusive ancestor of an object's root's host, if any" a confusing sentence?

[13:11:50.0000] <Jasper>
TabAtkins, ^

[13:12:13.0000] <TabAtkins>
Hixie_: That's... very confusing.

[13:12:20.0000] <Hixie_>
ok good

[13:12:22.0000] <Hixie_>
/me files bug

[13:12:23.0000] <TabAtkins>
Jasper: Ooh, yeah, forgot about that bug.  Let me fix.

[13:12:35.0000] <TabAtkins>
Preprocessor seems to not like SVG or something.

[13:12:55.0000] <Jasper>
TabAtkins, ns0:svg ?? I don't think that will work...

[13:13:06.0000] <TabAtkins>
Interesting...

[13:13:08.0000] <TabAtkins>
No, it won't work.

[13:13:13.0000] <Jasper>
Like, I don't think HTML5 has XML namespace support :)

[13:13:17.0000] <Jasper>
(And I'm fairly happy with that)

[13:13:17.0000] <TabAtkins>
The HTML parser doesn't give a crap about SVG namespace.

[13:13:31.0000] <Hixie_>
filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=22496

[13:13:50.0000] <TabAtkins>
gsnedders: Any clue how to make the lxml tree output SVG in a null namespace when embedded in HTML?

[13:17:20.0000] <Hixie_>
rafaelw: ping?

[13:28:16.0000] <TabAtkins>
gsnedders: Alternately, how to make html5lib just output <svg> elements as in the HTML namespace, to trick lxml into not putting namespaces on them?

[13:28:51.0000] <Hixie_>
it puts prefixes on them?

[13:29:20.0000] <TabAtkins>
Yeah, check the source of http://dev.w3.org/csswg/css-syntax/#token-diagrams

[13:29:32.0000] <TabAtkins>
The <dl> down there is supposed to contain SVG diagrams.

[13:30:41.0000] <Hixie_>
just run a postprocessing step that strips the prefixes :-)

[13:31:01.0000] <TabAtkins>
Possible, but hacky and terrible. ;_;

[13:53:20.0000] <zcorpan>
wonder what the CSSOM for @page *should* be. right now it's just wrong

[13:54:25.0000] <Hixie_>
i wonder why <select><template> is important and whether that means we should support e.g. <ol><template>...

[13:54:38.0000] <Hixie_>
seems like it'd be a mess unless we require <template> to be at the top

[13:54:48.0000] <zcorpan>
TabAtkins: doesn't html5lib's serializer do teh right thing?

[13:54:49.0000] <TabAtkins>
zcorpan: Why is it wrong?  I mean, it's terrible, but it seems to be the minimal possible correct interface.

[13:55:04.0000] <zcorpan>
TabAtkins: it doesn't represent the child at-rules

[13:55:04.0000] <TabAtkins>
Oh, but it's a CSSSTyleDeclaration.

[13:55:08.0000] <TabAtkins>
Yeah.

[13:55:19.0000] <zcorpan>
and includes all the properties

[13:55:26.0000] <TabAtkins>
zcorpan: I don't know what I'm doing, so I think I'm just using lxml's html serializer.

[13:56:58.0000] <TabAtkins>
zcorpan: html5lib's documentation is... lacking, to say the least.

[13:57:08.0000] <Hixie_>
should we allow <hgroup><template> ?

[13:57:12.0000] <zcorpan>
TabAtkins: <svg> roundtrips in anolis at least

[13:57:20.0000] <Hixie_>
i don't see a use case...

[13:57:47.0000] <Hixie_>
wow, even <Table><template> is gonna be a minefield. i guess we should require that they be the first children of <table>.

[13:58:10.0000] <zcorpan>
Hixie_: is there a parsing problem with supporting <hgroup><template>?

[13:58:23.0000] <Hixie_>
zcorpan: not that i can see

[13:58:35.0000] <TabAtkins>
zcorpan: Do I use something like "from html5lib.serializer import HTMLSerializer"?

[13:59:08.0000] <zcorpan>
TabAtkins: no idea. check the source of anolis, maybe?

[13:59:09.0000] <TabAtkins>
Hixie_: With <template> being such a generic tool, any parsing limitations that don't have a strong reason for existing should be removed.

[13:59:23.0000] <Hixie_>
i'm talking content models now, not parsing

[13:59:38.0000] <Hixie_>
for parsing i've done as much as i think is possible sanely.

[13:59:39.0000] <TabAtkins>
Oh, then yeah, allow it everywhere.

[13:59:57.0000] <Hixie_>
well, it can't be allowed everywhere, because of the parsing limitations

[14:00:13.0000] <TabAtkins>
Frex, <ol><template> is great when you have the auto-stamping templates.  <ol><template><li>...</template></ol>

[14:00:23.0000] <zcorpan>
content models are easy to change when people complain

[14:00:26.0000] <Hixie_>
e.g. <table> <tr> <template> </template> <tr> ... is gonna put it in the <tr>, not the <table>, so we probably want to encourage <template> to be before the <tr>s

[14:00:32.0000] <Hixie_>
i've allowed it in <ol>

[14:01:14.0000] <TabAtkins>
And the point is, <template> is just the generic "how to do templating in HTML" solution. If you can imagine someone ever producing some markup from a template in JS (which I totally can with the contents of an <hgroup>), it should be allowed.

[14:01:34.0000] <Hixie_>
yeah, that's fair

[14:01:39.0000] <zcorpan>
allow in the same places we allow <script>?

[14:01:52.0000] <Hixie_>
zcorpan: it's allowed in many more places than that

[14:01:57.0000] <Hixie_>
zcorpan: e.g. in <ol>

[14:02:10.0000] <zcorpan>
why don't we allow <script> there?

[14:02:11.0000] <Hixie_>
sweet lord this means <ruby>'s content model is going to get EVEN MORE complicated

[14:02:18.0000] <Hixie_>
zcorpan: dunno, but we don't

[14:02:29.0000] <zcorpan>
ok

[14:02:48.0000] <Hixie_>
(we can consider changing that, but let's do that in a separate change!)

[14:04:01.0000] <Hixie_>
ah! no! saved by phrasing content. ruby can remain no more complicated than it already is.

[14:04:51.0000] <rafaelw>
hixie: sorry. here now.

[14:05:30.0000] <Hixie_>
rafaelw: hello sir!

[14:05:33.0000] <Hixie_>
rafaelw: question for you

[14:05:36.0000] <rafaelw>
shoot.

[14:06:07.0000] <Hixie_>
rafaelw: any idea why the "template contents" insertion mode checks for 'A start tag whose name is one of: "link", "script", "style", "meta"', but not, e.g., "base"?

[14:06:32.0000] <Hixie_>
rafaelw: meaning <template><link><col> ends up in colgroup mode, but <template><base><col> ends up in body mode and drops the col?

[14:06:57.0000] <rafaelw>
the idea was that there would be a set of elements which didn't "select the implied context element"

[14:07:23.0000] <rafaelw>
link, script, meta, style was (mainly) the list I got from tab (& you, irrc) at the time.

[14:07:33.0000] <rafaelw>
i think it would be fine to add more elements to that list.

[14:07:56.0000] <Hixie_>
ok

[14:08:09.0000] <Hixie_>
how about adding all the elements that are handled in "head" mode?

[14:08:34.0000] <Hixie_>
that seems like the least arbitrary list

[14:08:51.0000] <rafaelw>
what is that list?

[14:09:02.0000] <rafaelw>
(other than what we've already mentioned?

[14:09:15.0000] <Hixie_>
one sec

[14:09:32.0000] <Hixie_>
"base", "basefont", "bgsound", "link", "meta", "noframes", "script", "style", "title"

[14:13:27.0000] <Hixie_>
TabAtkins: so should we raise a validator warning if you use a <template> in a specific place, e.g. <ol> or <colgroup>, and put elements inside it that are nonsensical there?

[14:13:54.0000] <TabAtkins>
I think it's reasonable to more or less treat <template> as transparent, yes.

[14:13:56.0000] <Hixie_>
TabAtkins: it seems like that would more likely be an error than not, no? and if you want to do a random template, you can always put it in flow content...

[14:14:21.0000] <rafaelw>
So it seems clear to me that <style> and <script> should not select the implied context.

[14:14:30.0000] <Hixie_>
TabAtkins: well, it can't be only transparent, since e.g. you want to allow those specific templates in random places in <body> and <head>, right?

[14:14:43.0000] <Hixie_>
rafaelw: agreed

[14:14:43.0000] <TabAtkins>
Oh, true.

[14:14:48.0000] <rafaelw>
the rest of the metadata elements I wonder whether they should select <head> as the implied context.

[14:15:33.0000] <Hixie_>
rafaelw: there doesn't seem to be an advantage to doing that. it would just prevent us from using those elements anywhere later.

[14:15:43.0000] <Hixie_>
rafaelw: (e.g. as we have now with <link> and <meta>)

[14:16:20.0000] <rafaelw>
meaning <link> can now be used outside of head, e.g. for HTML Imports?

[14:16:29.0000] <Hixie_>
for microdata

[14:16:37.0000] <rafaelw>
and meta?

[14:16:50.0000] <Hixie_>
link and meta in <body> are currently defined for microdata

[14:17:04.0000] <Hixie_>
but they and the others could be used for other things, they parse just fine

[14:17:14.0000] <rafaelw>
yeah. i mean, I guess it's ok to allow the metadata elements to not select the implied context.

[14:17:23.0000] <rafaelw>
it kind of breaks down the mental model we were shooting for, though.

[14:17:37.0000] <TabAtkins>
Jasper: Thanks for bugging me; the railroad diagrams are fixed now.

[14:17:44.0000] <Hixie_>
rafaelw: what's the mental model?

[14:17:52.0000] <rafaelw>
which was that for any given input, you can point to a sane element which had you applied innerHTML to that element, it would have produced the same fragment.

[14:18:13.0000] <rafaelw>
Not totally acheivable, but that was kind of the goal.

[14:18:25.0000] <Hixie_>
why does this break that?

[14:18:38.0000] <rafaelw>
i.e. tr.innerHTML = <script><td> is ligit

[14:18:53.0000] <Hixie_>
(note that head.innerHTML uses 'in body', not 'in head')

[14:20:33.0000] <rafaelw>
Ah. Well, in that case.

[14:20:34.0000] <rafaelw>
Go nuts!

[14:20:37.0000] <TabAtkins>
zcorpan: It looks like CSSPageRule should inherit from CSSGroupingRule (to get the rule list stuff), and then expose attributes for all the properties (possibly in prose, so we can expand it without monkey-patching?  Maybe that's okay, since we can just do a partial interface.)

[14:20:52.0000] <Hixie_>
rafaelw: k :-)

[14:21:28.0000] <rafaelw>
Yeah. I'm fine allowing metadata elements to not select the implied context.

[14:21:41.0000] <rafaelw>
I'll open a w3c bug to make sure the other editors are ok.

[14:21:49.0000] <TabAtkins>
zcorpan: By "that's okay", I meant just writing the exposed properties directly into the interface definition.

[14:22:21.0000] <TabAtkins>
Well, they should be exposed on the .style attribute, that is.

[14:22:37.0000] <TabAtkins>
Via a CSSPageDeclarations object or something.

[14:23:10.0000] <TabAtkins>
Ugh, though that means we don't have all the declaration-handling stuff from CSSStyleDeclaration.

[14:23:16.0000] <TabAtkins>
We need to refactor some of that stuff.

[14:23:33.0000] <Hixie_>
rafaelw: the other thing is that the template spec doesn't actually technically allow you to use template anywhere (like in <ol>, <table>, etc), is that just an oversight? we were talking before you got here of allowing it pretty much everywhere

[14:23:34.0000] <zcorpan>
TabAtkins: i don't follow

[14:23:47.0000] <TabAtkins>
Never mind me.

[14:24:01.0000] <TabAtkins>
Anyway, just shift CSSPageRule to inheriting from CSSGroupingRule instead of CSSRule.

[14:24:13.0000] <TabAtkins>
That'll give you the appropriate stuff for it containing at-rules.

[14:25:59.0000] <rafaelw>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=22501

[14:25:59.0000] <zcorpan>
TabAtkins: so cssRules would return the at-rules, and .style would give the margin declarations?

[14:26:14.0000] <TabAtkins>
Yeah.

[14:26:43.0000] <zcorpan>
it's not a problem that style exposes everything under the sun while @page only supports margin?

[14:27:09.0000] <Jasper>
TabAtkins, thanks!! This is why I love the web dev community..

[14:27:23.0000] <TabAtkins>
As far as I can tell, it doesn't.  The declarations are just "the CSS declarations associated with the object".

[14:27:45.0000] <rafaelw>
hixie: looking.

[14:28:02.0000] <zcorpan>
sure, but there are all properties are IDL attributes on CSSStyleDeclaration

[14:28:07.0000] <gavinc>
Should or shouldn't test cases dealing with unicode ranges include unassigned characters? XML test cases does, but it feels good and crazy

[14:28:41.0000] <rafaelw>
hixie: ok, let's take those one at a time.

[14:28:46.0000] <zcorpan>
so you could do pagerule.style.backgroundColor

[14:28:46.0000] <TabAtkins>
Ah, got it.

[14:28:59.0000] <rafaelw>
i know that <table><template> works.

[14:29:05.0000] <rafaelw>
there are tests for that in html5lib.

[14:29:12.0000] <rafaelw>
does it look like the spec doesn't allow it?

[14:29:17.0000] <TabAtkins>
The clear answer is that we need to pull all the generic machinery out to a superclass, and then just have CSSStyleDeclaration inherit from that and apply the generic CSS properties.

[14:29:33.0000] <TabAtkins>
And page rules can do the same, but for the page properties.

[14:29:46.0000] <zcorpan>
yeah, that seems like a sane way to do it

[14:30:17.0000] <zcorpan>
although you can't tell what order was used for at-rules and declarations, but i guess that's fine

[14:30:45.0000] <rafaelw>
ol looks like it works as well.

[14:30:47.0000] <rafaelw>
what am i missing?

[14:31:02.0000] <Hixie_>
rafaelw: i'm not talking about parsing, i'm talking about document conformance requirements. what's allowed for authors to do.

[14:31:13.0000] <zcorpan>
i.e. @page { @bottom-left {} margin:1em } and @page { margin:1em; @bottom-left {} } would be represented the same

[14:31:22.0000] <rafaelw>
document con-what-ance?

[14:31:36.0000] <rafaelw>
what's that?

[14:31:54.0000] <Hixie_>
rafaelw: the rules that html authors follow that decides that they can't put <p> inside <ol> or <li> inside <p>

[14:32:05.0000] <Hixie_>
rafaelw: known in the trade as the "content mdel"

[14:32:06.0000] <Hixie_>
model

[14:32:40.0000] <rafaelw>
So, e.g. http://www.whatwg.org/specs/web-apps/current-work/multipage/tabular-data.html#the-table-element

[14:32:48.0000] <zcorpan>
TabAtkins: CSSFontFaceRule is inconsistent, maybe it should switch to .style after i fix CSSPageRule?

[14:32:57.0000] <rafaelw>
maybe should say that it's content model is ... and *template*

[14:32:59.0000] <rafaelw>
?

[14:33:07.0000] <rafaelw>
its

[14:33:25.0000] <TabAtkins>
zcorpan: Right, you can't tell order.  The only place where I imagine that'll ever matter is when we do @mixin or the equivalent, and we'll just have to figure that out when we come to it.

[14:33:31.0000] <rafaelw>
(just trying to understand what part of the spec we are talking about)

[14:33:34.0000] <Hixie_>
rafaelw: right

[14:33:40.0000] <rafaelw>
I see.

[14:33:48.0000] <rafaelw>
That hadn't occurred to me =-(.

[14:33:52.0000] <TabAtkins>
zcorpan: CSSCounterStyleRule is like CSSFontFaceRule.  When possible, I prefer exposing the attributes directly, rather than having to go through a .style indirection.

[14:33:54.0000] <Hixie_>
rafaelw: (probably saying <template> has to be first, so people don't run into problems with implied end tags)

[14:33:58.0000] <Hixie_>
rafaelw: it's no biggie

[14:34:05.0000] <Hixie_>
rafaelw: i'll just add it all over the place

[14:34:14.0000] <TabAtkins>
Switching CSSPageRule to the @font-face style would be better imo. ^_^

[14:34:15.0000] <rafaelw>
Does that content model imply anything for implementations?

[14:34:21.0000] <Hixie_>
rafaelw: not to browser implementations, no

[14:34:22.0000] <rafaelw>
Or is it purely communication to authors?

[14:34:26.0000] <rafaelw>
I see.

[14:34:34.0000] <Hixie_>
validators and authors

[14:34:36.0000] <Hixie_>
and editors

[14:34:39.0000] <rafaelw>
I see.

[14:34:44.0000] <rafaelw>
Ok. Yup, that makes sense.

[14:35:15.0000] <rafaelw>
Thanks, once again =-)

[14:35:26.0000] <zcorpan>
TabAtkins: so at-rules via cssRules and margins exposed as hard-coded IDL attributes?

[14:35:41.0000] <Hixie_>
rafaelw: np!

[14:35:49.0000] <TabAtkins>
zcorpan: Yeah.

[14:36:05.0000] <Hixie_>
rafaelw: nearly done with this edit, just need to finish off the <template> section itself (element definition, idl, examples, etc)

[14:36:07.0000] <zcorpan>
ok

[14:36:25.0000] <TabAtkins>
That's my preferred solution, at least.

[14:37:46.0000] <TabAtkins>
Actually... if we follow the @font-face example, you don't need any of the CSSStyleDeclaration methods at all.

[14:38:31.0000] <TabAtkins>
They only exist to help with generic handling of the rule, since the number of potential attributes it could have is so large and continually-growing.

[14:38:40.0000] <TabAtkins>
For a single at-rule, the list is small and rarely-growing.

[14:38:46.0000] <zcorpan>
should it have an attribute for the shorthand?

[14:38:54.0000] <TabAtkins>
Yeah.

[14:39:04.0000] <TabAtkins>
If you can set it in the rule, it should have an attribute.

[14:39:15.0000] <Hixie_>
most. complicated. content. model. ever.

[14:39:44.0000] <TabAtkins>
(Plus, we expand things into shorthands all the time, so you always have to treat shorthands and longhands the same, to aid with future expansion.)

[14:42:35.0000] <TabAtkins>
zcorpan: Just to be sure, I'm bringing up the .style/direct question on the list, to make sure we have agreement.

[14:43:08.0000] <zcorpan>
TabAtkins: ok, thanks. i filed a bug https://www.w3.org/Bugs/Public/show_bug.cgi?id=22500

[14:45:05.0000] <Hixie_>
wow. we have no elements so far whose content model depends on what the parent element is, except those that are transparent.

[14:45:20.0000] <Hixie_>
how the heck did we last that long without content models that depend on context? that's amazing

[14:47:29.0000] <Hixie_>
TabAtkins: hah, my definition of transparent means i can's use it here, because it means "use the same part of hte content model in which this element was placed", but for most cases, that's a part of the content model that just says "zero or more template elements"

[14:48:07.0000] <TabAtkins>
Hm, that sounds weird.

[14:48:20.0000] <TabAtkins>
Why is there any place with an explicit content model of "zero or more template elements"?

[14:48:38.0000] <TabAtkins>
Oh, that's what you mean by "part of"

[14:48:50.0000] <Hixie_>
right, like, ol is zero or more template, followed by zero or more li

[14:49:03.0000] <Hixie_>
so if i made template transparent, it would itself only allow zero or more templates...

[14:49:07.0000] <Hixie_>
and no lis.

[14:49:17.0000] <TabAtkins>
Hixie_: Being able to mix <li> and <template> seems useful.

[14:49:41.0000] <Hixie_>
yeah but <ul> <li> <template></template> <li> <li> </ul> doesn't do what you think it does

[14:49:50.0000] <Hixie_>
since <template> doesn't autoclose <li>

[14:49:51.0000] <TabAtkins>
Sure, but that's just the auto-closing rules.

[14:50:11.0000] <Hixie_>
right

[14:50:12.0000] <TabAtkins>
Only <li> closes an <li>.  (Or </ul>, or probably a few more less obvious cases I don't rely on.)

[14:50:36.0000] <TabAtkins>
On the other hand, I have a use-case for mixing static <li>s at the start of the list with a bunch of dynamically-generated <li>s following.

[14:50:57.0000] <TabAtkins>
My recipe app does this with the list of recipes on the week planner page.

[14:50:58.0000] <Hixie_>
i suppose we could allow it

[14:51:14.0000] <TabAtkins>
It starts with "Free Entry" and "Fasting", and then lists all the actual recipes in the db.

[14:52:15.0000] <Hixie_>
you gonna want <dl> <dt></dt> <template></template> <dd></dd> </dl>, or should i force <template> to replace entire groups in <dl>?

[14:52:37.0000] <TabAtkins>
Mixed.  I can see using <template> to just fill in <dd>s.

[14:53:06.0000] <TabAtkins>
Resist the urge to add nanny restrictions. ^_^

[14:53:30.0000] <Hixie_>
i don't see them as restrictions, i see them as helpful ways to catch errors

[14:55:35.0000] <zcorpan>
you can't force <template> to replace entire groups anyway. say you have <dl><dt><dd></dd> <template></template> <dt><dd></dl>, if the template inserts a dd it becomes part of the earlier group

[14:56:14.0000] <Hixie_>
the content model of the <template> in that case could also be to have entire groups

[14:56:27.0000] <zcorpan>
ah ok

[14:56:36.0000] <Hixie_>
(but won't)

[14:58:13.0000] <Hixie_>
ok, so the current <dl> content model is: Zero or more groups each consisting of one or more dt elements followed by one or more dd elements.

[14:58:20.0000] <Hixie_>
what should it be, to allow <template>?

[15:00:21.0000] <Hixie_>
zcorpan: (btw if you want scripts allowed everywhere, it'll be trivial to make that happen once i've done all this work -- just make template and script have a new category, and replace "template" with that category everywhere in the content models. file a bug if you want that.)

[15:01:40.0000] <zcorpan>
Hixie_: ok

[15:04:27.0000] <zcorpan>
done

[15:13:50.0000] <annevk>
Hixie_: you want something similar to transparent I guess, it's valid (almost?) anywhere so just ignore it for the purposes of the content model of the parent

[15:50:49.0000] <Hixie_>
so it was brought to my attention that actually you might well want any random content model

[15:51:16.0000] <Hixie_>
e.g. <ol><template>Hello</template></ol> might be used by a script to stamp out <li>s which it then fills with the template.

[15:53:25.0000] <annevk>
yeah, I think <template> is basically anywhere and anything

[15:54:13.0000] <zcorpan>
<ol><template><td>hello</template></ol> ?

[15:54:22.0000] <TabAtkins>
annevk: Yeah, our argument was that, at least for normal <template>, let it be anything, because you dont' know what it'll be used for.  When you mix in MDV and <template iterate>/etc, you can do content checking, because you have declarative knowledge of what it'll be used for.

[15:54:27.0000] <zewt>
i've done that sort of thing with <tr>'s with manual templating for table entries, recall it being sort of annoying

[15:54:44.0000] <TabAtkins>
zcorpan: Nearly that exact example was used in our convo.  ^_^

[15:57:17.0000] <Hixie_>
anyone have a link to rafaelw's mdv spec, if such a thing exists? (not sure i know what i'm asking)

[15:57:30.0000] <rafaelw>
mdv? what's that?

[15:57:31.0000] <rafaelw>
;-)

[15:57:40.0000] <rafaelw>
There isn't a current "spec"

[15:57:43.0000] <rafaelw>
The spec is the code

[15:57:44.0000] <zcorpan>
btw tomorrow is my last day before several weeks of vacation, so if there's something i should fix tomorrow, lemme know :-)

[15:57:56.0000] <rafaelw>
The design has evolved to the point that it is conceptually two additional primitives.

[15:58:09.0000] <Hixie_>
zcorpan: yeah, what if they are going to stamp an <li><table>...<tr><th>... and then append the template

[15:58:14.0000] <rafaelw>
I'm planning to "spec" those (probably hand-wavy) to see if I can get anyone interested again.

[15:58:28.0000] <rafaelw>
Anything in particular you are curious about?

[15:58:46.0000] <Hixie_>
rafaelw: the context is i'm trying to work out if there's a context in which more detailed content models (ways to catch authoring mistakes) would help

[15:58:56.0000] <Hixie_>
rafaelw: so mostly i'm curious about what hte markup looks like

[15:59:36.0000] <rafaelw>
i see. then, yeah, there are some examples here: https://github.com/Polymer/mdv/tree/stable/examples/how_to

[15:59:43.0000] <Hixie_>
thanks

[16:01:17.0000] <Hixie_>
TabAtkins: fffffffffuuuuuuuuuu, <table> content model is even more insane to add <template> to arbitrarily

[16:01:33.0000] <TabAtkins>
Hixie_: Hahaha! Mine is an evil laugh!

[16:01:48.0000] <Hixie_>
seriously wtf, i don't even

[16:02:14.0000] <Hixie_>
/me finds a hack

[16:02:45.0000] <Hixie_>
", optionally with one or more <code>template</code> elements between any of the other elements"

[16:07:07.0000] <zcorpan>
should https://github.com/Polymer/mdv/blob/stable/examples/how_to/conditional_template.html be valid?

[16:07:30.0000] <gsnedders>
TabAtkins: What are you trying to do!?

[16:07:57.0000] <gsnedders>
TabAtkins: Trying to stop html5lib from putting foreign elements in a namespace?

[16:08:41.0000] <zcorpan>
seems like it shouldn't be using <ul>

[16:08:42.0000] <gsnedders>
TabAtkins: I don't see anything weird in that spec?

[16:09:12.0000] <gsnedders>
TabAtkins: Give me better bug reports, damn it! :P

[16:10:19.0000] <TabAtkins>
gsnedders: Basically, yeah.  ^_^  I fixed it by using html5lib's serializer, which I didn't realize was even available.  I was using lxml's serializer before.

[16:10:28.0000] <TabAtkins>
Which only serializes as xhtml, and so puts the namespaces stuff on <svg>.

[16:10:59.0000] <annevk>
Hixie_: sounds like MikeSmith is gonna love you

[16:12:31.0000] <gsnedders>
TabAtkins: Well, duh. lxml's serializer outputs XML. (Or does it have an HTML serializer?)

[16:13:04.0000] <gsnedders>
TabAtkins: html5lib's serializer doesn't really work for foreign content, but does most of the time. Breaks when you have namespaced attributes on foreign content, I believe.

[16:17:08.0000] <TabAtkins>
gsnedders: Well, I kind of expect that "html.tostring()" would output html.  ^_^

[16:17:23.0000] <TabAtkins>
Luckily I don't care about namespaces stuff in foreign content.  I just copied code from anolis.

[16:25:50.0000] <gsnedders>
TabAtkins: Oh, there is an html.tostring. But yeah, that just uses libxml2's HTML stuff. Which, as know, is shit.


2013-06-28
[17:15:38.0000] <heycam>
TabAtkins, thanks, fixed the broken links

[17:18:43.0000] <TabAtkins>
zcorpan: No, that example shouldn't be valid.  That falls into the "we know declaratively that it'll stamp something out there" case.

[17:19:21.0000] <TabAtkins>
I think in those cases, the content model should just be strictly transparent?

[23:51:31.0000] <gsnedders>
http://slashdot.org/comments.pl?sid=3912831&threshold=-1&commentsort=0&mode=nested&pid=44127847 — dbaron's desk isn't a good response to that, is it? :P

[01:14:08.0000] <zcorpan>
hmm, the only case-sensitive css properties are variables, right?

[01:14:36.0000] <zcorpan>
and they are exposed in a separate interface, so i can pretend that all properties are insensitive

[01:18:11.0000] <SimonSapin>
zcorpan: yes

[01:18:22.0000] <zcorpan>
thanks

[01:19:13.0000] <SimonSapin>
if we add anything case-sensitive in the future, it will be because it’s author-defined and thus probably in a separate interface like variables

[01:20:33.0000] <zcorpan>
are properties normalized to lowercase somewhere?

[01:21:28.0000] <Ms2ger>
/me waves hands

[01:26:20.0000] <MikeSmith>
/me wonders if Ms2ger is waving his own hands, or somebody else's hands

[01:26:31.0000] <Ms2ger>
MikeSmith, yours

[01:27:27.0000] <MikeSmith>
damn that's where they went

[02:33:59.0000] <annevk>
FWIW, I started patching https://github.com/annevk/url again

[02:35:38.0000] <annevk>
I hope to get a bit further this time around and work on the test suite through my own JavaScript implementation of the specification. I realize that makes me the single point of failure for three pieces that really ought to be done by separate people, but nobody else seems to care about fixing URLs... Which is surprising in my mind, but I'm sure there's a reasonable explanation.

[02:36:46.0000] <annevk>
The other goal, as mentioned already, is to make parsing idempotent. That we lost that property is bad and we should claim it back.

[04:35:36.0000] <matjas>
annevk++

[04:51:04.0000] <SimonSapin>
zcorpan: implementations probably normalize to lower-case at some point, but not sure what you mean

[04:51:46.0000] <zcorpan>
SimonSapin: i mean in the specs, if i can assume that they are lowercase for the purpose of CSSOM

[04:52:46.0000] <SimonSapin>
I seem to recall "If there is a property that is a ASCII case-insensitive match for the parameter, …" text in CSSOM

[04:54:49.0000] <zcorpan>
yeah, i've just changed it to fold to lowercase and do a case-sensitive compare. i added "A supported CSS property must be in its lowercase form for the purpose of comparisons this specification."

[04:55:35.0000] <zcorpan>
seems like a saner model to store them in lowercase

[04:56:18.0000] <Ms2ger>
Or as an enum

[04:56:51.0000] <SimonSapin>
implementation can do string interning or something, the spec shouldn’t have to be aware of that

[04:57:10.0000] <zcorpan>
sure, i mean model for the spec

[04:58:04.0000] <zcorpan>
either the spec preserves case in its "declarations" and does case-insensitive compares last minute, or it folds stuff to lowercase at the start and does case-sensitive comparisons

[04:58:08.0000] <zcorpan>
i prefer the latter

[04:58:35.0000] <SimonSapin>
you still need to fold parameters to the various methods

[04:58:43.0000] <zcorpan>
yep

[07:06:13.0000] <SimonSapin>
what does the html5lib serializer do with attribute order?

[07:07:16.0000] <SimonSapin>
I’m getting a huge diff in the generated version of css-syntax because I get a different attribute order than TabAtkins

[07:24:49.0000] <zcorpan>
i think that might have changed relatively recently in html5lib

[07:25:08.0000] <zcorpan>
so make sure you have the same version, i guess

[07:25:39.0000] <SimonSapin>
I hope it’s deterministic, within a html5lib version

[07:26:05.0000] <zcorpan>
probably is

[07:26:31.0000] <zcorpan>
though i haven't looked at the code, but i've never noticed them changing for me :-)

[07:26:42.0000] <SimonSapin>
TabAtkins: are you using 1.0b2 for what’s is the CSSWG repo?

[07:48:53.0000] <GPHemsley>
SimonSapin: Attribute order in html5lib is a recent issue that we had with anolis. Basically, if the tree builder doesn't maintain attribute order, it's non-deterministic. (gsnedders could probably explain more.)

[07:50:09.0000] <SimonSapin>
GPHemsley: Tab’s processor is using lxml I think

[07:50:34.0000] <SimonSapin>
couldn’t we sort on output?

[07:59:32.0000] <dglazkov>
good morning, Whatwg!

[08:02:29.0000] <gsnedders>
SimonSapin: It's whatever order the tree API stores it in, basically. Which in lxml's case is explicitly undefined.

[08:02:45.0000] <gsnedders>
SimonSapin: So there's no guarantee of stability.

[08:03:30.0000] <SimonSapin>
that sucks

[08:03:32.0000] <gsnedders>
SimonSapin: There's a alphabetical_attributes=True|False option on the serializer which will reorder all attributes into alphabetical order

[08:03:49.0000] <SimonSapin>
ah, I guess that’s what I want

[08:03:56.0000] <SimonSapin>
what does anolis do?

[08:04:14.0000] <gsnedders>
SimonSapin: We can't blindingly reorder it, otherwise people who want things to roundtrip without changing order, using a tree API that preserves order, are screwed over by us reordering it.

[08:04:34.0000] <SimonSapin>
yeah, I understand why it’s not the default

[08:04:59.0000] <gsnedders>
Blame fantasai for screaming at me to change it for years. :P

[08:05:43.0000] <gsnedders>
But yeah, we're now as deterministic as the underlying storage. Which makes sense, really.

[08:08:10.0000] <SimonSapin>
so what tree builders preserve the order?

[08:08:43.0000] <gsnedders>
lxml does currently, although it's explicitly defined as being undefined.

[08:09:02.0000] <SimonSapin>
ew

[08:09:14.0000] <gsnedders>
Blame fantasai.

[08:09:18.0000] <gsnedders>
Her fault.

[08:09:20.0000] <SimonSapin>
for lxml?

[08:09:45.0000] <gsnedders>
No, for wanting the behaviour in html5lib despite the underlying behaviour being undefined

[08:10:03.0000] <SimonSapin>
the alternative being always sorting?

[08:10:09.0000] <gsnedders>
Ja.

[08:10:15.0000] <SimonSapin>
ok

[08:10:27.0000] <gsnedders>
This is what we previously did

[08:10:31.0000] <SimonSapin>
if the option to sort is still there, that’s fine

[08:10:38.0000] <SimonSapin>
I’m ranting at lxml

[08:11:06.0000] <gsnedders>
I think the problem for Stefan is that libxml2 has it as undefined, so he can't guarantee anything that doesn't.

[08:11:24.0000] <SimonSapin>
so I’m ranting at libxml2

[08:11:55.0000] <gsnedders>
Eventually we'll find out where you're really ranting :P

[08:12:02.0000] <SimonSapin>
hehe

[08:13:54.0000] <Ms2ger>
/me wants a useful tree api in python at some point

[08:14:12.0000] <SimonSapin>
Ms2ger: define useful

[08:15:02.0000] <Ms2ger>
One that preserves order for attributes and doesn't do .tail, say

[08:15:12.0000] <SimonSapin>
I’m considering making a new tree api for cssselect (or its successor)

[08:15:22.0000] <SimonSapin>
so text nodes instead?

[08:15:32.0000] <Ms2ger>
Yeah

[08:15:37.0000] <SimonSapin>
why?

[08:16:02.0000] <Ms2ger>
Say you have <a>x<b>y</b>z</a>

[08:16:10.0000] <Ms2ger>
How do you remove the b element?

[08:16:39.0000] <SimonSapin>
you have to append b.tail to a.text, which is annoying

[08:17:16.0000] <Ms2ger>
Right

[08:17:25.0000] <Ms2ger>
And how do you do it if a.text is None?

[08:17:40.0000] <SimonSapin>
more annoyance

[08:18:08.0000] <SimonSapin>
although (a.text or '') is not so bad

[09:40:49.0000] <TabAtkins>
SimonSapin: No, I'm using 0.95, because that's what version it was on when I last pulled.

[09:41:59.0000] <TabAtkins>
SimonSapin: I'm fine with doing alphabetical_attributes if that's supported on my version, too.

[09:43:15.0000] <TabAtkins>
SimonSapin: Also, I'd appreciate a new tree API that doesn't require me to fuck around with .tail.

[09:43:37.0000] <TabAtkins>
I understand the reasons for lxml's design, but that doesn't make it any less annoying for editing HTML.

[09:49:38.0000] <SimonSapin>
TabAtkins: do you want to stay on 0.95? lxml’s undefined-but-happens-to-preserve-order with html5lib 1.0 is probably good enough

[09:50:10.0000] <TabAtkins>
SimonSapin: Assuming that alphabetic_attributes works in .95, I don't see why we shouldn't just impose a deterministic ordering on attributes.

[09:50:56.0000] <SimonSapin>
I only care about getting the same output on different systems with the same input

[09:51:14.0000] <TabAtkins>
Right.

[09:51:31.0000] <SimonSapin>
why stay with 0.95, though ?

[09:51:55.0000] <TabAtkins>
Because that means I don't have to try and figure out why pip upgrade was failing?

[09:52:02.0000] <SimonSapin>
oh :p

[09:59:52.0000] <SimonSapin>
TabAtkins: just use sudo it’ll be fine ;)

[10:00:06.0000] <TabAtkins>
...yeah, that was probably my issue.

[10:00:16.0000] <SimonSapin>
actually

[10:00:21.0000] <SimonSapin>
sudo pip uninstall stuff

[10:00:25.0000] <SimonSapin>
then pip install --user

[10:00:42.0000] <SimonSapin>
should be saner

[10:01:45.0000] <TabAtkins>
Cool, done.

[10:01:55.0000] <TabAtkins>
Where did this get dropped into?

[10:02:54.0000] <SimonSapin>
~/.local

[10:04:48.0000] <SimonSapin>
TabAtkins: ok. Pull css-syntax, regenerate and see if the output changes

[10:05:24.0000] <TabAtkins>
It did, yes.

[10:05:41.0000] <SimonSapin>
:/

[10:06:00.0000] <TabAtkins>
All attribute order churn, yeah.

[10:06:13.0000] <SimonSapin>
on 1.0b2 ?

[10:06:17.0000] <TabAtkins>
So, I'm not seeing an alphabetical option in htmlserializer

[10:06:19.0000] <TabAtkins>
Yeah.

[11:01:31.0000] <TabAtkins>
SimonSapin: Do you see an alphabetic attribute option in html5lib?  Or is it supposed to be in lxml or something?

[11:56:33.0000] <Hixie_>
ok all that remains is element definition prose, and examples

[12:19:01.0000] <annevk>
Hixie_: I guess you noticed already it'll be commit 8000?

[12:27:36.0000] <Hixie_>
annevk: indeed

[12:27:45.0000] <Hixie_>
annevk: that's one reason i'm doing it as a big checkin :-)

[12:27:52.0000] <Hixie_>
(lamest reason ever)

[12:27:55.0000] <Hixie_>
(also, not the main reason)

[12:28:07.0000] <Hixie_>
(but it did stop me from making a typo fix separately first)

[12:34:27.0000] <tantek>
Hixie, that is pretty lame. You're not a numerologist.

[12:34:43.0000] <tantek>
besides, base 10? I mean c'mon. ;)

[12:39:04.0000] <TabAtkins>
tantek: Back-compat forces us to use base 10.

[13:15:25.0000] <JimJibber>
Anyone know why The dizzie rascal set on the stage version is blanked, but the same set is on the BBC 3 stream?

[13:56:08.0000] <Hixie_>
TabAtkins: oh i have no superstitions, it's just to make it easier to remember which checkin was 8000 :-)

[14:41:23.0000] <Hixie_>
hey does cloneNode() default to true or not?

[14:41:28.0000] <Hixie_>
spec says true, chrome seems to say false?

[14:47:30.0000] <Hixie_>
http://www.whatwg.org/specs/web-apps/current-work/#the-template-element

[15:18:06.0000] <gsnedders>
TabAtkins: html5lib 1.0b2 has a alphabetical_attribute option on html5lib.serialize and html5lib.serializer.HTMLSerializer

[15:45:05.0000] <Hixie_>
rafaelw: https://www.w3.org/Bugs/Public/show_bug.cgi?id=17930 http://html5.org/tools/web-apps-tracker?from=7999&to=8000

[15:46:47.0000] <rafaelw>
Excellent. On my todo list to review.

[15:46:48.0000] <rafaelw>
Thanks

[15:47:00.0000] <Hixie_>
cool

[15:55:57.0000] <TabAtkins>
gsnedders: Ah, I'm looking at the google code repo, and it's not showing it.  I presume your repo is elsewhere now.

[15:57:28.0000] <gsnedders>
TabAtkins: As Google Code says on the home page, in massive letters, we have moved.

[15:58:21.0000] <TabAtkins>
If I were to click to the homepage, rather than reading the page I landed at which showed the exact class I was interested in, I'd have seen that.  ^_^

[16:02:20.0000] <gsnedders>
I should totally get around to booking hotel in SF. But that means decided when I'm going there (from San Jose). Decisions, man, decisions!

[16:03:19.0000] <gsnedders>
I guess it probably depends on who wants to meet up down around there.

[16:03:22.0000] <Hixie_>
so the next thing to fix is the parser's assumption in the html section that we're not in a foreign section (or that if we are, that the tokens it's generating are going to match html nodes, not foreign ones)

[16:07:19.0000] <TabAtkins>
gsnedders: Anyway, thanks for adding the option.  Using it now.


2013-06-29
[18:38:14.0000] <zewt>
TabAtkins: "add bloat to the platform so I don't have to learn anything new" D:

[18:38:25.0000] <TabAtkins>
Yeah. :/

[23:53:05.0000] <Ms2ger>
Hixie_, cloneNode defaults to true in Gecko too

[00:02:40.0000] <Ms2ger>
Looks like Gecko has @srcdoc now

[00:48:01.0000] <MikeSmith>
Ms2ger: moving getElementById to ParentNode would mean Element would end up having it too, right?

[00:48:10.0000] <Ms2ger>
Doesn't it?

[00:48:18.0000] <MikeSmith>
it doesn't now I don't think

[00:48:21.0000] <Ms2ger>
Oh, not Id

[00:48:41.0000] <Ms2ger>
Only TagName/TagNameNS/ClassName

[00:48:45.0000] <MikeSmith>
yeah

[01:16:48.0000] <annevk>
Hixie_: I think Chrome might default to false because they didn't have actual optional arguments to begin with

[01:17:05.0000] <annevk>
Hixie_: for cloneNode(), arv can prolly get that fixed

[05:00:18.0000] <galant>
how can I find cursor/caret position in contenteditable section element?

[06:45:18.0000] <zewt>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=22515 "find"? is that a weird typo of "querySelector"

[06:45:51.0000] <Ms2ger>
http://dev.w3.org/2006/webapi/selectors-api2/#find

[06:47:01.0000] <zewt>
looks like something that ... doesn't exist

[06:50:14.0000] <zewt>
can we just say no to specs that screaming-caps MUST

[06:55:51.0000] <zewt>
so findAll() wouldn't return objects in tree order like querySelectorAll?

[07:23:20.0000] <galant>
companies that makes web browsers must implement standards that are defined by w3c?

[07:31:45.0000] <Ms2ger>
No

[07:31:56.0000] <galant>
what is this ? http://dom.spec.whatwg.org/

[07:32:07.0000] <galant>
who makes dom technology whatwg or w3c?

[07:35:50.0000] <Ms2ger>
annevk does, and he publishes at the WHATWG now

[07:38:43.0000] <arv>
annevk, I'll look at cloneNode. Should be trivial.

[08:05:18.0000] <Hixie_>
galant: it's more the other way around... w3c must write specs that browsers implement

[08:15:15.0000] <gsnedders>
Well, the W3C can do whatever the hell they like; it just may struggle to remain relevant as a standards organization if they don't do anything any browser wants to implement.

[08:15:58.0000] <galant>
ok thanks

[08:46:27.0000] <SimonSapin>
Can I tell html5lib here is the character encoding I got from Content-Type, do your thing regarding http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#determining-the-character-encoding ?

[13:18:34.0000] <Hixie_>
i think we should make people take this test before they can vote in working groups http://www.slate.com/blogs/the_vault/2013/06/28/voting_rights_and_the_supreme_court_the_impossible_literacy_test_louisiana.html

[13:19:04.0000] <Hixie_>
(obviously its original purpose is an abomination, but that's a separate issue)

[13:42:31.0000] <galant>
can I find the text node in the element that has contenteditable and I am writing in?

[13:45:14.0000] <Hixie_>
probably, but can you be more specific about what you mean?

[13:45:36.0000] <galant>
can I find number of characters from beginning to the caret/cursor position? in element or text node I am writing in? in the element there are text nodes and img elements

[13:46:33.0000] <galant>
I have one section element htat has contenteditable it has text nodes and img elements, if I write in some text node in that element - can I find number of characters from the beginning of the text node or the element I am writing in?

[13:46:40.0000] <galant>
that*

[13:55:11.0000] <galant>
can I do this with DOM range api and is it cross browser compatible and with older browsers?

[13:55:33.0000] <Hixie_>
you can find the caret position using getSelection()

[13:56:11.0000] <Hixie_>
and in most browsers, they have DOM Range and you should be able to manipulate the range pretty easily... take a copy of the selection range, and change one of its ends to the start of the block

[13:56:42.0000] <galant>
Hixie_, but that isn't for selection? Returns a selection object representing the range of text selected by the user.

[13:56:55.0000] <galant>
I need just caret/cursor position not the selection

[13:56:56.0000] <Hixie_>
if there's no selection, the selection is a collapsed range at the cursor position

[13:57:09.0000] <galant>
ahm nice

[13:57:12.0000] <galant>
thanks Hixie_

[13:57:13.0000] <Hixie_>
if there's a selection, there's no cursor (in most operating systems)

[13:57:14.0000] <Hixie_>
np

[13:57:45.0000] <galant>
Hixie_, cursor position is calculated from the starting of the element or the text node?

[13:57:59.0000] <Hixie_>
it's a range, so the usual range thing

[13:58:02.0000] <galant>
I have element with contenteditable which has text nodes and img elements

[13:58:06.0000] <galant>
ok

[14:14:12.0000] <galant>
Hixie_, I don't understand how can I find cursor position from the getSelection() :S

[14:21:43.0000] <galant>
ok Hixie_ I found what I was looking for, thanks for the help and guiding man


2013-06-30
[01:42:53.0000] <Ms2ger>
https://twitter.com/NightValeRadio/status/351190436754370562

[06:23:37.0000] <GPHemsley>
I'm interested to see how this gets resolved: https://bugzilla.mozilla.org/show_bug.cgi?id=887463

[06:37:07.0000] <svl>
From a quick look at that repository, it looks like all code has always been under BSD, so legally Mozilla seems to be totally in the clear. Wonder what the story behind the request is; how much goodwill is worth there...

[06:39:27.0000] <svl>
"until I am handed a diploma" is rather suggestive as to the story behind it. :/

[06:45:00.0000] <SimonSapin>
I don’t see the relationship between this code and a diploma

[06:50:13.0000] <svl>
She has an @senecacollege.ca email address; that college has a course where students work on Mozilla code.

[06:51:38.0000] <galant>
is there sure way to find if visitor is using ie 8? but it needs to be 100% sure

[06:56:40.0000] <galant>
<!--[if lte IE 8]> this works 100% of the time without mistakes?

[06:59:49.0000] <svl>
http://caitpotter.blogspot.com/2013/06/theres-no-opener-theres-no-punchline.html

[06:59:58.0000] <SimonSapin>
galant: this is 8 and earlier versions

[07:00:06.0000] <galant>
I know SimonSapin

[07:00:15.0000] <galant>
but is this working 100% of the time without mistakes?

[07:00:47.0000] <galant>
I need to use different javascript code for ie8 and less how can I do this

[07:00:48.0000] <SimonSapin>
galant: and yes, until some browser decides to parse these for some reason, but I doubt it

[07:01:09.0000] <galant>
I need to say something like "if its not ie8 then use this js file if its ie9 or 10 use another js file

[07:01:11.0000] <galant>
can I do this?

[07:01:44.0000] <gsnedders>
For people who've cared: I've just uploaded all historic html5lib releases to PyPI. These are identical to the original archives (except for html5lib-0.11.1, where the original zip contained every file twice), recompressed as tgz, and hence not quite identical to the 0.2ish, 0.9ish, etc. tags in git.

[07:02:37.0000] <SimonSapin>
galant: I don’t know the details but you’re probably on the right track. google "IE conditional comments"

[07:04:11.0000] <svl>
galant: if you "need" to do that _because_ ie8 doesn't support some features (and some other hypothetical browsers which also wouldn't support those features, would benefit from the same fallback file), then of course detecting those features is much cleaner

[07:07:07.0000] <gsnedders>
svl: AFAIK (IANAL, etc.), BSD, MIT, GPLv2 are all revocable.

[07:08:38.0000] <galant>
ok thankks

[07:09:46.0000] <gsnedders>
svl: And I honestly don't know enough about copyright law in the US tohave a real answer.

[07:27:09.0000] <zewt>
gsnedders: never heard of anything like that, unless you have some "i can revoke your license if i feel like it" clause in the license

[07:27:55.0000] <zewt>
nobody in the open source world would ever use code under a license that allowed that

[07:28:33.0000] <gsnedders>
zewt: I believe there are such countries, FWIW.

[07:28:58.0000] <zewt>
i'm not aware of the US being one of them

[07:31:12.0000] <SimonSapin>
at least someone thought necessary to make CC0 explicitly unrevocable

[07:46:41.0000] <zewt>
of course, if mozilla gives into this, they'll get a flood of "give me $1000 or i'll revoke your license to some contribution i sent in years ago" blackmails

[07:59:57.0000] <GPHemsley>
hmm... the rest of that blog suggests something deeper is going on

[08:00:50.0000] <zewt>
i didn't read it, from the childishness of the bug it doesn't seem like someone worth reading, heh

[08:01:23.0000] <GPHemsley>
I don't think "childish" is the term I'd use

[08:01:39.0000] <GPHemsley>
having read some of the other posts

[08:02:30.0000] <GPHemsley>
but I won't speculate further based on a handful of Internet writings

[08:02:31.0000] <zewt>
the bug reads like a tantrum

[08:02:47.0000] <GPHemsley>
tantrums are not only for children

[08:03:03.0000] <zewt>
not only children are childish :) anyway

[08:04:31.0000] <GPHemsley>
ah, the classic circular definition paradox

[08:05:09.0000] <GPHemsley>
TIL this exists: http://www.whatcanidoformozilla.org/

[08:05:29.0000] <zewt>
wow, that's horrifying

[08:05:50.0000] <GPHemsley>
?

[08:06:27.0000] <zewt>
having worked on open source stuff, the idea of inviting people to "jump in and change stuff" is :|

[08:06:48.0000] <GPHemsley>
o_0

[08:06:55.0000] <GPHemsley>
that's the whole Mozilla culture

[08:07:11.0000] <zewt>
if people have something they want to accomplish, then it's useful--when they don't, and they're just looking for something to change, they submit crap

[08:08:23.0000] <zewt>
and people who are asking "what can I do" are in the latter group

[08:14:22.0000] <annevk>
yeah, life is black & white like that

[08:15:23.0000] <zewt>
...

[08:15:59.0000] <GPHemsley>
hah

[08:16:45.0000] <zewt>
drunk anne?

[08:17:17.0000] <GPHemsley>
dunno... I was laughing at the fact that he quit right after

[13:34:58.0000] <galant>
can I append img element between text nodes?

