2011-09-01
[21:40:00.0000] <rillian>
cpearce: it looks like the spec currently lets you add alternate audio/video tracks either using fragments, or through the media.audioTracks[]/media.videoTracks[] interfaces

[21:40:01.0000] <rillian>
you can likewise add text tracks through media.textTracks

[21:40:02.0000] <rillian>
but you can't add alternate audio/video tracks through <track>

[21:40:03.0000] <rillian>
maybe that's just an oversight

[01:58:00.0000] <annevk>
w3.org is offline?

[01:58:01.0000] <annevk>
cannot connect to IRC or well, anything

[01:59:00.0000] <annevk>
just a hickup it seems

[02:02:00.0000] <rniwa>
annevk: I can access www.w3.org without any issues

[02:02:01.0000] <rniwa>
annevk: maybe try pinging 128.30.52.37?

[02:04:00.0000] <annevk>
it's working again

[02:04:01.0000] <annevk>
very temporary :)

[02:05:00.0000] <rniwa>
i see

[02:22:00.0000] <annevk>
alright

[02:22:01.0000] <annevk>
time to add Node.contains()

[02:25:00.0000] <Lachy>
Nice. HTML context menus now supported in Firefox nightly. https://twitter.com/#!/codepo8/status/108989867278614528

[02:26:00.0000] <Lachy>
just looks like they're using <menuitem> instead of <command>. Not sure why though

[02:29:00.0000] <annevk>
see some debate in a bug report somewhere

[03:36:00.0000] <annevk>
so should we have <data-...>

[04:00:00.0000] <annevk>
Is there a name for an interface other interfaces inherit from that is never instantiated itself but only exists by virtue of the interfaces that inherit from it?

[04:01:00.0000] <Ms2ger>
Abstract?

[04:02:00.0000] <annevk>
So "CharacterData is an abstract interface and does not exist as node. It is used by Text, Comment, and ProcessingInstruction nodes.

[04:02:01.0000] <annevk>
"

[04:03:00.0000] <hsivonen>
/me looks forward to OO pedants sending feedback about "abstract interface"

[04:03:01.0000] <annevk>
If they suggest alternatives it will be all good :)

[04:04:00.0000] <annevk>
This is just a non-normative note to clarify things since every other heading in that section is about a node

[04:05:00.0000] <Ms2ger>
Except Node

[04:06:00.0000] <annevk>
I guess that should get the same note

[04:21:00.0000] <annevk>
http://software.hixie.ch/utilities/js/live-dom-viewer/?x%3Cscript%3Edocument.body.firstChild.removeChild%28document.body%29%3C%2Fscript%3E

[04:21:01.0000] <annevk>
Gecko: HIERARCHY_REQUEST_ERR, WebKit: NOT_FOUND_ERR

[04:21:02.0000] <annevk>
I don't think http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-node-pre-remove actually needs step 1 given step 2

[04:22:00.0000] <annevk>
Opera: NOT_FOUND_ERR

[04:23:00.0000] <annevk>
What do you think Ms2ger?

[04:23:01.0000] <Ms2ger>
wfm

[04:23:02.0000] <Ms2ger>
Please do update the test :)

[04:24:00.0000] <annevk>
I should check out the tests I guess

[04:25:00.0000] <annevk>
now they are separated from the specification

[04:26:00.0000] <annevk>
heh

[04:26:01.0000] <annevk>
added 563 changesets with 1341 changes to 478 files

[04:30:00.0000] <annevk>
Ms2ger, there is no test?

[04:30:01.0000] <Ms2ger>
Node-removeChild.html?

[04:30:02.0000] <annevk>
yeah it does not have a HIERARCHY_REQUEST_ERR in it

[04:31:00.0000] <annevk>
guess I can add something that makes Gecko fail

[04:31:01.0000] <annevk>
it also does a bunch of Attr (node) tests

[04:31:02.0000] <Ms2ger>
Not anymore :)

[04:35:00.0000] <annevk>
added a test for removeChild on a text node

[04:35:01.0000] <Ms2ger>
Thanks

[04:35:02.0000] <annevk>
someone else can file a bug on Gecko

[05:32:00.0000] <annevk>
I'm starting to think we should just go ahead and merge Range in

[05:32:01.0000] <annevk>
Is there much else to do that I am missing?

[05:33:00.0000] <annevk>
Also note it is prerequisite for adding modification listeners

[05:33:01.0000] <annevk>
Ms2ger, AryehGregor, ^^

[05:34:00.0000] <Ms2ger>
sURE

[05:34:01.0000] <Ms2ger>
/me hits caps lock

[05:37:00.0000] <annevk>
does this count as written permission per the license? :)

[05:38:00.0000] <annevk>
whoa

[05:38:01.0000] <annevk>
https://bitbucket.org/ms2ger/dom-core/raw/tip/dom-core.html

[05:39:00.0000] <annevk>
isn't this some giant XSS hole in bitbucket?

[05:39:01.0000] <Ms2ger>
Yes

[05:42:00.0000] <annevk>
Ranges is actually pretty big

[05:47:00.0000] <Ms2ger>
15 pages or so?

[05:49:00.0000] <annevk>
yeah something like that

[05:49:01.0000] <annevk>
2000 lines :)

[06:11:00.0000] <hsivonen>
that bitbucket thing is scary. has it been reported to bitbucket?

[06:11:01.0000] <Ms2ger>
Not by me

[06:12:00.0000] <hsivonen>
and bitbucket has been created *after* people were supposed to know about origins

[06:18:00.0000] <annevk>
it looks like a regression

[06:19:00.0000] <annevk>
what is the "Assert:" stuff Ms2ger?

[06:19:01.0000] <annevk>
can that be removed?

[06:20:00.0000] <Ms2ger>
Sure

[06:20:01.0000] <gsnedders>
assert stuff? where?"

[06:21:00.0000] <Ms2ger>
DOM Range

[06:22:00.0000] <gsnedders>
Ah. The asserts there are pretty much all just for WebIDL things>

[06:22:01.0000] <gsnedders>
*?

[06:22:02.0000] <Ms2ger>
Yeah

[06:22:03.0000] <gsnedders>
I'd say they don't add anything, then, really.

[06:38:00.0000] <hsivonen>
the DOM Core spec exposed a bug in my new View Source impl...

[06:39:00.0000] <Ms2ger>
Oh?

[06:41:00.0000] <annevk>
someone with a good term for "ancestors and the node itself"?

[06:42:00.0000] <annevk>
XPath calls it ancestor or self

[06:42:01.0000] <hsivonen>
Ms2ger: it appears that I broke the way View Source communicates the charset of the page to the main thread when I fixed https://bugzilla.mozilla.org/show_bug.cgi?id=675499

[06:45:00.0000] <annevk>
how about "reverse subtree"

[06:46:00.0000] <annevk>
(the current term is "ancestor containers")

[06:46:01.0000] <hasather>
annevk: wouldn't that be a supertree then?

[06:48:00.0000] <hasather>
(I guess tree is not a good word to describe it though)

[06:53:00.0000] <annevk>
the roof :)

[06:54:00.0000] <annevk>
hasather, it's the best short word so far

[06:54:01.0000] <annevk>
hasather, though very novel afaict

[06:55:00.0000] <annevk>
and it might confuse people who are into this: http://en.wikipedia.org/wiki/Supertree

[06:56:00.0000] <hasather>
annevk: yea, saw that too

[06:57:00.0000] <Philip`>
"subtree" sounds confusing because you'd think it's a tree with branches, when acually it's just a list

[06:59:00.0000] <Philip`>
/me has a book where "ancestor" includes the node itself, and "proper ancestor" doesn't

[07:02:00.0000] <annevk>
subtree is standard terminology

[07:02:01.0000] <annevk>
interesting

[07:03:00.0000] <Philip`>
subtree is standard when referring to the tree formed by the descendants of a node, but not when referring to the chain of ancestors, I think

[07:05:00.0000] <annevk>
we'd use supertree for the the ancestor part

[07:06:00.0000] <Philip`>
"supertree" sounds confusing because you'd think it's a tree with branches, when actually it's just a list

[07:07:00.0000] <annevk>
alternatives?

[07:07:01.0000] <Philip`>
/me would probably assume the supertree is the largest tree that contains the given node (i.e. the one rooted at the most distant ancestor)

[07:10:00.0000] <Philip`>
If "ancestor" is already defined to exclude the node itself, "ancestor or self" doesn't sound too bad (it's a bit ugly but short and clear), or maybe "inclusive ancestor"

[07:13:00.0000] <annevk>
inclusive ancestor sounds rather clear and works a bit better in this context

[07:16:00.0000] <woef>
As someone who has no idea what you guys are talking about, "ancestor and self" is much easier to understand than "inclusivve ancestor"

[07:19:00.0000] <annevk>
true enough, but understanding this term is the least of your worries when you implement range

[07:19:01.0000] <Philip`>
The term (and "ancestor" by itself) should be linked to a precise definition, so I guess it's not too bad if people have to click the link to find what you mean

[07:20:00.0000] <Philip`>
(It'd be worse if they thought they knew what it meant, so they didn't check the definition, but actually had the wrong idea)

[07:21:00.0000] <woef>
"Let's name it something nobody will be certain to understand and force them to look for the proper definition"

[07:21:01.0000] <Philip`>
Call it "concept #382"

[07:21:02.0000] <woef>
That needs some usability testing :p

[07:21:03.0000] <woef>
Philip`: hehe

[07:24:00.0000] <Philip`>
Then you just define "Concept #382: A concept #53 that is the target concept #53 or a concept #197 of it", and "Concept #197: A concept #53 that is a concept #382 of the target concept #53 but is not the target concept #53 itself", etc

[07:25:00.0000] <woef>
And throw in some false links to make sure they're paying attention and not just clicking along.

[07:41:00.0000] <annevk>
I guess I should land Range before I make too many changes so people can follow on what is being changed

[07:50:00.0000] <annevk>
went from 37 to 44 pages

[07:51:00.0000] <annevk>
Should AryehGregor become co-editor of DOM Core now? I guess that would be a bit too unwieldy

[07:51:01.0000] <zcorpan>
annevk: shouldn't it be s/and/or/ in https://bitbucket.org/ms2ger/dom-core/changeset/e126979296ce ?

[07:57:00.0000] <annevk>
why?

[08:00:00.0000] <hsivonen>
hmm. so IGs "endorse" bugs

[08:06:00.0000] <zcorpan>
annevk: because it now says that objects that implements all of those interfaces are nodes

[08:06:01.0000] <zcorpan>
annevk: whereas if an object implements only one of them is not a node

[08:07:00.0000] <zcorpan>
hsivonen: which bug?

[08:11:00.0000] <annevk>
thanks

[08:20:00.0000] <Ms2ger>
annevk, if you feel like updating Selection for your changes... ;)

[08:20:01.0000] <hsivonen>
zcorpan: http://lists.w3.org/Archives/Public/public-html/2011Sep/0004.html

[08:21:00.0000] <AryehGregor>
annevk, go ahead and merge Range in, sounds good to me.

[08:22:00.0000] <annevk>
Ms2ger, I was about to say, and then I got that email, damnit

[08:22:01.0000] <AryehGregor>
Don't take the Selection stuff, obviously.

[08:22:02.0000] <annevk>
right

[08:22:03.0000] <annevk>
I haven't

[08:22:04.0000] <AryehGregor>
I'll take that at some point soonish.

[08:22:05.0000] <AryehGregor>
Oh, I see, you took it already.

[08:22:06.0000] <AryehGregor>
Good.

[08:25:00.0000] <zcorpan>
hsivonen: thanks

[09:10:00.0000] <zcorpan>
heycam: hey. http://dev.w3.org/2006/webapi/WebIDL/#es-attributes - why does it say "Otherwise, it exists on the interface’s interface prototype object or on every object that implements the interface." ? why leave a choice between having it on the prototype and having it on the object?

[09:38:00.0000] <dglazkov>
good morning, Whatwg!

[09:42:00.0000] <annevk>
hey hey dglazkov

[10:28:00.0000] <espadrine>
good evening, dglazkov!

[10:30:00.0000] <dglazkov>
annevk: do you like to travel?

[10:30:01.0000] <annevk>
I do

[10:31:00.0000] <annevk>
weird habbit :)

[10:31:01.0000] <annevk>
habit(sp?)

[10:31:02.0000] <Ms2ger>
hobbit

[10:32:00.0000] <annevk>
too tall for a hobbit

[10:32:01.0000] <timeless>
/me makes that typo too

[10:32:02.0000] <annevk>
would love a home like Bilbo though

[10:32:03.0000] <timeless>
rabbit hobbit habit

[10:33:00.0000] <timeless>
annevk: your irc client doesn't have a spell checker?

[10:33:01.0000] <timeless>
/me is using Nightly's spell checker (w/ freenode-webchat)

[10:33:02.0000] <annevk>
yeah (ctrl+t, enter word, hit enter, and see what Google says), but I don't always use it

[10:34:00.0000] <timeless>
eww

[10:34:01.0000] <timeless>
i do ctrl+t, e, down, enter, type word

[10:34:02.0000] <timeless>
e = https://encrypted.google.com/

[10:35:00.0000] <timeless>
but that's only when i don't have a text field available for Gecko's spellchecker

[10:35:01.0000] <annevk>
http://evolutionofweb.appspot.com/ is pretty cool

[10:36:00.0000] <timeless>
shiny

[10:36:01.0000] <MikeSmith>
nice

[10:36:02.0000] <MikeSmith>
annevk: who made that?

[10:36:03.0000] <annevk>
found it at http://chrome.blogspot.com/2011/09/happy-third-birthday-chrome.html

[10:37:00.0000] <MikeSmith>
ah great

[10:37:01.0000] <timeless>
it doesn't speak spanish :(

[10:38:00.0000] <hsivonen>
MikeSmith: looks like something Google contracted out

[10:38:01.0000] <timeless>
hrm

[10:38:02.0000] <timeless>
the screenshots of opera are odd

[10:38:03.0000] <MikeSmith>
hsivonen: OK

[10:38:04.0000] <hsivonen>
What's the deal with Netscape not having releases before 4

[10:38:05.0000] <timeless>
opera v1 screenshot is w3.x

[10:39:00.0000] <timeless>
but 2.1 is a screenshot from wXP or newer

[10:39:01.0000] <timeless>
and 3 is from w7

[10:39:02.0000] <timeless>
but 4 is from 9x

[10:39:03.0000] <hsivonen>
also, Firefox 3.6 is missing

[10:40:00.0000] <hsivonen>
as well as some significant Safari point releases

[10:40:01.0000] <hsivonen>
and significant Opera releases

[10:40:02.0000] <timeless>
there's a "credits and sources" link in the left bar at the bottom

[10:40:03.0000] <hsivonen>
so, unfortunately, this doesn't work as a more complete "Modern browsers ship" visualization :-(

[10:41:00.0000] <timeless>
they're also missing ie1/2

[10:41:01.0000] <zewt>
these wavy lines are a bit too mysterious

[10:41:02.0000] <timeless>
but yeah, theyreally should have netscap 1, 2 and 3

[10:41:03.0000] <hsivonen>
and the mozilla suite

[10:41:04.0000] <timeless>
they quasi cover that w/ netscape versions 6..8

[10:41:05.0000] <timeless>
but yeah

[10:42:00.0000] <timeless>
have people followed the diginotar coverage?

[10:42:01.0000] <Ms2ger>
annevk, did you file a bug on HTML for the "root" thing?

[10:42:02.0000] <hsivonen>
also, the colored band for Java gets wider over time

[10:42:03.0000] <annevk>
Ms2ger, no

[10:42:04.0000] <hsivonen>
timeless: somewhat followed

[10:43:00.0000] <timeless>
hsivonen: it's interesting that there was an addons cert

[10:43:01.0000] <timeless>
i wonder if it'd be reasonable for browser vendors to add a requirement for all cas that want to list of the form:

[10:43:02.0000] <annevk>
Ms2ger, HTML uses concept-tree-root in a different manner?

[10:43:03.0000] <hsivonen>
timeless: addons cert?

[10:43:04.0000] <timeless>
if you ever try to issue a cert for any of our properties, you must contact us

[10:43:05.0000] <timeless>
http://www.computerworld.com/s/article/9219663/Hackers_may_have_stolen_over_200_SSL_certificates

[10:44:00.0000] <annevk>
Ms2ger, I do think we should maybe add subtree and root subtree for HTML

[10:44:01.0000] <timeless>
> Mozilla confirmed that a certificate for its add-on site had been obtained by the DigiNotar attackers. "DigiNotar informed us that they issued fraudulent certs for addons.mozilla.org in July

[10:44:02.0000] <Ms2ger>
annevk, I copied the definition from HTML

[10:44:03.0000] <hsivonen>
timeless: It seems like a no-brainer that CAs should check if the hostnames they are minting certs for already have certs from someone else

[10:45:00.0000] <timeless>
hsivonen: sadly

[10:45:01.0000] <timeless>
as for profit companies

[10:45:02.0000] <timeless>
it's in your interest to steal your competitor's customers

[10:45:03.0000] <zewt>
how exactly can you tell if someone already has a certificate? heh

[10:45:04.0000] <Philip`>
They informed Mozilla in July, or they informed Mozilla now that they knew they issued fraudulent certs in July?

[10:45:05.0000] <timeless>
zewt: pretty easy

[10:46:00.0000] <timeless>
if i ask for a cert for super.example.com

[10:46:01.0000] <timeless>
then you try to visit https://super.example.com

[10:46:02.0000] <timeless>
if you can connect securely, then someone has a cert! :)

[10:46:03.0000] <timeless>
Philip`: my guess is informed nowish

[10:46:04.0000] <zewt>
i have certs that i don't use for https

[10:46:05.0000] <timeless>
and revoked in july

[10:46:06.0000] <zewt>
(ftp, etc)

[10:47:00.0000] <Philip`>
Shouldn't there be some requirement that if they revoke certs (presumably because they know they were invalidly issued), they at least inform the rightful owners of those domains (immediately, not a month later)?

[10:47:01.0000] <timeless>
Philip`: yeah well, um

[10:47:02.0000] <zewt>
can someone have an epiphany and come up with a new signing system that fixes the increasing breakage we have now, heh

[10:47:03.0000] <timeless>
i don't think i've ever seen that in requirements

[10:47:04.0000] <timeless>
mozilla has a crypto policy newsgroup

[10:48:00.0000] <timeless>
it can be proposed

[10:48:01.0000] <timeless>
and i'd imagine it'd get pretty decent support

[10:48:02.0000] <Philip`>
Seems like it's important to make it more expensive for a company to cover up its mistakes than for it to admit to them immediately

[10:48:03.0000] <timeless>
zewt: we don't have increasing breakage

[10:48:04.0000] <timeless>
so much as more people willing to spend the minimal effort to attack a system

[10:49:00.0000] <timeless>
Philip`: oh, that we're doing

[10:49:01.0000] <zewt>
sure we do; more and more entities with the ability to sign certificates; certificate exception dialogs becoming more and more pointlessly annoying :)

[10:49:02.0000] <timeless>
mozilla & co have killed diginotar

[10:49:03.0000] <timeless>
zewt: you played that card earlier

[10:49:04.0000] <timeless>
please don't replay a previously played card :)

[10:50:00.0000] <zewt>
perfectly valid when the card is correct :P

[10:50:01.0000] <Philip`>
Would the same killing have happened if they had admitted it immediately? (in which case they'd have no incentive to not try hiding it)

[10:50:02.0000] <timeless>
(there's a Hixie quote to be made here)

[10:50:03.0000] <timeless>
Philip`: past experience w/ CAs who have screwed up and fessed up hasn't resulted in death

[10:51:00.0000] <timeless>
which indicates, more or less, if you are honest and forthcoming you have historically gotten leeway

[10:51:01.0000] <Philip`>
I suppose that's good, then

[10:51:02.0000] <Philip`>
(although less good than if they didn't screw up)

[10:51:03.0000] <timeless>
past experience is of course not a commitment to future behavior

[10:51:04.0000] <timeless>
but, the goal is to provide carrot and stick

[10:52:00.0000] <timeless>
we've played carrot a few times, and stick once (now)

[10:52:01.0000] <zewt>
that's another breakage of the system: if a CA screws up and is dropped from browsers, there may be a *lot* of collateral damage

[10:52:02.0000] <timeless>
zewt: in this case, Vasco (recent parent of diginotar) indicated it has minimal business in this area

[10:52:03.0000] <zewt>
not frequently, but it's unpleasant that the possibility exists (of course, it's inherent to the system we have)

[10:52:04.0000] <timeless>
i haven't checked on their pricing model, but you should be able to calculate customer count

[10:53:00.0000] <zewt>
(not to suggest i know of any alternative model that doesn't have all of these problems, of course)

[10:53:01.0000] <timeless>
and yes, ideally those customers will ask for money back from their vendor (diginotar)

[10:53:02.0000] <timeless>
and take their business elsewhere (quickly, or lose customers while they dawdle)

[10:54:00.0000] <timeless>
anyway, that's the best economy i can offer today

[10:54:01.0000] <hsivonen>
/me wonders if phone vendors are taking any action to zap diginotar from the stock browsers on their phones

[10:54:02.0000] <timeless>
hsivonen: generally no

[10:54:03.0000] <timeless>
speaking from experience at nokia

[10:54:04.0000] <timeless>
we asked about issuing updates

[10:54:05.0000] <timeless>
and were turned down

[10:54:06.0000] <hsivonen>
timeless: yeah, it looks like only iPhone and the Nexus series get any reasonable updates

[10:54:07.0000] <timeless>
(This was from the previous CA disaster, and we sent things up the flagpole as hard as we could)

[10:55:00.0000] <timeless>
i can't speak for my current employer

[10:55:01.0000] <hsivonen>
though I don't know if either iOS or Android on Nexus got updates following the Comodo case

[10:55:02.0000] <timeless>
hrm, although i could test a current build of our platform :)

[10:56:00.0000] <timeless>
(for the record, previous disaster = comodo)

[10:57:00.0000] <hsivonen>
I wish companies that ship mobile OSs acted more like real software vendors

[10:57:01.0000] <timeless>
oh, fwiw MS hasn't gotten around to sending out kill bits for wXP

[10:57:02.0000] <timeless>
(ms would kinda like people to stop using XP...)

[10:58:00.0000] <zewt>
i've never even seen a browser update in android of any kind except during a full OS update

[10:58:01.0000] <timeless>
the problem w/ classic hardware vendors is that they're hardware vendors

[10:58:02.0000] <zewt>
it's bizarre but google doesn't seem to care much about the android browser

[10:58:03.0000] <timeless>
they, like CAs don't have recurring revenues from past customers

[10:59:00.0000] <timeless>
and thus the cost of doing support/maintenance is something which isn't factored in and doesn't make sense to them

[10:59:01.0000] <zewt>
CAs do, since certs expire

[10:59:02.0000] <timeless>
zewt: yeah, technically CAs do

[10:59:03.0000] <timeless>
but only kinda

[10:59:04.0000] <zewt>
heh reminds me of some fraud godaddy has

[10:59:05.0000] <zewt>
they automatically set your cert to auto-renew (at the full rate, like $50/year), without asking or telling you

[10:59:06.0000] <zewt>
(presumably buried in some 100-page "agreement")

[11:00:00.0000] <zewt>
you have to go through a zillion menus to even find that it's on and get rid of it

[11:00:01.0000] <hsivonen>
timeless: I wonder how many iPod Touch users bought OS updates. Has it been proven that mobile hardware companies cannot sell software updates?

[11:00:02.0000] <timeless>
hsivonen: i didn't buy my update

[11:00:03.0000] <hsivonen>
timeless: Apple has managed to sell software updates for desktop/laptop hardware

[11:01:00.0000] <timeless>
the license agreement for my Finnish iPod as presented by iTunes was in Finnish

[11:01:01.0000] <timeless>
and thus, I couldn't accept it

[11:01:02.0000] <timeless>
so, i never bought the update

[11:01:03.0000] <timeless>
i'm now in .CA

[11:01:04.0000] <hsivonen>
timeless: you are weird

[11:01:05.0000] <zewt>
heh

[11:01:06.0000] <Philip`>
When the TLS stuff was designed, was it expected that the response to fraudulent certificates would require multiple independent software vendors to ship updated versions, or was there meant to be a more elegant/robust way of handling it?

[11:01:07.0000] <zewt>
software loves showing me things in japanese, even though my system language is english (because they incorrectly use the system codepage)

[11:01:08.0000] <timeless>
and once I get around to plugging in one of my computers (probably my G5), I'll see about buying the update

[11:01:09.0000] <hsivonen>
timeless: (so am I. I, too, today rejected a piece of software due to not having the time to wade through their legal stuff)

[11:01:10.0000] <hsivonen>
(software from cisco)

[11:02:00.0000] <timeless>
Philip`: do you mean TLS or SSL?

[11:02:01.0000] <Philip`>
timeless: I don't know

[11:02:02.0000] <timeless>
TLS is a rather recent thing (since it's SSL3.1/3.2)

[11:02:03.0000] <Philip`>
timeless: Whatever makes the question make most sense

[11:02:04.0000] <timeless>
the assumption in PKI / SSL

[11:02:05.0000] <timeless>
was that the vendors would be few

[11:02:06.0000] <timeless>
and would have decent and proper CRLs

[11:03:00.0000] <timeless>
there was a limited amount of handwaving involving how CRLs would be deployed to devices

[11:03:01.0000] <timeless>
but it mostly assumed devices would be connected enough to be able to retrieve them

[11:03:02.0000] <timeless>
it also mostly assumed that you wouldn't have Rogue Countries

[11:03:03.0000] <timeless>
or rather

[11:03:04.0000] <timeless>
it accepted that you couldn't defeat a Rogue Country if you wanted to

[11:03:05.0000] <timeless>
and thus it was out of scope

[11:04:00.0000] <timeless>
Basically, if the US wanted to do something evil in VeriSign or RSA or whichever, it was assumed it could, but that was a risk one was willing to take

[11:04:01.0000] <timeless>
plus in the US at least, sunshine and leaks were probably assumed to catch such things

[11:05:00.0000] <timeless>
which actually is still applying to the current Rogue Countries

[11:05:01.0000] <timeless>
as zewt notes, the system we have is the best anyone can really think of to date

[11:05:02.0000] <timeless>
it isn't perfect

[11:06:00.0000] <hsivonen>
when VeriSign bought Network Solutions, I sent my bank a question asking them what they are going to do now that the entity that can tamper with DNS and the entity that guards against DNS tampering are the same

[11:06:01.0000] <hsivonen>
they actually forwarded it to someone technical

[11:07:00.0000] <hsivonen>
who called me and said the situation wasn't good but they'd just acknowledge the situation and their powerlessness about it

[11:10:00.0000] <AryehGregor>
timeless, there's an easy solution: pin particular CAs for sites, using STS.  AFAIK, Chrome already does this for Google sites, so anyone who tried to use the forged cert against Chrome users would trigger unrecoverable failure.

[11:10:01.0000] <timeless>
hsivonen: you're looking forward to DNSSEC, eh? :)

[11:11:00.0000] <AryehGregor>
Alternatively, get certs-via-DNSSEC working properly and supported in all browsers, then only allow that.

[11:11:01.0000] <AryehGregor>
For sites that opt in.

[11:11:02.0000] <timeless>
AryehGregor: you didn't read https://twitter.com/#!/moxie__/statuses/108567203829387264 ?

[11:11:03.0000] <hsivonen>
timeless: actually I am considering that the current system already fails if the curator of the root goes rogue

[11:11:04.0000] <zewt>
of course, it seems more likely that dnssec will be implemented, and both dnssec and tls certs will be accepted for most sites, giving two independent trees which are both points of failure...

[11:12:00.0000] <AryehGregor>
timeless, you can remove registrars with DNSSEC.  Why not?  Just have the registrar one step up revoke the cert, or not renew it.

[11:12:01.0000] <AryehGregor>
zewt, you could have a DNSSEC record that says "only use DNSSEC certs to access this site".

[11:12:02.0000] <hsivonen>
AryehGregor: did you read the whole tweet thread with Moxie and Dan Kaminsky?

[11:12:03.0000] <AryehGregor>
Or, just use STS and bake a list of sites and approved CAs for each site into the browsers.

[11:12:04.0000] <AryehGregor>
hsivonen, no.

[11:13:00.0000] <hsivonen>
AryehGregor: looks like we are going to have to replay it here

[11:13:01.0000] <timeless>
heh

[11:13:02.0000] <zewt>
but is there a TLS equivalent to say "never use dnssec"?

[11:13:03.0000] <hsivonen>
AryehGregor: https://twitter.com/#!/moxie__/status/108331615004000256

[11:13:04.0000] <AryehGregor>
zewt, you can use STS and have all browsers ship with hardcoded lists of all major sites (i.e., all likely attack targets).

[11:14:00.0000] <timeless>
hsivonen: appreciated, since i'm not a fan of twitter

[11:14:01.0000] <AryehGregor>
hsivonen, nothing is realistically going to protect us against ICANN or the IANA going bad, unless we abandon centralized DNS.

[11:14:02.0000] <zewt>
special casing to make the rest of the world second-class citizens? that's horrible

[11:15:00.0000] <AryehGregor>
hsivonen, basically they're not likely to do bad stuff unless the US forces them to, and if the US wants to learn about Google sites it has easier ways to do that.

[11:15:01.0000] <AryehGregor>
Like subpoenas.

[11:15:02.0000] <AryehGregor>
I mean, it's a possibility, but you can't defend against everything.

[11:16:00.0000] <AryehGregor>
Stopping Iran from intercepting Google-bound traffic is feasible, stopping the US or VeriSign from doing it is not so feasible.

[11:16:01.0000] <hsivonen>
zewt: umm. the rest of the world is already second-class even on the legislative level

[11:17:00.0000] <AryehGregor>
Heck, the US government could nationalize Google if it really felt like it.  Eminent domain, right?

[11:17:01.0000] <timeless>
technically yes

[11:17:02.0000] <zewt>
...

[11:17:03.0000] <Philip`>
Are there ways to independently verify that browser vendors aren't doing bad stuff (like shipping binaries which whitelist some fake certificates), so that they're unlikely to be a point of failure?

[11:18:00.0000] <zewt>
my website should not be a second-class citizen compared to any other website

[11:18:01.0000] <AryehGregor>
If the scenario you're worried about is the US government doing evil things to US corporations, I'm pretty sure you lose either way.

[11:18:02.0000] <AryehGregor>
zewt, the list could be one that anyone can add themselves to.

[11:18:03.0000] <timeless>
Philip`: well, mostly

[11:18:04.0000] <timeless>
certainly with firefox you can build it yourself

[11:18:05.0000] <timeless>
and compare what you have against what is shipped

[11:18:06.0000] <AryehGregor>
E.g., it could just be a matter of Googlebot finding STS headers and building a list of all the ones with suitably long expiration dates.

[11:18:07.0000] <AryehGregor>
And publishing it.

[11:18:08.0000] <zewt>
... but then you're just expanding the problem, since now you have to verify that whoever's modifying that record is authorized to do so

[11:18:09.0000] <zewt>
back to square one

[11:19:00.0000] <AryehGregor>
That's the browser vendor, who you have to trust anyway.

[11:19:01.0000] <AryehGregor>
They could be installing a backdoor for all you know.

[11:19:02.0000] <timeless>
it's moderately painful since firefox has whole-program-optimization

[11:19:03.0000] <AryehGregor>
Entities you realistically have to trust to some degree here: the US government, your browser vendor, your OS vendor, possibly your computer's manufacturer.

[11:20:00.0000] <timeless>
woohoo

[11:20:01.0000] <AryehGregor>
Entities you should not have to trust: every single two-bit company in the world that gets certified as a CA by someone.

[11:20:02.0000] <timeless>
after 1 email and ~1minute, i can now see bug reports i file myself!

[11:20:03.0000] <timeless>
/me likes this company

[11:20:04.0000] <timeless>
at nokia, it'd probably have taken a month :)

[11:20:05.0000] <timeless>
or 3

[11:20:06.0000] <timeless>
or 9

[11:20:07.0000] <timeless>
(possibly just getting a reply saying "do you still need this?")

[11:21:00.0000] <Ms2ger>
And why?

[11:21:01.0000] <AryehGregor>
Why what?

[11:21:02.0000] <Ms2ger>
Why one would want to see such bug reports

[11:23:00.0000] <zewt>
(i don't understand the question--of course you want to be able to see your own bug reports)

[11:24:00.0000] <hsivonen>
zewt: Opera seems to disagree :-)

[11:24:01.0000] <zewt>
causing me to not (often) submit opera bug reports :)

[11:24:02.0000] <zewt>
(but we've been over that :)

[11:24:03.0000] <timeless>
Ms2ger: why would one want to see one's own bug reports?

[11:24:04.0000] <timeless>
/me shrugs

[11:24:05.0000] <AryehGregor>
If I have long-running scripts, how can I stop the long-running script alerts?  Is there some simple way I can spin the event loop in the middle or similar?

[11:24:06.0000] <timeless>
zewt: i switched to sending opera bug reports by email to opera employees

[11:25:00.0000] <timeless>
they reply eventually with updates :)

[11:25:01.0000] <AryehGregor>
/me sends them by IRC in this channel

[11:25:02.0000] <timeless>
(this also more or less works for google bug reports)

[11:25:03.0000] <Ms2ger>
setTimeout(..,0)?

[11:25:04.0000] <zewt>
AryehGregor: run a synchronous xhr to a php script that pauses? :P

[11:25:05.0000] <AryehGregor>
zewt, :(

[11:25:06.0000] <Ms2ger>
zewt--

[11:25:07.0000] <Philip`>
Maybe you could use alert() to spin the event loop

[11:25:08.0000] <AryehGregor>
Ms2ger, will that slow stuff down if I do it a lot?

[11:25:09.0000] <zewt>
alert("Please click OK")

[11:25:10.0000] <timeless>
AryehGregor: on Gecko you can use a magic thing

[11:25:11.0000] <AryehGregor>
Like by interpreting 0 as 15 or something?

[11:26:00.0000] <timeless>
generators

[11:26:01.0000] <timeless>
if you can manage to get them to work

[11:26:02.0000] <Ms2ger>
4, and only if nested, AIUI

[11:26:03.0000] <AryehGregor>
/me observes that if the tab is in the background, Chrome doesn't whine about long-running scripts, so doesn't see that it's worth the effort

[11:26:04.0000] <zewt>
well, the theory is if you have long-running scripts they should be in workers

[11:26:05.0000] <zewt>
of course, that's often hard in practice

[11:28:00.0000] <timeless>
anyone here have /. mod points?

[11:28:01.0000] <timeless>
/me needs something down-modded

[11:30:00.0000] <Philip`>
/me appears to have 13

[11:30:01.0000] <timeless>
http://it.slashdot.org/comments.pl?sid=2407244&cid=37271796

[11:32:00.0000] <Philip`>
Why do you object to that?

[11:32:01.0000] <timeless>
one sec

[11:33:00.0000] <zewt>
"Educate people" heh

[11:33:01.0000] <timeless>
eh? this would only fix something if the certificate client hard fails when it can't get CRL or OCSP working and only if mapping diginotar.nl happened to magically map www.diginotar.nl (which is where some of the CRLs live), plus service.diginotar.nl validation.diginotar.nl crl.pkioverheid.nl (which are home to OCSP/CRLs)

[11:33:02.0000] <zewt>
any security mechanism that requires educating users fails

[11:33:03.0000] <timeless>
Philip`: ^ is my response, but basically that hosts line doesn't do anything

[11:35:00.0000] <hsivonen>
386 time clearly

[11:35:01.0000] <timeless>
?

[11:36:00.0000] <Ms2ger>
xkcd.com/386

[11:37:00.0000] <timeless>
oh yes

[11:37:01.0000] <timeless>
that's one of only 3 my browser knows

[11:41:00.0000] <hsivonen>
timeless: I'm quickly losing my DNSSEC enthusiasm as I read more about it

[11:42:00.0000] <hsivonen>
(my SIP enthusiasm also went down when I started reading about SIP)

[11:43:00.0000] <AryehGregor>
/me is still insufficiently disillusioned, perhaps

[11:43:01.0000] <AryehGregor>
/me is still enthusiastic about DNSSEC :)

[11:45:00.0000] <AryehGregor>
/me sighs very loudly about CSSOM incompatibilities

[11:45:01.0000] <Ms2ger>
/me makes AryehGregor a co-editor

[11:46:00.0000] <AryehGregor>
Is anyone even trying to follow this? http://dev.w3.org/csswg/cssom/#serializing-css-values

[11:46:01.0000] <AryehGregor>
It seems way too vague to follow anyway.  "Where CSS component values of the value can be omitted without changing the meaning of the value (e.g. initial values in shorthand properties), omit them. If this would remove all the values, then include the first allowed value."

[11:46:02.0000] <AryehGregor>
This needs to be defined inline with each property, methinks.

[11:46:03.0000] <AryehGregor>
/me works around it, grumble grumble

[11:48:00.0000] <hsivonen>
AryehGregor: DNSSEC does seem attractive as a defense against small-time wifi hijacking, though

[11:48:01.0000] <AryehGregor>
It has a lot of uses.

[11:49:00.0000] <AryehGregor>
That's one, yeah.

[11:49:01.0000] <AryehGregor>
I'm also excited about being able to have TLS without extra CAs.

[11:50:00.0000] <zewt>
also if it allows delegating subdomains

[11:50:01.0000] <zewt>
the inability to do that with tls is ridiculous

[11:51:00.0000] <hsivonen>
btw, now that Moxie got mentioned: what's the business model of Whisper Communications? how do they make money?

[11:58:00.0000] <smaug____>
is Hixie the only one who has access to the server which has acid3 test?

[11:58:01.0000] <AryehGregor>
smaug____, I assume so.

[11:59:00.0000] <hsivonen>
smaug____: I believe there are others who can access the *server* but probably not the relevant directory

[11:59:01.0000] <smaug____>
that is unfortunate

[11:59:02.0000] <AryehGregor>
Why?

[12:00:00.0000] <smaug____>
is something happens to Hixie

[12:00:01.0000] <AryehGregor>
/me discovers that he massively messed up his clipboard somehow by trying to copy and paste something huge into a terminal on a remote server

[12:00:02.0000] <smaug____>
but anyway, I wait Hixie to change the test

[12:00:03.0000] <AryehGregor>
If something happens to Hixie and his Dreamhost account goes down, yeah, that will be fun.  :)

[12:00:04.0000] <hsivonen>
smaug____: good luck. :-/

[12:00:05.0000] <AryehGregor>
Tons of stuff is on that.  Like whatwg.org.

[12:00:06.0000] <smaug____>
hsivonen: I think this change is agreed

[12:00:07.0000] <hsivonen>
smaug____: nice

[12:01:00.0000] <smaug____>
doctype.ownerDocument test should be removed

[12:03:00.0000] <timeless>
hsivonen: sorry to hear that re SIP

[12:03:01.0000] <timeless>
yeah, i'm not sure where i stand on SIP

[12:03:02.0000] <timeless>
i like it in theory, and some of my devices do a good job

[12:03:03.0000] <timeless>
but sadly the uptake of classic SIP just isn't there

[12:03:04.0000] <timeless>
for a while, Skype was the best hope

[12:04:00.0000] <timeless>
there actually was some progress on that front, someone is selling Skype ATAs - http://voip.about.com/b/2011/09/01/skype-gets-fully-residential.htm

[12:06:00.0000] <timeless>
so...

[12:06:01.0000] <timeless>
i'm not really sure how dnssec is much different from having decent Sub CAs offered by each ISP

[12:06:02.0000] <timeless>
or rather each DNS registrar

[12:07:00.0000] <timeless>
not actually a Root CA, just a sub CA

[12:07:01.0000] <timeless>
hsivonen: does whisper charge for speaking engagements? :)

[12:12:00.0000] <zewt>
guhh

[12:12:01.0000] <zewt>
gmail just logged me out *while i was writing an email*

[12:12:02.0000] <AryehGregor>
Is a draft saved, at least?

[12:12:03.0000] <zewt>
yeah

[12:12:04.0000] <zewt>
it's not even "we logged you out because", it's just surprise! you're at the login page

[12:14:00.0000] <timeless>
zewt: at least your message was saved

[12:14:01.0000] <timeless>
i've had other webmail things which helpfully eat my message

[12:15:00.0000] <timeless>
and yeah, i've hit that logged out case w/ gmail

[12:21:00.0000] <timeless>
hsivonen: hrm

[12:21:01.0000] <timeless>
one of my devices doesn't trust www.diginotar.com

[12:21:02.0000] <timeless>
or because of an update

[12:21:03.0000] <timeless>
of course, that could be because it never trusted it

[12:24:00.0000] <timeless>
err www.diginotar.nl

[12:25:00.0000] <timeless>
iirc some phone vendors are slow to add CAs

[12:25:01.0000] <timeless>
which in some cases is a good thing :)

[12:35:00.0000] <AryehGregor>
Nice, I froze the Chrome UI for once.

[12:35:01.0000] <timeless>
congrats

[12:35:02.0000] <AryehGregor>
By accidentally trying to paste a super-giant URL into the URL bar.

[12:36:00.0000] <AryehGregor>
(several hundred KB at least)

[12:36:01.0000] <AryehGregor>
(not actually a URL, just some random text)

[12:36:02.0000] <timeless>
so...

[12:36:03.0000] <timeless>
clipboard is actually somewhat special anyway

[12:36:04.0000] <AryehGregor>
/me has to force-quit

[12:36:05.0000] <timeless>
iirc there historically hasn't been a good async api for it or something

[12:36:06.0000] <timeless>
(at least on windows)

[12:36:07.0000] <AryehGregor>
First time that's happened to me in Chrome for a long time.

[12:36:08.0000] <AryehGregor>
I'm on Linux.

[12:36:09.0000] <timeless>
which meant one could get very stuck

[12:36:10.0000] <timeless>
oh, the story on x11 is probably worse

[12:36:11.0000] <timeless>
i don't think there are any good x11 apis :)

[12:38:00.0000] <zewt>
AryehGregor: heh, "view image" on a canvas in firefox does that

[12:38:01.0000] <zewt>
opens it as a gigantic data:

[12:40:00.0000] <timeless>
/me remembers a time when the urlbar would stop painting text when it got too much content

[12:40:01.0000] <zewt>
(doesn't crash, just chugs)

[12:40:02.0000] <timeless>
/me also remembers a time when too many characters in the urlbar would kill x servers

[12:40:03.0000] <timeless>
(there's at least one bugzilla bug on that in case people don't believe me)

[13:09:00.0000] <zewt>
am I the only one that finds the firefox "save password" thing almost always disappears before I can do anything with it now?

[13:09:01.0000] <zewt>
"save password? psyche!"

[13:20:00.0000] <AryehGregor>
. . . seriously?  WebKit computes "font-style: oblique" to "font-style: italic"?

[13:20:01.0000] <AryehGregor>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!doctype%20html%3E%0A%3Cspan%20style%3Dfont-style%3Aoblique%3E%3C%2Fspan%3E%0A%3Cscript%3Ew(getComputedStyle(document.querySelector(%22span%22)).fontStyle)%3C%2Fscript%3E

[13:20:02.0000] <AryehGregor>
. . .

[13:20:03.0000] <Ms2ger>
Unsurprising

[13:20:04.0000] <AryehGregor>
Really?

[13:30:00.0000] <AryehGregor>
/me stabs browser CSSOM implementations.  STAB STAB STAB STAB.

[13:31:00.0000] <AryehGregor>
Guess what node.style.length is for <span style="text-decoration: line-through">?

[13:31:01.0000] <AryehGregor>
. . . 4.

[13:31:02.0000] <AryehGregor>
-moz-text-blink, -moz-text-decoration-color, -moz-text-decoration-line, -moz-text-decoration-style.

[13:31:03.0000] <AryehGregor>
This is a regression, too, I'm pretty sure.

[13:31:04.0000] <AryehGregor>
/me works around it, grumble grumble

[13:34:00.0000] <AryehGregor>
Could someone check what this outputs in Firefox 4 and/or 5 and/or 6 and/or 7 for me?  http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!doctype%20html%3E%0A%3Cspan%20style%3Dtext-decoration%3Aline-through%3E%3C%2Fspan%3E%0A%3Cscript%3Ew(document.querySelector(%22span%22).style.length)%3C%2Fscript%3E

[13:34:01.0000] <AryehGregor>
In 8 it's 4.

[13:34:02.0000] <AryehGregor>
It should be 1.

[13:35:00.0000] <Philip`>
In 6.0 it's 4

[13:35:01.0000] <AryehGregor>
Hmm, so not a recent regression.

[13:35:02.0000] <Philip`>
6.0 is pretty recent

[13:35:03.0000] <AryehGregor>
Conceivably it's been since 4 or 5, yeah.

[13:36:00.0000] <annevk>
AryehGregor, want to take over CSSOM?

[13:36:01.0000] <AryehGregor>
annevk, no.  Have no time.

[13:36:02.0000] <AryehGregor>
More than enough editing stuff to do for now.

[13:36:03.0000] <AryehGregor>
Maybe someday.

[13:36:04.0000] <annevk>
AryehGregor, the serializing stuff is going to be taken over by the individual modules btw

[13:36:05.0000] <AryehGregor>
Yeah, it definitely should be.

[13:36:06.0000] <AryehGregor>
There needs to be a central place where it defines some useful primitives, but for nontrivial properties the details need to be specced per-property.

[13:37:00.0000] <annevk>
if you have details for the primitives and the grammar you should be okay

[13:38:00.0000] <annevk>
which is what CSSOM has now, it's just not very detailed (and the way CSS is written makes it hard to hook into things)

[13:43:00.0000] <zewt>
when at first you don't succeed, mail listserv commands to the list again

[13:43:01.0000] <zewt>
(don't most lists try to detect that and stop it?)

[13:52:00.0000] <annevk>
karlcow, don't get your comment on twitter

[14:18:00.0000] <AryehGregor>
jgraham, did you ever figure out why testharness.js was producing no output for my reflection tests anymore?

[14:19:00.0000] <AryehGregor>
/me is observing something similar in another file too, it seems

[14:19:01.0000] <AryehGregor>
Oh, never mind for the other thing.

[14:20:00.0000] <AryehGregor>
I wasn't running the tests before the load event.

[14:20:01.0000] <AryehGregor>
Reflection tests are still a question, though.  :)

[14:36:00.0000] <AryehGregor>
. . . How is a JS file's encoding determined?

[14:45:00.0000] <annevk>
AryehGregor, based on the referring file, BOM, HTTP

[14:45:01.0000] <annevk>
and maybe a charset attribute on <script>

[14:45:02.0000] <annevk>
(not in that order)

[14:45:03.0000] <AryehGregor>
In what order of precedence?

[14:47:00.0000] <annevk>
HTTP, charset="", BOM, referring file

[14:47:01.0000] <annevk>
defined in HTML

[14:48:00.0000] <AryehGregor>
k, thx.

[14:49:00.0000] <zewt>
bom in .js? D :

[14:57:00.0000] <annevk>
WRONG_DOCUMENT_ERR is actually useful for Range, who'd have thought

[14:58:00.0000] <AryehGregor>
Is it?

[14:58:01.0000] <AryehGregor>
When is it thrown?

[14:58:02.0000] <AryehGregor>
compareBoundaryPoints.

[14:58:03.0000] <annevk>
comparePoint throws it per spec

[14:58:04.0000] <AryehGregor>
Makes sense there, I guess.

[14:59:00.0000] <AryehGregor>
Would make more sense to return a special value, but okay.

[14:59:01.0000] <annevk>
yeah dunno, I haven't actually tested any of this

[14:59:02.0000] <AryehGregor>
You noticed I have like a zillion Range tests?

[14:59:03.0000] <AryehGregor>
You should steal those.

[14:59:04.0000] <AryehGregor>
(note: they might be slightly hard to understand in some cases)

[14:59:05.0000] <AryehGregor>
(note: that also might be an understatement)

[15:00:00.0000] <AryehGregor>
https://bitbucket.org/ms2ger/dom-range/src/tip/test/

[15:00:01.0000] <AryehGregor>
Nothing tests compareBoundaryPoints yet, though, it looks like.

[15:01:00.0000] <annevk>
yeah cool

[15:01:01.0000] <annevk>
guess we should move those to the DOMCore repo at some point

[15:02:00.0000] <AryehGregor>
It would make sense.

[15:04:00.0000] <nlogax>
might as well ask here too. :) can i get rid of the default drag&drop cursor? (a green (+) thingie on os x, some equally ugly thing on windows)

[15:04:01.0000] <nlogax>
other than setting dropEffect

[15:58:00.0000] <roc>
grr ... why is offline GMail a Chrome app and not a Web app? https://chrome.google.com/webstore/detail/ejidjjhkpiempkbhmpbfngldlkglhimk

[16:03:00.0000] <AryehGregor>
More general: why doesn't the Chrome Web Store support other browsers?

[16:03:01.0000] <AryehGregor>
"Sorry, we don't support your browser just yet. You'll need Google Chrome to install apps, extensions and themes."

[16:03:02.0000] <AryehGregor>
That makes it sound like they intend to add support eventually, but . . .

[16:06:00.0000] <AryehGregor>
I imagine they will add support for other browsers eventually, since to do otherwise seems inconsistent with their general approach to the web.  But it's pretty annoying that they seem not to view that as urgent.

[16:06:01.0000] <AryehGregor>
/me has no more idea than anyone what the Chrome Web Store or Gmail people are thinking, obviously

[16:07:00.0000] <roc>
who knows, but there must certainly be a huge temptation to follow Apple and Microsoft into proprietary app stores

[16:08:00.0000] <AryehGregor>
Why?  Google makes virtually all its money off ads, and Firefox displays ads as well as Chrome does.

[16:09:00.0000] <AryehGregor>
What money it does make directly off the store will only be increased if it allows more browsers to use it.

[16:10:00.0000] <AryehGregor>
Unlike Microsoft and Apple, Google doesn't have a history of trying to obtain lock-in, and in fact has often tended to do the opposite -- make switching to other services as easy as possible.

[16:10:01.0000] <AryehGregor>
E.g., Gmail supports unlimited forwarding, IMAP, etc. out of the box, which (AFAIK) some other major webmail providers don't.

[16:11:00.0000] <roc>
yeah, they've been good

[16:11:01.0000] <roc>
but if they get lots of good stuff into the Chrome app store, then that increases Chrome usage

[16:12:00.0000] <roc>
and that translates into power over the Web, and app developers

[16:12:01.0000] <zewt>
google's mobile browser support has been terrible for web apps, in my experience

[16:12:02.0000] <zewt>
seems like they really don't care

[16:13:00.0000] <roc>
we'll see how things go down

[16:13:01.0000] <zewt>
just trying to implement a basic full-screen web app in android's browser (at least as of 2.3.x) is a nightmare

[16:14:00.0000] <roc>
but I really want offline GMail and I don't want to have to switch to Chrome to get it (nor do I want other people to have to switch to Chrome to get it, of course)

[16:14:01.0000] <zewt>
"installed web apps" should be considered an oxymoron

[16:15:00.0000] <zewt>
all of the "chrome apps" and all that nonsense just kills what's great about web apps

[16:22:00.0000] <roc>
offline GMail uses WebSQL, which is dead as a standard

[16:22:01.0000] <zewt>
(because using a language that every programmer in the world already intuitively understands is overrated; we Need More Wheels)

[16:25:00.0000] <jamesr_>
the new offline gmail uses websql? i thought it just used filesystem (although i'm not directly involved)

[16:25:01.0000] <roc>
in fact, the "SQL" every programmer in the world intuitively understands is different things to different people and often quite different to the SQLite 3.6.19 or whatever that WebSQL is

[16:25:02.0000] <roc>
jamesr_: khuey looked at it and that's what he says

[16:25:03.0000] <roc>
but regardless of the detabable merits of WebSQL, its deadness as a standard is a fact

[16:26:00.0000] <jamesr_>
good thing offline gmail isn't part of the web, then

[16:27:00.0000] <roc>
two wrongs don't make a right

[16:27:01.0000] <zewt>
roc: it doesn't matter if it's different in the details, the basic language (and most of the day-to-day as well) is well-understood, which makes learning variants easy

[16:27:02.0000] <AryehGregor>
roc, there's not any realistic alternative, though, given the low adoption so far of IDB.  Not to mention the fact that it's staggeringly complicated to use for even the most trivial use-cases.

[16:27:03.0000] <jamesr_>
i have no idea what lead to that decision

[16:27:04.0000] <AryehGregor>
One line of localStorage that's instantly understandable to any web developer is so many lines of IDB that I've given up every time I tried it.

[16:28:00.0000] <roc>
AryehGregor: it is supported in Chrome though, so if you're going to write a Chrome app ...

[16:28:01.0000] <AryehGregor>
Well, true.

[16:28:02.0000] <zewt>
(similar to a major reason svn was so successful: it was very intuitive to cvs users, so you only had to learn the differences, where eg. git being so different gives it a much higher learning curve)

[16:28:03.0000] <AryehGregor>
But I suspect it's a lot harder to learn and use, especially given that anyone writing this sort of app already knows some sort of SQL.

[16:29:00.0000] <AryehGregor>
At least, I'm pretty sure I could pick up WebSQL a heck of a lot more easily.

[16:29:01.0000] <AryehGregor>
I wouldn't be surprised if WebSQL has way more features and better performance at this point, too.

[16:30:00.0000] <AryehGregor>
Not that I'm saying people should use WebSQL instead of IDB, but there are pretty clear reasons for doing so.

[16:34:00.0000] <AryehGregor>
Does anyone know if there's a Mozilla bug for supporting Node.contains()?

[16:34:01.0000] <AryehGregor>
If not, I'll file one.

[16:35:00.0000] <AryehGregor>
Found it: https://bugzilla.mozilla.org/show_bug.cgi?id=683852

[16:37:00.0000] <AryehGregor>
Okay, does anyone know what the status of my reflection tests are in the HTMLWG?

[16:37:01.0000] <AryehGregor>
They're still not "approved", it seems?


2011-09-02
[19:58:00.0000] <jdong_>
w3bk1t

[19:58:01.0000] <jdong_>
sorry, typo

[19:58:02.0000] <zewt>
also password

[22:42:00.0000] <heycam>
/me moves country, brb

[00:53:00.0000] <asmodai>
Mmm, tab groups and app tabs really are nice for people like me

[01:00:00.0000] <zcorpan>
do we have a policy for replying on public-html-comments these days?

[01:38:00.0000] <annevk>
zcorpan, your reply will turn out irrelevant as a bug is filed on behalf of the commenter

[01:41:00.0000] <annevk>
shit

[01:41:01.0000] <annevk>
replied on a Member-only list

[01:42:00.0000] <annevk>
/me keeps forgetting :(

[01:42:01.0000] <bezoar>
hi

[01:42:02.0000] <annevk>
(for those with access: chairs)

[01:42:03.0000] <bezoar>
i could use a chair

[01:44:00.0000] <annevk>
:)

[02:26:00.0000] <zcorpan>
paul_irish: html5weekly confirm email got marked as spam for me

[02:31:00.0000] <annevk>
AryehGregor, startContainer has Node? but is that really needed?

[02:31:01.0000] <annevk>
AryehGregor, for detach() you set it to null but then it will never return that if the detached flag is set

[02:32:00.0000] <annevk>
curious that this works differently from NodeIterator.detach()

[03:07:00.0000] <asmodai>
Now that's pretty cool: http://evolutionofweb.appspot.com/

[03:30:00.0000] <zcorpan>
anyone know if somebody has successfully merged swedish and english hunspell dictionaries? (just adding the english .dic into the swedish .dic still makes some english words be marked as misspellt. also adding the english .aff into the swedish .aff doesn't help much)

[03:37:00.0000] <zcorpan>
hmm. maybe if i rename the flags in PFX and SFX so that they don't use the same for swedish and english

[04:10:00.0000] <jarek>
#macdev

[04:24:00.0000] <annevk>
AryehGregor, why is extractContents not clone followed by delete?

[05:14:00.0000] <smaug____>
annevk: so document.contains(document) would be false

[05:14:01.0000] <smaug____>
I guess that is ok


2011-09-06
[02:51:00.0000] <krijnh>
o/

[02:52:00.0000] <zcorpan>
\o/

[02:53:00.0000] <krijn>
Sorry about that

[02:53:01.0000] <nimbu>
wrong window krijn

[02:53:02.0000] <krijn>
?

[02:53:03.0000] <nimbu>
"sorry about that"

[02:54:00.0000] <annevk>
no

[02:54:01.0000] <annevk>
he fixed the logs

[02:54:02.0000] <nimbu>
o

[02:56:00.0000] <krijn>
Yeah, sorry for not fixing it earlier :)

[02:57:00.0000] <krijn>
/me blames dConstruct and cremations

[03:04:00.0000] <annevk>
:(

[05:26:00.0000] <hsivonen>
wow. itemId reflects an URL like href, etc.? That's novel in the URLs-as-identifiers land.

[05:27:00.0000] <annevk>
it's solely an identifier?

[05:27:01.0000] <annevk>
seems like a bad idea then

[05:38:00.0000] <MikeSmith>
so hey

[05:39:00.0000] <annevk>
hey MikeSmith!

[05:39:01.0000] <MikeSmith>
hey man

[05:39:02.0000] <MikeSmith>
I'm trying to list out some likely candidates for new attributes and elements that may make their way into the HTML spec some time in the near future

[05:39:03.0000] <MikeSmith>
the main one I can think of is the inputmode-like thing

[05:39:04.0000] <MikeSmith>
http://wiki.whatwg.org/wiki/Text_input_keyboard_mode_control

[05:39:05.0000] <annevk>
<x- or <data- for the component model?

[05:40:00.0000] <MikeSmith>
the other I can think of is the <data>

[05:40:01.0000] <MikeSmith>
element

[05:40:02.0000] <MikeSmith>
annevk: ah yeah

[05:40:03.0000] <MikeSmith>
any others come to mind?

[05:40:04.0000] <annevk>
there was the <input type=range> bug about having two sliders

[05:40:05.0000] <MikeSmith>
OK

[05:40:06.0000] <annevk>
so <input type=double-range> maybe?

[05:40:07.0000] <annevk>
guess that's not really a new attribute

[05:41:00.0000] <annevk>
oh

[05:41:01.0000] <annevk>
<dialog>

[05:41:02.0000] <annevk>
<dialog modal>

[05:41:03.0000] <annevk>
maybe XBL

[05:41:04.0000] <MikeSmith>
ah yeah

[05:42:00.0000] <annevk>
XBL - 30% chance

[05:42:01.0000] <annevk>
<x-> 50%

[05:42:02.0000] <annevk>
/me tries to think of other arbitrary percentages

[05:42:03.0000] <zcorpan>
namespaces, 0%

[05:42:04.0000] <annevk>
we once had that tree thing

[05:42:05.0000] <annevk>
:)

[05:42:06.0000] <annevk>
<datatable>?

[05:43:00.0000] <hsivonen>
annevk: is XBL that much alive still?

[05:43:01.0000] <annevk>
<datagrid>!

[05:43:02.0000] <annevk>
hsivonen, if the component model ever gets a declarative side it would be XBL

[05:44:00.0000] <annevk>
hsivonen, afaict

[05:44:01.0000] <annevk>
hsivonen, and it seems some Gecko developers and Hixie still think that's a good idea

[05:45:00.0000] <hsivonen>
annevk: is any of those Gecko developers actively implementing?

[05:45:01.0000] <annevk>
no, but is Gecko implementing the component model at this point?

[05:45:02.0000] <MikeSmith>
hsivonen: I'm wondering what your assessment is on <menuitem>, and what you think the odds are on the ever getting into the spec

[05:46:00.0000] <hsivonen>
annevk: I wouldn't know

[05:46:01.0000] <hsivonen>
MikeSmith: oh yeah, that

[05:46:02.0000] <annevk>
MikeSmith, you're trying to do this HTML.next thing?

[05:46:03.0000] <hsivonen>
MikeSmith: I thought that one was between the Mozilla guys who wanted it and Hixie

[05:47:00.0000] <hsivonen>
MikeSmith: I guess I'll need to find out what the situation is

[05:47:01.0000] <MikeSmith>
hsivonen: yeah it is, essentially as you said

[05:47:02.0000] <MikeSmith>
hsivonen: it's just kind of been hanging for a few weeks now

[05:47:03.0000] <MikeSmith>
last comment on it from Jonas

[05:48:00.0000] <MikeSmith>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=13608

[05:48:01.0000] <MikeSmith>
annevk: yeah, just trying to make a summary assessment of where things are at overall at this point, as far as possible new markup additions

[05:49:00.0000] <hsivonen>
I want Gecko and the spec to match. and I want us to be careful about minting new void elements. (IIRC there's now a polyfill for <menuitem> floating around, and that sort of thing is actually easier to make when it's non-void)

[05:49:01.0000] <hsivonen>
I not that interested into bikeshedding the name

[05:49:02.0000] <hsivonen>
s/into/in/

[05:50:00.0000] <MikeSmith>
yep

[05:50:01.0000] <MikeSmith>
agreed on all that, fwiw

[05:51:00.0000] <MikeSmith>
but I think the implementation work that Jan did has at the very least exposed some possible problems with the context-menu/command stuff that should be addressed in some way

[05:51:01.0000] <MikeSmith>
(if not necessarily with a new element)

[05:51:02.0000] <hsivonen>
I haven't paid careful enough attention to comment

[05:54:00.0000] <smaug____>
hsivonen: FYI, menuitem won't be void element

[05:54:01.0000] <smaug____>
hsivonen: since its handling was made more consistent with <option>

[05:55:00.0000] <hsivonen>
smaug____: on the DOM level that is? hopefully not in parsing

[05:56:00.0000] <hsivonen>
smaug____: so we can now back out the #ifdefs for making menuitem void?

[05:57:00.0000] <smaug____>
hsivonen: <menuitem>label</menuitem> should work

[05:57:01.0000] <hsivonen>
smaug____: ok

[05:57:02.0000] <hsivonen>
let's get the #ifdefs backed out, then

[06:05:00.0000] <foolip>
hsivonen, annevk: itemid isn't quite like itemtype, something like itemid="#foo" isn't completely unreasonable

[06:14:00.0000] <hsivonen>
foolip: I didn't say unreasonable. just novel in the URIs-are-identifiers land.

[06:28:00.0000] <MikeSmith>
so to be clear, the <x-foo> custom-element registration piece would require changes to the parsing algorithm, right?

[06:29:00.0000] <annevk>
maybe

[06:29:01.0000] <annevk>
depends on the details

[06:29:02.0000] <MikeSmith>
OK

[06:34:00.0000] <hsivonen>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=14029#c16 is sad

[06:37:00.0000] <annevk>
"Where I came from, we have rather colorful names for folk that hide behind walls,  including walls of pseudonyms."

[06:37:01.0000] <annevk>
holy shit

[06:37:02.0000] <MikeSmith>
hsivonen: yep

[06:38:00.0000] <MikeSmith>
annevk: yeah, that is even worse

[06:38:01.0000] <MikeSmith>
dude is out of line

[06:38:02.0000] <MikeSmith>
too much time on their hands

[06:39:00.0000] <annevk>
and again I am amazed by bz remaining calm in the face of idiots

[06:39:01.0000] <MikeSmith>
the stuff that people choose to burn up time agitating about is boggling

[06:39:02.0000] <hsivonen>
I wonder if Glenn believes all the spam puppets with real-looking Firstname Lastname names on G+ are real people with passports written for those names

[06:39:03.0000] <MikeSmith>
annevk: yeah, bz is model of how to deal with cases like this

[06:40:00.0000] <smaug____>
hsivonen: actually, how is <option> defined?

[06:40:01.0000] <smaug____>
it can be void but also container, right?

[06:40:02.0000] <hsivonen>
smaug____: it can't be void. it's end tag can be omitted

[06:40:03.0000] <smaug____>
ah, ok

[06:41:00.0000] <erlehmann>
hsivonen, also there are people with “fake-looking” names, that get kicked out regularly everywhere.

[06:41:01.0000] <MikeSmith>
hsivonen: I think he does not, but he doesn't care. The goal is just for the sake of appearances. Or perhaps it's not and they next thing they are going to agitate for is that the W3C start actually verifying the identity of everybody who has a W3C account or who volunteers to write a spec (and actually does it).

[06:42:00.0000] <erlehmann>
scaring contributors away, yay!

[06:48:00.0000] <hsivonen>
(speaking of passports, I occasionally find it curious that there are countries that have the audacity to issue passports--i.e. certify a person's existence--without have a database of all people in the country)

[06:49:00.0000] <hsivonen>
(at least *my* existence is backed by a database line)

[06:49:01.0000] <hsivonen>
s/have/having/

[06:51:00.0000] <hsivonen>
(though countries that don't have a database of all citizens manage to get by much better than one would expect)

[06:51:01.0000] <takkaria>
/me is pretty happy about that

[06:51:02.0000] <erlehmann>
in before anyone mentions IBM

[06:51:03.0000] <hsivonen>
takkaria: about countries managing to do stuff without a proper database?

[06:53:00.0000] <erlehmann>
i think germany has no central database.

[06:54:00.0000] <erlehmann>
but thousands of local ones. so in theory, the information is there.

[06:55:00.0000] <takkaria>
hsivonen: about states not having centralised databases of everyone

[06:55:01.0000] <erlehmann>
this is funny http://en.wikipedia.org/wiki/Resident_registration#France

[06:56:00.0000] <erlehmann>
>current residency is often verified by showing bills relating to the current home

[06:56:01.0000] <erlehmann>
haha

[06:59:00.0000] <hsivonen>
takkaria: it's kinda weird not to have one in any country that has elections, taxes or social security benefits (or a conscription-based army)

[07:03:00.0000] <hsivonen>
erlehmann: heh. the wikipedia entries for Finland and Sweden have obviously been copied and pasted from each other (as probably the relevant legislation, too).

[07:04:00.0000] <hsivonen>
subentries on the Resident_registration page, that is

[07:08:00.0000] <kennyluck>
Does anyone here know how reality-matching the ISO/IEC C standard is? as compared to WHATWG HTML LS.

[07:13:00.0000] <Philip`>
kennyluck: I think it's reality-matching enough that programmers and compiler developers refer to it to authoritatively determine the correctness of programs and of compilers, mostly successfully (though there's certainly a few cases where it's vague and/or incorrect so you have to rely on common interpretation rather than just the text)

[07:15:00.0000] <Philip`>
kennyluck: It leaves a lot of stuff as implementation-defined (e.g. the number of bits in a byte) even when pretty much every implementation in the world makes the same decision, so (unlike the general direction of HTML) it lets you write conforming compilers that probably won't work on much real-world code

[07:16:00.0000] <Philip`>
kennyluck: and compilers implement a load of non-standard features too

[07:16:01.0000] <kennyluck>
Philip`, it sounds like CSS2.1 :p

[07:17:00.0000] <kennyluck>
Philip`, is there a supplementary document that talks about these *decisions*?

[07:17:01.0000] <Philip`>
kennyluck: so I suppose it's less of an attempted comprehensive implementation description than HTML is, and more of a almost-but-not-quite-large-enough-to-be-practical subset that programmers and compilers can agree on

[07:19:00.0000] <Philip`>
kennyluck: The decisions like the number of bits per byte? It differs by compiler and by platform, and I don't think anyone's collected all the data together, though in theory the compilers ought to document all their choices for implementation-defined behaviour

[07:19:01.0000] <Philip`>
(Undefined behaviour is different and isn't expected to be documented anywhere)

[07:19:02.0000] <kennyluck>
Philip`, I mean the hidden rules that all implementation agree upon.

[07:20:00.0000] <Philip`>
http://gcc.gnu.org/onlinedocs/gcc/C-Implementation.html

[07:20:01.0000] <kennyluck>
Yes, I was talking about undefined behaviors.

[07:21:00.0000] <Philip`>
The standard has an appendix listing "unspecified" and "undefined" and "implementation-defined" cases

[07:21:01.0000] <kennyluck>
/me just read an article that mentions the fact that the standard makes NULL == 0 implementation-defined, but he wonders if there's real world exception.

[07:22:00.0000] <Philip`>
Nobody agrees on handling of undefined behaviour - that's things like "(x++) + (x++)" and even a single compiler with different optimisation settings gives different results

[07:24:00.0000] <izhak>
Hi. Could you please guys clarify how does most popular engines deal with encoding when parsing html, do they transfer any encoding to a single one to work with it when parsing, or parsing process deals with different encodings?

[07:25:00.0000] <hsivonen>
Philip`: it seems terrible that undefined stuff compiles instead of causing errors

[07:29:00.0000] <Philip`>
kennyluck: The standard says 0 is a null pointer constant, and NULL is a null pointer constant, but doesn't say there's only a single null pointer constant or that they're all equal

[07:30:00.0000] <Philip`>
They'll be equal if converted to pointers, but == will compare them as integers

[07:30:01.0000] <Philip`>
so I think I agree that expression is implementation-defined

[07:31:00.0000] <erlehmann>
Philip`, the number of bits in a byte? o.0

[07:31:01.0000] <Philip`>
but I can't conceive of any non-intentionally-weird implementation where NULL would not equal 0

[07:31:02.0000] <erlehmann>
does x64 have different bytes?

[07:31:03.0000] <erlehmann>
or what.

[07:31:04.0000] <kennyluck>
erlehmann, that one has a known exception.

[07:32:00.0000] <erlehmann>
kennyluck, i wish for a compiler that translates „undefined behaviour“ to „delete everything“

[07:33:00.0000] <kennyluck>
erlehmann, here you go http://www.velocityreviews.com/forums/showpost.php?p=2435265&postcount=10

[07:33:01.0000] <Philip`>
hsivonen: In general it's impossible to prove that it's undefined, like in "int f(int* a, int* b) { return (*a)++ + (*b)++; }; int x, y; ... f(&x, &y) /* okay */; f(&x, &x) /* undefined */;"

[07:41:00.0000] <annevk>
oops, almost forgot to define createRange!

[07:45:00.0000] <Philip`>
kennyluck: http://stackoverflow.com/questions/2597142/when-was-the-null-macro-not-0/2597232#2597232 has some examples where a null pointer is not 0x0000..., though that doesn't mean NULL will be a non-zero integer

[07:46:00.0000] <Philip`>
(at least per C99)

[07:47:00.0000] <kennyluck>
interesting

[07:50:00.0000] <Philip`>
I suppose a particularly security-conscious implementation could do pointer-to-int conversion by generating an incrementing ID number for each new pointer it encounters

[07:51:00.0000] <Philip`>
and then do int-to-pointer conversion by looking up the pointer with that ID number, or returning the null pointer if the ID wasn't valid

[07:52:00.0000] <Philip`>
and then it could #define NULL 0xDEADBEEF so it's easily distinguishable in memory dumps etc, and never allocate that as an ID number so it always returns a null pointer

[07:53:00.0000] <Philip`>
and I think that would be a conforming C implementation

[07:54:00.0000] <zewt>
in practice any system where null isn't false would be fatally broken

[07:55:00.0000] <Philip`>
zewt: The NULL macro, or a null pointer?

[08:02:00.0000] <annevk>
note to self: check if HTML has garbage collection rules for all objects that can do requests

[08:02:01.0000] <annevk>
e.g. <script>, <img>, <link>

[08:03:00.0000] <annevk>
and if not, file bugs, I guess

[08:03:01.0000] <zewt>
Philip`: don't see how they could possibly be different

[08:04:00.0000] <zewt>
annevk: where is that ever non-transparent?

[08:05:00.0000] <Philip`>
zewt: NULL can be an integer type, not a pointer type, so different rules apply for conversions and comparisons etc

[08:06:00.0000] <zewt>
but it still needs to be a false value, whatever its type

[08:06:01.0000] <zewt>
0xdeadbeef isn't false

[08:07:00.0000] <zewt>
so every program that says if(p) instead of if(p != NULL) would break

[08:07:01.0000] <annevk>
zewt, what?

[08:08:00.0000] <zewt>
annevk: when are effects of gc rules visible to scripts/users in a way that should be specified?

[08:08:01.0000] <zewt>
specifying it for workers makes sense, of course, since it's very visible

[08:09:00.0000] <annevk>
it's specified for XMLHttpRequest, EventSource, WebSocket

[08:09:01.0000] <Philip`>
zewt: If p is a pointer, "if(p)" will convert the pointer to an integer, which you want to be 0 (which I don't think the standard requires); that doesn't mean NULL has to be the integer 0, it could be a different integer that also happens to become a null pointer when converted to a pointer type, without breaking that code

[08:10:00.0000] <annevk>
apparently there have been compatibility issues in this area as well

[08:10:01.0000] <annevk>
it also matters for navigation

[08:12:00.0000] <zewt>
don't think there's any way NULL could be something other than 0 while having boolean expressions behave normally

[09:10:00.0000] <annevk>
why is it important that "concept-range-bp-node" is a separate concept Ms2ger, AryehGregor?

[09:10:01.0000] <annevk>
seems to be the same as concept-node

[09:11:00.0000] <annevk>
we should maybe introduce "start node", "start offset", "end node", and "end offset" as concepts

[09:29:00.0000] <zewt>
surprising how many people just don't understand the DOM Events model, even people working on specs

[09:30:00.0000] <zewt>
the webgl guys had similar confusion, by having side-effects of having an event handler registered at all (which fortuantely they fixed)

[09:33:00.0000] <Ms2ger>
"spam a note with <span>"

[09:35:00.0000] <zewt>
it's also discouraging that people who should know better go "come on let's just add a few little unexpected side-effects to a core API" :|

[09:36:00.0000] <dglazkov>
good morning, Whatwg!

[09:41:00.0000] <kennyluck>
good morning, Whatwg!

[09:46:00.0000] <hsivonen>
aargh. is polyglot on its way to pubrules if it's up to TimBL? http://lists.w3.org/Archives/Public/www-tag/2011Sep/0008.html

[09:49:00.0000] <timeless>
hsivonen: g+ has spam puppets?

[09:49:01.0000] <timeless>
no fair, i can't see them, i got kicked off g+ :)

[09:50:00.0000] <timeless>
hsivonen: fwiw, the US doesn't really have a database of all US citizens

[09:51:00.0000] <timeless>
at best it has a database of all people who have filed taxes

[09:51:01.0000] <timeless>
but chlidren don't file taxes generally, and you can certainly get passports for them

[09:52:00.0000] <timeless>
on the topic of current residence, i have at least one account w/ 200cad currently suspended because i changed too many fields at the same time

[09:52:01.0000] <zewt>
birth certificates

[09:53:00.0000] <timeless>
so i get to scan a utility bill at some point as step 1/5 to try to unlock the account

[09:53:01.0000] <timeless>
(this isn't actually a bad thing, i don't blame them for thinking my account was stolen, the actions i took sure make it look like i stole the account)

[09:53:02.0000] <timeless>
zewt: birth certificates aren't actually well backed by a database either fwiw

[09:54:00.0000] <timeless>
at least not for people going back to say 1901

[09:54:01.0000] <timeless>
it might be the case that they're well backed to say 1960

[09:54:02.0000] <zewt>
but for people who are children now :)

[09:54:03.0000] <hsivonen>
timeless: it sucks that they kicked you out, though I had been wondering what took them so long

[09:54:04.0000] <timeless>
hsivonen: yeah, i was wondering that too :)

[09:54:05.0000] <timeless>
but i don't think they have a proper database that pairs birth to death

[09:55:00.0000] <timeless>
which means that if your child is born in one place, and dies elsewhere, i don't think the database record is required to "close" :)

[09:55:01.0000] <hsivonen>
timeless: did this cause collateral damage to your use of other Google services?

[09:55:02.0000] <timeless>
hsivonen: my picasa account is suspended

[09:55:03.0000] <hsivonen>
timeless: and are they now blocking you from seeing public posts if you are logged in?

[09:56:00.0000] <timeless>
i had to liberate the data

[09:56:01.0000] <timeless>
otherwise the consequences are minimal

[09:56:02.0000] <hsivonen>
timeless: did Picasa have a real names policy when you signed up?

[09:56:03.0000] <timeless>
no

[09:56:04.0000] <timeless>
the account was tied to timeless

[09:56:05.0000] <timeless>
and i have an account in my real name too

[09:56:06.0000] <timeless>
i chose not to use that one for the data..

[09:57:00.0000] <hsivonen>
Google is burning goodwill pointlessly here

[09:57:01.0000] <timeless>
# [15:11] <hsivonen> erlehmann: heh. the wikipedia entries for Finland and Sweden have obviously been copied and pasted from each other (as probably the relevant legislation, too).

[09:57:02.0000] <timeless>
/me chuckls

[09:57:03.0000] <timeless>
s/ls/les/

[09:59:00.0000] <timeless>
kennyluck: my favorite wrt C was the definition of `main`

[09:59:01.0000] <timeless>
it basically said `this set of main() functions are vaild, plus any documented by the compiler to be valid`

[09:59:02.0000] <hsivonen>
timeless: it also sucks that the rules are different for Famous People. Madonna gets to use "." as her last name (which is dumb--shouldn't they support one-token names for real Indian names anyway) and MG Siegler doesn't need to expand MG

[09:59:03.0000] <hsivonen>
(both Madonna and MG have verified accounts that seem to break the rules)

[09:59:04.0000] <timeless>
hsivonen: oh, she used "."?

[10:00:00.0000] <timeless>
/me should try that

[10:00:01.0000] <zewt>
why would google support people using names that are literally impossible to search for, heh

[10:02:00.0000] <timeless>
zewt: that soudns like my opinion on anything outside the us-ascii range :)

[10:02:01.0000] <hsivonen>
anyway, the way Google is treating other people makes me less enthusiastic to use G+ even though I have a conforming name

[10:02:02.0000] <timeless>
/me wonders if this browser has bookmarked the page talking about the Poker player with the nullish byte in his name

[10:02:03.0000] <hsivonen>
(conforming name in the ASCII range even)

[10:03:00.0000] <timeless>
hsivonen: btw, i'm quite glad you do have such a name

[10:03:01.0000] <zewt>
hsivonen: the fact that they go "we care about privacy!" and then immediately proceed with a privacy-demolishing names policy is borderline hilarious

[10:03:02.0000] <timeless>
just as i was glad to move from Döbelninkatu to Hietaniemenkatu

[10:03:03.0000] <timeless>
that first address is still stuck in some places

[10:04:00.0000] <timeless>
iirc my .eu domain might have it

[10:04:01.0000] <timeless>
because changing that field was basically impossible :)

[10:04:02.0000] <hsivonen>
timeless: I went downhill on that point. I'm now on Strömbergintie

[10:04:03.0000] <timeless>
eww

[10:04:04.0000] <timeless>
has it caused any pain?

[10:05:00.0000] <zewt>
at least for locations you can leave off combining marks and stuff will *usually* still get to where it goes

[10:05:01.0000] <zewt>
of course, sites that try to be "smart" and "verify" addresses may give a headache, but those give everyone headaches

[10:06:00.0000] <hsivonen>
timeless: no pain so far, but an American company has sent me postal mail to StrÃ¶mbergintie because they were too incompetent to pull UTF-8 out of Paypal's system correctly

[10:06:01.0000] <timeless>
sounds familiar

[10:06:02.0000] <timeless>
i presume that posti.fi is used to handling such things? :)

[10:06:03.0000] <hsivonen>
(I'm told that Paypal's API does the right thing)

[10:06:04.0000] <timeless>
wow

[10:06:05.0000] <zewt>
heh i remember somewhere seeing mail forwarding by russian post offices or something, where they use tables to de-mojibake printed addresses

[10:07:00.0000] <hsivonen>
timeless: the mailing reached me, alas

[10:07:01.0000] <timeless>
so far paypal has caused me minor pain because W3C is silly

[10:07:02.0000] <hsivonen>
timeless: I wish it had been returned to the sender

[10:07:03.0000] <timeless>
W3C's TPAC billing agency is in Paris

[10:07:04.0000] <timeless>
the event is in California

[10:07:05.0000] <timeless>
and the system here automatically fills in (and PINS) the biller for reimbursement

[10:08:00.0000] <timeless>
and then it sanity checks that the currency (USD) matches the location (EUR/Paris)

[10:08:01.0000] <timeless>
and complains when it doesn't

[10:08:02.0000] <timeless>
grr

[10:08:03.0000] <hsivonen>
(not because of the botched address but because I didn't want to order the thing. it was added to my order in order to have a pretext to charge extra)

[10:08:04.0000] <timeless>
heh

[10:09:00.0000] <hsivonen>
conclusion: don't do business with Kagi. If you do do business with Kagi, be sure to delete extra unsolicited items from your order before checking out

[10:09:01.0000] <zewt>
and beware of godaddy, heh

[10:10:00.0000] <zewt>
they set ssl certificates to auto-renew without asking, and the only way to find out is through obscure menus

[10:10:01.0000] <timeless>
zewt: hrm

[10:10:02.0000] <timeless>
do they at least send you your new certs somehow?

[10:11:00.0000] <zewt>
they renew your cert and charge you full price ($50) without permission

[10:11:01.0000] <zewt>
http://www.jwz.org/blog/2011/09/godaddy/ another case of godaddy keepin' it classy

[10:11:02.0000] <zewt>
need to find another usable budget CA

[10:12:00.0000] <timeless>
zewt: nice

[10:12:01.0000] <timeless>
<jwz> Next time I'll go with DigiNotar, I've been hearing good things.

[10:12:02.0000] <zewt>
heh

[10:13:00.0000] <zewt>
i hear you can just get a nice universal wildcard certificate and not have to worry about certs ever again

[10:13:01.0000] <timeless>
i was surprised they allowed issuing "*.*.com" and "Foo Space Bar"

[10:13:02.0000] <zewt>
do any browsers actually accept *.com, though?

[10:13:03.0000] <timeless>
given that afaik no browser will allow more than one * in a Cert

[10:13:04.0000] <timeless>
dunno, *.com might be legal

[10:13:05.0000] <timeless>
*.*.anything is not

[10:14:00.0000] <zewt>
i know at least some ssl code explicitly rejects wildcards at that level

[10:14:01.0000] <zewt>
sad, of course, that that actually *mattered*

[10:14:02.0000] <timeless>
it's possible that *.com is only legal if <com> is appropriately listed in the ccTLD cookie file

[10:15:00.0000] <timeless>
/me doesn't really feel like generating the necessary certs to test *.com

[10:15:01.0000] <timeless>
otoh, if you don't mind a delay in payment, i'll gladly send you 5usd via paypal if you test that condition and publish your findings

[10:16:00.0000] <timeless>
(by delay, i mean somewhat significant, as i have to get my paypal accounts in order...)

[10:16:01.0000] <timeless>
/me hates passwords

[10:17:00.0000] <timeless>
http://www.jwz.org/blog/2011/09/godaddy/#comment-93938

[10:17:01.0000] <AryehGregor>
annevk5, I guess concept-range-bp-node could be the same as concept-node, yeah.  Not sure why they're different, offhand.

[11:15:00.0000] <Ms2ger>
Looks like css3-values just missed the 5-year mark

[11:19:00.0000] <timeless>
yeah well

[11:19:01.0000] <timeless>
that's hardly a big accomplishment :)

[11:46:00.0000] <gsnedders>
XMLDocument is used by Dojo to sniff whether to be case-sensitive for comparisons on not in Presto… in a buggy manner.

[11:46:01.0000] <Ms2ger>
\o>

[11:49:00.0000] <gsnedders>
Removing XMLDocument will only break stuff that relies upon case-senitivity in XHTML documents, I think, so the breakage there is minimal.

[11:49:01.0000] <gsnedders>
(Though mainly because the behaviour on the Presto code-path is already so broken.)

[13:02:00.0000] <timeless>
has anyone here played w/ QoS in the last 8 years?

[13:02:01.0000] <zewt>
only simple token bucket stuff

[13:04:00.0000] <timeless>
i was wondering if anyone knows of anything related which is actually usefully deployed

[13:04:01.0000] <timeless>
especially if any have been deployed by telco's or isp's

[13:05:00.0000] <timeless>
(I2 deployments aren't helpful)

[13:05:01.0000] <zewt>
well, comcast qos's everyone

[13:05:02.0000] <zewt>
that's what "speedboost" is

[13:05:03.0000] <timeless>
well, does it do it in a useful way?

[13:05:04.0000] <timeless>
rather

[13:05:05.0000] <timeless>
if one customer sets up 3 connections for three different purposes

[13:05:06.0000] <zewt>
my connection is about 2mb/sec for a minute or two, then tapers down to 750k/sec

[13:05:07.0000] <timeless>
can that customer influence behavior by using any QoS tag

[13:06:00.0000] <zewt>
dunno what you're asking

[13:06:01.0000] <timeless>
suppose you have 3 connections, one you'd like to download "eventually"

[13:06:02.0000] <timeless>
one you'd like to watch "in real time"

[13:06:03.0000] <timeless>
one you'd like to get "as soon as possible, but not necessarily in real time"

[13:06:04.0000] <timeless>
assume that each connection is backed by 10mb of data

[13:07:00.0000] <zewt>
a bit too specific for an ISP to do it...

[13:07:01.0000] <timeless>
is there a way for you to adjust your requests for the 3 resources such that instead of each being given "2mbps for 120s ; 750kbps"

[13:07:02.0000] <timeless>
you get something else...

[13:07:03.0000] <zewt>
well, linux qos can do that, but i don't know about it being used in any broad way

[13:07:04.0000] <timeless>
possibly "100kbps initially" on that first request

[13:08:00.0000] <timeless>
right, i believe that various QoS things are capable of doing this

[13:08:01.0000] <timeless>
what interests me is whether anyone has any useful ISPs who have any deployed QoS one can *talk* to

[13:08:02.0000] <zewt>
(bucket data based on ip/port/tcp flags/whatever)

[13:09:00.0000] <zewt>
don't know

[13:09:01.0000] <timeless>
(yes, "useful ISPs" is probably a nonsequitor)

[13:11:00.0000] <hsivonen>
was SIP designed by people whose top priority was lawful intercept or how else did they manage to make it unencrypted in practice?

[13:11:01.0000] <timeless>
hsivonen: you'd prefer that they bake in default certs? :)

[13:12:00.0000] <timeless>
i think the general idea with most things is "develop the basic protocol in a debuggable manner" "apply crypto as an independent layer"

[13:12:01.0000] <timeless>
it makes things easier to design/debug

[13:12:02.0000] <timeless>
and you just pray that someone else solves crypto for you

[13:13:00.0000] <hsivonen>
timeless: except it looks like the crypto layer didn't get applied to SIP

[13:13:01.0000] <timeless>
um

[13:13:02.0000] <timeless>
there's definitely a sips

[13:13:03.0000] <timeless>
nokia was using it

[13:13:04.0000] <timeless>
http://wiki.freeswitch.org/wiki/SIP_TLS

[13:13:05.0000] <zewt>
"lawful intercept" sure sounds like a bad euphemism for "spying"

[13:13:06.0000] <hsivonen>
if you want to turn a legacy Helsinki-area landline number to a VoiP number with Elisa, their solution uses unencrypted SIP

[13:13:07.0000] <timeless>
by that, i mean that my n900 let me make VoIP calls using sips w/ nokia as my sip provider

[13:14:00.0000] <timeless>
you can ask sp3000 to play with it since he's still there

[13:14:01.0000] <timeless>
hsivonen: that sounds more like an implementation detail that the vendor didn't pay for

[13:15:00.0000] <timeless>
paying here could just be "[x] provide SSL for SIP" which translates into "1 person week" "get Cert, configure Cert,

[13:15:01.0000] <timeless>
write instructions for using SIPS"

[13:16:00.0000] <timeless>
hrm, possibly 2 other people who translate those instructions into Fingrish or Finnish or Swedish

[13:16:01.0000] <timeless>
depending on ...

[13:16:02.0000] <timeless>
http://translate.google.com/translate?hl=en&sl=et&u=http://mipc.telegrupp.ee/paketid/elisa-sip-trunk&ei=H3JmTq3IAYS80AHHmJn-CQ&sa=X&oi=translate&ct=result&resnum=2&ved=0CCIQ7gEwAQ&prev=/search%3Fq%3Delisa%2Bsip%26hl%3Den%26biw%3D702%26bih%3D780%26prmd%3Divns

[13:16:03.0000] <timeless>
is all i can find

[13:17:00.0000] <Philip`>
timeless: Would you count things like http://www.paetec.com/products-services/data/mpls-vpn/overview.html where someone provides a VPN service that you can connect your networks to, with QoS prioritisation support?

[13:17:01.0000] <hsivonen>
timeless: Well, it can't be a coincidence that some admins want to limit SIP to a VPN

[13:18:00.0000] <hsivonen>
timeless: presumably SIP along sucks enough that it can't be allowed to cross the public Internet without a VPN

[13:18:01.0000] <timeless>
Philip`: hrm

[13:18:02.0000] <timeless>
hsivonen: well, nokia certainly didn't deploy SIPs-less for its emoployees

[13:18:03.0000] <timeless>
s/emo/em/

[13:18:04.0000] <timeless>
we got the SIPS version only :)

[13:19:00.0000] <timeless>
and we could use it freely from anywhere in the world

[13:19:01.0000] <timeless>
in fact, we were encouraged to do so

[13:19:02.0000] <hsivonen>
timeless: isn't SIPS encrypted just for signaling? what about the speech payload?

[13:19:03.0000] <timeless>
(the same more or less applies to RIM's solution, the underlying details i don't know)

[13:19:04.0000] <Philip`>
(I'd guess QoS is pretty useless unless it's end-to-end, and it's really hard getting multiple providers to cooperate, and if you want a single provider end-to-end network then it seems more likely to be an MPLS VPN than plain old IP, as far as I'm aware)

[13:19:05.0000] <timeless>
hsivonen: dunno, i don't have a working SIPS provider anymore, talk to sp3000

[13:20:00.0000] <timeless>
Philip`: well

[13:20:01.0000] <timeless>
lemme outline a use case

[13:20:02.0000] <timeless>
3 users set up connections at a home in NAm

[13:20:03.0000] <hsivonen>
timeless: according to the wiki page you linked to, SIPS is for signaling

[13:20:04.0000] <timeless>
they can choose from Rogers, Bell, AT&T, and a couple of others

[13:20:05.0000] <hsivonen>
timeless: you also need SRTP if you want encrypted payloads

[13:20:06.0000] <timeless>
hsivonen: i'd certainly hope that the nokia deployed thing did the right thing

[13:21:00.0000] <timeless>
if not, well...

[13:21:01.0000] <hsivonen>
timeless: so if the other end of your call doesn't jump through all these hoops, you end up having to use the least encrypted mode that works

[13:21:02.0000] <timeless>
but really, i don't have logs of my sips initiated sessions

[13:21:03.0000] <timeless>
hsivonen: well

[13:21:04.0000] <timeless>
in our case, typically it was SIPS => POTS

[13:21:05.0000] <timeless>
which meant we were supposed to be encrypted between our n900 and the POTS gateway

[13:22:00.0000] <timeless>
which then hopefully was "

[13:22:01.0000] <timeless>
magically secure"

[13:22:02.0000] <timeless>
along the POTS path

[13:22:03.0000] <timeless>
(government wiretapping included at no extra charge)

[13:22:04.0000] <hsivonen>
timeless: Elisa says that if you also use Elisa as your ISP, the SIP hop is as secure as the POTS part

[13:22:05.0000] <timeless>
(and national laws against anyone else doing the wiretapping...)

[13:22:06.0000] <hsivonen>
timeless: but if you don't use Elisa as your ISP, you don't know (a priori) where the SIP hop travels

[13:23:00.0000] <timeless>
hsivonen: this is Elisa DSL?

[13:23:01.0000] <timeless>
or Elisa Cellular?

[13:23:02.0000] <timeless>
elisa doesn't do Cable, right?

[13:23:03.0000] <hsivonen>
timeless: DSL or fiber

[13:23:04.0000] <timeless>
and presumably they aren't talking about SIP while on <someone-else's-wifi>

[13:24:00.0000] <hsivonen>
timeless: it seems they do cable now, too, at least in some locations

[13:24:01.0000] <timeless>
joy

[13:24:02.0000] <timeless>
so they're like Rogers here

[13:24:03.0000] <timeless>
generally speaking, Cable = shared local link

[13:24:04.0000] <hsivonen>
timeless: (well, their subsidiary does)

[13:25:00.0000] <hsivonen>
also, SIP is terribly brittle compared to Skype

[13:25:01.0000] <timeless>
/me ponders

[13:25:02.0000] <timeless>
I've used Nokia SIPS, Skype, Gtalk, and BlackBerry MVS to talk to my parents

[13:25:03.0000] <timeless>
it turns out they weren't particularly impressed w/ the quality of some of those

[13:26:00.0000] <hsivonen>
as in, the Elisa-provided SIP box didn't work with network arrangements than Skype was fine with

[13:26:01.0000] <timeless>
but they didn't give me enough pushback for me to know about it

[13:26:02.0000] <timeless>
oh

[13:26:03.0000] <timeless>
/me wouldn't call that brittle

[13:26:04.0000] <timeless>
brittle typically means "likely to break after/in deployment"

[13:26:05.0000] <hsivonen>
timeless: well, picky

[13:26:06.0000] <timeless>
yeah, picky is a better word

[13:27:00.0000] <timeless>
/me is still trying to think of the more correct term but has blanked

[13:27:01.0000] <timeless>
anyway, Skype was designed for all sorts of rude network topographies

[13:28:00.0000] <timeless>
("robust")

[13:28:01.0000] <hsivonen>
well, it sucks that the IETF protocol is neither secure nor robust

[13:28:02.0000] <timeless>
being robust tends to require overengineering and additional endpoints

[13:29:00.0000] <hsivonen>
the only redeeming factors is federation and open spec

[13:29:01.0000] <timeless>
/me thinks skype may have resolved some of those points recently

[13:29:02.0000] <hsivonen>
but federation doesn't really matter when SIP is only used together with a POTS bridge

[13:31:00.0000] <timeless>
right

[13:32:00.0000] <timeless>
iirc i was able to use nokia's sips to call zakim⊙wo

[13:32:01.0000] <hsivonen>
timeless: fwiw, AFAICT, all the three major operators now offer fiber, cable, DSL and 3G

[13:32:02.0000] <timeless>
which was nice, i.e. i had both POTS bridging and federation

[13:33:00.0000] <hsivonen>
though curiously, their regulatory statuses aren't symmetrical

[13:33:01.0000] <timeless>
(technically Skype has both)

[13:33:02.0000] <timeless>
lol

[13:33:03.0000] <timeless>
this is Elisa, Sonera, Welho, right?

[13:33:04.0000] <hsivonen>
timeless: right

[13:33:05.0000] <timeless>
Welho is treated as a monopoly and the others aren't?

[13:34:00.0000] <hsivonen>
timeless: so Elisa has to rent their phone copper to everyone but Welho doesn't need to rent their fiber

[13:34:01.0000] <timeless>
nice

[13:34:02.0000] <hsivonen>
timeless: dunno if Welho is required to rent their cable

[13:34:03.0000] <timeless>
yeah, i haven't quite figured out the story of the operators here

[13:34:04.0000] <hsivonen>
(I called the regulator to find out that Welho isn't required to rent out their fiber)

[13:35:00.0000] <timeless>
we have Bell and Rogers as the original Phone/Cable providers

[13:35:01.0000] <timeless>
hsivonen: nice

[13:35:02.0000] <timeless>
/me remembers calling the US Census Bureau from Finland to ask about a small town

[13:36:00.0000] <timeless>
http://maps.google.com/maps/place?q=Guam,+Missouri,+United+States&hl=en&ftid=0x88786da513501111:0xd3f08770817ac3c8

[13:38:00.0000] <timeless>
ah, http://en.wikipedia.org/wiki/Guam,_Missouri is the relevant page

[13:38:01.0000] <timeless>
hsivonen: wanna guess why we looked that one up? :)

[13:39:00.0000] <timeless>
http://translate.google.com/translate?hl=en&sl=fi&u=http://www.elisa.fi/saunalahti/asiakaspalvelu/740/saunalahti-nettipuhelin/10100/kaytto-voip-tai-lankapuhelimella/&ei=f3JmTu2vOMG80AGe_OSoCg&sa=X&oi=translate&ct=result&resnum=1&ved=0CBsQ7gEwAA&prev=/search%3Fq%3Dsip%2Bsite:elisa.fi%26hl%3Den%26biw%3D1440%26bih%3D809%26prmd%3Divns

[13:39:01.0000] <timeless>
seems like it was your SIP thing..

[13:40:00.0000] <timeless>
oh joy

[13:40:01.0000] <hsivonen>
timeless: you thought Guam, Missouri was inconsistent data?

[13:40:02.0000] <timeless>
it's always nice to see devices that ask you to *confirm* your password

[13:40:03.0000] <timeless>
hsivonen: the n900 original firmware had two entries for Guam

[13:40:04.0000] <timeless>
one was for Guam, USA

[13:41:00.0000] <hsivonen>
timeless: that's a different SIP service.

[13:41:01.0000] <timeless>
we wanted to confirm that no one in their right mind would want to have that Guam listed in their world map

[13:42:00.0000] <timeless>
so, one of the steps was determining a population :)

[13:48:00.0000] <timeless>
hsivonen: i like how some of them have you entering an IP into a field

[13:48:01.0000] <timeless>
Outbound Proxy: 195.197.95.4

[13:56:00.0000] <timeless>
hsivonen: speaking of which

[13:57:00.0000] <timeless>
do you have your elisa-sip service, or are you just researching?

[13:57:01.0000] <timeless>
http://www.w3.org/2006/tools/wiki/Zakim-SIP

[13:58:00.0000] <timeless>
i'm wondering if you can actually call zakim  (zakim⊙vwo) using it

[13:59:00.0000] <hsivonen>
timeless: the would-be user for the SIP service was my grandmother, but she died before my dad and I got the SIP thing working, so we returned it without getting it to work

[13:59:01.0000] <timeless>
oh, sorry to hear that

[14:01:00.0000] <hsivonen>
anyway, I learned that there now exists at least one building in Helsinki that doesn't have phone copper

[14:02:00.0000] <hsivonen>
which meant that the phone options were GSM or VoIP

[14:05:00.0000] <hsivonen>
throughout the episode, Elisa's customer service was terrible

[14:06:00.0000] <timeless>
bad customer service in Finland

[14:06:01.0000] <timeless>
i don't believe it

[14:06:02.0000] <timeless>
oh wait, i lived there for 5 years

[14:06:03.0000] <timeless>
:)

[14:06:04.0000] <timeless>
good customer service is generally unheard of there :)

[14:06:05.0000] <hsivonen>
well, Welho's customer service was fine, when I eventually arranged Welho's fiber for my grandfather for the same apartment

[14:07:00.0000] <timeless>
fine!=good fwiw

[14:07:01.0000] <timeless>
although `fine` is a typical finnish description

[14:07:02.0000] <timeless>
fine is somewhere between a D+ and a C

[14:07:03.0000] <hsivonen>
well, the Welho people answered all my questions and AFAICT answered them correctly and fast

[14:08:00.0000] <timeless>
did they suggest answers to questions you didn't think to ask but would have needed to ask in later round trips?

[14:08:01.0000] <hsivonen>
whereas the Elisa people didn't answer or answered incorrectly or were unreasonably slow

[14:08:02.0000] <timeless>
my experiences w/ elisa have been bad

[14:09:00.0000] <timeless>
and they sent me another bill recently

[14:09:01.0000] <timeless>
/me grumbles

[14:09:02.0000] <hsivonen>
timeless: no, but there isn't really much to ask if you are buying Internet connectivity itself from a company that owns the fiber

[14:10:00.0000] <timeless>
/me nods

[14:10:01.0000] <timeless>
this mostly applies to cases where you end up doing 10 round trips where there were some questions they could have asked or things they could have told you to save you round trips

[14:11:00.0000] <timeless>
giving you the list of hostnames for all possible fields and suggested alternate ip addresses in case your device sucks

[14:11:01.0000] <timeless>
are ways of doing that

[14:11:02.0000] <timeless>
(or offering to do that, instead of just flooding you with them)

[14:12:00.0000] <hsivonen>
fwiw, our apartment has Elisa's fiber, and purchasing that was uneventful, because, again, there's nothing special about buying just connectivity from the company that own the fiber

[14:12:01.0000] <timeless>
how long did it take for that?

[14:12:02.0000] <hsivonen>
I don't remember

[14:12:03.0000] <timeless>
w/ rogers it sounds like it can take a week for a guy to come to "install" your cable

[14:13:00.0000] <hsivonen>
with Welho, both fiber and cable are instant-on

[14:13:01.0000] <hsivonen>
I can't recall if Elisa's fiber was instant or took a day or so

[14:13:02.0000] <timeless>
"bring your own router/box"?

[14:13:03.0000] <timeless>
for my Elisa DSL, they had to schedule a guy to come

[14:13:04.0000] <timeless>
i think he did some line tests (since the building is rather old, that isn't inappropriate)

[14:13:05.0000] <hsivonen>
timeless: Ethernet in the apartment

[14:14:00.0000] <timeless>
and basically deployed a filter or two and plugged in a router

[14:14:01.0000] <hsivonen>
timeless: so own router required if more than one device

[14:14:02.0000] <timeless>
ethernet in apartment? nice

[14:14:03.0000] <timeless>
so no stupid extra box

[14:15:00.0000] <timeless>
i think the strange thing w/ finland is that the classic phone system doesn't use typical RJ- connectors

[14:15:01.0000] <timeless>
http://en.wikipedia.org/wiki/File:Telefonkontakt.jpg

[14:15:02.0000] <hsivonen>
our apartment and my grandfather's apartment have the same arrangement: there's a electricity/telecom cabinet in the apartment that has an RJ-45 to the outside world and a bunch of RJ-45 sockets that connect to wall outlets around the apartment

[14:16:00.0000] <hsivonen>
so you either use a short Ethernet cable to connect the outside world to the wall socket of your choice

[14:17:00.0000] <hsivonen>
or you put a router in the cabinet (which also has electricity sockets for this precise purpose) and connect the router to several wall sockets

[14:19:00.0000] <hsivonen>
timeless: our telecom cabinet has also outgoing RJ-11

[14:20:00.0000] <timeless>
is there anything that actually talks about the rj-11 3prog thing used in finland?

[14:20:01.0000] <timeless>
the wikipedia page just says that it's a national standard

[14:20:02.0000] <timeless>
but no explanation of why

[14:20:03.0000] <hsivonen>
timeless: I haven't bothered to find out if there's actually a wire behind RJ-11

[14:20:04.0000] <timeless>
lol

[14:21:00.0000] <hsivonen>
timeless: the 3-pronged thing is ancient since at least the 1950s

[14:21:01.0000] <hsivonen>
timeless: dunno where it came from

[14:21:02.0000] <hsivonen>
our apartment doesn't have the 3-pronged socket anywhere

[14:21:03.0000] <hsivonen>
and the wall sockets are RJ-45

[14:22:00.0000] <hsivonen>
so I suppose if one bought service to the outgoing RJ-11 (if there's wire!), one would have to use the RJ-45 cabling from there onwards

[14:26:00.0000] <timeless>
http://en.wikipedia.org/wiki/BS_6312 is distressing

[14:26:01.0000] <timeless>
(especially: Connector on phone)

[14:28:00.0000] <hsivonen>
timeless: hooray pointlessly slightly different standard

[14:28:01.0000] <timeless>
yep

[14:30:00.0000] <timeless>
oh awesome

[14:30:01.0000] <timeless>
check out IPlate => BT Broadband Accelerator

[14:30:02.0000] <zewt>
heh uk wiring is pretty hilarious

[14:30:03.0000] <zewt>
i can't help but laugh whenever i see uk power plugs

[14:31:00.0000] <timeless>
i tend to cry

[14:31:01.0000] <zewt>
i don't have to use them so

[14:31:02.0000] <timeless>
i have 1 generic => UK adapter, and 1 fairly standard laptop => UK cable

[14:32:00.0000] <hsivonen>
the design of the UK electricity plug is mind-blowing

[14:33:00.0000] <hsivonen>
it's not just different shape or different current/voltage. the electrical design is different

[14:33:01.0000] <hsivonen>
the wiring topology inside apartments is different

[14:34:00.0000] <hsivonen>
and the fuses are in different places

[14:35:00.0000] <timeless>
http://en.wikipedia.org/wiki/AC_power_plugs_and_sockets is only 34 printed pages :)

[14:35:01.0000] <timeless>
hsivonen: grr

[14:35:02.0000] <zewt>
what we need

[14:35:03.0000] <zewt>
is for one country to take over the whole world for one year

[14:35:04.0000] <timeless>
did i mention that when my movers came to packet my apartment in Helsinki, they packed my spare Fuses?

[14:35:05.0000] <timeless>
...

[14:35:06.0000] <timeless>
and then a fuse blew

[14:35:07.0000] <zewt>
just long enough to force everyone onto the same power standards, paper standards, and so on

[14:35:08.0000] <zewt>
then topple it and go back

[14:36:00.0000] <timeless>
zewt: en.wikipedia.org/wiki/The_Mouse_That_Roared  ?

[14:36:01.0000] <zewt>
my bookshelf won't fit A4 books :(

[14:37:00.0000] <timeless>
heh

[14:38:00.0000] <zewt>
also it's been over 48 hours, isn't it time for microusb to be declared obsolete and yet another usb connector to come into fashion

[14:38:01.0000] <gsnedders>
hsivonen: Well, the aim with the wiring was to limit the amount of wires needed within houses, AFAIK

[14:39:00.0000] <hsivonen>
timeless: hah. fortunately, this apartment doesn't need spare fuses

[14:39:01.0000] <timeless>
hsivonen: the fuses arrived here in Toronto

[14:39:02.0000] <zewt>
i'd sooner not live somewhere old enough to not have breakers

[14:39:03.0000] <timeless>
along with assorted other unhelpful items

[14:39:04.0000] <hsivonen>
timeless: are they compatible with what you need there?

[14:39:05.0000] <timeless>
including a classic-finnish-key (actually, two!)

[14:40:00.0000] <timeless>
and a couple of finnish light bulbs

[14:40:01.0000] <timeless>
hsivonen: of course not

[14:40:02.0000] <timeless>
the civilized world uses circuit breakers!

[14:40:03.0000] <hsivonen>
timeless: does Canada have different light bulb sockets?

[14:40:04.0000] <timeless>
hsivonen: voltage issue

[14:40:05.0000] <zewt>
canadians see a different spectrum of light

[14:40:06.0000] <timeless>
Canada is on the NAm standard

[14:40:07.0000] <timeless>
Finland is on the EU standard

[14:41:00.0000] <hsivonen>
yay standards

[14:41:01.0000] <timeless>
and yes, at least using a NAm light bulb in my Finnish apartment blew a fuse

[14:41:02.0000] <timeless>
actually, iirc i managed to blow two fuses that way

[14:41:03.0000] <timeless>
(And a pair of bulbs?)

[14:41:04.0000] <timeless>
hsivonen: exactly!

[14:41:05.0000] <gsnedders>
(in the UK it is standard to have circuit breakers and fuses in each socket, not just in the socket, which is advantageous insofar as each socket can be fused for a maximum more suited to the specific advice)

[14:41:06.0000] <Philip`>
zewt: Surely it'd take longer than a year for that country to migrate all the infrastructure to a new standard; a better solution would be to have a war and destroy every country (preferably one at a time, not all at once) so they have to rebuild and then they might as well rebuild with a universal standard that was previously agreed

[14:41:07.0000] <hsivonen>
timeless: well, new buildings in Finland are fuseless

[14:42:00.0000] <timeless>
hsivonen: yeah, that helped me a lot...

[14:42:01.0000] <timeless>
what's your definition of new btw?

[14:42:02.0000] <hsivonen>
(as in when a "fuse" "blows", you just flip a switch back)

[14:42:03.0000] <timeless>
hsivonen: that's a "circuit breaker" (see above for civilized world)

[14:42:04.0000] <hsivonen>
timeless: I don't know what the cut-off is. 2001 is new enough and 1970s is still old

[14:42:05.0000] <timeless>
http://en.wikipedia.org/wiki/Circuit_breaker

[14:43:00.0000] <gsnedders>
I don't know how many houses in the UK still have fuses at the entrance point to the house — most have circuit breakers AFAIK.

[14:43:01.0000] <timeless>
and yeah, finland is weird, you call it "fuseless" instead of having a word to actually describe what's going on

[14:43:02.0000] <timeless>
yay broken languages

[14:43:03.0000] <hsivonen>
gsnedders: the mind-blowing thing is the wiring topology and the fuses in the electrical plugs

[14:43:04.0000] <timeless>
gsnedders: i remember seeing those on a visit or two

[14:43:05.0000] <zewt>
we have breakers, but they're in the basement, where we have to go outside, through the bulkhead, around the basement and up a spiderweb-infested stairway-to-nothing

[14:44:00.0000] <zewt>
so please don't trip the breaker

[14:44:01.0000] <timeless>
ouch

[14:44:02.0000] <timeless>
the breaker in my place is in the bedroom

[14:44:03.0000] <gsnedders>
hsivonen: Well, with a ring circuit you can't have one thing in a circuit box per socket, because where the circuit box is you have no concept of sockets yet.

[14:44:04.0000] <zewt>
also no lights once you're on the stairway

[14:44:05.0000] <timeless>
zewt: of course

[14:44:06.0000] <zewt>
which is probably for the best, so you don't know how many spiderwebs you're going through

[14:44:07.0000] <gsnedders>
hsivonen: But the wiring topology saves wire, which post-WW2 was a big deal, given the amount that had to be rebuilt.

[14:45:00.0000] <timeless>
gsnedders: but to do wiring work do you have to kill the "mains power"?

[14:45:01.0000] <timeless>
Philip`: that's more or less what we did around 1944

[14:46:00.0000] <gsnedders>
timeless: You just kill whatever ring you're working on, or kill it at the socket-level if you're not touching the ring itself.

[14:46:01.0000] <hsivonen>
timeless: it turns out that there is a Finnish word for circuit breaker but I had never heard it (I had heard a misnomer that I realized was enough of a misnomer than I didn't try to translate it directly into English)

[14:46:02.0000] <gsnedders>
Most British houses have multiple rings, AFAIK

[14:46:03.0000] <timeless>
hsivonen: interesting

[14:46:04.0000] <timeless>
not surprising, but interesting

[14:46:05.0000] <timeless>
i mentioned that because you're not the first person to use fuseless in conversation w/ me when describing modern finnish housing

[14:47:00.0000] <timeless>
(and then power the ring)

[14:47:01.0000] <timeless>
gsnedders: so... whenever you want to add something to a ring, you kill the ring, pick the closest point along the ring, and splice into the ring?

[14:48:00.0000] <gsnedders>
timeless: Pretty much.

[14:48:01.0000] <timeless>
interesting

[14:48:02.0000] <timeless>
/me isn't really sure that it's much different from how things work in NAm

[14:49:00.0000] <timeless>
practically speaking, your ring sounds fairly close to a NAm circuit

[14:49:01.0000] <timeless>
and given the basic definition of circuit...

[14:49:02.0000] <gsnedders>
Got any link for that? Wikipedia doesn't quickly find anything for that.

[14:52:00.0000] <timeless>
try http://en.wikipedia.org/wiki/Electrical_wiring_in_North_America

[14:52:01.0000] <timeless>
grr, an intranet site killed my web browser

[14:55:00.0000] <timeless>
Philip`: iirc you asked about QoS VPN

[14:55:01.0000] <timeless>
i think the answer is that it doesn't satisfy my requirements

[14:55:02.0000] <timeless>
i could set up a local QoS system for my own testing if i wanted to

[14:56:00.0000] <timeless>
but in order to do something useful, i'd want to be able to talk to a vendor

[15:00:00.0000] <Philip`>
timeless: The idea is that you talk to a vendor who sets you up a VPN (running entirely on their physical network, not over the internet) which does the useful things, though the idea is also that you're an enterprise network with large amounts of money, as far as I'm aware

[15:01:00.0000] <timeless>
Philip`: oh, i can understand it

[15:01:01.0000] <timeless>
but it doesn't really help me much

[15:01:02.0000] <timeless>
lemme pastebin a problem space

[15:02:00.0000] <Philip`>
I imagine it's hard to do QoS over the internet since the internet can't tell separate customers apart, and everyone would set all of their own packets to 'highest priority'

[15:02:01.0000] <timeless>
http://pastebin.mozilla.org/1324125

[15:03:00.0000] <timeless>
yeah, QoS runs into prisoner problems

[15:03:01.0000] <timeless>
http://en.wikipedia.org/wiki/Prisoner%27s_dilemma

[15:04:00.0000] <timeless>
i think in theory it might be possible to do slightly better than that

[15:05:00.0000] <timeless>
in cases where you have an enforcer and can ask a question and be given a "no"

[15:05:01.0000] <timeless>
at least when you deal w/ <prisoner=end user> <guard=ISP which wants to be mean anyway>

[15:11:00.0000] <timeless>
using Comcast/AT&T as examples

[15:11:01.0000] <timeless>
they generally tend to give you an initial burst and then taper you off

[15:11:02.0000] <timeless>
but they could easily choose not to do that if you (individual customer) included some QoS

[15:11:03.0000] <timeless>
instead they could try to honor it up to a quota and penalize anything that isn't QoS'd

[15:13:00.0000] <timeless>
> As of 1 July 2008, wall outlets for Type E (French 2-pin, female earth) are permitted for installations in Denmark.[22] This was done because no electrical equipment sold to private users is equipped with a Type K plug, and to break the monopoly of Lauritz Knudsen — the only company making Type K sockets and plugs.

[15:13:01.0000] <timeless>
/me chuckles

[15:14:00.0000] <timeless>
hsivonen: i'm glad to see one of Finland's neighbors caved to basic economics

[15:15:00.0000] <timeless>
> Sockets for the Schuko Type F will not be permitted. The reason is that a large number of currently used Danish plugs (coincidentally made by the afore mentioned Lauritz Knudsen monopoly) will jam when inserted into a Schuko socket. This may cause damage to the socket. It may also result in a bad connection of the pins, with resultant risk of overheating and fire. Broken Type F sockets are often seen in German hotels visited by Danes

[15:15:01.0000] <timeless>
/me rotfl

[15:20:00.0000] <zcorpan>
wait, the orientation information isn't on the event? when it should be a no-brainer to not fire an event on registration...

[15:20:01.0000] <Philip`>
timeless: Ah - intentional throttling of connections sounds different to what I'd usually assume QoS to be (i.e. unequal prioritisation of packets when congestion occurs)

[15:21:00.0000] <zewt>
at least in android's webkit, on a quick look: doc->dispatchWindowEvent(Event::create(eventNames().orientationchangeEvent, false, false));

[15:21:01.0000] <zewt>
don't know about iOS

[15:21:02.0000] <zewt>
(seems like a good argument for not putting info inside the event itself unless there's a specific reason to need to know what the state was at the time the event was queued)

[15:22:00.0000] <timeless>
zewt: so...

[15:22:01.0000] <zcorpan>
hmm looks like the spec has the information on the events

[15:22:02.0000] <timeless>
the problem is that some things require resources to retrieve

[15:22:03.0000] <timeless>
e.g. battery crud

[15:22:04.0000] <timeless>
or orientation

[15:22:05.0000] <zewt>
how does that matter here?

[15:22:06.0000] <timeless>
the assumption i had was that one would calculate those as needed and fire the information when available

[15:22:07.0000] <zewt>
putting it in the event would be even worse in that case, since you'd be computing it even if it's not needed

[15:23:00.0000] <zewt>
(i havn't looked at this spec; i'm assuming it preserves window.orientation, since discarding what's already widely-implemented would be insane)

[15:23:01.0000] <zcorpan>
does it matter if the author asks for it by registering a listener or by getting a property?

[15:23:02.0000] <timeless>
zcorpan: kinda

[15:23:03.0000] <timeless>
in the case of GPS

[15:23:04.0000] <timeless>
the time to get a location is 10minutes

[15:24:00.0000] <timeless>
so if the author asks for it by getting a property, the app hangs for 10minutes

[15:24:01.0000] <timeless>
which isn't really "ok"

[15:24:02.0000] <zewt>
(i'm only referring to orientation; gps is a different beast entirely)

[15:24:03.0000] <timeless>
i'm not sure about orientation, but it wouldn't shock me if the stall was semi significant

[15:24:04.0000] <timeless>
would 2ms bother you?

[15:25:00.0000] <zewt>
yes, but there should be no delay at all--the OS always knows the orientation already

[15:25:01.0000] <zcorpan>
timeless: ok, so for cases that would take a long time you would want an async api with a method that has a callback or causes an event to fire when it's available

[15:25:02.0000] <zewt>
that's persistent state that phones (at least) need to keep track of all the time (it's not a simple matter of atomically peeking at an accelerometer)

[15:26:00.0000] <zewt>
(at least on Android--i happen to have looked over the orientation-state-handling code in android the other day--no clue about iOS)

[15:26:01.0000] <zewt>
(rather, i'm sure iOS is the same but can't see the code to say for certain)

[15:26:02.0000] <zewt>
afk

[15:29:00.0000] <timeless>
the battery case is amusing

[15:29:01.0000] <timeless>
the nokia devices i worked on didn't know their power level while charging

[15:29:02.0000] <timeless>
they knew they were plugged in

[15:29:03.0000] <timeless>
but they couldn't tell you how much was in the battery

[15:29:04.0000] <timeless>
and to make things more exciting, the cpu was fully capable of consuming more power than the charger was capable of providing

[15:30:00.0000] <timeless>
i.e. one could run out of power while plugged into a/c :)

[15:30:01.0000] <timeless>
well, to be fair, that wasn't precisely the 'cpu' so much as 'the complete device package', but..

[15:31:00.0000] <timeless>
zewt: was your doc->dispatch... thing dispatching the genuine event or a synthetic one?

[15:34:00.0000] <timeless>
interesting

[15:34:01.0000] <timeless>
EV-DO is using QoS

[15:35:00.0000] <zewt>
WebCore/page/Frame.cpp Frame::sendOrientationChangeEvent

[15:35:01.0000] <zewt>
looks like the place where the engine fires the real event

[15:35:02.0000] <zewt>
not a webkit expert, though from what i've seen of webkit it usually looks like fairly straightforward code

[15:36:00.0000] <zewt>
i don't think any chargers can actually tell battery level while charging

[15:36:01.0000] <zewt>
only estimate

[15:37:00.0000] <timeless>
laptops seem to give relatively accurate percentages

[15:37:01.0000] <timeless>
i'm not sure how that works

[15:37:02.0000] <zewt>
maybe they charge each cell separately?

[15:37:03.0000] <zewt>
so it can measure the levels of cells that aren't under charge

[15:37:04.0000] <zewt>
(no idea, just throwing darts)

[15:38:00.0000] <timeless>
maybe, certainly ibm (lenovo?) thinkpads used to show icons which might actually represent individual cells

[15:38:01.0000] <zewt>
of course, measuring the charge level of a li-ion battery is hard no matter what

[15:38:02.0000] <timeless>
/me nods

[15:39:00.0000] <timeless>
but laptops generally give a percentage reading which is much better than 16%

[15:39:01.0000] <zewt>
i don't know anything about high-end batteries, i've dealt with firmware for simple AA-cell charging

[15:39:02.0000] <timeless>
(while charging)

[15:39:03.0000] <timeless>
now, they might be cheating heavily

[15:39:04.0000] <zewt>
presumably there's more tech involved in expensive laptop batteries

[15:39:05.0000] <timeless>
i think that laptops can estimate reasonably well how much power they're consuming

[15:40:00.0000] <timeless>
and can know how much power they're getting from a/c

[15:40:01.0000] <zewt>
well, they could just measure it, i'd imagine

[15:40:02.0000] <timeless>
and if they know how much was in the battery before charging, they can do math to get reasonable numbers...

[15:40:03.0000] <zewt>
my nexus s likes to use as much power as it can draw, it's pretty great to be in an airport and unable to use my phone because if i do it won't charge for the flight, heh

[15:41:00.0000] <timeless>
cute

[15:41:01.0000] <zewt>
i think at the time i was on a 500mA adapter though, should be better now that i'm on a 1A one

[15:41:02.0000] <timeless>
yeah

[15:41:03.0000] <zewt>
the high-power-adapter situation is pathetic

[15:41:04.0000] <timeless>
the nokia charges are 1.2A

[15:41:05.0000] <timeless>
whereas usb chargers are .1 .. .5A

[15:41:06.0000] <zewt>
tons of "1A" usb wall adapters that don't actually short the data pins to enable it

[15:41:07.0000] <timeless>
depending on whether your device is smart or stupid

[15:41:08.0000] <zewt>
usb can do up to 1.5A

[15:42:00.0000] <zewt>
if they don't enable high-power charging you're stuck at 500mA

[15:42:01.0000] <timeless>
i'm not sure why the nokia chargers only did 1.2 instead of 1.5

[15:42:02.0000] <zewt>
well, the usb spec says 1.5A (iirc, i think it was 1.8A then dropped to 1.5A for some reason), but lots of adapters only say 1A

[15:43:00.0000] <zewt>
recently i just grabbed http://www.amazon.com/dp/B003ZBZ64Q so i don't have to care

[15:44:00.0000] <Philip`>
My laptop gives capacity in mAh with a resolution of seemingly at least 50mAh, whether charging or discharging, and if it's running on battery it gives the discharge rate in mA with a resolution of at least 3mA (else it gives the charge rate instead)

[15:44:01.0000] <timeless>
ouch

[15:44:02.0000] <timeless>
Philip`: nice

[15:44:03.0000] <Philip`>
(via /proc/acpi/battery/BAT1/state)

[15:45:00.0000] <Philip`>
and it's a pretty cheap laptop so I presume anything that's not very old can do this

[15:46:00.0000] <Philip`>
(No idea whether it's all based on actual measurement or if it integrates current to get charge or whatever, though)

[15:47:00.0000] <Philip`>
(but it seems accurate enough)


2011-09-07
[19:34:00.0000] <TabAtkins>
roc: Thank you for reviving the CSSOM sizing thread!

[23:38:00.0000] <hsivonen>
hooray. W3C list search form now uses HTML5 form features

[23:49:00.0000] <MikeSmith>
hsivonen: oh, cool

[23:49:01.0000] <MikeSmith>
/me didn't know

[23:49:02.0000] <MikeSmith>
hsivonen: was there an announcement somewhere?

[23:49:03.0000] <MikeSmith>
or you just noticed when you went to use it?

[23:50:00.0000] <hsivonen>
MikeSmith: I just noticed when using it

[23:50:01.0000] <MikeSmith>
ok

[02:03:00.0000] <annevk>
oh that's pretty cool, it uses <datalist>

[02:03:01.0000] <woef>
"and that is, in principle, independently distributable or reusable, e.g. in syndication."

[02:03:02.0000] <woef>
(article spec)

[02:04:00.0000] <woef>
reusable as in "reusable in different sites than your own"?

[04:19:00.0000] <MikeSmith>
hsivonen: that surrogate-pair validator bug might be a dupe of one already reported

[04:20:00.0000] <MikeSmith>
I vaguely recall something

[04:20:01.0000] <MikeSmith>
oh

[04:20:02.0000] <MikeSmith>
or maybe not

[04:20:03.0000] <MikeSmith>
I don't remember seeing the "Unmatched low surrogate" error message

[05:59:00.0000] <MikeSmith>
latest gsnedders tweet is solid gold

[05:59:01.0000] <MikeSmith>
but it reminds me that it seems like he's not been saying much here lately

[06:00:00.0000] <MikeSmith>
so maybe he's finally got his priorities right

[06:02:00.0000] <gsnedders>
MikeSmith: I'm on holiday.

[06:02:01.0000] <MikeSmith>
ah

[06:02:02.0000] <MikeSmith>
well, keep that holiday going as long as you can

[06:02:03.0000] <gsnedders>
MikeSmith: And when I've not been, I've been deeper and deeper in ES land

[06:02:04.0000] <MikeSmith>
for your own sake

[06:02:05.0000] <MikeSmith>
ah

[06:02:06.0000] <MikeSmith>
well, condolensences

[06:03:00.0000] <MikeSmith>
I had hoped that you were deeper into... something else

[06:53:00.0000] <annevk>
maybe we should just do away with boundary points?

[06:53:01.0000] <annevk>
and call out start node / start offset / end node / end offset out explicitly

[08:32:00.0000] <AryehGregor>
Wow, this looks really cool in Firefox 8.0a2: http://aryeh.name/tmp/editing/conformancetest/runtest.html

[08:32:01.0000] <AryehGregor>
You actually see all the tests run.

[08:32:02.0000] <AryehGregor>
For some reason, I'm not sure why.

[08:32:03.0000] <AryehGregor>
It probably makes it take longer.  It didn't used to do that.

[08:33:00.0000] <annevk>
that's some tests right there :)

[08:34:00.0000] <annevk>
AryehGregor, while you are here, I hope very much you will review my changes to Ranges at some point

[08:34:01.0000] <AryehGregor>
I definitely will.

[08:34:02.0000] <AryehGregor>
What changes have you made so far?

[08:35:00.0000] <annevk>
I guess the major changes have been integrating mutation handling into concept-CD-replace, concept-node-insert, and concept-node-remove

[08:35:01.0000] <annevk>
still have to do splitText

[08:35:02.0000] <annevk>
I also renamed some concepts

[08:35:03.0000] <AryehGregor>
Sounds great.

[08:35:04.0000] <AryehGregor>
I'll take a look soon, maybe today.

[08:36:00.0000] <AryehGregor>
jgraham, is there some way to suppress the "expected true got false" message?  Sometimes it's useless and/or confusing.

[08:37:00.0000] <gsnedders>
AryehGregor: How is it useless/confusing?

[08:37:01.0000] <AryehGregor>
gsnedders, Body has extra attributes! Element node <body bgcolor="#00FFFF"> with 20 children expected 0 got 1

[08:37:02.0000] <AryehGregor>
Or: Body has extra attributes! Element node <body bgcolor="#00FFFF"> with 20 children expected true got false

[08:37:03.0000] <AryehGregor>
"Expected true got false" is almost always useless, if not confusing.

[08:38:00.0000] <AryehGregor>
I want something like just:  Body has extra attributes! <body bgcolor="#00FFFF">

[08:38:01.0000] <gsnedders>
AryehGregor: How are you computing the value you call assertTrue with?

[08:38:02.0000] <AryehGregor>
The "Element node" and "with 20 children" aren't the harness' fault, but "expected X got Y" is.

[08:38:03.0000] <AryehGregor>
gsnedders, originally I did assert_equals(document.body.attributes.length, 0, ...).

[08:39:00.0000] <AryehGregor>
Thus "expected 0 got 1".

[08:39:01.0000] <AryehGregor>
But that's not helpful at all.

[08:39:02.0000] <zcorpan>
why is it not helpful?

[08:39:03.0000] <gsnedders>
AryehGregor: I'd much rather know how many attributes it was finding.

[08:39:04.0000] <zewt>
... isn't that "1"?

[08:39:05.0000] <AryehGregor>
What does it help?  I already print the actual <body> element with the attributes.

[08:39:06.0000] <gsnedders>
AryehGregor: Just telling me that it doesn't have the expected value doesnt' help me.

[08:40:00.0000] <zewt>
er, read lines backwards

[08:40:01.0000] <AryehGregor>
Did you miss the part where it prints out '<body bgcolor="#00FFFF">'?

[08:40:02.0000] <gsnedders>
AryehGregor: Then I have to count them, if there are many.

[08:40:03.0000] <AryehGregor>
Why should you care?  There are supposed to be zero.

[08:40:04.0000] <gsnedders>
AryehGregor: I didn't know that was what you got and not the input.

[08:40:05.0000] <AryehGregor>
No, it was the erroneous output.

[08:40:06.0000] <AryehGregor>
It should be clear from context if you understand what the test is doing.

[08:40:07.0000] <AryehGregor>
The point is, I'm writing the tests and I want to control the failure messages.

[08:41:00.0000] <AryehGregor>
Often the expected/got thing is useful, but sometimes not.

[08:41:01.0000] <AryehGregor>
"expected true got false" is almost never useful, in particular.

[08:41:02.0000] <zewt>
if you only care about whether something matches what you expect, and not the particulars of the values, wouldn't you want (in most harnesses, don't know this one in particular) assert_true(length == 0, ...)?

[08:41:03.0000] <gsnedders>
/me would rather have the output from the harness, always

[08:41:04.0000] <AryehGregor>
That produces "expected true got false".

[08:41:05.0000] <AryehGregor>
zewt, ^^

[08:42:00.0000] <AryehGregor>
gsnedders, I wouldn't object if it actually meant something in context.  But it doesn't say what the *expressions* for the actual and expected values are.

[08:42:01.0000] <zewt>
that's a separate issue than assert_equals showing it, though.

[08:42:02.0000] <gsnedders>
Because then I don't have to dig through the test code to see if there's places I have to add extra debug code to work out why it fails that would be given by the normal output.

[08:42:03.0000] <AryehGregor>
I'm just asking for some way to suppress it.

[08:42:04.0000] <zewt>
does seem useless for assert_true/false, since it's never adding any new info

[08:42:05.0000] <AryehGregor>
gsnedders, this is actively misleading: Body has extra attributes! Element node <body bgcolor="#00FFFF"> with 20 children expected 0 got 1

[08:42:06.0000] <AryehGregor>
The context makes it seem like the number is related to the number of children.

[08:43:00.0000] <gsnedders>
AryehGregor: Then there should be some sort of comma or something. Just because it's unclear in the current form doesn't make the right solution be removing it entirely.

[08:43:01.0000] <AryehGregor>
gsnedders, do you think "expected true got false" is ever useful?

[08:44:00.0000] <AryehGregor>
When does that ever add any info at all?

[08:44:01.0000] <gsnedders>
AryehGregor: It tells me it's probably not a test with any simple-to-debug assertion.

[08:44:02.0000] <AryehGregor>
Or maybe the assertion message can be written clearly enough that the harness output is sometimes superfluous?

[08:46:00.0000] <gsnedders>
AryehGregor: I'd only be happy with that if I could guarantee everyone writing tests wrote good testse.

[08:47:00.0000] <AryehGregor>
If they don't, the expected/actual values won't help anyway, because you have no idea what they mean if they're just numbers or true/false.

[08:47:01.0000] <AryehGregor>
You have to rely on the custom test message to tell you that no matter what.

[08:50:00.0000] <jgraham>
It's not always "expected true, got false", it could, for example, be expected true, got ""

[08:50:01.0000] <AryehGregor>
Okay, that's a good point.

[08:50:02.0000] <jgraham>
But no, you can't customise

[08:50:03.0000] <jgraham>
And it would be non-trivial to allow it

[08:51:00.0000] <jgraham>
Well I guess you could add more parameters to every assert function

[08:51:01.0000] <gsnedders>
(Of course, if assertTrue is called with something just with ===, then that can't happen, but if we're just doing that you shouldn't be using assertTrue)

[08:51:02.0000] <woef>
"Tired developers use the word “non-trivial,” or some variation thereof, a lot more than energized developers."

[08:51:03.0000] <woef>
;)

[08:51:04.0000] <jgraham>
I am tired

[08:52:00.0000] <gsnedders>
Thankfully, jgraham isn't a developer.

[08:52:01.0000] <jgraham>
I have been on the train for 6 hours

[08:52:02.0000] <gsnedders>
jgraham: Leaving at 7am?

[08:52:03.0000] <jgraham>
No, I'm not insane and tired

[08:52:04.0000] <jgraham>
Just tired

[08:52:05.0000] <gsnedders>
jgraham: So you had more than just one change? Or have the train times changed?

[08:52:06.0000] <jgraham>
2 changes

[08:53:00.0000] <gsnedders>
Why do I know those train times off the top of my head?

[08:54:00.0000] <jgraham>
Because you have done the journey before?

[08:54:01.0000] <gsnedders>
Far too often.

[08:54:02.0000] <jgraham>
AryehGregor: Anyway, I guess one could allow a format string or something to customize the assert message, but I don't think it is actually harmful to print them always

[08:55:00.0000] <jgraham>
s/them/the full message/

[08:55:01.0000] <AryehGregor>
jgraham, it's just distracting, but it's not a big deal.

[08:55:02.0000] <AryehGregor>
Did you ever look at why my reflection tests are now not working in your harness?

[08:55:03.0000] <jgraham>
No, I have been a bit swamped. But I am aware that I still have to do it. So I will!

[08:58:00.0000] <jgraham>
(that wasn't a promise to do it right now, btw)

[08:58:01.0000] <jgraham>
(but I am aware that it needs to be looked at. I expect this week sometime to be realistic)

[09:00:00.0000] <annevk>
AryehGregor, I'm trying to read http://www.w3.org/Bugs/Public/show_bug.cgi?id=14035#c3

[09:00:01.0000] <annevk>
AryehGregor, for the case where parent is null

[09:00:02.0000] <annevk>
AryehGregor, what should range's start node be?

[09:03:00.0000] <annevk>
guess it has to be oldNode

[09:09:00.0000] <timeless>
AryehGregor: grr, your /tmp/ thing hung my browser

[09:09:01.0000] <AryehGregor>
timeless, what browser?

[09:09:02.0000] <AryehGregor>
annevk, if oldNode is detached, then either both the range's start/end have to be oldNode, or neither can be.  If neither is, then of course the range won't mutate when you splitText() it.

[09:13:00.0000] <annevk>
AryehGregor, for the second bullet point, does that have an implied start offset is smaller than offset in it?

[09:13:01.0000] <timeless>
Nightly

[09:13:02.0000] <timeless>
gsnedders: which trains are these?

[09:14:00.0000] <AryehGregor>
annevk, the four cases are steps in an algorithm being run in order.  If the start offset was >= offset, you'd already have hit the first case, and the start/end node would no longer be old node.

[09:14:01.0000] <timeless>
AryehGregor: afaict, you manage to hang the browser for 10s

[09:14:02.0000] <timeless>
without triggering a slow script dialog

[09:14:03.0000] <AryehGregor>
This was relatively explicit in the original text.

[09:14:04.0000] <timeless>
but in some cases you manage to trigger the OS <frozen app> feature

[09:14:05.0000] <AryehGregor>
timeless, it's more like upwards of a minute for me.

[09:14:06.0000] <timeless>
well err

[09:14:07.0000] <AryehGregor>
Yeah, this kind of test stinks if you use a browser like Firefox that doesn't have process-per-tab.

[09:15:00.0000] <AryehGregor>
Good thing I use Chrome for browsing and Firefox only for testing.

[09:15:01.0000] <timeless>
could you try *not* hanging the browser for more than 3s at a time? :)

[09:15:02.0000] <annevk>
AryehGregor, thanks AryehGregor

[09:15:03.0000] <AryehGregor>
(this is one of the biggest reasons I use Chrome, in fact)

[09:15:04.0000] <AryehGregor>
timeless, how do you suggest doing that?

[09:15:05.0000] <timeless>
setTimeout? :)

[09:15:06.0000] <annevk>
AryehGregor, fwiw, I'm splitting the four steps into two sets of two as the method returns after parent is null

[09:15:07.0000] <timeless>
Time elapsed: 0:12.515 min.

[09:16:00.0000] <timeless>
so my math of 10s isn't too far off

[09:16:01.0000] <timeless>
5393 Pass 2853 Fail

[09:16:02.0000] <timeless>
are those numbers more or less correct?

[09:16:03.0000] <AryehGregor>
Yes.

[09:16:04.0000] <AryehGregor>
annevk, fine by me.

[09:16:05.0000] <AryehGregor>
timeless, half the tests should be almost sure to pass, because they're just setup/sanity checks at this point.

[09:16:06.0000] <timeless>
fwiw your error message in that case sucks too

[09:16:07.0000] <timeless>
assert_equals: Body element must have no attributes, but doesn't: <body bgcolor="#00FFFF"> expected 0 but got 1

[09:17:00.0000] <AryehGregor>
What's wrong with it?

[09:17:01.0000] <timeless>
it should say:

[09:17:02.0000] <timeless>
assert_equals: Body element must have no attributes (<body>), but instead it has: <body bgcolor="#00FFFF"> expected 0 but got 1

[09:17:03.0000] <timeless>
has/is

[09:18:00.0000] <AryehGregor>
I could change it, but I think it's clear enough.

[09:18:01.0000] <timeless>
/me really doesn't think it's clear enough 

[09:18:02.0000] <timeless>
`doesn't` is confusing

[09:18:03.0000] <timeless>
compare:

[09:18:04.0000] <timeless>
assert_equals: Wrapper div must have only one attribute (contenteditable=""), but has more: <div contenteditable="" style="background-color: rgb(0, 255, 255);"> expected 1 but got 2

[09:19:00.0000] <AryehGregor>
/me adjusts

[09:19:01.0000] <AryehGregor>
Would "Body element must have no attributes, but has more: " be better?

[09:19:02.0000] <timeless>
assert_true: Setup failed, cannot proceed expected true got false

[09:19:03.0000] <timeless>
technically yes

[09:20:00.0000] <timeless>
generally for short strings, having comparable strings is better than pure prose

[09:20:01.0000] <timeless>
i can easily compare <body> and <body foo=bar>

[09:21:00.0000] <timeless>
anyway, the setup failed stuff is unfortuante\

[09:21:01.0000] <timeless>
s/ant/nat/

[09:21:02.0000] <AryehGregor>
timeless, okay, try now.

[09:21:03.0000] <timeless>
it sounds like it expected setup to fail

[09:22:00.0000] <AryehGregor>
What about it is unfortunate?  I don't like the "expected true got false" part, but jgraham and gsnedders think it should stay.

[09:22:01.0000] <AryehGregor>
It should be phrased as a requirement, like "Setup must pass if further tests are to proceed" or such?

[09:22:02.0000] <timeless>
yeah it looks better

[09:22:03.0000] <timeless>
AryehGregor: yes

[09:23:00.0000] <timeless>
possibly "Setup must return true if ..."

[09:23:01.0000] <timeless>
that works well with "expected true got false"

[09:23:02.0000] <AryehGregor>
I think the "expected true got false" thing is just useless and should go away.

[09:23:03.0000] <AryehGregor>
But the harness doesn't allow it.

[09:23:04.0000] <timeless>
/me nods

[09:23:05.0000] <timeless>
i'd side with you if it would make a difference

[09:23:06.0000] <AryehGregor>
jgraham, ^^

[09:23:07.0000] <AryehGregor>
How about: "Setup and sanity checks must pass for further tests to make sense"

[09:23:08.0000] <timeless>
given that you've already tried that one, i'm just offering two suggestions for the rest

[09:24:00.0000] <AryehGregor>
(with "expected true, but got false" added, of course)

[09:24:01.0000] <AryehGregor>
Or maybe ". . . for further tests to be executed".

[09:24:02.0000] <timeless>
that mostly works, one could s/pass/pass (return true)/

[09:24:03.0000] <timeless>
`executed` and `make sense` are very different

[09:24:04.0000] <timeless>
one implies the tests will not run

[09:24:05.0000] <AryehGregor>
Except setup doesn't return true, the true/false thing is an artifact of the current test harness that I hope goes away sometime.

[09:24:06.0000] <AryehGregor>
They won't.

[09:24:07.0000] <timeless>
the other implies they will run and return garbage

[09:25:00.0000] <AryehGregor>
"Setup and sanity checks must pass for further tests to be executed on this input"

[09:25:01.0000] <timeless>
ok

[09:26:00.0000] <AryehGregor>
Okay, how about now?

[09:26:01.0000] <timeless>
/me waits for browser to unfreeze irc client..

[09:26:02.0000] <timeless>
grr

[09:27:00.0000] <timeless>
does your web page break ctrl-home intentionally?

[09:27:01.0000] <timeless>
(or is that just Nightly being silly?

[09:28:00.0000] <AryehGregor>
What does Ctrl-Home do?

[09:28:01.0000] <timeless>
"take me to top of document" typically

[09:31:00.0000] <AryehGregor>
Doesn't Home do the same, if you aren't in something editable?

[09:31:01.0000] <timeless_xchat>
and can you make your test not cause ie9 x64 to try to use >5gb of vm/2gb of ram?

[09:31:02.0000] <timeless_xchat>
it's bad for my ears

[09:31:03.0000] <AryehGregor>
I haven't tested much in IE yet.

[09:32:00.0000] <timeless_xchat>
(computer is still spinning disk to deal w/ swap)

[09:32:01.0000] <timeless_xchat>
/me waves goodbye to timeless

[09:33:00.0000] <timeless_xchat>
... and i thought your denial of cpu cycles in Nightly was bad

[09:33:01.0000] <AryehGregor>
It's not just a conformance test, it's a benchmark!

[09:33:02.0000] <AryehGregor>
Kind of like loading HTML5.

[09:33:03.0000] <timeless_xchat>
your denial of ram + any cycles due to memory exhaustion in ie is worse

[09:34:00.0000] <timeless_xchat>
have you seen stress.html?

[09:34:01.0000] <AryehGregor>
Nope.

[09:34:02.0000] <timeless_xchat>
/me finally gets the irc dialog saying the session died

[09:34:03.0000] <zewt>
one might argue that a browser letting a page chew so much memory as to affect the user's system is itself a problem :P

[09:35:00.0000] <timeless_xchat>
it's vaguely nsfw

[09:35:01.0000] <timeless_xchat>
http://timeless.justdave.net/stress/stress.html

[09:35:02.0000] <timeless_xchat>
historically it was not safe for unix boxes

[09:35:03.0000] <timeless_xchat>
they tended to die

[09:36:00.0000] <AryehGregor>
I've visited webpages that crashed X.

[09:36:01.0000] <timeless_xchat>
(actually, to be fair it also triggered bluescreens)

[09:36:02.0000] <timeless_xchat>
but the fbsd panic was more amusing

[09:37:00.0000] <timeless_xchat>
it also has killed a bunch of phones ...

[09:37:01.0000] <timeless_xchat>
zewt: one might

[09:37:02.0000] <timeless_xchat>
but...

[09:37:03.0000] <timeless_xchat>
consider that page

[09:37:04.0000] <timeless_xchat>
what would you want to have happen?

[09:38:00.0000] <timeless_xchat>
obviously having your os panic is less than ideal...

[09:38:01.0000] <timeless_xchat>
and certainly having your window manager die or commit suicide isn't much better

[09:39:00.0000] <annevk>
AryehGregor, shall I add you as editor of DOM4?

[09:39:01.0000] <AryehGregor>
annevk, sure, go ahead.

[09:41:00.0000] <timeless_xchat>
aryehgregor : one good thing about ie

[09:41:01.0000] <timeless_xchat>
i can suspend the runaway process

[09:42:00.0000] <timeless_xchat>
and i can still use the urlbar

[09:42:01.0000] <annevk>
wait, AryehGregor, are you a member of the WebApps WG?

[09:42:02.0000] <AryehGregor>
annevk, yes.

[09:42:03.0000] <AryehGregor>
At least, last I checked.

[09:42:04.0000] <AryehGregor>
Pretty sure I represent Google there.

[09:42:05.0000] <timeless_xchat>
did you rejoin?

[09:43:00.0000] <AryehGregor>
timeless_xchat, in Chrome you can just close the tab like regular if it goes haywire.

[09:43:01.0000] <AryehGregor>
Rejoin?

[09:43:02.0000] <timeless_xchat>
(did they recharter recently? )

[09:43:03.0000] <annevk>
AryehGregor, okay

[09:43:04.0000] <AryehGregor>
http://www.w3.org/2000/09/dbwg/details?group=42538&public=1&gs=1&

[09:43:05.0000] <AryehGregor>
Gregor, Aryeh

[09:43:06.0000] <AryehGregor>
(good standing)

[09:43:07.0000] <AryehGregor>
Google, Inc.

[09:44:00.0000] <timeless_xchat>
anyway, ctrl-home/ctrl-end work in ie

[09:44:01.0000] <timeless_xchat>
i think for editing related systems, home/end on windows are linear

[09:44:02.0000] <timeless_xchat>
and ctrl- changes them to document orientation

[09:45:00.0000] <AryehGregor>
Basically, yeah.

[09:45:01.0000] <timeless_xchat>
in things that aren't editing, both should behave the same

[09:45:02.0000] <AryehGregor>
More precisely, it changes them to top/bottom instead of line-start/line-end.

[09:45:03.0000] <AryehGregor>
Sounds right.

[09:45:04.0000] <timeless_xchat>
well

[09:45:05.0000] <timeless_xchat>
i don't know if windows supports any btt languages :)

[09:46:00.0000] <timeless_xchat>
ok, ctrl- home/end work fine in Nightly on news.google.com

[09:46:01.0000] <timeless_xchat>
so somehow your page breaks them

[09:49:00.0000] <AryehGregor>
Okay, I really need more RAM for this machine

[09:49:01.0000] <AryehGregor>
.

[09:49:02.0000] <timeless_xchat>
heh

[09:49:03.0000] <timeless_xchat>
how much do you have?

[09:49:04.0000] <AryehGregor>
3G.

[09:49:05.0000] <zcorpan>
AryehGregor: thanks for the piece of sanity regarding dom core vs dom3events

[09:49:06.0000] <AryehGregor>
No, 4G.

[09:49:07.0000] <AryehGregor>
zcorpan, any time.

[09:51:00.0000] <AryehGregor>
Hmm, should I upgrade to 6G for $22 or 8G for $55?

[09:52:00.0000] <AryehGregor>
I'll only be using this computer for a few more months, so I think I'll just buy another 2G.  Should be fine.

[09:53:00.0000] <zewt>
... has google's main search box been, uh, stupid for anyone else lately?

[09:54:00.0000] <zewt>
several times i've moved the cursor (home, ctrl-left), started typing, and after 1-2 keystrokes the cursor jumps back to the end of the input, so whatever I'm typing gets split

[09:54:01.0000] <annevk>
renamed to DOM4

[09:54:02.0000] <Philip`>
I've had that several times (in Opera)

[09:54:03.0000] <zewt>
(ff6)

[09:54:04.0000] <annevk>
Ms2ger, should we rename domcore.js to dom.js etc.?

[09:55:00.0000] <Ms2ger>
.html?

[09:55:01.0000] <zcorpan>
annevk: why is node.contains(node) true? was it implemented that way?

[09:55:02.0000] <Ms2ger>
zcorpan, yes

[09:55:03.0000] <zcorpan>
ok

[09:55:04.0000] <dglazkov>
good morning, Whatwg!

[09:55:05.0000] <Ms2ger>
zcorpan, a bug was filed on Gecko already

[09:55:06.0000] <Philip`>
zewt: It seems like it's moving focus to the end of the input box on onload or something close to that

[09:55:07.0000] <annevk>
Ms2ger, only effect will be required search/replace for spec=domcore to spec=dom

[09:55:08.0000] <zewt>
seems like they've become very loose with the google search page ... extremely annoying, being probably the most used form on the internet

[09:55:09.0000] <Ms2ger>
Oh

[09:55:10.0000] <Philip`>
regardless of whether you've started typing already

[09:56:00.0000] <annevk>
Ms2ger, no need to rename that html file

[09:56:01.0000] <annevk>
shorter name for dom would be nice though

[09:56:02.0000] <Ms2ger>
Just add an alias, don't care about the name of the file

[09:56:03.0000] <jgraham>
timeless_xchat, AryehGregor: Verying the number of TCs depending on whether ome pass or fail is evil

[09:56:04.0000] <jgraham>
*Varying

[09:56:05.0000] <zewt>
also, many times it seems like it's ignoring form submission--i'll load the top-level search page, type something, hit enter, wait ... and nothing happens. heh

[09:56:06.0000] <jgraham>
*some

[09:56:07.0000] <Philip`>
Maybe their stats say it reduces the mean serch time by 0.05 seconds so it's worth the inconvenience for weird users, though

[09:57:00.0000] <AryehGregor>
jgraham, that's why I'm not.  I'm just having all subsequent ones fail automatically without doing anything.

[09:57:01.0000] <jgraham>
That's fine

[09:57:02.0000] <Philip`>
s/serch/search/

[09:57:03.0000] <jgraham>
I probably didn't read the backscroll carefully enough

[09:57:04.0000] <zewt>
it doesn't focus the search box by default, though

[09:57:05.0000] <jgraham>
you all talk too much

[09:57:06.0000] <jgraham>
;)

[09:57:07.0000] <zewt>
and it doesn't seem to modify the input-box-selected behavior, either

[09:58:00.0000] <zewt>
Showing results for sdfsdf. Search instead for sdfdf.

[09:58:01.0000] <zewt>
that may be the best autocorrect i've ever seen

[09:58:02.0000] <oal>
Hey, is it possible, or will it be possible to create "outside border radius" with css, like this http://upload.wikimedia.org/wikipedia/en/9/93/Opera11favicon.png

[09:58:03.0000] <oal>
So that corners are rounded outwards

[09:59:00.0000] <oal>
Like in the bottom of the tabs in the screenshot

[10:00:00.0000] <zcorpan>
TabAtkins: ^

[10:11:00.0000] <annevk>
WebKit has Range.expand() AryehGregor

[10:11:01.0000] <AryehGregor>
annevk, WebKit has loads of junk that they threw on Range and Selection.

[10:11:02.0000] <AryehGregor>
Some might be worth taking, like modify(), but some is useless and they should remove it, like setBaseAndExtent().

[10:12:00.0000] <annevk>
That's on Selection

[10:12:01.0000] <AryehGregor>
Well, yes.

[10:12:02.0000] <AryehGregor>
In that case.

[10:12:03.0000] <AryehGregor>
Maybe they put less junk on Range, I didn't look closely.

[10:12:04.0000] <AryehGregor>
But there's definitely stuff they should drop support for and that shouldn't be specced.

[10:13:00.0000] <annevk>
Only Range.expand() and constants for comparePoint are currently not in the specification

[10:14:00.0000] <annevk>
Also the constants they have for comparePoint do not match the return values in the specification...

[10:20:00.0000] <oal>
This describes what I want to do if anyone's interested. http://orderedlist.com/blog/articles/flared-borders-with-css/

[10:23:00.0000] <zcorpan>
oal: it seems like a reasonable thing to be able to do without jumping through hoops. try sending an email to www-style

[10:24:00.0000] <oal>
I'm not really much into mailing lists and stuff. Where is it?

[10:25:00.0000] <oal>
Do I simply send an email to www-style⊙wo describing the issue?

[10:25:01.0000] <jgraham>
Pretty much

[10:26:00.0000] <zewt>
might be subscriber-only

[10:26:01.0000] <timeless_xchat>
jgraham: i don't disagree wrt varying

[10:26:02.0000] <zcorpan>
zewt: don't think it is

[10:26:03.0000] <timeless_xchat>
but i was merely asking about meaning of text

[10:27:00.0000] <zcorpan>
at least i recall having successfully sent emails to www-style without being subscribed

[10:27:01.0000] <timeless_xchat>
implications are someone else's problem

[10:27:02.0000] <oal>
How detailed should the mail be? I'll ask if that feature is planned, and show the opera screenshot and the link to the "hack"?

[10:27:03.0000] <timeless_xchat>
aryehgregor : sounds like your message is wrong then, but i lost scrollback

[10:27:04.0000] <AryehGregor>
timeless_xchat, which message?

[10:28:00.0000] <timeless_xchat>
sorry, lunch

[10:34:00.0000] <oal>
Ok, mail sent to the mailing list ;)

[10:42:00.0000] <smaug____>
Why does http://mozilla.pettay.fi/moztests/nestedclick.html open only one tab in webkit and opera

[10:42:01.0000] <smaug____>
it should open two, but apparently some page relies on it to open only one

[10:46:00.0000] <zewt>
i don't think browsers should ever allow opening more than one tab or window in a single event

[10:46:01.0000] <zewt>
just evil

[11:03:00.0000] <Ms2ger>
annevk5, hmm, doesn't Google get a link? :)

[11:04:00.0000] <smaug____>
oh, hmm, webkit doesn't have click() in anchor elements

[11:09:00.0000] <smaug____>
ok, then question to someone from Opera. Why does http://mozilla.pettay.fi/moztests/nestedclick.html open only one tab

[11:15:00.0000] <zcorpan>
we prevent recursion in click()

[11:15:01.0000] <zcorpan>
it's in the spec

[11:15:02.0000] <zcorpan>
who from opera btw? :)

[11:16:00.0000] <zcorpan>
oh, to someone from opera

[11:16:01.0000] <zcorpan>
/me read from someone from opera

[11:17:00.0000] <smaug____>
zcorpan: nothing to do with recursion

[11:17:01.0000] <smaug____>
gecko prevent recursion too

[11:17:02.0000] <smaug____>
zcorpan: there is the click() and user initiated click to <a>

[11:17:03.0000] <smaug____>
why opera handles only one

[11:19:00.0000] <zcorpan>
ah, i see. not sure

[11:19:01.0000] <gsnedders>
smaug____: We block script clicks on a elements, I think

[11:19:02.0000] <gsnedders>
(But don't ask me, I'm on holiday.)

[11:20:00.0000] <zewt>
(on non-cancelled clicks only, i'd imagine?)

[11:20:01.0000] <gsnedders>
zewt: (see my previous line)

[11:20:02.0000] <zewt>
(you're not the only one on irc)

[11:20:03.0000] <zewt>
:P

[11:21:00.0000] <smaug____>
gsnedders: clicking a click event manually to <a> does trigger the link in Opera

[11:22:00.0000] <gsnedders>
My thought was wrong, then, obviously.

[11:22:01.0000] <zcorpan>
is opera's behavior more web compatible or less web compatible?

[11:23:00.0000] <zewt>
the only time i'd ever expect pages to both activate a link and open a window would be for ads anyway, heh

[11:28:00.0000] <zcorpan>
smaug____: i guess we set the "click in progress" flag to true for regular clicks

[11:28:01.0000] <smaug____>
ah, that is perhaps it

[11:28:02.0000] <smaug____>
not per spec, but that would explain the behavior

[11:29:00.0000] <smaug____>
IE seems to have something similar

[11:29:01.0000] <zcorpan>
maybe we should put it in the spec

[11:29:02.0000] <smaug____>
right

[11:38:00.0000] <timeless_xchat>
heycam: any idea why marcos references you by First Last instead of F. Last in widgets-apis ?

[11:39:00.0000] <Ms2ger>
annevk5, are we planning to publish at TR/dom?

[11:40:00.0000] <zcorpan>
timeless_xchat: does he use anolis?

[11:42:00.0000] <timeless_xchat>
/me shrugs

[11:42:01.0000] <gsnedders>
zcorpan: Yes.

[11:42:02.0000] <zcorpan>
that'd explain it

[11:44:00.0000] <Ms2ger>
Why?

[11:45:00.0000] <Ms2ger>
His references are literally in the source

[11:46:00.0000] <zcorpan>
oh

[11:51:00.0000] <Hixie>
gah, i always need to test IE when I don't have it

[11:52:00.0000] <Hixie>
i need to work out when IE fires readystatechange in the situation where a <script> is created in one task, then inserted into the document before the preload starts

[11:52:01.0000] <Ms2ger>
Ask khuey in #developers ;)

[11:53:00.0000] <Hixie>
i'll just test it in a few hours when I have access to IE

[11:53:01.0000] <Hixie>
i'm not sure i'm sure what i want to test exactly

[11:53:02.0000] <zewt>
carry a 64gb usb thumbdrive with a VM around with you :P

[11:54:00.0000] <Hixie>
hmmmm maybe this doesn't matter so much actually

[11:54:01.0000] <Hixie>
inserting an external script from script is never sync, right?

[12:00:00.0000] <Hixie>
ok i think the actual question i need an answer for is about what happens if after you create a script with a "src" attribute, you then change it before readystatechange fires

[12:00:01.0000] <Hixie>
or what happens if you change it after it's fired...

[12:00:02.0000] <Hixie>
man it's not surprising IE's behaviour here is inconsistent

[12:01:00.0000] <Hixie>
so many edge cases

[12:01:01.0000] <Hixie>
cullenfluffyjenn: hey dude, sup

[12:01:02.0000] <cullenfluffyjenn>
Hi - finally got back from vacation and trying to remember what all this stuff I am working on actually is.

[12:01:03.0000] <Hixie>
hah, same here

[12:08:00.0000] <Hixie>
bbiab

[12:10:00.0000] <timeless>
AryehGregor: your web page has a scary growth curve in ie9

[12:10:01.0000] <AryehGregor>
timeless, which one, and what do you mean by growth curve?

[12:10:02.0000] <AryehGregor>
Am I causing a memory leak?

[12:10:03.0000] <timeless>
my guess is a leak and an infinite loop

[12:10:04.0000] <timeless>
ooh

[12:11:00.0000] <timeless>
Time elapsed: 1:11.259 min.

[12:11:01.0000] <timeless>
it finished?

[12:11:02.0000] <timeless>
Summary  Found 3 tests   3 Fail

[12:11:03.0000] <timeless>
it's only using 700mb of ram

[12:11:04.0000] <AryehGregor>
Whee.

[12:11:05.0000] <AryehGregor>
I'll look at that.

[12:11:06.0000] <AryehGregor>
Haven't really tested in IE yet.

[12:11:07.0000] <timeless>
this is after it was restarted once

[12:11:08.0000] <timeless>
 Fail  [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" checks for modifications to non-editable content  assert_equals: Setup and execCommand() must not throw an exception expected null but got object "Error: Invalid argument."    Fail  [["delete",""],["inserttext","a"]] "<blockquote><font color=blue>[foo]</font></blockquote>" compare innerHTML  assert_equals: Setup and execCommand() must not throw a

[12:12:00.0000] <timeless>
anyway, um

[12:12:01.0000] <timeless>
if you could have a timer which checks to see if the system responds w/in say 3 mins

[12:12:02.0000] <timeless>
if it doesn't, your page should stop testing

[12:13:00.0000] <timeless>
and ask the user to set a new value and mark failed for everything past that point

[12:13:01.0000] <timeless>
3 mins = a way to detect if the system is paging to death

[12:13:02.0000] <timeless>
/me leaves

[12:13:03.0000] <AryehGregor>
I wouldn't be surprised if it takes more than three minutes to run.

[12:25:00.0000] <Ms2ger>
/me will be away from tomorrow until the 15th

[12:25:01.0000] <AryehGregor>
/me waves

[12:26:00.0000] <AryehGregor>
Yikes, I really need more RAM here.

[12:28:00.0000] <zcorpan>
/me realizes that everything that's ever sent to public-html-announce is telecon minutes, which he couldn't care less about, and so unsubscribes

[12:28:01.0000] <AryehGregor>
Summary

[12:28:02.0000] <AryehGregor>
Found 57836 tests

[12:28:03.0000] <AryehGregor>
There we go.  This is starting to look something more like a typical test suite I'd write.  :)

[12:29:00.0000] <zcorpan>
you don't need more ram, you just need to spend a week profiling and optimizing

[12:30:00.0000] <AryehGregor>
406,936k memory used by the Chrome tab with the conformance tests open.

[12:30:01.0000] <Philip`>
You should compress your RAM, so you can store twice as much in it

[12:30:02.0000] <AryehGregor>
Philip`, recent Linux kernels can do that!

[12:31:00.0000] <Philip`>
Even without any fancy technology, I guess you could set up a RAM disk then put a compressing filesystem on it then put a swap file on that

[12:31:01.0000] <AryehGregor>
I'm not swapping, at least.

[12:31:02.0000] <AryehGregor>
Hmm.  The data.js for the tests is over a megabyte.

[12:32:00.0000] <AryehGregor>
I guess that's not a major contributor, though.

[12:32:01.0000] <AryehGregor>
. . . I really should have bought 4G of RAM instead of 2G.

[12:32:02.0000] <AryehGregor>
/me checks if he can change the order

[12:35:00.0000] <Philip`>
Could you just order another 2GB?

[12:35:01.0000] <Philip`>
or do you have insufficient sockets?

[12:37:00.0000] <AryehGregor>
Only one free DIMM.

[12:38:00.0000] <AryehGregor>
It seems like I can cancel it, though.  Just waiting for the confirmation that it went through before placing the new order.

[12:39:00.0000] <AryehGregor>
There we go, order changed.

[12:39:01.0000] <AryehGregor>
/me now begins to regret that he got only 8G of RAM for his new laptop

[12:40:00.0000] <rniwa>
AryehGregor: you can always add more!

[12:41:00.0000] <Philip`>
They should make external RAM with a USB connection

[12:44:00.0000] <jcranmer>
. . .

[12:44:01.0000] <jcranmer>
I really like having my memory bandwidth in 10's of MB/s

[12:45:00.0000] <jcranmer>
at that speed, you're really looking at a SSD

[13:10:00.0000] <kennyluck>
annevk5, is there a page for the list of features you mentioned in http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2011-September/033065.html ?

[13:13:00.0000] <Ms2ger>
kennyluck, most are in the spec source

[13:13:01.0000] <annevk>
Ms2ger, I just copied what other specifications had for Google

[13:13:02.0000] <Ms2ger>
K

[13:13:03.0000] <annevk>
Ms2ger, feel free to change it

[13:14:00.0000] <annevk>
as for /tr/dom/ seemed nice to me

[13:14:01.0000] <kennyluck>
Ms2ger, thanks for the info.

[13:15:00.0000] <Ms2ger>
WFM, but you'll probably need to bug staff about that

[13:17:00.0000] <annevk>
Ms2ger, yeah, when we publish

[13:17:01.0000] <Ms2ger>
And if you're publishing next week, you get to do it :)

[13:20:00.0000] <annevk>
I noticed you have some break thingie starting tomorrow

[13:20:01.0000] <annevk>
Have fun

[13:21:00.0000] <Ms2ger>
Ta

[13:25:00.0000] <annevk>
kennyluck, in the source of the spec?

[13:27:00.0000] <Hixie>
good god IE is messed up

[13:28:00.0000] <Ms2ger>
Hixie, welcome to 2002 :)

[13:29:00.0000] <Hixie>
for <script></script>, the end readyState is 'loading'

[13:29:01.0000] <Hixie>
for <script>x</script>, the end readyState is 'complete'

[13:29:02.0000] <Hixie>
for <script src="x"></script>, the end readyState is 'loaded'

[13:30:00.0000] <Hixie>
also in IE the 'load' and 'readystatechange' events on script execution are async, not sync like in the spec or gecko

[13:32:00.0000] <timeless>
AryehGregor: it isn't about how long it takes to run

[13:32:01.0000] <timeless>
it's about how late a timer fires

[13:32:02.0000] <Hixie>
this is giving me a headache

[13:32:03.0000] <timeless>
if you ask it to fire in 2minutes and it's a minute late, there's a problem

[13:33:00.0000] <timeless>
basically, as long as you break your test into small pieces, and as long as your other timer can fire with limited latency relative to its expected firing deadline, things are ok

[13:33:01.0000] <timeless>
but if you split things up and it doesn't fire close enough to on schedule, then it's probably paging to death

[13:33:02.0000] <AryehGregor>
Could be.

[13:34:00.0000] <kennyluck>
annevk, I don't see path objects listed anywhere in the source of http://dev.w3.org/html5/2dcontext/ (and http://www.whatwg.org/specs/web-apps/current-work/ )

[13:34:01.0000] <timeless>
/me needs to write a demo of that and get people to deploy it

[13:36:00.0000] <Philip`>
kennyluck: I think it's a shared mental list, not one that's been written down explicitly

[13:39:00.0000] <kennyluck>
ok

[13:42:00.0000] <Ms2ger>
$ grep v2 source | wc -l

[13:42:01.0000] <Ms2ger>
138

[13:43:00.0000] <TabAtkins>
oal: You can do corners like that currently by properly styling and positioning ::before and ::after.  It's an interesting idea to keep in mind for the border-radius-style property when we develop it, though

[13:43:01.0000] <Ms2ger>
<!-- v2: fix this somehow -->

[13:44:00.0000] <timeless>
Ms2ger: you never have <!-- v2: ... --> <!-- v2: ... --> ? :)

[13:44:01.0000] <timeless>
Ms2ger: also, you might try `grep -c v2 source`

[13:45:00.0000] <Ms2ger>
Pff

[13:45:01.0000] <zewt>
sounds like an option added by someone who doesn't "get" unix

[13:45:02.0000] <zewt>
"we need to combine TWO programs to do this?!"

[13:45:03.0000] <Ms2ger>
Exactly

[13:45:04.0000] <timeless>
zewt: yeah, it's a gnuism iirc :)

[13:45:05.0000] <Ms2ger>
That's what pipes are for

[13:45:06.0000] <timeless>
have you met busybox? :)

[13:45:07.0000] <zewt>
might be useful for wildcard greps if it shows per-file

[13:45:08.0000] <Ms2ger>
(-c is specified by POSIX.)

[13:46:00.0000] <Ms2ger>
Says manpage

[13:46:01.0000] <Philip`>
I think canvas in on like v7 now, not v2

[13:46:02.0000] <Philip`>
*is on

[13:46:03.0000] <Ms2ger>
 <!-- v6: Drawing text along a given path -->

[13:46:04.0000] <Ms2ger>
  <!-- v6: Adding text to a path -->

[13:52:00.0000] <annevk>
kennyluck, seems Path objects are not explicitly listed

[13:53:00.0000] <annevk>
some path related stuff is

[13:58:00.0000] <kennyluck>
annevk, that matches what I figured.

[14:00:00.0000] <Hixie>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=9236

[14:01:00.0000] <MikeSmith>
baby steps

[14:01:01.0000] <Ms2ger>
see diff given below

[14:01:02.0000] <Ms2ger>
That's what stood out to me :)

[14:02:00.0000] <MikeSmith>
heh

[14:09:00.0000] <Hixie>
heh

[14:09:01.0000] <Hixie>
oops

[14:22:00.0000] <AryehGregor>
Ugh.  This table takes two and a half minutes to lay out in Gecko.

[14:23:00.0000] <AryehGregor>
It has 56,000ish rows, but still . . .

[14:23:01.0000] <AryehGregor>
That's really excessive.

[14:23:02.0000] <AryehGregor>
Chrome does much better.

[14:29:00.0000] <TabAtkins>
Gecko does a pretty decent job of doing things "right", which means quadratic behavior.  I think we cheat more in Chrome.

[14:29:01.0000] <Ms2ger>
Sounds like what Chrome would do

[14:29:02.0000] <TabAtkins>
Fucking cheaters.

[14:30:00.0000] <Ms2ger>
Yeah, no kidding

[14:30:01.0000] <Ms2ger>
If only we had Chrome people around...

[14:31:00.0000] <TabAtkins>
Yeah, too bad.

[14:31:01.0000] <AryehGregor>
TabAtkins, the table layout is fixed, I think.

[14:31:02.0000] <AryehGregor>
/me double-checks

[14:31:03.0000] <TabAtkins>
AryehGregor: Oh, then that *should* be relatively fast.

[14:32:00.0000] <TabAtkins>
Not quadratic in the size of the table, at least.

[14:33:00.0000] <AryehGregor>
table-layout is fixed, yep.

[14:33:01.0000] <TabAtkins>
File a bug on Firefox then, I guess.

[14:35:00.0000] <oal>
TabAtkins: Yes, it can be done, but I would definitely like to see it as a part of border-radius. :)

[14:37:00.0000] <TabAtkins>
oal: Yeah, like I said, it sounds interesting.  It has potentially interesting effects on geometry.  I suppose it's supposed to have no geometric effect, so the elements can overlap more easily.

[14:41:00.0000] <Ms2ger>
TabAtkins, flexbox seems to be missing references

[14:41:01.0000] <TabAtkins>
Oh yeah?

[14:41:02.0000] <Ms2ger>
Oh, I guess it doesn't refer to any

[14:41:03.0000] <timeless_xchat>
heh

[14:41:04.0000] <TabAtkins>
Indeed.  I need to make a pass through and decide what to reference.

[14:55:00.0000] <annevk>
http://fosspatents.blogspot.com/2011/09/shocker-for-android-oems-google.html

[15:02:00.0000] <AryehGregor>
Android development has always been a sad story.

[15:02:01.0000] <AryehGregor>
Too bad it can't be more like Chrome.

[15:02:02.0000] <AryehGregor>
(ium)

[15:03:00.0000] <AryehGregor>
Random entertaining link: http://i.imgur.com/mgf1i.png

[15:03:01.0000] <AryehGregor>
Sad but so true.

[15:22:00.0000] <paul_irish>
<section hidden style="display:block;">What happens?</section>

[15:22:01.0000] <TabAtkins>
It's visible and display:block.

[15:23:00.0000] <Philip`>
The semantics police will arrest you

[15:23:01.0000] <paul_irish>
its hidden's specificity essentially one less than an inline style?

[15:23:02.0000] <AryehGregor>
There's just a UA rule [hidden] { display: none }.

[15:23:03.0000] <AryehGregor>
Nothing special.

[15:23:04.0000] <TabAtkins>
@hidden is implemented via a "[hidden] { display: none; }" rule in the UA stylesheet, basically.

[15:23:05.0000] <AryehGregor>
Works the same as i { font-style: italic } or such.

[15:23:06.0000] <paul_irish>
o right. dur

[15:23:07.0000] <TabAtkins>
And UA rules are below author rules.

[15:24:00.0000] <annevk>
http://www.whatwg.org/C#hidden-elements

[15:25:00.0000] <TabAtkins>
It's potentially a good idea to add "[hidden] { display: none !important; }" to your author stylesheet, to avoid accidentally overriding it.

[15:25:01.0000] <danbeam>
TabAtkins: +1

[15:25:02.0000] <AryehGregor>
Could we add !important to the UA stylesheet?

[15:25:03.0000] <AryehGregor>
Then only !important author rules would override it, right?

[15:25:04.0000] <TabAtkins>
AryehGregor: UA !important rules dont' officially exist.

[15:25:05.0000] <Dashiva>
But then how will you override it in your awesome application with a reason to show them?

[15:25:06.0000] <Philip`>
Then we could add !veryimportant to the UA stylesheet

[15:25:07.0000] <TabAtkins>
They are used, though, and they're above all other rules.

[15:26:00.0000] <AryehGregor>
Oh, I see.

[15:26:01.0000] <paul_irish>
i believe there was an !important UA style that was just lobbied to be removed successfully

[15:26:02.0000] <Dashiva>
Philip`: No, !important-important

[15:26:03.0000] <AryehGregor>
There are only user and author important declarations.

[15:26:04.0000] <AryehGregor>
Not UA important.

[15:26:05.0000] <AryehGregor>
Oh well.

[15:26:06.0000] <Philip`>
!impooooortant gives you level-5 importancy

[15:26:07.0000] <danbeam>
I interpretted "User agents should not render elements that have the hidden attribute specified." as not being overridable (easily)

[15:27:00.0000] <danbeam>
(or unintentionally with CSS)

[15:27:01.0000] <Dashiva>
Maybe require a password

[15:27:02.0000] <danbeam>
:|

[15:27:03.0000] <roc>
I do hate the "!" syntax for important

[15:27:04.0000] <Dashiva>
Agreed

[15:30:00.0000] <danbeam>
very popular reset mechanisms will mess this up, btw, https://github.com/murtaugh/HTML5-Reset/blob/master/_/css/style.css#L25

[15:30:01.0000] <danbeam>
http://jsfiddle.net/danbeam/MrEjL/

[15:36:00.0000] <Ms2ger>
Well, reset style sheets just say "I think I know what I'm doing"

[15:36:01.0000] <Ms2ger>
That's usually wrong, but people still use them

[15:37:00.0000] <Dashiva>
Maybe we need to offer a better way

[15:37:01.0000] <Dashiva>
<html -x-minimal-ua-stylesheet

[15:38:00.0000] <danbeam>
I'm just going to try to add [hidden] { display: none !important; } to the resets, then

[15:39:00.0000] <TabAtkins>
paul_irish: Maybe add ^^^ to HTML5 Boilerplate?

[15:40:00.0000] <paul_irish>
https://github.com/paulirish/html5-boilerplate/blob/master/css/style.css#L21

[15:40:01.0000] <paul_irish>
just sans important

[15:40:02.0000] <danbeam>
paul_irish: that might make a big diff.

[15:40:03.0000] <paul_irish>
especially as its at the top of the file and specificity means it'll lose.

[15:41:00.0000] <TabAtkins>
paul_irish: That'll be overriden by a ".foo { display:block; }".

[15:41:01.0000] <paul_irish>
roger that.

[15:41:02.0000] <paul_irish>
we'll do it right

[15:42:00.0000] <Ms2ger>
AryehGregor, re "We'd need some way of serializing a DOM perfectly", maybe you can reuse the HTML parsing test stuff

[15:42:01.0000] <AryehGregor>
Ms2ger, it's possible.  On the other hand, it might make more sense to just call normalize() in a few key places so everything really serializes as-is.

[15:46:00.0000] <Hixie>
the specificity of the [hidden] thing is annoying, but on the other hand i've several times had need to implement [hidden] using something other than display:none

[15:47:00.0000] <paul_irish>
we've been using the combo `display: none !important; visibility: hidden;` to successfully hide the content from screenreaders as well

[15:52:00.0000] <gsnedders>
AryehGregor: serializing it perfectly? i.e., serializing such that parse(serialize(foo)) == foo?

[16:01:00.0000] <zewt>
Hixie: sorry that that <script> thread rambled off so long, heh

[16:16:00.0000] <AryehGregor>
gsnedders, yes, that's what I'm looking for, but it's okay if it doesn't work for all DOMs.  In particular, I already consider it a serious bug if my editing algorithms produce any DOM that doesn't round-trip through text/html serialization, modulo normalization.

[16:29:00.0000] <AryehGregor>
. . . I've looked for about a minute and can't find any way to delete a document in Google Docs.

[16:29:01.0000] <AryehGregor>
Oh, there it is.

[16:29:02.0000] <AryehGregor>
Tiny drop-down "Actions" under the opaque title "Move to bin".

[16:31:00.0000] <zewt>
"bin"?

[16:31:01.0000] <zewt>
a bin is where you store things, not discard them. heh

[16:32:00.0000] <Hixie>
not in british english, at least

[16:32:01.0000] <Hixie>
the bin in the trash

[16:33:00.0000] <AryehGregor>
"Garbage bin" is a common phrase.

[16:33:01.0000] <zewt>
does google not have any UI QC to make sure they're not using confusing dialected language? heh

[16:33:02.0000] <zewt>
yeah, but that's a much more specific phrase

[16:39:00.0000] <Hixie>
anyone interested in writing a book about html5? i've someone here asking for names.

[16:43:00.0000] <TabAtkins>
AryehGregor: Yours must be set to British English.  Mine definitely says "Move to Trash"

[16:44:00.0000] <zewt>
(why did "Delete" go out of style)

[16:44:01.0000] <benschwarz>
Because software companies like apple love to over use metaphours

[16:44:02.0000] <zewt>
works for gmail, which i suspect has more UI design time put into it than gdocs

[16:45:00.0000] <benschwarz>
gmail are clever enough to call it a 'bin' or 'trash' based on where you are…

[16:45:01.0000] <zewt>
but the delete button in gmail is simply "delete"

[16:46:00.0000] <zewt>
that also just seems more likely to cause confusion--better off just saying "Deleted items" and be consistent

[16:46:01.0000] <benschwarz>
maybe I actually mean apple then—it does it with my gmail account on my iphone :)

[16:51:00.0000] <AryehGregor>
TabAtkins, odd.

[16:52:00.0000] <AryehGregor>
So it is.

[16:52:01.0000] <AryehGregor>
I wonder how that happened.

[16:52:02.0000] <AryehGregor>
You'd think Google would know my native language by this point.

[16:53:00.0000] <Philip`>
zewt: I'd assume the argument would be that people will think "delete" is permanent, and will accidentally delete stuff and be unhappy, whereas the "trash" metaphor makes them realise there's somewhere they can look to pull it back out

[16:54:00.0000] <Philip`>
/me has no idea how much metaphors actually matter in reality

[16:57:00.0000] <zewt>
philip: but gmail does call "move to trash" "delete", so the gmail UI team apparently thinks it's okay, at least

[16:58:00.0000] <Philip`>
Maybe they just ran out of space on their buttons

[16:59:00.0000] <zewt>
probably most users never touch deleted items anyway and just don't care

[16:59:01.0000] <zewt>
and people advanced enough to care are advanced enough to not get confused over that

[16:59:02.0000] <zewt>
wishful thinking, maybe


2011-09-08
[23:12:00.0000] <jacobolus>
if I want to make a cursor that changes as I pan around the canvas, the best way to do that is by making my own collision detection on mousemove and then adding changing the "cursor" css attribute by adding/removing classes?

[23:16:00.0000] <roc>
probably

[01:01:00.0000] <sicking>
annevk2: ping

[01:01:01.0000] <annevk2>
yeah?

[01:02:00.0000] <sicking>
annevk2: so apparenly the DOM-Core spec isn't compatible with ACID3 :(

[01:02:01.0000] <annevk2>
well yeah, we knew that

[01:02:02.0000] <sicking>
annevk2: specifically some of the doctype changes makes you loose a point if you implement them

[01:02:03.0000] <annevk2>
yes we said that before we made the changes

[01:03:00.0000] <sicking>
annevk2: have you talked to the people at opera that would implement this how they plan to deal with it

[01:03:01.0000] <sicking>
annevk2: i poked Hixie and Håkon, but got no answer

[01:04:00.0000] <annevk2>
I think Ms2ger made the relevant changes to DOCTYPE

[01:04:01.0000] <sicking>
in the past Hixie hasn't wanted to change ACID3 without an ok from Håkon (don't know the history there)

[01:05:00.0000] <annevk2>
I have once tried to change Acid3 and I believe Håkon wants some kind of explicit endorsement from all vendors and only wants to do it once or so

[01:05:01.0000] <sicking>
annevk2: ok, i'll mail the list i guess

[01:05:02.0000] <annevk2>
It's pretty crazy

[01:05:03.0000] <annevk2>
I think it is easier to just ignore Acid3

[01:05:04.0000] <sicking>
annevk2: hah, yeah, good luck

[01:05:05.0000] <sicking>
annevk2: especially for the implementations that have 100 points right now

[01:06:00.0000] <annevk2>
I was planning on blogging on it at some point

[01:06:01.0000] <annevk2>
Not sure if that helps, but sometimes it does

[01:10:00.0000] <sicking>
annevk2: i suspect you won't see Opera or webkit implementing DOM4 as things stand. So blogging can only help

[01:29:00.0000] <zcorpan>
clearly the test needs to change if we all agree to change the spec and want to implement the spec

[01:30:00.0000] <zcorpan>
and if we agree on what the spec should say, it shouldn't be hard to get endorsement from the relevant vendors, right?

[01:33:00.0000] <jgraham>
Yeah, this seems like it ought to be a non-problem

[01:34:00.0000] <jgraham>
I mean it is purely political

[01:34:01.0000] <jgraham>
Which, I suppose, isn't quite the same thing

[01:36:00.0000] <jgraham>
I presume the approach would be to make either behaviour allowed. In which case it shouldn't matter how many changes we make to ACID3 because no one will ever lose points

[01:36:01.0000] <annevk2>
howcome wanted full agreement, only once-per-decade, and the original test had to be available

[01:37:00.0000] <annevk2>
I don't think that is a good idea personally

[01:37:01.0000] <jgraham>
What is a good idea?

[01:37:02.0000] <annevk2>
once-per-decade

[01:37:03.0000] <jgraham>
Right, that's silly

[01:37:04.0000] <jgraham>
Håkon might be overestimating how useful ACID3 is or how much people care

[01:38:00.0000] <annevk2>
I think we should simply comment the tests out, fwiw

[01:38:01.0000] <jgraham>
That would fit "either behaviour is allowed"

[01:39:00.0000] <jgraham>
(the thing about the original test being avaliable has already failed, so that seems like a bogus requirement too)

[01:51:00.0000] <Ms2ger>
Acid3, the curse that keeps on giving?

[02:07:00.0000] <annevk>
Sort of like Acid2

[02:07:01.0000] <annevk>
Fortunately we got comment handling changed in the end

[02:09:00.0000] <annevk>
And here I thought I would never RT jreschke

[02:12:00.0000] <hsivonen>
why is this now blocking on howcome? IIRC, SVG font thing blocked on someone else at Opera instead

[02:13:00.0000] <annevk>
that falls under there being no vendor consensus

[02:13:01.0000] <jgraham>
hsivonen: Ask Hixie. If it's a conspiracy, no one told me :)

[02:15:00.0000] <hsivonen>
every main stream tech media browser comparison that I've read in the past 18 months has used Acid3 cluelessly

[02:15:01.0000] <hsivonen>
also html5test.com cluelessly

[02:16:00.0000] <hsivonen>
but then I haven't read that many comparisons. the correct number is probably just 2

[02:16:01.0000] <Ms2ger>
/me is reminded of http://xkcd.com/528/

[02:18:00.0000] <zcorpan>
Ms2ger: you mean acid4 should be a picture of hitler?

[02:19:00.0000] <Ms2ger>
Yep

[02:30:00.0000] <hsivonen>
I recently read a browser comparison that said Safari uses the WebKit 2 engine but Chrome uses the WebKit engine

[02:30:01.0000] <hsivonen>
boom. in your face Chrome. Safari is twice as advanced

[02:33:00.0000] <woef>
Is there a place where I can read up on the history of the article element. As in, "why was it introduced in the first place"?

[02:35:00.0000] <abarth>
hsivonen: i tried to add WebKit3, but my patch was rejected

[02:43:00.0000] <jgraham>
Dear lazy irc: My virtualbox won't do the fit resolutionto window / mouse integration thing, even though I seemed to have installed the guest additions. Ideas?

[02:59:00.0000] <annevk>
oh fuck

[02:59:01.0000] <annevk>
Acid3 prevents Range simplification too

[02:59:02.0000] <divya>
jgraham: w.r.t resolution you can change it in the VM itself

[03:00:00.0000] <annevk>
in particular exception handling

[03:27:00.0000] <annevk>
I wrote http://annevankesteren.nl/2011/09/acid3-problem

[03:27:01.0000] <annevk>
Somewhat hurriedly, improvements welcome

[03:28:00.0000] <annevk>
Will try to write a WHATWG Weekly as well somewhere today

[03:42:00.0000] <zcorpan>
annevk: at least i argued with Hixie when he wrote the test to make a number of things optional to make room for spec changes, like Attr support

[03:43:00.0000] <zcorpan>
but clearly we need more room now

[03:50:00.0000] <zcorpan>
AryehGregor: maybe you can use SDF or the parser test format for serializing DOM

[04:32:00.0000] <smaug____>
anyone with IE9?

[05:06:00.0000] <krijnh>
People should really stop ironing and making tea and coffee at the same time

[05:09:00.0000] <divya>
is that a rhetorical statement krijn

[05:09:01.0000] <divya>
oops

[05:10:00.0000] <krijn>
It makes fuses go booboo

[05:10:01.0000] <krijn>
Totes booboo even

[06:50:00.0000] <annevk>
The Security WG of the W3C is named WAS WG

[07:17:00.0000] <wilhelm>
TabAtkins: ping

[07:19:00.0000] <annevk>
Created http://wiki.whatwg.org/wiki/Acid3 for suggestions on subtests that need changing

[07:19:01.0000] <annevk>
Feedback and improvements welcome

[07:20:00.0000] <zcorpan>
AryehGregor: the createLink command doesn't seem to say to create a new "a" element if the selection has no links

[07:23:00.0000] <zcorpan>
AryehGregor: also, if your selection *contains* a link or several links, i think we just change the href of all the links without messing with them further

[07:24:00.0000] <zcorpan>
AryehGregor: so for [foo<a href=x>x</a>bar<a href=y>y</a>baz], when you do execCommand('createlink','','z'); you should get [foo<a href=z>x</a>bar<a href=z>y</a>baz]

[07:58:00.0000] <annevk>
Ms2ger, parsing and serialization does not extend Document

[07:58:01.0000] <annevk>
Ms2ger, it should

[08:14:00.0000] <annevk>
http://blog.whatwg.org/weekly-parsing-apis

[09:41:00.0000] <dglazkov>
good morning, Whatwg!

[09:55:00.0000] <annevk>
hmm

[09:55:01.0000] <annevk>
it seems somewhat intentional that DOM Parsing does not support document.innerHTML

[10:05:00.0000] <annevk>
I don't even have commit access to DOM Parsing

[11:11:00.0000] <Hixie>
sicking: sorry, i was on vacation, still dealing with backlog of mail

[11:11:01.0000] <Hixie>
i expect i can convince howcome that it makes sense to release an update for acid3 that includes a bunch of changes to take into account intents

[11:12:00.0000] <Hixie>
i'd rather like to avoid making regular updates so it would be good to have a comprehensive list of what needs changing

[11:12:01.0000] <sicking>
Hixie: that would be awesome

[11:13:00.0000] <sicking>
Hixie: i'll see what i can do, but i won't have time to read all of acid3

[11:15:00.0000] <Hixie>
i think anne said he had a wiki page

[11:23:00.0000] <sicking>
Hixie: cool

[11:23:01.0000] <zewt>
http://www.google.com/support/forum/p/gmail/thread?tid=10f874f83050af98&hl=en ugh

[11:29:00.0000] <Philip`>
Perhaps they could add a feature where the recipient of an email can vote +1/-1 on its text style

[11:29:01.0000] <Philip`>
If too many people vote -1, the sender's text style gets reverted to the default and they are forbidden from changing it back to exactly that style again

[11:29:02.0000] <zewt>
voting "it's the reader who decides what his email looks like, not the sender"

[12:15:00.0000] <TabAtkins>
wilhelm: pong

[12:53:00.0000] <hsivonen>
so first it was "boo. HTML5 is too large. remove stuff!" now it's "boo stuff is getting split out of HTML5 the wrong way"

[12:53:01.0000] <TabAtkins>
Don't look for consistency in Shelley's bugs.

[12:53:02.0000] <TabAtkins>
That way lies madness.

[13:37:00.0000] <zcorpan>
hmm. i thought i unsubscribed from public-html-announce. why am i still getting emails?

[13:37:01.0000] <zcorpan>
MikeSmith?

[13:46:00.0000] <jgraham>
TabAtkins: s/for consistency in/at/

[13:46:01.0000] <TabAtkins>
I'll accept that patch.

[14:02:00.0000] <zcorpan>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=14086 - seems like we should add async parsing APIs

[14:13:00.0000] <zcorpan>
we could add something like   void parseAsync(DOMString str, DOMString contentType, Function successCallback, optional Function errorCallback);

[14:13:01.0000] <zcorpan>
to DOMParser

[14:13:02.0000] <zcorpan>
and maybe   void serializeAsync(Node root, Function successCallback, optional Function errorCallback); to XMLSerializer if we want to have async serializing

[14:14:00.0000] <zcorpan>
or we should have completely new APIs for the async cases where you can choose whether you want to parse and serialize as xml or html

[14:33:00.0000] <Philip`>
How about asynchronous JSON parsing?

[14:33:01.0000] <Philip`>
/me wonders if more people would want that than XML/HTML

[14:35:00.0000] <jgraham>
You can do that with a worker ofc

[14:35:01.0000] <jgraham>
Although

[14:35:02.0000] <jgraham>
Since the result might get serialized as json when you postmessage it it isn't obviously a win

[14:36:00.0000] <jgraham>
Unless the browser optimises in a clever way

[14:36:01.0000] <jgraham>
(depends what the use case is, I suppose)

[14:38:00.0000] <Philip`>
Asynchronous doesn't have to mean threaded - when the browser's receiving the serialised message, it could spend 10ms deserialising into the main thread and then do some other work and then deserialise a bit more, and only report there was a message after it's finished slowly deserialising the content

[14:38:01.0000] <Philip`>
(Receiving the serialised message from the worker, that is)

[14:38:02.0000] <jgraham>
true

[14:39:00.0000] <Philip`>
so that shouldn't have to be a blocking operation

[14:39:01.0000] <Philip`>
and doesn't sound like it needs a particularly clever optimisation

[14:40:00.0000] <jgraham>
But if you go JSON -> datastructure -> JSON -> datastructure on something where parsing/serializing is slow enough to matter, doing three times the work doesn't seem that appealing

[14:42:00.0000] <zcorpan>
yeah async json also seems reasonable

[14:42:01.0000] <smaug____>
Hixie: any chance you could remove assertEquals(doctype.ownerDocument, null, "doctype's ownerDocument was wrong after creation"); before modifying acid3 some more?

[14:43:00.0000] <smaug____>
(that doctype thing just happens to block some other work I'm doing)

[14:51:00.0000] <zcorpan>
hmm, an async parser API (whether html, xml or json) could also be streaming

[14:52:00.0000] <zcorpan>
i guess serializer can also be streaming

[14:54:00.0000] <Hixie>
smaug____: yeah, gonna do that probably early next week

[14:57:00.0000] <Hixie>
is http://www.w3.org/Bugs/Public/show_bug.cgi?id=13355 the first escalation for a bug resolved by an "editor's assistant"?

[15:02:00.0000] <smaug____>
Hixie: ok, thanks!

[15:35:00.0000] <zcorpan>
/me sees Hixie has tried almost all games on G+

[15:35:01.0000] <Hixie>
i have?

[15:35:02.0000] <zcorpan>
Hixie: any recommendations?

[15:36:00.0000] <Hixie>
i recommend portal 2

[15:36:01.0000] <Hixie>
or if you have someone to play with, Worms (also available on Steam)

[15:36:02.0000] <Hixie>
Bad Company 2 is also pretty good though I haven't played for a while and I hear a sequel is gonna be out soon

[15:38:00.0000] <zcorpan>
they aren't on G+ :)

[15:38:01.0000] <Hixie>
i stand by my recommendations :-P

[15:39:00.0000] <zcorpan>
ok :)

[15:39:01.0000] <wilhelm>
Hixie: BF3 looks fantastic.

[15:40:00.0000] <Hixie>
so long as you can blow houses to pieces with explosives, i'm game

[15:46:00.0000] <wilhelm>
Much more so than in the previous games.

[15:46:01.0000] <Hixie>
jgraham: even with making the spec smaller, i'm still getting 504s pretty regularly now

[15:46:02.0000] <Hixie>
jgraham: i'd ray about 50% of the time at least

[15:46:03.0000] <Hixie>
wilhelm: really!

[15:46:04.0000] <Hixie>
wilhelm: eeenteresting

[15:51:00.0000] <wilhelm>
Hixie: http://www.youtube.com/watch?v=uQmAdukloJQ <- C4

[15:52:00.0000] <Hixie>
wilhelm: that doesn't really show what happens to the building, but it does look cool

[15:57:00.0000] <Hixie>
jgraham: uh, &#x00FF; used to turn into &yuml; but now turns into &amp;#x00FF;

[15:59:00.0000] <Hixie>
how does that even happen

[16:00:00.0000] <zcorpan>
lxml b0rkedness?

[16:00:01.0000] <Hixie>
why would it change?

[16:01:00.0000] <zcorpan>
dunno. tcp packet boundary happened to be in the middle maybe?

[16:01:01.0000] <Hixie>
that would be precious

[16:01:02.0000] <timeless>
heh

[16:02:00.0000] <Hixie>
wow i think you might be right

[16:02:01.0000] <Hixie>
that's fantastic

[16:02:02.0000] <Hixie>
i added a comment just before it and it fixed it

[16:03:00.0000] <zcorpan>
heh

[16:04:00.0000] <zcorpan>
hmm, past bedtime for me

[16:05:00.0000] <zcorpan>
/me waves

[16:06:00.0000] <Hixie>
later


2011-09-09
[17:29:00.0000] <AnselmBradford>
hi all, I'm looking at the example for the "dirname" attribute in the specification 4.10.7.2.2

[17:29:01.0000] <AnselmBradford>
and the example has 'dirname="comment.dir"'

[17:30:00.0000] <AnselmBradford>
doesn't that mean there should be an input field in the form with the id='comment.dir'?

[17:31:00.0000] <AnselmBradford>
as dirname is supposed to specify the form control that contains directionality information for a particular input

[17:31:01.0000] <AnselmBradford>
here's the example: http://www.whatwg.org/specs/web-apps/current-work/multipage/common-input-element-attributes.html#the-dirname-attribute

[17:31:02.0000] <TabAtkins>
You misunderstand how it works.  @dirname tells the form what name to use to submit the directionality of the input.

[17:31:03.0000] <TabAtkins>
The directionality of the input is inherent to the input itself; it's not given by another control.

[17:33:00.0000] <AnselmBradford>
TabAtkins: Thanks, yeah I'm confused by it... particularly this bit:

[17:33:01.0000] <AnselmBradford>
"A form control dirname attribute on a form control element enables the submission of the directionality of the element, and gives the name of the field that contains this value during form submission."

[17:34:00.0000] <TabAtkins>
"field" does not mean "form control".  It means the key part of the form submission, like "example.com?key=value"

[17:35:00.0000] <AnselmBradford>
ahh, right okay

[17:36:00.0000] <AnselmBradford>
is this supported by any browsers... I can't seem to get the examples I've found to work?

[17:36:01.0000] <TabAtkins>
Don't think anyone does it yet.

[17:37:00.0000] <AnselmBradford>
okay, thanks, that makes sense now :)

[17:37:01.0000] <TabAtkins>
excellent

[23:54:00.0000] <Hixie>
othermaciej: thanks (re mail to public-html)

[00:31:00.0000] <annevk>
zcorpan, are you sure parsing is the problem?

[00:31:01.0000] <annevk>
zcorpan, and not say, the painting?

[00:31:02.0000] <annevk>
zcorpan, and layout

[00:37:00.0000] <annevk>
Hixie, which differences were removed?

[00:37:01.0000] <Hixie>
some paragraph that was only in the w3c copy was removed after someone filed a bug on it

[00:38:00.0000] <Hixie>
(it was a pretty meaningless paragraph)

[00:38:01.0000] <Hixie>
(with lots of errors)

[00:44:00.0000] <annevk>
doesn't HTML suggest using <pre><code>?

[00:44:01.0000] <annevk>
re: replacement <xmp>

[01:44:00.0000] <zcorpan>
Hixie: "To represent a block of computer code, the pre element can be used with a code element" http://www.whatwg.org/specs/web-apps/current-work/complete/grouping-content.html#the-pre-element

[03:01:00.0000] <annevk>
"Just make every object constructable, it'll work!"

[03:01:01.0000] <annevk>
tralalala

[03:05:00.0000] <zcorpan>
Hixie: thanks for fixing racyness with video

[03:42:00.0000] <annevk>
zcorpan, btw, see the logs

[03:42:01.0000] <annevk>
I doubt parsing is that slow

[03:50:00.0000] <jgraham>
annevk: If it is on XHR, how would painting or alyout make a difference?

[03:51:00.0000] <jgraham>
The original complaint was that getting responseXML was slow

[03:52:00.0000] <jgraham>
Which it could be if you XHR in tens of megabytes of document

[03:58:00.0000] <annevk>
I thought it was getting and inserting it

[03:59:00.0000] <jgraham>
Hmm, possibly I didn't read closely, I'm not sure. You would have thought that someone complaining would do basic profiling of where the slowness actually is

[03:59:01.0000] <jgraham>
But, yeah…

[04:00:00.0000] <hsivonen>
annevk: why is SVG fonts only on a "maybe" list for Acid3 update? after Mozilla and Microsoft refusing to implement and after seeing that Opera and WebKit aren't aiming for a complete impl

[04:00:01.0000] <hsivonen>
(and the typical arguments in favor of SVG fonts assume a complete impl)

[04:00:02.0000] <annevk>
I did not put it there

[04:00:03.0000] <jgraham>
Today's lesson: living standards need living testsuites

[04:03:00.0000] <hsivonen>
so about 15% of Acid3 is suspect

[04:04:00.0000] <annevk>
If you go by the number of tests, but the actual problems are within those tests, so it's probably more like 5%

[04:05:00.0000] <annevk>
Well, SVG Animation and SVG Fonts are 5% together, so a little more

[04:08:00.0000] <annevk>
So the political party I support just launched a magazine fully in Flash. Uh what.

[04:09:00.0000] <hsivonen>
annevk: I guess you have to stop voting for them now.

[04:10:00.0000] <smaug____>
dropping SVG animation is new to me

[04:12:00.0000] <zcorpan>
annevk: what was it about parsing?

[04:12:01.0000] <zcorpan>
oh, async api?

[04:12:02.0000] <annevk>
zcorpan, yes

[04:13:00.0000] <zcorpan>
i thought the use case didn't involve layout at all but just parse a big chunk of xml

[04:13:01.0000] <zcorpan>
the bug said that the parsing operation was blocking the main thread and that was a problem

[04:14:00.0000] <zcorpan>
but we need to study use cases before designing new apis...

[04:15:00.0000] <zcorpan>
maybe we should have a way to parse right into an element in an async way so that it gets rendered incrementally if the use case is to get it on the screen

[04:15:01.0000] <annevk>
EV fail / Apple fail: http://www.computerworld.com/s/article/9219669/Mac_OS_X_can_t_properly_revoke_dodgy_digital_certificates

[04:16:00.0000] <annevk>
By the way, is there any copy of HTML still alive  that has that data provider idea still in it?

[04:16:01.0000] <annevk>
I think Philip` experimented a bit with it and then it got removed

[04:16:02.0000] <annevk>
So not <datagrid>, but the other one

[04:17:00.0000] <zcorpan>
the repetition template replacement?

[04:18:00.0000] <annevk>
yeah maybe

[04:20:00.0000] <jgraham>
The one that 3 people understood?

[04:22:00.0000] <zcorpan>
i think it's not kept alive anywhere

[04:23:00.0000] <zcorpan>
if you want it you need to find a rev that has it

[04:24:00.0000] <annevk>
damn it

[04:25:00.0000] <annevk>
data templates

[04:25:01.0000] <annevk>
http://html5.org/r/2319

[05:04:00.0000] <zcorpan>
removing SMIL from SVG seems overly optimistic

[05:05:00.0000] <zcorpan>
maybe SMIL in SVG can be simplified but i doubt it can be removed altogether at this point

[05:08:00.0000] <zcorpan>
heh http://xkcd.com/949/

[05:08:01.0000] <annevk>
see publix-fx

[05:08:02.0000] <annevk>
also Microsoft does not support it

[05:10:00.0000] <annevk>
Yet another language from Google: http://gotocon.com/aarhus-2011/presentation/Opening%20Keynote:%20Dart,%20a%20new%20programming%20language%20for%20structured%20web%20programming

[05:13:00.0000] <annevk>
More on Dart here: http://markmail.org/message/uro3jtoitlmq6x7t

[05:18:00.0000] <wilhelm>
… Computational theologist.

[05:21:00.0000] <jgraham>
Is it only me that is reminded of ES4?

[05:21:01.0000] <jgraham>
I wonder if Google will succeed where Mozilla failed

[05:25:00.0000] <annevk>
I also wonder how they intend this fork to work.

[05:25:01.0000] <annevk>
Switching the scripting language on a page might be tricky.

[05:27:00.0000] <jgraham>
Allowing javascript and another language to both operate on the same page seems… tricky

[05:27:01.0000] <jgraham>
Using a "first langauge wins" policy might be easier

[05:27:02.0000] <jgraham>
But it makes it even harder to deploy

[05:28:00.0000] <Philip`>
jgraham: I thought the problem with ES4 is that browser vendors couldn't agree on it, which Google seems to be avoiding by being willing to do everything itself

[05:28:01.0000] <jgraham>
I thought the problem was the Microsoft vetod it

[05:29:00.0000] <jgraham>
I assume that Google won't implement it for IE

[05:29:01.0000] <Philip`>
(Then other vendors will be pressured into implementing it so that Gmail isn't much slower in their browser than in Chrome)

[05:29:02.0000] <jgraham>
Well that is the interesting thing

[05:29:03.0000] <jgraham>
Whether people will have to implement it because of Google properties

[05:31:00.0000] <benjoffe>
has twitter made a public statement as to why they're preferring '#!' urls over using the html5 history api?

[05:32:00.0000] <benjoffe>
I mean they have full time front-end devs, this must be intentional

[05:32:01.0000] <miketaylr>
they blogged once about some bug in safari's implementation

[05:32:02.0000] <miketaylr>
http://www.adequatelygood.com/2011/2/Thoughts-on-the-Hashbang

[05:33:00.0000] <miketaylr>
hmm maybe wrong link

[05:39:00.0000] <zcorpan>
annevk2: should getElementsByTagNameNS use [TreatNullAs=Empty] for the first argument?

[05:40:00.0000] <annevk>
namespaceURI returns null never the empty string

[05:40:01.0000] <annevk>
so we want to treat the empty string as null

[05:40:02.0000] <annevk>
not the other way around...

[05:41:00.0000] <annevk>
next time we design this API namespaceURI would return the empty string of course

[05:47:00.0000] <zcorpan>
i don't follow. my question is if we want teh following to be equivalent: ...NS(null, 'foo') and ...NS('', 'foo')

[05:47:01.0000] <zcorpan>
or ...NS(null, 'foo') and ...NS('null', 'foo')

[05:51:00.0000] <annevk>
the former I think with the empty string being treated as null

[05:51:01.0000] <annevk>
does seem like that requires changes

[05:53:00.0000] <annevk>
see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Namespaces-Considerations :(

[05:54:00.0000] <annevk>
"In programming languages where empty strings can be differentiated from null, empty strings, when given as a namespace URI, are converted to null."

[05:54:01.0000] <annevk>
So all NS-methods need to be changed to accepting "DOMString?" and the corresponding algorithms need to match

[05:55:00.0000] <annevk>
Do you agree?

[05:55:01.0000] <annevk>
e.g. this is a problem for createElement etc. too

[05:56:00.0000] <annevk>
hmm

[05:57:00.0000] <annevk>
i see elsewhere we use [TreatNullAs=Empty] and then in the algorithm change empty to null

[05:57:01.0000] <zcorpan>
yeah

[05:57:02.0000] <annevk>
TreatEmptyAs=Null would be cool

[05:58:00.0000] <annevk>
or DOMStringNS :p

[05:58:01.0000] <zcorpan>
whether we use DOMString? or [TreatNullAs=Empty] seems like an editorial issue

[05:58:02.0000] <annevk>
I think I will go with DOMString? then

[05:59:00.0000] <annevk>
so you don't need double-conversion if your implementation generates stuff based on the IDL

[06:21:00.0000] <annevk>
http://www.mnot.net/blog/2011/08/24/distributed_hungarian_notation_doesnt_work

[06:21:01.0000] <annevk>
Instead of using Sec- to prevent XMLHttpRequest clients, update the list of headers to block by XMLHttpRequest and have aggressive browser update cycles...

[06:24:00.0000] <Philip`>
Doesn't need to be part of the browser upgrade cycle, it could just be a centrally-located list that they download every few days

[06:26:00.0000] <annevk>
It seems rather complicated though

[06:27:00.0000] <annevk>
But maybe it's worth it, Sec- isn't everything either

[06:28:00.0000] <jgraham>
It feels a bit fragile

[06:32:00.0000] <heycam>
just dropping in to say I'm on vacation for the next 4 weeks, see you all later

[06:33:00.0000] <jgraham>
It's not nice to gloat :p

[06:33:01.0000] <heycam>
/me smiles, waves

[06:34:00.0000] <annevk>
zcorpan, changed the specification

[06:35:00.0000] <annevk>
Damn it, now I can't complain about exceptions for a month

[06:35:01.0000] <annevk>
Maybe I should go on vacation too :)

[06:35:02.0000] <jgraham>
You can *complain*

[07:57:00.0000] <donri>
i'm sure this has been asked before so please excuse me :) why does html5 keep the form[@method] restriction and leave out other useful verbs?

[07:58:00.0000] <annevk>
because other verbs would need a same-origin restriction

[07:58:01.0000] <donri>
is it different from POST?

[07:58:02.0000] <annevk>
and because we could not figure out the details of how that would work

[07:59:00.0000] <annevk>
to deployed servers everything is different from POST/GET when it comes to requests carrying cookies

[07:59:01.0000] <annevk>
or to requests where you identify with IP address or some such

[08:01:00.0000] <donri>
not sure i understand. isn't it up to the application that probably also sent the form?

[08:06:00.0000] <annevk>
donri, those are same-origin typically

[08:06:01.0000] <annevk>
with cross-origin all bets are off

[08:07:00.0000] <annevk>
and forms can request cross-origin by default, so changing what they can request is dangerous

[08:08:00.0000] <donri>
don't quite see the issue if it's a different method to have different behavior but ok, thanks ):

[08:08:01.0000] <donri>
:) *

[09:02:00.0000] <AryehGregor>
zcorpan, I'd reply, but you vanished.  :(  Not sure what the context of your message was: is this review of the spec, or explanation of Opera's behavior, or whaT?

[09:02:01.0000] <AryehGregor>
what?

[09:02:02.0000] <annevk>
http://www.guardian.co.uk/books/2011/sep/07/michael-moore-hated-man-america is terrible, but "You ever see a Navy Seal get stabbed? The look on their face is the one we have when we discover we're out of shampoo." is pretty funny

[09:20:00.0000] <timeless>
hrm, webidl people?

[09:21:00.0000] <timeless>
[Callback=FunctionOnly, NoInterfaceObject] interface MyCallback { void looped(); }

[09:22:00.0000] <timeless>
interface Silly { [Constructor] Silly([TreatNonCallableAsNull] MyCallback looped); }

[09:22:01.0000] <timeless>
afaict, that isn't allowed and probably isn't allowed for a couple of reasons

[09:22:02.0000] <timeless>
none of which seem good

[09:23:00.0000] <timeless>
grr, no heycam either?

[09:24:00.0000] <Philip`>
timeless: "13:35 < heycam> just dropping in to say I'm on vacation for the next 4 weeks, see you all later"

[09:24:01.0000] <timeless>
Philip`: thanks

[09:24:02.0000] <timeless>
Philip`: do you happen to speak webidl at all? :)

[09:25:00.0000] <timeless>
or perhaps jwalden ?

[09:25:01.0000] <Philip`>
Only the really easy bits

[09:25:02.0000] <jwalden>
timeless: not fluently, I've only really interacted with it to the extent needed to describe how it affects JS bindings

[09:25:03.0000] <timeless>
that should be sufficient

[09:26:00.0000] <jwalden>
and even there it's been more hands-offish

[09:26:01.0000] <timeless>
can i get you to consider:

[09:26:02.0000] <timeless>
[Callback=FunctionOnly, NoInterfaceObject] interface MyCallback { void looped(); }

[09:26:03.0000] <timeless>
interface Silly { [Constructor] Silly([TreatNonCallableAsNull] MyCallback looped); }

[09:27:00.0000] <jwalden>
these verbs may exceed my vocabulary, but go on

[09:27:01.0000] <timeless>
so...

[09:27:02.0000] <timeless>
use case, i want to have a Silly interface which demands a MyCallback

[09:27:03.0000] <timeless>
it doesn't want a null MyCallback, that would be too silly

[09:27:04.0000] <timeless>
oh, hrm

[09:28:00.0000] <timeless>
i guess i don't need treatnoncallableasnull

[09:28:01.0000] <timeless>
because normally it'd just get a type error

[09:28:02.0000] <timeless>
/me is too used to JS coersion in gecko

[09:28:03.0000] <timeless>
ok, ... some handwaving as i change my example :)

[09:30:00.0000] <timeless>
assume i was ok w/ people passing garbage, so i had s/MyCallback looped/MyCallback? looped/

[09:31:00.0000] <timeless>
/me sighs

[09:31:01.0000] <timeless>
/me rewrites the example

[09:31:02.0000] <timeless>
thanks for listening :)

[09:38:00.0000] <dglazkov|away>
good morning, Whatwg!

[11:30:00.0000] <jgraham>
OK, this is not hard people

[11:31:00.0000] <jgraham>
If, for whatever dumb reason, you decide to use tabs to indent in a file

[11:31:01.0000] <jgraham>
and you have one line of code that is split over multiple lines in the file

[11:32:00.0000] <jgraham>
and, for aesthetic reasons you want some special alignment on the lines that doesn't correspond to a whole number of tabstops at the start of each line

[11:32:01.0000] <jgraham>
You have to use *tabs then spaces* to get the right alignment

[11:32:02.0000] <jgraham>
*not just spaces at whatever retarded tab width you happen to be using*

[11:33:00.0000] <jgraham>
Alternatively *avoid the whole problem* and *don't use tabs*

[11:33:01.0000] <jgraham>
Thank you

[12:02:00.0000] <Hixie>
wait, <xmp> is display:block? damnit i always forget that.

[12:18:00.0000] <zewt>
jgraham: welcome to pointless waste-of-time holy war

[12:19:00.0000] <zewt>
make sure your tabs are on the standard multiple-of-8-spaces so it works everywhere and move on with life

[12:39:00.0000] <Hixie>
anyone know about 'caller' being removed? do i just have to remove 'caller' from all my IDLs and then add this for document.all?:

[12:39:01.0000] <Hixie>
  <p>In addition to the above, <code>HTMLAllCollection</code> objects,

[12:39:02.0000] <Hixie>
  in JavaScript, must be callable. Calling such an object must

[12:39:03.0000] <Hixie>
  implicitly invoke the index getter with the same arguments.</p>

[13:20:00.0000] <TabAtkins>
jgraham: Alternately, use tabs like a sane person, and let your code editor intelligently do a visual wrap for you.

[13:20:01.0000] <TabAtkins>
jgraham: But otherwise, yes, a thousand times yes, tab to the same indent, then use spaces.

[13:30:00.0000] <Hixie>
TabAtkins: would you be interested in giving a talk at https://sites.google.com/site/doceng2011/symposium/workshops ? it's at google

[13:30:01.0000] <Hixie>
or anyone else for that matter

[13:33:00.0000] <TabAtkins>
Hixie: Looking at th eother talks, I don't think I can contribute anything topical.

[13:45:00.0000] <Hixie>
they're just looking for someone who can give an "inspirational talk" on html5

[13:48:00.0000] <Hixie>
what's the right list to e-mail to get input on browser vendors' future plans regarding svg?

[13:48:01.0000] <Hixie>
www-svg?

[13:48:02.0000] <Hixie>
public-svg?

[13:50:00.0000] <shepazu>
www-svg, I'd think

[13:52:00.0000] <Hixie>
k

[15:27:00.0000] <AryehGregor>
Ouch, I didn't even think of this: http://www.daemonology.net/blog/2011-09-01-Iran-forged-the-wrong-SSL-certificate.html

[15:30:00.0000] <AryehGregor>
(Chrome isn't vulnerable, of course, due to cert pinning)

[15:45:00.0000] <zewt>
personally, i'm not thrilled about the idea of giving google the ability to run scripts on all of those sites in the first place

[15:45:01.0000] <AryehGregor>
There's not much alternative if you want the functionality.

[15:50:00.0000] <zewt>
there could be; maybe if there was a way of creating cross-origin workers

[15:57:00.0000] <AryehGregor>
How would that help?

[15:57:01.0000] <AryehGregor>
What might make sense is putting it in an iframe instead of a <script>.

[15:58:00.0000] <AryehGregor>
I assume there's some reason they don't do that, though.

[15:58:01.0000] <AryehGregor>
Realistically, it's a convenience-security tradeoff that leans toward convenience for almost all sites.

[16:00:00.0000] <zewt>
well, a sandboxed API (messaging)

[16:00:01.0000] <zewt>
there's also a performance tradeoff, though, which I'm sure is critical for GA

[16:21:00.0000] <Hixie>
jgraham: 504 again

[16:38:00.0000] <Hixie>
does hallvord ever hang out on irc?

[16:39:00.0000] <zewt>
MICROSOFT PROPOSAL: Close the bug - This bug is from an anonymous contributor ...

[16:39:01.0000] <zewt>
heh

[16:40:00.0000] <Hixie>
annevk: you around?

[16:40:01.0000] <Hixie>
what is it i have to do to make events constructible again?


2011-09-10
[17:36:00.0000] <weinig>
Hixie: I think you can just copy the model from CustomEvent

[17:36:01.0000] <weinig>
Hixie: http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#interface-customevent

[17:36:02.0000] <Hixie>
yeah i started doing that

[17:36:03.0000] <weinig>
Hixie: give the interface a constructor

[17:36:04.0000] <weinig>
[Constructor(DOMString type, optional CustomEventInit eventInitDict)]

[17:37:00.0000] <weinig>
ok, which one are you speccing?

[17:37:01.0000] <Hixie>
all the ones in the whatwg spec

[17:37:02.0000] <Hixie>
moving them from init*Event to the constructor model

[17:37:03.0000] <weinig>
excellent

[17:39:00.0000] <Hixie>
yeah i've been putting off doing it for a while

[17:40:00.0000] <weinig>
has been putting off landing the implementation for a while :\

[17:40:01.0000] <weinig>
I finally got Event and CustomEvent into nighties of WebKit though \o/

[17:41:00.0000] <Hixie>
cool

[17:41:01.0000] <weinig>
now there is no going back :)

[17:42:00.0000] <Hixie>
yeah the new model is so much better

[17:42:01.0000] <weinig>
/me nods

[18:52:00.0000] <Hixie>
is "Foo[]?" valid WebIDL syntax?

[18:53:00.0000] <Hixie>
for a nullable array type?

[22:47:00.0000] <Hixie>
hmm, that's annoying

[22:48:00.0000] <Hixie>
position:relative affects all position:absolute descendants

[22:49:00.0000] <Hixie>
so you can't have a descendant that uses one containing block while the other uses another

[22:50:00.0000] <Hixie>
e.g. the "IDL" :before labels for class=idl blocks and the .status boxes in those same blocks

[22:50:01.0000] <Hixie>
grr

[22:52:00.0000] <dbaron>
Yeah, the 'position' property was pretty much all wrong...

[22:55:00.0000] <Hixie>
is calc() implemented by anyone yet? i've worked around this by changing the way the positioning works for the IDL boxes, but now I have to have the margin-top be -0.625em-1px

[22:56:00.0000] <Hixie>
(actually even better would be -(0.5em*1rem/small + thin) where small is the font-size keyword and thin is the border-width keyword)

[23:27:00.0000] <dbaron>
Hixie, calc() is implemented, with prefixes, by IE and Gecko

[23:27:01.0000] <dbaron>
Hixie, actually, not sure if IE used prefixes...

[23:28:00.0000] <Hixie>
prefixes are too much of a pain to use for me to consider them implemented

[23:28:01.0000] <Hixie>
why are we still prefixing it, anyway?

[23:28:02.0000] <Hixie>
wasn't that specced like half a decade ago?

[23:28:03.0000] <Hixie>
(for me to consider them implemented enough to use, i mean)

[23:29:00.0000] <dbaron>
hopefully we'll get that draft to CR sometime early next year...

[23:30:00.0000] <Hixie>
it strikes me that the csswg might be the group that would benefit the most from dropping the whole TR process

[23:31:00.0000] <dbaron>
we'd still need to make coherent decisions about when to drop prefixes

[23:32:00.0000] <dbaron>
anyway, 'night

[03:42:00.0000] <annevk>
Hixie, so lazy

[03:42:01.0000] <annevk>
(re automatic event constructors)

[03:58:00.0000] <zcorpan>
AryehGregor: both

[04:18:00.0000] <annevk>
"must be implementation-, device-, and platform-specific"

[04:18:01.0000] <annevk>
the more I read DOM Level 3 Events, the more confused I get

[05:04:00.0000] <bga_>
can anybody give me copy of Dash spec? I havn't @google.com mail :(

[05:52:00.0000] <Woodkid>
hello guys

[06:19:00.0000] <zcorpan>
Hixie: btw you're probably better off reimplementing the IDL labels since they are positioned differently in all browsers (i only tested opera when i wrote it so check opera for how i intended it to look)

[09:33:00.0000] <jarek>
Hi

[09:34:00.0000] <jarek>
why window.localStorage.setItem is converting everything to string?

[09:35:00.0000] <jarek>
should I be using JSON.stringify and JSON.parse when passing and retriving data from local storage?

[09:39:00.0000] <bga_>
yes

[13:08:00.0000] <erlehmann>
hsivonen, you once wrote an article on PNG gamma correction vs. CSS colors. is there an easier quick-n-dirty-way to make background / seam colors in PNG match with CSS than using transparency?

[14:37:00.0000] <shetech>
Hey, all. So I have a "I might have been hallucinating" question for the room at large.

[14:38:00.0000] <shetech>
Didn't I at one point see a layout tool for columns, not to be confused with table columns, but newspaper-type column layout?

[14:38:01.0000] <shetech>
Or am I high?

[14:38:02.0000] <shetech>
some element tag that I now can't find

[15:22:00.0000] <shetech>
found it. CSS, not HTML5.

[15:23:00.0000] <zewt>
heh, that's among the worst possible webpage layouts

[15:23:01.0000] <zewt>
pages that make you scroll down and up and down and up

[15:23:02.0000] <shetech>
zewt: tell me more

[15:23:03.0000] <shetech>
ah

[15:23:04.0000] <shetech>
that assumes your content is that lengthy

[15:24:00.0000] <zewt>
magazines are laid out the way they are to deal with the paper medium; a webpage is completely different and that doesn't make sense

[15:24:01.0000] <zcorpan>
well there was <multicol>

[15:24:02.0000] <zewt>
(fortunately, it's not a common one; much more common are pages that reduce text to a three-word column, which is perhaps even more painful)

[15:25:00.0000] <shetech>
I can think of a number of uses for multiple columns, but I wouldn't use it as a <body> style, for example (yikes).

[15:25:01.0000] <shetech>
I'm thinking of a CMS that's very content-rich

[15:25:02.0000] <shetech>
where interior pages might have article columns

[15:26:00.0000] <shetech>
and I'd want the flow to work automatically

[15:27:00.0000] <shetech>
zewt: I totally get it about paper vs. web, but I can still imagine web uses, as long as the designer followed some basic best practices (keeping stuff above the fold, for example)

[15:27:01.0000] <zewt>
... please don't fold my monitor

[15:27:02.0000] <shetech>
has anyone seen how this might behave in a mobile medium, and how graceful is the transition?

[15:27:03.0000] <shetech>
zewt: hee

[15:27:04.0000] <zewt>
(seriously after as many years as I've used this stuff I still have no idea what "the fold" is supposed to mean in a web context)

[15:28:00.0000] <shetech>
ah

[15:28:01.0000] <shetech>
"fold" in web context is anything that naturally falls in a screen without the need to scrolling. Anything below that scroll line is "below the fold"

[15:28:02.0000] <shetech>
Of course, that changes depending on screen resolution

[15:29:00.0000] <zewt>
sometimes it seems to mean "the text after our broken, worthless rss feed text ends" (by people who have broken "summary" rss feeds instead of full-text ones)

[15:29:01.0000] <shetech>
so it's a slippery slope to define a "best practice"

[15:29:02.0000] <zewt>
shepazu: but people seem to say it at the end of a block fo text--by the time you get there you've scrolled down a ways anyway, so it no longer makes sense, heh

[15:29:03.0000] <shetech>
zewt: I haven't heard it used in that context

[15:30:00.0000] <shetech>
rss, I mean

[15:30:01.0000] <zewt>
i seem to recall people saying it referred to ads, too (not sure, abp)

[15:30:02.0000] <zewt>
eg. "after the following giant obnoxious ad" or something like that

[15:30:03.0000] <shetech>
heh

[15:31:00.0000] <shetech>
IF the giant obnoxious ad covers the whole page, I could see that

[15:31:01.0000] <shetech>
but

[15:31:02.0000] <zewt>
putting those together i'm inclined to take it as "a misappropriated term from other media that people use in lots of different ways" :)

[15:31:03.0000] <shetech>
well, yes

[15:31:04.0000] <shetech>
But it's actually appropriate in the context I've heard it, wherein a page design includes stuff at the top of the screen and below that natural scroll line

[15:31:05.0000] <zewt>
if you viewed the page on a ds, would it be called "the hinge"?

[15:32:00.0000] <shetech>
I try to design pages where the calls to action and high-value content fall "above the fold"

[15:32:01.0000] <shetech>
hee. good question.

[15:32:02.0000] <zewt>
those seem like exactly opposite sets of things :)

[15:32:03.0000] <shetech>
depends on your page, dunnit?

[15:32:04.0000] <shetech>
;-)

[15:32:05.0000] <zewt>
("calls to action" being "things that most users don't care about which we're trying to trick them into clicking" vs. actual useful content)

[15:32:06.0000] <zewt>
well, yes :P

[15:33:00.0000] <zewt>
on the vast majority of pages merely being on the page and reading is what the user would call "high-value content", though, and everything else ("sign up for no reason!" "click my stupid banner ads!") is low-value distraction, though

[15:34:00.0000] <zewt>
gotta love the web, where content is that annoying stuff that's distracting the user from signing up for an account

[15:34:01.0000] <shetech>
I've seen some page designs where, for example, a video port covers the entire top half of a page, with no clear call to action or even description of what the video is supposed to be. Ergo, missing both high value content AND a call to action. :D

[15:34:02.0000] <shetech>
yeah

[15:34:03.0000] <zewt>
like i think nyt pops up an obnoxious animated "do something!" (never actually read it) when you scroll near the bottom, when you're still reading

[15:34:04.0000] <shetech>
One man's fertilizer is another man's smelly nuisance

[15:34:05.0000] <zewt>
but crap is always crap

[15:34:06.0000] <shetech>
yeah, I hate that nyt stuff. That's relatively new, and highly annoying

[15:35:00.0000] <shetech>
har! Indeed!

[15:35:01.0000] <shetech>
Well, so I'm trying to instruct readers how to avoid crap as much as possible...

[15:35:02.0000] <shetech>
which includes building pages that are NOT too long

[15:35:03.0000] <shetech>
and that do NOT include annoying popups

[15:35:04.0000] <shetech>
and stuff

[15:35:05.0000] <zewt>
i don't think telling people "don't use popups, they're annoying" is terribly productive

[15:36:00.0000] <shetech>
heh

[15:36:01.0000] <shetech>
well, no

[15:36:02.0000] <zewt>
people know they're annoying

[15:36:03.0000] <shetech>
That was perhaps a bad example

[15:36:04.0000] <zewt>
one thing about the web: you can very quickly tell how highly someone thinks of their own content

[15:36:05.0000] <shetech>
gad. no kidding.

[15:37:00.0000] <shetech>
marketers and content developers often have very different opinions

[15:37:01.0000] <zewt>
if someone cares little enough about what they have to say to have monkeys dancing back and forth across it continuously, i'm not sure why I should care either

[15:37:02.0000] <shetech>
yep.

[15:37:03.0000] <shetech>
agreed.

[15:37:04.0000] <shetech>
look! shiny!

[15:37:05.0000] <shetech>
/me groans

[15:38:00.0000] <shetech>
one thing about columns, though, to your earlier point, is that the human eye can still read columnar content a little easier than a big block of grey-space

[15:38:01.0000] <shetech>
as long as the block containing those columns is, as you suggest, all above a magical scroll line

[15:38:02.0000] <zewt>
that's just a max-width thing, though; and it's very often taken to the point of a fault (eg. the three-word-columns problem)

[15:39:00.0000] <shetech>
yes

[15:39:01.0000] <shetech>
good point

[15:39:02.0000] <zewt>
(even better, when it turns into a column of single words as it flows around an image plonked directly into the text)

[15:39:03.0000] <shetech>
heh

[15:39:04.0000] <shetech>
also a good point

[15:39:05.0000] <zewt>
(i also hate when people apply the "max width is easier to read" idea to code, where it doesn't apply at all)

[15:39:06.0000] <shetech>
ew. no kidding.

[15:40:00.0000] <zcorpan>
the proposal for # in data url seems like magic

[15:40:01.0000] <zewt>
(a very common "argument" for the python-80-columns thing)

[15:40:02.0000] <shetech>
well, I'm writing for dummies, so that may be more detail than I can get into

[15:40:03.0000] <shetech>
:D

[15:41:00.0000] <shetech>
as with most things, there's room for judgment calls

[15:41:01.0000] <shetech>
all we can do is recommend

[15:41:02.0000] <shetech>
anyway, thanks for your insight

[15:41:03.0000] <shetech>
that was helpful


2011-09-11
[18:51:00.0000] <RytoEX>
Good evening!  Does anyone have any idea why HTML5 no longer supports colspan="0" on the TD element?  What was the thought/discussion process that led to that decision?  Thanks!

[08:28:00.0000] <AryehGregor>
zcorpan, currently the spec says to change all existing links that overlap the selection, then make sure the whole selection is a link.  So if you do execcommand('createlink', false, 'x') on <a href=y>fo[o</a>b<a href=z>ar</a>ba]z, you get <a href=x>fo[obarba]</a>z.

[08:29:00.0000] <AryehGregor>
The behavior you describe doesn't make as much sense to me.

[08:29:01.0000] <AryehGregor>
Likewise, per spec, if you do it on <a href=y>f[]oo</a>, it becomes <a href=x>f[]oo</a>.

[08:29:02.0000] <AryehGregor>
This matches IE and word processors, IIRC (check comments in spec to be sure).

[09:20:00.0000] <aho>
are there any browsers which support video files in img tags? (w/o audio of course)

[09:21:00.0000] <aho>
i'm really tired of those gigantic animated gifs

[09:23:00.0000] <rillian>
I don't think so

[09:56:00.0000] <zewt>
that's what <video> is for, not <img>, heh

[10:06:00.0000] <aho>
zewt, yes

[10:07:00.0000] <aho>
but it's a fact that people use gifs for this

[10:08:00.0000] <aho>
video files would be easily 10 times smaller while looking much better

[10:08:01.0000] <aho>
additionally, they would use less ram

[10:08:02.0000] <aho>
(gifs are completely decompressed)

[10:10:00.0000] <Philip`>
Adding a new mechanism for displaying videos wouldn't change any of those facts

[10:12:00.0000] <zewt>
aho: yes, and that's what <video> is for :)

[10:12:01.0000] <aho>
well, people use gifs for these things, because many boards only allow images

[10:13:00.0000] <zewt>
i don't think <img> should be a double for <video> to work around boards not allowing <video> tags yet :)

[10:13:01.0000] <aho>
yes, idealism is a great thing :>

[10:14:00.0000] <zewt>
not idealism at all; and on the web platform, impatience is not a great thing :)

[10:14:01.0000] <zewt>
(also, I don't *want* people to be able to insert videos into their forum signatures)

[10:15:00.0000] <aho>
but you'd be fine with animated gifs which are 10 times larger?

[10:15:01.0000] <zewt>
much lower CPU usage

[10:15:02.0000] <zewt>
vs. firing up a decoder framework

[10:15:03.0000] <zewt>
(or 100 of them for everyone's separate videosig)

[10:17:00.0000] <zewt>
video decoders are hardly optimized for dozens of simultaneous 10-frame 128x128 videos

[10:19:00.0000] <aho>
http://www.lolbrary.com/lolpics/684/rolling-out-the-tarp-fail-6684.gif

[10:19:01.0000] <aho>
3,673,639 bytes

[10:19:02.0000] <zewt>
and if someone puts that in their sig on a forum it should be cleared and they should be banned from setting sigs

[10:20:00.0000] <aho>
no one used that as sig

[10:21:00.0000] <zewt>
so? if that shows up for any reason on a forum the person who caused it to show up should be smacked and it deleted, heh

[10:21:01.0000] <aho>
well, it's from a pure "what people *are* doing" point of view

[10:21:02.0000] <annevk>
zewt, I think encoding < and > is encouraged by the URI specifications

[10:21:03.0000] <aho>
just like people are using gigantig png32 images because there isn't anything better

[10:22:00.0000] <aho>
*gigantic

[10:22:01.0000] <annevk>
zewt, but the URI specifications, well...

[10:22:02.0000] <zewt>
so again, if you want <video> support in forums, get it added directly--html shouldn't be smushing all functionality into a single tag so developers don't need to do any work, heh

[10:22:03.0000] <aho>
if no better alternative is offered, people will continue to use the awful option

[10:22:04.0000] <zewt>
annevk: i've never read it; really I don't even know why we have separate "URL" and "URI" and the whole thing seems nonsense

[10:23:00.0000] <aho>
and we're back to idealism. yes, <video> support would be nice :>

[10:23:01.0000] <zewt>
no, telling developers to implement something isn't "idealism", please stop calling it that

[10:24:00.0000] <zewt>
annevk: any idea *why* it would encourage escaping them?

[10:25:00.0000] <aho>
why not? it's "the right way"™

[10:25:01.0000] <zewt>
uh, no it isn't

[10:25:02.0000] <zewt>
how is conflating <img> with <video> "right"? heh

[10:25:03.0000] <zewt>
or are you saying that doing things the right way is always idealism? heh

[10:26:00.0000] <aho>
derailed. <video> support everyhwere... that's idealistic.... that's "the right way"

[10:26:01.0000] <Philip`>
Maybe someone should write a guide to safely whitelisting a subset of <video> (which presumably shouldn't be hard), then point web developers at that

[10:26:02.0000] <aho>
not the realistic one :>

[10:26:03.0000] <zewt>
there's nothing at all unrealistic about adding support for a <video> tag to forums which already support <img> and a bunch of other tags

[10:27:00.0000] <aho>
it's unrealistic to see that kind of change within the next 10 years

[10:27:01.0000] <aho>
it just wont happen :)

[10:28:00.0000] <Philip`>
It doesn't need to be supported by every site before it'll be useful

[10:28:01.0000] <zewt>
adding the tag to phpbb and other forum software should take a few days; a few years for major forum sites to upgrade to it

[10:28:02.0000] <Philip`>
(unless adding features to browsers, where you need every widely-used browser version to support it before it's useful)

[10:28:03.0000] <zewt>
(as for proprietary, one-off forums; they're their own problem)

[10:28:04.0000] <Philip`>
s/unless/unlike/

[10:29:00.0000] <aho>
so far some forums support youtube

[10:29:01.0000] <aho>
that's it

[10:29:02.0000] <zewt>
you're suggesting either 1: adding a crippled subset of <video> to <img> or 2: massively complicating <img> (forever) so one particular type of website can be lazy, heh

[10:30:00.0000] <zewt>
of course nobody's using video *yet*, since it's still a mess (codecs)

[10:30:01.0000] <zewt>
(sledgehammering it into img wouldn't change that)

[10:30:02.0000] <aho>
you can also put animated svgs into img

[10:30:03.0000] <aho>
i dont really see the difference

[10:30:04.0000] <zewt>
heh surprised http://www.w3.org/Bugs/Public/show_bug.cgi?id=14108 wasn't closed as WONTFIX

[10:31:00.0000] <aho>
figure out the mime type... do the appropriate thing

[10:31:01.0000] <aho>
it already does that

[10:33:00.0000] <zewt>
that's essentially legacy

[10:33:01.0000] <zewt>
(as far as I'm concerned, anyway)

[10:34:00.0000] <zewt>
i dunno, but i'd be a bit annoyed if I ran a site allowing embedded images and suddenly users could embed videos, heh

[10:36:00.0000] <aho>
well... nothing would have changed, really. the only difference is better quality and smaller files

[10:36:01.0000] <zewt>
and much higher CPU use, and possibly audio

[10:36:02.0000] <aho>
as i said, there wouldn't be any audio

[10:36:03.0000] <zewt>
also for the sort of things you want video files for you often want to be able to pause and resume and seek, which img would never give you

[10:37:00.0000] <aho>
just like there is no js execution for svgs

[10:38:00.0000] <aho>
pause, resume, seek, audio, etc... gotta use <video> then

[10:38:01.0000] <zewt>
and unless the codec situation somehow clears up (heh) you'll need some way to supply alternate links with fallback codecs; that'd need site support regardless

[10:43:00.0000] <aho>
basically, i just hate large animated gifs. that's all there is to it

[15:20:00.0000] <gsnedders>
Was NaCL ever bundled into Chrome?


2011-09-12
[04:32:00.0000] <asmodai>
ye gods

[04:32:01.0000] <asmodai>
whole web in uproar over that leaked Google document

[04:35:00.0000] <asmodai>
Ah, I see othermaciej has been replying on Reddit about it :P

[04:43:00.0000] <Philip`>
Being forwarded to a public mailing list by the document's author doesn't sound much like a leak

[04:44:00.0000] <asmodai>
Philip`: Fair point.

[04:45:00.0000] <jgraham>
Depends if he was supposed to make the information public or not really

[04:46:00.0000] <annevk>
http://www.youtube.com/watch?v=lXKDu6cdXLI

[04:46:01.0000] <annevk>
via ojan

[04:47:00.0000] <asmodai>
jgraham: I honestly don't know.

[04:47:01.0000] <asmodai>
Just lovely to see the discussion erupt. People comparing Google to MS now.

[04:48:00.0000] <jgraham>
Well it's not surprising

[04:50:00.0000] <Philip`>
It just seems like another instance of Google thinking they're capable of redesigning the whole web better, and being happy to implement it unilaterally without caring much about the impact on any part of the web Google is not involved in

[04:52:00.0000] <Philip`>
(The whole Dash thing, that is, not specifically the "We will strongly encourage Google developers start off targeting Chrome-only" thing)

[04:53:00.0000] <Philip`>
(or Dart or whatever it is)

[04:55:00.0000] <woef>
It's not really surprising.

[04:56:00.0000] <woef>
Seeing as that's what graceful degradation means to a whole slew of web devs out there.

[04:56:01.0000] <annevk>
http://www.reddit.com/r/programming/comments/kc9ai/internal_googledocument_we_will_strongly/c2j67v2

[04:56:02.0000] <woef>
I've even seen sites that introduced the "works best with browser X" crap again.

[04:57:00.0000] <jgraham>
Yeah, othermaciej's comment is quite insightful

[04:57:01.0000] <annevk>
lol

[04:58:00.0000] <annevk>
in reply to othermaciej

[04:58:01.0000] <annevk>
"If you've followed HTML5 at all, you'll notice how long it's taken"

[05:00:00.0000] <annevk>
come on othermaciej, at least you could follow HTML5

[05:07:00.0000] <zcorpan>
and look up Ian Hickson while you're at it

[05:15:00.0000] <asmodai>
annevk: yeah, I had already replied to that

[05:15:01.0000] <asmodai>
asmodai/ashemedai

[05:18:00.0000] <zcorpan>
asmodai: if you'd followed whatwg/html5 at all you'd known that it didn't exist in 2003 :P

[05:51:00.0000] <asmodai>
zcorpan: haha

[05:51:01.0000] <asmodai>
zcorpan: Well, I just did a whatwg.org search on maciej and the archives showed this and that

[06:10:00.0000] <asmodai>
zcorpan: And my other excuse is that I only follow it on the fringes. ;)

[06:15:00.0000] <zcorpan>
asmodai: :)

[06:52:00.0000] <annevk>
Anyone interested in writing tests for http://dev.w3.org/2006/webapi/progress/ ?

[06:52:01.0000] <annevk>
I think we primarily need tests that follow from DOM4 and Web IDL

[06:52:02.0000] <annevk>
I.e. not tests that follow from requirements in HTML or XMLHttpRequest; that is up to those specifications

[06:54:00.0000] <annevk>
So e.g. is the interface object exposed, can you construct it using new ProgressEvent(), are the right attributes exposed (negative test for initProgressEvent might be nice), etc.

[06:54:01.0000] <annevk>
s/, etc.//

[07:53:00.0000] <MikeSmith>
I think one of the lessons from this weekend is "why beholdest thou the mote that is in thy brother's eye, but considerest not the beam that is in thine own eye?"

[07:59:00.0000] <annevk>
"impassive French man by Karl Dubost"

[08:00:00.0000] <annevk>
:)

[08:00:01.0000] <annevk>
http://www.brucelawson.co.uk/2011/the-web-standards-hoedown/

[08:01:00.0000] <karlcow>
annevk: yup. Not visible in the video, I was moving both of my hips by slight muscular movement. Subtle but enjoying a lot. I abstain to sing to not ruin the full thing ;)

[08:01:01.0000] <annevk>
haha

[08:08:00.0000] <zcorpan>
/me wonders what the devrel team are smoking

[08:15:00.0000] <annevk>
It does seem the VP8 bitstream document is still being developed: http://tools.ietf.org/html/draft-bankoski-vp8-bitstream

[08:15:01.0000] <annevk>
Currently at version 06, expires February next year

[08:20:00.0000] <Philip`>
Presumably only the document is being developed, not the bitstream format itself, given the deployment status?

[08:21:00.0000] <annevk>
I meant the specification

[08:21:01.0000] <Philip`>
"The bitstream is defined by the reference source code and not this narrative." - sounds like documentation, not specification

[08:24:00.0000] <annevk>
https://bugs.webkit.org/show_bug.cgi?id=67882#c21 o_O

[08:28:00.0000] <annevk>
Philip`, hmm yeah

[08:30:00.0000] <zewt>
annevk: rather ... rude

[08:30:01.0000] <zewt>
the whole *finger shake* "shame on you" thing

[08:36:00.0000] <annevk>
So the bitstream stuff is normatively referenced by standards track documents such as http://tools.ietf.org/html/draft-ietf-payload-vp8-01

[08:37:00.0000] <annevk>
http://tools.ietf.org/html/draft-alvestrand-dispatch-rtcweb-protocols is similarly on standards track with normative references but is almost expired

[08:39:00.0000] <zewt>
can we expire this horrible pagination already

[08:40:00.0000] <annevk>
And whatever happened to this? http://fosspatents.blogspot.com/2011/02/royalty-free-mpeg-video-coding-standard.html

[08:40:01.0000] <annevk>
zewt, switching to Unicode is controversial within the IETF, don't count on it

[08:41:00.0000] <zewt>
(didn't ietf specs already stop with the "paginate for 80s printers, 80-column fixed-width" nonsense? thought i saw some at least somewhat less insanely formatted)

[08:41:01.0000] <zewt>
annevk: can still be ascii, they just need to stop pretending people print specs on 66-line-or-whatever-it-is dot matrix printers

[08:42:00.0000] <zewt>
and read specs in 80x25 terminals

[08:44:00.0000] <zewt>
it's just sort of embarrassing for a group claiming to make specs for the modern internet to be so painfully stuck in the old one, heh

[08:45:00.0000] <zcorpan>
wait, you don't print specs?

[08:45:01.0000] <zcorpan>
/me must have missed the memo

[08:45:02.0000] <zewt>
of course not, but certainly not in the fixed resolution of printers from two decades ago :P

[08:46:00.0000] <zewt>
what were they typically, 80x66? 80x55? something like that

[08:55:00.0000] <Philip`>
zewt: Are the less insane ones you saw the HTML output from xml2rfc (like http://xml.resource.org/authoring/README.html)?

[08:57:00.0000] <Philip`>
Change is hard, so I guess having a separate tool that can generate both the obsolete text format and a slightly more readable HTML format is the only practical way to move things forward

[08:58:00.0000] <Philip`>
and then the fuddy-duddies can be happy that there's an unreadable text version of a spec they'll never want to read anyway, while everyone else can use the better version, assuming there's sufficient links between the two that people won't all get stuck on the old version

[08:58:01.0000] <zewt>
not sure; can't find any looking briefly through my history

[08:59:00.0000] <zewt>
seems like if it's so hard just to update formatting from something obviously well over a decade obsolete and in a way that makes things actively harder to read, something is fatally flawed in the organization, heh

[08:59:01.0000] <zewt>
(flaws in the structure of a standards body? never!)

[09:01:00.0000] <zewt>
one might think that if the html wasn't insane you could just apply a different stylesheet ... but, well, it does appear to be insane (everything is a <PRE>)

[09:01:01.0000] <zewt>
i guess you could still style over PRE, just sort of weird

[09:02:00.0000] <zewt>
and the markup is probably not good enough to actually do a usable job that way

[09:06:00.0000] <Philip`>
I guess it's fairly easy to agree that the spec style is obsolete but the hard thing is either deciding what new style to change to (since a dozen different people will have two dozen different ideas for what the standard should be), or being willing to abandon the whole notion of consistent formatting across specs and letting editors have a lot of flexibility and waiting for conventions to emerge naturally

[09:07:00.0000] <zewt>
a standards body that comes to a standstill when they try to come up with a new standard for their own spec formatting? that'd also be embarrassing :)

[09:07:01.0000] <Philip`>
(The W3C approach seems more like the latter option, so every spec looks a bit different and some look very different)

[09:08:00.0000] <Philip`>
A standard for spec formatting is like a whole multi-storey complex of bikesheds :-p

[09:08:01.0000] <jcranmer>
write it in LaTeX

[09:08:02.0000] <jcranmer>
problem solved

[09:09:00.0000] <jcranmer>
10:16  * glazou did that too but went back to bed at 3:10am :-D

[09:09:01.0000] <jcranmer>
10:17 < khuey> it took me till about 3:30 :-P

[09:09:02.0000] <jcranmer>
10:18 -!- You're now known as jcranmer

[09:09:03.0000] <jcranmer>
10:26 < firebot> Check-in: http://hg.mozilla.org/mozilla-central/rev/da2f5b63ba1e - Brian R. Bondy - Bug 685847 - Crash in [@ ILFindLastID ]. r=jimm

[09:09:04.0000] <jcranmer>
10:42 -!- ddahl [ddahl⊙msma] has left #developers [Leaving]

[09:09:05.0000] <jcranmer>
10:59 < smaug> ehsan: why is Node.parentElement "addon-compat" ?

[09:09:06.0000] <jcranmer>
10:59 < smaug> because of uuid change?

[09:09:07.0000] <jcranmer>
10:59 < ehsan> smaug: because it changes the IID of many interfaces

[09:09:08.0000] <jcranmer>
10:59 < ehsan> yes

[09:09:09.0000] <jcranmer>
10:59 < ehsan> that will break all binary addons relying on those interfaces

[09:09:10.0000] <jcranmer>
what the?

[09:11:00.0000] <jgraham>
jcranmer: Next time could you try to do that when you are typing in credit card details or something? I'm sure we could all use some free stuff ;)

[09:14:00.0000] <Philip`>
What could be better than a document writing system where you have to run the document compilation process at least twice after every change else you might end up with randomly incorrect output?

[09:14:01.0000] <jgraham>
One where you have to run it three times?

[09:15:00.0000] <Philip`>
I assume there are some edge cases where you might need to run LaTeX infinite times and it still won't converge

[09:17:00.0000] <Philip`>
/me wonders if there is any sane blog software where you can insert diagrams by writing inline LaTeX with TikZ and having it automatically convert into a nice PNG

[09:17:01.0000] <Philip`>
/me would like something like that

[09:17:02.0000] <zewt>
sounds sort of google-graphsy

[09:21:00.0000] <david_carlisle>
Philip`:  yes, but it's pretty rare  in real document. although easy to generate fake examples

[09:22:00.0000] <zewt>
well, depends on what you're writing...

[09:30:00.0000] <annevk>
smaug____, was http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#TextNodes never implemented in Gecko that you know?

[09:30:01.0000] <annevk>
smaug____, Opera has some oddities because the person who implemented it tried to match the XPath requirements of there only being a single text node

[09:39:00.0000] <smaug____>
annevk: sicking and peterv know about XPath in gecko

[09:41:00.0000] <smaug____>
(...but looking at the source code now...)

[09:43:00.0000] <annevk>
It was a delight to find out wholeText and replaceWholeText were introduced to better match the XML InfoSet!

[09:43:01.0000] <annevk>
thanks smaug____

[10:08:00.0000] <smaug____>
annevk: so, based on testing the result node set can contain two adjacent text nodes in Gecko and Webkit

[10:08:01.0000] <smaug____>
In Opera only one

[10:10:00.0000] <annevk>
if someone is ever going to define XPath and the DOM this willful violation of XPath better be documented

[10:10:01.0000] <annevk>
having said that, we haven't had that much bug reports on the issue

[10:39:00.0000] <annevk>
Isn't there something like Akismet for wikis? I'm getting bored with deleting spam from the WHATWG Wiki

[10:42:00.0000] <AryehGregor>
annevk, there's an Akismet plugin for MediaWiki, IIRC.

[10:42:01.0000] <AryehGregor>
Check mediawiki.org.

[10:42:02.0000] <AryehGregor>
Or at least there's a Project Honeypot one.

[10:44:00.0000] <annevk>
http://www.mediawiki.org/wiki/Extension:AkismetKlik

[10:45:00.0000] <annevk>
I will ask Hixie to install it

[13:17:00.0000] <timeless>
has anyone here seen http://www.dfki.de/~kroener/omm/omm_format_spec_0_98.pdf ?

[13:20:00.0000] <timeless>
or perhaps http://www.w3.org/2005/Incubator/omm/charter

[13:21:00.0000] <annevk>
omnomnom charter?

[13:24:00.0000] <timeless>
omnomnom reminds me of cookie monster

[13:24:01.0000] <timeless>
cookie monster was my friend

[13:24:02.0000] <timeless>
the sponsors of this are just monsters

[13:24:03.0000] <timeless>
(the above is my personal opinion and doesn't represent my employer's)

[13:25:00.0000] <timeless>
awesome

[13:25:01.0000] <timeless>
Special Note: If this tag is given it must be the _last_ tag in the <omm:block> section!

[13:26:00.0000] <timeless>
(there are a number of tags with the same special note)

[13:28:00.0000] <Philip`>
timeless: I see two with that note, and they are explicitly mutually exclusive

[13:28:01.0000] <timeless>
Philip`: well, 2 is a  number :)

[13:28:02.0000] <zewt>
0 is a number too, but it also isn't normally included in "a number" :)

[13:28:03.0000] <timeless>
surely there are better ways to do this?

[13:29:00.0000] <timeless>
zewt: well, a [plural] [natural] number of ...

[13:30:00.0000] <Philip`>
timeless: Would making their XSD schema normative be better?

[13:30:01.0000] <timeless>
Philip`: offhand, them not existing would probably be best :)

[13:32:00.0000] <Philip`>
Hmm, http://www.dfki.de/~haupert/files/omm_xg_sample.xsd doesn't seem to encode that constraint anyway

[13:33:00.0000] <annevk>
.xsd...

[13:33:01.0000] <annevk>
/me runs

[13:33:02.0000] <zewt>
i clicked on that and my face literally exploded all over my desk

[13:33:03.0000] <timeless>
Philip`: feel free to send feedback ;-)

[13:34:00.0000] <Philip`>
zewt: I metaphorically don't believe you

[13:34:01.0000] <zewt>
do i need to take a picture of hunks of brain all over my keyboard

[13:34:02.0000] <timeless>
yes

[13:35:00.0000] <timeless>
although if you have a notary public handy, we'll accept a Posted Notarized document certifying that it happened

[13:35:01.0000] <Philip`>
timeless: Since I can't quite figure out what OMM is about, other than "fancy log files", and since I have other work to be doing, I think I'll pass :-)

[13:36:00.0000] <timeless>
well, seems like you did a pretty good job of figuring out something about it pretty quickly

[13:38:00.0000] <timeless>
http://lists.w3.org/Archives/Public/public-device-apis/2011Sep/0070.html

[13:38:01.0000] <timeless>
ah, they got feedback from ph


2011-09-13
[00:20:00.0000] <annevk>
Say we introduce new Range(); what would the version with arguments look like? Range(startnode, startoffset, endnode, endoffset)?

[00:20:01.0000] <annevk>
Any others?

[00:37:00.0000] <rniwa>
annevk: hi annevk

[00:50:00.0000] <annevk>
hey rniwa

[00:51:00.0000] <annevk>
your nick is confusing in the font I'm using, tried auto-completing on the letter m :)

[00:51:01.0000] <rniwa>
annevk: yeah

[00:51:02.0000] <rniwa>
apparently w also looks like m in some fonts

[00:51:03.0000] <rniwa>
annevk: confusingly, miwa is also a valid japanese last name

[00:51:04.0000] <annevk>
:)

[00:52:00.0000] <rniwa>
annevk: my machine was labeled "miwa" when i worked from tokyo office this spring

[00:52:01.0000] <annevk>
hey I was wondering, is it the plan that UndoManager moves back into HTML or will it be a separate specification?

[00:52:02.0000] <rniwa>
annevk: that's why use RNiwa on my website

[00:52:03.0000] <annevk>
haha

[00:52:04.0000] <rniwa>
annevk: not sure. got to check with Hixie

[00:52:05.0000] <rniwa>
annevk: but i think it'll be separate for a whole at least

[00:53:00.0000] <annevk>
because if not you need to include stuff like partial interface Document { ... }

[00:53:01.0000] <rniwa>
annevk: I probably need to cross-post it on public-webapps at some point though

[00:53:02.0000] <annevk>
to define the undoManager attribute in terms of IDL

[00:53:03.0000] <rniwa>
annevk: yeah... that'll be quite annoying

[00:54:00.0000] <annevk>
should be real easy...

[00:54:01.0000] <rniwa>
annevk: I think adding undoManager property is simple enough that I don't need that for now

[00:54:02.0000] <rniwa>
annevk: like i've been avoiding to completely write all the details to avoid work in the case someone suggests a radical change in the API

[00:54:03.0000] <rniwa>
s/completely write/write out/

[00:55:00.0000] <annevk>
partial interface Document { readonly attribute UndoManager undoManager; };

[00:55:01.0000] <annevk>
fair enough

[00:55:02.0000] <rniwa>
annevk: I guess I can do that

[00:55:03.0000] <rniwa>
annevk: probably also to Element

[00:55:04.0000] <annevk>
yeah

[03:55:00.0000] <annevk>
Oh sweet

[03:55:01.0000] <annevk>
not all Range tests use testharness

[04:00:00.0000] <karlcow>
a new summit to explore (in the future) for annevk http://pruned.blogspot.com/2011/09/mountain-for-netherlands.html

[04:05:00.0000] <annevk>
I'm afraid if we get something like that it'll be like Fuji (not that I ever climbed that one)

[05:26:00.0000] <annevk>
the fuck http://www.w3.org/Bugs/Public/show_bug.cgi?id=14122

[05:51:00.0000] <annevk>
I wonder what the guy who keeps complaining about Workers and the DOM thinks the feedback is for? IRC?

[05:51:01.0000] <annevk>
s/feedback/feedback box/

[06:18:00.0000] <zcorpan>
marked them as dup

[06:22:00.0000] <annevk>
whoa, AryehGregor has made some crazy cool tests

[08:51:00.0000] <AryehGregor>
annevk, what's crazy cool about my tests, other than being so ridiculously elaborate that no one but me can understand the implementation?

[08:51:01.0000] <AryehGregor>
Well, and they're thorough, I guess.  I'm curious which tests you thought were crazy cool, though.

[08:56:00.0000] <annevk>
the thorough tests :)

[08:57:00.0000] <annevk>
but yeah, figuring out what the bugs are from those tests is kind of awkward

[08:57:01.0000] <annevk>
AryehGregor, so the reason you cannot correct range boundary points after a rename yourself is because you do not have access to a the list of associated range objects?

[08:59:00.0000] <AryehGregor>
annevk, right.

[08:59:01.0000] <AryehGregor>
Only the browser has a full list of Range objects.

[08:59:02.0000] <AryehGregor>
And only it can, because anything else would expose GC behavior.

[09:00:00.0000] <annevk>
authors could keep track of everything they create themselves

[09:00:01.0000] <AryehGregor>
In principle, yes, but it wouldn't behave right for ranges they don't create.  It's also tedious and error-prone.

[09:00:02.0000] <annevk>
is this mostly a problem for Selection?

[09:00:03.0000] <annevk>
or Editing for that matter

[09:01:00.0000] <AryehGregor>
If it were just Selection, there'd be no big problem, because there's only one and you can always fix it.

[09:01:01.0000] <AryehGregor>
In practice, Selection is the big use-case, yeah.

[09:01:02.0000] <AryehGregor>
Which is why the status quo is okay.

[09:02:00.0000] <AryehGregor>
dglazkov seemed to think that a rename method on Element would be useful for his component model stuff, whatever that is.

[09:02:01.0000] <AryehGregor>
I don't personally know of non-editing use-cases.  I'm not strongly committed to such a feature at all.

[09:03:00.0000] <annevk>
okay

[09:03:01.0000] <annevk>
postponed it is

[09:04:00.0000] <annevk>
AryehGregor, shall I move your Range- tests into http://dvcs.w3.org/hg/webapps

[09:04:01.0000] <annevk>
?

[09:11:00.0000] <AryehGregor>
annevk, feel free.

[09:12:00.0000] <annevk>
Are you planning on helping out with editing Range by the way?

[09:21:00.0000] <MikeSmith>
http://html5-mediasource-api.googlecode.com/svn/trunk/draft-spec/mediasource-draft-spec.html

[09:21:01.0000] <MikeSmith>
"extends HTMLMediaElement to allow JavaScript to generate media streams for playback"

[09:30:00.0000] <AryehGregor>
annevk, maybe, if I find the time.

[10:47:00.0000] <asmodai>
http://www.buildwindows.com/ -- showing some HTML 5 support in new Windows build tools

[10:47:01.0000] <asmodai>
right now that is

[10:53:00.0000] <espadrine>
asmodai: thanks!

[10:54:00.0000] <asmodai>
I am not sure I like the calls to the native Windows API through JS

[11:01:00.0000] <asmodai>
apparently they showed off some IE 10 earlier, ought to be able to browse back to that in the stream timeline

[11:06:00.0000] <espadrine>
asmodai: I wish, but I guess it mostly was the usual "look at the new http://ie.microsoft.com/testdrive/ tests we did"

[11:06:01.0000] <jarek>
Hi

[11:06:02.0000] <asmodai>
Ah ok

[11:07:00.0000] <jarek>
what's the recommend way for iterating over a HTMLCollection element?

[11:07:01.0000] <asmodai>
Well, for what it is worth, it seems one of the more recent builds of IE 10 scored like 300+ on html5test.com

[11:07:02.0000] <jarek>
HTMLCollections don't seem to have forEach function

[11:10:00.0000] <miketaylr>
Array.prototype.slice.call(document.all) :P

[11:11:00.0000] <miketaylr>
(which will return an Array)

[11:11:01.0000] <jarek>
yeah, I have just stumbled upont this: http://stackoverflow.com/questions/222841/most-efficient-way-to-convert-an-htmlcollection-to-an-array

[11:11:02.0000] <jarek>
how about:

[11:11:03.0000] <jarek>
HTMLCollection.prototype.forEach = function(callback) {

[11:11:04.0000] <jarek>
  for(var i=0, j=this.length; i<j; i++) {

[11:11:05.0000] <jarek>
    callback(this[i]);

[11:11:06.0000] <jarek>
  }

[11:11:07.0000] <jarek>
}

[11:12:00.0000] <Philip`>
jarek: That will break if callback modifies the DOM in a way that affects the collection's contents

[11:13:00.0000] <Philip`>
which seems non-ideal for a general-purpose function

[11:14:00.0000] <jarek>
could Array.prototype.slice be significantly slower or faster than using regular "for var i=0; i<collection.length; i++" loop?

[11:15:00.0000] <jarek>
no, wait... it just converts HTMLCollection to Array, I still have to iterate over it :/

[11:15:01.0000] <robreact>
just use a for loop

[11:15:02.0000] <Philip`>
I'd expect that in almost every case, they'll be so fast so you won't care about any difference

[11:16:00.0000] <Philip`>
Write whatever's most correct and readable, and only worry about optimisation if profiling indicates it's a bottleneck

[11:18:00.0000] <jarek>
I see, I guess I will just use regular for loop

[11:18:01.0000] <jarek>
converting HTMLCollection to an array would have some disadvantages

[11:18:02.0000] <jarek>
like it will no longer update when DOM is modified

[11:19:00.0000] <jamesr>
you could argue that's an advantage

[11:19:01.0000] <jamesr>
depending on what you are doing

[11:38:00.0000] <timeless>
jarek: you can use Array.prototype.concat(collection).forEach(function(){}) in gecko...

[11:39:00.0000] <jarek>
what's the difference between element.childElementCount and element.children.lenght?

[11:40:00.0000] <timeless>
in gecko, the latter has an extra roundtrip

[11:41:00.0000] <timeless>
each <.> for non js objects can be thought of as "expensive"

[11:42:00.0000] <timeless>
(the same is probably true for other impls..)

[11:42:01.0000] <jarek>
so using  element.childElementCount is a better practice then? Or is performance gain really insignificant?

[11:42:02.0000] <timeless>
dunno, you'd have to measure it

[11:51:00.0000] <dglazkov>
good morning, Whatwg!

[11:54:00.0000] <jamesr>
good morning, dglazkov!

[11:56:00.0000] <dglazkov>
looking at whatwg wiki change list, it's primarily:

[11:56:01.0000] <dglazkov>
a) annevk leaving notes

[11:56:02.0000] <dglazkov>
b) annevk clearing spam

[12:31:00.0000] <annevk>
jarek, the plan is to nuke childElementCount

[12:31:01.0000] <annevk>
jarek, so avoid it

[12:32:00.0000] <jarek>
annevk: I thought that once an API get's defined in DOM, it can't be removed in any feature revisions

[12:32:01.0000] <annevk>
future you mean?

[12:33:00.0000] <jarek>
s/feature/future

[12:33:01.0000] <annevk>
given the mess that is DOM Level 3 Core, we abandoned that idea

[12:33:02.0000] <jarek>
childElementCount was added in DOM3?

[12:33:03.0000] <annevk>
after DOM3 even

[12:33:04.0000] <annevk>
did not get enough peer review and was pushed through for no good reason :(

[12:35:00.0000] <smaug____>
"peer review"?

[12:36:00.0000] <smaug____>
I thought browser vendors were ok with Element Traversal spec

[12:38:00.0000] <annevk>
I think nobody realized we had children.length already

[12:38:01.0000] <annevk>
Actually, nobody there did realize

[12:38:02.0000] <annevk>
And that is how childElementCount got through

[12:38:03.0000] <annevk>
I tried to get it removed

[12:42:00.0000] <smaug____>
hmm, apparently I reviewed the element traversal patch

[12:50:00.0000] <jarek>
is there a way to check how much space is left in widow.localStorage and window.sessionStorage?

[12:50:01.0000] <jarek>
I remember reading that those objects have quota of 5mb on most browsers

[12:51:00.0000] <annevk>
nope

[14:12:00.0000] <AryehGregor>
Nice.

[14:12:01.0000] <AryehGregor>
Thanks, Google Docs.

[14:12:02.0000] <zewt>
google docs is one of google's ... less impressive products. heh

[14:12:03.0000] <AryehGregor>
As soon as I try to input a Unicode character using Ctrl-Shift-u, it totally breaks.

[14:12:04.0000] <AryehGregor>
So that I have to refresh the page.

[14:13:00.0000] <zewt>
(granted, my impression is mostly from trying to use it on android; their android app is fairly bad)

[14:13:01.0000] <AryehGregor>
Since of course, they need to make up their own text handling instead of using the platform.

[14:31:00.0000] <gsnedders>
AryehGregor: "Unicode character" being non-ASCII?

[14:32:00.0000] <AryehGregor>
gsnedders, well, I assume it would do the same if I tried Ctrl-Shift-u65 or something.

[14:32:01.0000] <AryehGregor>
It was the Ctrl-Shift-u that made it go haywire.

[14:32:02.0000] <AryehGregor>
Because platform conventions are for chumps, right?

[14:32:03.0000] <timeless>
hsivonen: ping

[14:33:00.0000] <timeless>
validator.w3 has "Result: Passed, 1 warning(s)", it'd be really nice if that warning(s) was a link to the part of the page with the warning

[14:33:01.0000] <timeless>
in my case, i can't find any warnings on the output page :(

[14:33:02.0000] <gsnedders>
AryehGregor: Oh, wait. I read "u" as "v".

[14:36:00.0000] <jgraham>
Alternative view: Google docs is one of their more impressive products and the web continues to suck as a platform for that kind of thing

[14:42:00.0000] <AryehGregor>
It's persistently annoying how it always works a little different than I expect.  Maybe it just has bad Linux support, though.

[14:42:01.0000] <AryehGregor>
But really, things like Ctrl-Shift-u work just fine on every other website, why do they have to mess it up?

[14:45:00.0000] <timeless>
/me wonders what ctrl-shift-u is

[14:45:01.0000] <AryehGregor>
The way to enter arbitrary Unicode code points in GNOME.

[14:45:02.0000] <AryehGregor>
I use it all the time.

[14:45:03.0000] <timeless>
technically it's in gtk+ fwiw

[14:45:04.0000] <AryehGregor>
Dashes, RLMs and LRMs, arrows, accented characters, etc.

[14:45:05.0000] <AryehGregor>
I stand corrected.

[14:45:06.0000] <AryehGregor>
(I knew that, theoretically.)

[14:47:00.0000] <zewt>
AryehGregor: well, then there's Twitter's page, which screws up ... all menu hotkeys

[14:47:01.0000] <zewt>
i've always found it very strange that browsers *let* pages do that

[14:47:02.0000] <zewt>
(cancel keydowns for major browser hotkeys)

[14:48:00.0000] <timeless>
AryehGregor: this sounds more like a browser fault than a web page fault

[14:48:01.0000] <timeless>
the right fix for this stuff is for there to be a way for a web page to say to the UA

[14:48:02.0000] <timeless>
"i'd like to handle the following actions {list}"

[14:48:03.0000] <timeless>
"please let the user map them however, and tell me when the user has fired one"

[14:48:04.0000] <timeless>
that way if you want to use f99 to trigger <bold>, you could

[14:48:05.0000] <timeless>
and your UA could persist that preference

[14:49:00.0000] <timeless>
and if i want to use <tab> to trigger <bold>, i could, and my UA would persist that preference

[14:49:01.0000] <timeless>
please just make that happen :)

[14:50:00.0000] <timeless>
a UA today is in control to the extent that it should enable you to tell it "don't pass ctrl-shift-u to the web page"

[14:51:00.0000] <timeless>
and "please map <x> to ctrl-shift-u for the web page"

[14:51:01.0000] <timeless>
but sadly no UAs do this :(

[14:51:02.0000] <timeless>
(well, ignoring accessibility agents)

[14:51:03.0000] <zewt>
well, user keymappings are pretty niche

[14:51:04.0000] <timeless>
zewt: well

[14:51:05.0000] <zewt>
not that i'm personally against features that happen to fit my niche, but

[14:51:06.0000] <timeless>
users with limited keysets are becoming much more common

[14:51:07.0000] <zewt>
understandable for it not to be the highest priority

[14:51:08.0000] <timeless>
not everyone has a 104 key keyboard these days

[14:51:09.0000] <jgraham>
That sounds like it wouldn't work

[14:52:00.0000] <timeless>
your average found doesn't have one certainly

[14:52:01.0000] <timeless>
jgraham: why not?

[14:52:02.0000] <jgraham>
What would the page write for help text?

[14:52:03.0000] <zewt>
jgraham: you're already in trouble there with mac keyboards :P

[14:52:04.0000] <timeless>
jgraham: well, if it detects a UA that supports it

[14:53:00.0000] <timeless>
it'd just register events "bold", "underline", etc.

[14:53:01.0000] <jgraham>
zewt: Right, but when there are only two options it's more or less OK

[14:53:02.0000] <timeless>
and then have a link to the UAs help for mapping them

[14:53:03.0000] <jgraham>
Most people know if they are using a mac

[14:53:04.0000] <timeless>
i recently dealt w/ a "web app" which insisted i use IE6- or FF3-

[14:53:05.0000] <jgraham>
Generally these things that are supposed to be autoconfigured by the UA haven't really worked out

[14:53:06.0000] <jgraham>
see also:accesskey

[14:54:00.0000] <timeless>
it's really a bad idea for web pages to be forced to hard code understandings of UAs

[14:54:01.0000] <timeless>
yeah, accesskey was a nice failure

[14:54:02.0000] <timeless>
but part of it was that it was yet another way to capture user keystrokes

[14:54:03.0000] <timeless>
instead of  a way to let users be in control

[14:55:00.0000] <zewt>
user control is often sort of a last-ditch fallback

[14:55:01.0000] <timeless>
a simple mapping of <event, description> for registration should work

[14:55:02.0000] <timeless>
possibly with default mappings

[14:55:03.0000] <timeless>
zewt: it's rarely done, let alone done well

[14:55:04.0000] <zewt>
given the choice between "everything works" and "everything's broken, but the user can fix it", the former is almost always better, of course

[14:55:05.0000] <zewt>
the latter becomes the fallback when people can't figure out how to implement the former

[14:55:06.0000] <jgraham>
Indeed

[14:55:07.0000] <zewt>
(because, sometimes, it's hard)

[14:56:00.0000] <timeless>
the former only works for 3 months around product launch

[14:56:01.0000] <timeless>
and only in the target environment

[14:56:02.0000] <timeless>
which ceases to be available at month 4

[14:56:03.0000] <zewt>
depends on how competently it's designed

[14:56:04.0000] <jgraham>
Users don't want to be "in control" in the sense of having lots of options

[14:56:05.0000] <jgraham>
They want to have everything work by default

[14:56:06.0000] <jgraham>
and have a simple story to follow when they get stuck

[14:56:07.0000] <timeless>
on a keyboardless device

[14:57:00.0000] <timeless>
how do you want the user to deal w/ sending ctrl-shift-u?

[14:57:01.0000] <jgraham>
Not "oh you can go to (some UA dependent config screen) and (do something complex with a long list of options)"

[14:57:02.0000] <zewt>
of course, that can mean having an interface competent enough so that the UA (not the user, whenever possible) can negotiate a workable interface with scripts

[14:57:03.0000] <jgraham>
AIUI ctrl-shift-u isn't a webapp feature, it's an OS feature

[14:58:00.0000] <timeless>
AryehGregor: how is this thing breaking precisely?

[14:58:01.0000] <timeless>
is the app receiving the unicode character and dying because of it?

[14:58:02.0000] <jgraham>
I would expect webapps not to break OS features, sure

[14:58:03.0000] <timeless>
or is it preventing it from being triggered in the first place?

[14:58:04.0000] <AryehGregor>
timeless, very weirdly.

[14:58:05.0000] <timeless>
/me assumed the latter

[14:58:06.0000] <jgraham>
Just like I expect them to work with the compose key or IMEs

[14:58:07.0000] <AryehGregor>
No, it breaks from when it gets Ctrl-Shift-u.

[14:58:08.0000] <timeless>
define breaks more precisely, please?

[14:59:00.0000] <zewt>
is it trying to capture something else? eg. is it seeing the ctrl-u and screaming "underline!" and cancelling the event?

[14:59:01.0000] <timeless>
zewt: that would be my bet..

[14:59:02.0000] <AryehGregor>
timeless, sorry, GTG.

[14:59:03.0000] <AryehGregor>
Try it and see.

[14:59:04.0000] <AryehGregor>
It was really weird.

[14:59:05.0000] <timeless>
/me doesn't want to install linux just to test

[14:59:06.0000] <zewt>
not matching keyboard events precisely enough is a very common bug

[14:59:07.0000] <jgraham>
Keyboad events are a world of hurt

[14:59:08.0000] <jgraham>
that's not webapps fault

[15:00:00.0000] <timeless>
no, it's UA + DOM

[15:00:01.0000] <jgraham>
It's a browser/specs problem

[15:00:02.0000] <zewt>
the platform's fault

[15:00:03.0000] <timeless>
generally

[15:00:04.0000] <jgraham>
I'm not convinced that DOM3 events makes it better

[15:00:05.0000] <jgraham>
in fact that spec seems to be a disaster

[15:01:00.0000] <timeless>
jgraham: out of curiosity, can you actually point to web apps that document their keybindings in places easily reachable by normal users?

[15:02:00.0000] <timeless>
the only ones i can think of are google gmail/reader/news, and they don't do that, they randomly toss up a hint which is a link to them

[15:02:01.0000] <zewt>
thankfully they got rid of that "hint text" nonsense in gmail

[15:02:02.0000] <zewt>
that was horribly distracting

[15:02:03.0000] <timeless>
really?

[15:02:04.0000] <jgraham>
http://docs.google.com/support/bin/answer.py?answer=179738

[15:03:00.0000] <timeless>
they recently added it to news

[15:03:01.0000] <zewt>
gone in mine, anyway

[15:03:02.0000] <zewt>
nothing worse than having mail open on a side monitor and having text periodically changing in it when you're trying to do something else

[15:03:03.0000] <jgraham>
Dunno how easy that is to find, but searching for "google docs key" worked

[15:03:04.0000] <timeless>
jgraham: that doesn't count as easily reachable

[15:04:00.0000] <timeless>
i was trying to ask as in <from inside the app>

[15:04:01.0000] <timeless>
using google-search is very much outside of that

[15:04:02.0000] <zewt>
keyboard bindings are fundamentally hard because browser don't agree on keystroke namespaces--which keys are the browser's and which are the page's

[15:04:03.0000] <jgraham>
It's not really more outside the app than using the help menu is

[15:04:04.0000] <timeless>
and i'm more interested in *non*-google apps anyway

[15:04:05.0000] <jgraham>
In a desktop application

[15:04:06.0000] <zewt>
though that's been slowly improving ... i think current opera actually got rid of *all* (?) alt- shortcuts (which I think was overkill)

[15:05:00.0000] <jgraham>
(which also has search these days)

[15:05:01.0000] <timeless>
jgraham: well

[15:05:02.0000] <timeless>
an app can have no help

[15:05:03.0000] <zewt>
and chrome has very few alt- shortcuts compared to ff/ie

[15:05:04.0000] <timeless>
and someone can write a "tips-and-tricks" book

[15:05:05.0000] <timeless>
i'm mostly asking whether apps generally document these things at all

[15:06:00.0000] <timeless>
(as opposed to third party documenters)

[15:06:01.0000] <zewt>
timeless: it's something they should take a hint from desktop apps for

[15:06:02.0000] <zewt>
the practice of putting keyboard shortcuts next to corresponding menu items is as clear as you can get

[15:07:00.0000] <zewt>
and avoids clutter, since it's only visible when you happen to have that menu open

[15:07:01.0000] <zewt>
and avoids the "go read the docs" syndrome (you shouldn't have to read a manual to know what shortcuts are)

[15:07:02.0000] <zewt>
(particularly important because nobody writes manuals :)

[15:08:00.0000] <timeless>
hey

[15:08:01.0000] <timeless>
/me seems to recall having met someone who did

[15:08:02.0000] <zewt>
a UI that's intuitive enough to not need a manual is always better than any UI with a manual :P

[15:09:00.0000] <timeless>
/me ponders

[15:09:01.0000] <zewt>
of course, there's the fundamental problem that web apps don't have a standard UI like desktop apps do

[15:09:02.0000] <zewt>
which has a cost

[15:33:00.0000] <Philip`>
On the subject of moaning about Google: I wish they didn't keep changing their search results to randomly different shades of blue, it's terribly distracting

[15:34:00.0000] <aho>
a/b test all the things! :v

[15:40:00.0000] <zewt>
it's felt to me like there once was someone influential on the google search team who stood against making a mess of it, and that person left the team about a year or two ago

[15:41:00.0000] <zewt>
because all of a sudden they started going apeshit with distracting nonstop changes


2011-09-14
[17:32:00.0000] <Hixie>
anyone around who can talk to me about DOMException and RangeException?

[18:01:00.0000] <Hixie>
any DOM Core editors around?

[18:31:00.0000] <__bruno>
is there any mature model for reusable components in pure html (client side)? or some binding language, like XBL (used on firefox) ?

[04:38:00.0000] <espadrine>
annevk: is there a way to set an element's ID in DOM4?

[04:39:00.0000] <annevk>
ele.id ?

[04:40:00.0000] <espadrine>
I was reading the HTML5 spec, and I trode upon this part:

[04:40:01.0000] <espadrine>
"This specification doesn't preclude an element having multiple IDs, if other mechanisms (e.g. DOM Core methods) can set an element's ID in a way that doesn't conflict with the id attribute."

[04:40:02.0000] <espadrine>
Is that meaningful?

[04:40:03.0000] <annevk>
no please file a bug on that

[04:41:00.0000] <espadrine>
ok

[04:41:01.0000] <annevk>
thanks

[04:44:00.0000] <woef>
The spec is real good for brushing up on crazy and impossible English words.

[04:44:01.0000] <annevk>
http://lists.w3.org/Archives/Public/public-script-coord/2011JulSep/0420.html o_O

[04:46:00.0000] <annevk>
I guess only complements http://infrequently.org/2011/09/google-the-future-of-javascript/ about Web IDL being an invention of the devil

[04:47:00.0000] <annevk>
espadrine, http://www.w3.org/Bugs/Public/show_bug.cgi?id=14145 is not quite what I had in mind

[04:47:01.0000] <annevk>
espadrine, if that's your bug

[04:51:00.0000] <espadrine>
It is.

[04:51:01.0000] <espadrine>
I added more specifics in a comment just now.

[04:53:00.0000] <espadrine>
What did you have in mind?

[05:11:00.0000] <annevk>
that it removes that note

[05:12:00.0000] <annevk>
because that change is not going to happen :)

[05:12:01.0000] <annevk>
there's already id attributes with spaces in them

[05:17:00.0000] <espadrine>
annevk, as far as I can tell, id attributes with spaces in them doesn't work.

[05:18:00.0000] <espadrine>
Maybe I am wrong, but I tried href'ing to an id with spaces in them.

[05:19:00.0000] <aho>
http://mothereffingcssescapes.com/

[05:19:01.0000] <aho>
you can use all kinds of characters if you escape them

[05:19:02.0000] <espadrine>
aho: not a space

[05:20:00.0000] <aho>
right

[05:20:01.0000] <aho>
thought an unicode escape would work there, but it doesnt

[05:22:00.0000] <espadrine>
aho: as funny as it is, here, a unicode space should be accepted.

[05:22:01.0000] <espadrine>
http://www.whatwg.org/specs/web-apps/current-work/multipage/common-microsyntaxes.html#space-character

[05:23:00.0000] <espadrine>
eg, 0x00A0 "No-break space" should be accepted, and it isn't.

[05:24:00.0000] <aho>
ah... id=" foo" and #\20 foo{...} does indeed work in firefox

[05:25:00.0000] <aho>
so does #\ foo{...}

[05:27:00.0000] <aho>
document.getElementById(' foo') also works

[05:28:00.0000] <espadrine>
well? href="# foo" doesn't

[05:28:01.0000] <espadrine>
but indeed, aho, how very odd!

[05:28:02.0000] <aho>
how about href="#%20foo" ?

[05:29:00.0000] <espadrine>
aho: no

[05:29:01.0000] <espadrine>
that would have somehow made sense, but...

[05:29:02.0000] <aho>
works for me

[05:29:03.0000] <aho>
with firefox anyways

[05:29:04.0000] <espadrine>
(at least, I tested in chrome)

[05:33:00.0000] <espadrine>
aho: wait, it doesn't work for me in firefox!

[05:33:01.0000] <espadrine>
oh, no.

[05:33:02.0000] <espadrine>
actually, href="#hello%20world" doesn't work, but href="#%20world" does.

[05:34:00.0000] <espadrine>
(for ids equal to "hello world" and " world" respectively)

[05:36:00.0000] <espadrine>
...and href="#hello%20world" works in Chrome.

[05:39:00.0000] <aho>
http://jsfiddle.net/TUpZZ/1/

[05:39:01.0000] <aho>
works also fine in chrome 15.0.874.12 dev-m

[05:40:00.0000] <aho>
/me updates opera... :>

[05:41:00.0000] <aho>
yep

[05:41:01.0000] <aho>
opera works fine too

[05:43:00.0000] <aho>
http://jsfiddle.net/TUpZZ/2/ <- with #hello\ world

[05:45:00.0000] <espadrine>
My bad...

[05:45:01.0000] <espadrine>
http://jsfiddle.net/TUpZZ/3/

[05:46:00.0000] <annevk>
espadrine, getElementById("this works") #this%20works

[05:47:00.0000] <aho>
#3 also seems to work just fine

[05:48:00.0000] <espadrine>
yes, my previous test (which told me it didn't work) must have been wrong.

[06:42:00.0000] <zcorpan>
do we want the following to be equivalent? input.setCustomValidity(null) and input.setCustomValidity("")

[06:43:00.0000] <annevk>
don't think so

[06:44:00.0000] <zcorpan>
k

[07:51:00.0000] <AryehGregor>
/me reboots to add RAM

[07:51:01.0000] <AryehGregor>
$ uptime

[07:51:02.0000] <AryehGregor>
 09:53:32 up 92 days, 16:12, 16 users,  load average: 0.46, 0.47, 0.36

[07:53:00.0000] <Philip`>
The 'uptime' program is a major security risk on any Linux system

[07:54:00.0000] <Philip`>
since it encourages people to keep their machines up for as long as possible, so they can show off their big uptime numbers

[07:54:01.0000] <Philip`>
and therefore discourages them from rebooting which is necessary for security updates to kernels or various other applications to take effect

[08:01:00.0000] <jcranmer>
there's a bash.org quote where someone has an uptime of over 5 years

[08:02:00.0000] <jcranmer>
and is trying to find something for a 2.0 kernel or something like that

[08:12:00.0000] <linclark>
i've been working on microdata support in Drupal

[08:12:01.0000] <linclark>
just posted a screencast giving a preview of the functionality, thought some folks in this channel might be interested

[08:12:02.0000] <linclark>
http://www.youtube.com/watch?v=MbkusrNmS6U

[08:27:00.0000] <aho>
http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#compositing <- "lighter" isn't a porter-duff op. just sayin. :>

[09:02:00.0000] <annevk>
http://blog.whatwg.org/weekly-touch

[09:08:00.0000] <zewt>
a fascinating url

[09:12:00.0000] <MikeSmith>
linclark: just watched it

[09:12:01.0000] <MikeSmith>
looks great

[09:12:02.0000] <MikeSmith>
though I don't know anything about Drupal

[09:13:00.0000] <MikeSmith>
your Galway accent it great to hear, though

[09:13:01.0000] <linclark>
MikeSmith: ha, thanks... it's more of a northern virginia accent

[09:13:02.0000] <MikeSmith>
heh

[09:14:00.0000] <MikeSmith>
yeah, I figured somewhere other than Galway

[09:15:00.0000] <MikeSmith>
anyway, fwiw, it's great to see the work you're doing on that

[09:15:01.0000] <linclark>
thanks, it's working out well... I think we'll be able to build a cool Docs system on top of it

[09:15:02.0000] <linclark>
Drupal has a problem that people post tutorials on their blogs, which makes them hard to find

[09:16:00.0000] <linclark>
so I'm working on adding a little structured data to the posts on Drupal Planet so that we can have targeted search for those tutorials

[09:16:01.0000] <MikeSmith>
ah, I see

[09:16:02.0000] <MikeSmith>
Drupal community in general really seems on top of things

[09:17:00.0000] <MikeSmith>
the accessibility work that Everett Zufelt's been doing is great to see as well

[09:17:01.0000] <linclark>
yeah, it's got a really good dynamic for bringing together people working on cool ideas

[09:18:00.0000] <annevk>
is there just happening less each week or am I missing out on a bunch of stuff?

[09:18:01.0000] <MikeSmith>
annevk: less happening

[09:18:02.0000] <MikeSmith>
less dramas too

[09:18:03.0000] <MikeSmith>
mostly

[09:19:00.0000] <MikeSmith>
though the somewhat unrelated drama over the weekend was fun

[09:19:01.0000] <annevk>
did we reach some point where there are too much standards and implementors have to catch up?

[09:19:02.0000] <annevk>
Dart?

[09:19:03.0000] <MikeSmith>
it's august

[09:19:04.0000] <MikeSmith>
annevk: yeah

[09:20:00.0000] <MikeSmith>
and there has been lots of catching up too

[09:20:01.0000] <annevk>
because of August? guess that makes sense

[09:20:02.0000] <MikeSmith>
lots of stuff in the latest IE10 platform preview

[09:20:03.0000] <MikeSmith>
well, I guess it's actually September now

[09:20:04.0000] <MikeSmith>
for the last two weeks

[09:21:00.0000] <MikeSmith>
in most civilized parts of the world, nobody tries to get much done during the last part of July and most of August

[09:24:00.0000] <jgraham>
Paris is civilized?

[09:26:00.0000] <MikeSmith>
Paris is over-civilized

[09:26:01.0000] <MikeSmith>
Nice is civilized

[09:38:00.0000] <shepazu>
hey, TabAtkins, want to help fix the markup on w3conf?

[09:38:01.0000] <shepazu>
I've started on it already

[09:39:00.0000] <shepazu>
it's my fault, I was focused on getting it accessible and i18ny, and didn't notice the bad markup

[09:39:01.0000] <MikeSmith>
shepazu: I'll help you

[09:39:02.0000] <MikeSmith>
I'll change all the class values to opaque strings

[09:39:03.0000] <shepazu>
lol

[09:40:00.0000] <shepazu>
add some <font> elements

[09:41:00.0000] <MikeSmith>
better yet, I'll generate all the markup from JS, based on real-time scouring of twitter for markup best-practice advice from the experts

[09:42:00.0000] <MikeSmith>
I think that would make Bert happy at least

[09:43:00.0000] <annevk>
Ms2ger was back tomorrow right?

[09:45:00.0000] <shepazu>
TabAtkins?

[09:47:00.0000] <myakura>
he's prolly away (saw he sent regrets to csswg call).

[09:50:00.0000] <shepazu>
thanks myakura

[09:56:00.0000] <linclark>
shepazu: are you an admin on the w3cconf site?

[09:57:00.0000] <shepazu>
linclark: no, but I can get in touch with those who are

[09:57:01.0000] <linclark>
ok, cool... the Save the Date button is giving an error

[09:58:00.0000] <shepazu>
linclark: yeah, notice that (too late) ^_^

[09:58:01.0000] <linclark>
ah, ok, glad to hear that it's already known

[09:58:02.0000] <shepazu>
thanks linclark

[09:58:03.0000] <shepazu>
right now I'm fixing the sily markup

[09:58:04.0000] <shepazu>
* silly

[10:07:00.0000] <AryehGregor>
/me booted to a non-PAE kernel, so he only gets 3G of RAM instead of 8G >:(

[10:21:00.0000] <dglazkov>
good morning, Whatwg!

[10:21:01.0000] <strickly>
:O

[11:17:00.0000] <zcorpan>
why doesn't WorkerLocation have resolveURL?

[11:20:00.0000] <AryehGregor>
So what are the major features missing from IE10 now?

[11:21:00.0000] <zcorpan>
does it have location.resolveURL? :)

[11:22:00.0000] <zcorpan>
/me ponders if resolveURL isn't redundant with <a href>

[11:30:00.0000] <AryehGregor>
I use <a href> in my reflection tests to resolve URLs.

[11:30:01.0000] <AryehGregor>
/me didn't know about location.resolveURL

[11:32:00.0000] <AryehGregor>
/me reboots for distro upgrade

[11:36:00.0000] <zcorpan>
workers don't have <a> so it would make more sense there, but it's not present there

[11:57:00.0000] <Hixie>
zcorpan: probably oversight. file a bug or send mail.

[12:10:00.0000] <zcorpan>
already done

[12:11:00.0000] <Hixie>
thanks

[12:13:00.0000] <zcorpan>
Hixie: do you remember why resolveURL was added?

[12:15:00.0000] <Hixie>
to have a nice api to resolve urls, i would assume

[12:16:00.0000] <Hixie>
there's no way to resolve relative to the script's base url otherwise

[12:16:01.0000] <Hixie>
unless you somehow work out what that url is, and then use xml:base and an <a> element

[12:16:02.0000] <Hixie>
which is rather awkward and non-intuitive

[13:02:00.0000] <Hixie>
ok can anyone point me to how i download IE10?

[13:02:01.0000] <Hixie>
the microsoft site is giving me the run-around

[13:03:00.0000] <Hixie>
as far as i can tell, the IE10 preview download is 2.8GB to 4.8GB depending on whether you want dev tools and whether you want 32bi or 64bit

[13:04:00.0000] <Hixie>
and to run it you have to boot into it because it's actually an OS.

[13:04:01.0000] <zcorpan>
Hixie: when would a script's base URL be different from an <a>'s base URL?

[13:04:02.0000] <Hixie>
when there's xml:base around, i guess? dunno.

[13:05:00.0000] <Hixie>
haven't really thought about it.

[13:13:00.0000] <annevk>
we should remove resolveURL

[13:13:01.0000] <annevk>
in favor of window.URL

[13:14:00.0000] <annevk>
I haven't filed a bug on that yet I guess, maybe that can be part of zcorpan's bug?

[13:15:00.0000] <zcorpan>
URL has a resolve feature?

[13:15:01.0000] <annevk>
new URL(url, baseurl) will be the feature I think

[13:16:00.0000] <zcorpan>
oh, ok

[13:16:01.0000] <zcorpan>
how do you get the base url?

[13:16:02.0000] <annevk>
something like that, but in any event there's no need to have two APIs for it

[13:16:03.0000] <annevk>
the non-worker script would hand it over presumably

[13:16:04.0000] <annevk>
i guess this is for shared workers

[13:17:00.0000] <zcorpan>
/me -> bed

[13:21:00.0000] <Hixie>
annevk: is URL going anywhere?

[13:21:01.0000] <Hixie>
last i heard that spec was not being edited actively

[13:21:02.0000] <annevk>
guess that's up to abarth

[13:22:00.0000] <annevk>
maybe I should help him with a skeleton HTML spec that he can update

[13:22:01.0000] <annevk>
cause I think setting it up in HTML is what was holding it back

[13:24:00.0000] <Hixie>
hm, <table><tr><td><svg><desc><td> parses incorrectly in chrome as far as i can tell

[13:24:01.0000] <Hixie>
is that checked in the test suite?

[13:25:00.0000] <Hixie>
is http://code.google.com/p/html5lib/source/browse/#hg%2Ftestdata%2Ftree-construction the canonical place for the test suite?

[13:26:00.0000] <annevk>
think so

[13:26:01.0000] <annevk>
html5lib is anyway

[13:27:00.0000] <annevk>
Hixie, definitely different from Minefield

[13:27:01.0000] <annevk>
or Nightly as it's called

[13:27:02.0000] <Hixie>
also than opera

[13:27:03.0000] <annevk>
(still Minefield.app, confusing)

[13:27:04.0000] <Hixie>
though the opera i'm testing is the pre-html parser i think

[13:28:00.0000] <espadrine>
About bug #14145 (http://www.w3.org/Bugs/Public/show_bug.cgi?id=14145#c3), is there a way to see how browsers implement <td headers> when there is a space in the id of a targeted <td>?

[13:28:01.0000] <Hixie>
is anyone able to add a test to the html5lib test suite easily? (that gets pulled by everyone else's test suites right?)

[13:29:00.0000] <annevk>
I think people sync every now and then

[13:29:01.0000] <annevk>
you are actually a committer

[13:29:02.0000] <annevk>
so you could

[13:30:00.0000] <Hixie>
if nobody has it checked out and can easily just add a test, i will

[13:35:00.0000] <Hixie>
annevk: what file would i add this test to?

[13:35:01.0000] <annevk>
Hixie, filing a bug on WebKit might also get it added upstream

[13:35:02.0000] <Hixie>
true

[13:36:00.0000] <annevk>
tables01.dat maybe?

[13:36:01.0000] <annevk>
I don't think there's much logic to it, but hsivonen / jgraham / abarth know better

[13:37:00.0000] <Hixie>
this look right to you?:

[13:37:01.0000] <Hixie>
#data

[13:37:02.0000] <Hixie>
<table><tr><td><svg><desc><td>

[13:37:03.0000] <Hixie>
#errors

[13:37:04.0000] <Hixie>
#document

[13:37:05.0000] <Hixie>
| <html>

[13:37:06.0000] <Hixie>
|   <head>

[13:37:07.0000] <Hixie>
|   <body>

[13:37:08.0000] <Hixie>
|     <table>

[13:37:09.0000] <Hixie>
|       <tbody>

[13:37:10.0000] <Hixie>
|         <tr>

[13:37:11.0000] <Hixie>
|           <td>

[13:37:12.0000] <Hixie>
|             <svg svg>

[13:37:13.0000] <Hixie>
|               <svg desc>

[13:37:14.0000] <Hixie>
|           <td>

[13:37:15.0000] <Hixie>
(there should be parse errors but i guess we're not testing those?)

[13:38:00.0000] <karlcow>
/me wants to drop water on top

[13:38:01.0000] <karlcow>
so it will make a nice waterfall

[13:39:00.0000] <annevk>
espadrine, they split on spaces first, so that won't work; that's why spaces are not allowed in IDs

[13:40:00.0000] <annevk>
Hixie, looks alright

[13:40:01.0000] <Hixie>
how do i run the tests? i tried |python2.5 ./runtests.py| but it wants a simplejson module i don't seem to have

[13:40:02.0000] <Hixie>
is there an easy way to install it?

[13:41:00.0000] <Hixie>
or not need it?

[13:41:01.0000] <Hixie>
(i'm on dreamhost)

[13:42:00.0000] <annevk>
can you do

[13:42:01.0000] <annevk>
easy_install simplejson

[13:42:02.0000] <annevk>
with Python 2.6 there's a json module

[13:44:00.0000] <Hixie>
don't have 2.6, and don't have root to install anything

[13:44:01.0000] <Hixie>
bummer

[13:44:02.0000] <Hixie>
can you install locally in a way that works with python?

[13:45:00.0000] <annevk>
yeah you should be able to install libraries and such

[13:45:01.0000] <annevk>
it's just been a while for me

[13:45:02.0000] <annevk>
Philip` might know

[13:46:00.0000] <Hixie>
the documentation for easy_install suggests http://peak.telecommunity.com/DevCenter/EasyInstall#creating-a-virtual-python

[13:46:01.0000] <Hixie>
which looks like something to do after lunch

[13:47:00.0000] <annevk>
I think I have such a virtual setup as well

[13:47:01.0000] <annevk>
http://wiki.dreamhost.com/Python#Virtualenv

[13:48:00.0000] <Hixie>
sounds like the way to go

[13:48:01.0000] <Hixie>
that or just installing python2.6 locally

[13:49:00.0000] <Hixie>
ooh, python2.5 ./test_treewalkers.py didn't need json

[13:49:01.0000] <smaug____>
um, is moznet down :/

[13:50:00.0000] <Hixie>
no

[13:50:01.0000] <smaug____>
for some reason I can't connect to it

[13:50:02.0000] <Hixie>
annevk: yay, html5lib passes my test (checked by breaking the test and checking that it does indeed break!)

[13:51:00.0000] <Hixie>
annevk: so uh, how do i commit something back with mercurial?

[13:51:01.0000] <Hixie>
i don't think i've ever done that!

[13:51:02.0000] <Hixie>
/me looks it up

[13:51:03.0000] <smaug____>
hg commit -m "message"

[13:51:04.0000] <smaug____>
hg push

[13:52:00.0000] <Philip`>
Normally you can tell Python modules to install into some prefix like ~/.local somehow and then run "PYTHONPATH=~/.local python ...", I think

[13:53:00.0000] <Hixie>
smaug____: thanks

[13:59:00.0000] <karlcow>
http://msdn.microsoft.com/en-us/ie/hh272903.aspx#_DOMHitTesting

[14:00:00.0000] <karlcow>
"msElementsFromPoint(x, y) Returns an NodeList of elements that are under a point defined by x and y"

[14:05:00.0000] <Hixie>
wtf, i get a 404 not found when i try to hg push

[14:06:00.0000] <smaug____>
Hixie: are you behind some firewall?

[14:06:01.0000] <Hixie>
don't think so

[14:06:02.0000] <smaug____>
or does the .hg/hgrc point to the right repository

[14:08:00.0000] <Hixie>
i pulled from http://, because https:// was giving me a 404 when pulling too, and then changed the hgrc to point to https to push, since it has to be pushed over https on google code hosting.

[14:08:01.0000] <Hixie>
so i guess i should fix the pull problem first

[14:09:00.0000] <Hixie>
hg clone https://code.google.com/p/html5lib/

[14:09:01.0000] <Hixie>
abort: HTTP Error 404: Not Found

[14:09:02.0000] <Hixie>
wtf

[14:09:03.0000] <Hixie>
/me growls at google code hosting

[14:11:00.0000] <smaug____>
hg clone https://code.google.com/p/html5lib/ works here

[14:11:01.0000] <Hixie>
o_O

[14:12:00.0000] <Hixie>
maybe an ssl issue?

[14:12:01.0000] <Hixie>
/me tries it on a different machine

[14:12:02.0000] <smaug____>
I did get warning: code.google.com certificate with fingerprint b3:93:d0:5c:a0:7d:03:45:95:62:ec:18:1a:ea:bd:01:52:84:98:06 not verified (check hostfingerprints or web.cacerts config setting)

[14:15:00.0000] <Hixie>
/me fails to find other machines that have mercurial installed

[14:15:01.0000] <Hixie>
sigh

[14:21:00.0000] <Hixie>
ok here we go

[14:21:01.0000] <Hixie>
and it even works with the https url

[14:41:00.0000] <smaug____>
ah, DOM4's range stringifier isn't backwards compatible

[14:41:01.0000] <smaug____>
/me files some bugs

[14:42:00.0000] <smaug____>
er

[14:42:01.0000] <smaug____>
hmm

[14:42:02.0000] <smaug____>
/me will file implementation bugs

[14:46:00.0000] <AryehGregor>
smaug____, it's not?

[14:46:01.0000] <AryehGregor>
I thought I tested it.

[14:46:02.0000] <AryehGregor>
Maybe I didn't.

[14:49:00.0000] <smaug____>
AryehGregor: I could be wrong

[14:50:00.0000] <smaug____>
AryehGregor: I'm making PI to inherit CharacterData and I started to wonder how toString should work in that case

[14:50:01.0000] <smaug____>
DOM2 is quite vague

[14:50:02.0000] <smaug____>
it does say "Returns the contents of a Range as a string. This string contains only the data characters, not any markup."

[14:50:03.0000] <smaug____>
but it does also hint that "This includes character data in both Text and CDATASec"

[14:52:00.0000] <AryehGregor>
smaug____, but not PI or Comment.  It's meant to work like textContent, as far as I understand it.

[14:53:00.0000] <AryehGregor>
That's how I specced it, anyway.

[14:53:01.0000] <AryehGregor>
CDATASec is the same as Text these days, in spec-land.

[14:53:02.0000] <smaug____>
well, no one has removed CDATA sec, but sure

[14:53:03.0000] <AryehGregor>
From implementations, yet.

[14:53:04.0000] <smaug____>
and CDATA extends Text anyway

[15:22:00.0000] <chriseppstein>
TabAtkins: We're discussing on the Sass mailing list whether it's safe to always unquote quoted strings stored in a variable when used in selector context. Can you imagine a selector ever using single or double quotes?

[15:23:00.0000] <Hixie>
ok i pushed the new parser test up

[15:23:01.0000] <chriseppstein>
people not TabAtkins can also answer :)

[15:27:00.0000] <AryehGregor>
Okay, so Unity provides me with no way to find a window with a particular name.  It doesn't list the names of windows when I Alt-Tab, and it has no taskbar.

[15:27:01.0000] <AryehGregor>
So how am I supposed to find which of my 18 XChat windows is #webkit?

[15:27:02.0000] <AryehGregor>
chriseppstein, [attr=val]?

[15:28:00.0000] <chriseppstein>
AryehGregor: does that use strings?

[15:28:01.0000] <chriseppstein>
I guess it does

[15:28:02.0000] <chriseppstein>
/me waves at  ben_alman 

[15:28:03.0000] <chriseppstein>
asdf

[15:28:04.0000] <chriseppstein>
benschwarz:

[15:29:00.0000] <benschwarz>
chriseppstein: !

[15:29:01.0000] <benschwarz>
the blocks feature in sass, so hot!

[15:29:02.0000] <chriseppstein>
:D

[15:29:03.0000] <AryehGregor>
chriseppstein, data:text/html,<p data-foo="'"><script>alert(document.querySelector("[data\-foo=\"'\"]"))</script>

[15:29:04.0000] <AryehGregor>
Alerts HTMLParagraphElement.

[15:29:05.0000] <benschwarz>
chriseppstein: did it come from our conversation a month (or more?) ago?

[15:30:00.0000] <chriseppstein>
AryehGregor: thanks

[15:30:01.0000] <benschwarz>
or did it just get invented by nex3?

[15:30:02.0000] <chriseppstein>
benschwarz: no. we've been talking about it for over a year

[15:30:03.0000] <benschwarz>
implementation is good

[15:30:04.0000] <benschwarz>
(the api)

[15:30:05.0000] <chriseppstein>
but I really needed it now :)

[15:30:06.0000] <chriseppstein>
since I'm using media queries

[15:30:07.0000] <chriseppstein>
then I needed to change them

[15:30:08.0000] <chriseppstein>
ugh

[15:31:00.0000] <benschwarz>
:) I'll be putting it to use this week myself I reckon

[15:31:01.0000] <benschwarz>
how far away is the sass release?

[15:32:00.0000] <chriseppstein>
benschwarz: we have one bug so far. if you put the same mixin in the content three times our infinite loop detection kicks in erroneously

[15:32:01.0000] <chriseppstein>
benschwarz: who knows. 2-3 months

[15:34:00.0000] <chriseppstein>
but I will start using the master branch right away in my project :)

[15:36:00.0000] <hamcore>
Is there a way to compress meta tags?

[15:38:00.0000] <annevk>
compress?

[15:38:01.0000] <hamcore>
minify it.

[15:39:00.0000] <annevk>
sure, but why?

[15:39:01.0000] <hamcore>
privacy thoughts

[15:40:00.0000] <annevk>
I have a hard time following them

[15:40:01.0000] <hamcore>
nevermind, it was a fool question

[16:40:00.0000] <ojan>
TabAtkins: why the change from "justify" to "distribute"?

[16:41:00.0000] <ojan>
TabAtkins: is there another spec that uses that or is it just under the theory the justify doesn't make sense for vertical flow?

[16:50:00.0000] <ap>
Hixie: I thought that Document.load was a no-go due to backwards compatibility (introducing "load" in variable scope of scripts that didn't have it before). But I can't find any concrete evidence

[16:50:01.0000] <Hixie>
createDocument().load() is definitely not a no-op

[16:50:02.0000] <Hixie>
dunno about Document.load() in general

[16:59:00.0000] <smaug____>
document.load is painful, but so far we (Gecko) haven't managed to get rid of it


2011-09-15
[17:23:00.0000] <ap>
Hixie: no-op? By saying "no-go", I meant that exposing load() on HTML documents may be unacceptable for compatibility

[17:23:01.0000] <Hixie>
ah, yeah, that's possible

[17:25:00.0000] <ap>
Hixie: so FWIW, Document===XMLDocument + existing XMLDocumentLoader.load still seems like a good plan to me

[17:25:01.0000] <ap>
Hixie: unless some vendor wants to test the waters with Document.load

[17:25:02.0000] <Hixie>
having XMLDocument.load not be the actual load() is not web compatible

[17:26:00.0000] <Hixie>
(webkit goes down a number of fallback codepaths because of that)

[17:26:01.0000] <ap>
Hixie: that Sarissa thing seems pretty unique, although admittedly rather common on the Web

[17:28:00.0000] <ap>
Hixie: introducing Document.load might the best path overall indeed. Hopefully someone remembers if there were actual known compatibility issues with that

[17:36:00.0000] <Hixie>
ap: it would mean "load()" would refer to document.load() and not window.load() in all event handler attributes (e.g. onload="load()" would change meaning) so you're probably right that it's a no-go. I commented on the bug again.

[17:36:01.0000] <Hixie>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=14037

[17:42:00.0000] <ap>
Hixie: that's an interesting combination of ideas that I didn't consider. It's pretty far from what WebKit implements now, so I can't confidently say that it's OK for us, but it seems OK

[17:42:01.0000] <Hixie>
it's basically what bz proposed before

[17:42:02.0000] <Hixie>
i was really hoping we could find a way to not have the onreadystate magic, which is why i had moved away from it before

[17:43:00.0000] <Hixie>
but i don't see a way around it

[17:43:01.0000] <ap>
Hixie: it's the "Regular XML documents <…> keep returning a regular Document object" part that I found new

[17:44:00.0000] <Hixie>
ah

[17:45:00.0000] <Hixie>
well it's basically what you said would be confusing in comment 27 :-)

[17:45:01.0000] <Hixie>
but i don't know that we have an option really

[17:46:00.0000] <Hixie>
i don't think it'd be that confusing though, it just means that createDocument() returns a special Document, effectively

[17:50:00.0000] <Hixie>
Lachy: yt?

[17:50:01.0000] <Hixie>
Lachy: (pondering :scope, <style scoped>, querySelector()'s refNodes)

[00:29:00.0000] <jgraham>
So, for reference, the right first step when doing anything python related is to set up a virtualenv

[00:29:01.0000] <jgraham>
http://pypi.python.org/pypi/virtualenv

[00:30:00.0000] <jgraham>
Hixie: Thanks for the test. I'll regenerate the W3C copy of the testsuite

[01:28:00.0000] <annevk>
why is sicking not on IRC when he's sending email?

[02:01:00.0000] <MikeSmith>
annevk: yeah! there should be a law

[02:02:00.0000] <MikeSmith>
hmm, didn't MS submit tests for the history API?

[02:03:00.0000] <MikeSmith>
oh, I guess not yet

[02:03:01.0000] <jgraham>
MikeSmith: We submitted tests for the popState stuff. Is that what you're thinking of?

[02:04:00.0000] <MikeSmith>
jgraham: dunno what I was thinking of :)

[02:04:01.0000] <annevk>
sicking was asking about the history API on twitter

[02:05:00.0000] <MikeSmith>
https://twitter.com/#!/SickingJ/status/114230538134499328

[02:08:00.0000] <annevk>
So the domparsing-ref is escalated into an issue

[02:08:01.0000] <annevk>
I have no idea what that means

[02:13:00.0000] <annevk>
oh yes

[02:13:01.0000] <annevk>
jgraham is going to TPAC

[02:13:02.0000] <jgraham>
Oooh, I am?

[02:13:03.0000] <jgraham>
;)

[02:14:00.0000] <annevk>
just don't worry if you wake up in a strange place in a month and a half

[02:16:00.0000] <MikeSmith>
annevk: it means we got some good times ahead

[02:16:01.0000] <MikeSmith>
and/or it means the sky is falling

[02:17:00.0000] <annevk>
it means jgraham can go to meetings and I can relax in SF :p

[02:21:00.0000] <MikeSmith>
heh

[02:23:00.0000] <MikeSmith>
you know, I've been thinking, the really large number of things that have gotten added to the platform over the last 3 years especially, all this stuff getting implemented, e.g., latest news about new features in IE10

[02:24:00.0000] <MikeSmith>
those are clear signs that we are all doing something wrong

[02:24:01.0000] <MikeSmith>
forgetting what we're here for

[02:25:00.0000] <zcorpan>
MikeSmith: explain

[02:26:00.0000] <MikeSmith>
well, I mean, we should spend less time on that stuff -- forget about, say, writing test cases for the history API

[02:26:01.0000] <MikeSmith>
and instead we should use that time to discuss stuff like "consider reducing verbosity when talking about code points"

[02:27:00.0000] <zcorpan>
ah

[02:30:00.0000] <MikeSmith>
man, I like it when people drop links to the HTML version of the ES5 specs

[02:30:01.0000] <MikeSmith>
https://twitter.com/#!/wycats/status/114237748843524097

[02:31:00.0000] <annevk>
MikeSmith, hahaha

[02:31:01.0000] <MikeSmith>
but now TC39 is going to ruin it by making ES6 and obsoleting it all

[02:32:00.0000] <annevk>
ECMAScript should move to the W3C I think

[02:32:01.0000] <MikeSmith>
yeah, it should

[02:32:02.0000] <MikeSmith>
should have been there to begin with

[02:32:03.0000] <annevk>
having to join a separate standards organization with its own fees and rules is somewhat annoying

[02:32:04.0000] <annevk>
and I think at that point the reason we're not joining

[02:33:00.0000] <annevk>
Bert Bos would have been annoyed, but that's okay; I'm sure he's no fan of XSL-FO either

[02:33:01.0000] <MikeSmith>
I don't think Bert was to blame for that decision

[02:34:00.0000] <MikeSmith>
I've heard other names

[02:34:01.0000] <MikeSmith>
the discussion is probably documented somewhere

[02:34:02.0000] <MikeSmith>
karlcow would probably know

[02:34:03.0000] <MikeSmith>
anyway, ancient history

[02:35:00.0000] <MikeSmith>
for now, it would be nice at least if ECMA and the TC would join us here in this century and actually make the normative spec available in HTML form

[02:35:01.0000] <MikeSmith>
with actual useful cross-references and such

[02:37:00.0000] <MikeSmith>
https://twitter.com/#!/reinmarpl/status/113995021006536704

[02:37:01.0000] <MikeSmith>
Edward V Berard: ‘Walking on water and developing software from a specification are easy, if both are frozen’

[02:38:00.0000] <MikeSmith>
cool, I think I have found a way to discover smart people on twitter

[02:38:01.0000] <MikeSmith>
just look for people who tweet about es5.github.com

[02:39:00.0000] <MikeSmith>
it's like an intelligence test

[02:50:00.0000] <woef>
Did you guys notice the "Adobe warns" article was apparently pulled from techworld?

[02:51:00.0000] <erlehmann>
tetris time ▙▄

[02:52:00.0000] <jgraham>
zcorpan: Umm, depending on which part of the history API sicking had in mind, http://w3c-test.org/html/tests/submission/Opera/historyinterface/

[02:52:01.0000] <jgraham>
(you retweeted, so you are guilty by association)

[02:56:00.0000] <zcorpan>
jgraham: oooh, wasn't aware we had released history api tests

[02:56:01.0000] <zcorpan>
nice!

[02:57:00.0000] <zcorpan>
(if i have reviewed them, i have a bad memory)

[02:58:00.0000] <jgraham>
Hehe

[02:58:01.0000] <jgraham>
I don't remember who reviewed them. Possibly I did

[02:59:00.0000] <jgraham>
I at least reemmber reading them

[03:02:00.0000] <jgraham>
It would be nice if someone could review them for the W3C

[03:02:01.0000] <jgraham>
So that they can go into approved and Microsoft can't pretend they don't exist

[03:03:00.0000] <annevk>
does Microsoft have such a bad implementation then?

[03:04:00.0000] <annevk>
would be nice if the files had somewhat more descriptive names

[03:04:01.0000] <jgraham>
In the tests? Yeah

[03:04:02.0000] <jgraham>
But they don't really group logically

[03:05:00.0000] <jgraham>
(also, you can't review them, in case you were planning to)

[03:05:01.0000] <jgraham>
(since apparently you are horribly biased by working at Opera)

[03:05:02.0000] <annevk>
how did http://w3c-test.org/html/tests/approved/attributes/anchor_href.htm ever get approved?

[03:05:03.0000] <annevk>
or http://w3c-test.org/html/tests/approved/audio/audio_001.htm for that matter

[03:06:00.0000] <annevk>
seems that all the tests that are not using testharness.js should go back for review

[03:14:00.0000] <zcorpan>
annevk: send email to -testsuite

[03:19:00.0000] <annevk>
done

[05:23:00.0000] <LBP>
Hi there. is there a similar way using html5 media to pass parameters to a server if user is seeking when using the H264-server-module here: http://nginx.org/en/docs/http/ngx_http_mp4_module.html

[05:24:00.0000] <LBP>
many flash players implement it, but haven't found a way using in html5 media.

[05:32:00.0000] <zcorpan>
Hixie: http://forums.whatwg.org/bb3/viewtopic.php?f=3&t=4716&p=7434#p7434

[08:38:00.0000] <zcorpan>
do we want createElement to stringify null to "" ?

[08:44:00.0000] <jgraham>
I don't *want* anything to

[08:44:01.0000] <jgraham>
web compat may or may not demand it

[10:14:00.0000] <timeless>
Hixie: afaict, you really do need to use Metro to test IE10

[10:14:01.0000] <timeless>
(which means you need to have VTx enabled in bios typically... stupid bios)

[10:15:00.0000] <Philip`>
/me 's CPU doesn't even support that, regardless of BIOS :-(

[10:31:00.0000] <timeless>
Philip`: well, you could resize your partitions and install to metal

[10:32:00.0000] <timeless>
but most people try to avoid that :)

[10:33:00.0000] <dglazkov>
good morning, Whatwg!

[10:51:00.0000] <AryehGregor>
Problem: Unity has no taskbar, so how am I supposed to see an XChat window flashing when someone pings me?

[10:51:01.0000] <AryehGregor>
/me has started to agree with the camp that feels that Ubuntu deploys severely half-baked ideas

[10:52:00.0000] <zewt>
i've never used ubuntu desktop, but i've given up on ubuntu server and gone back to debian

[11:11:00.0000] <timeless>
AryehGregor: try Metro :)

[11:11:01.0000] <AryehGregor>
timeless, what's Metro?

[11:12:00.0000] <timeless>
well, Windows 8

[11:19:00.0000] <annevk>
zcorpan, I don't get e.g. http://www.w3.org/Bugs/Public/show_bug.cgi?id=14169

[11:19:01.0000] <annevk>
zcorpan, WebKit/Gecko/Presto are the ones that do null->"" rather than null->"null" for most methods

[11:19:02.0000] <annevk>
zcorpan, surely if the plan is to switch that default we don't need to preserve it for new methods like that?

[11:42:00.0000] <annevk>
Hixie, you around? Can we rename DOMSettableTokenList to DOMMutableTokenList?

[11:42:01.0000] <annevk>
Anyone else with opinions?

[11:43:00.0000] <annevk>
Hmm, never mind

[11:43:01.0000] <zcorpan>
annevk: they don't do null->"null" for all methods

[11:44:00.0000] <annevk>
no they currently do null->""

[11:44:01.0000] <annevk>
but they're planning on changing that

[11:45:00.0000] <annevk>
I don't think that has happened yet though, unless I missed something

[11:45:01.0000] <zcorpan>
i mean they don't do null->"" for all methods

[11:47:00.0000] <annevk>
How does that affect methods were they do null->""?

[12:06:00.0000] <TabAtkins>
shepazu: Still need me, or do you have it under control?

[12:07:00.0000] <shepazu>
hey, TabAtkins

[12:07:01.0000] <shepazu>
I think we got it… one of a million details I overlooked in rushing to announce in time

[12:07:02.0000] <shepazu>
thanks for the "encouragement" :)

[12:07:03.0000] <TabAtkins>
Sorry for calling you a bad person... but you were.  ^_^

[12:08:00.0000] <shepazu>
the newest code isn't in place yet, but it's much improved already

[12:08:01.0000] <shepazu>
oh, do you think I designed that page? you are mad, sir!

[12:08:02.0000] <TabAtkins>
Ah, that's a relief.

[12:08:03.0000] <shepazu>
I have neither the talent to make something look that good, nor the abilitty to make code so bad

[12:09:00.0000] <shepazu>
* ability

[12:09:01.0000] <shepazu>
no, it was an outside design firm that I had limited bandwidth with

[12:14:00.0000] <timeless>
url?

[12:14:01.0000] <TabAtkins>
http://w3.org/conf

[12:15:00.0000] <shepazu>
TabAtkins: Tantek also sent some recommendations for the code, which we've tried to integrate

[12:15:01.0000] <shepazu>
there's still one pesky bit though...

[12:15:02.0000] <annevk>
wow

[12:15:03.0000] <annevk>
no date in the URL

[12:15:04.0000] <shepazu>
annevk: :D

[12:15:05.0000] <annevk>
I wonder how many people on the Team lost their teeth trying to get that through

[12:16:00.0000] <zewt>
no date = "don't know whether this is recent enough for me to care about clicking" heh

[12:16:01.0000] <annevk>
zewt, clearly you are inexperienced with dated URLs on w3.org

[12:16:02.0000] <shepazu>
I was actually hoping for w3conf.org, but there is a preference for "cool uris"

[12:16:03.0000] <zewt>
yeah that /conf link definitely should have a date, since it's dated information

[12:16:04.0000] <TabAtkins>
zewt: Given that WebIDL is still behind a 2006 date, that's not a good metric.

[12:16:05.0000] <zewt>
that's "not knowing how or when to use dates", which is a different matter entirely, heh

[12:17:00.0000] <shepazu>
having persistent tools at W3C behind dated URIs is exceedingly unintuitive

[12:18:00.0000] <shepazu>
annevk: actually, it wasn't so hard getting /conf, I was pleased to find

[12:18:01.0000] <zewt>
unimpressed with this vincent guy working on the "mouse lock" stuff

[12:18:02.0000] <TabAtkins>
zewt: ?

[12:18:03.0000] <zewt>
he's of the "ignore feedback i don't like" variety, apparently

[12:19:00.0000] <shepazu>
who isn't?

[12:19:01.0000] <zewt>
heh :P

[12:19:02.0000] <TabAtkins>
zewt: Since I sit next to him and help him do the standards work, I'm pretty sure that's not true.

[12:20:00.0000] <zewt>
well, he's entirely ignored my feedback, and that's the metric i use :)

[12:20:01.0000] <TabAtkins>
I'd have to look at your feedback.  Maybe you just gave bad feedback.  ^_^

[12:21:00.0000] <shepazu>
zewt: are you trying to force feedback on joysticks?

[12:22:00.0000] <TabAtkins>
mouselock, not joystick.

[12:22:01.0000] <shepazu>
shut up, TabAtkins, your response wasn't funny

[12:22:02.0000] <TabAtkins>
Ah, I see.  Well, same to you apparently.  ^_^

[12:22:03.0000] <shepazu>
:D

[12:22:04.0000] <zewt>
just feels like he's speccing something that will dead end nontrivial features of hardware, with the "we can do that in v2" excuse (that doesn't work if the v1 api is designed in a way that can't be logically extended in that way)

[12:23:00.0000] <shepazu>
come on, "force feedback on joysticks" is funny

[12:23:01.0000] <TabAtkins>
I maintain that it wasn't topical enough to be funny.

[12:23:02.0000] <zewt>
i'm going to lock your ... i can't be bothered to think up the rest of this joke

[12:24:00.0000] <annevk>
he didn't reply to your emails?

[12:25:00.0000] <annevk>
is mouse lock getting published as WD or is this some Google effort that sort of looks like a spec but is not really?

[12:25:01.0000] <TabAtkins>
The former.

[12:25:02.0000] <TabAtkins>
We're trying to get it in as an official deliverable of the Events WG.

[12:25:03.0000] <annevk>
last I saw it was a Google Docs document...

[12:25:04.0000] <TabAtkins>
Yes, that was the initial draft work.

[12:25:05.0000] <Philip`>
Someone needs to make an API for web pages to control the vibration motors in console game controllers attached to PCs - lots of sites could probably make good use of that to enhance videos

[12:26:00.0000] <annevk>
then technically they are required to reply to your comments in some manner

[12:26:01.0000] <TabAtkins>
Philip`: That'll be in v2 of the joystick API.  It'll be limited to joysticks that are actually active, so you can't just vibrate every joystick connected.

[12:26:02.0000] <annevk>
though if nobody else agrees with you or feels like speaking up it might be a lost cause anyway

[12:26:03.0000] <zewt>
the thread pretty much ended with me giving some more feedback, and then some crickets ... just not much of an incentive to try to help out with that API

[12:27:00.0000] <annevk>
it's pretty easy for WGs to deal with formal objections when it comes down to it

[12:27:01.0000] <TabAtkins>
zewt: What's your mailing list name?

[12:27:02.0000] <annevk>
I wonder mostly how that API will tie in with <dialog>

[12:27:03.0000] <TabAtkins>
annevk: I don't think there's any connection between the two.

[12:28:00.0000] <Philip`>
http://wastedseconds.com/?p=1917 - there's a whole genre of games based on the vibration feature

[12:28:01.0000] <zewt>
tab: Glenn

[12:28:02.0000] <annevk>
TabAtkins, isn't there for <dialog modal> to some extent? hmm

[12:29:00.0000] <TabAtkins>
annevk: No, mouselock hides the cursor and starts reporting only deltas.  Different entirely from modal dialogs.

[12:29:01.0000] <zewt>
(nb: I'm just grumping on IRC; if I wanted to put the needed energy into it I'd ping the thread myself)

[12:30:00.0000] <annevk>
interesting

[12:30:01.0000] <annevk>
guess I should actually read it

[12:30:02.0000] <TabAtkins>
zewt: Ah, okay.  We discussed that a lot.  It's... hard.

[12:30:03.0000] <TabAtkins>
annevk: Yeah, it's mainly useful for doing FPSes in-browser, though there are a couple more use-cases.

[12:30:04.0000] <zewt>
TabAtkins: if you'll pardom the annoying non-implementor perspective, I don't see what's hard about it

[12:31:00.0000] <TabAtkins>
zewt: The problem is reporting something useful.  As far as we know, unfiltered input doesn't necessary correspond to anything sane.

[12:31:01.0000] <zewt>
raw inputs are in the device's DPI, which is reported by the device itself and can be queried

[12:31:02.0000] <TabAtkins>
In many cases you *would* want un-accelerated input, but still have it filtered in screen space.

[12:31:03.0000] <TabAtkins>
zewt: I'm not down with the specifics, but I believe it's more complicated than that.

[12:32:00.0000] <TabAtkins>
zewt: I can't recall if it's because devices lie, or there's another layer of stuff you have to worry about, or what.

[12:32:01.0000] <TabAtkins>
I can talk to Vincent today if you'd like.

[12:32:02.0000] <zewt>
as long as it converts to a sensible resolution it's perfectly usable--that is, if you mean to report 400 DPI, then reporting in 800 DPI is probably okay, but clearly 10000 DPI is not

[12:33:00.0000] <zewt>
that's the same as the OS's default mouse cursor sensitivity; it mostly needs to be something sane

[12:33:01.0000] <zewt>
(same principle, I mean, not "same units" or anything)

[12:34:00.0000] <timeless>
shepazu: oh... that conference is in Seattle

[12:34:01.0000] <timeless>
shepazu: um

[12:34:02.0000] <timeless>
could /conf/ please highlight Seattle?

[12:34:03.0000] <timeless>
there's too much text for me to find that keyword

[12:35:00.0000] <Hixie>
annevk: send mail (though why would we change that?)

[12:35:01.0000] <timeless>
ideally Seattle would be below '

[12:35:02.0000] <timeless>
'15 and 16'

[12:35:03.0000] <Hixie>
nessy: i should be in in about 25 min

[12:35:04.0000] <shepazu>
timeless: yes, the next round of fixes has that change exactly

[12:35:05.0000] <timeless>
+1

[12:35:06.0000] <shepazu>
just waiting for it to get pushed

[12:35:07.0000] <timeless>
can i get a ping when it's pushed?

[12:35:08.0000] <timeless>
/me hates polling

[12:36:00.0000] <shepazu>
also adds microforomats, thanks to tantek's suggestion

[12:36:01.0000] <shepazu>
timeless: I have no clue, out of my hands… I sent them the changes late last night

[12:36:02.0000] <TabAtkins>
+1 to the microformats!  Yay!

[12:36:03.0000] <timeless>
interesting

[12:36:04.0000] <shepazu>
timeless: but you already have the info…. you don't need to look again….

[12:36:05.0000] <timeless>
the ics file is hosted on w3conf.org

[12:37:00.0000] <timeless>
and it claims it's in Bellevue WA not Seattle

[12:37:01.0000] <shepazu>
timeless: Bellevue is right there

[12:37:02.0000] <timeless>
it's 10mi/15mins away!

[12:37:03.0000] <shepazu>
9 miles from Seattle city center

[12:37:04.0000] <timeless>
across two bridges!

[12:38:00.0000] <TabAtkins>
Rent a car, commie.

[12:38:01.0000] <timeless>
http://maps.google.com/maps?q=Bellevue,+WA,+United+States+to+Seattle,+WA,+United+States&saddr=Bellevue,+WA,+United+States&daddr=Seattle,+WA,+United+States&hl=en&sll=43.641852,-79.612715&sspn=0.010916,0.022724&geocode=FQl61gIdmV23-ClBYKajz2uQVDFlB9DqglTPug%3BFcJp1gIdWVy1-ClVM-iTLBCQVDGa1URpRmUlEA&vpsrc=0&t=h&z=13

[12:38:02.0000] <shepazu>
20 minutes from SEA

[12:38:03.0000] <timeless>
most places won't rent to people w/o driver's licenses

[12:38:04.0000] <TabAtkins>
There's a way to fix that.

[12:38:05.0000] <shepazu>
timeless: take a bus :)

[12:38:06.0000] <timeless>
yeah, actually, starting to work on that today was on my todo list

[12:39:00.0000] <timeless>
> Sorry, we don't have transit schedule data for a trip from Bellevue, WA to Seattle, WA at the time and date you specified.

[12:39:01.0000] <shepazu>
timeless: most people don't know where Bellevue is, so we say "Seattle" to avoid confusion

[12:39:02.0000] <timeless>
transit is 34 mins fwiw

[12:40:00.0000] <timeless>
35mins during morning rush :)

[12:40:01.0000] <shepazu>
timeless: are you seriously bickering about these details? :)

[12:40:02.0000] <timeless>
oops, sorry, it's 31mins going the right direction :)

[12:41:00.0000] <timeless>
no, i'm actually not really allowed to leave the province much until mid december

[12:41:01.0000] <karlcow>
hmmm "vibrate every joystick connected". I can see business opportunities

[12:41:02.0000] <timeless>
otherwise i lose health coverage

[12:41:03.0000] <TabAtkins>
karlcow: Way ahead of you.

[12:41:04.0000] <timeless>
TabAtkins: are usb missile launchers covered under joysticks?

[12:41:05.0000] <karlcow>
yes there… was even one which was connected to ipods I think

[12:42:00.0000] <timeless>
http://www.thinkgeek.com/geektoys/warfare/8a0f/

[12:42:01.0000] <TabAtkins>
timeless: Do they expose the HID joystick interface?

[12:42:02.0000] <timeless>
$25 in stock

[12:42:03.0000] <karlcow>
but I guess I'm not talking about the same type of joysticks

[12:42:04.0000] <TabAtkins>
timeless: Various people plan to add generic HID interaction to javascript.  The joystick API is a specialized subset of that.

[12:42:05.0000] <timeless>
/me worries

[12:42:06.0000] <karlcow>
ah yes… OhMiBod

[12:42:07.0000] <timeless>
i don't know that i want random web pages to talk to medical instruments

[12:43:00.0000] <timeless>
and will it distinguish between USB and BT?

[12:43:01.0000] <TabAtkins>
timeless: Presumably there's permissions involved somewhere.

[12:43:02.0000] <TabAtkins>
timeless: No, I think the HID interface is agnostic as to the wire you use.

[12:43:03.0000] <timeless>
i generally presume that part will be done wrong :)

[12:43:04.0000] <TabAtkins>
timeless: That's part of why joysticks are being separated out from the general case, because they're easier to solve permissions for.  ^_^

[12:44:00.0000] <TabAtkins>
(Hitting a button on the joystick grants access to the current page.)

[12:44:01.0000] <TabAtkins>
(And you can revoke access by turning off the joystick.)

[12:45:00.0000] <timeless>
"turning off the joystick"??

[12:45:01.0000] <timeless>
that seems like a bad requirement

[12:45:02.0000] <TabAtkins>
Or disconnecting, whatever.  Many joysticks can be turned off, though.

[12:45:03.0000] <timeless>
many can't

[12:45:04.0000] <TabAtkins>
That's how you make your Xbox stop trying to listen to a controller.

[12:45:05.0000] <timeless>
and many places don't like people walking out with their joysticks or similar usb devices

[12:45:06.0000] <timeless>
and tend to not expose the usb plug connection

[12:45:07.0000] <TabAtkins>
...what?

[12:46:00.0000] <timeless>
never seen a phone store that objected to people walking away with their display phones?

[12:46:01.0000] <zewt>
well, joystick security is fundamentally easier--it's very hard to make a convincing case for any serious security problems related to joysticks

[12:46:02.0000] <TabAtkins>
Presumably an arcade that exposes all its games through a web interface won't mind the active page always having access.

[12:46:03.0000] <zewt>
(letting scripts vibrate a joystick or read inputs that they shouldn't is annoying and should be prevented, but challenging to call a real security problem)

[12:47:00.0000] <timeless>
TabAtkins: you didn't say that they lose access when the page flips

[12:47:01.0000] <timeless>
so i presumed they don't

[12:47:02.0000] <TabAtkins>
zewt: Right, so false positives on an access grant aren't very worrying.

[12:47:03.0000] <TabAtkins>
timeless: Do you mean when the page navigates, or when the tab switches?

[12:47:04.0000] <timeless>
the latter

[12:48:00.0000] <TabAtkins>
I dunno what the spec currently says about that.

[12:48:01.0000] <TabAtkins>
Either way, not a huge deal.  Reloading the page would wipe access too.

[12:48:02.0000] <timeless>
i've seen various custom browser ui's

[12:48:03.0000] <timeless>
they tend to mess up the nav controls :)

[15:09:00.0000] <AryehGregor>
It's annoying that hg-git can't somehow magically make the commit id's match up.  Now I have nothing unambiguous to call the commits.

[15:09:01.0000] <AryehGregor>
I'll just have to give the first line of the summary, I guess.

[15:17:00.0000] <jgraham>
That would hve to be very magic indeed

[15:17:01.0000] <Hixie>
TabAtkins: if people are ok with the @rule for style scoped="", any chance you can propose it to the csswg and get it okayed?

[15:17:02.0000] <jgraham>
You could call them someSHA1(git):someOtherSHA1(hg)

[15:17:03.0000] <Hixie>
TabAtkins: (the csswg gets antsy when i spec css things)

[15:18:00.0000] <gsnedders>
AryehGregor: It would have to change how one of them computes the sha1, which neither allows, for data integrity checking purposes

[15:18:01.0000] <AryehGregor>
I know.

[15:21:00.0000] <TabAtkins>
Hixie: Yeah, I can.

[15:22:00.0000] <Hixie>
cool, thanks

[15:22:01.0000] <TabAtkins>
Hixie: You know, you could suggest it *before* putting it in your spec...

[15:22:02.0000] <Hixie>
TabAtkins: that's what you're doing :-D

[15:24:00.0000] <Philip`>
AryehGregor: Doesn't it do something like tag the commits with the Hg revision ID?

[15:24:01.0000] <AryehGregor>
Philip`, you mean the git revision id?  This is an hg extension, not a git extension.

[15:24:02.0000] <Philip`>
/me uses an SVN-to-Hg thing which does that, so he can refer to "svn.r1234" in the Hg repository

[15:24:03.0000] <Philip`>
AryehGregor: Oh, whichever way around it is

[15:25:00.0000] <AryehGregor>
/me looks

[15:25:01.0000] <hober>
Hixie: so is the idea to have :scope and @global but not :root?

[15:25:02.0000] <jgraham>
So, uh, the W3C is announcing a conference 2 months in the future?

[15:25:03.0000] <jgraham>
I am not an expert

[15:25:04.0000] <TabAtkins>
hober: Yeah.

[15:25:05.0000] <TabAtkins>
hober: Or, wait, no.

[15:25:06.0000] <AryehGregor>
Philip`, I don't see any tags or such: https://dvcs.w3.org/hg/editing

[15:25:07.0000] <jgraham>
But doesn't one generally ive more notice?

[15:25:08.0000] <Hixie>
hober: define "have"?

[15:25:09.0000] <jgraham>
+g

[15:25:10.0000] <TabAtkins>
hober: :root still exists.  It refers to the root of the document, like normal.

[15:26:00.0000] <TabAtkins>
hober: The proposal is just that normal selectors are scoped to the scoping element, and won't match anything outside of that (so :root never matches, unless <style scoped> is a child of the root).

[15:26:01.0000] <TabAtkins>
hober: And then a selector in an @global block isn't scoped, but still sets :scope to the scoping element.

[15:26:02.0000] <jgraham>
And by "announcing" I mean "has a website with almost no information, but an annoying parallax effect thing for"

[15:27:00.0000] <hober>
TabAtkins: OK. That's not terribly crazy. :)

[15:28:00.0000] <Hixie>
woot :-)

[15:29:00.0000] <hober>
so "foo :scope bar" in a <style scoped> never matches unless it gets @global'ed

[15:29:01.0000] <TabAtkins>
Yes.

[15:31:00.0000] <hober>
word.

[16:01:00.0000] <AryehGregor>
Blech, compiz is chewing up my CPU.

[16:10:00.0000] <AryehGregor>
I guess I have to start using my DVCSes like real DVCSes: save patches, wait for tests to finish running, amend with new expected values before committing.

[16:10:01.0000] <AryehGregor>
Otherwise I can't work on multiple things at once.

[16:11:00.0000] <gsnedders>
AryehGregor: branches?

[16:11:01.0000] <AryehGregor>
gsnedders, guess so.

[16:11:02.0000] <gsnedders>
AryehGregor: commit/squash?

[16:11:03.0000] <AryehGregor>
"squash"?

[16:11:04.0000] <AryehGregor>
What does that do?

[16:13:00.0000] <divya>
combines many commits into one

[16:13:01.0000] <AryehGregor>
Interesting.  Is that hg or git?

[16:15:00.0000] <AryehGregor>
Ah, mq.

[16:15:01.0000] <AryehGregor>
Should've guessed.

[16:16:00.0000] <AryehGregor>
I really wish I had a faster CPU with more cores.

[16:16:01.0000] <AryehGregor>
/me kicks himself


2011-09-16
[18:57:00.0000] <TabAtkins>
Can anyone explain this crazytime behavior? http://jsfiddle.net/leaverou/TwgMY/

[18:58:00.0000] <TabAtkins>
It's exactly reproducible in webkit, ff, and opera.

[18:58:01.0000] <jamesr>
what's the problem?

[18:59:00.0000] <TabAtkins>
If you set fillStyle to an rgba() value and draw into the canvas, then read the color of a drawn pixel back out, you get a slightly different value.

[18:59:01.0000] <jamesr_>
TabAtkins, premultiplied alpha baby

[18:59:02.0000] <jamesr_>
unpremultiplying is lossy

[18:59:03.0000] <TabAtkins>
Oh!

[18:59:04.0000] <TabAtkins>
That makes sense.

[19:06:00.0000] <Philip`>
/me would rather say that premultiplying is lossy

[19:06:01.0000] <Philip`>
since that's where components get quantised more coarsely

[19:07:00.0000] <jcranmer>
well, either way you lose values in the ulp

[19:09:00.0000] <jamesr>
Philip`: correct

[19:09:01.0000] <jamesr>
unpremultiplying is something that happens after data loss occurs, so it's inexact

[21:29:00.0000] <smaug____>
has there been any discussion about Dart here? (and its evilness, and breaking the web etc.)

[21:30:00.0000] <TabAtkins>
I'd be happy to talk with you about it tomorrow morning.

[21:30:01.0000] <TabAtkins>
/me is going home now.

[02:11:00.0000] <annevk>
MikeSmith, you around?

[02:11:01.0000] <annevk>
or maybe shepazu?

[02:11:02.0000] <MikeSmith>
I'm here

[02:11:03.0000] <annevk>
I wonder whether I can get http://dvcs.w3.org/hg/url

[02:12:00.0000] <annevk>
I'll move abarth's Google Docs work there and hopefully inspire him to do some more work on it, but this time in HTML

[02:12:01.0000] <MikeSmith>
I can set it up now

[02:12:02.0000] <annevk>
And as something we can publish down the line. Sweet!

[02:14:00.0000] <MikeSmith>
I notice we already have http://dvcs.w3.org/hg/URLAPI/

[02:15:00.0000] <annevk>
ah okay

[02:15:01.0000] <annevk>
do I have access rights to that?

[02:15:02.0000] <annevk>
and can we maybe lowercase it?

[02:26:00.0000] <annevk>
Is :nth-match() really something people need a lot?

[02:26:01.0000] <annevk>
Seems like feature creep to me...

[02:31:00.0000] <annevk>
MikeSmith, still there?

[02:32:00.0000] <annevk>
oh you created url I see

[02:32:01.0000] <MikeSmith>
yup

[02:33:00.0000] <MikeSmith>
and I just tested pushing a change to it and it worked

[02:33:01.0000] <MikeSmith>
so should work for you as well

[02:33:02.0000] <MikeSmith>
ACLs on it are set so that anybody who's a member of the WebApps WG can write to it

[02:33:03.0000] <annevk>
sweet

[02:33:04.0000] <MikeSmith>
I added a README file

[02:33:05.0000] <MikeSmith>
feel free to delete it

[02:34:00.0000] <annevk>
add one to your beers anne owes me counter :p

[02:34:01.0000] <MikeSmith>
heh

[03:50:00.0000] <MikeSmith>
great, I just got a notification from Google saying that I can use "Michael(tm) Smith" as my name in Google+

[03:51:00.0000] <espadrine>
MikeSmith: I am +1-ing that in my mind right now.

[03:51:01.0000] <MikeSmith>
and now the UI is not letting me even edit it

[03:52:00.0000] <MikeSmith>
wonderful

[03:52:01.0000] <MikeSmith>
anyway, what I plan to do is to remove the (tm) and then just add it back again later

[03:55:00.0000] <MikeSmith>
"We understand that Google+ and its Names Policy may not be for everyone at this time."

[04:07:00.0000] <annevk>
boom

[04:07:01.0000] <annevk>
http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html

[04:07:02.0000] <annevk>
I sort of think that specification should not just define the API, but also URLs in general...

[04:07:03.0000] <annevk>
I wonder if I can convince abarth of that

[04:08:00.0000] <annevk>
I mean everywhere else we have the model / syntax / API in one specification

[04:10:00.0000] <zcorpan>
annevk: why is the title "Progress Events"?

[04:13:00.0000] <annevk>
oops

[04:14:00.0000] <annevk>
copy pasta

[04:15:00.0000] <annevk>
fixed

[04:15:01.0000] <annevk>
guess I might clean it up a bit more at some point if abarth does not beat me to it

[04:18:00.0000] <hasather>
annevk: not sure I like the name "filename" since it's not necessarily a filename

[04:20:00.0000] <annevk>
I'm not the editor

[04:20:01.0000] <annevk>
email public-webapps

[05:32:00.0000] <Ms2ger>
annevk, right, I've dropped document.innerHTML for now; can add it back if there's interest

[06:01:00.0000] <Ms2ger>
# [14:30] <annevk> whoa, AryehGregor has made some crazy cool tests < Truth

[07:17:00.0000] <zcorpan>
Hixie: firefox's console says live dom viewer uses a few deprecated DOM features (like getAttributeNode)

[07:35:00.0000] <zcorpan>
annevk: hmm. http://www.google.com/codesearch#search/&q=hasFeature%5Cs*%5C(%5B%5E,%5D%2B,%5Cs*null%5Cs*%5C)&type=cs

[07:36:00.0000] <zcorpan>
annevk: maybe we need to change that one back

[07:45:00.0000] <annevk>
zcorpan, I see

[07:46:00.0000] <annevk>
Ms2ger, can I get access to Parsing and Serialization?

[07:46:01.0000] <Ms2ger>
Sure

[07:46:02.0000] <annevk>
Ms2ger, XMLHttpRequest relies on dom-innerHTML working for Document

[07:46:03.0000] <Ms2ger>
Oh, really?

[07:47:00.0000] <annevk>
See send()

[07:49:00.0000] <annevk>
Ms2ger, thanks, pushed my changesets

[07:50:00.0000] <zcorpan>
filed http://www.w3.org/Bugs/Public/show_bug.cgi?id=14184

[07:51:00.0000] <annevk>
thanks zcorpan

[08:34:00.0000] <annevk>
Ms2ger, why does .hgtags only list two drafts?

[08:35:00.0000] <Ms2ger>
I was wondering that too

[09:03:00.0000] <annevk>
seems Native Client is out of the box

[09:04:00.0000] <annevk>
or should I say, ActiveG

[09:07:00.0000] <jgraham>
?

[09:11:00.0000] <annevk>
a stable Chrome came out

[09:11:01.0000] <annevk>
http://chrome.blogspot.com/2011/09/new-stable-release-of-chrome-expanding.html?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+blogspot%2FEgta+%28Google+Chrome+Blog%29

[09:11:02.0000] <annevk>
euh

[09:11:03.0000] <annevk>
http://chrome.blogspot.com/2011/09/new-stable-release-of-chrome-expanding.html

[09:11:04.0000] <annevk>
what is it with all this URL cruft these days

[09:11:05.0000] <annevk>
did people stop caring?

[09:13:00.0000] <Philip`>
Yay, now I can experience web applications that fail because they don't support my CPU

[09:13:01.0000] <Ms2ger>
Yet another reason to use Chrome

[09:13:02.0000] <jgraham>
As I non-chrome-user I can not experience web applications that fail because they don't support my CPU

[09:14:00.0000] <jgraham>
Is it possible to die of Google-demo starvation?

[09:14:01.0000] <jgraham>
If not I think I'll be OK

[09:15:00.0000] <Philip`>
/me wonders whether NaCl applications can rely on SSE/SSE2/etc instructions

[09:16:00.0000] <Philip`>
(If not then that sounds bad for performance which is basically the only point of NaCl; if so then it sounds bad for portability which is a significant point of the web)

[09:17:00.0000] <Philip`>
/me would like to rely on SSE2 for offline applications but collected some stats like http://zaynar.co.uk/0ad-pub/cpucaps.html and found that 1% of the application's users still don't support it 10 years after it was introduced :-(

[09:27:00.0000] <gsnedders>
Philip`: (No JS JIT in any shipped browser works on x86 without SSE2)

[09:28:00.0000] <gsnedders>
(But you probably knew that already)

[09:29:00.0000] <Philip`>
(SpiderMonkey's does)

[09:30:00.0000] <Philip`>
(at least as of some months ago)

[09:31:00.0000] <gsnedders>
Does it use x87 or just do all fp through C++?

[09:31:01.0000] <Philip`>
(and anyway you can run JS without a JIT, whereas you can't run NaCl without hardware support for whatever instructions the application uses)

[09:31:02.0000] <Philip`>
It uses x87

[09:31:03.0000] <jcranmer>
shame

[09:32:00.0000] <gsnedders>
Philip`: But their regexp JIT won't, because the JSC stuff definitely doesn't support x87.

[09:33:00.0000] <Philip`>
/me knows since he encountered x87 JIT bugs in it a while ago

[09:33:01.0000] <gsnedders>
(Not that I can think of any reason for regexp to use floats at all)

[09:34:00.0000] <Ms2ger>
Well, we don't care about JITting regexps, so that's fine

[09:34:01.0000] <gsnedders>
Ms2ger: How so?

[09:34:02.0000] <Philip`>
Surely it'd be a better use of engineering effort to just hard-code the regexps that benchmarks use

[09:35:00.0000] <gsnedders>
(We have x87 support, though never shipped as it's a bit too buggy and fixing those bugs has never really been a priority. We also have support for JIT with no FPU.)

[09:36:00.0000] <Ms2ger>
Opera is weird like that :)

[09:37:00.0000] <gsnedders>
Ms2ger: What? Not bug-fixing it? Or the no-FPU support?

[09:37:01.0000] <Ms2ger>
Supporting obscure platforms

[09:38:00.0000] <gsnedders>
Eh, still plenty of TVs and the like which have no FPU.

[09:38:01.0000] <Ms2ger>
Exactly

[09:38:02.0000] <jcranmer>
many ARM procs don't have an FPU

[09:39:00.0000] <gsnedders>
jcranmer: ARM not so much nowadays, MIPS on the other hand…

[09:48:00.0000] <gsnedders>
jcranmer: Also, e.g., the HTC Wilffire doesn't have VFP.

[09:49:00.0000] <gsnedders>
jcranmer: So there are some fairly popular devices without a FPU.

[09:52:00.0000] <zewt>
keep those crappy devices from having a usable browser, so they become less popular :P

[09:55:00.0000] <gsnedders>
zewt: The default WebKit-based browser has JIT, I'm fairly certain.

[09:55:01.0000] <gsnedders>
(wait, it's V8, it must have JIT)

[10:21:00.0000] <annevk>
omg the Chuck Testa meme

[10:21:01.0000] <annevk>
Aslan returns http://i.imgur.com/eaGWI.jpg

[10:22:00.0000] <annevk>
original: http://www.youtube.com/watch?v=LJP1DphOWPs

[10:36:00.0000] <annevk>
haha

[10:36:01.0000] <annevk>
http://www.ojaitaxidermy.com/

[10:37:00.0000] <annevk>
stuff like this why the web needs to be preserved

[10:51:00.0000] <miketaylr>
that video is priceless

[11:03:00.0000] <AryehGregor>
/me finally figures out that the only decent solution to his problem is just to run gnome-panel as a taskbar in Unity too

[11:03:01.0000] <AryehGregor>
/me is more or less happy now

[11:03:02.0000] <AryehGregor>
Hope no one pinged me when I couldn't tell.

[11:04:00.0000] <zewt>
as a choice of name it shows particularly ... questionable judgement. heh

[11:04:01.0000] <zewt>
there are only 290 things called "unity"

[11:05:00.0000] <AryehGregor>
It baffles me how they think that not allowing you to see the window names anywhere when switching windows makes any sense at all.

[11:05:01.0000] <AryehGregor>
I only have two or three terminals open, usually, but how the heck am I supposed to tell them apart from little pictures when I hit Alt-Tab?  They're terminals, they look the same.

[11:05:02.0000] <zewt>
i don't know anything about it, but my first impression from their screenshot is: a column of meaningless icons, which is Novice UI Failure #1

[11:05:03.0000] <AryehGregor>
And they're fullscreen, so just bringing them all to the foreground doesn't help.

[11:06:00.0000] <AryehGregor>
This is not even talking about my 21 XChat windows.

[11:06:01.0000] <zewt>
win7 has a dumb popover thing that shows thumbnail screenshots when you hover over grouped taskbar items--it's utterly worthless, you can't distinguish application windows from a thumbnail

[11:06:02.0000] <AryehGregor>
No, the UI I actually like a lot.  There are just one or two really annoying flaws.

[11:06:03.0000] <AryehGregor>
Well, sometimes you can.  Websites you often can, for instance, if there are only a few.

[11:06:04.0000] <AryehGregor>
Terminals or IRC chats, not so much.

[11:06:05.0000] <zewt>
"you have 5 notepads open, here are five thumbnails with white boxes and blurry unreadable text, which one do you want"

[11:07:00.0000] <zewt>
even distinguishing browser windows doesn't work very well; you have to actually *look* at the thumbnail and puzzle out what it is, since it'll look different every time (which browser tab is active, where you're scrolled on the page)

[11:07:01.0000] <AryehGregor>
Also, the sidebar thing is buggy when I have two monitors and it's on the left side of the right monitor.

[11:07:02.0000] <zewt>
even icons are better than that, since at least you can learn what the icons are and select them without too much though

[11:07:03.0000] <AryehGregor>
Yeah, thumbnails are way less helpful than names.

[11:08:00.0000] <AryehGregor>
It would help if hitting the Windows key on my keyboard actually did what it was supposed t odo.

[11:08:01.0000] <AryehGregor>
to do.

[11:12:00.0000] <AryehGregor>
On the plus side, nouveau's experimental 3D acceleration seems to work fine for me.

[11:34:00.0000] <Ms2ger>
annevk, so should HTMLElement.style be defined in CSSOM or HTML?

[11:34:01.0000] <shepazu>
TabAtkins, :)

[12:06:00.0000] <annevk>
Ms2ger, prolly CSSOM

[12:06:01.0000] <annevk>
Ms2ger, but I need to find time to do CSSOM work so for now don't bother I guess

[12:09:00.0000] <Ms2ger>
Want a patch?

[12:16:00.0000] <AryehGregor>
What license are the HTML WG tests under?

[12:16:01.0000] <AryehGregor>
Ah, I see.

[12:16:02.0000] <AryehGregor>
http://www.w3.org/html/wg/wiki/Testing/Submission/

[12:26:00.0000] <annevk>
Ms2ger, feel free to commit directly

[12:35:00.0000] <annevk>
but tell me about it if you do

[12:35:01.0000] <annevk>
cvs conflicts are the worst

[12:37:00.0000] <Ms2ger>
Looks like I'd need Bert to give me access

[13:15:00.0000] <AryehGregor>
I hate fontSize argh argh argh stab.

[13:16:00.0000] <AryehGregor>
Why couldn't fonts on the web have just used pt to start with as the standard unit and saved us all this pain?

[13:18:00.0000] <aho>
i prefer px

[13:18:01.0000] <gsnedders>
AryehGregor: Because that would've meant knowing the dpi of every monitor?

[13:18:02.0000] <jarek>
AryehGregor: how would you define 1pt?

[13:19:00.0000] <AryehGregor>
gsnedders, no, it would have meant making pt a fake unit that doesn't really mean pt except for printing, which is what happened in real life anyway.

[13:19:01.0000] <jarek>
AryehGregor: this unit makes no sense on screen

[13:19:02.0000] <AryehGregor>
jarek, for printing, as expected.  For screens, make something up.

[13:19:03.0000] <AryehGregor>
Sure it does, properly defined.

[13:19:04.0000] <AryehGregor>
It's currently defined by CSS as some fixed multiple of a px.

[13:19:05.0000] <gsnedders>
AryehGregor: Then "pt" as you've described it isn't the standard unit, it's another unit with the same name.

[13:19:06.0000] <AryehGregor>
Which is in turn defined as "you know, whatever you think makes sense for your monitor".

[13:19:07.0000] <AryehGregor>
gsnedders, correct.

[13:19:08.0000] <jarek>
AryehGregor: if you had assumed that 1pt = 1px then there would be no point in having pt unit at all :P

[13:20:00.0000] <gsnedders>
AryehGregor: Then what have you gained by using the standard unit?

[13:20:01.0000] <AryehGregor>
More specifically, I'm aggrieved that the editing command fontSize uses old-school values of 1-7 instead of sane values.

[13:20:02.0000] <AryehGregor>
gsnedders, it's familiar.  And it will indeed be used as the standard unit for printing.

[13:20:03.0000] <AryehGregor>
Users know how big 10pt text is.

[13:21:00.0000] <AryehGregor>
Because it's what word processors use.

[13:21:01.0000] <aho>
i have absolutely no idea how big 10pt is :)

[13:21:02.0000] <aho>
pt = moonspeak

[13:21:03.0000] <gsnedders>
aho: Yeah, but that's what happens when you get a degree in music.

[13:22:00.0000] <gsnedders>
/me facepalms

[13:22:01.0000] <astearns>
10pt is 0p10 picas. duh

[13:22:02.0000] <gsnedders>
/me mixes up aho and ato again

[13:23:00.0000] <jarek>
on screen 10pt could be anything (depending on which browser you use)

[13:23:01.0000] <jarek>
afair Firefox and Chrome use different functions for converting pt to px

[13:24:00.0000] <jarek>
shouldn't this be standarised by CSS?

[13:24:01.0000] <AryehGregor>
It is.

[13:24:02.0000] <astearns>
gsnedders: what's wrong with knowing what dpi you're drawing in?

[13:24:03.0000] <AryehGregor>
I think it's 1pt = 1.2px or something.

[13:24:04.0000] <AryehGregor>
It was decided a year or two ago, IIRC.

[13:25:00.0000] <astearns>
it's standardized for "normal" dpi, but allowed to be different for abnormal dpi

[13:25:01.0000] <gsnedders>
astearns: Ten years ago it wasn't massively easy to find out, AFAIK

[13:26:00.0000] <gsnedders>
astearns: It's allowed to be different? I thought it was defined to be a number of CSS pixels, though the relation between CSS pixels and device pixels is undefined.

[13:26:01.0000] <astearns>
/me digs for the reference

[13:26:02.0000] <aho>
speaking of which, i'd like to see media queries for sub pixel order & orientation :>

[13:26:03.0000] <gsnedders>
/me would be he's half-dead with a fever

[13:27:00.0000] <aho>
for subpixel rendered icons haha

[13:27:01.0000] <astearns>
the CSS reference pixel is defined as 96 dpi, and all the other length units (points, inches, mm) are defined by the reference pixel

[13:27:02.0000] <astearns>
http://www.w3.org/TR/CSS2/syndata.html#length-units

[13:28:00.0000] <astearns>
so making something 1 inch tall is also dependent on monitor resolution

[13:29:00.0000] <astearns>
if you're not at 96 dpi you can choose what number of device pixels best approximates the reference pixel

[13:29:01.0000] <aho>
px: pixel units — 1px is equal to 0.75pt

[13:29:02.0000] <aho>
ah... there it is

[13:29:03.0000] <jarek>
"The reference pixel is the visual angle of one pixel on a device with a pixel density of 96dpi and a distance from the reader of an arm's length. For a nominal arm's length of 28 inches, the visual angle is therefore about 0.0213 degrees. For reading at arm's length, 1px thus corresponds to about 0.26 mm (1/96 inch)."

[13:30:00.0000] <jarek>
I don't get it :/

[13:31:00.0000] <astearns>
I understand why things were defined this way (for backwards compatibility) but making 1 inch not equal 1 inch is bad

[13:32:00.0000] <astearns>
jarek: it's a complicated way of saying "everyone's been assuming 96 dpi, so we're stuck with it"

[13:33:00.0000] <jarek>
btw, why rem unit is defined to be relative to the font size of top level element?

[13:34:00.0000] <jarek>
99% of the websites specify base font size on body element, not on html element

[13:35:00.0000] <jarek>
no... actually this makes sense as SVG has no body element

[13:35:01.0000] <aho>
html doesn't necessarily have a body element

[13:36:00.0000] <aho>
or a head element for that matter

[13:36:01.0000] <aho>
going with the root node is the best bet

[13:38:00.0000] <jarek>
so specyfing font-size on body element is a bad practice, right?

[13:38:01.0000] <jarek>
it obviously makes rem unit useless

[13:38:02.0000] <aho>
rem is currently only supported in firefox, isn't it?

[13:39:00.0000] <jarek>
or is specyfing *any* base font size a bad practice?

[13:39:01.0000] <aho>
https://developer.mozilla.org/en/CSS/length

[13:39:02.0000] <aho>
so... rem does have some support these days

[13:40:00.0000] <jarek>
aho: it works on Chrome 14, though I haven't checked if it's accurate

[13:40:01.0000] <aho>
oh. ie9 also supports ch. nice :)

[13:41:00.0000] <aho>
<jarek> or is specyfing *any* base font size a bad practice? <- well, it's normalization. if everything needs to be as uniform as possible across different browsers, it's a thing you should do

[13:41:01.0000] <AryehGregor>
HTML will always have a <body> in the DOM if it was created by text/html.

[14:41:00.0000] <scheib>
Newbie question: I'm working on an API that will have a new event. It will be hookable via addEventListener("foo"). Should an implementation also support the older style of element.onfoo?

[14:47:00.0000] <AryehGregor>
scheib, this is for a spec?

[14:47:01.0000] <AryehGregor>
Generally we do support .onfoo for new events, AFAIK.

[14:49:00.0000] <scheib>
Well, the spec in question in "Mouse Lock", where I have not yet called out the 'onfoo' form of events specifically, but curious if I should and under what condition. http://goo.gl/9G8pd

[14:49:01.0000] <AryehGregor>
Ah, okay.

[16:00:00.0000] <AryehGregor>
scheib, try asking on a mailing list.  It seems no one is around right now, probably because it's Friday afternoon.

[16:12:00.0000] <Hixie>
is anyone who cares about acid3 around? i have an update available for review.

[16:16:00.0000] <smaug____>
yes


2011-09-17
[20:01:00.0000] <zewt>
holy hell

[20:01:01.0000] <zewt>
opera stole my .ogg file extension

[20:02:00.0000] <zewt>
i thought the 90s file association wars were over :(

[20:03:00.0000] <smaug____>
nowadays it is usually more like "default browser" war

[20:03:01.0000] <zewt>
opera just landed dangerously close to quicktime in my mental software quality map

[20:10:00.0000] <zewt>
maybe foobar forgot to grab it to begin with? dunno, very bizarre in any case (dear opera: you're a browser)

[00:14:00.0000] <annevk>
ms2ger, hmm yeah, you'd need to have access to dev.w3.org

[00:27:00.0000] <annevk>
Hixie, did you mean the suggestion about treating attributes starting with "on" specially? I suppose we could do that

[00:28:00.0000] <Hixie>
hm if that was the suggestion it sounds suboptimal

[01:06:00.0000] <annevk>
/me reads the original thread again

[01:07:00.0000] <annevk>
oh

[01:08:00.0000] <annevk>
Hixie, so TabAtkins mentioned MooTools which has a magic attribute called "events" which takes its own object

[01:09:00.0000] <annevk>
though in his follow up he thought using magic on* was better...

[01:17:00.0000] <annevk>
the other alternative was using another argument for it

[02:13:00.0000] <annevk>
other problems with just object

[02:13:01.0000] <annevk>
they theoretically unordered

[02:13:02.0000] <annevk>
are*

[02:14:00.0000] <annevk>
but order is detectable for both attributes and event handlers

[02:56:00.0000] <annevk>
I wonder, if we introduce new Text(); how much is the DOMString stuff needed?

[02:56:01.0000] <annevk>
do we want node.appendChild("test") / new Text("test") / both?

[02:59:00.0000] <annevk>
I'm guessing all of it...

[03:43:00.0000] <annevk>
Acid3 updated, let the DOM simplifications commence

[03:44:00.0000] <Ms2ger>
\o/

[05:18:00.0000] <rabbi1>
where can i find good ajaxcrud, simple and explained .....

[07:04:00.0000] <llrcombs>
well, I think it's That Time

[07:04:01.0000] <llrcombs>
IE10/Metro is removing plugin support, and it's really time to define One Codec to Rule Them All

[07:05:00.0000] <Philip`>
There's already plenty of One Codecs defined

[07:05:01.0000] <llrcombs>
Chrome and FF won't budge on open-source-only codecs no matter how hard anyone tries, so it seems that WebM should be the One Codec that all browsers support

[07:09:00.0000] <Philip`>
Someone should suggest that idea to Apple and Microsoft

[10:08:00.0000] <Hixie>
annevk: hmm

[10:09:00.0000] <Hixie>
var e = Element.create('button', { name: 'command', value: 'search', disabled: true, onclick: function (event) { ... } }, 'Search');

[10:09:01.0000] <Hixie>
annevk: maybe just decide how it works based on the value of the entry in the dictionary

[10:10:00.0000] <Hixie>
annevk: string = set content attribute, boolean true = set content attribute to '', boolean false = do nothing, function = set a bubbling event listener for the entry's name minus 'on'?

[10:11:00.0000] <Ms2ger>
That sounds pretty magical

[10:11:01.0000] <Hixie>
the event handler part is, yeah

[10:11:02.0000] <Hixie>
dunno what else to do

[10:12:00.0000] <Ms2ger>
Passing an extra object for event handlers would be less magical, but probably also less convenient

[10:13:00.0000] <Hixie>
actually it wouldn't be that inconvenient, if it came before the array still

[10:13:01.0000] <Hixie>
so long as we can distinguish 'object' from Element/string/Array/Node

[10:14:00.0000] <Hixie>
that might be non-trivial in idl

[10:14:01.0000] <Hixie>
we should look at use cases, see exactly what it looks like

[10:15:00.0000] <zewt>
Hixie: if it's a function, set the property by that name? avoids the "remove on" magic

[10:15:01.0000] <Hixie>
we don't want to be able to set arbitrary properties

[10:15:02.0000] <Hixie>
that has all kinds of weird side-effects

[10:16:00.0000] <zewt>
it'd be weird if "'onclick': func" didn't actually affect the onclick property

[10:16:01.0000] <Hixie>
e.g. consider Element.create('div', { innerHTML: function () { }, innerText: function () { } }, ['']);

[10:16:02.0000] <zewt>
eg. translating it to addEventListener("click", ...) and onclick ending up null would be weird

[10:16:03.0000] <Hixie>
yeah i agree that you want it affecting the 'onfoo's

[10:17:00.0000] <Ms2ger>
And we'll need to figure something out for the ordering as well

[10:18:00.0000] <Hixie>
we only need to worry about ordering if we allow arbitrary properties to be set

[10:18:01.0000] <Hixie>
which i recommend against

[10:19:00.0000] <Ms2ger>
Also for attributes

[10:19:01.0000] <Hixie>
why?

[10:19:02.0000] <Hixie>
the parser sets them and creates the element atomically

[10:19:03.0000] <Ms2ger>
That's fiction

[10:19:04.0000] <Hixie>
there's no order

[10:19:05.0000] <Hixie>
no it's not

[10:19:06.0000] <Hixie>
there's no way to detect the order

[10:19:07.0000] <Ms2ger>
There is

[10:19:08.0000] <Ms2ger>
element.attributes

[10:19:09.0000] <Hixie>
only in buggy browsers

[10:20:00.0000] <Hixie>
element.attributes should define its own order

[10:20:01.0000] <Ms2ger>
Right, the order in which they're set

[10:20:02.0000] <Hixie>
they're not set in an order

[10:22:00.0000] <Philip`>
Aren't there already lots of friendly DOM-wrapper APIs that could be copied from, instead of inventing something new?

[10:22:01.0000] <Philip`>
/me doesn't know of any but doesn't see why they wouldn't exist if people cared about it

[10:23:00.0000] <zewt>
there was a list at the beginning of the thread, I think

[10:23:01.0000] <zewt>
jquery, etc

[10:24:00.0000] <Ms2ger>
jquery is hardly where I'd look for good API design

[10:27:00.0000] <bga_>
Hixie btw instead new Element(name, optMap) you can do more orthogonally - new Element(name)._extend({innerHTML: '...'})._on('click', _foo)

[10:28:00.0000] <Hixie>
(Element.create(), not new Element())

[10:28:01.0000] <bga_>
sorry

[10:28:02.0000] <Hixie>
chaining method calls seems a bit ugly to me

[10:28:03.0000] <Hixie>
but it's an option, certainly

[10:30:00.0000] <bga_>
Hixie but you can out {optMap} arg to _extend

[10:31:00.0000] <bga_>
c# has this init pattern iirc

[10:31:01.0000] <Philip`>
new Element("<button name='command' value='search' disabled onclick='...'>{caption}</button>", { "caption": "Search" }); - HTML already has a syntax for expressing DOM subtrees, it seems silly to invent a new one

[10:31:02.0000] <Hixie>
i don't see the advantage of  Element.create('button').extend({name: 'foo'}).append('Submit');  over  Element.create('button', {name: 'foo'}, 'Submit');

[10:32:00.0000] <bga_>
but it looks as new Foo(){a: 1, b: 2}

[10:32:01.0000] <Hixie>
Philip`: what you just proposed _is_ new syntax

[10:32:02.0000] <zewt>
Philip`: err, you certainly don't want to be writing JS functions inside blocks of text inside jS

[10:32:03.0000] <zewt>
JS

[10:32:04.0000] <Hixie>
Philip`: assuming the {caption} part is magical

[10:33:00.0000] <Philip`>
Only mildly magical, to make it do something that's not redundant with innerHTML

[10:33:01.0000] <zewt>
well, string formatting is something that would be useful and that everyone keeps reinventing (though a different problem, of course)

[10:34:00.0000] <Hixie>
Philip`: how do you create an element whose contents are "a JS block is like {foo}." ?

[10:34:01.0000] <Ms2ger>
Of course it should be new Element("<button name='command' value='search' disabled onclick='...'>%s</button>" % ("Search",))

[10:34:02.0000] <Hixie>
Philip`: how do you programatically decide whether an attribute is set or not?

[10:34:03.0000] <bga_>
Philip` ie already has this syntax

[10:34:04.0000] <Hixie>
Philip`: how do you reference a function for event handlers?

[10:35:00.0000] <Philip`>
new Element("<button onclick={handler}>", {"handler":function(){...}) plus sufficient magic, or something

[10:35:01.0000] <Hixie>
Philip`: moving away from innerHTML is what this discussion is all about

[10:35:02.0000] <Philip`>
/me notes that he hasn't read the discussion so he has no idea what the context is, and hasn't given this any non-trivial amount of thought

[10:35:03.0000] <zewt>
how do you add an attribute to the <button> definition programmatically?

[10:35:04.0000] <Hixie>
well if anne wants to spec an html parser in dom core, obviously i'll let him do it, but i am skeptical he'll want to :-)

[10:36:00.0000] <Philip`>
XML5 parser :-)

[10:36:01.0000] <Ms2ger>
I sure won't let him :)

[10:36:02.0000] <bga_>
Hixie advantage is you shouldnt copy if(optMap != null) this._extand(optMap) in every constructor

[10:37:00.0000] <bga_>
orthogonallity

[10:37:01.0000] <Hixie>
bga_: why is that an advantage? a single pointer comparison is trivial in cost.

[10:38:00.0000] <Hixie>
bga_: plus the whole point here is creating an element _with_ arguments, if you don't want arguments you can already do document.createElement('foo');

[10:38:01.0000] <zewt>
in principle, the whole "set this bundle of properties" thing could be detached from creation, if there's no real need for them to be atomic

[10:39:00.0000] <zewt>
createElement("a").set({href: "url"})

[10:39:01.0000] <bga_>
Hixie you can forget this magic line of code in some constructor. but main idea to move from new Point(x, y) to new Point(){x: x, y: y} form.

[10:40:00.0000] <bga_>
create element and set properties namely

[10:40:01.0000] <Ms2ger>
new Point({x: x, y: y}), I hope

[10:40:02.0000] <zewt>
ew

[10:41:00.0000] <Hixie>
bga_: if you want the JS language itself to change, I recommend bringing it up with the JS folk

[10:41:01.0000] <zewt>
(just an ugly example, a "point" constructor being the last thing you'd want that form for :)

[10:41:02.0000] <Hixie>
bga_: we're just proposing a new constructor within what JS already supports

[10:42:00.0000] <bga_>
Hixie ok. _extend()

[10:42:01.0000] <bga_>
or Ms2ger form

[10:42:02.0000] <bga_>
may be

[10:46:00.0000] <Hixie>
bga_: i still don't understand the advantage then

[10:49:00.0000] <bga_>
Hixie you want ta make same design bug as in Array#map, filter, some etc. each fn get context as last arg instead just force coder to use .bind if he want

[10:49:01.0000] <Hixie>
why is it a design bug?

[10:51:00.0000] <bga_>
you dont want to make obvious decomposition of functionality

[10:51:01.0000] <bga_>
fill object's properties is common task

[10:52:00.0000] <Hixie>
i have nothing against a generic syntax for filling an object's properties

[10:53:00.0000] <Hixie>
that's not what we're talking about here

[10:53:01.0000] <Hixie>
we're talking about a convenient constructor for creating an Element

[10:54:00.0000] <bga_>
ok

[10:54:01.0000] <Hixie>
i recommend bringing up the generic idea in the JS group

[10:54:02.0000] <Hixie>
if they add it, maybe we won't need a generic element constructor at all

[10:56:00.0000] <jarek>
not sure if I had understood your discussion correctly, but what's wrong with document.createElement()?

[10:56:01.0000] <jarek>
why add even more cruft to DOM?

[11:01:00.0000] <Ms2ger>
See the discussion on www-dom

[11:04:00.0000] <Hixie>
jarek: it's verbose

[11:05:00.0000] <jarek>
Hixie: it can be easily abstracted away with frameworks

[11:06:00.0000] <Ms2ger>
jarek, there's a list if you want to argue about the necessity

[11:06:01.0000] <Hixie>
jarek: why require that people use frameworks?

[11:09:00.0000] <bga_>
Hixie what do you think simple but strict(from oop view) about document.Div()? even w/o new

[11:09:01.0000] <bga_>
-about +about

[11:09:02.0000] <Hixie>
i don't understand the question

[11:10:00.0000] <bga_>
sorry. just document.Div() document.B()

[11:10:01.0000] <jarek>
are you planning to have spearate Element.createNS() constructor just like document.createElementNS()?

[11:11:00.0000] <jarek>
s/spearate/separate

[11:11:01.0000] <Hixie>
bga_: seems like it would mean a lot of constructors

[11:12:00.0000] <bga_>
document.Div(){id: 'foo'} if TC39 will accept this syntax

[11:12:01.0000] <Hixie>
jarek: no, iirc the proposal is to just support Element.create('foo'); for HTML, Element.create('svg:foo'); for SVG, and 'math:foo' for MathML.

[11:12:02.0000] <bga_>
Hixie but global scope already has alot of HTML*Element

[11:13:00.0000] <Hixie>
bga_: which don't map 1:1 to elements

[11:24:00.0000] <jarek>
what about E4X? Is it officially dead?

[11:25:00.0000] <Hixie>
unfortunately, seems that way.

[11:25:01.0000] <Hixie>
something like e4x would definitely be my preferred solution, personally

[11:26:00.0000] <Ms2ger>
brendan still objects to removing e4x from SpiderMonkey, IIRC

[11:27:00.0000] <jarek>
I doubt they will remove it from Firefox, this could break some extensions

[11:29:00.0000] <Ms2ger>
I've broken a lot of extensions, so that doesn't bother me much

[15:19:00.0000] <gsnedders>
OTW, I'd be in favour of e4x too, but pretty much including an entire XML tokenizer into the JS parser is somewhat ugly

[15:21:00.0000] <annevk>
So yeah, the question is whether we can distinguish between arrays and objects...

[15:23:00.0000] <gsnedders>
annevk: at what level?

[15:24:00.0000] <annevk>
IDL

[15:24:01.0000] <annevk>
method(string, object, object, array)

[15:24:02.0000] <annevk>
but you want these overloaded versions:

[15:24:03.0000] <annevk>
method(string, object, array)

[15:24:04.0000] <annevk>
method(string, array)

[15:25:00.0000] <annevk>
furthermore, array can also be DOMString

[15:25:01.0000] <annevk>
and ideally also a Node

[15:26:00.0000] <annevk>
object is always a JavaScript object

[15:26:01.0000] <annevk>
{ ... }

[15:26:02.0000] <annevk>
I guess you can technically do it, but maybe not without upsetting the JavaScript gods

[15:26:03.0000] <gsnedders>
At a JS level, you could just check whether Array.prototype is in the prototype chain, or whether it was created through the array constructor (through [[HasInstance]] or whatever)…

[15:27:00.0000] <annevk>
I guess you can do the same for checking about it being a Node?

[15:27:01.0000] <annevk>
versus a {...} object?

[15:27:02.0000] <gsnedders>
But doing anything apart from treating arrays as if they were objects (which they are, they just have a different [[DefineOwnProperty]] which magically changes length) is evil.

[15:27:03.0000] <gsnedders>
annevk: Yeah.

[15:27:04.0000] <gsnedders>
Special-casing host objects is a lot less evil, too.

[15:27:05.0000] <annevk>
less evil?

[15:29:00.0000] <gsnedders>
Special-casing arrays v. other objects is evil.

[15:30:00.0000] <gsnedders>
{0: "a", 1: "b", 2: "c", length: 3} and ["a", "b", "c"] should be identical everywhere.

[15:32:00.0000] <annevk>
I guess it depends on how you view it

[15:32:01.0000] <gsnedders>
As an ES guy. :)

[15:32:02.0000] <gsnedders>
I don't care about your silly host objects. :)

[15:32:03.0000] <annevk>
I mean you can treat them identical and still make this work

[15:33:00.0000] <annevk>
you just say it's method(string, optional object, optional object, optional object) and deal with the specifics in the definition

[15:34:00.0000] <gsnedders>
ewwwww.

[15:36:00.0000] <gsnedders>
Just… just… forking based upon prototype chain or [[Class]] or [[HasInstance]] is evil, and only to be done when it's absolutely impossible to use generic objects.

[15:36:01.0000] <gsnedders>
(And that should be basically never, except when a host object deals with another host object)

[15:39:00.0000] <annevk>
can just look at the keys of the object my man :)

[15:39:01.0000] <annevk>
/me wants his convenient API damnit

[15:39:02.0000] <Hixie>
annevk: for the overloading, i think to do it you'd have to have a whole bunch of overloads, but you could do it

[15:40:00.0000] <annevk>
the magic properties could also work, but they are somewhat less appealing

[15:42:00.0000] <gsnedders>
annevk: And stop pretending I actually write ES, I just write testcases! :)

[15:43:00.0000] <annevk>
Hey you go around as the "ES guy" :p

[15:44:00.0000] <gsnedders>
No, that's farre :)

[15:55:00.0000] <annevk>
/me asks public-script-coord

[16:10:00.0000] <annevk>
gsnedders, well boo you

[16:10:01.0000] <annevk>
Mark Miller says we can!

[16:13:00.0000] <Hixie>
annevk: i said we could already :-P

[16:13:01.0000] <Hixie>
annevk: also, the last argument isn't just Node or string, it's Node or string followed by "..."

[16:15:00.0000] <annevk>
what does that mean?

[16:16:00.0000] <Hixie>
as in varargs

[16:17:00.0000] <annevk>
oh why is that useful?

[16:23:00.0000] <Hixie>
so you don't have to put the square brackets in

[16:24:00.0000] <Hixie>
Element.create('a', {href:'home.html'}, 'Go ', Element.create('em', 'Home!'));

[16:24:01.0000] <Hixie>
...e.g.

[16:24:02.0000] <annevk>
interesting

[16:24:03.0000] <Hixie>
it's pretty easy to do it in webidl i think

[16:25:00.0000] <Hixie>
you just need to a lot of them

[16:25:01.0000] <Hixie>
to cover all the various combinations

[16:25:02.0000] <Hixie>
probably easier to just do it in prose

[16:25:03.0000] <annevk>
I'll think about it some more

[16:25:04.0000] <annevk>
there's no particular rush and http://www.reddit.com/r/IAmA/comments/kitcy/i_am_a_7_year_old_ama/ is really great

[16:26:00.0000] <annevk>
also, I need sleep

[16:26:01.0000] <annevk>
"What's the best advice you can give to my 2.5 year old son?" "A smacking and a beating."

[16:27:00.0000] <annevk>
the one under "What's your favorite joke?" too

[16:35:00.0000] <gsnedders>
annevk: That is brilliant.

[16:46:00.0000] <Philip`>
About type-based overloading: Can't you just use a different method name in each case? That seems more natural for a dynamically-typed language


2011-09-18
[20:40:00.0000] <zewt>
... amazon.co.jp uses doublewidth backslashes in JS code for string escapes? gross

[00:48:00.0000] <rabbi1>
using this innerHTML, innerText, innerShit, innerDick are these supported by FF, and Chrome, ?

[02:58:00.0000] <Ms2ger>
OH: "I do not know how booleans work tralala"

[03:02:00.0000] <annevk>
/me gets curious about context

[03:09:00.0000] <Ms2ger>
http://dvcs.w3.org/hg/webapps/rev/7d1f6ad8a1fb

[03:09:01.0000] <annevk>
ouch

[03:09:02.0000] <annevk>
:)

[03:11:00.0000] <Ms2ger>
:)

[03:12:00.0000] <tmzt>
it was the beginning of time...

[03:12:01.0000] <tmzt>
decemember 31, 1969 to be precise

[03:13:00.0000] <Ms2ger>
Oh man

[03:13:01.0000] <Ms2ger>
You made me realize that people in their forties can represent their birth dates as a unix time stamp

[03:14:00.0000] <Ms2ger>
I feel like living in the future

[07:11:00.0000] <Lachy>
Hixie, I'm back now. I've been on holiday for 10 days, just got home. Ping me again later re :scope, <style scoped>, etc.

[07:14:00.0000] <Lachy>
Hixie, I'll catch up on the email you wrote about it a bit later.

[09:14:00.0000] <remysharp>
am I right in thinking that web workers and shared workers should be able to access IndexedDB methods?

[09:18:00.0000] <beverloo>
IndexedDB should make its features available in the WorkerUtils interface, which is part of a worker's global scope

[09:19:00.0000] <remysharp>
cheers.

[09:19:01.0000] <remysharp>
but sessionStorage (and local) isn't available, right?

[09:21:00.0000] <beverloo>
According to http://dev.w3.org/html5/webstorage/#the-localstorage-attribute it extends the Window interface, so no

[09:22:00.0000] <beverloo>
which would make sense as (at least shared) workers don't have a domain scope

[09:24:00.0000] <remysharp>
that's what I thought - cheers for the tips beverloo

[09:24:01.0000] <zewt>
run!

[10:01:00.0000] <Philip`>
Ms2ger: Ping

[10:01:01.0000] <Ms2ger>
Hi

[10:01:02.0000] <Philip`>
Ms2ger: About general canvas-test-related matters: I'll probably continue to ignore you for the next couple of weeks (got a PhD to finish) but should have some time after that, so please poke me then if I still forget :-)

[10:02:00.0000] <Ms2ger>
Will do :)

[10:08:00.0000] <zewt>
it's bad that it's getting refreshing when pages *don't* have kludgy GUI text editors on pages--where I can undo and actually *not* have the cursor madly jump to some random place in the document

[11:17:00.0000] <Ms2ger>
Anybody who happens to have outerHTML tests lying around?

[11:38:00.0000] <jarek>
Hi

[11:38:01.0000] <jarek>
I remember reading somewhere that SVG filters are going to be replaced with CSS

[11:39:00.0000] <jarek>
I mean that filters would be no longer defined with XML

[11:39:01.0000] <jarek>
is this proposal still actual?

[11:43:00.0000] <jarek>
Microsoft initially said that it is not planning to support SVG fillters (+ SMIL and SVG Fonts) because they thought that the standard is going to change soon

[11:44:00.0000] <jarek>
but they added SVG filters in latest IE10 preview

[14:00:00.0000] <hsivonen>
is there already a wiki page for listing stuff that's going in Acid4?

[14:00:01.0000] <hsivonen>
or should it be Acid Living Test?

[14:00:02.0000] <Ms2ger>
Weren't we giving up on acid tests?

[14:01:00.0000] <hsivonen>
Ms2ger: maybe. I don't know.

[14:01:01.0000] <Ms2ger>
/me prefers conformance test suites

[14:02:00.0000] <Ms2ger>
I'd also prefer if someone else wrote outerHTML tests for me :)

[14:03:00.0000] <AryehGregor>
We should do proper conformance tests.

[14:03:01.0000] <AryehGregor>
Those are actually useful on getting browsers to converge on real standards, not just a handful of random unrelated details.

[14:04:00.0000] <AryehGregor>
Passing Acid3 is almost meaningless.  You can support tiny subsets of the relevant features and get a full score.

[14:05:00.0000] <Ms2ger>
Well...

[14:05:01.0000] <hsivonen>
yay wikipedia: http://en.wikipedia.org/w/index.php?title=Acid3&diff=prev&oldid=451178499

[14:05:02.0000] <Ms2ger>
Firefox passes acid3 now, so it must be a good test :)

[14:05:03.0000] <hsivonen>
Ms2ger: are you still planning on implementing outerHTML?

[14:05:04.0000] <gsnedders>
AryehGregor: And people claim that smaller browsers did exactly that (like Opera and SVG fonts, which we supported for years before Acid3…). :\

[14:06:00.0000] <Ms2ger>
I spent some time on it today, actually

[14:06:01.0000] <hsivonen>
Ms2ger: cool. any guestimate of completion time frame?

[14:06:02.0000] <AryehGregor>
gsnedders, I thought there were some cases where certain browsers did actually add bogus special cases to pass Acid3.

[14:06:03.0000] <Ms2ger>
AryehGregor, sure, webkit does

[14:06:04.0000] <AryehGregor>
I was going to say, I had heard that.

[14:06:05.0000] <Ms2ger>
But that's the way they roll

[14:06:06.0000] <Ms2ger>
s/does/did/, I should say

[14:07:00.0000] <Ms2ger>
hsivonen, I'll try to finish it this week, so expect a lot of stupid questions coming your way :)

[14:07:01.0000] <hsivonen>
Ms2ger: ok. great.

[14:07:02.0000] <gsnedders>
AryehGregor: It's one thing something getting bad publicity for doing so, it's another thing getting bad publicity when it's untrue. :\

[14:08:00.0000] <hsivonen>
AryehGregor: was this the font anti-aliasing thing?

[14:08:01.0000] <hsivonen>
didn't that get fixed in the test rather soon?

[14:08:02.0000] <AryehGregor>
gsnedders, well, it's Opera's fault for being closed-source.  You force people to make up non-falsifiable malicious rumors instead of demonstrably true malicious rumors.

[14:08:03.0000] <AryehGregor>
hsivonen, I vaguely remember it as being about that, yes.

[14:09:00.0000] <gsnedders>
AryehGregor: How so? We shipped browsers for years that disprove that theory.

[14:09:01.0000] <gsnedders>
AryehGregor: Shipping a browser a number of years before Acid3 was published with SVG fonts support would appear to disprove that.

[14:10:00.0000] <hsivonen>
for some levels of "support"

[14:10:01.0000] <Ms2ger>
Were the changes to acid3 announced somewhere, btw?

[14:10:02.0000] <hsivonen>
Ms2ger: G+

[14:10:03.0000] <AryehGregor>
gsnedders, you can't prove it.  Maybe you secretly changed the old released versions to add the feature so that it looked like you always supported it.  The only way to disprove it would be to have the whole version history in a DVCS that uses cryptographic hashes for revision id's so it's impossible to rewrite the history without everyone noticing.

[14:10:04.0000] <hsivonen>
Ms2ger: https://plus.google.com/u/0/107429617152575897589/posts/JdHnqpuUER4

[14:11:00.0000] <Ms2ger>
Meh, G+

[14:12:00.0000] <Philip`>
AryehGregor: How is that any different to people having downloaded binaries in the past and verifying that the hashes are the same as the current provided binaries?

[14:13:00.0000] <AryehGregor>
Philip`, how many people keep around old binaries, and of those, how many are actually going to do the comparison?  With a DVCS, anyone with a checkout automatically verifies the history every time they do a fetch.

[14:13:01.0000] <AryehGregor>
Also, anything closed-source is automatically evil and wrong, regardless of facts or other such distractions.

[14:14:00.0000] <hsivonen>
AryehGregor: assuming your DVCS client hasn't been compromised

[14:14:01.0000] <AryehGregor>
/me goes back to writing an e-mail in Gmail using Chrome

[14:14:02.0000] <AryehGregor>
hsivonen, yes, well, come on.  Let's not be paranoid here.

[14:15:00.0000] <gsnedders>
AryehGregor: People don't need that level of guarantee. Plenty of people believed CVS servers's dates, yet those are trivially changed.

[14:15:01.0000] <AryehGregor>
gsnedders, those people are deluded victims of pre-DVCS technology.  Any centralized version control system is also evil and wrong.

[14:16:00.0000] <gsnedders>
AryehGregor: Also, git commit --date allows you to change the authored date of a commit.

[14:16:01.0000] <AryehGregor>
Also KDE, emacs, and Microsoft.

[14:16:02.0000] <AryehGregor>
gsnedders, it will still look like a descendant of earlier commits, so you're not going to fool anyone.

[14:17:00.0000] <hsivonen>
/me mumbles about WebKit using SVN

[14:18:00.0000] <gsnedders>
AryehGregor: And if someone like bz seriously thinks we doctor our history, then that's fucking sad.

[14:18:01.0000] <AryehGregor>
hsivonen, Chromium has an official git mirror, though.

[14:18:02.0000] <AryehGregor>
And that includes WebKit somewhere.

[14:18:03.0000] <AryehGregor>
gsnedders, I don't know how the word "seriously" found its way into this conversation.

[14:18:04.0000] <AryehGregor>
It must be lost.

[14:19:00.0000] <Philip`>
What if someone changes the release tags in the DVCS to point to a falsified backdated revision?

[14:20:00.0000] <gsnedders>
AryehGregor: bz amongst others have repeatedly claimed that we support SVG fonts because of Acid3 and just enough to pass it. It has been pointed out to him that Opera 8 (which predates Acid *2*) supports as much as the latest Opera release, yet he still claims it.

[14:20:01.0000] <AryehGregor>
I dunno anything about what bz thinks.

[14:20:02.0000] <AryehGregor>
I was actually thinking of the WebKit font thing, which I vaguely recalled someone mentioning.

[14:21:00.0000] <AryehGregor>
I think I remember dbaron or someone complaining about WebKit cheating on something for performance and then admitting that Opera was often faster than Gecko but he never caught it cheating yet.

[14:21:01.0000] <gsnedders>
AryehGregor: Yeah, which they did genuinely temporarily special-cased.

[14:21:02.0000] <gsnedders>
AryehGregor: and then dhyatt and Hixie came to an agreement to remove that

[14:21:03.0000] <AryehGregor>
(although it emerged that dhyatt pointed out WebKit wasn't cheating, it just implemented the feature partially to avoid a performance regression)

[14:22:00.0000] <AryehGregor>
Philip`, why does that matter?  You can easily inspect the revision and detect the falsification.

[14:23:00.0000] <gsnedders>
The only thing I think we only partially fixed for Acid3 was null-terminated strings in DOM, and the chance of us actually fixing that all in one go was always minute, because it means changing basically the entirity of DOM.

[14:24:00.0000] <AryehGregor>
Well, I plan to make sure that every single DOM-related test that I write tests for proper handling of nulls in strings.

[14:25:00.0000] <AryehGregor>
Actually, maybe I should update my DOM Range tests to do that.

[14:25:01.0000] <AryehGregor>
My reflection tests already do.

[14:25:02.0000] <AryehGregor>
Although there are basically no strings in DOM Range, so I don't know what I'd change exactly.

[14:25:03.0000] <gsnedders>
Probably won't really prioritize us fixing it, though, as long as there are things that actively are known to hurt site-compat.

[14:26:00.0000] <AryehGregor>
In the long term everyone will want to score 100% on all these tests.

[14:26:01.0000] <AryehGregor>
I'm not worried about the precise timescales.

[14:26:02.0000] <AryehGregor>
If there are bigger fish to fry for now, be my guest.

[14:38:00.0000] <annevk>
Ms2ger, I quoted the post in full on my blog, in case G+ goes away

[14:39:00.0000] <jgraham>
gsnedders: Wow, holy not worth geting upset about, batman

[14:39:01.0000] <gsnedders>
jgraham: You think that's me upset?

[14:41:00.0000] <jgraham>
gsnedders: Way more than it deserves

[14:41:01.0000] <jgraham>
/me expects he accidentially misrepresents the history of Mozilla and Webkit all the time and hopes no one gets upset about it

[14:42:00.0000] <jgraham>
And Opera too probably

[14:43:00.0000] <annevk>
I think it's nice that gsnedders cares and 386s the interwebs

[14:44:00.0000] <annevk>
I for one did not know we have done SVG fonts since Opera 8

[14:44:01.0000] <jgraham>
Coincidentially, 8 is the number of people that ever used SVG fonts

[14:45:00.0000] <jgraham>
;)

[14:47:00.0000] <annevk>
I don't really care for the feature, especially if we don't do per-character-animations-and-unicorns-and-double-rainbows, but if we get unwarranted flak for it, might as well set people straight

[14:51:00.0000] <jgraham>
Well sure, I woudl rather people had an accurate story. But I'd also rather not accuse people of "thinking we doctor our history" when it seems much more plausible that they made an honest mistake on a subject where it's easy to see how one might be mistaken

[14:52:00.0000] <gsnedders>
jgraham: I don't think that. I use merely using the suggested theory.

[14:53:00.0000] <jgraham>
Anyway I think the fundamental point is that the way acid 3 worked was a disaster

[14:53:01.0000] <jgraham>
ACID4 should be "the full HTML5 conformance testsuite. rendered as a giant smiley face, one pixel per test"

[14:54:00.0000] <zewt>
AFHCTRAAGSFOPPT4

[14:57:00.0000] <annevk>
Really? I thought Acid3 was pretty good

[15:01:00.0000] <Philip`>
Did it lead to improvements in the lives of normal web authors?

[15:04:00.0000] <annevk>
Finally Selectors work everywhere, Media Queries, CSS3 Colors, ...

[15:04:01.0000] <annevk>
Yeah, I would think so

[15:06:00.0000] <jgraham>
A subset of it was probably helpful. But it was too small and too much was only tested in a shallow way

[15:06:01.0000] <jcranmer>
the problem with Acid3 is when it tests poorly-specified components (e.g., SVG fonts)

[15:06:02.0000] <annevk>
Too small? It was much bigger than any previous Acid test...

[15:06:03.0000] <jcranmer>
if the goal is to promote interoperability

[15:07:00.0000] <jcranmer>
you really need to focus on the edge cases

[15:07:01.0000] <jgraham>
And much smaller than a good testsuite

[15:07:02.0000] <annevk>
Yeah, the drive for having a 100 tests should not have been done

[15:07:03.0000] <jcranmer>
the CSS 2.1 test suite has tens of thousands of tests

[15:07:04.0000] <annevk>
jgraham, seems you are missing the point of Acid tests

[15:08:00.0000] <jgraham>
annevk: publicity?

[15:08:01.0000] <annevk>
Yeah, lots of Microsoft copy pasta in there (CSS 2.1 test suite)

[15:08:02.0000] <jcranmer>
and is comprehensive enough that to pass it means you probably interoperably implement it with other UAs

[15:09:00.0000] <jgraham>
The CSS2.1 testsuite is undoubtedly weirdly balanced

[15:09:01.0000] <jcranmer>
Acid2 was a stress test for layout edge cases

[15:09:02.0000] <jgraham>
Like I seem to recall a few hundred tests for drawing outlines of different colours

[15:09:03.0000] <jcranmer>
Acid3 was a grab bag of "implement this feature" and "this browser has this weird bug"

[15:10:00.0000] <jcranmer>
so passing Acid2 meant fixing a lot of bugs and truly arriving at a state where browsers interoperably laid out a page

[15:11:00.0000] <jgraham>
Don't forget the the super-weird "performance test"

[15:11:01.0000] <jcranmer>
passing Acid3 is more like "here's another checkbox of things we implement"

[15:11:02.0000] <annevk>
jcranmer, I don't think Acid2 and Acid3 were that different actually

[15:11:03.0000] <annevk>
from a design perspective

[15:12:00.0000] <annevk>
both were testing annoying bugs and lack of certain features

[15:12:01.0000] <jcranmer>
well, I can't say that SVG fonts is a terribly useful feature to have

[15:12:02.0000] <jcranmer>
:-)

[15:13:00.0000] <annevk>
water under the bridge

[15:15:00.0000] <jgraham>
Not just SVG fonts

[15:15:01.0000] <jcranmer>
the big problem is that while the first Acid tests were fairly comprehensive test suites

[15:16:00.0000] <jgraham>
Any test that has components that amount to little more than feature detection is bad

[15:16:01.0000] <jcranmer>
Acid3 tested many more things in a more shallow way

[15:16:02.0000] <moo-_->
if audio.loop = true is there a way to get number of loop times and does currentTime go back to zero when the loop happens?

[15:22:00.0000] <annevk>
jcranmer, http://www.w3.org/Style/CSS/Test/CSS1/current/test5526c.htm is a fairly comprehensive test suite?

[15:23:00.0000] <annevk>
/me goes to watch some series instead

[15:25:00.0000] <jcranmer>
well, CSS 1 not so much

[15:29:00.0000] <zewt>
i suggest geometric

[16:45:00.0000] <shepazu>
wow, there's a lot of ignorance around SVG fonts on this channel

[16:46:00.0000] <shepazu>
actually, they are very useful

[16:46:01.0000] <shepazu>
they solve several use cases that WOFF fonts and other EOT fonts don't

[16:46:02.0000] <shepazu>
(and don't solve others as well)

[16:47:00.0000] <shepazu>
it's sad when a technical solution becomes political fodder like this


2011-09-19
[21:09:00.0000] <Hixie>
i wouldn't be surprised if acid3 is the main reason IE now does DOM Events

[21:09:01.0000] <Hixie>
(re the earlier discussion)

[21:11:00.0000] <jcranmer>
shepazu: fwiw, the only strong use case I've seen for SVG fonts are "it uses SVG" and "ooh, multicolored text!"

[21:11:01.0000] <shepazu>
jcranmer: have you ever used SVG fonts?

[21:13:00.0000] <jcranmer>
no

[21:13:01.0000] <jcranmer>
I will freely admit that

[21:13:02.0000] <shepazu>
yeah, there you go

[21:13:03.0000] <jcranmer>
I'm not a font designer

[21:13:04.0000] <jcranmer>
nor do I try to do anything funky with web pages

[21:14:00.0000] <shepazu>
if those are the only use cases you've heard of, then you clearly haven't done the research or even thought very hard about it

[21:14:01.0000] <shepazu>
then maybe you aren't the target audience, hm?

[21:14:02.0000] <jcranmer>
I  intend to mean the use cases that are not served by other font technologies

[21:15:00.0000] <jcranmer>
I don't suppose you could be more enlightening?

[21:15:01.0000] <shepazu>
yes, there are other use cases that SVG fonts serve that aren't solved by other font formats

[21:15:02.0000] <jcranmer>
such as...

[21:15:03.0000] <shepazu>
multicolored text is useful, even if you want to be dismissive of it

[21:16:00.0000] <shepazu>
having fills that are not simple colors (or gradients) is another

[21:17:00.0000] <shepazu>
having overlapping lines, as has been done with hand-drawn and printed glyphs for thousands of years, and is used extensively in print advertising and art, but can't be done with other font formats, is another

[21:18:00.0000] <shepazu>
being able to customize a font, or draw one from scratch, is another

[21:18:01.0000] <shepazu>
embedding specific glyphs inside a single document (no external references) is another

[21:18:02.0000] <jcranmer>
it is possible to handle multicolored text with existing technology (i.e., heavy use of <span>)

[21:19:00.0000] <jcranmer>
embedding without external references seems like a poor design goal to me

[21:19:01.0000] <shepazu>
that duplicates the text, and isn't very accessible or maintainable

[21:19:02.0000] <jcranmer>
color isn't accessible

[21:19:03.0000] <shepazu>
animated glyphs can also be useful

[21:20:00.0000] <shepazu>
jcranmer: wtf does that mean?

[21:20:01.0000] <jcranmer>
if I'm blind, I can't see color

[21:20:02.0000] <shepazu>
first off, accessibility doesn't mean "blind"… there are lots of different kinds of disabilities

[21:21:00.0000] <jcranmer>
I'm trying to figure out how manually coloring each glyph would be less accessible than a font which automatically colored some of the glyphs

[21:21:01.0000] <shepazu>
second, duplicating text to get multicolored glyphs for sighted users means that screen readers will double up the text

[21:21:02.0000] <jcranmer>
<span> isn't duplicating text

[21:21:03.0000] <jcranmer>
which is why your response is confusing to me

[21:22:00.0000] <shepazu>
you'll have to be more explicit in how <span>s make a single glyph multicolored

[21:22:01.0000] <shepazu>
withut duping it

[21:23:00.0000] <jcranmer>
I am personally not aware of cases that cause multicoloring of single glyphs

[21:23:01.0000] <shepazu>
and if you're just talking about changing the colors of individual glyphs in a word, you've just killed search, find, screenreading and all other uses of having a word

[21:24:00.0000] <shepazu>
jcranmer: then I suggest you look at print advertising, where it's used all the time

[21:24:01.0000] <jcranmer>
no, a<span>b</span>c is matched when I search for 'abc'

[21:24:02.0000] <jcranmer>
[I just tested it]

[21:25:00.0000] <shepazu>
in a screenreader?

[21:25:01.0000] <shepazu>
in a search engine?

[21:25:02.0000] <jcranmer>
no, the Ctrl-F

[21:25:03.0000] <shepazu>
not good enough

[21:25:04.0000] <jcranmer>
I am also dismissive that print advertising should be written in HTML

[21:26:00.0000] <shepazu>
make some real, comprehensive test cases, and test them, and show some proof, then I'll credit your research

[21:26:01.0000] <jcranmer>
for that use case, I would support SVG fonts, but I do not think that warrants them as a necessity for support in a web browser

[21:26:02.0000] <shepazu>
yeah, I'd say you're pretty dismissive, I agree

[21:26:03.0000] <shepazu>
you are you to say what HTML should be used for?

[21:26:04.0000] <jcranmer>
the primary case people are talking about is web browsers

[21:27:00.0000] <jcranmer>
and whether or not SVG fonts should be a feature implemented by web browsers

[21:27:01.0000] <shepazu>
you think designers don't want to build on the tradition of print media in browsers?

[21:28:00.0000] <shepazu>
(and not just print, but TVs, giant screens, etc?)

[21:29:00.0000] <jcranmer>
why should it be necessary that you send the exact same content for a TV and a large poster advertisement that you do to my desktop computer?

[21:29:01.0000] <shepazu>
why do you think HTML, SVG, and CSS are just on desktop computers? this isn't the 90s

[21:30:00.0000] <jcranmer>
I do not think that

[21:30:01.0000] <jcranmer>
let me rephrase it slightly

[21:30:02.0000] <jcranmer>
should my web browser support the same APIs as, say, a Tivo?

[21:31:00.0000] <jcranmer>
I am arguing that the domain for which svg fonts is suitable is not the same domain for which a web browser is intended to be used

[21:32:00.0000] <shepazu>
and I would need to see much more evidence that that is true, because all the evidence I've seen is that the convergence of TV and the Web is already here

[21:32:01.0000] <shepazu>
TV is now a service, as much as a device

[21:33:00.0000] <shepazu>
one of my TV providers, Netflix, uses a Web browser on my PS3

[21:33:01.0000] <shepazu>
it's written in HTML

[21:34:00.0000] <shepazu>
(at least on some devices, if not on PS3, I'll have to check that)

[21:35:00.0000] <shepazu>
HTML, CSS, JS, SVG, APIs, etc are now a primary programming platform, not just a "Web browser" ghetto

[21:36:00.0000] <shepazu>
I'm surprised I have to make that point

[21:37:00.0000] <shepazu>
font designers have approached the SVG WG about improving SVG fonts because the existing font formats don't meet the use cases they have

[21:37:01.0000] <shepazu>
they know their business, and what they (and their clients) want to do

[21:38:00.0000] <shepazu>
maybe we should listen to them?

[21:38:01.0000] <shepazu>
anyway, I'm off to bed

[00:41:00.0000] <zcorpan>
anyone know a url that webkit will fail to resolve?

[01:29:00.0000] <asmodai>
morning

[01:37:00.0000] <zcorpan>
Living Acid! awesome

[01:46:00.0000] <annevk>
on Acid? Sounds like fun :)

[01:48:00.0000] <annevk>
shepazu, I think the debate was more about whether those additional features were supported

[01:48:01.0000] <annevk>
shepazu, at least that's why I said as long as it doesn't do per-character-...

[02:05:00.0000] <asmodai>
Love the discussions that spring up now that Acid 3 was 'eased' down a bit.

[02:12:00.0000] <robman>
evening all - wondering if anyone knows of a design pattern seen in the wild where the content of an entity can be serialised inline but the canonical id is provided in as an href or similar (e.g. perhaps an IRI/URI)?

[02:14:00.0000] <annevk>
/me is not sure what that means

[02:14:01.0000] <robman>
8) fair enough

[02:14:02.0000] <robman>
atom:link could perhaps be used like this

[02:14:03.0000] <robman>
but in html5 link is defined as not allowed to have content

[02:15:00.0000] <robman>
but sometimes it's useful to serialise content (e.g. cached/latest known) but still provide a reference to a source of truth

[02:15:01.0000] <robman>
just wondering if there's a good reason this design pattern should NOT be used - it seems useful

[02:18:00.0000] <annevk>
so you have a copy of a resource and link to the original using <link>?

[02:21:00.0000] <robman>
well in the link example that's how it could work

[02:22:00.0000] <robman>
we're exploring this design pattern for the POI WG and danbri suggested I ask whatwg people if there was a good reason this was excluded with <link> in html5

[02:22:01.0000] <annevk>
why does it have to be inside the <link>?

[02:23:00.0000] <robman>
for example in a feed...often you want to serialise the latest known copies of things

[02:23:01.0000] <annevk>
(the reason <link> cannot contain anything is because of HTML parsers)

[02:23:02.0000] <robman>
yet still allow them to be externalised - it's just a convenience for serialised delivery

[02:23:03.0000] <robman>
ok...so just a logical convention?

[02:24:00.0000] <annevk>
a syntax constraint

[02:24:01.0000] <robman>
k

[02:27:00.0000] <robman>
my goal was to make the POI model more linked data like and use the existing IANA link relation types where possible rather than create a wave of new entity types - but having too much as links just leads to many network requests so this seemed like a good compromise

[02:27:01.0000] <robman>
but thanks for your feedback annevk

[03:04:00.0000] <Ms2ger>
if (node.isSameNode ? node.isSameNode(otherNode) : node == otherNode)

[03:05:00.0000] <leaverou>
AryehGregor: hi! are you there?

[03:06:00.0000] <matjas>
zcorpan: other browsers throw a TypeError: DOM object constructor cannot be called as a function when you use `Option` without `new` — do you know if that’s a bug or a feature?

[03:11:00.0000] <annevk>
Web IDL should be able to tell you that

[03:11:01.0000] <annevk>
serializing HTML in that matter seems somewhat icky btw

[03:15:00.0000] <zcorpan>
matjas: that's a bug per webidl i think

[03:19:00.0000] <zcorpan>
it's not serializing, it's escaping

[03:19:01.0000] <matjas>
annevk: no argument there :)

[03:20:00.0000] <annevk>
new Text(html)

[03:20:01.0000] <annevk>
at some point

[03:21:00.0000] <annevk>
or just appendChild(htmlString)

[03:21:01.0000] <annevk>
at some point

[03:31:00.0000] <erlehmann>
Ms2ger, what is this i don't even.

[04:25:00.0000] <annevk>
Ms2ger, and xmlVersion too!

[04:33:00.0000] <Ms2ger>
Is Opera removing those, btw?

[04:35:00.0000] <annevk>
I've been filing bugs

[04:39:00.0000] <annevk>
Ms2ger, we are a little behind still, having not yet removed e.g. attachEvent, but we'll get there

[04:40:00.0000] <Ms2ger>
Great

[04:43:00.0000] <roc>
I find it harder to yell at Alex Danilo since I found out he went to my wedding

[04:44:00.0000] <jgraham>
roc: I am the opposite of an expert in this field, but doesn't one usually invite people to one's wedding?

[04:45:00.0000] <jgraham>
So it seems surprising to find out about it years later

[04:46:00.0000] <roc>
at the SVG WG meeting, I found out he used to work at CISRA (Canon Research Australia)

[04:46:01.0000] <roc>
I asked him if he'd met my wife, who was working there when we got married

[04:46:02.0000] <roc>
12 years ago

[04:46:03.0000] <roc>
he said "yeah, I went to her wedding along with her other workmates"

[04:49:00.0000] <roc>
this was of course before I'd even contemplated working on Web browsers ... it's hard to remember there being such a time

[04:51:00.0000] <Ms2ger>
Starting to feel old? :)

[04:51:01.0000] <jgraham>
So was this some part of the wedding where any interested party could attend, or had you actually invited him, but forgotten about it in the intervening time?

[04:51:02.0000] <roc>
jgraham: Janet just invited her workmates, and I'd forgotten their names

[04:51:03.0000] <jgraham>
Fair enough

[04:52:00.0000] <roc>
I probably didn't even remember their names on the day; I was nervous

[04:52:01.0000] <jgraham>
/me is no longer confused

[04:52:02.0000] <roc>
Ms2ger: not "starting", no :-)

[04:54:00.0000] <annevk>
heh

[05:04:00.0000] <annevk>
jgraham, why are assert_exists and assert_not_exists deprecated?

[05:06:00.0000] <jgraham>
annevk: Because they confused people

[05:07:00.0000] <jgraham>
assert_exists is basically assert_own_property

[05:07:01.0000] <jgraham>
s/basically/exactly/

[05:09:00.0000] <annevk>
and not?

[05:10:00.0000] <jgraham>
I don't think there is a replacement at the moment

[05:10:01.0000] <jgraham>
It would be assert_not_own_property

[05:11:00.0000] <jgraham>
I wish I had made things more composable

[05:11:01.0000] <Ms2ger>
Sounds like a weird thing to test

[05:11:02.0000] <jgraham>
Or, at least had and, or, not functions

[05:11:03.0000] <Ms2ger>
Also, assert_truthy would be nice

[05:12:00.0000] <jgraham>
Ms2ger: I don't like the sound of that so I am quite happy for people to use assert_true(truthy == true)

[05:12:01.0000] <Ms2ger>
assert_true(!!truthy), more likely

[05:13:00.0000] <jgraham>
Well whatever

[05:13:01.0000] <Ms2ger>
:)

[05:13:02.0000] <jgraham>
But doing type-converting assertions seems bad

[05:13:03.0000] <annevk>
Ms2ger, I was thinking of testing the historical section of DOM4

[05:14:00.0000] <Ms2ger>
Oh?

[05:14:01.0000] <annevk>
Ms2ger, to make it easier to find out what bugs need to be filed

[05:14:02.0000] <Ms2ger>
Not stopping you :)

[05:14:03.0000] <annevk>
I'm now using stuff like assert_equals(document[name], undefined)

[05:15:00.0000] <annevk>
which works

[05:15:01.0000] <Ms2ger>
assert_false(name in document)?

[05:18:00.0000] <annevk>
could do that too

[05:18:01.0000] <annevk>
it's shorter...

[05:19:00.0000] <annevk>
but maybe the error messages are less nice?

[05:19:01.0000] <jgraham>
Well if it exists you won't get to find out its value

[05:20:00.0000] <Ms2ger>
Mm, true

[05:21:00.0000] <Ms2ger>
dev.w3.org down?

[05:24:00.0000] <annevk>
Ms2ger, it was for me some time ago

[05:25:00.0000] <zcorpan>
annevk: getComputedStyle's second argument should not stringify null to 'null'

[05:25:01.0000] <zcorpan>
annevk: http://www.google.com/codesearch#search/&q=getcomputedstyle%5C(%5B%5E,%5D%2B,%5Cs*null%5Cs*%5C)%20lang:js&type=cs

[05:25:02.0000] <Ms2ger>
Makes sense

[05:26:00.0000] <Ms2ger>
annevk, happen to have the latest Progress Events draft lying around, then?

[05:27:00.0000] <annevk>
Ms2ger, for this one time, http://www.w3.org/TR/progress-events/#interface-progressevent should prolly suffice

[05:29:00.0000] <Ms2ger>
The horror :)

[05:30:00.0000] <annevk>
Ms2ger, hey, Opera has only 13 fail, Mozilla 15! http://w3c-test.org/webapps/DOMCore/tests/submissions/Ms2ger/historical.html

[05:30:01.0000] <annevk>
and I'm comparing a Mozilla nightly to a shipping Opera (prolly doesn't matter)

[05:30:02.0000] <Ms2ger>
/me applies his CDATASection patches

[05:31:00.0000] <annevk>
and we can still do easy stuff like removing Entity and such

[05:33:00.0000] <foolip>
is it Hixie that administers wiki.whatwg.org?

[05:34:00.0000] <Ms2ger>
foolip, Lachy and AryehGregor, IIRC

[05:35:00.0000] <foolip>
Lachy, AryehGregor, logging in doesn't currently work, gives "There seems to be a problem with your login session" and the following printed at the bottom:

[05:35:01.0000] <foolip>
Warning: Unknown: write failed: No space left on device (28) in Unknown on line 0

[05:35:02.0000] <foolip>
Warning: Unknown: Failed to write session data (files). Please verify that the current setting of session.save_path is correct (/tmp) in Unknown on line 0

[05:35:03.0000] <foolip>
looks like someone filled up the disk space...

[05:37:00.0000] <Ms2ger>
Hmm, we seem to have a working implementation of NameList

[05:37:01.0000] <Ms2ger>
But no way to get your hands on one

[05:39:00.0000] <annevk>
Ms2ger, see, this test was a great idea :)

[05:40:00.0000] <annevk>
WebKit has 17 fail

[05:54:00.0000] <Lachy>
foolip, if it's a disk space issue, then Hixie would have to adjust the quota.

[05:55:00.0000] <Lachy>
But there doesn't seem to be any such problem, since I can log in with SSH and write files without a problem.

[05:55:01.0000] <foolip>
Lachy, can you log into the wiki?

[05:55:02.0000] <Lachy>
unless it's a problem with the database quota, which is more likely to fill up.

[05:56:00.0000] <Lachy>
foolip, no. I get the same error. I can only ssh into the server

[05:56:01.0000] <foolip>
ok, so wait until Hixie wakes up?

[05:56:02.0000] <Lachy>
yeah, either he or AryehGregor will have a better chance of fixing than myself.

[06:04:00.0000] <hsivonen>
why does Web Socket have ping messages? (as opposed to letting the app define its own pinging)

[06:06:00.0000] <hsivonen>
allowing ping frames contain application data seems like a great way to invite authors to transfer significant traffic in a place that wasn't meant for it

[06:07:00.0000] <zcorpan>
hsivonen: a ping frame can only have 125 bytes payload

[06:08:00.0000] <Philip`>
You can't even piggyback Twitter messages on it?

[06:09:00.0000] <hsivonen>
zcorpan: why does have payload at all?

[06:09:01.0000] <zcorpan>
hsivonen: i don't know

[06:09:02.0000] <hsivonen>
s//it /

[06:09:03.0000] <hsivonen>
zcorpan: ok

[06:09:04.0000] <zcorpan>
design by hybi

[06:17:00.0000] <Philip`>
Sounds a bit like "another of those things which it was easier to allow to be put in there than it was to argue against it" (from an unrelated standardisation context) - someone says they might possibly want it, so might as well add it to the spec

[06:18:00.0000] <annevk>
that's how the CSS WG operates

[06:25:00.0000] <annevk>
hmm I thought Gecko had "DOMUserData"

[06:26:00.0000] <annevk>
guess I need to add tests for the methods that return that too

[06:26:01.0000] <annevk>
ooh, it has "UserDataHandler"

[06:30:00.0000] <Ms2ger>
17

[06:35:00.0000] <annevk>
I'll do some shopping and then up that number some more :)

[07:38:00.0000] <hsivonen>
I'm a bit surprised at the successful 386 resistence of the usual suspects regarding the "Benefits of polyglot XHTML5" thread on the help list

[07:39:00.0000] <annevk>
Have you considered they might not be subscribed?

[07:39:01.0000] <Ms2ger>
annevk, so...

[07:39:02.0000] <annevk>
/me isn't for instance

[07:39:03.0000] <Ms2ger>
Given two XML documents

[07:39:04.0000] <Ms2ger>
<!DOCTYPE foo [ <!ELEMENT foo (#PCDATA)> ]><foo/>

[07:39:05.0000] <Ms2ger>
and

[07:39:06.0000] <Ms2ger>
<!DOCTYPE foo [ <!ELEMENT foo EMPTY> ]><foo/>

[07:39:07.0000] <Ms2ger>
What should doctype1.isEqualNode(doctype2) return?

[07:40:00.0000] <annevk>
throw a COME_ON_ERR

[07:40:01.0000] <annevk>
but euh, true

[07:41:00.0000] <Ms2ger>
OK

[07:41:01.0000] <hsivonen>
is the internal subset retrievable via the DOM?

[07:42:00.0000] <annevk>
that is, I still think we should nuke DocumentType.internalSubset, and I think we should not care about whether or not DocumentType nodes make a whole lot of sense, because they should not have been there in the first place

[07:42:01.0000] <Ms2ger>
hsivonen, not anymore per spec

[07:46:00.0000] <hsivonen>
Ms2ger: nice

[07:50:00.0000] <Ms2ger>
Hmm

[07:50:01.0000] <Ms2ger>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1142

[07:50:02.0000] <Ms2ger>
Three browsers, three results

[07:51:00.0000] <jgraham>
Try more versions of the browsers

[07:51:01.0000] <Ms2ger>
I'm lazy

[07:51:02.0000] <Ms2ger>
Anyone want to check what IE does?

[07:54:00.0000] <annevk>
Ms2ger, I think WebKit wins

[07:54:01.0000] <hsivonen>
I just got to the email where Hallvord described the brokenness of scripts when a browser fires both readystatechange and load on scripts. I'm not really all that surprised, but it's still so sad.

[07:54:02.0000] <Ms2ger>
Mm

[07:54:03.0000] <annevk>
Ms2ger, it's the intersection of Opera and Gecko and the minimum we can get away with :)

[07:55:00.0000] <Ms2ger>
Not changing that just yet, though

[07:58:00.0000] <annevk>
changing?

[07:59:00.0000] <annevk>
Ms2ger, http://html5.org/specs/dom-parsing.html#concept-serialize-xml is wrong for Text because e.g. & would not be escaped

[07:59:01.0000] <Ms2ger>
Almost everything in that algorithm is wrong :)

[08:20:00.0000] <annevk>
Cunning how http://www.glazman.org/weblog/dotclear/index.php?post/2011/09/19/HTML-UI references the battery API and not one of the many text layout thingiebingies

[08:48:00.0000] <annevk>
Ms2ger, even within DOM3Core NameList is not returned by anything; curious

[09:02:00.0000] <Ms2ger>
annevk, Validation

[09:04:00.0000] <Ms2ger>
And down to 12

[09:04:01.0000] <annevk>
you win

[09:05:00.0000] <Ms2ger>
Now I need to get all these reviewed...

[09:59:00.0000] <annevk>
Ms2ger, where else is TextIsOnlyWhitespace() used?

[10:00:00.0000] <Ms2ger>
CSS optimizations

[10:06:00.0000] <annevk>
After all these years, we still have DOM Load & Save in Opera

[10:06:01.0000] <annevk>
That's why we have DOMError apparently

[13:03:00.0000] <AryehGregor>
jgraham, is it safe to nest test()?

[13:04:00.0000] <AryehGregor>
/me doesn't see why it wouldn't be

[13:07:00.0000] <AryehGregor>
/me realizes he's not actually nesting tests anyway here

[13:34:00.0000] <theoros>
is there a reason the css3 text spec doesn't seem to have a way to inherit the color for text-shadow?

[13:34:01.0000] <theoros>
i can see some mention of this at http://lists.w3.org/Archives/Public/www-style/2011Mar/0126.html but can't find much else

[13:34:02.0000] <divya>
no reason

[13:35:00.0000] <divya>
just like same for box-shadow

[13:42:00.0000] <Hixie>
theoros: there's a color called "currentcolor" that is the value of the 'color' property

[13:49:00.0000] <theoros>
can that be used in the value of the text-shadow property?

[13:59:00.0000] <theoros>
Hixie: ^

[13:59:01.0000] <theoros>
sorry, i should just.. try it. :)

[14:02:00.0000] <theoros>
true enough. http://cssdesk.com/AxcyD thanks for pointing that out.

[14:11:00.0000] <TabAtkins>
Are js strings ucs-2 to utf-16?

[14:12:00.0000] <zewt>
(huh?)

[14:12:01.0000] <TabAtkins>
s/to/or/

[14:13:00.0000] <annevk>
they're 16-bit code units and don't deal with surrogates

[14:13:01.0000] <TabAtkins>
So, ucs-2.

[14:14:00.0000] <zewt>
do any implementations actually vomit utf-16 on you if high codepoints come in from outside?

[14:14:01.0000] <zewt>
("here you go, good luck!")

[14:14:02.0000] <zewt>
(to be fair, that's probably better than whatever other hack might be devised in that situation)

[14:15:00.0000] <annevk>
TabAtkins, I think it's UTF-16, but there's not a native concept of character

[14:15:01.0000] <matjas>
“Serious about XHTML” — http://mathiasbynens.be/notes/xhtml5#comment-46

[14:15:02.0000] <annevk>
TabAtkins, just 16-bit code units

[14:15:03.0000] <matjas>
must… resist…

[14:15:04.0000] <TabAtkins>
annevk: Ah, okay, I get the distinction you're drawing.

[14:15:05.0000] <zewt>
annacc: aka "it'll break your stuff but it's the best we've got"

[14:16:00.0000] <zewt>
nothing ucs-16 (or utf-8) exposes data per-codepoint anyway

[14:19:00.0000] <annevk>
matjas, haha

[14:20:00.0000] <annevk>
matjas, nothing changed since 2002 or so it seems

[14:20:01.0000] <matjas>
TIL browser vendors are lazy

[14:20:02.0000] <Philip`>
/me wonders why laziness is seen as a bad argument

[14:21:00.0000] <Philip`>
Surely both facilitating laziness and exploiting laziness are good approaches to take in any design

[14:21:01.0000] <matjas>
Philip`: because XHTML!

[14:21:02.0000] <annevk>
matjas, oh I didn't read the specific comment; I started at the top...

[14:21:03.0000] <zewt>
heh ... even xhtml has its place :P

[14:22:00.0000] <annevk>
matjas, seemed like a lot of omg have to use XML it will improve the web kind of comments

[14:22:01.0000] <zewt>
(why's it so quiet in here all of a sudden)

[14:22:02.0000] <Philip`>
(It's quiet because HTML is dying)

[14:22:03.0000] <matjas>
annevk: that pretty much sums it up. i gave up on replying

[14:22:04.0000] <AryehGregor>
jgraham, I just tweaked testharness.js so that it will load testharness.css correctly even if the <script> was removed by something in the interim.

[14:23:00.0000] <zewt>
the only case i've found xhtml useful is on things that ... aren't the web

[14:23:01.0000] <zewt>
(eg. isolated protocols where you want to define simple markup, where very limited xhtml profiles can be handy)

[14:24:00.0000] <annevk>
matjas, but yeah whatever, no need to 386 TechZilla

[14:26:00.0000] <AryehGregor>
jgraham, I needed this for my editing tests to work right in IE (although I could have worked around it on my side, of course).

[14:26:01.0000] <AryehGregor>
jgraham, feel free to critique/revert/refactor/whatever.

[14:35:00.0000] <timeless>
AryehGregor: obviously you need to use cmd.exe w/ prefs per app to have different default background colors per session. -- oh wait, does the ubuntu terminal support that? :)

[14:35:01.0000] <timeless>
zewt: fwiw, on my w7 i can fairly easily distinguish windows

[14:35:02.0000] <timeless>
but i rely on two or three things: 1. window shapes (because not all windows are maximized), 2. window titles (because microsoft doesn't hide them and they aren't all useless in my case). 3. pictures (which aren't totally useless for my windows)

[14:35:03.0000] <AryehGregor>
timeless, . . . what?

[14:35:04.0000] <timeless>
AryehGregor: very high latency reply

[14:35:05.0000] <timeless>
you were talking about how Unity was unhelpful

[14:35:06.0000] <AryehGregor>
/me doesn't get the context

[14:35:07.0000] <AryehGregor>
Oh.

[14:35:08.0000] <AryehGregor>
I worked around that already.

[14:36:00.0000] <timeless>
good; what did you do?

[14:36:01.0000] <zewt>
timeless: i have no idea what you're responding to :)

[14:37:00.0000] <timeless>
you were complaining about the w7 taskbar's unusable previews

[14:37:01.0000] <AryehGregor>
timeless, Alt-F2, gnome-panel

[14:37:02.0000] <timeless>
(part of aero peak)

[14:38:00.0000] <timeless>
AryehGregor: alt-f2 sounds like win-r :), glad to hear that the unity update gave you your feature back :)

[14:40:00.0000] <AryehGregor>
Okay, so in IE, getSelection().addRange() decides to throw "Unspecified error."

[14:40:01.0000] <AryehGregor>
For no obvious reason.

[14:40:02.0000] <timeless>
heh

[14:40:03.0000] <AryehGregor>
I think I'm just not going to debug this.  I've put more than enough time into it.

[14:40:04.0000] <AryehGregor>
/me tries in IE10PP2 to give it one last chance

[14:41:00.0000] <AryehGregor>
Oh, nice, it doesn't fail as horribly.

[14:43:00.0000] <zewt>
gushing review

[14:43:01.0000] <ChrisWilson>
That reminds me of an IE poster I have somewhere from around IE5 - the tagline is "You were expecting a new version, but you weren't expecting this."  Doesn't have a version number.  Could apply to any version, really.  :)

[14:44:00.0000] <timeless>
heh

[14:44:01.0000] <timeless>
/me sighs

[14:44:02.0000] <timeless>
the Mozilla Nightly uninstaller isn't friendly to Windows [8] App Certification Kit -- it doesn't support unattended uninstall

[14:45:00.0000] <AryehGregor>
. . . does anyone else have an issue where IE sometimes displays backslashes as struck-through W's?

[14:45:01.0000] <AryehGregor>
/me wonders if it's a font problem

[14:45:02.0000] <timeless>
There's a blog explaining it

[14:45:03.0000] <timeless>
you're in Korea/Japan iirc

[14:45:04.0000] <timeless>
http://blogs.msdn.com/b/michkap/archive/2005/09/17/469941.aspx

[14:45:05.0000] <timeless>
When is a backslash not a backslash?

[14:46:00.0000] <timeless>
The character in question is U+005c, the REVERSE SOLIDUS, also known as the backslash or '\'. It is the path separator for Windows, which is encoded at 0x5c across all of the ANSI code pages.

[14:46:01.0000] <timeless>
Well, on Japanese code page 932, 0x5c is the YEN SIGN, and on Korean code page 949, 0x5c is the WON SIGN.

[14:46:02.0000] <ChrisWilson>
When it's someone saying "http backslash backslash"?

[14:46:03.0000] <timeless>
-- you should read the whole article

[14:46:04.0000] <timeless>
in fact, it should be required reading

[14:47:00.0000] <divya>
ChrisWilson: has your nocompete expired :))

[14:47:01.0000] <hober>
divya: on the 21st, iirc

[14:47:02.0000] <timeless>
/me wonders where ChrisWilson went

[14:47:03.0000] <divya>
o i c

[14:47:04.0000] <divya>
/me wonders the same

[14:48:00.0000] <AryehGregor>
timeless, that is terrifying.

[14:48:01.0000] <timeless>
AryehGregor: i'm moderately horrified to discover you haven't learned about that already

[14:49:00.0000] <AryehGregor>
timeless, why would I?  The page is UTF-8, why the heck should it interpret anything as Korean?

[14:49:01.0000] <zewt>
... is a yen sign a struck-through W? :)

[14:50:00.0000] <timeless>
heh

[14:50:01.0000] <AryehGregor>
No, the won sign is.

[14:50:02.0000] <zewt>
the yen thing is one of the most continuously obnoxious long-term cluster^Wscrewups MS has given us, heh

[14:50:03.0000] <zewt>
for people who have to see it, anyway

[14:50:04.0000] <AryehGregor>
Why am I seeing it, though?

[14:51:00.0000] <zewt>
what's your codepage?

[14:51:01.0000] <timeless>
zewt: totally unfair

[14:51:02.0000] <zewt>
japanese systems always display yen for backslash

[14:51:03.0000] <timeless>
it's not microsoft's fault

[14:51:04.0000] <zewt>
also, what's with unicode's obsession for calling things by obscure names? it's a damn backslash guys

[14:51:05.0000] <timeless>
it's more or less the fault of the japanese/koreans

[14:52:00.0000] <zewt>
timeless: it's their OS that's shipped it that way for a couple decades, so I blame them

[14:52:01.0000] <timeless>
zewt: i'm not a fan of REVERSE SOLIDUS either..

[14:53:00.0000] <ChrisWilson>
whoops, sorry Divya

[14:53:01.0000] <Philip`>
It's Microsoft's fault for not using Unicode before it was invented

[14:53:02.0000] <ChrisWilson>
I have 2 days, 3 hours and 3 minutes left.

[14:53:03.0000] <ChrisWilson>
:)

[14:53:04.0000] <divya>
hehehehe

[14:54:00.0000] <divya>
are you throwing a party when it ends ChrisWilson?

[14:54:01.0000] <timeless>
ChrisWilson: not counting the seconds? :)

[14:54:02.0000] <AryehGregor>
zewt, my OS language is English.  The page's encoding (as determined from the View menu) is UTF-8.

[14:54:03.0000] <aho>
solidus ⁄ slash /

[14:54:04.0000] <aho>
there is a difference

[14:54:05.0000] <ChrisWilson>
I'm thinking it's going to be a rolling party.  :)  But yes, I think I'll host a Seattle party on Oct 1.

[14:55:00.0000] <divya>
o noes i wont be in town :(

[14:55:01.0000] <divya>
(not that I will be invited or anything)

[14:55:02.0000] <divya>
:P :P

[14:55:03.0000] <ChrisWilson>
timeless: well, yes, I'M counting - but people think I'm weird when I say how many seconds.  And then keep saying how many seconds.

[14:55:04.0000] <zewt>
aho: \ is a backslash; unicode can shake their fist angrily all they want, it's still a backslash

[14:55:05.0000] <ChrisWilson>
divya: of course you would!

[14:56:00.0000] <jgraham>
AryehGregor: that ptch looks OK. I would have just written a function that found the prefix and then used that to set a variable rather than having the function set a variable in the enclosing scope

[14:56:01.0000] <divya>
hahaha thnx ChrisWilson you saved me from an AWK moment.

[14:56:02.0000] <AryehGregor>
jgraham, you mean just have the function return the value?  That makes sense.

[14:56:03.0000] <AryehGregor>
Didn't think of that.

[14:56:04.0000] <aho>
my favorite is still octothorpe for #

[14:57:00.0000] <jgraham>
AryehGregor: Yeah

[14:57:01.0000] <Philip`>
aho: At least everyone can agree that's the wrong name, unlike e.g. "pound"

[14:57:02.0000] <aho>
i like hash most

[14:57:03.0000] <zewt>
gar someone sending mail as "whatwg@hostname" with no name

[14:57:04.0000] <timeless>
heh

[14:58:00.0000] <zewt>
i reply to him directly (asking him to fix it) and it shows up in gmail as "Glenn Maynard to whatwg" as if i sent it to the list, heh

[14:58:01.0000] <jgraham>
AryehGregor: If we were being pickly, I would mildly prefer the comment inside the function

[14:58:02.0000] <zewt>
hello mr. whatwg

[14:58:03.0000] <zewt>
aho: heh yeah i was trying to remember that one

[14:58:04.0000] <zewt>
and yet they're so honest with PILE OF POO

[14:58:05.0000] <jgraham>
*picky

[14:58:06.0000] <aho>
speaking of octo*, how is github's mascot called? everyone seems to call it octocat :3

[14:58:07.0000] <jgraham>
I assume pickly is when one is covered in vinegar

[14:59:00.0000] <aho>
haha

[14:59:01.0000] <aho>
i wonder if they will also add steaming pile of poo and pile of poo with some flies

[14:59:02.0000] <jgraham>
/me -> sleep

[14:59:03.0000] <divya>
aho: http://octodex.github.com/

[15:00:00.0000] <aho>
nya :3

[15:05:00.0000] <AryehGregor>
Okay, so do IE and Opera decide whether to add closing tags for things like <p> based on astrology or something?

[15:06:00.0000] <AryehGregor>
In innerHTML, I mean.

[15:06:01.0000] <AryehGregor>
When serializing.

[15:06:02.0000] <timeless>
heh

[15:06:03.0000] <AryehGregor>
Because they seem really inconsistent.

[15:06:04.0000] <timeless>
AryehGregor: have you looked at the source material?

[15:06:05.0000] <AryehGregor>
Which causes them to fail tests in unrelated ways, but if I can't work around it, I guess that's too bad . . .

[15:06:06.0000] <timeless>
/me wonders if they try to avoid adding </p> when the original content didn't have </p>

[15:08:00.0000] <AryehGregor>
I imagine it's something comparably insane to that.

[15:09:00.0000] <AryehGregor>
Or maybe they have a special case where setting innerHTML and then getting it will return the same value.

[15:09:01.0000] <AryehGregor>
That would explain what I'm seeing.

[15:09:02.0000] <timeless>
oh, yeah, that makes sense

[15:10:00.0000] <AryehGregor>
IE10PP2 seems not to quite do that.

[15:10:01.0000] <timeless>
heh

[15:10:02.0000] <AryehGregor>
IE's parsing is completely wacko, by the way.  It parses attribute names to non-lowercase, normalizes attribute values . . .

[15:11:00.0000] <timeless>
how different is uppercase from non-lowercase?

[15:11:01.0000] <AryehGregor>
It does things like parsing contenteditable="foo" to contentEditable="foo".

[15:11:02.0000] <AryehGregor>
And style="font-weight: bold" to style="font-weight: bold;".

[15:12:00.0000] <timeless>
oh

[15:12:01.0000] <timeless>
canonicalcase :)

[15:12:02.0000] <Philip`>
How about <span style="font-weight:bold" style="color:red"> ?

[15:12:03.0000] <AryehGregor>
Of course, Firefox changes <video> to <video tabindex="0">, so . . .

[15:12:04.0000] <timeless>
heh

[15:28:00.0000] <annevk>
I always knew ChrisWilson wanted to hang out here but couldn't because of Microsoft :p

[15:28:01.0000] <annevk>
Kind of funny considering what http://en.wikipedia.org/wiki/Web_Hypertext_Application_Technology_Working_Group has to say about Microsoft

[15:37:00.0000] <ChrisWilson>
annevk: I dropped in a few times even when I worked for MS.

[15:37:01.0000] <timeless>
ChrisWilson: so when did you leave?

[15:37:02.0000] <ChrisWilson>
Actually, wikipedia's article was substantially correct - although I did list a couple of other reasons.

[15:37:03.0000] <timeless>
/me is clearly out of the loop

[15:38:00.0000] <ChrisWilson>
Microsoft?

[15:38:01.0000] <timeless>
yeah

[15:38:02.0000] <ChrisWilson>
I left one year minus two days, two hours nd 19 minutes ago.

[15:38:03.0000] <paul_irish>
lol

[15:38:04.0000] <timeless>
wow

[15:38:05.0000] <gsnedders>
Well, that's certainly accurate.

[15:38:06.0000] <timeless>
does ms give you sufficient severance to afford to be without an employer for that long?

[15:39:00.0000] <ChrisWilson>
timeless: I've been working for Google since last November 1st.

[15:39:01.0000] <timeless>
/me isn't sure if severance is the right word, perhaps compensation?

[15:39:02.0000] <ChrisWilson>
(and no - severance =0.  :)

[15:40:00.0000] <ChrisWilson>
(or more accurately - severance = whatever office supplies you can steal on your last day)

[15:40:01.0000] <timeless>
how much impact has the non-compete had on your everyday life / what you worked on?

[15:40:02.0000] <Philip`>
timeless: Hush money? :-)

[15:40:03.0000] <timeless>
ChrisWilson: in my case, i ordered a phone from my previous employer a month or two before i left

[15:40:04.0000] <timeless>
i was overdue by over a year for one :(

[15:40:05.0000] <timeless>
and the one i got is kinda lame

[15:40:06.0000] <timeless>
otoh, someone's using it

[15:40:07.0000] <timeless>
which means someone appreciates it...

[15:41:00.0000] <ChrisWilson>
timeless: well, I couldn't work on the core web platform team.  :/

[15:41:01.0000] <timeless>
12mp cameras aren't incredibly common today..

[15:42:00.0000] <ChrisWilson>
timeless: I presume you mean 12mp cameras aren't incredibly common on cell phones today?

[15:42:01.0000] <gsnedders>
AryehGregor: innerHTML serialization and optional tags is based upon the input in Opera, IIRC

[15:42:02.0000] <timeless>
/me doesn't know much about cameras

[15:43:00.0000] <timeless>
but sure, if it's necessary to specify cell phones, then make it so :)

[15:43:01.0000] <gsnedders>
ChrisWilson: You and your 5D MkII…

[15:43:02.0000] <timeless>
the last camera i bought was >5 years ago (and it was 8mp)

[15:44:00.0000] <ChrisWilson>
ah.  Current crop of point-and-shoot cameras average 10-12mp.

[15:44:01.0000] <annevk>
ChrisWilson, fair enough; another party at TPAC? ;)

[15:45:00.0000] <ChrisWilson>
12mp seems to be the point where people finally stop caring about "give me MOAR pixels!" and start realizing they've well overshot the resolving power of the crappy lens in their point and shoot.  :)

[15:46:00.0000] <timeless>
heh

[15:46:01.0000] <ChrisWilson>
gsnedders: yeah, although I gotta say - the massive RAW files off the 5Dmkii actually do create storage problems.  I've had to move photos off to another disk.

[15:46:02.0000] <timeless>
heh

[15:47:00.0000] <gsnedders>
ChrisWilson: Heh. I had to do that while my laptop was stil my main computer (with 500GB HDD).

[15:47:01.0000] <ChrisWilson>
annevk: I need to figure out if I'm going to TPAC.  (I know, it's in Santa Clara, not much of an excuse not to.)

[15:49:00.0000] <ChrisWilson>
gsnedders: I'm lazy, and don't want to figure out how to seamlessly replace my 1TB disk with a 3TB in my iMac.

[15:50:00.0000] <gsnedders>
ChrisWilson: I now have a 3TB disk, but 1.5TB Linux and 1.5TB Windows, so all my photos have to fit into the latter (admiteddly most stuff in Windows in on SSD, so the HDD is pretty much just photos)

[15:50:01.0000] <timeless>
heh

[15:54:00.0000] <zewt>
dual-booting in 2011? D:

[15:54:01.0000] <ChrisWilson>
heh

[15:54:02.0000] <ChrisWilson>
dual web browsers is the new dual booting

[15:54:03.0000] <gsnedders>
zewt: Games!

[15:54:04.0000] <gsnedders>
zewt: And still have a sane POSIX terminal :P

[15:54:05.0000] <zewt>
if i need two OS's, i use two computers :P

[15:54:06.0000] <zewt>
(or a VM)

[15:54:07.0000] <zewt>
(though that doesn't help with games)

[16:01:00.0000] <timeless>
zewt: can i show you something which will probably make you cringe? :)

[16:02:00.0000] <gsnedders>
zewt: Yeah, I'd need to use Windows as the host OS, which means the majority of the time I'd be in the virturalized env, which isn't great for perf.

[16:05:00.0000] <timeless>
gsnedders: how *bad* for perf is it?

[16:06:00.0000] <timeless>
/me thought vm's had gotten to the point of mostly not sucking

[16:06:01.0000] <gsnedders>
timeless: A few %, AIUI

[16:07:00.0000] <timeless>
does that really matter?

[16:07:01.0000] <timeless>
if a build takes an hour, a percent is less than a minute

[16:07:02.0000] <timeless>
a few percent is maybe 2 minutes

[16:08:00.0000] <timeless>
/me tries using FishIE w/ Firefox (6?) on Metro @1600x1200 running in Scaled mode inside Windows 7

[16:08:01.0000] <timeless>
it's getting 10-12 fps

[16:10:00.0000] <timeless>
oh gosh, these guys cross posted to both dap and dom?

[16:11:00.0000] <timeless>
http://lists.w3.org/Archives/Public/public-device-apis/2011Sep/att-0086/OMM_deviceAPI.txt

[16:12:00.0000] <timeless>
oh no, dom is realy dom the person, not the group :)

[16:12:01.0000] <timeless>
/me sighs

[16:20:00.0000] <Hixie>
TabAtkins: what do you recommend on the @global thing? (i got a request to finish speccing this out asap since people are implementing <style scoped>)

[16:23:00.0000] <TabAtkins>
I hadn't suggested @global on www-style yet, though that's on my list for today.

[16:23:01.0000] <TabAtkins>
Chrome people doing the implementing are aware of the proposal, so no worries about immediate speccing.

[16:24:00.0000] <Hixie>
TabAtkins: k

[16:24:01.0000] <TabAtkins>
/me goes ahead and writes the email now.

[16:25:00.0000] <gsnedders>
WRITE ALL THE EMAILS.

[16:56:00.0000] <TabAtkins>
Hixie: Wrote the email.


2011-09-20
[17:04:00.0000] <Hixie>
TabAtkins: thanks, awesome.

[17:06:00.0000] <zewt>
Ian Hickson to whatwg, whatwg <- heh

[17:24:00.0000] <Hixie>
ok the wiki login problems from earlier should be fixed

[17:24:01.0000] <Hixie>
(/tmp was full; we ended up moving it to a different partition with orders of magnitude more space)

[17:48:00.0000] <AryehGregor>
Can I run an AM3 CPU in my AM2 motherboard?

[17:48:01.0000] <AryehGregor>
Wikipedia claims yes . . .

[17:54:00.0000] <aho>
the mobo vendor page should help (you gotta go there for the new bios anyways)

[17:54:01.0000] <AryehGregor>
/me finds that for about $100, he can upgrade his Athlon 64 X2 5000+, which is 2.6 GHz dual-core, to an Athlon II X4 645, which is 3.1 GHz quad-core

[17:55:00.0000] <AryehGregor>
But I'm possibly only using this computer for another few months.  Hmm.

[17:55:01.0000] <aho>
i still got a x2 4200+ here

[17:56:00.0000] <AryehGregor>
Thing is, my tests are taking 30 minutes to run and increasing.

[17:56:01.0000] <aho>
heh

[17:57:00.0000] <aho>
on my old machine, the first png re-compression run of inkscape.org's pngs took over 2 days :>

[17:57:01.0000] <aho>
that was fun, i tell you :)

[17:59:00.0000] <aho>
http://inkscape.org/crunchman/inkscape_web.cmlog.html

[17:59:01.0000] <aho>
totally worth it though :>

[17:59:02.0000] <zewt>
are your tests running in parallel? heh

[18:01:00.0000] <AryehGregor>
I have two cores and I'm running them in two browsers at once, so yeah, I suppose so.

[18:01:01.0000] <AryehGregor>
/me finds he has pretty much no upgrade options for his laptop's CPU.  Feh.

[18:03:00.0000] <AryehGregor>
Seems like CPUs that are targeted at laptops and draw 35W are a lot slower than ones targeted at desktops that draw 95W, and more expensive.  Who'd've thought?

[18:03:01.0000] <AryehGregor>
Oh well.

[18:13:00.0000] <timeless>
/me chuckles

[18:14:00.0000] <timeless>
AryehGregor: have you considered rent-a-cloud?

[18:20:00.0000] <zewt>
heh

[18:20:01.0000] <zewt>
i thought about suggesting EC2, but it'd probably need to be a bit more than that to be worth the bother

[18:22:00.0000] <zewt>
between the bother of setting it up, and the time overhead of spinning up instances

[23:30:00.0000] <hsivonen>
jgraham: does Ragnarök clone Firefox's tree depth limit that's not in the parsing spec?

[23:30:01.0000] <hsivonen>
jgraham: I'm rather surprised that http://www.documentacatholicaomnia.eu/1815-1875,_Migne,_Patrologia_Latina_01._Rerum_Conspectus_Pro_Tomis_Ordinatus,_MLT.html fails in Ragnarök the way it fails in Firefox (though with different text color)

[00:11:00.0000] <jgraham>
hsivonen: I thought we had just implemented the spec there

[00:13:00.0000] <jgraham>
Oh, wait, if you mean total tree depth

[00:13:01.0000] <jgraham>
Yeah, we have a limit on how deep trees can be

[00:14:00.0000] <jgraham>
iirc our final soluion was quite close to the firefox behaviour

[00:14:01.0000] <hsivonen>
jgraham: thanks

[01:19:00.0000] <annevk>
abarth, seems like the IRI WG is still not capable of delivering a better URL specification :(

[01:20:00.0000] <abarth>
annevk: big surprise :)

[01:22:00.0000] <annevk>
Yeah, I would have been surprised if they did, actually

[01:29:00.0000] <erlehmann>
better in what regard?

[01:30:00.0000] <annevk>
One that defines what you have to implement

[01:37:00.0000] <hsivonen>
another day, another threat against https :-(

[01:42:00.0000] <annevk>
Pointer hsivonen?

[01:50:00.0000] <annevk>
http://www.usenix.org/events/sec11/stream/jackson/index.html interesting history on postMessage()

[01:51:00.0000] <annevk>
Especially on how browser vendors were played by security researchers (prolly just abarth and collin :) )

[01:51:01.0000] <erlehmann>
annevk, this? http://www.theregister.co.uk/2011/09/19/beast_exploits_paypal_ssl/

[01:51:02.0000] <abarth>
lies!

[01:54:00.0000] <hsivonen>
annevk: what erlehmann said

[01:59:00.0000] <annevk>
Hmm, Yngve now and then tells me about silly websites still using less-than-the-latest encryption stuff

[01:59:01.0000] <annevk>
guess he had a point :(

[02:07:00.0000] <MikeSmith>
"Although versions 1.1 and 1.2 of TLS aren't susceptible, they remain almost entirely unsupported in browsers and websites alike"

[02:07:01.0000] <MikeSmith>
huh?

[02:08:00.0000] <MikeSmith>
oh

[02:11:00.0000] <hsivonen>
/me is amused by getting garbled email from an IETF old-timer

[02:25:00.0000] <MikeSmith>
http://news.cnet.com/8301-30685_3-20108633-264/researchers-to-detail-hole-in-web-encryption/

[02:25:01.0000] <MikeSmith>
However, Adam Langley, a TLS advocate and expert at Google, isn't concerned.

[02:25:02.0000] <MikeSmith>
"The researchers disclosed BEAST to browsers so I'm not going to comment in detail until public. It's neat, but not something to worry about," Langley tweeted yesterday.

[02:51:00.0000] <annevk>
/me wonders why there is so much fail going on in http://w3c-test.org/webapps/ProgressEvents/tests/submissions/Ms2ger/interface.html

[03:00:00.0000] <annevk>
Ms2ger, no idea if you are reading this, but I am making some more ProgressEvent tests

[03:11:00.0000] <annevk>
Browsers fail http://w3c-test.org/webapps/ProgressEvents/tests/submissions/Ms2ger/

[03:12:00.0000] <annevk>
jgraham, even for synchronous callbacks you need async tests right?

[03:14:00.0000] <jgraham>
annevk: I don't really understand the question, but if in doubt async tests always work

[03:49:00.0000] <Philip`>
zewt: Usually EC2 only seems to take about five minutes to start an instance, and setting it up seems pretty straightforward when you follow tutorials, so I wouldn't have thought it's too much bother for a process that would otherwise take 30 minutes

[04:01:00.0000] <karlcow>
http://www.w3.org/wiki/Html-data-tf

[04:03:00.0000] <annevk>
jgraham, addEventListener("test", function() { something }) within a synchronous test is that okay?

[04:03:01.0000] <annevk>
the event fires synchronously

[04:11:00.0000] <jgraham>
annevk: No, because exceptions from the event listener won't propogate to the enclosing function (I assume)

[04:23:00.0000] <zcorpan>
annevk: use t.step_func

[05:33:00.0000] <asmodai>
boom, and DigiNotar just went tits up.

[05:38:00.0000] <asmodai>
Mmm, and a TLS1.0 hacking/decrypting implementation: http://www.theregister.co.uk/2011/09/19/beast_exploits_paypal_ssl/

[06:29:00.0000] <hsivonen>
asmodai: URL to latest DigiNotar news?

[06:31:00.0000] <asmodai>
hsivonen: let me see if I can find an English one

[06:31:01.0000] <asmodai>
hsivonen: unless you can read Dutch?

[06:32:00.0000] <asmodai>
http://www.itpro.co.uk/636244/diginotar-goes-bankrupt-after-hack

[06:34:00.0000] <hsivonen>
asmodai: thanks. (I can't read Dutch without Google Translate)

[06:35:00.0000] <asmodai>
:)

[06:41:00.0000] <hsivonen>
is there some kind of requirement to always say that HTML5 is not going to kill Flash? http://html5doctor.com/html5-briefing-notes-journalists-analysts/

[06:45:00.0000] <asmodai>
I think Flash will lose some market share in that department, unavoidable

[07:29:00.0000] <annevk>
zcorpan, but you need an async test right?

[07:35:00.0000] <zcorpan>
annevk: yeah

[08:01:00.0000] <espadrine>
Hello, I'm trying to summarize what wonderful new stuff comes with upcoming updates to specs, over at https://github.com/espadrine/New-In-A-Spec . I have currently covered DOM4 and ES6. I want to make it easy for anyone to see a glimpse of the future. Tell me what you think, offer pull requests, etc.

[08:06:00.0000] <bga_>
oh @x == p@x >_<

[09:31:00.0000] <Ms2ger>
annevk, yeah, WebIDL stuff is full of fail

[09:32:00.0000] <annevk>
in browsers?

[09:32:01.0000] <Ms2ger>
Yeah

[09:44:00.0000] <AryehGregor>
timeless, rent-a-cloud isn't much good for running tests that only work in browsers, unless I want to set up a headless desktop and log in remotely . . . doesn't seem worth the effort.

[09:45:00.0000] <timeless>
what's wrong w/ that approach?

[09:46:00.0000] <timeless>
if you configure things magically, you can skip the login bit too

[09:46:01.0000] <timeless>
an agent which gets orders from a webpage

[09:46:02.0000] <AryehGregor>
That's a clever idea.

[09:46:03.0000] <AryehGregor>
Maybe I'll pursue it at some later date.

[09:47:00.0000] <AryehGregor>
But for now I think I'll just recognize that I'm going to keep using a desktop for the foreseeable future, not just a laptop, and buy a decent CPU.

[09:47:01.0000] <timeless>
also a good plan :)

[09:51:00.0000] <Ms2ger>
Oh look, it's ChrisWilson

[09:51:01.0000] <ChrisWilson>
heh.  auto-reconnect

[09:51:02.0000] <timeless>
heh

[09:52:00.0000] <ChrisWilson>
/me is at W3C Web-and-TV meeting, trapped in room all day

[09:52:01.0000] <timeless>
/me reaches the point in http://www.usenix.org/events/sec11/stream/jackson/index.html where he thanks IE for breaking Mixed Content

[09:52:02.0000] <timeless>
/me wants to thank the IE team for doing that

[09:53:00.0000] <timeless>
well, he didn't really thank them so much as praise them, but..

[09:55:00.0000] <AryehGregor>
So it looks like AM3 CPUs are not officially supported by ASUS on the M2N.

[09:58:00.0000] <AryehGregor>
More than that, the latest M2N BIOS was released April 2009, and AM3 was launched in February 2009, so I'm pretty sure there's no support.

[09:58:01.0000] <AryehGregor>
Grr.

[10:07:00.0000] <Philip`>
AryehGregor: At least with Windows on EC2, you just launch it and wait a few minutes then rdesktop into it and run whatever you fancy

[10:07:01.0000] <AryehGregor>
Interesting thought.

[10:08:00.0000] <AryehGregor>
I could even run IE that way instead of having to steal my parents' laptop.

[10:08:01.0000] <AryehGregor>
Hmm.

[10:16:00.0000] <AryehGregor>
"One EC2 Compute Unit provides the equivalent CPU capacity of a 1.0-1.2 GHz 2007 Opteron or 2007 Xeon processor."

[10:16:01.0000] <AryehGregor>
That doesn't sound like a lot.

[10:17:00.0000] <AryehGregor>
But the high-memory extra large instance is two virtual cores with 3.25 compute units each, and 17.1 GB of RAM.

[10:17:01.0000] <AryehGregor>
$0.62 per hour for Windows.

[10:17:02.0000] <AryehGregor>
Double extra large is still only $1.24 per hour.

[10:17:03.0000] <AryehGregor>
For using them only a few hours a day, that sounds like an awfully good deal.

[10:18:00.0000] <Philip`>
High-CPU sounds better than high-memory, I would have thought

[10:19:00.0000] <Philip`>
(They round up to an integer number of hours, by the way)

[10:19:01.0000] <AryehGregor>
The high-CPU medium instance only has 1.7G of memory, which isn't very good for running large test pages in multiple browsers.  The high-CPU extra large has 7G of memory, but eight cores with 2.5 compute units each, which is worse for my needs than two or four cores at 3.25 compute units each.

[10:19:02.0000] <AryehGregor>
Good to know.

[10:19:03.0000] <AryehGregor>
/me calculates that this is likely to cost <$500 a year

[10:20:00.0000] <AryehGregor>
When I calculated it for my server, it didn't look so good, but of course servers have to be running all the time.

[10:21:00.0000] <AryehGregor>
At least mine did.

[10:21:01.0000] <AryehGregor>
Okay, I should probably set one of these up.

[10:27:00.0000] <Philip`>
(http://docs.amazonwebservices.com/AWSEC2/2011-07-15/GettingStartedGuide/ seems like the relevant documentation, if you haven't seen that already)

[10:28:00.0000] <Philip`>
(and presumbly you'd want to tell it to launch an instance based on http://aws.amazon.com/amis/Microsoft-Windows/7454225207018905 or similar)

[10:29:00.0000] <AryehGregor>
Thanks!

[10:29:01.0000] <AryehGregor>
/me looks

[10:38:00.0000] <AryehGregor>
Philip`, if I want to not have to reinstall the browsers every time, I'm going to need some block storage too, right?

[10:38:01.0000] <AryehGregor>
How does that work?

[10:42:00.0000] <Philip`>
AryehGregor: If you create an EBS-based instance (not the old-fashioned S3-based style), then it creates you a new EBS root volume by cloning the original image, and changes to that volume will persist until you terminate the instance (or it suffers a failure)

[10:42:01.0000] <AryehGregor>
How do I do that?  Does it have any other practical implications?

[10:42:02.0000] <Philip`>
"terminate" is different from "stop" - you can do the latter and it'll keep the volumes and won't charge you for running the machine

[10:43:00.0000] <Philip`>
(except for the cost of storage, which is fairly trivial)

[10:43:01.0000] <AryehGregor>
Oh!

[10:43:02.0000] <AryehGregor>
I can stop my instance and it will just hibernate it or something, and only charge me for storage?

[10:44:00.0000] <zewt>
well, if you want to be able to spawn a bunch of temporary instances, then you probably want to set up a snapshot, and start instances with only instance storage and no EBS storage

[10:44:01.0000] <zewt>
if you want to be able to parallelize tests over a bunch of instances

[10:44:02.0000] <AryehGregor>
I can parallelize over cores just as easily.

[10:44:03.0000] <AryehGregor>
Or more easily, probably.

[10:45:00.0000] <Philip`>
AryehGregor: You just make sure the AMI (image) states "backed by Amazon EBS" or similar, which all Windows 2008+ do (according to http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/index.html?Concepts_BootFromEBS.html)

[10:45:01.0000] <zewt>
you'd be limited by the number of cores you can have on a single instance, though (which is 8, I think)

[10:45:02.0000] <AryehGregor>
Okay, thanks.

[10:46:00.0000] <AryehGregor>
zewt, I'm not going to want to run more than about two or three copies of gentest.html at once, and it only runs in Gecko/WebKit.

[10:47:00.0000] <zewt>
i'd think if you have so many tests that it takes half an hour to run, you'd want a framework that can parallelize arbitrarily

[10:47:01.0000] <Philip`>
AryehGregor: Yeah, if you stop it then it only costs storage, though I think there's no strong guarantees about data persistence so you'd probably want to be more careful (backup to S3 etc) if it takes hours to set up

[10:47:02.0000] <zewt>
(not that that implies the framework actually can, of course :)

[10:48:00.0000] <zewt>
backing up an instance to S3 is pretty trivial, i have a server doing it automatically

[10:49:00.0000] <AryehGregor>
/me cannot believe how much of a pain it is to use IE8 for even something as simple as just installing Chrome

[10:49:01.0000] <zewt>
wget.exe? :)

[10:49:02.0000] <ChrisWilson>
so you're saying IE is no longer the browser of choice for installing another browser?

[10:49:03.0000] <AryehGregor>
It doesn't help that this copy of Windows is Windows Server and I'm trying to use it as a desktop.

[10:50:00.0000] <AryehGregor>
It seems to have JS disabled by default for most websites, including bing.com.

[10:50:01.0000] <AryehGregor>
Meaning of course that it prompts me to override it on every website, which I do.

[10:50:02.0000] <Philip`>
Windows Server's IE is certainly a little paranoid

[10:50:03.0000] <zewt>
advance EC2 tip: when it says "shutting down an instance doesn't delete the EBS storage associated with it", they're lying.

[10:50:04.0000] <AryehGregor>
I tried to figure out how to turn it off but couldn't.

[10:51:00.0000] <zewt>
(creating an instance with EBS storage is different than creating an instance and EBS storage separately and attaching it--the former *will* silently delete your data, despite what they say)

[10:51:01.0000] <Philip`>
(In cases other than when you Terminate and haven't disabled DeleteOnTermination on the volume?)

[10:51:02.0000] <AryehGregor>
It doesn't seem to let me download anything . . .

[10:52:00.0000] <Philip`>
AryehGregor: Downloading could be very dangerous, why should it let you do that?

[10:52:01.0000] <zewt>
("delete on termination" isn't something visible from the UI, at least not in any way I saw when I was setting this stuff up a while back)

[10:52:02.0000] <Philip`>
If I remember correctly it should give you an option to whitelist sites for downloads

[10:52:03.0000] <Philip`>
zewt: Yeah, I think I needed command-line tools to toggle it, which is silly

[10:53:00.0000] <zewt>
of course, I played around with it for a couple days to see what the gotchas are, which I was quickly thankful for

[10:53:01.0000] <zewt>
Philip`: the problem is with the UI saying "we don't delete your data! please wait, deleting your data..." D:

[10:54:00.0000] <AryehGregor>
/me Googles for how to turn it off, succeeds

[10:55:00.0000] <Philip`>
Non-DeleteOnTermination isn't particularly useful since I think you can't actually boot from the non-deleted volume, you can only attach it to an existing instance

[10:55:01.0000] <Philip`>
(though I may be mistaken)

[10:55:02.0000] <AryehGregor>
Ironically, one of the first things I'm using Chrome for is downloading the latest IE, because it's too painful to do in IE8.

[10:55:03.0000] <zewt>
well, i'm pretty sure you can attach a volume and boot from it, though I don't recall the specifics off-hand

[10:56:00.0000] <zewt>
i recall having an instance that wouldn't boot, and i was able to dismount the boot drive, mount it in a temporary instance, debug the problem and put it back in its own instance

[10:56:01.0000] <AryehGregor>
How stable is Firefox aurora vs. nightly?

[10:56:02.0000] <zewt>
which is very cool, since that's the sort of thing you normally have to file a ticket, wait hours and hope whoever's at the desk at the DC that day doesn't clobber your stuff

[10:58:00.0000] <smaug____>
AryehGregor: well, API-vise Aurora is pretty stable. Nightly may get some changes which are removed if there are regressions

[10:58:01.0000] <smaug____>
AryehGregor: but otherwise Nightly should be pretty stable

[10:58:02.0000] <AryehGregor>
smaug____, I meant in terms of "if I'm only using it for running spec-related tests, should I use nightly or Aurora?"

[10:58:03.0000] <smaug____>
use Nightly

[10:59:00.0000] <smaug____>
especially for Web DOM Core, DOM4, DOM-foobar-whateveritiscalled

[10:59:01.0000] <Ms2ger>
DOM4 today

[10:59:02.0000] <smaug____>
We need to change it. It has been DOM4 way too long

[10:59:03.0000] <zewt>
heh, i was really surprised there wasn't huge pushback from the DOM3 people for that

[11:00:00.0000] <Ms2ger>
DOM3 people? Are any still around?

[11:00:01.0000] <AryehGregor>
"Internet Explorer 9 is now installed

[11:00:02.0000] <AryehGregor>
Some Internet Explorer files were in use during setup.  Restart your computer to use Internet Explorer 9."

[11:00:03.0000] <AryehGregor>
. . .

[11:00:04.0000] <Ms2ger>
Yeah

[11:00:05.0000] <AryehGregor>
Hmm, wait.

[11:01:00.0000] <AryehGregor>
Does restarting work?

[11:01:01.0000] <AryehGregor>
I mean, if I tell the OS to restart, Amazon doesn't know to kill my storage, right?

[11:01:02.0000] <zewt>
well, doug schepers

[11:01:03.0000] <smaug____>
PLH is very much still around

[11:01:04.0000] <AryehGregor>
smaug____, okay, I'll use nightly.

[11:01:05.0000] <Ms2ger>
Granted

[11:01:06.0000] <Ms2ger>
And besides them?

[11:01:07.0000] <AryehGregor>
I should probably use Chrome Canary too.

[11:02:00.0000] <AryehGregor>
Ms2ger, is this going to be like the Life of Brian "What have the Romans done for us?" scene?

[11:02:01.0000] <Ms2ger>
Dammit

[11:02:02.0000] <shepazu>
what about "DOM3 people"?

[11:02:03.0000] <smaug____>
zewt: shepazu wasn't around when DOM3 Core was written, IIRC

[11:02:04.0000] <Ms2ger>
OTOH, shepazu already worked on DOM4

[11:02:05.0000] <zewt>
he's an editor on DOM3 Events

[11:03:00.0000] <shepazu>
PLH was, and he's a manager at W3C now

[11:03:01.0000] <shepazu>
yeah, DOM3 Events has taken way too long

[11:03:02.0000] <zewt>
and it seemed he wasn't happy with DOM-whatever-you-call-it-Core's events spec sort of stepping on its spec turf

[11:03:03.0000] <shepazu>
mostly because it's been hard to get anyone from the browsers to help out

[11:03:04.0000] <zewt>
(just my impression)

[11:03:05.0000] <Philip`>
AryehGregor: Reboot should work; in the worst case (normal shutdown) it's like "stop", not "terminate", so it shouldn't delete storage

[11:04:00.0000] <AryehGregor>
Philip`, and if I right-click the instance and click "Stop", it will stop billing me for everything but storage and be restartable later?

[11:04:01.0000] <AryehGregor>
Is this stuff documented somewhere?

[11:04:02.0000] <AryehGregor>
/me was looking but didn't see any sufficiently obvious links

[11:04:03.0000] <Ms2ger>
Oh, and darobin

[11:04:04.0000] <zewt>
you'll always be billed for storage

[11:05:00.0000] <Ms2ger>
And Björn

[11:05:01.0000] <shepazu>
zewt: no, I objected to the deliberate conflicts between specs without an effort to address the issues in DOM3 Events first…. please stop spreading rumors and misinformation

[11:05:02.0000] <zewt>
i'm not spreading anything, and i'm explicitly labelling my impressions as such

[11:05:03.0000] <Philip`>
http://support.rightscale.com/06-FAQs/FAQ_0149_-_What's_the_difference_between_Terminating_and_Stopping_an_EC2_Instance%3F#Stop_Instance seems informative

[11:06:00.0000] <shepazu>
yeah, zewt was against there being any DOM specs

[11:06:01.0000] <shepazu>
(just my impression)

[11:06:02.0000] <smaug____>
:)

[11:06:03.0000] <Ms2ger>
shepazu, so what are your impressions about me? :)

[11:06:04.0000] <zewt>
shepazu: you can draw what impressions you like :)

[11:08:00.0000] <shepazu>
if you can't see that kind of broad misstatement as rumor-mongering, I can't convince you

[11:08:01.0000] <Philip`>
AryehGregor: Also http://docs.amazonwebservices.com/AWSEC2/latest/UserGuide/index.html?Concepts_BootFromEBS.html#Stop_Start

[11:08:02.0000] <zewt>
to be fair, if I was the one writing the events spec in dom-core, I'd have separated the "writing the spec" and "lobbying for changes" part; speccing something that was both a separate spec *and* effectively lobbied for changes to what was specced probably made things harder than they could have been

[11:09:00.0000] <zewt>
but that's in retrospect, of course

[11:10:00.0000] <shepazu>
no, it just wasn't done respectfully, in my opinion… it could have been, but anne chose not to

[11:11:00.0000] <shepazu>
/me off to another teleconference...

[11:12:00.0000] <zewt>
shepazu: and stating my honest impressions based on following the discussions (fairly closely) is not a "misstatement" or "rumor-mongering"

[11:17:00.0000] <zewt>
AryehGregor: might want to run a quick benchmark on your instance vs. your own machine to see if it's actually faster per core, before spending too long setting a lot of stuff up

[11:18:00.0000] <zewt>
unless merely offloading the CPU is worth it for you, I guess

[11:24:00.0000] <timeless>
/me is glad to see Philip` and zewt seem to have convinced AryehGregor about the cloud approach to testing

[11:24:01.0000] <zewt>
well, it's not really the cloud approach with only one server :)

[11:25:00.0000] <Philip`>
/me finds it more useful as a way to avoid having to have a Windows machine of his own :-)

[11:25:01.0000] <zewt>
ew, i'd never run windows on a remote system

[11:26:00.0000] <zewt>
vmware would be much better for that

[11:26:01.0000] <Philip`>
(for compiling and stuff)

[11:27:00.0000] <zewt>
well, at least for compiling, you can in theory do msvc builds from a terminal--though i've never messed with that

[11:28:00.0000] <Philip`>
Yeah, I use vcbuild to do it automatedly, not the IDE

[11:28:01.0000] <Philip`>
though it doesn't work quite the same

[12:09:00.0000] <GlitchMr>
Personally, I would like to see way of making form fields disable after choosing certain radio buttons or checkboxes... but yeah... Web Forms is already big part of HTML5 specification...

[12:30:00.0000] <AryehGregor>
Do Firefox nightlies auto-update on Windows?

[12:31:00.0000] <GlitchMr>
AryehGregor, probably not :P.

[12:31:01.0000] <Ms2ger>
Yes

[12:31:02.0000] <timeless_>
AryehGregor: yes

[12:31:03.0000] <timeless_>
daily

[12:31:04.0000] <GlitchMr>
http://kb.mozillazine.org/Software_update

[12:31:05.0000] <AryehGregor>
GlitchMr, I was mostly directly the question to the various Mozilla devs who hang out here.

[12:31:06.0000] <timeless>
you'll get an annoying dialog every morning

[12:31:07.0000] <AryehGregor>
Ms2ger, timeless, thanks.

[12:32:00.0000] <timeless>
and if it's your irc client, you'll have to disconnect daily

[12:32:01.0000] <timeless>
on mondays, you'll get 2 updates

[12:32:02.0000] <timeless>
on to update from friday to saturday (small)

[12:32:03.0000] <timeless>
s/on to/one to/

[12:32:04.0000] <timeless>
and one to update from saturday to monday (full)

[12:32:05.0000] <timeless>
if you're really unlucky, you could get 3 updates

[12:33:00.0000] <timeless>
one to update friday to saturday, one to update saturday to sunday, and an hour later, one to update from sunday to monday :)

[12:33:01.0000] <timeless>
oh, and for extra restarts (and a chance for a bonus reboot), you can install Adobe Flash and Adobe Reader

[12:33:02.0000] <Ms2ger>
Unless you work during the weekend

[12:33:03.0000] <timeless>
(reader wants me to reboot)

[12:33:04.0000] <timeless>
oh, to do that, you need a "home pc", and this "internet to the home" thing

[12:33:05.0000] <timeless>
/me is kinda missing those

[12:34:00.0000] <AryehGregor>
timeless, this is why I don't use Firefox as my IRC client.

[12:35:00.0000] <AryehGregor>
I originally used Chatzilla but abandoned the idea very rapidly.

[12:35:01.0000] <timeless>
chatzilla can be hosted by xulrunner (discontinued)

[12:35:02.0000] <timeless>
but, those irc clients only work if your irc server

[12:35:03.0000] <timeless>
's irc port is reachable from your computer

[12:35:04.0000] <timeless>
if not, you need something else (i use http)

[12:36:00.0000] <timeless>
hrm, IE has two modes in Metro...

[12:37:00.0000] <Philip`>
By "two", do you mean eight?

[12:37:01.0000] <timeless>
Windowed and Metro

[12:38:00.0000] <timeless>
i'd been using Windowed initially and didn't realize it was also a Metro app

[12:38:01.0000] <Philip`>
Are they orthogonal to the compatibility modes?

[12:38:02.0000] <timeless>
i tried loading http://google.com from explorer, and suddenly i got launched into Metro

[12:38:03.0000] <timeless>
i'd assume so

[12:38:04.0000] <timeless>
this is just a UI thing

[12:39:00.0000] <AryehGregor>
Time to generate tests in Chrome on my desktop: 27:48.740min.

[12:39:01.0000] <timeless>
http://www.favbrowser.com/internet-explorer-10-screenshots-and-video/

[12:39:02.0000] <AryehGregor>
Time on my cloud VM: 2:56.945 min.

[12:39:03.0000] <AryehGregor>
Sounds like a win.

[12:40:00.0000] <Philip`>
Why so much difference?

[12:40:01.0000] <AryehGregor>
Presumably because my CPU is a piece of garbage.

[12:40:02.0000] <Philip`>
Is your desktop running on a Pentium 2 or something?

[12:41:00.0000] <AryehGregor>
No, an Athlon X2 64 5000+ or something.

[12:41:01.0000] <AryehGregor>
2.6GHz.

[12:42:00.0000] <AryehGregor>
I don't know what the VM is using, but it's evidently better.

[12:43:00.0000] <timeless>
AryehGregor: can i have a thank=you? :)

[12:43:01.0000] <AryehGregor>
timeless, thank you!

[12:43:02.0000] <AryehGregor>
And to Philip` et al.

[12:43:03.0000] <Philip`>
Is it supposedly 3.25 x "a 1.0-1.2 GHz 2007 Opteron or 2007 Xeon processor"?

[12:43:04.0000] <timeless>
the cloud probably also has a much better hard disk, and probably network pipe :)

[12:44:00.0000] <timeless>
/me thanks Philip` and zewt for providing the actual guidance to get AryehGregor past the idea phase

[12:44:01.0000] <AryehGregor>
Philip`, yes.

[12:44:02.0000] <AryehGregor>
Interesting, the Firefox nightly still takes 12:55min.

[12:45:00.0000] <timeless>
:(

[12:45:01.0000] <Philip`>
/me wonders if the main problem with the X2 is that it has tiny L2 cache, because he doesn't know why else there'd be an order of magnitude difference

[12:45:02.0000] <timeless>
ActivePython-2.7.2.5-win64-x64.msi is not commonly downloaded and could harm yo

[12:46:00.0000] <timeless>
i supposed that IE10 is trying to be in with the 90s

[12:46:01.0000] <timeless>
`could harm yo`

[12:49:00.0000] <AryehGregor>
Are nightlies less optimized than Aurora, by any chance?

[12:51:00.0000] <roc>
shouldn't be

[12:51:01.0000] <roc>
what's the problem?

[12:51:02.0000] <AryehGregor>
Nothing, I was just surprised that Chrome seemed to show a ridiculously bigger speedup from my desktop to VM than Firefox did.

[12:51:03.0000] <AryehGregor>
I switched from Aurora on my desktop to Nightly on the VM, so I wondered if that might be related.

[12:52:00.0000] <AryehGregor>
(I didn't wind up using Chrome Canary because it sad-tabbed)

[12:53:00.0000] <roc>
no idea, but if you try Aurora on your VM and Nightly is a lot slower than it, I'd appreciate a  bug report

[12:57:00.0000] <AryehGregor>
/me will fiddle

[12:57:01.0000] <timeless>
AryehGregor: fwiw, windows has some nice profiling stuff

[12:57:02.0000] <timeless>
if you're willing to do some extra work to see what's up

[12:57:03.0000] <AryehGregor>
I'm not really.

[12:57:04.0000] <timeless>
yeah, i didn't expect you were

[12:57:05.0000] <AryehGregor>
At least not right now.

[12:57:06.0000] <timeless>
if your vm doesn't have anything confidential in it, you might want to let someone clone it

[12:58:00.0000] <timeless>
/me isn't sure how clonable Amazon items are

[12:58:01.0000] <AryehGregor>
My VM has nothing useful in it whatsoever, it's a fresh Windows install with some browsers added.

[12:58:02.0000] <AryehGregor>
Anyone can trivially replicate it.

[13:03:00.0000] <AryehGregor>
There's no way to append text piece by piece to a textarea's value that's not O(n^2), is there?

[13:03:01.0000] <AryehGregor>
Or should I just append it to the DOM as a child of the textarea?

[13:03:02.0000] <AryehGregor>
/me tries that

[13:14:00.0000] <AryehGregor>
Hmm, now Chrome is back to taking a long time too.

[13:14:01.0000] <AryehGregor>
Maybe the earlier result was a fluke or bug or something.

[13:16:00.0000] <Philip`>
You should file a bug report: "Sometimes Chrome is too fast"

[13:21:00.0000] <GlitchMr>
...

[13:21:01.0000] <GlitchMr>
On hardware made 7 years ago, Chrome is kinda slow...

[13:25:00.0000] <AryehGregor>
CPUs haven't gotten a lot faster in seven years.

[13:25:01.0000] <AryehGregor>
Certainly not ten times faster.

[13:26:00.0000] <aho>
hardware acceleration perhaps?

[13:27:00.0000] <Ms2ger>
Native HTML5

[13:27:01.0000] <aho>
i was serious

[13:28:00.0000] <aho>
some drawing operations may be hardware accelerated on system A, but won't be hardware accelerated on system B

[13:28:01.0000] <AryehGregor>
1) Hardware acceleration seems unlikely on a Windows Server VM.

[13:28:02.0000] <AryehGregor>
2) Basically nothing is being painted here, if the browsers are being sane at all.

[13:29:00.0000] <aho>
sw rendering can be pretty fast if there is no ram->bus->vram copy stuff going on (also true in a headless environment)

[13:30:00.0000] <aho>
well, i have no clue what your tests are doing :)

[13:34:00.0000] <roc>
AryehGregor: maybe your tests ended early because of a bug?

[13:34:01.0000] <AryehGregor>
roc, yeah, that's what I suspect at this point.

[13:35:00.0000] <AryehGregor>
It seemed like a ridiculous speedup.

[13:35:01.0000] <AryehGregor>
The speedup I saw in Firefox was more like 2x, which is reasonable.

[13:35:02.0000] <AryehGregor>
I think I'll want to upgrade to the four-core version so I can run two sets of tests in parallel.

[13:36:00.0000] <roc>
about appending to a textarea ... of course the best way is to build up a JS string and append it to the textarea in one go, but presumably you can't do that for some reason

[13:37:00.0000] <AryehGregor>
I actually can.  I don't think the constant factors are hurting me much here, though, given how much work I'm doing per test.

[13:37:01.0000] <AryehGregor>
Currently I'm using appendData() on the text node child, so it should be linear.

[13:38:00.0000] <roc>
I wouldn't bet on that

[13:38:01.0000] <AryehGregor>
Because the underlying storage might have to get reallocated regularly or something?

[13:38:02.0000] <AryehGregor>
Is there any easy way for me to get good profiling data on Firefox or Chrome?

[13:39:00.0000] <AryehGregor>
Hmm, Firebug works now, maybe that will help.

[13:39:01.0000] <AryehGregor>
Of course, it makes things take forever.

[13:41:00.0000] <AryehGregor>
I might have introduced an infinite loop somewhere here or something.

[13:46:00.0000] <AryehGregor>
Wow.

[13:47:00.0000] <AryehGregor>
Apparently building the string in pure JS made a ridiculous performance difference.

[13:47:01.0000] <AryehGregor>
Like over an order of magnitude compared to building it in the DOM.

[13:48:00.0000] <AryehGregor>
I have to double-check how much time my test framework is using here compared to the actual tests themselves.

[13:49:00.0000] <AryehGregor>
Firefox and Chrome now both take ~1min on the VM.

[13:50:00.0000] <AryehGregor>
/me has to check that the results are good, of course

[13:53:00.0000] <jamesr>
AryehGregor: in chrome try the timeline panel in the inspector

[13:53:01.0000] <AryehGregor>
How will the timeline help, without actual profiling?

[13:54:00.0000] <AryehGregor>
Changing to not append stuff to the DOM makes it take like 4 minutes in Chrome and 2 minutes in Firefox on my desktop instead of like 20 minutes . . .

[13:54:01.0000] <jamesr>
ah, well there's also a profiler

[13:54:02.0000] <AryehGregor>
/me might not need this VM thingie after all

[13:54:03.0000] <jamesr>
yeah always always batch

[13:57:00.0000] <AryehGregor>
I didn't think it would be an issue given how much work I was doing per test . . .

[14:23:00.0000] <AryehGregor>
It looks like there are some details of Unicode handling that don't work quite the same in Gecko/WebKit between Windows and Linux.

[14:23:01.0000] <AryehGregor>
Annoying.

[14:33:00.0000] <AryehGregor>
Turns out the Windows behavior is more correct, as it happens.

[14:35:00.0000] <AryehGregor>
The result of today's work: https://dvcs.w3.org/hg/editing/rev/8d721ff655d2

[14:35:01.0000] <AryehGregor>
On AWS, how do I check what sort of bill I've run up so far?

[14:36:00.0000] <AryehGregor>
I don't seem to see that anywhere.

[14:36:01.0000] <jgraham>
AryehGregor: I wouldn't be surprised if people implemented non-N^2 string append in js for some benchmark and didn't do the same in DOM due to lack of benchmark

[14:37:00.0000] <AryehGregor>
jgraham, sure, but making it not O(n^2) is surely why appendData() and such actually exist . . . oh well.

[14:37:01.0000] <Philip`>
AryehGregor: I think there's something on your account information page that links to billing stuff

[14:37:02.0000] <jgraham>
AryehGregor: No reason it has to be n^2 in any case

[14:37:03.0000] <Philip`>
but I suppose that's a bit vague

[14:38:00.0000] <Philip`>
(Also, I don't know how frequently it's updated)

[14:38:01.0000] <AryehGregor>
jgraham, I guess not, if you treat the property magically.

[14:39:00.0000] <AryehGregor>
In theory foo.textContent += bar would be O(n^2), since it means foo.textContent = foo.textContent + bar, so you'd have to read textContent every time in full.  But you could cheat on that easily enough.

[14:39:01.0000] <AryehGregor>
It'd have to be a special case, though.

[14:39:02.0000] <AryehGregor>
appendData() isn't a special case.

[14:39:03.0000] <AryehGregor>
Well, whatever.

[14:39:04.0000] <AryehGregor>
What I did seems to work, so awesome.

[14:41:00.0000] <AryehGregor>
Philip`, wow, they try to make this difficult.

[14:42:00.0000] <zewt>
AryehGregor: well, depending on the refcounting mechanism, i'd expect...

[14:42:01.0000] <zewt>
rather, GC mechanism

[14:43:00.0000] <zewt>
for example, CPython can implement nonexponential string appending, because it's refcounted and can tell if anything else has a reference to a string--if not it can avoid making the copy

[14:43:01.0000] <zewt>
other implementations use other GC methods which don't give that information, so they can't make that optimization

[14:44:00.0000] <zewt>
AryehGregor: billing is "account activity"

[14:45:00.0000] <zewt>
looks like they reorganized the console recently--have to click your name in the top-right corner (for some reason)

[15:00:00.0000] <gsnedders>
zewt: Most JS engines have string implementations that allow a string to be formed of a list of strings.

[15:01:00.0000] <gsnedders>
zewt: I thing CPython does something more complex.

[15:03:00.0000] <jamesr_>
JSC and V8 have rope support, i believe

[15:03:01.0000] <jamesr_>
fuzzy on the details

[15:03:02.0000] <jamesr_>
but that isn't necessarily useful in the DOM implementation

[15:03:03.0000] <gsnedders>
jamesr_: It won't be useful at all in the DOM impl

[15:03:04.0000] <gsnedders>
jamesr_: Carakan does too

[15:03:05.0000] <gsnedders>
jamesr_: And I'd be amazed if SpiderMonkey didn't

[15:05:00.0000] <zewt>
CPython just goes "if refcount == 1, append in-place", i think

[15:05:01.0000] <gsnedders>
jamesr_: Actually, no, we don't have ropes. We have something even ligher-weight that effectively is just lazyly evaluated concatenation

[15:05:02.0000] <jamesr_>
yeah, there are many ways to skin that cat

[15:05:03.0000] <jamesr_>
with the desired properties

[15:05:04.0000] <zewt>
poor cats

[15:06:00.0000] <gsnedders>
Lazely evaluating it keeps many of the O(1) properties of strings, at least

[15:17:00.0000] <Philip`>
/me wonders how many ways gsnedders can misspell "lazily"

[15:19:00.0000] <gsnedders>
Philip`: Lots.

[15:42:00.0000] <roc>
AryehGregor: what details? Gecko doesn't use much from the underlying platform so I'd be surprised

[16:09:00.0000] <zewt>
https://encrypted.google.com/ ... why is google drawing an arrow pointing at an empty space? heh

[16:10:00.0000] <zewt>
"dude, the corner of your monitor is pretty cool"?

[16:11:00.0000] <jamesr>
lawl

[16:11:01.0000] <jamesr>
i think that's where the google plus thingy shows up when you are logged in

[16:11:02.0000] <jamesr>
zewt: try google.com

[16:12:00.0000] <jamesr>
there's something there in the non-https version of that page

[16:12:01.0000] <zewt>
but i don't use google.com, i use encrypted.google.com

[16:12:02.0000] <zewt>
smells like poor testing practices for the front page of google's flagship product, heh :P

[16:13:00.0000] <zewt>
on google.com it points at "Web" (which is where you already are)

[16:14:00.0000] <zewt>
(and clicking it says "hey, you wasted your time clicking this since g+ is broken on gapps accounts")

[16:17:00.0000] <dglazkov>
zewt: :D

[16:19:00.0000] <zewt>
D:

[16:21:00.0000] <dglazkov>
don't be sad. sadness leads to poor digestion. poor digestion leads to fear. Fear leads to anger. Anger leads to hate. Hate leads to suffering. And more poor digestion.

[16:22:00.0000] <zewt>
i'd be less sad if google's main search page would stop intentionally distracting users from what they came to search for D:

[16:23:00.0000] <zewt>
i've never ran gdb and had it load pacman

[16:26:00.0000] <dglazkov>
zewt: I filed a bug -- does that make you feel a bit better? :)

[16:27:00.0000] <zewt>
on gdb asking for pacman? D:

[16:27:01.0000] <dglazkov>
sh> gdb

[16:27:02.0000] <zewt>
the frontpage stuff usually only lasts a couple days so it's sort of a self-expiring bug :)

[16:27:03.0000] <dglazkov>
> call pacman

[16:28:00.0000] <dglazkov>
ChrisWilson!!!

[16:31:00.0000] <ChrisWilson>
dglazkov!

[16:33:00.0000] <dglazkov>
ChrisWilson: I honestly don't know why I did that.

[16:47:00.0000] <ChrisWilson>
:P


2011-09-21
[17:05:00.0000] <dbaron>
TabAtkins, so by "concrete object" do you mean "box" or do you mean something else?

[17:05:01.0000] <dbaron>
TabAtkins, I was assuming you meant "box".

[17:05:02.0000] <dbaron>
/me is wondering whether to introduce cement objects and bricks

[17:06:00.0000] <jcranmer>
cinder blocks

[17:12:00.0000] <dbaron>
I should probably just unsubscribe from www-style.

[17:12:01.0000] <dbaron>
It's full of people arguing about things that nobody's even said or written down anywhere.

[17:25:00.0000] <roc>
just be selective about which threads you read

[17:54:00.0000] <rniwa>
sicking: yt?

[17:59:00.0000] <sicking>
rniwa: pong

[18:01:00.0000] <rniwa>
sicking: hi

[18:01:01.0000] <rniwa>
sicking: do you have a time now?

[18:01:02.0000] <sicking>
rniwa: just about to head into a meeting, shouldn't be more than an hour, will you still be around?

[18:02:00.0000] <rniwa>
sicking: oh sure

[18:02:01.0000] <rniwa>
sicking: I'll probably be around 'til 6:30

[18:02:02.0000] <rniwa>
sicking: if not 7

[18:02:03.0000] <sicking>
cool

[18:02:04.0000] <sicking>
ping me at 6 if i haven't pinged you already

[18:02:05.0000] <rniwa>
sicking: ok

[18:32:00.0000] <sicking>
rniwa: back

[18:32:01.0000] <rniwa>
sicking: hi

[18:32:02.0000] <rniwa>
sicking: so I was sort of looking at the big picture of undoManager

[18:33:00.0000] <rniwa>
sicking: and I've started to think that maybe we've taken a wrong path in certain things

[18:33:01.0000] <sicking>
rniwa: oh?

[18:33:02.0000] <rniwa>
sicking: right now, we're going to have undoManger.automaticTransact and undoManager.manualTransact, right?

[18:33:03.0000] <rniwa>
sicking: and then we'll have two separate interfaces for those objects

[18:33:04.0000] <sicking>
yup

[18:34:00.0000] <sicking>
sort of

[18:34:01.0000] <rniwa>
sicking: but then, we'll need to expose those in []

[18:34:02.0000] <sicking>
i don't actually know that we need real interfaces

[18:34:03.0000] <rniwa>
sicking: that would mean that the return value of [] would either be Object

[18:34:04.0000] <sicking>
they're more like pure JS-objects

[18:34:05.0000] <rniwa>
sicking: or we have to define some AbstractInterface for it

[18:34:06.0000] <sicking>
rniwa: oh

[18:35:00.0000] <sicking>
rniwa: i think it's fine to use Object. If we indeed even are going to use interfaces here at all

[18:35:01.0000] <rniwa>
sicking: but this would really ingrains the concept of automatic/manual transaction into undomnager

[18:35:02.0000] <rniwa>
sicking: in the sense, undo manager needs to know all

[18:35:03.0000] <rniwa>
sicking: in my original proposal, I tried to de-couple those concepts so that undomanager doesn't need to know anything about automatic transaction

[18:36:00.0000] <rniwa>
sicking: undomanager would just call apply, unapply, reapply

[18:36:01.0000] <rniwa>
sicking: which is nice from implementor's perspective

[18:36:02.0000] <sicking>
rniwa: hmm

[18:36:03.0000] <rniwa>
sicking: with current approach, we have to end up adding bindings for undoManger.automaticTransact and undoManager.manualTransact and then share code somehow

[18:36:04.0000] <rniwa>
sicking: because most of steps in those are identically equal

[18:36:05.0000] <sicking>
rniwa: i don't really care what's nice from an implementation perspective though. It's much more important to have a good API

[18:37:00.0000] <sicking>
rniwa: to a certain extent of course, it shouldn't be completely insane to implement

[18:37:01.0000] <rniwa>
sicking: in the sense the only difference between automaticTransact and manualTransact is how it calls apply

[18:37:02.0000] <rniwa>
sicking: or what object it takes

[18:38:00.0000] <rniwa>
sicking: so I've started to think that it might be better to provide an API that creates automatic transaction instead

[18:38:01.0000] <rniwa>
sicking: i.e. we'll have createAutomaticTransaction function or just new AutomaticTransaction

[18:38:02.0000] <rniwa>
sicking: that'll create an object with unapply/reapply functions given apply function

[18:38:03.0000] <rniwa>
(function names are pending)

[18:39:00.0000] <rniwa>
sicking: this would allow us to have simple transact function again

[18:39:01.0000] <sicking>
rniwa: is there a reason to do this other than save a few lines of code in the implementation?

[18:39:02.0000] <rniwa>
sicking: I think this makes the interface conceptually simpler

[18:39:03.0000] <sicking>
rniwa: i think it's much more important to look at what's a good API from a usability point of view first

[18:39:04.0000] <rniwa>
sicking: because all transactions are just transactions

[18:40:00.0000] <sicking>
rniwa: what happens if someone calls reapply multiple times in a row on a automatic transaction?

[18:40:01.0000] <sicking>
rniwa: or unapply and then apply?

[18:41:00.0000] <sicking>
rniwa: hmm.. actually

[18:41:01.0000] <rniwa>
sicking: I guess it could ignore subsequence calls

[18:42:00.0000] <sicking>
rniwa: so how would this work, would createAutomaticTransaction run the "execution function"?

[18:42:01.0000] <rniwa>
sicking: no, it'll just create a transaction object

[18:43:00.0000] <rniwa>
sicking: e.g. you do undoManager.transact(createAutomaticTransaction(myCommand, 'typing'))

[18:43:01.0000] <rniwa>
sicking: in some sense, automaticTransact is a syntactic sugar for this

[18:43:02.0000] <rniwa>
sicking: but I found that having one function for doing things is better than having two

[18:44:00.0000] <sicking>
rniwa: from an implementation point of view, or from a usability point of view?

[18:44:01.0000] <rniwa>
sicking: e.g. this would allow author's script to pass transactions around

[18:44:02.0000] <rniwa>
sicking: from author's point of view as well

[18:44:03.0000] <rniwa>
sicking: so in the current design, you need to know whether you're creating an automatic transaction or manual transaction

[18:44:04.0000] <rniwa>
sicking: if you've just got a transaction object from some helper function

[18:44:05.0000] <rniwa>
sicking: e.g.

[18:45:00.0000] <rniwa>
sicking: var transaction = createMyTransaction(...);

[18:45:01.0000] <sicking>
that makes some sense i agree

[18:45:02.0000] <rniwa>
sicking: and then I wouldn't know whether I should call automaticTransact or manualTransact

[18:45:03.0000] <sicking>
right

[18:45:04.0000] <rniwa>
sicking: if we have createAutomaticTransaction, then we can always call transact

[18:46:00.0000] <sicking>
rniwa: still is a lot to type every time you create a automatic transaction though :(

[18:46:01.0000] <rniwa>
sicking: yeah, that's one drawback

[18:46:02.0000] <sicking>
rniwa: i wonder if we can also add a helper function that does the work for you

[18:46:03.0000] <rniwa>
sicking: also it's harder to add properties in this syntax

[18:46:04.0000] <sicking>
rniwa: that's a good point

[18:46:05.0000] <sicking>
very good even

[18:47:00.0000] <rniwa>
sicking: yeah so I'm not sure which way is better at this point

[18:47:01.0000] <sicking>
rniwa: i think we can help with the typing by creating a helper function

[18:47:02.0000] <sicking>
rniwa: but the properties part is worse

[18:47:03.0000] <rniwa>
sicking: right.

[18:47:04.0000] <rniwa>
sicking: so one thing I was thinking is that we can make createAutomaticTransaction take some object

[18:47:05.0000] <rniwa>
sicking: and let the resultant transaction object retrieve all properties the original object had

[18:48:00.0000] <rniwa>
sicking: but that's a very strange object

[18:48:01.0000] <sicking>
rniwa: i.e. we can add a function like    addAutomatic(func) { return this.transact(createAutomaticTransaction(func)) } to the interface

[18:48:02.0000] <rniwa>
sicking: yeah

[18:48:03.0000] <sicking>
rniwa: that sounds hacky

[18:48:04.0000] <sicking>
(the automatic copying that is)

[18:48:05.0000] <rniwa>
sicking: but I'm suspecting that many use cases of automatic transaction doesn't require adding new properties

[18:48:06.0000] <sicking>
rniwa: you'll loose things like the prototype chain

[18:48:07.0000] <rniwa>
sicking: right

[18:49:00.0000] <sicking>
rniwa: which i believe Alex Russel really wants to use to be able to do things like manager.transact(new MyOwnTransactionClass(...));

[18:49:01.0000] <rniwa>
sicking: on the other hand, we could have createAutomaticTransaction just add/assign unapply/reapply properties

[18:49:02.0000] <rniwa>
sicking: instead of creating of new object

[18:49:03.0000] <rniwa>
creating new

[18:50:00.0000] <rniwa>
sicking: yeah, that'll nice

[18:50:01.0000] <rniwa>
'll be* nice

[18:50:02.0000] <sicking>
having the DOM monkey-patch your objects seems somewhat unfortunate

[18:51:00.0000] <rniwa>
sicking: so if we'll have createAutomaticTransaction(x)=x but x will get extra properties

[18:51:01.0000] <rniwa>
sicking: yeah

[18:51:02.0000] <rniwa>
sicking: it's not particularly clean either

[18:51:03.0000] <rniwa>
sicking: alternatively, we could add "automatic" boolean to transaction object

[18:51:04.0000] <rniwa>
sicking: so instead of having two methods

[18:51:05.0000] <rniwa>
sicking: we'll just have a boolean that determines whether it's automatic or not

[18:52:00.0000] <rniwa>
sicking: in the object itself

[18:52:01.0000] <sicking>
rniwa: yeah, that seems ok

[18:52:02.0000] <sicking>
rniwa: i do like the idea of being able to return a transaction

[18:52:03.0000] <rniwa>
sicking: yeah

[18:52:04.0000] <sicking>
rniwa: but i *really* liked the syntax you guys had in your original email that came up with the transaction objects as they are now

[18:52:05.0000] <rniwa>
sicking: so we'll have undoManager.transact({apply:~~, automatic:true})

[18:53:00.0000] <rniwa>
sicking: which one?

[18:53:01.0000] <sicking>
rniwa: the one that introduced the syntax as it is now

[18:53:02.0000] <rniwa>
sicking: oh undoManager.transact({apply:~~, automatic:true}) ?

[18:54:00.0000] <sicking>
nono, much much earlier

[18:54:01.0000] <sicking>
nevermind, i think our irc'ing just crossed paths :)

[18:54:02.0000] <sicking>
rniwa: i like the automatic:true idea

[18:55:00.0000] <sicking>
rniwa: that seems like it would take care of the original use case

[18:55:01.0000] <rniwa>
sicking: mn... like undoManager.transact(new ManagedTransaction(...)) ?

[18:56:00.0000] <sicking>
you just lost me :)

[18:57:00.0000] <rniwa>
sicking: http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2011-August/032766.html ?

[18:57:01.0000] <rniwa>
sicking: ok

[18:58:00.0000] <sicking>
rniwa: what I'm saying is that the undoManager.transact({ apply: ..., automatic: true }) seems to solve the use case of having code like: transact = someFunctionThatGeneratesTransactions(); undoManager.transact(transact);

[18:58:01.0000] <rniwa>
sicking: yeah

[18:58:02.0000] <rniwa>
sicking: ok, I'll post something up on whatwg and make this change subsequently

[18:58:03.0000] <rniwa>
sicking: this will lets us just have one implicit interface

[18:58:04.0000] <rniwa>
sicking: and one transact

[18:58:05.0000] <rniwa>
:D

[18:59:00.0000] <sicking>
rniwa: yup. Might be good to come up with something shorter than "automatic" though. Maybe just "auto"?

[18:59:01.0000] <sicking>
i'll leave the bikeshedding to others :)

[18:59:02.0000] <rniwa>
sicking: yeah, auto works

[18:59:03.0000] <sicking>
rniwa: also, i'm still not sold on apply+reapply. I still think just apply is better :)

[18:59:04.0000] <sicking>
with a boolean argument

[19:00:00.0000] <rniwa>
sicking: hmm.... I still make the same argument AryehGregor made and say booleans are bad

[19:00:01.0000] <rniwa>
sicking: I find a function that does both do & undo to be semantically hard to understand

[19:01:00.0000] <rniwa>
sicking: unfortunately, there are no good precedents for this because most of Undo API just provide functions for undo/redo

[19:01:01.0000] <rniwa>
sicking: and not the initial execution

[19:01:02.0000] <sicking>
rniwa: sure, i wouldn't propose to merge do/undo

[19:01:03.0000] <rniwa>
sicking: oops I meant do/redo

[19:01:04.0000] <sicking>
rniwa: booleans are bad on the callsite generally

[19:01:05.0000] <rniwa>
sicking: I'm not buying the idea that developers would duplicate code

[19:01:06.0000] <rniwa>
sicking: when he can just call apply

[19:01:07.0000] <sicking>
rniwa: but here the callsite is inside the browser code, so that's not a problem

[19:02:00.0000] <sicking>
rniwa: but he can't call apply, you brought up good reasons for why they should be slightly different

[19:02:01.0000] <rniwa>
sicking: also arv made an argument that booleans are hard to remember which one is which

[19:02:02.0000] <sicking>
rniwa: again, that's generally true on the caller side, not on the callee side

[19:02:03.0000] <rniwa>
sicking: so he can do reapply: function() { /* some work! */ this.apply(); }

[19:03:00.0000] <sicking>
rniwa: i don't think you can do selection like that

[19:03:01.0000] <sicking>
rniwa: also, look at the examples that you sent to the list, they all duplicated code

[19:03:02.0000] <rniwa>
sicking: or reapply: function() { this.apply(); /* some work */ }

[19:04:00.0000] <rniwa>
but should I define function(isApply) {...} or function(isReapply) {...}?

[19:05:00.0000] <sicking>
rniwa: Either way, it'll be obvious when you look at any example

[19:05:01.0000] <sicking>
rniwa: the problem with boolean arguments is that you can't tell on the caller side: apply(false)

[19:05:02.0000] <sicking>
rniwa: but on the callee side it's always documented using the variable name

[19:06:00.0000] <sicking>
rniwa: i'm also not convinced that the differences between apply/reapply are always so simple that you can implement them before and/or after

[19:06:01.0000] <rniwa>
sicking: so the argument was that it's hard to remember which boolean it was when you write the function for the first tie

[19:06:02.0000] <rniwa>
time*

[19:06:03.0000] <sicking>
though i'd have to think to come up with an example

[19:07:00.0000] <sicking>
rniwa: how would you do that without looking at docs or examples?

[19:07:01.0000] <rniwa>
sicking: well, you probably remember it was undoManager

[19:07:02.0000] <rniwa>
sicking: and on firebug or developer console, you can see that it has transact method

[19:08:00.0000] <rniwa>
sicking: and maybe I'll vaguely remember it takes apply function

[19:08:01.0000] <zewt>
if that's a person's way of learning an api, they're going to get confused no matter what the type of the argument :)

[19:08:02.0000] <rniwa>
zewt: well, I almost always use developer tools to figure out property names, etc...

[19:08:03.0000] <rniwa>
zewt: too lazy to search

[19:09:00.0000] <rniwa>
zewt: most of the times, properties I find do what their name suggest to do

[19:09:01.0000] <rniwa>
anyways

[19:09:02.0000] <zewt>
seems like a strange reason to abolish bools, heh

[19:09:03.0000] <rniwa>
zewt: I guess

[19:10:00.0000] <zewt>
if there was more info to send i'd suggest passing an object, like events, but that's a bit overkill if that's all there is

[19:10:01.0000] <sicking>
rniwa: i'm not convinced that it'll be easier to remember that there's both a "apply" and a "reapply" function, than to remember that it takes a isReapply boolean argument

[19:11:00.0000] <rniwa>
sicking: I've talked to a couple of developers internally and they told me they'd prefer apply/reapply simply because they don't like booleans

[19:11:01.0000] <rniwa>
sicking: but then they also told me they'll be fine with booleans

[19:11:02.0000] <zewt>
if an api made me provide two separate functions that are very similar, i'm pretty sure i'd quick patch it away so i don't have to deal with that

[19:12:00.0000] <zewt>
(i havn't looked closely enough to know why "apply" and "reapply" are separate concepts, though)

[19:12:01.0000] <rniwa>
zewt: if you don't supply reapply, it falls back to apply

[19:12:02.0000] <zewt>
ah

[19:12:03.0000] <rniwa>
zewt: apply is called when you call undoManager.transact

[19:12:04.0000] <jamesr_>
how's that better than having a bool? if authors forget about reapply, in both cases their apply() function is called

[19:12:05.0000] <rniwa>
zewt: reapply is called, well, when a user triggers redo

[19:13:00.0000] <zewt>
i guess as someone who's typed "int main(int argc, char *argv[])" a few thousand times, worrying about this seems minor :)

[19:13:01.0000] <rniwa>
zewt: I can never remember which comes first although I've been writing c programs over a decade

[19:13:02.0000] <zewt>
if i think about it i'd probably forget--i just let my fingers type it

[19:14:00.0000] <zewt>
digit coprocessors

[19:14:01.0000] <rniwa>
mn.. maybe I'll like it better if we renamed apply/reapply

[19:14:02.0000] <rniwa>
sicking: how about executeDo and executeUndo?

[19:15:00.0000] <rniwa>
sicking: or execute and executeUndo?

[19:15:01.0000] <sicking>
rniwa: i like apply/unapply/reapply better

[19:15:02.0000] <rniwa>
sicking: ?

[19:15:03.0000] <rniwa>
sicking: you like apply/unapply better?

[19:15:04.0000] <sicking>
rniwa: the names that is

[19:15:05.0000] <rniwa>
sicking: I think the problem is that apply appears to indicate that it's only called for the first time

[19:16:00.0000] <sicking>
rniwa: oh, i see

[19:16:01.0000] <jamesr_>
do/undo/redo?

[19:16:02.0000] <sicking>
rniwa: i generally try to stay out of naming issues

[19:16:03.0000] <rniwa>
jamesr: I think we want to get rid of redo function

[19:16:04.0000] <sicking>
:)

[19:16:05.0000] <rniwa>
jamesr: do/undo seems fine

[19:17:00.0000] <rniwa>
jamesr: but might be too generic?

[19:17:01.0000] <rniwa>
jamesr: we want to let duck type it so user may want to inherit from some other objects

[19:17:02.0000] <zewt>
do is a keyword :)

[19:17:03.0000] <rniwa>
zewt: oh that won't work :(

[19:17:04.0000] <sicking>
zewt: that's ok in ES5

[19:17:05.0000] <sicking>
rniwa: no, that's not a problem in ES5

[19:18:00.0000] <rniwa>
sicking: probably better to avoid it though

[19:18:01.0000] <zewt>
why is it okay, that sounds gross, heh

[19:18:02.0000] <rniwa>
sicking: you never know which JIT compiler has bugs

[19:18:03.0000] <rniwa>
sicking: good principle > i generally try to stay out of naming issues

[19:18:04.0000] <rniwa>
sicking: makes you productive :)

[19:19:00.0000] <sicking>
rniwa: we have functions called 'delete' in indexedDB

[19:19:01.0000] <rniwa>
sicking: oh dear

[19:23:00.0000] <rniwa>
sicking: but I think the problem here is that do is defined by author

[19:23:01.0000] <rniwa>
sicking: so you'll writ something like undoManager.transact{do: funciton(redo) {..}, undo: funciton() {..})

[19:23:02.0000] <rniwa>
sicking: I guess it's fine in this simple case but might be annoying in more complicated case

[19:23:03.0000] <rniwa>
sicking: how old is ES5 support among browsers?

[19:23:04.0000] <rniwa>
sicking: I don't want to make library author's life harder but I don't want to worry about backward compat. if it's form ages ago

[19:23:05.0000] <sicking>
rniwa: JIT's don't matter here, only ecmascript parsers

[19:23:06.0000] <sicking>
rniwa: it was renamed from 'remove' to 'delete' based on developer input

[19:23:07.0000] <sicking>
rniwa: past the parser it's just strings

[19:23:08.0000] <sicking>
rniwa: one option would be to do both things

[19:23:09.0000] <sicking>
rniwa: have apply/reapply/unapply, pass a boolean argument to apply/reapply, and do the fallback to apply if reapply doesn't exist

[19:23:10.0000] <sicking>
rniwa: that way, if you have really different implementations between apply/reapply you can split it into two functions

[19:23:11.0000] <sicking>
rniwa: but if you don't, you can just add a few branches

[19:23:12.0000] <sicking>
s/but if you don't/but if the differences are small/

[19:23:13.0000] <rniwa>
sicking: that's what I meant :)

[19:24:00.0000] <rniwa>
sicking: > parsers

[19:24:01.0000] <dglazkov>
zewt: ftfy https://encrypted.google.com/

[19:24:02.0000] <rniwa>
sicking: should have said engine*

[19:24:03.0000] <sicking>
hmm... seems like i have connectivity issues

[19:24:04.0000] <sicking>
rniwa: did you get my last message?

[19:24:05.0000] <rniwa>
sicking: yeah

[19:24:06.0000] <rniwa>
sicking: that might be a good idea

[19:24:07.0000] <sicking>
rniwa: the "s/but if you don't/but if the differences are small/" one?

[19:24:08.0000] <rniwa>
sicking: having both*

[19:25:00.0000] <sicking>
cool

[19:25:01.0000] <rniwa>
sicking: okay, let's do that for now

[19:25:02.0000] <zewt>
dglazkov: :D

[19:25:03.0000] <sicking>
rniwa: for what it's worth, if you do { "do": function(...) { ... } }, that will work even in ES3 parsers

[19:25:04.0000] <rniwa>
sicking: sorry about the delay in responses, I want to be more responsive but I've been blocked by regressions from my Apple-style-span removals

[19:25:05.0000] <rniwa>
sicking: oh that's a good point

[19:26:00.0000] <rniwa>
sicking: mn... come to think of it

[19:26:01.0000] <rniwa>
sicking: maybe we don't need automatic boolean

[19:26:02.0000] <rniwa>
sicking: maybe we should just rename apply for automatci function to execute

[19:26:03.0000] <sicking>
ok, gotta run, circus class!

[19:27:00.0000] <rniwa>
sicking: so that manual transaction would have apply(bool), unapply, and optionally reapply

[19:27:01.0000] <rniwa>
sicking: and automatic transactoin would have execute

[19:27:02.0000] <rniwa>
sicking: ah, ok.

[19:27:03.0000] <rniwa>
ttyl

[19:27:04.0000] <sicking>
rniwa: that might work too

[19:27:05.0000] <rniwa>
guess I'll post that on whatwg and see what others think

[02:54:00.0000] <Ms2ger>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-September/033136.html

[02:54:01.0000] <Ms2ger>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-September/033257.html

[02:54:02.0000] <Ms2ger>
So does Opera support script onload?

[02:56:00.0000] <bga_>
small css proposal. resampling-filter: lanczos | bicubic | linear | ...

[02:59:00.0000] <zcorpan>
Ms2ger: hmm!

[02:59:01.0000] <Ms2ger>
I'd look at the code, but you guys are evil ;)

[03:01:00.0000] <zcorpan>
Ms2ger: seems my testing was bogus

[03:14:00.0000] <annevk>
"hot mutato"

[03:15:00.0000] <annevk>
/me is trying to work out the component model minutes

[03:20:00.0000] <asmodai>
Mmm, had SPDY been put forth for an IETF RFC by now (given how Mozilla added it to ff as well in recent builds)?

[03:20:01.0000] <asmodai>
s/had/has/

[03:23:00.0000] <annevk>
"(shouting match--declarative will be there)"

[03:23:01.0000] <annevk>
So far it seems sufficient people in the room were in favor of a trimmed XBL2

[03:28:00.0000] <smaug____>
I missed that meeting, but I was told that Mozilla and Apple had pretty similar ideas, and Google something a bit different

[03:29:00.0000] <smaug____>
Though, I think someone needs to still figure out sane event handling for shadow trees / bindings

[03:29:01.0000] <annevk>
From the minutes I just read on public-webapps that appears to be the case, yes

[03:29:02.0000] <smaug____>
(event retargeting is just quite error prone)

[03:30:00.0000] <annevk>
Mozilla/Apple participants want a trimmed XBL2; Google wants simpler JS libraries

[03:30:01.0000] <annevk>
The specifics were not nailed down

[03:30:02.0000] <annevk>
That is, all the hard questions are still there I guess :)

[03:30:03.0000] <smaug____>
indeed

[03:31:00.0000] <annevk>
I proposed a unconference session for TPAC

[03:31:01.0000] <annevk>
Maybe we can make some progress then...

[03:31:02.0000] <smaug____>
/me tries to not attend TPAC

[03:32:00.0000] <smaug____>
too much flying

[03:34:00.0000] <woef>
on rel="next" and rel="prev"

[03:34:01.0000] <woef>
Google says: "Send users to the most relevant page/URL—typically the first page of the series."

[03:35:00.0000] <woef>
Why would they do that and is there any way to step them from going through with it?

[04:54:00.0000] <annevk>
Curious to see whether this will have any effect: http://infrequently.org/2011/09/things-the-w3c-should-stop-doing/

[04:54:01.0000] <annevk>
Seems kind of pointless to suggest XML should be removed as it is unlikely to be removed from browsers, but overall it's a valid point

[05:05:00.0000] <Neiluj>
Hi

[05:07:00.0000] <Neiluj>
is there a plan to support other date/time format for inputs ? like <input type="time" format="time-hour:time-minute"/> or <input type="date" format="date-mday/date-month/date-fullyear"/> ?

[05:09:00.0000] <annevk>
do you mean UI-wise or submission-wise?

[05:09:01.0000] <annevk>
submission-wise: no

[05:10:00.0000] <annevk>
UI-wise: vague ideas exist

[05:10:01.0000] <Neiluj>
what means submission-wise ? what coming out from the form ?

[05:10:02.0000] <annevk>
yeah, what the server gets

[05:10:03.0000] <Neiluj>
ok, so no only UI-wise

[05:11:00.0000] <annevk>
we don't really have a good idea yet

[05:11:01.0000] <annevk>
at the moment UI is up to browsers

[05:12:00.0000] <Neiluj>
ok :)

[05:12:01.0000] <Neiluj>
hope it will come one day, thx :)

[05:12:02.0000] <smaug____>
hopefully browsers can pickup the "right" UI based on the page's language

[05:13:00.0000] <smaug____>
similarly to <input type="number"> handling

[05:13:01.0000] <smaug____>
(where decimal separator can be . or ,)

[05:13:02.0000] <Neiluj>
but what if the format is not about language convention, like not showing seconds for time inputs

[05:14:00.0000] <smaug____>
that is indeed some extra hint which UA should get from the page

[05:14:01.0000] <annevk>
Neiluj, that you can control already using step I think

[05:14:02.0000] <annevk>
well, showing is another matter I guess

[05:14:03.0000] <Neiluj>
annevk: indeed, with time, it's ok, that was for the example and that's a trick

[05:16:00.0000] <Neiluj>
thinking this may be some CSS property responsability actually...

[05:16:01.0000] <annevk>
on public-webapps⊙wo there is some discussion going on on how we want to allow developers to extend/replace elements with their own implementation

[05:17:00.0000] <Neiluj>
as it won't change the data but only the UI...

[06:45:00.0000] <annevk>
For everyone who wants to use Anolis with cross-specification cross-references, it's quite easy: http://wiki.whatwg.org/wiki/Anolis

[06:59:00.0000] <annevk>
http://shiki.esrille.com/2011/09/es-acid1.html seems Shiki is writing a browser in ECMAScript and it now passes Acid1

[06:59:01.0000] <annevk>
that's pretty neat

[08:01:00.0000] <rillian_>
foolip, we're not having a meeting now, right?

[08:11:00.0000] <rillian_>
/me guesses not

[09:30:00.0000] <annevk>
oh Björn had his spiel again about XMLHttpRequest not having a test suite

[09:30:01.0000] <annevk>
trololol

[09:34:00.0000] <hsivonen>
I thought you wrote a test suite for XHR

[09:35:00.0000] <annevk>
yeah Ms2ger pointed that out

[09:40:00.0000] <smaug____>
oh, test suites

[09:41:00.0000] <smaug____>
I need to look at my notes about invalid EventSource tests

[09:42:00.0000] <smaug____>
annevk: but in any case, thanks for writing tests!

[09:42:01.0000] <annevk>
smaug____, they've been around for a year now...

[09:43:00.0000] <smaug____>
xhr and eventsource?

[09:43:01.0000] <smaug____>
do you happen to have tests for xhr.timeout already?

[09:43:02.0000] <smaug____>
(someone is implementing that)

[09:44:00.0000] <annevk>
I have not written tests for any of the new features and I don't think I should

[09:44:01.0000] <annevk>
It's bad to write both the spec and the tests

[09:45:00.0000] <smaug____>
true

[09:52:00.0000] <Ms2ger>
annevk, so what should I recommend instead of replaceWholeText?

[09:57:00.0000] <annevk>
Ms2ger, parentNode.normalize() and then setting data?

[09:58:00.0000] <annevk>
or maybe just say to use textContent

[10:00:00.0000] <Ms2ger>
Takk

[10:01:00.0000] <annevk>
graag gedaan

[10:04:00.0000] <karlcow>
http://www.onderhond.com/blog/work/rel-next-prev-google

[10:14:00.0000] <zewt>
"verbose"

[10:15:00.0000] <annevk>
also seems like what Google is doing is the whole point behind having such attribute values

[10:15:01.0000] <annevk>
that you can offer different UI

[10:19:00.0000] <Hixie>
hsivonen: ooh, second time an "assistant-resolved" bug got escalated :-)

[10:24:00.0000] <annevk>
oh hey

[10:24:01.0000] <annevk>
deadline coming up

[10:24:02.0000] <annevk>
http://lists.w3.org/Archives/Public/public-html/2011May/0162.html

[10:24:03.0000] <annevk>
sort of forgot about that

[10:26:00.0000] <Ms2ger>
Only 175 for HTML5

[10:27:00.0000] <annevk>
30 bugs to WONTFIX per day :p

[10:47:00.0000] <annevk>
noticed http://www.w3.org/Bugs/Public/show_bug.cgi?id=13684 (on event handlers and DOM Events) while looking through those bugs; been meaning to write about that so that was nice

[10:56:00.0000] <annevk>
Oh, it's already text/vtt I see

[10:59:00.0000] <zewt>
i sort of like the idea of dropping "web" from webvtt, simply because there's nothing about it that's web-specific, and having "web" in there could (minorly) hinder adoption

[11:00:00.0000] <zewt>
only casually, though, it's already had one name change

[11:02:00.0000] <zewt>
(on the other hand, "vtt" is slightly less googlable than "webvtt")

[11:07:00.0000] <annevk>
zewt, we could still call it WebVTT (although I don't think it's a good idea to prefix specifications with random words such as "X" or "Web"), just not have "Web" become an intrinsic part of the format

[11:08:00.0000] <zewt>
if it's baked into the name of the spec, that's what people will call it, so the file header probably doesn't matter much at that point

[11:09:00.0000] <zewt>
well, i guess what people end up calling it is out of our hands--if people name the files *.vtt they may call it "vtt" no matter what we do

[11:09:01.0000] <Hixie>
annevk: I wanted the signature to be "WEBVTT FILE", it's already been reduced to "WEBVTT". I don't think we should go down even further.

[11:12:00.0000] <annevk>
I guess in the end it's just another string, like XMLHttpRequest

[11:13:00.0000] <annevk>
(Not that WEBVTT is that bad ;))

[11:13:01.0000] <Ms2ger>
WEBVtt?

[11:14:00.0000] <zewt>
WEBVtt to represent a file format name WebVTT? that's a mind-bender :)

[11:14:01.0000] <zewt>
named

[11:15:00.0000] <annevk>
hey you can now search in Google+

[12:18:00.0000] <AryehGregor>
So it looks like style="border-width: initial; border-color: initial" is unremovable via CSSOM in WebKit.

[12:18:01.0000] <AryehGregor>
. . .

[12:18:02.0000] <AryehGregor>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!doctype%20html%3E%0A%3Cdiv%20style%3D%22border-width%3A%20initial%3B%20border-color%3A%20initial%22%3E%3C%2Fblockquote%3E%0A%3Cscript%3E%0Avar%20div%20%3D%20document.querySelector(%22div%22)%3B%0Adiv.style.borderWidth%20%3D%20%22%22%3B%0Adiv.style.removeProperty(%22border-width%22)%3B%0Adiv.style.removeProperty(%22borderWidth%22)%3B%0Adelete%20div.style.borderWidth%3B%0A%3C%2Fscript%3E

[12:26:00.0000] <AryehGregor>
https://bugs.webkit.org/show_bug.cgi?id=68551

[12:31:00.0000] <GlitchMr>
I would like to see ignoring CAPS LOCK state while using <input type=password>. Caps Lock usually does nothing good on those fields and is annoying :P (because you don't see you write with other case).

[12:31:01.0000] <GlitchMr>
But then, some might use passwords full of uppercase letters...

[12:32:00.0000] <zewt>
just mimic WinXP's "AWOOGA AWOOGA you've got caps lock on" tooltip on top of password boxes (if there was a way to detect it, of course)

[12:32:01.0000] <GlitchMr>
I don't think you could check Caps Lock state using JS

[12:32:02.0000] <zewt>
thus if there was :)

[12:33:00.0000] <GlitchMr>
Of course you could write passwords in database in lowercase or just try two passwords with each login (specified password and letter case flipped password), but that would lower the security.

[12:33:01.0000] <zewt>
(some might argue that showing something like that is the browser's job, though I think that would be a bit visually invasive for browsers to do on every site)

[12:34:00.0000] <AryehGregor>
GlitchMr, doesn't IE10 alert you if your caps lock key is on when you're typing in password inputs?

[12:34:01.0000] <AryehGregor>
All browsers should just do that.

[12:34:02.0000] <AryehGregor>
It's only sensible.

[12:36:00.0000] <GlitchMr>
Makes sense...

[13:13:00.0000] <RobbertAtWork>
GlitchMr: Some people have learned to type using caps lock for any sequence of two or more uppercase letters

[14:07:00.0000] <ojan>
TabAtkins: yt? i'm trying to figure out what to do w/ height:auto on a vertical flexbox.

[14:08:00.0000] <ojan>
TabAtkins: vertical writing-mode shrinkwraps using the initial containing block as the height

[14:09:00.0000] <ojan>
TabAtkins: it seems like we should do the same for flexbox

[14:32:00.0000] <TabAtkins>
ojan, here

[14:32:01.0000] <TabAtkins>
I agree.

[14:32:02.0000] <ojan>
TabAtkins: on further thought, i'm going to propose to the wg that the writing-mode spec change

[14:32:03.0000] <ojan>
TabAtkins: and i think flexbox should match

[14:32:04.0000] <TabAtkins>
kk

[14:34:00.0000] <ojan>
TabAtkins: i'll post shortly...but basically, if there is an available height for a height:auto flexbox, i think we should fill it instead of shrinkwrapping

[14:34:01.0000] <ojan>
TabAtkins: only shrinkwrap in the case of not having an available height and in that case, shrinkwrap using the height of the initial containing block

[14:35:00.0000] <TabAtkins>
Oh, so <div height=300px><vbox height=auto>...</vbox></div> would make the vbox 300px tall?

[14:37:00.0000] <mkanat>
As a developer, that's what I'd expect from height:100%, not from height: auto.

[14:37:01.0000] <TabAtkins>
ojan: ^^^?

[14:38:00.0000] <TabAtkins>
mkanat: I agree, if that's the behavior he's referring to.

[14:39:00.0000] <ojan>
TabAtkins: it makes height consistent w/ width

[14:40:00.0000] <TabAtkins>
ojan: But height isn't consistent with width in general.  If you're embedding a vbox into a block element, I'd expect height:auto to work like height:auto does for any other element.

[14:40:01.0000] <TabAtkins>
(We need the 'fill' value for width/height which gives you the width:auto behavior explicitly, which we could then also use with height.)

[15:22:00.0000] <annevk>
"At the workshop today"

[15:22:01.0000] <annevk>
what workshop?

[15:23:00.0000] <TabAtkins>
The schema.org workshop, presumably.

[15:23:01.0000] <jgraham>
/me can no longer keep up with all the semi-secret meetings

[15:23:02.0000] <Hixie>
you're not missing anything

[15:23:03.0000] <Hixie>
(from the whatwg perspective anyway)

[15:25:00.0000] <Hixie>
can someone teach me what a singular transform matrix's implications are?

[15:26:00.0000] <Hixie>
wikipedia's math pages are inpenetrable

[15:27:00.0000] <jgraham>
A simular matrix doesn't have an inverse, so I guess once loses information e.g. by mapping points from an area onto a line

[15:28:00.0000] <jgraham>
/me doesn't know if that is helpful

[15:28:01.0000] <AryehGregor>
Hixie, it has derivative zero.  It's not invertible.  Geometrically, it multiplies areas by zero, so in two dimensions, it maps planes to points or lines.

[15:28:02.0000] <AryehGregor>
Anything specific you want to know?

[15:29:00.0000] <AryehGregor>
Singular vs. invertible is one of the basic differences you can have with matrices, so there are tons of things to say about it.

[15:29:01.0000] <Hixie>
if you have a plane and your transform it by a singular matrix, where is the resulting point or line?

[15:30:00.0000] <Hixie>
i guess it's got zero thickness so it doesn't matter

[15:30:01.0000] <AryehGregor>
Right.

[15:30:02.0000] <Hixie>
i'm trying to work out why browsers can't just implement the spec with singular matrices, instead needing some special text for them

[15:30:03.0000] <AryehGregor>
If it's a regular 2x2 matrix, it will map the plane to either the origin or a line through the origin.  If it's an augmented matrix, it transforms affinely instead of linearly, so the point or line can be anywhere.

[15:31:00.0000] <AryehGregor>
What exactly constitutes "singular" when your matrix's values are floating-points is nonobvious.

[15:31:01.0000] <dbaron>
by derivative, AryehGregor meant determinant

[15:31:02.0000] <Hixie>
AryehGregor: yeah that's why i was hoping there'd be a nice way to not answer the question

[15:31:03.0000] <AryehGregor>
So I did.  How embarrasing.

[15:31:04.0000] <AryehGregor>
embarrassing.

[15:32:00.0000] <AryehGregor>
Anyway, your questions have veered into the highly practical, so I don't think my expertise will be of much use.

[15:32:01.0000] <Hixie>
hah

[15:32:02.0000] <dbaron>
I think it really depends on the wording of the spec whether it needs to make a special case for singular matrices

[15:33:00.0000] <dbaron>
likewise for code

[15:33:01.0000] <dbaron>
but there are some things where it's certainly unavoidable

[15:33:02.0000] <dbaron>
like if we add an API for getting "coordinates in the space of element A" to "... of element B"

[15:34:00.0000] <dbaron>
if there's a singular transform between them, then there's no answer to the question in one direction (except for a narrow set of points) and lots of answers the other way

[15:35:00.0000] <dbaron>
likewise, there are a bunch of algorithms that have a "divide by the determinant" step, which doesn't work so well when it's 0.  Usually such algorithms don't make any sense to apply to singular transforms anyway.

[15:35:01.0000] <dbaron>
Hixie, ^

[15:35:02.0000] <Hixie>
yeah

[15:35:03.0000] <dbaron>
but the spec still needs to say what it does (return 0, throw exception, etc.)

[15:36:00.0000] <Hixie>
well luckily for me i don't think i have anything that returns points or divides anything by anything

[15:36:01.0000] <Hixie>
however

[15:36:02.0000] <Hixie>
people have nonetheless asked the question

[15:36:03.0000] <dbaron>
(e.g., when animating transforms, the fallback case is to decompose the matrix and animate the pieces -- and the decomposition algorithm doesn't work on singular matrices)

[15:37:00.0000] <dbaron>
asked the question about what?

[15:37:01.0000] <Hixie>
"what should happen if you have a singular transformation matrix"

[15:38:00.0000] <Hixie>
e.g. if you call c.scale(0,1); and then c.fill(); with a path

[15:38:01.0000] <dbaron>
ah, so these are questions about canvas

[15:38:02.0000] <dbaron>
I think that's easy: nothing.

[15:40:00.0000] <dbaron>
though if the path was set *before* the scale...?

[15:40:01.0000] <Hixie>
the path is non-zero

[15:40:02.0000] <dbaron>
(does the scale affect it?)

[15:40:03.0000] <Hixie>
the fill is all that is scaled

[15:40:04.0000] <dbaron>
hmmm, I don't remember canvas well enough to discuss this intelligently

[15:41:00.0000] <hober>
istm the canvas spec should align with the 2d/3d css transforms specs

[15:42:00.0000] <Hixie>
if img1 is a mostly green image, in webkit, this is a mostly green rectangle:

[15:42:01.0000] <Hixie>
  c.beginPath(); c.rect(100,100,100,100); c.fillStyle = c.createPattern(img1, 'repeat');

[15:42:02.0000] <Hixie>
  c.scale(0.000000000000000000000000000000000001,1);

[15:42:03.0000] <Hixie>
  c.fill();

[15:42:04.0000] <Hixie>
but if i add one "0" to that number, it no longer paints anything.

[15:43:00.0000] <Hixie>
because repeating a zero-width image across the plane doesn't make much sense

[15:43:01.0000] <Hixie>
but what about if the fill is a color?

[15:44:00.0000] <jamesr_>
if it does nothing, does the globalCompositeOperation still apply?

[15:44:01.0000] <jamesr_>
if i do c.globalCompositeOperation="copy"; c.scale(0,1); makePath(c); c.fill();

[15:44:02.0000] <jamesr_>
is my canvas now empty?

[15:45:00.0000] <Hixie>
not in webkit

[15:45:01.0000] <Hixie>
however

[15:45:02.0000] <AryehGregor>
If we had perfect precision, all this stuff would be well-defined.  But some things suddenly behave differently at determinant zero compared to determinant epsilon, and there's no difference with floating-point . . .

[15:45:03.0000] <Philip`>
I think the reason the spec doesn't return points or divide anything by anything is that it doesn't actually define the algorithms to render things (which can do those things)

[15:46:00.0000] <Hixie>
if you set it to   c.scale(0.000000000000000000000000000000000001,1);

[15:46:01.0000] <Hixie>
then it is empty

[15:46:02.0000] <Hixie>
so there's a difference between c.scale(0.000000000000000000000000000000000001,1);, c.scale(0.00000000000000000000000000000000001,1);, and c.scale(0.00000000000000000000000000000000000,1);

[15:47:00.0000] <Hixie>
that is, c.scale(1e-36,1);, c.scale(1e-37,1); and c.scale(0,1);

[15:47:01.0000] <Hixie>
Philip`: yeah, i was just noticing that nothing actually says how fill() paints a repeating pattern

[15:47:02.0000] <Philip`>
Sound like FLT_MIN

[15:47:03.0000] <Philip`>
*Sounds

[15:58:00.0000] <AryehGregor>
Philip` or zewt or anyone who might know: how does EBS pricing work if you maintain the volume for less than an integer number of months?  It doesn't say whether they round or what.

[15:58:01.0000] <AryehGregor>
At least that I see.

[16:07:00.0000] <zewt>
they measure it in "GB-months", which I think means to multiply by the amount of time, eg. 2 GB for two weeks is one GB-month

[16:08:00.0000] <zewt>
(don't use a petabyte of storage and blame me for the billing if I'm wrong, though)

[16:09:00.0000] <Hixie>
that sounds equivalent to saying that they average the disk usage over each month

[16:10:00.0000] <zewt>
i regularly create large temporary volumes for things and delete them after a day or two; i'm sure they don't take the maximum or anything like that

[16:12:00.0000] <Hixie>
i wonder how often they sample

[16:16:00.0000] <AryehGregor>
They're providing block devices, not filesystems, so they don't have to sample.  They can just record the creation and destruction times of each volume.

[16:17:00.0000] <annevk>
http://www.reddit.com/r/reddit.com/comments/kn327/wifes_ipad_i_just_wanted_to_play_angry_birds/ hahaha

[16:30:00.0000] <Philip`>
AryehGregor: http://serverfault.com/questions/197379/amazon-ebs-charges-calculation says hourly


2011-09-22
[17:45:00.0000] <zewt>
annevk: could use your input on the FileReader.abort() thread; i think treating XHR as precedent for Progress Events behavior would make a serious mess of every API using it in the future

[17:45:01.0000] <zewt>
also i have to tab twice to get to you; curse you, annacc

[17:45:02.0000] <annacc>
zewt: huh?  what'd I do?

[17:46:00.0000] <TabAtkins>
Aw man, good thing I haven't had to talk to annevk yet today.  ^_^

[18:21:00.0000] <jamesr_>
Hixie, the behavior you described above (scale(0.00001) does a different thing in WebKit w.r.t. globalCompositeOperation than scale(0)) is just a webkit bug

[18:21:01.0000] <jamesr_>
in fact it'd be great if you could file that

[18:21:02.0000] <jamesr_>
ben wells has been fixing a lot of our GCO canvas bugs in webkit

[01:26:00.0000] <zcorpan>
http://www.sitepoint.com/forums/showthread.php?782709-Fire-HTML5-validation-onblur - author experience with WF2

[02:12:00.0000] <annevk>
zewt, I noticed that thread, and decided I rather play Gears of War than look into it

[02:12:01.0000] <annevk>
I guess I should now though

[02:36:00.0000] <zcorpan>
AryehGregor: would be nice if http://w3c-test.org/html/tests/approved/base64.html tested argument type conversion, like null, undefined, 1, {toString:function(){return "foo"}}

[02:38:00.0000] <zcorpan>
AryehGregor: oh, seems it tests undefined already, but not null

[03:08:00.0000] <annevk>
zewt, replied

[03:42:00.0000] <annevk>
zewt, btw, you had some other proposals for changing event handling in XHR as well right?

[03:42:01.0000] <annevk>
zewt, I should prolly get to those

[04:12:00.0000] <annevk>
http://joehewitt.com/post/web-technologies-need-an-owner/ obvious troll is obvious?

[04:15:00.0000] <annevk>
according to brucel it's not

[04:15:01.0000] <annevk>
glad he has no idea how to get there then :p

[04:16:00.0000] <MikeSmith>
"I can easily see a world in which Web usage falls to insignificant levels compared to Android, iOS, and Windows, and becomes a footnote in history. "

[04:16:01.0000] <annevk>
"Let's face facts: the Web will never be the dominant platform."

[04:17:00.0000] <annevk>
most people browse the web on their computer...

[04:18:00.0000] <Rik`>
it seems a very mobile oriented vision

[04:28:00.0000] <jgraham>
annevk: I thought the distressing thing was "It would help if all the rendering engines but one were to die"

[04:29:00.0000] <annevk>
yeah not really sure why that piece of writing gets attention

[04:29:01.0000] <annevk>
guess software monocultures are gaining popularity again

[04:29:02.0000] <annevk>
yearning for IE6

[04:30:00.0000] <Rik`>
annevk: maybe also because of the person writing it?

[04:31:00.0000] <jgraham>
Based on the fact that he is a person on the internet I will wildly speculate that he is a free market libertarian (that could just be vocal people on reddit/hacker news/slashdot/etc. though). Which makes the position that less competition would improve things a bit strange.

[04:32:00.0000] <annevk>
Rik`, he's famous?

[04:32:01.0000] <Rik`>
annevk: creator of Firebug

[04:32:02.0000] <jgraham>
And one of the original Firefox leads

[04:32:03.0000] <annevk>
I see

[04:33:00.0000] <hsivonen>
where could I find a list of Opera releases and their release dates?

[04:33:01.0000] <jgraham>
http://www.opera.com/docs/history/

[04:34:00.0000] <hsivonen>
jgraham: thanks. oops. I already had a look at that page and failed to scroll to the right part...

[04:35:00.0000] <MikeSmith>
annevk: I seem to remember him writing something in a similar vein a year or two ago

[04:41:00.0000] <annevk>
http://www.flickr.com/photos/24374884@N08/6171485113/

[04:41:01.0000] <annevk>
hahaha

[04:43:00.0000] <MikeSmith>
annevk: nice

[04:45:00.0000] <hsivonen>
so Joe Hewitt would like to have Chromium as the only Web platform impl?

[04:46:00.0000] <hsivonen>
while Chromium is shipping ActiveG--a competitor for the Web Platform

[04:49:00.0000] <MikeSmith>
I think one of the hallmarks of these kinds of postings are their complete lack of any humor

[04:49:01.0000] <MikeSmith>
well, intentional humor at least

[04:50:00.0000] <Rik`>
also, with ChromeOS, Boot2Gecko, Windows8 and others, the web is gaining pretty cool capabilities "in a timely manner"

[04:51:00.0000] <annevk>
http://blog.whatwg.org/weekly-xbl-intents

[04:51:01.0000] <hsivonen>
Rik`: well, B2G and Windows 8 aren't shipping products yet

[04:52:00.0000] <annevk>
I would love it btw if someone could tweak the templates of the blog some more

[04:52:01.0000] <annevk>
and then especially the links to other posts

[04:52:02.0000] <annevk>
they should appear at the bottom

[04:52:03.0000] <annevk>
and all the metadata for an individual post could be trimmed a lot too

[04:52:04.0000] <Rik`>
also, when we see something like PhoneGap to bring those capabilities to simply cross platform development

[04:53:00.0000] <annevk>
I guess I can do it myself

[04:53:01.0000] <Philip`>
"[it] is impossible to create a platform with a coherent, unified vision the way Apple has with Cocoa or the way Python has with Guido" - Python created Guido? That sounds like it would involve interestingly paradoxical time travel

[04:53:02.0000] <hsivonen>
PhoneGap doesn't run code from the Web, though

[04:53:03.0000] <Rik`>
*simplify

[04:54:00.0000] <jgraham>
Philip`: import timetravel

[04:54:01.0000] <Rik`>
hsivonen: you can run code from the web but that will result in a bad user experience

[04:55:00.0000] <hsivonen>
Rik`: surely not on iOS?

[04:55:01.0000] <Rik`>
hum yes you can

[04:55:02.0000] <Rik`>
since you are using Apple JS engine

[04:56:00.0000] <hsivonen>
Rik`: does Apple let you run remote JS code if you use Apple's JS engine?

[04:56:01.0000] <Rik`>
I think so

[04:56:02.0000] <hsivonen>
do you then have to embed the whole WebKit?

[04:57:00.0000] <hsivonen>
can you call PhoneGap's device APIs from remote code?

[04:57:01.0000] <Rik`>
I've met some people creating apps with Phonegap and they had no problem to put those on the App store

[04:58:00.0000] <hsivonen>
Rik`: are you sure there isn't a PhoneGap part and an embedded WebKit that doesn't have PhoneGap APIs inside the PhoneGap part?

[04:58:01.0000] <hsivonen>
Rik`: if Apple let people run remote code using JSC but without WebKit, it would be a huge loophole in their lock-down policy

[04:59:00.0000] <Rik`>
I don't know the exact details

[04:59:01.0000] <hsivonen>
details matter :-)

[04:59:02.0000] <Rik`>
but people running remote code mostly create Phonegap apps to have them listed in the store, not really for the extra capabilities

[05:00:00.0000] <tomasf>
JSC isn't a public API on iOS

[05:00:01.0000] <hsivonen>
I'm quite sad that people treat the lack of a unified store front on the Web as a bug

[05:00:02.0000] <hsivonen>
tomasf: well, then

[05:01:00.0000] <Rik`>
anyway, my first point was about the existence of Phonegap and similar systems to use web technologies

[05:05:00.0000] <annevk>
he works on Firefox first, then suggests standardizing on Chromium, something which did not exist when Firefox was there

[05:05:01.0000] <annevk>
i mean what the fuck

[05:05:02.0000] <annevk>
i don't even see how any of this makes sense to him

[05:07:00.0000] <karlcow>
it doesn't make sense. at all.

[05:07:01.0000] <MikeSmith>
sure it does

[05:08:00.0000] <MikeSmith>
one browser engine, one person to make all the decisions

[05:08:01.0000] <karlcow>
maybe in a dadaist way.

[05:08:02.0000] <MikeSmith>
that's one way to describe it, I guess

[05:08:03.0000] <karlcow>
I  tried to follow the web is not the web but it is the web but it is not the web.

[05:09:00.0000] <karlcow>
and I have been lost

[05:09:01.0000] <MikeSmith>
that's Gertrude Stein you're quoting, man

[05:10:00.0000] <MikeSmith>
this seems more like the Futurists who aligned themselves with Mussolini

[05:16:00.0000] <hsivonen>
is http://mobilehtml5.org/ right about not having CORS checked for Firefox for Android?

[05:16:01.0000] <hsivonen>
or File API

[05:16:02.0000] <annevk>
wc?

[05:17:00.0000] <hsivonen>
wc??

[05:18:00.0000] <annevk>
wrong channel

[05:19:00.0000] <hsivonen>
annevk: I thought people here would know

[05:38:00.0000] <zcorpan>
Hixie: yt?

[05:39:00.0000] <zcorpan>
/me guesses wrong time of the day

[05:44:00.0000] <hsivonen>
so 3 vendors are trying to do what's on the high level the idea of Web apps providing services to each other

[05:44:01.0000] <hsivonen>
Mozilla's Web Activities, Google's Web Intents and Microsoft's Contracts

[05:45:00.0000] <Ms2ger>
Opera did it first

[05:48:00.0000] <hsivonen>
Ms2ger: I can't tell if you are joking or not

[05:48:01.0000] <Ms2ger>
I happen to be

[05:52:00.0000] <jgraham>
hsivonen: If you had been talking about "provide access to device APIs" you would get a similar story

[05:53:00.0000] <hsivonen>
jgraham: except in that case, Opera really did it first

[05:53:01.0000] <jgraham>
hsivonen: That was the unspoken subtext :)

[05:53:02.0000] <hsivonen>
is Opera Platform still alive?

[06:01:00.0000] <annevk>
does anyone follow web-perf?

[06:01:01.0000] <annevk>
why did it remove references to HTML fetch?

[06:01:02.0000] <annevk>
that seems like a mistake given what they define...

[06:02:00.0000] <annevk>
is this one of those plh "lets define less so we can follow The Process" inspired tactics?

[07:02:00.0000] <hsivonen>
annevk: for HTML in XHR, should I disable user-set charset pref and chardet?

[07:03:00.0000] <hsivonen>
annevk: i.e. default to Windows-1252 in the absence of an explicit declaration?

[07:03:01.0000] <hsivonen>
annevk: also, I think I shouldn't try to support the charset restart with late <meta>

[07:04:00.0000] <hsivonen>
does any browser support text/html in XHR yet?

[07:04:01.0000] <hsivonen>
honoring <meta> for responseText could break something, BTW

[07:07:00.0000] <zcorpan>
can we be radical and force utf-8? :-)

[07:09:00.0000] <hsivonen>
zcorpan: I don't know. maybe!

[07:13:00.0000] <annevk>
hsivonen, Gecko does not honor <meta>?

[07:13:01.0000] <annevk>
hsivonen, WebKit does iirc

[07:13:02.0000] <hsivonen>
annevk: for responseText?

[07:13:03.0000] <annevk>
yes

[07:13:04.0000] <annevk>
hsivonen, XHR just defers to HTML for the whole thing

[07:13:05.0000] <annevk>
note that for CSS it doesn't

[07:13:06.0000] <hsivonen>
annevk: does WebKit support text/html parsing for responseXML?

[07:14:00.0000] <annevk>
no

[07:14:01.0000] <annevk>
but it does for decoding

[07:14:02.0000] <hsivonen>
aargh. why does WebKit do something weird like that?

[07:14:03.0000] <annevk>
once you support an HTML parser for responseXML it only makes sense, no?

[07:14:04.0000] <hsivonen>
annevk: does WebKit apply heuristic detectors and user settings?

[07:14:05.0000] <annevk>
would be weird if they decode differently

[07:15:00.0000] <hsivonen>
annevk: once you do, sure. before you do, no

[07:15:01.0000] <annevk>
well if that's the plan better to not have to break compat

[07:15:02.0000] <hsivonen>
so do I now have to write test cases to reverse engineer WebKit?

[07:16:00.0000] <hsivonen>
I though we had specs for this

[07:16:01.0000] <annevk>
afaik WebKit uses the same codepath

[07:16:02.0000] <hsivonen>
annevk: just deferring to HTML is questionable when this part of HTML has legacy-oriented optional features

[07:17:00.0000] <annevk>
but I don't know all the details and it has been ages

[07:17:01.0000] <hsivonen>
annevk: same as what?

[07:17:02.0000] <annevk>
HTML parser

[07:17:03.0000] <hsivonen>
annevk: with user setting-dependent charset defaults and heuristic detection?

[07:17:04.0000] <annevk>
it seems weird that an HTML page loaded in a browsing context would decode differently when loaded through XMLHttpRequest

[07:17:05.0000] <hsivonen>
annevk: with inheritance from parent?

[07:18:00.0000] <annevk>
of course that is already the case for e.g. text/css...

[07:18:01.0000] <annevk>
hmm

[07:18:02.0000] <zcorpan>
also the case with text/javascript, <script> vs Worker

[07:18:03.0000] <hsivonen>
annevk: it also seems weird for newly-introduced UIless API to have its behavior magically change when you run a Japanese localization

[07:18:04.0000] <annevk>
hsivonen, responseText is not new

[07:19:00.0000] <annevk>
ok wait

[07:19:01.0000] <annevk>
I don't mind changing this to something that we (you) think is better

[07:20:00.0000] <annevk>
At the time I wrote this text I didn't know the HTML parser came with a bunch of preference flags

[07:20:01.0000] <annevk>
we could do ;charset= <meta> fallback to UTF-8 if it's decided that is better

[07:21:00.0000] <hsivonen>
aaarrrghh

[07:21:01.0000] <hsivonen>
Gecko runs the heuristic detector for responseText

[07:21:02.0000] <hsivonen>
why, oh, why

[07:21:03.0000] <hsivonen>
somebody was feeling "helpful"?

[07:21:04.0000] <annevk>
only for text/html?

[07:21:05.0000] <hsivonen>
annevk: for non-XML

[07:22:00.0000] <annevk>
o_O

[07:22:01.0000] <zcorpan>
to make you bald earlier?

[07:22:02.0000] <hsivonen>
ooops

[07:22:03.0000] <hsivonen>
no

[07:22:04.0000] <hsivonen>
I'm seeing things that aren't there

[07:22:05.0000] <hsivonen>
sorry

[07:22:06.0000] <hsivonen>
/me misread some allcaps stuff

[07:23:00.0000] <zcorpan>
/me pictures hsivonen instantly regaining bouffant hair (with apologies to brucel)

[07:23:01.0000] <hsivonen>
so Gecko is reading charset from HTTP or falling back to UTF-8

[07:24:00.0000] <hsivonen>
which suggests text/html should default to UTF-8 instead of Windows-1252 or something locale-dependent

[07:25:00.0000] <hsivonen>
I think I'm going to skip the legacy craziness for text/html in XHR

[07:25:01.0000] <timeless>
/me chuckles

[07:26:00.0000] <hsivonen>
I was so afraid I'd see shocking contract ids that I misread non-shocking contract ids

[07:26:01.0000] <annevk>
please email public-webapps

[07:26:02.0000] <hsivonen>
annevk: will do

[07:26:03.0000] <annevk>
and maybe file bugs on HTML5 if the parser does not make it clear you can use it such ways

[07:27:00.0000] <annevk>
would be great to say "parse the HTML without legacy with UTF-8 as fallback"

[07:27:01.0000] <annevk>
or some such

[07:27:02.0000] <timeless>
annevk: i'm sorry to discover that you don't know the history of some of your competitors :(

[07:27:03.0000] <timeless>
i don't think his fears are unwarranted fwiw

[07:28:00.0000] <annevk>
?

[07:28:01.0000] <timeless>
http://en.wikipedia.org/wiki/Joe_Hewitt_%28programmer%29

[07:29:00.0000] <timeless>
/me used to work on DOMI

[07:29:01.0000] <annevk>
ehm I contributed quite a bit to Gecko 2003-2005, stilll do...

[07:29:02.0000] <timeless>
(which at this point is but a footnote)

[07:29:03.0000] <annevk>
I just didn't know Joe Hewitt

[07:29:04.0000] <annevk>
big deal

[07:31:00.0000] <hsivonen>
annevk: email sent

[07:31:01.0000] <timeless>
hrm, he was on hiatus from core then https://www.ohloh.net/p/mozilla/contributors/19327463000

[07:32:00.0000] <timeless>
anyway, people were complaining that facebook's ui had changed recently

[07:32:01.0000] <timeless>
and i was wondering what people were talking about... because i was using a native facebook app :)

[07:36:00.0000] <hsivonen>
timeless: don't you believe in the Web?

[07:48:00.0000] <timeless>
"I want to believe"

[07:48:01.0000] <RobbertAtWork>
I was waiting for you to say that

[07:48:02.0000] <timeless>
do i get a +1 for saying it?

[07:48:03.0000] <RobbertAtWork>
def

[07:48:04.0000] <timeless>
(or a ++?)

[07:48:05.0000] <timeless>
(sorry, i was afk)

[07:49:00.0000] <timeless>
but, the mobile apps tend to have features which i like better, and my browser costs too much

[07:49:01.0000] <timeless>
in this case, the fact that the mobile app doesn't update to get the latest and greatest ui rewrite is a feature

[07:49:02.0000] <Kellen`>
hsivonen: when validator.nu finds an invalid entity reference, it would be useful to report what the entity was somewhere. Right now, it's displayed in extract, but truncated if it's longer than 4 characters.

[07:49:03.0000] <timeless>
the mobile web site otoh would

[07:50:00.0000] <timeless>
hsivonen: oh, that reminds me, i need to complain to our web browser team

[07:50:01.0000] <timeless>
the gmail tablet ui recently added support for multiple accounts

[07:50:02.0000] <annevk>
oh hey RobbertAtWork!

[07:50:03.0000] <timeless>
but i can't get it to work

[07:50:04.0000] <annevk>
welkom

[07:50:05.0000] <timeless>
Kellen`++

[07:50:06.0000] <Kellen`>
Kellen`--

[07:50:07.0000] <timeless>
a lot of error reporting is unfortunately like that :(

[07:51:00.0000] <timeless>
ok: hsivonen  +1 for reporting the complete entity :)

[07:51:01.0000] <karlcow>
I do not believe. :)

[07:53:00.0000] <Kellen`>
timeless: yeah. i'm trying to ignore our custom entities but it's hard when you can't find the names anywhere in the error output

[07:54:00.0000] <timeless>
Kellen`: "ignore"?

[07:54:01.0000] <timeless>
if you have &custent1; &custent2; how would you ignore 2?

[07:55:00.0000] <Kellen`>
timeless: well, it'd be potentially buggy due to the truncating. since 1 and 2 both look like "&custe" in the error output

[07:56:00.0000] <hsivonen>
custom entities in text/html?

[07:57:00.0000] <timeless>
Kellen`: right, but are you basically teaching a templater to fill in the entities so that the next iteration can report another entity to fill in?

[07:57:01.0000] <Kellen`>
it's not "real" html; it goes through a filtering/parsing stage before presentation, but everything else besides the entities should be valid

[07:57:02.0000] <hsivonen>
I see

[07:57:03.0000] <timeless>
oh right, validator.nu isn't stop-on-first-fault

[07:58:00.0000] <timeless>
sorry, i'm so used to gecko's xml parser

[07:58:01.0000] <hsivonen>
the extractor has no clue that it's extracting a failed entity reference

[07:58:02.0000] <timeless>
manilla-screens-of-death

[07:58:03.0000] <timeless>
(with blood lettering)

[07:58:04.0000] <Kellen`>
background: there are characters that unicode doesn't contain that we need to represent

[07:58:05.0000] <timeless>
klingon? :)

[07:58:06.0000] <Kellen`>
hsivonen: ah... so it doesn't continue until it finds a semicolon

[07:58:07.0000] <hsivonen>
Tengwar?

[07:58:08.0000] <hsivonen>
Kellen`: nope

[07:59:00.0000] <Kellen`>
timeless: chemical binding symbols, a few music symbols

[07:59:01.0000] <Kellen`>
hsivonen: is there a way to configure the extract length?

[08:01:00.0000] <AryehGregor>
zcorpan, see line 241 of the source: // WebIDL tests.  TODO: Add null once the spec on that is clear.

[08:01:01.0000] <AryehGregor>
At the time I wrote the tests, it wasn't clear what the correct default behavior was for null.

[08:01:02.0000] <RobbertAtWork>
annevk: hey, thanks

[08:03:00.0000] <AryehGregor>
zcorpan, I didn't think of an object with toString at the time, since I didn't know enough ES.

[08:04:00.0000] <zcorpan>
AryehGregor: k

[08:04:01.0000] <AryehGregor>
zcorpan, it looks like everything treats null as the empty string, for both btoa and atob.

[08:04:02.0000] <hsivonen>
Kellen`: the length of the extract seem hard-coded, but it's possible to change the hard-coding

[08:04:03.0000] <Ms2ger>
We should fix that, then

[08:05:00.0000] <zcorpan>
AryehGregor: the correct behavior should be to stringify to "null"

[08:05:01.0000] <AryehGregor>
Okay, but nobody does that.

[08:05:02.0000] <zcorpan>
AryehGregor: we just changed it in opera

[08:05:03.0000] <AryehGregor>
Should we test for it anyway and file bugs against Gecko and WebKit?

[08:05:04.0000] <zcorpan>
yeah

[08:05:05.0000] <AryehGregor>
Okay.

[08:05:06.0000] <zcorpan>
thanks

[08:06:00.0000] <Kellen`>
hsivonen: okay, i might go that route. if you are already looking at the source, in what class should I look?

[08:06:01.0000] <AryehGregor>
So the current strategy is we try to convert everything to stringify null to "null" except where we have specific evidence web compat demands otherwise?

[08:06:02.0000] <hsivonen>
Kellen`: how long do the extracts need to be?

[08:06:03.0000] <Ms2ger>
Want to fix as well?

[08:06:04.0000] <hsivonen>
Kellen`: SourceCode.java, line 178

[08:06:05.0000] <Kellen`>
hsivonen: for my use-case only like 8 characters after the error-location (the &)

[08:06:06.0000] <AryehGregor>
Ms2ger, no, because it's not in my contract and so I'm not being paid for it.  I'm only being paid to do specs and tests.

[08:06:07.0000] <hsivonen>
Kellen`: ok. it's now 6

[08:06:08.0000] <Ms2ger>
CC me, then

[08:08:00.0000] <zcorpan>
doesn't window.top need to be unforgeable for flash "origin" checks to not be bogus?

[08:08:01.0000] <Ms2ger>
Hah, Flash

[08:09:00.0000] <annevk>
AryehGregor, that is the strategy yes

[08:09:01.0000] <Kellen`>
hsivonen: ok thanks. not sure i'll change it as it means having our own patches to apply to new versions

[08:10:00.0000] <hsivonen>
Kellen`: I'll change it

[08:10:01.0000] <Kellen`>
hsivonen: awesome, thanks!

[08:10:02.0000] <RobbertAtWork>
annevk: "… Welcome to another WHATWG Weekly." great intro, deserves one of those low radio voices

[08:10:03.0000] <AryehGregor>
zcorpan, do you know what the procedure is for updating approved tests?

[08:10:04.0000] <AryehGregor>
Ms2ger, done.

[08:11:00.0000] <Ms2ger>
Thanks

[08:11:01.0000] <Ms2ger>
Make the change in submissions/, and I'll review it

[08:11:02.0000] <AryehGregor>
Okay.

[08:12:00.0000] <zcorpan>
AryehGregor: no idea

[08:12:01.0000] <AryehGregor>
/me will follow Ms2ger's advice

[08:17:00.0000] <hsivonen>
do engines other than Gecko do magic sniffin on the doctype passed to createDocument to determine what kind of doc is returned?

[08:18:00.0000] <zcorpan>
i think opera might do that. possibly to comply with acid3!

[08:18:01.0000] <hsivonen>
Kellen`: landed and deployed

[08:18:02.0000] <hsivonen>
Acid3...

[08:20:00.0000] <Kellen`>
hsivonen: thanks, solves my problem for the moment. long-term it might be worth it to report things that look like entities; scan from the & until you hit a semicolon or an invalid character

[08:20:01.0000] <hsivonen>
zcorpan: I don't see Acid3 requiring that

[08:21:00.0000] <zcorpan>
hsivonen: iirc it required HTMLDocument

[08:21:01.0000] <hsivonen>
zcorpan: yeah, but that can be achieved by making all Documents HTMLDocuments

[08:22:00.0000] <timeless>
has everyone here updated their Flash?

[08:22:01.0000] <timeless>
:)

[08:22:02.0000] <zcorpan>
sure

[08:22:03.0000] <zcorpan>
opera doesn't do that yet, though

[08:23:00.0000] <hsivonen>
zcorpan: autoinstalls it and then leaves you with security holes?

[08:23:01.0000] <AryehGregor>
Ooh, nasty.

[08:23:02.0000] <hsivonen>
zcorpan: Gecko seems to even tweak the HTMLness bit depending on doctype :-(

[08:24:00.0000] <zcorpan>
dunno if opera does that

[08:28:00.0000] <annevk>
hsivonen, that DOCTYPE stuff is non-conforming per DOM4

[08:31:00.0000] <hsivonen>
annevk: did you test that Gecko is the only engine to do it? how did you decide to make it non-conforming?

[08:31:01.0000] <zewt>
annevk: the main thing I'm concerned with in that thread is whether we really want to be moving XHR's Progress Events-related weirdness into new specs

[08:31:02.0000] <AryehGregor>
Ms2ger, http://dvcs.w3.org/hg/html/rev/17c9331f8fa8

[08:32:00.0000] <AryehGregor>
Oh, lame.

[08:32:01.0000] <AryehGregor>
It gives a bad diff.

[08:32:02.0000] <AryehGregor>
I used hg cp, and hg diff showed me the diff from the source file.

[08:32:03.0000] <AryehGregor>
Oh well.

[08:32:04.0000] <AryehGregor>
You should be able to figure out the diff yourself, I guess.

[08:32:05.0000] <zewt>
i think all new APIs should follow both the invariants sicking mentioned, and the one I mentioned (never interleaving events, eg. no loadstart ... loadstart ... loadend ... loadend)

[08:33:00.0000] <zewt>
even if that means being inconsistent with XHR if it's too late to change XHR

[08:33:01.0000] <Ms2ger>
AryehGregor, yeah, W3C's hgweb doesn't get that, apparently

[08:34:00.0000] <timeless>
Ms2ger: do we need to file a bug /contact team to get hgweb updated?

[08:36:00.0000] <Ms2ger>
Would be nice

[08:37:00.0000] <zewt>
(also no dropped loadends, of course)

[08:39:00.0000] <timeless>
hrm

[08:39:01.0000] <annevk>
hsivonen, I only remember some vague discussion that it was probably that could be changed, especially in the light of all Documents implementing all interfaces

[08:40:00.0000] <timeless>
diff -c shows me the same thing as hgweb

[08:40:01.0000] <annevk>
probable*

[08:40:02.0000] <timeless>
but diff -r 310 -r 460 shows me what AryehGregor expected

[08:40:03.0000] <timeless>
so, that might not be a bug, so much as a lack of a feature to "do what i want"

[08:41:00.0000] <timeless>
it's basically "diff-follow-copies"

[08:43:00.0000] <hsivonen>
annevk: ok

[08:47:00.0000] <hsivonen>
annevk: boo. XHR2 still has a synchronous code example

[08:53:00.0000] <annevk>
hsivonen, where?

[08:55:00.0000] <hsivonen>
annevk: in Introduction

[08:55:01.0000] <annevk>
none of those is synchronous

[08:55:02.0000] <annevk>
for synchronous the third parameter of open() needs to be false

[08:56:00.0000] <hsivonen>
annevk: oh, sorry

[08:56:01.0000] <hsivonen>
annevk: confusing to have an optional parameter default to ture

[08:56:02.0000] <hsivonen>
true

[08:56:03.0000] <hsivonen>
annevk: do you have a test suite for text/html in XHR?

[08:57:00.0000] <annevk>
http://w3c-test.org/webapps/XMLHttpRequest/tests/submissions/Opera/responsetext-decoding.htm has some tests

[08:57:01.0000] <hsivonen>
annevk: thanks

[08:58:00.0000] <annevk>
hmm only one actually

[08:58:01.0000] <annevk>
but it's trivial to add more

[09:04:00.0000] <zewt>
annevk: also, I don't understand the question about open()'s readystatechange (it does get fired, but it's not a Progress Events event)

[09:06:00.0000] <annevk>
it means things are confusing

[09:07:00.0000] <zewt>
that is true :)

[09:07:01.0000] <zewt>
(but it's send() that's throwing that exception, not open(), FWIW)

[09:08:00.0000] <annevk>
?

[09:08:01.0000] <annevk>
open() never throws

[09:08:02.0000] <annevk>
send() throws, but can be terminated by invoking open()

[09:09:00.0000] <zewt>
in the FF6 case you were responding to, I mean

[09:10:00.0000] <zewt>
afk a couple

[09:11:00.0000] <annevk>
what I meant was that send() can be terminated too

[09:11:01.0000] <annevk>
so you have the same event issue there

[09:11:02.0000] <annevk>
not just with abort()

[09:20:00.0000] <zewt>
annevk: it's a bit confusing that send() says "can only be terminated ... after returned", but abort() says "terminate send()"--they seem contradictory if abort() is called during send()'s readystatechange

[09:23:00.0000] <woef>
Why is there no "not" operator in the css attribute selector spec. Performance?

[09:24:00.0000] <Ms2ger>
:not()?

[09:27:00.0000] <woef>
So .class1:not([class*=" "]) targets all elements that only contains the class "class1"?

[09:27:01.0000] <Ms2ger>
Unless you have class="   class1   ", I guess

[09:27:02.0000] <Ms2ger>
Or class="class1(tab)class2"

[09:27:03.0000] <woef>
Good point.

[09:28:00.0000] <gsnedders>
or LF

[09:28:01.0000] <annevk>
zewt, that note is non-normative right and is mostly correct...

[09:28:02.0000] <woef>
I guess yelling at some CMS guys should fix that though, if it happens.

[09:28:03.0000] <zewt>
"mostly correct" is bad, even if it's non-normative :)

[09:29:00.0000] <annevk>
yeah

[09:29:01.0000] <annevk>
should remove that note

[09:29:02.0000] <woef>
Is there any other (easier?) way to target single class instances?

[09:29:03.0000] <zewt>
it's really confusing to have algorithms terminated from outside without it going through a concrete flag or something :(

[09:31:00.0000] <annevk>
I'm not married to how it is written down now

[09:32:00.0000] <annevk>
couldn't really think of a better way

[09:32:01.0000] <Ms2ger>
I doubt such a marriage would be legal

[09:32:02.0000] <annevk>
and so far nobody really seems to care or pay attention to the spec that much...

[09:33:00.0000] <Ms2ger>
annevk, you mean, Microsoft doesn't even care enough to block it? :)

[09:33:01.0000] <annevk>
Ms2ger, per Fox News I'm sure that's feasible in the Netherlands

[09:33:02.0000] <zewt>
i'm more worried about FileAPI following it as precedent, and every progress events api in the future following suit--having mismatched and nested progress sequences really sucks

[09:33:03.0000] <woef>
( *[class="class1"] should work too I guess, and has better browser support )

[09:33:04.0000] <annevk>
Ms2ger, sure there's meta debate

[09:33:05.0000] <Ms2ger>
And there's Björn

[09:34:00.0000] <zewt>
and/or

[09:34:01.0000] <annevk>
Ms2ger, he's part of the meta debate it seems given that he's no idea what's produced

[10:14:00.0000] <AryehGregor>
Ms2ger, will you remember to review my base64 test updates, or should I also send an e-mail requesting review?

[10:16:00.0000] <Ms2ger>
I'll do it now

[10:19:00.0000] <Ms2ger>
 // WebIDL requires DOMStrings to just be converted using ECMAScript

[10:19:01.0000] <Ms2ger>
 // ToString, which amounts to calling String(), except possibly for null,

[10:19:02.0000] <Ms2ger>
 // which we don't test because it's unclear.

[10:26:00.0000] <gsnedders>
Unclear how?

[10:27:00.0000] <AryehGregor>
Ms2ger, will fix, just a minute.

[10:27:01.0000] <AryehGregor>
gsnedders, it was unclear when I wrote that.

[10:27:02.0000] <AryehGregor>
Now it's not.

[10:50:00.0000] <AryehGregor>
Ms2ger, http://dvcs.w3.org/hg/html/rev/5e92fcc9015b

[11:28:00.0000] <Hixie>
is mounir on irc?

[11:28:01.0000] <annevk>
his nick is volkmar

[11:29:00.0000] <Hixie>
volkmar: ping

[11:29:01.0000] <Hixie>
annevk: thanks

[11:29:02.0000] <volkmar>
Hixie: pong

[11:29:03.0000] <Hixie>
hey dude

[11:29:04.0000] <Hixie>
any news on http://www.w3.org/Bugs/Public/show_bug.cgi?id=12255 ? still no bugs?

[11:29:05.0000] <Hixie>
if so i'm gonna update the spec

[11:29:06.0000] <volkmar>
no bugs I'm aware of yet

[11:29:07.0000] <Hixie>
awesome

[11:29:08.0000] <volkmar>
though, it's in Firefox 7 which means yet in Beta

[11:30:00.0000] <volkmar>
we can still get bugs reported

[11:30:01.0000] <Hixie>
sure

[11:30:02.0000] <Hixie>
but it's been quite a few weeks

[11:30:03.0000] <Hixie>
so odds are pretty good

[11:30:04.0000] <volkmar>
hmm, I would not bet on that

[11:31:00.0000] <volkmar>
it's not uncommon to get some feedback about websites being broken when we release the final version

[11:31:01.0000] <Hixie>
well it's easy to change back anyway

[11:31:02.0000] <volkmar>
Hixie: yes ;)

[11:31:03.0000] <Hixie>
i just wanted to make sure it wasn't a deluge of compat issues :-)

[11:32:00.0000] <Hixie>
btw i saw your name on the <meter> and <input type=range> bugs in moz bugzilla, any news on those? i'm playing with some stuff that uses them and it's sad when it doesn't work in firefox :-(

[11:32:01.0000] <volkmar>
<meter> could have been landed some time ago

[11:32:02.0000] <volkmar>
but there is a a11y issue

[11:33:00.0000] <volkmar>
I want to fix that before landing

[11:33:01.0000] <Hixie>
oh what's the issue? anything i can help with?

[11:33:02.0000] <volkmar>
basically, <meter> implementations assume thet the color is enough to indicate if the value is bad/medium/good

[11:34:00.0000] <Hixie>
oh there's no "warning!" sound in the screen reader output?

[11:34:01.0000] <Hixie>
yeah, that's a bit problematic

[11:34:02.0000] <volkmar>
I believe the issue doesn't only (at all?) apply to screen readers

[11:34:03.0000] <volkmar>
if you have sight issues you might have a hard time to distinguish the color

[11:35:00.0000] <Hixie>
oh e.g. colour-blindness issues?

[11:35:01.0000] <Hixie>
hm, good point

[11:36:00.0000] <volkmar>
for the moment, I have a patch that adds two arrows, one for low and ane for high

[11:36:01.0000] <volkmar>
assuming the user will understand where the optimum should be with the context

[11:36:02.0000] <Hixie>
neat

[11:37:00.0000] <volkmar>
for <input type=range>, it's a high priority but we don't have anyone working on it right now

[11:40:00.0000] <Hixie>
ah

[14:49:00.0000] <annevk>
no dglazkov?

[14:49:01.0000] <annevk>
anyway, I did say trimmed

[14:56:00.0000] <AryehGregor>
Does anyone know what heuristic Chrome uses to decide whether to offer to remember a password?  It doesn't seem to want to on my gentest.html page.

[14:56:01.0000] <AryehGregor>
Oh, my username field has no name.  Maybe that's it.

[14:58:00.0000] <AryehGregor>
There, that seemed to work.

[15:40:00.0000] <AryehGregor>
Is anyone working on exposing browser implementations of things like SHA1 to JS?

[15:40:01.0000] <AryehGregor>
It's kind of annoying not to have them sometimes, and a browser implementation would be both trivial to do and ridiculously faster.

[15:41:00.0000] <Philip`>
Are JS implementations too slow to use in practice?

[15:42:00.0000] <Philip`>
(Certainly they're slower than C++, but that's not the same thing)

[15:43:00.0000] <TabAtkins>
They're plenty fast for a lot of things.  I use an md5 lib for non-secure hashing.

[15:44:00.0000] <zewt>
Philip`: there was a thread about that at one point--it's definitely too slow for some use cases, like verifying/syncing bulk data for games

[15:48:00.0000] <AryehGregor>
Philip`, I'm at least as concerned with convenience as speed.

[15:48:01.0000] <AryehGregor>
This is something where everyone has access to interoperable implementations anyway, it's just a matter of hooking them up.

[15:52:00.0000] <annacc>
any gtk experts out there mind helping me with a (probably simple) issue with GNUmakefile.list.am ?

[15:53:00.0000] <Philip`>
AryehGregor: Surely the most convenient thing would be a .js file you can drop it and that will work with perfect compatibility on all browsers with no effort

[15:53:01.0000] <AryehGregor>
Philip`, a) the long run counts too, b) I don't personally care about old browsers.

[15:53:02.0000] <AryehGregor>
The specific use-case I was thinking of only needs to run in Aurora and Chrome dev.

[15:54:00.0000] <zewt>
being able to have an async API for it would be nice, though that's an easy worker use case anyway

[15:57:00.0000] <jamesr>
crypto APIs should provide stuff like SHA1

[15:57:01.0000] <jamesr>
because authors shouldn't have to roll their own crypto. there are a ton of ways to do it wrong

[15:57:02.0000] <jamesr>
but what's the source data that you are trying to SHA1? something like a blob, or a data structure in JS?

[16:00:00.0000] <zewt>
i've wanted to get a hash of a file selected in a file input, to ask the server if it's already there; that case would want a blob, at least

[16:00:01.0000] <jamesr>
yeah i think there should be a way to say "gimme a sha1 of this (file or blob)" that doesn't require reading the entire thing into JS memory

[16:01:00.0000] <AryehGregor>
jamesr, a password, in my case.

[16:01:01.0000] <zewt>
well you definitely want an incremental API, so you can hash data of arbitrary size

[16:01:02.0000] <AryehGregor>
But it would be cool to be able to do files or blobs.

[16:01:03.0000] <zewt>
eg. the usual init/update/digest API

[16:01:04.0000] <AryehGregor>
First you want a basic API that just provides someObject.sha1().  That will cover a lot of use-cases already.

[16:02:00.0000] <AryehGregor>
But yeah, an incremental one would be handy too, why not.

[16:02:01.0000] <jamesr>
adam barth and some folks at mozilla have been looking at crypto apis

[16:02:02.0000] <zewt>
i'd start with the core API: digest.update/digest from blobs, and then see what can't be done with that

[16:03:00.0000] <zewt>
i wouldn't start with the more limited api, since you might not need that at all once you have the lower-level one

[16:03:01.0000] <zewt>
eg. if you want to hash a password, use BlobBuilder + that API

[16:04:00.0000] <AryehGregor>
So you have to use how many lines instead of one?

[16:05:00.0000] <AryehGregor>
There's no reason not to expose a convenience API for the very common case where you want to hash something that you already have fully in memory.

[16:05:01.0000] <AryehGregor>
PHP *only* exposes such a function, and I bet some of the JS libraries that implement hash functions also do.

[16:05:02.0000] <zewt>
shrug, 5-6? i don't think code golfing the narrow "get a hash of a JS string" use case is a good reason to have more APIs

[16:05:03.0000] <AryehGregor>
I think this is a case where adding a shortcut API for the common case is a no-brainer.

[16:06:00.0000] <AryehGregor>
In my experience scripting, it's vastly more common to want to hash something small than something big.

[16:06:01.0000] <zewt>
add the core api, play around with it for a while, then decide if you really need shortcut bloat

[16:06:02.0000] <zewt>
(also, see how the core api wrangles out, to see what the shortcut api would look like)

[16:08:00.0000] <AryehGregor>
It should look like someObject.sha1(s).

[16:08:01.0000] <AryehGregor>
That's what other languages expose.  I know PHP does off the top of my head.  C libraries like OpenSSL also expose such a shortcut, SHA1() in the one I used.

[16:08:02.0000] <Philip`>
How do you hash a string of 16-bit units?

[16:08:03.0000] <zewt>
i'd have a core API as eg: hash = new SHA1(); hash.update(blob); /* maybe allow hash.update(string); */ hash.digest();

[16:09:00.0000] <AryehGregor>
Python seems not to have shortcuts.

[16:09:01.0000] <zewt>
(where hash.update(string) is the shortcut API--definitely don't need a whole separate entry point)

[16:09:02.0000] <zewt>
python's hashlib works very well

[16:09:03.0000] <AryehGregor>
Philip`, . . . hmm.  Well, btoa() treats it as an array of bytes, and throws if any code unit is > 0x00ff.

[16:10:00.0000] <AryehGregor>
That's an awkward point, though.

[16:10:01.0000] <zewt>
if there's a string shortcut, i'd think the only useful thing to do would be to convert to UTF-8

[16:10:02.0000] <zewt>
since that's usually what you want

[16:10:03.0000] <Philip`>
someObject.sha1("\ud800"); // ???

[16:10:04.0000] <Philip`>
or anything else you can't represent in UTF-8

[16:11:00.0000] <zewt>
why can't you represent that in utf-8?

[16:11:01.0000] <zewt>
roundtrips fine in python

[16:13:00.0000] <zewt>
oh, python is probably storing strings as UCS-4, where that's not an incomplete codepoint

[16:14:00.0000] <Philip`>
http://unicode.org/faq/utf_bom.html#utf8-5

[16:16:00.0000] <Philip`>
The UTF-16 incompleteness matters less than that you can't represent U+D800 as a legal UTF-8 sequence

[16:16:01.0000] <zewt>
if it's actually a complete surrogate pair then it should be converted, of course; if it's a mismatched surrogate arguably it should either just convert it (so it roundtrips) or throw

[16:16:02.0000] <zewt>
(IMO, throwing to try to be as anal as unicode would like the world to be would probably be more trouble than it's worth)

[16:16:03.0000] <Philip`>
If this is meant to be used for comparing against hashes computed by servers, it seems like it ought to do as little magic as possible, else people will get confused by why hashes don't match and it will be impossible to debug

[16:17:00.0000] <zewt>
that raises a question, though: what about BlobBuilder.append? that says "writing it as UTF-8" without further elaboration

[16:17:01.0000] <AryehGregor>
The way btoa() works is at least not terribly hard to understand.

[16:17:02.0000] <AryehGregor>
Although it's a bit tricky to figure out how to convert a UTF-16 string to a form it will accept.

[16:17:03.0000] <zewt>
or rather, it raises the same question

[16:18:00.0000] <AryehGregor>
Has anyone ever pointed out that JavaScript strings are atrocities?

[16:18:01.0000] <zewt>
i'm not sure anyone has failed to point that out :P

[16:18:02.0000] <zewt>
Philip`: it's not obvious which behavior is less "magic", though

[16:18:03.0000] <Philip`>
All strings are atrocities

[16:19:00.0000] <AryehGregor>
Sigh.  Why does introducing trivial APIs always have to involve getting bogged down in details?

[16:19:01.0000] <zewt>
yeah, my python is built with UCS-4 strings, so it's not a very good comparison

[16:20:00.0000] <zewt>
AryehGregor: well, this seems like a detail that already has to be worked out; BlobBuilder opened the door here

[16:20:01.0000] <zewt>
presumably whatever that does, this API would follow suit

[16:20:02.0000] <Hixie>
AryehGregor: your definition of "trivial" is just wrong for the web ;-)

[16:21:00.0000] <zewt>
anyone want to raise the question for BlobBuilder on webapps? otherwise i'll try to get to writing a mail at some point

[16:22:00.0000] <zewt>
(mental note: don't volunteer to do something when asking if anyone else wants to do it, it's counter to the goal of not having to do it)

[16:27:00.0000] <AryehGregor>
Hixie, seems so.

[16:34:00.0000] <zewt>
why do lots of people @google always say "comments inline" on mailing lists, i'd expect people employed by google to know that's redundant, heh

[16:35:00.0000] <Hixie>
it's not just google, it seems to be anyone who uses a mail client that doesn't do threading right. Outlook, GMail, IBM's thing, etc

[16:35:01.0000] <zewt>
gmail's threading is reasonable

[16:36:00.0000] <zewt>
not as good as mutt's, but well, nothing is

[16:36:01.0000] <Hixie>
gmail encourages top-posting

[16:36:02.0000] <Hixie>
and doesn't do threading at all

[16:36:03.0000] <Hixie>
it does conversation concatenation

[16:36:04.0000] <zewt>
well yes, due to putting space at the top of the mail, but i'd expect people at google to know the bogusness of that :P

[16:37:00.0000] <zewt>
(minus whatever crackbox on the gmail team implemented that)

[16:37:01.0000] <zewt>
(yeah I know regular users don't "get" inline responses, i can still grumble)

[16:39:00.0000] <Hixie>
what drives me even more crazy is people who don't trim their quotes

[16:39:01.0000] <Hixie>
which top-posters never do

[16:39:02.0000] <zewt>
gmail encourages that, since it hides quotes

[16:39:03.0000] <Hixie>
so i end up having to waste hours of my life deleting quotes when replying to e-mails in my batch e-mails

[16:47:00.0000] <ap>
how about overquoting in Bugzilla? :)

[16:49:00.0000] <Hixie>
yeah that drives me batty too

[16:49:01.0000] <Hixie>
why do people do it?

[16:49:02.0000] <Hixie>
i mean, seriosuly

[16:49:03.0000] <Hixie>
it takes like 2 seconds to delete context one isn't replying to

[16:50:00.0000] <Philip`>
IRC seems to have a good solution to the problem of overquoting - if you quote many lines then you'll get kicked for flooding


2011-09-23
[17:07:00.0000] <TabAtkins>
If I got kicked for writing long emails, I'd have a problem.

[17:08:00.0000] <Philip`>
Think of the problems that readers would be saved from, though

[18:30:00.0000] <weinig>
Hixie: I have kind of a dumb question, but I am having trouble finding the answer in the spec

[18:30:01.0000] <weinig>
Hixie: are <script> tags in innerHTML and insertAdjacentHTML supposed to run?

[18:32:00.0000] <TabAtkins>
Pretty sure, yes.

[18:32:01.0000] <weinig>
TabAtkins: pretty sure it should run the scripts?

[18:33:00.0000] <weinig>
neither Firefox nor WebKit seem to

[18:33:01.0000] <TabAtkins>
I think so, at least.  But I could easily be wrong.

[18:33:02.0000] <TabAtkins>
And I can't point you to a yay/nay in the spec.

[18:33:03.0000] <weinig>
that is my problem :(

[18:34:00.0000] <Philip`>
/me tries to follow the behaviour of the parser-inserted flag in the spec

[18:34:01.0000] <Philip`>
/me fails

[18:34:02.0000] <Philip`>
http://www.whatwg.org/specs/web-apps/current-work/multipage/images/parsing-model-overview.svg looks weird and broken in Opera

[18:39:00.0000] <roc>
yes, looks like an Opera bug ... someone probably forgot to start a new path when drawing the marker

[18:49:00.0000] <Hixie>
wirepair: it's defined, but it's a bit subtle. The answer is no for innerHTML, and I forget for insertAdjacentHTML.

[18:49:01.0000] <Hixie>
er

[18:49:02.0000] <Hixie>
weinig: ^

[18:49:03.0000] <Hixie>
sorry wirepair

[18:49:04.0000] <weinig>
thanks

[18:50:00.0000] <weinig>
they both say similar things about inserting the document fragment into the document

[18:50:01.0000] <Hixie>
gotta go right now, but if you can't work it out and need an answer, ping me again in a bit :-)

[18:50:02.0000] <weinig>
ok, thanks

[23:41:00.0000] <hsivonen>
whoa: https://twitter.com/#!/joehewitt/status/117017829861113857

[23:42:00.0000] <hsivonen>
https://twitter.com/#!/joehewitt/status/117017571320016897

[23:43:00.0000] <Hixie>
man, i can never understand what people are saying on twitter

[23:49:00.0000] <roc>
 /on twitter/

[01:40:00.0000] <Kellen`>
hsivonen: another recommendation for validator.nu: error codes in JSON output so that users can catch and report errors consistently if the message texts change

[01:42:00.0000] <hsivonen>
Kellen`: yeah, well, that would require having the capability to propagate codes. it's currently SAX ErrorHandler-based

[01:43:00.0000] <hsivonen>
Hixie: he seems to be saying that SemWeb stuff becomes more important when browsers diminish

[01:43:01.0000] <hsivonen>
(diminish in the sense that native iOS apps take over)

[01:59:00.0000] <Kellen`>
hsivonen: okay, that makes sense. thanks

[02:17:00.0000] <Ms2ger>
"Authors should not, but may"

[02:27:00.0000] <MikeSmith>
Kellen`: fwiw, the W3C systems team has also ask for error IDs, for localization purposes

[02:27:01.0000] <MikeSmith>
I told them the same thing that hsivonen told you

[02:28:00.0000] <MikeSmith>
but they've told me they are planning on trying to add them, and contributing a patch

[02:28:01.0000] <MikeSmith>
I don't quite know how they plan to do it, but I think they have someone assigned to work on it

[02:29:00.0000] <Kellen`>
MikeSmith: you could use a properties file for all the error strings and do the localization on output from the webservice

[02:29:01.0000] <MikeSmith>
yeah

[02:29:02.0000] <Kellen`>
messy, but it'd achieve the purpose

[02:29:03.0000] <MikeSmith>
I think hsivonen discusses that approach in his thesis, actually

[02:30:00.0000] <Kellen`>
haven't read it yet, ha

[02:30:01.0000] <MikeSmith>
it's a good read

[02:30:02.0000] <MikeSmith>
http://hsivonen.iki.fi/thesis/html5-conformance-checker.xhtml

[02:30:03.0000] <MikeSmith>
though some of the code has changed considerably since the time when he wrote that

[02:31:00.0000] <MikeSmith>
for one thing, I think he wrote it before he implemented the validator.nu conforming HTML5 parser

[02:32:00.0000] <MikeSmith>
http://hsivonen.iki.fi/thesis/html5-conformance-checker.xhtml#localizability

[02:32:01.0000] <MikeSmith>
that part discusses the error messages

[02:33:00.0000] <MikeSmith>
and "reverse templating"

[02:33:01.0000] <Kellen`>
thanks, yeah that was exactly what i was thinking

[02:34:00.0000] <Kellen`>
i'm using the parser internally so the localization doesn't matter so much, but it'd be nice not to have to update my code if the messages change ever so slightly

[02:34:01.0000] <MikeSmith>
yeah

[02:46:00.0000] <zcorpan>
Ms2ger: so the spec has three different rfc2119 keywords for the same thing. "must not use foo" "should not use foo" "may use foo (and ignore other requirements)"

[04:26:00.0000] <robnyman_>
Testing out HTML5 Forms and setCustomValidity("Any message I want")

[04:26:01.0000] <robnyman_>
WHen I try to combine that check oninput with checkValidity, it is always invalid

[04:27:00.0000] <robnyman_>
Shouldn't checkValidity still resort to the built-in validation even do I use setCustomValidity?

[04:28:00.0000] <robnyman_>
An example can be seen at http://jsfiddle.net/mathias/htsLW/

[04:29:00.0000] <robnyman_>
Basically, after any input and the usage of setCustomValidity, checkValidity always returns false

[04:30:00.0000] <Rik`>
robnyman_: yes, you need to do setCustomValidity('')

[04:31:00.0000] <Rik`>
oh that's what you do

[04:32:00.0000] <robnyman_>
Rik`: Yep. I think doing my own check and setting setCustomValidity would work. But checkValidity seems broken if you use it in conjunction with setCustomValidity

[04:33:00.0000] <robnyman_>
Which really makes it harder if I have to roll my own validation algorithm just because I use setCustomValidity to have my own message in the web browser's native UI

[04:35:00.0000] <Rik`>
there's no real check in your logic here

[04:35:01.0000] <robnyman_>
In what sense?

[04:35:02.0000] <robnyman_>
It checks validity for every input

[04:37:00.0000] <Rik`>
we have the x-moz-errormessage attribute to change the messag

[04:38:00.0000] <robnyman_>
Rik`: I know, but that doesn't seem to be standardized nor do I have any other option to make it work cross browser

[04:39:00.0000] <robnyman_>
So I'm trying to figure out if setCustomValidity should cancel out checkValidity completey, or if there is something wrong in the implementations

[04:39:01.0000] <Rik`>
then we need to standardize it maybe ? :)

[04:39:02.0000] <robnyman_>
Rik`: Oh, definitely!

[04:49:00.0000] <robnyman_>
A combination of resetting setCustomValditiy on input and using setCustomValidity for the invalid event is the only way I can make it work

[04:49:01.0000] <robnyman_>
http://jsfiddle.net/SNysL/2/

[04:50:00.0000] <robnyman_>
And removing a message by an empty string, BTW - shouldn't it be another method, like removeCustomAbility?

[05:07:00.0000] <hsivonen>
does anyone happen to remember which fires first: the last progress event for XHR or the DOMContentLoaded on responseXML?

[06:34:00.0000] <zcorpan>
thanks AryehGregor for updating atob

[06:48:00.0000] <MikeSmith>
anybody know if a PHP class can have multiple constructors?

[06:48:01.0000] <MikeSmith>
with different signatures

[06:48:02.0000] <MikeSmith>
/me googles

[07:27:00.0000] <hsivonen>
is XHR Level 2 part of HTML5? :-)

[08:54:00.0000] <hober>
TabAtkins: you really should have resolved one of those as "everyone's a porc porc"

[08:55:00.0000] <hober>
TabAtkins: totally missed the humor window there :)

[09:57:00.0000] <wilhelm>
This might be of interest to some of you: http://lists.w3.org/Archives/Public/public-test-infra/2011JulSep/0031.html

[10:03:00.0000] <AryehGregor>
wilhelm, sounds awesome if people actually attend.  Do you know who else is coming?

[10:03:01.0000] <AryehGregor>
Presumably Google, if it's at Google headquarters . . .

[10:04:00.0000] <wilhelm>
AryehGregor: Yes. Google, Mozilla, Opera and Microsoft have shown interest. Pending actual signups. (c:

[10:04:01.0000] <wilhelm>
I haven't heard back from Apple.

[10:04:02.0000] <AryehGregor>
Nice.

[10:04:03.0000] <AryehGregor>
There are quite a lot of tests floating around at this point that browsers should all be running.

[10:05:00.0000] <AryehGregor>
Although this reminds me, I need to give some people a poke (and/or stab) about my reflection tests again.

[10:05:01.0000] <AryehGregor>
They seem to be moldering indefinitely in submission/.

[10:05:02.0000] <wilhelm>
TabAtkins (and possibly others - you guys need to figure that out :) will attend from Google. I have also invited Simon Stewart separately (Google too, but from the WebDriver project).

[10:06:00.0000] <AryehGregor>
/me isn't really part of "you guys" when it comes to Google

[10:06:01.0000] <AryehGregor>
/me justs happens to receive money from them for some reason

[10:06:02.0000] <wilhelm>
Yes. And I know several browser vendors, Opera included, have large numbers of unreleased tests.

[10:06:03.0000] <wilhelm>
They should be released, in formats all the other browser vendors can use. (c:

[10:06:04.0000] <AryehGregor>
Well, it can't be "several" when there are only two notable browser vendors whose rendering engines are closed-source.

[10:07:00.0000] <AryehGregor>
I somehow doubt Mozilla or anyone from WebKit has many secret tests.

[10:07:01.0000] <AryehGregor>
They have lots that other browsers can't straightforwardly use as it stands, though.

[10:07:02.0000] <gsnedders>
AryehGregor: Apple do, certainly.

[10:07:03.0000] <AryehGregor>
Really?  For testing the rendering engine and not just the browser UI and such?

[10:08:00.0000] <wilhelm>
Eh, yes, that could have been phrased better. Not all the publicly available tests have been submitted to working groups, using sensible frameworks and formats. (c:

[10:08:01.0000] <gsnedders>
For testing the rendering engine. They can't have copies of Gmail and the like publicly, for example.

[10:08:02.0000] <AryehGregor>
Like, tests that are going to fail when people do WebKit checkins but the people who do the checkin won't notice for who knows how long because the WebKit buildbots don't run the tests?

[10:09:00.0000] <gsnedders>
AryehGregor: Potentionally yes.

[10:09:01.0000] <AryehGregor>
I thought copies of things like Gmail are useless because they change way too rapidly and are way too complicated, so that you're best off just waiting for user reports.

[10:10:00.0000] <AryehGregor>
I guess user reports aren't as helpful when you have a Safari-style release schedule instead of a Chrome/Firefox schedule with bajillions of beta testers.

[10:10:01.0000] <gsnedders>
AryehGregor: Whether it's for performance testing or regression testing is a good question, but they certainly have copies of major sites and the like.

[10:10:02.0000] <AryehGregor>
Interesting.

[10:10:03.0000] <AryehGregor>
Not really relevant to standards, though.

[10:10:04.0000] <gsnedders>
No, but who knows what other tests they have privately/

[10:10:05.0000] <gsnedders>
*?

[10:12:00.0000] <gsnedders>
AryehGregor: But yeah, the more serious point is the majority of tests vendors have isn't really in any form useful to any other vendor.

[10:12:01.0000] <wilhelm>
Also, tests requring some sort of user interaction is an unsolved problem. I think every browser vendor is doing something slightly different, if they are automating such things at all.

[10:16:00.0000] <AryehGregor>
Yeah, I could really use that for my editing tests.

[10:17:00.0000] <wilhelm>
I think some mutation of WebDriver is the solution. Which is why I've invited Simon Stewart (and why the basic WebDriver API will be specced and standarized in the tools WG).

[10:18:00.0000] <AryehGregor>
Makes sense.

[10:19:00.0000] <wilhelm>
We use the Watir API at Opera (which is built on top of the more verbose WebDriver API).

[10:19:01.0000] <gsnedders>
AIUI Google are using WebDriver too for Chrome

[10:21:00.0000] <wilhelm>
Yep, with a slightly different flavour. (c:

[10:26:00.0000] <gsnedders>
Python bindings?

[10:28:00.0000] <wilhelm>
I've been told Mozilla uses the Python bindings.

[10:29:00.0000] <gsnedders>
Don't they all work with each other, if only by the remote protocol?

[10:32:00.0000] <wilhelm>
They do. But it would be nice to have a test suite in one language, not part Java, part Ruby, part Python, part .NET. (c:

[10:33:00.0000] <gsnedders>
Well, yes :)

[10:33:01.0000] <AryehGregor>
Surely we'd want it all JavaScript.

[10:33:02.0000] <wilhelm>
927? :P

[10:36:00.0000] <gsnedders>
AryehGregor: When nobody uses that today?

[10:37:00.0000] <AryehGregor>
gsnedders, nobody but Opera uses the W3C test formats at all today, that I'm aware of.

[10:37:01.0000] <gsnedders>
AryehGregor: And would require a different WebDriver impl for each JS engine, if people cared about that?

[10:37:02.0000] <AryehGregor>
Isn't WebDriver something people want to implement in browsers anyway?  Or am I confusing it with something else?

[10:37:03.0000] <gsnedders>
AryehGregor: I believe WebKit run some.

[10:37:04.0000] <AryehGregor>
Oh, I am.

[10:37:05.0000] <gsnedders>
AryehGregor: You need something to control the web browser, and something that exposes an API to control it with.

[10:37:06.0000] <Philip`>
/me thinks standardising on languages sounds like a pretty futile exercise, since everyone has their own favourites and not enough motivation to use a different one

[10:38:00.0000] <AryehGregor>
We need to use JS for the tests anyway.  We should avoid using any other language if it's not strictly necessary.

[10:38:01.0000] <wilhelm>
That something that controls the browser must be outside the browser.

[10:38:02.0000] <Philip`>
(Better to design a system that can cope with diversity, rather than trying to get rid of all diversity)

[10:38:03.0000] <AryehGregor>
Yeah, granted.

[10:38:04.0000] <AryehGregor>
I was thinking WebDriver was something else.

[10:38:05.0000] <AryehGregor>
Philip`, diversity is bad if you expect the same people to maintain all the code.

[10:39:00.0000] <gsnedders>
AryehGregor: But what JS engine? What host object API do you use to impl the code to control the browser?

[10:39:01.0000] <AryehGregor>
I know that MediaWiki has a small part (texvc) written in OCaml that's bitrotted for years because the only language all the devs know is PHP.

[10:39:02.0000] <AryehGregor>
gsnedders, it shouldn't matter, right?  JS is standard!  :)

[10:39:03.0000] <gsnedders>
AryehGregor: How could you communicate with a browser through JS, though?

[10:40:00.0000] <wilhelm>
gsnedders: Actually, if someone did write JS bindings for WebDriver, it would magically work in all browsers.

[10:40:01.0000] <gsnedders>
wilhelm: Using the remote API?

[10:40:02.0000] <Philip`>
AryehGregor: If it's meant to integrate with browser developers' testing systems (getting tests from them and giving other tests to them), then the relevant people are not all the same people

[10:40:03.0000] <wilhelm>
gsnedders: By simply mapping the JS function calls to the WebDriver API calls.

[10:41:00.0000] <wilhelm>
All the business logic is one level below.

[10:41:01.0000] <Philip`>
OCaml is unusually obscure compared to PHP/Python/Perl/Ruby/JS/etc

[10:41:02.0000] <gsnedders>
wilhelm: But how would it call the WebDriver API?

[10:41:03.0000] <wilhelm>
If someone would be willing to make that investment, this might be a possible solution.

[10:42:00.0000] <wilhelm>
gsnedders: Eh. Andreas would know. (c:

[10:42:01.0000] <wilhelm>
/me is a dump user in this particular case.

[10:42:02.0000] <wilhelm>
eh, dumb

[10:42:03.0000] <gsnedders>
wilhelm: I mean, the only way I can think is to use the remote API, hence communicating over HTTP.

[10:42:04.0000] <wilhelm>
Yes, I think that's what the different bindings use.

[10:42:05.0000] <AryehGregor>
I should clarify that the tests themselves should be entirely in JS.

[10:43:00.0000] <AryehGregor>
If there's some browser- and/or OS-specific framework that's not in JS that only a few people have to understand, that's okay.

[10:44:00.0000] <gsnedders>
AryehGregor: Running in each browser in some privilaged mode?

[10:44:01.0000] <gsnedders>
The aim of the WebDriver approach is to run tests in the normal executation mode.

[10:45:00.0000] <gsnedders>
If you want to use WebDriver within JS, it may as well be from a JS shell, which means managing to implement WebDriver host objects.

[10:45:01.0000] <gsnedders>
/me is most unclear what people are proposing here

[10:45:02.0000] <ryanmunger>
hi all

[10:45:03.0000] <ryanmunger>
found our about this room by reading jeremy keith's masterpiece "HTML5 for web designers"

[10:46:00.0000] <AryehGregor>
You've caught us.

[10:46:01.0000] <AryehGregor>
This is where we all lurk and conspire.

[10:46:02.0000] <AryehGregor>
Hi.

[10:46:03.0000] <ryanmunger>
excellent!

[10:47:00.0000] <jarib>
wilhelm, gsnedders: there has been some work on a pure JS WebDriver http://selenium.googlecode.com/svn/trunk/javascript/webdriver-jsapi/

[10:47:01.0000] <ryanmunger>
i am excited to start using the new strucrural elements, as well as microformats!

[10:47:02.0000] <jarib>
not sure how it works exactly

[10:48:00.0000] <ryanmunger>
the only thing that is strange about html5 is the fact that we can have like 10 <h1> tags on the same page

[10:48:01.0000] <ryanmunger>
how does google and other search engines view that at the moment?

[10:48:02.0000] <jarib>
but a JS client could potentially use the existing wire protocol (which is JSON/HTTP)

[10:49:00.0000] <wilhelm>
jarib: Interesting. Is the project alive?

[10:50:00.0000] <jarib>
wilhelm: the dev doing most of the work has been out for a while due to an injury, so not at the moment.

[10:51:00.0000] <gsnedders>
jarib: Right, that's what I was guessing. So it could run in one browser and potentionally control another.

[10:51:01.0000] <jarib>
yep

[10:52:00.0000] <gsnedders>
Would likely require XHR2, though, as to communicate with the wire protocol

[10:53:00.0000] <wilhelm>
Running it in a second browser would be suboptimal for completely automated testing, though.

[10:54:00.0000] <gsnedders>
Yes. Though it'd be interesting to see how running it in the same browser would affect testing.

[10:54:01.0000] <wilhelm>
“Interesting”. (c:

[10:55:00.0000] <gsnedders>
"Well, I hope it won't crash and burn."

[10:56:00.0000] <AryehGregor>
ryanmunger, mostly here we're excited about the boring matter of writing standards and tests clear enough that browsers actually interoperate in practice.  What search engines do is something that a) probably we don't know, and b) we don't care about so much.

[10:57:00.0000] <ryanmunger>
gotcha

[10:57:01.0000] <AryehGregor>
Nearly all the active people here are either browser implementers, or spec and/or test writers.

[10:57:02.0000] <AryehGregor>
Search engines not so much.

[10:58:00.0000] <AryehGregor>
They use nonstandard heuristics, generally, so not our lookout.  We define theoretical semantics and they'll probably support it if they see enough authors using it.

[10:58:01.0000] <ryanmunger>
wthank you for the clarification

[10:58:02.0000] <ryanmunger>
i will do my best to keep up

[10:58:03.0000] <AryehGregor>
Except they'll probably support some variant that better reflects what people actually use, and not follow the standard.

[10:58:04.0000] <AryehGregor>
So whatever.

[10:58:05.0000] <ryanmunger>
which follows the whole "pave the cowpaths" model, right?

[10:59:00.0000] <AryehGregor>
Something like that, yeah.

[10:59:01.0000] <wilhelm>
It predates any formal model, but yes. (c:

[10:59:02.0000] <AryehGregor>
Although in our case we try to pave them, search engines are maybe more likely to just use them as-is.

[10:59:03.0000] <ryanmunger>
i guess a healthy medium of "formal model" and "using what is already being used" would be a good approach...

[10:59:04.0000] <AryehGregor>
We try to adapt existing browser behavior to be sane enough that we can standardize it without crying ourselves to sleep at night.

[11:00:00.0000] <ryanmunger>
:)

[11:00:01.0000] <AryehGregor>
As opposed to matching it exactly.

[11:00:02.0000] <AryehGregor>
(except when we have to)

[11:00:03.0000] <ryanmunger>
exciting

[11:00:04.0000] <wilhelm>
There's a lot of the crying-ourselves-to-sleep.

[11:00:05.0000] <wilhelm>
I suppose that too can be exciting. :P

[11:00:06.0000] <ryanmunger>
well, this is a little off topic, but someone needs to tell firefox to find a better way to update their browser

[11:01:00.0000] <ryanmunger>
since everytime i do, it breaks every plugin i have installed

[11:01:01.0000] <AryehGregor>
Yeah, I think they know that.

[11:01:02.0000] <AryehGregor>
They're kind of trapped by the fact that they're adopting this rapid-release thing so late in the game.

[11:01:03.0000] <ryanmunger>
i can see them using the "update it behind the scenes" model that chrome uses

[11:01:04.0000] <AryehGregor>
Chrome did it from day one and so they made sure their extension APIs were stable.

[11:01:05.0000] <ryanmunger>
yeah

[11:01:06.0000] <ryanmunger>
does anyone develop in chrome, here?

[11:01:07.0000] <AryehGregor>
Firefox has way deeper extension APIs, so they can't keep them stable, so extensions have to sometimes break on release.

[11:01:08.0000] <ryanmunger>
i am thinking about making that jump

[11:02:00.0000] <AryehGregor>
There are a few Chrome developers who hang out here, yeah.

[11:02:01.0000] <ryanmunger>
i am more of a 60% designer, 40% front end dev

[11:02:02.0000] <AryehGregor>
We've got at least one or two regular visitors from every major browser except IE.

[11:02:03.0000] <ryanmunger>
sounds like firefox needs to standardize their plugins?

[11:02:04.0000] <AryehGregor>
They can't without breaking all of them for good.

[11:03:00.0000] <AryehGregor>
They're trying to get people to move to Jetpacks, which are more like Chrome extensions and won't break on upgrade (hopefully).

[11:03:01.0000] <AryehGregor>
And also can be installed without a browser restart, I think.

[11:03:02.0000] <AryehGregor>
Anyway, that's something they know about and are thinking about, yeah.

[11:03:03.0000] <ryanmunger>
it will be interesting to see what the future holds in terms of making firefox  plugins future proof

[11:04:00.0000] <ryanmunger>
i feel like it's the wordpress days, when you would update wordpress and your entire site would break

[11:04:01.0000] <AryehGregor>
Extensions are also holding back Firefox from moving to a multi-process model.

[11:04:02.0000] <ryanmunger>
i do like that about chrome, as well

[11:04:03.0000] <ryanmunger>
the mpm

[11:04:04.0000] <AryehGregor>
("extensions" and "plugins" are different things for non-IE browsers, by the way -- plugins are things like Flash or Java that use the NPAPI and work cross-browser, extensions are browser-specific)

[11:05:00.0000] <ryanmunger>
my bad :)

[11:05:01.0000] <ryanmunger>
still learning the nomen clature

[11:06:00.0000] <ryanmunger>
all right. time to get back to work. i will be here absorbing a lot of the chatter going on in here

[11:06:01.0000] <ryanmunger>
thanks for clarifying some things

[11:08:00.0000] <Philip`>
/me hopes ryanmunger is sufficiently absorbent and won't overflow with the chatter

[11:09:00.0000] <ryanmunger>
well, i definitely feel like the dumbest guy in the room :)

[11:09:01.0000] <ryanmunger>
but i hope to change that by just taking it all in

[11:09:02.0000] <AryehGregor>
That's how most of us started.

[11:09:03.0000] <ryanmunger>
is there a fair share of front end devs in here?

[11:10:00.0000] <AryehGregor>
No, basically none.

[11:10:01.0000] <AryehGregor>
Some of us have experience as front-end devs, though.

[11:10:02.0000] <Philip`>
You could read the last million lines of chat log to catch up with where we are now, if you want

[11:10:03.0000] <ryanmunger>
lol

[11:10:04.0000] <AryehGregor>
Well, I guess Philip` is primarily a front-end dev of some kind.

[11:10:05.0000] <AryehGregor>
I'm a MediaWiki developer, but have been inactive in that for a year or two, since I moved mostly to standards stuff.

[11:10:06.0000] <Philip`>
I'm not a dev at all :-)

[11:11:00.0000] <AryehGregor>
What are you?

[11:11:01.0000] <AryehGregor>
I'm curious.

[11:11:02.0000] <zewt>
educated guess: human male

[11:11:03.0000] <Philip`>
An almost-ex PhD student, I suppose

[11:11:04.0000] <ryanmunger>
what is anyone in this industry anymore? ;D

[11:11:05.0000] <ryanmunger>
font end user experience standards based designer with an emphasis in usability?

[11:11:06.0000] <ryanmunger>
:)

[11:12:00.0000] <ryanmunger>
the terms get so crazy

[11:12:01.0000] <AryehGregor>
Are you writing a dissertation in anthropology on the social structure of web standards development, or do you have some personal involvement in the web?

[11:12:02.0000] <ryanmunger>
"we're all designers"

[11:12:03.0000] <AryehGregor>
. . . Other than as a user.

[11:14:00.0000] <Philip`>
It's not about anything web-related (it's a few layers further down the stack); I just got involved in HTML5 stuff a while ago since canvas was fun but broken, and then hung around for no particular reason

[11:15:00.0000] <AryehGregor>
Makes sense.

[11:15:01.0000] <ryanmunger>
ah, canvas

[11:15:02.0000] <AryehGregor>
You've mentioned something about game development, no?

[11:15:03.0000] <ryanmunger>
that thing that adobe will use to create their browser based version of photoshop in the next 10 years :)

[11:15:04.0000] <zewt>
i'd put money against that :P

[11:15:05.0000] <zewt>
(for a real value of "photoshop" and not "HalfBakedWebPhotoshop")

[11:16:00.0000] <ryanmunger>
do you think canvas is capable of something like that, though?

[11:16:01.0000] <Philip`>
AryehGregor: That's another hobby which I started a while ago and then failed to give up on :-)

[11:16:02.0000] <ryanmunger>
some open source version that will blow photoshop out of the water?

[11:16:03.0000] <wilhelm>
ryanmunger: I'll be a front end dev in … two and a half months! :P

[11:16:04.0000] <AryehGregor>
ryanmunger, if you're sufficiently masochistic, the current web platform is enough to write an OS from scratch.

[11:16:05.0000] <ryanmunger>
(that is NOT GIMP)

[11:16:06.0000] <AryehGregor>
Which people have more or less done.

[11:16:07.0000] <wilhelm>
After seven years on the Other Side.

[11:17:00.0000] <ryanmunger>
awesome, wilhelm

[11:17:01.0000] <AryehGregor>
By writing JS VMs and such.

[11:17:02.0000] <Philip`>
/me supposes he needs to figure out what to do in real life, after finishing PhDing

[11:17:03.0000] <zewt>
it's capable of pieces of it (the webgl side of "canvas", anyway, not so much the 2d side), but i have my doubts of web app APIs will ever fully displace native ones

[11:17:04.0000] <ryanmunger>
html, css and javascript seem like a pretty powerful combo right now

[11:17:05.0000] <zewt>
but i'll help as I can to get them to come as close as possible :P

[11:18:00.0000] <ryanmunger>
maybe in 1996 people thought it would be impossible to drag a map around in your web browser?

[11:18:01.0000] <zewt>
ryanmunger: here's a random piece https://zewt.org/curves :P

[11:18:02.0000] <zewt>
("url" won't work anymore; need to load a local file)

[11:19:00.0000] <Philip`>
ryanmunger: There was probably a Java applet that could drag maps :-)

[11:19:01.0000] <Philip`>
(and that would take thirty seconds to start up and would randomly hang your browser)

[11:19:02.0000] <ryanmunger>
okay..."plug in free"

[11:20:00.0000] <zewt>
in 1996 we didn't have enough experience with the web to make any kind of meaningful predictions :P

[11:20:01.0000] <ryanmunger>
hha

[11:20:02.0000] <zewt>
now we have quite a bit of experience

[11:20:03.0000] <ryanmunger>
too busy using the <blink> tag

[11:21:00.0000] <zewt>
https://zewt.org/~glenn/gross.html

[11:22:00.0000] <ryanmunger>
lol

[11:22:01.0000] <ryanmunger>
love it

[11:22:02.0000] <ryanmunger>
love that snippet of js you wrote

[11:22:03.0000] <zewt>
the revival of blink, not so much? heh

[11:23:00.0000] <zewt>
i did name it appropriately

[11:23:01.0000] <zewt>
gross.

[11:23:02.0000] <ryanmunger>
:D

[11:23:03.0000] <ryanmunger>
blunk

[11:23:04.0000] <ryanmunger>
i'm trying to get a real hold on microformats today

[11:23:05.0000] <ryanmunger>
def exciting stuff

[11:31:00.0000] <AryehGregor>
zewt, web APIs will never fully displace native ones in the same sense as scripting will never fully displace C, and for that matter C will never fully displace assembly.  It's plausible that at some point, most programmers will only really know web APIs.

[11:32:00.0000] <AryehGregor>
/me never realized that <style> had a .disabled IDL attribute, dang

[11:32:01.0000] <AryehGregor>
/me has some code where he inserts and removes /* */ using regex :(

[11:32:02.0000] <AryehGregor>
zewt, also, you can probably do that declaratively these days with CSS animations!

[11:41:00.0000] <zewt>
AryehGregor: not really the right analogy

[11:41:01.0000] <zewt>
scripting won't displace C because it'll never be as fast as C; the reasons web apis won't display native APIs are different

[11:41:02.0000] <zewt>
(that's one of them, to be sure, but not the biggest)

[11:42:00.0000] <AryehGregor>
C to assembly is a better analogy.  Assembly will never disappear because there are some things C can't do, but you'll only find it used for niche things.

[11:42:01.0000] <AryehGregor>
Web APIs can be as fast as native ones with NaCl.

[11:43:00.0000] <AryehGregor>
If the Chrome OS concept takes off, which I suspect it will as web APIs become more powerful, then most developers won't be able to develop for anything but the web platform, if they want to target devices like Chrome OS.

[11:43:01.0000] <zewt>
the need for web apis to be cross-platform (meaning, in most cases, lowest-common-denominator), and the need in most cases for them to be safe enough to run untrusted code on (this at least could be improved, and hopefully will)

[11:43:02.0000] <gsnedders>
AryehGregor: That depends how much Google tries to standardize it's platform

[11:43:03.0000] <gsnedders>
zewt: Also, stuff like LuaJIT2 gets pretty impressive performance

[11:43:04.0000] <gsnedders>
In general not as quick as C, but not massively far off

[11:44:00.0000] <gsnedders>
(How you deal with SSE and the like from a high-level langauge is a good question, though)

[11:44:01.0000] <zewt>
"not far off" for JIT tends to mean things like "only four times slower"

[11:44:02.0000] <zewt>
well, SSE is even hard in C, which is why most native-code developers still drop to assembly for it

[11:45:00.0000] <gsnedders>
zewt: pure maths stuff it's quicker than C for, often

[11:45:01.0000] <zewt>
(intrinsics, even when they work, are still inherently platform-specific)

[11:45:02.0000] <gsnedders>
Which JS has little hope of reaching.

[11:45:03.0000] <zewt>
(intrinsically platform-specific? heh)

[11:45:04.0000] <gsnedders>
(with the single int/double type, and overflow checks it needs, etc)

[11:46:00.0000] <zewt>
but performance is only a part of the equation; i was thinking in terms of APIs

[12:11:00.0000] <AryehGregor>
jgraham, my reflection tests are still broken and I don't know why.  It must have been a change in testharness.js, because I never changed the tests themselves without testing the change.  See, e.g., http://aryeh.name/tests-root/tests/submission/AryehGregor/reflection/reflection-forms.html

[12:16:00.0000] <AryehGregor>
Or the w3.org URL if you like: http://dvcs.w3.org/hg/html/raw-file/tip/tests/submission/AryehGregor/reflection/reflection-forms.html

[12:16:01.0000] <AryehGregor>
The tests seem to run, but they don't output.

[12:17:00.0000] <AryehGregor>
Wait, now it seems to work?

[12:17:01.0000] <AryehGregor>
Hmm . . .

[12:18:00.0000] <AryehGregor>
This is what breaks it: document.body.innerHTML += "something";

[12:19:00.0000] <AryehGregor>
Not sure why that would do it, but it's obviously bad for perf and such anyway.

[12:19:01.0000] <AryehGregor>
Hmm, maybe because it causes an expected element to vanish.

[12:23:00.0000] <AryehGregor>
jgraham, okay, I fixed it, never mind.

[12:23:01.0000] <AryehGregor>
Is there some place I can file bugs about testharness, though?

[12:28:00.0000] <AryehGregor>
. . . I'm pretty sure this template stuff is responsible for massive slowdowns in rendering the test output.

[12:29:00.0000] <AryehGregor>
IMO, you should just use string concatenation to make the HTML for the output table and assign it all to the table at once.

[12:29:01.0000] <AryehGregor>
/me experiments with that

[12:41:00.0000] <TabAtkins>
AryehGregor: I have significant experience as a front-end dev, though I'm now mostly a spec author.

[12:41:01.0000] <AryehGregor>
TabAtkins, right, I thought of you when I said that.

[12:41:02.0000] <TabAtkins>
Ah, kk.

[12:41:03.0000] <AryehGregor>
But you don't currently work as a front-end author.

[12:42:00.0000] <TabAtkins>
/me misses a lot of conversation in the mornings now that he works from home until lunch.

[12:42:01.0000] <TabAtkins>
True.

[12:42:02.0000] <TabAtkins>
hober: Oh man, you're right.  There's still time!

[12:49:00.0000] <AryehGregor>
jgraham, this patch makes my one-page reflection tests in your framework take about five minutes to run in Firefox instead of eight: http://pastebin.com/kbfWk6RH

[12:49:01.0000] <AryehGregor>
If you don't count blank lines and comments, it removes three lines of code net.

[12:50:00.0000] <AryehGregor>
And uses only basic DOM stuff instead of templates, so it's much easier to understand.

[12:50:01.0000] <AryehGregor>
Can I push it?  :)

[12:52:00.0000] <AryehGregor>
Hmm, it seems to make no difference to Chrome.

[12:52:01.0000] <AryehGregor>
/me isn't 100% sure about his Firefox results' validity, but thinks it's worth it just based on code simplicity

[13:00:00.0000] <TabAtkins>
...I just not realized there was actually a man named "Haskell Curry".

[13:00:01.0000] <TabAtkins>
That feels like finding someone named "Javascript Memoize".

[13:00:02.0000] <jgraham>
TabAtkins: You previously did realise?

[13:00:03.0000] <TabAtkins>
s/not/now/, pedant.

[13:01:00.0000] <jgraham>
AryehGregor: (reading backscroll)

[13:12:00.0000] <jgraham>
TabAtkins: Given form, I'm surprised no one at Opera has named their kids Haskell yet (as far as I know)

[13:17:00.0000] <jgraham>
AryehGregor: I am not a big fan of random escape_html functions with weird edge cases living in the middle of the code

[13:17:01.0000] <jgraham>
It feels too much like bad experiences with PHP

[13:18:00.0000] <AryehGregor>
jgraham, granted.  What do you suggest instead?

[13:18:01.0000] <AryehGregor>
Do you have a problem with the general idea?

[13:19:00.0000] <jgraham>
Well it would be interesting to know what is slow. Maybe the templating stuff can stay (although I grant that it is complex) but can build a string for innerHTML rather than doing DOM operations

[13:20:00.0000] <AryehGregor>
What use is the templating stuff?  It just adds complexity.  It's not like it makes the code any shorter.

[13:22:00.0000] <jgraham>
Well I think it is shorter than doing all the DOM operations by hand would be. Or at least less complex

[13:22:01.0000] <AryehGregor>
It's longer in this case.

[13:22:02.0000] <AryehGregor>
Look at the diffstat, then count the added/removed lines that are blank or comments.

[13:23:00.0000] <AryehGregor>
That's even including the addition of my escape_html function.

[13:23:01.0000] <jgraham>
Well yeah, but you're not doing dom operations, you're doing unsafe string manipulation

[13:23:02.0000] <AryehGregor>
That's the point, yes.  It's much faster for large inputs.  Also, why do you say "unsafe"?

[13:24:00.0000] <AryehGregor>
I mean, clearly they're unsafe if misused, but in this case it's pretty easy to see that it's safe (I think).

[13:24:01.0000] <AryehGregor>
Also, it's not like we're super-worried here about XSS in the test cases.

[13:25:00.0000] <jgraham>
Well yeah, but the point is that in general it's not safe

[13:25:01.0000] <jgraham>
No, I'm not worried about XSS

[13:25:02.0000] <AryehGregor>
It is if you escape properly.

[13:25:03.0000] <AryehGregor>
It's also much, much shorter and easier to understand.

[13:25:04.0000] <jgraham>
But it is tiresome if we start getting issues where adding the wrong kind of character to the test name causes weird brokenness

[13:25:05.0000] <AryehGregor>
And I strongly suspect it's faster, at least in Gecko, although I didn't do multiple runs to verify.

[13:26:00.0000] <jgraham>
Which I have seen in similar systems

[13:26:01.0000] <jgraham>
I can easily believe that it is faster

[13:26:02.0000] <AryehGregor>
Faster is a big issue when you have tens of thousands of tests on a page.

[13:26:03.0000] <AryehGregor>
Most of the time is spent rendering the results, not running the actual tests.

[13:26:04.0000] <AryehGregor>
That's bad.

[13:27:00.0000] <jgraham>
Yes, I can see that is a problem. Having tens of thousands of tests on a page wasn't a design goal

[13:27:01.0000] <AryehGregor>
Well, in Firefox that's true.  Chrome seems to spend most of the time running them, but still an appreciable amount of time rendering them.

[13:27:02.0000] <jgraham>
s/Having/Supporting/

[13:27:03.0000] <jgraham>
So it's not supported well

[13:29:00.0000] <AryehGregor>
I guess it might make sense for me to just split the tests up as much as necessary.

[13:34:00.0000] <jgraham>
I also had to change a bunch of createElements to createElementNS to keep the SVG people happy. Possibly innerHTML would upset them (although I don't recall the exact problem we were trying to solve)

[13:38:00.0000] <shepazu>
jgraham: what would upset the SVG people about innerHTML (besides the unfortunate name)?

[13:49:00.0000] <AryehGregor>
It occurs to me that if we tested all of HTML5 at the same level of depth I like to write tests, the full test suite would take weeks to run.

[13:49:01.0000] <AryehGregor>
Oh well.

[13:49:02.0000] <jgraham>
shepazu: Depending on it in testharness.js given that it doesn't work on SVG elements yet

[13:49:03.0000] <AryehGregor>
It should parallelize nicely.

[13:49:04.0000] <jgraham>
AryehGregor: ACID4!

[13:49:05.0000] <jgraham>
It will require proper dedication to get a result ;)

[13:49:06.0000] <AryehGregor>
We should make ACID4 be a giant comprehensive test suite that takes weeks to run?

[13:49:07.0000] <AryehGregor>
Sounds good to me.

[13:49:08.0000] <jgraham>
Yeah :)

[13:51:00.0000] <Hixie>
heh

[13:57:00.0000] <shepazu>
jgraham: what would need to happen for innerHTML to work on SVG?

[13:57:01.0000] <jgraham>
shepazu: Not much.

[13:58:00.0000] <jgraham>
shepazu: I think it is in DOM4 already. Implementations just need to actually implement it

[13:58:01.0000] <jgraham>
But it's not really that hard since they already do it for (X)HTML

[14:05:00.0000] <jamesr>
AryehGregor: parallelization of tests is very handy, although basically impossible to do in a browser-based harness

[14:06:00.0000] <AryehGregor>
jamesr, why isn't it trivial in a browser-based harness?

[14:06:01.0000] <AryehGregor>
If you have separate test pages.

[14:06:02.0000] <AryehGregor>
Just parallelize across the pages.

[14:06:03.0000] <mkanat>
AryehGregor: Imagine you have a million tests.

[14:06:04.0000] <mkanat>
AryehGregor: And you want to run 300 at once.

[14:06:05.0000] <jamesr>
maybe you could open up a test run page in a bunch of (isolated) tabs and have some central broker shard the tests out

[14:07:00.0000] <AryehGregor>
Sure.

[14:07:01.0000] <mkanat>
jamesr: Like with postMessage?

[14:07:02.0000] <jgraham>
Why not just use multiple browser instances

[14:07:03.0000] <jgraham>
On multiple physical machines

[14:07:04.0000] <mkanat>
jgraham: That would be even better, then you'd run out of RAM after opening just three.

[14:07:05.0000] <AryehGregor>
Or do it by some unit (e.g., directory) that's large enough that you can just spawn a new tab for each one without load balancing.

[14:07:06.0000] <mkanat>
jgraham: That would indeed solve the problem, physical machines.

[14:07:07.0000] <mkanat>
jgraham: And it was my original thought as well.

[14:08:00.0000] <jgraham>
If the tests are anything like efficient you can't parallelise well in one browser instance simply because you quickly use up all the avaliable CPU

[14:08:01.0000] <jgraham>
Also working out what happened when something crashes becomes tricky

[14:08:02.0000] <mkanat>
jgraham: Well, not all browser tests would be CPU-intensive.

[14:09:00.0000] <AryehGregor>
Almost all will be.

[14:09:01.0000] <AryehGregor>
I mean, they don't *have* to be.

[14:09:02.0000] <jamesr>
what else would they be?

[14:09:03.0000] <mkanat>
jamesr: GPU, RAM.

[14:09:04.0000] <jgraham>
GPU sure

[14:09:05.0000] <mkanat>
jamesr: And some few (storage) would be I/O bound.

[14:09:06.0000] <jgraham>
RAM not so much

[14:09:07.0000] <jamesr>
memory-bound is the same as cpu-bound

[14:09:08.0000] <jamesr>
if you're really blocked on memory bandwidth

[14:09:09.0000] <mkanat>
jamesr: Memory-speed bound, sure.

[14:09:10.0000] <AryehGregor>
You could conceivably have tests that require large delays to be inserted for some reason.

[14:10:00.0000] <jamesr>
storage tests shouldn't be I/O bound unless the implementation is pretty bad

[14:10:01.0000] <AryehGregor>
Or I/O, yeah, or GPU.

[14:10:02.0000] <mkanat>
jamesr: No, I do agree with you that in my imaginary world, most HTML tests are CPU-bound.

[14:10:03.0000] <jgraham>
Tests that require large delays are not uncommon

[14:10:04.0000] <mkanat>
AryehGregor: setTimeout.

[14:10:05.0000] <jgraham>
If you are testing networking code, for example

[14:10:06.0000] <mkanat>
AryehGregor: I mean, that test would involve a delay.

[14:10:07.0000] <jamesr>
network bound is reasonable

[14:10:08.0000] <AryehGregor>
Yes, but that's a tiny minority of tests.

[14:10:09.0000] <jgraham>
But anyway, parallelising across multiple browsers makes all of this rather easy to deal with

[14:10:10.0000] <AryehGregor>
I mean setTimeout.

[14:10:11.0000] <mkanat>
Well, but if you were testing network code, I'd probably test against localhost.

[14:10:12.0000] <AryehGregor>
Network, maybe not.

[14:10:13.0000] <mkanat>
AryehGregor: Yeah, agreed that it's a small minority.

[14:11:00.0000] <AryehGregor>
But who cares?  Just spawn significantly more instances than you have CPUs.

[14:11:01.0000] <mkanat>
jgraham: Agreed.

[14:11:02.0000] <AryehGregor>
Let the OS scheduler work it out.

[14:12:00.0000] <mkanat>
Hixie: MS and other vendors have actually written a bunch of somewhat-comprehensive spec tests for some specs, right?

[14:12:01.0000] <jgraham>
(the other advantage is that running multiple tests at the same time on the same machine can cause problems)

[14:12:02.0000] <jgraham>
(e.g. timeouts due to resource starvation)

[14:12:03.0000] <jgraham>
mkanat: fairly comprehensive testsuites for some features exist, yes

[15:56:00.0000] <michaelw>
hi! in the html5 spec, Sec. 4.3.1 (script elements), is "already started" the same flag as in 3.17.1 "already executed"?

[15:58:00.0000] <Hixie>
mkanat: probably, i'm not the one to ask on that front

[15:58:01.0000] <Hixie>
michaelw: no

[15:58:02.0000] <Hixie>
michaelw: though one may be a typo...

[15:58:03.0000] <Hixie>
michaelw: looking now

[15:58:04.0000] <Hixie>
i can't find any mention of "already executed"

[15:58:05.0000] <Hixie>
the <Script> flags are all defined in http://www.whatwg.org/specs/web-apps/current-work/complete.html#already-started

[15:59:00.0000] <Hixie>
michaelw: i can't work out to what you are referring to w.r.t 3.17.1

[15:59:01.0000] <michaelw>
oh drat, I might have looked at an outdated spec!

[15:59:02.0000] <Hixie>
michaelw: are you looking at the current spec?

[15:59:03.0000] <Hixie>
whatwg.org/html or whatwg.org/c

[15:59:04.0000] <Hixie>
don't look at anything else if you want to avoid outdated specs :-)

[16:00:00.0000] <Hixie>
and definitely don't look at anytihing with /TR/ in the url

[16:00:01.0000] <michaelw>
ok, thanks.  sorry for the noise

[16:00:02.0000] <Hixie>
np

[16:02:00.0000] <michaelw>
another question, in 4.2.7 a UA can "give up" on a stylesheet that is blocking scripts.  What does that mean exactly?

[16:03:00.0000] <Hixie>
pretty much exactly what it sounds like

[16:03:01.0000] <michaelw>
the way it reads to me right now is that a UA doesn't have to block...

[16:04:00.0000] <Hixie>
that is correct

[16:05:00.0000] <michaelw>
Hixie: this sort of begs the question why this is mentioned then at all

[16:05:01.0000] <Hixie>
i can add some clarifying text explaining why giving up early is a bad idea

[16:07:00.0000] <michaelw>
Hixie: yes, please.

[16:07:01.0000] <Hixie>
k. remind me in 5 minutes :-)

[16:07:02.0000] <Hixie>
or file a bug

[16:07:03.0000] <Hixie>
(a bug will take more months)

[16:07:04.0000] <michaelw>
/me sets a timer

[16:17:00.0000] <michaelw>
Hixie: here's your reminder about adding some explanation to 4.2.7 why giving up on stylesheets immediately (and only waiting for them at the styling phase) is bad

[16:17:01.0000] <Hixie>
thanks

[16:18:00.0000] <Hixie>
that was perfect timing

[16:23:00.0000] <Hixie>
ok i added a paragraph after the "give up" one

[16:23:01.0000] <Hixie>
michaelw: should be up in a few seconds for your review

[16:26:00.0000] <michaelw>
Hixie: okay, waiting for it

[16:27:00.0000] <Hixie>
should be up

[16:28:00.0000] <Hixie>
(checked in)

[16:31:00.0000] <michaelw>
Hixie: got it, thanks

[16:40:00.0000] <Hixie>
julian is funny

[16:42:00.0000] <Hixie>
funnier still though is the people who still argue with him!


2011-09-24
[17:07:00.0000] <TabAtkins>
I feel nervous when writing a spec this small.  I feel like I'm leaving out something.

[17:07:01.0000] <boogyman>
lol

[17:07:02.0000] <TabAtkins>
It's only like 4 screens of text (or probably 8 on a normal persons' monitor)

[17:07:03.0000] <TabAtkins>
(That includes boilerplate, which is at least half of the height.)

[17:07:04.0000] <boogyman>
only.. lol

[17:19:00.0000] <Hixie>
hsivonen: your feedback on http://www.w3.org/Bugs/Public/show_bug.cgi?id=13502 would be quite helpful

[17:19:01.0000] <Hixie>
TabAtkins: you only have 2 screens' of boilerplate? that can't be right. did you run it through pubrules? ;-)

[17:26:00.0000] <TabAtkins>
Hixie: 2 of my screens.  Actually, 2.5.  That's 5 normal screens worth.

[17:26:01.0000] <TabAtkins>
I've got vertical 30"ers.

[17:27:00.0000] <Hixie>
still seems short

[17:27:01.0000] <Hixie>
are you including the conformance section, conformance class definitions, and terminology and typegraphical convention sections in what you call boilerplate?

[17:28:00.0000] <TabAtkins>
Yes.

[17:28:01.0000] <Hixie>
definitely sounds short :-)

[17:28:02.0000] <TabAtkins>
That's the new Module Template, so shrug.

[17:58:00.0000] <danja>
anyone here working for ISO?

[17:59:00.0000] <danja>
comments on their html?

[18:06:00.0000] <TabAtkins>
What, you mean the ISO HTML spec?

[18:07:00.0000] <aho>
my favorite: http://en.wikipedia.org/wiki/ISO_3103

[18:07:01.0000] <aho>
monocle time!

[18:07:02.0000] <aho>
hm hm. quite. :v

[18:08:00.0000] <TabAtkins>
danja: If that is what you meant, then that's a fork of HTML4.  It's useless.

[18:20:00.0000] <danja>
hello?

[18:20:01.0000] <danja>
TabAtkins, I'm feeling a bit cynical

[18:24:00.0000] <danja>
TabAtkins, thing is, seems like some of the best brains on the planet

[18:24:01.0000] <danja>
being useless

[18:24:02.0000] <aho>
fork of html4 = no one gives a f-

[18:24:03.0000] <danja>
hope hixie heard that

[18:24:04.0000] <aho>
seriously

[18:24:05.0000] <TabAtkins>
danja: I have no idea what you mean.

[18:24:06.0000] <aho>
<:

[18:24:07.0000] <Hixie>
o_O

[18:24:08.0000] <danja>
let me explain

[18:24:09.0000] <aho>
TabAtkins, you did the css @var stuff, didn't you?

[18:24:10.0000] <TabAtkins>
aho: Yes.  I'm writing the actual spec *right now*.

[18:24:11.0000] <danja>
computers became exciting to me

[18:24:12.0000] <aho>
i really like how media queries work in scss

[18:25:00.0000] <aho>
you can put them inside some rule blocks

[18:25:01.0000] <aho>
http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#media

[18:25:02.0000] <danja>
hixie! - talk for a mo

[18:25:03.0000] <aho>
this is the behavior i usually want

[18:25:04.0000] <aho>
(:

[18:25:05.0000] <aho>
i.e. having the overrides right next to the default values

[18:26:00.0000] <aho>
the way media queries currently work is exactly the wrong way around :>

[18:26:01.0000] <TabAtkins>
aho: Yeah, I agree.  It would be useful.  One more reason to allow at-rules inside of declaration blocks.

[18:26:02.0000] <aho>
:)~

[18:27:00.0000] <TabAtkins>
Now, I wouldn't say that.  The current way works fine, it's just that the other way is *also* useful, when you just need to make a small media-dependent adjustment.

[18:28:00.0000] <aho>
well, i build the site from the ground up... i create reusable "bricks" which are then used all over the place. everything which belongs together (i.e. everything of this tiny sub tree) is together in one specific place

[18:28:01.0000] <aho>
media queries totally break that

[18:29:00.0000] <aho>
s/the site/sites :>

[18:30:00.0000] <aho>
it's pretty much like override stylesheets for IE via conditinal comments vs IE filters

[18:30:01.0000] <aho>
it's ugly either way, but the "inline" option is nicer to use (because it's right there)

[18:31:00.0000] <danja>
I like the brick metapgor

[18:32:00.0000] <aho>
.Foo{} .Foo>.bar{} .Foo>.baz{} .Foo>.baz>.bat{}

[18:32:01.0000] <aho>
everything looks like that :>

[18:33:00.0000] <aho>
classes, subtree root node is capitalized, child combinators

[18:33:01.0000] <TabAtkins>
It'll be nice when we can do .Foo{ ... &>.bar{...} $>.baz{ ... &>.bat{...}}}

[18:34:00.0000] <TabAtkins>
(That looks prettier when actually indented.)

[18:34:01.0000] <aho>
ye, currently using scss/compass for that

[18:34:02.0000] <aho>
works pretty well so far

[18:34:03.0000] <aho>
just the "& > " bit is kinda awkward ;)

[18:35:00.0000] <aho>
i really wish the child combinator would have been the default instead of the descendant one

[18:35:01.0000] <aho>
child:desc exceeds 9:1 with current projects

[18:36:00.0000] <aho>
well, mine anyways .)

[18:53:00.0000] <TabAtkins>
aho: Oh yeah, nesting @media, at least, is allowed by the Conditionals spec.

[18:53:01.0000] <TabAtkins>
All three of the conditionals can be nested within each other.

[18:53:02.0000] <aho>
shiver me timbers :O

[21:06:00.0000] <danja>
sorry hixie, later

[05:00:00.0000] <GlitchMr>
http://testcases.glitchmr.pl/html/url-002.html

[05:00:01.0000] <GlitchMr>
I was bored...

[05:00:02.0000] <GlitchMr>
I don't know how valid this test is...

[05:01:00.0000] <GlitchMr>
But I find it interesting how various browsers do it differently...

[05:10:00.0000] <GlitchMr>
http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#parsing-urls

[05:11:00.0000] <GlitchMr>
I inserted this testcase to this...

[05:15:00.0000] <GlitchMr>
http://ms2ger.freehostia.com/tests/html5/dynamic-markup-insertion/document.write-01.xhtml

[05:15:01.0000] <GlitchMr>
Fail, this document is actually text/html :P.

[05:16:00.0000] <GlitchMr>
OK, seriously... maybe I will make version which actually uses XHTML...

[06:28:00.0000] <jarek>
Hi

[06:28:01.0000] <jarek>
is there any point is specifying charset on <script> elements if it has already been defined with <meta charset="utf-8">?

[06:29:00.0000] <zcorpan>
no

[06:29:01.0000] <jarek>
If I set <meta charset="utf-8"> in head section, does is it mean that all resources loaded from that page will use utf-8 as well?

[06:30:00.0000] <zcorpan>
no

[06:30:01.0000] <zcorpan>
but scripts and style sheets will inherit the encoding from the page unless they declare encoding themselves

[06:30:02.0000] <jarek>
will it work for CSS files? Should I start my CSS files with @charset 'utf-8'; ?

[06:30:03.0000] <jarek>
oh, great

[06:31:00.0000] <zcorpan>
(html in an iframe will need to declare its own encoding)

[06:31:01.0000] <GlitchMr>
Warning! This method has very idiosyncratic behavior. In some cases, this method can affect the state of the HTML parser while the parser is running, resulting in a DOM that does not correspond to the source of the document.

[06:31:02.0000] <GlitchMr>
...

[06:31:03.0000] <GlitchMr>
this also happens when using DOM...

[06:32:00.0000] <jarek>
and what if I'm using XHTML5 and declare charset at the top of the document like this:

[06:32:01.0000] <jarek>
<?xml version="1.0" encoding="UTF-8"?>

[06:32:02.0000] <zcorpan>
is that about document.write?

[06:32:03.0000] <GlitchMr>
And older versions of IE also did it without doing anything...

[06:32:04.0000] <GlitchMr>
zcorpan, yeah

[06:32:05.0000] <jarek>
do I still have to use  <meta charset="utf-8"> in head?

[06:32:06.0000] <GlitchMr>
jarek, charset declaration in <meta> is ignored in XML mode

[06:33:00.0000] <GlitchMr>
XML parser must know encoding before processing anything...

[06:34:00.0000] <zcorpan>
GlitchMr: file a bug saying that the note should be clearer about what it means

[06:34:01.0000] <zcorpan>
jarek: xml defaults to utf-8 so doesn't need a declaration at all

[06:34:02.0000] <jarek>
GlitchMr: but will  <?xml version="1.0" encoding="UTF-8"?> be also applied to scripts and stylesheets that are loaded from that page?

[06:34:03.0000] <zcorpan>
yeah

[06:34:04.0000] <GlitchMr>
jarek, I don't know, really :P.

[06:35:00.0000] <jarek>
ok, let's check :P

[06:35:01.0000] <GlitchMr>
zcorpan, I through that XML detects encoding basing on BOM and uses UTF-8 if BOM wasn't found...

[06:35:02.0000] <zcorpan>
no declaration in xml will still let css and scripts inherit the used encoding

[06:35:03.0000] <zcorpan>
GlitchMr: it's not that simple. :)

[06:35:04.0000] <GlitchMr>
But I've never had need need to specify charset in CSS. The only reason I could think is having Unicode characters in content and even that is possible without specifying charset.

[06:37:00.0000] <jarek>
it looks like UTF-8 is assumed by default for CSS, JS and XHTML

[06:37:01.0000] <jarek>
at least on Chrome

[06:38:00.0000] <GlitchMr>
Even with stuff like ISO-8859-1?

[06:38:01.0000] <jarek>
yeah

[06:38:02.0000] <GlitchMr>
Makes sense...

[06:38:03.0000] <zcorpan>
jarek: css and js inherits the encoding from the embedding page if they don't declare their own encoding

[06:39:00.0000] <jarek>
I tried setting  ISO-8859-1 in head section and as xml tag attribute, but I can still print UTF8 characters

[06:39:01.0000] <zcorpan>
what does your content-type http header say?

[06:41:00.0000] <jarek>
I can't find this header in Chrome Dev Tools

[06:41:01.0000] <jarek>
I can only see "Accept-Charset:ISO-8859-1,utf-8;q=0.7,*;q=0.3"

[06:42:00.0000] <zcorpan>
that's a request header

[06:42:01.0000] <zcorpan>
content-type is a response header

[06:42:02.0000] <zcorpan>
or at least i'm interested in the response header :)

[06:43:00.0000] <GlitchMr>
http://glitchmr.pl/private/cssencoding.html

[06:43:01.0000] <jarek>
ahh, it shows up in Firebug

[06:43:02.0000] <jarek>
"Content-Type application/xhtml+xml"

[06:45:00.0000] <zcorpan>
jarek: do you have a URL to your test case?

[06:45:01.0000] <jarek>
zcorpan: not yet, I'm running it on my local server

[06:48:00.0000] <zcorpan>
jarek: i can think of two reasons why your xhtml uses utf-8 instead of what you declared in the xml decl

[06:48:01.0000] <zcorpan>
jarek: either you have a UTF-8 BOM

[06:49:00.0000] <zcorpan>
jarek: or your server sends content-type: application/xhtml+xml; charset=utf-8

[06:56:00.0000] <jarek>
do I get any performance gains by using XHTML5 instead of HTML5?

[06:57:00.0000] <jarek>
I heard that XML parsers are much faster than SGML parsers

[06:57:01.0000] <GlitchMr>
jarek, I don't think so

[06:57:02.0000] <GlitchMr>
Browsers skip more complex SGML tricks anyway...

[06:57:03.0000] <zcorpan>
jarek: no

[06:57:04.0000] <GlitchMr>
<b/This is considered wrongly by browsers.../

[06:57:05.0000] <GlitchMr>
And browsers have to check for errors in XML mode...

[06:57:06.0000] <zcorpan>
jarek: also, browsers don't use sgml parsers

[06:58:00.0000] <GlitchMr>
<!-- -- hello this -- is -- error -- which -- needs -- to be -- detected -- in -- xml --mode -->

[06:58:01.0000] <jarek>
zcorpan: yeah, but parsing HTML still requires a lot more trickery than regular XML

[06:58:02.0000] <GlitchMr>
jarek, actually, it's pretty easy to parse HTML

[06:59:00.0000] <zcorpan>
jarek: xml also requires a lot of trickery

[06:59:01.0000] <zcorpan>
jarek: like namespaces and checking for invalid characters in tags

[06:59:02.0000] <GlitchMr>
Yeah, namespaces are problematic

[06:59:03.0000] <zcorpan>
see http://hsivonen.iki.fi/cost-of-html/

[06:59:04.0000] <GlitchMr>
<html xmlns="http://www.w3.org/1999/xhtml">...

[07:01:00.0000] <GlitchMr>
Note: The charset attribute on the meta element has no effect in XML documents, and is only allowed in order to facilitate migration to and from XHTML.

[07:01:01.0000] <zcorpan>
jarek: hsivonen's finding showed that namespaces cost 21% perf hit for xml while html's "fixups" only costs 7% perf hit

[07:02:00.0000] <GlitchMr>
I find it interesting through that implementation of XML in IE9 doesn't fail on invalid documents. I don't even mean more complex XML rules which needs to be find intentionally (like "<" in attribute values)...

[07:03:00.0000] <zcorpan>
IE doesn't fail?

[07:04:00.0000] <GlitchMr>
Yes

[07:04:01.0000] <zcorpan>
o_O

[07:04:02.0000] <GlitchMr>
Whatever you do, it won't fail

[07:04:03.0000] <GlitchMr>
But it implements rules like <div/>.

[07:04:04.0000] <GlitchMr>
And it doesn't generate automatically elements like <tbody> or <body>...

[07:05:00.0000] <zcorpan>
i thought it aborted parsing but didn't show an error message

[07:05:01.0000] <zcorpan>
what if you give it data:text/xml,<foo>test </bar> test</foo> ?

[07:05:02.0000] <zcorpan>
does it render "test test"?

[07:06:00.0000] <GlitchMr>
...

[07:06:01.0000] <GlitchMr>
Weird... it inserts some random error message

[07:06:02.0000] <GlitchMr>
http://www.webdevout.net/articles/beware-of-xhtml-examples/1.xhtml

[07:07:00.0000] <GlitchMr>
This could be perfectly seen in IE9 through

[07:07:01.0000] <zcorpan>
that page doesn't have any more content after the wellformedness error

[07:07:02.0000] <zcorpan>
so it doesn't tell whether it aborts parsing or continues parsing

[07:08:00.0000] <GlitchMr>
About your example, DOM of it looks like <foot>test...

[07:08:01.0000] <GlitchMr>
Weird...

[07:09:00.0000] <zcorpan>
that means it aborted parsing

[07:10:00.0000] <GlitchMr>
Makes sense...

[07:10:01.0000] <GlitchMr>
I through it ignored errors

[07:11:00.0000] <GlitchMr>
But I was testing it with stuff like <p>Hello<p>World

[07:11:01.0000] <GlitchMr>
Which actually gave <p>Hello<p>World</p></p> DOM...

[07:12:00.0000] <GlitchMr>
I think that Chrome does it similarly but it gives error messages...

[07:13:00.0000] <GlitchMr>
http://glitchmr.pl/pastebin/?f=rlaptin-2011-09-24

[07:14:00.0000] <GlitchMr>
I think that "type" is overused in HTML...

[07:14:01.0000] <zcorpan>
is it a problem?

[07:15:00.0000] <GlitchMr>
Nope, it's just kinda weird...

[07:15:01.0000] <GlitchMr>
type having multiple meanings...

[07:15:02.0000] <GlitchMr>
But it kind of makes sense...

[07:15:03.0000] <GlitchMr>
It's easy to type word.

[07:15:04.0000] <zcorpan>
there are more attributes like that

[07:17:00.0000] <GlitchMr>
I went through my list. I've only found VALUE and (possibly) ALIGN...

[07:17:01.0000] <zcorpan>
href

[07:17:02.0000] <GlitchMr>
'HREF'=>'on <a>, <area>, <base> or <link>

[07:17:03.0000] <GlitchMr>
    Specifies the destination of a link.',

[07:17:04.0000] <GlitchMr>
I think I should make more detailed instructions :P.

[07:17:05.0000] <GlitchMr>
lol

[07:17:06.0000] <zcorpan>
<base> is not a link :)

[07:18:00.0000] <GlitchMr>
Yeah...

[07:18:01.0000] <zcorpan>
name=""

[07:18:02.0000] <GlitchMr>
It's from my IRC bot list of tags...

[07:18:03.0000] <GlitchMr>
Yeah, I will agree with name.

[07:19:00.0000] <GlitchMr>
Possibly also MULTIPLE, it has three different meanings...

[07:20:00.0000] <zcorpan>
even attributes like width, height, src are subtly different

[07:20:01.0000] <zcorpan>
and alt=""

[07:20:02.0000] <zcorpan>
span=""

[07:20:03.0000] <GlitchMr>
'WIDTH'=>'on <applet> (Transitional), <col> (HTML4), <colgroup> (HTML4), <embed> (HTML5), <hr> (Transitional), <iframe> (Transitional), <img> (All), <object> (All), <pre> (HTML4), <table> (HTML4), <td> (Transitonal), <th> (Transitional) or <video>. (HTML5)

[07:20:04.0000] <GlitchMr>
    Specifies width of element',

[07:20:05.0000] <GlitchMr>
alt? I don't think so...

[07:20:06.0000] <GlitchMr>
'ALT'=>'on <applet>, <area>, <img> or <input type=image>

[07:20:07.0000] <GlitchMr>
    Sets alternate text to display if image couldn\'t be displayed/',

[07:20:08.0000] <GlitchMr>
s/image/object/;

[07:20:09.0000] <zcorpan>
max=""

[07:20:10.0000] <GlitchMr>
I think I should replace it

[07:21:00.0000] <zcorpan>
title=""

[07:21:01.0000] <GlitchMr>
About span=""? It has just one meaning.

[07:21:02.0000] <GlitchMr>
For <col> and <colgroup>...

[07:21:03.0000] <GlitchMr>
And title="" has this same meaning for every tag...

[07:22:00.0000] <GlitchMr>
Of course I know about <span> and <title>, but that's different construct.

[07:22:01.0000] <zcorpan>
<col span> and <colgroup span> have different requirements

[07:23:00.0000] <zcorpan>
title="" has different meaning on <style> and <link rel="alternate stylesheet">

[07:23:01.0000] <GlitchMr>
zcorpan, oh right, I forgot about it

[07:23:02.0000] <zcorpan>
but i guess it depends on how strictly correct you want your definitions to be

[07:24:00.0000] <zcorpan>
being exactly correct would just be a copy of the spec :)

[07:24:01.0000] <GlitchMr>
:P

[07:24:02.0000] <GlitchMr>
It's IRC bot, I try to avoid very long descriptions.

[07:24:03.0000] <GlitchMr>
I don't want every description to activate my pastebin :P.

[07:28:00.0000] <GlitchMr>
KEYTYPE for me is funny (for now...). As for now it looks like - if you specify it you might make <KEYGEN> not work :P.

[08:03:00.0000] <GlitchMr>
http://testcases.glitchmr.pl/html/marquee-002.html

[08:03:01.0000] <GlitchMr>
I find it interesting. Opera and Chrome fail it in different ways

[08:03:02.0000] <GlitchMr>
In Opera, onbounce="" event doesn't activate.

[08:04:00.0000] <GlitchMr>
In Chrome it doesn't move at all...

[08:04:01.0000] <GlitchMr>
Is it possibly bug in Chrome?

[08:05:00.0000] <GlitchMr>
It looks like behavior="alternate" isn't implemented in WebKit or something

[09:24:00.0000] <zewt>
heh

[09:24:01.0000] <zewt>
unpaired surrogates completely hose input boxes in chrome

[09:27:00.0000] <Philip`>
UTF-16 really doesn't seem to have worked out well in practice

[09:27:01.0000] <zewt>
well, it's fundamentally absurd, so that's little surprise :)

[09:29:00.0000] <zewt>
(i don't know which is worse, the fact that it combines the undesirable properties of multibyte and wide encodings, or the fact that the cases where it needs special handling are also exceptionally rare)

[09:43:00.0000] <zewt>
ouch, chrome is broken even for legal surrogate pairs

[09:44:00.0000] <zewt>
(deja vu--maybe I hit this before)

[09:44:01.0000] <zewt>
(can't tell if it's that or just general "utf-16 never works")

[09:57:00.0000] <Philip`>
Computers are surprisingly rubbish at fundamental things like text

[09:57:01.0000] <Philip`>
and numbers

[09:58:00.0000] <zewt>
heh

[09:59:00.0000] <zewt>
they should teach kids NaN and overflow flags in grade school

[10:12:00.0000] <GlitchMr>
"has some support but crashes"

[10:12:01.0000] <GlitchMr>
O_o

[10:13:00.0000] <GlitchMr>
But that <b></b> while parsing invalid HTML <table><b> is weird...

[10:18:00.0000] <GlitchMr>
Should I remove testcase which reports 404?

[10:51:00.0000] <GlitchMr>
http://testcases.glitchmr.pl/html/img-001.html

[10:51:01.0000] <GlitchMr>
First version of that had race condition :(.

[10:51:02.0000] <GlitchMr>
So I think I fail...


2011-09-25
[11:11:00.0000] <Hixie>
wtf, there's a web events wg?

[11:11:01.0000] <Hixie>
how many wgs does the w3c need?!

[11:13:00.0000] <boogyman>
evidently 1 more :-s

[11:22:00.0000] <zewt>
feels like the first time people set up a web forum

[11:23:00.0000] <zewt>
and they create 250 little forums that get 2 posts each, and nobody can follow anything

[11:59:00.0000] <jcranmer>
the W3C will create working groups until they become imposible to number

[12:09:00.0000] <Ms2ger>
And continue even then

[12:57:00.0000] <annevk>
Hixie, yeah

[12:57:01.0000] <annevk>
Hixie, trying to introduce a new init* method

[12:57:02.0000] <annevk>
I raised some noise, but I'm afraid that's not gonna cut it

[12:57:03.0000] <annevk>
seems DOM3Events mentioned to get new init* methods introduced in browsers too

[13:39:00.0000] <Hixie>
annevk: well, just make sure the browser vendors know the specs in question are bogus

[13:39:01.0000] <Hixie>
annevk: and provide an alternative and make sure that one is the one that gets implemented

[13:39:02.0000] <Hixie>
annevk: webkit in particular seems to have moved to constructors everywhere

[13:39:03.0000] <Hixie>
annevk: and i dropped the init*s from the specs i edit

[13:40:00.0000] <Hixie>
(and moved my timeline for doing that up mostly because of pressure from them)

[16:27:00.0000] <jarek>
Hi

[16:27:01.0000] <jarek>
why manifest.appcache gets cached by the browser even if I had not listed it?

[16:28:00.0000] <jarek>
is this by design?

[16:28:01.0000] <jarek>
I can reproduce this on Chrome, looks like serious flow

[16:28:02.0000] <jarek>
s/flow/flaw

[16:29:00.0000] <jarek>
https://developer.mozilla.org/en/Offline_resources_in_Firefox#section_11

[16:30:00.0000] <jarek>
"it is a good idea to set expires headers on your web server for *.appcache files to expire immediately to avoid the risk of caching the manifest files."

[16:30:01.0000] <jarek>
why would anyone want to cache the .appcache file itself?


2011-09-26
[22:40:00.0000] <annevk>
Hixie, yeah that's pretty great, but they haven't removed the init* methods yet

[22:40:01.0000] <annevk>
Hixie, I thought about writing a better spec for the remaining part of DOM3Events, but I don't really have the time

[22:41:00.0000] <annevk>
or well, I could make the time, but there are other things important too

[22:41:01.0000] <annevk>
Hixie, (WebKit hasn't removed init* methods yet, they did add the constructors)

[23:46:00.0000] <annevk>
Hixie, if you're still up, seems it is time to standardize <canvas> dashed strokes

[23:47:00.0000] <Hixie>
yeah, already noted that :-)

[23:47:01.0000] <Hixie>
annevk: did you file bugs on removing the init* methods?

[23:55:00.0000] <annevk>
Hixie, I asked the guy implementing the constructor methods, he said it was for compat...

[23:55:01.0000] <annevk>
Hixie, I guess I should file a bug at some point

[23:55:02.0000] <Hixie>
file a bug and cc me, the new stuff has no need for those methods even for compat.

[23:58:00.0000] <annevk>
btw, do you have plans to help spec out a new XBL or are you hoping someone else will?

[23:58:01.0000] <Hixie>
isn't that what dg and crew are doing?

[23:58:02.0000] <Hixie>
nobody seems interested in implementing xbl2

[23:58:03.0000] <Hixie>
even with the html changes

[23:58:04.0000] <Hixie>
so...

[00:00:00.0000] <annevk>
dg said there would still be a part in HTML

[00:00:01.0000] <Hixie>
not sure what that means

[00:01:00.0000] <annevk>
me neither, the overall design is somewhat unclear to me

[00:03:00.0000] <hsivonen>
C++ is weirder than the Web: https://blog.mozilla.com/respindola/2011/09/25/interesting-c-snippet/

[00:03:01.0000] <Hixie>
annevk: i haven't really been following it

[00:05:00.0000] <annevk>
k

[01:02:00.0000] <zcorpan>
you have to use URLs as identifiers when there's money involved?

[01:09:00.0000] <annevk>
?

[01:12:00.0000] <zcorpan>
some email...

[03:02:00.0000] <annevk>
I tried to implement the new exception model in DOM4

[03:02:01.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#concept-throw

[03:02:02.0000] <annevk>
Review please!

[03:03:00.0000] <annevk>
This is done roughly per the suggestion in http://www.w3.org/Bugs/Public/show_bug.cgi?id=10623#c14 and is what all specifications will end up using.

[03:35:00.0000] <hsivonen>
sad. it seems that getSVGDocument() lives in an interface all by itself.

[03:36:00.0000] <hsivonen>
as opposed to being part of one of the other interfaces e.g. iframes implement

[03:36:01.0000] <annevk>
that's prolly not required for legacy

[03:36:02.0000] <annevk>
it's kind of silly though given contentDocument

[03:37:00.0000] <annevk>
leftover from the Adobe SVG plugin that is now dead?

[04:27:00.0000] <hsivonen>
Why does the spec for insertAdjacentHTML describe WebKit's exception behavior instead of IE's?

[04:28:00.0000] <annevk>
I guess Hixie copied it from them maybe?

[04:28:01.0000] <annevk>
Nobody has access to IE anymore these days

[04:29:00.0000] <hsivonen>
shouldn't we be speccing IE's behavior considering that it's their API

[04:29:01.0000] <hsivonen>
and Opera doesn't throw, either, when the parent is the document object

[04:30:00.0000] <hsivonen>
(in fact, Opera doesn't throw even when IE throws)

[04:30:01.0000] <hsivonen>
(when the position string is bogus)

[04:31:00.0000] <hsivonen>
I shouldn't test other browsers when fixing bugs. that tends to reveal spec bugs, which prolongs my bug fixing time

[04:41:00.0000] <annevk>
hsivonen, revealing spec bugs is a bonus

[04:43:00.0000] <hsivonen>
maybe I should check if IE6 throws

[04:45:00.0000] <hsivonen>
hooray. IE6 creates a bogus DOM

[04:48:00.0000] <hsivonen>
yet more proof that IE9's modes aren't perfect copies of legacy IEs

[04:48:01.0000] <hsivonen>
IE7 creates a bogus DOM, too

[04:49:00.0000] <hsivonen>
as does IE8

[04:50:00.0000] <hsivonen>
I guess I should try IE9 again and IE10...

[04:57:00.0000] <mpt>
Bogus DOM would be a great name for a band

[04:58:00.0000] <hsivonen>
we should keep a list of WHATWG band names. there are already several possibilities, IIRC

[04:59:00.0000] <hsivonen>
whoa. IE9 creates a bogus DOM, too. it just doesn't cause weird rendering as in IE6

[04:59:01.0000] <jgraham>
mpt: In which genre?

[05:00:00.0000] <annevk>
big surprise that the IE versioning scheme doesn't work in practice

[05:00:01.0000] <hsivonen>
well, maybe it does, since IE9 creates a bogus DOM, too. I just failed to notice it before

[05:03:00.0000] <zcorpan>
matjas: B\&W\? and B\26 W\3F should be valid for css in http://mothereffingunquotedattributes.com/

[05:03:01.0000] <mpt>
jgraham, folk or steampunk, perhaps, à la The Scarring Party

[05:06:00.0000] <mpt>
(IE6 could be classed as steampunk these days, no?)

[05:07:00.0000] <hsivonen>
what should one do when Windows 7 doesn't show the task bar?

[05:07:01.0000] <hsivonen>
move to another VM snapshot and forget about it?

[05:07:02.0000] <zcorpan>
run explorer.exe?

[05:08:00.0000] <zcorpan>
or kill it in taskmgr?

[05:10:00.0000] <hsivonen>
zcorpan: neither of those helped

[05:12:00.0000] <hsivonen>
huh? isn't the latest IE10 PP available for Windows 7?

[05:12:01.0000] <jgraham>
/me wonders if the Mozilla javascript team have ever considered forming a rock and roll band called Spidermonkey and the GC Jitters

[05:13:00.0000] <zcorpan>
hsivonen: then the standard answer is "restart your computer"

[05:15:00.0000] <hsivonen>
zcorpan: restarting the VM didn't help

[05:15:01.0000] <matjas>
zcorpan: thanks, filed https://github.com/mathiasbynens/mothereffingunquotedattributes/issues/3

[05:19:00.0000] <zcorpan>
hsivonen: :(

[05:48:00.0000] <matjas>
zcorpan: is `B\0026 ` valid too? and `B\026 `? and `B\0000026 `?

[05:49:00.0000] <matjas>
it all seems to be

[05:58:00.0000] <hsivonen>
where does the "replacement enabled" navigation concept come from? that is, which browser is the spec describing there?

[06:18:00.0000] <zcorpan>
matjas: escapes are valid

[06:22:00.0000] <matjas>
needs moar value.replace(/\\([0-9A-F]{2,}) /g, '').replace(/\\./g, '')

[06:25:00.0000] <zcorpan>
i'm not sure that's entirely accurate

[06:26:00.0000] <zcorpan>
ecsapes have a max length of 6 chars i think

[06:26:01.0000] <zcorpan>
the space is optional and can be any css space char

[06:26:02.0000] <zcorpan>
also, a single escape is a valid identifier (but the empty string isn't)

[06:27:00.0000] <zcorpan>
also, \\ is a valid identifier

[06:42:00.0000] <matjas>
zcorpan: clear your appcache and go to http://mothereffingunquotedattributes.com/#B%5C%26W%5C%3F and http://mothereffingunquotedattributes.com/#B%5C26%20W%5C3F%20

[06:42:01.0000] <matjas>
thanks again!

[06:43:00.0000] <matjas>
ooh just saw your latest messages

[06:43:01.0000] <matjas>
damn.

[06:45:00.0000] <zcorpan>
matjas: :)

[06:55:00.0000] <matjas>
zcorpan: not sure if it means anything, but `a[href=B\0000026] { }` (7-char escape) validates as per http://jigsaw.w3.org/css-validator/#validate_by_input

[06:59:00.0000] <zcorpan>
sure

[06:59:01.0000] <zcorpan>
it's equivalent to a[href=B\000002 6]

[07:00:00.0000] <matjas>
oh snap

[07:02:00.0000] <hsivonen>
what should I remember to test for HTML in XHR?

[07:02:01.0000] <hsivonen>
 * character encoding

[07:02:02.0000] <hsivonen>
 * noscript

[07:02:03.0000] <hsivonen>
 * script

[07:03:00.0000] <hsivonen>
 * that iframes don't load stuff

[07:03:01.0000] <matjas>
zcorpan: are you getting all that from `escape {unicode}|\\[^\n\r\f0-9a-f]` at http://www.w3.org/TR/CSS2/syndata.html#value-def-identifier?

[07:03:02.0000] <hsivonen>
 * that imgs don't load stuff

[07:03:03.0000] <hsivonen>
anything else?

[07:03:04.0000] <zcorpan>
http://www.w3.org/TR/CSS21/syndata.html#escaped-characters "at most six hexadecimal digits"

[07:03:05.0000] <hsivonen>
 * DOMContentLoaded and load relative to the XHR events

[07:05:00.0000] <zcorpan>
hsivonen: why don't imgs load stuff?

[07:05:01.0000] <zcorpan>
doesn't it with XHTML responseXML?

[07:05:02.0000] <zcorpan>
what about <video>?

[07:06:00.0000] <hsivonen>
zcorpan: oh, maybe they do and maybe I shouldn't bother to test that

[07:07:00.0000] <hsivonen>
hmm. actually I should test that

[07:08:00.0000] <annevk>
images load?

[07:08:01.0000] <annevk>
hmm

[07:08:02.0000] <hsivonen>
annevk: I don't know if they do

[07:08:03.0000] <annevk>
I'm not a 100% sure either

[07:09:00.0000] <hsivonen>
I should probably make sure I turn off speculative loading for scripts, style sheets and images

[07:09:01.0000] <annevk>
there's some stuff that depends on a browsing context being there, not sure if this is such a situation

[07:10:00.0000] <annevk>
matjas, you forgot use cases

[07:11:00.0000] <annevk>
matjas, you are saying "I want X, Y, Z", we want "I run into problem A, B, C"

[07:13:00.0000] <annevk>
matjas, fwiw, submit() used to do validation, but we made it submit because of deployed content

[07:14:00.0000] <annevk>
matjas, we didn't really have a good use case for programmatic submission that includes validation

[07:23:00.0000] <hsivonen>
annevk: why does XMLHttpRequestEventTarget exist as a separate interface?

[07:23:01.0000] <hsivonen>
oh. for uploads?

[07:23:02.0000] <annevk>
yes

[07:24:00.0000] <matjas>
annevk: i’m confused; was that @ me?

[07:24:01.0000] <hsivonen>
hmm. ProgressEvent isn't linkified. arbitrary link breakage when interface deps cross spec boundaries :-(

[07:25:00.0000] <annevk>
matjas, I guess Matias is not you lol

[07:26:00.0000] <annevk>
sorry

[07:26:01.0000] <matjas>
haha np

[07:26:02.0000] <annevk>
hsivonen, in http://dev.w3.org/2006/webapi/XMLHttpRequest-2/#interface-xmlhttprequest it is...

[07:28:00.0000] <matjas>
zcorpan: a[href=B\0]{} is valid according to the CSS validator even though the spec says “the backslash is followed by at most six hexadecimal digits (0..9A..F), which stand for the ISO 10646 ([ISO10646]) character with that number, which must not be zero. (It is undefined in CSS 2.1 what happens if a style sheet does contain a character with Unicode codepoint zero.)”

[07:29:00.0000] <matjas>
has this changed since CSS 2.1?

[07:29:01.0000] <zcorpan>
dunno

[07:29:02.0000] <zcorpan>
i guess that's a bug in the validator

[07:30:00.0000] <annevk>
that \0 is undefined does not make it invalid per se

[07:30:01.0000] <zcorpan>
TabAtkins: has handling of null chars been defined in css lately?

[07:30:02.0000] <zcorpan>
annevk: is says "must not be zero"

[07:34:00.0000] <annevk>
oh hmm

[07:43:00.0000] <hsivonen>
is there a way to set load and DOMContentLoaded event handlers on responseXML without racing with the network_

[07:43:01.0000] <hsivonen>
?

[07:44:00.0000] <annevk>
per spec you cannot see it dispatch

[07:45:00.0000] <annevk>
Document is returned when the fetch and parsing is done

[07:45:01.0000] <hsivonen>
annevk: what browser is that based on?

[07:46:00.0000] <annevk>
I think all of them? it's been a while

[07:46:01.0000] <hsivonen>
oh

[07:46:02.0000] <hsivonen>
maybe I misread the Gecko sources the other day

[07:47:00.0000] <hsivonen>
annevk: indeed. Thanks!

[07:47:01.0000] <hsivonen>
this makes stuff easier!

[07:59:00.0000] <annevk>
does HTML define there's a single Text node in http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1149 ?

[08:08:00.0000] <zcorpan>
annevk: i thought the parser only kept track of parser-inserted text nodes

[08:09:00.0000] <hsivonen>
zcorpan: in Gecko, the parser doesn't track which text nodes are parser-inserted

[08:09:01.0000] <zcorpan>
oh

[08:09:02.0000] <zcorpan>
then nevermind me :)

[08:10:00.0000] <hsivonen>
well, that doesn't answer the question about what the spec says

[08:27:00.0000] <hsivonen>
I just realized I have to test this HTML in XHR stuff with sync XHR, too. :-(

[08:52:00.0000] <zewt>
if only we could find a way to usefully deprecate horrible legacy things like sync xhr in the main thread

[08:52:01.0000] <zewt>
like maybe browsers could play the macarana whenever a sync xhr call is made

[08:54:00.0000] <jgraham>
How else am I suppose to write tests that intentionally halt script execution?

[08:54:01.0000] <Philip`>
zewt: Yeah, it's terrible when authors use convenient APIs

[08:55:00.0000] <Philip`>
jgraham: You could run tests in a special browser mode that disables the macarena

[08:55:01.0000] <zcorpan>
hsivonen: can't the prescan be turned off also?

[08:55:02.0000] <zewt>
"convenient" isn't the word I'd use to describe synchronous APIs in the UI thread, heh

[08:56:00.0000] <zcorpan>
hsivonen: does BOM influence encoding choice for responseText?

[08:57:00.0000] <hsivonen>
zcorpan: technically, the prescan could be turned off. but why?

[08:57:01.0000] <hsivonen>
zcorpan: I haven't tested the BOM in existing browsers

[08:58:00.0000] <zewt>
dropping bombs on my poor plain text files :(

[08:58:01.0000] <zewt>
(would like to drop a bomb on whoever came up with the idea of stapling a header onto a headerless file format)

[08:58:02.0000] <Philip`>
zewt: Plain text is a horrible legacy thing

[08:59:00.0000] <pdr>
The spec (http://goo.gl/6UNDL) says selectionDirection of textarea/input is platform dependent, and effectively says on Macs it defaults to 'none' when selecting with the mouse. I think we should make the wording much more strict so selectionDirection is actually usable across platforms.. anyone have thoughts on that?

[09:00:00.0000] <GlitchMr>
I prefer "Content-type: text/plain;charset=utf-8"...

[09:00:01.0000] <GlitchMr>
This way, charset information isn't in file itself.

[09:01:00.0000] <Philip`>
pdr: That would presumably make it incompatible with platform conventions, which sounds bad for users

[09:01:01.0000] <zcorpan>
hsivonen: the meta doesn't work today when people do innerHTML = responseText

[09:01:02.0000] <pdr>
It appears there is no way to tell which way the user selects the text... for instance, where the cursor should be after a selection is made (whether it's at the beginning or end of the selection). AFAIK, that's all selectionDirection is good for.

[09:02:00.0000] <zewt>
gah

[09:02:01.0000] <zewt>
a web editor that catches shift-delete and turns it into delete instead of cut : |

[09:02:02.0000] <zcorpan>
hsivonen: i think responseText and responseXML should use the same encoding... but maybe the xml decl already broke that?

[09:06:00.0000] <hsivonen>
zcorpan: WebKit considers <meta> today when reading responseText

[09:06:01.0000] <hsivonen>
for text/html

[09:07:00.0000] <hsivonen>
zcorpan: Gecko considers the XML decl for XML types when reading responseText (based on reading Gecko source; I didn't test)

[09:09:00.0000] <zcorpan>
hsivonen: ok. then i guess it makes sense to do the scan (but also for responseText)

[09:11:00.0000] <hsivonen>
zcorpan: I intend to keep the charset for responseText and responseXML in sync for both HTML and XML

[09:12:00.0000] <zcorpan>
good :)

[09:13:00.0000] <hsivonen>
though there's a complication with streaming responseText

[09:13:01.0000] <hsivonen>
I guess I need to defer that until the HTML or XML parser has made its decision

[09:14:00.0000] <zcorpan>
does webkit scan 1024 bytes?

[09:16:00.0000] <hsivonen>
zcorpan: I haven't verified, but I'd be surprised if it didn't stop at 1024 bytes

[09:17:00.0000] <hsivonen>
though things can be surprising on the Web

[09:17:01.0000] <annevk>
I'm quite pleased with the HTML/XML TF

[09:18:00.0000] <annevk>
The document we ended up with is quite sensible. Having said that, whether anyone (apart from the TAG) still cares is another matter

[09:20:00.0000] <hsivonen>
hmm. I might not make it to the HTML/XML TF telecon tomorrow

[09:38:00.0000] <hsivonen>
http://lists.w3.org/Archives/Public/www-tag/2011Sep/0035.html

[09:41:00.0000] <annevk>
in case anyone cares: http://www.w3.org/TR/progress-events/

[09:41:01.0000] <annevk>
CR now

[09:42:00.0000] <zewt>
hopefully FileReader doesn't make every spec that uses it evil, heh

[09:44:00.0000] <hsivonen>
annevk: congrats for CR

[09:45:00.0000] <annevk>
zewt, still not sure what the better behavior should be

[09:46:00.0000] <annevk>
we have some room to make changes here

[09:46:01.0000] <zewt>
well, i was assuming XHR was stuck and arguing that if necessary, FileAPI should break from XHR (if FileAPI follows XHR here, everything else forever will)

[09:46:02.0000] <zewt>
if XHR itself can be improved, all the better

[09:46:03.0000] <GlitchMr>
What tests?

[09:47:00.0000] <GlitchMr>
There will be at least two interoperable implementations passing all test cases in the test suite for this specification. An implementation is to be available (i.e. for download), shipping (i.e. not private), and not experimental (i.e. intended for a wide audience). The working group will decide when the test suite is of sufficient quality to test interoperability and will produce implementation reports (hosted together with the test sui

[09:47:01.0000] <GlitchMr>
te).

[09:47:02.0000] <GlitchMr>
Makes sense...

[09:47:03.0000] <zewt>
the ideal behavior, IMO, would be to forbid send() until the progress sequence (and any readystatechanges) have finished being dispatched, which is what I recommended for FileAPI

[09:48:00.0000] <zewt>
(if you want to reuse the object to send another request/read another block, stuff it in a setTimeout(0))

[09:49:00.0000] <zewt>
that way, no matter how you listen to the events, loadstart/loadend are always cleanly paired with no overlap

[09:50:00.0000] <zewt>
(modulo stopPropagation or changes to the tree, if any, of course)

[09:51:00.0000] <zewt>
(neither of which apply to these APIs)

[09:51:01.0000] <annevk>
GlitchMr, isn't there a link?

[09:51:02.0000] <GlitchMr>
Yeah, but I fail at finding those tests in directory structure...

[09:51:03.0000] <zewt>
(well, with these APIs, there's still stopImmediatePropagation, but anyway)

[09:51:04.0000] <GlitchMr>
Is it /ProgressEvents/tests/submissions/Ms2ger/?

[09:52:00.0000] <GlitchMr>
That's only thing I've found in directory structure which somewhat reminds tests...

[09:52:01.0000] <annevk>
yeah

[09:52:02.0000] <GlitchMr>
But then, where is <script src=/resources/testharness.js></script>

[09:53:00.0000] <annevk>
GlitchMr, might be more useful to look here: http://w3c-test.org/webapps/ProgressEvents/tests/submissions/Ms2ger/

[09:53:01.0000] <GlitchMr>
My browser fails at them.

[09:53:02.0000] <GlitchMr>
I'm not surprised.

[09:54:00.0000] <GlitchMr>
It got CR not long time ago.

[09:54:01.0000] <GlitchMr>
http://testcases.glitchmr.pl/html/tag-nesting-003.html

[09:54:02.0000] <GlitchMr>
I find this behavior weird...

[09:54:03.0000] <annevk>
most browsers support ProgressEvent to some extent, but constructing them not really... and that's mostly what is being tested

[09:55:00.0000] <GlitchMr>
Pass - Interface objects properties should not be Enumerable

[09:55:01.0000] <GlitchMr>
actually, yeah...

[09:55:02.0000] <GlitchMr>
oh wait... that's expected if browser doesn't support it :P.

[10:00:00.0000] <GlitchMr>
http://hixie.ch/tests/adhoc/http/content-type/css/001.html

[10:00:01.0000] <GlitchMr>
... for me this test is invalid

[10:00:02.0000] <GlitchMr>
It uses Quirks Mode...

[10:00:03.0000] <GlitchMr>
Yeah, it's expected that text/plain shouldn't be interpreted as CSS, but that page used Quirks Mode...

[10:50:00.0000] <smaug____>
is 'attribute' reserved word in webidl?

[11:21:00.0000] <jarek>
Hi

[11:21:01.0000] <jarek>
when using HTML5 application cache

[11:21:02.0000] <Jusan>
hi

[11:21:03.0000] <jarek>
why both Firefox and Chrome are caching the manifest file? (thus preventing the app from getting any further updates)

[11:21:04.0000] <jarek>
is this a bug in the browsers or is it by design?

[11:30:00.0000] <Jusan>
hi

[11:58:00.0000] <timeless>
hsivonen: ping

[12:01:00.0000] <timeless>
annevk: ping (html/xml tf)

[12:58:00.0000] <Ms2ger>
smaug____, I assume 'attribute' would be reserved, yes

[12:58:01.0000] <Ms2ger>
You can escape as '_attribute'

[13:00:00.0000] <smaug____>
Ms2ger: do you mean _attribute would be interpret as attribute?

[13:00:01.0000] <Ms2ger>
Right

[13:00:02.0000] <smaug____>
Ms2ger: where is such escaping defined?

[13:00:03.0000] <Ms2ger>
"For all of these constructs, the identifier is the value of the identifier token with any single leading U+005F LOW LINE ("_") character (underscore) removed."

[13:01:00.0000] <Ms2ger>
"A leading "_" is used to escape an identifier from looking like a reserved word so that, for example, an interface named interface can be defined. The leading "_" is dropped to unescape the identifier."

[13:01:01.0000] <Ms2ger>
http://dev.w3.org/2006/webapi/WebIDL/#idl-names

[13:05:00.0000] <smaug____>
Ms2ger: thanks

[13:06:00.0000] <Ms2ger>
Np

[13:22:00.0000] <annevk>
got to love how John Cowan keeps playing ignorant about lenient XML

[13:23:00.0000] <annevk>
timeless, seems you ran out of time

[13:23:01.0000] <annevk>
GlitchMr, quirks mode is slowly becoming standardized, testing it is fine

[13:24:00.0000] <GlitchMr>
annevk, but as far I know, CSS could use text/plain in Quirks Mode...

[13:24:01.0000] <GlitchMr>
Or it was changed?

[13:35:00.0000] <Hixie>
TabAtkins: what's the status with @scoped? is it ok to start speccing?

[13:36:00.0000] <GlitchMr>
<style scoped>?

[13:38:00.0000] <annevk>
GlitchMr, that page is not in quirks mode

[13:39:00.0000] <GlitchMr>
"CSS1Compat"

[13:39:01.0000] <GlitchMr>
...

[13:40:00.0000] <GlitchMr>
I through that "HTML 4.0" DOCTYPE activated Quirks Mode...

[13:40:01.0000] <GlitchMr>
Oh right, Strict

[13:40:02.0000] <GlitchMr>
fail

[13:40:03.0000] <annevk>
Hixie, why make TTML work?

[13:41:00.0000] <annevk>
lets not optimize for TTML

[13:41:01.0000] <GlitchMr>
That was case in Transitional...

[13:42:00.0000] <GlitchMr>
OK, but I think it's in Almost Standards Mode, but I think that only change it has is img {display: block}...

[13:42:01.0000] <GlitchMr>
Unless there is more changes?

[13:42:02.0000] <Hixie>
annevk: if we're explicitly deciding to not make TTML work at all, that's fine by me, but then we should make sure that's clear to everyone and we don't end up with, e.g., IE implementing some crazy sniffing for that case.

[13:43:00.0000] <GlitchMr>
They have already removed support for text/plain in websites...

[13:44:00.0000] <annevk>
IE implementing crazy sniffing and nobody interoperating because nobody else wants TTML seems like an okay outcome to me

[13:45:00.0000] <Hixie>
not to me

[13:47:00.0000] <Hixie>
abarth: what's the url for the mimesniff stuff that is most likely to remain up to date?

[13:48:00.0000] <Hixie>
(http://www.w3.org/Bugs/Public/show_bug.cgi?id=12929)

[13:48:01.0000] <GlitchMr>
What this thing actually is? Because specification isn't exactly clean for me? Something like CSS with XML-like markup?

[13:51:00.0000] <GlitchMr>
Oh, I see... It's something like subtitles format.

[13:53:00.0000] <GlitchMr>
Maybe it won't happen, but probably (at least for me), nearly nobody will use it...

[13:54:00.0000] <jwalden>
GlitchMr: square one reference?

[13:55:00.0000] <GlitchMr>
jwalden, I don't know what is square one :P

[13:55:01.0000] <jwalden>
GlitchMr: guess not, then

[13:55:02.0000] <jwalden>
GlitchMr: there was a TV series, Square One, that had a Mr. Glitch in it

[13:55:03.0000] <jwalden>
http://en.wikipedia.org/wiki/Mathman

[13:55:04.0000] <GlitchMr>
Nope

[13:55:05.0000] <annevk>
Hixie, why do you need interoperability for a proprietary feature?

[13:56:00.0000] <GlitchMr>
But I find it amusing that I made similar nick without knowing about that...

[13:56:01.0000] <jwalden>
indeed

[13:56:02.0000] <Hixie>
annevk: TTML is hardly a "proprietary feature", however we may personally dislike it

[13:57:00.0000] <Hixie>
annevk: nor is TTML the only type that would be affected by this -- what if a browser wants to support SRT natively?

[13:57:01.0000] <annevk>
you cannot implement SRT because there is no sane spec

[13:57:02.0000] <GlitchMr>
That nick is just because I tried inserting some random stuff to get account on Gmail. It has so many accounts...

[13:57:03.0000] <annevk>
and if one vendor implements a feature it's proprietary imo

[13:57:04.0000] <GlitchMr>
lol

[13:57:05.0000] <Hixie>
there was no sane spec for HTML For 15 years, that didn't stop anyone

[13:57:06.0000] <annevk>
e.g. I would consider Opera's support for DOM Level 3 Load & Save proprietary

[13:58:00.0000] <timeless>
annevk: ping html-xml

[13:58:01.0000] <timeless>
Hixie: do you know anyone from google involved in gmail/calendar?

[13:58:02.0000] <annevk>
timeless, hey you're back; pong

[13:58:03.0000] <timeless>
yeah, sorry, i was rewiring my office

[13:58:04.0000] <timeless>
hixie: ... my webkit based browser won't let me click on the gmail account chooser, and i can't type into calendar fields :(

[13:59:00.0000] <timeless>
annevk: so, any idea what happened to http://lists.w3.org/Archives/Public/public-html-xml/2011Aug/0049.html ?

[13:59:01.0000] <Hixie>
timeless: not personally, no

[13:59:02.0000] <Hixie>
timeless: sounds like a bug in the webkit you're using

[13:59:03.0000] <timeless>
Hixie: i don't suppose google has a "test site" for implementers?

[14:00:00.0000] <timeless>
some easy way to test the features that they require to have working..

[14:00:01.0000] <AryehGregor>
timeless, I get the impression they use browser-specific hacks and just ignore unsupported browsers.

[14:00:02.0000] <AryehGregor>
(who doesn't?)

[14:00:03.0000] <timeless>
AryehGregor: yeah well

[14:00:04.0000] <timeless>
um...

[14:00:05.0000] <GlitchMr>
I find it interesting how browsers tried to ignore errors. Usually SGML parsers fail at errors.

[14:00:06.0000] <AryehGregor>
(for complicated sites, anyway)

[14:00:07.0000] <Hixie>
timeless: not to my knowledge, but this isn't my area of expertise

[14:01:00.0000] <annevk>
timeless, not sure, I asked Norm

[14:01:01.0000] <timeless>
annevk: thanks

[14:01:02.0000] <timeless>
annevk: of course, i won't be around thursday/friday..

[14:01:03.0000] <timeless>
enjoy oslo btw :)

[14:01:04.0000] <annevk>
timeless, they're in the queue

[14:01:05.0000] <annevk>
heh thanks

[14:01:06.0000] <timeless>
annevk: is the queue public?

[14:01:07.0000] <annevk>
nope

[14:02:00.0000] <annevk>
I reckon it's how Norm refers to his backlog :)

[14:02:01.0000] <timeless>
what confused me is that the latest update http://lists.w3.org/Archives/Public/public-html-xml/2011Sep/0005.html seemed to be based on a september 1 meeting

[14:02:02.0000] <abarth>
Hixie: http://mimesniff.spec.whatwg.org/

[14:03:00.0000] <timeless>
which by my reckoning would be after my post :)

[14:03:01.0000] <timeless>
GlitchMr: so... browsers evolved to make users happy

[14:04:00.0000] <GlitchMr>
I think that IE6 is good browser through :P.

[14:04:01.0000] <timeless>
http://en.wikipedia.org/wiki/File:Yellow_screen_of_death.png

[14:04:02.0000] <GlitchMr>
(compared to browsers made in 2001)

[14:04:03.0000] <timeless>
yellow screens of death did not make users happy

[14:04:04.0000] <GlitchMr>
timeless, that's XHTML

[14:04:05.0000] <timeless>
so?

[14:05:00.0000] <timeless>
html was implemented for normal humans

[14:05:01.0000] <timeless>
and partially implemented by people who did not have access to the $$$ based SGML spec

[14:05:02.0000] <timeless>
(whose printing would kill rather large trees..)

[14:05:03.0000] <GlitchMr>
Makes sense...

[14:06:00.0000] <Hixie>
abarth: k

[14:06:01.0000] <Hixie>
oooh, prettified html

[14:06:02.0000] <GlitchMr>
Technically, if something would go differently we could have values between `` and tags between {}...

[14:06:03.0000] <timeless>
GlitchMr: you mean rtf?

[14:07:00.0000] <GlitchMr>
What RTF does?

[14:07:01.0000] <timeless>
abarth: ooh, indeed, shiny +1

[14:07:02.0000] <GlitchMr>
Oh I see, {}...

[14:07:03.0000] <GlitchMr>
That's just coincidence.

[14:07:04.0000] <timeless>
abarth: > Otherwise, if the octets in s starting at pos match any of the sequences of octets in the first column of the following table, then the user agent MUST follow the steps given in the corresponding cell in the second column of the same row. |

[14:07:05.0000] <GlitchMr>
There is a lot of such pairs on keyboard.

[14:07:06.0000] <timeless>
what's the stray character at the end of that doing?

[14:08:00.0000] <timeless>
GlitchMr: please note that not all non en-us keyboards have easy access to things like {}

[14:08:01.0000] <GlitchMr>
There is also () and []...

[14:08:02.0000] <GlitchMr>
timeless, oh right

[14:08:03.0000] <timeless>
http://stackoverflow.com/questions/311244/keyboard-layout-for-international-programmers

[14:08:04.0000] <abarth>
timeless: probably a holdover from the IETF XML

[14:08:05.0000] <abarth>
timeless: will fix

[14:09:00.0000] <GlitchMr>
I'm using polish keyboard. Polish keyboard is like English keyboard with additional characters accessed using Alt Gr + letter...

[14:09:01.0000] <timeless>
abarth: gimme 5-10 mins to read the actual document..

[14:09:02.0000] <GlitchMr>
But yeah, I'm aware of that

[14:09:03.0000] <GlitchMr>
Right...

[14:09:04.0000] <timeless>
GlitchMr: i've spent too much time dealing w/ various intl issues

[14:09:05.0000] <timeless>
Hixie / abarth : the ToC feels double spaced, is that normal?

[14:10:00.0000] <abarth>
timeless: fixenated

[14:10:01.0000] <timeless>
abarth: also, would you mind quoting your attributes in source?

[14:10:02.0000] <abarth>
timeless: i think normally there are subsections

[14:10:03.0000] <timeless>
things like class=no-num or href=#web-data scare me

[14:10:04.0000] <timeless>
it's easier if you just quote all attributes :)

[14:11:00.0000] <abarth>
i'm not sure its such a big deal

[14:11:01.0000] <abarth>
HTML can handleit

[14:11:02.0000] <timeless>
also, i generally recommend `<span ...>x</span> ` over `<span ...>x </span>` <- i.e. trailing space outside of span (see toc)

[14:11:03.0000] <timeless>
<p>Many web servers supply incorrect Content-Type header fields with their HTTP

[14:11:04.0000] <abarth>
timeless: i'm just emulating the HTML spec in that regard

[14:12:00.0000] <timeless>
can you mark up `Content-Type` in something which results in roughly "typewriter" font?

[14:12:01.0000] <timeless>
/me doesn't care if it's <tt> or <pre> or something magically styled

[14:12:02.0000] <GlitchMr>
For my private sites, I ignore stuff like direction rtl. I don't care about Arabic :P.

[14:12:03.0000] <timeless>
GlitchMr: i care about Hebrew

[14:12:04.0000] <GlitchMr>
I can find it annoying.

[14:12:05.0000] <timeless>
you're free to not care about Arabic, you still need to get RTL right :)

[14:13:00.0000] <GlitchMr>
RTL is annoying when making CSS layouts

[14:13:01.0000] <abarth>
timeless: done

[14:13:02.0000] <timeless>
abarth: possibly ... s/user agents/User Agents/ as in:

[14:13:03.0000] <timeless>
responses.  In order to be compatible with these servers, user agents consider

[14:14:00.0000] <GlitchMr>
Personally, I find Polish keyboard very easy to use for programming. It doesn't annoy while programming and I could easily use Polish letters when I want :P.

[14:14:01.0000] <timeless>
> Without a clear specification of how to "sniff" the media type, each user agent implementor was forced to reverse engineer the behavior of the other user agents and to develop

[14:14:02.0000] <timeless>
abarth: s/the other/other/ -- there are some UAs who were ignored when the sniffing of a given UA was developed :)

[14:15:00.0000] <timeless>
> their own algorithm

[14:15:01.0000] <timeless>
i'm not sure if `algorithm` here belongs in singular or plural, i got distracted :)

[14:15:02.0000] <GlitchMr>
The only thing which annoys me is ~ which does something completely useless for me in Windows...

[14:15:03.0000] <timeless>
> an HTTP response to be interpreted as one media type but some user agents interpret the responses as another media type.

[14:16:00.0000] <timeless>
s/responses/response/

[14:16:01.0000] <timeless>
(agreement with first part)

[14:16:02.0000] <abarth>
all should be fixed

[14:16:03.0000] <abarth>
pls reload to see if you like

[14:16:04.0000] <timeless>
> However, if a user agent does interpret a low-privilege media type, such as image/gif, as a high-privilege media type, such as text/html, the user agent has created a privilege escalation vulnerability in the server.

[14:16:05.0000] <timeless>
abarth: i'll reload at the end...

[14:17:00.0000] <timeless>
s/, the user agent/, then the user agent/

[14:17:01.0000] <timeless>
> This document describes a content sniffing algorithm that carefully balances the compatibility needs of user agent implementors with the security constraints.

[14:17:02.0000] <timeless>
`the security constraints` is problematic, i don't think `the` references anything

[14:17:03.0000] <timeless>
so either drop `the`, or provide a reference :/

[14:17:04.0000] <abarth>
timeless: would you be willing to send me these in email?  that seems more efficient

[14:18:00.0000] <abarth>
i'm happy to fix all these things )

[14:18:01.0000] <abarth>
:)

[14:18:02.0000] <timeless>
abarth: hrm, i can copy what i write here into an email, it's easier for me to write here and then copy out

[14:18:03.0000] <abarth>
ok

[14:18:04.0000] <timeless>
i'm nowhere near as productive writing into an email

[14:18:05.0000] <timeless>
/me can't explain why

[14:18:06.0000] <abarth>
i've got everything done through "s/, the user agent/, then the user agent/"

[14:18:07.0000] <timeless>
> and metrics collected from implementations deployed to a sizable number of users .

[14:18:08.0000] <timeless>
s/ ././

[14:19:00.0000] <timeless>
> s (such as "strip any leading space characters" or "return false and abort these steps") are to be interpreted with the meaning of the key word ("MUST", "SHOULD", "MAY", etc)

[14:20:00.0000] <timeless>
s/etc/etc./g

[14:20:01.0000] <timeless>
/me will have to figure out what list this feedback belongs on and what summary magic is required for it

[14:21:00.0000] <timeless>
ooh, the content-type change is nice, much easier to read :)

[14:21:01.0000] <timeless>
"official-type" should probably be given some styling

[14:21:02.0000] <timeless>
preferably not the same styling as "Content-Type"

[14:22:00.0000] <timeless>
> (Such messages are invalid according to RFC2616.

[14:22:01.0000] <timeless>
s/./.)/

[14:22:02.0000] <timeless>
the rfcs should be href references of some sort btw :)

[14:22:03.0000] <timeless>
> If an HTTP response contains multiple Content-Type header fields, the User Agent MUST use the textually last Content-Type header field to the official-type. For example, if the last Content-Type header field contains the value "foo", then there is no official media type because "foo" cannot be interpreted as a media type (even if the HTTP response contains another Content-Type header field that could be interpreted as a media type).

[14:23:00.0000] <timeless>
the for example part here applies to the previous paragraph, the sentence needs to be moved to the paragraph before the instruction for multiple header fields

[14:24:00.0000] <timeless>
> FTP RFC0959

[14:24:01.0000] <timeless>
is there a reason for the leading 0?

[14:24:02.0000] <timeless>
> Comparisons between media types, as defined by MIME specifications, are done in an ASCII case-insensitive manner. [RFC2046]

[14:24:03.0000] <timeless>
-- gecko historically had some case sensitive rules in its sniffing :)

[14:25:00.0000] <timeless>
> If the official-type ends in "+xml", or if it is either "text/xml" or "application/xml", then let the sniffed-type be the official-type and abort these steps.

[14:26:00.0000] <timeless>
please mark up `sniffed-type` and `official-type`

[14:26:01.0000] <timeless>
> If the official-type is an image type supported by the User Agent (e.g., "image/png", "image/gif", "image/jpeg", etc), then jump to the "images" section below.

[14:26:02.0000] <timeless>
s/etc//

[14:27:00.0000] <timeless>
> If none of the first n octets are binary data octets then let the sniffed-type be "text/plain" and abort these steps.

[14:28:00.0000] <timeless>
> Binary Data Byte Ranges

[14:28:01.0000] <timeless>
you don't actually define a `binary data octet` as any item within the ranges defined in the `binary data byte ranges`

[14:29:00.0000] <timeless>
> If the first octets match one of the octet sequences in the "pattern" column of the table in the "unknown type" section below, ignoring any rows whose cell in the "security" column says "scriptable" (or "n/a"), then let the sniffed-type be the type given in the corresponding cell in the "sniffed type" column on that row and abort these steps.

[14:29:01.0000] <timeless>
if you could make `"unknown type" section` a link to the section, that would be helpful

[14:30:00.0000] <timeless>
> For each row in the table below:

[14:30:01.0000] <timeless>
> If the row has no "WS" octets:

[14:31:00.0000] <timeless>
i know that "WS" appears in the table below, but it isn't defined, and i don't want to guess what it means (whitespace?)

[14:31:01.0000] <timeless>
> If the octets of the masked-data matches the given pattern octets exactly, then let the sniffed-type be the type given in the cell of the third column in that row and abort these steps.

[14:31:02.0000] <timeless>
s/matches/match/

[14:31:03.0000] <timeless>
> If the row has a "WS" octet or a "_>" octet:

[14:32:00.0000] <timeless>
i'd probably write `an "_>" octet` (reading _ as underscore)

[14:32:01.0000] <timeless>
> LOOP: If index-stream points beyond the end of the octet stream, then this row doesn't match and skip this row.

[14:32:02.0000] <timeless>
please style `LOOP`

[14:32:03.0000] <timeless>
> If the index-pattern-th octet of the pattern is a normal hexadecimal octet and not a "WS" octet or a "_>" octet:

[14:32:04.0000] <timeless>
s/or a/nor a/

[14:33:00.0000] <timeless>
s/not/neither/

[14:33:01.0000] <timeless>
> "WS" means "whitespace", and allows insignificant whitespace to be skipped when sniffing for a type signature.

[14:33:02.0000] <timeless>
oh, so that's where you hid the definition -- way too late :)

[14:34:00.0000] <timeless>
> If the index-stream-th octet of the stream is one of 0x09 (ASCII TAB), 0x0A (ASCII LF), 0x0C (ASCII FF), 0x0D (ASCII CR), or 0x20 (ASCII space), then increment only the index-stream to the next octet in the octet stream.

[14:34:01.0000] <timeless>
if you could style the 0xXX items in something <tt>-ish, that'd be appreciated

[14:34:02.0000] <timeless>
... and if you could style the names (ASCII TAB, etc.) in something, that'd also be appreciated

[14:35:00.0000] <timeless>
oh _ doesn't mean underscore

[14:35:01.0000] <timeless>
grr, please put those definitions before their use, not way below their use :(

[14:36:00.0000] <timeless>
> "_>" means "space-or-bracket", and allows HTML tag names to terminate with either a space or a greater than sign.

[14:37:00.0000] <timeless>
> If the first n octets match the signature for MP4 (as define in ), then let the sniffed-type be video/mp4 and abort these steps.

[14:37:01.0000] <timeless>
s/define/defined/

[14:37:02.0000] <timeless>
-- the markup you're using failed to generate a reference, could you get the tool to generate an XXX when it fails? :)

[14:37:03.0000] <timeless>
[reference/visible-reference]

[14:39:00.0000] <timeless>
> FF FF FF FF FF FF  WS 3C 3f 78 6d 6c  text/xml  Scriptable  <?xml (Note the case sensitivity and lack of trailing _>)

[14:40:00.0000] <timeless>
s/sensitivity/sensitivity [mask = FF instead of DF]/

[14:41:00.0000] <timeless>
> A JPEG SOI marker followed by a octet of another marker.

[14:41:01.0000] <timeless>
s/a octet/an octet/

[14:41:02.0000] <timeless>
-- the table doesn't currently handle .SWF

[14:42:00.0000] <timeless>
in the past, that has been a problem

[14:42:01.0000] <timeless>
http://www.digitalpreservation.gov/formats/fdd/fdd000130.shtml

[14:44:00.0000] <timeless>
> If n is less than 4, then the sequence does not match the signature for MP4 and abort these steps.

[14:44:01.0000] <timeless>
`and` doesn't work; s/ and/;/ ?

[14:45:00.0000] <timeless>
oh, hrm, you're consistent in that style... oh wel

[14:45:01.0000] <timeless>
l... it feels wrong

[14:46:00.0000] <timeless>
hrm, no, in all previous cases, the form was `let foo and abort these steps`

[14:47:00.0000] <timeless>
here it's `then <statement of truth> and`

[14:47:01.0000] <timeless>
> If n is less than box-size or if box-size is not evenly divisible by 4, then the sequence does not match the signature for MP4 and abort these steps.

[14:47:02.0000] <timeless>
-- i stand by my complaint :)

[14:48:00.0000] <timeless>
(the fix is probably to move to "return TRUTH/FALSE value and abort these steps")

[14:48:01.0000] <timeless>
> For each i from 2 to box-size/4 - 1 (inclusive):

[14:49:00.0000] <timeless>
if you could put `box-size/4 - 1` into some markup to indicate that it's a math section, that'd be helpful

[14:49:01.0000] <timeless>
> If octets 4*i through 4*i + 2 (inclusive) of the sequence are 0x6D 0x70 0x34 (the ASCII string "mp4"), then the sequence does match the signature for MP4 and abort these steps.

[14:49:02.0000] <timeless>
and here for `4*i` and `4*i + 2`

[14:50:00.0000] <timeless>
i think you need s/If octets/If any octets/

[14:50:01.0000] <timeless>
otherwise, it's ambiguous between `any` and `all`

[14:51:00.0000] <timeless>
> 7 Images

[14:51:01.0000] <timeless>
>     Otherwise, let the sniffed-type be the official-type and abort these steps.

[14:51:02.0000] <timeless>
i'd rather otherwise be step 3 instead of part of the bulleted list inside step 2

[14:53:00.0000] <timeless>
hsivonen: what happens if a document contains multiple BOMs? :)

[14:53:01.0000] <timeless>
(compatible or incompatible, i don't really care, although i'd be amused to hear how things respond)

[14:54:00.0000] <timeless>
> If the octets with positions pos to pos+2 in s are exactly equal to 0x2D, 0x2D, 0x3E respectively (ASCII for "-->"), then increase pos by 3 and jump back to the previous step (the step labeled loop start) in the overall algorithm in this section.

[14:55:00.0000] <timeless>
`loop start` should be a link to the LOOP label and preferably have the same case as the LOOP label

[14:55:01.0000] <timeless>
> Return to step 2 in these substeps.

[14:55:02.0000] <timeless>
it'd be nice if this was a link to an anchor in the right part of the steps

[14:57:00.0000] <timeless>
> If RDF-flag is 1 and RSS-flag is 1, then let the sniffed-type be "application/rss+xml" and abort these steps.

[14:57:01.0000] <timeless>
s/and/or/ ??

[14:58:00.0000] <timeless>
ok, i've reached end of file

[14:58:01.0000] <timeless>
/me goes to convert this to an email

[14:58:02.0000] <timeless>
anyone know where the email should go? :)

[14:58:03.0000] <Ms2ger>
whatwg works, I think

[15:31:00.0000] <ojan>
TabAtkins: yt? just want to confirm something...

[15:31:01.0000] <ojan>
TabAtkins: row-reverse should not affect things like margin-start, right?

[15:31:02.0000] <ojan>
TabAtkins: as in, direction:ltr, row-reverse and margin-start should set the margin-left, right?

[15:32:00.0000] <timeless>
abarth: http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-September/033328.html

[15:32:01.0000] <abarth>
timeless: many thanks.  I should have all your comments addressed within 14 hurs

[15:32:02.0000] <abarth>
hrs

[15:32:03.0000] <abarth>
24 hrs

[15:32:04.0000] <abarth>
(man, I can't type today)

[15:32:05.0000] <timeless>
/me knows the feeling

[15:33:00.0000] <timeless>
i have a busy end of week, so i could easily not see it wednesday, in which case i won't touch it until next tuesday

[16:15:00.0000] <Hixie>
AryehGregor: http://www.w3.org/Bugs/Public/show_bug.cgi?id=13425#c6

[16:58:00.0000] <Hixie>
anyone know how i can test http://www.w3.org/Bugs/Public/show_bug.cgi?id=12199 ?

[16:58:01.0000] <Hixie>
I don't really know ISO-2022-JP :-/


2011-09-27
[17:11:00.0000] <MikeSmith>
Hixie: I can give you some ISO-2022-JP content, if that does you any good

[17:11:01.0000] <Hixie>
it might

[17:12:00.0000] <Hixie>
reading http://en.wikipedia.org/wiki/ISO/IEC_2022 has not helped me in the slightest except to make me rather more alarmed

[17:14:00.0000] <MikeSmith>
Hixie: http://people.w3.org/mike/tests/iso-2022-jp-mail.txt

[17:14:01.0000] <MikeSmith>
fwiw

[17:15:00.0000] <MikeSmith>
oh, hang on

[17:15:01.0000] <MikeSmith>
I'll set the content-type on the web server for that properly

[17:26:00.0000] <MikeSmith>
Hixie: content-type is set correctly on that file now

[17:26:01.0000] <MikeSmith>
again, fwiw

[17:46:00.0000] <Hixie>
MikeSmith: thanks, will look

[17:46:01.0000] <Hixie>
/me pipes it through hexdump -C

[17:48:00.0000] <Hixie>
hmmm

[17:49:00.0000] <Hixie>
ok now to create a form that submits that

[17:51:00.0000] <Hixie>
in what encoding is &eacute; 0xc3 0xa9 ?

[17:51:01.0000] <Hixie>
wait, i have a tool to figure that out i think

[17:52:00.0000] <Hixie>
none that i know of, bummer

[17:53:00.0000] <Hixie>
well this isn't encoding as 2022, that's for sure

[17:53:01.0000] <Hixie>
/me pokes

[17:54:00.0000] <Hixie>
ooh, here we go

[17:54:01.0000] <Hixie>
1b 24 42

[17:55:00.0000] <Hixie>
aha, ESC $ B to switch to JIS X 0208-1983 (2 bytes per character)

[17:55:01.0000] <Hixie>
which matches what that e-mail has

[17:55:02.0000] <Hixie>
well well

[18:37:00.0000] <Hixie>
ok i need an ASCII-compatible encoding in which you can switch to a mode where 0x20 is not a space but is still an assigned codepoint (or part of one).

[18:37:01.0000] <Hixie>
anyone? :-)

[18:37:02.0000] <Hixie>
i feel like iso-2022 should provide the answer but it's proving quite impenetrable

[18:54:00.0000] <mkanat>
Hixie: That would make it not ASCII-compatible, wouldn't it?

[18:56:00.0000] <ayo>
/me circles "switch to a mode"

[18:59:00.0000] <ayo>
wouldn't utf-8 and U+0120 and the like do the trick?

[19:01:00.0000] <ayo>
0120 Ġ 0220 ɐ 0320 ʹ 0420 Р 0520 Ẁ

[19:01:01.0000] <mkanat>
Ahh, switch to a mode.

[19:58:00.0000] <Hixie>
ayo: hmm, utf-8 might be an option, at least for "part of one"

[19:58:01.0000] <ayo>
:)

[21:38:00.0000] <MikeSmith>
Hixie: thanks for the quick reply to John Gregg on public-web-notification

[21:39:00.0000] <MikeSmith>
that spec has been languishing for a while

[21:39:01.0000] <MikeSmith>
would be nice to get it refined and actually implemented

[21:39:02.0000] <MikeSmith>
that is, implemented in more than one browser

[00:25:00.0000] <Hixie>
MikeSmith: yeah.

[00:25:01.0000] <Hixie>
MikeSmith: we really need to give spec writing lessons or something.

[00:25:02.0000] <Hixie>
MikeSmith: so many elementary things that few people understand

[00:25:03.0000] <Hixie>
MikeSmith: like the event olop

[00:26:00.0000] <MikeSmith>
well, some people like me learn best the hard way

[00:28:00.0000] <MikeSmith>
so doesn't always help me to get the lessons ahead of time, because I either am not just listening carefully then, or I'd forget by the time I get to doing whatever it is I need to do

[00:29:00.0000] <MikeSmith>
I think the best thing is for editors to get on IRC and ask

[00:29:01.0000] <MikeSmith>
while they are in the process of writing

[00:29:02.0000] <MikeSmith>
ask for feedback, ask for help when not sure about something

[00:30:00.0000] <Hixie>
getting the editors onto irc would be a good step forward

[00:32:00.0000] <MikeSmith>
I guess editors should actually read the HTML5 spec as well

[00:32:01.0000] <MikeSmith>
the "Web application APIs" at the very least

[00:32:02.0000] <Hixie>
not to mention the intro and infrastructure sections

[01:59:00.0000] <annevk>
so yeah we are not going to have more than one ID per element

[01:59:01.0000] <annevk>
if we align all specifications with the DOM ID concept that is

[02:12:00.0000] <annevk>
Hixie, so if you just have a single header row you should still use <thead> you think?

[02:28:00.0000] <hsivonen>
looks like Joe Hewitt is now defining "the Web" the way Tim Bray has been defining it for a while: http://joehewitt.com/post/what-the-web-is-and-is-not/

[02:29:00.0000] <hsivonen>
short version: Android and iOS advocates want to call their stuff the Web

[02:31:00.0000] <annevk>
I am now even more confused

[02:32:00.0000] <annevk>
First he wants one browser, now he wants new browsers...

[02:33:00.0000] <annevk>
In a couple of days HTML might not be that bad after all

[02:41:00.0000] <jgraham>
Using google.com in chrome isn't using the web?

[02:43:00.0000] <hsivonen>
jgraham: I thought "Web" was one of Google's services alongside +, Gmail, Calendar, Documents, Photos and Sites

[02:44:00.0000] <hsivonen>
jgraham: "Web" is to GApps what Windows Desktop is to Metro :-)

[02:50:00.0000] <hsivonen>
looks like ze frank is another person who is famous enough for Google to bend their Real Names Policy

[09:39:00.0000] <dglazkov>
good morning, Whatwg!

[09:43:00.0000] <charlvn>
hi dglazkov

[09:50:00.0000] <timeless>
> Wonderful. We've no tracker, so try not to lose the slip of paper :-)

[09:50:01.0000] <timeless>
/me chuckles

[10:37:00.0000] <jwalden>
!summon ayo

[10:46:00.0000] <GlitchMr42>
http://gavinsharp.com/irc/whatwg.html

[10:46:01.0000] <GlitchMr42>
404

[10:48:00.0000] <gavin>
hrm

[10:48:01.0000] <gavin>
I should fix that

[10:51:00.0000] <jwalden>
gavin: why the log-rotation into old/?

[10:51:01.0000] <gavin>
welcome gavin_. he will generate stats for you.

[10:52:00.0000] <gavin>
jwalden: the machine previously logging/generating stats has moved to my parents basement

[10:52:01.0000] <jwalden>
heh

[10:52:02.0000] <gavin>
the new machine doing it has a smaller set of logs

[10:52:03.0000] <gavin>
rather than lose the historical stats I just moved them over to /old/

[11:15:00.0000] <gavin>
http://gavinsharp.com/irc/whatwg.html

[11:30:00.0000] <Hixie>
ok i need an ASCII-compatible encoding in which you can switch to a mode where 0x20 is not a space but is still an assigned codepoint (or part of one).

[11:31:00.0000] <Hixie>
can't use utf-16, as it's not ascii-compatible

[11:31:01.0000] <Hixie>
iso-2022-jp seems like the way to go but i can't work it out :-/

[11:35:00.0000] <AryehGregor>
Isn't such an encoding non-ASCII-compatible, by construction?

[12:01:00.0000] <hober>
AryehGregor: ascii-compatible when in another mode

[12:02:00.0000] <hober>
AryehGregor: but not while in the weird-0x20-mode

[12:22:00.0000] <AryehGregor>
Seriously?  Google Docs doesn't allow font sizes below 8pt or line spacing below 1.00?  How are you supposed to do a half-line break?

[12:22:01.0000] <AryehGregor>
Real users don't need precise control over font size or line spacing, I guess, right?

[12:22:02.0000] <AryehGregor>
. . .

[12:39:00.0000] <Hixie>
AryehGregor: what hober said

[12:40:00.0000] <Hixie>
looks like 0x20 is always a space in sio-2022-jp

[12:40:01.0000] <Hixie>
iso

[12:40:02.0000] <Hixie>
maybe there simply isn't an encoding with the property i describe

[12:41:00.0000] <Hixie>
that would certainly make my life easier

[12:42:00.0000] <hober>
Hixie: such an encoding would be perverted

[12:42:01.0000] <Hixie>
there are plenty of perverted encodings

[12:42:02.0000] <Hixie>
iso-2022-jp

[12:42:03.0000] <Hixie>
utf-7

[12:42:04.0000] <hober>
indeed

[12:42:05.0000] <Hixie>
cesu

[12:43:00.0000] <Hixie>
gsm03.38

[12:43:01.0000] <Hixie>
ebcdic

[12:43:02.0000] <Hixie>
and variants of the above

[12:43:03.0000] <Philip`>
Someone could always make up an encoding which has the property you describe

[12:43:04.0000] <Hixie>
just to name a few!

[12:44:00.0000] <Hixie>
Philip`: sure, but my concern only exists if it's an encoding that has legacy content to worry about (so i can't ban it)

[13:00:00.0000] <jmb>
Hixie: last I looked, iso 2022 didn't permit the redefinition of 0x20 (or 0x7f, for that matter) even if you redefined the mapping of G0.

[13:00:01.0000] <Hixie>
yeah that seems to indeed be the case

[13:00:02.0000] <Hixie>
i've decided to just assume no encodings allow it for now

[13:02:00.0000] <jmb>
that sounds sane :)

[13:02:01.0000] <Ms2ger>
In that case, it's probably wrong

[13:08:00.0000] <AryehGregor>
+  <p class=note>This form data set encoding is in many ways an

[13:08:01.0000] <AryehGregor>
+  aberrant monstrosity, the result of many years of implementation

[13:08:02.0000] <AryehGregor>
+  accidents and compromises leading to a set of requirements necessary

[13:08:03.0000] <AryehGregor>
+  for interoperability, but in no way representing good design

[13:08:04.0000] <AryehGregor>
+  practices. In particular, readers are cautioned to pay close

[13:08:05.0000] <AryehGregor>
+  attention to the twisted details involving repeated (and in some

[13:08:06.0000] <AryehGregor>
+  cases nested) conversions between character encodings and byte

[13:09:00.0000] <AryehGregor>
+  sequences.</p>

[13:09:01.0000] <AryehGregor>
I love notes like that.

[13:09:02.0000] <AryehGregor>
/me thinks he only has one or so in his own spec so far

[13:09:03.0000] <Ms2ger>
sheppy? Still trolling

[13:09:04.0000] <Ms2ger>
Me? Still not spelling well

[13:10:00.0000] <Hixie>
AryehGregor: i couldn't bring myself to checking in the change without apologising for it

[13:10:01.0000] <Hixie>
AryehGregor: hence that note :-)

[14:38:00.0000] <nlogax>
should one be able to read dataTransfer stuff in a dragstart event? http://jsfiddle.net/9YK5s/1/

[14:39:00.0000] <nlogax>
trying to figure out some nice way to show where different kinds of stuff can be dropped

[14:39:01.0000] <nlogax>
but first i have to read it... :D

[15:30:00.0000] <nlogax>
Hixie: thoughts? :)

[15:30:01.0000] <nlogax>
spec says it's in "Read/write mode"

[15:30:02.0000] <Hixie>
hm?

[15:31:00.0000] <nlogax>
Hixie: tried to read DataTransfer data in a bubbling dragstart event, but failed. thought it was some bug.. but can't read it even in the listener that sets it.

[15:31:01.0000] <nlogax>
not sure what the spec says. it says read/write mode on one hand, but only mentions setting stuff on the other..

[15:31:02.0000] <Hixie>
/me looks at the spec

[15:32:00.0000] <nlogax>
if you weren't around when i pasted the link, http://jsfiddle.net/9YK5s/1/

[15:36:00.0000] <Hixie>
nlogax: per spec, dragstart should be able to read the data

[15:36:01.0000] <Hixie>
looking at your code now

[15:37:00.0000] <Hixie>
code looks fine

[15:37:01.0000] <Hixie>
dunno what's up

[15:40:00.0000] <nlogax>
yeah me neither :)

[15:40:01.0000] <nlogax>
other than bug filing time

[16:12:00.0000] <ojan>
tpac question: if i'm a member of the html wg but want to also attend the css wg meeting, do i need to check the observer box?

[16:13:00.0000] <Hixie>
in practice once you're there you can do whatever you want

[16:13:01.0000] <Hixie>
i didn't check any of the boxes, figure i'll just sit in the corridor working until someone wants me somewhere

[16:13:02.0000] <ojan>
Hixie: lol

[16:16:00.0000] <Hixie>
anyone got a testcase with dragleave that i can poke at?

[16:20:00.0000] <ojan>
Hixie: http://codesearch.google.com/codesearch#search/&exact_package=chromium&q=dragleave%20file:third_party/WebKit/LayoutTests&type=cs

[16:21:00.0000] <ojan>
Hixie: better search: http://codesearch.google.com/codesearch#search/&exact_package=chromium&q=dragleave%20file:third_party/WebKit/LayoutTests.*html&type=cs

[16:21:01.0000] <Hixie>
any of those self-contained?

[16:21:02.0000] <Hixie>
all those i found seemed to have a bunch of helper scripts

[16:22:00.0000] <Hixie>
(i'm just lazy and don't want to write my own)

[16:22:01.0000] <Hixie>
(trying to find out whatevent.relatedTarget is in dragleave events)

[16:24:00.0000] <ojan>
Hixie: http://codesearch.google.com/codesearch#OAMlx_jo-ck/src/third_party/WebKit/LayoutTests/http/tests/misc/bubble-drag-events.html&exact_package=chromium&q=dragleave%20file:third_party/WebKit/LayoutTests.*html&ct=rc&cd=3&sq= seems to be self-contained except for an external image

[16:24:01.0000] <ojan>
Hixie: nevermind...

[16:24:02.0000] <ojan>
Hixie: these all depend on test hardness specific stuff

[16:26:00.0000] <Hixie>
eh, don't worry about it

[16:26:01.0000] <Hixie>
i used the debugger to show that the spec matched webkit

[16:26:02.0000] <Hixie>
and closed the relevant bug saying that if they wanted it to change they should attach a testcase

[16:54:00.0000] <Hixie>
i wonder how to spec multipart/x-mixed-replace

[16:54:01.0000] <Hixie>
(in the navigate algorithm)


2011-09-28
[17:05:00.0000] <Hixie>
wow, onbeforeunload and multipart/x-mixed-replace don't mix well

[17:07:00.0000] <Hixie>
onunload fires in firefox

[17:07:01.0000] <Hixie>
safari fails to parse it right as far as i can tell

[17:08:00.0000] <Hixie>
and opera doesn't fire it

[17:08:01.0000] <Hixie>
well then

[17:09:00.0000] <Hixie>
firefox doesn't fire onbeforeunload

[17:12:00.0000] <gsnedders>
Opera practically never fires unload, though

[17:15:00.0000] <Hixie>
why does firefox ignore the call on http://damowmow.com/playground/demos/multipart/003.html?

[17:15:01.0000] <Hixie>
(go to http://damowmow.com/playground/demos/multipart/ then click the 003 link to test)

[17:15:02.0000] <Hixie>
(you should end up back at http://damowmow.com/playground/demos/multipart/ )

[17:19:00.0000] <Hixie>
ok i guess the answer is that we just repeat step 20 of the navigate algorithm for each component

[18:21:00.0000] <Hixie>
i wonder how i get a multipart/x-... to abort

[18:30:00.0000] <Hixie>
oh actually that will just work if i fix the bug that back() doesn't abort a document

[18:30:01.0000] <Hixie>
ok so here's a question

[18:31:00.0000] <Hixie>
if half-way through a multipart/x-mixed-replace you hit a back() call

[18:31:01.0000] <Hixie>
should the browser be allowed to keep buffering that document such that if you go forward again it continues from where you left off?

[18:31:02.0000] <mkanat>
Ah, I would say no.

[18:31:03.0000] <Hixie>
not required, mind

[18:31:04.0000] <Hixie>
a browser can always discard anything in the session history

[18:32:00.0000] <mkanat>
I don't think it would make sense.

[18:32:01.0000] <Hixie>
yeah it'd probably hurt servers, too

[18:32:02.0000] <Hixie>
ok

[18:32:03.0000] <mkanat>
Think of the Bugzilla use case, for example.

[18:32:04.0000] <mkanat>
(We're one of the only people to actually implement x-mixed-replace in a non-COMET fashion.)

[18:33:00.0000] <Hixie>
wouldn't that use case argue for it to be supported?

[18:33:01.0000] <Hixie>
it would mean you could go forward again without waiting for the query to load

[18:43:00.0000] <mkanat>
Hixie: Ah, as a Bugzilla server maintainer, I wouldn't want the server load to continue.

[18:43:01.0000] <Hixie>
yeah, that's what i figured

[18:43:02.0000] <mkanat>
Hixie: Also, usually if somebody goes back from the search page, it's to change their search and do a new one.

[18:43:03.0000] <Hixie>
true

[19:41:00.0000] <aho>
oh boy oh boy oh boy! text-overflow:ellipsis finally landed in FF7 (stable)

[19:42:00.0000] <roc>
you mean it finally shipped

[19:42:01.0000] <aho>
eh

[19:42:02.0000] <aho>
yea

[19:42:03.0000] <aho>
:)

[19:43:00.0000] <roc>
that reminds me, I need to blog about how our implementation is better than everyone else's

[19:43:01.0000] <aho>
vertical margin collapse for tables next? :>~

[19:43:02.0000] <roc>
that is actually just about to land

[19:44:00.0000] <aho>
:O

[19:44:01.0000] <aho>
i was actually kinda joking

[19:44:02.0000] <aho>
it's the duke nukem of firefox bugs

[19:44:03.0000] <aho>
:>

[19:44:04.0000] <aho>
https://bugzilla.mozilla.org/show_bug.cgi?id=87277 - reported: 2001-06-22

[03:00:00.0000] <smaug____>
Someone should review quirksmode's tests

[03:00:01.0000] <smaug____>
and result

[03:00:02.0000] <smaug____>
way too many bugs there :/

[03:01:00.0000] <smaug____>
in the tests

[07:10:00.0000] <annevk>
http://my.opera.com/daniel/blog/2011/09/28/reparse-xml-as-html hmm

[07:10:01.0000] <annevk>
didn't know that

[07:10:02.0000] <Rik`>
does it gives an alert in the console for developers?

[07:10:03.0000] <miketaylr>
it should show it in the error console

[07:11:00.0000] <annevk>
but what it says about other browsers there?

[07:11:01.0000] <annevk>
is that actually true?

[07:11:02.0000] <miketaylr>
yep, http://miketaylr.com/post/d15ad477.png

[07:12:00.0000] <miketaylr>
that i don't know

[07:12:01.0000] <annevk>
and we only do this for browsing context loads I hope

[07:12:02.0000] <annevk>
not e.g. DOMParser or XHR

[07:12:03.0000] <annevk>
but that's pretty self-evident I guess

[07:13:00.0000] <annevk>
back later

[08:23:00.0000] <twisted`>
hi, in Chrome when I use an input type image I the value gets hidden, but in Firefox it stays

[08:24:00.0000] <twisted`>
IE also hides it

[08:40:00.0000] <woef>
Is there a plan to improve feature detection? ie let the browser itself respond whether it has already implemented certain features (correctly)?

[08:41:00.0000] <Philip`>
No, because the browser's response will be wrong often enough to make the feature detection useless

[08:42:00.0000] <Philip`>
e.g. it implements the feature but forgot to update the detection status, or it claims to implement a feature when it's unusably buggy or when it only implements half of it

[08:43:00.0000] <aho>
http://dev.w3.org/csswg/css3-conditional/

[08:43:01.0000] <jcranmer>
or when it correctly implemented a feature but the feature has since changed under them

[08:43:02.0000] <aho>
@supports ( display: flexbox ) {...}

[08:43:03.0000] <Philip`>
Or it simply lies about the feature in order to avoid "sorry, your browser is not supported" messages on major sites

[08:47:00.0000] <woef>
aho: cool

[08:49:00.0000] <woef>
Philip`: maybe a "we now it's fucked" marker only?

[08:49:01.0000] <woef>
So if it returns nothing, you're still on your own. I guess browser vendors won't risk having those around for no good reason.

[08:49:02.0000] <Philip`>
If they know they've implemented a feature that badly, they should disable the feature entirely

[08:49:03.0000] <woef>
Having problems with the placeholder positioning in webkit right now and it's damn sad.

[08:50:00.0000] <Philip`>
Also they often won't realise there's problems until after releasing

[08:50:01.0000] <woef>
I guess things won't we that bad once we have the conditional css. Though I figured feature detection was all about not having to do that anymore :)

[08:55:00.0000] <smaug____>
twisted`: what you mean with "value gets hidden"?

[08:57:00.0000] <smaug____>
or, what you mean "it stays"

[08:58:00.0000] <aho>
woef, this *is* feature dection... just w/o the js, the added classes to the root element, and the change in selector specificity

[08:59:00.0000] <aho>
well, ok. the features are queried, not tested for

[09:00:00.0000] <aho>
(usually the used tests are just queries though) :>

[09:00:01.0000] <aho>
/me splits the hair once more

[09:11:00.0000] <twisted`>
smaug____: oh, well I fixed it differently (got rid of the whole form) but what I meant is: in Firefox when you create a form with a input type="image" and set a value="bla

[09:11:01.0000] <twisted`>
"

[09:12:00.0000] <twisted`>
and then with CSS set a background image, it shows [bla] with the bg image

[09:12:01.0000] <twisted`>
in Chrome and IE the button is [  ] (empty value shown) with a background

[09:52:00.0000] <dglazkov>
good morning, Whatwg!

[09:53:00.0000] <divya>
hi dglazkov!

[09:53:01.0000] <divya>
(finally an echoback)

[09:54:00.0000] <dglazkov>
divya: exactly!

[09:54:01.0000] <dglazkov>
:)

[09:54:02.0000] <divya>
:))

[09:55:00.0000] <jcranmer>
don't you mean good afternoon?

[09:55:01.0000] <divya>
dglazkov: i tl;dr; the component model spec and my tl;dr; question was are browsers allowed to create their own custom templates e.g. <x-myownbrowsersilo-component>

[09:55:02.0000] <dglazkov>
divya: no. That's only something authors can do.

[09:56:00.0000] <dglazkov>
jcranmer: it's morning outside, thus no.

[09:56:01.0000] <divya>
k thnx dglazkov

[10:53:00.0000] <Hixie>
hm, no anne

[10:53:01.0000] <Hixie>
anyone know anything about XHR2 plans?

[10:55:00.0000] <nlogax>
using html5 d&d, how would you for example outline areas as droppable for certain kinds of data? i had to resort to overriding the standard behavior (embedding chromium)

[10:55:01.0000] <nlogax>
since you can't read what's being dragged above you

[10:56:00.0000] <nlogax>
can of course do it in hacky ways but..

[10:57:00.0000] <smaug____>
Hixie: what about XHR2 ?

[11:20:00.0000] <Hixie>
nlogax: dropzone="" attribute or reading the type information from the event (you can read the type, just not the data)

[11:23:00.0000] <nlogax>
Hixie: but the type seems to be hardcoded to only accept a handful of things

[11:23:01.0000] <nlogax>
in chromium at least

[11:23:02.0000] <nlogax>
maybe that's a bug then?

[11:25:00.0000] <nlogax>
hmm yeah, seems like it. http://jsfiddle.net/9YK5s/4/

[11:25:01.0000] <nlogax>
works fine in safari

[11:26:00.0000] <nlogax>
and firefox.. doh. picked the wrong horse.

[12:47:00.0000] <AryehGregor>
rniwa, do you have an opinion on this?  http://www.w3.org/Bugs/Public/show_bug.cgi?id=14253

[12:47:01.0000] <rniwa>
/me looks

[12:48:00.0000] <rniwa>
AryehGregor: this is about allowing execCommand to take cm, mm, pt, etc...?

[12:48:01.0000] <AryehGregor>
rniwa, I'm suggesting a new command, maybe fontSizePt.  fontSize takes legacy sizes 1-7, which isn't what users expect from WYSIWYG editors.

[12:49:00.0000] <rniwa>
oh I see

[12:49:01.0000] <rniwa>
mn... adding new command for each new unit seems inelegant

[12:49:02.0000] <AryehGregor>
I suggest a command that accepts pt, since that's what editors normally use.

[12:49:03.0000] <AryehGregor>
All the other absolute units are defined as a multiple of pt.

[12:49:04.0000] <rniwa>
mn...

[12:49:05.0000] <AryehGregor>
So I think it would be okay to just have one for pt.

[12:49:06.0000] <AryehGregor>
We could allow input in other absolute units, like px or mm.

[12:49:07.0000] <rniwa>
oh I see

[12:50:00.0000] <rniwa>
what you're saying that allowing it to be more precise in pt?

[12:50:01.0000] <AryehGregor>
So execCommand('fontSizePt', false, '12') might be the same as execCommand('fontSizePt', false, '12pt'), but you could also do execCommand('fontSizePt', false, '16px').

[12:50:02.0000] <AryehGregor>
Yes.

[12:50:03.0000] <rniwa>
right

[12:50:04.0000] <rniwa>
okay

[12:50:05.0000] <rniwa>
I think that makes sense

[12:50:06.0000] <AryehGregor>
However, queryCommandValue() would always have to return pt.

[12:50:07.0000] <rniwa>
right

[12:50:08.0000] <AryehGregor>
Since it has to return some specific unit, and pt makes the most sense for WYSIWYG.

[12:50:09.0000] <rniwa>
although it'll be nice if it were configurable

[12:50:10.0000] <AryehGregor>
Although getComputedStyle returns px.

[12:50:11.0000] <rniwa>
but then... people can always get px value out of getComputedStyle

[12:50:12.0000] <AryehGregor>
How could it be configurable?

[12:50:13.0000] <rniwa>
add some command like

[12:51:00.0000] <rniwa>
FontSizeWithPx

[12:51:01.0000] <rniwa>
just like styleWithCSS

[12:51:02.0000] <rniwa>
but kind of ugly to introduce those states too though

[12:51:03.0000] <rniwa>
anyway lunch time for now.

[12:51:04.0000] <AryehGregor>
I don't like commands like that, because they're global.  It will make other code do something unexpected.

[12:51:05.0000] <rniwa>
will be back ~hour

[12:51:06.0000] <AryehGregor>
Okay.

[12:51:07.0000] <rniwa>
AryehGregor: yeah, not too nice

[13:16:00.0000] <annevk>
maybe it should expose the CSSValue API somehow

[13:16:01.0000] <annevk>
but I'm not really sure how

[13:16:02.0000] <annevk>
might be better to wait somewhat longer with introducing features such as FontSizePt until everything else is better adopted

[13:17:00.0000] <AryehGregor>
annevk, the current fontSize command doesn't allow you to even *set* font size to anything other than 1-7.

[13:17:01.0000] <AryehGregor>
And it gives you the font size back in that unit too.

[13:17:02.0000] <AryehGregor>
It's crippled.

[13:18:00.0000] <AryehGregor>
fontSizePt would work just fine for normal authoring use-cases, which fontSize does not.

[13:19:00.0000] <annevk>
if it's not supported now it's prolly not that high priority

[13:19:01.0000] <annevk>
we're still not quite sure over the CSSOM

[13:19:02.0000] <annevk>
not really sure this needs to move faster than that

[13:19:03.0000] <AryehGregor>
queryCommandValue() just returns a string.

[13:19:04.0000] <AryehGregor>
It can return the size in points.

[13:19:05.0000] <AryehGregor>
We could add a separate API later to retrieve the size in other units or whatnot.

[13:19:06.0000] <AryehGregor>
If anyone wants it.

[13:19:07.0000] <AryehGregor>
But it's not really necessary.

[13:20:00.0000] <annevk>
we could also wait in general

[13:20:01.0000] <AryehGregor>
Generally I'm trying to fix existing stuff before adding more, but this is a simple and useful addition.

[13:33:00.0000] <AryehGregor>
I want to test something.  Someone say my name.

[13:35:00.0000] <Philip`>
AryehGregor: Like this?

[13:35:01.0000] <AryehGregor>
Philip`, yeah, thanks.

[13:36:00.0000] <AryehGregor>
Was testing whether Unity tells you which window wants your attention like gnome-panel's task switcher does.  It doesn't.

[13:37:00.0000] <astearns>
AryehGregor: why define fontSizePt over fontSizePx?

[13:37:01.0000] <AryehGregor>
astearns, because all WYSIWYG editors use pt, not px.

[13:38:00.0000] <astearns>
but specifying on-screen browser text in points is not WYSIWYG

[13:39:00.0000] <AryehGregor>
astearns, sure it is.  In CSS, a 1px = 0.75pt.

[13:39:01.0000] <AryehGregor>
s/a //.

[13:41:00.0000] <Hixie>
annevk: do you know anything about streaming upload in xhr? (i.e. where a web page is generating data to send and starts sending it before it has finished generating it)

[13:44:00.0000] <astearns>
AryehGregor: since points are defined by the reference pixel, I think it's less misleading to use pixels (since that's what it actually comes down to)

[13:46:00.0000] <AryehGregor>
astearns, the actual definitions don't really matter.  Almost no one who uses a WYSIWYG editor could tell you that a pt is 1/72 of an inch.  It's an arbitrary unit that people are used to, that's all.

[13:47:00.0000] <astearns>
I'd rather the web platform push "16px" as normal text, instead of "12pt" that's not particularly relevant to the screen

[13:47:01.0000] <AryehGregor>
I'd rather the web platform do whatever users expect.

[13:47:02.0000] <AryehGregor>
Web pages are printable too, you know.

[13:48:00.0000] <astearns>
16px prints out just fine

[13:48:01.0000] <AryehGregor>
px is meaningless for print, however.

[13:48:02.0000] <AryehGregor>
Just like pt is meaningless for screen.

[13:48:03.0000] <AryehGregor>
The difference is, users are used to pt.

[13:51:00.0000] <TabAtkins>
"meaningless" being relative, since the two are defined to have a strict ratio to each other.

[13:52:00.0000] <AryehGregor>
We could make the API px and expect authors to translate to pt, but they'll get it wrong.

[13:52:01.0000] <AryehGregor>
So let's just make it pt to start with.

[13:52:02.0000] <astearns>
is the fontSizeSomething API being designed for those WYSIWYG users who are scared of pixels?

[13:53:00.0000] <AryehGregor>
astearns, yes.  The entire execCommand() API is for WYSIWYG.

[13:53:01.0000] <astearns>
there are a lot of people around me who do know what points are, and get it wrong when they assume that CSS points are 1/72 of an inch :)

[13:53:02.0000] <TabAtkins>
AryehGregor: He meant wysiwyg development, not scripting a wysiwyg editor.

[13:54:00.0000] <AryehGregor>
astearns, CSS points are 1/72 of a CSS inch, and also 1/72 of an actual inch when printed.

[13:54:01.0000] <AryehGregor>
TabAtkins, hmm?

[13:54:02.0000] <annevk>
Hixie, it's not supported

[13:54:03.0000] <TabAtkins>
AryehGregor: execCommand() is for scripting a WYSIWYG editor.  Alan's talking, I think, about a WYSIWYG coding environment.

[13:54:04.0000] <astearns>
WYSIWYG editors could still display pt in the UI, but use a fontSizePx method

[13:55:00.0000] <Hixie>
annevk: any plans?

[13:55:01.0000] <AryehGregor>
astearns, assuming the authors of those editors know that 0.75px = 1pt.  Which they probably won't.  Why make them?

[13:55:02.0000] <annevk>
Hixie, so far the only request has been streaming "downloads"

[13:55:03.0000] <AryehGregor>
Make the API work for the common case, and let authors translate to the uncommon case.

[13:55:04.0000] <Hixie>
annevk: ah, interesting.

[13:56:00.0000] <Hixie>
annevk: is it something that could be added if use cases were presented, or is xhr unlikely to change again?

[13:56:01.0000] <annevk>
Hixie, I guess we might enhance XHR some more

[13:57:00.0000] <Hixie>
annevk: k, thanks

[13:57:01.0000] <astearns>
all of the hand-coded CSS advice I've read lately encourages people to use px (if they want to use an absolute size). Adding new APIs in points seems retrograde to me

[13:57:02.0000] <annevk>
gonna get some sleep now

[13:57:03.0000] <AryehGregor>
astearns, this is not about hand-coded CSS.  It's an API to auto-generate CSS.

[13:57:04.0000] <AryehGregor>
Typically, the CSS won't ever be viewed by a person.

[13:58:00.0000] <AryehGregor>
Also, "I read advice lately that encourages using px" is not itself a very compelling argument.

[13:58:01.0000] <AryehGregor>
/me wonders why EC2 Windows instances take 15-30 minutes after startup to generate a password that actually lets you log in

[13:59:00.0000] <AryehGregor>
/me also wonders why he has to enter a private key to get the password

[13:59:01.0000] <AryehGregor>
I mean, a) I don't see what attack scenario that averts, and b) isn't the whole point of public-key cryptography that you never have to give out your key to anyone?

[14:00:00.0000] <TabAtkins>
That seems completely broken.

[14:00:01.0000] <AryehGregor>
It's a private key from a keypair they generated, so it doesn't bother me much.

[14:00:02.0000] <AryehGregor>
But it seems pretty dumb.

[14:01:00.0000] <AryehGregor>
I assume that a Linux instance would just allow login directly with the private key.

[14:01:01.0000] <AryehGregor>
(without disclosing it, obviously)

[14:04:00.0000] <gsnedders>
Yay, and so Hotmail makes it practically impossible for us to drop another non-standard feature (currentStyle), as the codepath we end up on is one they don't officially support, so if we break anything on it due to dropping a non-standard feature, we simply break the site. They won't fix it. :\

[14:04:01.0000] <Hixie>
noooo where did anne go

[14:05:00.0000] <TabAtkins>
Probably dead.

[14:06:00.0000] <wilhelm>
Last seen drinking beer in a restaurant near the office. Yeah, probably dead.

[14:46:00.0000] <AryehGregor>
So there's no way to get the latest IE10 preview except installing a Windows 8 VM?

[14:46:01.0000] <AryehGregor>
Which probably will not work on an AWS VM?

[14:46:02.0000] <Hixie>
this appears to be the case

[14:47:00.0000] <AryehGregor>
PP2 is no longer available?

[14:47:01.0000] <AryehGregor>
/me grumbles

[14:48:00.0000] <Hixie>
so you can get a beta of firefox, 30MB or so and runs on the spot, or you can download IE10, 1.5GB or so, needs its own partition and several reboots, and won't run side-by-side with any of your other browsers.

[14:49:00.0000] <Hixie>
as you might guess, I'm not spending as much time testing IE these days

[14:49:01.0000] <AryehGregor>
IE9 works fine in a VM.

[14:49:02.0000] <Hixie>
yeah that's how i test it

[14:49:03.0000] <Hixie>
(remote VM, but same idea)

[14:49:04.0000] <AryehGregor>
Also, is there some MS Office free crippled version that I can use for testing on my VM?  Otherwise maybe I'll have to not test it.

[14:50:00.0000] <AryehGregor>
(I'm using a remote VM too, EC2)

[14:50:01.0000] <AryehGregor>
(costs me $3/month for the storage plus $0.03/hour for using it)

[14:51:00.0000] <AryehGregor>
I wish I could use less storage.  20G of that 30G is unused.

[14:52:00.0000] <AryehGregor>
But savings of $1.50/month is not worth trying to see if I can shrink the Windows root partition while the system is running.

[14:52:01.0000] <AryehGregor>
I've done that on Linux, mind you!  It was fun.  And this was without LVM or md or anything fancy, or with any extra devices.  It was basically something like everything on /dev/sda1, which took up all of /dev/sda, with no other disks.

[14:53:00.0000] <AryehGregor>
(the solution involved copying essential files to a tmpfs, pivot_root, and then killing or restarting any processes using the old root partition so I could unmount it)

[14:54:00.0000] <AryehGregor>
But somehow I doubt Windows is capable of such things.

[14:54:01.0000] <AryehGregor>
<3 Linux

[15:17:00.0000] <zcorpan>
Hixie: "+   <p>Here, a a column"

[15:31:00.0000] <zcorpan>
http://smus.com/game-asset-loader - feedback on appcache

[16:21:00.0000] <Hixie>
ok i think i have multipart/x-mixed-replace specced for regular browsing contexts

[16:21:01.0000] <Hixie>
now for images

[16:23:00.0000] <Hixie>
holy cow, bfcache works better for the html spec in firefox than chrome, that's for sure

[16:27:00.0000] <abarth>
Hixie: chrome doesn't have a bfcache

[16:27:01.0000] <Hixie>
ah well that explains it

[16:34:00.0000] <mkanat>
Yeah, it makes me sad.

[16:34:01.0000] <mkanat>
There's one in WebKit but it hasn't been hooked into Chrome yet.

[16:34:02.0000] <abarth>
i've wanted to implement it for a while, but I haven't gotten around to it

[16:35:00.0000] <abarth>
its non-trivial to get right

[16:35:01.0000] <mkanat>
Yeah, I can totally imagine.

[16:37:00.0000] <Hixie>
especially in a multiprocess architecture, i imagine

[16:37:01.0000] <mkanat>
Oh yeah, I suppose you have to have a bfcache for each process.

[16:37:02.0000] <abarth>
mkanat: and do process-process back navigations

[16:38:00.0000] <abarth>
sorry

[16:38:01.0000] <abarth>
cross-process

[16:38:02.0000] <mkanat>
abarth: There are times when back/forward crosses process boundaries?

[16:38:03.0000] <abarth>
yes, often

[16:38:04.0000] <abarth>
we refresh the process whenever we can

[16:38:05.0000] <gavin>
can you not at least do fastback for same-process navigation?

[16:39:00.0000] <mkanat>
gavin: I'd imagine that would be an inconsistent and confusing user experience.

[16:39:01.0000] <mkanat>
gavin: Particularly if developers came to rely on it.

[16:39:02.0000] <gavin>
huh?

[16:40:00.0000] <mkanat>
gavin: There have been times when I've greatly wanted to rely on the bfcache in Firefox for fixing back/forward bugs.

[16:40:01.0000] <gavin>
"going back is sometimes fast" shouldn't really be confusing to users, it's not like there's much consistency there

[16:40:02.0000] <mkanat>
gavin: That's true, since bfcache is already like that.

[16:41:00.0000] <Hixie>
the spec allows bfcache to blow away the stored documents whenever

[16:41:01.0000] <Hixie>
pages that depend on them not going away are going to break left right and center

[16:41:02.0000] <mkanat>
Yeah.

[16:41:03.0000] <mkanat>
I actually wish that didn't happen; about 75% of JS bug effort on the developer side nowadays seem to be around dealing with the Back button.

[16:42:00.0000] <gavin>
"JS bug effort on the developer side" ?

[16:42:01.0000] <mkanat>
gavin: In terms of work that you have to do if you want to render an app that does go to different URLs, but while it's on the page, alters the DOM with JS in some way.

[16:42:02.0000] <gavin>
just in general?

[16:42:03.0000] <mkanat>
gavin: Yeah, in general.

[16:42:04.0000] <gavin>
ok...

[16:42:05.0000] <Hixie>
jsut store the state with pushState or replaceState

[16:42:06.0000] <Hixie>
it's not _that_ hard

[16:43:00.0000] <mkanat>
Hixie: Provided that your page can rebuild itself from a URL string, yes.

[16:43:01.0000] <Hixie>
or a state object

[16:43:02.0000] <mkanat>
Hixie: Although that means that any DOM manipulation you do, you must then also implement a system for rebuilding it from the URL.

[16:43:03.0000] <Hixie>
well you should do that anyway

[16:43:04.0000] <mkanat>
Hixie: Only if that state object can be serialized into the URL, no? Or you mean like in localStorage.

[16:43:05.0000] <Hixie>
for bookmarking purposes

[16:44:00.0000] <Hixie>
the state object can be anything that can be structured-cloned

[16:44:01.0000] <mkanat>
Hixie: Yeah, thankfully the last time I hit this, replaceState did fix it (for the browsers that implement replaceState).

[16:44:02.0000] <Hixie>
(think of it as "anything like JSON)

[16:44:03.0000] <Hixie>
^"

[16:44:04.0000] <Hixie>
anyone know of a multipart/x-mixed-replace image anywhere?

[16:45:00.0000] <mkanat>
No, although I'd imagine it would be fairly easy to set up.

[16:45:01.0000] <Hixie>
i'm lazy :-P

[16:45:02.0000] <Hixie>
/me uses his multipart/x-mixed-replace kitchen to make one

[16:46:00.0000] <Hixie>
(http://www.hixie.ch/tests/evil/page-loading/multipart/001.cgi)

[16:47:00.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1159 doesn't work in firefox :-(


2011-09-29
[17:37:00.0000] <astearns>
AryehGregor: I decided to look at the "CSS points are 1/72 of an actual inch when printed" claim in Mac browsers

[17:37:01.0000] <astearns>
AryehGregor: it's true for FireFox 7

[17:37:02.0000] <astearns>
AryehGregor: Safari prints slightly larger

[17:37:03.0000] <astearns>
AryehGregor: Opera prints slightly smaller

[17:37:04.0000] <astearns>
AryehGregor: Chrome doesn't even try - it seems to print at the screen zoom level

[18:04:00.0000] <Hixie>
ok seriously, why can't people read specs

[18:04:01.0000] <Hixie>
almost whenever someone has a complaint about a spec, they end up quoting a non-normative note or example

[18:05:00.0000] <Hixie>
!@#$%^&*~( it's NOT NORMATIVE

[18:05:01.0000] <Hixie>
CANNOT BE USED TO BACK UP AN ARGUMENT ABOUT WHAT THE SPEC SAYS

[18:05:02.0000] <Hixie>
sigh

[18:05:03.0000] <mkanat>
Maybe they don't know what "normative" means?

[18:07:00.0000] <Dashiva>
No, it happens with examples too

[18:07:01.0000] <Dashiva>
"This example shows X, so Y must therefore be invalid"

[18:12:00.0000] <mkanat>
Well, the world has no shortage of stupid people.

[18:12:01.0000] <mkanat>
We're not in a stupid-people conservation crisis.

[18:12:02.0000] <mkanat>
They're not an endangered species.

[18:13:00.0000] <Dashiva>
They certainly are, that's why we have warning labels everywhere

[18:17:00.0000] <Hixie>
it's not even only stupid people

[18:17:01.0000] <Hixie>
people who are otherwise highly competent are susceptible to this just as much

[19:03:00.0000] <TabAtkins>
Dammit, now I've started writing IDL and I suspect I'm going to be angry at it.

[23:45:00.0000] <annevk>
so because of W3C publication politics we're getting an initTouchEvent method that will be obsolete any day now? http://lists.w3.org/Archives/Public/public-webevents/2011JulSep/0092.html

[23:45:01.0000] <annevk>
:(

[01:07:00.0000] <hsivonen>
http://lists.w3.org/Archives/Public/www-tag/2011Sep/0088.html

[01:07:01.0000] <hsivonen>
"I will reiterate (for the nth time) that it would be valuable for the

[01:07:02.0000] <hsivonen>
W3C to specify what a "browser" is,"

[01:07:03.0000] <hsivonen>
that would be interesting to watch

[01:08:00.0000] <hsivonen>
esp. when the last sentence of that paragraph seems to want to define Silk as "not a browser"

[01:28:00.0000] <annevk>
mnot also seems to want to turn it into some kind of ISO thing, with certification and what not

[01:28:01.0000] <annevk>
that does not strike me as a good idea

[05:09:00.0000] <yuno_>
is colgroup/col good for anything other than setting the width of columns?

[05:09:01.0000] <yuno_>
using them for alignment doesnt seem to work if i add some class and use some css. the deprecated align attribute also doesnt do anything

[05:11:00.0000] <yuno_>
i mean, nth-child is nice and all, but i kinda need something i can use today. is the only option to add a class to every cell?

[05:12:00.0000] <yuno_>
(i already did read the current specs, the old specs, mdn, and i also googled around for a bit)

[05:48:00.0000] <hsivonen>
I pull from hg, start merging code and end up writing an email like this http://lists.w3.org/Archives/Public/public-webapps/2011JulSep/1747.html

[05:56:00.0000] <annevk>
maybe for chunked we can force UTF-8?

[05:57:00.0000] <annevk>
not even look at anything else

[06:00:00.0000] <annevk>
so instead of WebSQL with SQLite we will now have IndexedDB with LevelDB?

[06:44:00.0000] <hsivonen>
what's LevelDB?

[06:51:00.0000] <beverloo>
annevk, LevelDB is just the back-end we chose to implement IndexedDB on

[06:51:01.0000] <beverloo>
incognito mode still uses SQLite for it

[06:52:00.0000] <beverloo>
hsivonen, http://code.google.com/p/leveldb/, a fast key-value storage library

[07:19:00.0000] <annevk5>
where is ms2ger?

[07:20:00.0000] <annevk5>
did anyone have a look at the new exception model?

[07:20:01.0000] <annevk5>
I wonder if I should roll it out in DOM4 and file some bugs on browsers

[07:53:00.0000] <annevk5>
I guess heycam needs to be here

[08:07:00.0000] <espressive_>
hey everyone

[08:07:01.0000] <espressive_>
Quick question, would an element with rel="help" and a title="Help text" make sense as a JavaScript hook for tooltips? Does not match the usage as described by the WHAT-WG (http://developers.whatwg.org/links.html#link-type-help) exactly, but close enough?

[09:10:00.0000] <annevk5>
Is http://wiki.whatwg.org/wiki/User_talk:Paolorte spam?

[09:34:00.0000] <dglazkov>
good morning, Whatwg!

[09:35:00.0000] <annevk5>
good morning dglazkov!

[09:38:00.0000] <myakura>
/me is about to say good night

[09:38:01.0000] <dglazkov>
annevk5: :D let me guess: you've suffixed yourself with 5 in honor of HTML5?

[09:38:02.0000] <dglazkov5>
hrm.

[09:39:00.0000] <dglazkov5>
mine looks more like jackson 5

[09:40:00.0000] <myakura>
wait!? are you guys moving back to a versioned model!?

[09:40:01.0000] <divya>
hahahahh

[09:40:02.0000] <dglazkov>
myakura: no, only for people.

[09:40:03.0000] <divya>
so wait if 5 of you suffix yourself with 5

[09:40:04.0000] <divya>
you would be the "html" 5

[09:41:00.0000] <dglazkov>
that sounds like something from tabloid headlines.

[09:41:01.0000] <dglazkov>
"the infamous html 5 is running amok, terrifying upstanding citizens"

[09:42:00.0000] <divya>
"html5 wrecks homes and destroys marriages! Mayor screams for immediate imprisonment!"…

[09:42:01.0000] <hasather5>
sounds fun, I'm in

[09:42:02.0000] <divya>
hahahahahh

[09:42:03.0000] <divya>
hi5 hasather5

[09:42:04.0000] <hasather5>
hi divya

[09:43:00.0000] <divya>
:)

[09:50:00.0000] <annevk5>
help

[09:50:01.0000] <annevk5>
anarchy on the IRC channel

[09:50:02.0000] <divya>
you started it.

[09:50:03.0000] <dglazkov>
annevk5: works as intended.

[09:50:04.0000] <divya>
hahahah

[09:53:00.0000] <annevk5>
http://blog.whatwg.org/weekly-xbl-observers

[09:53:01.0000] <annevk5>
(the URL is a "joke")

[09:54:00.0000] <dglazkov>
annevk5: :)

[10:16:00.0000] <annevk5>
I moved previous/next links down

[10:16:01.0000] <annevk5>
on the blog

[10:16:02.0000] <annevk5>
if anyone has other improvements let me know

[10:34:00.0000] <annevk5>
oh yes

[10:34:01.0000] <annevk5>
my first W3C Recommendation

[10:34:02.0000] <annevk5>
it's on namespaces

[10:35:00.0000] <annevk5>
in CSS

[10:35:01.0000] <annevk5>
there's a lot of jokes there

[10:35:02.0000] <divya>
sgtm annevk5

[10:36:00.0000] <annevk5>
proof: http://www.w3.org/TR/css3-namespace/

[10:36:01.0000] <divya>
is this the shortest css spec ever?

[10:36:02.0000] <annevk5>
did I beat Hixie to it?

[10:36:03.0000] <annevk5>
oh CSS 2.1 was first

[10:39:00.0000] <erlehmann>
CSS 2.1 shot first.

[10:43:00.0000] <GlitchMr>
What actually @namespace does...

[10:44:00.0000] <GlitchMr>
oh, i see

[10:44:01.0000] <erlehmann>
annevk5, usability comment: if prev/next links are at top, they do not change position.

[10:44:02.0000] <erlehmann>
you can quickly click through articles then

[10:44:03.0000] <erlehmann>
at bottom, less useful

[10:47:00.0000] <annevk5>
hmm yeah

[10:47:01.0000] <annevk5>
but if you are not reading, you're just wasting our bandwidth

[10:47:02.0000] <divya>
hahahah

[14:01:00.0000] <dglazkov>
PSA: going on vacation until Oct 10 in 3 hours. Will attempt to stay offline. Wish me luck.

[14:07:00.0000] <gsnedders>
dglazkov: Good luck.

[15:07:00.0000] <Hixie>
document.alinkColor isn't specced

[15:07:01.0000] <Hixie>
did i overlook it or do we not need it?

[15:07:02.0000] <Hixie>
looks like at least firefox doesn't support it

[15:08:00.0000] <Hixie>
oh no nevermind

[15:08:01.0000] <Hixie>
it does

[15:08:02.0000] <Hixie>
i typoed it

[15:08:03.0000] <annevk>
all browsers have it

[15:08:04.0000] <annevk>
Opera / Firefox / Safari

[15:08:05.0000] <Hixie>
and IE

[15:08:06.0000] <Hixie>
k

[15:08:07.0000] <Hixie>
i guess i'll spec it!

[15:09:00.0000] <annevk>
funny how nobody notices

[15:09:01.0000] <Hixie>
oh wait i did spec it

[15:09:02.0000] <Hixie>
i was searching for the wrong capitalisation

[15:09:03.0000] <Hixie>
ok

[15:09:04.0000] <Hixie>
all is well with the world

[15:10:00.0000] <annevk>
we should really have some kind of special IDL type for event handlers

[15:11:00.0000] <annevk>
this current syntax sucks for something that is used all over

[15:11:01.0000] <Hixie>
http://www.youtube.com/watch?v=aSVpBqOsC7o

[15:11:02.0000] <Hixie>
er, wrong channel!

[16:38:00.0000] <hober>
Hixie: in #pixel-manipulation, this text is unfortunately in an example and not in the main prose: "The data returned by getImageData () is at the resolution of the canvas backing store, which is likely to not be one device pixel to each CSS pixel if the display used is a high resolution display."

[16:39:00.0000] <danbeam>
dbaron: question about css3-transitions - if I add two classes in quick succession to an element, and one class adds a -webkit-transition: -webkit-transform 1s; and the other adds -webkit-transform: scale(2); (for example), what should happen?

[16:40:00.0000] <hober>
danbeam: if you added the classes in that order, the transition should apply

[16:45:00.0000] <danbeam>
hober: that was my thinking as well, however I'm having to wait til the next JS/UI turn by scheduling a setTimeout to add the trans*form* class (on some platforms)

[16:46:00.0000] <danbeam>
I think this is an implementation difference, not specified behavior, though (like as you said, it *should* work)

[16:48:00.0000] <hober>
oh, i see. yeah, it makes sense that you could see both behaviors

[16:48:01.0000] <hober>
and either behavior is justifiable

[16:49:00.0000] <danbeam>
because style updates aren't guaranteed to be instant for performance benefits?

[16:49:01.0000] <danbeam>
s/instant/sync/

[16:49:02.0000] <hober>
more or less

[16:50:00.0000] <danbeam>
I may try a .innerText access or a getComputedStyle() and see if this ensures things are flushed synchronously

[16:50:01.0000] <divya>
danbeam: afaik all browsers repaint at one go

[16:51:00.0000] <divya>
which is why you wont see changes unless you setTimeout

[16:51:01.0000] <danbeam>
divya: it's strange, Chromium for Linux and (it seems) OSX work fine in this regard, but on Windows it doesn't work unless I schedule a class addition later

[16:52:00.0000] <divya>
really? when I tested you had to do setTimeout

[16:52:01.0000] <danbeam>
anyways, I just wanted to see if it was specified or not (like I said)

[16:52:02.0000] <divya>
if you are changing immediately

[16:52:03.0000] <divya>
e.g. addClass("blur"); removeclass("blur");

[16:53:00.0000] <danbeam>
divya: http://jsfiddle.net/X6EFX/ works for me on OSX, Chrome 14

[16:53:01.0000] <danbeam>
/me inb4 "Y U NO Opera?"

[16:54:00.0000] <danbeam>
(sorry, just checking on Chrome for right now)

[16:55:00.0000] <divya>
danbeam: err thats not the case i referred to

[16:55:01.0000] <divya>
the case is when you add/remove classnames and expect it to trigger a transition

[16:57:00.0000] <danbeam>
divya: PM

[16:58:00.0000] <divya>
k


2011-09-30
[17:03:00.0000] <Hixie>
hober: isn't there equivalent text outside the example?

[17:05:00.0000] <dbaron>
danbeam, hober, it's explicitly undefined in the spec, and one of the architectural issues with transitions

[17:06:00.0000] <dbaron>
"Since this specification does not define when computed values change, and thus what changes to computed values are considered simultaneous, authors should be aware that changing any of the transition properties a small amount of time after making a change that might transition can result in behavior that varies between implementations, since the changes might be considered simultaneous in some implementations but not others."

[17:07:00.0000] <dbaron>
er, wait, the case you mentioned is defined

[17:07:01.0000] <dbaron>
never mind

[17:07:02.0000] <hober>
Hixie: /me looks

[17:08:00.0000] <dbaron>
however, you might not get a transition if the element was never actually displayed with the previous value of transform

[17:10:00.0000] <hober>
Hixie: if there is I can't find it

[17:10:01.0000] <Hixie>
k let me look one sec

[17:11:00.0000] <Hixie>
i wonder if i broke this when i did the arraybuffer change

[17:12:00.0000] <Hixie>
no, looks like it was always broken

[17:12:01.0000] <Hixie>
ok

[17:13:00.0000] <Hixie>
can you send mail to whatwg mentioning that it doesn't say anywhere that getImageData() is to return the backing store directly?

[17:13:01.0000] <hober>
Hixie: will do

[17:13:02.0000] <hober>
Hixie: thanks

[17:13:03.0000] <Hixie>
thanks

[17:17:00.0000] <ojan>
TabAtkins: you there? i have moar flexbox questions.

[17:23:00.0000] <Philip`>
Hixie: Doesn't the "must result in no visible changes to the rendering" thing imply that getImageData must return the backing store, since anything else would be lossy?

[17:34:00.0000] <danbeam>
dbaron: where is the case I mentioned defined?

[17:38:00.0000] <dbaron>
danbeam, "When the computed value of an animatable property changes, implementations must decide what transitions to start based on the values of the ‘transition-property’, ‘transition-duration’, ‘transition-timing-function’, and ‘transition-delay’ properties at the time the animatable property would first have its new computed value. "

[17:40:00.0000] <Hixie>
Philip`: good point

[17:40:01.0000] <Hixie>
Philip`: maybe i should add a note to that effect?

[17:48:00.0000] <hober>
Hixie: sounds good to me

[17:51:00.0000] <Hixie>
ok i'll turn the paragraph you (hober) quoted earlier into a note after the paragraph Philip` quoted

[17:51:01.0000] <Hixie>
sound good?

[17:52:00.0000] <Hixie>
aw man, bug 13328 is gonna be a pain

[17:52:01.0000] <Hixie>
i guess i should write a script to do the conversion automatically

[17:56:00.0000] <Hixie>
ok i checked in the change above

[18:06:00.0000] <danbeam>
hober, dbaron: thank you for your help

[22:24:00.0000] <Hixie>
i like anne's newscaster style for the whatwg weeklies

[22:24:01.0000] <Hixie>
just needs some good music to go with it.

[23:07:00.0000] <nessy>
Hixie: would it be appropriate to send an email to whatwg about what is happening around webvtt at W3C?

[23:07:01.0000] <Hixie>
i'll do it once something actually happens

[23:08:00.0000] <nessy>
did you see http://www.w3.org/community/texttracks/ ?

[23:08:01.0000] <nessy>
the group actually got created today, so I thought it appropriate to explain why we're doing it

[23:08:02.0000] <nessy>
happy for you to do it if you prefer

[23:08:03.0000] <Hixie>
group creation doesn't count as "something actually happening" :-)

[23:09:00.0000] <nessy>
fair enough :-)

[23:09:01.0000] <Hixie>
annevk5: http://www.youtube.com/watch?v=1Bg5BPnmj68

[23:09:02.0000] <Hixie>
enjoy :-)

[23:13:00.0000] <nessy>
lol

[01:06:00.0000] <annevk5>
haha

[02:12:00.0000] <annevk5>
nessy, maybe announce the WebVTT CG and whether it plans to fork or not on the WHATWG list?

[02:12:01.0000] <annevk5>
nessy, somewhat unclear what the relation to the WHATWG is from your blog post

[02:39:00.0000] <annevk>
oh missed the earlier conversation somehow

[03:12:00.0000] <hsivonen>
annevk: do you have any guestimate when you'll get to the XHR2 text/html charset feedback?

[03:18:00.0000] <annevk>
hsivonen, I wanted to address it by using the parser hooks Hixie gave

[03:18:01.0000] <annevk>
hsivonen, Hixie will be creating*

[03:19:00.0000] <annevk>
hsivonen, for the responseText issue, we could wait with decoding until the first 1024 bytes are received for text/html encoding I suppose

[03:20:00.0000] <annevk>
hsivonen, and if chunked-text gets standardized just force UTF-8 I guess

[03:20:01.0000] <annevk>
(there's no relation to Document there so no reason to make things difficult)

[03:26:00.0000] <hsivonen>
annevk: Works for me. Let's hope there isn't much text/html responseText comet usage in the wild...

[03:27:00.0000] <hsivonen>
annevk: so the "text" mode would require running <meta> prescan although the HTML parser wouldn't otherwise be involved?

[03:27:01.0000] <hsivonen>
hmm. smaug and sicking aren't here now. :-(

[03:27:02.0000] <annevk>
I don't want to make "text" magic

[03:28:00.0000] <annevk>
responseText should work the same for empty string responseType and "text"

[03:28:01.0000] <hsivonen>
annevk: ok

[03:28:02.0000] <hsivonen>
smaug wanted "text" and chunked text to work the same

[03:29:00.0000] <hsivonen>
but we can't have all these properties

[03:30:00.0000] <annevk>
don't really see why chunked text would do special things for e.g. XML

[03:31:00.0000] <annevk>
but then I'm not sure we want chunked text in the first place

[04:20:00.0000] <zcorpan>
annevk: in xhr2, you should say in the note around "network error" that it includes "CORS check failed"

[04:21:00.0000] <zcorpan>
annevk: i had to read the CORS spec to figure out what should happen in xhr2 when the cors check fails

[04:23:00.0000] <annevk>
I don't follow

[04:23:01.0000] <annevk>
For XHR you need to know "cross-origin request status"

[04:23:02.0000] <annevk>
which is defined by CORS

[04:23:03.0000] <annevk>
so yes, you need to read CORS

[04:26:00.0000] <zcorpan>
if i'm an author, and want to use somebody else's CORS-enabled resource, i want to only read the xhr spec

[04:26:01.0000] <zcorpan>
and know what behavior will kick in when the CORS check fails

[04:27:00.0000] <zcorpan>
right now it appears to be undefined (but it's not, the Note is just wrong)

[04:28:00.0000] <zcorpan>
(uh, maybe i was reading an unrelated Note)

[04:29:00.0000] <zcorpan>
network error

[04:29:01.0000] <zcorpan>
A DNS error, TLS negotation failure, or other type of network error occured. This does not include HTTP responses that indicate some type of error, such as HTTP status code 410.

[04:29:02.0000] <zcorpan>
says the cors spec

[04:29:03.0000] <zcorpan>
but network error includes failed CORS check

[04:31:00.0000] <hsivonen>
I'm all for mentioning CORS there, but will doing so deadlock both specs on the REC track?

[04:32:00.0000] <hsivonen>
(I'd probable prefer specs that tell the whole truth over specs that advance on the REC track)

[04:33:00.0000] <zcorpan>
the note was in the cors spec

[04:35:00.0000] <jgraham>
hsivonen: The solution is to not care about the rec track

[04:47:00.0000] <annevk>
I'm even more confused now

[04:47:01.0000] <hsivonen>
maybe I'm confused

[04:48:00.0000] <annevk>
zcorpan, so in XMLHttpRequest you are reading the "same-origin request event rules" and expect they apply to CORS scenarios?

[04:49:00.0000] <zcorpan>
annevk: no i realized that was bogus :)

[04:49:01.0000] <zcorpan>
annevk: what i did originally was follow the link in the xhr cross-origin steps and came to cors's definition of "network error"

[04:50:00.0000] <zcorpan>
annevk: which doesn't say that it includes CORS check fail

[04:50:01.0000] <zcorpan>
but it does

[04:51:00.0000] <annevk>
so http://dvcs.w3.org/hg/cors/raw-file/tip/Overview.html#cross-origin-request-status (not XMLHttpRequest) should be clearer about "network error"?

[04:51:01.0000] <zcorpan>
yeah

[04:51:02.0000] <annevk>
I would agree that should probably include "the resource cannot be shared"

[04:57:00.0000] <annevk>
zcorpan, done

[05:00:00.0000] <zcorpan>
annevk: thanks!

[07:23:00.0000] <benjoffe>
I missed the whole discussion on why '$' was chosen as the subject modifier

[07:24:00.0000] <benjoffe>
but "E:has-descendent(selector)" seems much more fitting to the existing pattern

[07:25:00.0000] <benjoffe>
is there a strong reason to choose $ over that pattern?

[07:27:00.0000] <zcorpan>
specificity?

[07:27:01.0000] <zcorpan>
shorter?

[07:28:00.0000] <benjoffe>
could be E:has(selector)

[07:30:00.0000] <zcorpan>
still different specificity

[07:30:01.0000] <jgraham>
The people who invented selectors hate readability?

[07:30:02.0000] <zcorpan>
/me wasn't part of the discussion though

[07:31:00.0000] <zcorpan>
though there's :matches and :not already

[07:31:01.0000] <zcorpan>
so yeah

[07:32:00.0000] <annevk>
no idea

[07:34:00.0000] <bga_>
annevk, question about opera. Do you plan to add text selection on page w/o mouse. i really <3 shift + arrows but want cursor to select text as in design mode too.

[07:42:00.0000] <annevk>
bga_, I think so, but I'm not sure what the ETA is

[07:46:00.0000] <benjoffe>
sounds like an extension could be made for it, might require ugly off screen textarea hacks though

[07:54:00.0000] <annevk>
added appendChild("trololol") and friends to the DOM

[07:55:00.0000] <annevk>
taking bets on whose first to implement and ship

[07:56:00.0000] <Ms2ger>
Not us

[07:57:00.0000] <Ms2ger>
We don't support overloading yet :(

[07:57:01.0000] <bga_>
annevk appendChild('<pre>1</pre>')?

[07:58:00.0000] <annevk>
bga_, it's not HTML

[07:58:01.0000] <bga_>
textnode?

[07:58:02.0000] <annevk>
yes

[07:58:03.0000] <Ms2ger>
Right

[07:59:00.0000] <Ms2ger>
Also, hi annevk

[07:59:01.0000] <annevk>
wb Ms2ger

[07:59:02.0000] <bga_>
annevk i can make monkey patch which do that :)

[07:59:03.0000] <Ms2ger>
Do it :)

[08:00:00.0000] <bga_>
sec

[08:01:00.0000] <annevk>
stuff like http://annevankesteren.nl/2005/05/greasemonkey does not count ;)

[08:02:00.0000] <Ms2ger>
annevk, isn't that how Opera passed Acid3? ;)

[08:07:00.0000] <bga_>
annevk http://pastie.org/2617153

[08:08:00.0000] <annevk>
stuff like that works?

[08:08:01.0000] <annevk>
crazy

[08:08:02.0000] <Ms2ger>
Sure does

[08:10:00.0000] <Ms2ger>
# [15:27] <annevk5> where is ms2ger?

[08:10:01.0000] <Ms2ger>
Anything in particular you needed me for?

[08:12:00.0000] <annevk>
prolly to take a look at the exception stuff

[08:13:00.0000] <Ms2ger>
Mm

[08:13:01.0000] <Ms2ger>
My opinion on anything related to exceptions is "meh", fwiw

[08:14:00.0000] <annevk>
fair enough

[08:14:01.0000] <annevk>
wonder why smaug hasn't landed your EventException patch

[08:14:02.0000] <annevk>
kind of lame

[08:17:00.0000] <annevk>
anyone know when heycam is going to be back?

[08:17:01.0000] <annevk>
I would rather not define how to handle some arbitrary JS Object myself

[08:19:00.0000] <Ms2ger>
<heycam> just dropping in to say I'm on vacation for the next 4 weeks, see you all later

[08:19:01.0000] <Ms2ger>
From the ninth

[08:22:00.0000] <Ms2ger>
Hixie, any reason you didn't close http://www.w3.org/Bugs/Public/show_bug.cgi?id=13030?

[08:22:01.0000] <annevk>
thanks

[09:24:00.0000] <Hixie>
Ms2ger: just a mistake, i think

[09:24:01.0000] <Hixie>
annevk: if there are hooks you need sooner rather than later, please mark the relevant bugs critical

[09:26:00.0000] <annevk>
thanks, guess I'll do that to help hsivonen out

[11:06:00.0000] <boblet>
does anyone have a good reason why <u> is more appropriate than <mark> for indicating spelling errors, other than default rendering?

[11:15:00.0000] <Hixie>
boblet: it's the same reason why <dfn> is more appropriate than <cite> for indicating definitions

[11:17:00.0000] <boblet>
Hixie: I’d guess you mean more specific, except that <cite> doesn’t seem appropriate for definitions :) for me the semantics seem a little closer in that case

[11:17:01.0000] <boblet>
(that case = spell checker)

[11:17:02.0000] <Hixie>
boblet: <mark> is as appropriate for spelling mistakes as <cite> is for definitions :-)

[11:18:00.0000] <Hixie>
boblet: <mark>'s definition is "a run of text in one document marked or highlighted for reference purposes, due to its relevance in another context"

[11:18:01.0000] <Hixie>
boblet: unless you're specifically talking about the spelling mistakes, that definition doesn't have anything to do with spelling

[11:20:00.0000] <boblet>
Hixie: for me highlighting and annotating were closer, but I can see <u> is more appropriate

[11:21:00.0000] <boblet>
Hixie: while you’re around, CJK etc languages with non-western name order sometimes indicate the family name via capitalisation, underline or aside. would you say <u> would be appropriate for e.g. hcard, restyled to text-transform:uppercase?

[11:21:01.0000] <Hixie>
sure

[11:22:00.0000] <boblet>
that usage isn’t so popular, eg. Wikipedia has an aside, but I’ve seen it used for Japanese names before

[11:22:01.0000] <Hixie>
an aside?

[11:23:00.0000] <boblet>
well, a note above the article’s introduction stating the name order and which word is the family name

[11:23:01.0000] <Hixie>
ah

[11:23:02.0000] <Hixie>
weird

[11:24:00.0000] <boblet>
eg: http://en.wikipedia.org/wiki/Mao starts with “This is a Chinese name; the family name is Mao”

[11:25:00.0000] <boblet>
well, capitalising etc could be perceived as western imperialism as western names don’t get that treatment :)

[11:34:00.0000] <Hixie>
boblet: oh, well, no markup is necessary in the case of the wikipedia convention

[11:34:01.0000] <Hixie>
boblet: certainly i wouldn't expect <u> to be used. <aside> maybe.

[11:35:00.0000] <boblet>
true, true. but good to know <u> works for cases when the family name is directly indicated (as hcard needs wrapper elements anyhow)

[11:38:00.0000] <Hixie>
boblet: yeah, <u> is perfect for that. <u> is for when you are annotating something, but not explicitly saying what it is.

[11:39:00.0000] <Hixie>
boblet: i.e. where the annotation's meaning is implied by context

[11:40:00.0000] <boblet>
Hixie: yup :) just checking I understand before publishing. playing it safe after getting a little burned on <footer> in <blockquote> :D

[11:41:00.0000] <boblet>
didn’t know about proper name marks either — interesting

[11:42:00.0000] <TabAtkins>
521042

[11:42:01.0000] <Hixie>
boblet: heh, understood!

[11:43:00.0000] <TabAtkins>
Dammit, focus'd the wrong window.

[11:43:01.0000] <Hixie>
TabAtkins: 521043?

[11:43:02.0000] <TabAtkins>
Well, that OTP expires in a few seconds.

[11:43:03.0000] <Hixie>
892729!

[11:43:04.0000] <boblet>
90210!!

[11:43:05.0000] <Hixie>
-43.4i+2!

[11:43:06.0000] <TabAtkins>
[1,2,3,4]!

[11:44:00.0000] <boblet>
hey TabAtkins, why is text-decoration specced as “Value: <text-decoration-line> || <text-decoration-color> || <text-decoration-style>”, not line, style then color (which would be more in keeping with border)?

[11:45:00.0000] <TabAtkins>
I have no idea.  The ordering is insignificant, though.

[11:46:00.0000] <boblet>
TabAtkins: I (now) know that, but I suspect ppl who don’t understand || won’t realise that. I couldn’t find || in the CSS syntax doc btw

[11:46:01.0000] <boblet>
might email www-style about it…

[11:46:02.0000] <TabAtkins>
Syntax is wildly out of date (I have a note on my whiteboard to volunteer to put a big "THIS IS OBSOLETE STOP LOOKING AT IT" marker on several specs).

[11:46:03.0000] <Ms2ger>
TabAtkins, is the ordering still insignificant wrt CSSOM serialization?

[11:46:04.0000] <TabAtkins>
It's explained in 2.1, though.

[11:46:05.0000] <Ms2ger>
TabAtkins, please do :)

[11:47:00.0000] <boblet>
everything in TR? [ducks]

[11:47:01.0000] <TabAtkins>
Ms2ger: Nobody follows CSSOM serialization so far.

[11:47:02.0000] <TabAtkins>
Or at least, that part of it.

[11:47:03.0000] <Ms2ger>
boblet, yes, please

[11:48:00.0000] <boblet>
Ms2ger: kk

[11:48:01.0000] <Ms2ger>
TabAtkins, nobody follows any spec, as a first approximation ;)

[11:49:00.0000] <TabAtkins>
Ms2ger: "Doesn't exactly match every single detail" and "completely ignores" are pretty different.

[11:49:01.0000] <Hixie>
TabAtkins: the ordering isn't insignificant, it impacts serialisation

[11:50:00.0000] <TabAtkins>
Hixie: See above conversation.

[11:50:01.0000] <Ms2ger>
Hixie, beat you to it :)

[11:50:02.0000] <Hixie>
i was still reading :-)

[11:50:03.0000] <Hixie>
TabAtkins: they certainly won't implement it while the order is treated as insignificant in the specs :-)

[11:50:04.0000] <Hixie>
at least not interoperably :-)

[11:50:05.0000] <TabAtkins>
^_^

[11:55:00.0000] <Hixie>
any opinions on http://www.w3.org/Bugs/Public/show_bug.cgi?id=13174#c2 ?

[11:55:01.0000] <Hixie>
it seems a bit dubious to me, but i can't quite work out what i'd suggest instead

[11:56:00.0000] <TabAtkins>
The example in #7 seems reasonable.

[11:59:00.0000] <Hixie>
annevk: you around?

[11:59:01.0000] <Hixie>
#7 is the real-world instance of #2

[11:59:02.0000] <TabAtkins>
Yes, I know.

[11:59:03.0000] <Hixie>
my concern is that people will start putting all kinds of shit in <th>, like <hx>, <article>s, etc

[12:00:00.0000] <Hixie>
but i agree that that specific example seems like the least bad way of marking up that semantic

[12:00:01.0000] <Hixie>
i guess i could explicitly only allow non-sectioning, non-heading content or something

[12:00:02.0000] <TabAtkins>
Just put an example in, explaining what not to do?  Specifically, the spec could probably do with some text about Aryeh's example.

[12:00:03.0000] <Hixie>
yeah, maybe being explicit in an example is enough?

[12:05:00.0000] <Hixie>
annevk: see webapps

[12:27:00.0000] <danbeam>
Hixie: can you help me interpret HTML5 7.6.5, second ordered list, 4.1-2 (http://dev.w3.org/html5/spec/dnd.html#drag-and-drop-processing-model)?

[12:28:00.0000] <danbeam>
(or anybody else that's well versed with this spec.)

[12:28:01.0000] <Ms2ger>
danbeam, give me a link to the whatwg version and I can try :)

[12:29:00.0000] <danbeam>
Ms2ger: http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#drag-and-drop-processing-model

[12:30:00.0000] <danbeam>
Ms2ger: (second ordered list, 4.1-2)

[12:31:00.0000] <danbeam>
Ms2ger: my question is simply, "If there will be a 'drop' event, should it *have* to complete before a 'dragend'?"

[12:33:00.0000] <Ms2ger>
I think so, yes

[12:33:01.0000] <danbeam>
Ms2ger: it sure seems to be implied that it's a "yes"

[12:43:00.0000] <Hixie>
danbeam: what do you mean by "complete"?

[12:44:00.0000] <danbeam>
Hixie: should a "drop" event fire and be synchronously executed and completed before a "dragend" event is fired?

[12:45:00.0000] <TabAtkins>
annevk: I can't find the CSSValue interface defined anywhere in CSSOM.  Am I missing something?

[12:47:00.0000] <Ms2ger>
TabAtkins, I assume he means the CSS*Value interfaces at http://dev.w3.org/csswg/cssom/Overview.html#the-csspropertyvalue-interface and later

[12:48:00.0000] <TabAtkins>
Ms2ger: Well, 6.6.4 and 6.6.5 have things specifically returning a CSSValue.

[12:49:00.0000] <Ms2ger>
So they do

[12:50:00.0000] <Hixie>
danbeam: unless one of the event handlers dispatches its own event, event dispatch is always entirely synchronous within a task

[12:50:01.0000] <TabAtkins>
annevk: Maybe you mean CSSComponentValue there, and for the other types like CSSStringComponentValue to inherit from CSSComponentValue?

[12:50:02.0000] <Ms2ger>
I assume it'll be a superclass, then

[12:51:00.0000] <TabAtkins>
Yeah, for now I'm just going to ape what CSSOM is doing.

[12:57:00.0000] <danbeam>
Hixie: yes, that was my understanding as well, but check your PM

[12:58:00.0000] <Hixie>
yeah i looked at that

[12:58:01.0000] <danbeam>
Hixie: ok

[13:00:00.0000] <danbeam>
Ms2ger, Hixie: thank you for your help

[13:00:01.0000] <Ms2ger>
Np

[13:09:00.0000] <annevk>
/me wonders what sicking is on about

[13:10:00.0000] <annevk>
TabAtkins, what is the context you are talking about?

[13:10:01.0000] <annevk>
TabAtkins, nothing inherits from each other and nothing is exposed to prevent code from depending on specifics that can later be changed (if we change e.g. what value a property takes)

[13:11:00.0000] <annevk>
TabAtkins, basically a given property will return an object that implements several CSS value related interfaces

[13:11:01.0000] <annevk>
Hixie, thanks for the email, hopefully hsivonen will look into it

[13:16:00.0000] <TabAtkins>
annevk: Hm, okay.  Well, I'm trying to define what I assume will be CSSVariableComponentValue.  If it doesn't inherit from CSSComponentValue, it needs to expose a .value by itself?

[13:33:00.0000] <rniwa>
AryehGregor: if you're specing selection behavior, please make sure to spec selectstart event as well

[13:33:01.0000] <rniwa>
AryehGregor: in particular, bugs like https://bugs.webkit.org/show_bug.cgi?id=66948 are interesting to follow

[13:35:00.0000] <annevk>
TabAtkins, no, all properties accepting <variable> would simply implement CSSVariableComponentValue as well

[13:36:00.0000] <annevk>
I looked again at CSSOM today and yesterday and wondered what I would need to change, but I still think the current model is sensible

[13:36:01.0000] <TabAtkins>
Yes, but CSSVariableComponentValue itself has a name and a value.

[13:36:02.0000] <annevk>
The problem is I guess that it's a) difficult and b) not implemented yet

[13:37:00.0000] <annevk>
TabAtkins, ah yeah, you would have to name them variableName and variableValue

[13:37:01.0000] <TabAtkins>
Ah, kk.

[13:37:02.0000] <annevk>
sweet

[13:37:03.0000] <annevk>
gonna get some cocktails now :)

[13:37:04.0000] <TabAtkins>
I'll ping you for review on this stuff later.

[13:38:00.0000] <annevk>
great

[13:38:01.0000] <sicking>
annevk: what do you mean?

[13:38:02.0000] <TabAtkins>
Drink a cocktail for me!

[13:39:00.0000] <sicking>
/me heads out to lunch

[13:50:00.0000] <Ms2ger>
http://lists.w3.org/Archives/Member/w3c-css-wg/2011JulSep/0297.html

[13:50:01.0000] <Ms2ger>
For your enjoyment

[13:51:00.0000] <TabAtkins>
That's so last week, Ms2ger.

[13:51:01.0000] <Ms2ger>
No comment

[13:51:02.0000] <TabAtkins>
Btw, the correct answer is "Make the change you want to the template without asking anyone, because everyone's crazy."

[13:52:00.0000] <TabAtkins>
My mistake there.

[13:52:01.0000] <Ms2ger>
"everyone's crazy."

[13:52:02.0000] <Ms2ger>
I could have told you that :)

[13:54:00.0000] <TabAtkins>
If I define a getter in idl, do I just define the meaning of it in prose?

[13:54:01.0000] <Ms2ger>
Yes

[13:54:02.0000] <TabAtkins>
Also: I don't understand what makes "creator" different from "setter".

[13:55:00.0000] <Ms2ger>
creator is when the property doesn't exist yet, setter is when it does

[13:55:01.0000] <Hixie>
what Ms2ger said

[13:55:02.0000] <TabAtkins>
I suspected as much, but wasn't sure.

[13:55:03.0000] <TabAtkins>
ok.

[14:06:00.0000] <sicking>
back

[15:02:00.0000] <rniwa>
Hixie: sorry about the delay in responding to your stuff

[15:02:01.0000] <rniwa>
Hixie: I think I still have to ask you about some cache state

[15:03:00.0000] <rniwa>
Hixie: I'm intending to work on it next week. I've been ramped up by a bunch of regression fixes in WebKit in the last couple of weeks :(

[15:03:01.0000] <rniwa>
Hixie: but I just replied to your bug about drag&drop

[15:03:02.0000] <rniwa>
/me needs to respond to clipboard API spec as well

[15:04:00.0000] <rniwa>
man... participating in standardization process requires such a time commitment

[15:05:00.0000] <dsfsf>
uh huh

[15:19:00.0000] <sicking>
Hixie: ping

[15:59:00.0000] <Hixie>
rniwa: don't worry about delay, i often have month-long lag with dealing with stuff :-/

[15:59:01.0000] <Hixie>
sicking: pong

[16:01:00.0000] <sicking>
Hixie: drats, i forget what i was going to ask :(

[16:01:01.0000] <sicking>
Hixie: well, since i have your attention, do you read bugzilla.m.o bugmail?

[16:01:02.0000] <Hixie>
sicking: i read some of it. i have filters. i don't follow as many active people as i used to so i don't get as much as i'd like these days.

[16:02:00.0000] <Hixie>
sicking: if i'm cc'ed and the comment says "HTML5" or "WHATWG" or other similar keywords I tend to see it

[16:02:01.0000] <sicking>
Hixie: specifically https://bugzilla.mozilla.org/show_bug.cgi?id=641148

[16:02:02.0000] <Hixie>
didn't see that one, no

[16:02:03.0000] <Hixie>
looking now

[16:04:00.0000] <Hixie>
henri's comment seems accurate

[16:05:00.0000] <sicking>
Hixie: well.. i don't have an opinion on the sg: rating

[16:05:01.0000] <sicking>
Hixie: but it does seem like having consistent <script> parsing no matter where the markup appears has lots of advantages

[16:05:02.0000] <Hixie>
it has advantages and disadvantages, sure

[16:06:00.0000] <sicking>
Hixie: though at this point I suspect the person to convince is Henri

[16:06:01.0000] <sicking>
?

[16:06:02.0000] <sicking>
Hixie: what are the disadvantages?

[16:06:03.0000] <Hixie>
well, convincing henri is both sufficient and necessary, so probably, yes :-)

[16:06:04.0000] <sicking>
Hixie: also, *everything* has disadvantages, the question is how big they are

[16:06:05.0000] <Hixie>
disadvantages include the issues he listed

[16:06:06.0000] <Hixie>
like being able to take svg and put it in html and just have it work

[16:07:00.0000] <Hixie>
a new disadvantage here is that it would involve breaking compat with shipped browsers

[16:08:00.0000] <sicking>
Hixie: the SVG WG says that copy-paste of SVG should work just fine

[16:08:01.0000] <Hixie>
the SVG WG says a lot of things

[16:08:02.0000] <Hixie>
doesn't mean they're true :-)

[16:08:03.0000] <sicking>
sure, but in this case i'd their experience over yours to be honest

[16:09:00.0000] <Hixie>
there's plenty of scripts that say &gt; instead of > and similar, deep inside a for loop

[16:09:01.0000] <sicking>
in SVG?

[16:09:02.0000] <Hixie>
in scripts in SVG or other XML

[16:10:00.0000] <sicking>
other XML doesn't matter here

[16:10:01.0000] <Hixie>
i'm sure authors would just put up with it if we made it so that such scripts would need changing

[16:10:02.0000] <Hixie>
but it _would_ mean that you can't just copy and paste

[16:10:03.0000] <sicking>
likewise they'd put up with it if they have to adjust the script when copy-pasting

[16:10:04.0000] <Hixie>
also, we'd have to change the CDATA thing

[16:10:05.0000] <Hixie>
anyway, as you said earlier, i'm not really the one to convince

[16:10:06.0000] <sicking>
ok

[16:10:07.0000] <sicking>
i'll chat with henri

[16:11:00.0000] <Hixie>
chat with abarth, too

[16:11:01.0000] <sicking>
yup

[16:11:02.0000] <sicking>
thanks

[16:12:00.0000] <Hixie>
seriously though, "the SVGWG said so" is no more convincing than "Hixie said so". if we're going to base this on what is compatible, then we'd need real data.

[16:12:01.0000] <Hixie>
not heresay or anecdotal evidence.

[16:12:02.0000] <Hixie>
(another difference would be comment parsing inside scripts, i wonder how many svg files have commented-out content in <script> blocks)

[16:13:00.0000] <sicking>
well.. i suspect that the SVG WG has a lot more experience looking at the markup that various tools output

[16:13:01.0000] <sicking>
and so far most of the SVG which is generated, is generated using tools i bet

[16:14:00.0000] <shepazu>
sicking: it certainly is

[16:14:01.0000] <shepazu>
usually inkscape, sometimes Illustrator

[16:15:00.0000] <shepazu>
I'm not convinced that just dropping SVG into HTML would necessarily work

[16:15:01.0000] <sicking>
especially when scripts are involved

[16:15:02.0000] <sicking>
since the DOM will be very different

[16:15:03.0000] <shepazu>
not even all SVG content generated by Inkscape or Illustrator works in browsers

[16:15:04.0000] <sicking>
the <svg> element won't be the documentElement for example

[16:16:00.0000] <shepazu>
yes, a lot of SVG with script assumes that SVG is the root

[16:16:01.0000] <shepazu>
right

[16:16:02.0000] <shepazu>
not sure who said it would just work...

[16:16:03.0000] <Hixie>
sicking: we've tried quite hard to make it so the DOM differences are minimised

[16:16:04.0000] <shepazu>
but I'm on the SVG WG, and I'm not at all confident about that

[16:17:00.0000] <Hixie>
sicking: btw i commented on the bug. i agree that it's a potential security risk, and i think henri underplays the risk. hopefully my comment will help.

[16:18:00.0000] <sicking>
Hixie: cool, thanks

[16:18:01.0000] <Hixie>
shepazu: when we first started working on adding svg parsing in html, the svg wg's most ardent request was that it be possible to take raw SVG files and paste them into text/html without modifications and have the parser handle it exactly as if it was SVG in XML

[16:19:00.0000] <Hixie>
shepazu: a number of reasons were given, such as making sure that errors made in editing SVG in HTML wouldn't be accepted and thus "corrupt" the pristine SVG ecosystem, and making it possible for output from SVG tools could be dropped straight into HTML files without work.

[16:19:01.0000] <shepazu>
Hixie: yes, I think that was a reasonable request

[16:19:02.0000] <shepazu>
I don't know for a fact that that was accomplished, either in the HTML5 spec or in implementations

[16:20:00.0000] <Hixie>
at least the second part of that is only reasonable if one is confident that SVG content dropped into HTML would in fact just work

[16:20:01.0000] <shepazu>
there's also author education around how to write the script correctly such that it doesn't break… but that's not really an authoring tool issue, unfortunately… not many good tools for scripting SVG

[16:39:00.0000] <dbaron>
TabAtkins, how stable is the to <side-or-corner> stuff for gradients in css3-images ?

[16:40:00.0000] <dbaron>
TabAtkins, (I've been asked to review a patch implementing it.)

[16:40:01.0000] <TabAtkins>
It's stable now.  I'm not changing anything now.  I plan in the near future to write an email explaining that I'm not changing anything about radial either.

