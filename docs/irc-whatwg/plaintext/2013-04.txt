2013-04-01
[00:45:50.0000] <cdan>
hello to everybody

[01:57:08.0000] <Ms2ger>
Ah, geocities is restored to the CSSWG

[03:29:30.0000] <odinho>
Ms2ger: Wat? They do geocities-css?

[03:30:01.0000] <Ms2ger>
http://dev.w3.org/csswg/css-values/

[03:33:10.0000] <odinho>
Ah, nice.  I have a site like that somewhere on the intarwebs too, but that's in some cobweb-ridden place where the sun never shines.

[03:37:06.0000] <odinho>
lol, NO FEAR

[04:15:25.0000] <Philip`>
Ms2ger: Looks nice, but needs more background MIDIs

[05:26:57.0000] <MikeSmit1>
http://lists.w3.org/Archives/Public/public-lod/2013Apr/0014.html

[07:57:37.0000] <zewt>
wow, the webkit api on android is in the dark ages (at least whatever version the fire has)

[07:58:42.0000] <zewt>
seems like it doesn't even have history.replaceState

[08:44:40.0000] <dglazkov>
good morning, Whatwg!

[08:54:22.0000] <Hixie_>
jgraham: and yet surprisingly few issues, all told :-)

[08:57:42.0000] <Ms2ger>
Hixie_, ... yet :)

[09:02:04.0000] <free_mind>
Can someone give me a pointer regarding a visual (WYSIWYG) editor on linux/BSD for changing a CSS template?

[09:02:07.0000] <TabAtkins>
odinho: Glad you caught the NO FEAR easter egg. ^_^

[09:02:40.0000] <TabAtkins>
<3 generated content

[09:04:02.0000] <SimonSapin>
TabAtkins: I saw it in the commit :)

[09:19:48.0000] <odinho>
TabAtkins: "the" it's quite a few places. Some of it fits, some of it not :-)

[09:20:24.0000] <TabAtkins>
odinho: It's just added on p::nth-child(10n+5)::after, so it'll show up everywhere.

[09:58:08.0000] <odinho>
Yeah, saw that. :]

[09:58:17.0000] <odinho>
But the first time it came up it really made sense :]

[09:58:39.0000] <TabAtkins>
Hahaha

[09:58:58.0000] <odinho>
So I wondered if it was actually part of the spec :P

[09:59:11.0000] <TabAtkins>
Also: oh man, I missed a lot of badass updates to NearlyFreeSpeech over the holiday. ipv6, https, and cron jobs!

[10:22:02.0000] <Hixie_>
anyone around with IE?

[10:22:30.0000] <Hixie_>
i just need to know which OPTION elements in the DOM tree view in http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2190 have #text children

[10:22:40.0000] <Hixie_>
in Chrome it's all of them, in Firefox it's all but the first

[10:27:27.0000] <Philip`>
Hixie_: In IE9, I see #text on the last two

[10:27:34.0000] <Hixie_>
thanks

[10:27:42.0000] <Hixie_>
three browsers, three behaviours

[10:27:43.0000] <Hixie_>
lovely

[10:28:09.0000] <Hixie_>
IE's and Chrome's can be described in terms of default values

[10:28:14.0000] <Hixie_>
Firefox's...

[10:29:33.0000] <Ms2ger>
/me wanders in

[10:29:47.0000] <Ms2ger>
What's up?

[10:30:22.0000] <TabAtkins>
Firefox has weird behavior for the Option constructor.

[10:30:39.0000] <TabAtkins>
It distinguishes between no argument and an empty string.

[10:30:46.0000] <Ms2ger>
It just looks at the number of arguments, sure

[10:30:57.0000] <Ms2ger>
/me looks at the new code

[10:32:03.0000] <Ms2ger>
Same thing

[10:32:22.0000] <Ms2ger>
Hixie_, I'm pretty sure we're willing to match Chrome here

[10:46:41.0000] <Hixie_>
Ms2ger: always create a text node? i was thinking of going with the IE behaviour of not creating the empty text node

[10:47:00.0000] <Hixie_>
the second argument is a weirder one, looks like we'll always have to check number of arguments for that one

[10:47:22.0000] <Ms2ger>
Always creating would be less code for us

[10:47:30.0000] <Ms2ger>
/me asks bz

[10:48:25.0000] <Hixie_>
it's an additional  if (val != '')

[10:48:49.0000] <Ms2ger>
Right

[10:48:51.0000] <Hixie_>
so let's put the implementation complexity issue aside and look at what authors want :-P

[10:48:59.0000] <Ms2ger>
That's the "less code" :)

[10:49:22.0000] <TabAtkins>
I suspect (1) most authors don't care at all, but (2) more consistency in produced result is better.

[10:51:06.0000] <Hixie_>
having an extra object around that has no purpose seems pretty weird

[10:51:26.0000] <Hixie_>
you don't get this object if you use createElement()

[10:51:30.0000] <TabAtkins>
It's purpose is to contain the text contents!

[10:51:36.0000] <Hixie_>
or if you use innerHTML = '<option></option>'

[10:51:44.0000] <TabAtkins>
Yeah, and you can't fill anything with text with createElement() either.

[10:51:56.0000] <Hixie_>
the text contents can also go in the .label

[10:52:18.0000] <Hixie_>
e4h-style or quasis wouldn't give you an empty text node either

[10:52:32.0000] <Hixie_>
it would be specific to this constructor

[10:52:42.0000] <Ms2ger>
I guess textContent wouldn't create one either

[10:52:47.0000] <Hixie_>
yup

[10:52:50.0000] <Hixie_>
in fact it would remove it

[10:55:48.0000] <Ms2ger>
Hixie_, alright, you get a "meh" from bz

[10:59:14.0000] <Hixie_>
Ms2ger: heh

[11:00:09.0000] <annevk>
Hixie_: optional boolean selected -> could make that default to false and simply set selectedness to it

[11:03:19.0000] <Hixie_>
annevk: already done, see next checkin

[11:03:27.0000] <Hixie_>
well, the default is false

[11:03:34.0000] <Hixie_>
the text isn't changed

[11:04:18.0000] <annevk>
can you default to a value if the next argument does not default to a value?

[11:04:38.0000] <Hixie_>
i hope so

[11:05:47.0000] <annevk>
hmm, oh well, not going to read up on that today

[11:09:19.0000] <Hixie_>
no optional value is presumably just the same as " = <magic unforgeable value meaning attribute is omitted>"

[11:09:24.0000] <TabAtkins>
annevk: Most languages with positional argument disallow that - once one argument gains a default value, everything following has to have one (because otherwise it's not really a default value at all, since you're forced to fill it in).

[11:09:29.0000] <Hixie_>
s/attributes/argument/

[11:09:46.0000] <TabAtkins>
JS is a bit different, of course, since it fills in missing argument with undefined.

[11:10:18.0000] <TabAtkins>
(Python is also different, because all positional arguments are *also* keyword arguments.)

[11:10:21.0000] <Hixie_>
TabAtkins: why are you forced to fill it in? i'm confused

[11:10:33.0000] <Hixie_>
oh you mean non-optional arguments

[11:10:41.0000] <Hixie_>
with default values

[11:10:52.0000] <Hixie_>
as opposed to optional arguments with default values like here

[11:10:52.0000] <Hixie_>
ok

[11:11:35.0000] <TabAtkins>
Hixie_: In most languages, there's no such thing as "non-optional arg with default values". ^_^

[11:11:40.0000] <Hixie_>
right

[11:11:57.0000] <Hixie_>
well, there is

[11:12:00.0000] <Hixie_>
it's all of them

[11:12:16.0000] <Hixie_>
it's more that there's no such thing as optional arg with default values

[11:12:22.0000] <TabAtkins>
If it's non-optional, that presumably means that you must fill it in.  So, when would the default value ever happen?

[11:12:26.0000] <TabAtkins>
lolwut?

[11:12:34.0000] <Hixie_>
there's three states

[11:12:43.0000] <Hixie_>
present, absent but has a default value, and absent without a default value

[11:12:58.0000] <Hixie_>
some languages only have two of these

[11:13:06.0000] <Hixie_>
which i assume is what you mean

[11:13:07.0000] <Hixie_>
right?

[11:13:11.0000] <Hixie_>
whereas here we have all three

[11:13:11.0000] <TabAtkins>
Yes.

[11:13:24.0000] <TabAtkins>
Well, because in most, the third case is an error.

[11:13:29.0000] <Hixie_>
right

[11:13:40.0000] <Hixie_>
or it's equivalent to an overload

[11:13:48.0000] <Hixie_>
or rather, done as an overload

[11:14:05.0000] <Hixie_>
so you can't have arguments after an optional one without a default, since it's not there to be after

[11:14:09.0000] <Hixie_>
anyway

[11:14:11.0000] <TabAtkins>
Yeah.

[11:29:53.0000] <Hixie_>
what is with people filing bugs whose values consist only of copy-and-pasted text from the spec?

[11:29:56.0000] <Hixie_>
i don't get it

[11:30:02.0000] <Hixie_>
i wonder how to catch that

[11:30:21.0000] <TabAtkins>
They forgot to put "^^^ THIS" afterwards.

[11:30:22.0000] <Hixie_>
i'm guessing document.documentElement.textContent.match() isn't a good plan on a 5MB document...

[11:30:43.0000] <Hixie_>
TabAtkins: i mean e.g. https://www.w3.org/Bugs/Public/show_bug.cgi?id=21488

[11:31:03.0000] <TabAtkins>
Yeah, I know.  I was being silly. ^_^

[11:31:10.0000] <TabAtkins>
But seriously, that's just dumb.

[11:32:17.0000] <Hixie_>
i don't understand how it happens

[11:48:49.0000] <SimonSapin>
TabAtkins: var() fallbacks can contain commas, right?

[11:49:51.0000] <SimonSapin>
either way, it should be explicit with both normative text and an example, not just implied by "same syntax as custom properties"

[11:51:38.0000] <SimonSapin>
And if it can, is it really useful to have the parser split function arguments on commas? Isn’t it easier if functions arguments are a single list of tokens, and everything (other than var()) can use the "Parse a comma-separated list" algorithm?

[12:21:57.0000] <TabAtkins>
SimonSapin: Maybe?

[12:22:07.0000] <TabAtkins>
Oh, and yes to your first question.

[12:23:26.0000] <SimonSapin>
arguments are a single list of tokens in tinycss

[12:32:35.0000] <TabAtkins>
Yeah, that probably makes more sense.

[12:50:49.0000] <SoWhat>
Hi! Do you know when meta tag I added yesterday will be recognized by html5 validators?

[12:55:08.0000] <MikeSmit1>
SoWhat: what exacctly did you add?

[13:01:06.0000] <SoWhat>
web_author meta tag to the wiki

[13:01:44.0000] <SoWhat>
http://www.metatags.info/meta_name_webauthor

[13:03:37.0000] <MikeSmith>
Hixie_: big thanks for adding the "Tag omission in text/html" stuff

[13:04:16.0000] <MikeSmith>
/me looks at SoWhat link

[13:05:24.0000] <MikeSmith>
SoWhat: why not just use name=author ?

[13:05:35.0000] <SoWhat>
author is totally different

[13:05:51.0000] <SoWhat>
http://www.metatags.info/meta_name_author

[13:07:32.0000] <Hixie_>
MikeSmith: np

[13:08:34.0000] <TabAtkins>
SoWhat: The description of "author" and "webauthor" appear to be copy-pasted with only minor edits.  I can't see any difference in them.

[13:10:08.0000] <MikeSmith>
SoWhat: what TabAtkins said. This http://www.metatags.info/ site doesn't really look authorative. It sorta looks like on guy's personal wish list or something.

[13:10:50.0000] <tantek>
MikeSmith, when have you ever seen an authorative .info site?

[13:11:15.0000] <tantek>
then again, meta tags themselves aren't very authoritative, so perhaps that makes sense

[13:11:46.0000] <Hixie_>
annevk: any idea if adam is planning on updating WebOrigin to use the new URL spec?

[13:12:09.0000] <SoWhat>
you are probably right.. maybe I should invent developer meta tag instead of using web author?

[13:12:26.0000] <Hixie_>
SoWhat: what problem are you trying to solve?

[13:12:30.0000] <MikeSmith>
tantek: true about .info sites

[13:12:45.0000] <Hixie_>
annevk: i'm in particular interested in how the host portion of origins, as used in document.domain, will handle IPv6 urls

[13:13:15.0000] <SoWhat>
Hixie_: I just want to put my credits in source of websites which I have created

[13:13:34.0000] <annevk>
Hixie_: "[::1]" ?

[13:14:13.0000] <annevk>
Hixie_: I don't know Adam's plans. I've been thinking of putting all origin-related requirements into Fetch

[13:14:46.0000] <tantek>
Some people, when confronted with a problem, think "I know, I'll use a meta tag." Now they have a meta problem. [with apologies to jwz]

[13:15:54.0000] <MikeSmith>
Hixie_: oh wow I see you added the attribute short descriptions too

[13:16:02.0000] <MikeSmith>
thanks thanks thanks

[13:16:07.0000] <MikeSmith>
this is great

[13:19:15.0000] <annevk>
so how is that done? are they added dynamically or via some template?

[13:19:21.0000] <annevk>
they didn't appear in the diff

[13:19:53.0000] <SoWhat>
so what do you think about adding <meta name="developer" .. >  ?

[13:20:38.0000] <Hixie_>
MikeSmith: my pleasure :-)

[13:20:45.0000] <Hixie_>
MikeSmith: you using them for something specific? :-)

[13:20:58.0000] <Hixie_>
SoWhat: what's wrong with a <!-- comment --> ?

[13:21:55.0000] <SoWhat>
there is no standart for web crawlers to index <!-- comment -->

[13:22:15.0000] <Hixie_>
you didn't say anything about crawlers indexing anything :-)

[13:22:16.0000] <SoWhat>
I want all my sites to be found in google later

[13:22:30.0000] <Hixie_>
ah, well, there's no way to guarantee that

[13:22:49.0000] <Hixie_>
but maybe look at google authorship markup?

[13:23:08.0000] <Hixie_>
gotta go, hopefully tantek or someone will take over again :-)

[13:23:09.0000] <Hixie_>
bbiab

[13:23:57.0000] <SoWhat>
Hixie_: :) I don't want to see my face next to these sites :D

[13:24:45.0000] <SoWhat>
there is huge difference between person who is writing content for website and person/company who created website

[13:25:09.0000] <tantek>
SoWhat - the fastest way to get your sites found in google is by publishing with open standards, in particular make sure each page has its updates posted in the HTML, with permalinks, and an equivalent feed in Atom, and the updates use PubsubHubbub to ping the Google hub.

[13:25:33.0000] <tantek>
using rel author is nice but not required

[13:25:55.0000] <tantek>
http://microformats.org/wiki/rel-author

[13:26:14.0000] <SimonSapin>
TabAtkins: Separate ident/ident-rest states, isn’t that redundant with checking "starts with an identifier" before switching to the ident state?

[13:26:15.0000] <SoWhat>
ehh

[13:26:38.0000] <SoWhat>
tantek: do you know Wordpress?

[13:26:45.0000] <SimonSapin>
ie. could remove ident, rename ident-rest to ident, keep equivalent behavior

[13:27:06.0000] <SoWhat>
In wordpress you have lots of authors who are writing their posts

[13:27:26.0000] <SimonSapin>
TabAtkins: same with number/number-rest, maybe

[13:27:51.0000] <SoWhat>
and in each post wordpress writes its author in rel=author

[13:27:53.0000] <TabAtkins>
SimonSapin: Probably.  I was overly cautious with some of my states in the initial draft.

[13:28:21.0000] <SimonSapin>
well, the "starts with an identifier" arrived much later than ident/ident-rest

[13:28:42.0000] <SimonSapin>
but now that it’s there, I guess the rest can simplify

[13:29:11.0000] <TabAtkins>
Yeah, I haven't fully simplified a lot of the stuff related to the "start with..." stuff.

[13:32:17.0000] <tantek>
SoWhat - yes that makes sense for a multi-author / group blog

[13:32:53.0000] <tantek>
it's best if they use rel=author to link from their posts to their own websites, and then use rel=me to link from their own website to their various social network profiles, Twitter, FB, G+, etc.

[13:33:33.0000] <SoWhat>
tantek: but there is only one person/company who has written code for this blog and I am this person for lots of websites

[13:34:25.0000] <tantek>
shouldn't need any "code" other than the <a href rel=author> markup

[13:35:08.0000] <SoWhat>
I just want to ask google "Show me websites with meta tag developer where content is SoWhat" and see all these websites I have developed

[13:35:42.0000] <SoWhat>
not posts where I am mentioned as author

[13:36:09.0000] <SoWhat>
so forget about author :)

[14:09:06.0000] <pilgrim_google>
well, i'm back

[14:09:14.0000] <pilgrim_google>
i grew a beard and got a tattoo

[14:09:14.0000] <TabAtkins>
Woo!

[14:09:22.0000] <TabAtkins>
Both good moves, from experience.

[14:09:22.0000] <pilgrim_google>
and i'm writing a game for the Apple //

[14:09:23.0000] <nimbu>
pilgrim_google: nice april fools joke :'(

[14:26:56.0000] <pilgrim_google>
currently it boots to the title screen, plays some music, and then crashes

[14:27:11.0000] <pilgrim_google>
it's beta

[14:31:25.0000] <tantek>
good afternoon whatwg

[14:31:42.0000] <tantek>
a few of us in #indiewebcamp (that happened to also be in #microformats) are discussing a few new rel values

[14:31:54.0000] <tantek>
wondered if anyone here has any naming / bikeshedding suggestions

[14:32:08.0000] <tantek>
this is for linking to the "current

[14:32:21.0000] <tantek>
version" of a page, or to the previous (historical) version of a page

[14:32:28.0000] <tantek>
details: http://microformats.org/wiki/version

[14:33:08.0000] <tantek>
or feel free to just make simple a/b suggestions,e.g. rel=version or rel=revision

[14:33:13.0000] <tantek>
rel=current or rel=latest

[14:33:21.0000] <tantek>
?

[14:33:43.0000] <tantek>
oh hey pilgrim_google, you know a few things about rel values ;)

[14:37:49.0000] <Hixie_>
SoWhat: google doesn't have a mechanism to show all pages whose web dev was a particular person

[14:38:02.0000] <Hixie_>
SoWhat: so it doesn't matter what markup you use, if that's what you want

[14:38:47.0000] <SoWhat>
but it has a mechanism to show websites which use meta tag with particular value, right?

[14:40:48.0000] <TabAtkins>
No.

[14:51:27.0000] <SoWhat>
okay, than there are other web crawlers which do that, for example, http://www.statsnext.com/domain/ditfi.lv and their stats are visible in google

[14:58:41.0000] <Hixie_>
SoWhat: looks like for that one it doesn't matter what meta name you use

[14:58:45.0000] <Hixie_>
they seem to expose all of them

[14:58:58.0000] <Hixie_>
or indeed HTTP headers

[14:59:03.0000] <Hixie_>
which is probably a better solution

[14:59:08.0000] <Hixie_>
since it'll survive their edits :-)

[15:01:12.0000] <SoWhat>
headers?

[15:01:26.0000] <SoWhat>
you suggest that I add credits to HTTP headers?

[15:02:14.0000] <Hixie_>
yeah, like, X-SoWhat-Publisher: Made by SoWhat!

[15:02:31.0000] <SoWhat>
that's an interesting idea

[15:06:07.0000] <SoWhat>
X- prefix has been deprecated

[15:48:46.0000] <heycam>
/me clicks View > Page Style > No Style. again.

[15:49:43.0000] <TabAtkins>
heycam: Heh.

[15:49:48.0000] <heycam>
:)

[15:50:28.0000] <TabAtkins>
Gonna come up with something different next year.

[15:54:51.0000] <pilgrim_google>
jesus, i come back for two hours and someone is already trying to pull me into a semantic debate

[15:55:11.0000] <pilgrim_google>
never change, internet. never change.

[16:06:29.0000] <crocket>
Are query strings case sensitive?

[16:09:33.0000] <SoWhat>
depends on query language

[16:46:05.0000] <TabAtkins>
crocket: You mean in a url?  Casing is preserved, yes.  Whether or not case is important is up to the program on the receiving end.


2013-04-02
[19:43:18.0000] <crocket>
TabAtkins, Is it written in a specification?

[00:35:15.0000] <Ms2ger>
Pilgrim was back? Was that for April Fools?

[01:45:50.0000] <hsivonen>
MikeSmith: have you followed the validator impact of the delta Steve has introduced in W3C HTML over WHATWG HTML?

[01:47:43.0000] <hsivonen>
MikeSmith: I don't like the idea of following a W3C fork of HTML in the validator.

[01:50:02.0000] <kochi>
MikeSmith: yt?

[02:22:18.0000] <SteveF>
hsivonen: which particular chnage are you concerned about?

[02:23:20.0000] <Ms2ger>
/me thought the HTMLWG had convergence in its charter

[02:24:21.0000] <SteveF>
Ms2ger: luckily authority based arguments don't count

[02:24:44.0000] <Ms2ger>
In the WHATWG? Yeah, I agree

[02:25:00.0000] <Ms2ger>
That's one of the bigger issues of the HTMLWG

[02:25:54.0000] <SteveF>
Ms2ger: tehe your'e funny :-)

[02:29:50.0000] <SteveF>
/me I must have missed the non-authority based arguments for the defintion of <main> in the WHATWG spec

[02:30:18.0000] <SteveF>
me/ me too

[02:31:06.0000] <hsivonen>
SteveF: I've noticed activity around <hgroup>, <section>, <header> and <footer>.

[02:31:15.0000] <Ms2ger>
"It's been implemented by multiple browsers"

[02:31:45.0000] <hsivonen>
SteveF: I haven't reviewed if the changes are good or bad, which is why I asked MikeSmith if he has followed what's been going on

[02:32:48.0000] <hsivonen>
SteveF: longdesc argumentation in bugzilla.mozilla.org seems to appeal to the authority of stuff drafted at the W3C

[02:33:28.0000] <SteveF>
hsivonen: no normative changes around header and footer that would effect conformance checkers

[02:34:31.0000] <SteveF>
hsivonen:  there have been changes in ARIA implementation requirements to match reality

[02:34:55.0000] <hsivonen>
SteveF: ok

[02:35:04.0000] <SteveF>
hsivoen: discussion around section but no changes to spec as yet

[02:35:38.0000] <SteveF>
hsivonen: hgroup as yet unknown

[02:36:20.0000] <hsivonen>
SteveF: is there an easy way to see the delta?

[02:36:33.0000] <hsivonen>
easier than checking out the source of both specs and diffing myself

[02:37:42.0000] <hsivonen>
whoa. looks like mpilgrim actually let the registration of diveintomark.org expire

[02:39:50.0000] <SteveF>
hsivonen: not that i know of aprt from looking at the commits, I could make a practice of adding a comment to indicate normative changes that effect conformance if that would help

[02:39:56.0000] <annevk>
hsivonen: it's still registered

[02:41:01.0000] <hsivonen>
annevk: oh right. parked page. I should have read the GoDaddy thing more carefully.

[02:41:15.0000] <hsivonen>
boo for registering domains with GoDaddy, though

[02:41:46.0000] <SteveF>
hsivonen: longdesc hmm thats unsurprsing as most of the people arguing think that's useful

[02:44:06.0000] <SteveF>
hsivonen: my current take is that as there has been 2 new implementations in the past few months (NVDA and Chromevox) it don't seem like its going away whatever people think and therefore would like to actually be useful, whether that is possible is a different question

[02:51:03.0000] <SteveF>
hsivonen: so in Mozilla's case I would prefer that UI is implemented for it or support removed altogether so it doesn't continue to be a time sink

[02:52:41.0000] <hsivonen>
SteveF: UI as in non-AT-provided UI?

[02:53:15.0000] <SteveF>
hsivonen:yes

[02:54:47.0000] <SteveF>
hsivonen:otherwise when used it will continue to hide content from users

[02:56:25.0000] <SteveF>
hsivonen: which is why i never advise its use

[03:11:10.0000] <MikeSmith>
hsivonen: I've not been tracking the differences closely, except in cases where it does actually affect the validator

[03:12:28.0000] <MikeSmith>
and there are only two new cases so far where there is such a difference -- longdesc and hgroup

[03:15:32.0000] <MikeSmith>
in case of longdesc, I put it in under the W3C flag, so the default behavior for that remains the same. That is, longdesc will still get reported as an error except by the W3C service or except if a third-party user feeds the W3C flag to an instance at runtime

[03:17:38.0000] <MikeSmith>
and note that the way I landed it, all I did was change the assertions code so that it the "this element is obsolete" assertion for longdesc only gets emitted if the W3C flag is not set

[03:18:27.0000] <MikeSmith>
because in the schema we already had longdesc as valid, in legacy.rnc

[03:20:47.0000] <MikeSmith>
hmm though I did also change the legacy.rnc file to change the datatype for the longdesc value from "string" to common.data.uri

[03:22:12.0000] <MikeSmith>
so for a non-W3C user who has a document with longdesc that also has a non-URL value for longdesc, they will now see two errors instead of just the "this is obsolete" one

[03:23:16.0000] <SteveF>
MikeSmith: what about <main>?

[03:24:00.0000] <MikeSmith>
anyway, I didn't add longdesc to the W3C service because I thought it was a good idea. I added it to preempt the lobbying about it that I knew was going to be coming, after the HTML WG decision to publish the longdesc spec

[03:24:07.0000] <MikeSmith>
SteveF: ah yeah that too

[03:24:28.0000] <MikeSmith>
hsivonen: so, three things: <main>, longdesc, and <hgroup>

[03:25:13.0000] <MikeSmith>
hsivonen: in that case of main, I added some additional assertions to match the more restrictive contraints in the W3C spec

[03:25:37.0000] <SteveF>
MikeSmith: we don't know yet what will happen with hgroup (conformance wise)

[03:25:49.0000] <MikeSmith>
SteveF: really?

[03:26:31.0000] <MikeSmith>
SteveF: I though the WG decision requires it to be non-conforming

[03:26:40.0000] <MikeSmith>
as far as document conformance goes

[03:27:12.0000] <SteveF>
MikeSmith: maybe that's the case

[03:27:36.0000] <MikeSmith>
yeah I think it is

[03:27:42.0000] <SteveF>
OK

[03:27:59.0000] <MikeSmith>
I think it doesn't have any effect on implementations

[03:28:20.0000] <MikeSmith>
in that UAs are still required to support it

[03:28:57.0000] <MikeSmith>
anyway, about <main> the two changes for that to the assertions code are

[03:29:03.0000] <SteveF>
MikeSmith: yes thats true, but not required to implement the acc layer stuff (as it is not yet implemented)

[03:29:15.0000] <MikeSmith>
+        registerProhibitedAncestor("article", "main");

[03:29:15.0000] <MikeSmith>
+        registerProhibitedAncestor("aside", "main");

[03:29:15.0000] <MikeSmith>
+        registerProhibitedAncestor("header", "main");

[03:29:15.0000] <MikeSmith>
+        registerProhibitedAncestor("footer", "main");

[03:29:15.0000] <MikeSmith>
+        registerProhibitedAncestor("nav", "main");

[03:29:22.0000] <MikeSmith>
SteveF: OK

[03:30:10.0000] <MikeSmith>
so that addition above is for having <main> reported as an error if it's a descendant of article, aside, header, footer, nav

[03:30:35.0000] <MikeSmith>
the other one is:

[03:30:38.0000] <MikeSmith>
+            } else if ("main" == localName) {

[03:30:39.0000] <MikeSmith>
+                if (hasMain) {

[03:30:39.0000] <MikeSmith>
+                    err("A document must not include more than one"

[03:30:39.0000] <MikeSmith>
+                            + " \u201Cmain\u201D element.");

[03:30:39.0000] <MikeSmith>
+                }

[03:30:41.0000] <MikeSmith>
+                hasMain = true;

[03:31:48.0000] <MikeSmith>
hsivonen: so I could put those under the W3C flag as well

[03:32:50.0000] <zcorpan>
Hixie_: if something gets copied from the spec and pasted into the feedback form, most likely that text has been selected, and the selection is exposed to javascript. you can just save the current selection in an array in onmouseup/onkeyup

[03:33:15.0000] <MikeSmith>
hsivonen: though in this case, those seem to me like sane constraints that ideally the HTML LS spec should converge on as well

[03:35:01.0000] <zcorpan>
Hixie_: String(getSelection())

[03:36:51.0000] <MikeSmith>
hsivonen: anyway, <main> and longdesc are the only ones with new spec differences that I've landed so far (and the only other existing difference we had before that which comes to mind is for the "ping" attribute). I've not done anything with hgroup yet

[03:39:52.0000] <SteveF>
MikeSmith: there are differences around conforming use of title attribute on <img>, which have been around since before LC but i don't know if you have implemented those

[03:40:28.0000] <MikeSmith>
SteveF: have not, I don't think

[03:40:55.0000] <SteveF>
MikeSmith: something for me to bug you about

[03:41:26.0000] <MikeSmith>
SteveF: well I think we have always not followed the LS spec on that

[03:41:50.0000] <MikeSmith>
in that it makes an exception if a doc has an img with title

[03:41:59.0000] <MikeSmith>
we have never implemented that exception

[03:42:10.0000] <SteveF>
MikeSmith:OK

[03:42:43.0000] <MikeSmith>
we only implemented the figcaption exception and, previously, the meta@name=generator one

[03:42:58.0000] <MikeSmith>
and as you know the meta@name=generator one is gone now

[03:43:08.0000] <SteveF>
right

[03:43:10.0000] <SteveF>
thanks

[03:44:38.0000] <MikeSmith>
kochi: here now (though maybe you're away for the day)

[03:45:27.0000] <MikeSmith>
kochi: about the IME API publication, it's likely I may need to change the pubdate to Thursday

[03:49:55.0000] <zcorpan>
no progress for webapps testsuite being on github?

[03:51:17.0000] <odinho>
zcorpan: Depends on what timeframe you're coming from :]

[03:51:46.0000] <odinho>
zcorpan: If you mean since last time we were high-fiving at the CfC passing through, -- I think not. -- tobie and darobin were busy till over easter.

[03:51:52.0000] <zcorpan>
odinho: from "CfC has passed but the work hasn't been done yet"

[03:52:01.0000] <zcorpan>
ok

[03:57:09.0000] <Ms2ger>
zcorpan, you're good with git? :)

[04:01:12.0000] <SteveF>
MikeSmith: right about <img title="poot"> throws an error

[04:01:26.0000] <MikeSmith>
yeah

[04:02:04.0000] <SteveF>
MikeSmith: says error: "poot" is not an appropriate word to use...

[04:04:47.0000] <odinho>
It clearly isn't.

[04:05:18.0000] <odinho>
woot would be better imho ^>^

[04:05:52.0000] <SteveF>
odnho: ;-)

[05:03:41.0000] <MikeSmith>
just found https://www.rfc-editor.org/rfc/rfc6919.txt

[05:10:09.0000] <hsivonen>
MikeSmith: oh no. I've used "ought to" in non-normative text I've proposed in order to avoid triggering any RFC key word meaning. What do I do now?

[05:10:54.0000] <MikeSmith>
hsivonen: you're SOL man. You're now non-conforming

[05:12:50.0000] <MikeSmith>
"This command really should not be used" is good

[05:13:15.0000] <Ms2ger>
"There is no requirement for implementations to be reasonable."

[05:13:17.0000] <MikeSmith>
as is "behavior that is clearly morally right, and thus does not require substantiation"

[05:51:07.0000] <zcorpan>
so on github, to make multiple pull requests of another repo, do i need to create multiple branches in my fork? or fork again?

[05:52:44.0000] <odinho>
zcorpan: Yeah, you should always create topic branches, and do PR's on those.

[05:52:46.0000] <Ms2ger>
Multiple branches, I suspect

[05:53:12.0000] <zcorpan>
ok

[05:53:56.0000] <odinho>
Even a small bugfix on master is irritating for yourself, -- because in the PR page, whenever you push something new to master, suddenly that comes up in that PR.

[05:54:12.0000] <odinho>
zcorpan: Not unlike we do it for reviews internally :P

[06:08:30.0000] <zcorpan>
odinho: when i do the pull request, should it be to master on w3c/web-platform-tests?

[06:09:01.0000] <Ms2ger>
Yes

[06:09:05.0000] <zcorpan>
ok

[06:10:20.0000] <zcorpan>
hmmm. my previous pull request was on master (in my fork), so now this pull request has those commits in as well

[06:12:41.0000] <zcorpan>
what should i do about that? do a new fork?

[06:15:31.0000] <odinho>
zcorpan: ... No, just do a new branch. Which sits on top of upstream/master.

[06:15:59.0000] <odinho>
zcorpan: So that the only diff between upstream/master and my_cool_fix is everything that is supposed to be in my_cool_fix :-D

[06:16:16.0000] <odinho>
zcorpan: You can rebase your branch on top of upstream/master.

[06:16:48.0000] <odinho>
zcorpan: `git rebase -i upstream/master`    might do it.  If you have the upstream remote configured.

[06:17:11.0000] <odinho>
zcorpan: If not, you can change upstream/master with the sha of the HEAD of w3c/web-platform-tests.

[06:17:54.0000] <zcorpan>
$ git rebase -i upstream/master

[06:17:54.0000] <zcorpan>
fatal: Needed a single revision

[06:17:54.0000] <zcorpan>
invalid upstream upstream/master

[06:23:35.0000] <zcorpan>
odinho: how?

[06:24:16.0000] <odinho>
zcorpan: I guess the remote upstream does not exist. So, you can do:

[06:24:54.0000] <odinho>
git rebase -i ee01592c95

[06:25:02.0000] <odinho>
(on your topic/bugfix branch)

[06:25:54.0000] <zcorpan>
i get the same error (except different upstream)

[06:26:12.0000] <odinho>
Then you can just skip/drop (remove the lines of) those commits that should not be included.

[06:29:10.0000] <zcorpan>
https://github.com/zcorpan/web-platform-tests/commits/submission/opera-web-messaging - the last 6 commits are included, but only the last one is what i want

[06:31:07.0000] <zcorpan>
i suspect i will be better off doing a new fork. then i won't have the same problem with future submissions, too

[06:32:46.0000] <Philip`>
If git complains it can't find ee01592c95, that probably means you need to do a "git fetch" from the w3c/web-platform-tests repository

[06:33:05.0000] <Philip`>
(which probably means you need to add it as a remote, if you haven't already)

[06:34:54.0000] <odinho>
zcorpan: Heh, you will have theh same problem over and over.  You should first check that you have ee01592c95:   git show ee01592c95

[06:35:06.0000] <odinho>
zcorpan: If you don't have it, -- then do what Philip` said.

[06:35:15.0000] <odinho>
zcorpan: Then you can try the rebase again.

[06:35:28.0000] <zcorpan>
and what if i don't want to have this problem over and over?

[06:35:57.0000] <odinho>
zcorpan: Create branches for each of your commits, and reset your master branch.

[06:36:31.0000] <zcorpan>
my first pull request hasn't been merged yet

[06:36:34.0000] <odinho>
zcorpan: You can do a    git checkout -b master-backup;  git branch -d master; git branch master ee01592c95

[06:37:08.0000] <odinho>
If I wrote everything correctly :]

[06:37:54.0000] <zcorpan>
will it screw up the first pull request if i reset master?

[06:39:10.0000] <Ms2ger>
If not that, it'll probably screw up critic

[06:40:12.0000] <zcorpan>
is there any downside with creating a new fork?

[06:40:23.0000] <Ms2ger>
You can't

[06:40:25.0000] <odinho>
Getting a non-obvious name? :-)

[06:40:32.0000] <Ms2ger>
You can only have one fork per user

[06:40:46.0000] <odinho>
Anyway, -- everything is fixable.

[06:40:47.0000] <zcorpan>
i can create a new user :-P

[06:40:54.0000] <odinho>
Is there valuable stuff in the reviews?

[06:41:38.0000] <Philip`>
You could create a new master branch that's not called "master", if you don't want to disturb your current branches

[06:41:50.0000] <Ms2ger>
There's nothing in the review

[06:42:25.0000] <zcorpan>
Philip`: aha

[06:42:44.0000] <Philip`>
(There's nothing special about the name "master", it's just a convention)

[06:43:48.0000] <zcorpan>
so how do i do that?

[06:45:52.0000] <odinho>
zcorpan: Call it something you like, and push it. And let that forever be your chosen name ;-)

[06:46:10.0000] <Ms2ger>
odinho, commands...

[06:46:12.0000] <odinho>
Well, you don't even need to push it.

[06:46:34.0000] <Philip`>
git remote add upstream https://github.com/w3c/web-platform-tests.git

[06:46:36.0000] <Philip`>
git fetch upstream

[06:46:40.0000] <Philip`>
git checkout upstream/master

[06:46:54.0000] <Philip`>
git checkout -b my-new-branch-name

[06:46:59.0000] <Philip`>
I think

[06:46:59.0000] <odinho>
the last two might give you an error. Prolly better to:

[06:47:05.0000] <odinho>
git branch my-new-branch-name upstream/master

[06:47:58.0000] <Philip`>
Maybe I meant "git checkout remotes/upstream/master" or something

[06:51:20.0000] <zcorpan>
ok i did what Philip` said

[06:52:15.0000] <zcorpan>
what do i do next?

[06:55:56.0000] <zcorpan>
/me is tempted to delete his fork and start over

[07:03:09.0000] <Philip`>
Were you wanting to create a new branch that is just upstream plus the one latest commit from your submission/opera-web-messaging?

[07:10:58.0000] <zcorpan>
Philip`: yeah i guess

[07:13:02.0000] <Philip`>
In that case, I guess you want something like

[07:14:03.0000] <Philip`>
git branch submission/topic-branch-name my-new-branch-name  # where my-new-branch-name is the one based on upstream/master

[07:14:32.0000] <Philip`>
git cherry-pick 33096b2  # which is the commit you want on this branch

[07:14:52.0000] <Philip`>
Oops, do a "git checkout submission/topic-branch-name" before the cherry-pick

[07:15:29.0000] <Philip`>
git push origin HEAD:submission/topic-branch-name  # to push your current branch onto the remote submission/topic-branch-name

[07:17:04.0000] <Philip`>
(cherry-pick seems easier than "rebase -i" if you just want to copy a single commit onto the current branch)

[07:19:39.0000] <zcorpan>
thanks Philip`!

[07:20:34.0000] <Philip`>
It actually worked?

[07:20:47.0000] <zcorpan>
yep. https://github.com/w3c/web-platform-tests/pull/46

[07:21:54.0000] <zcorpan>
how are critic reviews created?

[07:56:03.0000] <MikeSmith>
zcorpan: right now I think jgraham has to set it up

[07:56:14.0000] <zcorpan>
MikeSmith: ok

[08:36:23.0000] <elmimmo>
Hi. I just read that "hgroup removed from the HTML5 specification" http://www.iandevlin.com/blog/2013/04/html5/hgroup-removed-from-the-html5-specification

[08:36:52.0000] <Ms2ger>
Not from the HTML specification

[08:37:07.0000] <Ms2ger>
Which is the one you'd look at for all intents and purposes

[08:37:07.0000] <elmimmo>
I am not too familiar with how the W3C and WHATWG specs relate to each other.

[08:41:17.0000] <elmimmo>
So does that mean WHATWG is keeping it in their HTML spec while W3C is dropping it from their HTML5 spec?

[08:41:26.0000] <Ms2ger>
Yes

[08:41:31.0000] <elmimmo>
Thanks

[08:42:16.0000] <elmimmo>
Is there any debate dumped somewhere on the different views between W3C and WHATWG on this topic?

[08:48:20.0000] <elmimmo>
Or is there a place where I can expect someone participating in WHATWG expressing his/her view on W3C dropping group (nd WHATWG not doing so?

[08:48:31.0000] <elmimmo>
hgroup, not group

[08:49:32.0000] <Ms2ger>
I bet the subject has come up on the whatwg list, and you could search for Hixie's reply

[08:51:04.0000] <elmimmo>
I did search for hgroup at http://lists.whatwg.org/htdig.cgi/help-whatwg.org/ and the list of results was rather anemic. Last result from Sep 2012.

[08:51:37.0000] <annevk>
Am I missing something or does http://dev.w3.org/2011/webrtc/editor/getusermedia.html#stream-api not say what happens when there's multiple consumers?

[08:51:52.0000] <annevk>
Is that generally assumed to work in a stream-based API?

[08:52:51.0000] <elmimmo>
Is that the wrong ML?

[08:52:58.0000] <Philip`>
elmimmo: I'd guess some people's view might be that the matter was settled years ago through the WHATWG processes, and no new technical information has been provided since then, so there's no reason for Hixie to reconsider the decisions, and everyone has given up caring what the W3C does

[08:53:23.0000] <Philip`>
elmimmo: http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/ is the right one

[08:53:34.0000] <elmimmo>
Oops. Thanks, will check again

[08:59:22.0000] <elmimmo>
Well, no luck. Again, most recent result is Dec 2012. I understand what you mean that the debate may have been years ago, but I wondered that the WHATWG would comment on W3C's edit of their spec, even if it was to express disagreement…

[09:00:22.0000] <Ms2ger>
"... everyone has given up caring what the W3C does"

[09:00:30.0000] <Ms2ger>
That's my position, at least

[09:00:52.0000] <elmimmo>
I see. Well, thanks for the clarification!

[09:01:33.0000] <Philip`>
/me has also mostly given up caring what the WHATWG does, so he's equally apathetic

[09:39:47.0000] <mounir>
slightlyoff: now that we have a Future spec'd, what is going to happen with the repository? especially with the spec there

[09:40:18.0000] <mounir>
slightlyoff: I actually want to write a comment regarding the spec but I do not know if it's worth creating a GH issue or not

[09:40:50.0000] <mounir>
both spec are slightly diverging too

[09:49:09.0000] <annevk>
GPHemsley: any way we can make MediaWiki:Anonnotice less intrusive? Surprisingly often I'm not logged in and it's bugging me.

[09:56:03.0000] <GPHemsley>
annevk: It's intrusive on purpose. ;)

[09:56:14.0000] <GPHemsley>
If it wasn't intrusive, no one would read it

[09:56:35.0000] <annevk>
GPHemsley: maybe we can remove the red note?

[09:56:44.0000] <annevk>
GPHemsley: I don't think there was ever confusion about that

[09:57:05.0000] <GPHemsley>
everything in that message was placed there because something caused it to be

[09:57:30.0000] <annevk>
Is there a link to some data to back that up?

[09:58:03.0000] <annevk>
It might very well have happened, but this is an enormous amount of boilerplate, especially on a phone.

[09:58:09.0000] <GPHemsley>
well, there's the page history

[09:58:39.0000] <GPHemsley>
http://wiki.whatwg.org/index.php?title=MediaWiki:Anonnotice&action=history

[09:58:52.0000] <annevk>
"Some people are still not getting it." is not really what I was hoping for

[09:59:13.0000] <GPHemsley>
people were e-mailing admin@ to get an account so they could propose features to specs

[09:59:14.0000] <annevk>
Again, I can believe a thing like that has happened, but in my memory it has not happened nearly enough to bother every visitor with it

[09:59:38.0000] <GPHemsley>
or e-mailing admin@ to discuss adding features to specs

[09:59:55.0000] <annevk>
It seems the note is about the wiki, not admin@

[10:00:18.0000] <GPHemsley>
see the first of the two things I said, then ;)

[10:33:22.0000] <Hixie_>
hsivonen, MikeSmith: re the validator deltas from the whatwg spec, do file bugs if you think something is too relaxed or too strict and thus you end up implementing something different.

[10:34:08.0000] <Hixie_>
hsivonen, MikeSmith: (i'm not following your implementation details closely so i don't necessarily know when you diverge)

[10:36:05.0000] <MikeSmith>
Hixie_: will do

[10:38:35.0000] <MikeSmith>
Hixie_: btw about the tag-omission and attribute-descriptions enhancements to the spec, I'm not using them myself for anything specific, but in general I think a lot of Web authors reading the spec are going to be happy to have those

[10:40:23.0000] <Hixie_>
MikeSmith: cool

[10:52:11.0000] <MikeSmith>
Hixie_: OK just filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=21553 for strictifying <main> constraints

[11:03:14.0000] <MikeSmith>
and also for hgroup https://www.w3.org/Bugs/Public/show_bug.cgi?id=21554 (though hgroup is still handled as conforming in the validator code and I'm personally not in any hurry to change that)

[11:04:02.0000] <MikeSmith>
I won't be filing a similar one for longdesc, despite having already made the W3C validator behavior for it different

[11:04:55.0000] <MikeSmith>
if I thought I could get away with having the W3C validator continue to report longdesc as an error, that's what I'd be doing

[11:05:17.0000] <Hixie_>
i thought there was data showing hgroup was used quite a bit?

[11:05:23.0000] <Hixie_>
i mean, it's not going to be used THAT much

[11:05:26.0000] <Hixie_>
it's only for subtitles

[11:06:34.0000] <MikeSmith>
Hixie_: I have to admit I've not followed the hgroup discussions so closely, so for all I know there it could be used a lot more than I'm aware of

[11:07:44.0000] <MikeSmith>
but personally it kind of seems like overkill if the main purpose (or only purpose) is to hide the subtitle from the outline algorithm

[11:08:51.0000] <MikeSmith>
I wouldn't think most authors would be too upset about the outline showing the subtitle as a child of section for the main heading it follows, rather than supressing it

[11:13:56.0000] <Hixie_>
well, it'd be wrong, right

[11:14:06.0000] <Hixie_>
i mean, none of the w3c specs do that in their outline, for example

[11:14:10.0000] <Hixie_>
and i expect we would be upset if they did

[11:17:41.0000] <MikeSmith>
I guess I see using of an h2-h6 heading for a subtitle as an anti-pattern that we should be trying to discourage rather facilitate

[11:18:53.0000] <MikeSmith>
I think an alternative best practice is for authors to just use a color or some other punctuation, optionally with a <br>, to separate the subheading from the heading

[11:19:05.0000] <MikeSmith>
s/color/colon/

[11:20:11.0000] <MikeSmith>
and if they want the subheading in a smaller font size or otherwise rendered differently from the heading, put <span class=subheading> around it

[11:21:39.0000] <Ms2ger>
"The spec says A, we do B, and Chrome does C.

[11:21:39.0000] <Ms2ger>
"What we do is silly, what Chrome does is dumb, and what the spec says is ok-ish but underdefined."

[11:21:40.0000] <MikeSmith>
s/discourage rather facilitate/ discourage rather than facilitate/

[11:29:19.0000] <jwalden>
/me observes, responding to scrollback, that if Scheme/lisp/etc. can have eq? eqv? and equal?, JS can have three ;-)

[11:30:12.0000] <hober>
jwalden: see also http://www.nhplace.com/kent/PS/EQUAL.html

[11:31:40.0000] <jwalden>
:-)

[11:32:10.0000] <jwalden>
of course, if we could go back in time, == would have been ===-style strict equality from the start

[11:32:32.0000] <jwalden>
although that might have had its own problems, like document.all bustifying of the only good equality operator

[11:32:58.0000] <jwalden>
incidentally, Presto (so it goes) had document.all === undefined and document.all === null, as I recall

[11:33:38.0000] <jwalden>
I have vaguely on my todo list to write a blog post/article/whatever talking about the equality operations to describe/distinguish them

[11:34:31.0000] <GPHemsley>
/me uses hgroup

[13:01:26.0000] <jgraham>
Hmm, if zcorpan was here I would tell him that his review has been created, and apologise for the problem which was caused by some untested changes in the github / critic integration

[13:01:52.0000] <jgraham>
Which I think is now done enough to get review from jl

[13:58:31.0000] <zcorpan>
jgraham: thanks, and good night :-)

[14:22:47.0000] <rillian>
nessy, Hixie_: webvtt question. It seems like the parser doesn't strip or collapse whitespace between tags

[14:22:55.0000] <rillian>
but we have an &nbsp;

[14:23:20.0000] <rillian>
is that just a linebreaking hint?

[14:30:35.0000] <crocket>
Is there any problem with having "queryString" as a query parameter?

[14:30:48.0000] <crocket>
play framework complains if I have this.

[14:30:56.0000] <crocket>
an HTTP query parameter I mean.

[15:42:21.0000] <rillian>
window 11

[16:12:02.0000] <MikeSmith>
rillian: option+q :)

[16:31:35.0000] <rillian>
MikeSmith: hah. sadly on this machine that online prints 'œ'

[16:50:34.0000] <zewt>
rillian: same purpose nbsp always has, to insert a space that doesn't break a word for wrapping

[16:50:58.0000] <MikeSmith>
rillian: oh then meta+q or alt+q I thnk

[16:53:02.0000] <Hixie_>
MikeSmith: why would using <h2> be an antipattern? with <section>, <h2> doesn't really have any other use :-)

[16:53:09.0000] <Hixie_>
rillian: not sure i understand the question

[16:55:31.0000] <rillian>
zewt: ok, that's reasonable, thanks

[16:56:07.0000] <rillian>
Hixie_: someone had a theory &nbsp; was tied to whitespace collapse, which the webvtt parser doesn't have. It confused me.

[16:56:35.0000] <MikeSmith>
Hixie_: because of the fact that h2 (normally) creates a new (abstract) section. That's what it's for. What it's been for  in HTML since the beginning. The language has never defined h2-h6 had being for the purpose of marking up subheadings, afaik. At least implicitly, it's always been that h2-h6 are for marking up section headings.

[16:57:15.0000] <MikeSmith>
so to bless the usage of h2-h6 as markup for subheadings seems to me an unnecessary complication

[16:57:32.0000] <Hixie_>
rillian: whitespace collapsing happens via CSS

[16:57:38.0000] <Hixie_>
rillian: 'white-space' property

[16:58:40.0000] <Hixie_>
MikeSmith: well, i'd agree with you, except Tim and the rest of the W3C has been using <h2> for subheadings since the dawn of time, so... :-)

[16:59:31.0000] <rillian>
Hixie_: aha. so that's intended to apply to webvtt layout as well

[16:59:42.0000] <Hixie_>
rillian: i think so, yeah. check the rendering section for details.

[16:59:52.0000] <rillian>
but the webvtt parser still produces TextNodes containing only white space, if that's what's in the file


2013-04-03
[17:00:05.0000] <Hixie_>
so does the HTML parser

[17:00:30.0000] <MikeSmith>
Hixie_: I guess some there's some irony in you holding up W3C organizational (mis)usage of <h2> as a precedent that needs to limit how we can properly define it now :)

[17:00:46.0000] <rillian>
Hixie_: hence my confusion

[17:01:28.0000] <Hixie_>
MikeSmith: well it's not just the w3c

[17:01:56.0000] <Hixie_>
rillian: aah, ok. yeah, parsers can't collapse the white space, since if they did then 'white-space: pre' would have no way to "un"collapse it

[17:02:08.0000] <zewt>
rillian: people tend to use nbsp in whitespace collapsing-related hacks (&nbsp;&nbsp;&nbsp;&nbsp;), but that's not its real purpose

[17:02:23.0000] <Hixie_>
MikeSmith: my point is just that it's common usage

[17:02:36.0000] <Hixie_>
MikeSmith: <hgroup> just makes that usage less theoretically wrong

[17:02:48.0000] <rillian>
zewt: *node*

[17:03:20.0000] <zewt>
*parent*

[17:05:08.0000] <MikeSmith>
Hixie_: ok I concede that it's common usage but I don't think it necessarily follows that we need to add a new element to the language in order to handle a particular case of processing that's only needed for documents that follow that usage

[17:05:28.0000] <MikeSmith>
to paraphrase Brendan, I think the bar needs to be higher than that

[17:06:46.0000] <Hixie_>
MikeSmith: why?

[17:07:51.0000] <MikeSmith>
Hixie_: because the default answer for new elements is No, and I think there are other cases where the answer has been No and remained No that had relatively more merit than hgroup

[17:07:55.0000] <rillian>
zewt: I think I might be out of productive work time for the day :)

[17:10:39.0000] <Hixie_>
MikeSmith: like what?

[17:12:40.0000] <MikeSmith>
Hixie_:< time>

[17:12:48.0000] <MikeSmith>
I am not a fan of <time>

[17:13:10.0000] <MikeSmith>
despite implementing validator support for it in all its baroqueness

[17:13:26.0000] <MikeSmith>
but I know other people seem to be almost fanatical about it

[17:13:42.0000] <Hixie_>
<time> is in

[17:13:45.0000] <Hixie_>
no?

[17:13:57.0000] <MikeSmith>
yeah but witness the fact that when you tried to drop it, they almost came and burned the castle down

[17:14:13.0000] <MikeSmith>
I'd rather you had dropped it and it had stayed out

[17:14:45.0000] <MikeSmith>
but anyway, I think if we drop <hgroup> there is not going to be any insurrection like we had with <time>

[17:14:49.0000] <Hixie_>
there's two <time> elements

[17:15:01.0000] <Hixie_>
there's the old one, which we dropped, and a new one, which solves entirely different use cases

[17:15:18.0000] <MikeSmith>
I think the general reaction if <hgroup> is dropped is just going to be "meh"

[17:15:24.0000] <MikeSmith>
Hixie_: OK

[17:15:33.0000] <Hixie_>
well people need _something_ to do subheadings

[17:15:48.0000] <Hixie_>
<hgroup> seems like the best solution for it so far

[17:15:58.0000] <MikeSmith>
the only <eim> I care about much personally is the one I have to implement validator support for

[17:16:52.0000] <MikeSmith>
Hixie_: I guess it doesn't seem to me that <hgroup> is the best solution and we still have a chance to come up with something better

[17:17:07.0000] <MikeSmith>
not that I have any better suggestion myself right now

[17:17:23.0000] <Hixie_>
if there's only one proposal, it's by definition the best one :_P

[17:18:04.0000] <Hixie_>
personally i think it works fine, solves all the use cases, and is nice and simple and backwards compatible and basically has no problems

[17:18:10.0000] <Hixie_>
i don't really understand what the fuss is about

[17:18:30.0000] <MikeSmith>
Hixie_: I guess if there's only one proposal, it's by definition the worst one

[17:18:35.0000] <Hixie_>
yup

[17:18:36.0000] <Hixie_>
well

[17:18:56.0000] <Hixie_>
there's an infinite number of proposals that we'd all readily admit are worse

[17:19:04.0000] <Hixie_>
e.g. introducing an <hgroup_9821518357> element

[17:19:46.0000] <MikeSmith>
Hixie_: on thing I'm aware of as a problem is that per the current spec, AT munges the subheading into the main heading, with no pause or nothing in between. Which seems bad for screen-reader useers.

[17:20:21.0000] <MikeSmith>
If you can have the spec address that problem, maybe we could get agreement

[17:20:36.0000] <Hixie_>
wait, what?

[17:20:43.0000] <Hixie_>
why would they do anything different than they used to

[17:21:40.0000] <MikeSmith>
dunno but that is what I remember hearing from the discussions

[17:22:12.0000] <MikeSmith>
the why is because I think the spec requires AT to handle them differently if they are in hgroup

[17:22:22.0000] <MikeSmith>
or I assume so

[17:22:41.0000] <Hixie_>
if the ATs are so dumb as to actively regress their behaviour intentionally, then it's a lost cause.

[17:22:51.0000] <MikeSmith>
because otherwise like you said, the spec would not be introducing any behavior change with respect to AT

[17:24:02.0000] <MikeSmith>
what I'm saying is that I think the (unintended) effect of the current spec is that the text of the headings ends up munged together in the accessibility tree

[17:24:16.0000] <Hixie_>
well that's a bug they should fix if they care about their users

[17:24:50.0000] <Hixie_>
i guarantee that the spec doesn't say they should do that. even if it did, it'd be ridiculous to implement such a thing.

[17:34:00.0000] <Hixie_>
god, i can't believe accessibility advocates are still arguing for longdesc

[17:35:20.0000] <Hixie_>
it's so utterly disheartening to see a community that paints itself as advocates for another community be so incompetent and so utterly fail that community.

[17:48:56.0000] <MikeSmith>
Hixie_: in that case of longdesc it's not even the community overall that's advocated for it

[17:49:23.0000] <MikeSmith>
instead it's a very vocal and aggressive faction within the community

[17:50:22.0000] <MikeSmith>
a faction that's well connected enough that it can ignore and override objections about longdesc that come from their closest colleagues

[17:50:45.0000] <Hixie_>
so sad

[17:53:08.0000] <MikeSmith>
yuup

[18:57:58.0000] <karlcow>
In the department of silly ideas, <h1><ruby><rb>HEADING</rb><rt>SUBHEADING</rt></ruby></h1>

[19:00:54.0000] <Hixie_>
heh

[19:02:47.0000] <chee>
i would support longdesc if the referenced file had to contain exactly 1,000 words.

[19:45:34.0000] <zewt>
death to target=_blank

[19:47:10.0000] <zewt>
needs to be whitelist-only, except for actual web apps they're nothing but "please don't leave our site!" intrusive crap

[21:49:56.0000] <heycam>
TabAtkins, ping

[21:54:21.0000] <heycam>
(mailed)

[22:37:36.0000] <sicking>
heycam: you got my email about 'undefined'

[22:37:38.0000] <sicking>
right?

[22:38:00.0000] <heycam>
sicking, I did and it's the next thing I'll get to when I switch to Web IDL stuff

[22:38:04.0000] <heycam>
sicking, sorry for not replying to indicate that!

[22:38:38.0000] <sicking>
heycam: no worries. I actually prefer that people don't send the 'ok' replies. Too much inbox churn

[22:38:44.0000] <heycam>
heh

[22:38:45.0000] <sicking>
heycam: but since i saw you here...

[23:45:44.0000] <SteveF>
MikeSmith: this sums up average response from twitterverse on dropping hgroup: "W3C remove hgroup tag from HTML5 spec, representing the first time anyone heard of it"

[23:51:34.0000] <SteveF>
MikeSimth: https://twitter.com/codepo8/status/319207945122504704

[23:54:09.0000] <SteveF>
MikeSmith: there are a number of proposals of replacements on replacements/mods for hgroup

[23:55:22.0000] <SteveF>
hixie: on the acc layer semantics you blocked any attempt to make the mappings sane

[23:56:12.0000] <SteveF>
hixie: but we don't have to argue that on hgroup anymore :-)

[23:59:37.0000] <SteveF>
hixie: the <hx><hx> pattern to markup subheadings is about as common as longdesc in the wild, developers use a wide variety of elements to mark up subheadings/subtitles/taglines etc

[00:03:04.0000] <zcorpan>
has anyone tried to remove mutation events yet?

[00:31:22.0000] <zcorpan>
why don't we use <script> for HTML Imports?

[01:11:47.0000] <SimonSapin>
TabAtkins: css-syntax: <p>The document has moved <a href="https://cgi.w3.org/member-bin/process.cgi">here</a>.</p>

[01:12:41.0000] <SimonSapin>
TabAtkins: do we need to discuss background-repeat round(N+0.5) on the conf call? http://lists.w3.org/Archives/Public/www-style/2013Mar/0760.html

[01:13:49.0000] <zcorpan>
hmm, seems like grep has changed since https://twitter.com/zcorpan/status/198020760927866880

[01:14:27.0000] <zcorpan>
i don't see a flag to do null byte-based search instead of line-based

[01:15:20.0000] <SimonSapin>
zcorpan: gnu grep vs. bsd grep?

[01:15:38.0000] <zcorpan>
dunno. got a new mac.

[01:16:09.0000] <zcorpan>
I'm on Mac OS X 10.8.3 now

[01:18:01.0000] <zcorpan>
what i want to do is join the files in this data set http://webdevdata.org/ into a single file that also contains the filenames, null-byte separated, similar to http://dotnetdotcom.org/#inde

[01:21:22.0000] <zcorpan>
man grep says BSD General Commands Manual

[01:23:53.0000] <webben>
zcorpan: pr

[01:24:11.0000] <webben>
(that's a command, not PR)

[01:25:03.0000] <zcorpan>
yeah, reading the man page now :-)

[01:34:41.0000] <SteveF>
hixie:MikeSmith: in fact it appears much more common to use p or div rather than hx to mark up a subheading, subtitle or tagline https://dl.dropbox.com/u/377471/tests/subhead-class.html

[01:35:05.0000] <zcorpan>
too many files

[01:42:04.0000] <zcorpan>
/me gives up

[01:54:23.0000] <jgraham>
zcorpan: You must be able to install the gnu tools in some way e.g. via homebrew or macports or something

[01:56:17.0000] <zcorpan>
i think i got it working now, with ls -1 and cat

[03:35:25.0000] <Ms2ger>
darobin, your idl parser upgrade really is a gift that keeps on giving...

[03:38:06.0000] <darobin>
Ms2ger: context?

[03:38:33.0000] <darobin>
SteveF: saw the email, still catching up after my break

[03:38:54.0000] <Ms2ger>
if (member.type == "const") ... assert_equals(window[this.name][member.name], eval(member.value))

[03:38:55.0000] <SteveF>
darobin:no problem

[03:39:13.0000] <darobin>
Ms2ger: that's not my code...

[03:39:20.0000] <Ms2ger>
Where suddenly, member.value turned into {type:"number", value:25}

[03:39:25.0000] <darobin>
oh

[03:39:28.0000] <darobin>
well yeah

[03:39:52.0000] <darobin>
there were ample warnings that the parser's AST would change

[03:39:58.0000] <darobin>
that seems like an easy fix :)

[03:40:42.0000] <darobin>
Ms2ger: it was either that, or stick with a version of WebIDL that simply wasn't relevant anymore

[03:41:04.0000] <darobin>
or, you know, wait until REC to implement

[03:41:26.0000] <Ms2ger>
Or, hey, backward compatibility

[03:41:41.0000] <darobin>
there were too many cases in which it simply wasn't possible

[03:41:48.0000] <Ms2ger>
So what can this member.value thing actually be?

[03:41:52.0000] <darobin>
WebIDL is not backwards compatible with previous versions of itself

[03:42:10.0000] <darobin>
I forget, but unless I made a mistake the changes were motivated rather than gratuitous

[03:42:26.0000] <Ms2ger>
type can be boolean, number,

[03:42:36.0000] <Ms2ger>
null, Infinity, NaN?

[03:42:54.0000] <darobin>
string?

[03:43:22.0000] <darobin>
as I said, it's possible that I made some mistakes in some cases

[03:43:24.0000] <Ms2ger>
Apparently not, if I'm looking at the right code

[03:43:49.0000] <darobin>
but most of the changes were motivated by test cases that I couldn't represent correctly without changing the AST

[03:44:01.0000] <darobin>
most of idlharness kept on working...

[03:44:45.0000] <Ms2ger>
So...

[03:44:46.0000] <darobin>
in any case, let me load up idlharness and make you a fix, since you ask so graciously

[03:45:02.0000] <Ms2ger>
Why is Infinity not a number?

[03:45:35.0000] <darobin>
it doesn't JSONify

[03:45:39.0000] <Ms2ger>
All I want is to get the JS value I need to compare to

[03:45:57.0000] <Ms2ger>
... why should it?

[03:46:32.0000] <darobin>
again, dim memory from 6 months ago, but when I included Infinity it broke code that was expecting the AST to be JSONifiable

[03:46:58.0000] <darobin>
which didn't strike me as necessarily a wrong expectation, and happened to be something that real people were using

[03:47:08.0000] <Ms2ger>
Lovely

[03:47:23.0000] <Ms2ger>
/me would have been happy with the string

[03:47:38.0000] <darobin>
guess you should've been there then

[04:01:27.0000] <smaug____>
annevk: are there any API proposals using futures?

[04:02:14.0000] <annevk>
smaug____: not yet I think, was a bit of a chicken and egg problem

[04:02:51.0000] <smaug____>
k

[04:03:02.0000] <annevk>
smaug____: I suggested people start using them though, e.g. http://lists.w3.org/Archives/Public/public-media-capture/2013Apr/0008.html

[04:03:34.0000] <annevk>
To make it more compelling I need to define Future.first and Future.when (statics) and write an introduction I suppose

[04:03:54.0000] <annevk>
And then convert the world, or something

[04:06:50.0000] <smaug____>
/me will need to decide whether he likes Futures :)

[04:07:34.0000] <zcorpan>
annevk: an introduction with a sample API would be helpful for understanding how it works. i read the spec and didn't get it. :-)

[04:08:18.0000] <annevk>
zcorpan: did you get the DOMFuture intro?

[04:09:06.0000] <mounir>
annevk: http://msdn.microsoft.com/en-gb/library/windows/apps/br211867.aspx

[04:09:12.0000] <annevk>
ta

[04:10:10.0000] <zcorpan>
annevk: pointer?

[04:10:24.0000] <annevk>
zcorpan: https://github.com/slightlyoff/DOMFuture/blob/master/README.md

[04:11:12.0000] <annevk>
I think in my example I'll show how you could wrap XMLHttpRequest and then get convenient code for when two requests complete or when either completes

[04:27:13.0000] <darobin>
Ms2ger: so do you have a test case for the problem you're seeing?

[04:27:24.0000] <Ms2ger>
https://w3c-test.org/webapps/DOMCore/tests/approved/interfaces.html

[04:27:30.0000] <Ms2ger>
NodeFilter interface: constant SHOW_NOTATION on interface object, say

[04:27:37.0000] <darobin>
ta

[04:32:32.0000] <zcorpan>
annevk: that was more understandable

[04:32:57.0000] <annevk>
zcorpan: cool

[04:32:58.0000] <zcorpan>
annevk: done() and catch() are just sugar, right?

[04:33:22.0000] <annevk>
zcorpan: catch() is; done() is useful end-of-chain as the exceptions thrown will actually get to window.onerror

[04:35:39.0000] <annevk>
/me adds a note to the spec for that

[04:48:46.0000] <zcorpan>
annevk: "done" in the IDL is not a link

[04:50:08.0000] <zcorpan>
annevk: the algorithms for then and catch have some bogus italics

[04:51:50.0000] <annevk>
lots of copypasta

[04:55:41.0000] <annevk>
thanks, fixed now

[04:58:24.0000] <zcorpan>
annevk: i don't understand how done() is different wrt onerror

[04:59:22.0000] <annevk>
e.g. then(callbackthatthrow) will invoke reject on the returned future's resolver

[04:59:42.0000] <annevk>
done(callbackthatthrow) will just throw which is eventually catched by window.onerror

[05:01:13.0000] <zcorpan>
ah done doesn't have the "future wrapper callback"

[05:03:52.0000] <zcorpan>
so without done() there would be no way of knowing about exceptions in the callback at the end of the chain

[05:12:16.0000] <MikeSmith>
hsivonen: when you have time, please take a look at http://bugzilla.validator.nu/show_bug.cgi?id=970

[05:12:56.0000] <MikeSmith>
specifically http://bugzilla.validator.nu/show_bug.cgi?id=970#c1

[05:13:34.0000] <MikeSmith>
patch to fix the problem that the table-integrity checker hits when being run under Java 7

[05:25:13.0000] <zcorpan>
"The funny thing is the specification of thead and tfoot states that it might be useful to repeat the elements on each page. Sadly no browser vendor implemented this yet." http://drublic.de/blog/printing-the-web/

[05:25:20.0000] <zcorpan>
i thought firefox did? was it dropped?

[05:26:24.0000] <Ms2ger>
We did?

[05:26:58.0000] <zcorpan>
tested now. still works.

[05:27:18.0000] <zcorpan>
data:text/html,<table><thead><tr><th>foo<tbody><tr><td>bar<tr><td>bar.......

[06:40:54.0000] <Smylers>
Hi. Where does the HTML spec define that <title> can't contain comments?

[06:40:55.0000] <Smylers>
 (Or, rather, that <!-- blah --> inside <title> is literal text, not a comment.)

[06:41:36.0000] <annevk>
Smylers: apart from the parser you mean?

[06:42:00.0000] <Smylers>
annevk: Yes. Where for HTML authors?

[06:42:28.0000] <Smylers>
I've just encountered somebody trying to put a comment in <title>, and I couldn't find the bit of the spec that says you can't do that.

[06:42:33.0000] <gsnedders>
Smylers: Currently, 12.1.2 Elements

[06:42:49.0000] <gsnedders>
Smylers: "RCDATA elements can have text and character references […]"

[06:43:55.0000] <Smylers>
gsnedders: Thanks.

[06:44:35.0000] <Smylers>
http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#content-models says “... comment nodes ... must be   ignored when establishing whether an element's contents match the element's content model or not, and must be ignored when following algorithms that define document and element semantics.”

[06:45:22.0000] <Smylers>
Together they suggest that if you did but a comment node in <title> then it would be ignored.

[06:45:41.0000] <Ms2ger>
There is no comment node involved

[06:45:59.0000] <gsnedders>
Smylers: No, 12.1.2 says that you cannot have a comment in a valid <title> element. It makes no statement about what you can have otherwise.

[06:45:59.0000] <Ms2ger>
There is something in your source code that look like a comment, but isn't one

[06:46:14.0000] <Ms2ger>
looks*

[06:46:35.0000] <gsnedders>
Smylers: The parser then states that anything that looks like a comment in <title> is just the literal string "<!--" etc.

[06:47:23.0000] <gsnedders>
Smylers: 3.2.5 merely defines comments to be meaningless, but with the HTML serialization you cannot get a comment in the title element from the parser.

[06:47:58.0000] <gsnedders>
(You can however get one through <title>foo</title><script>document.querySelector("title").appendChild(document.createComment())</script> or something similar)

[06:48:12.0000] <gsnedders>
(But scripting is the only way to get one there in the HTML serialization)

[06:48:42.0000] <Smylers>
Ms2ger, gsnedders: Yeah, I know it isn't a comment node. But I can't see why it isn't, without reading bits of the spec that are supposed to be only for implementers.

[06:48:54.0000] <Ms2ger>
"RCDATA elements can have text and character references [�]"

[06:49:07.0000] <gsnedders>
Smylers: Because "RCDATA can have text and character references". Comments are not text or character references.

[06:50:31.0000] <gsnedders>
"<!-- foo -->" is text.

[06:50:47.0000] <Smylers>
Sure, I can see that it is text!

[06:51:45.0000] <gsnedders>
Smylers: Nowhere in the non-parser spec says that it isn't a comment node, merely that you are not allowed comments in RCDATA elements.

[06:52:59.0000] <gsnedders>
Smylers: tl;dr: It matches the unrestricted definition of text (constrast with the forbidding of < elsewhere in normal elements) and hence the definition of a comment is irrelevant.

[06:53:16.0000] <gsnedders>
Ms2ger can probably explain better. :P

[06:53:38.0000] <Ms2ger>
I can?

[06:54:21.0000] <Ms2ger>
/me tries to figure out why two of his tests are suddenly passing, while they weren't yesterday

[07:03:03.0000] <Smylers>
gsnedders: I can see that 12.1.2 says RCDATA elements can only contain text and character references, and that that doesn't include comments. But 3.2.5 says that if a <title> did contain a comment node, then that comment would be ignored for the purposes of determining whether the contents of the <title> matches its content model. So surely a (theoretical) comment node in a <title> wouldn't contravene 12.1.2, because by 3.2.5 it

[07:03:04.0000] <Smylers>
The problem is that “<!-- foo -->”, _isn't_ a comment node, but mere text. And I don't see where an author can find that out.

[07:03:55.0000] <Smylers>
Relatedly, is there a way of navigating from http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#the-title-element to the RCDATA definition by following plausible-looking links?

[07:04:43.0000] <gsnedders>
Smylers: The author finds that out by the fact that it is text, as defined.

[07:05:26.0000] <gsnedders>
Smylers: I think not, because that defines the semantics of the title element in the HTML namespace, as an abstract concept, unrelated to any serialization. Perhaps they should be linked some how.

[07:05:32.0000] <Smylers>
gsnedders: In practice it turns out the author finds it out by asking me why it isn't working!

[07:06:06.0000] <gsnedders>
Smylers: The answer is because "<!-- foo -->" is text and hence not a comment.

[07:06:12.0000] <gsnedders>
Which is all 12.1.2

[07:06:45.0000] <gsnedders>
3.2.5 has no effect on the serialization, just on the parsed tree.

[07:07:47.0000] <Smylers>
That makes sense to me.

[07:08:36.0000] <asmodai>
Oh oh, new workplace dubbed me the HTML5 guy, so you guys get to hear more of my insane prattling :P

[07:10:01.0000] <gsnedders>
asmodai: Oh dear god no ;_;

[07:10:04.0000] <gsnedders>
asmodai: :P

[07:10:08.0000] <asmodai>
/me grins

[07:11:13.0000] <darobin>
Ms2ger: patch landed, adds lots of green

[07:11:21.0000] <darobin>
should sync with the next cron run

[07:11:24.0000] <Ms2ger>
Thank you

[07:12:07.0000] <asmodai>
gsnedders: They also tossed JavaScript and JSON my way, not sure how to feel about that though. :P

[07:56:19.0000] <odinho>
I was dubbed not-HTML5 guy, hence I keep mostly quiet ;D

[07:57:38.0000] <annevk>
asmodai: what's left?

[07:58:48.0000] <gavinc>
If one wants to store a fragment of HTML for later use in an HTML page the current recommended practice would still be to use an XML fragment rather then an HTML fragment as the HTML fragment parsing algorithm doesn't do exactly what one might expect. (Adds a root html element and other elements) Is that correct still?

[08:04:51.0000] <annevk>
gavinc: yeah, although once <template> is integrated you should probably switch to the parsing model of that element

[08:05:33.0000] <gavinc>
time line for template?

[08:05:37.0000] <Smylers>
gsnedders: Sorry, got distracted. That makes sense to me ... but I'm still not sure I can explain it to somebody who doesn't know (and doesn't need to know) what the DOM is.

[08:05:43.0000] <asmodai>
annevk: Hehe, various security protocols and standards :)

[08:06:18.0000] <annevk>
gavinc: dunno, might be landing in browsers about now? not sure when it'll be integrated into HTML proper

[08:06:26.0000] <annevk>
gavinc: six months seems like a safish bet

[08:06:30.0000] <gavinc>
annevk: usual process pain of rec referring to non rec, etc etc :(

[08:06:44.0000] <Smylers>
http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#the-title-element says that <title> has a content model of Text, which links to 3.2.5.1.

[08:07:04.0000] <annevk>
gavinc: that's only a pain if you make it so

[08:07:40.0000] <annevk>
gavinc: W3C bullshit is very much opt-in

[08:08:23.0000] <Smylers>
3.2.5.1 says Text can have Text nodes, which links to the DOM spec's Text interface.

[08:11:05.0000] <annevk>
Smylers: you should look in section 12

[08:11:11.0000] <annevk>
Smylers: which says <title> is RCDATA

[08:11:26.0000] <annevk>
Smylers: and RCDATA cannot contain anything but text or &...;

[08:12:11.0000] <annevk>
Smylers: "content model" is a conformance criteria, e.g. if you append a bunch of elements to <title> via the DOM it'll be non-conforming

[08:12:42.0000] <annevk>
Smylers: "content model" is not a constrain as to what's actually possible when writing HTML or scripting

[08:13:04.0000] <Smylers>
annevk: OK.

[08:13:52.0000] <Smylers>
annevk: What kind of thing is RCDATA?

[08:14:29.0000] <annevk>
Smylers: prolly leftover term from SGML, but feel free to read it as if it said "bananas"

[08:14:40.0000] <annevk>
Smylers: what matters is how it's defined

[08:15:27.0000] <annevk>
Now nobody looks at HTML4 anymore we might want to rename those obscure terms to something more useful... If you feel like that'd be good Smylers, maybe file a bug to suggest that.

[08:18:48.0000] <Smylers>
annevk: Thank you — that answers the next question I was about to ask!

[08:19:25.0000] <Smylers>
annevk: But what I actually meant was: what is the term for the category of item that RCDATA is an instance of?

[08:19:55.0000] <Smylers>
annevk: As in “The X of the <title> element is RCDATA.” What is X?

[08:20:03.0000] <Ms2ger>
"category"? :)

[08:20:12.0000] <annevk>
Smylers: There's elements. <title> is a RCDATA element.

[08:20:49.0000] <annevk>
Smylers: An element being of a particular category places restrictions on how you can write it.

[08:21:14.0000] <annevk>
http://www.whatwg.org/C#elements-0

[08:21:48.0000] <Smylers>
Ah, “kind” appears to be the term.

[08:22:01.0000] <Smylers>
Thanks, all.

[08:22:33.0000] <annevk>
"kind" is most definitely not a term. That's just language. It might as well have said "type" there.

[08:23:02.0000] <annevk>
Or "categories".

[10:46:56.0000] <zcorpan>
what's the state of art for doing retina/adaptive/responsive/etc images these days?

[10:49:03.0000] <Ms2ger>
<picture srcset>

[10:49:22.0000] <TabAtkins>
Hehe.

[10:49:43.0000] <annevk>
TabAtkins: fwiw, futures are discussed in that repo and on www-dom and Bugzilla... now public-webapps too teehee

[10:49:57.0000] <annevk>
ooh and various JavaScript places I guess, like the ES wiki

[10:51:19.0000] <TabAtkins>
WHATEVER

[10:51:48.0000] <TabAtkins>
Maybe you people should, you know, actually post that info somewhere in the gh repo.

[10:52:08.0000] <TabAtkins>
I should probably join www-dom.

[10:52:39.0000] <zcorpan>
i mean what's best for authors to use today, not what a browser should implement

[10:53:47.0000] <Ms2ger>
<img>

[11:07:11.0000] <annevk>
TabAtkins: dom.spec.whatwg.org is pretty clear about it I think, dunno about GH, that's outside my jurisdiction

[11:07:39.0000] <annevk>
TabAtkins: but yeah, WHATEVER works, I'll read it either way :)

[11:08:33.0000] <TabAtkins>
annevk: Since I was specifically talking about a strawman that I don't think is in DOM yet, I wasn't looking there. ^_^

[11:09:48.0000] <annevk>
I think ProgressFuture as is makes sense though, no need to put a bunch of events in there too

[11:10:06.0000] <annevk>
I guess I'd make progress() accept a ProgressEvent

[11:10:11.0000] <TabAtkins>
Not a bunch of events.  No API-level stuff needs to change at all.

[11:10:27.0000] <TabAtkins>
Yeah, do that, and make it an event target so addEventListener('progress', ...) works on it.

[11:10:33.0000] <annevk>
eww

[11:10:41.0000] <TabAtkins>
Not that that's particular useful, but existing infrastructure that cares about events may use it.

[11:10:50.0000] <TabAtkins>
No reason to completely reinvent events.

[11:11:35.0000] <annevk>
what part is being made less complex by adding that?

[11:12:47.0000] <TabAtkins>
annevk: The part where you're breaking compat with existing things in a specialized, custom way.

[11:13:10.0000] <TabAtkins>
Which, given that Future is all about trying to make some cases less specialized and custom...

[11:14:55.0000] <TabAtkins>
Like I said, though, keep the existing convenience APIs.  They're great.  Just *also* make it actually use events like the rest of the platform does, rather than reinventing them in a custom way.

[11:14:56.0000] <TabAtkins>
We're not trying to replace events with futures, after all, just replace *bad uses of events* with them.

[11:15:04.0000] <TabAtkins>
annevk: Btw, should I resend my thread to www-dom?

[11:15:05.0000] <annevk>
If something does not need to be an EventTarget but needs to report progress going forward, I think just having ProgressFuture would be better (or something like that)

[11:15:16.0000] <annevk>
That doesn't mean we're suddenly replacing events...

[11:15:47.0000] <TabAtkins>
Right.  What I'm saying is that the progress part of ProgressFuture *is an event*, in every meaningful sense.

[11:16:02.0000] <annevk>
TabAtkins: nah it's fine I think

[11:16:05.0000] <TabAtkins>
Except, currently, the technical sense.

[11:16:25.0000] <TabAtkins>
It should just be a Future that reports progress events as well.

[11:17:42.0000] <TabAtkins>
I agree that ProgressFuture is better in general for progress-event-related things, because it lets you listen for completion in the better Future manner.

[11:17:44.0000] <annevk>
I still don't see why. Sure it's a callback that's invoked multiple times. Does not necessarily make it an event...

[11:18:05.0000] <TabAtkins>
annevk: It's a callback that's invoked multiple times, and which can have multiple distinct callbacks attached to it.

[11:18:09.0000] <TabAtkins>
That's an event in everything but name.

[11:19:17.0000] <annevk>
I'm not really sure if the latter is established. But we have other systems such as MediaQueryList (or whatever it was) that reinvent parts of events

[11:19:54.0000] <annevk>
If it makes sense to have something like events, but not quite, it doesn't immediately follow to copy all of the event infrastructure to it

[11:22:11.0000] <TabAtkins>
In the current strawman, future.progress just returns the future again, so you can keep registering them.

[11:22:39.0000] <TabAtkins>
It doesn't make sense to limit it to only a single listener.

[11:23:54.0000] <annevk>
So I take it you're looking at the font loading API and want to use this pattern?

[11:24:06.0000] <TabAtkins>
Yup, writing up a post to www-style about it now.

[11:24:25.0000] <annevk>
Because we haven't really decided and I think the JS community hasn't either, how best to do progress notifications.

[11:24:33.0000] <annevk>
Can you do without them for now?

[11:24:43.0000] <TabAtkins>
Been talking with slightlylate about it, but he's got enough misconceptions about how css fonts work that it wasn't that useful.

[11:26:15.0000] <TabAtkins>
Yes, I can do without them.  I'm only using them right now for the loading of individual fonts, where it's actually tri-state (unloaded, loading, loaded).

[11:26:23.0000] <annevk>
I think it would be better to just propose the accept/reject pattern for now. We can always upgrade later.

[11:26:40.0000] <annevk>
If you remember maybe cc me on that email

[11:28:13.0000] <TabAtkins>
Fine with me.

[11:48:18.0000] <annevk>
So yeah, the other great thing about it not being events is that you can garbage collect the hell out of it.

[11:48:40.0000] <annevk>
You're not hostile to someone creating a synthetic event out of spite at some point and relying on that to work.

[11:49:05.0000] <annevk>
So you don't need removeListener and things like that. It simplifies so much.

[12:23:13.0000] <TabAtkins>
annevk: Oh, hm. That's interesting.

[12:23:39.0000] <TabAtkins>
annevk: Oh, though, wait.  I assume that ProgressFuture will be specced to kill all listeners when the future resolves.

[12:23:45.0000] <TabAtkins>
And not fire any more progress events.

[12:24:26.0000] <annevk>
That's alien towards events.

[12:24:59.0000] <TabAtkins>
Really?  Normal objects have a lifetime when they stop firing progress events.

[12:25:17.0000] <TabAtkins>
You coudl technically fire synthethic events after that point, but I suspect that's mostly just because nobody bothered to stop it.

[12:26:10.0000] <annevk>
Events listeners are never automatically cleared.

[12:26:43.0000] <annevk>
Typically also such objects can be reused for other loads, so it doesn't necessarily make sense to clear them.

[12:28:13.0000] <TabAtkins>
True, but that's not the case for a Future.

[12:28:15.0000] <TabAtkins>
Shrug.

[12:29:03.0000] <annevk>
Yeah. The other big question is here is what the use case would be. Why would you register for events?

[12:34:23.0000] <TabAtkins>
Because that's what you're doing when you call future.progress(cb)?

[12:34:42.0000] <TabAtkins>
The progress notifications are functionally events.

[12:39:06.0000] <TabAtkins>
annevk: Anyway, sicking is saying the same thing as you, so I'm acquiescing on the thread.

[12:40:09.0000] <jamesr>
embrace the future(s)

[12:42:18.0000] <sicking>
TabAtkins: Events aren't actully author friendly. That's not the reason we've been using them. The main reason we've been using them is inertia

[12:43:25.0000] <TabAtkins>
sicking: Okay, so the idea is that Events should continue to be used for Node stuff, and the rare thing with similar constraints.  Otherwise, use Futures if they fit, or just use a callback registration mechanism if they don't.

[12:44:15.0000] <TabAtkins>
I just want a name for the "lightweight events" that ProgressFuture uses, so that when other things want the same kind of event-like behavior, there's an easy thing to copy from rather than them inventing something vaguely incompatible.

[12:46:09.0000] <sicking>
TabAtkins: approximately yes. IMO. There are no clear cut rules though

[12:46:15.0000] <TabAtkins>
;_;

[12:46:19.0000] <TabAtkins>
/me wants clear-cut rules.

[12:46:25.0000] <TabAtkins>
When possible, at least.

[12:46:28.0000] <Ms2ger>
/me cuts off TabAtkins's nose

[12:46:32.0000] <sicking>
"lightweight events" == callbacks

[12:47:09.0000] <TabAtkins>
sicking: But that's not enough!  ProgressFuture has a *specific* API structure that mimics events in a lightweight way.  Other ways of doing callbacks have various other shapes, with upsides and downsides.

[12:47:44.0000] <TabAtkins>
For example, just passing the callbacks into the future constructor is one way that's fairly common, but which prevents multiple callbacks from being registered.

[13:33:32.0000] <annevk>
TabAtkins: API design has changed a lot over time, we're not there yet and I somewhat doubt we'll get there soon

[13:33:57.0000] <TabAtkins>
annevk: Sure.

[13:42:21.0000] <jamesr_>
TabAtkins: i really want to go hate on your www-style thread names

[13:42:49.0000] <TabAtkins>
jamesr_: ???

[13:44:54.0000] <annevk>
I have to say the [subject] stuff makes things barely readable

[13:45:11.0000] <annevk>
Especially combined with Re: [subject] stuff

[13:48:52.0000] <jamesr_>
Re: [subject] Re: Blah blah blah

[13:48:54.0000] <TabAtkins>
The [subject] stuff is necessary on a list with such a wide range of topics.

[13:49:03.0000] <TabAtkins>
It's used on webapps too, frex.

[13:49:10.0000] <TabAtkins>
The Re: stuff is just people with busted clients.

[13:50:06.0000] <annevk>
I stopped using it on webapps fwiw. I typically use DOM: x or File API: x

[13:52:02.0000] <tantek>
I like [#tag] myself ;)

[13:53:05.0000] <annevk>
I thought you didn't like support forums?

[13:53:28.0000] <hober>
hahahaa

[13:58:32.0000] <TabAtkins>
annevk: That's functionally equivalent. ^_^

[13:59:01.0000] <annevk>
TabAtkins: you may note I did not mention function, but readability

[13:59:51.0000] <annevk>
"[css-cascade] it a sucks" vs "Cascade: it a sucks"

[14:01:41.0000] <TabAtkins>
Must be personal choice - I find the former more readable.

[14:01:48.0000] <TabAtkins>
it also functions as a good search term.

[14:02:54.0000] <annevk>
sounds like you're conditioned :)

[14:03:33.0000] <TabAtkins>
Hah.

[14:05:40.0000] <annevk>
Congrats Google guys with Blink

[14:05:43.0000] <annevk>
That's awesome

[14:06:22.0000] <fishd_>
:-)

[14:07:01.0000] <TabAtkins>
^_^

[14:07:14.0000] <annevk>
I wonder how long this has been in the works, since you all kept perfectly quiet each time I brought it up :-)

[14:09:47.0000] <SimonSapin>
annevk: what’s Blink?

[14:10:05.0000] <annevk>
http://www.chromium.org/blink

[14:10:50.0000] <JakeA>
annevk: You may be the one I was on about in the first paragraph https://plus.google.com/u/0/116237864387312784020/posts/d62jMDKXcLb

[14:11:07.0000] <annevk>
SimonSapin: it's WebKit forked with goals more in line with Gecko (e.g. removing legacy cruft and such)

[14:11:50.0000] <annevk>
JakeA: yeah, beverloo just reminded me :-)

[14:14:19.0000] <SimonSapin>
wow.

[14:16:40.0000] <SimonSapin>
When Opera says they use Chromium, does that mean the chromium port of WebKit, or will they also follow Blink? Or is that not decided yet?

[14:16:58.0000] <beverloo`>
SimonSapin, Bruce commented on that here: http://www.brucelawson.co.uk/2013/hello-blink/

[14:17:01.0000] <TabAtkins>
To the best of my knowledge, they'll be following Chromium, which contains Blink.

[14:17:14.0000] <TabAtkins>
We will be encouraging people to fork Chromium at the content layer, not the Blink layer.

[14:17:31.0000] <TabAtkins>
They're already basically there, so it's not too bad for them.

[14:17:57.0000] <SimonSapin>
How did I miss that? Oh right, I haven’t looked at Twitter in 4 hours.

[14:18:05.0000] <TabAtkins>
We only announced it ~20 minutes ago.

[14:18:16.0000] <SimonSapin>
eh

[14:18:26.0000] <SimonSapin>
TabAtkins: content layer, what does that mean?

[14:18:45.0000] <TabAtkins>
I dunno, it's some term of art that people who actually care about things outside of WebKit say.

[14:19:30.0000] <SimonSapin>
"delete more than 7,000 …" that’s about the number of lines of code in WeasyPrint "… files—comprising more than 4.5 million lines." Oh.

[14:20:37.0000] <fishd_>
"content layer" -->  src/content/public/ from the chromium repository

[14:20:50.0000] <SimonSapin>
TabAtkins: I suppose this was already going on when I visited in February?

[14:22:08.0000] <SimonSapin>
Removing prefixes after features land unprefixed: \o/

[14:24:33.0000] <SimonSapin>
So basically WebKit becomes (again?) basically an Apple project?

[14:25:23.0000] <rillian>
I'm sure Apple will be welcome to migrate :)

[14:31:04.0000] <jamesr_>
SimonSapin: no -blink- !

[14:31:12.0000] <smaug____>
at least we can get pointer events to chrome !

[14:31:25.0000] <smaug____>
and apple can stay with touch events

[14:40:12.0000] <SimonSapin>
anyways, interesting times

[15:02:15.0000] <Hixie_>
"an operation that is ongoing, has yet to start, or has completed"

[15:02:30.0000] <Hixie_>
because "an operation" would be too brief? :-P

[15:03:50.0000] <TabAtkins>
It's calling out all the cases specifically because events only handle one of those (or two, if you count multiple events as handling an "ongoing" operation).

[15:03:54.0000] <astearns>
perhaps it omits operations that are taking a nap

[15:04:12.0000] <Hixie_>
TabAtkins: yeah, i would have written it the same way, i'm just teasing :-P

[15:04:19.0000] <Hixie_>
is there a tutorial for futures?

[15:04:33.0000] <Hixie_>
it's not entirely clear from the spec how it's envisaged to be used by APIs

[15:04:53.0000] <TabAtkins>
Closest is https://github.com/slightlyoff/DOMFuture

[15:05:25.0000] <TabAtkins>
But I'm trying to write up some API-design guidance for futures vs events vs lightweight events vs whatever.

[15:05:48.0000] <TabAtkins>
And I'll throw some pull requests at DOM to add fluff explanatory text.

[15:09:34.0000] <Hixie_>
thanks, the examples at the bottom of that page are helpful


2013-04-04
[17:36:08.0000] <a-ja>
tantek: was your recent html5/uF2 talk recorded/published?

[17:39:08.0000] <a-ja>
tantek: n/m....just found the slides

[17:39:34.0000] <tantek>
yes - they'll have video in a couple of weeks

[17:44:03.0000] <a-ja>
tantek: cool...tks

[17:45:15.0000] <a-ja>
tantek: btw....bad link to uF2 page on slide 38

[17:45:34.0000] <tantek>
a-ja - thanks - will take a look at it

[18:19:31.0000] <tantek>
a-ja link fixed. thanks again.

[18:20:46.0000] <a-ja>
np

[01:49:09.0000] <darobin>
jgraham, odinho, tobie, Ms2ger: should we coordinate the webapps move somehow?

[01:49:35.0000] <darobin>
the thing I'm not sure about is how to preserve history — I hear there may be a trick with sub-tree merges but I'm unclear on the details

[01:49:47.0000] <tobie>
whereby coordinate you mean: someone _actually_ does it?

[01:49:50.0000] <Ms2ger>
I know you can do it with hg ;)

[01:50:28.0000] <darobin>
tobie: well, right now it's one huge lump of a task

[01:50:54.0000] <darobin>
I was hoping that if we put just a few details together, such as how it would actually work, then it can be carved up into smaller bits

[01:51:06.0000] <darobin>
that people can actually JFD

[01:51:35.0000] <Ms2ger>
I think the main part is getting the existing history into the git repo

[01:51:58.0000] <Ms2ger>
/me googles

[01:52:01.0000] <darobin>
/me reads up on subtree merging

[01:52:31.0000] <tobie>
I'm out next week and busy until friday

[01:52:42.0000] <tobie>
so you can't really count on me.

[01:52:46.0000] <Ms2ger>
http://stackoverflow.com/questions/1425892/how-do-you-merge-two-git-repositories ?

[01:54:27.0000] <darobin>
the magic is detailed here http://git-scm.com/book/ch6-7.html

[01:55:18.0000] <darobin>
yeah, it looks like git subtree is just porcelain atop subtree merging

[02:00:06.0000] <darobin>
ok, let me run a trial on one of the test suites

[02:01:44.0000] <darobin>
so there are two steps here: getting the stuff into git, and then moving it around properly

[02:01:53.0000] <darobin>
I'll do the first part

[02:02:25.0000] <darobin>
importing into old-tests I guess

[02:02:38.0000] <darobin>
and then we can work on moving things piece by piece

[02:10:01.0000] <asmodai>
Mmm, nice news on Blink. Anything that reduces complexity and maintenance headaches is a good effort.

[02:10:15.0000] <darobin>
"added 1080 changesets with 6106 changes to 2867 files"

[02:16:31.0000] <odinho>
darobin: Yeah, creating a git repo is def step one.

[02:17:05.0000] <odinho>
But it would also be possible to move all the history over as a rebase-onto in that way.

[02:17:22.0000] <odinho>
I do not think it particulary smart to change history/sha's that already exist for web-platform-tests.

[02:18:45.0000] <darobin>
odinho: I think the subtree merge does change history

[02:18:49.0000] <odinho>
Oh, well, a merge will do as well.

[02:18:53.0000] <darobin>
it just adds history from another branch

[02:19:05.0000] <darobin>
heh, saw your comment too late...

[02:19:07.0000] <odinho>
darobin: That doesn't make sense what you said

[02:19:37.0000] <odinho>
a "not" missing somewhere?

[02:19:38.0000] <darobin>
odinho: I've added the hg repo as a remote, and tracking it in a branch

[02:19:54.0000] <darobin>
odinho: yes! now you have to guess where :)

[02:20:06.0000] <darobin>
a subtree merge does NOT change history

[02:20:17.0000] <odinho>
Okay.

[02:20:19.0000] <Ms2ger>
I'd hope not :)

[02:20:35.0000] <darobin>
odinho: and now I've read the tree from that branch into the master branch

[02:20:39.0000] <darobin>
but in a subdir

[02:23:51.0000] <darobin>
okay, well, we have the files

[02:24:10.0000] <darobin>
it looks like the history is there but you need to know to look for it in the branch rather than in the merge :-/

[02:24:11.0000] <odinho>
:-)

[02:24:31.0000] <darobin>
ah well, we *have* the history

[02:24:41.0000] <darobin>
git is just not being exceedingly friendly in exposing it

[02:24:52.0000] <odinho>
It does it in the most obvious way :-)

[02:25:23.0000] <Ms2ger>
darobin, did you add a todo list?

[02:25:41.0000] <odinho>
Well, making a linear list of a graph is not really something you can do too obvious to everyone.

[02:26:40.0000] <darobin>
odinho: yeah, someone did that to me once and I wasn't really happy

[02:26:43.0000] <darobin>
Ms2ger: a todo list?

[02:26:49.0000] <darobin>
you mean of things to move?

[02:27:08.0000] <Ms2ger>
Yeah

[02:27:12.0000] <darobin>
well

[02:27:15.0000] <Ms2ger>
We had something like that for html, no?

[02:27:26.0000] <darobin>
did we? oh yes we did

[02:27:53.0000] <darobin>
it was the file that would conflict all the time :)

[02:28:06.0000] <Ms2ger>
:D

[02:28:18.0000] <darobin>
let me first announce the move to webapps

[02:28:32.0000] <darobin>
in theory we can track and pull changes made in hg, in practice I'd rather not do too much of that

[02:28:46.0000] <darobin>
Ms2ger: I reckon that for the todo splitting we could use the wiki

[02:28:59.0000] <darobin>
if you want to start listing that please just do so

[02:29:26.0000] <odinho>
darobin: So, pushed a branch to look at?

[02:29:32.0000] <Ms2ger>
Eh, wiki

[02:29:36.0000] <Ms2ger>
I'm no tantek

[02:29:39.0000] <darobin>
Ms2ger: yeah I hate those too

[02:29:45.0000] <Ms2ger>
Etherpad, maybe? :)

[02:29:50.0000] <darobin>
wfm!

[02:29:57.0000] <darobin>
odinho: you mean, err, master?

[02:30:05.0000] <darobin>
odinho: two things, really

[02:30:07.0000] <odinho>
Ah, you just did a push

[02:30:16.0000] <darobin>
in master, the files are under old-tests/webapps

[02:30:22.0000] <darobin>
and there's a webapps_import branch

[02:30:28.0000] <darobin>
that one is tracking the hg repo as a remote

[02:30:50.0000] <odinho>
Ah. Folder. Okay.

[02:31:06.0000] <darobin>
odinho: step 2 is moving things to the right places :)

[02:32:42.0000] <odinho>
... Hmmm. The old-tests doesn't seem to have any history.

[02:32:46.0000] <odinho>
In GitHub

[02:33:15.0000] <Ms2ger>
<darobin> ah well, we *have* the history

[02:33:17.0000] <Ms2ger>
<darobin> git is just not being exceedingly friendly in exposing it

[02:33:32.0000] <odinho>
Git would show it

[02:33:55.0000] <odinho>
If it was there

[02:33:55.0000] <darobin>
odinho: yeah, I don't understand how that works

[02:34:16.0000] <odinho>
Lemme check it out instead of using github

[02:35:40.0000] <darobin>
odinho: I think the problem is that git knows there's a link between that subdir and the original repo, but the history is not showing it for files

[02:37:06.0000] <darobin>
maybe I can do this again with another strategy

[02:37:34.0000] <odinho>
Nope, no history there. Yes.

[02:37:42.0000] <odinho>
It needs another strategy.

[02:39:07.0000] <odinho>
A simple git merge does the trick.

[02:39:21.0000] <odinho>
However, -- you're getting everything at the same level then.

[02:39:44.0000] <odinho>
But it's mostly what it should be anyway. Any cleanup could always be done afterwards :-)

[02:40:02.0000] <odinho>
Or the next commit could be a "move these folders into old-webapps or old-tests/webapps/".

[02:40:20.0000] <darobin>
odinho: sorry, I don't get what you're saying

[02:40:25.0000] <darobin>
oh

[02:40:32.0000] <darobin>
you mean just merge the branch

[02:40:34.0000] <odinho>
We should remove the huge commit you did from history.

[02:40:37.0000] <odinho>
Yes.

[02:40:38.0000] <Ms2ger>
Ping me when you're ready :)

[02:40:45.0000] <darobin>
Ms2ger: will do :)

[02:41:18.0000] <darobin>
odinho: first, I'll remove the current stuff — it's actually not *really* a huge commit since the webapps_import branch already had all the data :)

[02:43:26.0000] <odinho>
Yeah, git will reuse it.

[02:43:43.0000] <odinho>
But imma lunch!

[02:45:19.0000] <darobin>
/me gives an apple to Eris before merging

[02:46:20.0000] <Ms2ger>
Is that some metaphor I don't understand?

[02:48:26.0000] <darobin>
Ms2ger: Eris is the goddess of the internet

[02:49:05.0000] <darobin>
ok, I don't actually need to put this in old-tests, we can simply clean up the directories one by one

[02:49:11.0000] <Ms2ger>
She's a cat?

[02:49:21.0000] <darobin>
surprisingly, no

[02:52:02.0000] <darobin>
Ms2ger: here's the list https://etherpad.mozilla.org/yqT83Y2hPm

[02:52:43.0000] <darobin>
and it's committed

[02:52:58.0000] <darobin>
I propose this:

[02:53:14.0000] <darobin>
we remove whatever useless depth there is in the testing directory structure

[02:53:25.0000] <darobin>
then anything under approved we move to the root

[02:53:51.0000] <darobin>
and anything in submitted is in a "submitted" directory at the root, and that can be turned into PRs later

[02:53:59.0000] <darobin>
(the rest doesn't need that)

[02:54:08.0000] <darobin>
oh, and remove widgets?

[02:54:37.0000] <Ms2ger>
sgtm

[02:54:38.0000] <darobin>
yeah, remove widgets

[02:55:22.0000] <Ms2ger>
I'll be there in a bit

[02:55:45.0000] <Ms2ger>
knobgobbler?

[02:56:24.0000] <jgraham>
I was wondering the same

[03:04:01.0000] <annevk>
darobin++

[03:04:35.0000] <annevk>
darobin: I was kind of sceptical of your move to become HTML5 editor, but it seems you're allocating your time to do a great amount of good instead, awesome!

[03:04:53.0000] <darobin>
annevk: :)

[03:05:22.0000] <darobin>
annevk: the way I saw it is that if there's funding to do useful stuff, it should be taken

[03:07:10.0000] <darobin>
dear me, this webapps directory structure is tiresome

[03:09:21.0000] <darobin>
/me wishes etherpad could be in monospace

[03:21:11.0000] <hsivonen>
Gruber's posts about Blink are remarkably lacking obvious anti-Google pro-WebKit-monoculture sentiment https://daringfireball.net/

[03:22:40.0000] <gsnedders>
Time for me to write up some slightly less gut thoughts a day after the fact, I think.

[03:23:06.0000] <odinho>
Ms2ger, darobin: Sounds good. Have any of you commited any of it?

[03:23:15.0000] <annevk>
hsivonen: It reads more like he's whoa and doesn't know how the world turns anymore with respect to that particular subject

[03:23:40.0000] <Ms2ger>
odinho, darobin's been committing, I'm working on DOM

[03:24:16.0000] <annevk>
hsivonen: Though the Servo post he made still made it seem he believes Gecko to have been obsoleted by WebKit...

[03:24:58.0000] <odinho>
Hmmm. So now I wonder wether the CfC was binding for webappsec as well.

[03:25:16.0000] <darobin>
odinho: see, you shouldn't have asked that question publicly

[03:25:36.0000] <darobin>
if you hadn't, you'd have been able to just move stuff and then go "Oh? Sorry, I thought it was binding for webappsec too" :)

[03:25:49.0000] <darobin>
odinho: I've been committing stuff, see #htmlt

[03:25:58.0000] <darobin>
ah, you're not there

[03:26:03.0000] <darobin>
lots of gitbot spam

[03:26:27.0000] <odinho>
Yeah, I ate a clue pill after I spammed the channel and just looked in the git repo :P

[03:26:41.0000] <darobin>
been making a bunch of PRs too

[03:26:58.0000] <odinho>
darobin: Fsck! I'm not as evilsmart as you :-/

[03:27:52.0000] <darobin>
odinho: the trick is to practice your evil laugh every morning

[03:28:31.0000] <hsivonen>
annevk: Gruber being dismissive of Mozilla is not news

[03:43:57.0000] <Ms2ger>
Hmm, looks like Bert cleared out the www-style moderation queue

[03:45:40.0000] <jgraham>
darobin: Like that?

[03:45:49.0000] <darobin>
jgraham: ?

[03:45:57.0000] <jgraham>
10:11  * darobin wishes etherpad could be in monospace

[03:46:06.0000] <darobin>
ah, odinho is back from lunch, so now I can go eat

[03:46:33.0000] <darobin>
jgraham: hey cool man, thanks! I tried to fix it but the Pad options thing gives me a broken UI

[03:46:46.0000] <jgraham>
Presto ftw?

[03:47:05.0000] <darobin>
oh, I see what you did man

[03:47:06.0000] <Ms2ger>
What's Presto?

[03:47:08.0000] <darobin>
well played

[03:47:23.0000] <Ms2ger>
Oh dear

[03:47:31.0000] <darobin>
lol, switch to monospace and watch as three geeks reflexively align their tab columns :)

[03:47:46.0000] <Ms2ger>
Let's see how long until someone complains about https://github.com/w3c/web-platform-tests/commit/90268bb52a0a44fbee196c99a5b55c0d6d37da62

[03:48:08.0000] <darobin>
Ms2ger: you mean the fast tracking?

[03:48:25.0000] <Ms2ger>
No, the test for isTrusted in the PE test suite

[03:48:33.0000] <darobin>
oh *that*

[03:48:47.0000] <darobin>
/me lives to be amused

[03:48:52.0000] <darobin>
anyway, lunch

[03:49:01.0000] <Ms2ger>
Enjoy

[03:49:10.0000] <Ms2ger>
Maybe then I can finally get my push in :)

[03:50:06.0000] <odinho>
lol

[03:50:54.0000] <odinho>
Hmf, my specs' first stage are super boring. moving IndexedDB/tests/submissions to IndexedDB/submissions. And can do the same for SSE.

[03:52:14.0000] <odinho>
'git pull --rebase; git push' is my friend.

[03:53:08.0000] <Ms2ger>
Looks like I hung Firefox by running the DOM tests

[03:55:44.0000] <odinho>
Sooo... The phase 2. When do we start on that? And how will that look? :]  Making the changes into branches, and pull requests.  But do you normally do any changes to e.g. file names then?

[03:55:52.0000] <odinho>
There will probably be lots of different styles etc.

[03:56:18.0000] <odinho>
And deciding whether the spec should have a section based numbering scheme should probably also be done at one stage.

[03:57:34.0000] <Ms2ger>
Oh, not running them

[03:57:40.0000] <Ms2ger>
Formatting the results

[03:59:37.0000] <jgraham>
Yeah, that can take a long time :(

[04:25:50.0000] <odinho>
Okay.

[04:26:22.0000] <odinho>
Some branch names make no sense though. Because they say submission/NAMEOFCOMPANY

[04:26:43.0000] <odinho>
But it should rather be submission/NAMEOFCOMPANY/the-spec-or-what-change

[04:29:00.0000] <darobin>
Ms2ger: I just beat them into it with a bullwhip

[04:29:09.0000] <darobin>
oh, sorry, wrong channel

[04:29:39.0000] <darobin>
Ms2ger: create submission/spec-submitter branch; move the files to the root; commit; push the branch; make PR

[04:30:16.0000] <darobin>
odinho: yeah submission/COMPANY comes from when it was only HTML in there

[04:30:51.0000] <Ms2ger>
Got a command for that first step?

[04:32:40.0000] <darobin>
git checkout -b nameOfBranch

[04:32:53.0000] <darobin>
then

[04:32:58.0000] <darobin>
git mv whatever

[04:33:06.0000] <darobin>
git commit whatever

[04:33:11.0000] <darobin>
git push origin nameOfBranch

[04:37:35.0000] <Ms2ger>
darobin, that seems to have worked... Now, what do I do for the next submission for this spec?

[04:38:17.0000] <Ms2ger>
And someone give annevk a critic account

[04:38:42.0000] <Ms2ger>
jgraham, maybe

[04:38:57.0000] <darobin>
Ms2ger: git checkout master to return to master, then do the same again

[04:42:52.0000] <sangwhan_>
Ms2ger: I've seen something from Mozilla with quite interesting indentation "rules" although I'd prefer to not say what since it might as well be a mistake in which case it might be nice (blame version control)

[04:48:17.0000] <odinho>
Hmmmm... Should I keep the event-source version history from git or noot...

[04:48:26.0000] <jgraham>
Seems plh is to blame for this code style

[04:48:43.0000] <jgraham>
I wonder if I should bother complaining about trailing whitespace

[04:48:46.0000] <odinho>
Problem is that it will show up in the review. Hm. Guess it's better to keep it in, right?

[04:48:54.0000] <jgraham>
M-x delete-trailing-whitespace should fix

[04:49:50.0000] <jgraham>
odinho: Hmm? No problem with having history. But no problem with squashing one logical change into a single commit either

[04:50:02.0000] <jgraham>
It depends what the history is

[04:52:36.0000] <odinho>
Just where we got the pull requests from. Which I wanted to keep.

[04:52:43.0000] <odinho>
But the ugly commits are the moving commits :-)

[04:53:40.0000] <odinho>
Anyway. Soeh. How would I do a nice assert_not_exists()-replacement,   assert_equals(e.data, undefined, 'data should not exist')?  Any better way? Getting rustey.

[04:54:39.0000] <darobin>
mmm, we're using different conventions for branch naming, but I'm guessing that doesn't matter

[04:55:59.0000] <odinho>
Luckily submissions/opera/ folder is not taken, so I can use that :]

[04:56:13.0000] <odinho>
I mean branch folder here

[04:56:20.0000] <odinho>
In case anyone got worried

[04:58:31.0000] <sangwhan_>
It is quite interesting how most version control handles renaming/moving to another path in a +191984/-191984 way

[05:00:30.0000] <odinho>
Good it's not +191984/-191985

[05:01:37.0000] <sangwhan_>
I've had my unfortunate incidents of clicking on one of those on a GUI. Not recommended.

[05:02:49.0000] <odinho>
guess  assert_false(e.hasOwnProperty('data'))  is better

[05:07:09.0000] <odinho>
There are three submission folders in Git, which one do we use? :-((((      submission/   submissions/    subsmission/

[05:07:15.0000] <odinho>
I'll bet on submission/

[05:08:06.0000] <Ms2ger>
Nah, subsmission/

[05:09:15.0000] <sangwhan_>
Is there any specs defining UIEvent outside of DOM2/DOM3?

[05:09:23.0000] <sangwhan_>
s/Is/Are/

[05:09:33.0000] <Ms2ger>
Travis's new thing?

[05:09:42.0000] <Ms2ger>
But no serious spec

[05:10:41.0000] <odinho>
I have no idea what IndieUI is doing, but they were doing something input something event something.

[05:11:20.0000] <sangwhan_>
IndieUI doesn't define core events, it's something way more high level

[05:11:23.0000] <odinho>
Ms2ger: Okay, I'll go on and create subsmissions/ then, so we can start fresh.

[05:11:53.0000] <odinho>
sangwhan_: And I did'nt still there was no untruth in what I said! :D

[05:12:08.0000] <sangwhan_>
odinho: :)

[05:12:24.0000] <sangwhan_>
Ms2ger: Travis' new thing being this? http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html

[05:12:39.0000] <odinho>
I understood what I meant with that last sentence, although I'm not able to read it and comprehend it now.

[05:13:00.0000] <Ms2ger>
sangwhan_, no, that's Travis's old thing :)

[05:13:14.0000] <sangwhan_>
/me was hoping that wasn't the new thing

[05:15:22.0000] <Ms2ger>
I don't recall where the new thing is

[05:16:26.0000] <sangwhan_>
Can't find it. Google isn't helping either. Wonder if it's because it's a Microsoft driven spec and conspiracy.

[05:16:57.0000] <sangwhan_>
/me sees DOM3E dating back to 2000 though

[05:17:00.0000] <Ms2ger>
Check his recentish emails to www-dom? :)

[05:20:26.0000] <sangwhan_>
https://dvcs.w3.org/hg/d4e/raw-file/tip/source_respec.htm

[05:31:37.0000] <Ms2ger>
error: 'refs/heads/submission/Mozilla' exists; cannot create 'refs/heads/submission/Mozilla/DOMEvents'

[05:31:38.0000] <Ms2ger>
Halp

[05:37:22.0000] <jgraham>
Ms2ger: Pick a different branch name that doesn't start Mozilla/

[05:37:33.0000] <jgraham>
It seems that someone created a branch called Mozilla

[05:37:36.0000] <Ms2ger>
I'll call it Blink

[05:37:41.0000] <jgraham>
(based on the error message)

[05:37:50.0000] <jgraham>
(not on looking at the repo or anything)

[05:38:17.0000] <Ms2ger>
So how do I rename this branch?

[05:40:28.0000] <annevk>
mounir: you're so productive when I'm not in the office

[05:43:03.0000] <mounir>
annevk: not that related... that's because I need to do stuff for sysapps

[05:43:09.0000] <mounir>
so I do everything I can but that ;)

[05:47:07.0000] <Ms2ger>
Going to leave the remainder to y'all

[05:54:45.0000] <annevk>
mounir: hehe

[06:01:32.0000] <odinho>
Ms2ger: To rename, you can just create a new one. Although it'd be nice to delete the upstream submission/Mozilla unless it's already in a PR. But yea.

[06:02:23.0000] <odinho>
so, in a command, that could be:     git checkout -b /submission/Mozilla2/DOMEvents

[06:03:47.0000] <darobin_>
odinho: the original one is likely in a PR

[06:03:56.0000] <darobin_>
as I said, it's from when there was only HTML in there,

[06:04:59.0000] <odinho>
It's not really like HTML is only a single thing either though. And that Mozilla would ever only contribute one specific testsuite to HTML spec :P

[06:05:19.0000] <odinho>
But it already being there is an obvious blocker to using it.

[06:05:24.0000] <odinho>
Might be able to use lowercase mozilla though :P

[06:06:57.0000] <sangwhan_>
darobin: Is return types looking strange in https://dvcs.w3.org/hg/webevents/raw-file/6f2c52cd50f6/touchevents.html#methods a known issue?

[06:07:49.0000] <darobin>
sangwhan: can you be a bit more specific please?

[06:08:03.0000] <darobin>
ah, I get it

[06:08:04.0000] <darobin>
mmmm

[06:08:30.0000] <darobin>
sangwhan: that's a bug

[06:08:51.0000] <sangwhan>
darobin: I assumed so, because I couldn't find a way to fix it in markup

[06:09:05.0000] <darobin>
you can't, I have to fix it at my end

[06:09:31.0000] <sangwhan>
I did something insane to work around it

[06:09:51.0000] <darobin>
https://github.com/darobin/respec/issues/185

[06:09:57.0000] <darobin>
I'm not sure I want to know

[06:10:00.0000] <darobin>
:)

[06:10:07.0000] <darobin>
I can fix that today or tomorrow

[06:10:17.0000] <sangwhan>
Let's put it this way, nobody will see it in the final spec :)

[06:35:06.0000] <darobin>
sangwhan: are you cynthia on GH?

[06:35:20.0000] <darobin>
odinho: ok, the only two directories that still need work in the TS are yours :)

[06:39:01.0000] <odinho>
Oh I have them locally.

[06:39:15.0000] <darobin>
odinho: you mean you have them done?

[06:42:39.0000] <odinho>
Bah thought so, but no, will do it :P  I got sidetracked.

[06:43:13.0000] <darobin>
odinho: I'm not pressuring you :)

[06:43:32.0000] <Ms2ger>
odinho, git branch -m worked

[06:56:27.0000] <odinho>
darobin, Ms2ger: Uhh, I see we actually do PR's on the moves.

[06:57:12.0000] <odinho>
I did it with mosquito as they would show up as new files, -- so that they work like a real pull. -- But seeing now the obvious downside is getting a disconnected history.

[06:57:25.0000] <odinho>
I'll only the PR's on the moves for the stuff in IndexedDB.

[06:57:38.0000] <Ms2ger>
... Keeping the history was kinda the point of this exercise

[06:59:02.0000] <scott_gonzalez>
TabAtkins: Is there a spec for CSS mixins or just variables?

[06:59:06.0000] <darobin>
odinho: sorry, what's the issue?

[06:59:09.0000] <odinho>
The history is there, it's disconnected.

[06:59:24.0000] <darobin>
normally git detects renames

[06:59:41.0000] <odinho>
darobin: That I thought about how to clear the files from the repo, so that they wouldn't be cluttering up the space. :]

[06:59:43.0000] <darobin>
odinho: we only do PRs on the moves when they involve submissions

[07:00:01.0000] <odinho>
Hmmm. I can actually just revert the delete commit.

[07:00:02.0000] <jgraham>
How/where is the error event defined

[07:00:05.0000] <jgraham>
?

[07:00:10.0000] <odinho>
And then do a move request.

[07:00:16.0000] <odinho>
I'll do that

[07:00:25.0000] <darobin>
odinho: oh you mean you've deleted stuff from master and then readded in submissions?

[07:00:35.0000] <odinho>
darobin: Yep

[07:00:42.0000] <darobin>
odinho: oh, yes, please don't do that :)

[07:00:49.0000] <odinho>
I was thinking "how to make a nice looking pull request"

[07:01:02.0000] <darobin>
let me put this in no uncertain terms

[07:01:06.0000] <darobin>
fuck nice looking

[07:01:12.0000] <odinho>
^>^

[07:01:40.0000] <darobin>
between the all of us, we're good looking enough that our pull requests can be as ugly as the butt warts of Sauron

[07:04:26.0000] <jgraham>
http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#onerroreventhandler makes it sound an awful lot like addEventListener("error", function() {}) out not work

[07:04:31.0000] <jgraham>
*ought

[07:05:25.0000] <sangwhan>
darobin: Yes, cynthia is a stupid posix login that was made more than a decade ago that stuck

[07:05:43.0000] <jgraham>
/me wonders wtf odinho is doing

[07:06:10.0000] <jgraham>
(forcing pushes to master is really bad. Please don't do it)

[07:06:49.0000] <odinho>
jgraham: WAT I was super quick!

[07:06:54.0000] <odinho>
How did you ever notice :|

[07:07:22.0000] <darobin>
odinho: the bot ratted you out

[07:07:37.0000] <darobin>
sangwhan: I was just wondering if the issue comment was from you :)

[07:07:38.0000] <odinho>
It was super evil, but I thought noone would notice since I was lightning quick at it :/

[07:07:42.0000] <odinho>
Damn those bots

[07:07:57.0000] <jgraham>
odinho: Yeah, and remember that critic updates as soon as you push

[07:08:01.0000] <sangwhan>
darobin: The answer would be yes :)

[07:08:04.0000] <darobin>
well, we noticed, but indeed it was fast

[07:08:16.0000] <zcorpan>
jgraham: you mean the name "OnErrorEventHandler"? or something else?

[07:08:40.0000] <jgraham>
zcorpan: I mean what says that addEventListener("error", ...) does anything?

[07:09:03.0000] <zcorpan>
jgraham: nothing. and it shouldn't work.

[07:09:15.0000] <jgraham>
So http://critic.hoppipolla.co.uk/r/34 is wrong?

[07:10:05.0000] <zcorpan>
yes

[07:12:00.0000] <sangwhan>
/me ooh, critic outside of opera. now that's something.

[07:19:16.0000] <odinho>
Hmm. The TTWF ones are a bit special. Because some of them extend opera's tests.

[07:19:47.0000] <odinho>
There will be conflicts. :P  Ohwell.

[07:27:54.0000] <odinho>
Yeh, starting to get a real visible backlog now.

[07:28:20.0000] <odinho>
Is døn

[07:28:20.0000] <Ms2ger>
/me sighs at his inbox

[07:28:28.0000] <odinho>
/me too

[07:28:40.0000] <Ms2ger>
And everything is assigned to me \o/

[07:29:23.0000] <jgraham>
And me!

[07:30:28.0000] <Ms2ger>
darobin, and it's not even my job

[07:30:42.0000] <darobin>
Ms2ger: technically it ain't mine either :)

[07:32:20.0000] <jgraham>
Technically it's no one's job

[07:32:27.0000] <jgraham>
and it's boring…

[07:33:10.0000] <Ms2ger>
Let's make annevk do it

[07:34:03.0000] <annevk>
My quota for boring stuff has been full for a while now, really time for someone else to start cracking

[07:34:26.0000] <jgraham>
Well I have done some review today

[07:34:41.0000] <Ms2ger>
sicking knows some XHR stuff, right?

[07:34:57.0000] <odinho>
Yeah, and IDB too

[07:35:06.0000] <darobin>
let's have sicking do it all!

[07:35:10.0000] <Ms2ger>
sgtm

[07:35:17.0000] <odinho>
that's decided then

[07:35:37.0000] <Ms2ger>
RESOLVED: annevk pesters sicking until he reviews all the XHR/IDB tests

[07:35:56.0000] <odinho>
Hmmm. To be honest.

[07:36:08.0000] <odinho>
I did get a review from Mozilla on the IDB tests.

[07:36:09.0000] <Ms2ger>
/me hears odinho volunteer

[07:36:24.0000] <odinho>
So I need to fix that, -- and then they should really be reviewed.

[07:36:54.0000] <odinho>
I had a full RfR and everything, -- it was just that everything changed at that time ;-)  And know you all know what.

[07:37:11.0000] <Ms2ger>
/me mumbles about rfrs

[07:38:49.0000] <annevk>
Ms2ger: apparently there's more of me these days: http://www.theregister.co.uk/2013/04/04/google_webkit_fork/

[07:39:17.0000] <annevk>
whole legions of van Kesterens making incorrect assumptions about Blink

[07:39:34.0000] <Ms2ger>
Unfortunately for van Kesteren, who may have briefly got her hopes up, ...

[07:39:48.0000] <odinho>
lol, "her"

[07:40:01.0000] <odinho>
You sound so much more sexy as a girl.

[07:40:03.0000] <Ms2ger>
I'm not sure why I still find that so funny

[07:40:31.0000] <odinho>
Former Opera coder even.

[07:40:38.0000] <annevk>
Shows what research journalists do

[07:41:13.0000] <Ms2ger>
You should sign everything as "Anne van Kesteren (Mr.)"

[07:41:45.0000] <annevk>
Ms. 2ger, I don't even...

[07:41:49.0000] <darobin>
rofl, great article annevk

[07:41:55.0000] <odinho>
Sir Anne van Kesteren

[07:42:27.0000] <odinho>
The Register is well known for bad research. Always lots of errors. :-)

[07:42:44.0000] <gsnedders>
odinho: Do the Dutch even give out knighthoods?

[07:42:53.0000] <Ms2ger>
annevk, but hey, at least Google listens to you

[07:42:55.0000] <jgraham>
Move to Germany and become Herr Dr van Kesteren

[07:43:34.0000] <darobin>
Ms2ger: well, I got the impression that Google didn't listen to annevk so much as to the Kesteren Family Council

[07:44:03.0000] <darobin>
oh, hey, serendipacronym

[07:44:03.0000] <Ms2ger>
KFC?

[07:44:33.0000] <annevk>
Ms2ger: well they have to, there's legions of us

[07:44:54.0000] <darobin>
besides, shouldn't the proper form be "all the Kesterens in the world" rather than "all the van Kesterens"?

[07:44:59.0000] <odinho>
gsnedders: He's in London now, stupid :-)

[07:45:03.0000] <darobin>
or is NL different from FR there?

[07:45:23.0000] <gsnedders>
odinho: Not relevant unless he becomes a British citizen

[07:45:56.0000] <jgraham>
We gave one to Bill Gates

[07:45:59.0000] <darobin>
actually I think that it can work for Commonwealth citizens, for acts performed on British territory

[07:46:07.0000] <zcorpan>
looks like the article has s/her/his/ now

[07:46:20.0000] <Ms2ger>
Sounds like they track this channel closely

[07:46:21.0000] <darobin>
ah, shame

[07:46:21.0000] <Ms2ger>
/me waves

[07:46:33.0000] <Ms2ger>
marcosc, oh, we removed all your widget tests

[07:46:40.0000] <Ms2ger>
marcosc, and good morning :)

[07:46:41.0000] <gsnedders>
He cannot use the title Sir, though, merely the honourary KBE.

[07:46:55.0000] <marcosc>
Ms2ger: is ok, I moved everything to Github last week

[07:46:59.0000] <sangwhan>
"The van Kesterens of the web" is a interesting remark

[07:47:29.0000] <sangwhan>
Are there any implementations of widgets left after Presto dropped the ball? EFLWebkit?

[07:47:47.0000] <MikeSmith>
Justin Schuh seems to really be going out of his way in this thread to avoid responding at all to othermaciej's point that "we directly asked Google folks if they would be willing to contribute their multiprocess support back to WebKit, so that we could build on it. They said no."

[07:47:51.0000] <gsnedders>
sangwhan: Quite a few.

[07:47:52.0000] <annevk>
If you use it like that the v actually has to be uppercase, but I doubt anyone cares about that (though I do a bit)

[07:47:55.0000] <MikeSmith>
https://news.ycombinator.com/item?id=5490242

[07:48:07.0000] <marcosc>
Ms2ger: do you have more details of what got removed?

[07:48:20.0000] <Ms2ger>
marcosc, whatever was in the webapps repo

[07:48:20.0000] <marcosc>
Ms2ger: just in case I get emails

[07:48:22.0000] <darobin>
marcosc: all of widgets

[07:48:39.0000] <darobin>
marcosc: it's still in hg, it just got dropped in the move to gh

[07:49:46.0000] <sangwhan>
Wondering if pointer event and touch event tests should be dropped in there too or not

[07:50:10.0000] <Ms2ger>
Please don't put these touch event tests in my review queue

[07:50:16.0000] <Ms2ger>
If you want to ever see them again

[07:50:55.0000] <marcosc>
darobin: did all the specs also get deleted?

[07:51:17.0000] <odinho>
marcosc: Haven't you herd, we're all bout' them tests now, who needs specs when we've got tests?

[07:51:26.0000] <marcosc>
heh

[07:51:30.0000] <sangwhan>
Ms2ger: Any reason why? (apart from the fact that there are a *lot* of asserts IIRC)

[07:52:14.0000] <odinho>
marcosc: As far as I know, we're only messing up tests.

[07:52:17.0000] <Ms2ger>
sangwhan, you may want to read yesterday's #webapps logs

[07:53:01.0000] <sangwhan>
/me isn't in the group (nor any important group) so will have to dig through the archive for minutes, BRB

[07:53:17.0000] <marcosc>
odinho: ok, sounds good to me.

[07:53:28.0000] <annevk>
I'm gonna use that from now on. "The Van Kesterens of this world, think you should use a future."

[07:54:02.0000] <Ms2ger>
The Van Kesterens of the netherworld suggest mutation events

[07:59:02.0000] <jgraham>
Every time you use that line we will get TimBL to phone your brother for confirmation.

[08:00:42.0000] <MikeSmith>
the Van Kesterens sound like one of the noble houses in Game of Thrones

[08:01:49.0000] <darobin>
marcosc: the specs weren't deleted unless they were in the webapps testing repo

[08:01:59.0000] <darobin>
we're not including specs in the TS anyway...

[08:02:54.0000] <darobin>
sangwhan: Ms2ger's comments about quality notwithstanding, anything that's meant to be in browsers should be in that repo

[08:03:50.0000] <sangwhan>
/me is checking the tests (never looked at it underneath the hood)

[08:04:57.0000] <sangwhan>
One thing I did find a bit disturbing is this tidbit: http://www.w3.org/2010/webevents/wiki/TEv1ImplReport

[08:05:27.0000] <sangwhan>
Where depending on the implementation the amount of things that get tested are different, which I find quite misleading

[08:06:37.0000] <jgraham>
That's terrible test writing

[08:06:59.0000] <jgraham>
Or terrrible something

[08:08:20.0000] <sangwhan>
Yes on both

[08:08:42.0000] <Ms2ger>
sangwhan, you're involved there, right?

[08:09:42.0000] <sangwhan>
darobin: Ms2ger's points regarding the optional arguments make sense and should be addressed

[08:10:30.0000] <sangwhan>
Ms2ger: Yes, to some extent - I'm getting a bit passive in the involvement due to time constraints though

[08:10:34.0000] <jgraham>
We obviously need a test writing reviewing guide

[08:10:51.0000] <jgraham>
One that makes it clear that having variable numbers of tests is not OK

[08:11:27.0000] <jgraham>
and makes it even clearer that having a feature detection as the first test and then refusing to run the other tests is doubly not OK

[08:11:35.0000] <darobin>
sangwhan: oh yes, I fully agree with Ms2ger's points

[08:11:45.0000] <darobin>
I was just saying that tests for those specs should be included

[08:11:54.0000] <darobin>
(fixed is a separate matter)

[08:12:14.0000] <darobin>
jgraham: great idea, when will you be done? :)

[08:12:51.0000] <darobin>
it should also talk about testing for prefixed features, there's some amount of that going on

[08:13:15.0000] <Ms2ger>
Testing for their non-existence? :)

[08:14:13.0000] <jgraham>
How does "The 'do this or I will send Ms2ger round to your house with a bat' guide to writing testcases" sound?

[08:14:31.0000] <Ms2ger>
Eh

[08:14:36.0000] <Ms2ger>
You wouldn't need to send me

[08:15:48.0000] <jgraham>
Well not if they follow the guide!

[08:18:31.0000] <sangwhan>
I'll see if I can get the optional argument tests in there (and get time to do it, that's the harder part)

[08:20:07.0000] <sangwhan>
As a off-topic question - any browser shipping *with* the assembly optimized helpers in OpenSSL for ARM?

[08:20:41.0000] <sangwhan>
darobin: Guess we should try to get the tests in there then

[08:21:29.0000] <sangwhan>
/me wonders if there is any automation (Webdriver?) effort going on for the interactive web platform tests

[08:21:37.0000] <darobin>
sangwhan: if you want to volunteer, I can give you write-access to the repo

[08:21:47.0000] <Ms2ger>
darobin, which reminds me

[08:22:06.0000] <Ms2ger>
darobin, we should have a group that isn't called "HTML WG" to own the repo

[08:22:08.0000] <darobin>
all we ask is that you don't destroy history, and that you sync with your friends here or on #htmlt (or wherever really)

[08:22:14.0000] <sangwhan>
darobin: I can volunteer, don't expect results too soon though :)

[08:22:28.0000] <darobin>
sangwhan: ok, I'll add you to the team

[08:22:33.0000] <darobin>
Ms2ger: it's just a name

[08:22:43.0000] <darobin>
I'd rather not bikeshed, it's only administrative

[08:22:48.0000] <Ms2ger>
darobin, exactly, I don't like the name :)

[08:22:51.0000] <darobin>
besides, I so do love having you in the HTML WG

[08:23:11.0000] <Ms2ger>
Maybe I should leave it again and have you do merges ;)

[08:23:48.0000] <darobin>
sangwhan: you're in :)

[08:23:55.0000] <darobin>
Ms2ger: awww

[08:23:57.0000] <sangwhan>
/me prepares to wreak havoc

[08:24:43.0000] <sangwhan>
darobin: Got the notifiation, thanks

[08:28:12.0000] <sangwhan>
smaug____: I investigated a bit on how to implement UIEvent.deviceID (or whatever it may be eventually called), looks like a serious pain to implement

[08:30:17.0000] <Ms2ger>
darobin, yay :)

[08:31:20.0000] <darobin>
Ms2ger: :)

[08:31:32.0000] <smaug____>
sangwhan: it can be tricky, yes, and in many cases it would be just some kind of default value, I could imagine

[08:32:44.0000] <TabAtkins>
scott_gonzalez: Just variables.  I haven't sold the WG on Mixins yet, though it would probably be a good idea for me to write it up soonish, just to have it there.

[08:33:42.0000] <Ms2ger>
TabAtkins, just don't dare to put it on dev.w3.org...

[08:34:38.0000] <jgraham>
Yay, CVS!

[08:35:21.0000] <TabAtkins>
MikeSmith: I wasn't involved with the discussions re: Apple using our multiprocess, but from my understanding, it was a lot less cut & dry than Maciej is selling it to be.

[08:36:05.0000] <TabAtkins>
MikeSmith: The fact that they went and made all the same mistakes that we initially did, and are gradually changing things over to the way we do things, suggests that part of the friction was them wanting to do something different than what we originally wanted.

[08:36:06.0000] <darobin>
gotta love how the second example from https://www.w3.org/Bugs/Public/show_bug.cgi?id=15291 is someone using @pattern on input type=email

[08:36:24.0000] <MikeSmith>
TabAtkins: so that suggests there was some miscommunication I guess

[08:36:27.0000] <sangwhan>
CVS isn't that bad, but the layout of W3C's CVS is a bit ... interesting I must say

[08:36:46.0000] <TabAtkins>
Ms2ger: This was a blessing in disguise - it reminded me that I *should* be starting all my specs on GitHub under CC0.

[08:37:00.0000] <MikeSmith>
TabAtkins: because I don't think Maciej is intentionally trying to sell anything. Why would he be?

[08:37:10.0000] <TabAtkins>
I dunno.

[08:37:49.0000] <dglazkov>
good morning, Whatwg!

[08:38:25.0000] <Ms2ger>
dglazkov, good morning, and review your tests

[08:38:56.0000] <dglazkov>
okay

[08:39:09.0000] <Ms2ger>
:D

[08:40:58.0000] <dglazkov>
Ms2ger: love what you guys are doing with github migration

[08:41:32.0000] <Ms2ger>
dglazkov, tell darobin that, I hate github :)

[08:44:43.0000] <darobin>
dglazkov: glad you like it!

[08:44:49.0000] <dglazkov>
darobin: which button do I push? :)

[08:45:01.0000] <darobin>
dglazkov: note that we moved the shadow tests as part of that

[08:45:09.0000] <darobin>
dglazkov: take your pick, we have over 20!

[08:45:29.0000] <dglazkov>
https://github.com/w3c/web-platform-tests/pull/47?

[08:45:48.0000] <darobin>
dglazkov: that's the one

[08:46:00.0000] <darobin>
if you're confident that the tests are good, press the button

[08:46:04.0000] <dglazkov>
I only have the "Comment" button

[08:46:07.0000] <darobin>
ah

[08:46:13.0000] <darobin>
I can fix that

[08:46:16.0000] <dglazkov>
yay

[08:46:49.0000] <darobin>
dglazkov: what's your GH username?

[08:46:55.0000] <darobin>
it doesn't seem to be dglazkov

[08:47:12.0000] <dglazkov>
there totally is :-\

[08:47:18.0000] <dglazkov>
https://github.com/dglazkov

[08:47:22.0000] <darobin>
mmmmm

[08:47:28.0000] <darobin>
/me kicks the autocomplete box

[08:47:54.0000] <darobin>
dglazkov: reload

[08:48:42.0000] <dglazkov>
http://i.imgur.com/XHEsR.jpg

[08:49:15.0000] <sangwhan>
/me wonders what nat/google/x-ldqrrirqhnoeanad is

[08:50:05.0000] <dglazkov>
sangwhan: it's a thing. Not infectious though.

[08:51:14.0000] <sangwhan>
/me blinks (oh wait)

[08:58:21.0000] <miketaylr>
dglazkov: is there a better link for https://dvcs.w3.org/hg/webcomponents/raw-file/tip/explainer/?

[08:58:45.0000] <tbranyen>
i mean that one is pretty good, but something a little more concrete would be great

[09:00:41.0000] <miketaylr>
/me just sees -rwxr-xr-x 61523 index.html

[09:06:30.0000] <tbranyen>
oh yeah, i was being sarcastic

[09:06:38.0000] <tbranyen>
but if someone knows the right link for the WebComponents spec

[09:06:48.0000] <tbranyen>
that'd be thanks to be shared

[09:09:29.0000] <dglazkov>
tbranyen: https://dvcs.w3.org/hg/webcomponents/raw-file/tip/explainer/index.html

[09:10:05.0000] <tbranyen>
excellent thanks dglazkov

[09:15:01.0000] <Adawerk_>
Is it ok to to do away with the <label for=""> if the text field has a placeholder and an aria-label attribute stating what it should be?

[09:15:32.0000] <TabAtkins>
Sure.

[09:15:51.0000] <jgraham>
I note that having a mix of alllower and InitialCaps names for directories is ugly

[09:16:37.0000] <Adawerk_>
TabAtkins: I figured so. Now that we're not supporting older browsers, I think this can be more effective.

[09:16:52.0000] <Adawerk_>
thanks

[09:17:26.0000] <Ms2ger>
Adawerk_, does it still let you click on the label to focus the field?

[09:17:55.0000] <Adawerk_>
I don't think so. That function will be gone if I rid of the label.

[09:18:09.0000] <Ms2ger>
Oh

[09:18:12.0000] <Ms2ger>
/me misread

[09:18:29.0000] <Adawerk_>
I may keep the labels for checkboxes/radio

[09:18:44.0000] <Adawerk_>
well I'll need to keep them now that i think about it.

[09:18:46.0000] <Adawerk_>
heh

[09:34:33.0000] <darobin>
dglazkov: thanks for reloading and shooting that one :)

[09:35:03.0000] <dglazkov>
darobin: big gun. tiny brain. what could go wrong

[09:35:28.0000] <darobin>
nothing so long as we ensure it all happens in a room with the right targets :)

[09:35:42.0000] <dglazkov>
darobin: a really small room.

[09:36:50.0000] <darobin>
and if it doesn't work, add booze

[10:05:13.0000] <SimonSapin>
TabAtkins: have we resolved on premultiplied or not for gradients?

[10:05:46.0000] <SimonSapin>
it seems cairo does non-premultiplied :(

[10:05:49.0000] <Ms2ger>
/me sniggers

[10:34:49.0000] <jgraham>
Really need dzenana-trenutak to join irc

[10:35:39.0000] <jgraham>
Lots of http://critic.hoppipolla.co.uk/r/47 must be dupliactes of Aryeh's stuff

[12:11:14.0000] <paul_irish>
does anyone recall discussions around "element queries" somewhere? i thought i remembered seeing some threads on it.. http://ianstormtaylor.com/media-queries-are-a-hack/

[12:43:33.0000] <jgraham>
paul_irish: That has been discussed. The problem is that it can create loops

[12:48:11.0000] <eclipsevictim>
does anyone have a "Best Practices" for IndexedDB's upgradeneeded event?

[13:23:04.0000] <dgrogan>
eclipsevictim: assuming google hasn't turned up anything useful, I'd suggest asking a more detailed question on stackoverflow, not here.

[13:31:46.0000] <JonathanNeal>
I like <sublime>

[13:33:48.0000] <jsbell>
eclipsevictim: I just added a basic example to the spec, but not re-versioning...

[13:34:13.0000] <jsbell>
eclipsevictim: https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#introduction

[13:35:41.0000] <jsbell>
eclipsevictim: I assume you'd find an example showing e.g. how to migrate from older versions helpful?

[13:42:49.0000] <eclipsevictim>
preferably from 2 or more older versions

[13:42:51.0000] <eclipsevictim>
yes

[13:43:44.0000] <eclipsevictim>
very helpful

[13:43:54.0000] <eclipsevictim>
it would be, and much appreciated ...

[13:49:28.0000] <jsbell>
eclipsevictim: take another look at: https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#introduction

[13:49:39.0000] <jsbell>
I added an example showing opening v3

[13:50:20.0000] <jsbell>
It's a spec not a tutorial so it's brief, but hopefully that steers you in the right direction.

[13:51:21.0000] <jsbell>
html5rocks.com has older examples with the old versioning API and webplatform.org doesn't have anything on IDB yet, alas.

[13:51:32.0000] <eclipsevictim>
ok

[13:51:35.0000] <eclipsevictim>
that'll do

[13:51:50.0000] <eclipsevictim>
although it means that you (and the spec) think that the right thing to do is to rely on the db version field

[13:52:07.0000] <eclipsevictim>
that's good enough for me as long as you're willing to have someone publish docs which say so :)

[13:54:00.0000] <jsbell>
Yep, well, that's how the feature was designed to be used. Of course you could come up with some alternate scheme but then the API isn't helping you.

[13:56:11.0000] <eclipsevictim>
if that's the design, i'm quite happy w/ it

[13:56:20.0000] <eclipsevictim>
the guy who asked me didn't see any way to get the old version

[13:56:27.0000] <eclipsevictim>
which your example resolves nicely :)

[13:57:19.0000] <eclipsevictim>
OH

[13:57:23.0000] <eclipsevictim>
one thing that really bugs me

[13:57:27.0000] <jsbell>
cool. :) Yeah, versioning is confusing at the best of times and IDB's API change just as people were starting to experiment with it didn't help. :P

[13:57:28.0000] <eclipsevictim>
i can't find a way to link to IDBVersionChangeEventInit

[13:57:46.0000] <eclipsevictim>
i can link to options-object-concept

[13:57:48.0000] <eclipsevictim>
but that's lame

[13:58:15.0000] <eclipsevictim>
i suspect that in principle i should make this complaint about all of your object definitions

[13:58:33.0000] <eclipsevictim>
(and i should be nice and send it as email so that i can be credited w/ the complaint, to show i'm a good citizen, but oh well)

[13:58:34.0000] <jsbell>
Yeah, I think that's a bug in ReSpec.js at the moment...

[13:58:41.0000] <eclipsevictim>
ok

[13:59:06.0000] <jsbell>
types (both internal/external) aren't turning into links correctly. I have mail to Robin about that.

[13:59:41.0000] <jsbell>
Hopefully he'll get that fixed and we'll publish a new WD by the end of this month.

[14:00:12.0000] <eclipsevictim>
/me nods

[14:00:32.0000] <eclipsevictim>
anyway, thanks, you've cleared a work item i meant to ask about a few weeks back (it got buried, and then i took a vacation)

[14:47:49.0000] <smaug____>
how do I file bugs on DAP WG's specs

[14:48:08.0000] <smaug____>
mailing list only?

[15:04:20.0000] <annevk>
think so

[16:18:49.0000] <boblet_>
hixie: yt? would like to get your take on del vs s

[16:22:12.0000] <boblet_>
I’m unsure how I’d use/style them on the same page, and I’m also wondering what other use cases for s apart from discounts

[16:28:07.0000] <zewt>
whenever i'm working in java i feel like i'm in school with a hall monitor looking over my shoulder

[16:28:23.0000] <zewt>
"unreachable code?  that violates school rules!!! FATAL ERROR"


2013-04-05
[18:26:08.0000] <Hixie_>
boblet_: here briefly now

[18:53:41.0000] <kochi>
MikeSmith: yt?

[18:54:45.0000] <MikeSmith>
kochi: います。

[18:54:52.0000] <MikeSmith>
mission accomplished

[18:54:57.0000] <MikeSmith>
for publication

[18:54:58.0000] <kochi>
hello!

[18:55:01.0000] <MikeSmith>
hey man

[18:55:03.0000] <kochi>
thanks for your help

[18:55:12.0000] <MikeSmith>
I didn't do anything!

[18:55:16.0000] <MikeSmith>
Art did it all

[18:55:17.0000] <kochi>
BTW, we still list Bono-san's name on the doc

[18:55:21.0000] <MikeSmith>
oh

[18:55:28.0000] <MikeSmith>
we can move him to former editor

[18:55:32.0000] <kochi>
What is the convention for ex-member?

[18:56:20.0000] <MikeSmith>
usually we just add a "Former editor(s)" heading after the "Editors" heading

[18:58:19.0000] <kochi>
any example spec which has that?

[19:00:56.0000] <kochi>
at least, his email address is unreachable now

[19:07:25.0000] <kochi>
http://www.w3.org/TR/2013/REC-sparql11-query-20130321/ has "Previous Editor"

[19:12:51.0000] <MikeSmith>
kochi: yeah "Previous Editor" is fine too

[19:13:12.0000] <MikeSmith>
there really are not rules and no strong convention

[19:13:26.0000] <MikeSmith>
there really are no rules and no strong convention

[19:13:47.0000] <kochi>
i see, thanks.  I'll follow the "previous editor" school.

[19:14:31.0000] <kochi>
I'll look into respec whether it supports anything like that.

[19:15:21.0000] <kochi>
As it is published anyway (Apr.4 version), no way to modify the editor part?

[19:17:36.0000] <MikeSmith>
kochi: there is a way

[19:17:45.0000] <MikeSmith>
which is, I edit it in place

[19:17:53.0000] <MikeSmith>
you want me to do that now?

[19:18:13.0000] <kochi>
yes, if it's possible!

[19:18:33.0000] <MikeSmith>
ok

[19:18:38.0000] <MikeSmith>
gimme a minutes

[19:18:40.0000] <kochi>
thanks a lot!!

[19:21:14.0000] <MikeSmith>
kochi: ok, done - http://www.w3.org/TR/2013/WD-ime-api-20130404/

[19:21:30.0000] <MikeSmith>
kochi: btw, also nice to see good feedback from Microsoft

[19:21:39.0000] <kochi>
Thanks!

[19:21:55.0000] <MikeSmith>
or rather, the promise of some more feedback upcoming

[19:22:01.0000] <MikeSmith>
from Travis

[19:22:28.0000] <MikeSmith>
they clearly seem quite interested in teh API and planning to implement it

[19:22:29.0000] <kochi>
BTW, hbono at google.com is already unreacheable so could you also remove the address?  I think the company name is fine because he belonged to it then.

[19:22:40.0000] <MikeSmith>
ok, will do

[19:22:57.0000] <MikeSmith>
do you knwo where Bono-san went to?

[19:23:18.0000] <kochi>
I heard some rumor, but can't talk about it here ;)

[19:23:46.0000] <MikeSmith>
ok

[19:24:06.0000] <MikeSmith>
yeah I seem to remember hearing the rumor too but can't recall the details

[19:24:26.0000] <MikeSmith>
anyway I like him and hope he's doing well wherever he is

[19:25:26.0000] <kochi>
I hope so, too.  He should be performing quite awesome wherever he is

[19:27:28.0000] <kochi>
re Microsoft's feedback, yes, they seem definitely interested.

[19:30:14.0000] <kochi>
also I'm waiting Nakano-san's feedback.

[19:30:19.0000] <kochi>
but he seems quite busy.

[19:42:59.0000] <kochi>
MikeSmith: it seems my name is deleted in the "Editors" section :)

[19:44:12.0000] <MikeSmith>
oops

[19:53:59.0000] <kochi>
MikeSmith: Thanks, it looks good now. :) :)

[19:54:07.0000] <MikeSmith>
great

[23:05:48.0000] <heycam>
MikeSmith, ping

[23:14:02.0000] <heycam>
MikeSmith, (nm, I have mailed sysreq)

[23:19:24.0000] <MikeSmith>
heycam: ok but I'm still happy to check up on it if you want

[23:19:43.0000] <heycam>
MikeSmith, oh I just wanted to check if it was possible to manually allows mails from a particular address to public-svg-wg

[23:19:58.0000] <MikeSmith>
sure it is

[23:20:04.0000] <MikeSmith>
can do it right now

[23:20:12.0000] <heycam>
MikeSmith, oh great. would you be able to add cam+svgwgrepo⊙mia

[23:20:36.0000] <heycam>
I changed the svgwg.org repo hooks to use that address some time ago, not realising that it stopped the commit notifications going to the list :/

[23:20:49.0000] <MikeSmith>
h

[23:20:52.0000] <MikeSmith>
ah

[23:21:45.0000] <MikeSmith>
heycam: ok, done now

[23:21:52.0000] <heycam>
MikeSmith, great, lemme just test

[23:29:37.0000] <heycam>
MikeSmith, hmm, something isn't working; http://www.pastebin.mozilla.org/2275132

[23:43:25.0000] <MikeSmith>
heycam: please try it again now

[23:43:27.0000] <tobie>
What's the correct name to refer to JS APIs which are not part of the DOM? Is "BOM" still used?

[23:44:11.0000] <tobie>
Or does that make me sound real old school?

[23:44:30.0000] <heycam>
these days I think of BOM as byte order mark

[23:44:36.0000] <heycam>
but I think people used to use BOM = Browser Object Model

[23:45:16.0000] <heycam>
MikeSmith, seem to get the same error when talking to the smtp server

[23:45:20.0000] <heycam>
oh hang on

[23:45:26.0000] <tobie>
It's the latter I was implying, and it does sound slightly dated, doesn't it?

[23:45:41.0000] <heycam>
I think it does

[23:45:48.0000] <heycam>
MikeSmith, "250 Accepted'

[23:45:58.0000] <heycam>
MikeSmith, I'll try by comitting a change now...

[23:46:10.0000] <tobie>
mmm.

[23:46:50.0000] <heycam>
I'd just go with web platform apis or something… dunno if there's a good acronym for it

[23:47:06.0000] <MikeSmith>
I never heard of "browser object model" before

[23:47:54.0000] <heycam>
hey, we're free to implement whatever APIs we want: http://en.wikipedia.org/wiki/Browser_Object_Model

[23:50:49.0000] <MikeSmith>
heycam: cool. it's like having the Driving Ace in Mille Bornes

[23:51:15.0000] <heycam>
/me doesn't know what those words mean but can look them up

[23:51:52.0000] <Ms2ger>
tobie, we call those "DOM" too

[23:52:26.0000] <tobie>
who is "we"?

[23:52:35.0000] <Ms2ger>
Me

[23:52:51.0000] <MikeSmith>
DOM0?

[23:53:00.0000] <heycam>
oh yeah DOM 0, that term sounds more familiar

[23:53:13.0000] <tobie>
Ms2ger: You just stepped up your game another level, here.

[23:53:19.0000] <Ms2ger>
:D

[23:53:33.0000] <MikeSmith>
it seems to be what we usually call DOM0

[23:54:41.0000] <tobie>
Ms2ger: would you say the navigator object is part of the DOM?

[23:54:54.0000] <Ms2ger>
Yes

[23:55:00.0000] <tobie>
or really?

[23:55:01.0000] <tobie>
wow

[23:55:08.0000] <tobie>
you too, MikeSmith?

[23:55:16.0000] <heycam>
MikeSmith, so the mail sent from my repo hooks doesn't seem to have made it to the archives yet; neither this manual test http://www.pastebin.mozilla.org/2275183

[23:55:19.0000] <tobie>
Or would you say it's a DOM0 API. :D

[23:55:25.0000] <Ms2ger>
Its implementation lives under dom/ in Gecko :)

[23:55:28.0000] <heycam>
ha

[23:55:54.0000] <tobie>
Ms2ger: by definition, this is an implementation detail. :D

[23:56:22.0000] <Ms2ger>
tobie, and? :)

[23:56:28.0000] <MikeSmith>
heycam: yeah but I tried sending a message to the list from my own address and it doesn't seem to have made it to the list yet either

[23:56:38.0000] <heycam>
MikeSmith, ok, might be a delay then

[23:56:51.0000] <MikeSmith>
yeah

[23:58:59.0000] <MikeSmith>
tobie: I think DOM0 was defined as whatever the early versions of netscape navigator and IE did that wasn't later defined in a standard spec

[23:59:09.0000] <MikeSmith>
until HTML5 at least

[23:59:21.0000] <tobie>
The DOM is a modelization of the HTML contained in the page. navigator, for example, has nothing to do with this.

[23:59:41.0000] <MikeSmith>
yeah but it's using "DOM" loosely in this case

[23:59:46.0000] <tobie>
yeah

[00:00:06.0000] <tobie>
I'm asking because the kind folks at webplatform.org are struggling with this

[00:00:34.0000] <MikeSmith>
which is better than using BOM which most people have no cleue what it means in that context and it's ambiguous with BOM the byte-order-mark

[00:00:42.0000] <tobie>
agreed.

[00:01:16.0000] <Ms2ger>
Would you say that Event is part of the DOM?

[00:01:42.0000] <tobie>
ha

[00:01:43.0000] <MikeSmith>
tobie: I suggest the webplatform.org crew got with "what used to be called DOM0 but is not part of the current HTML LS and DOM (Core/4) specifications"

[00:01:55.0000] <MikeSmith>
*go with

[00:01:58.0000] <tobie>
sounds great for a url too

[00:02:23.0000] <MikeSmith>
heh

[00:02:36.0000] <MikeSmith>
*now part of

[00:02:39.0000] <tobie>
what about js apis?

[00:08:00.0000] <MikeSmith>
tobie: "non-DOM standard JS APIs that are not a standard part of EcmaScript"

[00:08:41.0000] <heycam>
MikeSmith, would I have got one of those "please approve archival of your email" things to cam+svgwgrepo⊙mia?

[00:09:02.0000] <heycam>
MikeSmith, I only just checked and allowed through cam+svgwgrepo⊙mia to my address (thought it was automatic with my mail server but apparently not)

[00:09:53.0000] <MikeSmith>
heycam: you would and you did but I already went into the admin console and approved them for you

[00:10:10.0000] <heycam>
MikeSmith, aha ok.

[00:19:15.0000] <jgraham>
We call those things DOM

[00:19:28.0000] <jgraham>
Even though they are not the Object Model of a Document

[00:19:52.0000] <jgraham>
But really, if the webplatform.org people can't live with that level of confusion they need a different hobby

[00:30:29.0000] <tobie>
jgraham: In truth, I'm the one having issues with that level of confusion.

[00:31:12.0000] <tobie>
It's terribly difficult to teach something which has awfully confusing naming.

[00:31:55.0000] <Ms2ger>
There's "JS", which is everything in ECMAScript and related extensions

[00:32:08.0000] <Ms2ger>
And then there's "DOM", which is everything defined in IDL

[00:32:20.0000] <Ms2ger>
Except for Typed Arrays, those are JS too

[00:32:32.0000] <heycam>
MikeSmith, the mails came through. thanks a lot!

[00:32:44.0000] <heycam>
MikeSmith, you can close the sysreq ticket?

[00:33:25.0000] <MikeSmith>
heycam: yup

[01:26:07.0000] <zcorpan>
krijn_: please add this to updateFilter() in the log's s.js:

[01:26:12.0000] <zcorpan>
krijn_: || lis[i].textContent.search(/^# \[\d\d:\d\d\] * .+ is now known as /) == 0

[01:28:10.0000] <zcorpan>
krijn_: maybe the other checks should also use textContent.search(/^.... instead, since sometimes people quote such a line and then it shouldn't be hidden

[01:45:43.0000] <krijn_>
zcorpan: done

[01:46:24.0000] <zcorpan>
krijn_: thanks

[02:27:33.0000] <annevk>
tobie: most of the naming should be sorted now though

[02:28:32.0000] <tobie>
annevk: yeah, I'm just complaining that we have no better name for describing what XHR is than: it's a DOM API.

[02:28:48.0000] <annevk>
tobie: I'd call it a platform API

[02:29:05.0000] <annevk>
or just an API really

[02:29:18.0000] <tobie>
so naming is sorted now...

[02:29:28.0000] <tobie>
but everyone uses a different nam.

[02:29:29.0000] <annevk>
Not really sure why TC39 keeps referring to non-DOM stuff as DOM

[02:29:42.0000] <tobie>
s/nam/name/

[02:30:13.0000] <annevk>
Yeah that's true. Some people call elements tags, and tags elements, etc.

[02:30:44.0000] <tobie>
So this morning I woke, wrote a page long rant on naming choice in webplatform, then doubled check my assumptions in here, trashed the email and went on with my real job.

[02:30:56.0000] <tobie>
s/woke/woke up/

[02:31:14.0000] <tobie>
s/check/checked/

[02:31:44.0000] <Ms2ger>
Get some more tea

[02:31:46.0000] <annevk>
Yeah it's bad. The continued confusion between ECMAScript and JavaScript is also annoying.

[02:32:00.0000] <tobie>
confusion?

[02:32:28.0000] <annevk>
Some say it's the same, some say JavaScript is referring in particular to Mozilla's implementation (which I think is nonsense, but you know), ...

[02:32:42.0000] <Ms2ger>
As opposed to JScript, eh

[02:32:43.0000] <tobie>
annevk: yeah, that is nonsense

[02:33:16.0000] <tobie>
JS == common name for ES

[02:33:46.0000] <tobie>
JS != ES + special Moz thingies.

[02:34:11.0000] <tobie>
But of course some will disagree.

[02:34:32.0000] <tobie>
I wish Oracle would just step in here and clarify.

[02:34:53.0000] <tobie>
:D

[02:34:57.0000] <Ms2ger>
Let's call it OracleScript

[02:35:10.0000] <tobie>
That sounds suprising good, actually.

[02:35:38.0000] <annevk>
Except for the part where it's a new name

[02:36:33.0000] <tobie>
OracleScript: No need to learn how to code, it will read your mind.

[02:37:24.0000] <tobie>
These distinctions remind me of comp.lang.javascript

[02:39:13.0000] <jgraham>
/me waits for tobie to go and clean out his brain

[02:39:33.0000] <tobie>
I'm certainly not going back there.

[02:39:34.0000] <tobie>
:)

[02:44:50.0000] <annevk>
ooh man, I sure hope we don't turn into a newsgroup

[02:45:53.0000] <Ms2ger>
That's a support forum

[02:46:05.0000] <jgraham>
We are already calcifying and turning into an old standards organisation, just like IETF and W3C did :)

[02:49:45.0000] <Ms2ger>
We should start a new one

[02:49:53.0000] <Ms2ger>
Anyone up for a WHICHWG?

[02:50:12.0000] <jgraham>
I've always wanted WHYWG

[02:51:09.0000] <darobin>
WITCHWG?

[02:58:58.0000] <chee>
JS == common name for ES, but JS !== common name for ES

[02:59:02.0000] <chee>
WATWG

[02:59:03.0000] <Ms2ger>
jgraham, http://critic.hoppipolla.co.uk/r/5 doesn't seem to have noticed that I just pushed another commit there

[02:59:49.0000] <jgraham>
Ms2ger: Dunno what went wrong there

[02:59:59.0000] <jgraham>
But I triggered the update manually

[03:00:11.0000] <Ms2ger>
Great, ta

[03:02:39.0000] <annevk>
"The app Critic will be able to: Read your public information." hmm

[03:03:07.0000] <jgraham>
Yeah. That's what "public" means, really

[03:04:42.0000] <jgraham>
(I can't ask for fewer permissions than that)

[03:05:12.0000] <jgraham>
(which makes sense because I could equally get the public information by scraping github.com)

[03:05:50.0000] <jgraham>
(but it isn't enough permissions to do useful things like add comments to pull requests or add a "Merge Pull Request" button)

[03:06:05.0000] <chee>
so rly it's just saying when you log in with github you will have logged in using github

[03:07:01.0000] <jgraham>
It's saying you'll have logged in using github, but the app won't be able to do anything that it couldn't do even if you hadn't logged in via github and only knew your github username

[03:07:10.0000] <chee>
right

[03:07:22.0000] <annevk>
still somewhat weird that this is allowed as the app does not use TLS

[03:07:53.0000] <annevk>
but I guess that's no big deal, unless the app can ask for more

[03:08:45.0000] <jgraham>
Nothing is transmitted in the clear

[03:08:51.0000] <jgraham>
Well, almost nothing

[03:09:06.0000] <jgraham>
Your github credentials go only to github over https

[03:09:23.0000] <jgraham>
and the final access token is retrieved from github over https

[03:10:11.0000] <jgraham>
The only thing that goes in the clear is a temporary code which is tied to a secret

[03:10:20.0000] <jgraham>
(and the secret is never transmitted)

[03:12:37.0000] <annevk>
my connection to your server could be MITM'd

[03:14:40.0000] <jgraham>
True, but what secret information is going over that connection?

[03:16:38.0000] <jgraham>
I guess someone could steal a cookie and use critic as if they were you

[03:18:12.0000] <webben>
[re naming conventions for XHR

[03:18:18.0000] <webben>
what's wrong with BOM?

[03:18:23.0000] <webben>
(browser object model)

[03:18:34.0000] <Ms2ger>
Nobody uses it

[03:20:08.0000] <jgraham>
annevk: Anyway if you can suggest a sutiably inexpensive way to set up TLS I am happy to do so

[03:20:39.0000] <webben>
Ms2ger: "Nobody" is a bit of an exaggeration.

[03:20:39.0000] <darobin>
and BOM already means something else

[03:20:40.0000] <annevk>
webben: means Byte Order Mark

[03:20:46.0000] <darobin>
something nasty, too

[03:20:52.0000] <webben>
e.g. http://msdn.microsoft.com/en-us/library/ms952643.aspx

[03:20:58.0000] <annevk>
/me goes to urbandictionary

[03:21:09.0000] <Ms2ger>
Exaggeration is my middle name

[03:21:10.0000] <webben>
yeah confusion with Byte Order Mark is suboptimal

[03:21:14.0000] <darobin>
annevk: no, by nasty I really did just mean Byte Order Mark

[03:21:17.0000] <jgraham>
I thought "Byte Order Mark" was the "something nasty"

[03:21:32.0000] <annevk>
darobin: aaah, you had me excited

[03:21:45.0000] <annevk>
"Word that is interchangable with bro, dude, man, friend, buddy, pal, mon, bredrin, n*igga etc used in the trap."

[03:22:02.0000] <darobin>
annevk: funny that, I thought that Byte Order Mark would actually get you more excited than something saucy from urbandict :)

[03:22:07.0000] <annevk>
Yo bom, BOM that resource.

[03:22:45.0000] <darobin>
maybe we should suggest to Unicode that they rename it to Byte Reading Order

[03:23:07.0000] <annevk>
BRO that shit up

[03:23:21.0000] <darobin>
extra bonus: "Dude, have you check the Bro Code on that file?"

[03:23:38.0000] <darobin>
*checked

[03:24:05.0000] <annevk>
I checked the BRO code and it was totally authoritative of my behavior.

[03:24:45.0000] <darobin>
the BRO code says I'm Big Endian, baby, uh huh!

[03:24:48.0000] <annevk>
I think this is much more useful use of my time than trying to come up with a note for Authoritative Metadata, which incidentally is about the same thing.

[03:25:34.0000] <jgraham>
I'm not sure that authorative metadata is a good use of anyone's time (but don't take my word for it)

[03:25:53.0000] <darobin>
echo "Authoritative Metadata is just evil." > note-to-tag.txt

[03:25:57.0000] <darobin>
there, done it for you bro

[03:35:08.0000] <Ms2ger>
/me wonders if anybody plans to implement MediaController

[03:36:16.0000] <jgraham>
/me wanders lonley as a cloud

[03:42:49.0000] <annevk>
darobin: http://www.w3.org/2001/tag/doc/mime-respect-20130405.html

[03:42:54.0000] <annevk>
darobin: lets see what they say

[03:44:31.0000] <darobin>
annevk: you just added the warning?

[03:44:51.0000] <annevk>
darobin: yeah

[03:45:01.0000] <darobin>
I like it :)

[04:45:10.0000] <Ms2ger>
darobin, ping

[04:54:57.0000] <darobin>
Ms2ger: ?

[04:55:41.0000] <Ms2ger>
darobin, is it possible that the new idl parser doesn't handle const DOMString product = "Gecko"; ?

[04:56:32.0000] <darobin>
Ms2ger: "The ConstValue part of a constant declaration gives the value of the constant, which can be one of the two boolean literal tokens (true and false), the null token, an integer token, a float token, or one of the three special floating point constant values (-Infinity, Infinity and NaN). "

[04:56:35.0000] <darobin>
so, yes

[04:56:50.0000] <Ms2ger>
Oh, it is actually wrong

[04:56:53.0000] <Ms2ger>
?

[04:57:07.0000] <darobin>
the parser is right, I think the spec is wrong

[04:57:32.0000] <darobin>
WebIDL doesn't support string constants

[04:57:35.0000] <Ms2ger>
Mm

[04:57:42.0000] <darobin>
which seems deliberate, but I can't recall why

[04:57:54.0000] <Ms2ger>
We have some in IDB too

[04:58:08.0000] <darobin>
yeah

[04:58:31.0000] <jgraham>
So it's the WebIDL spec that's wrong? >)

[04:58:33.0000] <darobin>
I've taken the path of slavishly following the spec in the code; I'd really rather this were fixed in the spec

[04:58:42.0000] <darobin>
jgraham: ayup

[04:58:44.0000] <jgraham>
s/>/:/

[04:59:09.0000] <darobin>
paging heycam|away

[05:00:05.0000] <jgraham>
It's it like 2am in upsidedown land?

[05:00:12.0000] <jgraham>
*Isn't

[05:00:20.0000] <darobin>
it's annevk's fault: http://lists.w3.org/Archives/Public/public-script-coord/2011OctDec/0040.html

[05:00:39.0000] <darobin>
jgraham: no, it's 2300

[05:02:12.0000] <jgraham>
Ah, I was closer for New Zealand

[05:02:33.0000] <jgraham>
More evidence that NZ is better I think

[05:04:50.0000] <darobin>
Ms2ger: full blame for that change should be attributed to annevk, heycam|away, sicking, jgraham, Hixie_, and dom

[05:05:06.0000] <darobin>
I suggest we hold some kind of punitive tribunal

[05:05:12.0000] <Ms2ger>
/me shakes his fast at those involved

[05:06:22.0000] <Ms2ger>
"WorkerLocation implements URLUtilsReadOnly, but one is undefined or not an interface"

[05:06:34.0000] <Ms2ger>
Is it just me, or does that error message read weirdly?

[05:06:56.0000] <jgraham>
darobin: I can hardly be blames!

[05:06:59.0000] <jgraham>
*blamed

[05:07:15.0000] <jgraham>
"""Anyway possibly I am starting to sound like someone who cares. I'm not

[05:07:17.0000] <jgraham>
sure that I am."""

[05:08:12.0000] <karlcow>
"I'm not sure that I am." I should keep that around on a yellow sticky note.

[05:09:06.0000] <Ms2ger>
Does that imply "I'm not sure that I think"?

[05:09:49.0000] <jgraham>
More like "I might not think", perhaps?

[05:11:07.0000] <karlcow>
It was maybe a self-warning on the line of "Choose your battle."

[05:11:41.0000] <karlcow>
or "Do I care enough?", "Is it worth my time?", etc.

[05:12:42.0000] <darobin>
Ms2ger: where is that error message from? idlharness?

[05:12:51.0000] <Ms2ger>
Yes

[05:12:53.0000] <Ms2ger>
Er, no

[05:12:54.0000] <darobin>
/me looks

[05:12:56.0000] <Ms2ger>
The parser

[05:13:02.0000] <darobin>
huh

[05:13:10.0000] <Ms2ger>
... I think

[05:13:10.0000] <karlcow>
In my annoying features of the Web list this morning (infinite scrolling with XHR), but do I care enough :)

[05:13:28.0000] <Ms2ger>
Halp

[05:13:59.0000] <darobin>
Ms2ger: no, it's from idlharness

[05:14:43.0000] <darobin>
ah, I see how that weird message comes to be

[05:18:06.0000] <Ms2ger>
2021 Pass

[05:18:06.0000] <Ms2ger>
1856 Fail

[05:18:08.0000] <Ms2ger>
/me sighs

[05:18:44.0000] <darobin>
Ms2ger: the error message should now be helpful

[05:19:42.0000] <Ms2ger>
darobin, ta

[05:19:47.0000] <Ms2ger>
Now, on another note

[05:19:47.0000] <darobin>
np

[05:19:54.0000] <Ms2ger>
Will Blink remove support for HTMLBaseFontElement?

[05:22:37.0000] <Ms2ger>
Yet another note...

[05:22:59.0000] <Ms2ger>
'assert_throws: getting property on prototype object must throw TypeError function "function () { [native code] }" did not throw' isn't an obvious way of saying 'you don't implement onstorage'

[05:26:36.0000] <darobin>
isn't that the reverse?

[05:27:32.0000] <jgraham>
Hmm, I thought properties were supposed to be on prototypes?

[05:28:39.0000] <Ms2ger>
Right

[05:28:59.0000] <Ms2ger>
But if you do window.Node.prototype.ownerDocument, you get an exception

[05:31:03.0000] <Ms2ger>
darobin, don't I have push access to the th.js repo?

[05:31:25.0000] <darobin>
Ms2ger: lemme check

[05:32:16.0000] <darobin>
now you do

[05:32:33.0000] <darobin>
I made team web-platform-test allowed to push there, I reckon it makes sense

[05:33:02.0000] <Ms2ger>
Makes sense to me, at least :)

[05:33:49.0000] <jgraham>
Well

[05:34:01.0000] <jgraham>
It would be nice to get code review before people push

[05:34:10.0000] <jgraham>
Which means using the PR mechanism

[05:34:49.0000] <Ms2ger>
https://github.com/w3c/testharness.js/pull/22

[05:34:51.0000] <Ms2ger>
There you go

[05:35:18.0000] <darobin>
jgraham: I would expect most people to use PRs

[05:35:36.0000] <darobin>
were I to make a major change, that's what I would do; but it's convenient to push for the smaller stuff

[05:36:15.0000] <darobin>
thanks, applied

[05:37:21.0000] <jgraham>
Yeah, it tends to be small, convenient pushes that break the world :)

[05:38:20.0000] <jgraham>
I wouldn't object to having a slightly lax system if this were some time critical project with lots of people working on it all the time and lots of churn. But it's not, so asking for review of all changes seems totally reasonable.

[05:39:28.0000] <Ms2ger>
/me is all for review

[05:40:19.0000] <Ms2ger>
Where do I scribble down enhancement requests for idlharness.js, btw?

[05:40:27.0000] <darobin>
Ms2ger: the issues?

[05:40:28.0000] <Ms2ger>
Github issues? Somewhere in bugzilla?

[05:40:44.0000] <darobin>
if you can avoid bugzilla, I'd be very thankful

[05:40:55.0000] <Ms2ger>
Hah

[05:40:58.0000] <darobin>
Ms2ger: in fact the repo has an idlharness label

[05:40:58.0000] <Ms2ger>
I like bugzilla ;)

[05:41:13.0000] <darobin>
I guess you'd have to :)

[05:41:21.0000] <Ms2ger>
And it has a bunch of issues already

[05:41:51.0000] <zewt>
most of my experience with bugzilla is having it drop a 200x200 matrix of projects and components at me when i'm trying to report a bug and expecting me to know what to click

[05:45:14.0000] <jgraham>
I can't express the joy I feel at the thought of using an issue tracker system designed to let <del>idtions</del><ins>delightful humorists</ins> add animated gifs as comments.

[05:45:26.0000] <jgraham>
*idiots

[05:45:28.0000] <jgraham>
Sigh

[05:45:35.0000] <zewt>
yeah that's not a good word to typo

[05:46:07.0000] <Ms2ger>
jgraham, jira?

[05:46:12.0000] <darobin>
/me barfs

[05:46:21.0000] <darobin>
don't do things like that man

[05:46:21.0000] <jgraham>
Ms2ger: I don't think jira lets you do that.

[05:46:33.0000] <jgraham>
I mean it's bad, but not *that* bad

[05:46:37.0000] <darobin>
jira doesn't let you do anything

[05:46:46.0000] <jgraham>
Also, no one runs JIRA exposed to the web (right?!)

[05:47:12.0000] <zewt>
i think that's usually the point heh

[05:47:25.0000] <darobin>
most of my memories of jira involve using Firebug to remove the disabled flag on its submit button because 1) it disables it on click, 2) the backend times out all the time

[05:47:44.0000] <jgraham>
I have to say I have never had the particular problem

[05:47:51.0000] <zewt>
heh yeah i've written user scripts to kill forms that do that (in other things)

[05:49:14.0000] <zewt>
they're painfully annoying to write in chrome compared to firefox though

[05:49:46.0000] <zewt>
since i have to edit it, switch to settings dialog, drop it in, confirm instead of just editing it in-place and reloading

[05:54:46.0000] <zewt>
... so, is gmail really now trying to force everyone to top-post, with no option to stop collapsing quotes on reply?

[06:10:10.0000] <annevk>
press down, hit enter

[06:10:37.0000] <annevk>
hsivonen: opting out of synchronous access to CSSOM needs elaboration

[06:10:54.0000] <annevk>
hsivonen: does it mean it will suddenly appear at some point?

[06:14:09.0000] <hsivonen>
annevk: I'd make it unavailable unless the page calls some async method for requesting availability first

[06:14:18.0000] <hsivonen>
to avoid race conditions

[07:06:54.0000] <hsivonen>
John Foliot sure likes DRM: supporting even a withdrawn EME CfC. :-)

[07:07:02.0000] <zewt>
every time? not okay

[07:07:17.0000] <zewt>
... how does anyone get anything done in eclipse? it's the buggiest IDE i've used in years

[07:07:53.0000] <hsivonen>
Eclipse is very good for Java

[07:07:58.0000] <zewt>
i spend more time fighting with its imaginative bugs than getting work done, where it'll randomly decide to have no text cursor, scroll edit boxes around uncontrollably and now my arrow keys won't work

[07:08:10.0000] <zewt>
it's heinous

[07:08:10.0000] <hsivonen>
pretty good for C++, too

[07:09:15.0000] <hsivonen>
too bad their QA for CDT is so bad that they mamaged to break debugging and ship a couple of major releases with debugging broken

[07:09:30.0000] <hsivonen>
don't they dogfood that stuff?

[07:09:34.0000] <zewt>
this feels like a product with barely any QA at all

[07:09:46.0000] <hsivonen>
C++ debugging that is

[07:10:01.0000] <zewt>
never used it for anything but android java

[07:10:39.0000] <Ms2ger>
/me kicks Opera

[07:11:37.0000] <zewt>
... apparently it deleted the key bindings for arrow movement and some other things (and not just me; found it on SO)

[07:11:40.0000] <zewt>
o_O

[07:14:34.0000] <zewt>
heh great, there's a bug report on eclipse that has a year and a half of lots of people going "yeah me too" and that's about it

[07:18:13.0000] <gsnedders>
Ms2ger: Hey, we're better than Eclipse!

[07:19:06.0000] <zewt>
don't get too excited, MSVC and Xcode are other things that are better than Eclipse

[07:27:25.0000] <Ms2ger>
Git people!

[07:27:40.0000] <Ms2ger>
How do I commit only some of the changes I made to a file?

[07:30:28.0000] <gsnedders>
git add -p

[07:36:25.0000] <jgraham>
Indeed, git add -p is awesome

[07:36:31.0000] <jgraham>
It is the only way to add

[07:38:02.0000] <darobin>
has anyone considered making tests for IPv6 support in the TS?

[07:38:23.0000] <darobin>
I ask because we have the option of having w3c-test.org be IPv6 enabled

[07:38:28.0000] <SimonSapin>
I like git cola, if only to select lines to commit with a cursor

[07:40:28.0000] <Ms2ger>
I prefer Coca Cola, myself

[07:41:27.0000] <jgraham>
darobin: I haven't, but if we have the option we should of course take it

[07:41:40.0000] <jgraham>
Could be needed for all sorts of things e.g. the URL spec tests

[07:42:22.0000] <darobin>
jgraham: yeah that's what I was thinking

[07:42:37.0000] <darobin>
I just wanted to make sure that I wasn't asking for something that for some reason I hadn't thought of wasn't needed

[07:42:40.0000] <darobin>
it's a go then

[07:42:46.0000] <darobin>
we should get it soon

[07:43:11.0000] <jgraham>
SimonSapin: I don't really believe in frontends for git, for some reason

[07:43:13.0000] <darobin>
think what you want of W3C, the System team is awesome :)

[07:43:39.0000] <darobin>
jgraham: but... but... they exist! I've seen them!

[07:43:46.0000] <SimonSapin>
jgraham: me neither, in general, except for the particular use case

[07:44:11.0000] <jgraham>
darobin: Insert an implied "the utility of" is you must :p

[07:44:31.0000] <jgraham>
*if

[07:44:43.0000] <jgraham>
One day i will type all the words I think and not random other words

[07:45:54.0000] <Ms2ger>
jgraham, okay, two and a half hours, but I managed to address your first comment about Aryeh's reflection tests

[07:50:05.0000] <zcorpan>
is this misplaced or deliberate? https://github.com/w3c/testharness.js/tree/master/media

[07:51:11.0000] <Ms2ger>
zcorpan, uh, you'd have to ask the person who added them

[07:51:18.0000] <Ms2ger>
zcorpan, I believe that was zcorpan

[07:51:36.0000] <zcorpan>
that predated it moving to github

[07:51:59.0000] <zcorpan>
iirc

[07:52:07.0000] <Ms2ger>
But yeah, I  believe resources/media was intentional

[07:52:28.0000] <jgraham>
Ms2ger: Great

[07:53:02.0000] <darobin>
they're useful

[07:53:41.0000] <jgraham>
Ms2ger: value !== -0?

[07:55:26.0000] <Ms2ger>
Something wasn't happy with -0s

[07:56:24.0000] <Ms2ger>
I suppose...

[07:56:29.0000] <Ms2ger>
foo.bar = -0

[07:56:36.0000] <Ms2ger>
assert_equals(foo.bar, -0)

[07:57:56.0000] <jgraham>
Hmm, assert_equals is supposed to distinguish -0 and 0

[07:58:04.0000] <Ms2ger>
Oh, hmm

[07:58:12.0000] <Ms2ger>
This makes my head hurt

[07:58:18.0000] <darobin>
assert_equals isn't just === ?

[07:58:24.0000] <Ms2ger>
Let's see what happens when I take it out

[07:58:35.0000] <jgraham>
darobin: assert_equals is SameValue in ES terms

[07:58:48.0000] <Ms2ger>
And I'd need to check if Aryeh actually calls into assert_equals

[07:59:49.0000] <jgraham>
darobin: http://people.mozilla.org/~jorendorff/es5.1-final.html#sec-9.12

[08:00:59.0000] <gsnedders>
darobin: assert_equals is === but where NaN is equal to itself and 0 and -0 differ.

[08:02:08.0000] <darobin>
interesting, and pretty cool actually

[08:02:50.0000] <Ms2ger>
Is that ==, ===, ==== or =====?

[08:03:19.0000] <jgraham>
=, =, ==, ===, =====, ========

[08:05:18.0000] <gsnedders>
jgraham: How many of the asserts rely on built-ins not being modified?

[08:06:25.0000] <Ms2ger>
jgraham, so if I drop that, I get additional failures like

[08:06:26.0000] <Ms2ger>
canvas.height: setAttribute() to "-0" followed by IDL get	assert_equals: expected -0 but got 0

[08:07:07.0000] <jgraham>
That sounds like a bug somewhere

[08:07:19.0000] <jgraham>
I'm not sure where though :)

[08:07:51.0000] <jgraham>
Presumably integer types in WebIDL should never be -0

[08:07:54.0000] <gsnedders>
jgraham: I'd like to remove all dependencies on built-ins not being modified, and hence capture them ahead-of-time.

[08:08:40.0000] <jgraham>
gsnedders: You mean how much use does it makes of the ES "stdlib"?

[08:08:54.0000] <jgraham>
The answer is more or less "I'm not sure"

[08:09:07.0000] <jgraham>
What's your use case?

[08:09:08.0000] <gsnedders>
jgraham: Object.hasOwnProperty is used a fair bit

[08:09:13.0000] <Ms2ger>
jgraham, I guess it's better to move the test into ReflectionTests.parseInt

[08:09:35.0000] <gsnedders>
jgraham: Using testharness.js for JS tests.

[08:09:43.0000] <jgraham>
OK

[08:09:52.0000] <jgraham>
Well it seems like it has a certain cost

[08:10:05.0000] <Ms2ger>
gsnedders++

[08:10:10.0000] <jgraham>
We could of course create an object called es or something

[08:10:24.0000] <jgraham>
and then do es.Object.hasOwnProperty

[08:10:48.0000] <jgraham>
Does that sound sufficient

[08:10:50.0000] <jgraham>
?

[08:11:15.0000] <Ms2ger>
Where es.Object is a copy of Object, I guess?

[08:11:20.0000] <jgraham>
Yeah

[08:11:28.0000] <gsnedders>
jgraham: capturing them along where settings and the like is created? That WFM.

[08:11:47.0000] <jgraham>
var es = {null:null, undefined:undefined, Object:Object, [...]}

[08:12:01.0000] <gsnedders>
undefined may as well equal void 0

[08:12:11.0000] <Ms2ger>
Well crap

[08:12:14.0000] <gsnedders>
Given that's guaranteed to be write.

[08:12:21.0000] <gsnedders>
write? right.

[08:12:26.0000] <jgraham>
Left?

[08:12:57.0000] <gsnedders>
Up up, down down?

[08:14:07.0000] <Ms2ger>
jgraham, and moving the test also fixes some tabIndex tests, let me push that

[08:16:49.0000] <darobin>
is there a reason why srcdoc couldn't have blob url instead of about:srcdoc?

[08:28:15.0000] <zcorpan>
can you open a blob url in a new tab?

[08:29:20.0000] <jgraham>
Probably not

[08:29:34.0000] <jgraham>
Or, maybe?

[08:30:13.0000] <jgraham>
No, I guess middle clicking a link gives you a seperateES environment with window.opener unset

[08:34:33.0000] <darobin>
mmm, good question

[08:42:47.0000] <darobin>
it works at least in Fx20: http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=2204

[08:43:03.0000] <darobin>
whether that's a good thing is another question :)

[08:44:07.0000] <darobin>
oooh

[08:44:27.0000] <darobin>
Chrome actually does something interesting: when you open the blob url in a new tab it turns it into blob:http%3A//software.hixie.ch/39326891-4ab9-4254-a3a6-0ab4c4cb3cd1

[08:47:22.0000] <darobin>
ah, no, it's not on clicking it's before, I was looking in the wrong place

[09:37:37.0000] <dglazkov>
good morning, Whatwg!

[16:01:58.0000] <annevk>
Ah man, www-tag thread is so useless

[16:12:34.0000] <hober>
annevk: yup. sorry!


2013-04-06
[19:05:30.0000] <JacksoN_5>
hello :)

[20:07:08.0000] <Yuhong>
More precisely, I think DOM0 refers to what was implemented in Netscape 3 in late 1996.

[01:10:08.0000] <matjas>
Has the use of <title title="Foo">Bar</title> ever been considered? I have to say I quite like this proposal: http://mathiasbynens.be/notes/touch-icons#comment-76

[01:10:45.0000] <matjas>
…to solve the problem of adding bookmarks to the home screen on a mobile device (where you usually need a very short document title)

[01:12:52.0000] <matjas>
I’m trying to think of things it would break, but failing

[01:13:03.0000] <matjas>
I mean, `document.title` would still "work"

[02:18:16.0000] <annevk>
matjas: nobody ever did <th abbr=short>long</th> either

[02:23:17.0000] <jgraham>
No, but "mobile" is some magic word that makes implementors do whatever you want

[02:54:16.0000] <Ms2ger>
"allowFullscreen" and "requestFullScreen"?

[03:01:38.0000] <jgraham>
I see that the blink document falls short of requiring W3C-compatible tests for new features

[03:02:17.0000] <jgraham>
Although it is an encoruaging step forward from de-facto WebKit policy

[03:04:27.0000] <jgraham>
I wonder if the plan is to move away from LayoutTests over time

[03:12:44.0000] <Ms2ger>
Which document?

[03:18:22.0000] <jgraham>
http://www.chromium.org/blink#testing

[04:08:53.0000] <annevk>
Ms2ger: now it's requestFullscreen

[04:09:04.0000] <annevk>
Ms2ger: euh, it's requestFullscreen

[04:31:28.0000] <matjas>
/me diffs those last two messages

[04:42:19.0000] <Ms2ger>
annevk, tell Hixie_ that?

[04:42:45.0000] <annevk>
Ms2ger: tell him what?

[04:43:23.0000] <annevk>
oh

[04:43:48.0000] <Ms2ger>
HTML has a bunch of references to requestFullScreen, still

[04:43:56.0000] <Ms2ger>
Four, looks like

[04:44:38.0000] <annevk>
Ms2ger: https://www.w3.org/Bugs/Public/show_bug.cgi?id=21602

[04:45:01.0000] <Ms2ger>
Ta

[07:32:27.0000] <SteveF>
hixie:re-assigned a few bugs to you as they look like ones that are up your street, hope you don't mind :-)


2013-04-07
[21:38:31.0000] <Nik>
Hi.

[21:39:15.0000] <Guest49981>
Chat room where no one talks?

[15:12:45.0000] <gsnedders>
jgraham: If you're happy to release without the latest spec fixes in html5lib (and hence failing tests), it'd be nice to get a release out supporting Py3.


2013-04-08
[17:55:52.0000] <Hixie_>
me: "waah, editing HTML in the HTMLWG is too hard, i quit"

[17:55:59.0000] <Hixie_>
w3c: "ok, we'll hire 9 people to replace you"

[17:56:02.0000] <Hixie_>
time passes

[17:56:11.0000] <Hixie_>
the nine people: "waah, editing HTML in the HTMLWG is too hard"

[17:56:14.0000] <Hixie_>
...

[18:59:00.0000] <zewt>
when did browsers decide loading mouse cursors were "uncool"?

[18:59:34.0000] <zewt>
very sick of clicking links in chrome on macbook, sitting around for 20 seconds, then realizing the click didn't take and it's wasting my time but I couldn't tell because it's failing at UI 101

[18:59:44.0000] <zewt>
firefox does the same crap

[20:51:49.0000] <suman>
hi anyone there?

[20:54:56.0000] <sumankumardey>
i have a problem with html5lib ruby gem its taking very long time in production to respond. where as in development environment it work fines.

[20:57:48.0000] <sumankumardey>
hi baku

[20:57:59.0000] <baku>
hi sumankumardey

[20:58:33.0000] <sumankumardey>
can you help me out in solving an issue i have some problem with html5lib in production environment

[20:58:57.0000] <sumankumardey>
the execution halts as if it is infinite loop

[20:59:35.0000] <baku>
sumankumardey, sorry, I can't help you

[21:00:22.0000] <sumankumardey>
okay but the there is some problem with html5lib

[21:00:56.0000] <sumankumardey>
html5-0.10.0/lib/html5/treebuilders/rexml.rb:21:in `value='

[21:01:24.0000] <sumankumardey>
the execution halts after this

[21:12:21.0000] <sumankumardey>
sumankumardey: okay but the there is some problem with html5lib

[21:12:21.0000] <sumankumardey>
[09:32am] sumankumardey: html5-0.10.0/lib/html5/treebuilders/rexml.rb:21:in `value='

[21:12:22.0000] <sumankumardey>
[09:33am] sumankumardey: the execution halts after this

[21:49:35.0000] <roc>
TabAtkins: hey, now that you've forked Webkit, Chrome can implement the same-origin restriction for fonts

[22:11:27.0000] <krit>
roc: I think for the next couple of weeks, Blink has enough to do on clean up and restructuring

[22:11:55.0000] <krit>
roc: Don't expect that much "visible" change in the next weeks or months

[23:13:17.0000] <sumankumardey>
html5lib issue anyone can help me here?

[23:20:12.0000] <MikeSmith>
sumankumardey: I don't think anybody around here is actually using the ruby version of html5lib

[23:20:22.0000] <MikeSmith>
and nobody has touched that code for a long time

[23:20:39.0000] <MikeSmith>
maybe Sam Ruby came up that code?

[23:20:47.0000] <MikeSmith>
I can't remember now who wrote it

[23:21:23.0000] <sumankumardey>
okay..

[23:21:41.0000] <sumankumardey>
np

[23:21:55.0000] <sumankumardey>
thanks anyways..

[23:23:30.0000] <MikeSmith>
sumankumardey: but it sounds to me like whatever problem you are seeing is not caused by the source but was introduced by the packager of the ruby gem

[23:23:46.0000] <MikeSmith>
so that person -- whoever it is -- is probably the one you want to contact

[23:24:24.0000] <sumankumardey>
sure thank you

[23:24:39.0000] <MikeSmith>
sumankumardey: but even under ideal conditions I think the performance of that port of html5lib is really poor

[23:24:45.0000] <MikeSmith>
it was not designed to be fast

[23:25:26.0000] <sumankumardey>
but xss_terminate uses this gem as its dependency

[23:26:21.0000] <MikeSmith>
ah

[23:42:16.0000] <SteveF>
hixie: only 1 person was 'hired' to my knowledge, nobody 'quit' and I am happily editing HTML can't speak for the others

[23:57:27.0000] <a-ja>
SteveF: anywhere in particular to discuss Using ARIA in HTML draft? or PM?

[23:58:16.0000] <SteveF>
a-ja: html wg best place

[23:58:53.0000] <a-ja>
meant on irc.  just a minor typo, i think

[23:59:43.0000] <SteveF>
a-ja: you can tell me now an i will capture it

[00:00:31.0000] <SteveF>
a-ja:so here or #html-wg is fine

[00:00:55.0000] <a-ja>
the recommendation on summary

[00:01:08.0000] <a-ja>
if summary element is being used in a scripted polyfill - Use role=button with aria-expanded="true" if the element's open attribute is present, aria-expanded="false" otherwise.

[00:02:24.0000] <a-ja>
should'nt that say on parent details element's open attribute?

[00:04:03.0000] <SteveF>
a-ja:yes, good catch will fix thanks!

[00:05:01.0000] <a-ja>
wasn't sure whether open attr got inherited somehow i'd missed

[00:05:51.0000] <SteveF>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=21615

[00:09:14.0000] <a-ja>
Stevef: now to find a non-jq polyfill that handles kb input

[00:10:33.0000] <SteveF>
a-ja:can't help you there unfortunately, if you find one give me a yell

[00:11:46.0000] <a-ja>
will get around to forking one and doing it myself some day

[00:13:57.0000] <SteveF>
hixie: so trying to read between the lines of http://krijnhoetmer.nl/irc-logs/whatwg/20130408#l-50 does it mean its yes its OK to assign bugs to you or no its not? I am leaning towards the latter

[00:17:23.0000] <SteveF>
hixie: it would be useful to have  sensible communications on such matters how can we make that happen?

[00:18:11.0000] <jgraham>
sumankumardey: The ruby version has been unmaintained for a *long* time

[00:18:19.0000] <jgraham>
I don't think anyone here knows anything about it

[00:19:05.0000] <jgraham>
Oh MikeSmith already said all that

[00:19:11.0000] <Ms2ger>
SteveF, you can assume that Hixie_ will take care of all bugs that exist in the WHATWG HTML specification

[00:19:18.0000] <jgraham>
gsnedders: Sure

[00:19:19.0000] <Ms2ger>
SteveF, does that answer your question?

[00:19:33.0000] <sumankumardey>
thanks jgraham

[00:23:14.0000] <SteveF>
Ms2ger: sort of

[00:27:28.0000] <SteveF>
Ms2ger: should bugs that are not taken care of in the W3C HTML specification have their product changed to WHATWG? I am trying to work out a reasonable work flow for managing bugs

[00:28:51.0000] <Ms2ger>
It's probably better to discuss that directly with Hixie_, I don't know if he tracks your bugs already

[00:29:16.0000] <SteveF>
Ms2ger: thats what I am trying to do...

[00:34:06.0000] <SteveF>
Ms2ger: most changes from WHATWG HTML flow back into W3C HTML once hixie has processed bugs, some don't after review and some bugs get dealt with by direct changes to W3C HTML

[00:36:52.0000] <SteveF>
Ms2ger: would be good if WHATWG and W3C could acknowledge that reality and work out an understanding on it

[01:01:01.0000] <SteveF>
Ms2ger: in a nutshell: all people involved can continue to play turf wars in the HTML web standards playground or we can try to work out a way to work together I prefer the latter but am accepting the former is more likely given the history

[01:11:09.0000] <jgraham>
Ms2ger: Why is resize:none needed?

[01:17:46.0000] <Ms2ger>
jgraham, because the handles are in different corners

[01:18:15.0000] <jgraham>
Oh, right reftests

[01:18:21.0000] <Ms2ger>
Yeah

[01:18:57.0000] <jgraham>
OK, merged

[01:19:15.0000] <Ms2ger>
Thanks

[01:58:22.0000] <Ms2ger>
/me finds some tests he forgot to submit

[01:58:27.0000] <annevk>
SteveF: well Hixie_ was replaced as editor by the W3C, so asking him to work on bugs for a product he's not the editor for is kind of weird given that dynamic

[01:59:27.0000] <annevk>
SteveF: and I don't think it's fair to expect Hixie_ to make good here

[02:00:22.0000] <annevk>
SteveF: that W3C is still taking his work while listing him as "Previous Editor" for instance seems like more than enough reason for him to be very upset

[02:03:50.0000] <mitemitreski>
annevk: the comunity knows him and respects him so I don't think that W3C can do much harm there

[02:06:26.0000] <annevk>
mitemitreski: sure, that seems a bit besides the point though

[02:35:31.0000] <zcorpan>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=16757#c10 is interesting

[02:51:11.0000] <SteveF>
annevk: so the answer is to change the product?

[02:51:54.0000] <SteveF>
mitemitreski: don't think that its that simple

[02:53:10.0000] <annevk>
SteveF: Why don't you ask W3C management?

[02:53:32.0000] <SteveF>
annevk: I am not asking hixie to 'make good' I am asking how to make it work

[02:53:38.0000] <annevk>
SteveF: If you think Hixie_ should be editing (part of) the specification because none of the HTML editors are capable of addressing the bug, they might have some insight.

[02:54:58.0000] <annevk>
SteveF: I would not expect much more than blank stares though

[02:55:19.0000] <SteveF>
annevk: well thats why I am asking

[02:55:43.0000] <annevk>
SteveF: Are you asking them?

[02:56:21.0000] <annevk>
SteveF: To some extent it seems bugs have been cloned and then whenever Hixie_ gets around to it the original bug is closed with the same resolution. That still seems like working around the actual problem though.

[03:02:38.0000] <SteveF>
annevk: OK then thats fine what I have been doing is providing as much trail in bugs i resolve as possible, so that if anyone is interested they can see the diff. I make very few changes that effect browser implementation and when i do its because browsers are implementing some acc related stuff not specced, or there is something acc related missing in a proposed implementation

[03:03:59.0000] <SteveF>
annevk: I am not up to tackling the disfunctional relationship between whatwg and w3c at an organisational level though

[03:05:29.0000] <annevk>
I understood http://krijnhoetmer.nl/irc-logs/whatwg/20130408#l-230 differently, but that seems fine.

[03:07:41.0000] <annevk>
That the W3C is still plagiarising is bad though.

[03:12:31.0000] <SteveF>
annevk: talk to darobin or MikeSmith about the subject of plagiarising they both work for the W3C, I don;t I don't even work for a member company, I just do my best to improve the spec where I can

[03:13:15.0000] <smaug____>
is DAP still active?

[03:13:58.0000] <annevk>
smaug____: at until July per charter

[03:14:02.0000] <annevk>
at least*

[03:14:40.0000] <darobin>
/me was raised?

[03:14:47.0000] <darobin>
smaug____: DAP is still active, yes

[03:15:02.0000] <darobin>
smaug____: any specific question? I can probably point you in the right direction, or to people

[03:15:21.0000] <marcosc>
darobin, Annevk is calling you a dirty plagiarist :)

[03:15:46.0000] <smaug____>
just wondering whether filing bugs makes sense

[03:16:02.0000] <marcosc>
You and your co-plagiarist-conspirator, "Evil MikeSmith"

[03:16:12.0000] <Ms2ger>
/me throws darobin instead

[03:19:37.0000] <jgraham>
/me catches darobin 

[03:20:02.0000] <SteveF>
note, anything I do as an editor of the html spec is in response to a direct (and secret) command from either MikeSmith or darobin

[03:20:21.0000] <jgraham>
Well we have established that darobin is Exceptional

[03:21:07.0000] <SteveF>
they call it 'operation deplagiarisation'

[03:21:55.0000] <Ms2ger>
/me frowns

[03:22:10.0000] <Ms2ger>
How did I just jump from 5025 tests to 14143 tests?

[03:26:58.0000] <darobin>
smaug____: depends on on which spec, some of them are abandoned

[03:27:07.0000] <darobin>
but if it's on one that's alive, then filing a bug definitely makes sense

[03:27:36.0000] <smaug____>
the latest one was the which has proximityevent

[03:27:46.0000] <darobin>
marcosc: hey, don't blame me, I'm just carrying out the programme of the Pirate Party :)

[03:27:51.0000] <smaug____>
it is just that someone should go through webidl usage

[03:28:12.0000] <darobin>
smaug____: as far as I know Proximity is alive and well, so bugs are good

[03:28:28.0000] <darobin>
I thing DougT was working on that, recently at least

[03:29:15.0000] <smaug____>
editors:     Anssi Kostiainen, Nokia , Dzung D Tran, Intel

[03:29:29.0000] <smaug____>
and Anssi is now at Intel too

[03:30:03.0000] <smaug____>
/me could ask dougt, who is kind of his manager

[03:31:09.0000] <darobin>
smaug____: if you just have a problem with the IDL, I'd recommend simply emailing Anssi — he'll probably fix it in the time it takes to read your email

[03:32:32.0000] <smaug____>
yeah, could work

[03:33:28.0000] <smaug____>
oh, Intel's  office in Helsinki isn't faraway

[03:34:15.0000] <darobin>
go have a beer with Anssi then, he's cool :)

[03:34:47.0000] <Ms2ger>
Walk into his office and make him fix it on the spot? :)

[03:35:42.0000] <darobin>
btw, if you know anyone who's into Rust/Servo and looking for a job, talk to me as I have someone looking for just that

[03:35:59.0000] <smaug____>
Ms2ger: exactly

[03:36:29.0000] <Ms2ger>
SimonSapin? :)

[03:37:07.0000] <jgraham>
darobin: Small target audience for that job :)

[03:37:29.0000] <darobin>
jgraham: yeah, I'm having trouble coming up with a name without poaching someone from Mozilla :)

[03:38:02.0000] <darobin>
Ms2ger: trying not to poach :)

[03:38:16.0000] <annevk>
darobin: haha, yeah, why don't just name them directly?

[03:38:18.0000] <jgraham>
Taking someone from Mozilla to work on Servo would be ironic

[03:38:32.0000] <jgraham>
Unless you mean non-Servo-rust

[03:38:43.0000] <darobin>
no, this is definitely Servo

[03:38:47.0000] <annevk>
darobin: reminds me of http://ln.hixie.ch/?start=1052961695&count=1

[03:39:22.0000] <jgraham>
darobin: I suggets you look for kickass developers and ignore the Rust part, because that's easy to learn

[03:39:25.0000] <darobin>
annevk: hahaha, yeah, pretty much

[03:39:38.0000] <darobin>
jgraham: that's what I was thinking too — if I were doing the hiring it's what I'd do

[03:40:04.0000] <darobin>
maybe grab some former Opera...

[03:40:09.0000] <darobin>
or soon-to-be former

[03:42:56.0000] <SimonSapin>
darobin: what is it about Servo?

[03:43:30.0000] <darobin>
SimonSapin: I have someone with a job opening for Servo/Rust work, I was just asking about recommendations

[03:44:03.0000] <SimonSapin>
I’m curious :)

[03:49:46.0000] <Ms2ger>
SimonSapin, you're wondering if they'd pay better? ;)

[03:50:19.0000] <jgraham>
heh

[03:50:43.0000] <SimonSapin>
Ms2ger: I’m gonna work on Servo, so I might work with them too

[03:52:10.0000] <Ms2ger>
In any case, I hope you're good at dealing with crappy syntax ;)

[03:52:11.0000] <SimonSapin>
I already got email from them about rust-cssparser, a while ago

[03:52:30.0000] <SimonSapin>
do you mean Rust?

[03:52:49.0000] <jgraham>
SimonSapin: Are we supposed to know the antecendent of "them"?

[03:53:10.0000] <Ms2ger>
Yeah

[03:53:10.0000] <SimonSapin>
https://blog.mozilla.org/blog/2013/04/03/mozilla-and-samsung-collaborate-on-next-generation-web-browser-engine/

[03:53:30.0000] <Ms2ger>
I mean, what I've seen so far makes my eyes bleed

[03:53:48.0000] <smaug____>
Rust syntax is indeed... interesting

[03:53:55.0000] <smaug____>
almost as horrible as python

[03:54:00.0000] <jgraham>
SimonSapin: So "them" == Samsung?

[03:54:03.0000] <SimonSapin>
yes

[03:54:11.0000] <jgraham>
Makes sense

[03:54:20.0000] <Ms2ger>
And was darobin talking about Samsung too?

[03:54:43.0000] <jgraham>
Curiously it's the rubyish parts of Rust syntax I don't like

[03:54:51.0000] <jgraham>
Although generally it doesn't seem too bad

[03:54:52.0000] <SimonSapin>
Ms2ger: ideas on how to improve it?

[03:54:52.0000] <SimonSapin>
smaug____: why is Python horrible?

[03:55:04.0000] <smaug____>
why isn't python horrible ;)

[03:55:11.0000] <Ms2ger>
SimonSapin, smaug____ has a Stockholm Syndrome with perl ;)

[03:55:55.0000] <smaug____>
python is like: do things differently for the sake of doing it differently

[03:56:33.0000] <gsnedders>
jgraham: Speaking of html5lib, the repo should probably have the old Py2 deleted.

[03:56:55.0000] <gsnedders>
jgraham: Given I never finished moving stuff to github.

[03:57:10.0000] <gsnedders>
jgraham: (Though it didn't work that great, too many early commits by none@none)

[03:57:18.0000] <jgraham>
Well I think it's better to just move stuff to GH

[03:57:29.0000] <jgraham>
I can look at that

[03:57:49.0000] <SimonSapin>
is html5lib dropping python 2 support?

[03:57:54.0000] <jgraham>
No

[03:58:00.0000] <gsnedders>
SimonSapin: No, moving to single codebase for Py2 and Py3.

[03:58:06.0000] <SimonSapin>
awesome

[03:58:12.0000] <Ms2ger>
\o/

[03:58:23.0000] <gsnedders>
SimonSapin: It's currently in the Py3 folder, though. The old Py2 folder is dead.

[03:58:52.0000] <gsnedders>
jgraham: You need to rewrite history multiple times, though, if you split it up, to ensure branches go all the way back and stuff like this. It's quite a mess.

[03:59:00.0000] <gsnedders>
jgraham: I'm happy to do it in a month or so after exams.

[03:59:10.0000] <gsnedders>
jgraham: I guess it'll take a day or so to do the split nicely

[04:00:23.0000] <jgraham>
Which branches?

[04:00:31.0000] <jgraham>
I don't actually care about anything other than master

[04:00:46.0000] <gsnedders>
I still care about csswg-testsuite or whatever it's called.

[04:01:16.0000] <gsnedders>
Also merging the Python3 folder into being a branch and ultimately being master was something I did before.

[04:02:36.0000] <gsnedders>
  csswg-testsuite

[04:02:37.0000] <gsnedders>
* master

[04:02:37.0000] <gsnedders>
  python3

[04:02:42.0000] <gsnedders>
Those are the branches I have.

[04:04:24.0000] <zcorpan>
annevk: in the Future introduction, i think function() { showFailcat }  should be either function() { showFailcat() } or just showFailcat

[04:06:12.0000] <gsnedders>
jgraham: Nothing has happened since I merged everything into one Python tree, let me push this somewhere.

[04:07:46.0000] <annevk>
zcorpan: not confident? ;)

[04:08:29.0000] <zcorpan>
annevk: just humble :-P

[04:08:52.0000] <annevk>
heh

[04:09:07.0000] <marcosc>
function() { showFailcat() } is redundant, no?

[04:09:13.0000] <zcorpan>
annevk: domintro for any is missing a word "accepted rejected"

[04:10:21.0000] <annevk>
marcosc: yes

[04:11:36.0000] <zcorpan>
annevk: should the domintros end with "respectively"?

[04:12:21.0000] <annevk>
hmm yeah, maybe

[04:12:38.0000] <annevk>
I guess that's not implied

[04:14:52.0000] <jgraham>
gsnedders: I don't see a python3 head

[04:15:33.0000] <gsnedders>
Where?

[04:15:43.0000] <Ms2ger>
In the mirror

[04:15:44.0000] <jgraham>
In the html5lib repo

[04:16:08.0000] <gsnedders>
The mirror I pushed two seconds ago?

[04:16:41.0000] <jgraham>
Perhaps?

[04:17:00.0000] <gsnedders>
jgraham: in hg, there is no py3 head because it's just a folder.

[04:17:20.0000] <jgraham>
Right

[04:17:21.0000] <gsnedders>
jgraham: In https://github.com/gsnedders/html5lib-python it's not there because it hasn't been pushed because it's an obsolete branch

[04:18:11.0000] <jgraham>
IS there anything in your github repo that isn't in the main repo?

[04:18:27.0000] <gsnedders>
A merge of python3 into python.

[04:18:32.0000] <gsnedders>
Otherwise, no.

[04:18:44.0000] <gsnedders>
But I'm suddenly suspicious history is badly broken in places.

[04:18:50.0000] <jgraham>
OK, I will start from the main repo

[04:19:22.0000] <gsnedders>
A lot of files seem to be missing all Py2 history.

[04:19:36.0000] <gsnedders>
Probably some missing parent commit of something.

[04:21:16.0000] <gsnedders>
jgraham: Overwritten master so it's back to the earlier master-is-python and python3-is-python3 state, in case you want to try merging again.

[04:22:46.0000] <gsnedders>
jgraham: f77aa82ce9ec1b08586d92dc84e9cfcf5e6e8548 doesn't seem to have the correct parent

[04:27:36.0000] <gsnedders>
jgraham: Basically, that repo is *close* to what you want, but not quite it.

[04:28:56.0000] <jgraham>
gsnedders: Which repo? That isn't a commit in the repo I have (from google code)

[04:29:03.0000] <gsnedders>
jgraham: https://github.com/gsnedders/html5lib-python/commits/python3 — note the huge jump in commits of three years

[04:29:06.0000] <gsnedders>
jgraham: in the git one

[04:29:34.0000] <gsnedders>
jgraham: Looking at that it may be a couple away from where it is wrong, but you get the idea.

[04:41:28.0000] <zcorpan>
annevk: is the abstract still accurate?

[04:44:16.0000] <annevk>
zcorpan: how about "<p>DOM defines a platform-neutral model for events, futures, and document nodes."

[04:45:32.0000] <zcorpan>
annevk: works for me

[05:01:19.0000] <gsnedders>
jgraham: Will try and sort out the one big bit of history fuck-up later.

[05:01:26.0000] <gsnedders>
jgraham: Then hopefully we have something working

[05:04:52.0000] <gsnedders>
jgraham: The history appears fucked in hg, a parent in the future

[05:05:10.0000] <SimonSapin>
gsnedders: that can happen with rebase

[05:08:30.0000] <gsnedders>
SimonSapin: Right, yes, that's true. Then that makes sense.

[05:42:05.0000] <gsnedders>
jgraham: At some stage in the move I seem to have lost all tags. Whoops.

[05:48:25.0000] <gsnedders>
jgraham: I think history is now right on html5lib-python, and py-merge just needs merged into master (it's ff, so it should be fine)

[05:51:44.0000] <gsnedders>
jgraham: Now pushed the merge to master as everything looks fine.

[05:52:26.0000] <jgraham>
Are you talking the git repo you made?

[05:52:30.0000] <gsnedders>
Yes.

[05:53:32.0000] <gsnedders>
jgraham: Apart from the fact that all the early commits GitHub thinks are by invalid-email-address (i.e., "none@none", from the SVN -> hg move), it's done.

[05:54:04.0000] <gsnedders>
But we probably want to fix them before we do anything more, given it means rewriting history

[06:06:03.0000] <darobin_>
/me wonders how long it will be before he takes flak for https://github.com/w3c/html/commit/03823ce134a06b3ed84a409f584ed035ba55bc31

[06:06:10.0000] <daoribn>
fuck me

[06:06:20.0000] <Ms2ger>
Da Orbin?

[06:06:43.0000] <darobin>
yeah, that's how they called me in ancient Mesopotamia

[06:51:03.0000] <karlcow>
<!--END darobin-html-->  <!--START darobin-html-->

[06:54:25.0000] <darobin>
karlcow: :)

[07:05:16.0000] <zcorpan>
Hixie_: some bugs appear to come from people who c/p error messages from v.nu (or maybe validator.w3.org). since the messages contain links to the spec, we could identify such bugs by looking at Referer

[07:35:29.0000] <darobin>
does anyone know why the <data> element isn't in the W3C spec?

[07:36:13.0000] <SteveF>
annevk: https://github.com/w3c/html/commit/261a168584e59785789604b191034cd3730b746b

[07:36:33.0000] <zcorpan>
probably it was invented when the w3c spec was in LC or something and Hixie wasn't supposed to add new features

[07:37:02.0000] <zcorpan>
about https://www.w3.org/Bugs/Public/show_bug.cgi?id=21572 how do people feel about "cooked text elements"?

[07:38:09.0000] <zcorpan>
or maybe "normal text elements"?

[07:38:35.0000] <zcorpan>
not that they're particularly normal

[07:39:29.0000] <Ms2ger>
Abnormal text elements?

[07:41:05.0000] <darobin>
zcorpan: ok, ta

[07:41:14.0000] <darobin>
that means I can add it

[07:41:37.0000] <zcorpan>
darobin: i bet there are more cases like that

[07:41:56.0000] <Ms2ger>
By the way

[07:42:50.0000] <darobin>
zcorpan: I've decided to hunt down leftover forks to kill them

[07:43:30.0000] <Ms2ger>
I'd like someone to create a tool to track if spec commits still need tests

[07:44:01.0000] <Ms2ger>
darobin, do you still have free time? :)

[07:44:11.0000] <sangwhan>
Ms2ger: TE is like that orphaned project which needs to be kicked out of the door as soon as possible. Hacks are expected.

[07:44:27.0000] <sangwhan>
Ms2ger: ...at least that's what I see from it.

[07:44:33.0000] <darobin>
Ms2ger: there's a f2f coming up, I'll have plenty of free time that week ;)

[07:44:34.0000] <Ms2ger>
sangwhan, that's what I said, no?

[07:45:01.0000] <Ms2ger>
sangwhan, I expected the response I got

[07:45:09.0000] <zcorpan>
Ms2ger: with metadata in the test saying it's testing a certain spec change?

[07:45:40.0000] <Ms2ger>
zcorpan, rather not

[07:46:57.0000] <Ms2ger>
Just a webapp where you can add URLs, say

[07:47:16.0000] <Ms2ger>
And notes about things that still need testing

[07:47:19.0000] <sangwhan>
Ms2ger: Yep, unfortunate but what can you do - the group had a bumpy start from the beginning..

[07:48:32.0000] <darobin>
Ms2ger: we're thinking about stuff like that, I could possibly hack on it soon in fact

[07:49:02.0000] <Ms2ger>
darobin, excellent :)

[07:49:44.0000] <Ms2ger>
darobin, hoping it'll track WHATWG commits ;)

[07:50:07.0000] <darobin>
Ms2ger: I haven't thought it out at this point, but I was thinking that a spec is just a URL

[07:50:17.0000] <darobin>
and any change tracking is just a GH stream

[07:50:22.0000] <darobin>
so I see no reason why not :)

[07:50:32.0000] <Ms2ger>
You know I'm no fan of gh ;)

[07:50:36.0000] <annevk>
sangwhan: TE?

[07:50:41.0000] <Ms2ger>
Touch Events

[07:50:46.0000] <sangwhan>
annevk: Touch Events

[07:50:55.0000] <darobin>
I operate under the assumption that WHAT/W3C is just a bicameral system

[07:51:00.0000] <annevk>
ohh

[07:51:04.0000] <darobin>
I serve the Web Republic

[07:52:10.0000] <annevk>
except the knowledge and speedy process is in the same chamber? :p

[07:54:42.0000] <darobin>
annevk: that reminds me of a joke someone tells in the West Wing

[07:54:54.0000] <annevk>
oh please do tell

[07:54:58.0000] <annevk>
I love that show

[07:55:17.0000] <darobin>
it's about a junior Republican senator who's talking with other Republican senators about a meeting they're about to have with Democrats

[07:55:18.0000] <sangwhan>
Does Firefox ship with statically linked OpenSSL? (possibly wrong channel, but I don't have IDA installed on this machine)

[07:55:28.0000] <SteveF>
+2 to "I serve the Web Republic"

[07:55:38.0000] <darobin>
and he says "Oooh, I can't wait to meet the enemy!"

[07:55:51.0000] <Ms2ger>
sangwhan, we use nss

[07:56:16.0000] <darobin>
to which the others reply "The Democrats aren't the enemy. The House of Representatives is."

[07:57:09.0000] <Ms2ger>
Must've been the way he told it

[07:58:23.0000] <darobin>
ow

[07:58:47.0000] <Ms2ger>
<3

[07:59:10.0000] <sangwhan>
Ms2ger: Oh, that I did not know. Thanks

[08:06:40.0000] <annevk>
darobin: hehe

[08:17:46.0000] <sangwhan>
Hmm, so not many low level optimizations in NSS it seems. There is some redundant compiler specific bootstrap code that seems to have gone a bit out of sync and does some strange things from a quick look, but I guess it's minor.

[08:37:35.0000] <jgraham>
Ms2ger: So, is it cheating the system if you mark the files in r/5 as reviewed as you update them, and someone else reviews your updates?

[08:37:48.0000] <jgraham>
(the answer is no: it is not)

[08:38:09.0000] <jgraham>
Otherwise we will ~never finish that review

[08:38:25.0000] <Ms2ger>
Mm

[08:38:45.0000] <Ms2ger>
/me wonders how to do that

[08:40:26.0000] <jgraham>
http://critic.hoppipolla.co.uk/6dda8721?review=5

[08:40:36.0000] <jgraham>
Put a tick by the files you have updated

[08:40:40.0000] <jgraham>
Press submit

[08:41:22.0000] <Ms2ger>
All I have under "Reviewed" is "pending"

[08:44:41.0000] <jgraham>
Hmm

[08:44:42.0000] <jgraham>
So

[08:44:59.0000] <jgraham>
For some reason it wasn't making you a reviewer of all the files

[08:45:20.0000] <jgraham>
But now I adjusted it it won't make you a reviewer of the files that you subsequently touched

[08:45:26.0000] <jgraham>
Which seems like a bug

[08:46:35.0000] <jgraham>
Give me a list of files and I will mark them as reviewed

[08:49:18.0000] <Ms2ger>
jgornick, elements-{embedded/forms/grouping}.js, so far

[08:50:15.0000] <jgraham>
OK, marked

[08:50:55.0000] <Ms2ger>
Ta

[10:32:46.0000] <gsnedders>
sangwhan: Opera/Presto is the only browser using OpenSSL.

[10:33:25.0000] <gsnedders>
sangwhan: Though perhaps Safari does via NSURL and OpenSSL at a system level?

[11:07:41.0000] <sangwhan>
gsnedders: Chromium does have a "use system SSL" feature which probably turns out using OpenSSL (although no idea how it works on Windows) - and yes, NSURL probably hits OpenSSL at some point.

[11:09:34.0000] <gsnedders>
sangwhan: Chrome uses NSS by default on Windows/Linux, definitely.

[11:10:20.0000] <gsnedders>
sangwhan: I believe it does on OS X as well.

[11:10:50.0000] <gsnedders>
sangwhan: But yes, I'm aware it has an option. :)

[13:02:12.0000] <gsnedders>
How many interfaces have (catch-all) named property setters?

[13:04:09.0000] <Ms2ger>
Setters, hmm...

[13:04:33.0000] <Ms2ger>
DOMStringMap?

[13:07:12.0000] <Hixie_>
ok, back to work!

[13:07:17.0000] <Hixie_>
18854

[13:08:21.0000] <gsnedders>
Ms2ger: only has setter creator void (DOMString name, DOMString value);

[13:08:25.0000] <gsnedders>
Ms2ger: So no.

[13:08:35.0000] <Ms2ger>
What do you mean, then?

[13:09:34.0000] <Hixie_>
(if there were any questions in the last few days, please ping me again or e-mail me, i was mostly afk and only occasionally popped my head in)

[13:09:58.0000] <gsnedders>
Ms2ger: setter void (DOMString name, DOMString value) is a catch-all. That setter only defines one for creator.

[13:10:40.0000] <Ms2ger>
'setter creator'

[13:10:56.0000] <gsnedders>
Am I misunderstanding the WebIDL spec?

[13:11:02.0000] <gsnedders>
(Entirely plausible.)

[13:11:13.0000] <Ms2ger>
I'm confused about what you're asking :)

[13:11:27.0000] <gsnedders>
Catch-all setters. Where do they exist in the platform?

[13:11:50.0000] <gsnedders>
DOMStringMap AIUI only defines a setter for the 'creator' property, not a catch-all.

[13:12:00.0000] <gsnedders>
I could simply be misunderstanding.

[13:12:34.0000] <Ms2ger>
setter creator void (DOMString name, DOMString value); is equivalent to

[13:12:36.0000] <Ms2ger>
setter void (DOMString name, DOMString value);

[13:12:37.0000] <Ms2ger>
creator void (DOMString name, DOMString value);

[13:13:16.0000] <gsnedders>
Oh, okay!

[13:14:02.0000] <Ms2ger>
Not exactly the most obvious syntax :)

[13:17:08.0000] <gsnedders>
No, not quite. :)

[13:19:04.0000] <Hixie_>
anyone have a suggestion for variable name for a variable that represents an <a> or <area> element?

[13:19:16.0000] <Hixie_>
so far i've considered element, a, anchor, link, source, victim

[13:19:20.0000] <Hixie_>
they all suck for various reasons

[13:19:56.0000] <Hixie_>
(i'm using /subject/ unless someone has a better idea)

[13:51:01.0000] <annevk>
Hixie_: <link href=/ target=_blank><style> head,link {display:block} link::before { content:"link" } </style>

[13:51:26.0000] <annevk>
Hixie_: works in Gecko

[13:51:36.0000] <annevk>
(as in creates a new browsing context)

[14:12:39.0000] <zcorpan>
annevk: but it doesn't work anywhere else and nobody does that kind of thing (i.e. show <link>s and expect users to click them)

[14:16:38.0000] <zcorpan>
though the spec maintains the <link> is a link story in other places

[14:18:41.0000] <Hixie_>
annevk: yes (i'm the one who filed the bug to make that work)

[14:22:56.0000] <zcorpan>
annevk: would you be opposed to removing <link> being clickable, matching :link, etc?

[14:23:51.0000] <annevk>
zcorpan: I don't care I think, but I think bz might

[14:24:13.0000] <annevk>
Hixie_: target="" is not valid in HTML at the moment for <link> though

[14:28:12.0000] <Hixie_>
annevk: so?

[14:32:03.0000] <blooberry>
 /msg Hixie_ hey bachelorman 8-}


2013-04-09
[18:23:19.0000] <boblet_>
hixie: how’s my timing today? ^_^

[18:24:05.0000] <Hixie_>
good :-)

[18:24:11.0000] <Hixie_>
sorry, been out for a few days

[18:24:24.0000] <Hixie_>
reffing FIRST's silicon valley regional, amongst other things :-)

[18:24:38.0000] <boblet_>
heh, no worries

[18:25:37.0000] <boblet_>
so I’m writing about s/del/ins, and having trouble with the difference between s and del

[18:26:04.0000] <boblet_>
I was wondering if you had some other s use cases apart from expired prices for e.g. sales, event early bird prices etc

[18:28:08.0000] <boblet_>
aah, robot wars. I went to world robot soccer competition in Osaka a few years back. very cool

[18:31:50.0000] <Hixie_>
one sec, let me see

[18:32:15.0000] <boblet_>
Hixie: np, when you have a moment. It seems to me that s is a special case/subset of del. do you see it that way too?

[18:32:39.0000] <Hixie_>
boblet_: they're subtly different, but they are different

[18:32:48.0000] <Hixie_>
boblet_: so <del> is specifically for cases where the page was edited

[18:33:01.0000] <Hixie_>
boblet_: e.g. you write some minutes of a meeting, and then the minutes get corrected later.

[18:33:22.0000] <Hixie_>
boblet_: or you have some laws, and you change them at some point

[18:33:33.0000] <boblet_>
ok

[18:33:38.0000] <Hixie_>
boblet_: or you're writing a book, and you have edits to make that the editor needs to see

[18:33:41.0000] <Hixie_>
or whatever

[18:34:04.0000] <Hixie_>
not necessarily every edit needs to be marked up, just the ones where you want to explicitly say, this was edited, here's what it was, here's what it is now (del and ins respectively)

[18:34:26.0000] <Hixie_>
boblet_: <s> on the other hand is for when the document is written with old information and new information basically at the same time

[18:34:53.0000] <Hixie_>
boblet_: so the example in the spec is of a price change, you might include the old price and tnhe new price in promotional material, e.g.

[18:35:04.0000] <boblet_>
Hixie_: but that describes deletion with insertion, no? :p

[18:35:35.0000] <Hixie_>
say you have a product you want to sell for less

[18:35:40.0000] <Hixie_>
and you're making an advert for it

[18:35:53.0000] <Hixie_>
that advert might say both the old price and the new price, but you're writing it because of the new price

[18:36:00.0000] <Hixie_>
so it's not like you edited the document to remove the old price

[18:36:11.0000] <Hixie_>
you wrote the document with both prices right away

[18:36:16.0000] <Hixie_>
it's just the old price is irrelevant

[18:36:21.0000] <Hixie_>
or no longer accurate

[18:36:47.0000] <boblet_>
Hixie_: ok. I get the price example, but do you have some other use cases?

[18:36:48.0000] <Hixie_>
to put it another way, with <del> there is usually a view of the document that doesn't include the <del> text

[18:37:02.0000] <Hixie_>
but with <s> there is no version of the document without the <s> text, because the <s> text is part of the document still

[18:37:09.0000] <Hixie_>
it's just that it's marked as old

[18:37:10.0000] <boblet_>
gotcha

[18:37:55.0000] <Hixie_>
sorry, got distracted here

[18:38:11.0000] <Hixie_>
other examples:

[18:39:05.0000] <Hixie_>
changed opening hours, basically any time a business thing changes

[18:40:06.0000] <boblet_>
Hixie_: okay. That helps. now, styling…

[18:40:18.0000] <boblet_>
Hixie_: s and del default styling is the same, so I wonder how they’d be used together. I’d personally use strikethrough for both, but fade del and make s smaller than e.g. actual price.

[18:40:20.0000] <Hixie_>
examples outside of advertising materials are harder to think of off the top of my head :-)

[18:40:31.0000] <wilhelm_>
"Ding, dong, the <s>witch</s> former prime minister is dead."

[18:40:54.0000] <boblet_>
I guess that there’s no plan to change default styles right?

[18:41:02.0000] <Hixie_>
wilhelm_: yeah, sarcastic commentary like that might be plausible or arguable, maybe :-)

[18:41:14.0000] <Hixie_>
boblet_: well, changing the default styles is basically a non starter

[18:41:32.0000] <Hixie_>
boblet_: i wouldn't expect them to ever really be used together, but i suppose one could imagine an advert being edited in its development...

[18:41:44.0000] <boblet_>
wilhelm_: that’s the <s(arcasm)> usage right?

[18:42:03.0000] <boblet_>
Hixie_: hmm, good point

[18:42:14.0000] <Hixie_>
as in: <del title="it was never this cheap, are you kidding"><s>$2.99</s></del><ins><s>$5.99</s></ins>

[18:44:07.0000] <Hixie_>
personally i style <ins> and <del> with background colours

[18:44:10.0000] <Hixie_>
typically

[18:44:34.0000] <boblet_>
strikethrough does make things harder to read

[18:47:01.0000] <boblet_>
Hixie_: thanks for the feedback. I might finally be able to publish this article now (!)

[18:48:38.0000] <Hixie_>
heh

[18:50:34.0000] <wilhelm_>
boblet_: Yes. Which is not covered by the spec. (c:

[18:52:31.0000] <boblet_>
wilhelm_: :| ;)

[18:54:28.0000] <wilhelm_>
Apparently this is a real thing in philosophy: http://en.wikipedia.org/wiki/Sous_rature

[18:56:28.0000] <wilhelm_>
It's also covered by the Hacker Jargon File: http://www.catb.org/jargon/html/writing-style.html

[18:57:29.0000] <boblet_>
wilhelm_: ooh, nice. thanks for the links

[19:10:14.0000] <wilhelm_>
Hixie_: I'd argue both of those uses are legitimate. (Although it pains me to agree with the post-structuralists on anything. :)

[19:11:36.0000] <Hixie_>
well the spec just says something about irrelevant text

[19:11:55.0000] <Hixie_>
but i wouldn't argue against a bug that suggested it be extended in this way, if someone felt compelled enough to file ti

[19:13:59.0000] <wilhelm_>
/me nods.

[19:50:30.0000] <jwalden>
wilhelm_: I might be misreading, but sous rature appears to be something different; the latter is cross out but replace, the former is cross out but don't replace

[19:51:05.0000] <jwalden>
/me tries to think of some way to demonstrate the former

[19:53:13.0000] <jwalden>
http://nearemmaus.com/2010/12/11/interpreting-derrida-sous-rature/ kind of makes the difference clearer, maybe

[19:53:42.0000] <wilhelm_>
jwalden: Yes, you're reading it correctly. (c:

[01:55:01.0000] <annevk>
Wow, Amazon is awesome. So I ordered something and delivery failed as I was not at home. I could probably have picked it up at some center but that's miles outside central London. But didn't. So I get an email they got it back and will refund it.

[02:02:27.0000] <mpt>
annevk, I've been to that center. It was quite a walk.

[02:04:36.0000] <annevk>
heh

[02:07:09.0000] <darobin>
yeah, thanks to that policy there are a few cases in which I got the same item twice from them

[02:42:59.0000] <sangwhan>
They also have same day delivery in certain regions. Order in the morning, get it in the afternoon.

[02:47:08.0000] <darobin>
another group to move to the common repo: http://www.w3.org/mid/1365500405.3186.22.camel@cumulustier

[02:51:05.0000] <Ms2ger>
DAP? Do they do web platform stuff?

[02:52:53.0000] <darobin>
Ms2ger: exclusively

[02:52:57.0000] <annevk>
So in retrospect events should have been a language primitive I think.

[02:53:40.0000] <zcorpan>
Hixie_: the discussion about <s> makes it sound like it's not actually irrelevant at all

[02:54:04.0000] <zcorpan>
Hixie_: the old price in an ad is relevant

[02:55:25.0000] <annevk>
The distinction between <del> and <s> seems too fine for HTML.

[02:56:10.0000] <odinho>
Yeah.  It's freeform wild west.

[02:56:41.0000] <annevk>
mpt wrote about this at the start of the WHATWG I think. We should just have <i>, <b>, <s>, <indent> (rather than <blockquote>), ... Then relative semantics can be inferred from these snippets.

[02:56:57.0000] <odinho>
Should take inspiration from the default rendering.  It will probably be used for whatever it looks like default.

[02:57:28.0000] <odinho>
Because that's how people work.

[02:58:16.0000] <Ms2ger>
Yay, semantics

[02:58:18.0000] <mpt>
annevk, I have no problem with <blockquote>, because it has an obvious default rendering, and people don't (often) misuse it to achieve that rendering for other purposes.

[03:00:04.0000] <mpt>
annevk, the most interesting thing to me about <del> is that its semantics often cross element boundaries. <p>Blah. <del>Blah.</p> <p>Furthermore, blah.</del> So blah.</p>

[03:01:32.0000] <jgraham>
We obviously need a way to serialize DOM ranges. Then we could add annotations like <del> as a metadata layer on top of the main document. In RDF.

[03:01:33.0000] <mpt>
There are two other elements like that: <ins> and <mark>.

[03:02:09.0000] <annevk>
I remember someone once suggesting the need for ranges to mark up the Bible

[03:02:26.0000] <jgraham>
annevk: I remember having that conversation on the Paris metro

[03:03:11.0000] <jgraham>
Although I can't promise it's not a false memory.

[03:03:13.0000] <annevk>
I guess it keeps coming up and then everyone's like *shrug* and moves on to fix more important bugs.

[03:04:15.0000] <annevk>
Turns out there's a lot more interesting things to fix than semantic markup. You know, like legacy encodings :-)

[03:06:12.0000] <jgraham>
Not sure that legacy encodings could turn a geek meetup into a bar-room brawl in quite the same way

[03:06:32.0000] <darobin>
jgraham: try that out at a Unicode meeting

[03:07:45.0000] <darobin>
ooh, representing ranges and overlaps

[03:07:49.0000] <jgraham>
What, just walk in and say "iso-8859-1 should be redefined as windows-1252" and wait for it all to kick off?

[03:07:51.0000] <annevk>
"That's no glyph you retard!" "You're such a code point."

[03:07:57.0000] <jgraham>
Could be fun

[03:07:58.0000] <darobin>
maybe we should just adopt LMNL, or why not TEI!

[03:08:12.0000] <darobin>
jgraham: oh yeah, that'd be a roar

[03:08:19.0000] <darobin>
I'd buy a beer and watch it unfold

[03:08:43.0000] <darobin>
"we don't normally talk about special characters, but I'll make an exception for you"

[03:09:42.0000] <annevk>
Haha, that reminds me how the IETF would get back to Ian and I on the subject of URLs. Almost four months of waiting now on a message that'd go out "today".

[03:11:10.0000] <darobin>
annevk: you have to wait for it to be uploaded to the FTP server

[03:12:25.0000] <annevk>
Must have expired.

[03:13:13.0000] <annevk>
I'll ping them again. Kinda curious still.

[03:16:36.0000] <annevk>
It's actually about five months now that we've been waiting on something. I already pinged them once after a month and a bit.

[03:42:36.0000] <odinho>
https://github.com/w3c/web-platform-tests/pull/62#issuecomment-16105705

[03:43:31.0000] <odinho>
(Mosquito ServerSentEvents tests, subset of Opera tests -- they need more work, so we're discussing not accepting them.)

[03:47:56.0000] <Ms2ger>
sgtm

[04:12:40.0000] <SimonSapin>
so, what’s a workshop? https://www.w3.org/2013/06/ebooks/

[04:20:25.0000] <jgraham>
It's a room with a circular saw. The W3C likes to use them for meetings because the sight of the rapidly spinning blade creates sudden clarity that wasting everyone's time too much might not be a good life choice.

[04:22:16.0000] <Ms2ger>
Every time you waste time, you have to take a step towards the blade?

[04:22:54.0000] <Ms2ger>
That could be an interesting reality show

[04:25:29.0000] <SimonSapin>
so meta

[04:25:40.0000] <SimonSapin>
does wasting time by watching the show counts?

[04:26:01.0000] <svl>
What happens when the blade gets jammed by the press of too many bodies?

[04:29:01.0000] <annevk>
I reckon it'd be an "What if?"-style blade that does not have such problems.

[04:29:09.0000] <annevk>
s/an/a/

[04:30:38.0000] <SimonSapin>
annevk: https://code.google.com/p/google-url/ says it has "more complex rules for Windows file URLs", should that kind of thing be in the URL standard?

[04:33:53.0000] <annevk>
URL Standard has complex rules for file URLs. I hope that we can simply always do the weird drive-letter stuff from Windows and not have that as a per-platform oddity.

[04:59:02.0000] <SimonSapin>
Mozilla is having me travel a lot before I even start :) I’ll wait a bit to bring this one up

[05:01:58.0000] <jgraham>
SimonSapin: So where are you actually located? If you aren't travelling so much that you've forgotten.

[05:02:16.0000] <SimonSapin>
Lyon, for now

[05:02:21.0000] <SimonSapin>
London starting June

[05:03:34.0000] <jgraham>
Ah, that was convenient for TPAC then

[05:03:42.0000] <SimonSapin>
yes, very

[05:04:06.0000] <SimonSapin>
I went to TPAC on a bicycle

[05:04:16.0000] <odinho>
Me too, after flying and taking a train :D

[05:50:37.0000] <darobin>
is there a reason why dictionaries and callbacks aren't distinguishable as per WebIDL?

[05:51:15.0000] <darobin>
it just seems daft

[05:52:13.0000] <Ms2ger>
Because they're both plain objects?

[05:53:06.0000] <darobin>
are they?

[05:53:21.0000] <Ms2ger>
Pretty much

[05:53:32.0000] <darobin>
if I can distinguish them with typeof I don't see why WebIDL would be too braindead to do the same

[05:53:54.0000] <Ms2ger>
Sure, sure

[05:53:56.0000] <Ms2ger>
File a bug

[06:31:58.0000] <annevk>
darobin: when do you combine them though?

[06:32:28.0000] <darobin>
annevk: well, never since of course you wouldn't use callbacks, you'd use futures

[06:33:12.0000] <darobin>
I was simply made aware of a problem in the JSON-LD API where they wanted to have

[06:33:26.0000] <annevk>
hmm

[06:33:31.0000] <darobin>
void foo (SomeOptionsDict opt, SomeCB cb)

[06:33:34.0000] <darobin>
void foo (SomeCB cb)

[06:34:11.0000] <annevk>
oh

[06:34:18.0000] <annevk>
optional arguments typically go second

[06:34:25.0000] <darobin>
I know

[06:34:37.0000] <darobin>
but they also have something about callbacks always being last

[06:34:50.0000] <annevk>
NIH

[06:34:50.0000] <darobin>
in any case, I wasn't necessarily interested in their specific design

[06:34:56.0000] <annevk>
fair enough

[06:35:15.0000] <darobin>
but it's pretty common to see APIs that can take a mixture of functions and options

[06:35:29.0000] <darobin>
Node is full of them

[06:35:39.0000] <darobin>
it seems silly that we can't describe a common pattern

[06:35:51.0000] <darobin>
actually jQuery has that too

[06:40:24.0000] <jgraham>
Callbacks always last?

[06:40:41.0000] <darobin>
it's a common idiom

[06:45:28.0000] <jgraham>
That's very strange

[06:45:41.0000] <jgraham>
"functions are just another kind of object"

[06:45:55.0000] <jgraham>
"oh but we always pass them last, because they are special"

[06:50:21.0000] <annevk>
Expect consistency? Prepare for massive disappointed.

[06:50:38.0000] <annevk>
Also, topic.

[06:52:54.0000] <jgraham>
"Tim Berners-Lee (he’s like Simon Cowell, for the web)"

[07:11:07.0000] <Ms2ger>
darobin, so, there's no issue there

[07:11:39.0000] <Ms2ger>
darobin, if you pass two arguments, arg0 is a dict, arg1 is a callback; if you pass one, it's a callback

[07:31:19.0000] <annevk>
the way you implement that in JS however would be via typeof

[07:31:36.0000] <annevk>
you don't do argument counting first I think

[07:31:57.0000] <jgraham>
Well if you want to get the WebIDL dematics right you do

[07:32:01.0000] <jgraham>
*semantics

[07:32:21.0000] <Ms2ger>
And if you're writing testharness.js, you do that too, apparently

[07:32:29.0000] <annevk>
hmm

[07:41:00.0000] <jgraham>
https://github.com/html5lib

[07:41:09.0000] <jgraham>
Thanks to gsnedders who did all the actual work

[07:42:57.0000] <annevk>
nice

[07:43:02.0000] <annevk>
could've dropped the 5 though :p

[07:44:25.0000] <jgraham>
Well

[07:44:28.0000] <jgraham>
Not really

[07:44:40.0000] <jgraham>
Need all the code that does "import html5lib" to keep working

[07:45:17.0000] <jgraham>
In theory the right name for the project was libhtmlparser

[07:45:41.0000] <jgraham>
Which doesn't sound great…

[07:47:08.0000] <SimonSapin>
what’s the csswg-testsuite branch?

[07:47:32.0000] <Ms2ger>
Some patches to allow the build system of the css test suite to work

[07:47:52.0000] <Ms2ger>
gsnedders doesn't want to take them as-is, though

[07:48:04.0000] <SimonSapin>
ok

[07:48:05.0000] <Ms2ger>
So he promised to write replacements a year or so ago

[07:48:13.0000] <Ms2ger>
But those haven't materialize

[07:48:14.0000] <Ms2ger>
d

[07:48:29.0000] <SimonSapin>
so I probably don’t need it to run the test suite in WeasyPrint

[07:50:22.0000] <gsnedders>
SimonSapin: No, it's for building the CSS 2.1 testsuite

[07:53:06.0000] <gsnedders>
html5lib-php added now as well.

[07:53:19.0000] <gsnedders>
jgraham: Any point in moving your very very incomplete C stuff over?

[08:00:29.0000] <jgraham>
No

[08:00:37.0000] <jgraham>
Se also: very very incomplete

[08:16:09.0000] <marcosc>
/me wants a t-shirt that says "What's the use case?"

[08:25:18.0000] <marcosc>
/me would wear it at home and point to it when my dog looks at me funny. 

[09:23:06.0000] <Hixie_>
annevk: url.spec.whatwg.org is broken

[09:26:21.0000] <annevk>
Hixie_: fixed

[09:28:00.0000] <Hixie_>
thanks

[09:28:16.0000] <Hixie_>
/me is trying to do the url spec integration update

[09:28:21.0000] <Hixie_>
(for html)

[09:28:49.0000] <Hixie_>
annevk: so for Location, the "get the base" algorithm relies on the entry script

[09:29:13.0000] <Hixie_>
annevk: but you (redundantly) invoke the algorithm even when the url to "set the input" is absolute

[09:29:18.0000] <Hixie_>
annevk: which happens when the page is created

[09:29:23.0000] <Hixie_>
annevk: when there's no entry script

[09:29:26.0000] <Hixie_>
annevk: suggestions?

[09:29:59.0000] <annevk>
so input can be relative

[09:30:31.0000] <annevk>
Hixie_: I suggest making it return null if there is no entry script

[09:32:11.0000] <annevk>
Hixie_: to be clear, it always takes a base URL as for <a> /input/ can be relative

[09:49:06.0000] <Hixie_>
annevk: input can't be relative if it's Location and there's no entry script

[09:49:24.0000] <Hixie_>
annevk: so defining the base in that case is redundant

[09:50:51.0000] <annevk>
Hixie_: so either you need to make "get the base" return null in that scenario or I need to special case "get the base" not being defined somehow which seems a lot weirder than just having it return null

[09:52:49.0000] <Hixie_>
or you can just not call it when you don't need the base :-P

[09:52:50.0000] <Hixie_>
but ok

[09:53:49.0000] <annevk>
Hixie_: you have explained I don't need it for Location, but I pointed out this algorithm also takes into account <a>. How do I distinguish?

[09:54:24.0000] <Hixie_>
i can work around it on my end

[09:54:43.0000] <annevk>
okay

[09:54:48.0000] <Hixie_>
but in practice what would happen in good implementations is that the "get the base" callback would be pushed all the way into the parser algorithm

[09:54:57.0000] <Hixie_>
so it would just never be invoked if you tried to parse an absolute url

[09:56:05.0000] <annevk>
Hixie_: even for absolute URLs base is checked to be non-null

[09:56:28.0000] <Hixie_>
oh?

[09:56:32.0000] <Hixie_>
what does it do?

[09:56:32.0000] <annevk>
Hixie_: e.g. http:test parses differently based on the presence of a base URL

[09:56:43.0000] <Hixie_>
that's not an absolute url is it?

[09:57:03.0000] <Hixie_>
oh i guess it is by the spec's definition

[09:57:07.0000] <Hixie_>
interesting

[09:57:14.0000] <Hixie_>
that's a change from the old definition in html

[09:57:15.0000] <annevk>
Hixie_: http:test becomes http://test/ if the base URL scheme is file: and http://example.org/test if the base URL is http://example.org

[09:57:36.0000] <annevk>
Hixie_: the definition doesn't really matter, the parser just needs to know

[09:57:43.0000] <Hixie_>
sure

[09:58:02.0000] <Hixie_>
what i meant by "absolute url" is "the kind of full url used for a document's address"

[09:58:10.0000] <Hixie_>
and in those cases, the base url should never be checked

[09:58:21.0000] <annevk>
I understand, and I'm telling you that for those cases the base URL is checked

[09:58:50.0000] <Hixie_>
if i try to parse http://example.com/, you do something where the base url's value can have an effect on the resut?

[09:59:54.0000] <annevk>
no

[10:00:07.0000] <Hixie_>
so why would the base url be checked?

[10:00:12.0000] <Hixie_>
in those cases?

[10:00:35.0000] <annevk>
http://url.spec.whatwg.org/#scheme-state 2.4

[10:00:47.0000] <annevk>
because during parsing we don't know yet

[10:00:52.0000] <annevk>
in a one-pass parse

[10:01:04.0000] <annevk>
whether the URL will meet the criteria

[10:01:24.0000] <Hixie_>
if you're doing work that can't have an effect, you're doing it wrong :-)

[10:02:04.0000] <Hixie_>
but ok

[10:02:27.0000] <Hixie_>
on another note, the url spec says that a base url is a relative scheme

[10:02:30.0000] <Hixie_>
but that's not always true

[10:02:39.0000] <Hixie_>
e.g. if you open a new tab, the base url is about:blank

[10:05:47.0000] <annevk>
Hixie_: if you can figure out a way to not make it do that without lookahead...

[10:06:29.0000] <annevk>
Hixie_: ah yeah, the idea was to require base URLs to have a relative scheme

[10:06:48.0000] <Hixie_>
just do both in parallel and when you figure out that you didn't see the "//" then drop the other branch :-)

[10:06:59.0000] <Hixie_>
also btw, "Except where different objects implementing URLUtilsReadOnly are identical to objects implementing URLUtils." doesn't make any sense :-P

[10:11:04.0000] <annevk>
Hixie_: right...

[10:11:12.0000] <annevk>
Hixie_: if I add a comma after "different"?

[10:11:20.0000] <annevk>
:p

[10:11:24.0000] <Hixie_>
except where different, you and i are identical too :-P

[10:11:35.0000] <Hixie_>
also, apples and oranges are identical except where different :-P

[10:12:14.0000] <annevk>
Except for additional constraints imposed by the IDL ... are identical?

[10:13:28.0000] <Hixie_>
yeah i dunno

[10:13:45.0000] <Hixie_>
the way i'd do it would be to define the two IDL blocks in the same block, and then define the members at the same time

[10:13:58.0000] <Hixie_>
"the protocol attributes..."

[10:14:16.0000] <Hixie_>
with the <dfn> around protocol being the same thing referenced by both IDL blocks

[10:14:43.0000] <Hixie_>
also, that would let you say things like "Specifications defining objects implementing URLUtils and URLUtilsReadOnly must define a get the base algorithm"

[10:15:04.0000] <Hixie_>
which right now is kinda confusing since it's not clear at a glance which of the algorithms are also needed for URLUtilsReadOnly

[10:15:16.0000] <annevk>
okay so the properties already reference the same stuff

[10:15:18.0000] <Hixie_>
though you can work it out since the ones only mentioned by setters obviously don't apply

[10:15:28.0000] <annevk>
I'll merge the IDL blocks and make that other change about get the bas

[10:16:02.0000] <Hixie_>
renaming "Interface URLUtils" to "Properties of the URLUtils and URLUtilsReadOnly interfaces" or some such would solve most of it i think

[10:16:19.0000] <Hixie_>
basically i'm saying make them equal first class citizens rather than trying to define one in terms of the other

[10:16:47.0000] <annevk>
yup

[10:21:36.0000] <Hixie_>
ok if you're interested i've updated the urlutils stuff in html

[10:21:41.0000] <Hixie_>
fixing markup errors now then i'll check it in

[10:24:58.0000] <Hixie_>
oh, i seem to have a mistake

[10:25:16.0000] <Hixie_>
annevk: when can the update steps be called on an object whose url is null?

[10:25:38.0000] <Hixie_>
annevk: and is there no way we can just have concept-uu-update just be passed a string?

[10:26:01.0000] <Hixie_>
annevk: having to have all this boilerplate to yank data straight out of the URLUtils object's internals each time seems dubious

[10:31:56.0000] <dglazkov>
good morning, Whatwg!

[11:12:34.0000] <annevk>
Hixie_: when href is invoked with something non-sensical

[11:13:43.0000] <annevk>
Hixie_: I don't get the model the HTML spec has that assumes URL is a string most of the time. I think it would be much better if it's an object most of the time and only serialized at the edges.

[11:14:01.0000] <Hixie_>
urls are strings dude :-)

[11:14:23.0000] <Hixie_>
anyway, i commented on the bugs

[11:15:04.0000] <Hixie_>
i think it's all done now

[11:16:40.0000] <annevk>
kk, will have a look later, I need a break

[11:18:00.0000] <Hixie_>
later!

[11:58:08.0000] <MikeSmith>
Hixie_: time to update that Henry Kissinger quote in your sig with the one at http://wikileaks.org/plusd/cables/P860114-1573_MC_b.html#efmCRNCV3

[12:00:50.0000] <Hixie_>
Henry Kissinger quote?

[12:04:13.0000] <Hixie_>
heh, /percent decode/ doesn't ever update 'remaining'

[12:04:24.0000] <Hixie_>
i guess anne meant the definition to be a definition, not a "let"

[12:33:44.0000] <Hixie_>
is there anything in JS that can have a [[Call]] internal method other than a Function object, native objects, and host objects?

[12:34:33.0000] <Hixie_>
i guess what i'm really asking is what kinds of js code are there

[12:34:51.0000] <Hixie_>
i see functions, global code, and eval code

[14:16:07.0000] <Hixie_>
where on earth does the JS spec actually execute code

[14:17:17.0000] <Hixie_>
aaaah, "The production SourceElements : SourceElements SourceElement is evaluated as follows"


2013-04-10
[17:07:15.0000] <Hixie>
are filenames always ltr?

[17:07:23.0000] <Hixie>
or are paths in hebrew systems (e.g.) rtl?

[17:07:34.0000] <Hixie>
or is it per-component?

[17:07:35.0000] <Hixie>
or what?

[17:07:36.0000] <Hixie>
anyone know?

[19:31:51.0000] <Yuhong>
OT, but XP is going out of support in one year.

[19:32:04.0000] <Yuhong>
I wonder how long Firefox and Chrome will support it afterwards.

[23:15:37.0000] <zcorpan>
should FormData be clone-able (in structured clone)?

[01:33:00.0000] <annevk5>
zcorpan: so nothing needs to be said for the document global environment?

[01:33:04.0000] <annevk5>
zcorpan: seems so weird

[01:33:40.0000] <zcorpan>
annevk: the default is that things are exposed in document global environment and not exposed in worker global environment

[01:34:11.0000] <annevk>
is that actually explicit somehow?

[01:35:18.0000] <zcorpan>
"Unless otherwise specified, each ECMAScript global environment exposes all interfaces and exceptions that the implementation supports." webidl

[01:35:38.0000] <annevk>
I see. Seems rather ugly.

[01:36:25.0000] <zcorpan>
workers spec says "The DOM APIs — specifically, all the interfaces defind in the DOM specification other than exceptions — must not be exposed if the JavaScript global environment is a worker environment. [DOM]"

[01:37:25.0000] <annevk>
Should it not say: "Unless stated otherwise, no interfaces must be exposed."?

[01:37:28.0000] <zcorpan>
though i don't understand why the langauge for constructors is different

[01:38:10.0000] <zcorpan>
yeah, that seems clearer

[01:52:19.0000] <annevk>
zcorpan: I think FormData, URL, and URLQuery should probably be able to pass the boundary

[01:52:46.0000] <annevk>
I guess I should make the worker requirement in URL too. And in Encoding.

[01:55:19.0000] <annevk>
So structured cloning is an example of which is not defined in a modular way. The ideal way of doing that is to say that objects can have an associated structured clone algorithm and that if they don't you throw a DataCloneError.

[01:57:09.0000] <zcorpan>
structured clone has an extension point though

[01:57:15.0000] <zcorpan>
If input is an object that another specification defines how to clone

[01:57:15.0000] <zcorpan>
Let output be a clone of the object as defined by the other specification.

[01:57:16.0000] <annevk>
I know

[01:58:02.0000] <annevk>
But you don't want to define it in that way because that makes matters inconsistent.

[01:58:51.0000] <jgraham>
You need to define how to write a structured clone algorithm for an object though

[01:59:21.0000] <jgraham>
And also restrictions on the output of such an algorithm, perhaps

[01:59:42.0000] <annevk>
That seems orthogonal to how to structure this though.

[02:00:03.0000] <jgraham>
Well, not quite

[02:00:37.0000] <jgraham>
I mean I agree that your organisation sounds better, but I don't quite see how the details would fit together

[02:00:40.0000] <annevk>
The way it's done now favors certain objects over others and makes it harder to understand what you need to define if you define a new object.

[02:01:53.0000] <annevk>
If all objects instead had an indication of how you'd obtain a structured clone (and whether or not they're exposed in workers) it'd be much clearer for the next person who comes along and defines an object. It also allows more modular development.

[02:16:15.0000] <matjas>
Hixie, typo in http://html5.org/tools/web-apps-tracker?from=7796&to=7797: “scriptingy”

[02:48:15.0000] <annevk>
Open up the HTTP WG list archives for the first time in a while. Open http://lists.w3.org/Archives/Public/ietf-http-wg/2013AprJun/0001.html Get trolled hard.

[02:59:21.0000] <Ms2ger>
"I respectively request"

[03:02:26.0000] <jgraham>
Is that technically trolling? I mean it's a rather direct homage to "A Modest Proposal", which is a rather tired trope these days.

[03:03:08.0000] <marcosc>
anyone got an invite to get on this "Inter-net"?

[03:03:13.0000] <marcosc>
is that like twitters?

[03:07:34.0000] <annevk>
Ok guys, now look at the date ;-)

[03:08:30.0000] <marcosc>
:)

[03:08:57.0000] <jgraham>
I don't see how it being an April Fool changes the fact that it's been done to death :)

[05:30:33.0000] <asmodai>
I find myself in this wonderful area of HTML, CSS, images and email. I want to slash my wrists.

[05:34:35.0000] <Ms2ger>
Does anyone implement <track> already?

[05:35:41.0000] <zcorpan>
Ms2ger: opera does

[05:36:03.0000] <Ms2ger>
Presto, you mean?

[05:36:05.0000] <zcorpan>
yes

[05:36:12.0000] <jgraham>
And also Weblinkit, I think?

[05:36:44.0000] <zcorpan>
webkit and IE i think

[05:36:57.0000] <Ms2ger>
I see

[05:36:59.0000] <zcorpan>
dunno if they've shipped

[05:37:48.0000] <zcorpan>
we submitted tests for track and webvtt

[05:38:11.0000] <zcorpan>
though the spec has changed a bit

[05:38:14.0000] <Ms2ger>
Hmm

[05:38:20.0000] <tomasf>
http://www.longtailvideo.com/html5/track/

[05:38:31.0000] <zcorpan>
e.g. there's now a WebVTTCue constructor

[05:38:39.0000] <Ms2ger>
Is there any reason the first argument to HTMLMediaElement.addTextTrack isn't an enum?

[05:39:46.0000] <zcorpan>
no

[05:40:25.0000] <Ms2ger>
Lemme file that, then

[05:42:33.0000] <zcorpan>
interface TextTrack : EventTarget {

[05:42:33.0000] <zcorpan>
  readonly attribute DOMString kind;

[05:42:41.0000] <zcorpan>
i guess that could also use enum?

[05:45:27.0000] <zcorpan>
did webvtt ever overhaul its rendering rules?

[05:46:29.0000] <Ms2ger>
Looks like it

[05:46:35.0000] <Ms2ger>
(enum, not rendering)

[05:48:31.0000] <zcorpan>
/me waves

[05:53:26.0000] <marcosc>
/me wishes that it was mandatory for F2F meeting hosts to provide a bed for when discussions drag on. Would benefit from a quick power nap. 

[05:53:39.0000] <Ms2ger>
sysapps?

[05:53:55.0000] <marcosc>
yep

[05:55:00.0000] <Ms2ger>
Hrm

[05:55:24.0000] <Ms2ger>
Anyone who can find something about when track elements should load their source?

[05:57:43.0000] <darobin>
hmmm, ISTR there was a bug about that

[05:59:29.0000] <jgraham>
A bed, or one per participant? Because I'm not sure that the natural repression that comes from being British would allow me to be comfortable sharing a bed with the rest of a WG.

[06:01:47.0000] <marcosc>
jgraham: good point... it might cause cultural issues. I don't mind.

[06:25:41.0000] <karlcow>
marcosc, jgraham: hmm it really depends on who is in the bed with you. But I wonder if a consensus could be reached around something like this http://122.img.pp.sohu.com/images/blog/2008/1/20/15/29/1183327596f.jpg

[06:28:19.0000] <jgraham>
darobin: You know that the github API allows you to test push hooks without making an actual commit?

[06:29:28.0000] <marcosc>
karlcow: :)

[06:35:22.0000] <darobin>
jgraham: you know what, I found that option the very second I made the commit :)

[06:56:26.0000] <odinho>
Art has process questions for reviews of testsuites: https://github.com/w3c/web-platform-tests/pull/62#issuecomment-16171131

[07:05:44.0000] <odinho>
darobin, jgraham, Ms2ger, tobie: So, getting w3c-test.org to also carry the submission branches.

[07:05:48.0000] <odinho>
WDYT?

[07:05:53.0000] <odinho>
(+)MikeSmith too

[07:06:06.0000] <Ms2ger>
sgtm

[07:06:24.0000] <odinho>
Right now there's master and CR, there could be a "submissions" folder where every submission branch is checked out as well.

[07:06:24.0000] <Ms2ger>
MikeSmith, darobin, tobie: set it up, pls

[07:08:52.0000] <darobin>
odinho: you write the code to make it happen, taking into account that anything called variations on .php must be excluded, and I'll happily set it up :)

[07:12:41.0000] <odinho>
Bah :P  The webstandards team in Opera should hire me, with all the work I'm doing for them.

[07:13:16.0000] <odinho>
I'm very unsure if I'll be able to do that in a timely fashion, -- but step one would be to put out what you use now on GitHub or something.

[07:14:35.0000] <Ms2ger>
odinho, I believe Mozilla's hiring ;)

[07:15:15.0000] <odinho>
Ms2ger: Sneaky man ;-P

[07:15:27.0000] <Ms2ger>
:)

[07:19:16.0000] <marcosc>
/me found a picture of Ms2ger 

[07:19:18.0000] <marcosc>
http://www.3gpp.org/IMG/png/businessman.png

[07:22:46.0000] <darobin>
odinho: what we use on GitHub? you mean to pull on a regular basis?

[07:23:45.0000] <darobin>
odinho: here's the full code, */10 * * * * cd /u/www.w3c-test.org/web-platform-tests/master && git pull --quiet"

[07:24:39.0000] <odinho>
Oh.

[07:25:11.0000] <odinho>
Some serious programming there.  Better share with the world ;-)

[07:25:35.0000] <jgraham>
So it breaks forever if someone makes a non-ff push? :)

[07:25:52.0000] <darobin>
it probably does!

[07:26:07.0000] <darobin>
I'm right now improving that though

[07:26:17.0000] <darobin>
but that won't make it react to PRs

[07:26:37.0000] <jgraham>
Nope

[07:31:53.0000] <jgraham>
making it react in some way to pull requests is not hard

[07:32:02.0000] <jgraham>
Makign it do the right thing is a bit harder, perhaps

[07:33:15.0000] <jgraham>
https://gist.github.com/kennethreitz/3709868 is quite helpful though

[07:35:27.0000] <jgraham>
Basically it feels like you should be able to do the same as you are implementing for master, but with the pr branch, the checkout in a submissions/ folder, and apache configured to not run PHP under submissions/

[07:36:17.0000] <darobin>
jgraham: I thought of apache not running anything in there, but it's less useful that way

[07:36:47.0000] <darobin>
you could have a legit submission interacting with legit *existing* php that hasn't been modified

[07:36:53.0000] <darobin>
but that might be too complex, at least at first

[07:37:34.0000] <darobin>
that's a useful gist, it's not all that we need but it's a good brick

[07:38:04.0000] <darobin>
in general I wouldn't mind a way of cleaning up closed PRs, too

[07:39:52.0000] <jgraham>
darobin: There is an event for closed

[07:40:01.0000] <jgraham>
Just use that to delete the directory

[07:40:19.0000] <jgraham>
Why wouldn't existing php run?

[07:40:51.0000] <jgraham>
If a test links to /foo/bar.php it will work fine. It's only a problem if it tries to use a relative URL

[07:41:53.0000] <darobin>
aren't those always relative?

[07:42:09.0000] <darobin>
any link to PHP outside the repo will work

[07:42:19.0000] <darobin>
links to PHP inside the repo though not

[07:42:38.0000] <jgraham>
Well inside/outside is a bit misleading

[07:43:10.0000] <jgraham>
If you link to /resources/useful.php things will work fine

[07:43:26.0000] <jgraham>
If you try to link to ../../resources/useful.php things will break

[07:43:41.0000] <jgraham>
Both of those are "inside the repo" in some sense

[07:43:55.0000] <darobin>
I hate it when you get philosophical

[07:44:14.0000] <darobin>
but yes, that's what I meant

[07:44:39.0000] <darobin>
anything in /resources is safe anyway since it's in another repo to boot

[07:45:04.0000] <odinho>
Anything outside the apache no-go-zone will run.

[07:45:09.0000] <darobin>
but I was thinking of stuff like JS tests side by side with PHP

[07:45:21.0000] <darobin>
odinho: I understand that

[07:45:32.0000] <odinho>
darobin: Yeah, -- I was creating a sentence.

[07:45:38.0000] <darobin>
but let's say we're testing the unicorn protocol

[07:45:45.0000] <darobin>
which is a well-known part of HTML

[07:45:57.0000] <odinho>
Like Server Sent Events, or CORS.

[07:45:59.0000] <darobin>
so we have html/cryptozoology/unicorn/

[07:46:12.0000] <darobin>
in there there's protocol.php and api.html which has some JS

[07:46:48.0000] <darobin>
I want to submit some new tests: I'm only going to link to "protocol.php" not "/web-platform-tests/html/cryptozoology/unicorn/protocol.php"

[07:46:51.0000] <jgraham>
Well of course we could do something like git diff --name-only git `merge-base` HEAD | xargs 'chmod -x'

[07:46:57.0000] <darobin>
that wouldnt' run in a PR

[07:46:59.0000] <jgraham>
Or whatever the right syntax is

[07:47:34.0000] <darobin>
it's not a big deal, I was just pointing that out

[07:47:44.0000] <darobin>
I think we can actually live with turning processing off for PRs

[07:48:06.0000] <jgraham>
(does php actually need a executable bit set to run under mod_php? Maybe not. Something more compelx could be needed)

[07:48:27.0000] <odinho>
It doesn't need it no. But it could maybe be configured to work like that.

[08:52:52.0000] <dglazkov>
good morning, Whatwg!

[09:12:06.0000] <gsnedders>
https://github.com/html5lib/html5lib-tests/issues/2 in case anyone wants to argue over the tokenizer file format.

[10:18:40.0000] <gsnedders>
hsivonen, abarth: https://github.com/html5lib/html5lib-tests/issues/2

[10:18:47.0000] <jwalden>
MikeSmith: that Kissinger quote from yesterday's pretty funny

[10:54:26.0000] <abarth>
gsnedders: will read in a bit

[11:34:23.0000] <zcorpan>
Ms2ger: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#sourcing-out-of-band-text-tracks - "When a text track corresponding to a track element experiences any of the following circumstances, the user agent must start the track processing model for that text track and its track element:"

[13:21:25.0000] <smaug____>
oh, daily dglazkov bugmail spam :p

[13:22:57.0000] <smaug____>
/me is perhaps following too many bugzilla components

[14:00:43.0000] <dglazkov>
/me is drowning in bugs

[14:11:20.0000] <smaug____>
aren't we all?


2013-04-11
[22:24:56.0000] <annevk>
Hixie: so the DOMTokenList story is I think that I did tell you about a change, but that I wanted to wait with filing bugs on HTML until someone had attempted to implement the changes we made for DOM

[22:25:11.0000] <annevk>
Hixie: let me dig up the trail

[22:27:59.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=20105

[22:28:03.0000] <annevk>
But that's not the big one

[22:29:26.0000] <annevk>
Hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20104#c4 is the one

[22:29:39.0000] <annevk>
Hixie: I did add you to the cc, but maybe that's not good enough these days?

[00:15:52.0000] <jgraham>
annevk: Just for you critic is now https

[00:16:23.0000] <annevk>
aw man, now I might have to start using it

[00:25:11.0000] <asmodai>
in HTML5, <label> and form controls are a 1:1 mapping, right (as opposed to HTML4's N:1 mapping)? I mean, unless I missed some part of the spec

[00:47:22.0000] <zcorpan>
asmodai: a form control can have 0 or more labels, a label can have 0 or 1 form control

[00:48:04.0000] <zcorpan>
asmodai: also see http://www.whatwg.org/specs/web-apps/current-work/multipage/forms.html#dom-lfe-labels

[00:52:45.0000] <jgraham>
So where's darobin hiding?

[00:58:33.0000] <asmodai>
zcorpan: *nod* thanks. Now I wonder why this designer thinks he can apply a <label> to a <ul> of <input "radio">s.

[04:19:46.0000] <hsivonen>
on Linux x86_64, my local clang opt build fails with symbol "isascii" missing when linking WebRTC STUN stuff. known problem?

[04:20:29.0000] <hsivonen>
apparently yes: https://bugzilla.mozilla.org/show_bug.cgi?id=860222

[04:21:58.0000] <hsivonen>
doh. wrong channel. sorry.

[04:22:01.0000] <Ms2ger>
Yep

[04:25:58.0000] <jgraham>
darobin: (I have to run now, but see my email to public-test-infra)

[04:26:25.0000] <darobin>
jgraham: ok, just arriving now, but I'll look!

[04:27:50.0000] <Ms2ger>
annevk, there's some critic reviews I'd love you to have a look at ;)

[04:28:18.0000] <annevk>
Ms2ger: I can have a look now if you want. PointeR?

[04:29:01.0000] <annevk>
darobin: I setup a hook from the repo

[04:29:07.0000] <Ms2ger>
https://critic.hoppipolla.co.uk/r/27, 28, 29

[04:29:17.0000] <darobin>
annevk: ok, great

[04:29:18.0000] <annevk>
darobin: is your GH account darobin too? I can add you to WHATWG

[04:29:36.0000] <darobin>
annevk: yes it is, ok, I'll try not to replace the logo with W3C's ;)

[04:29:41.0000] <annevk>
heh

[04:29:59.0000] <darobin>
annevk: the sync didn't work last night when I left, but it was likely a problem of MX record propagation so I need to test again now

[04:30:06.0000] <darobin>
in any case it'll work soon

[04:30:12.0000] <annevk>
k

[04:30:12.0000] <Ms2ger>
zcorpan, thanks for the link yesterday

[04:30:18.0000] <annevk>
you're added as admin

[04:30:22.0000] <annevk>
we don't really have groups

[04:30:26.0000] <Ms2ger>
Hmm

[04:30:28.0000] <darobin>
cool, thanks

[04:30:35.0000] <zcorpan>
Ms2ger: np

[04:30:38.0000] <Ms2ger>
Does that mean darobin gets to tweet as @WHATWG too?

[04:30:51.0000] <darobin>
I don't think the tweeting is handled through GitHub :)

[04:31:03.0000] <annevk>
Ms2ger: yeah I guess, if he wanted

[04:31:03.0000] <Ms2ger>
You'd be surprised

[04:31:18.0000] <darobin>
hehehe

[04:31:34.0000] <annevk>
but our policy for @WHATWG is that anyone can tweet from it as long as it's not spam so that's not a problem

[04:31:55.0000] <darobin>
I can tweet from @w3c as well

[04:32:09.0000] <darobin>
so I could wreak total havok and then move on to some other career

[04:32:40.0000] <annevk>
Ms2ger: lots of tests

[04:33:02.0000] <annevk>
Ms2ger: what kind of quality are we looking for?

[04:33:24.0000] <annevk>
e.g. "XMLHttpRequest L2" seems wrong for <title>

[04:34:51.0000] <Ms2ger>
Mainly correctness, but feel free to complain about things like that too

[04:45:47.0000] <annevk>
I can't do 28 I think. I wrote a lot of those tests.

[04:45:56.0000] <annevk>
Though they've been reviewed before.

[04:46:12.0000] <Ms2ger>
At Opera, or?

[04:46:18.0000] <annevk>
And there's some issues with the auth-related tests.

[04:46:39.0000] <annevk>
Ms2ger: yeah, though also by WebApps at times, it's been through a lot of iteration

[04:48:50.0000] <Ms2ger>
darobin, do you remember what policy we ended up with in the thread about internally-reviewed tests?

[04:50:32.0000] <annevk>
ooh, the <link rel=help> stuff is no good

[04:52:11.0000] <annevk>
dunno have someone else look at that I suppose

[04:53:37.0000] <annevk>
ooh man that thing generates email

[04:54:25.0000] <annevk>
lunch

[05:04:03.0000] <darobin>
Ms2ger: IIRC we said anyone could review the tests except the person who wrote them

[05:13:35.0000] <hsivonen>
for an interesting way of speccing things, check out the character-based limits on UTF-8 data in http://tools.ietf.org/html/rfc5389#section-15.7

[05:46:19.0000] <annevk>
ooh that's the WebRTC stuff

[05:46:50.0000] <annevk>
I wonder why there's so much more complexity than before

[05:47:35.0000] <Ms2ger>
/me blames Google

[06:11:55.0000] <hsivonen>
annevk: a big factor in the complexity is the use of UDP and the UDP-hostility of middle boxes

[06:54:01.0000] <gsnedders>
Anyone got AAA swapped in? Give an example that hits the "…but the element is not in scope" case in step 4?

[07:46:31.0000] <darobin>
'Since there are so many opportunities for the UA to just say "fuck it"' -- I love it when annevk gets technical

[07:48:06.0000] <annevk>
heh

[07:50:35.0000] <hsivonen>
darobin: context?

[07:50:58.0000] <darobin>
http://lists.w3.org/Archives/Public/public-device-apis/2013Apr/0017.html

[07:56:32.0000] <hsivonen>
SimonSapin: did you have a Rust impl of the Encoding Standard?

[07:56:54.0000] <hsivonen>
SimonSapin: someone's asking about converters on rust-dev

[07:57:44.0000] <SimonSapin>
hsivonen: not really, yet

[07:58:20.0000] <SimonSapin>
I have something very incomplete, that I wouldn’t recommend anybody uses

[07:58:21.0000] <gsnedders>
I'm confused, why is cover (in Python) not picking up code-coverage of html5lib.treebuilders.dom? It's definitely running!

[07:59:08.0000] <annevk>
hsivonen: if you're on that list can you email a pointer to the Encoding Standard? so we'll get the right thing implemented

[07:59:48.0000] <SimonSapin>
I’ll do it

[08:04:18.0000] <dglazkov>
good morning, Whatwg!

[08:10:12.0000] <hsivonen>
SimonSapin: thanks

[08:23:56.0000] <SimonSapin>
annevk, hsivonen: sent. https://mail.mozilla.org/pipermail/rust-dev/2013-April/003575.html

[08:24:56.0000] <annevk>
yeah I don't think we'd ever want that separate API

[08:25:16.0000] <annevk>
furthering bullshit encodings should be a non-goal

[08:26:22.0000] <SimonSapin>
annevk: My point is: if someone wants UTF-32 in a Rust libstd, unrelated to the web, is should be separated to what eg. Servo will use

[09:04:49.0000] <SimonSapin>
It’s unfortunate that 'green' is rgb(0, 128, 0) rather than rgb(0%, 50%, 0%)

[09:05:38.0000] <SimonSapin>
(128 being 0.50196%, because 100% is 255, not 256.)

[09:05:49.0000] <SimonSapin>
makes testing suck

[09:15:28.0000] <annevk>
jgraham: so what did you change in that review?

[09:15:36.0000] <annevk>
jgraham: I find critic so incomprehensible

[09:18:16.0000] <jgraham>
I marked the deleted files as reviewed

[09:18:49.0000] <jgraham>
If you reviewed the other files you should tick next to the ones that you reviewed (even if there were issues, as long as you finished marking all the issues)

[09:18:53.0000] <jgraham>
and press submit

[09:19:46.0000] <annevk>
tick where?

[09:20:26.0000] <jgraham>
https://critic.hoppipolla.co.uk/33e7bba0?review=29 under where it says "Reviewed"

[09:20:46.0000] <jgraham>
(to the left of the file names)

[09:21:01.0000] <annevk>
no effect

[09:23:02.0000] <annevk>
http://www.w3.org/TR/2013/WD-mediaont-api-1.0-20130411/#example-in-javascript-23 are you fucking kidding me?

[09:23:15.0000] <annevk>
this API is sooo bad :-(

[09:23:31.0000] <jgraham>
annevk: Oh, you marked yourself as a watcher on the review. To review stuff you need to be a reviewer

[09:23:39.0000] <annevk>
I did not do shit

[09:23:43.0000] <jgraham>
I added you as one for this review, but you should adjust your filters

[09:23:48.0000] <annevk>
I just followed some links

[09:24:00.0000] <jgraham>
Oh, well maybe commenting auto-adds you as a watcher

[09:24:20.0000] <jgraham>
Anyway you are now a reviewer

[09:24:24.0000] <jgraham>
For that review

[09:25:16.0000] <annevk>
I see, thanks

[09:25:18.0000] <jgraham>
To fix in general go to https://critic.hoppipolla.co.uk/home?repository=10 and click "Add Filter" at the bottom of the page.

[09:25:40.0000] <jgraham>
You probably want to review /

[09:25:52.0000] <jgraham>
(i.e. everything)

[09:27:34.0000] <annevk>
I have to say though, this is an interesting thing

[09:27:52.0000] <annevk>
Maybe at some point we can use this for specs, once we have enough people to write them

[09:29:31.0000] <annevk>
lol

[09:29:43.0000] <annevk>
"save settings" goes so fast and there's no delay on the dialog displayed

[09:29:57.0000] <annevk>
so it looks more like corruption than success

[09:50:16.0000] <jgraham>
annevk: That spec has the word "Ontology" in the introduction. That's not so much a red flag as a blaring siren, and a crush of people screaming "danger, get out while you still can"

[09:54:10.0000] <annevk>
but it also defines an API for getting data out of objects

[09:54:20.0000] <annevk>
I guess I'm wondering if this is something we want to implement

[09:54:38.0000] <annevk>
one browser guy

[09:54:40.0000] <annevk>
kinda

[09:55:02.0000] <TabAtkins>
I don't understand the rationale behind making this async.

[09:55:13.0000] <TabAtkins>
It doesn't appear that there's anything that would cause delay, I think?

[09:55:22.0000] <annevk>
plus a bunch of university people who by the looks of their API design never made a site

[09:55:26.0000] <annevk>
TabAtkins: it's IO

[09:55:32.0000] <annevk>
TabAtkins: so that makes sense, but it should be futures

[09:55:44.0000] <TabAtkins>
annevk: Ah, file IO, gotcha.

[09:55:49.0000] <TabAtkins>
annevk: In that case, yeah, definitely.

[09:55:55.0000] <TabAtkins>
Though this was written before Futures.

[09:56:17.0000] <annevk>
but the return value needs to be cleaned up

[09:56:26.0000] <annevk>
that seems much more disheartening than anything else there

[09:56:49.0000] <TabAtkins>
Also: awgoddammit they use, not even named class constants, but just straight-up *numbers* to identify modes in MediaResource#getSupportedModes()

[09:58:28.0000] <TabAtkins>
I could go through and do an API rewrite if anyone thinks it's something that might be valuable to implement.

[09:59:29.0000] <TabAtkins>
annevk: While you're here, let me bounce a ProgressFuture idea off of you.

[10:00:12.0000] <TabAtkins>
I suspect that a decent fraction of ProgressFuture users will want to use the progress events for things like showing UI (depending on exactly what it is, of course).

[10:00:30.0000] <annevk>
TabAtkins: so I think people have suggested better EXIF-like APIs already, I just wonder where those went; emailed webapps about it now

[10:00:40.0000] <TabAtkins>
This kind of thing benefits from knowing the current state of the progress at the time it registers, in addition to listening for future progress updates.

[10:01:25.0000] <Ms2ger>
Gecko supports media.mozGetMetadata()

[10:01:38.0000] <TabAtkins>
In other words, it seems like the progress updates themselves could be useful in a future-like way, where you get informed of the latest "completed" progress.

[10:01:47.0000] <annevk>
Ms2ger: maybe reply in that thread with a pointer?

[10:02:50.0000] <TabAtkins>
Idea: rather than just registering a callback with .progress(), also allow registering an object with number keys in [0,1] and callback values.  ProgressFuture gains, in addition to (or instead of?) the explicit progress value, a progress number from [0,1].

[10:03:33.0000] <TabAtkins>
Or, wait, I just realized the API I'm suggesting is a bad idea.

[10:03:53.0000] <annevk>
the progress callback will just be passed an object with the data

[10:04:02.0000] <annevk>
with which you can do everything

[10:04:06.0000] <TabAtkins>
Instead!  ProgressFuture gains a progress number, from [0,1].  If you register for .progress(), it gets called immediately (next tick) with the current progress number.

[10:04:25.0000] <TabAtkins>
annevk: Problem with current spec is that you have to wait for the next resolver.progress() update.

[10:04:46.0000] <Ms2ger>
annevk, fwiw, the FormData test may be a joke, but it used to fail in Gecko :)

[10:05:05.0000] <annevk>
Ms2ger: Gecko is a joke :p

[10:05:13.0000] <annevk>
oh wait

[10:05:16.0000] <Ms2ger>
annevk, indeed so :)

[10:05:34.0000] <Ms2ger>
Do we have an easy way to test FormData?

[10:05:41.0000] <annevk>
TabAtkins: that seems like an impl detail

[10:06:14.0000] <jgraham>
annevk: Marking things as reviewed when they still have issues as a slightly non-obvious part of the critic model. "I've reviewed this" doesn't mean "I think this is OK".

[10:06:16.0000] <TabAtkins>
annevk: I... don't think it is?  The spec seems clear so far that the future's progress callbacks are called whenever the resolver posts a progress update.

[10:06:19.0000] <annevk>
TabAtkins: we can spec that the first thing .progress() does is have resolver.progress() queue something (unless the future is already complete in which case that does not make much sense I think)

[10:06:33.0000] <TabAtkins>
Right, so that's a spec detail, not an impl detail. ^_^

[10:06:37.0000] <TabAtkins>
That would work.

[10:06:48.0000] <jgraham>
So you don't really need to add a comment pointing out that your other comments need to be addressed; that's just the normal workflow

[10:07:11.0000] <TabAtkins>
And yes, if the future is complete, no progress callback.  We should also just entirely turn off progress updates after it's resolved.

[10:07:22.0000] <annevk>
TabAtkins: with "impl" I meant we might want to make it depend on where we are using it

[10:07:45.0000] <TabAtkins>
annevk: Hm, I doubt there's a case where you're registering for progress updates and *don't* want to know what the current progress is.

[10:08:02.0000] <annevk>
I sometimes say "impl" if e.g. HTML uses URL, HTML has an impl of the URL stuff I wrote

[10:08:18.0000] <annevk>
TabAtkins: fair

[10:08:34.0000] <annevk>
TabAtkins: I'm also leaning towards the .then(success,reject,progress) model

[10:08:49.0000] <annevk>
but maybe starting with .progress is sufficient

[10:08:51.0000] <TabAtkins>
Interesting.  I'm fine with the current model, given chaining.

[10:09:25.0000] <annevk>
with the current model you might do the wrong thing if you first do .then()

[10:09:39.0000] <TabAtkins>
Really?

[10:09:41.0000] <annevk>
there's no way to get back to the future you .then()d on

[10:09:45.0000] <annevk>
if you're chaining

[10:09:45.0000] <TabAtkins>
Oh!

[10:09:48.0000] <TabAtkins>
Right.

[10:09:59.0000] <TabAtkins>
I forgot that .then() returns a new future.

[10:15:29.0000] <annevk>
Ms2ger: is there any documentation on this mozGetMedia thing?

[10:15:44.0000] <Ms2ger>
http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/html/nsIDOMHTMLMediaElement.idl#97

[10:16:51.0000] <annevk>
just found that

[10:16:55.0000] <annevk>
so that's sync

[10:17:01.0000] <annevk>
I guess we cache stuff

[10:17:36.0000] <annevk>
and it seems our approach is to just expose whatever if we support the storage format

[10:17:43.0000] <annevk>
hmm

[10:20:19.0000] <TabAtkins>
annevk: btw, good work on upgrading the futures spec.  It's more readable now, though I think I can still contribute.

[10:21:06.0000] <annevk>
Can we still change fullscreen?

[10:22:08.0000] <TabAtkins>
annevk: Also, I'd love to define the fetching model for CSS.  The thread on filter-effects has a confusing amount of detail, though.

[10:22:17.0000] <TabAtkins>
So, any help would be appreciated.

[10:22:49.0000] <annevk>
hopefully by end of Q2 http://fetch.spec.whatwg.org/ is roughly done

[10:22:57.0000] <TabAtkins>
So I should wait on that?

[10:23:18.0000] <annevk>
well the general model is in place so we can start thinking about it

[10:23:24.0000] <annevk>
up to you

[10:24:21.0000] <TabAtkins>
Ok, if I have time in the near future I'll look through it.

[10:24:35.0000] <annevk>
okay so Mozilla does not expose Fullscreen unprefixed

[10:24:51.0000] <TabAtkins>
On an unrelated note, if we change ProgressFuture as discussed here, I think that concept should be reified somewhere, as it's a useful Event alternative in some cases.

[10:25:02.0000] <gsnedders>
jgraham: So what is the commit policy now for html5lib?

[10:25:09.0000] <TabAtkins>
"that concept" being "callback called multiple times, but also called as soon as you register with the latest data".

[10:25:41.0000] <annevk>
WebKit is prefixed too

[10:25:43.0000] <TabAtkins>
In which case, going with the 3-arg .then() might be a good idea.

[10:25:46.0000] <annevk>
fuck yeah futures

[10:26:19.0000] <TabAtkins>
It may or may not ever actually complete.

[10:26:27.0000] <TabAtkins>
Depending on the exact usage.

[10:26:49.0000] <jgraham>
gsnedders: I won't cry if you make comemnt cleanups without getting review

[10:26:58.0000] <jgraham>
But maybe larger changes should have code review

[10:27:23.0000] <jgraham>
We could see how it works at least, now we have a tool that doesn't entirely suck

[10:28:54.0000] <annevk>
TabAtkins: yes, we'll make it part of the contract

[10:29:25.0000] <annevk>
TabAtkins: if you do ProgressFuture, you need to have progress data available next to having a result available

[10:29:43.0000] <TabAtkins>
annevk: I'm compiling a blog post of scenarios and which callback mechanism to use to solve them, so I'll put it in there.

[10:29:48.0000] <annevk>
TabAtkins: and at some point progress data becomes null and result becomes non-null

[10:30:04.0000] <TabAtkins>
Yes, for ProgressFuture that's definitely what happens.

[10:30:32.0000] <TabAtkins>
But I can easily see a Future that doesnt' ever complete, but only gives "progress" updates, where "progress" is just any value.

[10:31:01.0000] <TabAtkins>
This would let us wipe out the last events from Font Load Events, and do it *better* than the events currently do, to boot.

[10:31:20.0000] <annevk>
oops

[10:31:34.0000] <annevk>
one problem with using futures for requestFullscreen is that subdocuments would no longer be modified

[10:31:59.0000] <annevk>
which seems bad

[10:32:13.0000] <annevk>
but we could have both

[10:32:18.0000] <annevk>
in this case

[10:32:29.0000] <annevk>
and get rid of fullscreenerror

[10:36:24.0000] <TabAtkins>
Hixie: I didn't realize that w() had a special printing mode for when you pass in events.  Nice!

[10:49:56.0000] <TabAtkins>
annevk: Also, are you following the monadic-promises discussion that's happening on the promises-aplus github?

[10:50:30.0000] <annevk>
I saw some of it come by

[10:56:32.0000] <TabAtkins>
You wouldn't need to add much to make it happen, and the most important bit - making a "basic" future out of a static value, with something like Future#of - is useful by itself.

[10:56:47.0000] <TabAtkins>
It lets you, frex, intermix a static value with other futures in the futures combinators.

[10:56:58.0000] <annevk>
you can already do that

[10:57:15.0000] <annevk>
Future.any(future, "test") works

[11:02:51.0000] <Ms2ger>
annevk, seriously though... How do you test FormData?

[11:03:05.0000] <annevk>
Ms2ger: Microsoft managed :p

[11:03:13.0000] <Ms2ger>
annevk, ouch :(

[11:03:47.0000] <annevk>
Ms2ger: you have to push it over the network basically at the moment

[11:03:53.0000] <annevk>
Ms2ger: apart from the IDL trickery one can do

[11:04:13.0000] <annevk>
Eventually it might grow to be more like URLQuery

[11:04:22.0000] <TabAtkins>
annevk: Hm, that means that you can't easily make a future that returns a future as its completion value, no?  Because you end up having to ducktype it?

[11:05:26.0000] <annevk>
TabAtkins: accept() can be used if you want that

[11:07:02.0000] <Ms2ger>
annevk, tell me more about this IDL trickery

[11:07:40.0000] <annevk>
Ms2ger: the kind of tests you wrote for ProgressEvent

[11:08:02.0000] <TabAtkins>
annevk: You mean just doing "new Future(function(r){r.accept(<static value>);})?

[11:08:25.0000] <annevk>
TabAtkins: what is static value?

[11:08:48.0000] <TabAtkins>
annevk: Whatever value you want to upgrade into a promise.  You already have it, but you want it to interact with the promise algebra.

[11:08:59.0000] <TabAtkins>
s/promise/future/

[11:09:27.0000] <annevk>
if that value needs to be able to be a future, yes

[11:09:58.0000] <annevk>
I think the general pattern is using .resolve() though

[11:10:05.0000] <TabAtkins>
So, Future.of(<static value>) sounds like a much more convenient way to do that. ^_^

[11:12:13.0000] <annevk>
could you explain the scenario though where .resolve() is not okay?

[11:12:30.0000] <annevk>
on www-dom perhaps

[11:22:34.0000] <TabAtkins>
Are you referring to the code I posted above (but with .resolve instead of .accept)?

[11:29:41.0000] <arunranga>
/me wonders if making Blob URLs cross origin will clean up the data: URL morass

[11:30:21.0000] <arunranga>
For some reason changing this in the spec feels dangerous.

[11:32:32.0000] <annevk>
TabAtkins: just in general I guess

[11:33:08.0000] <annevk>
arunranga: so what needs to happen is that we need to decide how the blob URL lifecycle works

[11:33:34.0000] <annevk>
arunranga: I don't think it's dangerous, as the URL is secret (unguessable)

[11:34:08.0000] <annevk>
arunranga: the problem is the lifecycle, but that's a problem either way :(

[11:57:51.0000] <arunranga>
annevk, we've struggled with lifecycle for what seems like a long time now :(  seems like autoRevoke is no silver bullet

[12:07:42.0000] <Hixie>
annevk: ah, if you were intentionally not having me update the spec then nevermind :-)

[12:07:49.0000] <Hixie>
annevk: it does sound vaguely familiar now that you mention it

[12:07:57.0000] <Hixie>
TabAtkins: :-)

[12:13:11.0000] <gsnedders>
So, chardet on PyPi doesn't support Python 3 doesn't Mark having had a chapter in Dive Into Python 3 on getting it working on Python 3. Yay.

[12:27:58.0000] <Ms2ger>
gsnedders, ... eh?

[12:29:15.0000] <gsnedders>
Ms2ger: What's eh about that. Mark Pilgrim, author of chardet, wrote a chapter on porting chardet to Python 3. He never made a release of chardet supporting Python 3.

[12:29:44.0000] <Ms2ger>
s/doesn't/despite/, or?

[12:30:47.0000] <gsnedders>
Yes.

[12:31:12.0000] <Ms2ger>
That does make more sense

[12:33:34.0000] <annevk>
seems he is online, you could ask him about it

[12:34:33.0000] <gsnedders>
On the other hand, he has basically abandoned all of that stuff.

[12:35:47.0000] <annevk>
Hixie: cannot find the HTMLImageElement.src compat bug

[12:36:13.0000] <annevk>
Hixie: did not know about IE doing "null" either

[12:43:34.0000] <annevk>
Hixie: found it https://bugzilla.mozilla.org/show_bug.cgi?id=859640

[13:21:08.0000] <zcorpan>
TabAtkins: the pseudo algorithm in multicol, is it supposed to be normative?

[13:47:57.0000] <TabAtkins>
zcorpan: Yes, but it's under heavy discussion.  See recent mailing list stuff.

[13:51:03.0000] <zcorpan>
i think i'll wait until the edits have been made and then look at it again

[13:52:23.0000] <zcorpan>
i didn't read it carefully but my knee-jerk reaction was that things could be interpreted in several ways, or that the pseudo-code was ambiguous

[13:52:48.0000] <zcorpan>
i'm not a fan of normative pseudo-code

[13:58:12.0000] <TabAtkins>
The pseudo-code *is* ambiguous right now, which is the biggest part of the discussion.

[13:58:18.0000] <TabAtkins>
SimonSapin is trying to get it fixed.

[13:59:45.0000] <zcorpan>
excellent

[13:59:56.0000] <SimonSapin>
zcorpan: I think that the edits in the attachment here capture what we discussed: http://lists.w3.org/Archives/Public/www-style/2013Apr/0225.html

[14:04:13.0000] <zcorpan>
SimonSapin: ah, didn't notice the attachment. that looks better

[14:04:29.0000] <zcorpan>
SimonSapin: the first two lines could be removed as well?

[14:04:50.0000] <SimonSapin>
zcorpan: yeah I guess

[14:05:01.0000] <SimonSapin>
but getting this much has been hard enough :/

[14:46:43.0000] <SimonSapin>
annevk: (if you read logs) not sure what to say to that: https://mail.mozilla.org/pipermail/rust-dev/2013-April/003579.html

[15:21:57.0000] <Hixie>
heycam: i'm assigning https://www.w3.org/Bugs/Public/show_bug.cgi?id=21591 to you, let me know if you disagree (reassign it to me and i'll do it the other way)

[15:22:30.0000] <heycam>
Hixie, sounds good, I'll allow string constants

[15:23:04.0000] <heycam>
/me 's public-script-coord folder is coming up on 1000 unread messages, so he promises to look at it next week

[15:23:10.0000] <heycam>
(the folder that is)

[15:23:34.0000] <heycam>
s/promises/futures/

[15:24:25.0000] <arv>
heycam: Also, https://bugs.webkit.org/show_bug.cgi?id=114457

[15:24:55.0000] <heycam>
/me looks

[15:26:56.0000] <Hixie>
heycam: cool, thanks. I'm also giving you https://www.w3.org/Bugs/Public/show_bug.cgi?id=21589; again, feel free to reassign it to me (request to allow trailing commas on enum definitions)

[15:27:05.0000] <heycam>
ok

[15:27:28.0000] <Hixie>
(neither is a high priority)

[15:29:38.0000] <Hixie>
wtf is https://www.w3.org/Bugs/Public/show_bug.cgi?id=21576 about

[15:29:44.0000] <Hixie>
i'm pretty sure the spec doesn't have that ID

[15:30:38.0000] <Hixie>
ah, an extension is to blame


2013-04-12
[02:56:37.0000] <annevk>
jgraham: is the effect of the filter I created that I get a lot of email spam?

[02:57:01.0000] <annevk>
jgraham: because then I'm going to remove that again and only review if someone requests that I look at something

[03:08:39.0000] <zcorpan>
annevk: can you review https://critic.hoppipolla.co.uk/r/23 ? :-)

[03:09:36.0000] <annevk>
darobin: so I looked into "JSON-LD" and that draft is sooo bad

[03:10:00.0000] <annevk>
darobin: so I wonder whether I'll need to care about it

[03:10:16.0000] <darobin>
annevk: as I said the other day, I wasn't looking at the actual design but rather at the overall issue they had with WebIDL :)

[03:11:27.0000] <darobin>
annevk: I just realised that you weren't there when I brought it up (on another channel), but do you reckon that the TAG has a credible reason to support open licenses?

[03:11:39.0000] <darobin>
I'm just wondering if it would be useful weight to throw in

[03:19:47.0000] <annevk>
darobin: it enables distributed extensibility

[03:20:25.0000] <annevk>
And I'm only half-joking here as I think that's pretty much what this is about.

[03:23:23.0000] <darobin>
annevk: if you feel you can make the case then you might want to caucus with your new friends and scare up a quick finding

[03:37:27.0000] <jgraham>
annevk: If you only want to review in certain folders then you can change the filters. If you just want less mail in your inbox you can use OperaCritic-* headers to filter

[03:37:48.0000] <jgraham>
Or you can disable email in critic config, I think

[03:39:24.0000] <annevk>
I guess I only want to look at critic if someone asks me

[03:39:48.0000] <jgraham>
OK, well you should leave the filter but disable the email I think

[03:40:55.0000] <jgraham>
Although I suppose that won't work so well for reviews where you *do* want the email

[03:42:14.0000] <annevk>
I don't need the email, if there's hurry someone can ping me I suppose

[03:42:36.0000] <annevk>
You don't want to rely on me there anyway :-)

[03:42:59.0000] <jgraham>
Well I do want to if you havew submitted comments on my tests :)

[03:45:23.0000] <Ms2ger>
And I want more people to get mail about new reviews :)

[03:50:48.0000] <annevk>
I'm getting no emails for now

[04:09:22.0000] <annevk>
zcorpan: so I'm not intimately familiar with message ports

[04:09:50.0000] <zcorpan>
annevk: no problem, just read the spec :-P

[04:11:09.0000] <annevk>
zcorpan: are timers and message channels on the same event loop?

[04:11:33.0000] <annevk>
zcorpan: I guess I should say "task source"

[04:13:19.0000] <zcorpan>
annevk: no

[04:14:21.0000] <annevk>
zcorpan: 003.html seems to depend on when going before the other

[04:15:19.0000] <annevk>
I guess I should add comments

[04:17:15.0000] <jgraham>
darobin, odinho: Email?

[04:17:50.0000] <darobin>
jgraham: ?

[04:18:30.0000] <darobin>
jgraham: are you asking about what odinho meant by email in a somewhat compact manner?

[04:18:36.0000] <jgraham>
Yes

[04:18:52.0000] <jgraham>
Maybe should have been "Email?!"

[04:19:04.0000] <darobin>
jgraham: GitHub can send email on push, as you know, and we're using that at this point

[04:19:19.0000] <jgraham>
You have a script that gets email?

[04:19:26.0000] <Ms2ger>
Sounds like tinderbox

[04:19:28.0000] <darobin>
yeah

[04:19:32.0000] <Ms2ger>
It ended in tears

[04:19:38.0000] <darobin>
setting that up on a w3c box is simple

[04:19:48.0000] <jgraham>
And that was easier than a script that responds to a HTTP request?

[04:19:54.0000] <darobin>
it involved changing one line in an existing script and one line in an existing .forward

[04:20:06.0000] <jgraham>
OK

[04:20:28.0000] <darobin>
whereas there was no existing script handling HTTP for this :)

[04:21:06.0000] <darobin>
if we start doing more things over HTTP then we can easily move to that, but this was really low cost

[04:21:24.0000] <jgraham>
Well I guess if you already have the infrastructure for it

[04:21:50.0000] <darobin>
the kind people in the W3C systeam recently moved the testing box under Puppet control

[04:21:57.0000] <darobin>
with that came all sorts of nice infrastructure

[04:22:40.0000] <odinho>
darobin: Merely curious on behalf of the list :-)

[04:23:13.0000] <darobin>
odinho: you'll have to tell me how you assess list curiosity one of these days ;)

[04:23:25.0000] <odinho>
^_^

[04:23:27.0000] <darobin>
you folks going to the HTML & co f2f btw?

[04:23:46.0000] <odinho>
I'm not employed to do any spec/W3C/WHATWG things.

[04:24:06.0000] <Ms2ger>
Yet

[04:24:10.0000] <odinho>
(any more)

[04:24:12.0000] <jgraham>
Heh

[04:24:21.0000] <jgraham>
/me isn't going either

[04:24:57.0000] <Ms2ger>
darobin, watch out, glazou will ambush you

[04:25:22.0000] <darobin>
ah, shame, beer could've been involved

[04:25:42.0000] <darobin>
Ms2ger: I'm not afraid of the glazou, I actually bump into him regularly around here :)

[04:25:49.0000] <darobin>
well, beer will be involved

[04:25:58.0000] <darobin>
but would've been nice in present company

[04:26:09.0000] <jgraham>
As batter for fish and chips?

[04:26:21.0000] <jgraham>
s/as/in/

[04:26:36.0000] <darobin>
you want me to use you guys as batter for F&C?

[04:26:44.0000] <darobin>
that doesn't sound wholly appropriate

[04:36:33.0000] <annevk>
I was already going to SF beginning of May, didn't want to go twice

[04:36:49.0000] <annevk>
Also, I'm not in any of those groups

[04:38:00.0000] <jgraham>
You didn't rejoin webapps?

[04:48:43.0000] <Ms2ger>
You can take my place

[04:53:50.0000] <zcorpan>
is there any presedent for a spec defining that clicks should go through? http://www.w3.org/mid/20839.59437.162735.705552⊙ggH

[04:59:05.0000] <Ms2ger>
		text: {type: "string", treatNullAsEmptyString: true},

[04:59:05.0000] <Ms2ger>
		link: {type: "string", treatnullAsEmptyString: true},

[04:59:11.0000] <Ms2ger>
/me wonders if they both work

[05:17:50.0000] <annevk>
jgraham: W3C didn't resolve the problem yet

[05:18:46.0000] <annevk>
zcorpan: there's a precedent for hit testing being wholly undefined

[05:19:30.0000] <annevk>
zcorpan: and CSS 'pointer-events' having some influence on that

[05:19:54.0000] <zcorpan>
annevk: ok

[05:20:25.0000] <jgraham>
You mean pointere events changes it from being undefined to being differently undefined?

[05:20:39.0000] <annevk>
jgraham: kinda like that, yes

[05:45:34.0000] <zcorpan>
well then i guess multicol should just handwave it

[05:46:49.0000] <smaug____>
annevk seems to have the default answer "x should use Futures" these days :)

[05:47:13.0000] <annevk>
smaug____: I found my hammer

[05:47:27.0000] <smaug____>
( I don't know whether that is right or wrong answer )

[05:53:04.0000] <gsnedders>
I feel like all I'm doing this week is filing bugs on Python implementations.

[06:11:44.0000] <zcorpan>
gsnedders: too few Futures?

[06:33:51.0000] <zcorpan>
ok so what's the correct branch naming? submission/Opera/my-topic ?

[06:35:33.0000] <Ms2ger>
I believe so, yes

[06:36:52.0000] <darobin>
zcorpan: we're not too strict on that...

[06:37:20.0000] <darobin>
note that if you name your branch submission/Opera/my-topic I think it'll clash when someone tries to name their submission/Opera/other-topic

[06:37:33.0000] <Ms2ger>
Don't think so

[06:37:51.0000] <darobin>
maybe not, I don't see why, but ISTR that someone had a problem

[06:38:15.0000] <darobin>
in any case, just make sure there's some identification of the submitter and the feature after "submission/"

[06:38:48.0000] <Ms2ger>
Given that there's three submission/Opera/*'s already :)

[06:38:55.0000] <jgraham>
submission/Opera would clash with submission/Opera/foo

[06:39:19.0000] <jgraham>
Because that makes "Opera" a file under submisssion, so it can't also be a folder

[06:39:39.0000] <darobin>
ah, that's the one

[06:40:07.0000] <zcorpan>
ok

[06:41:54.0000] <jgraham>
(if helps if you know that branches are refs are files)

[06:42:56.0000] <Ms2ger>
I thought they were homeomorphic endofunctors mapping submanifolds of a Hilbert space?

[06:46:04.0000] <darobin>
only in same-sex git

[06:46:42.0000] <Ms2ger>
I hear France doesn't like that now

[06:47:01.0000] <darobin>
actually we do, the Senate just voted on it

[06:51:40.0000] <zcorpan>
jgraham: should i ping you when i make a new PR or should i expect a critic review to appear?

[06:56:58.0000] <zcorpan>
jgraham: https://github.com/w3c/web-platform-tests/pull/75

[07:05:34.0000] <jgraham>
zcorpan: A critic review does appear, but critic doesn't know your email address so you don't get notified

[07:06:33.0000] <zcorpan>
jgraham: how do i make it know my email?

[07:07:07.0000] <jgraham>
zcorpan: Add it to the "email" box on https://critic.hoppipolla.co.uk/home

[07:10:27.0000] <zcorpan>
ah

[09:10:41.0000] <karlcow>
/me is not on public-script-coord but the http://lists.w3.org/Archives/Public/public-script-coord/2013AprJun/0061.html

[09:11:01.0000] <karlcow>
>We need a few people who can drink from a firehose on "all the lists",

[09:11:01.0000] <karlcow>
>who then bubble issues up to public-script-coord.

[09:11:50.0000] <karlcow>
Does tc-39 post the minutes of their meetings to public-script-coord?

[09:12:09.0000] <karlcow>
maybe that could be a 1st step if not done.

[09:14:03.0000] <annevk>
I think what Boris suggested about routing all new drafts through public-script-coord is a good idea

[09:14:11.0000] <karlcow>
but even that… it's a lot lot lot of high level and super technical inputs. It's becoming very hard to understand and follow.

[09:14:25.0000] <annevk>
TC39 meeting minutes I've seen so far require in-depth knowledge

[09:14:37.0000] <karlcow>
yeah

[09:15:05.0000] <annevk>
I can follow them, but when I look at what drafts people are cooking up I kinda doubt the same goes for them

[09:16:17.0000] <karlcow>
chaos… each foot on a highly moving platforms. Loss of equilibrium.

[09:16:48.0000] <karlcow>
:(

[09:18:25.0000] <jsbell>
I strenuously object to more coordination between "the JS people" and "the DOM people". The entertainment that arises when one group realises what the other has done is far more popcorn-worthy than anything Hollywood spits out.

[09:18:35.0000] <karlcow>
http://wiki.ecmascript.org/doku.php?id=meetings:minutes_feb_12_2009

[09:18:37.0000] <annevk>
I don't think it's all too bad really. We lack a bit of leadership and coherent vision.

[09:18:42.0000] <annevk>
jsbell: hehehe

[09:18:52.0000] <karlcow>
hmm not a lot of informations in these minutes

[09:23:12.0000] <karlcow>
/me is trying to see if a script would work for Hollywood with  "Jaws Savage against Death Of Moan"

[09:29:05.0000] <annevk>
http://lists.w3.org/Archives/Public/public-web-perf/2013Apr/att-0007/WebRequestStatusCodes4.html

[09:29:35.0000] <annevk>
Hmm, should I follow public-web-perf too? Not entirely clear I would be able to get any work done if I just start subscribing to the firehose, as Brendan puts it.

[09:48:50.0000] <karlcow>
annevk: the volume of mails starts to be insane. It's a full time job to just read them on all mailing-lists. One person doesn't scale (to my own misery for the open web summary)

[09:50:05.0000] <annevk>
Right, lets not forget it's a good thing too. This thing is more successful than ever.

[09:50:13.0000] <annevk>
We just need to deal with the growing pains somehow.

[10:29:02.0000] <annevk>
TabAtkins: in "Add convenience functions for immediate/canceled promises" you agree with Future.resolve but yesterday you asked for .accept

[10:29:08.0000] <annevk>
TabAtkins: that's confusing

[10:32:19.0000] <TabAtkins>
annevk: I forgot the exact names.  Also, I haven't yet internalized the difference between accept and resolve.

[10:43:07.0000] <annevk>
TabAtkins: thought I'd mention it since Domenic did point out what resolve() would do

[10:43:18.0000] <annevk>
TabAtkins: so I was confused whether you'd be okay with that or not

[10:43:57.0000] <TabAtkins>
He pointed it out?  He must have done so in a way that doesn't actually explain it, since I still don't know what it does. :/

[10:50:31.0000] <TabAtkins>
I suspect I'm well-placed to do the firehose thing (I subscribe to and read all of www-style, webapps, www-dom, script-coord, whatwg, and es-discuss), but because I read all of it, I'm bad at realizing when things need to be bubbled up for other people. ^_^

[10:51:43.0000] <annevk>
There's a bunch more, too. webappsec, media-capture, html-media, webcrypto, ...

[10:51:52.0000] <TabAtkins>
Yeah, I don't pay attention to those.

[11:06:36.0000] <TabAtkins>
annevk: If I'm reading right, the difference between accept() and resolve() is that accept() just immediately resolves the future to the passed value, while resolve() checks if the value is also a future(/thenable), and if so, waits until *that* future resolves, and resolves the initial future to that value.

[11:06:45.0000] <TabAtkins>
That's a lot of pronouns, but you should get what I mean.

[11:07:09.0000] <annevk>
yes

[11:07:17.0000] <annevk>
yes

[11:07:35.0000] <TabAtkins>
Okay.  In that case, no reason not to provide all three of the resolver methods straight on Future.

[11:08:33.0000] <annevk>
sure

[11:08:39.0000] <TabAtkins>
I just sent email.

[11:09:09.0000] <annevk>
I'll look at most of that stuff later

[11:09:25.0000] <annevk>
there were some interesting ideas there too with respect to streams and signals

[11:09:42.0000] <TabAtkins>
Yes, I'd be interested in exploring that with you, when you have time.

[11:10:25.0000] <annevk>
TabAtkins: I'm in SF May 6-10, MV the Monday after

[11:10:49.0000] <annevk>
TabAtkins: and in Tokyo June 6-23 or so, I hear you go there now and then

[11:11:38.0000] <TabAtkins>
I appear to be free in May, and I'll be in Tokyo for at least a week in the beginning of June (for SVG and CSS and maybe TTWF).

[11:11:49.0000] <annevk>
But hopefully we'll get some stuff sorted out async/via IRC by that time

[11:12:33.0000] <annevk>
I gotta go for a bit, have been staring at this thing too long

[11:20:52.0000] <jgraham>
/me notes that all the suggestions in http://www.w3.org/mid/D236F78E-8320-4FC2-986B-6EE57FE6FED3⊙wc are of the from "W3C should (do thing) to give TC39 a voice"

[11:28:27.0000] <jgraham>
The obvious implication being that the right solution is "TC39 should disband and Javascript should be developed through the W3C"

[11:29:40.0000] <Ms2ger>
I suggest you reply with that and I sit back and enjoy the results :)

[11:30:28.0000] <divya>
ahahhahaha

[11:36:42.0000] <Ms2ger>
TabAtkins, no, only if you date someone with mixed red-brown hair

[11:37:18.0000] <Hixie>
jgraham: "more meetings" doesn't seem to me like the best way to solve TC39's problems :-)

[11:37:34.0000] <jgraham>
I am really very tempted, but I can't quite bring myself to do it. Not because I'm not serious, but because I can't face all the explainations as to why it can't happen.

[11:37:44.0000] <jgraham>
(that was aimed as Ms2ger)

[11:38:37.0000] <jgraham>
I'm not sure "disband TC39 and start a W3C group instead" implies "more meetings"

[11:40:12.0000] <Hixie>
jgraham: that e-mail was all about more meetings at TPACs

[11:40:16.0000] <Hixie>
as far as i can tell :-)

[11:48:41.0000] <Hixie>
TabAtkins: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=17812

[11:52:43.0000] <jgraham>
Hixie: If they weren't a seperate body they wouldn't have *more* meetings at TPACs; it's just that their normal meetings would happen to be at TPACs and DOM people could attend (and they could attend e.g. webapps meetings if they wanted)

[11:53:41.0000] <Ms2ger>
/me imagines that

[11:53:59.0000] <Ms2ger>
Every time someone mentions WebIDL

[11:54:22.0000] <Ms2ger>
"Hi, I'm from TC39, I don't know anything about how WebIDL works, and I think it sucks"

[12:07:20.0000] <Hixie>
jgraham: fair enough

[12:07:30.0000] <Hixie>
jgraham: i didn't get teh feel from that e-mail that they wanted to disband TC39

[12:07:40.0000] <Ms2ger>
Hixie, they don't

[12:07:56.0000] <Ms2ger>
Hixie, but jgraham pointed out that that would be a solution to the stated problems

[12:14:51.0000] <TabAtkins>
jgraham: Suggest it.  I've been told the historical reasons for why ES was developed in ECMA originally, but I don't remember what they are anymore.  Certainly, whatever they were no longer applies.

[13:41:22.0000] <jwalden>
I have a very very very vague recollection of the hurdles ECMA put in place being much lower, and therefore it being desirable to get something that corresponded much more closely to the implementation, than something "cleaner" but not compatible with the web

[13:41:43.0000] <jwalden>
that's what I remember hearing, at least

[13:44:22.0000] <annevk>
the dynamics have certainly changed since '96 though

[13:45:34.0000] <jwalden>
yup

[13:45:44.0000] <jwalden>
also the name *cough* Ecma *cough* :-)

[13:45:57.0000] <MikeSmith>
i think part of the reason had to do with Dan Connolly not arguing for it to come to W3C but instead letting it go to Ecma

[13:46:11.0000] <annevk>
And Bert Bos and something about a dead body?

[13:46:13.0000] <jwalden>
although, the context I vaguely remember hearing this in was that Ecma's still like that, wrt the MS Office XML formats

[13:46:16.0000] <annevk>
That might have been later

[13:46:35.0000] <MikeSmith>
and that largely because W3C at the time was averse to standardizing programming languages at W3C

[13:46:42.0000] <MikeSmith>
this was before XSLT

[13:47:38.0000] <jgraham>
The policy was "no programming languages unless they are XML"?

[13:47:49.0000] <MikeSmith>
Netscape apparently submitted it initially to the W3C and IETF as well as Ecma

[13:47:58.0000] <MikeSmith>
jgraham: not sure there was any policy

[13:48:02.0000] <MikeSmith>
and it was before XML too

[13:48:42.0000] <jgraham>
Anyway I presume that ECMA would put up a fight to keep JS. After all they don't do anything else that anyone's heard of

[13:49:00.0000] <MikeSmith>
but note also that Microsoft had submitted JScript and VBScript to W3S too

[13:50:08.0000] <MikeSmith>
jgraham: they could continue to publish the EcmaScript spec regardless, even if the upstream spec came from a W3C group

[13:51:00.0000] <jgraham>
That doesn't sound entirely unreasonable

[13:51:22.0000] <jgraham>
But of course I don't know the constraints

[13:51:54.0000] <MikeSmith>
or maybe Javascript and the Microsoft specs had not but formally submitted to the W3C at the time but I think they were kind of being discussed for publication as standards in various places, including W3C

[13:52:03.0000] <MikeSmith>
jgraham: yeah me neither

[13:56:16.0000] <MikeSmith>
hmm from what I can glean, apparently at that time in 96 there was some policy document published at W3C that talked about "Independence of essential services

[13:56:19.0000] <MikeSmith>
> from programming language

[13:56:24.0000] <MikeSmith>
"

[13:57:37.0000] <MikeSmith>
"While some services should remain specific to individual language runtime systems, the interface between the language runtime and the HTML document must be compatible with a variety of programming languages. Givent the history of programming languages, it's clear that binding such essential services to any particular language would compromise the evolution of the web."

[13:58:04.0000] <TabAtkins>
Given that binding to a particular language *at that time* would probably have meant Java, they were probably right.

[14:00:44.0000] <jgraham>
Well except it is bound to a particular language so they were wrong

[14:01:13.0000] <TabAtkins>
I meant that they were right about binding to Java compromising the evolution of the web.

[14:01:26.0000] <TabAtkins>
Later, the web de facto bound itself to a single language which was better, so they were wrong.

[14:03:47.0000] <MikeSmith>
yeah

[14:04:47.0000] <MikeSmith>
anyway from what I can tell it seems that Netscape originally had preferred to take it to either W3C or IETF but the reason they didn't is that both the W3C and IETF basically told them No, we're not interested

[14:05:43.0000] <TabAtkins>
Right.  Nowadays, it does seem that the different orgs just make it harder to evolve the web semi-coherently.

[14:06:26.0000] <MikeSmith>
yup

[14:06:32.0000] <MikeSmith>
see also https://brendaneich.com/2011/06/new-javascript-engine-module-owner/

[14:06:50.0000] <MikeSmith>
"At some point in late summer or early fall 1996, it became clear to me that JS was going to be standardized. Bill Gates was bitching about us changing JS all the time (some truth to it; but hello! Pot meet Kettle…). We had a standards guru, Carl Cargill, who knew Jan van den Beld, then the Secretary-General of ECMA (now Ecma). Carl steered our standardization of JS to ECMA.

[14:07:16.0000] <TabAtkins>
Ah, accidents of history...

[14:08:09.0000] <MikeSmith>
interesting statement at http://quod.lib.umich.edu/j/jep/3336451.0014.103/--why-standardization-efforts-fail?rgn=main;view=fulltext too

[14:08:31.0000] <MikeSmith>
from Carl

[14:08:33.0000] <MikeSmith>
"When the initial standards activity was being proposed, Java was still relatively new to market, and Microsoft had just forced Netscape to standardize JavaScript in Ecma. "

[14:08:48.0000] <MikeSmith>
"forced"

[14:15:37.0000] <odinho>
Well, if vendors go together, it would be possible to fix the overarching problems, and evolve it somewhat more coherently.

[14:15:47.0000] <odinho>
Or at least in a hopefuly theory.

[14:17:20.0000] <MikeSmith>
reading https://groups.google.com/a/chromium.org/forum/#!topic/storage-dev/o6ZeVTXtuWQ

[15:01:36.0000] <Hixie>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=21180 is the best bug ever

[15:01:43.0000] <Hixie>
the sum total of the bug description is "please correct"

[15:03:37.0000] <rillian>
Hixie: be fair. there's a section reference. they're not expecting all of HTML to be corrected.

[15:04:13.0000] <Hixie>
fair enough.

[15:04:23.0000] <Hixie>
no idea what's wrong though!

[15:04:44.0000] <rillian>
if only it had said #main-element

[15:05:06.0000] <annevk>
 /whois rillian

[15:05:38.0000] <annevk>
/me was wondering who made him laugh

[15:31:21.0000] <Hixie>
css people who care about bidi, ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=21188

[15:35:16.0000] <Hixie>
well this is an extreme case of this copy-and-paste phenomenon: https://www.w3.org/Bugs/Public/show_bug.cgi?id=21196&list_id=7566

[15:57:43.0000] <Hixie>
heycam|away: ping for advice on https://www.w3.org/Bugs/Public/show_bug.cgi?id=19611

[16:20:45.0000] <Hixie>
mounir: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=11937

[16:37:43.0000] <jsbell>
heycam|away: in WebIDL, is the TypeSuffix nonterminal intentionally recursive, i.e. type[][][]?[]????[][]  ? Seems like it should only be allowing type, type?, type[] and type[]? but perhaps I'm mis-reading.

[16:40:56.0000] <jsbell>
I mean: a nullable array of nullable array of array of array of nullable array (etc) of type is itself a conceivable type, but is that expressiveness *in WebIDL* intentional or a grammar glitch in the spec?


2013-04-13
[17:33:37.0000] <zewt>
apis without specs can be comedic

[17:35:36.0000] <zewt>
x = otherwindow.console.log; x("log"); worked in firefox and ie9 but not webkit, and now we have webkit people wanting to change to making it work while ie10 apparently (untested) doesn't allow it anymore

[17:35:58.0000] <zewt>
bleh, guess i should set up a vm for ie10

[17:40:52.0000] <zewt>
why does google let people run ads for "ie10" that have titles "FREE INTERNET EXPLORER 10" that go to random other things, is there no screening at all

[18:04:11.0000] <heycam>
Hixie, so my opinion on the DOMStringMap thing is that it would be nicer if it were [OverrideBuiltins], so you don't get the other properties from Object.prototype shining through

[03:28:51.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/www-archive/2013Apr/ appears to suggest a ttwf is in progress

[03:37:40.0000] <MikeSmith>
Ms2ger: yeah in Seattle

[04:06:25.0000] <smaug____>
" WebIDL systematically leads to APIs hostile to the working JavaScript programmer." is not very helpful

[04:07:17.0000] <annevk>
where is that from?

[04:07:51.0000] <annevk>
oh you're reading that thread too

[04:08:05.0000] <annevk>
I try to read past the blame game

[04:08:14.0000] <annevk>
it's not very interesting

[04:11:11.0000] <smaug____>
I'm trying to understand the complaints

[04:11:21.0000] <smaug____>
but since the complaints are just "this is not good"

[04:11:33.0000] <smaug____>
it is a bit hard to argue anything

[04:11:43.0000] <Ms2ger>
/me has long given up on those trolls

[04:14:36.0000] <annevk>
smaug____: they have been concrete though and given feedback

[04:14:37.0000] <annevk>
smaug____: https://www.w3.org/2006/02/lc-comments-tracker/43696/WD-proximity-20121206/2740

[04:14:46.0000] <annevk>
smaug____: part of the problem is us

[04:15:02.0000] <annevk>
smaug____: we haven't done early outreach and just shipped a bunch of broken APIs

[04:15:36.0000] <annevk>
smaug____: I can totally understand that it makes it feel kinda futile to then make concrete proposals for an alternative

[04:18:59.0000] <smaug____>
well, as an example, it isn't clear what the event handling API should look like

[04:19:08.0000] <smaug____>
it doesn't have to be what jQuery does

[04:19:54.0000] <annevk>
the high-level comment there is that what we have now for these sensor APIs is very bad

[04:20:05.0000] <annevk>
registering a handler activates the sensor

[04:20:15.0000] <annevk>
and removing the handler deactivates it

[04:20:38.0000] <annevk>
event listeners should not have such side effects at all

[04:20:47.0000] <smaug____>
why not

[04:20:58.0000] <smaug____>
if it is not visible to the API user

[04:21:14.0000] <smaug____>
that *if* is rather important here :)

[04:21:28.0000] <smaug____>
/me goes to check what sensors API does

[04:22:01.0000] <Ms2ger>
Yay, DAP

[04:22:05.0000] <annevk>
it's totally visible

[04:22:09.0000] <annevk>
Ms2ger: more like yay dougt

[04:22:16.0000] <Ms2ger>
Ugh, dougt

[04:22:54.0000] <smaug____>
editor is Dzung

[04:23:14.0000] <annevk>
smaug____: most of those APIs were copied straight from B2G

[04:23:25.0000] <smaug____>
ah

[04:23:33.0000] <Ms2ger>
You can hardly blame the B2G APIs on WebIDL

[04:23:50.0000] <Ms2ger>
They all use XPIDL

[04:23:54.0000] <annevk>
http://dev.w3.org/geo/api/spec-source-orientation.html is the first one that happened I think

[04:23:55.0000] <smaug____>
uh

[04:23:58.0000] <smaug____>
https://dvcs.w3.org/hg/dap/raw-file/tip/sensor-api/Overview.html is totally non-sense

[04:24:36.0000] <smaug____>
The event handler passed to addEventListener must provide the signature: interface SensorCallback {

[04:24:38.0000] <smaug____>
    void ondata (double value, double min, double max);

[04:24:39.0000] <smaug____>
};

[04:24:50.0000] <annevk>
smaug____: haha

[04:24:57.0000] <Ms2ger>
Note "The Device APIs Working Group decided to put this general Sensor API specification on hold and work on each sensor separately (see e.g. the Device Proximity)."

[04:24:58.0000] <annevk>
smaug____: fwiw, I might sensor APIs in a more general sense

[04:25:08.0000] <annevk>
smaug____: things like proximity, orientation, etc.

[04:25:17.0000] <annevk>
s/might/meant/

[04:25:38.0000] <smaug____>
Ms2ger: oh, I should read that boilerplate

[04:25:45.0000] <smaug____>
but good

[04:26:00.0000] <Ms2ger>
It might perhaps be helpful if these APIs weren't all developed in small groups without Web API design experience

[04:29:42.0000] <jgraham>
There is a second problem which is that engine constraints mean that we sometimes can't design the APIs that JS programmers would design

[04:29:54.0000] <smaug____>
we should have kidnapped Andrei in London (saw him when we were going to the Thai-restaurant) and make him to fix geo spec

[04:30:11.0000] <jgraham>
e.g. the weblinkit adversion to having C++ own js objects

[04:39:02.0000] <Ms2ger>
Is weblinkit what we're calling it now?

[04:53:06.0000] <annevk>
smaug____: oh he was there? missed that

[07:03:36.0000] <gsnedders>
jgraham: I don't care what you believe. :)

[07:09:37.0000] <jgraham>
I thinkn forcing imports to be alphabetial is just silly :)

[07:10:23.0000] <gsnedders>
jgraham: I think using an abstract concept of generality is silly.

[07:12:35.0000] <jgraham>
I think being anal about import orders is silly

[07:13:01.0000] <jgraham>
Just move the from foo import bar to before the next empty line and stop discussin git :)

[07:13:12.0000] <jgraham>
*discussing it

[07:13:13.0000] <gsnedders>
I already did.

[07:13:33.0000] <jgraham>
You seem to still be discussing it :)

[07:13:49.0000] <gsnedders>
And I broke the build. :)

[07:14:06.0000] <gsnedders>
I should really run tests locally first. :)

[07:14:47.0000] <jgraham>
Oh, missing a comma

[07:15:38.0000] <gsnedders>
Yeah, pushed fix.

[07:16:55.0000] <jgraham>
So are you planning to rebase this? I have no idea if/how github/critic would cope with that

[07:17:06.0000] <gsnedders>
Will rebase then close pull request manually.

[07:17:12.0000] <jgraham>
OK

[07:17:17.0000] <gsnedders>
At least I think I have to do it manually.

[07:17:42.0000] <gsnedders>
But waiting for Travis CI first. I haven't tested the fixes on Python 3.

[07:17:43.0000] <jgraham>
Yeah, i have the feeling that history rewrites on PR branches wouldn't work so well

[07:17:52.0000] <gsnedders>
Could try. :)

[07:18:00.0000] <gsnedders>
But non-fast-forward stuff is always evil to push.

[07:19:14.0000] <jgraham>
Well it's a rather common critic workflow, as well you know (and typically doesn't cause any problems)

[07:19:16.0000] <gsnedders>
(`pip install lxml` is a real bottleneck on Travis CI, sadly.)

[07:19:36.0000] <gsnedders>
jgraham: But that's the critic repo, which people don't often fetch

[07:22:02.0000] <gsnedders>
Getting us actually passing tests with all the optional extras is making me feel that html5lib might, you know, work.

[07:24:26.0000] <Ms2ger>
It does?

[07:27:50.0000] <jgraham>
gsnedders: I know *why* it works

[07:27:52.0000] <jgraham>
:)

[07:29:52.0000] <jgraham>
So where are all the TestTWF people?

[07:30:15.0000] <jgraham>
Oh, I guess it is only 7:30 am

[07:30:21.0000] <jgraham>
So possibly asleep

[07:33:49.0000] <jgraham>
Someone should tell them to go on IRC in #testing or something. Although I don't know how much I'll be around to help

[07:34:44.0000] <jgraham>
Hopefully a bit at least

[07:35:25.0000] <Ms2ger>
I don't know if I should be around, in that case ;)

[07:36:01.0000] <gsnedders>
jgraham: Also now pushed huge commit removing all trailing whitespace :)

[07:37:57.0000] <jgraham>
Yay! No more red!

[07:38:41.0000] <Ms2ger>
So is github the canonical repo now?

[07:39:43.0000] <jgraham>
Yes

[07:40:59.0000] <gsnedders>
Ms2ger: Well, four repos. :)

[07:41:15.0000] <Ms2ger>
Yay.

[07:42:21.0000] <gsnedders>
If you find anything bogus in the history, file a bug. And then we'll have to decide whether it's worthwhile rewriting history to remove.

[07:52:01.0000] <Ms2ger>
annevk, I get a "term not defined: dom manipulation task source" when generating dom

[07:52:30.0000] <annevk>
Ms2ger: hmm sorry about that

[07:52:48.0000] <annevk>
Ms2ger: I have not updated xref yet because the migration of CORS is not entirely complete

[07:52:57.0000] <Ms2ger>
Ah, I see

[07:52:59.0000] <Ms2ger>
No worries

[07:53:12.0000] <Ms2ger>
I was just looking if html5lib still worked

[07:53:19.0000] <annevk>
k

[08:11:14.0000] <Hixie>
03:21 <        heycam> Hixie, so my opinion on the DOMStringMap thing is that it would be nicer if it were [OverrideBuiltins], so you  don't get the other properties from Object.prototype shining through

[08:11:18.0000] <Hixie>
er

[08:11:23.0000] <Hixie>
mispaste. that was for the bug.

[08:11:31.0000] <Hixie>
what i meant to paste here was: http://www.reddit.com/r/Python/comments/1c8wzq/htmltagpy_a_new_module_to_wrap_content_in_html/c9eclnh?context=3

[08:16:18.0000] <Ms2ger>
Oh, so *that*'s what's been messing with your productivity ;)

[08:19:28.0000] <Hixie>
messing with my productivity? have you _seen_ the chart for the last week? :-P

[08:19:37.0000] <Hixie>
i've been kicking ass! :-P

[08:20:18.0000] <Ms2ger>
Last week, yes ;)

[08:20:32.0000] <Ms2ger>
/me has noticed that in his inbox too

[08:21:24.0000] <Hixie>
hehe

[08:21:42.0000] <Ms2ger>
I wish all weeks were that way :)

[08:24:42.0000] <annevk>
Hixie: fwiw http://angularjs.org/ is what Google promotes, prolly under the "HTML5" banner and allows custom elements, much like web components, which come to think of it, are probably also promoted as "HTML5"

[08:31:55.0000] <Hixie>
annevk: yeah, i know

[08:48:31.0000] <jgraham>
gsnedders: Speaking of people pushing non-ff updates to remotes, deleting remote branches it's tracking upsets critic a little

[08:48:43.0000] <jgraham>
By which I mean "I get email about it"

[08:48:57.0000] <jgraham>
Please at least close the review so that the tracking stops :)

[08:51:24.0000] <gsnedders>
jgraham: It already is closed.

[08:58:46.0000] <jgraham>
Huh, so why is it still tracking?

[09:00:44.0000] <jgraham>
Well when I close it it stops tracking... I guess I should either read the code or ask jl

[09:14:00.0000] <GPHemsley>
annevk: Do you know off-hand what encodings have ç encoded at 0x87?

[09:15:19.0000] <GPHemsley>
annevk: (Search for "07390000" in http://memory.loc.gov:8081/ll/llhb/030/llhb030.txt for a live web example)

[09:21:01.0000] <GPHemsley>
annevk: Oh, hint: IBM code page 850 has it. Not in the Encoding spec, but available in Firefox.

[09:21:38.0000] <Hixie>
wtf https://www.w3.org/Bugs/Public/buglist.cgi?query_format=advanced&list_id=7641&longdesc=213.37.128.77&longdesc_type=allwordssubstr

[09:21:51.0000] <Hixie>
this one IP has filed four of these bogus bugs with just selected text

[09:21:55.0000] <Ms2ger>
Does that URL say "longdesc"?

[09:23:40.0000] <Hixie>
longdesc is what bugzilla calls a comment internally

[09:39:43.0000] <Hixie>
how dod i compare to arbitrary unicode strings in js, with case folding?

[09:40:36.0000] <Ms2ger>
foo.toLowerCase() === bar.toLowerCase()?

[09:42:14.0000] <Hixie>
is thought that wasn't good in all languages or something

[10:41:42.0000] <gsnedders>
jgraham: I am very alarmed. html5lib.treewalkers.etree throws ImportError on loading, yet all tests pass.

[10:42:43.0000] <odinho>
Not really 100% coverage there? :P

[10:46:29.0000] <Philip`>
If it couldn't load any of the tests, then none of them failed, therefore they all passed - seems perfectly logical

[10:48:30.0000] <gsnedders>
tl;dr: keep your try blocks small to not catch exceptions you don't mean to

[10:50:17.0000] <gsnedders>
Is there any way to get text outside of the html element? It's always reparented, right?

[10:53:22.0000] <bholley>
Hixie: yt?

[10:54:20.0000] <Hixie>
bholley: yeah, sup

[10:54:29.0000] <bholley>
Hixie: was just curious about dialogArguments

[10:54:31.0000] <bholley>
The dialogArguments IDL attribute, on getting, must check whether its browsing context's active document's origin is the same as the dialog arguments' origin. If it is, then the browsing context's dialog arguments must be returned unchanged. Otherwise, if the dialog arguments are an object, then the empty string must be returned, and if the dialog arguments are not an object, then the stringification of the dialog arguments must be returned.

[10:54:35.0000] <bholley>
(from the spec)

[10:54:44.0000] <bholley>
Hixie: why do we have to stringify in the non-same-origin case?

[10:54:47.0000] <Hixie>
one sec, switching computers and have to reboot the one i'm switching to. brb.

[10:55:21.0000] <bholley>
Hixie: np

[10:57:03.0000] <Hixie>
k, back

[10:57:05.0000] <Hixie>
/me reads

[10:59:42.0000] <Hixie>
oh it's just because otherwise you can leak cross-origin access

[10:59:47.0000] <Hixie>
e.g. if it contains a DOM Node

[10:59:51.0000] <Hixie>
you've just leaked that entire origin

[11:00:09.0000] <bholley>
Hixie: but we're talking about the primitive case

[11:00:27.0000] <bholley>
Hixie: objects are the empty string, right?

[11:01:02.0000] <Hixie>
oh, hm

[11:01:12.0000] <bholley>
/me reads the dichotomy as object vs primitive, and assumes that nodes would fall into the object case, but might be missing a subtlety

[11:01:39.0000] <Hixie>
no, i don't think you are

[11:02:32.0000] <Hixie>
maybe it's what browsers do?

[11:02:43.0000] <Hixie>
or maybe i was just absent-minded when speccing that...

[11:02:46.0000] <Hixie>
/me looks at blame

[11:02:54.0000] <bholley>
not what Gecko does, haven't checked anything else

[11:04:03.0000] <bholley>
Hixie: I'm asking because I'm trying to simplify our whole setup for this stuff so that we can just do the origin check directly on the jsval when it comes time to define it on the global. But only objects (non-primitives) have an origin associated with them, so it's difficult to know whether to stringify or not in the primitive case

[11:05:37.0000] <Hixie>
looks like this text dates back to the first introduction of the text in the spec

[11:05:46.0000] <Hixie>
so it's probably just a mistake

[11:06:20.0000] <bholley>
Hixie: \o/

[11:07:33.0000] <bholley>
Hixie: want me to file?

[11:08:08.0000] <Hixie>
i'd like us to test other browsers first

[11:08:18.0000] <Hixie>
well, before we change the spec, anyway

[11:08:24.0000] <Hixie>
no harm having a bug on file to track it

[11:09:07.0000] <bholley>
Hixie: ok, I'll write a quick testcase

[11:09:59.0000] <bholley>
Hixie: also, can you clarify what you mean by "named properties other than child browsing context names" in https://www.w3.org/Bugs/Public/show_bug.cgi?id=21674 ?

[11:10:17.0000] <Hixie>
(hahah, the guy who said i should read up on html5 edited his comment to remove that bit of it)

[11:10:48.0000] <gsnedders>
(Where? :))

[11:11:31.0000] <Ms2ger>
http://www.reddit.com/r/Python/comments/1c8wzq/htmltagpy_a_new_module_to_wrap_content_in_html/c9eclnh?context=3

[11:12:34.0000] <Ms2ger>
bholley, global scope polluter

[11:12:37.0000] <Hixie>
bholley: like, window.foo for <a name=foo>

[11:12:56.0000] <bholley>
Hixie: oh god, I sure hope not

[11:13:10.0000] <bholley>
Hixie: certainly not in Gecko

[11:13:11.0000] <Ms2ger>
bholley, fwiw, I think we have a special case for nsIDOMWindows

[11:13:32.0000] <bholley>
Ms2ger: special-case in what sense?

[11:13:45.0000] <bholley>
Ms2ger: as in the way we handle it in AccessCheck.cpp?

[11:13:47.0000] <bholley>
IsFrameId?

[11:14:14.0000] <Ms2ger>
Oh, no

[11:14:31.0000] <bholley>
Hixie: but yeah, in Gecko this just goes straight to the browsing context tree, and I'd be very suspicious of doing anything more general

[11:14:33.0000] <Ms2ger>
I was thinking of something in nsWindowSH::GetProperty, but that's dead

[11:14:52.0000] <bholley>
Hixie: I'll test enumerability now

[11:15:45.0000] <bholley>
/me grumbles about SSH lag while writing testcases on his server, but then remembers that he's sitting on an airplane

[11:16:26.0000] <odinho>
bholley: mosh

[11:16:37.0000] <bholley>
odinho: mosh?

[11:16:47.0000] <Ms2ger>
mosh

[11:16:48.0000] <odinho>
my bestest friend. mobile-shell/mosh yes.

[11:17:28.0000] <bholley>
odinho: what is that?

[11:17:56.0000] <odinho>
bholley: No, who knows, try a  apt-get install mosh  or your equivalent, and check it out ;-)

[11:18:49.0000] <odinho>
bholley: It helps you with laggy connections.  Works better in typical mobile situations.  E.g. when changing connections, or having very high latency.  It has local echo e.g.

[11:18:59.0000] <bholley>
hm, there's no homebrew for it

[11:19:16.0000] <bholley>
odinho: or wait, is this server-side or client-side?

[11:19:16.0000] <odinho>
Yes there is, -- I have used an OS X machine once.

[11:19:23.0000] <odinho>
bholley: You need it on both.

[11:19:40.0000] <bholley>
odinho: brew install mosh gives no results

[11:19:44.0000] <odinho>
http://mosh.mit.edu/

[11:19:51.0000] <odinho>
bholley: brew install mobile-shell  maybe

[11:20:04.0000] <bholley>
odinho: bingo

[11:20:37.0000] <odinho>
^_^  The website has an OK first page that will list the main points.

[11:21:12.0000] <Hixie>
bholley: i agree that we shouldn't expose it, but interestingly this means the supported properties differ based on who is accessing the Window...

[11:21:33.0000] <bholley>
Hixie: I don't follow

[11:27:08.0000] <Hixie>
bholley: as in, ('foo' in w) is true if you're same-origin with w and false if you're not, if there's an <a name=foo> in w's document

[11:28:28.0000] <bholley>
Hixie: well, the same holds for expandos, right?

[11:28:43.0000] <Hixie>
yeah, i guess it's the same


2013-04-14
[17:12:09.0000] <odinho>
Is there a testtwf irc channel?

[17:14:03.0000] <odinho>
Little webapps presence :/

[18:11:01.0000] <Hixie>
can anyone think of a way i can get firefox to render a glyph from the zapfino ornaments collection?

[18:12:16.0000] <Hixie>
maybe via svg or something?

[18:12:23.0000] <Hixie>
some way to convert it to a path?

[18:13:10.0000] <heycam>
in theory you have altGlyph in SVG which should let you select an arbitrary glyph, but in practice it's underspecified and doesn't work

[18:13:50.0000] <heycam>
can't think of another way to select glyphs from a font...

[18:15:19.0000] <Hixie>
maybe exporting the glyph as pdf somehow and using an iframe?

[18:15:37.0000] <Hixie>
this doesn't have to be pretty, it's for a quick hack to do a print run

[18:16:28.0000] <heycam>
in pdf you can select arbitrary glyphs (though don't ask me how)

[18:16:47.0000] <Hixie>
well i can select the glyph in pages.app, and print to pdf from there

[18:16:53.0000] <heycam>
ah

[18:17:16.0000] <heycam>
or you could just open it up in font forge, add a cmap entry to the glyph (maybe from a PUA code point) so you can select it in html

[18:17:29.0000] <Hixie>
hm, that's an idea

[18:19:42.0000] <Hixie>
bummer, iframing a pdf shows all kinds of UI in gecko

[18:19:52.0000] <Hixie>
/me goes to get font forge

[18:20:50.0000] <heycam>
don't know if inkscape can select arbitrary glyphs from fonts; you could do that too, then convert to a patch and save as svg

[18:20:56.0000] <heycam>
illustrator likely can

[18:21:08.0000] <Hixie>
inkscape will be easier than font forge, looks like

[18:21:36.0000] <heycam>
if you can get the text in there. I'm not convinced you'll be able to.

[18:22:55.0000] <Hixie>
83MB, jesus, vectors are getting heavier

[18:49:07.0000] <Hixie>
heycam: i made version about 20 times bigger as a png and scaled it down instead...

[18:49:13.0000] <Hixie>
we'll see if that prints at full res

[18:58:03.0000] <heycam>
ha fair enough

[19:21:28.0000] <odinho>
$ GET -Sseu "http://www1.w3c-test.org/webappsec/tests/cors/submitted/opera/staging/resources/cors-makeheader.php?get_value=a&origin=http%3A%2F%2Fw3c-test.org%001"

[19:21:57.0000] <odinho>
Uh, that one doesn't even return the Access-Control-Accept-Origin:  header. Something even more broken than before? :|

[19:22:51.0000] <odinho>
Maybe some PHP reviewing stuff that makes the old version exist on the server, but not a new one.

[00:40:57.0000] <Hixie>
hah

[00:41:19.0000] <Hixie>
i was just looking through old bugs and we got at least 7 separate bugs about the term "outlinee" over the years

[00:41:42.0000] <jgraham>
This is what happens if you willfully violate English?

[00:43:26.0000] <Ms2ger>
Good morning

[00:58:47.0000] <Hixie>
jgraham: it was fine english

[00:59:14.0000] <Ms2ger>
Of course it was

[01:01:05.0000] <Hixie>
sweet, broke 200 bugs (on the way down)

[01:01:14.0000] <Hixie>
lowest point since jan

[01:08:19.0000] <Ms2ger>
/me cheers Hixie on

[03:30:59.0000] <Ms2ger>
!summon zcorpan

[07:30:07.0000] <MikeSmith>
hsivonen: bugzilla.validator.nu is unresponsive

[07:36:05.0000] <Ms2ger>
"The createTBody() method must create a new tbody element, insert it immediately after the last tbody element in the table element, ..."

[07:36:16.0000] <Ms2ger>
Does "in" refer to children or descendants?

[10:01:03.0000] <jgraham>
Ms2ger: Children I expect, but you are right that isn't up to Hixie's usual standards

[10:01:51.0000] <Ms2ger>
You don't happen to have tests for it? :)

[10:14:50.0000] <jgraham>
I don't think so

[10:43:08.0000] <Ms2ger>
"If you're a student and want to hack some #scala applied to #rdf and #ldp"

[10:43:21.0000] <Ms2ger>
Sounds like something that would constant-fold to "If false"

[10:46:05.0000] <gsnedders>
Ms2ger: I believe Opera to have exactly zero tests for createTBody. :)

[10:46:22.0000] <Ms2ger>
gsnedders, does it implement createTBody? :)

[10:46:56.0000] <jgraham>
wtf is ldp?

[10:47:42.0000] <Ms2ger>
Lunatic Distributed Processing?

[10:47:47.0000] <gsnedders>
Ms2ger: Dunno.

[10:48:14.0000] <Ms2ger>
I guess I should write some

[10:50:58.0000] <Ms2ger>
And I guess nobody wants to review https://github.com/Ms2ger/web-platform-tests/commit/c82dc1b47c8762a60a6c70b5140dcaa5f97a8f5d

[10:52:18.0000] <jgraham>
Ms2ger: No pull request?

[10:52:29.0000] <Ms2ger>
I thought I made one...

[10:52:48.0000] <jgraham>
Also, there is a special place in hell reserved for people that rebind "/" on their websites

[10:52:56.0000] <jgraham>
Yes github, I'm looking at you

[10:53:02.0000] <Ms2ger>
https://github.com/w3c/web-platform-tests/pull/45

[10:57:35.0000] <jgraham>
How about I ask for a formatting change and we try again :)

[10:58:26.0000] <Ms2ger>
Hmm?

[11:00:50.0000] <jgraham>
Linebreaks between the test()s

[11:01:08.0000] <jgraham>
There should have been critic mail

[11:01:14.0000] <jgraham>
Dunno what happened to it

[11:01:29.0000] <jgraham>
Oh, there was

[11:04:06.0000] <Ms2ger>
"New(ish) Review"

[11:04:09.0000] <Ms2ger>
That's a first

[11:08:16.0000] <Ms2ger>
jgraham, there you go

[11:13:20.0000] <GPHemsley>
Does anyone know if there is a standards-track (or other proprietary) equivalent to the CSS -webkit-font-smoothing property? or have any other opinions on the property?

[11:14:19.0000] <GPHemsley>
Similarly, for (-ms-)zoom?

[11:31:27.0000] <Ms2ger>
jgraham, did you have any more comments? ;)

[11:35:08.0000] <jgraham>
Ms2ger: Possibly? I haven't finished yet

[11:35:11.0000] <jgraham>
:)

[11:35:26.0000] <jgraham>
Also I am going to take a break now

[11:36:21.0000] <Ms2ger>
Dammit :)

[11:36:35.0000] <Ms2ger>
Thanks, though :)

[13:28:53.0000] <zewt>
dear bugzilla, stop redirecting me to "process_bug.cgi" whenever i submit; what kind of ancient nonsense is that, anyway

[13:29:20.0000] <zewt>
... https://bugs.webkit.org/show_bug.cgi?id=20141 the fact that I actually have to argue against this insanity chips away at my hope for the web some more

[13:30:09.0000] <zewt>
"we should make console.log automatically bound to console!" why? "to save 14 characters of typing!" that's crazy "what are the use cases for not doing this?" sigh

[13:31:08.0000] <Hixie>
if you have two Console objects, is there any state in them that is different between them?

[13:31:50.0000] <zewt>
calling console.log on another window logs to that window's console

[13:32:29.0000] <zewt>
that is, it's not effectively a static method

[13:32:42.0000] <Hixie>
well then how can it be bound

[13:32:46.0000] <zewt>
but the proposal here is to basically act as if you did console.log = console.log.bind(console)

[13:33:25.0000] <Hixie>
so console1.apply(console2, 'test') would go to console2?

[13:33:25.0000] <zewt>
and i'm saying nothing in the platform does that and stop adding weird new things to save a little typing in uncommon cases

[13:33:38.0000] <Hixie>
or console1?

[13:33:44.0000] <Hixie>
er

[13:33:48.0000] <zewt>
i don't know, the proposal hasn't been fleshed out that much (and I'm not fleshing it out, since I'm arguing against it)

[13:33:52.0000] <Hixie>
console1.log.apply(console2

[13:34:06.0000] <Hixie>
i'd use this as an argument.

[13:34:09.0000] <Hixie>
good luck!

[13:34:09.0000] <zewt>
if they did it i would hope it would just piggyback on .bind's semantics though

[13:34:18.0000] <zewt>
heh

[14:08:41.0000] <Philip`>
/me gets confused by reading comment #7 without noticing the date

[16:02:01.0000] <Hixie>
MikeSmith: you around?

[16:02:42.0000] <MikeSmith>
yup

[16:02:59.0000] <Hixie>
MikeSmith: can you change the default assignee for the webvtt component to nessy?

[16:03:08.0000] <MikeSmith>
sure

[16:03:12.0000] <MikeSmith>
will do right now

[16:03:14.0000] <Hixie>
thank you sir!

[16:05:12.0000] <MikeSmith>
done now

[16:05:30.0000] <Hixie>
woot

[16:05:30.0000] <MikeSmith>
should I change the assignee on the open bugs?

[16:05:34.0000] <Hixie>
i can do it

[16:05:47.0000] <Hixie>
it'll let me make sure i don't have any unexpected ones

[16:08:26.0000] <Hixie>
yay, down to 169 bugs


2013-04-15
[17:08:13.0000] <nessy>
cool :-)

[17:08:51.0000] <nessy>
now I can remove all the webvtt stuff from the html spec, too

[22:27:49.0000] <Hixie>
is there a better way of checking that of three booleans, only one is true, than  (not ((a and b) or (a and c) or (b and c)) ?

[22:45:35.0000] <SimonSapin>
Hixie: your expression is also true if they’re all false, is that what you want?

[22:46:42.0000] <jtcranmer>
Hixie: (a xor b) and (b xor c) and (a xor c)?

[22:47:15.0000] <jtcranmer>
hmm

[22:47:29.0000] <jtcranmer>
(a xor b xor c) and not (a and b and c) ?

[22:47:32.0000] <heycam>
Hixie, if it's JS and you know your variables are booleans, you can do `a + b + c == 1`

[22:50:47.0000] <Hixie>
it's perl and they're really integers

[22:51:11.0000] <Hixie>
SimonSapin: they can't be all false in this case, but good point

[22:51:42.0000] <Hixie>
i guess i could do a !! trick

[22:51:47.0000] <Hixie>
!!a + !!b + !!c == 1

[01:59:57.0000] <annevk5>
marcosc: that success/error-callback thing in Midi looks like a future

[02:02:08.0000] <jgraham>
annevk: You have turned into a bot

[02:02:12.0000] <jgraham>
:)

[02:02:35.0000] <annevk>
jgraham: I don't understand the question, "You have turned into a bot"

[02:02:39.0000] <jgraham>
Just need to add another bot that responds to "X looks like a future" with "and futures look like monads"

[02:05:33.0000] <Ms2ger>
And monads look like my head just exploded, again

[02:09:35.0000] <jgraham>
(fwiw http://stackoverflow.com/a/2704795 seems quite nice)

[02:10:26.0000] <Ms2ger>
Maybe I should read it...

[02:10:37.0000] <Ms2ger>
Once I figured out existential types

[02:10:45.0000] <jgraham>
(if one is looking for a practical introduction to Monads, albeit in C#)

[02:10:59.0000] <jgraham>
(Not that I really claim to understand and thing)

[02:11:05.0000] <jgraham>
*anything

[02:11:35.0000] <Ms2ger>
And that's a doctor...

[02:11:53.0000] <annevk>
just like Future is Future<any, any> I guess

[02:12:05.0000] <annevk>
and you can make it Future<MediaStream, DOMError>

[02:12:12.0000] <jgraham>
(but what little I do underestand makes it clear why futures could/should/do form a monad)

[02:12:43.0000] <annevk>
and all the future composition stuff still applies, etc.

[02:15:49.0000] <asmodai>
Do any of you know of a bug with Chrome and refreshing of pages that at some point causes it to lose its styling of said page?

[02:28:31.0000] <jgraham>
darobin: "Any reason you *should* grab it and deploy"? Well maybe if you are insane and like running untested code in production?

[02:30:00.0000] <darobin>
jgraham: there's another way of doing development?

[02:30:12.0000] <jgraham>
So I hear :)

[02:30:25.0000] <darobin>
jgraham: to clarify, my question was because I couldn't tell from your comments how prod-ready you thought it was

[02:30:43.0000] <darobin>
you said untested, but at the same time you seemed to say it was pretty close to being ok

[02:30:58.0000] <Ms2ger>
The usual Knuth quote?

[02:31:19.0000] <Ms2ger>
"Beware of bugs in the above code; I have only proved it correct, not tried it."

[02:31:29.0000] <darobin>
"Who are you and what are you doing in my bedroom?" // that one?

[02:31:29.0000] <jgraham>
It's untested. So it probably has all the usual types of errors that untested python code has e.g. arguments not matching, etc.

[02:31:34.0000] <darobin>
hehe

[02:31:57.0000] <jgraham>
But I don't know of any missing parts to the code

[02:31:59.0000] <darobin>
for reference http://xkcd.com/163/

[02:32:18.0000] <darobin>
ok, so maybe a bit of testing before deployment would be useful

[02:32:33.0000] <jgraham>
I recommend setting up a test repo somewhere, mirroring that somewhere (doesn't even have to be public facing) and seeing if the commands work as expected

[02:32:46.0000] <jgraham>
and it responds in the right way to new PRs and so on

[02:33:03.0000] <jgraham>
I should have done this, but I did something else instead :)

[02:33:06.0000] <jgraham>
No idea what

[02:33:38.0000] <Ms2ger>
Drink?

[04:44:56.0000] <zcorpan>
Ms2ger: here

[04:45:44.0000] <jgraham>
That's some slow-acting magic right there

[04:45:58.0000] <odinho>
glacier

[05:14:03.0000] <Ms2ger>
zcorpan, still here?

[05:14:11.0000] <zcorpan>
Ms2ger: yep

[05:14:56.0000] <Ms2ger>
http://w3c-test.org/web-platform-tests/master/html/webappapis/scripting/processing-model-2/body-onerror-compile-error-data-url.html

[05:15:16.0000] <Ms2ger>
Since you submitted that test, want to explain it? :)

[05:18:12.0000] <zcorpan>
Ms2ger: explain why the arguments should be tainted? or something else?

[05:18:30.0000] <Ms2ger>
I guess that's what it comes down to, yes

[05:22:26.0000] <zcorpan>
Ms2ger: it seems the spec has changed since the test was written

[05:22:35.0000] <Ms2ger>
\o/

[05:23:43.0000] <zcorpan>
Ms2ger: when it was written, the "report the error" algorithm compared the origin of the URL of the script with the origin of the script's document to decide whether to mute

[05:24:00.0000] <Ms2ger>
I see

[05:24:02.0000] <zcorpan>
Ms2ger: now the spec supports CORS and the muted-ness of data: has changed

[05:25:13.0000] <Ms2ger>
You don't happen to feel like updating the test? :)

[05:26:21.0000] <zcorpan>
first i want to ponder if the spec change can cause new security problems

[05:27:23.0000] <zcorpan>
the only thing i can think of is something that redirects to a data: URL, but that should be considered cross-origin (known bug)

[05:29:33.0000] <zcorpan>
there should be some CORS test here too

[05:31:21.0000] <zcorpan>
is the process the same for minor bugfixes like this as for any other test submission?

[05:32:06.0000] <Ms2ger>
I think so, yes

[05:32:11.0000] <zcorpan>
ok

[05:33:02.0000] <darobin>
the process is whatever we want to make it, keep that in mind

[05:33:40.0000] <jgraham>
/me wants the process to be "darobin reviews all tests"

[05:33:41.0000] <darobin>
as a rule, if it's substantive even if small I think it's better if there's a bit of review

[05:33:53.0000] <darobin>
/me thinks jgraham missed the "we" bit :)

[05:34:11.0000] <darobin>
but if it's just a quick and obvious fix I would say you can just push

[05:34:34.0000] <darobin>
or, put differently, the process is "be fucking sensible" :)

[05:34:47.0000] <jgraham>
My view is that getting review for small changes is no big deal because small changes can be reviewed synchronously anyway

[05:34:53.0000] <zcorpan>
my biggest issue is naming the branch :-P

[05:34:57.0000] <zcorpan>
submission/Opera/onerror-data-url-muted-bugfix

[05:35:06.0000] <zcorpan>
what if i want to do another bugfix?

[05:35:11.0000] <jgraham>
But it is OK to just push whitespace changes and typo fixes and similar

[05:35:37.0000] <Ms2ger>
But what if the typo was essential to the test?

[05:36:11.0000] <jgraham>
Then you shouldn't have named a variable "outlinee"

[05:36:36.0000] <jgraham>
But seriously, it's OK to have failure modes

[05:36:46.0000] <jgraham>
I mean review is a long way from perfect

[05:37:09.0000] <Ms2ger>
:D

[05:37:32.0000] <jgraham>
But the goal is a) to reduce the incidence of bad tests and b) to make sure multiple people actually know what tests we have and how they work

[05:38:06.0000] <jgraham>
It isn't to prevent all possible errors

[05:38:38.0000] <jgraham>
(if we wanted that we would, um, well actually I don't know.

[05:38:55.0000] <jgraham>
Have formal proofs and tests in Coq?)

[05:39:47.0000] <odinho>
zcorpan: You don't need to call it that, because you should have the branch in your personal fork anyway.

[05:40:01.0000] <Ms2ger>
/me wonders why jgraham enjoys talking about Coq so much)

[05:40:02.0000] <MikeSmith>
cool, when I try to to start my firefox nightly, I just get a window with an error: "XML Parsing Error: undefined entity Location: chrome://browser/content/browser.xul Line Number 506, Column 9"

[05:40:22.0000] <odinho>
zcorpan: You can call the branch  bamboo-bowser  if you so please, and then do a PR.

[05:40:36.0000] <MikeSmith>
and then I don't get any browser chrome at all so can't actually navigate to anything

[05:40:52.0000] <odinho>
zcorpan: The reason we have the submission branches right now is because we had some stuff already submitted and needed branches for those :-)

[05:42:06.0000] <zcorpan>
odinho: but my branch name will be visible in the PR right?

[05:42:54.0000] <odinho>
zcorpan: Yes. :-)  But not really highlighted.

[05:43:14.0000] <odinho>
zcorpan: So don't call your public branch too offensive things.

[05:43:18.0000] <darobin>
are we moving on to making profound jokes about how jgraham likes Coq?

[05:43:43.0000] <jgraham>
FWIW the only thing that's annoying in PR branch names is overuse of "master"

[05:43:52.0000] <jgraham>
git has local branches for a reason, people

[05:43:56.0000] <odinho>
zcorpan: You can, however, call your local ones offensive things, and then just push to a more neutral name for the public repo. :-)    git push origin omg_i_hatez_jgraham:shiny_ponies

[05:43:57.0000] <jgraham>
This is not mercurial

[05:44:08.0000] <darobin>
MikeSmith: where we're going, the browser is everything — you don't need chrome. Firefox is just showing you the future there.

[05:44:19.0000] <zcorpan>
submission/odinhos-mom-so-fat-she-would-break-a-branch

[05:44:29.0000] <odinho>
zcorpan: You got it! :D

[05:44:32.0000] <darobin>
haha

[05:56:22.0000] <zcorpan>
Ms2ger: https://github.com/w3c/web-platform-tests/pull/82

[05:56:44.0000] <Ms2ger>
Thanks

[06:43:46.0000] <annevk>
Ms2ger: I put fetch in a separate file for now

[06:44:09.0000] <annevk>
Ms2ger: and put all CORS references towards W3C/TR/cors

[06:44:44.0000] <annevk>
A little unfortunate that rewriting CORS takes the "living" bit out of it, but it was fairly stable anyway.

[06:57:03.0000] <Ms2ger>
annevk, *shrug*

[06:57:17.0000] <Ms2ger>
On another note, Hixie takes bug reports on IRC now?

[06:57:22.0000] <Ms2ger>
(re http://html5.org/tools/web-apps-tracker?from=7832&to=7833)

[06:57:24.0000] <annevk>
Ms2ger: shrug what?

[06:57:29.0000] <annevk>
Ms2ger: me making xref work again?

[06:57:44.0000] <Ms2ger>
annevk, CORS pointing to TR

[06:58:21.0000] <annevk>
Ms2ger: didn't really see a better way for now

[06:58:54.0000] <Ms2ger>
Yeah

[06:59:09.0000] <Ms2ger>
You're 80% done with killing it anyway, no? ;)

[06:59:57.0000] <annevk>
that's the Q2 goal, 80% is about the level of done-ness CORS has now, so then I can update the references and everything :)

[07:00:31.0000] <annevk>
One of the big problems with Fetch will be that the interface is somewhat different because we've used so many different conventions in the past

[07:02:37.0000] <darobin>
annevk: are you thinking of specific compatibility issues for new HTMLH1Element beyond toString()?

[07:03:23.0000] <darobin>
because I reckon it's not the end of the world if we say it that it always returns "[object HTMLHeadingElement]"

[07:04:42.0000] <darobin>
there's __proto__ but I'd be a bit surprised if that showed up

[07:05:01.0000] <gsnedders>
instanceof is more likely.

[07:05:09.0000] <gsnedders>
Or just constructor directly.

[07:05:21.0000] <darobin>
well instanceof HTMLHeadingElement would still be true

[07:05:49.0000] <gsnedders>
/me hasn't read enough context

[07:05:58.0000] <darobin>
the thing is I wonder if people actually access constructor for non-constructable objects

[07:06:01.0000] <jgraham>
I don't think there was any context given

[07:06:05.0000] <annevk>
darobin: no, just "change" is dangerous

[07:06:12.0000] <annevk>
when it comes to compat anyway

[07:06:26.0000] <annevk>
but we should try

[07:06:34.0000] <darobin>
yeah, I know, but we try to guess impact

[07:07:01.0000] <annevk>
jgraham: you're not reading your email synchronously with IRC?

[07:07:19.0000] <darobin>
I guess there could be people doing el.constructor === HTMLHeadingElement instead of instanceof

[07:07:50.0000] <Ms2ger>
annevk, quite the conservative :)

[07:08:13.0000] <annevk>
Ms2ger: can we kill hasAttributes() now?

[07:08:31.0000] <Ms2ger>
I'd be happy to

[07:08:49.0000] <annevk>
Ms2ger: how hard it is to measure its usage?

[07:09:20.0000] <annevk>
Ms2ger: we could at least do the thing BlinKit did, move it to Element

[07:09:30.0000] <Ms2ger>
annevk, I think AryehGregor did telemetry for Range.detach, it's probably feasible to crib from that

[07:09:47.0000] <annevk>
Ms2ger: should I file a bug for you?

[07:10:13.0000] <annevk>
I wonder when we're gonna try Attr exodus

[07:10:19.0000] <Ms2ger>
Sure, I'll add it to the bottom of my todo list :)

[07:10:28.0000] <Ms2ger>
Line 350 or so

[07:10:52.0000] <annevk>
right

[07:23:25.0000] <Ms2ger>
gsnedders, what was the motivation for https://github.com/gsnedders/py-regexp-builder btw?

[07:28:02.0000] <gsnedders>
Ms2ger: Originally? No idea. Now? Partly the fact it had lain around for too long, and partly to build regexp of all "invisible" characters.

[07:28:14.0000] <Ms2ger>
I see

[07:43:25.0000] <gsnedders>
Ms2ger: Too slow to run on each load with CPython (~0.7s to build it, mostly spent iterating over the whole codespace and checking category), but takes ~0.1s with PyPy

[07:48:22.0000] <gsnedders>
(Down to ~0.5s with CPython, no difference with PyPy)

[07:54:10.0000] <marcosc>
/me thinks someone needs to W3C meme this: https://github.com/darobin/respec/pull/197#issuecomment-16381951

[07:55:11.0000] <Ms2ger>
People are idiots

[07:55:15.0000] <Ms2ger>
News at 11

[07:57:22.0000] <annevk>
Film at 11, idiot

[07:57:45.0000] <annevk>
Badum-tish!

[08:00:42.0000] <annevk>
marcosc: it's like it's 2004 again with stuff like that

[08:01:30.0000] <Ms2ger>
annevk, :D

[08:01:52.0000] <annevk>
marcosc: so yeah man, last decade didn't happen, stable pointers are much more important than whatever you learned meanwhile

[08:02:16.0000] <jgraham>
2004, or 2014 at W3C

[08:03:13.0000] <marcosc>
:)

[08:03:35.0000] <annevk>
It's like visiting a third world country, technology is about a decade behind. DVDs are still hip and you don't have to look hard to find VHS.

[08:05:51.0000] <marcosc>
I was in Greece the other day, and the airport X-Ray machine assured me that it was safe for diskettes.

[08:06:25.0000] <marcosc>
It has very helpful picture... oh, and film too... but only some types.

[08:07:39.0000] <annevk>
I almost jokingly added France to that sentence. Went to a club there once on vacation, the "pop" music was from about seven years ago.

[08:08:13.0000] <annevk>
To be fair, that was not in Paris, but somewhere middle-of-nowhere.

[08:08:42.0000] <darobin>
you completely missed the point annevk

[08:08:53.0000] <darobin>
the *whole* point of provincial clubs in France is to have dated music

[08:08:57.0000] <darobin>
it's as hip as it gets

[08:09:19.0000] <darobin>
the whole "latest and greatest DJ" parisian routine is so tedious

[08:09:30.0000] <annevk>
darobin: aw man, I guess that's why my French teacher kept making fun of me

[08:09:40.0000] <darobin>
I seriously would only consider going to a club in France if it's outside Pari

[08:09:43.0000] <darobin>
*Paris

[08:09:56.0000] <darobin>
it's all wedding music

[08:10:10.0000] <darobin>
meaning you can booze your head off and dance like a moron

[08:10:41.0000] <marcosc>
you mean, they wouldn't laugh at my dancing there?

[08:10:56.0000] <marcosc>
you mean, I could be free like a dancing butterfly?

[08:11:32.0000] <annevk>
darobin: I've found you don't require a club for that

[08:11:51.0000] <darobin>
marcosc: exactly

[08:12:08.0000] <darobin>
annevk: well, I don't require a club for that, but in a parisian club I'd promptly get kicked out :)

[08:12:48.0000] <annevk>
hehe

[08:14:40.0000] <jgraham>
Parisian clubs are for eating cheese?

[08:16:15.0000] <darobin>
they're for cheese eating surrender monkeys for sure

[09:19:36.0000] <zcorpan>
is there an up-to-date table inspector that implements the spec's td-th mapping?

[09:20:37.0000] <zcorpan>
james.html5.org is no more

[09:21:27.0000] <zcorpan>
jgraham: do you have http://james.html5.org/tables/table_inspector.html around somewhere?

[09:41:31.0000] <jgraham>
zcorpan: So I don't know what happened to that code. Maybe it is on some other computer. I will have a look

[09:41:59.0000] <zcorpan>
jgraham: if you find it, please dump it on github or something :-)

[09:42:53.0000] <Hixie>
ms2ger: if i happen to notice it and happen to not have any edits open and happen to be in the mood... which is to say, don't count on it :-)

[09:43:12.0000] <jgraham>
zcorpan: Sure

[09:43:33.0000] <zcorpan>
why does Audio API need the legacy constants?

[09:43:41.0000] <annevk>
oh wtf

[09:43:49.0000] <annevk>
public-svg-wg has a limited mailing list?

[09:43:53.0000] <annevk>
that's super annoying

[09:44:00.0000] <annevk>
(limited as in subscribers only)

[09:44:29.0000] <zcorpan>
or why does Audio API want to use both legacy constants and strings instead of picking one or the other?

[09:44:42.0000] <shepazu>
annevk, it's only for logistics, the technical talk happens on www-svg

[09:45:02.0000] <annevk>
oh, forgot about www-svg :/

[09:46:21.0000] <annevk>
/me forwards

[09:47:47.0000] <annevk>
ta shepazu

[09:56:52.0000] <annevk>
I do agree with jgraham. The longer that thread goes on, the more it reads like TC39 should just fold into W3C...

[10:10:16.0000] <MikeSmith>
win 11

[10:11:19.0000] <MikeSmith>
annevk: so we seriously should help do that

[10:12:05.0000] <annevk>
zcorpan: they want to move to new API-style, but don't break compat?

[10:12:39.0000] <zcorpan>
annevk: who?

[10:12:49.0000] <annevk>
zcorpan: Audio

[10:14:08.0000] <zcorpan>
annevk: ah. yeah, i guess. everywhere else we haven't done that, though, we just didn't change the legacy APIs and changed over completely the APIs that were not widely used yet

[10:14:44.0000] <annevk>
I expect we'll get new APIs going forward for various unchanged legacy stuff

[10:14:50.0000] <zcorpan>
annevk: i'm not convinced that supporting both will end up being a win since it means both will be used in the wild and authors will be more confused

[10:14:54.0000] <annevk>
e.g. new APIs for network requests that don't suck as much

[10:15:25.0000] <annevk>
zcorpan: given that not everyone has implemented the Audio API I'm kinda surprised about the compat

[10:15:40.0000] <annevk>
zcorpan: I guess iOS shipped with it...

[10:15:59.0000] <zcorpan>
yeah i would have thought it isn't widely used yet

[10:18:54.0000] <GPHemsley>
TIL <blink> is not in any spec

[10:20:00.0000] <Hixie>
it's in html

[10:20:17.0000] <Hixie>
http://whatwg.org/html#blink

[10:20:44.0000] <annevk>
Hixie: we killed it from Gecko btw

[10:20:53.0000] <annevk>
s/from/in/

[10:21:07.0000] <Hixie>
lame

[10:21:27.0000] <annevk>
*shrug* ;)

[10:21:52.0000] <GPHemsley>
Hixie: https://bugzilla.mozilla.org/show_bug.cgi?id=857820#c57

[10:22:35.0000] <Hixie>
the parser did something with blink?

[10:22:41.0000] <Hixie>
o_O

[10:23:23.0000] <annevk>
looks like the old Gecko parser

[10:23:30.0000] <Hixie>
the only requirement in the html spec is that the ua.css file have  blink { text-decoration: blink }

[10:23:53.0000] <GPHemsley>
Hixie: I was referring to this: "And also, <blink> element isn't defined any Web Standard specs."

[10:24:40.0000] <Hixie>
GPHemsley: what about it?

[10:25:00.0000] <Hixie>
people not knowing what's in all the specs is hardly surprising, there's tons of them and they're long. :-)

[10:25:04.0000] <GPHemsley>
Oh, are we splitting hairs about "in" vs. "defined in"?

[10:25:09.0000] <Hixie>
/me barely knows what's in the HTML spec, let alone anything else :-)

[10:26:09.0000] <annevk>
/me comments

[10:28:10.0000] <zcorpan>
there are surprisingly few uses of `const` in html

[10:29:44.0000] <zcorpan>
maybe the parser thing is about HTMLElement vs HTMLUnknownElement?

[10:31:46.0000] <GPHemsley>
/me had no idea <marquee> had so many possibilities.

[10:35:45.0000] <zcorpan>
i wish browsers would do a better job at animating the <marquee> instead of doing 10 pixel jumps like it's 1994

[10:36:11.0000] <Hixie>
ah yeah maybe <blink> is now HTMLUnknownElement

[10:36:15.0000] <Hixie>
spec does say it should be HTMLElement

[10:36:24.0000] <Hixie>
but i can add it to the list of Unknowns if nobody does that

[10:38:34.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2214 - opera/gecko HTMLElement, safari/chrome HTMLUnknownElement

[10:40:09.0000] <Hixie>
in other news, how should we handle changing the start/end times on a cue

[10:40:18.0000] <Hixie>
essentially remove the cue and re-add it?

[10:40:22.0000] <Hixie>
even if that moves it around?

[10:40:28.0000] <Hixie>
or should we try hard not to move it

[10:40:59.0000] <Hixie>
also we still don't show cues when they are added if they should be active, iirc

[10:41:06.0000] <zcorpan>
in IE10 it's "HTMLPhraseElement"

[10:41:21.0000] <Hixie>
wtf is HTMLPhraseElement

[10:42:17.0000] <zcorpan>
i asked about this a few years ago. apparently they had these interfaces internally all along, but didn't expose them until IE8 or some such, when catching up with the specs

[10:42:38.0000] <zcorpan>
and they didn't prioritize matching the spec exactly, or something

[10:42:45.0000] <Hixie>
...ok

[10:43:55.0000] <GPHemsley>
"Implements the document object model (DOM) representation of the phrase elements such as em, strong, dfn, code, samp, kbd, var, cite, abbr, and acronym." http://msdn.microsoft.com/en-us/library/ie/hh869728%28v=vs.85%29.aspx

[10:44:10.0000] <Hixie>
hmm... we do support _removing_ cues dynamically

[10:45:12.0000] <zcorpan>
Hixie: i think moving cues around when changing the times isn't a problem

[10:45:49.0000] <Hixie>
well if all you're doing is extending the end time

[10:45:57.0000] <Hixie>
it'd be sad if it moved

[10:46:11.0000] <Hixie>
i think in practice we don't need to move

[10:46:30.0000] <Hixie>
i just need to check if the active flag should be set, and repaint the cues if it changed

[10:46:35.0000] <Hixie>
the question is more about events

[10:46:45.0000] <Hixie>
i'm thinking we don't fire events if you manually change the time and active changes

[10:46:54.0000] <zcorpan>
oh moving it can change the rendering huh... didn't consider that. i was just thinking of "move" as in placement in the list of cues

[10:47:24.0000] <Hixie>
right

[10:47:37.0000] <Hixie>
e.g. if the cue was placed in a suboptimal place, then all the other cues went away

[10:48:49.0000] <zcorpan>
then i think i agree

[10:49:11.0000] <Hixie>
or... _or_... we could run the "When the current playback position of a media element changes" steps

[10:49:19.0000] <Hixie>
and that would fire all the events magically! and update the active flag and everything!

[10:49:31.0000] <Hixie>
oh this is so the right solution

[10:50:52.0000] <Hixie>
yes yes yes, this is the way to do it.

[10:51:16.0000] <Hixie>
ok i need a name for this algorithm

[10:51:33.0000] <Hixie>
"the 'time moves on' steps"?

[10:52:50.0000] <Hixie>
ok unless someone has a better idea, i'm calling these the /time marches on/ steps.

[11:05:07.0000] <Hixie>
hm, can you have a texttrack without a media element...

[11:06:42.0000] <Hixie>
i guess so, orphan <track> for one

[11:06:44.0000] <Hixie>
hmm

[11:17:47.0000] <Hixie>
are there any APIs (e.g. XHR maybe?) that do the blob: delayed preservation magic needed for https://www.w3.org/Bugs/Public/show_bug.cgi?id=17765 ?

[11:19:32.0000] <annevk>
Hixie: there's no blob URL special casing anywhere currently

[11:20:17.0000] <annevk>
Hixie: we want to lift the same-origin restrictions on blob URLs (make them work similar to data URLs, which when pasted in somewhere, work)

[11:20:52.0000] <Hixie>
the origin thing seems orthogonal

[11:21:08.0000] <Hixie>
/me doesn't really want to be the first one to do this special casing for blob:

[11:21:10.0000] <annevk>
Hixie: except that we track the revoking thing on a per-global basis

[11:21:18.0000] <Hixie>
and i find it hard to believe that all the specs are going to be updated for this

[11:21:50.0000] <Hixie>
like, is CSSOM going to say that when you set 'border-image-source', you have to do something special?

[11:21:54.0000] <annevk>
Hixie: implementers have to decide what to do here I think

[11:22:37.0000] <annevk>
Hixie: zewt suggested adding this to the URL parser, but I'm not sure if that actually solves the issue as that can be delayed in CSS too

[11:23:53.0000] <Hixie>
jesus wept, what happened on https://www.w3.org/Bugs/Public/show_bug.cgi?id=17842

[11:24:01.0000] <Hixie>
53 book-length comments

[11:24:50.0000] <Hixie>
well the actual semantics here are imho very weird, urls are supposed to be idempotent and this breaks that invariant

[11:24:51.0000] <annevk>
Hixie: basically, I think the whole autoRevoke thing is kind of a joke

[11:25:04.0000] <Hixie>
not a joke, but yeah, i'm rather skeptical of it

[11:25:11.0000] <Hixie>
but i don't have a better proposal

[11:25:12.0000] <annevk>
has it been implemented?

[11:25:20.0000] <Hixie>
no idea

[11:26:32.0000] <annevk>
basically currently it seems it cannot work as starting a fetch will do that fetch async

[11:26:36.0000] <annevk>
except for sync XHR

[11:26:52.0000] <annevk>
so if UAs implemented it, they'd break sites

[11:27:03.0000] <annevk>
because autoRevoke was not the default before

[11:28:26.0000] <Hixie>
hm?

[11:29:43.0000] <Hixie>
in other news, i think it's possible some people think that the more they talk about a feature, the more likely it is that it'll get added to the spec

[11:29:55.0000] <Hixie>
but since i deal with bugs on a least-recently-touched basis, it actually has the opposite effect...

[11:32:52.0000] <annevk>
Hixie: createObjectURL() in the spec defaults to autoRevoke true; that's not implemented atm afaik

[11:33:33.0000] <annevk>
Hixie: also, <img>.src = blobURL will always load async, at which point blobURL is already revoked

[11:44:38.0000] <marcosc>
Hixie, re: Bug 17842 ... it's not the case that people are just bla bla-ing to make it seem important. It's actually quite controversial what is being asked in the bug... because of how radios on mobiles work.

[11:45:09.0000] <annevk>
Hixie: I'm emailing webapps

[11:45:33.0000] <marcosc>
Hixie: in summary, we want a "lazy" attribute :) Lazy === hey browser, load it when you want.

[11:46:26.0000] <zcorpan>
marcosc: Hixie's just saying that if you want him to look at the bug, you need to stop adding more comments

[11:46:44.0000] <marcosc>
zcorpan: I know, totally get that.

[11:47:19.0000] <marcosc>
zcorpan: what I was trying to say was that the original bug had made some incorrect assumptions, so lots of people had opinions about it.

[11:47:45.0000] <marcosc>
I was actually going to jump in the other day to tell them to stop proposing solutions and just wait for Hixie

[11:48:11.0000] <marcosc>
But some good new material was actually brought forward

[11:48:20.0000] <marcosc>
so it was better to just leave the conversation going

[11:48:50.0000] <zcorpan>
also, in my experience saying "stop talking" doesn't work but just adds more noise :-P

[11:49:04.0000] <marcosc>
heh, rock and a hard place

[11:49:19.0000] <marcosc>
I think we reached consensus in the bug, so either Ilya or Yoav should be able to provide Hixie with a summary

[11:50:48.0000] <zcorpan>
if you know of someone wanting to implement it right now, you can ask Hixie to fast track the bug

[11:53:11.0000] <marcosc>
zcorpan: yeah, I don't know of any actual interest from browser folks.

[11:53:20.0000] <zcorpan>
ok

[11:54:28.0000] <marcosc>
I mean, there a few people form Google, at least one from Opera, ... but I guess until there is actual bugs filed in the right places...

[11:55:32.0000] <Hixie>
annevk: the idea zewt was putting forward was that <img>.src = blobURL should cause the load to be sync so that the data was preserved for that <img>, iiuc

[11:55:55.0000] <Hixie>
marcosc: oh i wasn't suggesting it was just bla bla, sorry if that was the implication!

[11:56:18.0000] <annevk>
Hixie: hmm maybe we could make http://fetch.spec.whatwg.org/#concept-fetch work that way

[11:56:39.0000] <annevk>
Hixie: even so, that doesn't solve it for CSS I think

[11:57:12.0000] <Hixie>
annevk: yeah, i dunno. arun and zewt are the right people to figure out the solution, i'm just hoping another spec fixes it first because i don't want to be the trailblazer here when i'm skeptical anyone else will follow.

[11:57:28.0000] <annevk>
Hixie: I don't think you should fix it

[11:57:35.0000] <annevk>
Hixie: it should either happen in fetch or URL

[11:58:02.0000] <annevk>
Hixie: and everyone will have to invoke fetch synchronously I suppose, but that's okay

[11:58:02.0000] <Hixie>
well that would be even better, sure. right now that doesn't fit the proposa.

[11:58:04.0000] <Hixie>
proposal.

[11:59:13.0000] <Hixie>
in other news: does anyone recall/know if the difference in <a>'s activation behaviour and <area>'s activation behaviour, with respect to how to handle target="" in sandbox=""ed iframes, is intentional or not? :-)

[12:01:06.0000] <Hixie>
looks like i just forgot <area> when fixing http://www.w3.org/Bugs/Public/show_bug.cgi?id=13894

[12:02:43.0000] <annevk>
Hixie: http://lists.w3.org/Archives/Public/public-webapps/2013AprJun/0242.html (re blob URLs)

[12:04:00.0000] <Hixie>
well we can't always invoke fetch

[12:04:04.0000] <zcorpan>
hsivonen: MikeSmith: is there a story for automated tests for v.nu yet?

[12:04:13.0000] <Hixie>
e.g. <img> might want to delay forever if we add this new defer=""

[12:04:27.0000] <Hixie>
and <embed> has to fetch async for compat reasons

[12:04:33.0000] <Hixie>
(base url has to be resolved after setting)

[12:04:44.0000] <Hixie>
(after settings source url, that is)

[12:04:50.0000] <Hixie>
typos galore!

[12:05:11.0000] <annevk>
re-resolved?

[12:05:41.0000] <annevk>
Hixie: you can invoke fetch sync and then still wait

[12:06:04.0000] <Hixie>
how does that work?

[12:06:06.0000] <annevk>
Hixie: the only thing invoking fetch would do is take a reference to the object and then return early

[12:06:19.0000] <MikeSmith>
zcorpan: from W3C we have a GSOC proposal for a student to do some work related to that, and we have a great candidate who's submitted an GSOC application for it already

[12:06:20.0000] <Hixie>
yes my point is we don't even want to resolve the url in some cases

[12:06:36.0000] <Hixie>
e.g. <embed>

[12:06:45.0000] <annevk>
Hixie: or <a href> I suppose

[12:06:52.0000] <Hixie>
and in some cases we don't know what url to resolve, e.g. <img srcset>

[12:06:55.0000] <MikeSmith>
zcorpan: http://www.w3.org/2013/03/gsoc2013#guidelines

[12:07:03.0000] <Hixie>
especially <img srcset defer>

[12:07:06.0000] <Hixie>
or whatever we call it

[12:07:11.0000] <MikeSmith>
zcorpan: http://www.w3.org/2013/03/gsoc2013#validator-nu-testing

[12:07:30.0000] <annevk>
mkay

[12:08:10.0000] <Hixie>
like, what should we do if someone sets an img srcset to "blob:a 1x blob:b 2x blob:c 3x" ?

[12:08:16.0000] <Hixie>
er, with commas

[12:08:22.0000] <Hixie>
you get the idea

[12:08:52.0000] <annevk>
you figure out which to fetch and do it?

[12:09:24.0000] <Hixie>
and you don't revoke the other two?

[12:09:46.0000] <Hixie>
what if the user zooms in and out, or moves the window across to a low res screen then a high res screen?

[12:09:56.0000] <Hixie>
do you still have the images around? when do you forget them?

[12:11:18.0000] <annevk>
when you run the autorevoke stuff

[12:12:17.0000] <annevk>
not sure there's much winning to be had here

[12:18:17.0000] <Hixie>
MikeSmith: re https://www.w3.org/Bugs/Public/show_bug.cgi?id=21553#c9, by '"the main content" of each <article> (currently marked up as <li> with class="postitem".)', i meant the parenthetical to apply to "<article>", not to "the main content of each <article>".

[12:18:21.0000] <Hixie>
sorry for the ambiguity

[12:24:41.0000] <MikeSmith>
Hixie: ah, OK

[12:32:36.0000] <zcorpan>
MikeSmith: nice. keep me updated on that :-)

[12:34:08.0000] <zcorpan>
MikeSmith: it would be nice if tests could be written to be validator-agnostic and live on web-platform-tests or so

[12:39:07.0000] <zcorpan>
though maybe people following web-platform-tests don't want validator tests there

[12:39:40.0000] <jgraham>
Well

[12:39:46.0000] <jgraham>
I don't plan to review them at least

[12:39:58.0000] <jgraham>
But with critic filters I don't have to!

[14:06:02.0000] <annevk>
'[The "or" operator is not yet supported by ReSpec.]'

[14:06:05.0000] <annevk>
I don't even

[14:06:42.0000] <jsbell>
annevk: context?

[14:06:57.0000] <annevk>
http://lists.w3.org/Archives/Public/public-device-apis/2013Apr/0029.html

[14:07:50.0000] <Hixie>
o_O

[14:08:33.0000] <annevk>
ReSpec makes specs both way harder to read and then it does not even let you write a spec in the right way

[14:08:41.0000] <jsbell>
Seems to "work" for me, although in (foo or bar) foo and bar don't end up linked correctly. That said, linking to webidl default types seems broken in respec anyway at the moment (reported to robin)

[14:52:20.0000] <Hixie>
TabAtkins: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=18026 comment 8 paragraph 2

[15:01:24.0000] <rillian>
did the websec-mime-sniff draft become http://mimesniff.spec.whatwg.org or is one a fork of the other?

[15:06:01.0000] <Hixie>
rillian: yeah, iirc ietf basically didn't like it existing

[15:06:10.0000] <Hixie>
abarth would know more

[15:07:15.0000] <TabAtkins>
Hixie: No, getting a selector to match elements whose contents are numeric is not realistic in the short term.  It's basically equivalent in difficulty to getting one which matches a regex against text contents, which has been shot down for performance reasons for a long time.

[15:08:02.0000] <Hixie>
TabAtkins: can you comment to that effect on the bug? would be much appreciated. (also if you have any other ideas for addressing that use case, cos i'm all out of ideas on that front)

[15:08:33.0000] <rillian>
abarth: IIRC we were trying to limit things to the first 500 bytes and/or only mask/compare

[15:08:38.0000] <TabAtkins>
Yes, I can comment.  I think the right thing to do is simply having the column selectors/combinator that Selectors 4 has, which is sufficient.

[15:08:54.0000] <rillian>
which is why the mp3 and webm sniffing doesn't really work. Does that match your recollection?

[15:09:12.0000] <rillian>
Hixie: thanks

[15:09:18.0000] <Hixie>
TabAtkins: cool, thanks

[15:10:09.0000] <TabAtkins>
Hixie: Though... Hm, testing an attribute value for numeric-ness would probably work.

[15:10:22.0000] <TabAtkins>
It's roughly equivalent in difficulty to the existing attr operations.

[15:10:45.0000] <TabAtkins>
(Fundamental problem with testing text content is what to do with non-child text nodes.)

[15:13:14.0000] <Hixie>
i once proposed [attr>4] and related selectors

[15:13:31.0000] <Hixie>
fwiw

[15:13:40.0000] <TabAtkins>
Yeah, I wanna put those into either Selectors 4 or 5.

[15:13:50.0000] <TabAtkins>
We're trying to shut down 4, so it'll probably make 5.

[15:18:10.0000] <TabAtkins>
I wonder what kind of syntax would make sense to test if an attr was numeric.

[15:18:33.0000] <TabAtkins>
I mean, you could definitely do :matches([foo>0], [foo<=0]), but that's a bit verbose.

[15:20:57.0000] <Hixie>
TabAtkins: yeah

[15:21:21.0000] <Hixie>
TabAtkins: also, you should clearly switch to an unversioned development model so you could add things whenever :-)

[15:22:36.0000] <TabAtkins>
Hixie: As soon as we get CR of a spec, we push the unversioned url to a new version, so we can work on whatever we were waiting on.

[15:22:58.0000] <TabAtkins>
The only time versioning gets in our way now is the period between "ok, time to stabilize and finish what we've got" and "CR published!".

[15:23:53.0000] <TabAtkins>
Hmm, since we already have a type flag for case-insensitive matches, maybe we can just use that.  [foo n] matches if the foo attribute's value is numeric.

[15:24:26.0000] <TabAtkins>
Or just make a new comparison.  [foo <=> 0] tests for numericness. ^_^

[15:25:44.0000] <Hixie>
there's an unversioned url?

[15:26:07.0000] <TabAtkins>
Now there is!  Just drop the number (or dash-number) from any dev.w3.org css url, and you'll get the latest draft.

[15:26:13.0000] <Hixie>
ooo

[15:26:23.0000] <TabAtkins>
dev.w3.org/csswg/css-flexbox-1 and css-flexbox both point to the same spec, for example.

[15:26:46.0000] <TabAtkins>
We're planning to apply the same policy to our /TR drafts.

[15:27:33.0000] <TabAtkins>
All the old css3-foo links still work, because we added redirects, but the preferred url form now is "css-foo", or "css-foo-N" if you want a specific version.

[16:08:52.0000] <Hixie>
abarth: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=19662#c7

[16:09:06.0000] <abarth>
Hixie: hi

[16:09:09.0000] <abarth>
Hixie: looking

[16:12:13.0000] <abarth>
Hixie: too complicated for me to think about right now, sorry.  I've added it to my asana for this week

[16:14:55.0000] <Hixie>
thanks!

[16:16:06.0000] <Hixie>
abarth: while i have you here, are you still working on web origin?

[16:16:28.0000] <Hixie>
abarth: in particular, it seems a bit ambiguous what "host" means when the origin has an ipv6 address in it

[16:16:34.0000] <Hixie>
abarth: whether it has the []s or not

[16:16:44.0000] <abarth>
yeah, we never resolved that issue

[16:17:17.0000] <abarth>
do you know which way it ought to be?

[16:19:19.0000] <Hixie>
i think square brackets included?

[16:19:22.0000] <Hixie>
but i'm not really sure

[16:19:38.0000] <Hixie>
it would match url.spec.whateg.org

[16:19:40.0000] <Hixie>
whatwg even

[16:20:30.0000] <Hixie>
abarth: but really my question isn't so much about the serialisation, but about whether "the host part of the tuple" contains the square brackets or not

[16:20:42.0000] <Hixie>
abarth: and that i've really no idea if it should or not

[16:21:31.0000] <abarth>
this gets into how much browsers canonicalize IP addresses

[16:21:42.0000] <abarth>
As I recall, IE and Chrome do a lot of canonicalization

[16:21:54.0000] <abarth>
whereas Firefox and Safari do very little canonicalization

[16:22:07.0000] <abarth>
I don't remember the details about this particular bit of canonicalization

[16:22:15.0000] <Hixie>
url.spec.whatwg.org requires a specific form

[16:22:21.0000] <abarth>
for my money, i'd err on the side of more canonicalization

[16:22:59.0000] <abarth>
so, if you supply and IPv4 address in octal, it will end up as a dotted quad?

[16:23:40.0000] <Hixie>
no idea if he supports octal

[16:24:08.0000] <Hixie>
oh, ipv4 parsing isn't yet defined

[16:24:19.0000] <Hixie>
indeed host parsing isn't defined other than ipv6

[16:24:50.0000] <abarth>
i see

[16:25:29.0000] <abarth>
if folks like the general approach of canonicalizing IP addresses, then we should canonicalize IPv6 address to include the [ ]

[16:25:58.0000] <Hixie>
k

[16:26:07.0000] <Hixie>
so I should assume the 'host' part of an origin tuple includes the brackets?

[16:26:13.0000] <abarth>
yes

[16:26:32.0000] <Hixie>
is there somewhere i can file a bug on web origin, or does that go on your list too? :-)

[16:32:59.0000] <abarth>
Hixie: you can file an issue in this github project: https://github.com/abarth/websec

[16:33:58.0000] <Hixie>
k

[16:35:37.0000] <gsnedders>
hober: I presume you don't mind if I base the new html5lib documentation on http://edward.oconnor.cx/2009/08/djangosd-html5lib? :)

[16:46:09.0000] <gsnedders>
jgraham: We (html5lib) got mentioned in PEP-411!

[16:50:26.0000] <hober>
gsnedders: fine by me! i think most or all of my site is cc by sa, iirc

[16:50:48.0000] <TabAtkins>
Ah, you crazy viral copylefters.

[16:50:59.0000] <gsnedders>
hober: Yeah, it says so. But would be nice to have docs same license as everything else, and given I'm basically just ripping off your structure :P

[16:51:07.0000] <hober>
:)

[16:51:36.0000] <hober>
i forgot all about that talk

[16:51:47.0000] <gsnedders>
/me was just Googling for html5lib :)


2013-04-16
[19:46:59.0000] <MikeSmith>
http://www.w3.org/2010/02/rdfa/meetings/2013-02-28#Mike_Smith__28_tm__29___27_s_Complaint

[19:47:20.0000] <MikeSmith>
"q+ to ask why tool authors who work for us get to wag the dog here"

[19:47:46.0000] <MikeSmith>
gotta love that kind of response

[19:52:32.0000] <Hixie>
hahaha

[19:52:57.0000] <Hixie>
"damn these people sending us valid feedback, why do we have to make a good technology that considers things we hadn't thought of"

[19:53:20.0000] <Hixie>
this is as opposed to when _I_ disagree with you, when that happens i just try to drown you in a wall of text, amirite? ;-)

[19:56:27.0000] <zewt>
Hixie: but they thought of everything, therefore the feedback must be invalid, qed

[20:07:22.0000] <MikeSmith>
not even clear to me from those minutes what point he was trying to make

[20:07:29.0000] <MikeSmith>
"I think that the tool is broken."

[20:08:27.0000] <MikeSmith>
broken in that it actually implements what the spec says, instead of, I guess, what they intended for it to say, or what somebody should be expected to assume from reading it

[20:08:57.0000] <MikeSmith>
I've had some many cases of that with the RDFa specs

[20:09:38.0000] <MikeSmith>
e.g., before the spec never explicitly stated that the values of the various RDFa attributes could be the empty string

[20:11:09.0000] <MikeSmith>
so beack then I commented about that and I think I got the same kind of response; i.e., something like "Well of course they can be the empty string. ANy fool can see that. So the spec doesn't actually have to say it."

[20:11:47.0000] <Hixie>
to be fair, a lot of spec authors are of the mindset that specs don't have to be thorough and precise

[20:11:53.0000] <Hixie>
a _lot_ of w3c and ietf specs are like that

[20:12:04.0000] <Hixie>
they give a general idea, and leave the details to implementors

[20:12:07.0000] <Hixie>
HTML4 being a classic example

[20:12:17.0000] <Hixie>
but by no means either the worst or the first

[20:13:05.0000] <MikeSmith>
yeah

[20:13:18.0000] <MikeSmith>
but I would hope the bar is a lot higher these days

[20:14:14.0000] <Hixie>
a lot of people were never asked if they agreed with the kind of spec quality css2.1 started

[20:14:27.0000] <Hixie>
and so they're still in the old world

[20:14:33.0000] <Hixie>
where spec writing was easy :-)

[20:14:38.0000] <MikeSmith>
heh

[20:15:44.0000] <zewt>
wow, irssi is terrible

[20:15:51.0000] <zewt>
it takes _foo_ and underlines it

[20:16:18.0000] <zewt>
you know you've worked on crappy terminal irc client too long if you're implementing that and actually think it's not horrible gimmicky nonsense

[20:16:22.0000] <othermaciej>
implementors can't be trusted to figure out the details in a consistent way

[20:17:01.0000] <Hixie>
othermaciej: don't forget, this is the same mindset that thinks that non-conforming documents are irrelevant because interop doesn't matter if the author screwed up

[20:18:40.0000] <zewt>
(which itself assumes that a nonconforming document is the author's fault)

[20:20:02.0000] <Hixie>
it often is, to a first approximation, but that's of no consolation to the users when 97% of documents are trivially non-conforming in some way or other :-)

[20:21:13.0000] <zewt>
but 97% of documents are nonconforming != 97% of authors screwed up :P

[20:21:24.0000] <zewt>
(no, we're not disagreeing in any material way)

[00:04:31.0000] <Ms2ger>
annevk: I saw a Gecko patch for autoRevoke, btw

[00:25:18.0000] <zcorpan>
TabAtkins: do you have any URLs to sites that do smooth scrolling?

[01:00:27.0000] <zcorpan>
Hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=16920 seems good to me

[01:01:28.0000] <zcorpan>
hmm, except for "This should be done even if the video is paused, except if video playback hasn't ever started yet."

[01:34:17.0000] <annevk>
Why can https://cgi.w3.org/member-bin/MailingListQuery.pl?queryList=www-dom and such no longer be accessed with Member credentials?

[01:36:21.0000] <Ms2ger>
jgraham, so how do I get my pr mirrored?

[01:40:05.0000] <MikeSmith>
annevk: dunno but maybe not intentional

[01:40:21.0000] <MikeSmith>
annevk: best to e-mail sysreq⊙wo to ask

[01:40:25.0000] <jgraham>
Ms2ger: In theory, if you have push access, do nothing

[01:40:57.0000] <jgraham>
Ms2ger: Since the code is totally untested and therefore broken, tell dom to start looking for the stacktrace in the log

[02:18:40.0000] <annevk>
I wonder why filing bugs no longer works on HTML?

[02:18:46.0000] <annevk>
Or did I just file dozens?

[02:23:25.0000] <hsivonen>
zcorpan: there's a harness and then almost no tests

[02:24:05.0000] <hsivonen>
I know one should not read Internet comments, but there are just so many ill-informed people commenting on the Netflix HTML5 news on The Verge.

[02:29:06.0000] <zcorpan>
hsivonen: pointer to the harness?

[02:29:26.0000] <a-ja>
hsivonen: read article, but not comments....pretty silly ones, eh?

[02:30:07.0000] <zcorpan>
anyone have API design opinions on https://www.w3.org/Bugs/Public/show_bug.cgi?id=20328 and https://www.w3.org/Bugs/Public/show_bug.cgi?id=19753 ?

[02:31:10.0000] <annevk`>
Looks like a future

[02:35:21.0000] <zcorpan>
allElementsFromPoint(x,y, 'document') ?

[02:36:59.0000] <Ms2ger>
'document'?

[02:37:55.0000] <annevk>
lol, who is annevk`?

[02:38:21.0000] <annevk>
ah, should have known

[02:38:48.0000] <Ms2ger>
:)

[02:39:14.0000] <hsivonen>
a-ja: even the article was just press release journalism summarising the Netflix post without checking other sources for relevant info

[02:39:35.0000] <zcorpan>
Ms2ger: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20328 wants to use these methods outside the viewport, in the canvas area

[02:39:44.0000] <hsivonen>
zcorpan: https://bitbucket.org/validator/validator/src/0d0e5f1771339b55adda64089b12a32c5dacb78c/test-harness?at=default

[02:40:30.0000] <annevk>
zcorpan: document.hitTest({x:2, y:5}) -> static list (same as the one to be returned from document.find()

[02:42:17.0000] <zcorpan>
annevk: and what about choosing which area you want (viewport vs document)?

[02:42:25.0000] <zcorpan>
/me bbiab

[02:42:47.0000] <annevk>
context:"page" / "client" or some such?

[02:42:54.0000] <hsivonen>
the coverage at Ars is a bit better, but is still pretty close to mere press release journalism

[02:46:54.0000] <hsivonen>
at least over at Ars, the commenters have more clue than over at The Verge

[02:48:05.0000] <annevk>
Oh that is interesting. Netflix made a bet on DRM ending up in HTML?

[02:53:14.0000] <hsivonen>
annevk: well, at this point, EME shipping on Chrome OS is not a bet anymore

[03:10:59.0000] <marcosc>
darobin: in respec, how do I escape [[HasOwnProperty]] without respect trying to associate it with a biblio entry?

[03:11:16.0000] <marcosc>
s/respect/respec

[03:11:46.0000] <Ms2ger>
Bwahahaha

[03:11:50.0000] <marcosc>
heh

[03:11:53.0000] <Ms2ger>
Try [<!-- -->[

[03:12:15.0000] <marcosc>
no, Ms2ger, I'm sure Respec will handle this in a clever way

[03:12:19.0000] <marcosc>
:)

[03:18:03.0000] <Ms2ger>
Bwahahaha

[03:19:58.0000] <annevk>
You want to write a spec. You think, I'll use ReSpec. Now you have two problems.

[03:25:26.0000] <zcorpan>
annevk: do you have a fancy name for the new caretPositionFromPoint that returns a list?

[03:25:44.0000] <annevk>
caretHitTest?

[03:27:07.0000] <annevk>
note though that without defining hit testing this will create a ton of issues down the road :(

[03:31:07.0000] <annevk>
it also seems somewhat unclear what kind of list you want to return

[03:31:18.0000] <annevk>
e.g. if an element is transparent to hit testing, should it still be in the list?

[03:31:25.0000] <annevk>
where should it be in the list?

[03:31:28.0000] <marcosc>
annevk, one day we will convince mounir that there is only one true tool for spec writing :)

[03:32:03.0000] <annevk>
mounir is a co-chair now, he doesn't have to entertain the thought of spec writing anymore :p

[03:32:21.0000] <heycam>
/me wonders where this idea of co-chairing and not having to do spec writing comes from :)

[03:32:45.0000] <marcosc>
annevk pioneered that, heycam

[03:33:24.0000] <zcorpan>
it seems the stated problem can be solved by setting pointer-events:none on the top-most element and calling elementFromPoint or caretPositionFromPoint again

[03:33:40.0000] <marcosc>
heycam: annevk also told me that if we got on the TAG, we could lounge around all day by the beach and just get paid.

[03:33:55.0000] <marcosc>
:)

[03:36:38.0000] <annevk>
zcorpan: on the element returned?

[03:36:49.0000] <zcorpan>
annevk: yeah

[03:37:13.0000] <annevk>
zcorpan: yeah, I guess at some point you might want to have things like "ignore pointer-events, ignore transparancy, ..."

[03:37:20.0000] <zcorpan>
annevk: similar to the current workarounds that remove or hide the element, but without any visual glitch

[03:37:29.0000] <annevk>
zcorpan: which the dictionary will help with

[03:37:34.0000] <heycam>
marcosc, ha

[03:38:47.0000] <zcorpan>
annevk: do you mean that you would want to get an element even if it is transparent or has pointer-events:none ?

[03:40:11.0000] <annevk>
zcorpan: yeah maybe, would have to study hit testing APIs out there

[03:43:00.0000] <zcorpan>
/me finds http://ie.microsoft.com/testdrive/HTML5/HitTest/

[04:00:48.0000] <hsivonen>
wondering if I should file a bug to make Thunderbird and SeaMonkey always send email as UTF-8

[04:01:01.0000] <hsivonen>
surely everyone can receive UTF-8 these days

[04:01:10.0000] <hsivonen>
(except maybe Hixie on pine)

[04:01:59.0000] <annevk>
yeah I'm not sure why that hasn't happened, but I'm thinking there might be some legacy out there in Japan and such on phones

[04:02:22.0000] <annevk>
so that if you want your friend to be able to read the email, it better use the right encoding...

[04:04:22.0000] <hsivonen>
I think we should find out

[04:04:58.0000] <hsivonen>
/me is generally annoyed by not doing stuff because of *maybe* weird stuff in Japan

[04:05:01.0000] <jgraham>
/me also uses (al)pine (sometimes) fwiw

[04:05:11.0000] <hsivonen>
(actual weird stuff anywhere is another thing)

[04:05:32.0000] <hsivonen>
jgraham: how does it deal with incoming UTF-8?

[04:05:43.0000] <jgraham>
I don't reacall having character encoding issues

[04:05:55.0000] <jgraham>
But I haven't exactly tested

[04:05:57.0000] <hsivonen>
alpine was written in the mid-2000s, so it would be shameful for it not to support UTF-8

[04:06:40.0000] <hsivonen>
I guess I'll file the bug and see what happens to it

[04:07:13.0000] <annevk>
+1

[04:08:55.0000] <marcosc>
annevk: any chance http://*.spec.whatwg.org could be CORS enabled?

[04:10:01.0000] <jgraham>
hsivonen: Incoming UTF-8 seems to work fine

[04:10:30.0000] <annevk>
marcosc: yeah I guess

[04:10:31.0000] <odinho>
marcosc: Or at least fetch? :P

[04:10:31.0000] <hsivonen>
jgraham: great

[04:10:56.0000] <marcosc>
odinho: all would be nice :)

[04:11:13.0000] <marcosc>
annevk: should I file a bug somewhere?

[04:11:13.0000] <odinho>
I was just thinking about doogfooding.

[04:11:22.0000] <odinho>
Minus one o.

[04:11:23.0000] <marcosc>
fetching fetch?

[04:11:24.0000] <marcosc>
:)

[04:15:35.0000] <annevk>
so what's the way to make this work?

[04:15:57.0000] <annevk>
well, is there a simple way to add a header to the output of an entire domain

[04:16:29.0000] <annevk>
in fact, does .htaccess take effect if you put it above the directory the site is served from?

[04:18:44.0000] <jgraham>
annevk: No, but you can put it in the root, or change the apache config

[04:18:56.0000] <jgraham>
(the documentroot I mean)

[04:20:25.0000] <annevk>
stupid console

[04:20:43.0000] <annevk>
shows 304, but does not give a way to show what was actually returned from the cache

[04:21:49.0000] <annevk>
jgraham: so it does actually

[04:22:22.0000] <annevk>
marcosc: everything but dom.spec.whatwg.org now has Access-Control-Allow-Origin:*

[04:22:38.0000] <hsivonen>
bug filed https://bugzilla.mozilla.org/show_bug.cgi?id=862292

[04:22:43.0000] <marcosc>
thanks annevk!

[04:22:45.0000] <marcosc>
how come not dom?

[04:22:50.0000] <annevk>
by adding "Header set Access-Control-Allow-Origin *" to a .htaccess file shared across the domains

[04:23:03.0000] <annevk>
marcosc: I need to fix that one separately unfortunately

[04:23:13.0000] <annevk>
but should be easy

[04:23:14.0000] <marcosc>
np, thanks for doing that :)

[04:24:24.0000] <marcosc>
annevk: works well (confirmed with http://marcoscaceres.github.io/bib_entry_maker/)

[04:24:26.0000] <jgraham>
Holy crap it does

[04:24:30.0000] <jgraham>
That's insane

[04:25:02.0000] <annevk>
DOM has it too now

[04:26:54.0000] <marcosc>
need to add all these references to Respec ... normative references to Living Standards For. The. Win...!

[04:42:06.0000] <hsivonen>
when do blobs get garbage collected if revokeObjectURL is not called?

[04:57:16.0000] <zcorpan>
i wonder how to define offset* for <col>/<colgroup>

[05:02:13.0000] <zcorpan>
is it sufficient to say that elements with computed value of 'display' of 'table-column' and 'table-column-group' must be considered to be CSS layout boxes for the purpose of the offset* attributes?

[05:04:16.0000] <MikeSmith>
hsivonen, annevk : I did used to be that the mail clients on a lot of Japanese keitai did not support UTF-8 but I don't think that's the case any longer

[05:05:02.0000] <MikeSmith>
it used to be that many did not even have fonts with glyphs for latin characters that have diacritical marks and such, non-ascii

[05:05:26.0000] <MikeSmith>
but I think that's not that case any longer either

[05:06:58.0000] <MikeSmith>
lacking those glyphs it didn't matter much how a message was encoded anyway, because you wouldn't be able to read it regardless

[05:16:46.0000] <darobin>
marcosc: you use [[\Foo]]

[05:17:36.0000] <annevk>
hsivonen: I suspect when everything else is collected

[05:17:46.0000] <annevk>
hsivonen: although that might break fastback?

[05:48:22.0000] <annevk>
okay, so merging redirect fetch and CORS fetch was not a good idea :/

[05:51:48.0000] <karlcow>
[07:07]  * hsivonen is generally annoyed by not doing stuff because of *maybe* weird stuff in Japan

[05:52:13.0000] <karlcow>
I have the feeling is a combination of technology/culture at a certain point in space/time.

[05:52:35.0000] <karlcow>
I wonder what are the constraints on low-end phones in other territories

[05:54:25.0000] <karlcow>
maybe less an issue now given that the low end phones anyway are a lot more powerful than 10 years ago.

[05:54:27.0000] <karlcow>
bah

[05:54:46.0000] <annevk>
bah?

[05:57:38.0000] <karlcow>
ah. my 「bah」in a 「can't be helped」way.

[05:58:02.0000] <karlcow>
Shikata ga nai

[05:58:07.0000] <karlcow>
https://en.wikipedia.org/wiki/Shikata_ga_nai

[07:02:35.0000] <RobbertAtWork>
hsivonen: you did a lot of research on the HTML doctype in different browsers; is it a known effect that in IE6 the doctype is returned as comment node by getElementsByTagName()?

[07:02:41.0000] <RobbertAtWork>
hsivonen: freaks me out

[07:02:59.0000] <RobbertAtWork>
hsivonen: http://robbertbroersma.nl/demo/html5-ie6/ alerts "#comment" in IE6

[07:03:02.0000] <marcosc>
darobin: thanks!

[07:03:16.0000] <marcosc>
Ms2ger: see! darobin made something clever :)

[07:04:53.0000] <RobbertAtWork>
hsivonen: it's not IE6 only by the way, it's IE8 as well

[07:05:38.0000] <annevk>
RobbertAtWork: I think that was a known quirk of their old parser

[07:07:10.0000] <RobbertAtWork>
annevk: I see. Never knew I had to filter getElementsByTagName() results by nodeType

[07:08:39.0000] <annevk>
RobbertAtWork: http://ln.hixie.ch/?start=1137740632&count=1

[07:08:45.0000] <annevk>
RobbertAtWork: has some related fun stuff

[07:11:56.0000] <RobbertAtWork>
annevk: thanks!

[07:20:11.0000] <Ms2ger>
marcosc, unpossible

[07:59:57.0000] <karlcow>
"Use the glass://map URI to request a map." — developers.google.com/glass/location :(

[08:03:45.0000] <annevk>
It renders as an image?

[08:07:58.0000] <karlcow>
annevk: it seems

[08:07:59.0000] <karlcow>
<img src="glass://map?w=width&h=height&marker=0;latitude,longitude&marker=1;latitude,longitude&polyline=;latitude,longitude,latitude,longitude"

[08:08:00.0000] <karlcow>
  width="width"

[08:08:00.0000] <karlcow>
  height="height"/>

[08:08:42.0000] <annevk>
I wonder if they're using a full browser or a subset of sorts

[08:09:29.0000] <bholley>
Hixie: yt?

[08:09:44.0000] <annevk>
oh Java and Python

[08:11:08.0000] <bholley>
Hixie: am reading the spec correctly to mean that enumerating cross-origin DOM objects (Window and Location) shouldn't throw, but should instead return the appropriate cross-origin-accessible properties?

[08:11:30.0000] <bholley>
Hixie: that is to say, "get the raw properties and then filter"?

[08:13:15.0000] <annevk>
oh so everything is JSON

[08:13:30.0000] <annevk>
and JSON can include some raw HTML

[08:13:44.0000] <annevk>
that's some weird shit

[08:19:01.0000] <annevk>
smaug____: yo

[08:19:07.0000] <annevk>
smaug____: so upload progress events

[08:19:15.0000] <annevk>
smaug____: combined with a 307

[08:19:17.0000] <smaug____>
meeting

[08:19:26.0000] <annevk>
smaug____: your argument is invalid

[08:23:23.0000] <annevk>
So Gecko does not seem to dispatch a progress event in that sequence...

[08:23:36.0000] <annevk>
Lets try setting up some stuff to make a redirect work...

[08:43:19.0000] <nimbu>
Dear whatwg http://tjvantoll.com/2013/04/15/list-of-pseudo-elements-to-style-form-controls/ is terrible is this specced somewhere?

[08:43:49.0000] <nimbu>
or are there plans to?

[08:44:22.0000] <annevk>
only long term

[08:45:14.0000] <annevk>
nimbu: latest is https://groups.google.com/a/chromium.org/forum/?fromgroups=#!topic/blink-dev/ZAdZJWahyF8

[08:45:41.0000] <nimbu>
annevk: thnx!

[08:45:43.0000] <nimbu>
long term!!

[08:45:51.0000] <nimbu>
long term we will have 100 new nasty pseudo elms

[08:46:09.0000] <nimbu>
ok i will see what i can do.

[08:46:11.0000] <nimbu>
thnx annevk

[08:46:23.0000] <annevk>
well you know, HTML has been around for almost 20 years now and parsing got interoperable about a year ago

[08:47:51.0000] <annevk>
but yeah, I'd love for this to get fixed

[08:48:05.0000] <nimbu>
yeah no thanks to some super human efforts

[08:48:10.0000] <nimbu>
we dont want to be there again

[08:51:55.0000] <marcosc>
darobin: might be a bug, but using [[\Foo]] shows up as [[\Foo]] in the spec :(

[08:55:56.0000] <darobin>
marcosc: it works here — pointer?

[08:56:17.0000] <marcosc>
darobin: http://runtime.sysapps.org/

[08:56:25.0000] <marcosc>
search for [[\

[08:56:28.0000] <Ms2ger>
0x7fdde645398

[08:56:50.0000] <marcosc>
/me waits for robin to point out some dumbass mistake that marcos made 

[08:57:02.0000] <marcosc>
/me will find a way to blame Ms2ger

[08:58:53.0000] <darobin>
marcosc: shows up as  [[HasOwnProperty]] here...

[08:59:05.0000] <marcosc>
darobin: what browser?

[08:59:06.0000] <darobin>
I blame whatever benighted browser you must be using

[08:59:10.0000] <darobin>
Firefox

[08:59:14.0000] <darobin>
what else?

[08:59:21.0000] <marcosc>
um,

[08:59:31.0000] <marcosc>
that one with the funny color circle?

[08:59:42.0000] <darobin>
more seriously I doubt that there's a browser difference here

[08:59:48.0000] <marcosc>
checking

[08:59:50.0000] <darobin>
or rather, not in processing

[09:00:06.0000] <marcosc>
yeah, that would be weird on the Web

[09:00:06.0000] <darobin>
I suspect you have a rather old ReSpec aggressively cached maybe?

[09:00:17.0000] <darobin>
it would be weird for something this trivial :)

[09:00:46.0000] <darobin>
yeah, works in Chrome here

[09:00:53.0000] <darobin>
I suggest you reload with extreme prejudice

[09:00:55.0000] <marcosc>
ok, thanks

[09:00:59.0000] <marcosc>
will do that

[09:01:02.0000] <darobin>
looks like your Chrome is pulling off a classic Opera

[09:01:13.0000] <marcosc>
aren't they the same? :)

[09:01:18.0000] <marcosc>
/me drumroll please

[09:01:22.0000] <darobin>
ka-ching

[09:03:00.0000] <marcosc>
darobin: one more tiny question... in section 3.3, why is the algorithm counting from 14? (i.e., picking up from counter in section 3)

[09:03:38.0000] <darobin>
hah, that's funny

[09:03:59.0000] <darobin>
I don't believe that's something that ReSpec is doing...

[09:04:08.0000] <darobin>
it's... weird

[09:04:24.0000] <marcosc>
mkay

[09:05:10.0000] <darobin>
fascinating

[09:06:06.0000] <darobin>
actually someone did add support for algorithm styling, for whatever reason

[09:10:52.0000] <blink-bot>
good morning, Whatwg!

[09:11:17.0000] <darobin>
marcosc: I'm very puzzle about why the counter-reset doesn't kick in here

[09:12:08.0000] <marcosc>
darobin: yeah, I thought the markup was ok. About to look at the CSS

[09:12:54.0000] <darobin>
feel free to use a different class name

[09:13:03.0000] <darobin>
but there's something really weird going on in the styling there

[09:13:05.0000] <smaug____>
annevk: back

[09:13:09.0000] <smaug____>
haa haa

[09:13:20.0000] <smaug____>
good morning blink-bot

[09:13:36.0000] <marcosc>
darobin: yeah, gets more funky if you toggle "counter-reset: numsection"

[09:13:49.0000] <marcosc>
then it goes to 21?

[09:14:09.0000] <smaug____>
is that what dglazkov uses his 20% time for, being a blink-bot :p

[09:14:21.0000] <Ms2ger>
He's off half of the time

[09:14:24.0000] <dglazkov>
smaug____: I have no idea how that happened. Must've been drunk last week or something

[09:15:04.0000] <darobin>
marcosc: I have no idea who added that horrible style or why

[09:15:11.0000] <darobin>
I have half a mind to yank it

[09:15:18.0000] <darobin>
whoever did it didn't add a test

[09:15:25.0000] <marcosc>
ok, now it makes sense

[09:15:31.0000] <marcosc>
I'll change the class name

[09:15:38.0000] <darobin>
marcosc: that's what's weird: the counter-reset works once, but not the second time

[09:16:09.0000] <marcosc>
it's like because it's in a sub section it won't reset

[09:17:33.0000] <marcosc>
darobin: it breaks anyway for sub steps

[09:17:41.0000] <marcosc>
darobin: you should probably yank it

[09:18:23.0000] <marcosc>
darobin: see any step in "teps for processing an application manifest "

[09:18:30.0000] <marcosc>
"steps for processing an application manifest"

[09:18:32.0000] <marcosc>
even

[09:18:42.0000] <darobin>
marcosc: yeah, I'm going to pull it

[09:18:51.0000] <darobin>
just looking through history to figure out who added it

[09:19:00.0000] <marcosc>
git blame!!! git blame!!! :D

[09:19:29.0000] <marcosc>
we need a "git name and shame "

[09:22:15.0000] <darobin>
ok, I don't think anyone uses that

[09:22:42.0000] <marcosc>
/me updates the spec

[09:31:00.0000] <darobin>
marcosc: that particular weird piece of madness is now gone

[09:31:19.0000] <darobin>
it's a change grandfathered from something that came from v2 in HG

[09:31:20.0000] <marcosc>
darobin: thanks!!!

[09:31:23.0000] <darobin>
so, I blame hg

[09:31:32.0000] <jsbell>
darobin: new respec.js push? I note the list of "undefined definition" errors in the IDB spec is way down today.

[09:31:59.0000] <Ms2ger>
marcosc, did you mess with its references database?

[09:32:06.0000] <darobin>
jsbell: yes, I found that the missing definition detection code had an issue

[09:32:10.0000] <marcosc>
heh, Ms2ger not today :)

[09:32:15.0000] <darobin>
which I plugged

[09:32:29.0000] <darobin>
jsbell: I still need to look at your other problems

[09:32:52.0000] <darobin>
I wish people stopped having issues with the current WebIDL code though, it would give me time to actually make the WebIDL bits modern and nice and all :)

[09:33:13.0000] <marcosc>
darobin: users are the worst!

[09:33:15.0000] <marcosc>
:)

[09:33:29.0000] <darobin>
yeah, they want all sorts of shit :)

[09:33:36.0000] <marcosc>
takes all the fun out of writing code

[09:33:39.0000] <jsbell>
darobin: cool, thanks. The remaining errors list looks mostly legitimate; still interested in how to correctly reference an enum or interface member.

[09:33:43.0000] <jsbell>
WANT WANT WANT

[09:33:51.0000] <Ms2ger>
<dfn>?

[09:34:22.0000] <darobin>
jsbell: I'll look at that tomorrow, right now I've just finished doing my taxes and I need a beer :)

[09:34:25.0000] <Ms2ger>
darobin, also, IDB has issues with TypeError claiming to be a DOMException

[09:34:32.0000] <jsbell>
no rush

[09:34:43.0000] <jsbell>
ms2ger: in an "Exceptio table" ?

[09:34:47.0000] <jsbell>
+n

[09:34:50.0000] <jsbell>
or in the prose?

[09:34:57.0000] <Ms2ger>
Table

[09:35:05.0000] <jsbell>
We need to kill the tables

[09:35:12.0000] <darobin>
KILL THE TABLES

[09:35:18.0000] <Ms2ger>
Yes please

[09:35:28.0000] <darobin>
isn't that what Anssi's legacyThingie does?

[09:36:16.0000] <jsbell>
I'm waiting on https://www.w3.org/Bugs/Public/show_bug.cgi?id=21555 before replacing the exception tales with prose.

[09:36:23.0000] <jsbell>
tables. Can't type today.

[09:36:40.0000] <darobin>
jsbell: look at http://lists.w3.org/Archives/Public/public-sysapps/2013Apr/0132.html

[09:36:47.0000] <jsbell>
Ugh, wrong bug link too...

[09:36:55.0000] <jsbell>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=17681

[09:37:57.0000] <darobin>
jsbell: so yeah, it looks like noLegacyStyle: true in the config will kill the tables

[09:38:09.0000] <darobin>
of course, that'll kill whatever content you were expecting to put there, too :)

[09:38:17.0000] <Ms2ger>
darobin, ... again

[09:38:39.0000] <darobin>
Ms2ger: ?

[09:39:06.0000] <Ms2ger>
ReSpec made the tables disappear a while back

[09:39:08.0000] <jsbell>
right, that's the problem with the IDB spec. Not all of the exceptions are defined in prose.

[09:39:45.0000] <darobin>
Ms2ger: I think you're thinking about exceptions

[09:39:57.0000] <darobin>
completely different problem :)

[09:40:12.0000] <darobin>
IDB suffered when ReSpec dropped support for WebIDL exceptions

[09:41:06.0000] <Ms2ger>
darobin, I am talking about exceptions, yes

[09:41:14.0000] <jsbell>
Yep, we're relying on { idlOldStyleExceptions: true }

[09:41:22.0000] <Ms2ger>
darobin, what are you talking about, if not exceptions?

[09:41:39.0000] <jsbell>
I was talking about exceptions too, so confused. :)

[09:41:47.0000] <darobin>
I think I should add a feature to do spec linting, that would also collect the editors' emails, and would email them insults when they're doing stuff wrong :)

[09:41:57.0000] <darobin>
Ms2ger: there are other tables, parameters and shit like that

[09:42:01.0000] <darobin>
those need to go as well

[09:42:04.0000] <darobin>
in the grand scheme of things

[09:42:24.0000] <darobin>
which is moving everyone to better specs and all

[09:42:40.0000] <Ms2ger>
/me suggests anolis for that

[09:43:29.0000] <darobin>
/me giggles

[09:43:36.0000] <Hixie>
bholley: i hope so, but wouldn't guarantee it

[09:43:40.0000] <Hixie>
annevk: how does filing bugs not work?

[09:43:43.0000] <darobin>
anyway, not that you fine people don't make for enjoyable conversation

[09:43:48.0000] <darobin>
but as I was saying -> beer

[09:43:55.0000] <darobin>
thanks for the laughs though Ms2ger ;)

[09:44:51.0000] <bholley>
Hixie: can you confirm on https://bugzilla.mozilla.org/show_bug.cgi?id=862380 when you get the chance?

[09:45:23.0000] <Hixie>
send me mail - i'm mostly afk for the next few days

[09:46:09.0000] <Ms2ger>
Tired from the sprint the last few days? :)

[09:48:12.0000] <Hixie>
you could say that

[10:03:26.0000] <annevk>
Hixie: dunno, I filed one manually

[10:04:23.0000] <Hixie>
what wasn't working?

[10:09:16.0000] <annevk>
Hixie: using the form from within Firefox

[10:21:56.0000] <annevk>
Hixie: seems to happen in http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html

[10:22:04.0000] <annevk>
Hixie: tried to report a bug about blink

[10:30:37.0000] <annevk>
smaug____: see public-webapps I suppose

[10:31:19.0000] <smaug____>
k

[10:33:36.0000] <annevk>
I'm still a bit stuck modelling http://fetch.spec.whatwg.org/#fetching

[10:34:29.0000] <annevk>
E.g. synchronous / asynchronous sharing a code path is hard.

[10:34:58.0000] <annevk>
The user being able to cancel the request at any point, regardless of synchronous, is hard.

[10:35:47.0000] <annevk>
Upload progress tasks being able to spain several requests, is hard. Although I guess the same goes for normal progress tasks...

[10:36:41.0000] <annevk>
I'm very much cheating my way out of this engineering challenge by having a set of encompassing requirements that accompany the algorithm.

[10:36:56.0000] <annevk>
Sorry, meant to so I'm close to doing that cheating.

[11:12:50.0000] <Ms2ger>
Nothing new on http://tc39memes.tumblr.com/ lately...

[11:17:39.0000] <jsbell>
Ms2ger: https://twitter.com/FakeAlexRussell isn't enough funny for you?

[11:32:36.0000] <karlcow>
A proposal for unprefixing https://groups.google.com/a/chromium.org/forum/m/?fromgroups#!topic/blink-dev/E0OkYhvF7q8

[11:51:15.0000] <Ms2ger>
TabAtkins, people still haven't figured out that you can have requirements for multiple conformance classes?

[15:43:19.0000] <TabAtkins>
zcorpan: Having to one-by-one strip out all the elements for hit-testing until you hit the bottom is not a good solution. :/

[15:43:33.0000] <TabAtkins>
zcorpan: Plus, it's actually technically wrong, since a child can be below a parent in stacking order.


2013-04-17
[17:38:23.0000] <gavinc>
heh, thanks TabAtkins for the comment to the RDF-WG, feeling very lonely beating that drum sometimes

[17:38:34.0000] <TabAtkins>
gavinc: No problem!

[17:38:56.0000] <TabAtkins>
This is for the json-ld comment?

[17:39:00.0000] <gavinc>
/me nods

[17:43:03.0000] <gavinc>
Also starting to get all the lovely "You can't link to DOM4 and HTML5" nonsense

[17:43:13.0000] <TabAtkins>
Asdhfa;lsjkd

[17:46:17.0000] <gsnedders>
gavinc: Because they're drafts?

[17:46:26.0000] <gavinc>
Yep.

[17:47:04.0000] <gsnedders>
gavinc: So it's fine if I build my JSON-LD impl on top of dbaron's desk HTML4 impl?

[17:47:14.0000] <gavinc>
Nope.

[17:47:45.0000] <gsnedders>
But I like building on top of solid bases!

[17:47:51.0000] <gavinc>
Same with new HTML data type ;) Doesn't work with DOM3, only works with DOM4 but may link to DOM3 anyway, yay process :D

[17:48:50.0000] <gsnedders>
Complete and utter bullshit. As normal.

[17:48:55.0000] <TabAtkins>
Wait, json-ld allows html?

[17:49:05.0000] <TabAtkins>
Like, not as strings?  Or just as strings?

[17:52:46.0000] <gavinc>
RDF does.

[17:52:55.0000] <gavinc>
https://dvcs.w3.org/hg/rdf/raw-file/default/rdf-concepts/index.html#section-html

[17:53:04.0000] <gavinc>
therefor, JSON-LD does.

[17:54:06.0000] <TabAtkins>
So... as strings, or as raw?

[17:54:36.0000] <gavinc>
... both?

[17:54:40.0000] <gavinc>
ewll

[17:54:45.0000] <gavinc>
JSON-LD as Strings

[17:54:47.0000] <TabAtkins>
Okay.  So it's not actually JSON at all, then.

[17:54:50.0000] <TabAtkins>
Ah, kk.

[17:55:02.0000] <gavinc>
but by "value" as a DOM

[17:56:03.0000] <gavinc>
there is a lexical-to-value mapping, which defined at the moment in terms of DOM4 and the fragment parsing algorithm, but what SHOULD be https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/templates/index.html#parsing

[17:56:47.0000] <zewt>
heh, just to confuse things, the json api for java is "JSONObject" (which is nothing but a simple map with some helpers on it), so now people think there's such a thing as a "json object"

[17:56:50.0000] <gavinc>
since the design is for a fragment of HTML that came from or should go into a complete HTML document

[17:57:10.0000] <zewt>
gotta love trivially simple json apis using inheritance where it makes no sense whatsoever

[17:57:28.0000] <manu1>
/me notices people talking about JSON-LD... wakes up.

[17:57:42.0000] <gavinc>
/me waves to manu1

[17:57:54.0000] <manu1>
/me waves back at gavinc. :)

[17:57:56.0000] <TabAtkins>
manu1: Just json-ld people being bureaucracy-stupid.

[17:58:15.0000] <TabAtkins>
We've already complained in the appropriate channels, and are just bitching now. ^_^

[17:58:48.0000] <zewt>
that's what irc is there for

[17:58:59.0000] <manu1>
TabAtkins: Well, kinda... we followed the node.js model... and want to know why we should do futures instead of the node.js callback approach.

[17:59:24.0000] <manu1>
TabAtkins: Don't know if you know this or not, but I'm the primary editor of the JSON-LD 1.0 Syntax spec... :)

[17:59:28.0000] <gavinc>
Yes, we depend on DOM4 and also a spec (template or some other fragment parsing method) that isn't really at all done yet, deal with it ;)

[17:59:35.0000] <manu1>
so I'd like to think that we're not being as retarded as it's coming across, but maybe we are.

[18:00:01.0000] <TabAtkins>
manu1: Because the node.js/jquery model is based on a pre-promises world.  Promises are the *correct* solution to handling completion/error callbacks.

[18:00:21.0000] <TabAtkins>
And DOM Futures are the implementation fo promises.

[18:00:35.0000] <manu1>
TabAtkins: one approach we discussed was doing a futures-lite approach w/o referencing the DOM4 spec.

[18:00:51.0000] <TabAtkins>
manu1: That's the bureaucracy-stupid I was talking about.

[18:00:56.0000] <manu1>
TabAtkins: got a link to some long-form argument for why promises are better than the node.js model?

[18:00:58.0000] <gavinc>
Just reference DOM4! If you have any HTML literals your going to need it anyway ;)

[18:01:09.0000] <gavinc>
I don't care what eric says :P

[18:01:18.0000] <manu1>
gavinc: We don't have HTML literals, luckily, in JSON-LD.

[18:01:29.0000] <zewt>
would sure have been nice if there was any discussion at all (use cases, justification, design)about "futures" (painfully buzzwordy name, by the way) on whatwg or webapps, rather than them just mysteriously appearing wholly formed; very much took me by surprise

[18:01:40.0000] <gavinc>
manu1: Yeah, but RDF Concepts does ;)

[18:01:46.0000] <manu1>
/me nods at zewt.

[18:01:53.0000] <TabAtkins>
manu1: Pretending that you have to engineer around a reference is putting bureaucracy ahead of *all the rest of the more important constituency groups*.

[18:02:08.0000] <TabAtkins>
zewt: There was tons of discussion, over the last several years of development in the rest of Javascript land.

[18:02:35.0000] <zewt>
none that i've seen, except in the form of JS novices not understanding events

[18:02:39.0000] <manu1>
TabAtkins: yes, yes, I am a believer... you don't have to convince me of that point. However, I also need to thread the W3C process needle, so I need to create some clear path forward that doesn't require me to go an change W3C process.

[18:03:11.0000] <TabAtkins>
But basically: Futures turn the concept of "an event that will either complete or error at some future time" into a first-class object.  This (a) gives us a standard API to design against, which is better for authors, and (b) lets us design a useful algebra over them, which is non-trivial in the current ad-hoc callback/event world.

[18:03:23.0000] <manu1>
TabAtkins: If there was tons of discussion, surely somebody has written up a clear set of argumentation for why futures are the future.

[18:03:31.0000] <TabAtkins>
manu1: The process needle is yours to thread, but it's the least important thing in the entire spec.

[18:03:53.0000] <gavinc>
/me coughs at manu1, and being at PR is important... 'cause? ;)

[18:03:57.0000] <TabAtkins>
manu1: Importantly, if you're making bad technical decisions just to hit the vaunted "Rec" status, you're doing the wrong thing.

[18:04:13.0000] <zewt>
(mostly I don't like that it's a separate underlying mechanism, instead of an abstraction on events, so we don't have an ugly low-level schism)

[18:04:22.0000] <TabAtkins>
Remember the ordering of constituencies: technical purity < implementors < authors < users.

[18:04:36.0000] <TabAtkins>
And "bureaucracy" is either part of technical purity, or something even further below it.

[18:05:07.0000] <manu1>
TabAtkins: There are two things going on here: 1) I'm not entirely convinced that futures are the messiah they're being made out to be and I'd like to read something about why they are, and 2) W3C process stuff is a reality I have to deal with, so if I'm going to ask the JSON-LD group to go through another Last Call, I'd like to have a very good reason to do so.

[18:05:48.0000] <TabAtkins>
zewt: Events have their own baggage and problems.  They're reasonably well-designed for their original use-case, that of dealing with events in a tree structure.  They're overdesigned for anything not in a tree structure.

[18:05:51.0000] <manu1>
gavinc: PR / REC is important because it means I can move on to working on the Web Payments stuff ( https://hacks.mozilla.org/2013/04/web-payments-with-payswarm-identity-part-1-of-3/ ) instead of dealing w/ low-level representation stuff :)

[18:06:00.0000] <TabAtkins>
Overdesigned/expensive (you can't, for example, ever forget about listeners).

[18:06:26.0000] <TabAtkins>
manu1: Or you can just leave the spec at CR!  That's also a solution, and lets you do your thing.

[18:06:37.0000] <TabAtkins>
A spec isn't "done" at Rec any more than it is at CR.

[18:06:50.0000] <manu1>
TabAtkins: Please, please, please write a blog post about this, or ask someone that can to do so - it's going to be very difficult for me to make an argument based on what I'm seeing in this chat channel.

[18:06:55.0000] <zewt>
the design is very well-understood

[18:07:24.0000] <gavinc>
manu1: there is a comment in rdf-wg-comments ;) perhaps he should expand it ? :D

[18:07:38.0000] <manu1>
that would work too.

[18:07:47.0000] <TabAtkins>
manu1: Planning on doing so.  I'm currently messing around with my blog post for a DOM EventStream proposal, built on the precedent of Futures. ^_^

[18:08:17.0000] <manu1>
TabAtkins: If we can figure out a way to put futures into the JSON-LD API and get to REC, let's do that (if it's the right thing to do).

[18:08:29.0000] <zewt>
anyway, it would just have been nice to have the opportunity to offer input and perhaps a counterproposal, but the api appearing whole cloth makes me not motivated to bother (seems like minds have already been made up)

[18:08:51.0000] <TabAtkins>
manu1: And if it's a choice between putting futures in, and going to Rec, the right choice is to put futures in.  Rec is a non-goal for a spec, it's solely a process checkbox.

[18:09:22.0000] <TabAtkins>
zewt: It's based directly on Promises/Aplus, which has established itself as being the most popular and most theoretically reasonable version of promises.

[18:09:28.0000] <manu1>
TabAtkins: Not to certain big companies that want to use the technology... REC is an internal requirement for them.

[18:10:05.0000] <manu1>
TabAtkins: Like it or not, not all companies believe in perma-development for specs (even if it is reality in many cases)

[18:10:18.0000] <gavinc>
RDF-WG already has to deal with the DOM4 issue, or lie about rdf:HTML

[18:10:40.0000] <TabAtkins>
manu1: They're welcome to change their policies.  Hurting the entire web for the sake of short-term corporate silliness is not a good tradeoff.

[18:10:41.0000] <manu1>
Why does rdf:HTML depend on DOM4 ?

[18:10:50.0000] <TabAtkins>
manu1: It depends on the fragment parsing algorithm.

[18:11:09.0000] <zewt>
"most popular" isn't exactly a compelling argument :)

[18:11:11.0000] <manu1>
TabAtkins: You're doing your own 'technical purity' argument there - you're arguing from a 'philosophical purity' standpoint.

[18:11:45.0000] <zewt>
manu1: not sure i'd call "good for the web" a philosophical point

[18:12:08.0000] <manu1>
TabAtkins: I happen to agree with much of your philosophical purity arguments, but I also have a business to run and getting things to a state that convinces other companies to start using the technology is a driving factor for the work we do. :)

[18:12:13.0000] <TabAtkins>
manu1: No, I'm arguing for the users.  Just a wider set of users - the web, and the *actual developers* in those companies - rather than the company lawyers.

[18:12:46.0000] <manu1>
zewt: It is a philosophical point :) - I agree with it, but let's call it what it is - it's a philosophy... just like 'good for large corporate interests' is a philosophy... and 'good for the market' is a philosophy.

[18:12:48.0000] <TabAtkins>
This is no more a theoretical purity argument than arguing about a point relevant to, say, disabled users.

[18:13:02.0000] <tantek>
manu1 - re: "REC is an internal requirement … for certain big companies that want to use the technology" - those companies rarely (ever?) make/break any kind of adoption curve - they're very much late adopters (after the market has settled on something) so there's no need to cater to such companies whatsoever.

[18:13:12.0000] <TabAtkins>
(Not intending to invoke a11y deliberately, just the first relevant type of group that pops in.)

[18:13:43.0000] <zewt>
manu1: however you put it, i definitely don't see an analogy from it to "technical purity"

[18:14:17.0000] <manu1>
tantek, TabAtkins, zewt: Ok, we're venturing into perma-thread territory here, so I retract my desire to discuss philosophical points (or whether or not something is a philosophical point).

[18:14:41.0000] <zewt>
uh okay? heh

[18:15:01.0000] <tantek>
do you also retract bringing up whether REC matters and large companies that care (or not) about REC status? there is no new data on that front.

[18:15:09.0000] <manu1>
TabAtkins, tantek, zewt: All I'd like help with is figuring out if futures are the right solution for the JSON-LD API, how to get futures into the JSON-LD API, and get to REC at W3C. It seems like something that is do-able... just wondering if anybody else in here has been through that process before.

[18:15:11.0000] <TabAtkins>
Recall that I live mostly in a group that strongly follows W3C Process, but also manages to be agile and make good technical decisions without fretting about this kind of thing.

[18:16:22.0000] <manu1>
tantek: I've had discussions with large companies that are thought of as cutting-edge that have asked us when certain specs we're working on are going to get to REC, because they'd like to adopt them when they do.

[18:16:23.0000] <tantek>
manu1 - which process? taking something to REC? have a few of those. turned out to not really matter much between CR and REC>

[18:16:59.0000] <manu1>
tantek: No, the process of taking a W3C spec to REC with an API that depends on futures.

[18:17:08.0000] <manu1>
tantek: specifically, DOM4 Futures.

[18:17:41.0000] <manu1>
tantek: Also, documentation on why futures are preferable over node.js-style continuation callbacks.

[18:17:53.0000] <manu1>
tantek: as in a complete blog post on the matter.

[18:17:57.0000] <tantek>
manu1 "companies that are actually (not just thought of as) cutting-edge" ∩ "when certain specs we're working on are going to get to REC, because they'd like to adopt them when they do" = ∅

[18:18:23.0000] <TabAtkins>
(Technically, it's not DOM4.  It's WHATWG's DOM.)

[18:18:36.0000] <manu1>
even worse :)

[18:18:45.0000] <manu1>
(as in worse from a political standpoint)

[18:18:54.0000] <manu1>
(not a technical one)

[18:19:05.0000] <tantek>
manu1 - if caring about the politics is stopping you from getting work done, you're doing it wrong.

[18:19:43.0000] <manu1>
tantek: It's not stopping us from getting work done at all, I think you're missing some details of what we're discussing.

[18:20:12.0000] <tantek>
spec it, test it, code it, ship it - if what you've spec'd/tested/coded is good, others will do so as well and interoperate, if it's not, they won't. no amount of political gladhandling/announcements/PR will make a difference compared to implementing/shipping.

[18:20:52.0000] <tantek>
manu1 - you're the one that bothers to bring up "worse from a political standpoint" - ergo, you care about the politics. if you didn't care about the politics, you wouldn't bring them up.

[18:21:07.0000] <manu1>
tantek: we've spec'd it, tested it, coded it and shipped it. Nobody complained except for Tab and Boris.

[18:21:27.0000] <manu1>
When Boris and Tab say something, I try to listen and figure out why they're saying what they're saying (out of respect for their point of view)

[18:21:35.0000] <manu1>
so this is me trying to figure out what they're saying.

[18:21:41.0000] <tantek>
shipping = interoperable implementations in an implementation report

[18:21:45.0000] <tantek>
not shipping a spec

[18:22:00.0000] <manu1>
we have interoperable implementations in an implementation report - 5 of them.

[18:22:24.0000] <tantek>
on the public web? or is this more pretend-web? (intranets etc.)

[18:22:32.0000] <manu1>
public web

[18:23:01.0000] <tantek>
well congrats then. now you just have to iterate to keep up with market demands.

[18:23:17.0000] <manu1>
tantek: That's why I'm having this discussion w/ TabAtkins :)

[18:23:33.0000] <manu1>
tantek: Trying to figure out if we need to change from node.js-style callbacks to futures

[18:23:34.0000] <tantek>
yup - asking why futures are good technically is a good path forward

[18:23:43.0000] <tantek>
all the politics/process/REC crap is not

[18:23:47.0000] <manu1>
tantek: exactly - which is what we're doing here.

[18:24:18.0000] <manu1>
tantek: Know any convincing posts on why futures are better than node.js-style callbacks?

[18:24:34.0000] <tantek>
manu1 - your technical message/questions would be more credible with fewer (preferably zero) mentions of politics/process/REC crap

[18:24:52.0000] <tantek>
have found that when people mention both, they're confused about the relevance (lack thereof) of politics/process/REC crap

[18:24:55.0000] <manu1>
tantek: Tab is the one that brought up the politics/process/REC crap.

[18:25:15.0000] <manu1>
I was responding to an e-mail he sent to a W3C mailing list.

[18:25:19.0000] <TabAtkins>
Okay, finished my current batch of edits to my event-stream proposal.  I'll write up a quick Futures defense now.

[18:25:32.0000] <manu1>
TabAtkins: /thank you/ - that would be super helpful.

[18:25:52.0000] <manu1>
/me goes back to sleep.

[18:26:01.0000] <tantek>
manu1 - seemed to me you were the one discussing it more. but then hey if you're willing to drop it, so am I. ;)

[18:26:30.0000] <manu1>
tantek: It's a perma-thread that doesn't result in technical work getting done... so yeah, let's drop it. :)

[18:30:15.0000] <Hixie>
ok i worked out why annevk wasn't able to file bugs

[18:30:28.0000] <Hixie>
turns out i had an early "return" right before the code that actually filed the bug

[18:30:37.0000] <Hixie>
so that i could test it without filing bugs the other day

[18:30:41.0000] <Hixie>
"oops"

[18:30:50.0000] <Hixie>
so if anyone tried to file bugs... sorry...

[18:41:46.0000] <tantek>
in other news, EmotionML apparently exited CR: http://www.w3.org/TR/2013/PR-emotionml-20130416 with supposedly several implementations: http://www.w3.org/2002/mmi/2013/emotionml-ir/#systems

[18:44:07.0000] <tantek>
<emotionml xmlns="http://www.w3.org/2009/10/emotionml"><emotion><category name="Surprise" value="0.5"/><category name="Amusement" value="0.5"/></emotion></emotionml>

[18:53:22.0000] <a-ja>
<emotion><category name="Sarcasm" value="1.0"/>I didn't even get a mention in the spec</emotion>

[20:56:54.0000] <superm401>
I'd like to request an account on http://wiki.whatwg.org/ so I can register a meta extension.

[21:14:33.0000] <MikeSmith>
superm401: what username?

[21:14:45.0000] <superm401>
mattflaschen

[01:39:06.0000] <zcorpan>
anyone here have opinions on https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html#AlternateNames ?

[02:49:49.0000] <annevk>
zcorpan: there's no way that can be killed?

[04:19:03.0000] <zcorpan>
annevk: of course there is a way.

[04:20:32.0000] <zcorpan>
annevk: i bet it would be effective if mozilla were to say "we're not gonna implement the legacy names" :-)

[04:20:59.0000] <annevk>
For all I know we asked for them to be defined :)

[04:21:16.0000] <annevk>
Though that specification is sketchy at best

[04:21:21.0000] <zcorpan>
i don't know what the history is here

[04:21:33.0000] <zcorpan>
except apparently gassa had complained about it before me

[04:22:09.0000] <zcorpan>
i would be happier with just the legacy names than duplicated API surface

[04:22:28.0000] <zcorpan>
but i don't see that the compat claim is valid in the first place

[04:24:30.0000] <zcorpan>
s/gassa/mage/

[04:26:50.0000] <annevk>
mage?

[04:27:01.0000] <annevk>
You could make that comment on the mailing list

[04:27:11.0000] <annevk>
You should probably also suggest they ask review on public-script-coord

[04:28:17.0000] <annevk>
I guess it would be clearer if I made the http/https stuff in http://fetch.spec.whatwg.org/#basic-fetch a list of steps right?

[04:57:40.0000] <zcorpan>
annevk: i already commented on the mailing list. though haven't suggested -coord

[05:43:59.0000] <hsivonen>
so much fallout from the Encoding Standard tweaking the meaning of the UTF-16 label

[05:44:16.0000] <zcorpan>
apparently using ` in commit message is a bad idea

[05:44:40.0000] <annevk>
hsivonen: the idea was for there not to be fallout, if there is maybe we should fix the spec?

[05:46:18.0000] <hsivonen>
annevk: let's not go there before analyzing this

[05:46:24.0000] <annevk>
k

[05:50:43.0000] <hsivonen>
aargh. yet another use of the encoding detector that I was unaware of

[05:51:04.0000] <hsivonen>
when attaching a file, guessing the charset and then sending the guess as authoritative metadata

[05:51:18.0000] <hsivonen>
yay authoritative metadata

[06:10:45.0000] <hsivonen>
Sharing encoding code between a Web engine and an email client is such a pain.

[06:16:47.0000] <annevk>
I sort of think that the email encoding stuff should match the web encoding stuff. But if they've really diverged then it is indeed problematic :(

[06:18:27.0000] <zcorpan>
hmm, i get easily confused by writing modes. anyone have suggestions for how to fix the spec here? http://www.w3.org/mid/A592E245B36A8949BDB0A302B375FB4E0D242ABFEC⊙Mml

[06:18:27.0000] <zcorpan>
i was thinking of defining terms "logical top" etc, but i'm not sure how things work when the ancestor chain have different writing modes or stuff like that

[06:29:10.0000] <annevk>
CSS really ought to define all these box concepts in the long run so CSSOM can simply provide script hooks

[06:29:32.0000] <annevk>
In other words, you don't want to define the model twice

[07:03:32.0000] <hsivonen>
I really need to make moving bugzilla.validator.nu out to a different VM and making validator.nu not to default to HTML4 higher priorities

[07:03:37.0000] <hsivonen>
:-(

[07:17:55.0000] <MikeSmith>
hsivonen: I can work on the not-default-to-HTML4 part if you want

[07:18:20.0000] <MikeSmith>
bugzilla.validator.nu has been painfully slow for a couple of weeks now at least

[07:18:30.0000] <MikeSmith>
often to the point of being near-unusable

[07:19:10.0000] <MikeSmith>
but honestly not sure how many other people are affected by it

[07:19:21.0000] <MikeSmith>
I think I'm the main user by a longshot

[07:20:01.0000] <MikeSmith>
still, I can imagine that it might have caused a few people who wanted to report a bug to just give up

[07:20:49.0000] <MikeSmith>
while waiting for it to respond with the bug-entry form

[07:23:01.0000] <hsivonen>
MikeSmith: well, if you work on the not-default-to-HTML4 part, bugzilla.validator.nu is likely to become faster :-)

[07:23:33.0000] <hsivonen>
but really, I should different things on different VMs and just pay a little more for hosting

[07:23:39.0000] <hsivonen>
*should put

[07:24:04.0000] <hsivonen>
but not gonna happen in the next 3 weeks :-/

[07:24:08.0000] <hsivonen>
maybe after

[07:26:38.0000] <MikeSmith>
ok

[07:36:16.0000] <annevk>
Anyone a better name for "basic fetch"?

[07:36:41.0000] <annevk>
Oh, and reviewing http://fetch.spec.whatwg.org/#fetching is appreciated, even though not all the details are hashed out yet

[07:39:26.0000] <gavinc>
"For now, unfortunate as it is, file URLs are left as an exercise for the reader." wimp

[07:41:51.0000] <annevk>
gavinc: I defined file URL parsing (by generalising a Windows-specific bit to happen everywhere), file URL fetching however is even more heavily tied to platforms :(

[07:42:27.0000] <annevk>
Also, all browsers have a different origin model with respect to file URLs.

[07:42:34.0000] <gavinc>
yeah :\

[07:46:39.0000] <gavinc>
annevk: after 10, of http... if  manual redirect flag IS set... does it return the response or the  redirect? I guess it's the response, which is now a  redirect per 9... okay

[07:46:47.0000] <gavinc>
err... per 8

[07:47:25.0000] <annevk>
gavinc: yeah, you'd get a response that's flagged as a redirect

[07:49:01.0000] <annevk>
gavinc: I've been thinking of changing that to something like set response's type to redirect

[07:49:09.0000] <gavinc>
+1

[07:50:41.0000] <gavinc>
http: 5, cookies, is where anything dealing with the fact that some cookies should or shouldn't be sent via HTTP and only HTTPS will end up living?

[07:51:30.0000] <gavinc>
Or just going to refer to 6265?

[07:52:42.0000] <annevk>
It's mostly about whether we'll include them at all

[07:53:05.0000] <annevk>
And then we need equivalent wording for the response, to whether or not Set-Cookie headers will be honored

[07:55:55.0000] <manu-db>
TabAtkins, annevk, gavinc: Response to Tab's post on DOM4 Futures and JSON-LD API, would like to know if I'm wrong: http://lists.w3.org/Archives/Public/public-linked-json/2013Apr/0016.html

[08:02:14.0000] <annevk>
manu-db: the spec is done...

[08:02:20.0000] <annevk>
manu-db: do the other languages support Web IDL?

[08:02:37.0000] <annevk>
in general that kind of argumentation for web apis is flawed imo

[08:37:55.0000] <TabAtkins>
zewt: See my blog post at http://www.xanthir.com/b4PY0 for an explanation of the value of Futures.

[08:41:21.0000] <TabAtkins>
manu-db: I have rebuttals to a few of your points, but I'm not subscribed to that list.  What's the best way to respond for you?

[08:44:41.0000] <darobin_>
oooh, XML Core asking about the removal of xml* properties from the DOM!

[08:44:47.0000] <darobin_>
/me gets some popcorn

[08:45:56.0000] <Ms2ger>
/me wishes that people would spend their time on adding tests rather than trying to remove them

[08:46:39.0000] <TabAtkins>
manu-db: Oh wait, I see you kept me in the reply loop.  I'll just reply to that, then.  (Sorry, hadn't gotten through all my mail yet.)

[08:49:40.0000] <manu-db>
TabAtkins: Yeah, you should be able to respond to public-rdf-comments - your comment should stick there (it's an open list)

[08:49:47.0000] <Ms2ger>
tobie, stop trolling and go do something useful

[08:50:07.0000] <tobie>
Ms2ger: :) I return the comment.

[08:50:46.0000] <tobie>
More seriously, though… I feel khronos stuff should belong in khronos test suites

[08:50:50.0000] <TabAtkins>
Does anyone know what version of promises Node originally shipped with?

[08:50:55.0000] <TabAtkins>
manu-db: ^^^ ?

[08:51:03.0000] <manu-db>
annevk: re: spec done-ness - I meant "done" in a "multiple interoperable implementations" sense...

[08:51:19.0000] <tobie>
TabAtkins: think node pre-dated the CJS promise effort

[08:51:20.0000] <manu-db>
TabAtkins: It was a fairly crappy version of Promises (or rather, that's what the Promises Gurus argued)

[08:51:20.0000] <annevk>
fair enough

[08:51:42.0000] <annevk>
darobin: hehe, I replied...

[08:51:50.0000] <manu-db>
TabAtkins: It was node 0.2 that removed promises, in favor of callback management, iirc

[08:52:10.0000] <manu-db>
TabAtkins: Let me try and find out more about which version of promises shipped w/ node.js 0.2

[08:52:22.0000] <tobie>
Ms2ger: which doesn't mean we can't ultimately run these test suites too.

[08:52:44.0000] <TabAtkins>
manu-db: Thanks - without much knowledge, my searches aren't turning up much useful, just a bunch of userland promise libraries.

[08:52:59.0000] <tobie>
Ms2ger: just that, as with ES, there is no point duplicating the effort.

[08:53:26.0000] <manu-db>
TabAtkins: probably going to have to dive into the node.js commit logs or code at v0.2

[08:53:46.0000] <TabAtkins>
manu-db: Not willing to do that, so I'll just take you at your word that it was some crappy version of promises.

[08:54:25.0000] <annevk>
I think I only got part of the email to http://lists.w3.org/Archives/Public/public-script-coord/2013AprJun/ :/

[08:54:51.0000] <manu-db>
TabAtkins: "crappy" - the pro-promises people were saying that node.js wasn't including certain features that made promises really compelling. The anti-promises people were arguing that node.js shouldn't pick a winner when it came to asynchronous program control flow.

[08:56:09.0000] <manu-db>
/me notices that there is a completely separate Future's discussion happening on public-script-coord... thanks annevk for the link.

[08:57:42.0000] <manu-db>
TabAtkins: I remember seeing some sort of argumentation that you could build promises on top of a callback management approach, but you couldn't build callback management on top of promises. It sounded like a compelling argument on the surface, but then it seemed like you could do either (and then I stopped thinking about it because of another fire that needed to be put out).

[08:58:08.0000] <TabAtkins>
Pretty sure you can do either, but I'd have to get into details to make sure.

[08:58:10.0000] <marcosc>
heh, public-script-coord is on fire :)

[09:01:31.0000] <darobin>
oh great, now Anne has made TC39 blame W3C for forking Futures into the WHATWG spec

[09:01:44.0000] <darobin>
let me call up my friends in MPEG to make this really interesting

[09:02:14.0000] <manu-db>
/me wonders when this turned into a 'turf war'?

[09:02:26.0000] <marcosc>
/me chews his pop corn loudly and watches with concern ... and a little entertained smirk... but mostly concern

[09:02:37.0000] <manu-db>
aren't we just talking about virtual words on a virtual page?

[09:02:46.0000] <marcosc>
manu-db: we are in a constant state of "cold war"

[09:03:47.0000] <manu-db>
/me wonders who is "winning"... because it doesn't seem like it's W3C, or IETF, or TC39, or WHATWG, or MPEG, or...

[09:05:49.0000] <annevk>
I need more popcorn

[09:05:50.0000] <darobin>
well, so long as there are companies that don't know what else to do with their research centres than churn out patents, and so long as there are hapless academics looking for cheap "industrial" validation, then MPEG will be winning (at the game they're playing)

[09:06:05.0000] <darobin>
as for those of us who care about the actual platform, indeed, I'm not sure

[09:11:35.0000] <annevk>
Certainly in a way this situation seems similar to ArrayBuffer... We ask for it in 2006. Khronos delivers. TC39 mourns in 2012.

[09:13:53.0000] <gavinc>
darobin: No, I can happily say LAWYERS are winning. http://papers.ssrn.com/sol3/papers.cfm?abstract_id=2247195

[09:16:01.0000] <annevk>
happily?

[09:16:14.0000] <gavinc>
happy to be able to say backed up with data

[09:16:19.0000] <gavinc>
not just a feeling any more

[09:17:55.0000] <nimbu1>
where is this drama happening

[09:19:10.0000] <jgraham>
Oh man "promises are in es7"

[09:19:32.0000] <jgraham>
I look forward to 2029 or whenever that will be done

[09:20:31.0000] <jgraham>
And by "done" I mean "implemented" of course, not "ratified by the standards body"

[09:20:37.0000] <jgraham>
But you all knew that

[09:31:32.0000] <annevk>
jgraham: for you: http://lists.w3.org/Archives/Public/public-script-coord/2013AprJun/0143.html

[09:32:09.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/public-respimg/2013Apr/0001.html

[09:33:08.0000] <annevk>
o_O

[09:33:26.0000] <annevk>
but yeah, if people want something, they'll make it happen

[09:37:57.0000] <Ms2ger>
"XML Signature and XML Encryption are W3C Recommendations"

[09:38:11.0000] <manu-db>
TabAtkins: Promises were dropped in node.js v0.1.30 on Feb 19th, 2010: https://groups.google.com/forum/?fromgroups=#!msg/nodejs/jaufClrXU9U/ov5WHIk7SAwJ

[09:51:08.0000] <manu-db>
TabAtkins: found it - http://manu.sporny.org/tmp/node-0.1.29-api.html#_tt_events_promise_tt

[09:51:52.0000] <manu-db>
looks pretty craptacular... the node.js 'q' module (better promises for Node.js) is much better: https://npmjs.org/package/q

[09:52:47.0000] <darobin>
annevk: good point here https://twitter.com/rem/status/324533773360320514

[09:53:54.0000] <annevk>
darobin: why would you not use .add('foo', 'bar')?

[09:54:13.0000] <TabAtkins>
manu-db: Ugh, jeezus, that's a bad promises API.  No  *wonder* it failed.

[09:54:22.0000] <darobin>
well if you're from HTML land, "foo bar" sort of makes sense

[09:54:28.0000] <divya>
annevk: because class names are strings ya

[09:54:34.0000] <darobin>
I'm not saying it's a feature to die for, but it makes sense

[09:54:38.0000] <divya>
yes

[09:54:40.0000] <divya>
its intuitive

[09:54:47.0000] <darobin>
it beats an exception with a big stick in any case

[09:56:12.0000] <darobin>
anyway, people are opening beers in the office

[09:56:16.0000] <TabAtkins>
/me dbaron, would it help if I published Colors 4 ED with one of those big "Not Ready for Implementation" messages for now?

[09:57:42.0000] <annevk>
divya: then just do .className += "foo bar"

[09:57:47.0000] <annevk>
divya: if you want to deal with strings

[10:01:02.0000] <SimonSapin>
TabAtkins: wrong channel?

[10:02:19.0000] <tobie>
annevk: well, that doesn't work for .remove("foo bar") and you do want some consistency here.

[10:08:26.0000] <annevk>
tobie: classList is not a string, it's a list of tokens

[10:09:15.0000] <tobie>
annevk: in the developer's perspective, this is an implementation detail.

[10:10:04.0000] <annevk>
it seems super silly to support both spaces and "foo", "bar", "x" notation

[10:10:44.0000] <tobie>
annevk: the dreadful API for getElementsByClassName created this weird precedent.

[10:11:48.0000] <annevk>
people should use querySelector or .find when it's out though

[10:12:03.0000] <annevk>
getElementsBy* are not really encouraged anymore

[10:13:25.0000] <annevk>
seems to me though that if you store classes as a string you're doing it wrong

[10:13:52.0000] <tobie>
annevk: I'm by nature more of a formalist than the mean, so I tend to agree with you. But most devs don't, and they just want things to work, whatever they throw at it.

[10:14:52.0000] <annevk>
I don't have strong opinions either way. We  discussed this and decided variadic were the way to go, so I added those.

[10:15:09.0000] <annevk>
We can add this too, but I rather have browser developers work on more interesting features.

[10:15:14.0000] <jgraham>
I just want it to work whatever I throw at it doesn't really help for progamming in the large though

[10:15:24.0000] <karlcow>
and then… element.classList.add(‘foo\nbar’); or element.classList.add(‘foo\tbar’);

[10:15:36.0000] <jgraham>
I needed more quotes there

[10:16:14.0000] <tobie>
jgraham: that depends on the size of the project and the team.

[10:17:03.0000] <jgraham>
Well "in the large" is sort of the limit as those things tend to infinity

[10:17:49.0000] <tobie>
in general, the web platform is too strict to make small teams happy, and too loose for real large projects.

[10:17:54.0000] <dglazkov>
good morning, Whatwg!

[10:17:57.0000] <jgraham>
(except it probably isn't because projects probably get increasingly difficult as the team gets bigger or something, so it doesn't really matter what's good if you have a million programmers because everything will be terrible anyway)

[10:20:20.0000] <annevk>
karlcow: we always cater to those ;)

[10:20:29.0000] <karlcow>
heh

[10:21:19.0000] <annevk>
tobie: I think that depends on what room of the platform you happen to stumble into

[10:22:26.0000] <gsnedders>
jgraham: https://github.com/html5lib/html5lib-python/issues/21

[10:22:35.0000] <gsnedders>
jgraham: Because, like, I want to get 1.0b1 out this month :P

[10:23:01.0000] <tobie>
annevk: possibly. The point remains that there are very different audiences with conflicting requirements.

[10:23:10.0000] <annevk>
tobie: there's everything from the too low-level (endianness?!) to the probably too high-level (String.prototype.anchor?)

[10:23:31.0000] <tobie>
don't you love the later?

[10:23:38.0000] <tobie>
s/later/latter/

[10:24:16.0000] <annevk>
yeah, after the usual sadness delay I typically come to love the quirks

[10:25:09.0000] <marcosc>
stockholm syndrome is awesome

[10:25:19.0000] <annevk>
unless they don't stop biting me, like <image>

[10:25:43.0000] <annevk>
there's some issues on document.createElement("image") needing to create HTMLImageElement whose localName is "img"

[10:25:45.0000] <karlcow>
marcosc: :D

[10:25:48.0000] <annevk>
now that's some fucked up shit

[10:28:07.0000] <marcosc>
annevk: lol, I didn't know that one

[10:28:14.0000] <marcosc>
that's awesome

[10:28:24.0000] <marcosc>
who introduced that gem?

[10:28:24.0000] <Ms2ger>
marcosc, not in Gecko, fwiw

[10:28:36.0000] <marcosc>
Ms2ger: get to it! implement it now!

[10:28:37.0000] <marcosc>
:)

[10:30:02.0000] <jgraham>
It's not really high-level vs low-level though

[10:30:08.0000] <jgraham>
It's strict vs loose

[10:30:14.0000] <jgraham>
Or something

[10:30:46.0000] <Ms2ger>
It's crap and other crap?

[10:31:16.0000] <jgraham>
gsnedders: Do I need a sourceforge account?

[10:31:25.0000] <annevk>
it's not vs I think

[10:31:29.0000] <annevk>
it's the whole spectrum

[10:31:48.0000] <jgraham>
Well of course

[10:31:53.0000] <annevk>
usually a function of the people involved

[10:32:07.0000] <gsnedders>
jgraham: I think so.

[10:32:10.0000] <annevk>
and due to lack of overall design

[10:32:20.0000] <annevk>
which is somewhat improbable

[10:32:52.0000] <jgraham>
But it is useful to know if there is a set of principal axes which allow you to model the problem without the full complexity

[10:51:06.0000] <annevk>
TabAtkins: FYI, W3C has ISO support these days but yeah, wtf

[10:54:18.0000] <nimbu>
TabAtkins: curious does the generated content spec address which elements pseudo elements the content property gets applied?

[10:54:31.0000] <nimbu>
TabAtkins: curious about addnig content within an iframe::before or iframe::after

[10:54:36.0000] <TabAtkins>
annevk: Interested in potentially adding more Futures combinators?  Looks like there are a few decent ones in https://github.com/caolan/async/blob/master/README.md, though I need to go through them in detail to figure out which ones are just working around callback weirdness.

[10:54:58.0000] <TabAtkins>
nimbu: Everything that's not a replaced element gets ::before/::after.

[10:55:13.0000] <nimbu>
TabAtkins: is it documented somewhere.

[10:55:17.0000] <TabAtkins>
Maybe?

[10:55:25.0000] <annevk>
TabAtkins: I think I'd like to see a browser implementation first and then add some more stuff

[10:55:32.0000] <TabAtkins>
annevk: Sounds reasonable.

[10:55:40.0000] <TabAtkins>
What we have for now is sufficient for most things, anyway.

[10:55:51.0000] <annevk>
TabAtkins: also, if it's not just Mark Miller but the entirety of TC39 that's pissed off, I'd like to see what they can bring to the table

[10:56:02.0000] <TabAtkins>
Right.

[10:56:22.0000] <annevk>
well, it's not the entirety for sure, but I'd like to know what the others think

[10:56:34.0000] <nimbu>
TabAtkins: http://www.w3.org/TR/css3-content/#replacedContent does not define what is a replaced element

[10:56:42.0000] <nimbu>
TabAtkins: is it in html5 spec?

[10:56:46.0000] <TabAtkins>
Maybe?

[10:57:00.0000] <Ms2ger>
Why are you looking at TR?

[10:57:01.0000] <nimbu>
TabAtkins: !!!!!

[10:57:11.0000] <TabAtkins>
Also: yes, what Ms2ger said.

[10:57:29.0000] <nimbu>
TabAtkins: http://www.w3.org/html/wg/drafts/html/master/rendering.html#replaced-elements

[10:57:42.0000] <nimbu>
Ms2ger: srry first result in googling

[10:57:49.0000] <Ms2ger>
Why are you looking at the forked HTML?

[10:58:27.0000] <dglazkov>
lol

[10:58:33.0000] <marcosc>
s/forked/stolen

[10:58:35.0000] <marcosc>
heh

[10:58:38.0000] <TabAtkins>
Hehe

[10:58:59.0000] <nimbu>
ahahahahahha

[10:59:06.0000] <nimbu>
Ms2ger: ALSO FIRST RESULT

[10:59:08.0000] <nimbu>
TabAtkins: http://dev.w3.org/csswg/css-content/

[10:59:15.0000] <nimbu>
THIS IS WAI

[10:59:24.0000] <annevk>
accessibility?

[10:59:41.0000] <annevk>
or is WAI some kind of hipster variant of WHY?

[10:59:45.0000] <nimbu>
YES annevk

[10:59:49.0000] <nimbu>
Y is too not cool

[11:00:00.0000] <annevk>
WAI COOL

[11:00:07.0000] <nimbu>
TabAtkins: so should i refer to the 2.1 def of :before

[11:00:08.0000] <annevk>
oh wait

[11:00:09.0000] <nimbu>
i cannot

[11:00:15.0000] <nimbu>
:)

[11:00:35.0000] <TabAtkins>
I long ago gave up trying to interpret nimbu.

[11:00:40.0000] <nimbu>
ahahhaa

[11:00:56.0000] <nimbu>
that is a good idea TabAtkins

[11:01:09.0000] <dglazkov>
just like abstract art, there's no wrong answer

[11:01:29.0000] <nimbu>
exactly dglazkov we are all abstract arts

[11:02:00.0000] <dglazkov>
I am more of surrealism

[11:02:34.0000] <annevk>
with deadlines

[11:02:53.0000] <annevk>
/me chants "wait for ES6"

[11:03:35.0000] <TabAtkins>
Huh, gmail's "first-line preview" thing in the email list auto-strips things that look like tags for some reason.

[11:09:21.0000] <manu-db>
annevk, TabAtkins: Would this be an option - lifting Futures from DOM4 and placing it into the JSON-LD API spec? We would have to do another Last Call for JSON-LD API, but could get to REC by late June 2013... and then we'd at least have a spec that mentioned Futures in a REC-y way?

[11:09:59.0000] <manu-db>
manu-db: JSON-LD 2.0 could defer to whatever spec ends up being the Futures spec?

[11:10:18.0000] <TabAtkins>
That seems like a weird place to put it.  (And, no offense, likely to at least somewhat taint Futures with the linked-data stuff.)

[11:10:48.0000] <Ms2ger>
Consider a DOM tree where the root is a frameset element with a body child

[11:10:49.0000] <Ms2ger>
What does document.body return?

[11:11:18.0000] <manu-db>
TabAtkins, annevk: No, we'd lift it as-is - no changes to Futures. The other option is to do a FPWD of a Futures-only spec in RDF WG and take that to REC... but that would probably not fly.

[11:13:13.0000] <annevk>
Ms2ger: frameset?

[11:13:39.0000] <Ms2ger>
annevk, in Gecko, indeed

[11:13:46.0000] <annevk>
Ms2ger: also spec iirc

[11:13:52.0000] <Ms2ger>
In Chrome, the body

[11:13:56.0000] <Ms2ger>
Per spec, null

[11:14:07.0000] <annevk>
hmm

[11:14:34.0000] <annevk>
manu-db: so that's working around a broken policy in the W3C with a solution that seems future-hostile

[11:14:57.0000] <Ms2ger>
annevk, Future-hostile or future-hostile? :)

[11:15:02.0000] <annevk>
manu-db: groups have suggested doing that kind of thing in the past for the same reasons and it's always considered a bad idea

[11:16:07.0000] <annevk>
manu-db: I'd suggest to stop working within the damaging constraints put forward by some of the W3C. Those constraints are not part of the W3C Process

[11:16:19.0000] <annevk>
Ms2ger: oh you

[11:17:52.0000] <manu-db>
annevk, TabAtkins: just throwing out ideas in case the group wants to do Futures. Keep in mind that it's not just me in this group - it's many others that have a variety of other positions on W3C process /and/ whether or not futures are useful.

[11:18:45.0000] <Ms2ger>
/me wonders when we started caring about json-ld

[11:19:15.0000] <manu-db>
annevk, TabAtkins: What if we could publish DOM4 Futures in a stand-alone spec via W3C and get it to REC quickly? Is that something that is of interest? Isn't it "done"?

[11:21:02.0000] <annevk>
manu-db: I don't like forks personally. We want to enhance the feature over time. Also, I could not care less about REC.

[11:21:05.0000] <Ms2ger>
(IE appears to always return the root if it's a body/frameset)

[11:23:03.0000] <TabAtkins>
manu-db: What's the hang-up with referencing a non-W3C document?  That's not actually disallowed, as much as people try to pretend that it is when the WHATWG is involved.

[11:23:08.0000] <manu-db>
annevk: I don't want to fork it, I just want to have a "W3C stable" published version. We can always include text in there that says: "If you want to see the live version of this spec, look here..." (and then informatively point to the DOM4 Futures spec)

[11:23:49.0000] <manu-db>
TabAtkins: We'd have to normatively reference a non-W3C document, I think... since the object being returned would be a Promise.

[11:23:58.0000] <annevk>
So there's no DOM4. Nobody is maintaining that.

[11:23:59.0000] <TabAtkins>
manu-db: ...yes?

[11:24:04.0000] <manu-db>
TabAtkins: There's no issue w/ informatively referencing... normatively referencing is another issue.

[11:24:47.0000] <TabAtkins>
To the best of my knowledge, there isn't.  Do you have evidence that we can't norm-ref a non-W3C doc?

[11:25:22.0000] <Ms2ger>
TabAtkins, I have evidence that people whine about imagined Process requirements if you try

[11:25:37.0000] <manu-db>
TabAtkins: Yeah, let me find the link - you can't normatively reference documents that aren't REC at W3C (because the possibility of the ref'd doc changing is too great from a W3C member company perspective)

[11:26:01.0000] <Ms2ger>
manu-db, not that case

[11:26:15.0000] <manu-db>
Ms2ger: s/that/the/ ?

[11:26:18.0000] <Ms2ger>
manu-db, you can always reference non-W3C-published documents

[11:26:34.0000] <manu-db>
Ms2ger: Yes, of course you can.

[11:26:37.0000] <Ms2ger>
manu-db, the only maturity requirement is if you reference a W3C document

[11:26:41.0000] <manu-db>
Ms2ger: The question isn't that, though...

[11:26:51.0000] <manu-db>
Ms2ger: Oh, I think I see what you're doing.

[11:26:56.0000] <jgraham>
/me wonders which member company's perspective that is

[11:27:08.0000] <manu-db>
jgraham: IBM, for one

[11:27:15.0000] <manu-db>
jgraham: Oracle

[11:27:20.0000] <Ms2ger>
manu-db, given that DOM4 doesn't have Futures and WHATWG DOM does...

[11:28:37.0000] <manu-db>
TabAtkins, annevk, Ms2ger: I guess we could make the entire API non-normative... hmm, that might work?

[11:28:53.0000] <TabAtkins>
No, jeez, just normatively ref the Futures doc!

[11:29:05.0000] <TabAtkins>
It's no different from CSS norm-reffing a Unicode doc.

[11:29:13.0000] <TabAtkins>
(And probably at least as stable...)

[11:29:54.0000] <annevk>
manu-db: I think I'll pardon myself from this discussion. I don't want to play under the rules of damaging constraints, whether real or imaginary.

[11:31:50.0000] <manu-db>
TabAtkins: link?

[11:31:52.0000] <annevk>
(I should probably suitably scope that statement somehow, but it should be clear from context.)

[11:32:50.0000] <manu-db>
annevk: your choice. I'm trying to figure out a way to get the Futures stuff into a form that is usable at W3C, I understand that you don't agree with the exercise, but the end-goal should be something that's beneficial for Futures.

[11:35:45.0000] <Ms2ger>
https://lists.w3.org/Archives/Member/w3c-css-wg/2013AprJun/0053.html

[11:49:47.0000] <marcosc>
I'm not sure where this should be filed: http://www.w3.org/community/respimg/2013/04/06/devicenormalpixelratio-proposal-for-zoom-independent-devicepixelratio-for-hd-retina-games/

[11:50:16.0000] <marcosc>
If it's a CSS WG issue or HTML or ???

[11:50:35.0000] <marcosc>
TabAtkins, if you have a min, could you take a quick look? ^^

[11:51:20.0000] <marcosc>
the problem is pretty evident if you got to http://webquake.quaddicted.com/

[12:14:09.0000] <KyleBarnhart>
Hi. I have a question regarding the WebVTT specification.

[12:15:24.0000] <KyleBarnhart>
According to the rendering rules, it looks like a cue will be displayed at the top of a video. Normally, captions are rendered on the bottom. Is this correct?

[12:17:34.0000] <rillian>
KyleBarnhart: that's conventional. Does the spec say anything about default positioning?

[12:22:10.0000] <KyleBarnhart>
http://dev.w3.org/html5/webvtt/#cues-with-video

[12:23:00.0000] <KyleBarnhart>
rule 9 sets y-position to 0, rule 11 sets y-position to top

[12:23:49.0000] <KyleBarnhart>
this is because snap-to-lines is true by default, wiriting direction: horizonal also default

[12:24:40.0000] <KyleBarnhart>
* sets top to 7-position

[12:28:15.0000] <rillian>
KyleBarnhart: does http://dev.w3.org/html5/webvtt/#dfn-text-track-cue-automatic-line-position not already set the default position to 100?

[12:30:19.0000] <KyleBarnhart>
no, default is auto. But it doesn't matter, line position doesn't get used. Because wirting direction is horizonal and snap-to-lines is true, y-position is set to 0.

[12:37:05.0000] <TabAtkins>
marcosc: Hm, I'll have to think about this.  For one thing, device-pixel-ratio doesn't exist. ^_^

[12:52:01.0000] <KyleBarnhart>
ok i've figured it out. it's at the bottom.

[15:18:34.0000] <gavinc>
manu-db: Future/Coroutine/Async in Python http://www.python.org/dev/peps/pep-3156/


2013-04-18
[17:09:21.0000] <manu1>
gavinc: So, seems to be totally incompatible with what WHATWG DOM Futures are doing (at least, the interface doesn't match at all) *sobs*

[17:09:47.0000] <manu1>
gavinc: Does WebIDL support the ability to define futures to iron out these sorts of incompatibilities between languages?

[17:09:48.0000] <gavinc>
manu1: Interface doesn't, but I assure you the spirit does

[17:10:05.0000] <manu1>
gavinc: Too bad API specs are about interfaces and not spirits. :)

[17:10:19.0000] <gavinc>
The idea that one API can serve many languages is non-sense anyway :P

[17:11:11.0000] <manu1>
gavinc: Also note: http://www.python.org/dev/peps/pep-3156/#callback-style

[17:12:14.0000] <gavinc>
that isn't talking about how to write callback APIs that's talking about the problems with them ;)

[17:12:16.0000] <manu1>
gavinc: Creating an API that can just serve Javascript is starting to sound like non-sense.... even JS folks can't agree on the proper flow control style.

[17:12:33.0000] <gavinc>
Right, so serve Javascript in Browsers ;)

[17:13:16.0000] <manu1>
err, JSON-LD on servers is just as important, if not more important.

[17:13:30.0000] <manu1>
and having an interface that is similar between both is really important.

[17:13:34.0000] <gavinc>
The API will NOT be the same.

[17:13:36.0000] <manu1>
(so developers aren't confused)

[17:14:02.0000] <manu1>
gavinc: The API between node.js server side, and Javascript browser-side /is exactly the same/ right now.

[17:15:35.0000] <manu1>
that's one of the reasons we picked the callback control-flow style.

[17:15:52.0000] <manu1>
so that developers didn't have to do Futures on the browser-side and callbacks on the server-side.

[17:15:56.0000] <manu1>
(in JavaScript)

[17:16:13.0000] <manu1>
(and Python, and Ruby, and PHP)

[17:16:29.0000] <manu1>
(not that PHP is used on the client-side that often... but you get the idea)

[17:16:37.0000] <gavinc>
I note you happily ignore the other language WITH WebIDL bindings ;)

[17:16:46.0000] <gavinc>
Since it totally sucks at Callback style, Java :P

[17:17:00.0000] <manu1>
what, like Java - screw Java - Java is awful :)

[17:17:32.0000] <gavinc>
The API WILL NOT be the same in all languages

[17:17:34.0000] <gavinc>
clearly

[17:17:44.0000] <manu1>
besides, there is nothing that says that you /have/ to follow the JSON-LD API spec, we made it that way so that people can do things that make sense in their language of choice.

[17:18:17.0000] <gavinc>
going to make finding 3 implementations fun ;)

[17:18:34.0000] <manu1>
we already have 3 :)

[17:18:40.0000] <manu1>
in fact, we have 5

[17:18:59.0000] <gavinc>
No, cause the Python one at least doesn't use the same API

[17:19:26.0000] <manu1>
like I said, nobody complained about this until the WHATWG DOM Futures folks jumped in.

[17:19:55.0000] <manu1>
besides, only 2 implementations are necessary for REC :)

[17:20:05.0000] <gavinc>
nobody complained until the people who have been dealing with large callback based API non sense for years chimed in?

[17:20:11.0000] <gavinc>
that's uh... an odd argument ;)

[17:20:42.0000] <manu1>
you act as if the people in this channel are the only people dealing with large callback based APIs...

[17:20:48.0000] <gavinc>
no.

[17:20:49.0000] <manu1>
the node.js community seems to be dealing with it just fine.

[17:21:21.0000] <manu1>
and honestly, it's really not that big of an issue with the libraries that we use either on the server-side or client-side.

[17:21:49.0000] <manu1>
I realize that there are people that feel that Futures are the future... but those folks haven't gotten the state of the art to the point that we can shift over to it.

[17:22:23.0000] <gavinc>
"callback hell" is an oddly common term for Node.js if they are handling it well

[17:22:29.0000] <manu1>
once they do, and it's clear that futures are going to make things better, people will naturally switch over because it's a no-brainer.

[17:22:50.0000] <manu1>
gavinc: Do you do a great deal of node.js programming?

[17:22:58.0000] <gavinc>
No, twisted ;)

[17:23:21.0000] <gavinc>
I hate callbacks that much ;)

[17:23:33.0000] <manu1>
twisted is awful... we've used it before.

[17:23:56.0000] <manu1>
but unfortunately, people tend to conflate the awfulness of twisted with all other callback-based mechanisms.

[17:24:20.0000] <manu1>
node.js did callbacks right - twisted got it horribly wrong (I say this having spent years developing in both)

[17:25:06.0000] <manu1>
the whole "callback hell" argument is usually thrown about by people that are not managing their code correctly... at least, 99% of the examples I've seen of callback hell fall into the category where the person complaining doesn't know what they're doing.

[17:25:37.0000] <manu1>
That said, if we can get novices doing async programming in a way that's better then I'm all for it... I'm just not convinced that monads / futures are that solution.

[17:25:55.0000] <manu1>
They abstract away things to the point where it starts to confuse novice developers...

[17:26:03.0000] <manu1>
callbacks do the same sort of thing, but not as badly.

[17:26:12.0000] <gavinc>
Futures in DOM4, latest Twisted API, the new Python API, are all starting to look very much the same in their semantics

[17:26:34.0000] <gavinc>
the syntax and naming is wildly different (well, they all use the word Futures) but otherwise...

[17:26:54.0000] <manu1>
sure, and once everything converges, we'll release a JSON-LD API that is based on futures...

[17:27:29.0000] <manu1>
but doing so at this point seems to be trying to nail jello to a galloping horse. The best we can hope for is to be kicked in the face for our efforts.

[17:27:39.0000] <manu1>
(or something)

[17:29:29.0000] <gavinc>
"In the DOM world and other closely-related APIs, we're not going to stop using futures"

[17:29:41.0000] <gavinc>
that's a reasonably strong statement that you won't get kicked in the face

[17:30:16.0000] <gavinc>
Unless you'd like to argue that DOM ISN'T the widest use API in Javascript?

[17:34:17.0000] <manu1>
link to who said that?

[17:34:47.0000] <manu1>
also, that statement ignores one side of the equation - server-side.

[17:35:05.0000] <zewt>
gavinc: really? somebody's declaring that no logical arguments will convince them because they've made up their mind?

[17:35:20.0000] <zewt>
i'm not sure i want to know who's being that foolish

[17:35:49.0000] <gavinc>
/me learns exactly who has read TabAtkins blog post on Futures ;)

[17:35:53.0000] <gavinc>
http://www.xanthir.com/b4PY0

[17:36:27.0000] <manu1>
I read it in detail, I don't tend to memorize everything I read in blog posts - also, that's Tab saying it - who else is saying that?

[17:37:09.0000] <manu1>
Is it the position of the Web Apps WG? Is it the position of the WHAT WG? Is it the position of the majority of browser manufacturers? Answers of "Yes" to any of those would be more convincing than one person saying it.

[17:37:40.0000] <manu1>
err, three including annevk, TabAtkins, and Boris.

[18:03:15.0000] <TabAtkins>
manu-db: CSS norm-refs Unicode at least in CSS Text, possibly in Text Decor, and possibly in Fonts.

[18:03:46.0000] <TabAtkins>
manu-db: We norm-ref two non-W3C docs in the Colors spec.

[18:04:40.0000] <TabAtkins>
manu-db: Hey, between me, annevk, and Boris, you've basically got a majority of spec writers. ^_^

[18:06:38.0000] <TabAtkins>
manu1: I'd appreciate if you stopped referencing Node's callbacks as if it had any relevance whatsoever to web APIs.  We can't get Node's "async" module, or any reasonable equivalent, on the web, because the web doesnt' have a consistent callback pattern like Node does.

[18:07:19.0000] <TabAtkins>
Moving APIs to futures is *far* more likely than moving them to a different callback pattern, given that future-based APIs are easily distinguishable from callback-based ones, while different styles of callback APIs are hard to distinguish.

[18:07:20.0000] <manu1>
TabAtkins: you can use async in the browser today?

[18:07:27.0000] <manu1>
I mean, statement of fact - you can do that.

[18:07:32.0000] <TabAtkins>
manu1: Only if you're using node-style callback APIs.

[18:07:39.0000] <TabAtkins>
Which dont' exist in any web spec.

[18:07:47.0000] <TabAtkins>
(or practically any - some might exist, I dunno)

[18:08:09.0000] <TabAtkins>
I outline five different callback styles in my blog post that are attested by major APIs *today*.

[18:08:14.0000] <manu1>
yes, but there are many libraries that wrap the web specs to provide a callback-style interface... most of the libraries we use do that.

[18:08:17.0000] <TabAtkins>
(None of which are node-like APIs.

[18:08:41.0000] <TabAtkins>
manu1: If you're allowing wrappers, then we can wrap anything callback-based in a future, too.

[18:09:01.0000] <manu1>
yeah, that's kinda my point - I don't think developers are really going to be impacted that greatly one way or another.

[18:09:27.0000] <TabAtkins>
Right, so consistency arguments with Node don't stand.  We're back to proposals on their merits.

[18:09:29.0000] <manu1>
because lots of the web specs are wrapped in libraries to make them fit a particular model (jquery, AngularJS, etc.)

[18:09:43.0000] <TabAtkins>
Adding a sixth callback style to web APIs doesn't help anyone, while jumping on the Futures train *does*.

[18:10:08.0000] <manu1>
TabAtkins: consistency arguments do matter for Node because we don't want to have developers pick two different call styles between browser-based JSON-LD API and server-side JSON-LD API.

[18:10:10.0000] <TabAtkins>
(Network effects are important for the success of Futures - the more stuff uses it, the more valuable it is.)

[18:10:38.0000] <TabAtkins>
I presume they already do so for APIs that are analogs of browser APIs?

[18:10:56.0000] <TabAtkins>
Providing a node-like callback system for node, and a Future-based system for the web, sounds fine.

[18:10:59.0000] <TabAtkins>
Or both, whatever.

[18:11:04.0000] <manu1>
bleh

[18:11:08.0000] <TabAtkins>
(If you can reasonably distinguish between them.)

[18:11:21.0000] <TabAtkins>
You have to provide a different API for Python/Java/et al anyway.

[18:11:22.0000] <manu1>
as developers, we typically can't stand working with libraries like that.

[18:11:42.0000] <manu1>
TabAtkins: I'm currently asking W3C what their position on ref'ing the WHATWG DOM API from JSON-LD API is...

[18:11:43.0000] <TabAtkins>
Like I said, I think we as developers already do that?  (Not much of a noder, sorry.)

[18:12:13.0000] <manu1>
TabAtkins: which then brings into question if it really matters what is spec'd... because the opposite will be provided by some developer somewhere.

[18:12:25.0000] <TabAtkins>
manu1: You'll either get the right answer ("it's totally fine to ref things not from the W3C", because everyone does it and it's never stopped a spec from hitting Rec), or you'll get a kneejerk "eww, WHATWG" response.

[18:12:28.0000] <manu1>
TabAtkins: which gets back to my first proposal - we'll just spec an API for both - callback-style and futures-style.

[18:12:46.0000] <TabAtkins>
manu1: If you have a reasonable naming proposal for the two, sure, whatever.

[18:13:35.0000] <manu1>
TabAtkins: I was thinking - JSON-LD Callback API and JSON-LD TAB_ATKINS_LOVES_FUTURES API

[18:13:53.0000] <TabAtkins>
I mean for the functions.  I'm cool with you using my name in the spec title.

[18:14:03.0000] <manu1>
noted.

[18:14:27.0000] <manu1>
TabAtkins: I'm asking a W3Cer that likes WHAT WG in an attempt to see if I can get the same answer out of them that I got out of you.

[18:15:10.0000] <manu1>
TabAtkins: also, for APIs providing both, is there a function naming scheme that is currently used?

[18:15:11.0000] <TabAtkins>
It's cool, I already know the right answer.  If you get another answer, I can just point to the objective evidence that proves me right (multiple specs doing exactly what I say is OK).

[18:15:24.0000] <manu1>
TabAtkins: Are they RECs?

[18:15:46.0000] <TabAtkins>
manu1: No, not yet.  Current attempts are either fresh APIs, or have a completely different name (like XHR might get something along the lines of getJSON() or whatever).

[18:15:47.0000] <manu1>
TabAtkins: and if you could just give me the links, I can forward them on to the group so I at least have that at my disposal as a set of arguments.

[18:15:51.0000] <TabAtkins>
manu1: Yup, Colors 3 is Rec.

[18:16:08.0000] <TabAtkins>
http://www.w3.org/TR/css3-color/

[18:16:19.0000] <TabAtkins>
With two normative refs to non-W3C or IETF docs.

[18:17:07.0000] <TabAtkins>
(Specifically, Colorimetry, published by CIE, and SRGB, published by IEC I think?  It's hard to read these biblios.

[18:18:12.0000] <manu1>
TabAtkins: blerg - that totally doesn't count. I thought you had refs to WHATWG specs... ref'ing books is fine because the print of the book isn't going to change.

[18:18:30.0000] <manu1>
TabAtkins: The question is, what W3C REC spec references a WHATWG spec?

[18:18:54.0000] <TabAtkins>
manu1: I don't see how that question is relevant.

[18:19:23.0000] <manu1>
TabAtkins: I know that we can ref specs at W3C that are not REC as long as the features are stable - we do that for HTML5+RDFa 1.1

[18:19:45.0000] <tantek>
/me pops back in and sees REC/politics discussion have flared up again. ;)

[18:20:32.0000] <manu1>
flared up? It never stopped tantek - Tab and I have been talking constantly since the moment you left IRC ;)

[18:20:43.0000] <tantek>
sorry to hear that

[18:20:50.0000] <manu1>
as am I :)

[18:20:58.0000] <tantek>
so why do you continue to participate then?

[18:21:01.0000] <tantek>
if you're sorry?

[18:21:41.0000] <manu1>
(it was a joke)

[18:22:00.0000] <tantek>
oh so you're not sorry. ok.

[18:22:10.0000] <manu1>
TabAtkins: It's relevant because the whole purpose of that normative ref'ing rule at W3C is to make sure the doc doesn't change.

[18:22:40.0000] <TabAtkins>
That doesn't happen, though.  Even Recs change.

[18:22:42.0000] <tantek>
right, because fiat always works to make docs not change

[18:22:46.0000] <manu1>
TabAtkins: again, not that I care - but you made it sound like W3C had published a spec that normatively ref'd a WHAT WG spec... and that sounded like something that could help this situation.

[18:23:04.0000] <TabAtkins>
Importantly, Recs can depend on CRs, which *definitely* change.

[18:23:34.0000] <tantek>
specs should just make the best references they practically can, and assume ALL references are subject to change. don't pretend otherwise.

[18:24:06.0000] <manu1>
TabAtkins: Yes, and I'm pushing a spec through that currently does that... but it's not a WHATWG spec and you made it seem as if that's happened before (which is what surprised me)

[18:24:26.0000] <tantek>
reflect the reality of an evolving platform, rather than clinging to a pipedream of statically lockstepped imaginary platform that never really existed (on the web)

[18:24:50.0000] <manu1>
tantek: Yes, no argument from me on that one...

[18:24:54.0000] <TabAtkins>
I never stated that Recs with WHATWG norm refs have already happened.  I never even mentioned Recs until this afternoon.  I've been fighting against the weird reluctance to ref things that aren't W3C.

[18:26:09.0000] <manu1>
TabAtkins: but you do realize that it's not "ref things that aren't W3C" that's the issue here... it's ref'ing things that don't have any implementations and aren't even close to being on any standards track (and could change at any point based on the whim of an editor)

[18:26:50.0000] <manu1>
TabAtkins: That's the issue - I'll happy ref specs that are IETF or TC-39 or whatever that have some semblance of stability to them...

[18:27:04.0000] <manu1>
TabAtkins: but the WHATWG DOM spec doesn't seem to be there yet.

[18:27:33.0000] <manu1>
TabAtkins: That is, if there were at least 2 browser implementations of it, that would be very convincing.

[18:28:02.0000] <manu1>
TabAtkins: from my understanding, there are currently 0 implementations of it, and the JSON-LD API would be the first, right?

[18:28:25.0000] <TabAtkins>
You realize that reffing a CR from a Rec (which is allowed) has much less stability than you're requiring?  CRs can be published (and often are) with zero implementations.

[18:28:29.0000] <TabAtkins>
And they commonly change.

[18:28:51.0000] <TabAtkins>
manu1: JSON-LD is one of the APIs in flight to take advantage.  I'm working through the Font Load API.

[18:30:17.0000] <tantek>
/me is curious if this kind of discussion happens often enough to merit a subspecies of bureaucracy/process troll - the reference citations troll.

[18:30:27.0000] <tantek>
There was the "but what's the canonical reference to ASCII" troll that occurred in HTMLWG a while ago (and sucked up a lot of mailing / telcon time).

[18:30:47.0000] <TabAtkins>
The right answer being, obviously, Wikipedia. ^_^

[18:32:25.0000] <manu1>
right, and that's my concern - you're asking the JSON-LD API to switch to Futures when it's not apparent that developers are going to flock to them en masse. My prediction is that we're going to continue to have the same control-flow mess on our hands in the Web platform for a while and that developers are just going to take web specs and match them up with whatever control flow they're...

[18:32:27.0000] <manu1>
...using for their application.

[18:33:22.0000] <TabAtkins>
Contributing to the control flow mess with a sixth callback pattern isn't helping matters.

[18:33:33.0000] <manu1>
tantek: The discussion doesn't have to do w/ reference citations, it has to do w/ the stability of WHATWG DOM, which I'm finding out isn't very stable (in that there are no implementations of it)

[18:33:40.0000] <manu1>
TabAtkins: So, what would be the lesser evil?

[18:34:03.0000] <manu1>
TabAtkins: No futures, no callback control flow - what would be the best approach w/o taking those two into consideration?

[18:34:32.0000] <TabAtkins>
manu1: Note that WHATWG stability policy is "things can change (hopefully for the better) until sufficient mass of people depend on it".  This is the *actual* stability policy of the W3C as well (at least in healthy groups), we just pretend there's something called Process that works differently.

[18:34:45.0000] <TabAtkins>
manu1: The lesser evil is to contribute to the actual fixing of callback messes by adopting Futures.

[18:34:46.0000] <manu1>
because, if I'm understanding correctly, both of those have roughly the same number of APIs using the style.

[18:34:59.0000] <TabAtkins>
Right, but one helps the future, and the other doesn't. ^_^

[18:35:19.0000] <manu1>
if futures are the future - which you've failed to convince multiple people of at this point.

[18:35:31.0000] <manu1>
if they're not, futures are no better than callback control flow.

[18:35:57.0000] <manu1>
and seeing as how futures have been in node.js for a long time now and they're not popular is concerning.

[18:36:18.0000] <manu1>
/me has to go, will respond later.

[18:36:37.0000] <TabAtkins>
Oh good lord, I already addressed the node thing.

[18:37:22.0000] <TabAtkins>
Node's original promises were shit.  After that, it grew a consistent callback pattern (which is itself a negative force against innovation like Futures), and then grew callback-handling libraries that depended on that central callback pattern.

[18:37:29.0000] <TabAtkins>
It is *not* a model of the web that you can rely on for anything.

[18:38:27.0000] <TabAtkins>
manu1: Do whatever you want.  It's obvious that's what you're going to do anyway.  Match node, even though that means inventing a brand new callback pattern for the web, and doesn't have a transition story to the glorious future that Node offers.

[18:38:59.0000] <TabAtkins>
JSON-LD will just be yet another shitty legacy API that has to be back-converted into Futures later.

[18:41:04.0000] <manu1>
TabAtkins: If I was going to do whatever I wanted, I wouldn't have spent the last 48 hours trying to figure out if we can/should do futures for the JSON-LD API. Don't get cranky, I want the right solution, it's just nobody else seems to be beating the Futures drum as hard as you are and I'm trying to figure out why.

[18:42:08.0000] <manu1>
I appreciate the time you've put into explaining all this and writing that blog post on futures.

[18:42:10.0000] <manu1>
/me afks.

[18:42:21.0000] <TabAtkins>
Because it's new, and people are slow to embrace new things, particularly new abstractions that are different from what they're familiar with.

[18:43:28.0000] <TabAtkins>
I'm just frustrated you keep bringing up Node like it's relevant to the API design, when it's *not*.  Nothing you do in the web api can benefit from anything that the node community has, because Node's async control flow abstractions can't make sense of web apis without manual wrapping.  And if you're doing that, adding one more API to manually wrap is a non-issue.

[18:44:24.0000] <TabAtkins>
Ignoring node, if you want callbacks, at least follow jQuery legacy or something, and just take 'success' and 'error' callbacks in your options object.

[18:44:50.0000] <TabAtkins>
Or take the two callbacks as final arguments, with 'success' coming first.

[18:45:14.0000] <TabAtkins>
The Node convention of a single callback which accepts the error reason as its first argument and any values as its other arguments is completely foreign to the web.

[18:45:46.0000] <TabAtkins>
It'll still interoperate badly with Future-based things, but at least it'll be consistent with *some* existing APIs, and people's expectations.

[18:54:20.0000] <TabAtkins>
zewt: Have you read my blog post from last night, about Futures?  It was partially aimed at you, too. ^_^

[18:57:39.0000] <Wardrop>
I need some clarification on the rule for <option> elements without a defined value. I find the spec to be ambiguous.

[18:58:23.0000] <Wardrop>
The spec states that for option elements without a value, the text content of the element should become the value. What does that mean for a option elements like this...

[18:58:31.0000] <Wardrop>
<option value>Pizza</option>

[18:58:48.0000] <Wardrop>
<option value="">Pizza</option>

[18:58:49.0000] <TabAtkins>
That has a value attribute.  The value of the value attribute is the empty string.

[18:58:56.0000] <TabAtkins>
Both of those are equivalent.

[18:59:04.0000] <Wardrop>
Ok, so if 'value' is present at all, it is respected.

[18:59:06.0000] <Wardrop>
Thanks

[18:59:09.0000] <TabAtkins>
Yep.

[19:00:08.0000] <Wardrop>
Spec should probably be clarified as it currently reads "The value of an option element is the value of the value content attribute, if there is one" which could mean either

[19:00:47.0000] <TabAtkins>
"If there is one" means "if there is a value content attribute".  That's unambiguous (though in practical, non-spec terminology, it might be ambiguous).

[19:03:39.0000] <Wardrop>
It isn't made clear whether "if there is one" is referring to the presence of the attribute, or the presence of actual value, unless there's something in the spec's pre-amble that clarifies this.

[19:04:29.0000] <TabAtkins>
An attribute never doesn't have a value, so it's unambiguous in practice when you're already familiar with the spec terms. ^_^

[19:04:41.0000] <TabAtkins>
(If the attribute exists, it has a value by definition.)

[19:05:17.0000] <Wardrop>
TabAtkins: Yeah ok, that probably is something clarified earlier in the spec. Thanks TabAtkins.

[19:05:23.0000] <TabAtkins>
np

[21:34:53.0000] <Hixie>
manu1: the idea that depending on a CR or REC is safer than depending on a living standard is trivially disprovable

[21:35:02.0000] <Hixie>
manu1: HTML provides a great example of this

[21:35:38.0000] <Hixie>
manu1: HTML4 is a REC, but if you were to refer to it you would have no interop

[21:36:02.0000] <Hixie>
manu1: HTML5 is a CR, but it has numerous errors that are likely never going to get fixed

[21:36:45.0000] <Hixie>
manu1: meanwhile, the WHATWG HTML standard is actually the most up to date and least incorrect version of HTML available, so if you refer to that you are the most likely to get interop

[21:37:21.0000] <Hixie>
manu1: the usual question of "what happens if the spec changes" is answerable in very clear terms with HTML -- if the spec changes, the living standard ends up being more useful, while the REC and CR end up just being wrong

[23:31:11.0000] <SteveF>
manu1:  the html 5.1 nightly http://www.w3.org/html/wg/drafts/html/master/ is actually the most up to date and least incorrect version of HTML available

[23:31:33.0000] <Ms2ger>
Bwahahahaha

[23:31:38.0000] <Hixie>
hahaha

[23:37:19.0000] <SteveF>
thought that would go down well

[23:39:15.0000] <Ms2ger>
You're a funny man, SteveF

[23:40:16.0000] <SteveF>
yeah so I have been told outside of the whatwg echo chamber as well

[23:42:34.0000] <Ms2ger>
If you think there are cases where your spec is better, file a bug

[23:42:41.0000] <Ms2ger>
But I doubt you will

[23:43:15.0000] <Hixie>
Ms2ger: they don't even know how their spec differs from the whatwg one

[23:43:38.0000] <Hixie>
Ms2ger: there's literally no list anywhere of what differences there are between the whatwg one and their version, nor a list of what intentional differences there are

[23:44:17.0000] <Hixie>
Ms2ger: having seen some of the differences (e.g. the way that ping="" was half in and half out), it's pretty obvious theirs hasn't even been proofread.

[23:45:41.0000] <SteveF>
Ms2ger: likewise

[23:46:42.0000] <Hixie>
SteveF: the difference is that the htmlwg starts from the whatwg spec and changes it, but doesn't report the changes back, whereas the whatwg spec is not written by copying the htmlwg spec.

[23:47:32.0000] <Hixie>
it's considered poor open source etiquette to not report problems back upstream

[23:50:08.0000] <SteveF>
sSteveF: take the politics up with management

[23:50:35.0000] <Hixie>
you're an editor now

[23:50:38.0000] <Hixie>
you are management

[23:50:41.0000] <Hixie>
it's your responsibility

[23:50:45.0000] <Hixie>
that's what being an editor _is_

[23:58:33.0000] <SteveF>
hixie: such topics are on the agenda for discussion monday http://www.w3.org/wiki/HTML/EditorsAgenda will add specific item about etiquette

[23:59:43.0000] <Hixie>
lordy, meetings

[23:59:46.0000] <Hixie>
yes that will fix the problem

[00:00:21.0000] <Hixie>
sorry, that was too cynical

[00:00:26.0000] <Hixie>
good luck with your meeting

[00:00:31.0000] <Hixie>
i hope it improves matters

[00:00:47.0000] <SteveF>
thanks for the constructive comments :-)

[00:11:33.0000] <SteveF>
hixie: how exactly would you like changes made to the HTML spec communicated to you?

[00:20:43.0000] <SteveF>
hixie: if you can tell me your requirements I will do my best to accommodate

[01:03:57.0000] <SteveF>
hixie: have you raised this publicly "it's considered poor open source etiquette to not report problems back upstream" with robin or silvia or ted? As you know I have only recently joined the editors team. I would have thought that issues such as this would have been worked out already.

[01:12:08.0000] <SteveF>
Hixie: (asking again as it was kindly pointed out that I was using the wrong nick) how exactly would you like changes made to the HTML spec communicated to you?  if you can tell me your requirements I will do my best to accommodate. Have you raised this publicly "it's considered poor open source etiquette to not report problems back upstream" with robin or silvia or ted? As you know I have...

[01:12:09.0000] <SteveF>
...only recently joined the editors team. I would have thought that issues such as this would have been worked out already.

[01:15:58.0000] <annevk>
pretty sure he's asleep

[01:19:44.0000] <SteveF>
annevk: OK at least he should be aware of the questions if he reads scrollback

[01:22:11.0000] <darobin>
speaking of open source etiquette, I was looking for the repo with the WHATWG tools used to publish the HTML spec but I couldn't find it — any pointers?

[01:23:24.0000] <SteveF>
annevk: I pointed you to the changed stuff the other day as in hixie is no longer listed as 'previous editor' but as 'whatwg editor' is that an improvement?

[01:23:56.0000] <annevk>
darobin: pretty sure no up-to-date version exists

[01:23:59.0000] <annevk>
darobin: file a bug?

[01:24:34.0000] <SteveF>
annevk: if not what should it say?

[01:24:41.0000] <annevk>
SteveF: dunno

[01:24:55.0000] <annevk>
the whole thing is kinda fucked up imo

[01:25:03.0000] <darobin>
true dat

[01:25:47.0000] <SteveF>
annevk: OK so its fucked up but there is no path to unfucking

[01:25:56.0000] <jgraham>
So the protocol with webcomponents is that you keep using the same mailing thread until dglazkov xomes up with a new pun?

[01:26:06.0000] <jgraham>
s/x/c/

[01:26:43.0000] <darobin>
not true, we can unfuck the things, it just takes time to put out all the fires and plug all the leaks

[01:26:47.0000] <darobin>
UNFUCK ALL THE THINGS!

[01:27:09.0000] <darobin>
jgraham: I thought the whole point of WebApps was to provide an avenue for dglazkov puns

[01:27:10.0000] <SteveF>
twasn't meant to be statement just left off the ?

[01:28:02.0000] <darobin>
annevk: is there a not-up-to-date version to reference?

[01:28:24.0000] <darobin>
it's not a big deal, maybe the bug is just "Robin can't find stuff using Google" :)

[01:28:56.0000] <jgraham>
The toolchain isn't all avaliable afaik.

[01:29:23.0000] <jgraham>
It's a bunch of environemnt-specific scripts on Hixie's machine gluing together various services

[01:29:49.0000] <jgraham>
(not saying that more of it couldn't be made avaliable, just that it isn't)

[01:37:05.0000] <darobin>
WebApps is really becoming a strange place with all the Benadryl and stuff

[01:39:38.0000] <jgraham>
becoming?

[01:40:20.0000] <darobin>
it used to be differently weird

[01:40:35.0000] <darobin>
I liked it better when it was Web APIs, too :)

[01:41:14.0000] <darobin>
and every discussion would be interrupted by annevk screaming "WHAAAAAT???!!!1"

[01:41:16.0000] <darobin>
good times

[02:10:20.0000] <annevk>
darobin: I think at some point manu-db might have made a copy of the tools plus instructions somewhere

[02:11:06.0000] <annevk>
darobin: can try to dig that up later if you want, but filing a bug on Hixie might be good nonetheless

[02:13:11.0000] <annevk>
Not sure how to reply to https://mail.mozilla.org/pipermail/es-discuss/2013-April/029880.html

[02:13:52.0000] <annevk>
Enormous amounts of work with lots of room for error is somehow easy? I don't even

[02:14:26.0000] <jgraham>
I am guenuinely sitting in front of my computer mouth open like a fish

[02:14:35.0000] <jgraham>
That's just…

[02:14:42.0000] <jgraham>
*genuinely

[02:20:05.0000] <darobin>
hahaha

[02:20:07.0000] <darobin>
well yeah

[02:20:17.0000] <darobin>
work's easy when you're not the one doing it

[02:50:59.0000] <SteveF>
annevk: darobin: unfucking involves reasonable communication and compromises by all parties, lets see how we can achieve that

[03:01:35.0000] <annevk>
Lol, I had to reboot and now every page I visit in Chrome quits the browser

[03:08:18.0000] <annevk>
SteveF: yeah, personally I don't have much beef with the W3C, apart from parts of its Process (mostly around the concept of Living Standards and everything that derives from that) and copyright

[03:10:02.0000] <annevk>
SteveF: I mostly focus on showing that the alternative to the W3C's proposition of doing standards has no damaging effects, but I do communicate quite regularly about the subject with members of the W3C Staff

[03:11:25.0000] <annevk>
I wonder if Chrome will still update or if I need to do something special

[03:13:59.0000] <SteveF>
annevk: right,  I am talking more on the level of what I can change in role as editor of the w3c html spec, I have little or no influence the wider issues though do believe that others are working on those

[03:15:03.0000] <annevk>
SteveF: I suspect you should communicate about those with Hixie, but timezones make that difficult; maybe it's easier later this month if you go to the HTML WG meeting? At least you'll be in the same timezone

[03:17:01.0000] <SteveF>
annevk: I will be there form sunday -thursday and will be discussing such stuff with fellow editors and will try again to speak with hixie if i don't get any response from him on q's asked today

[03:50:48.0000] <MikeSmith>
tobie: about "Next step will be figuring out how to migrate the content of the CSS WG test repo to the web-platform-tests", is the CSS WG on board with that?

[03:51:44.0000] <MikeSmith>
so far it seems like as far as test infrastructure and systems, they have been going their own way

[05:20:15.0000] <tobie>
MikeSmith: Yes, the CSS WG is seriously considering migrating to the common repository.

[05:20:34.0000] <MikeSmith>
tobie: great

[05:20:43.0000] <tobie>
yeah.

[05:24:46.0000] <marcosc>
I imagine that if you top post a new proposal for Promises/Futures, you are going to have a bad time.

[05:25:04.0000] <marcosc>
(public-script-coord)

[05:31:38.0000] <tobie>
marcosc?

[05:32:47.0000] <marcosc>
tobie: http://lists.w3.org/Archives/Public/public-script-coord/2013AprJun/0162.html

[05:35:12.0000] <marcosc>
there is some cute stuff in the proposal

[05:35:16.0000] <marcosc>
https://gist.github.com/rbuckton/5406451

[05:37:21.0000] <tobie>
marcosc: I think there's enough fury as it is not to go add my $.02

[05:38:39.0000] <marcosc>
... if you don't need those .02c, can I have 'em? Pay you back later, promise :)

[05:40:27.0000] <zcorpan>
is it a good idea or a bad idea to pull from upstream master in a topic branch? i want to move the files in https://github.com/w3c/web-platform-tests/pull/46 to the WebMessaging folder but it didn't exist yet at the time

[05:42:12.0000] <zewt>
nothing wrong with that message, except that probably the quotes should have just been removed, since it's not really a reply to it at all

[05:46:26.0000] <marcosc>
zewt: true

[06:00:45.0000] <annevk>
hahahaha

[06:00:56.0000] <annevk>
http://lists.w3.org/Archives/Public/public-script-coord/2013AprJun/0164.html

[06:01:13.0000] <annevk>
directed at me "You guys ought to be deeply embarrassed because HTML5 is *not* your child."

[06:01:27.0000] <annevk>
I don't even

[06:09:03.0000] <tobie>
annevk: ReferenceError: Jorge is not defined

[06:10:46.0000] <annevk>
>> uncaught exception

[06:11:25.0000] <Ms2ger>
annevk, wasn't that directed at TabAtkins?

[06:12:21.0000] <annevk>
Ms2ger: he quoted us separately and then used plural

[06:12:44.0000] <annevk>
anyway, es-discuss does not seem like a great list :/

[06:12:46.0000] <Ms2ger>
I read "you guys" as referring to W3C

[06:13:35.0000] <smaug____>
I read it that way too

[06:14:37.0000] <annevk>
Who is "Stop pretending" referring to then?

[06:15:00.0000] <annevk>
Seems weird to read it the way you read it.

[06:15:12.0000] <Ms2ger>
Oh wait

[06:15:20.0000] <Ms2ger>
You suggested moving to the W3C too?

[06:20:26.0000] <manu-db>
Hixie: I don't disagree with you in principle about a living standard being more up to date than a REC'd one. We plan to keep "living standard" copies of JSON-LD alive in the JSON-LD Community Group. I'm just trying to freeze a copy of JSON-LD at W3C as a REC so that the people who that sort of thing is important to (and there are those people) have something to work from.

[06:22:46.0000] <manu-db>
... and in order to freeze a copy of the JSON-LD API w/ Futures, I'd like to have a futures spec at the W3C, which seems do-able, except for the fact that annevk and TabAtkins seem to be against taking the futures spec to W3C. I could just fork it and do it anyway, but that seems like bad form and I'm deferring to annevk and TabAtkins about how they want to proceed w/ the Futures stuff.

[06:23:27.0000] <manu-db>
... or, we'll just go to REC with a minor change to the JSON-LD API, and put the Futures stuff in a living standard and call it a day. That's what I'm leaning towards doing right now.

[06:37:41.0000] <annevk>
I'm trying to decide how to organize http://fetch.spec.whatwg.org/

[06:37:57.0000] <annevk>
It needs an Introduction at some point I suppose.

[06:38:06.0000] <annevk>
Should I group Requests and Responses under Terminology?

[06:38:30.0000] <annevk>
It needs a section "CORS protocol" that explains how to implement CORS on the server.

[06:39:43.0000] <annevk>
Maybe it should have a section named "Origin" if we decide to obsolete more of the Origin RFC...

[06:40:18.0000] <annevk>
There have been some API ideas as well but maybe those should be left to separate specifications?

[06:48:15.0000] <darobin>
whoa, Widget Signatures are a Rec! Congrats marcosc :)

[06:48:29.0000] <darobin>
I don't even want to know how that made it past the 2 implementations requirement

[06:49:15.0000] <darobin>
annevk: I thought you were going to take over everything to do with Origin in Fetch?

[06:50:28.0000] <annevk>
darobin: I've been contemplating it, need to run it by abarth and sort of want to do the bits that are actually defined nowhere first

[06:51:01.0000] <darobin>
other than that, I'd put Request/Response under Terminology, yes

[06:51:13.0000] <annevk>
Also, it seems kind of weird for URL to depend on Fetch. If we want modular Origin as a concept should be separate from where its header is defined...

[06:51:57.0000] <annevk>
Could actually put the other Origin stuff in URL. That's not too bad.

[06:52:08.0000] <annevk>
And just have the header here.

[06:52:42.0000] <darobin>
I don't know, at this point it doesn't seem that weird to me

[06:53:36.0000] <darobin>
in fact I'm not sure someone could come up with something in this platform that I'd find qualifying as weird

[06:54:00.0000] <marcosc>
:)

[06:54:05.0000] <marcosc>
and thanks darobin

[06:54:57.0000] <annevk>
darobin: dude that's not the W3C party line

[06:55:08.0000] <annevk>
/me ain't even mad

[06:55:43.0000] <annevk>
epic: https://twitter.com/horse_js/status/324883020450512896

[06:57:20.0000] <darobin>
wait, W3C has a party line?

[06:57:51.0000] <darobin>
Horse_JS is awesome

[06:58:24.0000] <marcosc>
darobin: you don't call the W3C party line? It's awesome!

[06:58:42.0000] <marcosc>
You call it up and they tell you jokes about the WHATWG

[06:59:18.0000] <marcosc>
"Annevk, jgraham, and SimonSapin walk into a bar..."

[06:59:38.0000] <darobin>
lol

[06:59:48.0000] <darobin>
1-800-W3CPARTY

[07:00:23.0000] <marcosc>
exactly... it's another revenue stream set up by the previous W3C CEO.

[07:00:44.0000] <marcosc>
Most profitable part of the W3C, AFAIK.

[07:00:46.0000] <marcosc>
:)

[07:06:02.0000] <Ms2ger>
w3c-test:mirror

[07:06:13.0000] <darobin>
Ms2ger: ?

[07:06:44.0000] <Ms2ger>
jgraham has been saying that all over my inbox

[07:06:47.0000] <jgraham>
I think Ms2ger is fed up of me spamming him :)

[07:07:03.0000] <jgraham>
But now it works!

[07:07:10.0000] <jgraham>
I think

[07:07:19.0000] <Ms2ger>
Also, shouldn't the upload.php thing be on the submission/Opera/XHR branch?

[07:07:41.0000] <jgraham>
Possibly

[07:38:43.0000] <marcosc>
can we change the topic to: "You guys ought to be deeply embarrassed because HTML5 is *not* your child."

[07:38:45.0000] <marcosc>
?

[07:39:10.0000] <tobie>
Still trying to parse that sentence.

[07:39:29.0000] <marcosc>
http://lists.w3.org/Archives/Public/public-script-coord/2013AprJun/0164.html

[07:39:40.0000] <tobie>
I know the source.

[07:39:51.0000] <marcosc>
oh, that was for others :)

[07:39:53.0000] <tobie>
I suspect a race condition during the delivery of the email.

[07:40:15.0000] <marcosc>
I'm waiting for darobin to fly in and save the day with witty words

[07:40:37.0000] <marcosc>
"you are all my children" or something like that

[07:48:53.0000] <SteveF>
I thought HTML was TIMBL's child it was then rebirthed by whatwg and then adopted back by the w3c

[07:52:29.0000] <annevk>
marcosc: hehehe

[08:06:54.0000] <marcosc>
/me gives HTML some candy... it's had a very difficult upbringing. 

[08:08:18.0000] <jgraham>
/me hopes that we taught HTML not to accept candy from strange people

[08:20:56.0000] <darobin>
HTML is turning 24 this year, I pretty much hope that it has the required self-defence to handle marcosc

[08:22:28.0000] <marcosc>
24... argh... I'm getting old.

[08:23:01.0000] <annevk>
24?

[08:23:48.0000] <annevk>
/me finds http://www.w3.org/MarkUp/draft-ietf-iiir-html-01.txt

[08:24:19.0000] <annevk>
hmm http://www.w3.org/Proposal.html

[08:24:31.0000] <annevk>
http://info.cern.ch/Proposal.html ah

[08:24:49.0000] <darobin>
it was 1989, right?

[08:25:03.0000] <Ms2ger>
Apparently

[08:25:08.0000] <darobin>
right

[08:25:18.0000] <annevk>
but no HTML there

[08:25:43.0000] <darobin>
I think HTML is late 1989

[08:25:48.0000] <darobin>
or later at least

[08:26:00.0000] <darobin>
it's in Weaving the Web somewhere, but I forget the details

[08:29:10.0000] <marcosc>
phh! what a stupid idea. No wonder it was rejected

[08:57:21.0000] <marcosc>
annevk: is there any reason why in the Futures spec you sometimes use a <var>word</var> but then use <var>f</var> to refer to a future. Why not just say Let <var>future</var> ben a new future?

[08:57:39.0000] <marcosc>
Same with <var>r</var> for resolvers

[08:58:29.0000] <marcosc>
I'm concerned that it sets a bad precedence for other specs

[08:58:53.0000] <marcosc>
don't want to end up reading: The if q's f is has an r that ...

[09:00:09.0000] <annevk>
marcosc: seemed weird to make it read let future be a future

[09:00:18.0000] <annevk>
don't care really, file a bug

[09:07:49.0000] <dglazkov>
good morning, Whatwg!

[09:13:05.0000] <annevk>
Ms2ger: I wonder if Lachy is still going to work on that. Lachy?

[09:13:17.0000] <annevk>
Lachy: That is, if you're still working on that DOM patch

[09:13:49.0000] <Lachy>
annevk, yes, I will. I've just been busy searching for a new job

[09:14:11.0000] <Lachy>
and a new apartment.

[09:43:38.0000] <annevk>
Lachy: cool, good luck with that!

[09:43:42.0000] <annevk>
Lachy: still in Oslo?

[09:44:07.0000] <Lachy>
yes

[09:45:17.0000] <Lachy>
we just got accepted into a new apartment yesterday and we'll sign the contract next week, and I have some good potential jobs that I might get offers for soon.

[09:47:45.0000] <TabAtkins>
manu-db: The fact that you keep insisting on getting a Future spec in the W3C (rather than just gettinga stable Futures spec, anywhere) shows the error in your thinking.  STOP THINKING THAT.  ^_^

[09:48:30.0000] <TabAtkins>
A Futures spec "in the W3C" will be exactly as stable as one outside the W3C - that is, it'll change as people come up with better ideas, unless such a change would break too many existing authors/users.

[09:50:05.0000] <TabAtkins>
annevk: Fwiw, I'm fine with terminology like "let future be a future", particularly when it's accompanied by appropriate markup/styling to distinguish between the term and the variable.

[09:57:40.0000] <manu-db>
TabAtkins: A Futures spec "in the W3C" would solve a problem that people other than you have while allowing it to continue to evolve outside of the W3C. You need to realize that you have people that have said that they're willing to help and your hard-line stance on how you want to see Futures developed is keeping you from making practical gains in getting the technology integrated into...

[09:57:42.0000] <manu-db>
...other specifications. :)

[09:57:44.0000] <manu-db>
I'm trying to figure out how to be a proponent of Futures, but you're making it very difficult to do.

[09:58:26.0000] <manu-db>
So, you can keep your thinking the way it is, but it's hurting Futures more than it's helping (wrt. this particular 3 day long conversation) :)

[09:58:40.0000] <manu-db>
s/it is/you are/

[09:59:49.0000] <TabAtkins>
manu-db: Once again, the "problem that other people have" is a non-existent problem that they are making up.  There is, as I and others have stated, absolutely no problem with referring to non-W3C documents, even in Rec.  There is also no implied stability guarantees from a document *in* the W3C.

[10:00:32.0000] <TabAtkins>
Pretending that a W3C Futures document would be different in *any* aspect from a WHATWG Futures document is a fantasy.

[10:00:59.0000] <TabAtkins>
(Rather, different in any aspect that affects your ability to ref things.)

[10:01:02.0000] <annevk>
HTTP auth is so weird: http://wiki.whatwg.org/wiki/HTTP_Authentication

[10:01:54.0000] <karlcow>
"The Future Is Unevenly Distributed"

[10:02:56.0000] <manu-db>
speaking of which - we released Web Keys HTTP Signatures yesterday to an immediate security exploit (which is fixed now): http://lists.w3.org/Archives/Public/ietf-http-wg/2013AprJun/0113.html

[10:03:10.0000] <manu-db>
(HTTP Auth via signatures)

[10:03:55.0000] <annevk>
I'd recommend against HTTP auth. Anyway, if someone has details on other implementations that'd be most welcome: http://wiki.whatwg.org/wiki/HTTP_Authentication

[10:04:13.0000] <annevk>
Details will influence basically every API that does fetching...

[10:06:09.0000] <Ms2ger>
<TabAtkins> Pretending that a W3C Futures document would be different in *any* aspect from a WHATWG Futures document is a fantasy.

[10:06:28.0000] <Ms2ger>
Just like W3C HTML5 is the same in every aspect as WHATWG HTML?

[10:06:49.0000] <TabAtkins>
Ms2ger: Dude, I clarified *in the very next line*.

[10:10:33.0000] <TabAtkins>
annevk: Just verifying, but does XHR always send progress events for the end of the load?  It kinda looks like it does.

[10:10:57.0000] <annevk>
TabAtkins: you mean "progress"? yes

[10:11:20.0000] <TabAtkins>
I... I said "progress".

[10:11:35.0000] <annevk>
TabAtkins: yeah but progress events is a concept too :/

[10:12:39.0000] <TabAtkins>
Well, XHR seems to explicitly fire "progress events".

[10:12:45.0000] <TabAtkins>
So, I'm confused about what the distinction is.

[10:13:29.0000] <annevk>
Are we talking about ProgressEvent.type == "progress" or are we talking about events implementing ProgressEvent?

[10:14:58.0000] <annevk>
In any event, talking about event types, it's typically "progress", one of "load", "error", "abort", and "timeout", "loadend"

[10:15:00.0000] <annevk>
iirc

[10:15:15.0000] <TabAtkins>
Yeah, just found the nice table in the Progress Events spec.

[10:15:53.0000] <TabAtkins>
Okay, I was wondering about convention with regards to firing both a "result" event and a progress event marking that things are done.

[10:16:19.0000] <TabAtkins>
It looks like the "result" event is usually one of load/error/abort, and separately, a "loadend" progress indicator is usually also sent.

[10:16:48.0000] <TabAtkins>
Context was Mounir suggesting that progress futures call the progress callback when the future successfully completes, too, with the same value.

[10:17:06.0000] <annevk>
with the completion value?

[10:17:07.0000] <annevk>
hmm

[10:17:24.0000] <annevk>
I'd have assumed the progress callback would get some kind of Progress object

[10:17:31.0000] <TabAtkins>
Wondering if instead we shoudl just make a convention (recorded in the spec) that if you're using the progress aspect of futures, you should send a "start" and "end" progress at appropriate times, in addition to meaningful intermediate values.

[10:17:35.0000] <TabAtkins>
Yeah.

[10:17:35.0000] <annevk>
don't think you want to change that suddenly in the end

[10:17:58.0000] <annevk>
well that all depends on when stuff is registered

[10:18:08.0000] <annevk>
the operation could be midway or have finished already

[10:18:19.0000] <TabAtkins>
Well, sending doesn't depend on when it's registered.  I'm just saying, independent of listeners.

[10:18:34.0000] <annevk>
okay

[10:18:45.0000] <annevk>
I think just before you invoke resolve/accept makes sense

[10:18:57.0000] <annevk>
prolly on the same task

[10:19:01.0000] <TabAtkins>
Yeah.

[10:19:08.0000] <annevk>
before that doesn't matter much I think

[10:19:27.0000] <annevk>
but not in the same task as creation

[10:19:32.0000] <TabAtkins>
Well, I think there should be a convention that you should send a "start" progress update immediately (if you're using progresses at all).

[10:19:53.0000] <annevk>
immediately means?

[10:20:09.0000] <TabAtkins>
In the initial resolver-callback code?

[10:20:10.0000] <mounir>
TabAtkins: the last progress event doesn't have to be a convention, that could be made by the UA

[10:20:21.0000] <TabAtkins>
(It'll still be actually responded to in the next tick.)

[10:20:26.0000] <TabAtkins>
mounir: Hm, that could work too.

[10:21:06.0000] <annevk>
yeah, accept/reject could report latest progress value at that point

[10:21:15.0000] <annevk>
via the progress algorithm

[10:22:30.0000] <TabAtkins>
Yeah, with a specified, known Progress value (if we use some progress object, I guess).

[10:24:06.0000] <annevk>
progress could be stored alongside result or some such

[10:24:21.0000] <annevk>
and you queue a task whenever it's updated

[10:24:26.0000] <annevk>
or some such

[10:24:35.0000] <annevk>
and queue a task on creation

[10:28:39.0000] <TabAtkins>
annevk: I'm working through getting the semantics right for EventStream, and an event stream "completing" is similar to a Future making progress - not everything will do so, and there's no natural way for chained streams to complete.

[10:29:29.0000] <TabAtkins>
annevk: I'm still tweaking things, but right now I make completion automatically "bubble" across chained streams - if the input stream completes, the output stream completes too.

[10:30:01.0000] <TabAtkins>
Wonder if you want to do something similar with progress and chained futures - if the input future sends a progress update, the output future passes it along.

[10:30:17.0000] <TabAtkins>
That would make f.then().progress() identical to f.progress().then().

[10:35:23.0000] <annevk>
hmm

[10:55:43.0000] <annevk>
http://www.w3.org/2001/tag/doc/mime-respect-20130405.html got approved just now

[10:56:02.0000] <annevk>
together with figuring out HTTP auth, it's been a nice day

[11:01:57.0000] <GPHemsley>
/me notes the date in the filename doesn't match the date in the document.

[11:01:58.0000] <zcorpan>
jgraham: http://krijnhoetmer.nl/irc-logs/whatwg/20130418#l-788

[11:20:23.0000] <zcorpan>
/me notices hallvors did the same mistake as him: r/hallvors/master

[11:29:26.0000] <jgraham>
zcorpan: You probably don't want to rebase your pull request onto a newer master (and certainly don't want to merge it); I don't think that github supports that

[11:34:47.0000] <jgraham>
I actually don't know what the github flow is when you have a long-lived review branch that needs to be rebased

[11:35:00.0000] <zcorpan>
jgraham: ok. undid merge with git reset --hard ORIG_HEAD

[11:35:31.0000] <zcorpan>
i guess we can wait with moving the tests until the review is accepted

[11:36:16.0000] <zcorpan>
or does it work to move the tests to the new directory?

[11:36:22.0000] <reyre__>
hi all. i'm currently one of the people implementing WEBVTT for firefox

[11:36:33.0000] <zcorpan>
reyre__: hi!

[11:36:58.0000] <Ms2ger>
Hi reyre__! :)

[11:37:02.0000] <reyre__>
just wanted to clarify a point -- are classes that are attached cue text tags supposed to be accessible via css externally? like on webpages?

[11:37:12.0000] <reyre__>
Ms2ger: oh hay! fancy seeing you here :)

[11:37:18.0000] <reyre__>
zcorpan: hey :)

[11:38:30.0000] <zcorpan>
reyre__: yes, with e.g. video::cue(c.classname)

[11:39:50.0000] <Ms2ger>
But not by i.classname?

[11:40:28.0000] <TabAtkins>
Correct, because they're in a subdocument.

[11:40:31.0000] <TabAtkins>
(effectively)

[11:40:41.0000] <reyre__>
it would be video::cue(i.classname) than ?

[11:40:46.0000] <zcorpan>
reyre__: but *not* with video::cue(c[class=classname]) since the spec only exposes it as a class for Selectors, not as an attribute

[11:40:56.0000] <zcorpan>
reyre__: right

[11:41:13.0000] <Ms2ger>
Interesting

[11:41:19.0000] <reyre__>
zcorpan: okay, awesome. thanks for the clarification :)

[11:41:44.0000] <zcorpan>
reyre__: i think there are reftests for this that opera submitted

[11:43:00.0000] <reyre__>
zcorpan: that's useful :) i'll check them out

[11:43:16.0000] <Ms2ger>
Sounds like I'd better land my importing patches, then

[11:50:22.0000] <zcorpan>
reyre__: http://w3c-test.org/web-platform-tests/master/old-tests/submission/Opera/media/ or https://github.com/w3c/web-platform-tests/tree/master/old-tests/submission/Opera/media

[11:52:50.0000] <reyre__>
zcorpan: thanks :) i'll definitely take a look at them. reftesting is hard

[11:54:48.0000] <zcorpan>
reyre__: iirc some of the tests assume Ahem is installed and this file might need tweaking to fit the reftest runner you use at mozilla... https://github.com/w3c/web-platform-tests/blob/master/old-tests/submission/Opera/media/track/webvtt/rendering/reftest/support/refTestWait.js

[11:55:19.0000] <zcorpan>
reyre__: to set/unset some attribute on the root element instead

[11:55:43.0000] <zcorpan>
(or as well)

[11:56:12.0000] <reyre__>
okay, cool. i'll take write it down so i don't forget. :)

[11:57:04.0000] <zcorpan>
reyre__: if you make that change, you could make a pull request so it's part of the official testsuite

[11:58:11.0000] <reyre__>
zcorpan: there is an official test suite for WEBVTT?

[11:58:51.0000] <zcorpan>
well, i meant our submission that i pointed to above (as opposed to your own fork)

[11:59:36.0000] <reyre__>
ah, okay i see

[12:00:36.0000] <zcorpan>
another reservation with the tests is that some might be outdated already, so double-check with the spec :-)

[12:03:53.0000] <reyre__>
zcorpan: yeah that seems to be  changing everyday... i barely even recognize it anymore from when we started trying to implement it

[12:04:27.0000] <zcorpan>
heh

[12:08:09.0000] <rillian>
reyre__: not until we submit ours, no :)

[12:10:45.0000] <Ms2ger>
rillian, I sure hope we're not duplicating Opera's ;)

[12:11:02.0000] <rillian>
I'm sure we have to some extent

[12:11:26.0000] <Ms2ger>
Boo

[12:12:02.0000] <jgraham>
zcorpan: I think moving the tests should work. Although I haven't looked much at the oull request

[12:12:32.0000] <rillian>
can we import the opera tests in the mozilla tree?

[12:12:35.0000] <rillian>
I don't see a license

[12:12:39.0000] <Ms2ger>
Sure thing

[12:12:46.0000] <Ms2ger>
Look at dom/imptests some day

[12:12:56.0000] <Ms2ger>
It's full of Opera's tests

[12:13:07.0000] <rillian>
hooray

[12:13:11.0000] <reyre__>
:)

[12:13:58.0000] <Ms2ger>
This is as good a time as any to get reftest importing done...

[12:38:00.0000] <gsnedders>
Ms2ger: Speaking of your tree being full of our tests, we should release more. :P

[12:38:13.0000] <Ms2ger>
Please :)

[13:14:45.0000] <Ms2ger>
Hey guys

[13:14:53.0000] <Ms2ger>
Who understands stable state stuff?

[13:14:57.0000] <Ms2ger>
zcorpan?

[13:15:14.0000] <zcorpan>
maybe

[13:18:09.0000] <zcorpan>
Ms2ger: what's your question?

[13:18:37.0000] <Ms2ger>
<bz> I guess my question is whether a "stable state" would be a script runner or an nsIRunnable

[13:19:02.0000] <Ms2ger>
Which means that asking here was probably premature :)

[13:19:51.0000] <zcorpan>
ok

[13:41:14.0000] <rillian>
so http://w3c-test.org/web-platform-tests/master/old-tests/submission/Opera/media/track/track-element/cloneNode.html doesn't work at least in part because it assumes <track> will do something without being a child of a media element

[13:41:28.0000] <rillian>
which the spec now gives us on out on trying to make work

[14:04:57.0000] <jgraham>
TabAtkins: (I presume the "canvas text is illegal" is an accessibility argument)

[14:05:43.0000] <TabAtkins>
That would make sense.  It woudl also be nonsense, but whatever.

[14:13:41.0000] <cabanier>
or both

[16:35:55.0000] <aleray>
hi, I'm trying to create an html scrapper using html5lib in python. After parsing the page, I often get broken html. Here is a minimal example: http://dpaste.com/1064087/ is there anything wrong with it?

[16:40:42.0000] <zewt>
why are you scrapping poor innocent htmls

[16:41:44.0000] <aleray>
zewt, the big picture is tu create a script that can "freeze" webpages by applying external css inline.

[16:42:04.0000] <aleray>
and "cut" fragments using xpath

[16:42:57.0000] <aleray>
anyway I need to parse arbitrary html

[16:43:14.0000] <aleray>
the nytimes is a good exemple of complex page

[16:45:36.0000] <aleray>
it works on simple pages but easily breaks on more complex pages

[16:51:32.0000] <hober>
how is http://lists.w3.org/Archives/Public/public-script-coord/2013AprJun/0165.html not a meme yet

[16:51:46.0000] <TabAtkins>
Get on it, dude.

[16:52:01.0000] <hober>
i tried to come up with a billie jean / mj one, but failed

[16:52:25.0000] <hober>
I'm just, just... NOT FUNNY ENOUGH! *sob*

[16:53:04.0000] <othermaciej>
sure, picture MJ moonwalking, top caption "HTML5", bottom caption "is not your child"

[16:54:12.0000] <othermaciej>
or same captions, but this image http://theyuppiedilemma.files.wordpress.com/2010/06/creepy-white-van.jpg

[16:54:27.0000] <aleray>
zewt, other, no idea?

[16:55:04.0000] <aleray>
it works well in my browser so why is html5lib not digesting malformed html?


2013-04-19
[17:18:49.0000] <TabAtkins>
aleray: The html5lib authors are in Europe, so probably aren't watching the channel now.

[17:18:58.0000] <aleray>
ok

[17:19:05.0000] <aleray>
be right back tommorow then

[17:19:16.0000] <aleray>
thanks

[23:27:49.0000] <zcorpan>
is there a pull request for https://github.com/w3c/web-platform-tests/tree/master/old-tests/submission/Opera/media ? i didn't find anything in the list of pull requests

[23:59:35.0000] <zcorpan>
TabAtkins: shouldn't StreamInit be EventStreamInit etc?

[00:47:37.0000] <jgraham>
zcorpan: I can't see any evidence of a PR for those tests

[00:48:31.0000] <jgraham>
By which I mean "I can't see a commit that modifies that path except for the one that created it", so it is possible that my git0fu is just too weak

[00:50:38.0000] <jgraham>
zcorpan: You should make one :)

[00:51:08.0000] <jgraham>
(I think the problem might have been that it wasn't clear what "the right place" for those tests was)

[01:39:50.0000] <aleray>
hi, I'm trying to create an html scrapper using html5lib in python. After parsing the page, I often get broken html. Here is a minimal example: http://dpaste.com/1064087/ is there anything wrong with it?

[01:40:34.0000] <jgraham>
Define "broken html"?

[01:50:13.0000] <aleray>
jgraham, html i didn't write :P

[01:51:36.0000] <jgraham>
aleray: html5lib doesn't make any guarantees that the output conforms to authoring requirements. All it promises is that given random mal-formed input, the tree created will be the same as the DOM tree in browsers.

[01:52:09.0000] <jgraham>
It is quite possible to create a tree that is "broken" for some value of "broken"

[01:52:20.0000] <aleray>
jgraham, that's what i'm looking for

[01:52:27.0000] <jgraham>
i.e. html5lib is not supposed to be like tidy

[01:52:35.0000] <jgraham>
What are you looking for?

[01:52:49.0000] <aleray>
have the same rendering as in web browser

[01:53:25.0000] <jgraham>
I guess you don't mean "rendering" since there are no graphics involved

[01:53:45.0000] <aleray>
so i don't get why http://dpaste.com/1064087/ output is different from just wgetting the page

[01:54:48.0000] <Philip`>
/me wonders whether tree.write tries to emit HTML or XML

[01:54:56.0000] <jgraham>
It's different because that code uses to html5lib parse the page and reserialize it. wget just reads the bytes off the wire.

[01:55:11.0000] <jgraham>
That's also a good point

[01:55:24.0000] <aleray>
when i look at, let say, a copy of nytimes homepage fetched with wget and one fetched with my code look different in my browser

[01:55:24.0000] <jgraham>
YOu probably don't want to use XML serialization

[01:55:36.0000] <aleray>
jgraham, ahhh

[01:56:22.0000] <jgraham>
aleray: More like Philip`, ahhh :)

[01:57:07.0000] <aleray>
oups confused... do you see what I mean jgraham ?

[02:00:54.0000] <jgraham>
aleray: Try replacing tree.write('/tmp/foo.html') with open('/tmp/foo.html', 'w').write(html5lib.serialize(tree, tree="lxml"))

[02:01:11.0000] <aleray>
 jgraham ok I try!

[02:02:14.0000] <aleray>
jgraham, humm "UnicodeEncodeError: 'ascii' codec can't encode character u'\xb7' in position 4245: ordinal not in range(128)"

[02:02:27.0000] <aleray>
I will never get how coding works :P

[02:02:59.0000] <Ms2ger>
s/'w'/'wb'/?

[02:03:02.0000] <jgraham>
encoding="utf8" to the serializer or something

[02:04:44.0000] <aleray>
oh yeah!

[02:04:47.0000] <aleray>
thanks

[02:04:49.0000] <aleray>
a lot

[02:06:34.0000] <aleray>
:)

[02:19:47.0000] <zcorpan>
reyre__: i added your comment here https://critic.hoppipolla.co.uk/showcomment?chain=74 - feel free to raise more issues there if you find any (ask jgraham if you need assistance with critic)

[02:55:12.0000] <zcorpan>
Switched to branch 'submission/opera-web-messaging-2'

[02:55:12.0000] <zcorpan>
Your branch and 'upstream/master' have diverged,

[02:55:12.0000] <zcorpan>
and have 2 and 1146 different commits each, respectively.

[03:04:11.0000] <zcorpan>
/me wonders what to do, if anything

[03:05:52.0000] <annevk>
So I noticed someone gave up editing CSSOM?

[03:06:44.0000] <annevk>
He switched all the tooling around. Fixed no bugs. And then gave up? And still got paid for that too I reckon. Sometimes I wish media would pay some attention to the bullshit that's going on.

[03:12:02.0000] <marcosc>
:)

[03:13:43.0000] <Ms2ger>
Turns out editing isn't so simple after all?

[04:18:53.0000] <Ms2ger>
Anyone feel like reviewing https://github.com/w3c/web-platform-tests/pull/45 ? :)

[04:19:03.0000] <zcorpan>
annevk: do you recall why cssom-view specs MouseEvent.screenX etc? http://www.w3.org/mid/CANpe7K1J-9q52ekEe3W65MRTP_Z4Vocyp1urVXK05yp9U9U+KQ⊙mgc

[04:20:18.0000] <odinho>
jgraham: You should keep the commit info when you are moving commits next time.

[04:20:43.0000] <odinho>
jgraham: Either by using a patch (git format-patch + git am), or just cherry-picking it.  IMHO

[04:21:32.0000] <zcorpan>
Ms2ger: i'll have a look

[04:22:19.0000] <annevk>
zcorpan: because that guy cannot read?

[04:23:05.0000] <annevk>
zcorpan: it should be part of the "User Interaction" specification I think, but only if it defines such things as whether or not it's pixels and what box we're talking about, etc.

[04:23:33.0000] <annevk>
(and hit testing)

[04:24:35.0000] <jgraham>
odinho: I didn't move a commit. I recreated it

[04:24:54.0000] <jgraham>
Because moving it would have left the file in the wrong place still

[04:25:15.0000] <jgraham>
s/recreated it/created a new one/

[04:27:06.0000] <annevk>
I took a crack at replying to glazou on that www-tag thread.

[04:27:23.0000] <annevk>
I must be missing something since it all seems so obvious. http://lists.w3.org/Archives/Public/www-tag/2013Apr/0059.html

[04:29:43.0000] <annevk>
marcosc: also, it seems you said much the same thing in the beginning. I'm surprised how quickly glazou turned to "you probably never worked for such companies". That's some bad faith.

[04:36:44.0000] <Ms2ger>
annevk, hm, can I still test that a.href reflects as a URL?

[04:37:20.0000] <odinho>
jgraham: Ohwell, it's possible to rewrite the patch too, but that's more involved :-)

[04:37:33.0000] <annevk>
Ms2ger: I guess

[04:38:01.0000] <jgraham>
odinho: Yeah, I could have done something insane or I could have just not bothered

[04:38:39.0000] <Ms2ger>
And where did a.media go?

[04:39:39.0000] <annevk>
Ms2ger: killed?

[04:40:09.0000] <Ms2ger>
I must have missed that memo

[04:41:57.0000] <Ms2ger>
Is blame.r7000 the most recent one?

[04:42:10.0000] <Ms2ger>
Ooh, http://www.whatwg.org/specs/web-apps/current-work/blames-list.cgi

[04:45:35.0000] <Ms2ger>
Heh, date.pubDate

[04:46:33.0000] <zcorpan>
https://github.com/w3c/web-platform-tests/pull/45 is not in http://w3c-test.org/web-platform-tests/submissions/ ?

[04:48:04.0000] <Ms2ger>
Is now

[04:50:17.0000] <Ms2ger>
Ah, here we are: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20521

[04:59:46.0000] <MikeSmith>
hsivonen: about the validator HTML4 thing, I'm rewriting the Schematron stuff in Java

[04:59:59.0000] <MikeSmith>
a la Assertions.java

[05:00:11.0000] <MikeSmith>
if that's not a good idea, lemme know

[05:00:30.0000] <MikeSmith>
but that will remove the Schematron dependency

[05:00:38.0000] <MikeSmith>
and thus the performance bottlenecks

[05:00:39.0000] <hsivonen>
MikeSmith: if the W3C still wants to run an HTML4 validator, it's a good idea

[05:00:46.0000] <MikeSmith>
yeah

[05:00:53.0000] <MikeSmith>
we need to actually

[05:01:56.0000] <MikeSmith>
we need for the validator.nu-based service to become the default service, replacing the existing legacy validator

[05:02:18.0000] <MikeSmith>
and a requirement of that is, it has to have HTML4 support

[05:02:34.0000] <odinho>
zcorpan: Should be no reason to wait on the web messaging tests, because you're saying they are okay, right?

[05:02:34.0000] <MikeSmith>
so this will give us that

[05:03:44.0000] <zcorpan>
odinho: i thought there was a requirement that somebody other than me needs to review them

[05:04:13.0000] <Ms2ger>
zcorpan, eh, you're a smart guy, go for it

[05:04:30.0000] <odinho>
Yeah. If you say they're good, should be okay.

[05:06:30.0000] <zcorpan>
annevk reviewed 6 files and found 1 issue

[05:07:33.0000] <darobin>
I didn't know that there was any kind of assertion in HTML4 that could be conducive to the writing of a validator

[05:08:32.0000] <zcorpan>
darobin: the html4 support in v.nu isn't an implementation of the html4 spec

[05:10:47.0000] <odinho>
zcorpan: Well, but the old process was, "wait a few days on a mailing list, then move them".  But you say noone looked at them here inside Opera either?

[05:11:04.0000] <jgraham>
I did some level of review

[05:11:07.0000] <odinho>
zcorpan: We mostly find bugs after approvement also.  Hard to catch everything in review.

[05:11:14.0000] <jgraham>
But not really "is this correct per spec"

[05:11:34.0000] <darobin>
zcorpan: what, you mean it doesn't check for case-insensitive numbers? I'm shocked...

[05:11:53.0000] <jgraham>
There are other reasons to like review e.g. it means that more than one person knows what is tested

[05:11:58.0000] <zcorpan>
darobin: what are case-insensitive numbers?

[05:12:16.0000] <MikeSmith>
darobin: we just inherited the assertions from a file that Petr Nalevka wrote back in the day

[05:12:30.0000] <MikeSmith>
what he based them on I'm not sure

[05:12:59.0000] <jgraham>
But since there are approximately 5 people in the world that have shown any interest in doing test review so far…

[05:13:22.0000] <MikeSmith>
darobin: but it's mostly assertions about ancestor-descendant restrictions

[05:13:31.0000] <jgraham>
Actually I guess 6 since Tina reviewed the SSE tests

[05:13:32.0000] <Ms2ger>
Oh, wow, someone got itemValue right while implementing a new element in Gecko, without me telling them

[05:13:54.0000] <darobin>
zcorpan: it's something that HTML4 has, e.g. http://www.w3.org/TR/html401/struct/tables.html#adef-rowspan

[05:13:57.0000] <MikeSmith>
darobin: like, a label element must not contain a nested label element

[05:14:04.0000] <jgraham>
Apparently review also allowed Ms2ger to have the occasional pleasant surprise

[05:14:10.0000] <darobin>
rowspan = number [CN] (where [CN] means case insensitive)

[05:14:37.0000] <odinho>
jgraham: Yes, to the bulk that :-)

[05:14:42.0000] <odinho>
s/bulk/bulk of/

[05:14:47.0000] <darobin>
MikeSmith: yeah I know, I was mostly poking fun at HTML4, not expecting people to take me seriously :)

[05:14:57.0000] <zcorpan>
darobin: [CN] means case *neutral*

[05:15:00.0000] <MikeSmith>
zcorpan: I think the  html4 support in v.nu attempts to be an implementation of the HTML4 except that it doesn't use SGML parsing

[05:15:20.0000] <darobin>
gee, you kill the fun out of everything zcorpan

[05:15:37.0000] <zcorpan>
MikeSmith: the schema is an implementation of XHTML 1.0

[05:15:48.0000] <MikeSmith>
darobin: well I actually wonder if those assertions are stated normatively in the HTML4 spec. I doubt they are actually

[05:15:56.0000] <MikeSmith>
zcorpan: true

[05:16:54.0000] <darobin>
MikeSmith: maybe some are in the DTD?

[05:17:40.0000] <MikeSmith>
you mean as a comment?

[05:17:58.0000] <MikeSmith>
ah, o or SGML exclusions?a

[05:18:14.0000] <Ms2ger>
MikeSmith, looking for normative content in HTML4?

[05:18:17.0000] <MikeSmith>
I don't think the DTD has any excluations

[05:18:18.0000] <Ms2ger>
You must be new here

[05:18:32.0000] <zcorpan>
ok i merged web-messaging-2

[05:18:42.0000] <Ms2ger>
Now web-messaging-1?

[05:19:26.0000] <jgraham>
Then web-messaging-liftoff?

[05:20:33.0000] <MikeSmith>
Ms2ger: I am trying to put a piece of new cloth unto an old garment

[05:21:02.0000] <MikeSmith>
but I fear for that which is put in to fill it up taketh from the garment, and the rent is made worse

[05:21:23.0000] <MikeSmith>
at least Jukka seems to think so

[05:21:32.0000] <MikeSmith>
though he didn't put it in quite those words

[05:22:10.0000] <Ms2ger>
The rent is too damn high

[05:22:56.0000] <smaug____>
Ms2ger: possible an element which I reviewed?

[05:22:56.0000] <Ms2ger>
/me drops from 945 Fail to 191 Fail

[05:23:06.0000] <Ms2ger>
smaug____, nah, track

[05:23:12.0000] <MikeSmith>
Ms2ger: nicely riffed

[05:23:16.0000] <smaug____>
ah

[05:23:22.0000] <smaug____>
Ms2ger: didn't bz review that :)

[05:23:26.0000] <smaug____>
/me can't recall

[05:23:30.0000] <Ms2ger>
He is reviewing, yes

[05:23:37.0000] <Ms2ger>
And not too happy :)

[05:25:08.0000] <Ms2ger>
jgraham, a question...

[05:25:28.0000] <Ms2ger>
If I go to https://critic.hoppipolla.co.uk/6dda8721?review=5, tick a box, and submit the review...

[05:25:45.0000] <Ms2ger>
Then the new page it loads has other boxes ticked

[05:26:17.0000] <Ms2ger>
/me poofs for a bit

[05:40:53.0000] <karlcow>
/me reading www-tag and being sad about humanity

[05:41:29.0000] <annevk>
karlcow: I hope the latter did not follow from the former, 'cause then you might be in for a surprise

[05:48:18.0000] <hsivonen>
what if the former followed from the latter?

[05:52:06.0000] <annevk>
heh

[06:02:39.0000] <karlcow>
:)

[07:03:25.0000] <annevk>
Why is data:text/xml,<?xml version="1.0" encoding="bullshit"?><x/> well-formed?

[07:03:56.0000] <annevk>
I cannot find a statement in the standard that forbids that. Browsers seem to use utf-8...

[07:15:35.0000] <darobin>
 bast [16:17] html-testsuite (master) $ echo '<?xml version="1.0" encoding="bullshit"?><x/>' | xmllint -

[07:15:35.0000] <darobin>
-:1: parser error : Unsupported encoding bullshit

[07:15:35.0000] <darobin>
<?xml version="1.0" encoding="bullshit"?><x/>

[07:15:38.0000] <darobin>
annevk: ^^

[07:16:38.0000] <annevk>
Okqy, but why does it think it's in error?

[07:16:51.0000] <annevk>
Why as in what am I missing in http://www.w3.org/TR/xml/#charencoding why

[07:17:27.0000] <gsnedders>
"It is a fatal error when an XML processor encounters an entity with an encoding that it is unable to process."

[07:19:22.0000] <hsivonen>
darobin: what do Chrome and IE do with that

[07:19:31.0000] <annevk>
That's some ambiguous use of entity

[07:19:44.0000] <darobin>
annevk: not in the context of the XML spec

[07:19:47.0000] <hsivonen>
darobin: my motivation to change Gecko for encoding bullshit is pretty low

[07:20:00.0000] <darobin>
hsivonen: I can't say I'm violently in favour either

[07:21:56.0000] <darobin>
hsivonen, annevk: Chrome gives an error

[07:22:10.0000] <darobin>
as does Safari

[07:22:23.0000] <darobin>
I'm running too much crap at this specific moment to load up an IE VM

[07:22:34.0000] <darobin>
I would expect it to dislike it though

[07:22:57.0000] <gsnedders>
annevk: How is that ambiguous?

[07:23:28.0000] <darobin>
gsnedders: I think he's thinking of entity references

[07:23:34.0000] <annevk>
darobin: I'm getting a blank page in IE

[07:23:50.0000] <annevk>
darobin: hsivonen: using http://dump.testsuite.org/xml/encoding-bullshit.xml

[07:24:02.0000] <annevk>
hsivonen: it does seem like something we could fix though at some point

[07:24:44.0000] <hsivonen>
annevk: great name for a test file

[07:25:12.0000] <hsivonen>
annevk: I'd rather implement XML5 than make XML 1.0 fail harder

[07:25:21.0000] <hsivonen>
annevk: but if you are writing patches these days...

[07:26:10.0000] <hsivonen>
annevk: since the encoding stuff is a hack outside expat, there's no easy way to make the YSoD show up with a sensible message in this case

[07:26:33.0000] <hsivonen>
one would need to write a non-expat-driven way to cause a YSoD for this

[07:26:36.0000] <annevk>
I want to give patching a try again someday. Not sure if making XML stricter is going to be the start :-)

[07:27:15.0000] <annevk>
Seems weird that expect would not ask the browser if the encoding is supported.

[07:27:39.0000] <hsivonen>
annevk: the encoding stuff happens before expat has a chance to do anything

[07:27:53.0000] <annevk>
Ah I see

[07:28:12.0000] <hsivonen>
expat's own encoding API is so weird that instead of using it, we do the conversion to UTF-16 outside expat and tell expat it's dealing with UTF-16

[07:28:16.0000] <annevk>
The whole encoding thing is kinda undefined too because the encodings are undefined. XML's black box.

[07:29:00.0000] <hsivonen>
if you can claim EXI is an encoding for XML, surely you can say this is XML on top of the Encoding Standard

[07:29:03.0000] <hsivonen>
or something

[07:29:22.0000] <hsivonen>
anyway, I have many other encoding-related patches to write first

[08:47:06.0000] <timeless>
hello world

[08:47:21.0000] <timeless>
anyone here play w/ <track>s and Cue objects?

[08:47:29.0000] <timeless>
i'm having problems w/ cue.onenter in Chrome

[08:47:42.0000] <timeless>
it works if i set a breakpoint on it, but it doesn't seem to fire otherwise :o

[09:10:38.0000] <Greg1>
Hi everyone - I'm reading about futures right now and am curious on browser support. And do I need an additional library for it.

[09:11:10.0000] <Ms2ger>
No browser support

[09:11:41.0000] <jgraham>
They haven't resolved yet

[09:11:44.0000] <Greg1>
I actually just ran into an issue yesterday where the callbacks weren't effective and this could be useful

[09:11:51.0000] <Greg1>
I figured as much - too bad

[09:14:32.0000] <darobin>
Greg1: I would expect them to start hitting browsers relatively soon though

[09:14:42.0000] <darobin>
also, I expect shims

[09:15:42.0000] <Greg1>
Awesome, are you guys working with the big 3 on this then (Chrome, FF, and IE)? And there will be decent backwards compatibality correct.

[09:16:49.0000] <annevk>
Greg1: https://github.com/slightlyoff/DOMFuture/ has an implementation in script

[09:17:29.0000] <slightlyoff>
we're looking to implement very shortly

[09:17:30.0000] <annevk>
Greg1: Google/Mozilla are on board with regards to implementing near term as far as I know, dunno about Microsoft

[09:17:33.0000] <slightlyoff>
(chromium that is)

[09:17:53.0000] <Greg1>
Oh ok - good

[09:18:04.0000] <gsnedders>
(MS basically never say anything, and then release a build.)

[09:18:18.0000] <darobin>
yeah

[09:18:28.0000] <slightlyoff>
Greg1: we need it to fix a ton of APIs that are pretty crufty right now (Web Crypto, IDB, geolocation, etc.)

[09:18:31.0000] <Greg1>
That's unfortunate - you would think they would want to reach out to devs

[09:18:33.0000] <darobin>
but we know that individual MSFTers like futures in general

[09:18:48.0000] <Greg1>
Why wouldn't they

[09:18:50.0000] <slightlyoff>
darobin: yep. Had a productive discussion with luke hoban at the last TC39

[09:19:09.0000] <darobin>
Greg1: the problem isn't that MS doesn't want to talk to dev, they really do want to

[09:19:11.0000] <gsnedders>
Not quite as amusing as Opera's old situation: you knew exactly what we were implementing, even though we couldn't say a thing, because of what feedback we were sending on the spec.

[09:19:20.0000] <slightlyoff>
darobin: and an MSFT person posted out on public script coord with some alternatives, so I think they're looking at it

[09:19:32.0000] <darobin>
the problem is that they're being watched like crazy by the EU so that they can never announce anything unless they're 100% certain that it ships

[09:19:47.0000] <Greg1>
Oh, interesting

[09:19:52.0000] <darobin>
slightlyoff: yeah I saw that; they've been looking for a while, they have something like that in Win8

[09:20:09.0000] <darobin>
Greg1: the problem IIRC is that at some point they announced support for something but eventually yanked it before shipping

[09:20:10.0000] <slightlyoff>
darobin: yes, and part of the design process was understandign all the choices they made in WinJS

[09:20:18.0000] <darobin>
this caused other browser vendors to implement that thing

[09:20:18.0000] <slightlyoff>
darobin: turns out they implemented 2 versions in WinJS

[09:20:19.0000] <gsnedders>
darobin: Longhorn was entirely that.

[09:20:26.0000] <darobin>
which in turn was cited as anticompetitive behaviour

[09:20:52.0000] <darobin>
I'm not a huge fan of MS's products, but the way the EU's been treating them has been unfair

[09:20:56.0000] <gsnedders>
darobin: Promised the world, shipped nothing. Middle management was running scared of saying anything publicly, even when they have a ready-to-ship product internally.

[09:21:09.0000] <darobin>
slightlyoff: well why only do one version, right? :)

[09:21:19.0000] <slightlyoff>
darobin: well, you live and learn

[09:21:30.0000] <slightlyoff>
which is sort of the A+/Q experience

[09:21:42.0000] <slightlyoff>
everyone keeps iterating on one or another bit of the core contract

[09:21:48.0000] <slightlyoff>
what we have now is really minimal for a reason

[09:22:03.0000] <Greg1>
slightlyoff: Sounds good

[09:22:21.0000] <Greg1>
So for now then I should use promises then

[09:22:34.0000] <slightlyoff>
Greg1: or you could use the p(r)ollyfill

[09:22:49.0000] <slightlyoff>
Greg1: they should interop (assuming your Promises impl is A+ compatible)

[09:23:45.0000] <Greg1>
Do you have a link to a library that you guys prefer that would match that spec?

[09:24:01.0000] <Greg1>
I get quite a few when going to p(r)ollyfill

[09:24:50.0000] <annevk>
Greg1: I just gave you a link

[09:25:56.0000] <Greg1>
annevk: hmmm... I don't see it (I'm using the Pidgin client)

[09:26:18.0000] <Ms2ger>
https://github.com/slightlyoff/DOMFuture/

[09:26:36.0000] <Greg1>
Thanks Ms2ger

[09:26:49.0000] <Ms2ger>
Np

[09:53:13.0000] <KyleBarnhart>
Hi

[09:53:38.0000] <KyleBarnhart>
I have a question regarding direction rtl

[09:55:01.0000] <KyleBarnhart>
If i have a box that's rtl with left 100px and width 50px does it go from 50px-100px of 100px-150px?

[09:55:10.0000] <KyleBarnhart>
*or not of

[09:58:04.0000] <KyleBarnhart>
I ask this because the WebVTT spec states that for a video width of 640px, if the direction is rtl and horizonal position of 45%, the left should be 352px and width 352px. That shoots it out of bound but makes sense if the width is going to the left instead of to the right.

[10:01:59.0000] <KyleBarnhart>
If I'm not clear about the direct rtl, I'm refering to right-to-left text such as arabic or hebrew

[10:09:56.0000] <dglazkov>
good morning, Whatwg!

[10:11:07.0000] <WeirdAl>
/me offers the stock mock response: meh

[10:11:22.0000] <WeirdAl>
:)

[10:15:40.0000] <jgraham>
dglazkov doesn't actually respond here, he just has a "good morning" script that does the text and marks the logs yellow

[10:39:26.0000] <dglazkov>
I totally respond here!

[11:23:04.0000] <Ms2ger>
"The Mobile Web Test Suites Working Group is launching today its first call for contributions to the Open Mobile Web Test Suite:"

[11:23:09.0000] <Ms2ger>
I wonder what happened to that

[11:29:00.0000] <jgraham>
It turns out that calling for contributions is easy and making contributions is hard?

[11:29:46.0000] <Ms2ger>
Hey man, they made a mobile version of the DOM1 test suite

[11:30:37.0000] <jgraham>
"yay"

[11:31:40.0000] <TabAtkins>
KyleBarnhart: directionality of abspos doesn't matter unless you're resolving an overconstrained situation.

[11:32:15.0000] <TabAtkins>
KyleBarnhart: Assuming that 'right' is "auto", then it'll work the same in rtl as ltr.

[11:41:18.0000] <scott_gonzalez>
Do web components have to be included via <link> or can the <element> be inline in the page?

[11:42:34.0000] <KyleBarnhart>
ok, thank you. There appears to be a bug in the spec.

[11:42:55.0000] <KyleBarnhart>
I've sent writting to the mailing list.

[11:52:16.0000] <scott_gonzalez>
dglazkov: Do you know if custom elements work in Canary without the polyfill?

[11:55:27.0000] <jgraham>
Holy crap, if anne doesn't like the email from critic just wait until he discovers the spam-fest that is github

[11:56:03.0000] <Ms2ger>
One email per comment?

[11:56:48.0000] <Ms2ger>
/me would be perfectly happy without tests for document.all, too

[11:58:48.0000] <gsnedders>
jgraham: Don't make me ping the review and spam you!

[12:00:06.0000] <Philip`>
/me loves review systems that end up sending you 37 emails for a single patch (mostly consisting of bots saying "I'm about to build this" and then saying "I built this")

[12:02:46.0000] <jgraham>
Yeah, one email per comment

[13:11:04.0000] <manu-db>
Ignore this if you need to get work done: "you work for W3 eh? undermining human society for illicit gains?" http://pastebin.com/raw.php?i=k92m5auk

[13:18:12.0000] <TabAtkins>
manu-db: Hahahahaha

[13:18:29.0000] <manu-db>
dude, keep reading, it gets so much better.

[13:19:10.0000] <TabAtkins>
wow, lolwut

[13:20:17.0000] <manu-db>
Also, I think we're going to try Futures in the JSON-LD API, experimentally at first and if the group likes them, we think we have a way forward to REC.

[13:21:33.0000] <TabAtkins>
Yay!

[13:23:58.0000] <gsnedders>
manu-db: Gold, absolute gold.

[13:24:18.0000] <TabAtkins>
Must be some weird meme-disease running around lately.

[13:24:55.0000] <gsnedders>
manu-db: And because it's always a target: it's all these semweb activities diverting resources from the important problems like solving the mathematical flaws in JS/DOM.

[13:25:31.0000] <manu-db>
gsnedders: You can't deny that the plan is working.

[13:31:32.0000] <astearns>
"anyone who understands the problem is party [to it's continuance]" - isn't he implicating himself, here (or perhaps only himself?)

[13:34:14.0000] <gavinc>
manu-db: Wow.

[13:37:36.0000] <hober>
reads like the timecube guy

[13:38:17.0000] <TabAtkins>
hober: Have you read the steelmanning of Timecube? http://squid314.livejournal.com/327646.html

[13:38:33.0000] <TabAtkins>
(Steelman is the opposite of strawman - interpret an argument in the strongest possible fashion, giving it every benefit of the doubt.)

[13:39:19.0000] <manu-db>
/me loves the timecube guy, we actually have a timecube clock in our offices.

[13:39:56.0000] <gavinc>
reads like every city council meeting here... sigh

[14:03:03.0000] <hober>
TabAtkins: i hadn't seen that, no

[14:03:11.0000] <hober>
TabAtkins: have you seen http://html5timecube.com/ ?

[14:03:47.0000] <TabAtkins>
Hahaha, no.

[14:04:50.0000] <divya>
thnx hober

[14:04:55.0000] <divya>
that was valuable.

[14:05:10.0000] <hober>
don't thank me, thank jernoble

[14:05:22.0000] <jernoble>
/me bows.

[14:08:32.0000] <MikeSmith>
hsivonen: OK I just now landed a change a the removes the schematron dependency from the HTML4 backend of v.nu, replaced with custom Java checker, a la Assertions.sch

[14:08:35.0000] <MikeSmith>
win 25

[14:09:50.0000] <Ms2ger>
lose 26

[15:24:53.0000] <jamesr_>
hober: nice

[15:25:12.0000] <jamesr_>
hober: do you know who runs  it?

[15:25:18.0000] <jamesr_>
it's only using -webkit- prefixed transform properties

[15:34:23.0000] <hober>
jamesr_: "don't thank me, thank jernoble"

[15:34:55.0000] <jernoble>
jamesr_: or in this case, blame jernoble.

[15:35:05.0000] <jernoble>
jamesr_: guess i need a github repo. ;)

[15:35:16.0000] <jamesr_>
what about all those IE10 users? they need to experience the timecube too!

[15:35:35.0000] <jernoble>
i guess i'll doom them to be forever educated stupid.

[16:13:54.0000] <TabAtkins>
zcorpan: Based on CSSWG discussion, the CSS parsing quirks should be handled at the value level, not the parsing level.  As such, I'd like to push the quirks back into your spec, and just normatively reference it from the appropriate specs as we revise them.

[16:14:21.0000] <TabAtkins>
zcorpan: What's the best way to send you suggested text?

[16:14:57.0000] <TabAtkins>
zcorpan: (Gonna define a <quirky-color> and <quirky-length> value, and then define how the set of quirky properties handle those types.)


2013-04-20
[17:38:44.0000] <MikeSmith>
TabAtkins: nice blog posting

[17:41:20.0000] <TabAtkins>
MikeSmith: Thanks!

[02:49:18.0000] <Ms2ger>
<meta http-equiv="Content-Type" content="text/xml; charset=ISO-8859-1" /> eh


2013-04-21
[04:30:59.0000] <Ms2ger>
Only in the UK, commanders of nuclear-missile submarines need to listen to the radio to decide whether they should nuke Russia

[04:32:10.0000] <jgraham>
That was less silly than it sounded I think

[04:32:27.0000] <jgraham>
Well insofar as anything involving nuclear submarines isn't silly

[04:32:54.0000] <Ms2ger>
Even if they had to listen to "Today" on Radio 4?

[04:33:05.0000] <jgraham>
Yes, I heard the story :)

[04:33:21.0000] <Ms2ger>
Good :)

[04:33:31.0000] <jgraham>
They basically had to ensure that the BBC was still broadcasting

[04:33:46.0000] <jgraham>
Presumably one has to do that quite deliberately in a submarine

[04:34:58.0000] <jgraham>
if (!recieved_orders && bbc_not_broadcasted_for_3_days) {use_prewritten_orders()}

[04:35:07.0000] <Ms2ger>
I guess it's good the BBC didn't strike for three days

[04:35:29.0000] <jgraham>
Presumably in that case you would fail the first clause in the "if" :)

[04:38:27.0000] <Philip`>
/me was more worried about the story that nuclear submarine missiles could be launched by Ice Warriors without any official authorisation

[06:03:59.0000] <gsnedders>
What I can't imagine is being the commanding officer, opening the letter of last resort, and being informed I need to use my own judgement.

[06:04:12.0000] <gsnedders>
"Gee, that letter helped a lot."

[06:04:42.0000] <Ms2ger>
Let's... Eh, I never liked Egypt, let's nuke Egypt

[06:12:33.0000] <gsnedders>
Well, at least they don't have 192 warheads abord anymore…

[07:36:14.0000] <oal>
I remember seeing something about gzip support for websockets a long time ago. Any news on that?

[12:04:08.0000] <zcorpan>
Hixie: http://forums.whatwg.org/bb3/viewtopic.php?f=10&t=5147

[12:51:25.0000] <zcorpan>
TabAtkins: file a bug on quirks mode

[14:26:38.0000] <zcorpan>
MikeSmith: i don't understand the resolution for https://www.w3.org/Bugs/Public/show_bug.cgi?id=6301

[14:27:19.0000] <zcorpan>
MikeSmith: if the described behavior still happens for validator.w3.org, the bug is still valid


2013-04-22
[21:43:56.0000] <Hixie>
zcorpan: have them mail me

[23:41:35.0000] <Joser>
hello

[23:43:10.0000] <Ms2ger>
Bye

[01:24:39.0000] <MikeSmith>
zcorpan: sorry if I seemed overly dismissive in my response to that validator bug report

[01:25:02.0000] <zcorpan>
MikeSmith: no problem

[01:25:11.0000] <MikeSmith>
the context is that I was going through validator bugs this weekend and trying to resolve some of the stale onece

[01:25:15.0000] <MikeSmith>
*ones

[01:25:47.0000] <MikeSmith>
that is, ones that I think have little chance of ever getting implemented

[01:25:57.0000] <MikeSmith>
and that bug seems like one of those

[01:26:56.0000] <MikeSmith>
what I really want to do is just move the legacy validator to validator.w3.org/classic or something

[01:27:13.0000] <MikeSmith>
and completely remove the HTML5-checking from it

[01:27:53.0000] <MikeSmith>
and instead just move the validator.nu-based validator to validator.w3.org

[01:28:24.0000] <MikeSmith>
then the kinds of problems like in that bug report disappear

[01:28:41.0000] <jgraham>
"classic" does rather strongly suggest "classic car", which might not give quite the right impression.

[01:28:47.0000] <MikeSmith>
and I could focus just on making the vnu validator as good as it should be

[01:29:18.0000] <jgraham>
I would make all sorts of serious suggestions

[01:29:21.0000] <MikeSmith>
jgraham: it's better than "old" or "legacy"

[01:29:36.0000] <jgraham>
But really I just want it to be /steampunk

[01:29:46.0000] <MikeSmith>
heh

[01:30:20.0000] <MikeSmith>
antique

[01:30:39.0000] <MikeSmith>
emeritus

[01:31:10.0000] <Ms2ger>
"brocante" is apparently translated as "junk"

[01:57:06.0000] <zcorpan>
MikeSmith: makes sense

[04:27:15.0000] <jgraham>
zcorpan: Thanks for finishing that review

[04:27:28.0000] <zcorpan>
np

[04:29:02.0000] <jgraham>
Should register arewereviewedyet.com and plot number of open pull requests against time

[04:30:52.0000] <jgraham>
Actually it would be a pretty nice idea to make a web-platform-tests status dashboard

[04:31:02.0000] <jgraham>
With # open pull requests

[04:31:12.0000] <jgraham>
Some measurements of test coverage

[04:31:24.0000] <jgraham>
Probably some other stuff

[04:33:55.0000] <jgraham>
/me wonders what a "branded future" is

[04:34:08.0000] <jgraham>
Apart from social commentary

[04:40:02.0000] <Ms2ger>
zcorpan, jgraham, any of you want to merge? :)

[04:41:07.0000] <zcorpan>
"Server reply: Merging pull request failed (you are not allowed to merge this pull request)"

[04:41:16.0000] <Ms2ger>
Boo.

[04:41:45.0000] <zcorpan>
merging in github worked

[04:41:50.0000] <Ms2ger>
Ah

[04:41:58.0000] <jgraham>
That button doesn't work :)

[04:42:01.0000] <Ms2ger>
Merging in critic is known-broken

[04:42:01.0000] <jgraham>
I don't know why

[04:42:15.0000] <Ms2ger>
I don't know why the button is still there ;)

[04:43:07.0000] <jgraham>
Ms2ger: BEcause I haven't dared revert to the version I put in critic-critic yet :)

[04:43:15.0000] <jgraham>
s/revert/switch/

[04:43:59.0000] <Ms2ger>
So you're asking the critics to review your critic which you aren't using to critic?

[04:44:29.0000] <jgraham>
Exactly

[04:44:33.0000] <Ms2ger>
Aha

[04:44:44.0000] <Ms2ger>
/me goes back to Featherweight Java

[05:05:59.0000] <asmodai>
Mmm, if I see Opera and Firefox send out a GET request for a favicon.ico and Chrome does not do it, can I assume Chrome's behaviour is buggy? (Empty caches and all that, so it ought to fetch a clean copy.) Or could a 302 redirect cause it to be missing out on sending this GET out? Not sure what the expected behaviour is in that case.

[05:06:38.0000] <asmodai>
I would still expect it to send out a GET for the icon, even if it gets redirected though.

[05:52:12.0000] <annevk>
jgraham: branding is the way "if /x/ is an Element" type of checks work

[05:52:22.0000] <annevk>
jgraham: it's not very explicit in current specifications

[05:52:47.0000] <annevk>
jgraham: here's a gist explaining it https://gist.github.com/wycats/89b2a49a3431b04e88c7

[06:03:18.0000] <zcorpan>
so CaretPosition#getClientRect would return a zero-width "rectangle"?

[06:06:02.0000] <jgraham>
annevk: I rather suspect "work" in that sentence has nothing to do with actual implementations

[06:06:16.0000] <annevk>
jgraham: sorry, will work

[06:06:30.0000] <jgraham>
Or rather, I doubt the contents of that gist are like what implkementations will do

[06:07:09.0000] <jgraham>
And I don't really understand what point it's trying to make

[06:11:36.0000] <annevk>
But you understand what I meant now?

[06:13:08.0000] <jgraham>
Not really, but I mgith be missing the context

[06:13:43.0000] <jgraham>
Although certainly using something that appears to be a recently-coined term doesn't make things clearer

[06:14:55.0000] <annevk>
It's a ES6 concept which I think es-discuss is quite familiar with and I was not until recently, but it helps explaining part of how host objects currently work.

[06:15:35.0000] <annevk>
It was also a big part of the discussion leading up to futures so you might find it worth your time going through that.

[06:41:52.0000] <hsivonen>
huh. nothing on w3cmemes about the recent public-html-media thread

[06:42:39.0000] <Ms2ger>
People still read that?

[06:43:39.0000] <hsivonen>
/me reads both public-html-media and w3cmemes

[06:50:17.0000] <odinho>
hsivonen: So you seem to be the man to make it then :]

[06:50:40.0000] <Ms2ger>
zcorpan++

[06:51:03.0000] <zcorpan>
Ms2ger: hmm?

[06:51:16.0000] <Ms2ger>
Having an editor for cssom again is nice

[06:51:28.0000] <zcorpan>
ah

[06:52:19.0000] <MikeSmith>
Ms2ger: who's editing CSSOM?

[06:52:53.0000] <odinho>
Guessing zcorpan based on the increment.

[06:53:08.0000] <zcorpan>
yes

[06:55:08.0000] <MikeSmith>
great

[06:57:05.0000] <annevk>
zcorpan: is there a version history link available?

[06:57:28.0000] <Ms2ger>
https://dvcs.w3.org/hg/csswg?

[06:58:07.0000] <annevk>
:/

[07:18:13.0000] <zcorpan>
i'm not really getting along with glenn's build system

[07:18:45.0000] <annevk>
zcorpan: why don't you start from before he messed up my system?

[07:21:47.0000] <zcorpan>
i guess that would involve kicking glenn out as editor and he said he wanted to continue to edit

[07:25:44.0000] <reyre__>
anyone know what the purpose of keeping track of a 'language stack' in the webvtt cue text parsing rules is? http://dev.w3.org/html5/webvtt/#webvtt-cue-text-parsing-rules

[07:32:52.0000] <zcorpan>
reyre__: all webvtt nodes get an "applicable language" assigned from the top of the stack

[07:32:56.0000] <annevk>
zcorpan: :/

[07:33:14.0000] <zcorpan>
reyre__: so that :lang() works

[07:34:01.0000] <reyre__>
ah okay, i see that now. missed that point

[07:34:11.0000] <reyre__>
thanks zcorpan :)

[07:35:22.0000] <reyre__>
zcorpan: does the applicable language apply for text node objects ? or just internal node objects ?

[07:35:57.0000] <reyre__>
looks like only internal node objects

[07:36:21.0000] <zcorpan>
reyre__: http://dev.w3.org/html5/webvtt/#dfn-attach-a-webvtt-internal-node-object

[07:37:14.0000] <reyre__>
zcorpan: okay sounds good, thanks :)

[07:43:18.0000] <zcorpan>
<lang> is not tested in opera's testsuite

[07:59:41.0000] <Ms2ger>
Yay, PR 100

[08:51:05.0000] <hsivonen>
MikeSmith: whoa. the Html4Assertions class ended up being pretty short

[09:05:45.0000] <TabAtkins>
jgraham: I think "branding" is a spec concept right now, but as soon as we have Symbols in JS, it'll be a real thing. Basically just means something that has been blessed by the runtime as a real thing, rather than having to use duck-typing to tell whether it's a Future or not.

[09:06:49.0000] <TabAtkins>
zcorpan: I wouldn't worry about glenn's assertions that he wants to continue to edit.  He hasn't done any non-trivial editing in a year, so it's on him to prove that he's actually worth something to the spec.

[09:16:32.0000] <jgraham>
TabAtkins: Yeah, I get the idea. It's bolt-on typing.

[09:16:49.0000] <TabAtkins>
Yes.

[09:17:16.0000] <TabAtkins>
A form of nominative typing in a language without any explicit way to handle it.

[09:26:12.0000] <wycats__>
I should have a lot more on JSIDL soon

[09:26:28.0000] <TabAtkins>
wycats__: Ooh, intrigued.  Got any pointers?

[09:26:29.0000] <wycats__>
It's important to think of JSIDL's types as coercion rules not typed

[09:26:31.0000] <wycats__>
Types

[09:27:01.0000] <wycats__>
http://wycats.github.io/jsidl/jsidl.html

[09:27:09.0000] <dglazkov>
good morning, Whatwg!

[09:27:40.0000] <wycats__>
Please don't bikeshed yet. This is super early and missing a ton of stuff

[09:27:54.0000] <wycats__>
Working with annevk and others

[09:30:40.0000] <dglazkov>
wycats__: I don't like the fonts

[09:30:57.0000] <dglazkov>
oh you said _don't_ bikeshed

[09:31:05.0000] <dglazkov>
:P

[09:38:33.0000] <annevk>
Java in JavaScript: http://int3.github.io/doppio/about.html Should've seen that coming I suppose.

[09:39:00.0000] <TabAtkins>
Hey, if crazies are still gonna write Java applets, might as well run them without Java.

[09:40:51.0000] <Hixie>
MikeSmith: there's a Version field in Bugzilla, you could create a "legacy" version and move the old bugs to that

[09:45:49.0000] <annevk>
So http://wikileaks.org/Transcript-Meeting-Assange-Schmidt was a pretty good read

[09:46:47.0000] <manu-db>
TabAtkins, annevk: When you get a sec, could you sanity check that we're defining the Futures stuff correctly via the WebIDL in the JSON-LD API (ignore the big red issue marker, it no longer applies): http://www.markus-lanthaler.com/tmp-futures/json-ld-api/#the-jsonldprocessor-interface

[09:49:23.0000] <TabAtkins>
manu-db: Will do.

[09:50:45.0000] <TabAtkins>
manu-db: I think you need to specify that the returned future is initially pending.

[09:51:16.0000] <manu-db>
TabAtkins: yup, ok, thanks.

[09:51:52.0000] <TabAtkins>
Otherwise, I'll defer to annevk to tell you whether your use of terminology is correct and sufficient.  (I hope it is, because that's a nice easy way to talk about futures.)

[09:52:04.0000] <annevk>
manu-db: you need to create a new future, return it, and say that the remaining steps have to be run asynchronously

[09:52:35.0000] <annevk>
manu-db: and then at some point you invoked the future's associated resolver's reject and resolve algorithms

[09:52:49.0000] <annevk>
manu-db: in those asynchronous steps

[09:53:12.0000] <annevk>
TabAtkins: pending is the default state of a new future, so that's not needed

[09:53:59.0000] <manu-db>
annevk: You're saying that we should document that in the spec, right? That is,  you're not telling me how futures work, you're saying that we need to make it clear to the developer that those are the steps that are going to occur when they make the call?

[09:54:27.0000] <annevk>
manu-db: yes you need to write that in the specification so implementors know what to do

[09:55:04.0000] <manu-db>
annevk: ok, we'll do that, then. Seems a bit strange though, as the Futures spec should probably say that?

[09:55:05.0000] <TabAtkins>
annevk: It would be great if we could abstract that away and just say "reject the future with [value]" or whatever.  Is there a reason we need to be specific about "the future's associated resolver's reject algorithm"?

[09:55:24.0000] <annevk>
manu-db: say what?

[09:55:27.0000] <TabAtkins>
Each future has only one resolver, after all.

[09:55:37.0000] <manu-db>
annevk: what TabAtkins is saying.

[09:56:15.0000] <annevk>
I suppose we could provide a shortcut for specifications, but the idea is that when you create a future you get hold of a resolver object you control and that is not exposed to the outside world

[09:56:40.0000] <annevk>
and that resolver object is what you use to influence the state of the future

[09:56:49.0000] <manu-db>
annevk: Unless I don't understand how the resolver works (which could very well be true), it seems like what you suggested that we put into the JSON-LD API spec is boilerplate text that should probably exist in the WHATWG DOM spec.

[09:56:52.0000] <TabAtkins>
Yes, but that can all be implicit, since we're in spec land.

[09:56:57.0000] <manu-db>
/me nods.

[09:57:24.0000] <annevk>
I'm not entirely convinced that hiding the conceptual model is a net positive

[09:57:26.0000] <manu-db>
if we don't make it implicit, then the implication is that all the specs that use Futures will just repeat that same line, no?

[09:57:28.0000] <TabAtkins>
It's just understood that, when a spec creates a future, it has access to its resolver.  Then we can just operate on the future's state directly.

[09:58:06.0000] <manu-db>
annevk: It's not really hiding the conceptual model, it's that people should probably understand how a Future works and if they don't, they should read the spec that defines futures (or a tutorial)

[09:58:34.0000] <manu-db>
annevk: Most APIs layered on top of the DOM don't get into the gory details of the conceptual model of the DOM, afaik.

[09:59:20.0000] <manu-db>
TabAtkins, annevk: In this particular case, I'm fine with being a little more explicit about how the API works in the JSON-LD API since Futures are kinda new-ish to developers.

[09:59:22.0000] <annevk>
manu-db: gory? hah

[09:59:48.0000] <annevk>
manu-db: but yeah, I suppose we'll add some boilerplate shortcuts

[09:59:54.0000] <TabAtkins>
annevk: The kind of text you're saying we need to use to invoke a future is indeed gory.  ^_^

[10:00:16.0000] <annevk>
The futures spec itself uses it consistently too

[10:00:45.0000] <annevk>
It's not that bad really

[10:00:57.0000] <manu-db>
annevk, TabAtkins: We'll try to write some text explaining the design of the API and I'll run it by both of you once we're done.

[10:01:08.0000] <TabAtkins>
It... really is.  From your history with writing specs, it seems you're just bad at seeing stuff as gory.  ^_^

[10:01:24.0000] <manu-db>
/me thanks annevk, TabAtkins... disappears.

[10:01:30.0000] <annevk>
manu-db: the most important bits however are saying that you return a new future and that the remaining steps are to be run asynchronously

[10:01:38.0000] <manu-db>
/me nods.

[10:01:48.0000] <SteveF>
Hixie: would appreciate an answer to this: http://krijnhoetmer.nl/irc-logs/whatwg/20130418#l-611

[10:01:48.0000] <TabAtkins>
Yeah, that part seems reasonable and necessary.

[10:02:00.0000] <annevk>
reasonable? come on TabAtkins

[10:02:12.0000] <TabAtkins>
?

[10:03:54.0000] <annevk>
and the ad-hominem seems out-of-place too

[10:04:06.0000] <TabAtkins>
Uh, dude, back up a bit.

[10:05:21.0000] <TabAtkins>
I'm saying that I think you have a problem with seeing complexity in your own specs.  This is not an ad hominem attack.  Please take it as a gentle criticism, and a request that you keep boilerplate minimization as a goal for specs calling into your own in the future.

[10:08:01.0000] <TabAtkins>
As a simple example, "invoke the future's associated resolver's reject algorithm with [value]" is unacceptable boilerplate for a feature this simple.  "Reject the future with [value]." is acceptable - both easy to write, and easy for people (implementors and authors) to read.

[10:11:19.0000] <annevk>
You probably want. Let f be future and r its associated resolver. Run r's reject with [value [and the synchronous flag set]]

[10:11:47.0000] <annevk>
This reminds me of a bug I need to comment on though...

[10:13:07.0000] <jgraham>
TabAtkins: I guess annevk already said this, but the second form seems suboptimal to me because it isn't totally clear which algorithm you are invoking

[10:13:19.0000] <TabAtkins>
I don't want any of that.  That's still far more complexity than I should need to specify for a spec, where it's assumed that I have access to the resolver for a future I've created in an earlier step.

[10:13:46.0000] <TabAtkins>
jgraham: There's only three algorithms: accept, resolve, and reject.  I'm unsure how it could be unclear which is being invoked when you say "reject the future".

[10:14:22.0000] <jgraham>
"reject the future" doesn't obviously invoke *any* of the algorithms

[10:14:46.0000] <TabAtkins>
annevk: I'd like a paragraph in the spec that says something like, "To <dfn>reject a future</dfn>, let f be future and r its assocated resolver...".

[10:14:54.0000] <Hixie>
SteveF: do you mean, how should changes that the w3c has made in its fork of HTML be documented?

[10:15:02.0000] <TabAtkins>
Then I can just say "Reject the future with [value]", and link to your anchor.

[10:15:10.0000] <Hixie>
SteveF: or do you mean, how should problems in the HTML standard be reported?

[10:15:17.0000] <jgraham>
Righ, if DOM defines the meaning of "reject the future" then things are different

[10:15:19.0000] <TabAtkins>
jgraham: You'll have to explain to me what confusion you're seeing.

[10:15:29.0000] <TabAtkins>
jgraham: Well, obviously. ^_^

[10:16:05.0000] <jgraham>
TabAtkins: I'm seeing the confusion that you are trying to invoke a definition that doesn't yet exist :p

[10:16:13.0000] <TabAtkins>
Pedant. ^_^

[10:16:30.0000] <TabAtkins>
This is spec land, I can just assume that an appropriate definition exists for me to invoke.

[10:18:29.0000] <jgraham>
Not if you want to write good specs :)

[10:18:39.0000] <SteveF>
hixie: I mean the former

[10:18:58.0000] <Hixie>
SteveF: the way that i used to do it in the whatwg spec seems like the simplest solution

[10:19:15.0000] <Hixie>
SteveF: just have a section in the intro that lists every intentional difference

[10:19:32.0000] <Hixie>
and the rationale

[10:19:36.0000] <Hixie>
SteveF: that way people could tell which were intentional and which were not

[10:19:43.0000] <Hixie>
SteveF: and what the rationales were

[10:20:34.0000] <annevk>
TabAtkins: I'd still like to see how you generalized so quickly from one example which I haven't even thought much about yet since there's no external consumers yet to me having a general habbit of doing the wrong thing.

[10:20:46.0000] <SteveF>
hixie: OK will discuss with the editor team - thanks

[10:23:01.0000] <TabAtkins>
annevk: I'm generalizing from my experiences with CORS, which I still find impenetrable despite my best efforts. :/

[10:23:48.0000] <annevk>
TabAtkins: the problem with CORS is that CSS doesn't have "fetch". And without "fetch" trying to understand CORS is like going way beyond where you are today.

[10:24:03.0000] <TabAtkins>
I can accept that, sure.

[10:24:06.0000] <annevk>
TabAtkins: http://fetch.spec.whatwg.org/ should address that, though beware, it has no convenient hooks yet either

[10:24:17.0000] <Hixie>
anyone got IE around? what does it alert in http://damowmow.com/playground/demos/cross-iframe-scripting/001.html ?

[10:24:28.0000] <Hixie>
annevk: doesn't it have the old HTML "fetch" still?

[10:24:43.0000] <annevk>
Hixie: CSS could use the HTML definitions, sure

[10:25:27.0000] <Hixie>
annevk: problem solved :-)

[10:25:34.0000] <annevk>
Hixie: oh you mean that specification? Yeah I have the mapping defined somewhere under "Legacy". I still haven't really figured out the right abstractions.

[10:25:45.0000] <TabAtkins>
Tell me where to define it, and I'll get it done

[10:26:04.0000] <Hixie>
annevk: you should just make that the actual hook. There's no way I'm updating HTML to use another hook, that's way too risky, and way too much work, for way too little benefit.

[10:26:17.0000] <Hixie>
annevk: and it's a nice simple API.

[10:26:25.0000] <annevk>
Hixie: but the API doesn't handle CORS

[10:26:59.0000] <Hixie>
annevk: right, there's the separate hook if you want CORS.

[10:27:09.0000] <annevk>
Hixie: and the API cannot be used by XHR, and the new navigation controller stuff that's coming

[10:27:14.0000] <Hixie>
annevk: you either do a "fetch", or a "potentially CORS-enabled fetch".

[10:27:26.0000] <Hixie>
annevk: why not?

[10:27:51.0000] <Hixie>
(what is a "navigation controller"?)

[10:28:46.0000] <annevk>
Hixie: https://github.com/slightlyoff/NavigationController/

[10:29:32.0000] <annevk>
Hixie: and your current hooks have overlaps with e.g. the same-origin flag that's the same as "No CORS", fail

[10:29:57.0000] <annevk>
Hixie: and don't sufficiently distinguish between credentials and CORS

[10:30:03.0000] <Hixie>
annevk: i wouldn't describe that as "stuff that's coming" until it's, you know, actually discussed on a public list...

[10:30:25.0000] <annevk>
Hixie: what's the difference between a public list and a public repo?

[10:30:34.0000] <annevk>
Hixie: it's been announced on a public list

[10:30:44.0000] <Hixie>
same thing that's wrong with creating a new mailing list

[10:30:48.0000] <Hixie>
people aren't on it

[10:32:19.0000] <TabAtkins>
annevk: Unrelated discussion - I'm finding it hard to follow exactly, but do Futures recursively resolve?  That is, in the following code:

[10:32:22.0000] <annevk>
Well, there's some set of people that prefer working on it this way. And if that's the way they prefer to getting it done, that's the way it'll happen.

[10:32:49.0000] <jgraham>
(actually NavigationController was a private repo for a long time which is extremely distastful)

[10:33:50.0000] <TabAtkins>
getFuture().then(function(){ return new Future(function(r) { r.accept(new Future(...)); })});

[10:33:56.0000] <annevk>
Hixie: also, your current hooks are extremely hard to reason about with respect to the Origin header and the implications on security. And actually have several bugs. E.g. a cross-origin redirect to a javascript: URL will be CORS-same-origin...

[10:33:58.0000] <Hixie>
annevk: or not happen, as the case may be :-)

[10:34:04.0000] <TabAtkins>
(In other words, .then() returns a future for a future.)

[10:34:07.0000] <slightlyoff>
Hixie: that's the next step

[10:34:22.0000] <TabAtkins>
Does it resolve to just a future, or to the future-of-a-future's resolved value?

[10:34:25.0000] <slightlyoff>
Hixie: getting the design to a point where it's not a total shit-show is Step 1

[10:34:52.0000] <annevk>
TabAtkins: you need to use resolve for that, not accept

[10:35:07.0000] <Hixie>
slightlyoff: just make sure you don't present a fait accompli... people always feel they need to change proposals before they're willing to adopt them. that's why i encourage people to put their shit shows in public first. :-)

[10:35:22.0000] <slightlyoff>
Hixie: designs need to hang together

[10:35:35.0000] <TabAtkins>
annevk: I used accept for a reason, specifically so I could ask the question that I did.

[10:35:36.0000] <Hixie>
slightlyoff: designs are not what should be presented first

[10:35:47.0000] <slightlyoff>
Hixie: I'm more interested in "good" than "inclusive". The standards process has plenty of room for the later

[10:35:51.0000] <annevk>
TabAtkins: but you also said "resolve" :-)

[10:36:09.0000] <Hixie>
slightlyoff: if you're interested in "adopted", then "inclusive" is more important than "good"

[10:36:27.0000] <slightlyoff>
Hixie: here's the new outline of the current design: https://github.com/slightlyoff/NavigationController/blob/master/explainer.md

[10:36:30.0000] <TabAtkins>
Man, whatever the generic term is for "has a value that isn't an error".  ^_^

[10:36:38.0000] <TabAtkins>
"fulfilled"?

[10:36:58.0000] <Hixie>
slightlyoff: before we discuss design proposals, we should discuss the problem. on a public list.

[10:37:13.0000] <annevk>
TabAtkins: "accepted"

[10:37:48.0000] <TabAtkins>
So, "accepted" just means that it's done, regardless of whether it was accepted with r.accept() or r.resolve()?

[10:38:07.0000] <annevk>
TabAtkins: yeah, at some point resolve runs through accept

[10:38:16.0000] <TabAtkins>
Kk.

[10:38:19.0000] <annevk>
TabAtkins: if it wasn't a future

[10:38:23.0000] <annevk>
well thenable

[10:38:44.0000] <TabAtkins>
So returning a future of a future from a .then() callback just unwraps one level of future, not both.

[10:38:55.0000] <Hixie>
jgraham: i don't know what to do with https://www.w3.org/Bugs/Public/show_bug.cgi?id=17155

[10:39:19.0000] <annevk>
Hixie: the problems with the current offline solution have been discussed to death though and have been used as input to this design.

[10:40:13.0000] <annevk>
TabAtkins: if you use .accept, yes, if you use, .resolve, no

[10:40:38.0000] <Hixie>
annevk: every discussion i've seen about the problems with the many current offline solutions have (a) not agreed about what those problems are, and (b) not actually been about offline, typically.

[10:41:46.0000] <jgraham>
Hixie: Nor do I really :) I don't have any testcases to hand other than the one in the first comment

[10:42:11.0000] <TabAtkins>
annevk: That response is confusing, so to be absolutely clear, let me rephrase in a simpler way.  Assume that "Future.of(a)" is equivalent to "new Future(function(r) { r.accept(a); })".

[10:42:48.0000] <Hixie>
jgraham: k

[10:42:49.0000] <TabAtkins>
Then, in this scenario:  "getFuture().then(function() { return Future.of(Future.of(5)); }).then(function(v) { console.log(v); });"

[10:43:00.0000] <TabAtkins>
The log will show a Future containing 5, not 5 itself, yes?

[10:43:01.0000] <slightlyoff>
Future.of() is a terrible API name, BTW

[10:43:06.0000] <slightlyoff>
I hope we haven't accepted that (har har)

[10:43:11.0000] <TabAtkins>
slightlyoff: Disagree, but neither here nor there.  ^_^

[10:43:39.0000] <annevk>
TabAtkins: yes

[10:43:44.0000] <TabAtkins>
annevk: Okay, cool.

[10:45:03.0000] <TabAtkins>
annevk: That's my preferred answer, but it's also different from Promises/A+ at the moment, which I think recursively unwraps in its resolve algorithm until it hits a non-thenable.

[10:45:18.0000] <Hixie>
jgraham: i guess part of my confusion is that as far as i can tell, the spec already says this is sync

[10:45:20.0000] <annevk>
Hixie: I think the main problem is that there are many different problems and developers need lower-level primitives to tackle them.

[10:45:21.0000] <TabAtkins>
(And .then() invokes the resolve algorithm on its callback's return value.)

[10:45:33.0000] <jgraham>
Recursive unwrapping is weird magic

[10:45:44.0000] <TabAtkins>
jgraham: Agreed, but some people don't. :/

[10:45:51.0000] <annevk>
Hixie: they cannot all be tackled within the constraints of "appcache".

[10:45:55.0000] <TabAtkins>
I just want a damned monad. Is that so much to ask?

[10:45:55.0000] <Hixie>
annevk: sure, but then we should document those problems. where was that done? how are we going to evaluate the proposals?

[10:45:59.0000] <Hixie>
annevk: i didn't mention appcache

[10:46:13.0000] <annevk>
TabAtkins: again, Promises/A+ would use r.resolve()

[10:46:56.0000] <annevk>
Hixie: have you not read public-webapps in a while?

[10:47:41.0000] <TabAtkins>
annevk: That's not what I asked.

[10:47:45.0000] <Hixie>
annevk: unless something happened since friday, i think i'm up to date

[10:48:02.0000] <Hixie>
jgraham: oh, nm, i see where it says it's async...

[10:49:00.0000] <annevk>
Hixie: documentation is in http://lists.w3.org/Archives/Public/public-webapps/2013JanMar/0977.html and such

[10:50:08.0000] <TabAtkins>
annevk: The only relevance of .accept() vs .resolve() in my question was to construct the nested future.  That's not important here, just assume that a nested future can be created somehow.

[10:50:12.0000] <annevk>
TabAtkins: so Promises/A+ does not have a concept of accept() so it will of course always do resolve() and unwrap endlessly... What am I missing?

[10:50:22.0000] <TabAtkins>
annevk: My point was about returning a nested future from the .then callback.

[10:50:40.0000] <TabAtkins>
Since .then(), even in DOM Futures, *does* use resolve semantics for its callback's return value.

[10:50:48.0000] <Hixie>
annevk: yeah, that discussion was great, but then it just stopped

[10:51:13.0000] <annevk>
Hixie: right, people moved to working on proposals

[10:51:33.0000] <annevk>
TabAtkins: right

[10:52:01.0000] <Hixie>
annevk: there was a proposal in that e-mail, that's where it should be...

[10:52:19.0000] <TabAtkins>
annevk: Are you just saying that it's impossible to even construct a nested future using only Promises/A+ stuff, so that's why they go ahead and unwrap nested futures when they receive one?

[10:52:48.0000] <annevk>
TabAtkins: yes

[10:52:56.0000] <TabAtkins>
Okay, makes sense.

[10:53:09.0000] <Hixie>
annevk: (and i'm not convinced that this problem description really is the right starting point. it seems very focused on appcache, rather than on what the actual problem is.)

[10:53:35.0000] <TabAtkins>
I was just checking that my preferred interpretation was what was happening, and if so, that it was a willful break from A+, not an unintentional one.

[10:53:42.0000] <TabAtkins>
So I'm satisfied now. ^_^

[10:53:57.0000] <annevk>
Hixie: I think the actual problem is lack of primitives so people can build their "own appcache".

[10:54:11.0000] <annevk>
TabAtkins: it's not breaking Promises/A+. It's just a feature they don't have.

[10:54:12.0000] <Hixie>
annevk: that's not a problem, that's the start of a solution.

[10:54:52.0000] <TabAtkins>
annevk: Well, it does mean that if you receive a promises/a+ promise, chain off of it with .then(), and return a nested future, it'll have a different result than doing the same thing starting from a dom future.

[10:54:58.0000] <annevk>
Hixie: fair enough. The problem is too much constraints.

[10:55:38.0000] <annevk>
TabAtkins: it all depends on how you create the nested future really

[10:55:52.0000] <TabAtkins>
annevk: Hm, explain?

[10:56:50.0000] <Hixie>
annevk: problems i've seen are things like "we have a one-page web app and we'd like it to load instantly if the user comes back to it"

[10:57:11.0000] <Hixie>
annevk: (that particular one is handled fine by the appcache, and to a lesser extent, the http cache)

[10:57:33.0000] <Hixie>
annevk: (i've seen other ones that aren't handled by either appcache or http)

[10:57:42.0000] <Hixie>
annevk: that's what i mean by problem

[10:58:34.0000] <Hixie>
jgraham: k well i had a go at fixing 17155, dunno how good it is

[10:58:52.0000] <Hixie>
mounir: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=11937

[11:01:21.0000] <annevk>
TabAtkins: actually, now I'm not sure anymore

[11:01:25.0000] <jgraham>
Hixie: Cool, thanks

[11:01:31.0000] <annevk>
TabAtkins: too late for this :/

[11:04:04.0000] <annevk>
TabAtkins: okay, so the unwrapping works by invoking .then() on the future returned. What that future returns however is up to the implementation of that future.

[11:06:11.0000] <annevk>
TabAtkins: I don't see what part of http://promises-aplus.github.io/promises-spec/ is violated though

[11:07:29.0000] <annevk>
TabAtkins: it does not forbid fulfilling (in terms of A+) a promise with a promise

[11:07:36.0000] <SteveF>
Hixie: since there is a commit feed that lists every change https://github.com/w3c/html/commits/master would it not make sense to ensure that adequate exaplanation pointers  are provided in the commit info rather than having to rewrite stuff?

[11:08:32.0000] <Hixie>
SteveF: simpler for what purpose?

[11:08:48.0000] <slightlyoff>
TabAtkins: if you feel that's a real issue, I'd like to see code that shows why

[11:08:56.0000] <slightlyoff>
(other than instanceof users)

[11:08:56.0000] <Hixie>
SteveF: i can't tell from that feed what's going on. For example, it credits me for a bunch of stuff but I've never checked anything into that repo.

[11:08:58.0000] <slightlyoff>
TabAtkins:

[11:09:08.0000] <slightlyoff>
ugg, typing faaaaail.

[11:09:40.0000] <TabAtkins>
slightlyoff: If I feel *what* is a real issue?  Recursive assimilation, or lack of such?

[11:09:50.0000] <annevk>
Hixie: with respect to fetch; basically the current abstractions from HTML make it extremely hard to reason about what is going to happen. That's my main beef with them

[11:10:17.0000] <slightlyoff>
Recursive assimilation (if I understand you correctly) happens when you use .resolve()

[11:10:31.0000] <Hixie>
annevk: why?

[11:10:33.0000] <SteveF>
Hixie: for purpose of listing differences : a filtered feed could be made that lists only differences (for example)

[11:10:35.0000] <slightlyoff>
TabAtkins: or did I miss the case?

[11:10:51.0000] <slightlyoff>
TabAtkins: anyhow, send me mail. Need to eat.

[11:10:59.0000] <TabAtkins>
slightlyoff: I'm worrying about the value returned by .then()'s callback.  That's processed with resolve semantics.

[11:11:00.0000] <Hixie>
SteveF: i can't tell what is different from that feed.

[11:11:12.0000] <Hixie>
SteveF: sometimes the diffs it credits to me are not what i did.

[11:11:24.0000] <annevk>
Hixie: e.g. with potential CORS fetch it's pretty hard to figure out which requests will include an Origin header and which won't

[11:11:25.0000] <Hixie>
SteveF: sometimes the differences are that something i did doesn't get applied at all.

[11:11:26.0000] <slightlyoff>
TabAtkins: yes, today it is.

[11:11:27.0000] <TabAtkins>
slightlyoff: With one level of unwrapping, it works properly as a monad.  With recursive unwrapping, it violates the monad contracts.

[11:11:34.0000] <annevk>
Hixie: it's hard to figure out if same-origin flag is the same as NO CORS, fail

[11:11:52.0000] <TabAtkins>
Which one you choose isn't a resolve-vs-accept choice, but rather an implementation detail of your resolve algorithm.

[11:12:01.0000] <annevk>
Hixie: it's hard to figure out if there are security bugs with data URLs when it comes to redirects (there are)

[11:12:09.0000] <Hixie>
annevk: not sure how changing the API would affect any of that.

[11:12:12.0000] <slightlyoff>
TabAtkins: I'm having a hard time caring about that. You and MarkM can fight it out. He believes the current design to be correct for reasons that require reading his thesis

[11:12:21.0000] <slightlyoff>
(which I have done and cant' actually summarize tersely for you here)

[11:12:25.0000] <SteveF>
Hixie: so if it was stated in the commit THIS IS DIFFERENT from WHATWG would that make it suffice?

[11:12:47.0000] <annevk>
Hixie: by not having the weird interwoven mix of sometimes invoking potential CORS and sometimes fetch but instead have one call site you can remove all that ambiguity

[11:12:53.0000] <Hixie>
SteveF: no, because that still wouldn't cover the cases of commits that just aren't applied. or things that are done differently, then later changed to match.

[11:12:59.0000] <slightlyoff>
TabAtkins: but do cc me on the discussion

[11:13:04.0000] <slightlyoff>
and annevk

[11:13:08.0000] <annevk>
Hixie: and actually reason about what kind of fetches are made

[11:13:11.0000] <slightlyoff>
ok, really going

[11:13:11.0000] <Hixie>
SteveF: the commit feed isn't useful for the purposes of someone just coming along and wanting to know in what ways the w3c changed the spec.

[11:13:25.0000] <TabAtkins>
slightlyoff: Once I figure out what both DOM Futures and Promises/A+ actually say, I'll do so. ^_^

[11:13:46.0000] <Hixie>
annevk: well i don't mind if you just have "fetch" and "potentially cors-enabled fetch" just immediately invoke the same underlying algorithm, that'd be fine

[11:15:25.0000] <SteveF>
Hixie: OK will have to think upon it

[11:16:36.0000] <Hixie>
SteveF: (not does it give rationales)

[11:16:45.0000] <annevk>
Hixie: yes, there's something like that now, but I think long term the HTML specification ought to be fixed to make this far less hard to read

[11:17:12.0000] <annevk>
Hixie: that's the whole point of going through rationalising the platform's fetching algorithm

[11:17:48.0000] <Hixie>
SteveF: another way of putting it is, if someone looks at the two specs and finds a difference, where should they go to determine (a) if change was intentional and (b) why it was made, and then, (c) what other changes are made so they can determine (d) if any were not made that one would expect to have been made.

[11:18:43.0000] <Hixie>
annevk: i don't think the call sites are problematic. i agree the implementation of fetch was a disaster and crossed multiple specs back and forth and we should fix that (thanks for doing that), but i don't understand what you want to do to the call sites.

[11:19:02.0000] <Hixie>
annevk: maybe if you showed examples of call sites today and what you'd like them to look like instead that would help make your case.

[11:19:32.0000] <annevk>
Hixie: I suppose at some point I'll get to that

[11:20:01.0000] <annevk>
was hard enough figuring out what they were doing in the first place

[11:20:21.0000] <SteveF>
Hixie: OK I have endeavored to include pointers in my changes to bugs/wg discussions, what I would like to do is provide useful info but not do makework

[11:22:57.0000] <Hixie>
SteveF: i don't think it's reasonable to expect people to even know the bugs exist, and the mailing lists are extremely high-volume, so it doesn't help people work out what's different and why.

[11:23:01.0000] <Hixie>
SteveF: it's not make work, imho.

[11:23:56.0000] <Hixie>
SteveF: it would have helped catch some of the more serious mistakes that have been made so far.

[11:24:57.0000] <SteveF>
Hixie: that is why I add links to bugs and discussions in commits so people can read the history of the change

[11:25:12.0000] <Hixie>
again, people aren't going to know to look there

[11:25:41.0000] <SteveF>
Hixie: don't understand

[11:25:59.0000] <annevk>
SteveF: it's fairly common for downstream software projects to maintain a list of differences from upstream

[11:26:07.0000] <annevk>
SteveF: and kind of expected

[11:27:09.0000] <SteveF>
annevk: as i asked previously ted, silvia, robin et al were all editors before i started why are we having this discussion now?

[11:27:54.0000] <annevk>
SteveF: presumably because until now tracking has been not been considered too much work

[11:27:56.0000] <Hixie>
if some guy comes along and reads the specs, and wants to know why the w3c suggests that people who can see images shouldn't be told there's an audio captcha alternative, where should they go to find out?

[11:28:05.0000] <Hixie>
SteveF: i'm having this discussion now because you asked me a question

[11:28:15.0000] <Hixie>
SteveF: i'm happy to not have the discussion if you don't want to have it

[11:28:31.0000] <SteveF>
annevk: hixie: do you have any pointers to examples that could act as a guide to whats expected

[11:28:59.0000] <SteveF>
Hixie: I am perplexed as to why the question was never asked by others

[11:29:13.0000] <Hixie>
SteveF: well you'd have to ask them, not me

[11:29:26.0000] <SteveF>
i will

[11:29:34.0000] <Hixie>
SteveF: the way the whatwg spec listed differences back when i was doing this is an example of a low-maintenance way of doing it

[11:29:52.0000] <Hixie>
SteveF: (at the time, the w3c refused to publish the list in their copy for reasons i still don't understand)

[11:30:15.0000] <Hixie>
SteveF: i stopped maintaining the list when i lost track of what the differences were

[11:30:23.0000] <Hixie>
SteveF: which is why the whatwg doesn't have it anymore

[11:30:24.0000] <SteveF>
do you have apointer to a diff that shows what it was like, had a look but couldn't find when they were removed

[11:30:39.0000] <SteveF>
or a rough date?

[11:30:41.0000] <Hixie>
SteveF: (it's hard to maintain the list when you aren't the one making the changes)

[11:30:44.0000] <Hixie>
yeah hold on

[11:31:26.0000] <annevk>
SteveF: http://code.google.com/p/chromium-source-browsing/source/browse/README.chromium?repo=third-party--icu

[11:31:52.0000] <SteveF>
I have set up a wiki page and will record diffs there

[11:32:04.0000] <annevk>
(was fairly useful when figuring out what Chrome did with encodings)

[11:32:06.0000] <Hixie>
SteveF: we still have it here, for example: http://developers.whatwg.org/introduction.html

[11:32:12.0000] <Hixie>
under "How do the WHATWG and W3C specifications differ"

[11:32:23.0000] <SteveF>
hixie:annevk: thanks both useful

[11:32:49.0000] <Hixie>
SteveF: more detail would be great, but when i tried adding more detail i was told off for being "political" or some bs

[11:33:06.0000] <Hixie>
which is why the differences mentioned are sometimes a bit vague

[11:33:14.0000] <SteveF>
Hixie: i will try to provide detail

[11:33:46.0000] <Hixie>
the list anne mentioned is a good example of doing it in open source, yeah

[11:49:36.0000] <Hixie>
didn't we have a bug somewhere about making form submission a little more async?

[12:13:56.0000] <annevk>
/me doesn't remember that

[12:24:48.0000] <Hixie>
getComputedValue() returns the used values, right?

[12:24:58.0000] <Hixie>
or is there some value type between computed and used that i'm forgetting about

[12:25:13.0000] <Hixie>
specified is in the sheet, computed is inherited, used is what's used in layout, right?

[12:27:05.0000] <zcorpan>
Hixie: you mean getComputedStyle()?

[12:27:32.0000] <Hixie>
uh yeah

[12:27:34.0000] <webben>
Hixie: There are some edge cases where it's not really the used value

[12:27:49.0000] <zcorpan>
Hixie: it returns computed value for most properties, used value for a handful, iirc

[12:28:05.0000] <Hixie>
for 'top'?

[12:28:11.0000] <Hixie>
is this documented anywhere?

[12:28:45.0000] <zcorpan>
i thought it was in the spec at some point but the current spec just says "..."

[12:28:49.0000] <Hixie>
heh

[12:28:57.0000] <webben>
e.g. for example some browsers will tell you background-image is a url, even if they're not showing images

[12:29:04.0000] <webben>
I think Chrome does that

[12:29:11.0000] <annevk>
zcorpan: fuck that was removed????

[12:29:24.0000] <zcorpan>
top is used value (unless the element is display:none)

[12:29:52.0000] <zcorpan>
https://dvcs.w3.org/hg/csswg/raw-file/tip/cssom/Overview.html#widl-CSSStyleDeclaration-getPropertyValue-DOMString-DOMString-property

[12:29:53.0000] <Hixie>
webben: is the used value of 'background-image' set to none if the image isn't used? huh

[12:30:13.0000] <zcorpan>
i'll look into this

[12:30:30.0000] <webben>
Hixie: Chrome sets it to the unused image URL.

[12:30:42.0000] <Hixie>
zcorpan: https://dvcs.w3.org/hg/csswg/raw-file/tip/cssom/Overview.html#resolved-value

[12:30:47.0000] <webben>
this is if you turn off images in chrome

[12:30:56.0000] <Hixie>
webben: that seems to match the spec

[12:31:40.0000] <zcorpan>
Hixie: ah

[12:32:14.0000] <annevk>
zcorpan: https://dvcs.w3.org/hg/csswg/raw-file/tip/cssom/Overview.html#widl-Window-getComputedStyle-CSSStyleDeclaration-Element-elt seems defined still

[12:32:42.0000] <annevk>
/me spent a bunch of time on that; I would have been interested in reading why someone would have removed that

[12:33:02.0000] <webben>
Hixie: I guess that depends on how not using images is implemented

[12:33:42.0000] <webben>
but yeah if this happens outside the cascade entirely I guess that's true

[12:35:09.0000] <webben>
getActual would be kinda nice to have

[12:35:25.0000] <zcorpan>
i was looking at https://dvcs.w3.org/hg/csswg/raw-file/tip/cssom/Overview.html#widl-CSSStyleDeclaration-getPropertyValue-DOMString-DOMString-property

[12:35:25.0000] <webben>
though i guess there would be security concerns with it leaking information about the user's system

[12:36:33.0000] <Hixie>
webben: hard to say what "actual" means sometimes

[12:37:28.0000] <Hixie>
e.g. if the image is being converted to black and white, the url wouldn't be the "actual value"...

[12:37:44.0000] <webben>
data uri?

[12:44:27.0000] <Hixie>
heh

[12:49:31.0000] <annevk>
https://chromiumcodereview.appspot.com/14273007/ ouch

[12:52:30.0000] <Hixie>
ouch because ew, more accept headers?

[12:55:24.0000] <jgraham>
Not just "ough Rietveld"? :p

[12:55:28.0000] <jgraham>
*ouch

[12:55:59.0000] <jgraham>
In related news, is today international "push more changes to closed pull requests" day or something?

[12:56:12.0000] <SteveF>
Hixie: "if some guy comes along and reads the specs, and wants to know why the w3c suggests that people who can see images shouldn't be told there's an audio captcha alternative, where should they go to find out?" don't understand this, the spec does not say don't tell people

[13:00:02.0000] <annevk>
Hixie: uhuh

[13:23:26.0000] <Hixie>
SteveF: the example of a captcha in the w3c version only mentions the audio version if you don't see the image, whereas the example in the whatwg spec tells everyone about it.

[13:23:57.0000] <Hixie>
SteveF: this is exactly the kind of difference where documentation would help determine if the difference is just a mistake or intentional

[13:24:33.0000] <SteveF>
Hixie: OK

[16:02:51.0000] <jsbell>
Any Moz IDB folks around?

[16:04:32.0000] <jsbell>
Ah, sicking: IDB question for you: s = db.createObjectStore('s'); db.deleteObjectStore('s'); s.get(0); --> should throw InvalidStateError, per spec blather about operation on deleted object? FF20 appears not to. Bug or am I missing something?

[16:12:54.0000] <sicking>
jsbell: hey

[16:21:47.0000] <sicking>
jsbell: i think you broke the spec :)

[16:23:14.0000] <jsbell>
sicking: hrm... left something out in my removal of exception tables, or something more fundamental?

[16:23:20.0000] <sicking>
jsbell: Throwing a InvalidStateError sounds correct. I don't know what you mean by "spec blather"? :)

[16:23:36.0000] <sicking>
jsbell: the TOC is completely busted

[16:23:41.0000] <jsbell>
Huh....

[16:23:46.0000] <sicking>
jsbell: i see a lot of 0's everywhere

[16:23:59.0000] <jsbell>
Odd. Looks fine to me...

[16:24:03.0000] <sicking>
ble of Contents

[16:24:04.0000] <sicking>
0

[16:24:05.0000] <sicking>
    1. 00Introduction000

[16:24:07.0000] <sicking>
    0

[16:24:08.0000] <sicking>
    2. 00Conformance000

[16:24:09.0000] <sicking>
        2.1 00Dependencies000

[16:24:10.0000] <sicking>
        00

[16:24:18.0000] <jsbell>
trying ff....

[16:24:41.0000] <jsbell>
looks fine to me in FF20 as well.

[16:24:46.0000] <jsbell>
https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html ?

[16:24:48.0000] <sicking>
woha, looks fine in chrome

[16:25:17.0000] <sicking>
ooh, and fine in FF20 too

[16:25:19.0000] <jsbell>
perhaps you broke firefox? :)

[16:25:26.0000] <sicking>
i think i did :)

[16:25:59.0000] <jsbell>
ignore "blather". I just meant the boilerplate on each method about throwing when the object is deleted

[16:26:01.0000] <sicking>
crazy, i rarely see such bad bustage on nightlies

[16:26:14.0000] <sicking>
dbaron: hey

[16:26:24.0000] <dbaron>
sicking, hi

[16:26:31.0000] <sicking>
dbaron: i going to blame your team for this :)

[16:26:50.0000] <dbaron>
sicking, what?

[16:27:00.0000] <sicking>
oh, man, it's in the DOM, i can't blame you

[16:27:14.0000] <sicking>
dbaron: spec bustage in nightlies

[16:27:35.0000] <dbaron>
sicking, I think there was some js stuff backed out, and nightlies respun

[16:27:43.0000] <dbaron>
sicking, but yes, builds were pretty busted earlier

[16:28:07.0000] <jsbell>
sicking: If you file a FF bug about throwing InvalidStateError, also consider the transitive cases (index of deleted store, cursors of deleted index/store). I just noticed we get those cases wrong in Chrome.

[16:28:52.0000] <sicking>
jsbell: will do

[16:29:19.0000] <sicking>
jsbell: are you working on defining exception ordering?

[16:30:02.0000] <jsbell>
sicking: no, per the spec bug I just got rid of the exception tables, didn't impose an ordering. but while doing so, had a nagging feeling about those edge cases

[16:30:56.0000] <sicking>
jsbell: ah, i see

[16:31:17.0000] <sicking>
jsbell: are you coming on wednesday morning btw? With EricU?

[16:31:35.0000] <jsbell>
sicking: yes!

[16:32:13.0000] <sicking>
jsbell: sweet! I want to talk about temporary vs. permanent databases

[16:32:59.0000] <jsbell>
sgtm

[16:39:50.0000] <Hixie>
MikeSmith: do you know if the bugzilla w3c uses supports the "needsinfo" fields?

[16:40:31.0000] <sicking>
jsbell: do you know if you guys have any additions to the current spec that you'd like to see sooner rather than later?

[16:43:34.0000] <jsbell>
sicking: the low hanging fruit are continuePrimaryKey() and objectStore.openKeyCursor(); beyond that are things we need to experiment with first like indexeddb:// URLs, database observers, binary data keys, DOM Futures-based API, expression-based indexing...

[16:44:52.0000] <jsbell>
Apparently the TC39/I18n crew is proposing a text segmentation API which would help with full-text search if combined with expression indexing.

[16:45:13.0000] <sicking>
jsbell: nice. I'd add index.openCursor which allows specifying a primary key too

[16:45:51.0000] <sicking>
i am very curious how we'd do indexeddb: URLs. Seems tricky unless you restrict what types of things you could access through it

[16:46:18.0000] <jsbell>
Given that Chrome doesn't support blobs-in-idb yet it's too early for us to even experiment.

[16:46:26.0000] <sicking>
ah, true

[16:46:47.0000] <sicking>
oh, i was curious if that's easier for you guys to implement now that you've forked webkit

[16:46:56.0000] <jsbell>
The canonical example is album art for your IDB of music metadata.

[16:47:02.0000] <sicking>
sounded like one of the bug advantages was that you can simplify the process separation stuff

[16:47:14.0000] <sicking>
s/bug/big/

[16:47:27.0000] <jsbell>
sicking: yes; we're refactoring to pull code out of blink into chromium now to remove a couple of layers of indirection

[16:47:52.0000] <jsbell>
and blob support is something that'll get much easier

[16:48:01.0000] <sicking>
nice!

[16:50:15.0000] <sicking>
hmm.. i wonder if something as simple as indexeddb:http://foo.com/dbname/objectstore/key would be enough

[16:50:49.0000] <sicking>
it wouldn't let you address blobs inside of structured clones

[16:51:00.0000] <sicking>
and it's tricky if the key is something other than a string

[16:51:15.0000] <sicking>
but if you're willing to live with those limitations, it'd work

[16:52:29.0000] <sicking>
you could even allow "indexeddb:http://foo.com/dbname/objectstore/foo/bar/baz.html" if "foo/bar/baz.html" was the key

[16:53:57.0000] <jsbell>
index gets would be nice

[16:54:07.0000] <jsbell>
as would #key.path to pull out fragments of an object

[16:54:07.0000] <sicking>
hmm.. good point

[16:54:20.0000] <jsbell>
but yeah, we need to ponder a bit

[16:54:35.0000] <sicking>
i think the keypath would have to be part of the url, not part of the fragment

[16:54:36.0000] <jsbell>
and it should use the current version, but not trigger an upgrade to v1, etc etc.

[16:54:46.0000] <sicking>
so that you can use fragments to identify things within a blob

[16:54:53.0000] <jsbell>
Ah, good point

[16:56:40.0000] <sicking>
yeah.. this stuff gets messy :(

[16:56:44.0000] <sicking>
it would be very cool though


2013-04-23
[18:27:45.0000] <mounir>
Hixie: pong

[22:12:34.0000] <Hixie>
mounir: see https://www.w3.org/Bugs/Public/show_bug.cgi?id=11937#c10

[22:13:56.0000] <MikeSmith>
hsivonen: yeah, about the Html4Assertions stuff, not a lot of meat there. Sad that for the little benefit the schematron version brings it has been costing so much in terms of performance

[22:14:36.0000] <MikeSmith>
Hixie: about bugzilla, I don't knwo what "needsinfo" fields are

[22:14:41.0000] <MikeSmith>
/me checks bugzilla config

[22:19:04.0000] <MikeSmith>
Hixie: I don't find any admin params for turnin on "needsinfo" fields..

[22:19:17.0000] <MikeSmith>
 /editparams.cgi?section=index

[22:19:47.0000] <MikeSmith>
so if it's not exposed in the user UI than I would guess that means our version of bugzilla doesn't support it at all

[22:20:18.0000] <MikeSmith>
v4.2.5

[22:23:11.0000] <MikeSmith>
https://groups.google.com/a/chromium.org/d/msg/blink-dev/KZ0eaL-3vQY/6YQNvwX6NrwJ

[22:23:27.0000] <MikeSmith>
from Ojan: "Would be great if we histogrammed XSLT usage. Maybe we could stop supporting it entirely.!

[22:57:57.0000] <Hixie>
MikeSmith: k

[22:58:22.0000] <Hixie>
wonder how to deal with bugs i have where i'm 90% blocked on someone else responding

[22:58:38.0000] <Hixie>
don't want to lose track of them by assigning it to them or marking thing NEEDSINFO

[22:58:47.0000] <Hixie>
s/thing/them/

[01:33:35.0000] <Ms2ger>
MikeSmith, needinfo? is an extension, apparently: http://bzr.mozilla.org/bmo/4.2/files/head:/extensions/Needinfo/

[01:41:25.0000] <annevk>
So Chrome still crashes on page load... Did I get stuck on a wrong build somehow?

[01:42:02.0000] <annevk>
Oh, it says it's updating now... Lets see

[02:22:41.0000] <jgraham>
tobie: Well the point at which you might catch the mistake is between you submitting the last commit and the reviewer finishing the review, not "as you click the button". Although "as you click the button" is an unusually good time to catch mistakes since that's exactly the moment at which you are most likely to be thinking "is this correct?"

[02:23:40.0000] <jgraham>
Also, allowing reviews to be "complete" without being merged can help a lot for bigger changes that benefit from early design review and subsequent review of the details

[02:23:54.0000] <tobie>
jgraham: arguably, I feel like this moment should be when you initially send the PR.

[02:24:18.0000] <jgraham>
But I am not really arguing about the policy for web-platform-tests

[02:24:38.0000] <jgraham>
However, experience of the opposite policy suggests it does have advantages

[02:27:47.0000] <tobie>
yeah, they actually fit different development models, at least in theory.

[02:28:29.0000] <zcorpan>
tobie: about the tr/ PR, how do we deal with the fact that some specs are obsoleted by other specs? e.g. progress-events is now maintained in xhr.spec.whatwg.org

[02:28:54.0000] <zcorpan>
tobie: and TR/dom is not maintained, i think

[02:29:32.0000] <zcorpan>
(or maybe it is)

[02:30:04.0000] <jgraham>
Well in theory some people volunteered to do it

[02:30:14.0000] <jgraham>
I don't know if anyone actually did or not

[02:30:54.0000] <tobie>
jgraham: what? the -> tr?

[02:31:07.0000] <jgraham>
Keeping W3C DOM up to date

[02:32:04.0000] <tobie>
oh

[02:32:28.0000] <zcorpan>
https://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html 6 December 2012

[02:33:35.0000] <tobie>
zcorpan: tbh I'm not really interested to take part in that debate.

[02:34:18.0000] <tobie>
I'm just hoping to be able to avoid maintaining a dictionary of specs to test repo names.

[02:42:41.0000] <annevk>
Keep that flexible. We want to be able to move bits around while we haven't figured out the architecture.

[02:43:30.0000] <annevk>
Things might flow from DOM/HTML into JavaScript. From HTML into Fetch. From XMLHttpRequest into Fetch. From Streams API into XMLHttpRequest. From Origin into URL or Fetch. Etc.

[02:45:03.0000] <zcorpan>
annevk: tests can move around when that happens

[02:45:34.0000] <zcorpan>
not that moving tests is awesome, but the test/spec coverage tool is

[02:45:48.0000] <Ms2ger>
I don't know what this dictionary is for anyway

[02:46:24.0000] <zcorpan>
tobie: this is for the coverage tool, yes?

[02:46:43.0000] <tobie>
zcorpan: among other things.

[02:46:54.0000] <tobie>
But yeah that's the immediate use case.

[02:47:44.0000] <zcorpan>
tobie: what's the plan when things move stuff around between specs?

[02:47:47.0000] <annevk>
zcorpan: I guess the remaining problem then is the W3C not keeping up to speed with copy-and-pasting...

[02:48:36.0000] <tobie>
annevk: either that or finding licensing terms where folks are happier to contribute to the same spec.

[02:51:16.0000] <tobie>
annevk: what's the rational in moving ProgressEvent to XHR?

[02:51:45.0000] <zcorpan>
jgraham: how does moving tests around every so often affect our use of the tests?

[02:51:49.0000] <annevk>
tobie: and a better Process...

[02:52:07.0000] <tobie>
s/rational/rationale/

[02:52:22.0000] <annevk>
tobie: less work

[02:52:37.0000] <annevk>
tobie: and makes them testable

[02:52:48.0000] <jgraham>
Moving tests around is super annoying

[02:53:15.0000] <jgraham>
Because you need to propogate the change to anything that cares about the URL of a test

[02:53:29.0000] <jgraham>
Or whatever the unique identifier is

[02:54:13.0000] <tobie>
annevk: … aren't progress events used elsewhere?

[02:55:05.0000] <zcorpan>
so what should we do? not structure tests after specs at all? or not move tests when specs change?

[02:55:09.0000] <annevk>
tobie: yes

[02:55:28.0000] <jgraham>
zcorpan: Is there also a good option? :(

[02:55:49.0000] <annevk>
jgraham: hindsight!

[02:56:18.0000] <tobie>
and so aren't you simply displacing the work load from the editor to the implementors and devs which will have the extra cognitive load of figuring this out?

[02:57:12.0000] <zcorpan>
tell spec editors to stop moving things around (just threat with jgraham and his cricket bat)

[02:57:57.0000] <annevk>
tobie: figuring what out? It's all properly cross-referenced...

[02:59:03.0000] <tobie>
annevk: not everyone is as savvy with these things as spec editors.

[02:59:38.0000] <annevk>
tobie: putting Progress Events in its own specification has always been a mistake. It's way too small for its own specification.

[03:00:01.0000] <annevk>
tobie: making it actually much harder to read for developers and implementers as there's so much boilerplate.

[03:00:15.0000] <tobie>
that's essentially a presentational issue.

[03:00:26.0000] <annevk>
No it's not.

[03:00:52.0000] <annevk>
It was done at the time because Charles was going to write the specification, but that never materialized much so I took over...

[03:01:05.0000] <tobie>
really? .boilerplate { display:none }

[03:01:29.0000] <annevk>
Boilerplate such as Abstract/Introduction/Conformance/Acknowledgments/References/Terminology/<div class=head>

[03:01:54.0000] <annevk>
Table of Contents for all that, too

[03:02:16.0000] <zcorpan>
REMOVE ALL THE BOILERPLATE

[03:03:55.0000] <tobie>
annevk: I don't understand the "more testable" assertion either

[03:04:02.0000] <zcorpan>
jgraham: anyway, what i'm wondering now is whether we should merge the tr PR or not

[03:04:28.0000] <annevk>
tobie: well all you could test with the original specification was the interface; now you can actually test it in the context of a feature

[03:05:19.0000] <tobie>
annevk: I don't understand what prevented you from doing so in the previous model, tbh.

[03:06:29.0000] <annevk>
tbh, I don't really care about this much

[03:12:14.0000] <annevk>
It was just easier to fold it in. This is the first time I've heard concerns about it. Also, if someone else does the work, I'm not sure if arguing about details like this is the best use of our collective time.

[03:14:42.0000] <tobie>
Agreed. My concern is not about this particular spec, it's about zcorpan's point above that we now have two different incompatible spec to track for our testing effort.

[03:15:56.0000] <zcorpan>
if one is maintained and the other isn't, the choice of which to track is easy. the problem is that moving tests sucks.

[03:17:08.0000] <annevk>
So this will happen for CORS/HTML fetch too (both will become "Fetch"), but I think testing there is already largely consolidated.

[03:17:52.0000] <annevk>
And actually part of XMLHttpRequest might up in Fetch because that is the right layer of abstraction. In case we introduce new-XMLHttpRequest-like APIs in the future. Which seems likely.

[03:17:59.0000] <annevk>
end up*

[03:19:35.0000] <annevk>
And it seems over time parts of HTML might move to JavaScript, such as part of workers, structured cloning, and transferables...

[03:20:27.0000] <annevk>
I believe moving these bits around is good for the long-term health of the platform and understandability of it, but as I said on www-tag we'll have short term migration pain.

[03:22:01.0000] <tobie>
The reason I push for small specs (and less boilerplate) is that the smaller the specs, the less these re-orgs are problematic.

[03:22:42.0000] <tobie>
(among other benefits)

[03:27:38.0000] <annevk>
I think it might make them harder actually in cases. Because small specifications make it harder to reason about the scope of a feature. E.g. postMessage, workers, structured cloning, event loop, and transferables are all heavily intertwined. Yet I wouldn't be able to come up with the list of W3C specifications that define these.

[03:29:52.0000] <tobie>
We've had this conversation before, but I don't know why we all agree modularity in software is a sign of good design and disagree about this at the spec level.

[03:30:55.0000] <tobie>
I'm not questioning the fact that modularizing late in the game can be hard/impossible, but we should acknowledge this is to do with platform legacy.

[03:32:37.0000] <tobie>
… and not claim it makes things better in general.

[03:33:50.0000] <annevk>
The problem is that we don't design modular specifications, but more often we design bolt-on specifications. The specifications do not reflect the reality from how this would be implemented in software.

[03:34:25.0000] <annevk>
E.g. there is a separate template specification going around. But you are not going to tell me that is modular. Any sane piece of software would put that straight in its HTML parser module.

[03:35:10.0000] <annevk>
The same goes for CSP. CSP cannot be implemented as a module. It needs hooks straight in Fetch/HTML/HTTP but we're not defining it like that. No, we define it as a separate bolt-on specification.

[03:35:46.0000] <annevk>
I want modular specification, not bolt-on specifications.

[03:39:46.0000] <jgraham>
Right, most web browser software has a small number of well-defined high-level modules (networking, url, parser, dom, style, layout) that are continually evolved in ways that might add new sub-modules or touch existing sub-modules. Not an ever-expanding set of top-level modules.

[03:41:38.0000] <annevk>
W3C can scream modularity all day long. But as long as they don't understand what that means I think we're not getting anywhere.

[03:42:46.0000] <smaug____>
annevk: will you attend Webapps wg f2f ?

[03:42:57.0000] <annevk>
(I'm thinking of Jeff Jaffe's presentation at TPAC coupled with a Steve Ballmer like performance: "modularity! modularity! modularity!")

[03:43:06.0000] <annevk>
smaug____: nope

[03:44:15.0000] <jgraham>
Will anyone be there?

[04:08:35.0000] <MikeSmith>
jgraham: Jonas, Julian Aubourg, Dimitri, Arun, Eric Uhrhane, Chris Wilson, hober, Israel Hilerio, Adrian Bateman

[04:08:41.0000] <MikeSmith>
and more

[04:08:50.0000] <MikeSmith>
and Robin and plh and me

[05:01:57.0000] <tobie>
annevk: I genuinely don't understand why you on one hand claim being for modularity and on the other bundle Progress Events and XHR together

[05:03:56.0000] <annevk>
tobie: I think I already explained that the ProgressEvent interface is by itself not very interesting and not large enough to warrant its own specification. ProgressEvent is not something you'd have as a distinct module in software either.

[05:04:33.0000] <tobie>
Arguably, but you certainly wouldn't lump it with xhr, if you were using it elsewhere.

[05:06:18.0000] <annevk>
Yeah, I don't think we've found the right abstraction level yet. Merging it in for now was easier than the alternative.

[05:06:34.0000] <tobie>
That's a more compelling explanation.

[05:08:54.0000] <tobie>
…and helps us make a better decision about what we should do with the ProgEvent test repository (wait and see).

[05:13:41.0000] <annevk>
I doubt it'll move anywhere else fast though. It seems in general people are not very fond of them and we might not use this abstraction for new APIs.

[06:23:38.0000] <zcorpan>
annevk: hmm. the spec for <area href> and the behavior for reflection seems to have changed after the update to use the URL spec

[06:25:57.0000] <zcorpan>
annevk: in particular, before (and for other attributes that take URLs but don't support URLUtils), setting the IDL attribute would set the content attribute to the literal value without resolving

[06:27:47.0000] <zcorpan>
Hixie: ^

[06:30:19.0000] <zcorpan>
filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=21787

[06:41:42.0000] <annevk>
:-(

[06:47:26.0000] <zcorpan>
woah i didn't know about <form>.encoding

[07:09:26.0000] <annevk>
zcorpan: with IDL attribute above you mean only .href right?

[07:09:38.0000] <zcorpan>
annevk: yes

[07:10:10.0000] <zcorpan>
annevk: with "other attributes that take URLs but don't support URLUtils" i mean e.g. longDesc

[09:05:55.0000] <dglazkov>
good morning, Whatwg!

[09:10:11.0000] <rillian>
dglazkov: bueno dias!

[09:25:02.0000] <paxcoder>
Hey. What's up with UndoManager? Why's there no draft yet?

[09:26:39.0000] <annevk>
paxcoder: https://dvcs.w3.org/hg/undomanager/raw-file/tip/undomanager.html ?

[09:28:44.0000] <annevk>
paxcoder: it's kinda dead though I believe

[09:29:30.0000] <annevk>
Hixie: yt?

[09:29:41.0000] <annevk>
Hixie: URLUtils' update steps...

[09:30:07.0000] <Hixie>
yo

[09:31:34.0000] <annevk>
Hixie: for Location, what happens now it seems is that it's parsed, serialized, then parsed again, is that really what we want?

[09:31:58.0000] <Hixie>
when?

[09:32:15.0000] <Hixie>
serialise->parse is idempotent, right?

[09:32:47.0000] <annevk>
yes

[09:32:48.0000] <paxcoder>
annevk, hey. Dead - why?

[09:33:16.0000] <annevk>
paxcoder: nobody has bandwidth prolly

[09:33:20.0000] <annevk>
paxcoder: also, it's a hard problem

[09:34:11.0000] <paxcoder>
annevk, bandwith problem? why?

[09:34:47.0000] <paxcoder>
Actually, i don't even see why it's hard. But I didn't read the spec.

[09:37:52.0000] <annevk>
Hixie: okay, so one easy solution would be to do what you originally requested

[09:38:10.0000] <annevk>
Hixie: to pass "update steps" the raw string (not serialized)

[09:38:32.0000] <annevk>
oh wait

[09:38:41.0000] <Hixie>
annevk: how would that differ from what's going on now?

[09:38:45.0000] <annevk>
that does not work

[09:39:11.0000] <Hixie>
i think the solution is to do what i originally originally suggested, which is let href be under the management of the host spec

[09:39:20.0000] <Ms2ger>
paxcoder, someone needs to care enough and have time, and their manager might need to approve using that time for that purpose

[09:39:32.0000] <paxcoder>
From what I gathered it's simply: 1) attach MutationObserver to specified object 2) record diffs (MutationRecord or whatever they're called) 3) define steps to reverse each mutation type

[09:39:43.0000] <Ms2ger>
paxcoder, I believe the editor changed employment a while back, too

[09:39:53.0000] <Hixie>
paxcoder: i would imagine that if you're up for it, the current editor would be happy to hand the reigns over to you :-)

[09:40:17.0000] <paxcoder>
Hixie, meh, I'm a noob. This is Anne's territory.

[09:40:38.0000] <Hixie>
anne's dealing with plenty of specs already

[09:42:14.0000] <Ms2ger>
/me isn't sure if Hixie or annevk has the most spec text to maintain now

[09:42:34.0000] <annevk>
Hixie: or we standardize the weird thing where udpate steps are run with the input value if you set .href and the serialized value if you set any other member...

[09:43:01.0000] <Hixie>
annevk: does that work for Location?

[09:43:02.0000] <annevk>
Hixie: having .href out of this spec is kinda weird, but I guess we could do that too

[09:43:20.0000] <Hixie>
annevk: or, maybe the best, is when i say it's a URLUtils thingy, i pass a flag

[09:43:21.0000] <annevk>
Hixie: it does as you pass a string to assign() / replace()

[09:43:27.0000] <Hixie>
ah

[09:43:41.0000] <Hixie>
then yeah

[09:43:48.0000] <annevk>
Hixie: and you actually pass the original string if url is null

[09:43:58.0000] <annevk>
it's fricking ugly though

[09:44:02.0000] <Hixie>
welcome to the web

[09:44:09.0000] <annevk>
I know, still needed to point that out

[09:44:39.0000] <Hixie>
:-)

[09:44:48.0000] <annevk>
I'll try to fix these URL thingies tomorrow and add some notes to the whole thing so it's clear why it's fucked

[09:45:11.0000] <Hixie>
you just gonna set url to null when href is set?

[09:45:16.0000] <Hixie>
or do i need to do some stuff on my side?

[09:45:24.0000] <annevk>
Ms2ger: do we count encoding tables as text?

[09:45:42.0000] <annevk>
Hixie: when href is set I'll invoke the update steps with href's value

[09:45:47.0000] <Ms2ger>
annevk, mm...

[09:45:57.0000] <annevk>
Hixie: and you just either set the attribute to that value or pass that value to assign/replace

[09:46:14.0000] <Hixie>
annevk: so update steps always get passed a string rather than having to grab the value?

[09:46:22.0000] <annevk>
Hixie: which should fix the bug zcorpan reported and save you some serialization boilerplate

[09:46:24.0000] <Hixie>
annevk: that would factor out some boilerplate on my side

[09:46:27.0000] <Hixie>
cool

[09:46:30.0000] <Hixie>
thanks!

[09:46:34.0000] <Hixie>
reassign the bug to me when you're done

[09:46:38.0000] <annevk>
yeah

[09:47:10.0000] <dlongley>
annevk or TabAtkins: i'm implementing the JSON-LD API that uses Futures...

[09:47:33.0000] <dlongley>
i'm wondering if you can point me at any existing JS implementations for Futures ... and if not, can you tell me if you think adapting this: https://github.com/cujojs/when

[09:47:55.0000] <dlongley>
to meet the Futures API would be simpler or more difficult than just doing a straight-up, simplistic implementation of what's in the DOM spec

[09:48:19.0000] <dlongley>
the algorithms look fairly short in the DOM spec, however, i would prefer to reuse existing code

[09:48:39.0000] <dlongley>
it does seem like promises/A+ has deviated perhaps a bit too much from Futures (or vice versa, rather).

[09:50:46.0000] <annevk>
dlongley: https://github.com/slightlyoff/DOMFuture/ has an impl

[09:52:38.0000] <dlongley>
annevk: thanks ... how stable do you think the Futures API is? ... is it likely to be in flux for a while still?

[09:53:13.0000] <dlongley>
i'm also curious if passing multiple arguments to resolve() was considered ... as this is a popular thing to do with node.js style callbacks

[09:53:34.0000] <dlongley>
and only permitting one argument makes it more difficult to wrap some node.js code w/a Futures API.

[09:53:37.0000] <Ms2ger>
It's in flux until browser implementations have shipped

[09:53:44.0000] <Ms2ger>
And it's frozen after that

[09:53:52.0000] <Ms2ger>
Just like every web api ever

[09:53:56.0000] <dlongley>
well, right, i was just wondering what the general feeling was.

[09:54:19.0000] <dlongley>
i guess there aren't enough implementations to know.

[09:54:33.0000] <Ms2ger>
I don't know of any

[09:54:51.0000] <dlongley>
well, i know of one now (and you too) ^

[09:55:03.0000] <Hixie>
bummer, i keep missing mounir

[09:55:09.0000] <dlongley>
(not a browser implementation, but a polyfill)

[09:55:39.0000] <slightlyoff>
dlongley: the polyfill passes the A+ test suite

[09:55:51.0000] <slightlyoff>
dlongley: so DOM Futures are compatible

[09:55:58.0000] <dlongley>
slightlyoff: thanks, i see that you're the one who wrote it

[09:56:12.0000] <dlongley>
my understanding is the DOM Futures has some extra functionality (like accept())

[09:56:14.0000] <slightlyoff>
dlongley: things you might think are differences are mostly due to the light set of things that A+ actually spec's

[09:56:22.0000] <dlongley>
but it should be a superset then, and still pass A+

[09:56:26.0000] <slightlyoff>
dlongley: that's not "extra", it's a design choice

[09:56:42.0000] <dlongley>
ok

[09:56:51.0000] <slightlyoff>
dlongley: A+ is silent on the resolver protocol, and months of research went into having both accept() and resolve()

[09:57:00.0000] <slightlyoff>
(well, a week on that point, but months for the overall design)

[09:57:06.0000] <dlongley>
ok, that's important for me to hear, thanks

[09:57:17.0000] <slightlyoff>
dlongley: half of the common libs do what accept() does, half do what resolve() does

[09:57:31.0000] <slightlyoff>
and it's a showstopper for some libs not to have accept() style

[09:57:40.0000] <slightlyoff>
(I hear this all the time from other googlers, FWIW)

[09:57:44.0000] <dlongley>
right ... and i saw some recent discussions about it and was wondering whether it might stay or go

[09:57:49.0000] <dlongley>
it sounds like it's going to stay

[09:58:01.0000] <Hixie>
anyone got any suggestions for how i should handle bugs that are pending feedback but that i don't want to lose? NEEDSINFO will go into a black hole, editing the whiteboard is something commenters will likely not clear, a target milestone could work, i guess, but i'm likely to miss the response

[09:58:16.0000] <dlongley>
do you know if support for using resolve() with multiple arguments is being considered?

[09:58:18.0000] <dlongley>
slightlyoff: ^

[09:59:02.0000] <annevk>
dlongley: I hope the API is stable

[09:59:13.0000] <slightlyoff>
dlongley: what would that even mean? resolution is for a single value

[09:59:24.0000] <slightlyoff>
dlongley: the contract of a future describes a single value

[09:59:25.0000] <annevk>
dlongley: it's very small and matches the subset of what the libraries do

[09:59:31.0000] <dlongley>
well, when using callbacks in node.js you might pass (err, foo, bar), not just (err, value)

[09:59:48.0000] <dlongley>
the promises/futures libraries that i've seen that wrap node.js callbacks

[09:59:52.0000] <dlongley>
so that you can unify your API ...

[09:59:55.0000] <dlongley>
have an issue with that.

[10:00:22.0000] <annevk>
Hixie: UNCONFIRMED?

[10:00:24.0000] <dlongley>
they end up transforming the node.js callback arguments into an array of values to pass to the promise/future

[10:00:55.0000] <dlongley>
and that can end up being a mess... especially if one of those arguments can itself be an array or something else

[10:01:01.0000] <Hixie>
annevk: hmm, that's an idea

[10:01:05.0000] <dlongley>
it makes it difficult to determine what you're getting ... and you have to do some surgery to fix it.

[10:01:12.0000] <annevk>
Hixie: it's a hack, but it might work

[10:01:24.0000] <Hixie>
annevk: yeah. though commenters are unlikely to change it back to NEW

[10:01:31.0000] <Hixie>
annevk: but it might work nonetheless

[10:01:55.0000] <Ms2ger>
Hixie, make someone install the needinfo? extension on the W3C wiki :)

[10:02:12.0000] <dlongley>
annevk: it's only stylistically different from saying you resolve to an object w/keys that point to your arguments vs. just a list of arguments.

[10:02:32.0000] <dlongley>
but that difference in style is prevalent in node.js -- making wrapping some APIs difficult.

[10:03:27.0000] <Hixie>
Ms2ger: that'd be ideal, but i don't want to give MikeSmith and company more work

[10:04:42.0000] <annevk>
dlongley: I suspect that ES6' arity functionality will help with that

[10:05:45.0000] <dlongley>
annevk: do you think it would add so much more complexity that it's worth waiting for ES6?

[10:06:48.0000] <MikeSmith>
Hixie: I don't mind do more work as a long as it's for something that's actually useful

[10:07:00.0000] <dlongley>
this is only anecdotal, obviously, but i would expect this restriction to be an annoyance for a lot of JS developers with experience w/node.js

[10:07:22.0000] <Hixie>
MikeSmith: i don't know how useful this would be.

[10:07:30.0000] <mounir>
Hixie: I'm around actually, but in a meeting

[10:07:32.0000] <dlongley>
and it doesn't seem like something that's too difficult to support.

[10:07:33.0000] <Hixie>
MikeSmith: right now i have some bugs where i'm 90% blocked waiting on input from someone or other

[10:07:46.0000] <mounir>
Hixie: I will look at that bug today hopefully

[10:08:08.0000] <Hixie>
mounir: excellent, thanks. i'm in no rush, just want to make sure it's on your radar. :-)

[10:08:25.0000] <annevk>
dlongley: it's not the complexity, it's the inconsistency with all other future/promise libraries I want to avoid

[10:08:42.0000] <Hixie>
MikeSmith: so it'd be nice if i could indicate that somehow... but still not lose the bug (basically i need to be able to time out)

[10:08:53.0000] <Hixie>
MikeSmith: (and take a guess at what they wanted)

[10:09:07.0000] <MikeSmith>
Hixie: yeah I remember you mentioned those yesterday. I will try to put some thought into how to help deal with those

[10:09:13.0000] <Hixie>
MikeSmith: i haven't played with the needsinfo? feature so i don't know if it would work well.

[10:09:19.0000] <MikeSmith>
ok

[10:09:30.0000] <Hixie>
MikeSmith: anne's idea of just marking the bugs UNCO might work. or putting something in the status whiteboard.

[10:10:59.0000] <dlongley>
annevk: i see... well, perhaps this inconsistency is worth it, especially if this will be the chosen standard on the Web (where it seems promises may actually take hold, as opposed to elsewhere where they haven't seen too much success) ... there may also be some ways to mitigate the effects of the inconsistency

[10:11:13.0000] <Ms2ger>
MikeSmith, fwiw, I believe needinfo? is used quite a lot on bmo now

[10:11:34.0000] <annevk>
dlongley: ES6 with "..." makes it relatively easy to migrate from one to the other

[10:12:01.0000] <annevk>
dlongley: also with argument handling

[10:16:11.0000] <dlongley>
annevk: i'm trying to figure out how that would work ... as you'd still need to pass the node.js arguments to the resolve function as a single value (an array)

[10:16:27.0000] <dlongley>
it seems like the spread operator deals with a different problem

[10:16:42.0000] <dlongley>
(being able to succinctly pass an array as multiple parameters)

[10:17:23.0000] <dlongley>
the issue here is that the resolve() method can only take 1 parameter ... and there may be cases where determining how to interpret that parameter is indeterminate

[10:18:13.0000] <annevk>
you mean if you don't define what the future will return?

[10:18:14.0000] <dlongley>
anyway, my guess would be that there will be some devs finding it difficult to wrap their continuation-passing style APIs w/Futures because of this issue

[10:19:13.0000] <dlongley>
i'm talking about the case where you have a node.js style async operation that you'd like to convert to a future

[10:19:38.0000] <dlongley>
suppose the operation looks like this: foo(params, callback)

[10:19:52.0000] <dlongley>
and the callback signature is: callback(err, bar, baz)

[10:20:07.0000] <dlongley>
converting 'foo' into a future that can be called like this:

[10:20:20.0000] <annevk>
so then you can do [err, bar, baz]

[10:20:26.0000] <dlongley>
right ... but that may be problematic.

[10:20:39.0000] <dlongley>
and really, err wouldn't be in that array (nitpick)

[10:20:53.0000] <dlongley>
rather, [bar, baz] would be passed to the resolve callback.

[10:21:15.0000] <dlongley>
however, if bar can be an array or an object and baz is optional ...

[10:21:20.0000] <dlongley>
that could cause some consternation.

[10:21:57.0000] <annevk>
hmm, seems like you should pick a pattern and stick with it

[10:22:03.0000] <annevk>
but yeah

[10:22:19.0000] <dlongley>
well, as far as i can tell, this may be the only thing standing in the way of making it easy to convert a lot of node.js style code to using Futures.

[10:22:29.0000] <dlongley>
it doesn't seem too difficult otherwise.

[10:22:56.0000] <dlongley>
which would be tremendously helpful, particularly for those node.js libs that work on the client as well as the server.

[10:23:01.0000] <annevk>
I think the ideal API for futures in a bunch of those cases might be to pass an object

[10:23:18.0000] <dlongley>
that's probably true (we are doing this with the new JSON-LD API)

[10:23:20.0000] <MikeSmith>
Hixie, annevk : "UNCO" means "shit" in Japanese

[10:23:28.0000] <dlongley>
but, for existing APIs that are in use everywhere, not so easy.

[10:23:33.0000] <Ms2ger>
MikeSmith, sounds good, then ;)

[10:23:40.0000] <dlongley>
it would be great if converting them didn't require special code.

[10:23:47.0000] <dlongley>
but instead, just a simple wrapper.

[10:24:01.0000] <Hixie>
MikeSmith: heh

[10:24:11.0000] <annevk>
dglazkov: for jit and stuff I heard it might be nice if you can get some guarantees about types in which case always passing arrays is kinda sucky

[10:24:14.0000] <dlongley>
if resolve() took multiple arguments that would work, from what i can tell.

[10:24:56.0000] <annevk>
true

[10:25:27.0000] <dlongley>
i think it's worth exploring ... and maybe it wouldn't cause too much of an issue with other promise libs (or maybe that shouldn't take priority over this other issue).

[10:25:45.0000] <annevk>
dlongley: yeah, maybe raise it on es-discuss / www-dom?

[10:25:55.0000] <dlongley>
ok

[10:26:11.0000] <hober>
annevk: one year anniversary of w3cmemes

[10:26:59.0000] <annevk>
dlongley: I don't think this has been explicitly considered so you're right

[10:27:04.0000] <annevk>
dlongley: at least as far as I can tell

[10:27:09.0000] <annevk>
(that it's worth exploring)

[10:27:13.0000] <dlongley>
ok

[10:27:48.0000] <annevk>
hober: we've been surpassed by Fake Alex recently

[10:28:11.0000] <slightlyoff>
hober: yeah, Fake Alex really is someone's A material...

[10:28:19.0000] <hober>
indeed, we should ask fake alex to collaborate

[10:29:05.0000] <slightlyoff>
dlongley: what would it *mean* to take multiple values?

[10:29:21.0000] <slightlyoff>
annevk: I don't get the proposed semantic

[10:29:45.0000] <dlongley>
it wouldn't be any logically different from resolving to a single value that is an object w/keys that point to values

[10:29:46.0000] <annevk>
slightlyoff: future's result would be a one or more values, rather than just one

[10:30:13.0000] <dlongley>
it's just that the future resolves ... what annevk just said.

[10:30:22.0000] <slightlyoff>
annevk: that's just not JS-ish

[10:30:27.0000] <slightlyoff>
use destructuring

[10:30:57.0000] <dlongley>
on the contrary, i think it's very JS-ish ... at least how JS has been used in practice w/respect to async or continuation programming

[10:31:40.0000] <slightlyoff>
this is what destructuring is for. Use an array and rest/spread, or use an obj + destructuring

[10:31:57.0000] <slightlyoff>
to say it's JS-ish is to ignore what happens to mutliple values: they're reified into a single object (arguments)

[10:32:10.0000] <slightlyoff>
so your semantic is either confused or confusing

[10:32:17.0000] <slightlyoff>
what does it mean to pass a single value in this world?

[10:32:44.0000] <slightlyoff>
sorry, need to go for a bit...but send me mail or file an issue in the DOM Future repo

[10:32:45.0000] <Hixie>
wtf is "experimental-webgl" ?

[10:33:04.0000] <dlongley>
slightlyoff: i'll probably send an email off to www-dom

[10:33:26.0000] <Ms2ger>
Hixie, an alias for webgl when used as argument to getContext

[10:33:34.0000] <Ms2ger>
Hixie, one we probably won't get rid of

[10:33:58.0000] <slightlyoff>
dlongley: fine, but cc me (please)

[10:33:58.0000] <Hixie>
sigh

[10:34:15.0000] <Hixie>
Ms2ger: thanks

[10:34:17.0000] <slightlyoff>
dlongley: slightlyoff at chromium dot org

[10:34:25.0000] <Ms2ger>
Np

[10:34:37.0000] <Hixie>
(one day we'll learn not to do this kind of thing right?)

[10:35:00.0000] <dlongley>
slightlyoff: sure

[10:35:41.0000] <Ms2ger>
Hixie, one can hope

[10:48:13.0000] <paxcoder>
how the heck does EME work?

[10:48:21.0000] <Ms2ger>
Not

[10:48:25.0000] <Hixie>
define "work"

[10:49:27.0000] <paxcoder>
how does it stop me from copying content?

[10:50:16.0000] <paxcoder>
where does decryption happen?

[10:50:18.0000] <Ms2ger>
That's not the goal

[10:50:28.0000] <Hixie>
paxcoder: it doesn't stop you from copying content.

[10:50:40.0000] <Hixie>
nothing can, since the whole point of playing back video is to let you copy the content into your video RAM

[10:50:47.0000] <paxcoder>
Hixie, Ms2ger: so what does it do then?

[10:51:04.0000] <Ms2ger>
Read Hixie's G+ post

[10:51:12.0000] <paxcoder>
can you tell me please?

[10:51:18.0000] <Hixie>
https://plus.google.com/u/0/107429617152575897589/posts/iPmatxBYuj2

[10:51:45.0000] <Hixie>
it allows content producers to apply negotiation leverage against content distributors who provide playback services

[10:52:40.0000] <paxcoder>
the heck does that have to do with my client?

[10:53:02.0000] <Hixie>
for you? precisely nothing.

[10:53:14.0000] <paxcoder>
then why would i want additional code in it?

[10:53:22.0000] <paxcoder>
ie why EME?

[10:53:25.0000] <Hixie>
as a user, drm has nothing to offer you.

[10:53:44.0000] <Hixie>
it is strictly a net negative.

[10:53:57.0000] <annevk>
oh hey, that's another good way to argue against this thing

[10:54:06.0000] <jgraham>
annevk: Where does a resolver get assosciated with a future?

[10:54:15.0000] <annevk>
violates http://www.w3.org/TR/html-design-principles/

[10:54:27.0000] <annevk>
jgraham: it just is

[10:54:38.0000] <Hixie>
annevk: you seem to be under the mistaken assumption that anyone with the authority to do anything about it, cares

[10:54:46.0000] <paxcoder>
Hixie, then what's the reasoning behind putting it in my client?

[10:54:53.0000] <jgraham>
annevk: Uhhhh

[10:54:59.0000] <jgraham>
I don't understand :)

[10:55:18.0000] <annevk>
jgraham: if you create a future, it comes with an associated resolver

[10:55:24.0000] <paxcoder>
why is someone writing a client spec that only content producers want?

[10:55:39.0000] <annevk>
jgraham: if you create an element, it comes with a classList, it's like that

[10:55:40.0000] <jgraham>
So it happens in the (internal) constructor of the future

[10:55:43.0000] <jgraham>
?

[10:55:48.0000] <Ms2ger>
paxcoder, because their managers make themN

[10:55:50.0000] <Ms2ger>
?*

[10:56:07.0000] <annevk>
jgraham: yeah

[10:56:13.0000] <jgraham>
OK

[10:56:14.0000] <paxcoder>
Ms2ger, is there no voting process that would stop its inclusion?

[10:56:25.0000] <Ms2ger>
Ehehehee

[10:56:28.0000] <Hixie>
paxcoder: the people putting it in your client are probably content distributors who are finding themselves "forced" to do so by content producers in their negotiations

[10:56:47.0000] <gavinc>
paxcoder: and because content carriers do not have the leverage they did when cable TV was created

[10:56:52.0000] <Hixie>
paxcoder: only browser vendors get to decide what they put in their browsers

[10:57:02.0000] <paxcoder>
Hixie, the people voting "yes" to EME are those putting it in my client.

[10:57:08.0000] <Hixie>
paxcoder: no

[10:57:25.0000] <Hixie>
paxcoder: even if the w3c through EME out, it would still end up in your client

[10:57:26.0000] <paxcoder>
Hixie, arguments please.

[10:57:36.0000] <Hixie>
paxcoder: case in paint, the w3c through HTML out, and HTML is still in browsers.

[10:57:45.0000] <Hixie>
threw, even

[10:58:17.0000] <paxcoder>
what?

[10:58:30.0000] <MikeSmith>
"The Google Search Appliance uses XSLT for UI." somebody should fix that

[10:58:45.0000] <Hixie>
paxcoder: in 1998, and again in 2004, the w3c said HTML was dead. So we wrote the HTML spec outside W3C.

[10:59:25.0000] <gavinc>
a standard can say whatever it wants, if all implementors DO SOMETHING ELSE it doesn't matter what the state of the standards document is

[10:59:42.0000] <Hixie>
paxcoder: browsers don't care if a spec is at the w3c, the whatwg, the ietf, or on someone's web site; if they want to implement it, they do so

[10:59:43.0000] <MikeSmith>
"Once you become a customer you can access the XSLT tutorial from the Enterprise Support Site." That'll line up the customers for sure.

[11:00:01.0000] <paxcoder>
Hixie, I'm sure it was written to meet needs of modern apps, not to defy XMLization.

[11:00:18.0000] <Hixie>
"it"?

[11:00:26.0000] <paxcoder>
Hixie, the living standard

[11:00:34.0000] <paxcoder>
HTML5

[11:00:45.0000] <Hixie>
the HTML spec was written for a variety of reasons, sure

[11:00:49.0000] <Hixie>
that's not really the point here

[11:01:18.0000] <paxcoder>
Ok, please tell me what EME does.

[11:01:51.0000] <paxcoder>
Not whom it benefits, what it *does*.

[11:01:53.0000] <Hixie>
EME harms users and society as a whole in order to help hollywood extort more money out of users.

[11:02:55.0000] <SimonSapin>
Hixie: didn’t you write the piece about how DRM is not about users but control over manufacturers?

[11:03:07.0000] <Hixie>
SimonSapin: yeah, https://plus.google.com/u/0/107429617152575897589/posts/iPmatxBYuj2

[11:03:11.0000] <paxcoder>
See, from what I know DRM *always* includes an unwanted, proprietary piece of software running on my PC. Why would W3C want to force me to support it?

[11:03:48.0000] <Hixie>
paxcoder: the w3c wants to publish this spec (rather than letting someone else do it) because it increases the chances of hollywood companies joining the w3c

[11:03:56.0000] <Hixie>
paxcoder: and when companies join the w3c, the w3c makes money.

[11:03:59.0000] <Hixie>
about $60k per year.

[11:04:03.0000] <Hixie>
per company.

[11:04:24.0000] <paxcoder>
They're selling my freedom cheap.

[11:04:30.0000] <gavinc>
No.

[11:04:39.0000] <gavinc>
Browser vendors already did that.

[11:04:50.0000] <paxcoder>
gavin, what do you mean?

[11:04:59.0000] <Hixie>
the w3c publishing the spec or not has no effect on whether browsers have EME in them or not

[11:04:59.0000] <odinho>
MS, Google, Netflix et al are also part of w3c.

[11:05:04.0000] <Hixie>
that's entirely up to the browser vendors

[11:05:14.0000] <gavinc>
W3C can't make browser vendors do anything.

[11:05:21.0000] <gavinc>
See XHTML2 ;)

[11:06:03.0000] <paxcoder>
Hixie, sure it does. Browser vendors want a "HTML5 fully compatible" sticker.

[11:06:13.0000] <Hixie>
paxcoder: no, they really don't

[11:06:32.0000] <Hixie>
paxcoder: (witness the fact that no browser ever implemented HTML4 as written)

[11:06:58.0000] <paxcoder>
Hixie, well they aim for it anyway

[11:07:23.0000] <paxcoder>
if W3C doesn't introduce EME, they'd have a good excuse not to implement it

[11:07:29.0000] <Hixie>
when the w3c said to do xhtml2, and that html was dead, the browser vendors just started a separate group to spec HTML

[11:07:38.0000] <paxcoder>
if it does, Chromium, and YouTube will be DRM-laden in a year

[11:07:43.0000] <Hixie>
the browser vendors are the ones _pushing the EME spec_

[11:07:50.0000] <Hixie>
(not all the browser vendors)

[11:08:23.0000] <paxcoder>
Ok, so I understand you're not very fond of W3C. Are you all against EME too?

[11:08:59.0000] <paxcoder>
Also, what's wrong with XHTML2?

[11:09:31.0000] <Ms2ger>
Backwards compatibility

[11:09:44.0000] <paxcoder>
ungh

[11:09:52.0000] <paxcoder>
that's one of my least-favorite words

[11:10:29.0000] <paxcoder>
When it comes to web. Though granted, I don't have big projects to maintain.

[11:10:54.0000] <Hixie>
paxcoder: EME, or rather, DRM, is user-hostile. It literally and quite seriously harms humanity's cultural development, and it violates people's personal freedoms. Yes, I am opposed to it.

[11:12:03.0000] <paxcoder>
Hixie, define freedoms perhaps?

[11:12:47.0000] <paxcoder>
Because eg. although I call it "free software", and not "open source", I don't agree with FSF that non-free software is unethical.

[11:13:09.0000] <paxcoder>
In all cases, anyway

[11:14:07.0000] <Hixie>
paxcoder: the freedom of expression, specifically in the ability to easily parody, produce analysis that includes segments of the original content, use content in education settings; also the ability to make backups, to time-shift, to format-shift, to device-shift; the ability to use content in ways that weren't considered by the original creator, etc.

[11:14:14.0000] <gavinc>
paxcoder: DRM extends the reach of copyright law beyond the scope provided for in the Constitution to "promote the Progress of Science and useful Arts"

[11:15:35.0000] <paxcoder>
Hixie, you have a point. Those are instances of freedoms that are relevant here. But how about theoretically (I'm jumping from topic to topic in order to reevaluate or solidify my views of "freedom", hope you don't mind)?

[11:16:56.0000] <paxcoder>
Somehow fair use hasn't occurred to me. So thanks both. Maybe I just wasn't thinking long enough about it. Or from the point of Bob instead of Mallory ;-P

[11:18:25.0000] <Hixie>
DRM is the reason that when I *BUY* a movie on iTunes, and want to watch it *on the device where i bought it*, namely my mac mini hooked up to my DRM-supporting HDMI TV, the video displays a checkerboard pattern instead of the video when I try to play it, just because I happen to have the Mac mini opened up in Screen Sharing on a computer four meters away.

[11:18:48.0000] <Hixie>
which is such a high level of BS that I don't even know where to begin

[11:19:51.0000] <Hixie>
and that's not even going to other things that should work fine, e.g. I buy an audiobook on my aging iPod touch, and then transfer it to my Android phone, and it will no longer play.

[11:20:03.0000] <Hixie>
why not? i own both devices, i paid for the content, nobody else is involved

[11:20:09.0000] <Hixie>
such utter BS

[11:20:31.0000] <Hixie>
and mind you, both the movie and the audiobook are available on bittorrent sites with no DRM

[11:20:39.0000] <paxcoder>
Hixie, Sounds like Adam Smith smacked you with his invisible hand.

[11:20:43.0000] <Hixie>
so it's not like there's any protection of copyright going on

[11:21:21.0000] <paxcoder>
Reference if anyone's unfamiliar: https://en.wikipedia.org/wiki/Invisible_hand

[11:21:43.0000] <gavinc>
uhh... nothing to do with copyright

[11:22:22.0000] <paxcoder>
gavin, it does with DRM.

[11:22:51.0000] <paxcoder>
well it's an (capitalist) economical concept, so it's related to all of the above

[11:25:22.0000] <paxcoder>
gavin, basically, DRM must be regulated against (eg. by rejecting it from standards), because free market won't do it (despite the above capitalist ideal)

[11:25:33.0000] <gavinc>
uh

[11:25:35.0000] <gavinc>
No.

[11:25:42.0000] <gavin>
paxcoder: (you want gavinc, not gavin)

[11:25:51.0000] <paxcoder>
my bad

[11:26:17.0000] <gavinc>
Copyright and DRM were CREATED by regulation. Copyright is a state granted monopoly

[11:26:54.0000] <paxcoder>
DRM is no regulation

[11:27:17.0000] <Hixie>
DRM is protected by legislation

[11:27:18.0000] <paxcoder>
Copyright is, and - in some cases - a beneficial one.

[11:27:53.0000] <gavinc>
Oh yes it is. Without the DMCA all DRM would be pointless. But with it the act of writing software to get around DRM is illegal. Owning the tools needed to get around it is illegal.

[11:28:18.0000] <Hixie>
if it was legal for companies to break DRM, the DRM-pushing companies would have no leverage

[11:28:25.0000] <paxcoder>
Hixie, well it is now. But that's a problem of the legal system, not a product of supposed intrinsic evil of regulation.

[11:28:37.0000] <Hixie>
nobody said anything about regulation being evil?

[11:28:58.0000] <paxcoder>
Hixie, they're building it into processors

[11:29:04.0000] <Hixie>
so?

[11:29:06.0000] <paxcoder>
see AMD+ARM

[11:29:54.0000] <paxcoder>
Hixie, deregulation can't help against that

[11:30:05.0000] <Hixie>
drm in chips isn't a problem

[11:30:11.0000] <paxcoder>
sure it is

[11:30:13.0000] <Hixie>
why?

[11:30:20.0000] <Hixie>
breaking drm is trivial

[11:30:22.0000] <paxcoder>
because you have no nanotech to hack it

[11:30:42.0000] <paxcoder>
not when it's firmware-defined

[11:30:45.0000] <gavinc>
DRM is "broken" technically by design. The only thing that keeps it unbroken is the law.

[11:31:00.0000] <Hixie>
paxcoder: you don't need to get the firmware, just the spec for the firmware.

[11:31:09.0000] <paxcoder>
gavinc, it's the opposite, it's the greediness of the market

[11:31:35.0000] <gavinc>
No, really it isn't.

[11:31:36.0000] <paxcoder>
Hixie, what do you mean? Also, how would you get it?

[11:32:22.0000] <paxcoder>
gavinc, if there was no legal regulation at all, companies would still manage to produce chips you can't hack

[11:33:22.0000] <Hixie>
paxcoder: that kind of thing is leaked regularly (and for serious drm, is often just available publicly, since there's lots of implementors)

[11:33:28.0000] <gavinc>
paxcoder: No, they really wouldn't.

[11:33:52.0000] <Hixie>
paxcoder: what's kept more secret is typically the key, but in practice those leak also, or are determined by various cryptographic attacks.

[11:33:54.0000] <paxcoder>
Hixie, then why do I still have a firmware blob for my GFX card?

[11:34:38.0000] <gavinc>
/me gives this up as pointless and goes to eat lunch

[11:34:56.0000] <Hixie>
paxcoder: i would suspect it's because hardware decoding is more efficient.

[11:35:06.0000] <Hixie>
i should go to lunch too

[11:35:07.0000] <paxcoder>
gavin, you can prepend n "really"s to your "no", but it won't make it a solid argument

[11:35:07.0000] <Hixie>
bbiab

[11:35:38.0000] <paxcoder>
ok, bye. I still think DRM needs no regulation to "work".

[11:35:57.0000] <paxcoder>
In fact, if regulation was sufficient, there would be no need for DRM in the first place.

[11:36:58.0000] <Hixie>
(there is no need for drm)

[11:38:38.0000] <paxcoder>
?

[11:39:39.0000] <gsnedders>
"there would be no need for DRM" implies there is a need for DRM.

[11:39:44.0000] <paxcoder>
I meant the need of companies with such (arguably obsolete) business models, of course.

[11:40:02.0000] <gsnedders>
paxcoder: DRM doesn't help them.

[11:40:19.0000] <paxcoder>
Dude, the fact that DRM exists proves it does.

[11:41:17.0000] <paxcoder>
gsnedders, ^

[11:41:30.0000] <gsnedders>
Ask anyone like Netflix, they'll tell you DRM doesn't stop piracy whatsoever. Unless the content producers have different data to everyone else…

[11:43:23.0000] <paxcoder>
"Whatsoever" is an overstatement. All it needs to do is increase revenue, and it does that. But that's not the topic.

[11:45:12.0000] <paxcoder>
So can someone tell me how exactly EME enables DRM? Is my browser going to have mechanisms for keeping secrets from me?

[11:45:48.0000] <gsnedders>
paxcoder: It provides an API designed to allow plugins to be installed that keep secrets from you.

[11:46:27.0000] <gsnedders>
Or, alternatively, instead of plugins, have support built into the browser that keeps secrets from you.

[11:47:04.0000] <paxcoder>
An "open standard" for proprietary software delivery. Hah

[11:47:42.0000] <paxcoder>
gsnedders, how would the latter work though?

[11:48:09.0000] <gsnedders>
paxcoder: It relies upon either the plugin (in the former case) or the browser (in the latter case) being closed source.

[11:49:15.0000] <paxcoder>
gsnedders, i find it hard to believe that the W3C standard would demand browsers to be non-free.

[11:50:22.0000] <paxcoder>
They can argue for the former the same way Linux allowed Microsoft's virtualization driver in the kernel, but the latter would not be defensible.

[11:52:57.0000] <gsnedders>
paxcoder: Well, the former case works fine in free browsers.

[11:53:04.0000] <gsnedders>
paxcoder: Although the plugin itself is non-free.

[11:53:38.0000] <gsnedders>
paxcoder: You can theoretically have a free plugin in a free browser, but it gets you nothing beyond being able to support another codec, and browsers already have ways to add extra codecs by and large.

[11:54:46.0000] <paxcoder>
Yeah, I see how the former case would work.

[11:55:10.0000] <gsnedders>
paxcoder: From a web application POV, the cases are indistinguishable.

[11:58:07.0000] <gsnedders>
paxcoder: And it's not a W3C standard until the majority of the members (…which include various right-holders…) vote in favour of it and the director approves it.

[13:03:09.0000] <zcorpan>
SimonSapin: can http://www.w3.org/Style/CSS/Tracker/issues/316 be closed? since gecko/webkit/blink don't have the quirk at all, it should be quite clear that it's not needed for web compat and doesn't need to be specced

[13:24:05.0000] <zcorpan>
Hixie: do you run a validator on the spec's IDL blocks? if so, what do you use?

[13:28:06.0000] <nimbu>
MikeSmith: OMG why are you suffering in SAN JOSE

[13:29:11.0000] <zcorpan>
would it be reasonable to have anolis validate IDL?

[13:29:29.0000] <hober>
nimbu: html wg f2f

[13:30:15.0000] <jgraham>
suffering squared?

[13:30:39.0000] <tantek>
San Jose does feel like a punishment

[13:31:20.0000] <tantek>
or maybe it was the corpo-campus-sprawl parking lot hell

[13:32:45.0000] <hober>
the laugh track from next door is the best part

[13:35:15.0000] <Hixie>
zcorpan: yeah... hold on, let me look it up

[13:35:21.0000] <nimbu>
hober: i c

[13:35:23.0000] <nimbu>
ahahahahhahaha

[13:35:36.0000] <nimbu>
hober: omg whats happening next door?

[13:35:39.0000] <nimbu>
San Jose mob meeting?

[13:35:39.0000] <Hixie>
zcorpan: looks like i just pass the doc to http://www.w3.org/2009/07/webidl-check

[13:36:38.0000] <hober>
nimbu: i dunno; there literally is an adjacent room that was recently full of people laughing.

[13:37:16.0000] <nimbu>
hober: maybe they are laughing at YOUR room

[13:37:26.0000] <zcorpan>
Hixie: i get a 500 error for http://www.w3.org/2009/07/webidl-check?doc=https%3A%2F%2Fdvcs.w3.org%2Fhg%2Fcsswg%2Fraw-file%2Ftip%2Fcssom-view%2FOverview.html&output=html

[13:39:45.0000] <MikeSmith>
nimbu: the cannibas dispensaries are cheaper here

[13:39:57.0000] <nimbu>
LOLOLOL

[13:40:24.0000] <nimbu>
MikeSmith: this might become a breaking news on some slow-news day

[13:40:30.0000] <nimbu>
LUCKILY THIS IS NOT SLOW NEWS DAY

[13:40:38.0000] <MikeSmith>
heh

[13:44:44.0000] <cabanier1>
nimbu: there was a baby shower. lots of balloons, bad music and giggling

[13:53:11.0000] <nimbu>
cabanier1: D: D:

[13:53:18.0000] <nimbu>
TUNING IN FOR THE GOSSIP ON html-wg

[13:53:29.0000] <nimbu>
please alert me when something exciting happens

[13:57:28.0000] <MikeSmith>
nimbu: I'm about to raise a point of order about the chairs failing to include a slot for nap time on the agenda.

[13:58:07.0000] <hober>
MikeSmith: I thought that was the MSE session?

[13:58:20.0000] <sgalineau>
I was going to say

[13:58:27.0000] <sgalineau>
always assumed that's what this was for

[13:58:28.0000] <nimbu>
ahahahah

[13:58:32.0000] <nimbu>
MikeSmith: please do

[13:59:05.0000] <MikeSmith>
hober: I thought that was the part where we were all planning to walk out en masse

[13:59:09.0000] <nimbu>
can I recommend somebody play Get Lucky by Daft Punk loudly?

[13:59:19.0000] <Hixie>
zcorpan: looks like I also set input= ?

[13:59:31.0000] <Hixie>
zcorpan: as in, ...?doc=url&input=&output=text

[13:59:44.0000] <Hixie>
zcorpan: dunno if that is relevant

[14:00:14.0000] <MikeSmith>
oh wait I remember now the adjusted plan was that we start to have coughing fits and while we're coughing we go, *cough* *cough* bullshit *cough*

[14:00:14.0000] <zcorpan>
Hixie: still 500

[14:00:20.0000] <Hixie>
zcorpan: dunno then

[14:01:13.0000] <Hixie>
zcorpan: no https support maybe?

[14:01:27.0000] <Hixie>
/me is having trouble just resolving w3.org today, so...

[14:01:31.0000] <zcorpan>
maybe

[14:02:14.0000] <zcorpan>
yeah that seems to be it

[14:02:28.0000] <MikeSmith>
zcorpan: I'll ask about the https support

[14:31:11.0000] <paxcoder>
nimbu, don't like it

[14:34:20.0000] <nimbu>
paxcoder: ?

[14:35:54.0000] <paxcoder>
nimbu, get lucky

[14:38:15.0000] <nimbu>
paxcoder: ah

[14:38:18.0000] <nimbu>
its ok

[15:04:41.0000] <MikeSmith>
zcorpan: I was trying to find the source for http://www.w3.org/2009/07/webidl-check but couldn't yet

[15:04:49.0000] <MikeSmith>
I think dom is the one to ask

[15:05:01.0000] <MikeSmith>
maybe e-mail sysreq⊙wo

[15:08:22.0000] <zcorpan>
done

[15:20:57.0000] <MikeSmith>
Hixie: the code you had for switching the style of the HTML spec before, for hiding the impl parts, do you still have that code somewhere?

[15:25:11.0000] <Hixie>
wasn't it just an alternative style sheet?

[15:27:21.0000] <MikeSmith>
Hixie: yeah but you had an on-page UI for switching it. Remember?

[15:27:37.0000] <MikeSmith>
radio buttons

[15:28:03.0000] <Hixie>
oh

[15:28:04.0000] <Hixie>
dunno

[15:28:10.0000] <Hixie>
it was just a trivial thing

[15:28:19.0000] <Hixie>
few radio buttons, toggled which style sheet was enabled

[15:31:09.0000] <MikeSmith>
ok

[15:35:29.0000] <user>
What ever happened with this spec? There are a lot of awesome ideas but it seems abandonded and unimplemented.. http://www.w3.org/TR/css3-content/

[15:36:15.0000] <user>
That's mostly directed at Hixie, I guess

[15:38:35.0000] <Hixie>
i started working on HTML

[15:38:44.0000] <Hixie>
and ran out of bandwidth to work on css stuff

[15:39:01.0000] <Hixie>
i told the CSSWG I'd maybe get back to it in 2015-2018, iirc

[15:40:43.0000] <user>
Do you need help with it?  I've got a whole bunch of stuff going on that'd benefit *tremendously* from multiple ::before and ::after definitions :)

[15:41:51.0000] <astearns>
user: I picked up that particular part here: http://dev.w3.org/csswg/css-pseudo/

[15:42:02.0000] <astearns>
user: sending use cases to www-style might help

[15:42:46.0000] <user>
astearns: Thanks, that's exactly what I'm interested in

[15:43:55.0000] <Hixie>
user: i'm sure if you volunteer to edit specs the csswg would be happy to have you

[15:49:23.0000] <user>
Hixie: Maybe I'll even get a real username for that

[15:51:02.0000] <Hixie>
heh


2013-04-24
[17:20:31.0000] <esprehn>
Hixie: is there a reason http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#valid-mime-type mentions RFC2616 instead of RFC4288 which has the actual grammar in it?

[17:23:41.0000] <Hixie>
probably not

[17:24:09.0000] <esprehn>
okay, trying to understand the deal with mime types. Webkit tries to respect all the RFCs

[17:24:30.0000] <Hixie>
2616 seems to have actual gramar too...

[17:24:32.0000] <esprehn>
Gecko completely ignores everything, in fact any mime type with the substring "xml" is considered XML in Firefox :/

[17:25:13.0000] <Hixie>
where does 4288 define this?

[17:25:48.0000] <Hixie>
i don't see what i would reference in 4288

[17:25:53.0000] <esprehn>
Hixie: I don't see the grammar in 2616

[17:25:58.0000] <esprehn>
Hixie: http://tools.ietf.org/html/rfc4288#section-4.2

[17:25:59.0000] <Hixie>
it's in the section mentioned

[17:26:16.0000] <Hixie>
that doesn't define what the html spec needs

[17:26:18.0000] <esprehn>
Hixie: the section doesn't say what chars are actually allowed in the parts

[17:26:54.0000] <Hixie>
sure, it then references other stuff

[17:27:06.0000] <esprehn>
none of those seem to say either

[17:27:14.0000] <esprehn>
at least not clearly that I could find

[17:27:28.0000] <Hixie>
fwiw, i expect in the medium term we'll be dumping all these references are referencing a new spec or mimesniff or some such, or defining it inline

[17:27:59.0000] <Hixie>
the mime type specs aren't as much of a mess as other things, but they're still pretty messed up

[17:28:15.0000] <zewt>
gave me headaches with the blob mime type stuff recently

[17:28:24.0000] <Hixie>
esprehn: "token" in the HTTP spec is defined in 2.2

[17:28:36.0000] <Hixie>
esprehn: as "1*<any CHAR except CTLs or separators>"

[17:28:38.0000] <zewt>
(the whole "blob mime types shouldn't contain subtypes" thing, what an ugly mess)

[17:28:50.0000] <Hixie>
esprehn: which is the definition HTML is trying to use

[17:29:32.0000] <esprehn>
ah I see

[17:29:34.0000] <esprehn>
interesting

[17:30:01.0000] <esprehn>
4288 is a lot more clear, I see the token = and CHAR but not section now though

[17:30:19.0000] <Hixie>
4288 doesn't define this at all

[17:30:23.0000] <Hixie>
as far as i ca ntell

[17:30:34.0000] <Hixie>
it doesn't have a definition of media type as being type "/" subtype

[17:31:08.0000] <esprehn>
no, it specifies what type and subtype are

[17:31:12.0000] <zewt>
(the whole idea of "type/subtype" seems practically useless today, i just think of them as opaque strings)

[17:31:18.0000] <esprehn>
"Type and subtype names MUST conform to the following ABNF"

[17:31:43.0000] <Hixie>
esprehn: right but what the HTML spec needs is a definition of the format type / subtype ; parameter ; parameter

[17:31:55.0000] <esprehn>
right

[17:32:12.0000] <esprehn>
That's actually specified in a couple places

[17:32:20.0000] <esprehn>
to varying degrees of vagueness

[17:32:39.0000] <zewt>
ietf degrees

[17:33:44.0000] <Hixie>
esprehn: right

[17:33:50.0000] <Hixie>
esprehn: hence i picked one, rfc2616 :-)

[17:34:47.0000] <esprehn>
Hixie: should you be able to do things like DOMPaser.parseFromString(..., "text/html;charset=utf-8") ?

[17:36:12.0000] <esprehn>
oh I see parseFromString doesn't even really do mime types either

[17:36:13.0000] <esprehn>
http://domparsing.spec.whatwg.org/#dom-domparser-parsefromstring

[17:36:37.0000] <esprehn>
zewt: indeed they are opaue strings, marginally better than the guids that MS folks love so much

[17:37:18.0000] <zewt>
i'd say more than marginally (in that humans don't have to look them up every time), i'd just like the fiction of type/subtype to go away

[17:37:36.0000] <Hixie>
dunno, parseFromString isn't mine :-)

[17:37:52.0000] <esprehn>
I don't actually care about that, I just needed to know if the stuff for validating content types is correct in webkit

[17:37:54.0000] <Hixie>
the processing of mime types varies wildly from api endpoint to api endpoint

[17:38:09.0000] <Hixie>
i doubt that any single implementation can be consistently used in many places

[17:38:16.0000] <esprehn>
specifically XHR will only allow responseXML if we think it's XML or HTML

[17:38:17.0000] <Hixie>
the term in the html spec is mainly used for conformance checkers, not browsers

[17:38:35.0000] <Hixie>
ah well for XHR, see the XHR spec :-) xhr.spec.whatwg.org

[17:38:58.0000] <esprehn>
yes, it has an even more vague one that says effectively "any valid mime that ends in +xml"

[17:38:59.0000] <zewt>
i'd think it'd be simplest for responseXML to always work, as long as it's parsable (but no idea off-hand about security and webcompat concerns)

[17:39:51.0000] <Hixie>
esprehn: file a bug on anne :-)

[17:40:04.0000] <zewt>
do you have an :-) button

[17:40:13.0000] <Hixie>
esprehn: mimesniff.spec.whatwg.org is probably what we should link to

[17:40:13.0000] <esprehn>
Webkit matches the type/subtype against the grammar, Gecko you can return an XML file with hixie$$xml$$/webgl and you get responseXML since indexOf("xml") != -1

[17:40:18.0000] <Hixie>
esprehn: dunno if it defines it yet

[17:40:34.0000] <Hixie>
zewt: on my phone, yes. but on the laptop, i have to type them. :-(

[17:40:56.0000] <esprehn>
I wonder if IE actually checks the format of the mime

[17:42:10.0000] <Hixie>
bbl

[17:42:17.0000] <zewt>
seems particularly odd since i'd guess that there are tons of formats that use xml where responseXML would be useful for, but which have their own mime types (not that i have any examples off the top of my head)

[17:45:57.0000] <esprehn>
zewt: per the spec they should all be foo/foo+xml as the mime

[17:46:22.0000] <zewt>
but i don't know what the practical value of restricting the responseXML feature to that is

[17:46:51.0000] <zewt>
but i'm not up to speed on that stuff

[17:47:02.0000] <esprehn>
dunno, ask anne

[17:47:10.0000] <esprehn>
the spec requires checks for responseXML

[23:43:22.0000] <hsivonen>
hmm. how long does it usually take for an email to appear in the Web archive on lists.w3.org?

[23:47:19.0000] <SimonSapin1>
hsivonen: minutes, at most?

[23:50:51.0000] <hsivonen>
SimonSapin1: it's been 16 minutes now without my message appearing

[23:52:46.0000] <SimonSapin1>
Did you get it back from being subscribed to the list? (Usually appears in the archives before that, for me)

[23:52:46.0000] <SimonSapin1>
Did you get an email asking for permission to publish it in the archives? (If you’ve never written to that list before and not given permission for all W3C lists)

[23:53:53.0000] <hsivonen>
SimonSapin1: I don't get my own messages back in general. I didn't get a permission email.

[23:54:47.0000] <hsivonen>
or if I do get my own messages back, Gmail hides them

[23:58:11.0000] <SimonSapin1>
I think Gmail hides them, I get them in Thunderbird with a custom MTA

[00:05:34.0000] <hsivonen>
ok. it took 30 minutes for the message to appear

[01:35:14.0000] <hsivonen>
what's the context of the latest meme on w3cmemes? I thought EME already supported CDNs.

[02:28:55.0000] <annevk>
smaug____: Polyglot is wring HTML and XHTML at the same time meeting the constraints of both

[02:32:05.0000] <tobie>
annevk: looking at the URLQuery interface of the URL spec, how are querys of the form …?foo=123&bar handled by the JS API?

[02:33:00.0000] <tobie>
annevk: more specifically: how do  you set "bar" in the above example?

[02:34:08.0000] <tobie>
s/set/set or append/

[02:34:55.0000] <annevk>
tobie: using set or append

[02:35:19.0000] <tobie>
annevk: what would you set the value to?

[02:35:27.0000] <tobie>
the empty string?

[02:35:30.0000] <tobie>
true?

[02:35:41.0000] <tobie>
not specify a value?

[02:35:52.0000] <annevk>
tobie: you'll get bar=

[02:36:13.0000] <annevk>
tobie: per IDL it ToString's the value

[02:36:18.0000] <annevk>
tobie: so empty string

[02:36:40.0000] <tobie>
what if what you want is ?foo=123&bar and not ?foo=123&bar=

[02:36:58.0000] <annevk>
you wouldn't use this API

[02:37:12.0000] <zcorpan>
should getDefaultComputedStyle apply presentational hints or not?

[02:37:27.0000] <annevk>
zcorpan: what does getDefault mean?

[02:37:34.0000] <tobie>
isn't that a serious shortcoming?

[02:37:55.0000] <zcorpan>
annevk: like getComputedStyle but without author styles (and always computed style instead of resolved style)

[02:38:02.0000] <annevk>
tobie: it matches what you can do with <form>

[02:38:23.0000] <tobie>
annevk: oh really?

[02:38:33.0000] <annevk>
tobie: the underlying format is shared

[02:39:03.0000] <annevk>
tobie: it's basically an API for application/x-www-form-urlencoded

[02:39:05.0000] <SimonSapin>
zcorpan: Re http://www.w3.org/Style/CSS/Tracker/issues/316 , the question is whether we should just remove the quirk or make it standard. The latter (#1hash is a valid ID selector) simplifies both specs and implementations.

[02:39:13.0000] <tobie>
aren't radio buttons and checkboxes sent as : bar rather than bar=?

[02:39:31.0000] <zcorpan>
SimonSapin: right. i'm saying we should remove the quirk.

[02:39:43.0000] <zcorpan>
SimonSapin: it's just IE that needs to change

[02:40:16.0000] <zcorpan>
SimonSapin: how does HASH simplify anything?

[02:40:22.0000] <SimonSapin>
and preserve the current standard behavior, ie. restrict ID selectors to #<ident>? Why?

[02:40:46.0000] <zcorpan>
SimonSapin: because it's what gecko/webkit/blink do in all their rendering modes

[02:40:48.0000] <annevk>
tobie: 'If the field element has a value attribute specified, then let value be the value of that attribute; otherwise, let value be the string "on".'

[02:40:49.0000] <zcorpan>
SimonSapin: why change?

[02:41:30.0000] <tobie>
annevk: darn it's been a while. Thanks for the clarification.

[02:41:32.0000] <SimonSapin>
with the restriction, the tokenizer needs a special case to detect #1hash vs. #\31hash, and a flag on hash tokens

[02:41:53.0000] <SimonSapin>
also, apparently HTML now allows id="1hash", and consistency is nice

[02:42:28.0000] <zcorpan>
SimonSapin: IDENT is used in other places than ID selectors, no?

[02:43:27.0000] <SimonSapin>
yes any keyword, but as a IDENT token, not a HASH token with the "id" flag

[02:43:28.0000] <zcorpan>
SimonSapin: HTML allows non-HASH IDs, too, so you're still not consistent

[02:44:55.0000] <zcorpan>
i'm not following

[02:45:05.0000] <SimonSapin>
That’s the definition for @id, right? http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#the-id-attribute

[02:46:00.0000] <SimonSapin>
I was replying to "IDENT is used in other places than ID selectors, no?", but I’m not sure where you were going with this

[02:46:07.0000] <annevk>
zcorpan: so you're gonna expose the underdocumented user agent styles even more prominently?

[02:46:28.0000] <annevk>
maybe it'll help getting them aligned

[02:46:47.0000] <zcorpan>
SimonSapin: you said it would simplify the tokenizer

[02:49:54.0000] <zcorpan>
ok i see how it could simplify the tokenizer

[02:50:00.0000] <SimonSapin>
Yes. In the tokenizer, all of #ident #1hash and #\31hash are HASH tokens. Selectors say that ID selectors are '#' + IDENT, but it’s not tokenized that way. In particular, #1hash and #\31hash have the same parsed value but only the latter is a valid ID selectors.

[02:50:00.0000] <SimonSapin>
So we need to add a flag to HASH token, saying whether it had valid identifier syntax before un-escaping, and add behavior in the tokenizer to set that flag

[02:50:37.0000] <SimonSapin>
http://dev.w3.org/csswg/css-syntax/#hash-state

[02:51:44.0000] <SimonSapin>
It’s not terrible, but I find it a bit silly.

[02:51:48.0000] <zcorpan>
right

[02:52:02.0000] <SimonSapin>
(#1FF still has to be a valid HASH in case it’s a color)

[02:52:46.0000] <zcorpan>
we have interop in standards mode, and only one browser engine that is still maintained does it in quirks mode

[02:53:00.0000] <zcorpan>
the web compat impact of changing this in standards mode is not known

[02:53:38.0000] <SimonSapin>
Yes, we could just keep the current standard behavior. That’s least risky.

[02:53:59.0000] <SimonSapin>
But it’s also nice that authors don’t need to escape IDs that start with a digit, although it’s minor

[02:54:20.0000] <SimonSapin>
maybe it’s not worth spending so much time on this whole thing

[02:54:56.0000] <zcorpan>
being nice for authors is a valid argument though i don't remember seeing that argument being made until now :-)

[02:55:15.0000] <SimonSapin>
It’s hidden under consistency with HTML

[02:55:38.0000] <zcorpan>
HTML allows id="#"

[02:56:02.0000] <zcorpan>
and id="{};"

[02:56:13.0000] <SimonSapin>
which would need to be escaped in CSS: #\#, #\{\}

[02:56:38.0000] <zcorpan>
yes. so what's the difference between that and id="1"?

[02:57:00.0000] <SimonSapin>
digits are especially annoying to escape: \1 is U+0001, you have to use \31 for U+0031

[02:57:11.0000] <SimonSapin>
a-f never need escaping

[02:59:44.0000] <SimonSapin>
but classes would still need to be escaped: class="1" → .\31

[03:00:20.0000] <annevk>
tobie: btw, if you can collect feedback on desired URL comparison capabilities somehow that'd be awesome

[03:00:29.0000] <annevk>
tobie: (somewhat unrelated)

[03:01:38.0000] <tobie>
annevk: one thing I've had to do in the past was to check whether two urls were of the same origin

[03:02:04.0000] <annevk>
tobie: url.origin == url.origin will cover that

[03:02:23.0000] <tobie>
annevk: awesome.

[03:03:11.0000] <annevk>
things I've been thinking about: ignoring hash, ignoring hash and query/search, ignoring order in query/search, ignoring the trailing host dot

[03:03:16.0000] <tobie>
(had missed the origin property while skimming over the spec)

[03:03:49.0000] <tobie>
annevk: do you have an API in mind for this?

[03:04:11.0000] <tobie>
Just trying to have a better understanding of what you're looking at.

[03:08:10.0000] <zcorpan>
SimonSapin: consistency with classes seems important

[03:09:44.0000] <SimonSapin>
classes are tokenizer as DELIM(.) + IDENT. I guess we could add a token, but I don’t know if it’s worth it

[03:12:23.0000] <annevk>
tobie: something like url.isEqual(url/string, options)

[03:12:36.0000] <zcorpan>
classes would be even more silly that what we have with id selectors if we want to support starting with a number for both

[03:13:12.0000] <annevk>
tobie: I also kinda want url == url2 to work, but that would require it either becoming a native JS object, or overloading of == which does not exist yet

[03:13:19.0000] <SimonSapin>
that would mean a new token I suppose

[03:14:11.0000] <zcorpan>
except .1 still needs to be a NUMBER in other places

[03:14:16.0000] <asmodai>
The Unity guys also dropping Flash, even more focus on HTML/WebGL: http://blogs.unity3d.com/2013/04/23/sunsetting-flash/

[03:14:22.0000] <tobie>
annevk: that would be cool.

[03:15:12.0000] <annevk>
C++ is getting URLs as a first-class citizen reportedly

[03:15:31.0000] <SimonSapin>
oh, yeah, a class token won’t work. .1 is a number, and .1foo is a dimension

[03:15:34.0000] <annevk>
(leaving the implementation of URLs undefined)

[03:20:36.0000] <tobie>
annevk: C++ has a lot of first-class citizens

[03:21:27.0000] <annevk>
tobie: but if we had operator overloading it wouldn't really matter if it was first-class or not I think

[03:21:33.0000] <annevk>
then everything is first-class

[03:21:56.0000] <tobie>
annevk: indeed.

[03:22:13.0000] <tobie>
Is operator overloading on the ES timeline?

[03:22:36.0000] <annevk>
my backchannel tells me ES7-8

[03:23:59.0000] <tobie>
heh

[03:25:18.0000] <tobie>
I'm not looking forward to the amount of abuse operator overloading will create at first.

[03:25:47.0000] <zcorpan>
SimonSapin: (1.4% of all id="" attributes in http://webdevdata.org/ dec2012 start with a number)

[03:27:43.0000] <SimonSapin>
zcorpan: do you that kind of data for stylesheets? More important are invalid selectors that would break a page when they become valid

[03:28:35.0000] <zcorpan>
SimonSapin: webdevdata doesn't include external style sheets so it's a bit limited

[03:29:06.0000] <zcorpan>
SimonSapin: but if you can come up with a regexp that matches selectors you're interested in i can run it

[03:35:11.0000] <SimonSapin>
# is not special in regexps, is it? Try #[0-9][0-9a-zA-Z]*[g-zG-Z] , ie. a HASH token that starts with a digit but is not a hex color

[03:35:33.0000] <SimonSapin>
Also try #- although I suspect it’s be much less frequent

[03:35:36.0000] <zcorpan>
SimonSapin: the problem is not matching things that are not selectors in arbitrary HTML documents

[03:35:45.0000] <zcorpan>
including color:#123

[03:36:12.0000] <zcorpan>
now trying: grep -aEi "<style(\d[^>]+)?>[^<\{]+([^<\{]+{[^<\{\}]+}[^<\{]*)*#\d"

[03:36:28.0000] <SimonSapin>
uh

[03:37:08.0000] <SimonSapin>
why \d in <style(\d[^>]+)?> ?

[03:37:48.0000] <zcorpan>
oops

[03:38:27.0000] <zcorpan>
meant \s

[03:39:19.0000] <zcorpan>
body #2degrees-click:hover {cursor:pointer;cursor:hand;}

[03:43:04.0000] <SimonSapin>
I think the consistency with classes is the strongest argument

[03:43:33.0000] <SimonSapin>
(Which is not that strong, but more so than anything else in this discussion.)

[03:45:17.0000] <zcorpan>
yeah

[03:45:42.0000] <zcorpan>
huh, i get a few results of the grep that don't even contain "<style"

[03:46:36.0000] <zcorpan>
anyway, assuming i didn't mess up the regexp, the above instance was the only id selector starting with a digit in the data set

[03:48:43.0000] <zcorpan>
which is http://www.3news.co.nz/

[04:29:25.0000] <zcorpan>
http://www.w3.org/mid/50786331.6080905⊙me - what are override style sheets?

[04:30:01.0000] <gsnedders>
zcorpan: User stylesheets, no?

[04:30:37.0000] <zcorpan>
no (user style sheets was addressed later in the thread)

[04:30:48.0000] <gsnedders>
Then idk

[04:31:16.0000] <SimonSapin>
zcorpan: I’m not sure, but css-cascade refers to this: http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/css.html#CSS-OverrideAndComputed

[04:32:57.0000] <annevk>
zcorpan: SVG uses those I think for animations

[04:33:17.0000] <annevk>
zcorpan: the DOM had an API for that once too but it never got implemented

[04:48:58.0000] <zcorpan>
ok thanks

[05:14:52.0000] <zcorpan>
TabAtkins: was there a conclusion for this thread? http://www.w3.org/mid/CAAWBYDA2o-k+Jwd8wbEsuAFbHxubrPTjRt6gaaHZGOi4vkNRVQ⊙mgc

[05:27:46.0000] <zcorpan>
https://plus.google.com/100132233764003563318/posts/hqHFwvZhbDS

[05:29:04.0000] <hsivonen>
zcorpan: why a new tag instead of a facility to make <iframe> disconnect JS from parent?

[05:29:16.0000] <zcorpan>
don't ask me

[05:33:11.0000] <zcorpan>
there's also <webview>, apparently

[05:34:03.0000] <hsivonen>
zcorpan: the Firefox OS equivalent to <webview> is an attribute on <iframe>

[05:34:34.0000] <zcorpan>
hsivonen: does the attribute do anything for normal web pages?

[05:35:06.0000] <hsivonen>
zcorpan: Dunno. probably not.

[05:36:20.0000] <zcorpan>
hsivonen: what is the attribute called?

[05:38:26.0000] <MikeSmith>
mozbrowser?

[05:39:11.0000] <zcorpan>
https://developer.mozilla.org/en-US/docs/HTML/Element/iframe lists mozapp and mozbrowser

[05:54:08.0000] <annevk>
hsivonen: we regard the attribute as a mistake though

[05:54:41.0000] <mounir>
zcorpan: the attribute is ignored for normal web pages

[05:54:42.0000] <jgraham>
/me wonders who "we" is in this case

[05:55:17.0000] <annevk>
jgraham: implementer

[05:55:56.0000] <gsnedders>
jgraham: Ergh, getting pull requests on code that will conflict with all the flake changes. Yay. :|

[05:56:29.0000] <jgraham>
gsnedders: YEah, I need to finish your review :p

[05:56:59.0000] <gsnedders>
(I just rejected the pull request because it made us fail tests. :P)

[05:57:35.0000] <jgraham>
I saw

[06:01:30.0000] <zcorpan>
annevk: what should be used instead?

[06:01:54.0000] <zcorpan>
annevk: oh i see

[06:02:20.0000] <zcorpan>
annevk: you mean the attribute should work for normal web pages, too?

[06:04:45.0000] <zcorpan>
TabAtkins: why are custom properties case sensitive?

[06:05:12.0000] <annevk>
zcorpan: no, from what I read it would've been better as an element

[06:05:24.0000] <annevk>
zcorpan: makes an easier boundary

[06:06:07.0000] <zcorpan>
annevk: i don't follow

[06:06:24.0000] <mounir>
our goal is to move to something like <webview>

[06:08:35.0000] <SimonSapin>
zcorpan: the general principle is that author-defined stuff is case-sensitive: http://dev.w3.org/csswg/css-values/#custom-idents

[06:12:28.0000] <annevk>
Future.resolve(value) would be equal to Future.any(value)... I guess that's okay.

[06:32:46.0000] <zcorpan>
annevk: am i missing something or can i just say that getPropertyValue() must "serialize a CSS value" for the given property? https://dvcs.w3.org/hg/csswg/raw-file/tip/cssom/Overview.html#widl-CSSStyleDeclaration-getPropertyValue-DOMString-DOMString-property https://dvcs.w3.org/hg/csswg/raw-file/tip/cssom/Overview.html#serializing-css-values

[06:35:15.0000] <annevk>
zcorpan: wouldn't that include !important?

[06:35:37.0000] <annevk>
zcorpan: it wasn't entirely clear whether !important should be there or not iirc

[06:35:45.0000] <annevk>
not sure what the other issues were

[06:36:03.0000] <annevk>
I wonder if I kept track of them somehow

[06:37:22.0000] <zcorpan>
"serialize a CSS component value" doesn't have an entry for !important

[06:37:26.0000] <annevk>
zcorpan: ah yeah, and then there's the thing with style.color being defined in terms of getPropertyValue, but actually potentially returning different values

[06:38:20.0000] <annevk>
I guess the latter does need to return !important but getPropertyValue doesn't or some such

[06:38:34.0000] <annevk>
overall though that API is broken and not a good time

[06:40:14.0000] <zcorpan>
!important doesn't seem to be returned by style.color

[06:41:32.0000] <annevk>
oh okay, so maybe it's all somewhat saner than my recollection :)

[06:42:07.0000] <zcorpan>
maybe :-) thanks

[06:52:45.0000] <zcorpan>
any opinion on null vs empty string for unknown properties?

[06:53:10.0000] <zcorpan>
chrome returns null, opera/firefox ""

[06:54:27.0000] <zcorpan>
ie10 ""

[07:09:54.0000] <annevk>
Hixie: I saw you introduced some nice terminology for worker-related stuff

[07:10:38.0000] <annevk>
Hixie: I'm thinking of sprinkling that around to XMLHttpRequest & friends, URL, FormData, Event?, Future

[07:10:46.0000] <annevk>
Hixie: is there anything I should be aware of?

[07:11:34.0000] <zcorpan>
annevk: he said in the relevant bug that he might tweak it some more

[07:13:08.0000] <annevk>
I know

[07:13:35.0000] <annevk>
hence the impatient IRC questions

[07:23:45.0000] <hsivonen>
annevk, mounir: ok. moving to something like <webview> is news to me

[08:25:58.0000] <marcosc>
tobie: how often are new released of Respec shipped?

[08:58:05.0000] <mounir>
hsivonen: that is not a long planned thing though

[09:09:40.0000] <dglazkov>
good morning, Whatwg!

[09:37:32.0000] <jgraham>
gsnedders: It depends on fullTree=False, right? Which isn't really an internal API

[09:41:49.0000] <tobie>
marcosc: I usually bug darobin for this.

[09:42:07.0000] <tobie>
iirc, he sent me a list of instructions on how to do a release.

[09:42:14.0000] <tobie>
Will look for the,

[09:42:26.0000] <tobie>
s/the,/them/

[10:01:20.0000] <Ms2ger>
Fwiw, it's not clear if <iframe mozbrowser> will stay

[10:01:53.0000] <Ms2ger>
Oh look, people said that

[10:02:22.0000] <gsnedders>
jgraham: Regardless, the existing code was broken. :P

[10:07:32.0000] <annevk>
dglazkov: lets discuss it in the week of May 6

[10:07:40.0000] <annevk>
dglazkov: I'm not at this TPAC thing you speak of

[10:07:52.0000] <annevk>
dglazkov: well, at least not one that's running this week

[10:18:55.0000] <gsnedders>
jgraham: Okay, if you're using a non-standard etree API which allows access to parents then it can leak. But that's it, I believe.

[10:19:28.0000] <gsnedders>
jgraham: (The existing code is totally b0rked because it tries to use JS scoping rules in PYthon.)

[10:22:29.0000] <jgraham>
gsnedders: What am I missing? You can call getEtreeBuilder with fullTree=True

[10:22:36.0000] <jgraham>
And then you get that node out

[10:23:02.0000] <gsnedders>
jgraham: But then html5lib.parseFragment cuts it off, no?

[10:26:42.0000] <jgraham>
If you call parseFragment you can't set fullTree, so I don't see how that's relevant

[10:27:16.0000] <gsnedders>
I dunno, and I have doomexam tomorrow, so I'm not looking at it.

[10:27:36.0000] <jgraham>
You can do something like builder = getTreeBuilder("etree", fullTree=True)

[10:28:09.0000] <jgraham>
HTML5Parser(builder)

[10:28:22.0000] <jgraham>
.parseFragment

[10:28:35.0000] <jgraham>
Well if you have an exam, why are you here chatting?

[10:29:19.0000] <jgraham>
(I think the only real fix I want is the error to be something better. I don't see the point of going out of our way to support an edge case)

[10:35:25.0000] <TabAtkins>
zcorpan: Custom properties are case-sensitive because they can contain arbitrary unicode, and we didn't want either (a) unicode case-insensitive matching, nor (b) ascii-case-insensitive matching mixed with non-ascii literal matching.

[10:35:42.0000] <TabAtkins>
zcorpan: Only way around that was to just say that it's entirely case-sensitive.

[10:36:19.0000] <TabAtkins>
zcorpan: Also, what SimonSapin said - author-defined stuff is generally case-sensitive (for the reasons I gave, though).

[10:37:34.0000] <SimonSapin>
TabAtkins: by, the way, css-counter-styles is a bit weird regarding this

[10:38:00.0000] <SimonSapin>
"Counter style names are case-sensitive. 	However, the names defined in this specification are ASCII lower-cased on parse 	wherever they are used as counter styles, e.g. 	in the list-style set of properties, 	in the @counter-style rule, 	and in the counter() functions."

[10:38:00.0000] <SimonSapin>
The two sentences seem contradictory

[10:39:29.0000] <SimonSapin>
But I got it later: "the names defined in this specification" shoud be "the name of pre-defined counter styles", with links to section 5 and 6

[10:39:55.0000] <SimonSapin>
(Which, by the way, is a bit annoying to implement but meh.)

[10:49:24.0000] <TabAtkins>
SimonSapin: Yes, the names defined *in* this spec.  ^_^

[10:49:44.0000] <TabAtkins>
SimonSapin: And I'm sure it's annoying to implement, but that's what you get when you invade an existing namespace.

[10:50:46.0000] <SimonSapin>
yeah, the implementation is manageable

[10:51:04.0000] <TabAtkins>
By "you invade" I of course mean "I invade".

[10:51:20.0000] <SimonSapin>
But I’m still having a hard time with "names defined in this spec".

[10:51:35.0000] <TabAtkins>
Hm?

[10:51:38.0000] <SimonSapin>
like, <counter-style-name> is defined in this spec

[10:51:53.0000] <TabAtkins>
?_?

[10:52:17.0000] <TabAtkins>
(?_? is the best emoji, by the way.  The question marks look like raised eyebrows!)

[10:52:42.0000] <SimonSapin>
It took me a long time to understand that this means just the names of predefined styles, not all counter style names

[10:53:08.0000] <TabAtkins>
Should I change it to "the names of counter styles defined in this specification"?

[10:53:11.0000] <SimonSapin>
I’d like the spec to clarify, by saying something like "the name of predefined styles"

[10:54:28.0000] <SimonSapin>
"predefined" indicates "these particular instances" rather than "the general concept of counter styles"

[10:54:46.0000] <TabAtkins>
Works for me.

[11:01:56.0000] <annevk>
can't you spell it out in the parser?

[11:02:08.0000] <TabAtkins>
annevk: In what parser?

[11:02:15.0000] <annevk>
the value parser I guess

[11:02:22.0000] <TabAtkins>
Not really, no.

[11:02:30.0000] <TabAtkins>
Or rather, not without a lot of difficulty.

[11:02:35.0000] <TabAtkins>
Given the context-sensitivity.

[11:02:45.0000] <annevk>
don't you have a value parser per property?

[11:02:59.0000] <SimonSapin>
annevk: spell what out?

[11:03:07.0000] <TabAtkins>
We have *grammars* per property, which verify that the parsed value is correct per the property's grammar.

[11:03:18.0000] <annevk>
hmm

[11:03:26.0000] <TabAtkins>
Actual parsing is taken care of by a generic error-handling parser, which doesn't care about the individual property grammars.

[11:03:44.0000] <TabAtkins>
(Otherwise we'd have to amend the parser every time we add a new property or value.)

[11:14:40.0000] <marcosc>
tobie: thanks for the info

[12:14:34.0000] <reyre_pc>
in regards to WEBVTT -- is there a way that users can add cuetext via java script?

[12:14:49.0000] <reyre_pc>
we see currently that they can add and create TextTrackCues via javascript

[12:28:20.0000] <reyre_pc>
nvm all, i think we've solved the question

[12:45:32.0000] <zcorpan>
reyre_pc: you mean modify the text of an existing cue?

[12:46:14.0000] <reyre_pc>
zcorpan: yeah that's what we realized

[12:46:26.0000] <zcorpan>
ok. so cue.text :-)

[12:46:39.0000] <reyre_pc>
zcorpan: if a cue's cue text is modified via script is there a way to detect that it happened

[12:46:48.0000] <zcorpan>
ho

[12:46:50.0000] <zcorpan>
oh, even

[12:46:58.0000] <reyre_pc>
i know there are events for adding and removing cues to a text track

[12:47:10.0000] <reyre_pc>
but haven't seen any for cuetext changing

[12:50:02.0000] <zcorpan>
there's no event for that afaict

[12:50:13.0000] <zcorpan>
what's the use case?

[12:54:32.0000] <zcorpan>
Hixie: does the webvtt spec need to be updated to say to run "time marches on" when .text, .align, etc, are set?

[12:54:35.0000] <reyre_pc>
zcorpan: a user changes a cues cuetext. we want to use lazy loading so we'd like a way to know that the cue's cuetext has changed

[12:55:39.0000] <zcorpan>
reyre_pc: how does the user change cuetext? do you need to know internally or want to expose to scripts on the page?

[12:56:01.0000] <reyre_pc>
well as far as we understand you can grab cues from the dom via their identifiers in javascript

[12:56:22.0000] <zcorpan>
yes or just iterate through them

[12:56:24.0000] <reyre_pc>
then you can set that TextTrackCues 'text' member

[12:56:35.0000] <reyre_pc>
changing the cuetext

[12:56:55.0000] <zcorpan>
by user you mean author (the web developer), not the end-user?

[12:57:30.0000] <reyre_pc>
well, whoever wants to use java script to manipulate cues on a webpage

[12:58:04.0000] <reyre_pc>
we'd like to know internally so we can know when to re-parse the cuetext

[13:02:08.0000] <zcorpan>
ok. i guess you need to have an internal listener for changes to the .text attribute or so. how to do that is an implementation detail

[13:02:15.0000] <rillian>
reyre: I didn't think of cue.text ouch

[13:02:25.0000] <rillian>
/me bets that's broken everywhere

[13:02:44.0000] <reyre>
zcorpan: okay thanks for clarifying :)

[13:02:53.0000] <reyre>
rillian: oh noe

[13:02:59.0000] <zcorpan>
i think the webvtt spec needs to say to run the "time marches on" steps when .text et al are set

[13:03:35.0000] <zcorpan>
like e.g. http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#dom-texttrackcue-starttime does

[13:05:21.0000] <reyre>
zcorpan: makes sense

[13:08:28.0000] <zcorpan>
oh wait that's covered already, fixed in http://html5.org/tools/web-apps-tracker?from=7429&to=7430

[13:09:26.0000] <zcorpan>
end of http://dev.w3.org/html5/webvtt/#data-model

[13:11:08.0000] <reyre>
zcorpan: okay, saw that one before but was unsure about it

[13:11:32.0000] <reyre>
thanks :)

[13:11:51.0000] <zcorpan>
np

[13:15:00.0000] <TabAtkins>
Where's the best version of WebVTT to link to?

[13:15:30.0000] <manu-db>
Provided without comment: What's wrong with DRM in HTML5: http://yro.slashdot.org/story/13/04/24/209234/whats-actually-wrong-with-drm-in-html5

[13:19:05.0000] <rillian>
TabAtkins: http://dev.w3.org/html5/webvtt/ was the last place Silvia mentioned updating

[13:19:47.0000] <rillian>
that's not a frozen publication though

[13:20:17.0000] <TabAtkins>
rillian: Not a concern.

[13:20:35.0000] <TabAtkins>
rillian: I just need somewhere to point to as an example of the time-based selectors.

[13:39:29.0000] <MikeSmith>
TIL I learned in the HTML WG f2f that we don't actually need to do testing any more to determine interoperability

[13:39:36.0000] <MikeSmith>
we just get to decide

[13:39:49.0000] <MikeSmith>
spread the word

[13:41:50.0000] <TabAtkins>
Yay!

[13:46:31.0000] <cabanier1>
http://t.co/HA2sgpjs3z

[13:48:32.0000] <zcorpan>
TabAtkins: should the spec say something differently for presentational hints?

[13:50:15.0000] <TabAtkins>
cabanier1: Please pre-resolve your t.co links before posting.  ^_^ http://w3cmemes.tumblr.com/post/48714963874/we-dont-need-a-comprehensive-test-suite-to-exit

[13:50:34.0000] <TabAtkins>
zcorpan: Lemme check, I didn't actually look at the text.

[13:50:57.0000] <zcorpan>
TabAtkins: do you have an example of UA-level preshint?

[13:51:19.0000] <TabAtkins>
zcorpan: Anything in the UA stylesheet.  For example, the styling of <i> is, technically, a preshint.

[13:51:41.0000] <TabAtkins>
Difference is just whether we arbitrarily decide it's a "user-agent default" or an "author choice".

[13:51:49.0000] <zcorpan>
TabAtkins: oh. i thought that wasn't called preshint

[13:52:03.0000] <TabAtkins>
Meh, depends on where you're looking perhaps.

[13:52:10.0000] <TabAtkins>
In casual conversation it has been called such, at least.

[13:52:35.0000] <TabAtkins>
Where is the function actually defined?

[13:52:51.0000] <zcorpan>
https://dvcs.w3.org/hg/csswg/raw-file/tip/cssom/Overview.html#widl-Window-getDefaultComputedStyle-CSSStyleDeclaration-Element-elt-DOMString-pseudoElt

[13:55:17.0000] <TabAtkins>
Nope, spec's fine, since all of those things are qualified with "author-level".

[13:56:13.0000] <TabAtkins>
zcorpan: The issue on serializing <number> can go away, since we allow scinot in numbers now.

[13:56:26.0000] <TabAtkins>
zcorpan: And I don't understand the issue in <length>.

[13:56:39.0000] <zcorpan>
author-level was only intended to apply to "author-level style rules"

[13:57:15.0000] <TabAtkins>
zcorpan: In that case, move it to further down in the list.  Leading adjectives normally distribute over lists.

[13:59:32.0000] <TabAtkins>
But if you qualify "preshints" with "author-level", it's completely correct and non-ambiguous.

[14:06:49.0000] <zcorpan>
ok fixed

[14:08:13.0000] <TabAtkins>
zcorpan: Looks good!

[14:08:22.0000] <zcorpan>
thanks

[14:12:26.0000] <GPHemsley>
Are there UAs on board with implementing DRM? (If this question opens a can of worms, ignore it.)

[14:14:39.0000] <TabAtkins>
Sigh, yes.  IE, Chrome, and Safari are all doing it, I believe.

[14:14:42.0000] <TabAtkins>
Firefox is the holdout.

[14:14:46.0000] <TabAtkins>
For now.

[14:15:39.0000] <GPHemsley>
Ah, so, same as it ever was.

[14:18:22.0000] <TabAtkins>
zcorpan: Btw, no conclusion on the constructable stylesheets thread.  We're not to the point of needing to decide on it yet, so feel free to ignore it.  We'll poke if it comes up again.

[14:18:40.0000] <TabAtkins>
(Not to say that I wouldn't mind more constructable things, but I don't have a use-case for them right now.)

[14:18:41.0000] <zcorpan>
TabAtkins: ok thanks

[14:20:21.0000] <zcorpan>
/me marks that thread as read

[14:26:54.0000] <zcorpan>
annevk: https://github.com/whatwg/url/commit/1d866b441eef031481bffaa0df9f43630e6fe62e - it's not just when setting .href to something that doesn't resolve, it's setting it to any value

[14:31:40.0000] <MikeSmith>
HTML WG f2f update; current status: suffering fools unlightly

[14:32:54.0000] <hober>
MikeSmith: .

[14:34:23.0000] <jgraham>
I thought one suffered fools gladly

[14:34:32.0000] <jgraham>
How do you do it (un)lightly?

[14:34:50.0000] <jgraham>
And is that the same as suffering them heavily?

[14:35:10.0000] <jgraham>
I sort of imagine that you are all starting to sound like Neil from The Young Ones

[14:44:06.0000] <dlongley>
TabAtkins: when calling a function that returns a Future, if that function should throw an exception when too few arguments are passed, should it be done via throw via the resolver's reject mechanism?

[14:45:12.0000] <dlongley>
when using w3c's idl test harness for WebIDL implementations, functions that return a Future are expected to throw TypeErrors if the number of arguments given is insufficient ...

[14:45:41.0000] <dlongley>
but this is problematic if you're wrapping something that uses a callback style API -- as the error will not be returned (via the callback) until the Future has actually been resolved (rejected)

[14:46:28.0000] <dlongley>
i'm hoping that you agree that this is a bug with the idl test harness ... and that if a function returns a future it should be checking that Future for a rejection, rather than looking for exceptions thrown in the method that generates the Future.

[14:46:58.0000] <dlongley>
anyone else in here know anything about DOM Futures?

[15:27:53.0000] <TabAtkins>
dlongley: Just plain throwing is the same thing as calling reject.

[15:37:49.0000] <TabAtkins>
annevk: Does "url" imply hierarchical?  Context is us defining the :local-link pseudoclass - need a term for something with hierarchy, such that we can match urls against a subset of the url.

[15:40:35.0000] <Hixie>
no; data: URLs have no hierarchy, but are still URLs

[15:40:49.0000] <Hixie>
the url spec has a concept of "relative scheme"

[15:40:53.0000] <Hixie>
which may be what you want

[15:41:37.0000] <Hixie>
(you probably just want a url that resolves to a parsed url with a relative scheme, and that has the same scheme, host, and port as the reference url)

[15:51:21.0000] <TabAtkins>
No, not relative scheme.

[15:51:42.0000] <TabAtkins>
:local-link(n) matches urls who match the document's url up to the first n segments.

[15:51:43.0000] <Hixie>
did i get the name wrong?

[15:51:49.0000] <Hixie>
oh

[15:51:51.0000] <Hixie>
segment?

[15:52:04.0000] <TabAtkins>
Yes, url segments.  Defined in the url spec.

[15:52:20.0000] <TabAtkins>
The parts of scheme data in between /s and ?.

[15:52:28.0000] <Hixie>
oh, wow, i had no idea the url spec actually went to the level of detail of path segments

[15:52:31.0000] <Hixie>
cool

[15:52:59.0000] <TabAtkins>
Now I just need it to go into a little bit more details, so I can ref it instead of just assuming that people will get what I mean when I say "if the url is hierarchical".  ^_^

[15:53:27.0000] <TabAtkins>
annevk: Please add the concept of "hierarchical URL" to the URL spec, so I can ref it from the Selectors definition of :local-link().

[15:55:20.0000] <Hixie>
i don't understand what you mean by hierarchical URL if you don't mean "has a relative scheme", btw

[15:58:10.0000] <TabAtkins>
Hixie: Scheme-relative just refers to a url without a specified scheme (so when it absolutized, it takes its scheme from the document).  It has nothing to do with hierarchy, I think.

[15:58:32.0000] <Hixie>
not "Scheme-relative", "relative scheme"

[15:59:06.0000] <Hixie>
(anne graduated from my school of confusing naming, i think :-) )

[15:59:09.0000] <TabAtkins>
I don't know what that means, because it doesn't have a real definition, just a pointer to a table.

[16:00:01.0000] <Hixie>
if i'm not mistaken, the parser treats urls with "relative schemes" differently than those without

[16:00:48.0000] <Hixie>
namely, it parses a path out only if it's relative, i think

[16:00:50.0000] <TabAtkins>
Maybe, but if so, Anne has left that detail encoded in the parser, rather than stating it directly.  ^_^

[16:01:20.0000] <TabAtkins>
I'd still prefer a "hierarchical url" term to refer to, rather than having to say "a url with a relative scheme".

[16:02:21.0000] <Hixie>
no argument from me there

[16:12:20.0000] <zcorpan>
TabAtkins: http://quirks.spec.whatwg.org/#the-hashless-hex-color-quirk

[16:29:59.0000] <Hixie>
cabanier1: yt?

[16:50:45.0000] <TabAtkins>
tantek: Why did you recommend using rel=discussion?  It's not yet registered in the Microformats wiki.

[16:53:44.0000] <TabAtkins>
zcorpan: Looks good to em.

[16:57:00.0000] <TabAtkins>
zcorpan: What's the meaning of the plain <span>s in the markup?  It looks like they should be <i> (for a technical term) and/or links.

[16:57:19.0000] <fantasai>
http://www.whatwg.org/specs/web-apps/current-work/multipage/text-level-semantics.html#the-i-element


2013-04-25
[18:25:51.0000] <dlongley>
TabAtkins: throwing and calling reject aren't exactly the same -- particularly not in that scenario

[18:25:57.0000] <dlongley>
the error happens at a different time

[18:28:46.0000] <dlongley>
the difference is in whether or not the future is actually invoked (via then/done)

[18:29:08.0000] <dlongley>
try { var future = foo(); } catch(ex) {}

[18:29:09.0000] <dlongley>
vs.

[18:29:23.0000] <dlongley>
try {var future = foo(); future.then(a, b);} catch(ex) {}

[18:29:42.0000] <dlongley>
the idl test harness is looking for the future to happen when foo() is called, not when .then() is called.

[18:29:56.0000] <dlongley>
(via the rejection callback passed to .then)

[18:30:20.0000] <dlongley>
s/for the future/for the error

[21:01:07.0000] <tantek>
TabAtkins, added stub spec for registry entry for rel=discussion: http://microformats.org/wiki/existing-rel-values#HTML5_link_type_extensions

[21:41:30.0000] <rcombs>
where do I go to find out whether or not JS's handling of Unicode is going to get better?

[21:42:52.0000] <rcombs>
also, regexes

[21:43:01.0000] <rcombs>
also, proper Unicode handling _in_ regexes

[00:31:51.0000] <zcorpan>
should specs reference CSS specs on dvcs.w3.org or dev.w3.org?

[02:06:27.0000] <Ms2ger>
zcorpan, dev.

[02:07:13.0000] <zcorpan>
Ms2ger: ok. do you know why?

[02:08:23.0000] <Ms2ger>
I don't remember

[02:08:35.0000] <jgraham>
Everyone loves CVS?

[02:09:59.0000] <Ms2ger>
dev. just mirrors dvcs. for CSS, fwiw

[02:21:35.0000] <annevk>
TabAtkins: you could just make it conditional on the URL having a path in the first place

[02:21:53.0000] <annevk>
TabAtkins: data URLs for instance will only have "scheme data"

[02:22:29.0000] <annevk>
TabAtkins: so either the first n segments match, or they don't, or there are no segments to begin with

[02:24:13.0000] <annevk>
TabAtkins: Hixie: also, on a more general point, URL hasn't received much review yet so I first want to know if all the concepts are correct before adding makeup and such

[03:31:25.0000] <annevk>
zcorpan: it seems you're no longer updating the xref database with CSSOM references?

[03:31:43.0000] <annevk>
zcorpan: for some reason the links to getClientRects() and such from DOM went dead :(

[03:32:46.0000] <zcorpan>
annevk: glenn forked it. i tried to switch back to xref but something didn't work right and then i gave up

[03:40:27.0000] <SimonSapin>
annevk: Is http://example.com/foo//bar the same URL as http://example.com/foo/bar ?

[03:40:42.0000] <annevk>
SimonSapin: no

[03:41:26.0000] <SimonSapin>
so servers that consider them the same decide that on their own

[03:41:37.0000] <SimonSapin>
if that makes sense

[03:42:02.0000] <gsnedders>
Right. A server could equally decide foobar and /fo/b/a/r are the same. :)

[03:42:27.0000] <jgraham>
Or foo/bar and foo/bar/ :)

[03:43:06.0000] <SimonSapin>
so, on my TODO list: detailed review of selectors4’s :local-link and :local-link(2)

[03:43:30.0000] <SimonSapin>
I think it’s doing weird normalization

[03:43:56.0000] <annevk>
SimonSapin: yeah, just like servers treating / and /index.html identically sometimes

[03:44:12.0000] <SimonSapin>
indeed, that too

[03:44:19.0000] <annevk>
SimonSapin: more happenstance than actual architecture

[03:44:45.0000] <annevk>
(well, it's related to the architecture of the server, but not that of URLs)

[03:45:39.0000] <gsnedders>
Or and /randomweirdindexpage

[03:45:52.0000] <SimonSapin>
 /Overview.html ;)

[03:47:06.0000] <annevk>
I recommend making :local-link map directly to the working of URLs

[03:47:09.0000] <SimonSapin>
So if you’re on /foo#bar, clicking on href="/foo#baz" only scrolls, but href="/foo/#baz" triggers a navigation/page load, right?

[03:47:16.0000] <annevk>
and not any kind of server architecture

[03:47:25.0000] <gsnedders>
SimonSapin: Yes.

[03:47:31.0000] <SimonSapin>
annevk: agreed

[03:47:52.0000] <annevk>
basically you want to use a parsed URL's path array I reckon

[03:47:57.0000] <SimonSapin>
right now :local-link(1) matches both, but I think it should only match the former

[03:48:12.0000] <annevk>
what does 1 mean?

[03:48:30.0000] <SimonSapin>
means 1 leading path segments

[03:48:57.0000] <annevk>
so 0 would match data URLs and such?

[03:49:00.0000] <SimonSapin>
annevk: that’s what it does, but with additional steps like remove a trailing empty path segment, ie. a trailing slash

[03:49:07.0000] <annevk>
ooh

[03:49:39.0000] <annevk>
sounds more like :apache-local-link

[03:50:03.0000] <SimonSapin>
yeah, I’ll send a review on www-style

[03:50:20.0000] <SimonSapin>
I think a functional :local-link() never matches data: and such URLs

[03:50:35.0000] <SimonSapin>
(that’s why Tab was asking about relative schemes)

[03:52:14.0000] <annevk>
well every URL will have at least one path segment

[03:52:23.0000] <annevk>
except if it's a data URL and such

[03:52:41.0000] <annevk>
so your idea would be that :local-link(0) matches nothing?

[03:53:10.0000] <SimonSapin>
that’s what I’m reading in the draft

[03:53:17.0000] <SimonSapin>
not sure what it *should* do

[03:54:33.0000] <SimonSapin>
:local-link(0) basically means "same domain name". (Not sure if eg. the scheme should be considered or is in the draft)

[03:56:31.0000] <annevk>
it says to ignore scheme / username / password / port / query string  / fragment

[03:56:53.0000] <SimonSapin>
not sure it should

[03:56:55.0000] <annevk>
that seems kinda flawed

[03:57:41.0000] <annevk>
I think we should define some kind of URL comparison API and CSS should hook into that

[03:57:50.0000] <annevk>
this kind of adhoc approach works, but is not great

[03:57:51.0000] <SimonSapin>
should it be considered "local" to go from HTTP to HTTPS on the same domain?

[03:58:18.0000] <SimonSapin>
yes, if Selectors can just refer to URL for this that would be great

[03:58:30.0000] <annevk>
well you'd still need to define some kind of CSS syntax

[03:58:34.0000] <SimonSapin>
sure

[03:58:43.0000] <SimonSapin>
for the comparison I mean

[03:59:04.0000] <SimonSapin>
I think Selectors 4 is doing ad-hoc comparison because there was not enough in URL to refer to

[03:59:17.0000] <annevk>
given that everything on the web is origin-scoped I don't think ignoring scheme/port is a good idea

[03:59:27.0000] <annevk>
treating origin as a single entity is a much better approach

[03:59:54.0000] <annevk>
yeah maybe

[04:00:08.0000] <annevk>
nobody emailed me their requirements for URL comparison though despite repeated requests :/

[04:00:58.0000] <annevk>
okay, lets look around the web and see what people are doing

[04:02:53.0000] <SimonSapin>
So far WeasyPrint only needs to tell apart local/internal links from external ones

[04:03:34.0000] <SimonSapin>
with corner cases like href="#foo" without a base URL (eg. parsing an HTML string from memory)

[04:32:17.0000] <annevk>
SimonSapin: I emailed www-style/public-webapps with some thoughts

[05:22:46.0000] <zcorpan>
annevk: DOMStringList is to be replaced with DOMString[] still, right? What about StyleSheetList, CSSRuleList, MediaList? https://www.w3.org/Bugs/Public/show_bug.cgi?id=16111

[05:41:38.0000] <annevk>
haven't really thought about that lately

[05:41:50.0000] <annevk>
we need some kind of generic list solution but we don't

[05:49:10.0000] <Ms2ger>
Maybe we should make annevk implement webidl arrays in Gecko...

[05:52:06.0000] <annevk>
Ms2ger: so I'm not sure IDL arrays are the right solution here

[05:55:20.0000] <annevk>
I'm not a big fan of IDL arrays. I think JavaScript basically needs some new Array types...

[06:11:00.0000] <annevk>
I'm hoping JSIDL will magically fix it

[06:12:01.0000] <Ms2ger>
Ehehehehe

[06:12:41.0000] <annevk>
I know I know

[06:13:44.0000] <Ms2ger>
I'll believe it when I see it

[06:30:47.0000] <annevk>
http://lists.w3.org/Archives/Public/www-style/2013Apr/0592.html my @opera.com email is still going strong it seems

[06:37:32.0000] <odinho>
^_^ Good times

[06:38:34.0000] <annevk>
I reckon /dev/null always has good times

[06:39:43.0000] <SimonSapin>
annevk: still going strong as in you’re still getting mail addressed to it, or as in people are still using it?

[06:40:13.0000] <odinho>
SimonSapin: The /dev/null comment should indicate to you where those mails go ;-)

[06:40:22.0000] <odinho>
So I vote for #2

[06:40:25.0000] <SimonSapin>
ok

[06:42:31.0000] <annevk>
http://five-gt-two.spreadshirt.com/ is still alive

[07:06:57.0000] <annevk>
I learned today that the W3C at one point considered RAND licensing: http://www.w3.org/TR/2001/WD-patent-policy-20010816/ (authors include Microsoft, HP, Philips, and Apple)

[07:07:00.0000] <annevk>
Glad that went nowehre

[07:07:04.0000] <annevk>
nowhere*

[07:08:55.0000] <tantek>
annevk - it used to be a per WG choice (RAND vs RF)

[07:09:05.0000] <tantek>
as in, defined in the WG charter

[07:09:11.0000] <annevk>
oh wow

[07:09:27.0000] <tantek>
was quite a fight to get RF across the org

[07:09:59.0000] <SimonSapin>
what are RAND and RF?

[07:10:34.0000] <Ms2ger>
"reasonable and non-discriminatory terms" for RAND

[07:10:40.0000] <Ms2ger>
royalty-free for rf

[07:10:49.0000] <Ms2ger>
Both licensing terms for patents

[07:13:50.0000] <jgraham>
That needs more scare quotes

[07:13:56.0000] <jgraham>
"reasonable"

[07:15:38.0000] <Ms2ger>
"'reasonable' 'and' 'non-discriminatory' 'terms'"

[07:15:48.0000] <Ms2ger>
More? :)

[07:16:34.0000] <marcosc>
:)

[09:06:28.0000] <cwilso__>
(man, the above convo on RAND/RF licensing suddenly made me feel very, very old)

[09:06:40.0000] <cwilso__>
annevk: yt?

[09:06:57.0000] <annevk>
cwilso__: yeah

[09:08:52.0000] <cwilso__>
I'm not trying to be obtuse on fingerprinting re: MIDI API; I don't understand how it enables reviving cookies any more than other available info

[09:09:29.0000] <cwilso__>
(Note that I was originally against having an ID, because you can't guarantee across sessions, necessarily)

[09:10:03.0000] <annevk>
so Gamepad only exposes the vendor string

[09:10:13.0000] <dglazkov>
good morning, Whatwg!

[09:10:18.0000] <annevk>
MediaStream seems to be doing something else

[09:10:24.0000] <annevk>
you guys are doing something else

[09:10:34.0000] <cwilso__>
um, Gamepad has a DOMString id.

[09:10:36.0000] <annevk>
and nobody seems to think it's a problem

[09:10:43.0000] <annevk>
cwilso__: did you read the description?

[09:10:54.0000] <annevk>
(which is way too vague, imo)

[09:10:59.0000] <cwilso__>
Sure - typically USB vendor and product id.

[09:11:14.0000] <cwilso__>
The point of the ID in MIDI is simply so you can find the same one next time.

[09:11:49.0000] <cwilso__>
E.g. in my prollyfill it just appends index, manufacturer and name (should really hash, left it for debugging)

[09:13:17.0000] <annevk>
oh you think it's not an actual string for Gamepad? hmm

[09:13:30.0000] <cwilso__>
I initially was against ID because I said you could look up from index, name and manufacturer.  If there's significant risk added, I'd probably just drop ID again, because an ID that gets regenerated "randomly" is going to be confusing ("I cleared my cookies, so of course my sequencer forgot its config" is not going to occur to an end user)

[09:14:40.0000] <annevk>
what's index?

[09:14:57.0000] <cwilso__>
I don't know what Gamepad has in practice in implementations; the spec implies it's an identifier for THAT gamepad, and would persist - but you're completely right that it does not state uniqueness (e.g. if you have two of the same gamepad, are the IDs identical?)

[09:15:30.0000] <cwilso__>
index = position in the inputs or outputs list.  like position in the getGamepads() [].

[09:15:56.0000] <annevk>
could that not change over time?

[09:17:12.0000] <annevk>
Anyway, if we're going to hook all these devices up that's great, but we should have a somewhat consistent story for them.

[09:17:48.0000] <cwilso__>
Yes, of course.  If you unplugged a device, e.g..  There's no cross-OS unique identifier that's the same.  CoreMIDI has persistent IDs, IIRC, and it turns out that the Windows MIDI HMIDI handles are persistent, but they're not the same, and I don't think there's a consistent ID coming straight from USB-MIDI.

[09:18:04.0000] <annevk>
cwilso__: so you wouldn't want to generate the ID based on index then

[09:18:12.0000] <cwilso__>
I'd +1 that.  Gamepad pretty much just relies on index, really.

[09:18:44.0000] <cwilso__>
My initial take on Web MIDI was that it should, too, and could additionally look up based on product name.

[09:21:29.0000] <annevk>
Per your configuration example. It sounds like this is something that ought to be defined in detail. So you don't lock users to a single browser.

[09:22:01.0000] <annevk>
E.g. given some hardware, irrespective of the browser you'll get the same ID for it.

[09:22:41.0000] <cwilso__>
MediaStreams apparently generate a GUID; not clear how persistent it would be.

[09:23:04.0000] <cwilso__>
Well, yes - although if you move the hardware to a different machine you might not.

[09:23:21.0000] <annevk>
Yeah, web security seems like lalaland for most people... Push notification proposal does not even mention the word "origin".

[09:23:40.0000] <cwilso__>
I think OSX and Windows both keep track of devices they've seen before.

[09:23:52.0000] <cwilso__>
E.g. if you plug in A, B and C in that order...

[09:23:55.0000] <cwilso__>
then remove B

[09:24:18.0000] <Ms2ger>
Glenn Adams only came for the beer?

[09:24:25.0000] <cwilso__>
Obviously you'll get [A,C].  If you plug B back in, you'll get [A,B,C].

[09:24:44.0000] <cwilso__>
If you'd never plugged B in at all, you'd get [A,C,B]

[09:25:44.0000] <annevk>
But is there some way to know that B is not A? Assuming neither has been plugged in and I plug in one at random?

[09:25:56.0000] <cwilso__>
I think this system would err on the side of messing up the config sometimes, actually.  :)  Or needing to re-lookup.

[09:26:55.0000] <cwilso__>
If they're all the same type of device (I mean, they're identical devices - the same make/model of keyboard, say), no, I don't think so, not across all systems anyway.

[09:27:46.0000] <cwilso__>
It's not really even a globally unique ID, just a "globally at this time" ID.

[09:28:21.0000] <cwilso__>
that's not a universal statement, you realize - you can figure out how to do that, by using the handles in Windows and the identifiers under the covers in OSX.

[09:28:37.0000] <Ms2ger>
Ooh, XHR/PE discussion

[09:29:18.0000] <cwilso__>
I presume it's based on the USB serial number (but that's not exposed, of course, as MIDI devices can be non-usb)

[09:29:40.0000] <annevk>
Ms2ger: hmm?

[09:29:46.0000] <cwilso__>
/me back in 5, need coffee

[09:29:49.0000] <Ms2ger>
WebApps F2F

[09:30:00.0000] <annevk>
cwilso__: anyway, it'd be good if this was coordinated across everyone introducing access to devices

[09:30:33.0000] <annevk>
cwilso__: I guess I don't really have strong opinions on the specifics, other than that privacy/fingerprinting and whether any of it needs origin-scoping or not is looked into and is called out in some way in the specification

[09:30:56.0000] <annevk>
cwilso__: well, and if use cases like persisting a configuration survive, it would be great if we could make that cross-browser

[09:32:28.0000] <Ms2ger>
/me wonders where sicking got lost

[09:32:28.0000] <annevk>
Ms2ger: Present+ Ms2ger, really? :-)

[09:34:52.0000] <annevk>
Wait http://www.w3.org/2013/04/25-webapps-minutes.html nobody from Apple or Google?

[09:35:23.0000] <Ms2ger>
Some guy said he was from Google

[09:35:47.0000] <hober>
/me is here

[09:35:55.0000] <annevk>
/me is here

[09:36:13.0000] <Ms2ger>
/me is here

[09:36:25.0000] <divya>
/me is here

[09:36:39.0000] <cwilso__>
/me is back

[09:36:39.0000] <hober>
(i meant, i'm at the webapps f2f, though I'm not listed. grr)

[09:36:48.0000] <annevk>
Is this our "I'm Spartacus!"?

[09:36:58.0000] <annevk>
aw, cwilso__ did a combo-breaker

[09:37:30.0000] <annevk>
hober: but you're at every standards meeting :p

[09:37:55.0000] <Ms2ger>
hober, good way to avoid actual work? :)

[09:38:20.0000] <cwilso__>
C-C-C-C-C-C-COMBO BREAKER!!

[09:39:28.0000] <cwilso__>
annevk: yeah.  The privacy/fingerprinting stuff is gone into in some detail in Web MIDI, but could certainly be expanded.  Keeping sync of config across engines is a goal, although hard; will help when another engine gets interested enough to discuss implementation concerns.  :)

[09:40:08.0000] <Ms2ger>
Sounds like the Google-Mozilla bus arrived

[09:41:18.0000] <cwilso__>
Except that I'm 697miles from the main campus (until June), yeah.  :)

[09:41:51.0000] <Ms2ger>
sicking, tut tut, you should be on time

[09:42:12.0000] <hober>
annevk: not at all of them, fortunately, but yeah, most of them

[09:43:23.0000] <cwilso__>
ms2ger: oh, duh, you mean at the ftf

[09:43:34.0000] <Ms2ger>
Yeah

[09:53:15.0000] <TabAtkins>
SimonSapin: In :local-link, we only normalize by dropping the hash.  In :local-link(n), we normalize by dropping the scheme, hash, query, and userdata, and if the final path segment is empty, drop it too.

[09:53:28.0000] <TabAtkins>
(So "example.com" and "example.com/" are the same.)

[09:53:51.0000] <TabAtkins>
That last one is technically not valid, but in practive it's fine, and I think if we didn't do it, it would make the feature much less useful.

[09:54:30.0000] <TabAtkins>
annevk: Yes, we want to make :local-link work on URLs.  It can't rely on server structure anyway. ^_^

[09:55:17.0000] <annevk>
example.org already has / via the parser

[09:55:24.0000] <TabAtkins>
annevk: :local-link(n) never matches "opaque" urls, like data:.  :local-link(0) matches when the domains match, :local-link(1) matches when the domains and first path segment match, etc.

[09:55:29.0000] <annevk>
the problem is treating example.org/foo and example.org/foo/ the same

[09:55:40.0000] <TabAtkins>
annevk: If you defined a URL comparison API, we'd gladly hook it.

[09:56:00.0000] <annevk>
see my email

[09:56:32.0000] <annevk>
I was wondering why you were doing certain things, seems one part of it was a misunderstanding

[09:57:44.0000] <annevk>
dropping scheme/port also seems wrong

[09:58:32.0000] <TabAtkins>
annevk: Just tell us what's right (on the list), and we'll change.  The current text is a result of fantasai or I deciding what seemed "reasonable".

[09:59:15.0000] <annevk>
TabAtkins: k, I'd be interested in knowing whether you'd want query comparison stuff and such as well

[09:59:22.0000] <annevk>
TabAtkins: did you guys collect much feedback from developers?

[10:00:12.0000] <TabAtkins>
For the unparametrized, probably want query comparison so we can tell what the "same page" is.  For the parametrized, definitely want queries stripped.

[10:00:36.0000] <TabAtkins>
Dunno what feedback we may have explicitly collected, but there's been requests for some time for more url-matching pseudoclasses.

[10:00:48.0000] <TabAtkins>
People wanting "local" links to be selectable, for some definition of "local".

[10:01:20.0000] <TabAtkins>
The parametrized one lets you define "local" relative to your personal url scheme - in github's case, :local-link(1) means "same user", :local-link(2) means "same repo", etc.

[10:01:30.0000] <SimonSapin>
TabAtkins: http://example.com and http://example.com/ are parsed the same, while /foo and /foo/ should be different

[10:01:50.0000] <TabAtkins>
SimonSapin: For most sites that's not true, though. :/

[10:02:05.0000] <SimonSapin>
well, that’s an apache thing

[10:02:15.0000] <SimonSapin>
clicking on the link will still navigate rather than just scroll

[10:02:21.0000] <annevk>
TabAtkins: but at that point you're embedding server semantics into the comparison

[10:02:23.0000] <TabAtkins>
Ah, hm.

[10:02:39.0000] <TabAtkins>
annevk: Well, not quite server semantics.  Common de facto url semantics, perhaps.

[10:02:39.0000] <SimonSapin>
… which should be the criteria for :local-link (non fonctional), I think

[10:02:45.0000] <annevk>
TabAtkins: e.g. / and /Overview.html might be the same too

[10:02:52.0000] <TabAtkins>
SimonSapin: Yeah, makes sense for :local-link

[10:03:01.0000] <TabAtkins>
annevk: Yeah, but that's impossible to tell.

[10:03:06.0000] <SimonSapin>
trailing slash also changes meaning of path-relative URLs

[10:03:22.0000] <TabAtkins>
Oh man, you're right abuot that.

[10:03:24.0000] <TabAtkins>
Never mind, then.

[10:03:33.0000] <SimonSapin>
gotta go, bye

[10:04:44.0000] <annevk>
TabAtkins: I think that should be an incentive for people to clean that up though

[10:04:54.0000] <annevk>
TabAtkins: e.g. by having the server do a redirect

[10:05:11.0000] <TabAtkins>
annevk: I'm not too interested in providing that sort of incentive, but I am interested in making things consistent across the platforms.

[10:05:17.0000] <TabAtkins>
platform/usage

[10:05:34.0000] <TabAtkins>
So yeah, example.com/foo and example.com/foo/ should be different.

[10:05:37.0000] <annevk>
well we cannot normalize e.g. /foo//bar to /foo/bar

[10:05:51.0000] <annevk>
even though Apache will treat them as identical iirc and not redirect

[10:06:12.0000] <TabAtkins>
Is the /foo/../bar == /bar thing also apache-specific?

[10:06:23.0000] <annevk>
W3C does appear to redirect for http://www.w3.org/2001//tag/ that's cool

[10:06:36.0000] <annevk>
TabAtkins: no, that's the URL parser

[10:06:44.0000] <TabAtkins>
annevk: Cool.

[10:06:56.0000] <karlcow>
note that you can deactivate Apache default behavior

[10:06:58.0000] <karlcow>
→ curl -sI http://www.la-grange.net/2013

[10:06:58.0000] <karlcow>
HTTP/1.1 403 Forbidden

[10:07:06.0000] <TabAtkins>
So yeah, my preferred solution is to just lean *fully* on your spec for all the necessary parsing and terminology.

[10:07:24.0000] <karlcow>
→ curl -sI http://www.la-grange.net/2013/

[10:07:25.0000] <karlcow>
HTTP/1.1 200 OK

[10:07:45.0000] <annevk>
TabAtkins: cool, if you have feedback on the API thing I sketched out that'd be welcome

[10:08:11.0000] <annevk>
TabAtkins: I'll about providing hooks soonish

[10:08:16.0000] <TabAtkins>
annevk: Where did you outline this?

[10:08:36.0000] <annevk>
http://lists.w3.org/Archives/Public/www-style/2013Apr/0588.html (also on webapps)

[10:08:55.0000] <TabAtkins>
Oh, sorry, I was only skimming for www-style-tagged threads.

[10:08:58.0000] <karlcow>
http://httpd.apache.org/docs/2.2/mod/mod_dir.html#DirectorySlash

[10:10:46.0000] <annevk>
karlcow: what about //foo ?

[10:11:18.0000] <karlcow>
annevk: good question, I haven't tried

[10:11:33.0000] <annevk>
http://www.la-grange.net//2013/ aaah

[10:11:47.0000] <annevk>
even karlcow is not canonical

[10:12:01.0000] <annevk>
just found numerous bugs in my own URLs too, which were already broken

[10:12:03.0000] <TabAtkins>
For shame!

[10:12:04.0000] <karlcow>
you meant la-grange ;)

[10:12:06.0000] <annevk>
(for different reasons)

[10:12:15.0000] <annevk>
karlcow: maybe ;)

[10:12:26.0000] <hober>
TIL sicking eats every day

[10:12:31.0000] <karlcow>
karlcow is extremely faaaaaar to be canonical :p

[10:13:44.0000] <karlcow>
This slash-slash on Apache is interesting

[10:14:20.0000] <karlcow>
→ curl -sI http://www.la-grange.net///2013/

[10:14:20.0000] <karlcow>
HTTP/1.1 200 OK

[10:14:29.0000] <karlcow>
you can add as many as you want

[10:15:48.0000] <gavinc>
/me accepts challenge

[10:15:52.0000] <gavinc>
414 Request-URI Too Large woohoo!

[10:16:28.0000] <annevk>
I wonder if the URL is too long or it simply has too many segments...

[10:17:18.0000] <karlcow>
"Regarding double slashes: Most Web servers silently collapse multiple slashes into a single slash early in the request processing pipeline. This is true for at least Apache, Tomcat and Jetty. " — http://stackoverflow.com/questions/4514627/apache-rewrite-rule-leading-slash/4514696#4514696

[10:17:26.0000] <karlcow>
gavinc: how many? :)

[10:17:45.0000] <annevk>
http://www.la-grange.net///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:17:46.0000] <annevk>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:17:47.0000] <annevk>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:17:49.0000] <annevk>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:17:51.0000] <annevk>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:17:53.0000] <annevk>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:17:55.0000] <annevk>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:17:57.0000] <annevk>
//////////////////////////////////////////////////////////////////////////////////////////////////////http://www.la-grange.net/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:17:59.0000] <annevk>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:18:01.0000] <annevk>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:18:03.0000] <annevk>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:18:05.0000] <gavinc>
gee thanks annevk :P

[10:18:05.0000] <annevk>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:18:07.0000] <annevk>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:18:09.0000] <annevk>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:18:11.0000] <annevk>
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

[10:18:12.0000] <karlcow>
mwahahaha

[10:18:13.0000] <annevk>
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////2013/2013/ does the trick

[10:18:15.0000] <annevk>
oops

[10:18:16.0000] <TabAtkins>
Thanks for flooding, bro.

[10:18:18.0000] <karlcow>
:D

[10:18:34.0000] <TabAtkins>
I went to get a coke, and when I came back I thought something terrible was happening to my computer.

[10:18:38.0000] <annevk>
seems like I even made a typo

[10:18:43.0000] <karlcow>
:D

[10:18:45.0000] <annevk>
oh well

[10:18:53.0000] <karlcow>
When I slash, I do it with typos!

[10:19:25.0000] <annevk>
TabAtkins: I hope you didn't spit the coke all over it

[10:19:34.0000] <TabAtkins>
Luckily no.

[10:20:33.0000] <karlcow>
TabAtkins: it's a message. Coke is no good ;)

[10:20:57.0000] <TabAtkins>
karlcow: Diet Coke, even!

[10:21:13.0000] <karlcow>
collapsing the slash in Diet Coke.

[10:21:39.0000] <rillian>
TabAtkins: we should alter our clients to collapse multiple tabs early in the message display pipeline

[10:21:49.0000] <rillian>
s/tabs/slashes/

[10:22:01.0000] <TabAtkins>
About to say, there's rarely more than one of me.

[10:22:08.0000] <TabAtkins>
And even if there was, you wouldn't want to collapse us.

[10:22:15.0000] <rillian>
typoes ruin the joke

[10:22:34.0000] <rillian>
TabAtkins: you'd scale well on parallel jobs?

[10:22:51.0000] <TabAtkins>
Pretty sure I would.

[10:23:02.0000] <TabAtkins>
With some message-passing latency, I think I'd do fine as a hive.

[10:23:13.0000] <TabAtkins>
(It's one of my pre-planned genie wishes.)

[10:23:27.0000] <tantek>
WTF

[10:23:31.0000] <TabAtkins>
Hahaha

[10:23:38.0000] <tantek>
/me scrolls up and sees a slash-attack

[10:24:09.0000] <rillian>
"He's just hive-curious."

[10:24:21.0000] <TabAtkins>
Hm, trying to think of a case where I'd want to ignore query but pay attention to fragment.

[10:24:31.0000] <TabAtkins>
rillian: It's a degenerate case of poly-amory.

[10:24:42.0000] <tantek>
TabAtkins - let me know if you find any other rel values you have problems with and I'll take care of specing/registering them.

[10:24:53.0000] <tantek>
We've been pretty active with that recently

[10:24:56.0000] <TabAtkins>
tantek: That's the only one I see in our specs so far.

[10:25:11.0000] <tantek>
based on all the #indiewebcamp distributed comments scenarios / progress

[10:25:16.0000] <tantek>
ok cool

[10:25:16.0000] <gavinc>
http://paste.ofcode.org/XZBCb4MUzrL2Hwtjh9pHkw ;)

[10:25:41.0000] <tantek>
/me waves from the WebApps WG f2f

[10:25:49.0000] <TabAtkins>
annevk: There are times when the query is just used for passing random information into the page, such that different queries still represent the same "page".  Then, I think you'd want to just omit query, but match on everything else.

[10:26:02.0000] <Ms2ger>
/me waves at tantek 

[10:26:07.0000] <tantek>
:)

[10:26:24.0000] <TabAtkins>
Like, using query to set the background-color of the page, or something equally silly.

[10:27:50.0000] <tantek>
TabAtkins - having trouble following the :read-write discussion in Bugzilla

[10:28:05.0000] <tantek>
I think my intent there was always to reflect user-alterability of the state of the inputs

[10:28:27.0000] <tantek>
so to that extent, I'm pretty sure I intended it to apply to checkboxes and radio buttons that the user can change the state of

[10:28:30.0000] <TabAtkins>
tantek: Yes, but now define that in terms of what precise HTML elements match it. ^_^

[10:28:33.0000] <TabAtkins>
Yes, agree.

[10:28:41.0000] <annevk>
TabAtkins: yeah, but in case of e.g. Bugzilla it's essential

[10:28:41.0000] <tantek>
TabAtkins - ok, sure we can add more details

[10:28:41.0000] <TabAtkins>
I'm only excluding the button-typed inputs.

[10:28:48.0000] <TabAtkins>
annevk: Yes, certainly.

[10:28:52.0000] <tantek>
I wanted to see if we had highlevel / conceptual agreemtn too

[10:29:03.0000] <TabAtkins>
I'm sending feedback on the thread, just saying that "upto" as the only way to drop components probably isnt' sufficient.

[10:29:14.0000] <tantek>
or rather first, before specifying

[10:29:22.0000] <annevk>
TabAtkins: k, will look tomorrow

[10:29:34.0000] <annevk>
or tonight, we'll see

[10:29:41.0000] <tantek>
TabAtkins - where should the definition of what precise HTML elements match it go?

[10:29:46.0000] <tantek>
in CSS3-UI? Selectors? HTML?

[10:29:57.0000] <tantek>
or should I just write it up on a wiki page and we can decide later

[10:32:27.0000] <TabAtkins>
tantek: HTML.

[10:32:33.0000] <TabAtkins>
We're deciding it in the bug right now.

[10:32:49.0000] <tantek>
Bugzilla is not a good place for deciding things - sorry to say

[10:32:59.0000] <TabAtkins>
Well, "deciding".

[10:33:37.0000] <tantek>
hence IRC! :)

[10:34:04.0000] <tantek>
annevk - I want to add onfullscreenchange and onfullscreenerror to the Fullscreen API IDL - any objection?

[10:35:04.0000] <TabAtkins>
No objection from me, though I wish we had event streams. :/

[10:35:25.0000] <tantek>
ok I'll do it then and annevk can revert it if he disagrees :)

[10:35:42.0000] <tantek>
the event firings etc. are already in the spec

[10:35:47.0000] <Ms2ger>
Clearly fullscreen should use futures

[10:35:50.0000] <tantek>
they're just missing from the IDL

[10:35:54.0000] <TabAtkins>
No, it shouldn't really.

[10:36:06.0000] <TabAtkins>
Repeated events, like fullscreenchange, are not a good match for futures.

[10:36:12.0000] <tantek>
Ms2ger - how can I capture that as an open issue?

[10:36:28.0000] <Ms2ger>
tantek, I jest

[10:36:42.0000] <tantek>
Ms2ger - thanks, a bit slow this morning.

[10:37:02.0000] <Ms2ger>
Shouldn't you be having coffee with the rest of the wg? :)

[10:37:12.0000] <tantek>
oh oops, right, maybe that would help

[10:37:16.0000] <tantek>
brb

[11:32:33.0000] <Hixie>
cabanier1: yt?

[11:43:22.0000] <gavinc>
karlcow: 8173

[11:46:21.0000] <cabanier1>
Hixie: pong

[12:17:29.0000] <Hixie>
cabanier1: so i'm finally getting around to the fillrule feedback

[12:17:42.0000] <tantek>
someone here with a working Anolis, could you update Overview.html in fullscreen?

[12:18:21.0000] <tantek>
I just spent over an hour updating my Anolis (and some dependencies) and still got stuck

[12:18:30.0000] <Hixie>
tantek: http://anolis.hoppipolla.co.uk/aquarium.py

[12:18:46.0000] <tantek>
logged errors and solutions until I got stuck here: http://wiki.whatwg.org/wiki/Anolis#Troubleshooting

[12:19:18.0000] <Ms2ger>
Hixie, that's too old, unfortunately

[12:19:18.0000] <Hixie>
cabanier1: am i wrong in presuming that we should also have a fillrule argument for fill() when fill() is passed just a Path object?

[12:19:26.0000] <Hixie>
Ms2ger: it's what HTML uses :-)

[12:19:38.0000] <tantek>
Hixie, A problem occurred in a Python script.

[12:19:47.0000] <Ms2ger>
Hixie, yeah, and you don't have cross-spec references :)

[12:20:14.0000] <Hixie>
well, i do, but anolis' version of those don't work the way i want :-)

[12:22:15.0000] <tantek>
Hixie, interesting, it worked via URL but not upload

[12:24:17.0000] <tantek>
uh, by "worked" I should say - it gave me something that looked like a spec

[12:24:31.0000] <tantek>
however it is VERY different from the previous Overview.html - much more different than the edits I made should have caused

[12:25:38.0000] <tantek>
I suppose I could check it in and just let annevk update/fix it next time he commits

[12:25:44.0000] <tantek>
what could possibly go wrong

[12:25:59.0000] <Ms2ger>
Just checkin the source and leave the generated one alone

[12:30:55.0000] <tantek>
well it looked reasonable in the browser so I committed it

[12:31:10.0000] <tantek>
seemed worse to have them be out of sync

[12:31:30.0000] <tantek>
changes seemed minor, (un)quoted attributes, numeric entities vs. utf-8

[12:31:33.0000] <tantek>
whitespace

[12:32:58.0000] <zcorpan>
why can't i mark the remaining bits in https://critic.hoppipolla.co.uk/r/5 as reviewed?

[12:37:20.0000] <zcorpan>
tantek: i ran make with an up-to-date (i think) anolis. diff was empty

[12:38:15.0000] <Ms2ger>
zcorpan, probably because it didn't run anolis

[12:38:24.0000] <Ms2ger>
zcorpan, try touch Overview.src.html && make

[12:39:03.0000] <zcorpan>
Ms2ger: ah, yeah

[12:40:29.0000] <Hixie>
MikeSmith: i'm gonna try putting "blocked awaiting responses to comment 15 (please remove this when replying)" in the status whiteboard for now

[12:41:53.0000] <zcorpan>
tantek: pushed

[12:44:32.0000] <MikeSmith>
Hixie: works for me :)

[12:44:48.0000] <zcorpan>
tantek: onfullscreenchange is listed in http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html

[12:45:57.0000] <zcorpan>
tantek: also it's nice to have separate commits for normative changes and for fluffing

[12:47:07.0000] <zcorpan>
(also, dunno if anne approves of pushing like this or if he prefers pull requests)

[12:50:10.0000] <divya>
hober: MikeSmith when is this SF plan going to happen

[12:50:13.0000] <divya>
i need to add it to my calendar

[13:14:46.0000] <tantek>
thanks for your help zcorpan

[13:17:05.0000] <tantek>
pushing works

[13:22:11.0000] <Hixie>
i wish bugzilla had a column in search results for "last person to touch this bug"

[13:25:57.0000] <tantek>
Hixie, a radio button is more like part of a select

[13:26:03.0000] <tantek>
than it is a button

[13:26:09.0000] <jgraham>
zcorpan: critic bug, I think

[13:26:19.0000] <jgraham>
But if you have reviewed them, I can mark them as reviewed

[13:26:41.0000] <tantek>
radio buttons and checkboxes should be :read-write if their state is changeable by the user

[13:26:52.0000] <tantek>
re: https://www.w3.org/Bugs/Public/show_bug.cgi?id=17812

[13:28:09.0000] <zcorpan>
jgraham: i haven't actually reviewed interfaces.html but i guess it's just c/p

[13:28:33.0000] <zcorpan>
jgraham: i have reviewed everything else

[13:28:35.0000] <jgraham>
zcorpan: Actually I fixed the assignments

[13:28:43.0000] <jgraham>
You can mark everything now

[13:28:54.0000] <zcorpan>
ah

[13:28:58.0000] <jgraham>
So not really a bug, perhaps

[13:29:01.0000] <Hixie>
tantek: this is a definition of "write" quite foreign to me

[13:29:16.0000] <tantek>
Hixie - don't misinterpret the label for the meaning

[13:29:27.0000] <tantek>
would you have preferred :user-modifiable?

[13:29:31.0000] <TabAtkins>
Hixie: You're being a weird kind of overly-literable.

[13:29:41.0000] <TabAtkins>
s/able/al/

[13:29:44.0000] <jgraham>
literable?

[13:29:50.0000] <tantek>
we're about 10 years past bike-shedding these selectors

[13:29:51.0000] <jgraham>
You could write books about him?

[13:30:13.0000] <tantek>
/me is old enough to remember when "writing" a bit of information was perfectly normal.

[13:32:06.0000] <Hixie>
TabAtkins: the term "readonly" has never applied to radio buttons as far as i am aware. There's a reason, for example, that neither HTML radio buttons nor Win32 radio buttons (the ones I'm familiar with) have a "read-only" mode.

[13:32:12.0000] <Hixie>
TabAtkins: they can be disabled, but not made read-only

[13:32:29.0000] <TabAtkins>
Hixie: ...and?

[13:32:36.0000] <Hixie>
TabAtkins: this is why i'm confused, because i would never have guessed that :read-write and :read-only would apply to radio buttons

[13:32:57.0000] <Hixie>
TabAtkins: and i'm still skeptical that they should

[13:33:02.0000] <TabAtkins>
Which is why it's a good thing you asked, and I told you what they should apply to.

[13:33:22.0000] <Hixie>
but i think you're wrong :-)

[13:33:33.0000] <tantek>
they apply to radio buttons, as as a group, they act semantically similar to a select, which certainly has read/readwrite semantics

[13:33:35.0000] <TabAtkins>
Well, 2-1 support for me, with tantek.

[13:33:42.0000] <TabAtkins>
And yes, what tantek said.

[13:33:54.0000] <TabAtkins>
(And checkboxes act like a multiselect.)

[13:34:09.0000] <Hixie>
list boxes and check boxes also don't have a concept of "read-only"

[13:34:14.0000] <Hixie>
only disabled vs enabled

[13:34:19.0000] <tantek>
Hixie, you're stubbornly arguing linguistic semantics from labels, rather than what the things in questions actually do / how they behave

[13:34:55.0000] <Hixie>
tantek: i don't understand the distinction. We're talking about what labels mean here.

[13:35:17.0000] <TabAtkins>
We're defining what they mean.  You're claiming that the names don't match.  This is a mismatch in argument goals.

[13:35:24.0000] <tantek>
what Tab said

[13:35:40.0000] <zcorpan>
jgraham: seems like i still can't mark quite everything as reviewed

[13:35:43.0000] <Hixie>
i'm having two arguments. one is about what the selectors spec should say, the other is about what it does say.

[13:35:48.0000] <TabAtkins>
The concept which is being labeled, however (in)accurately, by :read-write, applies equally to text inputs and checkboxes.

[13:36:01.0000] <Hixie>
i think the selectors spec _should_ say that :read-only and :read-write apply to text fields only.

[13:36:23.0000] <Hixie>
i think the selectors spec _does_ say basically nothing about what they apply to, it being too vague to unambiguously interpret.

[13:37:44.0000] <tantek>
I'm fine with adding more detailed description to Selectors, CSS3-UI etc.

[13:38:05.0000] <TabAtkins>
I'm not fine with defining it in terms of specific HTML elements.

[13:38:15.0000] <tantek>
even if that means we have to resort to explicitly listing HTML elements as one example of an applicable host language

[13:38:21.0000] <TabAtkins>
I'm fine with pointing to HTML's definition as an example for other languages to lean on.

[13:38:41.0000] <Hixie>
i don't think we need to list elements, just define what it is you want to match

[13:38:44.0000] <tantek>
TabAtkins - not even non-normative example? like the UA style sheet?

[13:38:54.0000] <tantek>
:read-write = user-modifiable

[13:39:03.0000] <tantek>
:read-only = user-viewable but not modifiable

[13:39:28.0000] <TabAtkins>
tantek: We have non-normative examples all over the place, referencing HTML quite a lot.  No problem there.

[13:39:32.0000] <jgraham>
zcorpan: Oh. Which files? Can you change things in the "manage assignments" dialog (on the review page)

[13:39:38.0000] <tantek>
TabAtkins - ok cool

[13:39:39.0000] <Hixie>
e.g. "text fields whose contents can be edited when the control is focused match :read-write; text fields whose contents cannot be edited when the control is focused match :read-only. Other controls, disabled controls, and non-controls match neither."

[13:40:11.0000] <zcorpan>
jgraham: elements-embedded.js

[13:40:19.0000] <TabAtkins>
I disagree with that definition, and wont' use it.  It is being overly specific to text fields, when the definition isn't intended to be limited to text.

[13:40:31.0000] <zcorpan>
jgraham: i opened manage assignments, checked all the boxes, saved. no difference

[13:40:39.0000] <Hixie>
TabAtkins: then define what it is you do mean :-)

[13:40:45.0000] <TabAtkins>
omg i did

[13:40:55.0000] <TabAtkins>
I gave you an explicit list over in the bug.

[13:41:07.0000] <Hixie>
right now it just says "An element matches :read-write if it is user-alterable, as defined by the host language"

[13:41:09.0000] <jgraham>
zcorpan: OK, *this* is a critic bug :)

[13:41:16.0000] <jgraham>
I can mark that as reviewed though

[13:41:21.0000] <tantek>
user-alterable sounds like user-modifiable

[13:41:23.0000] <tantek>
so that's good

[13:41:30.0000] <Hixie>
"user-alterable" is one of the least specific definitions ever

[13:41:34.0000] <Hixie>
i have no idea what it means

[13:41:36.0000] <TabAtkins>
Yes, becasue that is the most specific I can get without getting into a specific host language.

[13:41:48.0000] <TabAtkins>
That's your problem, Hixie.  The rest of us seem to agree on it pretty well.

[13:42:53.0000] <zcorpan>
jgraham: reflection-original.html in the first commit also says "Pending", might also be a bug?

[13:43:02.0000] <Hixie>
ok well if the spec is remaining as "it's up to the host language", i really don't see anything wrong with what HTML says now

[13:43:10.0000] <Hixie>
so i guess the bug is WORKSFORME.

[13:43:31.0000] <Hixie>
since i think what you are describing neither matches the spec nor is sensible

[13:43:35.0000] <TabAtkins>
Dude. For godssake.

[13:44:01.0000] <TabAtkins>
I will override you and put an explicit list of HTML elements and states in the Selectors spec with a note that says "Note: this list exists because Hixie is being difficult" if you keep doing this.

[13:44:30.0000] <TabAtkins>
You disagree on what the word "user-alterable" means. I get that.  Get over it.  I'm telling you what elements HTML should associate with that word.

[13:45:00.0000] <zcorpan>
i'm gonna override both of you in the quirks spec!!

[13:45:01.0000] <Hixie>
it's not what you tell me that matters dude

[13:45:04.0000] <Hixie>
that's not how specs work

[13:45:08.0000] <Hixie>
it's what the spec says that matters

[13:45:14.0000] <Hixie>
it's not about HTML elements, it's about control types

[13:45:19.0000] <TabAtkins>
Yes it is.  You write something in the spec.  You asked me what should be written, I told you.

[13:45:20.0000] <tantek>
how about principle of least surprise? I think web devs would be surprised if checkboxes, radio button groups, select elements matched :read-only when the user was able to modify them

[13:45:21.0000] <Hixie>
HTML is not the only language to which selectors applies

[13:45:33.0000] <zcorpan>
In quirks mode, :read-write matches your mom.

[13:45:56.0000] <tantek>
HTML is the only language with UI elements to which selectors applies. XForms has been abandoned.

[13:45:59.0000] <jgraham>
I guess you could write on my mom with marker pen

[13:46:00.0000] <Hixie>
tantek: i agree that they'd be surprised if :Read-only matched those controls, but i think they'd be even more surprised if :Read-write matched them. they're not read-write controls nor read-only controls. they're not text fields.

[13:46:04.0000] <TabAtkins>
A <select> element is equivalent to a text input with a pattern on it.  A radio group is equivalent to a select.  A checkbox group is equivalent to a multi-select.  All of these are just UI variances for the same underlying concept.

[13:46:06.0000] <jgraham>
But really why would you?

[13:46:44.0000] <Hixie>
TabAtkins: that is not consistent with how UI controls are conventionally described.

[13:46:52.0000] <TabAtkins>
An <input type=color> is equivalent to a text input, even if it's exposed only as a button that opens up a color picker.

[13:46:55.0000] <jgraham>
(FWIW I think I would expect :read-write to match selects/radio buttons)

[13:47:11.0000] <jgraham>
(I think that in my head :read-write really means :mutable)

[13:47:29.0000] <Hixie>
wait, type=color should match :Read-write too?!

[13:47:30.0000] <TabAtkins>
The concept of "input with text in it" that you're harping on is just bizarrely specific, and has no connection with the actual wording of the Selectors spec.

[13:47:34.0000] <TabAtkins>
...

[13:47:46.0000] <TabAtkins>
Yes.  It's in the list of things I said should be read-write in the bug.

[13:48:01.0000] <TabAtkins>
Seriously, where are you getting this notion that it only applies to text?  Why?  How?

[13:48:08.0000] <TabAtkins>
(When? What?)

[13:48:14.0000] <Hixie>
The concept of "input with text in it" that I'm talking about is the about what the definition of "Readonly" in UI is, it's not about CSS' current text. It's abotu what CSS _Should_ say

[13:48:42.0000] <jgraham>
Don't UAs do something already here?

[13:48:54.0000] <lecuyer>
Hixie wouldn't that be something like input[type=text]:not(:empty) ?

[13:49:00.0000] <Hixie>
Controls have several states, relevant here are "enabled", "readonly", and "disabled". Most controls only have the first and third of these. Text fields are the exception, they can be readonly.

[13:49:14.0000] <tantek>
an author could use <input type="number" min="1" max="10" step="1" value="5"> e.g. for a 1-10 rating input, and a UA could render that as a select list, while non-supporting UAs would fallback to having it be a text input

[13:49:26.0000] <tantek>
in both cases - it's read-write

[13:49:48.0000] <Hixie>
let me put this another way

[13:49:52.0000] <tantek>
whether the user is typing characters, or picking from a menu of options, the input is read-write

[13:49:57.0000] <TabAtkins>
Or it could be a range, or it could be a spinner.

[13:50:01.0000] <tantek>
right

[13:50:01.0000] <Hixie>
what's the point of having :enabled/:disabled of :read-only/:read-write are the same?

[13:50:15.0000] <Hixie>
s/of/if/

[13:50:17.0000] <tantek>
the point is, the text field presentation vs. the select list presentation DOES NOT impact the :read-write - ness

[13:50:18.0000] <TabAtkins>
They're not.  :disabled only matches disabled things.

[13:50:30.0000] <TabAtkins>
:read-only happens to *also* match disabled things (because you can't alter their state).

[13:50:37.0000] <Hixie>
can you point me to a :read-write:disabled control?

[13:50:40.0000] <tantek>
so that's the proof of why a select can be read-write

[13:50:47.0000] <TabAtkins>
No, because of what I just said.

[13:50:48.0000] <tantek>
and since radio button groups are just another presentation of select

[13:50:49.0000] <Hixie>
or a :read-only:enabled control that isn't a text field?

[13:50:59.0000] <tantek>
that's why radio buttons can be read-write

[13:51:09.0000] <TabAtkins>
In HTML, the readonly attribute only applies to text inputs.  So, no.

[13:51:13.0000] <tantek>
similarly with a group of checkboxes and a multi-select

[13:51:23.0000] <TabAtkins>
That's not a generic argument, Hixie.

[13:52:17.0000] <TabAtkins>
So we're back again to you obviously arguing solely about naming.  You're attached to the name "readonly" referring to the specific "readonly" state that HTML uses, and are refusing to wrap your head around the concept possibly being more general.

[13:52:22.0000] <TabAtkins>
Mutable vs immutable.

[13:52:31.0000] <TabAtkins>
User-alterable vs Static.

[13:52:33.0000] <TabAtkins>
Whatever.

[13:52:51.0000] <TabAtkins>
The names are the least important part of this, because we're stuck with them (they're very old).  So stop hanging importance on them.

[13:52:57.0000] <Hixie>
this isn't just about HTML, e.g. Win32 has the same distinctions.

[13:52:59.0000] <Hixie>
I think your definition is bad, but putting that aside, how about "An element matches :read-write if it is enabled, and, for text fields, is not read-only; all other elements match :read-only"? or some such?

[13:53:18.0000] <Hixie>
where "enabled" and "read-only" can be host-language concepts

[13:53:42.0000] <Hixie>
(and the "enabled" state matches the one used for :enabled)

[13:54:15.0000] <TabAtkins>
That means that buttons will be :read-write, which is silly, because they're not mutable.  They're *enabled*, yes, but they've got no user-alterable state.

[13:54:30.0000] <Hixie>
they have hte state of being pushed in or not

[13:54:44.0000] <TabAtkins>
That's not a significant state that we wish to care about.

[13:54:58.0000] <TabAtkins>
(And it's already covered generally by :active.)

[13:55:18.0000] <Hixie>
this is a really strange definition you're trying to have, i'm not surprised you're having trouble describing it normatively

[13:55:37.0000] <Hixie>
what's the use case? maybe that's a better starting point for figuring out what the definition should be

[13:55:43.0000] <TabAtkins>
Good lord, no. It's the intuitive definition that I, fantasai, tantek, jgraham, and I expect almost anyone I ask would have.

[13:56:05.0000] <TabAtkins>
You're the only one in this conversation so far who seems to be having trouble with it, and *I can't figure out why*.

[13:56:07.0000] <tantek>
Hixie - what's the use case in leaving them out?

[13:56:19.0000] <tantek>
based on principle of least surprise, writability = modifiability

[13:56:39.0000] <sgalineau>
/me grabs popcorn

[13:57:06.0000] <TabAtkins>
Tantek made a great argument by analogy just a few lines ago.  Just read that.

[13:57:39.0000] <Hixie>
the text field vs select list thing? That's the same one you said earlier.

[13:58:05.0000] <TabAtkins>
Yes, number vs range vs select vs text input, and how they're all *the exact same thing*, just with different displays.

[13:58:28.0000] <tantek>
one might even say … different *appearances* ;)

[13:59:00.0000] <Hixie>
they're the same underlying data type, but they're no the same control

[13:59:36.0000] <lecuyer>
are there any non-modifiable inputs other than button?

[13:59:38.0000] <TabAtkins>
Duh.  But they all have the same notion of "user-alterability".

[13:59:48.0000] <Hixie>
i mean by that argument a <button> that when clicked alters the value of a <span> between two values, is equivalent to a radio button and equivalent to a text field and should be :read-write

[13:59:56.0000] <TabAtkins>
lecuyer: All the button types: button/reset/submit/image.  Also, hidden.

[14:00:19.0000] <TabAtkins>
Hixie: If we could magically and reasonably tell when JS was turning a button into something that altered state in the page in that way, I would agree with you.

[14:00:24.0000] <TabAtkins>
We can't, so I don't, and we don't.

[14:00:51.0000] <Hixie>
and technically <input type=submit> changes state (it changes what is submitted if it has a name) and <input type=reset> is clearly "user-alterable" since it affects every field in the form

[14:01:09.0000] <Hixie>
TabAtkins: oh wow, you'd actually want that button matching :read-write if you could??

[14:01:16.0000] <tantek>
OH: "Google+ is write-only, no one reads it."

[14:01:27.0000] <Hixie>
i really don't understand what you expect people to use this pseudo-class for

[14:01:38.0000] <Hixie>
if it only matched read-only-able elements, i could see the use case

[14:01:56.0000] <Hixie>
but having it match everything means you'd only ever be able to use it with more selectors to narrow it down

[14:02:00.0000] <TabAtkins>
Hixie: In the imaginary world where the halting problem was cheap to solve, and AI was just a library that you called?  Sure, knock yourself out.

[14:02:31.0000] <TabAtkins>
Please, god, stop willfully misinterpreting me.  The list of :read-write elements is finite, and explained in the bug.

[14:03:01.0000] <Hixie>
what am i misinterpreting?

[14:03:06.0000] <Hixie>
(i swear it's not willful)

[14:03:13.0000] <TabAtkins>
"having it match everything..."

[14:03:28.0000] <tantek>
clearly you guys would be having more fun in the WebApps WG f2f :)

[14:03:29.0000] <lecuyer>
It's right in the title

[14:03:38.0000] <Hixie>
you want :read-only, :read-write { } to match everything, no?

[14:05:30.0000] <tantek>
Hixie, why, what's the use case behind that reasoning?

[14:06:09.0000] <Hixie>
i have no idea what the use cases are for these pseudos, that's what i'm trying to determine. In the absence of use cases, I default to assuming that they should match what their names imply they should match.

[14:06:34.0000] <Hixie>
as far as i can tell, the spec says ":read-only, :read-write { }" should match everything.

[14:06:49.0000] <TabAtkins>
Text inputs have a state, .value, which the user can alter.  So do color inputs, range inputs, number inputs, etc.  Checkboxes have a state, .checked, which the user alters.  Selects have a state, .selectedIndex, which the user alters.

[14:06:51.0000] <Hixie>
("An element matches :read-write if it is user-alterable, as defined by the host language. Otherwise, it is :read-only.")

[14:07:01.0000] <TabAtkins>
That's the unifying thread which we keep repeating, over and over again, and which you keep claiming to not understand.

[14:07:49.0000] <Hixie>
TabAtkins: i understand (though i have difficulty figuring out where you draw the line, hence wanting the spec to be clearer); my question is, why would you want that definition? What use is the pseudo with that definition?

[14:07:50.0000] <TabAtkins>
Submit buttons are questionable (they are sometimes used instead of a radio group), but I fall on the side of not including them in the group.  They alter the state of the form, not themselves, and their effect is transient and part of the submission process, not an independent state.

[14:08:31.0000] <TabAtkins>
Man, I don't know the use for half of the user-input pseudos.  I'm too long out of webdev, and I never liked forms much anyway.  I'm just giving them reasonable definitions.

[14:08:45.0000] <Hixie>
:enabled and :disabled only apply to controls that _can_ be enabled and disabled, right? Why would :read-only and :read-write apply to everything?

[14:08:57.0000] <Hixie>
ok. I disagree that this definition is "reasonable".

[14:09:16.0000] <TabAtkins>
One issue at a time, please.  Whether :read-only is :not(:read-write) can be discussed later.

[14:09:28.0000] <Hixie>
i think it's the same issue, personally.

[14:09:31.0000] <TabAtkins>
Right now we're covering the elements which are reasonably one or the other, and talking about which category they're in.

[14:09:34.0000] <lecuyer>
In all the large web projects I've worked on, I dont' think I've ever seen someone use :read-write

[14:10:14.0000] <TabAtkins>
lecuyer: I wouldn't define it if I were starting from scratch.  But these are legacy pseudos.

[14:10:15.0000] <lecuyer>
or :read-only for that matter.  People use :enabled

[14:10:32.0000] <Hixie>
maybe we can drop them? I wonder how commonly used they are.

[14:10:38.0000] <Hixie>
do we have metrics on this?

[14:10:50.0000] <Hixie>
(does chrome instrumentation track individual pseudos?)

[14:11:23.0000] <lecuyer>
you're at google, just 'grep :read-only -r /dev/interwebs'

[14:11:45.0000] <Hixie>
unfortunately we don't crawl CSS as far as I know

[14:11:46.0000] <TabAtkins>
Hixie: It can track individual pseudos that we're interested in.

[14:12:31.0000] <lecuyer>
TabAtkins: has nobody ever been interested in :read-only? telling?

[14:13:21.0000] <TabAtkins>
lecuyer: No idea.

[14:13:42.0000] <Hixie>
TabAtkins: we should do this for these pseudos

[14:14:04.0000] <Hixie>
TabAtkins: since apparently none of us know what the use cases are, or how often they are used, we probably need more data to work out what to do.

[14:17:12.0000] <lecuyer>
How do you guys collect data on that?  Apart from announcing that it's being EOL'd and that you need usecases for not removing

[14:17:25.0000] <TabAtkins>
In Chrome, we can instrument it to count usage.

[14:21:59.0000] <lecuyer>
From what I can tell, most uses of uses of readonly is actually using the attr selector div[readonly] *not* using pseudos

[14:23:03.0000] <lecuyer>
s/most uses/the first page of search results/

[14:23:49.0000] <cabanier1>
Hixie: adding a fillrule to 'fill(path)' makes sense

[14:24:27.0000] <cabanier1>
Hixie: however, I think there should be an object that takes a path + fillrule, or a path + strokeparameters

[14:24:39.0000] <cabanier1>
Hixie: and you pass this object to fill

[14:25:14.0000] <cabanier1>
hixie: that way you can do the heavy lifting of stroking and resolving of the winding rules offline

[14:26:30.0000] <cabanier1>
hixie: that object would also accurately describe an area so you can associate it with a region

[14:35:30.0000] <lecuyer>
Has there been any discussion of aliasing/inheriting rules from another otherwise-unrelated class?

[14:37:10.0000] <lecuyer>
I have the problem of not being able to use classes in my html (lots and lots of data selectors), so it'd be really nice if we could somehow define a bunch of classes and then in an attribute selector apply a predefined class

[14:37:15.0000] <lecuyer>
If that makes any sense

[15:05:03.0000] <TabAtkins>
lecuyer: I recommend using SASS and the @extend directive for now.

[15:05:43.0000] <TabAtkins>
lecuyer: I'm slowly pursuing putting @extend in CSS itself.

[15:08:40.0000] <Hixie>
d'oh, cabanier left

[15:10:41.0000] <krit>
Hixie: he just came back from a travel

[15:12:55.0000] <lecuyer>
TabAtkins SASS is nice, and also generates about 1900 LOC I was hoping there could be an actually css solution in the future

[15:13:16.0000] <lecuyer>
TabAtkins: Want help with that? :)

[15:13:41.0000] <TabAtkins>
There's a reason it generates that much. ^_^

[15:13:41.0000] <annevk>
tantek: the handlers are defined by HTML already

[15:13:50.0000] <annevk>
tantek: also, you're destroying blame :/

[15:13:55.0000] <TabAtkins>
Nah, I'm already friends with Chris Eppstein.  Got all the help I need right now.

[15:15:55.0000] <annevk>
hober: time for design.spec.whatwg.org?

[15:16:26.0000] <hober>
annevk: i thought about picking it back up in the html wg

[15:16:34.0000] <hober>
annevk: but then i realized what i was thinking

[15:16:36.0000] <TabAtkins>
What's that for?

[15:16:42.0000] <annevk>
hober: don't do it there :)

[15:17:00.0000] <Hixie>
design spec?

[15:17:02.0000] <hober>
TabAtkins: the Living Standard of HTML Design Principles

[15:17:26.0000] <Hixie>
probably more wiki material

[15:17:31.0000] <hober>
yeah

[15:17:33.0000] <TabAtkins>
Ah, kk.

[15:20:32.0000] <lecuyer>
TabAtkins: any plans to allow nesting of rlues like in regions sans-'flows-from'?

[15:21:03.0000] <lecuyer>
ie how in SASS I can just put rules inside of each other and it'll automatically do the nesting for me?

[15:21:56.0000] <TabAtkins>
That's inherently ambiguous, grammatically.  Can't be done without magic or unlimited lookahead.

[15:22:00.0000] <TabAtkins>
SASS is okay with the latter.

[15:22:55.0000] <TabAtkins>
(You can't tell whether, in "foo { bar:baz ... }", the "bar:baz" part is a property whose value starts with "baz", or the start of a selector for a "bar" element with a ":baz" pseudoclass.)

[15:25:03.0000] <lecuyer>
TabAtkins you could simplify that by not allowing mixing of child selectors and actual rules, though couldn't you?

[15:25:32.0000] <tantek>
annevk - why split where the handlers are vs. where the other attributes are?

[15:25:35.0000] <TabAtkins>
That's not very useful, then.  It means you have to do "foo { color: blue; ...} foo { bar { ... } }", repeating yourself every time.

[15:25:45.0000] <tantek>
e.g. fullscreenEnabled, fullscreenElement ?

[15:25:49.0000] <TabAtkins>
And it's still ambiguous - how do you tell the difference between the two cases?

[15:26:00.0000] <annevk>
tantek: also, you didn't define the attributes

[15:26:03.0000] <tantek>
apologies for the blame destroying

[15:26:05.0000] <lecuyer>
a ; vs a {

[15:26:27.0000] <annevk>
tantek: because HTML defines all the attributes on Document/Element already

[15:26:29.0000] <TabAtkins>
That requires looking forward an arbitrary amount of tokens, and prevents us from ever using {} inside of a declaration.

[15:26:46.0000] <tantek>
annevk - but it doesn't define fullscreenEnabled, fullscreenElement

[15:26:51.0000] <annevk>
tantek: in any event, there's some outstanding issues around the events

[15:26:52.0000] <TabAtkins>
The CSS grammar is specially tuned to only require a single token of lookahead, because that helps performance and maintainability.

[15:26:56.0000] <annevk>
tantek: well those are not event handlers

[15:27:18.0000] <tantek>
annevk - but you said "HTML defines all the attributes on Document/Element"

[15:27:22.0000] <annevk>
tantek: HTML doesn't define everything... just event handlers and HTML stuff (such as the allowfullscreen attribute)

[15:27:23.0000] <lecuyer>
gotcha, where is that doc'd?

[15:27:24.0000] <tantek>
they're attributes right?

[15:27:31.0000] <TabAtkins>
lecuyer: http://dev.w3.org/csswg/css-syntax

[15:27:46.0000] <tantek>
ok I'm confused on how the split works then

[15:27:50.0000] <annevk>
tantek: I meant event handler attributes, not the other kind

[15:27:56.0000] <TabAtkins>
The fact that it's a 3-character lookahead tokenizer and 1-token lookahead parser isn't explicitly documented, but it's a property I tried hard to maintain while writing it.

[15:27:58.0000] <lecuyer>
Awesome. now I can stop busting into a conversation with things to get shot down :)

[15:28:08.0000] <annevk>
anyway, I'll sort this out at some point

[15:28:24.0000] <tantek>
annevk - sorry - that's what I get for trying to improve things ;)

[15:28:44.0000] <tantek>
i'm fine with wherever the definition/declarations go

[15:29:09.0000] <tantek>
if onfullscreenchange and onfullscreenerror are defined in HTML, then can we at least put references to those definitions in Fullscreen?

[15:29:14.0000] <tantek>
(hyperlinks)

[15:29:17.0000] <tantek>
so they're discoverable?

[15:29:56.0000] <tantek>
as a webdev I don't expect to go poking through HTML just in case it might define things that my spec might specifically need/use that's so spec-specific

[15:30:17.0000] <annevk>
yeah I guess, once we sort out the details

[15:30:22.0000] <tantek>
ok cool

[15:30:46.0000] <annevk>
i generally try to avoid adding makeup until stuff is somewhat implemented

[15:31:08.0000] <tantek>
well those eventhandlers are implemented in webkit and gecko so...

[15:31:26.0000] <Hixie>
am i right in assuming that it's not possible to convert any path plus either the nonzero rule or the oddeven rule to an equivalent path that is the same in both evenodd and nonzero modes?

[15:32:03.0000] <Hixie>
seems like you'd have to do something that affects where dashes are drawn, at a minimum

[15:32:10.0000] <hober>
in general that's not possible, yeah

[15:32:31.0000] <Hixie>
k

[15:32:39.0000] <Hixie>
wonder what cabanier wanted then

[15:32:43.0000] <TabAtkins>
Yeah, you can have a path that is equivalent for filling, but not the rest.

[15:33:03.0000] <TabAtkins>
It can't be equivalent even for solid strokes unless you convert the strokes into filled regions.

[15:33:20.0000] <Hixie>
maybe he just wanted an object that remembered a particular state so you didn't have to keep passing that around

[15:33:23.0000] <Hixie>
not a Path, but a new object

[15:33:26.0000] <Hixie>
that would make sense i guess

[15:33:29.0000] <Hixie>
for some future version

[15:41:32.0000] <Hixie>
cabanier: thanks

[15:42:50.0000] <cabanier>
hixie: I just reconnected. will read the log

[15:45:27.0000] <cabanier>
hixie: yes, the object would remember the state. I made a proposal on whatwg a couple of months ago and wrote a blog entry: http://blogs.adobe.com/webplatform/2013/01/31/revised-canvas-paths/

[15:45:35.0000] <cabanier>
hixie: just some ideas

[15:47:27.0000] <Hixie>
cabanier: yeah the union thing is something that would indeed be helpful

[15:47:46.0000] <Hixie>
cabanier: but defining exactly what the resulting path is seems non-trivial

[15:48:35.0000] <cabanier>
Hixie: that's true. You have to calculate the intersection

[15:48:53.0000] <cabanier>
Hixie: there are libraries out there that do it

[15:48:55.0000] <Hixie>
cabanier: you have to define it in enough detail that dashed lines end up the same

[15:49:12.0000] <cabanier>
Hixie: google's skia people are working on a good one

[15:49:26.0000] <cabanier>
Hixie: yes. that should be no problem.

[15:49:44.0000] <Hixie>
i think "no problem" is probably optimistic

[15:49:48.0000] <Hixie>
but ok :-)

[15:49:54.0000] <cabanier>
Hixie: are you thinking about where the path would start?

[15:50:03.0000] <Hixie>
for instance

[15:50:10.0000] <Hixie>
and what direction it's in, and everything like that

[15:50:11.0000] <cabanier>
yes

[15:50:14.0000] <cabanier>
true

[15:50:39.0000] <Hixie>
incidentally, i don't think we need a new object for this -- seems like you should be able to use Path for this, since the shape is basically just a path, still

[15:50:40.0000] <cabanier>
I guess that would be hard to define

[15:51:07.0000] <Hixie>
it's really just another way to add a path, one that happens to be destructive to the existing data

[15:51:09.0000] <cabanier>
it's not really a path anymore

[15:51:17.0000] <Hixie>
if you can stroke it, it seems very pathy

[15:51:45.0000] <cabanier>
true. maybe you shouldn't be able to stroke it :-)

[15:51:55.0000] <Hixie>
that's the only example you gave :-P

[15:52:04.0000] <Hixie>
i gotta go, meeting

[15:52:08.0000] <cabanier>
k

[15:52:12.0000] <Hixie>
but this is definitely something we should do eventually

[15:52:18.0000] <Hixie>
if we can define it convincingly

[15:52:20.0000] <Hixie>
bbl

[16:11:56.0000] <annevk>
heh http://polyglotconf.com/

[16:12:21.0000] <annevk>
(don't worry, it's not about XHTML)

[16:53:57.0000] <Hixie>
i'm starting to really not like positional arguments

[16:54:12.0000] <Hixie>
if only named arguments weren't so damn verbose

[16:54:37.0000] <TabAtkins>
I agree, but options objects make it hard to justify named arguments now. :/

[16:57:07.0000] <cabanier>
TabAtkins: how many API's are using option objects these days?

[16:57:14.0000] <Hixie>
options objects are essentially named arguments

[16:57:16.0000] <TabAtkins>
A decent number.

[16:57:19.0000] <TabAtkins>
Hixie: Yeah.

[16:57:24.0000] <Hixie>
and they're really verbose :-)

[16:57:40.0000] <Hixie>
/me is possibly even less of a fan of those

[16:58:11.0000] <cabanier>
really? last time I checked, they were very broken in the webkit/blink preprocessor

[16:58:32.0000] <cabanier>
Hixie: JS people love them

[16:58:33.0000] <Hixie>
my problem right now is isPointInPath()

[16:58:45.0000] <cabanier>
yeah

[16:58:52.0000] <Hixie>
which up to now has had the syntax (x, y) or (path, x, y)

[16:59:17.0000] <Hixie>
everything else that optionally takes a path becomes (), (path), (fillRule), (path, fillRule)

[16:59:38.0000] <Hixie>
so where the heck do i put the fillRule on isPointInPath?


2013-04-26
[17:00:02.0000] <TabAtkins>
Your first mistake was the argument of everything that optionally takes a path.

[17:00:22.0000] <cabanier>
for (x, y) it becomes (x, y. fillrule)

[17:00:28.0000] <Hixie>
constraining this, is that implementations have already implemented (x, y) and (x, y, fillRule)

[17:00:36.0000] <cabanier>
yes

[17:00:39.0000] <Hixie>
so (path, fillRule, x, y) would be ugly

[17:00:43.0000] <TabAtkins>
Position should, generally, be a unique identifier for the argument.  Overloading on argument list length to give different positions different meanings is a bad idea.

[17:00:48.0000] <Hixie>
but (path, x, y, fillRule) is even worse...

[17:00:54.0000] <zewt>
optional arguments at the beginning are evil

[17:00:54.0000] <TabAtkins>
You should have fallen down to options objects earlier.

[17:01:09.0000] <Hixie>
TabAtkins: too late for that now...

[17:01:29.0000] <TabAtkins>
zewt: No, optional arguments have their place, when they're truly optional, and are chained-optional (that is, you never want to provide the second optional argument without specifying the first).

[17:01:38.0000] <cabanier>
I hope those path methods will go away

[17:01:41.0000] <TabAtkins>
Hixie: Is it?  Do we have implementations?

[17:01:44.0000] <cabanier>
noone implemented them

[17:01:45.0000] <krit>
Hixie: Blink and WebKit use currentPath to share path objects

[17:01:46.0000] <zewt>
TabAtkins: ... that's optional arguments at the end

[17:01:56.0000] <Hixie>
(and i don't generally agree. the first argument of something like this should always be the main thing you're operating on, imho)

[17:02:00.0000] <krit>
Hixie: you can just set the currentPath with the path you want

[17:02:06.0000] <krit>
Hixie: and then ask the context

[17:02:26.0000] <Hixie>
krit: ew

[17:02:33.0000] <Hixie>
krit: that's even worse :-)

[17:02:54.0000] <krit>
Hixie: at the moment it is not nice, that is where cabanier's proposal comes in

[17:03:10.0000] <lecuyer>
TabAtkins: qq about padding-bottom.  Is it supposed to be relative to the actual width of the element, or the available width around the element (in the case of max-width)?

[17:03:18.0000] <krit>
Hixie: for WebKit and Blink, Path is just a storage of Path segments

[17:03:19.0000] <TabAtkins>
zewt: Yes, if you have optional arguments not at the end, you're doing things wrong.  ^_^

[17:03:23.0000] <krit>
Hixie: nothing more

[17:03:32.0000] <TabAtkins>
lecuyer: Whatever the spec says - I dont' remember off the top of my head.

[17:03:34.0000] <Hixie>
krit: right, same in the spec

[17:03:36.0000] <zewt>
TabAtkins: ... but i said "optional arguments at the beginning". heh

[17:03:43.0000] <Hixie>
krit: it's the "currentPath" thing that's ugly :-)

[17:03:54.0000] <TabAtkins>
zewt: ...I didn't see that part of your comment.  Apologies.

[17:04:07.0000] <zewt>
TabAtkins: option objects and language-level named arguments can complement each other nicely, eg. Python's **args

[17:04:19.0000] <TabAtkins>
Yes, if you have it.

[17:04:21.0000] <krit>
Hixie: well, it is more than that

[17:04:22.0000] <cabanier>
Hixie: currentpath is just an opaque holder of a bunch of path operations

[17:04:32.0000] <krit>
Hixie: you have path . http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-path-addpathbystrokingpath

[17:04:42.0000] <TabAtkins>
zewt: It would be nice to pursue, in a future ES version, Pythonic named arguments.

[17:04:43.0000] <krit>
/me hates link replacing

[17:04:45.0000] <lecuyer>
I've found in implementation it's usually implemented as the latter, but it'd be nice if it wasn't.

[17:04:58.0000] <TabAtkins>
(though you need a different syntax than Python, as that syntax is already allowed and means something different in JS)

[17:05:07.0000] <Hixie>
krit: addPathByStrokingPath is just a way to add more path segments

[17:05:08.0000] <TabAtkins>
lecuyer: Can't change it.

[17:05:50.0000] <krit>
Hixie: sure, but not always implementable

[17:05:55.0000] <cabanier>
Hixie: the output of that is undefined

[17:06:00.0000] <Hixie>
?

[17:06:01.0000] <Hixie>
how so

[17:06:03.0000] <cabanier>
Hixie: probably not what you want

[17:06:06.0000] <krit>
Hixie: or better there just exist some propritary libs that can do that

[17:06:09.0000] <Hixie>
the spec defines it in great detail...

[17:06:11.0000] <lecuyer>
It says in the spec that it's relative to the width of the element, but given that everyone seems to have gotten it wrong I was wondering if they didn't :)

[17:06:30.0000] <cabanier>
Hixie: as currently defined, the path segments will overlap and caused all sort of drawing issues

[17:06:48.0000] <krit>
Hixie: you usually don't want to fullfill tasks of graphics libraries in browsers

[17:06:56.0000] <Hixie>
well, depends what you want, obviously

[17:06:59.0000] <cabanier>
:-)

[17:07:11.0000] <cabanier>
I'd expect it to render as if I stroked the path

[17:07:24.0000] <zewt>
krit: s/you/i/

[17:07:27.0000] <Hixie>
well that gets back to the thing we were talking about earlier

[17:07:33.0000] <Hixie>
which lacks a specification

[17:07:34.0000] <cabanier>
and not get unpainted areas where the strokes meet

[17:07:52.0000] <cabanier>
that one is actually spec-able

[17:08:06.0000] <cabanier>
it's stroking of shapes/combined path which is hard

[17:08:08.0000] <zewt>
there's quite a lot of "graphics library" tasks in browsers, heh

[17:08:13.0000] <TabAtkins>
lecuyer: I don't know where you're seeing that it's relative to the width of the element.  The CSS 2.1 spec defines percentages in padding to "refer to the width of containing block".

[17:08:15.0000] <cabanier>
since they don't have a 'start' point any more

[17:08:24.0000] <krit>
zewt: you as an content author may wish that. I am indeed talking as an implementer

[17:08:52.0000] <Hixie>
cabanier: everything is spec-able, it just needs to be specced

[17:08:58.0000] <zewt>
krit: you're a bit late (re: canvas, webgl, css filters)

[17:09:07.0000] <lecuyer>
TabAtkins: sorry, I must have misread it

[17:09:23.0000] <krit>
zewt: I don't see the context in your list

[17:09:24.0000] <cabanier>
Hixie: we *could* spec the planarization algorithm in detail

[17:09:50.0000] <zewt>
those are all things that overlap with graphics libraries, of course

[17:09:58.0000] <krit>
right

[17:10:05.0000] <Hixie>
cabanier: gonna have to if we want it implemented interoperably

[17:10:19.0000] <zewt>
there are things that are better done in script, of course, but that's a bit more specific than "tasks of graphics libraries"

[17:10:20.0000] <cabanier>
Hixie: that would be a massive undertaking though. the skia folks can likely provide the algorithm

[17:10:21.0000] <krit>
zewt: and none of them need path planarization

[17:10:43.0000] <TabAtkins>
lecuyer: No problem.

[17:10:51.0000] <Hixie>
cabanier: massive undertakings are what we do

[17:11:03.0000] <Hixie>
cabanier: that's what distinguishes the web platform from other platforms

[17:11:10.0000] <cabanier>
Hixie: well, not letting you stroke a union/intersect/xor path will make it a lot easier

[17:11:46.0000] <cabanier>
Hixie: I need to think a bit more about it

[17:12:32.0000] <krit>
Hixie: and things like addText require access to font data, which some browsers can't or are not willing to implement (independent of the path planarization discussion of cabanier)

[17:13:02.0000] <krit>
Hixie: Path planarization is not only very hard to specify, it is also very hard to implement

[17:13:17.0000] <Hixie>
krit: well, again... :-)

[17:13:19.0000] <Hixie>
"it

[17:13:19.0000] <krit>
Hixie: even harder to implement in a interopearable way

[17:13:20.0000] <Hixie>
er

[17:13:30.0000] <Hixie>
"it's hard" is not a good argument against doing something :-)

[17:13:45.0000] <cabanier>
Hixie: very true!

[17:14:13.0000] <krit>
Hixie: browsers also rely on the path data of the geraphic library

[17:14:28.0000] <krit>
Hixie: the path data does not reflect what you put into the lib usually

[17:14:53.0000] <cabanier>
Hixie: it needs to be done somehow. I think the *actual* algorithm doesn't need to be specified. Just how it supposed to work (find intersections, fix winding, remove shared lines, etc)

[17:14:54.0000] <krit>
Hixie: arc is not an arc in path data but cubic or quadratic curves

[17:15:41.0000] <Hixie>
cabanier: so long as it's unambiguous under all situations, whether it's defined imperatively or declaratively is just an editorial choice

[17:15:46.0000] <krit>
cabanier: it just is not really implementable in an interoperable way as long as browsers don't fundamentaly change the way they use Canvas paths

[17:15:58.0000] <Hixie>
cabanier: i usually do things imperatively because it's easier to reason about whether things are defined unambiguously

[17:16:13.0000] <krit>
and I don't see any need to lift up path representation to the browser from the graphic library

[17:16:15.0000] <cabanier>
hixie: yeah. That should be doable.

[17:16:40.0000] <cabanier>
krit: noone can figure out that an arc became a set of bezier though. There's no access to that

[17:16:47.0000] <cabanier>
(nor should there be)

[17:17:02.0000] <krit>
cabanier: that is correct, but this planarization requires it

[17:17:16.0000] <krit>
cabanier: a requirement from adding paths

[17:17:17.0000] <cabanier>
krit: don't think so

[17:17:32.0000] <krit>
cabanier: it does if you want to follow an algorithm

[17:17:53.0000] <krit>
cabanier: I am not even sure if all path segment primitives are supported by the canvas spec

[17:18:01.0000] <Hixie>
krit: the algorithms in specs aren't prescriptive of how you implement something

[17:18:02.0000] <cabanier>
krit: they're all path segments that potentially intersect

[17:18:03.0000] <krit>
cabanier: that are used by graphics libraries

[17:18:13.0000] <Hixie>
krit: they're just sample algorithms of black boxes

[17:18:19.0000] <Hixie>
krit: all that matters is that the inputs and outputs match

[17:18:23.0000] <Hixie>
krit: for all inputs

[17:18:42.0000] <krit>
Hixie: true

[17:19:38.0000] <krit>
Hixie: I care more about performance and interoperability in this case

[17:20:09.0000] <cabanier>
krit: is performance an issue for the spec?

[17:20:10.0000] <krit>
Hixie: A different approach where you don't have the access to the path (implementation wise) seems to be less error prone

[17:20:24.0000] <krit>
cabanier: for sure not, but it is for implementations and authors

[17:20:41.0000] <cabanier>
krit: yes

[17:21:05.0000] <Hixie>
krit: not sure what you're arguing, we seem to be in agreement :-)

[17:21:50.0000] <krit>
Hixie: not when it comes to styled paths

[17:22:06.0000] <cabanier>
Hixie: I will update my proposal and send it out to the list again

[17:22:07.0000] <krit>
Hixie: this is what addPathByStrokeingPath makes it cimplicated

[17:22:28.0000] <cabanier>
krit: that one should be fixed

[17:22:37.0000] <krit>
cabanier: fixed?

[17:22:48.0000] <cabanier>
replaced with something else

[17:23:27.0000] <krit>
cabanier: if you want to have the path along a styled path, it mostly requires path access

[17:23:38.0000] <krit>
cabanier: (of course not in all cases)

[17:23:42.0000] <cabanier>
krit: going to dinner now :-)

[17:23:55.0000] <cabanier>
krit: we can talk about it later

[17:23:58.0000] <krit>
cabanier: but definitely with pointInPath for instance

[17:24:00.0000] <Hixie>
krit: i don't have any trouble saying the browsers should have path access

[17:24:35.0000] <krit>
Hixie: Yes, but this brings the implementation complexity up from the graphic library to the browser

[17:24:44.0000] <krit>
Hixie: (at least at the moment)

[17:24:59.0000] <Hixie>
krit: i don't see why we would distinguish between "graphics library" and "browser"

[17:25:37.0000] <krit>
Hixie: Because implementations (talking about WebKit, Blink and Gecko) build on top of the path handling of the graphic library

[17:26:01.0000] <Hixie>
krit: so?

[17:26:07.0000] <Hixie>
krit: the libraries can change...

[17:26:25.0000] <krit>
Hixie: especially dash array and things like that influence hit testing and all that needs to be integrated when you apply styled paths

[17:26:59.0000] <krit>
Hixie: sure, as long as they don't, you require browsers to do the job currently done by graphics libraries

[17:27:20.0000] <Hixie>
krit: again, i don't understand the distinction or why that would be a problem.

[17:27:29.0000] <Hixie>
krit: that's like saying "browsers will have to do the job of XML parsers"

[17:27:43.0000] <Hixie>
krit: or "browsers will have to do the job of character encoding libraries"

[17:27:46.0000] <Hixie>
well, yes

[17:27:49.0000] <Hixie>
welcome to being a browser

[17:27:51.0000] <krit>
Hixie: which they don't do either. They rely on libs for that

[17:27:56.0000] <Hixie>
yeah... no

[17:28:05.0000] <krit>
Hixie: no for HMTL parser

[17:28:10.0000] <Hixie>
at least, not off-the-shelf libraries

[17:28:39.0000] <Hixie>
(then again, as far as i can tell, they all have their own graphics libraries these days too)

[17:30:56.0000] <krit>
Hixie: the reason why I don't want the browser to do the job is redundancy (the represenation still needs to be done by the graphic library), performance (all the things need to match expectations of authors or they don't use it), interoperability (which is hard to reach on differen starting points the browsers are), implementation complexity (which is hard to maintain and extremely error prone, after all we are browser vendors and no algebra experts)

[17:31:40.0000] <Hixie>
krit: you keep referring to the graphics library as a separate concept from the browser. it need not be. just view it as one unit of software.

[17:32:06.0000] <Hixie>
krit: even if implemented in a modular reusable fashion, the graphics "library" can provide exactly the api the browser needs

[17:32:13.0000] <Hixie>
krit: to do whatever we want it to do

[17:32:23.0000] <krit>
Hixie: yes of course it doesn't need to be, but it is at the moment for very good reasons

[17:33:08.0000] <Hixie>
krit: as far as i can tell, all browsers have dedicated graphics libraries under the control of the same development team, not off-the-shelf libraries.

[17:33:22.0000] <Hixie>
krit: so i disagree

[17:34:02.0000] <krit>
Hixie: that is not true. So far it is JUST Google that has that

[17:34:17.0000] <Hixie>
at least google, microsoft, and apple.

[17:34:44.0000] <krit>
Hixie: Mozilla relies on  Cairo/DirectX/maybe Skia, WebKit is based on a lot of graph libs where the browser team does not have influence on the grpahic lib teams.

[17:34:57.0000] <krit>
Hixie: MS and Apple just in theory :)

[17:36:01.0000] <Hixie>
i have no problem with the idea that browsers will heavily influence how their graphics engine develops

[17:36:09.0000] <krit>
Hixie: Google's Chrome/Blink tool is the only team that has direct control on the development of their graphic library

[17:37:02.0000] <krit>
Hixie: That is ok from the spec author point of view. I am talking from the implementer point of view.

[17:38:51.0000] <Hixie>
i am too

[17:39:07.0000] <Hixie>
as implementors, we've taken over the encoding libraries, parsing libraries, all kinds of stuff

[17:39:11.0000] <Hixie>
UI widget libraries

[17:39:26.0000] <Hixie>
we've reimplemented accessibility layers

[17:39:47.0000] <Hixie>
we hook into the OS input layer much higher than most apps

[17:39:52.0000] <Hixie>
or lower, i guess

[17:40:18.0000] <Hixie>
graphics is just the next obvious one that will need to be assimilated to get optimal performance

[17:40:32.0000] <Hixie>
we have our own scripting engines

[17:40:39.0000] <Hixie>
we have our own memory management routines

[17:40:48.0000] <Hixie>
we have our own string implementations

[18:17:27.0000] <TabAtkins>
Ugh, simple bash question.  I want to pass all bash function arguments to a python script.  How to do?

[18:17:53.0000] <TabAtkins>
I can easily pass *individual* arguments with $1 or whatever, but can't figure out how to do all of them.

[18:18:25.0000] <heycam>
"$@"

[18:18:29.0000] <TabAtkins>
Hah, just now foudn that.

[18:18:40.0000] <TabAtkins>
Was hidden in one of the google results that didn't look helpful at first glance.

[18:18:55.0000] <heycam>
searching for shell script syntax is… not an easy thing

[18:19:44.0000] <TabAtkins>
Indeed.

[18:20:15.0000] <TabAtkins>
I'm trying to make a python script that can change the shell directory.  Looks like best way is to have the script echo the path, and have a bash function cd to that.

[18:58:45.0000] <krit>
Hixie: I am sorry, I didn't see your reply. Each of these features have been checked for positive and negative effects. And this will continue, even with Paths. In WebKit we had to do this choices multiple times. For SVG we decided to cover the data in the browser to support certain features that are required by SVG 1.1. The Blink investigates in reverse this decision and use the capabilities of the graphic library instead again. (As you noted befor

[19:07:28.0000] <birtles>
are there any guidelines regarding throwing exceptions from constructors in Web APIs?

[19:47:10.0000] <cabanier>
Hixie: I agree with your points about the browser vs graphics libraries.

[00:17:38.0000] <sangwhan_>
I assume no NSS maintainers are in this chat?

[00:19:04.0000] <sangwhan_>
/me takes that as a yes

[00:21:01.0000] <Ms2ger>
Doubt it

[00:32:20.0000] <Ms2ger>
http://w3cmemes.tumblr.com/post/48861166006/does-anyone-want-to-put-their-hand-up-and-help

[02:50:28.0000] <annevk>
MikeSmith: fwiw, https://wiki.mozilla.org/WebAPI/KeboardIME

[04:07:36.0000] <MikeSmith>
annevk: thanks

[04:07:42.0000] <MikeSmith>
/me reads

[04:08:08.0000] <MikeSmith>
annevk: interesting

[04:08:12.0000] <annevk>
MikeSmith: my rough understanding is that we want an API that allows implementing an IME from scratch

[04:08:26.0000] <MikeSmith>
hmm

[04:08:43.0000] <MikeSmith>
so we talked here yesterday about that

[04:08:57.0000] <MikeSmith>
with James Craig and Dominic Manzonni

[04:09:17.0000] <MikeSmith>
Dominic Mazzoni

[04:09:48.0000] <MikeSmith>
my understanding from talking with them is that you're not going to be able to make that accessible

[04:10:33.0000] <MikeSmith>
they pointed out that e.g., CodeMirror and Cloud9/ACE etc. are not accessible to screen-reader/AT users

[04:12:17.0000] <annevk>
I guess that would depend on what primitives you expose no?

[04:12:45.0000] <annevk>
But this is not my area of expertise at all.

[04:13:19.0000] <annevk>
I just know this is in the works...

[04:14:29.0000] <MikeSmith>
annevk: ok

[04:15:04.0000] <MikeSmith>
I see the history of that wiki page shows Yuan Xuleia

[04:16:00.0000] <MikeSmith>
I would hope that whoever is working it would post feedback or an alternate proposal to public-webapps

[04:16:21.0000] <MikeSmith>
feedback on the existing IME API draft that's been published

[04:18:05.0000] <annevk>
Yeah I suggested they do that somewhere

[04:18:38.0000] <MikeSmith>
k

[04:26:47.0000] <annevk>
lol

[04:27:03.0000] <annevk>
The minutes mention dropping keyboard events from DOM3

[04:27:32.0000] <annevk>
Which makes sense... but... at what point is someone going to step up and just define the user interaction model already?

[04:27:56.0000] <annevk>
Is there some kind of benefit to keeping the details and have everyone run in circles?

[04:28:42.0000] <MikeSmith>
that stuff I've not been following

[04:28:52.0000] <MikeSmith>
I think I was actually sleeping during that discussion

[04:29:33.0000] <annevk>
It makes more sense to sleep, since we're not really any further than we were 10 years ago on that subject.

[04:30:02.0000] <annevk>
And a WebApps WG meeting full of people not interested in doing too much work is not going to change that.

[04:34:36.0000] <jgraham>
One of the sad truths of life is that it is easy to get money for people to go to meetings and hard to get money for people to do actual work. PAying for 100 people to attend a four day meeting costs the same as employing someone like annevk or Hixie for a year.

[04:35:57.0000] <smaug____>
annevk: keyevents will not be dropped from DOM3

[04:36:08.0000] <smaug____>
it was just discussed

[04:36:26.0000] <SimonSapin>
annevk: So you’re worth 400 days of work a year :)

[04:36:40.0000] <smaug____>
and someone mentioned that then the same what happened with D2 would happen with D3

[04:37:40.0000] <smaug____>
jgraham: it is hard to find people to write specs

[04:37:56.0000] <smaug____>
and almost as hard to find people to review specs :)

[04:38:12.0000] <smaug____>
and someone should write tests too

[04:38:47.0000] <jgraham>
and someone should review tests :)

[04:40:43.0000] <Ms2ger>
Fortunately people are happy to implement things

[04:41:09.0000] <smaug____>
it is easier to find people to implement things

[04:41:49.0000] <smaug____>
(people should review the specs when implementing them, but that doesn't always or usually happen)

[04:42:07.0000] <jgraham>
It's not just that

[04:42:25.0000] <jgraham>
It's that people understand the model of employing people to implement stuff

[04:44:02.0000] <jgraham>
Or, at least, the benefits of paying people to implement stuff are obvious and short-term

[04:44:10.0000] <jgraham>
You get more stuff, faster

[04:44:48.0000] <jgraham>
The benefits of paying people to work on writing specs or tests are less obvious, and suffer more from "tragedy of the commons" effects

[04:53:28.0000] <hallvors>
is annevk around?

[04:59:19.0000] <zcorpan>
so we have HTML defining HTMLElement#style, SVG defining SVGElement#style and CSSOM defining ElementCSSInlineStyle#style (which "is implemented by Element objects"), and they're all different

[05:00:05.0000] <Ms2ger>
Of course

[05:01:20.0000] <zcorpan>
i guess i should fix ElementCSSInlineStyle#style and make the HTML and SVG specs say (HTML|SVG)Element implements ElementCSSInlineStyle

[05:02:47.0000] <zcorpan>
wonder why SVG doesn't require CSS support

[05:05:02.0000] <zcorpan>
what's the right thing when CSS isn't supported? Should .style be absent? or return null?

[05:06:11.0000] <zcorpan>
absent seems better

[05:06:20.0000] <Ms2ger>
In that case, I don't think any of the interfaces in cssom should exist

[05:06:44.0000] <zcorpan>
yeah

[05:12:27.0000] <SimonSapin>
Doesn’t SVG2 require CSS support? Or did I make that up?

[05:17:32.0000] <jgraham>
Does SVG2 exist in any meaningful sense?

[05:26:48.0000] <annevk>
hallvors: am now

[05:27:31.0000] <hallvors>
great, have a question

[05:27:49.0000] <hallvors>
I'm looking over the XHR tests, fixing some bugs

[05:28:19.0000] <hallvors>
main question is: has the spec changed to "fire readystatechange only when readyState actually changes" or not?

[05:28:43.0000] <hallvors>
I think it has.. and trying to read the processing steps, I can't find any place we don't..

[05:28:53.0000] <hallvors>
but it's a bit hard to follow all the steps..

[05:29:29.0000] <annevk>
not if abort() sets it to UNSENT

[05:29:42.0000] <annevk>
but yeah, I remember one event for send() has been removed

[05:30:54.0000] <hallvors>
so expected outcome of http://w3c-test.org/web-platform-tests/master/XMLHttpRequest/open-open-sync-send.htm and similar tests should be aligned..

[05:31:26.0000] <annevk>
https://github.com/whatwg/xhr/commit/15e86b74b03b9bb80186d6edfa8be091d2312522 was over a year ago it seems

[05:31:32.0000] <hallvors>
Opera (Presto) and Chrome mostly agree with that new model, Firefox doesn't

[05:32:09.0000] <annevk>
yeah, so says my associated email

[05:32:14.0000] <hallvors>
Cool, will fix the tests. Only a year late :)

[05:32:26.0000] <hallvors>
Thanks for confirming ;)

[05:32:31.0000] <annevk>
great

[05:41:51.0000] <hallvors>
annevk: if you're still here :) by my reading of the spec (in its current state), this test should do assert_throws : http://w3c-test.org/web-platform-tests/master/XMLHttpRequest/open-url-multi-window-2.htm

[05:42:15.0000] <hallvors>
(creates XHR from IFRAME window, removes IFRAME from parent before open())

[05:44:40.0000] <annevk>
yeah, the document would not be fully active

[05:44:48.0000] <annevk>
same if you navigate the iframe

[05:46:03.0000] <annevk>
well, I think that's how it's defined; navigation and multiple browsing contexts is unfortunately still somewhat hairy

[05:57:50.0000] <zcorpan>
why does http://www.w3.org/TR/SVG2/types.html#InterfaceSVGElement have xmlbase, xmllang, xmlspace? isn't that a bit of layering violation?

[05:58:57.0000] <Ms2ger>
Poke heycam :)

[05:59:11.0000] <annevk>
SVG is full of those

[05:59:34.0000] <annevk>
Ms2ger: nah, please let him focus on IDL stuff

[05:59:41.0000] <Ms2ger>
Mm

[06:00:05.0000] <Ms2ger>
Find someone else to poke, then :)

[06:00:22.0000] <annevk>
Ms2ger?

[06:00:32.0000] <Ms2ger>
/me pokes annevk back

[06:01:11.0000] <annevk>
should've raised shield

[06:28:57.0000] <annevk>
So seems like request takes yet another fricking flag :(

[06:29:05.0000] <annevk>
The "use URL credentials flag"

[06:36:06.0000] <zcorpan>
i sent an email to www-svg

[06:51:13.0000] <annevk>
I hope once I've defined all this sometime will point out a way to reduce the flags

[06:51:55.0000] <annevk>
sometime, someone, either way

[06:58:05.0000] <hallvors>
hm.. I have no idea what the pass condition for http://w3c-test.org/web-platform-tests/master/XMLHttpRequest/open-url-multi-window-4.htm should be

[07:02:05.0000] <hallvors>
Firefox, Opera (Presto): terminate request with no further events when IFRAME is removed. Chrome: completes request to readyState=4 but responseText is "" so it's pretty much terminated with an extra event for "DONE" state

[07:03:05.0000] <hallvors>
annevk: thoughts?

[07:07:34.0000] <annevk>
hallvors: in a bit

[07:07:38.0000] <annevk>
like 40min

[07:07:46.0000] <zcorpan>
ok have a nice weekend guys

[07:08:37.0000] <hallvors>
annevk: probably won't  be here in 40min, could you just post your thoughts here anyway and paste the discussion that occurs in an E-mail to me? ;-)

[07:12:37.0000] <Ms2ger>
I found a picture for the fetch spec: http://bit.ly/13zyutD

[07:41:55.0000] <annevk>
hallvors: so I think that should actually just work

[07:42:21.0000] <annevk>
hallvors: the base URL and everything is established, there's no reason for it to fail if implementations follow the spec (harhar)

[09:18:37.0000] <matjas>
annevk: i was looking at http://mimesniff.spec.whatwg.org/#determining-the-sniffed-media-type-of-a-resource and figured that Step 5 would apply there, no?

[09:19:06.0000] <Ms2ger>
WebApps discussing licensing and c/p'ing specs again \o/

[09:19:29.0000] <annevk>
matjas: yeah that's the culprit

[09:21:19.0000] <matjas>
so iOS Safari violates the spec, hence my tweet \o/ glad i looked it up before tweeting (and glad i understood correctly)

[09:22:00.0000] <annevk>
matjas: I doubt many people got that subtlety though

[09:22:07.0000] <annevk>
and the guy complaining didn't mention that document

[09:22:30.0000] <annevk>
so he might not have realized his exact byte sequence for "Content-Type: text/plain" is what causes other browsers not to sniff

[09:24:21.0000] <annevk>
ah you did

[09:42:54.0000] <MikeSmith>
hober, divya - so I have a flight out tonight at 23:45 from SFO. So we could meet up from dinner if yall have time

[09:45:21.0000] <hober>
MikeSmith divya: that might work for me; i'll check with erin

[09:47:37.0000] <divya>
MikeSmith: YA!

[09:47:51.0000] <divya>
MikeSmith: hober what time?

[09:48:00.0000] <divya>
i hav something at 7.30

[09:48:40.0000] <hober>
MikeSmith divya: there's also an indieweb meetup of some kind, maybe tantek can fill us in

[09:53:20.0000] <divya>
hober: can you message me when you know better. i am on and off irc

[09:53:33.0000] <divya>
MikeSmith: do you have us number?

[09:53:40.0000] <divya>
MikeSmith: else DM me on twitters

[09:54:36.0000] <MikeSmith>
divya: +81-80-2387-5995

[09:55:29.0000] <annevk>
people reading the logs, you can now bug MikeSmith day and night

[09:55:32.0000] <divya>
MikeSmith: thnx!

[09:55:33.0000] <divya>
ahahahahha

[09:55:41.0000] <Ms2ger>
/me fires up his address book

[10:13:06.0000] <tantek>
hober, MikeSmith see indiewebcamp.com/events

[10:22:02.0000] <MikeSmith>
tantek: thanks

[10:22:30.0000] <TabAtkins>
zcorpan: SVG requires CSS support in practice.  In 1.1 they were loathe to codify that, but if it's not already in SVG2, it's only because someone hasn't gotten to it yet.

[10:22:47.0000] <annevk>
morning tantek

[10:22:55.0000] <annevk>
and morning TabAtkins

[10:23:00.0000] <TabAtkins>
Yo.

[10:23:04.0000] <TabAtkins>
annevk: I think you lied to me!

[10:23:05.0000] <annevk>
autocomplete...

[10:23:11.0000] <annevk>
TabAtkins: I try

[10:23:17.0000] <annevk>
TabAtkins: did it work?

[10:23:18.0000] <TabAtkins>
About Futures not recursively unwrapping.

[10:24:01.0000] <TabAtkins>
Ie Future.accept(Future.accept(5)).then(console.log) logging "<object Future>" rather than "5".

[10:24:12.0000] <annevk>
pretty sure that if you do Future.accept(Future.accept(5)).then((x) => alert(x)) will alert a future

[10:24:39.0000] <TabAtkins>
I find it really hard to follow the spec algorithm, but Domenic (from Promises/A+ standardization fame) asserts that you won't.

[10:25:18.0000] <annevk>
I think because you confuse Future.accept with Future.accept

[10:25:22.0000] <annevk>
lol

[10:25:30.0000] <TabAtkins>
I... I see.

[10:25:30.0000] <annevk>
Future.resolve with Future.accept

[10:25:33.0000] <TabAtkins>
Heh.

[10:25:52.0000] <TabAtkins>
Not that I know of.  There's a bunch of "use the resolver's resolve algorithm" sprinkled about that I think means Domenic is right.

[10:26:16.0000] <annevk>
oh generally futures use resolve, but you can do accept if you want to

[10:27:01.0000] <TabAtkins>
Yes, of course.  The point is whether calling .then() recursively unwraps its calling value.  (Or its callback's return value.)

[10:27:17.0000] <annevk>
then does nothing with the value it's passed

[10:27:30.0000] <annevk>
it does something with the return value sure

[10:27:50.0000] <annevk>
but in that thread you guys were discussing Future.resolve

[10:28:04.0000] <TabAtkins>
Ah, wait, I see the problem.  There is one place where you're doing the wrong thing.

[10:28:29.0000] <TabAtkins>
If the first callback to .then() is omitted, you use the resolver's resolve algorithm instead.  That should be the accept algorithm.

[10:29:14.0000] <TabAtkins>
The signature of the callback should be (a) => (a or Future<a>).  The resolve algorithm's signature is (Future<a>) => (Future<a>).  You want accept, which is (a) => (Future<a>).

[10:29:43.0000] <annevk>
ooh, if you omit callbacks

[10:29:44.0000] <annevk>
hmm

[10:29:46.0000] <TabAtkins>
(Well, resolve is (a or Future<a>) => (Future<a>).)

[10:30:06.0000] <TabAtkins>
(Coercing the (a) case into a Future<a>.)

[10:32:52.0000] <annevk>
so yeah, I guess it makes sense to change that

[10:40:34.0000] <annevk>
"zero process copyright" if I reorder some of my URL slugs, I hope that changes soon

[10:40:46.0000] <TabAtkins>
Hm?

[10:41:44.0000] <annevk>
Oh, someone just asked me about the W3C and URLs so I gave him http://annevankesteren.nl/2013/03/zero http://annevankesteren.nl/2012/11/copyright http://annevankesteren.nl/2012/11/process and then re-ordered the last words a bit

[10:42:36.0000] <annevk>
I swear, it all makes sense in my head :p

[10:43:10.0000] <TabAtkins>
Heh. ^_^

[10:53:56.0000] <annevk>
jsbell: not defining order of exceptions anno 2013 is sad

[10:54:22.0000] <annevk>
shame on ReSpec (and Indexed DB)

[10:54:33.0000] <jsbell>
annevk: Don't blame ReSpec

[10:55:02.0000] <Ms2ger>
/me blames jsbell 

[10:56:14.0000] <jsbell>
:)

[10:56:24.0000] <annevk>
jsbell: it was one of the reasons initially given, pretty sure if that limitation had not been there it would've been fixed a year ago

[10:56:28.0000] <Ms2ger>
And the IE team

[10:56:34.0000] <annevk>
jsbell: Microsoft stalling is of course not helping

[10:56:47.0000] <annevk>
jsbell: but that's a year later, and well, they always do that

[10:57:24.0000] <jsbell>
I have my opinions on this one, but it's not a sword I was willing to fall on.

[10:57:27.0000] <Ms2ger>
Implementing a given order would have taken an order of magnitude less time than the time that has been wasted by the stop energy

[10:58:14.0000] <jsbell>
Ms2ger: no argument.

[10:58:27.0000] <jsbell>
Shame not all browsers ship so frequently. :P

[10:58:52.0000] <Ms2ger>
And to make that even worse, I shall keep beating this dead horse for the rest of the evening!

[10:59:18.0000] <jsbell>
Ms2ger: make yourself useful and go add Futures to some random spec. ;-)

[10:59:30.0000] <Ms2ger>
That's annevk's job

[11:00:32.0000] <annevk>
Ms2ger: dude btw, how did they come to the conclusion DOM Parsing and Serialization was pretty much done?!

[11:00:48.0000] <Ms2ger>
I was too shocked to reply

[11:01:07.0000] <annevk>
I see

[11:02:35.0000] <annevk>
I wonder why tantek attends these support group meetings but refuses to engage in the much more productive support forum discussions.

[11:05:11.0000] <hober>
hahahaha

[11:21:06.0000] <tantek>
annevk - in person human to human communications often have higher bandwidth than various support fora and are also a good source of serendipitous 1:1 conversations that can sometimes be orders of magnitude more time-efficient than text media.

[11:22:20.0000] <tantek>
also, fewer (like very few) crazy armchair-spec-commenters show up in in-person meetings, in contrast to online support fora which are often overwhelmed with them.

[11:22:53.0000] <TabAtkins>
*forums

[11:23:09.0000] <Ms2ger>
*fora

[11:23:18.0000] <TabAtkins>
*This isn't Latin.

[11:23:30.0000] <TabAtkins>
*And if it was, you're doing it wrong.

[11:25:37.0000] <annevk>
tantek: I've read the minutes. It looks like a waste of time.

[11:25:42.0000] <annevk>
"XHR level 1 would be useful" mahahaha

[11:25:53.0000] <annevk>
It's even wasting my time now

[11:30:53.0000] <tantek>
annevk - the minutes are, well, a rough approximation, like an outline

[11:31:11.0000] <tantek>
so yeah - I wouldn't expect them to be much worth your time

[11:31:37.0000] <tantek>
a lot is communicated in subtle tone of voice, body language etc. that helps set context for the spoken words, only a subset of which are written into the minutes

[11:31:52.0000] <tantek>
interesting to see who really cares (doesn't care) about what

[11:32:11.0000] <annevk>
tantek: I've attended the meetings as well in the past. They were generally not worth it. Having focused meetings with a few people works though.

[11:32:26.0000] <tantek>
focused meetings with a few people do tend to be higher value, no disagreement there

[11:32:45.0000] <tantek>
interesting thing (which I think got minuted)

[11:33:12.0000] <tantek>
a set of editors have somewhat threatened to go on strike unless webapps switches to a liberal license

[11:33:35.0000] <tantek>
so if I can help move that along, the attendance at the meeting will be worth it

[11:33:46.0000] <tantek>
same reason I'm (likely) running for the AB

[11:35:09.0000] <annevk>
They'd be welcome here I'm sure

[11:35:21.0000] <annevk>
I only saw the suggestion from darobin

[11:35:41.0000] <tantek>
yeah that - from darobin

[11:38:33.0000] <annevk>
That was quickly followed by Chaals being happy to plagiarise the URL spec

[11:42:19.0000] <tantek>
annevk - plagiarism is one of the problems I'd like to address at W3C

[11:47:03.0000] <lecuyer>
TabAtkins: what part of the future spec would resolve(Future<Foo>) return Future<Foo>? It makes sense, I'm just not seeing it.  Is that the [[Call]] on `then`?

[11:50:13.0000] <tantek>
annevk: re: "I've attended the meetings as well in the past. They were generally not worth it." not true at all, I mean just last year, if you hadn't attended HTML/WebApps f2f, we wouldn't have http://w3cmemes.tumblr.com/

[11:50:30.0000] <annevk>
lecuyer: if you use resolve it'll return Foo

[11:50:42.0000] <annevk>
lecuyer: but it seems like there's a bug at the moment

[11:50:54.0000] <annevk>
tantek: baha :)

[11:51:02.0000] <tantek>
;)

[11:51:25.0000] <jsbell>
This stuff is easy, why aren't we shipping it yet? ;-)

[11:52:00.0000] <annevk>
jsbell: we're getting close to shipping

[11:52:29.0000] <lecuyer>
annevk: implementation bugs or spec bugs?

[11:52:49.0000] <annevk>
spec

[11:53:30.0000] <tantek>
annevk - shame that http://25.media.tumblr.com/avatar_420f39830dee_128.png is not the first post in w3cmemes

[11:54:32.0000] <lecuyer>
annevk: are additional prototype implementations welcome to the discussion?

[11:55:09.0000] <annevk>
lecuyer: don't see why not

[11:55:18.0000] <divya>
annevk: would your license not make plagarism valid?

[11:55:34.0000] <divya>
i mean i am not sure why it is a concern if your want your content to be free

[11:55:45.0000] <annevk>
divya: you're confusing plagiarism with legality

[11:56:06.0000] <divya>
no i am not talking legal terms at all.

[11:56:13.0000] <divya>
i thought you want your content to be free.

[11:56:20.0000] <divya>
but you want credit?

[11:56:22.0000] <divya>
i dunno

[11:57:06.0000] <Ms2ger>
divya, nobody's arguing that the W3C is doing something illegal

[11:57:16.0000] <divya>
Ms2ger: neither am i!

[11:57:16.0000] <annevk>
The problem with the forks the W3C has done to date is they are not kept up to date and confuse implementers. I'd rather that not happen. Also, forking my work without improving matters is not the reason it's under CC0.

[11:57:19.0000] <Ms2ger>
divya, only that it's hypocritical

[11:57:25.0000] <divya>
Ms2ger: ah

[11:57:27.0000] <divya>
got it.

[11:57:40.0000] <Ms2ger>
divya, also, unproductive, confusing, and all that

[11:57:46.0000] <divya>
Ms2ger: yaya got it now.

[11:58:01.0000] <divya>
but i saw plagarism and got confused.

[11:58:04.0000] <annevk>
It's under CC0 to spur creativity, not to create confusion.

[11:58:07.0000] <divya>
all other arguments seem sound to me.

[11:59:08.0000] <annevk>
Unfortunately I cannot both prevent the W3C from doing stupid stuff while allowing others to do the sane stuff at the same time. Given the choice I'd rather let the W3C do stupid stuff.

[12:04:24.0000] <tantek>
exactly, just because something is CC0 doesn't make it right to plagiarize

[12:04:42.0000] <tantek>
plagiarism is unethical, regardless of any license or lack thereof

[12:08:00.0000] <jsbell>
annevk: http://dom.spec.whatwg.org/#dom-future-any and friends - the append steps reference "resolveCallback" instead of "resolve" and "rejectCallback" instead of "reject"

[12:12:32.0000] <divya>
ethics is not something worth arguing about

[12:13:01.0000] <jgraham>
It i true that the meetings are usually the least productive part of TPAC. Coffee breaks: productive. Meals: productive. Evenings in the bar: productive. Meetings: a good time to write tests.

[12:13:35.0000] <jgraham>
(also the plenary day is typically quite reasonable now)

[12:15:06.0000] <Ms2ger>
divya, you're not a philosopher? :)

[12:15:53.0000] <jgraham>
I think the position that "ethics are not something work arguing about" is strongly philosophical

[12:16:03.0000] <lecuyer>
Ms2ger: Is the real question about whether or not ignoring ethics is itself unethical?

[12:17:02.0000] <jgraham>
I think it makes divya a moral nihilist

[12:20:55.0000] <divya>
jgraham: :)))))))))))

[12:21:15.0000] <divya>
jgraham: you argue my position very well so i think you would be my best representative

[12:22:29.0000] <divya>
yes i really dont care about morality in the absolute only in terms of the impact of said moral values

[12:22:40.0000] <jsbell>
annevk: also, in Future.every/some, you might want to be explicit about the index variable being snapshotted for each Function

[13:01:58.0000] <annevk>
jsbell: fixed

[13:48:54.0000] <lecuyer>
TabAtkins: any chance of explicit aspect ratios? :)

[13:49:28.0000] <TabAtkins>
I have a (broken) proposal for it on my blog <http://www.xanthir.com/blog/b4810>, and I've seen your email, but haven't responded to it yet.

[13:51:33.0000] <lecuyer>
TabAtkins: I hadn't seen your post, but it's pretty much exactly what I asked for in my email

[13:51:57.0000] <TabAtkins>
There are some things wrong with my proposal, but I know how to fix them.  I just haven't pursued it in a spec yet.

[13:52:16.0000] <TabAtkins>
I plan to probably put it into the Sizing spec.  Dunno whether it'll be this version or the next.

[13:58:03.0000] <lecuyer>
Awesome, I'm looking forward to it.  Would that put it in css4 probably?

[13:58:25.0000] <lecuyer>
s/css4/sizing level 4/

[14:03:32.0000] <TabAtkins>
Yeah, either http://dev.w3.org/csswg/css-sizing/ or the next level of it.


2013-04-27
[18:09:52.0000] <TabAtkins>
MikeSmith: Yo, random https fail.  When I link to https://dev.w3.org/csswg/default.css, it spins for 20s or so and then just fails.

[05:02:56.0000] <MikeSmith>
TabAtkins: Yeah some problem there but I don't know what

[05:03:01.0000] <MikeSmith>
will investigate

[08:53:24.0000] <SteveF>
Hixie: FYI have started work on Differences between the W3C HTML 5.1 specification and the WHATWG LS www.w3.org/wiki/HTML/W3C-WHATWG-Differences - style based on your differences documentation

[11:23:05.0000] <aleray>
Hi, I'm looking for advices to write a Writer using html5lib python

[11:23:40.0000] <aleray>
I want to transform my tree into some context code (latex-lile macro package for TeX)

[11:29:29.0000] <gsnedders>
aleray: I don't follow. A "Writer"? And you want to convert the tree from HTML to TeX?

[11:29:39.0000] <aleray>
yes

[11:29:41.0000] <aleray>
gsnedders,

[11:29:55.0000] <aleray>
I want to convert my html tree to TeX

[11:30:32.0000] <aleray>
specifically to context. The only tool I know to do this is written in haskell, and it is very slow to call it 100 of times using subprocess

[11:30:33.0000] <gsnedders>
Right, okay, then html5lib will do pretty much nothing for you. You just need to take the tree it gives you — with whatever tree builder you're using — a convert that to TeX.

[11:30:51.0000] <gsnedders>
If that makes sense.

[11:31:12.0000] <aleray>
gsnedders, ok. Any other general documentation I could look at to write such a tool?

[11:32:18.0000] <gsnedders>
aleray: I don't know enough about context to help, really. :)

[11:32:41.0000] <aleray>
gsnedders, or an example that converts html to plain text for instance?

[11:34:42.0000] <gsnedders>
aleray: I guess the other important thing is I presume you're planning on just putting in line breaks for p elements, for example, and not trying to do anything fancy with CSS and obeying display: none and the like?

[11:36:17.0000] <aleray>
gsnedders, nothing fancy my set of authorized tags is pretty limited

[11:38:34.0000] <gsnedders>
aleray: The only thing in html5lib that might help is the treewalkers, which provides a normalized view of the tree as a sequence of StartTag, Text nodes, EndTag, etc.

[11:38:58.0000] <gsnedders>
aleray: And then on a p endtag output whitespace, and stuff like that.

[11:39:15.0000] <aleray>
gsnedders, that sound useful thanks

[11:40:21.0000] <gsnedders>
aleray: Note that in browsers p elements have whitespace before *and* after, and rely on CSS margin collapsing to avoid doubling whitespace.

[11:40:25.0000] <gsnedders>
aleray: Given in TeX 4 lines of whitespace is the same as 2, you may as well follow that.

[11:40:37.0000] <gsnedders>
(And let it collapse, unless you care about the format of the file)

[11:40:56.0000] <gsnedders>
(in which case you can add in extra logic to not output whitespace if it already ends in whitespace, or something)


2013-04-28
[18:23:14.0000] <MikeSmith>
cool to see that WebKit is going to remove all Web Components code

[18:23:18.0000] <MikeSmith>
forward progress

[00:36:19.0000] <Wardrop[home]>
Where's a good place to share or propose an idea for a CSS feature?

[00:37:38.0000] <Wardrop[home]>
Should I find the appropriate mailing list and submit it to that?

[01:53:01.0000] <gsnedders>
jgornick: Opinion needed

[01:53:07.0000] <gsnedders>
jgornick: And you're the wrong person.

[01:53:34.0000] <Ms2ger>
jgornick, why do you conflict with jgraham?

[01:53:35.0000] <gsnedders>
jgraham: Opinion needed: do we support 3.0/3.1, given we don't have Travis CI running against them?

[01:54:50.0000] <gsnedders>
Wardrop[home]: http://wiki.whatwg.org/wiki/FAQ#Is_there_a_process_for_adding_new_features_to_a_specification.3F applies, but replace whatwg⊙wo with www-style⊙wo

[04:53:48.0000] <gsnedders>
Ergh, I want to drop support for Python < 3 right now.

[04:54:34.0000] <Ms2ger>
Nooo

[04:56:34.0000] <gsnedders>
I don't think it's viable, however. :P

[08:54:18.0000] <Ms2ger>
/me looks for TabAtkins 

[08:57:08.0000] <matjas>
Ms2ger: would you mind bumping the Anolis version number every now and then, and tagging each release through `git tag`?

[08:57:29.0000] <matjas>
Ms2ger: that way I could create a Homebrew formula to (more) easily install Anolis on other machines

[08:57:43.0000] <Ms2ger>
There's no git involved, so using git tag will be annoying

[08:58:08.0000] <Ms2ger>
But I can bump version numbers, I guess

[08:58:29.0000] <matjas>
Ms2ger: just tag it the same way you’ve tagged older releases, then. as long as it shows up here it’s all good https://bitbucket.org/ms2ger/anolis/downloads → “tags”

[09:15:49.0000] <Ms2ger>
Mm, I bet that was gsnedders

[09:16:22.0000] <gsnedders>
XD

[09:19:00.0000] <matjas>
`hg tag 1.2.3` should work

[09:27:38.0000] <gsnedders>
jgraham: https://github.com/html5lib/html5lib-python/issues/21 is the last thing blocking 1.0b1

[09:29:37.0000] <Ms2ger>
While we're on the topic of pypi, maybe you should give me permission to do that with anolis :)

[09:30:03.0000] <gsnedders>
Ms2ger: I was going to ask you about that when I posted that bug report. But you weren't on IRC. :P

[09:30:14.0000] <gsnedders>
Ms2ger: Your username just Ms2ger ?

[09:30:29.0000] <Ms2ger>
Probably

[09:31:19.0000] <Ms2ger>
/me looks

[09:31:23.0000] <gsnedders>
Ms2ger: User doesn't exist.

[09:32:10.0000] <Ms2ger>
/me kicks pypi

[09:32:17.0000] <Ms2ger>
Silly restrictions on passwords

[09:34:21.0000] <Ms2ger>
gsnedders, okay, try again

[09:34:50.0000] <gsnedders>
Ms2ger: You are now an owner.

[09:35:10.0000] <Ms2ger>
w00t

[10:13:29.0000] <aleray>
Hi, can I pretty print an etree tree?

[10:13:35.0000] <aleray>
using html5lib python

[10:13:56.0000] <aleray>
and lxml tree

[11:06:05.0000] <gsnedders>
aleray: Well, lxml support pretty_print; etree you have to do something manual for.

[11:06:14.0000] <gsnedders>
aleray: lxml.etree.tostring has a pretty_print argument

[11:07:53.0000] <aleray>
gsnedders, this is what I have at the moment: http://dpaste.com/1076865/

[11:33:16.0000] <Ms2ger>
gsnedders, how do you upload packages to pypi?

[11:33:30.0000] <Ms2ger>
There seems to be a way to use ssh, but I can't get it to work

[11:34:50.0000] <gsnedders>
Ms2ger: Does python setup.py sdist upload not work?

[11:35:08.0000] <Ms2ger>
Upload failed (401): You must be identified to edit package information

[11:35:10.0000] <gsnedders>
Ms2ger: Can't remember how you tell it how to authenticate

[11:35:47.0000] <Ms2ger>
Python packaging definitely is a circle of hell on its own...

[11:35:48.0000] <gsnedders>
python setup.py register?

[11:35:59.0000] <gsnedders>
http://docs.python.org/2/distutils/packageindex.html

[11:36:55.0000] <Ms2ger>
Aha, that looks better

[11:37:19.0000] <gsnedders>
Ms2ger: When did I last make a PyPi release? Years ago. :P

[11:43:24.0000] <Ms2ger>
gsnedders, I can understand why :)

[11:53:10.0000] <Ms2ger>
matjas, if you read the logs: https://bitbucket.org/ms2ger/anolis/get/1.2.zip

[11:53:32.0000] <Ms2ger>
Also https://pypi.python.org/pypi/anolis and http://pythonhosted.org/anolis/

[13:57:19.0000] <jgraham>
gsnedders: I care not a jot for python 3.x < 3.3

[13:57:35.0000] <jgraham>
And I have tried logging a support request for the pypi thing


2013-04-29
[23:34:11.0000] <zcorpan>
/me marks Future discussions as read

[00:52:54.0000] <jgraham>
Hmm, so roc's delaying the content load event proposals are scaring me, but I'm not entirely sure I can entirely defend my git-reaction of "run away"

[00:52:59.0000] <jgraham>
*gut

[00:53:55.0000] <Ms2ger>
http://www.youtube.com/watch?v=KAp9sFVdERQ

[00:57:15.0000] <jgraham>
I think what frightens me is tying in a script controlled flag to something that is already intimately connected with the lifecycle of the document

[00:59:00.0000] <Ms2ger>
Clearly we need a reallyload event

[01:38:21.0000] <smaug____>
well, you can implement the thing using script libraries

[01:38:38.0000] <smaug____>
some hacky iframe doing document.write or such

[01:39:05.0000] <jgraham>
Sure

[01:39:42.0000] <jgraham>
But there's a difference between "X is possible" and "X is encouraged"

[02:04:44.0000] <SimonSapin>
Is http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html missing something like th { text-align: center }? Or is it encoded as prose somewhere in there?

[02:07:43.0000] <Ms2ger>
I think that's in prose somewhere...

[02:07:44.0000] <Ms2ger>
/me looks

[02:08:34.0000] <SimonSapin>
searching for "th" doesn’t really help ;)

[02:08:34.0000] <Ms2ger>
User agents are expected to have a rule in their user agent stylesheet that matches th elements that have a parent node whose computed value for the 'text-align' property is its initial value, whose declaration block consists of just a single declaration that sets the 'text-align' property to the value 'center'.

[02:10:36.0000] <SimonSapin>
oh …

[02:10:54.0000] <SimonSapin>
that sucks

[02:10:57.0000] <Ms2ger>
Yeah, it's weird

[02:13:15.0000] <SimonSapin>
I guess WeasyPrint is gonna ignore the part about the parent with an initial value

[02:15:17.0000] <SimonSapin>
I wish the whole chapter could be encoded as CSS to be used in a UA stylesheet, even if that means having a few magic CSS keywords

[03:06:54.0000] <aleray>
what is the license of html5lib-python?

[03:10:15.0000] <SimonSapin>
aleray: the source says MIT

[03:21:59.0000] <jgraham>
Yes, MIT

[03:22:50.0000] <jgraham>
Of course we prefer patches than forks :)

[03:32:37.0000] <zcorpan>
does anyone want to help me importing http://dev.w3.org/cvsweb/html5/html4-differences/ to https://github.com/whatwg/html-differences (preserving history)?

[03:34:53.0000] <jgraham>
zcorpan: git cvsimport seems to be what you want

[03:36:11.0000] <jgraham>
http://stackoverflow.com/questions/11362676/what-is-the-best-way-to-import-a-cvs-repository-in-git-and-use-it-locally

[03:36:26.0000] <jgraham>
I think you also have to have CVS set up right in the first place

[03:37:13.0000] <jgraham>
http://maymay.net/blog/2008/04/15/how-to-import-cvs-code-repositories-into-git-using-git-cvsimport/

[03:39:02.0000] <aleray>
SimonSapin, jgornick

[03:39:06.0000] <aleray>
oups jgraham

[03:39:07.0000] <aleray>
thanks

[03:39:18.0000] <aleray>
I'm writing a writer

[03:39:24.0000] <aleray>
for ConText

[03:39:44.0000] <aleray>
(http://wiki.contextgarden.net/Main_Page)

[03:39:59.0000] <aleray>
super crude

[03:40:36.0000] <aleray>
so maybe I'll wait a little bit more, but since I copied the htmlserializer to start with I will keep the mit license

[03:41:11.0000] <aleray>
no fork on the roadmap :)

[03:53:03.0000] <zcorpan>
jgraham: i tried following the maymay.net steps but get:

[03:53:06.0000] <zcorpan>
Running cvsps...

[03:53:06.0000] <zcorpan>
connect error: Permission denied

[03:54:44.0000] <jgraham>
I am not the best person to help here

[03:55:00.0000] <jgraham>
Since I haven't used CVS for 7 years or something

[03:55:08.0000] <jgraham>
and don't have W3C CVS access

[03:55:27.0000] <jgraham>
But, are you sure that your CVS access is correctly set up?

[03:56:34.0000] <zcorpan>
I logged in with the anonymous credentials at http://dev.w3.org/cvsweb/

[03:56:47.0000] <zcorpan>
~/.cvspass exists

[03:57:01.0000] <zcorpan>
i could do a checkout

[03:57:43.0000] <jgraham>
Hmm

[03:57:59.0000] <jgraham>
I note that no other instructions I can see require cvsps

[03:59:24.0000] <zcorpan>
or maybe they do but don't say so :-)

[04:00:21.0000] <jgraham>
Could be :)

[04:01:18.0000] <jgraham>
(you could also try cvs2git I guess: http://cvs2svn.tigris.org/cvs2git.html)

[04:23:55.0000] <zcorpan>
screw it

[04:33:49.0000] <zcorpan>
MikeSmith: can http://dev.w3.org/cvsweb/html5/html4-differences/ be made read-only?

[05:21:36.0000] <hallvors>
hm.. the problem with learning Git is that all one's mistakes seem to cause somebody else trouble.. Working on https://github.com/whatwg/xhr/pull/2 I'm wondering if I can cut down the long list of commits associated with the pull request

[05:22:03.0000] <hallvors>
the code changes under "Files changed" are near perfect, only those I want included..

[05:22:51.0000] <hallvors>
so why does Git (or GitHub) reference all those commits, and isn't there a way I can delete some of them from the list?

[05:22:54.0000] <Ms2ger>
I think the term is "squash"?

[05:23:03.0000] <Ms2ger>
/me pokes jgraham 

[05:24:21.0000] <jgraham>
Yes, you can

[05:24:59.0000] <jgraham>
I suggest closing the pull request though; I'm not sure what happens if you rewrite history and then push to a existing PR

[05:25:21.0000] <hallvors>
I've heard rumours of squash.. ;-)

[05:25:42.0000] <jgraham>
The way that you rewrite the history to reduce the number of commits is to use git rebase -i (i.e. --interactive)

[05:26:06.0000] <hallvors>
however, what I really don't understand is that the PR also lists changes like "add more IDs.." that are really quite old..

[05:26:25.0000] <hallvors>
and pushed before I made this branch that I wanted to make a PR from

[05:26:49.0000] <jgraham>
Hmm, well let me start by talking about how to use git rebase if you have a clean branch

[05:26:59.0000] <jgraham>
Then we can figure out if your branch is clean :)

[05:27:14.0000] <hallvors>
hm.. what's a "clean" branch in the first place?

[05:27:17.0000] <hallvors>
8-)

[05:27:27.0000] <jgraham>
So the easiest thing to do is something like git rebase -i master

[05:27:35.0000] <hallvors>
/me appreciates having Git gurus around

[05:27:50.0000] <jgraham>
This should bring up a text editor with a list of commits on your branch

[05:28:10.0000] <hallvors>
OK - at what point? after committing stuff to master? to other branch?

[05:28:13.0000] <Ms2ger>
/me likes how hg doesn't require gurus to be around :)

[05:28:26.0000] <jgraham>
(protip: make sure that your $EDITOR is not set to vi before doing this)

[05:28:34.0000] <jgraham>
(protip2: :q)

[05:29:20.0000] <jgraham>
hallvors: I am assuming that you made the commits on some non-master branch

[05:29:38.0000] <hallvors>
yes

[05:29:49.0000] <hallvors>
so now I say rebase -i master. OK

[05:30:00.0000] <jgraham>
If you made the commits directly on master a) don't do that and b) look back through history to find some SHA1 before you started adding stuff

[05:30:19.0000] <jgraham>
Well, I guess it might even be easier to take it in two steps

[05:30:25.0000] <jgraham>
"git rebase master"

[05:30:44.0000] <jgraham>
This will move your commmits so they are on top of whatever master is

[05:31:11.0000] <hallvors>
OK - but they should already be.. anyway :)

[05:31:11.0000] <jgraham>
Hmm, let's take a step back

[05:31:27.0000] <jgraham>
Yeah, I think this doesn't all apply to your situation

[05:31:36.0000] <jgraham>
So the full process I would do is:

[05:31:41.0000] <jgraham>
git fetch origin

[05:31:50.0000] <jgraham>
git rebase origin/master

[05:31:55.0000] <hallvors>
I've done that

[05:31:56.0000] <jgraham>
git rebase -i origin/master

[05:32:25.0000] <hallvors>
(with some "merge conflict" resolution where I just told it to use Anne's version and discard any local edits)

[05:32:29.0000] <hallvors>
ah

[05:32:30.0000] <jgraham>
The two rebases are just to make things easier; the first will move your commits on top of the latest upstream without otherwise changing history

[05:32:44.0000] <hallvors>
I haven't done the rebase origin/mastr thing

[05:33:00.0000] <jgraham>
and the second one is to do the history rewrite

[05:33:22.0000] <hallvors>
OK, so that's why changes that predate me creating the branch still are in the PR

[05:33:51.0000] <jgraham>
Let's say you get as far as the interactive rebase

[05:34:04.0000] <hallvors>
thanks, now I understand a bit more :)

[05:34:16.0000] <jgraham>
Then you have an editor listing all the commits on your branch

[05:34:26.0000] <jgraham>
And some instructions down the bottom

[05:34:37.0000] <jgraham>
To the left of each SHA1 is the word "pick"

[05:34:50.0000] <jgraham>
You can change this, depending on what you want to do with the commit

[05:34:51.0000] <hallvors>
yes

[05:35:17.0000] <jgraham>
Notably "squash" will merge it into the previous commit and try to keep the commit message

[05:35:39.0000] <jgraham>
"fixup" will merge it into the previous commit and discard the commit message

[05:35:49.0000] <jgraham>
Deleting the line will remove that commit

[05:36:10.0000] <jgraham>
Changing the order allows you to reorder commits (but note that this can lead to merge conflicts)

[05:36:23.0000] <jgraham>
So you edit this until the branch looks how you want

[05:36:27.0000] <jgraham>
and save it

[05:36:41.0000] <jgraham>
and then you might get another editor allowing you to change some commit messages

[05:36:44.0000] <matjas>
/me refreshes http://html-differences.spec.whatwg.org/ like crazy

[05:36:51.0000] <jgraham>
and then history will be rewritten

[05:37:33.0000] <hallvors>
I'll try with a fresh branch and see if I can make a reaaaaly clean PR..

[05:37:41.0000] <jgraham>
Ms2ger: That explains why there are never blog posts from Mozilla people describing crazy gymnastics with mq

[05:39:41.0000] <jgraham>
(or to put it differently: describe how to go from commits A-B-C-D to commits AB'-D'-C' in hg that describe an identical change to the original branch)

[05:40:16.0000] <jgraham>
(and convince me this is something that would be obvious to a newcomer without consulting external help)

[05:43:00.0000] <SimonSapin>
jgraham: not Mozilla people, but still :) http://www.logilab.org/blogentry/88203

[05:45:13.0000] <jgraham>
SimonSapin: Maybe I needed a </sarcasm>? I have seen *many* blog posts about how to achieve simple-sounding things in hg

[05:46:23.0000] <jgraham>
(that phases thing sounds like it wouldn't work well with code review on a branch)

[05:46:39.0000] <SimonSapin>
well, I’ve seen this guy give a talk on hg phases, and it didn’t quite sound simple

[05:49:10.0000] <jgraham>
Right, I think we are agreeing that things aren't always as simple as Ms2ger claimed

[05:50:01.0000] <Ms2ger>
Hg phases make a lot of sense unless you push unfinished commits to a public repo, like we do with our tryserver

[05:51:56.0000] <jgraham>
Or we do with critic

[05:52:15.0000] <hallvors>
Ms2ger, jgraham: I had no intention of starting a religious war between the two of you. :-o Peace :)

[05:52:16.0000] <jgraham>
So basically it's a great idea as long as you don't worry about the real world

[05:52:58.0000] <Ms2ger>
Hah

[05:54:59.0000] <hallvors>
Meanwhile, I've successfully achieved some of what I wanted in https://github.com/whatwg/xhr/pull/3 but not all - right now I'll just wait for Anne getting to it and move on to the next opportunity for trying to make Git understand me and vice versa

[05:55:37.0000] <Ms2ger>
hallvors, you know about vim vs emacs, right?

[05:55:55.0000] <hallvors>
ugh

[05:56:26.0000] <hallvors>
I don't want to "know" more than I do because everybody who really "knows" is fighting, right? :-p

[05:56:54.0000] <hallvors>
/me likes peace

[05:57:38.0000] <Ms2ger>
hg vs. git is the same thing, with the difference that your choice actually affects the people you work with :)

[06:01:33.0000] <zcorpan>
matjas: meanwhile i was talking to a colleague and then getting a cup of tea :-P

[06:04:29.0000] <zcorpan>
matjas: (i've asked anne & hixie to create that url)

[06:08:46.0000] <MikeSmith>
zcorpan: about the dev.w3.org diffs doc, I can't make it read-only but I can add a redirect

[06:09:14.0000] <zcorpan>
MikeSmith: ok

[06:09:54.0000] <zcorpan>
MikeSmith: i guess the new url for the w3c editor's draft is https://rawgithub.com/whatwg/html-differences/master/Overview.html

[06:10:30.0000] <zcorpan>
MikeSmith: or we could keep the old url but sync it from github maybe?

[06:10:39.0000] <zcorpan>
either way

[06:21:05.0000] <Ms2ger>
annevk; http://critic.hoppipolla.co.uk/r/86

[06:31:47.0000] <hallvors>
Ms2ger: should I create a new branch for the rest of the XHR test changes (to let you/anne/whoever review and merge the current stuff)?

[06:32:20.0000] <hallvors>
I can either make a new branch and pull request or keep checking in to the current, depending on what you think is better

[06:32:28.0000] <Ms2ger>
I'm not going to review them, I don't think :)

[06:33:34.0000] <hallvors>
so "no opinion", basically? :)

[06:34:30.0000] <Ms2ger>
Yep

[06:39:47.0000] <zcorpan>
hallvors: i'll probably review your changes but i don't mind either way

[06:44:26.0000] <MikeSmith>
zcorpan: better to just redirect it, I think

[06:44:38.0000] <zcorpan>
MikeSmith: OK

[07:46:21.0000] <Ms2ger>
<bz> if I'm going to review the futures spec

[07:46:22.0000] <Ms2ger>
<bz> should I read the promises/A+ spec first?

[07:50:04.0000] <jgraham>
No

[09:17:35.0000] <lecuyer>
where are css decorators defined?

[09:58:59.0000] <MikeSmith>
oh man this is rich

[09:59:15.0000] <MikeSmith>
Opera suing Trond Hansen

[09:59:29.0000] <MikeSmith>
for giving away secrets to Mozilla

[09:59:52.0000] <nimbu>
MikeSmith: OMG

[10:00:02.0000] <MikeSmith>
maybe they should instead be suing him for not doing the actual job he was paid for even while he was working there

[10:00:21.0000] <MikeSmith>
or even bothering to, say, show up for work

[10:00:21.0000] <nimbu>
this is just

[10:00:23.0000] <nimbu>
fucked up

[10:00:26.0000] <nimbu>
so fucked up

[10:00:30.0000] <nimbu>
i dont know what to say

[10:00:48.0000] <MikeSmith>
nimbu: strange times

[10:00:56.0000] <nimbu>
sighhhhhh

[10:01:06.0000] <nimbu>
MikeSmith: i suppose you and I should be wary too :)

[10:01:18.0000] <MikeSmith>
heh

[10:01:20.0000] <odinho>
quite the shock yeah.

[10:01:23.0000] <MikeSmith>
yeah, look out!

[10:01:30.0000] <MikeSmith>
"describes himself as an artist, songwriter, and designer"

[10:01:34.0000] <nimbu>
ahahaha

[10:01:34.0000] <MikeSmith>
in that order, I bet

[10:02:40.0000] <MikeSmith>
to be fair I guess he did some years trying to get some UI innovations into Opera only to have Jon reject all of them

[10:03:06.0000] <MikeSmith>
so maybe he just gave up

[10:03:51.0000] <nimbu>
:(

[10:03:51.0000] <MikeSmith>
would be really ironic for Opera to sue him for "stealing" his own ideas that Opera management rejected

[10:03:58.0000] <nimbu>
gawddd

[10:04:14.0000] <nimbu>
everybody working for Opera please dont open your mouths

[10:05:26.0000] <MikeSmith>
new meme

[10:05:37.0000] <MikeSmith>
"Opera, Please Don't Sue Me"

[10:06:59.0000] <MikeSmith>
wait maybe this is the new business strategy

[10:07:18.0000] <nimbu>
:(

[10:07:31.0000] <MikeSmith>
wait for all Opera employees to implement new ideas at other companies

[10:07:35.0000] <MikeSmith>
then sue them

[10:07:46.0000] <nimbu>
MikeSmith: be careful they may sue you also

[10:08:06.0000] <MikeSmith>
s/Opera employees/former Opera employees/

[10:08:18.0000] <MikeSmith>
nimbu: blood from a stone

[10:08:27.0000] <MikeSmith>
they are welcome to share my debts

[10:09:16.0000] <MikeSmith>
I already drank up all the profits I made from business ideas I stole from Opera

[10:09:35.0000] <nimbu>
ahahahhaha

[10:22:23.0000] <TabAtkins>
gsnedders: I'm using html5lib in Python2.7, but that's largely because the libraries I wanted seemed easiest to install there.  On the other hand, I'm probably fine with just not receiving updates, so long as the Python2 version is archived somewhere I can point to. ^_^

[10:23:26.0000] <gsnedders>
TabAtkins: It's not happening.

[10:24:06.0000] <gsnedders>
TabAtkins: It'd be nice for when I get around to rewriting the InputStream (as it avoids the one case we reparse currently), but we'll see how the ecosystem is then.

[10:24:28.0000] <gsnedders>
TabAtkins: Quite possibly will do that and just reparse under Py2.

[10:25:45.0000] <gsnedders>
TabAtkins: Or try and work out some hack to avoid it under Py2, dunno.

[10:26:12.0000] <SimonSapin>
gsnedders: is html5lib dropping python 2 support?

[10:26:22.0000] <gsnedders>
SimonSapin: "It's not happening".

[10:26:31.0000] <gsnedders>
SimonSapin: I was cursing yesterday I wish we could.

[10:26:32.0000] <SimonSapin>
ok, good :)

[10:26:54.0000] <gsnedders>
SimonSapin: Only thing that's at risk is 3.0/3.1 support

[10:27:06.0000] <gsnedders>
And that's mostly because it's untested, rather than anything fundemental.

[10:27:12.0000] <SimonSapin>
nobody uses 3.0

[10:27:17.0000] <gsnedders>
Indeed.

[10:27:31.0000] <SimonSapin>
and I’m thinking of dropping 3.1 support in weasyprint and various libs

[10:27:52.0000] <SimonSapin>
so I wouldn’t miss it

[10:27:53.0000] <gsnedders>
Likely we'll drop "official" support but practically it's unlikely to break.

[10:28:02.0000] <TabAtkins>
I like Python 3. :/

[10:28:19.0000] <SimonSapin>
TabAtkins: you still have 3.2 and 3.3

[10:28:21.0000] <gsnedders>
TabAtkins: 3.0.3/1 aren't everything. :P

[10:28:28.0000] <TabAtkins>
Oh!  Okay, never mind then.

[10:29:29.0000] <gsnedders>
TabAtkins: The main reason html5lib might drop old Py3 is the lack of testing on them.

[10:29:43.0000] <gsnedders>
We're well tested on 2.6/2.7/3.2/3.3

[10:45:53.0000] <MikeSmith>
I wonder what "packability of the DOM code" means

[11:04:28.0000] <Garbee>
Can dialog elements be used outside of <th> and <dt> elements? The spec says they are where it *can* be used, but it doesn't say only may be used within. http://developers.whatwg.org/commands.html#the-dialog-element

[11:05:04.0000] <TabAtkins>
"Where flow content is expected".

[11:05:16.0000] <TabAtkins>
The weird special cases are because <th> and <dt> don't accept arbitrary flow content.

[11:06:00.0000] <TabAtkins>
So, any element with "Content Model: flow content;" can contain a dialog.

[11:09:07.0000] <Garbee>
Yea. I'd assume W3Schools simply used a table in their demo since that is pointed out as a use-case for a dialog. But their tip on it is wrong.

[11:14:46.0000] <TabAtkins>
Garbee: W3Schools is often wrong, and often terrible.  Don't learn from them. ^_^

[11:15:04.0000] <TabAtkins>
Use a better learning resource, like HTMLDog.com, or pretty much anything, anywhere.

[11:21:03.0000] <Garbee>
TabAtkins, nah, I was trying to figure out an issue someone reported on W3Fools.

[11:21:28.0000] <TabAtkins>
Ah, carry on then.

[11:21:29.0000] <Garbee>
I tend to read the spec itself and then learn implementation from seeing people do things.

[11:30:28.0000] <Garbee>
TabAtkins, Also, I feel obligated to say also that http://www.webplatform.org is a great doc resource. ;) That should be first to mind when recommending somewhere for people to learn from.

[11:30:52.0000] <Garbee>
(Yes, it still has issues but we are working on them.)

[11:33:10.0000] <Ms2ger>
Can you get rid of the references to initProgressEvent, then?

[11:33:23.0000] <Ms2ger>
And the other init*Events, for that matter

[11:42:42.0000] <Garbee>
Ms2ger, Were you talking to me about removing those references from WPD?

[11:44:32.0000] <Ms2ger>
Sounds like work on it?

[11:46:45.0000] <Garbee>
Well, we have references to it. But I don't see any reason to remove them.

[11:47:31.0000] <Ms2ger>
It's being removed from implementations

[11:49:08.0000] <Garbee>
It is a CR spec. So where is confirmation of it being removed? If it is being dropped then it is something I should bring up with the mailing list on how we should deal with it.

[11:50:09.0000] <Ms2ger>
It's not in the spec either: http://xhr.spec.whatwg.org/#interface-progressevent

[11:52:00.0000] <Garbee>
What isn't in the spec?

[11:52:38.0000] <jgraham>
Anyone know anything about pointer events? https://critic.hoppipolla.co.uk/r/90 isn't super-convincing at first glance but I don't know the spec

[11:53:53.0000] <Ms2ger>
assert_equals(typeof ev[name], "DOMString"

[11:53:58.0000] <Ms2ger>
No, not terribly convincing

[11:59:56.0000] <jgraham>
Hmm, I wonder who Cathy Chan is

[13:42:44.0000] <TabAtkins>
Hixie: How do you come up with such believable attack scenarios?

[13:43:56.0000] <Hixie>
is that sarcasm or sincere? :-)

[13:44:04.0000] <Hixie>
i didn't think it was that believable...

[13:44:08.0000] <TabAtkins>
Sincere!

[13:44:10.0000] <gsnedders>
"Being evil" is the answer Tarquin would give.

[13:44:22.0000] <Hixie>
TabAtkins: i dunno man

[13:45:37.0000] <Hixie>
anyone here have opinions on margin collapsing quirks?

[13:45:48.0000] <TabAtkins>
I might?

[13:46:08.0000] <Hixie>
i'm looking at https://www.w3.org/Bugs/Public/show_bug.cgi?id=15993

[13:46:31.0000] <Hixie>
trying to work out whether to do it in some sort of CSS syntax, or in prose

[13:46:38.0000] <Hixie>
i'm thinking prose might be the only sane way to do it

[13:46:53.0000] <jgraham>
I assume zcorpan would have opinions

[13:46:59.0000] <jgraham>
If he was here

[13:47:01.0000] <Hixie>
he's made them known on the bug, luckily :-)

[13:47:16.0000] <jgraham>
Then I was right!

[13:47:20.0000] <jgraham>
Hurrah!

[13:47:23.0000] <jgraham>
;)

[13:47:39.0000] <TabAtkins>
Okay, I don't have an opinion on this, except that it should be defined in Quirks, not in HTML. Put all that shit together.

[13:48:10.0000] <Hixie>
surely "quirks" shouldn't exist

[13:48:16.0000] <Hixie>
should just be in the various specs

[13:48:26.0000] <TabAtkins>
Sure it should - you have a nice, compact list of crazy exceptions.

[13:48:32.0000] <TabAtkins>
Rather than spreading them around.

[13:48:47.0000] <Hixie>
there's "quirks" in the html parser, and i'm pretty sure we don't want the html parser spec split into multiple files

[13:48:50.0000] <TabAtkins>
I mean, really individual quirks, sure, put them next to the stuff they're quirking.

[13:48:59.0000] <TabAtkins>
But margin collapsing in table cells?

[13:49:07.0000] <TabAtkins>
Sure, parsers are different. ^_^

[13:49:23.0000] <Hixie>
almost the entire rendering section in the html spec is just a long list of "quirks"

[13:49:42.0000] <Hixie>
this is just one more in that section :-)

[13:51:32.0000] <TabAtkins>
Well, if it's expressible in CSS like Gecko does, then whatever.

[13:54:23.0000] <Hixie>
CSS uses proprietary selectors to express it

[13:54:41.0000] <TabAtkins>
:moz-only-whitespace isn't proprietary any longer - it's now :blank in the Selectors 4 draft.

[13:55:40.0000] <Hixie>
ooo

[13:58:09.0000] <jgraham>
blank?

[13:58:30.0000] <jgraham>
that's a... surprising name

[13:58:39.0000] <TabAtkins>
Needed a name that was the same as :empty, but not :empty.

[13:58:58.0000] <TabAtkins>
:blank is short and a close synonym, so whatever.

[13:59:02.0000] <jgraham>
Why "the same as empty"?

[13:59:58.0000] <jgraham>
It seems like expressing something different to :empty with a synonym for "empty" is an expressway to confusion

[14:00:42.0000] <TabAtkins>
Shrug, we got :empty wrong.

[14:00:48.0000] <TabAtkins>
But probably can't kill it.

[14:01:06.0000] <TabAtkins>
I think I'm supposed to track usage of it in Blink and see what pops out.

[14:01:09.0000] <jgraham>
So to make up for it you will get :blank wrong too?

[14:01:16.0000] <jgraham>
Interesting strategy

[14:01:20.0000] <TabAtkins>
Hm?

[14:01:44.0000] <jgraham>
s/get it worg/give it a bad name/ is you like

[14:01:49.0000] <jgraham>
*wrong

[14:02:00.0000] <jgraham>
Anyway, I think I should try sleeping or something

[14:02:07.0000] <jgraham>
*if

[14:02:10.0000] <jgraham>
(see)

[14:02:17.0000] <jgraham>
(sleeping++)

[14:04:04.0000] <Hixie>
man, i hope microsoft appreciates the pain i'm going through trying to test their browser

[14:07:38.0000] <Hixie>
there's like, no interop in edge cases around margin collapsing

[14:08:03.0000] <Hixie>
<style>html { background: purple; } body { background: lime; } div { margin: 1px; }</style><div><h1>Test</h1></div>

[14:08:07.0000] <Hixie>
different in every rendering engine

[14:08:53.0000] <lecuyer>
am I the only one who thinks :blank and :empty aren't that bad of names?

[14:09:20.0000] <Hixie>
firefox doesn't collapse even if the div has no margin, chrome/safari collapse if the div doesn't have a margin but do otherwise, IE doesn't give the <h1> margins regardless of the <div>'s

[14:10:42.0000] <Hixie>
man, IE tries hard to avoid giving margins to stuff at the top

[14:11:05.0000] <Hixie>
even with <body><div><span></span></div><div><h1> the h1 still has no margins unless i give the span a border

[14:12:30.0000] <Hixie>
hm, chrome/safari are pretty enthusiastic about this too

[14:13:17.0000] <Hixie>
hmmmm

[14:16:12.0000] <Hixie>
hypothesis: any UA-set margin that would collapse with the <html>'s top margin collapses to zero.

[14:16:25.0000] <Hixie>
(in IE)

[14:16:50.0000] <Hixie>
/me ponders how to disprove that hypothesis

[14:32:39.0000] <Hixie>
i cannot find any way to disprove this hypothesis

[14:32:42.0000] <Hixie>
could it really be this simple?

[15:03:29.0000] <Hixie>
TabAtkins: is there a CSS equivalent to :-moz-first-node/:-moz-last-node? (matches same as :first-child/:last-child but only if there's no non-whitespace text nodes before/after the node)

[15:12:59.0000] <Hixie>
man, describing elements that match :-moz-first-node is a maze of twisty negations

[15:13:06.0000] <lecuyer>
Hixie: is that meaning that with <div>here's text<span>hi</span></div> that `div span:-moz-first-node` wouldn't match?

[15:19:47.0000] <Hixie>
lecuyer: yeah

[15:20:09.0000] <Hixie>
anyone got a good term to mean "an element or a text node that is not merely inter-element whitespace"?

[15:21:22.0000] <lecuyer>
Hixie: "unfortunate" ;)

[15:24:50.0000] <Hixie>
I'm going with "purple" until someone has a better term. :-)

[15:26:44.0000] <lecuyer>
Hixie: are you trying to name a pseudo selector or describe TEXT_NODEs in a spec?

[15:27:34.0000] <Hixie>
just trying to describe "an element or a text node that is not merely inter-element whitespace" for spec purposes

[15:28:13.0000] <astearns>
Hixie: didn't you use 'palpable' for something similar?

[15:28:48.0000] <Hixie>
that's something else

[15:28:54.0000] <Hixie>
but yes

[15:29:14.0000] <Hixie>
unfortunately i went to the thesaurus and none of "palpable"'s synonyms are words i can use

[15:29:32.0000] <Hixie>
(https://www.w3.org/Bugs/Public/show_bug.cgi?id=15993 for context)

[15:33:51.0000] <astearns>
Hixie: how about 'substantial'

[15:34:20.0000] <Hixie>
that could work

[15:34:44.0000] <Hixie>
noted on the bug

[15:35:15.0000] <TabAtkins>
Hixie: There is no equivalent to :moz-first-node/last-node.

[15:44:23.0000] <lecuyer>
astearns: how do you feel about arbitrarily nested pseudo-elements?

[15:45:30.0000] <TabAtkins>
Hixie: The phrasing we use in CSS for "purple" is "not an anonymous inline containing only collapible whitespace".

[15:51:14.0000] <Hixie>
TabAtkins: hm, good point, white-space:pre should stop this too, huh

[15:51:55.0000] <Hixie>
though i guess gecko doesn't

[15:53:42.0000] <Hixie>
hm, no, gecko _is_ affected

[15:53:43.0000] <Hixie>
wtf

[15:55:11.0000] <MikeSmith>
.win 14

[15:56:46.0000] <Hixie>
TabAtkins: so:

[15:56:46.0000] <Hixie>
  A node is significant if it generates a box that is not an inline box

[15:56:46.0000] <Hixie>
  containing only collapsible whitespace.

[15:56:48.0000] <Hixie>
...?

[15:56:49.0000] <zewt>
let's let win 8 run its course

[15:58:29.0000] <TabAtkins>
anonymous inline box

[15:58:50.0000] <TabAtkins>
("inline box" also describes inline elements)

[15:59:47.0000] <Hixie>
is it anonymous if it has an explicit node?

[16:00:12.0000] <Hixie>
so:

[16:00:13.0000] <Hixie>
  A node is significant if it is an element or if it generates a box that is not

[16:00:13.0000] <Hixie>
  an anonymous inline box containing only collapsible whitespace.

[16:00:15.0000] <Hixie>
...?

[16:00:24.0000] <TabAtkins>
anonymous boxes come from bare text only.

[16:00:33.0000] <Hixie>
bare text has a node :-)

[16:00:45.0000] <Hixie>
aren't table rows and such anonymous too?

[16:00:50.0000] <Hixie>
the ones that are implied?

[16:01:01.0000] <TabAtkins>
Those aren't anonymous inlines. ^_^

[16:01:14.0000] <Hixie>
you said "anonymous boxes"! :-P

[16:01:22.0000] <TabAtkins>
Bah.

[16:01:30.0000] <Hixie>
anyway the dfn above is right, right?

[16:02:49.0000] <TabAtkins>
If you can use HTML node concepts, just say "element node, or text node that doesn't just contain collapsible whitespace".

[16:04:28.0000] <Hixie>
that's what i had, but as you made me realise, it's wrong

[16:04:40.0000] <Hixie>
because what matters is whether the white-space actually gets collapsed or not

[16:04:44.0000] <Hixie>
that is, white-space:pre matters

[16:06:00.0000] <TabAtkins>
Yeah, wrong word.  I have the right wording in antoher spec.  One sec.

[16:07:36.0000] <TabAtkins>
http://dev.w3.org/csswg/selectors/#the-blank-pseudo "characters affected by whitespace processing".

[16:07:48.0000] <TabAtkins>
Oh wait, you *want* white-space pre to matter?

[16:07:54.0000] <Hixie>
apparently

[16:08:06.0000] <TabAtkins>
In that case, "collapsed whitespace".

[16:08:10.0000] <Hixie>
(i mean, what i actually want is neither here nor there on this issue)

[16:08:26.0000] <TabAtkins>
"doesn't contain only collapsed whitespace"

[16:09:21.0000] <Hixie>
as in:

[16:09:21.0000] <Hixie>
  A node is significant if it is an element or if it is a Text node that does not

[16:09:24.0000] <Hixie>
  contain only collapsed whitespace.

[16:09:27.0000] <Hixie>
..?

[16:10:03.0000] <TabAtkins>
Now it's easier to phrase it in positive terms: "or if it is a Text node that contains anything other than collapsed whitespace".

[16:11:02.0000] <Hixie>
is "collapsed whitespace" actually defined anywhere? http://www.w3.org/TR/css3-text/#white-space-rules vaguely defines "collapsible", but it seems what i actually want is to invoke hte word "removed" from that algorithm

[16:11:59.0000] <Hixie>
"A node is significant if it is an element or if it is a Text node that contains preserved white space or text that is not collapsible" ?

[16:12:21.0000] <Hixie>
"A node is significant if it is an element or if it is a Text node that contains preserved white space or characters that are not collapsible white space" ?

[16:12:30.0000] <Hixie>
with [CSS] at the end :-)

[16:13:31.0000] <Hixie>
(Note that this means :-moz-empty and :blank aren't the same after all)

[16:13:34.0000] <Hixie>
(unless i'm mistaken)

[16:14:22.0000] <TabAtkins>
i like the last one, though it's verbose.  It feels pretty precise.

[16:14:32.0000] <TabAtkins>
You mean :-moz-only-whitespace?

[16:14:41.0000] <Hixie>
yeah

[16:14:50.0000] <Hixie>
i'm wrong though

[16:15:05.0000] <TabAtkins>
Yes, that is a different condition than Moz's - the selector *cannot* depend on whether white-space:pre is set.

[16:15:22.0000] <TabAtkins>
It can only rely on whether characters in the content are "normally" collapsible.

[16:15:32.0000] <Hixie>
the selector doesn't seem to depend on white-space, now i'm just confused

[16:16:59.0000] <Hixie>
oh duh

[16:17:01.0000] <Hixie>
i am dumbo

[16:17:03.0000] <TabAtkins>
Heh.

[16:17:15.0000] <Hixie>
had a newline, made it look like it was margin plus the line with whitespace

[16:18:03.0000] <zewt>
wow, new gmail is even worse than i thought

[16:18:25.0000] <zewt>
i try to scroll down past a compose box, and it scrolls the whole compose instead of letting me leave the compose box scrolled where it is and scroll the whole box

[16:18:31.0000] <zewt>
gripegripe

[16:19:11.0000] <Hixie>
WebKit/Blink are affected by white-space, but Gecko isn't

[16:19:23.0000] <Hixie>
interestingly IE isn't either; I really think my hypothesis above is correct

[16:20:26.0000] <astearns>
lecuyer: I have started to become convinced that pseudo-element use cases are better served by HTML templates

[16:20:44.0000] <Hixie>
TabAtkins: amusingly i tried to give you credit for the big breakthrough i had an now it just looks in the bug like you were wrong, sorry about that :-)

[16:20:46.0000] <astearns>
lecuyer: CSS doesn't do structure, HTML does. Why invent CSS structure when you can re-use HTML?

[16:21:16.0000] <TabAtkins>
zewt: I find the new compose *really* useful.  It's an interesting behavioral mix of "as tall as all the contents" and "no taller than the screen", which works really well for me most of the time.

[16:21:34.0000] <TabAtkins>
zewt: In the case you're complaining about, I pop the message out instead, because that's typically what I really want to do anyway.

[16:22:03.0000] <zewt>
i edit replies nonlinearly, and i often want to skim down to a reply (past the point where the compose box landed) then go back to what I was writing, but now I can't leave the compose box where it is

[16:22:17.0000] <zewt>
i guess, or i can leave the cursor in place and hit an arrow key to scroll to it

[16:22:59.0000] <TabAtkins>
That works too (and I'm already used to doing that for text editors, when I need to quickly check another section of the spec for the text I'm currently writing).


2013-04-30
[20:23:10.0000] <Hixie>
nessy1: yt?

[20:38:54.0000] <abarth>
Hixie: does the html spec define what happens if you point an iframe at a SWF?

[20:39:05.0000] <abarth>
Hixie: I couldn't find it in the navigation algorithm

[20:39:42.0000] <abarth>
http://www.whatwg.org/specs/web-apps/current-work/#navigate step 23 seems to be close

[20:40:00.0000] <abarth>
but doesn't saw what to do if you get a mime type that should be handled by a plugin

[20:42:47.0000] <Hixie>
yeah, should do...

[20:43:13.0000] <Hixie>
step 23 "A type that will use an external application to render the content in the browsing context"

[20:43:20.0000] <Hixie>
"Follow the steps given in the plugin section, and abort these steps"

[20:43:29.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/#read-plugin

[20:43:41.0000] <abarth>
ah

[20:43:42.0000] <abarth>
thanks

[20:44:23.0000] <abarth>
so, in CSP

[20:44:49.0000] <abarth>
we want the document created there to inherit the plugin-types directive from the parent browsing context's CSP policy

[20:45:10.0000] <Hixie>
wouldn't you always want that?

[20:45:11.0000] <abarth>
I can write that in the CSP spec

[20:45:22.0000] <abarth>
no, in general

[20:45:26.0000] <abarth>
CSP is a per-document policy

[20:45:42.0000] <abarth>
the policy doesn't spam over child iframes

[20:45:53.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/#implement-the-sandboxing

[20:45:59.0000] <Hixie>
says it does

[20:46:03.0000] <abarth>
yeah, sandbox spams over children

[20:46:04.0000] <Hixie>
oh that's the sandboxing flags

[20:46:05.0000] <Hixie>
not CSP

[20:46:08.0000] <abarth>
right

[20:46:10.0000] <Hixie>
right

[20:46:12.0000] <Hixie>
ok

[20:46:24.0000] <abarth>
the question is whether we should spec this kind of thing in CSP or in HTML

[20:46:28.0000] <Hixie>
i don't normatively reference CSP at all so far

[20:46:39.0000] <abarth>
ok, i can spec it in CSP

[20:46:39.0000] <Hixie>
so, i'm happy to do it, but it's probably best for HTML to provide a hook for you

[20:47:08.0000] <abarth>
yeah, can you just give these sorts of documents a name?

[20:47:12.0000] <Hixie>
yeah, one sec

[20:47:14.0000] <abarth>
e.g., "a plugin document" ?

[20:47:42.0000] <abarth>
thanks

[20:48:34.0000] <Hixie>
"plugin document" it is

[20:49:14.0000] <Hixie>
what is the name of the thing you're using this for? to ensure iframes can't be used to evade... what?

[20:49:17.0000] <Hixie>
plugin policies?

[20:49:29.0000] <Hixie>
plugin directives?

[20:49:48.0000] <abarth>
yeah, plugin-types let you say which plugin times are allowed

[20:49:55.0000] <abarth>
so, plugin-types application/pdf

[20:50:03.0000] <abarth>
would mean that you can only have PDF plugins

[20:50:10.0000] <abarth>
not SWF or silverlight or whatever

[20:50:23.0000] <abarth>
that works fine, except that you could bypass it with <iframe>

[20:50:29.0000] <abarth>
since <iframe> creates a new document

[20:50:35.0000] <abarth>
which wouldn't have the restriction

[20:50:46.0000] <abarth>
<iframe src="foo.swf">

[20:55:32.0000] <Hixie>
abarth: but what is plugin-types called?

[20:55:36.0000] <Hixie>
a directive?

[21:02:16.0000] <abarth>
 yes

[21:02:22.0000] <Hixie>
k

[21:02:40.0000] <Hixie>
is there a typographic convention for these?

[21:02:50.0000] <Hixie>
"<code>plugin-types</code> directive"?

[21:03:06.0000] <Hixie>
(e.g. CSS properties use "the 'foo' property")

[21:03:27.0000] <abarth>
Yeah <code>plugin-types</code>

[21:03:33.0000] <abarth>
the verb is "enforce"

[21:03:44.0000] <abarth>
so, you'd say something like "enforce the <code>plugin-types

[21:03:54.0000] <abarth>
</code> directive

[21:03:54.0000] <abarth>
"

[21:04:05.0000] <Hixie>
i'm using "evade"

[21:04:09.0000] <Hixie>
cos it's the negative

[21:04:24.0000] <abarth>
:)

[21:05:06.0000] <Hixie>
ok, spec is building and change should be committed momentarily

[21:06:53.0000] <abarth>
thanks

[01:30:52.0000] <annevk>
fyi, I might have missed some memos

[01:39:37.0000] <annevk>
So I could have sworn I filed a bug on Web IDL to move DOM exceptions there. I guess I didn't...

[01:40:03.0000] <heycam>
sounds familiar

[01:40:47.0000] <heycam>
http://lists.w3.org/Archives/Public/public-script-coord/2013JanMar/0049.html

[01:41:28.0000] <heycam>
seems reasonable at this point, too, now that SVGException is gone

[01:42:04.0000] <Ms2ger>
Working on webidl again? :)

[01:42:09.0000] <heycam>
next week

[01:42:52.0000] <heycam>
will be at a web dev conference thurs/fri, so preparing my presentation for then atm

[01:42:56.0000] <annevk>
W3C mailing list search did not find that for my email combined with the keyword "exception" :/

[01:43:08.0000] <annevk>
heycam: do I need to file a bug or will you handle it?

[01:43:12.0000] <heycam>
I'll handle it

[01:43:25.0000] <heycam>
I've kept a track of what things I've addressed on the list

[02:33:46.0000] <annevk>
Wow, that W3C survey is the worst. I give up.

[02:35:04.0000] <SimonSapin>
annevk: the one to win an ipad?

[02:35:16.0000] <annevk>
Yes

[02:35:45.0000] <SimonSapin>
It looks so much like spam that I didn’t even try

[02:36:15.0000] <jgraham>
?

[02:36:25.0000] <annevk>
I didn't see the iPad bit initially. I thought it was about improving the W3C, but it's a load of bullocks. They've really no idea what they're doing I think...

[02:36:34.0000] <SimonSapin>
https://twitter.com/w3c/status/328946308146688001

[02:36:49.0000] <annevk>
Bunch of members, some money, some plans on how to get more money, and that's it...

[02:37:09.0000] <annevk>
Which is not really what you'd expect from an organization behind the standards of the web.

[02:39:34.0000] <jgraham>
Yeah, so after all the first questions were about money, and there were about 30 different boxes to tick for senion management job titles and about 10 for the other 99%, I think I am not the target audience for this survey

[02:40:26.0000] <jgraham>
(sorry, 39/9)

[02:44:05.0000] <annevk>
The job title one was already ridiculous. And field your organization is involved in did not list "web".

[02:48:30.0000] <Workshiva>
I wonder what the mimimum money made is to finish the survey

[02:59:57.0000] <svl>
I got to page 37 on that survey, and then: "Server Error in '/W3CT' Application."

[03:03:01.0000] <jgraham>
svl: Oh, so it's modern art. Makes sesne I guess.

[03:04:04.0000] <svl>
I managed to get further by hitting back, and then the previous button

[03:04:13.0000] <svl>
so yes, I'd say that's an accurate description. :)

[03:04:24.0000] <jgraham>
I think karlcow will approve

[03:11:15.0000] <hallvors>
annevk: any further thoughts on the XHR pull request?

[03:11:59.0000] <annevk>
hallvors: I don't get email from GitHub so I didn't know you replied yet :)

[03:12:38.0000] <hallvors>
GitHub spams way too much ;-)

[03:13:20.0000] <annevk>
That's probably why I disabled it. I do get some OS notifications now and then, if I happen to be online.

[03:13:24.0000] <jgraham>
Yeah, it relly does

[03:13:28.0000] <jgraham>
*really

[03:13:59.0000] <annevk>
hallvors: so I think the main question is why browsers feel the need to terminate the request in that case.

[03:14:33.0000] <annevk>
hallvors: because the whole point of checking this in open() is so that the Document can go away. If the document can never go away...

[03:14:59.0000] <hallvors>
it's probably just simpler to avoid zombie requests associated with no longer existing windows..

[03:16:29.0000] <hallvors>
you mean - open() needs a document (to resolve URLs and such) but the rest of the algorithm doesn't?

[03:17:14.0000] <hallvors>
- and that's the point of making open() throw but not interrupt anything else

[03:18:00.0000] <hallvors>
I think we should go ask a couple of implementors at this point :)

[03:18:49.0000] <annevk>
Yes and agreed

[03:18:56.0000] <hallvors>
(though I note that they seem to have collectively voted for "terminate the request" already)

[03:18:59.0000] <annevk>
smaug____: ^^

[03:19:14.0000] <hallvors>
-Gecko, Presto and Chromium, that is -

[03:19:39.0000] <hallvors>
don't have IE 10 and the test framework doesn't really work in IE8

[03:20:31.0000] <annevk>
I have IE10, do you have a URL?

[03:21:31.0000] <smaug____>
annevk: not sure I understand the question ..

[03:21:35.0000] <smaug____>
something about XHR

[03:21:50.0000] <wilhelm>
hallvors: browserstack.com is your friend.

[03:22:36.0000] <annevk>
smaug____: window1 does something like new window2.XMLHttpRequest; then does .open(); then at some point window2 is navigated

[03:22:55.0000] <annevk>
smaug____: given that all the information for the request is known, why is it terminated?

[03:23:01.0000] <hallvors>
(window2 might also be removed: IFRAME removed, popup closed etc)

[03:23:07.0000] <smaug____>
I'd expect XHR is terminated

[03:23:21.0000] <hallvors>
http://w3c-test.org/web-platform-tests/submissions/103/XMLHttpRequest/ look at the tests with -multi-window in name

[03:23:23.0000] <annevk>
smaug____: correct, but why?

[03:23:25.0000] <smaug____>
annevk: because all the network connections related to window2 are cancelled

[03:23:36.0000] <smaug____>
there is a load group

[03:24:00.0000] <smaug____>
and all the loads (network connections) in that group are terminated

[03:25:07.0000] <annevk>
hallvors: looks like IE follows the spec, assuming the tests match what you think should happen

[03:25:18.0000] <hallvors>
wilhelm: I suppose browserstack.com doesn't let me attach a debugger and step through some random stuff in IE ;-)

[03:25:32.0000] <hallvors>
annevk: what exactly do the tests say in IE?

[03:26:00.0000] <annevk>
for 4 I get 'assert_equals: responseText is empty on inactive document error condition expected "" but got "bottom\n"'

[03:26:21.0000] <annevk>
for 2 I get 'assert_throws: open() when associated document's IFRAME is removed function "function() { client.open("GET", "folder.txt"..." did not throw'

[03:26:27.0000] <hallvors>
smaug____: is that implementation hard to change if the spec says something else?

[03:26:45.0000] <annevk>
for 3 I get 'assert_throws: send() when associated document's IFRAME is removed function "function() { client.send(null) }" did not throw'

[03:26:45.0000] <smaug____>
I don't see reason to change it ;)

[03:27:04.0000] <annevk>
for 5 I get 'assert_throws: function "function() { client.open("GET", "...") }" threw object "TypeError: Permission denied" that is not a DOMException INVALID_STATE_ERR: property "code" is equal to undefined, expected 11'

[03:27:11.0000] <smaug____>
but yes, it would be somewhat hard to change

[03:27:14.0000] <hallvors>
smaug____: me neither but the spec currently dictates something else :)

[03:27:35.0000] <hallvors>
so you'll have to convince Anne if you don't want to change it ;-)

[03:27:36.0000] <smaug____>
and it would be odd to change

[03:27:59.0000] <annevk>
I suspect I reverse engineered IE as I remember at some point bz asking questions about the multi-window stuff and saying there were compatibility issues there.

[03:28:13.0000] <smaug____>
then the behavior of var img = new window2.Image(); img.src = "foo.gif"; should be changed too

[03:28:26.0000] <hallvors>
(or vote for accepting https://github.com/whatwg/xhr/pull/3 ;))

[03:28:27.0000] <annevk>
If those are gone.... Then we can do something else.

[03:28:31.0000] <smaug____>
and Audio and whatelse

[03:28:54.0000] <annevk>
smaug____: I think those are different. They use the entry script's document.

[03:29:35.0000] <smaug____>
so?

[03:29:50.0000] <annevk>
smaug____: so window2 is not very relevant there.

[03:29:52.0000] <smaug____>
well, if you just pass such Img object from window2's context

[03:30:00.0000] <annevk>
smaug____: whereas for XMLHttpRequest it is

[03:31:00.0000] <annevk>
Might still be some oddities with the prototype chain I suppose... Meh

[03:31:57.0000] <wilhelm>
hallvors: Yes, it only has the built-in devtools.

[03:34:16.0000] <annevk>
Sooo anyway. If we go with that kind of fetch management. We should probably document that in some way centrally. So a global scope can just say that it terminates all ongoing fetch requests and they report to their callers in an appropriate fashion.

[03:35:32.0000] <annevk>
E.g. I doubt you'd get a network error if some part of the response has already been retrieved. It would probably just terminate earlier, although maybe we should signal that kind of error still if we can trust Content-Length somehow?

[03:37:40.0000] <annevk>
Awesome, http://info.cern.ch/hypertext/WWW/TheProject.html uses <header> to mean <head>.

[03:38:24.0000] <hallvors>
for XHR I think firing an error event makes sense

[03:38:47.0000] <annevk>
And uses identifiers that start with a digit. That should never have been disallowed.

[03:39:09.0000] <annevk>
hallvors: that's too simple. What if data is already being processed?

[03:45:37.0000] <hallvors>
well, what happens if there is some network error while data is being processed but the request is not completed?

[03:48:13.0000] <annevk>
I think you cannot distinguish that from Content-Length being wrong at the moment.

[03:48:25.0000] <hallvors>
is there no error event?

[03:48:50.0000] <annevk>
The "network error" bit is really only distinguishing up until all header data has been processed. I think after that you'd just get load.

[03:50:01.0000] <annevk>
Fetch will define most of that and XMLHttpRequest will simply reference it at that point, hopefully obsoleting most of the text around the subject.

[03:54:23.0000] <hallvors>
But spec does say under "infrastructure for send()": If there is a network error -> In case of DNS errors, TLS negotiation failure, or other type of network errors, this is a network error.

[03:55:57.0000] <annevk>
Yeah I'm not sure that's accurate

[03:56:35.0000] <annevk>
Well, most of it is of course. It's not clear if it's a network error if the server just stops transmitting at some point. Or you close the receiving end.

[03:58:51.0000] <hallvors>
So if the server just closes down the connection and you haven't received "Content-Length" amount of data, you think the script should not be informed with an error event that something odd happened?

[04:00:14.0000] <hallvors>
BTW Anne - I wanted to ask you about this: https://github.com/hallvors/web-platform-tests/commit/890a45686adceb8be18c3fa832ab54ad1fd5b7b5

[04:00:14.0000] <annevk>
I'm saying is not informed, because browsers have to deal with faulty Content-Length. Reporting it in some fashion might still make sense though.

[04:01:10.0000] <hallvors>
As the spec is written one still gets the readystatechange event with readyState 4, then an error event.

[04:01:33.0000] <annevk>
Right, I'm saying that I think the specification is wrong there.

[04:01:43.0000] <hallvors>
Yes. This is actually a bit awkward.

[04:02:17.0000] <hallvors>
scripts that see readystatechange and readyState == 4 shouldn't have to wait for a potential error event to be certain that the request finished OK

[04:02:48.0000] <annevk>
Regarding the test, yeah, credential throwing was removed.

[04:03:03.0000] <hallvors>
OK, test will be aligned shortly :)

[04:03:36.0000] <hallvors>
I guess we could spec a request.errorState property .. or something.

[04:04:04.0000] <hallvors>
request.errorState = 0 means no problem, 1 means network error..

[04:04:16.0000] <annevk>
We already that with .status being 0

[04:04:45.0000] <annevk>
And non-zero meaning no network error. But there's other classes of errors such as mismatched Content-Length...

[05:34:03.0000] <SteveF>
hober: you awake?

[05:51:26.0000] <djc>
so I can't create an account on www.w3.org/Bugs, is that something I can complain about here?

[05:51:49.0000] <djc>
keeps saying I have an invalid token, even when I say I want to commit anyway

[05:59:48.0000] <annevk>
djc: best to ask in #sysreq on the W3C IRC server

[06:20:52.0000] <djc>
annevk: thanks, that worked

[06:21:12.0000] <annevk>
yw

[06:32:45.0000] <annevk>
Grmbl. HTTP authentication fffffffffuuuuuuuu. Man, have to actually hit a key multiple times these days to repeat it.

[06:59:34.0000] <matjas>
annevk: which OS?

[07:05:17.0000] <annevk>
matjas: OS X

[07:05:24.0000] <matjas>
annevk: then check this out: https://github.com/mathiasbynens/dotfiles/blob/f21a29cd78d65300e6853338864b5c9507f0e1ca/.osx#L148-L152

[07:05:52.0000] <annevk>
matjas: haha, madness

[07:06:50.0000] <matjas>
run those two commands, reboot, and you’ll be able to comfortably type ffffffffuuuuuuu again

[08:19:31.0000] <gsnedders>
What kind of security question is "What is your mother's first name?". That's a matter of public record!

[08:34:11.0000] <Ms2ger>
gsnedders, what's her maiden name? :)

[08:34:53.0000] <gsnedders>
Ms2ger: That's also a matter of public record. ;P

[08:38:22.0000] <marcosc>
/me notes nerds making mom jokes. 

[08:40:04.0000] <Ms2ger>
Yo momma's maiden name's so fat, it isn't accepted as an answer to the security question?

[09:21:37.0000] <dglazkov>
good morning, Whatwg!

[09:52:16.0000] <annevk>
Is someone working on making specification annotations work better across specifications?

[09:52:16.0000] <annevk>
I'd like to annotate some bits in "Fetch" with "needs review and tests" or some such

[09:53:43.0000] <Ms2ger>
/me assumes tantek is the troll :)

[10:00:58.0000] <annevk>
http://html-differences.whatwg.org/

[10:19:21.0000] <Redface>
hi

[12:44:21.0000] <cabanier>
Hixie: ping

[12:45:24.0000] <annevk>
Hixie: with respect to strategy, I'd rather do the minimum possible I suppose

[12:45:36.0000] <annevk>
Hixie: I hope at some point we can figure out a sane way to define all the event stuff

[12:45:46.0000] <annevk>
Hixie: event loop stuff*

[12:51:41.0000] <cabanier>
Hixie: do you remember why measureText requires the font to be local. Why not enforce CORS?

