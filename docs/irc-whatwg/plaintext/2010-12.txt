2010-12-01
[16:00:00.0000] <TabAtkins>
jamesr_: Hmm, I didn't know about -moz-image-rendering.  What does it do, control the interpolation when you scale the iamge, or something?

[16:00:01.0000] <Hixie>
bga_: so just generate the pages ahead of time, one for each language

[16:00:02.0000] <jamesr_>
TabAtkins: that's what it does

[16:00:03.0000] <jamesr_>
mozilla didn't actually prefix image-rendering, they have a value that they prefix

[16:01:00.0000] <jamesr_>
i think it came un-prefixed from IE

[16:01:01.0000] <TabAtkins>
Ah, kk.  Well, I should be defining it in Image Values, then.

[16:01:02.0000] <bga_>
i understand

[16:01:03.0000] <bga_>
ok

[16:02:00.0000] <TabAtkins>
jamesr_: bbiab

[16:02:01.0000] <bga_>
thanks Hixie

[16:02:02.0000] <Hixie>
np

[16:02:03.0000] <Hixie>
sorry i can't give you a better answer :-)

[16:56:00.0000] <TabAtkins>
jamesr_: Ah, I see.  image-rendering comes from SVG, that's why it's non-prefixed.  The only innovation is applying it to the HTML <img>.

[16:57:00.0000] <jamesr_>
TabAtkins: and <canvas> and <video>

[16:57:01.0000] <TabAtkins>
Yeah.

[16:58:00.0000] <jamesr_>
or background-image on any element

[16:58:01.0000] <TabAtkins>
So you just wanted a less shittier name than crisp-edges?

[16:58:02.0000] <jamesr_>
yeah

[16:58:03.0000] <jamesr_>
and to see if anyone else is interested in it

[16:58:04.0000] <jamesr_>
i'd propose nearestNeighbor

[17:00:00.0000] <TabAtkins>
That goes against the current trend in the names, which is to express *intent* and letting that map to some particular algorithm that respects the intent.

[17:02:00.0000] <heycam>
"optimizeSpeed - Indicates that the user agent shall emphasize rendering speed over quality. The user agent should use a resampling algorithm which achieves the goal of fast rendering, with the requirement that the resampling algorithm shall be at least as good as nearest neighbor resampling."

[17:02:01.0000] <heycam>
although i wouldn't be surprised if nearest neighbour might be slower than resampling on gpus or something

[17:06:00.0000] <Hixie>
ok the magic disappearing scheme in the chrome url bar is starting to piss me off

[17:06:01.0000] <Hixie>
every time i try to copy/paste a domain name i get a scheme along with it

[17:07:00.0000] <TabAtkins>
And?

[17:07:01.0000] <Hixie>
i don't want a scheme, i want the domain name!

[17:07:02.0000] <TabAtkins>
Where does the distinction matter?

[17:07:03.0000] <Hixie>
when i try to paste the domain name somewhere that wants the domain name, i have to go back and edit the scheme out

[17:07:04.0000] <Hixie>
every time

[17:07:05.0000] <TabAtkins>
Where are you pasting things that take a domain name but don't understand schemes?

[17:07:06.0000] <Hixie>
e.g. if i want to edit ~/damowmow.com/playground/htmlwg/chart.html

[17:08:00.0000] <Hixie>
i end up getting ~/http://damowmow.com/playground/htmlwg/chart.html

[17:08:01.0000] <Hixie>
and have to go and edit out the http:// bit

[17:08:02.0000] <TabAtkins>
Oh.  That seems like a weird edge case.

[17:08:03.0000] <Hixie>
happens to me at least a dozen times a day

[17:08:04.0000] <Hixie>
but i agree i'm an edge case

[17:09:00.0000] <Hixie>
not saying it should change

[17:09:01.0000] <Hixie>
just that it's frustrating for me :-)

[17:09:02.0000] <TabAtkins>
Solution: copy all but the first letter of the domain name, then type the first letter before pasting.

[17:09:03.0000] <TabAtkins>
Should be roughly equivalent in difficulty to just copying the domain without the scheme in a non-Chrome browser.

[17:10:00.0000] <Hixie>
i generally copy it by double clicking the first word and dragging to the end

[17:10:01.0000] <Hixie>
doing it more precisely takes more effort

[17:10:02.0000] <TabAtkins>
Dude, you click?

[17:10:03.0000] <TabAtkins>
ctr+l, home, right, shift+end, ctrl+c

[17:11:00.0000] <Hixie>
no home key on this keyboard

[17:11:01.0000] <TabAtkins>
Your keyboard's broken.

[17:11:02.0000] <Hixie>
no argument from me there

[17:11:03.0000] <TabAtkins>
/me can't do any serious text editting without home/end.

[17:11:04.0000] <Hixie>
i use ctrl+a ctrl+e on qwerty keyboads

[17:12:00.0000] <Hixie>
i do use home/end on my dvorak keyboard though

[17:12:01.0000] <Hixie>
don't have that here though

[17:14:00.0000] <jamesr_>
heycam: that's kind of my problem with optimizeSpeed/optimizeQuality

[17:14:01.0000] <jamesr_>
heycam: the speed/quality tradeoff is pretty different on the GPU

[17:14:02.0000] <TabAtkins>
Which is why the intent-based keywords are better.  ^_^

[17:14:03.0000] <jamesr_>
but nearestNeighbor is asking for a certain visual appearance, not some perf hint

[17:14:04.0000] <heycam>
right

[17:14:05.0000] <heycam>
i'd be happy with nearestNeighbor for exactly that reason

[17:14:06.0000] <heycam>
that's the specific behaviour you want

[17:15:00.0000] <heycam>
nearestNeighbor/nearestNeighbour :)

[17:15:01.0000] <TabAtkins>
I think not.  ^_^

[17:15:02.0000] <jamesr_>
the american spelling is less bytes on the wire :)

[17:15:03.0000] <TabAtkins>
The web is written in American.

[17:15:04.0000] <heycam>
yeah, yeah

[17:15:05.0000] <TabAtkins>
'Murrican, I mean.

[17:15:06.0000] <heycam>
but look at the X11 colo[u]r name synonyms!

[17:16:00.0000] <TabAtkins>
Don't get me started on X11 colors.

[17:19:00.0000] <heycam>
relax, peachpuff :D

[17:20:00.0000] <Hixie>
in the last 24 hours, the htmlwg just reached it's highest number of open issues since we started using an issue tracker

[17:21:00.0000] <Hixie>
http://damowmow.com/playground/htmlwg/chart.html

[17:22:00.0000] <jamesr_>
what are they doin' over there?

[17:28:00.0000] <TabAtkins>
Hrm.  The "default" size of replaced elements is, what, 300px by 200px?

[17:28:01.0000] <jamesr_>
300x150 iirc

[17:28:02.0000] <TabAtkins>
kk.

[17:38:00.0000] <TabAtkins>
Hmm.  I'm about to define the element-ref() function in CSS, which allows the functionality Moz currently offers with -moz-element() and mozSetImageElement(), where you can use elements that aren't even in the document as image sources.

[17:39:00.0000] <TabAtkins>
I'm wondering which part makes sense to specify in CSS, and which part makes sense to specify in HTML.

[17:41:00.0000] <TabAtkins>
CSS always only applies to a document, so I don't know how sensical it is to talk about the ability to create a canvas in js and use it as an image without adding it to a document.

[17:48:00.0000] <TabAtkins>
Hixie: I think I'll just write it as "the host language may define a way to associate elements with idents for the purpose of this function", and then give you some text for HTML5.  Sound all right?

[18:11:00.0000] <heycam>
why is the default replaced element size not the golden ratio, that is the question

[18:11:01.0000] <jcranmer>
because that's not sufficiently arbitrary

[23:24:00.0000] <cardona507>
isn't there a version of the spec that is a little easier on the browser?

[23:25:00.0000] <cardona507>
i'm forgetting the url

[23:25:01.0000] <Rik`>
cardona507: http://www.whatwg.org/html5

[23:25:02.0000] <cardona507>
gracias

[00:27:00.0000] <MikeSmith>
I wonder if anybody here has ever set up a mercurial mirror of a subversion repo and might have advice on how best to go about it

[00:28:00.0000] <MikeSmith>
I found it pretty easy to set up git mirrors for subversion repos, but am finding it not quite as easy to figure out if/how to do it for mercurial

[00:33:00.0000] <hsivonen>
MikeSmith: there's a one-time import tool at least

[00:34:00.0000] <hsivonen>
MikeSmith: is this for validator stuff or something else?

[00:34:01.0000] <MikeSmith>
for validator stuff

[00:34:02.0000] <MikeSmith>
was going to try to see if I could set up some mirrors at bitbucket

[00:37:00.0000] <MikeSmith>
it looks like the Atlassian folks have added a lot of features lately and it has some better feature parity with github now

[00:37:01.0000] <jgraham>
MikeSmith: hgsvn ?

[00:37:02.0000] <MikeSmith>
jgraham: seems to be deprecated

[00:38:00.0000] <jgraham>
Oh, well I guess you follow the pointer to hgsubversion then

[00:38:01.0000] <MikeSmith>
yeah

[00:39:00.0000] <jgraham>
Looks quite like git-svn really

[00:50:00.0000] <hsivonen>
MikeSmith: I'd be ok with moving repos other than the syntax repo to bitbucket without mirroring

[00:50:01.0000] <hsivonen>
MikeSmith: i.e. making bitbucket become the new repo of record

[00:51:00.0000] <hsivonen>
MikeSmith: for the syntax repo, it's necessary to discuss with fantasai

[00:51:01.0000] <MikeSmith>
ok

[00:51:02.0000] <hsivonen>
MikeSmith: assuming the a migration tool that attempts to preserve history is used

[00:51:03.0000] <MikeSmith>
yep

[00:53:00.0000] <MikeSmith>
so I will try to get the others set up at bitbucket today

[00:53:01.0000] <MikeSmith>
OK if I e-mail fantasai to ask about the syntax repo?

[00:53:02.0000] <MikeSmith>
(and CC you of course)

[00:54:00.0000] <hsivonen>
MikeSmith: OK

[00:54:01.0000] <MikeSmith>
OK, thanks

[00:55:00.0000] <hsivonen>
I'm http://bitbucket.org/hsivonen

[00:55:01.0000] <hsivonen>
has bitbucket been always owned by atlassian?

[00:56:00.0000] <hsivonen>
looks like it's a recent purchase

[01:10:00.0000] <MikeSmith>
hsivonen: yeah, I think Atlassian acquired it only a couple months ago

[01:30:00.0000] <MikeSmith>
hsivonen: got https://bitbucket.org/validator/validator set up

[01:30:01.0000] <MikeSmith>
and you should have full admin access to it

[01:31:00.0000] <MikeSmith>
working on the util module next

[01:32:00.0000] <MikeSmith>
jgraham: hgsubversion appears to be the way to go

[01:33:00.0000] <MikeSmith>
dead simple to get things copied over with it

[01:33:01.0000] <MikeSmith>
though it seems a lot slower than doing similar with git-svn

[01:33:02.0000] <hsivonen>
MikeSmith: it looks like changeset authorship didn't get migrated

[01:33:03.0000] <MikeSmith>
no?

[01:34:00.0000] <hsivonen>
MikeSmith: every changeset is authored by sideshowbarker

[01:34:01.0000] <hsivonen>
MikeSmith: including ones I made

[01:34:02.0000] <MikeSmith>
no, that's just the most recent one

[01:34:03.0000] <MikeSmith>
oh wait

[01:34:04.0000] <MikeSmith>
that's probably because I muffed it up

[01:34:05.0000] <hsivonen>
MikeSmith: e.g. https://bitbucket.org/validator/validator/changeset/71849bf8f10b

[01:34:06.0000] <MikeSmith>
not the importt

[01:35:00.0000] <MikeSmith>
but there is a way that you can set aliases within bitbucket

[01:35:01.0000] <MikeSmith>
I think I just set the alias wrong

[01:35:02.0000] <MikeSmith>
yeah

[01:35:03.0000] <hsivonen>
it should be possible to retain the changeset authors with the migration tools, since the migration from svn to hg.mozilla.org preserved auhors

[01:35:04.0000] <MikeSmith>
lemme see if I can fix it right now

[01:35:05.0000] <MikeSmith>
yeah, it did preserve it for sure

[01:36:00.0000] <MikeSmith>
just the UI is showing what it shows because I muffed up the bitbucket UI setting for it somehow

[01:37:00.0000] <MikeSmith>
there we go

[01:37:01.0000] <MikeSmith>
should work now

[01:37:02.0000] <hsivonen>
MikeSmith: cool. thanks.

[01:37:03.0000] <MikeSmith>
there's a settings thing to change the mappings here:

[01:37:04.0000] <MikeSmith>
https://bitbucket.org/validator/validator/admin/committers

[01:38:00.0000] <hsivonen>
MikeSmith: btw, after the DoS against bugzilla.validator.nu taking down the script and style sheet that html5.validator.nu uses, I started (again) contemplating serving style.js and script.js from the servlet itself

[01:39:00.0000] <hsivonen>
MikeSmith: would that work for your deployment?

[01:39:01.0000] <MikeSmith>
yeah, sure

[01:39:02.0000] <hsivonen>
ok

[01:39:03.0000] <MikeSmith>
I can't see any reason why it would not, anyway

[01:39:04.0000] <MikeSmith>
and if I run into problems, I'll just figure out how to fix them

[01:40:00.0000] <hsivonen>
my plan is

[01:40:01.0000] <hsivonen>
 1) Upon startup, load the files into RAM from the jar that has the schemas

[01:40:02.0000] <hsivonen>
 2) compute crytographic hashes of the file contents

[01:40:03.0000] <hsivonen>
 3) gzip the files

[01:41:00.0000] <hsivonen>
 4) Keep around byte arrays for the gzipped contents in RAM

[01:41:01.0000] <hsivonen>
serve the contents from HASH.js and HASH.css

[01:41:02.0000] <hsivonen>
6) Make the HTML point to HASH.js and HASH.css

[01:42:00.0000] <hsivonen>
7) set the expiry of HASH.js and HASH.css to a year

[01:43:00.0000] <wirepair>
DoS? care to explain?

[01:44:00.0000] <hsivonen>
wirepair: someone kept GETting show_bug.cgi with various bug numbers from bugzilla.validator.nu

[01:44:01.0000] <wirepair>
ah

[01:45:00.0000] <hsivonen>
wirepair: this exhausted the resources on the server that was also hosting about.validator.nu, which servers the UI script and style for html5.validator.nu

[01:45:01.0000] <wirepair>
gotcha

[01:45:02.0000] <hsivonen>
although html5.validator.nu is on a different server

[01:45:03.0000] <wirepair>
right

[01:45:04.0000] <MikeSmith>
hsivonen: sounds workable to me

[01:45:05.0000] <hsivonen>
MikeSmith: ok

[01:46:00.0000] <MikeSmith>
I think the only change it would mean for my deployment is that I'd need to point to the HASH.js and HASH.css files in my custom page and form templates

[01:46:01.0000] <MikeSmith>
as far as I can understand ti

[01:48:00.0000] <hsivonen>
MikeSmith: don't your templates use the current configurability mechanism for the URLs of those files?

[01:48:01.0000] <hsivonen>
anyway, this shouldn't be a big change for the templates

[01:48:02.0000] <MikeSmith>
yeah

[01:48:03.0000] <MikeSmith>
yeah, true (what you said)

[01:49:00.0000] <MikeSmith>
they are just using the same mechanism

[01:49:01.0000] <MikeSmith>
so, anyway, it'd be no problem as far as I can see

[01:50:00.0000] <MikeSmith>
hsivonen: so if I can get the non-syntax repos set up at bitbucket today, you want me to also go ahead and switch the build script to use them instead?

[01:50:01.0000] <hsivonen>
MikeSmith: I'm ok with you changing the build script, but I can do it too, if you'd like

[01:50:02.0000] <MikeSmith>
ok

[01:50:03.0000] <MikeSmith>
I guess we'll see how long it takes me to get stuff set up

[01:51:00.0000] <MikeSmith>
but I think I can get them set up within the next hour or so

[01:51:01.0000] <hsivonen>
ok. (I'm stepping away for a bit to get lunch)

[01:51:02.0000] <MikeSmith>
ok

[01:51:03.0000] <MikeSmith>
I will be stepping away at some point for beer

[01:52:00.0000] <MikeSmith>
after which I may or may not be stepping or stumbling back

[01:52:01.0000] <MikeSmith>
but anyway, there's no rush I guess

[01:56:00.0000] <thiessenp>
Is it possible to create a canvas DOM fragment/element, set its width/height (el.style.width=200), and then append it to the body? When I try this my style rules keep getting ignored - seriously cramping my style :>

[02:10:00.0000] <zcorpan>
looking at http://damowmow.com/playground/htmlwg/chart.html it looks like a chair change is overdue

[02:12:00.0000] <MikeSmith>
that's an interesting way to interpret things

[02:12:01.0000] <jgraham>
We had that converstaion like 6 months ago

[02:13:00.0000] <zcorpan>
oh

[02:13:01.0000] <MikeSmith>
do UAs process scripts as expected in content served as text/html if you do <script type="text/javascript"> <![CDATA[... unescaped script content ...]]></script> ?

[02:14:00.0000] <MikeSmith>
that is, if you use CDATA inside the script element in text/html

[02:14:01.0000] <MikeSmith>
a pseduo-CDATA section

[02:14:02.0000] <zcorpan>
MikeSmith: the "<![CDATA[" is passed to the script engine and results in a compile time syntax error

[02:15:00.0000] <MikeSmith>
I see

[02:15:01.0000] <MikeSmith>
will the rest of the script still be processed?

[02:15:02.0000] <zcorpan>
no

[02:16:00.0000] <MikeSmith>
hmm

[02:16:01.0000] <MikeSmith>
OK

[02:16:02.0000] <MikeSmith>
I guess I should let dude on the www-validator list know that

[02:18:00.0000] <zcorpan>
MikeSmith: SVG <script> in text/html supports <![CDATA[ though

[02:18:01.0000] <MikeSmith>
OK

[02:19:00.0000] <zcorpan>
and even needs <![CDATA[ unless you fancy escaping your < and & as &lt; and &amp;

[02:21:00.0000] <MikeSmith>
I definitely don't fancy that

[02:21:01.0000] <MikeSmith>
I don't really fancy needing to use CDATA sections either

[02:22:00.0000] <MikeSmith>
but I guess I fancy it more than I would escaping JS code

[02:22:01.0000] <zcorpan>
there was some discussion about aligning the rules between the two <script>s

[02:23:00.0000] <zcorpan>
in some bug?

[02:38:00.0000] <MikeSmith>
zcorpan: yeah, I think I remember something about it but can't remember the discussion having led anywhere

[02:39:00.0000] <MikeSmith>
validator sources except for the syntax repo are now mirrored at bitbucket

[02:39:01.0000] <MikeSmith>
https://bitbucket.org/validator

[02:40:00.0000] <MikeSmith>
hopefully fantasai will be OK with having the syntax repo moved there as well

[02:47:00.0000] <Philip`>
thiessenp: Set canvas.width=200, not canvas.style.width=200

[02:48:00.0000] <MikeSmith>
man, the set of content-blocking mechanisms for users in IE seems… baroque

[02:48:01.0000] <MikeSmith>
http://blogs.msdn.com/b/ie/archive/2010/11/30/selectively-filtering-content-in-web-browsers.aspx

[02:48:02.0000] <thiessenp>
Philip': oh huh strange ok - thanks! :D

[02:48:03.0000] <MikeSmith>
I wonder how normal users are supposed to figure out what knob to turn for what particular type of blocking

[02:49:00.0000] <MikeSmith>
but I guess that's the case for other browsers as well

[02:59:00.0000] <annevk>
Hixie, http://search.cpan.org/dist/Net-Twitter/lib/Net/Twitter.pod

[03:00:00.0000] <annevk>
Hixie, make it happen

[03:01:00.0000] <jgraham>
Someone fixed it, I thought

[03:01:01.0000] <annevk>
the latest tweet is from September 1

[03:01:02.0000] <annevk>
matjas semi-volunteered to fix it

[03:02:00.0000] <hsivonen>
:-( http://damowmow.com/playground/htmlwg/chart.html times out in Opera Mini. That is, Opera Mini stops long-running scripts and sends the result to the client before the chart has been fully rendered

[03:02:01.0000] <annevk>
but I think if Hixie just uses that library it should be fine

[03:02:02.0000] <hsivonen>
also, SVG would be more appropriate than canvas for charts

[03:03:00.0000] <hsivonen>
I hate it when I forget to hg add test cases to a patch

[03:04:00.0000] <annevk>
there's worse things in the world

[03:04:01.0000] <annevk>
like breaking the tree

[03:05:00.0000] <hsivonen>
In Mozilla's case, failing to hg add test cases breaks the tree

[03:05:01.0000] <hsivonen>
but fortunately, in my case only a tryserver push got broken

[03:06:00.0000] <annevk>
http://kimjongillookingatthings.tumblr.com/

[03:17:00.0000] <hsivonen>
can anyone subscribe to public-html-testsuite by sending the usual email to public-html-testsuite-request?

[03:19:00.0000] <hsivonen>
bah. I guess I'll reply to jgraham without being subscribed and let the list owner perform a moderator action

[03:21:00.0000] <jgraham>
hsivonen: Anyone should be able to subscribe in the normal way, I think

[03:21:01.0000] <hsivonen>
jgraham: if so, the system is really slow today

[03:35:00.0000] <MikeSmith>
hsivonen: mailing-list DB says you are already subscribed to public-html-testsuite

[04:03:00.0000] <thiessenp>
I feel obligated to ask (out of curiosity) is their an archive or repository of logs/talks specific to HTML5 inclusion-vs-separation of WAI-ARIA? (I help out with ARIA :)

[04:05:00.0000] <annevk>
other than searching I wouldn't really know

[04:06:00.0000] <annevk>
there's a task force mailing list of some kind too

[04:07:00.0000] <thiessenp>
I'll search around - thanks

[04:19:00.0000] <MikeSmith>
hsivonen: it occurs to me that we could also set up a mirror of the jing-trang code on bitbucket if we cared to

[04:20:00.0000] <hsivonen>
MikeSmith: does the importer software really handle export properly, too?

[04:20:01.0000] <MikeSmith>
dunno what you mean by export…

[04:21:00.0000] <MikeSmith>
you mean export from Bitbucket?

[04:21:01.0000] <hsivonen>
that is, if I commit to the jing-trang bitbucket mirror, will it end up in the main jing-trang svn automagically?

[04:21:02.0000] <MikeSmith>
ah, no

[04:21:03.0000] <MikeSmith>
nope

[04:21:04.0000] <MikeSmith>
that'd be the downside, I guess

[04:22:00.0000] <hsivonen>
what value would a bitbucket mirror of jing-trang add other than pull-only users not having to deal with installing svn?

[04:22:01.0000] <MikeSmith>
that'd be it

[04:22:02.0000] <hsivonen>
I see

[04:22:03.0000] <MikeSmith>
that's the only value I had in mind

[04:22:04.0000] <MikeSmith>
just eliminating a dependency

[04:23:00.0000] <MikeSmith>
but I guess most users who have mercurial installed are very likely the have subversion installed also

[04:23:01.0000] <thiessenp>
(yup)

[04:23:02.0000] <hsivonen>
if build.py still supported pulling from upsteam svn, I'd be ok with providing an option to pull using hg instead, but I'd continue using svn 

[04:24:00.0000] <hsivonen>
of course, I'd prefer the jing-trang project upsteam converting the Google Code project from svn to hg

[04:24:01.0000] <MikeSmith>
yeah

[04:24:02.0000] <MikeSmith>
indeed

[04:24:03.0000] <MikeSmith>
I guess maybe that's the better thing to try to get done

[04:25:00.0000] <hsivonen>
earlier, it seemed that Linus was just flaming the svn guys, but I'm inclined to think he was right

[04:25:01.0000] <hsivonen>
"CVS done right" isn't a good goal

[04:25:02.0000] <MikeSmith>
heh

[04:25:03.0000] <MikeSmith>
yeah

[04:25:04.0000] <MikeSmith>
I think history has proven that

[04:26:00.0000] <MikeSmith>
and based on my own experiences, I think think subversion deserves every ounce of grief heaped upon it

[04:26:01.0000] <jgraham>
hsivonen: an interesting difference between Opera and Mozilla is that we don't require 100% pass rate for a test to be added to our regression tracking system

[04:26:02.0000] <jgraham>
Therefore I don't think designing on the assumption that everyone will require that makes sense

[04:27:00.0000] <hsivonen>
jgraham: interesting

[04:27:01.0000] <hsivonen>
jgraham: we manually flag failing assertions in the test itself

[04:27:02.0000] <hsivonen>
by using todo() instead of ok() and todo_is() instead of is()

[04:27:03.0000] <jgraham>
Yes, that obviosuly doesn't work for shared tests

[04:28:00.0000] <hsivonen>
jgraham: and if known-to-fail assertions start accidentally passing, the tree is considered broken

[04:28:01.0000] <hsivonen>
jgraham: we probably wouldn't import a given test until it passed

[04:29:00.0000] <hsivonen>
that is, I expect we wouldn't just pull the testsuite wholesale without manual vetting

[04:29:01.0000] <jgraham>
That seems strange and wrong

[04:29:02.0000] <thiessenp>
:)

[04:29:03.0000] <jgraham>
Does Mozilla use any non-in-house tests at the moment?

[04:30:00.0000] <hsivonen>
jgraham: yes, but they've been mochitestified

[04:30:01.0000] <hsivonen>
jgraham: e.g. the DOM test suite has bogus parts modified

[04:30:02.0000] <jgraham>
Oh, wow

[04:30:03.0000] <hsivonen>
jgraham: and for html5lib tree builder tests, we have a file that lists the tests we don't pass

[04:30:04.0000] <hsivonen>
it's a short list

[04:31:00.0000] <hsivonen>
I'd expect us to maintain some kind of exclusion manifest for HTML WG tests

[04:31:01.0000] <MikeSmith>
hsivonen: btw, if you have a few minutes to review my patch for un-assbackwards-ing the error reporting for src-less script elements, the patch is at http://bugzilla.validator.nu/attachment.cgi?id=187 (and sent you by e-mail too, but I get the feeling your inbox is even more overloaded than mine is…)

[04:31:02.0000] <hsivonen>
MikeSmith: looking

[04:31:03.0000] <MikeSmith>
thanks

[04:33:00.0000] <jgraham>
Also, since I seem to be getting a, I think unjustified, reputation for optimising for percentages, I will point out the minutes of the last two HTML test telecons where I suggested that we stop publishing percentages

[04:34:00.0000] <hsivonen>
MikeSmith: looks good

[04:35:00.0000] <MikeSmith>
thanks, I'll go ahead and commit it

[04:35:01.0000] <jgraham>
My desire to have Tests and asserts seperate is based on the conceptual difference between necessary and sufficient conditions

[04:35:02.0000] <Philip`>
I put "@moz-todo" markers in my canvas tests, which cause the mochitestification process to output todo() instead of ok() etc

[04:35:03.0000] <hsivonen>
jgraham: I didn't think percentages were your fault

[04:35:04.0000] <Philip`>
(Not a very scalable solution)

[04:36:00.0000] <jgraham>
hsivonen: You and sicking both suggested that the Test/assert difference is motivated by a desire to make percentages work well

[04:36:01.0000] <hsivonen>
jgraham: oh has sicking commented as well? I didn't notice.

[04:36:02.0000] <jgraham>
On IRC last night

[04:36:03.0000] <hsivonen>
I see

[04:37:00.0000] <hsivonen>
Opera Mini usually doesn't show the last bits in the IRC logs, so I tend to miss late night IRC chatter when checking the logs in the bus in the morning

[04:37:01.0000] <jgraham>
So far Maciej has suggested using something closer to WebKit tests and you and sicking have suggested cloning Mochitests

[04:38:00.0000] <hsivonen>
jgraham: not surprising :-/

[04:38:01.0000] <annevk>
also boring

[04:39:00.0000] <annevk>
I'd rather this was sorted out already so I could release some more stuff

[04:39:01.0000] <annevk>
(after converting appropriately)

[04:39:02.0000] <jgraham>
hsivonen: FWIW I consider depending on onerror a non-starter

[04:39:03.0000] <hsivonen>
jgraham: :-(

[04:40:00.0000] <annevk>
I would be fine with depending on onerror btw

[04:40:01.0000] <annevk>
It's something that will be fixed way before we're done

[04:40:02.0000] <hsivonen>
jgraham: why is depending on onerror a non-starter? who doesn't implement it?

[04:40:03.0000] <jgraham>
Apart from anything else it doesn't actually solve the problem because a single exception stops the whole file

[04:41:00.0000] <jgraham>
hsivonen: We dont' and webkit don't

[04:41:01.0000] <jgraham>
Maciej had the same opinion :)

[04:41:02.0000] <hsivonen>
jgraham: aren't Opera and WebKit supposed to be the fastest to add stuff? ;-)

[04:42:00.0000] <jgraham>
hsivonen: Even if we add it, it doesn't solve the problem

[04:42:01.0000] <hsivonen>
jgraham: only if you want more fine-grained data than test file passed/failed

[04:42:02.0000] <hsivonen>
jgraham: I think individual asserts are only interesting for finding out why the test file failed when it does

[04:43:00.0000] <jgraham>
Which we do if you can add thousands of tests in a file

[04:43:01.0000] <jgraham>
I totally disagree

[04:43:02.0000] <hsivonen>
worked for me with the whole html5lib test suite running as one mochitest

[04:43:03.0000] <jgraham>
It is more or less a requirement for us that we can see which subtests passed and which failed

[04:43:04.0000] <jgraham>
and that we get those results consistently even when we regress unexpected things

[04:44:00.0000] <hsivonen>
for us, you don't get to push until you've sorted out the test failures 

[04:45:00.0000] <hsivonen>
so the process is 1) edit code, 2) push to try, 3) observe test failures, 4) change code or tests as appropriate until the tests don't fail

[04:45:01.0000] <hsivonen>
5) push to m-c

[04:46:00.0000] <gsnedders>
hsivonen: For us, it's just there have to be no regressions from pass to fail.

[04:46:01.0000] <hsivonen>
where with HTML WG tests step #4 could involve editing an exclusion manifest

[04:46:02.0000] <jgraham>
Our process is similar except that we can cope with long-lived failures. That is not all tests must pass. But we need to get a consistent set of results from each file

[04:46:03.0000] <hsivonen>
isn't that equivalent to having a manifest of what failures to ignore as long as the failures don't abort the test?

[04:46:04.0000] <jgraham>
and we don't have to hack the test files to deal with that

[04:47:00.0000] <hsivonen>
if once in a while you have a failure that aborts the whole tests, it's easier to fix it right away than to create abstraction for it

[04:49:00.0000] <jgraham>
In general it is better to avoid such things

[04:50:00.0000] <jgraham>
Because it is not easy to tell that a file that used to give 25 results and now gives 5 results is a failure

[04:51:00.0000] <hsivonen>
does that mode of failure happen often enough to justify making tests harder to write?

[04:51:01.0000] <jgraham>
It seems to happen reasonably often

[04:51:02.0000] <gsnedders>
Yes, certainly.

[04:51:03.0000] <hsivonen>
(I realize I live in a glass house that's randomly orange)

[04:52:00.0000] <jgraham>
I really want to make tests easier to write, but it feels like the requirement to make them easier than almost any other testing framework is onerous

[04:52:01.0000] <hsivonen>
I just want them to be as easy as mochitests

[04:52:02.0000] <jgraham>
that is there are few test frameworks that will allow you to write a test without defining a function

[04:53:00.0000] <gsnedders>
Ours is certainly fairly orange too, but adding stuff with a design that we know to have caused issues before seems bad.

[04:53:01.0000] <gsnedders>
Because, uh, it'll likely lead to more randomness that'll just need to be fixed at a later date

[04:53:02.0000] <jgraham>
As far as I can tell MochiTests are conceptually broken in a way that is particularly bad for Opera

[04:57:00.0000] <hsivonen>
hey. maybe I've already been subscribed to public-html-testsuite

[04:57:01.0000] <hsivonen>
and that's why my attempt to subscribe didn't work

[05:05:00.0000] <hsivonen>
Does NeedsRadar on bugs.webkit.org in practice mean that Apple considers the bug a Safari release blocker?

[05:18:00.0000] <annevk>
Minefield consistently crashes on http://tc.labs.opera.com/apis/XMLHttpRequest/testrunner.htm

[05:19:00.0000] <annevk>
I filed a bug report

[05:19:01.0000] <annevk>
euh crash report

[05:19:02.0000] <annevk>
anything else?

[05:19:03.0000] <annevk>
(it also seems to score poorly, less than half are passing)

[05:19:04.0000] <annevk>
Opera meanwhile stops running after a while...

[05:19:05.0000] <annevk>
bah

[05:20:00.0000] <hsivonen>
annevk: doesn't crash for me

[05:20:01.0000] <annevk>
on Mac OS

[05:20:02.0000] <hsivonen>
annevk: Mac OS X 10.6.x in my case, too

[05:21:00.0000] <hsivonen>
annevk: so you didn't file a bug yet?

[05:21:01.0000] <annevk>
I don't have the latest it seems

[05:22:00.0000] <annevk>
when I go to about Minefield it indicates it is downloading something

[05:22:01.0000] <hsivonen>
looks like I'm not permitted to search crash reports by URL

[05:23:00.0000] <annevk>
no longer crashes in latest

[05:23:01.0000] <annevk>
sorry for the noise

[05:58:00.0000] <annevk>
"unacceptable to many of our corporate customers"

[05:58:01.0000] <annevk>
/me amused

[05:58:02.0000] <hsivonen>
annevk: where's the quote from?

[05:59:00.0000] <annevk>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=11449

[05:59:01.0000] <annevk>
another person confusing UI and submission formats

[05:59:02.0000] <jgraham>
Resolved:Missing the point

[05:59:03.0000] <hsivonen>
"Missing the point" were the exact words I had in mind

[06:00:00.0000] <moo_>
those imperialist bastards - time to push metric system and ISO dates forward :)

[06:02:00.0000] <charlvn>
by "contributor"?

[06:02:01.0000] <annevk>
whoa, charlvn is back?

[06:02:02.0000] <hsivonen>
I'm going to a front end developer meeting today. It's good to hear what the users of the stuff we spec think.

[06:02:03.0000] <annevk>
welcome back charlvn

[06:02:04.0000] <charlvn>
annevk: was i gone? :)

[06:03:00.0000] <charlvn>
thanks :)

[06:03:01.0000] <hsivonen>
charlvn: "contributor" is a generic address for people who haven't logged in

[06:03:02.0000] <annevk>
somewhere between now and like three years ago?

[06:03:03.0000] <charlvn>
hsivonen: ah ok thanks

[06:03:04.0000] <annevk>
at least, haven't seen you around

[06:03:05.0000] <charlvn>
annevk: lol i have just been lurking :)

[06:03:06.0000] <zcorpan>
hey charlvn

[06:03:07.0000] <charlvn>
hi zcorpan :)

[06:04:00.0000] <zcorpan>
wassup

[06:05:00.0000] <charlvn>
not much, just lurking (or i guess, not at the moment) :)

[06:11:00.0000] <annevk>
I guess at some point we should have some CSS to control the UI

[06:11:01.0000] <annevk>
bug has a point in that browser locale is not really enough

[06:14:00.0000] <hsivonen>
it's still amusing that "unacceptable to our corporate customers" is used as an argument amplifier

[06:20:00.0000] <annevk>
yeah, reminds me of the CDF WG

[06:20:01.0000] <annevk>
and IBM

[06:30:00.0000] <Rik`>
http://www.opera.com/

[06:31:00.0000] <Rik`>
this is really cool, congrats !

[06:31:01.0000] <annevk>
hmm, I wasn't invited

[06:34:00.0000] <annevk>
heh, didn't realize it was interactive until now

[06:35:00.0000] <Rik`>
just waiting for someone to decrypt the No subject in Drafts

[06:35:01.0000] <Rik`>
Great Opportunity in Sent is good :)

[06:37:00.0000] <annevk>
FW: Love the show

[06:37:01.0000] <annevk>
hahaha

[06:37:02.0000] <annevk>
oh god our marketing team

[06:40:00.0000] <jgraham>
Ah, I hoped the new tab button would work 

[06:41:00.0000] <annevk>
yeah, was a whee bit disappointed by that too

[06:43:00.0000] <Rik`>
I'm disappointed that there is no "150 million Opera users worldwide" in the Sent folder. It should be there since the out of office reply is in received

[06:44:00.0000] <Rik`>
plus, 8 days to send an out of office reply is weird

[06:45:00.0000] <annevk>
hours, you mean?

[06:46:00.0000] <annevk>
was the first thing I checked too

[06:46:01.0000] <Rik`>
"On Mon, 22 Nov 2010 09:11, Jon von Tetzchner wrote:"

[06:47:00.0000] <Rik`>
"2010/12/01 13:37"

[06:47:01.0000] <Rik`>
looks like 8 days to me

[06:47:02.0000] <Rik`>
9 actually

[06:48:00.0000] <annevk>
o_O

[06:48:01.0000] <annevk>
/me was just checking the time

[07:00:00.0000] <hsivonen>
/me wonders how 150 million users was measured

[07:00:01.0000] <zcorpan>
hmm, can't figure out what to do with the ones and zeros in Drafts

[07:00:02.0000] <zcorpan>
i guess i'm being slow

[07:00:03.0000] <hsivonen>
are they active daily users of the desktop version as determined by update pings?

[07:00:04.0000] <hsivonen>
or does it include Mini and Mobile users?

[07:00:05.0000] <hsivonen>
or is the metric something other than ADU?

[07:01:00.0000] <miketaylr>
zcorpan: i can spoil it for you if you like :)

[07:01:01.0000] <Rik`>
zcorpan: my timeline suggests something around OperaCodeCracker

[07:02:00.0000] <miketaylr>
binary -> ______ -> _______

[07:03:00.0000] <zcorpan>
oh, i tried to decode as _______ but that also gave garbage. i guess i used a bad ______ decoder

[07:03:01.0000] <miketaylr>
;P

[07:05:00.0000] <hsivonen>
solved!

[07:05:01.0000] <Philip`>
"Pongratulations! Lou cracked the code."

[07:05:02.0000] <Philip`>
I wonder who Lou is

[07:06:00.0000] <hsivonen>
Philip`: that's an interesting distortion

[07:06:01.0000] <hsivonen>
I didn't get the distortion

[07:06:02.0000] <Philip`>
/me just did a "tr [a-z] [n-za-m]" which wasn't quite enough

[07:10:00.0000] <jgraham>
Oh, solved

[07:10:01.0000] <jgraham>
Much good it will do me though 

[07:17:00.0000] <jgraham>
/me wonders if the effects of nerd-sniping our own engineering department were carefully considered

[07:18:00.0000] <jcranmer>
jgraham: what could go wrong?

[07:19:00.0000] <jgraham>
Well some curious developer could be reading it on their mobile on the way home, start tring to solve it and get run over by a bus

[07:19:01.0000] <jgraham>
For example

[07:20:00.0000] <jcranmer>
said the actress to the bishop

[07:20:01.0000] <jcranmer>
nah, doesn't work as well

[07:55:00.0000] <annevk>
hahaha

[07:55:01.0000] <karlcow>
http://rebuildingtheweb.com/en/html5-shortcomings/

[07:55:02.0000] <annevk>
maybe someone should point the TAG to http://lastweekinhtml5.blogspot.com/

[07:56:00.0000] <annevk>
Vlad Alexander has been trolling HTML5 since before it was called that

[07:57:00.0000] <karlcow>
hehe annevk 

[07:57:01.0000] <Ms2ger>
We should create a registry of known web standards trolls

[07:58:00.0000] <Ms2ger>
At IANA, perhaps?

[07:58:01.0000] <karlcow>
Ms2ger: I will be sure that each of us would be part of it at a point in time. Registry is not the good thing. 

[07:58:02.0000] <karlcow>
a trollometer would be better

[07:58:03.0000] <paul_irish>
i think i successfully prevented this post from being published on Smashing Magazing

[07:59:00.0000] <karlcow>
but then it would create a race to become the highest troller :/

[07:59:01.0000] <annevk>
problem?

[08:01:00.0000] <karlcow>
trollometer, yes

[08:01:01.0000] <karlcow>
/me is not a big fan of jackass and race to bottom

[08:02:00.0000] <beowulf>
paul_irish: climategate!

[08:02:01.0000] <nimbupani>
trolling html5 since 1995?

[08:03:00.0000] <jgraham>
It's OK if the registery was at IANA no one would ever get registered

[08:03:01.0000] <jgraham>
Unless, perhaps, they came with their own RFC certifying their trollishness

[08:04:00.0000] <Ms2ger>
I believe an axiomatic proof of trolling should be enough.

[08:04:01.0000] <annevk>
karlcow, as in http://memegenerator.net/Troll-Face/ImageMacro/877773/Troll-Face-problem.jpg ;)

[08:05:00.0000] <karlcow>
heh

[08:05:01.0000] <jgraham>
Ms2ger: So there would be exactly one troll in the registry?

[08:05:02.0000] <Ms2ger>
Possibly

[08:08:00.0000] <Lachy>
that article is so blatantly written to make HTML5 look worse than it is.

[08:09:00.0000] <Lachy>
it seems to think that just because something is technically permitted in HTML, given its inherrent flexibility, that it is somehow implicitly encouraged. Like using heading elements out of numerical order, even though the spec advices otherwise.

[08:09:01.0000] <Lachy>
*advises

[08:13:00.0000] <zcorpan>
HTMLTidy barks on the following valid HTML4: <table><tbody><tr><td> Hello </table> <p>LOL</p>

[08:13:01.0000] <zcorpan>
(iirc)

[08:14:00.0000] <zcorpan>
no need to use new html5 features to demonstrate brokenness in HTMLTidy

[08:17:00.0000] <jgraham>
But it is nice rhetoric anyway. After all how many people will actually test that

[08:17:01.0000] <jgraham>
?

[08:24:00.0000] <annevk>
hsivonen, Gecko does not always override iso-8859-1 with windows-1252?

[09:24:00.0000] <annevk>
heh, script insertion was annoying seven years ago -- http://ln.hixie.ch/?start=1079103487&order=-1&count=1

[09:25:00.0000] <Ms2ger>
/me had that post open

[09:26:00.0000] <MikeSmith>
+1 to Ms2ger suggestion of creating an IANA registry of known web standards trolls

[09:29:00.0000] <jgraham>
Disappointingly, it seems like a stretch to classify organisations that fail to keep their registries up to date as "trolls"

[09:30:00.0000] <MikeSmith>
no, that's just plain shirking of actual responsibilities

[09:31:00.0000] <MikeSmith>
clearly we need to first identify some Designated Experts on trolling

[09:31:01.0000] <MikeSmith>
that part should not be so hard at least

[09:53:00.0000] <TabAtkins>
Ms2ger: It's really not worthwhile responding to Shelley's comments on bugs, especially ones that are so clearly trolling.  Just ignore them.

[12:09:00.0000] <AryehGregor>
It's pleasant to actually agree with Shelley Powers and disagree with TabAtkins for once.  http://www.w3.org/Bugs/Public/show_bug.cgi?id=11449

[12:14:00.0000] <Dashiva>
Why?

[12:16:00.0000] <Dashiva>
This seems like a perfect example of something the browser should control

[12:16:01.0000] <Dashiva>
The author will be some ignorant twit who thinks everyone in the whole world uses the exact same system as himself, and hardcode that

[12:17:00.0000] <AryehGregor>
For the same reason authors are allowed to make their website yellow on neon green.

[12:18:00.0000] <AryehGregor>
There's no reason a user couldn't override the author-stated preference, or that some browsers ignore the author-stated preference in some or all cases, so the final control is with the user as usual.

[12:18:01.0000] <Dashiva>
That's not an argument for providing author control in the first place

[12:18:02.0000] <AryehGregor>
Generally speaking, authors should be allowed to control the appearance of anything that falls within their page if they want, barring security concerns.

[12:19:00.0000] <AryehGregor>
Authors are going to want to match the rest of their site.  If their application is hardcoded to output dates in twelve-hour time, for instance, they might want it to accept them in twelve-hour time too for consistency.

[12:19:01.0000] <AryehGregor>
Particularly if the inputs and outputs are mixed together on the same page.

[12:20:00.0000] <AryehGregor>
This is even more important for things that are ambiguous, like mm/dd/yy vs. dd/mm/yy.  One site should use the same convention cross-site.

[12:20:01.0000] <Dashiva>
So you want to allow it to accomodate another abusive use case (hardcoding a date format the user doesn't necessarily want)

[12:20:02.0000] <AryehGregor>
Users don't necessarily want their browser's default date format.  How many know how to change it?

[12:21:00.0000] <AryehGregor>
Consistency is good too.

[12:22:00.0000] <AryehGregor>
If a British person is using an American site and is asked for a date in xx/xx/xx format, they'll probably assume it's dd/mm/yy.  This should not change if the author uses HTML5 vs. custom controls.

[12:22:01.0000] <AryehGregor>
Users won't be able to distinguish.

[12:23:00.0000] <AryehGregor>
Plus, pragmatically, if HTML5 native controls aren't styleable enough, authors will be pushed to use scripted controls instead, which is worse from every perspective.

[12:23:01.0000] <Dashiva>
Part of the point of native date controls is that they won't have to guess in the first place

[12:23:02.0000] <Dashiva>
The date picker will clearly distinguish between date and month

[12:23:03.0000] <AryehGregor>
(These arguments are essentially the same as I made for browsers auto-rendering <date>.)

[12:23:04.0000] <AryehGregor>
It might, or might not.  Have you seen WebKit's "date picker"?  :)

[12:23:05.0000] <AryehGregor>
(yeah, I know, WebKit HTML5 forms are just completely broken)

[12:24:00.0000] <Dashiva>
Yes, they really messed that one up

[12:24:01.0000] <Dashiva>
At least Opera had the excuse of being a "legacy implementation"

[12:24:02.0000] <AryehGregor>
Opera's implementation is pretty terrible, but still vastly better than WebKit's.

[12:25:00.0000] <AryehGregor>
But basically, sites should be consistent.  An American site should use American conventions consistently, not American conventions where the content is author-written but some arbitrary convention where using native inputs (except where necessary for security).

[12:25:01.0000] <AryehGregor>
Anything that's visually part of the site rather than the UI should be primarily controlled by the author.

[12:37:00.0000] <Hixie>
TabAtkins: sounds good to me; give me some context also when you send me text (if you haven't yet)

[12:58:00.0000] <TabAtkins>
Hixie: Will do.  I'm writing the text now.  I'm quite certain it will be inadequate, but it should be clear enough to write the *proper* text from.

[12:58:01.0000] <TabAtkins>
I don't know the proper way to do idl/etc. 

[12:58:02.0000] <Hixie>
heh

[12:58:03.0000] <Hixie>
no worries

[12:59:00.0000] <Hixie>
all i need is the hook in the other spec

[12:59:01.0000] <TabAtkins>
kk, that'll definitely be present - it's really simple.

[12:59:02.0000] <Hixie>
cool

[12:59:03.0000] <TabAtkins>
HTML5 just needs a single function on Document, and some language about which elements can be associated while out of the document.

[12:59:04.0000] <Hixie>
what are we actually doing here btw? :-)

[12:59:05.0000] <TabAtkins>
I'll show you in a few minutes when I finish this text and push it.  ^_^

[12:59:06.0000] <Hixie>
k :-)

[13:13:00.0000] <TabAtkins>
Hixie: http://dev.w3.org/csswg/css3-images/#element-reference

[13:14:00.0000] <TabAtkins>
HTML will just need to define the mapping mechanism for the element-ref() function.

[13:14:01.0000] <Hixie>
/me wonders what legitimate use cases there are for element() that don't involve abusing the semantics of the html page

[13:14:02.0000] <TabAtkins>
Reflections, for one.

[13:15:00.0000] <Hixie>
wouldn't you want reflections to reflect whatever the element's rendering is, not what an element referenced by ID's rendering is?

[13:15:01.0000] <TabAtkins>
#foo::after { content: element(#foo); transform: reflectY(-1); /* or whatever*/ filter: some-mask(); }

[13:16:00.0000] <TabAtkins>
Another is, frex, slideshow previews for the next/prev slide.

[13:17:00.0000] <TabAtkins>
Thumbnails in general, actually.

[13:17:01.0000] <Hixie>
seems like  img::after { content: element; transform: reflectY(-1); /* or whatever*/ filter: some-mask(); }  would be infinitely more useful

[13:17:02.0000] <TabAtkins>
Well, here, I'll let mozHacks speak for me: http://hacks.mozilla.org/2010/08/mozelement/

[13:17:03.0000] <othermaciej>
I think Hixie is wondering about non-self reference use cases

[13:17:04.0000] <othermaciej>
live thumbnails are one

[13:17:05.0000] <othermaciej>
e.g. for a slideshow program

[13:17:06.0000] <othermaciej>
er, presentation program

[13:17:07.0000] <othermaciej>
thumbnails of slides at the side, live interactive large version in the main content

[13:17:08.0000] <Hixie>
seems like that would be better done with XBL, but failing the existence of XBL, that it would be content, not style

[13:18:00.0000] <Hixie>
i mean, any time that the style sheet must be involved for the page to be usabel is a bit dubious, imho

[13:18:01.0000] <Hixie>
which it would seem is the case here

[13:18:02.0000] <TabAtkins>
Hixie: I don't understand how XBL would solve the problem of "render a tiny version of some other element, without duplicating the element".

[13:25:00.0000] <Hixie>
xbl would solve the problem of "i need to have a pager widget that shows thumbnails of these elements", presumably using element-ref() and so forth

[13:25:01.0000] <Hixie>
the blog post you linked to fails to answer the question

[13:25:02.0000] <Hixie>
it just has a lot of use cases i consider abuses of the platform :-)

[13:25:03.0000] <Hixie>
the SVG ones make more sense

[13:25:04.0000] <Hixie>
but really the SVG should be embedded in the CSS, not the HTML

[13:25:05.0000] <Hixie>
anyway, for element-ref(), you need some sort of hook for me to spec. I recommend making the hook <dfn> and styled bold, so that later editors are less likely to change the wording out from under me :-)

[13:25:06.0000] <TabAtkins>
Hixie: What do you mean?  At the moment I'm saying "The host language for the document may expose a method of associating elements with identifiers for the purpose of this function; CSS does not define how this occurs."

[13:26:00.0000] <TabAtkins>
The intention is that HTML defines a js function to do the mapping.  Do I need to expose anything further on the CSS side?

[13:26:01.0000] <Hixie>
something like "When an element is said to have *a specified element-ref() identifier*, the user agent must..." or some such

[13:27:00.0000] <TabAtkins>
Ah, kk.  One sec.

[13:31:00.0000] <Hixie>
right, you don't give me a hook :-)

[13:31:01.0000] <Hixie>
you just say that there is one

[13:31:02.0000] <Hixie>
some text that can unambiguously be used in both specs so that people know that there is a link

[13:31:03.0000] <Hixie>
lunch, bbiab

[13:31:04.0000] <TabAtkins>
Done.  "specified element-ref() identifier" it is.

[13:32:00.0000] <TabAtkins>
The sentence "The host language for the document may expose a method of giving elements a specified element-ref() identifier associating the element with an identifier" isn't sufficient?

[13:36:00.0000] <roc>
TabAtkins: are you going to respond to my last email on the element() thread, then?

[13:36:01.0000] <TabAtkins>
roc: Yup.

[13:37:00.0000] <roc>
I wonder what Hixie means by "abuses of the platform"

[13:38:00.0000] <TabAtkins>
Presumably things like adding an empty <div> for the sole purpose of receiving an element() background.

[13:42:00.0000] <roc>
You can use an <img> if that makes you feel better

[13:42:01.0000] <TabAtkins>
+ the content property.

[13:43:00.0000] <roc>
allowing element() as a value for the content property would make sense

[13:43:01.0000] <TabAtkins>
Well, that part's automatic.  'content' accepts images as a value, making it act like a replaced element.

[14:04:00.0000] <TabAtkins>
roc: Where was that email? It's not in my inbox, and I can't find it through searching right now.

[14:10:00.0000] <TabAtkins>
roc: Never mind, finally found it by just searching for messages you've sent.

[14:10:01.0000] <roc>
now I can't find it :-)

[14:10:02.0000] <TabAtkins>
Sent to WHATWG on Nov 23.

[14:11:00.0000] <roc>
ta

[14:12:00.0000] <roc>
so, what do you think about my proposal there? :-)

[14:12:01.0000] <TabAtkins>
I didn't like it, which is why I came up with something else.  ^_^

[14:14:00.0000] <TabAtkins>
what out-of-document elements are accepted by setImageElement currently?  Just <img>, <canvas>, and <video>?

[14:14:01.0000] <roc>
yes

[14:14:02.0000] <TabAtkins>
Should we allow other elements, with an argument for a "viewport" width and height to render them in?

[14:14:03.0000] <roc>
well, it accepts all of them, but only those will render if they're not in a document

[14:14:04.0000] <roc>
note that allowing setImageElement to refer to nodes in a document is useful

[14:15:00.0000] <TabAtkins>
Yes, definitely.

[14:15:01.0000] <TabAtkins>
That's not in question.  I'm just wondering about the out-of-document cases.

[14:15:02.0000] <roc>
trying to render arbitrary elements not in a document is a real pain

[14:15:03.0000] <roc>
you'll have to construct a presentation for them somehow

[14:15:04.0000] <roc>
not just define the viewport, but also the medium

[14:15:05.0000] <TabAtkins>
All right, no problem.  We can just disallow them.

[14:15:06.0000] <TabAtkins>
Ah, true.

[14:17:00.0000] <roc>
I honestly think that using a selector where a single element is needed is a bad idea, and syntax like first() to resolve the ambiguity would be nice

[14:17:01.0000] <TabAtkins>
I prefer using element() and elements() to make the distinction.

[14:17:02.0000] <TabAtkins>
(That's what I've currently got in the Positioned Layout draft.)

[14:18:00.0000] <roc>
what if someone wants to use the last element that matches a selector?

[14:18:01.0000] <TabAtkins>
Shrug?

[14:18:02.0000] <roc>
why is first() bad, really?

[14:18:03.0000] <TabAtkins>
Having to immediately nest a function feels icky.

[14:18:04.0000] <TabAtkins>
I don't even particularly like nesting rgba() colors in gradients, but that's tolerable.

[14:19:00.0000] <TabAtkins>
"background-image: element(first(selector));", though...

[14:19:01.0000] <roc>
it's only for the non-ID selector case, which isn't even a big use case

[14:19:02.0000] <roc>
also

[14:19:03.0000] <TabAtkins>
Not a big use-case for images, no.  Somewhat larger use-case for Positioned Layout.

[14:20:00.0000] <roc>
element(self) is needed

[14:20:01.0000] <TabAtkins>
I agree.

[14:20:02.0000] <TabAtkins>
I think that Selectors should define :self or :this or something, which, when the selector is run in the context of an element, matches that element.  (Matches nothing when just run in the context of a document.)

[14:21:00.0000] <roc>
what are the large use-cases for Positioned Layout where a selector matches multiple elements and you want to only get the first one?

[14:21:01.0000] <TabAtkins>
And presumably matches the superior parent of a pseudoelement.

[14:21:02.0000] <Hixie>
roc: i mean doing something in html which would look broken if you removed the css, for instance

[14:21:03.0000] <Hixie>
TabAtkins: lgtm

[14:21:04.0000] <roc>
why shoehorn 'self' into selectors, if it's only going to work in element() anyway?

[14:22:00.0000] <TabAtkins>
roc: It should work in element-scoped querySelector, too.

[14:22:01.0000] <Hixie>
TabAtkins: so actually... should this be in html? it seems like it might make more sense in cssom. I can add it for now and see if anne wants to take it, if you like.

[14:23:00.0000] <TabAtkins>
roc: re matching multiple elements and only getting the first for Positioned Layout, hm, not sure actually.  Thinking on my use-cases, they're all for elements().

[14:23:01.0000] <TabAtkins>
Hixie: Yeah, sure, either one makes sense.  It's just not appropriate for CSS itself, since the mapping is host-language specific.

[14:23:02.0000] <Hixie>
there are other host languages than the DOM? :-)

[14:24:00.0000] <TabAtkins>
Theoretically?  Sure.  We like to maintain the fiction that CSS is used outside of HTML and SVG.

[14:24:01.0000] <Hixie>
fair enough

[14:24:02.0000] <Hixie>
i guess websrt in a way is one :-)

[14:24:03.0000] <TabAtkins>
Ah, that's right!  I keep forgetting to use that as an example.

[14:24:04.0000] <roc>
I don't even know of any use-cases for element() images where we want a non-ID selector

[14:24:05.0000] <roc>
so maybe you should just make elements() take a selector and element() take a bare <ident> or #id selector

[14:24:06.0000] <TabAtkins>
roc: I'll think on it a bit, but you may be right.

[14:25:00.0000] <TabAtkins>
And if so, then yeah, I'll just merge the two functions.

[14:25:01.0000] <TabAtkins>
elements() could always take an "nth" argument as well, after all.

[14:26:00.0000] <TabAtkins>
Hixie: Make the hook "specified element reference identifier", to leave my options open.  I'll change the draft in a bit to reflect that.

[14:27:00.0000] <Hixie>
k

[14:27:01.0000] <Hixie>
that's a bit generic

[14:27:02.0000] <Hixie>
i mean, it even describes id=""

[14:27:03.0000] <TabAtkins>
Insert "CSS" after "specified".

[14:27:04.0000] <Hixie>
k

[14:28:00.0000] <jamesr_>
roc: how do you implement that? you redraw the element at the new position, not reuse the old rasterization right?

[14:29:00.0000] <roc>
Hixie: actually I think all the examples in the hack.mozilla.org post would fall back usefully with CSS disabled, or could be easily made to

[14:30:00.0000] <Hixie>
TabAtkins: so i went to add soemthing to Window, but realised it's more of a document-specific thing, so i went to add it to HTMLDocument, something like document.setRef(element, ref), but then i realised that the document was superfluous and what really matters is the element, so i went to HTMLElement and tried element.setRef(ref) but then realised that that is basically an attribute so went to add element.ref = ref but then i realised... that's the same as .id

[14:30:01.0000] <Hixie>
TabAtkins: so... do i just define the element's ID as being the "specificed CSS element reference identifier"? that seems redundant.

[14:30:02.0000] <roc>
for example the slide thumbnails should be an <ol> with each list item containing the slide title, being a link to the slide itself

[14:30:03.0000] <TabAtkins>
You want to add it to Document.  That way you can associate out-of-document script-created elements with the CSS of a page.

[14:31:00.0000] <roc>
CSS adds the thumbnails as decoration

[14:31:01.0000] <roc>
jamesr_: yes, we redraw the element

[14:31:02.0000] <Hixie>
roc: if you're using style="", imho you're almost always doing something wrong, or at least, the platform isn't supporting you well enough

[14:31:03.0000] <TabAtkins>
And it's useful to have it distinct from id, so script, particularly libraries, can swap things around without having to interfere with ids across the document.

[14:32:00.0000] <jamesr_>
roc: so if you have, say, text in the element then you re-rasterize it potentially differently (i.e. if there's a rotation applied then subpixel AA has to be turned off)?

[14:32:01.0000] <Hixie>
roc: i think it would make perfect sense to have CSS be able to grab the relevant thumbnail from the target of an in-document link, for example... but having to duplicate the information in the style="" attribute means we (as platform designers) have failed to make it easy enough.

[14:32:02.0000] <Hixie>
TabAtkins: there are no document-less elements, elements are always associated with a document even when not technically _in_ a document

[14:33:00.0000] <TabAtkins>
Okay, but CSS doesn't know about them if they're not in the document tree.

[14:33:01.0000] <roc>
Hixie: yeah OK, but that starts to make the feature rather elaborate

[14:33:02.0000] <roc>
jamesr_: that is correct

[14:34:00.0000] <roc>
however there are many situations where reusing the rasterization would be desirable, so we'll do that in due course

[14:34:01.0000] <roc>
as an optimization

[14:34:02.0000] <TabAtkins>
Hixie: Even if they're associated with the document, they're not children of the root element.

[14:34:03.0000] <Hixie>
roc: elaborate is fine, especially if it will save authors work on the long run. Having to update every single style="" every time you change your mind on exactly how this works is what CSS was designed to save us from

[14:34:04.0000] <jamesr_>
yeah, so long as you know it'll rasterize the same way no reason not to re-use the old rasterization

[14:35:00.0000] <Hixie>
TabAtkins: right, so i can just reuse the ID, right?

[14:35:01.0000] <roc>
in practice for stuff like the slide thumbnails you use script to generate them

[14:35:02.0000] <Hixie>
TabAtkins: i mean, i can say that the ID is the "specificed CSS element reference identifier"

[14:36:00.0000] <TabAtkins>
roc: Can you explain the reasoning behind the "currentslide" example further?  That's the reason I'm not solely using the id.

[14:36:01.0000] <roc>
so generating the right style attributes is very little extra work

[14:37:00.0000] <roc>
now sure, ideally CSS would have some kind of templating system and be able to generate all this extra content without scripting and keep it in sync automatically, but that's some way out

[14:37:01.0000] <Hixie>
oh, the currentslide one is interesting

[14:37:02.0000] <Hixie>
that's backwards from what i was imagining

[14:37:03.0000] <Hixie>
it's not setting the element to an ID, it's setting an ID to an element

[14:37:04.0000] <Hixie>
s/ID/reference/

[14:37:05.0000] <TabAtkins>
Yeah.

[14:37:06.0000] <Hixie>
ok, that makes sense

[14:38:00.0000] <TabAtkins>
kk

[14:38:01.0000] <roc>
TabAtkins: what needs to be explained?

[14:38:02.0000] <TabAtkins>
roc: Never mind, Hixie found the example and was convinced by it.

[14:39:00.0000] <Hixie>
can anyone think of another API in the platform somewhere that sets a key to a value? i guess localStorage is one example

[14:39:01.0000] <Hixie>
should it be possible to read back from this API?

[14:39:02.0000] <Hixie>
find out what the currentslide is?

[14:40:00.0000] <TabAtkins>
getRef?

[14:40:01.0000] <TabAtkins>
Makes sense, yeah.

[14:40:02.0000] <Hixie>
well if we expose that the way to do it is just to have an attribute that returns a map object / hash / whatever we call it

[14:40:03.0000] <TabAtkins>
Sure.

[14:43:00.0000] <TabAtkins>
Hixie, are you okay with sharing the contents of http://lists.w3.org/Archives/Member/w3c-css-wg/2007JanMar/0535.html?

[14:43:01.0000] <TabAtkins>
(I assume yes.)

[14:43:02.0000] <Hixie>
sure

[14:44:00.0000] <Hixie>
what should this API be

[14:44:01.0000] <Philip`>
/me wonders when the Member archives will appear on Wikileaks

[14:44:02.0000] <Hixie>
document.what.currentslide = element

[14:45:00.0000] <Hixie>
document.cssElementMap.currentslide = element?

[14:45:01.0000] <TabAtkins>
That sounds good to me.

[14:49:00.0000] <TabAtkins>
roc: All right, I agree with you.  Removing the element-ref() function now.

[14:52:00.0000] <Hixie>
does that mean i should stop adding this feature

[14:53:00.0000] <TabAtkins>
Oh, no.  No effect on what you're doing.

[14:53:01.0000] <TabAtkins>
Just rejiggering the syntax on my side.

[14:53:02.0000] <Hixie>
k

[14:54:00.0000] <Hixie>
what reference should I use for this "specified CSS element reference identifier" term btw?

[14:55:00.0000] <Hixie>
[CSSGENCON]?

[14:55:01.0000] <TabAtkins>
CSSIMAGES

[14:55:02.0000] <Hixie>
k

[14:56:00.0000] <roc>
is there an actual use case for reading back from this map?

[14:56:01.0000] <Hixie>
well presumably it's not unusual for code to reference the current slide

[14:57:00.0000] <Hixie>
why have the JS and the browser maintain this mapping separately if the browser can just expose the current setting

[14:57:01.0000] <Hixie>
it's less likely to go out of sync if there's nothing to sync

[14:57:02.0000] <roc>
because developers are likely to have a variable 'currentSlide' somewhere and find that more natural then using document.cssElementMap['currentSlide']?

[14:58:00.0000] <roc>
but OK

[14:59:00.0000] <TabAtkins>
Dammit Hixie, your UTF8 decoder does not cater to my needs.  I have space-separated binary bytes!

[14:59:01.0000] <Hixie>
doesn't it support that?

[14:59:02.0000] <Hixie>
what's your input look like

[14:59:03.0000] <TabAtkins>
01010101 01000111 01001010 ...

[15:00:00.0000] <TabAtkins>
And it takes a trivial amount of effort to convert it to one of your accepted binary input forms!

[15:03:00.0000] <TabAtkins>
Hm, now I've converted to the 0b-prefixed form and selected "Freeform numeric", but it's claiming I didn't provide any bytes.

[15:04:00.0000] <Hixie>
odd, freeform wfm

[15:05:00.0000] <Hixie>
anyway i've added "binary" as an option

[15:06:00.0000] <TabAtkins>
Huh.  Same error still, with the "binary" option.  How odd.

[15:07:00.0000] <Hixie>
paste the start of your data?

[15:07:01.0000] <TabAtkins>
01010101 01000111 01001010 01101000 01100100 01000111 01010110

[15:07:02.0000] <Hixie>
hm

[15:07:03.0000] <Hixie>
only the first got converted for me

[15:07:04.0000] <Hixie>
odd

[15:08:00.0000] <TabAtkins>
Hm, all these bytes are in the low half, so if they're text decoding them as utf8 wont' do anything special.

[15:08:01.0000] <TabAtkins>
I already got gibberish doing a plain ascii conversion.

[15:08:02.0000] <TabAtkins>
This looks like base64 maybe, though.

[15:09:00.0000] <Hixie>
ok i got it working again

[15:09:01.0000] <TabAtkins>
All right, almost certainly base64.  Looks like it's now enciphered.

[15:10:00.0000] <TabAtkins>
Somebody with the java runtime wanna help me out real quick?

[15:11:00.0000] <TabAtkins>
(Need to run an applet that'll crack a viginere cipher key.)

[15:11:01.0000] <TabAtkins>
Wait... this is rot13.

[15:12:00.0000] <Rik`>
TabAtkins: aren't you decoding some Opera stuff ? :)

[15:12:01.0000] <TabAtkins>
Yup.

[15:13:00.0000] <Rik`>
I have a Python one liner on my twitter account if you need :)

[15:13:01.0000] <TabAtkins>
Finished already.  ^_^


2010-12-02
[16:05:00.0000] <Hixie>
TabAtkins: checked in

[16:08:00.0000] <TabAtkins>
What section is it in?

[16:09:00.0000] <Hixie>
search for cssElementMap

[16:09:01.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/complete.html#dom-document-csselementmap

[16:09:02.0000] <TabAtkins>
Sigh.  To do that I have to load the single-page version.

[16:09:03.0000] <TabAtkins>
Ah, that works.

[16:09:04.0000] <Hixie>
(it's in the DOM tree accessors section, for lack of a better place to put it)

[16:10:00.0000] <Hixie>
the single-page version works fine with chrome, fwiw

[16:10:01.0000] <TabAtkins>
You messed up a <dfn> tag in the first sentence.

[16:10:02.0000] <Hixie>
oops

[16:10:03.0000] <Hixie>
will fix

[16:10:04.0000] <Hixie>
thanks

[16:12:00.0000] <TabAtkins>
Looks good to me, Hixie.  Thanks.

[16:12:01.0000] <Hixie>
np

[16:12:02.0000] <TabAtkins>
Hm.  The "specified" seems redundant.  Wanna drop that?

[16:13:00.0000] <Hixie>
sure

[16:14:00.0000] <TabAtkins>
Oh, wait, one thing.

[16:15:00.0000] <Hixie>
yes?

[16:15:01.0000] <TabAtkins>
Only img, canvas, and video should be assignable to the map while out-of-document.

[16:15:02.0000] <Hixie>
can't enforce that since you can add it to the map and then remove an element

[16:15:03.0000] <TabAtkins>
Any other element shouldn't be assignable while out-of-document, and should remove itself from the map if removed from teh doc.

[16:16:00.0000] <Hixie>
that would be rather confusing -- better to just make it that a reference to an unusable element gets ignored on the CSS side, imho

[16:16:01.0000] <Hixie>
or i can make those elements not define the mapping for you

[16:16:02.0000] <Hixie>
but still have them be in the API's map

[16:17:00.0000] <Hixie>
it'd be confusing because you don't want it to matter whether you create, then add to the list, then append to the doc, or create, then append, then add to hte list

[16:17:01.0000] <Hixie>
and you don't want things to break when all you're doing is moving an element around the dom (which involves being removed from the doc briefly)

[16:17:02.0000] <TabAtkins>
Yeah, makes sense.  So yeah, make it so they don't map to the CSS identifier while not in the document.

[16:17:03.0000] <Hixie>
k

[16:18:00.0000] <Hixie>
img, video, canvas is a rather arbitrary list

[16:18:01.0000] <Hixie>
what about <input type=image>, <object>, <embed>...?

[16:19:00.0000] <TabAtkins>
<input type=image>, sure.  object, embed, iframe I'm not sure of right now - I've already asked about them on the list.

[16:19:01.0000] <TabAtkins>
I think the answer should be "yes", though there are wrinkles, like iframes not loading until they're added to the document.

[16:20:00.0000] <Hixie>
do i have to have the HTML side also handle the case of the <img> element's bitmap not being available yet?

[16:20:01.0000] <TabAtkins>
It should just be any element whos rendering is unaffected by surrounding elements by default.

[16:20:02.0000] <Hixie>
or of a <canvas> with height=0?

[16:20:03.0000] <Hixie>
it really seems best to have this be all handled in the CSS side

[16:20:04.0000] <TabAtkins>
No, CSS should handle that with "with an appearance exactly equivalent to that of the referenced element"

[16:20:05.0000] <Hixie>
well then if you can handle <img alt="x" src="bogus"> out of doc why can't you handle <span>x</span>?

[16:21:00.0000] <Hixie>
battery's dying, gotta go. will check in once i'm near power again.

[16:21:01.0000] <TabAtkins>
The problem with doing this on the CSS side is that CSS has no notion of elements outside the document.  So I'm not sure how to talk about them.

[16:33:00.0000] <karlcow>
http://www.barrypearson.co.uk/articles/layout_tables/history.htm

[17:21:00.0000] <karlcow>
about implementing current practices - http://ksi.cpsc.ucalgary.ca/archives/HTML-WG/html-wg-94q3.messages/0042.html

[17:35:00.0000] <karlcow>
Where ... might be any number of idioms, including nothing at all, i.e.

[17:35:01.0000] <karlcow>
<!DOCTYPE HTML>

[17:35:02.0000] <karlcow>
I would take this declaration to mean "gimme the current version of the

[17:35:03.0000] <karlcow>
HTML DTD."

[17:35:04.0000] <karlcow>
in http://ksi.cpsc.ucalgary.ca/archives/HTML-WG/html-wg-94q3.messages/0056.html

[17:36:00.0000] <TabAtkins>
Heh, that's exactly what it means now, except without the whole nasty DTD business.  ^_^

[17:46:00.0000] <karlcow>
TabAtkins, I spend a bit of time in the archives on a regular basis. And the discussions are *always* the same. 

[17:56:00.0000] <MikeSmith>
we really should just write a separate spec for <!doctype html>

[17:57:00.0000] <MikeSmith>
and take it to Rec

[17:57:01.0000] <MikeSmith>
unattached from HTML5

[17:57:02.0000] <MikeSmith>
which would enable anybody to use it on any doc they wanted for whatever purpose they wanted

[18:00:00.0000] <karlcow>
MikeSmith: ahahaha :D

[18:00:01.0000] <TabAtkins>
Man, this is a fascinating read: http://www.w3.org/TR/1998/NOTE-CSS-potential-19981210

[18:01:00.0000] <TabAtkins>
Most of it is stuff we're either just now doing, or plan to do in the very near future.

[18:01:01.0000] <TabAtkins>
They had the future of CSS mapped out over a decade ago.  ^_^

[18:01:02.0000] <TabAtkins>
(Seriously, there's very little that we're doing now or plan to do soon that isn't already on the list.)

[18:02:00.0000] <MikeSmith_>
karlcow: really -- because as TabAtkins said, it really has nothing to do with any DTD at all

[18:03:00.0000] <MikeSmith_>
it's not asking for a gimme of anything

[18:03:01.0000] <MikeSmith>
and it's not asserting the document is an HTML5 document

[18:04:00.0000] <MikeSmith>
if it's asserting anything at all, it's simply that the document is an HTML document, period

[18:05:00.0000] <MikeSmith>
what the spec should say is that it's only needed to prevent UAs from processing the document in quirks mode 

[18:06:00.0000] <TabAtkins>
Remember - all sequences of bytes are HTML documents.  They may not be valid, but they can be processed as HTML.

[18:17:00.0000] <karlcow>
[21:02]  <MikeSmith> which would enable anybody to use it on any doc they wanted for whatever purpose they wanted

[18:17:01.0000] <karlcow>
I thought you were proposing doctype html for word, wordperfect, multimate and wordstar documents

[18:18:00.0000] <MikeSmith>
ah, no

[18:20:00.0000] <karlcow>
hmm I haven't found a page which explains the history mess of html mailing lists such as w3c and ietf one running in parallel. 

[18:37:00.0000] <karlcow>
MikeSmith: :)))) http://lists.w3.org/Archives/Public/www-html-editor/2010JulSep/0001.html

[18:46:00.0000] <karlcow>
ok that is a start :) not perfect but still gives a way to people to find their ways http://www.w3.org/html/wiki/HTML_Mailing_Lists

[18:54:00.0000] <Hixie>
TabAtkins: i don't understand what "with an appearance exactly equivalent to that of the referenced element" means. Consider an inline element, what is its appearance?

[18:55:00.0000] <Hixie>
give line breaking, e.g.

[18:55:01.0000] <Hixie>
or consider an element with a top-margin collapsed with a larger following margin -- what is its appearance? specifically, what is its origin?

[18:55:02.0000] <Hixie>
or consider an element with display:runin

[18:58:00.0000] <roc>
In Gecko, we draw the border-box of the first CSS box

[18:59:00.0000] <roc>
er wrong

[18:59:01.0000] <oojacoboo>
is it really recommended not to use quote with html attributes?

[18:59:02.0000] <oojacoboo>
quotes*

[19:00:00.0000] <roc>
what we do is

[19:00:01.0000] <roc>
we take all the CSS boxes for the element

[19:00:02.0000] <roc>
we compute the bounding box that contains all those CSS boxes

[19:00:03.0000] <boogyman>
oojacoboo: depends on the context, single word attribute values its acceptable, multi-word values must be encapsulated by quotes

[19:00:04.0000] <boogyman>
it's*

[19:01:00.0000] <roc>
er, the bounding box is the union of all the border-boxes of the CSS boxes

[19:01:01.0000] <oojacoboo>
I would think that just for semantics and good use, using them all the time, would be the most appropriate

[19:01:02.0000] <roc>
that defines the image bounds

[19:01:03.0000] <boogyman>
however in the spirit of  consistent coding technique, I always use quotes and lower-case

[19:01:04.0000] <oojacoboo>
html5 spec is littered with attributes without quotes

[19:01:05.0000] <roc>
then we render all the CSS boxes into it in flow order

[19:02:00.0000] <othermaciej>
use of quotes or not is a matter of taste

[19:02:01.0000] <othermaciej>
html5 examples strive to use a variety of styles, to avoid expressing an opinion on what is best

[19:02:02.0000] <othermaciej>
particular quoting conventions are not more or less semantic

[19:03:00.0000] <oojacoboo>
othermaciej: then what is it?

[19:03:01.0000] <othermaciej>
what is what?

[19:03:02.0000] <oojacoboo>
the use or not use of quotes

[19:03:03.0000] <othermaciej>
it is a matter of taste

[19:03:04.0000] <othermaciej>
like I said

[19:03:05.0000] <oojacoboo>
it's not a matter of taste or semantics, what is it?

[19:03:06.0000] <oojacoboo>
you said it's NOT

[19:03:07.0000] <othermaciej>
no, I said:

[19:03:08.0000] <othermaciej>
"use of quotes or not is a matter of taste"

[19:04:00.0000] <oojacoboo>
:P

[19:04:01.0000] <boogyman>
oojacoboo: <element class=one> and <element class="one"> are both acceptable, however  <element class=one two> and <element class="one two"> have separate meanings

[19:04:02.0000] <othermaciej>
you sometimes need quotes for certain values

[19:04:03.0000] <oojacoboo>
othermaciej: don't write confusing shit like that at this hour ;)

[19:04:04.0000] <othermaciej>
it's just like the Unix shell

[19:04:05.0000] <oojacoboo>
boogyman: right

[19:04:06.0000] <othermaciej>
sometimes you need quotes around command parameters

[19:04:07.0000] <oojacoboo>
yea

[19:04:08.0000] <othermaciej>
much of the time you don't

[19:04:09.0000] <othermaciej>
you can still use them when you don't need them

[19:04:10.0000] <oojacoboo>
I'll stick with my anal quoting routine :)

[19:05:00.0000] <othermaciej>
most people choose not to

[19:05:01.0000] <othermaciej>
in HTML, some people feel you should quote even when you don't need to

[19:05:02.0000] <oojacoboo>
yea, like me

[19:05:03.0000] <othermaciej>
others feel you should quote only when needed 

[19:05:04.0000] <othermaciej>
HTML5 lets you do it either way

[19:05:05.0000] <oojacoboo>
anyone here familiar with the <figcaption> element?

[19:06:00.0000] <oojacoboo>
I was trying to get some specifics on it's intent for block level use

[19:07:00.0000] <oojacoboo>
the spec is extremely vague on this element, so far, I've just gone ahead and done it the way I think it should be, but if someone has some intimate knowledge into this element, I'd love to ehar it

[19:07:01.0000] <oojacoboo>
hear*

[19:07:02.0000] <oojacoboo>
http://dev.rentpost.com/managers (you'll see where I have used it in the <figure> at near the bottom on this page

[19:07:03.0000] <oojacoboo>
+)

[19:07:04.0000] <Hixie>
<figcaption> is allowed in one place only, and that's as a child of <figure>

[19:08:00.0000] <oojacoboo>
ummm... duh ;)

[19:18:00.0000] <oojacoboo>
curious on all the new input type values.  How are the current UAs interpreting these?

[19:18:01.0000] <oojacoboo>
are there any backward compatibility techniques

[19:31:00.0000] <Hixie>
oojacoboo: they're doing some stuff on them, not great so far

[19:32:00.0000] <Hixie>
oojacoboo: the back compat story is that older browsers treat them type type=text

[19:32:01.0000] <oojacoboo>
mmm, ok

[19:32:02.0000] <oojacoboo>
I was considering trying to code up some forms with html5, but I think that's probably going to be a waste at this time

[19:33:00.0000] <oojacoboo>
maybe type would be ok to use if they fall back to "text"

[19:33:01.0000] <oojacoboo>
at least for email on mobile you might not get the uppercase default onFocus

[19:36:00.0000] <oojacoboo>
Hixie: do you have any resources on backward compatibility at least for safe use, even if you have to replicate functionality in certain instances

[19:48:00.0000] <Hixie>
not off-hand

[19:48:01.0000] <Hixie>
diveintohtml5.org might have some useful stuff

[19:48:02.0000] <oojacoboo>
are people using things like modernizr and just using multiple form elements?

[19:49:00.0000] <oojacoboo>
not really wanting to write the html twice, doubling the markup

[19:49:01.0000] <boogyman>
oojacoboo: how about you do a couple of simple test cases before making templates for your "production" site

[19:50:00.0000] <oojacoboo>
boogyman: what do you mean?

[19:50:01.0000] <oojacoboo>
I don't plan on coding this straight to production, we do have a dev and stage server...

[19:51:00.0000] <boogyman>
create a simple html example and test in some user-agents 

[19:51:01.0000] <oojacoboo>
I'd prefer not to waste the time coding up a bunch of things that someone already has the answer on

[20:19:00.0000] <Hixie>
roc: except for <img>, <video>, and <canvas>, right?

[20:20:00.0000] <Hixie>
roc: my point was just that the css spec would have to define all this, so having the css spec define what happens when the referenced element is an <img> with broken image data, or a <video> that's still spooling, or a <canvas> with height=0, etc, is something that would have to be defined in css anyway

[20:20:01.0000] <Hixie>
roc: so it's not something the html spec should define

[20:20:02.0000] <roc>
sure

[20:20:03.0000] <roc>
we actually treat <video>/<canvas>/<img> differently depending on whether they have CSS boxes or not

[20:20:04.0000] <Hixie>
makes sense

[21:07:00.0000] <oojacoboo>
Hixie: you write the lang type for the spec?

[21:07:01.0000] <oojacoboo>
html lang="en-US-x-hixie"

[21:45:00.0000] <jamesr_>
Hixie: you there? i'm trying to figure out how to upload something to your live dom viewer

[21:46:00.0000] <jamesr_>
i want to look at a test page i've created on an ipad

[21:46:01.0000] <jamesr_>
i tried clicking 'upload' and have no idea what happened

[21:47:00.0000] <jamesr_>
oh i probably want 'save'

[21:55:00.0000] <jamesr_>
figured it out!

[22:28:00.0000] <Hixie>
oojacoboo: i write the spec

[22:29:00.0000] <jacobolus>
oojacoboo: it's sort of a joke I think :)

[22:44:00.0000] <hsivonen>
http://www.w3.org/News/2010.html#entry-8967

[22:44:01.0000] <hsivonen>
I'm very confused by that announcement. When did the election start?

[22:45:00.0000] <hsivonen>
I thought just a couple of days ago, JeniT was contemplating whether to run for the election

[23:59:00.0000] <othermaciej>
hsivonen: there was a nomination period, it just ended

[00:00:00.0000] <othermaciej>
hsivonen: apparently, the number of nominees was the same as the number of seats up for election, thus making it a bit of a banana republic election

[00:00:01.0000] <jamesr_>
everyone wore a neutral-colored fleece and a scarf?

[00:01:00.0000] <othermaciej>
shows how much you know

[00:02:00.0000] <othermaciej>
banana republic is all about semi-desaturated non-primary tones

[00:07:00.0000] <hsivonen>
othermaciej: I see. It would have been helpful for the announcement to say that it was an election without votes.

[00:07:01.0000] <hsivonen>
I guess it also means that Jeni Tennison chose not to run.

[00:08:00.0000] <othermaciej>
I guess so

[00:08:01.0000] <othermaciej>
there would have been more nominees, but I couldn't convince Dave Singer to nominate people who explicitly said they'd refuse

[00:37:00.0000] <hsivonen>
good to see some chairing on bugs that attempted to circumvent the WG Decision on ISSUE-30

[00:54:00.0000] <asmodai>
/me eyes the latest chrome dev build

[00:56:00.0000] <asmodai>
It's not even loading the html5test.com test anymore :|

[00:58:00.0000] <hsivonen>
Chrome no longer supports HTML5!11!11!11111!!!1

[01:00:00.0000] <asmodai>
hsivonen: yea :)

[01:01:00.0000] <asmodai>
anyway

[01:01:01.0000] <asmodai>
so me and my colleagues are wondering wtf WebSQL stopped

[01:01:02.0000] <asmodai>
I mean, isn't it a good thing if all vendors settled on an implementation? 

[01:01:03.0000] <asmodai>
So what's so much a problem about them all using SQLite?

[01:05:00.0000] <asmodai>
Mmm, funny, same version of Chrome on Mac works

[01:10:00.0000] <asmodai>
aha, chrome --disable-accelerated-compositing makes it work on Windows at least

[01:12:00.0000] <hsivonen>
asmodai: Staying compatible with the version of SQLite that Safari used for the JS-exposed SQL database isn't a goal of the SQLite project

[01:12:01.0000] <hsivonen>
asmodai: thus, keeping compatibility will potentially involve forking SQLite and being on the hook for security patches independently

[01:14:00.0000] <asmodai>
hsivonen: ok, I can understand that not being a goal of SQLite, but it shouldn't be an issue if some fork for webbrowsers was available? Would only ease maintenance for all vendors if they cooperated on that. Maybe I just see things too rose-coloured :)

[01:14:01.0000] <hsivonen>
asmodai: also, it's considered healthy that a feature practically requires all vendors to ship the same code

[01:14:02.0000] <Ms2ger>
unhealthy? :)

[01:14:03.0000] <hsivonen>
Ms2ger: oops. s/healthy/UNhealthy/

[01:15:00.0000] <hsivonen>
I think gzip might be an area where everyone ships the same code, but it's not clear if everyone *has* to

[01:15:01.0000] <hsivonen>
for PNG, everyone probably ships the same code, but probably wouldn't have to

[01:16:00.0000] <hsivonen>
investigating how realistic it would be to ship a JFIF impl. other than the Independent JPEG Group's would be an interesting exercise

[01:17:00.0000] <asmodai>
s/gzip/zlib/

[01:17:01.0000] <asmodai>
At least, I see more acknowledgements for zlib rather than gzip ;)

[01:17:02.0000] <hsivonen>
but at least the zlib project itself aims to keep compatibility

[01:17:03.0000] <asmodai>
fair enough

[02:30:00.0000] <jgraham>
/me notes that if you have <div class="wrap1">…<div class=wrap8> all nested inside each other, you are probably doing it wrong

[02:40:00.0000] <Workshiva>
/me endorses the idea of w3c member archives on wikileaks

[02:47:00.0000] <jgraham>
Seems kinda dull for them. This week on wikileaks: New secret emails reveal that Sir Tim Berners-Lee prefers Fudge Ice Cream to Vanilla"

[02:55:00.0000] <zcorpan>
that's what they discuss in TAG

[03:21:00.0000] <asmodai>
jgraham: sort of like: http://www.theatlanticwire.com/features/view/feature/Wikileaks-Cables-Reveal-That-Canada-Is-Boring-2668

[04:36:00.0000] <annevk>
ooh, the TAG thing was not even an election? hahaha

[04:38:00.0000] <jgraham>
annevk: You should "stand" next time

[04:38:01.0000] <jgraham>
cat amongst the pigeons

[04:38:02.0000] <annevk>
Maciej threatened to get me nominated during TPAC

[04:38:03.0000] <annevk>
I have since been wondering what I have done to upset him

[04:43:00.0000] <hsivonen>
does anyone happen to remember if removing a script from the DOM before it has been executed resets 'already started' in IE and Opera?

[04:45:00.0000] <hsivonen>
now that I'm implementing execution prevention for scripts that have changed docs between "run" and "execute", it would kinda make sense to clone the IE/Opera behavior of canceling a script and unblocking the parser if a pending script is removed from the doc

[04:48:00.0000] <hsivonen>
awesome. the m-c was closed because a test tried to load .swf from zombo.com

[04:48:01.0000] <jgraham>
tests + external servers === evil

[04:52:00.0000] <gsnedders>
m-c?

[04:52:01.0000] <jgraham>
mozilla-central

[04:52:02.0000] <jgraham>
I assume

[04:52:03.0000] <annevk>
hsivonen, not using http://html5zombo.com/ ?!

[04:58:00.0000] <hsivonen>
html5zombo.com is superior to zombo.com except as a plug-in test case

[05:14:00.0000] <karlcow>
annevk: there is still a chance. The last seat is to be nominated by tim ;)

[05:38:00.0000] <hsivonen>
hmm. I wonder what MikeSmith's plan regarding build.py updating was

[05:45:00.0000] <hsivonen>
MikeSmith: I started hacking on build.py

[05:47:00.0000] <annevk>
I hate resolving URLs across multiple windows

[05:47:01.0000] <annevk>
before XMLHttpRequest I never even contemplated stuff like self[0].EventSource

[05:49:00.0000] <annevk>
kind of funny that I suspected the "first script" to be incorrect and the first time I run an actual test it does not appear to match implementations

[05:49:01.0000] <annevk>
I am disappoint

[06:31:00.0000] <hsivonen>
MikeSmith: I've migrated build.py over.

[06:32:00.0000] <hsivonen>
next step is to detect if the user has MQ enabled and use hg pull --rebase instead of --update if so

[06:32:01.0000] <hsivonen>
but not today

[06:56:00.0000] <annevk>
'When Microsoft says "HTML6," I hear "X-UA-Compatible-We-Fucking-Mean-It-This-Time."'

[06:56:01.0000] <annevk>
-- @diveintomark

[07:19:00.0000] <annevk>
hsivonen, btw, we have our own image code

[07:19:01.0000] <annevk>
hsivonen, re discussion earlier today

[09:31:00.0000] <jgraham>
/me curses DOM3 XPath (again)

[11:03:00.0000] <annevk>
Used <s> in a blog post

[11:03:01.0000] <annevk>
had to hack my blog software

[11:07:00.0000] <Ms2ger>
jgraham, s/DOM3 //

[11:18:00.0000] <annevk>
anyone with ideas on structuring weblog archives?

[11:18:01.0000] <annevk>
especially for blogs without tags

[11:18:02.0000] <hober>
annevk: http://diveintomark.org/archives comes to mind

[11:18:03.0000] <Philip`>
annevk: Add a link to your favourite search engine

[11:19:00.0000] <Philip`>
Nobody's going to bother reading the archives any other way

[11:19:01.0000] <annevk>
search engines are

[11:19:02.0000] <annevk>
and I am too

[11:19:03.0000] <Ms2ger>
http://ln.hixie.ch/?command=index comes too mind

[11:19:04.0000] <annevk>
hober, yeah, thinking about that

[11:19:05.0000] <annevk>
oh, Hixie's one should be a lot easier

[11:20:00.0000] <annevk>
but it'll be a long... very long

[11:21:00.0000] <annevk>
there's 2500 entries

[11:21:01.0000] <annevk>
(this includes links)

[11:21:02.0000] <annevk>
(called HREF at one point)

[11:26:00.0000] <zcorpan>
have one page for each year

[11:26:01.0000] <annevk>
I guess I should start with the yearly and monthly pages indeed

[11:27:00.0000] <annevk>
yearly already exists, but currently excludes link posts

[11:30:00.0000] <zcorpan>
oh. maybe http://annevankesteren.nl/archives could list the years instead of the months then?

[11:37:00.0000] <annevk>
zcorpan, yeah prolly

[11:38:00.0000] <karlcow>
annevk: what do you mean by structuring archives

[11:38:01.0000] <karlcow>
access to old entries? I do this http://www.la-grange.net/map

[11:39:00.0000] <karlcow>
http://www.la-grange.net/2009/ http://www.la-grange.net/2009/01/

[11:39:01.0000] <annevk>
yeah, I suspect I will do something like that

[11:39:02.0000] <annevk>
I like how your archives match the style of the site at the time

[11:40:00.0000] <annevk>
I can probably not do that

[11:41:00.0000] <karlcow>
annevk: yes I always kept the old style. There are part of the history of the content. 

[11:42:00.0000] <karlcow>
I have a few broken links to fix here and there. 

[11:43:00.0000] <annevk>
such a rebel

[11:43:01.0000] <annevk>
content != style karlcow

[11:43:02.0000] <annevk>
after so many years at the W3C you should know

[11:43:03.0000] <karlcow>
hehe

[11:43:04.0000] <karlcow>
but style is part of the memories ;)

[11:44:00.0000] <annevk>
no, you're right

[11:44:01.0000] <annevk>
my content is stored in a dumb database, rather than something smart like HTML

[11:44:02.0000] <karlcow>
hehe

[12:14:00.0000] <karlcow>
" I see my job as making the Mozilla developer outreach channels the Switzerland of HTML5, explaining and showing how to get all the cool new things to work across browsers, platforms and markets." -- http://www.readwriteweb.com/archives/html5_mozilla_and_the_future_of_the_web.php

[12:14:01.0000] <karlcow>
does it involve secret funds?

[12:16:00.0000] <annevk>
ok, yearly archives are now better

[12:16:01.0000] <annevk>
including a special style sheet for 2004 and 2005

[12:16:02.0000] <annevk>
(because of HREF)

[12:18:00.0000] <miketaylr>
seems like a standards body would be a better switzerland

[12:24:00.0000] <annevk>
oh yes http://annevankesteren.nl/archives

[12:26:00.0000] <karlcow>
annevk: cool

[12:26:01.0000] <Ms2ger>
http://annevankesteren.nl/2004/01/multicol-spacer

[13:16:00.0000] <oojacoboo>
anyone familiar with the pseudo class that targets the red outline/border for required input elements with html5

[13:17:00.0000] <oojacoboo>
particularly seems to be an incredible eye sore with gecko/-moz

[13:18:00.0000] <oojacoboo>
it's way too loud/in-your-face, whomever made the decision that that'd be the best method of indicated a required field either did it b/c they already had the code for :focus or just doesn't know what they are doing

[13:18:01.0000] <Ms2ger>
-moz-box-shadow: none?

[13:19:00.0000] <oojacoboo>
is that the style element?

[13:19:01.0000] <oojacoboo>
what's the pseudo class?

[13:19:02.0000] <oojacoboo>
:required ?

[13:19:03.0000] <Ms2ger>
:invalid, I guess

[13:19:04.0000] <oojacoboo>
I don't mind having this after a submit, but sitting before is insane

[13:20:00.0000] <oojacoboo>
I actually want it after a submit

[13:20:01.0000] <oojacoboo>
but not before!

[13:20:02.0000] <Ms2ger>
volkmar would know, but we might be fixing that

[13:20:03.0000] <oojacoboo>
something not so loud, PLEASE!

[13:21:00.0000] <oojacoboo>
it ruins the on page eye flow and funneling 

[13:23:00.0000] <oojacoboo>
Ms2ger: that did the trick though, thanks

[14:32:00.0000] <oojacoboo>
anyone know what the style element is for the annoying 2px border around <button> on webkit?

[14:32:01.0000] <oojacoboo>
a border: 0 !important won't even nix it

[14:42:00.0000] <JoePeck>
oojacoboo: I don't see a border on => data:text/html,<button style="border:0">NoBorder

[14:43:00.0000] <JoePeck>
do you have a sample page / picture?

[14:43:01.0000] <oojacoboo>
it's not a "border" really, I think it's the accessibility border

[14:43:02.0000] <oojacoboo>
although, it kicks down the element 2px which I do not want it doing

[14:44:00.0000] <oojacoboo>
inspector says the ua stylesheet is styling border though

[14:44:01.0000] <oojacoboo>
which can't be overridden

[14:44:02.0000] <JoePeck>
hmm, "-webkit-box-sizing: border-box;" help at all? Just a thought. I am not familiar with accessibility items

[14:44:03.0000] <oojacoboo>
tried that, nope

[14:44:04.0000] <oojacoboo>
that's the default for it anyway

[14:44:05.0000] <oojacoboo>
one second, I can get an example

[14:48:00.0000] <oojacoboo>
http://dev.rentpost.com/managers @ JoePeck 

[14:48:01.0000] <oojacoboo>
JoePeck: see the button at the bottom with the contact form, notice how in webkit it's positioned lower

[14:50:00.0000] <JoePeck>
oojacoboo: it has a margin of 2px

[14:51:00.0000] <JoePeck>
oojacoboo: although I don't know where it comes from

[14:51:01.0000] <oojacoboo>
it's not a margin, I don't think so

[14:51:02.0000] <oojacoboo>
almost 100% certain

[14:51:03.0000] <JoePeck>
oojacoboo: setting margin:0 made it look fine in my Safari

[14:51:04.0000] <oojacoboo>
:/

[14:51:05.0000] <oojacoboo>
sec

[14:51:06.0000] <JoePeck>
oojacoboo: check the "Metrics" section of the inspector

[14:51:07.0000] <oojacoboo>
yea

[14:53:00.0000] <JoePeck>
oojacoboo: I have no idea where that margin came from. Might be worth making a reduction. If its webkit only maybe webkit has a bug

[14:53:01.0000] <oojacoboo>
it's not in firefox

[14:54:00.0000] <oojacoboo>
I don't know why the browsers have such a hard time with <button>

[14:54:01.0000] <oojacoboo>
it's one of the most frustrating elements in all of html

[14:54:02.0000] <JoePeck>
oojacoboo: it could be the built-in browser theming. If you're familiar with WebKit code, RenderThemeMac, etc

[14:55:00.0000] <JoePeck>
oojacoboo: maybe try: -webkit-appearance: none

[14:55:01.0000] <oojacoboo>
it's likely there for accessibility reasons

[14:55:02.0000] <oojacoboo>
or so I hope

[14:55:03.0000] <oojacoboo>
but I'd think outline: would be beng used for that

[14:55:04.0000] <oojacoboo>
I'll try that

[14:55:05.0000] <JoePeck>
hmm, the -webkit-appearance made no difference. Well, please file a bug on this

[14:56:00.0000] <oojacoboo>
no go JoePeck 

[14:56:01.0000] <oojacoboo>
link?

[14:56:02.0000] <JoePeck>
https://bugs.webkit.org/enter_bug.cgi

[14:56:03.0000] <JoePeck>
preferably with a reduction

[14:57:00.0000] <oojacoboo>
yea, figured as much

[15:12:00.0000] <hober>
annevk: reading the new reply to your aria feedback

[15:12:01.0000] <hober>
"To reduce some of the confusion caused by our "boolean " value type[...] we have renamed the name of the type to "true/false "."

[15:12:02.0000] <hober>
http://lists.w3.org/Archives/Public/public-pfwg-comments/2010OctDec/0020.html

[15:26:00.0000] <annevk>
hober, "and believe your proposal to allow host language remapping of ARIA data types would unnecessarily break implementations"

[15:26:01.0000] <annevk>
they are so full of shit

[15:27:00.0000] <annevk>
that was that they were saying

[15:27:01.0000] <annevk>
I was asking them to drop that "host language" stuff

[15:27:02.0000] <annevk>
glad we have gone full circle

[15:29:00.0000] <annevk>
"Response to the concerns raised in your acknowledgement" even says that

[15:29:01.0000] <annevk>
I guess this is what you get when you talk with committees rather than a single person

[15:34:00.0000] <annevk>
ooh, Hixie killed his style sheet

[15:34:01.0000] <annevk>
I was wondering what was going on

[15:35:00.0000] <annevk>
and his new style sheet follows w3.org conventions with meaningless dates?!

[15:35:01.0000] <annevk>
Hixie trying to get appointed by Tim? ;p

[15:36:00.0000] <Hixie>
it's not a meaningless date :-)

[15:36:01.0000] <Hixie>
it's the name of my stylesheet

[15:36:02.0000] <Hixie>
old one was "spaced out"

[15:36:03.0000] <Hixie>
then there was the never-completed "orange"

[15:36:04.0000] <Hixie>
and now "2010"

[15:37:00.0000] <Hixie>
it might get renamed once i've any idea what it looks like :-)

[15:37:01.0000] <Hixie>
also, wow, you noticed fast

[15:38:00.0000] <annevk>
I happened to be reading the archives

[15:38:01.0000] <Hixie>
aah

[15:38:02.0000] <annevk>
http://ln.hixie.ch/?start=1033035916&count=1 -- quite amusing

[15:39:00.0000] <Hixie>
wow, i was right

[15:39:01.0000] <Hixie>
check out the number of replies

[15:40:00.0000] <annevk>
heh, never really looked beyond the contents :)

[15:58:00.0000] <AryehGregor>
Wow, Tantek actually got the name "t" on Twitter?  Was he involved in founding it, or did he pay a large sum of money, or what?

[15:58:01.0000] <gsnedders>
AryehGregor: Early enough.

[15:58:02.0000] <hober>
he originally had 'tantek'

[15:58:03.0000] <gsnedders>
(IIRC)

[15:58:04.0000] <hober>
but switched to 't'

[15:59:00.0000] <gsnedders>
(My memory could be wrong)

[15:59:01.0000] <hober>
while several of the one-letter usernames were still available


2010-12-03
[16:08:00.0000] <AryehGregor>
It's uncanny how I've agreed with everything I saw Shelley Powers write in the last two days or so.

[16:08:01.0000] <gsnedders>
/me draws blade

[16:09:00.0000] <AryehGregor>
Do you think I should e-mail her and warn her that her Bugzilla account may have been hacked by a WHATWG partisan?

[16:09:01.0000] <boogyman>
lol

[16:14:00.0000] <annevk>
what she says is echoing what Hixie has been saying for a while

[16:15:00.0000] <annevk>
suspect #1

[16:15:01.0000] <annevk>
(assuming it is about that date handling bug)

[16:15:02.0000] <AryehGregor>
That plus the bug on allowing cached JavaScript scripts to be shared across sites.

[16:16:00.0000] <AryehGregor>
(pointing out that the time to load widely-used JavaScript libraries is typically small compared to all the images and stuff)

[16:37:00.0000] <Hixie>
is the reflection, mask, etc, css stuff implemented without prefixes yet?

[16:37:01.0000] <Hixie>
or is it still experimental?

[16:39:00.0000] <paul_irish>
in webkit? they're all still prefixed.

[16:39:01.0000] <Hixie>
anywhere

[16:40:00.0000] <Hixie>
how about background-size, etc?

[16:41:00.0000] <oojacoboo>
most of the newer css3 styles are still prefixed AFAIK

[16:41:01.0000] <Hixie>
background-size is like 8 years old now

[16:41:02.0000] <Hixie>
hardly new :-)

[16:41:03.0000] <oojacoboo>
it is for the browser implementation

[16:41:04.0000] <oojacoboo>
you can't even rely on it's use

[16:41:05.0000] <Hixie>
if that's new, what's the html stuff? :_)

[16:42:00.0000] <oojacoboo>
html stuff?

[16:42:01.0000] <paul_irish>
background-size is unprefixed. mostly all of borders/backgrounds went unprefixed everywhere in the past 6mo

[16:43:00.0000] <Hixie>
oojacoboo: like onhashchange and appcache and so on

[16:43:01.0000] <Hixie>
paul_irish: k

[16:43:02.0000] <oojacoboo>
Hixie: vapor?

[16:43:03.0000] <Hixie>
oojacoboo: onhashchange is even in IE8, hardly vapour

[16:43:04.0000] <Hixie>
paul_irish: implemented widely? or just webkit? (sorry for the dumb questions, i'm so out of touch with what's deployed it's silly)

[16:44:00.0000] <oojacoboo>
im not familiar with it, so I can't say really

[16:46:00.0000] <paul_irish>
widely

[16:46:01.0000] <paul_irish>
Hixie: a few of these are covered here: http://caniuse.com/#cats=CSS

[16:46:02.0000] <paul_irish>
in other cases the bottom of the MDC page for each thing (like background-size) has compatibility info, typically

[16:46:03.0000] <oojacoboo>
paul_irish: nice link

[16:47:00.0000] <Hixie>
paul_irish: cool, thanks

[16:48:00.0000] <paul_irish>
or ask me about any particular ones.. in many cases i know offhand.

[16:48:01.0000] <paul_irish>
:)

[16:53:00.0000] <Hixie>
paul_irish: k :-)

[17:08:00.0000] <roc>
Hixie: no-one has ever submitted a proposed spec for Webkit's CSS reflections and masks

[17:08:01.0000] <Hixie>
ah

[17:09:00.0000] <Hixie>
is there any css-based way to apply a gradient mask to an image?

[17:09:01.0000] <oojacoboo>
by mask you mean overlay?

[17:09:02.0000] <Hixie>
i'm playing with doing something where an image fades out as the content starts

[17:09:03.0000] <Hixie>
i guess i can just edit the image

[17:09:04.0000] <Hixie>
like everyone else :-)

[17:09:05.0000] <roc>
Hixie: you can do it in SVG

[17:10:00.0000] <oojacoboo>
Hixie: you can use opacity:

[17:10:01.0000] <oojacoboo>
don't forget the prefixes for that though

[17:10:02.0000] <Hixie>
roc: you mean create an SVG that wraps the JPEG and applies the mask and then link that in using 'background'? I guess I could do that

[17:10:03.0000] <roc>
Hixie: so you could apply an SVG mask to an SVG image and that should work on all SVG-supporting browsers

[17:10:04.0000] <Hixie>
seems like an extra level of indirection

[17:11:00.0000] <roc>
oh, you want to apply the gradient mask to a CSS background image?

[17:11:01.0000] <roc>
and not the rest of the contents of the element?

[17:11:02.0000] <Hixie>
oojacoboo: opacity is a solid opacity all the way through, i want it to apply non-uniformly (as a gradient)

[17:11:03.0000] <Hixie>
roc: yeah this is just an image in css

[17:11:04.0000] <oojacoboo>
Hixie: use another container with background gradient

[17:12:00.0000] <roc>
Webkit's mask wouldn't do what you want then, that masks the whole element

[17:12:01.0000] <Hixie>
roc: ah

[17:12:02.0000] <Hixie>
i wish we had something like xbl already, except inline in css

[17:12:03.0000] <roc>
Gecko lets you apply SVG masks to any kind of element, which I think is the best way forward standards-wise, but is apparently still not what you want

[17:13:00.0000] <oojacoboo>
I would just use two containers, with 2 backgrounds

[17:13:01.0000] <Hixie>
maybe instead of changing xbl2 to be an html language i should have changed it to be a css language

[17:13:02.0000] <roc>
I don't see how that would work

[17:13:03.0000] <roc>
we don't want to introduce CSS syntax for DOM subtrees

[17:14:00.0000] <Hixie>
well we'd use the existing xml or html syntax

[17:14:01.0000] <Hixie>
but in the text/css file

[17:14:02.0000] <Hixie>
we really need svg in text/css too for similar reasons

[17:15:00.0000] <roc>
hmmmmmmm

[17:15:01.0000] <roc>
that could work

[17:15:02.0000] <roc>
in fact

[17:15:03.0000] <roc>
that would solve a lot of problems!!!

[17:16:00.0000] <roc>
kinda freakish though

[17:16:01.0000] <Hixie>
yeah

[17:16:02.0000] <roc>
a style sheet sort of becomes a document

[17:16:03.0000] <roc>
does the style sheet apply to itself?

[17:17:00.0000] <roc>
can it contain script?

[17:18:00.0000] <roc>
can the script set location.href?

[17:19:00.0000] <roc>
if we disable script and say that the stylesheet applies to its own document, it sounds good

[17:20:00.0000] <Hixie>
those are good questions. dunno what the best answers are.

[17:29:00.0000] <erlehmann>
im a right if i assume that no one bothered to implement ::outside as of yet?

[17:30:00.0000] <erlehmann>
(in CSS, that is)

[17:31:00.0000] <Hixie>
is box-sizing widely implemented?

[17:32:00.0000] <Hixie>
i guess not

[17:32:01.0000] <boogyman>
Hixie: it's easy enough to create a testcase :)

[17:33:00.0000] <Hixie>
i do, but i don't have any non-beta browsers to test on

[17:33:01.0000] <Hixie>
all my browsers are like nightly builds and stuff

[17:34:00.0000] <boogyman>
well that puts a damper on testcases :P

[17:35:00.0000] <boogyman>
give me a sec and ill test on stable webkit,gecko,trident rendering-engines

[17:35:01.0000] <Hixie>
nah, don't worry about it

[17:35:02.0000] <Hixie>
i found another solution :-)

[17:36:00.0000] <Hixie>
man i wish ::outside was available

[17:46:00.0000] <nessy>
only opera supports box-sizing faik

[17:49:00.0000] <oojacoboo>
nessy: -webkit-box-sizing

[17:49:01.0000] <erlehmann>
others have prefixes http://caniuse.com/css3-boxsizing

[17:49:02.0000] <oojacoboo>
right

[17:50:00.0000] <erlehmann>
IE can into box-sizing?

[17:50:01.0000] <erlehmann>
i am of confused.

[17:50:02.0000] <nessy>
I love caniuse :)

[17:50:03.0000] <oojacoboo>
erlehmann: didn't think IE supported it, that's cool

[17:51:00.0000] <oojacoboo>
although, I don't find box-sizing to be very useful

[17:51:01.0000] <erlehmann>
well, it's logical in a sense.

[17:51:02.0000] <erlehmann>
after all, they have both models already.

[17:51:03.0000] <erlehmann>
i do.

[17:51:04.0000] <oojacoboo>
maybe I haven't had a good use case

[17:54:00.0000] <erlehmann>
yesterday, i friends ex-boyfriend came by while we were sitting in a cafe. he was telling me about how he does websites, with “stylesheets, you know, i use the newest version, version 4 or 5”.

[17:55:00.0000] <erlehmann>
and i looked it up: apparently he really makes web sites. in photoshop. which is the reason why the text on one site is part of the background picture.

[17:55:01.0000] <erlehmann>
D:

[17:58:00.0000] <oojacoboo>
:/

[17:59:00.0000] <oojacoboo>
erlehmann: I'm actually glad that these people exist in large numbers ;)

[18:00:00.0000] <oojacoboo>
anyone in here working with the @font-face for webkit or gecko?

[18:01:00.0000] <erlehmann>
oojacoboo, i am not amused by every single site that i can not use without images turned on on my phone.

[18:01:01.0000] <oojacoboo>
I wanted to mention how I lost a day's worth of work over some miserable experiences with the engines on windows

[18:01:02.0000] <oojacoboo>
erlehmann, you better just get over that

[18:02:00.0000] <erlehmann>
i do, i do.

[18:04:00.0000] <erlehmann>
oojacoboo, it is just that before that experience i thought it would be hilarious to meet a cliché bad web worker. afterwards, it is more like “there is no hope for humanity”

[18:05:00.0000] <oojacoboo>
erlehmann: these people exist in every facet of life

[18:06:00.0000] <oojacoboo>
before long you will get the "elitist" stereotype though

[18:06:01.0000] <oojacoboo>
so, you are damned if you do and damned if you don't

[18:08:00.0000] <erlehmann>
no, i'll be fine, :)

[18:10:00.0000] <erlehmann>
it was just … weird, in a way. in my usual social context, people with at-best-mediocre skillsets don't boast about it in an annoying way.

[18:10:01.0000] <erlehmann>
there should be a “there, i fixed it” for web sites

[18:12:00.0000] <oojacoboo>
google should make use of the author meta data in their algo :)

[18:12:01.0000] <erlehmann>
harr harr

[18:13:00.0000] <erlehmann>
google should use the outline algorithm and only consider web sites whose section headings suggest a good plot!

[18:14:00.0000] <oojacoboo>
maybe, except in my case there isn't a plot

[18:25:00.0000] <Hixie>
how about rem units, anyone know what their status is in implementations?

[18:25:01.0000] <Hixie>
i don't see it on whencaniuse

[18:26:00.0000] <erlehmann>
i tried to use them in gecko and failed miserably. maybe your nightlies have more luck with it.

[18:31:00.0000] <roc>
rem works in Gecko

[18:31:01.0000] <oojacoboo>
roc: what version?

[18:31:02.0000] <roc>
trunk

[18:31:03.0000] <roc>
data:text/html,<div style="font-size:300px; height:1rem; width:1rem; background:blue;">

[18:32:00.0000] <roc>
I think it worked in 3.6 as well

[18:32:01.0000] <oojacoboo>
hardly reliable though

[18:32:02.0000] <jamesr_>
what's a rem?

[18:32:03.0000] <oojacoboo>
root em

[18:32:04.0000] <roc>
ems for the root element font size

[18:32:05.0000] <roc>
although I still think "rem" should be a unit of radiaton

[18:33:00.0000] <oojacoboo>
or some damn good sleep

[18:33:01.0000] <jamesr_>
for styling vault dwellers?

[18:34:00.0000] <roc>
.hulk { gamma-radiation:1000rem; }

[18:35:00.0000] <oojacoboo>
ha

[18:36:00.0000] <roc>
mmmm, this is a much better unit: http://en.wikipedia.org/wiki/Banana_equivalent_dose

[18:37:00.0000] <oojacoboo>
ha, wikipedia is now using letters from authors for donations

[18:38:00.0000] <roc>
yeah, FF3.6 supported rem

[18:38:01.0000] <erlehmann>
hehe, maybe the current spec should have “a message from HTML5 editor ian hickson”

[18:39:00.0000] <Hixie>
heh

[18:39:01.0000] <Hixie>
ok, i've updated my blog and other sites to a new even-worse-than-before style sheet.

[18:39:02.0000] <Hixie>
i'll fix the various problems the update has caused in the next few weeks

[18:40:00.0000] <erlehmann>
i am doing the same thing right now. a:visited:after { content: […] } has to go, unfortunately

[18:41:00.0000] <erlehmann>
oh, and the fix is the last thing mentioned on http://ln.hixie.ch/

[18:41:01.0000] <oojacoboo>
erlehmann: I thought multiple psedu selectors threw IE7 for a loop

[18:41:02.0000] <oojacoboo>
pseudo*

[18:41:03.0000] <Hixie>
(one thing i expect broke is the "axiomatic proof" post)

[18:42:00.0000] <erlehmann>
oojacoboo, i cannot possibly test that.

[18:42:01.0000] <oojacoboo>
ha

[18:43:00.0000] <oojacoboo>
unfortunately that's something I have to deal with

[18:43:01.0000] <erlehmann>
Hixie, what is with the picture of the train on the bottom? it makes some text hard to read.

[18:43:02.0000] <Hixie>
it shouldn't touch any of the text

[18:43:03.0000] <Hixie>
if it's touching the text there's either a bug in your browser or in my style sheet

[18:44:00.0000] <oojacoboo>
he means the depth of field

[18:45:00.0000] <erlehmann>
no, in gecko 20100916 the train is HUGE

[18:46:00.0000] <erlehmann>
in chromium 6.0.472.62 all is well

[18:48:00.0000] <jamesr_>
chromium _6_?

[18:48:01.0000] <jamesr_>
wtf

[18:48:02.0000] <jamesr_>
you are fully two stable versions behind

[18:48:03.0000] <erlehmann>
also, the image is sent as Content-Type: text/css

[18:49:00.0000] <erlehmann>
with Content-Language: en-GB-x-Hixie. the funney, it burns.

[18:49:01.0000] <erlehmann>
jamesr_, you mean, like 6 weeks or something ;)

[18:49:02.0000] <jamesr_>
erlehmann: wheels of progress man

[18:50:00.0000] <jamesr_>
but seriously you should update. 2 major versions = security disclosures have been made public

[18:50:01.0000] <erlehmann>
oh well.

[18:50:02.0000] <erlehmann>
consequences will never be the same.

[18:50:03.0000] <oojacoboo>
erlehmann: I'd stay on it for debugging purposes

[18:50:04.0000] <oojacoboo>
I am on 7, but I need a copy of 6 myself

[18:50:05.0000] <jamesr_>
but there are no users on 6

[18:50:06.0000] <jamesr_>
like literally _none_

[18:50:07.0000] <jamesr_>
so why do you need to debug on 6?

[18:51:00.0000] <oojacoboo>
jamesr_: I beg to differ

[18:51:01.0000] <oojacoboo>
/me opens analytics

[18:51:02.0000] <jamesr_>
what % of your chrome visitors in the past week are on 6?

[18:51:03.0000] <erlehmann>
i installed it some time ago so i have a reference webkit browser that does not suck

[18:52:00.0000] <oojacoboo>
jamesr_: 3.5%

[18:52:01.0000] <oojacoboo>
of chrome users

[18:52:02.0000] <erlehmann>
;_;

[18:53:00.0000] <jamesr_>
is that enough to care about?

[18:53:01.0000] <oojacoboo>
that's 3.5% of 24%

[18:53:02.0000] <oojacoboo>
so, pretty small

[18:53:03.0000] <erlehmann>
newest chromium in debian sid/squeeze is 6.0.472.63

[18:53:04.0000] <oojacoboo>
does look like 7+ is most users

[18:53:05.0000] <erlehmann>
maybe the maintainer sleeps

[18:54:00.0000] <jamesr_>
those are either people who haven't restarted chrome in the past 6 weeks (and haven't had it crash), or that are not on official Google Chrome builds, or who have some crazy bug

[18:54:01.0000] <oojacoboo>
except for the couple Chromium 4 visits... :/

[18:54:02.0000] <jamesr_>
i'd be amazed if debian sid users were 3.5% of chrome users

[18:54:03.0000] <jamesr_>
on any website :)

[18:54:04.0000] <oojacoboo>
jamesr_: most likely mac/win

[18:55:00.0000] <oojacoboo>
mac is lagging a version behind, right?

[18:55:01.0000] <erlehmann>
wat. they are doing a new version every 14 weeks?

[18:55:02.0000] <erlehmann>
U MAD.

[18:55:03.0000] <oojacoboo>
I wish UAs would start building in auto updaters

[18:55:04.0000] <oojacoboo>
relying on users to update is a fucking joke

[18:56:00.0000] <jamesr_>
oojacoboo: all OSes update at the same rate. as of today we're pushing 8 to people

[18:56:01.0000] <erlehmann>
i wish UAs would do exactly the thing google chrome does. use the packaging system.

[18:56:02.0000] <oojacoboo>
jamesr_: yea, just saw that 8 update for myself after searching for it

[19:01:00.0000] <oojacoboo>
what's the motive behind the insane release schedule for chromium?

[19:03:00.0000] <erlehmann>
oojacoboo, that was the goedel sentence that made him quit.

[19:04:00.0000] <oojacoboo>
goedel?

[19:04:01.0000] <erlehmann>
http://c2.com/cgi/wiki?HowGoedelSentencesWork

[19:05:00.0000] <erlehmann>
>The idea behind Goedel sentences is that they say something like "This statement cannot be proved by formal system such and so".

[19:05:01.0000] <jacobolus>
goedel = gödel, he of the famous incompleteness theorem. presumably erlehmann is talking about self reference

[19:05:02.0000] <erlehmann>
okay, so chrome gets like 4 version number bumbs in a year

[19:05:03.0000] <jacobolus>
self reference + contradiciton

[19:05:04.0000] <jacobolus>
*contradiction

[19:06:00.0000] <oojacoboo>
am I missing something here?

[19:07:00.0000] <erlehmann>
so in 2020, we will all be happily surf with chrome 48

[19:08:00.0000] <oojacoboo>
yea, well, I don't know that that's going to be the case, but I figured there might be an internal motive behind it

[19:08:01.0000] <oojacoboo>
something like, people will adopt something that's version 10 faster than version 5

[19:08:02.0000] <oojacoboo>
or, if we update it a lot, people will update faster, pushing web standards and adoption forward

[19:08:03.0000] <erlehmann>
or they switch to an idiosyncratic numbering scheme, where they re-use version numbers.

[19:09:00.0000] <erlehmann>
like no one uses chrome 1 anymore. so why have chrome 10? recycle the version number!

[19:10:00.0000] <oojacoboo>
or screw versions that are public knowledge

[19:10:01.0000] <oojacoboo>
and just auto-update it in the background

[20:24:00.0000] <aboodman>
oojacoboo: that is exactly what chrome does

[20:25:00.0000] <oojacoboo>
aboodman: not my chrome

[20:26:00.0000] <aboodman>
what i mean is, chrome updates in the background, and Google doesn't refer to version numbers publicly

[20:26:01.0000] <aboodman>
we just say 'google chrome now does xyz'

[20:26:02.0000] <aboodman>
in our user-facing pr

[20:26:03.0000] <oojacoboo>
ah ok, gotcha

[20:27:00.0000] <oojacoboo>
glad to hear thats the case

[20:38:00.0000] <oojacoboo>
is it being recommended that you don't style the html5 semantic elements?

[20:38:01.0000] <oojacoboo>
or purely not using them for styling purposes

[20:39:00.0000] <oojacoboo>
in other words, styling them when they are being used properly, is still the intention, correct?  Not just using them as semantic wrappers and injecting more elements into the DOM to handle styling purposes

[20:39:01.0000] <oojacoboo>
for instance, background, border, margin, padding, etc

[22:32:00.0000] <Hixie>
anyone know what happened with http://lists.w3.org/Archives/Public/public-html/2009Jan/0308.html ?

[22:43:00.0000] <mhausenblas>
Hixie you surely read http://www.w3.org/QA/2010/06/thanks_for_a_great_15_years_at.html no?

[22:44:00.0000] <Hixie>
i had not

[22:44:01.0000] <mhausenblas>
;)

[22:44:02.0000] <Hixie>
what happened to the stuff he'd done in the year and a half before that?

[22:44:03.0000] <Hixie>
the first e-mail only talks about "6 months to a year"

[22:45:00.0000] <mhausenblas>
tbh, dunno

[22:45:01.0000] <mhausenblas>
best you ask him directly ;)

[22:45:02.0000] <Hixie>
well if he's left the standards world altogether he presumably doesn't care about that anymore :-)

[22:45:03.0000] <Hixie>
can't blame him

[22:46:00.0000] <mhausenblas>
/me nods

[22:46:01.0000] <webr3>
/me notes he is around and giving valuable feedback on many standardization efforts often

[22:48:00.0000] <mhausenblas>
true, for example http://www.w3.org/2001/sw/rdb2rdf/track/actions/78

[22:49:00.0000] <hsivonen>
http://google-chrome-browser.com/version-number-dead-google-barely-whispers-launch-chrome-8 So will Chrome now actaully get rid of the version number like WHATWG post-5 HTML?

[22:52:00.0000] <webr3>
nah because people need milestones and something to lookforward to, to countdown to, to remember and refer to as the previous thing/state

[22:53:00.0000] <webr3>
tis why we have time, years, birthdays, anniversaries etc - without them you're just all over the place, especially after a few years :)

[22:53:01.0000] <mhausenblas>
yey! looking forward to webr4 :D

[22:54:00.0000] <webr3>
lol that comes afer revision 3 is done - (r3..)

[03:13:00.0000] <annevk>
http://heideri.ch/jso/ really gives the wrong kind of advice

[03:14:00.0000] <annevk>
"Don't allow users to submit markup containing "form" and "formaction" attributes or transform them to bogus attributes." -- you really want to not allow any untrusted attributes otherwise this is going to happen again in the future

[03:19:00.0000] <zcorpan>
Hixie: your site is about as ugly as before :P

[03:24:00.0000] <annevk>
aah, styling in Opera does not work because of unrecognized elements

[03:24:01.0000] <annevk>
doh

[03:28:00.0000] <annevk>
I think the only HTML5 element I use is <footer>

[03:28:01.0000] <annevk>
well, only new element

[03:35:00.0000] <charlvn>
what's that thing in the top-right corner? a traffic light?

[03:40:00.0000] <hsivonen>
looks like a railway traffic light

[03:40:01.0000] <hsivonen>
(which probably has a fancier term of art for it)

[03:41:00.0000] <jgraham>
I thought they were called "signals" on railways

[03:42:00.0000] <jgraham>
But IANATS

[03:42:01.0000] <zcorpan>
I am not a train station?

[03:42:02.0000] <jgraham>
Close

[03:43:00.0000] <jgraham>
(I guess Train Spotter is really a single word, but that is harder to guess)

[03:45:00.0000] <zcorpan>
never heard of 'trainspotter'

[03:46:00.0000] <jgraham>
Have you heard of the film "trainspotting"? It has very little to do with actual trainspotting, but nevertheless

[03:47:00.0000] <jgraham>
hsivonen: Are you aware of any spec for the case shifting in XPath-in-text/html?

[03:54:00.0000] <jgraham>
/me wonders why //some-prefix-that-resolves-to-null:div throws rather than just returning nothing

[03:56:00.0000] <jgraham>
Oh well, I guess I can deal with that

[04:08:00.0000] <hsivonen>
jgraham: AFAIK, there's no spec, Gecko does different things depending on API entry point and my opinion of what to do differs from the module owner's

[04:09:00.0000] <hsivonen>
my opinion of what we should do that is

[04:10:00.0000] <jgraham>
Yay!

[04:22:00.0000] <jgraham>
hsivonen: What different API entrance points are there? document.evaluate, obviously

[04:23:00.0000] <hsivonen>
I can't recall. Let's see if Awesomebar tells me.

[04:25:00.0000] <hsivonen>
jgraham: (new XPathEvaluator).evalute

[04:25:01.0000] <hsivonen>
https://bugzilla.mozilla.org/show_bug.cgi?id=376740 is the bug

[04:32:00.0000] <jgraham>
hsivonen: I think everything should work like document.evaluate

[04:34:00.0000] <annevk>
why can XPath not work like Selectors?

[04:36:00.0000] <jgraham>
In what way?

[04:37:00.0000] <annevk>
case-sensitive except for elements in the HTML namespace

[04:37:01.0000] <jgraham>
That is how document.evaluate works afaict

[04:37:02.0000] <jgraham>
and attributes

[04:37:03.0000] <jgraham>
that is, attributes on elements in the HTML namespace are not case sensitive

[04:39:00.0000] <annevk>
not per HTML5

[04:39:01.0000] <jgraham>
Yeah, HTML5 is wrong

[04:39:02.0000] <jgraham>
It is a web compat issue

[04:44:00.0000] <hsivonen>
annevk: AFAICT, making XPath work like Selectors is not strictly needed for compat but would complicate the XPath matcher compared to doing case-sensitive matching and requiring names that are meant to match HTML local names to be in the lower case in the expressions

[04:44:01.0000] <hsivonen>
jgraham: AFAICT, that's not how document.evaluate works in WebKit or Gecko

[04:44:02.0000] <hsivonen>
IIRC

[04:45:00.0000] <hsivonen>
jgraham: how can it be a Web compat issue when WebKit doesn't case fold?

[04:45:01.0000] <jgraham>
hsivonen: Which part? It certainly seems to be case-insensitive for elements in the HTML namespace and their attributes

[04:46:00.0000] <jgraham>
hsivonen: Dojo has a special webkit codepath

[04:46:01.0000] <hsivonen>
jgraham: I see. special code paths are sadness

[04:46:02.0000] <hsivonen>
jgraham: oh well. If Gecko can't become like WebKit without breaking Dojo, I guess we should do the same thing Selectors do

[04:46:03.0000] <hsivonen>
:-(

[04:47:00.0000] <jgraham>
This is brining consistency to the platform :)

[04:47:01.0000] <jgraham>
*bringing

[04:47:02.0000] <hsivonen>
jgraham: is the special code path behavior sniffed or UA sniffed?

[04:47:03.0000] <jgraham>
I mean it's a weird, screwed up, consistency, but it is consistent in being so

[04:47:04.0000] <hsivonen>
/me guesses the latter

[04:48:00.0000] <jgraham>
Seems to be UA string based

[04:48:01.0000] <hsivonen>
:-(

[04:49:00.0000] <hsivonen>
given the new data, I change my opinion

[04:49:01.0000] <jgraham>
(at least, I think this is what is going on)

[05:55:00.0000] <jgraham>
Hmm, gecko seems to always match attributes in XPath case insensitively using document.evaluate

[06:08:00.0000] <jgraham>
Actually it just seems to be broken: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/728

[06:08:01.0000] <jgraham>
hsivonen: ^

[06:46:00.0000] <smaug____>
jgraham: I vaguely remember that that is done on purpose

[06:46:01.0000] <smaug____>
jgraham: sicking would know for sure

[06:47:00.0000] <smaug____>
let me try to find the relevant code

[06:48:00.0000] <smaug____>
jgraham: hmm

[06:48:01.0000] <smaug____>
what should I see in the log?

[06:49:00.0000] <jgraham>
I would expect 1

[06:49:01.0000] <jgraham>
Since it should match one element with a refX attribute

[06:50:00.0000] <smaug____>
but the result is 0

[06:50:01.0000] <smaug____>
so it matches case sensitively

[06:51:00.0000] <smaug____>
jgraham: or am I missing something. You said "case insensitively"

[06:51:01.0000] <jgraham>
The attribute gets case shifted to "refX" by the HTML parser

[06:52:00.0000] <smaug____>
ah

[06:52:01.0000] <smaug____>
right

[06:57:00.0000] <hsivonen>
jgraham: I was aware that XPath behavior with document.evaluate in Gecko was just broken, but I had no idea it was broken in that particular way

[06:58:00.0000] <hsivonen>
smaug____: the code may have been written on purpose, but SVG-in-text/html has changed the scenarios the code needs to respond to

[06:58:01.0000] <hsivonen>
smaug____: that is, IIRC, we don't keep around dual atoms in XPath expressions yet

[06:58:02.0000] <hsivonen>
we should

[07:00:00.0000] <hsivonen>
jgraham: IIRC, what happens is that the XPath expression compiler lowercases all name expressions when invoked on an HTML document

[07:01:00.0000] <jgraham>
hsivonen: Any idea what it does to non-ascii

[07:01:01.0000] <jgraham>
?

[07:01:02.0000] <jgraham>
I can't make that work at all

[07:02:00.0000] <hsivonen>
jgraham: I'm not reading the code here, just dumping stuff from memory

[07:02:01.0000] <hsivonen>
jgraham: So I don't know how non-ascii behaves

[07:02:02.0000] <jgraham>
hsivonen: Sure, I was just wondering if you had any idea

[07:02:03.0000] <hsivonen>
jgraham: anyway, I'd advice against cloning/speccing what Gecko does now

[07:03:00.0000] <jgraham>
My plan was to aim for something that made sense, since clearly the current gecko behaviour is buggy

[07:03:01.0000] <jgraham>
That is ascii-lowercase HTML elements names and their attribute names in HTML documents

[07:04:00.0000] <hsivonen>
jgraham: given what you told me about Dojo, I think we should do https://bugzilla.mozilla.org/show_bug.cgi?id=499655 for XPath, too.

[07:05:00.0000] <jgraham>
hsivonen: I think that is equivalent to what I was thinking

[07:47:00.0000] <hsivonen>
Wow. the section titled An Authoritative Voice in http://www.webdesignerdepot.com/2010/12/book-review-%E2%80%94-html5-up-and-running/ is odd.

[07:48:00.0000] <jgraham>
/me has no idea who one of the people more famous than Mark is

[07:56:00.0000] <smaug____>
hsivonen: how should the case sensitiveness work in xpath

[07:56:01.0000] <smaug____>
is it specified anywhere?

[07:58:00.0000] <jgraham>
smaug____: (iinh, obviously) it isn't specified anywhere. Or rather it is specified to be case sensitive always, but that is not web compatible unless you are WebKit

[07:58:01.0000] <smaug____>
k

[07:59:00.0000] <hsivonen>
smaug____: I think it should work like it works in CSS in Gecko today

[08:00:00.0000] <hsivonen>
smaug____: I.e. each name expression would have two atoms: original case and ASCII-lower-cased

[08:00:01.0000] <hsivonen>
smaug____: if the experssion is being compared against a HTML element in an HTML document or an attribute on an HTML element in an HTML document, the lower-case atom would be compared

[08:00:02.0000] <hsivonen>
otherwise, the original case atom would be compared

[08:01:00.0000] <hsivonen>
smaug____: and as jgraham said, this hasn't been specced yet.

[08:06:00.0000] <smaug____>
makes sense to make it work like css

[08:15:00.0000] <MrWax>
Hi, I am looking for a presentation of HTML5, but a small more summarized one, like 20-30 mins.. does anyone a proper explanation / overview of HTMl5

[08:15:01.0000] <MrWax>
 ?

[08:17:00.0000] <hsivonen>
MrWax: I have presentation that's 2 years old and takes thrice as long as you wanted: http://hsivonen.iki.fi/html5-lecture/

[09:05:00.0000] <erlehmann>
interesting. i had thought history sniffing was an academic risc as of now http://scienceblogs.com/pharyngula/2010/12/another_reason_to_avoid_visiti.php

[09:06:00.0000] <erlehmann>
dbaron saved us from the creationists!

[09:06:01.0000] <TabAtkins>
Yay dbaron!

[09:08:00.0000] <erlehmann>
TabAtkins, on the downsite, he killed off the nice check marks i was putting after each visited link (._.)

[09:09:00.0000] <TabAtkins>
Huh?  You can't just do that with ::before?

[09:12:00.0000] <erlehmann>
TabAtkins, i was of the impression that every selector that includes :visited is now limited to color changes regarding text, background and border.

[09:12:01.0000] <TabAtkins>
Oh, hm, maybe.

[09:13:00.0000] <oojacoboo>
erlehmann: limited how?

[09:14:00.0000] <erlehmann>
wait, i'll look it up.

[09:15:00.0000] <erlehmann>
http://blog.mozilla.com/security/2010/03/31/plugging-the-css-history-leak/

[09:16:00.0000] <erlehmann>
oojacoboo, >First of all, we’re limiting what types of styling can be done to visited links to differentiate them from unvisited links. Visited links can only be different in color: foreground, background, outline, border, SVG stroke and fill colors.

[09:17:00.0000] <erlehmann>
using :before or :after would be “changing position or size of the styled content in the document”

[09:17:01.0000] <erlehmann>
so if it is not already limited, it should certainly be.

[09:30:00.0000] <oojacoboo>
erlehmann: I understand the point of this, but it seems a bit draconian 

[09:31:00.0000] <TabAtkins>
Unfortunately, you must either be draconian or not do anything at all.

[09:31:01.0000] <erlehmann>
oojacoboo, it *seems* but there really is no other easy way.

[09:40:00.0000] <oojacoboo>
:/

[09:47:00.0000] <erlehmann>
oojacoboo, there are more complicated things. see same-origin-restrictions — i even implemented a small web server for a wordpress plugin that shows an embed-button for HTML5 media elements to get the headers right on every possible setup.

[09:47:01.0000] <erlehmann>
things are complicated and ugly :(

[10:21:00.0000] <erlehmann>
dbaron, you saved us from the creationists! http://scienceblogs.com/pharyngula/2010/12/another_reason_to_avoid_visiti.php


2010-12-04
[18:19:00.0000] <oojacoboo>
are there any plans to allow for font type specific styling?

[18:19:01.0000] <oojacoboo>
other than through the use of @font-face?

[18:20:00.0000] <TabAtkins>
oojacoboo: What do you mean?

[18:20:01.0000] <oojacoboo>
I had a specific case the other day where I had two fonts that rendered different x-heights and by using something like font-size-adjust, I could have corrected this issue, if I could have applied to a specific font

[18:20:02.0000] <TabAtkins>
What, did you need font-size-adjust to apply to one and not the other?  I dont' understand how that would be useful.

[18:20:03.0000] <oojacoboo>
would you just use @font-face and local?

[18:21:00.0000] <oojacoboo>
TabAtkins: b/c fonts differ in their default x-height renderings

[18:22:00.0000] <TabAtkins>
Right.  Taht's what font-size-adjust is for - it resizes fonts so that all their x-heights match.

[18:22:01.0000] <oojacoboo>
so, while I might want to push Helvetica Neue on the Mac and another on the PC, for a matter of breaking the page layout, often times, you need to alter one or the other font's x-height value

[18:22:02.0000] <oojacoboo>
TabAtkins: ah... so it's absolute, not relative?

[18:23:00.0000] <TabAtkins>
I'm not sure exactly what you eman by that, so I'll instead just quickly explain what f-s-a does.

[18:24:00.0000] <TabAtkins>
f-s-a takes a number between 0 and 1.  It multiplies that by the declared font-size of the element to get a desired x-height.  It then adjusts the *used* font-size for all the fonts so that their x-height matches that number.

[18:25:00.0000] <oojacoboo>
ah ha, perfect

[18:25:01.0000] <TabAtkins>
There's plans to also add an 'auto' value that somehow figures out what the 'default' font is supposed to be, and figures out what the f-s-a number should be based on that font's x-height.

[18:25:02.0000] <oojacoboo>
thanks for explaining that

[18:25:03.0000] <TabAtkins>
No problem.

[18:25:04.0000] <oojacoboo>
TabAtkins: an auto would kick ass ;)

[21:49:00.0000] <BlueG>
Has webm reintroduced consideration of standardizing on a video codec for html5?

[21:51:00.0000] <oojacoboo>
I thought h.264 was the standard?

[22:04:00.0000] <BlueG>
oojacoboo: My understanding was that at some point it was in the draft to specify ogg theora, but that it was removed because of the debate between theora getting poor compression/quality while h.264 was patent-encumbered.

[22:06:00.0000] <BlueG>
But vp8 in the webm format is said to be comparable to h.264 in terms of compression and quality, and it is now unencumbered by patents.

[22:06:01.0000] <oojacoboo>
BlueG: but h.264 has such great adoption so far with Apple behind it, I doubt it will change

[22:09:00.0000] <BlueG>
oojacoboo: Hrmmm, I don't know, theora already has significantly wider native support than h.264, and webm will probably soon catch up. Firefox will probably never support h.264.

[22:10:00.0000] <oojacoboo>
maybe, I'm not a huge guy, but all I come across is h.264

[22:10:01.0000] <oojacoboo>
of course, I am a mac user, so maybe that explains it

[22:10:02.0000] <oojacoboo>
huge video guy*

[22:11:00.0000] <oojacoboo>
damn it's late :/

[22:11:01.0000] <BlueG>
Well of course Apple has been pushing h.264, which they have a patent stake in.

[22:11:02.0000] <MikeSmith>
BlueG: the question of the quality of theora did not factor into the decision to remove mention of it from the spec

[22:12:00.0000] <MikeSmith>
the issue is that we had browser implementors who are not planning to implement support for it

[22:13:00.0000] <MikeSmith>
and we still do not have any single codec that every browser project is willing to add support for

[22:14:00.0000] <MikeSmith>
and they are not going to implement support for a codec just because the spec tries to mandate it

[22:14:01.0000] <MikeSmith>
the spec largely reflects what implementors are actually willing to implement

[22:15:00.0000] <BlueG>
But looking at visitor stats from a blog I have been working with recently, about 44% of users had a browser natively supporting theora (Firefox, Chrome, Opera) while only about 27% had support for h.264 (Safari and Chrome)

[22:15:01.0000] <oojacoboo>
MikeSmith: funny how that works

[22:16:00.0000] <MikeSmith>
BlueG: it's not a popularity contest :)

[22:16:01.0000] <oojacoboo>
BlueG: when it comes to the web h.264 rules, and much of html5 is revolving around that

[22:16:02.0000] <oojacoboo>
s/web/mobile

[22:16:03.0000] <MikeSmith>
oojacoboo: not funny… sad

[22:16:04.0000] <oojacoboo>
wtf is wrong with me tonight

[22:17:00.0000] <BlueG>
At this point it seems that Firefox, Chrome, and Opera will implement webm, IE will support it the codec is installed separately (Will it come with h.264? I don't remember, or does that have to be installed too? I don't recall.) Safari seems to be only major holdout that won't implement webm at all.

[22:17:01.0000] <oojacoboo>
MikeSmith: sarcasm ;)

[22:19:00.0000] <BlueG>
MikeSmith: I was providing those stats for the benefit of oojacoboo, simply saying that theora currently has wider support in browsers than h.264.

[22:19:01.0000] <MikeSmith>
ah

[22:19:02.0000] <oojacoboo>
BlueG: but I look to mobile mostly as a base

[22:20:00.0000] <oojacoboo>
since that's where most of the push comes from anyway

[22:21:00.0000] <oojacoboo>
webkit runs mobile, at least currently

[22:21:01.0000] <BlueG>
Well, in terms of supporting the user base that is out there, these stats have only about 8% mobile users.

[22:22:00.0000] <oojacoboo>
well, I am looking at what's pushing the adoption, and it's iOS

[22:23:00.0000] <oojacoboo>
and seeing as how that's the case and webkit is the target, h.264 seems the most logical at the moment

[22:24:00.0000] <BlueG>
oojacoboo: Only if you want to ignore the 31% (and growing) of users on Firefox.

[22:25:00.0000] <oojacoboo>
BlueG: firefox on mobile?

[22:25:01.0000] <BlueG>
I suppose that is why we are all still double and triple encoding our video

[22:25:02.0000] <BlueG>
*sigh*

[22:25:03.0000] <BlueG>
No, I meant of users in general.

[22:25:04.0000] <oojacoboo>
the point is, <video> is being used as a fallback currently

[22:25:05.0000] <oojacoboo>
and will be for quite some time

[22:26:00.0000] <oojacoboo>
meanwhile, the main reason for adoption is the fact that iOS doesn't support flash, therefore, forcing people to use <video>, and since webkit rules mobile decides, that's the most natural fit... h.264 fallback to flv

[22:27:00.0000] <BlueG>
oojacoboo: I don't know, youtube is in the process of implementing <video> with a commitment to support webm.

[22:27:01.0000] <oojacoboo>
BlueG: that's fine, they will support flash and h.264 as well then

[22:28:00.0000] <oojacoboo>
firefox is holding out, but I think they will have to bite the bullet sooner or later

[22:29:00.0000] <oojacoboo>
and as far as firefox's growing market share, last I checked, chrome was grabbing a nice little chunk of firefox and safari

[22:31:00.0000] <BlueG>
Actually it looks more like Firefox, Chrome, and Safari are grabbing up a nice chunk of IE, but I believe all three are still on the rise.

[22:31:01.0000] <BlueG>
And Chrome will support theora and webm, as well

[22:31:02.0000] <oojacoboo>
BlueG: yes, they are, at least until IE9 is released, but Chrome seems to be taking the most share at the moment

[22:32:00.0000] <oojacoboo>
only reason Safari is taking any is b/c Apple's Mac sales are still booming

[22:32:01.0000] <oojacoboo>
BlueG: but why would I want to encode my video in something that won't work on iOS?!?

[22:32:02.0000] <oojacoboo>
that's 75% of the reason to use <video> at the moment

[22:33:00.0000] <BlueG>
And IE9 will support whatever codec is installed on the machine.

[22:34:00.0000] <MikeSmith>
IE9 won't necessarily support whatever codec may happen to be installed on the machine

[22:34:01.0000] <BlueG>
Unless you want to support <video> to replace proprietary plugin crap in the first place. In which case it seems silly for 31% of the users who have support for <video> to fallback to Flash, and then fail if they don't have it installed.

[22:36:00.0000] <oojacoboo>
BlueG: something like 98.5% of users have flash

[22:36:01.0000] <oojacoboo>
maybe less with iOS traffic rising each day, but regardless

[22:37:00.0000] <BlueG>
MikeSmith: Well, the announcement was that they would support vp8 when the codec was installed and that they were committed to supporting all widely used formats. http://windowsteamblog.com/windows/b/bloggingwindows/archive/2010/05/19/another-follow-up-on-html5-video-in-ie9.aspx

[22:38:00.0000] <MikeSmith>
right

[22:38:01.0000] <MikeSmith>
which is a little different than whatever codec is installed on the machine

[22:41:00.0000] <BlueG>
I don't have Flash. Eliminating the need for things like Flash is a major reason for implementing <video> in the first place. <video> was not invented to work around the lack of Flash on iOS, it was invented to make video a first class citizen on the web, and enable video through open standards. It just happened that iOS supports <video> and not Flash (mainly so that Apple can keep better control of its users).

[22:42:00.0000] <BlueG>
MikeSmith: Yes, it is. Although I would have guessed supporting whatever codec is installed on the machine would be the simplest way to do what they said.

[23:29:00.0000] <nielsle>
I just wondered. Will the html5 video tag allow you to zoom forward in a video, or to resume viewing after the connection has been lost?

[23:29:01.0000] <nielsle>
I am trying to  watch html5 videos on youtube, but they ofter stop loading when half the video has been loaded.

[23:37:00.0000] <nessy>
what browsr? that may be a bug...

[23:37:01.0000] <nessy>
while you are watching, tht shouldn't happen

[23:37:02.0000] <nessy>
if you browser to a different page and return, then it will happen

[00:01:00.0000] <nielsle>
I am using epiphany on debian sid

[00:02:00.0000] <nielsle>
I will try with iceaweasel/firefox and see if I can reproduce

[00:40:00.0000] <nielsle>
Thank you for the advice. I watched my video with Chrome and iceweasel/firefox twice, and it works. So this must be a bug in epiphany.

[02:52:00.0000] <Dashiva>
The lack of kite references in mark's amazon post disturbs me

[02:54:00.0000] <Ms2ger>
Dashiva, you are as high as a kite

[08:58:00.0000] <hober>
http://cafe.elharo.com/xml/xml-2-0/

[10:01:00.0000] <Dashiva>
"Encourage a variety of different APIs and data models appropriate to their respective domains and languages. However be very clear that the actual text of the document is the normative form. The data model is a representation of the text. The text is not a serialization of the data model."

[10:01:01.0000] <Dashiva>
That sounds like a whole lot of trouble waiting to happen

[10:18:00.0000] <GPHemsley>
Maybe this is a CSS thing, but is 'padding' supposed to be inherited from a {footer} to {footer > p}?

[10:23:00.0000] <Dashiva>
GPHemsley: Not actually inherited, no

[10:32:00.0000] <GPHemsley>
oh, nevermind, it was just a calculation of a percentage width, it wasn't actually being inherited

[12:19:00.0000] <bga_>
hi

[12:19:01.0000] <bga_>
yet another question %)

[12:19:02.0000] <Ms2ger>
Welcome

[12:20:00.0000] <bga_>
why whatwg invent wheel called webforms2.0 when we have excelent xul

[12:20:01.0000] <bga_>
?

[12:21:00.0000] <espadrine>
The purpose is different

[12:21:01.0000] <bga_>
user want native tabs

[12:22:00.0000] <bga_>
all native controls

[12:22:01.0000] <bga_>
trees..,

[12:22:02.0000] <karlcow>
bga_: xul is implemented where, html forms are implemented where

[12:24:00.0000] <bga_>
if we will have xul - all wheels like extjs, yui, qudoxo will not need :)

[12:27:00.0000] <bga_>
if you do not want exactly xul - please add tabs, trees and other missing controls

[12:39:00.0000] <bga_>
:(

[12:42:00.0000] <romeo_>
bga_, XUL is going to die. I hope you are aware of that.

[12:43:00.0000] <bga_>
and what is replacement?

[12:43:01.0000] <romeo_>
"HTML5"

[12:44:00.0000] <bga_>
but i as user want tabs in browser according OS gui theme

[12:45:00.0000] <Ms2ger>
"Out of luck"

[12:46:00.0000] <Ms2ger>
Or, wait until Tab writes a CSS spec for it

[12:46:01.0000] <bga_>
very funny

[12:46:02.0000] <bga_>
web apps needs it

[12:48:00.0000] <Ms2ger>
They're coping well enough, if they need it

[12:52:00.0000] <bga_>
yes but plz explain me.

[12:53:00.0000] <bga_>
why whatwg wants checkboxes and buttuns according OS gui theme, but other controls not?

[12:54:00.0000] <Ms2ger>
There are very limited resources, and adding any more forms features at this point would probably cause more Chrome-style implementations

[12:54:01.0000] <Ms2ger>
Once the current features are implemented well, more might be added

[12:59:00.0000] <llrcombs>
may I make a reccomendation for a change to the mouse event standard?

[13:00:00.0000] <llrcombs>
I think all mouse events should include leftButtonDown, rightButtonDown, and middleButtonDown (or something similarly worded)

[13:00:01.0000] <llrcombs>
because right now, there's no reliable way to check if the LMB is down in a mousemove event, for instance

[13:01:00.0000] <bga_>
hi brendaneich :)

[13:02:00.0000] <brendaneich>
hi


2010-12-05
[16:41:00.0000] <hober>
making a fair amount of progress on my ISSUE-27 CP today: http://www.w3.org/html/wg/wiki/User:Eoconnor/ISSUE-27

[16:41:01.0000] <hatrick>
I am having an FF only issue with image maps.   On vertical resize of the browser it's seeming that with FF the <area> (coordinates) are dropping but the image is not.  This is making me feel a z-index-like approach when it comes to the image and the map....  and I would want it to be more like a relative container to absolute child approacj.

[16:41:02.0000] <othermaciej>
hober: nice!

[16:41:03.0000] <hober>
feedback, as always, is very welcome

[16:41:04.0000] <hatrick>
its as if someone on the z-index level of the coordinates is making it drop, while on the other hand the image is safe from being pushed down.

[16:42:00.0000] <hober>
I've still got a bajillion open tabs related to it, so it will change significantly between now and Friday

[17:22:00.0000] <gsnedders>
http://rebuildingtheweb.com/en/html5-shortcomings/#c20101202172746

[17:49:00.0000] <oojacoboo>
hober: what's the intended use of the rel values from a UA perspective?

[21:26:00.0000] <hober>
oojacoboo: depends on the rel value

[21:27:00.0000] <oojacoboo>
hober: examples?

[21:27:01.0000] <hober>
oojacoboo: e.g., rel=stylesheet has a pretty clear intended use from a UA perspective

[21:27:02.0000] <karlcow>
the troll hunter http://www.youtube.com/watch?v=DdJxk6kO8HU

[21:27:03.0000] <oojacoboo>
hober: I guess I am more referring to anchors

[21:27:04.0000] <hober>
ok, here's another example: <a rel=nofollow>

[21:27:05.0000] <oojacoboo>
rel=colleague

[21:28:00.0000] <oojacoboo>
rel=lover

[21:28:01.0000] <hober>
oojacoboo: are you asking about specific rel values, or <a rel> in general?

[21:30:00.0000] <oojacoboo>
the specific values

[21:30:01.0000] <oojacoboo>
are there any intended uses for UAs with these

[21:31:00.0000] <oojacoboo>
I mostly see if for bot use

[21:54:00.0000] <hober>
oojacoboo: like i said, it depends on the value. the various XFN values, for instance, are generally not expected to have UA implications.

[21:55:00.0000] <oojacoboo>
hober: yea

[00:11:00.0000] <MikeSmith>
"The data model is a representation of the text. The text is not a serialization of the data model."

[00:11:01.0000] <MikeSmith>
hmm

[06:50:00.0000] <realDave>
hi

[08:42:00.0000] <Peter`>
hsivonen: validator.nu gets an Internal Error when I try to validate the following site: http://validator.nu/?doc=http://www.smallnetbuilder.com/content/view/29536/80/

[09:05:00.0000] <MikeSmith>
Peter`: i tried reproducing that with my validator installs, but can't reproduce it

[11:01:00.0000] <_bga>
brendaneich why `Date` constructor w/o `new` returns date string, but other build-in classes acts as with `new`?

[11:04:00.0000] <brendaneich>
not all other built-in classes (String, Number, Boolean convert to primitive if called instead of new'ed)

[11:04:01.0000] <brendaneich>
not sure there's a good answer to "why?"

[11:04:02.0000] <brendaneich>
avoiding an allocation to get a date string could have been done via date.nowString() or whatever

[11:05:00.0000] <brendaneich>
but this was 15 years ago

[11:05:01.0000] <brendaneich>
Date's not going to change

[11:05:02.0000] <brendaneich>
(avoiding an object allocation ^)

[11:05:03.0000] <_bga>
may be we can fix it in es6?

[11:06:00.0000] <brendaneich>
why?

[11:06:01.0000] <brendaneich>
more hidden porting tax

[11:07:00.0000] <brendaneich>
if we want people to opt into the new version we don't want very many runtime meaning shifts

[11:07:01.0000] <_bga>
one common style

[11:07:02.0000] <brendaneich>
one or two big ones that are worth the trouble but not lots of little ones that no one will remember or be able to scan for

[11:07:03.0000] <brendaneich>
this isn't about style

[11:08:00.0000] <_bga>
`new A` - create instance of class A, `A(b)` - cast

[11:08:01.0000] <brendaneich>
you're talking about taking old code into the new opt-in version, or writing new code while still maintaining old -- both Date() -> string and (under your proposal) Date() -> object would coexist and cause confusion

[11:08:02.0000] <brendaneich>
there is no cast meaning for non-primitiive-wrappers 

[11:09:00.0000] <_bga>
i understand, old code will now works

[11:10:00.0000] <_bga>
but in c++ we have same common rules

[11:10:01.0000] <_bga>
`new A` and `A(b)`

[11:10:02.0000] <_bga>
its very readable and understandable

[11:11:00.0000] <_bga>
if we will have sugar for classes

[11:11:01.0000] <brendaneich>
that's not for sure

[11:11:02.0000] <_bga>
we can do not write `new ` keyword

[11:16:00.0000] <brendaneich>
all the classes as sugar proposals have been like that -- always construct, new is optional

[11:21:00.0000] <brendaneich>
note function proxies have independent call and construct traps

[11:23:00.0000] <_bga>
yes. main idea is `new` keyword is syntax noise for instance of class construction

[11:31:00.0000] <Peter`>
MikeSmith: hm ok, might be fixed already then

[11:31:01.0000] <Peter`>
I randomly ran in to it and figured I'd pass it along

[12:23:00.0000] <sqwk>
is there a way to differentiate between multiple nav tags? An extra attribute for the main nav?

[12:34:00.0000] <AryehGregor>
sqwk, class?

[12:34:01.0000] <sqwk>
i meant more in terms of semantics

[12:35:00.0000] <sqwk>
or would screenreaders figure the context out solely though the section tags?

[12:36:00.0000] <AryehGregor>
Based on what I've seen of screen readers, they'll probably treat all <nav>s the same as <div>.

[12:36:01.0000] <AryehGregor>
If you particularly want to support screen readers, you should go get one and test in it.

[12:37:00.0000] <AryehGregor>
Anyone who says semantic markup is necessary for the sake of screen readers has probably never even tried using one.  There are some particular patterns that make them very unhappy (like bad alt text), but mostly they ignore the semantic value of elements.

[12:37:01.0000] <AryehGregor>
When I tried JAWS, it didn't even distinguish <strong> or <em> from <span>.

[12:37:02.0000] <AryehGregor>
Or <b> or <i> or <u> or <ins> or <del> or . . .

[12:38:00.0000] <AryehGregor>
But anyway, no, there's no special way to semantically designate different navs, beyond class and such.

[15:52:00.0000] <MikeSmith>
Peter`:  It's definitely a problem -- I can reproduce it at validator.nu -- but I just can't reproduce it in my environment


2010-12-06
[00:48:00.0000] <Peter`>
That's one I'd like to see too, MikeSmith :)

[00:49:00.0000] <Peter`>
context menus would actually be really useful for Web Inspector too

[00:49:01.0000] <MikeSmith>
yeah

[00:49:02.0000] <MikeSmith>
Peter`: your tweet about the details element reminded me that I've been meaning to open a bug for contextmenu

[00:51:00.0000] <Peter`>
Things are moving quickly

[00:51:01.0000] <MikeSmith>
yeah

[00:51:02.0000] <Peter`>
I might be able to get support for @hidden in WebKit today, using othermaciej's patch

[00:51:03.0000] <MikeSmith>
that'd certainly be cool

[00:53:00.0000] <MikeSmith>
Peter`: it passes the tests now?

[00:54:00.0000] <Peter`>
Yes, The style attribute at an editing test wasn't closed, causing "overflow: hidden" to be interpreted as two attributes, which screwed up the patch

[00:55:00.0000] <Peter`>
which was the regression that caused it to be rolled out

[00:55:01.0000] <MikeSmith>
ok

[02:45:00.0000] <annevk>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=10692 o_O

[02:45:01.0000] <annevk>
the inability to understand the issue runs deep it seems

[05:12:00.0000] <karlcow>
annevk: Manu closed it, it seems. 

[05:13:00.0000] <annevk>
karlcow, yeah, I meant the comment with which he closed it

[05:13:01.0000] <karlcow>
ah ok :)

[05:25:00.0000] <MrWax>
concrete, which HTML5 apis are there? I am making a presentation about HTML5 and I think i practically listed them all, but to be sure, is there some clear overview of which we can distinct?

[05:26:00.0000] <annevk>
http://wiki.whatwg.org/wiki/HTML5_Presentations

[05:40:00.0000] <zcorpan>
i wonder how much time vlad alexander has spent bashing html5 and how it breaks xstandard instead of just implementing it in xstandard

[05:55:00.0000] <zcorpan>
http://www.w3.org/QA/2010/12/high_performance_web_socket_se.html wonder if he has the code in a public repo

[07:02:00.0000] <MrWax>
annevk: thanks, but they get into the language itself, the markup/tag/syntax renewals etc 

[07:02:01.0000] <MrWax>
not about the JS APIS that come along with HTML5

[07:06:00.0000] <annevk>
not all of them do, and most of the interesting new APIs are no longer part of HTML5

[07:09:00.0000] <MrWax>
you mean like geolocation etc?

[07:10:00.0000] <jgraham>
geolocation was never really part of HTML5

[07:10:01.0000] <MrWax>
ok

[07:10:02.0000] <MrWax>
I'm just trying to find a list of APIs that can be considered belonging to HTML5 (now)

[07:10:03.0000] <annevk>
just go through the spec index

[07:11:00.0000] <annevk>
i.e. through http://whatwg.org/html

[07:11:01.0000] <jgraham>
If you want the loose definition of HTML5 look at http://whatwg.org/C

[07:12:00.0000] <MrWax>
ok thanks i will read it and use it

[07:14:00.0000] <zcorpan>
jgraham: that's the "loose" definition? hahahaha

[07:16:00.0000] <annevk>
if you have an implicit section and you use <article> next, is it nested in the implicit section?

[07:16:01.0000] <zcorpan>
no (iirc)

[07:17:00.0000] <annevk>
too bad

[07:17:01.0000] <zcorpan>
it becomes a subsection of the nearest explicit section

[07:17:02.0000] <jgraham>
Well no, if you want the "loose" definition, you should add in http://www.w3.org/Style/CSS/current-work.en.html http://www.w3.org/2008/webapps/wiki/PubStatus#API_Specifications http://tools.ietf.org/html/draft-abarth-websocket-handshake-01 and probably the latest version of silverlight too ("it's not flash!")

[07:19:00.0000] <MrWax>
Will WebSQL as part of localstorage be def not implemented?

[07:20:00.0000] <jgraham>
Not by anyone who hasn't already implemented it

[07:21:00.0000] <jgraham>
For suitable definitions pf "def"

[07:21:01.0000] <MrWax>
i mean in the html5 standard

[07:23:00.0000] <jgraham>
Oh well, no, unless the previous "def" is less definite than it seems

[07:23:01.0000] <jgraham>
No point standardising something that won't be standard

[07:36:00.0000] <annevk>
zcorpan, so you would say that e.g. on http://annevankesteren.nl/2005/12/links I better start using <article>?

[07:37:00.0000] <annevk>
bloats markup a little :/

[07:47:00.0000] <zcorpan>
annevk: what's the question?

[07:47:01.0000] <annevk>
how I could improve the markup

[07:51:00.0000] <zcorpan>
annevk: yeah i guess you could throw in an <article> there (and one <article> per comment if you want to do what the spec suggests)

[07:51:01.0000] <zcorpan>
annevk: and always use pubdate=""

[08:00:00.0000] <zcorpan>
here's one for all the URL regexpers: valid: http://foo_bar.example.org/ invalid: http://foo_bar.org/

[08:03:00.0000] <annevk>
zcorpan, isn't _ always invalid technically?

[08:04:00.0000] <annevk>
zcorpan, also, that would require taking in account http://publicsuffix.org/ ...

[08:04:01.0000] <annevk>
zcorpan, at which point regexps will lose

[08:04:02.0000] <annevk>
/me still thinking about whether or not to use <article> and all

[08:13:00.0000] <zcorpan>
annevk: i end up getting confused when trying to find out whether _ is valid or not

[08:13:01.0000] <zcorpan>
annevk: the IRI RFC seems to allow it at least

[08:15:00.0000] <annevk>
you should look at the DNS RFC

[08:15:01.0000] <annevk>
http://tools.ietf.org/html/rfc1035

[08:16:00.0000] <annevk>
according to that RFC _ should not work

[08:17:00.0000] <annevk>
however, I remember reading somewhere that it can indeed be used if you violate the RFC as software generally does not care

[08:19:00.0000] <zcorpan>
that only seems to allow a-zA-Z0-9-

[08:19:01.0000] <annevk>
hmm, http://tools.ietf.org/html/rfc4343 claims octets within the labels can be anything in the 8bit range

[08:19:02.0000] <annevk>
that seems wrong

[08:21:00.0000] <annevk>
zcorpan, right, IDNs are converted to that format using Punycode

[08:27:00.0000] <zcorpan>
annevk: oh right

[09:28:00.0000] <karlcow>
I think in the past I had seen an article of someone testing Link: in HTTP headers across browsers for CSS

[09:30:00.0000] <karlcow>
hmm test page from Anne http://annevankesteren.nl/test/html-element/style-header.php

[09:30:01.0000] <karlcow>
http://esw.w3.org/LinkHeader

[09:31:00.0000] <karlcow>
http://tools.ietf.org/html/rfc5988

[09:31:01.0000] <karlcow>
grand Pa of Link: http://www.w3.org/Protocols/9707-link-header.html

[09:31:02.0000] <karlcow>
http://meyerweb.com/eric/thoughts/2009/01/22/using-http-headers-to-serve-styles/

[09:32:00.0000] <karlcow>
https://bugzilla.mozilla.org/show_bug.cgi?id=102907

[11:05:00.0000] <Workshiva>
I have altered the spec. Pray I do not alter it further.

[12:45:00.0000] <zcorpan>
Workshiva: what spec?

[12:51:00.0000] <zcorpan>
the example document http://dev.w3.org/html5/html-xhtml-author-guide/html-xhtml-authoring-guide.html#example-document is not well-formed (nor valid as text/html)

[12:54:00.0000] <Ms2ger>
And doesn't have tbodies

[12:55:00.0000] <Ms2ger>
Also, links to w3schools

[12:55:01.0000] <Ms2ger>
/me reminds himself not to bother

[12:56:00.0000] <annevk>
http://trac.webkit.org/changeset/73139/trunk/WebCore/html/ColorInputType.cpp -- right, so all color names that are 7 characters long will still be incorrectly accepted?

[12:56:01.0000] <annevk>
e.g. fuchsia

[12:56:02.0000] <Peter->
No, the first character has to be #

[12:56:03.0000] <Peter->
(see line 45)

[12:57:00.0000] <annevk>
aah

[12:57:01.0000] <Peter->
#fuchsi would be possible

[12:57:02.0000] <annevk>
good point

[12:57:03.0000] <annevk>
that makes it a little trickier :)

[12:57:04.0000] <Peter->
but the Color constructor wouldn't be happy and wouldn't validate :)

[13:00:00.0000] <zcorpan>
""Polyglot Markup: HTML-Compatible XHTML Documents" is a normative specification" <http://www.w3.org/mid/E1PPi99-0005ql-I6⊙jwo>

[13:00:01.0000] <AryehGregor>
But it will still allow #AAAAAA, although that's not valid for <input type=color>.  Unless it correctly lowercases it for the submitted value.

[13:16:00.0000] <annevk>
Peter-, btw, form elements don't have a special constructor

[13:16:01.0000] <annevk>
Peter-, I think what is mentioned in that bug is not something exposed to the platform

[13:16:02.0000] <Dashiva>
zcorpan: No spec, I just felt like saying it

[13:16:03.0000] <annevk>
Peter-, but an implementation detail

[13:17:00.0000] <Dashiva>
It seems to be my "I have altered the X" day today

[13:17:01.0000] <Peter->
annevk, I'll take a look, thanks

[13:17:02.0000] <zcorpan>
Dashiva: bummer

[13:18:00.0000] <Dashiva>
It would be a good line for Hyatt to have used if he ever edited anything :)

[13:19:00.0000] <heycam>
interesting that loading an example with script in Hixie's Live DOM Viewer with Safari makes it say "Refused to execute a JavaScript script. Source code of script found within request."

[13:20:00.0000] <heycam>
s/interesting/annoying in this instance/

[13:21:00.0000] <Peter->
annevk, I've removed the sentence

[13:21:01.0000] <Philip`>
heycam: IE's XSS filter triggers the same problem

[13:22:00.0000] <heycam>
Philip`, seems like a good idea in general

[13:22:01.0000] <zcorpan>
breaking live dom viewer is not a good idea in general :)

[13:23:00.0000] <Ms2ger>
/me wishes the IE guys knew that

[13:25:00.0000] <Philip`>
Hixie could easily fix it by adding some header to disable IE's XSS filter, but I think he said he didn't want to

[13:25:01.0000] <annevk>
zcorpan, about 5 errors so far, mostly escaping errors

[13:26:00.0000] <annevk>
pretty bad

[13:26:01.0000] <annevk>
(re twitter)

[13:28:00.0000] <zcorpan>
annevk: how many of those do you count for escaping errors?

[13:29:00.0000] <annevk>
actually, are there other errors?

[13:29:01.0000] <zcorpan>
yes

[13:29:02.0000] <annevk>
there's a lot of stuff like & in links, literal &s, literal <p>, literal <p />

[13:32:00.0000] <annevk>
empty <p> element usage and various examples only make sense looking at the source code

[13:32:01.0000] <annevk>
what else is there?

[13:32:02.0000] <zcorpan>
no <tbody> in the second table

[13:33:00.0000] <annevk>
and the first does not use <colgroup>

[13:33:01.0000] <zcorpan>
a link pointing to w3schools

[13:33:02.0000] <annevk>
ooh, only required if there's a <col> element

[13:34:00.0000] <zcorpan>
the live page is different from the inline example (doesn't have the escaping problems and uses <code> elements)

[13:36:00.0000] <zcorpan>
claims identical trees (with the exception of the xmlns attribute on the root element) when processed as HTML and when processed as XML, but it doesn't have that (if we assume the escaping and tbody problems are fixed, whitespace still results in different trees)

[13:37:00.0000] <zcorpan>
an attribute value contains literal line breaks

[13:41:00.0000] <zcorpan>
i guess that's about it

[13:41:01.0000] <zcorpan>
also, i love 6.5.2 Elements that Cannot Contain Special Characters

[13:41:02.0000] <zcorpan>
apparently <plaintext> is OK in polyglot markup

[13:42:00.0000] <zcorpan>
(but only if it doesn't contain <>&)

[13:43:00.0000] <hober>
I like how if you view source on SamplePage.html it's quite different than the source listed at #example-document

[13:44:00.0000] <zcorpan>
yeah

[13:45:00.0000] <annevk>
comments on markup welcome: http://annevankesteren.nl/2010/11/fear

[13:45:01.0000] <annevk>
(chose that page because it is rather short)

[13:46:00.0000] <annevk>
(not entirely sure still on the rel=up business)

[13:47:00.0000] <zcorpan>
what changed?

[13:48:00.0000] <annevk>
since when?

[13:48:01.0000] <annevk>
:)

[13:49:00.0000] <zcorpan>
oh, i thought you just changed something on that page and wanted feedback

[13:49:01.0000] <hober>
no <nav>?

[13:50:00.0000] <annevk>
well, I did just add usage of rel=up and rel="up up" and such

[13:50:01.0000] <annevk>
overall I changed various small aspects over the past seven days ago

[13:50:02.0000] <zcorpan>
ok

[13:50:03.0000] <annevk>
I don't quite get the distinction between rel=index and rel=archives

[13:51:00.0000] <annevk>
hober, I was not quite sure how that would fit in

[13:51:01.0000] <zcorpan>
did you change to "Less than a week ago." recently?

[13:52:00.0000] <annevk>
yes, but that is frontpage only

[13:52:01.0000] <hober>
s/<ul id="nav">/<nav><ul>/

[13:52:02.0000] <annevk>
hober, so adding an element? hmm

[13:52:03.0000] <zcorpan>
(no pun intended if you changed it less than a week ago :P )

[13:53:00.0000] <annevk>
I have been thinking about putting that in the archived pages too, but I was not sure how exactly to fit it in nicely

[13:53:01.0000] <annevk>
also, so far it only gives non-meaningful phrases up to a little over a year

[13:54:00.0000] <annevk>
hober, I have been wondering about <nav> <a/> <a/> <a/> </nav> -- reducing the amount of elements

[13:54:01.0000] <jgraham>
http://books.google.com/googlebooks/error.html <-- the internet totally needs more twitter / moby dick crossover 404 pages

[13:55:00.0000] <zcorpan>
i think i like dates better, but maybe that's just me. not that i actually care...

[13:55:01.0000] <annevk>
yeah, I think I'll keep to dates on the archived pages

[13:56:00.0000] <zcorpan>
i meant on the front page

[13:56:01.0000] <annevk>
sure

[13:58:00.0000] <annevk>
Hixie, what is the difference between "index" and "archives" supposed to be?

[14:01:00.0000] <zcorpan>
annevk: afaict archives is an index of *documents*, while index is an index of sections of one big document that has been split to several pages

[14:04:00.0000] <annevk>
zcorpan, the examples and description of index in HTML5 do not support that

[14:05:00.0000] <zcorpan>
uh, you're right, i misread the description for index

[14:06:00.0000] <zcorpan>
i guess the thing distinguishing them is 'hierarchical structure', which is pretty subtle

[14:07:00.0000] <annevk>
so in my case it would be index then

[14:08:00.0000] <annevk>
it's pretty hierarchical

[14:08:01.0000] <zcorpan>
and index can be used together with up

[14:08:02.0000] <zcorpan>
maybe they should be merged into one keyword

[14:09:00.0000] <Hixie>
annevk: dunno, file a bug. i think we should nuke them all anyway.

[14:09:01.0000] <Hixie>
they're not useful in practice

[14:09:02.0000] <annevk>
Hixie, also, do you see a problem with <nav> <a/> <a/> <a/> </nav> ?

[14:09:03.0000] <annevk>
yeah, I added them for matjas and to test HTML5 out

[14:10:00.0000] <Hixie>
you mean a <nav> that just contains one paragraph? not especially.

[14:10:01.0000] <annevk>
yeah, my navigation is really simple...

[14:10:02.0000] <annevk>
might be nice to have an example to that effect in the spec as well -- guess that would be another bug

[14:11:00.0000] <matjas>
I remember Hixie confirmed that <nav><a>Foo</a> | <a>Bar</a></nav> was okay like a year ago

[14:11:01.0000] <Hixie>
sure

[14:11:02.0000] <annevk>
I don't want to use separators

[14:11:03.0000] <Hixie>
yeah seems fine to me

[14:11:04.0000] <Hixie>
so long as it works fine without css :-)

[14:12:00.0000] <annevk>
there will be a space

[14:12:01.0000] <annevk>
also, AT users don't really like funny characters inbetween it seems

[14:12:02.0000] <annevk>
s/it seems/I heard/

[14:12:03.0000] <zcorpan>
"so long as it works fine without css" - i think that's where it'll fall apart if we recommend it in the spec

[14:12:04.0000] <Hixie>
a11y users also find it annoying when links run into each other, from what i've heard (i.e. when two words next to each other are both links)

[14:12:05.0000] <Hixie>
but *shrug*

[14:13:00.0000] <annevk>
oh

[14:14:00.0000] <annevk>
yes

[14:14:01.0000] <annevk>
style sheet is going to be easier

[14:14:02.0000] <annevk>
o_O

[14:22:00.0000] <annevk>
fuck specifity

[14:22:01.0000] <annevk>
specificity even

[14:24:00.0000] <oojacoboo>
are there any plans to support variables and hierarchical ordering in stylesheets, like LESS CSS ?

[14:24:01.0000] <oojacoboo>
http://lesscss.org/

[14:25:00.0000] <oojacoboo>
when writing complex application UI's stylesheets in their current format become very difficult to manage

[14:26:00.0000] <oojacoboo>
you end up including multiple classes in your html element attributes as a stop-gap solution, but that's just extra markup and makes the html side harder to manage

[14:26:01.0000] <annevk>
you want www-style⊙wo

[14:26:02.0000] <oojacoboo>
as more applications make their way to the web, this is going to be an increasing issue

[14:27:00.0000] <oojacoboo>
annevk: ?

[14:28:00.0000] <oojacoboo>
is that a mail group?

[14:28:01.0000] <AryehGregor>
Yes.

[14:28:02.0000] <AryehGregor>
This has been suggested a bunch of times before.

[14:28:03.0000] <oojacoboo>
those still exist :/

[14:28:04.0000] <AryehGregor>
No progress has been made AFAICT, dunno why.

[14:29:00.0000] <AryehGregor>
Yep, and so do IRC chats.  :)

[14:29:01.0000] <oojacoboo>
at least this is remotely instant... has purpose

[14:29:02.0000] <matjas>
Erm, I'm currently tethering my 5 kbps Edge connection from my phone to my laptop. I’ve been trying out every Geolocation demo I can think of, and they all seem to fail, in every browser. Does tethering throw off geolocation for some reason?

[14:29:03.0000] <AryehGregor>
So does e-mail . . .

[14:30:00.0000] <AryehGregor>
matjas, if your laptop doesn't have a GPS device in it, then geolocation might not work at all.

[14:30:01.0000] <AryehGregor>
I don't know if browsers use other location info sources in that case.

[14:30:02.0000] <oojacoboo>
AryehGregor: w/e, no way I want all that email coming in

[14:30:03.0000] <gsnedders>
AryehGregor: IP -> Geo lookup

[14:31:00.0000] <AryehGregor>
Then that might fail randomly, yeah.

[14:31:01.0000] <AryehGregor>
Dunno how cell phones get their IP addresses.

[14:31:02.0000] <annevk>
because I changed from #nav to nav CSS specificity is screwing me over

[14:31:03.0000] <matjas>
AryehGregor: I should clarify, my laptop does have a GPS device in it, and I've used Geolocation before (and tested these exact demos); they worked fine.

[14:31:04.0000] <zcorpan>
i don't think you need to subscribe to send email to www-style

[14:31:05.0000] <AryehGregor>
matjas, no idea then.  What browser?

[14:31:06.0000] <annevk>
and fixing this sucks

[14:32:00.0000] <annevk>
guess I could :not(p) or some silly thing to hack around

[14:32:01.0000] <matjas>
AryehGregor: Well, I’ve tried every browser I have installed. Latest Chromium nightly, latest Chrome stable, latest Opera snapshot, latest Opera stable, latest Minefield nightly, latest Firefox stable… all failed

[14:32:02.0000] <annevk>
:any-link would be useful to have right now

[14:32:03.0000] <AryehGregor>
Interesting.

[14:32:04.0000] <AryehGregor>
What's your laptop's IP address?

[14:33:00.0000] <gsnedders>
Dunno what happens in the IPv6 case, FWIW

[14:33:01.0000] <matjas>
AryehGregor: You mean public IP right? 188.188.226.156

[14:33:02.0000] <matjas>
Does that help at all? :)

[14:33:03.0000] <AryehGregor>
Some random geolocation site I pulled off Google gives no location info for that IP address.

[14:33:04.0000] <AryehGregor>
Er, wait.

[14:34:00.0000] <AryehGregor>
Hmm.

[14:34:01.0000] <annevk>
hmm not fixed

[14:34:02.0000] <annevk>
fail

[14:34:03.0000] <AryehGregor>
So maybe it's not using the GPS device for some reason, maybe it's using your IP address.

[14:34:04.0000] <AryehGregor>
And it can't geolocate the cell phone IP address.

[14:35:00.0000] <matjas>
[23:39:53] <JKarsrud_> matjas: Fails when tethering here too

[14:35:01.0000] <AryehGregor>
I wouldn't be surprised if IP-based geolookup typically fails when tethering.

[14:36:00.0000] <AryehGregor>
You'd expect it would use GPS info if you have a GPS device in the laptop, though.

[14:36:01.0000] <matjas>
AryehGregor: Yeah exactly. Too much weirdness

[14:36:02.0000] <gsnedders>
AryehGregor: Depends on drivers, etc.

[14:36:03.0000] <gsnedders>
matjas: What OS?

[14:36:04.0000] <matjas>
gsnedders: OS X

[14:36:05.0000] <matjas>
JKarsrud_ (who verified the problem in #html5) has a MacBook running OS X as well

[14:37:00.0000] <matjas>
gsnedders: So this is an OS issue?

[14:37:01.0000] <jgraham>
101 signs that you spend too long thinking about standards #58: During a perfectly normal discussion about a phone implementing Near Field Communication, you keep wondering why people are talking about (Unicode) Normal Form C

[14:37:02.0000] <gsnedders>
matjas: No, but most OSes don't have any generic API to access GPS devices

[14:38:00.0000] <AryehGregor>
Oh, so looks like WebKit implemented marquee attributes after all.

[14:38:01.0000] <AryehGregor>
That answers that question.

[14:39:00.0000] <gsnedders>
matjas: So it's a matter of getting the geo data to the browser, which is ridiculously non-trivial

[14:39:01.0000] <matjas>
I don’t really get it… It works fine without tethering, why would it matter where the Internet connection is coming from?

[14:39:02.0000] <AryehGregor>
What's "most OSes" here?

[14:40:00.0000] <gsnedders>
AryehGregor: I can't remember

[14:40:01.0000] <AryehGregor>
matjas, because it's probably not using the GPS device at all.  It's probably using your IP address.

[14:40:02.0000] <gsnedders>
Indeed.

[14:40:03.0000] <AryehGregor>
Which is different if you're tethering vs. using Wi-Fi.

[14:40:04.0000] <gsnedders>
There's a high probability that it's using IP lookup, or doing something like using the Google wifi database thing

[14:40:05.0000] <jgraham>
/me assumes there are environments in which geolocation actually works and that he has just never been in one

[14:40:06.0000] <matjas>
AryehGregor: Yeah, but why is it using the IP address lookup instead of the built-in GPS stuff when tethering is used?

[14:40:07.0000] <jgraham>
I guess a mobile phone with GPS

[14:40:08.0000] <AryehGregor>
matjas, it's probably using the IP address lookup in both cases.

[14:40:09.0000] <matjas>
It uses the GPS chip just fine when I'm not tethering

[14:41:00.0000] <gsnedders>
matjas: Are you sure it uses the GPS chip?

[14:41:01.0000] <AryehGregor>
How do you know it's not doing geolocation on the IP address?

[14:41:02.0000] <jgraham>
That seems like a testable hypothesis

[14:41:03.0000] <matjas>
My mistake. I’m not sure at all, I just assumed MacBooks would use the built-in GPS chip 

[14:41:04.0000] <jgraham>
If you proxy your connection and the location changes

[14:42:00.0000] <matjas>
I’m 100% sure my model has a GPS-chip built-in

[14:42:01.0000] <jgraham>
/me would guess that just using the IP address is more likely

[14:42:02.0000] <jgraham>
Or maybe one of those wifi database things if you are on wifi

[14:42:03.0000] <matjas>
jgraham: Interesting. I will try that out as soon as I can get hold of a better connection.

[14:43:00.0000] <gsnedders>
matjas: The latest MacBook doesn't seem to according to Apple's site, and OS X has no location API, so there'd need to be explicit support in the browser for the GPS chip if it does exist.

[14:43:01.0000] <AryehGregor>
Or just use some geolocation app that reveals your location in real time, and look at the granularity.

[14:43:02.0000] <matjas>
gsnedders: I stand corrected. Thanks for the info!

[14:43:03.0000] <AryehGregor>
If it's going off IP address, it won't change as you walk around, as long as you're on the same network.

[14:45:00.0000] <jgraham>
The way I tell that I am getting an IP address based location is that it thinks I am in friggin' Stockholm

[14:46:00.0000] <annevk>
hober, now using <nav>

[14:46:01.0000] <annevk>
I think I am up to 3 elements HTML5 newly introduced now

[14:47:00.0000] <gsnedders>
jgraham: You're in Stockholm at home? The office is in Borås, IIRC.

[14:47:01.0000] <jgraham>
gsnedders: It thought that the office was in Stockholm too last time I tried

[14:48:00.0000] <jgraham>
Dunno why it changed

[14:48:01.0000] <Hixie>
any brits looking to be paid to give a talk on contemporary html progress?

[14:48:02.0000] <jgraham>
/me assumes "brits living in Sweden" don't really count :)

[14:48:03.0000] <gsnedders>
jgraham: When I last tried was the day we first got geolocation support :P

[14:48:04.0000] <Hixie>
jgraham: i already proposed you :-) (i pointed them to the wiki page)

[14:49:00.0000] <Hixie>
apparently swedes living in britain would be fine, but brits in sweden not so much

[14:49:01.0000] <jgraham>
Hixie: Oh. Heh :)

[14:49:02.0000] <gsnedders>
I agree with the statement up to the "to give a talk" part :)

[14:49:03.0000] <annevk>
Hixie, try brucel⊙oc

[14:50:00.0000] <Hixie>
he's in the uk?

[14:50:01.0000] <Hixie>
cool, didn't know

[14:50:02.0000] <gsnedders>
Yeah.

[14:50:03.0000] <annevk>
yeah

[14:50:04.0000] <jgraham>
Oh, that would have been a useful suggestion

[14:50:05.0000] <gsnedders>
I was going to suggest him, but annevk beat me

[14:50:06.0000] <jgraham>
Specifically he is in Birningham. But we haven't managed to disown it yet

[14:50:07.0000] <gsnedders>
Hixie: Any more detail about what sort of talk?

[14:50:08.0000] <Hixie>
um let's see

[14:50:09.0000] <jgraham>
*Birmingham

[14:50:10.0000] <Hixie>
/me looks at e-mail closer

[14:51:00.0000] <jgraham>
(note for the angry people reading this: I actually have nothing against Birmingham and probably wouldn't chose to let it drift off into the atlantic given the chance)

[14:52:00.0000] <Hixie>
"One of [some company's] large public sector clients has asked if we can deliver a presentation to their developers and architects, presenting the pros and cons of moving to HTML5 immediately"

[14:52:01.0000] <jgraham>
(I mean without it there would be no Black Sabbath and hence no heavy metal)

[14:52:02.0000] <Hixie>
well i've told the guy about brucel, if anyone else is interested let me know and i'll forward your details also

[14:53:00.0000] <jgraham>
(given which there wouldn't be constant metal gigs in Linkoping taking up all the avaliable concert venues)

[14:53:01.0000] <annevk>
whoa

[14:53:02.0000] <annevk>
bcc world news talks about HTML5

[14:53:03.0000] <gsnedders>
jgraham: Oh come on, there are almost none.

[14:53:04.0000] <jgraham>
(and so preventing me seeing any bands I actually like)

[14:53:05.0000] <jgraham>
(so yeah, fuck you Birmingham)

[14:53:06.0000] <annevk>
it is processor hungry

[14:53:07.0000] <annevk>
worse than a cookie monster

[14:53:08.0000] <annevk>
or something like that

[14:53:09.0000] <annevk>
and that was it, lol

[14:54:00.0000] <karlcow>
DOMContentLoaded is not defined in HTML5? (or am I missing something)

[14:54:01.0000] <karlcow>
http://dev.w3.org/html5/spec/the-end.html#the-end

[14:54:02.0000] <jgraham>
gsnedders: Well yeah and even if there were it wouldn't make good people suddenly play here. But if there was no metal maybe good bands would have more fans in Scandinavia

[14:54:03.0000] <zcorpan>
"Queue a task to fire a simple event that bubbles named DOMContentLoaded at the Document."

[14:55:00.0000] <annevk>
karlcow, you don't need much to define an event

[14:55:01.0000] <karlcow>
hehe

[14:55:02.0000] <annevk>
karlcow, i.e. what HTML5 says there is sufficient

[14:55:03.0000] <gsnedders>
jgraham: Bleh, just think of all the good music there :)

[14:55:04.0000] <jgraham>
and stop doing "european tours" that consist of the UK, The Netherlands, France and Belgium

[14:55:05.0000] <jgraham>
I mean. Belgium

[14:55:06.0000] <annevk>
they have chocolate

[14:55:07.0000] <jgraham>
How awful is it to be below Belgium on the pecking order

[14:55:08.0000] <annevk>
and beer

[14:56:00.0000] <jgraham>
Belgian chocolate is not actually that nice

[14:56:01.0000] <annevk>
o_O

[14:57:00.0000] <jgraham>
Well there is probably some good stuff but all the great chocolate I find comes from France or Italy

[14:57:01.0000] <jgraham>
Possibly the belgians are just keeping it to themselves

[14:57:02.0000] <annevk>
that sounds really odd

[14:59:00.0000] <jgraham>
Not really. Valrhona: French. Amedei: Italian. Heaven in bar form.

[14:59:01.0000] <erlehmann>
can any one of you canvas experts explain to me why stroked shapes are always drawn a frame later than filled? http://daten.dieweltistgarnichtso.net/src/schwrkrft/test.html

[14:59:02.0000] <erlehmann>
(click on a particle in the main canvas and it gets hilighted in the secondary)

[15:01:00.0000] <jgraham>
Anyway the point is that The Decemberists are playing frickin' Belgium and ignoring Scandinavia entirely. Let alone anywhere I could actually get to on a weeknight

[15:03:00.0000] <jgraham>
And with that irrelevant rant, I will go to sleep

[15:05:00.0000] <annevk>
you could take some vacation ;)

[15:05:01.0000] <annevk>
but then you don't like the chocolate there and you don't drink beer... might be sad ;p

[15:08:00.0000] <erlehmann>
any one of the web cabal attending chaos communication congress at the end of the month?

[15:09:00.0000] <gsnedders>
jgraham: I didn't see any dates announced anywhere near here :(

[15:09:01.0000] <annevk>
erlehmann, that's in Germany right? which days?

[15:10:00.0000] <gsnedders>
Yeah, they're playing in London, nowhere else in the UK :(

[15:10:01.0000] <gsnedders>
Or, alternatively, I can't read.

[15:10:02.0000] <gsnedders>
They're playing in Glasgow in March. Win.

[15:11:00.0000] <gsnedders>
Meh, it's the weekend I have people trying to convince me to go LARPing…

[15:11:01.0000] <erlehmann>
annevk, every year from 27.12 to 30.12 — but all complete-event tickets are sold out, so (as i understood it) they'll only sell day passes at the counter.

[15:12:00.0000] <annevk>
probably not going to make it then

[15:12:01.0000] <annevk>
bit unfortunate timing for me if it is the same each year

[15:13:00.0000] <erlehmann>
ahaha, i was just "don't worry, i'll ask again next year", but then …

[15:13:01.0000] <annevk>
heh

[15:13:02.0000] <annevk>
could organize our own one day

[15:14:00.0000] <annevk>
put a banner on the spec and I'm sure the masses will come :)

[15:14:01.0000] <erlehmann>
our own congress with thousands of hackers? hehe

[15:14:02.0000] <annevk>
and then when everyone arrives we announce the secret program

[15:15:00.0000] <annevk>
writing testcases for three days straight

[15:15:01.0000] <erlehmann>
“Nooooo! HTML5 testcases is … PEOPLE!”


2010-12-07
[16:44:00.0000] <Hixie>
could some opera people comment on whether they're interested in having the spec spec http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2010-August/028107.html ?

[17:51:00.0000] <lhnz>
NGEN

[21:24:00.0000] <hober>
OK. My ISSUE-27 CP is getting pretty close to where I wanted it to be.

[21:25:00.0000] <hober>
http://www.w3.org/html/wg/wiki/User:Eoconnor/ISSUE-27

[21:25:01.0000] <hober>
any and all feedback welcome

[22:19:00.0000] <othermaciej>
hober: that looks quite thorough

[00:20:00.0000] <phrearch>
morning

[00:42:00.0000] <phrearch>
hm,  are there any conventions yet how to do pageviews over websockets?

[00:43:00.0000] <phrearch>
like i do a xhr request now for /frontend/wiki/home/ , but i rather do this over a websocket, so i can keep track of where a user is on the site without much hazzle

[01:30:00.0000] <hsivonen>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=10970 What happened to the claim that RDFa 1.1 is a superset of Microdata?

[01:33:00.0000] <jgraham>
/me didn't realise that RDFa was non-deterministic (that is: different consumers may produce different graphs)

[01:33:01.0000] <jgraham>
That seems bad

[01:34:00.0000] <jgraham>
hsivonen: I assume that the answer is that it's conceptually a superset i.e. any triple that you can produce with microdata you can also produce with RDFa, but it is not necessarily a superset at the markup level

[01:34:01.0000] <jgraham>
Or did they make the stronger claim at some point?

[01:40:00.0000] <hsivonen>
jgraham: I don't know if someone meant to make a stronger claim at some point, but I certaintly thought someone made a stronger claim.

[01:42:00.0000] <othermaciej>
RDFa is not a syntactic superset for trivial reasons (e.g. doesn't support itemscope)

[01:42:01.0000] <othermaciej>
I don't recall exactly what claims were made though

[01:46:00.0000] <hsivonen>
I like the title of http://www.adambarth.com/experimental/websocket.pdf

[01:46:01.0000] <MikeSmith>
heh

[01:48:00.0000] <MikeSmith>
the graphics are great as well

[01:48:01.0000] <MikeSmith>
figures

[01:49:00.0000] <annevk>
Firefox' encoding menu looks even worse than Opera's

[01:49:01.0000] <annevk>
I'm impressed

[01:49:02.0000] <othermaciej>
hah, I didn't even look at the graphics before

[01:50:00.0000] <annevk>
Although admittedly it only goes wrong when you open the "more encodings" subdialog

[01:50:01.0000] <othermaciej>
I am sad that the paper didn't do much to win people over to the true path of handshake righteousness

[01:51:00.0000] <hsivonen>
Don't countries have legislation that bans tampering with communications in transit the way transparent proxies do?

[01:51:01.0000] <othermaciej>
even though it shows a rather awful vulnerability

[01:51:02.0000] <othermaciej>
hsivonen: you mean, besides the countries running such proxies themselves?

[01:51:03.0000] <annevk>
So bored with hybi...

[01:51:04.0000] <hsivonen>
othermaciej: well, those  countries could have laws, too

[01:51:05.0000] <annevk>
Would be nice if they settled on something already...

[01:52:00.0000] <annevk>
Same with the HTML test suite stuff by the way

[01:52:01.0000] <hsivonen>
othermaciej: e.g. Finland has a law that authorizes the police to tamper with the DNS records of foreign sites, but they are known to tamper with the DNS record of at least one Finnish site, too.

[01:52:02.0000] <othermaciej>
I might try my own attempt at hacking the test framework to be more convenient for simple script tests

[01:53:00.0000] <othermaciej>
hsivonen: some intercepting proxies are national firewalls but some are corporate firewalls, or set up on public wifi networks by the operators of said network

[01:53:01.0000] <othermaciej>
I doubt the latter two categories are illegal

[01:54:00.0000] <annevk>
ooh hey

[01:54:01.0000] <annevk>
did we pass one of the HTML WG deadlines December 1?

[01:54:02.0000] <othermaciej>
there was one on December 6

[01:54:03.0000] <hsivonen>
I *think* my ISP in the late 1990s had a transparent proxy for a while but it resulted in much complaining

[01:54:04.0000] <othermaciej>
all bugs are supposed to be resolved by editors

[01:55:00.0000] <annevk>
actually, that's tomorrow

[01:55:01.0000] <othermaciej>
I think there are a tiny handful of open pre-LC bugs

[01:55:02.0000] <annevk>
per http://lists.w3.org/Archives/Public/public-html/2010Sep/0074.html

[01:55:03.0000] <hsivonen>
or I know it had a transparent proxy at one point, but I *think* it was found to be a bad idea 10 years ago already

[01:55:04.0000] <othermaciej>
ah, right, the 8th

[01:55:05.0000] <othermaciej>
my mistake

[01:56:00.0000] <jgraham>
othermaciej: You saw I committed the change I made to add generate_tests?

[01:57:00.0000] <othermaciej>
jgraham: no I didn't, but generate_tests doesn't seem at all like what I want, based on your prior description of it

[01:57:01.0000] <jgraham>
Oh well

[01:57:02.0000] <othermaciej>
it is confusingly indirect

[01:57:03.0000] <jgraham>
I used it and found it worked rather well

[01:57:04.0000] <hsivonen>
I didn't read the full paper yet, but by skimming it looks like Flash and Java can poison transparent proxies, too

[01:58:00.0000] <hsivonen>
did I skim it right?

[01:58:01.0000] <jgraham>
hsivonen: yes

[01:58:02.0000] <annevk>
http://www.cafepress.co.uk/sk/w3c_shop -- not cashing in on HTML5

[01:58:03.0000] <hsivonen>
/me wonders if Flash and Java are now also considered to have serious security flaws

[01:58:04.0000] <othermaciej>
I would really just like a way to write test assertions in a normal straightforward way, and have the results of each one reported, without having to double-nest them all in calls

[01:58:05.0000] <hsivonen>
(as opposed to transparent proxies having them)

[01:59:00.0000] <othermaciej>
generate_tests instead adds an obscure way to generate tests+assertions from arrays of stuff

[01:59:01.0000] <othermaciej>
it seems like almost everyone who has commented finds the test vs. assertion distinction confusing and painful

[01:59:02.0000] <jgraham>
It's really not that obsucre

[02:00:00.0000] <jgraham>
Yes, it feels like I am fighting a losing battle there

[02:00:01.0000] <jgraham>
But nevertheless I think it is a highly useful distinction

[02:01:00.0000] <othermaciej>
it is a lot less readable than just writing individual assertions

[02:01:01.0000] <othermaciej>
also the way you write it seems to lose the exception catching on the assert expressions

[02:02:00.0000] <othermaciej>
(I infer from generate_tests(assert_equals, [[1+1,2], [2+3,5]]))

[02:02:01.0000] <phrearch>
hm this may be nice for websocket routing. combination of crud and urls

[02:02:02.0000] <jgraham>
I don't think it is less readable if you want something more than a simple assert_

[02:02:03.0000] <jgraham>
Which is a rather common case

[02:02:04.0000] <jgraham>
Or at least was the case the only time I used it so far

[02:02:05.0000] <phrearch>
myws.remote('/path/to/my/resource/action',{params})

[02:02:06.0000] <othermaciej>
yeah, but just wanting a simple assert is a rather common case too

[02:02:07.0000] <othermaciej>
which is quite poorly served right now

[02:03:00.0000] <jgraham>
Right, so having one solution that works for both cases seems strictly better than having a whole bunch of special cases for each assert_

[02:03:01.0000] <othermaciej>
compared to other frameworks for browser-based tests that folks have experience with

[02:03:02.0000] <jgraham>
To be honest the vibe I get is that everyone wants to do what they are used to

[02:03:03.0000] <othermaciej>
but this does almost nothing to fix my complaint even for the simple assert_equals case

[02:04:00.0000] <othermaciej>
it can't catch exceptions in those expressions

[02:04:01.0000] <jgraham>
I'm not saying that my thing is perfect or even good, but you proposed something like the webkit tests and Mozilla folks basically proposed Mochitest

[02:04:02.0000] <jgraham>
othermaciej: Why can't it catch exceptions?

[02:04:03.0000] <othermaciej>
mochitests and webkit tests are much more similar to each other than to your thing

[02:05:00.0000] <othermaciej>
jgraham: what exception handler is in effect when the expression "2 + 3" is being evaluated in your example?

[02:05:01.0000] <jgraham>
Maybe I have been looking at the wrong Webkit tests then

[02:05:02.0000] <othermaciej>
what if instead of 2 + 3, that expression was getElementById("foo").tagName (or something else that could throw)?

[02:05:03.0000] <jgraham>
othermaciej: That's a fair point, but in practice I wouldn't exprect a complex expression there

[02:06:00.0000] <hsivonen>
jgraham: my learning experience when I was writing my first mochitest was more successful than my experience when first writing an HTML WG test

[02:06:01.0000] <jgraham>
I would typically expect you to pass a primitive to a function

[02:07:00.0000] <othermaciej>
how would you use generate_tests to check that DOM calls which may throw have specific expected results?

[02:07:01.0000] <othermaciej>
I don't see any way to do it

[02:07:02.0000] <othermaciej>
and that's exactly what my id test is

[02:07:03.0000] <jgraham>
How would you fix the problem but preserve the property that the code is run in an exception handler?

[02:08:00.0000] <othermaciej>
I can think of three ways

[02:08:01.0000] <othermaciej>
(1) make each assert_* macro report its results, no matter how they are grouped in test() calls

[02:09:00.0000] <jgraham>
I don't see how (1) helps

[02:09:01.0000] <othermaciej>
(2) make assert_* macros just work at top level without being nested in test(), but take strings to eval, or thunks

[02:09:02.0000] <othermaciej>
(3) make test_* macros that are variants of assert_* which combine the creation of a test

[02:10:00.0000] <othermaciej>
(1) helps because I could rewrite my id test to have one test(function() { .... }); wrapping it

[02:10:01.0000] <othermaciej>
instead of one per assert

[02:10:02.0000] <othermaciej>
and still get the same output

[02:11:00.0000] <jgraham>
I am really, really skeptical of systems that require output for each assert. One assert passing is not typically sufficient to indicate that the test passed

[02:11:01.0000] <jgraham>
Except in trivial cases

[02:11:02.0000] <othermaciej>
who said anything about "systems that require"?

[02:12:00.0000] <othermaciej>
it makes it easier for browser engineers running the test to determine exactly which parts are failing

[02:12:01.0000] <othermaciej>
and which parts are working

[02:12:02.0000] <othermaciej>
more so than a single pass/fail result

[02:13:00.0000] <jgraham>
Anyway, what implementation of "thunks" did you have in mind?

[02:13:01.0000] <othermaciej>
I am assuming here that the goal of the tests is to improve interop, and therefore optimizing the output to be useful for implementors

[02:13:02.0000] <jgraham>
Yes, I agree with that

[02:14:00.0000] <jgraham>
And I can see that adding stack traces where the test fails is useful

[02:14:01.0000] <jgraham>
and adding the asserts that passed for failing tests might give you some indication of what code flow you had

[02:14:02.0000] <jgraham>
(I am thinking of async tests here)

[02:14:03.0000] <othermaciej>
by "thunks" I just mean 0-arg functions used to delay expressions (rather than quoting them as strings)

[02:15:00.0000] <jgraham>
Isn't that roughly what it uses already?

[02:15:01.0000] <jgraham>
That seems to be the thing that is drawing all the complkaints

[02:15:02.0000] <othermaciej>
that plus the two separate concepts that you have to layer together by hand each time

[02:17:00.0000] <jgraham>
(fwiw I *could* make generate_tests exception-safe in the same way. That is I could make it take a function that is evaluated to return the parameter lists, or something)

[02:17:01.0000] <othermaciej>
I haven't really thought about async tests, but even there I think it is useful to report results for all steps that actually run, even if you don't end up running all the steps

[02:17:02.0000] <othermaciej>
especially so if the failure is that one of your async steps never runs (e.g. because some event never fires), even though all asserts up to that point passed

[02:18:00.0000] <gsnedders>
Is it not implicit that all asserts up to the point that it failed at passed?

[02:18:01.0000] <othermaciej>
see comment above about optimizing output for ease of use by implementors

[02:19:00.0000] <jgraham>
You can't fail because a step never runs and keep the common pattern where you add an assert_unreached() to indicate that an event that was not supposed to fire did not

[02:19:01.0000] <othermaciej>
yes, you could stare real hard at the test, figure out the control flow, and surmise where you must have failed, or the test output can tell you that

[02:20:00.0000] <othermaciej>
how will async tests detect failure by an event never firing?

[02:20:01.0000] <jgraham>
The test will timeout

[02:20:02.0000] <othermaciej>
so presumably you know what step was pending at that point

[02:20:03.0000] <jgraham>
"You"?

[02:20:04.0000] <othermaciej>
I assume a timeout is a failure

[02:20:05.0000] <jgraham>
The harness doesn't know

[02:20:06.0000] <gsnedders>
FWIW, in our case, as I believe jgraham said on the list already, for our automated testing system (or any that does regression tracking, which I think would include MS as well), having tests/asserts that sometimes appear and sometimes don't are actively harmful for tracking stuff

[02:21:00.0000] <jgraham>
A timeout is a failure

[02:21:01.0000] <othermaciej>
how is that compatible with steps that are expected to never run and assert_unreached()?

[02:21:02.0000] <jgraham>
But the test harness doesn't know about the order of things, so it doesn't know what, if anything is pending

[02:21:03.0000] <jgraham>
It just knows that the test hasn't declared itself finished

[02:22:00.0000] <jgraham>
Anyway, it is easy to add some information about the asserts that passed to the output of failed tests

[02:22:01.0000] <othermaciej>
anyway, this only further makes the case that printing partial results as the test runs is useful

[02:23:00.0000] <jgraham>
It is also easy to add stack information via non-standard apis

[02:23:01.0000] <othermaciej>
if there is a way to meet Opera's specialized needs (that WebKit and Gecko don't seem to share) without making it harder to write good tests, I'm all for it

[02:23:02.0000] <jgraham>
I don't think either of these things are fundamental design issues though

[02:24:00.0000] <othermaciej>
I'm not sure stack information is very important

[02:24:01.0000] <jgraham>
Well it's hard to tell exactly which assert we are talking about without it

[02:25:00.0000] <othermaciej>
I must admit I do not really understand the details of Opera's needs, but I'm willing to take your word for it that the test/assert distinction somehow serves it

[02:26:00.0000] <jgraham>
Our needs are mostly that we get consistent output from files containing multiple tests

[02:26:01.0000] <gsnedders>
othermaciej: Basically, we need a constant set of tests/asserts/whatever to be reported back to the regression tracking

[02:26:02.0000] <othermaciej>
but I'm not sure I am willing to write three times as many lines of script per HTML5 test to meet those needs

[02:26:03.0000] <jgraham>
That is, if they give 10 results one day we need 10 results the next day even if we broke something in the middle

[02:26:04.0000] <othermaciej>
compared to what I am used to in other script tests frameworks

[02:27:00.0000] <gsnedders>
FWIW, something like what qUnit does of showing all the asserts that ran works for us, provided we still have the tst output.

[02:28:00.0000] <jgraham>
Yes, ease of authoring is a concern. But maybe this is best discussed with a patch

[02:28:01.0000] <othermaciej>
I'll write a sample modification to the test framework (maybe more than one) and show how my test case would look with and without it

[02:29:00.0000] <MikeSmith>
jgraham: btw, https://bitbucket.org/validator/html-spec

[02:30:00.0000] <MikeSmith>
mirror of the subversion repo for the spec 

[02:30:01.0000] <MikeSmith>
the mercurial clone is only 31MB

[02:31:00.0000] <MikeSmith>
I had made another attempt at making a git clone of it, but stopped when it got to 8GB

[02:32:00.0000] <jgraham>
Yeah, something crazy there

[02:32:01.0000] <MikeSmith>
disk space limit at github is 300MB anyway

[02:32:02.0000] <MikeSmith>
jgraham: yeah, I have no idea what would cause it to balloon like that

[02:33:00.0000] <MikeSmith>
also, I think the subversion python bindings that hgsubversion uses by default leak memory

[02:34:00.0000] <MikeSmith>
making the hg clone kept causing my server to run out of memory

[02:34:01.0000] <MikeSmith>
and then kill the process

[02:35:00.0000] <MikeSmith>
all of the available ways to create DVCS clones of subversion repos seem to have some serious problems when working with a subversion repo for any large project

[02:36:00.0000] <jgraham>
I choose to blame svn

[02:36:01.0000] <MikeSmith>
hell yeah

[02:36:02.0000] <MikeSmith>
as usual

[02:37:00.0000] <MikeSmith>
I dislike subversion enough I'm tempted to say I hope subversion's death is slow and painful

[02:38:00.0000] <MikeSmith>
as payback for all the wasted time it has cost

[02:38:01.0000] <jgraham>
It is dying slowly and painfully. Sadly the pain is for the people still using it and those trying to move away from it

[02:39:00.0000] <rimantas>
MikeSmith, creating svn clone requires to check out every revision out of subversion

[02:39:01.0000] <MikeSmith>
rimantas: yah, I figured as much

[02:39:02.0000] <MikeSmith>
jgraham: I just hope that people have enough sense to quit using it for new projects at least

[02:40:00.0000] <MikeSmith>
why anyone would voluntarily choose subversion for a new project at this point is beyond me

[02:40:01.0000] <rimantas>
actually it shows one of the ways how subversion sucks - everything (almost) over the net, and slow

[02:40:02.0000] <gsnedders>
othermaciej: Would something like having setup/teardown would work? There, IMO, needs to be a way to capture exceptions from each and every part of an, e.g., @id testsuite

[02:40:03.0000] <MikeSmith>
yeah, we could write a book about all the ways it sucks

[02:40:04.0000] <MikeSmith>
mutli-volume book

[02:41:00.0000] <annevk>
hmm, Obama failed with tax, Julian Assange arrested

[02:41:01.0000] <annevk>
not a great day

[02:41:02.0000] <MikeSmith>
arrested?

[02:41:03.0000] <MikeSmith>
where?

[02:41:04.0000] <annevk>
in London, he turned himself in

[02:41:05.0000] <MikeSmith>
damn

[02:41:06.0000] <annevk>
according to twitter anyway

[02:42:00.0000] <MikeSmith>
yeah

[02:42:01.0000] <jgraham>
MikeSmith: For some kinds of things git et. al. really suck. I'm thinking huge repositories with many files some large and where partial checkouts are useful

[02:42:02.0000] <MikeSmith>
well, we still have cvs for that

[02:42:03.0000] <MikeSmith>
for the other stuff

[02:42:04.0000] <jgraham>
It is not clear to me that CVS sucks less

[02:42:05.0000] <jgraham>
I mean, there is some competition

[02:43:00.0000] <MikeSmith>
heh

[02:43:01.0000] <MikeSmith>
yeah, svn and cvs and going head-to-head there

[02:45:00.0000] <MikeSmith>
annevk: anyway, he's let the genie out of the bottle… it'll be hard to imagine things just going back to normal. They are not going to be able to prevent leaks from getting published going forward. I think others can see now that it's possible to get the information out

[02:46:00.0000] <MikeSmith>
jgraham: the bitbucket repo provides an RSS feed

[02:46:01.0000] <zcorpan>
partial checkout is nice

[02:46:02.0000] <MikeSmith>
https://bitbucket.org/validator/html-spec/rss

[02:46:03.0000] <MikeSmith>
zcorpan: partial checkout?

[02:47:00.0000] <zcorpan>
MikeSmith: checkout just one folder

[02:47:01.0000] <MikeSmith>
ah

[02:49:00.0000] <MikeSmith>
bitbucket can do twitter notifications, so I got them turned on now for the @html5 user

[02:50:00.0000] <MikeSmith>
e.g., http://twitter.com/#!/html5/status/11940556187897856

[02:50:01.0000] <MikeSmith>
if anybody wants, I can get notifications (re)set up for @whatwg from there too

[02:51:00.0000] <MikeSmith>
but first I need to step away for a bit

[03:14:00.0000] <zcorpan>
interesting that in the first version of WebSocket (then called TCPConnection), the handshake was client: "Hello\n" server: "Welcome\n"

[03:26:00.0000] <phrearch>
hm, i got a solution for my ws problem: http://hwios.blogspot.com/2010/12/websocket-routing.html

[03:27:00.0000] <phrearch>
applying urls on a websocket kinda makes sense

[03:31:00.0000] <phrearch>
either via ws or via http should just point to some resource. maybe have some simulation of get/post in there as well 

[03:34:00.0000] <zcorpan>
phrearch: in theory you could talk HTTP over a websocket

[03:35:00.0000] <phrearch>
zcorpan: im not sure if i understand :)

[03:36:00.0000] <zcorpan>
like ws.send('GET /foo/bar HTTP/1.1\r\n ...')

[03:36:01.0000] <phrearch>
im using it now just as a messaging medium(json) with html as payload for layout

[03:36:02.0000] <phrearch>
aha

[03:37:00.0000] <phrearch>
i guess that would take a custom server implementation?

[03:37:01.0000] <zcorpan>
i'm not sure if HTTP is more useful than JSON though :)

[03:37:02.0000] <phrearch>
im pretty happy with json atm, but i havent found a consistent routing mechanism yet 

[03:38:00.0000] <phrearch>
having a router that can decode the url to some function would be nice

[03:39:00.0000] <phrearch>
django had a websocket implementation, but that one seems to try to fit the websocket in a http request/response

[03:39:01.0000] <phrearch>
it doesnt seem to make sense to do a http handshake every time

[04:25:00.0000] <MrWax>
Will  the WebSQL API be continued in some kind of way? now W3C doesn't do it?

[04:25:01.0000] <gsnedders>
No

[04:26:00.0000] <MrWax>
So WebSQL will definitely something we won't see in our webpages in the future?

[04:27:00.0000] <gsnedders>
Inded

[04:27:01.0000] <MrWax>
Actually wondering, why not? I mean, it could be quite handy in the light of the more offline apps

[04:27:02.0000] <gsnedders>
Because there's a lack of interest from implementors, apart from those who've already implemented it

[04:27:03.0000] <gsnedders>
And that all of them like it anyway

[04:27:04.0000] <MrWax>
That's kinda bad

[04:27:05.0000] <gsnedders>
IndexedDB is the future

[04:28:00.0000] <MrWax>
ok let me look it up

[04:28:01.0000] <MrWax>
Actually, for a presentation of HTML5, in the light of a CMS i have completely renewed (non HTML5 techniques, just a year ago) I was trying to convince people in a presentation how HTML5 offline web technologies will come to the rescue in a CMS like this

[04:28:02.0000] <MrWax>
WebSQL was a part of the story but I have to remove it now

[04:31:00.0000] <phrearch>
hm, offline storage is going away?

[04:31:01.0000] <gsnedders>
localStorage will contain to exist, and IndexedDB will come into existance

[04:32:00.0000] <gsnedders>
*continue

[04:32:01.0000] <gsnedders>
ergh, I can't spell

[04:32:02.0000] <MrWax>
no no

[04:32:03.0000] <MrWax>
ok

[04:33:00.0000] <phrearch>
hm, as long they dont do that for websockets...

[04:33:01.0000] <gsnedders>
WebSockets has wide support, and is implemented by almost everyone. It's far from in the situation Web SQL ever was.

[04:33:02.0000] <MrWax>
gsnedders: so basically, what I could explain is something like: The CMS could have an option to work offline, as in, indexedDB will store the pages and their rights etc in tables, localStorage will store the page contents, App cache will store pictures Icons

[04:34:00.0000] <phrearch>
ok, glad to hear websockets arent scheduled for removal :)

[04:34:01.0000] <phrearch>
will read up on the websql thing

[04:34:02.0000] <zcorpan>
websockets is scheduled for disabling in firefox 4 at least

[04:34:03.0000] <zcorpan>
https://bugzilla.mozilla.org/show_bug.cgi?id=616733

[04:34:04.0000] <gsnedders>
Though that is temporary

[04:34:05.0000] <zcorpan>
yeah

[04:34:06.0000] <MrWax>
gsnedders: is that a correct approach simply said?

[04:34:07.0000] <phrearch>
ow dear

[04:35:00.0000] <gsnedders>
MrWax: localStorage is just for any key->value pair, really

[04:35:01.0000] <phrearch>
ah well, as long it can be enabled in about::config

[04:35:02.0000] <MrWax>
gsnedders: so bulk page text contents of a CMS page - how would they be stored for offline usage?

[04:36:00.0000] <gsnedders>
phrearch: The issue is that the handshake makes it possible to exploit a number of buggy deployed HTTP proxies

[04:36:01.0000] <gsnedders>
MrWax: Either as key-value pairs in localStorage, in a table in IndexedDB, or as standard content in the app cache

[04:36:02.0000] <phrearch>
gsnedders: any radical changes expected there?

[04:36:03.0000] <gsnedders>
phrearch: At a protocol level, yes.

[04:38:00.0000] <phrearch>
gsnedders: i guess it wont hurt, as long its keeping a persistant connection like now

[04:39:00.0000] <MrWax>
gsnedders: I also have made a list of HTML5 (and HTML5 related) APIS .. just main, primary not every exact, but the important ones to present.. is this a list which farely represents the more important APIS?

[04:39:01.0000] <MrWax>
canvas, video/audio, drag & drop, app cache, geolocation, workers, localstorage, microdata, indexeddb

[04:40:00.0000] <MrWax>
I know there is a lot more, but this is just a small presentation

[04:40:01.0000] <phrearch>
well, websockets...

[04:40:02.0000] <phrearch>
:)

[04:40:03.0000] <gsnedders>
Well, most of them aren't actually in HTML5

[04:40:04.0000] <MrWax>
(and some that are not maintained by WHATWG HTML)

[04:40:05.0000] <MrWax>
yes

[04:40:06.0000] <MrWax>
thats why I said related

[04:41:00.0000] <gsnedders>
/me isn't great judge of this off the top of his head

[04:41:01.0000] <gsnedders>
Because I'm probably forgetting half of what is in the spec

[04:41:02.0000] <MrWax>
ok :)

[04:41:03.0000] <MrWax>
anyone else maybe?

[04:44:00.0000] <zcorpan>
canvas: yes (but 2d context is not in w3c version), video/audio: yes, dnd: yes, app cache: yes, geolocation: no, workers: no, localstorage: no, microdata: only in whatwg version, indexeddb: no

[04:45:00.0000] <MrWax>
zcorpan: ok, for geolocation i agree, but why no localstorage and workers?

[04:45:01.0000] <zcorpan>
they're not in the html5 spec

[04:45:02.0000] <MrWax>
yes, but they are considered related apis right? that most browsers will soon implement

[04:45:03.0000] <zcorpan>
all web apis are related to html

[04:46:00.0000] <MrWax>
actually who has developed workers, do you know?

[04:46:01.0000] <zcorpan>
Hixie

[04:46:02.0000] <zcorpan>
well he wrote the spec

[04:46:03.0000] <zcorpan>
proof of concept impl was in Gears

[04:47:00.0000] <jgraham>
MrWax: http://quotes.burntelectrons.org/4394 should explain everything

[04:47:01.0000] <MrWax>
but, from how I see it, i could just simply change the subject of the second part of my presentation where I speak about APIs, first speak about those in the html5 spec, and then talk about the "related future web" apis

[04:47:02.0000] <MrWax>
jgraham: thx

[04:51:00.0000] <Philip`>
We're still in need of a name, as far as I'm aware

[04:52:00.0000] <zcorpan>
the name is "HTML5"

[04:53:00.0000] <MrWax>
Who's Hixie related to?

[04:53:01.0000] <MrWax>
Mozilla?

[04:53:02.0000] <zcorpan>
he works for google

[04:53:03.0000] <MrWax>
oh sorry I see his name now sorry sorry

[05:04:00.0000] <Philip`>
zcorpan: If that's the name, tell gsnedders to stop telling people that things aren't actually in HTML5 :-)

[05:04:01.0000] <annevk>
IE does not even render my site that terrible

[05:04:02.0000] <annevk>
IE8*

[05:05:00.0000] <jgraham>
I think HTML5 is the marketing name meaning one thing and the technical name meaning another thing. It sounds confusing but it is no more confusing than every other case where a word has multiple meanings

[05:05:01.0000] <jgraham>
You just need to disabmiguate based on context


2010-12-08
[08:27:00.0000] <krijnh>
Have no fear, the (smoke producing) Pentium II IRC logging service is here! \o/

[08:28:00.0000] <gsnedders>
http://google-web-toolkit.googlecode.com/svn/trunk/user/src/com/google/gwt/core/client/impl/StackTraceCreator.java — oh wow.

[08:28:01.0000] <gsnedders>
That's just scary.

[08:29:00.0000] <annevk>
krijnh is talking about http://plixi.com/p/61729229 I believe o_O

[08:29:01.0000] <krijnh>
Yeah

[08:29:02.0000] <gsnedders>
Tries to read Error.message in Opera to get the stack, which was (well, still is) where the stack was put in Futhark with a non-default preference option.

[08:29:03.0000] <gsnedders>
Won't work at all in Carakan…

[08:29:04.0000] <MikeSmith>
damn, krijnh is back

[08:30:00.0000] <MikeSmith>
now I have to be more careful about what I say

[08:30:01.0000] <jgraham>
david_carlisle: You are the resident expert on all things X, right :)

[08:30:02.0000] <david_carlisle>
but you hate us

[08:30:03.0000] <annevk>
so much hate

[08:31:00.0000] <krijnh>
I thought we only hate blind people?

[08:31:01.0000] <annevk>
whenever something bad happens, I always think, oh well, there's also XML

[08:31:02.0000] <jgraham>
If I have some XPath with a default namespace (XPath 2 has this right?) can I mix explicit prefixes and the default in the same expression?

[08:31:03.0000] <david_carlisle>
yes

[08:32:00.0000] <annevk>
krijnh, hmm yeah, can't spread this hate thing thin

[08:32:01.0000] <david_carlisle>
the default-xpath-namespace just changes the interpretation of unprefixed names, has no effect on prefixed ones

[08:32:02.0000] <annevk>
dilemma

[08:32:03.0000] <jgraham>
So if the XHTML ns is the default then //html:div/span should find all span children of div elements both in the XHTMLNS

[08:32:04.0000] <jgraham>
david_carlisle: Perfect, thanks

[08:33:00.0000] <david_carlisle>
xpath today

[08:33:01.0000] <david_carlisle>
xslt tomorrow

[08:33:02.0000] <karlcow>
MikeSmith: as usual, you are █████████████████████ it's ok.

[08:33:03.0000] <david_carlisle>
whole world using xml by the weekend

[08:33:04.0000] <jgraham>
david_carlisle: Actually I quite like XPath

[08:33:05.0000] <jgraham>
It hasn't made me want to use XSLT yet theough :p

[08:33:06.0000] <karlcow>
damn, krijnh sanitizer

[08:33:07.0000] <jgraham>
*though

[08:35:00.0000] <david_carlisle>
you'd probably prefer xquery anyway (which is basically a cut down xslt, without the xml syntax)

[08:41:00.0000] <annevk>
Safari accepts a different set of encodings compared to Chrome

[08:42:00.0000] <annevk>
Chrome is way more restricted

[08:55:00.0000] <annevk>
yay

[08:56:00.0000] <annevk>
something else I figured out

[08:56:01.0000] <annevk>
IE treats aliases of iso-8859-1 as windows-1252, but not iso-8859-1 itself, unless it is loaded directly

[08:57:00.0000] <annevk>
also, Firefox and IE are leading encoding proliferation

[08:57:01.0000] <annevk>
Firefox foremost I guess

[08:58:00.0000] <annevk>
I wonder if they are interested in fixing that

[08:59:00.0000] <Philip`>
/me notes that reducing encoding support can be a security risk

[08:59:01.0000] <jgraham>
/me wishes for a way to tell emacs to check in the current buffer to a vcs after every save (but not to do it for all buffers)

[09:00:00.0000] <jgraham>
hober: In case you were wondering, that was your queue to say "I've got some code that does just that" :)

[09:01:00.0000] <jgraham>
er "cue"

[09:02:00.0000] <jgraham>
silly language

[09:03:00.0000] <annevk>
Philip`, example?

[09:03:01.0000] <karlcow>
I wonder if someone wrote a nested tables counter for Web pages…

[09:09:00.0000] <Philip`>
annevk: Any not-sufficiently-ASCII-like encoding (EBCDIC, ISO-2022-*, etc) - if a server emits it but a browser doesn't support it and uses a default decoder instead, you can get XSS

[09:12:00.0000] <annevk>
ah yes

[09:12:01.0000] <annevk>
I am only testing 7- and 8-bit so far

[09:12:02.0000] <annevk>
nobody does 7-bit

[09:30:00.0000] <oojacoboo>
latest browser stats on my site are surprisingly good

[09:31:00.0000] <oojacoboo>
IE only 24% with IE6 and IE7 only getting 5%

[09:31:01.0000] <oojacoboo>
75% webkit/gecko

[09:31:02.0000] <oojacoboo>
for an industry and still thinks they live in the 50s

[09:38:00.0000] <karlcow>
http://www.rfc-editor.org/rfc/rfc6067.txt

[09:43:00.0000] <hober>
hmm. http://wiki.whatwg.org/index.php?title=CanvasContexts&diff=5608&oldid=prev

[09:45:00.0000] <hober>
jgraham: get in the habit of hitting C-x v v after you C-x C-s :)

[09:46:00.0000] <jgraham>
hober: Not really good enough since I don't want to be promted for a commit message

[09:46:01.0000] <jgraham>
And since the whole deal is that I am likely to forget

[09:47:00.0000] <jgraham>
(the use case is reducing buggy sites where you remove code and see if the bug still happens. It would be great to have every intermediate step atomatically saved so if you over-reduce you can back up a few steps and try again)

[09:48:00.0000] <jgraham>
*automatically

[10:01:00.0000] <hober>
you could do something like (add-hook 'after-save-hook (lambda () (when (something-p) (vc-checkin (buffer-file-name) nil "Commit message"))))

[10:01:01.0000] <hober>
untested of course

[10:01:02.0000] <hober>
and the impl of `something-p' is left to the reader :)

[10:04:00.0000] <hober>
ahh, an explanation of the weird wiki edit I noted earlier: http://lists.w3.org/Archives/Public/public-html/2010Dec/0075.html

[11:19:00.0000] <zcorpan>
"“Accept” and “Accept-Language” are fairly important" - http://calendar.perfplanet.com/2010/bloated-request-response-headers/

[11:22:00.0000] <zcorpan>
hmm, maybe we should kill the Referer header for same-origin requests?

[11:23:00.0000] <zcorpan>
or will that Break The Web?

[11:25:00.0000] <zcorpan>
sadly we won't be able to remove the User-Agent header

[11:25:01.0000] <zcorpan>
(at least we haven't added it for websockets!)

[11:25:02.0000] <AryehGregor>
Just use SPDY, then most of this stuff is only sent once, and is compressed to boot.

[11:26:00.0000] <zcorpan>
i haven't read up on SPDY yet

[11:27:00.0000] <Peter->
zcorpan: many anti-hotlink scripts rely on that

[11:27:01.0000] <Peter->
although they usually accept no referer too

[11:27:02.0000] <zcorpan>
Peter-: if they accept no referer then it should be fine

[11:40:00.0000] <Hixie>
so... i'm confused

[11:40:01.0000] <Hixie>
is elliot's draft normative or not?

[11:41:00.0000] <hober>
he says it's normative, but he's removed all normative language from statements that *don't* just say what's already said in another spec

[11:48:00.0000] <Philip`>
Launchpad seems to fail if you disable Referer

[11:48:01.0000] <Philip`>
so you'll break that part of the web, at least

[11:49:00.0000] <zcorpan>
Philip`: ok

[11:49:01.0000] <Hixie>
hober: that sounds like a huge recipe for confusion

[11:53:00.0000] <hober>
Hixie: indeed

[11:53:01.0000] <hober>
it would have made more sense for him to do the opposite: drop RFC2119 terminology when restating reqs from html&xml specs

[11:53:02.0000] <hober>
and only use RFC2119 terms for *additional* restrictions

[11:56:00.0000] <zcorpan>
what would make sense is if it didn't have additional restrictions, just non-normatively describe the intersection of the restrictions in the text/html and xhtml5 restrictions

[11:57:00.0000] <hober>
I'm assuming that the spec is intended to define a useful/interesting subset of that intersection

[11:57:01.0000] <zcorpan>
still, i don't see the usefullness of it, so i don't care

[11:57:02.0000] <hober>
that's where the additional restrictions would come in

[11:57:03.0000] <hober>
but yeah, if it's just intended to describe the actual intersection, no additional normative reqs are necessary

[11:58:00.0000] <zcorpan>
i don't know what the intention is. maybe the intention is just to waste people's time

[12:21:00.0000] <zcorpan>
twitter says @johnfoliot is "similar to me"

[12:27:00.0000] <karlcow>
zcorpan: the moustache maybe

[12:28:00.0000] <zcorpan>
i don't have one!

[14:06:00.0000] <annevk>
hmm, updating html5-diff

[14:06:01.0000] <annevk>
I guess I can do that

[14:06:02.0000] <annevk>
even though technically I'm on vacation

[14:19:00.0000] <Hixie>
so http://www.whatwg.org/specs/web-apps/current-work/complete.html#playing-the-media-resource says that play() loads the resource "if necessary"

[14:19:01.0000] <Hixie>
which some people have interpreted as meaning "if the src='' attribute has changed"

[14:20:00.0000] <Hixie>
but i really just meant if the element is in the empty state

[14:20:01.0000] <Hixie>
anyone have a better way of phrasing this that is both accurate and helpful?

[14:34:00.0000] <zcorpan>
Hixie: "loading the media resource if it hasn't already started loading, and beginning playback."

[14:35:00.0000] <Hixie>
what's "the media resource"?

[14:35:01.0000] <zcorpan>
see the spec! :)

[14:35:02.0000] <Hixie>
well there's two here, right

[14:35:03.0000] <Hixie>
silvia interpreted as meaning the one that was specified in src=""

[14:35:04.0000] <Hixie>
even if the one previously specified had started playing already

[14:37:00.0000] <zcorpan>
i don't follow. if you change src="", it gets loaded regardless of play()

[14:37:01.0000] <Hixie>
<source src>, sorry

[14:37:02.0000] <bfrog>
is websocket going to be fixed and out in another year or so do you guys think?

[14:37:03.0000] <bfrog>
or is it going to be a never ending draft

[14:37:04.0000] <annevk>
I wish I'd know

[14:37:05.0000] <Hixie>
bfrog: dunno, ianfette in #chromium might know

[14:37:06.0000] <Hixie>
or ask the hybi chairs what their timetable is

[14:37:07.0000] <zcorpan>
Hixie: prepend "current"

[14:38:00.0000] <zcorpan>
hmm maybe that'll confuse things

[14:38:01.0000] <annevk>
WebSockets went out of WHATWG and does not appear to be going anywhere :/

[14:38:02.0000] <Hixie>
zcorpan: yeah i think that someone who misinterpreted "as necessary" would misinterpret "current media resource" in the same way

[14:39:00.0000] <bfrog>
whats the alternative to websocket anyways, there doesn't seem to be anything particularly good that can replace it easily

[14:39:01.0000] <zcorpan>
Hixie: maybe the text about loading isn't helpful

[14:40:00.0000] <annevk>
bfrog, there's none

[14:40:01.0000] <annevk>
bfrog, apart from prolly using Flash or something crazy like that

[14:40:02.0000] <bfrog>
right

[14:41:00.0000] <Hixie>
zcorpan: yeah, maybe i should just remove that

[15:05:00.0000] <hober>
This seems like as good a place as any to mention that I'm looking for work. If you're looking to hire a full-stack web developer with some HTML5 familiarity, toss me a line. :)

[15:15:00.0000] <zcorpan>
hober: don't fancy browser qa?

[15:17:00.0000] <hober>
zcorpan: browser qa sounds like the sort of thing that would drive somebody to write their own HTML spec

[15:17:01.0000] <zcorpan>
eventually, yeah, maybe

[15:22:00.0000] <Hixie>
it has happened, can't be denied

[15:23:00.0000] <Dashiva>
But who will test the testers

[15:24:00.0000] <krijnh>
-_-


2010-12-09
[17:10:00.0000] <Hixie>
content-types for binary formats baffle me

[17:10:01.0000] <Hixie>
or rather, the way people defend them baffles me

[17:10:02.0000] <Hixie>
(re: the e-mail i'm about to send out replying to a long thread about video mime types last august)

[17:11:00.0000] <boogyman>
it's taken you this long to formulate a response, or you wished to see the opinion(s) of others

[17:15:00.0000] <Hixie>
neither

[17:15:01.0000] <micheil>
Hixie: hey, did you ever say anything about kaazing and how they supposedly invented websockets as they stand at present?

[17:15:02.0000] <Hixie>
no idea

[17:16:00.0000] <Hixie>
not sure how they stand at present, in fact :-)

[17:16:01.0000] <micheil>
"Kaazing basically invented the protocol as it stands now." - Ian Hickson, Google & HTML5 Author

[17:16:02.0000] <micheil>
http://www.kaazing.com/about/index.html

[17:17:00.0000] <Hixie>
micheil: http://krijnhoetmer.nl/irc-logs/whatwg/20100131#l-223

[17:17:01.0000] <micheil>
looks like they like their patents too; as they seem to be pushing for one relating to using backwards compat. protocols with websockets

[17:17:02.0000] <Hixie>
(later, http://krijnhoetmer.nl/irc-logs/whatwg/20100131#l-241 )

[17:18:00.0000] <micheil>
Hixie: right, so, it's a pretty big mis-guided quote

[17:18:01.0000] <Hixie>
how so?

[17:18:02.0000] <Hixie>
note that the hybi group has basically totally revamped the protocol, so it's kind of a moot point now

[17:18:03.0000] <Hixie>
as the protocol is nothing like it was then

[17:18:04.0000] <micheil>
well, the way it reads on their site it's like they are claiming to have invented the protocol as it is at present

[17:19:00.0000] <micheil>
but there's really a heap more people who have contributed to it

[17:19:01.0000] <Hixie>
oh, yeah, their site might be misleading *shrug*

[17:19:02.0000] <Hixie>
really at this point i don't know what the spec looks like

[17:19:03.0000] <Hixie>
but there aren't that many people who have contributed

[17:19:04.0000] <Hixie>
er, who had contributed

[17:19:05.0000] <Hixie>
at the time

[17:20:00.0000] <Hixie>
isn't the group basically going to do the design abarth proposed now?

[17:20:01.0000] <micheil>
Hixie: i think so, there are still some against it

[17:20:02.0000] <Hixie>
as i understand it there are three realistic handshake designs: tls-only, the one i designed based on mcarter's design, and abarth's design

[17:20:03.0000] <Hixie>
but i'm not really following the work closely, so don't take my word for it

[17:23:00.0000] <Hixie>
anyone know if annevk is still worknig on the fullscreen cssom thing?

[17:24:00.0000] <othermaciej>
Hixie: at this point, I don't think the one you designed is secure

[17:24:01.0000] <othermaciej>
and therefore not realistic

[17:24:02.0000] <Hixie>
the one with the eight bytes is still secure according to abarth (i spoke to him just earlier today about it)

[17:24:03.0000] <Hixie>
what his group tested was the upgrade without the 8 bytes

[17:25:00.0000] <gsnedders>
What eight bytes?

[17:25:01.0000] <Hixie>
(which we knew wasn't secure; the 8 bytes were mitigation for that)

[17:25:02.0000] <Hixie>
gsnedders: key3

[17:25:03.0000] <Hixie>
and the server's response

[17:26:00.0000] <othermaciej>
I wouldn't interpret that as "still secure"

[17:26:01.0000] <othermaciej>
they didn't test one way or the other whether the 8 bytes help, or whether there is a way to work around whatever they do

[17:27:00.0000] <othermaciej>
however, I still think it is less robust against a variety of threat models than the adam+eric proposal

[17:27:01.0000] <othermaciej>
at this point I wouldn't really trust it

[17:28:00.0000] <Hixie>
well i am not advocating it one way or the other

[17:28:01.0000] <Hixie>
so that's fine :-)

[17:28:02.0000] <Hixie>
i'm not aware of any attack though, even theoretical

[17:33:00.0000] <othermaciej>
its security against this intercepting proxy attack depends completely on whether the 8 random bytes break the ability to get intercepting proxies to see subsequent data on the connection as new requests

[17:34:00.0000] <othermaciej>
(something that Adam et al didn't test but probably should have)

[17:39:00.0000] <Hixie>
othermaciej: yes

[17:40:00.0000] <Hixie>
othermaciej: note that for there to be any subsequent data, the 8 bytes have to make it to the server and back to the client; note also that there's no way to distinguish the 8 bytes from the subsequent bytes, so if the 8 bytes get to the server, it seems highly unlikely that the remainder don't either. But indeed, we don't know without testing.

[17:40:01.0000] <Hixie>
It's academic, anyway, since the group isn't going to use this handshake.

[17:40:02.0000] <othermaciej>
well, it's still the handshake in current drafts

[17:41:00.0000] <othermaciej>
what's surprisingly hard is convince the group of the merits of the CONNECT handshake

[18:57:00.0000] <Hixie>
maybe December 156h refers to December 342?

[18:57:01.0000] <Hixie>
not sure what that means either tohugh

[18:58:00.0000] <jcranmer>
obviously, it's base 36

[18:59:00.0000] <jcranmer>
so it's December 53,369₁₀

[19:01:00.0000] <heycam>
156 hours into december. i.e. 6:30am on decemeber 1. that's at least a valid date.

[19:01:01.0000] <heycam>
well, december 1 is a valid date. not sure about decemember.

[19:02:00.0000] <jcranmer>
since a day is 24 hours, last I checked

[19:02:01.0000] <jcranmer>
how can 156 hours into December be on December 1?

[19:07:00.0000] <oojacoboo>
jcranmer: it's called crack cocaine

[19:09:00.0000] <jcranmer>
<insert politically incorrect joke here>

[19:25:00.0000] <heycam>
wow, i have no idea

[19:26:00.0000] <heycam>
more like 12noon on the 7th

[19:26:01.0000] <oojacoboo>
technically, if you had a time machine...

[19:26:02.0000] <heycam>
must be all these svg tests o_O

[19:27:00.0000] <jcranmer>
or maybe we finally invented the 240-hour day

[20:09:00.0000] <jamesr_>
sounds like websockets is in need of an UPGRADE

[20:09:01.0000] <jamesr_>
*rimshot*

[20:33:00.0000] <wirepair>
hehe

[20:34:00.0000] <wirepair>
jamesr_ i'm assuming you're referring to the issues adamb et. all found? :)

[20:34:01.0000] <jamesr_>
yeah

[20:34:02.0000] <wirepair>
yeah i just read the paper, interesting attack

[22:02:00.0000] <TabAtkins>
MikeSmith: Yo, let's work out where dinner is being had tonight.  I know basically nothing about tokyo, so I rely on you suggesting a good place.

[22:02:01.0000] <MikeSmith>
I can come meet out the Mori Tower

[22:03:00.0000] <MikeSmith>
either meet you in the lobby downstairs

[22:03:01.0000] <MikeSmith>
or I can come up to the 26th floor reception

[22:03:02.0000] <TabAtkins>
lobby downstairs is fine.

[22:03:03.0000] <MikeSmith>
hai

[22:03:04.0000] <MikeSmith>
any time is OK for me

[22:04:00.0000] <MikeSmith>
I tend to eat kind of late-ish usually

[22:04:01.0000] <TabAtkins>
6:30?

[22:04:02.0000] <paul_irish>
go back to that Indian place. 

[22:04:03.0000] <MikeSmith>
heh

[22:04:04.0000] <MikeSmith>
that place was not too bad

[22:04:05.0000] <paul_irish>
that cheese appetizer was tremendous.

[22:04:06.0000] <MikeSmith>
yeah, true

[22:04:07.0000] <MikeSmith>
TabAtkins: you vegetarian?

[22:05:00.0000] <TabAtkins>
I've got someone I haven't met before coming to dinner, too, so if we can decide beforehand so I can tell him where to go, that would be nice.  Alternately, I just tell him to get to Mori Tower.

[22:05:01.0000] <TabAtkins>
MikeSmith: Jeezus no.

[22:05:02.0000] <MikeSmith>
heh

[22:05:03.0000] <MikeSmith>
TabAtkins: tell him to come to Mori Tower

[22:05:04.0000] <MikeSmith>
then we can go wherever from there

[22:06:00.0000] <MikeSmith>
there is a place only two stops away which is great for self-barbecue meat

[22:06:01.0000] <MikeSmith>
yaki-niku

[22:06:02.0000] <MikeSmith>
that would be my recommendation

[22:06:03.0000] <MikeSmith>
it's in Nakameguro

[22:06:04.0000] <TabAtkins>
Heh, had yaki-niku last night.

[22:06:05.0000] <MikeSmith>
ah

[22:07:00.0000] <MikeSmith>
well, this place is better than wherever you went :)

[22:07:01.0000] <TabAtkins>
What sort of price?

[22:08:00.0000] <MikeSmith>
around 2200 yen

[22:08:01.0000] <MikeSmith>
iirc

[22:08:02.0000] <MikeSmith>
for a course thing

[22:08:03.0000] <MikeSmith>
deer meat

[22:08:04.0000] <MikeSmith>
boar meat

[22:08:05.0000] <MikeSmith>
pheasant

[22:08:06.0000] <MikeSmith>
other stuff

[22:09:00.0000] <MikeSmith>
and the manager knows me so she always gives me extra stuff

[22:09:01.0000] <MikeSmith>
plus they have Ebisu draft

[22:09:02.0000] <MikeSmith>
plus it's right next to the Meguro river

[22:10:00.0000] <MikeSmith>
and there's another place nearby that serves the best craft beer in Tokyo by a wide margin

[22:10:01.0000] <MikeSmith>
Baird's Taphouse

[22:10:02.0000] <TabAtkins>
Ooh, sounds great.

[22:11:00.0000] <TabAtkins>
Alex Russell is saying he doesn't want yaki-niku tonight, so if we hit that he won't join us.

[22:11:01.0000] <MikeSmith>
well, we can find another place

[22:12:00.0000] <TabAtkins>
Know any good sushi places?

[22:12:01.0000] <MikeSmith>
sure

[22:12:02.0000] <MikeSmith>
will cost us a lot more though

[22:12:03.0000] <TabAtkins>
Eh, dinners are expensed.

[22:12:04.0000] <TabAtkins>
For us, at least.

[22:12:05.0000] <MikeSmith>
OK

[22:13:00.0000] <TabAtkins>
So whatever you're comfortable with.

[22:13:01.0000] <MikeSmith>
OK

[22:24:00.0000] <hober>
MikeSmith: had much Hitachino Nest beers?

[22:24:01.0000] <MikeSmith>
hober: have not heard of that one

[22:24:02.0000] <hober>
some of the best .jp microbrew I've managed to find in .us

[22:24:03.0000] <hober>
keep an eye out

[22:25:00.0000] <MikeSmith>
cool

[22:25:01.0000] <MikeSmith>
I'll have to figure out where I can find some

[22:25:02.0000] <MikeSmith>
http://bairdbeer.com/en/taproom/nakameguro-taproom

[22:26:00.0000] <hober>
oooh

[22:26:01.0000] <annevk>
Hixie, working on fullscreen got delayed a bit

[22:33:00.0000] <annevk>
Hixie, at least for another month or so most likely as I have some vacation time I need to use

[22:33:01.0000] <annevk>
heycam, so if you got time meanwhile... ^^

[22:35:00.0000] <annevk>
oh lol, there's an issue on the acknowledgment section of the spec

[22:39:00.0000] <Hixie>
annevk: k, sounds good

[23:07:00.0000] <annevk>
http://www.reddit.com/r/WTF/comments/eia6l/us_takes_break_from_attacking_wikileaks_to/ hahaha

[23:08:00.0000] <annevk>
"There certainly is an irony here."

[23:27:00.0000] <annevk>
hmm, did Bjoern Hoehrmann just state he's going to fix CSS' grammar problem?

[23:27:01.0000] <annevk>
where "just" is about six hours ago

[23:42:00.0000] <heycam>
annevk, I'll see if I get time...

[23:45:00.0000] <heycam>
TabAtkins, when my Linux machine used to shut down due to overheating, there was usually about 2 seconds between it walling "system is going down now" and my processes starting to get killed. :)

[23:45:01.0000] <hsivonen>
http://hacks.mozilla.org/2010/12/websockets-disabled-in-firefox-4/comment-page-1/#comment-295447

[23:47:00.0000] <othermaciej>
Flash and Java do in fact have the cache poisoning vulnerability (at least as far as I can tell from the paper)

[23:48:00.0000] <othermaciej>
I believe the vendors are not interested in fixing

[23:48:01.0000] <othermaciej>
annevk: what grammar problem does CSS have?

[23:49:00.0000] <annevk>
it being split between prose and productions and not being very clear over all

[23:49:01.0000] <TabAtkins>
heycam: Heh, kk.  Still an invalid bug, of course.

[23:50:00.0000] <TabAtkins>
heycam: Still seems unlikely that the dude was able to type as much as he did and submit it if they have a similar 2-second warning.

[23:50:01.0000] <heycam>
TabAtkins, yeah

[23:50:02.0000] <heycam>
TabAtkins, it's like when you're in primary school doing creative writing, and you write a letter / diary entry where at the end you die and the pen ink trails off the page

[23:52:00.0000] <TabAtkins>
Hopefully when you do that you don't actually write out "Oh god I'm dying AAAAAaaaaaaaa........."

[23:52:01.0000] <othermaciej>
ah, now I see

[23:53:00.0000] <heycam>
TabAtkins, something like that :p

[23:56:00.0000] <TabAtkins>
annevk: That's what he implied, yeah.

[00:45:00.0000] <MikeSmith>
TabAtkins: on my way over to the tower

[00:45:01.0000] <MikeSmith>
see you in the lobby at 6;30

[00:46:00.0000] <MikeSmith>
if we fail to find each other somehow, my mobile number is 080-5009-8161

[00:50:00.0000] <TabAtkins>
kk

[01:16:00.0000] <phrearch>
hi

[01:16:01.0000] <annevk>
hoi

[01:17:00.0000] <phrearch>
hoi :)

[01:17:01.0000] <boogyman>
what up doc

[01:17:02.0000] <phrearch>
i just read about the websocket insecurity problem. any idea how long it will take to fix it?

[01:17:03.0000] <annevk>
well, the plan always has been to change the handshake

[01:18:00.0000] <annevk>
it's just that the IETF is slow making up its mind

[01:18:01.0000] <phrearch>
aha, so the ietf has to approve it first?

[01:19:00.0000] <annevk>
I think the idea at this point is to wait for rough consensus on the IETF hybi list, yes

[01:19:01.0000] <annevk>
not sure about approving

[01:20:00.0000] <phrearch>
how serious is this bug really? all i understood of it was its possible to serve an attacker's version of a js file, instead of the one expected

[01:20:01.0000] <annevk>
you don't think that's serious?

[01:20:02.0000] <phrearch>
trying to think of worse-case-scenarios :)

[01:20:03.0000] <phrearch>
yea, thats serious enough

[01:23:00.0000] <phrearch>
i guess it makes it possible to send form data to an arbitrary site, without the user noticing it

[01:24:00.0000] <annevk>
e.g. stealing all your online email

[01:29:00.0000] <jgraham>
Yeah, the deal is that it's a hugely serious hole if you happen to be behind an affected proxy

[01:29:01.0000] <jgraham>
The bad news is that there is nothing you can do to protext yourself apart from not being behind such a proxy

[01:29:02.0000] <jgraham>
*protect

[01:31:00.0000] <jgraham>
Disabling websockets is good because it reduces the number of attack vectors, but it doesn't close the hole entirely, since flash and java are both vectors and you can be affected if another user behind the same proxy is used as the vector

[01:31:01.0000] <jgraham>
s/as/to provide/

[01:39:00.0000] <phrearch>
what kind of proxys are vulnerable?

[01:42:00.0000] <phrearch>
i read that its about proxys that dont interpret the update handshake correctly, but doesnt that append on the implementation?

[01:42:01.0000] <phrearch>
just trying to understand it. im a bit of a noob to networking tech

[01:44:00.0000] <jgraham>
Yeah, aiui it is a bug in the proxies that makes them vunerable

[01:45:00.0000] <phrearch>
so suppose i have a server at some provider, then all the proxies in between can introduce this security risk?

[01:46:00.0000] <phrearch>
is it possible to know how many proxies are in between, and what kind?

[01:46:01.0000] <othermaciej>
regular proxies that are actually configured in your browser don't have this issue

[01:47:00.0000] <othermaciej>
only certain intercepting/transparent proxies, which catch http traffic without clients knowing about it

[01:47:01.0000] <phrearch>
aha

[01:47:02.0000] <othermaciej>
typically they exist only in "enterprise" setups with a firewall

[01:49:00.0000] <phrearch>
ah well, by the time this websocket app is finished, it'll be fixed already a long time :)

[01:50:00.0000] <phrearch>
i read that ff4 still can have ws enabled by switching it on manually

[01:50:01.0000] <phrearch>
im trying to come up with a sane routing system for my websocket calls. 

[01:50:02.0000] <phrearch>
like applying the same kind of urls as for regular http calls

[01:51:00.0000] <jgraham>
Yes, it will also be pref-enabled (default:off) in Opera

[01:51:01.0000] <phrearch>
well, glad it can be re-enabled for devving

[01:58:00.0000] <annevk>
do browsers have javascript array limits of some kind?

[01:58:01.0000] <annevk>
I noticed there are some problems with the encoding data I'm getting back

[01:59:00.0000] <annevk>
it seems the array of objects is losing members along the way or something like that

[01:59:01.0000] <jgraham>
What kind of limits did you have in mind?

[02:00:00.0000] <jgraham>
You can only have 2**32 - 1 items in the array

[02:01:00.0000] <jgraham>
But I guess that is not the limit you are hitting

[02:05:00.0000] <annevk>
not at all :/

[02:05:01.0000] <annevk>
I guess there is a bug in the code somewhere

[02:14:00.0000] <annevk>
oops lol, found it

[02:14:01.0000] <annevk>
data is correct, made an error with printing

[02:45:00.0000] <Workshiva>
I'm trying to think of an example of a required attribute, but I can't think of any

[02:45:01.0000] <annevk>
<meta> requires at least one right?

[02:45:02.0000] <Workshiva>
Yeah, but not a specific one in all cases

[02:45:03.0000] <annevk>
maybe <map> requires ID?

[02:46:00.0000] <moo_>
not related, but does <script> allow class="" ?

[02:46:01.0000] <annevk>
would make sense to me

[02:46:02.0000] <annevk>
moo_, it does

[02:46:03.0000] <Workshiva>
Everything allows class, doesn't it?

[02:46:04.0000] <moo_>
annevk: thx

[02:46:05.0000] <annevk>
Workshiva, right

[02:46:06.0000] <Workshiva>
annevk: You were right about map, thanks

[03:04:00.0000] <hsivonen>
kudos to david_carlisle for being the first to mention CORS on xml-dev

[03:09:00.0000] <hsivonen>
annevk: is there some kind of Cross-Site Requests for Dummies publication that explain the threat model, related issues and solutions related to cross-origin loads?

[03:09:01.0000] <annevk>
no, but there should be

[03:10:00.0000] <hsivonen>
If there was one, I'd drop the link on xml-dev, but I don't have the time to write one right now

[03:10:01.0000] <annevk>
didn't realize until yesterday that list was still active

[03:16:00.0000] <david_carlisle>
hsivonen: well only 'cause i was hanging around here and thought you lot would would be too scared to stick your head above the xml-dev parapet

[03:17:00.0000] <david_carlisle>
I think it was annevk who mentioned it here?

[03:17:01.0000] <hsivonen>
david_carlisle: I'm not scared. I'm just usually too busy to delurk or even read what's going on there.

[03:18:00.0000] <david_carlisle>
:-)

[03:21:00.0000] <david_carlisle>
By the way is the cors aware xmlhttpwhatever implemented in the current round of browsers, ie could someone put up a demo of xml being loaded cross site and have it work?

[03:24:00.0000] <Philip`>
http://www.w3.org/Security/wiki/Comparison_of_CORS_and_UMP#Implementation_Data may be relevant

[03:25:00.0000] <david_carlisle>
thanks

[04:12:00.0000] <hsivonen>
was this pasted here already: http://markmail.org/message/taujq5vzj7ttlrh2 ?

[04:14:00.0000] <jgraham>
hsivonen: Don't feed the troll?

[04:16:00.0000] <jgraham>
Although maybe if he tried using a web browser rather than just bitching about how they are holding back all that is good and holy and XML, he would be able to get a correct definition for "script kiddie"

[04:16:01.0000] <beowulf>
that's a nice thing to say, who is this chap?

[04:23:00.0000] <annevk>
Kurt Cagle -- XForms fanboy

[04:23:01.0000] <annevk>
or something like that

[04:27:00.0000] <annevk>
hober, http://www.mysociety.org/2010/12/08/job-advert-developers/ via berjon on twitter

[05:01:00.0000] <karlcow>
http://www.guardian.co.uk/info/developer-blog/2010/nov/25/six-development-lessons

[05:23:00.0000] <annevk>
"And would solution A or B require the least changes?"

[05:23:01.0000] <annevk>
or... there's no problem, no changes required!

[05:55:00.0000] <annevk>
omg JSON requires double quotes?!

[05:55:01.0000] <annevk>
lolz

[05:55:02.0000] <zcorpan>
what?

[05:55:03.0000] <zcorpan>
oh

[05:56:00.0000] <zcorpan>
yes

[05:57:00.0000] <annevk>
trailing space was also too much

[06:03:00.0000] <annevk>
gotta love JSON

[06:05:00.0000] <Philip`>
Getting interoperability on the current format is hard enough, so it's good they didn't add additional redundant syntax like different quotes

[08:31:00.0000] <karlcow>
http://www.xtranormal.com/watch/7991991/

[08:31:01.0000] <karlcow>
We are the first to implement the WebSockets

[08:39:00.0000] <hober>
annevk: that sounds cool, but requires UK residency

[09:02:00.0000] <jgraham>
hober: Nothing wrong with being a UK resident.

[09:02:01.0000] <jgraham>
Well apart from the government of course

[09:05:00.0000] <Philip`>
And the weather

[09:05:01.0000] <Philip`>
And the people who continually talk about the weather

[09:06:00.0000] <david_carlisle>
http://xkcd.com/831/

[09:38:00.0000] <annevk>
encodings are terrible

[09:38:01.0000] <annevk>
terrible

[09:38:02.0000] <annevk>
terrible oh so terrible

[09:38:03.0000] <annevk>
and this only covers 8bit

[09:38:04.0000] <annevk>
5 browsers, 300 labels, 155 distinct mappings from bytes to characters

[09:39:00.0000] <annevk>
187 groups of label aliases

[09:39:01.0000] <annevk>
107 if I ignore labels that a browser would normally not recognize

[09:40:00.0000] <annevk>
I guess the other word here is insane

[09:40:01.0000] <annevk>
and a visualization problem

[09:48:00.0000] <AryehGregor>
"Your suggestion is founded on aesthetical reasoning. HTML is ugly."

[09:48:01.0000] <AryehGregor>
I vote that we adopt that as a WHATWG motto.

[09:49:00.0000] <annevk>
krijnh, ^^

[10:04:00.0000] <annevk>
http://www.nrc.nl/economie/article2647862.ece/Wikipedia_pionnen_Shell_op_alle_niveaus_politiek_Nigeria -- Wikileaks is now known as Wikipedia...

[10:05:00.0000] <annevk>
only in headlines, for now ;p

[10:06:00.0000] <annevk>
from the feed it seems they got it right originally and then someone "fixed" it

[10:08:00.0000] <othermaciej>
I think I would be creeped out by a "Personal Appeal from Julian Assange"

[10:08:01.0000] <annevk>
he lacks the stare for that to work

[10:08:02.0000] <annevk>
though the new site included a picture of him

[10:09:00.0000] <Rik`>
it's really silly that when you give to wikipedia, they don't close the banner

[10:10:00.0000] <AryehGregor>
It's really silly that when you close it every single time, it still pops up again.

[10:10:01.0000] <Rik`>
it doesn't for me

[10:10:02.0000] <AryehGregor>
I must have donated thousands of dollars' worth of volunteer programming time to Wikipedia, stop bothering me.

[10:10:03.0000] <Rik`>
I had to close it on en.w.o and fr.w.o but only once

[10:10:04.0000] <AryehGregor>
Maybe I'm seeing it on multiple sites, or browsers, but I've sure closed it an awful lot more than once.

[10:10:05.0000] <annevk>
now I get "Please read: A personal appeal from Wikipedia author Lilaroja"

[10:10:06.0000] <annevk>
she looks more friendly

[10:11:00.0000] <annevk>
I usually just scroll down...

[10:11:01.0000] <AryehGregor>
The Jimmy Wales ones were better, I think.

[10:11:02.0000] <hsivonen>
Rik`: it they closed it, you'd miss Jimbo's next photo or the new non-Jimbo person

[10:11:03.0000] <Philip`>
Lilaroja wrote Wikipedia?

[10:11:04.0000] <Philip`>
Must have taken him/her a long time

[10:11:05.0000] <jgraham>
AryehGregor: You could donate a few more dollars of time to fix it :)

[10:12:00.0000] <annevk>
Philip`, couple of monkeys and infinite time

[10:12:01.0000] <AryehGregor>
I'm getting Sue Gardner.  They could have used a better picture.

[10:12:02.0000] <AryehGregor>
The Jimbo pictures are great.  He's really photogenic.

[10:12:03.0000] <jamesr_>
i use https://chrome.google.com/extensions/detail/idkjdjficifbfjjkdkiimioljbloddpl

[10:12:04.0000] <AryehGregor>
Plus he's famous and rich.

[12:20:00.0000] <zcorpan>
gsnedders: i got an error from your outliner, <type 'exceptions.TypeError'>: argument to reversed() must be a sequence

[12:20:01.0000] <gsnedders>
zcorpan: known bug…

[12:21:00.0000] <gsnedders>
zcorpan: I am frequently reminded of this, and frequently forget and do something more interesting than fix it :P

[12:21:01.0000] <zcorpan>
does the bug manifest itself also with the other input method?

[12:23:00.0000] <gsnedders>
no

[12:23:01.0000] <gsnedders>
This is why I didn't panic and fix it straight away :P

[12:24:00.0000] <zcorpan>
not convinced you would have fixed it anyway :P

[12:24:01.0000] <gsnedders>
Yeah, true.

[12:26:00.0000] <gsnedders>
zcorpan: You know me too well.

[12:26:01.0000] <gsnedders>
It's kinda sad. :P

[12:28:00.0000] <alohci>
Hi. If the formOwner of a label doesn't match the formOwner of the a submit button that it labels, and the user clicks on the label on a platform that would cause the submit button to fire, which form would be submitted, the owner of the label or the owner of the submit button

[12:56:00.0000] <zcorpan>
alohci: clicking a label activates the label's associated control

[12:57:00.0000] <zcorpan>
though buttons shouldn't have <label>s since the button text is the label

[12:58:00.0000] <alohci>
that's not invalid though, is it?

[12:59:00.0000] <alohci>
I'm trying to establish what use the form content attribute is on the label element. It doesn't seem to do anything.

[13:02:00.0000] <zcorpan>
yeah it might not be useful for anything

[13:07:00.0000] <zcorpan>
http://www.ietf.org/mail-archive/web/hybi/current/msg05083.html - what do y'all think, should we kill cookies in websockets? (opera supports cookies for websockets, haven't checked other browsers)

[13:08:00.0000] <zcorpan>
/me goes to eat a cookie

[13:08:01.0000] <Hixie>
i'm fine with killing cookies in websockets, but then i basically never use cookies anyway :-)

[13:08:02.0000] <Hixie>
localStorage + custom channel is fine imho

[13:10:00.0000] <zcorpan>
seems likely that cookies will just bloat the handshake 99% of the time

[13:12:00.0000] <zcorpan>
(and you don't need to use cookies yourself for cookies to bloat everything, you just need to use some ads or statistics service or a number of other things)

[13:34:00.0000] <annevk>
Discovery Channel is using the slogan "Ignorance is bliss"

[13:34:01.0000] <annevk>
color me surprised

[13:49:00.0000] <oojacoboo>
are there any plans to introduce things like min-top: for positioning

[13:50:00.0000] <oojacoboo>
this would be an awesome style for fixed positioned elements!

[13:52:00.0000] <oojacoboo>
or even something like... margin: min(10%, 2em); padding: max(5%, 20px); width: calc(80% - 2em);

[13:52:01.0000] <oojacoboo>
that's suffice for most all uses

[13:58:00.0000] <Ms2ger>
oojacoboo, http://dev.w3.org/csswg/css3-values/#the-calc-min-and-max-functions

[13:59:00.0000] <oojacoboo>
doooooood

[13:59:01.0000] <oojacoboo>
any support yet?

[14:03:00.0000] <oojacoboo>
Ms2ger?

[14:03:01.0000] <Ms2ger>
I doubt it

[14:03:02.0000] <oojacoboo>
:/

[14:04:00.0000] <oojacoboo>
it's always the good stuff that lacks support

[14:13:00.0000] <annevk>
hmm, no more encoding stuff after all I guess

[14:13:01.0000] <annevk>
my brain is fried

[14:13:02.0000] <annevk>
I wonder if that was the reason I stopped looking into it a year ago

[14:18:00.0000] <karlcow>
annevk: Accept your mime type.

[14:20:00.0000] <annevk>
this stuff is deeper than mime man

[14:21:00.0000] <annevk>
hmm, I fail at completing this pun

[14:21:01.0000] <annevk>
but encodings are distinct

[14:51:00.0000] <jgraham>
zcorpan: Die cookies, die!

[14:51:01.0000] <jgraham>
Or "yes I am happy to kill them with WS", if you prefer

[14:51:02.0000] <karlcow>
https://blogs.apache.org/foundation/entry/the_asf_resigns_from_the

[14:52:00.0000] <jgraham>
gsnedders: I was going to own that outliner code bu you never gave it to me. Not that I have a great track record of long term maintainance of side projects

[15:12:00.0000] <gsnedders>
jgraham: it's a side-project of a side-project

[15:12:01.0000] <gsnedders>
Just the most successful part of the projects collectively

[15:13:00.0000] <mgdm>
gsnedders: outliner? /me is interested if it means what he thinks it means

[15:13:01.0000] <gsnedders>
mgdm: http://gsnedders.html5.org/outliner/

[15:13:02.0000] <mgdm>
ah, not quite what I had in mind, but cool

[15:14:00.0000] <mgdm>
/me is apparently the lead dev on http://gnome-outliner.sf.net, but that's by virtue of being the last to commit

[15:14:01.0000] <mgdm>
s/-//

[15:30:00.0000] <zcorpan>
http://lists.w3.org/Archives/Public/public-web-perf/2010Dec/0015.html

[15:45:00.0000] <saba>
when would you guys say that HTML5 is supported by all major browsers' latest versions?

[15:45:01.0000] <Rik`>
one day

[15:46:00.0000] <saba>
Rik`: probably, let's hope. Any date? :-)

[15:46:01.0000] <saba>
or rather month.

[15:46:02.0000] <Dashiva>
It's more interesting to ask that question for each feature

[15:46:03.0000] <Rik`>
who cares?

[15:46:04.0000] <Rik`>
like Dashiva said

[15:47:00.0000] <saba>
Dashiva: yes, why I ask here is because I believe (or want to find out) that there would be some knowledgeable speculations in this channel

[15:48:00.0000] <zcorpan>
an extended subset of html5 is already supported by all major browsers' latest versions

[15:48:01.0000] <saba>
zcorpan: interesting, do you know if that includes web storage features?

[15:48:02.0000] <Rik`>
saba: http://caniuse.com might help you

[15:49:00.0000] <zcorpan>
saba: it includes localStorage

[15:49:01.0000] <saba>
Rik`: wonderful, thanks :-)

[15:50:00.0000] <saba>
zcorpan: ok, I'll read more about that. Thanks!

[15:51:00.0000] <zcorpan>
saba: 'extended subset' is a subtle magic phrase which can mean anything since the subset can be the empty set ;)

[15:51:01.0000] <zcorpan>
saba: so it was true in 2004 as well


2010-12-10
[16:39:00.0000] <openstandards>
saba, what you need to remember is people started using css features before they were supported by all browsers

[16:39:01.0000] <openstandards>
:)

[18:54:00.0000] <saba>
openstandards: you have a true point there.

[19:00:00.0000] <openstandards>
as long as the user experience degrades down to a level which is acceptable by this i mean its not broken then it should be fine, thats my stance

[00:32:00.0000] <hsivonen>
hmm. when viewing my Master's Thesis in Firefox 4 on Ubuntu, the font looks right (Palatino-ish). In Chrome, it looks wrong (Times New Roman-ish)

[00:32:01.0000] <hsivonen>
looks like this stuff hasn't been polished in Chrome

[00:47:00.0000] <matjas>
hsivonen: Does Firefox support the Link HTTP header for all link relations? E.g. would `prefetch` work?

[00:47:01.0000] <matjas>
Link: <foo.html>;rel=prefetch

[00:48:00.0000] <hsivonen>
matjas: I don't know, but my vague recollection from reading the source makes me guess prefetch wouldn't work as a header

[00:48:01.0000] <hsivonen>
matjas: try it to find out

[00:50:00.0000] <hsivonen>
I blame Hixie for Link header support

[00:50:01.0000] <matjas>
hsivonen: Will do, just wanted to check with you first; usually that saves me the time needed to create a test case.

[00:51:00.0000] <matjas>
annevk, zcorpan: How about Opera?

[01:07:00.0000] <matjas>
hsivonen: It does work!

[01:08:00.0000] <matjas>
hsivonen: So I guess Firefox supports the Link header for all other link relations as well

[01:08:01.0000] <matjas>
That’s great news.

[01:08:02.0000] <matjas>
Opera doesn’t seem to support prefetching at all, so I can’t really test there.

[01:18:00.0000] <hsivonen>
matjas: why is it great news? what's your use case?

[01:19:00.0000] <matjas>
hsivonen: No real use case, just good to know `Link` is *fully* supported in Firefox

[01:20:00.0000] <matjas>
hsivonen: `prefetch` is just an easy way to test it (other than `stylesheet`)

[02:16:00.0000] <MrWax>
does anyone know a good view of the support of HTML5 like html5readiness.com?

[02:18:00.0000] <antti_s>
MrWax: http://caniuse.com/ ?

[02:18:01.0000] <matjas>
https://github.com/search?type=Users&language=javascript&q=location%3Abelgium *egoboost*

[02:18:02.0000] <matjas>
Oh snap, wrong channel

[02:18:03.0000] <MrWax>
antti_s: yes, but more in 1 picture

[02:19:00.0000] <annevk>
matjas, btw, did you test <link>;rel=alternate in Gecko?

[02:19:01.0000] <annevk>
for feed support, especially

[02:19:02.0000] <matjas>
annevk: not yet, I’ll try that now

[02:20:00.0000] <matjas>
annevk: I’d expect it to work considering `prefetch` does

[02:20:01.0000] <annevk>
I'm sceptical, that's all :)

[02:25:00.0000] <matjas>
annevk: You’re right, it doesn’t seem to work

[02:26:00.0000] <matjas>
Tried with different variations; Link: <foo.atom>;rel=alternate — Link: <foo.atom>;rel=alternate;type=application/atom+xml — Link: <foo.atom>;rel="alternate";type="application/atom+xml"

[02:26:01.0000] <matjas>
All failed

[02:26:02.0000] <matjas>
When using <link> in the HTML all it takes is rel=alternate and a `type` attribute for the feed icon to appear in the Firefox UI

[02:27:00.0000] <annevk>
yeah, that's per HTML5 as well

[02:28:00.0000] <MrWax>
annevk: you have experience giving any presentation about HTML5 or components of it?

[02:28:01.0000] <MrWax>
in the light of your job

[02:28:02.0000] <MrWax>
i mean, related to your job

[02:31:00.0000] <annevk>
I have given a few presentations

[02:32:00.0000] <annevk>
most are linked from the WHATWG wiki I pointed you towards earlier

[02:32:01.0000] <MrWax>
ok

[02:34:00.0000] <MrWax>
annevk: If you would have to give a 20 minute presentation to average IT related people.. Would you do it like this: 3 main parts 1 - quick history related to html5 (whatwg/w3c, 2 mins) 2 - syntax related, short description of tags new & tags unusable (8 mins) 3 - description of 5 new exciting APIs (10 mins)

[02:35:00.0000] <jgraham>
MrWax: "Average IT Related People" doesn't mean much. Why should these particular people care about HTML5?

[02:36:00.0000] <jgraham>
I mean what are you trying to convey?

[02:36:01.0000] <annevk>
MrWax, something like that seems fine; depends a bit on what they are interested in

[02:37:00.0000] <jgraham>
Are you trying to convince them that they shoud be writing GUIs in HTML? Do they already write GUIs in HTML but want to know what tools are new?

[02:37:01.0000] <MrWax>
It's for my study, I have upgraded a CMS system front-end wise as graduation project

[02:37:02.0000] <MrWax>
and now I need to present a related subject 

[02:37:03.0000] <annevk>
MrWax, aah

[02:37:04.0000] <annevk>
MrWax, if it's for students I would illustrate how the web is becoming the app platform

[02:38:00.0000] <MrWax>
I already made all the sheets and stuff, just trying to reconsider the content of the API part

[02:38:01.0000] <MrWax>
annevk: its for 3 teachers

[02:38:02.0000] <annevk>
MrWax, using some new HTML5 features as examples as to why it can pull that off

[02:38:03.0000] <annevk>
MrWax, then I would probably do the same :) as the web seems somewhat underrepresented at universities

[02:38:04.0000] <MrWax>
annevk: and I was considering instead of the most important APIs (video/audio/canvas etc) just to explain the more recent innovative things

[02:39:00.0000] <MrWax>
I mean, I think much people know that type of basic stuff, how WHATWH initiated HTML5 how W3C took the standard specs in 07 etc etc

[02:40:00.0000] <MrWax>
WHATWG*

[02:42:00.0000] <MrWax>
I think I'll use the basic HTML5rocks UI to present my sheets on, just going to write a small script that can create sheets and bullets dont feel like adding 30 sheets manually :)

[02:42:01.0000] <MrWax>
Anyway, if you might know anything that can be really addition to what I have, it would be great

[02:42:02.0000] <MrWax>
I'm just trying to not present old / already much known info

[02:46:00.0000] <matjas>
annevk, hsivonen: https://bugzilla.mozilla.org/show_bug.cgi?id=618258

[02:46:01.0000] <annevk>
MrWax, you should try to figure out how much your teachers are up to date somehow I suppose

[02:47:00.0000] <matjas>
annevk: I’m sure you already knew, but Opera supports it just fine :)

[02:47:01.0000] <MrWax>
annevk: I think just the basic data from W3C and WHATWG is known, and possibly some features like video/audio - i dont think much else

[02:47:02.0000] <annevk>
matjas, I didn't actually, fun

[02:47:03.0000] <annevk>
I guess we rock

[02:48:00.0000] <matjas>
annevk: http://mathiasbynens.be/demo/link-alternate shows an RSS icon

[02:48:01.0000] <MrWax>
annevk: but API like worker objects are good things to explain i trhink

[02:48:02.0000] <annevk>
MrWax, offline maybe too

[02:48:03.0000] <annevk>
MrWax, both speed and actually working offline impacts

[02:48:04.0000] <MrWax>
annevk: yea i have Offline Web apps as in IndexedDB + localStorage + App Cache in one sheet with examples

[02:49:00.0000] <annevk>
MrWax, http://weblogs.mozillazine.org/roc/archives/2008/11/the_essence_of.html has some interesting points you could try to convey

[02:49:01.0000] <MrWax>
thanks

[02:50:00.0000] <MrWax>
annevk: actually, I could explain Offline apps in an example how I could make the CMS I have upgraded offline webapp compatible right?

[02:50:01.0000] <MrWax>
you think this is a good idea?

[02:51:00.0000] <MrWax>
as in IndexedDB to store page rights on, localStorage to save page contents in, and App Cache to save the videos and pictures CMS users use in their pages

[02:52:00.0000] <annevk>
makes sense

[03:06:00.0000] <MrWax>
You think using the HTML5rocks websheets UI is a good idea? or do you maybe know a better alternative?

[03:12:00.0000] <krijnh>
annevk: ?

[03:12:01.0000] <annevk>
krijnh, voor die slogan?

[03:12:02.0000] <krijnh>
Uhuh

[03:12:03.0000] <krijnh>
Waar moet 'ie komen?

[03:12:04.0000] <annevk>
dacht als een van de dingen op /irc-logs/

[03:13:00.0000] <krijnh>
Ah, check

[03:17:00.0000] <krijnh>
http://krijnhoetmer.nl/irc-logs/?gimme-a-hobby #thereifixedit

[03:53:00.0000] <matjas>
I miss krijnhoetmer.nl

[03:53:01.0000] <matjas>
LOLWAT

[04:05:00.0000] <matjas>
zcorpan: That sucks.

[04:06:00.0000] <zcorpan>
matjas: express your concern on the mailing list (no need to subscribe)

[04:18:00.0000] <matjas>
zcorpan: Done. (I hope it appears soon.)

[04:19:00.0000] <hsivonen>
http://twitter.com/#!/daaitoulaam/status/13201086282203136

[04:20:00.0000] <hsivonen>
matjas: "I miss krijnhoetmer.nl" is an actual quote from #whatwg

[04:20:01.0000] <matjas>
hsivonen: Oh wow :‘)

[04:21:00.0000] <matjas>
Inside joke overload!

[04:25:00.0000] <jgraham>
Dear Lazy IRC: Is there some incredibly obvious way that I am missing to clone a git repository from the local machine to a remote? Or do I have to copy it using scp or something

[04:28:00.0000] <erlehmann>
jgraham, just grab the .git directory and move it to your other machine. then git “reset --hard”

[04:29:00.0000] <Lachy>
Hixie, whatwg wiki seems to be having trouble. "Can't contact the database server: Lost connection to MySQL server at 'reading initial communication packet', system error: 110 (database.wiki.whatwg.org)"

[04:29:01.0000] <erlehmann>
jgraham, also http://stackoverflow.com/questions/978052/githow-can-i-make-my-local-repository-available-for-git-pull/978417#978417

[04:31:00.0000] <jgraham>
erlehmann: Well yeah the thing is I want to clone in reverse. I am on machine a. I want a (preferably bare) clone of the repo on machine b. I can ssh to b. git doesn't seem to deal well with this. It is trivial with mercurial :)

[04:32:00.0000] <erlehmann>
jgraham, what would be wrong with using scp?

[04:32:01.0000] <krijnh>
matjas: Sam said that once :)

[04:33:00.0000] <jgraham>
erlehmann: It feels like it is less efficient than git clone and I can't make it bare by default

[04:34:00.0000] <jgraham>
All I want is for "git clone --bare repo ssh://me@remote/repo.git" to work

[04:36:00.0000] <hsivonen>
now I wish I had worked on Microsyntax Description caching before

[04:36:01.0000] <hsivonen>
I can't redeploy Validator.nu while wiki.whatwg.org is down

[04:36:02.0000] <hsivonen>
distributed failure

[04:54:00.0000] <hsivonen>
so many bugs I wish I had fixed earlier

[06:07:00.0000] <annevk>
wiki is up

[06:13:00.0000] <annevk>
this encoding problem sucks

[06:13:01.0000] <annevk>
I guess I already mentioned that, but I don't really have a good idea on how to approach it

[06:13:02.0000] <annevk>
I suppose some kind of algorithm that would tell which encodings are superset/subset of each could help reduce the amount of data to wade through

[06:14:00.0000] <annevk>
but if that is really better...

[06:19:00.0000] <annevk>
http://www.reddit.com/r/funny/comments/ej886/wrong_number_again_thinking_im_someones_coach_my/c18ibj3 -- funny

[06:49:00.0000] <MrWax>
annevk: do you maybe know some kind of page that describes which elements of HTML 5 contribute to the fact that Web applications are taking over the roles of traditional desktop applications?

[06:49:01.0000] <MrWax>
Or, does anyone else know a good reference for this?

[07:00:00.0000] <annevk>
MrWax, shouldn't be too hard to figure that out yourself, no?

[07:04:00.0000] <hsivonen>
http://lists.xml.org/archives/xml-dev/201012/msg00433.html

[07:04:01.0000] <hsivonen>
does anyone have any idea what the part about CSS is referring to?

[07:07:00.0000] <annevk>
XBL bindings? CSSOM inspection of cross-origin CSS resources?

[07:07:01.0000] <annevk>
he's wrong about the implications though

[07:16:00.0000] <hsivonen>
annevk: I guess this would be 386 time, except I have to pack for travel instead

[08:46:00.0000] <hsivonen>
annevk: If I want to use Apache to serve CORS-enabled resources to multiple origins but not the wildcard origin, what should I do when the headers don't allow multiple origins anymore?

[08:47:00.0000] <hsivonen>
It's bad when googling for mod_cors finds what I have said on this channel before

[09:13:00.0000] <webr3>
hsivonen, generate the header dynamically based on a white list I guess.. CORS is a real PITA, especially with write operations

[10:27:00.0000] <Ms2ger>
Yay, more discussion about physical css inches!

[10:29:00.0000] <Philip`>
What if I make a monitor out of stretchy elastic, so a physical inch is a varying number of pixels?

[10:30:00.0000] <AryehGregor>
Philip`, you could just use a projector instead if you want a counterexample.

[10:30:01.0000] <AryehGregor>
Or if you want a cooler counterexample, use the one that someone suggested about a device that beams the image directly onto your retina.

[10:30:02.0000] <AryehGregor>
So the whole image is only a few millimeters high.

[10:31:00.0000] <Philip`>
Isn't a standard LCD monitor also projecting its light onto your retina so the image is only a few millimeters high?

[10:31:01.0000] <Ms2ger>
But I know I need to give that paragraph exactly 12 points of margin!

[10:32:00.0000] <AryehGregor>
Philip`, well . . . yes.  But it's also projecting the image all over the room.  I mean projecting *just* onto your retina.

[10:33:00.0000] <Philip`>
It's also projecting onto an infinite number of planes between your retina and the projector, and onto the lenses in your eye and in the device

[10:33:01.0000] <Philip`>
Why is the size on your retina special in that case?

[10:34:00.0000] <AryehGregor>
. . . maybe it's not.  But choosing any of those things it's projecting onto as the reference point for measurements like 1in is unlikely to match the author's intent.

[10:35:00.0000] <Philip`>
I guess the only meaningful physical measurement is degrees

[10:35:01.0000] <AryehGregor>
Which is what CSS now uses, more or less.

[10:36:00.0000] <AryehGregor>
Except for the fact that for most viewing devices, you don't really know how far away the viewer will be sitting.

[10:36:01.0000] <AryehGregor>
And in some cases they might be sitting at very different distances (e.g., the projector use-case).

[10:37:00.0000] <Philip`>
Yeah, so it's still not actually useful, but at least you don't have to worry about what plane you're measuring it on

[11:12:00.0000] <hsivonen>
webr3: sure, but generate with what? I'm not aware of an Apache module for this.

[11:58:00.0000] <Hixie>
well dunno why the blog and wiki were down

[11:58:01.0000] <Hixie>
sorry about that though

[12:04:00.0000] <Hixie>
anyone know if webgl has some sort of concept of safe code you can run on the gpu?

[12:05:00.0000] <AryehGregor>
"Safe code you can run on the GPU"?

[12:05:01.0000] <AryehGregor>
As opposed to code that will cause your computer to crash or something?

[12:05:02.0000] <Hixie>
yeah

[12:05:03.0000] <Hixie>
i mean, does webgl allow web pages to write their own custom shaders, or something

[12:05:04.0000] <Hixie>
presumably if it does they are checked for safety first

[12:06:00.0000] <Hixie>
web seems to say yes

[12:06:01.0000] <AryehGregor>
Surely the worst any bad shader can do is mess up the program itself?  I mean, it doesn't require root privileges to do GPU operations, so presumably it can't interfere with other processes.

[12:07:00.0000] <AryehGregor>
/me knows some OpenCL, and is in fact working on a final written in OpenCL right now, but doesn't know how more conventional GPU usage works

[12:07:01.0000] <AryehGregor>
(GPUs are really neat to write general-purpose code for, by the way)

[12:07:02.0000] <Hixie>
AryehGregor: other web pages are in the same process

[12:07:03.0000] <AryehGregor>
Not necessarily.

[12:07:04.0000] <AryehGregor>
But I assume browser implementers have thought of this . . . why do you ask, anyway?

[12:08:00.0000] <Hixie>
wondering if we could reuse it for hardware-accelerated video frame manipulation

[12:09:00.0000] <AryehGregor>
(The OpenCL spec is pretty good, but it leaves too many things undefined.  Better than C itself, though.)

[12:10:00.0000] <AryehGregor>
https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/doc/spec/WebGL-spec.html#4.4

[12:10:01.0000] <AryehGregor>
It looks like you're not going to crash stuff, but you could freeze the system.

[12:10:02.0000] <AryehGregor>
The GUI, that is.

[12:10:03.0000] <Hixie>
that's pretty bad

[12:11:00.0000] <AryehGregor>
From OpenCL, I think the way this works is that the GPU can only really do one thing at once, or something.  So if you execute a batch of OpenCL kernels, and each kernel takes more than a fraction of a second, you'll see the whole system freeze, because it can't interrupt running kernels.  Something like that.

[12:11:01.0000] <AryehGregor>
Well, there's clearly some way to interrupt running kernels.

[12:12:00.0000] <AryehGregor>
Ctrl-C works with my OpenCL programs.

[12:12:01.0000] <AryehGregor>
I dunno.  But yeah, this does seem pretty bad.

[12:12:02.0000] <AryehGregor>
Of course, there are already obnoxious DoS attacks you can pull off.  If I browse to a large enough image in my web browser, X crashes.

[12:12:03.0000] <AryehGregor>
And I've seen similar stuff on Windows XP, IIRC.

[12:12:04.0000] <AryehGregor>
With unreasonably large images and such.

[12:13:00.0000] <AryehGregor>
So maybe it's not actually a blocker issue.

[12:13:01.0000] <AryehGregor>
(although it's still bad)

[12:13:02.0000] <AryehGregor>
(In Windows XP, IIRC, the whole OS crashed.  Although maybe it's not true anymore.)

[12:13:03.0000] <gsnedders>
AryehGregor: If you get the GPU into a bad state, some OSes will just transparently reset the entire graphics driver (Vista/Win7/OS X), others will die (XP bluescreens), and it'll kill X

[12:14:00.0000] <gsnedders>
Where "bad state" can just be a shader takes more than n to execute

[12:14:01.0000] <AryehGregor>
Is that what it means in Vista and higher when it says "The graphics driver has died and was restarted" or whatever?

[12:14:02.0000] <AryehGregor>
Also, by "transparently" you mean "with no ill effects", I guess?

[12:14:03.0000] <AryehGregor>
That doesn't sound too bad, then.

[12:14:04.0000] <AryehGregor>
(except for XP and X users)

[12:14:05.0000] <AryehGregor>
(I wonder if Wayland will be better :) )

[12:15:00.0000] <gsnedders>
AryehGregor: with no ill effects except for it black-screening for a few seconds

[12:15:01.0000] <gsnedders>
It's still a case of you-really-don't-want-to-do-this

[12:15:02.0000] <AryehGregor>
Ah.

[12:15:03.0000] <gsnedders>
And if you put the code that causes it in something called by setInterval…

[12:16:00.0000] <AryehGregor>
But can this also be caused already?  Like by a 1000000x1px image?

[12:16:01.0000] <AryehGregor>
/me makes one to test

[12:16:02.0000] <gsnedders>
It shouldn't be.

[12:17:00.0000] <AryehGregor>
I had X crash quite recently upon viewing a too-large image.

[12:17:01.0000] <gsnedders>
/me has managed to load huge images without X crashing

[12:25:00.0000] <AryehGregor>
Trying to resize an image to 1000000x1 in ImageMagick messes up my server.  :(

[12:27:00.0000] <AryehGregor>
I'm not sure why . . . it created massive disk activity.

[12:27:01.0000] <gsnedders>
swap?

[12:27:02.0000] <AryehGregor>
No, zero swap.

[12:27:03.0000] <AryehGregor>
And the process was killed by something a minute or two ago already, although it didn't seem to be using much memory.

[12:28:00.0000] <AryehGregor>
Why does Linux have to perform so atrociously under heavy I/O?  It's really inexcusable.

[12:28:01.0000] <kidfribble>
hi all - is GoodRelations RDFa talk off topic here?

[12:28:02.0000] <AryehGregor>
At least it's usable in the recent couple of kernels . . .

[12:28:03.0000] <AryehGregor>
kidfribble, the WHATWG doesn't really have anything to do with RDFa.

[12:28:04.0000] <kidfribble>
yeah, didn't think so :) found an old talk in this channel a second ago

[12:30:00.0000] <gsnedders>
kidfribble: #swig is probably a better bet

[12:30:01.0000] <kidfribble>
thanks to you both

[12:32:00.0000] <AryehGregor>
Geez, my websites are down.

[12:32:01.0000] <AryehGregor>
I hate ImageMagick.

[12:32:02.0000] <AryehGregor>
This is not even close to the first unpleasant experience I've had with it.

[12:33:00.0000] <AryehGregor>
Which is remarkable, since I barely ever use it.

[12:43:00.0000] <Philip`>
WebGL implementations use a shader validator to prevent you doing things like loops (which could be infinite loops), I think

[12:45:00.0000] <gsnedders>
/me can't claim to know a huge amount about WebGL

[12:45:01.0000] <Philip`>
And/or I think it relies on drivers to provide safety features, e.g. to kill incredibly slow shader executions

[12:45:02.0000] <Philip`>
(which requires the driver developers to be involved since they historically haven't provided guarantees like that)

[12:47:00.0000] <Philip`>
(Also it relies on the drivers to not be e.g. full of buffer overflow vulnerabilities, and I'm not sure how well they historically guarantee that given that they've never been used to run untrusted code before)

[12:47:01.0000] <AryehGregor>
Sounds fun!

[12:47:02.0000] <Philip`>
/me notes that Mesa <7.9 suffers from a trivial DOS vulnerability because its shader parser has exponential complexity in certain cases

[12:49:00.0000] <Philip`>
(which as far as I could tell was due to it completely disregarding decades of work into how to parse a basic C-like syntax efficiently, and doing something insane instead)

[12:50:00.0000] <Dashiva>
That's what open source is all about, isn't it?

[12:51:00.0000] <Philip`>
You mean it being about looking briefly at other people's code and claiming it's stupid without having analysed it in any real detail?

[12:51:01.0000] <gsnedders>
Philip`: Browsers have to do all the shader-safety checking

[12:54:00.0000] <Philip`>
https://bugs.freedesktop.org/show_bug.cgi?id=24553

[12:54:01.0000] <Philip`>
I guess browsers are still vulnerable to that

[13:10:00.0000] <jgraham>
I believe Google have made an open source shader validator

[13:12:00.0000] <jgraham>
I would link to the Google Groups posts but since the links don't function for me...

[13:29:00.0000] <Philip`>
jgraham: It's part of http://code.google.com/p/angleproject/ I think

[14:22:00.0000] <jamesr_>
Hixie: i think i exploded your live dom viewer

[14:23:00.0000] <jamesr_>
i was playing with a <script> tag that was manipulating unmatched surrogate pairs in strings and now it's all fuxxored

[14:29:00.0000] <Hixie>
jamesr_: how so?

[14:29:01.0000] <Hixie>
jamesr_: wfm


2010-12-11
[17:04:00.0000] <bga_>
hi

[17:04:01.0000] <bga_>
can you show me real use of css :first-line ? :)

[17:06:00.0000] <bga_>
i can not imagine real usage of it

[17:10:00.0000] <bga_>
in google i have found only http://answers.oreilly.com/topic/1001-how-to-style-the-first-line-of-a-paragraph-with-an-image/. wierd example

[17:53:00.0000] <dglazkov>
MikeSmith: I sent a message to public-webapps like an hour ago. I don't see it in archives. What gives?

[18:02:00.0000] <bga_>
heh

[18:05:00.0000] <jamesr_>
i don't see it in my inbox either

[20:47:00.0000] <wirepair>
MikeSmith you about?

[20:48:00.0000] <wirepair>
or anyone else from japan by anychance

[20:55:00.0000] <wirepair>
MikeSmith you about now? :)

[21:33:00.0000] <Hixie>
nessy: good luck with the poster thing; i tried to say the same thing you did and got called disablist.

[21:34:00.0000] <nessy>
yeah, I know - others have said the same, too, but maybe not in this many words...

[14:39:00.0000] <bga_>
brendaneich hi

[14:40:00.0000] <bga_>
do you plan remove `__proto__` as own property of any object?

[14:41:00.0000] <bga_>
i think any object should be clean by default

[14:42:00.0000] <bga_>
we should avoid any __magics__

[14:42:01.0000] <Dashiva>
That's a matter of enumeration, not existence

[14:44:00.0000] <bga_>
Dashiva `var cache = {}; var _fn = function(name){ if(cache.hasOwnProperty(name))  return cache[name]; ... };  _fn('__proto__')`

[14:44:01.0000] <bga_>
its a promlem

[14:44:02.0000] <bga_>
*problem

[14:47:00.0000] <bga_>
vendors should replace __proto__ to Object.mozSetPrototype(obj, pr)

[15:59:00.0000] <AryehGregor>
    // For multi-byte values, the optional littleEndian argument

[15:59:01.0000] <AryehGregor>
    // indicates whether a big-endian or little-endian value should be

[15:59:02.0000] <AryehGregor>
    // read. If false or undefined, a big-endian value is read.

[15:59:03.0000] <AryehGregor>
https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/doc/spec/TypedArray-spec.html#refsWEBGL

[15:59:04.0000] <AryehGregor>
What could the rationale possibly be for defaulting to big-endian in the real world?


2010-12-12
[16:01:00.0000] <jcranmer>
is bigendian 0xabcd or 0xcdab?

[16:01:01.0000] <jcranmer>
I can honestly never remember

[16:01:02.0000] <AryehGregor>
It's the one that major architectures aren't, that's the relevant bit.

[16:01:03.0000] <AryehGregor>
But as it happens, it's also the one that makes sense.  I.e., 0xabcd is stored with first byte 0xab and second byte 0xcd.

[16:02:00.0000] <jcranmer>
it's the one that makes sense to people reading it

[16:02:01.0000] <jcranmer>
however it makes pointer conversion a little harrier

[16:02:02.0000] <AryehGregor>
How so?

[16:02:03.0000] <jcranmer>
since converting between byte and int in little endian does not change the one you're reading

[16:03:00.0000] <AryehGregor>
Well, if the upper bytes happen to all be zeros, I guess.

[16:03:01.0000] <jcranmer>
well

[16:03:02.0000] <AryehGregor>
But that seems like an edge case.

[16:03:03.0000] <jcranmer>
if I have a value stored as |12|34|56|78|

[16:03:04.0000] <jcranmer>
the pointer is to the first byte

[16:03:05.0000] <jcranmer>
if I want to look at it as a short

[16:03:06.0000] <jcranmer>
I have to add 2 to the pointer

[16:04:00.0000] <AryehGregor>
You mean if you want to cast it to a short, truncating it.

[16:04:01.0000] <jcranmer>
not necessarily truncating it

[16:05:00.0000] <AryehGregor>
On the other hand, if you want to (for instance) convert an array of words to a hexadecimal string, you can't just cast to a string of chars and do it byte by byte (supposing you want to print it big-endian, which would be normal).

[16:06:00.0000] <AryehGregor>
That's actually come up for me in the last few days.

[16:06:01.0000] <AryehGregor>
(Yay for OpenCL not having most C standard library functions)

[16:08:00.0000] <jcranmer>
how often do you really need to that, though?

[16:08:01.0000] <AryehGregor>
But anyway, big-endian is going to be less efficient on all the common web-browsing machines out there, unless I'm missing something.

[16:08:02.0000] <AryehGregor>
Regardless of how useful one is relative to the other.

[16:09:00.0000] <AryehGregor>
So little-endian would make a lot more sense as a default.

[16:09:01.0000] <jcranmer>
printf("%x\n", val); prints out a hex string really well

[16:09:02.0000] <AryehGregor>
Except printf() and sprintf() don't exist in OpenCL, which is what I've been doing the last few days.  :)

[16:09:03.0000] <AryehGregor>
Well, printf() exists if you run it on the CPU, but that kind of blows your performance out the window.

[16:14:00.0000] <AryehGregor>
I guess I could have just copied the raw bytes to an output array and then formatted them on the host side.

[16:14:01.0000] <AryehGregor>
Oh well, maybe next time.

[16:20:00.0000] <Hixie>
AryehGregor: big-endian is network byte order, so it makes sense to be the default

[16:20:01.0000] <AryehGregor>
Hixie, network byte order in what protocol?

[16:20:02.0000] <Hixie>
pretty much everything, but tcp, ip, etc

[16:21:00.0000] <Hixie>
let me rephrase that

[16:21:01.0000] <AryehGregor>
Okay, but what relevance does that have to typed arrays?

[16:21:02.0000] <Hixie>
"tcp, ip, and pretty much everything"

[16:21:03.0000] <AryehGregor>
That's not likely to contain protocol-level data.

[16:21:04.0000] <AryehGregor>
It's likely to contain GPU data, and my NVIDIA GPU appears to be little-endian (at least for the purposes of OpenCL).

[16:21:05.0000] <Hixie>
well presumably the data you're manipulating is coming from the network or going to the network... i'm assuming the api doesn't expose the platform's byte order

[16:21:06.0000] <Hixie>
since that would be crazy

[16:22:00.0000] <Hixie>
in terms of getting interoperability

[16:22:01.0000] <AryehGregor>
The question is being able to implement the array efficiently on native hardware.  If you have a typed array of length 1024, with one uint32 view and one uint8 view, then if the endianness of the views matches that of the host architecture, you can implement that at no performance cost.

[16:23:00.0000] <AryehGregor>
But if they don't match, then you'd presumably have to do extra conversions on access.

[16:23:01.0000] <AryehGregor>
I don't know if that's a big deal in practice, admittedly.

[16:24:00.0000] <Hixie>
well it's the web, you want the same code to work the same on all architectures

[16:25:00.0000] <Hixie>
so either way, someone's gonna be screwed

[16:25:01.0000] <Hixie>
seems like having the api default to the network byte order makes sense

[16:26:00.0000] <AryehGregor>
If having the byte order match the architecture makes sense for efficiency, then you should make it little-endian to match virtually every web-enabled device out there.

[16:26:01.0000] <Philip`>
The Portable NaCl approach to portability seems to be to declare that all the platforms anyone cares about are little-endian so that's all it'll support

[16:26:02.0000] <AryehGregor>
The default may as well be efficient.

[16:26:03.0000] <AryehGregor>
That sounds sensible.

[16:26:04.0000] <Philip`>
At least the typed arrays don't appear to stop you from supporting wrong-endian platforms if you care enough

[16:27:00.0000] <Philip`>
but it's not exactly great :-(

[16:30:00.0000] <AryehGregor>
Is that because LLVM doesn't support big-endian, or because the authors of PNaCl didn't want to bother making their code endian-independent?

[16:32:00.0000] <AryehGregor>
Hixie, bzbarsky said in a November 15 whatwg e-mail that typed array views depends on the endianness of your hardware, but it looks like either they fixed it since then or he was wrong or I'm misreading the spec.

[16:32:01.0000] <AryehGregor>
Or possibly more than one of those.

[16:33:00.0000] <Hixie>
if it varies based on the architecture then that's a disaster waiting to happen

[16:33:01.0000] <AryehGregor>
That's more or less what I said.

[16:34:00.0000] <AryehGregor>
Have I mentioned that LLVM has the coolest logo of any open-source project I know of?

[16:34:01.0000] <Philip`>
The LLVM bitcode format isn't portable across architectures (by design), so it looks like PNaCl basically defines its own architecture (32-bit, 1GB address space, little-endian) which everyone compiles to

[16:35:00.0000] <AryehGregor>
/me notes that Firefox freezes for several seconds when he visits <http://upload.wikimedia.org/wikipedia/en/4/4c/LLVM_Logo.svg>, while Chrome renders it instantly

[16:35:01.0000] <Philip`>
and assumes that that's sufficiently compatible with the user's physical architecure that it's able to compile down to machine code

[16:35:02.0000] <AryehGregor>
Interesting.

[16:36:00.0000] <Rik`>
AryehGregor: scrolling is bad in both

[16:36:01.0000] <Philip`>
At least they've recognised that x86+x86_64+ARM machine code is not sufficiently portable for the web

[16:38:00.0000] <Philip`>
Maybe they'll eventually develop a Really Portable Native Client system which involves compiling your code into JavaScript so it'll work anywhere and will even run in legacy browsers

[16:52:00.0000] <brendaneich>
Hixie: typed arrays expose byte order

[16:52:01.0000] <Hixie>
of the platform?

[16:52:02.0000] <Hixie>
so the same JS will act differently on different computers?

[17:09:00.0000] <brendaneich>
Hixie: it's not good and we're not going to standardize typed arrays in Ecma

[17:10:00.0000] <brendaneich>
Hixie: we hope to supersede them with http://wiki.ecmascript.org/doku.php?id=strawman:binary_data

[17:10:01.0000] <brendaneich>
which does not expose byte order via aliasing "views" of a single buffer

[17:10:02.0000] <Hixie>
ah, that seems much better

[17:11:00.0000] <brendaneich>
Hixie: by the time we got in the loop, the WebGL people had pushed to their 1.0, or near it -- it was out of the lab

[17:11:01.0000] <brendaneich>
they really wanted arrays of structs, structs with member arrays, etc., using packed machine representations

[17:11:02.0000] <Hixie>
yeah they seem to be moving kinda fast and in without much public input

[17:11:03.0000] <Hixie>
s/in//

[17:11:04.0000] <brendaneich>
but they couldn't figure out how to do that, so they fell back on fortran .common !

[17:20:00.0000] <Philip`>
It's been over 3 years since the first public release of a web GL implementation, so it doesn't seem like they've been rushing through it extremely fast

[17:22:00.0000] <l4rk>
brendaneich: i just came into say hi, and that i'm a big fan

[17:22:01.0000] <tmzt>
anybody know of a non-minified example of a camera in webgl?

[17:30:00.0000] <bga_>
brendaneich what about my question?

[17:45:00.0000] <tmzt>
apropos, there is a 3d remake of Gulliver's Travels coming out

[17:52:00.0000] <bga_>
heh http://wiki.ecmascript.org/doku.php?id=strawman:private_names

[22:23:00.0000] <MikeSmith>
hsivonen: you have a typo in a method name in the htmlparser source

[22:23:01.0000] <MikeSmith>
http://hg.mozilla.org/projects/htmlparser/file/c1eb6d6f5c49/src/nu/validator/htmlparser/sax/HtmlParser.java#l538

[22:24:00.0000] <MikeSmith>
setTransitionHander should be setTransitionHandler

[23:00:00.0000] <nielsle>
Are the videos from webgl camp available in a non-flash format?

[23:20:00.0000] <hsivonen>
MikeSmith: thanks

[23:49:00.0000] <roc>
the perils of super-smart autocomplete

[02:24:00.0000] <MikeSmith>
hsivonen: I ran into another problem with the parser

[02:25:00.0000] <MikeSmith>
if in my code I do:

[02:25:01.0000] <MikeSmith>
HtmlParser parser = new HtmlParser();

[02:25:02.0000] <MikeSmith>
and then Locator locator = parser.getDocumentLocator();

[02:26:00.0000] <MikeSmith>
… I get a null pointer exception when I try to compile it

[02:27:00.0000] <MikeSmith>
the reason being that that method just does "return driver.getDocumentLocator()"

[02:29:00.0000] <MikeSmith>
but driver is always going to be null if you call getDocumentLocator() just after instantiating a parser

[02:30:00.0000] <MikeSmith>
but if I take you private

[02:30:01.0000] <MikeSmith>
if I take the private lazyInit() method there and make it public in the source

[02:31:00.0000] <MikeSmith>
which is what seems to be the code that actually initializes the driver

[02:32:00.0000] <MikeSmith>
and I call that from my code before calling parser.getDocumentLocator()

[02:32:01.0000] <MikeSmith>
then it seems to work as expected

[02:32:02.0000] <MikeSmith>
at least, I don't get the null pointer exception

[04:26:00.0000] <MrWax>
how can I find out since what time a certain API is included in the HTML5 standard?

[04:26:01.0000] <MrWax>
For example, I would like to know this about web workers

[04:27:00.0000] <Dashiva>
You could check the svn history, I guess

[04:29:00.0000] <MrWax>
where can i?

[04:29:01.0000] <MrWax>
where can i check*

[04:30:00.0000] <MikeSmith>
MrWax: there's a mercurial mirror of the svn repo here:

[04:30:01.0000] <MikeSmith>
https://bitbucket.org/validator/html-spec

[04:33:00.0000] <MikeSmith>
but I don't think it has any useful change-history search feature

[04:33:01.0000] <MikeSmith>
so you probably want to check out the svn sources

[04:33:02.0000] <MikeSmith>
svn checkout http://svn.whatwg.org/webapps/

[04:34:00.0000] <MikeSmith>
then do "svn log" in your workspace

[04:34:01.0000] <MikeSmith>
oh but you want to know about workers

[04:35:00.0000] <MikeSmith>
workers started out as separate spec

[04:35:01.0000] <MikeSmith>
iirc

[04:35:02.0000] <MikeSmith>
http://svn.whatwg.org/webworkers/

[04:37:00.0000] <MikeSmith>
r1 | ianh | 2008-07-09 19:52:54 +0900 (Wed, 09 Jul 2008) | 1 line

[04:37:01.0000] <MikeSmith>
[] (0) Initial checkin (skeleton)

[04:38:00.0000] <MrWax>
MikeSmith: thanks

[04:39:00.0000] <MrWax>
MikeSmith: oh, but if it's not part of the htlm5 specification, how come so much people present it as in the html5 spec?

[04:39:01.0000] <MikeSmith>
the spec normatively references it

[04:39:02.0000] <MikeSmith>
I think

[04:40:00.0000] <MikeSmith>
or maybe it doesn't

[04:40:01.0000] <MrWax>
http://www.whatwg.org/specs/web-workers/current-work/

[04:40:02.0000] <MikeSmith>
but anyway people present all kinds of things as being part of html5

[04:41:00.0000] <MrWax>
I'm helding a small presentation in some days, and specifically i talk about what HTML5 can do for a web app (such as the CMS I develop some additions for)

[04:41:01.0000] <MrWax>
and now I'm trying to filter what's most appropriate

[04:42:00.0000] <MrWax>
I'm trying to give examples etc, but since the short duration of it (20 mins) i decided to just speak through the syntax changes  (why and for what important etc) and in the second 10 mins discuss the 5 (HTML5) APIs that I consider as most valueable potential addition to the CMS

[04:43:00.0000] <MikeSmith>
sounds great

[04:43:01.0000] <MikeSmith>
20 minutes is not a lot of time for a presentation

[04:43:02.0000] <MrWax>
So far, 1 part that is final to present, is Offline Webapps (localStorage, IndexedDB, App Cache)

[04:44:00.0000] <MrWax>
actually 3 seperate APIs 

[04:44:01.0000] <MikeSmith>
yeah

[04:44:02.0000] <MrWax>
WebWorkers is the 2nd thats final

[04:44:03.0000] <MrWax>
and about the other 3 parts im still considering

[04:44:04.0000] <MrWax>
i think contenteditable right?

[04:44:05.0000] <MikeSmith>
it doesn't seem like 10 minutes is enough time to discuss 5 apis

[04:45:00.0000] <MrWax>
i was more thinking to limit the syntax changes to 4-5 minutes and then leave 15 mins for the apis

[04:45:01.0000] <MikeSmith>
contenteditable would seem relevant

[04:46:00.0000] <MikeSmith>
though i think the current interoperability of it is not great

[04:47:00.0000] <MikeSmith>
anyway, I need to step away for a bit

[04:47:01.0000] <MikeSmith>
talk to you later

[04:47:02.0000] <MrWax>
MikeSmith: ok later

[04:49:00.0000] <bga_>
ohlol. i need *rounded corners* in canvas 2d api %)

[04:53:00.0000] <bga_>
seems CanvasRenderingContext2D.prototype is supported in all modern UA.

[04:53:01.0000] <bga_>
good

[06:01:00.0000] <MrWax>
MikeSmith: you're still there?

[06:44:00.0000] <MikeSmith>
MrWax: here now

[07:20:00.0000] <MrWax>
MikeSmith: ah ok

[07:20:01.0000] <MrWax>
still now :p ?

[07:47:00.0000] <MrWax>
MikeSmith: well anyway, the APIs I like to list that make a positive difference to the CMS are now: Offline Webapps (localStorage, IndexedDB, App Cache), File API, Contenteditable, Drag & Drop

[07:47:01.0000] <MrWax>
6 total, I think I'm going to list 10 total and then go into deeper detail on 3 or 5 (considering 10-15 mins is not long)

[07:47:02.0000] <MikeSmith>
sounds good

[07:47:03.0000] <MrWax>
you maybe have any idea for another 4 ?

[07:48:00.0000] <MrWax>
for a modern CMS system improved by HTML5

[07:49:00.0000] <MikeSmith>
drag and drop interoperability is also not great yet

[07:50:00.0000] <variable>
MrWax, just do 5 -> I can't imagine a 15 minute talk explaining 10 APIs

[07:51:00.0000] <MrWax>
variable: and then just go into deeper detail on those 5?

[07:51:01.0000] <variable>
MrWax, yes.

[07:51:02.0000] <MrWax>
ok 

[07:51:03.0000] <variable>
either that or do a top 10 - but don't go really deep on any of them

[07:51:04.0000] <MikeSmith>
I don't think you have time to go into deep detail on anything in that amount of time

[07:52:00.0000] <MrWax>
yea thanks i think i might do this

[07:52:01.0000] <MrWax>
yea 5 is even a lot if you want to go into deep detail

[07:52:02.0000] <MrWax>
variable: but you think those 5 represent a good potential presentation about what HTML5 APIs can improve in our CMS ?

[07:52:03.0000] <variable>
/me is not usually a fan of very short talks for this reason       

[07:52:04.0000] <MikeSmith>
and localstorage and indexedDB are not strictly for offline apps only

[07:53:00.0000] <MrWax>
no, but for example a CMS indexedDB could store the page rigths etc in tables and link this to page contents right?

[07:53:01.0000] <variable>
MrWax, ContentEditable is a key one

[07:54:00.0000] <MrWax>
i mean, this would improve the CMS remarkeable right? making it offline compatible

[07:55:00.0000] <variable>
MrWax, well - for offline editing - like google docs type things

[07:55:01.0000] <MrWax>
variable: how you mean?

[07:56:00.0000] <MrWax>
and drag & drop i ment, that now for our pages we use a lib extension called jsTree

[07:56:01.0000] <variable>
MrWax, the offline stuff isn't particularly useful for the display side of a CMS - but it is quite useful for the editing 

[07:56:02.0000] <MrWax>
variable: sorry i might sound dumb, but can you explain a bit?

[07:57:00.0000] <variable>
MrWax, what are the offline APIs (indexedDB, localStorage, App Cache) useful for in a CMS? 

[07:58:00.0000] <MrWax>
being able to work offline, have data stored in a more structured and efficient way than usually was possible with cookies, and being able to sync the data later

[08:03:00.0000] <webr3>
MrWax, would be nice to cover http caching in their too, it's v underestimated and underconsidered by most dev's

[08:04:00.0000] <MrWax>
webr3: you mean App Cache?

[08:04:01.0000] <MrWax>
where you define which files should be cached

[08:05:00.0000] <webr3>
in addition to app cache, serving static templates, populating them via content editable then PUTting them back to the server as static documents, it's v nice for cms users and ultimately optimized for the network

[08:06:00.0000] <webr3>
localStorage for session stuff rather than using HTTP like it's stateful, indexeddb and app cache leveraged for offline usage etc etc

[08:08:00.0000] <MrWax>
webr3: you mean so you avoid to upload/process anything but the text filled in through CE ?

[08:09:00.0000] <webr3>
yes, and if you use microdata/rdfa/data-* attributes in your templates you can have them entering the machine data (like product names and prices) right in to the template, then your server side apps just lifts the data right from the user-edited product view page as google rich snippets bot etc does.

[08:10:00.0000] <webr3>
effectively, CMS's are a thing of the past, you don't really need them any more, you can just edit an HTML document in browser and PUT it back to the server, hell even shopping baskets etc can all be client side in js now - server apps are needed far less than people think

[08:10:01.0000] <MrWax>
yep 

[08:11:00.0000] <MrWax>
but i think the conversion to this new style of content management won't go so fast i mean, look at how much companies edit their data through traditional CMS systems

[08:11:01.0000] <webr3>
so perhaps show how to make a blog/cms using HTML5 and no server side app (other than something to serve and save files)

[08:11:02.0000] <MrWax>
I think this would require to much detail

[08:12:00.0000] <MrWax>
I also have some other subjects to discuss, like syntax / markup (in the light of parsing by search engines, mobile devices etc) which also should take a me some min utes to explain

[08:12:01.0000] <webr3>
i don't.. just a static html page on the server, make the title and the article contenteditable, local storage to cache the draft, then ajax to PUT it back

[08:12:02.0000] <MrWax>
thanks a lot for your input btw

[08:12:03.0000] <webr3>
np

[08:12:04.0000] <webr3>
/me said ajax, yuck - meant xhr (& cors...)

[08:15:00.0000] <MrWax>
I mean, its maybe something to optinally offer, but the essence now is presenting the above

[08:15:01.0000] <MrWax>
File API pretty much speaks for itself and is not so hard to explain i think

[08:16:00.0000] <MrWax>
same for content editable and drag/drop

[08:16:01.0000] <MrWax>
actually, content editable, how do you think people create in the end the same user experience as with popular inline text editors like TinyMCE ?

[08:16:02.0000] <MrWax>
people=developers

[08:17:00.0000] <MrWax>
Given content editable offers good new functionality but not a rich text editing app

[08:21:00.0000] <MikeSmith>
MrWax: I think the File API is not quite so simple

[08:21:01.0000] <dglazkov>
roc: yt?

[08:22:00.0000] <MikeSmith>
it's three APIs really

[08:23:00.0000] <MrWax>
MikeSmith: i highlight FileReader

[08:23:01.0000] <MikeSmith>
and it is quite a powerful API with some potentially pretty sophisticated applications

[08:23:02.0000] <MikeSmith>
ok

[08:23:03.0000] <MrWax>
MikeSmith: you maybe have any other important things of the FileAPI that could bne explained for a CMS?

[08:25:00.0000] <MikeSmith>
no

[08:28:00.0000] <MikeSmith>
like variable said, I'm not sure how much of any of this has specific relevance to a CMS

[08:29:00.0000] <MrWax>
ok

[08:29:01.0000] <MikeSmith>
which of it

[08:30:00.0000] <MrWax>
hmm

[08:30:01.0000] <roc>
dglazkov: email me, I gotta run

[08:50:00.0000] <MrWax>
MikeSmith: well, the dropping files from the normal file system browser to the CMS is at least 1

[08:51:00.0000] <MikeSmith>
ok

[08:51:01.0000] <MrWax>
and I think it could also be quite logical a CMS executes an operation on a batch of local files i think? i.e. tagging them one by one with canvas

[08:51:02.0000] <MrWax>
(image files for example)

[09:03:00.0000] <webr3>
MrWax, you've seen aloha editor ya?

[09:04:00.0000] <MrWax>
i didn't but im checking it out now

[09:04:01.0000] <MrWax>
thnaks

[09:06:00.0000] <MrWax>
webr3: you think Aloha editor could be of any meaning ? apart from mentioning it as example ?

[09:08:00.0000] <MrWax>
webr3: i mean, could it be seriously considerable for example to write some beta CMS part with aloha as text editor implemented?

[09:08:01.0000] <MrWax>
like TYPO and Drupal did?

[10:28:00.0000] <webr3>
MrWax, yes (sorry not really here), aloha can be, and is used in commercial and opensource projects, it's just as viable as tinymce etc, although less feature rich of course, for now

[10:34:00.0000] <AryehGregor>
brendaneich, where does the current draft of Typed Arrays have endian dependencies?  It looks like it contains an endianness flag to the constructor for multibyte views: https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/doc/spec/TypedArray-spec.html#6

[10:47:00.0000] <bga_>
typed arrays is good but it do not allows store references to Object and strings

[10:47:01.0000] <bga_>
native Array kills js perfomance

[10:48:00.0000] <bga_>
bacause in 99% cases nobody uses holed arrays

[10:48:01.0000] <bga_>
only solid

[11:25:00.0000] <brendaneich>
AryehGregor: DataView is not the issue, aliasing Uint8Array and Uint16Array (e.g.) views of a single buffer are

[11:25:01.0000] <AryehGregor>
Ah.

[11:27:00.0000] <AryehGregor>
Well, worst case is it's de facto required to be little-endian even though that's not specced anywhere yet, and the three people still using big-endian machines to view the web get a performance hit, assuming anyone is still maintaining browsers for those architectures . . . (I guess a few people still use PowerPC Macs?)

[11:27:01.0000] <AryehGregor>
Now, can anyone tell me what "[whatwg] Fwd: Session Management" is about?

[11:29:00.0000] <bga_>
PowerPC is deading

[12:00:00.0000] <jgraham>
 /me notes that TVs and things have web access and it isn't all x86/ARM

[12:01:00.0000] <AryehGregor>
Well, some ARM is big-endian anyway.

[12:02:00.0000] <AryehGregor>
But the point is that if you don't specify it, it will wind up being de facto little-endian, because that's what everyone will write for and test on.

[12:02:01.0000] <AryehGregor>
So browsers on big-endian architectures will have to treat it as little-endian anyway.

[12:04:00.0000] <jgraham>
That could be true, but the point is that it's not (yet) a non-issue since e.g. MIPS sill exists

[12:09:00.0000] <bga_>
i guess, automatic convert to big endian is best way

[12:10:00.0000] <hsivonen>
MikeSmith: clearly, I haven't tested the locator stuff enough :-(

[12:10:01.0000] <bga_>
but it like XHR always encode data to utf8 :(  and you can not send binary data

[12:12:00.0000] <bga_>
keep in mind, there are processors where bit can be 0, 1, 2 :)

[12:14:00.0000] <bga_>
ie we can not standartize even 1 bit :)

[12:20:00.0000] <jgraham>
bga_: Note that in many cases js arrays will be optmised if they are not sparse

[12:21:00.0000] <bga_>
jgraham it desing fail

[12:21:01.0000] <MrWax>
webr3: here?

[12:22:00.0000] <bga_>
invent some super abstract and try to optimize it

[12:27:00.0000] <webr3>
/me is here

[12:27:01.0000] <webr3>
/me , but only for 2 minutes

[13:05:00.0000] <AryehGregor>
The Firefox 4 beta just crashed yet again, and this time it ate the long post I was writing.  That's a hanging offense.

[13:05:01.0000] <AryehGregor>
/me switches back to Chrome

[13:44:00.0000] <dglazkov>
AryehGregor: don't worry, we'll let you down too at some point or another :)

[13:57:00.0000] <AryehGregor>
Doubtless.  :)

[14:12:00.0000] <hsivonen>
MikeSmith: so should <annotation-xml encoding="text/html"> be valid in both HTML and XHTML (now only encoding="application/xhtml+xml" validates)?

[14:31:00.0000] <bga_>
lol webkit "bug". ctx.arc(...); ctx.stroke(); in chrome line visualy is thinner than in ff :)

[14:37:00.0000] <hsivonen>
Does Chrome anti-alias canvas drawing yet?

[14:40:00.0000] <bga_>
hsivonen http://funkyimg.com/u2/558/025/ff4.png http://funkyimg.com/u2/245/712/ch10.png

[14:41:00.0000] <bga_>
ff version looks better imho

[14:44:00.0000] <david_carlisle>
hsivonen: yes (If I understand the question)

[14:47:00.0000] <david_carlisle>
hsivonen: but of course in the xhtml case it would also need to be well formed

[14:56:00.0000] <MikeSmith>
hsivonen: what david_carlisle said :)

[14:59:00.0000] <MikeSmith>
this reminds me, I have the updated MathML2 rnc files in my workspace uncommitted still

[15:04:00.0000] <MikeSmith>
the ones that are based on the canonical MathML3 RNCs but from that I used david_carlisle script to remove the MathML3 only features and get a proper MathML2 subset

[15:05:00.0000] <david_carlisle>
MikeSmith: I did those in about 5 minutes, I recently passed something similar yo Meil Soiffer who wanted a diff mml2 to mm3 for updating daisy and he spotted a couple of extra mml3 attributes I should have filtered out

[15:05:01.0000] <MikeSmith>
oh

[15:05:02.0000] <david_carlisle>
Neil

[15:06:00.0000] <MikeSmith>
which attributes?

[15:06:01.0000] <david_carlisle>
I'll dig out the email...

[15:12:00.0000] <david_carlisle>
actually it wasn't as bad I'd remembered, but he wanted a more exact diff of exactly which attributes had changed on each element, my conversion script took a cruder approach of just throwing out all the completely new attributes

[15:12:01.0000] <david_carlisle>
see thread

[15:12:02.0000] <david_carlisle>
http://lists.w3.org/Archives/Member/member-math/2010Nov/0053.html

[15:13:00.0000] <MikeSmith>
ok

[15:13:01.0000] <MikeSmith>
thanks

[15:13:02.0000] <david_carlisle>
So that "mathml2" schema will let a few attributes on math that previously were only allowed on children of math for example, but  think probably it's  OK for the purpose

[15:17:00.0000] <MikeSmith>
david_carlisle: yeah

[15:18:00.0000] <david_carlisle>
'cause you should be using mml3 anyway:-)

[15:21:00.0000] <MikeSmith>
using mml2 is consistent with we are handling other vocabs

[15:21:01.0000] <MikeSmith>
e.g., using SVG 1.1 instead of 1.2

[15:22:00.0000] <MikeSmith>
it's just that for mml2 validator.nu is still currently using the schema from Furubayashi-san

[15:23:00.0000] <MikeSmith>
which is great mostly but after I fixed a number of bugs in it and figured out there were very likely more waiting that I hadn't found yet, I figured we should replace it with hopefully fewer bugs

[15:30:00.0000] <david_carlisle>
html 4 instead of html5, to be consistent?

[15:30:01.0000] <MikeSmith>
heh

[15:31:00.0000] <david_carlisle>
MikeSmith: Actually if you are going to base the validator around that, probably I ought to give in and admit it exists and distribute it from teh w3.org/math area , grmble

[15:31:01.0000] <david_carlisle>
the

[15:32:00.0000] <MikeSmith>
well, I'd certainly prefer that

[15:32:01.0000] <MikeSmith>
would take it guesswork out of it for us

[15:33:00.0000] <david_carlisle>
I suppose so....

[15:33:01.0000] <david_carlisle>
not tonight though

[15:33:02.0000] <MikeSmith>
ok

[15:33:03.0000] <MikeSmith>
you want me to find a bug or send mail about it or anything?

[15:34:00.0000] <david_carlisle>
nah I'll just do it, but probably best to wake up first

[15:34:01.0000] <MikeSmith>
heh

[15:34:02.0000] <MikeSmith>
OK

[15:51:00.0000] <david_carlisle>
MikeSmith: do you think it should be real mathml2, or should iI fail to filter out the new mathml3 href attribute (which is allowed pretty much everywhere and makes a link. xlink:href support is a bit thin on the ground and I'd like to push adding href rather than pushing to get xlink fixed

[15:54:00.0000] <MikeSmith>
david_carlisle: I think it should be real mathml2, and if downstream users of the schema want to change it to allow the href attribute, they can

[15:54:01.0000] <david_carlisle>
OK I suppose that's a clearer story:-) 


2010-12-13
[17:35:00.0000] <hsivonen>
MikeSmith: fixed setTransitionHander. fixe annotation-xml encoding

[17:35:01.0000] <hsivonen>
MikeSmith: deferring the locator fix until I have access to a proper keyboard

[17:35:02.0000] <MikeSmith>
cool

[17:35:03.0000] <MikeSmith>
hai

[17:35:04.0000] <MikeSmith>
I'm guessing you must be traveling

[17:35:05.0000] <hsivonen>
yes

[17:37:00.0000] <hsivonen>
the locator thing will require a wrapper Locator that delegates to the real Locator once it is ready

[17:39:00.0000] <MikeSmith>
OK

[17:46:00.0000] <heycam>
newbie IRC question: if I join a channel and it says "Cannot send to channel" if I try to say something, what's the deal?

[17:46:01.0000] <heycam>
the mode is "+cnt", whatever that means. :)

[18:17:00.0000] <hsivonen>
I wonder hwat would be a good example to demonstrate HTML-in-annotation-xml with

[18:51:00.0000] <MikeSmith_>
hsivonen: *-+ 

[18:51:01.0000] <MikeSmith_>
oops

[18:51:02.0000] <MikeSmith>
hsivonen: I think there is some example in the MathML3 spec

[18:52:00.0000] <MikeSmith>
or somewhere in some doc produced by the working group

[18:52:01.0000] <MikeSmith>
but as I recall it's not a very good example

[18:53:00.0000] <MikeSmith>
maybe David can provide a better one

[18:55:00.0000] <MikeSmith>
it's still really not clear to me how specifically someone might want to use it in a MathML-in-HTML document

[18:55:01.0000] <MikeSmith>
especially since it's display: none by default

[18:56:00.0000] <MikeSmith>
hsivonen: fwiw, about the locator thing, I just noticed the problem originally when I was messing around with the HtmlSpecBuilder stuff

[18:58:00.0000] <MikeSmith>
so it's nice it resulted in finding an actual parser issue worth fixing, even if it's not super important to have it for the spec build

[18:59:00.0000] <MikeSmith>
but that said, I guess if it's actually fixed, maybe we can user it to get the HtmlSpecBuilder to report line numbers correctly

[19:32:00.0000] <hsivonen>
MikeSmith: ok

[19:33:00.0000] <hsivonen>
Opera's Mac autoupdates is as full of FAIL as it was a year ago :-(

[19:33:01.0000] <hsivonen>
*autoupdater

[19:59:00.0000] <MikeSmith>
hsivonen: yeah, I really wish they would fix that

[20:05:00.0000] <MikeSmith>
man, the crecord extension for mercurial is brilliant

[01:14:00.0000] <MikeSmith>
http://blog.jclark.com/2010/12/microxml.html

[01:41:00.0000] <zcorpan>
i wonder how effective websocket masking is going to be when we start supporting sending Stream, Blob, etc

[01:42:00.0000] <jgraham>
zcorpan: Why would that matter? I thought the whole idea was that you couldn't reliably predict the byte sequence even with free control over the input bytes

[01:42:01.0000] <jgraham>
Since it is just a one-time pad

[01:42:02.0000] <zcorpan>
jgraham: if the attacker has control over the server, he can send the key to the client

[01:44:00.0000] <jgraham>
Yes, clearly. But that requires an attack that is effective even after you have already successfully connected to a server

[01:44:01.0000] <jgraham>
Which I didn't think was the case

[01:45:00.0000] <zcorpan>
if so, why bother masking the frames?

[01:45:01.0000] <jgraham>
I think someone else made the same point

[01:49:00.0000] <jgraham>
I guess if you use something stronger than XOR (e.g. the original AES suggestion) you are still protected in that case because it is hard to find the input giving the desired output, even with the key

[01:59:00.0000] <jgraham>
/me notes that when Greg says "I agree with Simon", he actually means "I disagree with Simon", assuming I am remembering his prior statements correctly and he had not significantly changed his position

[02:13:00.0000] <zcorpan>
we have 'error frames' these days?

[02:15:00.0000] <jgraham>
I didn't think so. I rather suspect they are Greg's invention. But I could be wrong

[02:27:00.0000] <othermaciej>
jgraham: I think he didn't understand what Simon said

[02:27:01.0000] <othermaciej>
the whole new framing thing seems like a huge waste of time

[02:27:02.0000] <othermaciej>
it's greatly increased the complexity of the framing with very little practical benefit

[02:36:00.0000] <jgraham>
Yeah, well it seems like WebSockets is stuck in design-by-leadership-free-committee hell, so pretty much the whole history of humanity supports the notion that it will tend toward useless complexity

[02:47:00.0000] <david_carlisle>
MikeSmith: especially since it's display: none by default

[02:48:00.0000] <MikeSmith>
yeah

[02:48:01.0000] <david_carlisle>
MikeSmith: best to think of it like data- attributes, but allowing structured annotation

[02:48:02.0000] <MikeSmith>
ok

[02:48:03.0000] <MikeSmith>
some concrete examples would help though

[02:48:04.0000] <MikeSmith>
they seem to be hard to come by

[02:48:05.0000] <david_carlisle>
MikeSmith: so for example you may want to give proof hints that appear on user interaction

[02:48:06.0000] <MikeSmith>
ok

[02:48:07.0000] <david_carlisle>
MikeSmith: well yes because it didn't work in browsers in html until recently:-)

[02:49:00.0000] <david_carlisle>
I'll try to make (someone) make some more plausible examples

[02:49:01.0000] <MikeSmith>
that'd be great

[02:54:00.0000] <annevk>
http://blog.regehr.org/archives/320

[03:12:00.0000] <jgraham>
http://blog.jclark.com/2010/12/microxml.html

[03:18:00.0000] <annevk>
btw, css3-images endorses extension sniffing

[03:18:01.0000] <annevk>
someone should make that go away

[03:21:00.0000] <Rik`>
annevk: yes, please

[05:31:00.0000] <karlcow>
http://my.opera.com/karlcow/blog/new-xml-generation

[06:45:00.0000] <Workshiva>
"It would be great if HTML5 provided an alternate way (using attributes or elements) to declare that an HTML document be parsed in standards mode. Perhaps a boolean "standard" attribute on the <meta> element?"

[06:52:00.0000] <Philip`>
<meta http-equiv="X-Standard-Compatible" content="HTML=5"> ?

[06:52:01.0000] <Rik`>
why would it be great ?

[06:55:00.0000] <webben>
it's to allow validation of fragments AFAICT

[06:55:01.0000] <Philip`>
Rik`: So we could get rid of doctypes entirely

[06:55:02.0000] <jgraham>
No it's because MicroXML doesn't want doctypes

[07:03:00.0000] <Rik`>
just render everything in standards mode ?

[07:06:00.0000] <Lachy>
webben, validation of fragments doesn't depend on the parsing mode being known because the parse mode doesn't change the conformance definition.

[07:09:00.0000] <webben>
Lachy: good point.

[07:10:00.0000] <Lachy>
actually, it might. given the case of <p>...<table>

[07:13:00.0000] <zcorpan>
quirks mode is non-conforming, so a fragment validator could assume standards mode

[07:21:00.0000] <Lachy>
jgraham, MicroXML not wanting DOCTYPEs doesn't really explain why having a non-DOCTYPE standards mode switch would be a good idea, since XML just uses standards mode anyway. Any new syntax should just not support quirks mode

[07:22:00.0000] <david_carlisle>
lachy: he wants to use a (micr)xml toolchain to generate html (or if you prefer, ployglot xhtml served as text/html)

[07:23:00.0000] <zcorpan>
use a text/html serializer at the end of the toolchain instead of an xml serializer

[07:24:00.0000] <Lachy>
then stick an HTML5 serialiser on the end of it. No need to add HTML-only syntactic features into MicroXML

[07:24:01.0000] <david_carlisle>
don#t shoot the messenger;-)

[07:24:02.0000] <zcorpan>
BANG!

[07:24:03.0000] <zcorpan>
sorry

[07:25:00.0000] <Lachy>
/me goes off to read about MicroXML

[07:26:00.0000] <david_carlisle>
But requiring an html5-specific serialiser to avoid html5 weirdness is a sign of weakness in html5 design, there's no real way to avoid the conclusion that doctype weirdness and /.. weirdness in html5 is well weird.

[07:27:00.0000] <david_carlisle>
sorry meant to say /> weirdness

[07:28:00.0000] <david_carlisle>
It is standardising unfortunate behaviour forever because it works in the current crop of browsers.

[07:29:00.0000] <david_carlisle>
Of course it is easier for me to say that if I'm not responsible for keeping browsers working on deployed content...

[07:29:01.0000] <zcorpan>
no, because there are billions of web pages that rely on the unforgunate behavior

[07:29:02.0000] <david_carlisle>
see i said that for you

[07:29:03.0000] <zcorpan>
oh, sorry, didn't read carefully :)

[07:30:00.0000] <david_carlisle>
but I'm a pure mathematician by training, and I can work out there are more future documents than past ones, 

[07:30:01.0000] <Philip`>
XML standardised weirdness like doctypes and namespaces without even having the excuse of deployed content :-)

[07:30:02.0000] <zcorpan>
yeah i'm not sure moving to xml is a win in terms of amount of weirdness

[07:31:00.0000] <david_carlisle>
but we like our weirdness, and don't like yours. So there.

[07:31:01.0000] <zcorpan>
heh

[07:31:02.0000] <Lachy>
if MicroXML were to restrict the DOCTYPE to "<!DOCTYPE html>", with no public or system identifiers permitted, then that might be acceptable since it would be a meaningless talisman in XML contexts.

[07:32:00.0000] <david_carlisle>
lachy: er i just said that on james' blog

[07:32:01.0000] <Lachy>
I didn't read the comments yet

[07:33:00.0000] <annevk>
so the idea is to add yet another language?

[07:33:01.0000] <annevk>
oh god

[07:33:02.0000] <annevk>
at least XML5 was backwards compatible

[07:33:03.0000] <annevk>
s/was/is/

[07:34:00.0000] <david_carlisle>
annevk: James's variant is backwards compatible to xml 1.0 as well (compatibility with namespaces less so in some variants)

[07:35:00.0000] <annevk>
david_carlisle, not when it comes to doctypes apparently

[07:35:01.0000] <david_carlisle>
annevk: is the xml5 spec served somewhere as a document (I've seen the source in svn)

[07:36:00.0000] <zcorpan>
it seems like microxml aims to reduce the complexity in controlled environments while xml5 aims to remove fatal errors in browsers

[07:36:01.0000] <david_carlisle>
on doctypes he was just suggesting banning them, which is compatible in one direction

[07:37:00.0000] <Workshiva>
You have to wonder what they were thinking when they made the doctype subsets optional...

[07:37:01.0000] <Lachy>
annevk, microxml just seems to be describing authoring requirements as a strict subset of XML and HTML5 syntax, so AFAICT, it's just trying to generalise the syntactic requirements of polyglot documents

[07:38:00.0000] <Lachy>
it's not redefining any implementation requirements

[07:38:01.0000] <annevk>
david_carlisle, backwards compatible means you can parse all existing documents

[07:38:02.0000] <david_carlisle>
as i said, one direction:-)

[07:38:03.0000] <annevk>
david_carlisle, not that new content can be parsed by old software

[07:38:04.0000] <annevk>
david_carlisle, old software is boring and usually broken

[07:40:00.0000] <Rik`>
annevk: I sent a mail on www-style for the extension sniffing btw

[07:41:00.0000] <annevk>
cool

[07:41:01.0000] <annevk>
I'm on a semi-vacation

[07:41:02.0000] <annevk>
apparently I had too many days left

[07:41:03.0000] <annevk>
but so far I'm failing; on the other hand, this is only day one

[07:41:04.0000] <zcorpan>
annevk: go away

[07:42:00.0000] <annevk>
hehe

[07:50:00.0000] <zcorpan>
http://forums.whatwg.org/viewtopic.php?t=4495 - time to tweak the outline algorithm?

[07:50:01.0000] <zcorpan>
styling is an issue, but i think styling is messed up as it is today anyway

[08:02:00.0000] <AryehGregor>
Man, could spammers at least have enough respect to spam an HTML5 doctype in the HTML5 bug tracker?  http://www.w3.org/Bugs/Public/show_bug.cgi?id=11543

[08:04:00.0000] <Workshiva>
AryehGregor: No

[08:05:00.0000] <AryehGregor>
Well, doesn't hurt to ask.

[08:06:00.0000] <Workshiva>
If we're going to ask things of the spammers, we should ask them to spam with actual content instead of an empty document :)

[08:09:00.0000] <Lachy>
Workshiva, http://xkcd.com/810/

[09:07:00.0000] <TabAtkins>
gsnedders: Your shirts came in.

[09:12:00.0000] <annevk>
Nintendo should really make a controller that does not give you a sore thumb

[09:13:00.0000] <annevk>
This has been bad since the NES

[09:14:00.0000] <TabAtkins>
I've never found a controller *anywhere* that doesn't make my thumb sore with sufficient use.

[09:15:00.0000] <TabAtkins>
That said, old d-pads were the worst.

[09:17:00.0000] <jgraham>
/me obviously doesn't play enough

[09:18:00.0000] <TabAtkins>
I didn't realize how much I relied on my 360 until it broke and I went without it for three weeks.  ;_;

[09:18:01.0000] <TabAtkins>
On the plus side, we're playing through a fun PS2 rpg that we never got around to earlier.

[09:18:02.0000] <annevk>
Donkey Kong!

[09:18:03.0000] <JonathanNeal>
What do you guys think of http://www.iecss.com/whatwg-base.css so far?

[09:19:00.0000] <TabAtkins>
JonathanNeal: How has it changed since last time?

[09:19:01.0000] <JonathanNeal>
Opps, probably a better question for #html5, for this chan I would have meant http://www.iecss.com/whatwg.css

[09:19:02.0000] <JonathanNeal>
Yea, -base is based on current a grade browser settings, and only lists the offsets.

[09:20:00.0000] <TabAtkins>
The ":section(n) hn" sets of rules aren't correct.  h5 can still be a top-level heading in any level of section, if it's the highest-level one.

[09:20:01.0000] <TabAtkins>
You just need a :heading(n) pseudo.

[09:23:00.0000] <TabAtkins>
Though, hm.  You still want <hn> to have the legacy behavior in un-sectioned content.  So I suspect you want to do just a set of "hn, :heading(n)" rules, but in *reverse*, starting with h6 and going down to h1.

[09:23:01.0000] <TabAtkins>
That way precedence will take over and make, say, an h5 look like a top-level heading if it really is one.

[09:23:02.0000] <TabAtkins>
While still letting it look like an h5 in the absence of sections.

[09:24:00.0000] <TabAtkins>
Also, how willing are you to put in less-established selectors?  Is this intended to be usable *now*?

[09:25:00.0000] <TabAtkins>
Hmm, considering your use of pseudos and odd values on img and video, maybe not?

[09:25:01.0000] <JonathanNeal>
whatwg is meant to be latest and greatest theory.

[09:25:02.0000] <JonathanNeal>
So it is not subject to the reality of current browser css engines.

[09:26:00.0000] <JonathanNeal>
-base is subject.

[09:26:01.0000] <TabAtkins>
Okay.  Then you can replace a big chunk of the list styles by using :any().

[09:27:00.0000] <JonathanNeal>
Maybe I'm wrong, but I think the styling of headings within sections (without using a classname helper) would like quadrouple the size of the css file without :section type selectors.

[09:27:01.0000] <TabAtkins>
Nah, I just explained how to do it.

[09:27:02.0000] <JonathanNeal>
TabAtkins, hmm mind teaching me what you mean?  I'm afraid I don't understand.

[09:27:03.0000] <TabAtkins>
You need :heading(n) selectors, is all.

[09:27:04.0000] <TabAtkins>
For headings, or lists?

[09:28:00.0000] <JonathanNeal>
Are you able to give me line numbers?

[09:28:01.0000] <TabAtkins>
For which?

[09:28:02.0000] <JonathanNeal>
If you don't mind, I'd like to start with headings and then move on to lists.

[09:28:03.0000] <TabAtkins>
Okay.

[09:28:04.0000] <JonathanNeal>
I really appreciate it.  I like to keep this list updated.

[09:28:05.0000] <TabAtkins>
So, line 223 through 260.

[09:29:00.0000] <JonathanNeal>
yes

[09:29:01.0000] <TabAtkins>
You should be able to replace each chunk with just a pair of selectors, "hn, :heading(n)", where :heading(n) is a hypothetical pseudo that selects that nth level heading in a given section.

[09:29:02.0000] <TabAtkins>
But list them in reverse, from h6 to h1.

[09:29:03.0000] <JonathanNeal>
so h6 would be h6, :heading(6), yes?

[09:29:04.0000] <TabAtkins>
That way, in unsectioned content, they'll all work normally.  But in sectioned content, a numbered heading will act like a higher-level heading if appropriate.

[09:30:00.0000] <TabAtkins>
Yeah.

[09:30:01.0000] <TabAtkins>
I need to at least *start* a Selectors 4 at some point so we have something to refer to here.

[09:31:00.0000] <JonathanNeal>
If you refresh and reference the new lines 224 - 152 I hope I've implemented this correctly.

[09:32:00.0000] <JonathanNeal>
ahem, 224-252

[09:32:01.0000] <TabAtkins>
Yeah, looks good.

[09:32:02.0000] <JonathanNeal>
Awesome, want to help me with the lists now?  Thank you.

[09:32:03.0000] <TabAtkins>
You can do the same with font-size in 324-361

[09:34:00.0000] <JonathanNeal>
Go ahead and reference the new lines 324-252

[09:35:00.0000] <TabAtkins>
yup.

[09:35:01.0000] <TabAtkins>
Okay, now, 411-451.

[09:35:02.0000] <JonathanNeal>
What about them?

[09:35:03.0000] <TabAtkins>
Well, first, 411-419 can be replaced with just ":any(menu, ol, ul) :any(dl, menu, ul)"

[09:36:00.0000] <TabAtkins>
(Is dl correct there?)

[09:36:01.0000] <JonathanNeal>
I just checked, that style is @ http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#the-css-user-agent-style-sheet-and-presentational-hints

[09:37:00.0000] <JonathanNeal>
so should I add dl?

[09:38:00.0000] <TabAtkins>
Hm, yeah.  Okay.

[09:38:01.0000] <TabAtkins>
Ah, dir is missing.

[09:38:02.0000] <TabAtkins>
So ":any(dir, menu, ol, ul) :any(dl, menu, ul)"

[09:38:03.0000] <TabAtkins>
And then similar for the 3-deep version.

[09:39:00.0000] <JonathanNeal>
Can we back up one bit, so from 411-419 change that to :any(dir, menu, ol, ul) ?

[09:40:00.0000] <JonathanNeal>
Also, is "dir" an html5 valid element?

[09:44:00.0000] <TabAtkins>
It's obsolte, but yeah.

[09:45:00.0000] <MrWax>
how much exact new tags are there currently in the html5 spec?

[09:45:01.0000] <MrWax>
does anyone know where i can find this?

[09:45:02.0000] <TabAtkins>
MrWax: Check the element index in the spec.

[09:46:00.0000] <TabAtkins>
MrWax: http://www.whatwg.org/specs/web-apps/current-work/complete/section-index.html#elements-1

[09:46:01.0000] <TabAtkins>
JonathanNeal: Use the line I gave for 411-419 - ":any(dir, menu, ol, ul) :any(dl, menu, ul)".

[09:47:00.0000] <MrWax>
TabAtkins: i dont have time to count all

[09:47:01.0000] <MrWax>
isnt there any other reference?

[09:47:02.0000] <TabAtkins>
MrWax: I don't have time to list them all.

[09:48:00.0000] <JonathanNeal>
TabAtkins, done (but if you don't mine with one alternate, the exclusion of dir as this list ignores removed elements from the html5 spec.

[09:49:00.0000] <TabAtkins>
JonathanNeal: k, now just use a similar rule for the 3-deep one ":any(menu, ol, ul) :any(menu, ol, ul) :any(dl, menu, ul)"

[09:50:00.0000] <JonathanNeal>
Done, the new lines are 411-417

[09:51:00.0000] <TabAtkins>
You just replaced 411 with the 3-deep version for some reason.

[09:52:00.0000] <JonathanNeal>
foolishness, fixed.

[09:52:01.0000] <JonathanNeal>
Or, a typo rather.

[09:52:02.0000] <TabAtkins>
Okay, cool.

[09:52:03.0000] <JonathanNeal>
So this is the latest and greatest again?

[09:53:00.0000] <TabAtkins>
<img> and <video> can just stick with auto width and height.  The 300px/150px initial size and the proper size negotiation are handled automatically by CSS.

[09:53:01.0000] <jgraham>
/me wonders how UndoManager is supposed to work

[09:54:00.0000] <JonathanNeal>
Would this be the same for canvas?

[09:54:01.0000] <TabAtkins>
Hmm.  Yeah, probably.  Are @width and @height covered by another rule elsewhere?

[09:55:00.0000] <JonathanNeal>
For some reason I thought 300px was defined by you guys.  I guess just most browsers are deciding that, but it isn't expressed by whawg.

[09:56:00.0000] <TabAtkins>
Well, never mind, yes, CSS handles it.  The width and height of the canvas are part of its natural size.

[09:56:01.0000] <TabAtkins>
Which is taken into account during the size negotiation in CSS.

[10:01:00.0000] <JonathanNeal>
To be clear, nowhere does it say that the presentation of canvas or video should be 300x150?

[10:01:01.0000] <TabAtkins>
That's implicit in the size negotiation algorithm in CSS now.  

[10:01:02.0000] <TabAtkins>
http://dev.w3.org/csswg/css3-images/#sizing Check out the "default image sizing area" bit.

[10:02:00.0000] <JonathanNeal>
TabAtkins, sure, and what about for audio?

[10:02:01.0000] <JonathanNeal>
line 484

[10:02:02.0000] <TabAtkins>
That one needs a special rule, yes, because it acts differently than other replaced elements.

[10:02:03.0000] <JonathanNeal>
Will the size negotiations take over for img:complete, video:poster, and video:metadata as well?

[10:02:04.0000] <TabAtkins>
Yes.

[10:03:00.0000] <TabAtkins>
Lemme check to see if html defines things correctly for that to work...

[10:03:01.0000] <JonathanNeal>
All right, I will strip them all out.  For the remaining "audio[controls]" will the width: 300px be automatic?

[10:04:00.0000] <TabAtkins>
Yes, that falls out of the fact that audio only has a height and not a ratio.

[10:04:01.0000] <JonathanNeal>
Updated 484 - 490

[10:04:02.0000] <JonathanNeal>
Might wanna fuse the "Media" section into other sections then.

[10:05:00.0000] <JonathanNeal>
I guess it's okay where it is.

[10:13:00.0000] <gsnedders>
annevk: I found the SNES to not be too painful when playing Donkey Kong for hours a few months back

[10:13:01.0000] <gsnedders>
(Obviously I'm too young to know about the original NES)

[10:14:00.0000] <JonathanNeal>
gsnedders, bummer, I loved the NES.

[10:15:00.0000] <JonathanNeal>
Would there be an intelligent name for the grouping of menu, ol, and ul?

[10:16:00.0000] <Dashiva>
list?

[10:16:01.0000] <JonathanNeal>
Dashiva, I thought so as well, but one that distincts those elements from "dl"

[10:17:00.0000] <Dashiva>
Array :P

[10:23:00.0000] <JonathanNeal>
Maybe I don't understand what the meaning is with http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#margins-and-padding

[10:24:00.0000] <JonathanNeal>
and http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#punctuation-and-decorations

[10:25:00.0000] <TabAtkins>
What are you confused about, precisely?  I don't understand.

[10:26:00.0000] <JonathanNeal>
Specifically with list-style-type: disc, circle, and square, and why those combinations of elements should produce those styles.

[10:27:00.0000] <TabAtkins>
I don't know why "dl" is involved, but otherwise it's just all the types of lists that produce markers.

[10:27:01.0000] <TabAtkins>
Well, dl makes sense for the margins and padding section.

[10:29:00.0000] <JonathanNeal>
So IF there were a :list pseudo element THEN ":any(menu, ol, ul) :any(dl, menu, ul)" might read ":list :list" ?

[10:30:00.0000] <TabAtkins>
Sure, but why would we need :list?  It's only purpose would be to simplify UA stylesheets, because normal people don't need to group lists almost ever.

[10:30:01.0000] <TabAtkins>
Also, :any() works pretty well by itself.

[10:30:02.0000] <JonathanNeal>
I know and I agree, but so that I understand what it is doing.

[10:30:03.0000] <TabAtkins>
Actually, that wouldnt' work anyway.

[10:30:04.0000] <TabAtkins>
You don't want to set list-style to "square" for ol.

[10:31:00.0000] <TabAtkins>
There's a reason the last :any() is different from the previous ones.

[10:36:00.0000] <JonathanNeal>
TabAtkins, that makes sense to me, thanks.

[10:37:00.0000] <JonathanNeal>
Haha. I have to be careful not ot accidently think I forgot something and add a quirksmode style.  I almost added form { margin: 0 0 1em; }

[10:38:00.0000] <JonathanNeal>
*not to

[11:01:00.0000] <TabAtkins>
Hrm @ the <comment> suggestion.

[11:01:01.0000] <TabAtkins>
New sectioning element, semantics of a response to the nearest parent <article>?

[11:02:00.0000] <JonathanNeal>
@ me?

[11:02:01.0000] <TabAtkins>
No, at the mailing list.

[11:03:00.0000] <TabAtkins>
At you, I just confirmed that HTML does indeed define <video> correctly to let the CSS size negotiation work properly.

[11:07:00.0000] <hober>
I don't see what <comment> gets us that <article>...<article>...</article></article> doesn't

[11:07:01.0000] <TabAtkins>
The added semantic of user-generated content, as separate from the author-generated content from the parent article?

[11:08:00.0000] <TabAtkins>
Dunno if it's sufficiently useful to use for search engines and such to be worthwhile.

[11:08:01.0000] <TabAtkins>
Or if it would potentially help screen-readers do heading/section-based navigation.

[11:12:00.0000] <Philip`>
I thought IE already implemented <comment>

[11:12:01.0000] <hober>
I'm not sure about the user- v. author-generated distinction

[11:12:02.0000] <TabAtkins>
Aw, dammit.

[11:12:03.0000] <Philip`>
as a synonym for <!--...-->

[11:12:04.0000] <TabAtkins>
yeah, they did.

[11:12:05.0000] <gsnedders>
WTF?

[11:12:06.0000] <TabAtkins>
Only through 6, though.

[11:12:07.0000] <hober>
e.g., consider a Planet aggregator that displays comments from the blogs it aggregates

[11:13:00.0000] <TabAtkins>
So, probably can be ignored.  I'll bring it up in the thread, though.

[11:13:01.0000] <TabAtkins>
hober: Yeah, I'm not sure about it either.  I'd like to see if other people think there's a useful distinction to be made there.

[11:15:00.0000] <hober>
*nod*

[11:16:00.0000] <webr3>
not a fan of comment, can't keep adding new elements to HTML for every type of textual content (article, post, comment, wiki, news, micropost, message) etc etc, where do you stop?

[11:16:01.0000] <webr3>
better to have one element that can be augmented with a type

[11:17:00.0000] <TabAtkins>
Not a fan of one element that can be augmented with a type, can't keep adding new types to HTML for every type of textual content (article, post, comment, wiki, news, micropost, message) etc etc, where do you stop?

[11:18:00.0000] <webr3>
<article itemtype="<anything>"> you never need to stop, keeps HTML simple

[11:18:01.0000] <TabAtkins>
<anything> isn't helpful.

[11:19:00.0000] <TabAtkins>
The whole point of the semantic elements is to, you know, have semantics - a common public meaning that everyone knows about.

[11:19:01.0000] <webr3>
but that's an endless set..

[11:19:02.0000] <TabAtkins>
Not really.

[11:20:00.0000] <TabAtkins>
The existing set covers everything.  We can slice more finely if it's sufficiently useful (for example, by subclassing <article> into <comment>), but we don't have to jump down the rabbit-hole.

[11:20:01.0000] <webr3>
what's the point in microdata then? just keep adding new elements and attributes..

[11:21:00.0000] <TabAtkins>
Microdata's for exposing visible data in a machine-readable way.  It doesn't do anything semantically.

[11:23:00.0000] <webr3>
so what's the semantic distinction being made between an article and a comment?

[11:24:00.0000] <TabAtkins>
That it's an article, or a comment on the article.  The latter is a user-generated response to the author-generated content.

[11:25:00.0000] <webr3>
and if the author comments? or the comment is on a comment?

[11:25:01.0000] <webr3>
or if the article is a comment on another article on another site?

[11:25:02.0000] <TabAtkins>
The former still carry the same basic semantics.  The latter is probably too minor to distinguish - just call it an <article> like normal.

[11:26:00.0000] <hober>
both IE6 and IE7 treat <comment> as comments

[11:26:01.0000] <gsnedders>
IE8?

[11:26:02.0000] <TabAtkins>
IE8 doesn't.

[11:27:00.0000] <Philip`>
What about quirks mode?

[11:28:00.0000] <TabAtkins>
I think they actually use the old parser in their compat modes, so it'll probably work there.

[11:29:00.0000] <TabAtkins>
Oh wait, IE8 does.  I was using IE9 beta accidentally.

[11:29:01.0000] <TabAtkins>
IE9 doesn't treat it as a comment.

[11:42:00.0000] <MrWax>
the fact that html5 is backwards compatible mainly points in the fact that all uses of html4 will still be interpretable using the new doctype right?

[11:43:00.0000] <TabAtkins>
Well, ignore the doctype.  The HTML5 *parser* will indeed parse html4 and earlier documents in a compatible manner.

[14:49:00.0000] <karlcow>
http://developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/

[14:58:00.0000] <MrWax>
Could anyone maybe give an example what the worker api could do/fix for a CMS ?

[15:00:00.0000] <Hixie>
you could make the CMS do all its network communication in the background and have it cache data locally to make it seem faster

[15:02:00.0000] <mgdm>
I use a CMS of sorts at work that does that sort of thing in Flash :|

[15:21:00.0000] <JonathanNeal>
Ahoy

[15:22:00.0000] <TabAtkins>
Yo.

[15:22:01.0000] <TabAtkins>
/me just had to school someone on proper password storage.

[15:23:00.0000] <bga_>
stickers? :)

[15:35:00.0000] <AryehGregor>
TabAtkins, as in, salted hashing?

[15:35:01.0000] <TabAtkins>
AryehGregor: Yes.

[15:35:02.0000] <AryehGregor>
I'm experimenting right now with using hash functions that are particularly resistant to brute-forcing.

[15:35:03.0000] <TabAtkins>
Someone was trying to claim that salts are unnecessary if you use a sufficiently expensive hashing algorithm.

[15:35:04.0000] <TabAtkins>
I pointed out that they're stupid.

[15:35:05.0000] <AryehGregor>
Salts are *less* useful if you use a very cheap hash.

[15:36:00.0000] <AryehGregor>
But using an expensive hash is a good idea anyway.

[15:36:01.0000] <AryehGregor>
I'm trying to make a hash that's expensive on GPUs as well as CPUs.

[15:36:02.0000] <bga_>
i use http://passwordsafe.sourceforge.net/

[15:36:03.0000] <TabAtkins>
Sure, but doubling the size of your salt with a cheap hash is basically free for you but makes bruteforcing much more expensive.  Using a more expensive hash is expensive for you and make bruteforcing much more expensive.

[15:37:00.0000] <AryehGregor>
Because you can just iterate a hash a few ten thousand times, PBKDF style.  But you can still crack those very quickly on a GPU, at least compared to a CPU (>10x speedup).

[15:37:01.0000] <AryehGregor>
The size of your salt is practically irrelevant to brute-forcing attempts.  If your attacker has the hash, they probably have the salt too.

[15:37:02.0000] <TabAtkins>
Combining the two can be good, but when you want the hash to not spin your server's cpu for extended periods of time, just use a longer salt.

[15:37:03.0000] <AryehGregor>
The point of salts is only to avoid rainbow table attacks.

[15:37:04.0000] <TabAtkins>
Yes?

[15:37:05.0000] <Hixie>
TabAtkins: if you're interested in publishing the specs on the TR/ page, what's the easiest way I can help you with that?

[15:37:06.0000] <Hixie>
easiest for you, i mean

[15:37:07.0000] <AryehGregor>
I.e., make the attack O(M*N) instead of O(M + N), where M is the number of passwords and N is the number of passwords you're trying.

[15:38:00.0000] <AryehGregor>
It doesn't matter how long or short your salts are, as long as they're all different.

[15:38:01.0000] <TabAtkins>
Hixie: I have no idea.  I don't know what your tooling is, or how you currently push things to TR.

[15:38:02.0000] <Hixie>
at this point i don't

[15:38:03.0000] <AryehGregor>
Server CPU usage by hash functions is practically irrelevant, since you only have to run the algorithm on login and registration.  As long as it takes less than a few hundred milliseconds, it's fine.

[15:38:04.0000] <Hixie>
previously i had a system whereby i would set up all the boilerplate and then hit a switch in my postprocessor

[15:39:00.0000] <Hixie>
and it would use the appropriate boilerplate and replace the dev.w3.org draft with the appropriate text

[15:39:01.0000] <TabAtkins>
AryehGregor: The dude I was reading was saying to use bcrypt set to really expensive, to it took a good half-second to hash anything.

[15:39:02.0000] <AryehGregor>
But iterating it a zillion times (or otherwise slowing it down) will seriously hamper an attacker.  My GPU cracker went from 220 million passwords per second to about 10,000 per second when I just iterated the hash a bunch of times.

[15:39:03.0000] <AryehGregor>
But it was 120/second/core for a CPU.  So I'm looking to limit the GPU further without hurting CPU users.

[15:39:04.0000] <AryehGregor>
TabAtkins, I can't parse that sentence.

[15:40:00.0000] <TabAtkins>
s/to/so/

[15:40:01.0000] <AryehGregor>
" was saying to use bcrypt set to really expensive"?

[15:40:02.0000] <TabAtkins>
Apparently you can specify how expensive bcrypt should be?

[15:40:03.0000] <AryehGregor>
Probably just by iterating it lots of times.

[15:41:00.0000] <AryehGregor>
You should be able to tune it for your needs.

[15:41:01.0000] <TabAtkins>
kk

[15:41:02.0000] <AryehGregor>
Iterating 32,768 times seems to take some tens of milliseconds on a typical CPU for SHA1.

[15:41:03.0000] <AryehGregor>
Like maybe 100 ms.

[15:41:04.0000] <AryehGregor>
Which is fine for real-world uses, but messes up attackers quite a lot.

[15:42:00.0000] <JonathanNeal>
TabAtkins, who else might be a good resource here to review the whatwg css file?

[15:42:01.0000] <Hixie>
review the whatwg css file?

[15:43:00.0000] <Hixie>
hmm

[15:43:01.0000] <JonathanNeal>
It's a css file I've been working on and maintaining for a few months tracking the html5 ua stylesheet and presentational hints @ http://www.iecss.com/whatwg.css

[15:43:02.0000] <Hixie>
neat

[15:44:00.0000] <Hixie>
TabAtkins: here's what i'm thinking

[15:44:01.0000] <Hixie>
TabAtkins: i put the header files somewhere you can edit

[15:44:02.0000] <Hixie>
TabAtkins: and i make my tool grab the status and date of publication from those files somehow

[15:44:03.0000] <Hixie>
TabAtkins: then to do the publication stuff all you have to do is tweak the files accordingly, and then give me a heads-up and i'll regen the spec with those files

[15:46:00.0000] <TabAtkins>
If that's easy for you, it sounds easy to me.

[15:46:01.0000] <Hixie>
k

[15:46:02.0000] <Hixie>
let me figure out how to do the second bit, and then i'll find a place to put the files

[15:46:03.0000] <TabAtkins>
JonathanNeal: Not sure who else would be good.  Maybe just send an email to whatwg?

[15:47:00.0000] <JonathanNeal>
Yea, I guess so.  Cool, well, thank you.

[15:47:01.0000] <Philip`>
AryehGregor: How are you trying to make it worse on GPUs?

[15:48:00.0000] <AryehGregor>
Philip`, my current theory is to salt everything with a large fixed hash, say 1 MB, since GPUs don't have memory caches.  The problem with this is that you could conceivably just do an ad hoc memory cache in shared contexts.  Plus I think I heard that next-gen NVIDIA GPUs do have some memory cache.

[15:48:01.0000] <AryehGregor>
But it's worth a try.

[15:49:00.0000] <AryehGregor>
If I make it something like 8 or 16 MB, it will kill a naive CPU implementation's L2 cache also.  But that can be worked around pretty easily.

[15:49:01.0000] <AryehGregor>
Just do a lot of hashes in parallel, reading in the salt a small amount at a time.

[15:50:00.0000] <AryehGregor>
I considered making the code very branchy, so that GPUs would run at 1/8 speed or so, but I didn't think of a good way to do that.

[15:50:01.0000] <AryehGregor>
/me is writing his OpenCL program to test all this out right now, and seriously wants to say impolite things to the people who wrote NVIDIA's OpenCL compiler.

[15:51:00.0000] <AryehGregor>
When compiling my OpenCL programs, I have so far had: segmentation faults (in compilation!), cryptic error messages, infinite loops, and one variable mysteriously just having the wrong value for no apparent reason.

[15:51:01.0000] <Philip`>
Maybe find some way to make it rely on random access to a very large buffer, so the cache used for one hash can't be used in parallel for another

[15:52:00.0000] <AryehGregor>
Interesting thought.

[15:52:01.0000] <Philip`>
(so you'll be bottlenecked by memory bandwidth before you can exploit the GPU's parallel computation power)

[15:52:02.0000] <AryehGregor>
Like use the last n bits of the last byte of the hash to index into the buffer.

[15:53:00.0000] <Philip`>
(whereas a normal CPU computing one hash at a time won't be disadvantaged much)

[15:53:01.0000] <AryehGregor>
The problem is that one constraint is this has to be fast enough when implemented in PHP.

[15:53:02.0000] <AryehGregor>
So there's a very sharp limit to how much custom execution logic I can have.

[15:54:00.0000] <Philip`>
So you need a PHP implementation to be fast and a GPU implementation to be slow?

[15:54:01.0000] <TabAtkins>
Note, the "fast" and "slow" are measured on different timescales.

[15:55:00.0000] <AryehGregor>
I need a PHP implementation to take under (roughly) 100 ms per hash.  Given that constraint, I want cracking to be as slow as possible.

[15:55:01.0000] <AryehGregor>
On either CPU or GPU.

[15:55:02.0000] <AryehGregor>
Particularly GPU, since that's likely to be faster.

[15:57:00.0000] <Philip`>
You could force users to enter longer passwords, since it'll take no longer to compute the hash but exponentially longer to crack

[15:58:00.0000] <AryehGregor>
That's orthogonal, though.

[15:58:01.0000] <Philip`>
It solves your problem :-)

[15:58:02.0000] <bga_>
AryehGregor http://en.wikipedia.org/wiki/Comparison_of_cryptographic_hash_functions GOST hash is hardest

[15:58:03.0000] <Philip`>
No point worrying about GPUs being 10x faster if you find a way to make cracking half a million times slower without changing the algorithm

[15:58:04.0000] <AryehGregor>
bga_, "hardest"?

[15:59:00.0000] <AryehGregor>
Philip`, it's incompatible with our requirements.  We want users to be able to input short passwords if they want.

[15:59:01.0000] <bga_>
2^105 to find collision


2010-12-14
[16:00:00.0000] <AryehGregor>
bga_, who's talking about collision?

[16:01:00.0000] <bga_>
AryehGregor and it has slowest speed of calculation

[16:01:01.0000] <AryehGregor>
That's irrelevant, you can iterate the function to get slower calculation speed.

[16:01:02.0000] <AryehGregor>
The choice of hash function is more or less immaterial to this discussion.

[16:01:03.0000] <AryehGregor>
Since they're all designed to be relatively fast.

[16:03:00.0000] <jcranmer>
hash(msg) = 1

[16:04:00.0000] <bga_>
AryehGregor GOST is designed to be as slow as possible. it uses bigints

[16:04:01.0000] <bga_>
look at http://en.wikipedia.org/wiki/GOST_(hash_function)

[16:05:00.0000] <AryehGregor>
Are bigints supposed to be slow?

[16:05:01.0000] <AryehGregor>
People use 64-bit machines these days, you know.

[16:06:00.0000] <AryehGregor>
The page you link to does not claim GOST is designed to be as slow as possible.

[16:06:01.0000] <AryehGregor>
Indeed, that would be pretty ridiculous.

[16:08:00.0000] <Hixie>
foolip: yt?

[16:08:01.0000] <bga_>
when compared different hash functions i found GOST most hard to implement and calculation

[16:09:00.0000] <Hixie>
you implied in http://www.w3.org/Bugs/Public/show_bug.cgi?id=10320#c20 that TTML has an equivalent to WebSRT's voice feature and that it was a good solution, but I can't find it in the spec http://www.w3.org/TR/ttaf1-dfxp/

[16:09:01.0000] <Hixie>
foolip: am I looking in the wrong place?

[16:10:00.0000] <bga_>
but ok. it just constant C - time of calculation

[16:10:01.0000] <jacobolus>
is it true that it's impossible to get gecko + webkit's linear gradients to do the same thing for a diagonal gradient unless the precise box dimensions are known?

[16:11:00.0000] <jacobolus>
it seems like gecko uses point + angle, while webkit use 2 points

[16:11:01.0000] <AryehGregor>
/me points jacobolus to TabAtkins 

[16:11:02.0000] <jacobolus>
but the points are defined relative to the edges of the box the gradient is being drawn in

[16:12:00.0000] <jacobolus>
so as that box changes shape, the webkit gradient changes angle, while the gecko gradient (defined in terms of angle) obviously doesn't

[16:13:00.0000] <jacobolus>
this seems like the sort of thing that would be pretty easy to avoid with some minimal communication between devs, no?

[16:13:01.0000] <jacobolus>
:p

[16:15:00.0000] <AryehGregor>
jacobolus, the WebKit variant was the original, nonstandard way of doing things.  Mozilla follows a draft spec written by TabAtkins.  Once everyone is satisfied with the draft, WebKit will implement that syntax too.

[16:16:00.0000] <AryehGregor>
Or at least so I understand it.

[16:16:01.0000] <AryehGregor>
Then vendors can remove prefixes.

[16:16:02.0000] <jacobolus>
aha

[16:16:03.0000] <jacobolus>
AryehGregor: you know where that draft spec lies?

[16:17:00.0000] <AryehGregor>
jacobolus, http://dev.w3.org/csswg/css3-images/#gradients

[16:17:01.0000] <jacobolus>
oh, http://dev.w3.org/csswg/css3-images/#gradients

[16:17:02.0000] <jacobolus>
:)

[16:17:03.0000] <jacobolus>
thx

[16:18:00.0000] <jacobolus>
AryehGregor/TabAtkins: so in the spec'd version, a top left to bottom right gradient now requires knowing image dimensions and doing some trigonometry?

[16:18:01.0000] <AryehGregor>
Don't ask me, I have no idea.

[16:18:02.0000] <AryehGregor>
I think I used gradients once.

[16:18:03.0000] <AryehGregor>
When doing my website.

[16:18:04.0000] <bga_>
wow md2 http://www.php.net/manual/en/function.hash.php#89574

[16:20:00.0000] <jacobolus>
oh, I see, if no angle is specified, and the first point is in a corner/middle of a side, the gradient will point at the opposite corner. interesting

[16:21:00.0000] <jacobolus>
okay, this version seems reasonable enough to me. does anyone have any idea how long it will take webkit to implement to this new spec?

[16:22:00.0000] <jacobolus>
on the other hand, the radial gradients in TabAtkins' spec are dramatically less flexible than the webkit ones, so far as I can tell

[16:23:00.0000] <jacobolus>
the linear gradients are also less flexible, but if you know box dimensions they can be made to do most of what the webkit ones can

[16:23:01.0000] <Hixie>
hmm

[16:23:02.0000] <AryehGregor>
jacobolus, best wait for TabAtkins to get back, he'll probably have answers to all these things.

[16:23:03.0000] <jacobolus>
okay :)

[16:24:00.0000] <jacobolus>
there's probably plenty of email discussion about it someplace

[16:24:01.0000] <Hixie>
if we make voices in websrt be marked up as <v speaker's name>, and if we make ::cue-part() take a whole selector rather than the weird thing it has now, i wonder how we do voice selection

[16:24:02.0000] <AryehGregor>
Yes, it's been discussed a lot on www-style.

[16:24:03.0000] <Hixie>
::cue-part(v.speaker\'s\ name) ?

[16:24:04.0000] <Hixie>
that's pretty lame...

[16:25:00.0000] <Hixie>
also if we allow multiple voices per cue, how do we style the cue's outer box based on the voice? hmmm

[16:25:01.0000] <AryehGregor>
jacobolus, https://bugs.webkit.org/show_bug.cgi?id=28152

[16:26:00.0000] <jacobolus>
AryehGregor: thanks

[16:27:00.0000] <jacobolus>
I'm trying to make a better gradient definer interface dealie, that will try to graph some perceptually-relevant color attributes along the gradient, so I'm trying to figure out how the various gradients actually work :)

[16:27:01.0000] <AryehGregor>
/me wtfs at Thom's post, 4000 words in a bug comment

[16:28:00.0000] <paul_irish>
jacobolus: i'd be very interested in seeing that, if you're looking to share

[16:28:01.0000] <jacobolus>
paul_irish: haven't started implementation yet :)

[16:28:02.0000] <paul_irish>
btw, thoroughly enjoyed your HSL HSV article, which i read through the other day

[16:28:03.0000] <jacobolus>
ah, thanks!

[16:28:04.0000] <jacobolus>
paul_irish: if you have any comments, I'd appreciate any feedback

[16:29:00.0000] <paul_irish>
no specific comments, just smiles.

[16:29:01.0000] <jacobolus>
I think the only real problem w/ the article as it stands is that the lead and first section or two could be more newbie-friendly

[16:29:02.0000] <jacobolus>
thanks :)

[16:29:03.0000] <jacobolus>
also at some point the figures need to be renumbered to reflect their current order

[16:30:00.0000] <jacobolus>
paul_irish: sometime in the future I want to write a better article about CIELAB, and flesh out the one about the Munsell system

[16:35:00.0000] <othermaciej>
AryehGregor: which bug comment is that?

[16:35:01.0000] <othermaciej>
oh, I see

[16:35:02.0000] <othermaciej>
goodness me that'sa lot

[16:37:00.0000] <bckenny>
jacobolus: where's this article? :)

[16:38:00.0000] <hsivonen>
so looks like soon Opera is going to be the only one without onerror https://bugs.webkit.org/show_bug.cgi?id=8519

[16:41:00.0000] <jacobolus>
bckenny: http://en.wikipedia.org/wiki/HSL_and_HSV

[16:41:01.0000] <bckenny>
ha, I think I've been to this blog before

[16:41:02.0000] <bckenny>
sweet

[16:47:00.0000] <jacobolus>
bckenny: esp. important IMO is the section http://en.wikipedia.org/wiki/HSL_and_HSV#Disadvantages

[16:47:01.0000] <TabAtkins>
jacobolus: What's the question now?

[16:48:00.0000] <jacobolus>
TabAtkins: I was just noticing that it's impossible to get webkit & gecko gradients to do quite the same thing

[16:48:01.0000] <TabAtkins>
Yes.

[16:48:02.0000] <TabAtkins>
There are a handful of imo unimportant use-cases that you can't address with the draft gradients, but you can with webkit.

[16:49:00.0000] <TabAtkins>
Note that if the box dimensions are known then you *can* do everything with draft gradients, with a little bit of calculus.

[16:49:01.0000] <jacobolus>
TabAtkins: right. I think someone might like them, but you're probably right that at some point SVG/canvas/something becomes a better tool for more complexity

[16:50:00.0000] <bckenny>
jacobolus: definitely. there has also been interest in alternate gradient and transition color functions, so please definitely weigh in on the subject

[16:50:01.0000] <bckenny>
we want good looking colors

[16:50:02.0000] <TabAtkins>
Indeed, that's very explicitly the goal - I'm keeping the gradient syntax simple and easy, and letting SVG address more complicated cases if need be.

[16:50:03.0000] <jacobolus>
TabAtkins: that webkit can make radial gradients w/ non-concentric inside/outside can't be emulated can it?

[16:50:04.0000] <TabAtkins>
No.

[16:51:00.0000] <TabAtkins>
I may address that at some point, but decided against the added complexity for now.

[16:51:01.0000] <TabAtkins>
(It would mean an extra point argument between the current point and shape arguments.)

[16:51:02.0000] <jacobolus>
TabAtkins: are the webkit folks likely to implement your spec anytime soon?

[16:52:00.0000] <TabAtkins>
Yes, simon fraser (the relevant dude) is satisfied with my spec now that I've addressed his concerns wrt interpolating.

[16:52:01.0000] <jacobolus>
bckenny: alternate transition functions don't help all that much IMO as long as the color space in use is not perceptually relevant :)

[16:53:00.0000] <jacobolus>
bckenny: so my solution would be to just make a gradient w/ 50 points in it or something, and then I can move them wherever I want

[16:53:01.0000] <TabAtkins>
Hixie: Accept strings *or* escaped idents in ::cue-part.

[16:54:00.0000] <TabAtkins>
That's our solution for font-family.

[16:54:01.0000] <jacobolus>
TabAtkins: do you know where in the spec compositing of CSS colors w/ alpha is defined?

[16:54:02.0000] <TabAtkins>
It's not - it was defined by the Porter-Duff paper decades ago.

[16:55:00.0000] <TabAtkins>
That said, I'm going to add a note talking about it.

[16:55:01.0000] <jacobolus>
TabAtkins: I'm assuming it's just some kind of linear interpolation relative to sRGB space?

[16:55:02.0000] <jacobolus>
TabAtkins: okay, I have that paper somewhere. but the paper doesn't say anything about gamma-compressed color spaces

[16:55:03.0000] <TabAtkins>
gamma correction applies when you're displaying the color, not computing it, right?

[16:56:00.0000] <jacobolus>
depends who is doing the computing :)

[16:56:01.0000] <TabAtkins>
True.

[16:56:02.0000] <jacobolus>
Alvy Ray Smith wrote something at some point about how everyone should always use linear space for compositing

[16:56:03.0000] <jacobolus>
but I'm not sure everyone else agrees

[16:56:04.0000] <jacobolus>
Adobe for instance never does, in Photoshop

[16:56:05.0000] <jacobolus>
they just composite relative to current color space, because it's fastest

[16:57:00.0000] <bckenny>
jacobolus: ok, hopefully i'm not going to put my foot in my mouth here, but theoretically there is some function that will take a displayed color and map it to a space like CIELAB whatever

[16:57:01.0000] <Hixie>
TabAtkins: the idea is to put a whole selector in there

[16:58:00.0000] <jacobolus>
bckenny: sure, but that starts making things complicated relative to what people are used to

[16:58:01.0000] <bckenny>
jacobolus: so would there be an easily defined, perceptually pleasant, transition function there?

[16:58:02.0000] <Hixie>
TabAtkins: the problem is that the selector syntax expects attribute/value pairs, whereas all i have here is a string

[16:58:03.0000] <TabAtkins>
Hixie: Oh.  Hrm, then.

[16:58:04.0000] <TabAtkins>
So, you're mapping voices to CSS classes?

[16:58:05.0000] <bckenny>
I guess my question is, what are the options other than going straight through gray

[16:59:00.0000] <jacobolus>
bckenny: sure, ArcGIS for example does (can do) its gradients (Color Ramps) relative to CIELAB in either polar coordinates or rectangular coordinates

[16:59:01.0000] <jacobolus>
and it generally works much better than using HSL/HSV

[16:59:02.0000] <jacobolus>
or RGB

[16:59:03.0000] <bckenny>
that's what I was getting at before, since currently browsers just go through RGB

[17:00:00.0000] <jacobolus>
bckenny: but the problem is that you start getting colors that are out of gamut, and then your implementation has to decide how to do the gamut mapping to bring them back into gamut

[17:00:01.0000] <TabAtkins>
Consider, btw, how to duplicate the behavior of premultiplied rgb in other color spaces.

[17:01:00.0000] <jacobolus>
bckenny: and here's a 300 page book on that subject http://www.wiley.com/WileyCDA/WileyTitle/productCd-0470758937.html

[17:02:00.0000] <jacobolus>
TabAtkins: yeah, that's what I meant about how browsers do compositing. is it spec'd out how to interpolate between two RGBA colors in a gradient?

[17:02:01.0000] <TabAtkins>
Yes.  You do linear interpolation in premultiplied sRGB space.

[17:02:02.0000] <jacobolus>
ah, okay, great

[17:03:00.0000] <TabAtkins>
This is the same as <color> interpolation for transitions/animations, btw.

[17:03:01.0000] <jacobolus>
TabAtkins: If and when I get this gradient creator/viewer dingus implemented, I'll let you know :)

[17:04:00.0000] <jacobolus>
TabAtkins: ever see this page? :) http://www.all-in-one.ee/~dersch/gamma/gamma.html

[17:06:00.0000] <TabAtkins>
I hadn't, but that's an excellent illustration of why you should be doing composition work before applying gamma.  ^_^

[17:06:01.0000] <Hixie>
TabAtkins: i don't know what i'm mapping them to currently

[17:06:02.0000] <Hixie>
TabAtkins: classes is one option

[17:06:03.0000] <Hixie>
TabAtkins: but it's not very clean

[17:06:04.0000] <Hixie>
TabAtkins: (i want to add classes also, as <span class class class>)

[17:06:05.0000] <jacobolus>
TabAtkins: but I'm pretty sure that as you've defined it, that's not done. :-)

[17:06:06.0000] <TabAtkins>
Hixie: ::cue-part(v[speaker="speaker's name"])

[17:07:00.0000] <TabAtkins>
jacobolus: I haven't said anything about gamma correction at all.  I'm gamma-agnostic.

[17:07:01.0000] <jacobolus>
TabAtkins: that's somewhat okay though, as long as everyone is on the same page, and I can add extra points to my gradient to make it do what I want :)

[17:07:02.0000] <Hixie>
that was my other thought, but i'm skeptical about making up "pseudo-attribute" names like that

[17:07:03.0000] <TabAtkins>
Hixie: There's nothing wrong with that.  You don't have real attributes in webSRT, or if you do, they're drawn from a limited set.

[17:07:04.0000] <jacobolus>
TabAtkins: okay, but sRGB is a gamma-compressed space, so if you interpolate linearly relative to sRGB.... :)

[17:07:05.0000] <Hixie>
fair enough

[17:08:00.0000] <jacobolus>
anyhow, there are advantages and disadvantages to each

[17:08:01.0000] <TabAtkins>
jacobolus: Oh, is it?  Okay, then I was mistaken.  I had no idea sRGB was gamme-compressed.

[17:08:02.0000] <TabAtkins>
jacobolus: Ah, now I see why that is, be looking at the math on that page.

[17:08:03.0000] <jacobolus>
TabAtkins: http://en.wikipedia.org/wiki/File:SRGB_gamma.svg

[17:09:00.0000] <bckenny>
jacobolus: I don't think you should depend on the wrong behavior too much...theoretically browsers (or operating systems) should be filtering and compositing in linear space

[17:10:00.0000] <bckenny>
and someday we'll actually get there

[17:10:01.0000] <jacobolus>
bckenny: I doubt it

[17:10:02.0000] <jacobolus>
bckenny: if everyone does their compositing in gamma compressed space, then changing the behavior is a bug

[17:10:03.0000] <jacobolus>
because it will change appearance

[17:10:04.0000] <bckenny>
but its unspecified

[17:10:05.0000] <jacobolus>
well, it should be specified one way or the other

[17:10:06.0000] <bckenny>
all thats specified is input and display spaces

[17:11:00.0000] <jacobolus>
I think it might actually be specified in CSS3; I'll go read again

[17:12:00.0000] <jacobolus>
bckenny: it defers to http://www.w3.org/TR/2003/REC-SVG11-20030114/masking.html#SimpleAlphaBlending

[17:13:00.0000] <jacobolus>
hmm, it's not clear whether SVG defines if things should be composited in document color space or in linear space

[17:13:01.0000] <bckenny>
http://www.w3.org/TR/2003/REC-SVG11-20030114/painting.html#ColorInterpolationProperty

[17:13:02.0000] <bckenny>
yeah its not clear at all

[17:14:00.0000] <TabAtkins>
Hmm, yeah.  That should probably be cleared up in Colors 4.

[17:14:01.0000] <jacobolus>
oh, I see. "auto: Indicates that the user agent can choose either the sRGB or linearRGB spaces for color interpolation. This option indicates that the author doesn't require that color interpolation occur in a particular color space."

[17:14:02.0000] <TabAtkins>
Oh, *that's* what linearRGB means.  I've never been clear on that.

[17:14:03.0000] <jacobolus>
that's probably a bad way to define the spec

[17:14:04.0000] <jacobolus>
means that auto might render substantially differently in 2 implementations

[17:14:05.0000] <bckenny>
it was probably for performance and to match reality :)

[17:15:00.0000] <jacobolus>
leaving authors quite confused

[17:15:01.0000] <TabAtkins>
In practice, I think everyone uses sRGB in practice.

[17:15:02.0000] <TabAtkins>
That is, linear interpolation between the components of a color expressed in rgb().

[17:15:03.0000] <jacobolus>
TabAtkins: yes, since it's faster (just takes some multiplications/additions)

[17:15:04.0000] <bckenny>
yeah, I think so too

[17:15:05.0000] <bckenny>
although images with color profiles might be a weird case

[17:15:06.0000] <TabAtkins>
But yeah, switching to linearRGB should be an option.

[17:16:00.0000] <jacobolus>
whereas linearizing the components requires mapping through a lookup table

[17:16:01.0000] <TabAtkins>
I think we're *supposed* to obey color-interpolation.

[17:16:02.0000] <TabAtkins>
jacobolus: Well, that's still a cheap mapping, but yeah.

[17:16:03.0000] <jacobolus>
TabAtkins: there's no color-interpolateion in CSS though?

[17:16:04.0000] <TabAtkins>
It's in SVG, but HTML content should be able to use it through CSS.

[17:16:05.0000] <TabAtkins>
Emphasis on *should*.

[17:16:06.0000] <jacobolus>
TabAtkins: sure, it's cheap on modern hardware, but people were making these decisions in like 1990

[17:17:00.0000] <jacobolus>
where by people I mean Adobe

[17:18:00.0000] <jacobolus>
TabAtkins: okay, well it might make sense to add that if that property exists it should be respected for gradients/rgba colors in CSS too :)

[17:19:00.0000] <TabAtkins>
Oh, certainly.  color-interpolation should be respected for *all* uses of color.

[17:19:01.0000] <jacobolus>
TabAtkins: it's not clear whether the interpolation of SVG gradients follows color-interpolation, in the SVG spec

[17:19:02.0000] <jacobolus>
or only compositing

[17:19:03.0000] <TabAtkins>
That's a good topic to bring up for the FXTF.  I'll put it on my board.

[17:20:00.0000] <jacobolus>
(i.e. the word "interpolation" doesn't show up in http://www.w3.org/TR/SVG/pservers.html )

[17:22:00.0000] <jacobolus>
TabAtkins: while we're at it, it would be really nice if we could do some fast vector math on arrays of numbers in javascript; would make custom color stuff a lot easier :)

[17:23:00.0000] <TabAtkins>
JS isn't my bag.  Bug some of the other google engineers.  ^^;

[17:23:01.0000] <TabAtkins>
(I love JS, but I'm not good on the JS-standardization stuff.)

[17:23:02.0000] <jacobolus>
well, just in general, javascript's support of data structures is totally lame :)

[17:23:03.0000] <bckenny>
theres a thread about that very topic right now in the public webgl list

[17:24:00.0000] <jacobolus>
bckenny: link?

[17:24:01.0000] <jacobolus>
if it can be done in webgl apis I'd be satisfied-ish

[17:24:02.0000] <jamesr_>
there are some ecma proposals on the table

[17:25:00.0000] <bckenny>
https://www.khronos.org/webgl/public-mailing-list/archives/1012/msg00080.html

[17:27:00.0000] <jacobolus>
bckenny: thanks. yes, even fast 4x4 array manipulation would be great

[17:29:00.0000] <jacobolus>
esp. if there are apis for things like matrix inversion

[17:30:00.0000] <jacobolus>
I guess there is in CSSMatrix

[17:30:01.0000] <jacobolus>
I should try playing with that

[17:30:02.0000] <TabAtkins>
We're throwing away CSSMatrix, at least for now.

[17:30:03.0000] <jacobolus>
oh. is there something implemented I should use?

[17:30:04.0000] <TabAtkins>
No clue.

[17:30:05.0000] <TabAtkins>
You might be able to use CSSMatrix for now.  I'm just warning you that it's going away.

[17:31:00.0000] <jacobolus>
heh, okay

[17:31:01.0000] <jacobolus>
TabAtkins: do these discussions get summarized anywhere that's easy for someone to get up to speed w/ current thinking on the subject?

[17:32:00.0000] <TabAtkins>
The www-style list.  ^_^

[17:33:00.0000] <jacobolus>
I don't have the time to follow www-style and the html5 mailing lists and all the public javascript lists &c. &c. in detail, but am definitely interested in the subject

[17:33:01.0000] <TabAtkins>
You can try searching lists.w3.org's archive.

[17:33:02.0000] <bckenny>
WebKitCSSMatrix is also (mostly) immutable right now, which can be problematic with garbage collection

[17:33:03.0000] <bckenny>
but it is definitely fast on iOS

[17:34:00.0000] <bckenny>
thats partly what that webgl thread was about

[17:34:01.0000] <jacobolus>
I wonder what the best way is to interpolate values relative to a lookup table in javascript

[17:34:02.0000] <jacobolus>
I guess I can just use javascript arrays

[17:35:00.0000] <bckenny>
how expensive is the function that generates the tables?

[17:35:01.0000] <bckenny>
pure math js is pretty fast these days

[17:35:02.0000] <jacobolus>
bckenny: depends; in some cases there's nothing but a table to go by

[17:36:00.0000] <jacobolus>
in others I can try doing the math direct and compare

[17:36:01.0000] <jacobolus>
I wish I could just use numpy in the browser; life would be lovely

[17:42:00.0000] <Hixie>
TabAtkins: my effort to save time by tweaking my publication system so that you can deal with the TR/ stuff is nearing completion but may have failed in its overall stated mission (namely, to save time)!

[17:43:00.0000] <TabAtkins>
Haha.

[17:43:01.0000] <jacobolus>
hehe

[17:44:00.0000] <Hixie>
my preprocessor has accrued so much crap over the years that it's now reached the point where if i was starting over, it would just make more sense to use a general purpose tool chain like the c preprocessor and make.

[17:44:01.0000] <Hixie>
but oh well.

[17:45:00.0000] <TabAtkins>
/me is horrified by the thought of using the C preprocessor.

[17:45:01.0000] <Hixie>
you'd be equally horrified, maybe will be equally horrified, at the thought of using the monster that's evolved to be what i use

[17:46:00.0000] <Hixie>
on another note, i think i wish anolis had an option to strip comments

[17:47:00.0000] <TabAtkins>
I suggest scrapping the whole thing and switching to Lisp and macros.

[17:51:00.0000] <Hixie>
ok i think i'm going to upload the relevant files to the dev.w3.org cvs repo if that works for you

[17:51:01.0000] <TabAtkins>
That works.

[17:56:00.0000] <Hixie>
TabAtkins: http://dev.w3.org/html5/boilerplate/

[18:01:00.0000] <jacobolus>
TabAtkins: I'm not finding the discussion where CSSMatrix is being dropped; was that within the last week or two?

[18:01:01.0000] <TabAtkins>
Within the last month, at least.

[18:01:02.0000] <jacobolus>
on www-style?

[18:02:00.0000] <TabAtkins>
Maybe on FX.

[18:02:01.0000] <TabAtkins>
public-fx⊙wo, that is.

[18:03:00.0000] <Hixie>
TabAtkins: k, it's ready. basically, edit those files -- it should be somewhat self-explanatory but feel free to ask any questions you may have -- and then let me know when you've changed something and i'll pull the updates and regen

[18:04:00.0000] <TabAtkins>
Hm, kk.

[18:17:00.0000] <jacobolus>
all I'm finding is http://lists.w3.org/Archives/Public/www-style/2010Dec/0074.html

[18:18:00.0000] <TabAtkins>
jacobolus: I'm heading out for the day, so I'll pick this up tomorrow and try to find some of the stuff.

[18:18:01.0000] <jacobolus>
TabAtkins: no worries

[18:18:02.0000] <jacobolus>
TabAtkins: tomorrow and the next day I'm offline, but I'll come bug you more about it in a few days or a week :)

[18:19:00.0000] <jacobolus>
thanks for all your answers

[19:08:00.0000] <bga_>
http://twitter.com/slicknet/status/14514661722427392

[19:09:00.0000] <Hixie>
he hasn't seen <samp>

[19:42:00.0000] <nessy>
Hixie: can we address individual cues in WebSRT/<track> by cue identifier?

[19:43:00.0000] <nessy>
::cue only addresses all the cues IIUC

[23:04:00.0000] <Hixie>
MikeSmith: nah that's easy. Just enumerate them all, sort them all, and check for dupes.

[23:06:00.0000] <MikeSmith>
yeah I was just bellyaching

[23:07:00.0000] <MikeSmith>
though I do wonder now what the error message will end up looking like

[23:08:00.0000] <Hixie>
"You have listed %d tracks that are all %s, %s, and %s. You should distinguish your tracks so that the user can tell which is which."

[00:58:00.0000] <foolip>
Hixie, what I was referring to was the ttm:agent attribute, see the example in http://www.w3.org/TR/ttaf1-dfxp/#metadata-vocabulary-agent-example-1

[00:59:00.0000] <foolip>
The good part being that a short id is used and is linked to the full name of the character and actor, not necessarily the syntax as such

[01:00:00.0000] <foolip>
I think that e.g. <v bond> and *optional* extra metadata about the voices would be a sensible approach

[01:37:00.0000] <annevk>
Hixie, TabAtkins, are you also going to take care of the Disposition of Comments?

[01:54:00.0000] <jgraham>
TabAtkins: I'm pretty sure that the kind of box that was mentioned in the <comment> thread is not either like a pullquote or like a chart

[01:54:01.0000] <jgraham>
I think it is a perfectly valid use of <aside> though

[01:55:00.0000] <jgraham>
And if the spec disagrees I think the spec is silly (I already think that using <aside> for sidebars is the weirdest possible use)

[07:37:00.0000] <AryehGregor>
Who decided that sizeof() in C should behave differently for arrays and pointers?  It's quite inconsistent.

[07:38:00.0000] <bga_>
heh

[07:38:01.0000] <bga_>
K&R!

[07:39:00.0000] <jcranmer>
it's quite helpful though

[07:39:01.0000] <jcranmer>
arrays ≠ pointers

[07:40:00.0000] <AryehGregor>
Yeah, but if you have a static array and you change it to a pointer because it's too big to go on the stack, suddenly your sizeof() calls silently do something different.

[07:40:01.0000] <jcranmer>
int arr[] = {1, 2, 3, 4};

[07:40:02.0000] <jcranmer>
&arr == arr

[07:40:03.0000] <AryehGregor>
&arr == arr?  o_O

[07:40:04.0000] <jcranmer>
yep

[07:40:05.0000] <AryehGregor>
/me clearly doesn't know enough C

[07:40:06.0000] <jcranmer>
that trips up SO many students

[07:41:00.0000] <AryehGregor>
That makes no sense.

[07:42:00.0000] <bga_>
sizeof(&arr[0])

[07:42:01.0000] <Philip`>
AryehGregor: Using sizeof on arrays seems quite risky - better to have some macro that returns number of elements, and fails on pointers

[07:42:02.0000] <jcranmer>
arrays are closer to labels

[07:43:00.0000] <AryehGregor>
Philip`, in other words, the feature is ill-conceived.

[07:43:01.0000] <jcranmer>
so the address of this label is the location it is at

[07:43:02.0000] <jcranmer>
you also can't legally say arr = foo;

[07:43:03.0000] <Philip`>
...although actually I'm not sure how possible it is to have a macro like that

[07:43:04.0000] <Philip`>
I've got some code with

[07:43:05.0000] <Philip`>
  template<typename T, size_t n> u8 (*ArraySizeDeducer(T (&)[n]))[n];

[07:43:06.0000] <Philip`>
  #define ARRAY_SIZE(name) (sizeof(*ArraySizeDeducer(name)))

[07:43:07.0000] <Philip`>
but apparently it fails in GCC, so it just uses

[07:44:00.0000] <Philip`>
  #define ARRAY_SIZE(name) (sizeof(name) / (sizeof((name)[0])))

[07:44:01.0000] <Philip`>
there, which won't detect accidental use of pointer types

[07:44:02.0000] <jcranmer>
static assert name == &name?

[07:46:00.0000] <Philip`>
void* x; x = &x; // now x == &x, and you can't tell that statically

[07:46:01.0000] <jcranmer>
well, that would require a good static analysis to detect your trick

[07:46:02.0000] <AryehGregor>
I would be so much happier writing OpenCL if the compiler didn't routinely do things like go into an infinite loop for no obvious reason.

[07:47:00.0000] <jcranmer>
s/good/decent/

[07:47:01.0000] <Philip`>
jcranmer: Indeed, and you can't do a static assert except for conditions which a dumb static analysis can definitely find the answer to

[07:48:00.0000] <bga_>
may be c99 will fix your problem

[07:49:00.0000] <Philip`>
AryehGregor: Maybe it's trying to optimise your non-terminating program into a pre-computed constant return value?

[07:50:00.0000] <AryehGregor>
Philip`, I hope not, since my program is supposed to terminate.

[07:50:01.0000] <AryehGregor>
Other users of this GPU would be annoyed, otherwise.

[08:02:00.0000] <Aleoss>
What is wrong with this X-UA-Compatible value? "IE=edge;chrome=1;FF=3;Opera=9;Konqueror=3;Safari=3;OtherUA=4"

[08:02:01.0000] <Aleoss>
Validator says it is a bad value.

[08:02:02.0000] <jcranmer>
everything is ancient?

[08:03:00.0000] <Aleoss>
jcranmer: Has nothing to do with the versions, but rather the syntax obviously.

[08:03:01.0000] <AryehGregor>
Aleoss, X-UA-Compatible is nonstandard and invalid to begin with.

[08:03:02.0000] <AryehGregor>
Also, nothing actually pays attention to it other than IE and the Chrome plugin for IE, so those extra values are nonsense.

[08:03:03.0000] <AryehGregor>
Chrome Frame, that's what it's called.

[08:03:04.0000] <Philip`>
Aleoss: Everything is wrong with it

[08:03:05.0000] <Aleoss>
AryehGregor: So I should send it in HTTP headers only or not bother with it at all?

[08:03:06.0000] <AryehGregor>
Aleoss, don't bother with it at all.

[08:04:00.0000] <AryehGregor>
Unless you want to opt in to Chrome Frame, then I guess you need it.

[08:04:01.0000] <AryehGregor>
For IE=edge, make sure you have a correct doctype, then you'll get that automatically.

[08:04:02.0000] <AryehGregor>
(If your page validates as HTML5, you have a correct doctype.)

[08:04:03.0000] <Philip`>
Especially the OtherUA=4, which I assume was copied-and-pasted many times from the original announcement without anyone stopping to think about what it actually meant

[08:04:04.0000] <AryehGregor>
This is all copied and pasted from the original announcement?

[08:05:00.0000] <Philip`>
No, some has accreted since then

[08:05:01.0000] <Aleoss>
Philip`: That would just mean version 4 of anything else.

[08:05:02.0000] <AryehGregor>
Which makes no sense.

[08:05:03.0000] <AryehGregor>
The entire thing makes no sense.

[08:05:04.0000] <AryehGregor>
That header was made up by IE and no one else uses it or plans to ever use it, except Chrome Frame.

[08:06:00.0000] <Philip`>
http://www.alistapart.com/articles/beyonddoctype - <meta http-equiv="X-UA-Compatible" content="IE=8;FF=3;OtherUA=4" />

[08:06:01.0000] <AryehGregor>
And IE doesn't even need it if you have a good doctype.

[08:06:02.0000] <Aleoss>
AryehGregor: <!DOCTYPE html>

[08:06:03.0000] <AryehGregor>
Aleoss, that's fine.  Then leave out the meta.

[08:06:04.0000] <AryehGregor>
The validator says it's invalid for a reason.  :)

[08:09:00.0000] <Philip`>
There should be a law that if you publish an article with some markup that people shouldn't copy and paste directly into their own pages, you must surround it with a flashing red border and "DO NOT USE THIS EXAMPLE DIRECTLY" warnings surrounding it, and it should be rendered as an image so they can't copy it as text

[08:11:00.0000] <bga_>
and google do not find your text. yes

[08:12:00.0000] <bga_>
user-select: none; is better

[08:13:00.0000] <david_carlisle>
Philip`: re laws, i just copied the markup that you posted to http://krijnhoetmer.nl/irc-logs/whatwg/20101214#l-671  but it appears to be invalid

[08:16:00.0000] <Philip`>
david_carlisle: I shall hand myself in to the authorities forthwith

[08:16:01.0000] <Philip`>
though I will fight attempts at extradition

[10:27:00.0000] <JonathanNeal>
I think most browsers have chosen font-size: 16px; and font-family: serif; to be the default font style of a document, but this isn't actually required or recommended by w3c or whatwg.  Is that correct?

[10:28:00.0000] <AryehGregor>
Seemingly.

[10:31:00.0000] <jcranmer>
JonathanNeal: most likely desire of browsers for consistency

[10:31:01.0000] <AryehGregor>
If they're all the same, it should be added to the spec.

[10:31:02.0000] <jcranmer>
for what it's worth, elinks seems to think that a monospace font works quite well

[10:34:00.0000] <AryehGregor>
I imagine elinks does not closely adhere to the contents of the rendering section.

[10:34:01.0000] <TabAtkins>
Is elinks one of the terminal browsers?

[10:35:00.0000] <jcranmer>
yes

[10:36:00.0000] <TabAtkins>
Then it can use the limitations clause to justify its breakage of various parts of the spec. ^_^

[10:37:00.0000] <jcranmer>
well, I'm sure you could have a terminal that uses serif fonts

[10:37:01.0000] <jcranmer>
I don't think anyone wants to have such a thing

[10:37:02.0000] <jcranmer>
but it's possible

[10:37:03.0000] <AryehGregor>
Related to lynx.

[10:37:04.0000] <AryehGregor>
Thus the name.

[10:37:05.0000] <TabAtkins>
It'd still probably end up rendering it monospace, right?

[10:37:06.0000] <AryehGregor>
/me just uses lynx when he needs a text browser

[10:37:07.0000] <TabAtkins>
AryehGregor: Yeah, I suspected.

[10:37:08.0000] <TabAtkins>
Me too.

[10:37:09.0000] <AryehGregor>
There's technically no rule that terminals have to be monospace.

[10:38:00.0000] <AryehGregor>
You could use Arial for your terminal if you really wanted.

[10:38:01.0000] <TabAtkins>
Hm, I guess so.  You'd probably make a lot of things render really weird.

[10:38:02.0000] <AryehGregor>
Needless to say, yeah.

[10:38:03.0000] <JonathanNeal>
So, if all browsers have followed 16px serif are you saying it should seriously be considered for the spec?

[10:38:04.0000] <AryehGregor>
These browsers probably output ASCII art, too.

[10:38:05.0000] <AryehGregor>
JonathanNeal, yes, that may as well be added to the rendering section.

[10:39:00.0000] <TabAtkins>
If websites are designed taking advantage of the consistency (which I'm sure they are), then yes.

[11:10:00.0000] <dglazkov>
I think your last email was good, TabAtkins, but not sure yet whether the explanation is super clear :)

[11:10:01.0000] <dglazkov>
I wonder if Boris hangs out here, maybe it's best to 'splain in irc?

[11:12:00.0000] <TabAtkins>
Doesn't look like he does.

[11:13:00.0000] <dglazkov>
:(

[11:13:01.0000] <TabAtkins>
I hear they have an entire IRC network to themselves, though. ^_^

[11:14:00.0000] <Philip`>
Themselves plus the spammers

[11:15:00.0000] <AryehGregor>
He's here sometimes.

[11:15:01.0000] <AryehGregor>
I think.

[11:15:02.0000] <AryehGregor>
Apparently not often.

[11:23:00.0000] <annevk>
I managed to reduce my encoding dataset to 89 variants on the train. This is probably as good as it is going to get.

[11:25:00.0000] <annevk>
Why isn't the CSS-based XBL part of the discussion yet?

[11:25:01.0000] <annevk>
/me thought that was rather interesting

[11:26:00.0000] <TabAtkins>
One piece at a time.  ^_^

[11:26:01.0000] <annevk>
Euhm, no?

[11:26:02.0000] <annevk>
I don't want XBL twice.

[11:27:00.0000] <TabAtkins>
Nah, I meant that we're trying to discuss one thing at a time.

[11:27:01.0000] <TabAtkins>
Agreed that we don't want XBL twice.  This should all be part of the same framework.

[11:28:00.0000] <annevk>
By putting it in CSS it is somewhat more clear that it is immutable, maybe...

[11:28:01.0000] <annevk>
Doing that at a markup level is somewhat weird...

[11:28:02.0000] <annevk>
All markup so far can be scripted, after all.

[11:28:03.0000] <TabAtkins>
We don't always want it to be immutable, though.

[11:30:00.0000] <dglazkov>
what's immutable?

[11:30:01.0000] <annevk>
Well, the current proposal was to make the templates immutable, right?

[11:31:00.0000] <annevk>
But then CSS can be scripted too so I guess my comparison does not hold...

[11:31:01.0000] <dglazkov>
annevk: ah. gotcha

[11:31:02.0000] <dglazkov>
annevk: no, the idea is that you can mutate templates all you want -- it just won't affect the existing instances

[11:31:03.0000] <TabAtkins>
No, templates are mutable too.  The point is that once you *apply* a template all the informatino in it is cloned out, so you can forget about the template it came from.

[11:32:00.0000] <annevk>
Ah, so when you add new elements the template would apply to you get it with changes?

[11:32:01.0000] <Hixie>
would be nice to have a way to do it all from CSS

[11:32:02.0000] <dglazkov>
like you bend your cookie cutter to make tree-shaped cookies, and then into a man-shaped cookies. The re-bending shouldn't change all your tree-shaped cookies into man-shaped cookies :)

[11:32:03.0000] <Hixie>
even if it just means having "HTML islands" in CSS files

[11:32:04.0000] <dglazkov>
Hixie: eeew

[11:32:05.0000] <annevk>
It would obsolete the whole need for all these crazy pseudo-elements in CSS...

[11:32:06.0000] <annevk>
Which is a win, I think.

[11:33:00.0000] <dglazkov>
Hixie: that was an instinctive reaction, but now that I think about it ...

[11:33:01.0000] <Hixie>
yeah

[11:33:02.0000] <Hixie>
same here

[11:33:03.0000] <dglazkov>
you could devise easier parsing rules

[11:33:04.0000] <Hixie>
at first i'm like "ew"

[11:33:05.0000] <Hixie>
and then i'm like "well"

[11:33:06.0000] <dglazkov>
<template><tr></template>

[11:33:07.0000] <Hixie>
and then i'm like "hmm"

[11:34:00.0000] <annevk>
dglazkov, like WebSRT parsing rules maybe?

[11:34:01.0000] <dglazkov>
/me looks up WebSRT

[11:34:02.0000] <Hixie>
there's definitely a lot to define if we go that route

[11:34:03.0000] <TabAtkins>
That... might help with the crazy parsing rules.

[11:34:04.0000] <annevk>
(at least the markup subset)

[11:34:05.0000] <Hixie>
annevk: i don't think the websrt parsing rules would really fit, but yeah

[11:35:00.0000] <dglazkov>
holy crap you guys are crazy

[11:35:01.0000] <dglazkov>
sorry, just started reading websrt

[11:36:00.0000] <annevk>
dglazkov, <evil laugh here>

[11:37:00.0000] <dglazkov>
I think I am going to go ahead and not read it. Just annevk's blog post is fine. Otherwise, I might go Scanners

[11:38:00.0000] <dglazkov>
ok, you may have something there Hixie -- about HTML islands in CSS. Even though it sounds disgusting. It's like that nordic fish dish or something.

[11:40:00.0000] <Hixie>
yeah it's definitely not aestheticaly obvious

[11:41:00.0000] <dglazkov>
but would allow avoiding using processing directives I think

[11:42:00.0000] <TabAtkins>
If we went the "HTML Islands" route, I'd probably see if we could just reuse Anne's XML5.

[11:44:00.0000] <TabAtkins>
/me wants to file a bug to deprecate <input type=reset>, and then file bugs on each browser to remove support so they're a noop.

[11:45:00.0000] <Dashiva>
"Please upgrade to an older browser to use reset buttons"

[11:45:01.0000] <TabAtkins>
Yus.

[11:46:00.0000] <TabAtkins>
Nobody actually uses them.  Except me, accidentally.

[11:47:00.0000] <othermaciej>
TabAtkins: there doesn't seem to be much upside to removing support

[11:48:00.0000] <annevk>
seem kind of useful for a preferences panel

[11:49:00.0000] <TabAtkins>
othermaciej: The upside is that I stop resetting forms accidentally.

[11:49:01.0000] <Dashiva>
Add a confirmation dialog preference setting option

[11:54:00.0000] <dglazkov>
roc: do you know how to summon Boris? :)

[11:55:00.0000] <dglazkov>
I think TabAtkins' explanation is pretty good -- agian :)

[11:57:00.0000] <othermaciej>
TabAtkins: I guess the term in my utility function representing your convenience doesn't have a very high coefficient

[11:58:00.0000] <TabAtkins>
othermaciej: Get a better utility function.

[12:10:00.0000] <MrWax>
Does anyone know when likely we will be able to implement offline cache db's with HTML5 ? I mean when more than just FF (Indexeddb) support it?

[12:23:00.0000] <dglazkov>
ok, I don't like HTML Islands again. Because now you can't build templates imperatively.

[12:23:01.0000] <dglazkov>
and they're not DOM.

[12:23:02.0000] <annevk>
CSS has an API

[12:23:03.0000] <dglazkov>
so you can't refer to them

[12:24:00.0000] <annevk>
pretty sure we could have all of that

[12:24:01.0000] <annevk>
not sure if we want that though

[12:24:02.0000] <dglazkov>
annevk: ah, build templates imperatively as part of CSSOM?

[12:25:00.0000] <annevk>
something like that

[12:25:01.0000] <annevk>
they could be DocumentFragment or some such

[12:25:02.0000] <annevk>
or just an Element I guess

[12:42:00.0000] <dglazkov>
interesting. I think the idea is at least worth experimenting with

[13:20:00.0000] <dglazkov>
annevk, Hixie: are you going to float this idea to public-webapps?

[13:23:00.0000] <annevk>
I hope Hixie will; I don't quite have the full picture

[13:23:01.0000] <dglazkov>
Hixie: it seems there's a fairly broad agreement about templates being non-reflective. Should I document this in a bug somewhere or what do I do? Teach me the proces, Master

[13:23:02.0000] <annevk>
I just thought it should be considered in the XBL discussion as it seemed like a nice enough idea

[13:26:00.0000] <annevk>
dglazkov, it being documented in email should be sufficient assuming Hixie will continue to be the editor of that document

[13:26:01.0000] <dglazkov>
annevk: great!

[13:29:00.0000] <zcorpan>
dglazkov: how about "HTML Components"?

[13:29:01.0000] <annevk>
dglazkov, btw, http://www.w3.org/TR/NOTE-HTMLComponents

[13:29:02.0000] <annevk>
aah, zcorpan won

[13:29:03.0000] <dglazkov>
zcorpan: sure, sounds good :)

[13:30:00.0000] <zcorpan>
wow, i didn't know they made a w3c spec for it

[13:30:01.0000] <dglazkov>
it's not a spec, it's a note. Which means we can take the name, right?

[13:30:02.0000] <dglazkov>
/me knows nothing about standards process.

[13:30:03.0000] <dglazkov>
except that it's painful

[13:31:00.0000] <annevk>
names are not really reserved, but picking a name that does not conflict with what Microsoft did might be wise

[13:31:01.0000] <dglazkov>
"The spec formerly know as XBL2"

[13:32:00.0000] <dglazkov>
know->known drats

[13:32:01.0000] <dglazkov>
DOM Chunks

[13:32:02.0000] <dglazkov>
:D

[13:33:00.0000] <annevk>
ooh, new Opera build is significantly better

[13:33:01.0000] <annevk>
at least in terms of tab space allocation

[13:34:00.0000] <annevk>
DOM Chunks haha

[13:34:01.0000] <zcorpan>
same as in previous build. keep up! or, i mean, you're on vacation, go away :P

[13:34:02.0000] <annevk>
though it would have to be Web Chunks ;p

[13:34:03.0000] <dglazkov>
:)

[13:34:04.0000] <zcorpan>
Web Slices? oh wait

[13:36:00.0000] <dglazkov>
I don't see a problem with using Web Components

[13:37:00.0000] <dglazkov>
It's not like Oracle is going to come at us for naming the spec Web SQL Database :)

[13:37:01.0000] <dglazkov>
and it makes good sense

[13:41:00.0000] <annevk>
If it is going to be part of HTML it will just be part of HTML... No separate name needed. If it is going to be part of CSS I suspect something like CSS Components Module...

[13:46:00.0000] <TabAtkins_>
Well, it's still useful to have a name for the chunk, like Web Storage or Server-Sent Events have.

[13:46:01.0000] <TabAtkins_>
dglazkov: "maximum-pleasure encapsulation" makes me feel dirty inside.

[13:51:00.0000] <dglazkov>
TabAtkins_: mission accomplished!

[14:04:00.0000] <zcorpan>
fwiw, i recall that when i was a beginner with html and css, i wanted a way to put html in css

[14:05:00.0000] <jlebar>
Hixie, ping?

[14:09:00.0000] <roc>
dglazkov: he's bz

[14:09:01.0000] <dglazkov>
roc: thanks!

[14:10:00.0000] <roc>
not currently online it seems

[14:13:00.0000] <Aleoss>
"Bad value tablist for attribute role on element ul." How is this possible? According to the HTML5 spec, "tablist" is a valid role attribute value for the ul element.

[14:18:00.0000] <Aleoss>
http://www.whatwg.org/specs/web-apps/current-work/#annotations-for-assistive-technology-products-%28aria%29

[14:23:00.0000] <Aleoss>
Anyone?

[14:27:00.0000] <zcorpan>
Aleoss: http://bugzilla.validator.nu/

[14:28:00.0000] <Aleoss>
zcorpan: That requires that I register there.

[14:28:01.0000] <zcorpan>
yes?

[14:29:00.0000] <zcorpan>
send email to hsivonen⊙if if you don't want to register

[14:31:00.0000] <jgraham>
/me is impressed that dglazkov managed to turn the XBL2 discussion into a naming bikeshed so early and so eagerly

[14:32:00.0000] <annevk>
haha http://www.flickr.com/photos/tantek/5218572290/ CSS WG in action

[14:32:01.0000] <jgraham>
I vote for WebCOM, of course. Because what could be make web developers feel more like Real Programmers (TM) than using COM

[14:32:02.0000] <dglazkov>
jgraham: :D

[14:33:00.0000] <dglazkov>
jgraham: to be fair, I did create a separate thread. 

[14:33:01.0000] <jgraham>
dglazkov: :)

[14:49:00.0000] <bga_>
WebCOM?

[14:49:01.0000] <bga_>
is it COM for web

[14:50:00.0000] <bga_>
i mean http://en.wikipedia.org/wiki/Component_Object_Model

[14:52:00.0000] <bga_>
ah sorry

[14:52:01.0000] <bga_>
i see

[15:46:00.0000] <Hixie>
jlebar: pong

[15:46:01.0000] <Hixie>
dglazkov: the e-mail thread is in my "XBL" pile

[15:47:00.0000] <Hixie>
TabAtkins_: re type=reset, what you should instead do is lobby browsers to implement "undo"-level functionality for the button

[15:47:01.0000] <Hixie>
TabAtkins_: so that you can just go Edit>Undo after accidentally clicking the button, and have the UA refill in all the controls

[15:49:00.0000] <Hixie>
dglazkov: re the name, if it becomes part of HTML then the name will just disappear

[15:49:01.0000] <Hixie>
if it becomes part of CSS then the name will change similarly

[15:49:02.0000] <Hixie>
so I wouldn't worry about it

[15:50:00.0000] <Hixie>
(if it becomes part of CSS it'll become BECSS)

[15:55:00.0000] <dglazkov>
I don't think it's CSS-ey spec

[15:55:01.0000] <dglazkov>
but I understand what you're saying


2010-12-15
[16:48:00.0000] <TabAtkins>
Hixie: Ooh, good idea.

[16:48:01.0000] <TabAtkins>
jgraham: Note that the naming bikeshed is in a different thread from where the adults are talking.

[19:23:00.0000] <oojacoboo>
hey, can I prefix anything to -moz for style corrections

[19:27:00.0000] <oojacoboo>
or do I have go with something like... @-moz-document url-prefix() {

[19:27:01.0000] <oojacoboo>
I don't understand why UAs can't just allow prefixing to override

[20:25:00.0000] <erlehmann>
CTHULHU WHATWGN

[20:32:00.0000] <MikeSmith>
the spec has "supports external timed track character encoding overrides" as a <dfn> but the surrounding text does not really explain what an "external timed track character encoding override" actually is

[20:32:01.0000] <MikeSmith>
except implicitly I guess

[20:32:02.0000] <MikeSmith>
or the definition is circular

[20:33:00.0000] <MikeSmith>
that is, meaning something like "an external timed track character encoding override is given by the value of a charset attribute which specifies an external timed track character encoding override"

[20:35:00.0000] <MikeSmith>
not clear how it amounts to being an "override" instead of simply being the means to specify the character encoding of the track

[20:35:01.0000] <MikeSmith>
what is it overriding…

[20:37:00.0000] <MikeSmith>
overriding whatever encoding might be given in the Content-Type header?

[20:38:00.0000] <MikeSmith>
or actually, the full language is "If the elements's track URL identifies a resource that supports external timed track character encoding overrides, then the charset attribute may be specified."

[20:39:00.0000] <MikeSmith>
so even more not clear what it means for a resource to "support external timed track character encoding overrides"

[21:43:00.0000] <hsivonen>
ooh. a Decision by the Chairs

[21:49:00.0000] <Hixie>
several today so far actually

[21:51:00.0000] <hsivonen>
several as in two?

[21:52:00.0000] <Hixie>
two decisions, four issues

[21:53:00.0000] <hsivonen>
I see

[21:53:01.0000] <Hixie>
or depending on how you count it, five decisions, four issues :_)

[21:58:00.0000] <MikeSmith>
and add to that the number of issues that were closed without prejudice at the beginning of the week

[21:59:00.0000] <MikeSmith>
though one of those was subsequently reopened

[22:01:00.0000] <MikeSmith>
Hixie: how come your issues graph stops in mid-November?

[22:01:01.0000] <MikeSmith>
http://damowmow.com/playground/htmlwg/chart.html

[22:01:02.0000] <Hixie>
MikeSmith: it doesn't?

[22:01:03.0000] <Hixie>
MikeSmith: what browser?

[22:06:00.0000] <MikeSmith>
take your pick

[22:06:01.0000] <MikeSmith>
every browser I tried it in

[22:06:02.0000] <Hixie>
ends in mid-dec for me on chrome trunk

[22:06:03.0000] <MikeSmith>
hmm

[22:06:04.0000] <MikeSmith>
maybe cached

[22:06:05.0000] <Hixie>
not trunk actually, chrome stable

[22:07:00.0000] <Hixie>
whatever they call it

[22:07:01.0000] <Hixie>
let me test other browsers

[22:10:00.0000] <MikeSmith>
it doesn't even show a "Dec" in the scale when I view it

[22:10:01.0000] <MikeSmith>
for 2010

[22:12:00.0000] <Hixie>
click "raw data"

[22:12:01.0000] <Hixie>
what's the last row you get?

[22:13:00.0000] <Hixie>
i can't find any browsers that don't show dec

[22:13:01.0000] <othermaciej>
I see a Dec label on the scale

[22:13:02.0000] <othermaciej>
though I believe the data it's showing is out of date

[22:14:00.0000] <othermaciej>
(by like a day or two)

[22:15:00.0000] <MikeSmith>
wtf

[22:15:01.0000] <MikeSmith>
crazy

[22:15:02.0000] <erlehmann>
Gecko/20101028 does not show a Dec label

[22:15:03.0000] <Hixie>
othermaciej: the data is only updated every 24 hours or so

[22:16:00.0000] <Hixie>
erlehmann: 20101210 does for me

[22:17:00.0000] <MikeSmith>
Last-Modified:Wed, 01 Dec 2010 01:27:06 GMT

[22:18:00.0000] <MikeSmith>
with cache disabled

[22:18:01.0000] <Hixie>
url?

[22:18:02.0000] <Hixie>
http://damowmow.com/playground/htmlwg/issues.csv ?

[22:18:03.0000] <MikeSmith>
http://damowmow.com/playground/htmlwg/chart.html

[22:18:04.0000] <MikeSmith>
the csv is up to date, though

[22:19:00.0000] <MikeSmith>
Last-Modified:Tue, 14 Dec 2010 08:13:26 GMT

[22:19:01.0000] <Hixie>
if the csv is up to date i don't know what to tell you

[22:19:02.0000] <Hixie>
there could be some weird locale-specific bug in my js maybe?

[22:19:03.0000] <Hixie>
or timezone-specific?

[22:19:04.0000] <MikeSmith>
must be something like that

[22:20:00.0000] <MikeSmith>
dunno what else it could possibly be

[22:20:01.0000] <erlehmann>
my locale is de_de.UTF-8 or something like that

[22:23:00.0000] <MikeSmith>
hsivonen: I have a couple simple parser patches for you

[22:23:01.0000] <MikeSmith>
to support the track element

[22:25:00.0000] <MikeSmith>
https://bitbucket.org/sideshowbarker/htmlparser/changeset/fbe6f9f0e8be/raw/htmlparser-fbe6f9f0e8be.diff

[22:25:01.0000] <MikeSmith>
for the tree builder

[22:25:02.0000] <Hixie>
well if anyone who can reproduce this chart issue can debug it and tell me what the problem is i'll happily fix it

[22:25:03.0000] <Hixie>
but since i can't repro it...

[22:26:00.0000] <MikeSmith>
and https://bitbucket.org/sideshowbarker/htmlparser/changeset/fbe6f9f0e8be/raw/htmlparser-fbe6f9f0e8be.diff

[22:26:01.0000] <MikeSmith>
for the SAX serializer

[22:39:00.0000] <hsivonen>
MikeSmith: thanks. I need to figure out a landing schedule that keeps Firefox in sync with the Java version

[22:40:00.0000] <MikeSmith>
ok

[23:16:00.0000] <MikeSmith>
hsivonen: btw, I managed to get your GWT/Live Dom Viewer  parser shell thing running in my environment

[23:16:01.0000] <MikeSmith>
that thing's pretty nice

[23:18:00.0000] <hsivonen>
MikeSmith: did you get the GWT linkier working in the current GWT?

[23:18:01.0000] <hsivonen>
*linker

[23:18:02.0000] <MikeSmith>
yeah

[23:18:03.0000] <MikeSmith>
2.1 or 2.01 or whatever the current is

[23:18:04.0000] <MikeSmith>
on OSX

[23:19:00.0000] <hsivonen>
cool. what did you need to change?

[23:19:01.0000] <MikeSmith>
I removed -XstartOnFirstThread or whatever it's named

[23:19:02.0000] <MikeSmith>
& changed the name of the dev jar file

[23:19:03.0000] <hsivonen>
no changes to linker settings in any config files?

[23:20:00.0000] <MikeSmith>
hang on I'll pastebin a diff

[23:21:00.0000] <MikeSmith>
btw, I couldn't get it to run correctly from within Eclipse

[23:21:01.0000] <MikeSmith>
Tomcat can't seem to find the *nocache.js file

[23:24:00.0000] <MikeSmith>
hsivonen: https://gist.github.com/741736

[23:27:00.0000] <hsivonen>
MikeSmith: I am surprised that you didn't need to change anything else

[23:28:00.0000] <MikeSmith>
yeah, me too

[23:28:01.0000] <MikeSmith>
but it worked… used it to test the track-element changes in my workspace

[23:29:00.0000] <MikeSmith>
hsivonen: oh hey, there's no way to have it emit messages for parse errors?

[23:30:00.0000] <MikeSmith>
to the console maybe?

[23:30:01.0000] <hsivonen>
MikeSmith: not implemented...

[23:30:02.0000] <MikeSmith>
ok

[02:24:00.0000] <Lachy>
yay, the versioning issue is finally resolved :-)

[03:30:00.0000] <zcorpan>
Hixie: i also get mid-nov in the chart

[03:30:01.0000] <zcorpan>
left-most label is Oct

[03:38:00.0000] <zcorpan>
Hixie: i think it's this line that makes the date go from Nov 02 to Oct 31:   x_0_date.setDate(0);

[03:39:00.0000] <zcorpan>
commenting out that line fixes the labels

[03:40:00.0000] <zcorpan>
"The setDate() method sets the day of the month (from 1 to 31), according to local time."

[03:41:00.0000] <annevk>
hmm, if you have eight different HTML classes of which any combination can be applied to elements; how do you do some kind of unique styling without listing all permutations?

[03:41:01.0000] <annevk>
that is not really possible, is it?

[03:42:00.0000] <zcorpan>
Hixie: "Required. An integer between 1 and 31 representing the day of a month" - changing the argument to 1 also fixes the labels, at least for me

[03:43:00.0000] <annevk>
I want something like if a is applied show an icon for a, if b is applied show an icon for b, if both are applied show an icon for both

[03:44:00.0000] <Philip`>
annevk: Map one class onto bold, one onto italic, one underline, map three onto 8 colours, and map two onto 4 font sizes?

[03:46:00.0000] <annevk>
:)

[04:15:00.0000] <MikeSmith>
is it incorrect to say "the Console Interface"?

[04:15:01.0000] <MikeSmith>
should it just be "Console object"?

[04:16:00.0000] <zcorpan>
MikeSmith: depends on what you mean :)

[04:16:01.0000] <MikeSmith>
I mean if I'm producing a spec for it

[04:17:00.0000] <zcorpan>
if you're defining the interface, say interface

[04:18:00.0000] <MikeSmith>
OK

[04:44:00.0000] <annevk>
MikeSmith, is the @html5 account meant to repeat me when I tweet about HTML5?

[04:44:01.0000] <MikeSmith>
yeah

[04:44:02.0000] <annevk>
k

[04:45:00.0000] <MikeSmith>
if you don't want it to, let me know

[04:45:01.0000] <MikeSmith>
it picks up whatever Planet HTML5 does

[04:45:02.0000] <annevk>
it's ok, was just wondering

[04:46:00.0000] <MikeSmith>
OK

[04:46:01.0000] <MikeSmith>
I set up Planet HTML5 recently to aggregate tweets from a few people

[06:46:00.0000] <zcorpan>
oh, so now it's "*Big* triage sub-team"?

[06:46:01.0000] <zcorpan>
/me updates his filters

[08:59:00.0000] <TabAtkins>
annevk: You need each class to apply styling from a different rule.

[08:59:01.0000] <TabAtkins>
But no, you can't do the multiple-icons thing without multiple ::before or something.

[09:00:00.0000] <TabAtkins>
(So .a could set ::before(1), .b could set ::before(2), etc.)

[09:03:00.0000] <annevk>
generating markup instead

[09:03:01.0000] <annevk>
at the moment

[09:03:02.0000] <TabAtkins>
Yeah, that works.

[09:03:03.0000] <annevk>
but it fugly :)

[09:04:00.0000] <TabAtkins>
Just put a bunch of <span class=for-a></span><span class=for-b></span> etc at the beginning of each element that needs it.

[09:04:01.0000] <annevk>
o_O

[09:05:00.0000] <TabAtkins>
Then set width/height/background on the appropriate one based on class.

[09:05:01.0000] <TabAtkins>
This emulates the ::before-based approach I talked about by junking up the DOM.

[09:06:00.0000] <annevk>
hmm, I think I reduced my dataset to 69

[09:06:01.0000] <annevk>
getting somewhere

[09:08:00.0000] <TabAtkins>
This is the encoding stuff?

[09:10:00.0000] <annevk>
yes

[09:11:00.0000] <annevk>
making the results somewhat readable takes a bit more time than expected

[09:11:01.0000] <annevk>
and Donkey Kong is quite the distraction

[09:11:02.0000] <annevk>
which reminds me...

[09:12:00.0000] <TabAtkins>
Hehe.

[09:13:00.0000] <TabAtkins>
/me loves the component model discussion, because he gets to throw around terms like "light node", "shadow node", and "twilight node".  ^_^

[09:13:01.0000] <bga_>
web2.0

[09:14:00.0000] <bga_>
portscaners based on `new Image`, ddos bases on `new Image`, distribated calculations based on webworkers

[09:15:00.0000] <bga_>
so easy to ddos concurent site.

[09:16:00.0000] <bga_>
var i = 1000; while(i--) Image(urlForDDos + 'rand=' + Math.random());

[09:16:01.0000] <bga_>
* var i = 1000; while(i--) Image().src = urlForDDos + 'rand=' + Math.random();

[09:18:00.0000] <TabAtkins>
Yeah, there you go.

[09:19:00.0000] <AryehGregor>
This is different from what you could do in HTML 2 how?

[09:19:01.0000] <TabAtkins>
It's not.

[09:19:02.0000] <jgraham>
TabAtkins: Twilight Node? That sounds like a party for people like gsnedders 

[09:20:00.0000] <TabAtkins>
Heh.

[09:20:01.0000] <AryehGregor>
for i in seq(1000): print '<img src="' + urlForDdos + 'rand=' + i + '">'

[09:20:02.0000] <bga_>
UA should suppress it

[09:21:00.0000] <AryehGregor>
How so?

[09:21:01.0000] <JusticeFries>
has anybody had any issues where the video src for an m4v will load in safari only some of the time? tailing my nginx logs reveal that some safari clients are requesting it using quicktime, and others are requesting it using coremedia.

[09:21:02.0000] <JusticeFries>
is there a way to "force" coremedia?

[09:21:03.0000] <TabAtkins>
So, shadow node is obvious - it's a node in some element's shadow tree.  Light node is a normal DOM node, in contrast to a shadow node.  Twilight node is a light node when you're talking about it as a descendant of the shadow tree int he final flattened tree.

[09:21:04.0000] <bga_>
i do not know

[09:22:00.0000] <TabAtkins>
bga_: There is absolutely no way to automatically tell a ddos like you outline and a perfectly legitimate act of precaching.  What Aryeh outlines is even more innocuous.

[09:22:01.0000] <TabAtkins>
I've constructed pages with a thousand images on them before.

[09:22:02.0000] <bga_>
may be more hard limit of connections

[09:22:03.0000] <AryehGregor>
Browsers do impose a connection limit.

[09:22:04.0000] <TabAtkins>
Browsers already limit connections.

[09:23:00.0000] <bga_>
yes

[09:23:01.0000] <TabAtkins>
That's why ddos has two Ds.  You need the "distributed" part to get enough connections.

[09:49:00.0000] <Aleoss>
http://validator.w3.org/check?uri=https%3A%2F%2Fwww.sexylikeapornstar.com%2F%3Fp%3Dcontact%26v%3Don&charset=%28detect+automatically%29&doctype=Inline&ss=1&outline=1&group=0&No200=1&verbose=1&user-agent=W3C_Validator%2F1.1

[09:49:01.0000] <Aleoss>
I'm guessing the W3 Validator needs to be updated?

[09:51:00.0000] <Aleoss>
Just updated the code again. 13 errors.

[10:11:00.0000] <TabAtkins>
Aleoss: Why are you putting aria on your form inputs?  Everything I see is completely redundant and unnecessary.

[10:12:00.0000] <Aleoss>
TabAtkins: http://www.whatwg.org/specs/web-apps/current-work/#annotations-for-assistive-technology-products-%28aria%29

[10:12:01.0000] <Aleoss>
TabAtkins: It is a requirement with the role attribute.

[10:12:02.0000] <TabAtkins>
Let me rephrase that.  Why are you putting roles on your form inputs?  Everything I see is completely redundant and unnecessary.

[10:13:00.0000] <Aleoss>
TabAtkins: Accessibility. Should things not have a role?

[10:13:01.0000] <Aleoss>
TabAtkins: My page validates perfectly fine on TotalValidator but not on W3 Validator.

[10:13:02.0000] <TabAtkins>
No, they already have the appropriate meaning, by virtue of their tag names.  You use ARIA when you're making things that should act like those roles, but aren't normally.

[10:14:00.0000] <TabAtkins>
<option> is natively an option, so you don't need to repeat it.  <select> is natively a listbox, so you don't need to list it.  unselected <option>s are natively unselected, etc.

[10:15:00.0000] <TabAtkins>
Note that the ARIA table in the spec lists the roles *that are present automatically by default*.

[10:15:01.0000] <TabAtkins>
Below that there is a list of the handful of elements that you're allowed to put @role on.

[10:16:00.0000] <TabAtkins>
And what roles are allowed.

[10:16:01.0000] <TabAtkins>
I suspect you were probably reading the first table as listing aria roles that you should add to your HTML.  It's the opposite - it lists what the ARIA roles are by default, so you don't need to list them.  ^_^

[10:17:00.0000] <Aleoss>
TabAtkins: Ah. Ya. Didn't read that part up top.

[10:18:00.0000] <bga_>
oh i know. UA should parses every HTTP response and if UA find special header Access-Ban: %time in GMT format when ban will ends% it should prevent any requests to target host

[10:19:00.0000] <Aleoss>
bga_: The server would still be sending that out. May as well just send them to a 401 Forbidden

[10:21:00.0000] <TabAtkins>
bga_: That relies on UAs being nice.  It doesn't stop programs from ddos'ing, and it probably won't stop things like Flash.

[10:21:01.0000] <TabAtkins>
It also sounds like an easy way to accidentally kill your site.

[10:22:00.0000] <Aleoss>
bga_: As TabAtkins stated. Don't trust the client. Clients can modify packets, have custom browsers, etc. The ONLY thing for certain about what the user gives you is the requesting IP address and the URL being requested.

[10:22:01.0000] <TabAtkins>
Aleoss: That said, you *should* be able to set @role and such the way you're doing, because you're matching the spec.  It's just not necessary, so I recommend not doing it.

[10:23:00.0000] <Aleoss>
bga_: I say requesting IP address as it may not be the client itself requesting the content, they could be using an anonymous proxy server.

[10:24:00.0000] <bga_>
Aleoss yes but i`m speaking about major UAs

[10:24:01.0000] <Aleoss>
bga_: Then you're facing severe security breaches.

[10:24:02.0000] <bga_>
yes i can ddos any site using curl

[10:25:00.0000] <Aleoss>
bga_: And banning is pointless, people can change their IP so easily. The only *effective* banning method is have user accounts on your site and have it 1 account per e-mail (or per cellphone--like CraigsList) and ban the account.

[10:26:00.0000] <Aleoss>
bga_: Banning is just a deterrent that can always be evaded.

[10:26:01.0000] <Aleoss>
BRB

[10:27:00.0000] <TabAtkins>
Aleoss: You're not understanding bga_'s proposal, actually.  He's trying to avoid the "I can open up connections forever" problem by having a value that lets the page indicate "Hey, browser, stop opening connections to me until [time]."

[10:27:01.0000] <bga_>
yes

[10:27:02.0000] <AryehGregor>
TabAtkins, why should you be allowed to specify the default role on elements?  That seems like it will just confuse authors and encourage cargo-cult copy-paste.

[10:28:00.0000] <TabAtkins>
AryehGregor: Because the spec says you can.

[10:28:01.0000] <AryehGregor>
I asked why you *should* be allowed to, not why you *are* allowed to.

[10:28:02.0000] <TabAtkins>
Oh.  I have no particular reason.

[10:28:03.0000] <TabAtkins>
I'm just saying that the validator should be allowing it.

[10:28:04.0000] <jgraham>
Oh, microsoft have submitted a WebSockets draft

[10:28:05.0000] <TabAtkins>
That probably wasn't clear from my wording.

[10:29:00.0000] <jgraham>
And it seems toi be based on the thing that everyone thought was insecure

[10:29:01.0000] <TabAtkins>
yay

[10:29:02.0000] <jgraham>
But maybe I am missing something

[10:29:03.0000] <jgraham>
So, Google have two drafts (abarth works for Google, right?), Microsoft have one and there are a few others floating around

[10:30:00.0000] <TabAtkins>
Yes, abarth is ours.

[10:30:01.0000] <jgraham>
Maybe Opera should submit one just for giggles

[10:30:02.0000] <TabAtkins>
Do it in Norwegian.

[10:30:03.0000] <TabAtkins>
Rather, do the handshake in Norwegian.

[10:30:04.0000] <TabAtkins>
No router understands that.

[10:31:00.0000] <AryehGregor>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=11557

[10:31:01.0000] <jgraham>
TabAtkins: Well I certainly don't

[10:36:00.0000] <abarth>
the hybi list has too much traffic

[10:36:01.0000] <abarth>
i can't keep up with it :(

[10:37:00.0000] <Philip`>
Is that traffic making any progress?

[10:37:01.0000] <abarth>
i'm not sure folks are presenting any new information

[10:39:00.0000] <dglazkov>
TabAtkins: thanks for keeping the XBL2 discussion going.

[10:39:01.0000] <dglazkov>
are you going to respond on mem requirements?

[10:41:00.0000] <TabAtkins>
Yes, responding now.  You probably want to follow up after me, since you know the technical details much better.  Give me a another minute or two.

[10:41:01.0000] <dglazkov>
don't want to break your rhythm :)

[10:46:00.0000] <TabAtkins>
k, feel free.

[11:21:00.0000] <hsivonen>
what problem does the Microsoft hand shake solve compared to CONNECT plus xor?

[11:21:01.0000] <hsivonen>
/me was too lazy to read the draft

[11:24:00.0000] <MikeSmith>
Aleoss: the ARIA checking in the validator is not up to date with the spec

[11:24:01.0000] <MikeSmith>
there are a number of open issues related to it

[11:25:00.0000] <MikeSmith>
it's not a terrifically high priority

[11:55:00.0000] <Hixie>
i applied zcorpan's fix to the htmlwg chart

[11:57:00.0000] <jgraham>
abarth: Yeah, I feel the same way (too much volume, not obvious what the signal is)

[11:59:00.0000] <jgraham>
hsivonen: They said it was "based on" one Greg presented. If that is the one I recall it seemed to require an extra round trip and not offer much more security (nothing provable, at least)

[11:59:01.0000] <jgraham>
But that could well be an unfair assessment

[12:00:00.0000] <annevk>
agreed about signal/noise on hybi

[12:00:01.0000] <annevk>
pretty close to just removing myself from the list

[12:02:00.0000] <karlcow>
http://news.cnet.com/8301-30685_3-20025721-264.html

[12:02:01.0000] <karlcow>
"Microsoft gives Firefox an H.264 video boost"

[12:04:00.0000] <annevk>
also known as evil?

[12:04:01.0000] <karlcow>
Does that mean people using firefox on linux will not have access to it?

[12:04:02.0000] <TabAtkins>
Yes.

[12:04:03.0000] <karlcow>
annevk: yes quite strange as a strategy

[12:30:00.0000] <Hixie>
wow

[12:30:01.0000] <Hixie>
my computer is in a weird state

[12:30:02.0000] <Hixie>
i have an open tcp connection (this one), but no ip address

[12:31:00.0000] <AryehGregor>
That seems impossible.

[12:31:01.0000] <Hixie>
agreed

[12:32:00.0000] <AryehGregor>
Okay, well, now it really seems impossible.

[12:32:01.0000] <Philip`>
What says you have no IP address?

[12:32:02.0000] <AryehGregor>
I could buy that I'd see your messages until the connection timed out, but not that you could see mine.

[12:32:03.0000] <Hixie>
oooh, i wonder if this is an ipv6 connection

[12:32:04.0000] <Hixie>
i do have an ipv6 address

[12:32:05.0000] <AryehGregor>
Clearly you have an IP address, or else how could you be receiving anything?

[12:32:06.0000] <Hixie>
just not ipv4

[12:32:07.0000] <AryehGregor>
Well, whois yourself and get your hostmaks.

[12:32:08.0000] <AryehGregor>
hostmask.

[12:32:09.0000] <AryehGregor>
Oh, wait.

[12:32:10.0000] <Hixie>
this is an ssh connection

[12:32:11.0000] <AryehGregor>
That's your server, I guess.

[12:32:12.0000] <AryehGregor>
So log into the server and snoop on incoming connections.

[12:33:00.0000] <Hixie>
lsof confirms, this isan ipv6 connection

[12:33:01.0000] <Hixie>
that's pretty funny

[12:34:00.0000] <Hixie>
i have an ipv6 native pipe from mountain view, califormia to trondheim, norway, but i can't get to LA.

[12:34:01.0000] <Hixie>
ok there we go

[12:34:02.0000] <Hixie>
i wish i understood why sometimes my mac's firewall decides to even block inbound DHCP packets

[12:39:00.0000] <AryehGregor>
So "const int FOO = BAR/BAZ;" where BAR and BAZ are constants doesn't work in C?  Lame.

[12:39:01.0000] <AryehGregor>
/me goes back to #define for that one

[12:42:00.0000] <AryehGregor>
Why does C hate programmers so much?

[12:43:00.0000] <Philip`>
Because it was designed to be relatively easy to write compilers for?

[12:43:01.0000] <AryehGregor>
Yeah, figures.

[12:44:00.0000] <AryehGregor>
I can't imagine it's so hard to tell whether an expression is constant at compile time.

[12:44:01.0000] <AryehGregor>
You can't have circular loops, you only have to look at the previous lines.

[12:44:02.0000] <AryehGregor>
As long as there are no function calls.

[12:45:00.0000] <annevk>
hmm, using an iframe instead of xhr fails in IE

[12:45:01.0000] <annevk>
for loading bytes and analyzing them

[12:45:02.0000] <Philip`>
Maybe they didn't want to require compilers to implement a division function

[12:45:03.0000] <AryehGregor>
Uh, I'm pretty sure C compilers are required to support division.

[12:45:04.0000] <AryehGregor>
(although it's very slow in OpenCL)

[12:45:05.0000] <Philip`>
In the programs they compile - not necessarily in the compiler itself

[12:46:00.0000] <AryehGregor>
. . . but you can do const int foo = 1/5.0; or such.

[12:46:01.0000] <Philip`>
I thought you were complaining that you couldn't do that?

[12:46:02.0000] <AryehGregor>
No, you can.

[12:47:00.0000] <AryehGregor>
You can't do const float foo = 1.0; const float bar = 5.0; const float baz = foo/bar;

[12:48:00.0000] <Philip`>
Oh, okay, I was misunderstanding

[12:48:01.0000] <Hixie>
if i have a zipfile, is there a program on linux that i can pipe it to to unzip it?

[12:48:02.0000] <Philip`>
I think there's no guarantee the value of a const is available at runtime - it might be defined in a different compilation unit

[12:48:03.0000] <Hixie>
unzip doesn't seem to accept input from stdin

[12:48:04.0000] <AryehGregor>
zip/unzip on Linux stink.

[12:49:00.0000] <AryehGregor>
Maybe you can trick it by telling it to unzip /dev/stdin, but I don't know if that actually makes sense.

[12:49:01.0000] <Philip`>
Hixie: 7z with "-si" ?

[12:49:02.0000] <Hixie>
AryehGregor: tried that without success

[12:49:03.0000] <AryehGregor>
/me hasn't gotten /dev/stdin to work how he wants it, generally

[12:49:04.0000] <Philip`>
(and "-tzip")

[12:49:05.0000] <Hixie>
i don't seem to have 7z

[12:49:06.0000] <AryehGregor>
Well, you could save the input to a temporary file.

[12:50:00.0000] <Hixie>
yeah that's the only solution i seem to be left with

[12:50:01.0000] <Hixie>
oh well

[12:50:02.0000] <Hixie>
lame

[12:50:03.0000] <AryehGregor>
zip and unzip are very lame.

[12:50:04.0000] <AryehGregor>
7z is also pretty lame.

[12:50:05.0000] <AryehGregor>
Someone needs to patch tar so it can handle ZIP and 7zip files.

[12:51:00.0000] <AryehGregor>
Well, that might be weird, I guess.

[12:51:01.0000] <AryehGregor>
Since the files don't actually have tars in them.

[12:51:02.0000] <AryehGregor>
But make tar and gzip workalikes.

[12:51:03.0000] <AryehGregor>
That accept the same options and such.

[12:52:00.0000] <AryehGregor>
/me doesn't actually mind writing in C too much, as long as it's not OpenCL

[12:53:00.0000] <Philip`>
/me can cope with C99 since it's close enough to C++ and doesn't force you to declare variables at the tops of functions

[12:54:00.0000] <AryehGregor>
/me was referring to C99

[12:54:01.0000] <AryehGregor>
But now I need to write a CRC32 implementation for OpenCL, since of course no one has ever done this before.

[12:54:02.0000] <AryehGregor>
I just have to make my life difficult, don't I?

[12:55:00.0000] <AryehGregor>
Needless to say, the normal implementations I see use a lookup table, which almost certainly needs to be scrapped to perform acceptably on a GPU.

[12:55:01.0000] <AryehGregor>
Hmm, no, I can keep it in const memor.y

[12:55:02.0000] <AryehGregor>
memor.y

[12:55:03.0000] <AryehGregor>
memory.

[12:55:04.0000] <AryehGregor>
.

[12:55:05.0000] <david_carlisle>
hixie: funzip but only if the zip file has one file in it  takes zip on stdin and puts output on stdout

[12:56:00.0000] <Hixie>
david_carlisle: thanks

[12:56:01.0000] <AryehGregor>
Okay, so SSE4.2 has a CRC32 instruction?  Seriously?

[12:56:02.0000] <AryehGregor>
Meh, what do I care, this is <0.1% of my runtime anyway, I just won't optimize it.

[12:57:00.0000] <AryehGregor>
Well, I guess the new processors will have AES instructions, right . . .

[13:21:00.0000] <webr3>
anybody know if the majro browsers handle multipart/* http messages, for instance multipart/alternative ?

[13:26:00.0000] <Hixie>
jgraham: pimpmyspec isn't responding

[13:36:00.0000] <zcorpan>
rather than hacks like http://filamentgroup.com/lab/responsive_images_experimenting_with_context_aware_image_sizing/ we should have 'progressive' images and the browser aborts the download when it has good enough resolution of the image

[13:37:00.0000] <TabAtkins>
Yes, we should.

[13:40:00.0000] <annevk>
if I have {"a": [1,2], "b": [1,2], "c": [2,3], "d": [1,2]} in Python, how do I easily turn that into {[1,2]: ["a", "b", "d"], [2,3]: "c"}?

[13:42:00.0000] <Hixie>
ok so there's a desire for a feature on <track> that enables the track if the user's preferences don't suggest to enable any other track

[13:42:01.0000] <Hixie>
default=""?

[13:42:02.0000] <Hixie>
as in <track default ...>?

[13:42:03.0000] <zcorpan>
annevk: you don't want {[1,2]: ["a", "b", "d"], [2,3]: ["c"]} ?

[13:43:00.0000] <annevk>
zcorpan, I do, typo

[13:43:01.0000] <Hixie>
zcorpan: thanks for that bug fix on the htmlwg chart btw

[13:43:02.0000] <annevk>
Hixie, first track?

[13:43:03.0000] <Hixie>
annevk: well usually there won't be one

[13:43:04.0000] <Hixie>
annevk: or do you mean, first track with disabled="" wins?

[13:44:00.0000] <annevk>
without

[13:44:01.0000] <Hixie>
well usually you don't want any track enabled by default

[13:44:02.0000] <annevk>
oh I see

[13:44:03.0000] <Hixie>
it's pretty rare that you want one

[13:44:04.0000] <annevk>
enable?

[13:44:05.0000] <annevk>
enable=""

[13:44:06.0000] <matjas>
zcorpan: “[use JS to provide Flash fallback for <audio>] To fallback to flash when <audio> is supported but MP3 isn't. Doesn't work with click-to-load-plugins since the flash is invisible.” → Thanks, hadn’t thought of that

[13:44:07.0000] <annevk>
or show=""

[13:45:00.0000] <matjas>
zcorpan: So if none of the <audio> sources are supported by the browser, the fallback content will still be ignored?

[13:45:01.0000] <Hixie>
show="" and enable="" sound like they would override user preference

[13:48:00.0000] <zcorpan>
matjas: right

[13:49:00.0000] <matjas>
zcorpan: That’s too bad. I can’t think of any drawbacks this would introduce… Are there any? Or is it just very hard to implement?

[13:50:00.0000] <matjas>
[i.e. the concept of displaying fallback content in case none of the audio/video sources can be understood by the browser)

[13:52:00.0000] <zcorpan>
matjas: has been discussed several times on the list

[13:52:01.0000] <matjas>
I’m sorry if that has been discussed here before (I don’t doubt it is)

[13:53:00.0000] <zcorpan>
matjas: one problem is that the browser doesn't know when the page has stopped appending new <source>s to try

[13:53:01.0000] <zcorpan>
matjas: if all have failed, you can still append a new <source> and the browser will attempt to play that one too

[13:54:00.0000] <matjas>
zcorpan: But the browser doesn’t know when the page has stopped appending stylesheets as well — it just redraws/repaints as soon as it’s needed

[13:56:00.0000] <zcorpan>
so?

[13:57:00.0000] <matjas>
My understanding of how browsers work is limited, but I assumed that the browser could just attempt to play new sources as they’re added and display the fallback content if none of the sources can be played.

[13:58:00.0000] <matjas>
I can see how that would be much more complicated to implement though.

[13:58:01.0000] <zcorpan>
we don't want to flip flop between the fallback content and showing video

[13:59:00.0000] <Hixie>
hmm

[13:59:01.0000] <Hixie>
i wonder how to make this default="" feature work

[13:59:02.0000] <Hixie>
i guess i could require that it be the last one

[13:59:03.0000] <Hixie>
the problem is that there's no way to know otherwise when the tracks have all been seen

[14:02:00.0000] <zcorpan>
annevk: i guess you'd just create a new dict, iterate over the values of the old dict, check if the new dict has a key matching the current value, if not set the value to an empty list, then append the old key to the value

[14:02:01.0000] <zcorpan>
/me is not a python geek though so doesn't know if there are shortcuts

[14:04:00.0000] <annevk>
I found something

[14:04:01.0000] <annevk>
the problem is that sets/lists cannot be keys

[14:05:00.0000] <AryehGregor>
annevk, can't you use tuples?

[14:05:01.0000] <annevk>
so now I'm using a single list where values are key+1

[14:05:02.0000] <zcorpan>
oh right, you need to convert them to tuples

[14:05:03.0000] <AryehGregor>
Or frozensets?

[14:05:04.0000] <annevk>
ooh, frozenset works for dict?

[14:05:05.0000] <AryehGregor>
You can't use mutable objects as keys.

[14:05:06.0000] <annevk>
oh well

[14:05:07.0000] <AryehGregor>
But immutable ones work, I think.

[14:05:08.0000] <annevk>
I see

[14:09:00.0000] <AryehGregor>
dict([(tuple(value), key) for (key, value) in a.items()]) almost works, but not quite.

[14:10:00.0000] <AryehGregor>
Somewhat essentially not quite.

[14:10:01.0000] <AryehGregor>
Imperative is probably the way to go.

[14:13:00.0000] <AryehGregor>
for key, val in a.items():\nif tuple(val) not in b:\nb[tuple(val)] = []\nb[tuple(val)].append(key)

[14:13:01.0000] <AryehGregor>
Python is really lousy for trading snippets over IRC.

[14:16:00.0000] <zcorpan>
AryehGregor: at least it was less verbose than my english description

[14:17:00.0000] <AryehGregor>
It's not so much the verbosity that I object to, it's the need to express detailed whitespace.

[14:18:00.0000] <AryehGregor>
If it used Perl-like conventions in that regard, I could have said: for key, val in a.items() { if tuple(val) not in b { b[tuple(val)] = [] } b[tuple(val)].append(key) }

[14:18:01.0000] <AryehGregor>
Without having to use \n and assume the reader is smart enough to insert correct indentation.

[14:18:02.0000] <AryehGregor>
(But I'm overall a fan of Python's whitespace handling, controversial though it may be.

[14:18:03.0000] <AryehGregor>
)

[14:20:00.0000] <hober>
exit

[14:20:01.0000] <hober>
exit

[14:20:02.0000] <hober>
err, sorry

[14:20:03.0000] <zcorpan>
hober: maybe third time it'll work?

[14:21:00.0000] <hober>
:)

[14:21:01.0000] <hober>
damn fn-to-the-left-of-ctrl keyboards

[14:48:00.0000] <annevk>
anyone interested in my encoding data?

[14:48:01.0000] <annevk>
I have something I could post to www-archive

[14:48:02.0000] <AryehGregor>
Why not post to whatwg?

[14:48:03.0000] <annevk>
it's a large HTML file

[14:48:04.0000] <AryehGregor>
Ah.

[14:48:05.0000] <AryehGregor>
You're aiming to standardize this in HTML5 or what?

[14:49:00.0000] <annevk>
I was thinking a Web Encodings spec

[14:49:01.0000] <annevk>
but this is a big mess

[14:49:02.0000] <zcorpan>
annevk: www-archive seems fine

[14:51:00.0000] <annevk>
sending message

[14:51:01.0000] <annevk>
o_O

[14:51:02.0000] <annevk>
it's only 160kb

[14:54:00.0000] <annevk>
hmm, www-archive is slow

[14:55:00.0000] <jgraham>
Hixie: Yes, it is not responding

[14:55:01.0000] <annevk>
here is another copy: http://quuz.org/tempxxx/table.html

[14:55:02.0000] <jgraham>
AryehGregor: You want "from collections import defaultdict"

[14:56:00.0000] <jgraham>
then result = defaultdict(list)

[14:56:01.0000] <jgraham>
thn you can do result.append without checking for existance first

[14:56:02.0000] <jgraham>
or result[key].append, rather

[14:58:00.0000] <annevk>
AryehGregor, jgraham, when I publish my Python in some repository later you guys can tweak it :)

[14:58:01.0000] <annevk>
and with later I really mean tomorrow

[14:58:02.0000] <karlcow>
http://lists.w3.org/Archives/Public/www-archive/2010Dec/

[14:59:00.0000] <annevk>
karlcow, see link above

[14:59:01.0000] <annevk>
I should have just uploaded it somewhere from the start and not have bothered with www-archive I guess...

[14:59:02.0000] <karlcow>
yeeha. thanks annevk 

[14:59:03.0000] <annevk>
scp is much faster

[14:59:04.0000] <karlcow>
hehe

[15:00:00.0000] <AryehGregor>
jgraham, figures Python has something built-in for that.  :)

[15:01:00.0000] <Hixie>
jgraham: k

[15:02:00.0000] <jgraham>
AryehGregor: defaultdict is all kinds of awesome. e.g. defaultdict(int) makes for a nice way of counting things

[15:02:01.0000] <jgraham>
I mean, it is a trivial idea, but really really useful

[15:02:02.0000] <jgraham>
Hixie: Not sure that I can do anything except wait for it to come back up

[15:03:00.0000] <Hixie>
jgraham: who hosts it?

[15:04:00.0000] <jgraham>
WebFaction

[15:04:01.0000] <jgraham>
Their status blog doesn't say anything useful

[15:05:00.0000] <jgraham>
And the machine is clearly up

[15:06:00.0000] <Hixie>
k

[15:07:00.0000] <Hixie>
if it was dreamhost i'd say send in a support request, but don't know what webfaction are like

[15:08:00.0000] <beowulf_>
dreamhost support is so... supportive 

[15:10:00.0000] <Hixie>
they are indeed very enthusiastic

[15:10:01.0000] <Hixie>
it's kinda funny

[15:10:02.0000] <Hixie>
not always immediately helpful, mind you :_)

[15:20:00.0000] <karlcow>
discovering defaultdict because of jgraham http://docs.python.org/library/collections.html#collections.defaultdict

[15:21:00.0000] <AryehGregor>
I had read about it before, but forgot, since I don't have a chance to write Python as much as I'd like.

[15:29:00.0000] <annevk>
hmm, http://dev.w3.org/html5/html-device/ got killed?

[15:35:00.0000] <TabAtkins>
annevk: http://www.google.com/search?q=python+invert+dict

[15:37:00.0000] <AryehGregor>
TabAtkins, that doesn't do what he asked with respect to duplicates.

[15:37:01.0000] <AryehGregor>
That one-liner is basically what I wrote, but it eats duplicates rather than merging them.

[15:37:02.0000] <AryehGregor>
In fact, your first result says: "NOTE: This only works if there are no duplicate values in the dictionary. If there are common values only the last key will be preserved once swapped. One way to deal with duplicate values is to turn all keys with a common value into a list when you invert the dictionary. I haven't found a shortcut for that method yet."

[15:37:03.0000] <TabAtkins>
Which one liner?  I just provided a search link to appropriate resources.

[15:38:00.0000] <AryehGregor>
The first one.

[15:38:01.0000] <AryehGregor>
And the second relevant result too.

[15:38:02.0000] <AryehGregor>
And the third.

[15:38:03.0000] <AryehGregor>
Except the third addresses the issue by giving some imperative code that basically does what mine did.

[15:39:00.0000] <AryehGregor>
(and the other guy, someone else said it first, I forget who)

[15:39:01.0000] <annevk>
I solved it almost two hours ago btw

[15:39:02.0000] <annevk>
though slightly hackish

[15:39:03.0000] <AryehGregor>
. . . I mean, basically, we already answered the question like an hour ago, yeah.

[15:40:00.0000] <TabAtkins>
Well jeez, sorry.  ^_^  I ran through my scrollback and just answered it as soon as I saw it.

[15:40:01.0000] <annevk>
aaah; it is forgiven :)

[15:40:02.0000] <AryehGregor>
Ah, okay.  I was just puzzled about what you were trying to add.

[15:41:00.0000] <Hixie>
annevk: i just stopped updating it -- having too many things to update in my script makes the updates take ridiculously long and that one didn't really need to be there anyway since it was just a skeleton and not a wg deliverable anyway

[15:41:01.0000] <Hixie>
annevk: it's still in the html spec

[15:56:00.0000] <Hixie>
http://www.w3.org/mid/EAACC9DF6817544486F0D0ADA05CA428220044AD⊙Trcmc is relevant to people who care about how the composition on canvas works (the whole-image-vs-only-what-you-draw issue) (Philip`)

[15:57:00.0000] <jamesr_>
if only firefox actually implemented what the spec says

[15:58:00.0000] <jamesr_>
as i recall the conclusion from the last relevant thread on this was basically that what the spec says was internally consistent but weird, nobody actually implemented what it really said, and everyone would accept something else if it could be formalized well

[15:58:01.0000] <jamesr_>
and that Direct2D does not allow you to implement what the spec currently says

[15:58:02.0000] <Hixie>
that was indeed the last discussion

[15:58:03.0000] <Hixie>
dunno about the direct2d bit

[15:58:04.0000] <jamesr_>
that wasn't in the thread but is also true

[15:59:00.0000] <jamesr_>
so if IE9 wants to implement what the spec says i suppose microsoft could change D2D

[15:59:01.0000] <jamesr_>
which would be handy, since presumably firefox's D2D canvas implementation is going to match IE9


2010-12-16
[16:01:00.0000] <AryehGregor>
If we don't have interop anyway, presumably the spec is easier to change than Direct2D.

[16:05:00.0000] <TabAtkins>
Hm, does anyone support image-resolution yet in any way?

[16:05:01.0000] <TabAtkins>
I'm thinking that it's kinda silly to have resolution units which are just inverted length units.

[16:06:00.0000] <TabAtkins>
You can just use lengths instead.

[16:06:01.0000] <Hixie>
AryehGregor: in this particular instance, changing the spec is non-trivial (nobody has yet, to my knowledge, figured out a way to spec what is desired)

[16:09:00.0000] <jamesr_>
my bigger concern for compat is CoreGraphics, which can't implement the currently spec'd semantics

[16:09:01.0000] <jamesr_>
i doubt that apple will change CG to match what the spec says and i doubt that we'd be super happy to make chrome behave differently from what CoreGraphics does (since we use CG on the mac port)

[16:10:00.0000] <bckenny>
sorry, is this a problem with the basic compositing modes or with compositing + clipping?

[16:10:01.0000] <jamesr_>
the regions to which the compositing modes apply

[16:11:00.0000] <jamesr_>
for example if the composite mode is "copy" and you draw an image into a larger canvas, does that operation cause every pixel outside the target rectangle to become transparent black or no?

[16:11:01.0000] <bckenny>
ah

[16:11:02.0000] <jamesr_>
the spec says that everything outside of the target bounds of the image becomes transparent black because you first draw the image into an infinitely large transparent black bitmap, then composite that bitmap on top of the canvas using the specified composite mode

[16:12:00.0000] <jamesr_>
which (IMHO) is stupid and nobody does (except maybe opera)

[16:13:00.0000] <bckenny>
yeah it is

[16:14:00.0000] <Philip`>
I don't see how it could be impossible to implement in any graphics system - just draw onto a new temporary canvas-sized bitmap and then composite onto the canvas, instead of doing the drawing+compositing in a single step

[16:14:01.0000] <Philip`>
That wouldn't be particularly efficient but you only need to do it for weird compositing modes

[16:16:00.0000] <jamesr_>
well sure, it's not impossible if you are willing to be super super slow

[16:16:01.0000] <jamesr_>
but i'd rather not use a ton more memory and be slow to implement some functionality that no authors really want

[16:17:00.0000] <Philip`>
If no authors want it then it doesn't matter that it's slow

[16:17:01.0000] <Philip`>
and if authors do want it but you implement something different but faster, they still won't get what they want

[16:17:02.0000] <mdelaney>
Is the current drawing model in fact PorterDuff as Jatinder Mann says?

[16:17:03.0000] <jamesr_>
IE9 may just not support any other composite modes

[16:17:04.0000] <mdelaney>
And why is sticking with traditional porterduff so important?

[16:18:00.0000] <jamesr_>
PorterDuff defines what happens at each pixel

[16:18:01.0000] <bckenny>
is there a common use case that that conceptual model is needed for though?

[16:18:02.0000] <jamesr_>
it doesn't define what pixels you apply the operation to

[16:18:03.0000] <jamesr_>
bckenny: i'm sure you can construct cases and it's very easy to spec out the current model

[16:19:00.0000] <mdelaney>
jamesr_: So, webkit's behavior may be in compliance with porterduff then?

[16:20:00.0000] <bckenny>
I mean, apart from if you might want a transparent blank canvas other than your source image...does it buy you anything in the other compositing modes?

[16:21:00.0000] <bckenny>
because otherwise it just sounds like no one wants to define the extents of a source image and then just say "and it's destination everywhere else"

[16:21:01.0000] <jamesr_>
mdelaney: sure, but that's kind of orthogonal to the issue

[16:22:00.0000] <mdelaney>
jamesr_: I was just going to point out that in Jantinder's email, this is presumably the reasoning for going with Firefox/Opera's way: "We have since consulted with many graphics experts, and it appears that the spec as written, and implemented by Firefox and Opera, is the correct definition of Porter-Duff and composition operations, and its behavior is acceptable."

[16:22:01.0000] <jamesr_>
bckenny: sure. it's tricky if the source is some gradient with lots of transparency or other odd cases

[16:22:02.0000] <MikeSmith>
so TC39 is publishing yet another ES draft with no HTML version

[16:23:00.0000] <mdelaney>
jamesr_: but if both are porterduff in the end, then i'm not sure why Jantinder didn't mention how they came to that conclusion

[16:23:01.0000] <hober>
MikeSmith: your ->HTML conversion script will still work on the new one, I hope

[16:23:02.0000] <jamesr_>
mdelaney: porterduff isn't the significant bit here

[16:23:03.0000] <MikeSmith>
hober: problem is, it's not a script

[16:23:04.0000] <jamesr_>
it's the bounds of the region that you apply the composite operation in

[16:23:05.0000] <bckenny>
jamesr_: sure. I just think of it as compositing a textured quad, and everything else seems silly :)

[16:23:06.0000] <MikeSmith>
or, only partly a script

[16:23:07.0000] <hober>
ahh.

[16:23:08.0000] <jamesr_>
also that email seems to assume that Firefox or Opera match the spec

[16:23:09.0000] <MikeSmith>
manual cleanup :(

[16:24:00.0000] <jamesr_>
which is not true for either in all cases

[16:24:01.0000] <hober>
yeah, I've gone down that road before. 80% script, 20% one-off emacs macros I never remember to record

[16:24:02.0000] <jamesr_>
gregg tavares made a very nice test page in the last big thread about this that showed lots of inconsistencies

[16:25:00.0000] <TabAtkins>
I don't... I don't understand how you can *possible* publish an internet standard not in HTML.

[16:25:01.0000] <TabAtkins>
But then I think the same thing of the IETF and their ridiculously retarded RFC format.

[16:25:02.0000] <jamesr_>
TabAtkins: ECMAScript is not an internet standard, i guess

[16:27:00.0000] <TabAtkins>
Riiiight.

[16:27:01.0000] <TabAtkins>
Though, I suppose I was being unnecessarily restrictive.

[16:28:00.0000] <TabAtkins>
Why is anything anywhere published to the web not in HTML?

[18:41:00.0000] <MikeSmith>
 /me wonders if anybody has maybe started work on a WebSRT parser yet

[21:30:00.0000] <Hixie>
MikeSmith: foolip wrote a demo one

[21:31:00.0000] <MikeSmith>
ah cool

[21:31:01.0000] <Hixie>
MikeSmith: i'm going through some websrt feedback now though and making a number of changes to the syntax

[21:31:02.0000] <MikeSmith>
yeah, saw a checkin earlier

[21:31:03.0000] <Hixie>
there's a bunch more but pimpmyspec broke 

[21:54:00.0000] <MikeSmith>
Hixie: you busted the spec pimper?

[21:58:00.0000] <Hixie>
jgraham's server's down or something

[22:52:00.0000] <MrWax>
Does anyone know some good CMS systems that already have a beta version in HTML5 ?

[22:52:01.0000] <MrWax>
Drupal right?

[23:02:00.0000] <hsivonen>
isn't drupal drinking more RDFa kool aid?

[23:02:01.0000] <hsivonen>
what html5 features do they have?

[23:04:00.0000] <MikeSmith>
I saw mention recently of Wordpress adding some HTML5 stuff

[23:04:01.0000] <MikeSmith>
dunno if that counts as a good CMS system

[23:05:00.0000] <MrWax>
sure

[23:05:01.0000] <MrWax>
ill look it up

[23:05:02.0000] <MrWax>
can anyone else maybe name some larger web app products (preferbly cms) that have a beta version of their app in HTML5?

[23:05:03.0000] <MrWax>
i more mean that the CMS itself has a beta that uses some cool HTML (API) things

[23:06:00.0000] <MrWax>
i.e. for example webworkers if more than 400 nav tree items have to be added (since it could mess up ui handling)

[23:07:00.0000] <MrWax>
desktop notifications (sorry i know this is not spec, but i heard there are plans from some other brosers than chrome/safari to support later) that notify the os when a large upload is done so the user does not have to havet he browser focussed

[00:06:00.0000] <foolip>
MikeSmith, my implementation is http://people.opera.com/philipj/2010/10/02/ovc/demos/track.js and http://people.opera.com/philipj/2010/10/02/ovc/demos/websrt.js

[00:06:01.0000] <MikeSmith>
thanks

[00:06:02.0000] <MikeSmith>
/me takes a look

[00:07:00.0000] <foolip>
but it doesn't implement the rendering or any of the crap after the timecode (positioning)

[00:07:01.0000] <foolip>
but otherwise tries to do what the spec says

[00:07:02.0000] <foolip>
you'll see FEEDBACK in the source code, look at the long mail I sent for the details

[00:07:03.0000] <MikeSmith>
OK

[00:08:00.0000] <MikeSmith>
/me looks at websrt_parse(input)

[00:10:00.0000] <MikeSmith>
heh

[00:10:01.0000] <MikeSmith>
"FEEDBACK: this is a terrible idea"

[00:39:00.0000] <foolip>
right, in particular the parsing of the milliseconds

[00:40:00.0000] <foolip>
00:00.1 parses to 0.001 s :)

[00:40:01.0000] <foolip>
because that's what SRT parsers like VLC does

[00:51:00.0000] <MikeSmith>
foolip: well, that's not so great

[00:51:01.0000] <MikeSmith>
they do that by design?

[00:51:02.0000] <MikeSmith>
or just due to a bug that nobody ever bothered to fix?

[00:52:00.0000] <foolip>
I'm not sure

[00:52:01.0000] <foolip>
but I believe they're not the only one to do just that

[00:52:02.0000] <foolip>
it's kind of easier to write in C that way

[00:53:00.0000] <MikeSmith>
I guess it's easier to write it in anything that way

[00:54:00.0000] <MikeSmith>
the date parser in v8 was giving that same result for parsing times with milliseconds, in ISO format

[00:54:01.0000] <MikeSmith>
until recently

[00:56:00.0000] <MikeSmith>
and the cause was partly just that it was expecting/assuming three digits for the milliseconds part

[00:56:01.0000] <MikeSmith>
which is what the spec requires

[00:56:02.0000] <MikeSmith>
but of course not always what people do

[00:57:00.0000] <MikeSmith>
foolip: does it handle 00:00.100 correctly?

[00:57:01.0000] <MikeSmith>
or does it also treat that as 0.001 ?

[00:58:00.0000] <foolip>
it parses the digits after the decimal point as an integer and takes that as the number of milliseconds

[00:59:00.0000] <foolip>
so it's only correct when there are exactly 3 decimals

[01:02:00.0000] <MikeSmith>
ok

[01:03:00.0000] <MikeSmith>
that's not quite as bad, then

[01:03:01.0000] <MikeSmith>
though still not good

[01:06:00.0000] <MikeSmith>
but I can understand why it gives that result

[01:07:00.0000] <MikeSmith>
should instead do something like this:

[01:07:01.0000] <MikeSmith>
http://codereview.chromium.org/5336005/patch/25001/26002

[01:09:00.0000] <MikeSmith>
but anyway, if the existing implementations all interoperably do it the broken way, I guess it makes sense to be consistent with that

[01:16:00.0000] <annevk>
hmm, the encoding data can be tuned quite a bit by ordering the labels more effectively

[01:16:01.0000] <annevk>
sleeping things over was definitely a good idea

[01:17:00.0000] <annevk>
MikeSmith_, hey!

[01:17:01.0000] <annevk>
MikeSmith_, are we publishing today or early January?

[01:22:00.0000] <MikeSmith>
we aren't publishing today

[01:22:01.0000] <annevk>
cool

[01:23:00.0000] <annevk>
I'm gonna work out how to sort these labels then :)

[01:23:01.0000] <MikeSmith>
great

[01:35:00.0000] <annevk>
anyone up for a sorting problem?

[01:36:00.0000] <annevk>
i iterate through a huge list and calculate a score for each item (items can have the same score); now I want a new list sorted by score first and 0-9a-z second

[01:38:00.0000] <annevk>
I guess creating a dictionary with the key being the score and the items being the value as list makes the most sense...

[01:40:00.0000] <jgraham>
MAke a list of (score, name) tuples and do the sort on that

[01:40:01.0000] <jgraham>
It will sort by the first part then the second part, and so on

[01:42:00.0000] <annevk>
ooh

[01:42:01.0000] <jgraham>
Seems we released Opera 11

[01:44:00.0000] <annevk>
jgraham, how do I sort in reverse on score and normal order on label?

[01:44:01.0000] <annevk>
I guess I could just build up score the other way around...

[01:44:02.0000] <jgraham>
annevk: make (-scope, label) tuples?

[01:44:03.0000] <jgraham>
*-score

[01:45:00.0000] <annevk>
this is quite neat

[01:46:00.0000] <MikeSmith>
hsivonen: I've been thinking about how to implement validator support for "URL potentially surrounded by spaces", and one way would seem to be to replace common.data.uri = w:iri-ref with common.data.uri = list { w:iri-ref }

[01:47:00.0000] <MikeSmith>
the downside of that that would be the error message for case like <video src=" http://example.com/Path with spaces  "> would change

[01:48:00.0000] <MikeSmith>
hmm, or maybe not such a bad change

[01:49:00.0000] <MikeSmith>
currently, the error message for that is "Bad value  http://example.com/Path with spaces   for attribute src on element video: Illegal character in scheme component"

[01:50:00.0000] <MikeSmith>
but for the case of <video src="http://example.com/Path with spaces">

[01:51:00.0000] <MikeSmith>
in now reports "Bad value http://example.com/Path with spaces for attribute src on element video: Whitespace in path component. Use %20 in place of spaces"

[01:52:00.0000] <MikeSmith>
but if I change to doing  common.data.uri = list { w:iri-ref } it will instead just report "Bad value http://example.com/Path with spaces for attribute src on element video."

[01:52:01.0000] <MikeSmith>
without giving any more guidance than that

[01:56:00.0000] <annevk>
thanks jgraham

[01:57:00.0000] <annevk>
went back from 100 to 86 and far more useful tables at the top

[03:17:00.0000] <annevk>
http://quuz.org/tempxxx/table.html is a little prettier now

[03:18:00.0000] <jgraham>
annevk: The numbers in the table are unicode codepoints?

[03:19:00.0000] <annevk>
yes

[03:19:01.0000] <annevk>
"The table that follows describes the mapping from octets to Unicode "

[03:19:02.0000] <annevk>
I guess I should add codepoint

[03:19:03.0000] <jgraham>
Yeah, codepoint as hex would be more useful than decimal

[03:19:04.0000] <annevk>
you can't do that in your head?

[03:20:00.0000] <annevk>
/me looks in python docs

[03:21:00.0000] <jgraham>
"U+" + str(hex(value)).rpad(4) or so

[03:23:00.0000] <jgraham>
"U+" + str(hex(value))[2:].rjust(4).upper()

[03:23:01.0000] <jgraham>
is more right

[03:25:00.0000] <annevk>
what is the rjust for?

[03:25:01.0000] <annevk>
also, hex already returns a string

[03:25:02.0000] <jgraham>
Oh, so it does

[03:25:03.0000] <annevk>
anyway, refresh

[03:25:04.0000] <annevk>
:)

[03:25:05.0000] <annevk>
I omitted the U+ part btw

[03:25:06.0000] <jgraham>
rjust means that hex(10) -> 000A not A

[03:25:07.0000] <annevk>
ooh

[03:26:00.0000] <annevk>
that might be nice

[03:26:01.0000] <jgraham>
I am assuming everything is BMP

[03:26:02.0000] <jgraham>
Otherwise it should probably be rjust(6)

[03:27:00.0000] <annevk>
but rjust doesn't work

[03:27:01.0000] <jgraham>
?

[03:29:00.0000] <annevk>
rjust defaults to a space

[03:29:01.0000] <annevk>
so it's rjust(4, "0")

[03:29:02.0000] <jgraham>
Oh, good point

[03:29:03.0000] <annevk>
refresh again

[03:30:00.0000] <jgraham>
Nice

[03:30:01.0000] <annevk>
I guess I should set font-family to monospace to make them align even better

[03:34:00.0000] <annevk>
done

[03:55:00.0000] <MikeSmith>
hsivonen: please ignore what I said before about the idea of doing common.data.uri = list { w:iri-ref } … I'll add it to the IriRef datatype checker instead

[05:03:00.0000] <annevk>
I guess I need to add some <section>, classes, and a bit of scripting to the result page 

[05:03:01.0000] <annevk>
so you can filter the output by browsers you care about

[05:19:00.0000] <MrWax>
Is it recommendable in this current phase of HTML5 , to already start building a beta version of large web app you sell (eg. CMS systems etc) ?

[05:20:00.0000] <jgraham>
The short answer is "yes"

[05:20:01.0000] <MrWax>
To get the new functioality/syntax/api knowledge in your organisation

[05:20:02.0000] <jgraham>
The longer answer questions the notion of a "phase" applied to the whole specification

[05:20:03.0000] <MrWax>
and to receive feedback from testers, what sort of cool things they could like etc

[05:21:00.0000] <MrWax>
ok

[05:21:01.0000] <MrWax>
jgraham: so, when do a presentation, I speak about new functionality that could be relevant for large web apps ( specially CMS) it would be a wise answer to conclude YES because .. ^^ what i just said

[05:21:02.0000] <MrWax>
when I do*

[05:22:00.0000] <MrWax>
(of course given no instable stuff is spoken about)

[05:22:01.0000] <Rik`>
MrWax: think of HTML5 as CSS3, you use the parts that work in browsers, regardless of the state of the whole specification

[05:22:02.0000] <MrWax>
Rik`: yea thats hwta i was going to explain

[05:22:03.0000] <MrWax>
incremantally more and more apis/features will be used the coming years

[05:23:00.0000] <jgraham>
MrWax: What Rik` said. There is no "phase". There is only what is implemented and what is not

[05:23:01.0000] <MrWax>
i more ment:

[05:23:02.0000] <Rik`>
everyone is using parts of HTML5, google, facebook, flickr, etc

[05:23:03.0000] <MrWax>
This current point in time

[05:23:04.0000] <MrWax>
sorry phase was not an appropriate word

[05:24:00.0000] <MrWax>
I just need to convince the essence of HTML5, 2-3 mins; why HTML5 standard initiated (by who), 6-7 mins syntax/markup new tags etc, and speaking / summarizing through a few cool apis and what it could do for a CMS

[05:25:00.0000] <jgraham>
CMS's can use whatever is deployed in browsers they care about. Significant chunks of HTML5 are deployed in browsers they care about. The rest is logical deduction

[05:27:00.0000] <MrWax>
yep

[05:27:01.0000] <MrWax>
but, speaking in terms of creating a beta version, its not per se necessary IE6,7,8 support something

[05:30:00.0000] <beowulf_>
MrWax: there are lots of good html5 presentations floating about on the web that will cover what you want

[05:31:00.0000] <MrWax>
yea i know ive already build one

[05:32:00.0000] <beowulf_>
I meant in terms of content, but ok

[05:50:00.0000] <MrWax>
beowulf_: oh sorry

[05:51:00.0000] <MrWax>
beowulf_: yes i have found a lot good ones, and basically i build my presentation on html5rocks, of course with own content and used a few of the examples that were pretty good already

[07:18:00.0000] <annevk>
jgraham, how do I figure out if a byte has mapped to two code points?

[07:18:01.0000] <annevk>
jgraham, or two 16-bit code units, rather

[07:18:02.0000] <annevk>
jgraham, will the first carry some kind of flag I could check for?

[07:20:00.0000] <annevk>
because so far I have just rejected encodings that go over 256 16-bit code units, but maybe they are actually creating valid octet -> code point mappings and not some kind of multi-byte scheme

[07:21:00.0000] <zcorpan>
annevk: do you want to check for surrogate pairs in javascript?

[07:21:01.0000] <Philip`>
Are you accounting for encodings that have an escape code that switches them into a different mode?

[07:22:00.0000] <annevk>
zcorpan, yes

[07:22:01.0000] <bga_>
annevk congratulations! opera11! :)

[07:22:02.0000] <annevk>
thanks, I'm afraid I had little to do with the release though :)

[07:22:03.0000] <annevk>
Philip`, I'm not dealing with multi-byte encodings

[07:23:00.0000] <annevk>
Philip`, but I want to deal with 8-bit encodings where an octet could potentially create a surrogate pair

[07:24:00.0000] <jgraham>
annevk: I forget, but if javascript exposes the surrogate bytes, don't you just check they are in the surrogate range

[07:24:01.0000] <jgraham>
and then stitch them back together using whatever the formula is

[07:25:00.0000] <annevk>
I was hoping you'd know the details

[07:25:01.0000] <annevk>
/me goes to research

[07:26:00.0000] <zcorpan>
annevk: the wiki article on surrogate pairs should tell you which ranges to check for

[07:26:01.0000] <annevk>
http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates seems to have it all

[07:26:02.0000] <jgraham>
annevk: Nah, I just look it up

[07:27:00.0000] <jgraham>
I once even found out where it is documented on OSX if you don't have internet access

[07:27:01.0000] <annevk>
aah, the 16 means hex

[07:27:02.0000] <annevk>
took me a while

[07:43:00.0000] <annevk>
doesn't seem like it

[07:43:01.0000] <annevk>
I don't get the weird behavior I see for some encodings

[07:44:00.0000] <annevk>
x-mac-thai is really weird for instance in Safari

[08:44:00.0000] <hsivonen>
https://twitter.com/#!/ndw/status/15373943112204288

[08:45:00.0000] <hsivonen>
probably a high cost relative the number of switchers attracted

[08:58:00.0000] <annevk>
haha

[09:02:00.0000] <bstar>
embedding a theora stream (from a VLC server) works until the stream moves on to a new playlist item. viewing it in VLC works fine. is there a way to force the <video> element to stay connected across multiple playlist items?

[09:03:00.0000] <jgraham>
hsivonen: I estimate we would get 1 user per XPath version

[09:04:00.0000] <annevk>
before XSLT 2.0 we should do XQueryX

[09:05:00.0000] <annevk>
oh, and provide http://www.w3.org/TR/HTTP-in-RDF10/ as output format for developer tools

[09:07:00.0000] <david_carlisle>
jgraham: but very nice users they would be

[09:14:00.0000] <TabAtkins>
annevk: (responding to the sorting issue from earlier) You can pass custom comparator functions to sort.

[09:14:01.0000] <jgraham>
david_carlisle: All our users are very nice, I'm sure :)

[09:14:02.0000] <jgraham>
TabAtkins: Yeah, but you don't want to

[09:14:03.0000] <TabAtkins>
jgraham: Why not?

[09:14:04.0000] <jgraham>
It's complex and slow

[09:15:00.0000] <jgraham>
So if you can avoid it then you should

[09:15:01.0000] <TabAtkins>
Slow, okay, maybe.  Shrug.  But complex?  Hardly.

[09:15:02.0000] <jgraham>
At least I imagine it is

[09:15:03.0000] <TabAtkins>
/me comes from lisp, so passing comparators to sort seems natural.

[09:15:04.0000] <jgraham>
Well you have to look up / remember what the function has to return

[09:15:05.0000] <jgraham>
for the different cases

[09:16:00.0000] <TabAtkins>
That's easy.  Just remember the integer comparator lambda x,y: x-y

[09:16:01.0000] <Philip`>
/me likes Perl's custom sort syntax, since it encourages use of the spaceship operator

[09:16:02.0000] <jgraham>
TabAtkins: Like I said, complex

[09:16:03.0000] <TabAtkins>
Granted, it's even easier if you can just return a bool, but that's the C legacy for you.

[09:17:00.0000] <Philip`>
my @sorted_by_increasing_age_then_decreasing_height = sort { $a->{age} <=> $b->{age} or $b->{height} <=> $a->{height} } @people; etc

[09:17:01.0000] <TabAtkins>
That's a pretty cool operator.  What does it return?

[09:17:02.0000] <Philip`>
-1, 0, or +1

[09:17:03.0000] <TabAtkins>
That's what I suspected.

[09:18:00.0000] <Philip`>
(There's a 'cmp' operator which does the same but with string comparison instead of numeric comparison)

[09:20:00.0000] <jgraham>
Wait, perl has operators that only take specific types? I thought perl was rather weakly typed

[09:21:00.0000] <jgraham>
In the sense of "eager to do implicit type conversions"

[09:21:01.0000] <TabAtkins>
I assume that "string comparison" means "cast to strings before comparing".

[09:21:02.0000] <TabAtkins>
Such that 9 cmp 10 return 1.

[09:22:00.0000] <jgraham>
Oh well that's just silly. There is a reason for explicit cast functions

[09:22:01.0000] <AryehGregor>
PHP works the same way.  It's convenient except when it misbehaves and everything breaks.

[09:23:00.0000] <AryehGregor>
Like, in PHP it's a bad idea to do if (!$str) { /* assume string is empty */ }, because '0' == false.

[09:23:01.0000] <AryehGregor>
I can't count the number of MediaWiki bugs that's caused.

[09:23:02.0000] <AryehGregor>
I assume it stole the idea from Perl.

[09:23:03.0000] <Philip`>
jgraham: The operators take any type, and always perform the same operation (e.g. a numeric comparison, or a string comparison) regardless of the dynamic type of the variables

[09:23:04.0000] <TabAtkins>
I assume it's so that 0 means false even if it comes straight from a form.

[09:24:00.0000] <AryehGregor>
Yes.

[09:24:01.0000] <jgraham>
See also: http://twitter.com/gsnedders/status/14717708356550656

[09:24:02.0000] <AryehGregor>
Except when you mean it to be a string and it happens to be exactly '0', it's a headache.

[09:24:03.0000] <Philip`>
(which means you never end up with bugs like doing "var count = input.value + 1; // oops, the input was 0 and now count is '01'" like in JS)

[09:25:00.0000] <AryehGregor>
Like if (!$_GET['username']) { echo '<strong class=error>You must enter a username!</strong>'; }

[09:25:01.0000] <TabAtkins>
Oh, I agree.  It's bitten me before, and I think it's retarded.  But shrug.

[09:25:02.0000] <Philip`>
(It's silly having a language with implicit string<->number conversions and then operators that do very different things depending on whether a value is currently represented as a string or a number)

[09:25:03.0000] <AryehGregor>
That means '0' is an invalid username, oops.

[09:25:04.0000] <AryehGregor>
I think using . for string concatenation makes sense.

[09:26:00.0000] <AryehGregor>
That far it works.

[09:26:01.0000] <AryehGregor>
But the boolean casting behavior is wonky.

[09:26:02.0000] <AryehGregor>
Actually, casting altogether is wonky.

[09:26:03.0000] <TabAtkins>
Which is why I always use tests like is_set() to see if form vars have been sent, etc.

[09:26:04.0000] <jgraham>
Philip`: I think I was happy at "It's silly having a language with implicit string<->number conversions"

[09:26:05.0000] <AryehGregor>
'0' == false, false == '', '' != '0'

[09:27:00.0000] <Philip`>
AryehGregor: Perl says anything that stringifies to "" or "0" is false, I believe

[09:27:01.0000] <AryehGregor>
That's even more horrible.

[09:27:02.0000] <AryehGregor>
At least in PHP it's only literal '' and '0'.

[09:27:03.0000] <AryehGregor>
Wait, that doesn't even make sense.

[09:27:04.0000] <Philip`>
AryehGregor: What about the number 0?

[09:27:05.0000] <AryehGregor>
I meant strings.

[09:27:06.0000] <AryehGregor>
Of course non-strings have their own rules.

[09:27:07.0000] <TabAtkins>
Python has sane behavior here.  Classes can define the function that tells whether they're falsy or not.

[09:28:00.0000] <AryehGregor>
Python is strictly typed.

[09:28:01.0000] <Philip`>
Perl's rules apply to all types

[09:28:02.0000] <AryehGregor>
Which I have mixed feelings about.

[09:28:03.0000] <AryehGregor>
It feels kind of excessive to me to have to write things like "Answer is " + str(answer) instead of being able to just use "Answer is " + answer.

[09:28:04.0000] <AryehGregor>
I have to say, interpolation is really awesome.

[09:28:05.0000] <Philip`>
so 0 stringifies to "0", undefined stringifies to "", objects stringify to "HASH(0x7d8220)" (i.e. not false), etc

[09:28:06.0000] <AryehGregor>
"Answer is $answer"

[09:28:07.0000] <TabAtkins>
It's not strict, it's strong.  (Assuming strict was the opposite of dynamic?)

[09:29:00.0000] <AryehGregor>
Strong, strict, whatever.

[09:29:01.0000] <AryehGregor>
The opposite of dynamic is static.

[09:29:02.0000] <TabAtkins>
Gah, right.

[09:29:03.0000] <AryehGregor>
Python has strong dynamic typing.

[09:29:04.0000] <Philip`>
s/objects/object references/

[09:29:05.0000] <TabAtkins>
Too many words starting with "st".

[09:29:06.0000] <jgraham>
You can do "The answer is %s"%answer

[09:29:07.0000] <TabAtkins>
Use "Answer is %s" % answer

[09:29:08.0000] <TabAtkins>
Dammit, jgraham

[09:29:09.0000] <AryehGregor>
Is there any way in Python to get something like "Foo $bar baz" to interpolate variables?  Something comparably uncluttered?

[09:30:00.0000] <AryehGregor>
Yeah, but that separates the variables from the place they're put.

[09:30:01.0000] <AryehGregor>
It's considerably more awkward.

[09:30:02.0000] <AryehGregor>
Although probably better than loads of " + ".

[09:30:03.0000] <AryehGregor>
Well, " + foo + ".

[09:30:04.0000] <TabAtkins>
I find it more convenient actually, because I can see what the string will look like even with long expressions for the vars.

[09:30:05.0000] <TabAtkins>
Plus, no silly escaping rules.

[09:30:06.0000] <jgraham>
You might be able to do "Foo ${bar} ${baz}"%locals() but that might not work

[09:30:07.0000] <jgraham>
It would also be a hideous hack

[09:31:00.0000] <TabAtkins>
/me always has to pause a bit to remember if he has to do something weird for anything more trivial than a var name in PHP.

[09:31:01.0000] <jgraham>
(I don't recall if it insists that all keys in the dict end up in the output)

[09:31:02.0000] <AryehGregor>
Another thing that's bitten me in Python is how it concatenates adjacent strings.  Like "foo" "bar" == "foobar".  That's all very nice until you declare an array of lots of strings and forget a comma at the end of the line.

[09:31:03.0000] <AryehGregor>
Then they silently merge together instead of erroring.

[09:31:04.0000] <TabAtkins>
Yeah, that's a wart.

[09:31:05.0000] <jgraham>
Yes, that can be annoying in that case

[09:31:06.0000] <TabAtkins>
I assume it comes from C.

[09:32:00.0000] <AryehGregor>
It makes sense for C, because there's no way to concatenate strings without a function call.

[09:32:01.0000] <TabAtkins>
And Guido thought it was useful.

[09:32:02.0000] <AryehGregor>
You can just stick in a + . . .

[09:32:03.0000] <jgraham>
It is sort of useful

[09:32:04.0000] <jgraham>
But not that useful

[09:32:05.0000] <Philip`>
(Perl uses "<", "<=", "==", "<=>" etc for numeric comparisons, and "lt", "le", "eq", "cmp" etc for string comparisons, which is nice and consistent; but then it uses "||" and "&&" for normal C-like-precedence boolean operators, and "or" and "and" for lower-precedence versions of the safe functions, which is a little more confusing)

[09:32:06.0000] <Philip`>
s/safe/same/

[09:32:07.0000] <AryehGregor>
Python just uses "and" and "or" across the board.  Much nicer.

[09:33:00.0000] <AryehGregor>
Also "not" and "in".

[09:33:01.0000] <AryehGregor>
Down with punctuation!

[09:33:02.0000] <Philip`>
Those have C-like precedence, I think

[09:33:03.0000] <TabAtkins>
I always forget what exactly the deal is with PHP's "and" and "or", so I just avoid them.

[09:34:00.0000] <AryehGregor>
I used to use them in an attempt to emulate Python, but other MediaWiki developers mostly prefer && and ||, so I go with the flow (at least for MW).

[09:35:00.0000] <AryehGregor>
It's kind of like this note from our style guide: "Homesick C developers write null as NULL because they want to believe that it is a macro defined as ((void*)0). This is not necessary."

[09:35:01.0000] <Philip`>
Lower precedence means you can write "open $fh, $filename or die" to mean "if (not (open $fh, $filename)) { die; }" in a more concise and threatening way

[09:35:02.0000] <AryehGregor>
I like the "threatening".

[09:35:03.0000] <AryehGregor>
Concise is, of course, typical of Perl.

[09:35:04.0000] <TabAtkins>
I must admit, that's my favorite part of dbconn classes.

[09:35:05.0000] <Philip`>
Sadly you can't write "open $fh, $filename or else"

[09:35:06.0000] <jgraham>
Really "die" as a keyword is just silly

[09:35:07.0000] <AryehGregor>
We seem to be mostly Python people here, is that a coincidence?

[09:36:00.0000] <AryehGregor>
jgraham, I think it's a function, not a keyword, no?

[09:36:01.0000] <AryehGregor>
(I could be totally wrong.)

[09:36:02.0000] <TabAtkins>
I'm like a 5 or 6-language person.

[09:36:03.0000] <jgraham>
I dunno

[09:36:04.0000] <Philip`>
It's a built-in function

[09:36:05.0000] <AryehGregor>
TabAtkins, you're a Python person if you prefer Python to Perl, regardless of whether you actually use or know either.

[09:36:06.0000] <jgraham>
AryehGregor: I imagine the pyhon thing is pure coincidence

[09:36:07.0000] <AryehGregor>
Hixie is a Perl person, and apparently so is Philip`.

[09:36:08.0000] <TabAtkins>
AryehGregor: Sure, then.

[09:36:09.0000] <Philip`>
You can define your own, e.g. the Carp module adds carp and croak etc

[09:36:10.0000] <Philip`>
which act like die but a bit different

[09:37:00.0000] <jgraham>
There  don't seem to be that many ruby people here

[09:37:01.0000] <jgraham>
Possibly that is surprising. Possibly they are all just building shit

[09:37:02.0000] <TabAtkins>
Yeah, I've never used Ruby, though it looks interesting.

[09:37:03.0000] <AryehGregor>
Well, Ruby is much less popular overall than Perl or Python.

[09:37:04.0000] <AryehGregor>
At least last I checked.

[09:37:05.0000] <TabAtkins>
At least, outside of Japan.

[09:37:06.0000] <AryehGregor>
It seems to have gotten more popular over the last couple of years, but Python and Perl are much better-established.

[09:37:07.0000] <jgraham>
I have never really felt the need to learn Ruby since I can use python. If I was learning another language I would pick one a bit different

[09:37:08.0000] <AryehGregor>
(especially Perl)

[09:38:00.0000] <AryehGregor>
If I were learning a new language, it would be Lisp or Haskell or something.

[09:38:01.0000] <TabAtkins>
Both are good ideas.

[10:29:00.0000] <Hixie>
AryehGregor: by that definition i'm not a perl person, i just don't know python as well

[10:29:01.0000] <AryehGregor>
Well, you use Perl and not Python, so I think that makes you a Perl person.

[10:39:00.0000] <wes222>
hi

[10:40:00.0000] <AryehGregor>
Hi.

[10:40:01.0000] <wes222>
someone can examine this bug https://bugzilla.mozilla.org/show_bug.cgi?id=619703 about drag n drop? 

[10:40:02.0000] <wes222>
it is not related to mozilla, it is a spec bug, i think

[10:41:00.0000] <wes222>
webkit does the same

[10:41:01.0000] <AryehGregor>
File a bug on the spec, then, and the editor will look at it.

[10:41:02.0000] <AryehGregor>
If you think it's a spec bug.

[10:41:03.0000] <AryehGregor>
(I don't know about DnD, so I can't really comment here.)

[10:42:00.0000] <wes222>
thank you... how i can file a bug? ng?

[10:43:00.0000] <AryehGregor>
The spec has a form you can use, that's easiest if you don't have a W3C Bugzilla account.  But you might want an account anyway so you can CC yourself on the bug.

[10:43:01.0000] <AryehGregor>
http://www.w3.org/Bugs/Public/ is the bug tracker (component: HTML5).

[10:44:00.0000] <AryehGregor>
For the spec, click on the right section here and use the box at the bottom: http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd

[10:45:00.0000] <wes222>
thank you, i will register myself

[10:46:00.0000] <wes222>
anyway it is not really a drag & drop bug, but it is related to its events order

[10:46:01.0000] <wes222>
take a look if you have time ;)

[11:54:00.0000] <Ms2ger>
annevk, what version of Fx was used for your encoding tests?

[11:55:00.0000] <wes222>
hi ms2ger, ive replied to you on mozilla's bugzilla about dragenter/leave

[11:56:00.0000] <Ms2ger>
I don't actually know enough about dnd to know what's desirable

[11:57:00.0000] <Ms2ger>
Did you file a spec bug already?

[11:57:01.0000] <wes222>
not yet

[11:58:00.0000] <wes222>
i dont want to moan if i'm not sure :)

[12:01:00.0000] <wes222>
in plus what i'm trying to do is impossible to do unless i will examine entire dom trees, set flags, etc

[12:02:00.0000] <wes222>
for who wants to give me an opinion before i file a bug https://bugzilla.mozilla.org/show_bug.cgi?id=619703

[12:05:00.0000] <AryehGregor>
Don't worry, there are loads of people watching the W3C bug tracker who have nothing better to do with their lives than listen to moaning.

[12:06:00.0000] <Ms2ger>
Speak for yourself, Aryeh :)

[12:06:01.0000] <AryehGregor>
I'm only speaking from observation.

[12:07:00.0000] <wes222>
xD

[12:20:00.0000] <AryehGregor>
Does passing by reference not work in C99?

[12:22:00.0000] <AryehGregor>
(sorry for abusing this channel for OpenCL-related help over the last few days)

[12:22:01.0000] <Hixie>
tis not abuse

[12:22:02.0000] <Hixie>
this channel has no topic

[12:22:03.0000] <AryehGregor>
/me points to the /topic

[12:23:00.0000] <Hixie>
unless you would argue that C99 has any relation to logic, i think you're good given the /topic

[12:24:00.0000] <AryehGregor>
I will most definitely say that OpenCL has no relation to logic, at least insofar as the implementations I've used are concerned.

[12:27:00.0000] <Hixie>
i rest my case :-)

[13:04:00.0000] <jgraham>
AryehGregor: That has to be closer to the theoretical topic than, say, giving gsnedders dating tips. Which I'm pretty sure we have done in the past

[13:09:00.0000] <gsnedders>
jgraham: pff, you think that's theoretical…

[13:18:00.0000] <jgraham>
gsnedders: Umm, aren't you studying English? You might want to reread the sentence

[13:18:01.0000] <Hixie>
burn

[13:19:00.0000] <dglazkov>
is there a better place I could work on the XBL2 use cases? trac.webkit.org Wiki is unbearably slow

[13:20:00.0000] <Hixie>
what are your needs?

[13:20:01.0000] <Hixie>
just a wiki?

[13:20:02.0000] <Hixie>
collaborative editing?

[13:20:03.0000] <Hixie>
wysiwyg?

[13:20:04.0000] <jgraham>
dglazkov: wiki.whatwg.org?

[13:20:05.0000] <Hixie>
indeed, feel free to use wiki.whatwg.org if it's what you need

[13:20:06.0000] <othermaciej>
dglazkov: w3c and whatwg both have wikis

[13:20:07.0000] <jgraham>
Hixie: burn?

[13:20:08.0000] <Hixie>
jgraham: as in, "ooh, burn"

[13:21:00.0000] <Hixie>
jgraham: not as in, go burn yourself, or something

[13:21:01.0000] <dglazkov>
k thanks

[13:21:02.0000] <jgraham>
Oh

[13:21:03.0000] <Hixie>
as in http://www.urbandictionary.com/define.php?term=burn

[13:23:00.0000] <jgraham>
Hixie: I see. I have heard that usage but I guess it is more common in en-us

[13:23:01.0000] <Hixie>
yeah it's an americanism

[13:23:02.0000] <Hixie>
i am being turned

[13:23:03.0000] <Hixie>
it's very sad

[13:23:04.0000] <TabAtkins_>
Bwahaha.

[13:24:00.0000] <jgraham>
http://www.urbandictionary.com/define.php?term=lambohov <-- urban dictionary is not always reliable

[13:24:01.0000] <TabAtkins_>
Hixie: I have better language for the element() function now, and I need to correct the HTML binding so that out-of-document elements act properly within this context.  How do you want the feedback?

[13:25:00.0000] <Hixie>
e-mail is fine

[13:25:01.0000] <Hixie>
can't edit now, in the middle of timed track edits

[13:25:02.0000] <jgraham>
I mean generally you can stay out till 7

[13:25:03.0000] <TabAtkins_>
Hehe, "wörd".

[13:25:04.0000] <TabAtkins_>
Hixie: K, no problem.

[13:31:00.0000] <jgraham>
othermaciej: I think you missed http://tools.ietf.org/html/draft-cridland-hybi-upgrade-connect-00 out of your list of handshake proposal submissions

[13:32:00.0000] <jgraham>
Seems to require an extra rt 

[13:32:01.0000] <othermaciej>
jgraham: I did!

[13:32:02.0000] <othermaciej>
I should start the wiki page that mnot suggested

[13:32:03.0000] <othermaciej>
I didn't realize that handshake had an I-D

[13:33:00.0000] <jgraham>
Yeah a wiki page would be good. 

[13:34:00.0000] <Ms2ger>
A registry!

[13:34:01.0000] <jgraham>
I don't believe that anyone is keeping up with the volume of mail, or has a full grasp of all the points that have been amde

[13:35:00.0000] <jgraham>
Ms2ger: Don't joke, in a few weeks we will have enough ID submissions that we will need our own registry just to track them

[13:38:00.0000] <othermaciej>
jgraham: that is certainly true, to the point that I am getting frustrated at having to repeat points

[13:38:01.0000] <Ms2ger>
In a few weeks time, everyone will be looking at the next big thing

[13:42:00.0000] <othermaciej>
this particular argument has been going for months

[13:54:00.0000] <AryehGregor>
jgraham, . . . what dating tips did you give him?

[13:55:00.0000] <jgraham>
AryehGregor: I'm not sure. Maybe he remembers. Maybe he knows if they were good advice or not :)

[13:57:00.0000] <jgraham>
We can probably invent some apropos ones though. Like "if you ask if she's a Perl person or a Python question and she doesn't look bemused, that's a good sign. If she replies 'perl' make an excuse to leave"

[13:59:00.0000] <webr3>
perl necklace?

[14:00:00.0000] <AryehGregor>
Maybe she just understood the question as "do you prefer pythons or pearls?", in which case "pearls" is really the expected answer for pretty much anyone.

[14:01:00.0000] <boogyman>
what's wrong with python?

[14:02:00.0000] <AryehGregor>
Who said there's anything wrong with Python?  We've all been making anti-Perl remarks here.

[14:03:00.0000] <boogyman>
ah, touche!

[14:04:00.0000] <jgraham>
AryehGregor: You mean you wouldn't look at someone funny if they asked you whether you were a snake person or an item of jewellry?

[14:04:01.0000] <jgraham>
s/or an/or preferred an/

[14:05:00.0000] <AryehGregor>
It would admittedly be irregular.

[14:07:00.0000] <AryehGregor>
Of course, some people like irregularity.

[14:08:00.0000] <AryehGregor>
I have a friend who got married a few months ago, who borrowed my platemail to give her the rings.

[14:09:00.0000] <othermaciej>
platemail?

[14:10:00.0000] <AryehGregor>
That same friend also wore, to his wedding, a top hat, bow tie, one of those jackets that have long tails in the back, a shirt with studs instead of buttons, and a cummerbund.

[14:10:01.0000] <AryehGregor>
I didn't even know what a cummerbund was before I met him.

[14:10:02.0000] <AryehGregor>
othermaciej, yes, I got some platemail when I was a teenager.

[14:10:03.0000] <AryehGregor>
Kind of cheap, but it's made of real metal and everything.  Takes like half an hour to put on, with assistance.

[14:11:00.0000] <AryehGregor>
And weighs something like 70 pounds.

[14:11:01.0000] <othermaciej>
zoinks!

[14:14:00.0000] <AryehGregor>
Yes, it's fairly impressive.

[14:14:01.0000] <AryehGregor>
I tend to collapse if I wear it for more than a few hours.

[14:23:00.0000] <othermaciej>
clearly you need a warhorse

[14:31:00.0000] <jgraham>
I have no idea what AryehGregor looks like, but the thought of him on a warhorse is terrifying

[14:32:00.0000] <AryehGregor>
I used to ride horses when I was little.

[14:32:01.0000] <AryehGregor>
More or less so that I could pretend to be a knight.

[14:32:02.0000] <AryehGregor>
My sister went with me, because she (being a typical young girl) liked horses.

[14:33:00.0000] <AryehGregor>
I got freaked out when I got up to cantering, though.  Too scary for me at that age, so I gave it up.

[14:33:01.0000] <AryehGregor>
I bet I'd remember how to trot properly given a bit of a chance to try it out, though.

[14:33:02.0000] <AryehGregor>
This was all at the last non-police stable in Manhattan, which apparently closed several years ago: http://en.wikipedia.org/wiki/Claremont_Riding_Academy

[14:35:00.0000] <jgraham>
AryehGregor: BTW it is no fun to have a predictions section on your website unless you just publish a hash of the prediction text, roc style. It adds an air of mystique. Particularly if your predictions are things like "I will eat fruit loops for breakfast every day this week"

[14:36:00.0000] <AryehGregor>
Publishing a hash of the prediction has the flaw that no one will actually bother recording the hash, so when you finally reveal it, people could legitimately assume that you just went back and changed it.

[14:36:01.0000] <AryehGregor>
I guess you could point to archive.org to mitigate that risk, though.

[14:37:00.0000] <AryehGregor>
It reminds me of sending yourself something through the mail so that the postmark proves that you knew the contents on that date.  (Which doesn't work, because the post office is happy to mail empty envelopes, so you could always seal it later.)

[14:37:01.0000] <jgraham>
You could embed the hash in a popular Open Source software project and point to its VCS

[14:38:00.0000] <AryehGregor>
(I should send myself an empty envelope just to illustrate the principle.)

[14:38:01.0000] <AryehGregor>
(I've also wanted to see what happens if you send a letter with no postage, with the intended destination as the return address and some nonsense as the destination.  Do they actually return it to the return address?  That sounds like a security flaw.)

[14:39:00.0000] <Dashiva>
Hah

[14:39:01.0000] <AryehGregor>
(Maybe they apply heuristics like "only return it if the return address is close enough to the place it was dropped off that nobody would be likely to bother cheating us that way".)

[14:39:02.0000] <Dashiva>
I was actually at the primary post processing plant in eastern Switzerland last week, and someone asked that question

[14:39:03.0000] <AryehGregor>
(But in that case, you could still get free mailing to everyone nearby, if you were a total jerk and didn't mind revealing this fact to all your recipients.)

[14:40:00.0000] <AryehGregor>
Dashiva, well, so what was the answer?

[14:41:00.0000] <Dashiva>
In small scale, it doesn't really matter to them, letter return is not guaranteed, and unless you mail a huge number of people only a few times, someone would notice

[14:42:00.0000] <AryehGregor>
Sensible.

[14:49:00.0000] <AryehGregor>
http://blogs.msdn.com/b/interoperability/archive/2010/12/15/html5-video-and-interop-firefox-add-on-provides-h-264-support-on-windows.aspx

[14:49:01.0000] <AryehGregor>
That's . . . interesting.

[14:49:02.0000] <AryehGregor>
"Today, as part of the interoperability bridges work we do on this team, we’re making available a new Firefox add-on that enables Firefox users on Windows to play H.264-encoded video on HTML5 by using the built-in capabilities found in Windows 7."

[14:49:03.0000] <AryehGregor>
Now let's see if they sneak it into a Service Pack and install it by default.

[14:53:00.0000] <gsnedders>
jgraham: As myself and the girl I've ben inseparable from for the past few weeks often say, "I'm an English student. You expect me to know that?"

[14:56:00.0000] <Dashiva>
AryehGregor: Smells like webm

[14:56:01.0000] <AryehGregor>
Dashiva, er, how so?

[14:57:00.0000] <Dashiva>
Trying to build up h264 as a viable cross-browser option before webm can establish itself

[14:57:01.0000] <AryehGregor>
Ah.

[14:58:00.0000] <AryehGregor>
It's true, this would be consistent with the theory that Microsoft is trying to push H.264 and isn't just afraid of patent risk.

[14:59:00.0000] <AryehGregor>
I've mostly been skeptical of that theory -- why provide any WebM support at all in that case?

[14:59:01.0000] <gsnedders>
AryehGregor: The patent risk is a sunk cost for them, so they have no reason to be afraid of it moreso than they already are.

[14:59:02.0000] <AryehGregor>
It would also be consistent with the theory that Microsoft actually wants to increase web interoperability for its own sake, but my prior probability for that is too small to be stored in a standard 32-bit IEEE float.

[14:59:03.0000] <gsnedders>
AryehGregor: And provided they don't actually ship a WebM decoder, there's no patent risk for them. They just look better for supporting it if it is installed.

[15:00:00.0000] <gsnedders>
AryehGregor: JS only has doubles, so it's fine ^^

[15:00:01.0000] <AryehGregor>
gsnedders, the patent risk for H.264 is a sunk cost, but not for WebM, unless people are only afraid of H.264 patents.

[15:00:02.0000] <Dashiva>
As far as I'm aware, Microsoft isn't actually supporting webm, they're just not blocking it from being installed as a regular codec?

[15:00:03.0000] <AryehGregor>
Dashiva, yes, but they are blocking everything else except H.264, I think.

[15:00:04.0000] <AryehGregor>
Or that was the impression I got.

[15:01:00.0000] <AryehGregor>
In particular, I don't think they allow Theora.

[15:01:01.0000] <AryehGregor>
Although maybe I'm wrong.

[15:01:02.0000] <gsnedders>
AryehGregor: Indeed

[15:01:03.0000] <AryehGregor>
So that indicates some level of support for WebM.

[15:01:04.0000] <dglazkov>
moved: http://wiki.whatwg.org/wiki/XBL2UseCases

[15:02:00.0000] <AryehGregor>
My theory is that they don't care about H.264, they don't make much money off it anyway compared to the strategic issues involved, so they'd be okay with WebM if it were really patent-risk-free.

[15:02:01.0000] <AryehGregor>
Which apparently Google has not done enough to assure them about.

[15:02:02.0000] <gsnedders>
AryehGregor: All Google has done, AFAIK, is say it isn't.

[15:02:03.0000] <AryehGregor>
Of course, Google's patent license for WebM doesn't permit implementations other than their own, so that's a reason for anyone else to be wary about relying on it.

[15:02:04.0000] <AryehGregor>
(Kind of ironic given the current lawsuit against them by Oracle.)

[15:03:00.0000] <gsnedders>
AryehGregor: It does, now.

[15:03:01.0000] <AryehGregor>
It does?

[15:03:02.0000] <gsnedders>
AryehGregor: AFAIK ever since it was separated from the license for the impl is has

[15:03:03.0000] <AryehGregor>
gsnedders, 

[15:04:00.0000] <AryehGregor>
gsnedders, http://www.webmproject.org/about/faq/#what_if_google_receives_or_buys_a_patent_that_covers_the_code_i_receive_sometime_after_i_receive_the_code_do_i_have_a_patent_grant_for_that_patent

[15:04:01.0000] <AryehGregor>
(id fail)

[15:04:02.0000] <AryehGregor>
Oops.

[15:04:03.0000] <AryehGregor>
Wrong id.

[15:04:04.0000] <AryehGregor>
http://www.webmproject.org/about/faq/#what_if_someone_makes_a_change_to_the_code_and_gives_it_to_me_do_i_have_a_patent_license_from_google_for_that_change

[15:04:05.0000] <AryehGregor>
"You still have the right to redistribute but no patent license for the changes (if there are any patents covering it). We can't give patent licenses for changes people make after we distribute the code, as we have no way to predict what those changes will be. Other common licenses take the same approach, including the Apache license."

[15:05:00.0000] <AryehGregor>
gsnedders, anyway, all they did *publicly* is say that it isn't.  There was almost certainly a lot of behind-the-scenes stuff with the other major players.

[15:06:00.0000] <AryehGregor>
You'd think it would be in Google's interest to make an indemnification agreement or something.  How much could that increase their potential liability, given YouTube?  But maybe they figure MS and Apple will come around in time when Google doesn't get sued.  Or maybe they did make an offer but it wasn't accepted for some reason.

[15:06:01.0000] <AryehGregor>
Oh well.


2010-12-17
[16:51:00.0000] <karlcow>
http://www.w3.org/News/2010.html#entry-8982

[16:51:01.0000] <karlcow>
over.

[16:55:00.0000] <othermaciej>
wow, I had no idea hlink existed

[16:55:01.0000] <othermaciej>
I wonder what it is

[17:05:00.0000] <karlcow>
othermaciej it was for replacing xlink conflicts between WGs

[17:55:00.0000] <erlehmann>
in 2010, new links formed!

[18:17:00.0000] <bga_>
XQuery XQueryX XQueryXXX %)

[18:17:01.0000] <karlcow>
erlehmann: where?

[18:17:02.0000] <erlehmann>
karlcow, hlink. deal with it :3

[18:17:03.0000] <erlehmann>
bga_, XXXQuery

[18:17:04.0000] <karlcow>
naaaah. That is super old story

[18:18:00.0000] <karlcow>
Previous version:

[18:18:01.0000] <karlcow>
http://www.w3.org/TR/2002/WD-hlink-20020913

[18:18:02.0000] <erlehmann>
._.

[18:18:03.0000] <karlcow>
the doc has been published as a Note now, but it was discussed in 2002. 

[18:19:00.0000] <erlehmann>
karlcow, when i suggested making a letter envelope out of stamps, so that it pays for itself, a friend was like "oh year, [famous blogger] wrote that in 2006 already"

[18:19:01.0000] <erlehmann>
CSS 2.1 \o/

[18:19:02.0000] <karlcow>
:)

[18:21:00.0000] <bga_>
omg

[18:21:01.0000] <karlcow>
http://www.w3.org/Search/Mail/Public/search?type-index=www-html&index-type=t&keywords=hlink&search=Search

[18:21:02.0000] <bga_>
http://www.w3.org/TR/2010/WD-xqueryx-30-20101214/#Example1

[18:22:00.0000] <bga_>
cool examples

[18:24:00.0000] <karlcow>
ok bga_ now close your browser window and write that down ;)

[18:25:00.0000] <karlcow>
from memory 

[18:25:01.0000] <bga_>
:)

[18:51:00.0000] <karlcow>
<p id="block-64"><time><a href="#block-64" class="block-link" title="Link to update 64">6.37pm:</a></time>

[18:51:01.0000] <karlcow>
in http://www.guardian.co.uk/news/blog/2010/dec/16/wikileaks-latest-julian-assange-bail-appeal

[18:55:00.0000] <MikeSmith>
more about HLink: http://www.w3.org/html/wg/wiki/HLink

[19:14:00.0000] <Hixie>
TabAtkins: (re xbl) i dunno if this matters for the issue being raised on that thread, but consider that the user opening/closing a <details> element mutates the dom, as, depending on how you define it, would many other things (e.g. drag and drop, editing a form control, etc)

[21:33:00.0000] <zcorpan>
so instead of renaming window.performance, they want to make it [Replaceable]

[22:11:00.0000] <abarth>
everything should be replaceable

[23:27:00.0000] <micheil>
oh, hi brendaneich 

[00:55:00.0000] <Dashiva>
/me ponders krijnh adding a feed for comments being marked as important

[01:36:00.0000] <Ms2ger>
So, did the ghost of the XHTML2 WG finally vanish?

[01:42:00.0000] <bga_>
heh double crash of opera 11 :(

[01:42:01.0000] <bga_>
back to 10.63

[01:51:00.0000] <jgraham>
_bga: :( Did you submit the crash reports?

[01:52:00.0000] <_bga>
yes

[03:27:00.0000] <wes222>
hi hixie

[03:30:00.0000] <wes222>
i'm sorry to bother, i want to know if you have already accepted w3 bug #11568, i posted it just some minutes ago

[03:31:00.0000] <wes222>
oh, maybe the "new" status is automatic

[03:35:00.0000] <jgraham>
wes222: Be patient :) I expect Hixie is asleep

[03:37:00.0000] <wes222>
i'm patient, on mozilla's bugzilla the default bug status is "unconfirmed", "new" is set when the bug is verified, for this i was thinking that the bug was already accepted

[03:37:01.0000] <wes222>
:)

[04:46:00.0000] <MikeSmith>
should <meta http-equiv=refresh content="1; url=http://example.com/ "> be valid?

[04:47:00.0000] <MikeSmith>
note the trailing space in the value of the content attribute

[04:47:01.0000] <MikeSmith>
I think it's not valid in the current spec

[04:48:00.0000] <MikeSmith>
but browsers seem to handle it as expected nevertheless

[04:48:01.0000] <MikeSmith>
and the spec now allows URLs everywhere else to have leading and trailing spaces

[04:51:00.0000] <potatis_invalido>
MikeSmith: http://www.whatwg.org/specs/web-apps/current-work/#attr-meta-http-equiv-refresh

[04:51:01.0000] <MikeSmith>
actually, browsers seem to handle <meta http-equiv=refresh content="1; url= http://example.com/ "> as expected as well

[04:51:02.0000] <MikeSmith>
that is, even with leading space

[04:52:00.0000] <potatis_invalido>
21. Strip any trailing space      characters from the end of url.

[04:52:01.0000] <MikeSmith>
potatis_invalido: that doesn't mean it's valid

[04:52:02.0000] <potatis_invalido>
It should be, it's in the spec

[04:52:03.0000] <MikeSmith>
no

[04:52:04.0000] <karlcow>
potatis_invalido: there is a difference between processing and writing

[04:53:00.0000] <potatis_invalido>
Oh, right

[04:53:01.0000] <potatis_invalido>
You're right.

[05:40:00.0000] <bga_>
http://cemerick.com/2010/12/12/oracle-vp-we-have-a-strategy-to-run-java-inside-a-javascript-environment/ :P

[05:45:00.0000] <jgraham>
In the future you will be able to run (java in rhino in )*java in javascript

[05:46:00.0000] <bga_>
yes :)

[05:46:01.0000] <bga_>
js(java(js(java(....))))

[05:46:02.0000] <bga_>
inception

[08:56:00.0000] <TabAtkins>
Hixie: The only type of DOM mutation that it seems we need to care about are adding/moving/deleting elements.  Other mutations don't harm your ability to share the relevant metadata.

[09:01:00.0000] <TabAtkins>
Ho-lee crap the XQueryX example is horrifying.  That's not something I'd put in a spec.  That's something my *opponents* should be using to show how ridiculous my idea is.

[09:02:00.0000] <TabAtkins>
It's like they just wrote the the AST in XML.

[09:02:01.0000] <TabAtkins>
(Which is probably exactly what they did.)

[09:04:00.0000] <TabAtkins>
Okay, I didn't give them credit.  It is *slightly* simpler than the AST (which they list slightly further down).

[09:08:00.0000] <dglazkov>
you're talking to yourself again

[09:08:01.0000] <TabAtkins>
Yes I am.

[09:09:00.0000] <AryehGregor>
Is that supposed to be a bad thing?

[09:09:01.0000] <AryehGregor>
Who else are you supposed to talk to if no one else is paying attention?

[09:10:00.0000] <TabAtkins>
I'm colorblind, and I approve of this app: http://dankaminsky.com/2010/12/15/dankam/

[09:10:01.0000] <AryehGregor>
You're a colorblind designer?  Interesting.

[09:10:02.0000] <TabAtkins>
Probably why I've never been good at the "design" part.

[09:10:03.0000] <TabAtkins>
Dammit, though, I didn't realize I was red-green too.  I though I was just blue-green.

[09:10:04.0000] <dglazkov>
you're color-blind?!

[09:43:00.0000] <Philip`>
TabAtkins: If you're red-green colour blind and blue-green colour blind, does that mean you're actually red-green-blue colour blind?

[09:43:01.0000] <TabAtkins>
Not quite.  They concern different groups of shades.

[11:08:00.0000] <karlcow>
http://ngrams.googlelabs.com/graph?content=any+more,anymore&year_start=1900&year_end=2009&corpus=5&smoothing=3

[11:08:01.0000] <karlcow>
we need this tool applied to the source code of Web page

[11:09:00.0000] <karlcow>
except it will be very unlikely to have precise dates

[11:13:00.0000] <TabAtkins>
Oh man, I *love* our tools.  So cool!

[11:15:00.0000] <TabAtkins>
Aw, "you guys" soundly trounces "y'all".

[11:24:00.0000] <svl>
interesting to see the decline of proper English over time: http://ngrams.googlelabs.com/graph?content=traveling%2Ctravelling&year_start=1850&year_end=2008&corpus=5&smoothing=5 - and it's taking hold of British English, too: http://ngrams.googlelabs.com/graph?content=traveling%2Ctravelling&year_start=1850&year_end=2008&corpus=6&smoothing=5

[11:25:00.0000] <AryehGregor>
Haha.

[11:25:01.0000] <AryehGregor>
Easter egg: http://ngrams.googlelabs.com/graph?content=pirates,ninjas&year_start=1900&year_end=2008&corpus=5&smoothing=3

[11:25:02.0000] <karlcow>
someone pointed me to http://ngrams.googlelabs.com/graph?content=any+more,anymore&year_start=1900&year_end=2009&corpus=5&smoothing=3

[11:25:03.0000] <AryehGregor>
svl, . . . in what way is "travelling" more proper than "traveling"?

[11:26:00.0000] <AryehGregor>
My dictionary lists both as acceptable, and gives "traveling" first, and indeed my spellchecker appears to flag "travelling" as an error.

[11:26:01.0000] <AryehGregor>
The entire notion of "proper English" is fairly ludicrous anyway.  By Shakespeare's standards, the English you're speaking is horribly bastardized.

[11:27:00.0000] <svl>
Of course!. Sorry, maybe I should've said 'proper' English. :)

[11:27:01.0000] <AryehGregor>
Weird: http://ngrams.googlelabs.com/graph?content=perl,python&year_start=1900&year_end=2008&corpus=5&smoothing=3

[11:27:02.0000] <AryehGregor>
Why the spike right after 2000?

[11:27:03.0000] <AryehGregor>
Oh, it says case-sensitive.

[11:28:00.0000] <AryehGregor>
http://ngrams.googlelabs.com/graph?content=Perl,Python&year_start=1900&year_end=2008&corpus=5&smoothing=3

[11:28:01.0000] <karlcow>
python is a snake before being a programming language :p

[11:28:02.0000] <AryehGregor>
Yes, that's why it started out much higher.

[11:28:03.0000] <AryehGregor>
What's "perl", though?

[11:30:00.0000] <karlcow>
AryehGregor: a name

[11:30:01.0000] <AryehGregor>
Then it would be uppercase.

[11:30:02.0000] <karlcow>
Perl J. C was killed and cut to pieces by train of cars, Nov. 27, 1905, aged 21 years, 5 mo. and 10 days

[11:30:03.0000] <karlcow>
ah I see your points

[11:31:00.0000] <karlcow>
ocr mistakes?

[11:31:01.0000] <karlcow>
http://books.google.com/books?id=koo1AAAAMAAJ&q=Perl&dq=Perl&hl=fr&ei=d7sLTdqBOcrNswaTg6jgDA&sa=X&oi=book_result&ct=result&resnum=6&ved=0CDsQ6AEwBQ

[11:31:02.0000] <karlcow>
per} -> perl

[11:31:03.0000] <AryehGregor>
Heh, yeah.

[11:31:04.0000] <AryehGregor>
Figures.

[11:42:00.0000] <AryehGregor>
Interesting article: http://gskinner.com/blog/archives/2010/12/pirates-love-daisies-html5-game-launches.html

[11:59:00.0000] <AryehGregor>
/me is very close to just giving up on this part of his final project, given how unbelievably broken the OpenCL compiler is.

[12:00:00.0000] <Philip`>
Would something like CUDA work any better?

[12:01:00.0000] <AryehGregor>
Well, if I wanted to learn it and rewrite my OpenCL code to use it in the next three days, sure.

[12:01:01.0000] <AryehGregor>
Maybe.

[12:01:02.0000] <AryehGregor>
Or maybe not.

[12:01:03.0000] <AryehGregor>
I'm not sure how much of this is due to the immaturity of OpenCL and how much to the immaturity of GPGPUs.

[12:02:00.0000] <AryehGregor>
I think mostly the former.

[12:03:00.0000] <AryehGregor>
But this thing is literally just wiping out the contents of variables after I set them.

[12:04:00.0000] <AryehGregor>
All changes to global variables seem to be wiped out by some totally unrelated-looking macro I have.

[12:04:01.0000] <AryehGregor>
/me sighs and debugs some more

[12:25:00.0000] <AryehGregor>
/me notes that the only things on http://www.w3.org/WAI/PF/HTML/wiki/TextFormat_Comparison_Overview that explicitly mentions only "some" people object are the two listed weaknesses of TTML

[12:25:01.0000] <AryehGregor>
And that "Is not XML." as an advantage of WebSRT is in scare quotes.

[12:26:00.0000] <TabAtkins>
Yeah, it's pretty clear that advantage is stated sarcastically.


2010-12-18
[16:41:00.0000] <annevk>
fuck XML: http://www.starbucks.com/menu/drinks/tazo-tea/chai-latte (use Opera)

[16:46:00.0000] <Rik`>
annevk: this is not the time to drink coffee !

[16:47:00.0000] <annevk>
I was attempting to do some background reading for my short post :)

[16:47:01.0000] <Rik`>
annevk: btw, why do you think image fallback is useless ?

[16:48:00.0000] <annevk>
it seems like way too complex feature for the gain it gives you

[16:48:01.0000] <annevk>
serving up lots of different images; do you see yourself doing it?

[16:48:02.0000] <Rik`>
yes

[16:48:03.0000] <Rik`>
I'm actually doing it on my not really up to date resume

[16:49:00.0000] <annevk>
because?

[16:49:01.0000] <Rik`>
I wish I could serve SVG and then PNG

[16:50:00.0000] <annevk>
it seems a new feature is too late to solve that problem

[16:50:01.0000] <Rik`>
this one

[16:50:02.0000] <Rik`>
but what about new image formats ?

[16:50:03.0000] <annevk>
I think we can handle a new image format every ten years without much trouble

[16:52:00.0000] <Rik`>
I think it makes it harder to introduce new image formats

[16:52:01.0000] <Rik`>
none of the jpeg alternatives as been widely used

[16:52:02.0000] <Rik`>
or apng/mng

[16:53:00.0000] <annevk>
APNG just does not have wide enough adoption yet

[16:53:01.0000] <Rik`>
like SVG

[16:54:00.0000] <Rik`>
when a new format is introduced, you have to wait for complete interoperability to use it

[16:54:01.0000] <annevk>
APNG has fallback

[16:54:02.0000] <Rik`>
with fonts, video and audio, you don't need that

[16:54:03.0000] <annevk>
I think the situation with font formats is not very nice either

[16:55:00.0000] <Rik`>
if I'm doing a throbber, I need the animation

[16:55:01.0000] <Rik`>
so I would like to use APNG for maximum quality and GIF as a fallback

[16:56:00.0000] <Rik`>
the only problem that I know with fonts is that IE doesn't know how to parse format()

[16:56:01.0000] <annevk>
I'm somewhat skeptical people would go through all that trouble

[16:56:02.0000] <annevk>
Some people would, sure, but most?

[16:57:00.0000] <Rik`>
I think it's quite important regarding the interest for web performance

[16:57:01.0000] <annevk>
E.g. with <video> the situation seems to be H264 or Flash :/

[16:58:00.0000] <annevk>
Though YouTube does do the honorable thing there, admittedly

[16:58:01.0000] <Rik`>
this is only because contents are already encoded in H264

[16:58:02.0000] <annevk>
I think there's more interesting things to focus on... Like styling form controls.

[16:59:00.0000] <Rik`>
oh yes, 

[16:59:01.0000] <annevk>
Anyway, should really be sleeping now :)

[16:59:02.0000] <Rik`>
without coffee :)

[17:00:00.0000] <annevk>
or tea, yes :)

[17:49:00.0000] <heycam>
"Apologies for cross-posting"? maybe don't do that then...

[17:49:01.0000] <othermaciej>
it wasn't even a proper cross-post

[17:50:00.0000] <heycam>
yeah, it's worse than a proper cross-post

[17:50:01.0000] <heycam>
made me realise how many w3c lists i'm subscribed to though :o

[17:54:00.0000] <smaug____>
/me got that email 14 times

[18:02:00.0000] <MikeSmith>
http://twitter.com/#!/brianleroux/status/15936952956096512 "While V8 is fast it has no access to the Android APIs without authoring bridge code. Rhino reflects. This is nice and fast."

[18:03:00.0000] <MikeSmith>
maybe I'll write write Java bindings to V8

[18:12:00.0000] <MikeSmith>
oh, that wouldn't do anything to help that problem

[18:12:01.0000] <MikeSmith>
so maybe I won't do it after all

[18:14:00.0000] <MikeSmith>
heycam: do you use mercurial patch queues much?

[18:18:00.0000] <heycam>
MikeSmith, yeah, but I'm no pro

[18:18:01.0000] <heycam>
just simple uses so far

[18:20:00.0000] <MikeSmith>
I've been catching up on validator bugs lately, and with getting it more up to date with the spec -- adding the track element and such

[18:20:01.0000] <MikeSmith>
meanwhile. I have stuff in my workspace that I'm not ready to push to the main validator repo

[18:23:00.0000] <heycam>
sounds like a reasonable thing to use queues for

[18:23:01.0000] <MikeSmith>
but would like to have it in a repo other than just my local workspace, and maybe versioned while I'm working on it, so I can roll back if I need to 

[18:23:02.0000] <MikeSmith>
heycam: do you push your patch queues to somewhere, or do you just maintain them in your local workspace repo?

[18:24:00.0000] <heycam>
MikeSmith, just in my local workspace repo. I have wanted to push them somewhere though, so that my current unfinished patches are viewable/fetchable from elsewhere.

[18:24:01.0000] <MikeSmith>
yeah

[18:25:00.0000] <heycam>
MikeSmith, I suspect that involves having the patch queue being versioned and then somehow pushing that periodically.

[18:25:01.0000] <MikeSmith>
yeah

[18:25:02.0000] <Rik`>
why not use branches ?

[18:25:03.0000] <MikeSmith>
heycam; bitbucket has some features to facilitate that

[18:26:00.0000] <heycam>
aha

[18:26:01.0000] <heycam>
Rik`, could well be that branches support this better

[18:26:02.0000] <MikeSmith>
Rik`: yeah, branches are certainly be a way

[18:26:03.0000] <heycam>
I'm learning hg purely by using it in the ways mozilla people do

[18:26:04.0000] <MikeSmith>
I'm just trying to figure out if this mercurial patch queue thing is a better way for my case or not

[18:26:05.0000] <heycam>
which might not be the "canonical" way...

[18:27:00.0000] <heycam>
MikeSmith, I can't compare it to anything else then, sorry :)

[18:27:01.0000] <MikeSmith>
the mozilla docs on it are nice

[18:27:02.0000] <MikeSmith>
heycam: I noticed your name on the mozilla tutorial page about using queues

[18:28:00.0000] <heycam>
MikeSmith, I must've made some exceptionally minor edit to the page last :-)

[18:28:01.0000] <MikeSmith>
the caveats on that page should be in the main upstream docs for the patch-queue feature

[18:29:00.0000] <MikeSmith>
the stuff about, "Be very careful because this feature can cause you to lose changes" or whatever

[18:30:00.0000] <MikeSmith>
"You can destroy work with MQ. MQ puts you in a position where you're doing fairly complicated stuff to your uncommitted work. Certain operations make it easy to lose work. Watch your step.

[18:30:01.0000] <MikeSmith>
https://developer.mozilla.org/en/Mercurial_queues

[18:30:02.0000] <heycam>
MikeSmith, yeah it seems like good advice

[18:30:03.0000] <MikeSmith>
yeah

[18:30:04.0000] <MikeSmith>
and it's great that it's right at the top of the page

[18:33:00.0000] <MikeSmith>
othermaciej: fyi about HLink - http://www.w3.org/html/wg/wiki/HLink

[18:40:00.0000] <david_carlisle>
MikeSmith: that was dull, can't I have a tracker issue or a poll or anything?

[18:40:01.0000] <MikeSmith>
heh

[18:42:00.0000] <MikeSmith>
david_carlisle: hey, when you think you might have that schema published?

[18:43:00.0000] <MikeSmith>
or deployed in W3C space, I mean

[18:46:00.0000] <david_carlisle>
There was some grumblings about calling it a mathml2 schema. Would it cause you problems if I called it mathml3-restricted, or something?

[18:46:01.0000] <david_carlisle>
I'd have done it before probably except there wore some day job things supposed to be done before, er now:-)

[18:47:00.0000] <david_carlisle>
s/wore/were/

[18:47:01.0000] <MikeSmith>
david_carlisle: yeah, I saw the comment from Robert Miner

[18:47:02.0000] <MikeSmith>
I don't mind what it's called

[18:48:00.0000] <david_carlisle>
OK will rebuild it under that name and pass it by the group this weekend (I'll cc you)

[18:48:01.0000] <MikeSmith>
OK

[18:50:00.0000] <MikeSmith>
I suppose in the validator UI we are probably going to keep it labeled as MathML 2.0

[18:50:01.0000] <MikeSmith>
"MathML 2.0 subset of MathML 3.0"  is kind of long for a label

[18:51:00.0000] <david_carlisle>
Could w3c validator (at least) also have an option to use full mml3. IE9+mathplayer will be able to support pretty much all of mml3, and while the restricted schema is useful to warn the limits of interoperabilty,  seems a bit harsh not to let people see the full version is in fact valid

[18:51:01.0000] <MikeSmith>
It could, sure

[18:52:00.0000] <MikeSmith>
but I don't work on the main validator

[18:52:01.0000] <MikeSmith>
only indirectly, on just the HTML5 facet

[18:52:02.0000] <david_carlisle>
must admit i've only used validator.nu recently:-)

[18:52:03.0000] <david_carlisle>
is the main one still nsgmls/dtd based?

[18:52:04.0000] <MikeSmith>
validator.nu lets you check against arbitrary relaxng schemas already

[18:53:00.0000] <MikeSmith>
yeah, it is

[18:53:01.0000] <MikeSmith>
long in the tooth

[18:53:02.0000] <david_carlisle>
so am i

[18:53:03.0000] <MikeSmith>
heh

[18:54:00.0000] <MikeSmith>
there really has been only one person working on the validator for the last couple years

[18:54:01.0000] <MikeSmith>
Ville Skyttä

[18:54:02.0000] <MikeSmith>
and he's done some good stuff

[18:54:03.0000] <MikeSmith>
and fixed a lot of bugs

[18:54:04.0000] <othermaciej>
MikeSmith: interesting; I couldn't tell from skimming the HLink draft how it differed from XLink

[18:55:00.0000] <MikeSmith>
othermaciej: I've never really read through it

[18:55:01.0000] <MikeSmith>
the interesting thing about it to me was the whole background on it

[18:56:00.0000] <MikeSmith>
I think the HTML WG at the time had reviewed the XLink spec, and given the XLink group comments on it -- asked for changes to bring it in line with their work on XHTML2

[18:56:01.0000] <MikeSmith>
and the changes were never made

[18:56:02.0000] <MikeSmith>
so, they decided not to adopt it

[18:56:03.0000] <MikeSmith>
and came up with HLink instead

[18:57:00.0000] <MikeSmith>
and then TAG apparently told them they had to use XLink instead 

[18:57:01.0000] <david_carlisle>
the old html grp repeatedly asked that xlink not have fixed attribute names so it could be used for existing html attributes, but that got turned down in favour of xlink:href etc

[18:57:02.0000] <MikeSmith>
and they said No

[18:57:03.0000] <MikeSmith>
ah, OK

[18:58:00.0000] <david_carlisle>
same problem with xml:id really, it;s Ok in theory for a new language but a pain to have to break an existing use if id, just to use it

[18:58:01.0000] <MikeSmith>
yep

[18:58:02.0000] <MikeSmith>
anyway, the HLink case is a precedent for groups not just adopting a Rec because its a Rec

[18:58:03.0000] <MikeSmith>
or because they're told to

[18:58:04.0000] <othermaciej>
it is certainly interesting in that light

[19:29:00.0000] <david_carlisle>
james c again on being friendly to html5: http://blog.jclark.com/2010/12/more-on-microxml.html

[19:42:00.0000] <MikeSmith>
/me reads

[04:13:00.0000] <annevk>
oh, missed out on responding to http://www.w3.org/2002/09/wbs/40318/issue-118-objection-poll/results

[04:13:01.0000] <annevk>
rel values prolly require some further study anyway\

[04:48:00.0000] <hsivonen>
http://lists.w3.org/Archives/Public/public-html-xml/2010Dec/0002.html

[04:49:00.0000] <hsivonen>
the HTML-XML task force is getting started

[05:05:00.0000] <annevk>
nice opening message

[05:05:01.0000] <annevk>
oh, and good luck :)

[05:25:00.0000] <jgraham>
annevk: No more depressing stories about schiphol, please

[05:25:01.0000] <jgraham>
Supposed to be flying through there Monday

[05:26:00.0000] <jgraham>
Being trapped in Sweden over Christmas sounds too awful for words

[05:34:00.0000] <jgraham>
hsivonen: That TF has membership by private invitation?

[05:42:00.0000] <hsivonen>
jgraham: yeah

[05:45:00.0000] <jgraham>
Sad

[05:47:00.0000] <bga_>
https://chrome.google.com/extensions/detail/bfjhgapggdjickppeacklbnlgkkckibl

[05:48:00.0000] <Philip`>
/me continues to hate opaque URLs

[12:25:00.0000] <Darxus>
I would love to see wikipedia style references in HTML5.  You put your reference in <ref></ref>s immediately after your quotation or something, it gets replaced with automatically numbered <sup>[1]</sup>, and at the bottom of the page you include a <references /> where all the contents of the refs are listed.

[12:25:01.0000] <Darxus>
Didn't see anything about that possibility being discussed in some brief googling...

[12:25:02.0000] <Darxus>
Footnotes...

[12:26:00.0000] <Darxus>
Much easier than http://dev.w3.org/html5/spec/Overview.html#footnotes

[12:31:00.0000] <Philip`>
Darxus: I think it's been discussed several times, which is why that section was added to the spec

[12:32:00.0000] <Darxus>
Philip`: That seemed likely.  Do you know of any records of the discussion?

[12:33:00.0000] <Philip`>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2008-April/014485.html

[12:34:00.0000] <Darxus>
Thank you.


2010-12-19
[14:30:00.0000] <jgraham>
I hink this is the point at which I bitch about the current state of airports in northern europe

[14:30:01.0000] <jgraham>
+t

[14:33:00.0000] <oojacoboo>
are there any plans to improve the inspector tools in Chrome?

[14:34:00.0000] <AryehGregor>
oojacoboo, they're being improved on a regular basis.

[14:34:01.0000] <oojacoboo>
I'd love to make the switch from firefox to Chrome, but the current dev tools make my css work much more difficult, over firebug, and birebug lite is just not good enough for solid use

[14:34:02.0000] <AryehGregor>
Interesting.  I found Web Inspector good enough for my purposes, but I suppose I don't do so much front-end development.

[14:34:03.0000] <AryehGregor>
If there are specific missing features you'd like, the Chrome/WebKit people would undoubtedly appreciate it if you filed bugs.

[14:35:00.0000] <webben>
oojacoboo: improve them to do what?

[14:35:01.0000] <AryehGregor>
I guess they know that's a reason a lot of people use Firefox instead, so they're eager to improve it.

[14:35:02.0000] <AryehGregor>
When I filed a bug asking for a new Web Inspector feature, it was added pretty quickly.

[14:35:03.0000] <AryehGregor>
(YMMV)

[14:35:04.0000] <webben>
/me never understood what firebug lite offered over webkit inspector

[14:35:05.0000] <oojacoboo>
the one thing that is keeping me back is inspection on element and color based element identification

[14:36:00.0000] <webben>
oojacoboo: do you mean highlighting the element in the page

[14:36:01.0000] <oojacoboo>
for instance, inspect an element, then hover over it in the html DOM and it will highlight that elements box model

[14:36:02.0000] <oojacoboo>
but everything is blue, you can't tell if it's padding, margin, or what

[14:36:03.0000] <oojacoboo>
in firebug, I can do this and know within a second exactly the issue

[14:36:04.0000] <AryehGregor>
Yeah, that's nice in Firebug.

[14:37:00.0000] <oojacoboo>
huge

[14:37:01.0000] <oojacoboo>
probably saves me hours a week

[14:37:02.0000] <webben>
oojacoboo: sounds worthy of an RFE

[14:37:03.0000] <oojacoboo>
RFE?

[14:38:00.0000] <webben>
request for enhancement

[14:38:01.0000] <oojacoboo>
also, the layout inspector is much nicer to look at on firebug

[14:39:00.0000] <oojacoboo>
and the tabs across the top to access that or the styling, is much quicker for navigation and scrolling down the collapsable list

[14:39:01.0000] <oojacoboo>
s/and/than

[14:40:00.0000] <oojacoboo>
I think that the Chrome team would find themselves seeing a lot more developers jumping onboard if they improved the dev tools

[14:40:01.0000] <oojacoboo>
and as we all know, when developers choose to go one way, others tend to follow

[14:41:00.0000] <oojacoboo>
I've been holding out for about 2 years now on Chrome waiting for firebug or something decent

[14:42:00.0000] <AryehGregor>
oojacoboo, you should really try filing bugs asking for specific missing features.

[14:42:01.0000] <AryehGregor>
They're browser implementers, they're not going to know what web developers want exactly.

[14:42:02.0000] <oojacoboo>
I would if it didn't require so much work

[14:43:00.0000] <AryehGregor>
It doesn't require work.

[14:43:01.0000] <oojacoboo>
a form with 30 elements == work

[14:43:02.0000] <AryehGregor>
http://code.google.com/p/chromium/issues/entry

[14:43:03.0000] <AryehGregor>
I count three elements.

[14:43:04.0000] <oojacoboo>
mmm

[14:43:05.0000] <oojacoboo>
must have been mozillas that was so bad

[14:43:06.0000] <AryehGregor>
Mozilla's is okay these days too.

[14:44:00.0000] <oojacoboo>
bugzilla... that is a pile of shit

[14:44:01.0000] <oojacoboo>
worst ui on the planet

[14:44:02.0000] <AryehGregor>
Bugzilla has very bad UI, yes.

[14:45:00.0000] <AryehGregor>
Google Code's tracker has very nice UI, though.

[14:45:01.0000] <oojacoboo>
yea, this looks ok

[14:45:02.0000] <oojacoboo>
I can actually tell what's going on

[14:48:00.0000] <oojacoboo>
submitted

[14:48:01.0000] <oojacoboo>
http://code.google.com/p/chromium/issues/detail?id=67512


2010-12-20
[16:33:00.0000] <AryehGregor>
This is simply fascinating: http://www.popcenter.org/problems/

[18:49:00.0000] <boblet>
hey all. time’s @datetime must be “valid date string with optional time” — does this exclude 2.5.5.4 Local dates and times (datetime without timezone)?

[18:49:01.0000] <boblet>
or, is timezone required for @datetime datetimes?

[19:06:00.0000] <boblet>
Hixie: does @datetime (requires “valid date string with optional time”) linking to 2.5.5.7 (requires timezone) mean local datetime is invalid? link text indicates no, link target indicates yes

[22:02:00.0000] <Hixie>
boblet: not sure what you're asking exactly

[01:51:00.0000] <boblet>
Hixie: when using <time datetime=""> is it ok to use a datetime without a timezone (floating time), or is a timezone (or Z) required?

[03:23:00.0000] <hsivonen>
Hixie: how did you decide on the details of the behavior of document.readyState? Did you spec the behavior of a browser exactly and, if so, which browser?

[03:47:00.0000] <krijnh>
Dashiva: could be nice, if the important lines feature is used correctly. I'm not really following the logs, but is it?

[03:49:00.0000] <krijnh>
(Got 24043 important lines flagged now)

[04:20:00.0000] <jgraham>
krijnh: You should make it like all these newfangled social sites and hand out achievement badges for getting different numbers of lines in yellow

[04:21:00.0000] <annevk>
reddit upvotes for lines

[05:29:00.0000] <Dashiva>
krijnh: It seems to be generally useful

[05:29:01.0000] <Dashiva>
But I still think it should have tags

[05:30:00.0000] <Dashiva>
Informative, controversial, funny, etc

[05:34:00.0000] <spliter>
hello. Is there any appropriate tag to mark a dictionary term in HTML5?

[05:35:00.0000] <hsivonen>
spliter: <i> or <b>

[05:37:00.0000] <spliter>
thanks hsivonen. But I mean is there anything more suitable than just italics or bold. More semantically correct. These tags don't bring any semantic meaning in my opinion

[05:38:00.0000] <Dashiva>
There's no special tag for dictionary terms, no

[05:38:01.0000] <Dashiva>
What do you plan to do with this special markup for dictionary terms?

[05:39:00.0000] <spliter>
Dashiva: I have site's logo and then,plan to use dictionary term as a sort of tagline that explains the site's name using dictionary term

[05:41:00.0000] <Dashiva>
Seems like that'd be better suited for a header element

[05:41:01.0000] <spliter>
Dashiva: I am wrapping logo and this tagline/dict term into <header>

[05:42:00.0000] <spliter>
don't feel like nesting <header>s

[05:42:01.0000] <jgraham>
<hgroup><h1>Perplexed</h1><h2>A state of confusion</h2></hgroup>

[05:42:02.0000] <spliter>
aha, jgraham that looks more appropriate indeed

[05:42:03.0000] <spliter>
thanks. That might work

[05:43:00.0000] <spliter>
but... then I need to wrap logo image into <h1>. Would it be semantically correct?

[05:43:01.0000] <spliter>
logo is an image. Not even wrapped into a link (it's just one-page without any navigation)

[05:44:00.0000] <Dashiva>
As long as the alt text is proper, probably

[05:45:00.0000] <jgraham>
Yeah, logo as <h1> is fine with correct alt text

[05:46:00.0000] <spliter>
ok, guys. Thanks. Will go for <hgroup> and headers then

[05:46:01.0000] <jgraham>
The acid test is "if I remove this image and leave the alt text only, does the page still make sense and convey the same information"

[05:46:02.0000] <spliter>
yeah, that is clear jgraham. Just was not sure about usage of image within <h1>

[06:45:00.0000] <adactio>
Just to clarify: an hgroup element can only contain h1 to h6, so it can't have an img in there. But h1-h6 allow phrasing content (including img) so it *is* okay to have an img inside hgroup ...as long as it's wrapped in an h1-h6. Have I got that right?

[06:45:01.0000] <Dashiva>
Yeah

[06:46:00.0000] <adactio>
Coolio.

[06:57:00.0000] <zcorpan>
hmm, making compression mandatory might be better than xor masking

[06:57:01.0000] <zcorpan>
(in websockets)

[06:59:00.0000] <Philip`>
I thought the idea was to prevent the attacker determining the bytes that go over the wire

[07:00:00.0000] <Philip`>
and with compression it seems relatively easy for them to determine that, since it's not random

[07:00:01.0000] <zcorpan>
that's indeed the point

[07:01:00.0000] <zcorpan>
i don't know enough about compression algorithms

[08:29:00.0000] <zcorpan>
hsivonen: here's a proper answer to what new "html5 stuff" we've got http://my.opera.com/ODIN/blog/2010/12/17/new-html5-features-in-opera-11

[08:30:00.0000] <zcorpan>
/me leaves for foodz

[08:53:00.0000] <Philip`>
/me unexpectedly receives "Introducing HTML5" in the post

[09:14:00.0000] <TabAtkins>
annevk: What do you think about image()'s other fallback feature, of letting you fallback to another image (possibly a browser-generated one) when the first image 404s or is otherwise unavailable?

[09:17:00.0000] <AryehGregor>
TabAtkins, that sounds slow.

[09:17:01.0000] <TabAtkins>
Yes?  It's not meant for speed, in particular.

[09:19:00.0000] <AryehGregor>
I guess.

[09:20:00.0000] <TabAtkins>
I still think the format fallback is useful, for cases like falling back from APNG to GIF (when maintaining the animation is more important than APNG's normal fallback of maintaining the image), or for handling new formats.

[09:20:01.0000] <AryehGregor>
Given that content negotiation is an unsalvageable failure, you're saying.

[09:20:02.0000] <TabAtkins>
But I agree that the syntax isn't great.  I'd prefer doing this automatically through an @image block, with a format similar to @font-face.

[09:21:00.0000] <TabAtkins>
Yeah, sure.

[09:21:01.0000] <AryehGregor>
That sounds more awkward if you're using a lot of images only a few times each.

[09:21:02.0000] <AryehGregor>
image() sounds like a better idea than that.

[09:21:03.0000] <TabAtkins>
Indeed it is.

[09:21:04.0000] <AryehGregor>
But you're not solving the fallback problem for anything other than CSS.

[09:21:05.0000] <AryehGregor>
So it doesn't seem like a great solution.

[09:22:00.0000] <TabAtkins>
True, though you can use CSS to solve the fallback problem for <img>.

[09:22:01.0000] <AryehGregor>
In practice, new image formats have been successfully adopted, so is this really needed?

[09:22:02.0000] <TabAtkins>
(By using the fallback in the 'content' property.)

[09:22:03.0000] <AryehGregor>
Either you just wait till all browsers you care about support it, or (if you really care) use JS detection of some kind.

[09:23:00.0000] <AryehGregor>
I don't see a real need for declarative fallback here.

[09:23:01.0000] <AryehGregor>
Also, image formats can themselves allow for fallback in various ways, like how APNG can fall back to PNG.

[09:23:02.0000] <AryehGregor>
Or <svg>-in-HTML can fall back to anything.

[09:24:00.0000] <TabAtkins>
I just mentioned one example of how you may want to fallback in a different axis than the image format natively supports, like preserving the animation aspect of APNG by falling back to GIF.

[09:24:01.0000] <TabAtkins>
How does SVG do fallback?

[09:25:00.0000] <AryehGregor>
It only does if it's in HTML.  Then you can stick an <img> in some tag where SVG will ignore it, but browsers that don't support SVG will treat all the tags except the <img> as unrecognized wrappers.

[09:25:01.0000] <TabAtkins>
Oh, I see.  SVG can, itself, fall back.  Gotcha.

[09:25:02.0000] <AryehGregor>
I don't remember which tag you're supposed to use for this, but it works, because SVG doesn't have non-whitespace content in any of its elements.

[09:55:00.0000] <TabAtkins>
I'm happy I tracked down why I kept getting calls about leaky baptismal fonts.  I was just able to redirect a dude to the correct number.

[09:55:01.0000] <miketaylr>
O_O

[09:56:00.0000] <Philip`>
Did you tell them to use WOFF?

[09:56:01.0000] <TabAtkins>
Wrong type of font.  ^_^

[09:56:02.0000] <TabAtkins>
A recent website update on some baptismal font maker in Houston put the wrong area code on the phone number in their header.

[09:58:00.0000] <TabAtkins>
Ooh: http://code.bocoup.com/dataurl/

[09:59:00.0000] <hsivonen>
TabAtkins: what's a babtismal font?

[09:59:01.0000] <TabAtkins>
hsivonen: A little sink-like thing of water that you baptize babies in.

[10:00:00.0000] <hsivonen>
TabAtkins: ok. so nothing to do with fonts

[10:00:01.0000] <TabAtkins>
No, it's just called a font, as in "font of wisdom" and such.

[10:00:02.0000] <hsivonen>
(I failed by using define: googing instead of regular googling)

[10:04:00.0000] <Dashiva>
Whenever someone uses font in that meaning I am reminded of http://www.penny-arcade.com/comic/2005/08/26/

[10:05:00.0000] <TabAtkins>
Heh.

[10:16:00.0000] <annevk>
TabAtkins, how often do you get a 404 image?

[10:16:01.0000] <annevk>
TabAtkins, and why can't your 404 page be an image?

[10:16:02.0000] <annevk>
(images are always shown)

[10:17:00.0000] <TabAtkins>
Hmm, it could be.

[11:06:00.0000] <Hixie>
hsivonen: i do not recall

[11:29:00.0000] <hsivonen>
Hixie: ok. by source inspection, it looks surprisingly close to Gecko

[11:29:01.0000] <Hixie>
why "surprisingly"?

[11:29:02.0000] <hsivonen>
Hixie: too bad the behavior doesn't make as much sense as it could if designed rather than evolved

[11:30:00.0000] <Hixie>
welcome to the web

[11:30:01.0000] <hsivonen>
Hixie: previously, IIRC, you had shown reluctance to use all the existing readyState states

[11:30:02.0000] <Hixie>
i guess someone must have convinced me that i was wrong :-)

[11:32:00.0000] <hsivonen>
it's particularly sad that readyState goes "interactive before defer scripts but DOMContentLoaded fires after

[11:33:00.0000] <hsivonen>
it would be nice if the same task queue task that fires DOMContentLoaded flipped readyState

[11:33:01.0000] <hsivonen>
too late I guess

[11:33:02.0000] <hsivonen>
too late to change that is

[11:34:00.0000] <hsivonen>
jQuery expects a relationship between DOMContentLoaded and "complete", but the relationship isn't strictly there

[11:40:00.0000] <Hixie>
hey anyone want to be our group representative for freenode?

[11:44:00.0000] <paul_irish>
/me offers.

[11:46:00.0000] <Hixie>
cool, someone will contact you

[11:46:01.0000] <Hixie>
and thanks!

[11:47:00.0000] <paul_irish>
np!

[11:52:00.0000] <hober>
I'd be happy to as well

[11:53:00.0000] <Hixie>
well it's not paul_irish's job to delegate as he sees fit :-)

[11:53:01.0000] <Hixie>
er

[11:53:02.0000] <Hixie>
it's _now_

[11:54:00.0000] <hober>
heh, indeed

[13:20:00.0000] <Martinp23>
/me sets mode: +o paul_irish

[13:20:01.0000] <TabAtkins>
Ah, we're finally op'ing?  Goodbye to an amazing legacy of no ops.

[13:20:02.0000] <_bga>
:(

[13:28:00.0000] <Lachy>
TabAtkins, huh? How did we get an op in here?

[13:28:01.0000] <oojacoboo>
doesn't css3 have gradient support outside the browser specific prefixing?

[13:29:00.0000] <TabAtkins>
Hixie asked if anyone wanted to be our "group representative for freenode". paul_irish volunteered.

[13:29:01.0000] <oojacoboo>
I can't seem to find any docs on it... :/

[13:29:02.0000] <Hixie>
i've no idea if we'll actually get ops

[13:29:03.0000] <TabAtkins>
oojacoboo: Yes, dev.w3.org/csswg/css3-images describes the gradient functions.  Moz's current experimental implementation is closest to the spec.

[13:29:04.0000] <paul_irish>
Martinp23 is the freenode guy. i think he was just testing out op.

[13:29:05.0000] <Hixie>
i kinda hope we don't get ops :-)

[13:29:06.0000] <Lachy>
ok

[13:30:00.0000] <paul_irish>
PM me if you want op access in here.

[13:30:01.0000] <oojacoboo>
images.... grrr

[13:30:02.0000] <Martinp23>
hehe, nah, I needed to give you op access so you could register the channel :)

[13:30:03.0000] <TabAtkins>
oojacoboo: Huh?

[13:30:04.0000] <Lachy>
we haven't needed them for the past 6 years, but ok

[13:30:05.0000] <paul_irish>
Martinp23: its all regged. i'm good.

[13:30:06.0000] <oojacoboo>
I hardly consider that an appropriate place for gradient

[13:30:07.0000] <TabAtkins>
oojacoboo: I'm confused.  A gradient is a type of image.  What else would it be?

[13:30:08.0000] <oojacoboo>
a background color?

[13:30:09.0000] <TabAtkins>
(More properly, it's a type of paint server, which is a generalization of images.)

[13:30:10.0000] <oojacoboo>
I don't know

[13:31:00.0000] <oojacoboo>
doesn't seem like an image to me, just b/c people used images in the past to achieve it doesn't make it an image

[13:31:01.0000] <TabAtkins>
It's certainly not a color.  Colors are dimensionless and sizeless.

[13:31:02.0000] <oojacoboo>
it's a gradient ;)

[13:31:03.0000] <TabAtkins>
I don't understand what is wrong with calling it an image.

[13:31:04.0000] <oojacoboo>
b/c it's not one

[13:31:05.0000] <TabAtkins>
That's just a term for "2-dimensional rectangle of patterned color".

[13:32:00.0000] <TabAtkins>
What are you trying to define "image" as that doesn't apply to gradients?

[13:32:01.0000] <oojacoboo>
well, maybe I just don't know then, b/c I consider an image to be something linked in

[13:32:02.0000] <oojacoboo>
aka, an image

[13:32:03.0000] <oojacoboo>
with an image type

[13:32:04.0000] <TabAtkins>
The linking nature certainly has nothing to do with something being an image.  It's a property of the content.

[13:32:05.0000] <paul_irish>
/me sets mode: -o paul_irish

[13:33:00.0000] <TabAtkins>
Under your definition, data urls might not be urls.  <canvas> certainly wouldn't be.

[13:33:01.0000] <oojacoboo>
pretty soon everything will be an image then

[13:33:02.0000] <oojacoboo>
esp since I can apply gradient to nearly anything

[13:33:03.0000] <TabAtkins>
s/might not be urls/might not be images/.

[13:33:04.0000] <TabAtkins>
I have no idea what you're thinking about.  It is certainly not true that everything will be an image.

[13:33:05.0000] <oojacoboo>
border: gradient()

[13:33:06.0000] <oojacoboo>
image?

[13:34:00.0000] <TabAtkins>
border: gradient() makes no sense.  Borders have a color.  Border-image would work, though.

[13:34:01.0000] <oojacoboo>
oh, so you can't use linear-gradient() on border: ?

[13:34:02.0000] <TabAtkins>
(That said, you can define a sensible rectangle for borders such that they can take paint servers instead of colors.

[13:35:00.0000] <oojacoboo>
servers?

[13:35:01.0000] <TabAtkins>
No, gradients are a type of <image>, same as url().  Any place you can use url() to pull in an image, you can use gradient() to construct one instead.

[13:36:00.0000] <oojacoboo>
border-image: linear-gradient() ?

[13:36:01.0000] <TabAtkins>
Sorry, paint server is kind of a bad term.  It has nothing to do with network servers.  It just means something which can provide a pattern.  SVG uses the term as a generalization of images.

[13:36:02.0000] <TabAtkins>
Yes, that's fine.

[13:36:03.0000] <oojacoboo>
gotcha

[13:36:04.0000] <oojacoboo>
seems a bit confusing but w/e

[13:36:05.0000] <oojacoboo>
I would have much preferred a bit of simplicity

[13:37:00.0000] <oojacoboo>
I get the url() gradient() replacement, just thought we might have a shorthand for border:

[13:37:01.0000] <TabAtkins>
It's definitely simple.  Your mental model is just constructed differently, so it doesn't fit your head quite right.  You're interpreting that as complexity, because you have to create several exceptions and special-case rules to make the concept fit the shape of your understanding.

[13:38:00.0000] <TabAtkins>
Fix the shape of your understanding instead, and you see that it's extremely simple.  ^_^

[13:38:01.0000] <oojacoboo>
I'm getting that, which is def what has to happen, just not how my logic would have put it together

[13:40:00.0000] <TabAtkins>
It is indeed somewhat unfortunate that the color and border-color properties were defined in such a way that only <color>s are appropriate for them.  This can be fixed, though - webkit, for example, hacks around the issue of 'color' only taking colors by defining a background-attachment value that means "use this image for painting the text".

[13:41:00.0000] <TabAtkins>
It would be better to just define 'color' to take a color or image, and define the size of the rectangle that images are painted into.  It should be the same thing that backgrounds are painted into.

[13:41:01.0000] <oojacoboo>
I just like the thought of thinking of a gradient as a color

[13:41:02.0000] <TabAtkins>
Similarly, border-color would have a painting area of the border box.

[13:41:03.0000] <oojacoboo>
like in photoshop how it's treated

[13:41:04.0000] <oojacoboo>
you could apply it to nearly anything

[13:42:00.0000] <TabAtkins>
I know how you're thinking, it's just backwards.  Think instead that Photoshop always deals with images, and colors are just solid-color images with no intrinsic dimensions.

[13:42:01.0000] <oojacoboo>
I guess I am thinking of it more from a use case and not a development perspective

[13:42:02.0000] <TabAtkins>
(Gradients don't have intrinsic dimensions either, so they work similarly.)

[13:42:03.0000] <TabAtkins>
In other words, think of gradients as images, and instead of "blue" think of something like "linear-gradient(blue, blue)".

[13:43:00.0000] <TabAtkins>
(Or, as you can write in the Image Values module, "image(blue)", which turns it from a <color> into an <image>.)

[13:43:01.0000] <oojacoboo>
mmm

[13:43:02.0000] <oojacoboo>
yea... reprogramming... :/

[13:44:00.0000] <TabAtkins>
The difference is just that colors can be painted into anything without having to worry about what the size of the painting rectangle is, because colors are perfectly uniform.  Images, like gradients, need to know the size of the rectangle they're being drawn into, so they can size themselves appropriately.

[13:44:01.0000] <oojacoboo>
TabAtkins: if you rely on pixel based gradients

[13:45:00.0000] <oojacoboo>
variable based gradients wouldn't be constricted

[13:45:01.0000] <TabAtkins>
No, all gradients.  Scalable gradients still need to know what size to scale themselves to.

[13:46:00.0000] <oojacoboo>
right, yea, but they can get that from the parent element

[13:46:01.0000] <TabAtkins>
Same thing applies to SVG, for example.

[13:46:02.0000] <oojacoboo>
the styled element*

[13:46:03.0000] <oojacoboo>
I guess that might require reprocessing

[13:46:04.0000] <oojacoboo>
and repainting

[13:46:05.0000] <oojacoboo>
like a table

[13:47:00.0000] <TabAtkins>
No they can't.  You want a different rectangle for backgrounds and borders, for example.

[13:47:01.0000] <TabAtkins>
And a third rectangle for <img>, once that gets exposed in a proper way for CSS (<img>'s linked image is drawn into the content box).

[13:48:00.0000] <TabAtkins>
(Backgrounds paint into the padding box by default, though that can be changed to the border or content box.)

[13:49:00.0000] <oojacoboo>
yea

[13:54:00.0000] <Hixie>
can anyone remind me why we're doing window.createObjectURL(blob) rather than blob.url ?

[14:02:00.0000] <oojacoboo>
Hixie: keeping it interesting

[14:02:01.0000] <Hixie>
i guess if you pass a blob around to another window the other window wouldn't be able to get a local-lifetime-bound url

[14:05:00.0000] <TabAtkins>
Hixie: I didn't understand the reasoning well enough to remember it perfectly, but it was something to do with not exposing GC behavior when passing urls between windows, yeah.

[14:09:00.0000] <Hixie>
sicking: we already have a registry

[14:10:00.0000] <Hixie>
heycam, sicking: i don't follow how the proposal lets you just check name instead of checking code. can you elaborate?

[14:11:00.0000] <heycam>
Hixie, you would mint a new IDL exception that you otherwise would have an exception/code combination currently

[14:11:01.0000] <heycam>
these exceptions must have a unique identifier in the idl, across all specs

[14:11:02.0000] <heycam>
the .name property is set to the identifier of the exception

[14:11:03.0000] <Hixie>
right now for all the APIs I use all i check is .code

[14:11:04.0000] <Hixie>
how do all those .codes get names?

[14:12:00.0000] <Hixie>
i don't follow

[14:12:01.0000] <heycam>
for new APIs, they wouldn't have codes. you just mint your exception with a given identifier and that gives the .name.

[14:13:00.0000] <heycam>
for existing APIs, these objects would also have a .code

[14:13:01.0000] <heycam>
so you could continue checking against that, because we obviously can't break that

[14:13:02.0000] <heycam>
but they would also have the .name

[14:13:03.0000] <heycam>
and would be instanceof NoModificationAllowedError, for example

[14:14:00.0000] <Hixie>
sounds like a lot of extra complexity for no benefit, to me, but ok

[14:14:01.0000] <Hixie>
file a bug at some point letting me know what i have to do to make it all work in the specs i edit :-)

[14:14:02.0000] <heycam>
ok

[14:15:00.0000] <heycam>
well let's see if other people respond favourably or not first

[14:15:01.0000] <heycam>
i'll file a bug if/when i make the webidl change

[14:15:02.0000] <Hixie>
personally i much prefer that the platform have one semi-sucky way of doing things than it having two ways of doing the thing, even if the second way is better

[14:16:00.0000] <Hixie>
every piece of duplicate funcationality is a source of new bugs

[14:16:01.0000] <Hixie>
or rather, every piece of funcationality is a source of new bugs, but duplicate functionality just adds new bugs without adding new functionality

[14:17:00.0000] <heycam>
it adds a little functionality -- it allows spec writers to hieararchically arrange their exceptions if they so wish

[14:17:01.0000] <heycam>
and then authors can easily test for a whole branch of that hierarchy

[14:17:02.0000] <heycam>
even if there is no new functionality, but it makes the platform easier to write for, there's still a case to be made for such changes i think

[14:18:00.0000] <Hixie>
it doesn't make the platform easier to write for

[14:18:01.0000] <Hixie>
it makes it harder to write for

[14:18:02.0000] <Hixie>
because now you have to learn two ways of doing the same thing, and learn the bugs for each browser for both ways, and learn how they interact

[14:18:03.0000] <Hixie>
a web author can't just ignore the less good parts of the platform -- they have to know it all so that they can edit other people's code

[14:18:04.0000] <Hixie>
this is why perl is a write-only language

[14:19:00.0000] <Hixie>
because there are so many ways of doing the same thing that most perl authors only know a tiny subset of the whole language

[14:19:01.0000] <Hixie>
so they can edit their own perl code but not anyone else's

[14:20:00.0000] <heycam>
over time you can migrate to a saner, more consistent feature set authors can write against

[14:20:01.0000] <heycam>
obviously there will be old code that uses old stuff

[14:20:02.0000] <heycam>
just like there is old crazy stuff on the web now

[14:21:00.0000] <heycam>
authors don't need to know every single historical aspect of the web platform that is currently supported in order to do their work

[14:21:01.0000] <Hixie>
what don't they have to know?

[14:22:00.0000] <Hixie>
can you point to any api that we've been able to banish from what authors need to know to do their job?

[14:22:01.0000] <Hixie>
(banish while replacing with duplicate but better-designed functionality, i mean)

[14:22:02.0000] <heycam>
for a given project they're working on, they don't need to know everything

[14:22:03.0000] <Hixie>
that's not really how knowledge works :-)

[14:23:00.0000] <Hixie>
you're not a "web developer" if you have to relearn everything for each project

[14:23:01.0000] <Hixie>
the whole point of being a developer in a certain area of expertise is that your knowledge is transferable

[14:23:02.0000] <heycam>
not relearn, but learn additional things

[14:23:03.0000] <heycam>
if they are working on something that uses "the old way" of doing something, then sure, they have to know about that

[14:23:04.0000] <heycam>
if they're not, they don't

[14:24:00.0000] <heycam>
over time the chance that they'll need to know about "the old way" diminishes

[14:24:01.0000] <Hixie>
can you point to an example where we've done this?

[14:24:02.0000] <TabAtkins>
Hixie: I can now depend on querySelector rather than the getElement* methods.

[14:25:00.0000] <Hixie>
heycam: as far as i can tell everywhere where we have duplicate functionality, authors have to know both to be considered proficient web authors

[14:25:01.0000] <heycam>
hey who said anything about "proficient" ;)

[14:25:02.0000] <Hixie>
TabAtkins: yeah but you still need to know how getElement* work if you do web development work

[14:26:00.0000] <Hixie>
heycam: i think we should consider it a serious failure on our part if we make it impossible for any web dev to be proficient

[14:26:01.0000] <heycam>
the web's history is still pretty short, so i wouldn't be surprised if i couldn't think up of such a feature now. it's a long term thing, imo.

[14:26:02.0000] <Hixie>
20 years is not that short :-P

[14:27:00.0000] <Hixie>
how about any other platform?

[14:27:01.0000] <Hixie>
win32, say

[14:27:02.0000] <AryehGregor>
Are you asking whether anyone understands all or even most of Win32?

[14:28:00.0000] <AryehGregor>
I think the answer is "no", although admittedly I'm not an expert on it.

[14:28:01.0000] <heycam>
sure, at a really broad level let's take plain Win32 to .NET

[14:28:02.0000] <Hixie>
win32 has all kinds of duplicate apis that were added pretty much with the same rationale (As far as i can tell): let's add a better API so that devs won't have to worry about the previous API

[14:28:03.0000] <AryehGregor>
(nor, indeed, do I even really know anything about it, except that it's huge)

[14:28:04.0000] <AryehGregor>
Yes, that certainly seems to be true.

[14:28:05.0000] <AryehGregor>
Contrast to Unix.

[14:29:00.0000] <Hixie>
even in my brief experience doing win32 programming a few years ago, i ended up having to learn all kinds of duplicate APIs and how they interacted

[14:29:01.0000] <heycam>
that these APIs can't disappear within the same kind of time frame (or at all?), is kind of a separate issue

[14:29:02.0000] <Hixie>
it's not that they can't disappear, it's that devs have to know them to do their job, because legacy code will have them forever and will still need to be maintained

[14:30:00.0000] <heycam>
but web authors aren't going to be working on a 2010-written web page for ever

[14:31:00.0000] <heycam>
browsers should keep such things working, sure, but authors are going to either not be working on those pages, or will have migrated them

[14:31:01.0000] <Hixie>
sure, they'll be working on 2030-written-pages that evolved from 2005-written-pages

[14:31:02.0000] <AryehGregor>
No, they'll be working on something that was copy-pasted from 2010-written pages.

[14:31:03.0000] <Hixie>
exactly

[14:31:04.0000] <Hixie>
or they'll use some library that picked up something in 2010 and that in 2030 conflicts with the "better" api

[14:31:05.0000] <AryehGregor>
Just look at the source of a random web page that's not maintained by particularly sophisticated coders.  A lot of them still use 1990s style throughout.

[14:32:00.0000] <heycam>
as these evolutions happen, the longer you look out, the less likely these vestigial features will be left in these pages

[14:32:01.0000] <Hixie>
i'm all for making the life of people in 2070 better, but i don't think we should do it at the cost of the life of people between 2010 and 2070 :-)

[14:32:02.0000] <AryehGregor>
For instance, here's a page I happened to have open right now: view-source:http://www.khronos.org/registry/cl/sdk/1.1/docs/man/xhtml/Opencl_tofc.html

[14:32:03.0000] <heycam>
heh

[14:32:04.0000] <AryehGregor>
HTML 4.01 Transitional doctype.

[14:33:00.0000] <AryehGregor>
<script> that's commented out.

[14:33:01.0000] <AryehGregor>
When was the last browser that needed <script>s commented out?

[14:33:02.0000] <AryehGregor>
Like probably NN2 or something?

[14:33:03.0000] <heycam>
ages ago, sure

[14:33:04.0000] <TabAtkins>
I cargo-culted the script commenting when I first started webdev.  @language, too.

[14:33:05.0000] <heycam>
i'm not making any claims on what kinds of time frames these will be

[14:33:06.0000] <heycam>
me too, i think we all did

[14:34:00.0000] <AryehGregor>
Another page I have open: http://www.popcenter.org/problems/identity_theft/

[14:34:01.0000] <AryehGregor>
That one's pretty sophisticated, it even uses jQuery.

[14:34:02.0000] <heycam>
anyway, i don't think this change (the exception thing) will really make the lives of people between 2010 and 2070 appreciably worse

[14:34:03.0000] <AryehGregor>
But it has language="javascript".

[14:34:04.0000] <TabAtkins>
I admit that I find the way js handles HTML comments particularly clever (making <!-- start a one-line comment, and the fact that the HTML parser doesn't care if --> is preceded by //).

[14:34:05.0000] <Hixie>
i think there's a huge opportunity cost to adding new features that duplicate old features, which is not offset by the potential long-term win. We would IMHO do better to add new features that are not duplicates -- we would still help people long-term, but we wouldn't increase the complexity on authors medium-term

[14:34:06.0000] <AryehGregor>
Complication adds up.

[14:35:00.0000] <TabAtkins>
/me loves multi-language programs that exploit differing commenting syntaxes.

[14:35:01.0000] <AryehGregor>
One thing that's a good idea is to add new features that generalize old features and *also* fix their problems.  Like querySelector() instead of getElement*().

[14:35:02.0000] <AryehGregor>
Then the generalization makes the feature worth it, and hopefully the old feature will die one day.

[14:36:00.0000] <heycam>
yes that could help make the timeframe shorter

[14:36:01.0000] <Hixie>
yes, querySelector() makes sense because it adds a lot of functionality

[14:36:02.0000] <AryehGregor>
There are *some* web features that have died such that implementers can remove them, right?  I know I've seen some that not all browsers implemented, at least.

[14:36:03.0000] <AryehGregor>
I can't immediately think of any that all browsers implemented but that could be removed anyway . . .

[14:36:04.0000] <Hixie>
AryehGregor: i don't know of any that were ever implemented in the majority of deployed browsers

[14:37:00.0000] <AryehGregor>
Of course, they'd presumably be so obscure that I'd have never heard of them.

[14:37:01.0000] <Hixie>
browser-specific features have definitely died

[14:37:02.0000] <Hixie>
<spacer>, e.g.

[14:37:03.0000] <Hixie>
bbiab

[14:41:00.0000] <Philip`>
I imagine you can be a decent web developer nowadays without knowing much about framesets or spacer GIFs or web-safe colour palettes

[14:43:00.0000] <Dashiva>
Or IE6 bug workarounds

[14:43:01.0000] <oojacoboo>
instead there are just other issues

[14:43:02.0000] <oojacoboo>
mobile, etc

[14:44:00.0000] <oojacoboo>
it's not this nirvana, as you paint it

[14:46:00.0000] <Dashiva>
The bar has been raised significantly

[14:46:01.0000] <oojacoboo>
what analogical bar is this?

[14:48:00.0000] <Dashiva>
The challenge of yesteryear was designing a page that worked in two different browsers on the same computer. Nowadays it's designing a page that works on multiple platforms, widely different hardware and screen sizes and network capabilities

[14:49:00.0000] <oojacoboo>
agreed, so, I don't see how the statement made by Philip` is really applicable

[14:49:01.0000] <oojacoboo>
sure, you can make a simple webpage easier than you could 10 years ago, but, the web didn't stop innovating

[14:50:00.0000] <AryehGregor>
The point is that some skills were once required of web developers and no longer are.  So it's not like every change just means you need to know more and more.

[14:51:00.0000] <oojacoboo>
liar

[14:51:01.0000] <Dashiva>
Considering the proliferation of javascript and libraries, more and more work can be done by third parties

[14:52:00.0000] <hober>
image/svg+xml has finally been registered: http://www.ietf.org/mail-archive/web/ietf-announce/current/msg08275.html

[14:53:00.0000] <oojacoboo>
Dashiva: keeping up with new technologies will always take a considerable amount of work that only a handful of people will pursue, so, if you want to talk about old technology, yes, new tech, makes old tech easier to use/accomplish goals, but keeping up, will never be commonplace, or easy

[14:54:00.0000] <oojacoboo>
if the goal is status quo, it will always remain at the same level so long as innovation continues at it's current pace

[14:55:00.0000] <Dashiva>
I'm not really convinced writing jQuery.doCoolThing() requires much in terms of keeping up with tech

[14:55:01.0000] <Dashiva>
More and more of the tech is being abstracted away

[14:55:02.0000] <oojacoboo>
and you are limited by what coolThing that is, so keep thinking status quo

[14:56:00.0000] <oojacoboo>
you are at the mercy of jquery plugin developers and jquery core developers

[14:57:00.0000] <Dashiva>
So anything that has been done at least once is status quo? That's a rather demanding angle

[14:57:01.0000] <oojacoboo>
I didn't say that, I am saying anything that has turned into a mass available "framework" or resource, is status quo

[14:58:00.0000] <oojacoboo>
implementing jquery plugin A is nothing special, but creating your own plugin that no one else has access to, can be

[14:59:00.0000] <Dashiva>
So anything that's written in a way that can be reused by others is status quo?

[14:59:01.0000] <oojacoboo>
I'm not sure I would say that's entirely true, there are a few other factors, but generally speaking, yes

[15:01:00.0000] <Dashiva>
So if I write a plugin and someone else uses it, they're just status quo even though 99.999% of websites still do nothing like it

[15:02:00.0000] <oojacoboo>
technically, status quo isn't the correct word for this, but for the sake of the argument, it's the availability of it that makes it "status quo", yes

[15:02:01.0000] <oojacoboo>
ease of replication

[15:03:00.0000] <oojacoboo>
you can't really generalize this type of thing too much as there are many exceptions, but I think you catch my drift

[15:04:00.0000] <Dashiva>
No, I don't see how it backs up your earlier statement

[15:04:01.0000] <oojacoboo>
if your business model is around making a cool embed -able slidshow for instance, it better have something proprietary about it, otherwise, it's nothing special and will be copied and basically become status quo in no time

[15:05:00.0000] <AryehGregor>
Except that doesn't actually happen.  There are lots of people who make their own embeddable slideshows.

[15:05:01.0000] <oojacoboo>
which earlier statement is that, b/c there has been a good deal of deviation

[15:05:02.0000] <Dashiva>
"keeping up with new technologies will always take a considerable amount of work that only a handful of people will pursue,"

[15:05:03.0000] <oojacoboo>
AryehGregor: then they aren't worth copying

[15:05:04.0000] <oojacoboo>
Dashiva: correct, staying cutting edge

[15:06:00.0000] <oojacoboo>
developing an html5 site for example is considerably more work than a standard html4 site

[15:06:01.0000] <Dashiva>
But that's not the case, except in your overly constrained world where anything done once is old

[15:06:02.0000] <AryehGregor>
HTML5 is almost a strict superset of HTML 4, once you remove some features that were useless anyway.

[15:06:03.0000] <oojacoboo>
that's not necessarily cutting edge, but a decent example

[15:06:04.0000] <AryehGregor>
My website is HTML5, but it took very little effort to create.

[15:07:00.0000] <AryehGregor>
Probably less than an XHTML 1.0 website would have.

[15:07:01.0000] <AryehGregor>
(marginally)

[15:07:02.0000] <oojacoboo>
AryehGregor: if you are using html5 features for their actual use

[15:07:03.0000] <AryehGregor>
I am.  http://aryeh.name/

[15:07:04.0000] <Dashiva>
It takes less effort, since you don't have to deal with stuff like mandatory type attributes on script and style :)

[15:07:05.0000] <oojacoboo>
using standard DOM elements without any functional benefit isn't really anything special, agreed

[15:07:06.0000] <AryehGregor>
I make use of lots of HTML5 innovations.

[15:08:00.0000] <AryehGregor>
Like its broader tolerance of leaving out useless stuff, <nav>, <header>, etc.

[15:08:01.0000] <oojacoboo>
AryehGregor: most web developers won't know how or won't be interested in taking the time to learn how to do this

[15:08:02.0000] <AryehGregor>
"This" being something that's easier than XHTML 1.0?

[15:08:03.0000] <oojacoboo>
the point is, staying a step ahead will always require more work

[15:09:00.0000] <AryehGregor>
Was anyone talking about staying a step ahead?

[15:09:01.0000] <AryehGregor>
We were originally talking about just being a regular competent web developer.

[15:09:02.0000] <oojacoboo>
AryehGregor: yes, that's based around the statement I made earlier with Dashiva

[15:10:00.0000] <oojacoboo>
bah, my point is, its the same and will stay the same, it's not easier to harder yesterday or tomorrow so long as innovation remains at it's current pace

[15:10:01.0000] <Dashiva>
Well, like I already said, I don't think your statement applies to real world situations

[15:11:00.0000] <oojacoboo>
Dashiva: that's partially true, since implementation is a huge part of it

[15:11:01.0000] <TabAtkins>
Flexbox is hard: http://www.xanthir.com/diagrams/flex-align-diagrams.html

[15:11:02.0000] <oojacoboo>
but that's also proprietary

[15:12:00.0000] <AryehGregor>
oojacoboo, you realize that this channel is populated by a significant percentage of the people who *design* new standard web features?  Fatalism isn't really applicable here.  We were talking about how to design new web features to make the web platform as easy to use as possible for authors going on into the future.

[15:13:00.0000] <oojacoboo>
absolutely realize

[15:13:01.0000] <AryehGregor>
Specifically, we were talking about whether to add better versions of old features, and generally concluding it was a bad idea because then authors will wind up having to know both sets of features.

[15:13:02.0000] <AryehGregor>
I'm not at all clear on what relevance all this stuff you're saying has.

[15:13:03.0000] <oojacoboo>
I was specifically speaking to Dashiva

[15:14:00.0000] <zcorpan>
wtf http://www.youtube.com/watch?v=gwaAAEYIW_8

[15:14:01.0000] <oojacoboo>
but the original reply was in regards to this blanket comment "Philip`: I imagine you can be a decent web developer nowadays without knowing much about framesets or spacer GIFs or web-safe colour palettes"

[15:15:00.0000] <oojacoboo>
that statement is really only accurate if you think we live in the web of 8 years ago with today's technologies

[15:16:00.0000] <oojacoboo>
b/c today presents a whole new set of issues

[15:16:01.0000] <TabAtkins>
zcorpan: It's just a visual application of polynomial multiplication.

[15:17:00.0000] <TabAtkins>
21*32 = (2a + 1)*(3a+2) = 6a^2 + 7a + 2, where a=10

[15:18:00.0000] <zcorpan>
yeah

[15:18:01.0000] <zcorpan>
still, a procedure a 10-year old can follow

[15:19:00.0000] <zcorpan>
at least a smart 10-year old

[15:19:01.0000] <TabAtkins>
Nah, a dumb 10 year old can follow it.  A smart 6 year old could do it.

[15:20:00.0000] <TabAtkins>
It becomes generally unworkable above 3-digit numbers, but it's rare you actually have to multiply numbers that large with any precision.

[15:20:01.0000] <AryehGregor>
As it happens, though, a 10-year-old could also follow the more conventional procedure for multiplication.

[15:20:02.0000] <AryehGregor>
Although this one has the advantage that you don't need to know your multiplication tables, I guess?

[15:21:00.0000] <AryehGregor>
But it requires a lot of counting.

[15:21:01.0000] <AryehGregor>
Notice how all the digits in the examples were small.

[15:21:02.0000] <TabAtkins>
Precisely.  It requires only counting, no multiplication.

[15:21:03.0000] <AryehGregor>
Try doing 79 times 88 or something.

[15:21:04.0000] <TabAtkins>
Right.

[15:21:05.0000] <TabAtkins>
Or simply, just 9 times 9.

[15:21:06.0000] <AryehGregor>
Yeah.

[15:22:00.0000] <zcorpan>
yes becomes pointless with high numbers

[15:22:01.0000] <TabAtkins>
Damn you, table layout algorithm, and your lack of specification!

[15:23:00.0000] <zcorpan>
TabAtkins: try sticking your head in the sand?

[15:23:01.0000] <TabAtkins>
Or, hrm.  Maybe this is due to box-sizing, actually.

[15:24:00.0000] <TabAtkins>
Or, the combination thereof?

[15:25:00.0000] <TabAtkins>
Well, whatever.  My diagrams looks right in Firefox, and I'm reasonably sure I'm using all the relevant properties correctly.

[15:26:00.0000] <TabAtkins>
Yeah, this is definitely just webkit being dumb about box-sizing, since it's screwing up even the simple case where I'm just telling something to be height:100% in a table-cell.

[15:27:00.0000] <AryehGregor>
I tend to find WebKit is more often incorrect on tricky stuff than Gecko.

[15:27:01.0000] <TabAtkins>
Yeah, me too.

[15:27:02.0000] <TabAtkins>
Time to repro and report.


2010-12-21
[16:00:00.0000] <TabAtkins>
Yay, done. http://code.google.com/p/chromium/issues/detail?id=67629

[16:04:00.0000] <jamesr_>
prz to file in bugs.webkit.org kthxbai

[16:07:00.0000] <TabAtkins>
Goddammit.

[16:07:01.0000] <Hixie>
hah

[16:11:00.0000] <TabAtkins>
jamesr_: https://bugs.webkit.org/show_bug.cgi?id=51362

[16:13:00.0000] <boblet>
member:Hixie: when using <time datetime=""> is it ok to use a datetime without a timezone (floating time), or is a timezone (or Z) required?

[16:13:01.0000] <Hixie>
/me looks

[16:14:00.0000] <Hixie>
boblet: does the element have a pubdate attribute?

[16:14:01.0000] <Hixie>
(not that i think it matters in this case)

[16:14:02.0000] <Hixie>
(but it'll simplify my answer)

[16:14:03.0000] <boblet>
possibly :) this was an enquiry on html5doctor

[16:15:00.0000] <Hixie>
hm actually it does matter

[16:15:01.0000] <boblet>
spec says requires “valid date string with optional time” which to me would make timezone optional, but links to 2.5.5.7 (timezone required)

[16:15:02.0000] <Hixie>
why would "valid date string with optional time" mean the timezone was optional?

[16:16:00.0000] <Hixie>
a valid date string with optional time is a string that is either a valid date string, or a valid global date and time string

[16:17:00.0000] <Hixie>
i.e. it's the time that's optional, not the time zone

[16:17:01.0000] <boblet>
hixie: aah ok. I initially read it as any of the datetime microsyntaxes would be ok

[16:17:02.0000] <boblet>
but the link indicated I was wrong

[16:17:03.0000] <Hixie>
no, only the ones it says are ok are ok :-)

[16:18:00.0000] <Hixie>
that's why it says which one is ok :-)

[16:18:01.0000] <boblet>
hehehe

[16:18:02.0000] <hober>
so, for instance, it can be 2010-12-20, or 2010-12-20T16:24:00-08:00

[16:19:00.0000] <boblet>
does that include non-pubdate uses of <time>?

[16:19:01.0000] <Hixie>
to answer your original question, the answer is "it depends" -- if it has a pubdate attribute, then datetime must be a date or a date+time+timezone; if it has no pubdate attribute, then datetime must be either a date, or a time, or a date+time+timezone.

[16:19:02.0000] <Hixie>
this is all defined here: http://www.whatwg.org/specs/web-apps/current-work/#attr-time-datetime

[16:19:03.0000] <boblet>
oh! so when would a non-timezone datetime (local datetime) be used?

[16:20:00.0000] <Hixie>
<p>I usually have a snack at <time>16:00</time>.</p>

[16:21:00.0000] <boblet>
2.5.5.4 Local dates and times specs a date + time with no timezone

[16:21:01.0000] <Hixie>
(so you can style it to be "I usually have a snack at 4pm.")

[16:22:00.0000] <Hixie>
yes

[16:22:01.0000] <boblet>
is it possible to use 2.5.5.4-style datetimes with <time>?

[16:23:00.0000] <hober>
<p>I had a snack <time datetime="2010-12-20T16:00:00">this afternoon</time>.</p>

[16:24:00.0000] <hober>
not sure if that's OK per spec

[16:24:01.0000] <Hixie>
boblet: not currently, no

[16:24:02.0000] <boblet>
hober: that conflicts with what Hixie wrote above (“ if it has no pubdate attribute, then datetime must be either a date, or a time, or a date+time+timezone.”)

[16:24:03.0000] <hober>
boblet: yeah

[16:24:04.0000] <Hixie>
the spec seems pretty clear cut on all this to me :-)

[16:24:05.0000] <boblet>
Hixie: ok thanks. Appreciate you clearing that up

[16:24:06.0000] <Hixie>
what is it about the spec that makes this confusing?

[16:24:07.0000] <Hixie>
i really should make the spec clearer if all this can't be determined straight from following th elinks in the spec

[16:25:00.0000] <boblet>
yeah, I didn’t write the article, so I don’t know if it was a misreading or if the spec changed to make local datetimes invalid for @datetime

[16:25:01.0000] <boblet>
could also be that microformat datetimes are generally local (no-timezone) oners

[16:26:00.0000] <boblet>
will update our article

[16:28:00.0000] <hober>
I don't think that assertion makes sense re: microformat datetimes

[16:28:01.0000] <hober>
Most hAtom I've seen in the wild uses Atom-like RFC3339 productions, including tz

[16:30:00.0000] <TabAtkins>
I know that I just use date('c') for my stuff, which produces a tz.

[16:31:00.0000] <TabAtkins>
(From PHP.)

[16:31:01.0000] <Hixie>
there aren't really that many use cases for timezone-less datetimes in output, from what i can tell

[16:32:00.0000] <Hixie>
but it's not clear that <time> has enough use cases to really justify it anyway

[16:32:01.0000] <Hixie>
and it might end up being dropped

[16:32:02.0000] <TabAtkins>
"The ball starts to drop at <time datetime=2010-12-31T23:59:50>10 seconds before midnight!</time>."

[16:32:03.0000] <Hixie>
that's not really right

[16:33:00.0000] <Hixie>
it's 10 seconds before midnight EST :-)

[16:33:01.0000] <TabAtkins>
I think <time> is useful enough just for being a carrier of datetime information for microformats/microdata.

[16:33:02.0000] <TabAtkins>
All of the balls drop at the same local time.

[16:33:03.0000] <boblet>
hober: any hand-authored hEvent probably won’t contain tiemzone, because like all i18n no one thinks of if

[16:33:04.0000] <Hixie>
there are multiple balls?

[16:34:00.0000] <TabAtkins>
Lots of places do a ball drop, not just Times Square.

[16:34:01.0000] <TabAtkins>
And everyone likes to count down from 10, so...

[16:38:00.0000] <hober>
boblet: maybe. I hand-author hevents surprisingly frequently, so I have an Emacs command that inserts the correctly-formatted now timestamp for me

[16:38:01.0000] <hober>
I freely acknowledge I'm an outlier. :)

[16:39:00.0000] <boblet>
hober: yeah, I agree anyone hand-authoring should be using snippets (I do the same), but a surprising number of microformatters think that the brevity allowed is a good thing (eg implied n optimisation and the resulting i18n problems it has)

[16:40:00.0000] <boblet>
snippets ftw!

[16:49:00.0000] <Hixie>
the instructions for this lighter i am using say "do not use near fire, flame, or sparks"

[16:49:01.0000] <Hixie>
how the heck else am i supposed to use it

[16:49:02.0000] <TabAtkins>
The flame is part of use, so it doesn't count as something the lighter is used *near*.

[16:51:00.0000] <Hixie>
ok but once i've lit what i'm lighting... then it's on fire

[16:51:01.0000] <TabAtkins>
Yeah, so stop using it near that then.

[16:51:02.0000] <Hixie>
but it explicitly has a feature for lighting multiple things in a row

[16:51:03.0000] <Hixie>
like a bunch of candles

[16:51:04.0000] <TabAtkins>
Then I guess the definition of "near" comes into question.

[17:00:00.0000] <Philip`>
The idea is presumably that you're meant to disregard their instructions

[17:00:01.0000] <Philip`>
but that if you e.g. carry it into a burning building and it explodes then you can't sue them since they warned you in advance

[17:04:00.0000] <jamesr_>
TabAtkins: why would a hash function be slower in JS than in native code?

[17:04:01.0000] <TabAtkins>
Because most hashes are designed for a hardware implementation.

[17:05:00.0000] <Philip`>
JS runs on hardware

[17:05:01.0000] <TabAtkins>
Sigh.

[17:06:00.0000] <Philip`>
Maybe you mean most hashes are designed for implementation in languages that have 32-bit integer operations, or something?

[17:07:00.0000] <Philip`>
(That seems like the main pain with JS)

[17:07:01.0000] <TabAtkins>
Yeah.

[17:07:02.0000] <TabAtkins>
Ones that can actually sit next to the hardware if necessary.

[17:15:00.0000] <jamesr_>
JS has 32-bit integer operations, no? (i thought most bitwise ops truncate to 32 bits)

[17:16:00.0000] <Hixie>
TabAtkins: why couldn't a JS compiler be as efficient with hashing code as a C++ compiler?

[17:16:01.0000] <TabAtkins>
I assume it's more difficult, given that you don't have direct binary access.

[17:18:00.0000] <Philip`>
I suppose implementations might be clever enough to realise that "(a + b) & 0xffffffff" could do a 32-bit addition rather than storing intermediate values as doubles, but I don't know if any currently do that

[17:19:00.0000] <Philip`>
and it's a bit inelegant to rely on pattern-matching optimisations to make your code not terrible

[17:21:00.0000] <Hixie>
TabAtkins: i don't understand what "direct binary access" means

[17:22:00.0000] <TabAtkins>
Doing JS math involves using JS numbers.  That abstraction is slower than just doing bit-munging like you can do in C and other languages.

[17:23:00.0000] <Hixie>
compilers can totally recognise that there's a function that only does math operations on its arguments and have a "fast version" compiled that they use when the input is in range

[17:24:00.0000] <Hixie>
isn't that a lot of what V8 actually does?

[17:27:00.0000] <jamesr_>
optimizing JS engines spend a lot of effort knowing when they can just bit-munge

[17:28:00.0000] <jamesr_>
and optimizing something like (a + b) & 0xff is not done using pattern matching

[17:29:00.0000] <TabAtkins>
I'd be happy to be shown wrong, that it's expected that we do fast hashing in js.

[17:29:01.0000] <jamesr_>
try it

[17:29:02.0000] <TabAtkins>
Aw, I wasn't wanting to implement one myself.  >_<

[17:31:00.0000] <jamesr_>
generating a hash for a Blob's contents might make sense as a provided AP

[17:31:01.0000] <jamesr_>
I

[17:31:02.0000] <jamesr_>
or something of that nature

[18:12:00.0000] <roc>
modern engines absolutely do optimize "(a + b) & 0xffffffff" up the wazoo

[02:08:00.0000] <annevk>
can anyone think of a better repository than code.google.com/p/html5/ for the encoding data and scripts?

[02:08:01.0000] <annevk>
I don't really want to make a new one

[02:08:02.0000] <annevk>
oh, I guess I could use bitbucket

[02:58:00.0000] <annevk>
https://bitbucket.org/annevk/webencodings

[04:09:00.0000] <annevk>
http://annevankesteren.nl/2010/12/encodings-labels-tested has an explanation for gathering the data

[04:10:00.0000] <annevk>
and http://annevankesteren.nl/2010/12/encodings-analysis has some analysis

[04:12:00.0000] <hsivonen>
whoa, whoa. Does Chrome not have UI for selecting the character encoding or am I missing something?

[04:13:00.0000] <annevk>
on Mac there is View -> Encoding

[04:13:01.0000] <hsivonen>
annevk: I'm on Linux right now

[04:13:02.0000] <hsivonen>
oh. it's under a crazy level of submenus

[04:13:03.0000] <zcorpan>
under the menu button, Tools > Encoding

[04:14:00.0000] <annevk>
encoding menus are lame

[04:14:01.0000] <annevk>
I sort of wonder who is still subjected to them

[04:14:02.0000] <hsivonen>
I don't understand the encoding UI for Safari and Chrome

[04:14:03.0000] <hsivonen>
why is Auto Detect in the same set of choices as particular encodings?

[04:15:00.0000] <hsivonen>
that is, what are the semantics of choosing Auto Detect?

[04:15:01.0000] <hsivonen>
oh. it's not in the same set

[04:15:02.0000] <hsivonen>
confusing

[04:15:03.0000] <hsivonen>
it's a boolean outside the set

[04:16:00.0000] <hsivonen>
so if I choose Auto Detect in Chrome, how many bytes will Chrome sniff and how will it decide to commit to an encoding? will it ever reload a page because of autodetection?

[04:17:00.0000] <annevk>
dunno, there's no spec for sniffing :/

[04:17:01.0000] <hsivonen>
I thought WebKit devs don't want to introduce charset reloads because of <meta>

[04:17:02.0000] <hsivonen>
there's now a bug about the HTML5 parser in Gecko running chardet only on the 1024 first bytes

[04:18:00.0000] <hsivonen>
the bug doesn't have sufficient site compat data and it's hard to judge it without

[04:19:00.0000] <hsivonen>
/me wishes Japanese Web authors got their encoding labeling act together

[04:27:00.0000] <zcorpan>
we should intentionally break non-utf-8 encodings in nightly builds to promote moving to utf-8

[04:28:00.0000] <annevk>
disabling chardet in nightlies would be good

[04:28:01.0000] <hsivonen>
zcorpan: for authors to notice, you need to start publishing nightlies :-)

[04:28:02.0000] <annevk>
and Firefox and IE and Opera removing support for certain labels would be good too

[04:29:00.0000] <zcorpan>
hsivonen: well we need to start somewhere. some authors use nightlies, so they'll notice if their site broke

[04:29:01.0000] <annevk>
hmm, even Chrome supports ibm864

[04:29:02.0000] <annevk>
Opera is left out

[04:29:03.0000] <hsivonen>
annevk: do Safari and Chrome have enough market share in the locales associated with those labels to draw conclusions about the needlessness of those labels?

[04:29:04.0000] <zcorpan>
hsivonen: oh, for opera, s/nightlies/weeklies/

[04:31:00.0000] <annevk>
hsivonen, fair point

[04:31:01.0000] <annevk>
hsivonen, though for certain encodings only 1 browser supports them

[04:32:00.0000] <annevk>
hsivonen, e.g. Opera is the only browser with support for windows-sami-2 and viettcvn

[04:32:01.0000] <hsivonen>
annevk: hmm. I wonder how those got added in the first place.

[04:32:02.0000] <annevk>
Firefox is the only browser with ibm864i

[04:33:00.0000] <hsivonen>
annevk: the explanation in the case of Firefox is most likely that if you have IBM contributing i18n code, they contribute support for their own legacy stuff

[04:33:01.0000] <annevk>
also the only one with armscii-8 and csiso103t618bit, iso-ir-103, t.61-8bit, t.61 and csiso111ecmacyrillic, iso-ir-111, ecma-cyrillic

[04:33:02.0000] <annevk>
(search for OSIC to find them)

[04:33:03.0000] <hsivonen>
annevk: you should try to come up with a reason why those are a security threat to expedite removal

[04:34:00.0000] <annevk>
well, ": OSIC" is better

[04:34:01.0000] <annevk>
yeah, I have no idea how I get people to care about any of this :)

[04:35:00.0000] <hsivonen>
annevk: smontagu has been removing stuff piecemeal as people have come up with threat scenarios

[04:36:00.0000] <annevk>
what I'd love is for this to be fully deterministic

[04:37:00.0000] <annevk>
so I can always tell what would happen, regardless of browser

[04:37:01.0000] <annevk>
(and without browser being a input variable, obviously)

[04:53:00.0000] <annevk>
Safari has a weird pattern as well

[04:54:00.0000] <annevk>
for a number of encodings it seems to swap the code points 1A, 1C, 7F map to around

[04:56:00.0000] <hsivonen>
annevk: do you have a list of encodings that are supported but have no UI entry in the menu?

[04:57:00.0000] <annevk>
no, another list I lack is a mapping against IANA

[04:57:01.0000] <annevk>
also, I don't have multi-byte encodings covered

[04:58:00.0000] <annevk>
big5, shift_jis

[04:59:00.0000] <annevk>
inspecting those would require a different strategy

[05:20:00.0000] <hsivonen>
I'm shocked that html5lib doesn't have systematic tests for all void elements

[05:20:01.0000] <hsivonen>
I'll add some

[05:43:00.0000] <annevk>
one way would be of course to make HTML5 require certain encodings and mappings

[05:43:01.0000] <annevk>
it already defines error handling for UTF-8

[05:44:00.0000] <annevk>
or make it normatively reference a "Web Encoding" spec

[06:27:00.0000] <hsivonen>
hmm. How do I file a bug against the Japanese Planet Debian?

[06:28:00.0000] <hsivonen>
/me tries the email on a blog on the same domain

[08:07:00.0000] <jacobolus>
TabAtkins: finally getting back to you a week or whatever later; I'm not precisely sure all of where your discussion happened, but is there a summary someplace of your compromises/agreements with the Apple people about gradient syntax?

[08:07:01.0000] <annevk>
hahaha "The WebSockets"

[08:08:00.0000] <annevk>
this reminds of that movie

[08:09:00.0000] <jacobolus>
annevk: link?

[08:09:01.0000] <annevk>
http://blogs.msdn.com/b/ie/archive/2010/12/21/html5-site-ready-and-experimental.aspx it also links to the movie

[08:10:00.0000] <annevk>
again Microsoft does some heavy PR-spin on how they made the right choice here...

[08:10:01.0000] <annevk>
so lame

[08:14:00.0000] <jacobolus>
annevk: "the movie" = http://www.xtranormal.com/watch/7991991/ ?

[08:15:00.0000] <annevk>
think so

[08:17:00.0000] <jacobolus>
annevk: you don't think microsoft just wants to "remove much of the guess work for developers"?

[08:17:01.0000] <jacobolus>
giving "more time for site developers to innovate and create better web experiences"?

[08:18:00.0000] <annevk>
it looks more like they were just late implementing Web Sockets and found some kind of way to make that look good

[08:18:01.0000] <annevk>
and now they use the same argument for a bunch of other things

[08:18:02.0000] <jacobolus>
cuteL "Other modules have perfectly fine interoperable alternatives, like using script in place of CSS3 Transitions and CSS3 Animations"

[08:19:00.0000] <jacobolus>
*cute:

[08:20:00.0000] <bga_>
are there IE developers here?

[08:20:01.0000] <jacobolus>
no one can accuse MS of being bad at FUD :)

[08:21:00.0000] <jacobolus>
"whatever we implemented? obviously important and awesome. whatever we didn't implement? probably half-baked and likely to break."

[08:22:00.0000] <bga_>
i have a problem with execCommand('SaveAs') :)

[08:22:01.0000] <bga_>
it do not save binary data

[08:28:00.0000] <jacobolus>
bga_: isn't it designed for text boxes or something?

[08:31:00.0000] <jacobolus>
bga_: SaveAs doesn't seem to be listed in http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#execCommand

[08:31:01.0000] <bga_>
i know :)

[08:32:00.0000] <bga_>
whatwg should invents such api :)

[08:33:00.0000] <annevk>
jacobolus, heh, put a PR-speak to English version of that on twitter

[08:34:00.0000] <bga_>
window.saveDialog(fileName, fileData, fileMime)

[08:34:01.0000] <jacobolus>
annevk: I don't believe in twitter; the translation sounds like a good idea though; surely someone is interested :)

[08:34:02.0000] <annevk>
I mean I did it for you

[08:35:00.0000] <annevk>
not sure yet whether I believe in twitter, but my friends post fun photos every now and then

[08:37:00.0000] <jacobolus>
toDataURL is the only way to get image data out of a canvas, right?

[08:37:01.0000] <jacobolus>
i.e. into JavaScript

[08:42:00.0000] <jacobolus>
that or pixel by pixel with createImageData I guess

[08:42:01.0000] <jacobolus>
er, getImageData

[08:42:02.0000] <jacobolus>
oh, nevermind

[08:56:00.0000] <annevk>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/746 -- browsers do funny things with elements inside <option>

[09:06:00.0000] <TabAtkins>
jacobolus: The changes I made due to Apple feedback were to make it easier to transition gradients.  As a result I slightly simplified the first argument to linear gradients and added the explicit-radiuses form for radial gradients.

[09:07:00.0000] <jacobolus>
TabAtkins: so those changes are in the spec as it is online now?

[09:07:01.0000] <TabAtkins>
Yes.

[09:07:02.0000] <TabAtkins>
at dev.w3.org/csswg/css3-images

[09:07:03.0000] <jacobolus>
gotcha. so Apple is mostly on board with that as written?

[09:07:04.0000] <TabAtkins>
As far as I know, yeah.

[09:07:05.0000] <jacobolus>
ah, great

[09:08:00.0000] <jacobolus>
TabAtkins: how much does it differ from mozilla's current implementation?

[09:08:01.0000] <jacobolus>
are the syntaxes compatible, or a bit different?

[09:09:00.0000] <TabAtkins>
Yes, almost completely compatible.  The only incompatible difference is if you used the explicit-starting-point form of linear gradients, for anything other than one of the sides or corners.

[09:09:01.0000] <TabAtkins>
That is, a gradient like linear-gradient(10px 10px, white, black) is no longer valid.

[09:09:02.0000] <TabAtkins>
But linear-gradient(top left, white, black) still is.

[09:10:00.0000] <jacobolus>
gotcha

[09:11:00.0000] <jacobolus>
TabAtkins: thanks

[09:22:00.0000] <Ms2ger>
annevk, you got me at "browsers do funny things"

[09:27:00.0000] <annevk>
heh

[09:30:00.0000] <annevk>
how exactly is MicroXML better than XML?

[09:31:00.0000] <hober>
so far it's not very different, is it

[09:32:00.0000] <oojacoboo>
anyone see the lunar eclipse last night?

[09:32:01.0000] <TabAtkins>
No. ;_; Too cloudy.

[09:33:00.0000] <oojacoboo>
yea, same here, too cloudy

[09:34:00.0000] <hober>
I think socal is going to float away from the mainland if this rain keeps up

[09:34:01.0000] <hober>
which is to say, it was completely overcast here too. :(

[09:36:00.0000] <oojacoboo>
man, a red moon, it would have been cool... for a min, I could have felt like I was living on a strange planet

[09:37:00.0000] <annevk>
whoa, no browser does incremental rendering of XML anymore?

[09:37:01.0000] <annevk>
http://www.hixie.ch/tests/evil/page-loading/incremental/001.cgi?mime=text%2Fxml&delay=1&repeats=20

[09:37:02.0000] <annevk>
weak

[09:37:03.0000] <kennyluck>
Do people see junk on this page -> http://bugzilla.validator.nu/ ?

[09:38:00.0000] <oojacoboo>
kennyluck: junk?

[09:38:01.0000] <annevk>
it talks about Firefox 2...

[09:38:02.0000] <kennyluck>
Very weird but it seems to have some encoding problem. It works fine if I view it with Safari but I see junk from FF and IE.

[09:38:03.0000] <TabAtkins>
Man, js engines are *weird*.

[09:39:00.0000] <annevk>
Film at 11

[09:39:01.0000] <TabAtkins>
I just changed the md5 implementation I found somewhere to do 32-bit addition on the full 32 bits, rather than splitting the numbers into 16-bit halves and then recombining, and it doubled execution time.

[09:41:00.0000] <TabAtkins>
...in Firefox.  In Chrome I see a 10% speedup from doing that.

[09:42:00.0000] <TabAtkins>
Sorry, 10% slowdown.  Still, much better than a 100% slowdown.

[09:44:00.0000] <jcranmer>
so chrome sucks at doing 32-bit addition?

[09:44:01.0000] <TabAtkins>
Both browsers do.  Chrome sucks much less.

[09:45:00.0000] <jcranmer>
too early in the afternoon for me

[09:46:00.0000] <TabAtkins>
Unless your whois is lying, it's not the afternoon at all for you!

[09:46:01.0000] <jcranmer>
it's 12:51 PM

[09:46:02.0000] <TabAtkins>
Oh, I see, that's just the freenode server you're connecting through that's in Oregon.

[09:46:03.0000] <jcranmer>
the server I'm connected to is in Oregon

[09:47:00.0000] <TabAtkins>
I wasn't looking too closely.

[09:47:01.0000] <jcranmer>
the server my irc client is on is in the DC area

[09:47:02.0000] <jcranmer>
the computer I'm typing this on is a few miles further to the south

[09:47:03.0000] <ap>
annevk: do you know about <http://demo.icu-project.org/icu-bin/convexp?s=IANA&s=MIME&s=ALL>?

[09:48:00.0000] <ap>
annevk: most WebKit encodings come from there, modulo a few handcrafted additions, and tweaks Google made in their distribution for some reason

[09:49:00.0000] <annevk>
Chrome is quite different from Safari

[09:49:01.0000] <annevk>
and Mac Safari is different from Win Safari

[09:49:02.0000] <annevk>
well, that is, Chrome has much more encodings disabled

[09:56:00.0000] <ap>
annevk: yes, we don't support some legacy encodings in Safari on Windows, and may be shipping a different version of ICU, depending on which version of Mac OS X you tested with

[09:56:01.0000] <ap>
annevk: the reason is that besides Web compatibility, we need to be read old local files on Mac

[09:57:00.0000] <ap>
s/be//

[09:57:01.0000] <annevk>
I have the latest Mac OS X

[09:58:00.0000] <annevk>
Yeah, apparently Mac Opera supports some more Mac encodings for that reason too

[09:58:01.0000] <annevk>
Though a lot less than Safari, and on Windows we support no Mac encodings despite most other browsers supporting at least a few

[09:58:02.0000] <annevk>
It's not just Mac encodings though

[09:59:00.0000] <annevk>
Chrome 28 / Safari 46 ...

[10:00:00.0000] <ap>
annevk: do you have any outrageous examples that I would want to fix?

[10:00:01.0000] <annevk>
sorry :/

[10:00:02.0000] <annevk>
I only have http://annevankesteren.nl/2010/8-bit-labels so far

[10:00:03.0000] <ap>
annevk: by the way, WebKit nightlies are quite different from shipping Safari in how they match alias names

[10:00:04.0000] <ap>
annevk: we used to ignore all punctuation, but we no longer do

[10:01:00.0000] <annevk>
well, and the original data on Bitbucket; I need to find some way to query it more intelligently

[10:01:01.0000] <annevk>
ap, ah great, Opera changed away from that too

[10:01:02.0000] <ap>
annevk: chromium probably shipped that already, which is why they may seem more different in your data than they actually are

[10:02:00.0000] <annevk>
it would mean that would match less labels and produce less encodings

[10:02:01.0000] <annevk>
so I'm not sure that theory holds

[10:02:02.0000] <ap>
well, fewer aliases for the same encodings

[10:03:00.0000] <annevk>
I feed 300 labels; I count unique encodings and aliases for them

[10:03:01.0000] <annevk>
oh yeah

[10:03:02.0000] <annevk>
they would end up among "obviouslyfake" in my data

[10:03:03.0000] <annevk>
/me looks

[10:04:00.0000] <annevk>
Chrome has indeed quite a bit more than Safari there

[10:06:00.0000] <ap>
annevk: another change you can find in WebKit nightlies is that we now drop names with version info that come from ICU, such as ISO_2022,locale=ja,version=0

[10:07:00.0000] <annevk>
that was a label WebKit recognized?

[10:07:01.0000] <annevk>
wow

[10:08:00.0000] <annevk>
I sort of hope we can just have a fixed list of labels that you need to have for the web and no more

[10:08:01.0000] <annevk>
maybe grandfathering the Mac encodings in...

[10:09:00.0000] <annevk>
then implementations can also be a lot simpler than all of ICU

[10:10:00.0000] <ap>
annevk: so far, the most practically data that came from encoding support research was about upgrading encodings

[10:10:01.0000] <ap>
annevk: such as "EUC-KR really means windows-949"

[10:11:00.0000] <annevk>
yeah, that was great

[10:11:01.0000] <annevk>
oh actually, I did find a few funny things in Safari

[10:12:00.0000] <Ms2ger>
Don't we all sometimes?

[10:12:01.0000] <annevk>
ap, http://annevankesteren.nl/2010/8-bit-labels#cp869 Safari has this for quite a few encodings, swapping 1A, 1C, and 7F around

[10:12:02.0000] <annevk>
http://annevankesteren.nl/2010/8-bit-labels#ibm775 (an encoding only Safari and Internet Explorer have)

[10:12:03.0000] <annevk>
(same weirdness)

[10:13:00.0000] <annevk>
goes for most IBM encodings I think

[10:13:01.0000] <annevk>
(scroll upwards)

[10:14:00.0000] <ap>
annevk: swapping is interesting - it comes from ICU http://demo.icu-project.org/icu-bin/convexp?conv=ibm-869_P100-1995&s=IANA&s=MIME&s=ALL

[10:15:00.0000] <annevk>
ah yeah, whenever Chrome does not have the encoding disabled it has the same issue

[10:15:01.0000] <ap>
annevk: I'll file a bug for our ICU folks to look into, but I suspect that this is a bug in Windows

[10:16:00.0000] <ap>
annevk: as IBM probably checked ICU to match their original definition of those encodings

[10:16:01.0000] <annevk>
if the tables just say "S" it means Safari on both Mac and Win

[10:16:02.0000] <annevk>
and Firefox and Internet Explorer contradict Safari

[10:16:03.0000] <annevk>
e.g. in http://annevankesteren.nl/2010/8-bit-labels#cp862

[10:17:00.0000] <annevk>
or http://annevankesteren.nl/2010/8-bit-labels#ibm857

[10:17:01.0000] <annevk>
I wonder if Chrome and Opera need to support these IBM encodings

[10:17:02.0000] <ap>
oh, an example that's supported by more than just Ie is helpful

[10:18:00.0000] <annevk>
I would sort of expect Firefox to do what IBM wants

[10:18:01.0000] <ap>
annevk: looking at 862 specifically, Safari probably supports many more aliases for it, according to that ICU page

[10:18:02.0000] <annevk>
but then ICU not doing what IBM wants would also be weird

[10:19:00.0000] <annevk>
ap, I guess I can try to increase the amount of aliases to 400

[10:19:01.0000] <annevk>
I haven't even gone through the IANA registry either yet

[10:56:00.0000] <hsivonen>
annevk: are you sure all browsers regressed xml loading instead of the test breaking?

[10:57:00.0000] <hsivonen>
TabAtkins: did you test JägerMonkey or something older for 32-bit arithmetic?

[10:57:01.0000] <hsivonen>
TabAtkins: I'd expect trunk to do 32-bit math faster than beta6 or earlier

[10:57:02.0000] <TabAtkins>
hsivonen: I have no idea.  I'm using b7.

[10:58:00.0000] <hsivonen>
TabAtkins: odd

[10:58:01.0000] <TabAtkins>
The function in question is this:

[10:58:02.0000] <TabAtkins>
 var lsw = (x & 0xFFFF) + (y & 0xFFFF);

[10:58:03.0000] <TabAtkins>
 var msw = (x >> 16) + (y >> 16) + (lsw >> 16);

[10:58:04.0000] <TabAtkins>
 return (msw << 16) | (lsw & 0xFFFF);

[10:58:05.0000] <TabAtkins>
And I tried replacing it with just:

[10:59:00.0000] <TabAtkins>
return ( (x & 0xFFFFFFFF) + (y & 0xFFFFFFFF) ) & 0xFFFFFFFF;

[10:59:01.0000] <TabAtkins>
Which, come to think of it, is probably incorrect anyway.

[10:59:02.0000] <TabAtkins>
It didn't change the md5 for the strings I was testing, at least.

[11:00:00.0000] <annevk>
hsivonen, good point, no

[11:00:01.0000] <hsivonen>
TabAtkins: the latter could overflow out of 32 bits for the intermediate value, right?

[11:00:02.0000] <annevk>
/me makes a local test

[11:00:03.0000] <TabAtkins>
hsivonen: Yes.

[11:00:04.0000] <bga_>
wow

[11:01:00.0000] <bga_>
((x|0) + (y|0))|0

[11:01:01.0000] <hsivonen>
TabAtkins: I think the original correctly lets overflow wrap around

[11:02:00.0000] <TabAtkins>
hsivonen: Yes, it does.

[11:02:01.0000] <TabAtkins>
hsivonen: My version is incorrect as written.

[11:02:02.0000] <TabAtkins>
bga_: How does |0 work?  Do bitwise operators automatically truncate to 32 bits or something?

[11:02:03.0000] <bga_>
yes

[11:03:00.0000] <bga_>
convert to `long`

[11:03:01.0000] <bga_>
~~x too

[11:03:02.0000] <TabAtkins>
Ah, kk.  Didn't realize that, so I using a more generically correct version.

[11:04:00.0000] <TabAtkins>
Let me try out a correct variant.

[11:06:00.0000] <TabAtkins>
All right, it's back to a wash with "var tmp = ~~x + ~~y; return (tmp>>>32) || tmp;"

[11:06:01.0000] <bga_>
(tmp>>>32)?

[11:07:00.0000] <bga_>
it always 0

[11:08:00.0000] <TabAtkins>
No, x+y can be greater than 32 bits.

[11:08:01.0000] <TabAtkins>
Frex, if both of them are 2^32 - 1.

[11:08:02.0000] <annevk>
hsivonen, hmm yeah, all browsers do it incrementally

[11:09:00.0000] <annevk>
better fix my post

[11:10:00.0000] <bga_>
TabAtkins read es spec

[11:10:01.0000] <bga_>
x >>> 32 <=> x >>> 0

[11:11:00.0000] <bga_>
x >>> y <=> long(x) >>> long(y)&31

[11:11:01.0000] <TabAtkins>
Oh, hrm, you're right.  I guess I need to explicitly use numeric comparisons then.

[11:14:00.0000] <hsivonen>
annevk: you might be interested in the xml-dev threads on MicroXML

[12:15:00.0000] <annevk>
hsivonen, anything in particular?

[12:15:01.0000] <annevk>
hsivonen, I did go through some of the email

[12:37:00.0000] <hober>
is xml-dev worth subscribing to?

[12:37:01.0000] <Philip`>
TabAtkins: "return (tmp>>>32) || tmp" - should that be |, not ||?

[12:51:00.0000] <TabAtkins>
Philip`: No, I was using logical or on purpose to do fallback.  But that line was completely wrong in the first place, because my brain was being stupid and forgetting what "overflow" means'.

[15:26:00.0000] <oojacoboo>
do you really not have to close out the <th> and <td> elements in a table?

[15:27:00.0000] <TabAtkins>
Yup.

[15:27:01.0000] <TabAtkins>
You also don't have to close <li>s.

[15:27:02.0000] <oojacoboo>
assuming that html4 or 5 and not xhtml

[15:27:03.0000] <TabAtkins>
There are some crazy rules about when you dont' ahve to close <p>, so I ignore them and just always explicitly close it.

[15:27:04.0000] <TabAtkins>
Yes, xhtml needs to be well-formed xml.  No omitted tags.

[15:28:00.0000] <oojacoboo>
seems kinda dangerous all around to me, but w/e

[15:28:01.0000] <TabAtkins>
You don't need to close the <thead>/<tbody>/<tfoot> elements either.

[15:28:02.0000] <oojacoboo>
interesting

[15:28:03.0000] <TabAtkins>
Nah, it's cool.  Check out, for example, this page's source: http://www.xanthir.com/diagrams/flex-align-diagrams.html

[15:29:00.0000] <oojacoboo>
I guess since they are never nested, makes sense

[15:29:01.0000] <oojacoboo>
actually looks pretty clean...

[15:29:02.0000] <TabAtkins>
Yeah, they're never nested without a container protecting the nested one from the outer one.

[15:30:00.0000] <oojacoboo>
yea

[15:31:00.0000] <oojacoboo>
are there any plans to introduce some sort of child header element for a <tbody> ?

[15:31:01.0000] <TabAtkins>
Huh?

[15:32:00.0000] <oojacoboo>
imagine a table with multiple sections, <tbody>s, where you wanted to include a line describing what the contents of each section are

[15:32:01.0000] <TabAtkins>
Use a <tr> with a colspanning <th>.

[15:33:00.0000] <oojacoboo>
yea

[15:34:00.0000] <oojacoboo>
not quite the same, but w/e

[15:34:01.0000] <oojacoboo>
I was thinking something more like <caption>


2010-12-22
[20:36:00.0000] <zcorpan>
<http://www.w3.org/mid/9B2DE9094C827E44988F5ADAA6A2C5DA01B93A59⊙Hppc>

[21:37:00.0000] <zcorpan>
i wonder what http://lists.w3.org/Archives/Public/public-html-xml/2010Dec/0029.html would be if hsivonen wasn't on the call

[23:19:00.0000] <boblet>
amusing that in the MS “HTML5 site ready” article links to brucel’s snarky piece on IE’s testing center as evidence of “strong developer support”

[23:19:01.0000] <boblet>
British wit is indeed tricksy for the beginner

[23:31:00.0000] <zcorpan>
so according to timj he was the only one to think that exposing endianness in ArrayBuffer was a problem, everyone else thought it would work out fine. and now it's too late to change it

[23:32:00.0000] <zcorpan>
i guess we'll see how it goes

[00:11:00.0000] <hsivonen>
TabAtkins: if >> truncates to 32 bits, does it truncate first? that is, if you've overflown 32 bits, can you actually shift the overflown part with >> ?

[00:17:00.0000] <Ms2ger>
"I also completely disagree that one has to be constrained by what existing browsers do."

[00:50:00.0000] <erlehmann>
zcorpan, „how it goes“? you mean: one endianness becomes de facto standard, right?

[00:52:00.0000] <zcorpan>
erlehmann: seems like one possible outcome

[00:54:00.0000] <Dashiva>
TabAtkins: Yes, it truncates first

[00:54:01.0000] <zcorpan>
erlehmann: another is that people sniff for stuff unrelated to the endianness to decide which endianness to use, and we get stuck with that for compat

[00:56:00.0000] <Dashiva>
You'd think if you were exposing endian-specific behavior you'd also expose a property indicating the endianness

[00:56:01.0000] <erlehmann>
zcorpan, so opera and firefox may use one endianness, that, of course, microsoft, apple and nokia will deride as “proprietary” while implement their own, for which royalties will have to be paid to ENDIAN-LA.

[00:57:00.0000] <zcorpan>
lol

[00:57:01.0000] <erlehmann>
ZING! :D

[01:15:00.0000] <hsivonen>
Will Apple ship WebGL for PowerPC? Or will Opera be the only one of the top 5 vendors left shipping WebGL-relevant code for big-endian hardware?

[01:23:00.0000] <smaug____>
are all the major mobile platforms little-endian?

[02:01:00.0000] <hsivonen>
smaug____: Arm is little-endian and Intel Atom is too.

[03:31:00.0000] <hsivonen>
"Since it’s unlikely that Opera or Firefox would change their script loading/blocking behavior, this actually works just fine." http://www.nczonline.net/blog/2009/12/29/feature-detection-is-not-browser-detection/

[03:33:00.0000] <bga_>
Netscape alive!

[03:36:00.0000] <hsivonen>
bga_: ?

[03:37:00.0000] <bga_>
} else if (document.layers){  //Netscape < 6

[03:37:01.0000] <bga_>
element = document.layers[id];

[03:40:00.0000] <hsivonen>
ah

[03:42:00.0000] <hsivonen>
I saw code for Netscape 4 in a lib released this month

[03:44:00.0000] <bga_>
cool stuff http://www.useragentman.com/shared/js/helpers.js :)

[03:54:00.0000] <hsivonen>
this I hadn't seen before: https://twitter.com/#!/getify/status/26109887817

[03:58:00.0000] <bga_>
__parent__ too

[03:58:01.0000] <bga_>
__magics__ must die imho

[04:01:00.0000] <hsivonen>
http://labs.opera.com/news/2010/12/22/ reveals who is implementing the WAC stuff

[05:34:00.0000] <MikeSmith>
/me didn't know getify had a twitter account

[05:46:00.0000] <MikeSmith>
hsivonen: got some patches awaiting your review

[05:46:01.0000] <MikeSmith>
https://bitbucket.org/validator/syntax-patches/qseries?apply=t&qs_apply=spaces-around-url

[05:46:02.0000] <MikeSmith>
above is for allowing spaces around attribute values that expect IRIs

[05:46:03.0000] <MikeSmith>
that currently has the non-conforming side effect of allowing, e.g.,  content="5; url=   http://example.com   " in meta/@http-equiv=refresh

[05:47:00.0000] <MikeSmith>
so I think I'll also need either to add some checking for that in the assertions-checking code

[05:47:01.0000] <MikeSmith>
or I'll need to convince Hixie to make it conformant

[05:55:00.0000] <MikeSmith>
hsivonen: the other patch is this:

[05:55:01.0000] <MikeSmith>
https://bitbucket.org/validator/validator-patches/qseries?apply=t&qs_apply=mathml2-update

[05:56:00.0000] <MikeSmith>
which is for updating the MathML schema to the one that David Carlisle has made available at http://www.w3.org/Math/RelaxNG/mathml3-restricted/

[05:57:00.0000] <MikeSmith>
which is essentially a MathML2-compatiable subset of MathML3

[05:58:00.0000] <MikeSmith>
"with all element and attribute names introduced at MathML3 removed" but with more useful constraints on microsyntax/datatypes of MathML2 attribute values

[06:35:00.0000] <karlcow>
http://www.debeterevormgever.nl/html5-ie-without-javascript/

[07:20:00.0000] <Rik`>
karlcow: six years ago http://dean.edwards.name/my/abbr-cadabra.html

[07:21:00.0000] <karlcow>
ah cool Rik`

[07:21:01.0000] <Rik`>
every time someone finds a new cool technique on the web, there is a good chance Dean Edwards did it first :)

[07:22:00.0000] <karlcow>
is that part of the 3 laws of Internetics?

[07:22:01.0000] <karlcow>
:p

[07:25:00.0000] <bga_>
hehe

[07:25:01.0000] <bga_>
Dean is our god

[07:52:00.0000] <yod>
karlcow - the other two being that there is always someone wrong on the internet, and that any of us may or may not be a dog?

[07:57:00.0000] <pesla>
Does anyone know why Firefox returns a floating point number when getting the computed style for fe. the height of an element (=> 101.2px)?

[08:43:00.0000] <TabAtkins>
Because that's the computed style?  (Actually, it's the "used value", in CSS parlance.)

[08:44:00.0000] <TabAtkins>
pesla: ^^^

[08:48:00.0000] <pesla>
TabAtkins: Why does Gecko, unlike WebKit and Trident, not round it to the pixel? I didn't know about the existance of sub-pixels actually ;)

[08:48:01.0000] <TabAtkins>
Gecko does round to the pixel for the "actual value", which is what is used to actually render.

[08:50:00.0000] <bga_>
pesla parseInt('101.2px') :P

[08:50:01.0000] <pesla>
bga_:  Yea, i know. I'm just interested in the concept of subpixels.

[08:50:02.0000] <pesla>
I'm not sure why they'r usefull

[08:50:03.0000] <bga_>
ok

[08:56:00.0000] <karlcow>
yod, what about cows? :p

[08:57:00.0000] <yod>
whatever rocks your arch

[08:58:00.0000] <karlcow>
now you are talking…

[09:08:00.0000] <amphibi>
My group at http://www.myefact.com/ embraces open web technologies.

[09:09:00.0000] <TabAtkins>
Okay?

[09:09:01.0000] <paul_irish>
TabAtkins: correct response is: "cool story, bro."

[09:09:02.0000] <TabAtkins>
Damn, you're right.  I fail at memes.

[09:10:00.0000] <paul_irish>
;)

[09:10:01.0000] <TabAtkins>
Yo, Paul, what song should I download at the bing music store?

[09:12:00.0000] <paul_irish>
TabAtkins: MOVITS!  - Fel del av gården

[09:12:01.0000] <TabAtkins>
Will do.

[09:14:00.0000] <paul_irish>
TabAtkins: only because i doubt http://youtu.be/SPbijgSYe_4 is on their store.

[09:14:01.0000] <TabAtkins>
<3 Pogo

[09:16:00.0000] <TabAtkins>
Ah, this is just a Pogo tribute.

[09:18:00.0000] <bga_>
animated flash captchas >_<

[09:18:01.0000] <TabAtkins>
lolwut

[09:22:00.0000] <bga_>
TabAtkins http://diplodocs.ru/flash2/lecteurC_EMFSIIFRTH12215QNAUORITGDE244144HXLDDIWLYOY.swf

[09:22:01.0000] <TabAtkins>
Wow.

[09:36:00.0000] <TabAtkins>
Huh.  I've reached the point where 80% of my spam is in Chinese.  That's just bizarre.

[09:37:00.0000] <TabAtkins>
Though I suppose machine-generated broken chinese is better than machine-generated broken english, because I can't distinguish it from normal chinese.

[09:58:00.0000] <karlcow>
TabAtkins: if you are reading chinese fluently it is easier to hit delete key

[09:58:01.0000] <karlcow>
oops

[09:58:02.0000] <karlcow>
you are not

[09:59:00.0000] <TabAtkins>
I can't read *any* chinese, so it's all the same to me.  ^_^

[10:29:00.0000] <karlcow>
david_carlisle: text/mathml is to be banished (or it is accepted) (putting aside application/mathml+xml)

[10:30:00.0000] <david_carlisle>
banished?

[10:31:00.0000] <amphibi>
Don't banish things. :(

[10:31:01.0000] <david_carlisle>
do you mean the mime type or mathml itself? (text/mathml was never used/registered as far as I know?)

[10:35:00.0000] <karlcow>
text/mathml mimetype. Some people are using online it seems

[10:38:00.0000] <david_carlisle>
shrug, perhaps.  The interesting case for mathml on the web is anyway mathml in a document so without a mathml specific mime type. I don't think i )or the math wg) would have a view. Of course individual implementations, if they are currently checking for that and doing something, will need to take a decision about whether to carry on supporting that going forwards.

[10:49:00.0000] <jwalden>
dear lazyirc: is anyone still pushing shared workers?  and if anyone is, are any of those entities thinking about implementing content security policies?

[10:51:00.0000] <TabAtkins>
Shared workers are indeed being implemented.  I don't know if anyone's caring about CSP.

[10:52:00.0000] <jwalden>
Gecko has CSP these days

[10:52:01.0000] <jwalden>
pretty sure we don't have shared workers

[10:52:02.0000] <jwalden>
I am curious whether anyone has thought through the interaction of CSP's forbid-calls-to-eval-like-stuff with shared workers and the same prohibition in them

[10:53:00.0000] <jwalden>
this occurred to me just now on reading the proposed solution to https://bugzilla.mozilla.org/show_bug.cgi?id=609748

[10:53:01.0000] <jwalden>
it is also possible I have been entirely misled as to what shared workers are by the name, but I hadn't gotten that impression from ancient threads on it I dimly remember reading

[10:55:00.0000] <TabAtkins>
Shared Workers are just workers that can respond to messages from multiple pages, not just the one channel like normal workers.

[10:55:01.0000] <jwalden>
yes

[10:56:00.0000] <jwalden>
so, does that mean a shared worker should be able to eval/Function, or no?

[10:56:01.0000] <jwalden>
by default the answer's obviously yes

[10:56:02.0000] <TabAtkins>
I have no idea.  ^_^  CSP stuff isnt' on my radar.

[10:56:03.0000] <jwalden>
guess I'll poke people on the Mozilla side, or something

[10:59:00.0000] <Hixie>
that's not quite an accurate description of the difference

[10:59:01.0000] <Hixie>
a shared worker is a worker to which one can open a channel by name after it is created

[11:00:00.0000] <Hixie>
both shared workers and dedicated workers can respond to messages from multiple pages and can have multiple channels, etc

[11:01:00.0000] <jwalden>
this seems...potentially problematic if the worker can eval, but the page accessing the worker shouldn't be able to

[11:01:01.0000] <Hixie>
(shared workers also have a different lifetime definition)

[11:01:02.0000] <Hixie>
jwalden: well it's all same-origin currently

[11:01:03.0000] <jwalden>
sure

[11:01:04.0000] <jwalden>
CSP is same-origin paranoia

[11:01:05.0000] <Hixie>
but sure, CSP should apply to workers too

[11:01:06.0000] <Hixie>
shared or not shared

[11:02:00.0000] <Hixie>
doesn't really matter

[11:02:01.0000] <jwalden>
CSP is a per-page thing, though, not a per-origin thing

[11:02:02.0000] <jwalden>
comes in HTTP headers

[11:03:00.0000] <jwalden>
I suppose one could argue this is undesirable complexity, for this case and conceivably others

[11:03:01.0000] <AryehGregor>
TabAtkins, comments on latest blog post: 1) Hash functions do not use "advanced math".  In most cases, they just mess around with the values a lot, and then they get publicized in crypto circles for a few years, and people figure they're safe if no one finds a break.  Actually, few cryptographic primitives are provably reducible to hard mathematical problems.  2) 30-character salts are just silly.  Twenty random ASCII characters is already wa

[11:03:02.0000] <AryehGregor>
y overkill.  3) You don't need an industrial supercomputer to crack short passwords.  I just wrote a program (http://aryeh.name/gitweb.cgi?p=hpc-final;a=tree;f=single) that can do 220 million SHA1 hashes a second on a $200 GPU.  That gives you all 6-character ASCII passwords in about an hour if you don't make the hash slower.  4) For slow hashes, PBKDF works fine (see RFC 2898).  Basically just iterate a standard hash function a large number

[11:03:03.0000] <AryehGregor>
of times, it's about two lines of code.

[11:03:04.0000] <AryehGregor>
(It would be nice if XChat used a multiline input for long messages so I had some idea how long it was before I pasted.)

[11:04:00.0000] <jwalden>
heh

[11:04:01.0000] <TabAtkins>
AryehGregor: Huh.  I was sure that hashing was closely related to crypto.  Oh well.

[11:04:02.0000] <AryehGregor>
(It would also be nice if I could find a better client than XChat.)

[11:04:03.0000] <AryehGregor>
TabAtkins, hashing is part of crypto, sure.

[11:05:00.0000] <AryehGregor>
It doesn't involve advanced math, though.  The math is pretty basic.

[11:06:00.0000] <AryehGregor>
(at least for the hash functions I'm familiar with, which currently consists of SHA1)

[11:06:01.0000] <TabAtkins>
I'll make a correction.  My point is just that people shouldn't screw around with trying to create their own hash.

[11:06:02.0000] <AryehGregor>
No, obviously not.

[11:07:00.0000] <AryehGregor>
But it's not math, it's cryptanalysis, and in particular being studied by lots of crypto people for a few years.

[11:07:01.0000] <TabAtkins>
(2) 20 vs 30 char salt doesn't really matter.  I just chose 30 arbitrarily because it produced a pleasingly large number.

[11:07:02.0000] <AryehGregor>
Which is why you have things like the SHA3 competition.  The idea is that cryptographers have a lot of incentive to break the finalists, because they've already seen a lot of scrutiny, and if you can find a break that no one else did, that's a pretty good publication.

[11:08:00.0000] <TabAtkins>
And because I often use 30char strings to inject entropy when I'm hashing something for verification purposes.

[11:10:00.0000] <AryehGregor>
Actually, regarding (4), PBKDF is not optimal for slowing down GPUs, which is what that HPC final link I gave is about.  But I didn't come up with a superior system that's easy to deploy in a typical web app.

[11:11:00.0000] <TabAtkins>
(3) I didn't say you needed one.  I said that you could use one to get sub-second cracking times, which is an impressively small number.

[11:11:01.0000] <AryehGregor>
I can get sub-second cracking times for four-letter passwords.

[11:11:02.0000] <AryehGregor>
With arbitrary ASCII.

[11:11:03.0000] <TabAtkins>
I don't doubt it.

[11:13:00.0000] <AryehGregor>
It's a lot more impressive to say it can be cracked on a $200 GPU, even if the timespan is a bit longer.

[11:13:01.0000] <AryehGregor>
An 8-character password selected completely at random can be done in less than a week.

[11:14:00.0000] <AryehGregor>
(if it's ASCII)

[11:14:01.0000] <TabAtkins>
I'll amend it.

[11:18:00.0000] <jwalden>
/me sees "pretty good publication" and immediately mentally abbreviates it, to hilarity

[11:19:00.0000] <TabAtkins>
AryehGregor: So no recommendations on slow hashes?

[11:19:01.0000] <AryehGregor>
TabAtkins, PBKDF, as I said.

[11:19:02.0000] <AryehGregor>
Go look at the RFC.

[11:19:03.0000] <AryehGregor>
Just take any hash function and run it lots of times.

[11:19:04.0000] <TabAtkins>
Oh, I thought you just said it wasn't optimal for slowing down GPUs.

[11:19:05.0000] <AryehGregor>
$hash = $pass; for ($i = 0; $i < 10000; $i++) { $hash = sha1($hash); }

[11:20:00.0000] <AryehGregor>
Well, it's not, but that's hard to avoid.  The GPU will still be probably 100 times faster than the CPU of comparable cost, certainly tens of times faster.

[11:20:01.0000] <AryehGregor>
The problem is that GPUs just have vastly more compute units than CPUs.  The way to slow it down a bit would be to throw in uncacheable memory access, but that's hard to conveniently arrange.

[11:20:02.0000] <AryehGregor>
PBKDF will still make the problem orders of magnitude better.

[11:21:00.0000] <AryehGregor>
Like, say, four orders of magnitude better, which buys you two arbitrary ASCII characters.

[11:21:01.0000] <TabAtkins>
Gotcha.  Reading the RFC now, then will push an update.

[11:29:00.0000] <TabAtkins>
AryehGregor: Made the edits.

[11:30:00.0000] <TabAtkins>
Also, at some point over the xmas weekend I should finally add comment functionality, so you can just leave the comments on the blog itself.  ^_^

[11:30:01.0000] <AryehGregor>
You still say "hash functions use advanced math closely related to cryptography".

[11:31:00.0000] <TabAtkins>
s/advanced math/techniques/

[11:32:00.0000] <AryehGregor>
Well, that paragraph is no longer technically incorrect, I don't think.

[11:33:00.0000] <TabAtkins>
Heh.

[11:33:01.0000] <AryehGregor>
Still a bit confused, but good enough.

[11:34:00.0000] <TabAtkins>
I'm confused about what's confused.

[11:37:00.0000] <AryehGregor>
Well, you know how sometimes you read something about a subject you're an expert in and go "Okay, the author of this clearly only has a vague grasp of what they're talking about"?  It's like that.

[11:37:01.0000] <AryehGregor>
I mean, no offense.

[11:37:02.0000] <TabAtkins>
Hmm.  You shouldn't be getting that impression at all.  Perhaps it's because I'm purposely speaking in low-level terms?

[11:38:00.0000] <AryehGregor>
You can speak in low-level terms and still make it clear that you know what you're talking about.

[11:38:01.0000] <TabAtkins>
I mean, aside from the fact that I was pretty sure cryptography was strong math rather than just screwing around with stuff, I *do* know what I'm talking about here.

[11:38:02.0000] <AryehGregor>
Like, "it's impossible to make a transformation actually one-way" -- whether one-way functions exist is one of the major open problems in cryptography.

[11:38:03.0000] <AryehGregor>
"hash functions use techniques closely related to cryptography" -- no idea what that's even supposed to mean, really.

[11:38:04.0000] <TabAtkins>
If it's a deterministic transformation it's reversible in principle.

[11:39:00.0000] <AryehGregor>
Not necessarily computationally reversible.

[11:39:01.0000] <TabAtkins>
Sure, but I'm not saying that.

[11:39:02.0000] <AryehGregor>
That's what "one-way function" means.

[11:39:03.0000] <AryehGregor>
http://en.wikipedia.org/wiki/One-way_function

[11:39:04.0000] <TabAtkins>
I didn't use that term.

[11:39:05.0000] <AryehGregor>
You used the term "one-way".

[11:39:06.0000] <TabAtkins>
Yes?

[11:40:00.0000] <AryehGregor>
Together with "transformation".

[11:40:01.0000] <AryehGregor>
Well, whatever.

[11:40:02.0000] <TabAtkins>
Yes?

[11:40:03.0000] <AryehGregor>
And "transformation" means the same thing as "function".

[11:40:04.0000] <TabAtkins>
Sure, but you're still talking about a different domain.  Something being computationally infeasible is different than something being impossible.

[11:41:00.0000] <AryehGregor>
Yes, but the language you use is still confusing to someone who knows what a one-way function is, because you're using jargon to mean something from its standard meaning.  Even if that fits its colloquial meaning.

[11:41:01.0000] <AryehGregor>
So it makes it sound like you don't know what a one-way function is.

[11:42:00.0000] <TabAtkins>
I'm not talking to people who already know what a one-way function is.  I'm saying that it's technically impossible to make a transformation unreversible, and then stating that it's possible to make it *very difficult* to reverse.

[11:42:01.0000] <AryehGregor>
Likewise, saying that "hash functions use techniques closely related to cryptography" makes it sound very much like you don't know how major hash functions were actually developed.

[11:42:02.0000] <AryehGregor>
Okay, well, anyway.

[11:43:00.0000] <AryehGregor>
Doesn't matter, the explanation is good enough for its target audience.

[11:43:01.0000] <TabAtkins>
That latter sentence is still really clumsy.  Let me tweak it.

[11:45:00.0000] <TabAtkins>
Okay, tweaked.

[11:46:00.0000] <TabAtkins>
Argh, though, I'm still bothered by your other nitpick.  In the immediately preceding sentence I explicitly call hashes "one-way transformations".  The sentence in question, then, is just a clarification of the term.

[11:46:01.0000] <Hixie>
jwalden: sure. i meant that it should apply to the workers, e.g. via the http headers used for loading the script.

[11:47:00.0000] <paul_irish>
Hixie: know of anything in the spec about iframe recursion?

[11:47:01.0000] <AryehGregor>
Of course, a one-way function need not be a useful cryptographic hash function.  One-wayness is really too weak for passwords, because it only cares about random inputs, and passwords are not close to random.

[11:47:02.0000] <jwalden>
Hixie: yes; the issue here would be a non-CSP'd page creating that shared worker (with eval enabled), then a CSP'd page with eval forbidden connecting to that shared worker and getting working eval

[11:47:03.0000] <paul_irish>
http://jsfiddle.net/TFvev/1/show/ recurses forever and ever in webkit but cuts off in Op and FF at some point.

[11:47:04.0000] <Hixie>
paul_irish: there are various things, do you have a more specific question?

[11:48:00.0000] <AryehGregor>
I wonder if there are definitions that better capture what's needed in a good password hash function.

[11:48:01.0000] <TabAtkins>
Sure.  By the time people get into the subject enough to know that I'm being overly-simplistic, they should know enough to understand the full import.

[11:48:02.0000] <Hixie>
paul_irish: hm

[11:48:03.0000] <jwalden>
whereas with a normal worker it's straightforward: CSP blocks eval in page, it blocks it in workers

[11:48:04.0000] <paul_irish>
Hixie: just noticing some deliberate differences.

[11:48:05.0000] <paul_irish>
not a big deal

[11:48:06.0000] <AryehGregor>
An obvious modification is to allow the attacker to determine the probability distribution of inputs, and then require that they should be able to do only negligibly better than guessing the mode.

[11:48:07.0000] <Hixie>
paul_irish: i don't recall there being anything about a depth per se

[11:49:00.0000] <AryehGregor>
(for any arbitrary input distribution of the attacker's choice)

[11:49:01.0000] <Hixie>
paul_irish: but it's probably reasonable for the UA to have a "hardware-implementation clause" limit

[11:49:02.0000] <Hixie>
er

[11:49:03.0000] <Hixie>
hardware-limitation

[11:49:04.0000] <TabAtkins>
paul_irish: Change the example so that, after a short timeout, a script walks down the iframes and puts INCEPTION in the bottommost one.

[11:50:00.0000] <paul_irish>
lol

[11:50:01.0000] <paul_irish>
/me *applause*.

[11:51:00.0000] <AryehGregor>
/me observes that he also once reported an iframe nesting incompatibility between browsers and Hixie also brushed it off as hardware limitations

[11:52:00.0000] <TabAtkins>
32 nested iframes should be enough for anyone.

[11:52:01.0000] <TabAtkins>
Urgh, s/32/64/

[11:52:02.0000] <AryehGregor>
It's good to spec hardware limitations within reason, the way you can have a max nesting level of 53 or whatever Unicode bidi algorithm.

[15:24:00.0000] <AryehGregor>
What's up with Wordpress replacing all hyphens with en dashes, when most hyphens are actually more correctly hyphens?

[15:36:00.0000] <gsnedders>
It depends what you're writing, and upon style, etc. — in my case, most probably are en/em dashes.

[15:42:00.0000] <AryehGregor>
But it's better to leave things the way the user typed them than change them, if you have a substantial possibility of mis-changing them.  Even if it's under 50%.  Because if you leave it alone you've done nothing wrong, you just repeated what the user wrote.  But if you change it incorrectly, you make it impossible for the user to write correctly.

[15:42:01.0000] <gsnedders>
Indeed. I'm absolutely against screwing stuff.

[15:42:02.0000] <AryehGregor>
Changing hyphens to en dashes really only makes sense if you use appropriately narrow heuristics.

[15:43:00.0000] <AryehGregor>
For instance, if the hyphen is both preceded and followed by a space, or if it's in between two digits.

[15:43:01.0000] <AryehGregor>
Then it's almost certainly meant to be an en dash (I can't think of any legitimate hyphen use there).

[15:44:00.0000] <AryehGregor>
On a totally different note, searching for my name online gives almost exclusively computing-related things.

[15:44:01.0000] <AryehGregor>
This is sad, because it makes it look like I have no interests other than computers.  When in fact, I just don't do them online much.

[15:46:00.0000] <gsnedders>
The internet makes me look like a mixture of an emo and a computer geek.

[15:54:00.0000] <MrOpposite>
Good night

[15:56:00.0000] <AryehGregor>
Are you, in point of fact, a mixture of an emo and a computer geek?

[15:57:00.0000] <gsnedders>
No. I was never as emo as I overtly appeared, and nor am I solely a computer geek.

[15:58:00.0000] <gsnedders>
(And I certainly don't appear emo now)


2010-12-23
[16:02:00.0000] <TabAtkins>
Huh.  If I'm reading this correctly, then Lob's Theorem logically proves that the fact that logic works in the real world can't be proven logically.  It has to be taken as an empirical fact discovered through induction.

[16:05:00.0000] <TabAtkins>
I guess that kills my "If anything, gods must be logically consistent" argument.

[16:09:00.0000] <AryehGregor>
Yep.

[16:09:01.0000] <TabAtkins>
Hm.  I guess I already knew that, given the Boltzmann Brain argument.

[16:09:02.0000] <AryehGregor>
There are lots of theories of logic.  Things like de Morgan's law or whatever aren't magically obvious, they just happen to be useful.

[16:09:03.0000] <AryehGregor>
Same as all math.

[16:10:00.0000] <AryehGregor>
Besides, even if there were some logic that had reality beyond the empirical, maybe a god could trick you into being confused and thinking something is clearly a law of logic when it's not, or vice versa.

[16:10:01.0000] <AryehGregor>
Descartes-style.

[16:11:00.0000] <TabAtkins>
Damn you, Great Deceiver.

[16:11:01.0000] <AryehGregor>
He figures that at least you can reliably conclude that you must exist.  But even stating the fact that you exist requires some level of reasoning or observation, so maybe you're confused about that too.

[16:12:00.0000] <AryehGregor>
So nothing's for sure.

[16:12:01.0000] <AryehGregor>
Even things like 1 + 1 = 2, and that's true by definition.

[16:13:00.0000] <TabAtkins>
Right.  We still have to prove by induction that it's a useful truth in the real world.

[16:13:01.0000] <AryehGregor>
http://www.spaceandgames.com/?p=27

[16:15:00.0000] <AryehGregor>
Also: http://lesswrong.com/lw/mo/infinite_certainty/

[16:15:01.0000] <TabAtkins>
Yeah, I buy into the bayesian conspiracy.   I don't want to go to infinite hell.

[16:27:00.0000] <bga_>
can i send file to user using `'Content-Disposition: attachment;` and send html page same time?

[16:28:00.0000] <TabAtkins>
In the page, use an iframe sending the attachment.  That's the mechanism I'm familiar with, at least.

[16:28:01.0000] <bga_>
2 requests :(

[16:28:02.0000] <bga_>
but ok

[16:29:00.0000] <bga_>
thanks

[16:30:00.0000] <bga_>
i`ll experimenting with multipart http

[16:31:00.0000] <AryehGregor>
Argh, Chrome is so freaking retarded about cert errors: https://www.washingtonpost.com/

[16:31:01.0000] <TabAtkins>
Sucks for washpo, I guess.

[16:31:02.0000] <AryehGregor>
It's revoked!  Therefore it *must* be an evil attacker and you can have *no* possible reason for proceeding, so in fact we will not even give you an *option* to do so!

[16:32:00.0000] <AryehGregor>
Despite the fact that a) the overwhelming majority of revoked certificates are probably still being used legitimately, and b) it's a news site, I'm not going to give it my credit card info here.

[16:32:01.0000] <AryehGregor>
I've been meaning to file a Chrome bug saying something like "TLS certificate error messages should not lie to the user".

[16:32:02.0000] <Aleoss>
Why doesn't <video> support flashvars?

[16:32:03.0000] <Aleoss>
Or is there another method of doing so?

[16:32:04.0000] <AryehGregor>
"flashvars"?

[16:32:05.0000] <TabAtkins>
Because it's not flash.

[16:33:00.0000] <Aleoss>
TabAtkins: So you can't load a SWF into <video>?

[16:33:01.0000] <TabAtkins>
Aleoss: Not in any current browser, at least.

[16:33:02.0000] <Aleoss>
TabAtkins: Do you know if this will ever change in the HTML5 spec at all?

[16:34:00.0000] <TabAtkins>
HTML5 currently makes no recommendations about what <video> should accept at all, because browsers can't agree.

[16:34:01.0000] <TabAtkins>
Once they do, it will match the agreement, but I *highly* doubt that browsers will agree on Flash as the common video format.

[16:34:02.0000] <Rik`>
swf is not a video format

[16:34:03.0000] <Rik`>
flv is

[16:34:04.0000] <Aleoss>
TabAtkins, but HTML5 sets the spec, browsers are updated to comply with it. If a browser doesn't understand what that element/attribute does, it skips past it.

[16:35:00.0000] <AryehGregor>
Browsers set the behavior, HTML5 is updated to match it.

[16:35:01.0000] <AryehGregor>
The spec follows the browsers, not the reverse.

[16:35:02.0000] <TabAtkins>
Aleoss: It's a 2-way relationship.  The spec defined <video>, and browsers liked it so they implemented it.  It also mandated Ogg, but not all browsers liked that, so they didn't.  So, the spec was changed to no longer mandante Ogg.

[16:35:03.0000] <Aleoss>
AryehGregor: Oh? That sounds VERY backwards.

[16:35:04.0000] <AryehGregor>
Except when the browsers like whatever the spec happens to say.

[16:35:05.0000] <TabAtkins>
Specs that don't match reality are just very boring fiction.

[16:36:00.0000] <AryehGregor>
Aleoss, only if you view standards bodies as authorities that order everyone what to do.  If you view them as places for implementers to collaborate, then it's not backwards at all.

[16:36:01.0000] <TabAtkins>
Ideally, they should guide implementors to the same point.  If it becomes obvious that implementors are going elsewhere, though, and they won't change, then the spec should change to point to the same place that implementors want to go.

[16:36:02.0000] <AryehGregor>
The WHATWG is just a forum for implementers to coordinate so that when they want to add features, they all agree on the syntax.

[16:37:00.0000] <AryehGregor>
So that the same page will work in all browsers that want to support that feature.

[16:37:01.0000] <AryehGregor>
As opposed to browsers making up things by themselves that will only ever work in that browser, or that other browsers have to waste time reverse-engineering.

[16:38:00.0000] <AryehGregor>
Lots of people seem to be confused on this point, including lots of people who write standards.

[16:40:00.0000] <bga_>
fail http://www.mail-archive.com/www-talk⊙wo/msg00549.html

[16:40:01.0000] <bga_>
http://social.msdn.microsoft.com/Forums/en/iewebdevelopment/thread/9f22c93e-3b0e-4605-93b3-be254a9b95fe

[17:55:00.0000] <bga_>
http://www.google.com/support/forum/p/Chrome/thread?tid=5139b6ff0f51d781&hl=en&fid=5139b6ff0f51d781000497c13e706e22

[19:36:00.0000] <oojacoboo>
anyone know how/what the wordpress admin modal box is using?

[19:37:00.0000] <oojacoboo>
the element doesn't appear to be in the DOM, right click is disabled when visible

[19:39:00.0000] <oojacoboo>
it's the alert box I am referring to

[19:40:00.0000] <oojacoboo>
maybe it's firefox's new default alert?

[19:40:01.0000] <oojacoboo>
it behaves like an OS element

[20:08:00.0000] <oojacoboo>
looks like it is, which came with the new update today for the 4b8, nice improvement

[20:09:00.0000] <oojacoboo>
actually makes you not mind using the default UA alert option

[00:17:00.0000] <MikeSmith>
is a scheme-less IRI reference allowed to contain quote characters?

[00:18:00.0000] <MikeSmith>
e.g., literal 'page4.html' or "page4.html" ?

[04:30:00.0000] <kling>
reni: i'm dreaming.. of a whiiite.. christmas..

[04:32:00.0000] <reni>
kling: everything is dark here already :S

[05:34:00.0000] <MikeSmith>
zcorpan: if/when you have time to try a few test cases, I made a patch for http://bugzilla.validator.nu/show_bug.cgi?id=689

[05:34:01.0000] <MikeSmith>
see my comment there

[05:36:00.0000] <MikeSmith>
it reports the name and line-column number of only the bottommost unclosed element, and reports it using an error-level message

[05:37:00.0000] <MikeSmith>
the current htmlparser code doesn't itself have a means for reporting info-level messages

[05:38:00.0000] <MikeSmith>
so short of adding considerably more code for handling info-level messages, the only other alternative to reporting it as an error would be to make it a warning instead

[05:39:00.0000] <MikeSmith>
anyway, it is available now at http://www.w3.org/html/check for testing

[05:40:00.0000] <zcorpan>
MikeSmith: for <body>

[05:40:01.0000] <zcorpan>
<div><p></p>

[05:40:02.0000] <zcorpan>
</body> it highlights the <p>

[05:40:03.0000] <zcorpan>
shouldn't it highlight the <div>?

[05:40:04.0000] <MikeSmith>
lemme check

[05:42:00.0000] <MikeSmith>
hmm, yeah

[05:43:00.0000] <MikeSmith>
I'll need to fix that

[06:45:00.0000] <MikeSmith>
zcorpan: fixed

[06:45:01.0000] <MikeSmith>
I think

[07:56:00.0000] <gsnedders>
Anyone here that knows about Gecko/WebKit behaviour with GC of NodeLists and Elements contained within them, and how setting properties affects them?

[07:56:01.0000] <gsnedders>
/me tries to get to the point where he can ask a more specific question

[08:01:00.0000] <gsnedders>
(short version: Opera 11 eventually stops working with the collapsing/expanding of the menu on http://www.erlang.org/doc/ once we trigger a GC)

[09:12:00.0000] <TabAtkins>
Ooh, FF 4b8's alert box really *does* look nice.

[09:16:00.0000] <Rik`>
TabAtkins: yes, almost makes alert() confirm() and prompt() usable again

[09:41:00.0000] <AryehGregor>
Ooh, it's now tab-modal.

[09:41:01.0000] <AryehGregor>
Have they made HTTP auth tab-modal yet?

[09:42:00.0000] <AryehGregor>
(not that it would be useful even if they did, but it would at least be somewhat less horrible)

[11:55:00.0000] <karlcow>
do we have a table which tests the behavior of browsers when cookies contain spaces in the value.

[11:55:01.0000] <karlcow>
Set-Cookie: foo bar;expires=Sat, 25-Dec-10 01:23:45 GMT;path=/

[12:22:00.0000] <karlcow>
doh!

[12:23:00.0000] <karlcow>
I wonder if Webkit, Firefox do magic with

[12:23:01.0000] <karlcow>
nnCoection: Close

[12:23:02.0000] <karlcow>
HTTP header

[15:55:00.0000] <bga_>
i want datauri w/o base64 or uriencode. i do not want waste space.

[15:58:00.0000] <bga_>
:(


2010-12-24
[17:23:00.0000] <Hixie>
the example in http://www.w3.org/mid/OF4F72E8FE.125DCAF7-ON86257802.006B919E-86257802.006F01F1⊙uic confuses me

[17:24:00.0000] <Hixie>
why would one use <div role="checkbox" aria-checked="true" tabindex="0"> rather than <input type=checkbox checked> ?

[17:24:01.0000] <Hixie>
i mean, it can't be for styling, since it's in a <div> fallback section

[17:24:02.0000] <Hixie>
so why...?

[19:22:00.0000] <Yuhong>
Now that XHTML2 is dead, I wonder what will happen to www-html and www-html-editor?

[19:51:00.0000] <Yuhong>
Now that XHTML2 is dead, I wonder what will happen to www-html and www-html-editor?

[20:29:00.0000] <oojacoboo>
anyone here working with @font-face on firefox?

[20:30:00.0000] <oojacoboo>
I have a unique situation where, since the latest firefox 4b8 update, the font has changed...

[20:30:01.0000] <oojacoboo>
and chrome displays the font differently from firefox

[20:54:00.0000] <roc>
Windows?

[20:54:01.0000] <oojacoboo>
roc: mac

[20:54:02.0000] <roc>
we use DirectWrite, Chrome doesn't

[20:54:03.0000] <roc>
hmm

[20:54:04.0000] <roc>
what's different? the shaping?

[20:54:05.0000] <oojacoboo>
size, weight

[20:55:00.0000] <roc>
nothing springs to mind

[20:55:01.0000] <oojacoboo>
ugh

[20:56:00.0000] <oojacoboo>
@font-face is a disaster

[20:56:01.0000] <oojacoboo>
it's a great idea, but I have experienced nothing but issues

[20:59:00.0000] <oojacoboo>
it appears that the font-weight differs in the two

[20:59:01.0000] <oojacoboo>
and the font-size of course, but that's a UA discrepency since chrome rounds off font-size(es)

[21:00:00.0000] <oojacoboo>
not sure what triggered this in the new update though :/

[23:54:00.0000] <phrearch>
morning

[05:50:00.0000] <annevk>
so reportedly http://tools.ietf.org/html/draft-hoehrmann-javascript-scheme-03#section-3.1 does not match reality

[05:51:00.0000] <annevk>
meh

[05:52:00.0000] <annevk>
Hixie, we should get XBL, and especially XBL for forms, sorted out and implemented so we can get rid of most ARIA-hacks

[08:45:00.0000] <magol>
is there a nice html5 example... for normal web-pages. I want to see the new features for basic content writing, writing tables for tabulated data and things like that, but it's hard to find stuff that's relevant ;0

[10:54:00.0000] <gsnedders>
/me is thinking of writing a browser extension to send back URLs of JS files which contain stuff that is considered bad/evil/etc.

[10:54:01.0000] <gsnedders>
(in terms of ES5 syntax)


2010-12-25
[18:08:00.0000] <Hixie>
at one point i wrote down the following note to myself:

[18:08:01.0000] <Hixie>
"need to make the WebSRT rendering algorithm shift boxes back into the video box before step 10 e.g. when line-snapping and positioned centered at x=0, the text should be still centered but the box flush left"

[18:08:02.0000] <Hixie>
i have no idea what it is about anymore

[18:09:00.0000] <Hixie>
to start with, there are three different "step 10"s in that algorithm

[18:11:00.0000] <Hixie>
oh, maybe it's saying that because A:middle T:0 would end up with all the characters half-off the video, the UA won't be able to find a place to position such a title

[18:12:00.0000] <Hixie>
and the "done repositioning" step, amongst others, will then just nuke the entire cue

[18:12:01.0000] <Hixie>
but that doesn't seem a huge problem

[18:12:02.0000] <Hixie>
so i guess i'll ignore it


2010-12-26
[19:26:00.0000] <boblet>
anyone around on css-wg for multi-column layout? the break-* section is really confusing…

[19:42:00.0000] <variable>
boblet, don't ask to ask - just ask

[19:44:00.0000] <boblet>
variable: yes master Yoda :)

[19:44:01.0000] <boblet>
the break-* text mixes info for page and column breaks, but there seems to be redundancy. eg why “avoid: Avoid a page/column break before (after, inside) the generated box” and “avoid-column: Avoid a column break before (after, inside) the generated box.”

[19:45:00.0000] <boblet>
for columns are these identical?

[19:45:01.0000] <variable>
boblet, I think so

[19:46:00.0000] <boblet>
adding avoid-page to the mix, I wonder why all three are specced…

[08:00:00.0000] <erlehmann>
since it starts tomorrow, i'd like to ask again, is any one of you in berlin for the congress?

[14:04:00.0000] <AryehGregor>
Hahaha, awesome.  OS X really is Unix: http://bigmaconcampus.wordpress.com/2009/07/05/reset-mac-password-the-easy-way/

[14:17:00.0000] <bga_>
http://www.newscientist.com/blogs/nstv/2010/12/best-videos-of-2010-progress-bar-illusion.html


2010-12-27
[01:12:00.0000] <zcorpan>
Hixie: why doesn't /complete/ have the alternative style sheets?

[04:41:00.0000] <zcorpan>
MikeSmith: maybe you should generate a list of tests? seems pretty straight-forward to have some arrays of interesting sequence of tags

[04:42:00.0000] <MikeSmith>
yeah

[04:42:01.0000] <zcorpan>
MikeSmith: maybe harder to generate the expected output, but you can look them over manually

[04:42:02.0000] <MikeSmith>
true

[04:43:00.0000] <zcorpan>
(since the expected output is what you have implemented, so wouldn't help you with finding bugs :-)

[04:43:01.0000] <MikeSmith>
heh

[04:44:00.0000] <MikeSmith>
well, before I put much more time into it, I want to find it if hsivonen thinks the approach is OK or not

[04:44:01.0000] <MikeSmith>
the code I added is not elegant

[04:45:00.0000] <MikeSmith>
maybe Henri can think of a better way to go about it

[09:09:00.0000] <karlcow>
Do we have an editor version of DOMRange on dvcs.w3.org?

[09:09:01.0000] <karlcow>
http://html5.org/specs/dom-range.html

[09:23:00.0000] <espadrine>
brendaneich: is there an ecmascript-dedicated irc channel?

[09:25:00.0000] <karlcow>
espadrine: did you check /list

[09:26:00.0000] <karlcow>
it seems there is ##javascript freenode

[09:26:01.0000] <espadrine>
Nothing begins with #ecm at least

[09:27:00.0000] <bga_>
channel of jquery's schoolboys

[09:28:00.0000] <karlcow>
http://irc.netsplit.de/channels/?net=freenode&chat=ecmascript

[09:31:00.0000] <bga_>
espadrine ask your question here

[09:36:00.0000] <espadrine>
well, ... I was wondering how expansive was the tacit obligation of javascript engines to list their objects by time creation in a "for in" loop.

[09:37:00.0000] <espadrine>
s/objects/object properties/

[11:39:00.0000] <Hixie>
zcorpan: because the annotations only cover the html part

[12:03:00.0000] <karlcow>
in which spec, window.event is supposed to be defined at all.

[12:09:00.0000] <Dashiva>
Is it? It's part of the IE event model

[12:10:00.0000] <karlcow>
Dashiva: yes. and it's everywhere in many javascripts with code redundancy

[12:11:00.0000] <AryehGregor>
Doesn't recent IE support the standard event model?

[12:12:00.0000] <Dashiva>
Yes, but it's part of the code path only taken if the standard event object is missing

[12:12:01.0000] <Dashiva>
@karlcow

[12:12:02.0000] <karlcow>
http://pastebin.com/LajxVdtd

[12:12:03.0000] <Dashiva>
Stuff like function(e) { if (!e) window.event

[12:12:04.0000] <karlcow>
yep

[12:13:00.0000] <Dashiva>
So there's no need to spec it, having no such property is the correct behavior

[12:13:01.0000] <bga_>
msdn is spec

[12:14:00.0000] <bga_>
https://gist.github.com/606917 :P

[12:14:01.0000] <karlcow>
hmmm ok was not sure other browsers were supporting it

[12:15:00.0000] <bga_>
<3 it

[12:15:01.0000] <Dashiva>
Opera may have supported it at some point, not sure

[12:15:02.0000] <bga_>
yes

[12:16:00.0000] <karlcow>
http://blog.strictly-software.com/2009/10/windowevent-support-cross-browser.html

[13:16:00.0000] <karlcow>
firefox 4.0b7 & opera 11 do not support window.event but safari 5.0.3 supports it.

[13:20:00.0000] <karlcow>
ah no. Firefox supports it too.

[13:20:01.0000] <karlcow>
(if my test is not wrong)

[15:31:00.0000] <Yuhong>
So what will happen to www-html and www-html-editor now that XHTML2 is dead?


2010-12-28
[01:13:00.0000] <MikeSmith>
zcorpan: if you're around, I'm wanted to ask a question about the script ABNF at http://www.whatwg.org/specs/web-apps/current-work/multipage/scripting-1.html#restrictions-for-contents-of-script-elements

[01:14:00.0000] <MikeSmith>
or Hixie, if you're around

[01:15:00.0000] <zcorpan>
if websocket unmasking key is SHA-1(uuid, server nonce, client nonce, per-frame key)? how would you know what to use as per-frame key to get 0 as unmasking key?

[01:15:01.0000] <zcorpan>
MikeSmith: what about it?

[01:17:00.0000] <MikeSmith>
zcorpan: so the need to check for is "<!--" without a later "-->" is clear, but I'm trying to remember what I need to do for the "<script and "</script"

[01:18:00.0000] <MikeSmith>
is it not sufficient to have a check for "</script" followed by space, "/", or ">"?

[01:19:00.0000] <MikeSmith>
I don't understand why the ABNF has the stuff about "script-start  = lt       s c r i p t tag-end"

[01:19:01.0000] <MikeSmith>
instead of just for script-end

[01:27:00.0000] <zcorpan>
so e.g. "foobar(data1) <!--(escape) foobar(data2) <script>(script-start) foobar(data3) </script>(script-end) foobar(data2)  <script>(script-start) foobar(data3) --> foobar(data1)" should be valid if i'm reading the abnf correctly

[01:27:01.0000] <zcorpan>
i don't understand why [ script-start data3 ] is in the first row

[01:30:00.0000] <zcorpan>
i also don't understand why it has [ escape ] at the end

[01:31:00.0000] <MikeSmith>
yeah

[01:32:00.0000] <MikeSmith>
even if I could implement that as spec'ed, I have no clue what kind of end-user-friendly error message I could report that would actually be useful

[01:32:01.0000] <zcorpan>
maybe i'm reading the abnf wrong, because it seems bogus to me :)

[01:34:00.0000] <MikeSmith>
I'm not sure those constraints are useful for the sake of document validation anyway

[01:37:00.0000] <MikeSmith>
since you can't feed the validator a DOM

[01:37:01.0000] <MikeSmith>
but instead a serialized document

[01:39:00.0000] <zcorpan>
a validator could be operating on the dom level if it's a browser extension

[01:39:01.0000] <MikeSmith>
well

[01:39:02.0000] <MikeSmith>
it's not going to be executing script hopefully

[01:40:00.0000] <zcorpan>
the browser executes script

[01:40:01.0000] <MikeSmith>
ah

[01:43:00.0000] <MikeSmith>
that's already a problematic use case

[01:44:00.0000] <MikeSmith>
for one thing, reporting the locations of any errors

[01:46:00.0000] <zcorpan>
you could point to the node and clicking it highlights the node in dragonfly

[01:48:00.0000] <MikeSmith>
yeah, could, potentially

[01:49:00.0000] <MikeSmith>
but the backend doesn't yet have any means for enabling that

[01:56:00.0000] <zcorpan>
sure, validator.nu isn't built for that environment in mind

[01:57:00.0000] <zcorpan>
s/in mind//

[02:04:00.0000] <MikeSmith>
anyway, I implemented the core checks for "/*" without a later "/*" and "//", for the script/@src case, and "<!--" without a later "-->" for both the src-less script case and script/@src case

[02:05:00.0000] <MikeSmith>
and got it up now at http://www.w3.org/html/check

[02:07:00.0000] <zcorpan>
cool

[02:09:00.0000] <MikeSmith>
I hope hsivonen will have time soon for some reviewing

[02:10:00.0000] <zcorpan>
i think it'd be more useful if the spec had parse errors for bogus <!--<script> cases in the parser

[02:12:00.0000] <zcorpan>
MikeSmith: i can't test xhtml with http://www.w3.org/html/check ?

[02:12:01.0000] <MikeSmith>
yeah you can

[02:12:02.0000] <MikeSmith>
under Options

[02:12:03.0000] <zcorpan>
oh

[02:15:00.0000] <zcorpan>
<script>&lt;/script></script> in xhtml is invalid according to the spec

[02:15:01.0000] <zcorpan>
but i don't think that's particularly useful to check for, personally

[03:22:00.0000] <Necra>
!loltip

[03:22:01.0000] <Necra>
oops

[03:29:00.0000] <MikeSmith>
zcorpan: I can't check for that in the datatype-checking code anyway

[03:30:00.0000] <MikeSmith>
because by the time it gets to that part of the code, "<" and "&lt;" are the same

[03:38:00.0000] <zcorpan>
MikeSmith: so? the abnf bans the textContent "</script>"

[06:10:00.0000] <bga_>
i can not send mail to es-discuss⊙mo :(

[06:11:00.0000] <bga_>
i have sended mail twice, but it do not displays in discuss tree

[08:44:00.0000] <_bga>
http://blog.mozilla.com/security/2010/12/27/addons-mozilla-org-disclosure/

[09:01:00.0000] <webben>
Would it not make sense to allow microdata to take value from the .value property of form fields? http://www.w3.org/TR/microdata/#values

[09:02:00.0000] <TabAtkins>
Hm, that's interesting.  The immediate problem I can see is that, in the course of normal web crawling, you'd often see the value as "".

[09:02:01.0000] <TabAtkins>
I suppose the use-case is to let the user fill out a form and then extract the Microdata from it automatically?

[09:07:00.0000] <webben>
TabAtkins: That's a use.

[09:08:00.0000] <webben>
TabAtkins: I was actually looking at it in the context of http://tech.groups.yahoo.com/group/rest-discuss/message/17135?threaded=1&var=1&l=1

[09:09:00.0000] <webben>
TabAtkins: Which is discussing decorating HTML forms with RDFa semantics to decouple the domain vocabulary from the URL/form-encoding interface presented by the server and represented by @name

[09:09:01.0000] <TabAtkins>
/me is reading.

[09:09:02.0000] <webben>
TabAtkins: "<input id="case_title" name="Case.Title" property="dc:title"/>" does not work AFAICT

[09:10:00.0000] <webben>
TabAtkins: Since RDFa designates that dc:title is @content or the concatenation of text nodes.

[09:10:01.0000] <webben>
I thought maybe microdata could do this, but it doesn't look like it.

[09:10:02.0000] <TabAtkins>
It seems like the linked use-case is exactly the use-case I described.

[09:12:00.0000] <webben>
TabAtkins: Well if your use-case includes a programmer building a client to use the form, then yes.

[09:12:01.0000] <TabAtkins>
Which appears to be the described use-case, yes.

[09:12:02.0000] <webben>
ah ok

[09:13:00.0000] <TabAtkins>
Yeah, it seems to just be aiming for something that makes it easy to both extract the data client-side and server-side.  Presumably there's already a framework server-side to convert the received form data into a more useful format.

[09:14:00.0000] <TabAtkins>
I'm not really sure what the value is of making @name and @property be different things.

[09:14:01.0000] <webben>
Well, it allows to use arbitrary @name's.

[09:15:00.0000] <TabAtkins>
Yes.  So what's the value of that?

[09:15:01.0000] <webben>
Well, it allows you to present a consistent interface across different ways of processing name=value pairs.

[09:16:00.0000] <webben>
(For example, in PHP land, people tend to use foo[] for repeated values, but there's nothing baked into CGI about that.)

[09:16:01.0000] <TabAtkins>
How?  There are only two ways I can see here - extracted as Microdata/RDFa on the client side, and received as name/value pairs on the server side.

[09:16:02.0000] <TabAtkins>
Those don't seem consistent unless you go to efforts to make them consistent.

[09:17:00.0000] <webben>
TabAtkins: I think the idea is the serverside processing and URLs could completely change, while clientside processing would persist.

[09:18:00.0000] <webben>
So for example you could change the @names and types of form attributes, but the client would persistently look for dc:title

[09:18:01.0000] <webben>
*of form fields

[09:19:00.0000] <TabAtkins>
Is there any good reason for this, though?  Surely you could add an interpretation layer on the serverside that translates the kv pairs to whatever you needed?

[09:20:00.0000] <webben>
TabAtkins: Sure. Additional layers of processing doesn't sound more efficient than a persistent client interaction though.

[09:21:00.0000] <TabAtkins>
Sure.  I'm just wondering about the utility of that.  Extra indirection (a single piece of data referred to through two names) needs to be justified.

[09:22:00.0000] <webben>
TabAtkins: Well, at least it offers the potential to use a specific name (e.g. dc:title) rather than what's basically an opaque string (@name)

[09:22:01.0000] <webben>
s/specific/generically understood/

[09:23:00.0000] <TabAtkins>
@property is an opaque string as well.  It has exactly as much meaning as @name, until you add meaning to it.

[09:23:01.0000] <webben>
TabAtkins: You can't reference a specific vocabulary via @name can you?

[09:24:00.0000] <TabAtkins>
Sure.  I can put <input name="dc:title"> in my page.

[09:24:01.0000] <TabAtkins>
No current processor will recognize it as a curie, but I could do it.

[09:24:02.0000] <webben>
TabAtkins: That's still an opaque name in the absence of rules like microdata or RDFa for extracting it.

[09:24:03.0000] <TabAtkins>
Sure.  Rules could be added if necessary, of course.

[09:25:00.0000] <webben>
Yes. It /might/ be that at least part of this usage could be addressed by providing such rules.

[09:26:00.0000] <webben>
I'm not sure there any standardizable way to map such vocabularies to a query string though.

[09:26:01.0000] <TabAtkins>
Hm?  Of course there is.  ?dc:title=foo

[09:27:00.0000] <webben>
TabAtkins: How about nested keys?

[09:27:01.0000] <TabAtkins>
You can't express that in forms.

[09:30:00.0000] <webben>
TabAtkins: well, you can ... e.g. name="book[4]title"

[09:30:01.0000] <TabAtkins>
Ah, yeah, sure, you can do server-side processing.

[09:30:02.0000] <webben>
exactly

[09:31:00.0000] <webben>
providing an independent mapping of the HTML representation to a shared vocabulary allows you to decouple the details of that processing from the client code.

[09:32:00.0000] <TabAtkins>
Hm, okay, I see your point.  Trying to automatically express the relationship in the key sent over the wire is probably a harder problem than just letting people express it twice themselves (once explicitly in the @name, once implicitly in the microdata structure).

[09:32:01.0000] <webben>
I suspect so.

[09:40:00.0000] <webben>
TabAtkins: I think the point about value beginning in an invalid form (e.g. "" for a non-null data type) is a problem though.

[09:41:00.0000] <webben>
TabAtkins: I guess in so far as HTML5 can express data types/validity without script, extraction of data rather than extraction of input points could be premised on validity.

[09:41:01.0000] <TabAtkins>
Hm, that's true.

[09:42:00.0000] <TabAtkins>
But that would mean that, for example, non-required inputs would still be included.

[09:43:00.0000] <webben>
Excluding blank values might be possible; or including blank values might not be damaging - I'm not sure.

[10:42:00.0000] <matjas>
TabAtkins: [post] - [site] fo’ sho’!

[10:43:00.0000] <TabAtkins>
matjas: That's what I was thinking.  [site] - [post] is only for corporate branding - I find putting the post first is a lot more attractive for blogs.

[10:44:00.0000] <matjas>
TabAtkins: replied on Twitter as well, but [p] - [s] is definitely the most useful variant if you consider small tab sizes (like in Chrome)

[10:55:00.0000] <webr3>
why not just [title]

[10:57:00.0000] <TabAtkins>
That makes it harder to, frex, remember where a bookmark came from.

[10:57:01.0000] <TabAtkins>
Anyway, done.

[10:57:02.0000] <matjas>
Yay!

[10:58:00.0000] <TabAtkins>
Also exposed a bug where I wasn't setting rel=canonical properly. I've rearchitected slightly to make future bugs of this sort less likely.

[11:25:00.0000] <matjas>
TabAtkins: heh, your site doesn’t work without the www.

[11:26:00.0000] <TabAtkins>
matjas: Indeed.  That's the default for my provider - they seem to have a religious thing against it.  I haven't cared enough to set it up differently.

[11:43:00.0000] <TabAtkins>
Hixie: Any reason why the section on CSS pseudoclasses only mentions a restricted list of elements that can match :active, when in practice all browsers allow all elements to be :active while they are clicked?

[12:30:00.0000] <Hixie>
TabAtkins: iirc it was based on a request of the csswg, but honestly i don't recall

[12:30:01.0000] <Hixie>
well

[12:32:00.0000] <annevk>
TabAtkins, wow, your provider is silly

[12:32:01.0000] <annevk>
TabAtkins, get DreamHost :)

[12:33:00.0000] <Hixie>
dreamhost are pretty silly too

[12:33:01.0000] <Hixie>
though maybe in a different way

[13:00:00.0000] <TabAtkins>
Hixie: I suspect it was a request from fantasai, since she dislikes the idea of arbitrary elements being activatable.

[13:01:00.0000] <TabAtkins>
Hixie: In any case, all browsers allow all elements to be :active.

[13:01:01.0000] <TabAtkins>
I can file a bug if it would help.

[13:04:00.0000] <Hixie>
TabAtkins: yeah, file a bug or send e-mail. IE didn't used to do this like the others.

[13:05:00.0000] <TabAtkins>
Yeah, but they didn't use to do :hover on non-links either.

[13:05:01.0000] <TabAtkins>
Will file.

[13:05:02.0000] <Hixie>
so?

[13:05:03.0000] <Hixie>
we're talking about :active, not :hover :-)

[13:05:04.0000] <Hixie>
if we do change this we'll have to define what :active means

[13:05:05.0000] <TabAtkins>
Right, but they're done through similar events, and conceivably are handled similarly in the browser.

[13:05:06.0000] <Hixie>
and how to do it from the keyboard

[13:06:00.0000] <TabAtkins>
You still can't activate arbitrary elements from the keyboard, unless they're tab-able or something.

[13:07:00.0000] <Hixie>
that seems suboptimal

[13:10:00.0000] <TabAtkins>
Huh.  IE8 & 9 let any element be activated, but only the target of the click gets :active, not everything up the chain.

[13:11:00.0000] <bga_>
http://twitter.com/bga_/status/19863944524988416 :P

[13:12:00.0000] <bga_>
may be js not must know this. may be its security issue

[13:14:00.0000] <TabAtkins>
Bah, I can't be bothered to find the html bugzilla again.  I'll just email.  Same diff.

[13:26:00.0000] <TabAtkins>
Aren't there already some slightly hacky ways to force the event loop to spin in the middle of code?  (Without breaking the code up and using setTimeout, that is.)

[13:34:00.0000] <TabAtkins>
(I'm thinking something involving databases has this effect.)

[13:35:00.0000] <Hixie>
(fwiw, i use the same mechanism for e-mail and bugs now, so it really makes no difference to me)

[13:36:00.0000] <TabAtkins>
Hixie: Yeah, I know, that's why I did it.

[13:36:01.0000] <Hixie>
this xml/html tf is baffling to me

[13:36:02.0000] <Hixie>
they were created to figure out what problem they were created to figure out?

[13:36:03.0000] <Hixie>
the w3c is getting dangerously close to poe's law

[13:36:04.0000] <TabAtkins>
No, they were created to make HTML act more like XML.  Nobody wants to admit it, though.

[13:36:05.0000] <Hixie>
we already did that in the whatwg

[13:36:06.0000] <Hixie>
years ago

[13:37:00.0000] <Hixie>
html is closer to xml than it ever has been

[13:37:01.0000] <TabAtkins>
But the namespaces, Hixie!  THE NAMESPACES!

[13:37:02.0000] <Hixie>
the namespaces are issue 41

[13:37:03.0000] <Hixie>
it seems premature to do anything while we're still waiting for teh chairs to decide on that

[13:37:04.0000] <TabAtkins>
Yup.

[13:48:00.0000] <karlcow>
I became insane, with long intervals of horrible sanity.

[14:10:00.0000] <TabAtkins>
annevk: Looks like my provider added a one-click option for allowing bare domains since I last checked.  It automatically issues a 301 to the www. version, which is fine with me.

[14:13:00.0000] <annevk>
/me prefers without redundant characters

[14:13:01.0000] <TabAtkins>
I don't particularly care either way, I just want a canonical url for the google juice.

[14:13:02.0000] <annevk>
that is, long ago I bought into http://no-www.org/

[14:16:00.0000] <TabAtkins>
Doing what I just did (auto-redirect from bare to www) is compatible with no-www philosophy.

[14:16:01.0000] <TabAtkins>
I agree that not allowing the bare name isn't ideal.  I only left it like that because I was lazy.

[14:17:00.0000] <TabAtkins>
Hehe, I love extra-www.org

[14:20:00.0000] <annevk>
I guess it is, yes, just seems like waste

[14:20:01.0000] <TabAtkins>
I don't understand what's being wasted.

[14:20:02.0000] <annevk>
characters :)

[14:21:00.0000] <annevk>
either characters or an additional request

[14:21:01.0000] <TabAtkins>
I don't understand how chars are wasted - people can still type/link the bare domain name.

[14:21:02.0000] <TabAtkins>
The additional request is required in one direction or the other, so I don't see much distinction about which direction it goes in.

[14:23:00.0000] <kennyluck>
huh. http://yes-www.org/ returns 403 while http://www.yes-www.org/ works

[14:23:01.0000] <TabAtkins>
Clearly they're doing the Hardcore option.

[14:24:00.0000] <karlcow>
one or the other it doesn't seem that important. How many type really type the letters of the domain name

[14:24:01.0000] <TabAtkins>
Yeah, I mean I just type "FACEBOOK LOG ME IN" into google.

[14:24:02.0000] <karlcow>
houla my usual dislexya

[14:25:00.0000] <karlcow>
how many time

[14:25:01.0000] <karlcow>
people

[14:25:02.0000] <karlcow>
geeez

[14:25:03.0000] <annevk>
actually TabAtkins, your site is not correct per no-www

[14:26:00.0000] <annevk>
not that it matters

[14:26:01.0000] <TabAtkins>
Hm?

[14:27:00.0000] <annevk>
check the validator

[14:27:01.0000] <TabAtkins>
Yeah, it won't work yet.  I just made the DNS change, like, ten minutes ago.

[14:28:00.0000] <karlcow>
surprised nobody proposed worldwideweb.example.org

[14:51:00.0000] <karlcow>
another useless campaign http://www.antiifcampaign.com/

[14:51:01.0000] <TabAtkins>
Actually, that's not a bad campaign idea.

[14:52:00.0000] <karlcow>
it's poetic

[15:01:00.0000] <Philip`>
Seems a misleading name - it's not anti-if, it's just anti if-over-type-identifiers-as-a-cheap-substitute-for-polymorphism

[15:07:00.0000] <karlcow>
/me hesitates to launch the goto-back-campaign.com :p

[15:12:00.0000] <karlcow>
but for now I guess I will do the less-have-a-wonderful-dinner.com

[15:32:00.0000] <TabAtkins>
annevk: You're hopefully asleep by now, but could you respond to the "What to include in a propdef" thread on the csswg private list?


2010-12-29
[16:33:00.0000] <annevk>
i'm not really

[16:33:01.0000] <annevk>
uncharted 2 is addictive

[16:37:00.0000] <TabAtkins>
Ah, kk.  Response about what CSSOM needs out of a propdef, then?

[16:47:00.0000] <annevk>
nothing I think

[16:47:01.0000] <TabAtkins>
Kk, cool.

[16:47:02.0000] <annevk>
ooh, I guess a few things

[16:47:03.0000] <annevk>
like serialization and such

[16:47:04.0000] <annevk>
kind of depends on how we do things

[16:47:05.0000] <TabAtkins>
Well, that's not defined in the propdef table.

[16:47:06.0000] <TabAtkins>
Specs should define that, of course, but in a separate section.

[16:48:00.0000] <annevk>
and I guess what interfaces the property implements

[16:49:00.0000] <TabAtkins>
Oh, btw, we're going to have a team start an experimental implementation of CSSOM Values early next year.  What's the latest version of your proposal?

[16:49:01.0000] <annevk>
http://dev.w3.org/csswg/cssom/ ?

[16:49:02.0000] <annevk>
plus some emails

[16:49:03.0000] <annevk>
there's nothing new

[16:49:04.0000] <annevk>
since last time since I'm awaiting impls

[16:49:05.0000] <annevk>
so that sounds great :)

[16:50:00.0000] <TabAtkins>
Ah, great.  I didn't realize there was a difference between the dev and public version of CSSOM currently.

[16:50:01.0000] <annevk>
what is the public version?

[16:50:02.0000] <annevk>
/me is confused

[16:51:00.0000] <TabAtkins>
Oh, hrm.  I guess there isn't one.  In that case, I just didn't look down in that section before.

[08:21:00.0000] <espadrine>
Hello, does anyone know if there is a way to make firebug work on the latest minefield?

[08:22:00.0000] <espadrine>
It yells at me: "Firebug is incompatible with Minefield 4.0b9pre"

[08:28:00.0000] <smaug____>
espadrine: better to ask in moznet #firebug

[11:23:00.0000] <karlcow>
confused

[11:24:00.0000] <karlcow>
http://www.google.com/preferences

[11:24:01.0000] <karlcow>
give the choice between html, pda, xhtml

[11:24:02.0000] <karlcow>
I was curious about what they mean by xhtml

[11:24:03.0000] <karlcow>
and it seems… they still send html

[11:25:00.0000] <Philip`>
I think it only has any effect on mobile devices, or something

[11:26:00.0000] <karlcow>
which means that Google thinks Opera browsers == Mobile

[11:30:00.0000] <miketaylr>
shocking

[12:33:00.0000] <karlcow>
not sure the discussion about void elements make sense at all and help understand the TF

[13:37:00.0000] <TabAtkins>
karlcow: No, it doesn't.  It's a trivial and unimportant syntax nitpick.

[13:47:00.0000] <karlcow>
I would be more interested to see if there are issues with round trip "html5 -> xhtml5 -> html5" without losing information.

[14:02:00.0000] <TabAtkins>
karlcow: XML's whitespace rules are different, so there's probably some possibility of change in there.


2010-12-30
[16:23:00.0000] <Hixie>
"Browsers don't implement feature X correctly, so we should add feature Y."

[16:23:01.0000] <Hixie>
^ one of the most common forms of feedback I see in the standards world.

[16:23:02.0000] <Hixie>
why not just wish for feature X to be fixed?

[16:24:00.0000] <bga_>
heh

[16:24:01.0000] <Hixie>
why do people assume feature Y will be implemented correctly?

[16:24:02.0000] <AryehGregor>
Because people don't think about things that way.

[16:24:03.0000] <TabAtkins>
It's because a lot of us are used to hacking around lacks.  If browsers don't implement Feature X correctly, we do Hack Y to get around it.  It's thus natural to assume that Hack Y should be prettied up and standardized.

[16:24:04.0000] <TabAtkins>
Not correct, but natural.

[16:24:05.0000] <hober>
There are dozens of political analogies that could be made here.

[16:25:00.0000] <TabAtkins>
Well, yeah.  Solving The Wrong Problem is endemic in human reasoning.  ^_^

[16:25:01.0000] <othermaciej>
morning, folks

[16:26:00.0000] <TabAtkins>
...where are you that this is morning for you?  Japan or Australia?

[16:26:01.0000] <othermaciej>
Hixie: sometimes there could be plausible reasons that browsers wouldn't fix feature X (e.g. it's a UA-specific compat issue), but you are right, most of the time it is not well thought through

[16:26:02.0000] <AryehGregor>
Yeah, what?  You're Pacific time or thereabouts, aren't you?

[16:26:03.0000] <TabAtkins>
Yeah, Maciej lives in the Bay Area.

[16:26:04.0000] <AryehGregor>
/me inferred that from CTCP TIME

[17:08:00.0000] <TabAtkins>
AryehGregor: In the end, I'm going to agree with you re: CSS3 Lists, and just special-case Hebrew.  I can't decide how exactly to address the problem, so I'll see if I can solve it later.

[17:10:00.0000] <Hixie>
what's the hebrew issue?

[17:10:01.0000] <Hixie>
other than hebrew being insane

[17:10:02.0000] <TabAtkins>
It's not insane, it's just a normal additive language with a single exception (which can be represented efficiently in the additive-type syntax I have).

[17:10:03.0000] <TabAtkins>
The problem is the geresh, which doesn't fit with the basic algorithm I have for constructing additive lists.

[17:11:00.0000] <TabAtkins>
It'll require an exception to handle, and I'm not sure how I want to do that.

[17:13:00.0000] <TabAtkins>
So, instead of handling it, I'll just special-case the hebrew counter style and give an explicit algorithm.

[17:13:01.0000] <TabAtkins>
I'm already doing the same for ethiopian-numeric, and decimal.

[17:13:02.0000] <TabAtkins>
(Decimal doesn't cause any problem, but I need something that can't be overridden so it can act as the ultimate fallback.)

[17:23:00.0000] <Hixie>
hebrew wasn't simple when i was trying to spec it, but ok

[17:23:01.0000] <TabAtkins>
It's just like roman numerals, except with a geresh.

[17:32:00.0000] <Hixie>
roman numerals were pretty insane too, though from what i can tell i screwed up the algorithm quite a bit

[17:33:00.0000] <TabAtkins>
Nah, they're really easy to.

[17:33:01.0000] <TabAtkins>
Just a series of glyphs and weights in descending order of weight.  Repeatedly grab the first glyph with a weight less than the current counter value, until the counter value hits 0.

[17:34:00.0000] <TabAtkins>
(That's the 'additive' type algorithm, used for roman numerals, tamil, and syriac.)

[17:34:01.0000] <TabAtkins>
(Oh, and georgian and a few others.)

[17:35:00.0000] <Hixie>
well so long as you don't make the mistakes i had in the original algorithm :-)

[17:36:00.0000] <TabAtkins>
Heh, I did it from scratch, so I shouldn't.

[17:36:01.0000] <TabAtkins>
I think Tamil's algorithm is wrong, though.  I'll research it more next month.

[17:36:02.0000] <Hixie>
iirc one of the mistakes i made was using the Unicode roman numerals... i don't recall why that was bad though

[17:36:03.0000] <TabAtkins>
Yeah, those are deprecated.

[17:37:00.0000] <TabAtkins>
Unicode recommends not using them, and instead just using the ascii letters.

[17:37:01.0000] <Hixie>
what you describe doesn't seem to get you IV, V, VI... I assume the actual algorithm is more complex than you just described :-)

[17:37:02.0000] <Hixie>
but anyway

[17:37:03.0000] <TabAtkins>
  additive-glyphs: "M" 1000, "CM" 900, "D" 500, "CD" 400, "C" 100, "XC" 90, "L" 50, "XL" 40, "X" 10, "IX" 9, "V" 5, "IV" 4, "I" 1;

[17:38:00.0000] <Hixie>
ah, multiple glyphs, ok

[17:38:01.0000] <TabAtkins>
Yeah, glyphs are strings or <image>s.

[17:38:02.0000] <TabAtkins>
I'm somewhat misusing the term.

[17:48:00.0000] <oojacoboo>
does gecko have @page implemented for print?

[17:48:01.0000] <jcranmer>
no

[17:48:02.0000] <oojacoboo>
wtf...

[17:48:03.0000] <oojacoboo>
it's been in the spec since the internet was invented

[17:48:04.0000] <TabAtkins>
I think fantasai wants to work on Gecko's paged media support next year.

[17:48:05.0000] <jcranmer>
gecko + printing = fail

[17:49:00.0000] <oojacoboo>
css media print is hard enough without having to deal with these serious UA issues

[17:52:00.0000] <othermaciej>
AryehGregor: I'm in Pacific time, yes, at least physically

[18:26:00.0000] <Hixie>
we really should set up a wiki page that tracks all the specs that apply to browsers

[18:26:01.0000] <Hixie>
(and that lists where pending feedback can be found and sent, etc)

[21:46:00.0000] <Hixie>
http://wiki.whatwg.org/wiki/Specifications_that_apply_to_Web_browsers

[22:00:00.0000] <abarth>
that could be a very large wiki page

[22:03:00.0000] <Hixie>
i'm sure we won't run out of electrons :-)

[22:11:00.0000] <abarth>
now much effort do you think it would be to spec the parsing / generation rules for HTTP?

[22:12:00.0000] <abarth>
s/now/how/

[22:18:00.0000] <abarth>
http://www.w3.org/Graphics/JPEG/ is a pretty lame spec of JPEG

[22:19:00.0000] <abarth>
which SVG spec do you want to link to?

[22:19:01.0000] <abarth>
http://www.w3.org/TR/SVG/ ?

[22:25:00.0000] <abarth>
ok, i doubled the size of your list off the top of my head

[23:43:00.0000] <Hixie>
abarth: figuring out the parsing rules of http would be a bitch because of the difficulty of testing it

[23:43:01.0000] <Hixie>
abarth: beyond that it'd be pretty easy though, i guess

[23:43:02.0000] <Hixie>
abarth: thanks for the contributions to the wiki page :-)

[23:44:00.0000] <abarth>
i guess you'd try to figure out the parsing using XMLHttpRequest

[23:44:01.0000] <abarth>
but, yeah, i can see that being tricky

[00:48:00.0000] <Philip`>
abarth|zZz: Is http://stuff.gsnedders.com/http-parsing.txt relevant?

[00:48:01.0000] <abarth|zZz>
Philip`: haven't seen that before

[00:49:00.0000] <abarth|zZz>
will look in detail later when not zZz :)

[01:54:00.0000] <gsnedders>
abarth|zZz: It really needs to be mostly rewritten, tbh

[03:17:00.0000] <annevk>
Hixie, I made http://wiki.whatwg.org/wiki/Specs at some point...

[03:17:01.0000] <annevk>
abarth|zZz, ^^

[03:25:00.0000] <_bga>
oh

[03:26:00.0000] <_bga>
i want send binary data *without* uri/utf8 encoding >_<

[03:30:00.0000] <annevk>
put it in the entity body?

[03:30:01.0000] <_bga>
from client

[03:31:00.0000] <_bga>
xhr encodes to utf8

[03:31:01.0000] <_bga>
except ff's sendAsBinary

[03:32:00.0000] <_bga>
:(

[03:33:00.0000] <_bga>
i tried   <form action="/dump.app.js" charset="CP866" method="POST" enctype="multipart/form-data">, but all browsers encodes data to utf8 too

[03:36:00.0000] <_bga>
hm

[03:44:00.0000] <annevk>
you need to use accept-charset

[04:17:00.0000] <eighty4>
gsnedders: *ping*?

[04:43:00.0000] <Ms2ger>
Tab, why do you need display: marker? Wouldn't ::marker { content: pending(marker); } .marker { move-to: marker; } work?

[10:50:00.0000] <karlcow>
http://www.ietf.org/id/draft-ietf-websec-origin-00.txt

[11:06:00.0000] <abarth>
karlcow: yeah, its basically the same as its been for a while now, just moving forward in the IETF process

[11:13:00.0000] <Ms2ger>
[TODO: Security considerations.]

[11:17:00.0000] <Evet>
how to translate GTK to HTML5?

[11:17:01.0000] <abarth>
Ms2ger: yeah :)

[11:48:00.0000] <mven>
xen

[12:08:00.0000] <AryehGregor>
Hixie, the reason Hebrew list numbering seemed crazy to you is because you were being fed a nonstandard extended version that someone made up to handle arbitrarily large numbers, instead of the version everyone uses that only works up to about 1,000,000.

[12:09:00.0000] <AryehGregor>
So it had Hebrew words stuck in for strings of zeros.

[12:09:01.0000] <AryehGregor>
Although the version you were given wasn't too hard to understand if you knew Hebrew, since it mostly just spelled out the Hebrew words for numbers where they didn't fit nicely into the standard system.

[12:10:00.0000] <AryehGregor>
Sort of like if you'd write 1,000,000,001 as "1 thousand thousand thousand 1" if you had no symbol for 0 and no word for million/billion/etc.

[12:11:00.0000] <AryehGregor>
Anyway, I eventually got that axed.  It was what got me into web standards development.

[12:12:00.0000] <AryehGregor>
Wait, so where's the new CSS lists spec?

[12:13:00.0000] <Ms2ger>
In Tab's head?

[12:20:00.0000] <espadrine>
Evet: http://blogs.gnome.org/alexl/2010/11/23/gtk3-vs-html5/ but DON'T DO IT!

[12:21:00.0000] <Evet>
espadrine: why not?

[12:22:00.0000] <espadrine>
Your app will probably be better off written in html5.

[12:23:00.0000] <espadrine>
This way you'll actually choose the stuff you really mean to do.

[12:25:00.0000] <Evet>
espadrine: indeed. but i want to port desktop applications to web

[12:26:00.0000] <espadrine>
Then it will only work in a minority of browsers for sure.

[12:27:00.0000] <Evet>
hmm

[12:28:00.0000] <espadrine>
The gtk3-vs-html5 stuff is implemented in canvas, which is a NEWT not available in ie6, 7, 8.

[12:28:01.0000] <Evet>
oh, even in 8

[12:28:02.0000] <espadrine>
Yes.

[12:36:00.0000] <karlcow>
Evet: do you mean porting desktop app to the browsers? because it is not exactly the same thing as the Web.

[12:37:00.0000] <Evet>
karlcow: yes

[13:39:00.0000] <Evet>
so, it looks writing new apps easier than porting dekstop apps to the browser.

[15:11:00.0000] <AryehGregor>
So how do I get colored diffs in hg that also allow scrolling with less, the way git does by default?  Piping to less kills the color.

[15:13:00.0000] <Philip`>
[pager]

[15:13:01.0000] <Philip`>
pager = LESS='FRX' less

[15:13:02.0000] <Philip`>
[extensions]

[15:13:03.0000] <Philip`>
pager =

[15:14:00.0000] <Philip`>
Something like that, I think

[15:14:01.0000] <Philip`>
then just do "hg diff" and it'll page

[15:15:00.0000] <Philip`>
(plus use the color extension)

[15:16:00.0000] <AryehGregor>
Yay, more built-in extensions.

[15:18:00.0000] <AryehGregor>
But it works.

[15:18:01.0000] <AryehGregor>
Thanks.

[15:50:00.0000] <Hixie>
AryehGregor: ah!

[15:50:01.0000] <Hixie>
AryehGregor: good to know


2010-12-31
[21:38:00.0000] <gwillen>
Could someone shed some light for me on the meaning of "Points on the path itself are considered to be inside the path." in the documentation of isPointInPath for the canvas element?

[21:38:01.0000] <gwillen>
In particular, whether the path is defined to have any particular nonzero width for this purpose?

[02:13:00.0000] <Philip`>
gwillen: It just means that if you do rect(0, 0, 100, 100) then points (0, 0), (100, 100), (0, 50), etc, return true for isPointInPath

[04:50:00.0000] <Ms2ger>
/me supports http://www.w3.org/Bugs/Public/show_bug.cgi?id=11621

[04:53:00.0000] <espadrine>
some people have the amazing guts of being funny. That is good!

[07:30:00.0000] <karlcow>
I don't know if I should cry or just laugh http://webstylemag.com/ "Webstyle Magazine is the lifestyle mag for web professionals. Our mission is to delve deep into what it means to be a web professional and share what we find."

[07:31:00.0000] <karlcow>
The sirens of marketing have no limits.

[07:33:00.0000] <charlvn>
karlcow: i don't know how "Dark Chocolate and Basil Truffles" are related to web development but i have to say, they look delicious!

[07:33:01.0000] <karlcow>
heheh

[07:35:00.0000] <mhausenblas>
my personal favourite: "After all, web professionals are people too, ..."

[07:35:01.0000] <charlvn>
really? wow, i never knew! :P

[07:36:00.0000] <charlvn>
i thought we were super human... my mistake :)

[07:36:01.0000] <mhausenblas>
yup. must be true. http://webstylemag.com/about says it is. and they know ...

[07:56:00.0000] <webr3>
lmfao, good find karlcow

[07:59:00.0000] <webr3>
ooo http://webstylemag.com/geek-chic-done-right

[09:04:00.0000] <AryehGregor>
http://www.guardian.co.uk/science/the-lay-scientist/2010/sep/24/1

[10:41:00.0000] <Philip`>
AryehGregor: http://krijnhoetmer.nl/irc-logs/whatwg/20100927#l-329

[10:42:00.0000] <Philip`>
Old news :-p

[10:42:01.0000] <boxendirst>
Should :invalid really be being applied to my input field before the user has even focused in it, much less attempted to submit a form? That’s what Chrome appears to be doing. On page load, wham, :invalid.

[10:42:02.0000] <AryehGregor>
boxendirst, yes.  There's a discussion about this going on right now.

[10:42:03.0000] <AryehGregor>
Either whatwg or www-style, not sure.

[10:42:04.0000] <miketaylr>
FF4 has taken a different approach, no?

[10:42:05.0000] <AryehGregor>
Mozilla has :-moz-ui-invalid and :-moz-ui-valid selectors.

[10:42:06.0000] <AryehGregor>
Which implement a much nicer algorithm.

[10:43:00.0000] <boxendirst>
I don’t like it — here’s why: It makes it look like the user has made a mistake, but they haven’t yet.

[10:43:01.0000] <AryehGregor>
Generally speaking, WebKit's HTML5 form support is horrible.

[10:43:02.0000] <AryehGregor>
Right, Mozilla is much better.

[10:43:03.0000] <AryehGregor>
WebKit HTML5 form support deserves to be indefinitely blacklisted by authors, IMO, until they fix it up.

[10:43:04.0000] <boxendirst>
Is that possible except by browser sniffing?

[10:43:05.0000] <AryehGregor>
Probably not.

[10:43:06.0000] <miketaylr>
not really

[10:44:00.0000] <boxendirst>
Oh hey miketaylr, that’s a familiar name.

[10:44:01.0000] <AryehGregor>
Philip`, I got it from Raymond Chen's semiannual link clearance.

[10:44:02.0000] <boxendirst>
/me is actually Alan Hogan, fwiw

[10:44:03.0000] <miketaylr>
hi boxendirst

[10:44:04.0000] <boxendirst>
Howdy

[10:45:00.0000] <miketaylr>
aha

[10:47:00.0000] <boxendirst>
So, should I complain anywhere else? Chrome feedback I guess?

[10:47:01.0000] <karlcow>
hmm I didn't get the joke of the guardian.

[10:47:02.0000] <Philip`>
AryehGregor: Maybe he reads the WHATWG logs and got it from here

[10:48:00.0000] <AryehGregor>
boxendirst, Chrome or WebKit, yeah.

[10:48:01.0000] <AryehGregor>
This is really a WebKit issue, but I don't think there's an actual policy that you can't file WebKit complaints in Chrome's tracker.

[10:48:02.0000] <Philip`>
karlcow: Have you read many science articles on the BBC News site?

[10:48:03.0000] <AryehGregor>
The guy working on HTML5 forms is working for Google, anyway.

[10:49:00.0000] <AryehGregor>
karlcow, or the New Scientist, or most other "science for the masses" type things?

[10:49:01.0000] <miketaylr>
boxendirst: hunt down paul_irish when he's around too, he can point you in the right direction

[10:49:02.0000] <karlcow>
Philip`: I do not read a lot of "science" news articles. My academic background is astrophysics.

[10:49:03.0000] <boxendirst>
miketaylr will do

[10:50:00.0000] <boxendirst>
AryehGregor Which guy would that be (more specific than Hixie I assume)?

[10:50:01.0000] <karlcow>
so the answer would be no. I guess not.

[10:50:02.0000] <AryehGregor>
boxendirst, I mean, the guy working on WebKit's HTML5 implementation.

[10:50:03.0000] <AryehGregor>
Not the spec.

[10:50:04.0000] <AryehGregor>
The spec is Hixie's.

[10:50:05.0000] <boxendirst>
course, gotcha

[10:50:06.0000] <AryehGregor>
The guy working on their implementation is Tamura Kent, or Kent Tamura, or something.

[10:50:07.0000] <AryehGregor>
He capitalizes one of the names, but I forget which one.

[10:50:08.0000] <boxendirst>
He around here much?

[10:51:00.0000] <AryehGregor>
I've never seen him in this channel.

[10:51:01.0000] <AryehGregor>
I only ran into him when I filed bugs against WebKit's HTML5 forms implementation.

[11:30:00.0000] <AryehGregor>
Is it just me, or is everyone who uses the term "cognitive dissonance" automatically wrong, always?

[11:31:00.0000] <Dashiva>
Can it be both, or would that be cognitive dissonance?

[11:31:01.0000] <AryehGregor>
Can what be both?

[11:32:00.0000] <Dashiva>
It's just you, and they're automatically wrong

[11:32:01.0000] <AryehGregor>
I think that would be logically inconsistent, due to the use of the word "just".

[11:32:02.0000] <AryehGregor>
If they are actually wrong, it's not "just" me.

[11:33:00.0000] <Dashiva>
What if it's only you realizing it

[11:44:00.0000] <AryehGregor>
I think it's fairly clear from context that that's not the intended meaning.

[11:46:00.0000] <AryehGregor>
"Get ready for HTML5 Graphics: Start the new year learning SVG"

[11:46:01.0000] <AryehGregor>
So I guess I'm used to CSS3 being called HTML5, but now SVG too?

[11:46:02.0000] <AryehGregor>
Meh, it's probably not even worth commenting on.

[12:40:00.0000] <boxendirst>
I made a test case page for when :invalid is applied

[12:40:01.0000] <boxendirst>
file://localhost/Users/ajh/Dropbox/Public/web/invalid.html

[12:40:02.0000] <boxendirst>
haha one sec

[12:40:03.0000] <boxendirst>
http://dl.dropbox.com/u/105727/web/invalid.html

[12:40:04.0000] <boxendirst>
There’s the public version ;)

[12:41:00.0000] <boxendirst>
Note I used ::-webkit-input-placeholder, it’s basically necessary to get your empty, invalid, placeholder-utilizing input elements to look good

[12:43:00.0000] <boxendirst>
(So I would like to see that standardized)

[12:44:00.0000] <AryehGregor>
Mozilla has an equivalent.

[12:44:01.0000] <AryehGregor>
There's been discussion about it.

[12:44:02.0000] <AryehGregor>
It'll be standardized at some point, it's just debated whether it should be a pseudoelement or pseudoclass.

[12:46:00.0000] <boxendirst>
Haha yeah that is a tricky question, AryehGregor, I was just convinced it was wrong over on irc.w3.org#html-wg

[12:46:01.0000] <boxendirst>
but then changed my mind

[12:46:02.0000] <boxendirst>
Hey Paul, thoughts on this? I submitted Webkit & Chrome bugs. http://dl.dropbox.com/u/105727/web/invalid.html

[12:47:00.0000] <AryehGregor>
boxendirst, WebKit is correct here per spec, and matches everyone else.

[12:47:01.0000] <AryehGregor>
(i.e., Opera and Gecko)

[12:47:02.0000] <AryehGregor>
A new class like :ui-invalid is being contemplated, but :invalid will apply to all invalid controls.

[12:48:00.0000] <AryehGregor>
boxendirst, see this discussion: http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2010-December/029570.html

[12:48:01.0000] <boxendirst>
Oh sorry

[12:48:02.0000] <AryehGregor>
Unfortunately it's divorced from the earlier discussion on the same topic, since mailing lists stink and Hixie doesn't respond to stuff for months so it's not the same thread in the archives anymore since those are broken up by month.

[12:48:03.0000] <boxendirst>
> most  > UI/UX guys would tell you that the current :invalid behavior is really  bad.

[12:49:00.0000] <AryehGregor>
Earlier discussion: http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2010-September/028742.html

[12:49:01.0000] <boxendirst>
Funny, because I consider myself a UI/UX guy.

[12:49:02.0000] <AryehGregor>
And you happen to agree with Mounir on this point?

[12:49:03.0000] <AryehGregor>
/me also does, as it happens -- yay Firefox 4 for being the first with a sane HTML5 form implementation

[12:50:00.0000] <boxendirst>
110% I do agree with Mounir.

[12:50:01.0000] <AryehGregor>
Have you checked out the Firefox 4 implementation?

[12:50:02.0000] <AryehGregor>
Hopefully it will persuade other vendors to follow suit.

[12:50:03.0000] <boxendirst>
<span lang=de>nein</span>

[12:51:00.0000] <boxendirst>
I suppose I’ll have to

[12:51:01.0000] <boxendirst>
Are they the only ones to support :ui-invalid yet?

[12:54:00.0000] <AryehGregor>
It's their own extension so far, so yes.  :-moz-ui-invalid.

[15:48:00.0000] <boxendirst>
AreyahGregor, do you work for Mozilla?

[15:48:01.0000] <boxendirst>
(jw)

[15:48:02.0000] <boxendirst>
Can you do  novalidate="novalidate" when the input isn’t in a form? :-/

[15:49:00.0000] <boxendirst>
Whoops, aryehgregor

