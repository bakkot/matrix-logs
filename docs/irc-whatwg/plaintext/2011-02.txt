2011-02-01
[16:01:00.0000] <matjas>
TabAtkins: I can imagine it being a pain to get those URLs in there

[16:01:01.0000] <TabAtkins>
I dunno if it is or not.  If the url is carried in the email somehow, I can do it.

[16:01:02.0000] <matjas>
TabAtkins: I don’t think it is

[16:02:00.0000] <matjas>
TabAtkins: In that case, you could host the diffs yourself

[16:02:01.0000] <TabAtkins>
I'm confused.  What is missing about the diffs?  They're right there in the feed.

[16:02:02.0000] <matjas>
TabAtkins: Yeah, but there’s no way to link to them individually (from the feed)

[16:03:00.0000] <TabAtkins>
Oh, to link to individual commits?

[16:03:01.0000] <matjas>
Yeah

[16:03:02.0000] <matjas>
Like your full feed, only limited to one commit

[16:04:00.0000] <TabAtkins>
I can rig that up.  I'll see if I can do that later today.

[16:04:01.0000] <matjas>
It would allow us to turn http://twitter.com/csscommits into something that looks more like http://twitter.com/whatwg

[16:05:00.0000] <TabAtkins>
In fact, just gimme a few minutes to talk to my dentist, and I'll get on it.

[16:05:01.0000] <matjas>
Yay!

[16:08:00.0000] <TabAtkins>
Argh, where is MikeSmith when you need him?  WAKE UP, JAPAN.

[16:09:00.0000] <bga_>
omg http://code.google.com/p/es-operating-system/

[16:12:00.0000] <TabAtkins>
paul_irish: Contacted the LearnBoost dude and let him know that my slidedeck is out-of-date, and he shouldn't rely on *any* syntax until he sees something ship.

[16:16:00.0000] <wilhelm>
bga_: OK, that is fascinating. Most of the UI on the Wii web browser is HTML, CSS and JS - but that's taking it a bit further. (c:

[16:26:00.0000] <bga_>
btw wilhelm while we invent tabs/lists/trees/... each time because whatwg does not want standardize xul/other full ui markup - its bad

[16:30:00.0000] <wilhelm>
That's a difficult problem to solve.

[16:31:00.0000] <bga_>
choose most popular open version http://en.wikipedia.org/wiki/User_interface_markup_language :)

[16:32:00.0000] <AryehGregor>
abarth, where's the CSP use-cases pages you started that Lucas mentioned?

[16:36:00.0000] <wilhelm>
bga_: Just within Opera, there are at least three different UI toolkits in use, in part due to platform constraints and in part due to a decade of legacy code. As I said, this is a difficult problem to solve. (c:

[16:37:00.0000] <Hixie>
man i hate iana's mime type registry

[16:37:01.0000] <Hixie>
it is so completely useless

[16:39:00.0000] <bga_>
wilhelm cross platform toolkits: wxwidget qt gtk ... :)

[16:40:00.0000] <bga_>
gtk is very lightweight

[16:42:00.0000] <wilhelm>
Neither of those are sufficiently cross-platform. And no, gtk isn't lightweight enough for all use cases. Neither is qt - which we removed from our GNU/Linux browser because it was too slow.

[16:50:00.0000] <TabAtkins>
matjas: Is this sufficient? http://www.xanthir.com/feed/public-css-commits/?t=2011-01-31T21:57:35+00:00

[16:50:01.0000] <TabAtkins>
The feed now lists each entries' permalink as a rel=alternate.

[16:50:02.0000] <matjas>
definitely!

[16:51:00.0000] <matjas>
TabAtkins: +2 internets to you

[16:51:01.0000] <TabAtkins>
Excellent.  Soon I will have *all* the internets.

[16:52:00.0000] <TabAtkins>
I really need to cache this stuff, so I'm not constantly hitting up GMail for the data.

[16:52:01.0000] <TabAtkins>
But to do that, I need to write my file-based persistence layer, which I'll be using all over my site so I can turn off my db and save myself 2c per day!

[16:53:00.0000] <AryehGregor>
Am I misunderstanding HTTP auth here, or is this guy clueless?  http://www.w3.org/Bugs/Public/show_bug.cgi?id=11912

[16:54:00.0000] <Hixie>
aaah, wall of text

[16:54:01.0000] <Hixie>
/me hides

[16:54:02.0000] <TabAtkins>
skip his wall of text, read Aryeh's comments.

[16:54:03.0000] <Hixie>
cunning plan

[16:55:00.0000] <Hixie>
oh he's just asking for s/cookies/auth/?

[16:55:01.0000] <Hixie>
good luck with that

[16:55:02.0000] <TabAtkins>
Looks like it, yeah.

[16:55:03.0000] <AryehGregor>
I'm trying to figure out if the benefits he claims for HTTP auth even theoretically make sense.

[16:55:04.0000] <AryehGregor>
Leaving aside whether it's practically useful.

[16:55:05.0000] <AryehGregor>
I can't see how they do.

[16:56:00.0000] <AryehGregor>
But I have no idea how HTTP auth actually works.

[16:56:01.0000] <matjas>
TabAtkins: could you remove the leading whitespace in your feed?

[16:56:02.0000] <matjas>
TabAtkins: before the XML prolog

[16:57:00.0000] <matjas>
http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fwww.xanthir.com%2Ffeed%2Fpublic-css-commits%2F

[16:57:01.0000] <matjas>
(and while you're at it, why not just remove the XML prolog altogether?)

[16:57:02.0000] <TabAtkins>
Can I?

[16:57:03.0000] <TabAtkins>
/me has no idea.

[16:57:04.0000] <TabAtkins>
/me is confused and enraged by XML.

[16:57:05.0000] <Hixie>
AryehGregor: http auth works different ways depending on the auth type

[16:58:00.0000] <Hixie>
AryehGregor: for basic, you send the username and password with each request.

[16:58:01.0000] <Hixie>
in plain text

[16:58:02.0000] <matjas>
TabAtkins: Sure you can. http://mathiasbynens.be/notes.atom validates just fine

[16:58:03.0000] <TabAtkins>
matjas: Just removed the entity.  Validates now.

[16:59:00.0000] <AryehGregor>
Yeah, I can't see how that has any advantages whatsoever except convenience.

[16:59:01.0000] <TabAtkins>
I'm gonna go remove it from my blog feed too, then.  I hate the contortions you have to go through to output an XML prolog in PHP.

[17:00:00.0000] <AryehGregor>
What contortions?

[17:01:00.0000] <TabAtkins>
You can't just output it literally, because it looks like a PHP shorttag.

[17:02:00.0000] <TabAtkins>
Which I use, because I love <?= ?>

[17:02:01.0000] <Hixie>
AryehGregor: it's theoretically better, but was poorly deployed and is now practically irrelevant

[17:02:02.0000] <AryehGregor>
What's theoretically better about it?

[17:02:03.0000] <AryehGregor>
TabAtkins, oh, shorttags, blech.

[17:02:04.0000] <TabAtkins>
<?php echo 'foo' ?>, blech.

[17:03:00.0000] <TabAtkins>
<?= 'foo' ?>, yay!

[17:03:01.0000] <Hixie>
ok <div id="div>p+p:first-child"></div> is pretty funny (from http://www.456bereastreet.com/archive/201011/html5_allows_almost_any_value_for_the_id_attribute_use_wisely/)

[17:03:02.0000] <abarth>
AryehGregor: http://www.w3.org/Security/wiki/Use_Cases_for_Content_Security_Policies

[17:03:03.0000] <abarth>
got to run

[17:03:04.0000] <TabAtkins>
Hixie: Hehe.

[17:04:00.0000] <Hixie>
AryehGregor: it's theoretically better because the browser is in charge of login/logout, rather than the page

[17:04:01.0000] <TabAtkins>
...wait.  That selector selects nothing, by definition.

[17:04:02.0000] <Hixie>
TabAtkins: it's not a selector, so that's unimportant :-P

[17:04:03.0000] <Hixie>
AryehGregor: so you can do clever things like have many different sessions, or whatnot

[17:04:04.0000] <TabAtkins>
Hixie: But it's clearly supposed to be used as one.

[17:04:05.0000] <Hixie>
TabAtkins: sure

[17:06:00.0000] <TabAtkins>
Anyway, sent him a correction.

[17:09:00.0000] <matjas>
TabAtkins: FYI, updated the proxy feed that posts to http://twitter.com/csscommits

[17:09:01.0000] <TabAtkins>
kk

[17:09:02.0000] <matjas>
i.e. http://mathiasbynens.be/demo/css-commits

[17:10:00.0000] <matjas>
slooooow since it pings your feed, which in turns connects to gmail

[17:10:01.0000] <matjas>
but it should only get 1 hit every 30 mins anyway

[17:10:02.0000] <matjas>
yay first tweet https://twitter.com/csscommits/status/32245165687046145

[17:13:00.0000] <TabAtkins>
yay!

[17:13:01.0000] <TabAtkins>
It makes me happy to add two more links in the ridiculous chain of interconnected data here.

[17:14:00.0000] <TabAtkins>
CVS commits -> mailing list -> gmail inbox -> atom feed -> twitterbot -> html page

[17:14:01.0000] <TabAtkins>
+1 for the web

[17:15:00.0000] <matjas>
TabAtkins: you forgot about my intermediary Atom feed

[17:15:01.0000] <TabAtkins>
Oh jeez.  What does your intermediary do?

[17:16:00.0000] <matjas>
TabAtkins: clears out some whitespace and weird semicolons so it looks nice in a tweet

[17:16:01.0000] <TabAtkins>
Those semicolons are misplaced.  I didn't initially realize that I was keeping the \n at the end of each log line.

[17:16:02.0000] <TabAtkins>
I need to fix that.

[17:17:00.0000] <matjas>
CVS commits → mailing list → Gmail inbox → Atom feed → proxy Atom feed → Twitterbot → Twitter → link to detailed log

[17:17:01.0000] <matjas>
Eff yeah.

[17:18:00.0000] <matjas>
TabAtkins: I’m off for tonight, but please do keep me posted :)

[17:18:01.0000] <TabAtkins>
kk

[17:29:00.0000] <AryehGregor>
It's amazing how much cleaner this makes your code: function $(sel) { return document.querySelector(sel); }

[17:31:00.0000] <TabAtkins>
I know!

[17:31:01.0000] <TabAtkins>
Though, I use query() and queryOne().  Same deal.

[17:33:00.0000] <karlcow>
/me is discovering http://developer.apple.com/library/ios/#documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingWIthAPS/CommunicatingWIthAPS.html

[17:35:00.0000] <karlcow>
through http://blog.mfabrik.com/2011/01/29/apple-push-notifications-apn-with-python/

[17:44:00.0000] <AryehGregor>
Fun, JS diffs: http://aryeh.name/spec/innertext/test/innerText.html

[17:57:00.0000] <paul_irish>
AryehGregor: what is the difference, in practice, between innerText and textContent ?

[17:57:01.0000] <AryehGregor>
paul_irish, innerText is way more complicated, and much better matches what you actual see.

[17:57:02.0000] <AryehGregor>
It's basically a plaintext version of the HTML.

[17:58:00.0000] <AryehGregor>
So it will hide things that are display: none, add newlines when you have display: block, normalize runs of whitespace to a single space, etc.

[17:58:01.0000] <AryehGregor>
Add tabs for tables.

[17:58:02.0000] <AryehGregor>
Lots of other stuff.

[17:59:00.0000] <Hixie>
AryehGregor: i'm about to integrate window.atob! :-)

[17:59:01.0000] <AryehGregor>
:)!

[17:59:02.0000] <Hixie>
AryehGregor: is http://aryeh.name/spec/base64.html still the most up to date copy?

[17:59:03.0000] <AryehGregor>
Hixie, yes.

[17:59:04.0000] <Hixie>
awesome

[17:59:05.0000] <AryehGregor>
paul_irish, my spec for innerText so far is here: http://aryeh.name/spec/innertext/innertext.html  It's still missing lots of details and testing, but you get the idea.

[18:00:00.0000] <jamesr__>
AryehGregor: do you think if you spec it fully that ffx will implement it?

[18:00:01.0000] <paul_irish>
I ask because we're looking to modify what .text() does in jQuery and i'd love to do elem.textContent || elem.innerText .. we might still do it but document the visibility cases

[18:00:02.0000] <paul_irish>
AryehGregor: great. thank you

[18:00:03.0000] <AryehGregor>
Well, for setting they should behave the same, or roughly so.

[18:00:04.0000] <jamesr__>
/me wouldn't implement innerText if he was a firefox dev and could get away with it. it sucks

[18:01:00.0000] <AryehGregor>
For getting they're totally different -- in particular, the whitespace they return will be extremely different in most real-world cases.

[18:01:01.0000] <AryehGregor>
jamesr__, even if it's to a spec?

[18:01:02.0000] <jamesr__>
AryehGregor: well depends on the spec, but the webkit implementation is horrifying

[18:01:03.0000] <AryehGregor>
How much of the horrifyingness is required for web compat?

[18:01:04.0000] <jamesr__>
no clue :)

[18:02:00.0000] <jamesr__>
maybe going from code -> reverse engineering -> spec -> code will clean it up

[18:02:01.0000] <AryehGregor>
I'll aim for something not too horrifying and we'll see if it works.

[18:02:02.0000] <jamesr__>
that sort of worked for the parser

[18:02:03.0000] <AryehGregor>
The parser spec is pretty horrifying . . .

[18:02:04.0000] <jamesr__>
imo it's a lot better than the code we had before

[18:02:05.0000] <gsnedders>
Opera's impl is incredibly simple, it ignores almost all the complexity and isn't that different to textContent.

[18:02:06.0000] <AryehGregor>
Well, you'd know better than me.

[18:02:07.0000] <AryehGregor>
gsnedders, yes, which makes it basically useless.  May as well use textContent instead.

[18:02:08.0000] <jamesr__>
just from an implementation point of view

[18:03:00.0000] <gsnedders>
That hasn't caused too much site compat issues :P

[18:03:01.0000] <jamesr__>
most of that is (hopefully) hidden safely away from authors

[18:03:02.0000] <gsnedders>
AryehGregor: If you're looking for simplicity… :P

[18:04:00.0000] <Hixie>
if we can drop any of this stuff altogether, i'd be even happier, but my (and thus AryehGregor's) goal is to at least have a spec so that we can have that discussion well-informed

[18:04:01.0000] <Hixie>
my suspicion, though, is that given that ffx is the only one to not do it at all (right?) we are probably stuck with it

[18:04:02.0000] <Hixie>
wow, http://aryeh.name/spec/innertext/innertext.html is the closest anyone has come to convincing me to change the small-caps style on the h1 :-)

[18:05:00.0000] <TabAtkins>
Hehe

[18:05:01.0000] <AryehGregor>
Glad to be of service.

[18:05:02.0000] <Hixie>
AryehGregor: btw the wording here may be of use http://www.whatwg.org/specs/web-apps/current-work/complete/#being-rendered

[18:06:00.0000] <TabAtkins>
We need font-variant:small-caps-unless-ugly

[18:07:00.0000] <Hixie>
hah

[18:07:01.0000] <AryehGregor>
Hixie, that doesn't seem to match my needs, at a glance.  For instance, innerText works on elements that aren't part of a Document.

[18:07:02.0000] <AryehGregor>
You didn't expect we could actually reuse definitions on the web platform, did you?

[18:07:03.0000] <AryehGregor>
Silly Hixie.

[18:07:04.0000] <Hixie>
yeah i didn't mean you could reuse the definition

[18:08:00.0000] <Hixie>
just that the phrasing may be of interest

[18:08:01.0000] <Hixie>
what should i call th esection in which i define atob and btoa

[18:09:00.0000] <TabAtkins>
The "discard last 4 and interpret as an 8-bit number" bit is crazy.

[18:09:01.0000] <othermaciej>
innerText does something different when used on unrendered content IIRC

[18:12:00.0000] <AryehGregor>
It seems to do something completely insane in WebKit when used on display: none content.

[18:12:01.0000] <AryehGregor>
Maybe that's why.

[18:12:02.0000] <AryehGregor>
It seems to behave a lot more like textContent in that case.

[18:12:03.0000] <AryehGregor>
TabAtkins, how so?

[18:14:00.0000] <othermaciej>
I think it might behave exactly like textContent in that case

[18:14:01.0000] <AryehGregor>
That would be easy to spec, if it's actually desirable.  Is it?  It doesn't make any sense to me.

[18:21:00.0000] <Hixie>
hsivonen: we discussed what happens when you document.write() a string with broken surrogates at some point... i'm going to promote the use of webidl's "convert to unicode" thing from AryehGregor's atob() spec to apply to every method with a DOMString argument, so document.write() will be adding U+FFFDs to the input stream for that case.

[18:22:00.0000] <AryehGregor>
Maybe that change should just be made in WebIDL?

[18:22:01.0000] <Hixie>
yeah maybe

[18:22:02.0000] <gsnedders>
Yeah, that'd make sense to have in the ES binding

[18:23:00.0000] <Hixie>
i don't understand what the "a" in "atob" is supposed to stand for.

[18:23:01.0000] <Hixie>
oh wait.

[18:23:02.0000] <Hixie>
i have them backwards.

[18:23:03.0000] <Hixie>
so "b" is binary and "a" is ascii.

[18:23:04.0000] <Hixie>
ok.

[18:24:00.0000] <Hixie>
which should i put first, base64-to-"binary", or "binary"-to-base64?

[18:24:01.0000] <Hixie>
i guess the latter

[18:31:00.0000] <Hixie>
AryehGregor: what errors aren't caught by the algorithm?

[18:31:01.0000] <Hixie>
in atob()

[18:34:00.0000] <Hixie>
also, why "strictly greater" rather than "greater"?

[21:41:00.0000] <Hixie>
jgraham: i'm getting an error from pms that i've never had before

[21:41:01.0000] <Hixie>
"TypeError: expected string or buffer" deep inside build/bdist.linux-i686/egg/html5lib/treewalkers/lxmletree.py, according to the traceback i get

[22:34:00.0000] <Hixie>
jgraham: may have been because of a <?p> typo

[22:58:00.0000] <hsivonen>
Hixie: I strongly disagree with making document.write FFFD out unpaired surrogates. What problem is being solved?

[23:25:00.0000] <Hixie>
hsivonen: the problem of having unpaired surrogates in what is supposedly a Unicode-clean environment

[23:25:01.0000] <Hixie>
why would we ever want to allow surrogates -- paired on unpaired -- in?

[23:54:00.0000] <Hixie>
hahaha http://ishtml5readyyet.com/ has been updated to use new HTML elements

[23:54:01.0000] <Hixie>
and has a very pretty countdown clock

[00:03:00.0000] <benschwarz>
Hixie: I have another change request :)

[00:05:00.0000] <Hixie>
benschwarz: shoot

[00:05:01.0000] <benschwarz>
Hixie: can we rename the "web developer edition" text to read "A technical specification for web developers"

[00:06:00.0000] <Hixie>
you betcha

[00:06:01.0000] <Hixie>
lowercase "w" in "web"?

[00:06:02.0000] <Hixie>
not "Web"?

[00:06:03.0000] <Hixie>
I always think of Web as the proper noun name for the Web

[00:06:04.0000] <Hixie>
like the Internet as opposed to one of the many possible internets

[00:07:00.0000] <benschwarz>
Hixie: we can do upper case :)

[00:08:00.0000] <Hixie>
regenning

[00:08:01.0000] <benschwarz>
Hixie: <3's floating towards you

[00:09:00.0000] <Hixie>
it's up

[00:09:01.0000] <benschwarz>
legend

[00:09:02.0000] <benschwarz>
did you make the chrome frame change?

[00:12:00.0000] <Hixie>
benschwarz: not yet, will do that momentarily

[00:13:00.0000] <Hixie>
holy cow, someone actually used <canvas> to do a fractal. with web workers in the background for the calculation! http://juliamap.googlelabs.com/#ll=29.152261,-81.051636&z=10&p=ffffff,ffffff,ffffff,ffffff,ff0000,ffff00,ffff00,ff00,ff&f=mandelbrot

[00:13:01.0000] <Hixie>
sweet

[00:14:00.0000] <benschwarz>
Hixie: see your secret messages?

[00:21:00.0000] <Hixie>
can someone explain to me why the rows on http://www.whatwg.org/specs/web-apps/current-work/complete/webappapis.html#base64-table are not lined up?

[00:22:00.0000] <Hixie>
chrome

[00:22:01.0000] <Hixie>
using -webkit-column-stuff

[00:30:00.0000] <Hixie>
AryehGregor: atob is in

[00:31:00.0000] <Hixie>
AryehGregor: i made a number of minor editorial changes to your text to make it fit the spec's style, you may be interested in comparing the two for your edification :-)

[00:54:00.0000] <annevk>
ISSUE-151 o_O

[00:54:01.0000] <annevk>
Maybe we should recharter too to cut all cooperation

[00:56:00.0000] <Dashiva>
So issues are still being created without any kind of filtering?

[00:56:01.0000] <annevk>
Anything goes it seems

[00:56:02.0000] <benschwarz>
Hixie: what do you think about a applicationCache.canceUpdate() method?

[01:00:00.0000] <hsivonen>
Hixie: the DOM isn't a Unicode-clean environment

[01:17:00.0000] <jgraham>
hsivonen: What do you think about innerHTML? I presume you think the same?

[01:17:01.0000] <hsivonen>
jgraham: yes

[01:17:02.0000] <jgraham>
Conceptually I don't think the innerHTML case is so cleancut

[01:18:00.0000] <jgraham>
I mean, document.write just adds bytes to the input stream, so it isn't surprising if you get the bytes out that you put in

[01:18:01.0000] <hsivonen>
conceptually, I think the DOM and JavaScript form a system of UTF-16 code units and layout has to deal with unpaired surrogates

[01:19:00.0000] <jgraham>
But conceptually innerHTML runs the HTML parser on the input and if you want to reuse the full parser pipeline you naturally get the unpaired surrogate handling

[01:19:01.0000] <hsivonen>
jgraham: existing browsers don't seem to use the full pipeline

[01:21:00.0000] <jgraham>
That might be a winning argument. Nevertheless it is unclear to me that the behaviour makes sense

[01:21:01.0000] <hsivonen>
/me points to topic

[01:21:02.0000] <jgraham>
Well yes

[01:22:00.0000] <jgraham>
It is less stupiod than, say, innerText, I will give you that

[01:22:01.0000] <annevk>
topic really is a good one :)

[01:22:02.0000] <hsivonen>
I don't look forward to explaining to smaug and others who've spent time optimizing innerHTML that I landed something that makes it slower so that we can be theoretically cleaner in the Unicode sense

[01:22:03.0000] <hsivonen>
especially when we can't make JS strings enforce UTF-16 well-formedness, because people use JS strings for binary data

[01:23:00.0000] <jgraham>
Right, I agree that the Unicode-hygiene argument doesn't make any sense given that you can already add unpaired surrogates via DOM

[01:23:01.0000] <MikeSmith>
virtuelv: why's maxf giving you congrats?

[01:23:02.0000] <jgraham>
(I assume?)

[01:23:03.0000] <hsivonen>
(well, actually, they don't tend to use the code points that are surrogates for binary data)

[01:23:04.0000] <hsivonen>
jgraham: right

[01:25:00.0000] <jgraham>
/me wonders what SteveF would expect an implemenation of <hgroup> to look like

[01:25:01.0000] <hsivonen>
jgraham: I believe the parts of the pipeline I used for Firefox 4 innerHTML and document.write are exactly the right ones considering compat

[01:25:02.0000] <hsivonen>
and perf

[01:27:00.0000] <jgraham>
hsivonen: I don't really disagree. I just want to be sure that we have covered all the cases

[01:38:00.0000] <annevk>
oh, 151 is a Last Call issue...

[01:40:00.0000] <zcorpan>
Hixie: could you run the fixBrokenLink() script earlier than onload to speed up loading?

[01:44:00.0000] <zcorpan>
benschwarz: same with you ^ :)

[01:45:00.0000] <benschwarz>
zcorpan: other than the obvious factor of it "fixing the links"

[01:45:01.0000] <benschwarz>
what does it actually do?

[01:46:00.0000] <annevk>
https://lists.webkit.org/pipermail/webkit-dev/2011-January/015797.html yay Maciej

[01:47:00.0000] <virtuelv>
MikeSmith: it was meant for @opvard who's been with Opera for ten years this year

[01:47:01.0000] <zcorpan>
benschwarz: it redirects to the right page if the fragment is not found on the current page

[01:48:00.0000] <benschwarz>
zcorpan: so its important for the pages that are split?

[01:48:01.0000] <benschwarz>
(multipage specs)?

[01:48:02.0000] <zcorpan>
yeah

[01:49:00.0000] <zcorpan>
but hmm, i guess it needs to be run after the content has been loaded after all

[01:49:01.0000] <zcorpan>
so ignore me

[01:49:02.0000] <benschwarz>
zcorpan: perhaps I could re-write it in ruby postprocessors

[01:49:03.0000] <benschwarz>
and remove the script altogether

[01:51:00.0000] <zcorpan>
benschwarz: that wouldn't work, it needs to be in javascript

[01:53:00.0000] <zcorpan>
but link-fixup.js logic could be put in fragment-links.js and instead of checking getElementById() just check if the current fragment is in the table and if so, if the current page matches what the table says it should be

[01:54:00.0000] <zcorpan>
then you could run it ASAP and get faster redirects

[01:54:01.0000] <benschwarz>
zcorpan: I'll look into it

[01:54:02.0000] <benschwarz>
can you add an issue for me to track?

[01:54:03.0000] <zcorpan>
sure

[01:55:00.0000] <benschwarz>
thanks ;)

[02:02:00.0000] <Philip`>
zcorpan: I split link-fixup.js from fragment-links.js because I didn't really want it loading a quarter of a megabyte of scripts every time you visit a page

[02:03:00.0000] <Philip`>
since that doesn't seem good for bandwidth or performance in the common case where you're not visiting an obsolete fragment address

[02:21:00.0000] <zcorpan>
Philip`: is it a quarter of a megabyte gzipped?

[02:24:00.0000] <Philip`>
zcorpan: More like 50KB to download

[02:25:00.0000] <Philip`>
/me wonder how long parsing takes

[02:25:01.0000] <zcorpan>
50KB doesn't sound so bad to waste in normal cases to speed up shortlink fixups

[02:26:00.0000] <zcorpan>
developers.whatwg.org already does that anyway

[03:11:00.0000] <hsivonen>
cool. brucel has started posting HTML5 videos on his blog instead of Flash-trapped videos

[03:12:00.0000] <hsivonen>
the medium is the message

[03:15:00.0000] <jgraham>
http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/

[03:30:00.0000] <hsivonen>
/me wonders what the business model for Opera Widgets Runtime for Android is

[03:30:01.0000] <hsivonen>
will handset makers or operators pay to bundle it?

[04:00:00.0000] <annevk>
volkmar, for your <progress> bugs, did you check what existing impls do?

[04:08:00.0000] <zcorpan>
the vid.ly player doesn't seem particularly keyboard accessible

[04:09:00.0000] <zcorpan>
and the flash fallback doesn't seem to work for me in ie

[04:15:00.0000] <benschwarz>
Philip`: ping

[04:15:01.0000] <annevk>
http://www.gapminder.org/ is quite cool

[04:15:02.0000] <annevk>
I wish it did not use Flash

[04:16:00.0000] <espadrine>
annevk: did you see the ted talks?

[04:16:01.0000] <annevk>
yup

[04:16:02.0000] <espadrine>
The speaker ends up with a sword down his throat...

[04:16:03.0000] <espadrine>
Pretty odd.

[04:17:00.0000] <annevk>
I did not see that one...

[04:18:00.0000] <hsivonen>
smaug____: did you see the unpaired surrogate discussion earlier on this channel today?

[04:18:01.0000] <smaug____>
hsivonen: no

[04:19:00.0000] <hsivonen>
smaug____: "surrogate" is the string to look for in the logs.

[04:19:01.0000] <jgraham>
annevk: I am wary of a site with a title like that

[04:19:02.0000] <jgraham>
Although the graphs are pretty, the brief commentary seems to be bogus

[04:20:00.0000] <hsivonen>
smaug____: AFAICT, it's a case of theoretical purity vs. innerHTML perf

[04:20:01.0000] <hsivonen>
smaug____: I thought you might care since you've worked on innerHTML perf

[04:20:02.0000] <annevk>
jgraham, see e.g. http://www.youtube.com/watch?v=jbkSRLYSojo

[04:21:00.0000] <hsivonen>
jgraham: I think the main think to be wary of is the Flash use. The substance is good.

[04:21:01.0000] <jgraham>
/me has only looked at a couple of graphs

[04:22:00.0000] <hsivonen>
in this case, the software is quite old, so it's understandable it wasn't written in JS+HTML+SVG

[04:29:00.0000] <annevk>
zcorpan, oh, did <device> change?

[04:30:00.0000] <smaug____>
hsivonen: so every method taking a DOMString should check the input and possibly modify it?

[04:31:00.0000] <jgraham>
I think we would not be happy with that in general

[04:32:00.0000] <smaug____>
hsivonen: that would certainly cause some performance regressions, and for things like Gecko's xhr.sendAsBinary it just doesn't make sense

[04:33:00.0000] <jgraham>
At least I imagine that the conversation would go "the spec says that we have to check for unpaired surrogates in all DOM APIs" "the spec is stupid. That will just cause performance issues for no appreciable gain"

[04:33:01.0000] <jgraham>
But I am only guessing

[04:35:00.0000] <zcorpan>
annevk: dunno

[04:37:00.0000] <annevk>
smaug____, the spec allows for exceptions though I hope sendAsBinary goes away...

[04:37:01.0000] <hsivonen>
smaug____: right. so since browsers don't historically do it, I think we should just say "no"

[04:37:02.0000] <smaug____>
sendAsBinary was just an example, and yeah, I hope it will go away

[04:37:03.0000] <annevk>
(Though I'm not really convinced this make sense either. Unpaired surrogates can still get through.)

[04:42:00.0000] <jgraham>
Right. I don't understand why we hate unpaired surrogates so much. They don't seem to be causing any harm at present, but trying to guard against them everywhere would case harm

[04:43:00.0000] <hsivonen>
Hixie: see above. Please don't make the spec check for unpaired surrogates in innerHTML or document.write

[04:44:00.0000] <annevk>
There is a few places where you need that algorithm by the way. But only when you want to serialize to e.g. UTF-8 or some such.

[04:45:00.0000] <annevk>
XMLHttpRequest uses it for that reason.

[05:05:00.0000] <hsivonen>
aaargh. yay for XML. so createContextualFragment requires to propagate XML well-formedness errors as exceptions to the caller. How sad.

[05:07:00.0000] <Ms2ger>
I followed innerHTML, but we don't do that either

[05:10:00.0000] <zcorpan>
in http://canvex.lazyilluminati.com/misc/dom-viewer/x.html?%3C!DOCTYPE%20html%3E%0A%3Cscript%20xmlns%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxhtml%27%3Etry{d%3Ddocument.createElement%28%27div%27%29%3Bd.innerHTML%3D%27%26lt%3Bfoo%3E%27%3B}catch%28e%29{alert%28e%29}%3C%2Fscript%3E i get two alerts at the same time in firefox

[05:11:00.0000] <zcorpan>
shouldn't alerts wait for the current alert to be dismissed?

[05:12:00.0000] <hsivonen>
/me has no idea how the new alerts in Firefox work

[05:12:01.0000] <hsivonen>
/me is generally unhappy about propagating nsresult

[05:14:00.0000] <Ms2ger>
/me is generally unhappy about not propagating nsresult

[05:14:01.0000] <Ms2ger>
"Mediocrity: It's quicker, and by the time anybody notices, it's too late."

[05:16:00.0000] <hsivonen>
Ms2ger: well, now that we have the infallible malloc, the vast majority of nsresult propagation is useless

[05:35:00.0000] <volkmar>
annevk: that's what Webkit does, I don't think anyone implement progress element

[05:36:00.0000] <annevk>
both Opera and Chrome have an implementation

[05:37:00.0000] <volkmar>
annevk: i should check Opera then

[05:39:00.0000] <hsivonen>
annevk: looks like in Opera it doesn't use the theme from Gtk

[05:40:00.0000] <hsivonen>
oven uglier in Chrome

[05:40:01.0000] <hsivonen>
:-(

[05:40:02.0000] <hsivonen>
I don't expect Web authors to use this any time soon if it looks like this in Chrome

[05:40:03.0000] <volkmar>
hsivonen: Opera and Chrome don't really care about system theme for what i've seen (at least for GTK)

[05:40:04.0000] <volkmar>
annevk: Opera is following the specs word by word

[05:41:00.0000] <hsivonen>
I guess the Chrome impl. still scores some points on html5test.com or something :-(

[05:41:01.0000] <volkmar>
hsivonen: it looks great on MacOS though

[05:42:00.0000] <volkmar>
so i would probably bet on web authors using it with no care for the GNU/Linux users

[05:43:00.0000] <hsivonen>
maybe

[05:44:00.0000] <hsivonen>
maybe Linux users welcome their new unthemed Chromium overlords, because it's "so fast" :-(

[05:45:00.0000] <annevk>
I suspect for Linux they mostly care about Chromium OS

[05:50:00.0000] <jgraham>
/me wonders if Chrome would seem faster if I used it more

[05:51:00.0000] <jgraham>
As it is, the processes tend to get swapped out and there is a noticable responsiveness issue when the UI is swapped in but not the content

[05:53:00.0000] <hsivonen>
Also, while Firefox and Opera seem to map well known font names to Ubuntu-bundled lookalikes properly, Chromium doesn't.

[05:54:00.0000] <hsivonen>
correction: It seems that Opera has failures in that department, too

[05:55:00.0000] <Ms2ger>
Why do you make me look at XMLSerializer :(

[05:56:00.0000] <hsivonen>
Ms2ger: I thought you had volunteered. :-)

[05:57:00.0000] <hsivonen>
Ms2ger: anyway, I think we should make XMLSerializer escape stuff that would otherwise be normalized away when round-tripping

[05:57:01.0000] <hsivonen>
Ms2ger: perhaps the right place to spec it is in HTML5

[05:58:00.0000] <hsivonen>
since XMLSerializer already refers to it

[05:58:01.0000] <Ms2ger>
We need an algorithm for XML serializing in any case

[06:18:00.0000] <annevk>
indeed we do

[06:18:01.0000] <annevk>
part of DOM Parsing and Serializing no?

[06:19:00.0000] <Ms2ger>
Sure

[06:19:01.0000] <Ms2ger>
Patches welcome ;)

[06:24:00.0000] <hsivonen>
/me wonders what the point of using kSpace instead of ' ' is

[06:25:00.0000] <hsivonen>
it's not like the code point will get reassigned every couple of years warranting a layer of abstraction

[06:31:00.0000] <loucapo>
hi again everyone!

[06:41:00.0000] <erlehmann>
the video element in chrome is ugly. :(

[06:46:00.0000] <Philip`>
hsivonen: Maybe a general policy that inline constants are bad?

[06:47:00.0000] <hsivonen>
Philip`: what's bad about inline constants for ASCII characters?

[06:49:00.0000] <Philip`>
Probably nothing, but some other cases of magic constants are bad, and complex policies with exceptions depending on the types of constants are bad, so it's easier just to forbid them entirely if you don't trust your programmers to be sensible, I guess

[06:51:00.0000] <hsivonen>
Philip`: well, it leads to issues like having to push .h files around because different people defined kSpace in different places than must never see each other

[06:51:01.0000] <hsivonen>
s/than/that/

[07:02:00.0000] <hsivonen>
annevk: are you gonna call into the HTML-XML TF?

[07:02:01.0000] <annevk>
thanks

[07:05:00.0000] <AryehGregor>
Hixie, atob() as I specced it ignores trailing bits that aren't zero, as noted in the second-to-last step, even though those can't be output by btoa().  It also doesn't require the trailing equals signs, although if they're present they must be the exact right number.  As I note in HTML comments, WebKit is laxer, but I followed Gecko.

[07:06:00.0000] <AryehGregor>
Hixie, I say "strictly greater" out of mathematician's habit, I guess.  To mathematicians, "greater" is ambiguous, it's often used to mean "greater than or equal to".  Probably for a spec, the "strictly" is unnecessary.

[07:08:00.0000] <Ms2ger>
Greater than is >, always

[07:08:01.0000] <AryehGregor>
To programmers, yeah.

[07:08:02.0000] <Ms2ger>
Just like 0 is never positive

[07:08:03.0000] <AryehGregor>
Mathematicians also are sometimes sloppy about the difference between "positive" and "nonnegative".  The thing is, when you're dealing with continuous quantities, the difference is usually irrelevant.

[07:09:00.0000] <AryehGregor>
Because it's a difference of one point in a continuum, which doesn't matter.

[07:09:01.0000] <AryehGregor>
Programmers deal with discrete quantities, so it makes a difference.

[07:09:02.0000] <AryehGregor>
(sometimes it makes a difference in math too, but then mathematicians will often say "strictly" if they mean strictly, to clarify)

[07:09:03.0000] <AryehGregor>
But it's unnecessary in a computing spec, I agree.

[07:16:00.0000] <AryehGregor>
Hixie, I filed three bugs about editorial issues in the base64 stuff.

[09:00:00.0000] <zcorpan>
/me points out that hgroup has at least parser impl in at least gecko and webkit

[09:02:00.0000] <zcorpan>
also, http://software.hixie.ch/utilities/js/live-dom-viewer/saved/818 styling is still suboptimal with the :any(section, ...) ... h1 styling

[09:18:00.0000] <karlcow>
hmm

[09:18:01.0000] <karlcow>
"MIME-Handling: Sniffing Opt-Out

[09:19:00.0000] <karlcow>
http://blogs.msdn.com/b/ie/archive/2008/07/02/ie8-security-part-v-comprehensive-protection.aspx

[09:19:01.0000] <karlcow>
I wonder how it will be more effective. As soon it is built into a library that people use inadequatly

[09:32:00.0000] <annevk>
tech support from ISP at my mom's house does not do Ubuntu

[09:32:01.0000] <annevk>
apparently it was too hard to click on the connection thingie at the top and select the wired connection option

[09:32:02.0000] <annevk>
(she previously had a wireless connection)

[09:33:00.0000] <annevk>
unfortunately the competing ISPs are even worse

[09:35:00.0000] <annevk>
othermaciej++

[09:35:01.0000] <annevk>
using CORS for fonts is protocol abuse

[09:36:00.0000] <othermaciej>
annevk: sadly, TabAtkins is being kind of pushy about it

[09:36:01.0000] <othermaciej>
annevk: fortunately, I think my C++-fu is better than his...

[09:37:00.0000] <jgraham>
/me wonders in what strange universe a debate about the merits of CORS for font DRM comes down to C++-fu

[09:37:01.0000] <othermaciej>
annevk: incidentally, if we backed down and decided to use SOP+CORS for WOFF, is there any way we could still allow free cross-site linking of other font formats (TrueType, OpenType, SVG)

[09:38:00.0000] <karlcow>
webkit?

[09:38:01.0000] <othermaciej>
jgraham: I doubt he's able to code a patch to implement his suggestion

[09:38:02.0000] <annevk>
othermaciej, the way CORS works in theory is that the requester sets the policy

[09:38:03.0000] <annevk>
so this would in theory need to be defined by @font-face

[09:38:04.0000] <jgraham>
Hmm, I guess this is the logical conclusion of "those who implement win"

[09:39:00.0000] <annevk>
and you could of course do the request, and if it is WOFF (after sniffing) also check the relevant CORS stuff and otherwise ignore them

[09:39:01.0000] <annevk>
however, that is very much like checing "usage rights" rather than "read rights" (what CORS is designed for)

[09:39:02.0000] <othermaciej>
annevk: so the problem with this is either you make a CORS simple request for cross-site access for TT/OT/SVG fonts (which means no cookies etc are sent) or you make a preflight request for all font requests

[09:40:00.0000] <othermaciej>
annevk: or you violate CORS by sending a request with credentials and no preflight

[09:40:01.0000] <annevk>
i.e. CORS is not designed to prevent cross-origin image usage, it is designed to allow cross-origin images to be read by e.g. <canvas>

[09:40:02.0000] <othermaciej>
IE and FF get around this by applying a same-origin limitation to all font formats

[09:40:03.0000] <annevk>
othermaciej, actually, for GET requests there is no preflight needed

[09:40:04.0000] <annevk>
othermaciej, you got that wrong in your message

[09:41:00.0000] <othermaciej>
is it ok to send credentials with a GET with no preflight?

[09:41:01.0000] <karlcow>
http://sebleedelisle.com/2011/02/html5-canvas-sprite-optimisation/

[09:41:02.0000] <othermaciej>
/me has trouble remembering this stuff

[09:41:03.0000] <annevk>
othermaciej, yes, otherwise we could never make <img> work with CORS

[09:41:04.0000] <othermaciej>
ok

[09:41:05.0000] <annevk>
othermaciej, and I wanted <img> to be able to work with CORS

[09:41:06.0000] <othermaciej>
so since none of the headers would be provided by the embedder, you could just send a normal request and read CORS headers in the response depending on Content-Type

[09:41:07.0000] <othermaciej>
in principle

[09:41:08.0000] <othermaciej>
though it would still (IMO) be bad design

[09:42:00.0000] <annevk>
yeah, where the Content-Type is derived from sniffing

[09:42:01.0000] <zcorpan>
killing WOFF was my knee-jerk reaction when IE came out and supported OTF

[09:42:02.0000] <annevk>
it's protocol abuse for sure

[09:42:03.0000] <othermaciej>
zcorpan: yeah, I have no idea what the point of WOFF is now

[09:42:04.0000] <othermaciej>
I thought the whole purpose was to have a single font format, when IE refused to implement OTF and others refused to implement EOT

[09:42:05.0000] <annevk>
I have stated several times that using CORS for this is the wrong solution

[09:45:00.0000] <othermaciej>
I also wonder why deciding not to support part of a spec is suddenly a huge deal

[09:45:01.0000] <othermaciej>
no one is up in arms because Mozilla refuses to support SVG fonts

[09:46:00.0000] <annevk>
or Web SQL DB *cough* *cough*

[09:47:00.0000] <annevk>
the foundries and e.g. Sylvain from Microsoft seem to be making it a big deal

[09:48:00.0000] <annevk>
and the rest of the WG sort of gets dragged into it

[09:48:01.0000] <annevk>
but I am not really interested in participating there, I was not welcome, so I posted something on my blog somewhere in April last year

[09:50:00.0000] <zcorpan>
not implementing part of a spec *can* be pretty bad. but i think not implementing SOR for fonts isn't bad

[09:52:00.0000] <zcorpan>
e.g. implementing WF2 API but not UI is pretty bad

[09:52:01.0000] <Ms2ger>
What about implementing ugly UI? ;)

[09:53:00.0000] <zcorpan>
that's also pretty bad

[09:54:00.0000] <annevk>
subjective! :p

[10:00:00.0000] <zcorpan>
why does http://dev.w3.org/2006/webapi/FileAPI/#abort fire both 'error' and 'abort'?

[10:00:01.0000] <annevk>
looks like a bug

[10:23:00.0000] <loucapo>
hey everyone, is this a good place to post a code question or is there a better group?

[10:35:00.0000] <jgraham>
For today's episode of "an ignorance shared is an ignorance harshly mocked on the internet" I have a question straight out of CS 101

[10:36:00.0000] <jgraham>
Say I am trying to construct a representation of tests, in code. The obvious thing to do would be to have a Test base class and derive specific types of tests from that base class

[10:37:00.0000] <jgraham>
(these are web browser Tests fwiw)

[10:38:00.0000] <jgraham>
However it seems this will violate the Liskov Substitution Principle

[10:39:00.0000] <jgraham>
For example a Javascript test will have a single URL

[10:39:01.0000] <jgraham>
But a RefTest will have two urls and a type

[10:39:02.0000] <jgraham>
So, given that almost all the methods will be the same for all the types, what is one supposed to do?

[10:41:00.0000] <Philip`>
/me doesn't really understand what Substitution is occurring in this case

[10:42:00.0000] <Philip`>
Are you having a JavascriptTest and RefTest both derived from Test?

[10:42:01.0000] <TabAtkins>
othermaciej: I'm being "pushy" because SOR on @font-face is the right choice, and Moz and IE have both gone with it already.  I'd like any new embedded media to have SOR.

[10:42:02.0000] <othermaciej>
the latter is definitely not going to happen

[10:42:03.0000] <jgraham>
Philip`: Well that was the hypothesis

[10:43:00.0000] <othermaciej>
video and audio don't have SOR (despite Mozilla's attempt to enforce it at some point)

[10:43:01.0000] <TabAtkins>
Right, we've very likely already lost our chance with those two.

[10:43:02.0000] <Philip`>
Are you having any methods on Test that won't behave equivalent for objects of either subclass?

[10:43:03.0000] <othermaciej>
SOR for non-WOFF fonts is something I'd definitely consider an unacceptable change, there isn't even a spec argument for it

[10:43:04.0000] <loucapo>
i was on here last week asking about xmlhttp level 2 posting to a pwd protected url

[10:43:05.0000] <TabAtkins>
Sure there is.  @font-face suggests applying SOR (though doesn't require it).

[10:43:06.0000] <Philip`>
s/equivalent/equivalently/

[10:43:07.0000] <jgraham>
Philip`: Not that I know of. But does the constructor count?

[10:44:00.0000] <annevk>
TabAtkins, that's not a good argument

[10:44:01.0000] <jgraham>
I mean the constructor necessarily has a different signature

[10:44:02.0000] <loucapo>
annevk suggested that if u set the Authoization header via JS it should be ok

[10:44:03.0000] <loucapo>
assuming the server accepts that header

[10:44:04.0000] <TabAtkins>
annevk: That was just challenging the statement that "there isn't even a spec argument for it".

[10:44:05.0000] <loucapo>
i allowed it on the server

[10:45:00.0000] <othermaciej>
TabAtkins: I can't find the word "origin" in http://www.w3.org/TR/css3-fonts/

[10:45:01.0000] <loucapo>
but i dont see the header showing in my request's options call

[10:45:02.0000] <annevk>
TabAtkins, also, "suggestions" suggests it's a pretty bad spec

[10:45:03.0000] <annevk>
TabAtkins, and what I've seen in WOFF about CORS is crap too

[10:45:04.0000] <annevk>
TabAtkins, does not follow CORS at all

[10:46:00.0000] <othermaciej>
TabAtkins: nor in the editor's draft

[10:46:01.0000] <othermaciej>
wait, I guess it is in the ED

[10:46:02.0000] <TabAtkins>
annevk: What do you mean?

[10:46:03.0000] <Philip`>
jgraham: I believe constructors are irrelevant to the LSP, because the LSP is about using an object of a type that's a subclass of T as if it were an object of type T, so it's only applicable after you've already constructed the object

[10:47:00.0000] <jgraham>
Philip`: Interesting

[10:47:01.0000] <jgraham>
I hadn't considered that

[10:47:02.0000] <TabAtkins>
annevk: The language used is identical to that used in CSS3 Fonts.

[10:47:03.0000] <othermaciej>
TabAtkins: CSS3 fonts doesn't "suggest" it afaict

[10:47:04.0000] <annevk>
TabAtkins, I mean a) "suggests applying SOR" makes no sense, it should either require it or not and b) WOFF does not properly use CORS as specified by the CORS specification

[10:47:05.0000] <TabAtkins>
othermaciej: You're right.  It simply defines what it means to apply SOR to @font-face resources.

[10:47:06.0000] <AryehGregor>
jgraham, why do the URLs or type have to be part of the base class?  Why not make them members of the derived classes?

[10:48:00.0000] <othermaciej>
btw, who decided to replace the perfectly good term "same-origin policy" with "same-origin restriction"?

[10:48:01.0000] <AryehGregor>
If you have lots of types of single-URL tests, make a SingleUrlTest class that they derive from.

[10:48:02.0000] <annevk>
yeah, "SOR" makes no sense either

[10:48:03.0000] <AryehGregor>
If you want to get all obsessive about OO.

[10:48:04.0000] <jgraham>
AryehGregor: I don't want to get all obsessive

[10:48:05.0000] <TabAtkins>
annevk: I don't immediately see what's wrong with WOFF's use of CORS.  Could you be more explicit?

[10:48:06.0000] <Philip`>
It's not like JS really does OO anyway

[10:48:07.0000] <jgraham>
Having a huge multi-level class heirachy is overkill

[10:48:08.0000] <othermaciej>
TabAtkins: in fact, it doesn't even clearly say UAs MAY apply a same-origin limitation

[10:48:09.0000] <TabAtkins>
othermaciej: I don't see the distinction.

[10:49:00.0000] <jgraham>
But having one level of inheritance seems sensible

[10:49:01.0000] <TabAtkins>
Sorry, that was to SOP vs SOR.

[10:49:02.0000] <othermaciej>
TabAtkins: I don't either, but using a different term sounds like it is drawing a distinction from the traditional terminology

[10:49:03.0000] <annevk>
TabAtkins, to use CORS you need to define that the UA need to do a cross-origin request and set various parameters

[10:49:04.0000] <annevk>
TabAtkins, then you need to deal with the potential return flags of that algorithm

[10:49:05.0000] <annevk>
TabAtkins, as e.g. XMLHttpRequest does

[10:49:06.0000] <annevk>
TabAtkins, @font-face nor WOFF does any of that and are therefore not really using CORS

[10:49:07.0000] <TabAtkins>
annevk: Is it simply defined somewhere in CORS what specs need to say to make it work?

[10:50:00.0000] <annevk>
TabAtkins, yes

[10:50:01.0000] <annevk>
but it is pretty clear nobody has actually read or understood the purpose of CORS

[10:50:02.0000] <othermaciej>
TabAtkins: anyway - the ED (which it's not clear the CSS WG will even agree on) says if you limit fonts to same-origin, you MUST allow relaxation of that limit via CORS

[10:50:03.0000] <TabAtkins>
annevk: As far as I can tell, you've objected to every use of CORS outside of specs that you directly maintain.

[10:51:00.0000] <TabAtkins>
othermaciej: Yes.

[10:51:01.0000] <jgraham>
Philip`, AryehGregor: Thanks

[10:51:02.0000] <annevk>
TabAtkins, no

[10:51:03.0000] <annevk>
TabAtkins, what the fuck is that about?

[10:51:04.0000] <TabAtkins>
annevk: Not meant to be offensive.  It's just that the only time I hear you talk about CORS, it's that some spec is using it wrong.

[10:51:05.0000] <Philip`>
jgraham: All that really matters is whether you can write code that takes an object which you know acts like a Test, without caring which type it really is - inheritance is useful as a way to encode "acts like a Test" in statically typed languages, but that doesn't work in JS, so JS prototype inheritance is just useful as a code-sharing mechanism

[10:51:06.0000] <TabAtkins>
Or that people don't understand it.

[10:52:00.0000] <othermaciej>
it doesn't even say you MAY have a restriction (though presumably that is intended)

[10:52:01.0000] <othermaciej>
TabAtkins: maybe there's nothing to say when people use it right?

[10:52:02.0000] <Ms2ger>
Well, otherwise it wouldn't have to be mentioned, no? ;)

[10:52:03.0000] <annevk>
TabAtkins, oh?

[10:52:04.0000] <Philip`>
jgraham: so it seems fine to not worry much about inheritance hierarchy design

[10:52:05.0000] <annevk>
TabAtkins, other than fonts I'm not aware of anyone trying to use it

[10:52:06.0000] <jgraham>
Philip`: This is actually Python

[10:53:00.0000] <othermaciej>
WebSockets sort of does something similar, but it's not really CORS

[10:53:01.0000] <annevk>
TabAtkins, and CORS isn't easy or anything

[10:53:02.0000] <annevk>
it's really quite complicated

[10:53:03.0000] <loucapo>
not that anyone is available to listen but the only headers on the response i see are:

[10:53:04.0000] <TabAtkins>
annevk: I just skimmed through CORS again, and I can't find anywhere that defines in some simple way what a spec using CORS is supposed to provide.

[10:54:00.0000] <loucapo>
DateTue, 01 Feb 2011 18:53:00 GMTWWW-AuthenticateBasic realm="People Rails RC Environment"Content-Length401ConnectioncloseContent-Typetext/html; charset=iso-8859-1

[10:54:01.0000] <annevk>
which is why it upsets me WOFF is using it without the WG actually understanding what they are doing

[10:54:02.0000] <TabAtkins>
annevk: What chapter are the requirements in?

[10:54:03.0000] <annevk>
TabAtkins, "CORS API Specification Advice"

[10:55:00.0000] <TabAtkins>
annevk: Oh, a "CORS API" is something another spec defines.

[10:55:01.0000] <annevk>
of course

[10:55:02.0000] <annevk>
CORS is a protocol

[10:55:03.0000] <TabAtkins>
In a spec called "CORS", it's not clear to me that "CORS API" is something outside of the spec.  ^_^

[10:55:04.0000] <Philip`>
jgraham: Oh, okay - I suppose that's a bit more OOey, but still not at all strictly

[10:56:00.0000] <TabAtkins>
Not sure what name would be better, though.

[10:56:01.0000] <Philip`>
(hence duck typing)

[10:56:02.0000] <annevk>
I suppose I could rename it to "Advice for specifications using CORS"

[10:57:00.0000] <TabAtkins>
Ah, yeah, that would at least draw the eye better.

[11:05:00.0000] <jgraham>
http://www.googleartproject.com/ is awesome

[11:05:01.0000] <jgraham>
Wonder what we have to do so it can ditch flash for the image viewing

[11:06:00.0000] <TabAtkins>
Most likely, add DRM.

[11:07:00.0000] <jgraham>
That could be the problem I guess

[11:07:01.0000] <jgraham>
Although one would have thought that the paintings were out of copyright (I know the digital reproductions may not be)

[11:08:00.0000] <AryehGregor>
jgraham, the digital reproductions are out of copyright too, at least in the US, but you're not going to get museums' cooperation if you point that out.

[11:08:01.0000] <AryehGregor>
Since they get a lot of revenue from licensing copyrights they don't own.

[11:10:00.0000] <jgraham>
AryehGregor: Right, but not everywhere has the same law as the US there

[11:10:01.0000] <jgraham>
e.g. I think the UK is different

[11:10:02.0000] <AryehGregor>
The UK is unclear, AFAIK.

[11:11:00.0000] <jgraham>
Unclear to me at least :)

[11:11:01.0000] <jgraham>
(but that is diffrent from the US where it is fairly clear)

[11:12:00.0000] <AryehGregor>
I have to say, JS code I write for Chrome basically works fine in IE9.

[11:13:00.0000] <AryehGregor>
As opposed to IE8, where it dies horribly very early on.

[11:13:01.0000] <AryehGregor>
Kudos to the IE team.

[11:14:00.0000] <zcorpan>
is the opposite true? JS code written for IE works in Chrome?

[11:15:00.0000] <Ms2ger>
document.all('x')

[11:15:01.0000] <Ms2ger>
Looks like a yes

[11:16:00.0000] <jgraham>
/me totally has to visit MoMA

[11:16:01.0000] <annevk>
it's quite nice

[11:17:00.0000] <AryehGregor>
How do I feature-test the IE8 JS engine?  I'm actually testing in IE9 in IE8 document mode, so I'm getting confused.

[11:17:01.0000] <othermaciej>
I think IE9's JS engine is more conforming to ES5 than Chrome's

[11:17:02.0000] <AryehGregor>
In IE8 document mode, it fails with "'Node' is undefined", but trying to do something like if (Node === undefined) or if (typeof(Node) == "undefined") gives the same error.

[11:17:03.0000] <jgraham>
Yeah, the IE9 js engine should be very conforming

[11:17:04.0000] <AryehGregor>
Is there some way to say "if 'Node' is a variable name" that works in IE8?

[11:18:00.0000] <AryehGregor>
Maybe TabAtkins would know, he actually writes real web pages sometimes.

[11:18:01.0000] <Philip`>
if (window.Node) ?

[11:18:02.0000] <TabAtkins>
What's up?

[11:19:00.0000] <TabAtkins>
If foo is undefined, (foo === undefined) shouldn't be throwing an error.

[11:19:01.0000] <AryehGregor>
Nice, thanks.

[11:19:02.0000] <AryehGregor>
TabAtkins, this is IE8.

[11:20:00.0000] <TabAtkins>
I haven't cared about browser craziness in some time, sorry.  Last cross-browser dev I did leaned heavily on jQuery.

[11:20:01.0000] <TabAtkins>
Nowadays I just code to Chrome and assume it'll work everywhere, which is usually true.

[11:20:02.0000] <TabAtkins>
(For some definition of "everywhere".)

[11:21:00.0000] <miketaylr>
jgraham: come to NYC to see MoMA and you can work out of Opera Brooklyn (my tiny 2 person office)

[11:23:00.0000] <jgraham>
miketaylr: Sounds awesome, but I'm not sure how well "see MoMA" would go down under "purpose of trip"

[11:23:01.0000] <miketaylr>
heh

[11:24:00.0000] <TabAtkins>
"network with other Opera employees"

[11:24:01.0000] <jgraham>
/me was somewhat considering visiting the US in the summer anyway

[12:10:00.0000] <AryehGregor>
Can anyone tell me why the Selection stringification is empty here for Opera?  http://aryeh.name/spec/innertext/test/innerText.html

[12:11:00.0000] <Workshiva>
"typeof identitifer" shouldn't be throwing reference errors...

[12:11:01.0000] <AryehGregor>
Even in IE8?

[12:12:00.0000] <Workshiva>
Yeah

[12:12:01.0000] <Workshiva>
If the identifier isn't previously declared it should just return undefined

[12:12:02.0000] <AryehGregor>
Oh well.

[12:13:00.0000] <AryehGregor>
Testing window.Node works, anyway.

[12:14:00.0000] <Workshiva>
Yeah, that's the usual approach. I never liked typeof :)

[12:15:00.0000] <Workshiva>
(Side note, Node == undefined is allowed to throw, and typeof is not a function so you don't need to do typeof(x))

[12:19:00.0000] <AryehGregor>
I originally did "typeof x", but tried "typeof(x)" in case it would work.

[12:19:01.0000] <AryehGregor>
Which it didn't.

[12:19:02.0000] <AryehGregor>
Why is Node === undefined allowed to throw?  That's silly.

[12:19:03.0000] <Workshiva>
Because you're referencing an undeclared identifier

[12:19:04.0000] <AryehGregor>
That's either a reason to throw or not to throw, not to allow throwing.

[12:20:00.0000] <Workshiva>
Well, allow as in "throw if there is a reason to throw"

[12:20:01.0000] <Workshiva>
It's not optional

[12:20:02.0000] <AryehGregor>
What's "a reason to throw"?

[12:20:03.0000] <Workshiva>
unresolvable reference

[12:21:00.0000] <AryehGregor>
Also, can anyone help me figure out where the plainText function called here is defined?  I've been looking, but I can't find it.  I want to compare my super-simple innerText to WebKit's real-world implementation: http://www.google.com/codesearch/p?hl=en#OAMlx_jo-ck/src/third_party/WebKit/WebCore/dom/Element.cpp&exact_package=chromium&l=1507

[12:21:01.0000] <AryehGregor>
othermaciej, could you point me to WebKit's plainText implementation, or whatever does the bulk of the work of innerText?

[12:24:00.0000] <AryehGregor>
(I'm beginning to suspect that it uses some kind of internal rendering data structure, not the DOM at all . . .)

[12:25:00.0000] <AryehGregor>
(Which would be hopeless to spec.)

[12:25:01.0000] <TabAtkins>
It might rely on the Render Tree, which is a close analogue to CSS's box tree.

[12:27:00.0000] <Workshiva>
This one maybe? http://www.google.com/codesearch/p?hl=en#OAMlx_jo-ck/src/third_party/WebKit/WebCore/editing/TextIterator.h&q=\bplainText\%28%20lang:cpp&exact_package=chromium&sa=N&cd=3&ct=rc

[12:28:00.0000] <AryehGregor>
It does scary things like respecting text-transform.

[12:28:01.0000] <Workshiva>
(Well, the matching .cpp file anyway)

[12:30:00.0000] <Ms2ger>
Looks like it

[12:31:00.0000] <Workshiva>
Searched for plainText taking a Range as parameter and that was the only one I could see

[12:32:00.0000] <AryehGregor>
I don't get that code at all, but I feel like the code that does the actual work must be someplace else.

[12:32:01.0000] <othermaciej>
AryehGregor: I can look for you after I grab lunch

[12:32:02.0000] <AryehGregor>
Obviously I should just ask in #webkit.

[12:35:00.0000] <AryehGregor>
Ah, I think I see it now.

[12:35:01.0000] <AryehGregor>
handleTextNode() et al.

[12:37:00.0000] <AryehGregor>
Hmm, doesn't seem easy enough to understand to be useful.

[12:38:00.0000] <othermaciej>
yes, you'll need someone to explain what it is doing

[12:38:01.0000] <Ms2ger>
/me hears othermaciej volunteer

[12:39:00.0000] <AryehGregor>
/me asks in #webkit

[12:40:00.0000] <MikeSmith>
we need code-analysis heuristics that magically read source code files and tell us what they do

[12:40:01.0000] <AryehGregor>
/me finds http://www.google.com/codesearch/p?hl=en#OAMlx_jo-ck/src/third_party/WebKit/LayoutTests/fast/dom/inner-text-001.html&exact_package=chromium&d=6

[12:41:00.0000] <Ms2ger>
MikeSmith, why do you want us all unemployed?

[12:42:00.0000] <MikeSmith>
yeah

[12:42:01.0000] <MikeSmith>
then we can all be gentleman and ladies of leisure

[12:42:02.0000] <MikeSmith>
can retire with our riches to a bucolic life in the countryside

[12:43:00.0000] <nimbupani>
hahahaha

[12:43:01.0000] <TabAtkins>
MikeSmith: Yo, question about boilerplate on the specs.

[12:44:00.0000] <TabAtkins>
Art sent me the message that you said to use the HTML5 WD boilerplate for the SotD.  Should I just take the whole thing, replacing spec names when appropriate?

[12:44:01.0000] <roc>
othermaciej, annevk: are you opposed to having *any* standard mechanism which allows authors to control who can deep-link resources on their servers? (I mean subresource loads like IMG, font-face and video, not <a href>)

[12:45:00.0000] <MikeSmith>
TabAtkins: yeah, please

[12:45:01.0000] <othermaciej>
roc: there already is one, isn't there?

[12:45:02.0000] <TabAtkins>
MikeSmith: Okay, just making sure.

[12:45:03.0000] <MikeSmith>
k

[12:45:04.0000] <roc>
othermaciej: which is?

[12:45:05.0000] <othermaciej>
(server-side check of Referer, or Origin in browsers that have it)

[12:45:06.0000] <othermaciej>
sites do take measures to prevent image hotlinking

[12:46:00.0000] <othermaciej>
I'm not sure adding a client-side way to do it for img would be worthwhile

[12:46:01.0000] <roc>
that requires an information leak from to the server and is unreliable due to firewall stripping

[12:47:00.0000] <othermaciej>
I don't think any firewalls strip Origin, though it's true not all browsers send it for subresource loads (yet)

[12:47:01.0000] <roc>
a solution where the browser decide wouldn't have those problems, and could be easier for authors to deploy too

[12:47:02.0000] <othermaciej>
firewall stripping is estimated to affect <5% of users and so would not materially affect the effectiveness of hotlinking prevention

[12:49:00.0000] <erlehmann>
why should a firewall strip headers?

[12:49:01.0000] <othermaciej>
some firewalls strip Refer for privacy purposes

[12:49:02.0000] <TabAtkins>
'cause firewalls are crazy.

[12:50:00.0000] <othermaciej>
or to avoid disclosing URLs on intranet servers that link to external sites

[12:50:01.0000] <roc>
because intranet administrators are concerned about people clicking on a link from worlddomination.google.com to evil.com

[12:50:02.0000] <othermaciej>
Origin should be less of an issue, since it doesn't disclose the full linking URL

[12:50:03.0000] <othermaciej>
though it's true that the hostname itself could leak info

[12:50:04.0000] <othermaciej>
anyway

[12:51:00.0000] <othermaciej>
if there's some general mechanism that can reasonably be applied to IMG, whether client-side or not, I would not be averse to also applying it to @font-face

[12:51:01.0000] <roc>
is Webkit going to start sending Origin for all subresource loads?

[12:51:02.0000] <othermaciej>
I believe we already do

[12:53:00.0000] <roc>
good

[12:53:01.0000] <othermaciej>
trying to figure out how to construct the tcpdump command to verify

[12:54:00.0000] <roc>
I think deploying Origin checking is likely to be very hard for most Web authors though

[12:56:00.0000] <roc>
and "default allow" just seems wrong :-(

[12:56:01.0000] <othermaciej>
well, according to tcpdump I'm wrong (about sending Origin), but I'm not sure why

[12:57:00.0000] <erlehmann>
othermaciej, just use wireshark :)

[12:58:00.0000] <othermaciej>
roc: if we were redesigning the Web from scratch, it might make sense to default to denying cross-origin resource loads, but it seems unhelpfully  inconsistent to do it only for some resource types, and reversing the default on IMG or SCRIPT at this point is likely impossible

[12:58:01.0000] <roc>
I agree that's impossible

[12:59:00.0000] <roc>
I don't buy the consistency argument since we DO default-deny cross-origin for XHR

[12:59:01.0000] <othermaciej>
that said, I'd be fine with an across-the-board hotlinking prevention mechanism that servers can opt into

[12:59:02.0000] <roc>
OK

[12:59:03.0000] <othermaciej>
if it was materially easier than checking headers

[12:59:04.0000] <roc>
I ask mainly because I've heard some people claim that any such mechanism is "against the spirit of the Web" or something like that

[13:00:00.0000] <othermaciej>
well, servers can do it already

[13:00:01.0000] <othermaciej>
if we had a header that a server could send to ask the browser to limit embedding, that doesn't seem hugely different

[13:00:02.0000] <roc>
people do all kinds of things that are against the spirit of the Web :-)

[13:00:03.0000] <othermaciej>
since adding a static header to a resource might be easier than checking a request header

[13:01:00.0000] <othermaciej>
XHR is different because it lets you read the response

[13:01:01.0000] <othermaciej>
not just embed it in an opaque way

[13:01:02.0000] <othermaciej>
same-origin policy is traditionally about preventing actual access to data from another site, not preventing embedding

[13:02:00.0000] <othermaciej>
(XHR has the added wrinkle that it can make requests that could be dangerously side-effecting which are otherwise impossible to produce from a WEb page)

[13:02:01.0000] <othermaciej>
I would also want to get rid of cross-origin non-GET form submission if that was possible

[13:02:02.0000] <roc>
I understand why it's different, but it's still not consistent

[13:02:03.0000] <othermaciej>
sadly, probably not

[13:03:00.0000] <roc>
and denying cross-origin loads is still not a new concept on the Web

[13:03:01.0000] <othermaciej>
fonts are like images or video in that respect, not like XHR

[13:03:02.0000] <roc>
the distinction between "reading" and "embedding" makes sense but I don't know if authors appreciate it ... and in practice, the distinction is not so clear, witness all the information leak issues we've had with cross-origin CSS loads etc

[13:03:03.0000] <othermaciej>
neither of the reasons that XHR is different apply (reading result, sending dangerous requests)

[13:04:00.0000] <othermaciej>
agree; if starting from scratch, it might make sense to reverse the polarity

[13:05:00.0000] <othermaciej>
I think adding an Allow-Embedding-From-Origins: header that works across the board would be reasonable and possibly helpful to authors

[13:05:01.0000] <Dashiva>
Alex Russel believes that doing perfect browser detection is so simple he leaves it as an exercise for the reader, no need to actually demonstrate how

[13:06:00.0000] <Ms2ger>
All you need is indexOf("Netscape")

[13:07:00.0000] <annevk>
roc, I think we need a generic blocking mechanism that can be used for fonts/images/scripts/framed resources/etc.

[13:08:00.0000] <annevk>
roc, using CORS for fonts and something else for all the other stuff is somewhat insane

[13:08:01.0000] <annevk>
plus, CORS is not meant for blocking

[13:09:00.0000] <roc>
that is why we want a default-same-origin policy for fonts

[13:09:01.0000] <roc>
well, one of the reasons

[13:09:02.0000] <annevk>
but our platform is such that such resources work cross-origin by default

[13:09:03.0000] <annevk>
singling out fonts is silly

[13:09:04.0000] <roc>
no it's not, see above

[13:09:05.0000] <annevk>
XHR is reading data

[13:09:06.0000] <annevk>
fonts is like images

[13:09:07.0000] <annevk>
and scripts

[13:10:00.0000] <annevk>
you cannot read the data, just use it

[13:10:01.0000] <roc>
it's "cross origin by default" when you "embed" a resource instead of "reading" it, which it turns out is a rather slippery distinction in the presence of cssText etc

[13:10:02.0000] <jcranmer>
you might be able to pixel-hunt images

[13:10:03.0000] <annevk>
and we're gonna have CORS for images, to enable not getting <canvas> tainted

[13:10:04.0000] <annevk>
same would apply with fonts

[13:10:05.0000] <Ms2ger>
AryehGregor, gave you access to the data repo too, I forgot earlier

[13:12:00.0000] <annevk>
i gotta go

[13:12:01.0000] <annevk>
maybe later tonight

[13:12:02.0000] <AryehGregor>
Ms2ger, oh, okay, thanks.

[13:13:00.0000] <AryehGregor>
I'll update that at some point, then.

[13:13:01.0000] <Ms2ger>
Would be nice ;)

[13:14:00.0000] <roc>
this "embedding" vs "reading" distinction actually constrains our API design, because we have to make sure that we minimize data leakage from resources that are only "embeddable", not "readable"

[13:14:01.0000] <roc>
are there any genuine use-cases for resources being "embeddable but not readable", other than legacy content?

[13:14:02.0000] <annevk>
yes, all our APIs do that

[13:15:00.0000] <othermaciej>
roc: thinking about it more, it seems like a possibly useful state to be able to allow cross-site embedding, but not cross-site reading

[13:15:01.0000] <roc>
othermaciej: maybe; what are the use-cases?

[13:15:02.0000] <othermaciej>
I'm not sure that's necessarily true for fonts, but it seems clearly true for non-font resources

[13:15:03.0000] <roc>
how about images?

[13:16:00.0000] <roc>
scripts? css? (note that CSS isn't really supported, because cssText exists --- do authors resent that?)

[13:16:01.0000] <TabAtkins>
I don't really see any author caring about the distinction between their resources being downloaded for an embed vs for a read.

[13:17:00.0000] <othermaciej>
we allow image embedding but not image reading by default

[13:17:01.0000] <roc>
for legacy reasons

[13:17:02.0000] <othermaciej>
and I think most would agree we can't change either of those defaults

[13:17:03.0000] <TabAtkins>
roc: imxp, no one cares about cssText allowing reading of CSS.

[13:17:04.0000] <roc>
othermaciej: I agree, of course

[13:18:00.0000] <othermaciej>
so it seems that a priori it must be a useful state

[13:18:01.0000] <roc>
othermaciej: the point is, are we carrying this "embedding vs reading" distinction forward into new resource types just for the sake of consistency with legacy stuff? Or are there genuine use-cases for it?

[13:18:02.0000] <erlehmann>
roc, what is your problem with canvas tainting? do you see dom tainting coming? ;)

[13:18:03.0000] <roc>
it's complexity

[13:18:04.0000] <roc>
it surprises authors

[13:18:05.0000] <TabAtkins>
erlehmann: canvas tainting is similar to xorigin iframes being limited.

[13:19:00.0000] <roc>
as far as I know, it has not real purpose other than working around a mistake in the design of the Web

[13:19:01.0000] <erlehmann>
for me, as an author, it took some time to figure out to do embedding <video> correctly. also, i had to lecture people on it.

[13:19:02.0000] <roc>
othermaciej: I don't think distinguishing "embedding" from "reading" for images was a conscious design decision

[13:19:03.0000] <erlehmann>
even people who had worked with XHR before.

[13:20:00.0000] <othermaciej>
my tentative position is that if we can't eliminate the distinction, it's better to be consistent about it

[13:20:01.0000] <roc>
originally, there was only embedding, and cross-origin loads were allowed because, hey why not? The problems we were going to have were not understood at the time

[13:21:00.0000] <roc>
later we wanted to add the ability to read, and then we realized that cross-origin reading is bad, so we had to create a distinction

[13:21:01.0000] <othermaciej>
besides embedding and reading, there is also linking

[13:21:02.0000] <othermaciej>
I'm guessing we don't want to give an easy client-side way to prevent cross-origin linking, though servers can make a vague semi-effective attempt at it server-side

[13:21:03.0000] <TabAtkins>
I believe free xorigin linking is a Good Thing, at least.

[13:22:00.0000] <othermaciej>
embedding seems to be intermediate between reading and linking, to me

[13:22:01.0000] <roc>
so do I

[13:22:02.0000] <erlehmann>
preventing cross-origin linking, haha. that would lead to even more fuckuppery.

[13:23:00.0000] <Hixie>
AryehGregor: thanks

[13:23:01.0000] <erlehmann>
othermaciej, funny enough, at least the german justice system distinguishes between embedding or linking to resources (IANAL)

[13:24:00.0000] <roc>
if we don't have actual use-cases for distinguishing embedding vs reading, I think propagating it forward into new resource types for the sake of consistency is a mistake

[13:24:01.0000] <erlehmann>
roc, embedding is different because usually it does not leak information. amirite?

[13:24:02.0000] <othermaciej>
well, it applies to most existing resource types, which are also by far the most common resource types

[13:24:03.0000] <erlehmann>
or rather, it should not.

[13:24:04.0000] <roc>
I mean, should we taint the canvas when we draw glyphs from a cross-origin font?

[13:25:00.0000] <othermaciej>
I don't think it reduces cognitive load to make it different for new resource types

[13:25:01.0000] <roc>
if we add the ability to extract path data from a font, should that be conditional on the origin?

[13:25:02.0000] <roc>
or do we have to decide right now that no-one will ever have sensitive data in a font?

[13:25:03.0000] <erlehmann>
roc, why not? it prevents data-spills.

[13:26:00.0000] <roc>
if we do make it conditional, I'm very confident that authors will trip over it and be surprised

[13:27:00.0000] <erlehmann>
roc, authors are surprised already with tainted canvases.

[13:27:01.0000] <roc>
exactly

[13:27:02.0000] <erlehmann>
so better keep that consistent.

[13:27:03.0000] <roc>
no! :-)

[13:27:04.0000] <erlehmann>
the second time something cross-origin paints on the canvas, no one will be surprised.

[13:28:00.0000] <roc>
You also have to decide where to draw the line

[13:28:01.0000] <erlehmann>
but if you make it into a lookup table what can be done and what cannot, it *will* surprise people.

[13:28:02.0000] <erlehmann>
you are mixing unexpected behaviour with not-so-easy-to-work-with behaviour?

[13:28:03.0000] <roc>
do you expose font tables?

[13:28:04.0000] <roc>
glyph metrics?

[13:29:00.0000] <roc>
this is because the distinction between "embedding" and "reading" is artificial as noted above

[13:29:01.0000] <erlehmann>
roc, why can't the line for cross-origin be “default deny”

[13:29:02.0000] <erlehmann>
roc, embedding should not leak data. reading should.

[13:29:03.0000] <roc>
everything leaks data

[13:29:04.0000] <roc>
<img> leaks the image size

[13:29:05.0000] <roc>
canvas.measureText leaks font data

[13:31:00.0000] <erlehmann>
so embedding should leak the least amount of data. reading should leak the maximum amount.

[13:31:01.0000] <erlehmann>
“some X are Y, so every X should be Y” is not really an argument.

[13:31:02.0000] <roc>
trying to preserve an embedding vs reading distinction forces us to decide early, for all time, exactly where we want to draw that artificial line, and creates crazy security requirements for Web authors like "don't correlate sensitive information with the size of an image on your intranet"

[13:31:03.0000] <erlehmann>
neither is “all X are to some extent Y, so all X should be Y to full extent”

[13:34:00.0000] <roc>
I'm not saying a line can't be drawn. It can, we do for images. The problem is that it's arbitrary, it creates strange requirements, authors won't understand it, and worst of all there are not real use-cases , it's just for legacy content

[13:36:00.0000] <othermaciej>
if we think fonts can't contain sensitive information, we could just say that when you're allowed to embed, you're allowed to read, and then we only need to solve the "prevent embedding" problem, ideally in a way that is consistent with other resource types, which also seem to need this feature

[13:36:01.0000] <roc>
right

[13:36:02.0000] <AryehGregor>
/me has suddenly realized that his approach to speccing this doesn't work at all for whitespace trimming . . . hmm, will need to rethink

[13:36:03.0000] <roc>
but if we say there's no distinction between embedding and reading, *and* font loads are cross-origin by default, then we're effectively deciding right now that fonts will never contain sensitive information

[13:37:00.0000] <roc>
that feels like a very big call to me

[13:37:01.0000] <othermaciej>
it seems to me a Limit-Embedding-To-Origins: header (or whatever) could solve the problem in a consistent way for everything

[13:38:00.0000] <roc>
it would help, but it doesn't solve the problems I've just been talking about

[13:39:00.0000] <othermaciej>
well, it would help with the problem of hotlinking of legacy resource types

[13:39:01.0000] <othermaciej>
then the question would be, should fonts adopt a different model instead?

[13:39:02.0000] <roc>
an hour ago I would have said "I don't know", but now I'm thinking "yes"

[13:46:00.0000] <erlehmann>
hhnnnnng. just saying.

[13:46:01.0000] <TabAtkins>
othermaciej: By "different model", do you mean SOR+CORS, or the LETO you strawmanned, or what?

[13:47:00.0000] <othermaciej>
TabAtkins: I don't know what LETO is

[13:47:01.0000] <TabAtkins>
Limit-Embedding-To-Origins

[13:47:02.0000] <othermaciej>
my strawman proposal is to apply that to all resource types, and not make fonts different

[13:48:00.0000] <TabAtkins>
Okay, that's what I was trying to determine.  I couldnt' quite tell what you were trying to say

[13:48:01.0000] <othermaciej>
roc would probably say even if we have that for all other resource types, fonts should be different

[13:48:02.0000] <roc>
well, new resources in general

[13:48:03.0000] <othermaciej>
(presumably still restricted to same-origin embedding by default, with CORS to opt out, so you can enable cross-site embedding by also enabling cross-site reading)

[13:49:00.0000] <roc>
yes

[13:49:01.0000] <othermaciej>
I am thinking it would probably have to be new embedding contexts as opposed to resource types

[13:49:02.0000] <roc>
unless we come up with use-cases for a distinction between reading and embedding, of course

[13:49:03.0000] <roc>
and a good way to define them!

[13:49:04.0000] <othermaciej>
since for instance PDF in an <iframe> should follow same rules as HTML in an iframe

[13:49:05.0000] <roc>
yes, I meant new categories

[13:50:00.0000] <othermaciej>
I think new resource types with a new embedding context come along rarely

[13:50:01.0000] <othermaciej>
one problem with the WOFF requirement is that it's tied to the format, not the embedding context

[13:52:00.0000] <roc>
hard to predict

[13:55:00.0000] <TabAtkins>
Right, that's probably an architectural mistake.

[13:58:00.0000] <roc>
this has been a stimulating discussion, thanks othermaciej

[13:59:00.0000] <othermaciej>
roc: thanks to you too

[13:59:01.0000] <othermaciej>
best discussion I've had on this topic so far

[14:00:00.0000] <zcorpan>
/me hasn't been following

[14:00:01.0000] <zcorpan>
what's the conclusion?

[14:01:00.0000] <roc>
I concluded that I was more right than I thought

[14:01:01.0000] <roc>
hey, it was an Internet discussion, what did you expect?

[14:02:00.0000] <roc>
alright, gotta catch a bus

[14:02:01.0000] <zcorpan>
"arguing on the internet..."?

[14:05:00.0000] <zcorpan>
/me realizes that a graphical password on a touch device is pretty useless unless you clean the screen every time

[14:06:00.0000] <zcorpan>
finger print to unlock would be better

[14:09:00.0000] <TabAtkins>
finger print works pretty good imxp.  My wife's computer has that for the windows unlock, and it reliably reads my fingers (and doesn't read the fingers I don't have stored)

[14:10:00.0000] <zcorpan>
i guess there are no smartphones with finger print support yet

[14:11:00.0000] <TabAtkins>
Even better is a thermal camera that can read faceprints.  My university was working on that.

[14:11:01.0000] <zcorpan>
can't that be fooled by holding up a picture in front of the phone?

[14:11:02.0000] <TabAtkins>
No, it uses thermal to read your face capillaries.

[14:12:00.0000] <TabAtkins>
Apparently they are highly uniquifying, and easy to read.

[14:12:01.0000] <zcorpan>
interesting

[14:12:02.0000] <Philip`>
Doesn't sound like it'll work well for zombies

[14:13:00.0000] <TabAtkins>
I consider discrimination against zombies justified.

[15:23:00.0000] <AryehGregor>
lol, so Bing copies Google search results.


2011-02-02
[16:06:00.0000] <AryehGregor>
Argh, MikeSmith disappeared again.

[16:08:00.0000] <Hixie>
he's travelling

[16:20:00.0000] <annevk>
hmm, roc thinks he's even more right than before?

[16:20:01.0000] <annevk>
that does not bode well

[16:21:00.0000] <annevk>
oh well

[16:21:01.0000] <annevk>
months ago I already resigned myself to being right in hindsight

[16:21:02.0000] <Hixie>
between you, roc, and myself (in private e-mail just now), i can't imagine why people think we're arrogant. :-P

[16:23:00.0000] <erlehmann>
TabAtkins, biometrics is fundamentally flawed. but you should know that.

[16:23:01.0000] <annevk>
Hixie, :)

[16:23:02.0000] <erlehmann>
zcorpan, use a hand-held keyfob token for your hand-held touch device ;)

[16:23:03.0000] <annevk>
btw, "Two Steps From Hell" makes some epic music

[16:29:00.0000] <annevk>
http://googleblog.blogspot.com/2011/02/microsofts-bing-uses-google-search.html -- doesn't Bing have negligible market share? I wonder why they care...

[16:29:01.0000] <AryehGregor>
No, they have substantial market share, because they're the default search in IE.

[16:29:02.0000] <AryehGregor>
They have negligible market share among people who actually chose their search engine and are not Microsoft employees.

[16:30:00.0000] <annevk>
The other thing though, Microsoft seems to be using the power of crowd serving and "the cloud". Playing the Google game...

[16:32:00.0000] <Rik`>
Google has negligible market share but they are growing pretty fast

[16:32:01.0000] <AryehGregor>
"Let input and position be the same variables as those of the same name in the algorithm that invoked these steps."  That's annoyingly brittle.

[16:33:00.0000] <annevk>
And by Google you mean Bing, Rik`?

[16:33:01.0000] <Rik`>
yeah, it's been a long day and I've been celebrating too much :)

[16:33:02.0000] <annevk>
Time to say Happy Birthday?

[16:35:00.0000] <Rik`>
nah, just received a permanent job offer at Mozilla

[16:35:01.0000] <AryehGregor>
Congrats!

[16:35:02.0000] <AryehGregor>
What will the job be, specs or programming or something else?

[16:35:03.0000] <annevk>
Rik`, "just"? Sounds somewhat better :)

[16:36:00.0000] <Rik`>
I've been contracting for 6 months or so. First evangelism and then web dev. And now it's web dev for real :)

[16:36:01.0000] <Hixie>
grats!

[16:36:02.0000] <AryehGregor>
Ah, cool.  So maintaining some part of the Mozilla website, or what?

[16:36:03.0000] <Rik`>
thanks everyone

[16:36:04.0000] <Rik`>
AryehGregor: yep, mostly mozilla.com

[16:36:05.0000] <AryehGregor>
annevk, I interpreted "just" as "just now", not "only".

[16:48:00.0000] <_uf02>
any senior PHP developers interested in a project? will be paying, msg me...

[16:49:00.0000] <AryehGregor>
Try ##php.

[16:49:01.0000] <_uf02>
php are all anti php ironically

[16:49:02.0000] <_uf02>
they're all ruby or python

[16:50:00.0000] <AryehGregor>
So are we!

[16:51:00.0000] <_uf02>
anti-php? so what are you pro ruby or what?

[16:51:01.0000] <_uf02>
if all devs are anti-php why is it the most used or most supported?

[16:51:02.0000] <Hixie>
not used by devs, maybe? :-)

[16:52:00.0000] <_uf02>
most developed shall I say.

[16:52:01.0000] <_uf02>
so what's best in your opinion

[16:54:00.0000] <Hixie>
best for what?

[16:54:01.0000] <_uf02>
there are several back-end languages,  PHP, Ruby, etc..

[16:55:00.0000] <AryehGregor>
PHP is best for administrators of large shared hosts.

[16:55:01.0000] <_uf02>
which one do you recommend? if it isn't php

[16:55:02.0000] <AryehGregor>
So all the large shared hosts use it.

[16:55:03.0000] <AryehGregor>
So all the big web apps are written for it, and all the newbie web developers with cheap shared hosting use it.

[16:55:04.0000] <AryehGregor>
As an actual language, it's horrible.  It wins by appealing to shared hosts, not developers.

[16:56:00.0000] <annevk>
PHP is great for quick hacks

[16:56:01.0000] <Hixie>
_uf02: which i recommend depends entirely on what you want to do with it

[16:56:02.0000] <AryehGregor>
That said, it's the most widely used language for web apps, so I'm not going to say you shouldn't use it.  But I hate writing in it.

[16:56:03.0000] <Hixie>
_uf02: if you're looking for a language to configure Emacs, I'd recomment Lisp. If you're looking for a language to write an OS kernel, I'd recommend C.

[16:56:04.0000] <AryehGregor>
So I'm anti-PHP in that I think it's a horrible language and wish it would die, not that I don't recommend anyone use it.  Often it makes sense (which is why it's so widely used).

[16:57:00.0000] <AryehGregor>
Personally, I like Python.

[16:57:01.0000] <Hixie>
_uf02: if you're looking for a language to write a quick hack that does intense string processing, I'd recommend Perl

[16:57:02.0000] <Hixie>
_uf02: if you're loking for a language to work with a large PHP codebase, I'd recommend PHP

[16:57:03.0000] <_uf02>
I see...

[16:57:04.0000] <Hixie>
etc

[16:57:05.0000] <_uf02>
hixie: I'll give an example of what I want to do, it's basically itunes but on the web

[16:58:00.0000] <_uf02>
that's the most simplest explanation without getting to detailed of what I want

[16:58:01.0000] <Hixie>
if you're looking to write a music player client for web browsers, i'd recommend javascript as the programming language.

[16:58:02.0000] <_uf02>
an organization of mp3s

[16:58:03.0000] <AryehGregor>
Did I mention this is not a good channel to ask?

[16:58:04.0000] <_uf02>
right for that, I'm using jquery obviously

[16:59:00.0000] <Hixie>
AryehGregor is right insofar as the answer you'll get from us is far more likely to be a smartass answer than a useful answer :-)

[16:59:01.0000] <Hixie>
but you're welcome to try your luck :-)

[16:59:02.0000] <AryehGregor>
The people who are answering are mostly trying to amuse themselves by making fun of you for annoying us with off-topic questions, not be helpful.

[17:00:00.0000] <_uf02>
well I still appreciate the input regardless

[17:00:01.0000] <Hixie>
well now, he's not off-topic

[17:00:02.0000] <Hixie>
we don't have a topic

[17:00:03.0000] <_uf02>
thanks guys

[17:08:00.0000] <AryehGregor>
There's no standard for how <br> is supposed to be implemented in terms of CSS, is there?

[17:08:01.0000] <AryehGregor>
If not, I'll have to special-case it for innerText, which is sad.

[17:09:00.0000] <Hixie>
br { content: '\A' } is the theory, iirc

[17:09:01.0000] <Hixie>
dunno how that works with respect to bidi

[17:10:00.0000] <Hixie>
check the html spec's rendering section

[17:10:01.0000] <Hixie>
it talks about <br> a bit

[17:11:00.0000] <AryehGregor>
I was looking there.

[17:12:00.0000] <AryehGregor>
So inline, but content: '\A'; white-space: pre;.  That will work with how I've specced it, I think.

[17:12:01.0000] <AryehGregor>
Except no browser appears to do it that way.  Oh well.

[18:12:00.0000] <Hixie>
AryehGregor: yeah, like i said, theory. :-(

[19:57:00.0000] <karlcow>
http://www.webglearth.org/

[20:49:00.0000] <erlehmann>
chrome breaks on cross-origin on local files in subdirectories. firefox 3.6 does not. why?

[20:54:00.0000] <roc>
because origin checking on local files is not standardized AFAIK

[20:56:00.0000] <erlehmann>
I see. I prefer the same directory origin model Firefox uses, for obvious reasons (local testing without a web server).

[23:55:00.0000] <shichuan_>
gsnedders: may i ask a question about html5 outliner?

[01:53:00.0000] <annevk>
"Please let's make progress." I find that statement somewhat ironic...

[01:55:00.0000] <jgraham>
annevk: Where is that from?

[01:55:01.0000] <jgraham>
/me hopes the ISSUE to remove <progress>

[01:58:00.0000] <jgraham>
/me is disappointed

[02:03:00.0000] <annevk>
jgraham, if I'd known that I would not posted it ;)

[02:03:01.0000] <annevk>
have*

[02:10:00.0000] <annevk>
so should I now write "Introducing inconsistency in the web platform considered harmful"...

[02:10:01.0000] <annevk>
make that more inconsistency

[02:10:02.0000] <annevk>
otherwise it does not make sense

[02:10:03.0000] <jgraham>
example.com changed :(

[02:11:00.0000] <annevk>
managed by IANA, what did you expect?

[02:11:01.0000] <Philip`>
/me wonders how much traffic example.com gets

[02:11:02.0000] <jgraham>
It is pretty annoying that it doesn't just return a 200 and a static document, but does a redirect

[02:12:00.0000] <zcorpan>
woah

[02:12:01.0000] <jgraham>
annevk: re: inconsistency, see /topic

[02:13:00.0000] <zcorpan>
making it redirect makes it not-so-useful for use in examples

[02:13:01.0000] <annevk>
jgraham, the topic is about legacy, not about free-for-all with everything new

[02:14:00.0000] <zcorpan>
/me thought the topic was about leaving your sense of logic at the door

[02:14:01.0000] <annevk>
that is the topic :)

[02:14:02.0000] <jgraham>
annevk: Sure. But you can argue that in this case the legacy is inconsistent and therefore doesn't follow the consistent logic of enforcing the sop everywhere

[02:14:03.0000] <jgraham>
zcorpan: Indeed

[02:14:04.0000] <jgraham>
(about the redirect)

[02:15:00.0000] <annevk>
jgraham, it is actually quite consistent

[02:15:01.0000] <othermaciej>
annevk: did you see me and roc's discussion earlier?

[02:15:02.0000] <annevk>
othermaciej, I should probably reread the last bit

[02:16:00.0000] <othermaciej>
even though he was not persuaded, I think a generic anti-hotlinking header would be a much better approach than limiting font embedding to same-origin and then using CORS to break out

[02:16:01.0000] <jgraham>
annevk: How is it consistent?

[02:16:02.0000] <zcorpan>
othermaciej: i approve of generic anti-hotlinking header

[02:17:00.0000] <annevk>
othermaciej, yeah

[02:17:01.0000] <othermaciej>
jgraham: all existing resource embedding contexts or retrieval APIs in the Web platform follow the rule that cross-site linking is allowed, cross-site embedding is allowed, but cross-site reading is not allowed by default

[02:18:00.0000] <othermaciej>
that seems pretty consistent to me

[02:18:01.0000] <othermaciej>
roc's argument is that the distinction between embedding and reading is bad, therefore @font-face should be different from everything else

[02:20:00.0000] <jgraham>
othermaciej: Right, but his argument that reading->embedding is a continuum rather than a sharp divide seems strong to me

[02:20:01.0000] <jgraham>
/me doesn't particularly care about @font-face fwiw

[02:20:02.0000] <othermaciej>
you could also argue that embedding - > linking is a continuum

[02:20:03.0000] <othermaciej>
but so far we've managed to draw the lines

[02:21:00.0000] <Ms2ger>
Not "@font-face should be different from everything else", but "new features should be different from old junk"

[02:21:01.0000] <othermaciej>
and by "we" I mostly mean "browser hackers who accidentally stumbled into these rules before my time"

[02:21:02.0000] <jgraham>
I would be interested to see a detailed argument of embedding->linking

[02:21:03.0000] <zcorpan>
it'd be nice with a simple way to disable hotlinking for old junk too

[02:21:04.0000] <roc>
othermaciej: embedding -> linking is a continuum?

[02:22:00.0000] <jgraham>
Yes, the anti-hotlinking thing seems good in any case since there is a legacy

[02:22:01.0000] <roc>
what APIs can a document use to interact with a document it links to?

[02:22:02.0000] <othermaciej>
window.open

[02:22:03.0000] <roc>
mmmm OK

[02:22:04.0000] <roc>
but that's only one

[02:22:05.0000] <annevk>
the XLink people certainly considered it a continuum, but XLink is dead

[02:24:00.0000] <othermaciej>
the only differences between <iframe> and window.open are presentation and the possibility of clickjacking

[02:24:01.0000] <othermaciej>
(I hope we can find a decent way to fix the latter)

[02:24:02.0000] <roc>
I agree that the relationships between full-fledged HTML documents are complex

[02:25:00.0000] <roc>
I don't think we need to bring that complexity to other kinds of resources for the sake of consistency

[02:25:01.0000] <othermaciej>
that is a strawman argument

[02:27:00.0000] <roc>
so was "the distinction between embedding and reading is bad, therefore @font-face should be different from everything else" :-)

[02:27:01.0000] <othermaciej>
if you want to say "HTML documents, images, sounds, videos, stylesheets, scripts, other kinds of renderable XML documents, non-renderable XML documents, plaintext, possibly PDFS, and kinda plugin content" in place of "HTML documents"

[02:27:02.0000] <othermaciej>
I will accept your restatement of my position

[02:29:00.0000] <annevk>
making an exception just for fonts is very very weird

[02:29:01.0000] <othermaciej>
I'm willing to replace "@font should be different" with the complete list of new resource types for which the new behavior is proposed, in turn

[02:30:00.0000] <jgraham>
It's only "just for fonts" if we never have a new similar case

[02:30:01.0000] <roc>
not just for fonts, but for any new loading APIs where legacy constraints apply

[02:30:02.0000] <roc>
I can't predict what the next type is going to be

[02:30:03.0000] <roc>
sorry, where legacy constraints *do not* apply

[02:30:04.0000] <jgraham>
An interesting question might be why this didn't happen for <audio> and <video>

[02:30:05.0000] <jgraham>
Which similarly had no legacy

[02:30:06.0000] <roc>
we had legacy constraints for <video>

[02:31:00.0000] <annevk>
because sanity prevailed

[02:31:01.0000] <roc>
Apple had Quicktime videos they wanted to play with the <video> element

[02:31:02.0000] <roc>
and Quicktime already supported cross-origin by default

[02:31:03.0000] <othermaciej>
if you can't predict what the next type is going to be, how can you predict the best design for loading it?

[02:31:04.0000] <othermaciej>
I am skeptical of generalizing from a sample of 1

[02:32:00.0000] <roc>
the argument in my blog is independent of fonts

[02:32:01.0000] <roc>
the same arguments apply to images, and CSS

[02:32:02.0000] <roc>
it's just too late to fix those

[02:32:03.0000] <othermaciej>
particularly since we we seem to be heading towards the long tail of generally useful resource types

[02:40:00.0000] <roc>
one thing is that it's actually not formats that matter here, but loading APIs

[02:41:00.0000] <annevk>
whoa, http://echo.opera.com/ is useful

[02:41:01.0000] <annevk>
and easy to remember as well

[02:42:00.0000] <othermaciej>
right

[02:43:00.0000] <roc>
for example, we could design a new image loading API that only loads same-origin, but has an API that returns everything you want to know

[02:43:01.0000] <othermaciej>
though, if you have a loading API designed to work at least in part with existing formats, that's not very helpful

[02:43:02.0000] <annevk>
roc, CORS is designed so that it can work with <img> as API

[02:43:03.0000] <othermaciej>
doesn't <canvas> achieve that in the form of an access API that uses already-loaded images?

[02:44:00.0000] <roc>
it does, but I believe the taint bit is nasty API

[02:44:01.0000] <annevk>
roc, <img> would just get an additional flag about the readability of the image, true for same origin and cross-origin with CORS

[02:44:02.0000] <annevk>
when true <canvas> would not be tainted

[02:44:03.0000] <othermaciej>
making a new <img> element that you had to use for painting into the canvas would have been worse

[02:45:00.0000] <roc>
right, because duplicate APIs suck too

[02:45:01.0000] <annevk>
yeah, if that is the idea we should revamp CORS

[02:45:02.0000] <annevk>
but I don't think it's a good idea

[02:46:00.0000] <roc>
this is probably all TBL's fault

[02:46:01.0000] <othermaciej>
not sure about that - I don't think there were any embedded resources at all in the original WWW

[02:47:00.0000] <othermaciej>
so I guess you have to blame Andreesen

[02:47:01.0000] <roc>
oh, <img> was introduced in Mosaic?

[02:47:02.0000] <othermaciej>
yep

[02:47:03.0000] <roc>
it's been a while

[02:47:04.0000] <othermaciej>
http://diveintomark.org/archives/2009/11/02/why-do-we-have-an-img-element

[02:48:00.0000] <othermaciej>
it is an amusing story

[02:48:01.0000] <othermaciej>
Tim's idea was <a name=fig1 href="fghjkdfghj" REL="EMBED, PRESENT">Figure </a>

[02:49:00.0000] <roc>
othermaciej: do you think when drawing a cross-origin font into a canvas, we should set the taint bit?

[02:50:00.0000] <othermaciej>
roc: consistency implies yes

[02:50:01.0000] <roc>
is Webkit going to?

[02:51:00.0000] <annevk>
it should only taint when CORS is not involved if we decide it should taint

[02:51:01.0000] <annevk>
because you could get the same data otherwise by loading it directly with XMLHttpRequest

[02:52:00.0000] <roc>
sure

[02:52:01.0000] <annevk>
I wonder though what kind of confidential information could be in a font file

[02:52:02.0000] <roc>
interesting. When we implement pointer-events:visiblePainted or similar for images, and presumably canvases, we'll need to treat tainted canvases as opaque. Or something like that.

[02:52:03.0000] <annevk>
maybe you would steal fonts from a competitor?

[02:52:04.0000] <roc>
no

[02:53:00.0000] <annevk>
why not?

[02:53:01.0000] <roc>
because in almost all cases you could just access the competitor's site directly, download the font, and proceed

[02:53:02.0000] <othermaciej>
Apple has proprietary fonts that exist on intranet servers

[02:53:03.0000] <zcorpan>
annevk: what kind of confiedential information could be in a css file? turned out to be a problem

[02:53:04.0000] <annevk>
roc, I mean like in development fonts

[02:53:05.0000] <roc>
zcorpan: that's exactly the reason I'm paranoid about such things

[02:54:00.0000] <roc>
annevk: I guess, if you can guess the URL

[02:54:01.0000] <annevk>
zcorpan, yeah, people would start using it for smuggling and then stuff would go wrong

[02:54:02.0000] <roc>
that's not really what I'm worried about though

[02:54:03.0000] <annevk>
so yeah, it should taint, just like images

[02:55:00.0000] <zcorpan>
/me files a spec bug

[02:55:01.0000] <roc>
but with the SOR, we don't need to taint. The author discovers the error when the font fails to draw, which is much nicer than later discovering that getImageData fails for unclear reasons

[02:56:00.0000] <roc>
or discovering that they can't click through their canvas even though they marked it pointer-events:visiblePainted

[02:57:00.0000] <Philip`>
annevk: On that echo page: <table mini:hint='folded;Headers' border=0 cellpadding=3 cellspacing=0> - eww, colons :-(

[02:57:01.0000] <zcorpan>
we could log in the error console when a canvas gets tainted

[02:57:02.0000] <annevk>
Philip`, interesting

[02:57:03.0000] <annevk>
roc, depends on whether or not you need getImageData

[02:58:00.0000] <annevk>
roc, and making that easily discoverable from debugging tools will likely be done

[02:58:01.0000] <annevk>
tainting was renamed to origin-clean btw

[02:58:02.0000] <annevk>
took me some time to find the section

[02:58:03.0000] <roc>
tainting is a more generally understood term

[03:00:00.0000] <Philip`>
/me wonders if the canvas should be tainted if you fill a shape with currentColor on a page that uses a CSS file from a different origin

[03:00:01.0000] <roc>
I don't know

[03:01:00.0000] <othermaciej>
I presume the color would already be accessible via getComputedStyle

[03:01:01.0000] <roc>
true

[03:01:02.0000] <Philip`>
Do browsers try to stop you detecting visited links via colours yet?

[03:01:03.0000] <roc>
yes

[03:01:04.0000] <roc>
we lie in getCcomputedStyle

[03:02:00.0000] <othermaciej>
Safari does, as of 5

[03:02:01.0000] <othermaciej>
same design as what's in Firefox I think

[03:02:02.0000] <othermaciej>
(hyatt implemented dbaron's blog post, basically)

[03:02:03.0000] <roc>
there are still timing channel attacks for sniffing history though

[03:02:04.0000] <roc>
but don't tell anyone

[03:02:05.0000] <Philip`>
<style>a:visited{color:red}</style> <a href=...><canvas></canvas></a> ... ctx.fillStyle="currentColor"; // look for red when painting

[03:02:06.0000] <Philip`>
Might that work?

[03:03:00.0000] <othermaciej>
doubt it

[03:03:01.0000] <Philip`>
Okay, good :-)

[03:03:02.0000] <annevk>
seems the spec never used tainting

[03:03:03.0000] <othermaciej>
we always resolve the unvisited style (always both, I think) and pretend the style is the unvisited style for all purposes besides painting

[03:04:00.0000] <roc>
annevk: "tainting" is just the word people use for this kind of scheme

[03:04:01.0000] <roc>
there are programming languages where "high-security" variables can be marked tainted

[03:05:00.0000] <roc>
well, "a word" ... other terms are also used

[03:05:01.0000] <othermaciej>
tainting is sometimes used to refer to the opposite, where you "taint" untrusted data so that you can avoid accidentally using things computed from it without validation

[03:06:00.0000] <annevk>
oh, I got what tainting meant out of context, I just had a hard time finding the appropriate <canvas> section

[03:06:01.0000] <othermaciej>
that is what taintperl does, for example, was very popular in the late 90s

[03:06:02.0000] <othermaciej>
for writing your CGI scripts

[03:06:03.0000] <annevk>
but this additional info is cool :)

[03:07:00.0000] <Philip`>
Using taint mode in Perl still seems the recommended approach

[03:07:01.0000] <Philip`>
(via a command-line argument, not a separate executable)

[03:08:00.0000] <othermaciej>
that is one reason I find "tainting" to not be the best term for the canvas behavior, since it is sort of the opposite of perl

[03:11:00.0000] <roc>
"dynamic information flow analysis" sounds cooler anyway

[03:12:00.0000] <annevk>
what was it again? needs more cowbell?

[03:25:00.0000] <roc>
here's another information leak question, a non-hypothetical one. Is it OK for pointer-events:visiblePainted to let mouse events pass through the transparent pixels of cross-origin <img>s, given that with elementFromPoint() this leaks information about whether each pixel of the image is transparent?

[03:25:01.0000] <roc>
and should this depend on CORS? :-)

[03:31:00.0000] <roc>
maybe we should make <image> only load same-origin images, and give it all the APIs that don't want to worry about information leakage, and have pointer-events work on it

[03:33:00.0000] <annevk>
we cannot really change <img> at this point

[03:33:01.0000] <annevk>
or do you mean SVG <image>?

[03:33:02.0000] <othermaciej>
I think maybe roc means to change <image> to no longer map to the <img> element but rather act as a different same-origin-only element

[03:34:00.0000] <othermaciej>
not sure if it was a serious proposal

[03:34:01.0000] <roc>
I'm half joking

[03:34:02.0000] <annevk>
okay :)

[03:34:03.0000] <annevk>
can we not just add a flag to <img>?

[03:34:04.0000] <annevk>
for "safeness"

[03:35:00.0000] <othermaciej>
if pointer events work same-origin only, then it's not really helpful to authors to then also require embedding their images via <image> instead of <img>

[03:35:01.0000] <othermaciej>
the implementation part is easy in any case

[03:35:02.0000] <roc>
actually it is helpful

[03:35:03.0000] <roc>
because if you get into the habit of using <image>

[03:35:04.0000] <roc>
and you accidentally get a cross-origin image

[03:35:05.0000] <roc>
the error is easier to diagnose

[03:36:00.0000] <annevk>
we could just have an event or some such for that

[03:36:01.0000] <annevk>
or a property on <img>

[03:36:02.0000] <annevk>
<img>.readable

[03:36:03.0000] <othermaciej>
except that usually you are not using pointer-events, so your habit just makes more things fail

[03:36:04.0000] <othermaciej>
it's like sending XML to browsers to avoid the perils of "tag soup"

[03:37:00.0000] <roc>
now that's a low blow

[04:02:00.0000] <AryehGregor>
I don't think we're going to introduce enough new resource types that distinguishing between embedding and reading in new resource types would appreciably increase security.

[04:02:01.0000] <AryehGregor>
A general-purpose anti-hotlinking header sounds like a much better idea.

[04:03:00.0000] <AryehGregor>
Fonts might leak some information someday, but in how many cases are you really going to be able to get information from font embedding that you can't get from embedding imgs, iframes, etc.?

[04:03:01.0000] <AryehGregor>
Sites that need extra security (or want to save bandwidth) should be allowed to say that they don't want any of their resources used cross-origin.

[04:04:00.0000] <annevk>
Yeah, that is indeed the other point. We never drastically change design patterns because the unknown future will do things a certain way.

[04:04:01.0000] <Workshiva>
Would the header help much for bandwidth? I don't imagine browsers would like to HEAD every external resource

[04:04:02.0000] <AryehGregor>
Browsers should also probably apply such restrictions by default to non-intranet sites that try to load stuff from intranet sites.

[04:04:03.0000] <AryehGregor>
Workshiva, it will work for bandwidth because when all browsers implement this, people won't bother hotlinking from the site since the image will be broken.

[04:04:04.0000] <annevk>
Workshiva, loading happens incrementally, so you can close the connection once you see the header

[04:05:00.0000] <AryehGregor>
That too.

[04:05:01.0000] <Workshiva>
AryehGregor: I disagree with that

[04:05:02.0000] <AryehGregor>
Which part?

[04:05:03.0000] <Workshiva>
I did anti-hotlinking on my server for a long time by replacing the image with a fixed "Don't hotlink"

[04:05:04.0000] <annevk>
Workshiva, you get the same with CORS by the way

[04:05:05.0000] <Workshiva>
Yet people still hotlinked without worry, I guess because their own browser displayed the cached version of the image

[04:06:00.0000] <AryehGregor>
Which wouldn't happen here.

[04:06:01.0000] <annevk>
Indeed, the header would be part of the cache

[04:19:00.0000] <roc>
AryehGregor: I can't tell whether you want to distinguish embedding from reading in fonts or not

[04:21:00.0000] <AryehGregor>
roc, I agree with you that ideally we should have had the distinction from the start, but I don't think there's any mileage in trying to impose it now.  Meaningfully addressing the problem will require some form of crackdown on all embedding.

[04:22:00.0000] <AryehGregor>
I don't think it's a big deal either way whether fonts can be embedded cross-origin.

[04:22:01.0000] <AryehGregor>
It's not a big security problem, but it's not a really big consistency problem either.

[04:22:02.0000] <AryehGregor>
If we have a decent general-purpose embedding solution, I'd think the security problem from cross-origin font embedding would be negligible, so may as well go for consistency.

[04:23:00.0000] <AryehGregor>
To start with, since so many of the scenarios under discussion revolve around public sites embedding stuff from intranets, could that just be banned by default, or would that be too big a compat risk?

[04:23:01.0000] <roc>
that didn't really answer the question

[04:23:02.0000] <AryehGregor>
Well, it did.  I'm ambivalent.

[04:23:03.0000] <AryehGregor>
Leaning slightly toward no, don't bother distinguishing.

[04:24:00.0000] <roc>
do you think that drawing a cross-origin font to a canvas should clear the origin-clean flag, like cross-origin images do?

[04:24:01.0000] <AryehGregor>
That seems like it makes sense, I guess.  I'm still ambivalent.  :)

[04:25:00.0000] <roc>
maybe a better question is, do you think an API that lets script access the complete original font data from a cross-origin-loaded font would be OK?

[04:25:01.0000] <AryehGregor>
No, that sounds dangerous.

[04:25:02.0000] <roc>
Ok, so you do want a distinction between embedding and reading

[04:25:03.0000] <AryehGregor>
No, because I'd also be okay with banning cross-origin embedding as well.

[04:26:00.0000] <AryehGregor>
I just wish CORS were easier to use.

[04:26:01.0000] <AryehGregor>
HTTP headers stink.

[04:30:00.0000] <annevk>
CORS is not really designed for static files either

[04:31:00.0000] <annevk>
well, it was initially, but then all kinds of requirements made that a lot trickier

[04:37:00.0000] <annevk>
is RTW (Real-Time Web) going to be the next buzzword?

[04:38:00.0000] <zcorpan>
what would it mean?

[04:38:01.0000] <annevk>
DHTML -> XHTML/Semantics -> Ajax -> Web 2.0 -> HTML5 -> ...

[04:38:02.0000] <annevk>
zcorpan, instead of app-driven the web is driven by you and everyone, it's "live"

[04:38:03.0000] <jgraham>
RTW seems like a natural sucessor to Ajax

[04:39:00.0000] <jgraham>
But it's not very catchy

[04:39:01.0000] <jgraham>
Mind you neither is HTML5

[04:40:00.0000] <zcorpan>
i dunno, the pattern so far has been something with "HTML" in it twice, then something without "HTML" in it twice, which suggests the next buzzword is something with "HTML" in it

[04:40:01.0000] <zcorpan>
maybe DHTML to close the circle?

[04:40:02.0000] <jgraham>
RTHTML5?

[04:40:03.0000] <annevk>
HTML Living Standard -> HTML Live

[04:40:04.0000] <zcorpan>
HTMLive

[04:41:00.0000] <annevk>
hahaha

[04:41:01.0000] <annevk>
that one is brilliant

[04:41:02.0000] <jgraham>
I can imagine LiveWeb or something catching on, except Microsoft polluted "live"

[04:42:00.0000] <jgraham>
(also, "Web" isn't great in a buzzword because it is the infrastructure rather than the technology that you are using that makes you better than everyone else)

[04:43:00.0000] <zcorpan>
yet Web 2.0 was a pretty successful buzzword

[04:48:00.0000] <jgraham>
Yeah, true

[04:57:00.0000] <beowulf>
HTML 2.0

[04:57:01.0000] <beowulf>
no, wait...

[04:59:00.0000] <Ms2ger>
XHTML 2.0, if we're going to mix

[05:00:00.0000] <jgraham>
/me is rooting for RealHTML

[05:10:00.0000] <karlcow>
The evolution in HTML looks like the history of computing server side, client side, server side, client side, rinse and repeat.

[05:10:01.0000] <karlcow>
a bit like light. It is a wave! It is a particle! It is a wave! … etc.

[05:15:00.0000] <jgraham>
The difference being that the client/server thing is a simple symbiotic relationship whereas QED is deeply weird shit

[05:31:00.0000] <beowulf>
Continuity HTML is a joke no-one here is going to get

[05:34:00.0000] <Philip`>
Did Continuity HTML split out from Provisional HTML?

[05:35:00.0000] <beowulf>
Philip`: yes! but only after the Real HTML had already done so

[06:01:00.0000] <Savage^>
heya

[06:01:01.0000] <Philip`>
Hi

[06:02:00.0000] <Savage^>
is it true that the 0.90 download on http://code.google.com/p/html5lib/downloads/list is for Python 2.x?

[06:03:00.0000] <Savage^>
and where is the download for python 3.0 (the source is in the repo, so it should be somewhere, right?)

[06:04:00.0000] <gsnedders>
Savage^: yes, nowhere (and there's no guarantee it works, and it's certainly out of date)

[06:04:01.0000] <Savage^>
bottom line is I should just use python 2?

[06:05:00.0000] <annevk>
yes

[06:05:01.0000] <annevk>
is Python 3 gonna make it anyway?

[06:05:02.0000] <Savage^>
alright thanks for clearing that up

[06:05:03.0000] <Savage^>
I started learning python yesterday, so I thought I'd just use the latest python version.

[06:05:04.0000] <Savage^>
But things are not that simple on the internet....

[06:06:00.0000] <annevk>
Python 3 was the great new thing, but now it seems like it failed like XHTML 2.0

[06:06:01.0000] <Savage^>
Seems like a bad idea to make a non-backwards compatible version of your language in the first place.

[06:07:00.0000] <annevk>
compatibility wins and beauty dies; interwebs is a sad place

[06:07:01.0000] <gsnedders>
If Unladen-Swallow had got merged in, it might've had some advantage to convince people to move.

[06:07:02.0000] <annevk>
is the the JIT stuff?

[06:07:03.0000] <annevk>
they're making that work for 2.x too

[06:08:00.0000] <Savage^>
Well with software you just live with the mistakes from the past, right?

[06:08:01.0000] <Savage^>
No point in rewriting things every version...

[06:08:02.0000] <jcranmer>
non-backwards compatability can work if you're really willing to kill off the old stuff

[06:08:03.0000] <annevk>
Savage^, right

[06:08:04.0000] <Savage^>
Look at the windows PE (.exe) format

[06:09:00.0000] <gsnedders>
annevk: The original work was a CPython 2.x branch. Python 2.7 is the last non-bug-fix Python 2 release, and it missed the cut-off for that, so there's a Python 3 branch merging it in.

[06:09:01.0000] <Savage^>
Or x86, for that matter

[06:09:02.0000] <jcranmer>
but, seeing as how python is still working on the 2.x series, convincing people to move to 3.x is not going to work

[06:09:03.0000] <Philip`>
/me notes that Arch Linux makes "python" default to Python 3.x

[06:09:04.0000] <jcranmer>
Savage^: I don't think real 16-bit mode works in 64-bit chips anymore

[06:09:05.0000] <gsnedders>
jcranmer: The only work is bug fixes.

[06:10:00.0000] <jcranmer>
that's still work

[06:10:01.0000] <Philip`>
but rather than port stuff to work with Python 3, people seem to prefer just changing their build systems to run the python2 command instead

[06:11:00.0000] <Savage^>
jcranmer: yes but the whole instruction set is just ugly and ambiguous

[06:11:01.0000] <jgraham>
/me notes that US died because the memory usage was unacceptable and the perf. gains modest

[06:11:02.0000] <jgraham>
Also, Python 3 will be widley used eventually

[06:12:00.0000] <jgraham>
It's not really like XHTML2 at all

[06:12:01.0000] <jcranmer>
just like autoconf 2.61!

[06:12:02.0000] <gsnedders>
jgraham: The memory usage wasn't that bad

[06:12:03.0000] <jcranmer>
it's not like anyone uses autoconf 2.13, right?

[06:12:04.0000] <gsnedders>
PyPy is way quicker than US ever was, though

[06:12:05.0000] <jgraham>
jcranmer: I call bias since you work on Mozilla

[06:13:00.0000] <jgraham>
PyPy is more awesome than a bath full of balloons

[06:13:01.0000] <Savage^>
The people who lose in this are new developers... the first thing I faced was major problems over incompatibilities, not being sure if code snippets are python 2 or 3, etc.

[06:13:02.0000] <jgraham>
Savage^: Yes, it is a problem

[06:14:00.0000] <jgraham>
Anyway, for now use Python 2.x unless you are sure you want to use 3.x

[06:14:01.0000] <Philip`>
They should have made a clear distinction by e.g. changing all keywords in Python 3 to be uppercase

[06:14:02.0000] <jgraham>
Philip`: and renaming it COBOL?

[06:14:03.0000] <Savage^>
I was under the impression python was an easy language to make quick-n-dirty scripts

[06:14:04.0000] <Savage^>
And I'm sure python 2.x was ;)

[06:14:05.0000] <jgraham>
Savage^: And also for making sophisticated applications

[06:14:06.0000] <Savage^>
yes ofcourse

[06:15:00.0000] <Savage^>
Oh well, I installed python 2 now

[06:15:01.0000] <gsnedders>
We should benchmark html5lib with PyPY

[06:15:02.0000] <jgraham>
gsnedders: I assume it would still be rather slow

[06:17:00.0000] <gsnedders>
jgraham: http://speed.pypy.org/comparison/?exe=2%2B35%2C1%2BL&ben=6&env=1&hor=false&bas=none&chart=normal+bars

[06:17:01.0000] <Savage^>
And I am happy to inform you that I built and installed html5lib. Wow. :]

[06:17:02.0000] <karlcow>
annevk: if you tried 2to3, what where the results on html5lib?

[06:18:00.0000] <jgraham>
gsnedders: So about a 50% improvement

[06:18:01.0000] <jgraham>
Not bad

[06:18:02.0000] <jgraham>
karlcow: There is a bunch of stuff that has to be fixed up by hand

[06:18:03.0000] <karlcow>
yeah. I can imagine. Was it a lot?

[06:18:04.0000] <jgraham>
Also, the strings vs bytes stuff needs rather careful consideration so that the API makes sense

[06:19:00.0000] <Philip`>
50% doesn't sound much, compared to Javascript engines that all double in speed every six months for the past several years

[06:19:01.0000] <Peter`>
Microsoft just released a plugin for Google Chrome which adds support for H.264

[06:19:02.0000] <gsnedders>
jgraham: I wonder what difference it would make for PMS

[06:19:03.0000] <jgraham>
Not a huge amount. Someone could make a port in a weekend

[06:19:04.0000] <Peter`>
http://blogs.msdn.com/b/interoperability/archive/2011/02/01/greater-interoperability-for-windows-customers-with-html5-video.aspx

[06:19:05.0000] <Savage^>
By the way, do you guys do this stuff for a living, or do you just use mIRC from your day jobs?

[06:19:06.0000] <jgraham>
But the problem is how to maintain it

[06:19:07.0000] <Savage^>
Or maybe you're all extremely rich.

[06:19:08.0000] <jgraham>
Savage^: Most people here work for browser vendors

[06:20:00.0000] <jgraham>
So far this has not made me even moderatley rich

[06:20:01.0000] <karlcow>
haha

[06:20:02.0000] <jgraham>
gsnedders: I imagine the first effect it would have is that everything would break, unless lxml works with PyPy these days

[06:20:03.0000] <Savage^>
So do the IE developers get mocked in here?

[06:21:00.0000] <karlcow>
jgraham: it made your memory rich of endless discussions about the Web :p

[06:21:01.0000] <gsnedders>
jgraham: Ah, that's true.

[06:21:02.0000] <jgraham>
karlcow: Doesn't help pay the rent :p

[06:22:00.0000] <hsivonen>
/me wonders how the Chrome Frame folks feel about Microsoft injecting H.264 code into Chrome

[06:27:00.0000] <Philip`>
Firefox should ship a Free HTML5 Video Extension for Chrome which blocks Microsoft's extension

[06:28:00.0000] <Peter`>
:D

[06:29:00.0000] <Rik`>
if it's the same as the Firefox extension, it's not really support for H264 <video>

[06:29:01.0000] <Philip`>
Rather than browser wars where there's only one winner, we can end up with every user running a browser that's an amalgamation of every other browser

[06:29:02.0000] <AryehGregor>
Savage^, we were just commending the IE developers in here the other days for making IE9 such that it can actually run nontrivial JavaScript without browser-specific hacks!

[06:29:03.0000] <Philip`>
"This Extension is based on a Chrome Extension that parses HTML5 pages and replaces Video tags with a call to the Windows Media Player plug-in so that the content can be played in the browser."

[06:30:00.0000] <AryehGregor>
That sounds pretty awful.

[06:30:01.0000] <Philip`>
Rik`: Sounds like it's not really <video> support

[06:30:02.0000] <gavin>
isn't that what their firefox extension does too?

[06:30:03.0000] <jgraham>
I think so

[06:30:04.0000] <Rik`>
so kind of useless

[06:30:05.0000] <Rik`>
that will cause more random bugs reported to web developers

[06:31:00.0000] <jgraham>
Savage^: I think this is us mocking Microsoft developers :)

[06:31:01.0000] <AryehGregor>
At least they aren't auto-installing it yet, right?

[06:32:00.0000] <Savage^>
Haha I don't think they dare come in here, but the mocking is still fun :D

[06:32:01.0000] <AryehGregor>
Given that IE9 uses WebM support if installed, are Google and/or Mozilla planning to auto-install it when they're installed?

[06:32:02.0000] <AryehGregor>
Savage^, no member of the IE team has ever commented in any WHATWG venue, to my knowledge.

[06:33:00.0000] <AryehGregor>
I wouldn't be surprised if they had explicit instructions not to.

[06:33:01.0000] <AryehGregor>
Of course, they barely comment in the HTMLWG either, except for Paul in his role as co-chair.

[06:33:02.0000] <beowulf>
wasn't cwilso in here of a time?

[06:33:03.0000] <AryehGregor>
Not sure why.  Sylvain Galineau is quite active in the CSSWG, for instance.

[06:33:04.0000] <AryehGregor>
Was he?  I dunno.

[06:34:00.0000] <beowulf>
maybe it was the w3c room, my memory is bad

[06:34:01.0000] <AryehGregor>
Of course, now he works for Google, right?  :)

[06:34:02.0000] <beowulf>
true :)

[06:34:03.0000] <gsnedders>
AryehGregor: How much HTML5 stuff are they actively implementing v. CSS stuff?

[06:35:00.0000] <gavin>
AryehGregor: does IE really support WebM (as opposed to vp8)?

[06:35:01.0000] <AryehGregor>
gsnedders, for IE9, probably not as much . . . media elements, canvas . . .

[06:35:02.0000] <AryehGregor>
gavin, I dunno.  I hope so, otherwise it's fairly useless.

[06:35:03.0000] <AryehGregor>
Has anyone tried?

[06:35:04.0000] <miketaylr>
/me fires up windows

[06:36:00.0000] <gavin>
well it certainly doesn't work out of the box

[06:36:01.0000] <miketaylr>
right, have to have the codec there already

[06:36:02.0000] <gavin>
which codec?

[06:37:00.0000] <gavin>
codec is one thing, support for an entirely different container format is another...

[06:37:01.0000] <miketaylr>
oh, we're not talking about vp8, my bad

[06:39:00.0000] <Philip`>
The IE blog has linked to the #whatwg logs occasionally, so presumably they read this or are somehow made aware of its content

[06:40:00.0000] <beowulf>
really? IE people, can I have an IE sticker?

[06:40:01.0000] <Savage^>
hahaha

[06:41:00.0000] <Savage^>
I hear they use russian proxies from the IE headquarters to eavesdrop here...

[06:48:00.0000] <MikeSmith>
Rik`: congrats on moving to full employee, brotherman

[06:50:00.0000] <Rik`>
MikeSmith: hey thanks

[06:50:01.0000] <AryehGregor>
MikeSmith, does the fact that I'm working for Google part-time as an outside contractor/vendor/whatever affect my status as an Invited Expert in the HTMLWG?

[06:50:02.0000] <AryehGregor>
I'd assume that the W3C wouldn't care in any event, since Google already pays them $$$, but I just wanted to check.

[06:51:00.0000] <Ms2ger>
You promised to inform them, iirc

[06:51:01.0000] <MikeSmith>
yeah

[06:51:02.0000] <gsnedders>
AryehGregor: It could matter for patent policy reasons.

[06:51:03.0000] <MikeSmith>
it does matter

[06:51:04.0000] <miketaylr>
hmm no, i can't get webm to play on ie9

[06:51:05.0000] <MikeSmith>
AryehGregor: you should let Raman know

[06:51:06.0000] <AryehGregor>
Even though I'm an outside contractor, not an actual employee?

[06:51:07.0000] <MikeSmith>
T.V. Raman

[06:51:08.0000] <loucapo>
hey all. posted a question on here yesterday but didnt get an answer

[06:51:09.0000] <MikeSmith>
AryehGregor: yes

[06:51:10.0000] <AryehGregor>
Okay.

[06:51:11.0000] <AryehGregor>
Will do.

[06:51:12.0000] <MikeSmith>
thanks

[06:52:00.0000] <AryehGregor>
Where should I contact him?

[06:52:01.0000] <AryehGregor>
Ms2ger, I don't remember what I promised them, it was lots of things.

[06:52:02.0000] <AryehGregor>
That's why I have people like MikeSmith, so that I don't have to remember stuff.

[06:52:03.0000] <MikeSmith>
heh

[06:52:04.0000] <Ms2ger>
I attempted to read through all the things they wanted me to agree to

[06:53:00.0000] <Ms2ger>
I might have missed some

[06:53:01.0000] <MikeSmith>
Raman public contact info is here:

[06:53:02.0000] <MikeSmith>
http://emacspeak.sourceforge.net/raman/

[06:53:03.0000] <MikeSmith>
google address is raman⊙gc

[06:54:00.0000] <AryehGregor>
He's some W3C person who will tell me what paperwork to file or something?

[06:54:01.0000] <MikeSmith>
he's the W3C Advisory Committee rep from Google

[06:54:02.0000] <AryehGregor>
Ah, I see.

[06:55:00.0000] <MikeSmith>
so it is necessary for him to know of and approve any Google reps participating in W3C groups

[06:58:00.0000] <AryehGregor>
Okay, I've e-mailed him.

[06:58:01.0000] <AryehGregor>
What patent concerns are there?

[06:59:00.0000] <annevk>
posted my own Considered Harmful piece

[07:00:00.0000] <annevk>
first time since 2005 apparently

[07:00:01.0000] <Ms2ger>
You wouldn't necessarily have the rights to grant the patent rights to the W3C

[07:03:00.0000] <AryehGregor>
There are only two possible parties here that could possibly hold the patent rights: me and Google.  Both of us have agreed to the W3C patent policy for the HTMLWG.  So what difference does it make?

[07:04:00.0000] <AryehGregor>
I could understand if my employer wasn't a W3C member, or wasn't a member of the HTMLWG, but Google is both.

[07:04:01.0000] <Ms2ger>
Have they agreed to license *your* patent rights, though?

[07:05:00.0000] <AryehGregor>
The patent policy agreement that Google signed covers any patents they own that affect the HTMLWG's specifications (subject to various boring conditions).

[07:05:01.0000] <AryehGregor>
The patent policy agreement that I signed covers any patents I own that affect the HTMLWG's specifications (subject to various boring conditions).

[07:05:02.0000] <AryehGregor>
I don't see any place for the patent policy to not take effect.

[07:05:03.0000] <Ms2ger>
Meh, patents

[07:05:04.0000] <AryehGregor>
Plus, I never signed my patent rights away to Google, only copyrights.

[07:05:05.0000] <AryehGregor>
And I'm not even totally sure about those.

[07:07:00.0000] <gavin>
annevk: I think "(and presumably others at Mozilla)" may not be a fair presumption

[07:08:00.0000] <annevk>
it is what Gecko is shipping

[07:08:01.0000] <annevk>
if only Robert was behind it, I do not think that would be true

[07:09:00.0000] <gavin>
er, what?

[07:09:01.0000] <annevk>
Gecko has a cross-origin restriction on font loading

[07:10:00.0000] <annevk>
I will clarify the sentence to point that out when I come back

[07:10:01.0000] <annevk>
I really have to run now

[07:10:02.0000] <gavin>
oh, well that's going in the other direction

[07:11:00.0000] <gavin>
(restricting embedding vs. allowing reading)

[07:12:00.0000] <gavin>
which I guess may point out that I misunderstood the point of his post

[07:13:00.0000] <gavin>
I don't htnk the main argument for cross-origina restrictions on fonts was consistency, though

[07:13:01.0000] <annevk>
it's inconsistent, that's the whole problem

[07:13:02.0000] <gavin>
I mean consistency wrt reading vs. embedding

[07:14:00.0000] <gavin>
not consistency with the rest of the web platform

[07:14:01.0000] <MikeSmith>
AryehGregor: if Raman makes the determination that your particular situation doesn't require you to participate as a Google rep, then that's fine

[07:15:00.0000] <karlcow>
/me wonders why people from the IE Team do not come here. Maybe no rights from the management? 

[07:15:01.0000] <MikeSmith>
but it's not my call

[07:16:00.0000] <gavin>
annevk: i.e. I think the main reason was "font foundries are going to freak out of XO embedding is allowed" was the real reason, not "we need to deny reading, so we should also deny embedding (as justified in roc's post)"

[07:17:00.0000] <gavin>
(I misread the last sentence in the second last paragraph of roc's post)

[08:19:00.0000] <TabAtkins>
gavin: I don't see why people continually insist on attributing different motivations to roc (and I, and other people) when we state our motivations pretty clearly.

[08:48:00.0000] <gavin>
TabAtkins: hmm?

[08:49:00.0000] <gavin>
I am not attributing motivations to roc...

[08:49:01.0000] <TabAtkins>
Your comment saying what the "real reason" was, about an hour and a half ago.

[08:50:00.0000] <gavin>
that was attributing motivations to Mozilla

[08:50:01.0000] <gavin>
and indeed my point was that roc's motivations and "mozilla's" (whatever that means) may have been different

[08:51:00.0000] <TabAtkins>
Mozilla's motivation is the motivation of its engineers. ^_^

[08:51:01.0000] <gavin>
I am a Mozilla engineer :)

[08:51:02.0000] <TabAtkins>
And thus, Mozilla's motivations are inconsistent. ^_^

[09:07:00.0000] <annevk>
http://blogs.msdn.com/b/ie/archive/2011/02/02/html5-and-web-video-questions-for-the-industry-from-the-community.aspx -- from the community?

[09:07:01.0000] <annevk>
classy, Microsoft

[09:08:00.0000] <annevk>
also fun how they only cite the articles that were against dropping H264 support

[09:09:00.0000] <annevk>
oh hello, we are Microsoft^H^H^H^H^H^H^H^H^Hthe community and have an interest in H264

[09:09:01.0000] <bfrohs>
Well, doesn't surprise me after the incident between Google and Bing yesterday... well, it wouldn't surprise me anyway, being that it is Microsoft.

[09:10:00.0000] <annevk>
ieblog turned into a spinblog

[09:13:00.0000] <Rik`>
"we are so good, we give you plugin for other browsers. oh, btw, you won't be able to do anything other than playing the video"

[09:13:01.0000] <annevk>
I tweeted: "As long as you use Windows you can watch video on the web!"

[09:20:00.0000] <jgraham>
Microsoft's whole business model is based arounf "As long as you use Windows, you can do X"

[09:20:01.0000] <jgraham>
So it's really very unsurprising that they are extending it here

[09:20:02.0000] <jgraham>
+to

[09:30:00.0000] <Rik`>
annevk: the best part is how they claim not to do "uncertainty, fear, or doubt"

[09:39:00.0000] <ls_n>
I'd like to get some clarification on expected behavior of innerHTML assignment to option elements.

[09:41:00.0000] <ls_n>
Currently in FF4, Saf5, Chr8, and IE9, if I create an option element in js off DOM and assign innerHTML = '<img src="404.boom" onerror="alert(\'Oh Hai!\');">'; the onerror handler executes when I attach that option to the DOM.

[09:42:00.0000] <ls_n>
Even though the content model for option is text, and legally, they can't have child nodes (I am correct in this, right?)

[09:44:00.0000] <ls_n>
If Web Inspector is to be believed, Chrome (I didn't test others) does create the img as a child node of the option, and option.innerHTML reports out what was assigned.

[09:45:00.0000] <ls_n>
In fact, any arbitrarily complex markup string appears to be parsed and commuted to childNodes, barring tag soup clean up.

[09:46:00.0000] <ls_n>
But, first, if the content model for option is text, should child node creation be rejected?

[09:48:00.0000] <ls_n>
Related: select.innerHTML = '<option><img ... onerror=...></option>'; creates the option without the img node (pruned by tag soup process?)

[09:48:01.0000] <Philip`>
ls_n: The content model is only relevant for document conformance - it doesn't affect how browsers process the document at all

[09:49:00.0000] <Philip`>
When you assign innerHTML, it'll do http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#parsing-html-fragments

[09:50:00.0000] <Philip`>
and <option> isn't a special case there so it'll just parse the string like a normal HTML fragment and insert it into the option element, I think

[09:52:00.0000] <Philip`>
Oh, http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#reset-the-insertion-mode-appropriately is relevant too

[09:53:00.0000] <Philip`>
option isn't on that list either, so it'll parse like a normal HTML fragment

[09:53:01.0000] <Philip`>
whereas if you do select.innerHTML, then select is on that list so it'll be in "in select" mode

[09:53:02.0000] <Philip`>
which is http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#parsing-main-inselect which ignores tags like <img>

[09:54:00.0000] <Philip`>
So it sounds like those browsers all match the spec

[09:56:00.0000] <ls_n>
Philip`: So the question then is: is the omission of option from the insertion mode list intentional?

[10:01:00.0000] <Philip`>
ls_n: If all browsers implement the same behaviour here, then it's likely intended that the spec should match that

[10:07:00.0000] <TabAtkins>
ls_n: We (Chrome) deal with restricted content models via shadow DOM.  <option>s can have children, they just aren't displayed in any way.

[10:07:01.0000] <Philip`>
(Firefox 3.6 seems to skip the <img> in option.innerHTML, though, as does Opera 11)

[10:08:00.0000] <ls_n>
TabAtkins: it was unexpected that the js handler would execute from that context.

[10:08:01.0000] <Philip`>
(so this seems like partially new behaviour due to HTML5 parser implementation)

[10:08:02.0000] <TabAtkins>
ls_n: They're still ordinary children as far as we're concerned.  We only ignore them for rendering purposes.

[10:09:00.0000] <ls_n>
I understand the technical reasons.  My point is there doesn't seem to be a practical reason for the behavior.

[10:09:01.0000] <TabAtkins>
ls_n: Is there a practical reason for any other behavior?  It's consistent with a model we like, which we're standardizing in our own code and are attempting to specify for other browsers.

[10:10:00.0000] <Philip`>
Why is shadow DOM stuff relevant here?

[10:10:01.0000] <TabAtkins>
(Others dont' necessarily have to use shadow DOM for existing elements, but it certainly makes our code easier.)

[10:10:02.0000] <Philip`>
It all just seems like a natural consequence of the parsing algorithm

[10:10:03.0000] <TabAtkins>
Philip`: <option> elements have an empty shadow tree.  This suppresses the display of their light children.

[10:10:04.0000] <Philip`>
Why is display of children relevant here?

[10:10:05.0000] <TabAtkins>
The parsing algorithm happens to never generate children for them, but if you add children via DOM, they exist but aren't displayed.

[10:11:00.0000] <TabAtkins>
So events, such as <img onerror>, still fire.

[10:13:00.0000] <Philip`>
Display only seems relevant to the extent that the behaviour is due to display being irrelevant as far as image loading and script events are concerned

[10:13:01.0000] <TabAtkins>
Exactly.

[10:13:02.0000] <Philip`>
So it's mostly irrelevant ;-)

[10:13:03.0000] <TabAtkins>
Yes.  But ls_n was thinking that it wasn't, and I was explaining our behavior to show why it was (irrelevant).

[10:14:00.0000] <Philip`>
Ah

[10:16:00.0000] <Philip`>
(Incidentally, Firefox 3.6 with option.innerHTML seems to strip <img> tags but keeps <option>s, so it'll generate nested option elements, which render a little bizarrely)

[10:16:01.0000] <ls_n>
Actually, if you add elements that contain text, the text is displayed, correct?

[10:18:00.0000] <TabAtkins>
Yeah.

[10:18:01.0000] <ls_n>
What seemed inconsistent to me, prior to seeing the insertion mode list, was that option.innerHTML = '<img onerror...>' fired the handler, option.innerHTML = '<div><p><span><img onerror></span></p></div>' fired the handler, but option.innerHTML = '<select><option><img onerror></option></select>' did not.

[10:19:00.0000] <ls_n>
But it is consistent with select.innerHTML = '<option><img onerror></option>'

[10:19:01.0000] <Philip`>
Yeah, option.innerHTML is pretty much like body.innerHTML

[10:20:00.0000] <Philip`>
seemingly for no good reason except that it's what naturally happens when the spec doesn't define special-case behaviour for it

[10:21:00.0000] <Philip`>
/me would hope this isn't something that'll cause compatibility issues with real pages

[10:22:00.0000] <ls_n>
so IMO, it is odd that the assigning select.innerHTML will prune img, but option.innerHTML won't.  Exactly to your point, Philip`

[10:22:01.0000] <TabAtkins>
ls_n: That's because innerHTML invokes the parsing algorithm to create the fragment, and <img> can't be a child of <option>.  ^_^

[10:23:00.0000] <Philip`>
This is far from the most odd aspect of HTML parsing :-)

[10:23:01.0000] <ls_n>
Yeah, I get it.  It doesn't give me that gratifying DWIW feeling, though :)

[10:24:00.0000] <ls_n>
not that I want anyone assigning subtrees to innerHTML of options...

[10:24:01.0000] <Philip`>
Just don't assign anything than text to option.innerHTML and you won't have to worry :-)

[10:24:02.0000] <Philip`>
*other than

[10:24:03.0000] <Philip`>
(The spec would have to add a whole new parser insertion mode to handle this 'correctly', I think)

[10:25:00.0000] <Philip`>
(since it doesn't currently have an "in option" mode)

[10:25:01.0000] <ls_n>
Just that it seemed reasonable in this case not to execute js.  But yeah, exceptional case.

[10:27:00.0000] <ls_n>
Soooo maybe then I need to understand better the justification for "in select"

[10:27:01.0000] <TabAtkins>
The justification is "the internet is crazy".

[10:27:02.0000] <ls_n>
hehe.  See exhibit A: "the internet is crazy"

[10:28:00.0000] <Ms2ger>
Exhibit B: Julian

[10:28:01.0000] <AryehGregor>
MikeSmith, he asked me for "the URL to nominate you -- it's on the html wg page".  I don't see it.

[10:28:02.0000] <MikeSmith>
hang on

[10:28:03.0000] <AryehGregor>
Julian isn't crazy, he just has interests that we don't care about.  Like theoretical purity.

[10:28:04.0000] <ls_n>
if option can have children that just have different display behavior, why not the same for select?

[10:29:00.0000] <AryehGregor>
ls_n, this stuff is mostly dictated by legacy requirements.

[10:29:01.0000] <AryehGregor>
I.e., pages out there expect particular behavior because that's how old browsers behaved.

[10:29:02.0000] <MikeSmith>
AryehGregor: http://www.w3.org/2004/01/pp-impl/40318/change

[10:29:03.0000] <MikeSmith>
I believe

[10:30:00.0000] <MikeSmith>
but I think before he can do that, I may need to have the W3C systems team change your affliliation

[10:30:01.0000] <MikeSmith>
should I go ahead and do that?

[10:30:02.0000] <AryehGregor>
I have no idea what you're asking me, so I find it hard to pick an answer.

[10:30:03.0000] <MikeSmith>
that is, is Raman agreed that you'll be representing Google

[10:31:00.0000] <AryehGregor>
I dunno, he didn't say.

[10:31:01.0000] <AryehGregor>
What are the ramifications?

[10:31:02.0000] <ls_n>
AryehGregor: Sure.  Don't break the web.  But the treatment of select content and option content seems and odd thing to be considered sacrosanct.

[10:31:03.0000] <Philip`>
ls_n: The whole web is sacrosanct as far as breakage is concerned, and select/option are a part of that

[10:32:00.0000] <MikeSmith>
AryehGregor: ramification is just that as far a W3C's concerned you will be a Google participant instead of being an individual participant

[10:32:01.0000] <AryehGregor>
Does that actually have any practical implications one way or another?

[10:32:02.0000] <AryehGregor>
Particularly given that my contract only goes till the end of August?

[10:34:00.0000] <ls_n>
Philip`: that seems a speewing generalization and, in fact, not true.  But I realize at this point that I'm soapboxing.  Closed: invalid (by design).

[10:34:01.0000] <ls_n>
hehe, s/speewing/sweeping/ -- stupid fingers

[10:35:00.0000] <TabAtkins>
Seems correct anyway.

[10:35:01.0000] <TabAtkins>
I thought it was intentional, just misspelled.

[10:35:02.0000] <MikeSmith>
AryehGregor: no particular implications in practice in this case other than the patent-policy thing discussed earlier; and after August we can just change you back to being an individual

[10:35:03.0000] <MikeSmith>
AryehGregor: do you have a Google e-mail address?

[10:36:00.0000] <TabAtkins>
I highly recommend *not* using a google email address, even if you have one.

[10:36:01.0000] <AryehGregor>
MikeSmith, no, I'm totally outside Google.

[10:36:02.0000] <AryehGregor>
The only relationship we have is I do some stuff and they give me money.

[10:36:03.0000] <MikeSmith>
ok

[10:36:04.0000] <Philip`>
AryehGregor: Are you allowed to do evil?

[10:36:05.0000] <AryehGregor>
TabAtkins, why?

[10:36:06.0000] <TabAtkins>
/me is still sad that he's signed up for the FontsWG with his @google.com address.

[10:36:07.0000] <AryehGregor>
Philip`, they didn't say, so I assume so.  But I'm not sure if I can bill for it.

[10:36:08.0000] <AryehGregor>
TabAtkins, why?

[10:36:09.0000] <Ms2ger>
Because then all your emails are sent to spam in gmail?

[10:36:10.0000] <TabAtkins>
AryehGregor: It's inconvenient, especially if you'll be losing control of it later.

[10:37:00.0000] <Hixie>
eah that's why all my public work happens with my hixie.ch address

[10:37:01.0000] <Hixie>
+y

[10:37:02.0000] <TabAtkins>
Ms2ger: Haha.  Not a problem, since I'm *also* subscribed with my personal one.

[10:37:03.0000] <AryehGregor>
Ms2ger, in my experience that doesn't happen when forwarding between Gmail accounts, so I figure it wouldn't happen with google.com either.

[10:37:04.0000] <AryehGregor>
But yeah, corporate e-mail addresses get revoked when you no longer work there, that's true.

[10:37:05.0000] <TabAtkins>
AryehGregor: It does.  I had to add a manual filter keeping @google.com addresses out of spam.

[10:37:06.0000] <AryehGregor>
For some reason, academic addresses seem to stick around forever.

[10:38:00.0000] <AryehGregor>
TabAtkins, might that be because of a bad SPF record?

[10:38:01.0000] <AryehGregor>
google.com.             3600    IN      TXT     "v=spf1 include:_netblocks.google.com ip4:216.73.93.70/31 ip4:216.73.93.72/31 ~all"

[10:38:02.0000] <TabAtkins>
Hmm...  I need to check next time a tobacco promo or british lottery spam gets into my inbox, to see if that's why.

[10:38:03.0000] <AryehGregor>
It's softfail, so theoretically shouldn't break stuff, but it might factor into a heuristic of some kind.

[10:38:04.0000] <Philip`>
List mail from @google.com almost always gets marked as fraudulent in my Gmail

[10:38:05.0000] <TabAtkins>
I get one or two a day in that vein, which constantly surprises me.

[10:38:06.0000] <AryehGregor>
Yeah, because it gets sent by the list instead of google.com servers.

[10:38:07.0000] <AryehGregor>
That's why SPF is of limited use.

[10:39:00.0000] <AryehGregor>
DKIM is better that way, but also doesn't work with lists, which tend to append stuff to the mail.

[10:40:00.0000] <AryehGregor>
MikeSmith, okay, I gave him the URL you gave me.  If it doesn't work, I guess he'll tell me.

[10:40:01.0000] <AryehGregor>
On a different note: the latest IEBlog post, about video, makes some fairly good points.

[10:41:00.0000] <AryehGregor>
It certainly fits with my theory that Microsoft is being basically honest about their motives to oppose WebM.

[10:41:01.0000] <MikeSmith>
AryehGregor: k

[10:41:02.0000] <AryehGregor>
(or not oppose it, but not support it fully either)

[10:42:00.0000] <TabAtkins>
Which points do you like about it?  I thought it was really dishonest.

[10:42:01.0000] <AryehGregor>
1) If there's really no patent risk, Google should indemnify everyone.  Microsoft indemnifies customers against patent issues with Windows.

[10:43:00.0000] <AryehGregor>
2) It should be an actual open standard, not just source code with non-normative documentation.

[10:43:01.0000] <AryehGregor>
3) Embedded devices are still a problem.

[10:43:02.0000] <TabAtkins>
Of the three areas, (1) is ridiculous FUD because h.264 doesn't indemnify anyone either.  (2) is reasonable, but there's no good reason to assume that we *won't* do so.  (3) is stupid, because the plan is obviously *get everyone to support WebM*.

[10:44:00.0000] <AryehGregor>
H.264 has been around for a lot longer, and the patent pool draws patent trolls out of the woodwork -- they can join and get royalties instead of suing.  Microsoft said they'd be okay with an MPEG-LA-style patent pool too, so it's not a double standard.

[10:44:01.0000] <TabAtkins>
And for 3, we have hardware partners releasing WebM decoders *right now*.

[10:45:00.0000] <Hixie>
wow, faulkner really doesn't understand how ATs work

[10:46:00.0000] <AryehGregor>
I'm hoping Google will eventually indemnify people for WebM.  That would pretty much solve things, unless someone starts suing.

[10:46:01.0000] <AryehGregor>
Maybe they're only waiting a while to see if there are any lawsuits before they offer indemnification.  I can hope.

[10:46:02.0000] <TabAtkins>
Hixie: Which failure are you talking about?

[10:47:00.0000] <Hixie>
the hgroup thing

[10:47:01.0000] <Hixie>
he seems to think that anything ARIA doesn't convey can't be conveyed by an AT

[10:47:02.0000] <TabAtkins>
Ah.  I skimmed his emails there.

[10:47:03.0000] <TabAtkins>
That's... completely wrong.

[10:47:04.0000] <Hixie>
yeah

[10:47:05.0000] <Hixie>
oh well

[10:48:00.0000] <TabAtkins>
AryehGregor: I don't think it's SOP to indemnify these sorts of things, is it?

[10:50:00.0000] <AryehGregor>
TabAtkins, it's SOP to indemnify customers, at least.

[10:50:01.0000] <AryehGregor>
Unpaid users, maybe not, but since when is Google standard?

[10:53:00.0000] <TabAtkins>
Granted, but still, just because we're extraordinary in general doesn't mean we're extraordinary in every specific circumstance.

[10:53:01.0000] <TabAtkins>
(Though I would hope that we're not worse than ordinary anywhere, at least.)

[10:54:00.0000] <AryehGregor>
You don't have to be defensive.

[10:54:01.0000] <AryehGregor>
I'm just saying it's perfectly reasonable for Microsoft to not be willing to support WebM without some form of patent protection.

[10:54:02.0000] <TabAtkins>
Not trying to be.  If we were face-to-face, you'd have noted me saying that with an amused tone.

[10:55:00.0000] <AryehGregor>
And that it's reasonable for it to object to being labeled by Google as anti-open web just because it supports H.264 and not WebM.

[10:55:01.0000] <AryehGregor>
(although it's anti-open web in various other ways, of course)

[10:55:02.0000] <TabAtkins>
Actually, I think that that latter point is still reasonable.  Royalty-encumbered technologies are harmful to the open web.

[10:57:00.0000] <AryehGregor>
If they're not willing to use WebM or Theora because of patent fears, they have no choice.

[10:57:01.0000] <TabAtkins>
That doesn't reduce the badness of the decision.

[10:58:00.0000] <TabAtkins>
Something can be objectively bad even if it's personally the best you can do.

[10:59:00.0000] <AryehGregor>
You can't call it a bad decision, or fault them for it, if there are no other options.  You only have a right to complain about the circumstances in that case, not the actor.

[10:59:01.0000] <AryehGregor>
E.g., it's not reasonable to fault Mozilla for supporting Flash.

[11:00:00.0000] <TabAtkins>
Eh, I disagree.  I can still fault Mozilla while recognizing that they have no choice.

[11:00:01.0000] <TabAtkins>
As well, I can distinguish between the relative badness of different options.  Flash is less bad than h.264 due to royalties.

[11:02:00.0000] <Ms2ger>
We have no choice partially because your employer's sites still use flash, TabAtkins ;)

[11:03:00.0000] <TabAtkins>
Ms2ger: I don't disagree!

[11:03:01.0000] <TabAtkins>
^_^

[11:07:00.0000] <TabAtkins>
Argh, list-style-* is badly designed.  list-style-type should have just taken a <url> from the beginning, so we wouldn't need list-style-image.

[11:13:00.0000] <jgraham>
AryehGregor: academic email addresses generally die, in my experience

[11:13:01.0000] <AryehGregor>
After how long?

[11:14:00.0000] <AryehGregor>
And this is the US you're talking about?

[11:14:01.0000] <jgraham>
AryehGregor: Not the US and as soon as you leave

[11:14:02.0000] <Ms2ger>
/me has his for life

[11:14:03.0000] <jgraham>
I kept 1/2, my g/f 0/2

[11:15:00.0000] <jgraham>
And I'm not sure that the 1 I kept doesn't violate some university policy

[11:15:01.0000] <AryehGregor>
I've kept both of mine so far even though I left.

[11:15:02.0000] <AryehGregor>
This is the US, though.

[11:15:03.0000] <jgraham>
Won't they run out of good names rather fast?

[11:15:04.0000] <TabAtkins>
I think mine still exists, but I set up an auto-forward to my personal while I was at college, so I'd have to actually go check.

[11:15:05.0000] <Ms2ger>
Yes

[11:16:00.0000] <jgraham>
(although we didn't have that problem due to systematic use of bad names for everyone)

[11:16:01.0000] <AryehGregor>
They number them.

[11:16:02.0000] <AryehGregor>
I'm agregor02 at CCNY and ag2837 at NYU.

[11:17:00.0000] <AryehGregor>
I'm gregor at Courant, but Courant probably only gives addresses to staff and grad students, so not such pressure.

[11:17:01.0000] <jgraham>
Ah, the NYU one has the same naming scheme as cam.ac.uk

[11:17:02.0000] <AryehGregor>
Although I get e-mail from Microsoft intended for Karen Gregor or something.

[11:17:03.0000] <AryehGregor>
I keep telling them to not send it to me, but the last time I did that, they told me it was hard to change their system and so I should just ignore it.

[11:17:04.0000] <AryehGregor>
I guess I'll flag it as spam from now on.

[11:18:00.0000] <AryehGregor>
Go Microsoft.

[11:18:01.0000] <AryehGregor>
(this is Microsoft Research)

[11:18:02.0000] <miketaylr>
i still get emails from NYU telling me that it's not a snow day

[11:18:03.0000] <jgraham>
/me would occasionally get email for the other James Graham in Astrophysics who is a rather well-known professor and got invited to give keynotes and things

[11:19:00.0000] <TabAtkins>
jgraham: Accept!

[11:19:01.0000] <AryehGregor>
miketaylr, me too!

[11:19:02.0000] <miketaylr>
:)

[11:20:00.0000] <AryehGregor>
Okay, so no browser reflects generated content in plaintext conversion (innerText or Selection.toString()).

[11:20:01.0000] <AryehGregor>
This seems like a bad thing to me.

[11:20:02.0000] <AryehGregor>
Opinions?

[11:21:00.0000] <jgraham>
innerText should die

[11:21:01.0000] <jgraham>
Was theat the opinion you were looking for?

[11:21:02.0000] <jgraham>
*that

[11:21:03.0000] <AryehGregor>
Then answer for Selection.toString().

[11:22:00.0000] <jgraham>
Hmm. What do non-WebKit browsers do with Selection.toString()?

[11:22:01.0000] <Ms2ger>
That should die

[11:22:02.0000] <AryehGregor>
Really?  Why?

[11:22:03.0000] <bfrohs>
From an end-user/author standpoint, I believe generated content should be included.

[11:22:04.0000] <AryehGregor>
bfrohs, me too.

[11:22:05.0000] <AryehGregor>
jgraham, I'm testing both innerText and toString together.  http://aryeh.name/spec/innertext/test/innerText.html

[11:22:06.0000] <AryehGregor>
Maybe you can tell me why the latter doesn't work in Opera.

[11:24:00.0000] <jgraham>
AryehGregor: Since I was previously unaware it was supposed to work, maybe it is just unimplemented

[11:24:01.0000] <jgraham>
Does it work in IE?

[11:24:02.0000] <AryehGregor>
Yes.

[11:24:03.0000] <AryehGregor>
It's documented in DOM Range, although there's no actual spec for it.

[11:25:00.0000] <AryehGregor>
Or rather there was, but it was defined in terms of Range stringification, where a) that's wrong and b) Range stringification wasn't itself defined.

[11:25:01.0000] <AryehGregor>
Now I've defined Range stringification, so it's well-defined but wrong.  :)

[11:25:02.0000] <AryehGregor>
(which I've noted in the spec)

[11:25:03.0000] <jgraham>
Yay DOM specs

[11:25:04.0000] <jgraham>
Do we have any evidence of people using this?

[11:27:00.0000] <AryehGregor>
Yes, e.g.: http://www.mediawiki.org/wiki/User:Catrope/W3C_Range_feature_requests#Newline_handling_in_stringification_of_getSelection.28.29

[11:27:01.0000] <AryehGregor>
That implies it's probably used on Wikipedia, at least.

[11:27:02.0000] <gsnedders>
jgraham: Doesn't work in what way?

[11:27:03.0000] <gsnedders>
AryehGregor, even

[11:28:00.0000] <gsnedders>
/me is too tired

[11:28:01.0000] <AryehGregor>
gsnedders, "Actual Selection stringification" is always the empty string for me.

[11:28:02.0000] <AryehGregor>
That part works in all the other browsers I tried it in (obviously other than IE8).

[11:28:03.0000] <AryehGregor>
How do you get a dev console in Opera?

[11:29:00.0000] <AryehGregor>
Ah, found it.

[11:29:01.0000] <AryehGregor>
No errors there that I see, though.

[11:29:02.0000] <gsnedders>
AryehGregor: selection.toString() seems to work here

[11:30:00.0000] <AryehGregor>
gsnedders, what's wrong here?  http://aryeh.name/spec/innertext/test/innerText.html

[11:30:01.0000] <gsnedders>
jgraham: ebay apparently uses it

[11:30:02.0000] <AryehGregor>
Maybe what I'm doing is somehow ending up being an empty selection in Opera.

[11:31:00.0000] <gsnedders>
Probably something with ranges

[11:37:00.0000] <AryehGregor>
Well, if anyone can pinpoint the problem, I'll be able to compare to Opera's toString() behavior.

[11:37:01.0000] <AryehGregor>
Otherwise I won't bother, which is okay, because Opera's behavior is probably the least compatible.

[11:37:02.0000] <AryehGregor>
(except maybe for IE9)

[11:41:00.0000] <AryehGregor>
If s is a string, what does s[0] = "x"; do?  It seems to do nothing.

[11:41:01.0000] <annevk>
webr3, you cannot just say "why not start over?"

[11:42:00.0000] <AryehGregor>
I'd expect it to change the first character of the string.

[11:42:01.0000] <AryehGregor>
Or at least throw an error.

[11:42:02.0000] <annevk>
webr3, if you cannot see how unrealistic that is, you have not learned much on that front yet

[11:43:00.0000] <jgraham>
Javascript strings are immutable

[11:43:01.0000] <annevk>
webr3, maybe the former XHTML2 WG members can shed some light on that -- that was a rather small-scale attempt at starting over one part of the platform

[11:43:02.0000] <jgraham>
and it generally doesn't throw errors

[11:43:03.0000] <AryehGregor>
So that statement actually silently does nothing?

[11:43:04.0000] <jgraham>
So it's not very surprising behaviour

[11:43:05.0000] <AryehGregor>
<3 JS

[11:45:00.0000] <AryehGregor>
Okay, so I'm going to go ahead and require that browsers include generated content in plaintext conversion, even though no one does it.

[11:47:00.0000] <AryehGregor>
Is there a dev version of generated content?

[11:47:01.0000] <AryehGregor>
I'm only seeing a WD from 2003, edited by Hixie.

[11:47:02.0000] <annevk>
generated content as part of copy & paste?

[11:48:00.0000] <annevk>
hmm

[11:48:01.0000] <AryehGregor>
Yes.  It makes the most sense from a user perspective.

[11:48:02.0000] <annevk>
are you copying all other style information too?

[11:48:03.0000] <AryehGregor>
Also, it means I don't have to special-case <br>, which is nice because so far I haven't had to special-case any HTML element or attribute.

[11:48:04.0000] <AryehGregor>
What does that mean?  This is conversion to plaintext.

[11:48:05.0000] <AryehGregor>
So most style info will be lost.

[11:48:06.0000] <AryehGregor>
But the output depends on CSS in a whole bunch of ways.

[11:48:07.0000] <annevk>
oh wait

[11:49:00.0000] <annevk>
I doubt you can do that for innerText

[11:49:01.0000] <AryehGregor>
Why?

[11:49:02.0000] <annevk>
compat of course

[11:49:03.0000] <AryehGregor>
Really?

[11:49:04.0000] <annevk>
generally also, copying generated content is somewhat controversial

[11:49:05.0000] <annevk>
at least it used to be

[11:49:06.0000] <AryehGregor>
How many authors use generated content, and how can they depend on its behavior when it's so inconsistent and doesn't even exist in Firefox?

[11:50:00.0000] <AryehGregor>
I guess I won't add it to the spec yet.

[11:50:01.0000] <AryehGregor>
I'll leave an XXX.

[11:50:02.0000] <annevk>
AryehGregor, yeah, e.g. with list items you would get the bullet and such suddenly

[11:50:03.0000] <TabAtkins>
What do you mean?  Generated content exists in firefox, though only in list items and ::before and ::after.

[11:50:04.0000] <annevk>
because list items will eventually be done using some kind of generated content

[11:50:05.0000] <annevk>
through ::marker or some such

[11:50:06.0000] <TabAtkins>
annevk: I'm speccing it right now!

[11:50:07.0000] <annevk>
if that gets copied, fail

[11:50:08.0000] <annevk>
at least for innerText it's fail

[11:50:09.0000] <annevk>
TabAtkins, :)

[11:51:00.0000] <AryehGregor>
All right, I'll leave it alone for now.

[11:52:00.0000] <annevk>
AryehGregor, I don't really want you to stop from exploring it, it might be interesting, definitely for copy & paste, but it's hairy :)

[11:53:00.0000] <AryehGregor>
I'll consider later.

[11:53:01.0000] <AryehGregor>
Since no one does it, I'll have to ask some implementers what they think before I add it.

[11:53:02.0000] <AryehGregor>
They might object.

[12:00:00.0000] <TabAtkins>
Hm, I wonder if current browsers render the 'square' list style with different characters...

[12:20:00.0000] <webr3>
annevk, ack I can see how it'd take an incredibly long time and much effort to reverse / address even partially, but it'd be worth it :) as for XHTML 2.0 you're not confusing me (a web developer who just wants to make some client side apps runnign over a web of data in html+js) with an academic who's in namespace and xml land are ya?

[12:20:01.0000] <webr3>
probably worth noting that I /don't/ think namespaces are a good thing, and would like to see them transitioned away from quite swiftly (I'd just pull them now if i could)

[12:55:00.0000] <AryehGregor>
If a function returns a list with a fixed number of elements, is there a convenient way to unpack it, like "a, b = f()" in Python or "list($a, $b) = f();" in PHP?

[12:55:01.0000] <AryehGregor>
Or do I just have to use a temporary?

[12:56:00.0000] <Ms2ger>
[a,b] = f()

[12:56:01.0000] <Ms2ger>
Might be Mozilla-only

[12:57:00.0000] <roc>
only Spidermonkey implements that right now

[12:57:01.0000] <Ms2ger>
Also, function f({foo: bar, baz: quux}) { w(bar); w(quux) }

[13:05:00.0000] <TabAtkins>
AryehGregor: It's a harmony feature, which Moz does now, and v8 will be doing in the near future.

[13:06:00.0000] <AryehGregor>
Yay.

[13:07:00.0000] <TabAtkins>
You can unpack to a list, or an object, and when doing lists you can get rest parameters.

[13:07:01.0000] <TabAtkins>
[a,...b] = foo();

[13:08:00.0000] <TabAtkins>
If foo() returns [1,2,3], a=1, b=[2,3]

[13:10:00.0000] <TabAtkins>
Hrm.  Anyone know how to get the permalink to a tweet in NewTwitter?

[13:14:00.0000] <bfrohs>
TabAtkins: Click the date (or # hours ago)

[13:15:00.0000] <bfrohs>
TabAtkins: ...and then take out #!/ if you want it to be accessible.

[13:15:01.0000] <TabAtkins>
bfrohs: Thanks!  It wasn't obvious that was a link.

[13:15:02.0000] <TabAtkins>
Yeah.

[13:16:00.0000] <AryehGregor>
othermaciej, roc (or other WebKit/Gecko people): who would be good people to talk to about the convert-to-plaintext algorithms (innerText/Selection.toString()) in WebKit/Gecko?

[13:16:01.0000] <AryehGregor>
In terms of how they work and reviewing my spec so far.

[13:17:00.0000] <AryehGregor>
And discussing possible changes like handling of generated content.

[13:17:01.0000] <roc>
jonas maybe?

[13:18:00.0000] <roc>
maybe ehsan

[13:30:00.0000] <AryehGregor>
I'll just post it to whatwg.

[13:31:00.0000] <othermaciej>
AryehGregor: enrica probably knows a lot about it but I'm not sure she has time to explain in much detail

[13:31:01.0000] <AryehGregor>
Anyone who you'd suggest I CC on my whatwg post?

[13:31:02.0000] <othermaciej>
AryehGregor: generated content + editing (including basic things like selection and copying) is a world of hurt

[13:32:00.0000] <AryehGregor>
Well, that's what I've been assigned to spec.  :)

[13:32:01.0000] <AryehGregor>
In fact, the last specific thing I'm supposed to do is spec execCommand().

[13:32:02.0000] <AryehGregor>
Should be fun.

[13:32:03.0000] <othermaciej>
in most browsers I think even selection behavior for generated content is not sane

[13:34:00.0000] <jamesr___>
it's definitely not in WebKit

[14:18:00.0000] <TabAtkins>
Oh, wow.  Very clever, Hixie, in your CSS usage in the Hebrew example in the lists module.

[14:19:00.0000] <TabAtkins>
(Setting tbody { display:table; float:left; } to get a multicolumn table.

[14:21:00.0000] <Hixie>
TabAtkins: heh

[14:26:00.0000] <TabAtkins>
Only problem is that it breaks the display of thead, at least in Chrome.  Hm.

[14:26:01.0000] <TabAtkins>
Oh, because you display:none'd it.  Never mind.

[14:26:02.0000] <Hixie>
i do that quite often

[14:26:03.0000] <Hixie>
i display:noned the thead in the atob table recently too

[14:27:00.0000] <Hixie>
but for that one i used the multicol module to get columns

[14:27:01.0000] <Hixie>
not the tbody trick

[14:27:02.0000] <Hixie>
and for some reason it's not rendering right

[14:27:03.0000] <Hixie>
dunno what's up with that

[14:28:00.0000] <TabAtkins>
Not surprised that multicol and tables work oddly together.

[14:29:00.0000] <Hixie>
yeah there's all kinds of bugs with it

[14:29:01.0000] <Hixie>
multicol+abspos+table+:hover breaks in the named char ref table too

[14:29:02.0000] <TabAtkins>
It's pretty undefined, I think, what multicol is supposed to do with other layout modes inside of it.

[14:29:03.0000] <TabAtkins>
There's nothing sensible about a multicol containing a flexbox, frex.

[14:30:00.0000] <TabAtkins>
I think it needs to work with the same mechanism as multipage (which is also undefined ;_;).

[14:33:00.0000] <Hixie>
is kyle simpson here by any chance?

[15:05:00.0000] <TabAtkins>
Hixie: The intent of accept=image/*, etc is that browsers can let the user record an image with their webcam, right?

[15:06:00.0000] <TabAtkins>
If so, could you add a note to that effect?  It's not at all obvious that this is intended to be a hint to offer protected hardware access.

[15:06:01.0000] <TabAtkins>
I can send an email if necessary.

[15:07:00.0000] <Hixie>
e-mail would be good, i'm deep in script land

[15:07:01.0000] <TabAtkins>
kk

[15:08:00.0000] <Hixie>
trying to translate hsivonen's suggestion into something that's readable in the spec

[15:08:01.0000] <Hixie>
which is proving harder than i'd hoped, partly because the simplest way to avoid triple-negatives is to reverse the meaning of his flag

[15:08:02.0000] <Hixie>
from force-async to honour-async

[15:08:03.0000] <Hixie>
and revert all the logic accordingly

[15:08:04.0000] <TabAtkins>
You can't use a single negative?

[15:09:00.0000] <Hixie>
they're not actually negatives

[15:09:01.0000] <Hixie>
they're exceptions and stuff

[15:10:00.0000] <Hixie>
either i have to have the flag be set to false then set to true in a whole bunch of complicated cases, or i can have the opposite flag default to false and have it set to true in a single case

[15:11:00.0000] <TabAtkins>
Oh, if it's just a flag then reverse away.

[15:11:01.0000] <Hixie>
hsivonen doesn't like it when i make editorial changes to his proposals

[15:11:02.0000] <TabAtkins>
Too bad!

[15:11:03.0000] <Hixie>
hrm, hsivonen's proposal makes document.write() work different than innerHTML

[15:12:00.0000] <Hixie>
i wonder why he did that

[15:13:00.0000] <Hixie>
hm, in fact his proposal states something that's false (that innerHTML doesn't set parser-inserted). odd.

[15:14:00.0000] <Hixie>
man, i really don't like this script.async crap

[15:15:00.0000] <Hixie>
i hope the people who think the spec matches exactly what i want are watching

[15:17:00.0000] <Dashiva>
Hixie: In the interest of stating the obvious, even if they did they wouldn't admit it :P

[15:17:01.0000] <Hixie>
yeah, i know

[15:19:00.0000] <Hixie>
i guess it's kinda funny that nobody wants the spec to look like it is, but some people feel they somehow deserve to have the spec say what they want, and they therefore accuse me of having the spec say what I want

[15:20:00.0000] <Hixie>
it's like they assume that because they don't have what they want, and because I'm the one denying them what they want, I must be getting what _I_ want.

[15:21:00.0000] <MikeSmith>
http://en.wikipedia.org/wiki/Psychological_projection

[15:22:00.0000] <MikeSmith>
esp. http://en.wikipedia.org/wiki/Psychological_projection#Counter-projection

[15:22:01.0000] <MikeSmith>
"an obsession to continue and remain in a recurring trauma-causing situation and the compulsive obsession with the perceived perpetrator of the trauma or its projection"

[15:30:00.0000] <AryehGregor>
Yay: https://grepular.com/Abusing_HTTP_Status_Codes_to_Expose_Private_Information

[15:30:01.0000] <AryehGregor>
Is that known?

[15:32:00.0000] <Hixie>
abarth: thanks (re mail)

[15:32:01.0000] <abarth>
np

[15:34:00.0000] <TabAtkins>
AryehGregor: It's known in that I knew about it on the 21st.

[15:34:01.0000] <Hixie>
AryehGregor: interesting. Seems like an easier-to-fix problem than the cache attack

[15:34:02.0000] <Hixie>
where you time how long it takes to download an image from a particular site

[15:34:03.0000] <Hixie>
and if that time is low, you assume the user went there

[15:34:04.0000] <karlcow>
AryehGregor: yeah I posted it a few days ago

[15:35:00.0000] <Hixie>
i guess if we want to fix this we just make onerror/onload for images only fire same-origin

[15:39:00.0000] <AryehGregor>
I wonder how many sites that will break.

[15:40:00.0000] <TabAtkins>
Hixie: Just make images only load same-origin.

[15:41:00.0000] <roc>
hahaha

[15:42:00.0000] <roc>
making onerror/onload only fire for same-origin images won't help here

[15:42:01.0000] <roc>
at least not for the GMail case

[15:42:02.0000] <roc>
you can inspect the size of the image to find out of it loaded or not

[15:43:00.0000] <AryehGregor>
This is why we need a "no hotlinking" header.

[15:43:01.0000] <AryehGregor>
What's the story on that?  Anyone working on it?

[15:43:02.0000] <AryehGregor>
I guess you could ask why not use Referer/Origin sniffing.

[15:44:00.0000] <gsnedders>
AryehGregor: could you not do something with CORS, and make it possible to have a default * mode?

[15:44:01.0000] <Hixie>
roc: true

[15:44:02.0000] <roc>
did you read the conversation about this yesterday? :-)

[15:44:03.0000] <AryehGregor>
Didn't I participate?

[15:44:04.0000] <AryehGregor>
(toward the end)

[15:44:05.0000] <roc>
AryehGregor: not without annevk getting on your case :-)

[15:44:06.0000] <Hixie>
/me did not

[15:44:07.0000] <roc>
er, that was for gsnedders

[15:44:08.0000] <AryehGregor>
In the end, is anyone working on either specs or implementations for such a feature, and if not, why not?

[15:44:09.0000] <gsnedders>
roc: No :)

[15:44:10.0000] <AryehGregor>
It sounds really simple.

[15:45:00.0000] <MikeSmith>
gsnedders, jgraham, whoever else might be interested - http://www.wirfs-brock.com/allen/things/es5-technial-notes-and-resources

[15:47:00.0000] <roc>
AryehGregor: Referer/Origin sniffing has two problems: a) it's harder to deploy (you need to read and process headers instead of just sending a static header), and b) making the decision in the browser means it works even if someone strips Origin headers in the network (which they might do for reasonable privacy reasons)

[15:47:01.0000] <AryehGregor>
Right.

[15:47:02.0000] <AryehGregor>
I'm all for a new header.

[15:47:03.0000] <AryehGregor>
So is there some reason no one's working on it?

[15:48:00.0000] <roc>
yes

[15:48:01.0000] <roc>
we're all very very busy

[15:48:02.0000] <gsnedders>
Busy? I missed a CSS WG telecon today because I was drinking.

[15:48:03.0000] <roc>
ok, except for those Opera guys

[15:48:04.0000] <AryehGregor>
Does anything important happen in CSS WG telecons, or are they like HTML WG telecons?

[15:49:00.0000] <TabAtkins>
gsnedders: It wasn't useful today.

[15:49:01.0000] <gsnedders>
AryehGregor: A fair number of decisions are made on them, so yes

[15:49:02.0000] <TabAtkins>
AryehGregor: They're usually at least moderately useful.  The past few months have been almost entirely about CSS2.1 testsuite issues, though.

[15:49:03.0000] <gsnedders>
roc: Hey, I am a student 100% of the time, so I'm meant to behave like that. :P

[15:50:00.0000] <TabAtkins>
Today was about a few 2.1 things, then we spent the rest of the time talking about Speech because the editor doesn't realize he can make decisions now and let people object later.

[15:51:00.0000] <othermaciej>
AryehGregor: I might work on proposal for and/or WebKit implementation of an anti-hotlinking header

[15:51:01.0000] <AryehGregor>
Yay.

[15:52:00.0000] <othermaciej>
I only thought of it a few days ago, so haven't actually done anything on it yet

[15:52:01.0000] <TabAtkins>
I still think an anti-hotlinking header is putting the complexity on the wrong case, but I'm okay with it because it's so simple and it can be used on general resources.

[15:53:00.0000] <AryehGregor>
What's your preferred alternative?

[15:53:01.0000] <othermaciej>
well, for defense against image hotlinking, it seems like the only plausible solution

[15:53:02.0000] <TabAtkins>
@font-face always using SOP, then relaxing that with CORS.

[15:53:03.0000] <AryehGregor>
It makes more sense to be same-origin by default, but that ship sailed about 18 years ago.

[15:53:04.0000] <othermaciej>
and image hotlinking is the main in-the-wild case of bandwidth abuse

[15:53:05.0000] <TabAtkins>
But that's not generalizable, shrug.

[15:53:06.0000] <AryehGregor>
@font-face is likely to never be a major source of information leaks or bandwidth leeching compared to <img>.

[15:54:00.0000] <TabAtkins>
Dude, fonts are huge.

[15:54:01.0000] <AryehGregor>
They're unlikely to be hotlinked as much as images.

[15:55:00.0000] <othermaciej>
Limit-Embedding-To-Origins could also serve as a clickjacking mitigation

[15:55:01.0000] <AryehGregor>
Image: want amusing cat picture for forum post -> Google Image Search -> copy URL from navigation bar.

[15:55:02.0000] <TabAtkins>
othermaciej: By preventing an <iframe>?

[15:55:03.0000] <othermaciej>
yeah

[15:56:00.0000] <Philip`>
If an anti-hotlinking header just blocks the image loading, it wouldn't satisfy the use case of sending disturbing images to hotlinkers

[15:56:01.0000] <Philip`>
Maybe the header should give a URL of an alternative image to load

[15:56:02.0000] <TabAtkins>
True, but that doable with roughly the same difficulty.

[15:57:00.0000] <othermaciej>
but more flexibly than x-frame-options

[15:57:01.0000] <TabAtkins>
It's just an easy redirect line in your .htaccess.


2011-02-03
[16:01:00.0000] <sholmes>
is there any new spec on javascript being closer tied to css?

[16:01:01.0000] <AryehGregor>
What do you mean?

[16:01:02.0000] <TabAtkins>
You mean the CSSOM improvements?

[16:01:03.0000] <sholmes>
specs on javascript events for when a css property changes

[16:01:04.0000] <TabAtkins>
No.

[16:01:05.0000] <sholmes>
TabAtkins, I didn't know there was such a thing as CSSOM

[16:02:00.0000] <roc>
othermaciej: annevk suggested "From-Origin", which sounds a little better to me

[16:02:01.0000] <sholmes>
It would be cool to be able to bind events to custom css properties

[16:02:02.0000] <roc>
</bikeshed>

[16:02:03.0000] <TabAtkins>
sholmes: The CSSOM is the interface that you use when you do, say, elem.style.width="50px"

[16:02:04.0000] <othermaciej>
roc: that would sound a bit like it's a whitelist, not a blacklist

[16:03:00.0000] <roc>
it is a whitelist

[16:03:01.0000] <othermaciej>
Allow-Embedding-From-Origins: would sound like a whitelist, but might imply that in absence of the header default is none

[16:03:02.0000] <sholmes>
TabAtkins, I see. Those are only inline styles though. How do you access CSS styling information on an element?

[16:03:03.0000] <othermaciej>
er sorry, sounds like a blacklist

[16:03:04.0000] <sholmes>
How do you access psuedo element styles?

[16:03:05.0000] <roc>
Allow-Embedding-Origins?

[16:03:06.0000] <TabAtkins>
sholmes: getComputedStyle

[16:03:07.0000] <TabAtkins>
(Which is also part of the CSSOM.)

[16:03:08.0000] <roc>
or maybe just Allow-Embedding

[16:04:00.0000] <roc>
or Embedders

[16:04:01.0000] <sholmes>
TabAtkins, and what about the psuedo elements?

[16:05:00.0000] <AryehGregor>
Restrict-Embedding:

[16:05:01.0000] <AryehGregor>
Restrict-Embedding-To:, Restrict-Embedding-To-Origins:

[16:05:02.0000] <AryehGregor>
Take your pick.

[16:05:03.0000] <TabAtkins>
sholmes: That's part of the getComputedStyle function - you can specify that you want a pseudoelement off of the element instead.

[16:05:04.0000] <TabAtkins>
sholmes: https://developer.mozilla.org/en/DOM:window.getComputedStyle

[16:06:00.0000] <sholmes>
TabAtkins, this goes for psuedo classes too?

[16:06:01.0000] <TabAtkins>
pseudoclasses arent' things that can have properties.

[16:06:02.0000] <TabAtkins>
They're properties of elements.

[16:06:03.0000] <TabAtkins>
(Just like classes.)

[16:09:00.0000] <sholmes>
so you'd have to somehow get the element that has the psuedo class?

[16:09:01.0000] <TabAtkins>
sholmes: Yes?

[16:10:00.0000] <TabAtkins>
Look at the link I just provided.  That explains how the function works.

[16:10:01.0000] <sholmes>
I did

[16:11:00.0000] <othermaciej>
AryehGregor: I like the brevity of Restrict-Embedding

[16:11:01.0000] <sholmes>
it says you can use a string to select a psuedo element

[16:11:02.0000] <AryehGregor>
Me too.

[16:11:03.0000] <TabAtkins>
I might like the brevity of Embedders even more.

[16:12:00.0000] <AryehGregor>
I don't.

[16:12:01.0000] <AryehGregor>
It's much less obvious what it means.

[16:12:02.0000] <AryehGregor>
It makes it sound like a list of things that do embed the file, not that can embed the file.

[16:13:00.0000] <sholmes>
I don't think IE < 9 supports getComputedStyles

[16:13:01.0000] <AryehGregor>
getComputedStyle, not getComputedStyles.

[16:13:02.0000] <AryehGregor>
Although probably it doesn't.

[16:13:03.0000] <TabAtkins>
They might support it on document.defaultView?

[16:14:00.0000] <sholmes>
AryehGregor, yeah it was a typo

[16:14:01.0000] <TabAtkins>
That's where it used to be defined, before everyone realized that was stupid and put it on window instead.

[16:14:02.0000] <AryehGregor>
Googling suggests IE has a currentStyle property.

[16:14:03.0000] <sholmes>
I think they use currentStyle

[16:14:04.0000] <sholmes>
but I don't know if that has a psuedo element argument

[16:15:00.0000] <AryehGregor>
Does IE < 9 support ::before or ::after anyway?

[16:15:01.0000] <TabAtkins>
Yes.

[16:15:02.0000] <Rik`>
AryehGregor: I think IE > 6 supports that

[16:15:03.0000] <TabAtkins>
Only the older single-colon version.

[16:15:04.0000] <AryehGregor>
I thought it didn't support generated content until very recently.

[16:15:05.0000] <TabAtkins>
Nope, it's done :before and :after for some time.

[16:15:06.0000] <gsnedders>
IE7

[16:16:00.0000] <AryehGregor>
Oh.

[16:16:01.0000] <AryehGregor>
I'm getting mixed up with something else, then.

[16:16:02.0000] <Rik`>
hmm no, IE8

[16:16:03.0000] <Rik`>
http://msdn.microsoft.com/en-us/library/cc351024%28v=vs.85%29.aspx

[16:17:00.0000] <Rik`>
http://msdn.microsoft.com/en-us/library/cc351024%28v=vs.85%29.aspx#pseudoelements

[16:17:01.0000] <sholmes>
:before and :after is what older versions support I think

[16:31:00.0000] <sholmes>
what's the standard on styling placeholders?

[16:35:00.0000] <AryehGregor>
There is none yet.

[16:38:00.0000] <sholmes>
AryehGregor, oh. Well I like ::placeholder

[16:39:00.0000] <boogyman>
sholmes: i'd equate it more similar to an attribute then a pseudo selector

[16:39:01.0000] <sholmes>
But attributes don't have elements.

[16:40:00.0000] <boogyman>
attributes have values

[16:40:01.0000] <sholmes>
I like the idea of having the implementation provide "hidden" psuedo elements which you can select. Then there's psuedo classes, which completely different.

[16:40:02.0000] <sholmes>
boogyman: values don't have styling

[16:40:03.0000] <sholmes>
only elements do, at least I argue.

[16:41:00.0000] <mattmay>
Anybody here want to answer a few intellectual property questions?

[16:43:00.0000] <boogyman>
mattmay: you might want to consult a lawyer, however, in absence of one, ask the question and i'm sure someone will provide his/her biased opinion

[16:43:01.0000] <mattmay>
Well, the ones I have should probably be answerable here.

[16:44:00.0000] <sholmes>
mattmay: does this have to do with pornography?

[16:44:01.0000] <mattmay>
From what I've been able to find, WHATWG has no patent policy. Is that still correct?

[16:44:02.0000] <mattmay>
sholmes: ha! no.

[16:45:00.0000] <gsnedders>
mattmay: That is correct.

[16:45:01.0000] <mattmay>
Is there any interest/effort in that ever changing?

[16:45:02.0000] <sholmes>
mattmay: are you sure? Because the wikipedia article uses the word pornagraphic more than once.

[16:47:00.0000] <AryehGregor>
I feel like I ask this question in some form like every three weeks, but: where's a database of web pages that I can search through to find things like innerText usage patterns?

[16:47:01.0000] <AryehGregor>
mattmay, the WHATWG does not formally exist.  It has no members or anything.  It's not obvious what form a patent policy would take.  The W3C gets people to agree to its patent policy by having this whole system of membership and making it hard to contribute to its specs unless you join, but that's not how the WHATWG works.

[16:48:00.0000] <AryehGregor>
We'd have to not let people participate if their employer didn't agree to the patent policy or objectionable things like that.

[16:49:00.0000] <sholmes>
AryehGregor, you mean answer this question?

[16:49:01.0000] <AryehGregor>
For now, most of the WHATWG stuff is mirrored at the W3C and the rest will probably be mirrored there eventually, so we're not too bad on patents as it stands.

[16:49:02.0000] <Hixie>
AryehGregor: if you want i can do a search for you, if there's somethin specific you're looking for

[16:49:03.0000] <mattmay>
Yes, but you do have three browser engines and four companies participating. Is there even an agreement among them?

[16:49:04.0000] <Hixie>
companies don't participate in the whatwg, individuals do

[16:49:05.0000] <AryehGregor>
Hixie, I just want a large sample of pages that use it so I can see how people use it.  Philip` has some database he uses for stuff like this.

[16:49:06.0000] <Hixie>
AryehGregor: not sure where Philip`'s is. If you just want me to search for pages with "innerText" in them I can do that.

[16:49:07.0000] <AryehGregor>
mattmay, the WHATWG is not a corporation or anything.  It's hosted on Hixie's VPS and has no formal status at all.

[16:50:00.0000] <AryehGregor>
Hixie, that would be useful for now, thanks.

[16:50:01.0000] <mattmay>
Hixie: Yes, but don't many of those individuals have employment contracts with organizations that includes the assignment of IPR?

[16:52:00.0000] <Hixie>
you'd have to ask them

[16:52:01.0000] <Hixie>
AryehGregor: um. how many of these do you want? :-)

[16:53:00.0000] <TabAtkins>
A couple hundred thousand should work, I'd think.

[16:54:00.0000] <mattmay>
Hixie: Well, if they do (that is, if their contracts are anything like mine), doesn't that give you pause? Ostensibly, you're building something that somebody's employer could put a claim on later.

[16:55:00.0000] <Philip`>
AryehGregor: http://www.dotnetdotcom.org/ ?

[16:55:01.0000] <Hixie>
mattmay: the patent system in general gives me grave concerns

[16:56:00.0000] <mattmay>
Okay, so we do agree on something. :D

[16:56:01.0000] <Hixie>
is there an easy way on mac os to pipe the clipboard to a shell script?

[16:56:02.0000] <jamesr_>
man pbpaste

[16:57:00.0000] <Hixie>
sweet

[16:57:01.0000] <jamesr_>
pbpaste | say

[16:57:02.0000] <jamesr_>
always fun to run every now and then

[16:57:03.0000] <TabAtkins>
Heh.

[16:57:04.0000] <mattmay>
But being concerned is one thing. Actively protecting against bad things happening is another.

[17:01:00.0000] <Hixie>
AryehGregor: http://damowmow.com/temp/innerText.urls

[17:01:01.0000] <Hixie>
AryehGregor: i limited it to one url per hostname

[17:02:00.0000] <AryehGregor>
Great, thanks.

[17:02:01.0000] <Hixie>
AryehGregor: this is very much a biased sample, it's not a good random distribution or anything

[17:02:02.0000] <Hixie>
AryehGregor: but hopefully it's enough

[17:02:03.0000] <Hixie>
gotta go

[17:03:00.0000] <TabAtkins>
Heh, this is pretty cool: http://2011.beercamp.com/ (scroll it all the way to the end)

[17:04:00.0000] <jamesr_>
i wish the back button worked

[17:04:01.0000] <jamesr_>
pretty cute

[17:05:00.0000] <jamesr_>
i guess they're just eating onscroll?

[17:05:01.0000] <TabAtkins>
Just click on the top, no need for a back button.  (And have speakers on.)

[17:05:02.0000] <TabAtkins>
Yeah, I assume, since it responds correctly to all forms of scrolling.

[17:05:03.0000] <AryehGregor>
/me used page down, and got confused

[17:06:00.0000] <TabAtkins>
But yeah, they should be watching the zoom level and altering the hash accordingly.

[17:06:01.0000] <TabAtkins>
They already watch so they can highlight the right entry in the floating menu.

[17:08:00.0000] <mattmay>
So, nothing? No plans to make sure WHATWG output is reasonably protected from patent nastiness?

[17:09:00.0000] <jamesr_>
mattmay: if you have a proposal submit it to the mailing list

[17:09:01.0000] <TabAtkins>
Hixie: Any particular reason you tried to redefine content:none to just make pseudos empty, rather than preventing them from being created?

[17:11:00.0000] <TabAtkins>
Hixie: For now I'm ignoring css3-content and just having ::marker compute to 'content:none' when appropriate.

[17:12:00.0000] <mattmay>
jamesr_: I had to see if the problem I saw actually existed, before proposing to fix it. Still not convinced people see a problem, though.

[17:12:01.0000] <jamesr_>
mattmay: well you aren't being terribly convincing here

[17:13:00.0000] <TabAtkins>
In the absence of anyone actually trying to patent-troll the WHATWG is its 6+ years of existence, it doesn't seem urgent to protect it against patent-trolling.

[17:13:01.0000] <mattmay>
jamesr_: I wouldn't know where to start.

[17:14:00.0000] <mattmay>
TabAtkins: That's like saying if your house isn't on fire, there's really no need to buy insurance.

[17:14:01.0000] <jamesr_>
mattmay: sounds like maybe you should figure out where to start before trying to present your case

[17:14:02.0000] <AryehGregor>
mattmay, all significant work at the WHATWG is eventually copied over to the W3C, which has a patent policy.  What could the WHATWG do to improve the situation over that?

[17:15:00.0000] <mattmay>
Well, it's not going to be one line at a time. I think the first attempt is going to be tl;dr length, and we'l take it from there.

[17:15:01.0000] <AryehGregor>
(not that the W3C patent policy gives any protection from patent trolls or other non-members)

[17:15:02.0000] <jamesr_>
that's why i said email

[17:15:03.0000] <mattmay>
AryehGregor: Well, at least they have a process for rallying the members when patent trolls appear.

[17:16:00.0000] <jamesr_>
or maybe another channel so people can have useful discussions on this channel

[17:16:01.0000] <TabAtkins>
mattmay: Similar, sure.  But patent trolls don't happen by accident.  The WHATWG has been defining a major piece of internet technology for years now.

[17:16:02.0000] <AryehGregor>
I love web authors: s.setBaseAndExtent(e, 0, e, e.innerText.length - 1);

[17:16:03.0000] <AryehGregor>
jamesr_, since when does anyone have useful discussions on this channel?

[17:16:04.0000] <mattmay>
What I'm mostly concerned about is work that happens outside of W3C, which gets implemented by devs, and is unprotected until it gets rolled into a W3C draft.

[17:16:05.0000] <AryehGregor>
mattmay, what process do they have for rallying the members when patent trolls appear?

[17:16:06.0000] <jamesr_>
AryehGregor: touche

[17:17:00.0000] <mattmay>
Which is going to be a longer and longer period of exposure now that things aren't actively getting added to HTML5.

[17:17:01.0000] <AryehGregor>
mattmay, work is unprotected until it gets to a W3C Recommendation, if I remember correctly.  So we're talking a lag of years here anyway.

[17:17:02.0000] <AryehGregor>
When HTML5 gets frozen, we can start working on HTML6 in parallel in the W3C.

[17:17:03.0000] <TabAtkins>
AryehGregor: That call won't do anything like what they intend, will it?

[17:17:04.0000] <AryehGregor>
CSS 2.1 has been frozen for years, but we're working on CSS 3 too.

[17:17:05.0000] <AryehGregor>
TabAtkins, nope.  Not even close.

[17:17:06.0000] <mattmay>
AryehGregor: AFAIK, it's protected from FPWD status.

[17:18:00.0000] <mattmay>
As far as protection goes, they have the Patent Advisory Groups, which get formed to see if a claim is valid, see if it can be routed around, see who has prior art, etc.

[17:19:00.0000] <AryehGregor>
When it comes to post-facto stuff, the W3C can be used for that when it happens.

[17:19:01.0000] <mattmay>
Well, not if it's not in a W3C spec.

[17:20:00.0000] <AryehGregor>
It can be added to one quickly.  :)

[17:20:01.0000] <AryehGregor>
It seems like there are licensing requirements for WDs, you're right.

[17:20:02.0000] <AryehGregor>
Not clear on exactly what they are.

[17:20:03.0000] <othermaciej>
FPWD doesn't actually give anyone a patent license

[17:21:00.0000] <AryehGregor>
I find the Patent Policy hard to read.

[17:21:01.0000] <othermaciej>
FPWD is just an exclusion opportunity

[17:21:02.0000] <othermaciej>
technically, licensing non-excluded patent claims is not required until REC

[17:21:03.0000] <othermaciej>
though FPWD (and later LC) at least gives you some notice

[17:21:04.0000] <mattmay>
It's an opportunity to ask the question before a bunch of implementers have to roll back running code.

[17:21:05.0000] <AryehGregor>
That's what I thought.

[17:21:06.0000] <AryehGregor>
Anyway, there's not much in the WHATWG that's not in the W3C.

[17:22:00.0000] <othermaciej>
anyhow, once HTML WG recharters, I expect our charter will include scope for HTML 5.1 / HTML6 / whatever

[17:22:01.0000] <mattmay>
Right, but like I said, there's going to be a backlog hanging out there.

[17:22:02.0000] <othermaciej>
in parallel with taking HTML5 the rest of the way to REC

[17:22:03.0000] <mattmay>
And it's going to be the stuff the cool kids are going to dig into.

[17:23:00.0000] <jamesr_>
what's the ETA for HTML5 to REC in w3c land? 2025ish?

[17:23:01.0000] <AryehGregor>
2022 last I heard.

[17:25:00.0000] <AryehGregor>
The unescapeHTML function here is vaguely fascinating.  I wonder what it's used for: http://api.opencast.naver.com/CS888/23

[17:26:00.0000] <mattmay>
I'm skimming, but it looks like most of what W3C does is enforced within 60 days after LC.

[17:26:01.0000] <othermaciej>
depends on what you mean by "E"

[17:28:00.0000] <tw2113>
it's just a number

[17:29:00.0000] <jamesr_>
"E". it's just a number

[17:29:01.0000] <mattmay>
Well, thanks for the info, everybody.

[17:30:00.0000] <TabAtkins>
Ah, I love clear specs that answer my questions simply.

[17:30:01.0000] <TabAtkins>
(In this case, how to serialize the string ".".  The answer, unsurprisingly, is ".")

[17:33:00.0000] <othermaciej>
the HTML WG charter estimates 2010 Q3 for REC

[17:33:01.0000] <othermaciej>
I don't think that was a very realistic estimate

[17:34:00.0000] <AryehGregor>
No, I have to grant it doesn't seem very realistic.

[17:34:01.0000] <AryehGregor>
Hixie estimated LC would be sometime in 2011, right?

[17:35:00.0000] <jamesr_>
according to the tech press we already have at least 2 implementations of HTML5

[17:35:01.0000] <AryehGregor>
TabAtkins, what spec?

[17:35:02.0000] <TabAtkins>
AryehGregor: CSSOM

[17:35:03.0000] <AryehGregor>
Ah.

[17:36:00.0000] <AryehGregor>
The overwhelming majority of innerText uses could just be replaced by textContent.  Either they're assignment only, or dealing with nodes that only have short text node children.

[17:36:01.0000] <TabAtkins>
I was fixing an example in Lists that was written by Hixie, where he'd given the computed value of something as containing "\002E".  By current CSSOM, though, that's not the natural answer.

[17:39:00.0000] <AryehGregor>
I see multiple sites using createRange()+selectNodeContents()+toString() as an innerText replacement.  I wonder why, since it's equivalent to textContent.  Is textContent recent?

[17:39:01.0000] <AryehGregor>
Or is this just gratuitous cargo-culting?

[17:39:02.0000] <TabAtkins>
Sounds like cargo-culting.

[17:40:00.0000] <TabAtkins>
I just realized how odd of a word "unbeknownst" is.  It confuses me just to type it, though I know instinctively how to spell it.

[17:40:01.0000] <TabAtkins>
Too much archaicness in it.

[17:41:00.0000] <AryehGregor>
Here's a case where someone's actually using the plaintextification properties of innerText, I think: view-source:http://albanolaziale.blogolandia.it/2008/06/13/la-scuola-di-pavona-campione-nazionale-di-teatro/

[17:42:00.0000] <AryehGregor>
(that view-source: bit is pretty annoying, Chrome should drop that when you copy the URL IMO)

[17:42:01.0000] <jamesr_>
also kinda makes you sound like a ponce when you say it

[17:43:00.0000] <AryehGregor>
Possibly this one too: http://ask.chinese.cn/findAndReplyQuestionAction.action?problemId=377

[17:44:00.0000] <AryehGregor>
But they don't seem to be relying on the details at all, they use textContent as a substitute.

[17:44:01.0000] <TabAtkins>
Agreed on the first.

[17:44:02.0000] <TabAtkins>
So what you're saying is, so far it looks like you can just spec it as "be like textContent" and you'd be okay?

[17:45:00.0000] <AryehGregor>
No, there are a couple of cases I've found where it looks like that would degrade website behavior.

[17:45:01.0000] <AryehGregor>
It would be mostly fine, yes.

[17:45:02.0000] <AryehGregor>
Opera more or less does that.

[17:46:00.0000] <AryehGregor>
But it wouldn't allow any way to get a plaintext representation of HTML except selecting it, which is kind of unreasonable.

[17:46:01.0000] <TabAtkins>
If the choice is "degrade a few websites" or "spec something complicated that no one wants to implement"...

[17:46:02.0000] <AryehGregor>
WebKit apparently doesn't want to make its innerText work like textContent.

[17:46:03.0000] <AryehGregor>
I'd be okay with that, reportedly so would Opera, and Mozilla certainly would.

[17:47:00.0000] <AryehGregor>
But anyway, you still have to spec Selection.toString(), which should be the same spec anyway.

[17:47:01.0000] <AryehGregor>
And largely the same implementation.

[17:56:00.0000] <TabAtkins>
Hrm.  I wish I could go back in time and implement Positioned Layout before someone wrote list-style-position, as its values can be implemented in terms of that.  Darn.

[17:56:01.0000] <TabAtkins>
Now I have to figure out how to talk about this in a way that will work correctly with ::marker being positionable.

[17:57:00.0000] <TabAtkins>
I think I can just punt by saying list-style-position only applies if the ::marker is an in-flow inline-level element.

[18:16:00.0000] <Philip`>
AryehGregor: It seems hard to judge the compatibility risk from the proportion of sites making more complex use of innerText, unfortunately

[18:17:00.0000] <Philip`>
since there might be 10% of all sites using it in trivial ways and 0.01% using it in complex ways

[18:17:01.0000] <Philip`>
so looking through a list of sites using innerText won't show the difficult ones

[18:17:02.0000] <Philip`>
which is a pain :-(

[18:18:00.0000] <Philip`>
(It's much easier with features that are used on 0.01% of sites and not used anywhere else, because then you don't have to try hard to filter out huge amounts of trivial junk)

[18:21:00.0000] <jamesr_>
are you auditing major libraries?

[18:43:00.0000] <wirepair>
does anyone implement the steps as outlined: http://dev.w3.org/html5/spec/Overview.html#autofocusing-a-form-control ?

[18:44:00.0000] <wirepair>
in particular ff 4.0b11 and chrome 8.0.552 seem to disregard step #3

[18:44:01.0000] <wirepair>
er sorry step #5

[21:04:00.0000] <Hixie>
hsivonen: do you recall why you wrote "the Document of the script element at the time the running a script

[21:04:01.0000] <Hixie>
algorithm started"

[21:04:02.0000] <Hixie>
rather than just the element's Document at the point in the running a script algorithm that the step is in?

[21:05:00.0000] <Hixie>
i don't see anything that could make it different

[21:06:00.0000] <Hixie>
hm i guess it's what the next step already says

[21:06:01.0000] <Hixie>
i wonder why i did it that way

[21:37:00.0000] <Hixie>
hey didn't we fix the spec to say that href="?from=1&to=2" was not an error?

[21:38:00.0000] <Hixie>
MikeSmith: do you know if the validator was updated with the latest char ref stuff?

[21:39:00.0000] <Hixie>
/me blogs for the first time in 10 months

[21:39:01.0000] <MikeSmith>
Hixie: how latest?

[21:39:02.0000] <Hixie>
the stuff that made &to= not be a bug

[21:40:00.0000] <MikeSmith>
you got a bug number?

[21:40:01.0000] <Hixie>
no

[21:40:02.0000] <MikeSmith>
/me looks through http://hg.mozilla.org/projects/htmlparser/

[21:41:00.0000] <MikeSmith>
I have not ever touched that part of the parser code myself

[21:41:01.0000] <Hixie>
k

[21:41:02.0000] <Hixie>
looks like it hasn't

[21:41:03.0000] <MikeSmith>
and I don't remember Henri mentioning it

[21:41:04.0000] <Hixie>
it says my blog is invalid, but it looks like from the spec that I finally buckled under the pressure and made that not a bug

[21:41:05.0000] <Hixie>
not a conformance violation, i mean

[21:41:06.0000] <Hixie>
so i guess it's a validator bug now

[21:41:07.0000] <Hixie>
:-)

[21:42:00.0000] <Hixie>
anyway, gotta go. bbl.

[21:42:01.0000] <MikeSmith>
thanks!

[21:42:02.0000] <MikeSmith>
I'll raise a bug for it

[21:42:03.0000] <MikeSmith>
…and assign it to Henri

[21:42:04.0000] <Hixie>
hsivonen will hopefully be happy that i finally fixed one of his script things :-)

[21:42:05.0000] <MikeSmith>
hot potato

[21:42:06.0000] <Hixie>
hehe

[21:42:07.0000] <Hixie>
later

[21:50:00.0000] <hsivonen>
/me looks for spec changes

[21:50:01.0000] <hsivonen>
Hixie, MikeSmith: I thought I had fixed error reporting for ampersands in attribute values

[21:51:00.0000] <MikeSmith>
/me don't remember

[21:53:00.0000] <MikeSmith>
if so, I hope I didn't cause it to regress with any of my patches

[21:54:00.0000] <MikeSmith>
but I don't recall touching that

[21:57:00.0000] <hsivonen>
Hixie: thanks for fixing the async defaults to true bug!

[22:47:00.0000] <hsivonen>
wow. the IEblog WebM post sure has an astroturfy title

[00:08:00.0000] <othermaciej>
hsivonen: seems a little funny for them to call themselves "the community" but Dean has a good point about the standards status of WebM and Google's seeming disinterest in making it a real standard

[00:15:00.0000] <Hixie>
what is a "real" standard?

[00:16:00.0000] <othermaciej>
I guess that's hard to say

[00:16:01.0000] <othermaciej>
but I would say (a) controlled exclusively by a single corporation; and (b) defined in terms of a single specific implementation, bugs and all; are disqualifying conditions

[00:17:00.0000] <Hixie>
(b) seems resolved (http://tools.ietf.org/html/draft-bankoski-vp8-bitstream-00)

[00:17:01.0000] <Hixie>
dunno what the status on (a) is

[00:18:00.0000] <othermaciej>
"If there are any conflicts between this document and the reference source

[00:18:01.0000] <othermaciej>
   code, the reference source code should be considered correct.  The

[00:18:02.0000] <othermaciej>
   bitstream is defined by the reference source code and not this

[00:18:03.0000] <othermaciej>
   document."

[00:24:00.0000] <hsivonen>
othermaciej: yeah, it looks bad that WebM hasn't been blessed by something like ECMA.

[00:25:00.0000] <hsivonen>
personally, I think that at this point it would be bad to bikeshed the bitstream

[00:25:01.0000] <hsivonen>
/me would hate to see WebM have the fate of Web Socket

[00:25:02.0000] <othermaciej>
yeah, better not submit it to the IETF

[00:28:00.0000] <hsivonen>
has OpenType been blessed by ISO without bikeshedding?

[00:29:00.0000] <Hixie>
othermaciej: hm, yeah, that's sad. oh well.

[00:29:01.0000] <Hixie>
reference implementations are a terrible way to spec technology

[00:29:02.0000] <hsivonen>
that is, is OpenType basically an "open" spec where the participating communite was Microsoft and Adobe?

[00:29:03.0000] <hsivonen>
(at the time of speccing the details)

[00:29:04.0000] <hsivonen>
*community

[00:30:00.0000] <othermaciej>
I know nothing of the history

[00:30:01.0000] <othermaciej>
it is apparently an ISO standard now

[00:30:02.0000] <othermaciej>
(according to Wikipedia)

[00:31:00.0000] <hsivonen>
anyway, if stuff works and is RF, I don't think it's inherently bad that a format was set by one or a couple of players instead of a wide committee

[00:32:00.0000] <hsivonen>
PDF up to and including 1.4 works pretty well, though the spec was Adobe-controlled

[00:33:00.0000] <hsivonen>
from 1.5 onwards, I'm pretty happy that Apple de facto limited how crazy Adobe could make the format that can be deployed

[00:33:01.0000] <othermaciej>
Java being controlled by Sun is perhaps a more problematic example

[00:33:02.0000] <othermaciej>
notwithstanding claimed RF commitments

[00:34:00.0000] <othermaciej>
PDF in the wild is unfortunately still a bit too crazy

[00:34:01.0000] <hsivonen>
Java is not a file format, though

[00:34:02.0000] <hsivonen>
program execution environments are rather hard to make interoperate when they get as large and Java's default libs

[00:34:03.0000] <othermaciej>
there are sites that use PDF scripting solely to print things

[00:34:04.0000] <othermaciej>
by making self-printing PDFs that use JavaScript to do it, basically

[00:35:00.0000] <hsivonen>
I think JS in PDF is one of the part where Adobe went into the weeds

[00:35:01.0000] <hsivonen>
the Adobe Intelligent Document Platform in general is, IMO

[00:35:02.0000] <othermaciej>
I would agree that Java is not *just* a file format

[00:35:03.0000] <othermaciej>
but .class is sent over the wire just the same as .pdf or .html or .swf

[00:35:04.0000] <hsivonen>
othermaciej: well, sure, Java has a file format as a component, but it's not the interesting part

[00:36:00.0000] <hsivonen>
it's a necessary part, but not at all the hard part interop-wise

[00:36:01.0000] <hsivonen>
(well, depends on whether you count byte code verification as part of the format)

[00:38:00.0000] <othermaciej>
it kind of boggles the mind that HTML4 added a tag solely for embedding Java programs

[00:38:01.0000] <erlehmann>
hsivonen, watch the talk OMG WTF PDF from 27th chaos communication congress. you may be surprised.

[00:38:02.0000] <erlehmann>
PDF basically is a mess.

[00:38:03.0000] <erlehmann>
even without taking javascript into account

[00:39:00.0000] <othermaciej>
that reminds me that PDF and Java are also huge vectors for malware delivery via the browser

[00:39:01.0000] <erlehmann>
slides are here http://events.ccc.de/congress/2010/Fahrplan/events/4221.en.html

[00:41:00.0000] <othermaciej>
don't know if this relates to the de-facto mostly-single-implementation nature

[00:42:00.0000] <hsivonen>
erlehmann: I've read the entire PDF spec as it existed in 2002 (1.4 probably). I know it's an evolutionary mess, but it still works remarkably well for capturing resolution-independent final-form paginated graphics.

[00:42:01.0000] <hsivonen>
othermaciej: PDF or Adobe Reader?

[00:43:00.0000] <hsivonen>
othermaciej: is anyone delivering malware via Preview, Foxit or Evince?

[00:43:01.0000] <othermaciej>
hsivonen: I suspect you are a lot safer browsing PDFs on a Mac if you don't install Adobe Reader

[00:43:02.0000] <hsivonen>
/me doesn't count one of the iPhone jailbreaks as malware, because users wanted to have their phones jailbroken

[00:44:00.0000] <erlehmann>
hsivonen, mea culpa for underestimating your ability to withstand spec-induced pain. but you should still fast-forward through the talk, its funney :)

[00:44:01.0000] <hsivonen>
erlehmann: lol. the slides are in... PDF!

[00:45:00.0000] <hsivonen>
but 404 :-(

[00:45:01.0000] <erlehmann>
hsivonen, brace for impact

[00:45:02.0000] <erlehmann>
oops

[00:47:00.0000] <erlehmann>
hsivonen, http://blog.fireeye.com/files/27c3_julia_wolf_omg-wtf-pdf.pdf

[00:48:00.0000] <erlehmann>
possibly her best quote “It's called Adobe Acrobat because it'll bend over backwards!”

[00:49:00.0000] <erlehmann>
relevant blog post http://blog.fireeye.com/research/2011/02/omg-wtf-pdf-denouement.html

[00:49:01.0000] <hsivonen>
speaking  of PDF, who wants to bet on http://www.w3.org/Bugs/Public/show_bug.cgi?id=11962 ending up FIXED?

[00:52:00.0000] <othermaciej>
maybe closed as WORKSFORME citing canvas...

[00:52:01.0000] <othermaciej>
(though of course, I don't think anyone implements that hypothetically possible feature)

[00:52:02.0000] <erlehmann>
hsivonen, when you read the PDF spec, was the launch action already available? did you get all “WTF were they thinking?” or was it just “this is wrong in a consistent and expected way”?

[00:53:00.0000] <hsivonen>
erlehmann: I don't recall, but by that time, they had already dabbled with video in PDF, which misses the core comptence of PDF spectacularly

[00:54:00.0000] <erlehmann>
othermaciej, i do not understand what problems baddi is having with printing to files.

[00:54:01.0000] <hsivonen>
erlehmann: that presentation seems to be a recount of all the crazy stuff that I'm happy that Apple doesn't support and, therefore, is confined to ill-fated intranets and Adobe Reader-based exploits

[00:54:02.0000] <erlehmann>
hsivonen, lets hope they converted the videos to CMYK, otherwise printers are not gonna print the- OH WAIT :D

[00:56:00.0000] <erlehmann>
does apple use libpoppler or something home-grown?

[00:56:01.0000] <hsivonen>
erlehmann: home-grown, I imagine

[00:56:02.0000] <hsivonen>
I haven't seen their source

[00:57:00.0000] <hsivonen>
but yeah, it's scary that people actually have Adobe Reader installed and use it given all those "features"

[01:00:00.0000] <hsivonen>
/me wonders what codebase Chrome's bundled PDF reader comes from

[01:00:01.0000] <erlehmann>
its funny what kind of computing environments i see in my peer groups. even the non-nerds mostly use linux or os x.

[01:01:00.0000] <erlehmann>
but when i visited an indie game jam recently, almost every single team developed for windows/xbox or flash. on windows.

[01:02:00.0000] <erlehmann>
those are the kinds of people affected by adobe reader exploits and i am happy i do not have to put up with that.

[01:02:01.0000] <erlehmann>
(some even got angry when i asked about their source repositories. so the culture shock goes both ways.)

[01:05:00.0000] <othermaciej>
I don't understand how anyone could possibly program without version control

[01:06:00.0000] <erlehmann>
ha! the two teams having version control used SVN!

[01:06:01.0000] <erlehmann>
(out of … 11?)

[01:08:00.0000] <erlehmann>
fun fact: several years ago, i saw the SVN repository of a student group having to do an assignment that included having to use version control to pass.

[01:08:01.0000] <erlehmann>
it included directories named 2006-11-01 and so on.

[01:08:02.0000] <erlehmann>
for every single day they had coded something.

[01:08:03.0000] <erlehmann>
my face was like ._.

[01:35:00.0000] <connrs>
[A

[01:51:00.0000] <webr3>
is CORS anywhere near going to LC?

[01:57:00.0000] <roc>
"PDF: a native code execution format pioneered by Adobe" (shaver quote)

[01:58:00.0000] <erlehmann>
roc, especially funny about the talk is julia wolfs idea in the beginning, that if the model was slightly different, adobe would have re-invented lisp.

[01:59:00.0000] <roc>
I think Google *wants* WebM to be a real standard, but is just failing to do anything useful about it

[02:00:00.0000] <roc>
I admit that it's hard to tell

[02:00:01.0000] <hsivonen>
erlehmann: AFAICT, except for the length versus sentinel stuff, I think most craziness wasn't fundamental to PDF's original design

[02:00:02.0000] <hsivonen>
erlehmann: rather, horrible, horrible later day misfeatures and Reader bugs

[02:01:00.0000] <hsivonen>
FWIW, I think it would be good for Firefox to have a built-in PDF reader that supports roughtly the Apple/Evince subset

[02:01:01.0000] <hsivonen>
*roughly

[02:02:00.0000] <roc>
we should write one in JS

[02:04:00.0000] <hsivonen>
roc: a PDF to SVG converter in JS would make sense if SVG had the ability to access fonts by glyph index instead of Unicode character

[02:04:01.0000] <roc>
we could add that

[02:05:00.0000] <hsivonen>
roc: so some stuff would need to be added, but yeah, I think writing one in JS (by converting to SVG) would make sense

[02:06:00.0000] <hsivonen>
though I wonder how that would perform compared to Evince or Preview

[02:06:01.0000] <roc>
you'd have to do some experiments to see if it can be competitively fast

[02:06:02.0000] <roc>
is PDF fully programmable like PS?

[02:07:00.0000] <hsivonen>
roc: if you count the misfeatures, it is! (with JavaScript)

[02:07:01.0000] <roc>
I mean the sane subset

[02:07:02.0000] <hsivonen>
roc: no

[02:07:03.0000] <jgraham>
I thought originally I was supposed to be less programmable

[02:07:04.0000] <jgraham>
Indeed, I thought that was the value proposition

[02:07:05.0000] <jgraham>
But I might be wrong

[02:07:06.0000] <erlehmann>
roc, multiple indepentent implementations, royalty-free patent licensing, IETF draft for vp8 bitstream … it is hard to tell what is missing.

[02:07:07.0000] <roc>
what maciej said, at least, part #2

[02:08:00.0000] <hsivonen>
erlehmann: that the IETF drafts is on the "informational" track?

[02:08:01.0000] <erlehmann>
hsivonen, i see what you did there.

[02:09:00.0000] <hsivonen>
roc: oh, and I'm assuming the sane subset covers only outline fonts with TrueType or CFF outlines

[02:09:01.0000] <hsivonen>
roc: not Type 3 stuff and such

[02:10:00.0000] <hsivonen>
I'm not sure if Type 3 has crazy programmability. I suspect it does.

[02:10:01.0000] <erlehmann>
hsivonen, but it should serve to appease the „oh noes i have to read googles code to get anything done“ crowd

[02:10:02.0000] <roc>
we'd just repack embedded fonts into data: URLs

[02:10:03.0000] <erlehmann>
cue code examples excerpts from the draft.

[02:11:00.0000] <hsivonen>
roc: might be worth seeing how far Adobe Mars got

[02:11:01.0000] <hsivonen>
as I undestand it, they tried to support the PDF feature set with SVG syntax

[02:19:00.0000] <othermaciej>
erlehmann: the IETF draft explicitly says that the reference implementation is authoritative, and not the draft

[02:20:00.0000] <othermaciej>
erlehmann: as I said earlier: http://krijnhoetmer.nl/irc-logs/whatwg/20110203#l-546

[02:20:01.0000] <jgraham>
hsivonen: Ignoring the fundamental design that you don't like, did you have some suggestion about the API for signalling to testharness.js "there are more results coming, please hold"

[02:20:02.0000] <jgraham>
I seem to recall that you did

[02:21:00.0000] <jgraham>
/me has a problem that he is not sure how to solve in the nicest way

[02:21:01.0000] <erlehmann>
othermaciej, oh. i guess that is the #whatwg version of slashdots RTFA, then.

[02:21:02.0000] <othermaciej>
so yeah, you do have to read and reverse-engineer Google's code if you want to independently reimplement it

[02:21:03.0000] <erlehmann>
othermaciej, thanks.

[02:22:00.0000] <othermaciej>
not only in theory, but apparently the people who wrote an independent decoder said had to consult the source too

[02:22:01.0000] <hsivonen>
jgraham: I think the default should be "there are more results coming, please hold"

[02:22:02.0000] <jgraham>
(I have a file with many tests. I would like each test to have a rather short timeout, and the overall file to have a rather long timeout. I would ideally like to declare all the tests upfront so that if the file times out it is obvious what went wrong rather than just getting fewer results than expected)

[02:22:03.0000] <hsivonen>
jgraham: and once there aren't more results coming, the test script should have to call finish();

[02:22:04.0000] <othermaciej>
they claimed (I have no basis to verify) that the spec is extremely vague and flat contradicts what the code does in a number of places

[02:23:00.0000] <erlehmann>
othermaciej, so getting the bitstream fixed is not a priority for google? a truly sad thing :/

[02:23:01.0000] <othermaciej>
by "fixed" do you mean "frozen" or "made correct"?

[02:23:02.0000] <jgraham>
hsivonen: Hmm, OK.

[02:23:03.0000] <jgraham>
Not really backwards compatible

[02:24:00.0000] <othermaciej>
because I believe it is already declared frozen, but based on the behavior of their implementation, not any spec

[02:24:01.0000] <jgraham>
But maybe enough to give me an idea

[02:25:00.0000] <erlehmann>
othermaciej, i meant frozen. but if they do not change their implementation, i guess thats as good as it can get.

[02:25:01.0000] <hsivonen>
jgraham: the alternative is doing what Mochitest does.

[02:25:02.0000] <hsivonen>
jgraham: where the test first calls waitForExplicitFinish()

[02:25:03.0000] <hsivonen>
jgraham: and then later finish();

[02:26:00.0000] <hsivonen>
jgraham: but in my experience, it makes more sense to make waiting the default mode

[02:28:00.0000] <jgraham>
hsivonen: It seems people want a setup() function anyway that you can use to run code before any tests. I was thinking that being able to do setup({waitForExplicitFinish:true}) or similar might work

[02:28:01.0000] <jgraham>
and leave the option of flipping the default later

[02:29:00.0000] <hsivonen>
jgraham: I suggest using something less verbose than what Mochitest uses

[02:29:01.0000] <jgraham>
waitForExplicitFinish is very long for sure

[02:29:02.0000] <hsivonen>
jgraham: I have to copy and paste the mochitest stuff from a wiki every. single. time.

[02:29:03.0000] <hsivonen>
like namespace URLs

[02:29:04.0000] <othermaciej>
WebKit tests default is that the test is considered done after it finishes loading unless it earlier asks the harness to wait until it calls an explicit done method

[02:30:00.0000] <othermaciej>
(waitUntilDone() / notifyDone() are the calls)

[02:30:01.0000] <hsivonen>
othermaciej: that's the Mochitest model

[02:30:02.0000] <jgraham>
That sounds very like the model I am thinking of too :)

[02:30:03.0000] <hsivonen>
othermaciej: my observation is that almost always the explicit waiting mechanism is needed anyway

[02:30:04.0000] <othermaciej>
I think it is convenient for the significant subset of script tests that can be done fully syncrhonously or in onload

[02:30:05.0000] <hsivonen>
ok.

[02:31:00.0000] <roc>
It seems to me that I have to use SimpleTest.waitForFinish() and SimpleTest.finish() in every single test I write

[02:31:01.0000] <roc>
maybe it's just me

[02:32:00.0000] <jgraham>
Maybe Mochikit and the WebKit harness encourage different styles

[02:32:01.0000] <othermaciej>
a lot of the tests I have written have been for DOM APIs or pure JavaScript

[02:33:00.0000] <othermaciej>
so that may have an impact on my perception

[02:34:00.0000] <jgraham>
Yeah, testing pure javascript is rather easier than testing complex async APIs

[02:34:01.0000] <zcorpan>
the experience i have so far with testharness.js is that for future tests i write i'm only going to use async_test even if the test i write is sync in nature

[02:34:02.0000] <othermaciej>
editing tests are mostly not async either

[02:35:00.0000] <roc>
ok, rough numbers, 1590 out of 3131 mochitests use waitForExplicitFinish

[02:35:01.0000] <zcorpan>
because then i can copy/paste the same code for the next test regardless of whether i want it to be sync or async

[02:35:02.0000] <jgraham>
zcorpan: OOI why? Also, I didn't know you had used it :)

[02:35:03.0000] <jgraham>
Heh

[02:36:00.0000] <zcorpan>
jgraham: only a little

[02:36:01.0000] <zcorpan>
jgraham: also i would like step() to return a function :)

[02:36:02.0000] <jgraham>
zcorpan: Me too.

[02:37:00.0000] <jgraham>
zcorpan: I just don't fancy changing all the existing tests :(

[02:37:01.0000] <zcorpan>
i tested if using onevent = new t.step(function(){...}) would work but it seems it doesn't

[02:38:00.0000] <jgraham>
/me tries to remember how branching works in hg

[02:39:00.0000] <roc>
"hg update -r <changeset>", make some changes, "hg commit"?

[02:41:00.0000] <jgraham>
Well specifically named branched

[02:41:01.0000] <jgraham>
*branches

[02:41:02.0000] <jgraham>
What git would call branches

[03:23:00.0000] <hsivonen>
Hixie: I think conceptually, innerHTML, createContextualFragment and XSLTProcessor.transformToFragment are shortcuts for creating DOM subtrees in script

[03:24:00.0000] <hsivonen>
Hixie: since innerHTML-created scripts don't run anyway, it's safe to consider them as not parser-created

[03:24:01.0000] <hsivonen>
Hixie: so that the force-async stuff is observable in a way that's consistent for DOM subtrees created without such shortcuts

[03:25:00.0000] <hsivonen>
Hixie: it only matters if someone really wishes to read the .async property on innerHTML-created scripts

[03:25:01.0000] <hsivonen>
also, I wonder if mattmay has noticed what the IETF's patent policy is like

[03:26:00.0000] <hsivonen>
(not to suggest that IETF's makes the WHATWG's lack of policy better, but just to put things in perspective)

[03:48:00.0000] <jgraham>
Philip`: fwiw, it seems like PyPy has better than a factor of 2 wins for the benchmarks where you might expect it i.e. ones that sound like they are calculations in loops

[03:49:00.0000] <jgraham>
e.g. it is about 20x faster for "raytrace-simple"

[03:57:00.0000] <karlcow>
hsivonen: if you see errors into http://www.la-grange.net/2011/02/03/standard-organization

[03:57:01.0000] <hsivonen>
jgraham: why would PyPy have perf wins over anything?

[03:58:00.0000] <hsivonen>
isn't PyPy python implemented in python?

[03:58:01.0000] <jgraham>
hsivonen: Yes, but they also implemneted a JIT

[03:58:02.0000] <jgraham>
So it is faster than CPython for many cases

[03:58:03.0000] <hsivonen>
jgraham: what does in JIT to?

[03:59:00.0000] <hsivonen>
karlcow: I don't see errors, but I don't know OMG, OASIS or WAPF policies well enough to check correctness

[03:59:01.0000] <jgraham>
hsivonen: Machine code I assume

[03:59:02.0000] <hsivonen>
karlcow: oh, and I believe ISO WGs can decide to be RF if they want to

[03:59:03.0000] <hsivonen>
karlcow: don't take my word for that, though

[04:00:00.0000] <jgraham>
karlcow: I suppose it is obvious that you seem to be missing some people

[04:00:01.0000] <hsivonen>
karlcow: I believe the original JPEG Baseline wasn't RF by accident but the group deliberately wanted to have an RF Baseline profile

[04:00:02.0000] <hsivonen>
karlcow: so arithmetic coding wasn't put into Baseline

[04:00:03.0000] <hsivonen>
and of course, everyone implemented just the baseline

[04:01:00.0000] <hsivonen>
so the existence of non-Baseline is mainly an academic thing

[04:01:01.0000] <hsivonen>
blame IBM

[04:01:02.0000] <hsivonen>
for not making arithmetic coding RF back then

[04:02:00.0000] <hsivonen>
basically, we've been transmitting more bits than known to be necessary for the lifetime of the Web

[04:02:01.0000] <hsivonen>
so that IBM could make a buck

[04:03:00.0000] <hsivonen>
except no one wanted to take a license from them so everyone lost

[04:03:01.0000] <hsivonen>
IBM didn't get money and everyone else didn't get better compression

[04:03:02.0000] <hsivonen>
sadness

[04:08:00.0000] <karlcow>
it is a cut n paste of a table I made in 2002

[04:12:00.0000] <hsivonen>
hmm. so it looks like there is an actual disposition of comments for ARIA that includes my comments

[04:12:01.0000] <hsivonen>
http://www.w3.org/WAI/PF/comments/issue_disposition_report?document_version_id=1

[04:13:00.0000] <hsivonen>
but the latest version links to a different DoC that makes it look like those comments didn't exist

[04:14:00.0000] <hsivonen>
I find it interesting that the PF claims that some of the feedback items that I've raised have the disposition "Accepted proposal" when my Acknowledgement is "Do not accept"

[04:15:00.0000] <hsivonen>
I wonder if I should have made some of those Formal Objections

[04:17:00.0000] <hsivonen>
I wonder what the CR exit criteria for ARIA is...

[04:18:00.0000] <hsivonen>
if they are serious about CR exit criteria (like CSS is), some of my comments that they didn't address should block exit from CR

[04:18:01.0000] <hsivonen>
unless implementors do something silly

[04:19:00.0000] <zcorpan>
has ARIA fixed the <body>-or-<frameset>-is-the-root-element-in-HTML thing?

[04:19:01.0000] <hsivonen>
zcorpan: dunno

[04:19:02.0000] <hsivonen>
item 5 in ARIA CR exit criteria is "Verify interoperable results: Find at least two implementations of each normative requirement where the defined behavior for the respective accessibility API is observed. "

[04:20:00.0000] <hsivonen>
maybe I should check if e.g. the role=math stuff is formulated as a normative requirement

[04:20:01.0000] <hsivonen>
because it's easy to pull the XHTML2 WG trick of exiting CR by not having normative requirements

[04:23:00.0000] <zcorpan>
it seems the definition of "ARIA root" (or whatever it was called) is gone, but there's still "authors SHOULD set the role of application on the root node for content, such as the body element in HTML or svg element in SVG."

[04:23:01.0000] <hsivonen>
on a more positive note, role=math has gained examples: http://www.w3.org/TR/wai-aria/complete#math

[04:24:00.0000] <hsivonen>
the spec text itself doesn't make it at all clear what they meant

[04:24:01.0000] <hsivonen>
it's bad if one has to look at examples to decrypt the spec text

[04:25:00.0000] <hsivonen>
the sentence 'This role provides a hook whereby a plug-in mechanism can provide multi-modal access to compliant MathML, as well as enabling support for MathML in "mainstream" user agents.' is just weird

[04:25:01.0000] <zcorpan>
i think "math" should be axed, and argued my case when it was introduced but i didn't win

[04:26:00.0000] <zcorpan>
role=math for mathml makes no sense at all

[04:26:01.0000] <zcorpan>
role=math for LaTeX makes some sense, but it's not defined how it should work at all

[04:27:00.0000] <zcorpan>
seems better to focus on MathML

[04:28:00.0000] <hsivonen>
http://www.w3.org/WAI/PF/aria-implementation/#exclude_elements is truly bizarre as far as math goes

[04:29:00.0000] <jgraham>
zcorpan: LaTeX may have a better a11y story at present

[04:29:01.0000] <hsivonen>
is it now the WAI position that math accessibility won't be achieved by MathML getting spoken out but by authors providing textual representations of math as aria-label and the MathML stuff getting suppressed?

[04:30:00.0000] <jgraham>
At least there are > 0 screenreader implementation that understand LaTeX but I am not sure about MathML

[04:30:01.0000] <annevk>
hah, not even cold in Oslo

[04:30:02.0000] <hsivonen>
jgraham: Math Player does MathML to speech

[04:30:03.0000] <hsivonen>
jgraham: for LaTeX, do you mean AsTeR?

[04:30:04.0000] <jgraham>
hsivonen: Interesting. Know if it is any good?

[04:30:05.0000] <annevk>
webr3, if you're around now...

[04:30:06.0000] <hsivonen>
jgraham: I don't

[04:31:00.0000] <jgraham>
hsivonen: Possibly. I have heard they exist at least

[04:31:01.0000] <hsivonen>
jgraham: should be easy enough to try if you have a Windows VM around

[04:31:02.0000] <jgraham>
And it seems more generally useful since blind people publishing math content will probably have to use LaTeX anyway

[04:31:03.0000] <jgraham>
Or Microsoft word, I guess

[04:32:00.0000] <jgraham>
But LaTeX in maths/physical sciences

[04:33:00.0000] <hsivonen>
I guess I'll raise a CR comment about role=math

[04:33:01.0000] <hsivonen>
because the spec text sucks

[04:33:02.0000] <hsivonen>
even if one accepts the design that can be inferred from the Implementor's Guide and the examples taken together

[04:36:00.0000] <annevk>
/me should probably read the backlog

[04:37:00.0000] <jgraham>
/me wishes it were easy to pause a setTimeout

[04:38:00.0000] <jgraham>
Hmm, maybe I don't need it

[04:43:00.0000] <webr3>
/me is around in about 2 minutes, need to grab a drink

[04:50:00.0000] <annevk>
webr3, having reread, what you think about namespaces is somewhat separate from thinking you can do things over

[04:50:01.0000] <annevk>
webr3, "XHTML 2.0" is sort of the canonical example of how reinventing a language and "improving" it slightly is not working in practice

[04:51:00.0000] <annevk>
webr3, with which I meant to say that reinventing the web security model is not going to work in practice

[04:51:01.0000] <annevk>
webr3, not until the web is replaced

[04:54:00.0000] <webr3>
annevk, on namespaces: did you see my comments on namespaces, rdfa and html to the tag before? http://lists.w3.org/Archives/Public/www-tag/2011Feb/0032.html

[04:56:00.0000] <webr3>
annevk, on web security I'm not saying CORS doesn't deal with the hear and now, it does - I'm saying that it doesn't cater for / help reverse the insecurities of the web in any way, there is something fundamentally flawed when you can do insecure stuff and be "logged in" by passing a string token in plain text (cookies) ...

[04:57:00.0000] <webr3>
and when you cannot read a comment in a script included remotely, but when you can execute a function from that script

[04:57:01.0000] <webr3>
and when most of the web APIs in the world use things like JSONP and not CORS, the former being a cross origin request that executes code from another library

[04:58:00.0000] <annevk>
well yes, you have said that before, and I believe I replied with that we hope that will change once CORS is more widely implemented

[05:00:00.0000] <webr3>
aside: obviously it's nothing personal in any way, and all a means to the same end, same side as it were, just want people to be secure/safe on line and have a good experience on line - it'd be good if both approaches could be combined (deal with the hear and now, move to a "securer" web from both a security and privacy standpoint, long term, and not /just/ for the browsers, but for everyone

[05:00:01.0000] <annevk>
the problem is unique to browsers though

[05:00:02.0000] <webr3>
I really don't have much else to say other than that, but do want to stress that I'm not just some random academic who uses decade old techs, rather a dev who wants to use the techs of the next decade

[05:01:00.0000] <webr3>
annevk, it's not - honestly

[05:01:01.0000] <annevk>
no need to say you're honest, you can give me an example

[05:02:00.0000] <annevk>
;)

[05:03:00.0000] <webr3>
if an intranet is insecure because data can pass between the local net and internet, then it's insecure, and any program w/ tcp access is as vulnerable as the next - likewise if a website can be comprimised because a cookie can be sniffed and used to auth, then its comprimised for all clients, not just browsers (firesheep anybody?)

[05:05:00.0000] <webr3>
non of it can be addressed overnight - if intranets were secured properly, and XHR simply stripped all headers like cookie and the like (unsafe ones) then we'd all be in a better place

[05:05:01.0000] <hsivonen>
I sent yet another comment: http://lists.w3.org/Archives/Public/www-math/2011Feb/0001.html

[05:05:02.0000] <webr3>
disagree?

[05:06:00.0000] <hsivonen>
webr3: then you couldn't use XHR for services that need login, which would be bad, too

[05:06:01.0000] <hsivonen>
(or you'd need to implement XHR credentials explicitly in JS)

[05:07:00.0000] <webr3>
or use HTTP+TLS w/ client side certs or by havign an api and protocol which used TLS extensions to pass username and password like SRP

[05:08:00.0000] <webr3>
"login" shouldn't be happening though.. HTTP is stateless, TLS isn't, stateful auth at TLS session level = cool, stateful HTTP = not cool

[05:09:00.0000] <webr3>
we all know it's the source of almost every security vuln there is on the web and in the browsers

[05:09:01.0000] <webr3>
none of us can argue that

[05:10:00.0000] <hsivonen>
webr3: HTTP being stateless is fiction

[05:11:00.0000] <hsivonen>
webr3: how do things become better if ambient state moves to the TLS layer?

[05:11:01.0000] <hsivonen>
webr3: or would you make it non-ambient?

[05:11:02.0000] <hsivonen>
(how?)

[05:12:00.0000] <webr3>
well no, state should be maintained on the client side, in the application, not on the server at all, some resources need ACL protection and that's a different, non stateful matter, better handled with HTTP+TLS

[05:13:00.0000] <hsivonen>
webr3: cookie-based login maintains state on the client, no_

[05:13:01.0000] <hsivonen>
?

[05:13:02.0000] <annevk>
webr3, so yeah, if you have some kind of malware on your computer the intranet is "vulnerable"

[05:13:03.0000] <annevk>
webr3, if there is no such thing though, it is just the browser

[05:13:04.0000] <webr3>
hsivonnen, no - else there wouldn't be any need for a cookie..

[05:14:00.0000] <hsivonen>
webr3: so a client-side cert is a glorified cookie

[05:14:01.0000] <webr3>
no..

[05:15:00.0000] <hsivonen>
webr3: when the browser presents a client-side cert to the server, how does the server know the request wasn't triggered by something representing user intent instead of something scripted?

[05:15:01.0000] <hsivonen>
webr3: how is a client-side cert not a glorified cookie in the sense that it's an identifying token than the browser presents to the server

[05:15:02.0000] <hsivonen>
?

[05:16:00.0000] <webr3>
lol, it's the browsers job to ensure the user knows they've just made a request whilst being identified..

[05:16:01.0000] <webr3>
user agents job*

[05:16:02.0000] <hsivonen>
webr3: so how do client-side certs solve anything compared to a UX than confirms if you want to send this cookie to this server?

[05:17:00.0000] <hsivonen>
for this request

[05:17:01.0000] <hsivonen>
webr3: do you have plausible UI designs for letting the users review all the requests that the browser makes?

[05:18:00.0000] <webr3>
encryption over the wire, peer to peer, no requirement for server to maintain state over multiple requests, no way it to be hijacked by an intermediary or third party.

[05:18:01.0000] <hsivonen>
webr3: so do you expect the user to reauthorize the use of the cert for every request in order to avoid having client-side state?

[05:19:00.0000] <webr3>
hsivonen, not a UI guy, but there's another factor, scripts would need to be identified in such a way that users could allow X script and not Y - similar to the approach taken in widgets and warp

[05:19:01.0000] <webr3>
hsivonen, no i expect the user agent to manage which "scripts" are allowed to make what requests, and provide the user with a quick way of saying let script Y make requests to (everywhere, these palces, nowhere)

[05:20:00.0000] <hsivonen>
webr3: good luck with J. Random User identifying scripts

[05:20:01.0000] <hsivonen>
webr3: so how's that different from putting that UX on top of cookies?

[05:20:02.0000] <hsivonen>
how does SSL make the token and UI more magic?

[05:21:00.0000] <hsivonen>
it boils down to having a token and the user authorizing the presentation of the token to the server instead of all requests being ambiently authorized to present the token

[05:22:00.0000] <hsivonen>
or if you don't want the user to oversee this all, the tokens should be tied to the origins making the requests

[05:22:01.0000] <webr3>
no.. it boils down to whether users and websites are safe or not, sending a plain text cookie over insecured protocols to a stateful application is not safe for users or websites, hence the current mess

[05:22:02.0000] <hsivonen>
but that could be done with cookies tied to requesting origin

[05:23:00.0000] <webr3>
http+tls with the presentation of (some user identifier) protects users and websites

[05:23:01.0000] <webr3>
hsivonen, no it can't..

[05:23:02.0000] <hsivonen>
webr3: why not?

[05:24:00.0000] <webr3>
sniff a cookie with firesheep, use curl to send it in a header with a spoofed origin, or no origin

[05:24:01.0000] <webr3>
that's hardly rocket science

[05:24:02.0000] <hsivonen>
currently if Origin A makes a request to Origin B and Origin B sets a cookie, Origin C making a request to Origin B sends back the cookie, because the cookie wasn't put into an Origin A-specific jar

[05:25:00.0000] <webr3>
in the web browsers /only/ - scope out a bit..

[05:25:01.0000] <hsivonen>
webr3: I mean cookies over TLS as opposed to certs over TLS

[05:26:00.0000] <webr3>
okay that's an improvement and keeps people safer; sookie being much more vuln to dictionary brute force etc than public key encryption, but yet forcing TLS when identified is a HUGE step forward

[05:26:01.0000] <webr3>
I'd be happy to see that alone get adopted / pushed

[05:26:02.0000] <webr3>
tis half way there

[05:27:00.0000] <annevk>
anyone know status of IDN for email? and whether we should maybe ignore said status for type=email given that apparently it is seeing some usage already

[05:28:00.0000] <annevk>
we got a complaint that e.g. x@日.jp is not working currently

[05:31:00.0000] <webr3>
hsivonen, are we roughly agreed - or does that help explain my thoughts on the matter?

[05:32:00.0000] <webr3>
annevk, when you're done w/ the IDN stuff, see if the above convo w/ hsivonen makes sense and if you agree that'd be a good goal

[05:32:01.0000] <MikeSmith>
Hixie: nobody implemented @seamless yet?

[05:36:00.0000] <MikeSmith>
karlcow: you should add Khronos group to your standards-org table

[05:36:01.0000] <karlcow>
MikeSmith: ah thanks. will do.

[05:36:02.0000] <hsivonen>
webr3: well, I still don't see how client-side certs solve any cookie problems compared to cookies over TLS

[05:36:03.0000] <annevk>
webr3, STS is the always use TLS solution... or did you mean something else?

[05:37:00.0000] <hsivonen>
webr3: once the sniffing problem is solved with crypto, the rest is a question of when tokens are sent

[05:37:01.0000] <hsivonen>
not a matter of the tokens themselves being crypto thingies

[05:38:00.0000] <webr3>
hsivonen, roughly agree, other than crypto isn't user specific that way, it's just wire crypto, so then the strength of the token becomes a factor

[05:38:01.0000] <webr3>
I'mnot hooked on client side certs, just a TLS when identified as being a good thing, moving to HTTP (http://) being stateless, and anywhere near that would be a huge improvement

[05:39:00.0000] <webr3>
especially if intranet security could be addressed in some way over time too

[05:39:01.0000] <webr3>
just any step in those directions, and some agreement from you guys that that would be a good thing would be enough for me

[05:39:02.0000] <hsivonen>
the main reasons why people do login without crypto are 1) getting certs is trouble and 2) performing crypto burns cycles

[05:40:00.0000] <hsivonen>
of course, login without crypto is a terrible idea in a world with eavesdroppable channels

[05:40:01.0000] <webr3>
:) yes

[05:40:02.0000] <webr3>
to both

[05:40:03.0000] <webr3>
1) is being worked on btw

[05:40:04.0000] <webr3>
making self signed certs easier that is

[05:42:00.0000] <hsivonen>
annevk: fwiw, I think the questions in the IEblog post are very reasonable. the main problems are not saying what risks are apply to H.264 as well and having "from community" in the title instead of "from Dean"

[05:42:01.0000] <hsivonen>
s/are apply/apply/

[05:43:00.0000] <webr3>
/me wonders if saying "yes lets try and do something, anything, about web security, even if it's just getting TLS as defacto when authed and discouraging cookie use" is a hard commitment to make and to facto in to the current model?

[05:45:00.0000] <annevk>
hsivonen, they are reasonable questions, but 2/3 apply to H.264 too

[05:46:00.0000] <annevk>
hsivonen, the problem is indeed the way it is presented

[06:14:00.0000] <loucapo>
greeting all, i am still trying to find some guidance on CORS to a pwd protected url. what i have doesnt seem to work

[06:19:00.0000] <annevk>
you might be running into browser bugs

[06:19:01.0000] <annevk>
if you set an Authorization header yourself and do an otherwise simple request, does the browser issue a preflight request?

[06:20:00.0000] <annevk>
or does it try to directly issue the request (if so, it's a browser bug)

[06:20:01.0000] <loucapo>
its does preflight but i do not see the header in the preflight

[06:23:00.0000] <annevk>
right, if the header is not in Access-Control-Request-Headers there's a bug too

[06:23:01.0000] <loucapo>
i see

[06:24:00.0000] <loucapo>
so i cannot really 100% support that as of now

[06:25:00.0000] <annevk>
you should file some bugs

[06:26:00.0000] <loucapo>
ok, i iwll test it with several browsers first

[06:26:01.0000] <webr3>
loucapo, you are sending the 'Access-Control-Allow-Credentials' header yes?

[06:26:02.0000] <webr3>
(from the server)

[06:26:03.0000] <loucapo>
let me dbl chk

[06:27:00.0000] <loucapo>
yup its true

[06:27:01.0000] <webr3>
how are you sending username and password?

[06:27:02.0000] <loucapo>
Access-Control-Allow-Head...X_REQUESTED_WITH, X-TxId, Content-Type, Cache-Control, AuthorizationAccess-Control-Allow-Meth...GET, POST, OPTIONSAccess-Control-Allow-Orig...http://localhostAccess-Control-Expose-Hea...Status, Content-LengthAccess-Control-Max-Age86400Content-Typetext/htmlAccess-Control-Allow-Cred...true

[06:28:00.0000] <loucapo>
oops that got jumbled

[06:28:01.0000] <webr3>
pastebin it

[06:29:00.0000] <loucapo>
http://pastebin.com/eZW2ZsHz

[06:31:00.0000] <loucapo>
i believe i need to base64 encode u & p

[06:34:00.0000] <webr3>
ahh I had loads of problems with Allow-Origin of localhost, swap that to * for a minute and see if it works

[06:34:01.0000] <annevk>
* + credentials does not work

[06:35:00.0000] <annevk>
besides, we already determined another problem

[09:33:00.0000] <zcorpan>
https://grepular.com/Abusing_HTTP_Status_Codes_to_Expose_Private_Information - should we always fire 'load' for cross-origin images and scripts etc?

[09:46:00.0000] <ap>
Hixie: hsivonen: it seems to be far from "post mortem" stage for script loading hacks required by LABjs, see <http://ln.hixie.ch/?start=1296711456&count=1>

[09:47:00.0000] <ap>
which makes me unsure if we want to implement these latest spec changes in WebKit - what good are they if they don't even make LABjs work?

[09:48:00.0000] <ap>
<https://bugs.webkit.org/show_bug.cgi?id=30862> has the discussion

[09:52:00.0000] <Hixie>
they don't make LABjs work?

[09:53:00.0000] <karlcow>
interesting http://www.guardian.co.uk/news/blog/2011/feb/03/egypt-protests-live-updates

[09:53:01.0000] <karlcow>
>5.52pm: The Guardian's Mona Mahmood has translated another summary into Arabic. We're working on how to format it correctly so that it aligns to the right, not the left.

[09:54:00.0000] <karlcow>
***aligns to the right, not the left***

[09:54:01.0000] <Hixie>
ap: that seems to be an unrelated caching issue

[09:54:02.0000] <karlcow>
I guess they didn't plan at the start to have multilingual pages.

[09:54:03.0000] <ap>
Hixie: it's definitely not technically related

[09:55:00.0000] <ap>
Hixie: it's related in that the technique LABjs wants seems to require both

[09:55:01.0000] <Hixie>
the bug above seems uncontroversial

[09:56:00.0000] <ap>
Hixie: all WebKit developers who cared to comment think it's WONTFIX - is that what you mean by uncontroversial?

[09:56:01.0000] <Hixie>
are we looking at the same bug?

[09:57:00.0000] <Hixie>
if you force-reload a page, the resources referenced by the parser are also force-reloaded, but those referenced by script later are not

[09:57:01.0000] <Hixie>
the comments from devs all seemed positive to me...

[09:57:02.0000] <Hixie>
but i did skim it

[09:58:00.0000] <ap>
Hixie: Kyle Simpson has hijacked the bug to talk about larger issues - he wants reload to set a permanent state on a page, so that all resources will be force-reloaded

[09:58:01.0000] <Hixie>
oh i just ignored his comments cos they were so long

[09:59:00.0000] <hsivonen>
ap: huh? how do you mean don't make LABjs work?

[09:59:01.0000] <hsivonen>
ap: it seemed to me WebKit devs were deferring to Hixie for decision

[09:59:02.0000] <Hixie>
hsivonen: different issue

[09:59:03.0000] <Hixie>
ap: seems reasonable to me to make force-refresh sticky until onload, i agree that beyond that it gets a bit weird

[10:00:00.0000] <hsivonen>
Hixie: oh, ok

[10:00:01.0000] <Hixie>
ap: this all seems to be a UI issue though, i don't see how LABjs could depend on it one way or the other

[10:01:00.0000] <ap>
Hixie: seems like they want to train users to hit shift-refresh (or ctrl+f5) when something doesn't work

[10:01:01.0000] <ap>
Hixie: and that will make dynamic script loading feasible

[10:02:00.0000] <Hixie>
one would hope that something not working would be rare enough that there would be no opportunity for user training on the matter

[10:02:01.0000] <Hixie>
especially since whether it works or not is entirely under the control of the author here

[10:02:02.0000] <Hixie>
if they want to force refresh, just have them change the url

[10:02:03.0000] <Hixie>
foo.js?r=2

[10:02:04.0000] <Hixie>
foo.js?r=3

[10:02:05.0000] <Hixie>
foo.js?r=4

[10:02:06.0000] <Hixie>
etc

[10:04:00.0000] <hsivonen>
relying on user training when the author has too long an expiry but doesn't change the URL seems like FAIL to me

[10:05:00.0000] <hsivonen>
either the author should make expiry short or change the URL

[10:09:00.0000] <ap>
hsivonen: wholeheartedly agreed. Shift-reload is something we were extremely hesitant to even implement in Safari, and making it part of normal user experience is a bad idea

[10:12:00.0000] <othermaciej>
hsivonen, ap: maybe the shift-reload is only intended for use during development and testing?

[10:13:00.0000] <othermaciej>
(though really a staging server for testing should have very short expirations)

[10:13:01.0000] <ap>
othermaciej: today, its behavior only helps with buggy caching proxies - instead of revalidation, it forces end to end reload

[10:14:00.0000] <othermaciej>
ah

[10:16:00.0000] <hsivonen>
in any case, as long as window.location.reload() changes aren't being requestied, this seems like a thing that doesn't belong in a spec that's concerned with interop

[10:18:00.0000] <Hixie>
indeed

[10:18:01.0000] <Hixie>
ui issue

[10:24:00.0000] <AryehGregor>
Philip`, I was more trying to get a feel for how authors use the feature, not judge compat risk.

[10:25:00.0000] <AryehGregor>
E.g., ehsan asked what the use-cases were for innerText, and now I have a couple.

[10:25:01.0000] <AryehGregor>
Opera people have already said you can mostly get compat by making it work almost like textContent.

[11:20:00.0000] <jgraham>
FWIW Opera doesn't have a concept of force-reload exposed in the UI

[11:26:00.0000] <heycam>
annevk, a table i can't quite remember. what would it be a table of?

[11:32:00.0000] <jgraham>
heycam: If you are asking the question I think you are asking, DOM Method and behaviour with null

[11:34:00.0000] <heycam>
jgraham, ah

[11:34:01.0000] <heycam>
jgraham, yeah I did test a bunch of methods and put the results somewhere...

[11:38:00.0000] <heycam>
jgraham, annevk, i found this http://mcc.id.au/2007/05/binding-tests/index.html but i don't think that's what you're after. (there's one test in there for assigning null to some attributes but it looks like i don't have the results recorded.)

[11:40:00.0000] <heycam>
for DOMStrings and the specs, at least, there are these: http://dev.w3.org/2006/webapi/WebIDL/dom/

[11:41:00.0000] <heycam>
s/the specs/the DOM specs/

[12:03:00.0000] <AryehGregor>
Hixie, it's not at all clear to me whether any browsers are interested in an innerText or Selection.toString() spec.

[12:06:00.0000] <AryehGregor>
Maybe WebKit is, I've gotten no feedback from anyone there yet one way or another.

[12:06:01.0000] <AryehGregor>
Well, anyway, I'll keep discussing it, but I'll take a look at createContextualFragment() now.

[12:08:00.0000] <AryehGregor>
Is there something wrong with http://html5.org/specs/dom-parsing.html#dom-range-createcontextualfragment ?

[12:08:01.0000] <othermaciej>
AryehGregor: we intend to keep those features and it would be nice to have a spec

[12:10:00.0000] <AryehGregor>
othermaciej, I'd appreciate feedback from WebKit people about whether they think the approach I'm using so far for the spec is correct.

[12:11:00.0000] <AryehGregor>
I suspect that it's very different from the way WebKit currently implements it, but I'm not sure.

[12:11:01.0000] <AryehGregor>
(more particularly, I want to know if WebKit would be willing to implement that approach, not just if they think it's correct)

[12:12:00.0000] <AryehGregor>
Does anyone know of cases where the exact implementation of these features actually affects interop?  Opera seems to get by with innerText behaving mostly like textContent.

[12:13:00.0000] <AryehGregor>
I guess this depends on IE's implementation: view-source:http://beihai.gov.cn/5863/2010_4_28/5863_98289_1272423962000.html?open=1

[12:13:01.0000] <AryehGregor>
Grr: http://beihai.gov.cn/5863/2010_4_28/5863_98289_1272423962000.html?open=1

[12:14:00.0000] <AryehGregor>
It has extra whitespace in WebKit and Opera, because apparently (?) IE gets rid of nbsp's or something.

[12:14:01.0000] <AryehGregor>
Anyway, I'd prefer to have at least two browsers say they're interested in implementing a spec something along the lines of what I'm writing before I continue, because otherwise it seems somewhat pointless.

[12:17:00.0000] <AryehGregor>
Hixie, did you tell me to spec createContextualFragment() because you know that http://html5.org/specs/dom-parsing.html#dom-range-createcontextualfragment is wrong or because you didn't know it exists?

[12:17:01.0000] <AryehGregor>
(I could still write tests, of course)

[12:19:00.0000] <AryehGregor>
/me starts reading up on execCommand()

[12:26:00.0000] <Hixie>
AryehGregor: wasn't aware it was complete

[12:26:01.0000] <AryehGregor>
I don't know, is it?

[12:26:02.0000] <Hixie>
AryehGregor: dunno. we still need tests either way, so i guess use the tests to find out :-)

[12:26:03.0000] <AryehGregor>
Okay.

[12:27:00.0000] <Hixie>
the algorithm definitely needs _some_ work, since "the context object's start's node" doesn't make any sense

[12:27:01.0000] <Hixie>
but it might just be editorial work

[12:27:02.0000] <AryehGregor>
Why doesn't that make any sense?

[12:27:03.0000] <AryehGregor>
Follow the links, it's pretty straightforward.

[12:28:00.0000] <Hixie>
"start" isn't a noun that applies to objects, for one, and "start" xrefs to nothing, for two

[12:28:01.0000] <AryehGregor>
It xrefs to http://html5.org/specs/dom-range.html#concept-range-start

[12:28:02.0000] <AryehGregor>
It's a noun that applies to Ranges.

[12:28:03.0000] <Hixie>
hm, i wonder why that didn't work before

[12:28:04.0000] <annevk>
heycam, I thought you once tried figuring out for which DOMString attributes null become "null" vs "" vs actually null mapped across various browsers

[12:28:05.0000] <AryehGregor>
It's an inter-spec xref.

[12:28:06.0000] <Hixie>
oh, it's a link to another document and the doc was still loading

[12:28:07.0000] <Hixie>
ok

[12:29:00.0000] <annevk>
xspec xref

[12:29:01.0000] <Hixie>
ok i guess it's fine, never mind me :-)

[12:30:00.0000] <annevk>
heycam, I think Gecko is pretty consistently doing null -> "" and undefined -> "undefined"

[12:30:01.0000] <heycam>
annevk, I likely did some testing like that, but I can't seem to find anything written down with results...

[12:30:02.0000] <annevk>
heycam, I'd like Opera to match, but I was wondering if there is some known exception list somewhere

[12:30:03.0000] <annevk>
hmm, I guess we'd have to do the research then

[12:30:04.0000] <heycam>
annevk, sorry about that

[12:31:00.0000] <annevk>
no worries, now I need not go looking for it :)

[12:57:00.0000] <karlcow>
http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax

[12:58:00.0000] <Dashiva>
Are we really still at the level where we use CSS parser hacks?

[13:03:00.0000] <zcorpan>
karlcow: heh, nice

[13:05:00.0000] <zcorpan>
/me has known about how ie parses url() but hasn't thought about using #

[13:08:00.0000] <karlcow>
Dashiva: years after years, hacks on top of hacks

[13:10:00.0000] <zcorpan>
/me implements the state of the art hack in html5-elements

[13:12:00.0000] <benschwarz>
zcorpan: best bug logger ever

[13:12:01.0000] <zcorpan>
heh

[13:13:00.0000] <benschwarz>
you're making work for me :)

[13:14:00.0000] <zcorpan>
sorry, i file bugs without thinking these days

[13:15:00.0000] <zcorpan>
could consider it a work injury for working with quality assurance

[13:15:01.0000] <zcorpan>
maybe i should have a vacation

[13:15:02.0000] <Hixie>
<script>{</script> doesn't seem to be a compile-time error in safari

[13:15:03.0000] <Hixie>
weird

[13:16:00.0000] <benschwarz>
zcorpan: the feed back is nice. its such a huge document. I discover new things every day still

[13:16:01.0000] <benschwarz>
right now, the one that has me upset is that mobile safari is consistently crashing on anything other than the index page

[13:16:02.0000] <jgraham>
AryehGregor: If we were ever to find (presumably webkit-only) content that we wanted to support that relied on fanct innerText, having a spec would be useful

[13:17:00.0000] <jgraham>
Until that day I don't think it will be a priority

[13:17:01.0000] <jgraham>
Especially since IE seems to be aligning more with Opera

[13:17:02.0000] <jgraham>
*fancy

[13:17:03.0000] <Hixie>
oh nm, i'm wrong

[13:17:04.0000] <benschwarz>
Hixie: seen the new "up next" page links?

[13:17:05.0000] <AryehGregor>
jgraham, that makes sense if WebKit actually implements the spec.  :)

[13:17:06.0000] <Hixie>
benschwarz: not yet, will look after lunch

[13:18:00.0000] <AryehGregor>
Although even the behavior I've specced so far is way closer to WebKit than Opera now is.

[13:18:01.0000] <benschwarz>
Hixie: needs more styling... but the feature is in

[13:18:02.0000] <AryehGregor>
Although you're right that IE9 is a lot more textContent-like for some reason.

[13:18:03.0000] <jgraham>
AryehGregor: It makes sense if the spec is close enough to WebKit to be worth implementing as is compared to reverse engineering it ourselves

[13:18:04.0000] <jgraham>
I hope none of this happens though

[13:21:00.0000] <jgraham>
(really if the main webkit use case is "for our test framework" it would be nice if the name was prefixed and the public method name aligned with IE9)

[13:25:00.0000] <AryehGregor>
IE9's implementation isn't very useful.  IE8's makes more sense.

[13:25:01.0000] <AryehGregor>
As does WebKit's.

[13:26:00.0000] <zcorpan>
Hixie: in http://html5.org/r/5819 you traded one typo for another

[13:26:01.0000] <Hixie>
d'oh

[13:26:02.0000] <Hixie>
i suck

[13:26:03.0000] <jamesr_>
in 2 months that typo will be on bing

[13:27:00.0000] <Hixie>
jgraham: getting 500s intermittently from pms today

[13:29:00.0000] <jgraham>
AryehGregor: I value simplicity more than usefulness

[13:29:01.0000] <AryehGregor>
Me too.

[13:29:02.0000] <AryehGregor>
But the algorithm I've specced seems pretty simple to me.

[13:29:03.0000] <jgraham>
Because a useful implementation would have all manner of tweakable parameters

[13:30:00.0000] <AryehGregor>
Not necessarily.

[13:31:00.0000] <jgraham>
AryehGregor: Well the current algorithm doesn't deal with alt text, right? So there's one failure already

[13:31:01.0000] <AryehGregor>
Yes, I know, there are various details to be added.

[13:32:00.0000] <jgraham>
And you have no choice about how paragraphs are spaced, or whether to show display:none content, or anything else

[13:32:01.0000] <AryehGregor>
Anyway, everyone seems to have more sophisticated algorithms for the sake of Selection.toString() anyway, so why not use them?

[13:32:02.0000] <jgraham>
AryehGregor: AFAIK WebKit / IE don't include alt text either

[13:33:00.0000] <jgraham>
(maybe they do if images are off?)

[13:33:01.0000] <AryehGregor>
Possibly not.

[13:33:02.0000] <jgraham>
If it depends on user prefs it seems even more complex

[13:33:03.0000] <jgraham>
Of, I assume it does for <noscript> too

[13:33:04.0000] <jgraham>
s/f/Oh/

[13:34:00.0000] <david_carlisle>
hsivonen:  If I make a singe file mathml spec in the format that used to be known as html5, is it anti-social to validate it with validator.nu, or should I try to build a local copy of the validator? (it's 2.4M, more or less)

[13:35:00.0000] <AryehGregor>
jgraham, what about Selection.toString()?

[13:35:01.0000] <jgraham>
AryehGregor: I have no opinion of that

[13:35:02.0000] <AryehGregor>
jgraham, if that's defined, why not reuse the same algorithm for innerText?  It makes things simpler than if you define a different one.

[13:35:03.0000] <jgraham>
Hixie: I can't see anything obvious in the log

[13:35:04.0000] <AryehGregor>
Unless your innerText algorithm is the same as your textContent one.

[13:36:00.0000] <jgraham>
AryehGregor: I would propose using the textContent one

[13:36:01.0000] <AryehGregor>
For Selection.toString()?

[13:36:02.0000] <AryehGregor>
Or innerText?

[13:36:03.0000] <jgraham>
For innerText

[13:36:04.0000] <AryehGregor>
I'm not totally against it if everyone is willing to alias innerText to textContent.  The use-cases are fairly marginal given the complexity.

[13:36:05.0000] <jgraham>
I don't know what the compat. constrains on Selection.toString are

[13:36:06.0000] <AryehGregor>
If you can convince WebKit to do that, please let me know.  :)

[13:37:00.0000] <jgraham>
You'll probably see the flying pigs

[13:37:01.0000] <zcorpan>
/me meanwhile installs a font on his system with the name "☺"

[13:38:00.0000] <jgraham>
zcorpan: Just to be evil?

[13:38:01.0000] <zcorpan>
oh, apparently it wouldn't work on mac anyway

[13:50:00.0000] <zcorpan>
/me resists 386ing http://www.w3.org/Bugs/Public/show_bug.cgi?id=11973#c6

[13:54:00.0000] <Dashiva>
I'm not familiar with 386 as a verb

[14:01:00.0000] <zcorpan>
http://xkcd.com/386/

[14:01:01.0000] <TabAtkins_>
Dashiva: xkcd.com/366

[14:01:02.0000] <Dashiva>
Oh, that 386

[14:02:00.0000] <Dashiva>
I thought you meant the microprocessor

[14:10:00.0000] <zcorpan>
/me ponders about window.onerror and cross-origin <script src>

[14:13:00.0000] <zcorpan>
i guess window.onerror is another way to exploit https://grepular.com/Abusing_HTTP_Status_Codes_to_Expose_Private_Information

[14:14:00.0000] <Hixie>
jgraham: i'm guessing it's the w3c being slow again

[14:14:01.0000] <Hixie>
jgraham: did you ever look into what it would take to change the timeouts?

[14:15:00.0000] <Hixie>
abarth: for https://bugs.webkit.org/show_bug.cgi?id=47264#c13 we need some way to experiment before the spec is updated -- otherwise we can't get impl experience to update the spec

[14:16:00.0000] <abarth>
my understanding is that we weren't going to add any more self-closing tags to HTML

[14:17:00.0000] <abarth>
because they aren't parsed correctly by legacy browsers

[14:17:01.0000] <abarth>
which means they can't be used by authors'

[14:17:02.0000] <Hixie>
see http://www.w3.org/Bugs/Public/show_bug.cgi?id=11935#c4

[14:17:03.0000] <Hixie>
i don't think that applies in this case

[14:17:04.0000] <Hixie>
and that's what we need to find out

[14:19:00.0000] <abarth>
really?

[14:19:01.0000] <abarth>
that doesn't seem like a good idea

[14:19:02.0000] <abarth>
HTML doesn't have a good extension model for self-closing elements

[14:19:03.0000] <abarth>
that just means folks need to include close tags

[14:19:04.0000] <abarth>
that seems better than having screwed up parsing in different implementations

[14:20:00.0000] <Hixie>
i think the issue is minimal in most cases, and nearly non-existent here

[14:20:01.0000] <Hixie>
i really don't buy into the "no new void elements" thing

[14:20:02.0000] <Hixie>
in this case you're (i think) never going to use <device> without feature-testing it first anyway

[14:20:03.0000] <abarth>
why not?

[14:20:04.0000] <abarth>
suppose 80% of the market supports <device>

[14:21:00.0000] <abarth>
are we going to have to feature-test it forever?

[14:21:01.0000] <abarth>
isn't it reasonable to put a SWF in the fallback content?

[14:21:02.0000] <Hixie>
let me rephrase

[14:21:03.0000] <Hixie>
for <device> i don't think you're going to use it without feature testing if you have a fallback solution.

[14:22:00.0000] <Hixie>
no, it doesn't make sense to have a SWF as fallback content, because the fallback would have to have an entirely different script too

[14:22:01.0000] <Hixie>
and likely different network protocol, etc

[14:22:02.0000] <abarth>
so in the case where you don't feature test, you want the parsing for the rest of the page to be goofed up?

[14:23:00.0000] <Hixie>
it doesn't goof up the rest of the page, that's wild over-exaggeration

[14:23:01.0000] <abarth>
because it will be closed automatically at some point?

[14:23:02.0000] <Hixie>
all it does in legacy UAs is insert a <span>-like element, which does nothing, in the parent element

[14:24:00.0000] <Hixie>
which closes at the end of the parent

[14:24:01.0000] <Hixie>
no harm is done

[14:24:02.0000] <Hixie>
user doesn't even notice

[14:24:03.0000] <Hixie>
the worst it could do is interfere with CSS, but the page author who cares about fallback would test that anyway.

[14:25:00.0000] <Hixie>
(and it's unlikely to do so unless your css uses child combinators, which isn't that common in the first place)

[14:25:01.0000] <abarth>
i guess this all seems like a lot of pain to go through to avoid having to type "</device>"

[14:25:02.0000] <Hixie>
what pain?

[14:25:03.0000] <Hixie>
my whole point is there's no pain

[14:26:00.0000] <Hixie>
but that's what testing it would discover

[14:26:01.0000] <abarth>
the pain is that your page will parse different in different browsers, so you'll need to test whether your CSS selectors will work properly under both parsings

[14:26:02.0000] <abarth>
etc

[14:26:03.0000] <abarth>
what if we do this 10 times?

[14:26:04.0000] <abarth>
now your testing matrix is large

[14:26:05.0000] <Hixie>
no it's not

[14:26:06.0000] <abarth>
you'll essentially need to test every browser

[14:26:07.0000] <Hixie>
you only need to test the browsers that exist

[14:26:08.0000] <Hixie>
you do anyway

[14:27:00.0000] <Hixie>
to make sure your fallback works

[14:27:01.0000] <abarth>
it seems like the opposite of interoperability

[14:27:02.0000] <Hixie>
it really isn't anywhere near as difficult a problem as you make out

[14:27:03.0000] <abarth>
should we make <canvas> self-closing?

[14:27:04.0000] <Hixie>
the parsing difference is minimal at worst

[14:27:05.0000] <Hixie>
<canvas> was self-closing

[14:28:00.0000] <abarth>
was, but not any more?

[14:28:01.0000] <Hixie>
we had to make it not self-close because of accessibility

[14:28:02.0000] <jamesr_>
<canvas> is supposed to contain AX 'fallback'-ish content

[14:29:00.0000] <Hixie>
every time we add a new feature, interoperability will briefly suffer

[14:29:01.0000] <Hixie>
that's what progress looks like

[14:29:02.0000] <Hixie>
the difference between having an unknown element in the DOM or not vs having access to the user's camera or not is vast. the latter is a real interop problem. the former is barely noticeable.

[14:30:00.0000] <Hixie>
and this is the kind of thing web devs excel at dealing with

[14:30:01.0000] <abarth>
ok.  it would be nice to be able to distinguish between folks making random changes to the parser and changes that we think are worth experimenting with

[14:30:02.0000] <Hixie>
how?

[14:30:03.0000] <Hixie>
they should certainly be behind a flag or something, imho

[14:31:00.0000] <abarth>
for example, if the spec was color-coded

[14:31:01.0000] <abarth>
blue means "if you're experimenting with device, try this out"

[14:31:02.0000] <Hixie>
it is

[14:31:03.0000] <Hixie>
that's what the labels in the left margin are

[14:31:04.0000] <Hixie>
i can add something about device being void if you like

[14:32:00.0000] <abarth>
as someone reviewing that patch, i went and looked at that part of the spec and didn't see anything about device there

[14:32:01.0000] <Hixie>
yeah, it's not there

[14:32:02.0000] <abarth>
which makes it hard for me to know that you think this is a reasonable idea

[14:32:03.0000] <Hixie>
i didn't expect anyone to implement it yet

[14:32:04.0000] <Hixie>
you can ask me :-)

[14:32:05.0000] <abarth>
you really want me to ask you about every random change people want to make to the parser ?  :)

[14:32:06.0000] <Hixie>
yes

[14:33:00.0000] <abarth>
ok

[14:33:01.0000] <Hixie>
(or rather, i'm happy to answer if you do. i'm not saying i want you to.)

[14:36:00.0000] <abarth>
do you think we should condition the parser change on whether <device> support is enabled?

[14:37:00.0000] <Hixie>
yeah

[14:37:01.0000] <Hixie>
makes the feature testing make more sense

[14:37:02.0000] <Hixie>
and emphasises that the patch is experimental

[14:37:03.0000] <jamesr_>
how do you feature test <device>?

[14:37:04.0000] <Hixie>
if (window.HTMLDeviceElement) {...}

[14:38:00.0000] <abarth>
Hixie: we had a similar discussion about how to handle the MathML parts of the parser when MathML support is disabled

[14:38:01.0000] <Hixie>
(i'm really surprised that people are already implementing this device stuff btw.)

[14:38:02.0000] <Hixie>
abarth: i'd leave it parsing with the mathml namespace, for mathml

[14:38:03.0000] <abarth>
that's what we ended up doing

[14:38:04.0000] <Hixie>
abarth: because it's specced and not experimental

[14:38:05.0000] <Hixie>
cool

[14:39:00.0000] <abarth>
there seems to be a lot of interest around the device element

[14:39:01.0000] <jamesr_>
the implementation of <device> seems really dodgy imo

[14:39:02.0000] <abarth>
webkit isn't very good about making decisions about when to implement features and when not to implement features

[14:39:03.0000] <othermaciej>
especially the latter

[14:39:04.0000] <abarth>
jamesr_: there's also another group of folks who apparently implemented <device> too, so we have two patches instead of zero

[14:39:05.0000] <othermaciej>
the concept of <device> is confusing to me

[14:40:00.0000] <othermaciej>
if it's just meant for A/V input, then it should be one or several more specific elememts

[14:40:01.0000] <abarth>
jamesr_: or at least that's what they've said on webkit-dev.  i don't think they've produced their patch yet

[14:40:02.0000] <othermaciej>
if it's meant to connect to anything that could be called a "device", then that's nonsensically overbroad

[14:40:03.0000] <Hixie>
othermaciej: it's meant as a way to grant JS access to system devices, the way <input type=file> grants JS access to files

[14:41:00.0000] <othermaciej>
and a single API is sufficient for anything that could be termed a "system device"?

[14:42:00.0000] <Hixie>
each type of device we add support for gets its own API

[14:42:01.0000] <jamesr_>
what on earth is a "system device" anyway?

[14:42:02.0000] <Hixie>
peripheral, if you prefer the term

[14:43:00.0000] <othermaciej>
many peripherals have a dedicated API

[14:43:01.0000] <jamesr_>
like a mouse or a keyboard?

[14:43:02.0000] <othermaciej>
it's not clear to me why the camera and microphone should be lumped in with "other" and assumed to have the same API as them

[14:44:00.0000] <Hixie>
each type of device we add support for gets its own API

[14:44:01.0000] <jamesr_>
why do some peripherals have a dedicated set of APIs and some come in as "device"s?

[14:44:02.0000] <othermaciej>
mouse, keyboard, screen, disk, accelerometer, GPS, compass

[14:44:03.0000] <Hixie>
jamesr_: they all have dedicated APIs

[14:44:04.0000] <othermaciej>
none of those are on <device>

[14:45:00.0000] <jamesr_>
Hixie: ok, then why are some on <device> and some not?

[14:45:01.0000] <othermaciej>
I think <camera> and <microphone> elements would make more sense

[14:45:02.0000] <othermaciej>
or <videoinput> and <audioinput> if you prefer, or just <avinput>

[14:45:03.0000] <Hixie>
the distinction between <device> and other mechanisms is that other mechanisms don't need the user to grant permission to the page to get a handle to them, because they're not sensitive, or they have their own more sensible permissions system

[14:45:04.0000] <othermaciej>
there is no obvious common property that anything else has with these things

[14:46:00.0000] <Hixie>
the cammon property is that there isn't a necessarily just one of them, and we can't grant permission to them automatically

[14:46:01.0000] <othermaciej>
are there things besides the camera and the microphone that anyone wants to implement with the same permissions model as the camera and microphone?

[14:47:00.0000] <Hixie>
"wants to implement", no idea. "would make sense to implement", sure: RS232 devices, for instance.

[14:48:00.0000] <Hixie>
USB cash registers

[14:48:01.0000] <Hixie>
lots of stuff like that

[14:48:02.0000] <Hixie>
just mentioning <device> in the spec has gotten dozens of people to contact me directly or file bugs or mail the lists asking for their pet device to be supported.

[14:50:00.0000] <jamesr_>
it doesn't seem clear at all to me that <device> is a very good way to add support for such things

[14:52:00.0000] <Hixie>
why not?

[14:52:01.0000] <Hixie>
all you need is some sort of UI that lists the devices of the type the page wants, and then hands back an object implementing the relevant API

[14:53:00.0000] <Hixie>
it doesn't seem sane to have <usbcashregister>, <rs232>, <mic>, <camera>, <3dcamera>, <depthcamera>, etc

[14:53:01.0000] <Hixie>
just have <device>

[14:53:02.0000] <Hixie>
they're all gonna basically be the same anyway, except for what they vend

[14:54:00.0000] <othermaciej>
generic UI is almost always bad UI

[14:54:01.0000] <othermaciej>
generic API, it depends

[14:55:00.0000] <nimbupani>
MikeSmith: !!!

[14:55:01.0000] <MikeSmith>
allo

[14:55:02.0000] <othermaciej>
it's not clear to me that RS232 shares any properties with a camera or microphone from the user perspective

[14:56:00.0000] <othermaciej>
all the things you mention other than camera and microphone are at present highly specialized equipment that the majority of people don't have, and probably will not

[14:57:00.0000] <othermaciej>
it is also not clear that an in-page element is the best way to grant access to them

[14:57:01.0000] <othermaciej>
(I'm not even sure it's the best way to handle it for a camera or microphone)

[14:58:00.0000] <othermaciej>
anyway, this is tangential to the parsing issues

[14:58:01.0000] <othermaciej>
but it seems like a poorly designed feature to me

[15:11:00.0000] <Hixie>
othermaciej: there's no generic API here

[15:11:01.0000] <Hixie>
othermaciej: I don't see what would be different for picking a cash register vs picking a camera

[15:12:00.0000] <Hixie>
othermaciej: anyway, if it turns out we never use it for anything else, <device> is still fine for cameras and mics; whereas <camera> couldn't sanely be used for cash registers even if we find it would otherwise make sense

[15:12:01.0000] <Hixie>
so...

[15:20:00.0000] <Philip`>
/me wonders why not just use <object> for devices, since that already provides resource-specific APIs

[15:23:00.0000] <bga_>
++

[15:23:01.0000] <Hixie>
how would that work?

[15:23:02.0000] <Hixie>
(<object> has been overloaded to do so many different things that I'm reluctant to add anything else to it, frankly)

[15:23:03.0000] <Hixie>
(but i'm open to ideas if it makes sense)

[15:27:00.0000] <Philip`>
It sounded like the idea of <device> is to be a generic container that gets overloaded to do whatever arbitrary things people want, so it'll end up being another <object> with a different name

[15:28:00.0000] <AryehGregor>
Yeah, that thought just occurred to me too.

[15:45:00.0000] <Hixie>
Philip`: not at all, <device> just does one thing, vend APIs for devices

[15:48:00.0000] <zcorpan>
devices are many things

[15:55:00.0000] <Hixie>
zcorpan: that's like saying <input type=file> is overloaded because there are many files

[15:59:00.0000] <zcorpan>
it seems like we have a single API for all types of files, however i don't know if it makes sense to have a single API for types of devices


2011-02-04
[16:02:00.0000] <Hixie>
zcorpan: nobody is suggesting a single API for all types of devices

[16:03:00.0000] <Hixie>
zcorpan: <device> doesn't have an API for the devices, it just returns the APIs, which are device-specific

[16:04:00.0000] <zcorpan>
ah, so a bit like NPAPI?

[16:04:01.0000] <Hixie>
in what way?

[16:05:00.0000] <Hixie>
more like a bit like how different events have different interfaces

[16:05:01.0000] <zcorpan>
<object> implements a plugin-specific interface

[16:05:02.0000] <Hixie>
or how createElement() returns different objects based on its input

[16:06:00.0000] <Hixie>
except for <device>, the input is from the user (based on a filter given by the author -- like <input type=file> and accept=""), and the output is an object, not a DOM Node

[16:06:01.0000] <Hixie>
<device> doesn't implement the interface

[16:07:00.0000] <Hixie>
it returns an object that implements the interface

[16:07:01.0000] <zcorpan>
ok

[16:16:00.0000] <roc>
I agree with maciej, <device> seems too overloaded

[16:16:01.0000] <AryehGregor>
/me also is skeptical

[16:16:02.0000] <roc>
it's totally unclear what it means to "implement <device>"

[16:17:00.0000] <roc>
if a device is going to have its own Web-standard API, why shouldn't it have its own element?

[16:17:01.0000] <MikeSmith>
it' seems pretty similar to canvas in that it's thin markup hook to hang APIs on

[16:18:00.0000] <MikeSmith>
some would say it doesn't need any element/markup at all, can just all be done with script

[16:18:01.0000] <roc>
I'm not too thrilled by the canvas getContext() approach either, but at least 2D and 3D <canvas>es have a lot of properties in common

[16:18:02.0000] <othermaciej>
aye

[16:18:03.0000] <MikeSmith>
true

[16:21:00.0000] <doublec>
I agree about <device> being overloaded

[16:21:01.0000] <doublec>
I often see discussions about some wanted feature in HTML and someone saying "hey, isn't device supposed to do that"

[16:21:02.0000] <doublec>
from video conferencing to serial port communication

[16:23:00.0000] <Hixie>
MikeSmith: <device> and <canvas> are very similar, yes

[16:24:00.0000] <Hixie>
doublec: video conferencing and serial port communication are the two things in the spec. :-)

[16:25:00.0000] <othermaciej>
<device>: it's a floor wax *and* a desert topping

[16:26:00.0000] <Hixie>
i really don't understand what is overloaded about it

[16:26:01.0000] <Hixie>
it's like <select>

[16:26:02.0000] <Hixie>
is <select> overloaded because it can be used for pizza toppings and airline destinations?

[16:27:00.0000] <MikeSmith>
fwiw, https://lists.webkit.org/pipermail/webkit-dev/2011-January/015822.html seems to indicate chromium engineer has already written a device implementation

[16:27:01.0000] <othermaciej>
I think that is too high a level of abstraction for users and for typical programmers

[16:27:02.0000] <MikeSmith>
input element is overloaded for sure

[16:28:00.0000] <Hixie>
othermaciej: there's no abstraction at all. it's concrete. <device type=media> gives a popup of media sources, user picks one, UA fires an event with an object implementing a media stream API.

[16:28:01.0000] <roc>
the input element was a mistake

[16:28:02.0000] <roc>
and <device> repeates the problems with a mutable type attribute

[16:28:03.0000] <Hixie>
othermaciej: <device type=rs232> gives a popup of RS232 devices, user picks one, UA fires an event with an object implement an RS232 API

[16:29:00.0000] <Hixie>
<input> is overloaded because it does many things

[16:29:01.0000] <Hixie>
<device> does one thing

[16:29:02.0000] <othermaciej>
Hixie: to the user, the feature is "use my camera" or "use whatever is connected to my serial port", not "pick a device"

[16:29:03.0000] <jamesr_>
sounds more like <device> does zero things

[16:29:04.0000] <roc>
Hixie: that's subjective. <input> does one thing: it accepts user input

[16:29:05.0000] <Hixie>
roc: but it has many different UIs. <device> has one.

[16:29:06.0000] <othermaciej>
also, it will be very common to have exactly one microphone or exactly one camera

[16:30:00.0000] <othermaciej>
at which point a popup is a poor UI

[16:30:01.0000] <Hixie>
roc: and <input> has many different APIs, <device> has one.

[16:30:02.0000] <roc>
I don't understand how <device> can have one UI

[16:30:03.0000] <Hixie>
I don't understand how it could have more than one :-)

[16:30:04.0000] <roc>
the browser is going to offer the same UI for picking cameras, microphones, RS232 ports, and connection peers?

[16:30:05.0000] <othermaciej>
a popup menu that says "Front-facing camera" and "Rear-facing camera" in a menu would also be terrible UI for the more common devices with two cameras

[16:31:00.0000] <Hixie>
othermaciej: what would good secure UI be?

[16:31:01.0000] <roc>
or is connection peer totally unrelated? I don't understand "This section will be moved to a more appropriate location in due course; it is here currently to keep it near the device element to allow reviewers to look at it."

[16:31:02.0000] <othermaciej>
I don't know, good secure UI is hard

[16:31:03.0000] <Hixie>
connectionpeer is as related to <device> as XHR is to <input type=file>

[16:32:00.0000] <Hixie>
othermaciej: well, this is what we have for now. I'm open to improvements if people can suggest any. But "no" isn't an improvement.

[16:32:01.0000] <othermaciej>
I would probably show previews of what the two cameras are showing and have a record button or something

[16:32:02.0000] <othermaciej>
and probably have a persistent record indicator in the UI

[16:33:00.0000] <othermaciej>
that scales reasonably to either one or two cameras

[16:33:01.0000] <othermaciej>
but I don't think it scales to serial ports

[16:33:02.0000] <Hixie>
i'll have to draw up some mockups

[16:35:00.0000] <othermaciej>
tying this to an element is only really helpful if something useful shows up in page by default (actual video output of camera? soundwave of audio input for mic-only?), or if requiring a real user click is somehow part of the security value

[16:35:01.0000] <Hixie>
an icon representing the device, and yes, respectively

[16:35:02.0000] <roc>
I don't think requiring a real user click has real security value

[16:35:03.0000] <othermaciej>
given clickjacking type techniques, I'm not even sure an element is a helpful tool to ensure a real user click

[16:36:00.0000] <Hixie>
how do we ensure the user confirms which device he wants without popping up a separate window after a user click?

[16:36:01.0000] <Hixie>
if we have better ideas i'm all for it

[16:37:00.0000] <roc>
in Firefox we have standard UI for confirming geolocation requests, offline storage, and other things

[16:37:01.0000] <roc>
I think we'd want to hook into that

[16:37:02.0000] <othermaciej>
I think it might be more useful for us to implement a UI we think is good by way of a proposal

[16:37:03.0000] <Hixie>
roc: the infobar? i thought it was established that that was a disaster

[16:38:00.0000] <othermaciej>
I'm not sure an icon representing a camera is a super useful part of video conferencing UI

[16:38:01.0000] <roc>
it's changed in Firefox 4

[16:38:02.0000] <roc>
I don't know if the new design is considered a disaster

[16:38:03.0000] <othermaciej>
a popup might be useful for choosing purposes, but then you have to think about how it works when there is only one thing to choose, and at that point I am not sure "real user click" is a useful security feature

[16:43:00.0000] <Hixie>
roc: is there a test page that brings them up? i tried google maps but nothing came up when i got it to ask for the location

[16:43:01.0000] <Hixie>
which is fine ui but not very secure :-)

[16:43:02.0000] <roc>
did it use your location or not?

[16:43:03.0000] <roc>
perhaps you set it to always-allow in the past

[16:43:04.0000] <Hixie>
it found where i was, dunno if it was based on IP or something better

[16:43:05.0000] <roc>
bring up page-info and go to the permissions pane

[16:44:00.0000] <jamesr_>
a web page can often get your location quite accurately without any participation from the browser

[16:44:01.0000] <roc>
select always-ask

[16:44:02.0000] <doublec>
I just tried google maps in a ff 4 nightly and it asked for permission

[16:44:03.0000] <roc>
jamesr_: probably not to within a city block, I'm guessing

[16:44:04.0000] <roc>
that makes a difference to me

[16:44:05.0000] <jamesr_>
roc: why not?

[16:45:00.0000] <jamesr_>
depends on the city, i suppose

[16:45:01.0000] <Hixie>
ah, yes, i had granted it permission

[16:45:02.0000] <Hixie>
roc: is there a page that shows the quota dialog?

[16:45:03.0000] <kbrosnan>
most desktops firefox can get as close as geoip can get

[16:45:04.0000] <jamesr_>
but why couldn't some enterprising web authors know the IP address + location of every starbucks in the world?

[16:45:05.0000] <roc>
because ISP subnet blocks will be distributed across many city blocks

[16:46:00.0000] <roc>
maybe you're right about Starbucks

[16:46:01.0000] <roc>
but you're not right about my house

[16:46:02.0000] <jamesr_>
sure. depends on the house

[16:46:03.0000] <roc>
Hixie: dunno

[16:47:00.0000] <Hixie>
the geo ui in ff4 is ok. not sure how well it would scale if there were multiple requests at once.

[16:54:00.0000] <gavin>
we only show one request (of a given type) at a time

[16:54:01.0000] <Hixie>
ah interesting

[16:54:02.0000] <Hixie>
well we can certainly do something along these lines with a callback like geolocation

[16:55:00.0000] <othermaciej>
the main in-page element that makes sense for a camera (IMO) is something in-page to show you what's being recorded, without having to route through JavaScript first

[16:56:00.0000] <roc>
we have considered an approach where you give a magic URL to <video src> like "camera:"

[16:56:01.0000] <othermaciej>
I am not sure infobar is the right model for camera access

[16:57:00.0000] <Hixie>
roc: that's the URL you get from Stream

[16:57:01.0000] <roc>
othermaciej: it may not be, but I would certainly not be happy with in-page clicks serving as confirmation UI

[16:58:00.0000] <Hixie>
with <device> the confirmation UI is out-of-page

[16:58:01.0000] <Hixie>
the in-page click is the one that brings up the confirmation UI

[16:58:02.0000] <othermaciej>
roc: that definitely is not good for the confirmation UI

[16:58:03.0000] <othermaciej>
roc: that has to be out-of-page

[16:58:04.0000] <Hixie>
(can't the geolocation thing in ff4 be click-jacked? it always appears in a predictable place, no?)

[16:58:05.0000] <gavin>
yes

[16:59:00.0000] <gavin>
(bug 583175)

[17:01:00.0000] <Hixie>
that's one of the things the <device> design works around

[17:01:01.0000] <Hixie>
but i'm certainly open to better suggestions

[17:09:00.0000] <AryehGregor>
jgraham or gsnedders or other random Opera person: how different is Opera's innerText from textContent?  And how different is its Selection.toString() from Range.toString()?  Do you know of web-compat issues that would prevent them from being made the same, just scrapping all plaintext conversion in favor of concatenating text nodes?

[17:22:00.0000] <AryehGregor>
othermaciej, what do you think of the last five paragraphs of <http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-February/030210.html>?

[17:25:00.0000] <othermaciej>
AryehGregor: innerText is pretty pointless if it does the exact same thing as textContent

[17:25:01.0000] <othermaciej>
AryehGregor: that will just mislead pages that try to sniff for it

[17:26:00.0000] <othermaciej>
I don't know enough about Selection.toString() to have an opinion

[17:26:01.0000] <AryehGregor>
othermaciej, the overwhelming majority of pages that use innerText use it as a simple substitute for textContent.

[17:26:02.0000] <othermaciej>
I don't think we'd have a major problem with making innerText more IE-like

[17:26:03.0000] <AryehGregor>
For the rest, textContent isn't a particularly bad substitute.

[17:26:04.0000] <othermaciej>
well, if they work in Mozilla they can use textContent

[17:27:00.0000] <AryehGregor>
Opera and IE9 also have innerText that behaves a lot more like textContent than like WebKit's innerText.

[17:27:01.0000] <othermaciej>
is IE9 different from older IE?

[17:27:02.0000] <AryehGregor>
Yes, totally different.

[17:27:03.0000] <AryehGregor>
At least in my testing.

[17:27:04.0000] <othermaciej>
weird

[17:27:05.0000] <othermaciej>
I wonder if that's intentional

[17:27:06.0000] <othermaciej>
anyway

[17:28:00.0000] <othermaciej>
we almost surely have legacy WebKit-specific content that will break if we change here

[17:28:01.0000] <othermaciej>
if there was a lot of interop value to be gained, we might consider breaking it

[17:28:02.0000] <AryehGregor>
WebKit has by far the most complicated innerText implementation of any browser, AFAICT.

[17:28:03.0000] <AryehGregor>
What sort of content would actually break in practice?

[17:28:04.0000] <othermaciej>
but it seems like the only interop we'd be getting is with Mozilla's refusal to have the feature of plaintext conversion

[17:28:05.0000] <othermaciej>
no idea

[17:28:06.0000] <othermaciej>
there's lots of content coded only to WEbKit

[17:29:00.0000] <AryehGregor>
Plaintext conversion is a very rare use-case.

[17:29:01.0000] <othermaciej>
when we adopted the HTML5 parsing algorithm, lots of things broke

[17:29:02.0000] <othermaciej>
not on the public web

[17:29:03.0000] <AryehGregor>
And when it is used, the result is generally just going to be displayed to the user, so at worst it will look a bit weird.

[17:29:04.0000] <othermaciej>
but dashboard widgets, Mac native apps (maybe iOS native apps too), Apple intranet sites...

[17:30:00.0000] <othermaciej>
that pain was worth it, I suppose, to gain WEb compatibility and inteop on something major

[17:30:01.0000] <AryehGregor>
That could all break if you change your innerText implementation substantially at all, though, including to a hypothetical plaintext conversion spec.

[17:30:02.0000] <othermaciej>
doesn't seem worth it for something minor, especially when it's just to satisfy Mozilla's ideological desire for the feature to not exist

[17:30:03.0000] <othermaciej>
that's probably true

[17:30:04.0000] <othermaciej>
we'd have to test it a lot

[17:30:05.0000] <othermaciej>
we have changed it in minor ways over time

[17:30:06.0000] <othermaciej>
I know that if <br> doesn't produce newlines, stuff will break

[17:30:07.0000] <othermaciej>
past that, hard to say

[17:31:00.0000] <AryehGregor>
So if you're really saying that WebKit is not willing to change its innerText algorithm much at all no matter what, either we have to spec a close match to its algorithm or give up on WebKit interoperating here.

[17:31:01.0000] <AryehGregor>
In the first case, no one will implement the algorithm because it's not worth it.

[17:31:02.0000] <othermaciej>
I'm saying we have to do a lot of testing

[17:31:03.0000] <AryehGregor>
In the second case, at least we have all other engines on the same page.

[17:31:04.0000] <othermaciej>
so an interoperable specification would have to be worth the cost of testing and of fixing the content that breaks

[17:32:00.0000] <othermaciej>
if the spec neuters the feature and we have to add a prefixed version, that doesn't seem worth it

[17:32:01.0000] <othermaciej>
better to just have the feature remain nonstandard in that case

[17:32:02.0000] <othermaciej>
at least IMO

[17:32:03.0000] <AryehGregor>
It doesn't have to be exactly the same as textContent, we can add whatever adjustments are needed for web compat.  E.g., something simple like adding newlines for <br> would probably be fine.

[17:32:04.0000] <othermaciej>
I am sure lots of minor changes are possible

[17:32:05.0000] <othermaciej>
it's hard for me to judge without a specific proposal

[17:33:00.0000] <othermaciej>
I'm pretty sure "identical to textContent" won't fly

[17:33:01.0000] <AryehGregor>
The proposal would be "identical to textContent except for whatever implementers say is necessary for compat".

[17:33:02.0000] <AryehGregor>
Opera might have useful input here.

[17:33:03.0000] <othermaciej>
IE probably still gets compat benefit from their old version due to their multiple engines

[17:33:04.0000] <othermaciej>
so they might be more willing to change than us, but only in IE9 standards mode

[17:33:05.0000] <AryehGregor>
Yes, IE has devised its own way to evade compat problems.

[17:34:00.0000] <AryehGregor>
If people keep on writing so much WebKit-only code and WebKit has complicated WebKit-only features like this unprefixed, it's going to be forced to do the same someday.

[17:35:00.0000] <AryehGregor>
At least that's my prediction.

[17:35:01.0000] <othermaciej>
well, we don't add new nonstandard features unprefixed these days

[17:35:02.0000] <othermaciej>
even in this case, we didn't make it up, we copied it from IE

[17:35:03.0000] <AryehGregor>
This one sort of snuck in as kind of an attempt to copy IE except actually not really because WebKit's implementation is more sophisticated in most ways.

[17:35:04.0000] <AryehGregor>
(like IE doesn't even handle display: none)

[17:36:00.0000] <othermaciej>
I suspect IE magically applies formatting based on certain HTML tags, and ours actually looks at the rendering

[17:36:01.0000] <roc>
isn't there a record of why Webkit added that complexity? There must have been some use-case

[17:36:02.0000] <AryehGregor>
No, I'm pretty sure that's not true.  I think IE8 handles <div style=white-space:pre-line> nicely in my test.

[17:37:00.0000] <othermaciej>
we inherited innerText from KHTML

[17:37:01.0000] <AryehGregor>
Gecko's the one that mostly ignores CSS.

[17:37:02.0000] <gsnedders>
AryehGregor: It's a completely different code-path to textContent, so kinda hard to tell what exactly is different

[17:37:03.0000] <othermaciej>
then we made it more IE-compatible (original version was dumb)

[17:37:04.0000] <roc>
well, then they should have a record

[17:37:05.0000] <othermaciej>
I don't think KHTML has records extending to more than 10 years ago

[17:37:06.0000] <AryehGregor>
gsnedders, textContent is trivial, it just concatenates all the text nodes.  Presumably innerText does that but with some extra processing, yes?

[17:38:00.0000] <othermaciej>
anyway, at some point I think we merged it with the plaintext conversion code we use for other purposes, e.g. copy

[17:38:01.0000] <AryehGregor>
Yeah, WebKit's the only one that does that AFAICT.

[17:38:02.0000] <gsnedders>
AryehGregor: I also don't understand quite how our impl works :)

[17:38:03.0000] <AryehGregor>
(didn't test Opera or IE8, I guess)

[17:38:04.0000] <AryehGregor>
gsnedders, well, I can do some black-box testing if necessary.

[17:38:05.0000] <othermaciej>
we can split it from regular plaintext conversion if some compatible-enough version would work better

[17:38:06.0000] <othermaciej>
I can't commit resources to do interop research on this in the short term though

[17:39:00.0000] <gsnedders>
AryehGregor: I can ask others if I remember tomorrow

[17:39:01.0000] <gsnedders>
AryehGregor: My reading of the code when I tried to work out what it did was that it always returned the empty string. This is quite obviously wrong. :)

[17:40:00.0000] <AryehGregor>
gsnedders, surprisingly, that matches what Opera does for Selection.toString() in my test page.  Maybe you're on to something.

[17:40:01.0000] <gsnedders>
(Now you know why I don't get paid to do white-box QA)

[17:41:00.0000] <gsnedders>
AryehGregor: That'll just be ranges stuff, I suspect.

[17:41:01.0000] <AryehGregor>
Yeah, I know, I was kidding.  :P

[17:42:00.0000] <AryehGregor>
Unless my eyes deceive me, the only thing Opera does differently here for innerText is that it adds newlines for <br>: http://aryeh.name/spec/innertext/test/innerText.html

[17:42:01.0000] <AryehGregor>
(there's a diff at the end)

[18:39:00.0000] <TabAtkins>
Damn, I missed the <device> conversation today.

[19:25:00.0000] <othermaciej>
TabAtkins: do you have an opinion on the topics discussed relating to <device>?

[02:40:00.0000] <annevk>
I wonder if I should write a change proposal for http://www.w3.org/html/wg/tracker/issues/140

[02:41:00.0000] <annevk>
Introducing a special term "conforming HTML5 document" is bound to lead to pointless arguments

[02:41:01.0000] <annevk>
though the lack of it will presumably do too

[02:42:00.0000] <jgraham>
If you don't enjoy pointless arguments, why ever did you get involved with specs work?

[02:43:00.0000] <Ms2ger>
jgraham, that sounds like logic

[02:44:00.0000] <annevk>
heh, meta

[02:44:01.0000] <jgraham>
I can't tell, my reference point was left at the door

[03:49:00.0000] <annevk>
thanks volkmar

[03:50:00.0000] <volkmar>
annevk: np

[04:15:00.0000] <hsivonen>
stuff I just learned: Gecko doesn't use .xsl as signal of XSLTness but wants a type pseudo-attribute on the <?xml-stylesheet?> PI

[04:15:01.0000] <hsivonen>
when loading from local disk

[04:39:00.0000] <hsivonen>
sigh. trying to learn XSLT in a hurry. having trouble with template precedence

[04:40:00.0000] <annevk>
simple examples here: http://annevankesteren.nl/test/xml/xslt/

[04:41:00.0000] <annevk>
though I guess you can find those anywhere

[04:45:00.0000] <annevk>
that HTTP status code problem is annoying

[04:45:01.0000] <annevk>
similarly with images not existing and such

[04:52:00.0000] <zcorpan>
hsivonen: doesn't gecko want type="" even when loading over HTTP?

[04:52:01.0000] <hsivonen>
zcorpan: I didn't test

[04:53:00.0000] <hsivonen>
annevk: thanks. I think I now have roughly what I want except I have an insane amount of pointless whitespace

[04:53:01.0000] <hsivonen>
wondering what tool is the quickest for zapping the extra space

[05:19:00.0000] <annevk>
jgraham, http://tc.labs.opera.com/apis/EventSource/eventsource-constructor-url-bogus.htm why is that again?

[05:19:01.0000] <annevk>
jgraham, should I update testharness.js?

[05:20:00.0000] <jgraham>
annevk: It is a confusing error that doesn't reflect what is actually going on

[05:20:01.0000] <jgraham>
But I don't think it is fixed

[05:22:00.0000] <jgraham>
annevk: Probably it is because e.name !== SYNTAX_ERR

[05:22:01.0000] <jgraham>
iirc there is some debate about whether you will require than in web dom vore anyway

[05:23:00.0000] <jgraham>
So the check could probably be removed

[05:23:01.0000] <annevk>
hmm yeah

[05:23:02.0000] <annevk>
or at least be made a separate assert

[05:23:03.0000] <annevk>
because that piece of code violates all the nicety the harness provides

[05:24:00.0000] <annevk>
(i.e. not needing pass1 && pass2 && pass3

[05:24:01.0000] <annevk>
)

[05:24:02.0000] <jgraham>
OK, I will do that. In the meantime you could patch your copy by looking for e.name === code_or_object

[05:24:03.0000] <jgraham>
and removing it

[05:24:04.0000] <annevk>
yeah, I guess that is best for now

[05:35:00.0000] <Ms2ger>
/me approves of removing that check

[05:47:00.0000] <annevk>
is X-Frame-Options discussed on some mailing list?

[05:47:01.0000] <annevk>
if the font community can be convinced of http://annevankesteren.nl/2011/02/from-origin it would be nice to replace it with that over time

[05:51:00.0000] <jgraham>
annevk: Does from-origin need multiple domains or wildcards or something?

[05:51:01.0000] <jgraham>
e.g. From-Origin *.example.com

[05:52:00.0000] <jgraham>
or rather http://*.example.com or something

[05:52:01.0000] <annevk>
I'd prefer not to

[05:53:00.0000] <annevk>
but it could be extended in such a way

[05:53:01.0000] <annevk>
or turned into that if that is what is needed

[05:53:02.0000] <annevk>
most of the time you simply want From-Origin: same

[06:06:00.0000] <annevk>
oh EventSource, I dislike updating your tests so much

[06:09:00.0000] <Philip`>
Could From-Origin be easily worked around for image hotlinking by doing <object data="data:text/html,<script>location='http://example.org/image'</script>"></object> ?

[06:10:00.0000] <annevk>
no

[06:11:00.0000] <Philip`>
Oh, I'm confused and thinking of it like Not-From-Origin or something

[06:12:00.0000] <annevk>
the name is not that great

[06:12:01.0000] <Philip`>
(where if the origin data has been stripped by redirects/etc then it's allowed)

[06:13:00.0000] <annevk>
no, the check is made relative to the context where the resource ends up in

[06:13:01.0000] <annevk>
redirects are futile

[06:14:00.0000] <Philip`>
Hmm, how is the context determined when you have multiple nested levels of embedding (each perhaps at different origins)?

[06:15:00.0000] <annevk>
the context is the API issuing the request

[06:18:00.0000] <annevk>
oh joy

[06:18:01.0000] <annevk>
WebKit still has .URL

[06:19:00.0000] <annevk>
I heard somewhere you get more follow-up if you file a Chromium bug than a WebKit bug, is that still true?

[06:20:00.0000] <annevk>
Peter`, do you know?

[06:21:00.0000] <Peter`>
In my experience, yes

[06:21:01.0000] <Peter`>
although there's about 10k unconfirmed Chromium issues too

[06:21:02.0000] <annevk>
joy

[06:22:00.0000] <annevk>
given that WebKit still has not resolved the .URL issue I wonder if it is worth filing issues on resolving URLs and 2xx responses per Hixie's recent change

[06:23:00.0000] <Peter`>
Has it been filed somewhere?

[06:29:00.0000] <annevk>
https://bugs.webkit.org/show_bug.cgi?id=40899

[06:29:01.0000] <annevk>
ap apparently wanted to convince people to change the spec yet again but that has not happened and meanwhile Opera shipped with .url

[06:30:00.0000] <annevk>
I suspect nobody is using that attribute as it is fairly useless, but still...

[06:33:00.0000] <benschwarz>
zcorpan: updates some issues.

[06:33:01.0000] <benschwarz>
now, sleep time. *whew

[06:33:02.0000] <annevk>
zcorpan, hey, I 386'd that for you and won

[06:34:00.0000] <annevk>
zcorpan, one Internet in return please

[06:35:00.0000] <zcorpan>
annevk: what did you win?

[06:36:00.0000] <annevk>
the argument

[06:44:00.0000] <annevk>
AryehGregor, you around?

[07:04:00.0000] <zcorpan>
hmm. there's a race condition with autoplay="" and events

[07:11:00.0000] <annevk>
I wish there was an easy way to check null/undefined handling across a large number of methods/attributes

[07:11:01.0000] <annevk>
but I guess it's just going to be manual labor of coming up with a large list

[07:12:00.0000] <annevk>
should have a set of summer interns for these things :)

[07:20:00.0000] <Ms2ger>
annevk, I can tell you what Gecko does ;)

[07:21:00.0000] <annevk>
Ms2ger, oh really?

[07:21:01.0000] <annevk>
Ms2ger, that would be sufficient I think

[07:21:02.0000] <Ms2ger>
null -> "", undefined -> "undefined"

[07:21:03.0000] <annevk>
right, and the exceptions are?

[07:22:00.0000] <annevk>
cause last I heard this is not 100% consistent

[07:22:01.0000] <Ms2ger>
DOMTokenList

[07:22:02.0000] <Ms2ger>
querySelector(All)

[07:23:00.0000] <Ms2ger>
createHTMLDocument

[07:23:01.0000] <Ms2ger>
textarea.wrap

[07:23:02.0000] <Ms2ger>
a.text

[07:23:03.0000] <Ms2ger>
And actually, I seem to have caused all of them

[07:24:00.0000] <annevk>
I could swear sicking said there was more to it

[07:24:01.0000] <annevk>
because those indeed do not sound like they need to be this way

[07:24:02.0000] <Ms2ger>
Hmm

[07:25:00.0000] <annevk>
maybe it is mostly with method calls

[07:25:01.0000] <annevk>
e.g. xhr.open() or xhr.send()

[07:26:00.0000] <annevk>
as specced xhr.send(null) / xhr.send() is different from xhr.send("")

[07:26:01.0000] <annevk>
former has no entity body latter has

[07:27:00.0000] <zcorpan>
annevk: send() isn't DOMString in the IDL, though, right?

[07:27:01.0000] <zcorpan>
so null isn't converted at all

[07:27:02.0000] <Ms2ger>
It's a UTF-8 string

[07:28:00.0000] <annevk>
it's void send([AllowAny] DOMString? data); atm

[07:28:01.0000] <annevk>
I guess DOMString? makes it not a DOMString...

[07:28:02.0000] <annevk>
or not fully one

[07:28:03.0000] <zcorpan>
what's [AllowAny]?

[07:29:00.0000] <Ms2ger>
I guess you'd get undefined -> null, null -> null for DOMString?

[07:29:01.0000] <annevk>
to make sure that Object does not throw a TypeError

[07:29:02.0000] <AryehGregor>
annevk, I'm around now.

[07:29:03.0000] <annevk>
just DOMString should do the undefined -> "undefined" and null -> "null" thing

[07:30:00.0000] <annevk>
AryehGregor, I wondered whether you tested setting string content attributes to null/undefined, but from looking at the source I got the impression you did not

[07:31:00.0000] <AryehGregor>
At the time I wrote my reflection tests, I hadn't read WebIDL, so I didn't know what the behavior was supposed to be, so I didn't test it.

[07:31:01.0000] <AryehGregor>
They could easily be updated, though.

[07:32:00.0000] <annevk>
the behavior isn't really defined yet

[07:32:01.0000] <annevk>
from what Ms2ger is saying though and looking at http://lists.w3.org/Archives/Public/public-webapi/2008May/0449.html I think maybe Gecko has been consistent here

[07:32:02.0000] <Ms2ger>
Looks like undefined -> "", null -> "" for cstrings

[07:33:00.0000] <jgraham>
/me wishes this just follwed ECMAScript

[07:33:01.0000] <jgraham>
kind of late now I guess

[07:35:00.0000] <annevk>
I know null -> "" is needed for compat, so no

[07:36:00.0000] <zcorpan>
can't we specify DOMString? for stuff that need null -> "" ?

[07:36:01.0000] <jgraham>
/me doesn't like animations

[07:37:00.0000] <annevk>
zcorpan, no

[07:38:00.0000] <annevk>
zcorpan, DOMString? means it can be set to null

[07:38:01.0000] <jgraham>
Specifically TCs involving animation that therefore take forever to run

[07:38:02.0000] <annevk>
with null being different from the empty string

[07:38:03.0000] <zcorpan>
annevk: yeah. so then say in prose that null means empty string

[07:38:04.0000] <annevk>
such as xhr.send() and the alternate style sheets API

[07:39:00.0000] <annevk>
zcorpan, there's different semantics between null and empty string so that would not work

[07:39:01.0000] <annevk>
zcorpan, oh

[07:39:02.0000] <annevk>
zcorpan, why not just have that be the behavior for "DOMString"

[07:39:03.0000] <annevk>
then you need not worry about defining that

[07:39:04.0000] <annevk>
http://lists.w3.org/Archives/Public/public-webapi/2007Jun/0011.html is where othermaciej states different attributes need different things

[07:39:05.0000] <zcorpan>
annevk: if it can be done everywhere, sure

[07:39:06.0000] <annevk>
maybe he was wrong

[07:40:00.0000] <annevk>
I have not found examples

[07:41:00.0000] <annevk>
apart from what Ms2ger just mentioned, but those are bugs he introduced

[07:42:00.0000] <Ms2ger>
Looks like document.open has something else too

[07:44:00.0000] <zcorpan>
seems like foolip should file his CP as a bug

[07:45:00.0000] <annevk>
and then hixie should fix it before we get to vote on the other CP

[07:45:01.0000] <annevk>
and then I'd like to find out what happens

[07:45:02.0000] <zcorpan>
before or after, who cares

[07:45:03.0000] <annevk>
apparently, I do

[07:45:04.0000] <zcorpan>
heh

[07:45:05.0000] <annevk>
but not too much

[07:46:00.0000] <zcorpan>
time for weekend

[07:46:01.0000] <zcorpan>
see ya

[07:52:00.0000] <annevk>
Opera will prolly change its defaults to do null -> "" for bindings as well

[07:57:00.0000] <annevk>
hopefully then heycam can change the spec and this can be resolved closed :)

[07:57:01.0000] <annevk>
or the other way around

[08:04:00.0000] <AryehGregor>
Yay on ISSUE-41.

[08:08:00.0000] <acroyear2>
??heroism

[08:10:00.0000] <jgraham>
Philip`: http://morepypy.blogspot.com/2011/02/pypy-faster-than-c-on-carefully-crafted.html

[08:15:00.0000] <Philip`>
Modern C compilers can inline across compilation units, then they'd dead-code-eliminate so the loop disappears entirely (which it looks like PyPy doesn't), and the shared library thing is mostly irrelevant since you can easily avoid writing performance-critical loops that cross shared library boundaries

[08:18:00.0000] <Philip`>
Also there's loads of decent profiling tools for C so you can easily find bottlenecks and then it's usually clear how to fix them, whereas profiling JITted code seems rare and you can never really tell what source changes will result in the desired machine code improvements

[08:18:01.0000] <Philip`>
So I think it's a silly comparison, like almost all "X is faster than C" comparisons :-p

[08:19:00.0000] <jgraham>
Philip`: They were very clear that it was a well-choden example :)

[08:19:01.0000] <jgraham>
*chosen

[08:24:00.0000] <Philip`>
Yeah, I don't mean they're being misleading about what's being measured, they're just measuring something that seems pretty irrelevant for real code - there's not much value in being faster than poorly-designed C code

[08:27:00.0000] <jgraham>
Well, I don't think people are going to be chosing python over C for speed anytime soon

[08:27:01.0000] <Philip`>
/me has forgotten what the context of this discussion was, anyway

[08:28:00.0000] <jgraham>
/me too, I just remember that there was one and the link seemed relevant

[08:28:01.0000] <jgraham>
s/I/he/ s/ber/bers/

[08:31:00.0000] <webr3>
/me looks at http://www.momkai.com/ nice done in html/css/js site

[08:32:00.0000] <jgraham>
webr3: They should creatively leave my scrollbars alone

[08:32:01.0000] <Philip`>
I suppose I just get mildly irritated by performance comparisons vs C which always seem to miss the point by doing things that are inefficient C and could be easily worked around

[08:34:00.0000] <Philip`>
There are some things that are inefficient in C and hard to work around, like pointer aliasing or struct-of-array vs array-of-struct data structures (which can make a huge difference due to cache usage)

[08:34:01.0000] <Philip`>
so it'd be nice if other languages tackled that kind of thing, I think

[08:35:00.0000] <Philip`>
(C can't fix them because it's constrained by having given programmers access to pointers, so it can't e.g. rearrange a data structure without breaking lots of assumptions)

[08:36:00.0000] <jgraham>
Philip`: IIRC you were suggesting that PyPy wasn't giving notable performance improvments given the rate of improvements in javascript

[08:36:01.0000] <jgraham>
/me remembers the context at last

[08:37:00.0000] <Philip`>
Oh, that might have been it

[08:38:00.0000] <Philip`>
If they have an exponentially decaying graph of performance on a non-trivial benchmark suite then I'd be happy, I guess :-)

[08:40:00.0000] <jgraham>
http://speed.pypy.org/timeline/

[08:40:01.0000] <jgraham>
The graphs look more linear to me

[08:45:00.0000] <Philip`>
The changes don't look quite as radical as e.g. in http://ieblog.members.winisp.net/images/Dean_MIX10_2.png

[08:48:00.0000] <AryehGregor>
gsnedders, did you remember to ask people about Opera's innerText implementation?  (How it differs from textContent, and whether it has known compat issues.)

[08:49:00.0000] <jgraham>
Philip`: Well some tests do. And there seems to be a similar amount of progress compared to CPython

[08:49:01.0000] <gsnedders>
AryehGregor: No, I got to sleep at 7am this morning and slept in

[08:49:02.0000] <jgraham>
as between IE8 and IE9

[08:49:03.0000] <jgraham>
Although I am not actually looking at the numbers, so that "similar amount" could be quite different

[08:50:00.0000] <webr3>
/me lols at these test results http://www.bestresizer.com/2011/01/sunspider-javascript-benchmark-results-in-my-browsers/ fire fox 4, chrome 10, ie... 6!

[08:50:01.0000] <webr3>
/me thinks somebody is trying to infer ie is a bag o shite to stay away from

[08:52:00.0000] <bfrohs>
/me wonders why they used IE 6

[09:18:00.0000] <TabAtkins>
othermaciej: Yeah, I've got some opinions.  I think that overall, the structure of <device> is sound and useful, in that it's the API for requesting hardware access from the user.  It hands back an object specialized for that hardware/access-mode, which is also good design.

[09:19:00.0000] <TabAtkins>
The only thing I would change in the overall design is making it just a JS constructor, not an HTML element.  I don't see any value in making it an HTML element - it seems to have the same weirdness that <eventsource> did.

[09:19:01.0000] <othermaciej>
TabAtkins: it seems extremely silly to me, compared to having dedicated elements and interfaces for particular kinds of hardware

[09:20:00.0000] <othermaciej>
"requesting hardware access from the user" is not an abstraction that is useful at the UI level

[09:21:00.0000] <TabAtkins>
Hm, really?  I'd naively think that saying "hey, the webpage wants to stream from your webcam" and "hey, the webpage wants to use your xbox controller" would be similar.

[09:23:00.0000] <othermaciej>
I imagine the xbox controller, like the mouse and keyboard, is not something that needs permission at all

[09:23:01.0000] <othermaciej>
for the camera, the UI I would imagine is something like this:

[09:24:00.0000] <othermaciej>
pops up a window that shows a preview of what the camera is currently seeing, with record and cancel buttons

[09:24:01.0000] <othermaciej>
if you have both front and back cameras, there is an affordance to switch, and the preview updates

[09:24:02.0000] <othermaciej>
if you start recording, there is a persistent "record light" type visual indicator in the UI

[09:24:03.0000] <TabAtkins>
That seems like the UI for <input type=file accept=video/*>, not for allowing the script access to the camera to do what it wishes.

[09:25:00.0000] <othermaciej>
what would you imagine?

[09:26:00.0000] <othermaciej>
that is the best I can think of so far

[09:26:01.0000] <TabAtkins>
I'm not completely certain, but I'd think it'd be more like a standard one-time-permission dialog, without an intrusive display or indicator that it is recording.

[09:26:02.0000] <othermaciej>
agree that it would be better to make more clear that the recording will continue indefinitely, but I am not sure how to do that (other than the record light telling you it hasn't stopped)

[09:27:00.0000] <bfrohs>
othermaciej: It's like access to your location (or anything else that requires permission). You can have the choice to allow this session, allow permanently, or deny

[09:27:01.0000] <othermaciej>
why would a permission dialog with text be better than something that shows you a preview of what the camera is showing, and lets you pick which camera to use?

[09:28:00.0000] <TabAtkins>
That can be a part of the permissions dialog, sure.  It makes a lot of sense.  But it shouldn't stay up after permission has been granted.

[09:28:01.0000] <othermaciej>
permission dialogs are the worst security UI ever designed

[09:28:02.0000] <othermaciej>
I didn't say it should stay up after

[09:29:00.0000] <othermaciej>
anyway, I don't see how any of this UI could meaningfully be shared with access to an RS232 port

[09:29:01.0000] <othermaciej>
(which I don't exactly see us leaping to do, but never say never, I suppose)

[09:29:02.0000] <TabAtkins>
I don't even know what an RS232 port is, so I can't comment.  Right now I'm interested in cam/mic access, and usb HID access.

[09:29:03.0000] <bfrohs>
TabAtkins: http://en.wikipedia.org/wiki/RS-232

[09:30:00.0000] <othermaciej>
the result of throwing texty permissions dialogs at the user is this: <http://krebsonsecurity.com/2011/01/exploit-packs-run-on-java-juice/>

[09:30:01.0000] <TabAtkins>
The latter is what all video game controllers use.

[09:30:02.0000] <AryehGregor>
TabAtkins, http://www.xscables.com/prodimages/CC2045-06_LR.jpg

[09:30:03.0000] <TabAtkins>
AryehGregor: Ah, kk.

[09:30:04.0000] <othermaciej>
TabAtkins: I think Hixie invented <device> so he can piggy back controlling his model trains on camera/microphone access

[09:30:05.0000] <othermaciej>
it is a mostly obsolete thing in modern computers, no one plugs stuff into their serial port

[09:31:00.0000] <TabAtkins>
Hehe.

[09:31:01.0000] <jgraham>
But some USB devices could be more serial-like than camera-like

[09:31:02.0000] <Philip`>
(Game controllers shouldn't be accessed via the USB HID level of abstraction, they should be accessed via the joystick level)

[09:32:00.0000] <TabAtkins>
Philip`: Is that well-defined?

[09:32:01.0000] <Philip`>
It's as well-defined as keyboard and mouse input

[09:32:02.0000] <Philip`>
i.e. everybody makes up their own APIs for the same basic concepts

[09:32:03.0000] <TabAtkins>
That's less useful.

[09:32:04.0000] <Philip`>
so the web can make up its own API for joystick-like input devices too

[09:33:00.0000] <AryehGregor>
othermaciej, a permission dialog is all that stops a user from installing arbitrary executables on most platforms, so an attacker who can get a user to click through a scary permission dialog can already run arbitrary code.

[09:33:01.0000] <Philip`>
(though probably based partially on polling, rather than on events (like mouse/keyboard input))

[09:33:02.0000] <AryehGregor>
Except on iOS, Chrome OS, and similar platforms.

[09:33:03.0000] <TabAtkins>
Philip`: Eww, you don't want to run a video game on polling.

[09:34:00.0000] <Philip`>
Sure you do - every frame you look for the current controller stick position

[09:34:01.0000] <othermaciej>
AryehGregor: there is a difference between "install" and "run", but yes, I would agree that it's pretty terrible regardless

[09:34:02.0000] <Philip`>
and analogue trigger positions

[09:34:03.0000] <Philip`>
though buttons should presumably be done via events

[09:34:04.0000] <AryehGregor>
I think permission dialogs are about the only sensible thing to do for features that are useful but would infringe privacy if used without permission.

[09:35:00.0000] <AryehGregor>
At least I've never heard of a better way to handle it.

[09:35:01.0000] <TabAtkins>
Philip`: Note that buttons tend to be fully analog on modern controllers, too.

[09:35:02.0000] <TabAtkins>
On the 360, everything but Start and Back are analog.

[09:35:03.0000] <AryehGregor>
When it comes to purely technical attacks, you can do a fair amount of stuff on the user's behalf without asking them, because you can automatically judge what they'll want better than they can in many cases.  But privacy issues hinge on consent.

[09:35:04.0000] <AryehGregor>
Hard to avoid making the UI hinge on consent.

[09:36:00.0000] <AryehGregor>
I wish people wouldn't use permission dialogs for more technical stuff, though, the way (for instance) the Android Market does.

[09:36:01.0000] <AryehGregor>
And apparently the Chrome Web Store too.

[09:37:00.0000] <othermaciej>
even for privacy related things, permissions dialogs are poor if they don't let the user meaningfully understand the consequences of saying yes

[09:37:01.0000] <AryehGregor>
"This application will have the right to: [list of coarse-grained privileges that most users won't understand]  Do you want to install?"

[09:37:02.0000] <AryehGregor>
That's true.

[09:37:03.0000] <othermaciej>
and even then, something user initiated is better than an app-initiated dialog

[09:38:00.0000] <TabAtkins>
Anyway, back to video.  I just don't want to force UI on page designers unless it's obvious and helpful.  If the user is recording a video to submit a form, definitely pop up some UI that stays up while they're recording and is very obvious.  But if the page is wanting to script the video stream (to do motion tracking, for example), I don't want to force the page to contain a confusing panel showing the raw video.

[09:38:01.0000] <AryehGregor>
Not sure about that.

[09:38:02.0000] <AryehGregor>
Why?

[09:38:03.0000] <AryehGregor>
Or really, what do you mean by user-initiated?

[09:39:00.0000] <AryehGregor>
Do you think the current standard geolocation UI could have been improved upon?

[09:39:01.0000] <AryehGregor>
Sites need some way of telling the user to let them use geolocation.

[09:39:02.0000] <AryehGregor>
One way or another.

[09:39:03.0000] <Philip`>
TabAtkins: It's not all analogue on at least more-than-a-few-months-old 360 controllers, as far as I'm aware - on e.g. Windows it's exposed as 6 analogue axes and about 10 digital buttons, I think

[09:40:00.0000] <TabAtkins>
Though, it might make sense to run with something smaller - have <device> render as a button that, when pressed, runs the permissions dialog, and then alters its UI to show when the page has the stream open or not.

[09:40:01.0000] <TabAtkins>
The page author can still display:none the thing once they get permission, but they don't need to if it's unintrusive.

[09:41:00.0000] <AryehGregor>
That's awkward.

[09:41:01.0000] <TabAtkins>
Philip`: I know for a fact that my 360 controller has two analog sticks, two analog triggers, and four analog face buttons.  Not sure about two of the other buttons, or the dpad, but I suspect they're analog too.

[09:41:02.0000] <AryehGregor>
In a lot of cases, you'd expect users to give permanent camera access to a site.

[09:41:03.0000] <AryehGregor>
So it gets the <device> sticking around forever by default?

[09:41:04.0000] <TabAtkins>
Dunno what Windows has access to, but my Xbox gets them as analog at least.

[09:42:00.0000] <TabAtkins>
AryehGregor: Sure, yeah.

[09:42:01.0000] <AryehGregor>
Blech.

[09:42:02.0000] <TabAtkins>
It's either that, or the user doesn't know whether the site is actively recording or not.

[09:42:03.0000] <Philip`>
TabAtkins: http://en.wikipedia.org/wiki/Gamepad#Xbox_360 - "The pressure-sensitivity feature on the face buttons was removed"

[09:42:04.0000] <AryehGregor>
I think the geolocation API is okay.  Add some discreet in-chrome UI whenever you visit the site that says what permissions it has and lets you change them.

[09:43:00.0000] <bfrohs>
Well, webcams typically have a hardware light that turns on when it's active

[09:43:01.0000] <TabAtkins>
Philip`: wut

[09:43:02.0000] <AryehGregor>
A little icon someplace.

[09:43:03.0000] <bfrohs>
And the OS also sometimes provides an icon noting it is in use

[09:44:00.0000] <bfrohs>
I don't think there needs to be an additional indication that the webcam is currently in use (only a dialog requesting permission to use)

[09:44:01.0000] <TabAtkins>
Philip`: I stand corrected.  Wtf.

[09:45:00.0000] <Philip`>
TabAtkins: See also e.g. http://google.com/codesearch/p?hl=en#PPdD7__6Qbg/src/xboxmsg.hpp&q=xboxmsg.hpp&l=44

[09:45:01.0000] <Philip`>
which has a load of 1-bit values for all the buttons

[09:46:00.0000] <Philip`>
(with the d-pad counting as four buttons)

[09:46:01.0000] <Philip`>
and only the triggers (8-bit) and sticks (16-bit) being analogue

[09:46:02.0000] <Philip`>
(The non-360 definition below has 8-bit buttons, presumably for the older controllers)

[09:50:00.0000] <Philip`>
If game controllers were exposed to the web, I wonder if you'd need a permissions check before using the rumble feature

[09:50:01.0000] <TabAtkins>
You don't need permission to rumble anything I own.

[09:51:00.0000] <Philip`>
I suppose a malicious page unexpectedly rumbling is not much worse than them playing loud audio without permission

[10:18:00.0000] <webr3>
/me wonders if the tipping point is when apps have to ask if they ask, then we're screwed

[10:18:01.0000] <webr3>
/me /s/they/they can

[11:07:00.0000] <Hixie>
othermaciej: a number of the issues on http://dev.w3.org/html5/status/issue-status.html that are in state "Call for Alternate/Counter Proposals" don't have a deadline

[11:07:01.0000] <Hixie>
othermaciej: is that intentional?

[11:08:00.0000] <Hixie>
annevk: i highly recommend writing a CCP for http://lists.w3.org/Archives/Public/public-html/2011Jan/0239.html -- i'll help out if you want

[11:08:01.0000] <Hixie>
/me is utterly swamped dealing with all these CPs and would really welcome the help

[11:13:00.0000] <AryehGregor>
Hixie, you could assign me to help with some of them if you want, if that's okay with Google.

[11:14:00.0000] <Hixie>
sure

[11:14:01.0000] <Hixie>
the issue-status file is getting really hard to read, with all the issues pending decisions and so on

[11:14:02.0000] <Hixie>
and weird issues like -31 that I don't understand the status of

[11:23:00.0000] <AryehGregor>
jgraham, annevk, or whoever: could you figure out what innerText does in Opera and tell me, and also tell me whether there are known compat issues with it?

[11:24:00.0000] <AryehGregor>
It seems like it's the simplest possible behavior that won't have serious compat problems.

[11:25:00.0000] <gsnedders>
AryehGregor: Including script elements is the only site compat bug I can find with it

[11:26:00.0000] <AryehGregor>
/me adds that to his tests

[11:26:01.0000] <AryehGregor>
Oh, wait, it's already there.

[11:26:02.0000] <AryehGregor>
What site is the compat problem with?

[11:27:00.0000] <gsnedders>
AryehGregor: http://dirty.ru

[11:30:00.0000] <gsnedders>
/me finds a line of code he'd missed before and has the whole thing start to make sense

[11:31:00.0000] <AryehGregor>
/me doesn't see where the compat issue comes from, since it doesn't seem to use innerText in Opera except where it uses textContent in Firefox, so does the issue occur in Firefox too?

[11:31:01.0000] <AryehGregor>
What were the steps to reproduce?

[11:32:00.0000] <gsnedders>
It's an old bug report, it's entirely possible the site doesn't use it any more

[11:33:00.0000] <gsnedders>
Yeah, doesn't appear to reproduce any more

[11:33:01.0000] <hsivonen>
I'm still shocked that <devide> in being designed on the level on waht kind of harware bus is being used instead of what type of device is being used

[11:34:00.0000] <TabAtkins>
It's not being "designed", at least.  It was "written in a throwaway proposal by Hixie that he put into the spec".

[11:35:00.0000] <gsnedders>
AryehGregor: CDATA blocks gets <[!CDATA[…]]> put around them, <br> causes \n, and that's it pretty much. There's some odd code for lastDescendent which may well do broken stuff for innerText.

[11:36:00.0000] <AryehGregor>
Weird, why would you need <[!CDATA[...]]> around CDATA blocks?

[11:37:00.0000] <AryehGregor>
Actually, how can you even get CDATA blocks in text/html?

[11:38:00.0000] <TabAtkins>
I didn't think the concept even existed.

[11:38:01.0000] <gsnedders>
AryehGregor: I guess it's become it's what the innerHTML stuff does, pretty much

[11:38:02.0000] <AryehGregor>
But how can you even get a CDATA node in the DOM?

[11:38:03.0000] <AryehGregor>
Is it possible from parsing text/html?

[11:38:04.0000] <gsnedders>
AryehGregor: It's the same code used for both HTML and XML, and {inner,outer}{Text,HTML}.

[11:38:05.0000] <AryehGregor>
Ah.

[11:39:00.0000] <gsnedders>
AryehGregor: You can get it from DOM manipulation.

[11:39:01.0000] <AryehGregor>
Well, I assume there's no compat risk there, so I won't spec it.

[11:39:02.0000] <gsnedders>
I think we output end tags in a few cases with lastDescendent, but that just seems buggy

[11:40:00.0000] <Hixie>
hsivonen: there's nothing in <device> designed to be hardware-bus-related. The stuff in the spec other than "media" is just throwaway filler for the moment (indeed the spec says so somewhere, iirc)

[11:48:00.0000] <AryehGregor>
gsnedders, do you know how I can actually set the contents of a Selection in Opera?  I can't figure out any way that works.

[11:49:00.0000] <AryehGregor>
Whatever I do seems to produce selection.rangeCount == 0.

[11:59:00.0000] <hsivonen>
it seems that security experts can't decide which plug-in (Java, Flash Player, Adobe Reader) is the "top" avenue for exploits

[12:00:00.0000] <othermaciej>
Hixie: I'll fix issue-status shortly - setting up new computer at the moment

[12:01:00.0000] <Hixie>
cool

[12:01:01.0000] <othermaciej>
finally, I should have build times less than an hour

[12:03:00.0000] <hsivonen>
othermaciej: thanks for finally deciding issue 41

[12:03:01.0000] <othermaciej>
you're welcome, though Sam deserves the thanks more than me

[12:03:02.0000] <karlcow>
http://www.w3.org/2001/tag/2011/02/security-web.html

[12:03:03.0000] <othermaciej>
I am surprised that posting the 41 decision did not spawn a flamewar

[12:03:04.0000] <karlcow>
http://www.w3.org/2001/tag/2010/10/interaction-examples.html

[12:04:00.0000] <gsnedders>
AryehGregor: Where's your TC?

[12:04:01.0000] <AryehGregor>
gsnedders, http://aryeh.name/spec/innertext/innertext.html

[12:04:02.0000] <AryehGregor>
Er.

[12:04:03.0000] <AryehGregor>
http://aryeh.name/spec/innertext/test/innerText.html

[12:05:00.0000] <hsivonen>
karlcow: gotta love URLs thathave two years

[12:05:01.0000] <hsivonen>
a decade apart even

[12:06:00.0000] <karlcow>
hsivonen: I don't know. I never look at the date as something meaningful. For me there are just identifier.

[12:06:01.0000] <gsnedders>
AryehGregor: I'm confused what you're trying to do there

[12:06:02.0000] <AryehGregor>
gsnedders, to do where?

[12:08:00.0000] <gsnedders>
AryehGregor: You create a range consisting of #test, select that, then collapse in document.body

[12:08:01.0000] <AryehGregor>
Um, wait.

[12:08:02.0000] <AryehGregor>
Look now.

[12:08:03.0000] <AryehGregor>
I was experimenting.  :)

[12:11:00.0000] <gsnedders>
Okay, I don't understand what's going on in that case either.

[12:11:01.0000] <AryehGregor>
I'm just creating a Range for what I want to be selected, using removeAllRanges() on the Selection, then adding the range.

[12:11:02.0000] <AryehGregor>
So that Range should be what's selected.  No?

[12:11:03.0000] <gsnedders>
Yeah.

[12:11:04.0000] <gsnedders>
In simple TCs, it works fine

[12:16:00.0000] <gsnedders>
Oh well, I'm outta here.

[13:25:00.0000] <TabAtkins>
Argh, IE is changing list bullet behavior between 8 and 9.

[13:26:00.0000] <TabAtkins>
I suppose that means that there isn't a significant compat impact in changing the behavior, which is good for me, but still.

[13:26:01.0000] <TabAtkins>
Makes it weird to spec.

[13:35:00.0000] <benschwarz>
here, I be

[14:07:00.0000] <benschwarz>
zcorpan: so, we should use the embedded-opentype string after all?

[14:11:00.0000] <zcorpan>
benschwarz: well, dunno - if you want ie9 to use woff instead of eot, then don't use embedded-opentype

[14:12:00.0000] <zcorpan>
benschwarz: however, using 'eot' or 'ie9-please-use-woff-instead' makes the style sheet invalid

[14:13:00.0000] <zcorpan>
i guess the main benefit with ie9 using woff is that woff is compressed, but you could configure the server to gzip the eot font and get much the same result

[14:48:00.0000] <zcorpan>
weird bug in chrome (or i guess recent webkit - works as intended in safari 5) http://software.hixie.ch/utilities/js/live-dom-viewer/saved/826

[14:49:00.0000] <zcorpan>
devtools shows 'clear:left' in inherited styles

[14:50:00.0000] <TabAtkins>
Works as intended in Chrome9.

[14:51:00.0000] <zcorpan>
i'm using up-to-date dev

[14:52:00.0000] <TabAtkins>
Ah, I'm not.

[14:52:01.0000] <TabAtkins>
(Haven't restarted in a while.)

[15:05:00.0000] <zcorpan>
/me filed http://code.google.com/p/chromium/issues/detail?id=72005

[15:07:00.0000] <zcorpan>
/me chooses to not work around the issue on his mom's dog's site and instead wait for the bug to be fixed

[15:10:00.0000] <TabAtkins>
Oh, wow, *that's* the issue?  We broke the adjacent sibling combinator?  Wtf.

[15:10:01.0000] <TabAtkins>
(Also, file at bugs.webkit.org, please?  You can crosslink the bugs, if you want.)

[15:12:00.0000] <zcorpan>
done

[15:12:01.0000] <TabAtkins>
Danke.

[15:15:00.0000] <zcorpan>
hey, it's a site compat bug! you better go fix it :)

[15:16:00.0000] <TabAtkins>
Actually, it almost certainly *is* a site compat bug.

[15:16:01.0000] <TabAtkins>
Breaking combinators is no fun.

[15:20:00.0000] <jgraham>
/me is somewhat surprised you don't have regression tests covering that

[15:20:01.0000] <TabAtkins>
Me too.

[15:21:00.0000] <jgraham>
Although maybe it is more complex than I think?

[15:22:00.0000] <zcorpan>
jgraham: do *we* have regression tests covering that?

[15:22:01.0000] <jgraham>
zcorpan: I expect that depends how broken it is

[15:23:00.0000] <jgraham>
I might imagine that the CSS2.1 testsuite covers it

[15:23:01.0000] <jgraham>
If not, this is the ideal time for someone to make a test (although I guess it would have to go into the Selectors 3 TS)

[15:25:00.0000] <zcorpan>
 http://software.hixie.ch/utilities/js/live-dom-viewer/saved/827 shows the bug as well

[15:27:00.0000] <jgraham>
If we don't have a test that the adjacent sibling combinator only applies to the adjacent sibling, we should launch an investigation into why not

[15:30:00.0000] <jgraham>
http://test.csswg.org/suites/css2.1/20110111/html4/sibling-selector-001.htm

[15:30:01.0000] <jgraham>
Also, that test is lame

[15:30:02.0000] <jgraham>
Who uses green as a fail condition?

[15:30:03.0000] <zcorpan>
regarding atob(), is the compat problem for not throwing for whitespace or for not throwing for other garbage?

[15:31:00.0000] <zcorpan>
if it's for other garbage, we could allow whitespace but throw for other garbage

[15:31:01.0000] <jgraham>
/me discovers <link rel="author" title="Microsoft" href="http://www.microsoft.com/">

[15:31:02.0000] <zcorpan>
heh

[15:32:00.0000] <zcorpan>
that test indeed covers the issue

[15:34:00.0000] <jgraham>
I am quite worried by how strongly I react to tests that offend my sense of aesthetics

[15:35:00.0000] <jgraham>
Does it count as a work related injury if I can't see the text "The following line should be green\nFiller Text" without thinking "No, you should never use 'Filler Text' for the pass condition, that should be rewritten 'This text should be green'"?

[15:35:01.0000] <zcorpan>
yes

[15:37:00.0000] <bfrohs>
/me would be worried if you *didn't* think that

[15:38:00.0000] <zcorpan>
my work injury is that i have a hard time resisting filing bugs (or equivalent as appropriate) when i find them, even if it's not related to browsers or even the web

[15:39:00.0000] <zcorpan>
the problem usually is finding out who i should report the bug *to*

[15:39:01.0000] <jgraham>
What about non-software?

[15:40:00.0000] <zcorpan>
yeah, non-software too

[15:41:00.0000] <wilhelm>
It's affecting my private life too. I try to file bugs on my friends. It usually doesn't have the desired effect.

[15:42:00.0000] <Hixie>
/me files a bug on wilhelm to get a PC so he can play BC2 with all his friends instead of having to play on PS3 with wilhelm and PC with everyone else

[15:42:01.0000] <zcorpan>
e.g. if there's a sign that says that i can pay with mastercard but it only accepts visa, i feel an urge to make someone aware of the problem and fix the sign

[15:42:02.0000] <benschwarz>
zcorpan: if the @font-face is working, I'm happy for now

[15:42:03.0000] <benschwarz>
hah

[15:42:04.0000] <jgraham>
zcorpan: You will be slowly driven mad

[15:42:05.0000] <benschwarz>
Hixie: few things fixed overnight

[15:42:06.0000] <wilhelm>
Hixie: :P

[15:42:07.0000] <Hixie>
benschwarz: i saw

[15:42:08.0000] <benschwarz>
tracking pretty well I think

[15:43:00.0000] <Hixie>
benschwarz: looks good

[15:43:01.0000] <zcorpan>
but it's remarkable that employees of the company that governs the sign are totally uninterested in fixing the sign themselves or passing the information on to another employee who should be fixing the sign

[15:43:02.0000] <jgraham>
Also, I don't understand how the CSS tests (subset I looked at) turned out so bad. I mean they have http://www.w3.org/Style/CSS/Test/guidelines.html

[15:43:03.0000] <jgraham>
It's like the people read it but failed to understand important points

[15:44:00.0000] <Hixie>
anyone recall if i've invented terminology to mean "the Window or the WorkerGlobalScope, whichever is appropriate"?

[15:44:01.0000] <Hixie>
we have "cache host" for appcache, but that's Document or WGS

[15:46:00.0000] <jgraham>
/me notes that Hixie's example tests on that document are not uniformly compliant to the document

[15:46:01.0000] <jgraham>
Or afaict uniformly demonstrating the thing that they intend

[15:47:00.0000] <zcorpan>
Hixie: you should write a hack so that you can play on the PC on your end and wilhelm can play on the PS3 on his end

[15:47:01.0000] <Hixie>
that would be quite the hack

[15:47:02.0000] <benschwarz>
zcorpan: have you updated your special element thing to use the correct font now?

[15:48:00.0000] <jgraham>
/me goes to bed before he finds anything else to make him unhappy

[15:49:00.0000] <zcorpan>
benschwarz: no. i was going to ask you if you wanted to host a style sheet that i could point to in html5-elements so that the styles are up-to-date when you change stuff

[15:50:00.0000] <Hixie>
jesus

[15:50:01.0000] <Hixie>
/me reads the video content-type issue thread

[15:50:02.0000] <Hixie>
this bureaucracy is becoming ludicrous

[15:53:00.0000] <TabAtkins>
"becoming"?

[15:54:00.0000] <Hixie>
well it used to be that it wasted our time, but at least each time wasting resulting in movement forwards

[15:54:01.0000] <Hixie>
now apparently we have to waste our time going sideways

[15:55:00.0000] <Hixie>
and we're likely to end up with our furst normative difference between the whatwg and w3c specs, with the w3c one requiring that UAs honour content types, despite only one UA doing it, and the WHATWG one doing what foolip suggests (and using abarth's sniff spec and ignoring content-type for <video>)

[15:56:00.0000] <Hixie>
though apparently this would then only be a temporary thing because a few months later the wg would do the same thing

[15:56:01.0000] <Hixie>
i mean, that's literally process for process' sake and not for progress' sake

[15:56:02.0000] <Hixie>
at least until now there was some indication that the process was intended to make progress as well

[15:57:00.0000] <zcorpan>
Hixie: that's not how i understand the situation: the bug was about an editorial issue, and foolip's CP is considered out of scope for the original bug and should instead be filed as a separate bug which you can choose to accept regardless of the outcome of the editorial issue

[15:57:01.0000] <Hixie>
which julian would then object to

[15:57:02.0000] <Hixie>
and i'd have to revert it

[15:58:00.0000] <zcorpan>
did he say that he would object to it?

[15:58:01.0000] <Hixie>
i assume so

[15:58:02.0000] <Hixie>
he didn't say it, but i assume he would object

[15:58:03.0000] <Hixie>
otherwise why would he object now?


2011-02-05
[16:00:00.0000] <zcorpan>
maybe because the CP makes a substantive change for an editorial issue

[16:00:01.0000] <Hixie>
ok well then someone file the bug, i'll fix it, and then his issue will be moot and we can get on without worrying about process

[16:00:02.0000] <zcorpan>
have a pointer to foolip's CP?

[16:01:00.0000] <Hixie>
http://www.w3.org/html/wg/wiki/ChangeProposals/NoVideoContentType

[16:01:01.0000] <Hixie>
though note that the chairs haven't actually said it's not valid and indeed still list it in issue-status

[16:02:00.0000] <Hixie>
so i'm very confused about whether it's valid or not

[16:02:01.0000] <Hixie>
they even explicitly said foolip didn't have to retract it, iirc

[16:14:00.0000] <benschwarz>
zcorpan: I can work something out for you. after the next week the mass changes will start to settle though

[16:14:01.0000] <zcorpan>
benschwarz: cool

[16:15:00.0000] <zcorpan>
Hixie: http://www.w3.org/Bugs/Public/show_bug.cgi?id=11984

[16:15:01.0000] <benschwarz>
Hixie: Is there a way to set a wildcart against a domain for appCache to continue to cache any resources that are used in a site for offline use?

[16:16:00.0000] <Hixie>
zcorpan: can you post on the thread just saying "i filed a bug for foolip"? that way i can reply saying i've done it

[16:18:00.0000] <zcorpan>
done

[16:18:01.0000] <Hixie>
thanks

[16:30:00.0000] <zcorpan>
nn

[17:54:00.0000] <Yuhong>
syntax.whatwg.org seems to be dead.

[18:02:00.0000] <abarth>
Hixie: i updated the sniffing draft to have a hook for sniffing video specifically

[18:02:01.0000] <abarth>
Hixie: do you need one for other kinds of media?

[18:05:00.0000] <abarth>
i posted on the bug

[18:53:00.0000] <Yuhong>
abarth: <!-- is not an indication of HTML. It is a generic SGML/XML comment.

[18:59:00.0000] <Hixie>
Yuhong: where did you get a link to syntax.whatwg.org?

[19:00:00.0000] <Hixie>
abarth: i think anne was asking for fonts, but media is all i need at this point. I'll add specific sniffing as a separate thing later, I don't honestly expect the text so far to remain out of the spec

[19:00:01.0000] <Yuhong>
Don't remember, but I was looking for the unofficial SGML declaration for HTML5.

[19:00:02.0000] <Hixie>
abarth: but thanks

[19:01:00.0000] <Hixie>
Yuhong: ah. There's no SGML declaration for HTML, HTML isn't anything to do with SGML any more

[19:01:01.0000] <Yuhong>
That is why I said "unofficial".

[19:02:00.0000] <Yuhong>
I think the main disadvantage of parsing HTML5 this way is the different error handling. For a web browser I wouldn't trust it.

[19:04:00.0000] <Yuhong>
It used to be on syntax.whatwg.org

[19:07:00.0000] <Yuhong>
As a bonus, with a different SGML declaration, XHTML can be parsed with the same SGML parser thanks to XML being compatible with SGML!

[19:08:00.0000] <Yuhong>
Hixie: BTW, have you heard of mangleme?

[19:20:00.0000] <othermaciej>
parsing HTML with an SGML parser...

[01:23:00.0000] <zcorpan>
Hixie: shouldn't workers have ononline and onoffline event handlers too?

[01:32:00.0000] <annevk>
haha

[01:32:01.0000] <annevk>
so zcorpan actually went ahead and raised the bug and Hixie fixed it

[01:33:00.0000] <annevk>
zcorpan, interesting observation on twitter btw

[01:34:00.0000] <annevk>
zcorpan, seems From-Origin is really quite useful

[01:34:01.0000] <zcorpan>
yeah

[01:34:02.0000] <zcorpan>
but i hate the name

[01:35:00.0000] <annevk>
if you think of something better

[01:36:00.0000] <zcorpan>
someone here suggested Restrict-Embedding-To or something like that

[01:36:01.0000] <annevk>
Embedding-Origin

[01:36:02.0000] <zcorpan>
wfm

[01:37:00.0000] <zcorpan>
or Embedding-Origins to allow multiple origins

[01:37:01.0000] <annevk>
yeah, I guess at some point it should allow a comma-separated list

[01:37:02.0000] <zcorpan>
Embedding-Origins: http://developers.whatwg.org http://simon.html5.org

[01:37:03.0000] <othermaciej>
annevk: I think I am going to post to www-fonts or the font wg list proposing Restrict-Embedding (or From-Origin or whatever you want to call it)

[01:37:04.0000] <othermaciej>
instead of SOR

[01:37:05.0000] <othermaciej>
for all resource types

[01:38:00.0000] <othermaciej>
we'll see how that goes

[01:38:01.0000] <zcorpan>
cool

[01:38:02.0000] <annevk>
zcorpan, space-separated has different semantics for Origin / Access-Control-Allow-Origin

[01:38:03.0000] <annevk>
zcorpan, it means the redirect chain

[01:38:04.0000] <zcorpan>
annevk: oh

[01:38:05.0000] <othermaciej>
I will explain the three-way difference among linking, embedding and reading, and how the Web has historically treated them

[01:39:00.0000] <othermaciej>
I think it should have the same syntax (and rough semantics) as Access-Control-Allow-Origin

[01:39:01.0000] <zcorpan>
annevk: well, seems useful to be able to allow multiple origins to embed your stuff in some way without jumping through hoops

[01:39:02.0000] <annevk>
othermaciej, see pm

[01:39:03.0000] <annevk>
zcorpan, yeah, could be Embedding-Origins: same, http://example.com

[01:40:00.0000] <zcorpan>
+1

[01:40:01.0000] <othermaciej>
except that header missing means allow all, not deny all, of course

[01:40:02.0000] <othermaciej>
I don't think you should have to explicitly list same

[01:40:03.0000] <othermaciej>
same-origin embedding should always be allowed

[01:40:04.0000] <othermaciej>
is there a use case for denying it?

[01:41:00.0000] <zcorpan>
good point

[01:41:01.0000] <annevk>
othermaciej, you mean if you just specify Embedding-Origins same is implied?

[01:41:02.0000] <Hixie>
zcorpan: yeah probably

[01:41:03.0000] <Hixie>
zcorpan: file a bug

[01:41:04.0000] <annevk>
wfm

[01:41:05.0000] <Hixie>
zcorpan: or send mail or something

[01:41:06.0000] <othermaciej>
Access-Control-Allow-Origins doesn;t have to list "same"

[01:41:07.0000] <othermaciej>
I mean, same-origin access is always allowed, and if the special header is present, then only those other headers are allowed access instead of all others

[01:42:00.0000] <annevk>
well, CORS is way different

[01:42:01.0000] <annevk>
CORS is about allowing, this is about denying

[01:42:02.0000] <othermaciej>
there's no way to deny same-origin reading

[01:42:03.0000] <othermaciej>
so I don't think there needs to be a way to deny same-origin embedding

[01:43:00.0000] <zcorpan>
Hixie: done

[01:43:01.0000] <othermaciej>
since you can always use reading to circumvent it anyway

[01:43:02.0000] <annevk>
yeah

[01:43:03.0000] <othermaciej>
having to list "same" is pretty much always what you want and having to include it is an inconvenience

[01:43:04.0000] <annevk>
but Embedding-Origins: same is nice

[01:43:05.0000] <annevk>
don't proxies sometimes strip empty headers?

[01:43:06.0000] <othermaciej>
I see, you want a way to say same-origin only

[01:44:00.0000] <annevk>
that is the most common case

[01:44:01.0000] <othermaciej>
I was thinking a CDN would be the most common use case, by volume of traffic served at least

[01:45:00.0000] <othermaciej>
anyway, "same" seems like a reasonable keyword for that

[01:45:01.0000] <annevk>
fair enough, but the "same" thing is what some font foundries want for their licenses

[01:45:02.0000] <zcorpan>
othermaciej: http://twitter.com/#!/zcorpan/status/33645906876174336

[01:45:03.0000] <annevk>
to require people serving it up with that

[01:45:04.0000] <annevk>
and yeah, it's also useful to protect against certain issues

[01:45:05.0000] <othermaciej>
I hope their licenses let people put a font on their own CDN to serve to their own main domain

[01:45:06.0000] <annevk>
and might be able to replace x-frame-options

[01:46:00.0000] <othermaciej>
as far as name bikeshedding, may I suggest Embed-Only-From-Origins:

[01:46:01.0000] <othermaciej>
if that's not too long

[01:46:02.0000] <annevk>
I don't really mind about the name that much

[01:46:03.0000] <othermaciej>
seems to be clear about what it does, and doesn't falsely imply that if you remove it, no embedding is allowed

[01:47:00.0000] <annevk>
it's no longer than Access-Control-Allow-Origin I think...

[01:47:01.0000] <annevk>
anyway, time to go skiing; ttyl

[01:47:02.0000] <othermaciej>
later!

[02:25:00.0000] <abarth|afk>
Embedding-Origins seems like something that should be part of CSP

[02:52:00.0000] <othermaciej>
doesn't seem related to the rest of CSP to me

[02:52:01.0000] <othermaciej>
although, I don't know that much about CSP

[03:10:00.0000] <abarth>
compare with frame-ancestors

[03:10:01.0000] <abarth>
which is a CSP directive

[03:10:02.0000] <abarth>
indicating which contexts can embed the resource

[03:10:03.0000] <abarth>
as an iframe

[03:17:00.0000] <othermaciej>
the rest of CSP doesn't really make sense for an image or a font

[03:19:00.0000] <othermaciej>
while it does fit with the CSP theme of denying things that are normally allowed and converting to a whitelist, it seems like overkill to use a policy language for hotlinking prevention

[03:19:01.0000] <othermaciej>
a key goal here is to make it substantially easier than checking an incoming Referer or Origin header

[03:21:00.0000] <abarth>
the counter argument that folks will make is that we're making our lives harder by proliferating policy locations

[03:21:01.0000] <abarth>
i'm not sure whether its that big a deal

[03:24:00.0000] <othermaciej>
I suspect when/if the suggestion gets posted on the fonts lists, that "it should be based on CSP" will not be one of the top 5 objections

[03:24:01.0000] <abarth>
:)

[03:24:02.0000] <abarth>
sure

[03:25:00.0000] <othermaciej>
I guess the reasons I am wary are:

[03:25:01.0000] <abarth>
but if/when you ask the mozilla folks if they'd like to implement it, i suspect it will be on their list

[03:25:02.0000] <othermaciej>
a) hotlinking prevention is somewhat tangention to security proper

[03:25:03.0000] <othermaciej>
*tangential

[03:25:04.0000] <othermaciej>
b) tying it to something complicated will delay progress and cut against the font vendors' desire for a solution in the short term

[03:27:00.0000] <abarth>
i should clarify that you don't really need to convince me

[03:27:01.0000] <othermaciej>
I just wanted to explain the grounds for my position

[03:28:00.0000] <abarth>
in some sense, this is also related to CORS

[03:29:00.0000] <abarth>
it's like giving access control information without being asked :)

[03:30:00.0000] <abarth>
i actually really like the idea

[03:30:01.0000] <abarth>
its super useful, especially for HTML pages

[03:31:00.0000] <abarth>
it would also be useful if it stopped embedding in a top-level frame

[03:32:00.0000] <abarth>
so that you could wall off the interior parts of your site from being linked to from outside your origin

[03:33:00.0000] <abarth>
i'd have to think more about that when i'm more awake

[07:43:00.0000] <karlcow>
would it be possible to capture the full rendering context as a series of images? A kind of webkit2png with a timer. Aka save 24 images by second in order to save a CSS3 animation, canvas animation, etc. by frame and make it a video after.

[09:41:00.0000] <annevk>
abarth, hey yt?

[09:41:01.0000] <annevk>
guess you might be sleeping

[09:41:02.0000] <annevk>
abarth, however, I did email font sniffing rules

[09:41:03.0000] <annevk>
abarth, http://www.ietf.org/mail-archive/web/websec/current/msg00235.html

[10:29:00.0000] <jgraham>
karlcow: All things are possible. But that is not possible from a normal security context

[12:02:00.0000] <Hixie>
well, nobody can say i didn't predict julian's objection

[12:03:00.0000] <boogyman>
Julian can :P

[12:03:01.0000] <tw2113>
he didn't leak it in time

[12:03:02.0000] <MikeSmith>
good times

[12:04:00.0000] <MikeSmith>
makes it all worthwhile

[12:05:00.0000] <MikeSmith>
meanwhile somebody seems to have decided that epub 3.0 document aren't allowed to have SVG animations

[12:05:01.0000] <MikeSmith>
http://epub-revision.googlecode.com/svn/trunk/build/spec/epub30-contentdocs.html#sec-svg-restrictions

[12:16:00.0000] <Ms2ger>
Can has SVG fonts?

[12:17:00.0000] <MikeSmith>
heh

[12:17:01.0000] <MikeSmith>
I imagine not

[12:17:02.0000] <MikeSmith>
Ms2ger: I suggest writing a blog post about it

[12:17:03.0000] <MikeSmith>
title it whatever you want

[12:18:00.0000] <MikeSmith>
but make sure to use the word "myths"

[12:18:01.0000] <Ms2ger>
Not "considered harmful"?

[12:18:02.0000] <MikeSmith>
"Myths Not Considered Harmful" maybe

[12:19:00.0000] <Ms2ger>
1. Unicorns

[12:20:00.0000] <MikeSmith>
spec change requests based on mythical problem cases that aren't actually problems in practice not considered harmful

[12:21:00.0000] <Ms2ger>
...by Julian?

[14:34:00.0000] <MikeSmith>
question over on #html5 - <realityking> likely stupid question, is there DOM API to determine the language of an element (kinda like the ::lang() CSS pseudo-class, only that I don't want to check against a given value).

[14:34:01.0000] <MikeSmith>
<realityking> looking at the lang property doesn't help, because it seems the value is not inherited (unlike CSS where it does)

[14:36:00.0000] <annevk>
MikeSmith, matchesSelector() is what will allow that

[14:37:00.0000] <annevk>
though it won't return the language the element is in I suppose

[14:37:01.0000] <annevk>
just tells you whether or not it matches e.g. :lang(en)

[14:39:00.0000] <realityking>
annevk: thanks for trying to answer my question (language of an element)

[14:40:00.0000] <realityking>
from my understanding using matchesSelector() I can check whether an element would be included when going for a certain selector

[14:41:00.0000] <realityking>
That is quite helpful, but not quite what I'm looking for

[14:41:01.0000] <realityking>
I'd like to read out the language and process it

[14:42:00.0000] <annevk>
should be able to get it by walking up the tree

[14:42:01.0000] <realityking>
true

[14:42:02.0000] <annevk>
though you miss out on encapsulating data

[14:42:03.0000] <realityking>
that's what I'm doing

[14:43:00.0000] <realityking>
I was just surprised that the CSS :lang() selectors considers that language can be inherited, but there is no property on the element giving me that information

[14:43:01.0000] <annevk>
in retrospect .lang should have given you that

[14:44:00.0000] <Hixie>
why do you need it? (if it's a good use case, we might just add a way to do it)

[14:44:01.0000] <realityking>
annevk: from my testing that only works when the lang attribute is specified on that element

[14:45:00.0000] <annevk>
yeah, I meant if we designed it today

[14:47:00.0000] <realityking>
Hixie: HTML snippets send via AJAX and I need to know their language

[14:47:01.0000] <Hixie>
ah ok

[14:47:02.0000] <Hixie>
then just walking up the DOM should work fine

[14:47:03.0000] <realityking>
yeah it does

[14:47:04.0000] <Hixie>
just walk up the parentNode chain until hasAttribute('lang') returns true

[14:47:05.0000] <realityking>
just hoped there is a better solution that I missed

[14:48:00.0000] <realityking>
annevk: I guess we're 10 years late with that

[14:49:00.0000] <realityking>
Certainly not a feature one needs everyday

[15:03:00.0000] <annevk>
nn

[15:12:00.0000] <Hixie>
what's the implementation status of image borders?

[15:13:00.0000] <Hixie>
caniuse says browsers do it with prefixes

[15:17:00.0000] <othermaciej>
border-image you mean?

[15:18:00.0000] <othermaciej>
-webkit-border-image is pretty clearly prefixed

[15:18:01.0000] <othermaciej>
if that is what you had in mind

[15:18:02.0000] <webr3>
q, anybody know if it would be possible to get the browsers to generate key pairs and wrap them up in certificates, perhaps coupled to keygen?

[15:27:00.0000] <Hixie>
othermaciej: yeah that's what i meant by prefixed

[15:27:01.0000] <Hixie>
othermaciej: was wondering what the status of the spec was

[15:55:00.0000] <abarth>
webr3: its possible, but there isn't much momentum to do it now

[15:59:00.0000] <webr3>
abarth, that's good enough for me, cheers :)


2011-02-06
[16:10:00.0000] <webr3>
/me meh's at xmlns, bloody pita

[17:10:00.0000] <MikeSmith>
Hixie: http://caniuse.com/#background-img-opts

[17:10:01.0000] <MikeSmith>
fwiw

[17:10:02.0000] <MikeSmith>
as far as browser support

[17:11:00.0000] <Hixie>
border-image, not background-image, but yeah, i looked at caniuse :-)

[17:11:01.0000] <MikeSmith>
seems fantasai is still working on the spec pretty actively

[17:11:02.0000] <MikeSmith>
ah

[17:11:03.0000] <MikeSmith>
nm then *)

[17:11:04.0000] <Hixie>
she's been working on that spec for like a half-decade

[17:16:00.0000] <gsnedders>
Does anywhere spec that getting an element which has had a custom property set on it before must get the same element with the custom property still set, regardless of GC?

[17:20:00.0000] <hober>
I could have sworn that was in web dom core, but I can't find it

[17:21:00.0000] <gsnedders>
If it's in web dom core, I guess I should be embarrassed seeming I briefly edited it :P

[17:22:00.0000] <hober>
:)

[20:28:00.0000] <Hixie>
when making a tileset, e.g. for techniques like css sprites, is there any advantage to using a grid over using a single row for all the images?

[00:01:00.0000] <Hixie>
man, webkit-border-image is quite buggy

[01:12:00.0000] <hsivonen>
must be a busy year both for legitimate HTML5 trainers and snakeoil salesmen

[01:13:00.0000] <hsivonen>
now that publishers are waking up to iOS apps being a bad deal and staff need to be trained for "HTML5"

[02:42:00.0000] <Philip`>
Hixie: If the images are not all equal sizes, you can pack them more tightly into a squarish grid

[02:44:00.0000] <Philip`>
Implementations will have some maximum height/width limits, so if you've got a very large number of images in a row you might hit that

[02:45:00.0000] <Philip`>
(PNG can only represent 64K pixels in each direction; I don't know if implementations have tighter limits)

[02:46:00.0000] <Philip`>
(Incidentally, I'd expect a column would probably be minutely more efficient than a row, if you don't want a grid)

[04:59:00.0000] <annevk>
alright, I guess I'll write some more Change Proposals

[05:00:00.0000] <annevk>
one for ISSUE-150 as micromanaging editors is annoying (if the W3C had a proper style guide for these questions it would be a different matter)

[05:01:00.0000] <annevk>
and one for ISSUE-140 as we should not introduce versioning in conformance

[05:29:00.0000] <annevk>
damnit

[05:29:01.0000] <annevk>
now I wrote CPP twice

[05:29:02.0000] <annevk>
if you all read CCP there you'll be fine

[11:04:00.0000] <AryehGregor>
Why do people use things like Mersenne twister when they can just use, e.g., AES in counter mode?

[11:04:01.0000] <AryehGregor>
Are they much faster?

[11:05:00.0000] <AryehGregor>
If AES is a secure block cipher, its output is computationally indistinguishable from a random bitstring.

[11:06:00.0000] <AryehGregor>
Maybe things like Mersenne twister are comparably secure, though, in which case I guess it makes no difference.

[11:11:00.0000] <Philip`>
The cipher will never repeat, which doesn't sound like good randomness

[11:12:00.0000] <AryehGregor>
Oh, right.

[11:12:01.0000] <AryehGregor>
It's indistinguishable from an arbitrary pseudo-random permutation.

[11:12:02.0000] <AryehGregor>
But repetitions have negligible probability anyway with a 128-bit block size, right?

[11:12:03.0000] <erlehmann>
I don't get it. Wouldn't a cipher need an initialization vector and a key? and on top of that a counter input?

[11:13:00.0000] <erlehmann>
While a random number generator only needs a seed?

[11:13:01.0000] <AryehGregor>
You'd use your seed as a key, and start the counter from 0.  You have to have a random seed anyway.

[11:14:00.0000] <Philip`>
Depends on what you consider negligible, and why you'd put up with theoretical non-randomness instead of using something specifically designed to be random

[11:14:01.0000] <AryehGregor>
You can't be secure against negligible probabilities anyway.  Basically all cryptographic theorems say "except with negligible probability" in them.

[11:15:00.0000] <AryehGregor>
I mean, you can be secure in some cases.

[11:15:01.0000] <AryehGregor>
Like a one-time pad.

[11:15:02.0000] <AryehGregor>
But it's an unreasonable requirement given how much more you can do if you allow negligible probabilities of stuff breaking.

[11:15:03.0000] <AryehGregor>
I dunno, my crypto course covered block ciphers and not PRNGs independently, so maybe I'm biased.  :)

[11:16:00.0000] <AryehGregor>
Theoretically, it's considerably superior to minimize the number of assumptions, so if you can prove something secure given that AES is secure, and you already rely on AES's security . . .

[11:16:01.0000] <erlehmann>
AryehGregor, a one-time pad only moves the problem. How to you securely communicate the one time key? I suspect that is an infinite regress.

[11:17:00.0000] <AryehGregor>
Well, that's a separate problem.  You have to solve one problem at a time.  The one-time pad solves one specific problem perfectly.

[11:17:01.0000] <AryehGregor>
It has other problems too, like it's malleable.

[11:18:00.0000] <AryehGregor>
E.g., I can flip a bit in the ciphertext and it will be flipped in the message.

[11:18:01.0000] <AryehGregor>
So if I happen to have external knowledge of what a particular bit means, I can modify the message -- although it stills gives me no information.

[11:19:00.0000] <Philip`>
If you only want the PRNG output for use in crypto stuff, then I guess you might worry less about its randomness properties than if you're using it for statistical computation stuff, so AES would probably be okay

[11:20:00.0000] <Philip`>
If you care about it being a good uniform distribution in up to 623 dimensions then you'd use a Mersenne twister instead, I suppose

[11:20:01.0000] <AryehGregor>
Even for statistical computation, surely you can't run enough rounds of AES for non-repetition to be statistically detectable?

[11:21:00.0000] <erlehmann>
>rounds

[11:21:01.0000] <erlehmann>
that sounds computationally expensive

[11:21:02.0000] <AryehGregor>
I don't know why people want such extragavant period sizes for RNDs.

[11:22:00.0000] <AryehGregor>
I meant "you can't run AES enough times".  AES has a fixed number of rounds depending on key size.

[11:22:01.0000] <AryehGregor>
Maybe it's just that AES is slower than Mersenne twister.

[11:22:02.0000] <erlehmann>
Jack up the AES rounds up to eleven!

[11:25:00.0000] <Philip`>
There is e.g. http://infoscience.epfl.ch/record/99493 which says "A preliminary study suggested that [Rijndael] required too many rounds for randomness, because the size of the elementary round functions is too small."

[11:26:00.0000] <Philip`>
I don't understand what it's talking about at all, but it seems the general impression is that being a decent cipher doesn't necessarily imply being a decent PRNG

[11:27:00.0000] <Philip`>
(or at least not provably decent)

[11:28:00.0000] <AryehGregor>
Ms2ger, what's "Assert: refNode is not null" supposed to mean?

[11:29:00.0000] <Ms2ger>
That refNode shouldn't be null at that point in the algorithm

[11:30:00.0000] <Ms2ger>
The "Node!" in the IDL means that a TypeError should be thrown when you pass null in

[11:30:01.0000] <Ms2ger>
(Not yet in any spec, though)

[11:31:00.0000] <AryehGregor>
Oh, exclamation point.

[11:31:01.0000] <AryehGregor>
I didn't notice that.

[11:32:00.0000] <AryehGregor>
Current WebIDL says you can always pass null for objects, right?

[11:33:00.0000] <Ms2ger>
Yeah

[11:33:01.0000] <Ms2ger>
That might change

[11:33:02.0000] <gsnedders>
But null is an object! typeof says so!

[11:34:00.0000] <AryehGregor>
It's not a Node, though.

[11:35:00.0000] <AryehGregor>
So why should it be passable as a Node argument?

[11:35:01.0000] <AryehGregor>
That's why we have "Node?", right?

[11:35:02.0000] <Ms2ger>
We don't

[11:35:03.0000] <Ms2ger>
"Node?" isn't allowed in current WebIDL

[11:36:00.0000] <AryehGregor>
Well, only because "Node" already means what you'd expect "Node?" to mean.

[11:36:01.0000] <Ms2ger>
(The idea is that "Node" becomes "Node?" and "Node!" or "[NoNull] Node" becomes "Node")

[11:37:00.0000] <gsnedders>
AryehGregor: That wasn't a serious argument.

[11:40:00.0000] <AryehGregor>
Ah.

[11:51:00.0000] <Hixie>
anyone know of an equivalent to ImageMagick for audio?

[11:53:00.0000] <benschwarz>
Hixie: I want to discuss some features for appCache with you… are you around in about an hour and a half?

[12:05:00.0000] <Hixie>
benschwarz: can't predict when i'll be around

[12:05:01.0000] <Hixie>
benschwarz: sorry

[12:05:02.0000] <benschwarz>
Hixie: sure, I'll pull something together if you're not around

[12:08:00.0000] <Hixie>
benschwarz: my irc client is always online, so feel free to ask questions and i'll reply when i can (assuming you leave your irc client on too!)

[12:09:00.0000] <Hixie>
i have to merge some sound files together in an automated fashion on my linux server

[12:09:01.0000] <Hixie>
so far the only way i've found to do it is to manually mix the wave files

[12:09:02.0000] <benschwarz>
Hixie: wav files? can't they just be cat / appended to each other?

[12:09:03.0000] <Hixie>
i need to mix them

[12:10:00.0000] <Hixie>
not concatenate them

[12:10:01.0000] <Hixie>
with differences in volume and in stereo position

[12:11:00.0000] <benschwarz>
Hixie: you're not on a mac, are you?

[12:11:01.0000] <Hixie>
the server is debian

[12:11:02.0000] <Hixie>
/me is on a mac right now, but this is for a web service, not a one-off

[12:11:03.0000] <benschwarz>
ok. I can't help :)

[12:13:00.0000] <Hixie>
and my input files are all different bitrates, #s of channels, etc

[12:13:01.0000] <Hixie>
this is going to suck

[12:13:02.0000] <AryehGregor>
Blech, writing tests requires you to actually decide what you want to test.  How tiresome.

[12:13:03.0000] <Hixie>
AryehGregor: i often write what i call "demos" which have no pass conditions

[12:13:04.0000] <Hixie>
AryehGregor: and then, if i remember, convert  them to real tests afterwards

[12:14:00.0000] <AryehGregor>
My problem is, if I have an algorithm defining something like range.setStart(), how do I decide what Ranges to test on?

[12:14:01.0000] <AryehGregor>
Since I could construct arbitrarily many.

[12:14:02.0000] <AryehGregor>
I guess I could just reuse the ones I made up for my extend() tests.

[12:15:00.0000] <Hixie>
could construct arbitrarily many :-)

[12:15:01.0000] <Hixie>
oops, copy-paste error

[12:15:02.0000] <Hixie>
i meant: construct arbitrarily many :-)

[12:15:03.0000] <AryehGregor>
No, because that takes forever to run.

[12:16:00.0000] <AryehGregor>
Like "longer than I'm willing to wait".

[12:16:01.0000] <Hixie>
construct arbitrarily many / 10 ?

[12:16:02.0000] <Hixie>
they can't be random, they have to be reproducible

[12:17:00.0000] <Hixie>
so just take a complicated DOM and then make a good cross-section of the possible ranges given that DOM

[12:17:01.0000] <Hixie>
(then repeat with a different DOM a few times so that you don't miss bugs that are hidden by that specific DOM)

[12:17:02.0000] <AryehGregor>
If I naively constructed test-cases for setStart() based on the nodes and offsets I have now, it would be something like (23*9)^3, which is too many.

[12:17:03.0000] <AryehGregor>
Yeah, I'm basically doing that (although the DOM isn't so complicated).  I'm just annoyed that it requires thought, I guess.  :)

[12:17:04.0000] <Hixie>
writing test cases requires a lot of thought

[12:18:00.0000] <Hixie>
(writing test cases without thought rarely finds bugs)

[12:18:01.0000] <Hixie>
(writing test cases _with_ thought should result in at lesat one bug per test :-) )

[12:18:02.0000] <Hixie>
though in your case you're not really looking for bugs per se

[12:19:00.0000] <Hixie>
more just edge cases to reverse engineer

[12:19:01.0000] <AryehGregor>
Writing test cases without thought finds lots of bugs.  :)

[12:19:02.0000] <AryehGregor>
I'm writing general DOM Range tests right now.

[12:19:03.0000] <AryehGregor>
So it's not reverse-engineering at the moment.  Reverse-engineering is different.

[12:19:04.0000] <Hixie>
ah ok

[12:19:05.0000] <Hixie>
do dom range implementations really suck that badly?

[12:20:00.0000] <Hixie>
that's sad

[12:20:01.0000] <AryehGregor>
Yes, they're totally incompatible.

[12:20:02.0000] <AryehGregor>
Especially Opera's.

[12:21:00.0000] <Hixie>
good times

[12:21:01.0000] <Hixie>
not really that surprising given how the dom range spec used to suck

[12:21:02.0000] <Ms2ger>
And I haven't specced what happens on DOM mutations yet

[12:22:00.0000] <AryehGregor>
Heh, didn't even notice that.

[12:51:00.0000] <annevk>
I hope mutations can be made to go asynchronous...

[12:56:00.0000] <annevk>
Ms2ger, I'm still thinking about putting events in DOM Core by the way. Just been a bit too busy.

[12:56:01.0000] <annevk>
Ms2ger, now you joined WebApps I guess your name can be put as editor of DOM Core again. :-)

[12:57:00.0000] <annevk>
Ms2ger, and you can update the W3C copy too! Teehee

[12:57:01.0000] <Ms2ger>
Yay :)

[12:58:00.0000] <annevk>
hmm, my "CPP" got quite some response. Does that mean I have to do something?

[12:59:00.0000] <AryehGregor>
You don't have to, but if you think it won't convince the chairs, it might make sense to change it.

[12:59:01.0000] <Hixie>
annevk: for the CCPs, are you still editing them?

[13:00:00.0000] <annevk>
I can change them, of course

[13:00:01.0000] <annevk>
but I just wrote them as one-off emails to start with

[13:00:02.0000] <annevk>
feel free to turn them into wiki pages though

[13:12:00.0000] <AryehGregor>
. . . what does it mean in WebKit Developer Tools when a CPU profile says 70% of time spent in "(program)"?

[13:13:00.0000] <gsnedders>
AryehGregor: program code, stuff in the global code

[13:13:01.0000] <gsnedders>
*scope

[13:13:02.0000] <AryehGregor>
Hmm.

[13:13:03.0000] <AryehGregor>
That seems unlikely, somehow.

[13:14:00.0000] <AryehGregor>
Hmm.

[13:20:00.0000] <AryehGregor>
Someone remind me, what's the point of the convention of wrapping your whole JS body in function () {...}();?  Just to not litter the global namespace with anything?

[13:22:00.0000] <gsnedders>
AryehGregor: Yeah

[13:22:01.0000] <AryehGregor>
kthx.

[13:23:00.0000] <bga_>
AryehGregor `;(function(global){  })(this)`

[13:24:00.0000] <zcorpan>
function(window,undefined){}(window); is a pattern i saw somewhere

[13:25:00.0000] <GarethAdams|Home>
zcorpan: jquery does that

[13:25:01.0000] <zcorpan>
right

[13:27:00.0000] <zcorpan>
seems a bit pointless to me

[13:33:00.0000] <zcorpan>
/me does not like it when he gets emails with both a text/plain body and an HTML body but the text/plain body is entirely useless

[13:34:00.0000] <Ms2ger>
zcorpan++

[13:42:00.0000] <AryehGregor>
Looks like IE9 freaks out on long-running scripts.

[13:51:00.0000] <Hixie>
i'm having great trouble understanding the CP for 140

[13:51:01.0000] <Hixie>
what problem does it solve?

[13:51:02.0000] <Hixie>
it seems so completely misguided that i don't understand how to argue against it

[13:52:00.0000] <Ms2ger>
I'm not sure solving a problem is a requirement or CPs


2011-02-07
[18:09:00.0000] <sebasmagri>
Hi guys, I've been looking for a non-java alternative to w3c css and markup validators which supports css3 and html5... Do someone knows any?

[18:11:00.0000] <sebasmagri>
I want to have it running in my development machine... I'm looking at the validate.cgi in html5lib sources, could it be what I'm looking for?

[18:12:00.0000] <sebasmagri>
the cgi's docstring answers part of my question...

[01:05:00.0000] <hsivonen>
cool. Opera Mobile support @font-face even on S60

[01:08:00.0000] <annevk>
was there some blog post last week that should be mentioned on WHATWG Weekly?

[01:08:01.0000] <annevk>
I have a section "The Wider Web" for that this time around

[01:12:00.0000] <Hixie>
annevk: added some unfinished stuff to 140, also asked smylers if he could contribute his recent e-mail to 140

[01:13:00.0000] <Smylers>
Hixie: Sure. Will do that now.

[01:13:01.0000] <Hixie>
oh, speak of the devil :-)

[01:13:02.0000] <Hixie>
didn't realise you were here, or would have asked you here instead :-)

[01:13:03.0000] <Hixie>
thanks dude

[01:14:00.0000] <Smylers>
I wasn't — first time I've logged in in months and the first message I saw mentioned me!

[01:14:01.0000] <Hixie>
hah

[01:14:02.0000] <annevk>
I can send out rev 1 of the proposals later today

[01:14:03.0000] <annevk>
unless someone wants to wait a little longer

[01:14:04.0000] <Hixie>
there's no deadline yet is there?

[01:15:00.0000] <hsivonen>
annevk: I'm not sure I understood your validation versioning proposal

[01:16:00.0000] <hsivonen>
annevk: surely it is appropriate to pose the question "is this document valid HTML + SVG + MathML" specifying snapshots for each

[01:17:00.0000] <annevk>
you mean like asking is this "valid CSS 2.1"?

[01:17:01.0000] <hsivonen>
whether anyone provides validator software for the exact snapshot dates you want is another question

[01:17:02.0000] <annevk>
authors have been annoyed with that forever

[01:17:03.0000] <annevk>
they want to use teh Selectors

[01:17:04.0000] <Hixie>
what's the use of checking for validity for HTML and NOT SVG and MathML?

[01:18:00.0000] <hsivonen>
Hixie: maybe you want to make sure your fractions are dumb text fractions that interop with UAs that don't support MathML

[01:18:01.0000] <hsivonen>
Hixie: i.e. want to make sure there's no accidental MathML there

[01:19:00.0000] <Hixie>
well then what you need is not "is this valid HTML without MathML" , but "does this contain any features unsupported by browsers X, Y, and Z"

[01:19:01.0000] <hsivonen>
Hixie: sure

[01:19:02.0000] <Hixie>
which isn't conformance (e.g. it shouldn't call out <marquee> really), and has nothing to do with specific versions of specs nor what is suggested in the 140 CP

[01:25:00.0000] <annevk>
Hixie, your issues/data.html is wrong it says "Estimated date for last e-mail based on the data above: 2009-08-17"

[01:25:01.0000] <Hixie>
that's because the line is increasing currently :-(

[01:25:02.0000] <Hixie>
it's not wrong :-(

[01:25:03.0000] <annevk>
when looking at all the data it is "Estimated date for last e-mail based on the data above: 2013-01-07"

[01:26:00.0000] <Hixie>
it's based on what you draw

[01:26:01.0000] <annevk>
mkay

[01:28:00.0000] <zcorpan>
Hixie: http://www.whatwg.org/specs/web-apps/current-work/complete/ has two doctypes

[01:28:01.0000] <Hixie>
good times

[01:28:02.0000] <Smylers>
annevk: Re blog posts, Mike Cardwell's garnered a lot of attention last week (though was actually published a little earlier): https://grepular.com/Abusing_HTTP_Status_Codes_to_Expose_Private_Information

[01:28:03.0000] <Hixie>
i wonder why

[01:28:04.0000] <hsivonen>
anyway, I tend to agree with Noah that it's definitionally odd to define conformance without being clear about what's included in the definition by reference

[01:29:00.0000] <hsivonen>
I haven't yet examined what further conclusions or changes Noah has proposed

[01:30:00.0000] <Hixie>
hsivonen: all that matters is whether the document conforms to the specs you care about

[01:31:00.0000] <Hixie>
hsivonen: why would we need any other definition?

[01:31:01.0000] <Hixie>
zcorpan: looks like it's Philip`'s fault. Or at least, I don't see anything on my end that could do that.

[01:31:02.0000] <zcorpan>
Philip`: ^

[01:31:03.0000] <hsivonen>
Hixie: and if you want to establish a common understanding with someone else so that the two of you know you are talking about the same thing (so that you can collaborate)?

[01:32:00.0000] <Hixie>
hsivonen: write a spec

[01:32:01.0000] <Hixie>
it can be as simple as the "Specs" wiki page

[01:33:00.0000] <jgraham>
hsivonen: I doubt many of these "common understanding" scenarios map neatly onto spec divisions anyway

[01:33:01.0000] <Hixie>
i doubt any do actually

[01:33:02.0000] <hsivonen>
jgraham: that's very possible

[01:33:03.0000] <Hixie>
except maybe the theoretical future "what we should implement" one

[01:34:00.0000] <hsivonen>
I wonder if I should point out that validators are software just like browsers and validators are incomplete, buggy and changing, too

[01:34:01.0000] <Hixie>
yes

[01:34:02.0000] <jgraham>
hsivonen: Only if you can deal with the responsibility of shattering a thousand illusions

[01:34:03.0000] <Hixie>
maybe point out that the HTML4 conformance checkers never complied to the spec :-)

[01:34:04.0000] <jgraham>
;)

[01:36:00.0000] <Hixie>
jgraham: added that point to http://wiki.whatwg.org/wiki/Objections_against_CPs_for_ISSUE-140

[01:37:00.0000] <Hixie>
ok i should sleep

[01:37:01.0000] <Hixie>
nn

[01:37:02.0000] <jgraham>
gn

[01:43:00.0000] <annevk>
I have nothing about Change Proposals last week

[01:44:00.0000] <annevk>
did not seem interesting enough and I already have quite a long post

[01:47:00.0000] <zcorpan>
hmm. not sure what to think of IndexedDB using window.onerror

[01:50:00.0000] <annevk>
hmm

[01:50:01.0000] <annevk>
that shorturl was meant to read weekly-extensibility

[01:50:02.0000] <annevk>
WordPress keeps munging it or something

[01:50:03.0000] <annevk>
anyway

[01:50:04.0000] <annevk>
http://blog.whatwg.org/whatwg-extensibility

[01:52:00.0000] <zcorpan>
annevk: workers already had navigator.onLine

[01:52:01.0000] <annevk>
yeah, but not the events

[01:53:00.0000] <zcorpan>
right

[01:53:01.0000] <annevk>
I guess I could change it

[01:53:02.0000] <annevk>
I noticed that after I wrote the sentence and decided to not care

[01:53:03.0000] <annevk>
but I guess people might

[01:54:00.0000] <zcorpan>
/me cared just enough to point it out :)

[01:55:00.0000] <annevk>
fixed

[02:03:00.0000] <jgraham>
annevk: Your tense is inconsistent (at least) in the "on the List" section

[02:03:01.0000] <jgraham>
eg. "put forward a proposal" vs "finds an inconsistency"

[02:03:02.0000] <annevk>
hmm yeah

[02:03:03.0000] <jgraham>
Should all be past tense, I think

[02:04:00.0000] <annevk>
my English has not progressed beyond high school it seems, as I made the same mistakes back then!

[02:04:01.0000] <jgraham>
I expect my English has got worse since then

[02:06:00.0000] <annevk>
fixed I think

[02:06:01.0000] <annevk>
I did leave "figuring out" as I suspect that is still ongoing

[02:11:00.0000] <zcorpan>
hey, English is ever-changing! Maybe next week it'll be valid to mix tenses

[02:55:00.0000] <Philip`>
Hixie: Where is the multipage splitter for that version being run? (and what version of lxml does that machine have?)

[03:02:00.0000] <matjas>
annevk, thanks for writing about @csscommits :)

[03:39:00.0000] <annevk>
Philip`, I am running it

[03:40:00.0000] <annevk>
Philip`, could it be 2.7.8?

[03:40:01.0000] <annevk>
oh, 2.2.8

[03:42:00.0000] <hsivonen>
has anyone had time to check if Chrome shipped the script execution code that broke LABjs into the stable channel?

[03:43:00.0000] <hsivonen>
/me wonders how Debian expects to be able to maintain Chromium 6.0.x over the Squeeze life time

[03:44:00.0000] <Philip`>
annevk: Oh, hmm, it looks like I made a change to the script when I updated lxml (probably to 2.2.8)

[03:44:01.0000] <Philip`>
to exclude the duplicate doctype

[03:45:00.0000] <Philip`>
but forgot to commit it

[03:45:01.0000] <annevk>
okay

[03:45:02.0000] <annevk>
I think my version of your script has local modifications too...

[03:47:00.0000] <Philip`>
http://code.google.com/p/html5/source/detail?r=182

[03:49:00.0000] <annevk>
so lxml emits the HTML DOCTYPE?

[03:49:01.0000] <annevk>
interesting

[03:49:02.0000] <Philip`>
It puts the doctype in the DOM so the html5lib serialiser emits it, or something, I think

[03:50:00.0000] <Philip`>
but only with recent enough versions of lxml

[03:50:01.0000] <Philip`>
(Maybe they changed it to start recognising <!doctype html>)

[03:50:02.0000] <annevk>
I guess I should have covered http://lists.w3.org/Archives/Public/public-html/2011Feb/0113.html -- added for next week

[03:51:00.0000] <Philip`>
(This patch is kind of a hack but it seems to work)

[03:55:00.0000] <hsivonen>
heycam: the reason why I didn't find the single-page version of SVG 1.1 2nd ed. is that it isn't linked from http://www.w3.org/TR/SVG/

[03:55:01.0000] <hsivonen>
I fail for reading /TR/

[03:56:00.0000] <hsivonen>
must. never. read. /TR/

[03:57:00.0000] <annevk>
Philip`, only if you use the html5lib serializer

[03:58:00.0000] <annevk>
Philip`, but I found out how I could fix this

[03:58:01.0000] <jgraham>
/me is considering writing a userjs that redirects you away from /tr/ if you accidentially end up there

[03:58:02.0000] <jgraham>
Or maybe just replaces the page with a big red FAIL message

[03:58:03.0000] <annevk>
duplicate DOCTYPE removed

[03:58:04.0000] <annevk>
yay

[03:59:00.0000] <annevk>
Smylers, hey, thanks

[03:59:01.0000] <annevk>
Smylers, I believe you are not supposed to refer directly to the other change proposal though

[03:59:02.0000] <annevk>
Smylers, they are meant to be standalone

[04:00:00.0000] <Smylers>
Huh?

[04:00:01.0000] <annevk>
/me checks

[04:00:02.0000] <Smylers>
A ‘counter’ change proposal can't explain what it's countering?

[04:01:00.0000] <Smylers>
Anyway, I'm still hacking on that page — I'll let you know here when I've finished playing with it.

[04:01:01.0000] <Philip`>
annevk: Oh, yeah, it won't help if you use the lxml serialiser, though I vaguely remember the lxml serialiser being buggy anyway

[04:01:02.0000] <annevk>
I guess it's okay

[04:02:00.0000] <annevk>
Philip`, well then complete/ is buggy

[04:02:01.0000] <annevk>
I have not installed html5lib

[04:02:02.0000] <Philip`>
/me doesn't remember what the bugs were, or if he's just imagining it

[04:02:03.0000] <Philip`>
Easiest way to test is to run it both ways and diff the output, I guess

[04:03:00.0000] <annevk>
I'll take the lazy approach and fix bugs as they are reported

[04:08:00.0000] <Philip`>
Hmm, I don't see any obvious differences except for character escaping style

[04:08:01.0000] <Philip`>
and attribute order

[04:09:00.0000] <Philip`>
and escaping "{" and "}" in URL attributes

[04:10:00.0000] <Philip`>
(and defaulting to emitting optional tags)

[04:46:00.0000] <Smylers>
annevk (and anybody else): http://wiki.whatwg.org/wiki/Change_Proposal_for_ISSUE-140 now includes everything I wish to say on ISSUE-140

[04:47:00.0000] <Smylers>
Please edit, revert, and make less verbose at will.

[04:47:01.0000] <Smylers>
annevk: Thank you for starting this. I was planning on writing it anyway, so your start was a good help.

[04:47:02.0000] <Smylers>
hixie: And thank you for prodding me into actually doing it.

[04:48:00.0000] <Smylers>
I've left the summary alone, but am not sure it's now an accurate summary of the rest of the page.

[04:48:01.0000] <annevk>
feel free to change it

[04:53:00.0000] <hsivonen>
Smylers: what's the "Putting a Version Indicator in ‘Conforming Documents’ " section about?

[04:54:00.0000] <hsivonen>
I don't see Noah suggesting version indicators

[04:54:01.0000] <hsivonen>
oh. a version number in speech. not in the file

[04:54:02.0000] <Smylers>
Yeah.

[04:55:00.0000] <Smylers>
I don't like that heading either.

[04:55:01.0000] <Smylers>
But since Noah made a few separate changes, I felt the counter-proposal needed to address each of them separately.

[04:57:00.0000] <Smylers>
I meant literally putting a number in the middle of the term “conforming documents” as currently described by the spec.

[04:58:00.0000] <hsivonen>
fwiw, Noah's proposed changes match the current practice in the UI of Validator.nu

[04:59:00.0000] <Smylers>
Well for something other than the HTML spec to use the phrase “conforming HTML5 document” isn't tautologous.

[05:00:00.0000] <jgraham>
hsivonen: That may be taken as evidence that this is angels-on-the-head-of-a-pin stuff

[05:01:00.0000] <hsivonen>
jgraham: maybe, but the pushback surprises me

[05:03:00.0000] <Smylers>
I initially marked the proposal as one I wished to counter because of its attempt to replace the description of an applicable specification with something fictional.

[05:03:01.0000] <Smylers>
I'm guessing that isn't the part of Noah's proposal that Validator.nu is in accordance with?

[05:05:00.0000] <Smylers>
While I also don't agree with the ‘conforming document’ changes, at least they wouldn't be attempting to assert something that simply can't be.

[05:06:00.0000] <Smylers>
So I considered writing a separate counter change proposal, but I didn't want to think about what W3C process would do if there were two different zero-edit proposals to consider ...

[05:06:01.0000] <hsivonen>
Smylers: back when HTML5 did not have a normative reference to ARIA, Validator.nu started having a HTML5+ARIA validation target

[05:07:00.0000] <Smylers>
Indeed. And I don't think anything in the current draft spec contradicts that being a sane thing to do.

[05:07:01.0000] <hsivonen>
I don't see how that was different from AutomotiveExtension except for not being a fictional example

[05:08:00.0000] <hsivonen>
Smylers: there's nothing contradicting it. It just isn't clearly said that that's how "applicable specs" work

[05:08:01.0000] <Smylers>
OK.

[05:09:00.0000] <Smylers>
I think it is clear, but that's clearly a matter of judgement.

[05:09:01.0000] <karlcow>
http://www.gabrielweinberg.com/blog/2011/02/usability-issues-with-adding-search-engines-to-web-browsers.html

[05:10:00.0000] <Smylers>
And the parts I find clearest are the ones Noah's proposal cuts!

[05:20:00.0000] <webr3>
''HTML5 redefines HTML, such that when it is published it obsoletes previous definitions: it will define a conforming document written in HTML, and indeed will be the only current definition of an HTML document.''

[05:21:00.0000] <webr3>
is "HTML5" fully backwards compatible, or will the previously "conforming" documents no longer be "conforming" ?

[05:23:00.0000] <gsnedders>
Previous conforming documents will cease to be conforming. Previously conforming documents will be processed the same way as by existing UAs.

[05:23:01.0000] <hsivonen>
webr3: backwards-compat in the HTML context means that stuff "works" not that it validates

[05:24:00.0000] <Smylers>
Won't most previously conforming documents continue to conform?

[05:24:01.0000] <hsivonen>
Smylers: no. assuming that "most" previously conforming documents are Transitional

[05:25:00.0000] <webr3>
but if there's no such thing as "conforming", how can they be non conforming?

[05:25:01.0000] <karlcow>
webr3: validation is for writing/authoring documents, html parsing for reading/interpreting.

[05:26:00.0000] <karlcow>
the rules for writing are not the same than the rules for reading

[05:26:01.0000] <hsivonen>
it's not really clear to me why people care about old documents continuing to validate if they aren't updating the documents in any way

[05:26:02.0000] <karlcow>
http://www.w3.org/QA/2008/09/fixing-html-with-html5

[05:26:03.0000] <hsivonen>
I understand that people don't want to change a lot of stuff if they update an old doc a bit and then validate

[05:26:04.0000] <webr3>
karlcow, cheers and yup, i can see that in 1.2 of html5-diff

[05:41:00.0000] <webr3>
so, given all the specs that can affect things, the different versions of each (even if that's just hg revision up), it's not really possible to define what one would even be conforming to? html r.11425 + css 2.1 r.2342 + js r.185 + ...

[05:44:00.0000] <annevk>
hsivonen, HTML5+ARIA as a temporary experimental setting seems fine, but eventually I would expect that option to disappear

[05:44:01.0000] <annevk>
hsivonen, I do not think that standards need to give advice on temporary experimental validator UI

[05:46:00.0000] <karlcow>
http://jeremie.patonnier.net/post/2011/02/07/Why-are-SVG-Fonts-so-different

[05:49:00.0000] <hsivonen>
karlcow: so the use case for SVG fonts is animated fonts???

[05:49:01.0000] <jcranmer>
not quite my thought

[05:50:00.0000] <jcranmer>
I basically read it as "the use cases for SVG fonts require what the implementors don't support"

[05:50:01.0000] <karlcow>
hsivonen: not what the article says.

[05:50:02.0000] <hsivonen>
jcranmer: if the use cases are what aren't now supported, seems all the more reason not to get on the slippery slope!

[05:51:00.0000] <hsivonen>
annevk: I expect HTML5+SVG *1.1* (rather than 1.2) to stick around for quite a while

[05:53:00.0000] <karlcow>
the article says: SVG Fonts very good for custom fonts design such as logos. Possible to do amazing things with animation but not necessary wise (aka design-wise), possibility to modify the font on the fly (styling, dom) through scripting.

[05:54:00.0000] <annevk>
hsivonen, SVG 1.2 is also not widely implemented by browsers so that seems natural

[05:55:00.0000] <hsivonen>
annevk: natural, yes, but my point is that one needs to say "1.1" to avoid ambiguity

[05:55:01.0000] <annevk>
hsivonen, I would expect the validator to sit somewhere between the features authors want and the features users agents supply

[05:56:00.0000] <annevk>
hsivonen, in the UI? I doubt most authors would care

[05:56:01.0000] <zcorpan>
karlcow: do browsers support changing the font on the fly?

[05:57:00.0000] <hsivonen>
annevk: yes, in the UI

[05:59:00.0000] <annevk>
I hope it evolves into something like "is my markup conforming?" "well yes, it is"

[05:59:01.0000] <annevk>
with a "more details" link for when I really cared

[06:01:00.0000] <hsivonen>
annevk: interesting. that's totally contrary to the rhetoric I used when arguing against syntax-level versioning

[06:05:00.0000] <annevk>
I like to view it how I use CSS. With CSS there's a bunch of features among disparate specs that I like to use. I do not care about how/where/why. I just want to know whether I use CSS correctly given the large intersect of specifications.

[06:05:01.0000] <hsivonen>
ITYM s/intersect/union/

[06:05:02.0000] <hsivonen>
right?

[06:05:03.0000] <annevk>
sorry, yeah

[06:45:00.0000] <annevk>
fyi: http://annevankesteren.nl/2011/02/leave-of-absence

[06:49:00.0000] <wilhelm>
What's the planned route (if any)? (c:

[06:52:00.0000] <jgraham>
wilhelm: You planning to send runners after annevk to make him work?

[06:53:00.0000] <wilhelm>
No, I very much approve of a long leave of absence for travel. I'm just curious. I haven't explored that continent yet. (c:

[06:53:01.0000] <Peter`>
antti_s, so who's going to take over the last week posts? :-)

[06:53:02.0000] <Peter`>
Uh. annevk ^

[06:54:00.0000] <jgraham>
Peter`: Are you volunteering? ;)

[06:54:01.0000] <Peter`>
I already write last week posts :)

[06:55:00.0000] <jgraham>
Peter`: Right, so you are an expert :)

[06:55:01.0000] <Peter`>
I won't have time for it, sorry :(

[06:56:00.0000] <jgraham>
:) I wasn't really trying to pressure you into it

[06:57:00.0000] <annevk>
wilhelm, Bogotá - Buenos Aires

[06:57:01.0000] <annevk>
wilhelm, and some places inbetween :)

[06:57:02.0000] <annevk>
but really that is all that is certain

[06:57:03.0000] <annevk>
Peter`, nobody volunteered so far

[06:58:00.0000] <annevk>
Peter`, so it might be that just as when markp stopped doing them there will be another gap

[06:58:01.0000] <wilhelm>
annevk: Fun. (c:

[06:59:00.0000] <Peter`>
Your blog post hints that you won't be active between June 16th and the end of June either, that would certainly a nice period of time to fill the gap!

[07:00:00.0000] <Peter`>
A large part of the people who read it will receive public-html/whatwg mail anyway

[07:00:01.0000] <annevk>
I expect to be catching up then, so yeah I suppose I might write a longish entry

[07:01:00.0000] <annevk>
a first "WHATWG Quarterly Results"

[07:01:01.0000] <annevk>
well, maybe not results :p

[07:02:00.0000] <Peter`>
hah

[07:03:00.0000] <karlcow>
https://wiki.mozilla.org/File:Firefox2011RoadmapImage1.png

[07:03:01.0000] <Philip`>
The spec bug reporting form seems to be getting much more abused recently :-(

[07:04:00.0000] <Peter`>
karlcow, "Ship Firefox 4, 5, 6 and 7 in the 2011 calendar year"

[07:05:00.0000] <karlcow>
yep from https://wiki.mozilla.org/Firefox/Roadmap

[07:05:01.0000] <jgraham>
I was about to say, the containing document is way more interesting

[07:05:02.0000] <Lachy>
Philip`, the spec bug reporting form is a constant annoyance that has several problems that need to be fixed.

[07:07:00.0000] <jgraham>
If it rejected things that look like markup it would cut down the spam greatly

[07:07:01.0000] <Peter`>
http://blogs.msdn.com/b/interoperability/archive/2011/02/04/the-indexeddb-prototype-gets-an-update.aspx

[07:07:02.0000] <jgraham>
Of course spammers might just work around that

[07:08:00.0000] <Ms2ger>
Then I wouldn't be able to paste the graduation example into it!

[07:08:01.0000] <Philip`>
jgraham: Hmm, it seems kind of a bad idea to ban HTML markup from HTML spec bug reports

[07:09:00.0000] <jgraham>
Philip`: s/look like/starts with text that looks like/ maybe

[07:10:00.0000] <gsnedders>
Peter`: What's the tl;dr?

[07:11:00.0000] <Lachy>
jgraham, the form should simply not submit bugs directly to bugzilla anonymously, but rather open up bugzilla with the fields filled out ready to be submitted by logged in users.

[07:11:01.0000] <Philip`>
gsnedders: The IndexedDB prototype got an update

[07:11:02.0000] <Lachy>
gsnedders, tl;dr is "too long; didn't read"

[07:11:03.0000] <gsnedders>
Philip`: Oh, okay. :P

[07:11:04.0000] <gsnedders>
Lachy: I know.

[07:11:05.0000] <Lachy>
oh, then I misunderstood what you were asking

[07:12:00.0000] <jgraham>
Lachy: Is that even possible?

[07:12:01.0000] <Peter`>
gsnedders, just updated to a newer version of the specification

[07:12:02.0000] <Peter`>
e.g. updates that other vendors who are implementing IndexedDB barely mention

[07:12:03.0000] <Peter`>
(as far as I can see, WebKit already adopted these changes)

[07:13:00.0000] <Lachy>
jgraham, I was looking at the wrong link and thought gsnedders was asking about the tl;dr in the Firefox roadmap.

[07:13:01.0000] <jgraham>
Lachy: "the form should simply not submit bugs directly to bugzilla anonymously"

[07:14:00.0000] <jgraham>
etc.

[07:14:01.0000] <Philip`>
/me finds it mildly amusing that the "tl;dr" acronym contains a semicolon

[07:15:00.0000] <Lachy>
oh, right. Yes, that should be possible. bugzilla has ways to provide values for the fields via the query string

[07:15:01.0000] <Philip`>
given the contrast between the gratuitously obscure grammar and the intentional ignorance/laziness implied by the statement

[07:16:00.0000] <Lachy>
so when you write a summary in the box and click the button, it should open up bugzilla within an iframe with various fields pre-filled based on what you enter, and then within that you can amend it and submit when ready

[07:17:00.0000] <Philip`>
Lachy: The avoidance of needing to register and log in, and the avoidance of the Bugzilla UI, seem like most of the value the bug reporting form provides, and it'd be pretty pointless if you got rid of those

[07:18:00.0000] <Ms2ger>
^

[07:18:01.0000] <Philip`>
Filling in a few drop-down boxes is a fairly trivial part of the process, if you're having to do it through Bugzilla anyway

[07:18:02.0000] <Lachy>
Philip`, the form provides convenience and simply staying logged in should not be a hassle

[07:19:00.0000] <Lachy>
the other alternative would be to continue allowing anonymous posts, but require that the anonymous posts go through a moderation queue first

[07:20:00.0000] <karlcow>
tl;dr is "too long; didn't read"  is the recent new black in acronym world. geek fashionistas and coders tabloids

[07:31:00.0000] <jgraham>
And purple sprouting broccoli is the new asparagus

[07:31:01.0000] <jgraham>
(except it isn't, of course)

[07:33:00.0000] <annevk>
Opera is not part of the Web Platform per Mozilla? teehee

[07:35:00.0000] <Ms2ger>
Opera? What's that?

[07:35:01.0000] <jgraham>
It's the thing where fat ladies sing

[07:36:00.0000] <Ms2ger>
Oh

[07:36:01.0000] <Ms2ger>
Not sure why that'd be part of the Web Platform

[07:36:02.0000] <karlcow>
annevk: Opera is the green box labeled the Web Platform.

[07:36:03.0000] <gsnedders>
jgraham: So when Opera ships something, it's outdated and over?

[07:37:00.0000] <jgraham>
karlcow: So everyone else is built atop Opera?

[07:37:01.0000] <karlcow>
jgraham: exactly ;)

[07:37:02.0000] <jgraham>
gsnedders: No, it's just that Opera is a precondition for armageddon

[07:40:00.0000] <karlcow>
the browser icons also give a very limited view of the Web platform

[07:59:00.0000] <jgraham>
Anyone know of any tests for the mimesniff draft?

[08:00:00.0000] <Ms2ger>
Submission welcome ;)

[08:01:00.0000] <jgraham>
Well yes, but maybe someone did it already :)

[08:01:01.0000] <annevk>
I suspect abarth has some

[08:01:02.0000] <annevk>
and Hixie wrote tests

[08:08:00.0000] <jgraham>
/me wishes said tests were trivial to find

[08:08:01.0000] <jgraham>
unrelated observation that was already discussed some months ago: ln.hixie.ch is more ugly now

[08:16:00.0000] <annevk>
http://hixie.ch/tests/adhoc/http/content-type/sniffing/

[08:16:01.0000] <annevk>
https://github.com/abarth/ietf-websec does not look like adam has tests though he must have written some when implementing it in WebKit

[08:16:02.0000] <annevk>
Gecko must have tests too

[08:18:00.0000] <annevk>
I deleted over 700 emails today

[08:18:01.0000] <annevk>
progress

[08:19:00.0000] <jgraham>
annevk: Thanks

[08:20:00.0000] <jgraham>
Hmm, Hixie's tests don't cover what I want (specifically feed sniffing)

[08:20:01.0000] <jgraham>
I feel like I am going to end up reinventing the wheel here

[08:21:00.0000] <Ms2ger>
Make sure you reinvent the wheel somewhere it can be found, then ;)

[08:25:00.0000] <annevk>
can't find tests in Gecko

[08:25:01.0000] <annevk>
just patches without tests

[08:25:02.0000] <annevk>
climbing time

[08:52:00.0000] <TabAtkins>
I volunteer to moderate the anonymous queue.  I agree that the spam is getting worse, at several per day.  I think the spam volume is roughly on par with the legitimate volume now.

[08:57:00.0000] <miketaylr>
I can help moderate as well

[08:57:01.0000] <TabAtkins>
We just need to actually make a queue, as I imagine right now it just autosubmits to Bugzilla.

[09:02:00.0000] <TabAtkins>
Wow, we got a ton of new people giving feedback in the csswg list over the weekend.

[09:02:01.0000] <TabAtkins>
I wonder if something in particular caused it?

[09:08:00.0000] <Ms2ger>
TabAtkins, weren't those old mails that got stuck in some moderation queue?

[09:08:01.0000] <TabAtkins>
Ms2ger: Were they?

[09:09:00.0000] <Ms2ger>
Some were, afaict

[11:15:00.0000] <TabAtkins>
Phew.  Two hours later, done with replies to a single thread.

[11:16:00.0000] <espadrine>
Are iframes bad? Someone just told me he was afraid of using them.

[11:16:01.0000] <Ms2ger>
No

[11:17:00.0000] <TabAtkins>
No, though I've certainly seen them misused.

[11:17:01.0000] <espadrine>
Ah, good. I can feel good about myself then.

[11:21:00.0000] <espadrine>
Is the srcdoc element of iframe implemented somewhere?

[11:21:01.0000] <TabAtkins>
I don't think it's public yet, but it implemented somewhere in Chrome.

[11:21:02.0000] <Ms2ger>
Don't think so

[11:25:00.0000] <espadrine>
How exactly is <iframe srcdoc="<p>hello"></iframe> different from <iframe src="data:text/html,<!doctype html><title></title><p>hello"></iframe> ?

[11:25:01.0000] <TabAtkins>
Simpler escaping requirements, mainly.

[11:26:00.0000] <espadrine>
ah, good. thanks!

[11:26:01.0000] <AryehGregor>
Also, we're hoping that all browsers that implement srcdoc will implement sandbox.

[11:26:02.0000] <TabAtkins>
The only character you need to escape for security in @srcdoc is " (you need to escape & as well to keep from accidentally swallowing small bits of content, but it's not important for security).

[11:26:03.0000] <AryehGregor>
So if you do <iframe sandbox srcdoc="<p>hello"></iframe>, you're hopefully guaranteed that it will be sandboxed if it appears at all.

[11:27:00.0000] <TabAtkins>
Yup.

[11:27:01.0000] <TabAtkins>
Note that escaping requirements is the big advantage over things like <sandbox></sandbox>, too.

[11:48:00.0000] <estellevw>
is the w3.org website down, or is it just me?

[11:49:00.0000] <estellevw>
back up, never mind

[12:42:00.0000] <AryehGregor>
Hixie, what sorts of tests should I write for createContextualFragment()?  It seems like any tests would necessarily test the text/html parser to some extent, but I don't actually know much of anything about the text/html parser, so those tests should probably be written about someone else (and be put somewhere else, like in the HTML5 test suite).

[12:42:01.0000] <AryehGregor>
Perhaps I could compare behavior to innerHTML, or only test simple cases where the parsing is clear?

[12:43:00.0000] <AryehGregor>
Actually, in some cases it tests the XML fragment parsing algorithm, too.

[12:49:00.0000] <AryehGregor>
/me has no idea what "Unmark all scripts in new children as 'already started'." means

[13:04:00.0000] <Ms2ger>
AryehGregor, that means that scripts will run when inserted into the doc

[13:04:01.0000] <AryehGregor>
Okay, that sounds testable.

[13:04:02.0000] <Ms2ger>
hsivonen probably has tests

[13:04:03.0000] <AryehGregor>
How can I determine a Node's namespace from JavaScript?

[13:04:04.0000] <Ms2ger>
Node.namespaceURI

[13:05:00.0000] <Ms2ger>
Actually, that's on Element in Web DOM Core

[13:05:01.0000] <AryehGregor>
Oh, I was looking at Node and that's on Element.

[13:05:02.0000] <AryehGregor>
Well, that makes my life easier.

[13:05:03.0000] <AryehGregor>
Although I think I found a bug in the spec while I was at it, so let me report that.

[13:05:04.0000] <AryehGregor>
Or maybe not.

[13:05:05.0000] <Ms2ger>
Which?

[13:05:06.0000] <AryehGregor>
Maybe it's only a WebKit bug?

[13:05:07.0000] <othermaciej>
I don't think non-Element Nodes have a namespace URI

[13:05:08.0000] <Ms2ger>
Attrs, too

[13:05:09.0000] <AryehGregor>
data:text/html,<!doctype html><script>alert(document.createElement("test").lookupNamespaceURI(null));</script>

[13:06:00.0000] <AryehGregor>
Spec says that should alert null, WebKit alerts the namespace.

[13:06:01.0000] <Ms2ger>
/me knows nothing about lookupNamespaceURI

[13:06:02.0000] <othermaciej>
what does lookupNamespaceURI do?

[13:06:03.0000] <Ms2ger>
annevk might remember

[13:06:04.0000] <AryehGregor>
But the definition of isDefaultNamespace() seems to suggest that calling lookupNamespaceURI(null) should return a string in some cases: http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-node-isdefaultnamespace

[13:06:05.0000] <heycam>
it either looks up a namespace uri based on a prefix

[13:06:06.0000] <heycam>
or the reverse

[13:06:07.0000] <heycam>
i can never remember

[13:07:00.0000] <AryehGregor>
But the definition of lookupNamespaceURI() implies that passing null should always return null, at least for an element . . .

[13:07:01.0000] <AryehGregor>
/me files a spec bug

[13:08:00.0000] <othermaciej>
is lookupNamespaceURI(null) supposed to give you the default namespace, or always null?

[13:08:01.0000] <annevk>
AryehGregor, the spec says it should return the namespace actually

[13:08:02.0000] <annevk>
AryehGregor, because if you pass null and namespace prefix of the node in question is null, the argument and namespace prefix match

[13:09:00.0000] <annevk>
AryehGregor, and you can return the namespace

[13:09:01.0000] <AryehGregor>
Oh.

[13:09:02.0000] <AryehGregor>
Confusing.

[13:09:03.0000] <annevk>
it's like the first step

[13:09:04.0000] <annevk>
"If its namespace is not null and its namespace prefix is prefix return namespace and terminate these steps."

[13:09:05.0000] <AryehGregor>
Yeah, I didn't realize namespace prefixes could be null.

[13:09:06.0000] <AryehGregor>
I assumed they'd just be the empty string or something.

[13:09:07.0000] <AryehGregor>
Anyway, I'll use namespaceURI.

[13:09:08.0000] <annevk>
"Unless explicitly given when an Element node is created, its namespace and namespace prefix are null"

[13:09:09.0000] <Dashiva>
I had the fortune to be using the tidy java implementation of org.w3c.dom today.

[13:10:00.0000] <Dashiva>
public boolean hasAttribute() { return false; }

[13:10:01.0000] <AryehGregor>
Now, is there any official way to figure out if a Document is an HTML or XML document?  Or should I just test something like whether tagName gets uppercased?

[13:10:02.0000] <AryehGregor>
. . .

[13:10:03.0000] <annevk>
no official way

[13:10:04.0000] <othermaciej>
it would be kind of convenient to have an official way but there is not

[13:11:00.0000] <Dashiva>
Apparently it's not tidy enough to throw UnsupportedOperationException(), instead you put "not implemented" in the javadoc that nobody's going to see because it's hidden by the interface doc

[13:11:01.0000] <Ms2ger>
AryehGregor, whether we're going to use the XML parser for all these things is still up in the air

[13:11:02.0000] <AryehGregor>
For all which things?

[13:12:00.0000] <Ms2ger>
createContextualFragment and friends

[13:12:01.0000] <AryehGregor>
Oh.

[13:12:02.0000] <AryehGregor>
So currently it always uses the HTML parser?

[13:12:03.0000] <AryehGregor>
Should I just not test the XML case?

[13:12:04.0000] <AryehGregor>
The spec should probably say that in a note, if so.

[13:12:05.0000] <Ms2ger>
Probably

[13:12:06.0000] <AryehGregor>
(Also, someone should update this page to point to the spec: https://developer.mozilla.org/en/DOM/range.createContextualFragment )

[13:25:00.0000] <AryehGregor>
Oh look, createContextualFragment() behaves totally differently in WebKit, Gecko, and Opera.

[13:25:01.0000] <AryehGregor>
Hurrah.

[13:25:02.0000] <annevk>
film at 11

[13:25:03.0000] <AryehGregor>
Actually, WebKit just throws NOT_SUPPORTED_ERR, so maybe it just throws unconditionally.

[13:25:04.0000] <Ms2ger>
Nah

[13:26:00.0000] <othermaciej>
WebKit has createContextualFragment()

[13:26:01.0000] <othermaciej>
I added it myself!

[13:26:02.0000] <othermaciej>
in, like, 2002

[13:26:03.0000] <annevk>
-> naptime

[13:26:04.0000] <AryehGregor>
Why does it throw NOT_SUPPORTED_ERR here, then?  http://aryeh.name/spec/dom-parsing-and-serialization/test/createContextualFragment.html

[13:27:00.0000] <AryehGregor>
Ms2ger, what's the practical difference between <html> and <body> being the context element?

[13:27:01.0000] <AryehGregor>
/me wonders why he's writing tests for this when he doesn't have any idea how the HTML parser works

[13:28:00.0000] <Hixie>
to learn how it works :-)

[13:29:00.0000] <AryehGregor>
Should I spend a few days reading the text/html parser algorithm?  It doesn't seem to have to do with anything else I'm doing right now.

[13:29:01.0000] <Ms2ger>
Then we've got four people who understand it

[13:29:02.0000] <Hixie>
sure

[13:29:03.0000] <Hixie>
the more people understand it the better

[13:29:04.0000] <Hixie>
and if you're gonna be working on stuff related to it, best to know it

[13:30:00.0000] <Ms2ger>
https://bugzilla.mozilla.org/show_bug.cgi?id=585819

[13:30:01.0000] <Ms2ger>
AryehGregor, ^

[13:30:02.0000] <AryehGregor>
I'd think it would be more useful if I stuck to DOM Range and contenteditable, since there's mounds of stuff to do there and it has nothing to do with text/html parsing.

[13:30:03.0000] <AryehGregor>
But I could read the parser algorithm if you like.

[13:30:04.0000] <AryehGregor>
Ms2ger, ah, makes sense.

[13:31:00.0000] <AryehGregor>
Actually, that was the first thing I tried, but I wasn't sure I should be testing it specifically.  But if it broke a site, then clearly that's what should be tested.

[13:32:00.0000] <Ms2ger>
The patch includes a test, fwiw

[13:32:01.0000] <AryehGregor>
Even easier.

[13:32:02.0000] <Ms2ger>
And https://bugzilla.mozilla.org/show_bug.cgi?id=599588 has one for scripts

[13:33:00.0000] <Hixie>
AryehGregor: it's up to you

[13:33:01.0000] <AryehGregor>
Okay.

[13:34:00.0000] <Hixie>
AryehGregor: but if you do want to learn the parser, you can definitely consider it part of the work

[13:34:01.0000] <AryehGregor>
Sure.

[13:37:00.0000] <jgraham>
/me suggests that reading the parser algorithm is not the most effective way to understand it

[13:38:00.0000] <Philip`>
/me suggests that implementing it is a good way

[13:39:00.0000] <jgraham>
AryehGregor: So you have the whole universe of languages to chose from except python, PHP and java

[13:39:01.0000] <jgraham>
choose

[13:40:00.0000] <AryehGregor>
Too bad that includes a) my favorite language, b) the only language I'm really familiar with.

[13:40:01.0000] <Dashiva>
And ocaml

[13:40:02.0000] <AryehGregor>
Maybe I can take it as an opportunity to learn Haskell!

[13:40:03.0000] <AryehGregor>
I can learn two things at once that way.

[13:40:04.0000] <Dashiva>
Why not go?

[13:40:05.0000] <TabAtkins>
It's an official Google language now!

[13:40:06.0000] <Dashiva>
\hipstercat

[13:42:00.0000] <jgraham>
A Haskell implementation would be awesome

[13:42:01.0000] <Philip`>
Some of the spec's algorithms really don't map very well onto functional languages

[13:42:02.0000] <jgraham>
I occasionally think it would be a good way to learn haskell

[13:42:03.0000] <Philip`>
but if you reverse-engineer them to figure out what they're actually doing, you can reimplement them and check it at least passes the test cases

[13:42:04.0000] <jgraham>
Then I realise what I really mean is "challenging"

[13:43:00.0000] <TabAtkins>
jgraham: Hahaha.

[13:44:00.0000] <Dashiva>
jgraham: Okay, fine, do it in FORTRAN then

[13:45:00.0000] <jgraham>
Dashiva: I know a fair amount of Fortran 90... but yeah the idea isn't making me happy :)

[13:45:01.0000] <Dashiva>
90? Bah, humbug

[13:45:02.0000] <Dashiva>
77 is all you need

[13:47:00.0000] <jgraham>
Well only if you are a masochist^Wacademic

[13:47:01.0000] <Dashiva>
But honestly, I didn't find it that bad

[13:48:00.0000] <jgraham>
Hmm, maybe doing it in F90 wouldn't be so hard

[13:48:01.0000] <Dashiva>
I think people just overrate it because it's often mentioned in the same sentence as COBOL

[13:48:02.0000] <jgraham>
But supremely pointless

[13:48:03.0000] <TabAtkins>
This frightens me: "@var $b Roman";        p { font-family: "Times New $b; }"

[13:48:04.0000] <jgraham>
Oh, for numerics Fortran is nicer than C

[13:49:00.0000] <Ms2ger>
TabAtkins, and it should!

[13:49:01.0000] <jgraham>
TabAtkins: Why?

[13:51:00.0000] <AryehGregor>
TabAtkins, that should be illegal.

[13:52:00.0000] <AryehGregor>
(just on principle)

[13:52:01.0000] <TabAtkins>
AryehGregor: Indeed, and it is.  Holy god, it is.

[13:52:02.0000] <TabAtkins>
jgraham: Variables as character-level macros are an abomination.

[13:52:03.0000] <Ms2ger>
TabAtkins, http://krijnhoetmer.nl/irc-logs/whatwg/20101230#l-326

[13:53:00.0000] <TabAtkins>
Ms2ger: Huh, wonder how I missed that last year.

[13:53:01.0000] <TabAtkins>
Um, that might work.  pending() still confused me a bit.

[13:53:02.0000] <Ms2ger>
Marvelous Hixieisms

[13:53:03.0000] <TabAtkins>
Also: nobody implements it.  display:marker is a much more restricted form, and probably easier to implement.

[13:54:00.0000] <Hixie>
pending() is a terrible idea

[13:54:01.0000] <Hixie>
please find a better solution

[13:54:02.0000] <TabAtkins>
Will do.

[13:55:00.0000] <Ms2ger>
:(

[13:55:01.0000] <TabAtkins>
When I pick up G&RC I'll be ripping out most of it so it can just function as a place to specify already-existing things better.

[13:55:02.0000] <TabAtkins>
Then I'll review what was ripped out for G&RC 2.

[13:55:03.0000] <TabAtkins>
s/2/4/, I guess.

[13:56:00.0000] <TabAtkins>
Our numbering is confusing on purpose.

[13:56:01.0000] <TabAtkins>
Anyway, I'm off to a meeting.  bbl

[13:56:02.0000] <Ms2ger>
It is the Garbage Collection Placeholder Module, after all

[14:02:00.0000] <othermaciej>
what's G&RC?

[14:02:01.0000] <Peter`>
Generated and Replaced Content

[14:02:02.0000] <Peter`>
http://www.w3.org/TR/css3-content

[14:40:00.0000] <othermaciej>
ah

[14:49:00.0000] <TabAtkins>
Ms2ger: You're confusing G&RC with GPCM.

[14:49:01.0000] <TabAtkins>
s/GPCM/GCPM/

[15:26:00.0000] <key>
hello

[15:27:00.0000] <Hixie>
hello

[15:27:01.0000] <key>
i've been developing since '97, the 3.2 days. i've been involved in the evolution of the digital world ever since. i feel <article> is good in concept, but poor in name. article implies syndication, journalism, etc written work. whereas the semantic purpose is more for the 'main content' of a page. i suggest <content> instead

[15:28:00.0000] <key>
section and content are perfectly dialectic. 1 syntactic, 1 semantic

[15:28:01.0000] <Hixie>
<article> is for syndication

[15:28:02.0000] <Hixie>
see the spec :-)

[15:28:03.0000] <hober>
But <article> can be used in secondary, non-main-part-of-the-page places

[15:28:04.0000] <TabAtkins>
Syndication is more-or-less the semantic you want for <article>, though.  <article> is a section that is appropriate for linking to individually.

[15:28:05.0000] <key>
see, this is the ambiguity i'm talking about

[15:28:06.0000] <AryehGregor>
It's probably too late to change the names.  Some of them aren't quite right, but we'll never have a stable spec if we keep on arguing about them.

[15:29:00.0000] <hober>
and, of course, you can have multiple first-level <article>s

[15:29:01.0000] <hober>
there's no ambiguity

[15:29:02.0000] <Hixie>
the word "syndication" is in the first sentence of the definition of <article> in fact

[15:29:03.0000] <AryehGregor>
Not that we'll ever have a stable spec anyway.

[15:29:04.0000] <AryehGregor>
Nor do we want one.  But this part could be stable.

[15:29:05.0000] <key>
if a corporate site uses a menu for site structure + context, the main content of the page would not be proper for syndication

[15:29:06.0000] <hober>
so you shouldn't use <article> in that case

[15:30:00.0000] <key>
yet it would still be helpful to denote the 'main content' of the page

[15:30:01.0000] <hober>
the main content is everything besides the non-main content

[15:30:02.0000] <key>
what, so we have use-speicific tags now? TBL be damned

[15:30:03.0000] <key>
yes

[15:30:04.0000] <hober>
if you must, call it <div id="main">

[15:30:05.0000] <key>
and it should have a semantic identity

[15:31:00.0000] <key>
uh, weak. i literally know a whole camp of html 5 developers who are using the perceived looseness of article to refer to their main content, even if not intended for distribution

[15:31:01.0000] <key>
i don't even see why there's a tag for content on the basis of syndication or not

[15:31:02.0000] <key>
again, <article> should be renamed <content>

[15:31:03.0000] <AryehGregor>
People misuse everything.

[15:32:00.0000] <hober>
There are lots of web pages on which it's semantically appropriate to use <article> for what you're calling the main content. There are many web sites where that's inappropriate from a semantic standpoint. It just depends on the page.

[15:32:01.0000] <key>
and this is why the web is a toilet to dev for; lazy spec developers

[15:32:02.0000] <key>
let me ask this: do you expect large corporations to wrap their page specific content in <article>?

[15:33:00.0000] <hober>
no. I expect them to wrap articles in <article>.

[15:33:01.0000] <tantek>
if they would syndicate it as an independent item of content in a feed - then yes, I would expect them to wrap it in an <article>

[15:33:02.0000] <key>
corporate web sites are not intending to distribute their page content sans context. you and i both know this.

[15:33:03.0000] <TabAtkins>
tantek: And that's equivalent to what hober said. ^_^

[15:33:04.0000] <key>
do you guys not see the gap i'm shining light on?

[15:33:05.0000] <Hixie>
key: if we rename <article> to <content>, people will think it's for their main content, when it is in fact for syndication.

[15:33:06.0000] <hober>
key:  we see that there's currently no eelemtn for "the main section of the page"

[15:33:07.0000] <key>
the syndication attribute of article needs to be removed, leaving a generic <content>

[15:33:08.0000] <tantek>
TabAtkins - no hober said articles in <article> - that's a tautology :P

[15:33:09.0000] <hober>
but that has nothing to do with <article.

[15:34:00.0000] <key>
no, <content> would be for any unit of content

[15:34:01.0000] <key>
whole and complete

[15:34:02.0000] <tantek>
key - that's what <section> is for

[15:34:03.0000] <Hixie>
we already have a generic "main content of page" element, it's <body>

[15:34:04.0000] <key>
heh

[15:34:05.0000] <hober>
Hixie: indeed, I misspoke

[15:34:06.0000] <key>
yea, the spec sure is tight and clean.

[15:34:07.0000] <TabAtkins>
tantek: Only if you claim that the "article-ness" of a piece of content is defined solely through what it's wrapped in.

[15:34:08.0000] <tantek>
and now you understand the difference between <body> <section> and <article>

[15:34:09.0000] <key>
hixie, there is a difference just as there is HEAD and HEADER

[15:34:10.0000] <TabAtkins>
tantek: If you assume that article-ness if an independent quality, then it makes sense.

[15:35:00.0000] <tantek>
congratulations - quick, write it up in an FAQ :)

[15:35:01.0000] <key>
1 is for message, the other is semantic

[15:35:02.0000] <hober>
tantek: it's probably already in there

[15:35:03.0000] <Hixie>
<head> is a historical artefact, <header> is to help authors not have to use <div> for a common class="header" case

[15:35:04.0000] <tantek>
hober - if so, point to it :P

[15:35:05.0000] <tantek>
/me is not particularly fond of <head> either

[15:36:00.0000] <key>
hixie, there is the structure of the message, then there is the semantic partitioning of the content (body) of the message

[15:36:01.0000] <key>
uh

[15:36:02.0000] <key>
you guys should /not/ be developing specs for the web

[15:36:03.0000] <Hixie>
you are welcome to do it in our stead :-)

[15:36:04.0000] <tantek>
key - you're welcome to fork and do a better job :P

[15:36:05.0000] <tantek>
lol

[15:36:06.0000] <key>
i'm actually working on it

[15:36:07.0000] <Hixie>
the spec is under a license that allows forking for exactly this reason

[15:37:00.0000] <Hixie>
all you have to do is convince the browser vendors that you're doing a better job, and your spec will be the official one :-)

[15:37:01.0000] <Hixie>
or at least, as official as the whatwg's one today

[15:37:02.0000] <key>
i'm sorry you guys want to squeeze everything web into the character of a blog.

[15:37:03.0000] <tantek>
key - no need to strawman - https://secure.wikimedia.org/wikipedia/en/wiki/Straw_man

[15:38:00.0000] <key>
i know what strawman means, and i did not ply that scheme

[15:38:01.0000] <hober>
tantek: looks like it's not in there. Hence my 'probably' :)

[15:38:02.0000] <key>
having a tag so semantically rigid as article is in fact a poor choice

[15:39:00.0000] <hober>
Hey, it sure beats <address>

[15:39:01.0000] <AryehGregor>
This is why open-source licenses are neat.  They give you a way to tell people to shut up while at the same time feeling smug and self-righteous about it.

[15:39:02.0000] <key>
i like most of the idea behind it, but it shouldn't imply anything re syndication!

[15:39:03.0000] <hober>
HTML has lots of weird elements, <article> is on the less weird end of things

[15:39:04.0000] <key>
so we lower our standards vs increasing them hober?

[15:39:05.0000] <key>
i mean, wtf does that comment even mean?

[15:39:06.0000] <hober>
key: then just think of it being an independent section, and forget anyone said anything about syndication

[15:39:07.0000] <hober>
key: see the topic

[15:39:08.0000] <AryehGregor>
key, the fact is, you're not the one deciding what goes into the WHATWG's HTML spec.  So you can either try to convince people, or agree to disagree.  Just telling us we're wrong is not really very useful.

[15:40:00.0000] <tantek>
key - your statement "you guys want to squeeze everything web into the character of a blog" is a misrepresentation of our positions

[15:40:01.0000] <key>
hober, but you damn well know the 'syndication' reference will give cover to people who want to scrape and rape ppl's content

[15:40:02.0000] <Hixie>
key: the idea behind <article> is exclusively to allow syndication, so if you don't like that, you don't like the idea behind <article>. Which is fine, but you'll find it easier to convince us if you start from the standpoint of what you actually want than saying you agree to something you actually disagree with.

[15:40:03.0000] <hober>
wait, what?

[15:40:04.0000] <tantek>
ergo strawman

[15:41:00.0000] <AryehGregor>
I'd call it more like a "flame".

[15:41:01.0000] <AryehGregor>
A straw man is really more when you *counter* an argument that your opponent doesn't hold.

[15:41:02.0000] <key>
nah. moment, let me ponder

[15:41:03.0000] <TabAtkins>
key: Your entire conversation so far has been a massive pile of insult, distortion, and flame.  This is not how you conduct conversations.

[15:41:04.0000] <AryehGregor>
Not when you merely accuse them of holding it.

[15:41:05.0000] <key>
AryehGregor: yep you got it

[15:41:06.0000] <AryehGregor>
The whole point of the analogy is that straw men are easy to defeat, because they don't fight back.

[15:41:07.0000] <TabAtkins>
At least, not if you want to actually accomplish anything besides getting ignored.

[15:42:00.0000] <Hixie>
wait what? now we're condoning rape?

[15:42:01.0000] <AryehGregor>
If they aren't trying to counter the argument, it's not really appropriate to call it a straw man, IMO.

[15:42:02.0000] <jcranmer>
. . . ?

[15:42:03.0000] <Hixie>
man, this conversation went sour fast

[15:42:04.0000] <key>
relax

[15:42:05.0000] <jcranmer>
I just happened to look here and we're talking about rape?

[15:42:06.0000] <key>
there seems to be 2 sides to article

[15:42:07.0000] <jcranmer>
what kind of logic is... oh

[15:42:08.0000] <key>
1. syndication being implied. 2. unit of content; whole and complete

[15:42:09.0000] <key>
i like 2, i think 1 is less useful

[15:43:00.0000] <hober>
ok, so just don't worry about 1 then

[15:43:01.0000] <hober>
how does it affect you?

[15:43:02.0000] <key>
<content> would be semantically organizational, whereas <section> would be structurally organizational

[15:43:03.0000] <key>
because we need a tag like it, semantically, but better

[15:43:04.0000] <key>
hence <content>

[15:43:05.0000] <hober>
the semantic of what you think of as <content> is different from <article>, and this is orthogonal to the syndication thing

[15:43:06.0000] <key>
if it's about syndication, <article> should inherit from <content>, not <section>

[15:44:00.0000] <hober>
no, because it's sensible for a page to have many <article>s on it

[15:44:01.0000] <key>
yes and?

[15:44:02.0000] <hober>
and, assuming I understand you when you talk about the nonexistent <content> tag, it would only be once a page

[15:44:03.0000] <key>
it's also sensible for an article to be spread over multiple pages

[15:44:04.0000] <key>
not necessarily

[15:44:05.0000] <key>
the same as article, just with no implication re syndication; which is just odd

[15:45:00.0000] <key>
i mean fuck, why don't you guys just make a <lolcats> tag? would compliment well your blog tags

[15:45:01.0000] <hober>
I give up.

[15:46:00.0000] <AryehGregor>
key, are you trying to be constructive here?

[15:46:01.0000] <key>
yes

[15:46:02.0000] <AryehGregor>
Then I regret to inform you that you're not very good at it.

[15:47:00.0000] <key>
k

[15:47:01.0000] <key>
takes ears to hear

[15:47:02.0000] <TabAtkins>
Uh, yeah.  /ignore, dude.

[15:47:03.0000] <AryehGregor>
I'm pretty sure that whoever's listening, cursing at them and telling them they're incompetent is an ineffective rhetorical strategy.

[15:47:04.0000] <key>
i tried reason, fell on deaf ears

[15:48:00.0000] <AryehGregor>
Well, that's why I asked you if you were trying to be constructive.

[15:48:01.0000] <AryehGregor>
The alternative would be that you had given up and were just venting.

[15:48:02.0000] <key>
slightly

[15:48:03.0000] <key>
it's frustrating to me. the web has so much promise that has yet to be realized

[15:48:04.0000] <key>
we're decades into it now, it should be better than this

[15:49:00.0000] <key>
the tag set should be complete and abstract, and not imply things irrelevant

[15:49:01.0000] <jcranmer>
if you ask me, the semantic web is mostly going to be a failure

[15:49:02.0000] <Hixie>
future tense?

[15:49:03.0000] <TabAtkins>
jcranmer: No need to use the future tense.  The "Semantic Web" was a failure.

[15:49:04.0000] <key>
jcranmer: you're probably right. the temptation to try to create a tag for everything will overwhelm it

[15:50:00.0000] <key>
should be a complete set of abstract tags, not tags for every kind of thing

[15:50:01.0000] <jcranmer>
maybe the Semantic Web was something I didn't think it was

[15:50:02.0000] <TabAtkins>
It punted on all the hard issues like trust in favor of solving the more theoretically interesting ratholes.

[15:50:03.0000] <jcranmer>
/me goes to check Wikipedia

[15:50:04.0000] <AryehGregor>
I don't think trust was the big issue.

[15:50:05.0000] <Hixie>
trust is a huge issue

[15:50:06.0000] <key>
eg, <nav>. i mean wtf, took me 3 minutes of thinking to come up with <menu> being superior

[15:50:07.0000] <AryehGregor>
I don't think it was the fatal one, though.

[15:50:08.0000] <Hixie>
it's also known as "spam"

[15:51:00.0000] <TabAtkins>
You *must* solve trust.  If you don't, the entire thing falls down immediately from the weight of spam.

[15:51:01.0000] <AryehGregor>
I think the big issue was almost no one actually produced useful machine-readable data repositories.

[15:51:02.0000] <Hixie>
the other huge issue is that it's nigh on impossible to get authors to write good machine-readable content

[15:51:03.0000] <jcranmer>
the basic problem is that once you define content as being unstructured

[15:51:04.0000] <Hixie>
the SW has punted on both of these issues in avour of syntax bikesheds.

[15:51:05.0000] <jcranmer>
you can never go back and decide that it can be structable

[15:51:06.0000] <jcranmer>
er, structurable

[15:51:07.0000] <Hixie>
i maintain a hope that NLP will save the day

[15:52:00.0000] <Hixie>
cos god knows we're out of other options :-P

[15:52:01.0000] <key>
NLP?

[15:52:02.0000] <jcranmer>
I don't think you need to do full NLP

[15:52:03.0000] <TabAtkins>
/me has to force himself to not read that as "neurolinguistic programming".

[15:52:04.0000] <jcranmer>
key: Natural Langage Processing

[15:52:05.0000] <key>
oh

[15:52:06.0000] <key>
heh, what do you think orwell's newspeak is for?

[15:52:07.0000] <key>
reduce the speech-base, you make it easier to implement NLP

[15:53:00.0000] <jcranmer>
although my attempt to extract HTML text by how the HTML was structured did turn out to be mildly failtastic

[15:53:01.0000] <jcranmer>
now, granted, having about a weekend to implement it didn't help things

[15:55:00.0000] <Hixie>
jcranmer: oh i'm not saying you need full AI. With each step along the NLP path, you get results. The better the NLP the more impressive the results can be.

[15:56:00.0000] <AryehGregor>
NLP is more or less AI-complete, though.

[15:56:01.0000] <Hixie>
an example of incomplete NLP: translate.google.com

[15:56:02.0000] <key>
"The article element represents an independent section of a document, page or site. It is suitable for content like news or blog articles, forum posts or individual comments." from http://www.alistapart.com/articles/previewofhtml5

[15:56:03.0000] <TabAtkins>
Full NLP, sure.  Google gets by pretty decently without AI, though.

[15:56:04.0000] <key>
see how people are interpreting this tag guys?

[15:56:05.0000] <Hixie>
key: correctly?

[15:57:00.0000] <key>
they aren't discussing the issue of implied syndication

[15:57:01.0000] <Hixie>
that's fine

[15:57:02.0000] <key>
implied syndication is a perversion of this semantic need

[15:58:00.0000] <key>
we need a way to denote a part of a web page as the main content area of the page, sans menu, extras, etc

[15:58:01.0000] <key>
what we don't need, is to have implied syndication along for the ride

[15:58:02.0000] <key>
i don't even mind the name article, rather the spec definition including said implied syndication

[15:59:00.0000] <key>
we have rss if people want to syndicate their content, why wedge that kind of stuff into html?

[15:59:01.0000] <hober>
you keep saying "a way to denote a part of a web page as the main content area of the page"


2011-02-08
[16:00:00.0000] <hober>
as if that has anything to do with <article>

[16:00:01.0000] <Hixie>
the main content area of the page, sans menu, extras, etc, is <body> with <nav> and <aside> removed.

[16:00:02.0000] <othermaciej>
key, it kind of seems like you are coming in here with an attitude problem

[16:00:03.0000] <othermaciej>
key: is that because you are frustrated and not sure how to express your point, or just because you're the kind of guy to come into a channel and throw off attitude?

[16:00:04.0000] <othermaciej>
key: if it's the former, I can give you advice

[16:01:00.0000] <key>
shall i answer? or would you rather just keep spewing from the mouth

[16:01:01.0000] <othermaciej>
the best way to effect change in the HTML spec is to write up use cases

[16:01:02.0000] <othermaciej>
I'm guessing it's #2, in which case you should leave

[16:01:03.0000] <key>
obviously you're the kind of guy who just asks rhetorical questions

[16:01:04.0000] <key>
more of your assumption

[16:01:05.0000] <othermaciej>
just because it's an open standards process and an open channel, doesn't entitle you to come in here and be a jerk

[16:01:06.0000] <key>
straw man

[16:02:00.0000] <othermaciej>
anyway, if you actually want to create change and not just vent, write up your use cases

[16:02:01.0000] <othermaciej>
send to the mailing list

[16:02:02.0000] <othermaciej>
start a discussion

[16:02:03.0000] <othermaciej>
show data from real sites

[16:02:04.0000] <othermaciej>
that is what works

[16:03:00.0000] <key>
hober, the reason i say that is that 'content' is one of the biggest outline parts that exist

[16:03:01.0000] <key>
along moreso than header/footer, even

[16:03:02.0000] <key>
without content, you wouldn't have nav, or any of the rest

[16:04:00.0000] <key>
hixie, are you saying that's implied by <body>?

[16:04:01.0000] <hober>
but that's an entirely different issue than any problem you may have with <article>

[16:04:02.0000] <key>
my point is that we wouldn't need to create a new tag to fill this need, we could just clean up the definition of <article> and most likely change its name

[16:05:00.0000] <Hixie>
we already have a tag for this

[16:05:01.0000] <Hixie>
it's <Body>

[16:06:00.0000] <key>
so the main content area shouldn't show up in the outlining algorithm?

[16:06:01.0000] <key>
or when you draw out a web interface outline, you don't have a special area for "content" ?

[16:06:02.0000] <key>
http://www.brucelawson.co.uk/2010/html5-articles-and-sections-whats-the-difference/#comment-667884

[16:06:03.0000] <key>
he raises good points i'd say. opinions?

[16:08:00.0000] <key>
also, http://www.brucelawson.co.uk/2010/html5-articles-and-sections-whats-the-difference/#comment-680580

[16:08:01.0000] <Hixie>
the outlining algorithm already handles all this

[16:08:02.0000] <Hixie>
see the spec

[16:08:03.0000] <key>
(re spanning of logical content units across multiple pages)

[16:09:00.0000] <key>
also, http://www.brucelawson.co.uk/2010/html5-articles-and-sections-whats-the-difference/#comment-688922

[16:10:00.0000] <key>
what i find is, when there is some issue that many are confused of, it isn't necessarily anything more than the topic being poorly constructed

[16:10:01.0000] <key>
like the 7 series 'all nav in 1 button' bmw issue a few years back

[16:11:00.0000] <key>
have you guys taken a step back and considered if perhaps article is poorly defined and constructed as a concept?

[16:16:00.0000] <AryehGregor>
No.  We have irreversibly sunk into a bottomless sea of self-righteous delusion, never to emerge until we have destroyed the entire web platform through our willful ignorance.

[16:16:01.0000] <AryehGregor>
Sorry.

[16:16:02.0000] <key>
can you please be serious?

[16:17:00.0000] <Hixie>
ok, who had AryehGregor down in the pool for "who will go sarcastic first"?

[16:17:01.0000] <AryehGregor>
No again.  Sorry.

[16:17:02.0000] <Hixie>
hand in your bets people

[16:17:03.0000] <AryehGregor>
Hixie, I'm pretty sure I was sarcastic at least once before that.

[16:17:04.0000] <Hixie>
ah, must have missed it :-)

[16:17:05.0000] <key>
yea, and i'm the jerk

[16:17:06.0000] <AryehGregor>
key, seriously, this is not a big deal either way.  Everyone's going to use the element however they feel like, we can't stop it.

[16:17:07.0000] <key>
i try to have a serious discussion and get the peanut gallery taking a shit

[16:17:08.0000] <AryehGregor>
If it's not named so wisely, well, it's hardly the first in that regard.

[16:18:00.0000] <Hixie>
key: your tone has not been one that one would describe as a serious discussion, as many people have already pointed out to you

[16:18:01.0000] <key>
so why don't we just use tables for layout? if proper tag use doesn't matter

[16:18:02.0000] <Hixie>
key: and people have now tuned you out because of your tone

[16:18:03.0000] <key>
oh my tone? does it hurt your spineless jellyfish bodies?

[16:18:04.0000] <AryehGregor>
That has quantifiable accessibility impact.

[16:18:05.0000] <key>
fucking children

[16:18:06.0000] <Hixie>
case in point

[16:18:07.0000] <key>
tough to reason with a channel full of queens

[16:19:00.0000] <tantek>
key, your tone is inefficient for human communications. you are hereby /ignored.

[16:19:01.0000] <key>
tantek, your pseudo-intellect bores me

[16:19:02.0000] <AryehGregor>
The annoying thing about /ignore is you still have to read the other people talking to him.

[16:19:03.0000] <AryehGregor>
Then you get curious about what he said.

[16:19:04.0000] <key>
i'll just leave

[16:19:05.0000] <AryehGregor>
Which defeats the point.

[16:19:06.0000] <AryehGregor>
At least for me.

[16:19:07.0000] <Hixie>
irssi lets you /ignore the responses too

[16:19:08.0000] <Hixie>
which is pretty awesome

[16:19:09.0000] <AryehGregor>
Only if they contain his name, I assume?

[16:20:00.0000] <Hixie>
yeah

[16:20:01.0000] <tantek>
AryehGregor - btw - granted - you're correct, that was more of a flame than a strawman.

[16:20:02.0000] <Hixie>
it doesn't have NLP yet :-)

[16:20:03.0000] <tw2113>
/me apologizes for key, i'm the one that mentioned this room earlier over in #html5

[16:20:04.0000] <Hixie>
tw2113: no worries

[16:21:00.0000] <tw2113>
i was at work so didn't have ability to give full attention to any friendly arguements he had

[16:21:01.0000] <tw2113>
and don't know quite enough to give authoritative voice :D

[16:22:00.0000] <tantek>
Actually, should be fairly easy for NLP to detect both such trivial name-calling and above-average use of expletives to auto-categorize a participant as potentially unproductive.

[16:22:01.0000] <tantek>
above-average *frequency* that is, rather than above-average sophistication

[16:22:02.0000] <tantek>
could be a useful IRCbot

[16:22:03.0000] <tw2113>
send those messages to /dev/null?

[16:23:00.0000] <tantek>
as a first implementation. second, connect an Eliza-style backend to attempt to educate the unproductive participant into being more productive

[16:23:01.0000] <tantek>
saving humans the time of doing so

[16:24:00.0000] <tw2113>
i don't know how much formal introductions are encouraged, but i'm michael

[16:24:01.0000] <key>
btw, where do you guys stand on capitalized tag names?

[16:24:02.0000] <key>
rather, up-cased

[16:24:03.0000] <key>
<HEAD> or <head>?

[16:25:00.0000] <key>
personally, i do <HEAD attr="value">

[16:25:01.0000] <Philip`>
The spec is intentionally indifferent

[16:25:02.0000] <tw2113>
i think letter case has been made irrelevant

[16:25:03.0000] <tw2113>
anyone can correct me if wrong though

[16:25:04.0000] <Hixie>
wow, key wasn't gone long

[16:26:00.0000] <Hixie>
spec says you can any case

[16:26:01.0000] <key>
had a new thought

[16:26:02.0000] <key>
yea im just asking personal prefs

[16:26:03.0000] <key>
i know what the spec says, heh

[16:26:04.0000] <Hixie>
<br> <Br> <bR>, <BR> all equivalent

[16:26:05.0000] <AryehGregor>
I do everything lowercase.

[16:26:06.0000] <AryehGregor>
Because it's easier to read.

[16:26:07.0000] <AryehGregor>
And also it compresses better, if you want to be obsessive.

[16:26:08.0000] <key>
ya? interesting. i find my style more readable

[16:26:09.0000] <tw2113>
personal preference is personal preference

[16:26:10.0000] <Hixie>
i capitalise the first letter, because my finger can't get off the shift key fast enough after typing the <

[16:26:11.0000] <AryehGregor>
And also because uppercase tag names put me in the mind of 1990s HTML, before XML was introduced and all the trendy people started using lowercase.

[16:27:00.0000] <tw2113>
:O which one holds more data weight? capital or lowercase?

[16:27:01.0000] <key>
ew i hate capitalized style  the most :P

[16:27:02.0000] <AryehGregor>
I even use <!doctype html> instead of <!DOCTYPE html>.

[16:27:03.0000] <jcranmer>
NO YOU'RE BOTH WRONG, YOU NEED TO USE RANDOM CAPITALIZATIONS

[16:27:04.0000] <key>
at least be consistent!

[16:27:05.0000] <jcranmer>
e.g., sCRipT

[16:27:06.0000] <key>
kiddy

[16:27:07.0000] <AryehGregor>
I do that in tests.

[16:27:08.0000] <key>
i made my first cat shirt today

[16:27:09.0000] <AryehGregor>
There are some examples in the spec that do it too, I think, just to make the point.

[16:27:10.0000] <tw2113>
save file size! use the smallest characters possible

[16:27:11.0000] <Hixie>
elements with odd numbers of attributes should be uppercase, and even numbers of attribute should be lowercase

[16:27:12.0000] <Hixie>
so you can tell at a glance whether the number of attributes is odd or even

[16:27:13.0000] <key>
haha

[16:28:00.0000] <jcranmer>
oh come on, you can throw more data into that tag name

[16:28:01.0000] <Hixie>
AryehGregor: none of the examples in the spec go quite as far as random case in the middle of tags :-P

[16:28:02.0000] <Hixie>
i'm not quite THAT crazy

[16:28:03.0000] <tantek>
that's silly. everyone knows UPPERCASE TAGS ARE FOR SHOUTING.

[16:28:04.0000] <Hixie>
tantek: so <STRONG> but <small>?

[16:28:05.0000] <AryehGregor>
Hixie, they should!

[16:29:00.0000] <tantek>
Hixie, bingo

[16:29:01.0000] <jcranmer>
Hixie: throw one in when you write an example on April 1

[16:29:02.0000] <key>
tantek, <HTML> isn't intended for person to person communication, rather machine to machine, so the upcase convention of SHOUTING doesn't apply

[16:29:03.0000] <key>
it's syntactic, not semantic

[16:29:04.0000] <key>
/me ducks

[16:29:05.0000] <jcranmer>
it's quixotic

[16:29:06.0000] <key>
haha

[16:30:00.0000] <key>
now you're just being silly

[16:30:01.0000] <jcranmer>
/me points to the topic

[16:30:02.0000] <AryehGregor>
Well, if your HTML isn't meant to be read by humans, then why do you care about case?

[16:30:03.0000] <AryehGregor>
Figure out what's fastest to parse or compresses best or something.

[16:30:04.0000] <AryehGregor>
(AFAIK, XHTML went with lowercase because it compresses better in typical documents.)

[16:30:05.0000] <AryehGregor>
(Slightly.)

[16:30:06.0000] <key>
i think you guys would benefit from having my mental stimulation regularly; i think i'll hang out here

[16:31:00.0000] <key>
/me sits down, pulls up a recliner

[16:31:01.0000] <AryehGregor>
Just try not to violently insult us all more than, say, once a week.

[16:31:02.0000] <key>
ok, deal

[16:31:03.0000] <jcranmer>
and preferably not on days that I have Abstract Algebra

[16:31:04.0000] <jcranmer>
my head hurts enough after that class

[16:31:05.0000] <tw2113>
avoid days that end in "ay"

[16:31:06.0000] <AryehGregor>
jcranmer, oh, you're taking abstract algebra?  As part of a computer science major or such?

[16:31:07.0000] <key>
mm, get your ambiant calculus on

[16:32:00.0000] <jcranmer>
AryehGregor: yes

[16:32:01.0000] <AryehGregor>
I wound up semi-inadvertently specializing in abstract algebra for my (math) bachelor's and master's degrees.

[16:33:00.0000] <AryehGregor>
Every ideal is contained within a maximal ideal!!!

[16:33:01.0000] <jcranmer>
if you want a detailed explanation on why all normal subgroups are kernels of some surjective homomorphism

[16:33:02.0000] <AryehGregor>
(proof: Zorn's lemma)

[16:33:03.0000] <jcranmer>
I am not your person

[16:33:04.0000] <key>
btw, if i have a corporate web site (doesn't publish/syndicate content), would it be best to wrap the content area with <section> then have nested sections within it? or do the <article> with nested <section> jig?

[16:33:05.0000] <AryehGregor>
That's trivial.

[16:33:06.0000] <AryehGregor>
Just take the natural map from G to G/N.

[16:33:07.0000] <tw2113>
for what it's worth, i think the internet has syndication coming out its ass, so article is actually quite the best term for it

[16:33:08.0000] <AryehGregor>
Then that's a surjective homomorphism, and N is the kernel.

[16:34:00.0000] <AryehGregor>
If you have any questions, ask in #math.  They like people who are advanced enough to actually be asking stuff about group theory.

[16:34:01.0000] <key>
tw2113: i'm inclined to agree, but what about the issue of a single logical article spanning multiple pages, and hence multiple <article> instances

[16:34:02.0000] <AryehGregor>
(as opposed to the flood of calc and pre-calc and numerical computing and programming)

[16:34:03.0000] <Hixie>
isn't algebra pretty abstract in its normal state? what is _abstract_ algebra?

[16:34:04.0000] <tw2113>
what's wrong with that?

[16:34:05.0000] <AryehGregor>
It's algebra where you prove stuff about abstract *types* of structures.

[16:35:00.0000] <Hixie>
like lambda calculus?

[16:35:01.0000] <AryehGregor>
Dunno any lambda calculus.

[16:35:02.0000] <key>
and even type taken abstract, ie abstract character

[16:35:03.0000] <jcranmer>
Hixie: it

[16:35:04.0000] <AryehGregor>
But regular algebra is where you make abstract statements about, e.g., the real numbers.

[16:35:05.0000] <Hixie>
or dimensional analysis?

[16:35:06.0000] <jcranmer>
's where you decide that abstract vector spaces are too concrete

[16:35:07.0000] <key>
nod, what AryehGregor said

[16:35:08.0000] <AryehGregor>
In abstract algebra, you make statements about more abstract structures, like groups.

[16:35:09.0000] <jcranmer>
so you decide to prove things using as few requirements as possible

[16:36:00.0000] <AryehGregor>
The real numbers under addition are a group, so are the nonzero real numbers under multiplication, so are the invertible matrices under multiplication, so are zillions of things.

[16:36:01.0000] <key>
tw2113: i've decided to use article with nested sections

[16:36:02.0000] <jcranmer>
I would have mentioned the hard-to-understand theorem we had in class today

[16:36:03.0000] <jcranmer>
but I forgot what it actually stated

[16:36:04.0000] <tw2113>
have at it

[16:37:00.0000] <key>
i liked the link you sent me that defined them as: article; whole unit of related content. section; related contents. div; null semantic

[16:37:01.0000] <jcranmer>
something about using homomorphisms to inductively prove that abelian groups have an element of order divisible by p, where p is some prime or something

[16:37:02.0000] <key>
it's the content semantic breakdown i'm looking for

[16:37:03.0000] <tw2113>
one of those from html5doctor?

[16:37:04.0000] <key>
yea

[16:37:05.0000] <Hixie>
jcranmer: oh i understand why your head hurts

[16:37:06.0000] <key>
or at least, one i found via it

[16:38:00.0000] <tw2113>
good resource there

[16:38:01.0000] <key>
word

[16:38:02.0000] <AryehGregor>
A group is any set G together with a binary operation * on the set such that 1) for any x, y, z, (x * y) * z = x * (y * z); 2) there is some e so that for all x, x*e = e*x = x; 3) for any x, there is a y so that x*y = y*x = e.

[16:38:03.0000] <AryehGregor>
Then you prove stuff about them.

[16:38:04.0000] <AryehGregor>
jcranmer, the order of any nontrivial group element is divisible by p for some prime p.

[16:38:05.0000] <jcranmer>
ah, apparently this is Cauchy's Theorem

[16:38:06.0000] <AryehGregor>
Oh, Cauchy's theorem.

[16:38:07.0000] <AryehGregor>
That's not just for abelian groups, though.

[16:39:00.0000] <jcranmer>
well, we only proved it for finite abelian groups

[16:39:01.0000] <AryehGregor>
It's really a weak corollary of Sylow's theorems.  I can't remember how to prove it offhand.

[16:39:02.0000] <AryehGregor>
It's true for all finite groups.

[16:39:03.0000] <jcranmer>
write something for 1/10 of the page in your notebook, that's how you prove it

[16:39:04.0000] <AryehGregor>
That's only a few lines.

[16:39:05.0000] <key>
tw2113: let's say i have an article with 5 pages. i wrap the first page of article in the template's <article>. now let's say i want to provide a link to the 4 other pages. would i put a <nav> within the <article>, and expect user agents to understand that as an article menu?

[16:39:06.0000] <jcranmer>
actually, it's a lot

[16:40:00.0000] <jcranmer>
I use graph paper for notes

[16:40:01.0000] <AryehGregor>
One of Sylow's theorems states that if G has order n, and p^m divides n, and p^(m + 1) does not divide n, then G has a subgroup of order p^m.

[16:40:02.0000] <jcranmer>
and I can squeeze three lines of text per square

[16:40:03.0000] <AryehGregor>
Then all elements of that subgroup have orders that are powers of p, by Lagrange's theorem.

[16:40:04.0000] <AryehGregor>
So just raise one to a suitable power and you get an element of order p.

[16:40:05.0000] <jcranmer>
hey, Lagrange's theorem!

[16:40:06.0000] <AryehGregor>
There's surely a much more elementary proof of Cauchy's theorem, though.

[16:40:07.0000] <jcranmer>
a name I recognize

[16:41:00.0000] <AryehGregor>
Yeah, that's one of the most basic theorems.

[16:41:01.0000] <AryehGregor>
Where by "basic" I mean "important" or "fundamental".

[16:41:02.0000] <jcranmer>
the size of a subgroup is a divisor of the size of a group

[16:41:03.0000] <AryehGregor>
Yep.

[16:41:04.0000] <AryehGregor>
Thus also the order of an element is a divisor of the size of the group, since any element generates a cyclic subgroup of its own order.

[16:41:05.0000] <tw2113>
someone correct me if i'm wrong, but i think if the nav is within the parent article tag, then ideally, the browser would associate the nav with that article

[16:42:00.0000] <AryehGregor>
You can stack up lots of theorems that let you restrict what finite groups can look like.  Once you get to Sylow's theorems, you can do lots of precise classification.

[16:42:01.0000] <AryehGregor>
Like "there's exactly one nonabelian group of order 21".

[16:42:02.0000] <AryehGregor>
(finite abelian groups are classified much more easily, using the fundamental theorem of finite abelian groups; they're all direct products of cyclic groups)

[16:42:03.0000] <AryehGregor>
Anyway, have fun.

[16:43:00.0000] <TabAtkins>
tw2113: Yeah, you can associate it with the nearest ancestor article.

[16:43:01.0000] <AryehGregor>
I once tried to make a math joke in a programming channel and no one got it.  :(

[16:43:02.0000] <TabAtkins>
/me is always somewhat ashamed to admit that he's bad at higher math.

[16:43:03.0000] <jcranmer>
/me recalls that he was going to look up what the topic of Wednesday's class would be to prevent a brain fart at the beginning of class

[16:43:04.0000] <tw2113>
there ya go key

[16:43:05.0000] <TabAtkins>
Though to be fair, the math I do know still puts me in like 95th percentile at least.

[16:43:06.0000] <key>
ok nice

[16:44:00.0000] <AryehGregor>
(It was a pun on someone misspelling "discreet" as "discrete".  I contrasted it to the trivial topology, but apparently no one knew basic topology.)

[16:44:01.0000] <AryehGregor>
(For future reference, the discrete topology is the finest possible topology, while the indiscrete or trivial topology is the coarsest.)

[16:44:02.0000] <key>
tw2113, TabAtkins, so this is how nested nav's are rational?; that they associate to nearest sectioning ancestor in their tree?

[16:44:03.0000] <jcranmer>
you see

[16:44:04.0000] <AryehGregor>
(Although I don't really know much topology, sadly.)

[16:44:05.0000] <tw2113>
from what i gather, it's like that for most of them

[16:44:06.0000] <jcranmer>
topology is considered magic to the rest of us

[16:45:00.0000] <AryehGregor>
Topology is neat.

[16:45:01.0000] <TabAtkins>
Neat but magic.

[16:45:02.0000] <AryehGregor>
At least at a basic level, it seems much slicker to me than group theory.

[16:45:03.0000] <jcranmer>
I barely held my way through differential equations

[16:45:04.0000] <AryehGregor>
Algebra generally involves more computation than topology, and less visual thinking.

[16:45:05.0000] <jcranmer>
I can get a hold of abstract algebra if I actually do some stuff with it

[16:45:06.0000] <AryehGregor>
Differential equations is pretty much just memorizing types of equations and practicing so you can solve them fast, isn't it?

[16:46:00.0000] <AryehGregor>
I took a differential equations course for the heck of it.  Pretty boring.

[16:46:01.0000] <jcranmer>
I don't know how I got an A in that class

[16:46:02.0000] <AryehGregor>
You can't really understand any math unless you do stuff with it.

[16:46:03.0000] <jcranmer>
I somehow managed to be able to do it without understanding what I'm doing it

[16:46:04.0000] <key>
tw2113: as witnessed by section being nestable?

[16:46:05.0000] <key>
i mean, in regards to your mention of recursiveness

[16:46:06.0000] <jcranmer>
I can spout out the names of stuff, and I have a vague idea of how it works

[16:46:07.0000] <AryehGregor>
jcranmer, you realize that all basic undergrad math courses teach you how to do stuff without understanding it?

[16:47:00.0000] <AryehGregor>
/me doesn't remember how to solve anything but linear ordinary differential equations with constant coefficients

[16:47:01.0000] <jcranmer>
no, no, calculus you understand

[16:47:02.0000] <key>
AryehGregor: yea isn't that a pity?

[16:47:03.0000] <key>
makes a bunch of calculators, not thinkers

[16:47:04.0000] <AryehGregor>
/me could maybe do polynomial coefficients -- that's Taylor series, right?

[16:47:05.0000] <jcranmer>
well, I was taught calculus at a more theoretical level

[16:47:06.0000] <AryehGregor>
You can sort of understand calculus, but not really, unless you do it all with proofs.

[16:47:07.0000] <jcranmer>
we did proofs

[16:47:08.0000] <tw2113>
yes key

[16:47:09.0000] <AryehGregor>
And actually are required to know all the proofs.

[16:47:10.0000] <jcranmer>
oh god, we did proofs

[16:47:11.0000] <jcranmer>
we stopped short of doing real analysis

[16:48:00.0000] <jcranmer>
but I do recall proving taylor's theorem

[16:48:01.0000] <AryehGregor>
The key question is: were you required to prove things that weren't discussed in class?  I.e., did you have exercises of the form "prove this thing you've never seen before"?

[16:48:02.0000] <jcranmer>
yep

[16:48:03.0000] <AryehGregor>
Okay, then it sounds like a serious course.

[16:49:00.0000] <jcranmer>
that was also very prevalent in abstract vector spaces

[16:49:01.0000] <AryehGregor>
In my college, only math majors took courses like that, as far as I could tell.

[16:49:02.0000] <AryehGregor>
Mostly only pure math majors.

[16:49:03.0000] <key>
tw2113: ok so let's say you have your nav bar in your header. so you put <nav> in <header>. does this associate the menu to the header vs the whole document/site?

[16:49:04.0000] <jcranmer>
I even tripped up in one theorem because I assumed only finite-dimensional vector spaces

[16:49:05.0000] <AryehGregor>
Infinite-dimensional vector spaces aren't nearly as well-behaved.

[16:49:06.0000] <jcranmer>
well, it could be countably infinite-dimensional and still work

[16:50:00.0000] <AryehGregor>
Hah.

[16:50:01.0000] <jcranmer>
the proof broke down for uncountably infinite

[16:50:02.0000] <AryehGregor>
What result were you using that held for only countable dimensions?

[16:50:03.0000] <jcranmer>
I forget

[16:50:04.0000] <tw2113>
depends, which header are we talking about?

[16:50:05.0000] <jcranmer>
let me check my noteboke

[16:50:06.0000] <key>
tw2113: <header> tag

[16:50:07.0000] <tw2113>
for the site? for the article?

[16:50:08.0000] <key>
site

[16:50:09.0000] <AryehGregor>
/me can't think of any relevant ones offhand, that couldn't be patched up with some axiom of choice

[16:51:00.0000] <AryehGregor>
Maybe you used induction or recursion?

[16:51:01.0000] <key>
(all i do on my site header is show the current date+time)

[16:51:02.0000] <tw2113>
then the nav within that one, would be associated with the header, which i assume would be assocaited with the site

[16:51:03.0000] <AryehGregor>
That's my bet.

[16:51:04.0000] <tw2113>
being the top level header

[16:51:05.0000] <AryehGregor>
Like Graham-Schmidt.

[16:51:06.0000] <AryehGregor>
Only works in countable dimensions.

[16:51:07.0000] <key>
ok so you don't think a nav in a root level header would be 'buried' from proper prominence ?

[16:51:08.0000] <key>
considering screen readers, etc

[16:52:00.0000] <tw2113>
and if you use WAI-ARIA stuff, you can give that nav a role and it'd be known as the primary nav to assisted browsing

[16:52:01.0000] <AryehGregor>
If you try to extend it, you have to subtract off infinitely many pieces from a vector, which is impossible.

[16:52:02.0000] <jcranmer>
ah, I did an explicit enumeration of the elements in the basis

[16:52:03.0000] <key>
tw2113: sure, but i'm starting with logical organization first

[16:52:04.0000] <AryehGregor>
And then did what with it?

[16:52:05.0000] <AryehGregor>
You can get away with that stuff sometimes in uncountable dimensions, as long as you're using the axiom of choice.

[16:52:06.0000] <tw2113>
no i don't think it'd end up buried

[16:52:07.0000] <AryehGregor>
(If you aren't, then you can't assume a basis to begin with in uncountable dimensions, so no point in going there.)

[16:53:00.0000] <key>
thanks tw2113

[16:53:01.0000] <AryehGregor>
(Since the axiom of choice is equivalent to "All vector spaces have a basis.")

[16:53:02.0000] <jcranmer>
The question was to prove that

[16:53:03.0000] <AryehGregor>
To prove what?  That the axiom of choice is equivalent to all vector spaces have a basis?

[16:53:04.0000] <jcranmer>
If S is a subset of a vector space V, and T is a subspace of V, then prove that L(S) is a subset of T.

[16:54:00.0000] <AryehGregor>
Oh, okay.

[16:54:01.0000] <AryehGregor>
L being what?

[16:54:02.0000] <jcranmer>
the set of linear combinations of S

[16:54:03.0000] <jcranmer>
well, linear combinations of elements of S

[16:55:00.0000] <AryehGregor>
Then it's clearly wrong.  Let S be V, for instance, and T be a proper subspace.

[16:55:01.0000] <AryehGregor>
Maybe you meant S is a subset of T, and prove that L(S) is a subspace of T?

[16:55:02.0000] <jcranmer>
sorry, S is a subset of T

[16:55:03.0000] <karlcow>
I was trying to find out today if we there was a discussion about a "type" attribute for "input" element which would pop a map to select a location and sends back latitude/longitude

[16:56:00.0000] <AryehGregor>
Anyway, it follows directly from the definition of a subspace, which is basically "contains zero and is closed under linear combinations".  Unless you define subspaces differently.

[16:56:01.0000] <AryehGregor>
Definitely not a basis-dependent question, not a good idea to bring those into it.

[16:57:00.0000] <AryehGregor>
karlcow, it's been discussed, but the consensus so far has been that it's best not to add new features like that barring strong demand, until we have good implementations of the existing ones.

[16:57:01.0000] <jcranmer>
I had assumed that S was finite

[16:57:02.0000] <AryehGregor>
(plural)

[16:57:03.0000] <jcranmer>
well, it probably would have worked if S was countably infinite

[16:57:04.0000] <TabAtkins>
karlcow: In other words, let the implementations catch up first.

[16:57:05.0000] <karlcow>
ok

[16:58:00.0000] <TabAtkins>
karlcow: That said, I know we have some internal interest in doing type=location.

[16:58:01.0000] <TabAtkins>
So when we do add it, Webkit should be happy about it.

[16:58:02.0000] <karlcow>
TabAtkins: do you remember links do discussions?

[16:58:03.0000] <karlcow>
/me has to step out suddenly

[16:58:04.0000] <TabAtkins>
karlcow: No, I just know water-cooler talk.

[16:58:05.0000] <TabAtkins>
I also have to leave now, so I can give the car to my wife for the night.

[16:59:00.0000] <AryehGregor>
And I'm off the computer for the night.

[16:59:01.0000] <AryehGregor>
jcranmer, have fun with your abstract algebra!

[17:01:00.0000] <jcranmer>
will do

[17:16:00.0000] <Hixie>
anyone got IE9 handy?

[17:17:00.0000] <boogyman>
yup

[17:17:01.0000] <tw2113>
i don't even have windows handy :D

[17:19:00.0000] <key>
http://gsnedders.html5.org/outliner/process.py is failing, does anyone know of another outliner?

[17:22:00.0000] <Hixie>
boogyman: can you install the ahem font (http://www.w3.org/Style/CSS/Test/Fonts/Ahem/) and then go to http://software.hixie.ch/utilities/js/canvas/ and click "download" and tell me what the picture looks like?

[17:22:01.0000] <Hixie>
boogyman: assuming it even works in IE9

[17:23:00.0000] <boogyman>
on it like white on rice

[17:24:00.0000] <Hixie>
did it download a script that has a try { } block?

[17:24:01.0000] <Hixie>
and lots of fillRects?

[17:24:02.0000] <Hixie>
and a font line that uses Ahem?

[17:25:00.0000] <Hixie>
oh i misread what you said

[17:25:01.0000] <Hixie>
i thought you said "it looks like white on rice" :-)

[17:25:02.0000] <Hixie>
which i assumed meant it showed nothing :-)

[17:29:00.0000] <boogyman>
i don't think it's working properly

[17:30:00.0000] <Hixie>
that was my worry

[17:30:01.0000] <Hixie>
oh well, thanks anyway

[17:31:00.0000] <boogyman>
p://i52.tinypic.com/e6vzpf.jpg

[17:32:00.0000] <boogyman>
http://i52.tinypic.com/e6vzpf.jpg even

[17:32:01.0000] <Hixie>
that's after clicking "download"?

[17:32:02.0000] <boogyman>
yes

[17:32:03.0000] <Hixie>
hm, hold on one sec

[17:33:00.0000] <Hixie>
paste the text at http://junkyard.damowmow.com/448 into the textarea instead

[17:33:01.0000] <Hixie>
use http://junkyard.damowmow.com/449

[17:33:02.0000] <Hixie>
it has the right encoding set

[17:34:00.0000] <boogyman>
now i see xep with some coloured lines

[17:35:00.0000] <Hixie>
this is after installed the Ahem font?

[17:36:00.0000] <boogyman>
yes

[17:36:01.0000] <Hixie>
weird

[17:36:02.0000] <Hixie>
wonder what's going on

[17:37:00.0000] <Hixie>
boogyman: what does http://junkyard.damowmow.com/450 look like in IE9?

[17:37:01.0000] <boogyman>
give me a second, i'll install it directly in my root Fonts folder, I had a symlink to another location

[17:37:02.0000] <Hixie>
ah ok

[17:39:00.0000] <boogyman>
450 has an X then a black square

[17:39:01.0000] <Hixie>
ok excellent

[17:40:00.0000] <Hixie>
did the canvas thing change?

[17:40:01.0000] <boogyman>
http://i56.tinypic.com/2d7vl02.jpg

[17:40:02.0000] <Hixie>
fantastic, thanks

[17:40:03.0000] <boogyman>
stupid symlink

[17:41:00.0000] <Hixie>
so the one time i was hoping microsoft might have not followed the spec, they did follow it :-)

[17:41:01.0000] <Hixie>
ah well, can't complain i guess

[17:41:02.0000] <boogyman>
haha

[17:42:00.0000] <key>
should i use <MENU> within <NAV> ?

[17:43:00.0000] <Hixie>
you can

[17:43:01.0000] <Hixie>
if <menu> is what you actually need

[17:43:02.0000] <Hixie>
see the spec

[17:43:03.0000] <key>
boogyman: what is that web interface?

[17:44:00.0000] <boogyman>
I'm running the crap that is M$ Vista

[17:45:00.0000] <key>
no i mean, looks like a function declaration in a web page, with a text area for the code of it

[17:45:01.0000] <key>
like you can code a function through a web interface or osmething

[17:45:02.0000] <boogyman>
ah that, Ian would be able to give you that answer

[17:45:03.0000] <Hixie>
key: it's http://software.hixie.ch/utilities/js/canvas/

[17:46:00.0000] <key>
oh cool man, nice tool

[17:46:01.0000] <key>
btw, i love switzerland; especially lausanne

[17:48:00.0000] <Hixie>
i love switzerland too, so pretty

[17:48:01.0000] <Hixie>
but i prefer california, as a place to live :-)

[17:49:00.0000] <key>
which part?

[17:50:00.0000] <Hixie>
bay area

[17:52:00.0000] <key>
ah, yea. i lived in palo alto in the .com days, had a blast

[17:52:01.0000] <key>
are you back in .ch?

[17:53:00.0000] <Hixie>
nope, bay area

[17:53:01.0000] <key>
ah

[17:54:00.0000] <boogyman>
Ian, what do you mean lived .com :) it's just the beginning of the .com days

[17:55:00.0000] <Hixie>
that was mr key :-)

[18:05:00.0000] <key>
/me bows

[18:07:00.0000] <key>
http://honolulu.craigslist.org/mau/cto/2198949378.html

[18:07:01.0000] <key>
might snag that

[18:07:02.0000] <key>
anyone else into vintage surf rides?

[18:17:00.0000] <key>
http://www.pastie.org/private/vjpeztiw7fkzjzsfoxpua <- any critiques of my outline?

[00:57:00.0000] <annevk>
<span title="dom-FormData-form">Constructor(<span>HTMLFormElement</span> <var>form</var>)</span>

[00:57:01.0000] <annevk>
is the proper way to write it down right?

[01:00:00.0000] <Dashiva>
/me wonders how many of the fields in the IANA registration are long obsolete

[01:02:00.0000] <key>
what's the preferred way to make your content be constrained to 960 px wide and centered in <body>?

[01:02:01.0000] <annevk>
body { max-width:960px; margin:0 auto } ?

[01:02:02.0000] <key>
i was thinking something like <BODY><ARTICLE> and putting the styling on article

[01:02:03.0000] <annevk>
whatever suits you then

[01:03:00.0000] <key>
well i like your idea

[01:03:01.0000] <key>
i just didn't know we could do that

[01:06:00.0000] <annevk>
aah damnit

[01:06:01.0000] <annevk>
there's no hook in HTML5 for "constructing the form data set"

[01:11:00.0000] <annevk>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=12005

[01:16:00.0000] <key>
would you guys use <article> to wrap your web page? (let's say if you wanted to fix its width and center it)

[01:16:01.0000] <althie>
I think div could be better for wrapper?

[01:17:00.0000] <Ms2ger>
That would be a div, indeed

[01:17:01.0000] <key>
oh, hm

[01:18:00.0000] <key>
nice. something like <DIV id="document"> or?

[01:19:00.0000] <althie>
key: yeah, same way you use article

[01:20:00.0000] <key>
ok awesome

[01:20:01.0000] <key>
thanks

[01:20:02.0000] <key>
does div mean division?

[01:21:00.0000] <zcorpan>
The div element has no special meaning at all. It represents its children. It can be used with the class, lang, and title attributes to mark up semantics common to a group of consecutive elements.

[01:22:00.0000] <key>
i thought it meant division, and was the most generic container tag there is

[01:22:01.0000] <zcorpan>
the above is the spec's definition :)

[01:23:00.0000] <key>
i like divisino

[01:23:01.0000] <key>
divisino

[01:23:02.0000] <key>
division

[01:23:03.0000] <key>
would it be better to use class="document" or id="document" ?

[01:23:04.0000] <key>
s/better/precise

[01:23:05.0000] <Peter`>
It'd be a container, not a document

[01:23:06.0000] <zcorpan>
why do you need it at all?

[01:23:07.0000] <key>
to fix the width of my web page, and center it

[01:24:00.0000] <zcorpan>
you already have two wrapper elements (html and body)

[01:24:01.0000] <key>
is it supported to fix the width of body? isn't that something controlled by browser window width?

[01:24:02.0000] <zcorpan>
it's supported since ie6

[01:25:00.0000] <zcorpan>
if you care about ie5, you need a div

[01:25:01.0000] <key>
is it possible to fix the width of body, yet still have the body bgcolor affect the entirety of the browser window?

[01:25:02.0000] <zcorpan>
yes

[01:25:03.0000] <key>
ok nice. so what would the css look like to do something like this?

[01:51:00.0000] <jgraham>
/me wonders if the scrollback is worth reading

[01:51:01.0000] <jgraham>
/me wasn't convinced from skimming it

[01:52:00.0000] <annevk>
no

[01:55:00.0000] <jgraham>
annevk: I think it is quite OK to have those tests in seperate files fwiw

[01:56:00.0000] <jgraham>
From my sample of one, I expect that they are not very well constructed tests

[01:56:01.0000] <jgraham>
, however

[01:57:00.0000] <annevk>
Microsoft dumps all their poor quality tests again

[01:58:00.0000] <annevk>
at some point I should write about that, so there's at least some perspective about them on the web

[02:10:00.0000] <jgraham>
/me wonders what normatively specifies the toString of a DOM object

[02:10:01.0000] <jgraham>
Does WebIDL cover that

[02:10:02.0000] <jgraham>
?

[02:10:03.0000] <annevk>
think so

[02:16:00.0000] <Ms2ger>
AryehGregor, why are you reminding me of Sylow? :(

[02:18:00.0000] <zcorpan>
/me agrees with hsivonen about script src/readyState

[02:21:00.0000] <hsivonen>
zcorpan: maybe worth pointing out on the list if you dress it up more than "+1"

[02:29:00.0000] <zcorpan>
done

[02:43:00.0000] <key>
ok so if i wrap my web page document in a <div id="document">, i'll then modify #document to fix the width of the web page content and center it in body. sound proper?

[02:43:01.0000] <annevk>
fwiw, Michael Kay commented on the HTML is the new HTML5 post

[02:44:00.0000] <key>
?

[02:48:00.0000] <key>
im having some trouble figuring out how to structure my web page

[02:49:00.0000] <key>
the html

[02:51:00.0000] <annevk>
key, #html5 is probably a better place

[02:52:00.0000] <key>
it's more conceptual than those guys can probably handle

[02:52:01.0000] <key>
i need the spec authors' ear

[02:52:02.0000] <annevk>
no you don't

[02:55:00.0000] <key>
i have a main menu at the top of my page, then a section which has a section menu + the content. so would i do nav id=main-menu, then section id="section", then nav, then article?

[03:17:00.0000] <annevk>
events...

[03:18:00.0000] <annevk>
registration / dispatch / event flow for nodes / canceling...

[03:21:00.0000] <key>
http://www.pastie.org/private/z4e91xoa8dx8twu4etl2ua

[03:21:01.0000] <key>
how would you guys html that up?

[04:50:00.0000] <annevk>
trying to define events anew is tough

[04:50:01.0000] <annevk>
meh

[05:01:00.0000] <annevk>
I forgot how much a pain synthetic events were

[05:01:01.0000] <annevk>
create / initialize / dispatch

[05:01:02.0000] <annevk>
teehee

[05:02:00.0000] <jgraham>
Schadenfreude?

[05:02:01.0000] <jgraham>
Not the best quality in a spec editor

[05:03:00.0000] <jgraham>
Although rather a common one if existing specs are any guide

[05:05:00.0000] <annevk>
you missed </sarcarsm> somewhere

[05:05:01.0000] <annevk>
sarcasm even

[05:07:00.0000] <annevk>
I want to add the event model to Web DOM Core

[05:07:01.0000] <annevk>
I guess I should just start writing and start over a couple of times

[05:07:02.0000] <annevk>
just like with XMLHttpRequest

[05:08:00.0000] <annevk>
I have the basic model sorted out, but there's a lot of variables

[05:08:01.0000] <annevk>
(and then hope my description is better than DOM Events, otherwise there's no gain here)

[05:12:00.0000] <Dashiva>
</sadcarsm>

[05:22:00.0000] <karlcow>
if you can't write it, draw it

[05:23:00.0000] <jgraham>
Or fingerpaint.

[05:23:01.0000] <jgraham>
That should be fun

[05:24:00.0000] <jgraham>
Get all specs people together with those big squeezy tubes of poster paint

[05:24:01.0000] <jgraham>
And give everyone a red plastic apron

[05:26:00.0000] <Ms2ger>
And paint the bikeshed

[05:26:01.0000] <annevk>
events are so complex...

[05:27:00.0000] <annevk>
once you reach dispatch

[05:27:01.0000] <annevk>
there's a whole path

[05:27:02.0000] <annevk>
and for each object in the path

[05:27:03.0000] <annevk>
there's listeners

[05:27:04.0000] <annevk>
which you need to filter and keep ordened

[05:27:05.0000] <annevk>
and then execute synchronously

[05:27:06.0000] <annevk>
and depending on what that execution does

[05:27:07.0000] <annevk>
you may need to stop

[05:27:08.0000] <annevk>
or continue just for this object

[05:28:00.0000] <annevk>
or continue in general but not follow the link

[05:28:01.0000] <Ms2ger>
Hmm, does onfoo come before or after addEventListener?

[05:28:02.0000] <annevk>
it depends on when you set it

[05:28:03.0000] <gsnedders>
Does the order events are added have meaning normally?

[05:29:00.0000] <jgraham>
Yes

[05:29:01.0000] <jgraham>
Depending what you mean "normally"

[05:29:02.0000] <annevk>
listeners for an event have an order

[05:29:03.0000] <annevk>
and it's important

[05:29:04.0000] <annevk>
otherwise stopImmediatePropogation() would not make sense

[05:30:00.0000] <annevk>
not that I ever used that and not that this is not highly over engineered, but you know, it is important

[05:45:00.0000] <annevk>
what happens when events are dispatched in subtrees?

[05:45:01.0000] <annevk>
hey MikeSmith

[05:45:02.0000] <MikeSmith>
hola

[05:49:00.0000] <annevk>
e.g. if you have a DocumentFragment with an <a> element in it and you register a capture listener on DocumentFragment for 'click' and then invoke a.click()

[05:50:00.0000] <annevk>
I suppose that might potentially do weird things anyway given that the <a> is not in a document

[05:50:01.0000] <annevk>
:/

[05:50:02.0000] <Ms2ger>
And I guess people rely on whatever happens now

[05:52:00.0000] <annevk>
interesting

[05:52:01.0000] <annevk>
in Opera that works

[05:53:00.0000] <annevk>
in Firefox/Chrome <a> has no method click()?!

[05:53:01.0000] <Ms2ger>
Wut

[05:53:02.0000] <annevk>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/830

[05:55:00.0000] <annevk>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3Cscript%3E%0A%20w%28%22click%22%20in%20document.createElement%28%22a%22%29%29%0A%20%3C%2Fscript%3E

[05:56:00.0000] <annevk>
no idea what is going on here

[05:58:00.0000] <annevk>
if I change it to a synthetic events it seems events work in any kind of tree though

[05:59:00.0000] <annevk>
s/synthetic events/synthetic event

[06:00:00.0000] <Ms2ger>
That's only on button and input

[06:02:00.0000] <annevk>
click()?

[06:02:01.0000] <hsivonen>
MikeSmith: do you happen to have demo cases that trigger the code path that makes Jing report what would have been allowed based on the schema?

[06:02:02.0000] <annevk>
oh, I wonder why

[06:02:03.0000] <annevk>
it works in Opera

[06:03:00.0000] <MikeSmith>
hsivonen: some in http://dev.w3.org/html5/tests/validation/full/invalid/missing-attributes/

[06:03:01.0000] <MikeSmith>
if that's what you mean

[06:04:00.0000] <AryehGregor>
Ms2ger, you sound unhappy to be reminded of Sylow.  That's sad.  :(

[06:04:01.0000] <hsivonen>
MikeSmith: that's a spec extract, though

[06:05:00.0000] <hsivonen>
MikeSmith: what happened to adopting George Bina's Jing patch for generating messages from the schema?

[06:05:01.0000] <hsivonen>
/me has terrible memory

[06:06:00.0000] <Ms2ger>
AryehGregor, the theorems are fine, the proof isn't ;)

[06:07:00.0000] <hsivonen>
MikeSmith: ooh. now I see it. doh.

[06:07:01.0000] <MikeSmith>
hsivonen: I reduced George's patch to only reporting the element and attribute names

[06:07:02.0000] <AryehGregor>
Heck if I remember the proof.

[06:07:03.0000] <MikeSmith>
hsivonen: George's original dumped a string representation of the content model

[06:07:04.0000] <AryehGregor>
I've seen it two or three times, but I don't remember it at all.

[06:07:05.0000] <Ms2ger>
annevk, https://bugzilla.mozilla.org/show_bug.cgi?id=583514

[06:08:00.0000] <AryehGregor>
IIRC it's pretty tedious, the sort of proof you want to skim for form's sake instead of really understanding and remembering.

[06:08:01.0000] <Ms2ger>
My prof disagreed

[06:08:02.0000] <AryehGregor>
Heh.

[06:08:03.0000] <AryehGregor>
Worst proof I remember seeing in a textbook was the Lindemann-Weierstrass Theorem.

[06:09:00.0000] <AryehGregor>
It was several pages of completely ad hoc arguments involving a mix of Galois theory and complex analysis.

[06:09:01.0000] <AryehGregor>
At the time I didn't know any complex analysis, so I didn't even try.

[06:09:02.0000] <AryehGregor>
The result is very neat, though.

[06:30:00.0000] <annevk>
what if you remove an element from the DOM that still has event listeners attached to it while you just dispatched an event and that element was in its path?

[06:32:00.0000] <hsivonen>
I guess I need to test that script readyState stuff before commenting on it further

[06:33:00.0000] <annevk>
I remember there being some compat issues btw with IE script loading but it's been too long :/

[06:35:00.0000] <annevk>
current DOM event spec seems to suggest stuff is still dispatched

[06:36:00.0000] <annevk>
sounds like making garbage collection a pain...

[06:38:00.0000] <annevk>
the current DOM Events draft from shepazu also does not seem to take into account registering and unregistering of event handlers while other event handlers on the same object are being executed

[06:38:01.0000] <annevk>
I am pretty sure that ought to "just work"

[06:39:00.0000] <annevk>
which means the "event node path" is some kind of static list whereas everything else is pretty much live

[06:53:00.0000] <annevk>
so basically

[06:53:01.0000] <annevk>
when an event is dispatched on a node

[06:53:02.0000] <annevk>
you calculate its "event node path" and store it

[06:54:00.0000] <annevk>
then you start walking that, set currentTarget and target appropriately, and process the event listeners for each object in the "event node path" sequentially, taking modifications into account as they happen

[06:55:00.0000] <annevk>
all the while looking at the event object each step of the way to see if propagation has stopped, propagation has stopped immediately, or the event has been canceled

[06:56:00.0000] <annevk>
hmm, still not past this? http://html5doctor.com/html5-living-standard/

[07:03:00.0000] <annevk>
a lot of the complexity is basically dispatching on nodes

[07:05:00.0000] <hsivonen>
does a realistic spec for progress events exist?

[07:05:01.0000] <Ms2ger>
Anne has one

[07:06:00.0000] <Ms2ger>
http://dev.w3.org/2006/webapi/progress/

[07:06:01.0000] <hsivonen>
Ms2ger: thanks

[07:07:00.0000] <annevk>
mind you, Gecko has extensions and nobody has documented them so far or told me whether they need to be

[07:08:00.0000] <hsivonen>
:-(

[07:16:00.0000] <Ms2ger>
They're in the DOM LS spec

[07:18:00.0000] <annevk>
DOM LS is obsolete

[07:21:00.0000] <annevk>
Ms2ger, I might just check in some notes on Events as a comment

[07:21:01.0000] <Ms2ger>
Sure

[07:24:00.0000] <annevk>
if listeners are live you can create infinite loops

[07:24:01.0000] <annevk>
fun

[07:25:00.0000] <Ms2ger>
Infinite loops aren't hard, you can do them with loops

[07:25:01.0000] <hsivonen>
sigh. the progress events for scripts in IE are useless: http://hsivonen.iki.fi/test/moz/script-readystate.html

[07:26:00.0000] <hsivonen>
there's no event when readyState transitions to "loaded"

[07:26:01.0000] <hsivonen>
there's only an event for "complete" after the script has run

[07:29:00.0000] <annevk>
I do think this rewrite will make events easier to understand

[07:29:01.0000] <annevk>
teehee

[07:32:00.0000] <jgraham>
Hmm. How does one select text nodes in XPath? e.g. if I want the text node siblings of a given node?

[07:32:01.0000] <jgraham>
(XPath 1.0)

[07:34:00.0000] <beowulf>
does postmessage allow you to talk directly from one iframe to another x-domain without the parent window listening?

[07:34:01.0000] <annevk>
::preceding-sibling()::text() or some such?

[07:34:02.0000] <annevk>
/me forgot the syntax

[07:35:00.0000] <annevk>
preceding-sibling::text() it seems

[07:38:00.0000] <jgraham>
Ah, my mistake was assuming that * was short for node()

[07:39:00.0000] <annevk>
should just rtfs :p

[07:39:01.0000] <jgraham>
Well I was :p

[07:40:00.0000] <jgraham>
But I hadn't internalised the concept of principle node type

[07:40:01.0000] <annevk>
lies

[07:40:02.0000] <jgraham>
*principal

[07:41:00.0000] <hsivonen>
me wonders how often security principles and security principals get confused

[07:42:00.0000] <hsivonen>
ouch. IE seems to execute external scripts synchronously if the script has already finished fetching

[07:55:00.0000] <annevk>
hmm

[07:56:00.0000] <annevk>
nothing in both HTML and DOM Events suggests that "activation behavior" cancels the event once the first element has been activated as far as I can tell...

[07:56:01.0000] <annevk>
I guess I can look at that later

[08:00:00.0000] <annevk>
smaug____, the default action of an event, that happens when the event is through its entire propagation path?

[08:00:01.0000] <smaug____>
/me is in a meeting

[08:06:00.0000] <annevk>
this is pretty much though what sucks about the current spec

[08:07:00.0000] <annevk>
it's very hard to tell how things happen

[08:07:01.0000] <karlcow>
http://www.mobl-lang.org/

[08:24:00.0000] <annevk>
hmm

[08:24:01.0000] <annevk>
I guess default action is about object / event type / event trusted combination

[08:24:02.0000] <annevk>
not event target or such things

[08:25:00.0000] <annevk>
though default actions are probably only triggered in the target/bubble phase

[08:41:00.0000] <annevk>
so per

[08:41:01.0000] <annevk>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3Cbody%20onchange%3D%22event.preventDefault()%3Bw(event)%22%3E%3Cinput%20type%3Dradio%3E

[08:41:02.0000] <annevk>
you cannot prevent the default action in the bubbling phase

[08:42:00.0000] <annevk>
actually, when I move that onchange to the <input> it does not work either

[08:43:00.0000] <annevk>
ah, change is not cancelable

[08:43:01.0000] <annevk>
click is

[08:43:02.0000] <annevk>
until the very last moment

[08:45:00.0000] <annevk>
okay, so while the default action can happen earlier it can be undone until the very end

[08:57:00.0000] <annevk>
Ms2ger, https://bitbucket.org/ms2ger/web-dom-core/changeset/6c7a0c465d83

[08:57:01.0000] <Ms2ger>
Nice

[08:58:00.0000] <annevk>
I think I tackled the difficult part

[08:59:00.0000] <annevk>
I guess tomorrow I should draft all the concept-blahdieblahs

[09:05:00.0000] <annevk>
feel free to hack on it btw

[09:05:01.0000] <annevk>
might be online later tonight if I get tired

[09:33:00.0000] <TabAtkins>
jgraham: Some Chrome engineers want to submit bidi tests to the html5 test suite.  What's the best way to go about this?

[09:34:00.0000] <Ms2ger>
TabAtkins, push to Google's submission folder in hg and send email to the list

[09:34:01.0000] <Ms2ger>
(You need to be a WG member)

[09:37:00.0000] <jgraham>
What Ms2ger said

[09:37:01.0000] <Ms2ger>
Also, make markp fix his tests

[09:37:02.0000] <TabAtkins>
Okay.  The hg repo is just part of the W3C repo, right?

[09:37:03.0000] <jgraham>
dvcs.w3.org

[09:38:00.0000] <jgraham>
 /html

[09:39:00.0000] <TabAtkins>
Is there a format guide?

[09:40:00.0000] <jgraham>
For what, the tests?

[09:40:01.0000] <jgraham>
Maybe on the wiki somewhere

[09:41:00.0000] <jgraham>
Basically the theory is either javascript tests using testharness.js (controversial), self-describing reftests (controversial) or manual tests (unwelcome)

[09:41:01.0000] <jgraham>
In tests/resources/testharness.js you will find documentation for that harness

[09:42:00.0000] <jgraham>
and apisample.html should give some idea of how to use it

[09:42:01.0000] <TabAtkins>
Yay.

[09:42:02.0000] <Ms2ger>
s/controversial/IE team doesn't like/, s/unwelcome/IE team likes/

[09:43:00.0000] <jgraham>
Well the first controversial is more like "Mozilla team doesn't like"

[09:44:00.0000] <Ms2ger>
Well, they are rather verbose

[09:55:00.0000] <jgraham>
TabAtkins: http://www.w3.org/html/wg/wiki/Testing is the wiki page btw

[09:57:00.0000] <TabAtkins>
Ah, thank you.

[09:57:01.0000] <jgraham>
It doesn't actually tell you anything useful about how to write a test

[10:01:00.0000] <jgraham>
Or rather about the types of test that are allowed

[10:02:00.0000] <TabAtkins>
I just told them to either use the harness (and pointed them to the links you gave me) or make reftests (and pointed them to CSS's guides on how to make those).

[10:03:00.0000] <jgraham>
TabAtkins: Sounds perfect

[10:04:00.0000] <jgraham>
(CSS requires self-describing reftests, right?)

[10:04:01.0000] <TabAtkins>
It does now.

[11:16:00.0000] <Sirisian|Work>
Are there implementors here that write prototypes for firefox or chrome?

[11:17:00.0000] <paul_irish>
i'm not sure what you're asking, but i'm fairly sure the short answer is yes.

[11:17:01.0000] <Sirisian|Work>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=9557#c4

[11:17:02.0000] <Sirisian|Work>
Maybe someone here that does that could prototype that in one of the browsers. Would be nice.

[11:21:00.0000] <Sirisian|Work>
I made a post to the public-webapps mailing list also since Doug said it would gain more interest that way. Curious if more people are interested nowadays. Seemed like only one or two people cared a year ago for mouse capture.

[11:21:01.0000] <TabAtkins>
Well, mouse capture is obviously a *requirement* for serious gaming on the web.  You simple can't do mouselook without it.

[11:25:00.0000] <erlehmann>
one day, i will make a shock site using all the new APIs :3

[11:40:00.0000] <Sirisian|Work>
TabAtkins, tell me about it. I made that bug report a year ago when I was working on WebGL tests thinking it would magically get added. :P

[12:36:00.0000] <Hixie>
hsivonen: yt?

[12:50:00.0000] <webr3>
hsivonen, just remembered, good mail re rdfa in html being subject to second guessing under html wg, fair and valid point - will be interested to see follow up responses (speaking for myself of course)

[13:09:00.0000] <Hixie>
is XSLTProcessor defined anywhere?

[13:09:01.0000] <Ms2ger>
Doubt it

[13:11:00.0000] <webr3>
Hixie, possibly in some form in http://www.w3.org/TR/xslt20/ (I'd guess)

[13:11:01.0000] <Hixie>
i don't see any dom stuff at all in there

[13:12:00.0000] <othermaciej>
Mozilla has docs

[13:12:01.0000] <othermaciej>
from the lack of citation of a standard, I'd assume there is none

[13:13:00.0000] <webr3>
likewise, would be surprised if there was dom stuff tbh

[13:14:00.0000] <webr3>
are theer any specs or work done related to different interface devices, like barcode scanners etc?

[13:14:01.0000] <Ms2ger>
<device>

[13:14:02.0000] <TabAtkins>
Barcode scanners are just keyboard devices.

[13:15:00.0000] <TabAtkins>
In general, though, yeah, <device>.  I've been poking around, looking for someone to help spec using <device> with HID devices.

[13:15:01.0000] <TabAtkins>
So that we can, for example, get access to game controllers.

[13:15:02.0000] <webr3>
lol I hadn't even noticed the <device> element - better read up

[13:16:00.0000] <TabAtkins>
Don't read too much into what the spec says.

[13:16:01.0000] <Hixie>
game controllers should just be event handlers

[13:16:02.0000] <othermaciej>
the implied permissions model of <device> doesn't make sense for game controllers

[13:17:00.0000] <othermaciej>
game controllers seem more like the keyboard, mouse, accelerometer or compass

[13:17:01.0000] <Hixie>
i think i'm convinced by the arguments by othermaciej, roc, and jamesr_, that we should just do things like ff4's geolocation rather than have an element for selecting a device

[13:17:02.0000] <Hixie>
though clickjacking has to be resolved first

[13:17:03.0000] <TabAtkins>
What do you mean, like just exposing an API for it directly, rather than through an element?

[13:17:04.0000] <Hixie>
yeah

[13:18:00.0000] <TabAtkins>
I agree with that.

[13:18:01.0000] <jamesr_>
i think we should start with some actual concrete use cases

[13:18:02.0000] <jamesr_>
the right API for game controllers is probably not the same as the API for a webcam

[13:18:03.0000] <Hixie>
concrete cases are easy

[13:18:04.0000] <Hixie>
(for webcam)

[13:18:05.0000] <TabAtkins>
othermaciej: So, I'm sympathetic to your position.  Any ideas on how you would listen for arbitrary controller buttons?

[13:18:06.0000] <Hixie>
gmail's video chat

[13:18:07.0000] <othermaciej>
no idea

[13:19:00.0000] <Hixie>
TabAtkins: this is actually already specced, it's a combination of the mousewheel and keyboard event interfaces imho

[13:19:01.0000] <Hixie>
what i think would be even more useful is exposing the mac remote

[13:19:02.0000] <Hixie>
to web pages

[13:19:03.0000] <TabAtkins>
jamesr_: The current <device> API is just a way of asking the user for a hardware stream.  The individual stream objects can have specialized interfaces.

[13:19:04.0000] <TabAtkins>
Hixie: Where is it specced?

[13:19:05.0000] <Hixie>
i'm tired of having to use remote desktop to pause hulu instead of just being able to use the remote

[13:19:06.0000] <jamesr_>
TabAtkins: yeah, that's kind of not the point. the API you want and the permissions around it depend on _what_ is in the stream

[13:20:00.0000] <TabAtkins>
jamesr_: A valid point.

[13:20:01.0000] <Hixie>
TabAtkins: the old dom3 note had a simple way of exposing any key-like input

[13:20:02.0000] <jamesr_>
i think treating everything as "a stream of data from the hardware" is throwing away lots of useful information

[13:20:03.0000] <othermaciej>
I don't know anything about what data is typically exposed by a game controller

[13:20:04.0000] <Hixie>
TabAtkins: not sure where the mousewheel stuff is

[13:20:05.0000] <jamesr_>
when the sorts of data are really different

[13:20:06.0000] <jamesr_>
and i don't know of anyone that really wants to solve this for every type of hardware in the world. people care about particular use cases (webcam, microphone, controller) that will probably need different APIs

[13:20:07.0000] <Hixie>
of course if you're talking about modern controllers with their accellerometers and so forth, that's a different ballgame

[13:21:00.0000] <othermaciej>
old school controllers have buttons/triggers and the analog stick

[13:21:01.0000] <Ms2ger>
jamesr_, the idea is that you get an object that implements a specialized API

[13:21:02.0000] <othermaciej>
but in some cases buttons are themselves pressure-sensitive/analog, not binary on/off

[13:21:03.0000] <jamesr_>
Ms2ger: then what's the value of <device> at all?

[13:21:04.0000] <Ms2ger>
Getting that object

[13:21:05.0000] <webr3>
would it even be possible to define an api that could be used by all devices of one category? or would it have to be more of an on demand loadDeviceAPI(foo) type thing

[13:21:06.0000] <webr3>
(like crypto in firefox)

[13:22:00.0000] <Hixie>
jamesr_: the value was the permissions model. but i don't think anyone is advocating for <device> anymore.

[13:22:01.0000] <othermaciej>
some kinds of devices have a meaningful common interface

[13:23:00.0000] <webr3>
it's a wonder there isn't already a game device api somewhere from game manufacturors that could be ported and used (game devices just being an example)

[13:23:01.0000] <othermaciej>
Apple remote would be easy to expose as just key presses

[13:23:02.0000] <roc>
I think it's "USB"

[13:23:03.0000] <Hixie>
othermaciej: yeah

[13:23:04.0000] <Hixie>
othermaciej: we should do that

[13:23:05.0000] <TabAtkins>
Well, "HID".

[13:23:06.0000] <Hixie>
othermaciej: it would be awesome

[13:24:00.0000] <TabAtkins>
HID is a simplification of generic USB, and you can simplify it further.

[13:24:01.0000] <othermaciej>
USB is not generally a useful application-level interface for many kinds of USB devices

[13:24:02.0000] <webr3>
remote api for html? that'd be sweet, especially w/ tv and web wgs coming up

[13:25:00.0000] <darrel>
TabAtkins:  Barcode scanning input needs to be differentiated from keyboard input to avoid need for control focus.

[13:26:00.0000] <TabAtkins>
darrel: I wouldn't know.  My old company's product just installed a keylogger and listened for Alt+F12 to indicate that it should steal focus.

[13:26:01.0000] <webr3>
is there a set of requirements for what barcode scanners would need? if something was down I doublt it'd be the msot difficult thing to cater for, and probably worth it given all the html based pos terminals

[13:27:00.0000] <darrel>
TabAtkins:  Alt+F12 was encoded into the barcode?

[13:27:01.0000] <TabAtkins>
darrel: Yes.

[13:28:00.0000] <darrel>
TabAtkins: Our enterprise app reads direct from the serial port and treats it as distinct input and we don't mess with the user's focus.

[13:28:01.0000] <TabAtkins>
Oh, your scanner plugs into the serial?  Ours was, like I said, just a USB device that masqueraded as a keyboard.

[13:28:02.0000] <darrel>
TabAtkins: Interesting workaround though.

[13:29:00.0000] <Ms2ger>
darrel, almost sounds like you're professionals

[13:29:01.0000] <TabAtkins>
You could open up Notepad and scan barcodes in.

[13:29:02.0000] <darrel>
Ms2ger: hehe

[13:29:03.0000] <Hixie>
othermaciej: i was thinking we should map the remote keys to up, down, left, right, and space (i'm guessing apple won't want to expose the menu key since it goes into front row), with the events having .location set to DOM_KEY_LOCATION_REMOTE (0x06, a new value)

[13:30:00.0000] <TabAtkins>
Hixie: Would they be events just fired at window or something?

[13:30:01.0000] <Hixie>
just regular key events, fired like normal keyboard events at whatever has focus

[13:30:02.0000] <othermaciej>
Hixie: when/if we do this, we'd probably want to give <video> and <audio> default actions for the relevant events that DTRT

[13:30:03.0000] <TabAtkins>
Ah, kk.

[13:30:04.0000] <othermaciej>
so I dunno if we'd want to overload arrow keys

[13:30:05.0000] <Hixie>
othermaciej: yeah, that would just be the UA default action

[13:30:06.0000] <Hixie>
othermaciej: well the UA would check the .location

[13:31:00.0000] <Hixie>
othermaciej: the idea is just to make the thing already work on pages that use spacebar for pause/play

[13:31:01.0000] <Hixie>
othermaciej: without us having to do anything

[13:31:02.0000] <webr3>
darrel, last time i did a POS system (6 years ago?) we just programmed the devices to send a /n char code after the barcode because they too masqueraded as keyboard devices

[13:31:03.0000] <TabAtkins>
Masquerading as keyboards makes it easy to test if they're working.  ^_^

[13:32:00.0000] <darrel>
webr3:  I realize it is a common approach, it just is less flexible.

[13:32:01.0000] <TabAtkins>
darrel: Plus it means you have to know how to deal with virus scanners killing your keylogger.

[13:33:00.0000] <TabAtkins>
/me shudders at the memory of a McAfee update that quarantined the logger for everyone.

[13:33:01.0000] <darrel>
TabAtkins:  I hadn't thought of that side benefit :-)

[13:34:00.0000] <key>
http://www.pastie.org/private/z4e91xoa8dx8twu4etl2ua <-- RFC

[13:35:00.0000] <TabAtkins>
darrel: Actually, I remember how it worked now.  The Alt+F12 wasn't in the barcode.  We had programming sheets you would initialize the scanner with before first use that would prepend any entry with that chord, though.

[13:35:01.0000] <hsivonen>
Hixie: I'm here briefly

[13:36:00.0000] <darrel>
TabAtkins:  Yeah, barcode scanners have all sorts of funcky methods to customize the output to work around old VT terminal based software.

[13:37:00.0000] <Hixie>
hsivonen: i was going to ask a question about your scripting bugs; ended up just asking them in the bugs instead

[13:40:00.0000] <Ms2ger>
Yay, I'm in the spec!

[13:41:00.0000] <gsnedders>
Transatlantic flights without a Saturday stayover are so expensive…

[13:41:01.0000] <Ms2ger>
Hixie, not sure why the DOMParser part is commented out

[13:42:00.0000] <TabAtkins>
gsnedders: So add a saturday stayover.

[13:43:00.0000] <Ms2ger>
Still expensive

[13:43:01.0000] <gsnedders>
Ms2ger: Half the price.

[13:43:02.0000] <gsnedders>
Ms2ger: Or a third with some airlines.

[13:44:00.0000] <gsnedders>
TabAtkins: Tempting. I'm at a concert the Saturday before going, so can't leave till Sunday, and need to be in uni by 16:00 on Monday.

[13:45:00.0000] <jamesr_>
if it's a third of the price, buy two trips and fly half of each?

[13:45:01.0000] <jamesr_>
it'd have to be the first half of each, obv

[13:46:00.0000] <gsnedders>
jamesr_: Hah, yeah, true :)

[13:46:01.0000] <TabAtkins>
gsnedders: What james said.  Exploit airline stupidity by counter-gouging them.

[13:46:02.0000] <gsnedders>
jamesr_: There are more reasonable airlines where that isn't case. :)

[13:46:03.0000] <TabAtkins>
Also: then use the return leg of each flight to take a second trip a few weeks later.

[13:47:00.0000] <gsnedders>
BA is by far the worse for this. It goes from £500 return to £1800.

[13:47:01.0000] <TabAtkins>
Bleh.

[13:47:02.0000] <Ms2ger>
Make sure they don't cancel your return flight because you didn't turn up for the first, though

[13:48:00.0000] <TabAtkins>
They will, without question.  You have to use the first leg for this.

[13:48:01.0000] <TabAtkins>
They are stupid assholes for it and I hate them.

[13:48:02.0000] <TabAtkins>
Grrrrr.

[13:48:03.0000] <TabAtkins>
/me had a bad experience with trying to innocently reshuffle international flights after my plans changed.

[13:49:00.0000] <gsnedders>
1:15 to change from a transatlantic flight to a domestic flight at LHR. Why do I doubt that is reasonable?

[13:49:01.0000] <Ms2ger>
I suspect because it isn't :)

[13:49:02.0000] <Hixie>
Ms2ger: commented out?

[13:50:00.0000] <Ms2ger>
..nts, <!--scripts in <code>DOMParser..

[13:50:01.0000] <Hixie>
oh, oops

[13:50:02.0000] <Hixie>
got the wrong line

[13:54:00.0000] <Ms2ger>
Thanks

[13:55:00.0000] <Philip`>
About game controllers: As far as I'm aware, the common API seems to be like in http://google.com/codesearch/p?hl=en#PPdD7__6Qbg/src/xboxmsg.hpp - a load of 1/8/16-bit values which it constantly transmits over USB

[13:56:00.0000] <Philip`>
and if you want button events then you have to poll it (and if it's a more-than-1-bit button apply some threshold)

[13:57:00.0000] <Philip`>
I don't know what high-level application APIs tend to do with that raw data, though

[13:58:00.0000] <Philip`>
(except SDL which makes it look like a joystick, so you have lots of button events and some pollable axes)

[13:58:01.0000] <gsnedders>
Anyone know if you have a transfer at EWR going from SFO to GLA whether you have to go through security again, because you're going on a transatlantic flight?

[13:59:00.0000] <gwillen>
typically you will not have to go through security a second time between a US-US hop and an international hop; but in the reverse direction (after an international hop, before boarding a domestic hop) you will

[14:00:00.0000] <key>
http://www.pastie.org/private/z4e91xoa8dx8twu4etl2ua <-- RFC

[14:01:00.0000] <gsnedders>
gwillen: Yeah, I know there's always immigration going into the US

[14:01:01.0000] <gsnedders>
/me wonders if it is reasonable to stay until the Sunday in CA, and arrive at 6:30am at GLA then go to uni that day…

[14:03:00.0000] <hsivonen>
Hixie: it's a bit annoying to have important information about XSLTProcessor commented out

[14:03:01.0000] <hsivonen>
Hixie: notes aren't normative, so surely they can mention stuff that doesn't normatively exist yet

[14:04:00.0000] <jamesr_>
gsnedders: you go through security twice in some airports. for example when going international -> LAX -> domestic, in LAX you first go through immigration then go _outside the airport_ then go through domestic security before boarding the second flight

[14:04:01.0000] <jamesr_>
it's super stupid

[14:04:02.0000] <jamesr_>
dunno if any other US airports are designed that poorly

[14:05:00.0000] <gsnedders>
Newark is the interesting one.

[14:05:01.0000] <jamesr_>
newark is awful

[14:07:00.0000] <gsnedders>
Well, it's the only airport with direct flights to Glasgow, though

[14:12:00.0000] <wpollock>
Anyone there?  I'd like to discuss charset for a moment.

[14:16:00.0000] <wpollock>
I have never understood why, when the document declares a different charset than the web server sets in the document's header, why any web browser would choose to believe the web server and not the document author.  Using .htaccess files is not a production web server best practice (large performance penalty for using), and modifying the httpd.conf file (or equivalent) for every document...

[14:17:00.0000] <wpollock>
...added or updated seems ridiculous to me.  The charset declared in the HTTP header should be a fall back default, used only if the document doesn't supply a valid one.  The proper place for defining this, it seems to me, would be the DOCTYPE declaration.  The the issue I have with charset is that you can only set one for an entire document.  HTML 5 allows a charset attribute on tags that...

[14:17:01.0000] <wpollock>
..."import" content.  But many single documents have parts that are editable or come from multiple sources.  (Think of forms, blogs and forums, and mash-ups produced by, say PHP, from multiple sources.)  It may not be technically feasible, but charset should be an allowed attribute on EVERY block-level element.  At the very least, on ARTICLE, DIV, SECTION, and the like.

[14:17:02.0000] <key>
ok, http://www.pastie.org/private/z4e91xoa8dx8twu4etl2ua RFC?

[14:17:03.0000] <key>
i need to make sure i understand html 5 semantic tags properly

[14:24:00.0000] <TabAtkins>
wpollock: Easier solution: Use utf-8 everywhere.

[14:30:00.0000] <wpollock>
I do use utf-8 everywhere, but some websites that host my pages aren't set to that, so I'm stuck.  (Also, utf-8 is an English-centric encoding, it seems politically incorrect to insist on it everywhere!)

[14:30:01.0000] <jcranmer>
well, most metadata is written using US-ASCII

[14:31:00.0000] <jcranmer>
so UTF-8 is no worse than UTF-16 for most text, and is generally better

[14:32:00.0000] <TabAtkins>
wpollock: The argument that utf-8 is english-centric is pretty misinformed.  For HTML pages, utf-8 is almost always better than other encodings that are more specialized for cjk content, due to the large amount of ascii text used in HTML source code.

[14:32:01.0000] <key>
ok, http://www.pastie.org/private/z4e91xoa8dx8twu4etl2ua RFC?

[14:32:02.0000] <TabAtkins>
Second, political correctness takes a back seat to everyone in the world using a single well-defined encoding.

[14:33:00.0000] <wpollock>
I like utf-8.  I single encoding everywhere makes life easy.  If you can't do that, I wanted to know why the HTTP header should be believed over the document author?  And I wanted to know why different parts of a web application couldn't have different encodings used?

[14:33:01.0000] <Hixie>
hsivonen: i'm happy to uncomment it out, all i need is a url for [XSLTP] -- doesn't have to be normative

[14:33:02.0000] <Hixie>
hsivonen: unfortunately i couldn't find anything like a canonical URL for it

[14:35:00.0000] <jcranmer>
UTF-8 may suck, but the only other really tenable encoding is UTF-16

[14:35:01.0000] <jcranmer>
and UTF-16 causes as much problems as it solves, due to the plane issue

[14:37:00.0000] <key>
why do we never get to a point in tech where things just work and are perfect?

[14:37:01.0000] <key>
we have the benefit of digital systems

[14:37:02.0000] <key>
we don't have 'lossyness' of mechanical systems, yet they seem stronger

[14:39:00.0000] <TabAtkins>
jcranmer: Why does utf-8 suck?

[14:40:00.0000] <roc>
UTF8 doesn't suck, it's the best of all worlds

[14:40:01.0000] <roc>
it's certainly strictly better than UTF16

[14:40:02.0000] <TabAtkins>
Come now, that's an exaggeration.  In the best world, utf-32's memory footprint would be irrelevant, and we could just use that.

[14:40:03.0000] <othermaciej>
UTF8 is not the best of all worlds

[14:41:00.0000] <othermaciej>
but UTF16 is the worst of all worlds

[14:41:01.0000] <othermaciej>
it has almost all the disadvantages of both UTF-8 and UTF-32

[14:41:02.0000] <roc>
ok, the best world is where everyone switches to English

[14:41:03.0000] <wpollock>
I don't think WHATWG or W3C can enforce a single encoding,  A pity, but what can be done is to allow web authors the ability to declare the charset of documents or parts of documents.  I'm not a member of whatwg (nor anyone important), but I feel strongly enough to spend time working on this if I can.  Is there anyone whom I can make this suggestion to, that could move it forward?  It...

[14:41:04.0000] <wpollock>
...doesn't seem to me that anyone objects to the idea, only that (like myself) we wish for a Utopian world of a single universal encoding of text files.  I don't think this work break backward compatibility (except in a good way, in that author declared charset would have more weight than HTTP declared charset).  Nor should it be technically difficult to implement.  It shouldn't cause any...

[14:41:05.0000] <wpollock>
...security holes (Indeed, it may close some!)  It may not be practical for other reasons, which is why I asked here.

[14:41:06.0000] <TabAtkins>
Ok, you got me there, roc.

[14:42:00.0000] <TabAtkins>
wpollock: We can indirectly enforce a single encoding, by making it hard to use odd encodings.

[14:44:00.0000] <key>
wpollock: you make a good point. it wouldn't be in the philosophy of the web to demand a single encoding, rather a markup syntax to allow declaration of encoding is ideal

[14:56:00.0000] <wpollock>
key: so what can be done about it?

[14:57:00.0000] <key>
i don't know if anything needs to be done about it. i like that there isn't a single enforced encoding

[14:57:01.0000] <key>
i like that there's, rather, an infrastructure allowing the use an declaration of an arbitrary set of encodings

[14:57:02.0000] <key>
to me that seems more open

[14:58:00.0000] <Philip`>
There are pages that declare a correct HTTP-level charset and an incorrect HTML-level charset, so you can't change the behaviour of browsers without causing some previously-working pages to stop working, so they won't make that change

[14:58:01.0000] <wpollock>
What I mean is, who do we go about changing the HTML standard, so the charset defined in the document overrides one set in the HTTP header?

[14:58:02.0000] <Philip`>
(regardless of whether it makes logical sense or not)

[14:58:03.0000] <TabAtkins>
wpollock: First, establish that what you propose is web-compatible.  I expect this will be the difficult part.

[14:59:00.0000] <wpollock>
Okay, but to whom do I submit my proposals?  I have no standing.  (Maybe this is a lost cause and I should just give it up before I annoy everyone?)

[14:59:01.0000] <TabAtkins>
Send email to the WHATWG list.

[15:00:00.0000] <key>
wpollock: improvement suggestions are never annoying to sane people

[15:00:01.0000] <key>
only to nazis and goblins

[15:00:02.0000] <TabAtkins>
Your standing is irrelevant, though the opinions of browser vendors do have somewhat more weight than the opinions of other people in practice (since they control what's in the browser).

[15:00:03.0000] <key>
i'd bypass whatwg and suggest it to a W3 or webstandards.org list

[15:00:04.0000] <TabAtkins>
But it's very likely that what you're proposing isn't web-compatible, so it can't be changed.

[15:01:00.0000] <key>
TabAtkins: why would it not be web compatible? i can see the http header being overridden by the document

[15:01:01.0000] <key>
hell, if anything it's more web compatible, considering how elements can carry a lang attribute to mix and match languages

[15:01:02.0000] <key>
same thing should exist for encodings, no?

[15:03:00.0000] <Philip`>
Users get very unhappy when pages that previously worked stop working, so the most important compatibility requirement is to avoid that happening

[15:03:01.0000] <Philip`>
It doesn't matter much if some previously incorrect pages start working, because users probably weren't using those pages anyway (given that they were broken)

[15:04:00.0000] <key>
what rsa key length is the common as of late?

[15:04:01.0000] <key>
is it still 2048 or larger?

[15:11:00.0000] <webr3>
we typically use 2048 or 4096

[15:12:00.0000] <wpollock>
Thanks, I will do that.  Suggestions can be annoying if made by ignorant (if well-intentioned) people.  I will make the two proposals, the second to allows charset attribute on any block level content.  Thanks for your time!

[15:20:00.0000] <realityking>
Mixing charsets inside one document sound like trouble to me.

[15:20:01.0000] <key>
really?

[15:20:02.0000] <Philip`>
Extremely

[15:21:00.0000] <key>
but wouldn't you need to? (read: UTN #22)

[15:21:01.0000] <key>
(http://unicode.org/notes/tn22/)

[15:21:02.0000] <Philip`>
Having the encoding indicators being encoded in their own encodings is always trouble

[15:21:03.0000] <key>
ah yea, true

[15:22:00.0000] <Philip`>
and having end-of-encoding indicators encoded in that encoding sounds worse

[15:22:01.0000] <Philip`>
and probably incompatible with efficient buffered decoder implementations

[15:23:00.0000] <TabAtkins>
What does UTN22 have to do with multiple encodings?

[15:24:00.0000] <Philip`>
/me doesn't understand why people would look at the complexity of the current character encoding system and decide that the solution to its problems is to add more complexity :-)

[15:29:00.0000] <karlcow>
http://norman.walsh.name/2011/02/08/html-xml

[15:29:01.0000] <key>
omg i need to get high so bad

[15:29:02.0000] <TabAtkins>
Okay, yeah, key's going back on ignore.  Goddammit.

[15:29:03.0000] <key>
you're such a little bitch Tab

[15:30:00.0000] <miketaylr>
O_o

[15:32:00.0000] <AryehGregor>
key, didn't you say you'd only flame us once a week?  You have to wait till Monday.

[15:33:00.0000] <key>
AryehGregor: yea, and i am intent on keeping that agreement, but Tab flipped out for something totally innocuous

[15:33:01.0000] <key>
many people self medicate legally and productively with 'teh ganja

[15:34:00.0000] <key>
AryehGregor: can i get your input on: http://www.pastie.org/private/z4e91xoa8dx8twu4etl2ua

[15:34:01.0000] <key>
(btw, maybe Tab was tempted by what i said, being a former closet stoner)

[15:35:00.0000] <key>
i'll be more sensitive to his addiction issues in the future

[15:37:00.0000] <AryehGregor>
What's the procedure for getting tests approved again?

[15:37:01.0000] <TabAtkins>
Send an email to the list.

[15:37:02.0000] <AryehGregor>
That seems inefficient, and annoying to everyone on the list.  At least it would be if we had a nontrivial number of tests being written.

[15:38:00.0000] <AryehGregor>
key, no real opinion.

[15:42:00.0000] <TabAtkins>
/me reads the list archives.

[15:43:00.0000] <TabAtkins>
Sigh, key, don't be stupid.  Alcohol is roughly equivalent to marijuana.  I like to drink.  However, I don't announce that I totally need to get drunk, because it's stupid and of no interest to *anyone ever*.  You were already on my shitlist for trolling, so hearing you make a stupid comment like that for no reason was adequate justification to perma-ignore you.

[15:43:01.0000] <TabAtkins>
(Note: you're still ignored.  Respond if you want, I don't care.)

[15:44:00.0000] <Hixie>
man, you're not doing a good job of ignoring him :-P

[15:44:01.0000] <TabAtkins>
Hah, indeed.

[15:44:02.0000] <AryehGregor>
This is why I never /ignore people.

[15:44:03.0000] <AryehGregor>
Waste of effort.

[15:45:00.0000] <TabAtkins>
AryehGregor: Really?  I find it useful.  I still have mookid ignored, for example, which has been productive the last few times he's showed up.

[15:45:01.0000] <hober>
I don't /ignore because I think it's important for channel regulars / ops to see what new entrants would see, to help cut down on crap

[15:46:00.0000] <TabAtkins>
We don't have an op, though, and can't meaningfully reduce crap.

[15:47:00.0000] <Hixie>
actually we do

[15:47:01.0000] <TabAtkins>
Oh right, we gained one a while ago.

[15:47:02.0000] <Hixie>
but it would be sad to kick people since we've gone 8 years without doing so

[15:47:03.0000] <Hixie>
even on the list i've only ever banned like 2 people

[15:47:04.0000] <Hixie>
and neither for more than 2 weeks

[15:49:00.0000] <hober>
yeah, I'm one of the ops, so just let me know when things get really out of hand :)

[15:53:00.0000] <key>
TabAtkins: i see your point, except you forget we're all humans here, not workbots. i come from old school IRC, where people actually had conversations and got to know each other

[15:54:00.0000] <AryehGregor>
We do that.

[15:54:01.0000] <Hixie>
speak for yourself

[15:54:02.0000] <Hixie>
i'm a bot

[15:54:03.0000] <Hixie>
just ask anyone

[15:54:04.0000] <AryehGregor>
Generally spam by channel regulars is tolerated if no one is trying to use the channel for anything serious at the time.

[15:55:00.0000] <AryehGregor>
I mean, I spent quite a while yesterday talking about group theory here.

[15:55:01.0000] <Hixie>
yeah dude

[15:55:02.0000] <Hixie>
why didn't we ban you

[15:55:03.0000] <AryehGregor>
But it's more annoying if someone says spammy stuff who doesn't have a substantial history of productive contributions.

[15:55:04.0000] <key>
you use the term spam too loosely there

[15:55:05.0000] <AryehGregor>
Deliberately.

[15:55:06.0000] <key>
you're incorrect in your use

[15:56:00.0000] <AryehGregor>
It's a valid colloquialism.

[15:57:00.0000] <key>
amongst sloppy noobs

[15:57:01.0000] <AryehGregor>
Okay, whatever.


2011-02-09
[16:01:00.0000] <karlcow>
Ice cream - 22 CAD - every flavours at http://iceshop.example.com/

[16:01:01.0000] <paul_irish>
the lack of ice cream at that URL is a supreme let-down, karl. :(

[16:01:02.0000] <karlcow>
;)

[16:02:00.0000] <karlcow>
example.com, example.org, example.net are my favorite URI space. You can define anything on them, they will be always persistent as long as they are reserved domains

[16:27:00.0000] <bga_>
http://demin.ws/norcpu/norcpu.html

[16:43:00.0000] <Hixie>
http://parsetree.validator.nu/ and http://james.html5.org/parsetree.html are both gone :-(

[20:30:00.0000] <Sirisian>
I have question. Is the Dom Level 3 Events implemented by any browser?

[20:32:00.0000] <Sirisian>
oh wait IE9 hmm

[20:36:00.0000] <karlcow>
http://mir.aculo.us/2011/02/08/visualizing-webkits-hardware-acceleration/

[21:04:00.0000] <paul_irish>
karlcow: http://peter.sh/experiments/chromium-command-line-switches/#show-composited-layer-borders

[21:05:00.0000] <paul_irish>
and --show-paint-rects  .. both very interesting

[21:52:00.0000] <hsivonen>
Hixie: https://developer.mozilla.org/en/Using_the_Mozilla_JavaScript_interface_to_XSL_Transformations

[00:21:00.0000] <jgraham>
/me is scared of the idea that the DOM should be unicode clean

[00:21:01.0000] <jgraham>
Seems like a big perf. concern for no gain

[00:22:00.0000] <annevk>
heh, I used to learn from books by David Flanagan and now he's using my work

[00:23:00.0000] <annevk>
jgraham, the DOM isn't "Unicode-clean"

[00:23:01.0000] <jgraham>
annevk: I know

[00:23:02.0000] <jgraham>
But Hixie wants it to be

[00:24:00.0000] <jgraham>
"That JS uses UTF-16 is a design mistake, but not one that we need to propagate

[00:24:01.0000] <jgraham>
to the entire platform, nor one that we need to enforce on other languages

[00:24:02.0000] <jgraham>
should they ever be added to the platform. As such, the DOM should be

[00:25:00.0000] <othermaciej>
jgraham: you got cut off there

[00:25:01.0000] <othermaciej>
what does "unicode clean" mean?

[00:25:02.0000] <annevk>
it means no surrogates

[00:26:00.0000] <jgraham>
othermaciej: Did I? Should end "UTF-16."

[00:26:01.0000] <annevk>
basically

[00:26:02.0000] <jgraham>
What annevk said

[00:26:03.0000] <othermaciej>
I don't even understand what that proposal means

[00:26:04.0000] <othermaciej>
jgraham: "UTF-16" doesn't seem like a logical ending to the paragraph you were quoting

[00:27:00.0000] <jgraham>
othermaciej: See Bug 11298

[00:27:01.0000] <othermaciej>
the last bit I saw was "should they ever be added to the platform. As such, the DOM should be"

[00:27:02.0000] <jgraham>
"Unicode-clean, not UTF-16."

[00:28:00.0000] <jgraham>
It feels like sanitizing every DOMString is a huge amount of effort for no gain

[00:28:01.0000] <annevk>
othermaciej, basically Hixie thinks that for most "string" operations you should get characters out of the string (by replacing surrogates with U+FFFD) before doing things with the string

[00:29:00.0000] <othermaciej>
I see, so other than the minor problems that JS string operations don't work like that and no other DOM operation works like that, neat idea

[00:30:00.0000] <annevk>
xhr.send() works like that, as you need to convert the data to UTF-8

[00:30:01.0000] <annevk>
but that's all I can remember

[00:30:02.0000] <jgraham>
Right, doing sanitization at the boundaries makes sense

[00:31:00.0000] <jgraham>
Doing it on every internal operation, not so much

[00:50:00.0000] <annevk>
jgraham, you should get james.html5.org back up

[00:50:01.0000] <jgraham>
Yes, I should

[00:50:02.0000] <annevk>
it seems at least http://james.html5.org/parsetree.html was used

[00:50:03.0000] <jgraham>
That needs to be updated, so I will do both

[00:52:00.0000] <annevk>
sweet

[01:05:00.0000] <hsivonen>
jgraham: I think Hixie is wrong to want the DOM to be Unicode clean

[01:05:01.0000] <hsivonen>
we should stop him before specs end up with too much damage

[01:06:00.0000] <hsivonen>
/me mumbles about the SVG API that supposedly counted Unicode characters. FAIL!

[01:06:01.0000] <annevk>
it's sort of similar to the i18n drive to canonicalize everything

[01:06:02.0000] <hsivonen>
annevk: I don't want to even think of that drive

[01:07:00.0000] <hsivonen>
I want to get code written today instead of spending the whole day ranting about canonicalization

[01:07:01.0000] <annevk>
:)

[01:07:02.0000] <othermaciej>
let's do something more productive, like rename URLs again

[01:08:00.0000] <othermaciej>
I think it needs to be called a "URU" now

[01:08:01.0000] <annevk>
Universal Resource Ugh

[01:09:00.0000] <annevk>
URB Universal Resource Bikeshed

[01:09:01.0000] <othermaciej>
URR Universal Resource Reference

[01:10:00.0000] <annevk>
Obviously you are forgetting about the thousands of implementations that handle URBs.

[01:10:01.0000] <annevk>
Your browser is worthless compared to my CMS.

[01:11:00.0000] <othermaciej>
well, URB and URR can be unified as Diversified Universal Resource Reference

[01:11:01.0000] <othermaciej>
as soon as the DURR spec is ready, we can start on converting all software

[01:12:00.0000] <annevk>
unified as diversified :)

[01:12:01.0000] <othermaciej>
so what ever happened to public-html-xml?

[01:13:00.0000] <othermaciej>
did everyone suddenly lose interest?

[01:13:01.0000] <annevk>
no, the next meeting is next week

[01:13:02.0000] <annevk>
the idea is for Norm to write up a document

[01:14:00.0000] <annevk>
it seems he wrote down a summary of some sort: http://norman.walsh.name/2011/02/08/html-xml

[01:15:00.0000] <annevk>
quite a good read actually and more or less matches what I think

[01:16:00.0000] <annevk>
not so much near the end though

[01:16:01.0000] <othermaciej>
he does rant a little about 42--

[01:17:00.0000] <annevk>
I wonder when we stop comparing markup languages with programming languages

[01:17:01.0000] <annevk>
It obviously fails when it comes to error handling...

[01:17:02.0000] <othermaciej>
who does that?

[01:18:00.0000] <annevk>
at the end of that post he writes a bit about Perl

[01:18:01.0000] <annevk>
and compares it with HTML

[01:18:02.0000] <annevk>
roc once wrote a great email about programming languages and markup

[01:19:00.0000] <othermaciej>
oh, right

[01:19:01.0000] <annevk>
I actually have it stored in my inbox, yay!

[01:19:02.0000] <annevk>
http://lists.w3.org/Archives/Public/www-tag/2008Dec/0132.html

[01:19:03.0000] <othermaciej>
imagine if, to use a perl module, you had to bind its namespace URI to a prefix

[01:20:00.0000] <othermaciej>
that's a good email

[01:20:01.0000] <othermaciej>
I knew from the subject that it must be a reply to Larry

[01:32:00.0000] <hsivonen>
calling browser vendors "niche implementors" even as a rhetoric device is a pretty much in the center of how the divergence happened in the first place

[01:33:00.0000] <hsivonen>
because it's effectively saying that the browsable Web is just a niche thing compared to everything else

[01:33:01.0000] <hsivonen>
so it was OK for everything else to diverge from it

[01:33:02.0000] <workmad3>
hsivonen: complaints about SOAP?

[01:34:00.0000] <hsivonen>
workmad3: I think "everything else" in this case includes not only SOAP but also serious technical writing publication workflows and Semantic Web stuff (to the extent RDF/XML is involved)

[01:42:00.0000] <annevk>
last night I had a thought of checking how much of the revised XML 1.0 (note that the version number stayed the same...) is actually implemented in browser and whether bug reports had been filed

[01:42:01.0000] <annevk>
my hypothesis was that it was not and that no reports were filed because nobody cares about XML in browsers

[01:43:00.0000] <annevk>
though I believe I did file a report for Opera which I believe has no duplicates (and no interest from anyone in fixing it)

[01:43:01.0000] <jgraham>
The whole allowed character range thing is crazy anyway :| (that's what changed, right?)

[01:43:02.0000] <othermaciej>
xml 1.0 version 5?

[01:44:00.0000] <annevk>
othermaciej, "fifth edition"

[01:45:00.0000] <othermaciej>
wait, XML 1.0 5E uses the XML 1.1 character set?

[01:45:01.0000] <othermaciej>
what the heck was the point of 1.1 then?

[01:45:02.0000] <annevk>
it obsoleted XML 1.1 actually

[01:45:03.0000] <annevk>
because it also removed the strict version checking

[01:45:04.0000] <annevk>
but XML 1.1 is not rescinded still

[01:45:05.0000] <annevk>
probably because IBM would go mental

[01:46:00.0000] <othermaciej>
none of this makes any sense

[01:46:01.0000] <jgraham>
othermaciej: bingo, we have a winner

[01:46:02.0000] <key>
sup

[01:46:03.0000] <annevk>
and then XML people like Michael Kay complain on the WHATWG blog about how standards are a contract

[01:47:00.0000] <annevk>
I do think this XML 1.0 change was for the better myself by the way

[01:47:01.0000] <annevk>
it's a gentle first step towards XML5

[01:47:02.0000] <othermaciej>
I love how they also made it an erratum to XML 1.0 4th edition

[01:47:03.0000] <othermaciej>
well, it's a better idea than XML 1.1 as a permanent incompatible fork

[01:47:04.0000] <othermaciej>
would've made more sense to do it in the first place though

[01:47:05.0000] <key>
what new could xml possibly need?

[01:47:06.0000] <key>
isn't it bloated enough by now hehe?

[01:55:00.0000] <hsivonen>
I thought 5th ed. didn't have the IBM thing from 1.1

[01:55:01.0000] <hsivonen>
/me looks

[01:56:00.0000] <annevk>
hsivonen, oh, it is incompatible in that sense

[01:56:01.0000] <hsivonen>
annevk: http://www.w3.org/TR/xml/#NT-S

[01:56:02.0000] <annevk>
hsivonen, but when you see a 1.1 labeled document now you can process it per "fifth edition" rules

[01:56:03.0000] <hsivonen>
5th ed. still has a sane definition of whitespace

[01:57:00.0000] <hsivonen>
no IBM mainframe gunk

[01:57:01.0000] <key>
ibm mainframe gunk?

[01:57:02.0000] <hsivonen>
key: for 1.1, they changed the definition of whitespace to include a character that allegedly was used in text on IBM mainframes

[01:58:00.0000] <hsivonen>
oh. wait. I'm looking at the worng thing in the spec

[01:58:01.0000] <hsivonen>
the magic happens in http://www.w3.org/TR/xml11/#sec-line-ends

[01:59:00.0000] <annevk>
hsivonen, the specific change I meant above with regards to replacing XML 1.1 is http://www.w3.org/TR/xml/#NT-VersionNum

[01:59:01.0000] <annevk>
contrast with http://www.w3.org/TR/2006/REC-xml-20060816/#NT-VersionNum

[01:59:02.0000] <othermaciej>
somehow, I feel like mainframes and XML are technologies meant for each other

[01:59:03.0000] <hsivonen>
annevk: oh, but IBM was wentioned

[02:00:00.0000] <hsivonen>
and http://www.w3.org/TR/xml11/#sec-line-ends has IBM written all over it

[02:00:01.0000] <hsivonen>
and that bit didn't make it to 5th ed. thank &Deity;!

[02:00:02.0000] <othermaciej>
entity not found

[02:01:00.0000] <annevk>
you are not well formed

[02:01:01.0000] <annevk>
please leave

[02:01:02.0000] <hsivonen>
http://lists.xml.org/archives/xml-dev/201007/msg00089.html

[02:07:00.0000] <jgraham>
hsivonen: The banks moving thier legacy systems sounds quite implausible.

[02:07:01.0000] <jgraham>
Well maybe banks would. Airlines wouldn't. But then neither would they use newfangled XML

[02:07:02.0000] <annevk>
always the pessimist

[02:07:03.0000] <annevk>
:)

[02:14:00.0000] <annevk>
joy: http://www.ykombinator.com/

[02:14:01.0000] <annevk>
oh, and a background: http://wlppr.com/2011/02/09/html-5

[02:17:00.0000] <key>
haha

[02:29:00.0000] <annevk>
cannot believe Norm actually thinks we want to create some barrier to entry

[02:30:00.0000] <annevk>
he wrote this on twitter: "I already suspect the established vendors are content to have the bar for new entrants set as high as possible."

[02:31:00.0000] <jgraham>
The bar for new entrants to the browser market is high because browsers are really complicated

[02:31:01.0000] <annevk>
it's like pretty much what we set out to fight against

[02:31:02.0000] <jgraham>
But we are bringing the bar down by documenting the right thing to do

[02:31:03.0000] <jgraham>
But maybe this is the wrong sort of barrier?

[02:31:04.0000] <annevk>
having to reverse engineer other browsers and that barrier being really high is why we do the things we do

[02:32:00.0000] <jgraham>
Possibly he doesn't mean browsers though

[02:32:01.0000] <annevk>
yeah he does

[02:32:02.0000] <annevk>
this was in the context of HTML

[02:32:03.0000] <annevk>
and the WHATWG in particular

[02:33:00.0000] <jgraham>
If you believe in all the stuff about people embedding custom vocabularies in the markup, then he could be talking about barrier to entry of defining the language semantics

[02:34:00.0000] <jgraham>
And be working on the assumption that special-purpose vocabularies will be processed by special purpose tools

[02:34:01.0000] <jgraham>
(of course it rather rests on the assumption that the additional data will be exposed via the DOM in just the same way as HTML

[02:35:00.0000] <jgraham>
rather than via e.g. microdata

[02:35:01.0000] <hsivonen>
Why is Kendall Clark using a photo of Noah Chomsky as his Twitter avatar?

[02:35:02.0000] <annevk>
jgraham, not given the context actually

[02:35:03.0000] <hsivonen>
annevk: yeah, that tweet from Norm is sad

[02:35:04.0000] <jgraham>
annevk: Pointer to context?

[02:35:05.0000] <annevk>
I replied btw

[02:36:00.0000] <hsivonen>
annevk: me, too

[02:36:01.0000] <hsivonen>
twice only

[02:36:02.0000] <annevk>
http://twitter.com/ndw/status/35097590135525376

[02:36:03.0000] <hsivonen>
I saw you replied thrice

[02:36:04.0000] <annevk>
I could have said more :)

[02:37:00.0000] <hsivonen>
s/Noah/Noam/

[02:39:00.0000] <jgraham>
Well I guess "existing vendors want to lock others out" is a easy position to take in the absence of evidence

[02:39:01.0000] <roc>
it's true that the barrier to new browsers is far too high

[02:40:00.0000] <annevk>
definitely

[02:41:00.0000] <annevk>
and I suppose more could be done to make it lower, but saying we are content with it being high...

[02:42:00.0000] <annevk>
competition is what keeps this thing alive

[02:43:00.0000] <annevk>
otherwise you just get another IE6 disaster

[02:43:01.0000] <annevk>
or NN4

[02:44:00.0000] <roc>
I can imagine alternative platforms to the Web that are simpler and therefore more amenable to new entrants

[02:44:01.0000] <roc>
I just can't see how to get there from here

[03:50:00.0000] <annevk>
oh heh, the images are meant to load on http://www.fixtheweb.net/

[03:59:00.0000] <AryehGregor>
What?

[04:00:00.0000] <annevk>
I clinked on that link and since images were taking over 10 seconds to load for me I wondered whether the site was making a point instead

[04:01:00.0000] <annevk>
but apparently it was just a little slow

[04:04:00.0000] <annevk>
seems mattur is doing some history project

[04:14:00.0000] <matjas>
TabAtkins: What’s up with your feed? Looks like it’s down, or is it just me?

[04:16:00.0000] <annevk>
whoa

[04:16:01.0000] <annevk>
http://lists.w3.org/Archives/Public/public-html/2011Feb/0188.html is the like the weakest objection ever

[04:16:02.0000] <annevk>
and also does not cite new arguments

[04:36:00.0000] <annevk>
can't believe mattur only has 100 followers

[04:37:00.0000] <annevk>
maybe the irony is hard to follow if you're not closely involved

[06:53:00.0000] <annevk>
http://www.w3.org/QA/2011/02/last_year_i_published_several.html look at that, HTML5 is generating money for the W3C!

[06:54:00.0000] <annevk>
http://www.w3.org/2011/01/w3c2011 -- W3C 2011: Select Priorities and Milestones

[06:55:00.0000] <annevk>
"W3C expects to advance HTML5 to Last Call in May 2011, including accessibility support for important new features." I wonder whether they argued long over that line

[06:58:00.0000] <annevk>
"Community Groups" thing seems somewhat interesting

[06:59:00.0000] <annevk>
though I guess another way of viewing that is postponing changing the W3C Process

[06:59:01.0000] <jgraham>
I like the fact that HTML5 gets a LC date but CSS2.1 doesn't get a dtae for Rec.

[07:00:00.0000] <jgraham>
Also, it says the testsuite is important but doesn't really say what they will do about making it good

[07:01:00.0000] <gsnedders>
jgraham: Date for REC depends upon a lot more, though

[07:01:01.0000] <gsnedders>
For LC only the WG needs to have consensus, a lot more needed for REC

[07:04:00.0000] <jgraham>
gsnedders: Given the makup of the two groups I would imagine it should be easier to get CSS2.1 to Rec. than HTML to agree on anything

[07:04:01.0000] <jgraham>
More pointless too, obviously

[07:04:02.0000] <gsnedders>
jgraham: Dunno how easy AC vote is going to be

[07:04:03.0000] <jgraham>
(well having a testsuite is good)

[07:05:00.0000] <jgraham>
(but it is good for its own sake not for having an implementation report)

[08:16:00.0000] <TabAtkins>
matjas: It works for me now.  Try again?

[08:17:00.0000] <matjas>
TabAtkins: yep, works now

[10:43:00.0000] <karlcow>
MikeSmith: http://kyoto-client.org/

[10:44:00.0000] <MikeSmith>
Kyoto Cabinet?

[10:44:01.0000] <MikeSmith>
not Tokyo Cabinet

[10:47:00.0000] <MikeSmith>
hmm, I guess it's the same developer and he end-of-lifed Tokyo a while back

[11:04:00.0000] <AryehGregor>
Okay, turns out WebKit's createContextualFragment() doesn't work too differently from Firefox, it was range.selectNode() that was buggy.

[11:05:00.0000] <hsivonen>
sigh. https://bugzilla.mozilla.org/show_bug.cgi?id=264871

[11:28:00.0000] <MikeSmith>
[[

[11:28:01.0000] <MikeSmith>
 I now

[11:28:02.0000] <MikeSmith>
frequently see ISO-8859-1 content mis-identified as cyrillic (windows-1251)

[11:28:03.0000] <MikeSmith>
which didn't happen before

[11:28:04.0000] <MikeSmith>
]]

[11:29:00.0000] <MikeSmith>
hsivonen: ↑

[11:29:01.0000] <MikeSmith>
that don't sound so good

[11:30:00.0000] <hsivonen>
MikeSmith: context?

[11:31:00.0000] <MikeSmith>
hsivonen: most recent comment posted to https://bugzilla.mozilla.org/show_bug.cgi?id=264871

[11:31:01.0000] <hsivonen>
MikeSmith: well, that's a good reason not to turn it on for everyone!

[11:32:00.0000] <MikeSmith>
I'd say

[11:34:00.0000] <MikeSmith>
hsivonen: btw, I got a short validator patch for review if you have a few minutes

[11:34:01.0000] <MikeSmith>
https://gist.github.com/819101#file_check_meta_refresh.diff

[11:35:00.0000] <MikeSmith>
and/or I can send you be e-mail

[11:35:01.0000] <MikeSmith>
this is for implementing a check for a change Hixie made recently

[11:35:02.0000] <MikeSmith>
https://gist.github.com/819101#file_check_meta_refresh.diff

[11:35:03.0000] <MikeSmith>
oops

[11:35:04.0000] <MikeSmith>
http://html5.org/tools/web-apps-tracker?from=5839&to=5840

[11:36:00.0000] <MikeSmith>
to disallow the URL part of meta refresh values from starting with an apostrophe or double-quote

[11:36:01.0000] <MikeSmith>
and to also to report an error for any leading/trailing whitespace in the URL part

[11:37:00.0000] <MikeSmith>
because the IRI checker itself allows leading/trailing whitespace now

[11:43:00.0000] <AryehGregor>
Hixie, createContextualFragment() tests: <http://aryeh.name/spec/dom-parsing-and-serialization/test/createContextualFragment.html> Any further ideas?  (Current spec, for reference: <http://html5.org/specs/dom-parsing.html#dom-range-createcontextualfragment>)

[11:43:01.0000] <AryehGregor>
The spec doesn't cover what happens if the Range's start isn't an Element.

[11:43:02.0000] <Hixie>
/me looks

[11:44:00.0000] <AryehGregor>
The spec is pretty short, so not much to test (given that I'm not testing the HTML parser proper beyond basic sanity checks).

[11:44:01.0000] <hsivonen>
MikeSmith: sorry, about to go to a telecon and not on a dev machine, so I eed to look at you patch later

[11:44:02.0000] <AryehGregor>
(which Opera fails, but I've confirmed that's a legitimate createContextualFragment() failure, it's inserting <body>s and stuff)

[11:44:03.0000] <MikeSmith>
hsivonen: no problem

[11:44:04.0000] <Hixie>
we'll have to test the fragment part of the parser at some point, but maybe not as part of this

[11:45:00.0000] <MikeSmith>
hsivonen: will e-mail it to you

[11:45:01.0000] <AryehGregor>
(also not testing XML, since I was told we aren't sure what we want to happen for XML, although the spec does specify behavior)

[11:45:02.0000] <hsivonen>
MikeSmith: thanks

[11:46:00.0000] <Hixie>
AryehGregor: test to make sure the end point of the range has no effect

[11:46:01.0000] <AryehGregor>
Oh, right.

[11:46:02.0000] <AryehGregor>
I thought of that but forgot to test it.

[11:47:00.0000] <Hixie>
AryehGregor: other than that, looks pretty reasonable to me.

[11:47:01.0000] <AryehGregor>
I mean, I remembered to test it but then later forgot again before I did it.

[11:47:02.0000] <Hixie>
AryehGregor: i'm not familiar enough with that api to really know where the bugs are, so i don't know what else to test :-)

[11:55:00.0000] <AryehGregor>
Okay, now I'll go back to writing DOM Range tests.

[11:56:00.0000] <AryehGregor>
That way I should get more familiar with browser bugs and not try to do silly things like use selectNode() anymore.

[11:56:01.0000] <Hixie>
heh

[11:57:00.0000] <AryehGregor>
(all the WebKit tests for createContextualRange() were failing, turns out range.selectNode(document.documentElement) actually puts the start in the Document object instead of the root element . . .)

[11:57:01.0000] <AryehGregor>
Actually, there's no spec for that method.

[11:57:02.0000] <AryehGregor>
So I'll write that first.

[12:02:00.0000] <Hixie>
can anyone find any ARIA on http://developer.yahoo.com/yui/examples/carousel/carousel-ariaplugin_source.html http://developer.yahoo.com/yui/examples/tabview/tabview-ariaplugin_clean.html or http://developer.yahoo.com/yui/examples/menu/menuwaiaria_source.html ?

[12:10:00.0000] <Peter`>
Hixie, carouselariaplugin.js seems to do that.

[12:29:00.0000] <Hixie>
Peter`: any idea how to turn it on?

[12:32:00.0000] <Peter`>
it's sniffing

[12:32:01.0000] <Peter`>
for Gecko >= 1.9 or IE >= 8

[12:34:00.0000] <Peter`>
seems to work in a firefox beta here

[12:40:00.0000] <Hixie>
ah, it avoids chrome

[12:40:01.0000] <Hixie>
man that's lame

[12:43:00.0000] <Hixie>
anyone here know anything about STUN/ICE/SDP?

[12:47:00.0000] <MikeSmith>
http://twitter.com/#!/tmpvar/status/34356630250328064 "xml namespaces suck. In related news, only 1 test left in level2"

[12:47:01.0000] <MikeSmith>
from implementor of jsdom for Node

[12:47:02.0000] <key>
if i have a main menu, structured with a UL, and wrapped with a semantic NAV, this makes sense to me. but then how should i handle the sub menu which shows for the main menu section selected? should my main menu include a nested UL for each section? or should server side scripting only nest a UL for the current section?

[12:48:00.0000] <key>
http://www.pastie.org/private/z4e91xoa8dx8twu4etl2ua

[12:48:01.0000] <key>
version 2

[12:51:00.0000] <deane>
Hi Mike

[12:53:00.0000] <MikeSmith>
hey deane

[12:54:00.0000] <key>
http://www.pastie.org/private/z4e91xoa8dx8twu4etl2ua <-- this is my question, version 2 (include all submenus whether they're active or not) or version 3 (have server only include submenu that is active)?

[12:54:01.0000] <deane>
sorry, haven't been online in ages

[12:58:00.0000] <MikeSmith>
deane: well, while you were away, somebody unfortunately summoned the Dark Lord Inglip and I reckon it's just a matter of time before he awakens to his full power and the world is destroyed

[12:59:00.0000] <MikeSmith>
in the mean time, there's an SVG f2f in Auckland soon

[12:59:01.0000] <MikeSmith>
Doug Schepers in attendance

[12:59:02.0000] <MikeSmith>
among others

[13:00:00.0000] <MikeSmith>
so good chance to meet some people while they're there

[13:02:00.0000] <deane>
MikeSmith: oh no, doesn't sound good mate :)

[13:03:00.0000] <Philip`>
http://html5.validator.nu/?doc=http://dvcs.w3.org/hg/html/raw-file/tip/tests/submission/AryehGregor/base64.html

[13:03:01.0000] <key>
is your name really mike smith? or a pseudonym

[13:03:02.0000] <Philip`>
I guess it'd be nice if it made a mention that the apparent problem is in the HTTP header

[13:06:00.0000] <AryehGregor>
Philip`, on the test list?

[13:08:00.0000] <Philip`>
?

[13:09:00.0000] <Philip`>
I just mean it'd be nice if the validator's error message said where the problem was

[13:09:01.0000] <AryehGregor>
Oh.

[13:09:02.0000] <AryehGregor>
"it", not "you".

[13:09:03.0000] <Philip`>
Now that I think about it, I suppose it'd also be nice if the dvcs server didn't trigger that error

[13:10:00.0000] <AryehGregor>
I'm not even sure what the error means.

[13:11:00.0000] <Philip`>
It means it saw Content-Type: text/html; charset="UTF-8"

[13:12:00.0000] <AryehGregor>
And what did it want?

[13:15:00.0000] <Philip`>
charset=UTF-8

[13:15:01.0000] <Philip`>
(I assume)

[13:16:00.0000] <AryehGregor>
So no quotes?

[13:16:01.0000] <key>
i'd use quotes

[13:16:02.0000] <key>
i always do

[13:17:00.0000] <TabAtkins>
Yes.

[13:23:00.0000] <key>
what's with people not using 6 characters for hex colors? like the #444 ?

[13:24:00.0000] <AryehGregor>
It's shorter.

[13:24:01.0000] <AryehGregor>
Equivalent to #444444.  So why not use it, if you don't care much for precision?

[13:25:00.0000] <key>
who said i don't care much for precision? i just said i always use quotes. <shrug>

[13:25:01.0000] <AryehGregor>
That part was in reply to "what's with people not using 6 characters for hex colors? like the #444 ?"

[13:25:02.0000] <key>
oh

[13:25:03.0000] <key>
so why not just #4 ?

[13:25:04.0000] <AryehGregor>
With three characters you have less precision, but often it doesn't matter.

[13:25:05.0000] <AryehGregor>
That's not legal.

[13:25:06.0000] <AryehGregor>
It has to be three or six.

[13:25:07.0000] <key>
when did this happen? 3 being valid

[13:26:00.0000] <AryehGregor>
It was always true, as far as I know.

[13:26:01.0000] <key>
interesting

[13:26:02.0000] <hsivonen>
can someone explain to me how the failure mode seen in https://bug631751.bugzilla.mozilla.org/attachment.cgi?id=509978 in Chrome arises?

[13:26:03.0000] <AryehGregor>
Back to the early days of CSS.

[13:26:04.0000] <key>
i was in web dev a lot back in the 90s, never saw it that way

[13:26:05.0000] <hsivonen>
(the page is BOMless unlabeled UTF-16)

[13:26:06.0000] <TabAtkins>
Yes, CSS has had both 3 and 6 hexit colors since the beginning.  Most applicatinos that accept hex colors understand the 3-hexit version, too.

[13:27:00.0000] <key>
what's hexit mean?

[13:27:01.0000] <hsivonen>
the failure mode in Firefox 4 and Safari 5 at least makes sense to me

[13:28:00.0000] <hsivonen>
is a heuristic encoding detector in Opera always enabled and not user-togglable?

[13:28:01.0000] <TabAtkins>
A hexit is a hexadecimal digit.

[13:28:02.0000] <TabAtkins>
Similar to how "bit" is a binary digit.

[13:29:00.0000] <hsivonen>
can someone with IE tell me how https://bug631751.bugzilla.mozilla.org/attachment.cgi?id=509978 works in IE? does IE detect UTF-16 or does it discard U+0000 ahead of tokenization?

[13:29:01.0000] <TabAtkins>
And "trit" for trinary digit.  Not sure if there are any more common words for digits in particular bases.

[13:29:02.0000] <hsivonen>
/me is without IE at this time of day

[13:30:00.0000] <hsivonen>
unlabeled BOMless UTF-16 is evil and makes me sad

[13:31:00.0000] <TabAtkins>
s/unlabeled BOMless //

[13:31:01.0000] <TabAtkins>
s/sad/HULK ANGRY/

[13:32:00.0000] <hsivonen>
TabAtkins: I was trying to be polite

[13:32:01.0000] <key>
whoa, i never knew bit was short for binary digit!

[13:32:02.0000] <key>
in all this time, damn

[13:32:03.0000] <key>
thanks TabAtkins!

[13:33:00.0000] <key>
i wonder why 7 bit bytes never took off

[13:34:00.0000] <key>
what was it about 8 that made it the clear winner?

[13:35:00.0000] <hsivonen>
key: smallest power of 2 that's enough for characters in American text

[13:36:00.0000] <webr3>
"power of 2" might be the overriding factor

[13:36:01.0000] <key>
interesting to think how the origin of 8 bit byte is so arbitrary, then

[13:37:00.0000] <key>
why would you need to have a byte based on power of 2? eg, why not a 7 bit byte, 9, etc

[13:40:00.0000] <webr3>
because computer memory is built on binary logic, so requires powers of 2?

[13:41:00.0000] <webr3>
/me apologies, was watching issue-129 cp1 get sent in to a black hole

[13:51:00.0000] <AryehGregor>
Why does Opera always fail so many tests compared to Gecko and WebKit?  http://aryeh.name/spec/dom-range/test/Range-selectNode.html

[13:51:01.0000] <AryehGregor>
This time it passes more tests than IE9 . . . one more test.

[13:53:00.0000] <jgraham>
AryehGregor: Because you are testing something we aren't very good at, possibly

[13:53:01.0000] <jgraham>
Or maybe we tried to copy IE rather than conform to any spec

[13:53:02.0000] <AryehGregor>
This is Ranges, IE didn't have them before IE9 AFAIK.

[13:54:00.0000] <hsivonen>
http://lists.w3.org/Archives/Public/www-rdf-comments/1998OctDec/0014.html is that a different David Singer from Apple's?

[13:54:01.0000] <jgraham>
Oh, well presumably we just didn't have good QA of this feature then

[13:54:02.0000] <AryehGregor>
Maybe you just have fewer compatibility reports than WebKit when copying Gecko stuff, so you wind up with a less correct implementation?

[13:54:03.0000] <jgraham>
and it hasn't caused many site-compat issues

[13:54:04.0000] <AryehGregor>
This is what specs and tests are for.  :)

[13:55:00.0000] <AryehGregor>
WebKit and Gecko presumably get compat reports faster than Opera does.

[13:56:00.0000] <jgraham>
afiak all the DOMRange stuff predates me woking at Opera, so I'm not in the best position to comment on it

[13:57:00.0000] <hsivonen>
it's a shame that http://www.w3.org/Member/Meeting/98JanAC/xml-req.html is confidential

[13:57:01.0000] <AryehGregor>
/me can now read it since he's a member via Google and not just a fake Invited Expert, yay

[13:58:00.0000] <AryehGregor>
hsivonen, can it be declassified somehow?

[13:58:01.0000] <hsivonen>
AryehGregor: I don't know

[13:58:02.0000] <hsivonen>
AryehGregor: maybe there's a Process for that. maybe not

[14:02:00.0000] <MikeSmith>
there is not process for that, unfortunately

[14:02:01.0000] <MikeSmith>
no afaik at least

[14:02:02.0000] <MikeSmith>
that's the general downside of making anything Secret to begin with

[14:02:03.0000] <MikeSmith>
as with governments or whatever else

[14:04:00.0000] <jgraham>
Governments are actually often quite reasonable at declassifying stuff after a while

[14:04:01.0000] <Philip`>
webr3: Power-of-two isn't a requirement - there were early computers that had e.g. 36-bit words, which could be split into e.g. 6-bit or 9-bit bytes

[14:06:00.0000] <jgraham>
hsivonen: It does seem to be a different David Singer, in case you didn't already find that out

[14:07:00.0000] <jgraham>
/me can't even find where you asked to see if someone answered

[14:07:01.0000] <jgraham>
Philip`: Power-of-two not being a requirement doesn't mean its not an advantage

[14:10:00.0000] <MikeSmith>
jgraham: I wouldn't say that the US government at least is quite reasonable about it

[14:10:01.0000] <annevk>
hsivonen, if you remind me tomorrow I will finally email what I found out about our heuristics

[14:10:02.0000] <annevk>
hsivonen, it's all in my inbox I just never went through it and posted a reply to your question

[14:10:03.0000] <annevk>
(though it's not a complete answer I'm afraid)

[14:12:00.0000] <hsivonen>
jgraham: ok. thanks

[14:12:01.0000] <hsivonen>
annevk: ok, I'll ping you tomorrow

[14:13:00.0000] <jgraham>
http://en.wikipedia.org/wiki/System/360 claims that the IBM 7030 had variable sized bytes

[14:14:00.0000] <annevk>
Hixie, btw, did I read correctly you want to give up on <device>?

[14:14:01.0000] <jgraham>
MikeSmith: With the Freedom of Information act and declassification of old documents it may be easier to get interesting historical information out of the UK government than W3C (as a non-Member). But I could be quite wrong

[14:14:02.0000] <annevk>
Hixie, sounds reasonable to me; wondering if you will make the change shortly?

[14:17:00.0000] <jgraham>
annevk: Where?

[14:18:00.0000] <annevk>
jgraham, IRC logs I guess

[14:20:00.0000] <Hixie>
annevk: i'm waiting to find someone who can write a spec for the STUN/ICE/SDP glue before working on that spec

[14:27:00.0000] <karlcow>
jgraham: how old must be the documents?

[14:28:00.0000] <karlcow>
(before being declassified)

[14:29:00.0000] <jgraham>
karlcow: No idea. Maybe rather old

[14:30:00.0000] <Philip`>
jgraham: It appears to be similar to how modern architectures let you read a variable number of units from the address of the highest unit, which in this case is 1/2/4/8 bytes but in the 7080 is 1-8 bits

[14:31:00.0000] <karlcow>
in France it seems in between 50 years and 100 years but also with a right to destroy the document before that (if we can trust wikipedia)

[14:33:00.0000] <Philip`>
(Addresses nowadays are 32/64 bits pointing at bytes; on the 7080 it seems to be 18-bit addresses pointing at 64-bit words, plus an extra 6 address bits to point to individual bits)

[14:38:00.0000] <karlcow>
http://googlecode.blogspot.com/2011/02/optimizing-your-site-for-tv-is-now.html

[14:38:01.0000] <Philip`>
s/7080/7030/g

[14:39:00.0000] <jgraham>
karlcow: 30 years seems to be somewhat normal though it has gine down to 20

[14:39:01.0000] <jgraham>
And of course you can opt to keep things secret

[14:40:00.0000] <karlcow>
yes

[14:40:01.0000] <karlcow>
one I would love to see public is the minutes of the 1998 workshop

[14:40:02.0000] <AryehGregor>
karlcow, I think in the US, you're allowed to request any information that doesn't fall under the exemptions, no matter how new.

[14:40:03.0000] <karlcow>
http://www.w3.org/MarkUp/future/htmlcall.html

[14:40:04.0000] <AryehGregor>
Of course, lots of stuff falls under the exemptions.

[14:42:00.0000] <karlcow>
http://www.w3.org/MarkUp/future/

[14:49:00.0000] <karlcow>
hsivonen: david singer is a different one from IBM

[14:49:01.0000] <karlcow>
http://www.w3.org/MarkUp/future/papers/singer/im-164149.htm

[14:50:00.0000] <karlcow>
# Some Requirements on the future of HTML

[14:52:00.0000] <jgraham>
The interesting thing is seeing people identify all the right issues and then make all the wrong choices for addressing them

[14:56:00.0000] <AryehGregor>
Well, it's easy to identify errors in hindsight.

[14:56:01.0000] <othermaciej_>
I love how that list of future requirements includes

[14:57:00.0000] <othermaciej_>
both "XML compliance" and "Toleration of bad markup"

[14:58:00.0000] <MikeSmith>
Strange Case of Dr Jekyll and Mr Hyde

[15:02:00.0000] <othermaciej>
and then he concludes that "Toleration of bad markup" is the requirement to be rejected

[15:03:00.0000] <deane>
jgraham: I agree

[15:35:00.0000] <karlcow>
the change proposal of hixie is huge

[15:42:00.0000] <AryehGregor>
Hixie, should we be aiming to get DOM Range accepted as a W3C spec someplace?

[15:42:01.0000] <Hixie>
*shrug*

[15:42:02.0000] <Hixie>
so long as the browsers are on board, i don't care personally who publishes it

[15:43:00.0000] <AryehGregor>
Particularly since IE9 is implementing the features, and quite possibly won't look at a spec on someone's Bitbucket account.

[15:43:01.0000] <annevk>
yeah, we should publish at WebApps

[15:43:02.0000] <annevk>
Ms2ger is a member of that group now on behalf of the Mozilla Foundation

[15:43:03.0000] <AryehGregor>
Oh, neat.

[15:44:00.0000] <annevk>
so he can get it published if it is difficult for you to join

[15:44:01.0000] <annevk>
as I guess he's still co-editor?

[15:45:00.0000] <deane>
It should be published at the WHATWG site, not at the W3C

[15:46:00.0000] <annevk>
oh, per http://html5.org/specs/dom-range.html he's the only editor

[15:47:00.0000] <annevk>
deane, publishing a spec on a couple of places should not be a big deal I think

[15:50:00.0000] <deane>
annevk, yeah, I guess

[15:50:01.0000] <deane>
Hixie, There's no such thing as "The HTML syntax" or "The XHTML syntax". HTML and XHTML are variants, formats, or languages (I prefer 'variants'). We have syntaxes *for* HTML, and we have syntaxes *for* XHTML, but those syntaxes themselves are not HTML or XHTML. This is important as it has caused many problems and confusions (and arguments :) ). HTML has many 'legal' syntaxes (for better or worse), on the other hand, XHTML has just a few 'legal'

[15:50:02.0000] <deane>
syntaxes.

[15:51:00.0000] <deane>
Hixie, It could/should read: "The HTML variant" or "The XHTML variant".

[15:54:00.0000] <deane>
Hixie, HTML and XHTML are distinguished by parsers, *not* syntaxes. We need to be spot on with our language here. Are you able to change it please. Thanks buddy.

[15:54:01.0000] <key>
RFC -> http://www.pastie.org/private/z4e91xoa8dx8twu4etl2ua

[15:55:00.0000] <Dashiva>
The not-actually-SGML variant

[15:56:00.0000] <AryehGregor>
annevk, I'm sort of a de facto editor of DOM Range now.  I assume I can join the Web Apps WG by asking Google to wave its magic wand, so that should be no trouble.

[15:57:00.0000] <annevk>
AryehGregor, you should put your name on it

[15:59:00.0000] <AryehGregor>
Probably.


2011-02-10
[16:01:00.0000] <deane>
How popular is the polyglot idea these days?

[16:01:01.0000] <key>
plz

[16:02:00.0000] <deane>
I think it's a silly idea

[16:02:01.0000] <AryehGregor>
Its popularity is the same as ever, negligible.

[16:03:00.0000] <Dashiva>
It's very popular among the people who like it

[16:03:01.0000] <AryehGregor>
Self-flagellation is also very popular among the people who like it.

[16:03:02.0000] <AryehGregor>
However, they're not representative of the general population.

[16:03:03.0000] <Dashiva>
Yeah, but I don't think anyone's writing a spec for that

[16:04:00.0000] <AryehGregor>
I'm fairly sure the details of self-flagellation can be left implementation-defined.

[16:04:01.0000] <Dashiva>
Yeah, there's no real need for interoperability

[16:04:02.0000] <AryehGregor>
There could be room for an informative best-practices document, though.

[16:05:00.0000] <deane>
It conflicts with the HTML WG design principles, for one thing

[16:05:01.0000] <key>
anyone?

[16:06:00.0000] <AryehGregor>
deane, if you want spec changes, you should either send a mail to the whatwg list or file a W3C bug.  IRC isn't effective, things will get lost.

[16:06:01.0000] <key>
i really need some strong minds to chime in on this conceptual issue.

[16:11:00.0000] <deane>
AryehGregor: Thanks, I'm aware of that. I preferred to just let Hixie become aware of it. Plus, I'm waiting for nameserver delegation before I can use my email again

[16:11:01.0000] <key>
bueller?

[16:12:00.0000] <deane>
DNS updates ever hour here is NZ

[16:12:01.0000] <annevk>
oh, Google Voice is international now

[16:12:02.0000] <key>
when did DNS start propagating in hourly intervals ?

[16:13:00.0000] <annevk>
I can call for free to Zakim it seems

[16:13:01.0000] <key>
DNS should update whenever the record's timeout is reached, no?

[16:15:00.0000] <TabAtkins>
Oh, I didn't realize international was free now.  Is it only free for calling into the US, or for any call?

[16:17:00.0000] <deane>
key: Sorry, I meant name server delegation. The records are updated on the hour here in New Zealand

[16:18:00.0000] <Sirisian>
omg. Web-apps needs to switch to a forum system. How people can follow mailing lists is insane.

[16:18:01.0000] <TabAtkins>
Sirisian: The first step is to get a proper mail client.  What do you use?

[16:19:00.0000] <annevk>
TabAtkins, free calling to the US, but I could not get Google Voice so far

[16:19:01.0000] <annevk>
oh geez

[16:19:02.0000] <annevk>
I should really sleep

[16:19:03.0000] <key>
hey guys, please comment on http://www.pastie.org/private/z4e91xoa8dx8twu4etl2ua

[16:19:04.0000] <jamesr_>
Sirisian: the webapps group does not have changing to a forum in its charter

[16:20:00.0000] <key>
the basic question is, include expanded full menu tree of a web site in every page, showing only appropriate menu sections with css. or use server side coding to include in each web page only the main menu + sub menu of current section

[16:20:01.0000] <key>
then not needing to use css to effectively 'hide' inactive sub menus

[16:21:00.0000] <Sirisian>
TabAtkins, yahoo mail

[16:21:01.0000] <Sirisian>
heh

[16:21:02.0000] <TabAtkins>
Sirisian: There's your problem.

[16:21:03.0000] <TabAtkins>
Get a threaded client with decent search.

[16:21:04.0000] <Sirisian>
name one.

[16:21:05.0000] <TabAtkins>
gmail

[16:21:06.0000] <jamesr_>
no love for my w3c process joke? sigh :(

[16:22:00.0000] <Sirisian>
If you guys want to join my movement: http://lists.w3.org/Archives/Public/public-webapps/2011JanMar/ <-- Mouse Capture for javascript. I need implementors more than other web developers though hmm.

[16:24:00.0000] <TabAtkins>
The majority of actives in this channel are implementors.

[16:25:00.0000] <Sirisian>
Good. I need a small army to kill doug maybe.

[16:25:01.0000] <Sirisian>
I mean er supporters to make a prototype >_>

[16:26:00.0000] <key>
i'm a developer

[16:27:00.0000] <Dashiva>
I'm a peanut

[16:27:01.0000] <tw2113>
my planet got demoted away from a planet

[16:29:00.0000] <tw2113>
freaking nasa

[16:30:00.0000] <TabAtkins>
With good reason.

[16:30:01.0000] <tw2113>
prejudice?

[16:30:02.0000] <tw2113>
:D

[16:31:00.0000] <TabAtkins>
Screw pluto.

[16:31:01.0000] <TabAtkins>
If it can't clean up its neighborhood, it doesn't deserve planethood.

[16:32:00.0000] <Hixie>
clean up its neighborhood? pluto is an itinerrant planet.

[16:32:01.0000] <TabAtkins>
We don't allow hobo planets.

[16:32:02.0000] <Hixie>
it can't even decide where it falls in the order of planets

[16:33:00.0000] <Hixie>
sometimes it's before neptune or not

[16:33:01.0000] <Hixie>
s/or not/sometimes it's after/

[16:36:00.0000] <ahume_>
Hi WG

[16:36:01.0000] <ahume_>
Is anyone aware of any conversation around best practises on stashing potentially sensitive data in client-side storage mechanisms? I notice Gmail's mobile app caches unencrypted email messages in a Web SQL db. Is anyone talking about the obvious attack vector there, not in regard to the spec as such, but just around best practise and, well frankly, common sense?

[16:37:00.0000] <TabAtkins>
Yes.  If you're vulnerable to attack, you're vulnerable no matter what the webapp does.  Use full-disk encryption.

[16:38:00.0000] <ahume_>
So you'd argue Gmail's approach is bad practise?

[16:38:01.0000] <TabAtkins>
No, the opposite.  GMail is just fine, because nothing it can do can protect against a compromised computer anyway.

[16:40:00.0000] <ahume_>
It somehow feels wrong, that I can log in to a site over SSL and when I'm done it's left behind unencrypted data on the client machine's hard drive for the next person to come along and read.

[16:40:01.0000] <annevk>
jamesr_, I chuckled ;)

[16:41:00.0000] <TabAtkins>
ahume_: Don't use public computers that don't clean themselves between sessions.

[16:41:01.0000] <jamesr_>
annevk: thank you :)

[16:42:00.0000] <TabAtkins>
ahume_: Or use incognito modes, which FF and Chrome both offer (and maybe other browsers?)

[16:43:00.0000] <ahume_>
Sure - works for me. But in reality people are doing just that everyday.

[16:43:01.0000] <ahume_>
 I'm not saying it's a problem for browser technology or a spec to solve, just that it seems like there should be some best practises for developers.

[16:44:00.0000] <jamesr_>
don't persist data on a machine you do not trust :)

[16:44:01.0000] <TabAtkins>
ahume_: The correct practice is for the owner of the computer to set it up properly.

[16:45:00.0000] <TabAtkins>
For example, ChromeOS has a Guest mode, which automatically makes the session incognito.  Running ChromeOS on public computers would thus help.

[16:46:00.0000] <AryehGregor>
ahume_, there's not really anything you can do.  If they can steal data from the computer, they can also steal saved passwords and log in as the user.

[16:46:01.0000] <AryehGregor>
So you're just making an attacker's life a bit easier if you decide to store data locally.

[16:46:02.0000] <AryehGregor>
Not really much to do about it.

[16:47:00.0000] <sephr>
AryehGregor: don't know the context of the argument, but the answer is encryption

[16:47:01.0000] <sephr>
which chrome os surely would do

[16:47:02.0000] <AryehGregor>
sephr, no it's not, because we're asking what web developers should do, and they have no control over user-end disk encryption.

[16:47:03.0000] <TabAtkins>
sephr: No it's not.  A compromised computer can intercept information before it's encrypted.

[16:48:00.0000] <AryehGregor>
Unless you mean encrypt the local DB with a key that's only provided by the server, but that really doesn't buy you much.

[16:48:01.0000] <TabAtkins>
The correct answer is for the OS to be set up appropriately to prevent data from leaking between sessions.

[16:48:02.0000] <sephr>
what's the argument about?

[16:48:03.0000] <AryehGregor>
[110209 19:41:04] <ahume_> Is anyone aware of any conversation around best practises on stashing potentially sensitive data in client-side storage mechanisms? I notice Gmail's mobile app caches unencrypted email messages in a Web SQL db. Is anyone talking about the obvious attack vector there, not in regard to the spec as such, but just around best practise and, well frankly, common sense?

[16:48:04.0000] <sephr>
I meant os-level encryption

[16:48:05.0000] <sephr>
not web content level

[16:48:06.0000] <AryehGregor>
Yes, OS-level encryption is good, but doesn't really help with the original question.

[16:48:07.0000] <TabAtkins>
Oh, well, yes.

[16:48:08.0000] <AryehGregor>
Which was asked by a web developer.

[16:49:00.0000] <TabAtkins>
Dammit, Aryeh, you're beating me.

[16:49:01.0000] <AryehGregor>
Chrome OS certainly uses full-disk encryption.

[16:49:02.0000] <AryehGregor>
TabAtkins, getting addicted to a MUD when I was twelve really paid off in typing speed improvements.

[16:49:03.0000] <sephr>
what's the problem?

[16:49:04.0000] <sephr>
if everything is encrypted

[16:49:05.0000] <TabAtkins>
Plus I'm typing another document on my other monitor, and have to flip my mouse to this window to start typing.

[16:49:06.0000] <AryehGregor>
The problem is it's generally not, on a typical computer.

[16:49:07.0000] <sephr>
well we're talking about chrome os, no?

[16:49:08.0000] <AryehGregor>
And you can't tell, as a web developer.

[16:49:09.0000] <AryehGregor>
No.

[16:50:00.0000] <AryehGregor>
This is #whatwg, not #chromium-os or whatever the channel is for that.

[16:50:01.0000] <sephr>
why would I want a web developer to know if I'm using encryption or not?

[16:50:02.0000] <AryehGregor>
We're talking about web apps.  :)

[16:50:03.0000] <sephr>
that's none of their business

[16:50:04.0000] <AryehGregor>
. . .

[16:50:05.0000] <AryehGregor>
The question was asked *by* a web developer.

[16:50:06.0000] <AryehGregor>
Asking what they, as a web developer, should do.

[16:50:07.0000] <AryehGregor>
It was not asked from a user's perspective.

[16:50:08.0000] <sephr>
oh I thought you meant through a JS api

[16:50:09.0000] <sephr>
to tell if the db is encrypted

[16:50:10.0000] <sephr>
AryehGregor: <AryehGregor> And you can't tell, as a web developer.

[16:51:00.0000] <AryehGregor>
That would be hard to define and probably pointless.

[16:51:01.0000] <sephr>
that's what I was replying to

[16:51:02.0000] <AryehGregor>
Okay, I think one or both of us is extremely confused, and that we don't actually disagree on anything.

[16:53:00.0000] <paul_irish>
I think that calls for some P-I-Z-Z-A   http://youtu.be/wusGIl3v044

[16:54:00.0000] <TabAtkins>
paul_irish: My soul is melting.

[16:55:00.0000] <key>
extremely odd video

[16:56:00.0000] <ahume_>
I take the point about users setting up their machines correctly. Most won't of course, and browsers aren't warning about what is being stored locally. But if the local computer is compromised I guess it's compromised and you've got bigger issues. Thanks for your take.

[16:57:00.0000] <key>
why don't browsers just delete data associated with a secure session when they log out?

[16:57:01.0000] <key>
or something

[16:58:00.0000] <key>
(only half listening to ahume's thoughts)

[16:58:01.0000] <AryehGregor>
Because maybe users want to save data associated with a secure session?

[16:58:02.0000] <TabAtkins>
Just remember the take-away point.  It's not that webdevs *could* protect themselves, but it's easier for the OS to do it.  It's that if the OS doesn't do it, there is *nothing* the webdev can do that'll provide proper protection.

[16:58:03.0000] <TabAtkins>
The most a webdev can do is make it more difficult for an attacker, but "security through slightly increased difficult" isn't security.

[16:58:04.0000] <key>
what about pragmas that tell the browser how to handle the data

[16:58:05.0000] <key>
so like some pragma where any data associated with a site is cleared

[16:59:00.0000] <AryehGregor>
Like sessionStorage?

[16:59:01.0000] <key>
anything

[16:59:02.0000] <key>
or user options or something

[17:01:00.0000] <TabAtkins>
paul_irish: http://www.youtube.com/watch?v=FsJhfwbfMvU

[17:02:00.0000] <paul_irish>
Director's Cut!

[17:18:00.0000] <TabAtkins>
I need to expose my pretty view for my blog.

[17:40:00.0000] <key>
if i have a sub menu UL nested within a main menu UL, what's the best way to style the sub menu distinctly from the main menu? nav > ul and nav > ul > li > ul? or id the UL's and do #main-menu + #main-menu > li and #section-menu + #section-menu > li?

[17:43:00.0000] <MikeSmith>
ignore key *

[17:46:00.0000] <tw2113>
how is everyone

[17:49:00.0000] <TabAtkins>
Man, I want to buy some dang fonts.

[17:49:01.0000] <tw2113>
i say do it

[17:49:02.0000] <TabAtkins>
Chaparral is so pretty, but $300 is too much.

[17:49:03.0000] <tw2113>
unless you can download them free legally

[17:49:04.0000] <TabAtkins>
Lessee if there's something similar in google's font api...

[17:50:00.0000] <tw2113>
key whichever adds the least amount of markup

[17:52:00.0000] <tw2113>
can you style only the items that you want, without adding any ids/classes? if so, go with that method

[17:52:01.0000] <key>
tw2113: only issue is #id route lets me target all/most browsers, whereas using child selector nav > ul etc is less compatible

[17:53:00.0000] <key>
id route is faster too i've heard, for the dom, than navigating tags

[17:53:01.0000] <tw2113>
according to the resource i have with css selectors, you only lose IE6 with >'s

[17:53:02.0000] <key>
you sure?

[17:54:00.0000] <tw2113>
http://net.tutsplus.com/tutorials/html-css-techniques/the-30-css-selectors-you-must-memorize/

[17:54:01.0000] <tw2113>
#8

[18:02:00.0000] <key>
what i *like* about id's is they don't allow reuse

[18:02:01.0000] <key>
there is exactly 1 main-menu in my site, and only 1 active section-menu at a time

[18:02:02.0000] <tw2113>
one reason i prefer classes, smaller css files when possible

[18:03:00.0000] <tw2113>
due to reusability

[18:03:01.0000] <key>
hrm

[18:03:02.0000] <key>
yea

[18:03:03.0000] <key>
"Pro-tip – If your selector looks like X Y Z A B.error, you’re doing it wrong. Always ask yourself if it’s absolutely necessary to apply all of that weight."

[18:03:04.0000] <key>
so too much decendent lineage is bad too

[18:08:00.0000] <Sirisian>
Guys API naming. Since mousecapture and mouserelease are pretty much taken by an IE API someone suggested mousegrab. Any other ideas?

[18:08:01.0000] <Sirisian>
http://lists.w3.org/Archives/Public/public-webapps/2011JanMar/0477.html

[18:08:02.0000] <Sirisian>
bottom part. hmm

[18:08:03.0000] <key>
thanks for that article tw2113

[18:09:00.0000] <key>
mousehouse?

[18:09:01.0000] <TabAtkins>
mouselock?

[18:09:02.0000] <tw2113>
comprattrap

[18:09:03.0000] <Sirisian>
TabAtkins, mouselock and mouseunlock?

[18:09:04.0000] <key>
mouseear?

[18:10:00.0000] <Sirisian>
Would that describe the operation of a mouse capture correctly and intuitively for developers?

[18:10:01.0000] <key>
what is a 'mouse capture' ?

[18:10:02.0000] <Sirisian>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=9557#c4

[18:11:00.0000] <TabAtkins>
Given the behavior of the mouse not moving, and you only getting deltas instead of movement, I think "lock" is a reasonably clear name.

[18:13:00.0000] <Philip`>
(I think the technical term for mouse deltas is "mickeys")

[18:15:00.0000] <Philip`>
/me doesn't know if not moving the mouse is always the desired behaviour, though

[18:15:01.0000] <Philip`>
e.g. there's games which are fullscreen and you can use the mouse cursor like normal except if you move to the edge of the screen it pans the camera

[18:16:00.0000] <Philip`>
(instead of the default edge-of-screen behaviour, which is moving the mouse onto your second monitor or making the OS switch to the next virtual desktop or whatever)

[18:16:01.0000] <Philip`>
so you want to capture the mouse but still want absolute coordinates

[18:19:00.0000] <Sirisian>
Speaking of fullscreen that needs to be changed in most browsers. Going to fullscreen triggers resize events like crazy forcing you to debounce. That and moving the mouse up brings down that bar. Horrible design that needs to be defined in the standard. "A user-agent should not use hover toolbars on the edges of the screen. The fullresolution of the monitor should be used".

[18:20:00.0000] <Sirisian>
full resolution*

[18:20:01.0000] <Sirisian>
meh one problem at a time.

[18:21:00.0000] <jamesr_>
sounds like a quality of implementation issue

[18:21:01.0000] <jamesr_>
have you filed bugs on the relevant browser vendors?

[18:22:00.0000] <Sirisian>
I should. Chrome does it in a less annoying way.

[18:23:00.0000] <jamesr_>
i don't think the spec should (or really can) say that a browser isn't allowed to have hover toolbars or whatnot

[18:24:00.0000] <Sirisian>
it can make suggestions.

[18:24:01.0000] <Sirisian>
It's used by implementors after all

[18:36:00.0000] <MikeSmith>
http://tools.ietf.org/html/draft-rosenberg-rtcweb-framework-00

[18:36:01.0000] <MikeSmith>
"Architectural Framework for Browser based Real-Time Communications"

[18:52:00.0000] <roc>
/me wonders why Skype employees are working to put their company out of business

[18:54:00.0000] <Sirisian>
https://bugzilla.mozilla.org/show_bug.cgi?id=633068 http://code.google.com/p/chromium/issues/detail?id=72515

[18:54:01.0000] <Sirisian>
done

[18:54:02.0000] <Hixie>
roc: because it's good for the world and that trumps short-term corporate interests?

[18:54:03.0000] <roc>
"Yeah right"

[18:54:04.0000] <Hixie>
it's going to happen eventually anyway, might as well be part of it

[18:55:00.0000] <jamesr_>
Sirisian: the fullscreen hover reminder doesn't go away when you move your mouse away?

[18:56:00.0000] <Sirisian>
jamesr_, hmm? No I mean you should be able to get rid of the reminder. It's pivotal in the future for fullscreen FPS games.

[18:57:00.0000] <jamesr_>
that doesn't answer my question

[18:57:01.0000] <Sirisian>
yes it does go away when moving away from the top

[18:57:02.0000] <Sirisian>
sorry

[18:57:03.0000] <jamesr_>
then what's the bug?

[18:57:04.0000] <key>
roc, wise of you to ponder the question with skepticism

[18:57:05.0000] <roc>
Hixie: that is more likely

[18:57:06.0000] <key>
there's always an agenda money and/or power are involved

[18:57:07.0000] <Sirisian>
I can't change it to an enhancement I don't think?

[18:58:00.0000] <jamesr_>
i don't understand what behavior you think would be better

[18:58:01.0000] <Sirisian>
jamesr_, A small X to close the reminder.

[18:58:02.0000] <Sirisian>
hmm maybe I should have written more

[18:58:03.0000] <jamesr_>
how is that better than moving your mouse away?

[19:00:00.0000] <Sirisian>
In a game where you're in fullscreen moving the mouse to the top of the screen would cause the reminder to come down. Unless my mouselock idea disables that. meh

[19:22:00.0000] <Sirisian>
http://lists.w3.org/Archives/Public/public-webapps/2011JanMar/0495.html

[19:23:00.0000] <Sirisian>
His argument kind of makes sense.

[19:33:00.0000] <roc>
I would like to know about use-cases where the user doesn't want to be full-screen

[19:35:00.0000] <jcranmer>
so he can alt-tab

[19:35:01.0000] <jcranmer>
I have no idea what you're talking about

[19:39:00.0000] <Sirisian>
roc, Games.

[19:39:01.0000] <Sirisian>
fullscreen canvas is sometimes too CPU intensive.

[19:39:02.0000] <roc>
nah

[19:39:03.0000] <roc>
canvas scaling will happen on the GPU in most cases

[19:39:04.0000] <roc>
going forward

[19:39:05.0000] <Sirisian>
What if you don't want to scale?

[19:39:06.0000] <Sirisian>
IE non-vector graphics.

[19:40:00.0000] <Sirisian>
i.e.*

[19:40:01.0000] <roc>
bilinear scaling doesn't work for you?

[19:40:02.0000] <roc>
then put your canvas in the middle of a blank page and make that fullscreen

[19:40:03.0000] <Sirisian>
Actually I had a few bugs submitted about that

[19:40:04.0000] <Sirisian>
Most browsers handled bilinear interpolation different causing artifacts.

[19:40:05.0000] <Sirisian>
I'm not sure if that's fixed. I haven't tested it.

[19:42:00.0000] <Sirisian>
roc, That would work. Not all games should be forced to be fullscreen. :P

[19:43:00.0000] <Sirisian>
Basically what that thread and the spec suggestion is to add a java like mouse lock

[21:17:00.0000] <Hixie>
can you make a call to another function in JS passing it the same arguments without knowing what those arguments might be? something like  otherFunction(arguments)?

[21:17:01.0000] <Hixie>
or does |arguments| not support being passed like that

[21:21:00.0000] <Sirisian>
apply?

[21:21:01.0000] <Sirisian>
wait

[21:22:00.0000] <Sirisian>
not sure why I said that

[21:26:00.0000] <miketaylr>
from within a function you can do something like fn.apply(this, arguments)

[21:27:00.0000] <Hixie>
why do i have to use .apply?

[21:28:00.0000] <miketaylr>
hmm maybe you don't

[21:29:00.0000] <paul_irish>
because arguments is an array and you have no idea how many there may be.. unless you do.

[21:29:01.0000] <Hixie>
oh, .apply() takes an array

[21:29:02.0000] <Hixie>
ok

[21:29:03.0000] <paul_irish>
fn(arguments[0], arguments[1], ... )

[21:29:04.0000] <paul_irish>
yeah  fn.apply( context, arrayOfArgs);

[21:31:00.0000] <miketaylr>
effin apply

[21:31:01.0000] <Hixie>
k, thanks

[23:34:00.0000] <Yuhong>
The history of style in HTML is a mess. I am thinking of writing it all up in a blog article.

[23:34:01.0000] <Yuhong>
It began with when Netscape 0.9 was released around the same time as the first draft of CSS.

[23:35:00.0000] <Sirisian>
hmm. it's basically XML

[23:35:01.0000] <Sirisian>
oh style as in styles

[23:35:02.0000] <Yuhong>
Then Netscape had the JSSS/CSS fiasco around the same time MS rushed to implement draft CSS standards.

[23:36:00.0000] <Yuhong>
Then eventually came DOCTYPE switching.

[23:37:00.0000] <Yuhong>
Then the "standards mode" of some browsers turned out to not really comply with standards, requiring more modes to be added.

[23:38:00.0000] <Sirisian>
I prefer just targetting the newest versions of DOM, JS, and CSS. Much easier.

[23:39:00.0000] <Sirisian>
My stuff rarely works on anything though.

[23:45:00.0000] <Yuhong>
One of the worse cases was IE6, which had a "standards mode" that was not really compliant, which lasted for *five* years, causing trouble when IE7 was released after that.

[23:47:00.0000] <Yuhong>
And it's dominance didn't help either.

[23:47:01.0000] <Sirisian>
I feel bad for the people that had to target it

[23:54:00.0000] <Yuhong>
http://www.reddit.com/r/web_design/comments/filpx/the_full_story_on_css_support_in_ie_second_attempt/

[00:23:00.0000] <othermaciej>
what browsers support History.pushState?

[00:24:00.0000] <annevk>
Gecko/WebKit I think?

[00:25:00.0000] <othermaciej>
not in Opera yet?

[00:29:00.0000] <gsnedders>
othermaciej: not in Opera yet.

[00:29:01.0000] <othermaciej>
ok

[00:29:02.0000] <othermaciej>
I wanted to know for purposes of posting on a Hacker News thread

[00:29:03.0000] <othermaciej>
since no one knew there was actually a way to avoid #! URLs in AJAX apps

[00:30:00.0000] <othermaciej>
(though sadly not in Opera or IE)

[00:31:00.0000] <matjas>
http://caniuse.com/history

[00:31:01.0000] <othermaciej>
matjas: sweet!

[00:32:00.0000] <matjas>
othermaciej: caniuse.com/[insert feature here]

[00:54:00.0000] <hsivonen>
annevk: this is the encoding sniffing ping

[01:01:00.0000] <hsivonen>
https://twitter.com/#!/simonstl/status/35451136970334209

[01:02:00.0000] <othermaciej>
the Web would be so awesome if only we didn't have those pesky browsers in the way

[01:03:00.0000] <annevk>
I replied to that

[01:03:01.0000] <hsivonen>
othermaciej: browsers are a just a niche thing. like the Web!

[01:03:02.0000] <annevk>
it did not really go anywhere

[01:04:00.0000] <annevk>
all I got out was a link to the article about when Larry objected to publishing and there was a minor media frenzy

[01:05:00.0000] <annevk>
I wondered after I got that link if that was also the point when Larry pretty much stopped participating

[01:05:01.0000] <hsivonen>
If the WHATWG is the Republicans, what's Adobe?

[01:05:02.0000] <Dashiva>
The UN

[01:06:00.0000] <deane>
or worse

[01:07:00.0000] <zewt>
in its own little closed-off completely proprietary world with no interoperability with anyone else--i suppose suggesting north korea would be a little harsh, heh

[01:10:00.0000] <zewt>
only one of countless islands, of course

[01:10:01.0000] <zewt>
(... adobe, not korea)

[01:17:00.0000] <annevk>
hsivonen, emailed the little bit of information I have

[01:17:01.0000] <annevk>
hsivonen, oh, and it's not pretty :)

[01:19:00.0000] <hsivonen>
annevk: thanks.

[01:20:00.0000] <hsivonen>
annevk: looks like what you said is incomplete or .org is a sniffable domain

[01:20:01.0000] <hsivonen>
annevk: or UTF-16 is special

[01:20:02.0000] <hsivonen>
annevk: because BOMless UTF-16 gets sniffed when served from bugzilla.mozilla.org

[01:22:00.0000] <annevk>
maybe it is enabled by default then on desktop

[01:23:00.0000] <hsivonen>
annevk: it would be a very odd choice to enable stuff by default on desktop if it isn't enabled everywhere

[01:23:01.0000] <hsivonen>
because desktop has UI override but Mini/Mobile don't

[01:24:00.0000] <hsivonen>
sigh. it looks like Firefox 3.6 sniffs BOMless UTF-16 even when chardet has been turned off

[01:25:00.0000] <annevk>
hmm yeah sorry :/

[01:25:01.0000] <hsivonen>
I guess it's another late-cycle firedrill for me then

[01:25:02.0000] <annevk>
basically I would not worry too much about Operad

[01:26:00.0000] <hsivonen>
bz worries about this, so now I am

[01:26:01.0000] <hsivonen>
worrying that is

[04:07:00.0000] <jgraham>
hsivonen: FWIW I would appreciate tests for bug 11393 in the html5lib testsuite (segregated into a -pending file) if you have the chance to write them

[04:09:00.0000] <hsivonen>
jgraham: might take a while

[04:11:00.0000] <jgraham>
hsivonen: Sure. I might even get their first :)

[04:12:00.0000] <annevk>
http://norman.walsh.name/2011/02/08/html-xml#comment0001 good comment

[04:13:00.0000] <hsivonen>
annevk: mine hasn't been approved yet

[04:13:01.0000] <annevk>
mattur really hits it

[04:14:00.0000] <hsivonen>
mattur should definitely have more followers

[04:18:00.0000] <karlcow>
mattur has interesting points but I don't see how it hits it.

[04:20:00.0000] <karlcow>
what the comment shows is a surprising understanding of how w3c organization is working.

[04:20:01.0000] <karlcow>
I meant surprising as ill

[04:22:00.0000] <annevk>
if it's XML vs HTML he hits in the way that the HTML proponents never tried blocking XML (in fact, many of us have actively advocated XHTML) yet the opposite clearly happened time and again

[04:23:00.0000] <karlcow>
rdf has been developed test driven for a very long time. OWL is entirely built like this through implementation. The mistake of Semantic Web participants has been to not take into account the messy Web as a requirement. It was not their goal before.

[04:23:01.0000] <karlcow>
where I deeply agree with mattur though

[04:24:00.0000] <karlcow>
is "If one of those development paths wants to feature in the other development path, it should probably do so by integrating rather than attempting overwriting."

[04:24:01.0000] <karlcow>
he is perfectly right on it here.

[04:24:02.0000] <jgraham>
karlcow: What does test-driven have to do with anything?

[04:24:03.0000] <karlcow>
yes annevk agreed.

[04:25:00.0000] <hsivonen>
karlcow: it seems to me that circa 1998 RDF was theory-driven

[04:25:01.0000] <hsivonen>
karlcow: 1998 matters

[04:25:02.0000] <karlcow>
first version of rdf yes.

[04:25:03.0000] <hsivonen>
karlcow: it's what poisoned XML with Namespaces

[04:26:00.0000] <annevk>
I'm getting a little tired of the continued slamming from the XML community and might just start ignoring them at some point.

[04:26:01.0000] <hsivonen>
AFAICT, the URI as identifier for everything meme didn't have wide XML community support

[04:26:02.0000] <karlcow>
hsivonen: this seems to be new "story" but I haven't found any mail yet saying namespaces for XML because of RDF

[04:27:00.0000] <annevk>
I have worked hard in the past to make XHTML work. To get XML properly implemented. I have proposed an alternative for XML that I think will give it more traction and make it more useful on the web.

[04:27:01.0000] <hsivonen>
karlcow: http://lists.w3.org/Archives/Public/semantic-web/2007Dec/0116.html

[04:27:02.0000] <karlcow>
annevk: I do not agree with norman as well in his blog post

[04:27:03.0000] <annevk>
I have done my part to make their vision a reality. What have they done?

[04:27:04.0000] <karlcow>
he is missing one point in his 3 use cases

[04:27:05.0000] <hsivonen>
annevk: I used to be a believer when I made Gecko load XHTML incrementally

[04:28:00.0000] <hsivonen>
annevk: well, maybe not a believer but I still cared enough

[04:28:01.0000] <karlcow>
hsivonen: this is a recent email. The oldest mail about mail I found about namespaces so far was 2001

[04:28:02.0000] <hsivonen>
karlcow: are you saying that TimBL misrepresents history in the email?

[04:28:03.0000] <annevk>
I don't think any of those in the XML community has done as much as us to make XML useful for people making web sites.

[04:29:00.0000] <annevk>
And yet all we get is shit.

[04:29:01.0000] <karlcow>
the point that IMHO norman forgets is the possibility of one community to forge its own model and not care about the rest because it is not important. It's how all social groups in history have changed a way of thinking.

[04:29:02.0000] <hsivonen>
btw, my todo list for *this* year, too, includes making XHTML suck less

[04:30:00.0000] <karlcow>
intimately I think norman things about the consensus and the collective agreement as I do. (old school I guess)

[04:31:00.0000] <karlcow>
hsivonen: I'm saying that Timbl has certainly his own interpretation like I do and like you do.

[04:32:00.0000] <webr3>
hsivonen, RDF didn't poisen XML with Namespaces, there was a requirement to have uri shortening and the xml folks decided that tuples with two components that don't turn back in to a single URI would be ideal

[04:33:00.0000] <webr3>
/me researched and stuck out the tweet bringing this to the fore again because of the issue-120 thing, wanted to know history

[04:33:01.0000] <hsivonen>
webr3: the toxic meme is identifying with things that aren't Web resources with URIs in the first place

[04:33:02.0000] <hsivonen>
webr3: shortening is just a consequence

[04:34:00.0000] <webr3>
hsivonen, you mean like mailto: and data: i guess?

[04:34:01.0000] <hsivonen>
webr3: that is, I think wanting to identify element names with URIs is where things went wrong

[04:34:02.0000] <webr3>
k, i follow :)

[04:35:00.0000] <webr3>
what about specifying link relations with uris?

[04:35:01.0000] <karlcow>
the thing which worries me about using http uri for identifying things is the "domain name". This part is the weakest link in the chain.

[04:36:00.0000] <karlcow>
socially and structurally weak

[04:36:01.0000] <hsivonen>
webr3: that sucks, too, but allowing it makes the "everything is a URI" folks complain less

[04:38:00.0000] <webr3>
hsivonen, can track that back to: http://markmail.org/message/gzelah3xqxspuoy2

[04:39:00.0000] <webr3>
karlcow, the above link also covers what you said

[04:40:00.0000] <webr3>
i.e. decision was taken w/ eyes wide open and trade-offs were made - afaict

[04:40:01.0000] <hsivonen>
webr3: ooh! also WebDAV to blame in addition to RDF!

[04:41:00.0000] <webr3>
hsivonen, lol yup you'd be surprised.. http://markmail.org/message/kwk5bfpbisww3itg - karlcow, you may appreciate that one too (it's read write web of linked data 13.5 years ago)!

[04:42:00.0000] <webr3>
hsivonen, webdav and rdf came together as a result of PICS NG http://www.w3.org/PICS/NG/

[04:43:00.0000] <webr3>
quite interesting to see the design process and hook it up to whats happening today, a lot of things still make sense (to me), although some bits i would have cut and simplified

[04:43:01.0000] <hsivonen>
webr3: WebDAV is an overkill compared to sftp or sshfs

[04:44:00.0000] <Philip`>
/me 's favourite part of WebDAV is how it means he can't access SVN when he's forced to use a standard HTTP proxy

[04:47:00.0000] <hsivonen>
HTTP proxies are also such a huge source of badness

[04:47:01.0000] <hsivonen>
great idea in theory, of course

[04:49:00.0000] <jgraham>
Philip`: Not being able to access SVN is a good thing :)

[04:50:00.0000] <jgraham>
It's a hint

[04:51:00.0000] <webr3>
so, what happens when two worlds colide, one where people took one set of tradeoffs, and the other took the other set, this is basically what's happening with issue 120, identifying relations as "foo" vs "http://example.org/vocab#foo", do you go for one, the other or both, and if both do you cater for the needs of both parties or not

[04:52:00.0000] <webr3>
the decision is already "both", and now all that remains is whether to cater for the needs or not, in this case, URI shortening

[04:52:01.0000] <webr3>
/me sumamrises

[04:55:00.0000] <karlcow>
nice finds, web

[04:56:00.0000] <karlcow>
webr3

[05:29:00.0000] <karlcow>
http://tools.ietf.org/html/draft-rosenberg-rtcweb-framework-00

[05:44:00.0000] <Ms2ger>
annevk, AryehGregor, I'm probably going to submit my drafts somewhere this month

[05:55:00.0000] <jgraham>
Ms2ger: You are going away?

[05:57:00.0000] <webr3>
karlcow, cheers re "nice finds" - and re rtcweb, Figure 1 looks like it's wrong, very wrong - in fact websockets/http would be positioned exactly as rtc (apis,functions,arrows) are

[05:57:01.0000] <webr3>
/me afaict

[06:06:00.0000] <annevk>
I threw my IRC lines together in this short rant: http://annevankesteren.nl/2011/02/xml-tired

[06:06:01.0000] <annevk>
Hopefully I can now focus on DOM Events again

[06:06:02.0000] <Ms2ger>
jgraham, no

[06:36:00.0000] <virtuelv>
are there any crawlers that crawl with scripting enabled these days?

[06:37:00.0000] <annevk>
if Bing picks up results from what you browse in IE...

[06:38:00.0000] <Philip`>
Googlebot crawls URLs extracted from strings in JS code

[06:38:01.0000] <Philip`>
(not via a real JS parser though)

[06:44:00.0000] <annevk>
hmm

[06:44:01.0000] <annevk>
is it

[06:44:02.0000] <annevk>
invoke e's target event listeners

[06:44:03.0000] <annevk>
or

[06:44:04.0000] <annevk>
invoke e's target's event listeners

[06:49:00.0000] <Philip`>
Is this a spec question or a grammar question?

[06:49:01.0000] <annevk>
grammar

[06:49:02.0000] <Philip`>
If it's the event listeners of the target of e, then the latter

[06:50:00.0000] <annevk>
thanks

[06:50:01.0000] <annevk>
seemed a bit weird

[06:50:02.0000] <Philip`>
("X's Y" == "Y of X", pretty much)

[06:51:00.0000] <annevk>
I guess I could reword it

[06:51:01.0000] <annevk>
maybe later

[06:51:02.0000] <annevk>
I'm sure this section will be refactored a few times

[07:11:00.0000] <connrs>
annevk: <delurk> i feel that 'invoke the event listeners of e's target' may be more readable and reduces misinterpretation <relurk>

[07:11:01.0000] <jgraham>
/me wonders what happens if you nest a <relurk> inside a <delurk>

[07:12:00.0000] <annevk>
connrs, changed

[07:12:01.0000] <hsivonen>
jgraham: <relurk> implicitly pops <delurk> off the stack, so you can't nest them

[07:13:00.0000] <jgraham>
hsivonen: Ah. That makes sense

[07:14:00.0000] <connrs>
hsivonen: agreed. in fact if you tried to force a <delurk><relurk/></delurk>, heads of introverts around the globe would pop simultaneously

[07:25:00.0000] <annevk>
why is it cancelable and preventDefault()?

[07:25:01.0000] <annevk>
e.g. cancelable and cancel() would make more sense

[07:25:02.0000] <annevk>
or hasDefaultAction and preventDefault()

[07:28:00.0000] <annevk>
ah, topic

[07:28:01.0000] <jgraham>
annevk: The thing you have to remember about the DOM specs is that they were written in the 90s. In the 90s people thought that Pop Tarts made sense for breakfast. Is it any wonder then that DOM can seem a little illogical?

[07:29:00.0000] <annevk>
:)

[07:54:00.0000] <connrs>
hatwg.org/ -- logs: http://krijnhoetmer.nl/irc-logs/ -- stats: hhatwg.org/ -- logs: http://krijnhoetmer.nl/irc-logs/ -- stats: hhatwg.org/ -- logs: http://krijnhoetmer.nl/irc-logs/ -- stats: h

[07:54:01.0000] <connrs>
le.net/k2QxH/ , I am trying to have #edit_resolved checked or  unchecked based on the result of the resolved variable that is pulled from p

[08:28:00.0000] <jgraham>
IE9 RC today, it seems

[08:33:00.0000] <karlcow>
http://code.google.com/web/ajaxcrawling/docs/getting-started.html

[08:33:01.0000] <karlcow>
# in URIs

[08:39:00.0000] <karlcow>
https://github.com/fields/addressable#readme

[08:43:00.0000] <TabAtkins>
Argh, the :visited styling on the HTML objection polls is HORRIBLE.  ARgha;sdlkfs

[08:44:00.0000] <hsivonen>
is there a poll I should object on?

[08:44:01.0000] <TabAtkins>
http://www.w3.org/2002/09/wbs/40318/issue-129-objection-poll/

[08:44:02.0000] <TabAtkins>
about aria changes

[08:44:03.0000] <hsivonen>
:-( that one takes some reading to object to

[08:44:04.0000] <TabAtkins>
Yup, that's what I'm doing this morning.

[08:46:00.0000] <karlcow>
TabAtkins: the visited styling is the purple underscored. Another suggestion?

[08:47:00.0000] <TabAtkins>
It's purple with a black background.

[08:47:01.0000] <karlcow>
huh?

[08:47:02.0000] <karlcow>
I do not have that

[08:47:03.0000] <TabAtkins>
I don't know how it gets that.

[08:47:04.0000] <TabAtkins>
My inspector clearly shows an #eee background winning.

[08:47:05.0000] <TabAtkins>
But there's black on my screen.  Hm.

[08:47:06.0000] <TabAtkins>
Chrome 9 beta, for what it's worth.

[08:48:00.0000] <hsivonen>
isn't 9 beta ancient by now?

[08:48:01.0000] <TabAtkins>
Huh.  Turning off the #eee rule (letting it go back to the default transparent) makes it fine.

[08:48:02.0000] <karlcow>
no issue on Opera and webkit for me

[08:48:03.0000] <TabAtkins>
hsivonen: I haven't rebooted my computer in a month.

[08:48:04.0000] <karlcow>
must be your build

[08:48:05.0000] <karlcow>
strange

[08:49:00.0000] <TabAtkins>
Well, my comp's yelling at me to reboot anyway, and I've got weeks of browser updates waiting for a restart, so I guess I'll just restart today and see what happens.

[08:51:00.0000] <TabAtkins>
Yeah, this doesn't even make sense.  Inspector claims the computed style for "background-color" is "black", and links to line 44 of style.css, which clearly says "background: #EEE;".

[08:51:01.0000] <TabAtkins>
I dunno, that's crazy.

[09:04:00.0000] <jgraham>
TabAtkins: You know it is generally possible to restart your browser without restarting your computer, right?

[09:05:00.0000] <webr3>
fyi: http://lists.w3.org/Archives/Public/public-rdfa-wg/2011Feb/0104.html proposal to strongly deprecate xmlns in rdfa 1.1

[09:12:00.0000] <bfrohs>
IE9 RC just released: http://www.beautyoftheweb.com/

[09:12:01.0000] <bfrohs>
(well, at least announced on twitter)

[09:12:02.0000] <TabAtkins>
jgraham: The two are basically connected.  All the important desktop state is contained in my tabs.

[09:14:00.0000] <jgraham>
TabAtkins: But restarting you browser is fast compared to restarting you computer (probably) and most state will be restored

[09:14:01.0000] <TabAtkins>
Your moon logic is nonsensical to me.

[09:16:00.0000] <hsivonen>
FAIL! Without Flash Player installed, IE9 RC prompts to save Flash ads to disk as downloads

[09:16:01.0000] <jgraham>
/me is trying to work out if the implication was that I'm female and, if so, TabAtkins will survive the offence taken by girls everywhere

[09:17:00.0000] <TabAtkins>
/me doesn't understand how he implied James was female.

[09:17:01.0000] <jgraham>
hsivonen: Seems like a showstopper. Of course they may be using this newfangled meaning of "RC"

[09:17:02.0000] <hsivonen>
jgraham: maybe everyone except me has Flash Player installed anyway, so it doesn't matter

[09:18:00.0000] <jgraham>
TabAtkins: The intertubes inform me that "moon logic" might be primarily used when boys don't understand girls

[09:18:01.0000] <jgraham>
They may be confused ofc

[09:18:02.0000] <TabAtkins>
...I have never heard of this.

[09:35:00.0000] <jgraham>
To ensure that I have read this correctly: If I have a parser-inserted <script> that (synchronously) removes a subtree containing itself from the tree and, later in the same subtree have another script, that second script will not be run

[09:35:01.0000] <jgraham>
right?

[09:36:00.0000] <jgraham>
Because the second script is not in a document at the time we prepare it

[09:36:01.0000] <hsivonen>
jgraham: right

[09:38:00.0000] <Sirisian|Work>
Hey guys. How do you send correctly formatted mailing list stuff from a yahoo email? Apparently when I use yahoo mail the font is too large or wrong. What font and size do people use? I keep doing it wrong :\ Is there like a separate client people use to view and post to mailing lists?

[09:39:00.0000] <TabAtkins>
Can you send plaintext email?

[09:39:01.0000] <TabAtkins>
That's what most of us do.  Using HTML email is a failure.

[09:39:02.0000] <Sirisian|Work>
ooh I see

[09:40:00.0000] <TabAtkins>
For formatting in plaintext, most people use Markdown or some ad hoc variant.

[09:41:00.0000] <Sirisian|Work>
Cool I got it working. There was a "plain text" and "rich text" mode.

[09:50:00.0000] <TabAtkins>
Okay, so this is an interesting proposal from Sylvain.  Plan for the "From-Origin" header to let sites opt into same-origin restrictions for any resource.  Then, have @font-face act as if "From-Origin:same" was sent by default (overrideable by actually sending From-Origin).

[09:56:00.0000] <jgraham>
TabAtkins: That doesn't seem to address othermaciej/annevk's consistency objections

[09:58:00.0000] <TabAtkins>
It partially does.  The default behavior of fonts is different, but they're all controllable with the same mechanism in this proposal, unlike the existing idea of using SOR+CORS for font, and From-Origin for other things.

[10:07:00.0000] <hsivonen>
What kind of geolocation back end does IE9 use?

[10:08:00.0000] <hsivonen>
it reports my location in the sea next to New Zealand

[10:09:00.0000] <bfrohs>
Are you in Atlantis, perhaps?

[10:09:01.0000] <Rik`>
nice :)

[10:09:02.0000] <TabAtkins>
I'm going to assume that's accurate from now on, hsivonen.

[10:13:00.0000] <hsivonen>
hmm. maybe the site I used randomized the location on failure

[10:14:00.0000] <hsivonen>
another site said the location request failed

[10:22:00.0000] <TabAtkins>
Oh jeezus I just broke my computer.

[10:22:01.0000] <TabAtkins>
This is the computer's way of saying "Restart me now, jackass".

[10:40:00.0000] <AryehGregor>
So what's a good way to break up tests like <http://aryeh.name/spec/dom-range/test/Range-set.html>?  Just make lots of files arbitrarily, like each one tests only a few of the test Ranges?

[10:46:00.0000] <AryehGregor>
Hmm.  How does encoding work for JavaScript files?

[10:46:01.0000] <AryehGregor>
/me uses HTML escapes to avoid the issue

[11:20:00.0000] <TabAtkins>
Bleh, back.  Computer hung on restart, and I was doing other things so I didn't notice.

[11:34:00.0000] <AryehGregor>
IE9 just crashes on my latest test.  Or at least the tab does.

[11:34:01.0000] <AryehGregor>
/me doesn't care, it works fine in Gecko and WebKit

[11:34:02.0000] <AryehGregor>
IE9 has come a long way, but it still has ground to cover . . .

[11:47:00.0000] <Moo-_>
AryehGregor: I saw the release

[11:48:00.0000] <Moo-_>
can you please tell me what kind of issues I need to prepare with the newest incarnation of blue E?

[11:49:00.0000] <AryehGregor>
Oh, now there's an RC.

[11:49:01.0000] <AryehGregor>
I should upgrade.

[11:49:02.0000] <AryehGregor>
In my experience with the betas, JS you write for other browsers is fairly likely to work in IE9, or at least mostly work.

[11:49:03.0000] <AryehGregor>
As opposed to failing horribly as with IE8.

[11:49:04.0000] <AryehGregor>
So it's a huge step forward.

[11:50:00.0000] <Moo-_>
so it doesn't fail horrible, but fails pleasantly

[11:50:01.0000] <Moo-_>
nice :)

[11:51:00.0000] <AryehGregor>
If it fails, it often fails in a way you can work around without having to have a separate code path.

[11:51:01.0000] <AryehGregor>
Or at least so I've seen so far.

[11:52:00.0000] <AryehGregor>
It looks like Opera's Selection.toString() does plaintext conversion, so sadly, it seems like some form of that might have to be specced one way or the other.  :(

[12:04:00.0000] <AryehGregor>
See, this is why I want DOM Range to be in W3C space: http://lists.w3.org/Archives/Public/public-html-testsuite/2011Feb/0014.html

[12:04:01.0000] <AryehGregor>
IE actually pays some attention to stuff in W3C space.

[12:06:00.0000] <AryehGregor>
Oh, atob()/btoa() aren't in the W3C HTML5 version anymore.  Oh well.

[12:06:01.0000] <Hixie>
it'll be back i expect

[12:06:02.0000] <AryehGregor>
In HTML5, or some future W3C version?

[12:06:03.0000] <Hixie>
5

[12:07:00.0000] <Hixie>
i was speaking to jeff jaffe (w3c ceo) about stuff on the same day i was adding atob() and he said he though things like atob() were important enough to do an in-place edit of a REC to add them back.

[12:07:01.0000] <AryehGregor>
Really?  Interesting.

[12:07:02.0000] <AryehGregor>
Why is it so important?

[12:08:00.0000] <AryehGregor>
They seem to still be there, by the way: http://dev.w3.org/html5/spec/webappapis.html#atob

[12:08:01.0000] <Hixie>
well if you buy into the idea that only RECs are relevant, and you still want interop, that's pretty much the only way to get interop

[12:08:02.0000] <AryehGregor>
Yeah, it's not like it's a new feature.  Just speccing a preexisting one.

[12:08:03.0000] <othermaciej>
I'm sure someone will file a bug asking to add them back

[12:09:00.0000] <Hixie>
anyway i don't know how sam's viewpoint on things like this and jeff's viewpoint on things like this will shake out, but i expect they'll find a compromise before we go to REC

[12:09:01.0000] <TabAtkins>
Wait, why was atob removed?

[12:09:02.0000] <Hixie>
i just don't want to fight sam on what's in and what's out, so i figured i should pre-emptively try to get on his good side (http://www.w3.org/Bugs/Public/show_bug.cgi?id=12029)

[12:10:00.0000] <TabAtkins>
Ah, kk.

[12:10:01.0000] <TabAtkins>
I suppose I can object to it being excluded when it tries to move to CR.

[12:11:00.0000] <Hixie>
a good argument can be made that it shouldn't be in the html spec at all anyway

[12:11:01.0000] <Hixie>
if one cares about such things

[12:11:02.0000] <Hixie>
/me neither cares about that nor about CR/REC anymore, so... :-)

[12:12:00.0000] <AryehGregor>
Where should it be, then?

[12:12:01.0000] <Hixie>
DOM Core, and we'd move Window there too, probably

[12:12:02.0000] <Hixie>
dunno

[12:12:03.0000] <Hixie>
i think we should be merging all these specs, not splitting them

[12:20:00.0000] <hsivonen>
Hixie: will Acid4 test only RECs? :-)

[12:23:00.0000] <Moo-_>
when I will be able to copy-paste image to my WYSIWYG browser based editor? :)

[12:25:00.0000] <TabAtkins>
That's possible now, via D&D.

[12:28:00.0000] <AryehGregor>
If the author writes support, or just for all contenteditable?

[12:28:01.0000] <TabAtkins>
I think you have to write support.

[12:29:00.0000] <othermaciej>
you can copy and paste images into an HTML editable area

[12:29:01.0000] <othermaciej>
I don't think you need to write support

[12:29:02.0000] <othermaciej>
though arranging to upload the image may be tricky

[12:29:03.0000] <othermaciej>
(for DnD you probably need to write something)

[12:34:00.0000] <AryehGregor>
If I wanted to submit the execCommand() stuff to the W3C, which Working Group would I submit it to?

[12:34:01.0000] <jgraham>
I thought that was part of HTML5 at one point

[12:34:02.0000] <realityking>
I may be mistaken, but isn't in XHTML5 valid behavior for a parser to ignore anything and all inside a comment just like in XML? (e.g. an XML comment inside a style or script element, the commented code can be ignored). Or has that changed?

[12:34:03.0000] <TabAtkins>
execCommand is part of HTML.

[12:35:00.0000] <AryehGregor>
Where is it in the HTML spec?

[12:35:01.0000] <AryehGregor>
realityking, XHTML is parsed like normal XML, according to XML parsing rules.

[12:35:02.0000] <AryehGregor>
No magical behavior for scripts.

[12:35:03.0000] <AryehGregor>
Anyway, if there's a preexisting spec for execCommand(), I'd like to know about it, because I'm starting to write one.

[12:35:04.0000] <realityking>
then Mircosofts HTML5 testsuite is in error? http://samples.msdn.microsoft.com/ietestcenter/html5/xhtml_harness.htm?url=html_style_in_comment

[12:37:00.0000] <TabAtkins>
Just based on history and statistics, the answer is "probably yes".

[12:37:01.0000] <AryehGregor>
realityking, the test looks correct to me.

[12:38:00.0000] <AryehGregor>
The correct behavior is to ignore the h4 { color: red } rule, which is what the test asks.

[12:38:01.0000] <TabAtkins>
AryehGregor: Look in the "Editing APIs" section.

[12:38:02.0000] <AryehGregor>
Oh.

[12:38:03.0000] <AryehGregor>
Okay, then.

[12:38:04.0000] <jgraham>
AryehGregor: Does that mean that you are going to submit many tests to the HTML testsuite? Yay!

[12:39:00.0000] <AryehGregor>
jgraham, does which mean?

[12:39:01.0000] <realityking>
AryehGregor: thanks, I read that wrong

[12:40:00.0000] <AryehGregor>
Oh, what I was given even says it's supposed to be in the HTML spec in the end.

[12:40:01.0000] <AryehGregor>
Okay, then.

[12:41:00.0000] <jgraham>
AryehGregor: That you are working on execCommand

[12:41:01.0000] <AryehGregor>
Hopefully, yep.

[12:41:02.0000] <AryehGregor>
/me writes his own spec for now, it can be integrated later

[12:41:03.0000] <jgraham>
/me thinks the W3C should use the HTML logo t-shirt monet to buy t-shirts for people that submit tests to the HTML testsuite

[12:42:00.0000] <bfrohs>
/me agrees

[12:42:01.0000] <jgraham>
Or we should have some reward system based on number of approved tests (or better, number of approved tests that fail in two or more browsers)

[12:45:00.0000] <roc>
Moo-_: in Firefox 4 we changed things so that pasting an image creates an <img> with a data: URL

[12:45:01.0000] <AryehGregor>
Failing in one browser should be good enough.

[12:45:02.0000] <AryehGregor>
roc, with any limitations on size?

[12:46:00.0000] <roc>
I do not recall

[12:46:01.0000] <zewt>
hopefully that'll get a real API soon; data: URLs aren't very practical for full-size images

[12:46:02.0000] <roc>
why not?

[12:46:03.0000] <roc>
the base64 expansion kinda sucks but it's not that bad

[12:47:00.0000] <zewt>
multi-megabyte URLs?

[12:47:01.0000] <roc>
there aren't really any other options

[12:47:02.0000] <roc>
works for me

[12:47:03.0000] <TabAtkins>
It's only, what, 2/3rds larger than a naive binary encoding?

[12:47:04.0000] <TabAtkins>
At worst?

[12:48:00.0000] <roc>
1/3

[12:48:01.0000] <roc>
i.e. a 100K image expands to 133K

[12:49:00.0000] <zewt>
setting a 5-megabyte attribute value in javascript sets of general alarm bells in mind mind; but i'd need to think about it more

[12:49:01.0000] <roc>
I can't think of any better way to get an image inline that survives roundtripping

[12:49:02.0000] <zewt>
(mind mind mind mind mind)

[12:50:00.0000] <jgraham>
AryehGregor: Maybe one point per browser it fails in

[12:50:01.0000] <roc>
I know certain browsers have limitations on data: URL length, but those are just bugs

[12:50:02.0000] <hsivonen>
did IE9 remove that bug?

[12:51:00.0000] <roc>
An editor script could override this by replacing the data: URLs with links to some upload service or something, but that's not something the browser should do IMHO

[12:51:01.0000] <zewt>
an ideal API, i think, would be for pasting with an image (or other large resource) to expose a FileAPI file, which you could get an object URL from--though that doesn't actually cover the case of raw image data in the clipboard (it'd need to be transparently converted to a BMP, or something along those lines)

[12:52:00.0000] <AryehGregor>
Does Firefox 4 have some type of built-in DOM inspector?

[12:52:01.0000] <AryehGregor>
(or alternatively, does Firebug work with it?)

[12:54:00.0000] <roc>
Firebug does work

[12:54:01.0000] <roc>
there is no built-in DOM inspector

[12:54:02.0000] <roc>
(yet)

[12:55:00.0000] <zewt>
perhaps not enough justification, but one advantage of that is if you paste into a page and the page (for example) draws it into a canvas, it can be done without converting the data at all; it'd only need to be converted to a visible file format if it was actually read from

[12:55:01.0000] <roc>
the "DOM Inspector" extension also works

[12:55:02.0000] <AryehGregor>
Ah, you need to use an alpha version.

[13:02:00.0000] <jgraham>
TabAtkins: I don't understand what point you are making in your recent whatwg post

[13:03:00.0000] <Hixie>
hsivonen: the bar with acid3 was already just "in CR for at least 3 years" or some such, it's only a little step forwards to go from that to just "specified for at least 3 years".

[13:03:01.0000] <jgraham>
(about script execution/parsing)

[13:03:02.0000] <TabAtkins>
jgraham: Trying to correct getify, is all.

[13:03:03.0000] <TabAtkins>
jgraham: He's making a bad distinction that's harming his reasoning.

[13:03:04.0000] <jgraham>
Maybe I don't understand what distinction he was making then

[13:03:05.0000] <zewt>
awesome, single-page html5 spec has completely frozen ff3, heh

[13:04:00.0000] <zewt>
time for all work to come to a grinding halt until it wakes up again

[13:04:01.0000] <roc>
mmm use FF4 :-)

[13:04:02.0000] <TabAtkins>
He thinks that there is some step called "parsing" where function definitions are evaluated.

[13:04:03.0000] <roc>
that page is, in fact, much better in FF4

[13:04:04.0000] <jgraham>
there is a not-quite-irrelevant distinction between a FunctionExpression and a FunctionDeclaration which is that a FunctionDeclaration is hoisted to the top of the enclosing scope

[13:05:00.0000] <TabAtkins>
That distinction *is* irrelevant for the purpose of determining when functions are parsed or defined.

[13:06:00.0000] <zewt>
roc: i suppose there would be some circularity to using the html5 spec's html as a test case for rendering html

[13:07:00.0000] <roc>
Ian's a big fan of that :-)

[13:07:01.0000] <TabAtkins>
zewt: Only if you are literally executing the html5 spec as your browser's implementation of HTML5.

[13:07:02.0000] <TabAtkins>
And even then, that's just testing the ability of html5 to self-host. ^_^

[13:08:00.0000] <zewt>
heh well, just referring to a basic performance regression test, eg. "how long does the HTML5 spec page take to render"

[13:08:01.0000] <zewt>
don't know if there's one of those in firefox, but i wouldn't be surprised

[13:08:02.0000] <jgraham>
TabAtkins: I don't understand wht you mean by "defined". But sure, the implementation will likely convert the whole thing to an AST at once

[13:08:03.0000] <hsivonen>
zewt: the spec is a test case

[13:10:00.0000] <jgraham>
(or bytecode)

[13:10:01.0000] <hsivonen>
zewt: it's not a basic test. It's a special tests that is unusually heavy on selector matching

[13:11:00.0000] <othermaciej>
jgraham: no, a smart JS parser implementation won't build an AST of the whole thing at once

[13:12:00.0000] <othermaciej>
since many functions are never called, the WebKit JS parser for instance will only syntax check function definitions when parsing the top level, and not actually build an AST or bytecode

[13:13:00.0000] <jgraham>
othermaciej: Yes, I guess that makes sense

[13:13:01.0000] <jgraham>
So is TabAtkins mistaken, or am I confused?

[13:13:02.0000] <TabAtkins>
Hmm, then my correction may be wrong.

[13:13:03.0000] <othermaciej>
I didn't pay attention to the discussion

[13:13:04.0000] <othermaciej>
so I don't know what the real question is

[13:13:05.0000] <zewt>
i think this underlies part of the confusion:

[13:13:06.0000] <zewt>
> So, it strongly suggests that the parsing/interpretation of the code was in

[13:14:00.0000] <othermaciej>
is the question about what the phases are in executing a script?

[13:14:01.0000] <jgraham>
othermaciej: More or less, yes

[13:14:02.0000] <othermaciej>
things happen in this order:

[13:14:03.0000] <zewt>
maybe not--well, backing up

[13:14:04.0000] <othermaciej>
(1) Top level is parsed (but you don't necessarily build AST for function definitions at top level)

[13:14:05.0000] <zewt>
people seem to be getting hung up on when parsing happens, but that doesn't seem relevant to that thread, since that's entirely up to the browser

[13:14:06.0000] <othermaciej>
(2) variable slots are created, without initialization

[13:14:07.0000] <othermaciej>
(3) function bindings are initialized with function objects

[13:15:00.0000] <othermaciej>
(4) code for top-level statements is executed in order

[13:16:00.0000] <othermaciej>
if this is about the "separating script downloads and execution" thread...

[13:16:01.0000] <TabAtkins>
Yes.

[13:16:02.0000] <othermaciej>
then why not just download scripts with XHR and stuff into a <script> element as inline?

[13:16:03.0000] <othermaciej>
I guess that doesn't work for cross-origin scripts

[13:17:00.0000] <zewt>
that forces the browser to delay parsing until execution (without evil hacks, at least), and seems to make things like caching compiled bytecode much harder

[13:18:00.0000] <zewt>
(speculatively compiling javascript received through XHR seems like an evil hack in my book, at least, and doesn't seem like something an optimized script loader would want to depend on)

[13:21:00.0000] <zewt>
i recall XHR has a bad tendency to never use browser cache in some browsers, too (hopefully that'll get fixed, if it hasn't already--don't recall which browsers)

[13:22:00.0000] <jgraham>
/me has to go now but shares bz's general concern that script authors will think they know what works best from limited testing and just wind up defeating browser optimisations

[13:22:01.0000] <jamesr_>
why doesn't <link rel=prefetch> solve this case?

[13:23:00.0000] <zewt>
i *think* both the noexecute and readyState proposals avoid the problems of breaking browser optimizations

[13:23:01.0000] <zewt>
(of course, I havn't thought up every possible optimization)

[13:23:02.0000] <zewt>
jamesr_: there's been some discussion on prefetch in that thread

[13:25:00.0000] <zewt>
off-hand, prefetch is a hint and often loads lazily; when you want to separate script fetching and execution you want it to be guaranteed and a normal-priority fetch, just like a regular script element

[13:25:01.0000] <othermaciej>
zewt: most of the cost of executing an inline script can't be saved by pre-parsing

[13:25:02.0000] <othermaciej>
zewt: that being said, it's totally possible to expose XHR to such optimizations

[13:26:00.0000] <jamesr_>
when you really need the code, you add the <script>

[13:26:01.0000] <othermaciej>
if the problem is that XHR doesn't give enough optimization, but otherwise does the right thing, then better to improve XHR than add a new feature

[13:26:02.0000] <zewt>
othermaciej: that's only true with the lazy-compilation model, right? eg. speculative, background compilation (instead of waiting for execution) could be done at some point

[13:27:00.0000] <othermaciej>
zewt: I don't really understand what you're saying

[13:28:00.0000] <othermaciej>
I will say this, I know about JavaScript implementation internals and browser cache internals, and I do not believe having a special new API to load a script and then execute it is likely to give any performance gain over XHR and then insert inline script

[13:28:01.0000] <zewt>
othermaciej: i mean: it's conceivable that future javascript engine optimizations could benefit from doing work in advance

[13:28:02.0000] <Hixie>
is compilation really that expensive?

[13:28:03.0000] <Hixie>
i haven't seen numbers on compilation cost

[13:29:00.0000] <othermaciej>
More generally, I am skeptical of introducing APIs for performance without metrics that show they can help

[13:29:01.0000] <Hixie>
(most of the benchmarks test execution not compilation)

[13:30:00.0000] <zewt>
(that's a question for the people pushing for the API; I don't need it myself)

[13:30:01.0000] <othermaciej>
if you want to introduce an API, and the goal is performance and not functionality, you need to have a really clear understanding of how it helps performance, and why these optimizations can't be done without new API

[13:31:00.0000] <zewt>
they tend to cite gmail's "scripts-in-comments" hack, but I suspect that's an optimization for crappy dated javascript engines on mobile phones and likely irrelevant on modern ones

[13:31:01.0000] <zewt>
(even on mobile hardware)

[13:34:00.0000] <matjas>
“Remove window.atob/btoa from the W3C draft — http://html5.org/tools/web-apps-tracker?from=5866&to=5867” → Sorry if I missed anything; why was this done?

[13:34:01.0000] <Hixie>
matjas: http://www.w3.org/Bugs/Public/show_bug.cgi?id=12029

[13:35:00.0000] <annevk>
there's a bug number

[13:35:01.0000] <zewt>
well also, there's the case of having major features sets that you don't need at first: whether the expensive part is parsing, compilation, execution or any step in-between, being able to defer that until the feature is used is a reasonable case, too

[13:35:02.0000] <annevk>
matjas, you didn't spot the bug column?

[13:35:03.0000] <Hixie>
matjas: (it's still in the whatwg draft)

[13:35:04.0000] <annevk>
/me wonders what should be done about that

[13:35:05.0000] <Hixie>
put it before the summary

[13:35:06.0000] <Hixie>
people assume the big column is the last one

[13:35:07.0000] <matjas>
annevk: D’oh, no for some reason I never noticed that column before

[13:35:08.0000] <matjas>
Hixie: Thanks

[13:36:00.0000] <TabAtkins>
Damn, I once again missed that there was a bug column.

[13:36:01.0000] <matjas>
annevk: maybe change the ‘B’ into something more descriptive?

[13:36:02.0000] <TabAtkins>
It has nothing to do with the palcement, but is entirely due to the naming.

[13:36:03.0000] <TabAtkins>
What matjas said.

[13:37:00.0000] <matjas>
“Bug #” might make a difference

[13:37:01.0000] <Dashiva>
Can we send bloodthirsty ferrets to the person who named atob/btoa?

[13:37:02.0000] <TabAtkins>
Yes.

[13:37:03.0000] <annevk>
hmm boring

[13:37:04.0000] <zewt>
drop them in a cage with atoi, atof and itoa

[13:38:00.0000] <Dashiva>
Those haven't infected the web

[13:38:01.0000] <zewt>
five incomprehensibly-named functions enter, one incomprehensibly-function leaves

[13:39:00.0000] <zewt>
might as well drop ntohl and htonl in while we're having a cage match

[13:39:01.0000] <TabAtkins>
What are those?

[13:39:02.0000] <zewt>
posix byte order conversion functions

[13:40:00.0000] <Dashiva>
network order to host order long or something

[13:40:01.0000] <matjas>
Sounds like these could all reside under the 1337 namespace.

[13:40:02.0000] <Dashiva>
It's not that I don't understand atob, I just think we could've made a better name for the web

[13:40:03.0000] <zewt>
network to host leet/host to network leet

[13:43:00.0000] <zewt>
(everyone feel free to stop talking right when I make a terrible joke, so it can just sit there festering)

[13:46:00.0000] <TabAtkins>
Sounds like a plan.

[13:49:00.0000] <alystair>
according to the standard, is it safe to remove quotation marks around properties if they are single words or contain no spaces?

[13:50:00.0000] <alystair>
eg. <meta charset="utf-8"> becomes <meta charset=utf-8>

[13:50:01.0000] <annevk>
pretty much

[13:50:02.0000] <alystair>
excellent :)

[13:50:03.0000] <annevk>
we're lazy too

[13:50:04.0000] <annevk>
;)

[13:50:05.0000] <alystair>
/me is a bit-trimming-junky

[13:50:06.0000] <annevk>
hehe

[13:51:00.0000] <TabAtkins>
alystair: You can omit quotes if the value doesn't contain ", ', >, `, or spaces.

[13:51:01.0000] <alystair>
Thanks so much, I'm contributing a patch to html5-boilerplate... as minor as it is :)

[13:53:00.0000] <zewt>
i'll be sad if i start seeing <a href=http://url>, heh

[13:53:01.0000] <paul_irish>
alystair: pretty cool.. though the build script does all that too. :)

[13:53:02.0000] <TabAtkins>
zewt: I do that.

[13:53:03.0000] <nimbupani>
:))

[13:53:04.0000] <zewt>
: |

[13:54:00.0000] <paul_irish>
zewt: i see it a lot. annevk pointed out a while ago that people always do background-image: url(http://omgomg.com/pony.gif);

[13:54:01.0000] <alystair>
paul_irish: augh my ghost!

[13:54:02.0000] <paul_irish>
which is equivalent

[13:54:03.0000] <alystair>
paul is everywhere I want to be >:(

[13:54:04.0000] <TabAtkins>
paul_irish: That's something different than HTML attributes.

[13:54:05.0000] <alystair>
2 steps ahead, always... always

[13:54:06.0000] <zewt>
in CSS it doesn't bother me intuitively, which is probably just a difference in habit

[13:54:07.0000] <paul_irish>
similar but different

[13:54:08.0000] <nimbupani>
yeah i doesnt quite seem that same

[13:55:00.0000] <nimbupani>
i know why

[13:55:01.0000] <bfrohs>
/me now believes he's the only person to always use quotes around attributes (and in CSS)

[13:55:02.0000] <TabAtkins>
Note: It *should* bother you in CSS, as it's difficult to parse efficiently.  HTML attributes are the opposite.

[13:55:03.0000] <alystair>
paul_irish: I'm just thinking it should be modified in the base script that's downloadable as many people won't rebuild it..

[13:55:04.0000] <nimbupani>
because a href can have spaces

[13:55:05.0000] <nimbupani>
while *usually* it is not the case for image file names

[13:55:06.0000] <Dashiva>
TabAtkins: Don't you just tokenize until ) ?

[13:55:07.0000] <TabAtkins>
Dashiva: The answer is, apparently, no.  Handling invalid urls is made difficult somehow.

[13:55:08.0000] <zewt>
spaces are more often than not URL-encoded in either case, though

[13:55:09.0000] <TabAtkins>
I dunno the problems.

[13:55:10.0000] <nimbupani>
thats true zewt

[13:56:00.0000] <alystair>
unless it breaks your build scripts :/

[13:56:01.0000] <zewt>
though browsers don't require it (not sure if that's according to spec or not)

[13:57:00.0000] <annevk>
the problem is silly grammar-based parsers

[13:57:01.0000] <annevk>
rather than a flexible parser

[13:57:02.0000] <annevk>
so you need hacks for URLs because they do not follow the grammar

[13:58:00.0000] <zewt>
i'd expect a strict grammar-based parser trying to parse real-world HTML would find itself unhappy in uncountable ways, heh

[13:58:01.0000] <alystair>
I normally keep quotes around src and href because it's sensible

[13:58:02.0000] <annevk>
if CSS' parser were defined and implemented like the one in HTML, this would be way more easy (and CSS would be a lot less ambiguous)

[13:58:03.0000] <alystair>
I think it would be neat if html or css could apply a click-through

[13:59:00.0000] <alystair>
so you could still layer imagery above actionable content, yet not interfere with operations

[13:59:01.0000] <nimbupani>
you can alystair

[13:59:02.0000] <zewt>
not sure what you mean--pointer-events: none?

[13:59:03.0000] <nimbupani>
what zewt sez

[13:59:04.0000] <alystair>
... ther's such a thing already?

[13:59:05.0000] <TabAtkins>
annevk: That's not the problem.  The problem is that error-handling in unquoted urls requires more lookahead than anything else in CSS.

[13:59:06.0000] <alystair>
holy crap, I'm such a nub.

[14:00:00.0000] <alystair>
the more you know, the more you know you don't know blah blah

[14:00:01.0000] <paul_irish>
you nub.

[14:02:00.0000] <annevk>
TabAtkins, only because you have a grammar-based parser

[14:02:01.0000] <annevk>
TabAtkins, otherwise you could just look for )

[14:03:00.0000] <zewt>
is there someone i can hit at google to stop making w3schools.com results come before w3.org, so i can stop site:*.w3.org'ing all the time, heh

[14:03:01.0000] <TabAtkins>
annevk: Unless there was a preceding /*?

[14:04:00.0000] <TabAtkins>
zewt: We don't manually tweak results.  Ever.

[14:04:01.0000] <TabAtkins>
zewt: Get people to stop linking w3schools.

[14:04:02.0000] <zewt>
well, more seriously what I've wanted countless times is a way to blacklist sites from my results, heh

[14:04:03.0000] <zewt>
w3schools, experts-exchange, etc

[14:04:04.0000] <annevk>
TabAtkins, sort of doubt comments work inside URL tokens

[14:04:05.0000] <TabAtkins>
zewt: There are extensions for that, depending on your browser.

[14:04:06.0000] <annevk>
spaces and such do

[14:05:00.0000] <nimbupani>
all documented in w3fools.com zewt

[14:05:01.0000] <TabAtkins>
annevk: I thought they did.  Anyway, I only barely understand the problems with parsing url().  Ask Moz's Zach.

[14:05:02.0000] <TabAtkins>
zewt: Also, experts exchange is actually useful when you apply a user stylesheet that removes 90% of the page.  Did you know that the *actual* thread is down at the very bottom of the page, so Google can read it?

[14:05:03.0000] <annevk>
they don't

[14:06:00.0000] <annevk>
anyway, I was trying to explain the problem ;)

[14:06:01.0000] <zewt>
TabAtkins: i do, but i don't tend to use sites that deliberately hide their content that much; doesn't inspire any confidence in it

[14:06:02.0000] <TabAtkins>
Well, they're certainly not "experts" there, but it's equivalent or better to most forum posts on technical issues.

[14:06:03.0000] <TabAtkins>
stackoverflow is usually better.

[14:07:00.0000] <zewt>
heh, that's quite an endorsement :P

[14:09:00.0000] <TabAtkins>
How did I never know about the QSA flag in rewrite rules?  I've been hacking around the lack of this for *so long*.

[14:09:01.0000] <gsnedders>
TabAtkins: Because you never fully RTFM?

[14:09:02.0000] <TabAtkins>
TFM is horribly written and gigantic.

[14:09:03.0000] <zewt>
features that require fully RTFMing to use well are questionably-designed features

[14:09:04.0000] <zewt>
... in general, at least

[14:09:05.0000] <TabAtkins>
Yay, it works!

[14:10:00.0000] <TabAtkins>
http://www.xanthir.com/blog/b4AD0?pretty

[14:10:01.0000] <nimbupani>
alystair:

[14:10:02.0000] <nimbupani>
if people add multiple classes

[14:10:03.0000] <nimbupani>
it will break without quotes

[14:11:00.0000] <nimbupani>
are you not using benschwarz work TabAtkins? 

[14:11:01.0000] <nimbupani>
alystair: so we wanted to be consistent and use quotes always

[14:12:00.0000] <alystair>
hmmm alright

[14:12:01.0000] <TabAtkins>
nimbupani: Naw, just my own older styling for my document editor, before I turned it into a blog.

[14:12:02.0000] <alystair>
it is somewhat trivial =)

[14:12:03.0000] <nimbupani>
TabAtkins: i meannn you could :))

[14:13:00.0000] <TabAtkins>
Heh, I don't like all the choices benschwarz made.

[14:13:01.0000] <nimbupani>
kkk :)

[14:15:00.0000] <nimbupani>
can I suggest turning off the bg color/small-caps/underline on the headings >_>

[14:15:01.0000] <TabAtkins>
Just don't look at the pretty version.

[14:16:00.0000] <nimbupani>
:)))

[14:16:01.0000] <zewt>
http://www.xanthir.com/blog/b4AD0?unreadable was worth a try

[14:17:00.0000] <TabAtkins>
...I should do that.

[14:17:01.0000] <zewt>
background-color: #888; color: #999;

[14:18:00.0000] <alystair>
TabAtkins: want to see a fun bug in chrome renderer? :)

[14:18:01.0000] <alystair>
er wait, it's webkit, nvm.

[14:19:00.0000] <alystair>
I keep forgetting that

[14:24:00.0000] <TabAtkins>
Wut: http://twitter.com/mnot/status/35813633313218560

[14:24:01.0000] <nimbupani>
hahahaha

[14:24:02.0000] <nimbupani>
anti-trust!

[14:27:00.0000] <zewt>
accused of standard documents price-fixing

[14:27:01.0000] <alystair>
wow I just broke every rendering engine with this bug :S

[14:27:02.0000] <alystair>
even opera

[14:27:03.0000] <zewt>
lynx

[14:28:00.0000] <TabAtkins>
lynx doesn't have a rendering engine.  It has a CURSES engine.

[14:28:01.0000] <alystair>
it's an image positioning bug, so lynx is not affected :S

[14:28:02.0000] <zewt>
(in that case I think you'd have to put "rendering engine" in quotes)

[14:28:03.0000] <nimbupani>
wat is it alystair?

[14:28:04.0000] <alystair>
sec lemme edit the informational text

[14:30:00.0000] <alystair>
http://lorinhalpert.com/ipoc/bugs/html-positioning/

[14:31:00.0000] <zewt>
https://bugzilla.mozilla.org/show_bug.cgi?id=620156 heh i think this is my single favorite Firefox bug

[14:31:01.0000] <alystair>
I already reported this issue to every major engine group but response has been tepid, expcet for Firefox where they fixed it incorrectly (I broke it again by adding width:auto so they images are scaled properly)

[14:32:00.0000] <alystair>
without width:auto opera manages to render it correctly until you try resizing the window...

[14:33:00.0000] <zewt>
actually there's a better bug--iirc i managed to create a javascript timer that kept activating after the tab was closed; was able to make it open an alert() every ten seconds until the browser was restarted

[14:33:01.0000] <zewt>
(didn't report it since it's fixed in 4; it's useless but amusing)

[14:33:02.0000] <alystair>
haha now get it working in chrome and win 20k :P

[14:33:03.0000] <alystair>
although with sandboxing, doubt it would work

[14:34:00.0000] <zewt>
it's especially obnoxious since it's essentially impossible to tell who's doing it

[14:34:01.0000] <TabAtkins>
alystair: Your test case seems incorrect.  If I remove the @width and @height from both <img>s, I get the same result.

[14:35:00.0000] <alystair>
what do you mean by same result?

[14:36:00.0000] <TabAtkins>
Where they don't overlap properly.

[14:36:01.0000] <alystair>
removal of height prevents the browser from resizing the image tho'.

[14:38:00.0000] <alystair>
the end result here is if someone decides to have an image within a block that is automatically resized to the height of the viewport, it pushes the resized image away from the correct position because it's still using the width of the natural image, not the resized dimension

[14:39:00.0000] <alystair>
the simple solution would be using the resized image width instead of natural width for block size calculations :p

[14:42:00.0000] <zewt>
it goes away if i change .bug { height: 100%; } to eg. .bug { height: 500px; }

[14:43:00.0000] <alystair>
yes but that's cheating :)

[14:43:01.0000] <zewt>
it also goes away if i set img { height } similarly

[14:43:02.0000] <alystair>
I could have js that automagically goes in and sets height to correct px depending on viewport resize (which I do)

[14:43:03.0000] <alystair>
but realistically when you want something to fill the viewport in all use cases, 100% height should work...

[14:43:04.0000] <zewt>
size determination in css always gives me a headache, heh

[14:44:00.0000] <alystair>
or %

[14:44:01.0000] <Hixie>
is arun still editing the file api spec?

[14:44:02.0000] <Hixie>
also, is there a convention for getting Blob or File objects asynchronously?

[14:46:00.0000] <TabAtkins>
alystair: Okay, I've fiddled with your testcase more.  I still don't see the problem.  body>img is left-aligned, while .bug>img is right-aligned.  Neither is sized to completely fill the viewport in both dimensions, so of course they won't perfectly overlap unless you got really lucky.

[14:46:01.0000] <Hixie>
aha, getEntry() in DirectoryEntry in http://dev.w3.org/2009/dap/file-system/file-dir-sys.html#idl-def-DirectoryEntry

[14:46:02.0000] <zewt>
depends on which api you're getting them from, right?

[14:46:03.0000] <annevk>
Hixie, they are async themselves...

[14:47:00.0000] <Hixie>
Blob.size isn't async

[14:47:01.0000] <Hixie>
actuall yBlob.size isn't anything, it has no "must"s

[14:47:02.0000] <TabAtkins>
Blob.size is the only sync part of it, as far as I know.

[14:47:03.0000] <Hixie>
for my purposes i need to not return the Blob until i know the size

[14:48:00.0000] <Hixie>
(getting a blob from a canvas)

[14:48:01.0000] <zewt>
TabAtkins: simplified in http://zewt.org/~glenn/Natural%20Width%20Error.htm; resize the window and it's not immediately obvious why the image is left-justified in the div, instead of the div and img coming to the same size and being right-aligned to the window

[14:48:02.0000] <alystair>
TabAtkins: you're still left with unexplained padding in the the surrounding div

[14:48:03.0000] <zewt>
(not entirely convinced it's a bug, guessing it's one of those weird unintuitive css oddities)

[14:49:00.0000] <annevk>
Hixie, could be a bug that size is sync

[14:49:01.0000] <annevk>
anyway, gotta go

[14:55:00.0000] <TabAtkins>
alystair: Ah, I finally see the "bug" you're running into.  My previous criticisms were incorrect.

[14:56:00.0000] <TabAtkins>
Wait, hm, let me make sure I'm reading the spec right...

[14:56:01.0000] <TabAtkins>
It looks like the difference in width/positioning between abspos normal elements and abspos replaced elements.

[14:58:00.0000] <alystair>
TabAtkins: you might hate me for this but I know nothing of specs yet, I'm just a lowly it/ux/designer consultant looking for employment at the moment... that's why my terminology is probably all wrong and confusing :)

[15:11:00.0000] <karlcow>
http://ai-depot.com/articles/the-easy-way-to-extract-useful-text-from-arbitrary-html/

[15:17:00.0000] <TabAtkins>
alystair: Okay, found the problem.  Yes, it's a bug.  When we're calculating the size of an abspos element (or fixpos, same thing) where 'width' and one of the edges is 'auto', you're supposed to set the 'width' to the shrink-to-fit width, then solve for the other side.

[15:18:00.0000] <TabAtkins>
What this *should* do is set <div.bug>'s 'left' property to a negative value.  However, in ltr we don't let the 'left' calculate to less than 0.

[15:18:01.0000] <TabAtkins>
Similarly, if you swap the "right:0" to "left:0", and then set dir=rtl on <html>, the same error pops up.

[15:19:00.0000] <TabAtkins>
If "left" is specified in ltr, or "right" is specified in rtl, it works correctly.

[15:22:00.0000] <alystair>
TabAtkins: wow you're a beast

[15:24:00.0000] <gsnedders>
Not a beauty? Blast.

[15:24:01.0000] <TabAtkins>
This might be a reasoanble behavior, though - it prevents you from having data (in this case, part of the image) in an area you can't scroll to, since you can't scroll to any position less than 0 in ltr, and similarly in rtl.

[15:24:02.0000] <TabAtkins>
gsnedders: I DISAGREE.

[15:24:03.0000] <TabAtkins>
/me preens.

[15:24:04.0000] <zewt>
nobody says they're mutually exclusive; perhaps he's a beautiful beast

[15:25:00.0000] <TabAtkins>
Lemme see if I can reproduce it with just text.

[15:25:01.0000] <alystair>
I think it's simply lazy programming, where all image engines return original image width instead of resized width...

[15:26:00.0000] <zewt>
i think css layout is more complicated than that :)

[15:26:01.0000] <alystair>
/me knows nothing of the behind-the-scenes magic

[15:31:00.0000] <TabAtkins>
The hell?  I just broke X by doing alert(x.toDataURL()).

[15:31:01.0000] <TabAtkins>
Or rather, I broke Compiz I think.

[15:32:00.0000] <TabAtkins>
(x was a 500x500 canvas painted pure blue)

[15:32:01.0000] <zewt>
heh i've exploded things frequently doing that sort of thing

[15:32:02.0000] <TabAtkins>
I just wanted a large square image to test things with. ;_;

[15:33:00.0000] <zewt>
which is why I generally don't like toDataURL at all--object URLs are much saner...

[15:33:01.0000] <TabAtkins>
And it was faster to generate a data url via canvas typed in as a data url than it was to open GIMP.

[15:33:02.0000] <TabAtkins>
/me probably does too much in data: urls these days.

[15:33:03.0000] <alystair>
Canvas has such great flexibility, but at the same time it could be used for pure evil :/

[15:34:00.0000] <TabAtkins>
This has nothing to do with canvas.  I think alerting a large unbreakable string is what caused the problem.

[15:34:01.0000] <Hixie>
surely 500x500 pure blue should compress really well

[15:34:02.0000] <alystair>
Hixie: maybe you should try #f0f instead? maybe it likes magenta better :p

[15:35:00.0000] <zewt>
that's another thing about data urls--often you want uncompressed data (if you're taking data from a canvas and dropping it in an img, you don't want PNG mixed in) ... which seems to suggest using BMP, which itself is unpleasant

[15:36:00.0000] <zewt>
i guess technically you can make uncompressed PNGs

[15:38:00.0000] <TabAtkins>
Hixie: The resultant data url is nearly 3k.

[15:38:01.0000] <TabAtkins>
Which seems pretty heavyweight for a pure blue png.

[15:38:02.0000] <Hixie>
that doesn't seem optimal, yeah

[15:39:00.0000] <zewt>
that sounds pretty normal

[15:39:01.0000] <TabAtkins>
Actually, it's pure black.  I guess I did something wrong.  Anyway, it's 500x500 and a solid color.

[15:39:02.0000] <zewt>
png isn't good at getting *really* small like, say, gifs

[15:40:00.0000] <TabAtkins>
Hm.  Running it through an optimizer only gets me down to 2k.

[15:42:00.0000] <TabAtkins>
Ah, here we go.  Running it through a better optimizer dropped the entire file to 125 bytes.

[15:42:01.0000] <TabAtkins>
That's more like it.

[15:42:02.0000] <zewt>
extra metadata chunks?

[15:42:03.0000] <TabAtkins>
I doubt canvas adds too much metadata.

[15:42:04.0000] <zewt>
i wouldn't expect it to, but i'm not sure why else it would be that different

[15:44:00.0000] <TabAtkins>
We don't seem to have a bug for this.  I'll add one.

[15:45:00.0000] <zewt>
for the alert problem?

[15:45:01.0000] <TabAtkins>
No, for the horrible dataurl generation.

[15:45:02.0000] <TabAtkins>
I need to test the alert problem more.

[15:46:00.0000] <Philip`>
I assume browsers are unlikely to automatically palettise PNGs, which is what you need to get it to 125 bytes

[15:47:00.0000] <roc>
I write canvas code to generate PNGs too

[15:47:01.0000] <zewt>
heh all of the png spec liniks on libpng.org are broken

[15:47:02.0000] <Yuhong>
IE9 RC was released today, which finally supports XHTML.

[15:48:00.0000] <Philip`>
Strangely the PLTE chunk supports 1-entry palettes but the image can't be 0-bit, only 1-bit :-(

[15:48:01.0000] <Yuhong>
The sad thing about it is that it will be likely about 5 years after IE9 releases for IE8 to die.

[15:48:02.0000] <Yuhong>
And today it is already 11 years after the release of XHTML 1.0!

[15:48:03.0000] <zewt>
seems like pngcrush won't automatically trim PLTE chunks

[15:49:00.0000] <Rik`>
Yuhong: RC doesn't mean general availability for everyone

[15:49:01.0000] <Rik`>
we still need to wait for a true release

[15:49:02.0000] <Yuhong>
Yes.

[15:50:00.0000] <AryehGregor>
So the latest IE blog post yet again quotes pass figures on MS's own tests without counting anyone else's and without making this fact clear.

[15:50:01.0000] <TabAtkins>
Interestingly, there's a significant size difference between a 500x500 transparent image and a 500x500 black image.

[15:51:00.0000] <TabAtkins>
The former is about half the size.

[15:52:00.0000] <AryehGregor>
Yuhong, I think IE8 will die a lot faster than IE6 did.

[15:52:01.0000] <AryehGregor>
Because of IE9's compatibility mode.

[15:52:02.0000] <TabAtkins>
I assume that every pixel being 0,0,0,0 instead of 0,0,0,255 allows better compression.

[15:52:03.0000] <AryehGregor>
IE7 died more quickly than IE6, right?

[15:53:00.0000] <Yuhong>
But then there is the issue of the lack of XP support.

[15:53:01.0000] <zewt>
TabAtkins: that's what I was thinking, but I'd expect the difference to be tiny

[15:53:02.0000] <AryehGregor>
XP is no longer supported by Microsoft as of when?

[15:53:03.0000] <zewt>
ie9 doesn't run in XP, which is aggrevating; I have to run win7 in a VM to test with it

[15:53:04.0000] <TabAtkins>
Let's test by filling it with a color that's different in every component.

[15:53:05.0000] <Yuhong>
And BTW, XP and IE6 end support together in the MS support lifecycle.

[15:53:06.0000] <zewt>
of course since you can't really run multiple versions of IE on one system I need VMs for each version anyway

[15:53:07.0000] <AryehGregor>
Ah, IE9 finally supports WebM if the codec is present.

[15:53:08.0000] <AryehGregor>
With the RC.

[15:53:09.0000] <AryehGregor>
Or so the blog post says.

[15:54:00.0000] <Yuhong>
And yes, I mentioned XHTML because of yesterday's discussion.

[15:54:01.0000] <zewt>
TabAtkins: fyi, from PS, 500x500 transparent is 4340 bytes, black is 3840

[15:54:02.0000] <TabAtkins>
That's just crazy talk.

[15:55:00.0000] <zewt>
er wait, I saved as paletted

[15:56:00.0000] <AryehGregor>
So, two-factor authentication for Google Accounts.

[15:56:01.0000] <AryehGregor>
Sounds scary.

[15:56:02.0000] <AryehGregor>
What if you lose your cell phone?

[15:56:03.0000] <TabAtkins>
And, nope, filling it with #05a (0055aaff, in full) is identical.

[15:56:04.0000] <TabAtkins>
AryehGregor: They give you a set of backup codes.

[15:56:05.0000] <TabAtkins>
AryehGregor: It's your responsibility to keep track of them.

[15:56:06.0000] <zewt>
heh, saving as non-paletted, transparent is 4409 bytes, black is 4408

[15:56:07.0000] <AryehGregor>
Oh, so you get some codes that permanently work, so you can write them down in a bunch of secret places and if you lose your phone you can disable two-factor authentication?

[15:57:00.0000] <TabAtkins>
Yeah.

[15:57:01.0000] <AryehGregor>
Awesome.

[15:57:02.0000] <AryehGregor>
/me signs up

[15:57:03.0000] <TabAtkins>
And I'm sure there's some recovery option.

[15:57:04.0000] <TabAtkins>
There are a few things that don't work well with 2-factor yet, but I'm pretty happy with it all-told.

[15:57:05.0000] <TabAtkins>
(Mainly, profile sync on ChromeOS after you've already set up your account.)

[15:58:00.0000] <TabAtkins>
Bookmark the application-specific password page.  You'll need it.

[15:58:01.0000] <TabAtkins>
And it's hard to find otherwise.

[15:58:02.0000] <AryehGregor>
"Application-specific password page"?

[15:59:00.0000] <TabAtkins>
There should be links somewhere in the information about setting it up.

[15:59:01.0000] <AryehGregor>
/me doesn't see the option yet, will have to wait

[15:59:02.0000] <TabAtkins>
Most external programs don't understand 2-factor, so you instead make an application-specific password for them which is very long.


2011-02-11
[16:02:00.0000] <AryehGregor>
And it only lets them have limited access, or what?

[16:02:01.0000] <TabAtkins>
No, they get normal access.  It's just a stronger protection than your normal google password, roughly equivalent to what 2-factor offers.

[16:03:00.0000] <TabAtkins>
And, once they give you the password, they NEVER SHOW IT TO YOU AGAIN.  You copy-paste, and then it's down the memory hole forever.

[16:03:01.0000] <Hixie>
trying to understand the relationship between canvas shadows and the globalCompositeOperator is giving me a headache

[16:05:00.0000] <AryehGregor>
TabAtkins, but that implies that if the application remembers the login info, an attacker who compromises the machine where the application is gets access just like if I didn't use two-factor auth, right?

[16:05:01.0000] <TabAtkins>
Yes.  So bug the app-maker to understand 2-factor.

[16:07:00.0000] <Philip`>
Hixie: What's confusing about it? :-)

[16:07:01.0000] <TabAtkins>
You're still more secure than you were before (long random password that's unique to that specific app, so leaking it doesn't compromise anything else), just not as much as you would be if the app knew 2-factor properly.

[16:08:00.0000] <Hixie>
Philip`: http://goo.gl/0FwR8

[16:08:01.0000] <Hixie>
Philip`: why do opera and gecko differ on the rendering at the top left?

[16:08:02.0000] <TabAtkins>
Okay, restarted X.  Let's see if we can reproduce this alert problem.

[16:09:00.0000] <Philip`>
That page makes my CPU cry

[16:12:00.0000] <zewt>
it acts as coolant

[16:12:01.0000] <TabAtkins>
Okay, yeah, long unbreakable strings passed to alert() break compiz.  Hrm.

[16:14:00.0000] <TabAtkins>
Shit.  I didn't understand the consequences of "open the last tabs" option when I planned to crash my browser with a tab.

[16:14:01.0000] <zewt>
heh

[16:14:02.0000] <zewt>
i've done that before, after hosing firefox with an alert() cycle

[16:15:00.0000] <TabAtkins>
Let's not do that again.

[16:16:00.0000] <zewt>
i try to remember to start a separate firefox process when i'm aiming to crash it, heh

[16:17:00.0000] <AryehGregor>
Doesn't it give you the option of not reopening the tabs if it crashes a couple of times on start?

[16:17:01.0000] <zewt>
you can deselect individual tabs ... but you have to remember to do that

[16:17:02.0000] <TabAtkins>
AryehGregor: It wasn't a startup crash, it was a windowing-system crash after the browser had successfully started and then opened a page.

[16:18:00.0000] <TabAtkins>
Anyway, got it fixed.  The browser itself was still fine, just the window was dead.  Hit ctrl+n, navigated to google, closed the broken page from the taskbar.

[16:20:00.0000] <AryehGregor>
Oh.

[16:21:00.0000] <zewt>
it should still give the "crashed, close tabs?" dialog after a crash before restarting the session, though

[16:21:01.0000] <TabAtkins>
As far as Chrome was concerned, there was no crash.

[16:21:02.0000] <zewt>
oh, yeah. i was thinking FF

[16:22:00.0000] <zewt>
which remembers if it was shut down unexpectedly

[16:36:00.0000] <Philip`>
Hixie: http://goo.gl/aOqhq - Opera seems to be clipping the stroke to the canvas before computing its shadow, so the top of the shadow (from the clipped-out part of the stroke off the top) is missing

[16:36:01.0000] <Philip`>
but only in certain compositing modes

[16:36:02.0000] <Hixie>
yeah, i was about to say http://goo.gl/ee6Lc

[16:37:00.0000] <Hixie>
how odd

[16:37:01.0000] <Hixie>
opera people, see bug in http://goo.gl/aOqhq

[16:39:00.0000] <Philip`>
I think it's source-{in,out}, destination-{in,out,over,atop}, but not any other, as far as I can tell

[16:40:00.0000] <Philip`>
I don't know what's common between those modes

[16:41:00.0000] <Hixie>
i don't understand why you'd have mode-specific shadow rendering

[16:44:00.0000] <Philip`>
It only seems to happen at the edges of the canvas, not the clipping region

[16:48:00.0000] <Hixie>
Philip`: the bug is an unsurprising bug, what's surprising is that it only happens in certain modes

[16:49:00.0000] <Philip`>
Mode-specific optimisations don't seem unlikely

[17:02:00.0000] <zewt>
heh transparent black brings back unhappy memories

[17:03:00.0000] <zewt>
i've had to write code to heuristically guess the "outline" color of an image and set transparent pixels to that color, to be able to rescale images without causing outlines from transparent pixel colors blending in with visible ones ... lots of fun

[17:16:00.0000] <alystair>
zewt you're using win XP but W7 in VM?

[17:16:01.0000] <zewt>
yes

[17:16:02.0000] <zewt>
well, xp64

[17:16:03.0000] <alystair>
I'd be interested in knowing the rationality behind that, got some legacy apps that you just can't get rid of?

[17:16:04.0000] <zewt>
i like XP's UI; i hate Win7's UI

[17:17:00.0000] <zewt>
i'm sure i'll be forced into win7 eventually; but I'll delay it as long as I can, heh

[17:21:00.0000] <alystair>
I had the same rationality earlier, but I don't mind the new aero

[17:21:01.0000] <alystair>
if you're really hellbent I bet there's an explorer.exe replacement with your name on it

[17:22:00.0000] <alystair>
man this has been the most distracting room I've been in, in ages. I need to leave freenode so I can get my portfolio up to apply to ze Google and a few other places :)

[17:35:00.0000] <zewt>
aero is silly, but it's the functional things I can't stand, like the menu interface I've been using for 15 years suddenly being thrown in the trash

[17:36:00.0000] <zewt>
heh now i'm thinking about what would happen if blob.slice()'s clamping was also done asynchronously ... ick

[17:42:00.0000] <erlehmann>
zewt, why didn't you just scale in color-corrected hypercone space?

[17:42:01.0000] <erlehmann>
(what is it called again?)

[17:42:02.0000] <erlehmann>
premultiplied!

[17:43:00.0000] <TabAtkins>
I like hypercone better.  Mainly because then I can say "hypercube" rather than the clunky "non-premultiplied".

[17:43:01.0000] <zewt>
well they weren't premultiplied images; they were opengl textures

[17:44:00.0000] <erlehmann>
fun fact: windows xp is older than my sister, who is 10. a few month ago she asked me how to set up a virtual pc — not because it is terribly interesting, but because they have to use windows xp at school and she wants to know the quirks of the system.

[17:44:01.0000] <zewt>
(i've rarely dealt with premultiplied data, so I'm not even entirely sure what it's for)

[17:45:00.0000] <erlehmann>
zewt, premultiplied is solving all your “transparent black” problems.

[17:45:01.0000] <zewt>
(though i suspect a slight memory jog and I'd recall)

[17:45:02.0000] <TabAtkins>
zewt: hypercone rgba has "better" behavior when transitioning to/from transparent black.

[17:45:03.0000] <erlehmann>
“more intuitive” as in “expected”.

[17:46:00.0000] <erlehmann>
zewt, http://www.gimp.org/docs/plug-in/appendix-alpha.html

[17:47:00.0000] <erlehmann>
even most graphics people i know cannot into premultiplied space

[17:47:01.0000] <TabAtkins>
"cannot into"?

[17:47:02.0000] <zewt>
yeah, but it's unusual to use that with opengl (though I suspect possible, using a different blend function)

[17:47:03.0000] <zewt>
been a couple years since I've dealt with that layer in depth so I'm rusty

[17:49:00.0000] <erlehmann>
TabAtkins, chanspeak. i am closely affiliated with an imageboard i shall not name. “X cannot into” is short for “X is not able to understand” or, depending on circumstances “X is not able to correctly apply”

[17:49:01.0000] <erlehmann>
it is short and most people understand. so i use it. slang!

[17:49:02.0000] <TabAtkins>
use "grok" instead of "into".  That makes sense outside of the chans, and has the same letters.

[17:50:00.0000] <zewt>
people have brought 4chanisms into work skype channels; it makes me want to bonk people. heh

[17:50:01.0000] <erlehmann>
zewt, many graphics tools use premultiplied transitions. i would be surprised if there isn't some library for that stuff regarding opengl.

[17:51:00.0000] <erlehmann>
TabAtkins, i understand completely.

[17:51:01.0000] <zewt>
using it with an existing opengl engine is probably difficult

[17:51:02.0000] <zewt>
but if you engineer with it in mind from the beginning, yeah.

[17:52:00.0000] <zewt>
erlehmann: you into

[17:52:01.0000] <zewt>
heh

[17:53:00.0000] <erlehmann>
zewt, me into what?

[17:53:01.0000] <erlehmann>
zewt, can't you just write a shader that premultiplies? i am not a clever guy.

[17:54:00.0000] <zewt>
the scaling happens before the textures are loaded

[17:54:01.0000] <zewt>
(eg. if a texture is too big for the hardware's max texture size, or if it's been flagged as scale-to-power-of-2 to allow repeating)

[17:55:00.0000] <erlehmann>
zewt, so how do you scale?

[17:55:01.0000] <zewt>
straightforward image resampling

[17:57:00.0000] <erlehmann>
and you cannot modify it to add a multiply step?

[17:57:01.0000] <zewt>
if you really care, https://svn.stepmania.com/svn/trunk/stepmania/src/RageSurfaceUtils.cpp RageSurfaceUtils::FixHiddenAlpha

[17:57:02.0000] <zewt>
you can't premultiply, rescale and then un-premultiply; premultiplication is lossy

[17:58:00.0000] <TabAtkins>
Pfft.  Only if you're using limited-precision numbers.

[17:58:01.0000] <zewt>
oh yeah, that affects gpu scaling as well, not just software scaling before loading

[17:58:02.0000] <zewt>
actually now that i remember, that's the more common case

[17:59:00.0000] <TabAtkins>
You don't even need computable reals - you could make it lossless by using rationals.

[18:01:00.0000] <zewt>
this script execution thread sure has people excited

[18:04:00.0000] <erlehmann>
i wonder why

[18:05:00.0000] <erlehmann>
it is so full on conjecturing.

[18:05:01.0000] <erlehmann>
of

[18:05:02.0000] <TabAtkins>
into

[18:05:03.0000] <zewt>
through

[18:06:00.0000] <erlehmann>
well played, TabAtkins

[18:10:00.0000] <zewt>
TabAtkins: actually, wouldn't rationals result in n/infinity when A = 0? might make accelerated blending a challenge...

[18:11:00.0000] <zewt>
(if there's an nvidia engineer lurking in here, he probably just went into convultions)

[18:12:00.0000] <erlehmann>
The WHATWG is committed to the well being of all participants. Cake and grief counseling will be available at the conclusion of the Javascript parsing thread.

[18:12:01.0000] <zewt>
that may, however, be separated from the script download

[18:12:02.0000] <GarethAdams|Home>
the thread is a lie

[18:13:00.0000] <erlehmann>
(The WHATWG once again reminds you that Parser Hell is a real place where your script will be sent at the first sign of defiance.)

[18:15:00.0000] <erlehmann>
CSSquirrel probably has made Portal jokes as soon as chrome came out.

[18:16:00.0000] <zewt>
i've never understood why a browser whose most obvious UI design principle is having as little chrome as possible is named "chrome"

[18:21:00.0000] <webr3>
ium

[18:26:00.0000] <erlehmann>
ha!

[18:26:01.0000] <erlehmann>
now CAPS ARE USED in the javascript thread.

[18:26:02.0000] <zewt>
yeah I'm giving up on that thread for a while heh

[18:27:00.0000] <erlehmann>
“That something *can* be abused is not proof it will be”

[18:27:01.0000] <erlehmann>
there is the error.

[18:28:00.0000] <jamesr_>
i'm going to prefetch but not read that thread

[18:28:01.0000] <zewt>
most anything can be abused. heh

[18:28:02.0000] <erlehmann>
zewt, i have seen perl code. and every single time i show it to perl guys, they say “just don't use it that way”

[18:28:03.0000] <zewt>
well, the only way to use perl is to abuse it

[18:29:00.0000] <erlehmann>
wakaba_1, are you related to imageboard software?

[18:30:00.0000] <erlehmann>
if so, i'd love to hear what a new era of html5 imageboards might bring!

[18:30:01.0000] <wakaba_1>
erlehmann: no

[18:30:02.0000] <erlehmann>
oh

[18:30:03.0000] <erlehmann>
:/

[18:32:00.0000] <paul_irish>
Hixie:  regarding http://html5.org/r/5873 should it also indicate how this behavior should change if CORS is invoked?

[18:32:01.0000] <paul_irish>
or does mention of 'origin' generally imply that.

[20:11:00.0000] <Hixie>
paul_irish: can CORS be used?

[20:12:00.0000] <paul_irish>
technically, no. but from the webkit engineers i've talked to, they indicate if a cross-origin image is served with CORS, then for example, it shouldnt throw exceptions within getImageData

[20:12:01.0000] <paul_irish>
just.. no one's gotten around to doing that yet.

[20:13:00.0000] <Hixie>
when we spec how CORS works in those situations, i'll update the spec

[20:13:01.0000] <paul_irish>
cool.

[20:15:00.0000] <zewt>
been blocked by that before ... tried playing with canvas to allow applying a gamma curve to an image, but since images weren't same-origin i couldn't do much of anything with canvas

[21:09:00.0000] <Sirisian>
Updated: http://www.w3.org/Bugs/Public/show_bug.cgi?id=9557#c12

[22:52:00.0000] <alystair>
and now for some terrible abuse of html http://finalboss.org/h/

[22:55:00.0000] <Sirisian>
pretty

[01:18:00.0000] <connrs>
untitled folder

[01:48:00.0000] <jgraham>
Sigh.

[03:05:00.0000] <annevk>
btw, I don't want Window in DOM Core

[03:07:00.0000] <Ms2ger>
Maybe you should put that in the spec ;)

[03:47:00.0000] <annevk>
I think DOM Core should define Events (just the infrastructure), Nodes, probably Event Loops and Mutation Events, and maybe event handlers

[03:48:00.0000] <jgraham>
Mmm mutation events

[03:50:00.0000] <Ms2ger>
Mmm implementation reports

[03:51:00.0000] <annevk>
Hmm ice cream

[03:59:00.0000] <pluma>
annevk: What's with the recent blogpost re XML? I don't quite gather what happened prior to that.

[04:02:00.0000] <annevk>
pluma, I got frustrated with the continued bashing from the XML community

[04:03:00.0000] <pluma>
annevk: I wasn't aware of that at all. I thought XML5 was coming along nicely?

[04:03:01.0000] <annevk>
pluma, e.g. http://twitter.com/#!/ndw/status/35097590135525376

[04:03:02.0000] <annevk>
pluma, oh, it seems that has some traction for sure

[04:04:00.0000] <annevk>
pluma, but meanwhile what we try to do with HTML gets us mostly flames and roadblocks

[04:04:01.0000] <pluma>
annevk: Well, some resistance is to be expected.

[04:04:02.0000] <pluma>
annevk: Don't give up. I like the direction the HTML/WebApp specs are taking.

[04:04:03.0000] <annevk>
pluma, it is a bit lame of course to complain about unfairness on your blog, but I felt I could do it once

[04:04:04.0000] <pluma>
Sure. You're entitled ;)

[04:08:00.0000] <annevk>
http://conversations.nokia.com/2011/02/11/open-letter-from-ceo-stephen-elop-nokia-and-ceo-steve-ballmer-microsoft/?mobile -- two failing giants team up

[04:08:01.0000] <annevk>
I wonder what that will do

[04:09:00.0000] <annevk>
wow  that video is lame

[04:17:00.0000] <erlehmann>
annevk, its a shame. the n900 had awesome stuff eons before android came along and nokia failed it.

[04:28:00.0000] <pluma>
Ballmer's voice has seen better days.

[04:30:00.0000] <wilhelm>
The N900 rocks, but it seems this will be my last Nokia phone. |c:

[04:31:00.0000] <pluma>
What OS has Nokia been using before?

[04:32:00.0000] <wilhelm>
Several.

[04:37:00.0000] <annevk>
pluma, is this going to be the moment where you'll become more actively involved in standards btw?

[04:38:00.0000] <annevk>
pluma, assuming I guessed correctly which website you are associated with I've always hoped that to be the case :)

[04:38:01.0000] <pluma>
Erm... what would that be then? I think you're mistaking me for somebody else.

[04:39:00.0000] <annevk>
http://plasmasturm.org/

[04:39:01.0000] <pluma>
That's interesting, but not me.

[04:40:00.0000] <annevk>
ah, too bad

[04:40:01.0000] <pluma>
I get that a lot.

[04:40:02.0000] <pluma>
Sorry for being just me ;)

[04:40:03.0000] <annevk>
you're most welcome for just being you :)

[04:42:00.0000] <pluma>
Nah, I'm just a regular web dev. My name is in the HTML acknowledgments and that's the biggest achievment I can show.

[04:42:01.0000] <annevk>
hmm

[04:42:02.0000] <annevk>
pluma, that's how most people start out ;)

[04:43:00.0000] <annevk>
the hmm was for DOM Events btw... which does not specify what multiple calls to addEventListener does and which listener will be removed if you then do removeEventListener

[04:43:01.0000] <pluma>
At least it's something I can put in my resume. Hixie helped me figure out I contributed _something_ to Web Forms 2. Still not sure of what it was exactly, but apparently I was noticed.

[04:44:00.0000] <annevk>
heh

[04:44:01.0000] <annevk>
I started there too

[04:44:02.0000] <pluma>
Sounds like addEventListener/removeEventListener expects there to be exactly one listener, as was the norm back in the days.

[04:44:03.0000] <annevk>
type=uri was my proposal, until I realized it should really be type=url

[04:45:00.0000] <pluma>
No love for urns?

[04:45:01.0000] <annevk>
love for consistency with terms we use elsewhere

[04:45:02.0000] <annevk>
CSS uses url()

[04:47:00.0000] <pluma>
true

[04:48:00.0000] <jgraham>
Probably most people don't start out with their name in the spec as their first achievement

[04:49:00.0000] <annevk>
well look at that

[04:50:00.0000] <annevk>
the way I defined it for http://dev.w3.org/csswg/cssom-view/#the-mediaquerylist-interface matches how DOM Events actually work

[04:50:01.0000] <annevk>
cannot insert duplicate event listeners

[04:50:02.0000] <annevk>
I have a faint recollection I reverse engineered it back then to make sure it was consistent

[04:50:03.0000] <pluma>
Most of my involvement is historical at best anyway. I tend to the forum on occasion and follow the whatwg mailing list, but my activity peaked somewhere around six years ago.

[04:52:00.0000] <annevk>
well, if you ever want to get "serious" about this, it seems to be rather easy to get employed doing something with standards these days

[04:52:01.0000] <pluma>
These days I mostly just shout at people who do it wrong, tbh.

[04:52:02.0000] <Ms2ger>
annevk:

[04:52:03.0000] <Ms2ger>
  readonly attribute DOMString matches;

[04:52:04.0000] <annevk>
it's like "1) passion 2) ... 3) job"

[04:53:00.0000] <Ms2ger>
The matches must return true...

[04:53:01.0000] <zewt>
the best pattern, when you manage to stumble upon "..." :P

[04:53:02.0000] <Ms2ger>
Sounds like a boolean to me

[04:53:03.0000] <annevk>
Ms2ger, nobody reads my specs :)

[04:53:04.0000] <pluma>
Well, yeah, I call it "evangelism" to make it sound more legit. But most of what I do is follow standards and point out when people don't know what they're doing.

[04:53:05.0000] <Ms2ger>
annevk, yeah, I'm weird like that ;)

[04:55:00.0000] <pluma>
I already supported web standards before the WaSP became a bunch of guys shouting at kids to keep off their lawn. Actually, the WaSP didn't even exist back then.

[04:56:00.0000] <pluma>
But, yes. I prefer following standards over writing them, so I guess I'll stick with what I do best.

[05:14:00.0000] <annevk>
oh look

[05:14:01.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#events

[05:14:02.0000] <annevk>
Ms2ger ran an update

[05:16:00.0000] <annevk>
rewriting a spec is a good way of discovering holes in the old copy

[05:17:00.0000] <annevk>
I guess that's why a lot of people want a rewrite of CSS

[05:17:01.0000] <Ms2ger>
No, that's because CSS is unreadable

[05:26:00.0000] <pluma>
I can't wait for the "let's implement Sass in the browser and pretend it's still CSS" stuff scheduled for later this year. I'm seriously looking forward to that.

[05:26:01.0000] <annevk>
Sass?

[05:26:02.0000] <pluma>
sass-lang.com

[05:27:00.0000] <Ms2ger>
Tab's stuff

[05:27:01.0000] <pluma>
i.e. native variables and nesting in CSS.

[05:27:02.0000] <pluma>
If that's a prank, I'm going to kill whoever started it, though.

[05:28:00.0000] <Ms2ger>
The WG has been working on variables for a long time, but we've never had a draft browsers agreed to implement

[05:30:00.0000] <pluma>
Well, it'd be blatantly backwards-incompatible, but if it sees the light of day before IE9 is out, it might have a chance.

[05:30:01.0000] <annevk>
it's not going in IE9

[05:31:00.0000] <pluma>
Damn.

[05:31:01.0000] <Ms2ger>
IE9 is going out Real Soon Now, no?

[05:31:02.0000] <pluma>
Here's to another ten years of wishing for IE to die, then. MS made it pretty clear they think not forcing upgrades is a good thing.

[05:37:00.0000] <annevk>
geez

[05:37:01.0000] <annevk>
Event.timeStamp is useful...

[05:37:02.0000] <jgraham>
</sarcasm>?

[05:37:03.0000] <Ms2ger>
/me takes a deep breath and processes it like any other end tag below

[06:03:00.0000] <annevk>
if you hear something about the Microdata study again: http://www.useit.com/alertbox/20000319.html

[06:24:00.0000] <Ms2ger>
annevk, I'm not sure "must be useless" is a testable requirement

[06:26:00.0000] <annevk>
I meant to defer it to later

[06:28:00.0000] <annevk>
I have no idea how to define that though

[06:29:00.0000] <annevk>
in Gecko it is some weird number, in Chrome it resembles a timestamp and in Opera it is always 0

[06:30:00.0000] <Ms2ger>
Could we drop it? :)

[06:31:00.0000] <annevk>
http://www.w3.org/2008/webapps/track/issues/172

[06:33:00.0000] <Ms2ger>
Fun

[06:33:01.0000] <annevk>
the WHATWG definition of Fun, yes

[06:33:02.0000] <annevk>
:p

[06:51:00.0000] <Philip`>
When you do markup like http://diveintohtml5.org/video.html#example won't the browser download and run the Flash thing (and then just not render it) even when it supports the native video?

[06:52:00.0000] <annevk>
we made modifications to plugin loading to prevent that

[06:52:01.0000] <annevk>
iirc

[06:53:00.0000] <Philip`>
Ah, yes - "If the element has an ancestor media element, ..."

[06:53:01.0000] <Philip`>
That's handy

[07:27:00.0000] <AryehGregor>
Hixie, could I spend some time cleaning up and submitting my reflection tests to the HTMLWG test repo?  Seems kind of sad to just have them sitting there, particularly since the only feature we seem to have really good official tests for is <canvas>.

[07:34:00.0000] <karlcow>
/me points hsivonen to http://www.w3.org/mid/E9907E40-F38D-4B1E-8432-2B6A7AC9F191⊙mn

[07:35:00.0000] <AryehGregor>
It's pretty clear MS is aiming to get test scores as high as possible on the official test suite.

[07:35:01.0000] <AryehGregor>
So having as many tests there as possible seems like a good idea.

[07:36:00.0000] <Ms2ger>
Well, so am I :)

[07:37:00.0000] <AryehGregor>
Trying to get test scores as high as possible?

[07:37:01.0000] <jgraham>
Ms2ger: Well there is nothing wrong with getting good test scores by fixing bugs exposed by tests

[07:37:02.0000] <AryehGregor>
Yeah, that's the nice thing about comprehensive tests.

[07:38:00.0000] <AryehGregor>
jgraham, if the test suite is comprehensive enough, that should be the easiest way to get good test scores.

[07:39:00.0000] <jgraham>
AryehGregor: Right. The problem is with the first clause

[07:39:01.0000] <Workshiva>
There's fixing bugs, and then there's producing test cases that you pass and everyone else fails, while withholding test cases you fail...

[07:39:02.0000] <annevk>
The Microsoft way is generating lots of really easy-to-pass tests that are borderline okay. Not really helping anyone creating an interoperable implementation.

[07:40:00.0000] <AryehGregor>
Is it just me, or are the only comprehensive HTML tests that have been submitted so far by private people rather than organizations?

[07:40:01.0000] <AryehGregor>
I admit to not having looked, but people seem to be implying that Philip`'s canvas tests are the only comprehensive ones so far.

[07:40:02.0000] <Ms2ger>
Any objections to auto-generating quirks mode versions of tests? :)

[07:40:03.0000] <AryehGregor>
And my reflection tests are also fairly comprehensive.

[07:41:00.0000] <AryehGregor>
Ms2ger, is quirks mode well-defined enough for that to be reasonable?

[07:41:01.0000] <jgraham>
AryehGregor: implying? I flat out said so :)

[07:41:02.0000] <Philip`>
Ms2ger: Microsoft might object since they'd probably fail every single one of them :-)

[07:41:03.0000] <Ms2ger>
:)

[07:41:04.0000] <AryehGregor>
In particular, do we expect there will be many undocumented places where web compat will require different quirks mode behavior?

[07:41:05.0000] <AryehGregor>
Yeah, that too . . .

[07:41:06.0000] <AryehGregor>
jgraham, did they cheat to pass the canvas tests?

[07:41:07.0000] <Philip`>
so I think it's a great idea

[07:41:08.0000] <annevk>
I wrote tests for XMLHttpRequest and EventSource but they got dropped from HTML...

[07:41:09.0000] <AryehGregor>
That's the interesting question.

[07:42:00.0000] <jgraham>
Also, there are quite comprehensive parsing tests but they are not officially part of the testsuite yet

[07:42:01.0000] <AryehGregor>
Why not?

[07:42:02.0000] <AryehGregor>
More IE failures!  :)

[07:42:03.0000] <AryehGregor>
Let's all conspire to get IE to fail as many tests as possible!

[07:42:04.0000] <erlehmann>
maybe each vendor should also be rated on percentage of passed tests it did not contribute to. that would be an interesting metric.

[07:42:05.0000] <AryehGregor>
(Legitimately, of course, since it deserves to fail more tests than any other browser.  Even Opera.)

[07:42:06.0000] <jgraham>
erlehmann: No, we should discourage metrics

[07:42:07.0000] <AryehGregor>
(Although Opera's pretty awful too.)

[07:42:08.0000] <Ms2ger>
Let's also conspire to improve interoperability!

[07:43:00.0000] <jgraham>
I'm with Ms2ger :)

[07:43:01.0000] <erlehmann>
jgraham, holistic heresy!

[07:43:02.0000] <AryehGregor>
jgraham, I think it's fair to have metrics for test suites that are comprehensive enough.

[07:43:03.0000] <Ms2ger>
AryehGregor, thus, no metrics :)

[07:43:04.0000] <jgraham>
AryehGregor: I think they are still horribly misleading

[07:43:05.0000] <AryehGregor>
They're not totally meaningful, because one trivial bug might cause a ton of failures, but they're still instructive.

[07:43:06.0000] <jgraham>
Well yes exactly

[07:43:07.0000] <AryehGregor>
More importantly, they'll pressure implementers to fix their bugs.

[07:44:00.0000] <AryehGregor>
Because everyone but the highest-scoring browser will have incentive to improve.

[07:44:01.0000] <jgraham>
If you fail 50% of tests because 50% of tests check one detail then it's not reasonable to take away the message that you are much worse than anyone else

[07:44:02.0000] <jgraham>
But that's the message people get

[07:44:03.0000] <AryehGregor>
Yeah, but so what?  It encourages browsers to improve.

[07:44:04.0000] <AryehGregor>
That's the goal of metrics, not actually informing people.

[07:44:05.0000] <Ms2ger>
Also, Acid3

[07:44:06.0000] <AryehGregor>
If there are no comparisons, why would they care?

[07:45:00.0000] <jgraham>
It encourages browser vendors to only submit tests they pass

[07:45:01.0000] <AryehGregor>
Browser vendors aren't submitting many tests anyway.

[07:45:02.0000] <Ms2ger>
I don't know about you, but Mozilla passes (almost) all the tests it has :)

[07:45:03.0000] <AryehGregor>
Plus, I said only publish metrics for comprehensive parts.

[07:45:04.0000] <AryehGregor>
Where you actually try to test every single requirement for a particular feature.

[07:45:05.0000] <Ms2ger>
These tests might be wrong according to the spec, though

[07:45:06.0000] <jgraham>
Ms2ger: Mozilla's setup is odd because you discard almost all tests you don't pass

[07:46:00.0000] <AryehGregor>
No, you just flag them "todo()".

[07:46:01.0000] <Ms2ger>
+could

[07:46:02.0000] <Philip`>
At least with the canvas tests, Mozilla's "pass" in about 25% of cases means "fail but marked todo"

[07:47:00.0000] <Ms2ger>
Philip`, I'm working on that ;)

[07:47:01.0000] <jgraham>
Philip`: about 15% if Ms2ger is to be believed

[07:47:02.0000] <AryehGregor>
Mozilla has regression tests, not conformance tests.

[07:47:03.0000] <AryehGregor>
Related but different.

[07:47:04.0000] <jgraham>
/me is more concered that the HTML testsuite has no automatic harness yet

[07:47:05.0000] <AryehGregor>
It doesn't?  How are people submitting those XML files?

[07:48:00.0000] <jgraham>
At least I assume not since the Microsoft guy managed to submit bogus results

[07:48:01.0000] <jgraham>
AryehGregor: I think it is manually driven

[07:48:02.0000] <jgraham>
Although I haven't used it

[07:48:03.0000] <Ms2ger>
http://ms2ger.freehostia.com/tests/runner/?path=../html-official/&autorun=1

[07:48:04.0000] <jgraham>
Ms2ger: Yeah, I know :)

[07:48:05.0000] <AryehGregor>
jgraham, maybe he used a non-default browser setup.

[07:48:06.0000] <Philip`>
/me guesses he needs to fix and re-run his canvas result generator some time

[07:49:00.0000] <Philip`>
and give a gold star to whichever browser increased its pass rate the most

[07:49:01.0000] <Philip`>
Everyone else can have silver stars so they don't feel left out too badly

[07:50:00.0000] <Ms2ger>
/me guesses IE8->9

[07:50:01.0000] <AryehGregor>
Wait a sec, how does this work?  http://test.w3.org/html/tests/harness/harness.htm

[07:50:02.0000] <AryehGregor>
Don't tell me you're supposed to manually click "Pass" or "Fail" 819 times.

[07:50:03.0000] <AryehGregor>
That's horrifying.

[07:50:04.0000] <Ms2ger>
Yeah

[07:50:05.0000] <Philip`>
The current results are IE9 Preview 3

[07:50:06.0000] <AryehGregor>
Especially since each file can have many tests in it.

[07:51:00.0000] <Philip`>
so it won't be that trivial for them to win

[07:51:01.0000] <Philip`>
(since they got 73.7% already)

[07:51:02.0000] <AryehGregor>
How is anything like my reflection tests supposed to get accepted?

[07:51:03.0000] <Philip`>
(and that's certainly not too many significant figures)

[07:51:04.0000] <AryehGregor>
It's like 20,000 separate assertion.

[07:51:05.0000] <AryehGregor>
assertions.

[07:52:00.0000] <AryehGregor>
Possibly more assertions than the entire existing HTML test suite combined, from what I've seen.

[07:52:01.0000] <Ms2ger>
Certainly

[07:52:02.0000] <AryehGregor>
Very sad.

[07:52:03.0000] <Ms2ger>
You get the T-shirt :)

[07:52:04.0000] <Philip`>
Just need to hire some more testing minions to click the buttons

[07:53:00.0000] <AryehGregor>
Well, hopefully Hixie says I can submit my reflection tests, and improve the harness to run them automatically while I'm at it.

[07:53:01.0000] <Ms2ger>
MS can do the CSS2.1 suite in three days, the HTML one is a break ;)

[07:54:00.0000] <AryehGregor>
These tests aren't even easily to gauge visually.

[07:54:01.0000] <AryehGregor>
The ones I'm looking at don't even all turn green if they pass.

[07:54:02.0000] <AryehGregor>
One of them even had a giant red square, but the text said it passed.

[07:54:03.0000] <Philip`>
With a reasonable UI I marked pass/fail on manual canvas tests at about 2Hz, so 20K would be not even three hours

[07:54:04.0000] <AryehGregor>
This is inexcusable.

[07:55:00.0000] <AryehGregor>
Spending two hours to manually pass/fail tests that currently take five seconds to run automatically?

[07:59:00.0000] <AryehGregor>
Okay, so it takes 23.5 s to run in IE9 on my laptop.

[07:59:01.0000] <AryehGregor>
Still.

[07:59:02.0000] <AryehGregor>
(and IE9 is barely in last place, 83.9% passed, Opera 86.3%, Chrome 87.9%, Firefox 92.7%)

[07:59:03.0000] <AryehGregor>
(go Firefox!)

[08:01:00.0000] <AryehGregor>
I'm sure I could easily come up with another 72,568 or so reflection tests.

[08:02:00.0000] <Ms2ger>
Mubarak is stepping down?

[08:02:01.0000] <AryehGregor>
So claimeth Twitter.

[08:02:02.0000] <Ms2ger>
/me kicks testharness.js

[08:05:00.0000] <AryehGregor>
http://www.google.com/search?q=mubarak#q=mubarak&tbs=mbl:1

[08:05:01.0000] <jgraham>
/me whimpers

[08:05:02.0000] <AryehGregor>
/me had to do a lot of work to figure out which parts of that URL he could remove

[08:05:03.0000] <Ms2ger>
Oh, you fixed it

[08:05:04.0000] <AryehGregor>
Ms2ger, what are your specific objections?  I've gotten used to the cumbersomeness, it's not so bad with generate_tests().

[08:05:05.0000] <AryehGregor>
I suspect it's very slow, though.

[08:05:06.0000] <Ms2ger>
The harness integration was bogus before

[08:05:07.0000] <jgraham>
I suspect the performance could be improved

[08:06:00.0000] <Ms2ger>
Ask the WebPerf guys :)

[08:06:01.0000] <AryehGregor>
/me plans to test performance against his custom-written harness on his reflection tests

[08:06:02.0000] <jgraham>
Thinking about WebPerf. makes me sad

[08:06:03.0000] <jgraham>
Specifically in regard to my harness

[08:06:04.0000] <jgraham>
Since it seems they want to use it but have entirely different needs

[08:07:00.0000] <AryehGregor>
Ms2ger, what harness integration?

[08:07:01.0000] <Ms2ger>
The one that makes http://ms2ger.freehostia.com/tests/runner/?path=../html-official/&autorun=1 work

[08:08:00.0000] <Ms2ger>
Hmm

[08:08:01.0000] <Ms2ger>
top.completion_callback(this_obj.tests, this.status);

[08:08:02.0000] <Ms2ger>
jgraham, looks bogus still

[08:08:03.0000] <AryehGregor>
How does that work?  It just registers one pass or fail per file?

[08:08:04.0000] <AryehGregor>
Forcing you to have a million tiny files?

[08:09:00.0000] <Ms2ger>
You get per-test callbacks and a per-file callback

[08:09:01.0000] <jgraham>
Ms2ger: s/this/this_obj/ ?

[08:09:02.0000] <AryehGregor>
this_this_obj.tests?

[08:09:03.0000] <Ms2ger>
Either that or the opposite

[08:10:00.0000] <jgraham>
AryehGregor: IRC magic regexp

[08:10:01.0000] <Ms2ger>
|this| looks fine

[08:10:02.0000] <jgraham>
Right, I think either should work

[08:10:03.0000] <jgraham>
But using both is probably silly :)

[08:11:00.0000] <Ms2ger>
Passing this_obj as the second argument to top.result_callback.call is even more silly

[08:11:01.0000] <jgraham>
I thought I fixed that

[08:11:02.0000] <Ms2ger>
You did

[08:11:03.0000] <jgraham>
Sigh

[08:11:04.0000] <jgraham>
I don't even think it should be .call

[08:12:00.0000] <Ms2ger>
All gone now

[08:12:01.0000] <jgraham>
Thanks

[08:12:02.0000] <Ms2ger>
No, thanks to you :)

[08:12:03.0000] <jgraham>
Oh, I thought you meant you had fixed something

[08:17:00.0000] <Ms2ger>
 *   add_completion_callback(callback) - callback called with an array of tests

[08:17:01.0000] <Ms2ger>
 *                                       and an status object

[08:17:02.0000] <Ms2ger>
jgraham, status object? ^

[08:18:00.0000] <Ms2ger>
Oh, good

[08:18:01.0000] <Ms2ger>
/me overlooked

[08:18:02.0000] <Ms2ger>
test.message isn't always a string yet?

[08:34:00.0000] <jgraham>
Ms2ger: No, it can be a template thing

[08:35:00.0000] <jgraham>
I think only assert_throws still does that

[08:35:01.0000] <Ms2ger>
I say again, eww

[08:35:02.0000] <jgraham>
Indeed

[08:35:03.0000] <jgraham>
It was a terrible mistake

[08:36:00.0000] <TabAtkins>
pluma: Yo, I'm the dude pushing vars in CSS.  Yes, it'll be a *long* time before it's usable in the wild without help.  But if you don't need the CSSOM side, it can all be handled by a preprocessor (like, um, SASS).

[08:36:01.0000] <jgraham>
Ms2ger: Feel free to fix if you have nothing better to do :) Otherwise I will get around to it eventually

[08:36:02.0000] <pluma>
TabAtkins: I know, but I really really really am looking forward to the implementation.

[08:36:03.0000] <jgraham>
Sooner if you are complaining

[08:36:04.0000] <Ms2ger>
/me complains

[08:37:00.0000] <jgraham>
Sooner != now, however

[08:37:01.0000] <MikeSmith>
in the absolute 'Define a process for "particularly exceptional circumstances"' is a really nice phrase

[08:37:02.0000] <Ms2ger>
I might look at it

[08:39:00.0000] <AryehGregor>
Hixie, per <http://www.w3.org/Bugs/Public/show_bug.cgi?id=12029#c4>, can you re-add atob()/btoa(), since you weren't asked to remove them?  I'm just waiting for someone to tell me that they can't review my base64 tests because it's not in the W3C spec.

[08:40:00.0000] <Ms2ger>
I'm vaguely planning to review them

[08:40:01.0000] <AryehGregor>
They're pretty short, it should only take like ten minutes.

[08:40:02.0000] <AryehGregor>
I really hate how the chairs always dodge questions with "I didn't say anything official" or "That's up to the working group, not us" or similar.

[08:41:00.0000] <AryehGregor>
Well, Sam does that, at least.  Maciej is kind enough to give unofficial opinions most of the time, and I don't see Paul saying practically anything ever.

[08:41:01.0000] <AryehGregor>
Oh well, it could be much worse.

[08:42:00.0000] <AryehGregor>
/me files a W3C bug on the base64 stuff to give Hixie more of an excuse to add them, since it seems like at the W3C people care about technicalities instead of results

[08:42:01.0000] <Ms2ger>
Just make sure he doesn't let you skip to the start of the line

[08:43:00.0000] <AryehGregor>
Wait, I can't, they're still there: http://dev.w3.org/html5/spec/webappapis.html#atob

[08:43:01.0000] <AryehGregor>
Okay, back to editing commands, since my slavemaster hasn't gotten back to me about permission to work on reflection tests.

[09:02:00.0000] <erlehmann>
are they really that desperate? http://www.mpegla.com/main/pid/vp8/default.aspx

[09:02:01.0000] <erlehmann>
i hope so.

[09:02:02.0000] <TabAtkins>
Ms2ger: Since you updated the impl status for <meter>, could you do the same for <progress> in chrome?

[09:02:03.0000] <Ms2ger>
Don't you have an account?

[09:02:04.0000] <AryehGregor>
/me begins to discover how horrifying execCommand() is

[09:03:00.0000] <TabAtkins>
Ms2ger: To what?  I don't know what to do.

[09:03:01.0000] <AryehGregor>
erlehmann, desperate?  How so?  Apple told us months ago that this was happening.

[09:03:02.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/status-documentation.html

[09:03:03.0000] <AryehGregor>
Now it's going to get exciting.

[09:04:00.0000] <AryehGregor>
Because we'll get to see what patents people think they have that apply to VP8.

[09:04:01.0000] <AryehGregor>
Maybe this is why Google didn't offer anyone indemnity.  Perhaps they foresaw this and wanted to see what came up before making a decision.

[09:05:00.0000] <AryehGregor>
I'll cling to that belief, because it permits me to continue viewing Google as infinitely wise and benevolent.

[09:05:01.0000] <AryehGregor>
But it actually seems fairly likely, all things told.  They must have known this would happen, and they're going to have plans to counter it, and those plans will have to depend on what patents people put down.

[09:05:02.0000] <TabAtkins>
Do we have any tests for meter/progress?  I dunno whether to mark this as "excellent" or "buggy" support.

[09:06:00.0000] <AryehGregor>
If they think they can beat them in court, they might offer blanket indemnity.  If they think there are a few strong ones, they might want to buy them.

[09:06:01.0000] <AryehGregor>
This will be interesting.

[09:06:02.0000] <AryehGregor>
TabAtkins, generally you should assume we don't have any tests for anything, because that's basically true except for about four features.

[09:06:03.0000] <TabAtkins>
AryehGregor: ;_; That's what I thought.  Welp, marking as "excellent" until proven wrong.

[09:07:00.0000] <erlehmann>
AryehGregor, desperate as in “apparently they did not find anything in their portfolio”

[09:07:01.0000] <erlehmann>
or am i reading that announcement wrong?

[09:07:02.0000] <AryehGregor>
erlehmann, MPEG-LA doesn't have a portfolio.

[09:08:00.0000] <AryehGregor>
It's just a forum for people to form patent pools, as I understand it.

[09:08:01.0000] <AryehGregor>
It owns nothing.

[09:08:02.0000] <AryehGregor>
So I'd guess that any time they form a patent pool, they put out a public call for anyone who has patents to submit them.

[09:08:03.0000] <erlehmann>
AryehGregor, i thought the press announcement yielded the idea of having scrutinized the existing pool and failing to come up with substantial items.

[09:08:04.0000] <AryehGregor>
That's the point of the pool, to flush out patent holders by offering them guaranteed royalties without having to bother suing anyone.

[09:09:00.0000] <AryehGregor>
What "existing pool"?

[09:09:01.0000] <AryehGregor>
They have several existing pools\.

[09:09:02.0000] <AryehGregor>
.

[09:09:03.0000] <AryehGregor>
Eight, apparently.

[09:09:04.0000] <AryehGregor>
And three in formation, including VP8.

[09:09:05.0000] <AryehGregor>
http://www.mpegla.com/main/pid/LTE/default.aspx http://www.mpegla.com/main/pid/mvc/default.aspx

[09:10:00.0000] <AryehGregor>
Those seem to read pretty much the same as the VP8 one.

[09:10:01.0000] <erlehmann>
next up: MPEG LA launches call for gene patent pool.

[09:12:00.0000] <erlehmann>
and demands rolalties from hippies, hue hue hue

[09:12:01.0000] <erlehmann>
royalties

[09:15:00.0000] <TabAtkins>
Interesting.  I'll get quoted in a .net magazine article.

[09:15:01.0000] <AryehGregor>
Like MS .NET?

[09:15:02.0000] <TabAtkins>
I think it's for netmag.co.uk

[09:15:03.0000] <AryehGregor>
/me looks at output of http://aryeh.name/spec/editcommands/test/editcommands.html in different browsers and shakes his head sadly

[09:16:00.0000] <AryehGregor>
(of course, Opera doesn't work because of its broken Selection support, as usual, so I'll just have fun ignoring it)

[09:16:01.0000] <bfrohs>
/me looks at it and cries a little

[09:16:02.0000] <AryehGregor>
/me wonders if he ever annoys the Opera employees here with his constant griping about Opera

[09:18:00.0000] <AryehGregor>
You know, wasn't there an incredibly long e-mail that Google sent to the whatwg a year or two ago with tons of research into execCommand?

[09:18:01.0000] <AryehGregor>
Here we go, Ojan Vafal, December 2009.

[09:18:02.0000] <AryehGregor>
/me re-reads

[09:18:03.0000] <TabAtkins>
s/Vafal/Vafai/

[09:19:00.0000] <AryehGregor>
In bold Arial, or whatever Gmail uses for people's names, it's hard to tell the difference.

[09:19:01.0000] <AryehGregor>
/me pleads illiteracy

[09:25:00.0000] <AryehGregor>
Oh, this whole huge thing doesn't even address things like bold.

[09:25:01.0000] <AryehGregor>
/me goes back to making stuff up

[09:47:00.0000] <TabAtkins>
Oh man, this new Janella Monae album is great right from the beginning.

[09:47:01.0000] <TabAtkins>
/me is excited.

[09:47:02.0000] <jgraham>
AryehGregor: It seems like you might gripe about Opera based on a rather small number of observations e.g. Selection support

[09:47:03.0000] <AryehGregor>
jgraham, yeah, I'm pretty sure everything I've been complaining about is related to Selection support.

[09:47:04.0000] <AryehGregor>
Maybe a few Range issues too, at most.

[09:48:00.0000] <AryehGregor>
I also regularly complain about random other stuff, though, like the lack of a public bug tracker.

[09:48:01.0000] <jgraham>
/me has no idea who Janella Monae is, but is very much appreciating the new Decemberists

[09:48:02.0000] <AryehGregor>
The only thing I can remember complaining about WebKit much is its forms implementation.

[09:49:00.0000] <AryehGregor>
I have a whole list of complaints about Firefox (relative to Chrome) written up somewhere, but I never got around to publishing them at a publicly-disclosed URL.

[09:49:01.0000] <jgraham>
Can't you test execCommand without relying on Selection?

[09:50:00.0000] <jgraham>
(I haven't thought about this, so maybe not)

[09:50:01.0000] <Sirisian|Work>
AryehGregor, submit bug reports? that's what I do

[09:50:02.0000] <AryehGregor>
document.execCommand() seems to operate on the current selection.

[09:50:03.0000] <jgraham>
(e.g. by using innerHTML or something)

[09:50:04.0000] <AryehGregor>
There may be other ways to invoke it, but I'm just getting my feet wet.

[09:50:05.0000] <AryehGregor>
Sirisian|Work, I've submitted a couple of bug reports to Opera, but as I said, private bug tracker.

[09:50:06.0000] <jgraham>
Oh, I see

[09:50:07.0000] <AryehGregor>
As far as I can tell, they may as well have fallen down the memory hole, so I can't be bothered.

[09:50:08.0000] <Sirisian|Work>
oh Opera.

[09:51:00.0000] <AryehGregor>
I think at least in IE, you can theoretically invoke execCommand() on whatever their idea of ranges is.

[09:51:01.0000] <AryehGregor>
It seems like in IE9, you can invoke it on non-contentEditable stuff too, which is actually a quite sane feature.

[09:57:00.0000] <AryehGregor>
Where's an example of a nested <ol> in the HTML spec?  There seems to be a stylesheet bug.

[09:57:01.0000] <AryehGregor>
Never mind, found one.

[09:58:00.0000] <AryehGregor>
Oh, Hixie manually puts a <p> inside every <li>, that explains it.

[09:58:01.0000] <TabAtkins>
Some margin bug?

[09:59:00.0000] <AryehGregor>
Yeah.

[09:59:01.0000] <AryehGregor>
p + * > li { set some margins }

[09:59:02.0000] <AryehGregor>
No idea why it doesn't apply to all li's.

[10:00:00.0000] <TabAtkins>
jgraham: Janelle Monae sings, um, I guess you can call it "cyborg hip-hop".

[10:01:00.0000] <jgraham>
/me wondrs if it still counts as singing if you are a cyborg

[10:01:01.0000] <TabAtkins>
Did it count as singing when GLaDOS did it?

[10:01:02.0000] <jgraham>
Assuming that your vocal cords are technologically-enhanced

[10:02:00.0000] <TabAtkins>
(The answer is yes.)

[10:02:01.0000] <jgraham>
I don't know who GLaDOS are either

[10:02:02.0000] <TabAtkins>
Dude.

[10:02:03.0000] <jgraham>
I am not hot on cyborg hip-hop

[10:02:04.0000] <TabAtkins>
The AI in Portal.  Sang "Still Alive".

[10:02:05.0000] <jgraham>
Or hip-hop in general really

[10:02:06.0000] <TabAtkins>
The cake is a lie, assume the party escort submission position, etc.

[10:03:00.0000] <jgraham>
And neither have I played Portal

[10:03:01.0000] <TabAtkins>
Dude.  Do so.

[10:03:02.0000] <TabAtkins>
Or just watch this: http://www.google.com/url?sa=t&source=web&cd=1&sqi=2&ved=0CB8QtwIwAA&url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DRthZgszykLs&ei=A3tVTcXIE5CusAPf_ZiWBg&usg=AFQjCNF8bFDzoCu4y9RFm560J08OSnCO8Q&sig2=ICYWrhs0qBx5PvVWTDKs_w

[10:04:00.0000] <TabAtkins>
Jeezus, one sec.

[10:04:01.0000] <TabAtkins>
http://www.youtube.com/watch?v=RthZgszykLs

[10:04:02.0000] <bfrohs>
/me loves Portal

[10:11:00.0000] <TabAtkins>
Urgh.  What's a good name for one whole chunk of a list-valued property in CSS?  Like one layer in the background shorthand.

[10:11:01.0000] <TabAtkins>
We already have "property value" for the whole thing, and "component value" for the smaller chunks.

[10:11:02.0000] <TabAtkins>
But list-valued properties have a useful unit of organization between them.

[10:19:00.0000] <AryehGregor>
I'm somewhat scared that this is how complicated my first pass at an algorithm for one small part of execCommand() is, before I've even really tried anything interesting: http://aryeh.name/spec/editcommands/editcommands.html

[10:19:01.0000] <AryehGregor>
/me wonders if this will wind up being more complicated than the text/html parser

[10:19:02.0000] <Ms2ger>
AryehGregor, DOM Core has something to split text nodes, no?

[10:20:00.0000] <AryehGregor>
Oh, does it?

[10:20:01.0000] <AryehGregor>
Let me check.

[10:20:02.0000] <AryehGregor>
splitText(offset) looks like it.

[10:21:00.0000] <AryehGregor>
Thanks.

[10:21:01.0000] <Ms2ger>
I can pull out the algorithm if that's useful

[10:22:00.0000] <AryehGregor>
The algorithm looks like it's missing <p>s, so the margins are wrong.  :)

[10:23:00.0000] <Ms2ger>
Not wrong, just cramped ;)

[10:23:01.0000] <AryehGregor>
But yeah, that will do what I want.

[10:23:02.0000] <AryehGregor>
No need to split out the algorithm.

[10:23:03.0000] <Ms2ger>
Okay

[10:24:00.0000] <AryehGregor>
Ms2ger, do you realize this doesn't take into account that the Range might not start with an Element?  http://html5.org/specs/dom-parsing.html#extensions-to-the-range-interface

[10:25:00.0000] <AryehGregor>
In fact, there's no interop in that case.  Firefox's behavior is to make it work anyway, but I'm not sure how that would fit into the HTML5 fragment parsing algorithm.

[10:25:01.0000] <AryehGregor>
But I think that's probably the sanest behavior.

[10:25:02.0000] <Ms2ger>
Yeah

[10:26:00.0000] <Ms2ger>
Same for XMLSerializer

[10:27:00.0000] <AryehGregor>
You should have an XXX there or something.

[10:28:00.0000] <AryehGregor>
Maybe we should file a bug against HTML to support that case?

[10:28:01.0000] <TabAtkins>
Oh man, Safari/Mac's PNG encoding is much worse than Chrome/Linux, which is already horrible.  500x500 black square creates a data url 7.2kb in size.

[10:28:02.0000] <Ms2ger>
Checking if I can just fix it

[10:28:03.0000] <AryehGregor>
What's Chrome/Linux's?

[10:28:04.0000] <TabAtkins>
2.8kb

[10:29:00.0000] <TabAtkins>
A well-optimized file can hit 125 bytes.

[10:29:01.0000] <AryehGregor>
Yikes.

[10:30:00.0000] <TabAtkins>
Yus.  a 5000x difference.  >_<

[10:30:01.0000] <TabAtkins>
Durp, I mean 50x.

[10:30:02.0000] <AryehGregor>
Was about to say.  :)

[10:30:03.0000] <TabAtkins>
5000%

[10:31:00.0000] <Ms2ger>
Hmm

[10:49:00.0000] <Sirisian|Work>
Any implementors here willing to prototype an idea? http://www.w3.org/Bugs/Public/show_bug.cgi?id=9557#c12

[10:49:01.0000] <Sirisian|Work>
On that same note is there a list of implementors and what they're currently working on?

[10:51:00.0000] <AryehGregor>
Sirisian|Work, major implementers are Microsoft, Mozilla, Google, Apple, and Opera.

[10:51:01.0000] <Sirisian|Work>
How do you contact them to prototype something?

[10:52:00.0000] <AryehGregor>
Filing bugs in their bug trackers is one possibility.

[10:52:01.0000] <Sirisian|Work>
I guess I've been confused what the process is. When I talked to shepazu (Doug) before he said getting a prototype from an implementor was key.

[10:52:02.0000] <AryehGregor>
Yes, that's the only way you can be sure of getting spec buy-in.

[10:53:00.0000] <AryehGregor>
If you can write the relevant language (usually C++) and are willing to put in the time, you could write a prototype implementation yourself for Gecko or WebKit.

[10:53:01.0000] <AryehGregor>
(i.e., Firefox or Chrome/Safari)

[10:53:02.0000] <AryehGregor>
Since those are open-source.

[10:53:03.0000] <AryehGregor>
But you'd want to talk with some people in charge of the relevant project to see if they'd be interested in accepting patches for it.

[10:54:00.0000] <AryehGregor>
Otherwise, you don't have much hope, but you can try filing bugs in the various implementers' bug trackers.

[10:55:00.0000] <AryehGregor>
Generally implementers have endless stuff they want to implement and limited resources to implement it with, so if you're not willing to contribute the resources, it's fairly unlikely your idea will be much competition for all the stuff they have on their plate already.

[10:55:01.0000] <AryehGregor>
But you can try talking to some people at the relevant projects and asking.

[10:55:02.0000] <AryehGregor>
Hmm, mouse capture.

[10:55:03.0000] <AryehGregor>
They'll definitely be interested in that.

[10:55:04.0000] <Sirisian|Work>
I know C++ fairly well, but I wasn't really willing to write it.

[10:56:00.0000] <Sirisian|Work>
I mean learning all the source. ugh :P

[10:56:01.0000] <AryehGregor>
Someone will implement something in this direction at some point for sure.

[10:57:00.0000] <AryehGregor>
If you want to encourage them to prioritize it more, you could file bugs and post on their mailing lists.

[10:57:01.0000] <AryehGregor>
For the open-source ones.

[10:57:02.0000] <AryehGregor>
This is most likely to be prototyped first by Firefox, Chrome, or Safari, which all have open-source rendering engines.

[10:57:03.0000] <Sirisian|Work>
I'll just submit a bug to firefox and chrome since they're probably

[10:57:04.0000] <AryehGregor>
But in reality, you have no control here unless you're willing to do the work.  That's life.

[10:57:05.0000] <Sirisian|Work>
going to be interested*

[10:57:06.0000] <AryehGregor>
The ones who are willing to contribute resources get to control how those resources are allocated.

[11:02:00.0000] <Sirisian|Work>
Wait would this be part of the Firefox Core or the Firefox browser. https://bugzilla.mozilla.org/enter_bug.cgi

[11:04:00.0000] <Sirisian|Work>
Also would I just submit it to the chromium bug list?

[11:04:01.0000] <TabAtkins>
Wait, wut.  Our implementation of <input type=date> was already fucked up (it's a spinbox that changes the data ONE MINUTE AT A TIME), but our <input type=number> is even worse.

[11:05:00.0000] <AryehGregor>
Sirisian|Work, should be Core.  Chromium has a bug tracker, you can use that.

[11:05:01.0000] <TabAtkins>
If you don't give an explicit min/max/start value, the first press of the "up" gives you -3.4e38.

[11:05:02.0000] <AryehGregor>
TabAtkins, haven't I been saying this for months?

[11:05:03.0000] <TabAtkins>
AryehGregor: I didn't know our type=number was so dumb.

[11:05:04.0000] <Hixie>
AryehGregor: re reflection tests, go for it (assuming it won't take, like, 5 weeks!)

[11:05:05.0000] <AryehGregor>
I don't like to call people incompetent, but the person writing this support . . .

[11:05:06.0000] <Hixie>
AryehGregor: looking into atob

[11:05:07.0000] <TabAtkins>
At least type=range works well enough to use it.

[11:07:00.0000] <AryehGregor>
Hixie, should be more like a few hours, I hope.  Dunno how much of the backscroll you read -- it turns out the HTMLWG test suite is ludicrously small.  My reflection tests probably test more assertions than the whole current repo.  So I might have to do a bunch of refactoring and maybe improve the repository harness or something.  But I don't think it will take more than, say, 10 hours total.

[11:07:01.0000] <AryehGregor>
I mean, I already did the hard part, I think.

[11:07:02.0000] <AryehGregor>
TabAtkins, you guys should be cloning Gecko's UI.  Period.

[11:09:00.0000] <Hixie>
i was aware that the htmlwg test suite was ludicrously small, but didn't realise that your reflection tests were so thorough, awesome :-)

[11:09:01.0000] <Hixie>
did you end up filing a bug about atob?

[11:09:02.0000] <Hixie>
i'm completely confused by what sam wants

[11:09:03.0000] <Hixie>
as usual

[11:09:04.0000] <TabAtkins>
AryehGregor: They do indeed have the best currently.

[11:09:05.0000] <AryehGregor>
Hixie, I didn't file a bug because they're still in the HTML spec.

[11:09:06.0000] <AryehGregor>
http://dev.w3.org/html5/spec/webappapis.html#atob

[11:10:00.0000] <Hixie>
i guess the spec splitter is broken

[11:10:01.0000] <AryehGregor>
I think you can just re-add them, anyway.

[11:10:02.0000] <Hixie>
k

[11:10:03.0000] <AryehGregor>
Nobody actually told you to take them out.

[11:10:04.0000] <AryehGregor>
My reflection tests aren't actually that thorough, there's lots of stuff I plan to add to them.

[11:10:05.0000] <AryehGregor>
But it still works out to 27,000ish assertions.

[11:10:06.0000] <AryehGregor>
It just happens that there are lots of elements and attributes in HTML.  :)

[11:11:00.0000] <AryehGregor>
But it's only like ten or twenty assertions per element.

[11:11:01.0000] <Hixie>
technically i should never have put atob in, because the chairs asked me not to add new features

[11:11:02.0000] <Hixie>
which is why i removed them when sam reminded me of that

[11:11:03.0000] <AryehGregor>
I don't think it counts as a "new feature".

[11:11:04.0000] <Hixie>
(atob does seem to be missing from the w3c singlepage version http://dev.w3.org/html5/spec/Overview.html)

[11:12:00.0000] <AryehGregor>
You could leave it out, but then where do the tests go?

[11:16:00.0000] <Hixie>
i'm adding it back in

[11:16:01.0000] <Hixie>
so hopefully that will be moot

[11:23:00.0000] <AryehGregor>
Can you map methods to arrays?  Like ["foo", "bar"].map(toUpperCase) -> ["FOO", "BAR"], except clearly that won't work because toUpperCase isn't a function.

[11:23:01.0000] <TabAtkins>
You have to use a converter to un-dot them.

[11:24:00.0000] <AryehGregor>
Meaning what?

[11:24:01.0000] <TabAtkins>
I have one if you want it, it's a trivial little function.

[11:24:02.0000] <AryehGregor>
map(function(s) {return s.toUpperCase})

[11:24:03.0000] <AryehGregor>
Like that?

[11:24:04.0000] <TabAtkins>
Yes.

[11:24:05.0000] <AryehGregor>
Makes sense, and works.

[11:24:06.0000] <AryehGregor>
Thanks.

[11:24:07.0000] <TabAtkins>
Well, not quite.  You need to deal with the arguments.

[11:24:08.0000] <gsnedders>
AryehGregor: ["foo", "bar"].map(String.prototype.toUpperCase.call) would work, no?

[11:24:09.0000] <TabAtkins>
Wait, that works?

[11:25:00.0000] <AryehGregor>
TypeError: object is not a function

[11:25:01.0000] <TabAtkins>
Argh, sorry for the noise.  yeah, of course that works.

[11:25:02.0000] <AryehGregor>
data:text/html,<!doctype html><script>try { alert(["a", "b"].map(String.prototype.toUpperCase.call)); } catch (e) { alert(e) };</script>

[11:25:03.0000] <AryehGregor>
I was figuring some magic like that would work.

[11:25:04.0000] <AryehGregor>
But this particular incantation seems not to.

[11:26:00.0000] <gsnedders>
/me needs to check the spec for that

[11:29:00.0000] <AryehGregor>
There's no way to change the name of an element, right?  You have to create a new one, apply the other one's attributes and children, insert the new one before/after the old one, and remove the old one?

[11:31:00.0000] <Hixie>
correct

[11:32:00.0000] <Hixie>
same with the namespace

[11:32:01.0000] <Hixie>
(not sure about the prefix)

[11:32:02.0000] <gsnedders>
AryehGregor: I can't work out why that throws TypeError…

[11:33:00.0000] <AryehGregor>
It only throws TypeError in WebKit, I think.

[11:34:00.0000] <gsnedders>
AryehGregor: It throws TypeError in SpiderMonkey, V8, and Carakan, at least

[11:34:01.0000] <AryehGregor>
Oh, okay.

[11:34:02.0000] <AryehGregor>
Fun.

[11:35:00.0000] <gsnedders>
Oh, duh

[11:36:00.0000] <gsnedders>
You call String.prototype.toUpperCase.call (which is just a reference to Function.prototype.call) with this equal to undefined

[11:36:01.0000] <TabAtkins>
Anyway, I use function undot(func) { return function(s) { return s[func](); }}, which is used like ['foo','bar'].map(undot('toUpperCase')

[11:39:00.0000] <AryehGregor>
That hurts my brain.

[11:40:00.0000] <TabAtkins>
It's perfectly normal functional programming.  ^_^

[11:40:01.0000] <AryehGregor>
gsnedders, so what does that mean in practice?

[11:40:02.0000] <TabAtkins>
It's just a generic constructor for the function you already used.

[11:41:00.0000] <AryehGregor>
Yeah, I figured out what it did.  It just hurt my brain when I first saw it.

[11:41:01.0000] <TabAtkins>
(I hate the method/property distinction, anyway, especially for languages that don't recognize a private/public distinction.)

[11:42:00.0000] <TabAtkins>
There is literally no difference between foo.toUpperCase and toUpperCase(foo), in terms of functionality.  It's just harder to do functional programming with the former.

[11:43:00.0000] <gsnedders>
AryehGregor: You're effectively trying to call undefined.

[11:43:01.0000] <AryehGregor>
gsnedders, so is there in fact any cool fancy way to do it, or do we have to write a wrapper thingie?

[11:45:00.0000] <gsnedders>
AryehGregor: ["foo", "bar"].map(Function.prototype.call.bind(String.prototype.toUpperCase))

[11:46:00.0000] <gsnedders>
Actually… ["foo", "bar"].map(Function.prototype.call, String.prototype.toUpperCase)

[11:46:01.0000] <gsnedders>
The second is quicker and better supported

[11:48:00.0000] <AryehGregor>
Fascinating.

[11:48:01.0000] <AryehGregor>
/me goes with TabAtkins' version

[11:48:02.0000] <gsnedders>
AryehGregor: Yeah, I can't claim that's an obvious way to do it :P

[11:48:03.0000] <TabAtkins>
Ah, I didn't realize map took a this argument.

[11:48:04.0000] <gsnedders>
TabAtkins: I forgot that too, thus the original bind suggestion

[11:48:05.0000] <aho>
TabAtkins, i like the @var proposal thingy. are there builds available already? :>

[11:49:00.0000] <TabAtkins>
aho: No, the plumbing is being put together right now.

[11:49:01.0000] <TabAtkins>
It'll be a bit before anything useful shows up in nightlies.

[11:49:02.0000] <aho>
ah, good to hear

[11:49:03.0000] <aho>
emulation via js would be fine for now too :>

[11:50:00.0000] <Dashiva>
MikeSmith: Was this you? http://twitter.com/tinmantinsan/status/36059980444471296

[11:50:01.0000] <TabAtkins>
Emulation via preprocessor will be available in SASS, too.

[11:50:02.0000] <aho>
great

[11:51:00.0000] <AryehGregor>
My crude initial algorithm for execCommand("bold") sort of somewhat works, hurrah: http://aryeh.name/spec/editcommands/test/bold.html

[11:51:01.0000] <aho>
(i wish sass wasnt that slow) :f

[11:51:02.0000] <chriseppstein>
aho: patches accepted

[11:51:03.0000] <bfrohs>
Speaking of execCommand, is there an execCommand for inserting inline elements?

[11:51:04.0000] <aho>
don't know anything about ruby, sorry :l

[11:52:00.0000] <chriseppstein>
aho: what are you good at?

[11:52:01.0000] <aho>
js and java

[11:53:00.0000] <chriseppstein>
just how fast do you need sass to be?

[11:55:00.0000] <aho>
had about 10 files à 30 lines and sass took about 20 seconds to process them

[11:56:00.0000] <MikeSmith>
Dashiva: :) beautiful

[11:56:01.0000] <chriseppstein>
300lines of css took 20s?

[11:56:02.0000] <chriseppstein>
bs

[11:56:03.0000] <aho>
*shrug*

[11:57:00.0000] <chriseppstein>
aho: when was this

[11:57:01.0000] <aho>
about 6-7 weeks ago

[11:57:02.0000] <chriseppstein>
was it the sass alpha release?

[11:58:00.0000] <chriseppstein>
or stable

[11:58:01.0000] <MikeSmith>
Dashiva: interesting tweek tweet… wondering who tinmantinson is

[11:58:02.0000] <aho>
was on some core duo machine with 4gb ram and vista32

[11:58:03.0000] <Dashiva>
I found it via pyon

[11:58:04.0000] <aho>
stable, i guess

[11:59:00.0000] <erlehmann>
aho, rewrite it in c, using libowfat and tinyldap!

[11:59:01.0000] <chriseppstein>
aho: do you have those files still?

[11:59:02.0000] <aho>
at work, yes

[11:59:03.0000] <MikeSmith>
holy christ almighty 27,425 tweets

[11:59:04.0000] <chriseppstein>
aho: plz send them to me chris⊙en so I can investigate

[12:00:00.0000] <aho>
btw is there a way to use a color as string?

[12:01:00.0000] <aho>
eg i want something like "334455" and i want to use that as color in one place (eg #345 and a darker version thereof) and as url in another (eg foo-334455.png)

[12:01:01.0000] <aho>
TabAtkins, does something like that work with @var stuff?

[12:02:00.0000] <MikeSmith>
d

[12:02:01.0000] <MikeSmith>
Dashiva: how is it that you found dude's tweets to begin with?

[12:03:00.0000] <Dashiva>
Via pyon

[12:06:00.0000] <MikeSmith>
Dashiva: I got no clue who pyon is either

[12:08:00.0000] <Dashiva>
Neither do I, but hsivonen and 100+ others retweeted http://twitter.com/pyon/status/35854839976042496

[12:09:00.0000] <MikeSmith>
ah

[12:09:01.0000] <MikeSmith>
very Japan-ese

[12:10:00.0000] <aho>
chriseppstein, eppsteins.net or eppstein.net ?

[12:10:01.0000] <chriseppstein>
aho: plural

[12:10:02.0000] <MikeSmith>
I

[12:10:03.0000] <alystair>
hi all

[12:10:04.0000] <aho>
kay

[12:10:05.0000] <aho>
just wanted to be sure

[12:10:06.0000] <aho>
:>

[12:10:07.0000] <chriseppstein>
aho: thanks!

[12:10:08.0000] <alystair>
I found a fun render discrepency in Safari while being lazy and not wanting to use <HR> :)

[12:11:00.0000] <MikeSmith>
Dashiva: I wonder how many people understand that today in tokyo there was a weird mixture of rain and snow and perhaps that in part is what motivated the pyon tweet

[12:13:00.0000] <Dashiva>
Not many

[12:13:01.0000] <Dashiva>
I think most people saw cat avatar + randomness

[12:14:00.0000] <aho>
:3

[12:14:01.0000] <AryehGregor>
That is an awesome tweet.

[12:14:02.0000] <deane>
/me walked to the Mozilla office yesterday and visited the team there. Met one of the openwebs best: doublec

[12:14:03.0000] <MikeSmith>
Dashiva: I see. well, I love the web anyway

[12:14:04.0000] <AryehGregor>
The other day we had rain, but it was below freezing.

[12:14:05.0000] <AryehGregor>
So we got an inch of ice on the street.

[12:14:06.0000] <AryehGregor>
It was really cool.

[12:15:00.0000] <MikeSmith>
/me pictures deane walking into Mozilla office

[12:15:01.0000] <AryehGregor>
Sadly, most of the ice was rough rather than slippery, so it wasn't as fun as it could be.

[12:15:02.0000] <MikeSmith>
deane: you met heycam?

[12:15:03.0000] <MikeSmith>
kinetik?

[12:15:04.0000] <MikeSmith>
roc?

[12:16:00.0000] <alystair>
http://lorinhalpert.com/ipoc/bugs/height/ :)

[12:16:01.0000] <alystair>
check that out in anything but safari/ie6|7 and then look in safari

[12:17:00.0000] <MikeSmith>
"Some text could go here"

[12:17:01.0000] <MikeSmith>
indeed

[12:20:00.0000] <AryehGregor>
"The prefix JavaScript: is stripped from any text pasted into the IE9 address bar. This mitigates a socially-engineered XSS attack common on social networks wherein users were tricked into performing self-inflicted XSS injections upon themselves.  No, CTRL+C,ALT+D,CTRL+V, ENTER will not give you magical powers."

[12:20:01.0000] <AryehGregor>
Lame.

[12:21:00.0000] <aho>
training wheels! :>

[12:22:00.0000] <bfrohs>
what about separate pastes? :P (javascript + :code)

[12:24:00.0000] <alystair>
looks like safari is ignoring small line-heights

[12:27:00.0000] <TabAtkins>
aho: Jeezus no.  @var is *not* a character macro.  It's a variable.

[12:27:01.0000] <aho>
also no darker/lighter then, i presume

[12:28:00.0000] <TabAtkins>
That's addressible separately.  I'm expecting to do something in that vein for Colors 4.

[12:29:00.0000] <TabAtkins>
Like @var $foo #345; @var $bar darken($foo);

[12:30:00.0000] <aho>
or $foo.darken()

[12:30:01.0000] <AryehGregor>
Bwahahaha.

[12:30:02.0000] <aho>
there should be some strength parameter though

[12:30:03.0000] <TabAtkins>
No, that's javascript.  Don't mix languages.

[12:30:04.0000] <AryehGregor>
OOCSS.

[12:30:05.0000] <TabAtkins>
Yeah, sure, darken($foo, 50%) or whatever.

[12:30:06.0000] <AryehGregor>
/me demands strong typing and polymorphism for CSS variables

[12:31:00.0000] <Hixie>
my goodness, TabAtkins is turning CSS into perl

[12:31:01.0000] <jcranmer>
must... kill... perl

[12:31:02.0000] <TabAtkins>
Just wait until I unveil %foo

[12:31:03.0000] <Hixie>
hey perl is a perfectly writable language

[12:31:04.0000] <TabAtkins>
(Note: I will not do this.)

[12:31:05.0000] <Hixie>
(it's just unreadable)

[12:31:06.0000] <TabAtkins>
Though, selector variables tiptoe right to the edge of incomprehensibility.

[12:32:00.0000] <TabAtkins>
ARGH BUZZ NOT SUPPORTING MULTILOGIN MAKES ME WANT TO KILL THINGS

[12:32:01.0000] <AryehGregor>
One of the evil things about Perl is how it uses punctuation instead of identifiers.  Not only is it less obvious what they mean, but punctuation is impossible to look up.

[12:33:00.0000] <TabAtkins>
Yeah, punctuation is a precious resource that needs to be carefully apportioned.

[12:33:01.0000] <AryehGregor>
Once I was trying to read a Perl script, and was attempting to double-check what "-f" meant.

[12:33:02.0000] <AryehGregor>
So I tried searching the manuals.

[12:33:03.0000] <AryehGregor>
. . . that didn't work well.

[12:33:04.0000] <AryehGregor>
(I eventually figured out it meant what I thought it meant.)

[12:33:05.0000] <AryehGregor>
sh's "." also messed me up like that.

[12:34:00.0000] <alystair>
where do I go to complain about safari/webkit renderer :D

[12:35:00.0000] <TabAtkins>
bugs.webkit.org

[12:35:01.0000] <alystair>
it's odd because chrome renders 1px line-height correctly, but safari does not

[12:35:02.0000] <TabAtkins>
alystair: Probably a result of something getting fixed more recently than the last time Safari rolled webkit.

[12:35:03.0000] <AryehGregor>
Yeah, try in a WebKit nightly.

[12:35:04.0000] <AryehGregor>
If it's fixed there, no point in filing a bug.

[12:36:00.0000] <alystair>
/me is too noob to build a nightly, also has pc only

[12:36:01.0000] <TabAtkins>
If something related to rendering works in Chrome but not Webkit, it's almost certainly just a result of Safari being old.

[12:36:02.0000] <AryehGregor>
They have nightly downloads for Windows.

[12:36:03.0000] <TabAtkins>
alystair: Nightly webkits are easy.  You just run a file.

[12:36:04.0000] <AryehGregor>
http://nightly.webkit.org/

[12:36:05.0000] <alystair>
ah I see

[12:36:06.0000] <alystair>
thanks

[12:36:07.0000] <AryehGregor>
"Nightly" means they compile it for you every night.

[12:36:08.0000] <alystair>
and this is what would be rolled into safari eventually?

[12:36:09.0000] <AryehGregor>
Yes.

[12:36:10.0000] <TabAtkins>
alystair: Yeah, next time Safari does a release.

[12:36:11.0000] <jamesr_>
technically it's up to apple what gets rolled into safari

[12:37:00.0000] <AryehGregor>
jamesr_, you could say something like that about practically any statement about the future, though.

[12:37:01.0000] <jamesr_>
AryehGregor: that it's up to apple? :P

[12:37:02.0000] <alystair>
nope, still has the bug :)

[12:37:03.0000] <alystair>
in the nightly

[12:37:04.0000] <jamesr_>
file!

[12:37:05.0000] <AryehGregor>
The United States will have a presidential election in 2012, but technically it's up to Congress and the states to not amend the Constitution and make the U.S. a hereditary monarchy.

[12:38:00.0000] <alystair>
is my example clear enough

[12:38:01.0000] <TabAtkins>
Hixie: To be fair, I'm only turning CSS into PHP.

[12:38:02.0000] <jamesr_>
no, i opened it and i have no clue what i'm looking at

[12:38:03.0000] <aho>
:v

[12:38:04.0000] <AryehGregor>
(actually, they'd probably require unanimous agreement of the states to do that, because otherwise it would deprive a state of its due representation in the Senate without consent)

[12:39:00.0000] <AryehGregor>
(one of the two things that Constitutional amendments are not allowed to do)

[12:39:01.0000] <TabAtkins>
Though I just now realized that a line with three identifiers, all prefixed with unique punctuation, is pretty bad.

[12:39:02.0000] <AryehGregor>
(the other is prohibiting the import of slaves before 1822 or something)

[12:39:03.0000] <AryehGregor>
(1808, sorry)

[12:40:00.0000] <AryehGregor>
(sorry, it also can't levy direct taxes not in proportion to the Census before 1808)

[12:41:00.0000] <TabAtkins>
I love seeing ancient requirements baked into old technologies.

[12:41:01.0000] <AryehGregor>
See also: the Third Amendment.

[12:41:02.0000] <AryehGregor>
I want to know when a court last ruled something unconstitutional under the Third Amendment.

[12:42:00.0000] <AryehGregor>
1979, it seems.

[12:42:01.0000] <TabAtkins>
link?

[12:42:02.0000] <AryehGregor>
No, 1982 was the actual case.

[12:42:03.0000] <AryehGregor>
http://en.wikipedia.org/wiki/Engblom_v._Carey

[12:43:00.0000] <TabAtkins>
Interesting.

[12:45:00.0000] <TabAtkins>
Dammit, I wish there was some way to use @ in a tweet without linking to somebody.

[12:45:01.0000] <AryehGregor>
That's pretty awesome.

[12:45:02.0000] <AryehGregor>
\@

[12:45:03.0000] <AryehGregor>
@@

[12:45:04.0000] <AryehGregor>
There's no escape method?

[12:45:05.0000] <TabAtkins>
I dunno, and I don't particularly want to experiement on my public account.

[12:45:06.0000] <TabAtkins>
I guess I could make a throwaway account.

[12:46:00.0000] <rubys>
AryehGregor: what do you want an unofficial opinion on?  Go for it, here is your chance...

[12:47:00.0000] <TabAtkins>
Unrelated: Ooh, the new embedly extension is firing on almost *everything* in twitter.  *Awesome*.

[12:47:01.0000] <AryehGregor>
rubys, whether we should treat documentation of preexisting web platform features any differently from bug fixes of comparable size, and why.

[12:48:00.0000] <rubys>
let's start with why.

[12:49:00.0000] <rubys>
Not everybody follows the whatwg.  Heck, not even all of the browser vendors are participating in the whatwg.

[12:49:01.0000] <AryehGregor>
Agreed, but that applies equally well to bug fixes only brought up in the whatwg.

[12:49:02.0000] <rubys>
Imagine you are a browser vendor who is not in the WHATWG and are faithfully trying to implement the spec.

[12:49:03.0000] <rubys>
The next day, the spec changes on you without warning or even any discussion.

[12:50:00.0000] <alystair>
maybe what you guys need is better marketing ;)

[12:50:01.0000] <rubys>
All I am suggesting at this point, and I've said it several times now, is that the very minimum level of courtesy that could be provided is to open a bug report.

[12:50:02.0000] <alystair>
and perhaps a more fancy site like w3c

[12:50:03.0000] <rubys>
That seems like common sense to me.  What do you think?

[12:51:00.0000] <TabAtkins>
rubys: Do you think that non-w3c browsers are more likely to be following the w3c bug tracker than the whatwg commit list?

[12:51:01.0000] <AryehGregor>
I think people who want to follow spec changes can sign up to the commit-watchers list.  It's pretty low-volume, and that guarantees that you won't miss any changes even if someone forgets to file a bug report first.

[12:51:02.0000] <Hixie>
so every time i see a mistake i have to open a bug report? good luck with that.

[12:51:03.0000] <alystair>
http://blog.whatwg.org/ <- svg logo in header is not loading properly

[12:51:04.0000] <rubys>
what non-w3c browser?

[12:52:00.0000] <TabAtkins>
rubys: Oh, sorry, you said "in the WHATWG".  Consider my question suitably amended.

[12:52:01.0000] <alystair>
or maybe it's just in my copy of Firefox.. hmm

[12:52:02.0000] <AryehGregor>
Presumably Hixie could configure his script to automatically create and resolve a bug in the W3C tracker when he was making a change that had no associated bug.

[12:52:03.0000] <AryehGregor>
But it seems easier to just ask people to follow the commit-watchers list.

[12:52:04.0000] <TabAtkins>
alystair: Yeah, it loads properly in Chrome.

[12:52:05.0000] <AryehGregor>
It sees less traffic than the bugs list, I think.

[12:53:00.0000] <rubys>
my goal is to get people to talk.  As near as I can tell, your goal is to avoid that.

[12:53:01.0000] <AryehGregor>
alystair, Firefox doesn't support SVG in <img> before version 4.

[12:53:02.0000] <rubys>
I'll be frank: I get email all of the time from people complaining about this or that.  Each time I get them to actually make a statement in a place where it can be discussed.

[12:54:00.0000] <AryehGregor>
rubys, I'm happy to have people talk if they want to.  In practice, though, some discussion will occur in the WHATWG, and we can't transport all that discussion over to the W3C.  People who don't want to follow both places will miss some of the discussion.

[12:54:01.0000] <AryehGregor>
That's an inevitable consequence of having spec discussion split.

[12:54:02.0000] <jamesr_>
if you want to track changes to the spec isn't it better to follow commits on the spec rather than bugs?

[12:54:03.0000] <AryehGregor>
Unless one side mirrors the other side's discussions in some fashion, which is unlikely to be popular.

[12:54:04.0000] <alystair>
AryehGregor: thanks

[12:55:00.0000] <aho>
i see a small rendering glitch with ff4 here

[12:55:01.0000] <rubys>
All I am asking for is a bug to be reported when a feature is being discussed.  Is that so hard?  Please don't immediately jump to trying to subvert this by saying a bug could be opened after the fact.

[12:55:02.0000] <aho>
looks like the logo was rendered a bit too small and then repeated

[12:55:03.0000] <AryehGregor>
Only for features, not for bugs?

[12:55:04.0000] <AryehGregor>
Or for bugs too?  (Presumably excluding trivial editorial bugs like typos.)

[12:56:00.0000] <AryehGregor>
aho, probably due to viewBox handling; should be fixed in b12.

[12:56:01.0000] <AryehGregor>
(I filed a bug and they didn't listen to me at first, but eventually they gave in to reason)

[12:56:02.0000] <rubys>
I am quite OK with excluding trivial editorial bugs.  But anything that merits a real discussion should be tracked.

[12:56:03.0000] <Hixie>
rubys: should i request the opposite? Every time the chairs plan to make a decision that affects the WHATWG spec, the chairs should first open a discussion on the WHATWG list?

[12:56:04.0000] <aho>
svg is still handled by the w3c, right?

[12:56:05.0000] <AryehGregor>
aho, yes.

[12:57:00.0000] <rubys>
Hixie: I have no plans of making a decision that affects the WHATWG spec.

[12:57:01.0000] <AryehGregor>
Touche.

[12:57:02.0000] <aho>
thing is... masking is fubar'd and no one noticed it yet :>

[12:57:03.0000] <alystair>
oh holy it WAS fixed in nightly, having an older copy of safari open while trying to open nightly build just relaunched an older version :)

[12:57:04.0000] <AryehGregor>
/me awards a point to rubys 

[12:57:05.0000] <Hixie>
rubys: don't be an ass, you know full well that your decisions affect the whatwg spec

[12:57:06.0000] <alystair>
/me gets to not file a bug report \o/

[12:57:07.0000] <AryehGregor>
Hixie, he's right, they don't.  You can fork them.

[12:57:08.0000] <AryehGregor>
Which you do sometimes.

[12:57:09.0000] <Hixie>
he can fork the changes we make because of whatwg feedback too

[12:57:10.0000] <alystair>
AryehGregor: rubys as in the japanese text addition or the language

[12:58:00.0000] <Hixie>
but forking isn't good for anyone

[12:58:01.0000] <Hixie>
so we don't do it

[12:58:02.0000] <AryehGregor>
No he can't, he's not the editor.  He doesn't have commit access to your source.

[12:58:03.0000] <TabAtkins>
AryehGregor: rubys as in the dude in the room by that name.

[12:58:04.0000] <AryehGregor>
alystair, rubys as in "Ruby, S.", the guy in this channel.

[12:58:05.0000] <Hixie>
he's the chair, he has more authority over the w3c copy than i do

[12:58:06.0000] <AryehGregor>
TabAtkins, wrong person.

[12:58:07.0000] <TabAtkins>
Shit, I meant alystair

[12:58:08.0000] <Hixie>
and he's done it before

[12:58:09.0000] <AryehGregor>
Hixie, if he changed the W3C copy, your next commit would overwrite it, so he can't make changes directly as long as you're editing the W3C spec.

[12:58:10.0000] <AryehGregor>
rubys, okay, so you're not distinguishing between bugs and features.  I was confused on that point.

[12:59:00.0000] <Hixie>
AryehGregor: if he changed the w3c copy, my next commit would raise conflicts on my side and i'd be forced to take his change into account.

[12:59:01.0000] <AryehGregor>
Hixie, regardless, whether or not he can fork it, you are in fact directly changing the W3C copy.  That he can change it after the fact (in theory) is beside the point.

[13:00:00.0000] <Hixie>
rubys: the whatwg and the w3c are working together on this. Unless you're wiling to discuss the decisions you make on the whatwg list, it is completely hypocritical to demand that discussions on the whatwg list also be propagated to the w3c fora.

[13:00:01.0000] <AryehGregor>
The situation still isn't parallel.

[13:00:02.0000] <Hixie>
AryehGregor: i don't understand what not parallle.

[13:00:03.0000] <Hixie>
parallel.

[13:00:04.0000] <aho>
is there a w3c svg channel somewhere?

[13:01:00.0000] <AryehGregor>
Hixie, you're making changes to the W3C spec that the W3C might not want.  He is making no changes at all to the WHATWG spec (and indeed couldn't if he wanted to).

[13:01:01.0000] <AryehGregor>
rubys, personally, while I understand your position, I don't think your suggested policy is reasonable in light of the fact that HTML is being developed jointly by the W3C and WHATWG.

[13:01:02.0000] <TabAtkins>
aho: Do you know about the w3c network?

[13:01:03.0000] <AryehGregor>
aho, there's probably one on the W3C's IRC network.

[13:02:00.0000] <TabAtkins>
irc.w3.org 6665

[13:02:01.0000] <aho>
ty

[13:02:02.0000] <rubys>
AryehGregor: jointly doesn't mean "read the commit logs".

[13:02:03.0000] <Hixie>
AryehGregor: the reality of the situation is that his decisions _do_ affect the whatwg copy. he might not have technical editing rights but he certainly has practical editing power.

[13:02:04.0000] <TabAtkins>
Note: most of the time people don't pay attention to the w3c rooms.  I look into it once a day if I'm lucky, unless I'm mentioned.

[13:02:05.0000] <Sirisian|Work>
AryehGregor, It has been done https://bugzilla.mozilla.org/show_bug.cgi?id=633602 http://code.google.com/p/chromium/issues/detail?id=72754

[13:03:00.0000] <AryehGregor>
rubys, it means that contributions to the shared parts of the spec can come from either place.

[13:03:01.0000] <Hixie>
AryehGregor: any time the chairs make a normative decision, it affects both specs. it must, else we have to fork, which would be a disaster.

[13:03:02.0000] <AryehGregor>
rubys, as opposed to requiring that they come from the W3C, regardless of whether they've been discussed in the WHATWG.

[13:03:03.0000] <rubys>
AryehGregor: if it is discussed and no objections are raised, then I have no issue.

[13:04:00.0000] <AryehGregor>
rubys, nevertheless, your suggestion places an additional burden on people who prefer using the WHATWG to discuss changes, in that they have to mechanically file a bug report even when the conclusion is foregone.

[13:05:00.0000] <AryehGregor>
Of course, it also makes things easier for people who prefer to only follow the W3C.

[13:05:01.0000] <AryehGregor>
Which is why I understand why you'd suggest it, but you should also understand why I'd disagree.

[13:06:00.0000] <rubys>
AryehGregor:  Let met get this straight: your position is that filing a bug report is unreasonable burden, even if it makes things easier for others.

[13:06:01.0000] <rubys>
I'll admit that I don't understand that position.

[13:07:00.0000] <alystair>
Maybe the problem here is that filing a bug report is too arduous a task? :)

[13:07:01.0000] <rubys>
I'm not trying to put words in your mouth: is that what you really believe?  A request to file a bug report on changes that may be worth discussion and/or controverisal is an unreasonable request?

[13:08:00.0000] <rubys>
... both specs have a web form.  How hard is it?

[13:08:01.0000] <Hixie>
doing anything is more arduous than not doing it, so it seems trivially obvious that the request to do something when that isn't necessary is unreasonable

[13:08:02.0000] <jamesr_>
i never file a bug on the whatwg spec, i send an email. if i had to do more than that i'd probably be less likely to provide feedback

[13:08:03.0000] <Hixie>
but since sam is just ignoring me i'm going to head to lunch. bbl.

[13:09:00.0000] <AryehGregor>
rubys, it's only a slight burden.  However, it's also only a slight burden to ask interested W3C members to follow the commit list.

[13:09:01.0000] <AryehGregor>
It's a small burden on one side or the other.

[13:09:02.0000] <rubys>
If you were coding to a spec that was changing out from beneath you without any forewarning, you might have a different perspective on this topic.

[13:09:03.0000] <AryehGregor>
I am coding tests to a spec that's changing out from beneath me without any forewarning.

[13:10:00.0000] <AryehGregor>
That's why I follow the commit list.

[13:10:01.0000] <jamesr_>
why on earth would you code to a spec without following changes to the spec?

[13:10:02.0000] <jamesr_>
nobody does that

[13:10:03.0000] <AryehGregor>
Otherwise my tests become wrong.

[13:10:04.0000] <AryehGregor>
Trying to follow only the discussion fora is dangerous in any event, since you could easily miss a change in the noise, or a change might have only been discussed long before or in some place you aren't following, or whatever.

[13:11:00.0000] <AryehGregor>
I was already following public-html and whatwg when I started writing my tests, but I signed up to the commit list anyway because that was the only way to be fairly sure.

[13:11:01.0000] <rubys>
I would think that giving people a heads up would make sense, but in any case, it has been asserted that I am not clear at times.  I have made my request.  It is just a request.  But let me know if it is not clear.

[13:11:02.0000] <AryehGregor>
I believe you're clear.

[13:11:03.0000] <jamesr_>
it is unclear who (if anybody) would benefit from your proposal

[13:11:04.0000] <AryehGregor>
But one further thing: if the issue is implementers being surprised by spec changes, it would help if you could name some.

[13:12:00.0000] <AryehGregor>
Anyway, I think your suggestion is understandable, but I respectfully disagree.

[13:12:01.0000] <tw2113>
you don't see that said online frequently

[13:13:00.0000] <tw2113>
kudos AryehGregor

[13:13:01.0000] <TabAtkins>
I respectfully disagree.

[13:13:02.0000] <rubys>
AryehGregor: A consequence of that is that you will not get clear answers to whether or not features like atob are in or out until a request comes to yank them.

[13:13:03.0000] <jamesr_>
rubys: i think you are trying to solve problems for people that don't exist (people that care about changes in the spec but do not follow changes in the spec)

[13:13:04.0000] <AryehGregor>
You respectfully disagree that respectful disagreement is infrequently seen online, or with the kudos, or with my respectful disagreement, or all of the above, or something else entirely?

[13:14:00.0000] <TabAtkins>
Some of the above.

[13:14:01.0000] <AryehGregor>
rubys, there's never a clear answer.  Someone could always come along later and ask for it to be yanked, even if a bug was filed in the W3C.

[13:14:02.0000] <rubys>
jamesr_: the email I got was from a person that does exist, they mentioned the changes by giving the URIs of the commits and asked where these changes had been discussed.

[13:14:03.0000] <jamesr_>
rubys: who was it?

[13:14:04.0000] <AryehGregor>
If it's dropped, fine, it's dropped.

[13:14:05.0000] <tw2113>
i the fact it was even said AryehGregor

[13:14:06.0000] <AryehGregor>
jamesr_, you know he can't answer that.

[13:15:00.0000] <jamesr_>
i'd like to know what process they were expecting to see how that could be addressed

[13:15:01.0000] <zewt>
(I havn't been following spec commits, but it's not unreasonable for commit logs to include URLs to mailing list discussions, just as they often contain bug ticket numbers; FWIW)

[13:15:02.0000] <AryehGregor>
Hey, wait a second, did the HTMLWG's charter expire last December 31?  http://www.w3.org/2007/03/HTML-WG-charter

[13:16:00.0000] <rubys>
AryehGregor: it will be extended shortly.

[13:17:00.0000] <AryehGregor>
But we've technically been operating without a charter for well over a month.  Amusing.

[13:17:01.0000] <gsnedders>
AryehGregor: Far from unusual in W3C land

[13:17:02.0000] <AryehGregor>
At what point will it become possible to include new features in some other HTMLWG draft, like HTML6?  The more features get cut, the more pressing the need is for such a draft.

[13:18:00.0000] <rubys>
Dug up the email. here was the commit: http://lists.w3.org/Archives/Public/public-html-diffs/2011Feb/0005.html

[13:18:01.0000] <gsnedders>
AryehGregor: When there's a charter for it

[13:20:00.0000] <AryehGregor>
When will there or could there be a charter?

[13:20:01.0000] <AryehGregor>
(Why do we even need charters anyway?)

[13:20:02.0000] <rubys>
There could be one now.  But the reality is that we don't yet have a hard feature freeze on HTML5.

[13:20:03.0000] <gsnedders>
AryehGregor: When the AC votes there should be a charter for it, probably after the WG asks to have it added

[13:21:00.0000] <AryehGregor>
Fascinating.

[13:21:01.0000] <alystair>
is there a nice diagram explaining this whole process

[13:21:02.0000] <AryehGregor>
There's a lengthy document about it.

[13:22:00.0000] <AryehGregor>
Possibly multiple ones.

[13:22:01.0000] <AryehGregor>
Okay, well, I'm off for the day.  Bye.  Nice speaking to you, rubys.

[13:22:02.0000] <rubys>
AryehGregor: likewise

[13:23:00.0000] <jgraham>
AryehGregor: I assume the point of the charter is that a group doesn't get together under the premise that it will develop cool RDF technology and end up with a (non-RDF) specification for rating porn

[13:23:01.0000] <jgraham>
Or something

[13:23:02.0000] <jgraham>
This doesn't ever seem like a particular risk to me, so maybe I am missing something

[13:23:03.0000] <gsnedders>
jgraham: But a specification for rating porn would be more useful on the web than RDF.

[13:24:00.0000] <jgraham>
gsnedders:I can see that it would certainly have a broader market

[13:25:00.0000] <jgraham>
(in the event that something like that did happen, I imagine it would be possible to put the brakes on a group in a post-hoc fashion)

[13:26:00.0000] <aho>
i really wonder why no one added source/target rectangle stuff for backgrounds in css

[13:26:01.0000] <aho>
would make working with sprites a lot easier

[13:26:02.0000] <jgraham>
(but maybe when Serious People representing Real Companies that make Big Money are involved, one has to replace common sense with buracracy)

[13:27:00.0000] <aho>
on a second thought... nevermind. i hate sprites. i want resource packages (not the kind proposed by limi though) :>

[13:29:00.0000] <TabAtkins>
aho: http://www.w3.org/TR/media-frags/

[13:29:01.0000] <TabAtkins>
But yes, resource packages, or improvements to network architecture, are even better.

[13:30:00.0000] <TabAtkins>
SPDY makes it not-painful to request a hundred tiny images.

[13:31:00.0000] <aho>
never heard of media fragments before :o

[13:31:01.0000] <aho>
and yea, spdy is great

[13:31:02.0000] <TabAtkins>
Not implemented yet, but CSS chunked plans to add a direct spriting mechanism in favor of just pointing to Media Fragments.

[13:31:03.0000] <aho>
i don't like the current resource packages draft thing though. zip is awful for this

[13:33:00.0000] <aho>
what should theoretically work (right now!) are svg(z) files with b64-inlined images... each in its own id'd viewbox... and then you reference them by id in your css file

[13:33:01.0000] <aho>
havent tried this yet though

[13:33:02.0000] <aho>
but it should work... theoretically... but i kinda doubt it works good enough to be useful :>

[13:33:03.0000] <TabAtkins>
Interesting.

[13:35:00.0000] <alystair>
so this would be to replace the current css sprite techniques?

[13:35:01.0000] <TabAtkins>
If by "sprite technique" you mean using background-position and sizing hacks, yes.

[13:35:02.0000] <aho>
what i don't like about zip is the trailing index... that's just silly for this use case. i also don't think we need a standard format for this. what we actually need is a format which can be easily created with standard libraries

[13:36:00.0000] <aho>
but the basic idea of RPs is great

[13:37:00.0000] <alystair>
what does SPDY stand for

[13:37:01.0000] <TabAtkins>
http://www.chromium.org/spdy

[13:38:00.0000] <aho>
i also wish mozilla hadn't killed jng

[13:39:00.0000] <aho>
emulated it with svgz: http://kaioa.com/b/1102/svgjng/index.html

[13:39:01.0000] <aho>
use opera

[13:39:02.0000] <aho>
<:

[13:40:00.0000] <aho>
unfortunately svgs renderers currently dont agree on how to handle masking

[13:40:01.0000] <zewt>
aho: the trailing index for zip is annoying when "streaming" zips, but all in all for things like packages zip is good enough and using another format isn't worth it, in my experience

[13:41:00.0000] <TabAtkins>
aho: What's the benefit of JNG?

[13:41:01.0000] <aho>
this demo relies on sRGB behavior (opera, inkscape, illustrator, safari [iOS, windows], ie9)

[13:41:02.0000] <zewt>
i like zip a lot, just because it's such a simple, well-understood format

[13:41:03.0000] <aho>
TabAtkins, it's a jpg/png mashup format

[13:41:04.0000] <aho>
png32 is usually way too big

[13:41:05.0000] <TabAtkins>
PNG is lossless, right?

[13:41:06.0000] <aho>
as you can see i can easily save 75-80% of the file size without any noticable visible differences

[13:41:07.0000] <aho>
yes

[13:42:00.0000] <TabAtkins>
So what's the benefit over just using jpg?

[13:42:01.0000] <alystair>
wow that's really impresive

[13:42:02.0000] <aho>
transparency

[13:42:03.0000] <TabAtkins>
Ah, kk.

[13:42:04.0000] <alystair>
alpha blending :)

[13:42:05.0000] <alystair>
there was a way to hack it forever, but using flash :P

[13:42:06.0000] <aho>
http://kaioa.com/b/1011/jng_decision_matrix.svgz

[13:42:07.0000] <aho>
:>

[13:42:08.0000] <alystair>
you could utilize flash to generate simple jpg+alpha files

[13:42:09.0000] <alystair>
making TINY files

[13:43:00.0000] <TabAtkins>
Our WebP format hits that niche too

[13:43:01.0000] <alystair>
also totally unrelated to all this is the animated png fiasco

[13:44:00.0000] <aho>
that's related actually

[13:44:01.0000] <alystair>
next thing you tell me is that svg is the solution as well ? :)

[13:44:02.0000] <aho>
moz wont implement jng because they hate the mng/jng people :>

[13:44:03.0000] <TabAtkins>
It's silly that we ended up with 3 major formats, each with a useful ability that the others can't do.

[13:44:04.0000] <TabAtkins>
PNG = full alpha, GIF = animation, JPEG = compression

[13:45:00.0000] <aho>
alystair, well in that demo above i used svgz for truecolor+alpha images

[13:45:01.0000] <alystair>
actually gif is sort of lacking in smart animation department

[13:45:02.0000] <TabAtkins>
Hm, I need to do some testing with list-style-images...

[13:45:03.0000] <zewt>
heh yeah, anyone designing a new format needs to make sure that it's a complete superset of the features of the three existing formats (well, the features that are used, not the useless, legacy features)

[13:45:04.0000] <alystair>
I actually use png sprites + js to create really slick animations

[13:45:05.0000] <alystair>
although an svg alternative would be much less hackish if it ever comes to fruitation

[13:46:00.0000] <aho>
TabAtkins, but there isn't alpha support in WebP yet, is it?

[13:46:01.0000] <TabAtkins>
I've used SVG+SMIL to do animated sprites in the three good rendering engines.

[13:46:02.0000] <TabAtkins>
aho: I dunno.

[13:46:03.0000] <TabAtkins>
I assumed there was?

[13:47:00.0000] <aho>
alystair, the color space issue needs to be resolved first... right now it only works with about 50% of the implementations :/

[13:47:01.0000] <aho>
it was planned from the beginning, but so far they havent added it yet

[13:47:02.0000] <aho>
to my knowledge, that is

[13:48:00.0000] <aho>
alystair, to make matters worse it only works with those implementations which did it *WRONG* :>

[13:48:01.0000] <aho>
(but sRGB makes a whole lot more sense, you see)

[13:48:02.0000] <alystair>
alpha blending + full color + compression + ease of animation = big win for designers

[13:48:03.0000] <zewt>
heh just crashed ff3 with google books

[13:49:00.0000] <aho>
well, i'm really annoyed that no one (except for konqueror) supports jng

[13:49:01.0000] <alystair>
zewt: Do not open the Necronomicon in FF3 :)

[13:49:02.0000] <aho>
it's such a simple format

[13:49:03.0000] <TabAtkins>
aho: WebP doesn't have transparency yet, but it's planned for a future update.

[13:49:04.0000] <aho>
if you got the code for png and jpg, you got >99% of the code you need for jng

[13:50:00.0000] <TabAtkins>
http://blog.chromium.org/2010/09/webp-new-image-format-for-web.html

[13:51:00.0000] <jgraham>
Jesus, are people *still* going on about the MNG thing. It was like *ten years ago* people

[13:51:01.0000] <jgraham>
Get over it already

[13:51:02.0000] <aho>
jgraham, eh... people still need lossy rgba images

[13:51:03.0000] <zewt>
webp doesn't seem like a very serious format at all, when i looked over it

[13:51:04.0000] <aho>
no one wants to waste >300kb for one relatively small image

[13:51:05.0000] <alystair>
webp doesn't seem to provide enough advantages

[13:52:00.0000] <alystair>
no demos of alphablending

[13:52:01.0000] <alystair>
just another jpg replacement?

[13:52:02.0000] <aho>
+alpha (eventually)

[13:52:03.0000] <zewt>
that is, it seems like it's trying to do a very few things, with no attempt to overlap the broader functionality of a general-purpose file format

[13:52:04.0000] <aho>
jgraham, check this demo (with opera): http://kaioa.com/b/1102/svgjng/index.html

[13:53:00.0000] <aho>
you can save a lot of bytes if you go lossy

[13:53:01.0000] <zewt>
at least, from what I remember from looking it over a while back--my impression was that it was too narrowly-focused to justify adding a new image format into the wild

[13:54:00.0000] <aho>
zewt, well you get it basically for free (if you support webm, that is)

[13:54:01.0000] <zewt>
new file formats are never free :)

[13:54:02.0000] <zewt>
(eg. support in non-browser applications)

[13:56:00.0000] <zewt>
aho: reusing the same underlying compression algorithm is a win, of course, just like PNG making use of deflate which everyone is already using

[13:58:00.0000] <aho>
jng = png+jpg (literally). my svgz workaround = deflated b64'd jpg|png + jpg|png

[14:01:00.0000] <aho>
even Flash got a lossly translucent image format... why cant we have one in browsers? :l

[14:01:01.0000] <zewt>
webp's image size limitations are much smaller than jpeg's, which is bad

[14:01:02.0000] <aho>
65k?

[14:01:03.0000] <zewt>
iirc webp is 16k and jpeg is 64k, which matters when you get to print-size stuff

[14:01:04.0000] <zewt>
(not sure offhand what PNG's is)

[14:02:00.0000] <aho>
64k

[14:02:01.0000] <aho>
i think :>

[14:02:02.0000] <zewt>
16k is more than enough for images on the web, but no new, modern image format being released into the wild should be designed *only* for images on the web

[14:02:03.0000] <zewt>
even if that's the underlying drive for making it

[14:03:00.0000] <jgraham>
In other news, it seems everyone ignored the suggestion to collect some data before working out a "solution" to the delayed script compilation thing

[14:04:00.0000] <jgraham>
We evidently need to do a "how do I make good solutions to problems" fire drill

[14:04:01.0000] <TabAtkins>
jgraham: Just tell everyone they're wrong.

[14:04:02.0000] <zewt>
i ran a quick, dumb benchmark on Chrome: a 40-meg script with a lot of small functions took 6 seconds to parse; i didn't bother posting it since I thought there must already be lots of good compilation-time benchmarks out there

[14:04:03.0000] <zewt>
(er, parse+compile+execute)

[14:04:04.0000] <zewt>
(too much conflation of "parse" in that thread, heh)

[14:07:00.0000] <jgraham>
zewt: That is literally the only data I have seen so far

[14:07:01.0000] <zewt>
heh

[14:07:02.0000] <jgraham>
and it is hardly enough to draw any conclusions from :)

[14:07:03.0000] <zewt>
yeah, that's another reason I didn't post it

[14:08:00.0000] <zewt>
runtime of a script with a bunch of "function f12345() { a(); b(); c(); d(); e(); }" statements isn't exactly a real-world benchmark

[14:08:01.0000] <jgraham>
And I think you are wrong; there aren't any good (or at least widely used) benchmarks

[14:08:02.0000] <jgraham>
For pre-execution time

[14:09:00.0000] <zewt>
it would be nice if someone could track down the Google dev who implemented the comments hack, and ask *specifically* what the target mobile hardware was in mind for that

[14:09:01.0000] <zewt>
because it might well have been for older mobile devices with old, slow javascript parsers, and not even be relevant on eg. current Android browsers running V8, etc

[14:10:00.0000] <Philip`>
AryehGregor: "-f" is easy to find - just run "perldoc -f -f"

[14:10:01.0000] <zewt>
rather hard to google for, though :)

[14:17:00.0000] <Philip`>
zewt: You don't need Google, you just need perldoc

[14:18:00.0000] <zewt>
i can't stand perldoc; but I can't stand perl either, so that's okay

[14:18:01.0000] <Philip`>
(Also you probably need the camel book)

[14:18:02.0000] <zewt>
in general I try to avoid all languages $that $make $me $feel $like $I'm $programming $in $basic

[14:19:00.0000] <aho>
i started with basic

[14:19:01.0000] <aho>
the kind with numbers at the start of each line

[14:19:02.0000] <Moo-_>
zewt: how did you feel when jquery introduced $?

[14:19:03.0000] <aho>
lol :D

[14:19:04.0000] <zewt>
i havn't used jquery; i intend to try it

[14:19:05.0000] <Moo-_>
aho: http://www.oocities.com/KindlyRat/GWBASIC.html

[14:19:06.0000] <TabAtkins>
jquery and php probably qualify as the most used languages on the web.

[14:20:00.0000] <aho>
Moo-_, i don't miss those days .)

[14:20:01.0000] <TabAtkins>
So I'm just following proven standards. ^_^

[14:20:02.0000] <zewt>
currently most of my stuff is in prototype; i've decided I don't really care for prototype, but not badly enough to rewrite existing products to get rid of it

[14:20:03.0000] <Moo-_>
a programming language is not good if it lacks SWAP functoin

[14:20:04.0000] <zewt>
i'm not a fan of php, either, except for simple, quick hacks

[14:20:05.0000] <aho>
same here

[14:21:00.0000] <zewt>
moo: a, b = b, a :)

[14:22:00.0000] <TabAtkins>
[a,b] = [b,a] (in harmony javascript)

[14:22:01.0000] <zewt>
i sort of lost faith in prototype when I noticed that it, *by default*, silently discards all exceptions raised from AJAX handlers ... and when I pointed it out they asserted that that was perfectly normal

[14:23:00.0000] <zewt>
sort of one of those "uh, okay *backs away slowly*" things

[14:23:01.0000] <aho>
prototype extends build-in stuff

[14:23:02.0000] <aho>
worst lib ever

[14:23:03.0000] <TabAtkins>
I have no problem with extending built-in stuff.

[14:23:04.0000] <zewt>
it's a handy model for a lot of things

[14:23:05.0000] <TabAtkins>
It just means I can't use for-in.

[14:24:00.0000] <aho>
TabAtkins, it also overwrote build-in functions with its own functions... all of a sudden array.unshift was broken

[14:24:01.0000] <aho>
AWESOME :V

[14:24:02.0000] <TabAtkins>
Well that's just stupid.

[14:24:03.0000] <Philip`>
/me likes for-in

[14:24:04.0000] <Philip`>
(though not as much as I like for-each-in)

[14:24:05.0000] <TabAtkins>
Philip`: I'd rather have a proper iterator protocol, which we're getting.

[14:24:06.0000] <aho>
and i hated prototype ever since :)

[14:24:07.0000] <TabAtkins>
Not a stupid enumerator protocol.

[14:25:00.0000] <Philip`>
/me doesn't care about fancy iteration, he just wants to loop over arrays and objects

[14:25:01.0000] <TabAtkins>
I like looping over expensive or infinite collections.

[14:26:00.0000] <zewt>
i also pointed out a case where Enumerable#include was horribly slow and offered a fix that made it 80x faster; i didn't even get a reply

[14:26:01.0000] <zewt>
which means development is either stagnant or they just don't care--neither is something I want to depend on for my code

[14:28:00.0000] <jgraham>
/me likes using .map or .forEach to loop over arrays and is annoyed that .map doesn't work on objects

[14:29:00.0000] <jgraham>
I mean, there is an obvious way it could work

[14:29:01.0000] <jgraham>
foo.map(function(value, property, foo_obj){})

[14:29:02.0000] <jgraham>
In the array case property is always an index property

[14:30:00.0000] <webr3>
really stupid question coming up.. why is window, navigator, pretty much all of section 5 in the HTML specification rather than some "browser context" spec or such like?

[14:30:01.0000] <TabAtkins>
jgraham: Yeah, the correct behavior is for map to give its callback two arguments.

[14:31:00.0000] <jgraham>
TabAtkins: It does already

[14:31:01.0000] <jgraham>
Well three actually

[14:31:02.0000] <TabAtkins>
webr3: Because nobody else wanted to do that.

[14:31:03.0000] <webr3>
TabAtkin, did anybody ask before / was it discussed previously?

[14:31:04.0000] <webr3>
+s

[14:31:05.0000] <zewt>
... thought about trying to back the script-execution thread up to reexamine the benchmarking question, but ... not feeling quite that masochistic today

[14:32:00.0000] <TabAtkins>
jgraham: Um.  Indeed.  So what's the problem?  Just that Object doesn't have map in its prototype?

[14:32:01.0000] <TabAtkins>
webr3: Hixie has certainly tried to get people to take the window spec from him before.

[14:33:00.0000] <Philip`>
jgraham: I don't like forEach because it breaks 'this' :-(

[14:33:01.0000] <zewt>
imagine a world where javascript's "this" handling wasn't braindamaged :|

[14:34:00.0000] <zewt>
also world peace, holding hands, singing in the streets, etc

[14:34:01.0000] <jgraham>
Philip`: You can provide an explicit this object

[14:34:02.0000] <jgraham>
TabAtkins: Taht it only works with index propertie

[14:34:03.0000] <jgraham>
s

[14:34:04.0000] <jgraham>
webr3: Actually there was an attempt to make window a seperate spec

[14:34:05.0000] <jgraham>
it was abandonded

[14:35:00.0000] <jgraham>
In general practicality beats purity and attempts to split out window are generally motivated by purity

[14:36:00.0000] <webr3>
fair point, i can see that

[14:40:00.0000] <Hixie>
a lot of the window stuff ties in really annoyingly closely to things like the html parser

[14:40:01.0000] <Hixie>
in practice it'd be really hard to split it out

[14:41:00.0000] <Hixie>
personally i'm a fan of having fewer, larger specs, anyway :-)

[14:41:01.0000] <Hixie>
i think we should have a script that merges in DOM Core, DOM Events, DOM Range, Selector API, CSSOM, and so forth, into HTML

[14:42:00.0000] <Hixie>
(it'd be much harder to merge in SVG, CSS, and MathML because of the way they are written)

[14:42:01.0000] <Hixie>
i'm not saying these should all be edited by one person, btw

[14:42:02.0000] <Hixie>
just that there should be a one-page spec somewhere that is the result of merging the text of those specs into one document

[14:43:00.0000] <othermaciej>
and then, the challenge will be to build a browser that can load it without crashing or hanging

[14:43:01.0000] <webr3>
lol

[14:44:00.0000] <Philip`>
Everyone can just use the multipage version of the giant aggregated spec

[14:44:01.0000] <othermaciej>
and it will be about as useful as putting all the code for a browser engine in a single source file

[14:44:02.0000] <webr3>
I like both, smaller specs w/ seperation of concerns, and one big overview (or view) of the whole lot

[14:44:03.0000] <webr3>
hixie, i see what you mean about really hard to split out though, probably impracticle/nigh on impossible to do anyways

[14:45:00.0000] <Hixie>
othermaciej: i find the one-page spec much more useful than the split specs, but the good thing about doing it as a post-processor operation is that nobody is forced to use it :-)

[14:45:01.0000] <Hixie>
webr3: it'd be possible given enough time (6 months to a year probably), but impractical for sure.

[14:53:00.0000] <aho>
is there some kind of overview which lists all css values which are inherited?

[15:02:00.0000] <aho>
gonna script that myself eh? :f

[15:07:00.0000] <TabAtkins>
I think putting CSSOM into HTML is a fine idea.

[15:07:01.0000] <TabAtkins>
It lives in a weird area right now.

[15:09:00.0000] <ttepasse>
Shouldn't the XML Specs or XML5 also integrated into HTML, given the XHTML-Serialisation?

[15:09:01.0000] <TabAtkins>
Yes, for those that actually care about the web.

[15:09:02.0000] <ttepasse>
Namespaces!

[15:09:03.0000] <TabAtkins>
Namespaces are already handled in HTML, so shrug.

[15:10:00.0000] <ttepasse>
I'm just trolling. ;)

[15:14:00.0000] <TabAtkins>
Oh man, Google Instant is great for putting together data:urls.  You can see the page as you build it!

[15:15:00.0000] <zewt>
heh, i turned instant off almost ... instantly, since it was too annoying

[15:15:01.0000] <TabAtkins>
Really?  I found it pretty cool, since it usually means I have literally 0 wait for the page to load.

[15:15:02.0000] <zewt>
like when you're typing a word, and when it updates mid-word as you're typing and you see the thing you want flash by, but when you stop typing the word it updates again and it's gone

[15:16:00.0000] <zewt>
i still need to find a script to kill the search completion ... it broke my search habits utterly

[15:16:01.0000] <zewt>
which i still havn't recovered from

[15:17:00.0000] <zewt>
(i do a lot of site: searches, pulling the text out of browser history, and the completion dropdown breaks browser form history)

[15:18:00.0000] <Hixie>
i'm assuming tab is talking about chrome instant, not google instant :-)

[15:18:01.0000] <Hixie>
TabAtkins: btw, you can use the live dom viewer to make data: urls -- click the Rendering link to get a data: URL of the current page

[15:18:02.0000] <zewt>
i havn't seen that yet ... turned it on in chrome (after it again updated without permission :) but didn't see anything

[15:18:03.0000] <TabAtkins>
Yes, though I also love google instant

[15:19:00.0000] <TabAtkins>
Hixie: Ah, cool.

[15:19:01.0000] <TabAtkins>
zewt: With Instant on, you should see chrome guess and preload pages as you type in the omnibar

[15:19:02.0000] <zewt>
i only use chrome for debugging, though, don't have much in history

[15:22:00.0000] <TabAtkins>
Oh jeez, the logs went super-yellow.

[15:29:00.0000] <Hixie>
heycam|awaytil14: yt?

[15:30:00.0000] <Hixie>
i wonder if he means 4pm PST, March 4th, April...?

[15:30:01.0000] <TabAtkins>
Isn't heycam in NZ?

[15:30:02.0000] <Hixie>
i thought he moved to the bay area when he joined mozilla

[15:31:00.0000] <Hixie>
i could be vastly mistaken

[15:31:01.0000] <gavin>
I think he was in MV for a few weeks but is still based in NZ permanently

[15:32:00.0000] <Hixie>
k

[15:32:01.0000] <Hixie>
well then i've no idea what "4" will mean :-)

[15:33:00.0000] <jamesr_>
14

[15:33:01.0000] <jamesr_>
so i'd guess 2pm?

[15:34:00.0000] <Hixie>
oh "til 14" not "till 4", my bad

[15:34:01.0000] <Hixie>
maybe he means feb 14th

[15:39:00.0000] <Hixie>
abarth: do you know what's going on with web sockets these days?

[15:39:01.0000] <abarth>
Hixie: more or less

[15:39:02.0000] <Hixie>
any progress?

[15:39:03.0000] <abarth>
the working group seems to be closing in on a spec

[15:39:04.0000] <abarth>
but othermaciej has said that he can't live with one aspect of the spec (related to masking traffic to avoid confusing proxies)

[15:40:00.0000] <abarth>
the IETF doesn't seem set up to handle that sort of situation

[15:41:00.0000] <Hixie>
did they ever simplify the framing at all?

[15:41:01.0000] <abarth>
they've shuffled around a couple bits in the framing

[15:41:02.0000] <abarth>
but its largely unchanged

[15:41:03.0000] <Hixie>
k

[15:42:00.0000] <Hixie>
i guess if it's getting stable i should get some time with ian to make sure the api spec is aligned correctly

[15:42:01.0000] <abarth>
that's probably worth doing

[15:43:00.0000] <abarth>
pat seems excited about being almost done (E.g., http://www.ietf.org/mail-archive/web/hybi/current/msg06302.html )

[15:43:01.0000] <abarth>
which i take to be a good sign

[15:44:00.0000] <franksalim>
Hixie: any hope of adding TypedArray to the API, now that there are binary data frames in the protocol?

[15:45:00.0000] <Hixie>
not until the binary stuff in JS is solid

[15:45:01.0000] <Hixie>
last i heard it still had major issues like exposing the platform endianness

[15:45:02.0000] <Hixie>
but as soon as the infrastructure is there, yeah

[15:46:00.0000] <franksalim>
Hixie: ok, thanks

[15:48:00.0000] <franksalim>
So Typed Array is good enough for XHR but not WebSocket?

[15:49:00.0000] <Hixie>
anne and I presumably have different thresholds for how stable something has to be before using it :-)

[15:49:01.0000] <Hixie>
i've been burnt too many times using stuff that wasn't stable

[15:51:00.0000] <TabAtkins>
Using "till" for "until" is fundamentally wrong.

[15:52:00.0000] <TabAtkins>
Hixie: Is what's currently in http://dev.w3.org/csswg/css3-images/#sizing capable of being hooked into for you?  I can provide better hooks if necessary.

[15:53:00.0000] <Hixie>
hooked into for what?

[15:54:00.0000] <Hixie>
i lack context

[15:54:01.0000] <TabAtkins>
drawing svg without proper dimensions into canvas.

[15:54:02.0000] <TabAtkins>
bug 11488


2011-02-12
[16:02:00.0000] <Hixie>
oh, right

[16:03:00.0000] <Hixie>
looks ok. so I can just reference the intrinsic dimensions, reference CSS Image, and be done right? as far as sizing goes?

[16:03:01.0000] <Hixie>
s/just reference/just say to use/

[16:03:02.0000] <TabAtkins>
And mention that the default object size is the canvas dimensions.

[16:03:03.0000] <Hixie>
k

[16:03:04.0000] <TabAtkins>
Those are the only two inputs, so you should be good otherwise.

[16:03:05.0000] <Hixie>
sounds plausible

[16:03:06.0000] <Hixie>
i'll let you know when i actually do it :-)

[16:03:07.0000] <TabAtkins>
k, no problem.

[16:04:00.0000] <TabAtkins>
Just working in that section now, so I wanted to bring it up while it was on my mind.

[16:07:00.0000] <Hixie>
TabAtkins: cool

[16:08:00.0000] <TabAtkins>
Augh, I'm gradually forgetting how to write.

[16:09:00.0000] <TabAtkins>
Hixie: Just let me know when you do add it, so I can make sure the terms are good.  Input to the algo is intrinsic dimensions and default object size, output is a CSS View Box with definite dimensions, which SVG is then asked to draw into.

[16:09:01.0000] <Hixie>
by hand or at all?

[16:09:02.0000] <TabAtkins>
By hand.

[16:10:00.0000] <TabAtkins>
I can write fine on a whiteboard with markers, but pen-on-paper is gradually slipping away.

[16:10:01.0000] <Hixie>
TabAtkins: i added a link to this irc log in the bug, hopefully i'll see myself telling you that i'll try to remember to do so when i red this sentence

[16:10:02.0000] <TabAtkins>
Haha, kk.

[16:10:03.0000] <Hixie>
read, even

[16:12:00.0000] <TabAtkins>
Dammit, of course IE9 is the one person to implement the stupid algorithm.

[16:12:01.0000] <TabAtkins>
Which everyone else does sanely but wrong-by-spec.

[16:13:00.0000] <zewt>
"damn you, IE, stop following the specs"

[16:13:01.0000] <TabAtkins>
They should stop following stupid specs that I disagree with. ^_^

[16:13:02.0000] <TabAtkins>
Namely, the sizing algorithm for images used in list-style-image, which is singularly different from how images are sized everywhere else in one specific detail.

[16:14:00.0000] <Hixie>
if there's no compat need and everyone else does it the same different sane way, i say change it

[16:15:00.0000] <TabAtkins>
Yeah, that's what I'm writing an email for right now.

[16:17:00.0000] <Hixie>
"Selectors doesn't define if the parent of an element that is :active or :hover is also in that state."

[16:18:00.0000] <Hixie>
isn't it about time we defined that

[16:18:01.0000] <TabAtkins>
Complain about it on the list.  fantasai refuses to acknowledge that arbitrary elements are allowed to be :hover or :active.

[16:18:02.0000] <TabAtkins>
Or just define it, whatever.

[16:18:03.0000] <TabAtkins>
We both know the right definitions.

[16:19:00.0000] <Hixie>
i actually don't remember if the ancestor chain or the "z-index chain" (for lack of a better term) or neither or both is affected by :hover and :active

[16:20:00.0000] <TabAtkins>
What's a z-index chain?  The list of elements underneath the pointer?

[16:20:01.0000] <Hixie>
yeah

[16:20:02.0000] <Hixie>
not sure what the right term is

[16:20:03.0000] <Hixie>
i know that ain't it

[16:20:04.0000] <aho>
browsers go with the ancestor chain... this allows you to do those menu thingies

[16:20:05.0000] <aho>
e.g. some horizontal menu which expands downwards

[16:20:06.0000] <TabAtkins>
Yup.  The right answer is "ancestor chain".  Everyone who would receive a mouseover event.

[16:21:00.0000] <Hixie>
k

[16:22:00.0000] <Hixie>
then y'all in the csswg should spec that :-P

[16:22:01.0000] <Hixie>
anyway on the other issue, i'm overriding selectors in the html spec

[16:22:02.0000] <Hixie>
and putting in a willful violation

[16:22:03.0000] <Hixie>
first one that refers to a spec whose editor list includes me :-P

[16:23:00.0000] <aho>
http://whatwg.pastebin.com/P7SNejxU <- css2 inherited properties :>

[16:23:01.0000] <TabAtkins>
data:text/html;charset=utf-8,%3C!DOCTYPE%20html%3E%0A%3Cdiv%20id%3Dfoo%3E%0A%20%20%3Cdiv%20id%3Dbar%3E%3C%2Fdiv%3E%0A%3C%2Fdiv%3E%0A%3Cstyle%3E%0A%23foo%3Ahover%20%7B%20background%3A%20blue%3B%20%7D%0A%23bar%3Ahover%20%7B%20background%3A%20green%3B%20%7D%0A%23bar%20%7B%0A%20%20position%3A%20absolute%3B%0A%20%20top%3A%2050px%3B%0A%20%20left%3A%2050px%3B%0A%7D%0Adiv%20%7B%0A%20%20width%3A%20100px%3B%0A%20%20height%3A%20100px%3B%0A%20%20bor

[16:23:02.0000] <aho>
i like how "no, see prose" basically means "yes" :>

[16:24:00.0000] <aho>
(text-shadow and text-decoration)

[16:24:01.0000] <Philip`>
TabAtkins: That looks truncated

[16:24:02.0000] <TabAtkins>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/833

[16:27:00.0000] <TabAtkins>
aho: They're not inherited.  They give the appearance of being so, though.  You don't want to actually inherit, because then things would get drawn twice.

[16:28:00.0000] <aho>
sooo... they aren't inherited from an implementation standpoint, but from an author's standpoint?

[16:28:01.0000] <aho>
kinda confusing :>

[17:32:00.0000] <TabAtkins>
aho: Well, that's the way it has to work.  You don't want "<p>foo <b>bar</b> baz</p><style>p,b{ text-shadow: 5px 5px rgba(255,0,0,.5); }</style> to draw two shadows on "bar".

[17:33:00.0000] <aho>
but with p{ text-shadow: 5px 5px rgba(255,0,0,.5); } the b would be also text-shadow'd :>

[17:35:00.0000] <aho>
ahm... well, color is inherited... but that doesn't mean that bar is rendered twice, right?

[17:35:01.0000] <TabAtkins>
text drawing is already defined to happen only once.

[17:36:00.0000] <aho>
and text-shadow isn't text rendering?

[17:36:01.0000] <TabAtkins>
It's easier to handle inheritance in the special way than try and re-solve the problem of "draw this only once" for shadows and decorations.

[17:37:00.0000] <aho>
but from a css author's point of view it is exactly like inherit isn't it?

[17:37:01.0000] <TabAtkins>
Sure.

[17:39:00.0000] <aho>
well, that makes things easier

[17:39:01.0000] <aho>
:>

[17:39:02.0000] <TabAtkins>
Just note that things like the 'inherit' keyword won't act like its inherited.

[17:39:03.0000] <TabAtkins>
Ooh, IE9 supports vh/vw/vm, and rem!  Yay!

[17:40:00.0000] <TabAtkins>
Also ch!

[17:40:01.0000] <aho>
sooo... with that example above... b{text-shadow:inherit} wouldnt work?

[17:40:02.0000] <TabAtkins>
/me loves new units.

[17:40:03.0000] <TabAtkins>
aho: It would do something unexpected (create two shadows on "bar").

[17:40:04.0000] <aho>
oh... :)

[18:17:00.0000] <deane>
MikeSmith: I only chatted to doublec for a few minutes. There was a guy sitting opposite him, don't know who he was

[18:23:00.0000] <deane>
MikeSmith: I missed roc yesterday as he had just left for the weekend. It was roc that I wanted to chat to. I met roc about three years ago, he told me Hixie was a genius (but I already knew that :) ).

[18:45:00.0000] <deane>
MikeSmith: I've been out of the openweb scene for a while, getting back involved now. Wanting to help you guys out. I have a few good ideas that I'll send in to the group. I have also recruited a friend of mine to the project. He's a security, JavaScript, network, php, and dom expert. I'm giving him a html5 101, starting with Simon's elements/content model site. He's a cool guy and I think he'll be a good help to all. We both need to read the spec

[18:45:01.0000] <deane>
though. I haven't read the spec for about 18 months, sorry :( So need to catch up with what's been going on.

[21:22:00.0000] <annevk>
hmm

[21:22:01.0000] <annevk>
WebKit and Opera support event.cancelBubble

[21:22:02.0000] <annevk>
and Gecko throws when accessing type of a newly created event

[21:23:00.0000] <annevk>
gonna assume that is a bug

[21:24:00.0000] <annevk>
Gecko and Opera support "events" as createEvent() argument...

[21:25:00.0000] <annevk>
eventPhase defaults to 0, 1, or 2 depending on where you look

[21:25:01.0000] <annevk>
(there's no constant for 0)

[21:26:00.0000] <zewt>
dom events and a puppy are about as much fun as a puppy

[21:26:01.0000] <annevk>
DOM3Events doesn't define any of this of course

[21:27:00.0000] <annevk>
not that my spec does not have bugs in this area, but I'm not done yet

[21:28:00.0000] <zewt>
if there was one annoying thing i could retroactively fix with dom events, it'd be the annoying AT_TARGET phase

[21:28:01.0000] <annevk>
go on...

[21:29:00.0000] <zewt>
specifically, the fact that you can't attach a capturing event listener onto an element, cancel the event from that handler, and have it prevent delivering the event to non-capturing handlers on the same event

[21:29:01.0000] <annevk>
well this is hilarious

[21:29:02.0000] <zewt>
(since it's already in AT_TARGET at that point, it's too late)

[21:29:03.0000] <zewt>
but ... many years too late to do anything about that. heh

[21:29:04.0000] <annevk>
once you do initEvent with the empty string event.type can be the empty string in Gecko

[21:30:00.0000] <annevk>
isn't that what stopPropagation() does?

[21:31:00.0000] <zewt>
as i recall my troubles with it, that only works if you do it while you're still in CAPTURING_PHASE

[21:31:01.0000] <zewt>
eg. if you're capturing from something higher up on the dom heirarchy

[21:31:02.0000] <annevk>
right

[21:32:00.0000] <annevk>
if you want to prevent it from reaching event listeners on the same current target you use stopImmediatePropagation

[21:32:01.0000] <zewt>
don't recall that method--will need to look it up

[21:32:02.0000] <zewt>
is that events level 3?

[21:32:03.0000] <annevk>
yeah

[21:33:00.0000] <zewt>
that's probably why i havn't heard of it, then

[21:33:01.0000] <zewt>
nice to know there's a way to deal with that coming down the pipeline eventually

[21:33:02.0000] <annevk>
i haven't actually checked whether it's implemented yet, but I've defined it and I'm guessing it works already

[21:34:00.0000] <zewt>
as far as the tech field goes, dealing with web standards must be very near the top in terms of things requiring patience, heh

[21:34:01.0000] <annevk>
so WebKit throws a NOT_SUPPORTED_ERR for initEvent with the empty string

[21:34:02.0000] <zewt>
"alright, that's defined, we'll be able to use it in 3-5 years"

[21:36:00.0000] <annevk>
hmm indeed

[21:36:01.0000] <annevk>
only WebKit seems to have stopImmediatePropagation

[21:36:02.0000] <annevk>
lame

[21:37:00.0000] <annevk>
meanwhile Opera throws on document.createEvent("event")

[21:37:01.0000] <annevk>
case-sensitive!

[21:37:02.0000] <annevk>
hah, but not case-sensitive for "htmlevents"

[21:37:03.0000] <zewt>
i also don't envy you or anyone else dealing with specs for dom events, heh

[21:38:00.0000] <zewt>
or any API with its, uhh ... colorful history

[21:38:01.0000] <annevk>
i've done a couple now

[21:38:02.0000] <annevk>
it has its moments

[21:39:00.0000] <annevk>
and as long as I don't work on it days on end it's quite enjoyable

[21:39:01.0000] <zewt>
moments of sudden, painful hair loss

[21:39:02.0000] <annevk>
heh

[21:41:00.0000] <annevk>
whoa

[21:41:01.0000] <annevk>
empty string totally works in Gecko

[21:41:02.0000] <zewt>
heh

[21:41:03.0000] <annevk>
you can even register event handlers for it

[21:41:04.0000] <zewt>
reminds me of when, in an old linux kernel, i found i was able to map memory onto NULL, and make NULL a valid pointer

[21:41:05.0000] <annevk>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/834

[21:41:06.0000] <annevk>
that's wild

[21:42:00.0000] <annevk>
very silly that they throw for it before invoking initEvent then

[21:42:01.0000] <annevk>
otherwise you could just skip initEvent and go straight to finish

[01:47:00.0000] <hasta84>
Hey everyone...

[01:47:01.0000] <hasta84>
Anyone here interested in p2p / device specs?

[08:52:00.0000] <deane>
Anyone know of a webpage (or whatever) that details why we can't have any elements within <p> ? I just want to understand why we can't allow elements within <p>, that's all. Sorry, I'm sure this has been discussed many times :/ Any pointers? :)

[08:54:00.0000] <erlehmann>
deane, <p> allows phrasing content. what is your problem with that?

[08:55:00.0000] <erlehmann>
deane, read <http://www.whatwg.org/specs/web-apps/current-work/multipage/content-models.html#phrasing-content>

[11:24:00.0000] <deane>
erlehmann: sweet, thanks man, thanks for the link, I'll check that out. I was actually thinking of stuff like: <p><table>, plus, I misread an article about it :\ Never mind :)

[11:27:00.0000] <deane>
erlehmann: I was thinking of block, sorry

[11:28:00.0000] <Philip`>
If a site says

[11:28:01.0000] <Philip`>
  <meta charset="UTF-8"> <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />

[11:28:02.0000] <Philip`>
should it be invalid?

[11:29:00.0000] <Philip`>
Hrm... The spec says "There can only be one character encoding declaration in the document."

[11:30:00.0000] <Philip`>
but the normative requirement is just "There must not be more than one meta element with a charset attribute per document."

[11:30:01.0000] <erlehmann>
deane, putting block content into <p> *will* come back at you as soon as you try styling the mess.

[11:30:02.0000] <Philip`>
and it looks like that document would have two encoding declarations without violating that

[11:30:03.0000] <Philip`>
/me wonders if he's missing anything

[11:31:00.0000] <erlehmann>
Philip`, since both are synonyms, this must surely be wrong!

[11:31:01.0000] <zewt>
it's normal enough to specify the same thing in different ways for compatibility, so long as they don't have different values, though

[11:32:00.0000] <zewt>
similarly, having both a content-type http-equiv and a real Content-Type HTTP header

[11:32:01.0000] <Philip`>
"If the document contains a meta element with an http-equiv attribute in the Encoding declaration state, then the document must not contain a meta element with the charset attribute present."

[11:33:00.0000] <Philip`>
Ah, that's what I was missing

[11:33:01.0000] <erlehmann>
:3

[11:34:00.0000] <deane>
thanks for all your hard work, guys :) you're doing well

[11:36:00.0000] <Philip`>
http://bugzilla.validator.nu/show_bug.cgi?id=589 - ah, and that's the validator bug I encountered

[14:26:00.0000] <Smylers>
Philip`: I was surprised when that bug e-mailed me.

[14:27:00.0000] <Smylers>
I have no recollection of raising it, and even when I read you mentioning the issue on IRC earlier I didn't remember encountering it before.


2011-02-13
[19:00:00.0000] <mpilgrim>
gsnedders: http://gsnedders.html5.org/outliner/process.py gives a traceback upon uploading basically any HTML file

[19:01:00.0000] <mpilgrim>
i promised a guy last october that i would tell you, so i have now fulfilled my promise

[19:09:00.0000] <Dashiva>
Faster turnaround than most bug reporting systems

[19:13:00.0000] <gsnedders>
mpilgrim: Yeah, I've since last August or so about that bug. :)

[19:13:01.0000] <gsnedders>
*I've known

[19:14:00.0000] <zewt>
usual result of most bug reporting systems too, then :P

[19:16:00.0000] <zewt>
better than getting no response, then two years later getting a mass batch update saying "please re-test this bug from scratch or it'll be closed in a week", which seems to be the more common result of open trackers nowadays

[20:45:00.0000] <bga_>
http://www.bitcoin.org/smf/index.php?action=printpage;topic=252.0

[03:13:00.0000] <jgraham>
https://github.com/msporny/dna/

[03:15:00.0000] <annevk>
from DOM3Events

[03:15:01.0000] <Philip`>
https://github.com/msporny/dna/network

[03:15:02.0000] <annevk>
"

[03:15:03.0000] <annevk>
As the final step of the event dispatch, for reasons of backwards compatibility, the implementation must reset the event object's internal-propagation and default-action-prevention states. This ensures that an event object may be properly dispatched multiple times while also allowing to prevent the event objects propagation or default actions prior to the event dispatch."

[03:16:00.0000] <annevk>
shouldn't that happen before dispatching?

[03:16:01.0000] <annevk>
otherwise the defaultPrevented attribute would be affected

[03:16:02.0000] <annevk>
which seems like something you do not want happening

[03:16:03.0000] <annevk>
i was also wondering

[03:17:00.0000] <annevk>
if you dispatch an event from an event

[03:17:01.0000] <annevk>
when exactly do you get that event back in script

[03:18:00.0000] <annevk>
is "dispatching an event" a single atomic operation even though it can effect itself? (e.g. by removing event listeners)

[03:20:00.0000] <annevk>
nothing much in the "events loop" section about this

[03:20:01.0000] <annevk>
I guess I should write some code to figure it out

[03:25:00.0000] <annevk>
yeah

[03:25:01.0000] <annevk>
so http://software.hixie.ch/utilities/js/live-dom-viewer/saved/835 shows it is not an atomic operation

[03:25:02.0000] <annevk>
(once you click on the dots)

[03:26:00.0000] <annevk>
on the other hand, I guess it makes sense and does not require any special wording...

[03:31:00.0000] <annevk>
it's "simply" an atomic operation that invoke itself again

[03:31:01.0000] <annevk>
or something like that

[07:35:00.0000] <annevk>
back home, time to relax :)

[07:35:01.0000] <annevk>
and work on this event stuff some more I guess

[07:44:00.0000] <annevk>
even what is sort of defined in DOM3Events is not really implemented

[07:52:00.0000] <annevk>
Gecko throws for initEvent while that is not allowed

[07:52:01.0000] <annevk>
in Opera invoking initEvent for an event that is being dispatched calls stop propagation somehow on it

[07:52:02.0000] <annevk>
or something like that

[07:53:00.0000] <annevk>
I think I will try to go for something "sensible" instead...

[07:54:00.0000] <annevk>
no modifications allowed while dispatching and no dispatching of an event that is already being dispatched

[07:54:01.0000] <annevk>
based on a "is dispatching flag"

[07:55:00.0000] <annevk>
I'll also make the change that allows the empty string as event name, makes everything simpler :)

[08:03:00.0000] <annevk>
btw, I had this sort of crazy idea for simpler event creation

[08:03:01.0000] <annevk>
overload createEvent

[08:03:02.0000] <annevk>
createEvent would accept an arbitrary number of arguments, and what they represent depends on the string passed to the first

[08:04:00.0000] <annevk>
so you could do e.g. document.createEvent("Event", "test", false, true)

[08:04:01.0000] <annevk>
first it creates the event and then calls initEvent with the remaining arguments

[08:04:02.0000] <annevk>
but maybe the first simplification should be to make initEvent arguments optional

[08:05:00.0000] <annevk>
so you don't have to pass false/false all the time if you don't want to

[08:16:00.0000] <annevk>
smaug____, you okay with shuffling the details of non-interoperable parts of DOM Events?

[08:17:00.0000] <annevk>
smaug____, trying to figure out how Events work for DOM Core and it seems DOM3Events does not really match reality when it comes to the finer details of event creation, initialization, and dispatching

[08:17:01.0000] <smaug____>
annevk: kind of busy with other things atm

[08:18:00.0000] <annevk>
I'll just carry on then and hope you have time to review it some day

[08:18:01.0000] <smaug____>
I could review later today or tomorrow

[08:19:00.0000] <annevk>
tomorrow during the day might be nice (you're still in Europe right?) that way I can help out and address issues directly

[08:20:00.0000] <smaug____>
still in Finland yes

[08:21:00.0000] <smaug____>
and tomorrow day should be ok

[08:22:00.0000] <annevk>
cool

[08:43:00.0000] <dglazkov|away>
text-overflow-mode: hidden

[08:55:00.0000] <annevk>
hmm

[08:56:00.0000] <annevk>
capture listeners also include AT_TARGET

[08:56:01.0000] <annevk>
so if you have a single listener attached for both capture and non-capture it'll fire twice during AT_TARGET

[09:06:00.0000] <annevk>
well, when the target happens to be the node you registered the listener on

[09:28:00.0000] <annevk>
hmm

[09:28:01.0000] <annevk>
if you say inherits

[09:28:02.0000] <annevk>
does that include indirect inheritance?

[09:29:00.0000] <annevk>
interface a : b

[09:29:01.0000] <annevk>
interface c : a

[09:29:02.0000] <annevk>
can you say that c inherits from b?

[09:29:03.0000] <annevk>
/me tries to define createEvent

[09:30:00.0000] <annevk>
/me is going with yes

[09:37:00.0000] <annevk>
hmm, in WebKit createEvent is case-sensitive

[09:37:01.0000] <annevk>
they do support "Events"

[09:37:02.0000] <annevk>
but not "events"

[09:38:00.0000] <annevk>
and "HTMLEvents" but not "htmlevents"

[09:38:01.0000] <annevk>
weird

[09:38:02.0000] <annevk>
I guess we can still make it case-sensitive then if someone really cared

[09:45:00.0000] <annevk>
hmm I guess before people review Ms2ger needs to come online and regen the spec

[09:47:00.0000] <annevk>
oh hey, dispatchEvent returns a boolean about canceled behavior; didn't even realize that but it matches the spec's model :)

[10:00:00.0000] <annevk>
teehee

[10:00:01.0000] <deane>
annevk: Hi, I'm using latest version of Opera for my irc client, real nice. Congratulations, You and the team have done a great job with the Opera browser, real nice, keep up the good work :)

[10:00:02.0000] <annevk>
preventDefault/defaultPrevented and the return value of dispatchEvent are quite the mess

[10:00:03.0000] <deane>
/me let's annevk get back to his work

[10:00:04.0000] <annevk>
deane, heh, thanks

[10:01:00.0000] <annevk>
I'm mostly playing around and writing down my conclusions :)

[10:02:00.0000] <annevk>
if you have a non-cancelable event

[10:02:01.0000] <annevk>
and you call preventDefault on it

[10:02:02.0000] <annevk>
and then you check defaultPrevented and the return value of dispatchEvent

[10:03:00.0000] <annevk>
in Opera: true / false

[10:03:01.0000] <annevk>
in WebKit: false / true

[10:03:02.0000] <annevk>
in Gecko: undefined / true

[10:03:03.0000] <annevk>
I was expecting false / false

[10:04:00.0000] <annevk>
I mean, if you can't prevent the default (it's non-cancelable), why would any of these indicate otherwise?

[10:04:01.0000] <nimbupani>
Annevk dont miss ur flight plotting prevent defaults!!!

[10:04:02.0000] <annevk>
heh, thanks, I'm already back :)

[10:04:03.0000] <nimbupani>
Wattttt oki

[10:05:00.0000] <annevk>
you can tell by the gap in the irc-logs when it was :)

[10:05:01.0000] <annevk>
jumps from 12 to 16 somewhere (OSL airport -> home)

[10:06:00.0000] <nimbupani>
Hahahahah not sure if its a good thing or bad thing

[10:06:01.0000] <nimbupani>
Imagine 4 months of such a gap

[10:06:02.0000] <annevk>
hehe, i'll find out soon enough

[10:06:03.0000] <nimbupani>
PANDEMONIUM

[10:07:00.0000] <annevk>
Pet Shop Boys!

[10:08:00.0000] <deane>
yeah, Pet Shop Boys are cool ;)

[10:13:00.0000] <nimbupani>
>_>

[10:15:00.0000] <deane>
annevk: so you don't get a username-style bug report with opera, it's just anonymous? https://bugs.opera.com/wizard/

[10:15:01.0000] <annevk>
yeah

[10:15:02.0000] <deane>
/me forgot the question mark :/

[10:15:03.0000] <annevk>
I think there's a volunteer who keeps public records of bugs people filed

[10:16:00.0000] <annevk>
and I can give you a status update most of the time, but it's not exactly ideal

[10:16:01.0000] <annevk>
(you get a bug number once you file a bug)

[10:17:00.0000] <deane>
sweet, just noticed something minor. I'll take a screen shot and file a report later today

[10:18:00.0000] <MikeSmith>
hmm, "If the document contains a meta element with an http-equiv attribute in the Encoding declaration state, then the document must not contain a meta element with the charset attribute present."

[10:21:00.0000] <MikeSmith>
that would seem to mean if a <meta charset> occurs in document order before a <meta http-equiv="content-type"…> encoding declaration, then the <meta charset> should be reported as an error

[10:21:01.0000] <MikeSmith>
which seems wrong

[10:22:00.0000] <MikeSmith>
UAs use the first one of those they find in document order, right?

[10:22:01.0000] <annevk>
it doesn't say anything about order there

[10:22:02.0000] <annevk>
it just says they're mutually exclusive

[10:23:00.0000] <MikeSmith>
yeah, I know it doesn't mention document order, but that's the case I care about

[10:24:00.0000] <annevk>
maybe it should be reworded that if either is present the other cannot be

[10:24:01.0000] <MikeSmith>
yeah

[10:25:00.0000] <annevk>
or maybe it should be phrased the other way around

[10:25:01.0000] <annevk>
to encourage people using <meta charset>

[10:25:02.0000] <MikeSmith>
yeah

[10:26:00.0000] <MikeSmith>
it also doesn't say its an error to have multiple instances of  <meta http-equiv="content-type"…> encoding declarations

[10:28:00.0000] <MikeSmith>
oh

[10:28:01.0000] <MikeSmith>
sweet

[10:28:02.0000] <MikeSmith>
http://dev.w3.org/html5/spec/semantics.html#character-encoding-declaration

[10:28:03.0000] <MikeSmith>
"There can only be one character encoding declaration in the document."

[10:28:04.0000] <MikeSmith>
hmm

[10:28:05.0000] <MikeSmith>
or maybe not

[10:29:00.0000] <MikeSmith>
that's not a normative statement

[10:29:01.0000] <MikeSmith>
which is exactly the point Philip` was making in http://bugzilla.validator.nu/show_bug.cgi?id=589#c1

[10:29:02.0000] <MikeSmith>
*sigh*

[10:31:00.0000] <MikeSmith>
hmm, but the spec does prefix the bulleted list that statement is in with "The following restrictions apply to character encoding declarations:"

[10:32:00.0000] <MikeSmith>
guess I should file a bug

[10:45:00.0000] <Philip`>
MikeSmith: If the spec says that if you have <meta charset> you mustn't have <meta content-type>, that doesn't imply the validator has to complain about the <meta content-type>

[10:46:00.0000] <Philip`>
The document as a whole is invalid and it's the validator's job to point out to authors how best to fix their document

[10:46:01.0000] <Philip`>
so I wouldn't think the spec needs to change its phrasing

[10:47:00.0000] <annevk>
damnit

[10:47:01.0000] <annevk>
why does <var> cause a link

[10:47:02.0000] <annevk>
/me summons Ms2ger

[10:48:00.0000] <AryehGregor>
<var> always causes a link unless you do <var title>.

[10:49:00.0000] <annevk>
that should really be disabled

[10:49:01.0000] <AryehGregor>
Yeah, not sure why you'd want <var> to link.

[10:50:00.0000] <annevk>
I defined the whole cancelable events in the way that makes most sense to me; given the non-interop I suspect this will be fine

[10:50:01.0000] <annevk>
I think I defined all of the basic interfaces now

[10:51:00.0000] <MikeSmith>
Philip`: so what would you suggest it should report?

[10:51:01.0000] <annevk>
guess I'll add CustomEvent as well

[10:52:00.0000] <annevk>
and then I guess is the rathole that is mutation events

[10:52:01.0000] <annevk>
and event loops if we are going to make them asynchronous

[10:52:02.0000] <MikeSmith>
Philip`: UAs use the first character encoding declaration they find and ignore the rest, right?

[10:53:00.0000] <MikeSmith>
hmm, I guess that's undefined

[10:54:00.0000] <Philip`>
MikeSmith: I guess it would ideally report a single error pointing to all the encoding declarations and say there should only be one and suggest using <meta charset="{whatever the parser's determined charset was}">

[10:54:01.0000] <MikeSmith>
heh

[10:55:00.0000] <MikeSmith>
"pointing to all the encoding declarations"

[10:55:01.0000] <MikeSmith>
thing is, we can't really do that

[10:56:00.0000] <Philip`>
It's not my problem if the validator's designed with the inflexible assumption of a 1:1 correspondence between errors and markup ranges :-)

[10:56:01.0000] <MikeSmith>
or we could but it would require creating a new mechanism for reporting multiple line numbers and column numbers in a single error message, just for this one case

[10:57:00.0000] <MikeSmith>
Philip`: it's not an assumption, it's a pragmatic design choice that works well for the vast majority of cases :)

[10:57:01.0000] <MikeSmith>
but point taken

[10:57:02.0000] <Philip`>
Browsers should use the first declaration - the parser handles meta elements and if the encoding's currently tentative it sets it to certain

[10:58:00.0000] <Philip`>
so it'll ignore subsequent declarations

[10:58:01.0000] <MikeSmith>
OK

[10:58:02.0000] <Philip`>
(I think)

[10:58:03.0000] <MikeSmith>
it not specified that way in the spec at least

[10:58:04.0000] <MikeSmith>
intentionally not, I would assume

[10:59:00.0000] <MikeSmith>
oh, or maybe it is

[10:59:01.0000] <Philip`>
See http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html / "A start tag whose tag name is "meta""

[10:59:02.0000] <MikeSmith>
I need to read the parsing algorithm

[10:59:03.0000] <MikeSmith>
yeah

[10:59:04.0000] <Philip`>
Kind of hard to find if you don't already know that's where the feature is defined :-(

[11:11:00.0000] <annevk>
defining CustomEvent took 20 min per Mercurial

[11:12:00.0000] <annevk>
but it still needs examples and green boxes and such

[11:12:01.0000] <annevk>
like everything else...

[11:15:00.0000] <annevk>
A, B, and C or D and E

[11:16:00.0000] <annevk>
the condition is true for ABC or ABDE

[11:16:01.0000] <annevk>
is the sentence correct?

[11:19:00.0000] <Dashiva>
That needs to be more than one sentence

[11:20:00.0000] <annevk>
A and B. As well as C or D and E

[11:20:01.0000] <annevk>
does that work?

[11:21:00.0000] <Hixie>
use a bulleted list

[11:21:01.0000] <Hixie>
with a nested list for the or

[11:23:00.0000] <annevk>
the sentence is

[11:23:01.0000] <annevk>
whose

[11:23:02.0000] <annevk>
<b>name</b> is <var>name</var>, <b>listener</b> is <var>listener</var>, and

[11:23:03.0000] <annevk>
<var>capture</var> is <b>capture</b> or <var>capture</var> is omitted and <b>capture</b> is false,

[11:24:00.0000] <annevk>
seems kind of overkill to go for a list

[11:25:00.0000] <annevk>
if Web IDL had some way to say what the default (if any) was for omitted arguments this prose would not be needed

[11:28:00.0000] <Dashiva>
There should definitely be an "and either"

[11:29:00.0000] <annevk>
made it consistent with what I have for addEventListener even though it seems somewhat overkill

[11:36:00.0000] <annevk>
tomorrow I'll introduce something that can replace "Firing a simple event named e" in HTML

[11:37:00.0000] <annevk>
because however early, I need some sleep :)

[12:19:00.0000] <AryehGregor>
So I've got a sort of working testharness.js version of my tests: http://dvcs.w3.org/hg/html/raw-file/tip/tests/submission/AryehGregor/reflection/reflection-onepage.html

[12:19:01.0000] <AryehGregor>
Actually not much slower than my original one.

[12:19:02.0000] <AryehGregor>
But it's not really using them as intended, I think.

[12:19:03.0000] <AryehGregor>
Like, I'm running tests conditionally.

[12:19:04.0000] <AryehGregor>
Oh well, it's a start.

[12:35:00.0000] <AryehGregor>
Hixie, it occurs to me that if execCommand() will be defined in the W3C's copy of HTML5 and normatively references DOM Range, DOM Range will need to be someplace in W3C space.

[12:36:00.0000] <AryehGregor>
Apparently that's happening, though, so no worries.

[12:36:01.0000] <Hixie>
i encourage you to not worry about w3c bureaucracy :-)

[12:36:02.0000] <Hixie>
if w3c cares, they'll fix it. if they don't, doesn't matter, we'll just spec it elsewhere.

[12:37:00.0000] <Hixie>
right now the html5 spec at w3c references html5.org for dom range

[12:37:01.0000] <AryehGregor>
Oh, and you get away with that.  No problem, then.

[12:39:00.0000] <Hixie>
the w3c copy is only important for patent protection issues, and we won't get that for a decade or so at the current rate anyway

[12:39:01.0000] <Hixie>
so...

[12:39:02.0000] <AryehGregor>
It's also important if you want Microsoft to pay attention, particularly to test suites submitted to the W3C HTML test suite vs. anywhere else.

[12:40:00.0000] <Hixie>
it's a myth that microsoft only pays attention to w3c (one that they are happy to have be believed)

[12:41:00.0000] <Hixie>
they'll implement whatever they need to implement to get interop with what their customers say they need

[12:41:01.0000] <Hixie>
e.g. microsoft's blogging software implements pingback, which is just a spec on hixie.ch

[12:42:00.0000] <Hixie>
similarly the IE team pays attention to the acid tests

[13:58:00.0000] <key>
hey guys, i've spent a few days trying to solve this issue and the ppl in #css/#html5 are stuck too.. maybe some html/css genius in here can do it: http://www.pastie.org/private/xo1w15miulgzf3ho9oya

[13:58:01.0000] <key>
basically i just need the sub menu lower and left aligned to the main menu regardless of which main menu LI the sub menu UL is attached to

[14:00:00.0000] <aho>
key, wrong channel

[14:00:01.0000] <key>
only douches in here?

[14:00:02.0000] <aho>
today's youth

[14:00:03.0000] <aho>
*shrug*

[14:00:04.0000] <zewt>
also yesterday's youth and tomorrow's youth

[14:01:00.0000] <aho>
:>

[14:01:01.0000] <zewt>
the only thing special about today's youth is they happen to be the ones you'll see ... today

[14:02:00.0000] <aho>
zewt, it was just an empty "get off my lawn" phrase. it was entirely meaningless :>

[14:03:00.0000] <zewt>
don't worry, i'm sitting on the porch shaking my fist at those damned kids too :P

[14:04:00.0000] <annevk>
so I'm still awake and apparently Ms2ger needs not be summoned to IRC for regenerating the spec

[14:04:01.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#events

[14:07:00.0000] <zewt>
seems sort of odd that "propagation flag" and "immediate propagation flag" seem more like "stop propagation flag" ... as if the values are reversed

[14:08:00.0000] <annevk>
hmm yeah

[14:08:01.0000] <annevk>
I wanted to shorten their length but that does not make it clearer indeed

[14:09:00.0000] <zewt>
just flip the booleans? maybe given their purpose that would be odd (since they would be inverted from "canceled flag")

[14:10:00.0000] <annevk>
no I am adding stop back in

[14:11:00.0000] <annevk>
you want to be in the list of acknowledgments as "zewt" or some other name?

[14:11:01.0000] <zewt>
The timeStamp attribute must be useless.

[14:11:02.0000] <zewt>
heh

[14:12:00.0000] <zewt>
Glenn Maynard

[14:12:01.0000] <annevk>
aha

[14:13:00.0000] <zewt>
i've wished the timeStamp attribute worked in the past ... when doing things like emulating double-clicks from mouse (actually, touch) events

[14:13:01.0000] <zewt>
guess it's just too far outside of browser event models to be able to do that reasonably

[14:16:00.0000] <annevk>
I think the way it works in Gecko enables that

[14:16:01.0000] <annevk>
not really sure how to define it yet

[14:16:02.0000] <annevk>
I wouldn't mind dropping it or having it always return 0 like in Opera, but that's not really the most useful

[14:29:00.0000] <zewt>
"Because createEvent() is located on the Document object it cannot be used by Web Workers." hmm ... although it clearly amtters less in workers (without the DOM, the more complex uses of events go away anyway), it does seem like an odd missing piece, given that events are still used; no particular use cases come to mind off-hand, though (possibly just due to not having used workers in complex enough ways yet)

[14:30:00.0000] <Yuhong>
Now that WHATWG HTML is versionless, the W3C copy is the only thing that can be referred to as "HTML5", ending confusion.

[14:30:01.0000] <Yuhong>
And making the relationship between the two very clear.

[14:32:00.0000] <Yuhong>
annevk: It is sad that your blog don't have comments.

[14:33:00.0000] <annevk>
I saw your tweet... I don't really want to have to maintain such discussions anymore.

[14:34:00.0000] <annevk>
But this is the web, you do not have to be constrained with what I am offering on my site ;)

[14:35:00.0000] <Yuhong>
annevk: Except that as it happened, IE9 went RC around that time.

[14:40:00.0000] <Yuhong>
annevk: To summarize: IE stagnated for five years, then it took another five years for it to finally implement XHTML!

[14:40:01.0000] <zewt>
am I the only person that keeps trying to define javascript functions as "var func() { }"? it's an instinct I just can't override, heh

[14:49:00.0000] <zewt>
"The list of event listeners can be manipulated while event listeners are being run." a bit vague--will the particulars of that be specified?

[14:50:00.0000] <annevk>
zewt, it's just a statement of fact

[14:50:01.0000] <annevk>
addEventListener and removeEventListener already define how the list is manipulated

[14:50:02.0000] <annevk>
the rest is just going through a live list

[14:52:00.0000] <zewt>
well, it seems that event handlers added during dispatch aren't being called, but ones removed also aren't (that is, removals during invocation are honored, but additions aren't) ... trying to see if that behavior is defined by the spec

[14:53:00.0000] <annevk>
that is not

[14:55:00.0000] <annevk>
hmm yeah

[14:55:01.0000] <zewt>
it could be: define step 4 of invocation as operating on a copy of the event handler list, and have removeEventListener mark the event listener unused (for example, set its name to null, so 4.3 always terminates)

[14:57:00.0000] <annevk>
you can dispatch empty string events but yeah, something like that might work

[14:58:00.0000] <zewt>
that would also avoid any ambiguity if, for example, an event handler is removed from the list then re-added in the same event

[15:00:00.0000] <annevk>
it would not be triggered then right?

[15:00:01.0000] <zewt>
right

[15:00:02.0000] <zewt>
since logically it's a new listener

[15:00:03.0000] <annevk>
so for nodes this is per "current target" I assume?

[15:01:00.0000] <annevk>
that is, a current target can manipulate the listeners for the next current target as pleased

[15:01:01.0000] <zewt>
right ... i havn't checked that part of browser behavior though

[15:04:00.0000] <zewt>
http://pastebin.com/kzscSk01 clicking text alerts in Opera but not FF3.6 or Chrome

[15:06:00.0000] <zewt>
http://pastebin.com/ZTRw2iga same results when removing and adding in the same handler

[15:06:01.0000] <annevk>
so Opera has the DOM3Events behavior of having a static copy

[15:07:00.0000] <annevk>
whoa, so adding it again marks it "used" or some such?

[15:07:01.0000] <annevk>
in Gecko/WebKit

[15:07:02.0000] <annevk>
hmm, I should try sleeping again and maybe play with IEs implementation tomorrow

[15:08:00.0000] <zewt>
i imagine that removing it marks the listener as "dead", and adding it later adds an entirely new listener

[15:08:01.0000] <annevk>
oh right, see, I'm tired

[15:08:02.0000] <zewt>
which was what I was going for above with the notion of clearing "name" (which was just a shorthand hack, of course, should be a named property or something in a spec)

[15:10:00.0000] <annevk>
fun stuff

[15:13:00.0000] <zewt>
re: manipulating listeners the next ancestor target, yes in all of those browsers: http://pastebin.com/NEdKDMHT

[15:13:01.0000] <annevk>
thanks man

[15:14:00.0000] <annevk>
I wonder if Opera has any bugs filed against it for having a completely static list

[15:14:01.0000] <annevk>
and what IE does

[15:15:00.0000] <annevk>
not having to add a "dead flag" might be nice

[15:15:01.0000] <zewt>
did you do the work boiling down the dispatch/invocation rules? because that's pretty well done

[15:15:02.0000] <annevk>
anyway, sleep

[15:15:03.0000] <annevk>
yeah, you can see how i went about it here: https://bitbucket.org/ms2ger/web-dom-core

[15:16:00.0000] <zewt>
later, go to sleep before you get dragged into something else, that's what IRC does :P

[15:16:01.0000] <annevk>
heh :)


2011-02-14
[17:27:00.0000] <zewt>
heh, i didn't notice on first (or third) reading the distinction between "the list of scripts that will execute in order as soon as possible" and the "set of scripts that will execute as soon as possible"

[17:58:00.0000] <zewt>
oh, apparently FF4 now does Opera's alerts-modal-to-the-tab ... finally

[23:42:00.0000] <zcorpan>
good morning whatwg

[23:44:00.0000] <annevk>
mornings

[00:02:00.0000] <zcorpan>
/me had a little vacation last week

[00:03:00.0000] <annevk>
nice

[00:56:00.0000] <Hixie>
oops, forgot to write a ccp for 127

[01:00:00.0000] <annevk>
not so much happened last week

[01:02:00.0000] <zewt>
are there any major caching bugs with web workers and opera 11.01? (reloading the page doesn't seem to be reloading scripts)

[01:03:00.0000] <Hixie>
opera in general is aggressive in caching by default

[01:03:01.0000] <Hixie>
you can change the settings in the prefs

[01:03:02.0000] <zewt>
yeah but hitting ^R on a page should always revalidate

[01:03:03.0000] <Hixie>
if it doesn't, probably a bug then :-)

[01:04:00.0000] <zewt>
had to play foo.js?1 games to trick it, heh

[01:07:00.0000] <annevk>
so btw

[01:07:01.0000] <annevk>
if anyone has something they want me to include in WHATWG Weekly, say so

[01:09:00.0000] <zcorpan>
annevk: ah, a Weekly, that means i don't need to read my emails, right? :)

[01:10:00.0000] <annevk>
I wish I could summarize them all :)

[01:10:01.0000] <zewt>
no you don't :)

[01:14:00.0000] <Hixie>
btw if anyone wants to object to -148, please do so, as i'm not going to

[01:14:01.0000] <Hixie>
(my plan is to do whatever change julian wants and update the spec a year or two from now to match whatever implementations do then)

[01:17:00.0000] <Hixie>
nobody else other than me and tab has objections to the proposal to allow <a role=progressbar>? :-P http://www.w3.org/2002/09/wbs/40318/issue-129-objection-poll/results

[01:18:00.0000] <annevk>
I haven't taken the time yet, but it seems I should given the closing date

[01:19:00.0000] <Hixie>
othermaciej: what's the deadline for CCPs for -144? The issue-status page claims the status is the CCP phase but there's no deadline listed

[01:19:01.0000] <othermaciej>
checking...

[01:19:02.0000] <othermaciej>
Hixie: the next step is for the chairs to announce a call for alternate proposals

[01:20:00.0000] <othermaciej>
so no action for the WG yet

[01:20:01.0000] <Hixie>
ah ok

[01:20:02.0000] <Hixie>
my bad, misread it

[01:20:03.0000] <othermaciej>
(though of course it's always fine to submit early)

[01:21:00.0000] <Hixie>
no offence, but these CCPs are wasting plenty enough of my time already without my writing them before i've given everyone else every chance to either retract their objection or provide their own counter-objection

[01:22:00.0000] <othermaciej>
none taken

[02:09:00.0000] <annevk>
http://blog.whatwg.org/weekly-synchronized-media

[02:12:00.0000] <annevk>
it's a little short as I'm not feeling very inspired today

[02:20:00.0000] <annevk>
/me fires up Windows 7

[02:20:01.0000] <zewt>
my condolences

[02:21:00.0000] <annevk>
it's boxed :)

[02:21:01.0000] <zewt>
it's not much of an improvement to step on a pile of poo if it happens to be in a box

[02:24:00.0000] <annevk>
isn't the whole idea of virtual boxing that such a thing cannot happen? :)

[02:29:00.0000] <jgraham>
Maybe "fires up" === douses in petrol and conflagrates it

[02:32:00.0000] <annevk>
so only IE9 has DOM Events support?

[02:32:01.0000] <jgraham>
Only IE9 has addEventListener at least

[02:33:00.0000] <jgraham>
/me wonders how the "proposal for seperating script download and execution" thread missed out on WHATWG weekly. But maybe it was last week too

[02:35:00.0000] <annevk>
it was already there

[02:38:00.0000] <annevk>
"restart your computer"

[02:38:01.0000] <annevk>
omg this is slow

[02:40:00.0000] <jgraham>
Installing IE9?

[02:41:00.0000] <jgraham>
Yeah, I managed to install 3.5 other browsers in the time it took to install IE9

[02:45:00.0000] <annevk>
zewt, IE/Opera have a static list; Gecko/WebKit allow removal of listeners

[02:45:01.0000] <annevk>
zewt, guess I'll go with IE/Opera as DOM3Events says that too

[02:46:00.0000] <zewt>
hmm

[02:49:00.0000] <zewt>
event listeners added to the current event target during the event aren't fired in opera, at least, assuming my quick test is correct

[02:50:00.0000] <zewt>
probably in all browsers, for that case

[02:50:01.0000] <zewt>
at least that simplifies it--eg. static list operating on a copy doesn't need any special "dead handler" handling

[02:51:00.0000] <annevk>
indeed

[03:04:00.0000] <annevk>
should preventDefault() only work while the dispatch flag is set?

[03:05:00.0000] <annevk>
I guess it does not really matter

[03:07:00.0000] <zewt>
hmm, it matters if you call preventDefault before dispatching the event, right? particularly since you have dom-core resetting the cancelled flag at the start of dispatching, where dom-3 does it at the end ... if you can preventDefault while it's not being dispatched, that difference would be exposed

[03:07:01.0000] <annevk>
Hixie, you still around?

[03:08:00.0000] <annevk>
Hixie, it seems that multiple file upload requires breaking the multipart/form-data standard further: http://my.cn.opera.com/community/forums/topic.dml?id=841672&page=1

[03:08:01.0000] <annevk>
zewt, yeah only then is when it matters

[03:09:00.0000] <annevk>
zewt, and I was wondering whether initEvent should reset it if we allow for it

[03:09:01.0000] <annevk>
zewt, it seems WebKit allows it and does not reset it when you invoke initEvent

[03:09:02.0000] <annevk>
and that works for me

[03:15:00.0000] <zcorpan>
are you guys speccing dom events?

[03:18:00.0000] <zewt>
what about how the cancel flag reset difference is exposed--any way to reconcile that?

[03:20:00.0000] <zewt>
or is it just a question of getting the dom spec adjusted too

[03:23:00.0000] <annevk>
zcorpan, it's pretty much done

[03:23:01.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#events

[03:23:02.0000] <annevk>
plus fixes in https://bitbucket.org/ms2ger/web-dom-core

[03:23:03.0000] <zcorpan>
nice!

[03:23:04.0000] <annevk>
that await Ms2ger regen skills

[03:24:00.0000] <zcorpan>
"The timeStamp attribute must be useless. Come on!" lol

[03:28:00.0000] <zcorpan>
an order of magnitude better than dom3 events

[03:30:00.0000] <annevk>
thanks, that was the goal :)

[03:30:01.0000] <zcorpan>
annevk: i guess the Historical section needs some new stuff now

[03:31:00.0000] <annevk>
yeah, there's a comment just below the Events heading with some info

[03:31:01.0000] <annevk>
I did update Goals to make more sense

[03:32:00.0000] <annevk>
I actually want to remove Historical at some point but for now I suppose it should be kept

[03:33:00.0000] <zcorpan>
annevk: i asked for event interfaces to become constructors at some point, for easier creation of events and to allow event creation in workers

[03:34:00.0000] <annevk>
I know, but I don't really like it

[03:34:01.0000] <annevk>
and it's not too hard to create an event

[03:35:00.0000] <zcorpan>
it's pretty hard in workers :)

[03:35:01.0000] <annevk>
I did think of allowing e.g. document.createEvent("customevent", "teehee", false, false, {"data":"teehee"}) as some kind of create and initialize shortcut

[03:36:00.0000] <annevk>
Web Workers could define a createEvent event method that worked identical to document.createEvent()

[03:36:01.0000] <annevk>
it's not very hard

[03:36:02.0000] <annevk>
works*

[03:36:03.0000] <annevk>
if people actually care about synthetic events there

[03:37:00.0000] <zcorpan>
true

[03:37:01.0000] <annevk>
zcorpan, I did make initEvent arguments optional

[03:37:02.0000] <zcorpan>
yep

[03:37:03.0000] <jgraham>
Creating an event is super hard

[03:37:04.0000] <annevk>
so now you can do e = document.createEvent("event"); e.initEvent("teehee") and bubble/cancelable default to their initial values

[03:38:00.0000] <annevk>
jgraham, with one method call you have an event you can use

[03:38:01.0000] <annevk>
jgraham, with another you can set its name

[03:38:02.0000] <jgraham>
Well that sounds like one too many already

[03:38:03.0000] <zewt>
making dom events seems less important in workers, but it does seem sort of like the one little piece that's not there

[03:39:00.0000] <annevk>
well, people want DOM access in workers

[03:39:01.0000] <zewt>
(and I probably only see it as less important since I havn't hit any use cases for it yet--and that's probably just because I havn't used workers much yet)

[03:39:02.0000] <annevk>
if that is coming having a separate event constructor is not needed

[03:39:03.0000] <jgraham>
You can't have DOM access in workers…

[03:39:04.0000] <zcorpan>
foo.dispatchEvent(new Event('bar')); seems a lot nicer than var e = document.createEvent('event'); e.initEvent('bar'); foo.dispatchEvent(e);

[03:39:05.0000] <zewt>
you can have narrow, carefully-defined parts of the DOM API, though

[03:39:06.0000] <annevk>
with separate processes you can

[03:40:00.0000] <jgraham>
Well maybe

[03:40:01.0000] <zcorpan>
annevk: why don't you like constructor?

[03:40:02.0000] <annevk>
zcorpan, with my idea you could do foo.dispatchEvent(document.createEvent("event", "bar"))

[03:40:03.0000] <jgraham>
But I think gating features on mjor architectural change in browsers is not a good idea

[03:40:04.0000] <zcorpan>
annevk: ah

[03:40:05.0000] <annevk>
zcorpan, quite a bit of complexity for making a niche feature easier to use

[03:40:06.0000] <zcorpan>
annevk: wfm

[03:40:07.0000] <jgraham>
/me likes zcorpan's syntax better

[03:41:00.0000] <jgraham>
But then we should also make Element et. al. constructors

[03:41:01.0000] <annevk>
jgraham, it's not really gating the feature on that, in general there's not really demand for the feature in the first place

[03:41:02.0000] <zcorpan>
let's not :)

[03:41:03.0000] <jgraham>
The design of DOM with all the factory functions is just annoying

[03:41:04.0000] <zcorpan>
new HTMLMediaElement('div'); woot

[03:42:00.0000] <jgraham>
zcorpan: What makes you think that would work?

[03:42:01.0000] <annevk>
jgraham, write a library that abstracts it away :)

[03:42:02.0000] <jgraham>
annevk: Well there are alreasy libraries

[03:42:03.0000] <zcorpan>
jgraham: what's your proposal?

[03:42:04.0000] <jgraham>
Doesn't mean that DOM ought to suck

[03:43:00.0000] <annevk>
jgraham, well it does and making it vastly more complex is not going to make it suck less :)

[03:43:01.0000] <jgraham>
zcorpan: I guess it would have to throw if you tried to createelement an element that didn't implement the interface, or something

[03:44:00.0000] <jgraham>
In general having one interface per element would have been nice

[03:44:01.0000] <jgraham>
s/createelement/construct/

[03:44:02.0000] <jgraham>
Anyway, this should still work for events

[03:45:00.0000] <zcorpan>
jgraham: with constructors for elements you need to remember both the interface name and the element, which seems annoying, but already the case for events

[03:45:01.0000] <jgraham>
zcorpan: Right, it is less good for elements because DOM wasn't designed to make it work

[03:46:00.0000] <jgraham>
being able to do new HTMLVideoElement() would have been fine

[03:46:01.0000] <annevk>
I think most people don't really care about this so much

[03:46:02.0000] <annevk>
it's more how setting attributes and such is a pain, or content

[03:46:03.0000] <jgraham>
Probably not because they probably use jQuery because DOM sucks so much

[03:46:04.0000] <annevk>
they use innerHTML :)

[03:47:00.0000] <jgraham>
They use jQuery which uses innerHTML

[03:47:01.0000] <annevk>
anyway, I'm not gonna add features for now :)

[03:47:02.0000] <annevk>
but I would welcome review and tests of what is there

[03:48:00.0000] <zcorpan>
seems like a good plan to start with removing features

[03:48:01.0000] <annevk>
apart from the hasFeature design I have not killed anything I think

[03:48:02.0000] <annevk>
well

[03:48:03.0000] <annevk>
EventException is gone

[03:49:00.0000] <annevk>
and .type restrictions are gone

[03:49:01.0000] <annevk>
stopImmediatePropagation could be removed, but it seems somewhat useful

[03:50:00.0000] <annevk>
same for defaultPrevented

[03:50:01.0000] <zewt>
like i mentioned the other day, i've definitely hit at least one case where it would have helped

[03:50:02.0000] <annevk>
I want to add the "event handler attribute" model

[03:50:03.0000] <annevk>
I think

[03:51:00.0000] <annevk>
though since nothing needs it I'm not a 100% sure it's appropriate

[03:51:01.0000] <annevk>
but it seems that everything that defines an object that inherits from EventTarget wants them

[03:51:02.0000] <annevk>
so from that perspective...

[04:02:00.0000] <zcorpan>
annevk: what are your thoughts on cssom and http://www.w3.org/Bugs/Public/show_bug.cgi?id=11955 ?

[04:04:00.0000] <annevk>
I'm not sure what he means with "lots"

[04:05:00.0000] <annevk>
he's right about pointer-events, but that should be disabled anyway for cross-origin images

[04:07:00.0000] <zcorpan>
can pointer-events be disabled for cross-origin fonts too then?

[04:08:00.0000] <annevk>
click -> text -> drawn using same-origin font ? path : otherpath

[04:08:01.0000] <annevk>
it seems somewhat logical that it can

[04:08:02.0000] <annevk>
but I don't know for sure

[06:19:00.0000] <hsivonen>
Hixie: thanks for WONTFIXing http://www.w3.org/Bugs/Public/show_bug.cgi?id=11427

[06:19:01.0000] <hsivonen>
(the xml:id thing)

[06:22:00.0000] <Peter`>
Hm. The charter extension mail on public-html says "There is a new a target date for Recommendation of mid-2014."

[06:22:01.0000] <hsivonen>
good luck getting two interoperable impls. by then

[06:24:00.0000] <jgraham>
If we have interoperable implementations by then, the testsuite wasn't good enough

[06:27:00.0000] <annevk>
not to worry, it can be extended again

[06:29:00.0000] <annevk>
"Therefore, to fulfill the W3C HTML Working Group's mission, W3C Director Tim Berners-Lee encourages the participants to begin discussion of requirements for future versions of HTML after HTML5 reaches Last Call."

[06:29:01.0000] <annevk>
http://www.w3.org/2011/02/htmlwg-pr.html

[06:30:00.0000] <Philip`>
Maybe the Rec requirements will be relaxed before 2014, so that they're not insanely impossible to reach without cheating

[06:30:01.0000] <annevk>
I sense "stable standard" must be some play on "living standard" :)

[06:30:02.0000] <hsivonen>
stable as in dead compared to living?

[06:32:00.0000] <annevk>
They also gave up marking HTML5 up as abbreviation, but they are still doing it for CSS and such

[06:33:00.0000] <annevk>
How they defend "stable" is full of bullshit though.

[06:34:00.0000] <annevk>
At least, hardly any of the standards W3C has produced to date that targeted browsers have been stable in the way they describe.

[06:35:00.0000] <annevk>
DOM Core, DOM Events, HTML4, CSS2, CSS1, DOM HTML, XML, DOM Style, etc. all have been substantially revised over the years.

[06:42:00.0000] <zcorpan>
http://www.w3.org/html/wiki/FAQs says Open Web Platform is the new HTML5

[06:42:01.0000] <annevk>
"Starting in March, W3C will dedicate new staff to drive development of an HTML5 test suite."

[06:43:00.0000] <hsivonen>
zcorpan: I thought the Open Web Platform was the *old* HTML5 while Dion Almaer, Ben Galbraith and Brad Neuberg were still running that evangelism branch at Google

[06:56:00.0000] <zcorpan>
that faq talks a lot about <video>

[06:57:00.0000] <jgraham>
testsuite development++

[07:00:00.0000] <hsivonen>
whoa. I'm lagging behind in email. How did the rechartering happen without epic political drama? does HTML5 now have so much brand clout that haters were too shy to hate?

[07:01:00.0000] <hsivonen>
/me hasn't inspected what went down in Member space

[07:01:01.0000] <annevk>
hsivonen, extensions do not have to be discussed

[07:01:02.0000] <annevk>
hsivonen, just an agreement between W3C Team and Chairs

[07:01:03.0000] <hsivonen>
annevk: I see

[08:32:00.0000] <TabAtkins>
jgraham: FWIW, we're trying to make the DOM run on constructors instead of factory functions.

[08:32:01.0000] <jgraham>
TabAtkins: "We"?

[08:33:00.0000] <TabAtkins>
Chrome.

[08:33:01.0000] <jgraham>
Um, OK. In what way?

[08:33:02.0000] <TabAtkins>
In that "new HTMLPElement()" should work, and be subclassable.

[08:34:00.0000] <jgraham>
You are planning to expose this to web content?

[08:34:01.0000] <annevk>
Larry Masinter suggests using Wikipedia for registries over on www-tag

[08:34:02.0000] <jgraham>
Interesting…

[08:34:03.0000] <annevk>
wfm

[08:34:04.0000] <TabAtkins>
Once we get it working, yes.

[08:34:05.0000] <jgraham>
new HTMLMediaElement("div") -> ?

[08:34:06.0000] <jgraham>
Or do you have one interface per element?

[08:34:07.0000] <TabAtkins>
The latter, presumably.

[08:34:08.0000] <jgraham>
s/interface/constructor/

[08:35:00.0000] <TabAtkins>
This is still in a handwavey stage in terms of details.

[08:35:01.0000] <jgraham>
OK

[08:35:02.0000] <TabAtkins>
But we're poking at V8 to see how we can do this and allow subclassing like a normal JS object.

[08:35:03.0000] <TabAtkins>
While still wiring up the appropriate binding magic on the back-end.

[08:36:00.0000] <jgraham>
subclassing === function MyP(){}; MyP.prototype = HTMLPElement?

[08:36:01.0000] <TabAtkins>
Yes.

[08:36:02.0000] <TabAtkins>
(I see no reason not to use established terminology just because we use a different model of OO.)

[08:37:00.0000] <jgraham>
So, obviosuly I like the idea, but why are you doing this?

[08:37:01.0000] <TabAtkins>
Because factory functions are ugly, and DOM objects aren't subclassable.

[08:37:02.0000] <TabAtkins>
(This ties into the component model stuff we're doing.)

[08:37:03.0000] <jgraham>
(the inheritance thing seems like it might encourage dubious design patterns like putting custom functions on built-in objects)

[08:42:00.0000] <Philip`>
annevk: That'd work until someone deletes the registry because it's original research

[08:42:01.0000] <TabAtkins>
This is, of course, what the microformats wiki is for.

[08:45:00.0000] <annevk>
there's a lot of registries

[08:45:01.0000] <annevk>
I doubt microformats would want to host URL schemes

[08:46:00.0000] <TabAtkins>
Ask tantek.  He's been sanguine about it before, I believe.

[08:59:00.0000] <TabAtkins>
How do you create an SVG image with just an aspect ratio, not an intrinsic width/height?

[09:02:00.0000] <annevk>
only setting viewBox="" ?

[09:02:01.0000] <annevk>
or is the intrinsic width/height 100%/100% then?

[09:02:02.0000] <TabAtkins>
Is that how you do it?  I don't understand the relationship between width/height/viewBox.

[09:02:03.0000] <annevk>
I had a hard time figuring that out in the SVG spec last time I played with all that

[09:04:00.0000] <wilhelm>
I failed last time I tried. img { width:90%; } solved my problem, though.

[09:05:00.0000] <TabAtkins>
That doesn't help when you're using SVG in list-style-image.

[09:09:00.0000] <erlehmann>
Hixie, is “The message's content type was not explicitly allowed” referring to application/pgp-signature attachments or a sniffing error on part of the web server? (fun fact: the message contained the string SRT)

[09:10:00.0000] <TabAtkins>
annevk: Okay, you're right.  You can leave width/height alone and just set a viewbox to establish a coordinate system, then use one of the uniform-scaling preserveAspectRatio values.

[09:13:00.0000] <shepazu>
TabAtkins: annevk got it right

[09:13:01.0000] <TabAtkins>
shepazu: Yup, got it.  Was just making sure I was right before I corrected a dude.

[09:15:00.0000] <annevk>
I wonder where I left my tests for this

[09:16:00.0000] <TabAtkins>
Ugh, I hate talking to Alan Gresley.  The dude runs a css tutorial site, but he is usually *completely* wrong about everything.  Somehow he manages to form a uniquely wrong understanding of technical topics that I care about.

[09:39:00.0000] <MikeSmith>
http://twitter.com/#!/__DavidFlanagan/status/37204148751433728 "I couldn't write #jstdg6 without the specification writers who document how the web really works. Let's send them some ♥ today!"

[09:40:00.0000] <Philip`>
Yeah, let's send every WHATWG member a bodily organ

[09:41:00.0000] <MikeSmith>
heh

[09:43:00.0000] <nimbupani>
omg are u all thanked yet? its #thankaspecwriterday https://twitter.com/html5/status/37205058638585856

[09:43:01.0000] <jgraham>
Philip`: I recommend slow braising of your gift for maximum tenderness

[09:44:00.0000] <jgraham>
For example http://www.channel4.com/food/recipes/chefs/hugh-fearnley-whittingstall/devilled-hearts-recipe_p_1.html

[09:44:01.0000] <jgraham>
Although I wonder if I have ever actually eaten heart…

[09:49:00.0000] <TabAtkins>
jgraham: Heart's pretty good.

[10:15:00.0000] <jgraham>
TabAtkins: I would try it if I could find a decent supplier of meat here

[10:15:01.0000] <jgraham>
(well there is one but it is like >20km away so not a regular trip)

[10:16:00.0000] <jgraham>
(and I don't recall them having much offal)

[10:35:00.0000] <TabAtkins>
Dammit, Facebook, you distracted me into forgetting why I had CSS2.1 up.

[10:54:00.0000] <Hixie>
annevk: not sure what needs changing based on that thread

[10:56:00.0000] <Hixie>
i wonder what "broad interoperability" means

[10:57:00.0000] <Philip`>
Maybe it's the opposite of deep interoperability

[10:57:01.0000] <Hixie>
that's kinda what i assume

[10:57:02.0000] <Philip`>
so everyone has to implement all the features but don't worry too much about the details because they'd take forever

[10:57:03.0000] <Hixie>
dunno how else we'll be reaching it by 2014

[10:59:00.0000] <Hixie>
annevk: nm i see the bug

[11:00:00.0000] <Hixie>
annevk: though i'm not sure <input type=file multiple> counts as a single form field from the perspective of the rfc, so technically i don't think this is a violation

[11:23:00.0000] <TabAtkins>
Hixie: Regarding the behavior of <style scoped> and @-rules, should a @font-face defined in a scoped stylesheet be available for use in a scoped stylesheet of a descendant?

[11:24:00.0000] <TabAtkins>
I think the answer is yes, but I'm not 100% sure from the definition in HTML.

[11:25:00.0000] <Hixie>
"For scoped CSS resources, the effect of @-rules must be scoped to the scoped sheet and its subresources", so no

[11:25:01.0000] <TabAtkins>
Oh, ok.

[11:25:02.0000] <TabAtkins>
Hmm.  I guess that's okay.

[11:28:00.0000] <Hixie>
the theory is that a further scoped stylesheet is likely for a nested syndicated item of content, and you wouldn't want to afflict your declarations on third-party content

[11:28:01.0000] <TabAtkins>
Ah, good point.

[12:16:00.0000] <erlehmann>
anyone knowing how this is gonna be fixed? https://grepular.com/Abusing_HTTP_Status_Codes_to_Expose_Private_Information

[12:17:00.0000] <Ms2ger>
There's been ideas

[12:17:01.0000] <othermaciej>
break on error for cross-site loads seems like the most likely possibility

[12:27:00.0000] <benschwarz>
Hixie, resize the browser on the dev spec (narrow)

[12:28:00.0000] <Hixie>
neat

[12:28:01.0000] <Hixie>
and the appcache stuff is awesome btw

[12:28:02.0000] <Hixie>
so freaking fast

[12:28:03.0000] <benschwarz>
:)

[12:28:04.0000] <benschwarz>
almost there Hixie…

[12:28:05.0000] <Hixie>
wasn't sure what the "syncing..." thing was but i guess that's appcache also?

[12:29:00.0000] <benschwarz>
yeah

[12:29:01.0000] <benschwarz>
Hixie check it in chrome

[12:29:02.0000] <benschwarz>
it has a progress percentage

[12:29:03.0000] <Hixie>
that's what i was using

[12:30:00.0000] <benschwarz>
mobile safari doesn't support the progress event very much :/

[12:30:01.0000] <Hixie>
i thought it was maybe syncing the search index, but that seemed to be a big download for just searching the toc

[12:30:02.0000] <Hixie>
maybe it should say "updating cache" or some such

[12:30:03.0000] <benschwarz>
Hixie, perhaps yeah, the label is wrong

[12:30:04.0000] <Hixie>
dunno what normal people would understand :-)

[12:31:00.0000] <Hixie>
i'm obviously not the right person to target for this :-)

[12:31:01.0000] <benschwarz>
these 'normal people' are web nerds

[12:32:00.0000] <benschwarz>
Hixie the double refresh appcache thing is really annoying though

[12:33:00.0000] <Hixie>
double refresh?

[12:37:00.0000] <benschwarz>
Hixie to clear the appcache / see the changes once synced

[12:37:01.0000] <benschwarz>
like what happened to you…

[12:37:02.0000] <benschwarz>
Hixie before I dive off to work, I wanted you to see http://germanforblack.com/articles/taking-the-web-back

[12:37:03.0000] <Hixie>
oh that's just a matter of making sure you wait for it to download and then reloading

[12:37:04.0000] <Hixie>
we could have it put up a little banner that says "updates ready, click here to reaload" if you want

[12:39:00.0000] <Hixie>
benschwarz: looks good

[13:03:00.0000] <TabAtkins>
jgraham: You don't have a butcher nearby?

[13:04:00.0000] <Hixie>
argument in favour of turning the web from using javascript to using bytecode as the basic language that browsers execute:

[13:04:01.0000] <Hixie>
> Bytecode contains no unnecessary bytes. No spaces, no line-endings, no tabs. Only opcodes that do precisely one thing, and only that.

[13:05:00.0000] <Ms2ger>
Eh?

[13:05:01.0000] <Hixie>
indeed

[13:06:00.0000] <Hixie>
see bytecode has no whitespace so there are going to be fewer bugs

[13:06:01.0000] <Hixie>
/me nods encouragingly

[13:06:02.0000] <zewt>
because opcodes in dynamic languages don't ever do more than one thing (err)

[13:06:03.0000] <Ms2ger>
I see

[13:06:04.0000] <bfrohs>
Is THAT how that works? hahah

[13:06:05.0000] <TabAtkins>
Was there more context that suggests this meant "less bugs"?

[13:06:06.0000] <Hixie>
yeah, long e-mail

[13:06:07.0000] <TabAtkins>
Or was it just an argument that bytecode is smaller?

[13:06:08.0000] <Hixie>
no, it was an argument that browser vendors wouldn't introduce as many bugs in their bytecode processor as they do in their JS processor

[13:07:00.0000] <TabAtkins>
Oh.  That's retarded.

[13:07:01.0000] <zewt>
heh

[13:07:02.0000] <Ms2ger>
How about we only allow certified programmers to publish on the web? Seems like a good way to prevent bugs

[13:07:03.0000] <Hixie>
dunno about retarded. Ignorant, though, yes.

[13:07:04.0000] <zewt>
as if most interop problems center around the JS engine

[13:07:05.0000] <zewt>
javascript is possibly the simplest, most obvious language in common use today

[13:08:00.0000] <Ms2ger>
zewt, I'm not sure JS implementers would agree with that ;)

[13:08:01.0000] <Ms2ger>
Hixie, surely bugs are only in old code, and not in new?

[13:08:02.0000] <zewt>
Ms2ger: language complexity and optimized runtime complexity are entirely different things :)

[13:09:00.0000] <Hixie>
another argument in that e-mail: "bytecode opcodes often translate 1-on-1 to target machine instructions"

[13:09:01.0000] <zewt>
haha

[13:09:02.0000] <Hixie>
/me is reminded of the latest "how i met your mother" episode ("oh, honey...")

[13:09:03.0000] <zewt>
who's trolling hixie, i wonder

[13:09:04.0000] <AryehGregor>
Everyone knows that native machine code has no bugs.

[13:10:00.0000] <Hixie>
bbiab, food time

[13:13:00.0000] <AryehGregor>
/me installs https://chrome.google.com/webstore/detail/nolijncfnkgaikbjbdaogikpmpbdcdef, awesome

[13:13:01.0000] <AryehGregor>
I've wanted this for a while.

[13:13:02.0000] <Philip`>
Hixie: Is this email from the PNaCl developers?

[13:13:03.0000] <TabAtkins>
AryehGregor: Ah, cool, didn't realize that was public yet.

[13:14:00.0000] <jgraham>
TabAtkins: No, the nearest proper butcher is 25km away

[13:15:00.0000] <TabAtkins>
jgraham: Move someplace better.

[13:15:01.0000] <jgraham>
TabAtkins: Tell Opera that :p

[13:15:02.0000] <AryehGregor>
A butcher as in someone who slaughters animals on-site?

[13:15:03.0000] <TabAtkins>
Opera: Move jgraham someplace better.

[13:15:04.0000] <TabAtkins>
AryehGregor: No, just someone who'll cut down an animal by request.

[13:15:05.0000] <AryehGregor>
Oh, so you give them the animal to slaughter?

[13:15:06.0000] <TabAtkins>
I've never seen a butcher who actually does the killing themselves.

[13:16:00.0000] <AryehGregor>
Or what?

[13:16:01.0000] <AryehGregor>
/me is confused

[13:16:02.0000] <jgraham>
AryehGregor: Abatoirs do the slaughtering

[13:16:03.0000] <AryehGregor>
In my experience, "butcher" is more or less interchangeable with "meat-seller".

[13:16:04.0000] <TabAtkins>
...No, a butcher has a bunch of (dead) animals, and they'll cut it down.

[13:16:05.0000] <jgraham>
Butchers cut up the carcass

[13:16:06.0000] <AryehGregor>
Oh, I see.

[13:16:07.0000] <AryehGregor>
My dictionary says it can mean both.

[13:16:08.0000] <TabAtkins>
Get a better dictionary.

[13:16:09.0000] <AryehGregor>
And an abattoir is a slaughterhouse, not a slaughterer.

[13:17:00.0000] <AryehGregor>
What does your dictionary say, then?

[13:17:01.0000] <TabAtkins>
I don't have one.

[13:17:02.0000] <jgraham>
Right, the people at the slaughterhouse don't have a special name afaik

[13:17:03.0000] <AryehGregor>
So you rely on what, making stuff up?

[13:17:04.0000] <AryehGregor>
"slaughterers"

[13:17:05.0000] <TabAtkins>
It's worked so far!

[13:17:06.0000] <TabAtkins>
All my definitions are cromulent.

[13:18:00.0000] <jgraham>
Well yes, if you are a radical egan they are probably "murderers" or something

[13:18:01.0000] <Ms2ger>
It worked out with frex,frex

[13:18:02.0000] <AryehGregor>
/me is probably confused in part because 90% of the discussion he's been part of regarding the slaughter of animals is specifically in the context of kosher food, which might be different and where some of the terminology is in Hebrew or Yiddish or Aramaic

[13:18:03.0000] <jgraham>
*vegan

[13:18:04.0000] <TabAtkins>
I didn't invent that one, to be fair.

[13:18:05.0000] <jgraham>
/me wonders why that chrome extension isn't just a feature of google.com

[13:19:00.0000] <AryehGregor>
/me too

[13:19:01.0000] <AryehGregor>
It seems kind of perverse.

[13:19:02.0000] <AryehGregor>
They let you say you like a result, so why not that you dislike it?

[13:19:03.0000] <TabAtkins>
I assume it's so we can experiment with it first.

[13:19:04.0000] <AryehGregor>
Google Search can't experiment?

[13:19:05.0000] <AryehGregor>
I thought they experiment all over the place.

[13:20:00.0000] <Ms2ger>
Oh no, Google will save which sites we dislike!

[13:20:01.0000] <zewt>
they've had (on and off) the little "x" to hide individual results in pages, which is pretty useless--i've wished many times that would apply to a whole domain

[13:20:02.0000] <jgraham>
Anyway, the meat related conversation was quite productive because I learnt that I can buy a 16kg box containing much of a butchered lamb

[13:20:03.0000] <jgraham>
Which is quite exciting

[13:20:04.0000] <AryehGregor>
/me is just waiting for the next experts-exchange.com or w3schools.com result to show up in a search

[13:20:05.0000] <AryehGregor>
/me goes off and does a search specifically to lure in w3schools.com results

[13:20:06.0000] <TabAtkins>
Oh man, I should trigger those purposely.

[13:20:07.0000] <TabAtkins>
/me does the same.

[13:21:00.0000] <AryehGregor>
I actually haven't seen experts-exchange.com results recently, though.

[13:21:01.0000] <AryehGregor>
So I'll let that one be.

[13:21:02.0000] <AryehGregor>
(until I see it)

[13:21:03.0000] <TabAtkins>
I find that experts-exchange is roughly as useful as other medium-tier things, once you use Stylish to hide all the bullshit they put before the actual answer.

[13:21:04.0000] <zewt>
i'm habitually doing site:*.w3.org when i'm doing w3-related searches now, specifically to avoid w3schools

[13:22:00.0000] <AryehGregor>
Yeah, once you know that you can scroll down to get the answer, it's not so bad.

[13:22:01.0000] <zewt>
even adding "w3" to a search still lands w3schools first

[13:22:02.0000] <AryehGregor>
I'm pretty sure they used to actually cloak the answer somehow, though.

[13:22:03.0000] <AryehGregor>
But they stopped at some point.

[13:22:04.0000] <Philip`>
zewt: Maybe add "-w3schools"?

[13:22:05.0000] <TabAtkins>
I'm sure that point was "when Google realized they were cloaking the answer".

[13:22:06.0000] <jgraham>
/me finds that putting "foo spec" is generally good

[13:23:00.0000] <AryehGregor>
Probably.

[13:23:01.0000] <AryehGregor>
/me seconds jgraham 

[13:23:02.0000] <zewt>
i use site: since I use it a lot in general ... which is why it's still aggrevating that you can no longer turn off the disruptive search autocomplete :|

[13:25:00.0000] <AryehGregor>
You mean Google Instant?

[13:26:00.0000] <zewt>
no, suggestions (which also kills form autocomplete in firefox)

[13:27:00.0000] <AryehGregor>
Oh.

[13:27:01.0000] <zewt>
that reminds me--so many times I've wished for an api to introspect existing dom event listeners, usually for greasemonkey to be able to remove them, heh

[13:28:00.0000] <zewt>
have never hit any cases where i needed them on an actual page, though

[14:13:00.0000] <Hixie>
Philip`: thankfully no

[14:27:00.0000] <zewt>
Your message to whatwg awaits moderator approval

[14:27:01.0000] <zewt>
uhh. heh

[14:27:02.0000] <Hixie>
did it give a reason?

[14:27:03.0000] <zewt>
Too many recipients to the message

[14:27:04.0000] <Hixie>
ah

[14:27:05.0000] <Hixie>
let me whitelist it hold on

[14:27:06.0000] <Hixie>
but cut down next time :-P

[14:27:07.0000] <zewt>
list isn't configured for reply-all style discussion, heh

[14:28:00.0000] <Hixie>
well you shouldn't cc people who aren't actually who you're replying to anyway :-)

[14:29:00.0000] <zewt>
i can't exactly keep track of who expects a cc and who doesn't :P

[14:29:01.0000] <zewt>
which is no doubt why the list tends to be reply-all in the first place

[14:30:00.0000] <Hixie>
just send the mail to the people you're responding to :-)

[14:30:01.0000] <Hixie>
one should trim one's cc/to lists just like one should trim the context one is replying to

[14:31:00.0000] <zewt>
that's not the actual practice on the list, or on any list i've used

[14:31:01.0000] <Hixie>
lead by example :-)

[14:32:00.0000] <Hixie>
people often top-post and don't trim context, but that doesn't mean it's the right thing to do either

[14:32:01.0000] <zewt>
well, i don't think cc'ing at all is the right thing to do; i only do it because it's the practice of the list

[14:33:00.0000] <Hixie>
generally you should cc/to the people you want to have read/reply (respectively)

[14:33:01.0000] <zewt>
pointless when they're on the list, and of the dozens of lists i've been on nobody has ever expected people to manually edit cc lists :)

[14:34:00.0000] <zewt>
anyway, not that important either way

[14:36:00.0000] <MikeSmith>
http://www.belshe.com/2011/02/10/the-era-of-browser-preconnect/ is worth reading

[14:37:00.0000] <MikeSmith>
The downside of preconnect is a big part of why we’re working on SPDY.  HTTP has been nothing short of a heroic protocol and made the Internet as we know it possible.  But as we look to the next generation of rich media sites with low latencies, it is clear that today’s HTTP can’t perform at that level.

[14:37:01.0000] <MikeSmith>
SPDY hopes to solve much of HTTP’s connection problems while also providing better performance and better security.

[14:37:02.0000] <MikeSmith>
oops

[14:37:03.0000] <MikeSmith>
hadn't meant to paste quite all all that

[14:37:04.0000] <zewt>
the big thing I hope SPDY can help fix is the whole no certificate = no SSL at all problem

[14:38:00.0000] <MikeSmith>
hmm

[14:38:01.0000] <MikeSmith>
I guess that's a nice side effect

[14:38:02.0000] <zewt>
since from what I recall it's simply always encrypted

[14:38:03.0000] <MikeSmith>
yeah

[14:38:04.0000] <MikeSmith>
it's always using TLS

[14:39:00.0000] <MikeSmith>
iirc

[14:43:00.0000] <zcorpan>
forgive me, mime type gods, for i have sinned: i renamed a bunch of font files to .gif as to get around silly security policy on a friend's blog in order to use webfonts. good thing browsers ignore mime types

[14:44:00.0000] <zewt>
couldn't you at least rename them to something with no associated mime type at all, or does that not work either?

[14:44:01.0000] <aho>
for woff, otf, and ttf... yes

[14:45:00.0000] <Hixie>
heycam: did anything ever happen with the 'mixin interface' idea?

[14:45:01.0000] <aho>
svg fonts will likely break though, but i'm not sure if they are still required

[14:46:00.0000] <heycam>
Hixie, it's still likely to happen (along with those bunch of other things i mailed public-script-coord about late last year). but i can't get to editing webidl for another few weeks.

[14:46:01.0000] <aho>
zewt, with IIS... if the mime type isn't registered you get a 404

[14:46:02.0000] <heycam>
Hixie, I'll write to public-script-coord as I make big changes like that

[14:47:00.0000] <heycam>
/me just sees your email now

[14:47:01.0000] <zewt>
haha

[14:47:02.0000] <zcorpan>
zewt: no, the blog software only allowed a handful of file extensions

[14:47:03.0000] <zewt>
i've had the fortune of never having to host anything on IIS

[14:47:04.0000] <zewt>
i mean to continue my streak

[14:48:00.0000] <Philip`>
zcorpan: Could you at least rename them to example.ttf.gif?

[14:48:01.0000] <zcorpan>
Philip`: that's what i did

[14:48:02.0000] <aho>
i called mine *.woff.txt etc :>

[14:48:03.0000] <Philip`>
or example.ttf.pretendingtobe.gif

[14:48:04.0000] <zewt>
this.is.not.a.text.file.txt

[14:49:00.0000] <zcorpan>
aho: i considered .txt but i thought maybe something somewhere would try to tamper with linebreaks and break the font, so i chose .gif instead

[14:49:01.0000] <zewt>
also helps to use a format that, if loaded blindly into a browser, will tend to just fail--if you use .txt then you'll end up spewing garbage on a person's window

[14:50:00.0000] <aho>
it's a shame that the bell character doesnt do anything in browsers :>

[14:50:01.0000] <heycam>
Hixie, (I'll respond to that mail when I context switch myself back to webidl editing in a few weeks, if that's ok)

[14:51:00.0000] <aho>
once i made my machine beep for over a minute by outputting some binary file on stdout... coworkers were not amused :>

[14:52:00.0000] <aho>
(there were no process to kill... it was already done... output was just lagging) :>

[14:53:00.0000] <Hixie>
heycam: absolutely

[14:53:01.0000] <Hixie>
heycam: thanks

[15:00:00.0000] <zcorpan>
http://www.456bereastreet.com/archive/201102/validating_html5_with_validatornu_and_the_html5validator_extension_for_firefox/

[15:09:00.0000] <Hixie>
i haven't been reading this crypto thread... is it going to result in me making spec changes or is someone already editing a spec for it?

[15:12:00.0000] <Hixie>
TabAtkins: do you know where white-space:plaintext is defined?

[15:12:01.0000] <TabAtkins>
Hixie: abarth wrote a spec for the crypto stuff today.

[15:12:02.0000] <Hixie>
(i'm trying to make sure <textarea dir=auto> is specced to do the right thing but i dunno what that is)

[15:12:03.0000] <TabAtkins>
Let me see if I can find white-space:plaintext

[15:12:04.0000] <Hixie>
abarth++

[15:13:00.0000] <abarth>
http://wiki.whatwg.org/wiki/Crypto

[15:13:01.0000] <abarth>
it doesn't include the legacy stuff yet

[15:13:02.0000] <Hixie>
there's legacy stuff?

[15:13:03.0000] <Hixie>
good to know

[15:13:04.0000] <Hixie>
gecko-only?

[15:13:05.0000] <TabAtkins>
Hixie: I don't think it's defined in a spec right now.  Let me poke fantasai and see.

[15:13:06.0000] <Hixie>
TabAtkins: k

[15:14:00.0000] <abarth>
Hixie: as far as I know, web compat only requires that the object exist with that name

[15:14:01.0000] <abarth>
it doesn't actually need to do anything

[15:14:02.0000] <TabAtkins>
God, the white-space property is so bad.

[15:14:03.0000] <Hixie>
abarth: wow, that's some nutty compat requirement

[15:14:04.0000] <Hixie>
gotta love the web

[15:14:05.0000] <abarth>
i think people feature test

[15:14:06.0000] <MikeSmith>
zcorpan: wow

[15:14:07.0000] <TabAtkins>
Presumably, people are using window.crypto to UA-detect.

[15:15:00.0000] <abarth>
if (crypto. generateCRMFRequest) ...

[15:15:01.0000] <MikeSmith>
zcorpan: pretty cool

[15:15:02.0000] <abarth>
which works as long as crypto exists in the global scope

[15:15:03.0000] <Hixie>
hah

[15:15:04.0000] <Hixie>
nice

[15:15:05.0000] <abarth>
some of the features in gecko are good though

[15:16:00.0000] <abarth>
window.crypto.importUserCertificates

[15:16:01.0000] <abarth>
crypto. signText

[15:16:02.0000] <abarth>
etc

[15:16:03.0000] <abarth>
some are dumb:

[15:16:04.0000] <abarth>
crypto.disableRightClick()

[15:16:05.0000] <abarth>
:)

[15:16:06.0000] <Hixie>
o_O

[15:16:07.0000] <jamesr_>
wat

[15:17:00.0000] <abarth>
https://developer.mozilla.org/en/javascript_crypto

[15:17:01.0000] <abarth>
scroll to the bottom

[15:17:02.0000] <abarth>
i couldn't make this stuff up

[15:17:03.0000] <jamesr_>
at least it says "not implemented"

[15:18:00.0000] <ben_h>
that's what i was thinking :)

[15:19:00.0000] <zcorpan>
MikeSmith: yeah. it'd be cooler still with a browser validator that integrated with devtools

[15:19:01.0000] <MikeSmith>
yeah

[15:22:00.0000] <zcorpan>
wonder if it's possible to port the validation part of validator.nu to javascript

[15:30:00.0000] <MikeSmith>
zcorpan: yeah, possible, I think

[15:30:01.0000] <MikeSmith>
but there's a lot of pieces

[15:31:00.0000] <MikeSmith>
I think the integration would be the hard part

[15:57:00.0000] <annevk>
Hixie, it's not a violation as the RFC allows both ways

[15:57:01.0000] <annevk>
Hixie, it's just that one way doesn't work


2011-02-15
[16:02:00.0000] <Hixie>
annevk: it doesn't allow what opera is doing

[16:03:00.0000] <Hixie>
annevk: there's no form field with multiple files

[16:03:01.0000] <Hixie>
annevk: each file goes into its own field in the form data set

[16:03:02.0000] <annevk>
oh okay, so I should have read the spec more clearly

[16:04:00.0000] <annevk>
reading that now, my bad

[16:04:01.0000] <Hixie>
no worries :-)

[16:05:00.0000] <Hixie>
AryehGregor: is there an api to easily replace the current text selection with some other text?

[16:05:01.0000] <annevk>
doesn't a bunch of execCommand() work that way

[16:08:00.0000] <annevk>
updated http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#events per regen of Ms2ger

[16:08:01.0000] <annevk>
not on IRC, yet still working; you can't explain that!

[16:11:00.0000] <zewt>
blame that on the moon, too

[16:11:01.0000] <annevk>
Peter`, it's "ECMAScript"

[17:02:00.0000] <red_one>
So where do I go to rant about I and B in HTML5?

[17:02:01.0000] <red_one>
/me chuckles

[17:02:02.0000] <annevk>
#css

[17:03:00.0000] <Hixie>
what is your rant?

[17:03:01.0000] <Hixie>
pro or con? :-)

[17:03:02.0000] <red_one>
That would be like complaining about COBOL to a graphics designer!

[17:03:03.0000] <red_one>
you really want to know? :P

[17:03:04.0000] <zewt>
how many times have you seen people rant about a pro? :P

[17:04:00.0000] <Hixie>
red_one: yes, because if you're con, you can help me fight the incursion of <u> and <tt>, but if you're pro, i don't want to mention that we might also be adding <u> and <tt> :-)

[17:05:00.0000] <red_one>
I think I and B are copouts to pander to the "I wish I was using netscape navigator" crowd.

[17:05:01.0000] <red_one>
They're completely unsemantic.

[17:05:02.0000] <annevk>
ah, debating tactics 101; reveal everything upfront

[17:05:03.0000] <Hixie>
red_one: well to be fair in the html spec now they've been redefined as mostly semantic

[17:06:00.0000] <red_one>
Hixie: indeed.

[17:06:01.0000] <Hixie>
red_one: however, if you're interested, i'm serious about looking for help in fighting back against <u>

[17:06:02.0000] <Hixie>
red_one: since the html chairs are taking that one out of my hands and making their own decision on it in a few months, based on the arguments we present

[17:07:00.0000] <Hixie>
red_one: so far the proposal in favour of adding it is http://www.w3.org/html/wg/wiki/ChangeProposals/UShouldBeConforming

[17:07:01.0000] <zewt>
can we fight back against <span> and just use <div style="display: inline">? heh :P

[17:07:02.0000] <zewt>
(actually, I think I saw some Google apps that sort of do that when I was poking around in their DOM, though I don't recall where)

[17:07:03.0000] <Hixie>
red_one: if you have any arguments against that, put them in the wiki here: http://wiki.whatwg.org/index.php?title=Objections_against_CPs_for_ISSUE-144&action=edit&redlink=1

[17:08:00.0000] <Hixie>
red_one: and i'll round up the objections and present them formally when it's time

[17:08:01.0000] <red_one>
Thanks.

[17:10:00.0000] <Hixie>
(also please add any arguments you have have against <u> in general, even if they're not explicitly countered in that first page)

[17:10:01.0000] <Hixie>
(and anyone else who wants to partake in this, be my guest)

[17:11:00.0000] <red_one>
I have arguments against I, B and U, but I'll stick with U I guess.

[17:11:01.0000] <red_one>
They're all pretty much the same anyway.

[17:13:00.0000] <Hixie>
B and I are more or less lost causes, because they actually do have somewhat valid use cases -- there's no other sensible way to mark many up the examples in the I section, especially

[17:13:01.0000] <Hixie>
but U seems to be much weaker

[17:14:00.0000] <red_one>
IMO, the introduction section of that wiki pages

[17:14:01.0000] <red_one>
is exactly the reason why U shouldn't exist, and neither should I or B.

[17:15:00.0000] <uf0>
red_one, say I want to quickly underline a text

[17:16:00.0000] <uf0>
I simply add a <u>hello</u>

[17:16:01.0000] <uf0>
explain to me why that's useless?

[17:16:02.0000] <red_one>
it's not useless

[17:16:03.0000] <uf0>
ok so what's the problem with it

[17:16:04.0000] <zewt>
or <span style>hello</span> or <span class>

[17:16:05.0000] <red_one>
but it's style

[17:16:06.0000] <red_one>
not content.

[17:16:07.0000] <uf0>
ok so?

[17:17:00.0000] <red_one>
so not <U>

[17:17:01.0000] <zewt>
if you want to quickly set a block of text red, should there be <red>, too?

[17:17:02.0000] <red_one>
but something more meaningful that hopefully either the UA underlines or your CSS underlines.

[17:17:03.0000] <uf0>
zewt no one said that.

[17:18:00.0000] <uf0>
but basic underline, bold

[17:18:01.0000] <uf0>
I think are good, shouldn't be a 'bad' thing

[17:18:02.0000] <red_one>
The idea of "everyone uses it so it should be in HTML5"

[17:18:03.0000] <red_one>
is clearly why EMBED is there.

[17:18:04.0000] <erlehmann>
hey, I actually use i for stylistic offsetting of names!

[17:18:05.0000] <red_one>
argh.

[17:18:06.0000] <zewt>
lots of CSS styles are "basic"; seems strange to pick a few of them and give them their own element types

[17:19:00.0000] <erlehmann>
red_one, the WHATWG works mainly descriptive, not prescriptive. (this is also the reason that theora is not the baseline video codec. apple wouldn't just magically implement it)

[17:19:01.0000] <erlehmann>
zewt, those elements were there before. should they be delegated to presentational hints?

[17:19:02.0000] <uf0>
I think it's alot messier to have say ex: <span class="foo">foo</span>

[17:20:00.0000] <uf0>
and that foo has rule of underline

[17:20:01.0000] <uf0>
just for an underline

[17:20:02.0000] <uf0>
or even inline style for that matter

[17:20:03.0000] <uf0>
and remember i'm arguing U, B

[17:20:04.0000] <uf0>
that's it.

[17:20:05.0000] <zewt>
erlehmann: there's a case for speccing something simply because it's historical and engrained in user's brains; that just wasn't the particular argument here

[17:21:00.0000] <erlehmann>
zewt, u and b are rooted in western typographic conventions in wide use in the web. u is less so.

[17:21:01.0000] <red_one>
if we're going to be using U, B and I, we might as well stick with HTML 3.2.

[17:21:02.0000] <uf0>
another not good point

[17:22:00.0000] <zewt>
erlehmann: common typographic conventions don't need to have their own element names; that's what CSS is for

[17:22:01.0000] <uf0>
something like the <center> obviously doesn't make sense to me

[17:22:02.0000] <uf0>
but a <u> that makes sense

[17:22:03.0000] <kevogod>
Why doesn't that obvoiusly make sense?

[17:22:04.0000] <uf0>
and say a regular user wants to comment

[17:22:05.0000] <kevogod>
If you think <u> makes sense, then why doesn't <center>?

[17:22:06.0000] <zewt>
as for things that are simply in common practice and, for practical reasons, are simply not going away--not arguing against that

[17:22:07.0000] <kevogod>
Where does it stop?

[17:22:08.0000] <uf0>
and underline something in his comment

[17:23:00.0000] <uf0>
he can use <u>

[17:23:01.0000] <uf0>
because he is not CSS expert

[17:23:02.0000] <kevogod>
What regular user?

[17:23:03.0000] <uf0>
kevogod, here's an example

[17:24:00.0000] <zewt>
so html should have element types for common css styles so people don't have to learn css? sorry, don't buy that at all

[17:24:01.0000] <Hixie>
uf0: should we add <big>, <tt>, and <font color>?

[17:24:02.0000] <uf0>
someone in a blog that wants to underline something in his comment

[17:24:03.0000] <uf0>
what does he/she do

[17:24:04.0000] <zewt>
Hixie: i already offered <red> :P

[17:24:05.0000] <kevogod>
Hixie, I am always in favor of <big>.

[17:24:06.0000] <uf0>
and the simplest way

[17:24:07.0000] <red_one>
/me lols it up

[17:24:08.0000] <kevogod>
<small> does not make sense to me though.

[17:24:09.0000] <red_one>
kevogod: teh <bigger> the better, eh?

[17:25:00.0000] <zewt>
<xyzzy> (nothing happens)

[17:25:01.0000] <uf0>
Hixie no we shouldn't add those

[17:25:02.0000] <uf0>
but again basic.. bold, underlines, italic

[17:25:03.0000] <kevogod>
uf0, Use BB Code?

[17:25:04.0000] <uf0>
i'm for

[17:25:05.0000] <Hixie>
uf0: what's the difference?

[17:26:00.0000] <erlehmann>
oh my god, bbcode

[17:26:01.0000] <kevogod>
Haha

[17:26:02.0000] <erlehmann>
bbcode is the reason i hate people

[17:26:03.0000] <erlehmann>
“LOOK ITS JUST LIKE HTML EXCEPT WE CANNOT PARSE IT”

[17:26:04.0000] <kevogod>
[b]Why?![/b]

[17:26:05.0000] <uf0>
kevogod, lol no i do not use bbcode

[17:26:06.0000] <erlehmann>
if they would just use html. with html5lib. all would be well.

[17:27:00.0000] <erlehmann>
._.

[17:27:01.0000] <uf0>
I have still haven't gotten any good response to a simpler alternative

[17:27:02.0000] <kevogod>
CSS?

[17:27:03.0000] <uf0>
it's either add a class

[17:27:04.0000] <uf0>
or inline style it

[17:28:00.0000] <red_one>
CSS should be the only option for style.

[17:28:01.0000] <red_one>
It's what it does.

[17:28:02.0000] <zewt>
you havn't replied to why <b> deserves its own element but <big> or <red> do not; why leak CSS styles into HTML at all?

[17:28:03.0000] <zewt>
because it's a little less typing? that's certainly never been a major HTML design criteria, heh

[17:28:04.0000] <kevogod>
I prefer <fuchsia>.

[17:28:05.0000] <uf0>
in fonts the most used stylings are bold or underline

[17:28:06.0000] <uf0>
that's why

[17:28:07.0000] <zewt>
so?

[17:29:00.0000] <uf0>
<big> or <red> that's diff

[17:29:01.0000] <uf0>
zewt

[17:29:02.0000] <kevogod>
So people don't use bigger fonts?

[17:29:03.0000] <red_one>
so we'll take a survey

[17:29:04.0000] <kevogod>
Q.E.D.

[17:29:05.0000] <red_one>
and implement the 10 most used styles

[17:29:06.0000] <red_one>
as HTML elements.

[17:30:00.0000] <red_one>
<bigredflashingtitlebar>

[17:30:01.0000] <uf0>
red_one you are being sacarstic, I'm having a serious conversation about what I think make sense

[17:31:00.0000] <uf0>
it's obviously gone in HTML5

[17:31:01.0000] <zewt>
well, you're not giving any new arguments; we keep asking "why does it being more common mean it needs to be an element?", and you keep replying "because it's more common"

[17:31:02.0000] <red_one>
uf0: i'm trying to make a point.

[17:31:03.0000] <Hixie>
uf0: could you give an example of when you would want to underline some random text that has no more appropriate semantic?

[17:32:00.0000] <uf0>
ok.. there are times when I'm writing HTML

[17:32:01.0000] <uf0>
and a client wants a particular word underlined

[17:32:02.0000] <uf0>
in my old ways

[17:33:00.0000] <uf0>
This is a <u>Title</u>

[17:33:01.0000] <uf0>
or

[17:33:02.0000] <red_one>
underlined why?

[17:33:03.0000] <uf0>
<h1>bla bla <u>bla</u

[17:33:04.0000] <red_one>
what is it about the word that makes it special?

[17:33:05.0000] <uf0>
> </h1>

[17:34:00.0000] <uf0>
now the way you guys want it is..

[17:34:01.0000] <uf0>
<h1>bla bla <span style="font-style: underline;">bla</span></h1>

[17:34:02.0000] <erlehmann>
‘i am serious uf0. this is serious conversation.’

[17:34:03.0000] <uf0>
you see the difference in simplicity?

[17:34:04.0000] <erlehmann>
lolcats rejoice

[17:35:00.0000] <erlehmann>
uf0, just use <mark> or <b> ?

[17:35:01.0000] <zewt>
yes, the second is much simpler since it doesn't have a single-purpose special-case element

[17:35:02.0000] <uf0>
Hixie your response?

[17:36:00.0000] <red_one>
uf0: can you answer my question?

[17:37:00.0000] <uf0>
underlined why?

[17:37:01.0000] <uf0>
the client wants the 'foo' word underlined

[17:38:00.0000] <uf0>
text-decoration: underline;

[17:38:01.0000] <uf0>
there's your answer

[17:38:02.0000] <red_one>
what is it about that word that makes them want to underline it?

[17:39:00.0000] <uf0>
ok now you're effin' wit me

[17:39:01.0000] <red_one>
no, it's a serious question.

[17:40:00.0000] <uf0>
the answer is 'I don't know'

[17:40:01.0000] <red_one>
the answer will determine how you should mark it up.

[17:40:02.0000] <red_one>
well

[17:40:03.0000] <red_one>
for argument's sake

[17:40:04.0000] <uf0>
I mean for argument's sake

[17:40:05.0000] <red_one>
if they say "because it's important"

[17:40:06.0000] <red_one>
guess what i'd recommend?

[17:40:07.0000] <uf0>
shoot

[17:41:00.0000] <uf0>
a class?

[17:41:01.0000] <uf0>
i'd bet

[17:41:02.0000] <red_one>
EM

[17:41:03.0000] <red_one>
styled to be underlined

[17:41:04.0000] <red_one>
because it's.. emphasised.

[17:41:05.0000] <red_one>
(this really isn't a WHATWG question, more of a #web question)

[17:42:00.0000] <Hixie>
uf0: what does your client want to have happen when the page is being read by an aural browser?

[17:42:01.0000] <uf0>
well then in you're css you add the css rule to underline

[17:43:00.0000] <wilhelm>
According to the numbers from Brian Wilson's analysis of the Web (2008), <tt> is used on 0.44% of the pages out there. In comparison, <layer> is used on 0.75% and @longdesc on 0.72%. Should be safe to drop. :P

[17:44:00.0000] <Hixie>
wilhelm: other than it being used more, i don't understand why <u> has more of a valid use case than <tt>

[17:44:01.0000] <uf0>
Hixie not sure where you're going with that, what does blind folk have to do?

[17:45:00.0000] <Hixie>
uf0: i'm trying to work out why you want something underlined

[17:45:01.0000] <uf0>
see red_one's example

[17:45:02.0000] <uf0>
they say that word is important

[17:45:03.0000] <uf0>
is his case he would us <em></em>

[17:45:04.0000] <Hixie>
uf0: to work out if <u> is a good idea or if you're just using it because it's easier to think about than the right solution (the same way people use <big> when they should use <h1>)

[17:45:05.0000] <uf0>
which makes sense

[17:45:06.0000] <uf0>
but then again

[17:45:07.0000] <wilhelm>
Hixie: I agree. I'm surprised to see <u> at 9.7%, though, on par with <em> (10%).

[17:45:08.0000] <uf0>
you'd still have to add the underline rule

[17:46:00.0000] <Hixie>
if the word is important, then you use <strong>, not <em>, but yes -- you use <strong>, then style it

[17:46:01.0000] <Hixie>
so that when the client says "wait, i want important stuff to be red, not underlined!" then you only change one place

[17:46:02.0000] <uf0>
oh Hixie.. don't confuse with people that think use <big> instead <h1>

[17:46:03.0000] <Hixie>
and their entire 10,000 page site updates all at once

[17:46:04.0000] <uf0>
that's a diff story

[17:47:00.0000] <Hixie>
<u> instead of <strong> is the _exact_ same story as <big> instead of <h1>

[17:47:01.0000] <Hixie>
that's the problem!

[17:47:02.0000] <Hixie>
that's why we shouldn't allow people to use <u>

[17:47:03.0000] <Hixie>
so that they don't think they're different

[17:47:04.0000] <uf0>
hmmmmm..

[17:48:00.0000] <uf0>
you may have a point there.

[17:49:00.0000] <red_one>
hixie earns his cookie for today.

[17:53:00.0000] <uf0>
case closed.

[17:53:01.0000] <erlehmann>
Hixie, using <big> when one should use <h1> is not the worst. sadly, i know a guy who manages to get paid for putting photoshop renderings as web site backgrounds.

[17:53:02.0000] <erlehmann>
my face when i saw it ._.

[17:54:00.0000] <Hixie>
uf0: hopefully i'll be able to convince the htmlwg chairs as well :-)

[17:54:01.0000] <uf0>
erlehmann using <big> doesn't make sense in that case because of SEO as well

[17:54:02.0000] <uf0>
so that's why i though otherwise in that case

[17:54:03.0000] <uf0>
but valid point either way.

[17:55:00.0000] <erlehmann>
SEO, haha

[17:55:01.0000] <erlehmann>
curlers gonna curl.

[17:55:02.0000] <uf0>
it's the truth erlehmann.

[17:55:03.0000] <uf0>
i mean the point of web is search nowadays = google

[17:56:00.0000] <uf0>
but that's another conversation :)

[17:56:01.0000] <uf0>
h tagss

[17:56:02.0000] <erlehmann>
i know. but i care more about fleshy users than about search agents.

[17:56:03.0000] <uf0>
right

[17:56:04.0000] <Hixie>
in practice they need the same thing -- use appropriate elements :-)

[17:57:00.0000] <erlehmann>
indeed.

[17:57:01.0000] <uf0>
Hixie, I thought it was a done deal in HTML5 for u,i

[17:57:02.0000] <red_one>
google gives preference to text in H1 I think.

[17:57:03.0000] <uf0>
am i wrong here?

[17:57:04.0000] <red_one>
for example.

[17:57:05.0000] <uf0>
they're gone aren't they

[17:57:06.0000] <uf0>
well 'deprecated'

[17:58:00.0000] <uf0>
google is h1,h2

[17:58:01.0000] <uf0>
everything else is extra

[17:58:02.0000] <uf0>
in my experience at least

[17:59:00.0000] <erlehmann>
still people sometimes get so mad when they think they got it and didn't. a friend of mine was once “but <br> works, why should i use <p>” because she didn't get the semantics. in this case it may have actually helped to remind her that the next person to maintain her stylesheets may very well be a murderous psychopath and know where she lives. :D

[17:59:01.0000] <erlehmann>
googlers gonna goog

[18:00:00.0000] <Hixie>
uf0: http://www.whatwg.org/specs/web-apps/current-work/complete/text-level-semantics.html#the-i-element

[18:00:01.0000] <Hixie>
uf0: right not the spec has <i> and <b> but doesn't have <u> or <tt>. There is a proposal on the table to add <u>.

[18:01:00.0000] <Hixie>
right now, even

[18:02:00.0000] <uf0>
interesting

[18:03:00.0000] <kennyluck>
As the main author of http://www.w3.org/html/wg/wiki/ChangeProposals/UShouldBeConforming, I thought about writing a proposal to drop b i, to make it consistent. I didn't do that because I have no idea about the rationale of having b and i.

[18:03:01.0000] <kennyluck>
They are all the same to normal people.

[18:04:00.0000] <red_one>
kennyluck: agreed.

[18:05:00.0000] <Hixie>
kennyluck: the spec gives the rationales for i and b

[18:06:00.0000] <kennyluck>
Hixie: it's too messy and not compatible with existing content.

[18:06:01.0000] <kennyluck>
when you say b and i have use cases. But before HTML4, no body thought of these elements in terms of semantic elements.

[18:06:02.0000] <kennyluck>
Then why do it now?

[18:06:03.0000] <kennyluck>
s/Then/So/

[18:08:00.0000] <kennyluck>
The current spec claims that some people who accidentally use it in some way are right. I think this is quite weird.

[18:10:00.0000] <MikeSmith>
change proposal scope creep

[18:10:01.0000] <MikeSmith>
kennyluck: the issue is about the u element

[18:11:00.0000] <nessy>
I have a quick question about how to use the CSS selectors for WebVTT / caption files, which I am unclear about even after reading the spec

[18:11:01.0000] <nessy>
is it: video track ::cue(c).white {}  or video track ::cue(c.white) {} ?

[18:11:02.0000] <nessy>
if "white" is the class name for the class object

[18:12:00.0000] <nessy>
and when I use voice, is this correct? video track ::cue(v[voice='Sintel']) {..}

[18:13:00.0000] <zewt>
i couldn't quite tell from reading the spec; i didn't look too hard but it looked like webvtt classes would simply become CSS classes

[18:13:01.0000] <zewt>
(didn't look too hard since that seemed to make perfect sense so I didn't think much more about it, I guess)

[18:13:02.0000] <Hixie>
kennyluck: html4's semantics really weren't thought through very well

[18:13:03.0000] <Hixie>
kennyluck: i mean, the spec is really vague

[18:13:04.0000] <nessy>
http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#css-extensions <- is unclear to me

[18:14:00.0000] <Hixie>
kennyluck: when you enumerate common use cases for html pages, you end up with a lot of things for which i and b make sense, but i've never seen one for which u makes sense

[18:14:01.0000] <zewt>
it's useful for tricking your users into thinking something's a link...

[18:14:02.0000] <nessy>
zewt: I think so, too, so I thought the first one is correct

[18:14:03.0000] <Hixie>
nessy: the entire selector goes inside the argument

[18:14:04.0000] <erlehmann>
haha, that reminds me of „back when X was good“ — „X was never good“

[18:14:05.0000] <Hixie>
nessy: ::cue(c.white)

[18:14:06.0000] <erlehmann>
<u> was never good.

[18:14:07.0000] <nessy>
ah thanks!

[18:14:08.0000] <erlehmann>
selectors gonna select!

[18:15:00.0000] <Hixie>
kennyluck: if there really is a use case for <u>, then we should add it

[18:15:01.0000] <Hixie>
kennyluck: but what are the use cases? the naming thing for cjk isn't actually used as far as i understand

[18:18:00.0000] <kennyluck>
Hixie: It is used. Although honestly not very prevalent. But I don't believe in the use cases of b and i as well. Or they are just very confusing.

[18:19:00.0000] <Hixie>
kennyluck: what is it used for?

[18:19:01.0000] <Hixie>
kennyluck: certainly it is used, but then so is <big>, and <font>

[18:19:02.0000] <Hixie>
kennyluck: and <frameset>

[18:19:03.0000] <Hixie>
kennyluck: and <marquee>

[18:19:04.0000] <Hixie>
kennyluck: "being used" is an argument for the browser supporting it, not for it being conforming

[18:21:00.0000] <kennyluck>
Hixie: If someone writes a proposal on dropping b and i, I will personally go for it. I wrote this proposal because some people want it even if they don't have clear use cases.

[18:21:01.0000] <kennyluck>
What I care is just this inconsistency between u b and i.

[18:22:00.0000] <kennyluck>
I don't believe in the use cases of b and i. And that's it.

[18:24:00.0000] <Hixie>
kennyluck: how do you mark up a taxonomic designation without i?

[18:24:01.0000] <kennyluck>
<span>

[18:25:00.0000] <Hixie>
so you do believe in the use case, you just don't think we should handle it?

[18:25:01.0000] <Hixie>
i don't understand why <span> is better than <i>

[18:26:00.0000] <kennyluck>
Hixie: because we could have deprecated b and i, as a significant portion of Web authors belive.

[18:26:01.0000] <kennyluck>
(the rant from red_one)

[18:27:00.0000] <Hixie>
deprecating elements isn't a goal, making the web better is the goal. how is not handling the taxonomic designation use case going to make the web better?

[18:35:00.0000] <MikeSmith>
kennyluck: inconsistency is a judgement call

[18:35:01.0000] <MikeSmith>
if you don't think the use cases for the u element are valid or important, then don't waste your time or other people's time by writing a proposal for it

[18:36:00.0000] <MikeSmith>
withdraw it and/or ask somebody else to write it up who does believe the use cases are important

[18:37:00.0000] <MikeSmith>
morphing it into a quest to get other elements removed instead does not seem like such a great plan

[18:45:00.0000] <erlehmann>
if inconsistency where a requirement for grandfathering stuff in, where would C:\fakepath be?

[18:46:00.0000] <kennyluck>
MikeSmith, If I didn't write that proposal, hsivonen would have written it so I don't see how this proposal would waste other people's time but mime.

[18:47:00.0000] <MikeSmith>
it wastes their time to have to read and consider a change proposal that you don't even support yourself

[18:48:00.0000] <MikeSmith>
if hsivonen were to write it, he'd write one that he actually supported, and that was restricted to the scope of the issue

[18:48:01.0000] <MikeSmith>
which is to say, arguing for keeping the u element as part of the language

[18:49:00.0000] <kennyluck>
MikeSmith, in my proposal I do argue for keeping the u element. I am just talking about my personal preference here.

[18:49:01.0000] <MikeSmith>
fine

[18:54:00.0000] <kennyluck>
Hixie, I don't believe having a previously presentational element handle a real use case would make the web better either. In fact, it makes the Web worse, by giving authors excuses to not use other clearly defined semantic elements. I gave examples in my proposal already.

[19:03:00.0000] <kennyluck>
Hixie, and u for proper nouns in Chinese is certainly real, although I wouldn't say it's very strong. I don't know the WHATWG process so I don't know if we do binary "exist"/"don't exist" classification to use cases before saying anything else. Otherwise, I think having the u element and exclude bad uses would just be very similar to how we dealt with b and i already.

[19:05:00.0000] <wirepair_>
Hixe, you about?

[19:05:01.0000] <wirepair_>
er Hixie...

[19:05:02.0000] <MikeSmith>
hmm, I don't remember seeing any announcement about this

[19:05:03.0000] <MikeSmith>
http://tools.ietf.org/html/draft-westin-payload-vp8-00

[19:05:04.0000] <MikeSmith>
RTP Payload Format for VP8 Video

[19:05:05.0000] <MikeSmith>
nessy: ↑

[19:06:00.0000] <nessy>
MikeSmith: is that a question?

[19:06:01.0000] <MikeSmith>
no

[19:06:02.0000] <MikeSmith>
just wondering if you had seen it

[19:07:00.0000] <nessy>
I'm not surprised :) the rtc-web guys have been very active recently around vp8

[19:08:00.0000] <MikeSmith>
ok

[19:22:00.0000] <kennyluck>
/me is reading http://wiki.whatwg.org/wiki/Objections_against_CPs_for_ISSUE-144.

[19:23:00.0000] <kennyluck>
If someone can give me a hint on what "valid" means, that will be appreciated.

[19:28:00.0000] <MikeSmith>
"valid" means non-bogus

[19:28:01.0000] <MikeSmith>
valid means real uses cases, not constructed ones

[19:29:00.0000] <gsnedders>
Is https://bugs.webkit.org/show_bug.cgi?id=4920 not invalid? From an ES POV, it's two characters, not one, and hence not a valid idenifier as surrogates aren't allowed in identifiers.

[19:29:01.0000] <MikeSmith>
means cases where they are using the u element in a way for which some other element would not be more appropriate

[19:30:00.0000] <Hixie>
wirepair_, kennyluck: sorry, had to go afk. will be back in an hour or so

[19:36:00.0000] <Kira>
Can somebody recommend websites to learn HTML(5)? Reading the spec is kinda dry.

[19:37:00.0000] <kennyluck>
Kira, you might be interested in going to #html5

[19:43:00.0000] <ben_h>
Kira: html5doctor has a lot of articles

[19:43:01.0000] <ben_h>
.. and their webserver is misconfigured it seems :)

[19:46:00.0000] <Kira>
heh

[19:54:00.0000] <MikeSmith>
kennyluck: see Hixie's comment at http://www.w3.org/Bugs/Public/show_bug.cgi?id=10830#c11

[19:54:01.0000] <MikeSmith>
about <rb>

[19:54:02.0000] <MikeSmith>
especially the first part

[19:54:03.0000] <kennyluck>
MikeSmith, I know that. I told Koji that fantasai was wrong already.

[19:54:04.0000] <MikeSmith>
 about how IE doesn't parse <rb>

[19:55:00.0000] <MikeSmith>
ah

[19:55:01.0000] <MikeSmith>
OK

[19:55:02.0000] <MikeSmith>
they know it's handled as void/empty element by IE, then?

[19:56:00.0000] <kennyluck>
fatasai claimed that IE handled something like <ruby><rb>A</rb><rb>B</rb><rt>a</rt><rt>b</rt></ruby> and this is obviously not true.

[19:56:01.0000] <kennyluck>
s/fatasai/fantasai/

[19:57:00.0000] <kennyluck>
MikeSmith, I think so. They are asking for new feature.

[19:57:01.0000] <MikeSmith>
hmm

[19:57:02.0000] <MikeSmith>
I'm not sure they understood that yet

[19:57:03.0000] <MikeSmith>
but anyway, that comment makes it very clear

[19:59:00.0000] <MikeSmith>
based on the previous comments from Koji, it seemed to me he was assuming that it got into the DOM as expected

[19:59:01.0000] <kennyluck>
/me to lunch

[19:59:02.0000] <MikeSmith>
because he mentions that AT software expect to do something with it

[20:13:00.0000] <Hixie>
kennyluck: i don't understand "giving authors excuses to not use other clearly defined semantic elements"

[20:13:01.0000] <Hixie>
kennyluck: can you show me some pages that use <u> for proper nouns in Chinese? wikipedia says it doesn't happen, iirc.

[20:13:02.0000] <Hixie>
kennyluck: i would add the <u> element if there were use cases at all -- the thing is, i haven't seen any

[20:13:03.0000] <Hixie>
wirepair_: here now

[20:23:00.0000] <wirepair_>
Hixie have you seen any email about browser security acid tests?

[20:23:01.0000] <wirepair_>
from OWASP people

[20:23:02.0000] <Hixie>
yes

[20:23:03.0000] <wirepair_>
so i'm apart of that (they are going to use the infrastructure i created to put out those tests)

[20:23:04.0000] <Hixie>
cool

[20:24:00.0000] <Hixie>
is there additional background info i should know?

[20:24:01.0000] <wirepair_>
do you have any problem with us using that name?

[20:24:02.0000] <Hixie>
i can loop you in on the thread if you like

[20:24:03.0000] <wirepair_>
if you do we'll just call it browser security crack tests :)

[20:24:04.0000] <Hixie>
what's your e-mail address?

[20:24:05.0000] <wirepair_>
isaac.dawson⊙gc

[20:24:06.0000] <Hixie>
to summarise what i said in e-mail, i don't have a problem with it, but i don't think it's a good choice for you, necessarily

[20:25:00.0000] <wirepair_>
ah ok, i'll read your response

[20:25:01.0000] <Hixie>
there's a _lot_ of baggage associated with the "acid" term that hakon and i want but that you probably don't :-)

[20:25:02.0000] <wirepair_>
yeah i figured

[20:26:00.0000] <myakura>
MikeSmith, kennyluck, fyi IE9 parses <rb>blah</rb>

[20:26:01.0000] <MikeSmith>
Hixie: ↑

[20:26:02.0000] <Hixie>
does IE9 parse <rb>blah</rb> any differently than <notehi>blah</notehi> ?

[20:27:00.0000] <myakura>
i think both would be treated as HTMLUnknownElement

[20:28:00.0000] <Hixie>
same as required by the HTML spec

[20:34:00.0000] <Hixie>
it's sad that they reimplemented their parser but not per the spec, btw :-(

[20:35:00.0000] <myakura>
Hixie, I see no difference between those http://i52.tinypic.com/j6pta8.jpg

[20:36:00.0000] <Hixie>
for that test i think they match the spec

[20:44:00.0000] <myakura>
hmm. taking </rb> out it fails :( http://i51.tinypic.com/2z7pt1x.png

[20:45:00.0000] <Hixie>
does what the html spec says to do :-)

[20:46:00.0000] <kennyluck>
Hixie: It does not happen as regular online Web pages (re. can you show me some pages that use <u> for proper nouns in Chinese?) ,  but the wikipedia entry itself has a valid example -> http://en.wikipedia.org/wiki/Proper_name_mark

[20:47:00.0000] <kennyluck>
However, it happens in every child's text book.

[20:48:00.0000] <kennyluck>
That is, not on the Web. I don't know whether that counts as valid use cases.

[20:50:00.0000] <kennyluck>
The Chinese version has examples that use the <u> element -> http://zh.wikipedia.org/zh/%E4%B8%93%E5%90%8D%E5%8F%B7

[20:51:00.0000] <myakura>
Hixie, does the spec say so? isn't <rt> supposed to close <rb> in this case?

[20:59:00.0000] <kennyluck>
Hixie, (re. "giving authors excuses to not use other clearly defined semantic elements"), I want to ask why in http://www.whatwg.org/specs/web-apps/current-work/multipage/introduction.html#introduction "This section is non-normative" is marked up as <i>. "This section is non-normative" is certainly not a technical term ("non-normative" is), and it doesn't seem to be something that belong to use cases of alternate voice. It is (at least to me) 

[20:59:01.0000] <kennyluck>
like a use case of <s> (for side comments).

[21:09:00.0000] <MikeSmith>
kennyluck: because it's not emphasis

[21:10:00.0000] <MikeSmith>
and because there are myriad valid use cases of italic type that have absolutely nothing to do with emphasis

[21:11:00.0000] <kennyluck>
oops, s/<s>/<small>/

[21:12:00.0000] <kennyluck>
<small> is for side comments, sorry about typo.

[21:16:00.0000] <kennyluck>
MikeSmith, (re. based on the previous comments from Koji, it seemed to me he was assuming that it got into the DOM as expected), I think he just didn't understand the situation described in Hixie's comment 11 (i.e. "These are both feature requests beyond what IE implements and thus should be

[21:16:01.0000] <kennyluck>
filed as separate bugs to be handled in a future version. (We can always _add_

[21:16:02.0000] <kennyluck>
<rb> later if it's really necessary for these cases.)")

[21:48:00.0000] <Hixie>
kennyluck: it's text that is offset from the main prose

[21:48:01.0000] <Hixie>
kennyluck: re examples of <u>, do you have any examples of the usage of proper name marks that aren't intended purely as examples of the usage of proper name marks? :-)

[21:48:02.0000] <Hixie>
kennyluck: i.e. "organic" usage?

[21:50:00.0000] <kennyluck>
Hixie, not on Web. I said so. I have pictures of text books, though.

[21:51:00.0000] <Hixie>
if nobody has used it on the whole web, then it's not a use case

[21:56:00.0000] <kennyluck>
Hixie, ok, that's worth noting.

[21:58:00.0000] <kennyluck>
Hixie, Question: isn't <small> more suitable for "This section is non-normative"?

[21:59:00.0000] <Hixie>
possibly. Certainly it's also suitable. <small> wasn't in the spec when I was writing those bits, iirc.

[22:01:00.0000] <kennyluck>
Anyway, I hope my point about  "giving authors excuses to not use other clearly defined semantic elements" is explained fairly enough.

[22:26:00.0000] <Hixie>
i missed that that was what you were trying to explain :-/

[22:26:01.0000] <Hixie>
are you saying that if we provide a way to mark up taxonomic designations, people will avoid using <small> for small print?

[22:26:02.0000] <Hixie>
that doesn't make much sense

[22:35:00.0000] <kennyluck>
Hixie, I was saying that if <i> is as broad and confusing as "text that is offset from the main prose", people will stop thinking <small> might be more semantically correct.

[23:13:00.0000] <Hixie>
kennyluck: i don't see the harm in that

[23:14:00.0000] <Hixie>
kennyluck: using more general elements (e.g. <span>) over more specific ones (e.g. <kbd>) is not a serious problem

[23:14:01.0000] <Hixie>
kennyluck: imho

[23:14:02.0000] <Hixie>
kennyluck: we can minimise it by providing few broad elements, but we can't eliminate it, since we always need at least one "default" element

[23:23:00.0000] <phrearch>
hello

[23:24:00.0000] <phrearch>
is there some html5 proposed/implemented api for touch/pressure yet?

[23:24:01.0000] <Hixie>
what do you mean by "html5"?

[23:24:02.0000] <phrearch>
huh?

[23:25:00.0000] <Hixie>
you mean a dom api?

[23:25:01.0000] <phrearch>
ah, eh more like a javascript api

[23:25:02.0000] <Hixie>
assuming you mean something like mouse events but for pressure-sensitive tablets, i believe the answer is no

[23:26:00.0000] <Hixie>
there might be some work on touch though

[23:26:01.0000] <Hixie>
not sure

[23:26:02.0000] <Hixie>
that's not really html per se

[23:26:03.0000] <phrearch>
i bought a wacom. they have a plugin for browsers, but it would be great if it would work crossplatform and without plugins

[23:26:04.0000] <phrearch>
no indeed

[23:27:00.0000] <phrearch>
im working on an opensource paint/pad app. having pressure data in the brushes would be great

[23:27:01.0000] <phrearch>
http://94.23.105.24:8000/psycopad/index.html

[23:27:02.0000] <phrearch>
still very early stuff

[23:28:00.0000] <phrearch>
started as a hello world canvas app, but i got some ideas to extend it with processing.js sketches and vector graphics

[23:44:00.0000] <kennyluck>
phrearch, perhaps you will be interested in this -> https://dvcs.w3.org/hg/webevents/raw-file/tip/touchevents.html

[23:44:01.0000] <phrearch>
kennyluck, thanks yes indeed

[23:45:00.0000] <phrearch>
seems like force is part of that event

[23:45:01.0000] <phrearch>
now hopefully there is some webkit branch that uses it

[01:22:00.0000] <annevk>
I guess what I most dislike about W3C charters is that the people who are putting the dates on them and do all the talk are not actually doing any of the work.

[01:45:00.0000] <annevk>
hmm, how can I postpone trying to define mutation events in detail

[01:46:00.0000] <zewt>
are you asking for procrastination tips

[01:46:01.0000] <zewt>
i'll come up with a list ... later

[01:46:02.0000] <annevk>
I'm gonna email www-dom with a bcc to public-webapps to announce the revamped DOM Events

[01:49:00.0000] <jgraham>
annevk: You could have a long, multi-year discussion about whether it is possible to drop mutation events, and what they should be replaced with

[01:50:00.0000] <annevk>
jgraham, we had a shorter variant of that, and the outcome was that IE9 is shipping with mutation event support

[01:51:00.0000] <jgraham>
annevk: Yeah, I know :)

[01:51:01.0000] <hsivonen>
we are all doomed

[01:51:02.0000] <jgraham>
(well I didn't know IE9 was getting mutation events)

[02:08:00.0000] <zcorpan>
i wonder if ie9 strips only the first instance of 'javascript:' when pasting into the address bar

[02:08:01.0000] <zcorpan>
otherwise it'd be simple to just do javascript:javascript:...

[02:09:00.0000] <jgraham>
/me wonders if pasting javascript:javascript: into the address bar is programmed to crash your computer in IE9

[03:19:00.0000] <annevk>
I hope I can still get people to make them asynchronous

[03:19:01.0000] <annevk>
The synchronous events that modify the tree before the modification happens (or some such) are where the real pain lies.

[03:20:00.0000] <annevk>
If they are asynchronous the event loop model can also move to DOM Core, which is probably for the better.

[04:26:00.0000] <smaug____>
annevk: so how does you web-dom-core events relate to DOM 3 Events

[04:26:01.0000] <smaug____>
event propagation is different

[04:26:02.0000] <smaug____>
and dom 3 events allow things what for example indexeddb uses

[04:26:03.0000] <annevk>
that sounds like a bug

[04:26:04.0000] <annevk>
it's meant to replace dom3events

[04:27:00.0000] <smaug____>
annevk: in your events, event target chain is only for node

[04:27:01.0000] <smaug____>
nodes

[04:27:02.0000] <smaug____>
and the chain misses Window, if I read the draft correctly

[04:27:03.0000] <annevk>
HTML5 covers how Window works already

[04:27:04.0000] <smaug____>
eh

[04:28:00.0000] <annevk>
so Indexed DB has some kind of hierarchical object model other than Nodes and uses event propagation on them?

[04:28:01.0000] <smaug____>
web-dom-core tries to clearly define how even propagates, and that propagation certainly doesn't include Window

[04:28:02.0000] <smaug____>
yeah, IndexedDB has  a tree or list

[04:29:00.0000] <smaug____>
of EventTargets

[04:29:01.0000] <annevk>
smaug____, HTML5 defines Window and says how it works together with DOM Events

[04:30:00.0000] <annevk>
smaug____, no need to duplicate that

[04:30:01.0000] <smaug____>
but web-dom-core basically dis-allows Window in the event target chain

[04:30:02.0000] <smaug____>
since "Let event path be a static ordered list of all ancestor nodes of event's target in tree order."

[04:30:03.0000] <zcorpan>
abarth: why [NoInterfaceObject] for Crypto?

[04:31:00.0000] <annevk>
smaug____, the way HTML5 defines it makes it work fine

[04:31:01.0000] <smaug____>
doing something else would violate step 1

[04:31:02.0000] <annevk>
I agree that if we want hierarchical structures to work in general that section requires some changing

[04:31:03.0000] <annevk>
that should not be too hard I guess

[04:35:00.0000] <annevk>
smaug____, btw, the way DOM3Events defines "phase" makes it limited to nodes

[04:36:00.0000] <annevk>
smaug____, I think that's why I limited it, also because I did not know about Indexed DB's usage

[04:36:01.0000] <annevk>
but that can be changed easily

[04:36:02.0000] <smaug____>
ok, that would be a bug in DOM 3 Events

[04:37:00.0000] <zewt>
i havn't looked at what idb is doing, but isn't it odd that it's using dom events that differently?

[04:37:01.0000] <smaug____>
I still don't quite understand why events should be merged to web-dom-core

[04:37:02.0000] <smaug____>
zewt: "differently" ?

[04:37:03.0000] <annevk>
because they are intertwined

[04:38:00.0000] <annevk>
Node inherits from EventTarget, Document defines createEvent

[04:38:01.0000] <annevk>
removeChild causes events to be dispatched

[04:39:00.0000] <smaug____>
I still don't get it

[04:40:00.0000] <zewt>
differently as in not also propagating along nodes; i'll have to look over that spec again when i'm less tired

[04:40:01.0000] <annevk>
smaug____, ok

[04:42:00.0000] <annevk>
I don't think it's too important, but it's more convenient to define them together

[04:43:00.0000] <annevk>
And since they're sort of fundamental to most things, it makes sense to me (and others I believe, you're the first to question it)

[04:44:00.0000] <Bagadood>
Hello

[04:45:00.0000] <Bagadood>
Anyone here?

[04:45:01.0000] <zcorpan>
yes

[04:45:02.0000] <Bagadood>
This is my first time here.

[04:45:03.0000] <smaug____>
annevk: I'm not really against merging them, but it is kind of strange time

[04:45:04.0000] <zcorpan>
Bagadood: welcome

[04:45:05.0000] <Bagadood>
Cool, thnx :)

[04:46:00.0000] <smaug____>
annevk: I assume there will be some problems when DOM 3 Events and you events have something defined differently, and both are still drafts...

[04:46:01.0000] <smaug____>
s/you/your/

[04:46:02.0000] <hsivonen>
I thought the plan was for Anne's / Ms2ger's specs to supercede Level 3

[04:47:00.0000] <hsivonen>
for browsers that is

[04:47:01.0000] <hsivonen>
and Level 3 to become a Java spec

[04:47:02.0000] <annevk>
smaug____, the plan at TPAC was that I could go ahead and define "Events" and it would evolve in parallel and eventually obsolete the other work (I thought)

[04:47:03.0000] <smaug____>
hsivonen: for Core yes, but I'm not so sure about Events

[04:48:00.0000] <smaug____>
annevk: it would make a lot sense to take mutation events from DOM 3 Events to DOM core

[04:48:01.0000] <annevk>
I do think the way I defined it (apart from some event propagation details apparently) is way clearer

[04:49:00.0000] <smaug____>
annevk: but so, your plan is to merge all of DOM 3 Events to Web-DOM-Core?

[04:49:01.0000] <annevk>
Clear conformance criteria, completely clear on all the details, etc.

[04:49:02.0000] <annevk>
smaug____, I don't think the rest of DOM 3 Events is "Core"

[04:49:03.0000] <annevk>
mouse/keyboard/etc. should really be defined elsewhere

[04:50:00.0000] <smaug____>
why custom event is "core" ?

[04:50:01.0000] <annevk>
e.g. for mouse events you really want to define them together with pointer-events

[04:50:02.0000] <annevk>
smaug____, it isn't really, but seemed to small and simple to leave out

[04:50:03.0000] <annevk>
smaug____, and now serves as a nice example of how to define your own events

[04:51:00.0000] <smaug____>
annevk: but you're going to take also mutation events?

[04:51:01.0000] <smaug____>
hmm, though we really want to get rid of those...

[04:51:02.0000] <annevk>
so I would love that

[04:51:03.0000] <annevk>
that would be better

[04:51:04.0000] <annevk>
but IE9 has them

[04:51:05.0000] <annevk>
you guys have them

[04:51:06.0000] <smaug____>
so?

[04:52:00.0000] <annevk>
WebKit has them and Opera has them

[04:52:01.0000] <annevk>
can we really kill them?

[04:52:02.0000] <smaug____>
all of the browsers have different subset of them

[04:52:03.0000] <jgraham>
/me strongly doubts it

[04:52:04.0000] <jgraham>
That we can kill them

[04:52:05.0000] <annevk>
are you going to remove them from Firefox after 4 ships?

[04:52:06.0000] <annevk>
I mean if that is a yes I can wait with adding them to the spec

[04:52:07.0000] <annevk>
because I'd love for that to work and I don't have a deadline here

[04:52:08.0000] <jgraham>
Even if they are not quite interoperable, everyone will have some content that depends on them

[04:52:09.0000] <annevk>
in fact, I'm leaving for three months soonish :)

[04:53:00.0000] <annevk>
the impression I got at TPAC was that nobody in fact was planning on killing them

[04:53:01.0000] <annevk>
maybe a couple

[04:53:02.0000] <annevk>
but not all

[04:53:03.0000] <annevk>
the only change I had the impression we might be able to make was to make them asynchronous

[04:54:00.0000] <smaug____>
since no one likes them, we really should try to get rid of them.

[04:54:01.0000] <smaug____>
if that doesn't work out, then it just doesn't

[04:54:02.0000] <smaug____>
and we need to keep them forever

[04:55:00.0000] <zcorpan>
making them async seems like a win

[04:55:01.0000] <smaug____>
but we haven't even tried

[04:55:02.0000] <annevk>
smaug____, alright, I will wait with figuring out mutation events

[04:55:03.0000] <annevk>
I really wasn't looking forward to that anyway :)

[04:56:00.0000] <smaug____>
annevk: :)

[04:56:01.0000] <smaug____>
it can be,hmm, interesting to define DOMSubtreeModified properly

[06:40:00.0000] <annevk>
smaug____, what to do with Progress Events by the way?

[06:40:01.0000] <annevk>
smaug____, reportedly Gecko supports two more members, do they need to be added to the spec?

[06:40:02.0000] <annevk>
smaug____, and are they the same or different?

[06:40:03.0000] <smaug____>
I'm hoping to get rid of those members

[06:41:00.0000] <smaug____>
they are from pre-Progress-Events-spec era

[06:41:01.0000] <smaug____>
same or different?

[06:43:00.0000] <annevk>
are they aliases or have different semantics?

[06:43:01.0000] <annevk>
but if you want to get rid of them that works

[06:44:00.0000] <annevk>
I guess then we can proceed with Progress Events

[06:44:01.0000] <smaug____>
they have different semantics

[06:44:02.0000] <smaug____>
at least when handling multipart xhr

[06:45:00.0000] <smaug____>
/me doesn't know whether others support multipart XHR

[06:51:00.0000] <annevk>
I hope we can get rid of that too

[07:01:00.0000] <smaug____>
multipart XHR is actually quite nice

[07:02:00.0000] <annevk>
XHR is so complex already

[07:02:01.0000] <annevk>
and full of holes in browsers

[07:49:00.0000] <annevk>
oh teehee

[07:49:01.0000] <annevk>
hashbangs was the thing i missed in the WHATWG Weekly

[07:50:00.0000] <annevk>
/me puts it on the list for next week

[07:57:00.0000] <annevk>
hmm

[07:57:01.0000] <annevk>
so if events can operate on an object tree

[07:57:02.0000] <annevk>
that would make event dispatching easier

[07:57:03.0000] <annevk>
but would require a definition of an arbitrary object tree

[07:58:00.0000] <annevk>
and ideally nodes just map onto that

[08:02:00.0000] <annevk>
meh

[08:06:00.0000] <annevk>
smaug____, so to be sure I checked Indexed DB

[08:06:01.0000] <annevk>
smaug____, nothing in there says events actually bubble

[08:07:00.0000] <smaug____>
propagate

[08:07:01.0000] <annevk>
smaug____, in fact, everything does not bubble and is not cancelable

[08:07:02.0000] <annevk>
smaug____, oh, you mean they can be captured?

[08:07:03.0000] <smaug____>
I wasn't talking about bubbling but about propagation

[08:07:04.0000] <smaug____>
yeah

[08:07:05.0000] <annevk>
smaug____, from which object?

[08:08:00.0000] <smaug____>
/me is in a meeting atm

[08:08:01.0000] <smaug____>
annevk: you could ask sicking

[08:08:02.0000] <annevk>
Indexed DB does not even define "tree" anywhere

[08:09:00.0000] <annevk>
or mention "propagate" other than in the context of an exception

[08:10:00.0000] <annevk>
anyway, once I figure out how, this should be easy

[08:11:00.0000] <annevk>
I'm not very pleased with the current "Nodes Model" either which is a mixture of copied terms from HTML and CSS

[09:25:00.0000] <Philip`>
http://www.computerworld.com/s/article/9209322/W3C_HTML5_will_be_finished_in_2014 - '"This is the first time we've been able to answer people's questions of when it will be done," said Ian Jacobs, head of W3C marketing and communications.'

[09:25:01.0000] <Philip`>
Sounds like the W3C is fairly confident in its prediction

[09:27:00.0000] <tw2113>
better than the 2023 or whatever prediction

[09:27:01.0000] <TabAtkins>
"better" how?

[09:27:02.0000] <Ms2ger>
Then again, 2022 is more likely

[09:27:03.0000] <jgraham>
Philip`: Well that's just wrong. Before they were telling people it would be done in 2010

[09:29:00.0000] <jgraham>
Although I suppose as a press quote "this is the second date we have published for HTML5 to be complete, and just like the last one this one is believed to be wildly optimistic by the people actually doing the work" isn't so snappy

[09:30:00.0000] <jgraham>
Although possibly he could go on to explain the W3C definition of the word "Last" as in "Last Call" which means something quite different to any other definition of "last"

[09:31:00.0000] <jgraham>
and watch as the reporter's head explodes

[09:31:01.0000] <jgraham>
Could be a fun game

[09:31:02.0000] <tw2113>
i'd give a dollar to see that

[09:32:00.0000] <Ms2ger>
That's more than most people would give for the article

[09:33:00.0000] <jgraham>
"The feedback from this "Last Call" is expected to be quite considerable and could result in another revision of the document."

[09:33:01.0000] <jgraham>
Someone tell Hixie he is only allowed to make one edit after last call :)

[09:33:02.0000] <jgraham>
/me is just being mean now

[09:34:00.0000] <TabAtkins>
So, I kind of want to work on defining an "Image Profile" for SVG, which would cut out the more complex/buggy parts of it that browsers currently hack around when using SVG in image contexts.

[09:34:01.0000] <TabAtkins>
The idea made one of our security guys happy this morning.

[09:48:00.0000] <TabAtkins>
AryehGregor: FYI, since you were talking about the "block this domain" link in Google offered by the extensions..

[09:48:01.0000] <TabAtkins>
Apparently we did it that way because it was faster: http://news.ycombinator.com/item?id=2218542

[10:16:00.0000] <AryehGregor>
TabAtkins++ on image profile for SVG.

[10:17:00.0000] <AryehGregor>
What I'd really like is an image profile for SVG with a different file extension and MIME type.

[10:17:01.0000] <AryehGregor>
Currently you can let users submit arbitrary PNG/GIF/JPEG/etc. and just throw it up on your web server with no validation and it's safe.

[10:17:02.0000] <TabAtkins>
image/svgi

[10:17:03.0000] <AryehGregor>
But not SVG.

[10:17:04.0000] <AryehGregor>
+xml?

[10:17:05.0000] <TabAtkins>
Nuts to the +xml.

[10:18:00.0000] <TabAtkins>
/me may have to bow to the mimetype gods, for they are crotchety and demanding.

[10:18:01.0000] <AryehGregor>
If you don't add +xml, maybe your new MIME type won't be registered at the IANA for years!  Totally unlike image/svg+xml.

[10:18:02.0000] <TabAtkins>
I now need to go back in time and make full svg only use application/svg+xml, so I can reserve image/svg for myself.

[10:20:00.0000] <TabAtkins>
/me would not use a time machine responsibly if given one.

[10:20:01.0000] <AryehGregor>
/me finds that the easiest way in XChat to re-auth if the first auth doesn't go through is just to reconnect

[10:24:00.0000] <Ms2ger>
Anything interesting in the i/b/u discussion earlier?

[10:31:00.0000] <AryehGregor>
Where, in #whatwg or someplace else?

[10:31:01.0000] <TabAtkins>
Here, overnight.

[10:58:00.0000] <jgraham>
Ms2ger: Dunno, I tuned it out on the basis that b/i/u discussions are disproportionately unproductive

[11:00:00.0000] <Ms2ger>
That's why I was hoping for someone else to filter out anything productive

[11:00:01.0000] <AryehGregor>
Is anyone else getting a 500 error when trying to commit to dvcs.w3.org?

[11:00:02.0000] <Ms2ger>
Until then, I'm assuming there wasn't anything

[11:01:00.0000] <Ms2ger>
What I'm getting is unresponsive script dialogs from your reflection test

[11:01:01.0000] <annevk>
look at that, Ms2ger is online

[11:01:02.0000] <AryehGregor>
Ms2ger, which test URL and which browser?

[11:01:03.0000] <annevk>
Ms2ger, you're cool with renaming too right?

[11:01:04.0000] <Ms2ger>
Yeah

[11:01:05.0000] <Ms2ger>
http://localhost/tests/html-official/submission/AryehGregor/reflection/reflection-onepage.html, Minefield

[11:02:00.0000] <AryehGregor>
/me isn't seeing that in 4b11

[11:02:01.0000] <AryehGregor>
It doesn't seem to work, though.

[11:02:02.0000] <annevk>
I wonder if we should have a copy of DOM Core that can be hosted on html5.org

[11:02:03.0000] <Ms2ger>
I dunno

[11:02:04.0000] <AryehGregor>
http://aryeh.name/tests-root/tests/submission/AryehGregor/reflection/reflection-original.html works fine.

[11:02:05.0000] <AryehGregor>
Blame jgraham.

[11:02:06.0000] <AryehGregor>
(I'll be splitting up the -onepage version, though.)

[11:03:00.0000] <annevk>
It does not seem like the other html5.org specs have a license so I guess not

[11:03:01.0000] <AryehGregor>
Okay, wait, the -onepage one is broken somehow.

[11:03:02.0000] <AryehGregor>
Oh, no it's not.

[11:03:03.0000] <annevk>
I guess I should worry about that soonish so hsivonen doesn't have to

[11:03:04.0000] <AryehGregor>
It just stays blank for a while before the results render.

[11:03:05.0000] <AryehGregor>
Maybe because it's a 20,000+ row table.

[11:04:00.0000] <AryehGregor>
The layout seems to take longer than actually running the tests.

[11:05:00.0000] <Ms2ger>
On that note

[11:05:01.0000] <Ms2ger>
AryehGregor, can I use HTML's license for DOM Range?

[11:05:02.0000] <AryehGregor>
You can use whatever license you want, as far as I care.

[11:05:03.0000] <AryehGregor>
Hixie told me to make all my Google stuff public domain, and I have no problem with that.

[11:06:00.0000] <Ms2ger>
k

[11:13:00.0000] <AryehGregor>
Okay, I give up: where is "ToString" defined here?  http://dev.w3.org/2006/webapi/WebIDL/

[11:13:01.0000] <AryehGregor>
"the ToBoolean, ToNumber, ToUint16, ToInt32, ToUint32, ToString and ToObject operators referenced in this section are defined in section 9."

[11:13:02.0000] <AryehGregor>
I don't see them.

[11:13:03.0000] <AryehGregor>
(Could terms like this be linked?)

[11:15:00.0000] <gsnedders>
AryehGregor: They're defined in ES5

[11:15:01.0000] <gsnedders>
"Algorithms in this section use the conventions described in section 5.2 and the ToBoolean, ToNumber, ToUint16, ToInt32, ToUint32, ToString and ToObject operators referenced in this section are defined in section 9."

[11:16:00.0000] <AryehGregor>
Section 9 of the ES spec.

[11:16:01.0000] <AryehGregor>
Oh.

[11:16:02.0000] <AryehGregor>
Is this the right spec to look at?  http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf

[11:17:00.0000] <gsnedders>
AryehGregor: If it says Fifth Edition on it, yes.

[11:17:01.0000] <Ms2ger>
MikeSmith has an HTML version, fwiw

[11:17:02.0000] <AryehGregor>
Now I have the problem that WebIDL doesn't match reality here.  At least for null.

[11:18:00.0000] <Ms2ger>
That's known

[11:18:01.0000] <AryehGregor>
ES5 says "null".  Opera does "null", Gecko does "", WebKit does something broken for reflected attributes (removes the attribute).

[11:18:02.0000] <AryehGregor>
Well, if it's not desired then I don't want to test it.

[11:19:00.0000] <AryehGregor>
But they agree on "undefined", so I'll test that.

[11:20:00.0000] <annevk>
well, the idea is that Web IDL interfaces to ECMAScript will do null -> ""

[11:20:01.0000] <annevk>
but inside ECMAScript null -> "null"

[11:21:00.0000] <gsnedders>
/me is unconvinced losing what little consistency the platform already has is a good idea

[11:21:01.0000] <gsnedders>
/me seems to remember annevk making that argument a few weeks ago :P

[11:22:00.0000] <annevk>
gsnedders, there's lots of sites that depend on null -> ""

[11:22:01.0000] <gsnedders>
annevk: ah :(

[11:23:00.0000] <AryehGregor>
Opera seems to do null -> "null".

[11:23:01.0000] <annevk>
yeah, it's problematic

[11:23:02.0000] <annevk>
it's being changed or is changed

[11:30:00.0000] <AryehGregor>
Is there a way to do casting in JavaScript without special-casing for different types?

[11:30:01.0000] <AryehGregor>
Like I know you can do foo + "" to convert to string according to ES algorithms.

[11:31:00.0000] <AryehGregor>
And !!foo for boolean, and whatever.

[11:31:01.0000] <franksalim>
AryehGregor: like String(foo) or Boolean(foo)?

[11:31:02.0000] <AryehGregor>
Does that work?

[11:31:03.0000] <bga_>
yes

[11:31:04.0000] <AryehGregor>
Yes, thaks.

[11:31:05.0000] <AryehGregor>
thanks.

[11:33:00.0000] <AryehGregor>
Given the name of a JS type, can I call something to cast to that type?  I guess I could do eval(typeName) to get the function, but that seems sort of horrible.

[11:33:01.0000] <othermaciej>
JS does not have typecasting

[11:34:00.0000] <AryehGregor>
It has type conversion algorithms.

[11:34:01.0000] <othermaciej>
that is true

[11:34:02.0000] <franksalim>
AryehGregor: those functions seem to be on the global object, at least in the browser. window["String"](foo) works

[11:34:03.0000] <AryehGregor>
Oh, that works.

[11:34:04.0000] <AryehGregor>
Thanks.

[11:34:05.0000] <franksalim>
np

[11:38:00.0000] <annevk>
so for a generic tree framework...

[11:39:00.0000] <annevk>
a type of object (e.g. node) can be said to participate in it or something

[11:39:01.0000] <annevk>
which means it follows a set of constraints

[11:39:02.0000] <annevk>
that lead to things like "ancestor", "parent", "child" etc. being defined

[11:40:00.0000] <annevk>
so for nodes we'd say they are "tree-based", following the constraints described in the Nodes Model

[11:41:00.0000] <annevk>
and from that follows that you can say ancestor of a particular node

[11:42:00.0000] <annevk>
and since we don't say XMLHttpRequest is tree-based there's no question about its event path, it's simply empty

[11:46:00.0000] <AryehGregor>
Apparently Opera's string handling isn't binary-safe: data:text/html,<!doctype html><script>var el = document.createElement("span"); el.title = "\0abc"; alert(el.getAttribute("title").length);</script>

[11:46:01.0000] <AryehGregor>
That just caused it to fail several thousand of my tests.  :)

[11:46:02.0000] <gsnedders>
AryehGregor: It's binary-safe in places :P

[11:46:03.0000] <annevk>
binary safe?

[11:47:00.0000] <gsnedders>
AryehGregor: And there's no such thing as binary data in JS, if you want to be pedantic.

[11:47:01.0000] <Ms2ger>
It just fails for null, no?

[11:48:00.0000] <annevk>
yeah, stuff is null-terminated

[11:48:01.0000] <gsnedders>
Ms2ger: Yeah, in places in DOM

[11:48:02.0000] <Philip`>
/me puts \0s in lots of his canvas tests, just to annoy Opera

[11:49:00.0000] <annevk>
heh

[11:49:01.0000] <annevk>
we'll fix it one day

[11:49:02.0000] <Philip`>
Ensuring that canvas.getContext('2d\0') fails provides precisely zero value to humanity

[11:50:00.0000] <Philip`>
but that's not my concern so I'll test it anyway

[11:51:00.0000] <bga_>
if(window.title == '') { window.title = 'a\0b'; location.reload() } else { alert(window.title.length) }

[11:52:00.0000] <bga_>
s/title/name/g

[12:00:00.0000] <AryehGregor>
/me discovers async is no longer a reflected attribute:     script.async: IDL get with DOM attribute unset (expected false, got true)

[12:05:00.0000] <AryehGregor>
Is anyone else getting loads of errors with "-u" + little box + "8" in them here in Opera 11, in the number parts of the test?  I have no idea what's up with that.  http://aryeh.name/tests-root/tests/submission/AryehGregor/reflection/reflection-original.html

[12:08:00.0000] <AryehGregor>
Oops, looks like IE9 also isn't binary-safe here.

[12:08:01.0000] <AryehGregor>
Guess it fails several thousand tests on that too.

[12:14:00.0000] <Ms2ger>
Uh

[12:14:01.0000] <Ms2ger>
/me summons jgraham 

[12:14:02.0000] <AryehGregor>
?

[12:15:00.0000] <AryehGregor>
/me discovered that Firefox strips leading and trailing whitespace on setAttribute() for audio/img/source/video.src, yay for corner-case bugs

[12:17:00.0000] <Hixie>
karlcow: did you notice how every single result in the search you did for "whatwg" on the w3c site is either blog comments or quotes? you pretty much proved my point.

[12:22:00.0000] <karlcow>
Hixie: in which way? I do not understand

[12:23:00.0000] <Hixie>
my point was that the w3c doesn't talk about the whatwg. the results of the search you cited demonstrate that the w3c doesn't talk about the whatwg, just that people comment about the whatwg on w3c blog posts

[12:23:01.0000] <jgraham>
Ms2ger: here now

[12:24:00.0000] <Ms2ger>
Why does it make sense to use add_completion_callback in window.onload?

[12:24:01.0000] <karlcow>
http://www.w3.org/QA/2007/11/tp-links-feast.html

[12:25:00.0000] <karlcow>
"The WHATWG at the W3C technical plenary" ->http://blog.whatwg.org/the-whatwg-at-the-w3c-technical-plenary

[12:25:01.0000] <jgraham>
Ms2ger: where?

[12:25:02.0000] <jgraham>
Completion never happens until onload

[12:26:00.0000] <jgraham>
But I don't think it is necesarily the case that window.onload is called before addEventListener registered handlers. Or is it?

[12:27:00.0000] <Hixie>
karlcow: you think the w3c linking to a whatwg blog post as one of the last links in a huge list of links to blog posts about the w3c is evidence that the w3c is happy about the whatwg and has no problem working with them? now you're stretching, even for you.

[12:27:01.0000] <Ms2ger>
(I'm assuming the answer is "it doesn't")

[12:28:00.0000] <Hixie>
karlcow: has there ever been a mention (any mention, not even a positive mention!) of the whatwg on the w3c home page? (for years the whatwg home page linked to the w3c)

[12:29:00.0000] <Hixie>
karlcow: has there ever been a w3c news item where the w3c positions the w3c as equal partners, even when talking about the HTML spec? (the whatwg frequently mentions the w3c when talking about what we do)

[12:29:01.0000] <jgraham>
Ms2ger: I am confused

[12:30:00.0000] <jgraham>
What have I done wrong?

[12:31:00.0000] <Ms2ger>
/me tests again

[12:31:01.0000] <karlcow>
/me would have not expected to see hixie in the role of victim. That is definitely new. 

[12:31:02.0000] <Hixie>
victim?

[12:32:00.0000] <karlcow>
to your questions about w3c not citing on the blog. I agree. There was not that much.

[12:32:01.0000] <Hixie>
i'm just pointing out that the w3c isn't cooperating, and the whatwg is, so danny's suggestion that the situation is the reverse is incorrect

[12:32:02.0000] <Hixie>
you seem to want to disagree with everything i say, whether it's true or not :-)

[12:33:00.0000] <webr3>
lol karlcow, you can't disagree w/ that

[12:33:01.0000] <webr3>
if you do you prove it!

[12:33:02.0000] <karlcow>
Hixie: you are wrong about w3c not participating. This, I'm sure for it, and for a very good reason.

[12:33:03.0000] <AryehGregor>
Hixie, you should really stop concluding that other people's disagreements with you are irrational or dishonest.  It's generally not true, and if it is, it doesn't help to say it.

[12:33:04.0000] <karlcow>
I was part of it.

[12:34:00.0000] <webr3>
/me sigh - i was geniunely optimistic that people might be looking to the future rather than the past

[12:34:01.0000] <AryehGregor>
I think it's fairly clear that the average WHATWG adherent participates in and cares about the W3C much more than the average W3C adherent participates in or cares about the WHATWG, where by "adherent" I mean someone who prefers one venue to other.

[12:34:02.0000] <Ms2ger>
jgraham, http://dvcs.w3.org/hg/html/file/0f677593d693/tests/resources/testharness.js#l641

[12:34:03.0000] <karlcow>
That you didn't get the type of participation you were expecting, I can acknowledge that.

[12:34:04.0000] <Hixie>
AryehGregor: i was merely pointing out what karl's arguments felt like, no conclusions drawn.

[12:35:00.0000] <karlcow>
as webr3 is saying, I have a lot more hope for the future than the past.

[12:35:01.0000] <Ms2ger>
jgraham, the callbacks are run before that

[12:35:02.0000] <Hixie>
karlcow: my point was merely regarding danny's assertions, i wasn't trying to make any statement beyond that. I'm glad you now agree with those assertions despite your earlier contradiction of them.

[12:35:03.0000] <karlcow>
AryehGregor: that has been often my point. WHATWG and W3C are often the same participants.

[12:36:00.0000] <karlcow>
Aka people loving technologies, the Web and want to improve it

[12:36:01.0000] <karlcow>
Hixie: please, never put your words in my mouth ;) that would be better

[12:36:02.0000] <jgraham>
Ms2ger: If they are it is a big

[12:36:03.0000] <jgraham>
*bug

[12:37:00.0000] <webr3>
aye for all the two different names, it's still the same people - just need to get an agreed process that's best for the web, you know, balance evolution w/ interop

[12:37:01.0000] <jgraham>
Ms2ger: Because the completion callback should never be run before all_done() is true

[12:37:02.0000] <webr3>
tbh I don't have a scooby-doo why it's taking so long :|

[12:37:03.0000] <karlcow>
webr3 exactly

[12:37:04.0000] <Hixie>
karlcow: wait, you still think danny is right despite saying that my points were correct? now i'm just confused.

[12:37:05.0000] <jgraham>
and all_done() can't be true until it is set there

[12:37:06.0000] <jgraham>
supposedly

[12:38:00.0000] <jgraham>
s/it/all_loaded/

[12:38:01.0000] <karlcow>
Hixie, I see you are confused. This is not a surprise :)

[12:38:02.0000] <Ms2ger>
Let me check

[12:38:03.0000] <webr3>
danny didn't get it right (wel half did half didn't) the future bit made sense, the past bit about subverted didn't evoke the correct situation

[12:39:00.0000] <webr3>
"we want xhtml 2.0" "umm the web needs html updated" "we're sticking to xhtml" "fine I'll do html elsewhere" "gah you were right" "yup" - how do we sort that

[12:40:00.0000] <webr3>
that's about it in a nutshell isn't it?

[12:40:01.0000] <Hixie>
karlcow: it's not a surprise that you confuse me? no, i guess not. :-) i rarely understand what you mean, you seem to never want to state an actual position, just imply one.

[12:40:02.0000] <TabAtkins>
webr3: Yup.

[12:40:03.0000] <Hixie>
karlcow: you should be more assertive :-)

[12:41:00.0000] <karlcow>
damn the poet.

[12:41:01.0000] <karlcow>
I'm not a computer

[12:42:00.0000] <Hixie>
being assertive is a human leadership trait, not a computer trait.

[12:42:01.0000] <webr3>
the incredibly stupid thing is, that afaict, everybody wants the same thing :| certainly everybody I've ever spoken to about html on all "sides"

[12:42:02.0000] <Ms2ger>
jgraham, all_done() is false

[12:43:00.0000] <karlcow>
I think it's where we disagree. I can be assertive on that. leadership is one of the worse things :) (not trying to convince you)

[12:44:00.0000] <Hixie>
karlcow: being assertive is also an important human trait when having discussions, even when not leading

[12:44:01.0000] <jgraham>
Ms2ger: When the completion callbck is being called? Or when it is being set?

[12:45:00.0000] <Ms2ger>
In Tests.prototype.notify_complete

[12:45:01.0000] <jgraham>
Umm, that seems wrong

[12:45:02.0000] <karlcow>
Hixie: not in my values ;)

[12:45:03.0000] <Ms2ger>
Yes

[12:45:04.0000] <jgraham>
Ms2ger: TC?

[12:45:05.0000] <Hixie>
karlcow: if you're going to argue with me, as you seem wont to do, you will find that our lives are much more pleasant if you can assert your statements positively rather than implying them and being unsurprised when i have no idea what you're saying

[12:45:06.0000] <Hixie>
karlcow: being vague is not a positive human communication trait

[12:47:00.0000] <karlcow>
:)

[12:48:00.0000] <AryehGregor>
jgraham, it just stops at "Running, 63280 complete 0 remain" in all browsers I test on.  :(  http://aryeh.name/tests-root/tests/submission/AryehGregor/reflection/reflection-onepage.html

[12:48:01.0000] <AryehGregor>
Time to split it up.

[12:49:00.0000] <jgraham>
AryehGregor: Oh

[12:49:01.0000] <jgraham>
I can look at that

[12:49:02.0000] <Ms2ger>
jgraham, that's the TC

[12:49:03.0000] <AryehGregor>
That would be nice, thanks.

[12:49:04.0000] <rgervais>
what's the difference between <section> and <div> and can someone please provide a good a example of when to use <section> in HTML5

[12:49:05.0000] <jgraham>
/me thinks 63280 tests in a file doesn't meet the criteria for "reduced testcase"

[12:50:00.0000] <jgraham>
:p

[12:50:01.0000] <Ms2ger>
rgervais, see the spec

[12:50:02.0000] <Hixie>
rgervais: <section> is for chapters, subsections of blog posts, etc, while <div> is for styling hooks.

[12:50:03.0000] <jgraham>
AryehGregor: BTW, we can probably fix the output to suck less

[12:50:04.0000] <Hixie>
rgervais: there are a number of examples for <section> in the spec, e.g. http://www.whatwg.org/specs/web-apps/current-work/complete/sections.html#the-section-element

[12:51:00.0000] <rgervais>
Ms2ger: I saw the spec but I'm a dumb person and a basic explanation

[12:51:01.0000] <nessy>
rgervais: I've seen a template for slides that uses <section> for every slide and the whole presentation is a single html page - I liked that use of <section>

[12:51:02.0000] <rgervais>
Hixie: what's a 'chapter'?

[12:51:03.0000] <Hixie>
rgervais: like in a book

[12:52:00.0000] <rgervais>
well this is the web, I need a real use case scenario

[12:52:01.0000] <rgervais>
let me check that link

[12:52:02.0000] <rgervais>
hopefully it breaks it down

[12:52:03.0000] <rgervais>
not a book example

[12:52:04.0000] <rgervais>
subsections in blogs, ok that's one

[12:53:00.0000] <rgervais>
nessy link?

[12:54:00.0000] <rgervais>
I'm looking at the spec againn and just wonder why not use a <div> instead of a section

[12:54:01.0000] <rgervais>
Hixie: you said for styling hooks

[12:54:02.0000] <craigbarnes>
because a div implies nothing

[12:54:03.0000] <rgervais>
so basically sections shouldn't be styled?

[12:54:04.0000] <craigbarnes>
one is semantic the other is for general use

[12:54:05.0000] <AryehGregor>
jgraham, if you want to look into it, test with this, because I'm in the middle of changing things: http://dvcs.w3.org/hg/html/raw-file/859abfc6fdf2/tests/submission/AryehGregor/reflection/reflection-onepage.html

[12:55:00.0000] <rgervais>
craigbarnes: I see..

[12:55:01.0000] <nessy>
rgervais: for example http://videos.mozilla.org/serv/blizzard/audio-slideshow/

[12:56:00.0000] <Hixie>
rgervais: you can style <section> too, it's just <div> is for anything at all, but <section> is just for sections.

[12:56:01.0000] <craigbarnes>
I just said that :)

[12:56:02.0000] <craigbarnes>
kind of

[12:57:00.0000] <rgervais>
OK.  what's the definition of a 'section'?

[12:57:01.0000] <craigbarnes>
rgervais, that's what the spec is for

[12:57:02.0000] <craigbarnes>
it's all laid out nicely for you to read ;)

[12:58:00.0000] <rgervais>
I've read the spec, I just need a dumbed down definition

[12:58:01.0000] <Ms2ger>
A part of a document with a header

[12:58:02.0000] <Hixie>
rgervais: see the dictionary :-)

[12:58:03.0000] <Ms2ger>
Roughly

[12:58:04.0000] <craigbarnes>
yeah the dictionary nails it

[12:59:00.0000] <Hixie>
rgervais: if you have specific examples you want us to give a "yay" or "nay" on that might help

[12:59:01.0000] <rgervais>
Ms2ger: ok kind of make sense

[12:59:02.0000] <rgervais>
so if a group of p tags

[12:59:03.0000] <rgervais>
don't have a header

[13:00:00.0000] <rgervais>
then use a <div>

[13:00:01.0000] <rgervais>
?

[13:00:02.0000] <jgraham>
Why are they a group?

[13:00:03.0000] <craigbarnes>
It's a semantic, you can't yay or nay a use case based on tags

[13:00:04.0000] <craigbarnes>
it's based on content

[13:00:05.0000] <craigbarnes>
s/semantic/semantic tag/

[13:01:00.0000] <Ms2ger>
s/tag/element/

[13:01:01.0000] <craigbarnes>
yeah that's what i meant

[13:01:02.0000] <craigbarnes>
thanks

[13:02:00.0000] <rgervais>
jgraham: example..  <p>hello</p><p>another paragraph</p>

[13:02:01.0000] <rgervais>
should I wrap that in <section> or <div>

[13:02:02.0000] <rgervais>
or is this example too generic

[13:02:03.0000] <Ms2ger>
It is

[13:02:04.0000] <craigbarnes>
yes

[13:02:05.0000] <rgervais>
I've left out h tags

[13:02:06.0000] <rgervais>
so no headings

[13:03:00.0000] <craigbarnes>
I think you're over-thinking it

[13:03:01.0000] <craigbarnes>
it's not that complicated

[13:03:02.0000] <craigbarnes>
if you could refer to it generically as a section then you can probably use a section element

[13:04:00.0000] <nessy>
I like to think of <section> elements as an opportunity to have the main html elements available to me again without influencing the rest of the document, such as h1, h2, p etc

[13:04:01.0000] <rgervais>
I see..

[13:05:00.0000] <craigbarnes>
the gotchas are in the spec

[13:05:01.0000] <rgervais>
well I'll keep looking into that, thanks for the info on that so far

[13:06:00.0000] <rgervais>
some other questions I have in general regarding HTML5

[13:06:01.0000] <rgervais>
since it's technically still a draft, when will it finalized

[13:06:02.0000] <rgervais>
and do you guys recommend using it if it isn't final

[13:07:00.0000] <Hixie>
the whatwg spec is a standard now, not a draft

[13:07:01.0000] <Hixie>
http://whatwg.org/c

[13:08:00.0000] <craigbarnes>
Don't wait to start using it

[13:10:00.0000] <craigbarnes>
There's no such thing as final

[13:10:01.0000] <craigbarnes>
that true in every area of technology :)

[13:10:02.0000] <rgervais2>
true, I say that because

[13:10:03.0000] <webr3>
have to agree, use "html" now - just check the support for the "new" features you want

[13:11:00.0000] <rgervais2>
say you use things and then all of a sudden it's no longer valid

[13:11:01.0000] <rgervais2>
because of changes

[13:11:02.0000] <rgervais2>
that's what I mean

[13:11:03.0000] <webr3>
- http://caniuse.com/ is your friend

[13:12:00.0000] <craigbarnes>
The spec if going to change so drastically that things just "break"

[13:12:01.0000] <karlcow>
rgervais2: in which circumstances do you try to be valid? What are the benefits? (not asking you to not be valid)

[13:13:00.0000] <craigbarnes>
And they are going to great lengths to consider these things before they implement them

[13:13:01.0000] <rgervais2>
karlcow: Actually I don't necessarily need to my HTML to validate but if I use elements, tags approved in working draft

[13:14:00.0000] <rgervais2>
and then gone later

[13:14:01.0000] <rgervais2>
webr3: thanks for that

[13:14:02.0000] <rgervais2>
that is helpful

[13:14:03.0000] <craigbarnes>
you may have to clean up a bunch of vendor prefixes in your CSS and "polyfills" in your JavaScript etc.

[13:14:04.0000] <rgervais2>
craigbarnes: makes sense

[13:14:05.0000] <karlcow>
rgervais2: use things which are widely deployed

[13:15:00.0000] <karlcow>
if they are not, use them for you, for testing, for experimenting. And use them only in production when they are deployed.

[13:15:01.0000] <rgervais2>
is it OK if I just go ahead and start developing sites with the new doctype?

[13:15:02.0000] <rgervais2>
without no blacklash?

[13:15:03.0000] <karlcow>
It depends on your business constraints

[13:15:04.0000] <Philip`>
rgervais2: Web browsers don't want to make pages stop working, so if you make something that runs now then it should continue to run forever

[13:15:05.0000] <karlcow>
<!doctype html> is the one which has always been parsed by browsers

[13:15:06.0000] <craigbarnes>
rgervais2, yes, you can do that right away

[13:15:07.0000] <craigbarnes>
you just have to learn what you can use blindly

[13:15:08.0000] <craigbarnes>
and what you need to learn the implications of

[13:16:00.0000] <Philip`>
rgervais2: (There's no real constraint on making pages fail the validator, though - if you do something now that's considered bad practice a decade from now then your page will be reported as invalid)

[13:16:01.0000] <rgervais2>
Philip`: I'm not for a page necessary validating, I meant just valid elements

[13:16:02.0000] <rgervais2>
craigbarnes: makes sense

[13:16:03.0000] <craigbarnes>
rgervais2, the best thing you can do right now is understand why people are telling you these things instead of just asking and doing

[13:17:00.0000] <karlcow>
for example html5 new elements such as section are still not widely supported out of the box.

[13:17:01.0000] <karlcow>
the support is different from browser to browser

[13:17:02.0000] <craigbarnes>
that way when the spec has settled down a little, you'll be way ahead of the game

[13:17:03.0000] <karlcow>
It changes quickly and there is hope that the situation will improve at a fast pace

[13:18:00.0000] <karlcow>
it all depends on your business constraints.

[13:19:00.0000] <rgervais2>
karlcow: generall the browsers I code for are IE7 and up and of course FF, Safari, Chrome

[13:19:01.0000] <webr3>
rgervais2, yes just use what features of html you want and that are deployed, unless you think every browser can be recalled - they all support "html" and there does exist a common subset of the latest spec which is avail accross the board, and emulatable where not - tis safe to use, and was /ages/ ago

[13:19:02.0000] <webr3>
html 5 is just an old promise that needs to be fullfilled, after that it'll be far more itteratively updated I'm sure, whether that's in w3c or whatwg, or both together

[13:20:00.0000] <karlcow>
rgervais, you can use <!doctype html> but avoid new html5 elements, and some very new things of the DOM.

[13:20:01.0000] <karlcow>
if you want to have no troubles in IE7

[13:20:02.0000] <rgervais2>
karlcow: OK

[13:26:00.0000] <rgervais2>
thanks guys for all the input

[13:26:01.0000] <rgervais2>
appreciated

[13:27:00.0000] <AryehGregor>
Yay, split-up version: http://dvcs.w3.org/hg/html/raw-file/41dfca6a6630/tests/submission/AryehGregor/reflection/reflection-metadata.html

[13:28:00.0000] <karlcow>
/me was wondering what was making the CPU high

[13:29:00.0000] <karlcow>
this is the document of AryehGregor.

[13:29:01.0000] <karlcow>
Interesting

[13:29:02.0000] <AryehGregor>
Hmm?

[13:30:00.0000] <karlcow>
AryehGregor: the document makes my CPU hot for a little while then once the page has been created. it is ok. back to normal.

[13:31:00.0000] <jgraham>
Oh, it's a silly bug

[13:31:01.0000] <karlcow>
my normal being usually high 25%. because of my too many tabs

[13:31:02.0000] <jgraham>
The harness times out

[13:32:00.0000] <karlcow>
aah

[13:32:01.0000] <Ms2ger>
That makes sense

[13:32:02.0000] <jgraham>
Yeah

[13:33:00.0000] <Ms2ger>
Mochitest has a way to request a longer timeout ;)

[13:33:01.0000] <jgraham>
So all_done() is false and the load event hasn't fired

[13:33:02.0000] <karlcow>
/me who thought that he could claim that AryehGregor was making me hot

[13:33:03.0000] <karlcow>
damn

[13:33:04.0000] <jgraham>
You can request a longer timeout

[13:34:00.0000] <Ms2ger>
Even better

[13:34:01.0000] <jgraham>
do setup({timeout:whatever})

[13:34:02.0000] <jgraham>
where whatever is in ms

[13:34:03.0000] <Ms2ger>
Oh, new things

[13:35:00.0000] <AryehGregor>
Is that "timeout" instead of timeout?

[13:35:01.0000] <jgraham>
Not sure what the best way to fix the bug that if it times out and the load event hasn't fired, we don't report anything

[13:35:02.0000] <jgraham>
AryehGregor: Either is fine

[13:36:00.0000] <Ms2ger>
You could add the completion callback earlier

[13:36:01.0000] <AryehGregor>
Interesting, I didn't know JS allowed that.

[13:36:02.0000] <karlcow>
http://www.w3.org/mid/4D5AF12E.5010808⊙gd

[13:36:03.0000] <jgraham>
Yeah, I could, but the log element might not be avaliable

[13:36:04.0000] <TabAtkins>
JSON is stricter than JS.

[13:36:05.0000] <Ms2ger>
And then check if there's a div#log when the callback is run

[13:37:00.0000] <jgraham>
Yeah, that seems sensible

[13:37:01.0000] <AryehGregor>
Magic.

[13:39:00.0000] <karlcow>
indeed a lot better

[13:41:00.0000] <AryehGregor>
Should I make each reflects() a test and each assertion an assertion, or leave each assertion as its own test?

[13:41:01.0000] <AryehGregor>
Hmm.

[13:41:02.0000] <AryehGregor>
I'm inclined toward the latter, actually.

[13:42:00.0000] <AryehGregor>
It makes it kind of useless to debug, since browsers will fail most of the tests and one assertion's failure will mask another's, but that's why I have the original version.

[13:42:01.0000] <AryehGregor>
Opinions?

[13:43:00.0000] <AryehGregor>
Actually, that would probably make it fast enough that the one-page version would be usable.  :)

[13:45:00.0000] <Ms2ger>
Former

[13:47:00.0000] <AryehGregor>
I meant I was inclined toward the former.

[13:47:01.0000] <AryehGregor>
Not the latter.

[13:47:02.0000] <AryehGregor>
Why do you prefer the former too?

[14:00:00.0000] <AryehGregor>
/me discovers he has no idea how "this" actually works

[14:01:00.0000] <zewt>
the general rule of thumb for "this" is: however you want it to work, that's how it doesn't

[14:04:00.0000] <Ms2ger>
AryehGregor, you can use var t = async_test(msg); t.step(function, this); t.done()

[14:18:00.0000] <jgraham>
/me wonders why AryehGregor needs to know how "this" works 

[14:19:00.0000] <jgraham>
The general rule is that "this" is the global object unless you call something like foo.bar in which case it is foo

[14:19:01.0000] <jgraham>
Or you are in an event handler

[14:19:02.0000] <jgraham>
Or you were called with Function.prototype.[call|apply]

[14:19:03.0000] <jgraham>
In the latter case it can be almost anything

[14:41:00.0000] <TabAtkins>
http://getinpulse.com Will someone please port a browser to this thank you very much.

[14:42:00.0000] <TabAtkins>
Or at least an HTML rendering engine.

[14:44:00.0000] <jgraham>
TabAtkins: I think you might be better off asking for something like Opera Mini

[14:44:01.0000] <TabAtkins>
That would work too, I suppose.

[15:06:00.0000] <jwalden>
idle question for the masses, what should |var pm = otherWindow.postMessage; setTimeout(pm, 0, ...);| do?  send a message?  with what source?

[15:09:00.0000] <Dashiva>
The script triggering the setTimeout is the same script that would have called it directly, so I don't see that source would change

[15:11:00.0000] <jwalden>
postMessage would be called without any actual calling script, tho

[15:11:01.0000] <bga_>
jwalden this is eq pm.call(window, undefined, undefined)

[15:11:02.0000] <jwalden>
bga_: not quite; there you have a calling script, the other case it's called from nothingness

[15:12:00.0000] <bga_>
i mean input arguments

[15:13:00.0000] <bga_>
and `this`

[15:14:00.0000] <bga_>
ah `setTimeout(pm, 0, ...)`;

[15:14:01.0000] <Ms2ger>
jwalden, it would be called with window as its this object, not otherWindow, AIUI

[15:14:02.0000] <bga_>
but `this` will be `window` or `null` anyway

[15:16:00.0000] <jwalden>
Ms2ger: the concern is not |this|.  it's that, supposing there's an event handler in otherWindow to receive the message, what should |e.source| be?

[15:16:01.0000] <jwalden>
and how would that value be computable when postMessage is actually called?

[15:16:02.0000] <Ms2ger>
I assume window, without seeing the spec

[15:16:03.0000] <jwalden>
this is fundamentally a form of dynamic scoping

[15:17:00.0000] <jwalden>
but if there's no dynamic scope to look at, because it's via setTimeout...

[15:20:00.0000] <bga_>
hm

[15:20:01.0000] <bga_>
"setTimeout(function, milliseconds)

[15:20:02.0000] <bga_>
This method calls the function once after a specified number of milliseconds elapses, until canceled by a call to clearTimeout. The methods returns a timerID which may be used in a subsequent call to clearTimeout to cancel the interval."

[15:21:00.0000] <bga_>
setTimeout with extra arguments is not standard

[15:21:01.0000] <Ms2ger>
It isn't? Please file a bug :)

[15:23:00.0000] <bga_>
no. :) extra arguments is bad. this task for closure

[15:23:01.0000] <bga_>
or .bind

[15:29:00.0000] <hober>
Right, so I'm at Apple now. whoo!

[15:30:00.0000] <othermaciej>
hober: congratulations on being acquired

[15:30:01.0000] <hober>
heh

[15:32:00.0000] <Hixie>
rgervais: going back to the earlier conversation, we're not going to change the spec willy nilly -- if something is valid, it's going to stay valid

[15:32:01.0000] <Hixie>
rgervais: at least as much as if the spec was "final" like HTML4

[15:50:00.0000] <karlcow>
"Ugh. HTTP and HTTPS are same origin to MSIE for localStorage and sessionStorage checks. In Firefox, only sessionStorage is borked." – http://twitter.com/lcamtuf/status/37626661981650944

[15:54:00.0000] <TabAtkins>
Um, what?  setTimeout with extra arguments is defined in HTML.

[15:54:01.0000] <Hixie>
hm?

[15:54:02.0000] <gsnedders>
setTimeout with any arguments is defined in HTML.

[15:54:03.0000] <TabAtkins>
to bga

[15:55:00.0000] <TabAtkins>
gsnedders: I meant extra as in "in addition to the normal two".


2011-02-16
[16:05:00.0000] <uf0>
ok so.. i'm going to give an example:

[16:05:01.0000] <uf0>
say I'm creating a header in HTML5

[16:05:02.0000] <uf0>
I would obviously put anything relating to that in <header>

[16:05:03.0000] <uf0>
my question does <nav> go in <header>

[16:05:04.0000] <uf0>
or outside seperately

[16:06:00.0000] <uf0>
now usually in my days now

[16:06:01.0000] <uf0>
i would put a <ul class="nav"> inside the <div id="header">

[16:06:02.0000] <uf0>
thoughts?

[16:06:03.0000] <hober>
either way dude

[16:06:04.0000] <Hixie>
putting <nav> in <header> is fine, yeah

[16:07:00.0000] <uf0>
cool

[16:07:01.0000] <uf0>
another question, in my olden days i would have a <div id="wrap"> to hold the header, footer and content

[16:07:02.0000] <uf0>
is that now a <section id="wrap">

[16:07:03.0000] <uf0>
or still a div

[16:07:04.0000] <hober>
that's what <body>'s for

[16:08:00.0000] <uf0>
no hober

[16:08:01.0000] <hober>
but, if you need an extraneous element for whatever reason, keep on trucking with <div> there.

[16:08:02.0000] <uf0>
to wrap and do a margin auto with a width, I don't do that in body

[16:08:03.0000] <uf0>
or <body>

[16:08:04.0000] <uf0>
i always have a container for that

[16:08:05.0000] <hober>
body { width:30em; margin: 0 auto; } works fine

[16:08:06.0000] <uf0>
so I'm wondering if <section> is the right tag

[16:08:07.0000] <hober>
I do that all the time

[16:09:00.0000] <uf0>
I disagree with that, though it technically works

[16:09:01.0000] <hober>
well, anyway, if you must have a single child of body, <div> is the correct element

[16:09:02.0000] <hober>
<section> implies you're trying to impact the outline algorithm, which is weird in this case

[16:09:03.0000] <uf0>
alright

[16:11:00.0000] <uf0>
thx Hixie/hober

[16:11:01.0000] <hober>
np

[16:11:02.0000] <Hixie>
np

[16:11:03.0000] <Hixie>
hober's right on the <div> thing

[16:11:04.0000] <Hixie>
don't forget you can style <html> and <body> separately, though

[16:12:00.0000] <Hixie>
so you often don't need a <div> as well

[16:42:00.0000] <uf0>
this is probably a dumb question, but what's the difference between W3C and WHATWG?

[16:42:01.0000] <uf0>
do you guys work seperately or together

[16:43:00.0000] <uf0>
i don't get it

[16:43:01.0000] <Hixie>
together

[16:43:02.0000] <Hixie>
whatwg started working on html back in 2003/4 when the w3c didn't want to work on html any more, and when they changed their mind we started working together

[16:43:03.0000] <uf0>
who decides what's approved?

[16:43:04.0000] <uf0>
you guys or them

[16:44:00.0000] <zewt>
W:DWG

[16:45:00.0000] <Hixie>
uf0: neither

[16:45:01.0000] <uf0>
oh

[16:45:02.0000] <Hixie>
uf0: the browser vendors decide

[16:45:03.0000] <AryehGregor>
uf0, the WHATWG and W3C have different specs.  The WHATWG decides what goes into its spec, the W3C decides what goes into its spec.

[16:45:04.0000] <AryehGregor>
Hixie, not for authoring conformance and non-normative material!

[16:45:05.0000] <uf0>
scratches head***

[16:46:00.0000] <uf0>
so what spec do I use w3c or whatwg

[16:46:01.0000] <AryehGregor>
They're almost the same, except the W3C one leaves out some stuff and is split up more.

[16:46:02.0000] <Hixie>
yeah, for authoring conformance criteria the issue is a bit more murky -- in practice it seems the w3c decides those, we've just made the whatwg spec match whatever they do

[16:46:03.0000] <jamesr_>
if you are a web author i'd recommend using the WHATWG spec

[16:46:04.0000] <AryehGregor>
Clearly, the people here are mostly going to recommend the WHATWG spec.

[16:46:05.0000] <Hixie>
for non-normative material they tend to differ a little more

[16:46:06.0000] <AryehGregor>
Since this is #whatwg.  :)

[16:47:00.0000] <AryehGregor>
It has useful stuff like implementation status annotations.

[16:47:01.0000] <AryehGregor>
And a comment box everywhere instead of just the front.

[16:47:02.0000] <AryehGregor>
(although that gets in the way when using Ctrl-F on Firefox)

[16:48:00.0000] <Hixie>
you can close the comment box

[16:48:01.0000] <uf0>
hmm ok

[16:48:02.0000] <Hixie>
click the arrow :-)

[16:48:03.0000] <zewt>
pages that eat ^F make me want to punch the html :P

[16:48:04.0000] <AryehGregor>
But then I have to click again later to open it.  :(

[16:48:05.0000] <Hixie>
uf0: the whatwg spec has some text at the top that discusses this btw

[16:48:06.0000] <Hixie>
uf0: http://whatwg.org/html in the intro sectiuon

[16:49:00.0000] <AryehGregor>
I have noticed that Firefox's behavior is nicer than Chrome's in that if you hit the end and wrap around, it's instantly noticeable because the search term is now at the top of the page instead of the bottom.

[16:49:01.0000] <AryehGregor>
Whereas with Chrome I often find myself cycling through all the possibilities repeatedly and not noticing.

[16:49:02.0000] <Hixie>
the main problem with chrome's find in page is that every few searches it decides to go out to lunch

[16:50:00.0000] <webr3>
uf0, lol - I'm currently arguing on the mailing lists that both the w3c and the what wg don't actually provide a spec for the likes of you and me - so quiet funny timing - the closest you've got is http://caniuse.com/

[16:51:00.0000] <webr3>
s/quiet/quite

[16:51:01.0000] <AryehGregor>
Yeah, the official spec is realistically not ever going to be the best thing for typical authors.

[16:51:02.0000] <AryehGregor>
They're way too precise, i.e., long-winded and incomprehensible.

[16:51:03.0000] <Hixie>
ben is working on developers.whatwg.org which may be helpful

[16:52:00.0000] <Hixie>
lachlan used to work on a tutorial spec, but dunno what's happened with that

[16:52:01.0000] <Hixie>
haven't seen lachy in a while, in fact. anyone know if he's still around?

[16:52:02.0000] <AryehGregor>
Hmm, dunno.

[17:07:00.0000] <hober>
he's still at opera afaicr

[17:11:00.0000] <AryehGregor>
jgraham, you need better stringification for expected/actual reporting.  If the expected value is, e.g., the empty string, it's kind of hard to read.  And you can't tell null from "null" and so on.  May I recommend: http://dvcs.w3.org/hg/html/file/tip/tests/submission/AryehGregor/reflection/original-harness.js#l16

[17:11:01.0000] <AryehGregor>
Actually, line number or filename may change, so a specific revision is better: http://dvcs.w3.org/hg/html/file/f86e2b4137f7/tests/submission/AryehGregor/reflection/original-harness.js#l16

[17:17:00.0000] <AryehGregor>
Okay, IE9 RC fails every single test, totally legitimately.

[17:17:01.0000] <AryehGregor>
Opera fails almost all.

[17:17:02.0000] <AryehGregor>
Mostly because of not handling nulls correctly.

[17:17:03.0000] <AryehGregor>
WebKit and Gecko pass some.

[17:18:00.0000] <AryehGregor>
They seem to have no bugs in their string reflection that I've found, sadly.

[17:18:01.0000] <AryehGregor>
If I do find, I'll make sure to make them fail too.  :)

[17:18:02.0000] <AryehGregor>
But first I'll make Opera fail the remaining few tests by making sure to add strings with binary for everything.

[17:18:03.0000] <AryehGregor>
But that's for tomorrow.

[17:27:00.0000] <AryehGregor>
HTML test mail sent.  Yay.

[17:27:01.0000] <AryehGregor>
/me is off for the night

[00:28:00.0000] <jgraham>
AryehGregor: Yes, better stringification seems like a good idea.

[00:29:00.0000] <jgraham>
Also, there is no need to make Opera fail all your tests just because :)

[00:30:00.0000] <jgraham>
Well specifically it's not clear that setting things up so that one bug causes everything to fail is that useful, since it will have the effect of hiding more significant bugs

[00:30:01.0000] <jgraham>
Although I do of course agree that we should fix the null-handling issues

[00:40:00.0000] <annevk>
Hixie, regarding the stability of DOM Core; I would say it is pretty stable but we are planning a number of experiments that make a few specific parts "less stable"

[00:40:01.0000] <annevk>
Hixie, i.e. killing the concept of Attr being a node

[00:40:02.0000] <Hixie>
it's not really stableness i'm worried about so much as completeness

[00:41:00.0000] <Hixie>
last i saw it, it was extremely incomplete

[00:41:01.0000] <annevk>
really?

[00:41:02.0000] <Hixie>
well last i saw it was months ago :-)

[00:41:03.0000] <annevk>
the Nodes part has not changed much since publication

[00:41:04.0000] <Hixie>
what's the url these days?

[00:42:00.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html

[00:43:00.0000] <jgraham>
annevk: I am like 90% sure that Closure relies on the nodeness of Attr

[00:43:01.0000] <jgraham>
If it doesn't, it does a very good job of faking it

[00:43:02.0000] <Hixie>
ok well step one will have to be me going very carefully through the definitions to make sure i didn't change any since the text was copied

[00:43:03.0000] <jgraham>
So I think we already lost there

[00:44:00.0000] <jgraham>
/me would be happy to be proven wrong

[00:44:01.0000] <annevk>
jgraham, I'm sure some stuff will break, we'll have to figure out how much we can battle it with alpha builds

[00:44:02.0000] <jgraham>
If some stuff === most Google properties, we have a problem

[00:44:03.0000] <Hixie>
oh wow, this definition of Event is so much better than I'm used to.

[00:46:00.0000] <jgraham>
http://www.google.com/codesearch?q=getAttributeNode+package%3Ahttp%3A%2F%2Fclosure-library\.googlecode\.com&origq=getAttributeNode&btnG=Search+Trunk

[00:46:01.0000] <Hixie>
annevk: yeah, wow, this is way more complete than the last time i saw it

[00:46:02.0000] <Hixie>
annevk: this is awesometastic

[00:47:00.0000] <Hixie>
annevk++ Ms2ger++

[00:47:01.0000] <annevk>
:)

[00:47:02.0000] <Hixie>
k well i guess it's time to start moving to that draft

[00:48:00.0000] <Hixie>
this is so much more readable than dom3 core

[00:54:00.0000] <Hixie>
annevk: filed bug 12094 on switching to web dom core

[00:55:00.0000] <Hixie>
annevk: when i do it i'll go through the definitions carefully and any that are identical and make more sense in dom core i'll just reference dom core -- please let me know if you ever change those definitions since they can have really drastic ramifications

[00:56:00.0000] <annevk>
Hixie, yeah, pretty sure Ms2ger and I can keep on top of that

[00:56:01.0000] <annevk>
Hixie, we have for exceptions at least :)

[00:56:02.0000] <Hixie>
cool :-)

[00:57:00.0000] <Hixie>
seeing how web dome core has matured really made my day :-)

[00:57:01.0000] <Hixie>
web dom core, even

[00:59:00.0000] <zcorpan>
annevk: time for a publication heartbeat for web dom core?

[01:01:00.0000] <annevk>
zcorpan, that is the plan yes, before I leave :)

[01:02:00.0000] <annevk>
I want to fix the issues with events smaug pointed out I think

[01:02:01.0000] <zcorpan>
cool

[01:03:00.0000] <annevk>
http://irinawerning.com/back-to-the-fut/back-to-the-future/ is pretty amazing

[01:15:00.0000] <annevk>
Hixie, I thought readonly meant something like is disabled but is submitted

[01:15:01.0000] <Hixie>
readonly means "interactive but not mutable"

[01:15:02.0000] <Hixie>
it also as a side-effect is submitted when disabled is not

[01:15:03.0000] <Hixie>
but that's more of a historical artefact

[01:16:00.0000] <Hixie>
readonly just comes from the fact that UI toolkits for text fields have this "readonly" state separate from the disabled state

[01:16:01.0000] <annevk>
mkay

[01:16:02.0000] <Hixie>
so when browsers first did this, it made sense to add readonly for text fields

[01:18:00.0000] <Hixie>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=11483#c1 <-- damnit. :-P

[01:27:00.0000] <Hixie>
annevk: re http://www.w3.org/Bugs/Public/show_bug.cgi?id=11452, it would be helpful if you could make a list of all the ways that rfc2388 is problematic -- that would give me cover to just go and respec it from scratch

[01:27:01.0000] <Hixie>
annevk: if i just do it people will go ballistic as usual about how we're ignoring standards, and it would be good to have an explanation of the problems

[01:27:02.0000] <Hixie>
annevk: (it would also allow me to approach larry and ask him if he's willing to fix the spec first)

[01:31:00.0000] <annevk>
be great if he could do that; I'll give it a shot

[01:35:00.0000] <phrearch>
hello

[01:35:01.0000] <phrearch>
do websockets keep track of message ids themselves?

[01:35:02.0000] <phrearch>
i got some sync problems

[01:39:00.0000] <jgraham>
phrearch: message ids?

[01:41:00.0000] <phrearch>
well, i got two messages firing now at the moment: one to get online users, and one to sync a canvas painting app. Both arrive in this jquery websocket router: http://paste.pocoo.org/show/339478/

[01:42:00.0000] <phrearch>
the callback is fired twice somehow, so i thought i maybe have to queue the messages and match them on origin

[01:42:01.0000] <phrearch>
if a message comes in, i would like to be able which event fired it

[01:43:00.0000] <phrearch>
i started with jsonrpc which had a message id in it, but removed that(it had a function i guess :) )

[01:43:01.0000] <hsivonen>
someone should make "Wikipedia > IANA" t-shirts

[01:44:00.0000] <phrearch>
so, i was wondering if the websocket api has a way to find out which message belongs to which call

[01:44:01.0000] <phrearch>
or do i have to add the message id manually again

[01:44:02.0000] <Hixie>
hsivonen: and you say _I'm_ unnecessarily antagonistic. :-P

[01:44:03.0000] <hsivonen>
Hixie: :-)

[01:45:00.0000] <phrearch>
having a 36 char uuid in there seems not to be good for small message parsing

[01:47:00.0000] <zcorpan>
what happened to https://bitbucket.org/ms2ger/web-dom-core/ ?

[01:53:00.0000] <jgraham>
phrearch: I'm not quite sure I follow. In general if you have a DOM event you can work out what type of event it is. But if you have two message events, the API doesn't provide any unique identifier for each; you hvae to do that at the application ("subprotocol") level

[01:53:01.0000] <annevk>
zcorpan, bitbucket does not redirect :/ https://bitbucket.org/ms2ger/dom-core/

[01:53:02.0000] <phrearch>
jgraham: i was already affraid for that :)

[01:54:00.0000] <jgraham>
phrearch: Well it's not clear to me what it would provide

[01:55:00.0000] <phrearch>
hm, i hoped for some id in the send message thats linked to the message event

[01:55:01.0000] <jgraham>
s/would/could/

[01:55:02.0000] <phrearch>
but it can be done in the application indeed

[01:56:00.0000] <jgraham>
What do you mean "linked to the message event"?

[01:56:01.0000] <jgraham>
You mean the DOM event object?

[01:56:02.0000] <jgraham>
or something different?

[01:56:03.0000] <phrearch>
yea, i dont know if thats even possible but

[01:56:04.0000] <zcorpan>
annevk: ah

[01:57:00.0000] <annevk>
zcorpan, also it did not advertise that changing the name changes the URL

[01:57:01.0000] <annevk>
should I change it back?

[01:58:00.0000] <zcorpan>
naw it's ok

[01:58:01.0000] <jgraham>
phrearch: Well as long as you are entirely on the client, the message is already bound to the event object

[01:58:02.0000] <jgraham>
Since it is e.data that contains the message

[01:58:03.0000] <jgraham>
But I guess you don't mean that

[01:59:00.0000] <phrearch>
yea, thats what i meant

[01:59:01.0000] <phrearch>
i think i got it. in the message object, i can see the original calling function in .target.origin

[02:00:00.0000] <phrearch>
or not...hm, ill see if i can fix it like this first

[02:08:00.0000] <phrearch>
hm, any idea why origin sometimes is overwritten with two subsequent ws messages? http://paste.pocoo.org/show/339489/

[02:08:01.0000] <phrearch>
two origins should be different, but most of the times they are the same

[02:11:00.0000] <annevk>
whoa

[02:11:01.0000] <annevk>
constructive feedback from Jukka Korpela on the WHATWG list

[02:13:00.0000] <Hixie>
ok bed time

[03:01:00.0000] <jgraham>
So I started an infrastructure requirements page for the HTML test task force: http://www.w3.org/html/wg/wiki/Testing/Infrastructure/Requirements/

[03:01:01.0000] <jgraham>
Comments before I send it to the list?

[03:02:00.0000] <jgraham>
/me realises most relevant people are asleep

[03:04:00.0000] <jgraham>
/me wonders if there is a good code review tool for hg

[03:17:00.0000] <phrearch>
ok problem solved :)

[03:23:00.0000] <Philip`>
"Most test review is currently done informally via the mailing list. This doesn't work so well, especially for for large testsuites. Maybe there is an existing tool that can help us here."

[03:23:01.0000] <Philip`>
Is the problem the lack of tools, or is it primarily the lack of people?

[03:24:00.0000] <jgraham>
Pass

[03:24:01.0000] <jgraham>
But I don't really fancy reviewing, say, AryehGregor's tests without some way to write inline comments

[03:24:02.0000] <jgraham>
And we don't really have a good way of knowing what has/hasn't been reviewed

[03:25:00.0000] <jgraham>
So the tools might not save us, but they could help us

[03:34:00.0000] <matjas>
Warning: imap_open() [function.imap-open]: Couldn't open stream {imap.gmail.com:993/imap/ssl}INBOX in /f2/xanthir/public/feed/public-css-commits/index.php on line 22

[03:34:01.0000] <matjas>
can't connect: TLS/SSL failure for imap.gmail.com: SSL negotiation failed

[03:34:02.0000] <matjas>
TabAtkins: ^

[03:36:00.0000] <matjas>
TabAtkins: Been getting a lot of errors (timeouts/PHP errors) on your CSS feed lately.

[03:39:00.0000] <karlcow>
thanks annevk for the link http://irinawerning.com/back-to-the-fut/back-to-the-future/  Wonderful. Shadows of time, ambiguity of self.

[03:41:00.0000] <jgraham>
Yeah, I rather enjoyed those

[04:02:00.0000] <karlcow>
http://www.youtube.com/watch?v=64TcBiqmVko

[04:02:01.0000] <karlcow>
WegGL aquarium using a few computers

[04:03:00.0000] <karlcow>
(and cheesy music)

[04:46:00.0000] <annevk>
for anyone who is slightly bored, check archives of w3c-css-wg ;)

[05:03:00.0000] <annevk>
bah

[05:03:01.0000] <annevk>
per Wikipedia objects in a tree structure are called nodes

[05:03:02.0000] <annevk>
nice conflict there with the DOM!

[05:03:03.0000] <hsivonen>
what's the conflict?

[05:04:00.0000] <zcorpan>
IndexedDB doesn't have DOM nodes, but has a tree structure (at least i think it does?)

[05:04:01.0000] <annevk>
apparently DOM Events is used in Indexed DB on a non-DOM tree structure

[05:05:00.0000] <annevk>
so I need to define the concept of "tree structure" and then map the Nodes Model to it

[05:05:01.0000] <annevk>
and indexed DB will need to map its own model to it

[05:05:02.0000] <annevk>
well, that's my vague plan and I'm not getting very far

[05:05:03.0000] <annevk>
like, can I just say "tree structure" and expect it to be clear?

[05:08:00.0000] <jgraham>
annevk: Well yes, they're called Nodes in DOM because DOM is a tree and trees have nodes

[05:08:01.0000] <annevk>
anyone an idea how to include a subtle reference to /r/trees ?

[05:09:00.0000] <jgraham>
I think you just blew subtle

[05:09:01.0000] <annevk>
jgraham, thank you captain obvious :p

[05:10:00.0000] <jgraham>
annevk: Anyway the event nodes thing shouldn't be too hard. You just need to define that they operate on an abstract tree and that they move between nodes in that tree in the required way

[05:11:00.0000] <jgraham>
And explicitly say that node !== DOM Node

[05:11:01.0000] <jgraham>
But that DOM Nodes do map onto the abstract nodes

[05:11:02.0000] <annevk>
yeah, something like that

[05:12:00.0000] <annevk>
I guess I should just take a stab at it

[05:13:00.0000] <jgraham>
(the only other thing I can think to do is to use the word "vertex" which is more general but probably more confusing)

[05:16:00.0000] <karlcow>
Spring rain

[05:16:01.0000] <karlcow>
conveyed under the trees

[05:16:02.0000] <karlcow>
in drops.

[05:16:03.0000] <karlcow>
— Basho

[05:16:04.0000] <karlcow>
hmm maybe not helpful for annevk

[05:17:00.0000] <karlcow>
/me had to search for r-tree http://en.wikipedia.org/wiki/R-tree

[05:20:00.0000] <Philip`>
/me can't remember ever hearing people use "vertex" in the context of trees

[05:21:00.0000] <Philip`>
(Only in unconstrainted graphs)

[05:21:01.0000] <Philip`>
s/ted/ed/

[05:21:02.0000] <karlcow>
Philip`: http://en.wikipedia.org/wiki/Tree_(graph_theory)

[05:22:00.0000] <annevk>
http://en.wikipedia.org/wiki/Tree_structure is the more useful one

[05:22:01.0000] <karlcow>
it seems to be mentioned here

[05:23:00.0000] <Philip`>
/me can't remember often hearing people use "tree" in the context of undirected graphs

[05:23:01.0000] <karlcow>
http://en.wikipedia.org/wiki/Vertex_(graph_theory)

[05:23:02.0000] <Philip`>
(probably because I'm in more contact with computer scientists than graph theorists)

[05:24:00.0000] <karlcow>
and my own understanding of vertex is more http://en.wikipedia.org/wiki/Vertex_(physics)

[05:25:00.0000] <karlcow>
as well as http://en.wikipedia.org/wiki/Vertex_model

[05:26:00.0000] <zcorpan>
annevk: window is part of the event tree but isn't a DOM node

[05:26:01.0000] <zcorpan>
annevk: so it's not a new problem with indexeddb

[05:27:00.0000] <annevk>
zcorpan, the way Hixie defined Window it's still not really part of the event tree

[05:27:01.0000] <annevk>
it just participates in event dispatching

[05:28:00.0000] <zcorpan>
i thought all bubbling events bubbled up to window

[05:28:01.0000] <zcorpan>
no?

[05:29:00.0000] <annevk>
http://www.whatwg.org/specs/web-apps/current-work/complete/webappapis.html#events-and-the-window-object

[05:30:00.0000] <zcorpan>
what's the difference between that and being part of the tree?

[05:30:01.0000] <annevk>
it's conceptually different

[05:31:00.0000] <annevk>
anyway, I'm working on an abstract definition of "Trees"

[05:31:01.0000] <zcorpan>
why is 'load' excluded btw? when is a load event fired on document?

[05:32:00.0000] <zcorpan>
or, oh

[05:32:01.0000] <zcorpan>
hmm

[05:35:00.0000] <zcorpan>
is it just to prevent capturing 'load' listeners on window to run for <img> loads? or why?

[05:42:00.0000] <annevk>
legacy

[05:58:00.0000] <annevk>
made modest progress

[06:22:00.0000] <annevk>
I think I fixed it

[06:23:00.0000] <annevk>
though "Common infrastructure" is still somewhat messy imo

[06:23:01.0000] <annevk>
it has copy and paste all over it

[06:25:00.0000] <karlcow>
do Firefox, Chrome, IE and Safari send a different HTTP Code depending on the payload size of an HTTP POST

[06:25:01.0000] <karlcow>
Expect: 100-continue for bigger payloads?

[06:37:00.0000] <annevk>
I guess Hixie's "Common infrastructure" is also somewhat organized adhoc

[06:37:01.0000] <annevk>
I've no idea why Conformance would be in there for instance

[06:37:02.0000] <karlcow>
http://groups.google.com/group/mozilla.feedback.firefox/browse_thread/thread/8918bae4308e476d?tvc=2

[06:37:03.0000] <annevk>
/me hopes more people care about this and can give some insight

[06:38:00.0000] <annevk>
oh great, in XHR Terminology is a subsection of Conformance!

[06:38:01.0000] <karlcow>
annevk: what do you refer to? link?

[06:38:02.0000] <annevk>
and nobody complaints

[06:38:03.0000] <annevk>
bah, no rules

[06:39:00.0000] <annevk>
karlcow, load e.g. http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html and http://dev.w3.org/2006/webapi/XMLHttpRequest-2/ and maybe the HTML spec and compare how they organize the initial sections

[06:39:01.0000] <annevk>
CORS follows XHR http://dev.w3.org/2006/waf/access-control/

[06:39:02.0000] <karlcow>
checking

[06:40:00.0000] <annevk>
I'm leaning towards grouping conformance/extensibility/dependency under "Conformance" and the rest under "Terminology" both separate top-level sections

[06:40:01.0000] <annevk>
for all specs I edit

[06:40:02.0000] <annevk>
"Conformance" first

[06:40:03.0000] <karlcow>
indeed terminology under conformance seems strange

[06:41:00.0000] <karlcow>
fixable

[06:42:00.0000] <annevk>
oh sure, I just never quite know how and what patterns to follow

[06:42:01.0000] <annevk>
but there's hardly any spec writing pattern I guess when you think most specs out there are crappy :p

[06:43:00.0000] <karlcow>
Common infrastructure is a strange name in http://dev.w3.org/html5/spec/ but I guess I didn't really pay attention to it

[06:44:00.0000] <karlcow>
annevk: from experience, each time we tried to create editing patterns, a NIH syndrome arised. Each editor being a geek came up with his own software/technique/tool to do things :)

[06:44:01.0000] <annevk>
that's exactly what's happening here

[06:45:00.0000] <annevk>
but I mean, putting Terminology under Introduction like in XML?

[06:46:00.0000] <annevk>
terminology is overall a pretty crappy section; ideally it's not there

[06:47:00.0000] <annevk>
you want to introduce terms as the reader reads through the spec

[06:47:01.0000] <annevk>
not upfront somewhere, that never really works well

[06:47:02.0000] <hsivonen>
terminology up front is so ISO

[06:47:03.0000] <karlcow>
what we did in QA framework spec http://www.w3.org/TR/qaframe-spec/ is that. We introduced terms and made a glossary at the end

[06:48:00.0000] <annevk>
oh, glossary is a nice touch

[06:48:01.0000] <annevk>
maybe we should add that to Anolis

[06:48:02.0000] <annevk>
/me summons Ms2ger

[06:48:03.0000] <annevk>
I mostly use "Terminology" now for terms defined by other specs

[06:48:04.0000] <annevk>
but ideally we get workable cross-spec cross-references for that

[06:49:00.0000] <annevk>
XSXR, sounds like some kind of vulnerability

[06:50:00.0000] <karlcow>
I remember this effort for a while http://www.w3.org/2003/glossary/ but has not been updated. People using too many ways of describing the vocab

[06:52:00.0000] <annevk>
maybe after a couple more rewrites of all core specs we'll have an idea of what we are doing and can write down a nice simple glossary :)

[06:52:01.0000] <karlcow>
heh

[06:52:02.0000] <karlcow>
living hope

[06:52:03.0000] <karlcow>
ambiguity is at the root of what we do. :)

[06:52:04.0000] <hsivonen>
/me wonders what's happening with WebGL in the Opera land

[06:53:00.0000] <karlcow>
http://www.google.com/search?client=opera&rls=fr&q=site:opera.com+webgl&sourceid=opera&ie=utf-8&oe=utf-8&channel=suggest

[06:55:00.0000] <hsivonen>
karlcow: http://www.google.com/search?q=site:www.opera.com+webgl seems more relevant

[06:56:00.0000] <karlcow>
hmmm not sure. Most of the blogs are on my.opera.com :)

[06:56:01.0000] <karlcow>
on www.opera.com, you will find things which are already deployed

[06:57:00.0000] <karlcow>
http://www.opera.com/docs/specs/presto27/

[06:57:01.0000] <karlcow>
webgl is not deployed for sure.

[07:24:00.0000] <karlcow>
discovering http://sideshowbarker.github.com/console-spec/

[07:40:00.0000] <MikeSmith>
karlcow: not much there to discover yet :)

[07:41:00.0000] <karlcow>
but cool to see it started.

[07:41:01.0000] <MikeSmith>
v0.1

[07:42:00.0000] <MikeSmith>
hoping I can get somebody else do finish the 99.9% of work remaining to actually spec it out

[07:42:01.0000] <karlcow>
/me is checking https://bitbucket.org/scope/dragonfly-stp-1/src/b1e2a7ba97c0/src/console-logger/

[07:44:00.0000] <MikeSmith>
/me didn't look at that yet

[07:44:01.0000] <karlcow>
https://bitbucket.org/scope/dragonfly-stp-1/history/src/console-logger/console.js

[07:44:02.0000] <MikeSmith>
console behavior is deceptively simple

[07:44:03.0000] <MikeSmith>
it is not quite as simple to try to spec

[07:45:00.0000] <MikeSmith>
for one thing, console object is now implemented in places other than browser GUI

[07:45:01.0000] <MikeSmith>
oh man

[07:45:02.0000] <MikeSmith>
I realize I need to publish a new version of this thing

[07:46:00.0000] <MikeSmith>
the source has a bunch of changes

[07:46:01.0000] <karlcow>
:)

[07:49:00.0000] <MikeSmith>
hmm, wtf… I remember making some changes but they don't seem to show up in the published version

[07:50:00.0000] <zcorpan>
console supports printf-like format strings? really?

[07:52:00.0000] <MikeSmith>
zcorpan: well, tell me what else to call that

[07:53:00.0000] <MikeSmith>
"printf-like" is intentionally vague

[07:53:01.0000] <zcorpan>
i don't mind the terminology, i was just surprised that it was supported

[07:53:02.0000] <MikeSmith>
oh

[07:53:03.0000] <MikeSmith>
yeah, it does

[07:53:04.0000] <MikeSmith>
that's another spec wrinkle actually

[07:53:05.0000] <MikeSmith>
or interoperability wrinkle

[07:54:00.0000] <MikeSmith>
because some implementations only support that if the format string is the first argument

[07:54:01.0000] <MikeSmith>
others do even if it's not the first

[07:55:00.0000] <zcorpan>
does opera support it?

[07:55:01.0000] <MikeSmith>
yeah

[07:55:02.0000] <MikeSmith>
dude

[07:55:03.0000] <MikeSmith>
do you please use Dragonfly

[07:55:04.0000] <MikeSmith>
dogfood

[07:56:00.0000] <zcorpan>
i use dragonfly :)

[07:57:00.0000] <MikeSmith>
whew

[07:57:01.0000] <MikeSmith>
you had me worried for a second

[07:57:02.0000] <MikeSmith>
OK, pushed new version

[07:57:03.0000] <zcorpan>
i get "%s, foo" for console.log("%s", "foo") in df

[07:57:04.0000] <hasather>
MikeSmith: we don't support printf

[07:57:05.0000] <MikeSmith>
oh

[07:57:06.0000] <MikeSmith>
well, I'm the dumbass ethen

[07:57:07.0000] <MikeSmith>
I could have sworned that you did

[07:57:08.0000] <gsnedders>
/me doesn't use Dragonfly, mainly because everything he does is debugging JIT bugs, and having esdebug Scope service attached disables JIT

[07:58:00.0000] <hasather>
MikeSmith: it's coming though

[07:58:01.0000] <MikeSmith>
k

[07:58:02.0000] <jgraham>
karlcow: the console scope service doesn't have that much to do with what MikeSmith is working on

[07:58:03.0000] <zcorpan>
good thing somebody is writing a spec for it then :)

[07:58:04.0000] <MikeSmith>
heh

[07:58:05.0000] <MikeSmith>
yeah, hopefully somebody other than me

[07:58:06.0000] <MikeSmith>
I made the proof of concept

[07:59:00.0000] <MikeSmith>
somebody smarter than me can make the actual spec

[07:59:01.0000] <karlcow>
/me hides

[07:59:02.0000] <zcorpan>
MikeSmith: i'm afraid you might have made a huge mistake there and will be stuck with it

[07:59:03.0000] <jgraham>
MikeSmith: BTW, did you see http://www.w3.org/html/wg/wiki/Testing/Infrastructure/Requirements/ ?

[07:59:04.0000] <jgraham>
/me will post to the list soon

[08:00:00.0000] <MikeSmith>
jgraham: didn't see it

[08:00:01.0000] <MikeSmith>
but thanks

[08:00:02.0000] <MikeSmith>
very much

[08:00:03.0000] <MikeSmith>
btw, I looked at a couple of existing annotation services

[08:00:04.0000] <karlcow>
I remember something along what zcorpan is saying about bugs. When bugs are assigned to someone, people do not take them. It is better to leave them unassigned until someone really does the work

[08:00:05.0000] <MikeSmith>
Shift+Space for one

[08:00:06.0000] <MikeSmith>
http://www.shiftspace.org/

[08:01:00.0000] <MikeSmith>
and other which name I forget

[08:02:00.0000] <MikeSmith>
http://reframeit.com/

[08:02:01.0000] <MikeSmith>
both are add-ons for FF

[08:03:00.0000] <MikeSmith>
though Reframeit has a bookmarklet alternative

[08:03:01.0000] <MikeSmith>
which didn't seem to work for me completely

[08:04:00.0000] <MikeSmith>
did I mention that I just pushed an update of the console spec?

[08:04:01.0000] <MikeSmith>
http://sideshowbarker.github.com/console-spec/

[08:04:02.0000] <karlcow>
/me is reading the mess about "Expect: 100-continue"

[08:07:00.0000] <MikeSmith>
no idea what that is

[08:07:01.0000] <MikeSmith>
probably some list mail I should be reading but haven't yet

[08:08:00.0000] <zcorpan>
MikeSmith: you have severely typoed "Living Standard"

[08:08:01.0000] <MikeSmith>
 /me notice http://httpstat.us/ getting some love

[08:08:02.0000] <jgraham>
hsivonen: yt? I was wondering if there would be some way to add support for document.write to the html5lib test format, for cases where using the test as input to document.write should produce different output

[08:08:03.0000] <jgraham>
Well obviously there is *some* way, but I mean a way that would work well for you

[08:09:00.0000] <MikeSmith>
zcorpan: where!? I am the strongest believer in the "Living Standard" dogma… even more than Hixie and annevk

[08:09:01.0000] <jgraham>
(different compared to the normal parser case)

[08:09:02.0000] <MikeSmith>
they just think they believe in it more

[08:10:00.0000] <jgraham>
Oooh, a license to sell copies of the document

[08:10:01.0000] <jgraham>
I wonder what the market rate for a Console spec is

[08:10:02.0000] <MikeSmith>
anyway, the other problem with console is that it's been implemented outside of browsers

[08:10:03.0000] <MikeSmith>
e.g., in s Node and PhantomJS.

[08:11:00.0000] <jgraham>
Is that a problem?

[08:11:01.0000] <zcorpan>
MikeSmith: "Unofficial Draft"

[08:11:02.0000] <jgraham>
I mean they don't have to be interoperable with browsers

[08:11:03.0000] <MikeSmith>
zcorpan: blame Berjon

[08:11:04.0000] <MikeSmith>
jgraham: other console documentation has stuff about "display a clickable hypertext view of the object"

[08:11:05.0000] <MikeSmith>
jgraham: I guess

[08:12:00.0000] <karlcow>
I'm slowing making my case against 100-continue when used over the public Web

[08:12:01.0000] <MikeSmith>
jgraham: but I thought our goal was to spec out abstract APIs when we can

[08:12:02.0000] <MikeSmith>
and not make assumptations

[08:12:03.0000] <MikeSmith>
or even assumptions

[08:13:00.0000] <jgraham>
MikeSmith: Right, that makes sense

[08:13:01.0000] <jgraham>
So don't specifiy that it must make a clickable hypertext view

[08:14:00.0000] <jgraham>
Just leave all of that as vendor extensions

[08:14:01.0000] <jgraham>
It doesn't need to be interoperable

[08:14:02.0000] <jgraham>
as long as it doesn't throw unexpectedly

[08:15:00.0000] <MikeSmith>
that is exactly what I am attempting to do

[08:15:01.0000] <jgraham>
Add some May level fluff about clickable hypertext views

[08:15:02.0000] <MikeSmith>
Webkit folk have told me they are going to yank a number of the methods that have already implemented

[08:15:03.0000] <MikeSmith>
trace thing for one

[08:15:04.0000] <MikeSmith>
actually, Sam told me that

[08:15:05.0000] <MikeSmith>
to name names

[08:16:00.0000] <MikeSmith>
and I trust Sam implicitly

[08:16:01.0000] <MikeSmith>
and I act on that sense of trust

[08:16:02.0000] <TabAtkins>
matjas: I wonder if Gmail is throttling me?  I suspect I'm pinging the email server at least every few minutes, possibly more often.

[08:16:03.0000] <TabAtkins>
matjas: I need to spend time today writing a caching layer.

[08:16:04.0000] <matjas>
TabAtkins: Go ask the Gmail team :)

[08:17:00.0000] <MikeSmith>
jgraham: this why I spec'd it with this "console handler" invention

[08:17:01.0000] <matjas>
TabAtkins: Woohoo, caching. Om nom nom

[08:17:02.0000] <MikeSmith>
or abstraction

[08:17:03.0000] <MikeSmith>
which may or may not map to implementation

[08:17:04.0000] <jgraham>
I see

[08:18:00.0000] <MikeSmith>
anyway, I would really, really prefer that somebody else get some enthusiasm about speccing this

[08:18:01.0000] <MikeSmith>
/me crosses fingers

[08:18:02.0000] <MikeSmith>
I want to be a spec writer just about as much as I want to be a working-group chair

[08:20:00.0000] <MikeSmith>
zcorpan: to be clear, the "Unofficial Draft" stuff is boilerplate generated by Respec

[08:21:00.0000] <Ms2ger>
MikeSmith, all of us would really like someone to take over our specs ;)

[08:21:01.0000] <MikeSmith>
if I could get one of my secretaries to do it, that would be great

[08:23:00.0000] <MikeSmith>
one professor I work with actually has something like like 7 secretaries

[08:23:01.0000] <MikeSmith>
I kid you not

[08:23:02.0000] <zcorpan>
one for each day of the week?

[08:23:03.0000] <TabAtkins>
Man, I don't want anyone to take over my specs.  I like writing specs.

[08:24:00.0000] <Ms2ger>
TabAtkins, do you happen to be interested in ranges?

[08:24:01.0000] <TabAtkins>
God no.

[08:24:02.0000] <jgraham>
TabAtkins: That's your dictatorial streak

[08:24:03.0000] <Ms2ger>
innerHTML?

[08:24:04.0000] <TabAtkins>
Let me rephrase.  I like writing CSS specs.

[08:24:05.0000] <MikeSmith>
zcorpan: dunno what they all do, but when I want to e-mail him, i have to e-mail this alias address that goes to all his secretaries

[08:24:06.0000] <Ms2ger>
innerText?

[08:24:07.0000] <TabAtkins>
That's all you.

[08:25:00.0000] <Ms2ger>
No, innerText most certainly isn't me

[08:25:01.0000] <TabAtkins>
Anyway, I'm all booked up for spec writing for the next year or so.

[08:25:02.0000] <Ms2ger>
I just want it to die

[08:25:03.0000] <TabAtkins>
Got a half-dozen on my plate, at least.

[08:25:04.0000] <zcorpan>
MikeSmith: you should say that Console is a CSS module and TabAtkins will take over it

[08:25:05.0000] <TabAtkins>
Phrase it in terms of the box model and I'm all over it.

[08:25:06.0000] <Ms2ger>
Only *half* a dozen? :)

[08:26:00.0000] <TabAtkins>
Actually...  you might be right.  It's closer to a dozen.

[08:27:00.0000] <TabAtkins>
Images, Flexbox, Positioning, Grid/Template, Generated Content, Lists, Variables, Mixins, Modules, Selector Nesting, Box Model Additions, maybe Box Model, SVG Image Baseline.

[08:27:01.0000] <TabAtkins>
I think that's my current list.

[08:27:02.0000] <TabAtkins>
So that's either 12 or 13.

[08:28:00.0000] <Ms2ger>
Box Model would be really awesome :)

[08:28:01.0000] <TabAtkins>
Yeah, I know.  It'll just be so annoying to write.

[08:28:02.0000] <jgraham>
Maybe BoxModel = Nothing | Just BoxModel

[08:28:03.0000] <TabAtkins>
I wont' even think about it until late Q3, though.

[08:29:00.0000] <TabAtkins>
MONADS

[08:29:01.0000] <zcorpan>
TabAtkins: do you have one spec assigned for each month of the year? :)

[08:29:02.0000] <Ms2ger>
By then, Anne will probably have a good definition of a tree you can use ;)

[08:29:03.0000] <TabAtkins>
Um, more or less, yeah.

[08:53:00.0000] <TabAtkins>
Hixie: Note that 'image-rendering' has nothing to do with optimization.  It *used* to, which is why I map both of the old values to 'auto'.  It is instead purely about intent - some images shouldn't be scaled with a blurring algorithm.

[09:10:00.0000] <TabAtkins_>
Hixie: Could you just change the :active section to say "For the purposes of Selectors, 'activating' an element means..."

[09:10:01.0000] <TabAtkins_>
Hixie: That's the only actual disconnect between CSS and HTML right now, if you ignore the fact that CSS's definition is underspecified.

[09:15:00.0000] <annevk>
Ms2ger, the current one is no good?

[09:15:01.0000] <annevk>
Ms2ger, btw, I renamed and it changed the URL... https://bitbucket.org/ms2ger/dom-core

[09:15:02.0000] <Ms2ger>
Haven't reviewed it

[09:43:00.0000] <jgraham>
Bugzilla needs a throtte on words / bug / unit time

[10:00:00.0000] <jgraham>
Ms2ger, annevk: Is it known that getAttributeNS returns the empty string rather than null if the attribute is missing?

[10:00:01.0000] <jgraham>
At least in webkit / gecko

[10:00:02.0000] <Ms2ger>
Yes

[10:00:03.0000] <Ms2ger>
annevk removed the note I had about that :)

[10:02:00.0000] <zcorpan>
null seems more useful

[10:03:00.0000] <jgraham>
Right, I'm not complaining if it isn't a web-compat problem

[10:03:01.0000] <Ms2ger>
You would know if it was :)

[10:06:00.0000] <jgraham>
Well, maybe

[10:06:01.0000] <jgraham>
If I had perfect knowledge of all bugs

[10:06:02.0000] <Ms2ger>
You == Opera

[10:06:03.0000] <jgraham>
Well, maybe :p

[10:07:00.0000] <jgraham>
(anyway, I can't see any obvious evidence it is a problem and if Gecko _ WebKit are happy to change it is all good)

[10:07:01.0000] <jgraham>
s/_/+/

[10:09:00.0000] <AryehGregor>
jgraham, I could have >60,000 tests instead of ~1500.  It's a few lines' change.  Then Gecko/WebKit pass like 90%+ of tests and Opera/IE9 pass more like 70%.  But my original version is much handier if you want to actually see what problems you're having.

[10:09:01.0000] <jgraham>
AryehGregor: I plan to make the output better

[10:10:00.0000] <jgraham>
Like maybe show Number of passes / fails/ timeouts / etc. and have checkboxes to hide/show results in different categories

[10:10:01.0000] <jgraham>
suggestions welcome

[10:11:00.0000] <AryehGregor>
My framework is tailored to my tests, so it knows to do things like group together the same tests for different attributes if they fail the same way.  So I don't think a general-purpose harness will wind up being as concise no matter what.

[10:11:01.0000] <AryehGregor>
Concise, useful, whatever.

[10:11:02.0000] <jgraham>
Sure, but it can clearly be better than it is now

[10:11:03.0000] <AryehGregor>
Anyway, however you slice it, IE and Opera will fail a huge number of tests due to null handling.

[10:12:00.0000] <AryehGregor>
Definitely.

[10:12:01.0000] <zcorpan>
"And I just had to perjure myself when signing-up by saying,"I am only going to post messages about HTML5"!!!" - http://forums.whatwg.org/viewtopic.php?t=4523

[10:13:00.0000] <AryehGregor>
The philosophy I'm adopting is that I'll test whatever makes sense and not pay much attention to how much that skews failure percentages.  Because it's inevitable that some individual bugs will cause massive failures.

[10:13:01.0000] <zcorpan>
Hixie: besides being wrong these days, it's also annoyingly long, and i'm not sure it's helpful against spam anyway

[10:13:02.0000] <zcorpan>
Hixie: could we disable the antispam plugin on the forums?

[10:13:03.0000] <jgraham>
AryehGregor: It's not a problem if we fail lots of tests due to null handling (except in the sense that we have a bug we need to fix), but it is a problem if we can't see other problems due to the null issues

[10:13:04.0000] <AryehGregor>
Yes, I'm thinking that's what the original version is good for.

[10:14:00.0000] <AryehGregor>
However you slice it, if you have a failed assert aborting the test, one failed assert will mask subsequent ones.

[10:14:01.0000] <jgraham>
Right, so try not to assert for unrelated things in the same test

[10:14:02.0000] <AryehGregor>
Define "unrelated".

[10:15:00.0000] <jgraham>
It's a judgement of course

[10:15:01.0000] <jgraham>
But it sounds like you are generally winding up with tests that can fail for many different reasons

[10:16:00.0000] <AryehGregor>
The only logical things I see are to make one test per tested attribute (dozens of asserts per test), or one assert per test.

[10:16:01.0000] <jgraham>
One assert per test sounds more reasonable in that case

[10:16:02.0000] <AryehGregor>
Well, I'm happy to go either way.

[10:16:03.0000] <AryehGregor>
Ms2ger said he preferred the other way, and I weakly prefer it too.

[10:17:00.0000] <AryehGregor>
Given the existence of the original version.

[10:17:01.0000] <jgraham>
Well doing it this way seems to have harmful effects and I'm not sure what the benefits are

[10:17:02.0000] <jgraham>
Indeed it is the strongest argument yet that making a test/assert distinction is harmful

[10:18:00.0000] <jgraham>
biab

[10:33:00.0000] <AryehGregor>
heycam, could you make a decision one way or another on what null should cast to for WebIDL?  Apparently web-compat requires "null"; it would be nice if the spec said so.  This is blocking some HTML tests I want to write.  http://dev.w3.org/2006/webapi/WebIDL/#es-DOMString

[10:34:00.0000] <Ms2ger>
s/"null"/""/

[10:34:01.0000] <AryehGregor>
Um, yeah.

[10:34:02.0000] <AryehGregor>
That's what I meant.  :)

[10:34:03.0000] <Ms2ger>
Not what you said :)

[10:35:00.0000] <AryehGregor>
Now can someone point out to me what WebIDL says to do when you do something like "delete document.body.id"?

[10:35:01.0000] <AryehGregor>
I'm pretty sure the correct answer is "do nothing", but I can't see where it says that.

[10:36:00.0000] <AryehGregor>
jgraham, the reason I like combining the tests a bit more is it encourages implementers to fix bugs more, since it magnifies the difference between a nearly bug-free implementation and a relatively buggy implementation.  With one assert per test, nobody's going to get less than 70% regardless.

[10:36:01.0000] <AryehGregor>
But my preference is weak.

[10:37:00.0000] <AryehGregor>
If the testing TF has an opinion, I'll change it back.

[10:40:00.0000] <AryehGregor>
I suspect I don't know ES well enough here . . .

[10:40:01.0000] <Ms2ger>
/me checks

[10:40:02.0000] <Ms2ger>
return true, I think

[10:40:03.0000] <AryehGregor>
Where do you see that?

[10:41:00.0000] <Ms2ger>
WebIDL 4.4.5: there MUST be a corresponding property on the interface prototype object, unless:

[10:41:01.0000] <Philip`>
I'd imagine implementers would be more encouraged to fix bugs if the tests accurately pointed out all the bugs, rather than if they obscured the results in order to manipulate the percentages

[10:41:02.0000] <Ms2ger>
IIRC, that means [[GetOwnProperty]] returns undefined

[10:41:03.0000] <AryehGregor>
Philip`, well, my original version is much more convenient for that anyway.

[10:42:00.0000] <AryehGregor>
And I do link to it at the top of the test.

[10:42:01.0000] <AryehGregor>
Ms2ger, okay, I'm just going to assume you're right.

[10:42:02.0000] <Ms2ger>
That's not a good idea in this area, generally :)

[10:43:00.0000] <Ms2ger>
Philip`, are you planning to fix your test bugs soon, btw?

[10:46:00.0000] <Ms2ger>
/me wanted to file a WebIDL bug, noticed AryehGregor already did

[10:51:00.0000] <zewt>
AryehGregor: a good test suite should, whenever possible, expose a particular bug with a particular test; a single bug should only cause multiple tests to fail if the tests are inherently overlapping

[10:52:00.0000] <Philip`>
Ms2ger: Depends on what is considered "soon"

[10:52:01.0000] <AryehGregor>
zewt, that's what my original test harness does.

[10:52:02.0000] <Philip`>
I could probably find this weekend to catch up on the known problems

[10:52:03.0000] <AryehGregor>
/me shrugs

[10:52:04.0000] <Ms2ger>
That would be nice

[10:52:05.0000] <AryehGregor>
Makes no difference to me.  Right now I'm working on adding more tests.

[10:53:00.0000] <Ms2ger>
Otherwise Kris will spend half of the next few telcons on them :)

[10:53:01.0000] <dean->
zcorpan: Hi, I have some feedback on your html5 elements webpage. I wonder if it would be good if you also showed what elements are able to be used as children of each element. Anyway, I think the page is great and it gives people a good intro to the features of html, so thanks for creating the site.

[10:54:00.0000] <Philip`>
s/find this weekend/find time this weekend/

[10:55:00.0000] <Philip`>
(It's not like the weekend itself is at all challenging to find)

[11:02:00.0000] <dean->
zcorpan: http://krijnhoetmer.nl/irc-logs/whatwg/20110212#l-403

[11:03:00.0000] <AryehGregor>
Why can't the spec splitter make xrefs work right in the multipage version?  :(

[11:03:01.0000] <AryehGregor>
(specifically the backlinks)

[11:03:02.0000] <AryehGregor>
(I guess because those are generated by JS for some crazy reason?)

[11:04:00.0000] <AryehGregor>
I guess the logical place to test the rules for parsing non-negative integers is in reflection tests, right?

[11:04:01.0000] <AryehGregor>
So I suppose I should implement that in JavaScript.

[11:04:02.0000] <AryehGregor>
/me does so

[11:05:00.0000] <Philip`>
If the xrefs were handled earlier (e.g. by Anolis, I guess) then it'd probably work better in the multipage one

[11:05:01.0000] <Philip`>
(I don't think the splitter itself would be a good place to implement the xref feature)

[11:06:00.0000] <Ms2ger>
What needs to be handled?

[11:07:00.0000] <Philip`>
AryehGregor: gsnedders had some old tests for the microsyntaxes - maybe you could use something like that, and pass the values through the reflection system?

[11:08:00.0000] <AryehGregor>
Where are they?

[11:08:01.0000] <AryehGregor>
It would take me about ten minutes to write my own, so . . .

[11:08:02.0000] <Ms2ger>
Listed on the WHATWG wiki

[11:09:00.0000] <Philip`>
Ms2ger: Associating each element that has an id with every element that links to it, so a script can find all the backrefs without having to scan the whole document, I guess

[11:09:01.0000] <Ms2ger>
Mike wrote that, I think

[11:09:02.0000] <Workshiva>
What if every element had a uuid...

[11:10:00.0000] <TabAtkins>
httpstat.us is awesome.

[11:19:00.0000] <k0rnel>
wtf 418 :)

[11:19:01.0000] <TabAtkins>
April 1 RFCs rock.

[11:20:00.0000] <k0rnel>
yea, looking at it now

[11:23:00.0000] <heycam>
AryehGregor, I will get back to editing Web IDL in a couple of weeks, so yes. (Anne was recently asking about this recently, too.)

[11:23:01.0000] <AryehGregor>
heycam, great, thanks.

[12:01:00.0000] <AryehGregor>
"Let rounded-value be the number in S that is closest to value, selecting the number with an even significand if there are two equally close values."  How is this actually supposed to be implemented?

[12:02:00.0000] <AryehGregor>
Oh, gsnedders cheated and just hardcoded the correct values.

[12:02:01.0000] <AryehGregor>
/me gives up on implementing the float parsing algorithm in JavaScript

[12:10:00.0000] <Philip`>
AryehGregor: By "cheated" you mean "wrote it in a way that is much more robust and easily verified than a custom-written parser"?

[12:11:00.0000] <AryehGregor>
It's strictly harder to verify manually-written expectations than auto-generated ones, since in the auto-generated case you can always enumerate all the expectations.

[12:22:00.0000] <Hixie>
TabAtkins: 'image-rendering' looked a lot like an optimisation feature when i looked, but i'm glad i'm wrong

[12:22:01.0000] <TabAtkins>
Yeah, it just means "use a smooth scaling algorithm" or "use a pixel-art scaling algorithm".

[12:23:00.0000] <TabAtkins>
The old 'optimizeSpeed' and 'optimizeQuality' values are aliases for 'auto' (smooth blend) now.

[12:23:01.0000] <Ms2ger>
Why?

[12:23:02.0000] <TabAtkins>
Why to which?

[12:23:03.0000] <Ms2ger>
optimize* > auto

[12:24:00.0000] <TabAtkins>
Because user agents should always be optimizing both speed and quality as much as possible given the system constraints.

[12:24:01.0000] <TabAtkins>
Also: because the definition of a "speedy" and "quality" scaling algorithm changes as computing resources become cheaper.

[12:25:00.0000] <zewt>
well, there are three meaningful choices, not two

[12:25:01.0000] <zewt>
"be as fast as possible", "be as high quality as possible", and "use the most general-purpose tradeoff"

[12:26:00.0000] <TabAtkins>
In practice, you always want the third.

[12:26:01.0000] <zewt>
no, not really

[12:26:02.0000] <TabAtkins>
The UA *must* use a cheaper algo when it's fighting for CPU, even if you say to use high-quality.

[12:26:03.0000] <zewt>
if you're an image host and you're displaying an image scaled to the user's browser window, you want to hint the browser to choose quality over speed

[12:26:04.0000] <TabAtkins>
Similarly, the UA *should* use better algos when doing so is easy, even if you at some point in the past mistakenly thought that it should be using only cheap ones.

[12:27:00.0000] <TabAtkins>
The browser should always choose as much quality as possible, given the resources it has.

[12:28:00.0000] <zewt>
that assumes it's possible to make a correct heuristic determination when the image is rendered; I'm not sure that's reasonable

[12:28:01.0000] <AryehGregor>
TabAtkins, the browser can trade off rendering time against quality.

[12:28:02.0000] <AryehGregor>
The author might prefer that the image take longer to display but be higher-quality.

[12:28:03.0000] <AryehGregor>
The browser always has unlimited time, in principle.

[12:28:04.0000] <zewt>
and of course, the browser should always be allowed to ignore a hint like "use the best quality available"; it's always just a hint

[12:29:00.0000] <TabAtkins>
zewt: If it's possible *at all*, it's best done by the browser at the moment the iamge is rendered, rather than an author at some point in the past who has no idea what sort of device the user is running on.

[12:29:01.0000] <AryehGregor>
If you're providing the image for download, you might be okay with it taking significantly longer to scale.

[12:29:02.0000] <zewt>
(well, not necessarily with things like canvas blitting, but for page rendering)

[12:29:03.0000] <AryehGregor>
The browser doesn't know what purpose the author intends the image be used for.

[12:29:04.0000] <TabAtkins>
AryehGregor: Scaling has no effect on downloading.

[12:29:05.0000] <AryehGregor>
Yes, true, not in this case.

[12:29:06.0000] <AryehGregor>
For, say, canvas, that wouldn't be true.

[12:30:00.0000] <AryehGregor>
I can't think of any case where you'd have good reason to change it around for CSS.

[12:30:01.0000] <TabAtkins>
An author who, in 2005, thought that his image was too big and should thus use a cheap scaling algorithm, is wrong now in 2011.

[12:30:02.0000] <TabAtkins>
Similarly, the author who thought that his image scaled fine with a high-quality algo on his desktop machine is wrong when I view the site on my phone.

[12:30:03.0000] <zewt>
how is a browser going to know that the purpose of a page is displaying an image, so the quality of scaling a particular image is more important than usual, and more important than other images on the page?

[12:31:00.0000] <TabAtkins>
zewt: If you're scaling every image on the page, you're doing things wrong.

[12:31:01.0000] <zewt>
if higher-quality image scaling becomes very cheap, then at that point browsers are free to simply ignore the hint

[12:31:02.0000] <zewt>
TabAtkins: no, that's an incorrect generalization

[12:31:03.0000] <TabAtkins>
zewt: It's already true.  It used to be that bilinear scaling was the "quality" algorithm.  Now, bilinear is easy and cheap on the GPU, so you can almost always use it, and algos like Lanczos are the "high-quality" version.

[12:32:00.0000] <zewt>
so browsers should be free to treat "high quality" hints as lanczos (which is what I'd expect, with today's hardware)

[12:32:01.0000] <zewt>
(desktop hardware, that is)

[12:33:00.0000] <TabAtkins>
Browsers should be free to *always* use Lanczos, if they can grab the CPU for it.

[12:33:01.0000] <zewt>
if lanczos scaling becomes the "cheap" algorithm, browsers can treat that as the default, or at that point simply stop paying attention to "high-quality" hints entirely

[12:33:02.0000] <zewt>
TabAtkins: sure; I'm not suggesting anything but a hint

[12:33:03.0000] <TabAtkins>
And they should be free to drop down to nearest-neighbor if there's too much going on, regardless of what the author indicates.

[12:33:04.0000] <TabAtkins>
zewt: I understand.  My point is that hinting in this way provides very close to zero benefit for the browser.

[12:34:00.0000] <zewt>
and I think that's wrong.

[12:34:01.0000] <TabAtkins>
Okay.

[12:34:02.0000] <AryehGregor>
zewt, give specific real-world use-cases.

[12:34:03.0000] <TabAtkins>
I know that our graphics people agree that optimization-hinting isn't useful for this sort of thing.

[12:34:04.0000] <zewt>
i did; an image host that displays images scaled to the user's browser window

[12:34:05.0000] <TabAtkins>
(It can be useful in some cases.)

[12:35:00.0000] <zewt>
in that case, image quality is at the forefront, since the entire purpose of the page is displaying that image

[12:35:01.0000] <TabAtkins>
Heh, if image quality is at the forefront, you serve a larger image and don't scale at all.

[12:35:02.0000] <zewt>
but like I said: scaled to the user's browser window

[12:35:03.0000] <zewt>
you can't have a separate version of the image for every possible window size :)

[12:36:00.0000] <TabAtkins>
Sure.  Now, how does a hint help the browser here?  If it has the CPU for it, it'll use a high-quality scaling algo anyway.  If it doesn't, it wont'.  The only time the hint could possibly matter is if you're in a situation where lots of images need scaling and you have a lightly constrained CPU.

[12:37:00.0000] <AryehGregor>
zewt, is that actually a real-world use-case?  Do you know of a site with that requirement?

[12:37:01.0000] <zewt>
but that's exactly what's wrong: it *won't* use a higher-quality algorithm

[12:37:02.0000] <TabAtkins>
And that depends on the browser detecting this and not just deciding that the best thing to do is bail and scale everything cheaply, so they dont' stress the CPU more than necessary.

[12:37:03.0000] <zewt>
firefox won't use lanczos to scale the image today

[12:41:00.0000] <zewt>
AryehGregor: http://oreno.imouto.org/post/browse#/order:random%20s (note: NWS content on that site, but that URL should filter it out)

[12:42:00.0000] <AryehGregor>
/me isn't interested in looking at sites like that

[12:42:01.0000] <TabAtkins>
That's still a valid case.  ^_^

[12:43:00.0000] <AryehGregor>
Hmm, nobody who implements reflected doubles follows the spec for IDL sets: data:text/html,<!doctype html><script>var el = document.createElement("meter"); el.max = 10000000000; alert([el.getAttribute("max"),Number("10000000000")]);</script>

[12:43:01.0000] <TabAtkins>
A site like that should be using unscaled thumbnails at the bottom, and then scale the main image.  As it's the only image on the page being scaled, your case doesn't apply.

[12:43:02.0000] <AryehGregor>
getAttribute() returns "1e10", not "10000000000".

[12:44:00.0000] <zewt>
TabAtkins: the main image is scaled at runtime; double-click the window, or resize the browser

[12:44:01.0000] <TabAtkins>
zewt: Yeah, I understand.

[12:44:02.0000] <zewt>
(the thumbnails actually can be scaled, too, for mobile)

[12:44:03.0000] <TabAtkins>
But your use-case for hinting relies on there being many scaled images on the page, some of which can be low-quality and some which should be high-quality.

[12:45:00.0000] <AryehGregor>
Are 0 and -0 meaningfully different in JavaScript?

[12:46:00.0000] <Philip`>
Yes

[12:46:01.0000] <TabAtkins>
They're different IEEE doubles.

[12:46:02.0000] <Philip`>
Divide a non-zero value by them

[12:46:03.0000] <AryehGregor>
But 0 === -0, right?

[12:46:04.0000] <TabAtkins>
In webkit, yeah.

[12:46:05.0000] <Philip`>
Yes (but 1/0 !== 1/-0 so they're not actually equivalent)

[12:47:00.0000] <AryehGregor>
TabAtkins, Gecko and Opera too.

[12:47:01.0000] <AryehGregor>
Also String(-0) == "0".

[12:47:02.0000] <AryehGregor>
Confusing.

[12:47:03.0000] <TabAtkins>
So they're the same except where they're not.

[12:50:00.0000] <espadrine>
Well, 1/+0 is +infinity, right? And 1/-0 is -infinity... So it's not completely absurd.

[12:52:00.0000] <AryehGregor>
No, but I'd expect at least String(-0) == "-0".  Although then 0 === -0 but String(0) != String(-0) . . .

[12:53:00.0000] <AryehGregor>
Maybe people shouldn't make up values that don't mathematically exist.  :)

[12:53:01.0000] <zewt>
heh, floating-point infinity has got to be one of the biggest cases of where developers spend a lot of time thinking about something and very little time actually using it

[12:53:02.0000] <TabAtkins>
Maybe you should be more accepting of alternate mathematical models.

[12:53:03.0000] <AryehGregor>
There's a reason -0 is the same as 0 in mathematics.

[12:53:04.0000] <zewt>
in my 15-or-so years of using C, I've never once ever seen or written code that intentionally uses INF

[12:53:05.0000] <AryehGregor>
It's a one-line proof using the group axioms.

[12:54:00.0000] <TabAtkins>
Who needs groups?

[12:54:01.0000] <TabAtkins>
I do all my math over magmas.

[12:54:02.0000] <AryehGregor>
On the other hand, better than PHP's false == "0" != "" == false.

[12:55:00.0000] <AryehGregor>
Additive identities are useful.

[12:55:01.0000] <AryehGregor>
Well, JS sort of has one because it fakes equality.

[12:55:02.0000] <AryehGregor>
The operation isn't well-defined with respect to equality.

[12:55:03.0000] <AryehGregor>
This discussion is an example of the confusion that causes.

[12:59:00.0000] <zewt>
> But ideally, we should hash this out with Microsoft people weighing in here on es-discuss (I'm told they're not allowed to participate on whatwg lists).

[12:59:01.0000] <zewt>
heh

[13:07:00.0000] <AryehGregor>
/me succeeded in getting Opera to fail all tests in the -onepage version

[13:08:00.0000] <zewt>
i'm not entirely following what you're doing, but i have to seriously question the methodology if you're editing tests to make them fail in particular browsers, heh

[13:08:01.0000] <AryehGregor>
If someone can confirm for me how delete is supposed to work, then I can get WebKit to fail everything too because of: data:text/html,<!doctype html><script>delete document.head.id; alert(typeof document.head.id);</script>

[13:08:02.0000] <AryehGregor>
I wasn't really being serious.  :P

[13:09:00.0000] <AryehGregor>
The onepage version is silly, it fails the whole test if there's a single detected bug in that particular attribute's reflection.

[13:09:01.0000] <AryehGregor>
I'll probably replace it with one that runs all the tests regardless.

[13:09:02.0000] <AryehGregor>
But I do think it's nice that I was able to find so many bugs in every browser.

[13:10:00.0000] <AryehGregor>
Sadly, I don't have time to continue isolating and reporting all of them like I was doing before.

[13:10:01.0000] <zewt>
want to know a fun bug? set a timer during pagehide in FF3.6

[13:10:02.0000] <zewt>
iirc it'll be fired after the tab is closed, heh

[13:10:03.0000] <zewt>
fortunately, fixed in 4

[13:11:00.0000] <AryehGregor>
Submit a test to the test suite!

[13:11:01.0000] <zewt>
heh, sort of an interesting challenge to come up with a way to test that

[13:11:02.0000] <zewt>
maybe trigger a page change with window.location, and have the timer set a flag in localStorage

[13:12:00.0000] <AryehGregor>
/me observes that Firefox, Chrome, and Opera take from 7 to 14 seconds to run his test suite, while IE9rc takes 74 seconds

[13:13:00.0000] <Ms2ger>
annevk, what do you need for the glossary thing?

[13:14:00.0000] <AryehGregor>
Okay, now back to execCommand().

[13:14:01.0000] <AryehGregor>
If you, e.g., bold something like <div><p>Foo <p>Bar</div>, Gecko does <div style=font-weight:bold><p>Foo <p>Bar</div>.  Everyone else does something like <div><p><b>Foo </b><p><b>Bar</b></div>.

[13:15:00.0000] <AryehGregor>
I initially specced the latter, but the former is starting to make more sense to me.

[13:15:01.0000] <AryehGregor>
Opinions?

[13:15:02.0000] <AryehGregor>
Specifically, you don't have to know anything about where <b> can validly go.

[13:15:03.0000] <Ms2ger>
/me tends to prefer matching Gecko :)

[13:15:04.0000] <AryehGregor>
In the latter approach, you have to know that you can't put it around the <div> or <p>, which is annoying.

[13:16:00.0000] <AryehGregor>
And will change if new elements are introduced.

[13:16:01.0000] <AryehGregor>
So I'm going to re-spec it.

[13:16:02.0000] <AryehGregor>
Ms2ger, everyone's going to have to rewrite their implementations from scratch anyway to match any conceivable spec, from what I've seen so far.

[13:16:03.0000] <AryehGregor>
Since everyone does crazy different things.

[13:16:04.0000] <Ms2ger>
Aww

[13:17:00.0000] <AryehGregor>
Unless I just spec exactly what one browser does.

[13:17:01.0000] <AryehGregor>
Or almost exactly.

[13:17:02.0000] <AryehGregor>
Maybe if Gecko's sufficiently saner than everyone else, I'll do that.  We'll see.

[13:19:00.0000] <erlehmann>
implying gecko was sane

[13:19:01.0000] <zewt>
the implication knocked him offline

[13:22:00.0000] <zewt>
AryehGregor: what are you referring to, re "bold something"?

[13:22:01.0000] <AryehGregor>
zewt, execCommand().

[13:23:00.0000] <zewt>
(makes me wonder what happens if you then unbold "Foo"--inserting another font-weight: makes sense)

[13:24:00.0000] <AryehGregor>
Depends where your selection is.

[13:24:01.0000] <zewt>
eg. you can bold things with <b>, but there's no element-level analogue for un-bolding as there is with font-weight

[13:24:02.0000] <AryehGregor>
Unbolding "<b>Foo</b>" results in "Foo".

[13:25:00.0000] <AryehGregor>
Unbolding the "oo" in "<b>Foo</b>" results in "<b>F</b>oo".  Etc.

[13:25:01.0000] <AryehGregor>
In fact, bolding "Foo <strong>bar</strong>" generally results in something like "<b>Foo bar</b>".

[13:25:02.0000] <zewt>
yeah--seems like that would get a little complicated with nesting, eg. <b><i>Foo</i></b>--now unbold "oo" and you have to shuffle stuff around

[13:25:03.0000] <AryehGregor>
It's all evil magic, and I aim to uncover its deepest secrets and expose them to the light of day.

[13:26:00.0000] <AryehGregor>
Yep, undoubtedly.

[13:26:01.0000] <AryehGregor>
I'll find out!

[13:32:00.0000] <AryehGregor>
Wait, am I smoking something?

[13:32:01.0000] <AryehGregor>
Now Gecko's behaving differently.

[13:32:02.0000] <AryehGregor>
:(

[13:32:03.0000] <zewt>
heisenbrowser

[13:33:00.0000] <AryehGregor>
Oh, there's a styleWithCSS command . . . sigh.

[13:34:00.0000] <zewt>
dreaming of a world where i can tell gmail to ignore fonts in emails

[13:36:00.0000] <AryehGregor>
No, I'm just confusing myself even more.  Sigh.

[15:04:00.0000] <annevk>
Ms2ger, just thinking it could be done automatically be extracting <dfn>

[15:04:01.0000] <annevk>
Ms2ger, not entirely sure that is gonna work nicely, but it might be interesting

[15:07:00.0000] <othermaciej>
annevk: fonts wg telecon went reasonably well today

[15:08:00.0000] <othermaciej>
(though I wish Håkon had showed up)

[15:10:00.0000] <annevk>
he was at the Opera

[15:10:01.0000] <othermaciej>
so I heard

[15:10:02.0000] <annevk>
he tried calling me but I was away too

[15:11:00.0000] <othermaciej>
fortunately I'm willing to be the one guy on the call who disagrees with everyone else :-)

[15:11:01.0000] <othermaciej>
it seemed though that there was agreement that:

[15:11:02.0000] <othermaciej>
(a) font embedding restrictions should be defined by @font-face, not by WOFF

[15:11:03.0000] <othermaciej>
(b) the way to change from the default restrictions should be From-Origin (or whatever the name is) not CORS

[15:12:00.0000] <othermaciej>
only remaining point of disagreement was whether @font-face should default to From-Origin: same

[15:12:01.0000] <othermaciej>
but I think everyone at least understood the issues

[15:12:02.0000] <annevk>
that's some nice progress

[15:13:00.0000] <annevk>
sweet

[15:14:00.0000] <annevk>
whoa, Ms2ger pushes to W3C too now

[15:15:00.0000] <annevk>
I guess all I have to do now is write

[15:15:01.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#trees

[15:16:00.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#nodes-model are the major changes

[15:17:00.0000] <annevk>
and event dispatching is now based on this too to allow for Indexed DB

[15:19:00.0000] <othermaciej>
so it allows trees other than DOM Node trees?

[15:19:01.0000] <annevk>
apparently that is what Indexed DB wants

[15:20:00.0000] <othermaciej>
neat

[15:21:00.0000] <othermaciej>
maybe it also makes it easier to spec how Window takes part in event dispatch

[15:21:01.0000] <annevk>
yeah, though I don't want that in this spec

[15:21:02.0000] <annevk>
that should be in HTML or a browsing context spec (if we ever get one of those)

[15:37:00.0000] <jennb>
Hixie: ping

[15:43:00.0000] <zewt>
annevk: step 3 of event invocation sounds like event.target gets set to the first node the event is invoked on (eg. the root node during capture phase) and then left there

[15:44:00.0000] <zewt>
ah, it's also set by step 4 of dispatch ... so that's if invocation happens when not during dispatch?

[15:46:00.0000] <AryehGregor>
Does anyone know how long typical TLS handshake caching lasts in practice?

[15:46:01.0000] <Hixie>
jennb: here now

[15:46:02.0000] <AryehGregor>
Like an hour, a day, indefinitely?

[15:46:03.0000] <jennb>
Hixie: can you take a quick look at https://bugs.webkit.org/show_bug.cgi?id=54582 and see if the small change proposed is acceptable?

[15:47:00.0000] <Hixie>
looking

[15:48:00.0000] <Hixie>
jennb: is https://bug-54582-attachments.webkit.org/attachment.cgi?id=82686 a valid test case for this?

[15:48:01.0000] <jennb>
Hixie: yes

[15:48:02.0000] <Hixie>
i guess it depends on the browser default not being UTF-8

[15:49:00.0000] <jennb>
Hixie: true...

[15:49:01.0000] <Hixie>
hold on, let me use my harness for these tests to check it in other browsers

[15:49:02.0000] <jennb>
Hixie: I checked manually on Firefox, Chrome and Safari.

[15:50:00.0000] <zewt>
it repros for me in Chrome: renders correctly with the meta tag, mojibake without it

[15:51:00.0000] <zewt>
(odd, I'd expect browsers to default to UTF-8 for local files by now, but in any case)

[15:52:00.0000] <Hixie>
jennb: there's something more going on than is described in that bug, given the behaviour i'm seeing in other browsers on http://www.hixie.ch/tests/adhoc/html/parsing/encoding/142.html

[15:53:00.0000] <Hixie>
IE8, FF trunk, Opera trunk, Safari WebKit trunk, and Chrome dev trunk all do the same thing on that test

[15:53:01.0000] <Hixie>
and that is not what the bug claims they do, unless i'm misunderstanding the bug

[15:55:00.0000] <jennb>
Hixie: 142.html doesn't test mispelled 'content'

[15:55:01.0000] <zewt>
"Generally speaking, making parsing more strict is rarely helpful." there's a controversial claim if ever there was one. heh

[15:55:02.0000] <annevk>
zewt, I think you spotted something that can be removed now

[15:56:00.0000] <zewt>
annevk: as long as the only reference to "invoke" is the one in "dispatch", then I think so

[15:57:00.0000] <Hixie>
jennb: it spells it "cotent"

[15:57:01.0000] <zewt>
is there a way to tell whether a particular part of a spec is meant to be referenced externally? for example, "dispatch an event" defines something other specs make use of, but "invoke an event" is just an internal "helper function" that probably shouldn't be referred to directly externally

[15:58:00.0000] <zewt>
_invoke_an_event? heh

[15:58:01.0000] <jennb>
Hixie: hmmm... i see that now. yet it passes...

[15:58:02.0000] <jennb>
Hixie: oh, it's supposed to fail, according to that bug.

[15:58:03.0000] <Hixie>
all the browsers do the same thing

[15:58:04.0000] <annevk>
zewt, it's leftover from https://bitbucket.org/ms2ger/dom-core/changeset/6c7a0c465d83

[15:58:05.0000] <jennb>
Hixie: i'm confused now

[15:59:00.0000] <Hixie>
which is consistent with what the spec says (the test's "pass" condition is what the spec says)

[15:59:01.0000] <annevk>
zewt, there's no conventions

[15:59:02.0000] <Hixie>
jennb: (reload the test, you may be looking at an old version where i had the pass condition backwards)

[15:59:03.0000] <annevk>
zewt, maybe besides concept- we should have internal- or some such

[15:59:04.0000] <annevk>
zewt, so it's clear from the title=


2011-02-17
[16:00:00.0000] <annevk>
(which is what's used for cross-references)

[16:00:01.0000] <jennb>
Hixie: yup, reloading changed to fail

[16:00:02.0000] <Hixie>
jennb: all my browsers show "pass"

[16:00:03.0000] <Hixie>
jennb: are you testing with your patch?

[16:00:04.0000] <Hixie>
jennb: (your patch would make it say "fail")

[16:02:00.0000] <annevk>
zewt, fixed

[16:02:01.0000] <annevk>
zewt, I hope you are Glenn btw

[16:02:02.0000] <zewt>
yep

[16:03:00.0000] <annevk>
anyway, should've been asleep long ago once again; maybe I can figure out some stuff on the plan tomorrow

[16:04:00.0000] <annevk>
such as how to structure the initial sections and how assimilate the borrowed terminology

[16:04:01.0000] <annevk>
how to*

[16:04:02.0000] <jennb>
Hixie: On released Chrome, "fail".  On Chrome dev trunk, "pass".  That's what I expect.

[16:04:03.0000] <annevk>
and plan should read plane

[16:04:04.0000] <jennb>
Hixie: The bug wants 142.html to select Windows-1252 like it used to.

[16:05:00.0000] <Hixie>
jennb: matching IE8 seems like a better goal than matching an old Chrome

[16:06:00.0000] <Hixie>
jennb: especially when Firefox and Opera agree with IE8

[16:06:01.0000] <jennb>
Hixie: released FF gives me "fail" on 142.html test

[16:07:00.0000] <Hixie>
jennb: yeah but that's a separate bug

[16:07:01.0000] <Hixie>
jennb: they don't treat 8859-9 as -1254

[16:07:02.0000] <Hixie>
jennb: the point is they get 1254/8859-9 rather than 1252/8859-1

[16:08:00.0000] <jennb>
Hixie: oh, i see.  My IE also gives me "pass".  

[16:08:01.0000] <jennb>
Hixie: i'll add a note to the bug that IE8 behaviour.

[16:08:02.0000] <jennb>
s/that/about

[16:08:03.0000] <zewt>
http://www.hixie.ch/tests/adhoc/html/parsing/encoding/142.html in FF3.6 is "fail", FWIW

[16:09:00.0000] <Hixie>
zewt: see above, it's a pass for the purposes of this discussion

[16:09:01.0000] <Hixie>
the failure is the failure you see on 003.html

[16:09:02.0000] <Hixie>
not the failure we're testing

[16:10:00.0000] <zewt>
i mean re: '<Hixie> jennb: all my browsers show "pass"'

[16:10:01.0000] <jennb>
zewt: that was before I reloaded his test.

[16:11:00.0000] <Hixie>
zewt: ff3.6 shows "pass" if you ignore the fact that it actually says "fail" and just look at the actual results :-P

[16:11:01.0000] <ap>
Hixie: ff3.6 says "Encoding used by browser is: Windows-1252"

[16:11:02.0000] <zewt>
ignoring the result, "Encoding used by browser is: Windows-1252", eg. it picks up "cotent"

[16:11:03.0000] <Hixie>
it does?

[16:11:04.0000] <Hixie>
huh

[16:11:05.0000] <Hixie>
well, ff4 uses 1254

[16:12:00.0000] <Hixie>
i wonder if they have the same regression on that page then

[16:12:01.0000] <ap>
Hixie: could also be complicated by content-based encoding sniffer in Firefox

[16:13:00.0000] <Hixie>
that test should be safe from that

[16:13:01.0000] <zewt>
yeah, i also see ISO-8859-9 used in FF4b11

[16:13:02.0000] <jennb>
if FF has improved their charset detection, we should too. ;-)

[16:13:03.0000] <ap>
Hixie: they do have the same regression on actual page, yes

[16:13:04.0000] <Hixie>
interesting

[16:13:05.0000] <Hixie>
does the actual page work in IE8?

[16:13:06.0000] <Hixie>
(i have IE8 up here if you can pass me the URL)

[16:14:00.0000] <ap>
Hixie: https://bugs.webkit.org/show_bug.cgi?id=54582 (you need to log in, not just open the url)

[16:14:01.0000] <ap>
Hixie: ugh, not sure if I can share the credentials :(

[16:16:00.0000] <Hixie>
well i can promise that i won't abuse them, since i don't understand a word of this site :-)

[16:18:00.0000] <Hixie>
ok i got to log in

[16:18:01.0000] <Hixie>
looks like it works fine in IE8

[16:18:02.0000] <Hixie>
dunno why though

[16:20:00.0000] <Hixie>
the page i get doesn't have a misspelt charset decl

[16:21:00.0000] <Hixie>
wfm in firefox too!

[16:21:01.0000] <Hixie>
(trunk)

[16:21:02.0000] <Hixie>
the decl is:

[16:21:03.0000] <Hixie>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

[16:21:04.0000] <Hixie>
did they just fix this or am i going crazy?

[16:22:00.0000] <ap>
Hixie: I'm still seeing "contet" with a typo

[16:22:01.0000] <ap>
Hixie: even when spoofing UA string in Safari

[16:22:02.0000] <Hixie>
oh wait

[16:22:03.0000] <Hixie>
i didn't follow the rest of the intstructions

[16:22:04.0000] <Hixie>
don't mind me

[16:23:00.0000] <Hixie>
IE8 is broken too

[16:23:01.0000] <ap>
Hixie: oh. I guess we shouldn't care then

[16:23:02.0000] <Hixie>
I vote that we don't fix this. Every browsers is going to have this page broken in the same way in the coming months anyway.

[16:23:03.0000] <Hixie>
they'll fix it.

[16:23:04.0000] <Hixie>
interop ftw?

[16:24:00.0000] <zewt>
heh the key to breaking broken pages: get every browser to expose the bug simultaneously

[16:26:00.0000] <jennb>
I'll update the bug.

[16:28:00.0000] <jennb>
Hixie: thanks for checking all the browsers.

[16:28:01.0000] <Hixie>
np

[16:29:00.0000] <Hixie>
thanks for bringing it to my attention :-)

[16:29:01.0000] <Hixie>
it's nice to see all this work we're doing is actually bringing browsers together, even if we're having to break a few eggs in the process

[16:29:02.0000] <AryehGregor>
:)

[16:30:00.0000] <zewt>
breaking rotton eggs--at least do it outside

[16:30:01.0000] <zewt>
also rotten

[16:32:00.0000] <AryehGregor>
maxlength=30 on an address field.

[16:32:01.0000] <AryehGregor>
That is just lame.

[16:33:00.0000] <Hixie>
live somewhere shorter dude

[16:33:01.0000] <Hixie>
wait, you're in NY

[16:33:02.0000] <zewt>
heh

[16:33:03.0000] <Hixie>
aren't your addresses like optimally compressed already

[16:33:04.0000] <Hixie>
23rd NE 5th Ave #123

[16:33:05.0000] <Hixie>
or some such nonsense

[16:34:00.0000] <zewt>
worse is "verify your email address" fields with onpaste="return false"

[16:34:01.0000] <AryehGregor>
Street names are short, avenue names can be long.

[16:34:02.0000] <AryehGregor>
Apartment number adds to the length.

[16:34:03.0000] <zewt>
i get annoyed enough at those that I open the DOM and remove the attribute before typing my address twice for no reason

[16:34:04.0000] <AryehGregor>
I often remove annoying maxlength attributes from the DOM, on the theory that anyone stupid enough to add such a useless check is also stupid enough to not do a server-side check.

[16:34:05.0000] <Hixie>
zewt: i do that too (though i just always c/p :-) )

[16:34:06.0000] <AryehGregor>
Usually I'm right.

[16:35:00.0000] <Hixie>
hear hear

[16:35:01.0000] <zewt>
that's the point--it prevents copy and paste on your email address

[16:35:02.0000] <Hixie>
i mean i remove the attribute and type it once and copy it, not type it twice :-P

[16:37:00.0000] <zewt>
one time I pasted my phone number into a phone box, and the scripts on the page took the "123-123-1234" i pasted, took "123-123-12" (presumably it tried to remove hyphens in key events), and then refused to let me focus the field again--every time i clicked the field it went "this field's already done!" and focused the next field

[16:37:01.0000] <zewt>
sometimes pages feel like they were written by the three stooges

[16:38:00.0000] <AryehGregor>
On a somewhat related note, does anyone else find Chrome's autofill feature incredibly haphazard and confusing?

[16:38:01.0000] <AryehGregor>
For me, it stores like ten different versions of the same info, with varying levels of completeness, which it often puts in random places when I select one of them.

[16:38:02.0000] <Hixie>
yes but no worse than any other browsers'

[16:38:03.0000] <AryehGregor>
I don't think I've used any other browsers'.

[16:38:04.0000] <Hixie>
i've never had them work for me

[16:39:00.0000] <zewt>
firefox is always remembering my credit card information. heh

[16:39:01.0000] <zewt>
"uh ... thanks?"

[16:39:02.0000] <AryehGregor>
But surely you could make it *slightly* saner.  Like attempting to merge the ten autofill entries that are all "Aryeh Gregor".

[16:40:00.0000] <zewt>
this page makes me lose all hope: http://www.gmacmortgage.com/

[16:41:00.0000] <zewt>
("spot the problem in under five seconds")

[16:42:00.0000] <AryehGregor>
"Flash"

[16:42:01.0000] <zewt>
well, that's the underlying problem, but not the important one

[16:42:02.0000] <gsnedders>
AryehGregor: "Saviour of the universe"?

[16:43:00.0000] <zewt>
it's a login page that isn't https ... and you can be sure no regular users notice

[16:43:01.0000] <hober>
gsnedders AryehGregor: Terminator X it!

[16:43:02.0000] <AryehGregor>
Not using HTTPS is a noteworthy problem in your books?

[16:43:03.0000] <zewt>
for a login page?

[16:44:00.0000] <AryehGregor>
What percentage of login pages actually use HTTPS?

[16:44:01.0000] <AryehGregor>
Like 0.2%?

[16:44:02.0000] <AryehGregor>
The large majority of sites don't support HTTPS for anything at all.

[16:44:03.0000] <zewt>
for pages where you pay your mortgage?

[16:44:04.0000] <zewt>
i've never once seen an online store or anything else that deals with payment/financial information that isn't https

[16:45:00.0000] <zewt>
now, the login mechanism underneith is flash, and presumably *that* part is still encrypted ... but as it's http, you could MITM it trivially

[16:47:00.0000] <AryehGregor>
If the site's main page doesn't use HTTPS, you can MITM it anyway, unless you expect the user to notice that the login page is missing the lock icon.

[16:47:01.0000] <AryehGregor>
(example: http://www.amazon.com)

[16:48:00.0000] <zewt>
well, normally you do do that--if your main page isn't http, you redirect to https to authenticate, so the https indicators are on

[16:48:01.0000] <zewt>
but that's just the problem--https depends on users noticing that, and they don't, ever

[16:48:02.0000] <AryehGregor>
Which is why everyone needs to use STS instead.

[16:48:03.0000] <Hixie>
there have been studies on this

[16:49:00.0000] <Hixie>
users do check for the lock

[16:49:01.0000] <Hixie>
iirc about 25% of people check for the lock in the content area

[16:49:02.0000] <Hixie>
(and ignore hte browser chrome)

[16:49:03.0000] <Hixie>
some proportion check for the "https" and ignore the broken-lock warnings

[16:49:04.0000] <Hixie>
etc

[16:49:05.0000] <zewt>
Hixie: if that was the case, I'd expect this page to have been fixed long ago--the fact that they don't use http suggests that they don't receive many complaints about it

[16:50:00.0000] <Hixie>
i don't have any data on this specific case

[16:50:01.0000] <zewt>
maybe they get lots of complaints and just ignore them all; don't know

[16:52:00.0000] <AryehGregor>
Look, a useful and detailed bug report from Microsoft: http://www.w3.org/Bugs/Public/show_bug.cgi?id=12091

[16:52:01.0000] <AryehGregor>
I guess they've done those before, to be fair.

[16:52:02.0000] <zewt>
of course, this particular case is broken and insecure, which implies massive incompetence--so I suppose the "receives and ignores complaints" possibility isn't a small one

[20:03:00.0000] <wirepair>
starting to think CORS was a bad idea.

[20:04:00.0000] <wirepair>
i've been finding more problems with old code that expectes xhr.open('GET', user_input_url, true); to be 'safe'

[20:04:01.0000] <wirepair>
:/

[23:42:00.0000] <estellevw>
Does anyone know if there is any browser support for image() fallbacks. The 2009 spec reads body {background-image: image(wavy.svg, wavy.png 150dpi, wavy.gif  or blue);}

[23:44:00.0000] <estellevw>
http://www.w3.org/TR/css3-images/#image-notation

[00:56:00.0000] <zcorpan>
wirepair: should we all do the ie way with a different constructor?

[00:57:00.0000] <zcorpan>
XDomainRequest or what it's called

[01:19:00.0000] <mikeke>
Hello all, I have a quick question about the history API

[01:21:00.0000] <mikeke>
is there something like the same domain policy on it?

[03:54:00.0000] <annevk>
on the train in Sweden

[03:54:01.0000] <annevk>
it has the wireless

[03:54:02.0000] <annevk>
MikeSmith, you around?

[03:54:03.0000] <annevk>
MikeSmith, was wondering about Web Notifications

[03:55:00.0000] <jgraham>
Sweden?

[03:55:01.0000] <jgraham>
Also, lucky you :) They're not all that nice

[03:56:00.0000] <annevk>
Stockholm for a few days

[03:56:01.0000] <jgraham>
Unless by "the wireless" you just mean radio ;)

[03:56:02.0000] <annevk>
will come visit you early March :)

[03:56:03.0000] <jgraham>
Yes, it is written on out whiteboard

[03:56:04.0000] <jgraham>
*our

[03:56:05.0000] <annevk>
haha

[03:57:00.0000] <annevk>
hg push works

[03:57:01.0000] <annevk>
and I saw they have 4G here too

[03:57:02.0000] <annevk>
up to 80mbit

[03:58:00.0000] <annevk>
at home I've 120mbit, but that's wired

[04:00:00.0000] <jgraham>
Only in Stockholm though

[04:00:01.0000] <jgraham>
afaik

[04:03:00.0000] <jgraham>
Oh, Malmö, Göteborg + Karlskrona

[04:03:01.0000] <jgraham>
And more polling out this year

[04:03:02.0000] <jgraham>
*rolling

[04:03:03.0000] <annevk>
neat neat

[04:03:04.0000] <annevk>
guess Linkoping has too much students for it to be interesting as a starting point

[04:05:00.0000] <jgraham>
550 SEK/month is not cheap

[04:05:01.0000] <jgraham>
And it looks like the dongle things have the same crappy build quality (and probably the same crappy drivers) as the 3G ones

[04:06:00.0000] <annevk>
seems we have arrived

[05:39:00.0000] <beowulf>
anyone know which browsers implement w3c widgets?

[05:50:00.0000] <zcorpan>
i know opera does

[05:51:00.0000] <hsivonen>
/me isn't aware of any non-Opera browser supporting them

[05:51:01.0000] <hsivonen>
I hear Apache has a non-browser widget runtime

[05:52:00.0000] <hsivonen>
and darobin had at least a prototype-level Gecko-based runtime

[05:58:00.0000] <zcorpan>
/me kills the 5 on http://forums.whatwg.org/

[06:00:00.0000] <beowulf>
cool, thanks

[06:12:00.0000] <jgraham>
So if I have <table><form><input> and I remove/reinsert the <input> from the DOM, what form (if any) should it end up associated with?

[06:20:00.0000] <zcorpan>
jgraham: i think the spec has an algorithm for removing/inserting form controls

[06:20:01.0000] <zcorpan>
jgraham: which iirc kills the parser's form pointer association and just checks form="" and ancestors

[06:21:00.0000] <jgraham>
zcorpan: That's what I think too

[06:21:01.0000] <jgraham>
But I am being held to account for not thinking that two years ago

[06:22:00.0000] <jgraham>
So I wonder if the spec changed or I am not reading it right now

[06:22:01.0000] <jgraham>
Also, that's not what Gecko/WebKit do

[06:39:00.0000] <MikeSmith>
wonder if anybody has taken a look at http://www.w3.org/TR/2010/NOTE-test-methodology-20100128/

[06:42:00.0000] <hsivonen>
documents whose title starts with "A Method for" make me think "patent! run away, run away"

[06:42:01.0000] <hsivonen>
well, at least it's not "Apparatus and Method"

[06:42:02.0000] <MikeSmith>
heh

[06:51:00.0000] <jgraham>
MikeSmith: I have scanned it before

[07:50:00.0000] <MikeSmith>
anybody know how much hardware support OpenSL ES has?

[07:50:01.0000] <MikeSmith>
http://www.khronos.org/opensles/

[07:50:02.0000] <MikeSmith>
"OpenSL ES™ is a royalty-free, cross-platform, hardware-accelerated audio API tuned for embedded systems"

[07:52:00.0000] <MikeSmith>
jgraham: any opinion on the http://www.w3.org/TR/2010/NOTE-test-methodology-20100128/ idea… it seems to mostly just amount to putting IDs on all testable assertions in a spec

[07:53:00.0000] <jgraham>
MikeSmith: I think my opinion is roughly "I'm glad I'm not trying to convince Hixie to do that"

[07:53:01.0000] <MikeSmith>
heh

[07:53:02.0000] <MikeSmith>
indeed

[07:56:00.0000] <Philip`>
HTML5 doesn't have a 1:1 correspondence between assertions and elements

[07:57:00.0000] <Philip`>
or between assertions and continuous sequences of text

[07:58:00.0000] <Philip`>
e.g. it often says "If X, you must Y. Otherwise, you must Z." where the testable assertions are identifiable as "If X, you must Y" and "If X, [...] Otherwise you must Z"

[07:59:00.0000] <Philip`>
(You don't want the assertion to just be identified as "Otherwise you must Z" because that loses a critical part of the context)

[08:00:00.0000] <Philip`>
With the canvas tests I have assertion patterns like

[08:00:01.0000] <Philip`>
  "When the UA is passed an empty string<^> <...> then it *must* return null."

[08:00:02.0000] <Philip`>
  "When the UA is passed <...> a string specifying a context that it does not support<^>, then it *must* return null."

[08:00:03.0000] <Philip`>
for that kind of thing

[08:00:04.0000] <MikeSmith>
OK

[08:01:00.0000] <MikeSmith>
so you're saying your annotations-injection mechanism handles those cases correctly?

[08:01:01.0000] <MikeSmith>
the one you're using for the annotated canvas spec, I mean

[08:01:02.0000] <Philip`>
where <...> means any number of characters (within the current paragraph), and <^> means that's where the annotation should be rendered in the spec, and *must* means that's the relevant normative keyword

[08:02:00.0000] <Philip`>
Yeah, the <...> thing means it's possible for the assertion to include the relevant context without including irrelevant phrases in the middle of the sentence (which might be part of a different assertion)

[08:03:00.0000] <Philip`>
HTML sadly is tree-structured so you can't really do that in the markup

[08:04:00.0000] <Philip`>
(at least not without rewriting the text)

[08:05:00.0000] <Philip`>
(and I don't think rewriting the text of HTML5 would be a necessarily good idea)

[08:05:01.0000] <jcranmer>
starting over from scratch is always a good thing

[08:06:00.0000] <jcranmer>
just ask the developers of Duke Nukem Forever

[08:06:01.0000] <jgraham>
Curiously this is quite close to the first use case I heard for graph-like markup which was annotating the bible

[08:07:00.0000] <jgraham>
Which I assume, without having any particular knowledge, has similar problems

[08:07:01.0000] <Philip`>
I imagine people would object if you started over from scratch on the Bible

[08:08:00.0000] <jgraham>
Well it would be nice to replace the glaring factual errors</flamebait>

[08:08:01.0000] <jcranmer>
Philip`: it's called the Koran ;-)

[08:09:00.0000] <jgraham>
/me wasn't under the impression that the people who wrote the Koran started out with the Bible and decided to rewrite it from scratch

[08:10:00.0000] <jcranmer>
well, arguably, everyone who starts their own religion and eschews older texts and writes their own is arguable rewriting it from scratch

[09:40:00.0000] <MikeSmith>
jgraham: see my reply on testing requirement thread

[09:40:01.0000] <MikeSmith>
I just created http://www.w3.org/wiki/TestInfra/goals

[09:41:00.0000] <MikeSmith>
or rather, copied content we had elsewhere over to there

[09:47:00.0000] <wilhelm>
Cool.

[09:47:01.0000] <wilhelm>
Re: “allow more than one way to test functionality: … anything else?”, I'd like to know what other browser vendors are doing for tests that require some sort of human interaction. Requiring humans to validate test results doesn't scale.

[09:49:00.0000] <wilhelm>
There are Watir and WebDriver implementations for all major browsers now, with varying degrees of vendor support.

[09:49:01.0000] <gsnedders>
wilhelm: Gecko and WebKit pretty much don't do any, just rely upon bugs from users of nightlies, AFAIK

[09:51:00.0000] <wilhelm>
Opera has a test suite for user interaction with forms with a few hundred tests we could probably contribute. That uses the Watir API and emulates real clicks and keyboard events. The same approach might be useful for other features too.

[09:53:00.0000] <wilhelm>
gsnedders: Then this might be a good time to decide on something everyone can use in the future. (c:

[09:55:00.0000] <gsnedders>
wilhelm: WebKit also has https://trac.webkit.org/wiki/Writing%20Layout%20Tests%20for%20DumpRenderTree#DumpRenderTreeJavaScriptEnvironment

[09:56:00.0000] <wilhelm>
Yes, I've seen that one. Looks useful.

[09:57:00.0000] <gsnedders>
wilhelm: Gecko does something similar at a JS level for testing interaction stuff

[11:28:00.0000] <Ms2ger>
Gecko has non-automated litmus tests too

[11:28:01.0000] <Ms2ger>
https://developer.mozilla.org/en/Litmus_tests

[11:44:00.0000] <MikeSmith>
Ms2ger: odd choice of a name for a class of tests

[11:44:01.0000] <MikeSmith>
is the name meant to be ironic?

[11:45:00.0000] <Ms2ger>
Dunno, why?

[11:46:00.0000] <MikeSmith>
http://en.wikipedia.org/wiki/Litmus_test_(politics)

[11:46:01.0000] <MikeSmith>
that term has negative connotations

[11:46:02.0000] <MikeSmith>
seems like it's normally a pejorative term

[11:47:00.0000] <othermaciej>
in the context of politics it has acquired such a connotation

[11:47:01.0000] <othermaciej>
but the original term from science is neutral

[11:47:02.0000] <Ms2ger>
/me assumes chemistry is a more likely source

[11:47:03.0000] <othermaciej>
and it seems totally reasonable to have a binary pass-fail test for software

[11:48:00.0000] <othermaciej>
well, acid vs. base isn't really a good vs. bad judgment

[11:55:00.0000] <mikekelly>
anyone about?

[11:55:01.0000] <Ms2ger>
Nooooooooooooooooooooo

[11:56:00.0000] <mikekelly>
:-)

[11:56:01.0000] <mikekelly>
I've got an edge-case HTTP behaviour I was wondering if it had been considered on the browser side..

[11:57:00.0000] <mikekelly>
If a 200 response to /foo has a Content-Location header of /foo.html - is it feasible for browsers to adjust their address bar appropriately?

[11:59:00.0000] <mikekelly>
same thing for a 201 as well

[12:11:00.0000] <AryehGregor>
That sounds like it's exploitable to prevent users from copying URLs from the URL bar.

[12:12:00.0000] <mikekelly>
AryehGregor: does the history api suffer from that problem?

[12:12:01.0000] <AryehGregor>
Dunno about the history API.

[12:13:00.0000] <mikekelly>
I assume it would, don't know for sure though

[12:19:00.0000] <gsnedders>
mikekelly: It would be backwards incompatible with deployed content (which relies upon the header being ignored)

[12:21:00.0000] <mikekelly>
gsnedders: what sort of deployed content are you thinking of, are there any examples?

[12:26:00.0000] <gsnedders>
mikekelly: http://support.microsoft.com/default.aspx?scid=http://support.microsoft.com:80/support/kb/articles/q218/1/80.asp&NoWebContent=1

[12:30:00.0000] <mikekelly>
gsnedders: that's a bug, right?

[12:31:00.0000] <gsnedders>
mikekelly: It's a bug in IIS, yes. But until all the servers using buggy versions of IIS are gone, there's no way browsers are even going to seriously consider supported Content-Location.

[12:35:00.0000] <mikekelly>
gsnedders: so browsers never make changes that could break buggy applications?

[12:38:00.0000] <AryehGregor>
They never make changes that will cause their users to complain significantly, unless the practical benefit is really worth it.

[12:38:01.0000] <gsnedders>
mikekelly: Pretty much. If a site works in version x of a browser and not in version x + 1, users assume the browser is buggy and try another browser.

[12:38:02.0000] <mikekelly>
AryehGregor: practical to who'm ?

[12:39:00.0000] <AryehGregor>
To the browser implementers.

[12:39:01.0000] <AryehGregor>
Or, by extension, their users.

[12:39:02.0000] <AryehGregor>
Or, by extension, the authors of the pages their users visit.

[12:39:03.0000] <AryehGregor>
(since their goal is to make users happy)

[12:39:04.0000] <AryehGregor>
(their users)

[12:39:05.0000] <mikekelly>
as an author I can tell you that this CL behaviour would be greatly beneficial

[12:41:00.0000] <AryehGregor>
Doesn't matter, if it will cause too many users to complain to the browser implementers.

[12:41:01.0000] <AryehGregor>
Even if it didn't, I very much doubt your claim that this will be greatly beneficial to the author of almost any page that browser users visit, weighted by popularity.

[12:42:00.0000] <mikekelly>
maybe we could meet half way and look at trialling an additional X-Content-Location header with same behaviour?

[12:44:00.0000] <mikekelly>
gsnedders: if we did the above we have the best of both worlds

[12:49:00.0000] <mikekelly>
or better "X-Content-Location-Display: true"

[13:34:00.0000] <Ms2ger>
Reftests almost done...

[13:40:00.0000] <gsnedders>
Ms2ger: For what?

[13:40:01.0000] <Ms2ger>
For running them

[13:44:00.0000] <gsnedders>
Ms2ger: And there you had more all excited about more tests. :(

[13:45:00.0000] <Ms2ger>
Go review AryehGregor's ):

[13:45:01.0000] <Ms2ger>
Or :), even

[13:57:00.0000] <Ms2ger>
/me will upload tomorrow

[14:25:00.0000] <zewt>
heh, is mozilla's tracker *intended* to be impossible to search, with robots.txt preventing it from being indexed...


2011-02-18
[16:27:00.0000] <AryehGregor>
/me is now using two-factor auth for Google, yay

[16:27:01.0000] <AryehGregor>
Now I just have to make sure no one steals my phone.

[16:27:02.0000] <AryehGregor>
(not that I'll lose access, but they'll have access to my Google account)

[16:27:03.0000] <zewt>
i'd be much more concerned about someone stealing my phone than any possible attacks on my password, heh

[16:27:04.0000] <AryehGregor>
(and could hypothetically revoke my access)

[16:27:05.0000] <AryehGregor>
(but that's still strictly better than not having two-factor auth)

[16:27:06.0000] <zewt>
sounds like a solution worse than the problem

[16:28:00.0000] <AryehGregor>
No, because they could already do that anyway.

[16:28:01.0000] <AryehGregor>
Except they could do even worse without the two-factor auth.

[16:28:02.0000] <AryehGregor>
At least now it's a special revocable password that they'll get instead of my main password.

[16:29:00.0000] <zewt>
... do android phones store the google password in the clear? heh

[16:29:01.0000] <AryehGregor>
How else would they log you in?

[16:29:02.0000] <AryehGregor>
It's like any browser where you save the password.

[16:29:03.0000] <zewt>
a password hashed with a device ID, etc

[16:29:04.0000] <AryehGregor>
It seems like that would make no difference in practice, if you can use it to log in.

[16:30:00.0000] <AryehGregor>
Except that you can't easily guess the user's password on other sites, if they use the same password.

[16:30:01.0000] <zewt>
of course it does; you can't change the user's password with it, or authenticate to things that a phone doesn't implicitly auth to

[16:30:02.0000] <AryehGregor>
Well, if that were the case, yes.

[16:30:03.0000] <AryehGregor>
Maybe for the main Android password thing that is in fact how it works.  I dunno.

[16:31:00.0000] <zewt>
i havn't looked; i guess I assumed that Google was competent enough about authentication mechanisms to do that implicitly

[16:31:01.0000] <AryehGregor>
Possibly it stores some secret token that it uses instead of the password to auth.

[16:31:02.0000] <AryehGregor>
I hope that the application-specific passwords I generate can't be used to change my password or anything.

[16:32:00.0000] <zewt>
I'd expect something along the lines of logging in the first time when you enter the password, retrieving an authentication token, and then that token is valid for as long as the lifetime of the password

[16:32:01.0000] <AryehGregor>
If that's correct, then an attacker who got my phone actually couldn't steal my Google account.

[16:32:02.0000] <zewt>
and only that token is stored

[16:32:03.0000] <AryehGregor>
They could only use it until I revoked the password for the phone.

[16:32:04.0000] <AryehGregor>
Yeah, that model makes sense for anything except the web, where legacy constraints make it impossible for now.

[16:33:00.0000] <zewt>
but not for Google/Android auth

[16:33:01.0000] <AryehGregor>
No, it wouldn't make sense for that.  But I dunno how it works.

[16:33:02.0000] <zewt>
er, sure it'd make sense for that

[16:33:03.0000] <AryehGregor>
That's what I meant.

[16:33:04.0000] <zewt>
not for = not impossible for

[16:33:05.0000] <AryehGregor>
Google's system is going to be designed for web-based logins, obviously, which means expecting cleartext passwords.  Dunno if they made special provision for non-web logins.  I hope so.

[16:34:00.0000] <AryehGregor>
But it doesn't really matter for me anymore, I think.

[16:35:00.0000] <zewt>
anyhow, my concern was that if Android's stored authentication system is eg. token-based, and you're now using a system that lets you revoke access from the phone, then you've given more authority to your phone--increasing the danger if your phone is stolen

[16:35:01.0000] <zewt>
as for how android/google auth actually works--no idea, never looked

[16:36:00.0000] <AryehGregor>
The only change as far as my phone knows is that 1) it has a special-purpose revocable password instead of my real one, which I hope can't be used to change my real password or other login/auth info, and 2) there's an app installed that generates numbers that I need to log in, in addition to my real password.

[16:36:01.0000] <AryehGregor>
The special revocable password doesn't need the numbers to log in, but I assume it's more limited than what my real password plus numbers lets me do.

[16:37:00.0000] <AryehGregor>
So I'm more or less strictly better off.

[16:37:01.0000] <AryehGregor>
(Plus my parents' landline can be used to generate the numbers if my phone is lost, plus I have backup numbers in my wallet.)

[16:37:02.0000] <AryehGregor>
But the numbers are useless without knowing my real password.

[16:37:03.0000] <AryehGregor>
Now I'm going to feel a lot happier about logging into my Google account from untrusted Windows machines.

[17:27:00.0000] <roc>
I wouldn't feel much happier about logging in from an untrusted machine

[17:31:00.0000] <jamesr_>
if they steal your username/password/one-time auth token they can't use it to log in later

[17:31:01.0000] <jamesr_>
although they can do a whole lot of badness while you are logged in

[17:31:02.0000] <jamesr_>
but if you are worried about a keylogger plugged in to the back of the machine that the russian spy will pick up later, it helps

[17:40:00.0000] <AryehGregor>
I'm pretty sure a large fraction of real-world exploits just collect data and send it someplace for later use, rather than attempting immediate exploits.

[17:40:01.0000] <AryehGregor>
Although yeah, I wouldn't try it on a machine I actually suspect to be compromised.

[17:40:02.0000] <AryehGregor>
But it's an extra safety measure.

[20:12:00.0000] <roc>
TabAtkins: ping?

[01:33:00.0000] <hsivonen>
:-( Opera still doesn't support HTML5 D&D

[01:56:00.0000] <hsivonen>
can anyone suggest a nice Open Source Canvas 2D demo that is easy to integrate into a larger HTML document?

[01:58:00.0000] <annevk>
like http://annevankesteren.nl/test/html/canvas/demo/002.html ?

[01:58:01.0000] <annevk>
or http://people.opera.com/danield/html5/html5logo/

[01:58:02.0000] <Rik`>
hsivonen: Hixie's ? http://www.whatwg.org/demos/2008-sept/color/color.html

[02:02:00.0000] <hsivonen>
annevk, Rik` : thanks. of those, Hixie's animates the most

[02:02:01.0000] <hsivonen>
doesn't really drive home the point that this can be used for games, though

[02:02:02.0000] <Rik`>
hsivonen: use ztype for that ?

[02:04:00.0000] <zewt>
maybe not easy to integrate, but a nifty demo http://benfirshman.com/projects/jsnes/

[02:07:00.0000] <hsivonen>
Rik`: ztype would require me to sit down to type. also, there's no mention of an open source license

[02:08:00.0000] <hsivonen>
first rule for presentations is having everything on your own site *and* at a file: URL

[02:08:01.0000] <Rik`>
I know :)

[02:10:00.0000] <zcorpan>
maybe you can find something in http://www.canvasdemos.com/type/games/

[02:10:01.0000] <hsivonen>
zcorpan: thanks

[02:12:00.0000] <hsivonen>
maybe I should cheat and show a video of Biolab Disaster or something

[02:13:00.0000] <hsivonen>
/me tries making a local copy of the WebGL aquarium

[02:15:00.0000] <jgraham>
I think the first rule of presentations is "have something interesting to say"

[02:15:01.0000] <jgraham>
followed by "have the confidence to engage your audience"

[02:15:02.0000] <jgraham>
Since those will get you a long way even if all your demos fail

[02:16:00.0000] <hsivonen>
the Microsoft fish tank is ARR :-(

[02:17:00.0000] <jgraham>
Pirated?

[02:17:01.0000] <hsivonen>
All Rights Reserved

[02:17:02.0000] <jgraham>
I see

[03:04:00.0000] <zcorpan>
/me files https://bugzilla.mozilla.org/show_bug.cgi?id=635194

[04:42:00.0000] <Areks>
bga_:  ���� ���� ���� ������

[04:42:01.0000] <bga_>
hi

[04:44:00.0000] <Areks>
bga_:  так видно?

[04:44:01.0000] <bga_>
yes

[04:44:02.0000] <jgraham>
𐂅

[04:45:00.0000] <Areks>
bga_: типо круто не пилишься )

[04:46:00.0000] <bga_>
Areks english only plz

[04:46:01.0000] <bga_>
or PM

[04:46:02.0000] <Areks>
bga_: why?

[06:35:00.0000] <jgraham>
/me notices that the SVG tests use tables for layout in their HTML wrapper

[06:36:00.0000] <wilhelm>
They could use a bit of spring cleaning in general.

[06:39:00.0000] <jgraham>
Yes, I'm not claiming that's an exhaustive list of things that are wrong with them

[08:01:00.0000] <TabAtkins>
roc: Just in case you read logs, pong.  If you don't, I'll find you later on #developers, since you're not there now.

[09:14:00.0000] <TabAtkins>
hsivonen: I have a really cool-looking canvas 2d demo.  One sec.

[09:25:00.0000] <TabAtkins>
hsivonen: http://www.xanthir.com/etc/cthulhu.html

[09:25:01.0000] <hsivonen>
TabAtkins: nice. what's the license?

[09:26:00.0000] <TabAtkins>
What license do you want?

[09:26:01.0000] <Rik`>
use wtfpl !

[09:26:02.0000] <hsivonen>
TabAtkins: MIT would work

[09:26:03.0000] <hsivonen>
Rik`: OSI approved is nicer

[09:27:00.0000] <TabAtkins>
Darn, and I already have xanthir.com/wtfpl.txt to point to.

[09:27:01.0000] <TabAtkins>
Is public domain good enough?

[09:27:02.0000] <hsivonen>
TabAtkins: yes

[09:27:03.0000] <TabAtkins>
Let me annotate the source real quick.

[09:27:04.0000] <hsivonen>
(and the slide system I'm using is WTFPL anyway, so I'm already relying on that even though it's not best practice)

[09:30:00.0000] <TabAtkins>
Done.

[09:30:01.0000] <hsivonen>
TabAtkins: thank you!

[09:31:00.0000] <TabAtkins>
I think Chrome breaks the Inspector when it needs an update on purpose just to make me restart.

[09:31:01.0000] <hsivonen>
FWIW, my slide draft is at http://hsivonen.iki.fi/html5-lecture/2011/slides.html#1

[09:33:00.0000] <AryehGregor>
/me always forgets that it's a bad idea to write O(N) formulas in spreadsheet cells, because then when you paste to a whole row or column it becomes O(N^2)

[09:33:01.0000] <AryehGregor>
And Gnumeric is too stupid to let me abort mid-paste.

[09:33:02.0000] <AryehGregor>
Oh well.

[09:34:00.0000] <AryehGregor>
/me kills it and starts again

[09:39:00.0000] <hsivonen>
TabAtkins: integrated. thanks! http://hsivonen.iki.fi/html5-lecture/2011/slides.html#104

[09:40:00.0000] <hsivonen>
This might benefit from mozRequestAnimationFrame

[09:40:01.0000] <TabAtkins>
Yeah, it would.

[09:43:00.0000] <TabAtkins>
hsivonen: Hmm, your slides sad-tab me after half a second in Chrome.

[09:44:00.0000] <hsivonen>
/me assumes sad-tab means Chrome crashed, not sad Tab

[09:44:01.0000] <TabAtkins>
/me is sad.

[09:45:00.0000] <hsivonen>
:-(

[09:53:00.0000] <TabAtkins>
I assume this is meant to be run in FF4, too, as I can't get past slide 7 in ff3.6

[10:07:00.0000] <AryehGregor>
Why would anyone use FF3.6 by now?

[10:07:01.0000] <TabAtkins>
Because FF4 isn't publicly available yet?

[10:08:00.0000] <aho>
dunno... maybe because ff4b12 is a f-ing trainwreck right now?

[10:08:01.0000] <aho>
<:

[10:08:02.0000] <TabAtkins>
Also: because it's what's installed on my corp image and I haven't gotten around to installing another version.

[10:08:03.0000] <aho>
2 title bars, add-on panel doesnt work, firebug doesnt, work, f5 doesnt work...

[10:09:00.0000] <Ms2ger>
Sounds like you broke something

[10:09:01.0000] <Ms2ger>
Try with a new profile

[10:10:00.0000] <aho>
two

[10:10:01.0000] <aho>
title

[10:10:02.0000] <aho>
bars

[10:10:03.0000] <TabAtkins>
...yes?  How does that mean you didn't break something?

[10:11:00.0000] <TabAtkins>
(I dunno if you did or not, just pointing out that two title bars isn't a valid argument.)

[10:11:01.0000] <aho>
that's major breakage

[10:11:02.0000] <TabAtkins>
yes?

[10:11:03.0000] <aho>
i dont see how a profile could cause that

[10:11:04.0000] <Ms2ger>
That's why it's on your side

[10:12:00.0000] <Ms2ger>
Because Firefox is more extensible than any other browser

[10:21:00.0000] <aho>
nuking it worked

[10:21:01.0000] <aho>
canvas is still slow though

[10:22:00.0000] <aho>
i.e. i get around 38fps instead of 80 in my game

[10:23:00.0000] <aho>
hum... looks like the timer behaves worse now

[10:26:00.0000] <AryehGregor>
Firefox 4b12 works great for me.

[10:26:01.0000] <AryehGregor>
I think I'm still on b11, though.

[10:26:02.0000] <AryehGregor>
They really need to get something like Chrome's dev channel working.

[10:29:00.0000] <Ms2ger>
To push betas that haven't been released yet?

[10:30:00.0000] <Ms2ger>
b11 is the latest

[10:30:01.0000] <AryehGregor>
Well, that explains why I'm on b11.

[10:30:02.0000] <AryehGregor>
But it's annoying to manually download the new betas every time.  Although I think last time this came up someone said you only have to do that on Linux, or something.

[10:34:00.0000] <aho>
got b12pre (2011-02-18) here

[10:34:01.0000] <AryehGregor>
It doesn't seem very fair to criticize Firefox 4 generally based on unreleased betas.

[10:35:00.0000] <AryehGregor>
It would be a bit more reasonable if it were released.

[10:37:00.0000] <GPHemsley>
hmm... is there something wrong with W3C's XHTML5 validator?

[10:39:00.0000] <hober>
GPHemsley: anything in particular?

[10:39:01.0000] <GPHemsley>
it fails altogether :P

[10:40:00.0000] <GPHemsley>
http://validator.w3.org/check?uri=http%3A%2F%2Fplanet.mozilla.org%2F&charset=%28detect+automatically%29&doctype=Inline&group=0&ss=1&outline=1&verbose=1

[10:41:00.0000] <GPHemsley>
Also, I was just told that the HTML5 doctype triggers HTML2 mode in some legacy software... has anyone heard that before?

[10:41:01.0000] <Ms2ger>
No

[10:42:00.0000] <Ms2ger>
Not in any mainstream browsers

[10:42:01.0000] <GPHemsley>
I'm not positive, but I don't think that this was a browser

[10:42:02.0000] <GPHemsley>
possibly BBEdit

[11:17:00.0000] <TabAtkins>
matjas: Request from tantek - could you add "feed edits updates drafts" to the @csscommits bio to make it easier to search for?

[11:25:00.0000] <Hixie>
hmmmm

[11:25:01.0000] <Hixie>
benschwarz: ping

[11:26:00.0000] <Hixie>
benschwarz: what do you think of the idea of having developers.whatwg.org exclude features that are not yet widely implemented?

[11:41:00.0000] <paul_irish>
Hixie: better if we just wire it up to caniuse's API and illustrate browser support inline

[11:42:00.0000] <paul_irish>
we're doing that now at http://www.html5rocks.com/features/storage

[11:48:00.0000] <Hixie>
ooh, there's an api?

[11:48:01.0000] <Hixie>
what does it need?

[11:48:02.0000] <Hixie>
i can just hook that up to the sidebar annotations instead of having people maintain it

[11:49:00.0000] <Hixie>
my original question was because people are asking for a version of the spec that doesn't include unimplemented stuff, and i don't really want to add a ninth whatwg spec, so i'm looking to figure out how i can reuse the existing ones

[11:51:00.0000] <miketaylr>
paul_irish: the webstorage stuff for opera is wrong, should be 10.50+

[11:52:00.0000] <paul_irish>
yeah the indexeddb stuff for chrome is off. let's get Fyrd in here

[11:52:01.0000] <miketaylr>
it's fine on caniuse, just wrong on html5rocks

[11:52:02.0000] <paul_irish>
Hrm! okay

[11:52:03.0000] <paul_irish>
api = http://caniuse.com/jsonp.php?callback=mycallback

[11:53:00.0000] <miketaylr>
nice.

[11:55:00.0000] <Hixie>
not clear how one would use that from the spec

[12:10:00.0000] <AryehGregor>
I have to say, I know it makes me crazy, but I love reading IRS publications.

[12:10:01.0000] <AryehGregor>
"You can treat your child as meeting the residency test even if the child has been kidnapped, but both of the following statements must be true."

[12:10:02.0000] <AryehGregor>
"The child is presumed by law enforcement authorities to have been kidnapped by someone who is not a member of your family or the child's family.

[12:10:03.0000] <AryehGregor>
In the year the kidnapping occurred, the child lived with you for more than half of the part of the year before the date of the kidnapping."

[12:10:04.0000] <AryehGregor>
  This treatment applies for all years until the child is returned. However, the last year this treatment can apply is the earlier of:

[12:10:05.0000] <AryehGregor>
The year there is a determination that the child is dead, or

[12:10:06.0000] <AryehGregor>
The year the child would have reached age 18.

[12:11:00.0000] <AryehGregor>
I've also seen regulations concerning clergy who have taken a vow of poverty.

[12:11:01.0000] <Hixie>
is kidnapping common enough that it has to be handled by explicit legislation and can't be handled on a case-by-case basis?

[12:11:02.0000] <Hixie>
that's sad

[12:12:00.0000] <AryehGregor>
These are regulations that cover the whole United States.

[12:12:01.0000] <AryehGregor>
There are probably like 100 million tax returns being filed.

[12:12:02.0000] <AryehGregor>
So figure at least a thousand a year with kidnapped children, even if the kidnapping rate is really really low.

[12:13:00.0000] <AryehGregor>
How would you handle it on a case-by-case basis, appoint people who are allowed to arbitrarily decide to change around someone's tax returns based on their own judgment?

[12:14:00.0000] <Hixie>
yes

[12:14:01.0000] <Hixie>
they are called "judges"

[12:14:02.0000] <Hixie>
you would use a small-claims-like model where there's no lawyers

[12:15:00.0000] <Hixie>
just call them up, say what's going on, let them figure it out

[12:15:01.0000] <AryehGregor>
And the judges would just make stuff up without any specific rules to go by?

[12:15:02.0000] <AryehGregor>
Judges normally rule according to law or regulation or something.

[12:15:03.0000] <Hixie>
they use broad guidelines like the constitution to determine specific cases based on their judgement

[12:16:00.0000] <Hixie>
1000 kidnappings a year in the US seems like a horrificly high number. That's 15 children per million children kidnapped.

[12:17:00.0000] <AryehGregor>
http://www.kidsfightingchance.com/stats.php

[12:17:01.0000] <AryehGregor>
"The rate of reported missing children in the United States is 11.4 per 1,000"

[12:18:00.0000] <AryehGregor>
"Of the 800,000 children reported missing annually, approximately 69,000 are abducted"

[12:18:01.0000] <Hixie>
holy kittens. In the United States, 203,900 children were reported as the victims of family abductions and 58,200 of non-family abductions in 2009.

[12:18:02.0000] <AryehGregor>
You have an amazingly optimistic view of the amount of crime that goes on.

[12:18:03.0000] <AryehGregor>
Remember that in the case of kidnapping, most of it is going to be related to custody disputes.

[12:18:04.0000] <Hixie>
i like to think of it as a european view

[12:19:00.0000] <Hixie>
but i've no idea if that's valid or not :-)

[12:19:01.0000] <AryehGregor>
Like the mother gets custody and the father thinks she's crazy so he tells the kid to come with him, or whatever.  Mostly not going to be strangers kidnapping kids for nefarious purposes.

[12:19:02.0000] <Hixie>
(1% of children are reported missing every year in the US?!)

[12:19:03.0000] <Hixie>
(wtf are y'all doing with your kids?!)

[12:19:04.0000] <AryehGregor>
1% is really an awfully small number.

[12:20:00.0000] <Hixie>
it should be 0

[12:20:01.0000] <AryehGregor>
. . .

[12:20:02.0000] <Hixie>
1% is huge compared to 0

[12:20:03.0000] <AryehGregor>
/me introduces Hixie to this thing called "real life", where not everyone knows where everyone else is at all times

[12:20:04.0000] <gsnedders>
/me is now in the city with the highest crime rate in Britain

[12:20:05.0000] <AryehGregor>
A child reported missing can mean they ran away, or went to a friend's house without telling their parents, or whatever.

[12:21:00.0000] <AryehGregor>
Do you propose that parents outfit all their children with tracking devices or something?

[12:21:01.0000] <AryehGregor>
I mean, how could you possibly expect that you wouldn't have a nontrivial number of missing children reports?

[12:23:00.0000] <Hixie>
no i propose that the parents not be so bad that their children are running away :-)

[12:23:01.0000] <Hixie>
but anyway, it's the kidnapping, especially kidnapping by non-parents, that is the number i was primarily concerned about

[12:23:02.0000] <gsnedders>
It's not just parents that cause children to run away, social pressure from peers can ultimately lead to such things

[12:24:00.0000] <Hixie>
and 58,200 is 58 times higher than you predicted even for that

[12:24:01.0000] <AryehGregor>
Are you suggesting that children normally only run away if their parents are bad, and not because they're being stupid?

[12:24:02.0000] <AryehGregor>
I didn't predict it was 1,000, I said that was a really really low number.

[12:24:03.0000] <Hixie>
so presumably you'd agree with me that it's high :-)

[12:24:04.0000] <AryehGregor>
I initially wrote "tens of thousands", then changed it to 1,000 to avoid objections that it was unreasonably high.

[12:24:05.0000] <AryehGregor>
Which you made anyway.

[12:24:06.0000] <Hixie>
well this argument is completely subjective

[12:25:00.0000] <AryehGregor>
It's subjective except insofar as my expectations are demonstrably realistic, whereas yours are not.  :)

[12:25:01.0000] <AryehGregor>
(in fact, your expectations are demonstrably unrealistic)

[12:25:02.0000] <Hixie>
it's not clear to me that the magnitude of the frequency of a bad thing happening should be characterised relative to its current average as opposed to its ideal state.

[12:26:00.0000] <AryehGregor>
It's clear to me that when you're amazed at reality, your expectations were incorrect.

[12:27:00.0000] <AryehGregor>
Being disappointed with reality is different from being surprised.

[12:27:01.0000] <Hixie>
i don't think i'm arguing that my expectations were correct

[12:27:02.0000] <Hixie>
i'm arguing that the amount of kidnapping is awfully high

[12:28:00.0000] <AryehGregor>
Well, that's subjective, yes.

[12:28:01.0000] <AryehGregor>
In that you aren't giving a reference point, so you're not actually saying anything meaningful.

[12:30:00.0000] <Hixie>
my point was that it was sad that it was common enough to require explicit legislation

[12:30:01.0000] <Hixie>
i stand by that point

[12:32:00.0000] <Hixie>
there were 71000 registered criminal offenses per million inhabitants in switzerland in 2009

[12:33:00.0000] <Hixie>
can't find specific numbers for kidnapping

[12:33:01.0000] <AryehGregor>
In other words, 7.1%.

[12:33:02.0000] <Hixie>
not sure how to compare that number to the US kidnapping numbers unfortunately

[12:34:00.0000] <AryehGregor>
You can't, reporting methods will vary greatly.

[12:34:01.0000] <Hixie>
and my google-fu is failing me in finding numbers for kidnapping in the US

[12:34:02.0000] <Hixie>
er, in CH

[12:34:03.0000] <AryehGregor>
This is why people usually compare murder rates.

[12:34:04.0000] <AryehGregor>
Because murders are almost all reported and are usually pretty unambiguous.

[12:34:05.0000] <AryehGregor>
It's very plausible that the US and Switzerland might have different definitions of "kidnapping", even if you can find stats.

[12:35:00.0000] <AryehGregor>
Actually, different states in the US probably have different definitions.

[12:35:01.0000] <Hixie>
http://www.nationmaster.com/country/sz-switzerland/cri-crime claims 203 kidnappings, not sure what year or what definition

[12:35:02.0000] <Hixie>
(7.8 million inhabitants)

[12:36:00.0000] <Hixie>
doesn't have US numbers though

[12:37:00.0000] <AryehGregor>
I'd be very surprised if Switzerland's crime rate weren't a lot lower than the US's.

[12:37:01.0000] <Hixie>
were that true, would you say that switzerland's crime was low, or that the US's was high? :-)

[12:38:00.0000] <AryehGregor>
I would say that the US's crime rate is higher than Switzerland's.

[12:38:01.0000] <AryehGregor>
Or would otherwise clearly qualify what I was saying, unless the context made qualification clear.

[12:39:00.0000] <AryehGregor>
E.g., when speaking to other Americans, I might call Switzerland's low, and we'd assume a common reference point of America.

[12:39:01.0000] <AryehGregor>
Doesn't work so well on IRC.

[12:43:00.0000] <hsivonen>
TabAtkins: I suspect Chrome doesn't tolerate iframed WebGL

[12:44:00.0000] <AryehGregor>
Is WebGL really going to wind up being that brittle?

[12:44:01.0000] <AryehGregor>
That's sad.

[12:44:02.0000] <AryehGregor>
(or is this more of a temporary thing?)

[12:44:03.0000] <TabAtkins>
hsivonen: I don't think I'm running a chrome version that accepts WebGL.

[12:45:00.0000] <hsivonen>
TabAtkins: oh. that can't be the explanation then

[12:45:01.0000] <Hixie>
speaking of WebGL, I spoke with Ian Fette the other day and we agreed that I need to update the WebSockets API to add binary now, but we were both a little concerned about exposing underlying endianess of the platform in the API -- is there a binary API yet that doesn't do that?

[12:45:02.0000] <TabAtkins>
Or, hm, maybe I am now?  I'm running 10.0.648 beta

[12:45:03.0000] <othermaciej>
ArrayBuffer is becoming the de facto choice for binary

[12:46:00.0000] <othermaciej>
people have noted the endianness issue, but there has been no serious attempt to fix it

[12:47:00.0000] <AryehGregor>
Which means de facto it will become little-endian, no?

[12:48:00.0000] <hsivonen>
/me expects little endian to become de facto as there are no notable big endian WebGL impls

[12:48:01.0000] <hsivonen>
maybe even s/notable //

[12:48:02.0000] <Hixie>
i guess i can spec around it or something... have the websockets spec say something like "if the platform isn't [something]-endian, then [mutate the data so it turns out to be the same as if the platform was the right endianness]" or some such

[12:48:03.0000] <Hixie>
i'd have to look at the ArryaBuffer stuff to see how that would work

[12:49:00.0000] <TabAtkins>
ArrayBuffer should be specced to just be little-endian, given that it's going to be the default assumption, right?

[12:49:01.0000] <AryehGregor>
Yes.

[12:50:00.0000] <gsnedders>
I guess half the problem then is the things where big endian is used nowadays for browsers tends to be with lower end hardware

[12:50:01.0000] <TabAtkins>
Hm.  What's the baseline of an empty block element?  I can't seem to find it in CSS 2.1

[12:50:02.0000] <gsnedders>
(so the cost of conversion is more expensive)

[12:51:00.0000] <othermaciej>
 Hixie that's not really possible

[12:51:01.0000] <othermaciej>
Hixie: byte-swapping depends on the size of individual data fields

[12:51:02.0000] <othermaciej>
Hixie: you can't do it transparently on binary data of unknown format

[12:52:00.0000] <othermaciej>
4 8-bit fields are unaffected by endianness, but one 32-bit field needs to be byte-swapped

[12:52:01.0000] <TabAtkins>
Hm, I guess the baseline of a block doesn't really make sense, so never mind.  It's only inline-blocks that have a baseline.

[12:52:02.0000] <Hixie>
yeah it might just have to be something like "except the API must be little-endian" or whatnot

[12:53:00.0000] <Hixie>
(though shouldn't it be big-endian, to match network byte order? it's gonna be really confusing to have an API that manipulates network protocol messages and is backwards from the wire.)

[12:53:01.0000] <othermaciej>
in principle you can byte-swap on read or write

[12:53:02.0000] <Hixie>
(i guess webgl has different needs)

[12:53:03.0000] <othermaciej>
yeah, you probably want network byte order, which would imply always byte-swapping on all common hardware :-(

[12:54:00.0000] <hsivonen>
TabAtkins: did you happen to file the Chrome crash on my slides already?

[12:54:01.0000] <AryehGregor>
The solution that doesn't require byte-swapping on common hardware is obviously the only sane one.

[12:54:02.0000] <TabAtkins>
hsivonen: No, not yet.

[12:54:03.0000] <Hixie>
AryehGregor: not so obviously

[12:54:04.0000] <TabAtkins>
hsivonen: I havent' spent the time to reduce it.

[12:55:00.0000] <Hixie>
AryehGregor: since it's essentially useless to have a 32bit-int-reader that is not reading data in network byte order if the data is in network byte order

[12:55:01.0000] <Ms2ger>
The solution that doesn't expose endianness is, but that has been ignored

[12:56:00.0000] <AryehGregor>
Hixie, why should the data be in network byte order?

[12:57:00.0000] <AlexNRoss>
Requested addition to http://www.whatwg.org/specs/web-apps/current-work/#linkTypes : Link Type: dofollow

[12:58:00.0000] <Ms2ger>
AlexNRoss, please add it to the wiki

[12:58:01.0000] <Hixie>
AryehGregor: because data on the wire is almost always in network byte order, that's what network byte order is for

[12:58:02.0000] <Hixie>
s/is for/is named for/

[13:00:00.0000] <AryehGregor>
In real-world WebGL uses, aren't you going to be using data that you specifically design for WebGL?  Why not transmit it on the wire in whatever endianness WebGL will use?

[13:01:00.0000] <othermaciej>
AryehGregor: I think the WebGL use case is not focused on data on the wire

[13:01:01.0000] <othermaciej>
it's between JS and the graphics card

[13:01:02.0000] <hsivonen>
Hixie: shouldn\t the Web Socket API only care about the byte view to array buffers and leave the rest to array buffers themselves?

[13:01:03.0000] <othermaciej>
which will both operate in host byte order

[13:03:00.0000] <jamesr_>
network->JS->WebGL is also an important use case

[13:03:01.0000] <jamesr_>
downloading big meshes or whatnot

[13:05:00.0000] <AlexNRoss>
Ms2gr: I see no edit button on http://wiki.whatwg.org/wiki/RelExtensions

[13:08:00.0000] <Ms2ger>
Create an account, I guess

[13:11:00.0000] <matjas>
TabAtkins: Updated @csscommits bio in an attempt to please @t. You know it hasn't updated the past 9 days right?

[13:12:00.0000] <othermaciej>
jamesr_: I agree, but it is tricky to figure out how to work that one

[13:12:01.0000] <matjas>
TabAtkins: Can haz feed caching kthxbaï

[13:12:02.0000] <AlexNRoss>
Ms2ger: Do you have an account?

[13:12:03.0000] <othermaciej>
jamesr_: to hand the buffer off to the GPU with reasonable performance, it has to be in host byte order

[13:13:00.0000] <othermaciej>
jamesr_: but data comes in off the net presumably in host byte order, and how to byte-swap it is format-specific

[13:13:01.0000] <TabAtkins>
matjas: Adding it now.

[13:13:02.0000] <othermaciej>
jamesr_: I think the logical conclusion is that JS code has to understand the format and cause the right byte-swapping to happen :-(

[13:13:03.0000] <matjas>
/me cries tears of joy

[13:13:04.0000] <TabAtkins>
Trying to put together a very basic json-based nosql engine of my own to run it with.

[13:17:00.0000] <jamesr_>
othermaciej: T.T

[13:17:01.0000] <jamesr_>
a huge portion of gwtquake's startup time is uploading data (textures, meshes, etc) from the network

[13:18:00.0000] <jamesr_>
but that was when it had to base64 encode it all as well

[13:19:00.0000] <othermaciej>
jamesr_: it might become necessary to have an efficient way to byte swap given a declarative description of the data format or something

[13:19:01.0000] <othermaciej>
jamesr_: or, and perhaps this is more likely, data gets sent little-endian over the wire, JS code doesn't byte-swap, and big-endian platforms are hosed forever more

[13:20:00.0000] <gsnedders>
othermaciej: It seems highly plausible that there'll be interest in stuff like WebGL on TVs which are largely big-endian MIPS, so I doubt that in a lot of ways

[13:22:00.0000] <othermaciej>
gsnedders: I'm sure the people making set-top boxes will care about that, but I bet people making, say, games meant to be played on your laptop or phone will not care about this

[13:22:01.0000] <AryehGregor>
othermaciej, I think that's most likely.

[13:22:02.0000] <AryehGregor>
People will code little-endian, the spec should mandate that.

[13:22:03.0000] <AryehGregor>
At most, it should permit opt-in endianness-changing for those who want to optimize for different platforms.

[13:22:04.0000] <AryehGregor>
But the default has to be little-endian.

[13:23:00.0000] <othermaciej>
/me is not sure what that means

[13:23:01.0000] <othermaciej>
in what way would a big-endian host's behavior change if you "mandate little-endian"?

[13:24:00.0000] <othermaciej>
actually, thinking about it, I suspect the most sensible way to transmit a texture over the wire is as a PNG or JPEG

[13:24:01.0000] <othermaciej>
you just need a way to decode it to a host-byte-order image buffer on the client

[13:24:02.0000] <Hixie>
yeah WebGL has very different needs than WebSockets here

[13:25:00.0000] <othermaciej>
people will want to hook up XHR or maybe even WebSockets to WebGL

[13:25:01.0000] <Hixie>
even with WebGL, if it's different on differnet platforms, it ain't gonna fly

[13:25:02.0000] <Hixie>
because people will just assume one endianness

[13:25:03.0000] <othermaciej>
that depends on how you code it

[13:26:00.0000] <Hixie>
it's the web

[13:26:01.0000] <Hixie>
every possible way of doing it will be done

[13:26:02.0000] <othermaciej>
if you generate a texture of 32-bit pixel values by writing 32 bits at a time, endianness doesn't matter

[13:26:03.0000] <Hixie>
and the most wrong one will be on some critical site like google.com

[13:26:04.0000] <Hixie>
either the WG decides now to fix it, or in a few years it'll be forced to spec whatever the most common case is, even if it sucks

[13:27:00.0000] <Hixie>
(or browsers will ignore the spec and do that common case and we'll have to have a "WebGL5"-like spec)

[13:27:01.0000] <othermaciej>
it's not a fixable problem

[13:27:02.0000] <othermaciej>
well, assuming you need the feature of accessing the same binary data via different width numeric types

[13:27:03.0000] <othermaciej>
it is not possible to make endianness invisible

[13:27:04.0000] <othermaciej>
at least, I don't know how

[13:28:00.0000] <Hixie>
you do it by having crappy performance on the platform with the other endianness

[13:28:01.0000] <othermaciej>
"mandate little-endian" is not a statement with an obvious meaning

[13:28:02.0000] <othermaciej>
you can't though

[13:28:03.0000] <othermaciej>
if I write 8 bits at a time and my GPU reads 32 bits at a time

[13:28:04.0000] <othermaciej>
how is the browser supposed to magically fix that?

[13:29:00.0000] <othermaciej>
at the time I am laying down my bytes, the browser has no idea if these are bytes, parts of 16-bit values, or parts of 32-bit values

[13:29:01.0000] <othermaciej>
which all byte-swap differently

[13:29:02.0000] <Hixie>
the browsers on the unusual platform will end up having to emulate the GPU of the other endianness

[13:29:03.0000] <Hixie>
(if we don't fix it somehow first)

[13:31:00.0000] <othermaciej>
the only "fix" I can think of is to not have access to the same data at different type widths ever

[13:31:01.0000] <othermaciej>
or else force you to pre-declare the "canonical" type of a buffer

[13:31:02.0000] <othermaciej>
but this doesn't really work if your data is coming from the network

[13:33:00.0000] <othermaciej>
another "fix" would be to cause there to exist a big-endian platform that is very popular for browsing so people are actually likely to test both ways

[13:33:01.0000] <othermaciej>
(endianness sucks)

[13:33:02.0000] <Hixie>
that would just end up fragmenting the web into two

[13:33:03.0000] <Hixie>
we've seen that sometimes with firefox vs ie compat bugs

[13:34:00.0000] <Hixie>
gotta go, lunch

[13:34:01.0000] <othermaciej>
it is a tough problem

[13:39:00.0000] <zcorpan>
you could discuss solutions to the endianness problem with timj @opera.com if you like - he said he was kinda alone in khronos with his concern about exposing endianness on the web being a problem

[13:40:00.0000] <zcorpan>
(also alone in thinking that undefined behavior for a web spec was a bad idea)

[13:41:00.0000] <AryehGregor>
I assume Khronos is used to things like OpenGL and OpenCL, where it's expected that authors want maximum performance and don't care so much about undefined behavior since they're probably only targeting a couple platforms anyway.

[13:41:01.0000] <jamesr_>
seems about right

[13:41:02.0000] <AryehGregor>
They'll have to be educated, I suppose.

[13:42:00.0000] <AryehGregor>
Maybe they'd be convinced if all the implementers explicitly said that they don't want a spec with any dependencies on things like endianness.

[13:42:01.0000] <AryehGregor>
/me isn't really involved, though, so doesn't care much

[13:43:00.0000] <AryehGregor>
It's not like the web platform hasn't had undefined behavior before.  It gets defined eventually.

[13:43:01.0000] <gsnedders>
AryehGregor: We weren't the only browser vendor there, it's not just Khronos people who were arguing such things

[13:43:02.0000] <AryehGregor>
Other browser vendors were also arguing for endianness dependencies?

[13:44:00.0000] <gsnedders>
/me doesn't know, but it's the implication of zcorpan's comment

[13:44:01.0000] <zcorpan>
AryehGregor: isn't there a lesson to be learned from the experience with leaving stuff undefined?

[13:44:02.0000] <zcorpan>
you'd have to ask timj, but iirc he said apple and google didn't share his concerns

[13:47:00.0000] <AryehGregor>
Surprising.

[13:52:00.0000] <Philip`>
What was the need for accessing the same binary data via different width numeric types?

[13:53:00.0000] <dglazkov>
TabAtkins: is the response to tantek ok?

[13:54:00.0000] <Philip`>
With OpenGL you probably want interleaved arrays of different types, but you wouldn't access the same bytes as different types

[13:54:01.0000] <Philip`>
unless you're doing something like byte-based compression of non-byte-based data

[13:55:00.0000] <Philip`>
Even C doesn't let you legally access the same data as e.g. a short and an int

[14:01:00.0000] <jamesr_>
that's only true with strict aliasing, which is generally not safe to assume

[14:01:01.0000] <zcorpan>
Hixie: look at what you did http://www.deathofthediv.com/

[14:01:02.0000] <Philip`>
It seems safer to assume strict aliasing than to assume a lack of strict aliasing :-)

[14:02:00.0000] <jamesr_>
in practice people access the same data as different types all the time in C

[14:02:01.0000] <Philip`>
In practice people compile with strict aliasing and suffer from bizarre bugs

[14:02:02.0000] <jamesr_>
Philip`: have you written C code that compiles with strict aliasing rules?

[14:02:03.0000] <Philip`>
Yes

[14:03:00.0000] <Philip`>
Just use memcpy when you need to move between types

[14:03:01.0000] <jamesr_>
then you are rather alone in C land, i think

[14:03:02.0000] <Philip`>
/me hit aliasing bugs in a texture compression library, where it made the textures look subtly lower quality when compiled with GCC 4.4 :-(

[14:04:00.0000] <Philip`>
It doesn't seem that unusual in my experience, though my experience is fairly limited

[14:04:01.0000] <jamesr_>
aliasing bugs in complex code are really difficult to deal with

[14:04:02.0000] <Philip`>
(Also, by C I mean C++)

[14:05:00.0000] <Philip`>
GCC seems pretty good about warning of potential aliasing violations

[14:06:00.0000] <jamesr_>
yeah, but have you tried compiling a large project with those warnings on?

[14:07:00.0000] <Philip`>
No, and I suppose it's much harder if you start with non-aliasing-clean code :-(

[14:07:01.0000] <Hixie>
zcorpan: hahahah that's awesome

[14:08:00.0000] <Philip`>
(I think the largest thing I've used it on is a ~100KSLOC game)

[14:09:00.0000] <Hixie>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=11861 is going to be annoying to fix

[14:10:00.0000] <zewt>
more sensible to enable optimizations like that for code that needs it, and just audit that code; most of a 100k+ line program is not going to be performance-critical at all

[14:11:00.0000] <Philip`>
There were only a few aliasing warnings to start with, and they were trivial fix, and then it was trivial to avoid introducing any more

[14:11:01.0000] <Philip`>
s/fix/to fix/

[14:12:00.0000] <zewt>
i've never seen a serious aliasing-related bug (in around 15 years of C/C++); but I normally don't compile with aliasing-sensitive optimizations enabled

[14:17:00.0000] <Philip`>
http://code.google.com/p/nvidia-texture-tools/source/diff?spec=svn1167&r=1167&format=side&path=/branches/2.0/src/nvmath/Vector.h#sc_svn452_234

[14:17:01.0000] <Philip`>
I think that's probably the only one I've encountered in real code

[14:17:02.0000] <TabAtkins>
dglazkov: Yes, great.

[14:18:00.0000] <gsnedders>
TabAtkins: Wrong room?

[14:19:00.0000] <Rik`>
If I'm in a HTML document and I want to insert a new child of a <svg> node, is there anything special to be done ?

[14:19:01.0000] <Rik`>
i'm doing doc.createElement('circle') and svgnode.appendChild(circle)

[14:20:00.0000] <Rik`>
the node is correctly appended but not "rendered"

[14:20:01.0000] <TabAtkins>
It's not in the right namespace.

[14:20:02.0000] <gsnedders>
Rik`: doc.createElement("circle") creates a circle element in the HTML namespace

[14:20:03.0000] <TabAtkins>
gsnedders: No, dglazkov said something to me a little bit ago.

[14:20:04.0000] <Ms2ger>
Namespaces!

[14:20:05.0000] <Rik`>
never played with namespaces, how should I create it ?

[14:21:00.0000] <TabAtkins>
createElementNS()

[14:21:01.0000] <Rik`>
oh right…

[14:21:02.0000] <Rik`>
so I stil have to deal with NS, even though I'm in a HTML document

[14:21:03.0000] <Ms2ger>
Yes

[14:22:00.0000] <TabAtkins>
Namespaces are the devil.

[14:22:01.0000] <Rik`>
is it gonna change with the latest decisions to not include NS in html ?

[14:22:02.0000] <Ms2ger>
No

[14:22:03.0000] <Ms2ger>
There will no namespaces in the HTML *syntax*

[14:22:04.0000] <TabAtkins>
HTML doesn't need the namespace declarations, but that's because it does magic behind the scenes to set namespaces correctly.

[14:23:00.0000] <Ms2ger>
+declarations, right

[14:24:00.0000] <Rik`>
I shouldn't mix jquery with this I guess

[14:24:01.0000] <TabAtkins>
HTML goes to a lot of effort to play nicely with XML, which unfortunately means that it's sometimes confusing for authors.

[14:24:02.0000] <TabAtkins>
There's a small chance that jquery may be NS-aware and do things right.  I dunno.

[14:26:00.0000] <Rik`>
thanks

[14:30:00.0000] <Rik`>
trying to have a nice looking curve going through some points is not as easy as I thought…

[14:31:00.0000] <Rik`>
I thought using T instead of L would do the trick but not really

[14:43:00.0000] <benschwarz>
morning—I missed some messages?

[14:46:00.0000] <zcorpan>
hey benschwarz, what do you think about dropping the 5?

[14:47:00.0000] <benschwarz>
I'm not so sure—There isn't anything to say that the spec covers 5 stuff, or new apis that it references

[14:48:00.0000] <zcorpan>
/me doesn't follow

[14:49:00.0000] <benschwarz>
I'm all for the versionless movement

[14:50:00.0000] <benschwarz>
but I'd like to somehow let the user know that what they're viewing includes new stuff

[14:51:00.0000] <zcorpan>
ok. your call :)


2011-02-19
[16:00:00.0000] <Hixie>
english has some annoying homonyms. I keep writing things like "Follow the following steps" and "Apply any applicable conventions"

[16:07:00.0000] <othermaciej_>
"Apply any applicable conventions" sounds like a tautology

[16:11:00.0000] <annevk>
Hixie, fwiw, the favored pattern is inheriting from EventTarget

[16:11:01.0000] <annevk>
maybe we should even get rid of "implements"

[16:12:00.0000] <annevk>
and just have supplements and inheritance, though I guess that does not cover Navigator...

[16:13:00.0000] <annevk>
Hixie, as for "follow the following steps", I use "run these steps" or "these steps must be run"

[16:18:00.0000] <Hixie>
why would inheriting from EventTarget be preferred?

[16:19:00.0000] <Hixie>
what if there's something else that all these things need to do?

[16:19:01.0000] <Hixie>
annevk: yeah i never commit a "follow these following", but man do i end up writing it a lot in my first drafts

[16:19:02.0000] <zewt>
what about "following following the following"

[16:19:03.0000] <annevk>
with respect to EventTarget it's just an observation

[16:20:00.0000] <annevk>
I've had several requests to make Node inherit from it

[16:20:01.0000] <Hixie>
inheriting from EventTarget seems like a misunderstanding of how OOP works

[16:20:02.0000] <annevk>
the Indexed DB stuff inherits from it

[16:20:03.0000] <annevk>
XHR does

[16:20:04.0000] <annevk>
but that can all change of course

[16:21:00.0000] <annevk>
I'll try to remember to ask around again as to why it's preferred

[16:21:01.0000] <zewt>
"following following the following, follow the following" okay I'll stop now

[16:22:00.0000] <hober>
zewt: that's verging on the buffalo sentence

[16:22:01.0000] <zewt>
the who? heh

[16:22:02.0000] <zewt>
sounds like a curious way of defining an infinite loop

[16:22:03.0000] <hober>
zewt: http://en.wikipedia.org/wiki/Buffalo_buffalo_Buffalo_buffalo_buffalo_buffalo_Buffalo_buffalo

[16:23:00.0000] <Hixie>
annevk: in particular, what if the thing also implements array-like magic, and i have an ArrayHost interface that it has to implement. How would one decide which it inherits from?

[16:37:00.0000] <yuhong>
Just read this: http://www.w3.org/2004/04/webapps-cdf-ws/papers/opera.html

[16:37:01.0000] <yuhong>
Personally I'd have proposed a new version of XHTML in lieu of XHTML2.

[16:38:00.0000] <yuhong>
One tag level compatible with XHTML1, and would be compatible with HTML4 if Appendix C was followed.

[16:39:00.0000] <yuhong>
Something like basically what XHTML5 is now.

[16:40:00.0000] <Philip`>
That sounds like it would suffer from the fatal problem of being XML

[16:42:00.0000] <zewt>
is there any standard in common use that competes with XML in the category of overdesign? heh

[16:42:01.0000] <yuhong>
But it even with that would be better than what XHTML2 was becoming at the time.

[16:43:00.0000] <yuhong>
That proposal would probably gain more acceptance, and ideally would replace the existing XHTML2 working group.

[16:45:00.0000] <yuhong>
Though I am not sure if that is possible.

[16:45:01.0000] <Philip`>
Given that XHTML1 achieved about zero adoption (except for causing people to put slashes and weird doctypes in their HTML4ish documents), and XHTML2 achieved much less, it's not that much of an achievement to gain more acceptance than them

[16:45:02.0000] <yuhong>
I mean getting more votes for the proposal.

[16:47:00.0000] <yuhong>
XHTML2 had worse screw-ups than being XML.

[16:50:00.0000] <yuhong>
I mean getting more votes for the proposal with W3C members..

[16:53:00.0000] <markthema31>
Can anyone help me with an html5 canvas issue?

[16:58:00.0000] <Philip`>
markthema31: Maybe - what's the issue?

[17:01:00.0000] <markthema31>
I want to use a canvas element as the background for my site. I have a php script that randomly chooses an image to display. When I set everything up, I can see my javascript navigation menu, but the image is hidden behind the canvas.

[17:10:00.0000] <Philip`>
markthema31: Does the same thing happen if you replace the canvas with e.g. another image?

[17:11:00.0000] <markthema31>
let me check

[17:20:00.0000] <markthema31>
nope. http://markssite.co.cc/canvas.html

[17:21:00.0000] <markthema31>
I removed everything els on the page.

[17:21:01.0000] <markthema31>
else*

[18:12:00.0000] <aliudalius>
Does anybody know if a new draft of the websocket protcol has been posted anyplace since the one that expired on the 17th?  I haven't been keeping up on this the last couple of months, has anything changed?

[18:35:00.0000] <Hixie>
aliudalius: -06 should be out soon, but -05 shouldn't have expired yet

[18:53:00.0000] <roc>
TabAtkins: I hope you're not here

[18:54:00.0000] <roc>
TabAtkins: more precisely, ping but I hope you're not here

[19:21:00.0000] <jamesr_>
roc: he doesn't seem to be

[19:21:01.0000] <roc>
maybe you'll do

[19:28:00.0000] <roc>
jamesr_: so, in Chrome, in WebMediaPlayerImpl::OnPipelineInitialize, is this code:

[19:28:01.0000] <jamesr_>
oh dear

[19:28:02.0000] <roc>
    // TODO(hclam): change this to report the correct status.

[19:28:03.0000] <roc>
    SetReadyState(WebKit::WebMediaPlayer::HaveEnoughData)

[19:28:04.0000] <jamesr_>
yeah i have no idea

[19:29:00.0000] <roc>
so I dunno if you know anything about HTML5 video, but Chrome just fires the "canplaythrough" event when videos start loading

[19:29:01.0000] <roc>
so scripts that listen to that event start playing the video right away no matter what

[19:29:02.0000] <jamesr_>
and then realplayer it up?

[19:29:03.0000] <roc>
whereas in browsers that implement that event properly, the event will not necessarily fire right away

[19:30:00.0000] <roc>
the result of course is that users file bugs against Firefox, "Chrome starts playing this video faster than Firefox"

[19:30:01.0000] <jamesr_>
how do you determine when to fire it?

[19:30:02.0000] <roc>
crude bandwidth estimation

[19:30:03.0000] <jamesr_>
some guess off of download rate + video length

[19:30:04.0000] <jamesr_>
hm

[19:30:05.0000] <jamesr_>
how accurate is that in practice?

[19:30:06.0000] <roc>
anyway, we face a race to the bottom here

[19:31:00.0000] <jamesr_>
i am sympathetic but completely ignorant about this part of the codebase

[19:31:01.0000] <jamesr_>
if you file a bug i can cc the right peeps

[19:31:02.0000] <roc>
ok

[19:32:00.0000] <roc>
thanks

[02:39:00.0000] <hsivonen>
does Opera reload the page when assignin to window.location.hash?

[02:39:01.0000] <othermaciej>
that would be insane

[02:40:00.0000] <hsivonen>
why do the slides at http://hsivonen.iki.fi/html5-lecture/2011/slides.html show the progress spinner each time I swich slides in Opera_

[02:40:01.0000] <othermaciej>
(I don't know if it's actually false, but it would break the web)

[02:40:02.0000] <hsivonen>
and why do the slides switch so slowly?

[02:40:03.0000] <hsivonen>
I wonder if there\d be a cross/browser way to center the slide content

[02:41:00.0000] <hsivonen>
display: table-cell; maybe?

[02:41:01.0000] <othermaciej>
that I cannot answer

[02:41:02.0000] <othermaciej>
vertically center?

[02:41:03.0000] <hsivonen>
currently, the slides use -moz and -webkit flexbox

[02:41:04.0000] <hsivonen>
othermaciej: horizontally and vertically

[02:42:00.0000] <hsivonen>
apparently vertical centering in CSS is still FAIL after all these years :-(

[02:43:00.0000] <othermaciej>
vertical centering only works for tables

[02:43:01.0000] <othermaciej>
well, at least using vertical-align

[02:43:02.0000] <Rik`>
hsivonen: vertical centering and layout in general

[02:44:00.0000] <Rik`>
Microsoft's latest attempt looked nice

[02:44:01.0000] <othermaciej>
you can set % top and bottom values and absolute position, but that only helps if the height of the centered content is known

[02:46:00.0000] <hsivonen>
TabAtkins: the slides work for me in Chrome on Mac

[04:42:00.0000] <Ms2ger>
foolip, vendor prefixes are removed when the spec goes to CR

[04:47:00.0000] <MikeSmith>
http://mpeg.chiariglione.org/meetings/daegu11/daegu_press.htm

[04:48:00.0000] <MikeSmith>
«MPEG intends to develop a new video compression standard in line with the expected usage models of the Internet. The new standard is intended to achieve substantially better compression performance than that offered by MPEG-2 and possibly comparable to that offered by the AVC Baseline Profile. MPEG will issue a call for proposals on video compression technology at the end of its upcoming meeting in March 2011 that is expected to

[04:48:01.0000] <MikeSmith>
to a standard falling under ISO/IEC “Type-1 licensing”, i.e. intended to be “royalty free”.»

[04:49:00.0000] <MikeSmith>
is AVC the same as H.264?

[04:51:00.0000] <MikeSmith>
anybody heard anything about those plans? Are they serious about it or is some kind of attempt to spread uncertainty?

[04:52:00.0000] <MikeSmith>
hmm

[04:52:01.0000] <MikeSmith>
Rob Glidden at least seems to be taking it seriously

[04:52:02.0000] <MikeSmith>
http://www.robglidden.com/2011/02/mpeg-envisages-royalty-free-mpeg-video-coding-standard/

[04:53:00.0000] <MikeSmith>
or at least not dismissing it straight out

[04:54:00.0000] <MikeSmith>
and Florian Mueller

[04:55:00.0000] <MikeSmith>
http://fosspatents.blogspot.com/2011/02/royalty-free-mpeg-video-coding-standard.html

[12:45:00.0000] <kevogod>
Shh

[14:44:00.0000] <sephr>
Should http://www.google.com and http://www.google.com. share the same origin?


2011-02-20
[19:49:00.0000] <hober>
yes

[21:35:00.0000] <user_>
i just lost my irc virginity

[21:35:01.0000] <user_>
wtf

[00:28:00.0000] <Hixie>
given a MouseEvent whose target is a <canvas>, how do I find the coordinate of the mouse relative to the canvas?

[00:29:00.0000] <benschwarz>
Hixie: there?

[00:29:01.0000] <Hixie>
yup

[00:35:00.0000] <benschwarz>
there is nothing to say we can't use it on the main spec

[01:52:00.0000] <annevk>
Hixie, offsetX/offsetY I think, but they're not cross-browser (yet); see e.g. http://annevankesteren.nl/2006/08-paintr21

[02:00:00.0000] <Ms2ger>
annevk, seems like the Save it button works in Fx here

[02:02:00.0000] <annevk>
in my URLs dates have meaning

[02:02:01.0000] <Ms2ger>
Ha

[02:05:00.0000] <annevk>
so with mutation events off the table

[02:05:01.0000] <annevk>
is there anything we want to do before publishing again?

[02:06:00.0000] <annevk>
a) adding ElementTraversal b) making the historical section somewhat more complete

[02:06:01.0000] <annevk>
I'm not sure about: events loop and event handlers

[02:07:00.0000] <annevk>
oh, and I recently learned that ele.className in SVG does not return a string!

[02:07:01.0000] <annevk>
so I guess we cannot generalize className :/

[02:12:00.0000] <annevk>
childElementCount grmbl

[02:15:00.0000] <Ms2ger>
Ooh, and it has tests

[02:16:00.0000] <Ms2ger>
"The result of this test is a pass! Srsly."

[02:30:00.0000] <Ms2ger>
/me imports those tests

[03:05:00.0000] <annevk>
hmm

[03:06:00.0000] <annevk>
shepazu did not include childElementCount in http://dev.w3.org/2006/webapi/DOM4Core/DOM4Core.html

[03:06:01.0000] <annevk>
I wonder if the idea is to get rid of it again...

[03:10:00.0000] <Ms2ger>
Seems unlikely we could

[03:11:00.0000] <annevk>
that's for jgraham to say

[03:12:00.0000] <hsivonen>
Dear lazy IRC, how do I horizontally center an element whose width is non-auto and whose vertical position is given by absolute positioning?

[03:12:01.0000] <hsivonen>
without calc

[03:13:00.0000] <hsivonen>
I now have right: -moz-calc(50% - 412px);

[03:13:01.0000] <hsivonen>
(without calc because I'm trying to be nice to Other Browsers)

[03:14:00.0000] <annevk>
why not margin:0 auto?

[03:14:01.0000] <Rik`>
right: 50%

[03:14:02.0000] <annevk>
oh, and if it's absolutely positioned you could add left:0 / right:0

[03:14:03.0000] <Rik`>
margin-right: -412px

[03:14:04.0000] <annevk>
then margin:auto should work

[03:15:00.0000] <annevk>
Rik`, that goes wrong with narrow viewports

[03:15:01.0000] <hsivonen>
annevk: right: 0; moves it to the right edge of the view port

[03:15:02.0000] <hsivonen>
annevk: margin: auto; does not seem to work with absolute positioning

[03:16:00.0000] <Ms2ger>
<div style="top:20px;left:0;right:0;border:thin solid;width:412px;margin:0 auto">a</div>

[03:17:00.0000] <Ms2ger>
WFM

[03:18:00.0000] <hsivonen>
Rik`'s solution works.

[03:18:01.0000] <hsivonen>
let's try Ms2ger's solution again

[03:19:00.0000] <hsivonen>
Ms2ger wins. Thanks!

[03:19:01.0000] <Ms2ger>
annevk wins :)

[03:19:02.0000] <annevk>
hmm, that was what I suggested

[03:20:00.0000] <hsivonen>
annevk: oh. right. I thought left: 0 / right: 0 meant either one of them

[03:26:00.0000] <annevk>
for now I commented out childElementCount

[03:26:01.0000] <annevk>
I guess I should also refactor the spec to use "Trees"

[03:31:00.0000] <annevk>
so we still lack a replacement for DOM Traversal

[03:32:00.0000] <annevk>
is that the only DOM spec that is not obsoleted yet aside from the various event definitions in DOM Events?

[03:32:01.0000] <annevk>
or has a replacement

[03:33:00.0000] <Ms2ger>
http://www.w3.org/DOM/DOMTR

[03:33:01.0000] <Ms2ger>
Looks like it

[03:35:00.0000] <annevk>
oh, XPath

[03:36:00.0000] <annevk>
never became a REC, but is used and all

[04:02:00.0000] <annevk>
Ms2ger, do we really need to use "context node"?

[04:03:00.0000] <annevk>
Ms2ger, e.g. "Events" does not have a similar concept and many other specifications do not either

[04:03:01.0000] <annevk>
that is, it's implicit in the definition

[04:03:02.0000] <Ms2ger>
I guess context object makes more sense

[04:05:00.0000] <annevk>
you don't think we can just say "the y attribute must return the x"

[04:08:00.0000] <Ms2ger>
That would probably work as long as there's only one object around

[04:47:00.0000] <annevk>
I guess I'll wait a bit with making that change, but I think I'll just go ahead in due course

[05:13:00.0000] <annevk>
tried updating the history section

[05:13:01.0000] <annevk>
https://bitbucket.org/ms2ger/dom-core

[06:04:00.0000] <annevk>
so baseURI

[06:04:01.0000] <annevk>
I guess we need "document base URL" and "element base URL"

[06:04:02.0000] <annevk>
have the parsing specs set them

[06:04:03.0000] <annevk>
and have it return null for non element/document objects

[06:05:00.0000] <annevk>
should we try moving it away from Node?

[06:05:01.0000] <annevk>
guess I'll leave it an open issue for now

[06:09:00.0000] <Ms2ger>
Text.baseURI and friends should probably be their parent's baseURI

[06:12:00.0000] <annevk>
oh okay

[06:12:01.0000] <annevk>
yeah :/

[06:13:00.0000] <annevk>
crappy API

[06:14:00.0000] <annevk>
time to get to the station

[12:09:00.0000] <annevk>
can people take a look at http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#historical ?

[12:10:00.0000] <annevk>
just a single line useful/useless would already help

[12:14:00.0000] <AryehGregor>
annevk, history is useful IMO.

[12:14:01.0000] <AryehGregor>
Also interesting.

[12:16:00.0000] <annevk>
Ms2ger, why does http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-domimplementation-hasfeature still look broken?

[12:17:00.0000] <Ms2ger>
Fixed

[12:17:01.0000] <annevk>
oh, I guess the fix wasn't pushed to W3C space, doh

[13:12:00.0000] <AryehGregor>
I have rebelled against Anolis and created a new preprocessor that I stick before Anolis in my pipeline.

[13:13:00.0000] <AryehGregor>
Before: <p>The <dfn>first node</dfn> of a <code data-anolis-spec=domrange>Range</code> is its <span data-anolis-spec=domrange title=concept-range-start>start</span> <span data-anolis-spec=domrange title=concept-boundary-point-node>node</span>, if that is a <code data-anolis-spec=domcore>Text</code>, <code data-anolis-spec=domcore>Comment</code>, or <code data-anolis-spec=domcore>ProcessingInstruction</code> node; or else the child of its <spa

[13:13:01.0000] <AryehGregor>
n data-anolis-spec=domrange title=concept-range-start>start</span> <span data-anolis-spec=domrange title=concept-boundary-point-node>node</span> with <span data-anolis-spec=domrange title=concept-indexof>index</span> equal to the <span data-anolis-spec=domrange title=concept-range-start>start</span> <span data-anolis-spec=domrange title=concept-boundary-point-offset>offset</span>, if that exists; or else its <span data-anolis-spec=domrange ti

[13:13:02.0000] <AryehGregor>
tle=concept-range-start>start</span> <span data-anolis-spec=domrange title=concept-boundary-point-node>node</span>.

[13:13:03.0000] <AryehGregor>
After: <p>The <dfn>first node</dfn> of a [[range]] is its [[rangestart]] [[bpnode]], if that is a [[text]], [[comment]], or [[processinginstruction]] node; or else the child of its [[rangestart]] [[bpnode]] with [[index]] equal to the [[rangestart]] [[bpoffset]], if that exists; or else its [[rangestart]] [[bpnode]].

[13:14:00.0000] <AryehGregor>
Now I will not have to want to kill something every time I write a simple sentence with cross-spec xrefs.

[13:17:00.0000] <AryehGregor>
Probably hacking Anolis so it can automatically convert <code>Range</code> into <code data-anolis-spec=domrange>Range</code> and so on would have done the trick too.

[13:18:00.0000] <AryehGregor>
Although HTML really is a pretty nasty language to write by hand if you don't go really light on the markup.

[13:36:00.0000] <uf0>
what are your guys thoughts on language like HAML?

[14:02:00.0000] <Hixie>
is mouseout unreliable? i'm having trouble getting it to work with a weirdly positioned canvas but can't work out if it's a browser-specific bug with chrome or if it's known to be unreliable in general

[14:13:00.0000] <annevk>
Hixie, they might fire on a bit of a delay so if you move it out of the browser window quickly and then back in again it might not dispatch at all

[15:16:00.0000] <annevk>
I guess DOM Features should also be a top-level section

[15:17:00.0000] <annevk>
maybe as "Features (deprecated)"

[15:19:00.0000] <annevk>
or maybe bury it somewhere alongside DOMImplementation...

[15:22:00.0000] <zewt>
annevk: regarding the subtle event dispatch difference between dom-core and dom-events (stopPropagation/preventDefault called before dispatch); should that be mentioned in 8.1? it's an obscure difference, but maybe important to make note of for that reason alone (easy to miss)

[15:29:00.0000] <annevk>
yeah, should probably do that

[15:29:01.0000] <annevk>
though it's really a bug in DOM Events I think

[15:30:00.0000] <annevk>
because otherwise if you create an event yourself and invoke stopPropagation on it and then dispatch it... nothing happens

[15:31:00.0000] <zewt>
I can't think of any reason to call stopPropagation before dispatch anyway, so for that case I think either definition is good enough

[15:32:00.0000] <zewt>
maybe I could contrive a really weird case where being able to call preventDefault before dispatch would be useful, but I'd have to really try, heh

[15:32:01.0000] <annevk>
hmm, that is actually what happens in browsers

[15:33:00.0000] <annevk>
for stopPropagation that is

[15:34:00.0000] <annevk>
well

[15:34:01.0000] <zewt>
it seems like the dom events way requires having a separate hidden state, separating whether to continue propagation from the defaultPrevented attribute

[15:34:02.0000] <zewt>
which is lame heh

[15:34:03.0000] <annevk>
it's not what happens in browsers

[15:34:04.0000] <annevk>
because if you call stopPropagation

[15:34:05.0000] <annevk>
dispatch twice

[15:35:00.0000] <annevk>
it doesn't dispatch

[15:35:01.0000] <zewt>
do browsers just not clear it at all?

[15:35:02.0000] <annevk>
oh, Gecko does, Chrome doesn't

[15:35:03.0000] <annevk>
Opera is like Chrome

[15:36:00.0000] <annevk>
I wonder why DOM Events cites backwards compatibility as a reason here...

[15:36:01.0000] <zewt>
yuck: "... and determine whether an event has been canceled through the Event.defaultPrevented attribute while the object is being dispatched"

[15:37:00.0000] <zewt>
suggesting DOM L3's defaultPrevented was only thinking of that attribute being used during dispatch, and not by the dispatcher after the event returns

[15:37:01.0000] <zewt>
in which case what L3 does makes sense

[15:38:00.0000] <annevk>
but that's not what's actually implemented

[15:38:01.0000] <zewt>
yeah

[15:38:02.0000] <annevk>
I like my model better :p

[15:39:00.0000] <zewt>
so Chrome doesn't clear the flag at all, and you can effectively only dispatch an event once?

[15:39:01.0000] <zewt>
i mean, if it's prevented

[15:39:02.0000] <zewt>
er, stopPropagation'd

[15:40:00.0000] <annevk>
well either my model or we make initEvent() reset it I suppose

[15:41:00.0000] <annevk>
anyway bedtime

[15:41:01.0000] <annevk>
nn

[15:41:02.0000] <zewt>
later


2011-02-21
[20:01:00.0000] <GPHemsley>
I don't suppose any WebVTT validators have cropped up yet?

[20:11:00.0000] <GPHemsley>
Also, why are there no samples/examples of WebVTT within the spec?

[22:58:00.0000] <MikeSmith>
https://bugzilla.mozilla.org/show_bug.cgi?id=617528#c1

[22:58:01.0000] <MikeSmith>
Paul Roget asks, "My main concern is security. How can we make it clear that these menu-items are not from Firefox?"

[22:58:02.0000] <MikeSmith>
anybody have thoughts?

[22:59:00.0000] <MikeSmith>
Hixie: ?

[22:59:01.0000] <zewt>
given that they can't actually do anything insecure, what's the actual risk?

[22:59:02.0000] <MikeSmith>
seems like putting an icon of some kind next to each of them

[23:01:00.0000] <MikeSmith>
zewt: I guess Paul doesn't want users to assume the items have any level of trust given to them by the browser

[23:01:01.0000] <zewt>
you can already style fake things that look like browser prompts, eg. make a bar at the top that looks like FF or Chrome's security prompts

[23:01:02.0000] <MikeSmith>
sure

[23:02:00.0000] <MikeSmith>
that doesn't mean browsers should just give up and not attempt to have indicators where they can

[23:02:01.0000] <zewt>
but they also shouldn't have indicators sprinkled everywhere based on objections that aren't substantiated enough

[23:02:02.0000] <MikeSmith>
and in this case it's not just about security anyway

[23:03:00.0000] <MikeSmith>
heh

[23:03:01.0000] <MikeSmith>
geez

[23:03:02.0000] <zewt>
people won't understand "icon == not from the browser"

[23:03:03.0000] <zewt>
and uglifying browser items isn't very nice, either--you should be able to provide your own icon, I'd think

[23:04:00.0000] <othermaciej>
context menus can already be replaced in other ways

[23:06:00.0000] <MikeSmith>
sure

[23:07:00.0000] <MikeSmith>
and this is not something the spec needs to necessarily address at all

[23:07:01.0000] <MikeSmith>
it's an implementation detail, and he's asking for feedback

[23:07:02.0000] <othermaciej>
I understand the general concern about letting web sites hook up things that look like trusted UI

[23:07:03.0000] <zewt>
right

[23:07:04.0000] <othermaciej>
though the context menu is a low risk area

[23:16:00.0000] <zewt>
mental note: never view image on a canvas in FF. heh

[23:36:00.0000] <MikeSmith>
https://github.com/pgriess/node-webworker

[23:45:00.0000] <ben_h>
j #html5

[23:46:00.0000] <ben_h>
it seems someone's taken my slash

[00:37:00.0000] <annevk>
mornings

[00:38:00.0000] <MikeSmith>
おはよう

[00:39:00.0000] <annevk>
I think the common response to something like that is "fuck you too" but lets use Google translate first

[00:39:01.0000] <annevk>
:)

[00:41:00.0000] <Peter->
Goedemorgen, MikeSmith!

[00:41:01.0000] <Peter->
and annevk/others of course

[00:42:00.0000] <MikeSmith>
Peter-: hey hey

[00:49:00.0000] <ben_h>
こんいちわ MikeSmith

[00:54:00.0000] <zewt>
こんにちは :P

[00:55:00.0000] <MikeSmith>
I say こんちや sometimes

[00:55:01.0000] <Dashiva>
ちわす

[00:56:00.0000] <Dashiva>
I guess we're too old for that

[00:56:01.0000] <zewt>
ここは夜だけど

[00:58:00.0000] <MikeSmith>
if you want to hear some fun spoken Japanese, search for ロペ on Youtube and watch some of those

[00:58:01.0000] <MikeSmith>
http://www.youtube.com/view_play_list?p=93D23F5D69152DE6

[00:58:02.0000] <MikeSmith>
e.g., http://www.youtube.com/watch?v=C2Y2QGnButY

[00:59:00.0000] <MikeSmith>
it's gold

[01:00:00.0000] <MikeSmith>
man, the fan on my MikeBook is failing

[01:01:00.0000] <zewt>
heh, i can't follow natural japanese at all

[01:01:01.0000] <MikeSmith>
I hope it lasts long enough until the refresh arrives

[01:01:02.0000] <annevk>
by MikeBook you mean your patched black MacBook?

[01:01:03.0000] <zewt>
if regular people all had the enunciation of voice actors, maybe I'd manage

[01:01:04.0000] <MikeSmith>
annevk: yeah

[01:01:05.0000] <annevk>
wow

[01:02:00.0000] <annevk>
you've had that laptop for as long as I can remember :)

[01:02:01.0000] <MikeSmith>
yeah

[01:02:02.0000] <Dashiva>
zewt: And they speak so quickly

[01:02:03.0000] <MikeSmith>
I dread replacing it because I'll lose all my stickers

[01:03:00.0000] <MikeSmith>
some people from Kyoto speak more slowly

[01:03:01.0000] <annevk>
btw peoples, now is your time to scream: http://lists.w3.org/Archives/Public/public-web-notification/2011Feb/0005.html (well, don't)

[01:03:02.0000] <Dashiva>
まじ半端ねえ、あれ

[01:04:00.0000] <MikeSmith>
I wish somebody would make subtitles for those ロペ videos, because the stuff those guys are saying is really funny

[01:06:00.0000] <MikeSmith>
anyway, I have to drop off for a bit

[01:06:01.0000] <MikeSmith>
back later

[02:28:00.0000] <annevk>
http://blog.whatwg.org/weekly-search-provider-apis

[02:36:00.0000] <zewt>
http://isolani.co.uk/blog/javascript/BreakingTheWebWithHashBangs <- it's impossible to take this guy seriously, heh

[02:38:00.0000] <zewt>
a bunch of mysterious handwaving for the fact that it's absolutely critical to every web app, and "breaking the web" is such a ridiculous overstatement, it undermines his whole argument

[02:39:00.0000] <annevk>
nothing wrong with a bit of hyperbole every now and then

[02:40:00.0000] <Workshiva>
To be fair, I really don't consider news sites web applications

[02:40:01.0000] <zewt>
not when it's taken so far it sounds like satire

[02:50:00.0000] <Workshiva>
In a way it's good

[02:50:01.0000] <Workshiva>
Lets the people still stuck in the 80s realize that javascript is here to stay

[02:51:00.0000] <Workshiva>
And if they don't start working with it, they might not like the results :)

[03:09:00.0000] <annevk>
Workshiva, been reading www-tag lately? :)

[03:14:00.0000] <Workshiva>
annevk: I only ever read that when someone links it

[03:55:00.0000] <Evet>
is JSONP really insecure for private data?

[03:55:01.0000] <MikeSmith>
http://www.bbc.co.uk/blogs/bbcinternet/2011/02/frame_accurate_video_in_html5.html

[03:56:00.0000] <MikeSmith>
"as of this week, after 120 emails, the bleeding edge development versions of several HTML5 implementations (as used in Safari, Chrome, Mozilla and many others) are now fully frame accurate"

[04:18:00.0000] <ben_h>
MikeSmith: awesome!

[04:21:00.0000] <MikeSmith>
it's great to see an article like that giving credit to the actual developers who did the work

[04:21:01.0000] <ben_h>
hell yeah

[04:21:02.0000] <ben_h>
developers are pretty cool these days

[04:21:03.0000] <ben_h>
:)

[04:31:00.0000] <Workshiva>
Evet: If any site you visit can access the data, would you call it private?

[04:35:00.0000] <erlehmann>
opera devs, please support CORS

[04:35:01.0000] <erlehmann>
thanks

[04:35:02.0000] <erlehmann>
._.

[04:38:00.0000] <Evet>
:)

[04:41:00.0000] <MikeSmith>
the comments about Workers in http://dt.deviantart.com/blog/38471599/ are particularly interesting

[04:47:00.0000] <annevk>
hmm, my schedule for today was not very ambitious

[04:47:01.0000] <annevk>
I wonder if I missed something

[04:50:00.0000] <annevk>
that blog post from the BBC is a nice change from the one some time ago

[04:52:00.0000] <Evet>
i wish flash sockets + html5 websockets cover 100% of browsers

[04:54:00.0000] <annevk>
MikeSmith, maybe you can reply to John's email about the draft with information on pubrules?

[04:54:01.0000] <annevk>
or I can do it

[04:54:02.0000] <annevk>
that is, giving a link to http://www.w3.org/Guide/pubrules

[05:03:00.0000] <MikeSmith>
annevk: if you can, that'd be great

[05:03:01.0000] <MikeSmith>
I looked for him on #chromium but not finding him

[05:04:00.0000] <MikeSmith>
the source really should be updated to use the JS respec

[05:04:01.0000] <MikeSmith>
but I'm not sure it's worth stopping to take time to do that now

[05:04:02.0000] <MikeSmith>
though it actually wouldn't take too much time

[05:05:00.0000] <MikeSmith>
I don't know whether he's got the source set up that way because he actually prefers that, instead of editing HTML and using JS, or what

[05:06:00.0000] <annevk>
I know nothing about Respec

[05:06:01.0000] <annevk>
but I'll bring it up

[05:06:02.0000] <MikeSmith>
はい

[05:08:00.0000] <annevk>
MikeSmith, do I need to email out some pubrequests?

[05:08:01.0000] <annevk>
MikeSmith, guess we need shortname approval

[05:08:02.0000] <MikeSmith>
yeah

[05:08:03.0000] <MikeSmith>
actually

[05:08:04.0000] <MikeSmith>
need to mail the chairs list

[05:10:00.0000] <MikeSmith>
"The Chair sends a transition request to the Domain Lead(s) responsible for the group(s) publishing the document, cc'ing w3t-comm⊙wo and chairs⊙wo"

[05:11:00.0000] <MikeSmith>
"The goal of the transition request is to secure an archived record of the Domain Lead(s)' approval of the title, and shortname."

[05:12:00.0000] <MikeSmith>
I will give PLH a heads-up about this today

[05:12:01.0000] <MikeSmith>
oh

[05:12:02.0000] <MikeSmith>
it's a holiday in the US I guess

[05:12:03.0000] <MikeSmith>
he'll probably be on for a bit anyway

[05:16:00.0000] <annevk>
okay, I can do that

[05:17:00.0000] <annevk>
first ever email to chairs I think

[05:17:01.0000] <annevk>
back to Member-only territory brrr

[05:18:00.0000] <kennyluck>
/me wonders whether folks here know how pronounce はい

[05:18:01.0000] <wilhelm>
kennyluck: Hai.

[05:19:00.0000] <wilhelm>
(は on its own is usually “wa”, though.)

[05:19:01.0000] <Peter->
Iie!

[05:20:00.0000] <kennyluck>
for reasons I don't know, this word gives me a funny image.

[05:20:01.0000] <MikeSmith>
annevk: chairs list really should be public

[05:20:02.0000] <MikeSmith>
i guess I shouldn't say that

[05:20:03.0000] <MikeSmith>
I guess the issue with doing that is, some chairs still have some member-only groups…

[05:21:00.0000] <MikeSmith>
maybe we should have a chairs list for all the public groups, and a chairs list for all the member-only groups

[05:33:00.0000] <annevk>
MikeSmith, emailed

[05:33:01.0000] <annevk>
MikeSmith, included request for being able to copy a public list going forward

[05:34:00.0000] <annevk>
MikeSmith, hopefully I got it all right, I didn't look up the chair guidelines doc as I couldn't locate it quickly

[05:36:00.0000] <MikeSmith>
I just read it, it's fine as-is

[05:36:01.0000] <MikeSmith>
I suspect plh answer will be, you are free to copy to www-archive if you want

[05:37:00.0000] <annevk>
mkay

[05:37:01.0000] <annevk>
that is something

[06:17:00.0000] <annevk>
did http://esw.w3.org/HTML/history get lost somehow?

[06:17:01.0000] <annevk>
just found that again via hsivonen slides who just tweeted that w3.org never go wrong

[06:18:00.0000] <annevk>
w3.org URLs*

[06:18:01.0000] <annevk>
hsivonen's*

[07:07:00.0000] <Philip`>
Does anyone have data on how frequent PAC (proxy auto-config) usage is?

[07:40:00.0000] <MikeSmith>
annevk: hmm

[07:40:01.0000] <MikeSmith>
if so, my fault

[07:40:02.0000] <MikeSmith>
damn

[07:40:03.0000] <MikeSmith>
not lost

[07:40:04.0000] <MikeSmith>
just different URL

[07:41:00.0000] <MikeSmith>
eh?

[07:41:01.0000] <MikeSmith>
something borked

[07:42:00.0000] <MikeSmith>
annevk: it's at http://www.w3.org/html/wg/wiki/History

[07:43:00.0000] <MikeSmith>
now I just need to figure out how to get http://www.w3.org/wiki/HTML/history to redirect to there

[07:45:00.0000] <MikeSmith>
hmm, http://www.mediawiki.org/wiki/Help:Redirects

[07:45:01.0000] <MikeSmith>
but that can only redirect to a page on the same wiki, not to an arbitrary URL

[07:46:00.0000] <thiessenp>
(sorry off topic but :) Can anyone recommend a good JS crypto library (RSA, BigInt etc.)?

[07:48:00.0000] <MikeSmith>
thiessenp: not off topic :)

[07:48:01.0000] <MikeSmith>
but I don't know of one personally

[07:48:02.0000] <MikeSmith>
/me looks around for Adam Barth

[07:48:03.0000] <MikeSmith>
wirepair: ↑

[07:49:00.0000] <zcorpan>
thiessenp: i think window.crypto.getRandomValue or what it's called is being added to address that

[07:51:00.0000] <annevk>
is it just me or has interest in WHATWG Weekly waned somewhat?

[07:51:01.0000] <annevk>
I wonder if it should maybe done in a somewhat different way

[07:52:00.0000] <MikeSmith>
how do you measure interest in it?

[07:52:01.0000] <annevk>
tweets / comments / feedback via IRC/email

[07:52:02.0000] <Peter->
get used to it :p

[07:52:03.0000] <annevk>
haven't looked at stats recently

[07:53:00.0000] <Peter->
comments on my webkit posts are lowish lately as well, as are the tweets

[07:53:01.0000] <annevk>
though I did notice subscriber count went up for the feed in Google reader

[07:53:02.0000] <Peter->
view counts are still rising though

[07:53:03.0000] <kennyluck>
I have great interest in it, personally.

[07:54:00.0000] <MikeSmith>
what is the anti-TPM clause in CC licenses?

[07:54:01.0000] <annevk>
Peter-, interesting

[07:54:02.0000] <nimbupani>
annevk: maybe coz we know you are leaving :P

[07:59:00.0000] <MikeSmith>
so next month marks the seventh anniversary of the whatwg.org domain being registered

[07:59:01.0000] <MikeSmith>
three months prior to the infamous W3C Workshop on Web Applications and Compound Document

[08:00:00.0000] <MikeSmith>
s

[08:01:00.0000] <annevk>
a year for each capital

[08:02:00.0000] <MikeSmith>
capital?

[08:03:00.0000] <annevk>
that is quite long

[08:03:01.0000] <MikeSmith>
ah

[08:04:00.0000] <annevk>
guess I'm getting close to a decade of something

[08:04:01.0000] <annevk>
MikeSmith, you got it? heh; useless number game :p

[08:05:00.0000] <MikeSmith>
for me, it's close to 10 years since I moved to Japan

[08:05:01.0000] <MikeSmith>
even more: my daughter just turned 13 years old this weekend

[08:06:00.0000] <MikeSmith>
oh, "technological protection measures"

[08:06:01.0000] <MikeSmith>
jesus

[08:07:00.0000] <MikeSmith>
why don't they just say DRM?

[08:07:01.0000] <MikeSmith>
acronym proliferation

[08:28:00.0000] <Lachy>
MikeSmith, TPM is more generic than DRM. AIUI, TPM can be any protection measure, either analogue or digital.

[08:28:01.0000] <MikeSmith>
yeah well

[08:30:00.0000] <MikeSmith>
one can always mint more precise acronyms I guess

[08:30:01.0000] <MikeSmith>
but point taken

[08:30:02.0000] <MikeSmith>
Lachy: hey

[08:30:03.0000] <MikeSmith>
btw, where you been, man?

[08:30:04.0000] <MikeSmith>
you've become a ghost

[08:30:05.0000] <MikeSmith>
you working on some secret project

[08:37:00.0000] <Lachy>
I'm working on lots of stuff internally at opera and haven't had too much time to follow what goes in HTML lately

[08:38:00.0000] <Lachy>
MikeSmith, also, because of the way bugzilla is used on public-html, it makes it much more difficult than it should be to actually follow anything.

[08:39:00.0000] <MikeSmith>
yep

[08:39:01.0000] <MikeSmith>
not my choice

[08:39:02.0000] <Lachy>
I really wish we could go back to how it was before bugzilla became used as a poorly designed forum, that I hate even more than real forums

[10:04:00.0000] <yecril71pl>
Why is document in the lexical scope of code in event handler attributes?

[10:05:00.0000] <yecril71pl>
like onclick="alert (write === document. write)"?

[10:08:00.0000] <bga_>
strange

[10:08:01.0000] <bga_>
`true` in chrome11

[10:10:00.0000] <yecril71pl>
and in Konqueror

[10:10:01.0000] <bga_>
in opera too

[10:11:00.0000] <yecril71pl>
Since browsers are unanimous, there must be some method in this madness

[10:13:00.0000] <bga_>
but

[10:13:01.0000] <bga_>
var a = document.createElement('a'); a.setAttribute('onclick', 'alert (title === document.title)'); a.onclick()

[10:14:00.0000] <bga_>
false

[10:14:01.0000] <yecril71pl>
in event handler attributes only

[10:18:00.0000] <yecril71pl>
DOM-Level-2-Events 1.3.2.:  No technique is provided to allow HTML 4.0 event listeners access to the context information defined for each event.

[10:22:00.0000] <yecril71pl>
Neither HTML 4 nor DOM Level 1 discuss binding of events

[10:26:00.0000] <Philip`>
http://www.whatwg.org/specs/web-apps/current-work/multipage/webappapis.html#event-handler-content-attributes

[10:26:01.0000] <Philip`>
"Let Scope be the result of NewObjectEnvironment(the element's Document, the global environment)."

[10:26:02.0000] <Philip`>
Sounds like that might be it

[10:30:00.0000] <yecril71pl>
Thanks, that cuts it.  Any background?  Was it in DOM 0?

[10:32:00.0000] <Philip`>
I have no idea

[11:45:00.0000] <yecril71pl>
/me found it: http://docstore.mik.ua/orelly/webprog/jscript/ch19_01.htm, 19.1.6: Scope of Event Handlers

[11:46:00.0000] <yecril71pl>
Note that it actually pulls all properties of containing elements, not just Document

[11:46:01.0000] <yecril71pl>
HTML5 takes a more modest apporach

[11:46:02.0000] <yecril71pl>
HTML5 takes a more modest approach

[11:47:00.0000] <yecril71pl>
It is like extended "this", and it is more logical this way.

[11:48:00.0000] <yecril71pl>
/me means more consistent

[11:48:01.0000] <yecril71pl>
So why did HTML5 choose to include that Document as an exception?

[11:52:00.0000] <nonge_>
Would it be 'right' to use <canvas> for an "eyecandy only" animation? … wich would normally be the job of CSS, but canvas-like stuff is not possible with it :/

[11:56:00.0000] <yecril71pl>
Flanagan’s book, however, does not provide any further references; it does not even say who Flanagan is.

[12:05:00.0000] <yecril71pl>
the technical term for it is "augmented scope chain"

[12:06:00.0000] <yecril71pl>
http://www.jibbering.com/faq/names/event_handler.html disagrees, and includes only FORM and document.

[12:12:00.0000] <nonge_>
for example, using an empty <canvas></canvas>, which only use is "simulating" an background-image (with z-index)

[12:26:00.0000] <annevk>
Gecko has document.contentType apparently

[12:27:00.0000] <annevk>
we have some bug that requests it (not a compat issue)

[12:27:01.0000] <annevk>
guess that should be in HTML, given that it defines page loading and such

[12:36:00.0000] <annevk>
going through TAG minutes...

[12:36:01.0000] <annevk>
http://www.w3.org/2001/tag/2011/02/08-minutes#item03 still actively considering DTDs...

[12:36:02.0000] <annevk>
for HTML

[12:38:00.0000] <annevk>
http://www.w3.org/2001/tag/2011/02/09-minutes seems to cover a bunch of HTML stuff too

[12:44:00.0000] <annevk>
couldn't find much interesting stuff

[12:45:00.0000] <annevk>
at least what interests me

[12:45:01.0000] <annevk>
I believe that does include web architecture, but apparently a different kind

[12:48:00.0000] <AryehGregor>
Is it just me, or can I not actually click on this button in Opera while I have the web inspector thing loaded?  http://aryeh.name/spec/editcommands/test/bold.html

[12:48:01.0000] <AryehGregor>
Because that seems . . . well, makes it sort of hard to use.

[12:50:00.0000] <jacobolus>
annevk: did you intend to have the latest whatwg blog post end with a sentence fragment?

[12:50:01.0000] <jacobolus>
annevk: it seems like there was supposed to be something after the bit that's there

[12:51:00.0000] <jacobolus>
(http://blog.whatwg.org/weekly-search-provider-apis)

[13:02:00.0000] <annevk>
poor wording

[13:03:00.0000] <annevk>
fixed

[13:03:01.0000] <annevk>
ta jacobolus

[13:03:02.0000] <jacobolus>
:)

[13:19:00.0000] <benschwarz>
Its out! http://germanforblack.com/articles/html5-for-web-developers

[13:21:00.0000] <annevk>
benschwarz, "Thankyou" -> "Thank you"?

[13:22:00.0000] <AryehGregor>
I think I have finally figured out a workable and sane initial definition for execCommand("bold").

[13:22:01.0000] <benschwarz>
annevk, nice pickup, thanks

[13:22:02.0000] <AryehGregor>
It has taken me something like 15 hours.

[13:23:00.0000] <annevk>
was that the command you started out with?

[13:23:01.0000] <AryehGregor>
Yes.

[13:23:02.0000] <AryehGregor>
So it includes a bit of time to get familiar with execCommand() itself.

[13:23:03.0000] <annevk>
figuring out the model is typically the hardest bit

[13:23:04.0000] <AryehGregor>
In this case, I spent most of the time figuring out a sane way to sane "make all the stuff in this Range bold/unbold".

[13:23:05.0000] <AryehGregor>
s/to sane/to say/

[13:24:00.0000] <AryehGregor>
Ranges are *way* too complicated for this.

[13:24:01.0000] <zewt>
s/for this//

[13:24:02.0000] <AryehGregor>
:)

[13:24:03.0000] <annevk>
doesn't execCommand operate on Selection?

[13:24:04.0000] <AryehGregor>
Yes, which is defined in terms of Ranges.

[13:25:00.0000] <annevk>
right, just saying there could be multiple making it more fun potentially

[13:25:01.0000] <AryehGregor>
It's a one-to-one mapping in every browser except Firefox, which allows multiple Ranges per Selection, but that turned out to be easy to define away.

[13:25:02.0000] <annevk>
hopefully you do not allow overlapping ranges within a selection

[13:25:03.0000] <zewt>
i hate multi-ranges, because it makes "Read more at:" clipboard hijacking way too easy :| (though it's possible to do without it)

[13:25:04.0000] <AryehGregor>
That is allowed, but the behavior is simple anyway.

[13:26:00.0000] <AryehGregor>
If you have a text node "Foobar", and the first range contains "Foob" and the second contains "obar", and you bold it, then Firefox produces something like "<b>Fo</b>ob<b>ar</b>".

[13:26:01.0000] <AryehGregor>
Or, no.

[13:26:02.0000] <AryehGregor>
/me tests that

[13:26:03.0000] <AryehGregor>
Anyway, I just say to style the Ranges one by one, in order.

[13:26:04.0000] <annevk>
and the ranges are live?

[13:27:00.0000] <AryehGregor>
. . . yeah, well, that's a separate question.

[13:27:01.0000] <AryehGregor>
No one has even attempted to define how Ranges behave under DOM mutation.

[13:27:02.0000] <annevk>
well it sort of matters if you are gonna operate on them :)

[13:27:03.0000] <AryehGregor>
Which actually is a practical problem for execCommand(), yes.

[13:27:04.0000] <AryehGregor>
It's occurred to me.

[13:27:05.0000] <AryehGregor>
But first things first.

[13:27:06.0000] <annevk>
looking forward to reading through this one day

[13:27:07.0000] <annevk>
gonna sleep now

[13:27:08.0000] <AryehGregor>
Here's the draft now: http://aryeh.name/spec/editcommands/editcommands.html

[13:28:00.0000] <AryehGregor>
Hixie, I could use a list of execCommand() usages, to figure out which features people actually use and how they use them.

[13:29:00.0000] <annevk>
good times

[13:29:01.0000] <AryehGregor>
Wow, there are a heck of a lot of them.

[13:29:02.0000] <annevk>
btw

[13:29:03.0000] <AryehGregor>
This will take me weeks for sure.

[13:29:04.0000] <annevk>
you should contact Roland

[13:29:05.0000] <AryehGregor>
Who's Roland?

[13:30:00.0000] <annevk>
he works on contenteditable/execCommand testing

[13:30:01.0000] <annevk>
at least some part of his time

[13:30:02.0000] <annevk>
 /msg'd you detaild

[13:30:03.0000] <annevk>
s

[13:31:00.0000] <AryehGregor>
Oh, is that related to the stuff that Google submitted to the whatwg at some point?

[13:31:01.0000] <AryehGregor>
They seemed to be concerned with the stuff I didn't start with, so I put it aside for the time being.

[13:31:02.0000] <AryehGregor>
But thanks, I'll contact him.

[13:31:03.0000] <annevk>
it's very much about what exactly execCommand should do given some situation

[13:32:00.0000] <annevk>
http://groups.google.com/group/browserscope

[13:34:00.0000] <AryehGregor>
Thanks, I'll take a look.

[14:30:00.0000] <benschwarz>
Hixie — maybe one you can help with https://github.com/benschwarz/developers.whatwg.org/issues/#issue/33


2011-02-22
[16:42:00.0000] <AryehGregor>
"I am reminded of a joke about mathematicians. One argues that it is obvious that claim A follows from B. The other disagrees. After arguing for an hour, the latter finally agrees that A obviously follows from B."

[16:42:01.0000] <AryehGregor>
I've seen that one happen.

[16:43:00.0000] <zewt>
i'm not sure why that guy figured that ridiculing people on the list was a good way to get help, heh

[16:44:00.0000] <AryehGregor>
A professor told me something was trivial.  Then he sat thinking for a few minutes about how to prove it.  Then he said he'd e-mail me later about it.  Then he e-mailed me an hour or two later with a proof.  Then he sent me a corrected proof because there was a mistake in the first one.

[16:44:01.0000] <AryehGregor>
Quote from first e-mail: "I found the proof of the fact about Sylow subgroups during the lunch. Indeed it is trivial.

[16:44:02.0000] <AryehGregor>
"

[16:45:00.0000] <AryehGregor>
(the proposition under discussion was "if G is a finite group, and P is a Sylow subgroup of P, then if H contains the normalizer of P in G, H is its own normalizer in G")

[17:48:00.0000] <jwalden>
anyone know of software that can tell me what codecs are associated with a given media file, for the purposes of filling in a codecs="" parameter?

[17:59:00.0000] <jwalden>
http://www.deathofthediv.com/ (from scrollback) would be more pleasant if there were a way to stop the audio, other than javascript:Array.prototype.forEach.call(document.getElementsByTagName("audio"),function(a){a.pause();});[].v

[18:04:00.0000] <tw2113>
i don't agree with it's death anyway

[18:04:01.0000] <tw2113>
it hasn't been replaced in every single instance

[18:05:00.0000] <zewt>
browsers should really be asking permission to play audio

[18:05:01.0000] <zewt>
first time per origin anyway

[18:05:02.0000] <zewt>
one of the biggest reasons I block flash is because sites love to use it to play audio without permission, heh

[18:06:00.0000] <zewt>
hopefully before long browsers will also have a quick way to answer the age-old question: "which stupid tab is making noise?"

[18:07:00.0000] <jwalden>
gecko has a pref to control

[18:07:01.0000] <jwalden>
er, s/$/ it/

[18:07:02.0000] <tw2113>
hmmm interesting idea...min/max font size

[18:07:03.0000] <jwalden>
but (I haven't checked) I'm guessing there's no UI because any such would be inextricably entangled with the underlying technical difference being explainable to the user

[18:08:00.0000] <jwalden>
and flash is still around

[18:08:01.0000] <zewt>
i would expect <audio> to not cripple itself in order to be cripple-compatible with flash

[18:08:02.0000] <zewt>
(also video, of course)

[18:09:00.0000] <zewt>
i'd expect it's more due to these being relatively new features ... not exactly sure when audio actually showed up in FF

[18:22:00.0000] <gsnedders>
/me wonders if it's worthwhile having a spec require javascript:Array.prototype.forEach.call(document.getElementsByTagName("audio"),function(a){a.pause();}); to work

[18:22:01.0000] <gsnedders>
(currently ES5 makes no guarantee that'll work because NodeList is a host object)

[20:19:00.0000] <benschwarz>
chriseppstein hi!

[20:19:01.0000] <chriseppstein>
benschwarz: yo

[20:20:00.0000] <benschwarz>
I saw a presentation of yours online somewhere the last few days…

[20:21:00.0000] <benschwarz>
if only I could find it now…

[20:21:01.0000] <chriseppstein>
http://vimeo.com/18084338 ?

[20:21:02.0000] <benschwarz>
chriseppstein no, perhaps something older?

[20:21:03.0000] <benschwarz>
It was in the same vein as something I'd written about or thought about recenty

[20:22:00.0000] <chriseppstein>
was it a slide deck or a video?

[20:22:01.0000] <chriseppstein>
or screencast?

[20:22:02.0000] <benschwarz>
only I got up mad early today and my memory is shot :)

[20:22:03.0000] <benschwarz>
chriseppstein it had both, I think

[20:23:00.0000] <benschwarz>
either way, I guess its not important

[20:23:01.0000] <chriseppstein>
http://vimeo.com/13804978

[20:23:02.0000] <benschwarz>
but big ups

[20:23:03.0000] <chriseppstein>
http://vimeo.com/4335944

[20:24:00.0000] <chriseppstein>
*shrugs* something you want to know about?

[20:24:01.0000] <benschwarz>
chriseppstein, nah, I just wanted to say whatup

[20:24:02.0000] <chriseppstein>
oh

[20:24:03.0000] <chriseppstein>
:)

[20:24:04.0000] <chriseppstein>
hi

[20:25:00.0000] <nimbupani>
benschwarz is a bit too tired after all the media attention today

[20:25:01.0000] <benschwarz>
haha

[20:25:02.0000] <benschwarz>
I got a dodgy leg from my phone vibrating

[20:25:03.0000] <chriseppstein>
ya? what'd you do now?

[20:25:04.0000] <benschwarz>
no, thats too silly.

[20:26:00.0000] <nimbupani>
this https://twitter.com/benschwarz/status/39791557217353728

[20:26:01.0000] <benschwarz>
nimbupani is my media dept

[20:26:02.0000] <nimbupani>
hahahahaha

[20:26:03.0000] <chriseppstein>
oh neat

[20:27:00.0000] <chriseppstein>
now it has 69 RTs

[20:27:01.0000] <chriseppstein>
:D

[20:27:02.0000] <chriseppstein>
just cuz I like the #

[20:28:00.0000] <nimbupani>
haha :)

[20:28:01.0000] <chriseppstein>
benschwarz: plz add css to this kthxby

[20:28:02.0000] <chriseppstein>
e

[20:29:00.0000] <nimbupani>
chriseppstein: you mean css official site :)

[20:32:00.0000] <chriseppstein>
nimbupani: I'm tired of reading the css specs :(

[20:32:01.0000] <nimbupani>
ohh

[20:33:00.0000] <nimbupani>
yeah :|

[20:33:01.0000] <nimbupani>
well lets hope it gets fixed too :)

[20:33:02.0000] <nimbupani>
they are pretty nice people who run that stuff SOOOO

[20:33:03.0000] <nimbupani>
:)

[20:34:00.0000] <benschwarz>
chriseppstein theres a bookmarklet for that

[20:34:01.0000] <nimbupani>
hahahaha

[20:34:02.0000] <nimbupani>
readability!

[20:36:00.0000] <benschwarz>
chriseppstein http://www.germanforblack.com/articles/moving-towards-readable-w3c-specs

[20:37:00.0000] <chriseppstein>
lol. tell us how you _really_ feel ben

[20:39:00.0000] <nimbupani>
REALLY

[23:09:00.0000] <rooftopjoe>
i posted this on #html earlier but this seems like a good place to ask as well

[23:09:01.0000] <rooftopjoe>
can anyone explain to me why it is important that html files are human-readable?

[23:09:02.0000] <rooftopjoe>
it seems to me like it's a waste of bandwidth

[23:09:03.0000] <rooftopjoe>
the same is true for all sgml's, xml included. but perhaps i just don't understand the reason yet

[23:15:00.0000] <SteveGL>
Because they're markup languages designed to be platform-independent and human editable in a text editor?  You could use a compressor tool to shrink down a final product for distribution though.

[23:18:00.0000] <rooftopjoe>
SteveGL: fair enough but wouldn't it have made more sense to devise someththing else for distribution? i don't think browsers commonly support gzipped html, for instance

[23:19:00.0000] <rooftopjoe>
SteveGL: i guess what i'm saying is... hadn't it made more sense to have had something like a HTML compiler that produces something more suitable for machines?

[23:19:01.0000] <rooftopjoe>
i'm sorry if my english is not very good

[23:20:00.0000] <SteveGL>
Well gzip seems well supported in my experience, but I was referring to tools that regenerate a source file, such as HTML or ECMAScript with compression techniques, like shrinking variable names.

[23:20:01.0000] <zewt>
every browser supports HTTP compression.

[23:21:00.0000] <rooftopjoe>
so there's no real advantage, except for the commodity of being human readable, right?

[23:21:01.0000] <zewt>
that's a massive advantage.

[23:21:02.0000] <rooftopjoe>
in other words, it wouldn't make sense for an application to be based on a SGML-like document if the human never interacted with said document_

[23:21:03.0000] <SteveGL>
Well, compiling the source would take away it's ability to be platform independent.

[23:22:00.0000] <SteveGL>
And yes, human readability is a big bonus.

[23:22:01.0000] <zewt>
"compiling" it is a huge cost: you still have to specify the human-readable source, but you also have to define a compiled format on top of it, and then maintain both formats in sync--for very little benefit

[23:23:00.0000] <rooftopjoe>
i know the overhead for parsing a sgml document can't be very big but it somehow doesn't feel right to me to waste resources :)

[23:24:00.0000] <zewt>
developing and speccing a compiled format, which every browser would have to support, and every web server would have to support, would be wasting resources

[23:24:01.0000] <zewt>
most pages are not bandwidth-limited by HTML.

[23:26:00.0000] <rooftopjoe>
zewt: i agree with you. just trying to understand the historical perspective

[23:26:01.0000] <rooftopjoe>
in the past, it would have been less painful

[23:26:02.0000] <SteveGL>
I really don't see any advantage to a compiled form, maybe in the 90s..

[23:26:03.0000] <rooftopjoe>
SteveGL: some embedded devices, perhaps. and (very) low connectivity

[23:27:00.0000] <rooftopjoe>
that's all i really have in mind

[23:27:01.0000] <rooftopjoe>
but i guess i got my question answered so thanks :)

[23:39:00.0000] <erlehmann>
even embedded devices could have rudimentary browsers.

[23:58:00.0000] <annevk>
oh lol

[23:58:01.0000] <annevk>
the HTTP WG discovers Sec- now?!

[23:58:02.0000] <annevk>
that has been around for like four XHR Last Call in which we repeatedly invited the HTTP WG to comment

[23:58:03.0000] <benschwarz>
annevk …

[23:58:04.0000] <annevk>
benschwarz?

[23:59:00.0000] <benschwarz>
annevk thanks for the pickup on spelling today (your only feedback ;))

[23:59:01.0000] <benschwarz>
I thought a whatwg post might be in order on the blog…

[23:59:02.0000] <annevk>
yes, do you have an account?

[00:00:00.0000] <annevk>
my other feedback would be that I was confused by "syncing" and miss the WHATWG logo

[00:00:01.0000] <annevk>
other than that it's pretty neat

[00:01:00.0000] <annevk>
oh, and maybe you should hide "in this section" when clicking it will do nothing

[00:03:00.0000] <annevk>
benschwarz, I can write something too btw if you prefer that, but typically people announce their own projects

[00:03:01.0000] <benschwarz>
annevk: its doing nothing?

[00:03:02.0000] <benschwarz>
looks like a regression bug :)

[00:03:03.0000] <benschwarz>
link?

[00:04:00.0000] <benschwarz>
"syncing" is probably confusing

[00:04:01.0000] <annevk>
it usually works, but not on e.g. http://developers.whatwg.org/acknowledgements.html as that has no subsections

[00:05:00.0000] <annevk>
oh, and it needs a favicon I suppose

[00:10:00.0000] <annevk>
benschwarz, let me know if you need help with the blog

[00:11:00.0000] <benschwarz>
annevk, ah, I'll check that thanks

[00:11:01.0000] <benschwarz>
annevk, doesn't it have a fav icon already?

[00:11:02.0000] <annevk>
oh it does

[00:11:03.0000] <annevk>
oops

[00:11:04.0000] <benschwarz>
(it does, however your browser isn't webkit I'm guessing…)

[00:11:05.0000] <annevk>
/me keeps looking in the address bar

[00:12:00.0000] <zewt>
broken address bar? :P

[00:12:01.0000] <annevk>
I'm using Opera

[00:13:00.0000] <annevk>
zewt, I keep thinking favicons are located there

[00:13:01.0000] <zewt>
heh, i find it endlessly amusing that every browser now feels the need to rename the address bar

[00:13:02.0000] <annevk>
but we moved them to tabs

[00:13:03.0000] <zewt>
it's not an address bar! it's a WHIZ-BANG BAR

[00:14:00.0000] <annevk>
benschwarz, I see that in Safari things are a bit different :)

[00:14:01.0000] <zewt>
i'd think it should still be shown in the address bar

[00:14:02.0000] <zewt>
don't know what opera's UI is looking like these days though

[00:15:00.0000] <benschwarz>
annevk are you seeing something unexpected?

[00:15:01.0000] <benschwarz>
I haven't testd opera a lot…

[00:15:02.0000] <annevk>
no, just the things I mentioned before

[00:15:03.0000] <benschwarz>
annevk, I suppose I could write a post

[00:15:04.0000] <benschwarz>
on whatwg (sorry, just circling back)

[00:15:05.0000] <SteveGL>
Opera's interface design has gotten much much better since version 9.

[00:16:00.0000] <annevk>
Safari is quite weird too

[00:16:01.0000] <SteveGL>
it's gotten more minimal and slick.

[00:16:02.0000] <annevk>
and in my version of Chrome clicking "in this section" does not work at all?

[00:16:03.0000] <SteveGL>
along with modernized.

[00:16:04.0000] <annevk>
benschwarz, cool!

[00:17:00.0000] <zewt>
i remember opera being fairly minimal ... *after* one turns off about 520 toolbars and side menus and whatever

[00:17:01.0000] <annevk>
benschwarz, I can make you an account, any preferences?

[00:18:00.0000] <benschwarz>
annevk I have "benschwarz" already, afaik

[00:19:00.0000] <annevk>
no

[00:20:00.0000] <annevk>
if you /msg me email name website temp-password I can set one up

[00:22:00.0000] <MikeSmith>
benschwarz: accounts for blog are provisioned separately from the user accounts for the shell server

[00:22:01.0000] <benschwarz>
oh right

[00:23:00.0000] <benschwarz>
MikeSmith, ps, you got mail - http://lists.w3.org/Archives/Public/www-archive/2011Feb/0051.html

[00:23:01.0000] <MikeSmith>
yeah

[00:23:02.0000] <MikeSmith>
I can make the change the contrast issue

[00:26:00.0000] <benschwarz>
MikeSmith - What do you think about the two specs being "the same"? How accurate is that?

[00:27:00.0000] <MikeSmith>
don't know what you mean

[00:29:00.0000] <MikeSmith>
http://developers.whatwg.org/ looks style-less for me at the moment, btw

[00:30:00.0000] <benschwarz>
MikeSmith I just did a bunch of deploys. Refresh - Still there?

[00:31:00.0000] <benschwarz>
MikeSmith, as usual with all things W3C I feel out of my depth :)

[00:31:01.0000] <MikeSmith>
yeah, but seems to be a local caching issue

[00:32:00.0000] <benschwarz>
MikeSmith: what are the differences betwen the spec-author-view and the developers.whatwg copies?

[00:33:00.0000] <MikeSmith>
benschwarz: there are some features that are in the developer.whatwg.org version that are not in the W3C version

[00:34:00.0000] <MikeSmith>
but that's not something that needs to be an issue for you, as far as I'm concerned

[00:34:01.0000] <benschwarz>
MikeSmith: I'm a bit concerned that making them look the same will cause confusion…

[00:34:02.0000] <MikeSmith>
they don't need to look the same

[00:34:03.0000] <MikeSmith>
who said they needed to look the same?

[00:35:00.0000] <benschwarz>
MikeSmith they don't. There has been some pressure to update your copy…

[00:35:01.0000] <MikeSmith>
ah

[00:35:02.0000] <MikeSmith>
well, that's an issue for me to deal with I guess

[00:35:03.0000] <MikeSmith>
I don't want to make it a problem for you

[00:35:04.0000] <MikeSmith>
so I will take care of it

[00:36:00.0000] <MikeSmith>
but as far as I'm concerned, there is no urgency around it

[00:39:00.0000] <benschwarz>
MikeSmith, I wonder if we should treat them as the same document—and all collaborate together

[00:39:01.0000] <benschwarz>
as for "other specs", I think there should be a solid baseline and pattern library

[00:41:00.0000] <MikeSmith>
I think we are already collaborating. But as you know, there's a non-trivial amount of work that would need to be done to port over the work you did to create the http://developers.whatwg.org/ version

[00:41:01.0000] <MikeSmith>
and it would be good to get it ported over

[00:41:02.0000] <MikeSmith>
but that doesn't mean you or I need to stop everything else and do it right now

[00:41:03.0000] <MikeSmith>
or doesn't mean that either you or I need to be the ones to do it

[00:42:00.0000] <MikeSmith>
if somebody else feels it's important to do soon, then I'd be happy to let them do the work whenever they want

[00:42:01.0000] <annevk>
abarth, http://tools.ietf.org/html/draft-abarth-principles-of-origin is great!

[00:43:00.0000] <annevk>
abarth, I think something like that was required to get CORS to CR

[00:43:01.0000] <MikeSmith>
wow cool

[00:45:00.0000] <zewt>
"When a user agent process this element" :)

[00:45:01.0000] <benschwarz>
MikeSmith I wouldn't trust many people to do it right :)

[00:46:00.0000] <benschwarz>
MikeSmith — Whats the best way to do it? Rather than handing you css files

[00:46:01.0000] <benschwarz>
MikeSmith - Maybe we can do it as a project in Tokyo??

[00:46:02.0000] <MikeSmith>
benschwarz: yeah

[00:46:03.0000] <MikeSmith>
that

[00:46:04.0000] <MikeSmith>
let's do it while you're here

[00:47:00.0000] <benschwarz>
that would kick ass.

[00:47:01.0000] <benschwarz>
perhaps in the mean time we should let steven faulkner merge those contrast changes.

[00:48:00.0000] <benschwarz>
My issue with them was that they were aesthetically horrible colours.

[00:48:01.0000] <benschwarz>
Which is why I moved away from the green and tones that we used

[00:48:02.0000] <MikeSmith>
yeah, I'll chat with Steve about those

[00:49:00.0000] <MikeSmith>
for now, I have to drop off for a bit

[00:49:01.0000] <MikeSmith>
back later

[00:54:00.0000] <benschwarz>
ok MikeSmith.

[00:54:01.0000] <benschwarz>
Later

[01:24:00.0000] <benschwarz>
annevk - the in this section button is removed for pages without a toc now ;)

[01:34:00.0000] <annevk>
cool

[01:36:00.0000] <annevk>
massive spam increase suddenly on blog.whatwg.org

[02:01:00.0000] <annevk>
spec looks quite neat AryehGregor

[03:18:00.0000] <alystair>
 augh why can't I make fixed postioning relative to something other than the document

[03:21:00.0000] <AdrianSchmidt>
alystair>> Wouldn't that be exactly the same as absolute positioning?

[03:24:00.0000] <zcorpan>
AdrianSchmidt: no

[03:24:01.0000] <AdrianSchmidt>
So what would the element be fixed to? Another element?

[03:25:00.0000] <zcorpan>
relative to viewport

[03:25:01.0000] <AdrianSchmidt>
Ah yes, my bad.

[03:25:02.0000] <AdrianSchmidt>
Of course...

[03:26:00.0000] <AdrianSchmidt>
I had a brainmelt and though it was relative to viewport already, but of course it's not.

[03:31:00.0000] <AdrianSchmidt>
Eh... no, I was right to begin with. Sorry.

[03:31:01.0000] <AdrianSchmidt>
From the specs:

[03:31:02.0000] <AdrianSchmidt>
Fixed positioning is a subcategory of absolute positioning. The only difference is that for a fixed positioned box, the containing block is established by the viewport.

[03:32:00.0000] <AdrianSchmidt>
So again. Fixed is positioned relative to the viewport, not the document. And what else could it be relative to? (I'm wondering here, not judging)

[03:33:00.0000] <AdrianSchmidt>
*gg go buy some lunch, bbs*

[03:33:01.0000] <zcorpan>
i guess you could make it relative to another element if you act as if the scroll position is at (0,0) or some such

[03:33:02.0000] <AdrianSchmidt>
scroll position of the document or the element?

[03:38:00.0000] <annevk>
you might want it relative to a scrolling container

[03:40:00.0000] <zcorpan>
ah

[03:40:01.0000] <zcorpan>
right

[03:46:00.0000] <AdrianSchmidt>
annevk>> Yes, that might make sense.

[03:47:00.0000] <AdrianSchmidt>
*makes sense

[03:52:00.0000] <AdrianSchmidt>
You could "hack" around it, by placing the "fixed" element outside the scrolling element and absolute position it, but that would be pretty ugly I guess.

[03:52:01.0000] <AdrianSchmidt>
Some more flexibility in positioning would be pretty nice :)

[04:31:00.0000] <thiessenp>
any idea if there is a proposal for an advertising banner element in html? (I know advertising is not a popular topic :)

[04:32:00.0000] <foolip>
thiessenp, http://wiki.whatwg.org/wiki/Rationale#An_.22advert.22_tag_for_advertisements

[04:32:01.0000] <zewt>
why would advertisers want to make it easier for every browser to hide ads? heh

[04:33:00.0000] <thiessenp>
foollip: interesting thanks

[04:33:01.0000] <aho>
http://www.stevesouders.com/blog/2010/02/15/browser-performance-wishlist/

[04:33:02.0000] <aho>
frag tag is somewhat related

[04:37:00.0000] <aho>
(it's something you'd also use for ads, but unlike some ad tag it would actually make things better for everyone) :>

[04:40:00.0000] <erlehmann>
thiessenp, class=ad

[04:41:00.0000] <aho>
i currently use something like aside.left or aside.leader

[04:41:01.0000] <aho>
works fine :)

[04:44:00.0000] <MikeSmith>
Philip`: you around? wanted to ask for your assessment of the feasibility of using your assertions-annotation mechanism over the full spec

[04:52:00.0000] <Philip`>
MikeSmith: I am

[04:52:01.0000] <MikeSmith>
so do you think it would be feasible or not?

[04:54:00.0000] <Philip`>
In its current form the performance is probably like O(n^2) (since it scans the whole document for every assertion pattern), but the spec could be split into sections and the assertions labelled with the section to scan so that would probably be okay

[04:55:00.0000] <MikeSmith>
ok

[04:55:01.0000] <Philip`>
I guess the main difficulty is that it generally assumes the spec is a load of paragraphs containing sentences

[04:56:00.0000] <Philip`>
so it wouldn't work adequately with e.g. the parser section, where there's a more complex markup structure

[04:56:01.0000] <MikeSmith>
hmm

[04:57:00.0000] <MikeSmith>
so we might have to use some different mechanism for those cases

[04:57:01.0000] <Philip`>
(though it probably wouldn't be used for that anyway since the parser doesn't really have individually testable assertions at all)

[04:57:02.0000] <MikeSmith>
ok

[04:57:03.0000] <Philip`>
(but I don't know if there's other sections which are almost but not quite annotatable in this way)

[04:57:04.0000] <annevk>
it probably also works poorly for everything that has a set of steps

[04:59:00.0000] <Philip`>
Yeah, in most cases I just put the annotation with the "These steps must be followed:" phrase

[04:59:01.0000] <Philip`>
since the steps can't be tested individually

[05:00:00.0000] <Philip`>
For canvas that's okay since there aren't many complex multi-step algorithms

[05:00:01.0000] <Philip`>
http://philip.html5.org/tests/canvas/suite/tests/spec.html#testrefs.2d.shadow.render

[05:32:00.0000] <MikeSmith>
Philip`: so what is the process for creating the annotations?

[05:33:00.0000] <MikeSmith>
the annotated spec is a static copy that you generate, right?

[05:33:01.0000] <MikeSmith>
with that annotations added?

[05:33:02.0000] <MikeSmith>
s/that/the/

[05:34:00.0000] <Philip`>
See tests/submission/PhilipTaylor/tools/canvas in Hg

[05:34:01.0000] <Philip`>
specextract.py pulls out the canvas section from the original spec and makes current-work-canvas.xhtml

[05:37:00.0000] <Philip`>
gentest.py does a load of stuff including write_annotated_spec() which reads the .xhtml, and annotates it using spec_assertions (simply read from spec.yaml) and spec_refs (map of assertion id -> [list of test names] generated while processing all the test cases)

[05:38:00.0000] <Philip`>
(It does that using minidom, and then dumps the output as a static .html file)

[07:03:00.0000] <MikeSmith>
Philip`: thanks

[07:04:00.0000] <MikeSmith>
http://twitter.com/#!/rwaldron/status/40062566399082497  "Need to Q&A with someone that has experience with JavaScript canvas text rendering. #javascript #canvas #html5"

[07:06:00.0000] <annevk>
if you want to change layout, better to complain on www-style⊙wo

[07:06:01.0000] <annevk>
oops

[07:06:02.0000] <annevk>
my window was scrolled way up and I did not notice

[07:14:00.0000] <MikeSmith>
I do that sometimes

[07:20:00.0000] <alystair>
Augh I went afk too long, what I meant was that fixed positioning should be relative to closest parent that's set to relative... sort of like absolutely positioned things...

[07:21:00.0000] <alystair>
actually wait, fixed is fixed for a reason... although it does make things more complicated when you have a design with variable widths... meh can easily fix with JS

[07:29:00.0000] <zcorpan>
would be nice with vertically-absolute-but-horizontally-fixed and the vice versa

[07:29:01.0000] <zcorpan>
s/the//

[08:55:00.0000] <aho>
there still isn't a way to specifiy specific font sizes for those fonts in your font stack, right?

[09:26:00.0000] <TabAtkins>
aho: No, though you can approximate it using font-size-adjust to force all fonts to size themselves to a particular x-height.

[09:26:01.0000] <TabAtkins>
That's often more-or-less what you want.

[09:26:02.0000] <aho>
sounds interesting

[09:26:03.0000] <aho>
well, in this case i want that the text doesnt exceed some specific maximum width

[09:27:00.0000] <aho>
but font-size-adjust sounds better than nothing

[09:37:00.0000] <TabAtkins>
Hm, width?  font-size won't help you much at all there, since character are variable-width.

[09:38:00.0000] <Ms2ger>
TabAtkins, not in Lynx!

[09:39:00.0000] <TabAtkins>
Not in UA-styled <pre> either, but I didn't think I had to mention "unless you're using a fixed-width font". ^_^

[09:39:01.0000] <Ms2ger>
That'd be logic

[09:39:02.0000] <rgervais>
quick question guys, I have an error msg I want displayed on a page that says 'Please select another video' just plain text with a red background

[09:39:03.0000] <rgervais>
what tag should I wrap around with?

[09:40:00.0000] <rgervais>
p, span, div.. i'm not sure

[09:40:01.0000] <rgervais>
I can do all the same with those tags, I just want to know the proper one

[09:40:02.0000] <TabAtkins>
It's a paragraph of text, right?  So...

[09:40:03.0000] <rgervais>
it's just text that says 'Please select another video' an error message

[09:41:00.0000] <TabAtkins>
So use <p>.  Or <div>.  Either is fine.

[09:41:01.0000] <rgervais>
it's one sentence

[09:41:02.0000] <Ms2ger>
Sounds like a p

[09:41:03.0000] <rgervais>
ok thanks

[09:42:00.0000] <TabAtkins>
The rule is: don't overthink your semantics.  Everything's really quite easy.

[09:42:01.0000] <Ms2ger>
... to #whatwg regulars

[09:43:00.0000] <rgervais>
yea, I mean all will do the job I just want to use 'proper' semantics :)

[09:43:01.0000] <rgervais>
but cool I'll try not to overthink

[09:43:02.0000] <TabAtkins>
Nah, it's easy to everyone.  Most people just overthink it.  ^_^

[09:43:03.0000] <aho>
TabAtkins, it's the name of the site... it won't change

[09:43:04.0000] <TabAtkins>
When you're splitting hairs between <p> and <div>, you're trying too hard.

[09:44:00.0000] <aho>
with font A i'd like to use 97px and with font B i'd rather use 84px (otherwise it wraps)

[09:45:00.0000] <TabAtkins>
Oh, so you specifically want to prevent wrapping.  Ok.

[09:45:01.0000] <aho>
at a line height of 100px i'd like to prevent wrapping indeed :>

[09:46:00.0000] <TabAtkins>
/me wants a text-justify-last mode that'll adjust font-size.

[09:47:00.0000] <bfrohs>
/me does too

[09:47:01.0000] <TabAtkins>
Excellent, I got my SXSW badge.  Now I just have to hope that Housing can find me a room.

[09:50:00.0000] <TabAtkins>
I forget.  Do background images print by default?

[09:50:01.0000] <TabAtkins>
I suppose I can test this...

[09:52:00.0000] <TabAtkins>
Answer: Apparently not.  Darn, there went my idea.

[09:52:01.0000] <jwalden>
gsnedders: assuming webidl or whatever specifies that indexing [0], [1], etc. on NodeList works, the forEach thing should indeed be required by the relevant specs: forEach and all those algorithms are generic, and work on any object with a length property

[09:53:00.0000] <gsnedders>
jwalden: ES5 explicitly states that forEach has no guaranteed behaviour for host objects

[09:53:01.0000] <TabAtkins>
host objects are the devil.

[09:54:00.0000] <gsnedders>
jwalden: "Whether the forEach function can be applied successfully to a host object is implementation-dependent.

[09:54:01.0000] <jwalden>
gsnedders: well, sure, but that's not realistic that DOM objects are going to be fully-funky host objects

[09:54:02.0000] <jwalden>
they are going to behave roughly like normal objects

[09:54:03.0000] <jwalden>
and webidl will/does say that

[09:55:00.0000] <gsnedders>
jwalden: Does it? Where?

[09:55:01.0000] <jwalden>
gsnedders: if it doesn't, it should/will -- you can't possibly believe webidl would leave unspecified the behavior of elt.childNodes[i]

[09:56:00.0000] <gsnedders>
jwalden: It defines that, but by my reading of ES5 that's not enough to require it be possible to use with forEach

[09:56:01.0000] <jwalden>
spec wonk cagefight!

[09:57:00.0000] <jwalden>
eh, maybe

[09:57:01.0000] <jwalden>
real world will dictate otherwise

[09:57:02.0000] <gsnedders>
jwalden: Like, as far as I can tell, there's no guarantee any host object will work, even if [[Get]] and [[HasProperty]] are defined for it

[09:58:00.0000] <jwalden>
gsnedders: well, by this measure the entire DOM is unsound

[09:58:01.0000] <gsnedders>
jwalden: meh, I'd just rather specs required what works in the real world, as soon enough the real world will require stuff that isn't required in specs

[09:58:02.0000] <gsnedders>
jwalden: indeed

[09:58:03.0000] <jwalden>
why exactly ES5 specifically calls this out I don't know, rather than just letting the algorithm stand

[09:59:00.0000] <gsnedders>
(and then you're back to reverse-engineering what works in the competition…)

[09:59:01.0000] <gsnedders>
jwalden: Because ES5 calls out that host objects can do anything, so informatively notes everywhere that x isn't guaranteed to work with host objects

[10:00:00.0000] <jwalden>
well, yes

[10:00:01.0000] <jwalden>
but you could imply that by all the [[Get]]s and [[Call]]s already

[10:00:02.0000] <jwalden>
so it's redundant

[10:01:00.0000] <gsnedders>
But then there's an ambiguity as to whether the behaviour of forEach with a host object first argument must follow that algorithm, because the host object doesn't have to follow the normal rules for objects, no?

[10:02:00.0000] <gsnedders>
/me isn't a particular fan of the host object exemption from almost everything

[10:02:01.0000] <gsnedders>
Like I'd much rather there were a few specific places where host objects were allowed to do anything.

[10:03:00.0000] <jwalden>
how is there ambiguity about whether it should follow the algorithm, absent that implementation-defined statement?

[10:04:00.0000] <gsnedders>
jwalden: Hmm, yeah, I guess there isn't (I misremembered what one of the general host object exemptions said)

[10:05:00.0000] <gsnedders>
I guess MS may have previously (to IE9) wanted host objects to be free to act differently in a lot of places due to their DOM impl in IE<9

[10:05:01.0000] <gsnedders>
Apart from that I can't think of any pressure from browser vendors to keep it undefined

[10:16:00.0000] <aho>
TabAtkins, now that i think about it... a viewbox'd svg would work fine for this

[10:24:00.0000] <aho>
on a third thought... bad idea since text isn't an element which establishes a viewport :l

[10:43:00.0000] <rgervais>
ok I got another question, what tag should i use for a refresh button "it'll become an icon using CSS"? A span, a tag, or button tag or something else?

[10:43:01.0000] <TabAtkins>
If it's a refresh button, use a <button>.  Easy.  ^_^

[10:44:00.0000] <TabAtkins>
You can style <button>s to remove all the default appearance.

[10:44:01.0000] <rgervais>
why not a <a> tag?

[10:44:02.0000] <rgervais>
example: <a class="refresh_btn"></a>

[10:45:00.0000] <TabAtkins>
That's acceptable too, sure, as long as it doesn't have any side-effects (you shouldn't ever submit a form using <a> and js, for example).

[10:46:00.0000] <TabAtkins>
I'll point back to my previous advice: don't overthink it.

[10:46:01.0000] <rgervais>
I'm not submitting though, I'm refreshing

[10:46:02.0000] <rgervais>
I know, I just curios as to why not use something versus using it

[10:46:03.0000] <TabAtkins>
If it would be acceptable for a spider to follow the link, then <a> is fine.  So is <button>.

[10:47:00.0000] <rgervais>
alright that's helpful

[10:48:00.0000] <TabAtkins>
Jeezus, I *really* hate whoever release a new botting tool for Twitter over the weekend.

[12:23:00.0000] <Philip`>
/me wishes he didn't have to read the whole Working Group Decision messages to figure out what the decisions were

[12:23:01.0000] <Philip`>
(Summary for this case: The "Common idioms" section won't be removed)

[12:25:00.0000] <Ms2ger>
You're pretty lucky if you figured it out after reading it once

[12:29:00.0000] <aho>
<html lang="en-US-x-hixie" ...>

[12:29:01.0000] <aho>
:>

[12:55:00.0000] <AryehGregor>
Wow, the way text-decoration is defined in CSS is horrible.  How are you supposed to programmatically determine whether a given stretch of text is underlined?

[12:55:01.0000] <AryehGregor>
Granted, inheriting it is also bad.

[12:55:02.0000] <TabAtkins>
It's defined very specially so that underlines don't move or change color just because the font/color properties on descendants are different.

[12:55:03.0000] <AryehGregor>
Which is why <u>Foo <span style=color:red>bar</span> baz</u> looks really weird . . .

[12:55:04.0000] <AryehGregor>
But anyway.

[12:55:05.0000] <AryehGregor>
Now I have to define queryCommandState("underline").

[12:56:00.0000] <othermaciej>
the CSS underline model also sucks really bad for editing

[12:56:01.0000] <AryehGregor>
Yes, that's my current problem.

[12:57:00.0000] <othermaciej>
imagine hitting Cmd+U while selecting a fragment in the middle of an underlined ancestor

[12:57:01.0000] <othermaciej>
WebKit handles this, but it's really complicated

[12:57:02.0000] <othermaciej>
much more so than bold or italic

[12:57:03.0000] <AryehGregor>
It would have been better to make it inherited, but have the color be determined by the color of the character it's under, and the thickness determined by averaging per-line or whatever as currently suggested.

[12:57:04.0000] <AryehGregor>
Yes, that's exactly what I'm trying to spec right now.

[12:57:05.0000] <othermaciej>
it also sucks that distinc text-decorations are not orthogonal

[12:59:00.0000] <othermaciej>
so you actually need multiple elements if you want a span of text to have both strikethrough and underline

[12:59:01.0000] <AryehGregor>
I notice WebKit just refuses to even try removing the underlining in at least some cases.

[12:59:02.0000] <AryehGregor>
Hmm, or maybe that's only when it's on a non-contenteditable ancestor.

[12:59:03.0000] <AryehGregor>
In that case you have to give up, I guess.

[12:59:04.0000] <AryehGregor>
It seems like WebKit propagates underlines to floated and absolutely positioned descendants.

[13:00:00.0000] <AryehGregor>
othermaciej, data:text/html,<!doctype html><span style="text-decoration:underline overline">foo</span>?

[13:00:01.0000] <AryehGregor>
Argh.

[13:01:00.0000] <othermaciej>
AryehGregor: yeah, if you are underlined by a non-editable ancestor, there's nothing you can do

[13:01:01.0000] <AryehGregor>
othermaciej, in case you didn't get it: data:text/html,<!doctype html><span style="text-decoration:underline overline">foo</span>?

[13:01:02.0000] <othermaciej>
AryehGregor: oh, I didn't know that worked

[13:01:03.0000] <AryehGregor>
Seems to.

[13:03:00.0000] <AryehGregor>
In theory you could handle the case where an ancestor has a non-inline style that underlines it, by setting an inline style to override it.

[13:03:01.0000] <AryehGregor>
Argh.

[13:03:02.0000] <AryehGregor>
Are there any IRC clients that don't spam the chat endlessly on netsplits?

[13:04:00.0000] <TabAtkins>
I just have irssi ignore all joins/quits.

[13:04:01.0000] <AryehGregor>
That might be an improvement, I guess.

[13:04:02.0000] <bfrohs>
/me wrote a custom theme in empathy to hide all but the 3 most recent ones

[13:05:00.0000] <AryehGregor>
I'd really prefer if they were available somehow, just didn't spam up the chat.

[13:05:01.0000] <TabAtkins>
You can, with a bit more effort, have irssi redirect the ignored stuff to a different channel, though I don't think that addresses what you want.

[13:05:02.0000] <AryehGregor>
Like if there were an indicator of some sort you could expand to make all the parts/joins at that position visible, that had no or almost no height.

[13:05:03.0000] <AryehGregor>
In general, IRC client UI is terrible.

[13:05:04.0000] <TabAtkins>
Agreed.

[13:06:00.0000] <rgervais>
IRC is meant for geeks

[13:06:01.0000] <rgervais>
not for regular folk

[13:06:02.0000] <AryehGregor>
Geeks appreciate good UI too.

[13:07:00.0000] <Philip`>
True geeks write their own IRC clients

[13:07:01.0000] <rgervais>
true but...

[13:07:02.0000] <TabAtkins>
Hm, what would I actually need to get access to IRC messages?  Then I could just write a front-end that polled the server every second or so for new messages.

[13:09:00.0000] <AryehGregor>
/me notices that un-underlining part of the text in <p style="color: red; text-decoration: underline"><span style="color: blue">Some text</span></p> changes the underline color in the parts you didn't select

[13:09:01.0000] <AryehGregor>
(in WebKit)

[13:11:00.0000] <AryehGregor>
Firefox just doesn't do anything in that case.

[13:12:00.0000] <AryehGregor>
Opera doesn't even notice the underline from the ancestor, it just adds a new blue underline on top of it, and queryCommandState("underline") returns false.

[13:15:00.0000] <AryehGregor>
IE 9 RC reports queryCommandState("underline") as false, but does nothing when you try to underline.

[13:15:01.0000] <AryehGregor>
Firefox at least reports queryCommandState("underline") correctly.

[13:17:00.0000] <AryehGregor>
Okay, what I'm going to do is propose that CSS 3 Text include a new value text-decoration-underline: suppress that causes no underline to be drawn even if some ancestor has an underline.

[13:17:01.0000] <AryehGregor>
Because the status quo is just insane.

[13:18:00.0000] <AryehGregor>
Does anyone know if this has been proposed before?

[13:20:00.0000] <TabAtkins>
Don't recall it since I've joined the group.

[13:20:01.0000] <TabAtkins>
Though, wouldn't you want to suppress strike-through too, and related decorations?

[13:21:00.0000] <Philip`>
/me wonders if editing necessarily has to operate directly on the HTML+CSS markup, rather than converting to some internal editing-friendly format and then editing and then converting back

[13:21:01.0000] <AryehGregor>
That sounds much more complicated.

[13:21:02.0000] <AryehGregor>
In most cases, it will be rendered as HTML in the end, so for real WYSIWYG, you want the editing format to be HTML too.

[13:23:00.0000] <rramthun>
I have a question regarding the "required" attribute of inputs in HTML5: Is the behaviour for onclick events of the form submit button defined, i.e. what happens, if you click on the submit button of a form, which is missing "require"d information in one of its inputs? Should the onclick event get executed or not?

[13:23:01.0000] <TabAtkins>
Yes, 'click' fires.  'submit' does not (iirc).

[13:25:00.0000] <rramthun>
I wonder if this behaviour is specified somewhere.

[13:25:01.0000] <Ms2ger>
Yes

[13:26:00.0000] <TabAtkins>
Yes, the HTML spec.

[13:26:01.0000] <Ms2ger>
In general

[13:33:00.0000] <rramthun>
I wondered because jQuery functions which have been bound to "click" of a submit button don't get executed, but that seems to be jQuery specific. A test with plain alert() shows you are right.

[13:33:01.0000] <AryehGregor>
I think "submit" fires too.

[13:33:02.0000] <AryehGregor>
/me looks it up

[13:35:00.0000] <AryehGregor>
Is whatwg.org working?

[13:39:00.0000] <TabAtkins>
yes.

[13:50:00.0000] <AryehGregor>
Did my message just now about css3-text get through to www-style?  It's not showing up in the archives.

[13:53:00.0000] <AryehGregor>
There we go: http://lists.w3.org/Archives/Public/www-style/2011Feb/0641.html

[13:54:00.0000] <AryehGregor>
/me really only wants it added to the spec, so he can reference it in his spec, even if no one implements it :)

[13:55:00.0000] <TabAtkins>
Yeah, it did.

[13:55:01.0000] <TabAtkins>
It sometimes takes several minutes for the archive to update.

[13:55:02.0000] <ako>
Chrome dev converts to <p><u>Hello </u>there<u>!</p>

[13:55:03.0000] <ako>
</u> missing

[14:04:00.0000] <AryehGregor>
I was looking at the DOM.

[14:04:01.0000] <AryehGregor>
How are you even testing on anything else?

[14:05:00.0000] <virtuelv>
somewhat related to this channel, http://my.opera.com/core/blog/show.dml/26453141

[14:05:01.0000] <virtuelv>
AryehGregor: ?

[14:09:00.0000] <AryehGregor>
virtuelv, ?

[14:11:00.0000] <virtuelv>
AryehGregor: I was just wondering what your "How are you even ..." was in reference to

[14:11:01.0000] <virtuelv>
(and if it was to what I wrote, what you meant by it)

[14:13:00.0000] <TabAtkins>
virtuelv: If the ordering I see is canonical, his comment was before what you said anyway.  I think it was in reference to ako, but I don't understand what it's referring to.

[14:14:00.0000] <ako>
there is a sparking new html5 parser in opera now, i guess he meant that it's worth to check its execCommand behavior

[14:16:00.0000] <TabAtkins>
s/sparking/spanking/ is the usual idiom.

[14:16:01.0000] <ako>
thought it was 30% wrong, but ignored it :>

[14:19:00.0000] <aho>
is there some eta for an @var build of chrome/chromium? :)

[14:20:00.0000] <aho>
or any kind of preprocessor thingy

[14:21:00.0000] <TabAtkins>
"Months" is the best I can offer.

[14:21:01.0000] <aho>
i think cssmin intends to support some kind of @var stuff, but i'm not sure which flavor it will be

[14:21:02.0000] <aho>
http://code.google.com/p/cssmin/wiki/ConfigurationEmulateCss3Variables

[14:21:03.0000] <aho>
oh it already does

[14:22:00.0000] <aho>
looks somewhat different from what i remember... mh

[14:23:00.0000] <TabAtkins>
That'll probably be sooner, but I still can't offer anything more specific.

[14:23:01.0000] <TabAtkins>
SASS will support the official @var syntax.

[14:23:02.0000] <aho>
ye, i think chriseppstein mentioned that

[14:29:00.0000] <TabAtkins>
aho: That's an older version of variables.  It kinda sucks that the cssmin person went to the effort of implementing that, when it's being superseded.

[14:33:00.0000] <aho>
ye... well, it's enabled/disabled via options. he can add other kinds of variables/mixins/nesting if he likes (w/o breaking things, that is)

[14:34:00.0000] <aho>
is there some kind of documentation/specification for the new @var stuff?

[14:34:01.0000] <aho>
the only thing i know are those slides

[14:34:02.0000] <othermaciej>
are variables mutable at runtime

[14:34:03.0000] <aho>
yes

[14:34:04.0000] <TabAtkins>
aho: There's a thread on www-style (long) and a blogpost by me.

[14:34:05.0000] <TabAtkins>
othermaciej: Yeah.

[14:34:06.0000] <zewt>
variables tend to vary :)

[14:35:00.0000] <aho>
yes, but it was a valid question since the css "variables" were typically constants :>

[14:36:00.0000] <zewt>
sounds like it was a bit of a misnomer, then

[14:36:01.0000] <othermaciej>
I wondered why Bert Bos pedantically called them constants, then

[14:36:02.0000] <zewt>
(havn't followed that stuff)

[14:37:00.0000] <aho>
they are constants in all current implementations (all current ones are just preprocessors after all)

[14:37:01.0000] <TabAtkins>
othermaciej: You mean in his old blog post?  I think the proposal he was responding to there was actually for constants.

[14:38:00.0000] <othermaciej>
did the hyatt/glazou proposal lack runtime mutability?

[14:38:01.0000] <aho>
the slides i mentioned earlier: http://www.xanthir.com/talks/2011-01-12/slides.html

[14:39:00.0000] <TabAtkins>
othermaciej: They only had mutability through direct CSSOM manipulation, which makes them as good as immutable in practice.

[14:39:01.0000] <TabAtkins>
(Since iterating through all the rules in a stylesheet and checking the type to find the vars is a horrible thing to make authors do.)

[14:41:00.0000] <TabAtkins>
aho: You'll note that on the first slide I now link to the blogpost.

[14:41:01.0000] <TabAtkins>
And I have a further blogpost diving into more detail about variables specifically.

[14:42:00.0000] <othermaciej>
TabAtkins: still seems wrong to refer to that as "constants"

[14:42:01.0000] <annevk>
http://lanyrd.com/2011/reboot12/ omg I am away

[14:42:02.0000] <othermaciej>
at least from the pod of excessive pedantry

[14:42:03.0000] <annevk>
have not missed a single one since 7

[14:42:04.0000] <TabAtkins>
Well, it's arguable.  If the semantic is that changing it via the CSSOM causes a reparse of the stylesheet, then it's still possible to justify calling them constants.

[14:43:00.0000] <aho>
ye

[14:44:00.0000] <Yuhong>
"Microsoft seems to have a stronger corporate agenda dictating the actions of its standards bodies representatives. Hickson [from Google] looks very independent"

[14:44:01.0000] <Yuhong>
http://news.cnet.com/8301-30685_3-20008935-264.html#ixzz1EBjhiiN4

[14:45:00.0000] <aho>
microsoft always tries to put a spin on everything

[14:45:01.0000] <aho>
no one else does that :>

[14:46:00.0000] <aho>
http://en.wikipedia.org/wiki/Spin_%28public_relations%29

[14:46:01.0000] <aho>
this kind of spin, that is :>

[14:47:00.0000] <aho>
(and then they act surprised if the nerds get angry) :D

[14:48:00.0000] <Yuhong>
I know that MS is the least PR 2.0 compliant browser vendor for a while now.

[14:57:00.0000] <zewt>
secure prng for floats keeps coming up, but ... does crypto ever actually need it? heh

[14:57:01.0000] <zewt>
given how much harder it is to define floating-point properly, i'd expect crypto to always stick with ints/fixed-point

[14:58:00.0000] <zewt>
(as it does in all crypto I've ever seen)

[14:59:00.0000] <aho>
well, you can always just refer to other specs (e.g. ieee 754)

[14:59:01.0000] <zewt>
well I mean, defining and validating algorithms in general on floating-point

[14:59:02.0000] <annevk>
Yuhong, that's from June 2010!

[15:00:00.0000] <gsnedders>
zewt: ES has well-defined floating-point behaviour

[15:00:01.0000] <gsnedders>
(the fact that basically all implementations on x86 (but not x86_64) disregard that is another issue)

[15:00:02.0000] <Yuhong>
Yes, but I am quoting a specific comment.

[15:01:00.0000] <zewt>
floating-point operations themselves are well-defined, but does any (real-world) crypto actually depend on that?

[15:02:00.0000] <zewt>
just seems like the whole "float PRNG" sub-discussion might be irrelevant, that's all

[15:03:00.0000] <gsnedders>
/me has stayed out of that thread because he has no idea about any of this

[15:03:01.0000] <zewt>
for example, > It seems pretty simple to generate a random number from 1 to 2 by fixing the exponent and mixing in 52 bits of random mantissa. Subtract 1 to get an evenly distributed value from 0-1.

[15:04:00.0000] <zewt>
that ... might be true, but without a more detailed understanding of the narrow details of floating-point math than most people have, it's not clearly so

[15:11:00.0000] <Yuhong>
BTW, if you are wondering why Netscape 4 had poor CSS support, the code used by Netscape 4 to convert CSS to JSSS is available here:

[15:11:01.0000] <Yuhong>
csstojs.c

[15:12:00.0000] <Yuhong>
http://mxr.mozilla.org/classic/source/lib/libstyle/csstojs.c

[15:12:01.0000] <TabAtkins>
Son of a... I just accidentally killed an hour of writing work by abusing back/forward.  >_<

[15:15:00.0000] <Yuhong>
For those who don't know the history, Netscape began developing version 4 in early 1996.

[15:16:00.0000] <gsnedders>
And IE3's CSS support was what? :P

[15:16:01.0000] <Yuhong>
As part of this, Netscape developed a style sheet language based on JSSS and submitted it to the W3C.

[15:17:00.0000] <Yuhong>
Unfortunately, it got rejected by the HTML ERB in favor of CSS.

[15:17:01.0000] <TabAtkins>
"Un"?

[15:17:02.0000] <Yuhong>
Netscape ended up have to create a CSS to JSSS translator, leading to poor CSS support.

[15:18:00.0000] <Yuhong>
What I want to mention is that the source code for it is available as part of the Mozilla classic source.

[15:18:01.0000] <TabAtkins>
Okay, it's just the implication (that it was unfortunate that we settled on CSS) that I found odd.

[15:18:02.0000] <Yuhong>
Unfortunately for Netscape, I mean.

[15:19:00.0000] <TabAtkins>
Ah yeah, that makes sense.

[15:19:01.0000] <Yuhong>
As part of this, Netscape developed a style sheet language based on JavaScript called JSSS and submitted it to the W3C.

[15:19:02.0000] <annevk>
x

[15:19:03.0000] <annevk>
ms2ger left?

[15:20:00.0000] <annevk>
wat is it with his short IRC time windows

[15:20:01.0000] <annevk>
almost like he has something better to do

[15:21:00.0000] <TabAtkins>
Yay, all my work was still sitting in a less buffer from my last cvs diff!  Woo!

[15:21:01.0000] <zewt>
heh

[15:21:02.0000] <zewt>
the search-for-remnants-of-lost-data quest

[15:22:00.0000] <TabAtkins>
(I realized upon diffing that I had done too much work between commits, and lost my work while trying to backtrack so I could push more reasonable commits.

[15:23:00.0000] <TabAtkins>
Also, yay, my use of Google Reader as a poor-man's cron is working great!

[15:26:00.0000] <annevk>
Ms2ger, when you read this, I was going to ask you about publishing DOM Core

[15:26:01.0000] <annevk>
Ms2ger, I am almost sure you are ok with it though, so I am going to ask Art to get things moving tomorrow

[15:27:00.0000] <AryehGregor>
virtuelv, I was talking to ako.  I wanted to know how he could tell the difference between closed and unclosed tags with execCommand(), since that operates on the DOM level, where there's no such thing as an unclosed tag.

[15:27:01.0000] <AryehGregor>
There can only be unclosed tags in markup.

[15:29:00.0000] <TabAtkins>
AryehGregor: I think ako was talking about your email, where you omitted a closing </u>.

[15:31:00.0000] <AryehGregor>
Oh.

[15:31:01.0000] <Yuhong>
IE is a different mess altogether, BTW.


2011-02-23
[16:01:00.0000] <aho>
mh... requestAnimationFrame is kinda meh :I

[17:18:00.0000] <AryehGregor>
I feel sorry for the chairs, having to read through Change Proposals.

[17:18:01.0000] <AryehGregor>
But not sorry enough to add half a page of somewhat dubious logic to one that I support in case it will tilt the case in my favor.  \o/

[17:18:02.0000] <AryehGregor>
s/to add/to not add/

[17:19:00.0000] <hober>
:)

[17:20:00.0000] <AryehGregor>
/me just added the whole "<u> should not be invalid just because some other obsolete presentational features . . ." thing at http://www.w3.org/html/wg/wiki/ChangeProposals/UShouldBeConforming#Rationale

[17:20:01.0000] <AryehGregor>
/me believes points 1 and 2, thinks 3 and 4 are sketchy, and considers 5 to be patently ridiculous, but hey, who knows

[20:01:00.0000] <wolfman2000>
...been awhile since I've been here. *sees if any updates were made as of late*

[00:51:00.0000] <annevk>
benschwarz, need help with the blog still?

[00:53:00.0000] <Ms2ger>
Morning annevk :)

[00:53:01.0000] <annevk>
hey there Ms2ger, read the logs?

[00:53:02.0000] <Ms2ger>
Yes

[00:53:03.0000] <annevk>
it seems Art is still asleep

[00:54:00.0000] <Ms2ger>
Once you know a date, I can generate it

[00:54:01.0000] <annevk>
kk

[00:54:02.0000] <annevk>
I guess I'll rename context node to context object as you suggested

[00:54:03.0000] <annevk>
and mention it is not always used

[01:00:00.0000] <annevk>
anyone going to write a CCP for http://www.w3.org/html/wg/wiki/ISSUE-155-CP1 ?

[01:00:01.0000] <annevk>
"CSS-hindered browsers" can just provide a sane default style

[01:05:00.0000] <hsivonen>
it would be helpful to name concrete browsers that the CP writer cares about

[01:06:00.0000] <annevk>
does it help commenting on change proposals?

[01:06:01.0000] <annevk>
I have the feeling that never gets anywhere

[01:08:00.0000] <benschwarz>
annevk: hey thanks. been too busy to think about it :)

[01:16:00.0000] <hsivonen>
annevk: well, it might not help with commenting on CPs but it might help assessing it the CP is making sense

[01:16:01.0000] <erlehmann>
text browsers fail at html anyway. does any one even have a DOM?

[01:17:00.0000] <erlehmann>
also, if elinks is dead, then i don't know what project could be alive.

[01:18:00.0000] <hsivonen>
erlehmann: well, one might argue that IE6 and IE7 are of interest

[01:18:01.0000] <hsivonen>
erlehmann: but it's not clear what the CP author is arguing

[01:19:00.0000] <annevk>
I don't think you can reasonably argue IE6 and IE7 are still of interest given that a) there's IE8 and IE9 and b) standards are in it for the long haul

[01:19:01.0000] <karlcow>
hmm ISSUE-155-CP1 seems to ask for a default stylesheet.

[01:20:00.0000] <karlcow>
I wonder if the answer is not a modification of http://www.w3.org/TR/CSS21/sample.html

[01:20:01.0000] <annevk>
there are default rendering rules

[01:20:02.0000] <karlcow>
instead of html5 spec

[01:20:03.0000] <hsivonen>
annevk: the long haul argument implicitly OKs using invalid markup for the short haul

[01:21:00.0000] <annevk>
karlcow, CSS was never the right place to define a rendering rules for HTML

[01:22:00.0000] <karlcow>
well, I do not have strong opinions on the place where to define it, but more where it is easier to define. And maybe also who is implementing the default rendering rules, the HTML engineers or the CSS ones.

[01:24:00.0000] <annevk>
there's no real clear divide in my experience

[01:24:01.0000] <annevk>
in any event, you know HTML defines rendering rules that obsolete that CSS chapter right?

[01:33:00.0000] <hsivonen>
annevk, jgraham: in case you are wondering about the html5lib changeset attributed to Mats Palmgren, I pushed tests on behalf of another Mozilla developer

[01:34:00.0000] <annevk>
cool that he's still around

[01:36:00.0000] <karlcow>
annevk: I didn't know, but as I said, I don't mind about the place. see above. :)

[01:38:00.0000] <zcorpan>
yay ragnarök labs build!

[01:40:00.0000] <zcorpan>
lol "JavaScripters will sport cheerful grins and bouffant hair"

[01:47:00.0000] <zcorpan>
(ragnarök - http://labs.opera.com/news/2011/02/22/ )

[01:50:00.0000] <hsivonen>
Opera has cooler code names than the rest of us. :-(

[01:51:00.0000] <zcorpan>
heh

[01:52:00.0000] <Ms2ger>
Hey, we've got parks!

[01:52:01.0000] <Rik`>
and monkeys

[01:57:00.0000] <karlcow>
http://en.wikipedia.org/wiki/Ragnarök

[02:00:00.0000] <hsivonen>
Rik`: indeed. JägerMonkey is cool, too.

[02:01:00.0000] <Philip`>
Clearly it's the umlauts that do it

[02:02:00.0000] <zewt>
is the goal to have names that people can't type? heh

[02:02:01.0000] <zewt>
charmap-era

[02:03:00.0000] <hsivonen>
Philip`: that must be why it's not Ragnarøk

[02:03:01.0000] <zcorpan>
hsivonen: i dunno, the wiki page seems to say the proper spelling is "Ragnarök", not "Ragnarøk"

[02:04:00.0000] <karlcow>
zewt: なんで？

[02:04:01.0000] <zewt>
なんでも

[02:04:02.0000] <Rik`>
hsivonen: but the logo is awful

[02:05:00.0000] <hsivonen>
Rik`: do you mean the gorilla with antlers?

[02:05:01.0000] <hsivonen>
I thought the gorilla with antlers was fun

[02:07:00.0000] <Rik`>
I thought it was created for heavy metal fans or to scare children during halloween

[02:10:00.0000] <annevk>
writing text for dispatching events is more complicated than it should be :/

[02:12:00.0000] <zcorpan>
"The user agent must dispatch arbitrary events at will."

[02:12:01.0000] <zewt>
i'd sooner not use a self-aware browser

[02:13:00.0000] <hsivonen>
zcorpan: hmm. from Bokmål Wikipedia, it looks like Old Norse words don't use ø

[02:13:01.0000] <zcorpan>
that explains it

[02:13:02.0000] <hsivonen>
so not just an English Wikipedia thing

[02:35:00.0000] <annevk>
hmm

[02:35:01.0000] <annevk>
maybe we should call it "fire" like Hixie did

[02:36:00.0000] <annevk>
dispatch is the internal mechanism and author-facing term (dispatchEvent); "fire" is what specs use to refer to each other

[02:36:01.0000] <annevk>
thoughts?

[02:37:00.0000] <benschwarz>
zcorpan thanks for all your tickets on the developer spec!

[02:37:01.0000] <zcorpan>
benschwarz: np

[02:37:02.0000] <annevk>
concept-event-fire / concept-event-fire-progress / ...

[02:37:03.0000] <zcorpan>
annevk: sounds like "run" and "execute" in html5 recently

[02:37:04.0000] <annevk>
prolly concept-event-fire-mutation at some point

[02:37:05.0000] <annevk>
zcorpan, what happened to that?

[02:37:06.0000] <benschwarz>
zcorpan the response has been really good

[02:38:00.0000] <zcorpan>
annevk: it was too confusing and one of them was changed to "prepare a script"

[02:38:01.0000] <annevk>
ah

[02:39:00.0000] <annevk>
so if you had "prepare event" would that also dispatch it in the end?

[02:39:01.0000] <annevk>
doesn't sound quite right though

[02:39:02.0000] <zcorpan>
i don't know what you're trying to do, but i'd recommend against making "fire" and "dispatch" mean different things :)

[02:40:00.0000] <annevk>
the actual dispatching of an event is going through its event targets etc.

[02:40:01.0000] <annevk>
but you also have creating an initializing the event before that followed by dispatching

[02:40:02.0000] <annevk>
HTML calls that "fire an event named e"

[02:41:00.0000] <hsivonen>
jgraham: I filed DSK-329294

[02:41:01.0000] <annevk>
my current commit named it "dispatch an event named e"

[02:42:00.0000] <annevk>
and I don't want to call it "initialize and dispatch an event named e" because this is supposed to be a short phrase

[02:46:00.0000] <hsivonen>
btw, on Linux 64, clipboard import from other processes is broken in the Rangnarök build, which makes testing rather annoying

[02:47:00.0000] <zewt>
annevk: if nothing else, i've found it annoying that specs are inconsistent in "dispatch" vs. "fire" events (hard to search for)

[02:48:00.0000] <annevk>
right, DOM Core ought to fix that

[02:48:01.0000] <annevk>
the question is how :)

[02:51:00.0000] <annevk>
DOM Events seems to use them both

[02:52:00.0000] <zewt>
i mean, IDB uses "fire", FileAPI uses "dispatch", and I remember seeing some using both

[02:53:00.0000] <annevk>
http://www.w3.org/TR/DOM-Level-3-Events/ uses both

[02:53:01.0000] <zewt>
(as for which I don't think it matters; intuitively I prefer dispatch but probably not for any reason that matters)

[02:54:00.0000] <annevk>
the proper name would be initialize and dispatch

[02:55:00.0000] <annevk>
I could just explain that "fire" is short for that

[02:55:01.0000] <zewt>
probably the only significant reason is that "dispatch an event" lines up with the function dispatchEvent

[02:55:02.0000] <annevk>
well, dispatchEvent takes an event object that's ready

[02:56:00.0000] <zewt>
yeah, "dispatch an event" in specs implies "create and initialize" at the same time

[02:57:00.0000] <zewt>
specs never do things like "initialize an event X with attributes Y, then queue a task to dispatch it", right? (pretty sure I havn't seen that)

[02:57:01.0000] <annevk>
no, it's queue a task to fire x

[02:58:00.0000] <annevk>
I think I'll go with "fire" and keep "dispatch" for the actual dispatching

[02:58:01.0000] <annevk>
i.e. dispatchEvent still maps straight to dispatch

[03:04:00.0000] <annevk>
maybe it should be something like this

[03:05:00.0000] <annevk>
to "fire an event named e" means that an event of type Event (unless stated otherwise), with its name set to e, and its trusted flag set, is to be dispatched at the indicated object

[03:05:01.0000] <hsivonen>
kudos to Opera for being the first browser with an HTML5 parser to implement <keygen> without incompliant cruft in the DOM

[03:05:02.0000] <annevk>
then other specs could define something like

[03:06:00.0000] <hsivonen>
oh. Chrome 10 already had it right, it seems

[03:06:01.0000] <annevk>
"fire a progress event named e" means to "fire an event named e" with an event of type ProgressEvent with these additional bits set: concept-ProgressEvent-value set to ...

[03:07:00.0000] <annevk>
I think I'm gonna try that

[03:08:00.0000] <zewt>
oh, it was WebSockets using both "fire" and "dispatch"

[03:08:01.0000] <hsivonen>
why does Opera offer so many key lengths in keygen?

[03:08:02.0000] <hsivonen>
Chrome offers only 2

[03:09:00.0000] <zewt>
"fire a simple event" is also common ... that just seems like an unneeded variation

[03:13:00.0000] <annevk>
not sure why Hixie added simple

[03:13:01.0000] <annevk>
events are complex

[03:13:02.0000] <annevk>
:)

[03:13:03.0000] <zewt>
i'm not familiar enough with IDB, but this has been bugging me--anyone know why it says the success and error events are fired at the Window object, rather than the IDBRequest?

[03:14:00.0000] <zewt>
"fire a slightly less complex event at ..."

[03:14:01.0000] <annevk>
no, but I suggest just asking on public-webapps

[03:14:02.0000] <zewt>
i did, a while back, didn't get a reply

[03:14:03.0000] <zewt>
unless i missed it

[03:15:00.0000] <hsivonen>
http://mxr.mozilla.org/classic/source/lib/libparse/pa_hash.rmap has some interesting tag names in it

[03:15:01.0000] <annevk>
zewt, oh, you're required to get a reply more or less before they can proceed to Last Call

[03:16:00.0000] <annevk>
zewt, not sure how serious the Process is being taken though

[03:16:01.0000] <annevk>
https://bitbucket.org/ms2ger/dom-core/changeset/b6b2e473dc43 has my new definition btw

[03:16:02.0000] <zewt>
it was probably missed since it was part of another IDB-related thread; I'll just ping it

[03:16:03.0000] <annevk>
now gonna update progress events to use it

[03:17:00.0000] <zewt>
going to nudge other in-progress specs to use that phrasing?

[03:19:00.0000] <zewt>
the "load" event on things like <script> make me sad--it would be really neat if all resource-fetching elements could consistently implement onload with the same event name, then you could capture "load" on window and easily receive notifications of resource fetches for all elements

[03:19:01.0000] <annevk>
http://dev.w3.org/2006/webapi/progress/ and then XHR at some point

[03:20:00.0000] <annevk>
Hixie filed a bug to use DOM Core terminology in HTML

[03:22:00.0000] <annevk>
I think at that point enough dominoes have fallen to declare victory

[03:22:01.0000] <annevk>
(aside: why is dominos not its plural?)

[03:22:02.0000] <zewt>
maybe you should start work on DOM English

[03:23:00.0000] <zewt>
(and you think defining events is a pain)

[03:28:00.0000] <zewt>
is the difference async vs. sync events equivalent to the difference between "fire an event" and "queue a task to fire an event"?

[03:41:00.0000] <annevk>
zewt, yes

[03:42:00.0000] <annevk>
(though the other way around)

[03:43:00.0000] <zewt>
is it? doesn't read that way

[03:43:01.0000] <zewt>
Events which are asynchronous may be dispatched as the results of the action are completed, with no relation to other events, to other changes in the DOM, nor to user interaction.

[03:44:00.0000] <zewt>
er

[03:44:01.0000] <zewt>
no er

[03:44:02.0000] <annevk>
"queue a task" is for async

[03:45:00.0000] <annevk>
see HTML

[03:45:01.0000] <zewt>
i'm reading DOM L3 Events

[03:45:02.0000] <annevk>
if you just "fire" without queuing it happens immediately

[03:45:03.0000] <zewt>
right, that's what the above seems to say for async

[03:45:04.0000] <annevk>
o_O

[03:46:00.0000] <zewt>
and

[03:46:01.0000] <zewt>
Events which are synchronous must be treated as if they are in a virtual queue in a first-in-first-out model

[03:46:02.0000] <zewt>
eg. queue a task

[03:46:03.0000] <annevk>
I would not trust DOM L3 Events on this

[03:46:04.0000] <annevk>
it's an attempted copy of HTML or some such

[03:47:00.0000] <annevk>
be back later

[03:47:01.0000] <Ms2ger>
annevk, "fire an event" seems to be in a weird place

[03:47:02.0000] <annevk>
Ms2ger, yeah, gonna move it to a firing an event section

[03:47:03.0000] <annevk>
now i made "fire" a kind of concept

[03:47:04.0000] <Ms2ger>
k

[04:21:00.0000] <jgraham>
hsivonen: Thanks

[04:22:00.0000] <jgraham>
Any idea what, if anything, is needed license wise to add the html5lib tests to the HTMLWG testsuite?

[04:22:01.0000] <jgraham>
/me is not here really

[04:22:02.0000] <jgraham>
(but will read answers later)

[04:27:00.0000] <Ms2ger>
I think the W3C wants BSD + one of their own licenses

[04:27:01.0000] <Ms2ger>
I suggest letting them figure it out :)

[04:29:00.0000] <jgraham>
As in, submit the tests and note that the test data is MIT licensed

[04:29:01.0000] <jgraham>
That could work

[04:31:00.0000] <hsivonen>
Personally, I think the W3C should tweak their policy to allow MIT-licensed upstream tests

[04:32:00.0000] <hsivonen>
it would the the height of silliness to have to bother a number of people about relicensing MIT stuff as BSD

[04:34:00.0000] <hsivonen>
if the W3C wants to reject the most serious HTML parsing test suite because it's MIT-licensed, I think that's the W3C's loss

[04:43:00.0000] <karlcow>
http://www.w3.org/2004/10/27-testcases.html

[04:44:00.0000] <karlcow>
http://www.w3.org/Consortium/Legal/2008/04-testsuite-copyright

[05:37:00.0000] <boblet>
anyone know what Mike’s official role re: HTML5 is? W3C liaison?

[05:38:00.0000] <karlcow>
boblet: mike smith?

[05:38:01.0000] <boblet>
karlcow: the same. sorry, should have written Mike™

[05:38:02.0000] <karlcow>
he is the W3C staff contact for HTML WG.

[05:39:00.0000] <boblet>
karlcow: much obliged. will go back to writing about him behind his back :)

[05:39:01.0000] <karlcow>
http://people.w3.org/~mike/

[05:40:00.0000] <karlcow>
http://www.w3.org/2007/03/HTML-WG-charter.html

[05:41:00.0000] <karlcow>
boblet: the official name in W3C terminology is Team Contact.

[05:41:01.0000] <boblet>
aah, that was the page I couldn’t find. his people page is all fluffy cat photos

[05:41:02.0000] <boblet>
(must be something to do with HTML5 huh)

[05:42:00.0000] <karlcow>
heh

[05:43:00.0000] <davidjrice>
hsivonen: hey, having trouble building validator.nu HEAD on ubuntu?

[05:43:01.0000] <hsivonen>
davidjrice: did you run the build twice?

[05:44:00.0000] <davidjrice>
hsivonen: about 20/30 times maybe :)

[05:44:01.0000] <hsivonen>
davidjrice: how does it fail?

[05:45:00.0000] <davidjrice>
https://gist.github.com/840446

[05:46:00.0000] <hsivonen>
davidjrice: I haven't seen that one before

[05:47:00.0000] <davidjrice>
cool. java -version 1.6.0_06

[05:47:01.0000] <davidjrice>
ubuntu hardy

[05:49:00.0000] <hsivonen>
davidjrice: if you look inside ./jars/validator.jar, is nu/validator/servlet/Main.class there?

[05:52:00.0000] <davidjrice>
hsivonen: look inside a jar?

[05:53:00.0000] <hsivonen>
jar tvf ./jars/validator.jar

[05:53:01.0000] <davidjrice>
ah okay, I was doing > https://gist.github.com/840456

[05:54:00.0000] <davidjrice>
hsivonen: it ain't in there

[05:56:00.0000] <hsivonen>
davidjrice: ok. then earlier in the build, you should see a compiler error when building the validator module

[06:00:00.0000] <zcorpan>
heh, microsoft bring the doctype voodoo of substring matching to canPlayType http://people.opera.com/philipj/2011/02/23/ie9-canplaytype/

[06:01:00.0000] <hsivonen>
zcorpan: why isn't the response non-empty for any of the video/mp4 examples from the spec?

[06:02:00.0000] <zcorpan>
hsivonen: the page outputs your browser's results, not ie9's results

[06:02:01.0000] <zcorpan>
gotta go

[06:03:00.0000] <hsivonen>
oh

[06:04:00.0000] <davidjrice>
hsivonen: okay, I'm going to run the build command on it's own

[06:04:01.0000] <davidjrice>
hsivonen: have to pop out for a meeting now :( thanks for the help so far

[06:05:00.0000] <hsivonen>
davidjrice: you're welcome

[06:08:00.0000] <davidjrice>
hsivonen: https://gist.github.com/840465

[06:21:00.0000] <foolip>
hsivonen, I'll note on the page that the results are live

[06:23:00.0000] <hsivonen>
foolip: thanks. It wasn't obvious and I was too silly not to view source

[06:55:00.0000] <hsivonen>
Is there some logic to counting every non-security Chrome release as major but not counting every non-security Opera release as major at http://people.gnome.org/~jdub/2011/modern-browsers-ship/ ?

[07:00:00.0000] <Philip`>
Don't you think version number gradients are a good indicator of browser quality?

[07:00:01.0000] <Philip`>
They're a nice objective measurement, and much easier than judging based on something that matters

[07:12:00.0000] <miketaylr>
i think whomever made that graphic is just confused about opera's versioning

[07:13:00.0000] <miketaylr>
https://twitter.com/jdub/status/38748271698657280

[07:14:00.0000] <nimbupani>
you know we need to make a graphic that shows history of Opera versions and the year and all that

[07:14:01.0000] <nimbupani>
it would be nice

[07:14:02.0000] <nimbupani>
no browser has made it

[07:15:00.0000] <nimbupani>
omg that dood tweets too much

[07:15:01.0000] <hsivonen>
miketaylr: maybe it's Wikipedia's fault for not making releases looks significant

[07:15:02.0000] <miketaylr>
possibly :)

[07:16:00.0000] <nimbupani>
this chart sucks FYI

[07:16:01.0000] <nimbupani>
:))

[07:16:02.0000] <hsivonen>
anyway, I'd have considered Opera 10.50 and 10.60 at least as significant as a run-of-the-mill Chrome cycle

[07:17:00.0000] <gsnedders>
Definitely 10.50 onwards I'd count every non-bug-fix release as significant as the Chrome cycle

[07:17:01.0000] <hsivonen>
(of course, the point of the graphic isn't to visualize Opera vs. Chrome but to visualize Firefox vs. Chrome)

[07:17:02.0000] <gsnedders>
Before that it was more random…

[07:18:00.0000] <nimbupani>
i think fyrd has a nice entry in wikipedia

[07:18:01.0000] <gsnedders>
(Of course, what we should do it make a graph of every major Presto release, Presto 1, Presto 2, and well, that's it. :P)

[07:19:00.0000] <miketaylr>
modern layout engines ship, gsnedders

[07:20:00.0000] <gsnedders>
miketaylr: Yeah, my point is more that releases are often far beyond major.minor.bugfix

[07:20:01.0000] <gsnedders>
Heck, Presto doesn't even follow that

[07:20:02.0000] <hsivonen>
it looks like the author of the chart just looked at http://en.wikipedia.org/wiki/History_of_the_Opera_web_browser

[07:21:00.0000] <miketaylr>
gsnedders: understood, i was sort of making a joke... :/

[07:23:00.0000] <nimbupani>
http://upload.wikimedia.org/wikipedia/commons/7/74/Timeline_of_web_browsers.svg is what i like

[07:23:01.0000] <nimbupani>
much more simple

[07:23:02.0000] <wilhelm>
We should use our core integration numbers. That's a release every single day! Presto 108. Yay.

[07:24:00.0000] <gsnedders>
wilhelm: Well, it is only the final digit of the Presto release number that actually has any meaning any more.

[07:24:01.0000] <gsnedders>
s/digit/segment/

[07:24:02.0000] <hsivonen>
nimbupani: that chart seems to have a much better concept of a major release

[07:24:03.0000] <wilhelm>
Indeed.

[07:24:04.0000] <nimbupani>
yeah its by fyrd who maintains caniuse.com

[07:25:00.0000] <gsnedders>
wilhelm: So yeah, dropping everything before that makes sense :P

[07:26:00.0000] <Philip`>
You should call it Presto 3 when you rewrite the whole layout engine from scratch in Javascript

[07:27:00.0000] <nimbupani>
or jPresto

[07:28:00.0000] <Philip`>
PreJSto?

[07:28:01.0000] <Philip`>
Hmm, hard to pronounce nicely

[07:28:02.0000] <karlcow>
thinking of 2d charts for each browser, but more difficult to do. one line by feature and when it was released on the timeline. Version numbers are decorations.

[07:29:00.0000] <nimbupani>
http://www.bifter.co.uk/

[07:29:01.0000] <miketaylr>
prejsto is probably more pronouncable in norwegian

[07:37:00.0000] <boblet>
can anyone tell me what the criteria are for generating a new Working Draft of HTML5?

[07:39:00.0000] <Ms2ger>
Pain.

[07:40:00.0000] <boblet>
Ms2ger: well that’s par for the course, surely

[07:43:00.0000] <boblet>
where’s Mike when you need him — he should be back from the sento by now

[07:47:00.0000] <karlcow>
hmm in between sento/onsen and irc, I think I will take the sento/onsen

[07:48:00.0000] <boblet>
heh

[07:51:00.0000] <annevk>
thanks Ms2ger

[07:51:01.0000] <annevk>
I went out for lunch and then got lost

[07:51:02.0000] <annevk>
sort of

[07:51:03.0000] <boblet>
zOMG http://www.html-5.com/tutorial/page-structure.html recommends polyglot doboilerplate :O

[07:53:00.0000] <hsivonen>
boblet: the visual design of that page has street cred

[07:54:00.0000] <boblet>
hsivonen: I liked the about page myself

[07:54:01.0000] <boblet>
somebody loves their XSLT

[07:58:00.0000] <annevk>
Ms2ger, maybe just "Strings"

[07:58:01.0000] <annevk>
Ms2ger, just like we have "Trees"

[07:59:00.0000] <annevk>
/me loves to paint bikesheds

[08:00:00.0000] <gsnedders>
/me prefers nuclear power plants

[08:27:00.0000] <zcorpan>
TabAtkins: will the new values be added back? <http://www.w3.org/mid/E1PmwFQ-00038C-SK⊙lwo>

[08:28:00.0000] <TabAtkins>
zcorpan: Yeah, I've got the edit to put them back in my queue.  Or maybe I already submitted it, but didn't regenerate the visible spec?  Lemme check.

[08:29:00.0000] <TabAtkins>
Nope, not committed yet, per <http://www.xanthir.com/feed/public-css-commits/?format=html&spec=css3-images>.

[08:29:01.0000] <TabAtkins>
I'll do that real quick.

[08:29:02.0000] <zcorpan>
ok

[08:31:00.0000] <TabAtkins>
Oh, right, I was waiting for some feedback from fantasai for some wording in the opening paragraphs for that property.  Shrug, I'll handle that later.  Committing change now.

[08:33:00.0000] <TabAtkins>
Done.

[08:43:00.0000] <chriseppstein>
I remember hearing a rumor that the css validator was being updated to handle vendor prefixes. is this true?

[08:43:01.0000] <MikeSmith>
you know, assertions of unanimity of opinion/outrage about a particular issue within a particular community are often complete bullshit

[08:43:02.0000] <MikeSmith>
just sayin'

[08:43:03.0000] <Ms2ger>
Not afaik

[08:43:04.0000] <TabAtkins>
I heard this from Jens.

[08:45:00.0000] <MikeSmith>
people who disagree with the moral majority are unfortunately too unwilling to actually speak out and say that they don't really care about whatever hobbyhorse issue somebody is claiming to lobby for on behalf of some particular "community"

[08:46:00.0000] <Ms2ger>
I am willing to speak out and say that I don't care how code points are formatted

[08:46:01.0000] <MikeSmith>
or even that they actually completely disagree

[08:46:02.0000] <MikeSmith>
or don't care either way

[08:47:00.0000] <MikeSmith>
"the sky is falling" rhetoric, in general, is just really stupis

[08:47:01.0000] <MikeSmith>
*stupid

[08:47:02.0000] <TabAtkins>
What's the issue of the day?

[08:47:03.0000] <MikeSmith>
I wonder when they are going to understand that expressions of outrage, no matter how heartfelt, do not make for convincing arguments

[08:48:00.0000] <MikeSmith>
TabAtkins: no comment

[08:48:01.0000] <TabAtkins>
Darn.

[08:49:00.0000] <MikeSmith>
"I am outraged about this, and I will do everything I can to make others outraged about it. Therefore, do what I say."

[08:49:01.0000] <MikeSmith>
…or else

[08:51:00.0000] <Philip`>
Yeah, like there's all these people protesting about something or other in the Middle East, while the majority of people who don't care and just want to get on with their lives are being ignored

[08:52:00.0000] <MikeSmith>
you can pretty much guarantee that when somebody tells you, "Community X is going to be outraged if you do this.", what they really mean is, "I will actively attempt to whip Community X into a frenzy if you don't do what I am demanding."

[08:53:00.0000] <MikeSmith>
anyway, I guess I should shut up now

[08:57:00.0000] <MikeSmith>
Philip`: I take it that you don't subscribe to the view that the grass-roots "pro-democracy" events in north africa are necessarily going to results in a rosier future for the people there?

[08:58:00.0000] <TabAtkins>
I think Philip` subscribes to the view that the grass is always deviler on the advocate's side.

[08:58:01.0000] <MikeSmith>
again, I guess I should shut up

[08:59:00.0000] <MikeSmith>
heh

[09:00:00.0000] <MikeSmith>
beautiful

[09:00:01.0000] <MikeSmith>
TabAtkins: you should write for Poetry Magazine

[09:00:02.0000] <TabAtkins>
Heh.

[09:00:03.0000] <TabAtkins>
Unrelated: beautiful! http://blog.creativespark.co.uk/2011/02/nice-to-meet-you/

[09:04:00.0000] <beowulf>
mmm, deviled grass

[09:07:00.0000] <karlcow>
it's because of deviled grass that cows got horns from belzebuth

[09:09:00.0000] <karlcow>
TabAtkins: this meeting room is… hmmm… disturbing

[09:09:01.0000] <TabAtkins>
karlcow: Hm?

[09:10:00.0000] <karlcow>
I would prefer something more natural than cartoonish :)

[09:10:01.0000] <karlcow>
not a big fan of this design

[09:10:02.0000] <TabAtkins>
Heh, kk.  I really like the aesthetic.

[09:10:03.0000] <MikeSmith>
I like cartoons

[09:11:00.0000] <MikeSmith>
except, the cartoon characters should be depicted having sex with each other

[09:11:01.0000] <TabAtkins>
In this case, the characters are a bear, two squirrels, a fox, and a small child.

[09:12:00.0000] <karlcow>
MikeSmith: now you are talking :p

[09:12:01.0000] <karlcow>
We are approaching the NYTimes quote

[09:12:02.0000] <MikeSmith>
I like the use of the word "nice" at least

[09:13:00.0000] <MikeSmith>
 because the real lesson here is, if you are royal dick, please don't get involved in standards work

[09:13:01.0000] <MikeSmith>
please instead find another hobby

[09:14:00.0000] <karlcow>
TabAtkins: this is the space I would prefer http://coolboom.net/architecture/selgascano-architecture-office/

[09:14:01.0000] <karlcow>
MikeSmith: william will join the HTMLWG?

[09:15:00.0000] <karlcow>
after the wedding?

[09:15:01.0000] <MikeSmith>
eh?

[09:15:02.0000] <karlcow>
http://www.theroyalweddingwilliamkate.com/

[09:16:00.0000] <MikeSmith>
ah

[09:16:01.0000] <MikeSmith>
dude

[09:16:02.0000] <MikeSmith>
please

[09:16:03.0000] <karlcow>
;)

[09:16:04.0000] <karlcow>
I knew you would love it

[09:17:00.0000] <MikeSmith>
the world would be a much better place if the "royal families" of the world were summarily destroyed in one fell sweep

[09:17:01.0000] <MikeSmith>
along with the Paris Hiltons and Silvio Berlusconis of the world

[09:18:00.0000] <MikeSmith>
btw, congratulations Italy on electing the equivalent of Paris Hilton to be your leader for all these years

[09:18:01.0000] <MikeSmith>
it gives the rest of the world so much confidence in you as a nation

[09:23:00.0000] <karlcow>
I think the world would be a better place without… hmmm too long list

[09:37:00.0000] <TabAtkins_>
Awesome, I was able to get a sxsw hotel.  I'm all set now.  Woo!

[09:39:00.0000] <karlcow>
http://n.survol.fr/n/how-media-queries-slow-the-mobile-web

[10:07:00.0000] <annevk>
gears of war 3 sep 20?!

[10:08:00.0000] <annevk>
that's like the only game I'm interested in playing this year (well, and maybe a new zelda if nintendo gets around to releasing something decent)

[10:19:00.0000] <TabAtkins>
Hm.  I can construct an SVG with only an aspect ratio (no width or height) by using viewBox, right?

[10:33:00.0000] <TabAtkins>
The answer is "yes".

[10:34:00.0000] <TabAtkins>
Also, I'm still in love with Chrome's Instant feature for hacking out a data url, so I can watch it be constructed as I type.

[10:35:00.0000] <Philip`>
Like the Live DOM Viewer but with a tiny input box?

[10:35:01.0000] <TabAtkins>
Yes.

[10:36:00.0000] <Philip`>
I wonder if it's bad that pushing to dvcs.w3.org says

[10:36:01.0000] <Philip`>
remote: rm: cannot remove `/u/test.w3.org/html': Permission denied

[10:38:00.0000] <TabAtkins>
I don't understand how people are talking about this like it's a bad thing: http://www.instructables.com/id/How-to-Make-a-Cadbury-Egg-Salad-Sandwich/

[10:39:00.0000] <AryehGregor>
Wikipedia has finally switched to an HTML5 doctype.

[10:40:00.0000] <AryehGregor>
Yay.

[10:41:00.0000] <nimbupani>
 woot

[10:41:01.0000] <AryehGregor>
Not valid, of course.  Oh well.

[11:03:00.0000] <TabAtkins>
Do iframes delay the rest of the page?  I dont' think they actually stop the rest of the page from rendering, but do they delay the load event?

[11:49:00.0000] <bfrohs>
Interesting piece of information: YouTube and Twitter are unusable without JavaScript

[11:59:00.0000] <jgraham>
TabAtkins: Yes

[12:31:00.0000] <TabAtkins>
Computed Languages as high-school essays: http://i.imgur.com/ZyeCO.jpg

[12:31:01.0000] <TabAtkins>
s/Computed/Computer/

[14:05:00.0000] <AryehGregor>
No Javascript on this page

[14:05:01.0000] <AryehGregor>
If <script> tags have a "type" attribute it should equal "text/javascript" or "application/javascript"

[14:05:02.0000] <AryehGregor>
From Firebug, on: http://aryeh.name/spec/editcommands/implementation.html

[14:05:03.0000] <AryehGregor>
. . .

[14:38:00.0000] <dglazkov>
Hixie: https://bugs.webkit.org/show_bug.cgi?id=54820#c6

[14:51:00.0000] <zewt>
cursed script execution thread split into four separate threads in gmail

[15:27:00.0000] <TabAtkins>
Yet another reason top-posting is horrible: it doesn't encourage you to trim the message you're replying to.  I'm looking at a message right now which has a segment nested under *34* > symbols.

[15:28:00.0000] <AryehGregor>
Yeah, that's the most annoying thing about it.

[15:28:01.0000] <zewt>
it's bugged me for a long time that gmail basically endorses top-posting

[15:28:02.0000] <zewt>
by setting mails up for it automatically

[15:28:03.0000] <TabAtkins>
Yeah, I know.

[15:28:04.0000] <TabAtkins>
It would be much better if it didn't insert the two blank lines at top, and focused the textarea at the bottom.

[15:28:05.0000] <zewt>
i mean, there are cases for it (eg. my last mail to webapps), but that's maybe 5% of the time

[15:28:06.0000] <AryehGregor>
I top-post in private e-mails, generally, because if you have a decent mail client (i.e. Gmail), the previous messages will be right there anyway, and it's unlikely to be ambiguous what you're replying to.

[15:29:00.0000] <TabAtkins>
I usually don't even do that.  I'll just reformat other people's messages to me to be bottom-posted.

[15:29:01.0000] <AryehGregor>
But it doesn't work so well for mailing lists, where posts are often longer and there are often multiple threads of discussion within a topic.

[15:29:02.0000] <zewt>
i think the only convincing argument for top-posting (and making clients good at handling it) is that average users don't really "get" inline-replies

[15:30:00.0000] <zewt>
know what's worse than top posting? "my replies are in red"

[15:30:01.0000] <AryehGregor>
That's truly awful.

[15:30:02.0000] <zewt>
i really, really, really want a way to tell gmail to ignore all fonts in emails

[15:30:03.0000] <AryehGregor>
Although I can't help but be amused at the irony of me getting annoyed at people sending HTML-formatted e-mail to an HTML specification list.

[15:30:04.0000] <AryehGregor>
zewt, site CSS?

[15:31:00.0000] <AryehGregor>
Hmm, Gmail is probably inscrutable div soup.

[15:31:01.0000] <zewt>
yeah, gmail's css/classes/ids are all dynamically "compressed" so it's very hard to do anything useful with eg. stylish

[15:31:02.0000] <zewt>
even if i got it to work, it'd probably just break the next time anything changed

[15:32:00.0000] <zewt>
such lovely class names as cnYuxb xY zA yO F cf zt


2011-02-24
[16:24:00.0000] <TabAtkins>
/me just discovered that we finally put a name to "logical width" and "logical height" - measure and length, respectively.

[16:25:00.0000] <TabAtkins>
This makes talking about layout modes much easier, yay!

[16:25:01.0000] <TabAtkins>
(I define "easier" as letting me say things like "if the flexbox's layout axis and measure axis are the same...")

[16:35:00.0000] <AryehGregor>
MS is repeating their lies again about how they take action on all the feedback they receive and other browsers don't.

[16:37:00.0000] <AryehGregor>
Heh, the most prolific bug filer only filed 200 bugs?

[16:37:01.0000] <AryehGregor>
I could find 200 spec bugs to file if I spent a few days at it.

[16:37:02.0000] <AryehGregor>
They'd all get closed "will not fix for version 9", though, so I won't bother.

[16:37:03.0000] <zewt>
hey, closing bugs as "won't fix" is taking action

[16:38:00.0000] <gsnedders>
I've only filed just under 300 bugs over the past almost-two-years at Opera

[16:38:01.0000] <AryehGregor>
Yes, but the thing is, Mozilla and WebKit don't do that because they're willing to take patches.

[16:39:00.0000] <AryehGregor>
So it's never "won't fix" unless they'd refuse to accept patches.

[16:39:01.0000] <zewt>
well, it's also frustrating when projects encourage bug reports but almost never do anything with them

[16:39:02.0000] <gsnedders>
AryehGregor: Plenty of closed-source software doesn't won't fix stuff like that, just has stuff for an indefinite milestone

[16:39:03.0000] <zewt>
gsnedders: happens on all software, open- and closed-source alike

[16:39:04.0000] <Philip`>
AryehGregor: You could write a script to report a bug for every one of your reflection test failures

[16:40:00.0000] <zewt>
IMO, saying "won't fix" is better than leaving bugs open forever with no honest intention of doing anything with them

[16:40:01.0000] <AryehGregor>
Philip`, excellent idea.

[16:40:02.0000] <AryehGregor>
I reported two bugs, and they said "we've confirmed the issue and are looking into it" and then said nothing further for months.

[16:40:03.0000] <Philip`>
Maybe "won't fix" should be a priority level, not a resolution status

[16:40:04.0000] <gsnedders>
Philip`: And then we can resolve almost all of them as duplicates? :P

[16:40:05.0000] <zewt>
well, there's "won't fix any time soon" and "won't fix because we don't consider it a bug"--different types of wontfix

[16:41:00.0000] <TabAtkins>
Hmm.  I wonder if it makes more sense to have flexboxes define their layout axis to be their measure axis.

[16:41:01.0000] <AryehGregor>
zewt, not if you get a lot of volunteer contributions.  Then there's no one with the ability to reliably predict what bugs will be fixed.

[16:41:02.0000] <AryehGregor>
No one at Mozilla can say "nobody here is going to decide to fix this bug".

[16:41:03.0000] <AryehGregor>
It's not like a typical proprietary setup where you've got some kind of manager who can say "Okay, we're not going to assign the resources to fix it this cycle."

[16:42:00.0000] <zewt>
well, the result with projects like mozilla is there are so many bugs--since it's a huge project with millions of users to report them, disproportionate to the amount of resources--that reporting bugs ends up feeling like a waste of tiem

[16:42:01.0000] <zewt>
also time

[16:42:02.0000] <AryehGregor>
I don't feel like reporting bugs at Mozilla is a waste of time.  I reported 17, and 10 are resolved.

[16:43:00.0000] <AryehGregor>
Some of them were INVALID or WORKSFORME or DUPLICATE, but that's a legitimate resolution.

[16:43:01.0000] <AryehGregor>
Three were FIXED, of which two were fixed because I supplied patches.

[16:43:02.0000] <zewt>
my experience is more of tickets being left untouched for years, heh

[16:44:00.0000] <zewt>
which I wasn't surprised at, since the number of tickets is so overwhelming, but just the same

[16:44:01.0000] <AryehGregor>
I've reported 15 bugs against WebKit, of which nine are UNCONFIRMED, one is ASSIGNED (for months now), four are FIXED, one is INVALID.

[16:44:02.0000] <AryehGregor>
My Mozilla bugs are generally not untouched, they generally get a comment or a CC added or something and then no one fixes them.

[16:44:03.0000] <AryehGregor>
At least someone looks at them.

[16:45:00.0000] <AryehGregor>
(But maybe the average bug-filer doesn't have such a nice experience, I dunno.)

[16:45:01.0000] <TabAtkins>
AryehGregor: I can look at your UNCONFIRMED bugs and at least set them to NEW.

[16:45:02.0000] <AryehGregor>
(I actually pick approximately the right component and so on, which I've been told helps.)

[16:45:03.0000] <AryehGregor>
TabAtkins, https://bugs.webkit.org/buglist.cgi?query_format=advanced&short_desc_type=allwordssubstr&short_desc=&long_desc_type=substring&long_desc=&bug_file_loc_type=allwordssubstr&bug_file_loc=&keywords_type=allwords&keywords=&emailreporter1=1&emailtype1=exact&email1=Simetrical%2Bwebkit%40gmail.com&emailassigned_to2=1&emailreporter2=1&emailcc2=1&emailtype2=substring&email2=&bugidtype=include&bug_id=&chfieldfrom=&chfieldto=Now&chfieldvalue=&c

[16:45:04.0000] <AryehGregor>
mdtype=doit&order=Reuse+same+sort+as+last+time&field0-0-0=noop&type0-0-0=noop&value0-0-0=

[16:45:05.0000] <AryehGregor>
Argh.

[16:45:06.0000] <AryehGregor>
I hate Bugzilla search URLs.

[16:46:00.0000] <TabAtkins>
https://bugs.webkit.org/buglist.cgi?query_format=advanced&short_desc_type=allwordssubstr&short_desc=&long_desc_type=substring&long_desc=&bug_file_loc_type=allwordssubstr&bug_file_loc=&keywords_type=allwords&keywords=&emailreporter1=1&emailtype1=exact&email1=Simetrical%2Bwebkit%40gmail.com&emailassigned_to2=1&emailreporter2=1&emailcc2=1&emailtype2=substring&email2=&bugidtype=include&bug_id=&chfieldfrom=&chfieldto=Now&chfieldvalue=&c

[16:46:01.0000] <TabAtkins>
Dammit, misclick.  Sorry.

[16:46:02.0000] <AryehGregor>
https://bugs.webkit.org/buglist.cgi?query_format=advanced&emailreporter1=1&emailtype1=exact&email1=Simetrical%2Bwebkit%40gmail.com

[16:46:03.0000] <AryehGregor>
That's the shortest version that works properly.

[16:47:00.0000] <zewt>
the fact that bugzilla blocks search engines from indexing it also makes me not inclined to report tickets--I have no idea why they do that, and I'm not jumping hoops through bugzilla's own clunky search

[16:47:01.0000] <TabAtkins>
zewt: It's an understandable reason, actually.

[16:47:02.0000] <AryehGregor>
/me has reported 74 bugs at bugzilla.wikimedia.org, it seems

[16:48:00.0000] <TabAtkins>
You don't want it to be easy to find security bugs, but you can't always know a bug is a security bug until after it's been reported.

[16:48:01.0000] <AryehGregor>
TabAtkins, that seems like an incredibly weak reason.

[16:48:02.0000] <TabAtkins>
You can't revoke searching of a page, so the only way to prevent indexing security bugs is to prevent indexing *all* bugs.

[16:48:03.0000] <TabAtkins>
Shrug, that's the reason.

[16:48:04.0000] <AryehGregor>
Something like half of my Wikimedia bugs are FIXED, but that's not really fair, since I have like a thousand MediaWiki commits.

[16:49:00.0000] <zewt>
... that doesn't make sense, since you can still search with bugzilla's own search (it's just annoying and cumbersome)

[16:49:01.0000] <AryehGregor>
TabAtkins, says who?

[16:49:02.0000] <AryehGregor>
zewt, no, because then it will be hidden from search results right away once someone spots it's a security bug.

[16:49:03.0000] <AryehGregor>
If it were in Google's cache, it would still be available for a while.

[16:49:04.0000] <TabAtkins>
AryehGregor: I forget who it was that told me, but it was at the recent CSS testing f2f.

[16:50:00.0000] <gsnedders>
Can anyone see if http://stuff.gsnedders.com/es/getterparsing.html passes in recent WebKit nightlies? (not Chrome)

[16:51:00.0000] <Philip`>
If someone wanted to discover security bugs, surely they could just poll ?id=(current max + 1) every ten seconds to find new bugs and then watch for ones that suddenly become invisible?

[16:51:01.0000] <zewt>
heh

[16:51:02.0000] <Philip`>
Seems a bit silly for them to use a search engine to access it

[16:52:00.0000] <AryehGregor>
Chromium's issue tracker seems to say I've reported 24,536 issues.  I suspect it's wrong, but I'm willing to take the credit: http://code.google.com/p/chromium/issues/list?can=1&q=reporter%3ASimetrical%2Cgmail.com

[16:53:00.0000] <zewt>
it's very unreasonable to expect people to search for existing tickets before reporting bugs, and then to make it hard to search tickets, heh

[16:53:01.0000] <AryehGregor>
Mozilla's bug tracker makes it pretty easy to search existing bugs when opening a new bug.

[16:54:00.0000] <TabAtkins>
Philip`: Indeed, that was explicitly mentioned as a trivial way to defeat the measure.  Shrug.

[16:54:01.0000] <AryehGregor>
I always make sure I do, even when the bug is something like "img/video/audio/source.setAttribute() on src trims whitespace".

[16:54:02.0000] <zewt>
as I recall, it spits a zillion generally entirely unrelated results at you--sorry, but if I can't google site:bugzilla.mozilla.org, searching is unreasonable

[16:54:03.0000] <AryehGregor>
Which reminds me, let me look into that.

[16:55:00.0000] <AryehGregor>
Quite a surprising bug.

[16:55:01.0000] <zewt>
anyhow, it's just one thing that demotivates me to report tickets--if I was interested in getting directly involved in Mozilla development (and fixing my tickets myself) I might be more inclined to jump hoops

[16:55:02.0000] <AryehGregor>
You'd think setAttribute() and getAttribute() wouldn't be element-specific at all, but apparently not.

[16:55:03.0000] <TabAtkins>
Argh, all this longdesc crap would be gone if we had a non-void image element that contained accessibility equivalent.

[16:55:04.0000] <gsnedders>
TabAtkins: object? :P

[16:56:00.0000] <TabAtkins>
That's a crap idea and you know it.

[16:56:01.0000] <AryehGregor>
data:text/html,<!doctype html><script>var img = document.createElement("img"); img.setAttribute("src", " "); alert(img.getAttribute("src").length);</script>

[16:56:02.0000] <gsnedders>
Does nobody have WebKit nightlies here? :(

[16:56:03.0000] <AryehGregor>
That alerts "0" in Firefox 4b11.

[16:56:04.0000] <TabAtkins>
<canvas src><p>stuff</p></canvas>, perhaps, with the src pointing to an image that is loaded as the default image in the canvas (rather than transparent black).

[16:57:00.0000] <AryehGregor>
gsnedders, do you only have a Linux computer handy, or what?

[16:57:01.0000] <gsnedders>
AryehGregor: Yeah

[16:57:02.0000] <AryehGregor>
Then I'll go to the effort of installing the latest nightly on my parents' Windows laptop.

[16:58:00.0000] <gsnedders>
AryehGregor: And WebKit/GTK has all kinds of dependencies on unreleased version of GNOME (as it almost always does, because as its developed part of the GNOME suite it feels free to depend upon all the latest and greatest stuff), so it's a massive pain

[16:58:01.0000] <zewt>
i should probably poke at WebKit more; the few times I've looked at WebKit and Mozilla internals, WebKit seems a whole lot less ... stressful to experiment with

[16:59:00.0000] <AryehGregor>
The Gecko code I've seen is fairly good.  Or maybe I just can't tell, because I don't know C++ worth squat.

[17:00:00.0000] <AryehGregor>
But adding maxlength support to textarea was about five lines of code changed, which speaks to the quality of the design of at least that tiny piece of it.

[17:00:01.0000] <gsnedders>
AryehGregor: Hmm, I guess I can try using the Qt port

[17:00:02.0000] <zewt>
not so much that it's bad code, just seems like a much heavier design

[17:00:03.0000] <AryehGregor>
(although it turns out the maxlength implementation mishandled line breaks, which was formerly irrelevant because inputs are one-line, and that had to be fixed in a separate patch)

[17:02:00.0000] <AryehGregor>
gsnedders, two PASS, then four "FAIL (did not throw)".

[17:02:01.0000] <AryehGregor>
This is r79501.

[17:02:02.0000] <AryehGregor>
Do you need anything else, or should I delete it?

[17:02:03.0000] <gsnedders>
AryehGregor: k, thx

[17:03:00.0000] <gsnedders>
AryehGregor: That's everything

[17:03:01.0000] <AryehGregor>
k.

[19:04:00.0000] <boblet>
anyone know what’ up with Lachan’s HTML 5 Reference? has it run out of steam, or just on ice for a while?

[00:34:00.0000] <annevk>
would be nice if we could kill the Name and QName checking from DOM methods...

[00:35:00.0000] <annevk>
lots of complexity there that we're really better without

[00:36:00.0000] <annevk>
and probably checking the exact character boundaries will show that some UAs implement 4th and others implement the 5th edition of "1.0" and we'll never get anywhere

[00:37:00.0000] <hsivonen>
annevk: do we know if anything on the Web depends on checking them except Acid3?

[00:38:00.0000] <zewt>
. o O ( thread fatigue )

[00:38:01.0000] <hsivonen>
annevk: maybe we should still throw if the first character is '<'?

[00:38:02.0000] <hsivonen>
zewt: the script loading thread?

[00:38:03.0000] <zewt>
none other :P

[00:38:04.0000] <annevk>
ooh, Acid3

[00:39:00.0000] <annevk>
win

[00:41:00.0000] <zewt>
have to consciously stop myself from responding point-by-point when it doesn't seem like it'll help--else threads just spin in circles at exponentially-increasing speed forever

[00:42:00.0000] <zewt>
circles of emails that take half an hour or more each to write, heh

[00:42:01.0000] <hsivonen>
everything except the original "fetch upon setting .src, fire progress events and change readyState" solution scares me

[00:43:00.0000] <zewt>
i think my last update is actually much simpler, at least spec-wise

[00:46:00.0000] <hsivonen>
I feel I should reply to the thread, but I'm still sick and don't have the energy, so I'm debugging a memory leak instead

[00:47:00.0000] <annevk>
that does sound easier o_O

[00:50:00.0000] <zewt>
i've tried to look at how the readyState one would be expressed in the spec, and it seems to require a bunch of cascading changes

[00:54:00.0000] <hsivonen>
zewt: I think of readyState as something that will appear on all fetchables eventually

[00:56:00.0000] <annevk>
really? bah

[00:56:01.0000] <annevk>
readyState is so ugly

[00:56:02.0000] <zewt>
i'd much rather see Progress Events on all fetchables (but with a different name than "load", since that one's taken)

[00:56:03.0000] <hsivonen>
annevk: It's ugly but being able to query the state of fetchables is reasonable and reinventing the wheel seems less reasonable than using what's already invented

[00:57:00.0000] <hsivonen>
zewt: readystatechange?

[00:57:01.0000] <zewt>
what?

[00:57:02.0000] <hsivonen>
zewt: "readystatechange" is not "load"

[00:57:03.0000] <zewt>
onreadystatechange is not equivalent to onload, since you have to check readyState

[00:58:00.0000] <zewt>
which, agreeing with anne, is ugly

[00:58:01.0000] <hsivonen>
exorcising ugliness from the Web platform tends to lead to duplication which is worse

[00:58:02.0000] <zewt>
annevk: FWIW, it'd be nice if Progress Events would use a different name than "load" for "completed", so it can be applied more often without having to pick different event names (due to onload being taken)

[00:59:00.0000] <annevk>
progress events is completely constrained by legacy or some such :/

[00:59:01.0000] <zewt>
perhaps too late to help now, but something that came to mind

[00:59:02.0000] <annevk>
I have finally applied the "fire" change

[00:59:03.0000] <zewt>
well, where "onload" already means "fetch complete", that's fine

[01:00:00.0000] <annevk>
in theory "onload" could handle both

[01:00:01.0000] <zewt>
I'd have used "onfetch", since "onload" tends to mean both "fetched and loaded" (eg. image decoded, script executed)

[01:00:02.0000] <annevk>
just have to type test...

[01:00:03.0000] <annevk>
the "what if" scenarios are interesting

[01:01:00.0000] <annevk>
no legacy encoding crap is always the first thing that comes to mind

[01:01:01.0000] <zewt>
being able to apply progress events to all elements would be neat, to be able to get progress notifications for things like large images

[01:01:02.0000] <annevk>
that should work now

[01:01:03.0000] <annevk>
and we should maybe do that at some point

[01:02:00.0000] <zewt>
i forget--does onload for images happen after fetch or after decode?

[01:02:01.0000] <zewt>
(eg. does onload fire after fetching a corrupt image)

[01:02:02.0000] <annevk>
once it's shown its merit with XHR

[01:02:03.0000] <annevk>
not for corrupt

[01:02:04.0000] <annevk>
well, I dunno

[01:02:05.0000] <annevk>
/me is sleepy

[01:04:00.0000] <annevk>
guess it's time to DOM Core XHR

[01:08:00.0000] <annevk>
gonna be pain :/

[01:14:00.0000] <matijsb>
go sleep man :)

[01:15:00.0000] <karlcow>
at least a power nap

[01:16:00.0000] <alrra>
is there a reason for why the charset attribute that specifies the encoding should be within the firs 512 bytes and not... let`s say 125 bytes  ? (just curious)

[01:16:01.0000] <alrra>
first~

[01:19:00.0000] <zcorpan>
i guess that should be 1024 bytes these days

[01:19:01.0000] <zcorpan>
the meta prescan scans the first 1024 bytes (previously 512 bytes)

[01:23:00.0000] <annevk>
oh, by pain I just meant it's a lot of work

[01:23:01.0000] <annevk>
no worries :)

[01:24:00.0000] <hsivonen>
alrra: there are three reasons for 1024 instead of 512: 1) WebKit 2) Dreamhost 3) a particular unit test

[01:25:00.0000] <hsivonen>
alrra: I'd say the strongest reason is Dreamhost's broken Apache

[01:26:00.0000] <zewt>
annevk: what's ('d be) the difference between DOM Core XHR and the current XHR specs?

[01:27:00.0000] <zewt>
(which I see you're also editor of)

[01:27:01.0000] <annevk>
I just nuked the exceptions section

[01:27:02.0000] <annevk>
dispatch is gonna be fire

[01:27:03.0000] <annevk>
those kind of things

[01:27:04.0000] <annevk>
oh, and terminology becomes a top-level section

[01:28:00.0000] <annevk>
teehee

[01:28:01.0000] <annevk>
consistency among specs I edit

[01:29:00.0000] <alrra>
hsivonen: ok, tnx :)

[01:30:00.0000] <abarth>
annevk: i'd like to express my excitement that Opera is implementing the HTML5 parsing algorithm

[01:31:00.0000] <abarth>
annevk: would you be willing to pass on my positive thoughts to the appropriate folks?

[01:32:00.0000] <zcorpan>
/me gets a bunch of emails from microsoft connect, all of which have "Field Resolution changed from [None] to [Won't Fix]"

[01:34:00.0000] <annevk>
abarth, sure thing; jgraham is among them :)

[01:34:01.0000] <abarth>
jgraham++

[01:42:00.0000] <jgraham>
abarth: Thanks :)

[01:45:00.0000] <hsivonen>
zcorpan: what kind of bugs?

[01:46:00.0000] <annevk>
the stream of people on twitter being excited about developers.whatwg.org doesn't really seem to stop o_O

[01:47:00.0000] <annevk>
I hope they all read it :)

[01:48:00.0000] <hsivonen>
annevk: except naysayers say nay in the www-archive land: http://lists.w3.org/Archives/Public/www-archive/2011Feb/0051.html

[01:49:00.0000] <abarth>
hsivonen: i just pushed a couple more tests to http://code.google.com/p/html5lib/source/detail?r=576e61e5b7e0c2f23de9afcbeb0a979c5da23190

[01:51:00.0000] <hsivonen>
abarth: thanks. I'll check if those pass

[01:53:00.0000] <hsivonen>
abarth: <table><tr><td><svg><desc><td></desc><circle> assumes the broken spec

[01:53:01.0000] <abarth>
maybe we should have a version in pending spec change?

[01:53:02.0000] <abarth>
those are just tests we added since we last synced with html5lib

[01:53:03.0000] <abarth>
you could also delete it from html5lib if you don't like it :)

[01:54:00.0000] <abarth>
i'm just likely to forget and add it again next time i sync the tests

[01:54:01.0000] <annevk>
hmm

[01:54:02.0000] <annevk>
that was easier than expected

[01:54:03.0000] <annevk>
only events and exceptions

[01:54:04.0000] <hsivonen>
abarth: I pushed a test that assumes the spec gets fixed into pending-spec-changes.dat

[01:54:05.0000] <annevk>
hmm

[01:54:06.0000] <hsivonen>
abarth: yesterday that is

[01:54:07.0000] <abarth>
yeah, webkit fails that one :)

[01:55:00.0000] <abarth>
hsivonen: https://bugs.webkit.org/attachment.cgi?id=83623&action=review

[01:55:01.0000] <jgraham>
Seems I need to update my copy of the tests :)

[01:55:02.0000] <annevk>
hsivonen, yeah, well...

[01:56:00.0000] <abarth>
hsivonen: at some point i or someone on the team will go through and fix these

[01:56:01.0000] <annevk>
parser spec still evolving :)

[01:57:00.0000] <annevk>
but thankfully only nits at this point

[01:57:01.0000] <abarth>
yeah

[01:57:02.0000] <abarth>
i'd like for it to stop evolving so I can be done with this project :)

[01:58:00.0000] <annevk>
I guess that's why you proposed hexadecimal entities :p

[01:58:01.0000] <annevk>
euh, base64-entities

[01:58:02.0000] <hsivonen>
abarth: from my point of view, I've been tracking the evolution for a couple of years, so I'm a bit annoyed about the stance of leaving in a spec bug because you'd like the spec to stop evolving

[01:59:00.0000] <abarth>
the problem is that there are many implementations of the algorithm now and people are shipping it

[01:59:01.0000] <hsivonen>
I'd like for it to stop evolving too, but not with an obvious bug left in just because Chrome shipped

[01:59:02.0000] <abarth>
its not as plastic as it used to be

[02:00:00.0000] <abarth>
well, correctness is a matter of opinion

[02:00:01.0000] <hsivonen>
well, I expect Firefox 4 to ship with the spec bug precognizantly fixed

[02:00:02.0000] <hsivonen>
abarth: the spec has a clear goal what it's trying to appomplish and it fails to accomplish that goal

[02:00:03.0000] <abarth>
we want to incentivize folks to implement the spec

[02:00:04.0000] <hsivonen>
abarth: and the failure is an editorial accident

[02:01:00.0000] <hsivonen>
so I think it's pretty objectively a spec bug

[02:01:01.0000] <abarth>
from my point of view, none of that really matters

[02:01:02.0000] <abarth>
IMHO, it's more important to get perfect interop than for the algorithm to be aesethtically beautiful

[02:01:03.0000] <annevk>
http://blog.chromium.org/2011/02/amping-up-chromes-background-feature.html -- embrace and extend?

[02:02:00.0000] <abarth>
annevk: i think exposing extra APIs to browser extensions is fair game

[02:02:01.0000] <hsivonen>
abarth: it isn't about aesthetic. It's about actually having the recovery properties that have been advertised. And having sane implementability.

[02:02:02.0000] <jgraham>
FWIW I agree with hsivonen; I think the short term pain of fixing a few implementations is much less than the long term pain of yet another parsing wart

[02:02:03.0000] <annevk>
abarth, this is beyond extensions though

[02:02:04.0000] <abarth>
the question of whether we should expose non-web APIs to apps is a tricky question

[02:02:05.0000] <hsivonen>
abarth: sane implementability meaning none of those contortions in the end tag case

[02:03:00.0000] <annevk>
though contrary to how Microsoft does these things Google has brought it up for discussion on the WHATWG mailing list long ago

[02:03:01.0000] <annevk>
it just did not get much traction

[02:03:02.0000] <abarth>
yeah, there are serious design issues with that feature

[02:03:03.0000] <abarth>
my position is that we shouldn't be exposing anything to apps that we don't believe is on the track to being part of the web

[02:04:00.0000] <abarth>
e.g., FileSystem is fair game because that's an active working group item in the W3C

[02:04:01.0000] <hsivonen>
abarth: seems like a currently losing position in the Chrome team :-(

[02:04:02.0000] <abarth>
there's a spectrum of opinions not the team

[02:05:00.0000] <abarth>
i'm a bit more in the open web camp than the median

[02:05:01.0000] <abarth>
s/not/on/

[02:05:02.0000] <zewt>
i hardly even understand what google's trying to do with the whole packaged-apps thing--the single biggest advantage of web apps is not needing to package or install them, heh

[02:05:03.0000] <zewt>
for certain things like that backgrounding feature yeah, but overall

[02:06:00.0000] <abarth>
the biggest benefit is the improved security

[02:06:01.0000] <abarth>
its basically a way for the user to white-list sites they like

[02:06:02.0000] <abarth>
and a clear path to revoking that whitelist

[02:06:03.0000] <zewt>
seems like if there are security issues then they should be addressed at the web level, not worked around with a packaging system

[02:06:04.0000] <hsivonen>
http://berjon.com/blog/2011/02/harmful-trust.html is relevant

[02:06:05.0000] <abarth>
i haven't read that post

[02:06:06.0000] <abarth>
these privileges are very small

[02:07:00.0000] <abarth>
e.g., the ability to use the notifications API

[02:07:01.0000] <abarth>
we don't want to give that to every web page

[02:07:02.0000] <abarth>
because its too spammy

[02:07:03.0000] <abarth>
but if an app is too spammy

[02:07:04.0000] <zewt>
it should be available to every web page, but require permission

[02:07:05.0000] <abarth>
its easy to unwhitelist the app

[02:07:06.0000] <abarth>
it is

[02:07:07.0000] <abarth>
you can either get it via an infobar

[02:07:08.0000] <zewt>
right

[02:07:09.0000] <abarth>
or via being "installed"

[02:07:10.0000] <abarth>
we don't want infinite infobars

[02:07:11.0000] <hsivonen>
having notification as an installable privilege I approve of

[02:08:00.0000] <abarth>
infobars isn't a solution that scales

[02:08:01.0000] <erlehmann>
gsnedders, why will you delete your blog?

[02:08:02.0000] <hsivonen>
but even installing is a bit heavy compared to e.g. allowing it for "app tabs"

[02:08:03.0000] <zewt>
to me the whole "installable web apps"/"web app store" thing seems more like a marketing gimmick (eg. pushback against iPhone apps) than something with strong technical merit

[02:08:04.0000] <erlehmann>
gsnedders, please dont.

[02:08:05.0000] <annevk>
yeah, infobars are annoying

[02:08:06.0000] <annevk>
but .exe is too

[02:09:00.0000] <abarth>
http://code.google.com/intl/en-US/chrome/apps/docs/no_crx.html

[02:09:01.0000] <abarth>
is an approach that might feel more webby

[02:09:02.0000] <zewt>
abarth: permission bars need reexamination as more and more APIs become available that require them, but I don't think installable-apps are a general-purpose solution to that problem

[02:09:03.0000] <abarth>
zewt: sure it is

[02:09:04.0000] <annevk>
and centralized whitelisting...

[02:09:05.0000] <abarth>
it might not be the best solution

[02:09:06.0000] <abarth>
but it is a solution

[02:09:07.0000] <zewt>
it's a solution; it's just not a general-purpose one

[02:09:08.0000] <zewt>
basically it takes the web out of web app, heh

[02:10:00.0000] <abarth>
i'm not sure what the distinction is between a solution and a general-purpose one

[02:10:01.0000] <annevk>
given Chrome OS it makes sense they went this way I think

[02:10:02.0000] <zewt>
it's more of a workaround than a solution

[02:10:03.0000] <annevk>
given that we don't really have a concrete alternative

[02:10:04.0000] <abarth>
zewt: you're conflating the packaging with the experience

[02:10:05.0000] <annevk>
still sucks though

[02:11:00.0000] <abarth>
IMHO, the two things that could really be improved are

[02:11:01.0000] <abarth>
1) the centralization via the store.  a decentralized model is certainly more web-like

[02:12:00.0000] <abarth>
2) non-standard APIs.  that kind of defeats the point of the web being an open platform

[02:12:01.0000] <abarth>
the syntax for requesting permissions don't really matter that much

[02:12:02.0000] <abarth>
e.g., you could make it all JSON or XML or whatever

[02:13:00.0000] <abarth>
the current system is basically just a JSON blob that's been self-signed by a public key

[02:14:00.0000] <zewt>
also, it's not exactly clear how installable apps solve the permissions-problem--what do they do, android-like "ask for lots of permissions at once"?

[02:14:01.0000] <zewt>
which has very serious drawbacks vs. the "ask permission the first time you use a feature" model currently used

[02:15:00.0000] <abarth>
why do you think bugging the user all the time with security prompts is better than just asking once?

[02:15:01.0000] <abarth>
as a first approximation, you might imagine that users answer security prompts randomly

[02:15:02.0000] <zewt>
asking the user "allow this page to go fullscreen?" in response to the user clicking a fullscreen button is much better than asking when you first install the application

[02:16:00.0000] <hsivonen>
abarth: things that also bother me: 1) zip file instead of app manifest and 2) being tied to the store instead of having a Paypal billing relationship with the service from then on

[02:16:01.0000] <abarth>
its not really tied to the store

[02:16:02.0000] <zewt>
when you install an android app, you're given a huge list of things the app wants to do--you have no idea why it wants any of those permissions (because the permission request is disconnected from actually using the permission)

[02:16:03.0000] <abarth>
you can use the whole feature without involving the store at all

[02:17:00.0000] <hsivonen>
abarth: is it tied to Google Checkout?

[02:17:01.0000] <abarth>
zewt: i agree that the andriod permission system leaves something to be desired.  however, that's not what we're discussing

[02:17:02.0000] <abarth>
hsivonen: no

[02:17:03.0000] <hsivonen>
abarth: how does billing work?

[02:17:04.0000] <zewt>
well I asked before--again, what do they do, exactly?

[02:17:05.0000] <abarth>
hsivonen: the decision tree is as follows

[02:17:06.0000] <abarth>
1) Do you wan to use the store?

[02:17:07.0000] <zewt>
as the two major models I've seen are "ask in advance" and "ask on demand"

[02:17:08.0000] <abarth>
if no, then you can host it all yourself

[02:18:00.0000] <abarth>
if yes, then you can select a payment provider

[02:18:01.0000] <abarth>
one choice is checkout

[02:18:02.0000] <abarth>
another choice is to use whatever you like

[02:18:03.0000] <hsivonen>
abarth: I see

[02:18:04.0000] <abarth>
zewt: the problem with android's permission system isn't "ask in advance".  it's other parts of their design

[02:18:05.0000] <zewt>
also, in general it'd be a very big loss if regular webpages can't access APIs because some APIs are only accessible to packaged apps; it makes sense in certain cases (at least that background-page feature), but not in general

[02:18:06.0000] <abarth>
hsivonen: the path of least resistance is to use the store and to use checkout

[02:19:00.0000] <hsivonen>
(It also bothers me that Google made a point of allowing Flash apps in the store)

[02:19:01.0000] <abarth>
hsivonen: the link i pasted earlier is an experimental implementation of the system without ZIPs and without the store

[02:19:02.0000] <abarth>
hsivonen: so if those are the parts you don't like, you might be interested in that page

[02:20:00.0000] <hsivonen>
abarth: ok

[02:20:01.0000] <abarth>
basically, the zip is replaced with just a JSON blob

[02:20:02.0000] <abarth>
that you link to with a <link> element

[02:20:03.0000] <abarth>
and then you ask to be installed with a JS API

[02:21:00.0000] <zewt>
if there are package-system-based APIs to handle permissions better then I have no inherent problem with that--as long as it doesn't actually *restrict* important APIs from regular web pages

[02:22:00.0000] <hsivonen>
/me makes a mental note of Chrome having an object window.chrome

[02:22:01.0000] <zcorpan>
now gecko just needs window.firefox

[02:22:02.0000] <hsivonen>
interesting if adding a global name chrome didn't conflict with any existing scripts out there

[02:22:03.0000] <abarth>
i'm sure its replaceable

[02:22:04.0000] <zewt>
though if high-sensitivity APIs are involved I might change my mind for those (eg. a FileSystem object to the user's whole hard drive)

[02:23:00.0000] <abarth>
zewt: this only works for low-sensitivity APIs

[02:23:01.0000] <abarth>
the key is revokability

[02:23:02.0000] <abarth>
and transparency

[02:23:03.0000] <abarth>
if the web page does something the user doesn't like

[02:23:04.0000] <abarth>
they should be able to figure out which one did it

[02:23:05.0000] <abarth>
and then nuke it

[02:24:00.0000] <abarth>
and, ideally, ding the site's reputation so other users can be saved the hassle

[02:24:01.0000] <hsivonen>
abarth: the crx-less solution seems reasonable except for granting permissions to URLs instead of an Origin

[02:25:00.0000] <hsivonen>
(and the vendor-specific entry point, of course)

[02:25:01.0000] <zewt>
but for example, a fullscreen API would need to ask permission, and that really needs to work on plain-old-webpages

[02:25:02.0000] <annevk>
abarth, btw, someone tried running your cookie tests but got a syntax error in Python?

[02:25:03.0000] <zewt>
(every <video> will want to use it)

[02:25:04.0000] <annevk>
abarth, https://github.com/abarth/http-state/tree/master/tests

[02:26:00.0000] <abarth>
hsivonen: that's stuff we can clean up.  it's behind an experimental flag

[02:26:01.0000] <abarth>
annevk: send me the error.  i can try to fix it

[02:26:02.0000] <abarth>
annevk: might be too old a version of python

[02:26:03.0000] <zewt>
abarth: havn't read that whole blog post above yet, but the whole "XSS attacks against trusted pages" only seems important for high-sensitivity APIs

[02:26:04.0000] <abarth>
annevk: i think it needs 2.6

[02:28:00.0000] <abarth>
hsivonen: aaron boodman is interested in socializing the non-CRX approach with other browser vendors.  if you have feedback, i can put you in touch with him

[02:29:00.0000] <hsivonen>
abarth: I have opinions but I'm totally out of the loop as far as the Mozilla Labs App Store stuff goes, so my opinions may be totally non-vendor-representative

[02:30:00.0000] <abarth>
my understanding is that there are some internal politics in mozilla that impact this topic

[02:30:01.0000] <zewt>
just skimming (tired) but this just seems mistaken: "The app needs to store books, so it has file system access." ... "Except that all I need now to gain access to the file system of thousands of users is a single XSS bug"

[02:30:02.0000] <annevk>
abarth, kk

[02:30:03.0000] <zewt>
it assumes filesystem access to store books == access to the whole filesystem, rather than what we actually have (sandboxed access)

[02:30:04.0000] <zewt>
eg. that sort of FS access is low-sensitivity, not high-

[02:31:00.0000] <zewt>
(well, most of the time--it could be high if you're storing sensitive data there, but not in that particular example)

[02:32:00.0000] <zewt>
in any case, i still feel the real motivations behind "web app stores" are closer to what I described earlier :)

[02:34:00.0000] <hsivonen>
abarth: I'm so out of the loop that I don't even know what the politics are.

[02:34:01.0000] <abarth>
i'm not sure how much of this i'm supposed to know

[02:35:00.0000] <zewt>
heh, i havn't even looked at mozilla development, but based on the age and size of the project I've assumed it's heavily political--which is a strong deterrent to getting involved with it

[02:36:00.0000] <abarth>
i also don't know whether this issue has changed after betlzner

[02:36:01.0000] <zewt>
(perhaps "age, size and exposure", all of which tend to contribute)

[02:37:00.0000] <abarth>
e.g., if you look at https://wiki.mozilla.org/Firefox/Roadmap under "back to mission"

[02:38:00.0000] <abarth>
you can see some negative thoughts connected with this topic

[02:39:00.0000] <hsivonen>
abarth: I moved the test case we talked about earlier and changed its expectation: http://code.google.com/p/html5lib/source/detail?r=bd33da7b55f38f95005cb369843e24f190941cd6

[02:40:00.0000] <abarth>
hsivonen: thanks.  at least its in the middle of the file.  that will help me remember not to add it back again :)

[02:41:00.0000] <jgraham>
hsivonen: So there are now two changes for the spec-as-we-would-like-it and none for the spec as it is?

[02:44:00.0000] <annevk>
name for From-Origin draft... "Restricting Cross-Origin Embedding"?

[02:44:01.0000] <annevk>
RCOE

[02:44:02.0000] <annevk>
nice

[02:45:00.0000] <annevk>
COER

[02:45:01.0000] <hsivonen>
jgraham: there are now two "spec as we would like it" tests for one pending spec change

[02:45:02.0000] <abarth>
CORE

[02:45:03.0000] <hsivonen>
jgraham: and no test for the current spec situation on that point

[02:45:04.0000] <abarth>
ROAR

[02:45:05.0000] <zcorpan>
LOL

[02:46:00.0000] <abarth>
Random Origin Access Restrictions

[02:46:01.0000] <annevk>
Cross-Origin Resource Embedding Restrictions

[02:46:02.0000] <annevk>
:)

[02:46:03.0000] <abarth>
can you explain this From-Origin thing to be again?

[02:46:04.0000] <abarth>
its a server => browser header

[02:46:05.0000] <annevk>
yes

[02:46:06.0000] <abarth>
that stops the resource from being used excepted by a particular origin?

[02:47:00.0000] <annevk>
yes, basically turns it into a "network error"

[02:47:01.0000] <abarth>
I see

[02:47:02.0000] <abarth>
so CORS => reading

[02:47:03.0000] <abarth>
ROAR => displaying

[02:47:04.0000] <abarth>
displaying means as in an image tag

[02:48:00.0000] <abarth>
does it work for iframes?

[02:48:01.0000] <annevk>
helps fight bandwidth stealing, enforcing font licenses, and should help with https://grepular.com/Abusing_HTTP_Status_Codes_to_Expose_Private_Information

[02:48:02.0000] <annevk>
abarth, yes, I think that would make sense

[02:48:03.0000] <annevk>
abarth, so it can replace X-Frame-...

[02:48:04.0000] <abarth>
what about deep linking?

[02:48:05.0000] <annevk>
no

[02:48:06.0000] <zcorpan>
window.open?

[02:49:00.0000] <annevk>
that's also navigating

[02:49:01.0000] <annevk>
afaik

[02:49:02.0000] <abarth>
so it cares about the embedding context

[02:49:03.0000] <abarth>
not the referrer

[02:49:04.0000] <annevk>
right

[02:49:05.0000] <annevk>
i would not want to limit normal linking

[02:49:06.0000] <abarth>
makes sense

[02:50:00.0000] <abarth>
i still think it should be a CSP directive

[02:50:01.0000] <abarth>
but whatever

[02:50:02.0000] <annevk>
that works for me actually

[02:50:03.0000] <zcorpan>
<iframe> seems easy to work around if you get the user to click somewhere

[02:51:00.0000] <zcorpan>
<a href=//othersite.com/foo target=iframe style=...></a>

[02:51:01.0000] <annevk>
abarth, though CSP seems quite overloaded

[02:51:02.0000] <abarth>
Content-Security-Policy: restrict-embedding *.example.com

[02:51:03.0000] <annevk>
zcorpan, that would still be embedding

[02:51:04.0000] <abarth>
you'll get some wildcarding for free that way

[02:51:05.0000] <abarth>
but there's CSP isn't quite baked yet

[02:52:00.0000] <annevk>
yeah, I read some of the debate

[02:52:01.0000] <abarth>
i'd like CSP to be successful

[02:52:02.0000] <abarth>
i think different folks have slightly different visions

[02:53:00.0000] <annevk>
I don't quite get why Mozilla wants to introduce so many different flags

[02:53:01.0000] <annevk>
we did something similar with CORS and I hate it

[02:53:02.0000] <abarth>
they're still thinking in a mode of shipping once every one to two years

[02:54:00.0000] <abarth>
which means you only get a limited number of wacks at the ball

[02:54:01.0000] <abarth>
that means the risk of leaving something out is higher

[02:55:00.0000] <abarth>
according to the firefox roadmap, they're going to change to a more frequent release cycle, but it takes some time to rewire you brain

[02:56:00.0000] <annevk>
but yeah, this would make sense as a Content-Policy

[02:56:01.0000] <annevk>
not sure it's always a security policy though

[02:57:00.0000] <abarth>
we should just rename Content-Security-Policy to Content-Policy then :)

[02:57:01.0000] <annevk>
this is mostly wanted by the Fonts WG who think this solves licensing

[02:57:02.0000] <annevk>
yeah

[02:57:03.0000] <jgraham>
hsivonen: Perfect

[02:57:04.0000] <annevk>
(but it also solves a bunch of other problems)

[02:58:00.0000] <annevk>
abarth, I guess there's no real latest draft of CSP right?

[02:58:01.0000] <abarth>
brandon has promised to have one posted by EOD friday

[02:59:00.0000] <abarth>
i could write one, but he seems to want to be the editor

[03:00:00.0000] <abarth>
annevk: here's some random stuff i wrote on the wiki if you want to get a sense for things http://www.w3.org/Security/wiki/Content_Security_Policies

[03:00:01.0000] <abarth>
its pretty rough

[03:02:00.0000] <annevk>
thanks

[03:02:01.0000] <abarth>
i'm really enamored with the connection between deep linking and XSS

[03:02:02.0000] <annevk>
since I was asked, I guess I'll write up a draft on From-Origin and mention how it can be merged into Content-Policy

[03:03:00.0000] <annevk>
I'm guessing nobody is going to like all this instability, but I guess if we want something good it'll take a little longer

[03:03:01.0000] <abarth>
in some sense, the attack surface of your web site is all the URLs that can be deep linked

[03:04:00.0000] <abarth>
annevk: i don't know if you read webkit-dev, but there was a thread between tab and maciej about the font stuff

[03:04:01.0000] <annevk>
isn't that like saying the attack surface is your web site?

[03:04:02.0000] <annevk>
I've followed that bit on webkit-dev I think

[03:04:03.0000] <annevk>
will check if there's something ne

[03:04:04.0000] <annevk>
w

[03:04:05.0000] <abarth>
i don't think anything knew

[03:04:06.0000] <abarth>
new

[03:05:00.0000] <abarth>
just that they're both pretty passionate about their points of view

[03:05:01.0000] <annevk>
I'm glad that Maciej has the saner pov :p

[03:05:02.0000] <abarth>
if you could block deep linking, you could reduce that attack surface

[03:06:00.0000] <annevk>
abarth, and reduce a lot of utility as well?

[03:06:01.0000] <abarth>
depends.  does your bank really want deep linking?

[03:06:02.0000] <abarth>
it mostly wants you to enter through the front door

[03:07:00.0000] <abarth>
and then to have a smaller attack surface

[03:07:01.0000] <annevk>
abarth, that might lead to e.g. whitelisting a specific set of search providers

[03:07:02.0000] <abarth>
yeah, you'd want a design that make it hard to discriminate

[03:07:03.0000] <abarth>
s/make/made/

[03:08:00.0000] <annevk>
come to think of it, embedding restrictions might do the same

[03:08:01.0000] <annevk>
whitelisting of images.google.com or some such

[03:08:02.0000] <jgraham>
/me is nervous about making blocking deeplinking easy

[03:08:03.0000] <jgraham>
It feels like it has the potential to be badly abused

[03:08:04.0000] <abarth>
jgraham: certainly

[03:09:00.0000] <abarth>
it's just something i've been mulling over

[03:09:01.0000] <abarth>
it came of thinking about why mobile apps have few vulnerabilities than web apps

[03:10:00.0000] <abarth>
you can't really deep link into a mobile app

[03:10:01.0000] <zewt>
even referer checks for image linking, for all that it has reasonable uses, is maddening when it misfires--such as greader not displaying images

[03:10:02.0000] <zewt>
... which leads to people whitelisting reader.google.com, making it that small bit harder for other people to make competing tools

[03:10:03.0000] <abarth>
zewt: referrer is many layers of sadness

[03:10:04.0000] <annevk>
zewt, yeah, from-origin would have that effect too

[03:11:00.0000] <zewt>
not to say I have a better idea or that I'd remove referer due to that--but still

[03:11:01.0000] <annevk>
not sure how we can prevent leaking http status codes and such otherwise though

[03:11:02.0000] <zewt>
not current on that issue

[03:13:00.0000] <abarth>
zewt: one approach is to let sites suppress their outgoing referrer

[03:13:01.0000] <abarth>
anyway, its bed time for me

[03:13:02.0000] <zewt>
well, in that particular example, if you let people suppress referer on images, you're also breaking fundamental use cases (eg. legitimately preventing image hotlinking)

[03:14:00.0000] <abarth>
web site can already supress referers

[03:14:01.0000] <abarth>
its just a PITA

[03:14:02.0000] <abarth>
that use case already doesn't work

[03:15:00.0000] <zewt>
i'd imagine that's the second most common use of referers, second to analytics/tracking

[03:16:00.0000] <zewt>
personally I don't care; to users it's never anything but an inconvenience, but I guess if I was paying for a metered server I might care *shrug*

[03:17:00.0000] <zewt>
later

[04:40:00.0000] <annevk>
I guess we cannot make EventListener a Callback=FunctionOnly?

[05:03:00.0000] <annevk>
any progress on getting Anolis updated btw?

[05:03:01.0000] <annevk>
I mean the online version and such

[05:03:02.0000] <annevk>
I'm getting tired with the script Bert maintains

[05:06:00.0000] <zewt>
heh, funky FF4b11 bug--alert() appears to run at least some parts of the event loop... so some events can be fired during an alert

[05:06:01.0000] <annevk>
sounds like their synchronous XHR implementation...

[05:07:00.0000] <zewt>
external async scripts are run if they complete during an alert

[05:08:00.0000] <annevk>
that sounds worse than what is/was true for synchronous XHR

[05:08:01.0000] <zewt>
i think they just added tab-modal alerts recently (since b8 anyway), so I guess they're still ironing that out--but I'll easily take tab-modal alerts over window-modal ones, even if it's a little lumpy

[05:09:00.0000] <zewt>
window-modal alert dialogs may be the single most annoying thing in javascript, so i'm glad to see browsers following opera's lead on that

[05:10:00.0000] <zewt>
synchronous XHR is allowed from the UI thread? most sync APIs are only exposed in workers

[05:11:00.0000] <zewt>
legacy api?

[05:11:01.0000] <zcorpan>
yes

[05:52:00.0000] <MikeSmith>
oh nice

[05:52:01.0000] <MikeSmith>
http://labs.qt.nokia.com/2011/02/24/qt-people-our-javascript-platform-is-burning-rubber/

[06:03:00.0000] <gsnedders>
annevk: jgraham hostsit

[06:03:01.0000] <gsnedders>
erlehmann: But there's nothing of interest of it, and it makes me seem a horrible self-centered asshole

[06:03:02.0000] <annevk>
gsnedders, i know

[06:03:03.0000] <gsnedders>
annevk: so ask him ?:P

[06:03:04.0000] <annevk>
gsnedders, maybe I should set up a bribing strategy as I'm going to visit the Swedes soon

[06:04:00.0000] <annevk>
jgraham is a busy man

[06:18:00.0000] <annevk>
ms2ger: nice idea :)

[06:18:01.0000] <erlehmann>
gsnedders, killing off URL that held content s is a bad deed in itself. meditate on that.

[06:20:00.0000] <erlehmann>
gsnedders, maybe you should write only stuff you would like to read?

[06:20:01.0000] <Philip`>
gsnedders: It's too late to change how you seem to people, once you've already published stuff

[06:21:00.0000] <gsnedders>
Philip`: I know

[06:21:01.0000] <erlehmann>
gsnedders, keep the blog, and get better. it is great to look at past stuff and see that you are better now.

[06:21:02.0000] <Philip`>
Everything will hang around forever in caches and quotes and archives, so you'll never be able to hide it, and you'll just have the added negative impression that you're no good at archiving your own material

[06:22:00.0000] <gsnedders>
Meh, it seems to me no worse than physically detroying stuff. No, you can never be sure you've destroyed everything, but, it can still seem worthwhile to try…

[06:22:01.0000] <erlehmann>
don't

[06:22:02.0000] <erlehmann>
you will annoy people

[06:23:00.0000] <Philip`>
Better to keep it where you can control it and add a disclaimer to give readers the appropriate context

[06:23:01.0000] <erlehmann>
dead links, man. dead links.

[06:23:02.0000] <Philip`>
/me hates ever physically destroying anything, too :-p

[06:23:03.0000] <erlehmann>
what Philip` said. there are blogs i read who have a warning on articles older than 6 months.

[06:23:04.0000] <annevk>
/me uses URLs for that

[06:23:05.0000] <annevk>
(though I wouldn't if I started over)

[06:24:00.0000] <annevk>
(dates in URLs are almost always terrible)

[06:35:00.0000] <zcorpan>
what's wrong with dates in urls for a blog?

[06:48:00.0000] <erlehmann>
zcorpan, dates in urls are ugly.

[06:48:01.0000] <erlehmann>
<http://example.org/the-title> is almost universally better remembered than <http://example.org/1234-56-78/the-title>

[06:49:00.0000] <erlehmann>
where i do not object is if the dates are the title, as with chat logs or {daily|weekly} articles.

[06:50:00.0000] <annevk>
zcorpan, doesn't seem good to hide metadata in URLs

[06:50:01.0000] <annevk>
zcorpan, and they make them more lengthy too

[06:51:00.0000] <erlehmann>
annevk, the great rewriting purge can permanently change the ugly face of your blog. but you know that :)

[06:51:01.0000] <erlehmann>
i use only the title

[06:51:02.0000] <erlehmann>
wordpress defaults are a mess

[06:51:03.0000] <erlehmann>
but it is pretty good at redirecting from wrongly input URLs to the correct one

[06:51:04.0000] <erlehmann>
apparently

[06:52:00.0000] <annevk>
my blog has been rewritten too many times already :)

[06:52:01.0000] <annevk>
now I only try to simplify every now and then

[06:52:02.0000] <wilhelm>
They provide a useful hierarchy when example.com/2011/, example.com/2011/02/ and example.com/2011/02/foobar/ are all available.

[06:52:03.0000] <annevk>
wilhelm, but dated hierarchies suck...

[06:53:00.0000] <annevk>
(my blog works that way though)

[06:53:01.0000] <annevk>
besides /2011/ and /2011/02/ and /2011/02/html-development I even support /2011/02/24/

[06:54:00.0000] <wilhelm>
/me disagrees about the colour of this particular bikeshed. :P

[06:54:01.0000] <Lachy>
wilhelm, it's possible to implement the dated archives without having to have the URLs of the articles themselves include the dates.

[07:02:00.0000] <erlehmann>
what lachy says :)

[07:04:00.0000] <jgraham>
Obviously TabAtkins is right and urls should be absurdly long hash strings

[07:05:00.0000] <jgraham>
Then people won't get the silly idea that they can remember or manipulate them

[07:05:01.0000] <jgraham>
If I were evil I might wonder if working for a search company gives you a conflict of interest here ;)

[07:05:02.0000] <AryehGregor>
jgraham, kind of like git's approach to revision identifiers?  :)

[07:06:00.0000] <jgraham>
AryehGregor: Are you suggesting that git should use the commit message as the revision identifier?

[07:06:01.0000] <AryehGregor>
No, but I like your twisted and evil way of thinking.

[07:06:02.0000] <AryehGregor>
That wouldn't work, though, because multiple commits might have the same message.

[07:06:03.0000] <jgraham>
Same with blog post titles

[07:07:00.0000] <AryehGregor>
Has anyone else noticed that whenever something goes wrong in Windows, it tells you "application X/website X is causing a problem", but whenever it's pretending to do something helpful, it always says "Windows has fixed this problem"?

[07:07:01.0000] <AryehGregor>
Like: https://bugzilla.wikimedia.org/show_bug.cgi?id=27677#c18

[07:07:02.0000] <AryehGregor>
"the website continues to have a problem", "When a website causes a failure or crash"

[07:07:03.0000] <AryehGregor>
As though websites are able to crash non-buggy web browsers.

[07:08:00.0000] <zcorpan>
yeah, i was a bit surprised to read the ie crash message first time i saw it

[07:09:00.0000] <AryehGregor>
It's really the same as how IEBlog posts always try to spin things to dishonestly paint themselves as being better than their competitors.

[07:09:01.0000] <AryehGregor>
Microsoft is just evil that way, I guess.

[07:11:00.0000] <AryehGregor>
(note: in contrast to spinning things to honestly or at least semi-honestly paint themselves as being better than their competitors, which is okay, e.g., touting their GPU acceleration or something)

[07:11:01.0000] <AryehGregor>
(as opposed to claiming that they address all bugs they receive and their competitors somehow don't)

[07:11:02.0000] <AryehGregor>
(or that they're more standards-compliant because they pass almost 100% of their own test suite)

[07:11:03.0000] <AryehGregor>
(both of those are just lies)

[07:14:00.0000] <AryehGregor>
Wow, I just managed to completely crash Chrome.

[07:14:01.0000] <AryehGregor>
That's the first time I can remember that happening.

[07:15:00.0000] <zcorpan>
AryehGregor: no, there was a problem with the web site you were visiting

[07:16:00.0000] <AryehGregor>
Yes, it must be running some malicious code that only happens to be targeted at IE on Windows XP.

[07:16:01.0000] <annevk>
fwiw, http://dvcs.w3.org/hg/from-origin/raw-file/tip/Overview.html bit raw still, I need some sleep

[07:16:02.0000] <AryehGregor>
It was probably written by some frustrated web developers who wanted to take out their anger on IE users.

[07:16:03.0000] <annevk>
(there's no processing model there)

[07:16:04.0000] <zcorpan>
i thought you said chrome crashed

[07:16:05.0000] <jgraham>
AryehGregor: It wasn't a google site then?

[07:16:06.0000] <AryehGregor>
Oh, you were talking about that.

[07:16:07.0000] <AryehGregor>
Well, actually, it was Chrome preferences.

[07:16:08.0000] <AryehGregor>
So Chrome kind of has to take the blame either way.

[07:17:00.0000] <zcorpan>
snap

[07:17:01.0000] <zcorpan>
i wonder who IE would blame in that situation

[07:17:02.0000] <jgraham>
AryehGregor: You're not supposed to change preferences if you use Chrome

[07:17:03.0000] <jgraham>
Didn't you know?

[07:17:04.0000] <AryehGregor>
annevk, I realize people have bikeshedded over the name a bunch already, but: "From-Origin"?  What relevance does that have to the functionality?  How about "Restrict-Embedding" or "Limit-Embed" or something?

[07:18:00.0000] <jgraham>
If only you recognsied the One True Way, you wouldn't have this sort of problem

[07:18:01.0000] <jgraham>
I hope you have learnt your lesson

[07:18:02.0000] <AryehGregor>
zcorpan, 'The website "about:preferences" caused a problem'

[07:18:03.0000] <AryehGregor>
jgraham, I was actually editing my form autofill info.  I guess I'm just supposed to have the same name, address, and phone number as every other Chrome user?

[07:19:00.0000] <jgraham>
You're probably supposed to put all that information in your google account

[07:19:01.0000] <zcorpan>
that'd be the case if all other chrome users switched to another browser

[07:19:02.0000] <annevk>
AryehGregor, Embed-Only-From-Origin was the only somewhat appropriate alternative but not liked so far

[07:19:03.0000] <annevk>
AryehGregor, I hope this can become part of CSP (or CP)

[07:20:00.0000] <annevk>
until something drastic like that happens I'm not gonna bother renaming anything

[07:20:01.0000] <annevk>
that'll just cause confusion

[07:20:02.0000] <AryehGregor>
Meh.

[07:21:00.0000] <AryehGregor>
I love how Linux updates just modify everything in place instead of requiring a reboot.  It makes things so exciting.

[07:21:01.0000] <AryehGregor>
Large parts of the text on my screen just turned into little boxes.

[07:21:02.0000] <AryehGregor>
/me waits to see if they turn back

[07:23:00.0000] <jgraham>
/me wonders that gsnedders hasn't started singing yet

[07:24:00.0000] <AryehGregor>
Nope, they didn't turn back.

[07:24:01.0000] <AryehGregor>
Looks like my Ubuntu Bold font disappeared.

[07:24:02.0000] <AryehGregor>
Cool.

[07:25:00.0000] <AryehGregor>
This is why I hate other OSes, they're so boring.

[07:25:01.0000] <AryehGregor>
/me makes his window titles italic instead of bold for now

[07:25:02.0000] <bfrohs>
0.o

[07:25:03.0000] <AryehGregor>
I'm only half-joking.

[07:25:04.0000] <bfrohs>
Looks like I had better luck with my update than you did haha

[07:26:00.0000] <AryehGregor>
Most of what I learned about OSes and hardware, I learned from having to fix Linux when it broke.

[07:26:01.0000] <bfrohs>
That's the best way, if you ask me

[07:27:00.0000] <AryehGregor>
Now Chrome has lost my open tabs.  This is the first time it's seriously annoyed me in . . . a long time.

[07:28:00.0000] <AryehGregor>
Oh well, nothing important.

[07:30:00.0000] <Philip`>
Other OSes are annoying since they don't happily let you install a critical security update to your kernel and then not reboot and still remain unknowingly vulnerable

[07:30:01.0000] <AryehGregor>
Actually, Ubuntu does tell you to reboot on kernel updates.

[07:30:02.0000] <AryehGregor>
But not on, e.g., libc or X updates, even for security vulnerabilities.

[07:31:00.0000] <AryehGregor>
So unless you restart all updated programs, you still might be vulnerable.

[07:31:01.0000] <Philip`>
Ubuntu doesn't count as proper Linux, it's all user-friendly and stuff

[07:31:02.0000] <AryehGregor>
Of course, it's not like anyone exploits non-Windows desktops much.

[07:31:03.0000] <AryehGregor>
And for servers, remote execution is the only real worry in most cases, and that's pretty rare.

[07:32:00.0000] <AryehGregor>
/me hasn't rebooted his server in 75 days, although that's mostly because he has no working fallback

[07:32:01.0000] <Philip`>
/me vaguely remembers getting reboot warnings when logging in on one of his Ubuntu servers, but not the other, and on the first one he didn't bother rebooting anyway

[07:33:00.0000] <Philip`>
Local exploits still seem dangerous on servers, because servers run rubbish PHP scripts that are full of bugs and let attackers upload and execute arbitrary code

[07:34:00.0000] <Philip`>
(Fortunately attackers seem to usually just use it for adding spam onto all your pages)

[08:18:00.0000] <annevk>
hmm, I keep forgetting that the "violating the nodes model" bit still needs to be integrated into the various DOM manipulation methods

[09:10:00.0000] <TabAtkins>
I like it when IE removes a quirk that I didn't even know about.

[09:13:00.0000] <aho>
i like it when ie removes itself

[09:13:01.0000] <aho>
:l

[09:28:00.0000] <gsnedders>
jgraham: huh? me singing?

[09:29:00.0000] <jgraham>
gsnedders: You're quite right

[09:29:01.0000] <jgraham>
I should have used more quotation marks

[09:29:02.0000] <jgraham>
Or, to put it differently, scare quotes implied

[09:29:03.0000] <gsnedders>
jgraham:  But why me "singing"?

[09:30:00.0000] <jgraham>
gsnedders: Since they let you in to university, I have to assume you have the intelligence to deduce it from the surrounding context

[09:31:00.0000] <gsnedders>
jgraham: They rejected me almost everywhere I applied. I couldn't it work out from the surrounding context.

[09:32:00.0000] <jgraham>
gsnedders: AryehGregor mentioned a key phrase that usually sets you off

[09:32:01.0000] <jgraham>
I can't repeat it for fear of the consequences

[09:32:02.0000] <gsnedders>
jgraham: turning black?

[09:34:00.0000] <gsnedders>
jgraham: Because "loving you was like living the dead"? ;P

[09:38:00.0000] <annevk>
TabAtkins, tab-size is about the amount of space characters that constitutes a tab stop afaik

[09:38:01.0000] <TabAtkins>
I thought it was the size of a tab character.

[09:38:02.0000] <annevk>
TabAtkins, it basically makes the fixed 8 spaces for a tab stop in CSS 2.1 a variable

[09:40:00.0000] <annevk>
http://www.w3.org/TR/CSS21/text.html#white-space-model second algorithm step 2

[09:40:01.0000] <annevk>
by default 8

[09:40:02.0000] <annevk>
tab-size changes it

[09:42:00.0000] <TabAtkins>
Oh, hrm, you're right.  I thought tabs were fixed size.

[09:43:00.0000] <annevk>
I'm also late

[09:59:00.0000] <TabAtkins>
AryehGregor: As I'm sure you know by now, I confirmed all your bugs this morning.

[09:59:01.0000] <AryehGregor>
TabAtkins, thanks, I guess, for what confirmation is worth.

[09:59:02.0000] <TabAtkins>
Just bug me next time you submit something and I'll confirm for you.

[09:59:03.0000] <AryehGregor>
I mean, it's not like it will get anyone to actually look at them, will it?

[09:59:04.0000] <TabAtkins>
Hey, "new" is more worth paying attention to than "unconfirmed".

[09:59:05.0000] <TabAtkins>
It means that someone with confirm permissions actually looked at it.

[10:00:00.0000] <AryehGregor>
For comparison, this is how the Mozilla bug I filed last night got treated: https://bugzilla.mozilla.org/show_bug.cgi?id=636336

[10:00:01.0000] <TabAtkins>
I don't think it's fair to compare *anyone* to bz. ^_^

[10:01:00.0000] <TabAtkins>
I'm relatively convinced that bz is a supercomputing cluster somewhere in the northwest.

[10:06:00.0000] <AryehGregor>
I thought he's in the Boston area.

[10:06:01.0000] <TabAtkins>
...How did I say "west"?  I was explicitly thinking about boston.

[10:08:00.0000] <Rik`>
TabAtkins: after reading http://my.opera.com/hallvors/blog/2011/02/18/10-years, I checked the same numbers for bz in bugzilla

[10:09:00.0000] <Rik`>
TabAtkins: he is CCed on something like 45 000 bugs

[10:10:00.0000] <AryehGregor>
How many did he report?

[10:11:00.0000] <gsnedders>
I'd say it's partly a matter of how much bugmail you like coping with :P

[10:11:01.0000] <Rik`>
AryehGregor: "only" 3081

[10:11:02.0000] <AryehGregor>
Whee.

[10:12:00.0000] <TabAtkins>
I'm telling you - supercomputing cluster.

[10:13:00.0000] <Rik`>
and assignee on 3001 bugs

[10:13:01.0000] <AryehGregor>
apt-get install --reinstall ttf-ubuntu-font-family fixed my "bold Ubuntu font is boxes" problem, by the way.

[10:13:02.0000] <AryehGregor>
See, Linux is easy.

[10:13:03.0000] <AryehGregor>
The obvious solution worked fine.

[10:13:04.0000] <AryehGregor>
(it's a pretty nice font, by the way)

[10:13:05.0000] <AryehGregor>
/me gets to work

[10:13:06.0000] <bfrohs>
/me loves Ubuntu font

[10:15:00.0000] <jgraham>
/me hadn't seen Hallvord's blog post

[10:15:01.0000] <jgraham>
But Hallvord is awesome

[10:15:02.0000] <Rik`>
TabAtkins: is there a support number I should call when this cluster doesn't comment on my bugs under 30 minutes ?

[10:17:00.0000] <TabAtkins>
Sorry, Moz doens't do phone support anymore.

[10:17:01.0000] <TabAtkins>
But you can connect to a live chat rep and ask for bz to be rebooted.

[10:20:00.0000] <AryehGregor>
Oh, I figured out what broke my page only in Firefox and Opera.  I was using strict mode and assigning to an undeclared variable.

[10:20:01.0000] <AryehGregor>
. . . Why didn't that show up in the console until now?  Oh well.

[10:21:00.0000] <aho>
jslint would have mentioned it

[10:21:01.0000] <aho>
;)

[10:23:00.0000] <carlocci>
why doesn't input type="range" allow you to pick a range of values?

[10:23:01.0000] <TabAtkins>
Because that's not what it's designed for.

[10:23:02.0000] <carlocci>
shouldn't it be called input type="slider"?

[10:23:03.0000] <TabAtkins>
It lets you pick a value from a range.

[10:24:00.0000] <carlocci>
yes, but for example, input type="number" lets me pick a number, "date" lets me pick a date

[10:24:01.0000] <aho>
elsewhere these things are called slider and range slider

[10:25:00.0000] <aho>
so yea, "slider" would have been a better name

[10:26:00.0000] <carlocci>
oh, ok so it's just a slider after all

[10:27:00.0000] <carlocci>
thank you TabAtkins, aho

[10:27:01.0000] <gsnedders>
AryehGregor: That wouldn't cause it to break in Opera; we don't support strict mode.

[10:27:02.0000] <AryehGregor>
Yeah, I figured out a second reason it broke.

[10:27:03.0000] <AryehGregor>
I was assuming window.getSelection() and document.getSelection() returned the same thing, per spec.

[10:28:00.0000] <AryehGregor>
In fact, in Firefox and Opera, document.getSelection() returns the stringification of window.getSelection().

[10:30:00.0000] <gsnedders>
Assuming stuff follows the spec when testing the spec is a bad idea.

[10:33:00.0000] <AryehGregor>
I'm writing a different spec.

[10:34:00.0000] <AryehGregor>
Which happens to be related to DOM Range.

[10:34:01.0000] <AryehGregor>
I could have written a full test suite for DOM Range before starting on execCommand(), I guess?

[10:38:00.0000] <AryehGregor>
Ugh, CSSOM implementations are a mess.

[10:57:00.0000] <TabAtkins>
Okay, I should just switch to always using live dom viewer instead of data urls.

[10:59:00.0000] <AryehGregor>
Data URLs are easier to copy and paste.

[10:59:01.0000] <TabAtkins>
live dom viewer creates them for you.

[11:00:00.0000] <TabAtkins>
(The "Rendered View" header is a link to a data url of the page.)

[11:16:00.0000] <jwalden>
gsnedders: as far as I know only Mozilla's implemented the arity restrictions for accessors

[11:16:01.0000] <jwalden>
gsnedders: no complaints that I can remember so far

[11:16:02.0000] <TabAtkins>
You two need to quit having half your conversations off-room.

[11:16:03.0000] <jwalden>
TabAtkins: no, I'm just way behind on scrollback

[11:16:04.0000] <jwalden>
TabAtkins: that was from 16:00ish yesterday, I think

[11:17:00.0000] <jwalden>
gsnedders: you should make sure to test for {get 1() { } } and { set "string literal"(v) { } } and { get 3.141592654() { } } as well, since those are all things nobody ever supported before es5 said to, I think

[11:18:00.0000] <jwalden>
[16:55] <gsnedders> Can anyone see if http://stuff.gsnedders.com/es/getterparsing.html passes in recent WebKit nightlies? (not Chrome)

[11:18:01.0000] <TabAtkins>
I don't feel like trying to back-convert your local time to mine.

[11:18:02.0000] <TabAtkins>
/me hates time zones SO MUCH.

[11:19:00.0000] <jwalden>
well, the conversion is the identity conversion unless you're out of the bay area right now

[11:19:01.0000] <jwalden>
http://krijnhoetmer.nl/irc-logs/whatwg/20110224#l-135 was a better idea probably

[11:19:02.0000] <TabAtkins>
Ah, kk.

[11:20:00.0000] <aho>
TabAtkins, beats were a good idea

[11:20:01.0000] <TabAtkins>
aho: The best idea.

[11:21:00.0000] <TabAtkins>
Everyone in the world knows what I mean why I say "I'm making this statement at @851".

[11:21:01.0000] <Philip`>
Just use UTC

[11:21:02.0000] <TabAtkins>
s/why/when/

[11:21:03.0000] <Philip`>
then there's no timezones and people won't think you're entirely insane

[11:21:04.0000] <TabAtkins>
Bah.  Millidays!

[11:22:00.0000] <Philip`>
Is that a restaurant?

[11:22:01.0000] <TabAtkins>
s/d/w/

[11:22:02.0000] <Philip`>
Ah, right

[11:23:00.0000] <aho>
d=new Date;b=~~((((d.getUTCHours()+1)%24)*3600+d.getMinutes()*60+d.getSeconds()+d.getMilliseconds()/1E3)/86.4);

[11:24:00.0000] <aho>
@853 it is :>

[11:24:01.0000] <TabAtkins>
I have the current beat at xanthir.com, so it's easy for me to tell.  ^_^

[11:24:02.0000] <aho>
heh

[11:29:00.0000] <gsnedders>
jwalden: We do for getters, but not for setters. The TC was just meant to check for arguments, which is why it doesn't test anything else.

[11:29:01.0000] <gsnedders>
jwalden: And I believe we do now for setters as well

[11:30:00.0000] <gsnedders>
jwalden: (though not shipped yet)

[11:30:01.0000] <jwalden>
cool

[11:30:02.0000] <gsnedders>
(the inconsistency was always a bug)

[11:30:03.0000] <jwalden>
and the same spot as us, if you consider "shipped" as in "release"

[11:30:04.0000] <jwalden>
stable, not beta

[12:17:00.0000] <AryehGregor>
Okay, so . . . what font does something get displayed in if its font-family evaluates to something that produces no usable fonts?  E.g., font-family: ""?

[12:17:01.0000] <AryehGregor>
The spec doesn't seem to say.

[12:19:00.0000] <bfrohs>
/me believes it is inherited from the parent

[12:19:01.0000] <AryehGregor>
Yeah, seems so.

[12:31:00.0000] <TabAtkins>
AryehGregor: The algorithm is defined in 15.2.  When none of the fonts can be used, you fall back to a UA-dependent font family.

[12:31:01.0000] <TabAtkins>
In other words, it's strictly undefined.

[12:31:02.0000] <AryehGregor>
That's so typical of CSS.

[12:32:00.0000] <TabAtkins>
s/typical of CSS/typical of CSS 2.1/

[12:32:01.0000] <TabAtkins>
There are still places in CSS3 where we have to give up and say "UA-defined" due to legacy constraints, but they should be very rare.

[12:33:00.0000] <AryehGregor>
Most of CSS 3 is about as vague as CSS 2.1, in my experience.

[12:33:01.0000] <AryehGregor>
Lots of it is copy-pasted from CSS 2.1 with new features added, in fact.

[12:33:02.0000] <TabAtkins>
Then complain, please.  We do rewrite things when they are pointed out to be too vague.

[12:34:00.0000] <AryehGregor>
I'll keep that in mind.

[12:58:00.0000] <rgervais_>
can we do this?

[12:58:01.0000] <rgervais_>
oh sorry nevermind

[12:59:00.0000] <aho>
you can do eeeeet

[13:09:00.0000] <rgervais_>
<input type="submit" /> or <button type="submit"></button> which one and why

[13:09:01.0000] <AryehGregor>
Either one's fine.  Button can have markup in it.

[13:10:00.0000] <TabAtkins>
If you need the display power of <button>, use it.  Otherwise, use whichever you want, because they're perfectly equivalent.

[13:10:01.0000] <rgervais_>
ok thanks

[13:10:02.0000] <rgervais_>
when you say "display power" what do you mean specifically?

[13:10:03.0000] <TabAtkins>
I mean what Aryeh said.

[13:11:00.0000] <rgervais_>
oh my bad, what do you guys mean "markup" then?

[13:11:01.0000] <TabAtkins>
<button>I have <b>bold</b> text in my label.</button>.

[13:12:00.0000] <rgervais_>
got it, you know what's funny

[13:12:01.0000] <rgervais_>
you used <b>

[13:12:02.0000] <TabAtkins>
Plus, the label on a <button> is distinct from the submit value, while <input type=submit> has them the same.

[13:12:03.0000] <TabAtkins>
Yes?

[13:12:04.0000] <rgervais_>
shouldn't it be <strong>

[13:12:05.0000] <TabAtkins>
I'm bolding the text, not strongly emphasizing it, so no.

[13:13:00.0000] <rgervais_>
I remember you guys saying don't use b as that is presentational

[13:13:01.0000] <TabAtkins>
Don't use <b> for presentational purposes, sure.  <b> has a meaning.

[13:13:02.0000] <rgervais_>
gotcha, so what's it meaning then

[13:14:00.0000] <TabAtkins>
It means "this text is traditionally bolded in print contexts, but there is no element with the specific semantics I want to express".

[13:14:01.0000] <TabAtkins>
Same with <i>.

[13:15:00.0000] <rgervais_>
interesting...

[13:15:01.0000] <rgervais_>
thanks appreciate the explanation

[13:16:00.0000] <TabAtkins>
The distinction is more important for <i>, as there are several elements that italicize things by default, like <em> and <cite>.  The only element that bolds things by default is <strong> (and headings, but they do more stuff).

[13:16:01.0000] <TabAtkins>
So like, if you're writing a species's scientific name, which is traditionally italicized, use <i>.

[13:17:00.0000] <TabAtkins>
Or, if you're making a GUI text editor and want a button that italicizes things, it's probably appropriate to use <i> in its label.  ^_^

[13:17:01.0000] <hober>
or the name of a ship

[13:18:00.0000] <hober>
etc.

[13:18:01.0000] <TabAtkins>
<button><i>&lt;i></i></button>

[13:18:02.0000] <hober>
personally, I always try to annotate <b> and <i> with a class="" value that expresses the italic-giving or bold-giving semantic

[13:18:03.0000] <hober>
so <i class="ship">Enterprise</i>

[13:19:00.0000] <hober>
but that's just personal preference

[13:19:01.0000] <alystair>
augh floats from hell in this design I'm working on, how many hours should you waste before reverting to display:table magic? :P

[13:19:02.0000] <TabAtkins>
display:table is a tool you should reach for *first*, not as a last resort.  Float-based layouts are the devil.

[13:20:00.0000] <alystair>
THANK GOD

[13:20:01.0000] <alystair>
freeeeeedom

[13:20:02.0000] <rgervais_>
it's interesting you guys say this because a number of you said <i> and <b> shouldn't be used anymore in HTML5. and use css for it

[13:20:03.0000] <TabAtkins>
Remember: using <table> for layout is bad, because you're not writing tabular data.  Using display:table for layout is good, because a grid-based constraint layout system is useful.

[13:20:04.0000] <rgervais_>
and i'm not against <i> and <b> just interesting

[13:20:05.0000] <alystair>
I like minimal tags, helps me write my code quicker, I'm a fan of <q> personally :)

[13:21:00.0000] <TabAtkins>
rgervais_: Opinions differ.  HTML defines <i> and <b> as conforming elements with the meaning I talked about.

[13:21:01.0000] <rgervais_>
TabAtkins: yea I got that

[13:21:02.0000] <TabAtkins>
alystair: Just remember that display:table doesn't work in IE7 or earlier.  If that's a problem, then you're stuck, but otherwise have fun.

[13:23:00.0000] <TabAtkins>
rgervais_: I can't read your username without mentally filling in "Ricky".  Do you just happen to share the same last name and first initial?

[13:24:00.0000] <rgervais_>
TabAtkins: heh of course, I'm just a huge fan of "The Ricky Gervais Show"

[13:24:01.0000] <rgervais_>
and karl pilkington

[13:24:02.0000] <TabAtkins>
Ah, kk.

[13:24:03.0000] <rgervais_>
of course not**

[13:29:00.0000] <rgervais_>
Karl Pilkington said something like... people who exercise live longer and but he disagrees because a tortoise live 200 something years doing nothing and will have less heart attacks that way

[13:29:01.0000] <rgervais_>
hilarious

[13:29:02.0000] <rgervais_>
anyway back to coding.. can I ask more questions?

[13:29:03.0000] <TabAtkins>
NO

[13:30:00.0000] <rgervais_>
alright

[13:30:01.0000] <TabAtkins>
(yes)

[13:30:02.0000] <rgervais_>
lol here it is.. when's the right time to use <article>

[13:31:00.0000] <zewt>
walk through <article>a</article> door

[13:31:01.0000] <TabAtkins>
When you have a <section>, but it qualifies as "independent" - that is, it's the sort of thing that may be appropriate to link direclty to, or view all by itself.

[13:31:02.0000] <aho>
if it's an article, blog post, individual comments... that kind of thing

[13:31:03.0000] <TabAtkins>
In the blog use-case, the blogpost itself is an article, as is each comment.

[13:31:04.0000] <aho>
:]

[13:34:00.0000] <rgervais_>
gotcha

[13:40:00.0000] <rgervais_>
well that's it for now, thanks again guys

[14:03:00.0000] <zewt>
AryehGregor: "the website continues to have a problem" <- heh, reminds me of the "Vista-compatible" spin, as if Vista breaking applications was the application's fault

[14:05:00.0000] <bfrohs>
zewt: Well, it didn't work in Microsoft's favor. Instead, people refused to use Vista and stuck with XP :P

[14:05:01.0000] <zewt>
i still use XP, but for different reasons, heh

[14:06:00.0000] <zewt>
(I'm not Win7-compatible)

[14:07:00.0000] <bfrohs>
Bummer, Windows 7 is pretty good (in comparison to past versions of Windows). Still prefer Ubuntu though.

[14:07:01.0000] <zewt>
just a lot of UI breakage that I don't want a lot of time figuring out how to work around

[14:07:02.0000] <TabAtkins>
I've stuck with XP because my 8-year-old laptop can't run Win7.  The desktop I'm building this spring will be Win7, though.

[14:08:00.0000] <TabAtkins>
...my laptop is a third my age.

[14:08:01.0000] <TabAtkins>
...my laptop is older than my marriage.

[14:08:02.0000] <AryehGregor>
zewt, I don't think that's actually fair.  It's not like they can realistically avoid breaking compatibility with a lot of apps.  Windows maintains much better compatibility across versions than any other major OS.

[14:08:03.0000] <bfrohs>
TabAtkins: Let's hope your marriage lasts longer than that laptop ;)

[14:08:04.0000] <TabAtkins>
Yeah, there is just a *fuckton* more apps written for Windows than anything else, so there's much more badly-written apps as well.

[14:09:00.0000] <TabAtkins>
bfrohs: Well, I'm dumping my laptop in a few months, and I don't plan to dump my wife anytime soon...

[14:09:01.0000] <zewt>
AryehGregor: that's not the objection--rather, 1: there was no deprecation process for people to update in advance, and 2 (more to the point of the above): they tried to pass off the problem as a flaw in the application, rather than something Vista caused

[14:10:00.0000] <TabAtkins>
zewt: The problem was very commonly a flaw in the application.

[14:10:01.0000] <TabAtkins>
I don't know if I can express how badly written many Windows apps are.

[14:10:02.0000] <AryehGregor>
Yes, a lot of them are in fact apps relying on undefined behavior and such.

[14:10:03.0000] <TabAtkins>
Your position is roughly equivalent to the justification that businesses make for staying with IE6.

[14:10:04.0000] <AryehGregor>
Of course, maybe Windows should have less undefined behavior.

[14:10:05.0000] <bfrohs>
Hey, that's sounds like a lot of websites out there... haha

[14:11:00.0000] <AryehGregor>
But I remember seeing the Wine bug for Dungeon Keeper once.

[14:11:01.0000] <zewt>
is there an equivalent to godwin's law for drawing comparisons to IE6? heh

[14:11:02.0000] <AryehGregor>
. . . well, I guess that's not relevant.

[14:12:00.0000] <TabAtkins>
Dammit, why was CSS not designed to handle orthogonal flows from the start?

[14:12:01.0000] <TabAtkins>
Answer: because it's hard, and there wasn't sufficient demand.

[14:12:02.0000] <TabAtkins>
Objection: But I don't like it!  [whine]

[14:14:00.0000] <TabAtkins>
Worst case scenario: horizontal writing-mode contains a vertical flexbox with both horizontal and vertical children.

[14:16:00.0000] <annevk>
oh sweet

[14:16:01.0000] <annevk>
Microsoft objects to publishing DOM Core

[14:17:00.0000] <TabAtkins>
Yeah, that seemed... interesting.

[14:17:01.0000] <zewt>
microsoft will not condone any attempt to make APIs comprehensible

[14:18:00.0000] <annevk>
During the F2F they were not against... Not really sure what this is about.

[14:19:00.0000] <TabAtkins>
I don't understand the objection about "professional" wording.  Do they think that that line in the spec is an insult, rather than an ordinary MUST requirement?

[14:20:00.0000] <annevk>
Did they miss the red marker directly following it?

[14:20:01.0000] <annevk>
I thought Adrian had a sense of humor

[14:20:02.0000] <TabAtkins>
No, they mention issue 172.

[14:21:00.0000] <annevk>
yes, that is what the red marker links to

[14:21:01.0000] <TabAtkins>
Yeah, I'm just saying that they obviously didn't miss the red marker, then.

[14:35:00.0000] <hober>
annevk: it's odd that he cites your mail, but there were never any replies to your mail

[14:41:00.0000] <annevk>
yeah, it would be great if he/they said something back then

[14:42:00.0000] <annevk>
having the discussion tied to publication is just boring

[14:42:01.0000] <annevk>
well, annoying

[14:42:02.0000] <othermaciej>
what's MS objecting to exactly?

[14:43:00.0000] <annevk>
publishing DOM Core

[14:45:00.0000] <annevk>
I guess it's good that at least someone spoke up

[14:47:00.0000] <annevk>
I had expected a few more comments from people working on DOM Level 3 Events

[14:47:01.0000] <annevk>
Like how this approach is worse or some such. Or that I reverse engineered something utterly wrong.

[14:48:00.0000] <annevk>
Not really in the trend of "must be useless" is inappropriate and that "2" should really be a "3" though...

[14:48:01.0000] <zewt>
no comments at all from them seems to suggest that they're ... not paying attention, heh

[14:49:00.0000] <annevk>
Pretty good email filters then

[14:50:00.0000] <dydx>
annevk: Hi. I am working to implement offset{Left, Top, Width, Height} for <col>s and <colgroup>s in WebKit (https://bugs.webkit.org/show_bug.cgi?id=15277).

[14:50:01.0000] <dydx>
annevk: I've briefly read through CSSOM draft, <http://dev.w3.org/csswg/cssom-view> and am unclear what the values for offset{Left, Top, Width, Height} should be for row-groups, columns, and column groups.

[14:51:00.0000] <dydx>
annevk:  In particular, what the value of these properties should be for the latter two. Can you clarify <http://dev.w3.org/csswg/cssom-view/#offset-attributes>?

[14:55:00.0000] <dydx>
annevk: The draft does not explicitly define the phrase "CSS layout box".

[14:55:01.0000] <annevk>
dydx, yeah, mostly because CSS doesn't

[14:55:02.0000] <annevk>
I would have expected <col> and <colgroup> to not really represent a box of their own

[14:56:00.0000] <TabAtkins>
They have backgrounds, so they have a box.

[14:56:01.0000] <annevk>
but if they do represent a box, the column / and column box

[14:56:02.0000] <annevk>
they have edges and everything should be clear, no?

[14:57:00.0000] <dydx>
annevk: Section 17.2.1 of the CSS 2.1 spec. <http://www.w3.org/TR/CSS21/tables.html#anonymous-boxes> implies columns and column groups have boxes, but by section 17.3  though they conform to a more restrictive CSS box model. http://www.w3.org/TR/CSS21/tables.html#columns

[14:58:00.0000] <annevk>
CSS is such a sucky spec

[14:58:01.0000] <TabAtkins>
Everything surrounding tables is crap, definitely.  >_<

[14:58:02.0000] <annevk>
if it actually properly defined what was being "created" quering it wouldn't be so damn complex

[14:58:03.0000] <annevk>
or damn complex to define

[14:58:04.0000] <dydx>
TabAtkins: <http://www.w3.org/TR/CSS21/tables.html#columns> seems to imply that columsn and colmn gourps only influence the table cells

[14:58:05.0000] <annevk>
because at this point CSSOM is all about plugging holes in CSS

[14:59:00.0000] <annevk>
yeah, they're not really boxes after all

[14:59:01.0000] <dydx>
:-(

[14:59:02.0000] <annevk>
so if you don't want zero you need special behavior like you said

[14:59:03.0000] <TabAtkins>
dydx: Yeah, brain fart on my side.  <col> and <colgroup> don't really generate boxes.

[15:00:00.0000] <annevk>
dydx, I suggest emailing www-style⊙wo

[15:00:01.0000] <jgraham>
annevk: "must be useless" is a pretty hard to grok requirement

[15:00:02.0000] <jgraham>
I wouldn't know how to test it

[15:00:03.0000] <dydx>
annevk: That is what I thought was being implied.

[15:00:04.0000] <annevk>
dydx, I really dislike editing CSSOM View for the aforementioned reasons so it might be awhile I suppose :/

[15:00:05.0000] <annevk>
jgraham, right, it has a red blob

[15:00:06.0000] <dydx>
annevk: Do row-groups have boxes?

[15:00:07.0000] <annevk>
dydx, those do I think

[15:01:00.0000] <TabAtkins>
Yes, they do.

[15:01:01.0000] <annevk>
/me reads a bit more

[15:01:02.0000] <jgraham>
annevk: Right, so it seems you should solve the objection by saying "must be zero [TODO: is this what we want here?]"

[15:01:03.0000] <zewt>
IMO, better to just say "TODO" and not put in a placeholder that we definitely don't want

[15:02:00.0000] <jgraham>
Do we know we don't want it to be 0?

[15:02:01.0000] <annevk>
jgraham, it seems like people should appreciate a bit of humor with issues that are clearly open

[15:02:02.0000] <annevk>
jgraham, yes

[15:02:03.0000] <jgraham>
Oh, Ok well put in a sensible option

[15:02:04.0000] <TabAtkins>
I disagree.  If there's an answer that has a reasonable chance of being right, better to write it and annotate it.

[15:02:05.0000] <annevk>
we don't know the answer

[15:02:06.0000] <zewt>
i don't think "must be 0" has a reasonable chance of being right

[15:02:07.0000] <annevk>
geez people

[15:02:08.0000] <annevk>
study the issue

[15:02:09.0000] <jgraham>
annevk: Humor in specs is dangerous

[15:03:00.0000] <TabAtkins>
Oh wait, are we talking about timestamps or column boxes?

[15:03:01.0000] <annevk>
not until Microsoft complained

[15:03:02.0000] <TabAtkins>
/me thought the latter.

[15:03:03.0000] <zewt>
yeah, it might reveal the fact that there are humans behind the specs :)

[15:03:04.0000] <jgraham>
Hixie gets away with it because people don't read what he writes closely enough to care

[15:03:05.0000] <jgraham>
Because it is so long

[15:03:06.0000] <jgraham>
And the people who do read closely don't care

[15:03:07.0000] <gsnedders>
And he mainly does it in examples.

[15:03:08.0000] <jgraham>
Yes that was the other reason

[15:04:00.0000] <dydx>
jgraham: For completeness, IE7, IE8, and IE9 in quirks mode return non-zero values ofr offsetWidth and offsetHeight (why not for offsetLeft and offsetTop?) for <col>s and <colgroups>. And offset{Left, Top, Width, Height} are Microsoft extensions

[15:04:01.0000] <jgraham>
dydx: I thought I was talking about currentTime

[15:04:02.0000] <zewt>
we need threaded IRC clients

[15:04:03.0000] <jgraham>
But I am quite surprised that no one has complained about the </sarcasm> thing yet

[15:05:00.0000] <gsnedders>
jgraham: That's too well hidden.

[15:05:01.0000] <jgraham>
I mean we probably need an ISSUE- and a set of change proposals and everything

[15:05:02.0000] <zewt>
writing a test set for sarcasm sounds entertaining

[15:05:03.0000] <jgraham>
zewt: That was called Google Wave

[15:05:04.0000] <annevk>
dydx, sounds kind of odd

[15:05:05.0000] <jgraham>
and it sucked

[15:05:06.0000] <zewt>
ouch

[15:05:07.0000] <jgraham>
I mean threaded IRC

[15:05:08.0000] <annevk>
dydx, Microsoft has aligned with the spec before... but if you want it to be different just raise it on the mailing list

[15:05:09.0000] <jgraham>
Not a test for sarcasm

[15:05:10.0000] <zewt>
heh :P

[15:06:00.0000] <jgraham>
All UAs fail the <sarcasm> test since none takes a deep breath

[15:06:01.0000] <annevk>
dydx, this is a great start, but I'm not editing that spec at the moment so I might forget about it

[15:06:02.0000] <dydx>
annevk: Well, it looks like Microsoft has changed how these properites behave in standards mode such that they all return 0.

[15:06:03.0000] <jgraham>
In fact since breating is clearly device specific it has no place in a HTML spec

[15:07:00.0000] <jgraham>
*breathing

[15:07:01.0000] <dydx>
annevk: I don't have a strong objection to them being zero since they aren't consider boxes.

[15:07:02.0000] <gsnedders>
jgraham: I believe I made that argument in IRC when implementing it before.

[15:07:03.0000] <dydx>
annevk: I just wanted to make sure I was understanding the CSSOM spec, correcty with regards to "CSS layout box"

[15:08:00.0000] <jgraham>
When we get a CSS media for androids (i.e. humanoid robots) presumably there will be properties to control their breathing

[15:09:00.0000] <jgraham>
Anyway now I hav made the point in IRC, and knowing that many of the people who like to raise ISSUEs read the logs, I expect a bug by the morning and a request to escalate by the end of the month

[15:10:00.0000] <annevk>
dydx, I see; I guess I'll email myself saying to make that clearer

[15:10:01.0000] <annevk>
dydx, i.e. that column column-box does not give you a layout box or some such

[15:10:02.0000] <hober>
/me was seriously considering implementing </sarcasm>'s deep breath as (message "Taking a deep breath...") in the elisp parser

[15:10:03.0000] <TabAtkins>
hober: You didn't?

[15:11:00.0000] <hober>
TabAtkins: I haven't built the parser yet

[15:11:01.0000] <hober>
I'll let you know what I do when I get to it

[15:11:02.0000] <hober>
(I only have the tokenizer built at this point, and that needs some retooling before it'll really be useful)

[15:11:03.0000] <dydx>
annevk: Notice, Firefox returns non-zero values for these properties. I also have a test case on the bug <https://bug-15277-attachments.webkit.org/attachment.cgi?id=83230> which can be used to compare the behavior in various browsers.

[15:12:00.0000] <annevk>
yeah, CSS is a big mess :)

[15:12:01.0000] <annevk>
I included a link to the logs in my email to myself

[15:12:02.0000] <dydx>
annevk: I am unclear from this disucssion, do you even want to consider having these offset properties return non-zero values for columns and column-groups?

[15:12:03.0000] <annevk>
sure if you want to

[15:12:04.0000] <annevk>
but then please email www-style

[15:13:00.0000] <jgraham>
hober: I am totally depending on you for a non-sucky HTML mode for emacs

[15:13:01.0000] <jgraham>
How can I make you work faster? :)

[15:13:02.0000] <annevk>
dydx, I have no strong opinion on what anything in the spec should say, I just wanted it defined somewhere

[15:14:00.0000] <annevk>
dydx, which is also why I work on it less than other specs; most other specs are not build on something so vague

[15:14:01.0000] <annevk>
(well, the ones I edit)

[15:14:02.0000] <hober>
jgraham: convince apple it's something I should do during the day. :)

[15:15:00.0000] <jgraham>
othermaciej: You should let hober make my life better :)

[15:15:01.0000] <dydx>
annevk: OK. What would you suggest we do at this time then for <https://bugs.webkit.org/show_bug.cgi?id=15277>? I can hardcode these offset properties to return 0 for <col>s and <colgroup>s

[15:15:02.0000] <hober>
hahaha

[15:15:03.0000] <jgraham>
:)

[15:15:04.0000] <hober>
/me doesn't report to maciej

[15:15:05.0000] <jgraham>
Dammit

[15:16:00.0000] <dydx>
annevk: If you have an opinion on this. Otherwise, I'll think about it some more.

[15:16:01.0000] <hober>
but yeah, all that's been on hold during the pack / move / new job bit

[15:16:02.0000] <annevk>
dydx, aligning with Firefox might make sense

[15:16:03.0000] <jgraham>
hober: I will have to assume he is skilled at subtley manipulating the people you do work for

[15:16:04.0000] <hober>
I'm hoping to get back to it in the next month or so

[15:16:05.0000] <jgraham>
s/work for/report to/

[15:16:06.0000] <annevk>
dydx, IE was converging with their model somewhat, and so is everyone else I have the feeling

[15:16:07.0000] <dydx>
annevk: OK. Then for your reference, this will be incompatible with both CSSOM and Opera

[15:16:08.0000] <annevk>
right

[15:16:09.0000] <jgraham>
hober: Seriously though, I look forward to it when it's done

[15:16:10.0000] <hober>
jgraham: well, he does chair a w3c wg, so clearly subtley manipulating things is high on his skill list :)

[15:17:00.0000] <hober>
yeah, me too

[15:17:01.0000] <annevk>
dydx, could you still please email www-style? :)

[15:17:02.0000] <jgraham>
And I totally understand moving/changing jobs/etc. killing side projects at least in the short term

[15:18:00.0000] <dydx>
annevk: sure, I can start a conversation about it on the list.

[15:18:01.0000] <annevk>
thanks

[15:18:02.0000] <annevk>
bedtime for me

[15:18:03.0000] <dydx>
annevk: thanks for your time

[15:21:00.0000] <hober>
jgraham: 22 boxes to go, and we'll be fully unpacked

[15:30:00.0000] <jgraham>
hober: You should paint them green and sit them on the wall

[15:30:01.0000] <TabAtkins>
Alternately: paint them cobblestone and do real-life minecraft.

[15:31:00.0000] <hober>
I'll run those plans by my wife and let you know what she says. :)

[15:38:00.0000] <Philip`>
hober: Implementing </sarcasm> is dangerous

[15:39:00.0000] <Philip`>
WebKit had a parser bug due to </sarcasm>, and if someone else implements it and has a bug then that'll be strong evidence that humour in specs is harmful :-(

[15:39:01.0000] <gsnedders>
Philip`: What bug?

[15:40:00.0000] <TabAtkins>
The instruction is "treat like an unrecognized tag", so I'm confused as to how that can cause a parser bug.

[15:41:00.0000] <Philip`>
They didn't treat it like an unrecognised tag

[15:41:01.0000] <Philip`>
https://bugs.webkit.org/show_bug.cgi?id=45645

[15:41:02.0000] <gsnedders>
They took a deep breath and did nothing?

[15:41:03.0000] <TabAtkins>
Then they didn't follow the spec.

[15:41:04.0000] <Philip`>
(Does html5lib have a test case for this?)

[15:42:00.0000] <zewt>
this is perhaps my single favorite browser ticket: http://code.google.com/p/chromium/issues/detail?id=62435

[15:42:01.0000] <gsnedders>
Philip`: If Adam pushed his test upstream, yes.

[15:45:00.0000] <gsnedders>
Philip`: Yes, he did.


2011-02-25
[16:17:00.0000] <alystair>
paul_irish: html5-boilerplate's .htaccess should have notes about servers utilizing Google Page Speed Apache module as it may severely interfere and/or confuse developers :)

[16:17:01.0000] <alystair>
http://code.google.com/speed/page-speed/

[16:29:00.0000] <ap>
Hixie: why does <http://dev.w3.org/html5/websockets/> link to <http://www.whatwg.org/specs/web-socket-protocol/> in status section? is it just a mistake?

[16:42:00.0000] <Hixie>
ap: yeah

[16:43:00.0000] <ap>
Hixie: there goes my hope that we don't need SHA-1

[16:43:01.0000] <Hixie>
hm?

[16:44:00.0000] <ap>
Hixie: nothing really. the IETF version feel awfully complicated to me, but I haven't been following the discussion to be qualified to judge it

[16:46:00.0000] <Hixie>
ah yeah. me either.

[16:46:01.0000] <Hixie>
websockets has pretty much convinced me that the ietf doesn't know how to write web standards

[16:47:00.0000] <Hixie>
live and learn

[16:50:00.0000] <Dashiva>
Isn't using SHA-1 a bit old hat?

[17:17:00.0000] <Dashiva>
I'm clearly staying up too late and delirious, because I could swear I saw a change proposal about longdesc

[17:18:00.0000] <Hixie>
wasn't that issue just reopened?

[17:19:00.0000] <Dashiva>
Seems so

[17:19:01.0000] <Dashiva>
Not that anything seems to have changed, except for the amount of text

[17:21:00.0000] <Hixie>
dunno, i'll have to read their new information

[17:22:00.0000] <Dashiva>
"Recent research finds that obsoleting longdesc specifically breaks the web for over 150 sites in the wild that are using it to describe images."

[17:22:01.0000] <Hixie>
how does it break the web for them?

[17:23:00.0000] <TabAtkins>
It sounds like they're treating "breaks the web" as a talisman without understanding what it means.

[17:23:01.0000] <Hixie>
also that seems like a really broken interpretation of the term "breaks the web"

[17:23:02.0000] <Hixie>
yeah

[17:23:03.0000] <Hixie>
what tab said

[17:23:04.0000] <Hixie>
anyway i need to read their data before i can form an opinion

[17:23:05.0000] <TabAtkins>
Specifically, it doesn't mean "makes non-conformant".

[17:24:00.0000] <Hixie>
i was thinking more that "break the web" means to break "the web", i.e. a large percentage of the web

[17:24:01.0000] <Hixie>
you know, at least like 0.2% or something

[17:24:02.0000] <Dashiva>
I'm not entirely against the idea that non-conforming is to some degree breaking, but I suspect almost every one of these sites is already non-validating for other reasons

[17:25:00.0000] <Hixie>
150 sites is such a tiny number it's ridiculous

[17:25:01.0000] <Hixie>
i myself host 60 sites on my one shared server :-)

[17:25:02.0000] <Hixie>
Dashiva: "break" in the context of "break the web" means that the user experience would change

[17:26:00.0000] <TabAtkins>
No, I wouldn't support "make non-conforming" being "breaking" at all.  "Breaking" means *breaking* - some functionality that the site was depending on for correct treatment no longer works.

[17:26:01.0000] <Hixie>
Dashiva: nobody is suggesting changing the user experience for anyone

[17:26:02.0000] <TabAtkins>
s/treatment/user experience/, exactly.

[17:26:03.0000] <Dashiva>
I know that myself, but I can see normal people thinking it means they can't use it at all

[17:27:00.0000] <Dashiva>
Even just "deprecated" seems to spell doom and failure for a lot of people

[17:27:01.0000] <Hixie>
not using it in new sites is not breaking the web

[17:29:00.0000] <TabAtkins>
Dashiva: We shouldn't be having "normal people" writing change proposals.  They should be knowledgeable enough to understand how the web works.  I wouldn't expect my mom to understand the distinction, but everyone in the HTMLWG should.

[17:30:00.0000] <Dashiva>
I know that too, but normal people will write websites

[17:30:01.0000] <TabAtkins>
Sure, and they shouldn't use @longdesc.

[17:30:02.0000] <TabAtkins>
Which obsoleting the attribute suggests.  ^_^

[17:30:03.0000] <Dashiva>
Every day I see people doing silly things in their markup because of some groundless fear of deprecation or validation

[17:41:00.0000] <zewt>
<annevk> Pretty good email filters then <- *cough*

[18:34:00.0000] <boblet>
is there a short URL like http://whatwg.org/C for HTML-Living Standard?

[18:37:00.0000] <nimbupani>
http://www.whatwg.org/specs/web-apps/current-work/multipage/ is the html5 spec in whatwg

[18:39:00.0000] <boblet>
nimbupani: HTML5++ you mean :p

[18:39:01.0000] <nimbupani>
:)))

[18:39:02.0000] <boblet>
aah there tis: http://whatwg.org/html

[18:39:03.0000] <nimbupani>
aha

[18:39:04.0000] <nimbupani>
neet

[18:39:05.0000] <nimbupani>
thnx boblet

[18:40:00.0000] <boblet>
nimbupani: haven’t you heard? there ain’t no 5 no more round these here parts

[18:40:01.0000] <nimbupani>
oops :|

[18:40:02.0000] <nimbupani>
MY BAD

[18:42:00.0000] <boblet>
hmm, maybe I should write something about that… ;)

[00:06:00.0000] <Hixie>
anyone remember why we dropped inputmode from wf2?

[00:09:00.0000] <Hixie>
aha, r2220

[00:10:00.0000] <erlehmann>
why opera cannot into cross-origin? is there something wrong with CORS or have they just not bothered?

[00:41:00.0000] <annevk>
erlehmann, various people think something is wrong with CORS, but I guess you could say we have just not bothered so far

[00:41:01.0000] <erlehmann>
annevk, please bother :)

[00:41:02.0000] <erlehmann>
kthx

[00:41:03.0000] <annevk>
erlehmann, it's on the roadmap and I plan to continue fixing the spec :)

[00:42:00.0000] <erlehmann>
annevk, what *is* wrong with CORS?

[00:43:00.0000] <annevk>
well, some security researchers believe that the web security model ( http://tools.ietf.org/html/draft-abarth-principles-of-origin ) is wrong and that by entrenching it further with CORS we are making things worse

[00:43:01.0000] <annevk>
specifically, that people will design solutions with CORS that will open them up to become "confused deputies"

[00:43:02.0000] <Hixie>
MikeSmith: yt?

[00:45:00.0000] <erlehmann>
annevk, i am confused. this is duck. QUACK

[00:46:00.0000] <Hixie>
i don't understand http://www.w3.org/Bugs/Public/show_bug.cgi?id=11893

[00:46:01.0000] <Hixie>
why is the html spec the place to define how aria works in svg?

[00:47:00.0000] <Hixie>
or if that's not the proposal, why would we want multiple definitions of how to implement aria?

[00:47:01.0000] <annevk>
oh hey, Doug Schepers objects to publishing DOM Core too now

[00:47:02.0000] <zewt>
<zewt> <annevk> Pretty good email filters then <- *cough*

[00:47:03.0000] <zewt>
heh

[00:48:00.0000] <zewt>
(he's who I was surprised at not saying anything the other day...)

[00:50:00.0000] <annevk>
oh, and he's also rewriting history claiming I'm the one who's doing it

[00:50:01.0000] <zewt>
his mail seemed not-so-subtly political, so, uh, have fun I guess

[00:50:02.0000] <annevk>
I wonder if that discussion was minuted

[00:57:00.0000] <karlcow>
annevk: your css doesn't make it easy to see what is a quote and what is a prose. Maybe a border-left would help

[00:57:01.0000] <karlcow>
re: your last blog post

[01:00:00.0000] <annevk>
hmm

[01:01:00.0000] <annevk>
you have a point, but I don't really feel like addressing it now

[01:01:01.0000] <annevk>
so I found the minutes and Doug Schepers is wrong

[01:01:02.0000] <annevk>
I wonder why he didn't check them himself

[01:02:00.0000] <annevk>
if you want to make broad claims like someone attempting to rewrite history you ought to check your facts

[01:12:00.0000] <Hixie>
hey annevk

[01:12:01.0000] <Hixie>
dom core doesn't define that children are ordered

[01:13:00.0000] <Hixie>
(so e.g. the definition of "preceding sibling" is unclear)

[01:13:01.0000] <annevk>
that doesn't follow from finite hierarchical tree?

[01:14:00.0000] <Hixie>
no

[01:14:01.0000] <Hixie>
you can have unordered trees

[01:14:02.0000] <Hixie>
(e.g. nested hash tables)

[01:15:00.0000] <Hixie>
best to just explicitly say that an object has an ordered list of children

[01:15:01.0000] <Hixie>
and define things in terms of that, imho

[01:15:02.0000] <annevk>
so " finite hierarchical tree structures" -> " finite hierarchical ordered tree structures"

[01:15:03.0000] <Hixie>
i still think it'd be better to be explicit in the definition

[01:16:00.0000] <annevk>
or "An object A is a child of an object B if and only if B is the parent of A." -> "An object A is a child of an object B if and only if B is the parent of A. The children of an object are ordered."

[01:16:01.0000] <annevk>
that makes it a statement of fact; not entirely correct hmm

[01:16:02.0000] <Hixie>
i think you're better off introducing an explicit child list, something like "an object in a tree has a parent and a child list" and then define everything in terms of that

[01:17:00.0000] <Hixie>
and have that instead of "has a number of properties that other objects do not" which is a bit weak

[01:17:01.0000] <annevk>
hmm yeah, that could work

[01:17:02.0000] <annevk>
thanks

[01:18:00.0000] <Hixie>
np

[01:18:01.0000] <Hixie>
i'll probably hook into this for webvtt

[01:31:00.0000] <Hixie>
right, bed time

[01:31:01.0000] <Hixie>
nn

[01:36:00.0000] <annevk>
https://bitbucket.org/ms2ger/dom-core/changeset/d57a85905b1c

[01:42:00.0000] <zewt>
annevk: "A is called a sibling of an object B, if and only if B and A share the same parent." should that say eg. "the same non-null parent"?

[01:44:00.0000] <MikeSmith>
annevk: I obviously did not get the Notifications draft pub-ready yesterday, but I am now getting it set up for publication on Tuesday

[01:45:00.0000] <annevk>
zewt, yes

[01:45:01.0000] <annevk>
MikeSmith, cool, I'll update the WG

[01:46:00.0000] <MikeSmith>
thnks

[01:48:00.0000] <zewt>
should it also specifically prohibit cycles?

[01:48:01.0000] <zewt>
(implicit from calling it a tree, but most of that section is)

[01:49:00.0000] <zewt>
well, I guess the point of that section is defining the terms, which the cycle restriction isn't relevant to

[01:50:00.0000] <annevk>
it might be fun to define tree from first principles and that is what I wanted to do initially, but I gave up on that

[01:50:01.0000] <annevk>
I would need to learn a bit more for that I think :)

[01:52:00.0000] <karlcow>
hmm Norway has a strange effect on my sleepiness level. Lack of light?

[01:53:00.0000] <annevk>
you should go there in summer

[01:53:01.0000] <annevk>
it's crazy

[01:53:02.0000] <annevk>
zewt, required an actual parent now :)

[01:53:03.0000] <zewt>
those poor lonely root nodes

[01:54:00.0000] <annevk>
I have not needed "root" so far

[01:54:01.0000] <annevk>
there's a note in the spec about nuking it

[01:55:00.0000] <zewt>
seems rare enough that just saying "if parent is null" when needed is good enough

[01:56:00.0000] <annevk>
I'll wait for hixie to redo HTML and see what comes out of that before getting rid of it

[03:26:00.0000] <annevk>
http://xkcd.com/865/ nice

[05:01:00.0000] <MikeSmith>
annevk: Respec-tified version of Notifications draft:

[05:01:01.0000] <MikeSmith>
http://dev.w3.org/2006/webapi/WebNotifications/

[05:02:00.0000] <MikeSmith>
give it a few seconds to load

[05:02:01.0000] <MikeSmith>
there are some tweaks that still need to be done to it

[05:02:02.0000] <MikeSmith>
but I've done as much as I'm going to on it for today

[06:31:00.0000] <annevk>
MikeSmith, neat

[06:31:01.0000] <annevk>
MikeSmith, hopefully John is up for using that

[07:45:00.0000] <Hixie>
guess i'd better join webperf

[07:49:00.0000] <zcorpan>
http://www.w3.org/TR/FileAPI/#dfn-FileException - what should be the value of FileException.prototype.code ?

[07:51:00.0000] <annevk>
Hixie, yeah maybe

[07:52:00.0000] <annevk>
Hixie, re tests, that testharness is something people want to use for a bunch of tests; and I know 2xx needs updating :)

[07:52:01.0000] <annevk>
Hixie, I guess there could be more parsing tests too, feel free to add :)

[08:08:00.0000] <Hixie>
annevk: the harness and php scare me :-)

[08:08:01.0000] <Hixie>
annevk: fr(om writing tests)

[08:13:00.0000] <Ms2ger>
Hixie, jgraham would appreciate more concrete comments ;)

[08:20:00.0000] <Hixie>
Ms2ger: making the external file optional would be my main suggestion

[08:20:01.0000] <Hixie>
Ms2ger: see my commen in webapps

[08:20:02.0000] <Hixie>
bbiab

[08:21:00.0000] <Ms2ger>
That's a lot of parent.'s

[15:47:00.0000] <Hixie>
benschwarz: ping

[15:48:00.0000] <benschwarz>
pong

[15:48:01.0000] <benschwarz>
Whats up?

[15:48:02.0000] <benschwarz>
@Hixie

[15:53:00.0000] <Hixie>
hey

[15:53:01.0000] <Hixie>
sorry, been out for a few days

[15:53:02.0000] <alystair>
/me nods

[15:53:03.0000] <Hixie>
launch looks good

[15:53:04.0000] <Hixie>
you should do a blog post about it on the whatwg blog, get some more traction on it


2011-02-26
[18:12:00.0000] <eachwon>
gonna repeat my question from #html here, belongs here really

[18:14:00.0000] <eachwon>
the meta "X-UA-Compatible" doesn't validate, it's only for IE as far as i know so can i put it in conditional comments and will it work

[18:20:00.0000] <Philip`>
eachwon: Since this a standards channel, the correct answer is that you shouldn't use X-UA-Compatible at all - you should just use <!doctype html> and have the same content work in all browsers without any browser-specific hacks

[18:21:00.0000] <zewt>
not much of a real-world answer :)

[18:22:00.0000] <Philip`>
Also, you don't have to pass the validator - its goal is to help you improve the quality of your pages, and hiding browser-specific hacks inside browser-specific comments so that the validator can't see them is not improving the quality of your pages

[18:22:01.0000] <eachwon>
Philip, thanks, great answer because i didn't realise this was non-standard, starting from html5 boilerplate here. Doesn't really solve my problem though :)

[18:22:02.0000] <eachwon>
was trying the htaccess approach but server doesn't allow headers

[18:22:03.0000] <zewt>
eachwon: I generally treat validators as lint tools--to help make sure I'm not doing anything nonstandard *intentionally*, but bending over backwards to try to quiet the validator in every case is generally not a useful goal

[18:22:04.0000] <paul_irish>
eachwon: http://groups.google.com/group/html5boilerplate/browse_thread/thread/6d1b6b152aca8ed2

[18:23:00.0000] <zewt>
er, *unintentionally*

[18:23:01.0000] <zewt>
(always nice to typo an emphasized word in a way that inverts its meaning)

[18:24:00.0000] <eachwon>
paul_irish : nice !

[18:25:00.0000] <paul_irish>
eachwon: so basically yeah.. what zewt said. feel free to use it as a tool, but at the end of the day, what happens in the browser trumps what a validator says

[18:25:01.0000] <paul_irish>
and i would recommend keeping it in, regardless of the validation result

[18:27:00.0000] <eachwon>
great, thx for the info guys

[18:27:01.0000] <paul_irish>
np

[01:49:00.0000] <annevk>
Hixie, fyi, developers.whatwg.org got *a lot* of traction

[01:49:01.0000] <annevk>
Hixie, at least on twitter; maybe mainstream media will report on it once there's a "press release"...

[09:33:00.0000] <espadrine>
Wow, developers.whatwg.org now has search built-in!

[13:10:00.0000] <Ms2ger>
AryehGregor, please reference DOM Core for definitions of ASCII case-insensitive and collections

[14:34:00.0000] <Hixie>
annevk: yeah, i spoke to ben about it in /msg

[14:34:01.0000] <Hixie>
annevk: we can totally get even more once we have a blog post about it, i think

[15:35:00.0000] <annevk>
Hixie, maybe Web Applications 1.0 needs something similar: https://bitbucket.org/ms2ger/dom-core/changeset/2ecda50e4540


2011-02-27
[16:03:00.0000] <annevk>
well look at that

[16:03:01.0000] <annevk>
my feed feels to validate

[16:03:02.0000] <annevk>
I mean, it's non well-formed

[16:04:00.0000] <AryehGregor>
Neat, I didn't realize that approximating a Gaussian by box blurs works because of the central limit theorem.

[17:37:00.0000] <yuhong>
I just read Arjun Ray's articles on how browsers like Viola and Arena were ahead of Netscape back in the mid 1990s.

[17:54:00.0000] <d4t4ch17d>
hello

[17:55:00.0000] <zewt>
someone sure is channelling the mid 90s

[18:01:00.0000] <d4t4ch17d>
late 90s

[18:02:00.0000] <yuhong>
Me.

[21:24:00.0000] <MikeSmith>
/me is looking for a spec with a WebIDL interface definition that includes a definition of its constructor

[21:24:01.0000] <MikeSmith>
heycam: you around?

[21:25:00.0000] <MikeSmith>
wanted to ask you about the above

[21:25:01.0000] <MikeSmith>
trying to figure out what's the proper way to define a constructor

[21:25:02.0000] <heycam>
MikeSmith, hey. just about to head out for dinner in a minute...

[21:25:03.0000] <MikeSmith>
ok

[21:25:04.0000] <MikeSmith>
no rush

[21:26:00.0000] <heycam>
MikeSmith, XHR probably does

[21:26:01.0000] <MikeSmith>
ping me some time later if you got a minute

[21:26:02.0000] <MikeSmith>
ok

[21:26:03.0000] <MikeSmith>
will look there

[21:26:04.0000] <MikeSmith>
thanks

[21:28:00.0000] <iamjarvo>
hey guys how's it going. i am trying to blur text using canvas. any tips?

[21:51:00.0000] <zewt>
gar, painful inconsistency with mouse events when more than one button is pressed at once...

[22:41:00.0000] <aho>
i'd like to see #c -> #ccc and #ba -> #bababa

[22:41:01.0000] <aho>
who's with me? :>

[22:42:00.0000] <zewt>
if by with you you mean wants to stab you in the neck, you might find something of a crowd :P

[22:42:01.0000] <aho>
you can never have too much enterprise and soulcrusher gray

[22:42:02.0000] <aho>
<:

[22:46:00.0000] <gsnedders>
aho: web compat dictates otherwise.

[23:55:00.0000] <zewt>
the fun workarounds of interop failures: webkit (or at least Chrome) doesn't fire click events when button != 0, so I'm having to dispatch them manually from mouseup : |

[00:42:00.0000] <abarth>
zewt: that's something that's changed moderately recently

[00:42:01.0000] <abarth>
zewt: it's an example of trying to chase web site expectations

[00:42:02.0000] <abarth>
:(

[00:42:03.0000] <zewt>
well, i definitely agree with the spec that click should fire for all buttons

[00:43:00.0000] <abarth>
the problem is that causes a bad user experience on some web sites

[00:43:01.0000] <abarth>
sites register for click assuming it's left-button only

[00:43:02.0000] <abarth>
and then they do the wrong thing on a middle click

[00:43:03.0000] <zewt>
there are some things you can only do from onclick and not mouseup--at least with FF's behavior, not sure if it's to spec or not

[00:43:04.0000] <abarth>
e.g., open a new window in the foreground instead of the background

[02:03:00.0000] <erlehmann>
i am pleased. http://www.dradio.de/wir/ogg/

[02:03:01.0000] <erlehmann>
“the audio element is also available in safari, but the vendor does not support ogg”

[02:03:02.0000] <erlehmann>
hehehe

[05:38:00.0000] <jeromegn>
I'd be interested to see a specification for efficient bi-directional communications :) I saw JSend this morning (http://labs.omniti.com/labs/jsend) but it only talks about the response, I'd love a nice spec for the request too. Without HTTP, websocket is free to be used however, but that leads me to wondering what's an efficient way to do so.

[05:38:01.0000] <jeromegn>
any pointers would be appreciated :)

[07:58:00.0000] <iamjarvo>
is it possible to blu text using canvas? example like this http://cl.ly/1C0S0z2O091f1M3P1Q1V

[07:59:00.0000] <iamjarvo>
blur*

[08:00:00.0000] <Ms2ger>
insertAdjacentElement, really?

[08:01:00.0000] <Philip`>
iamjarvo: You can do a simple Gaussian blur using shadows (draw the text off-screen and offset the shadow back onto the screen)

[08:01:01.0000] <Philip`>
For anything more complex you probably need to implement the blur yourself using getImageData/putImageData

[08:02:00.0000] <iamjarvo>
Philip`:  so for your first choice would I need two versions of the same string?

[08:06:00.0000] <Philip`>
iamjarvo: You just do http://goo.gl/AlcpV

[08:10:00.0000] <iamjarvo>
Philip`:  thanks playing with it to see if i can do it

[08:15:00.0000] <iamjarvo>
Philip`:  thanks! it works. so if i were to want to add a hover to change the color is it true that it would have to be redrawn each time? how does this work if there were 100 words in the box, i would imagine it would get really slow

[08:19:00.0000] <Ms2ger>
You could have two canvases, I guess


2011-02-28
[20:56:00.0000] <zewt>
bleh

[20:56:01.0000] <zewt>
is it bad that IE has gone from "damn you for not following the spec, IE" to "damn you for following the spec, IE"

[20:57:00.0000] <zewt>
stop making me feel bad for IE developers

[20:57:01.0000] <tw2113>
just odd cause we're so used to damning them from not

[23:21:00.0000] <zewt>
... anyone happen to know if the return value of IE9's dispatchEvent is broken (always returns true)? wondering if I'm just going crazy, heh

[23:22:00.0000] <zewt>
or maybe this is an old beta

[23:39:00.0000] <annevk>
oh look, WHATWG Weekly day

[23:43:00.0000] <zewt>
annevk: trying to figure out actual browser behavior re: resetting stop propagation/canceled flag; much headaches ensue

[23:44:00.0000] <zewt>
can't seem to find a way to test whether the default handler was actually run, that works in all browsers

[23:45:00.0000] <zewt>
the return value of dispatchEvent seems to always be true in IE9; and the return value of dispatchEvent and the value of getPreventedDefault() in FF don't always match

[23:46:00.0000] <annevk>
yeah

[23:46:01.0000] <annevk>
I had the same results

[23:46:02.0000] <zewt>
oh... checking for onhashchange after clicking a hash link (which I thought wasn't working in FF, but that's because FF isn't firing the default at all for synthesized clicks)

[23:46:03.0000] <annevk>
well, I didn't test IE

[23:46:04.0000] <zewt>
(that's what I was doing, then I got confused at FF's behavior)

[23:46:05.0000] <annevk>
but I was confused too so I thought we could go with something saner :)

[23:46:06.0000] <zewt>
well, it's a problem that Core and Events are mismatched on this

[23:47:00.0000] <annevk>
I do think now that maybe propagation flags should be cleared after dispatching and canceled before

[23:47:01.0000] <zewt>
right now, in all browsers (I think), you can event.stopPropagation and event.preventDefault an event before dispatching, to cause it to only fire the default or to only dispatch event handlers

[23:48:00.0000] <annevk>
if you call stop propagation it's never dispatched

[23:48:01.0000] <zewt>
but the default will still happen

[23:49:00.0000] <zewt>
(if it's allowed for the non-trusted event, of course)

[23:49:01.0000] <annevk>
I guess that is true...

[23:49:02.0000] <annevk>
because dispatchEvent will still return and such

[23:49:03.0000] <annevk>
but it's also really weird

[23:49:04.0000] <annevk>
so maybe clearing before is saner

[23:49:05.0000] <zewt>
but is it worth being mismatched with all current browsers?

[23:50:00.0000] <annevk>
maybe

[23:51:00.0000] <zewt>
by clearing after (as Events does), it matches current browsers, allows the (admittedly obscure) case of cancelling/preventDefaulting before dispatch, and brings the two specs into agreement...

[23:52:00.0000] <zewt>
FYI, in IE9 defaultPrevented *is* always false after dispatch completes (which is the result of clearing after)--but that may or may not be intentional (as I said, dispatchEvent's return value seems totally broken in that browser)

[23:52:01.0000] <annevk>
ah yeah, that's the other thing I disliked about it

[23:54:00.0000] <annevk>
zewt, so then we'd have to store the value of the canceled flag separately at some point so it can be cleared and then the method can be returned

[23:54:01.0000] <zewt>
i think that'd only be for one step during dispatch

[23:55:00.0000] <zewt>
eg. 9. var x = canceled flag; canceled flag = false; return x;

[23:55:01.0000] <annevk>
just before returning you need to store it, then unset the flag, then return the value

[23:55:02.0000] <annevk>
right

[23:55:03.0000] <zewt>
which isn't so bad since it's local to that step--hopefully wouldn't need to have a separately-defined flag bloating the flag list

[23:56:00.0000] <annevk>
it's a bit unfortunate that it makes defaultPrevented useless after the event is dispatched

[23:56:01.0000] <annevk>
there's not always a return value of dispatchEvent

[23:56:02.0000] <zewt>
there should be, right?

[23:56:03.0000] <zewt>
ignoring IE9's bug

[23:56:04.0000] <annevk>
not if the event was dispatched by the UA

[23:57:00.0000] <zewt>
hmm

[23:57:01.0000] <annevk>
and you store it and analyze its properties later

[23:57:02.0000] <zewt>
personally, I'd prefer to just never reset the flags ever

[23:57:03.0000] <zewt>
and don't re-dispatch events; make new ones

[23:57:04.0000] <zewt>
it seemed like that's what browsers (except IE) actually do--but I got sidetracked by other weirdness and need to re-test

[23:58:00.0000] <annevk>
that would work too

[23:58:01.0000] <annevk>
although maybe initEvent() should be able to revive an event

[23:58:02.0000] <annevk>
(it doesn't currently reset the flags, I tested)

[23:59:00.0000] <zewt>
i need to re-check FF in particular re: resetting flags

[23:59:01.0000] <zewt>
i was testing with preventDefault(), but FF apparently doesn't fire default actions on synthesized clicks at all, which may have been confusing me

[23:59:02.0000] <annevk>
kk

[23:59:03.0000] <zewt>
so i need to check with stopPropagation

[23:59:04.0000] <annevk>
we should probably right down the various options and ask people what they think

[23:59:05.0000] <annevk>
write*

[00:00:00.0000] <zewt>
also I hate onhashchange to death for being async

[00:00:01.0000] <annevk>
bah, twisted my thumb over two weeks ago with skiing and it still bloody hurts

[00:00:02.0000] <zewt>
(makes it a pain to misappropriate it for event testing, heh)

[00:01:00.0000] <annevk>
heh

[00:01:01.0000] <zewt>
personally I try to avoid deliberately falling down mountains

[00:02:00.0000] <zewt>
afk, food hunt

[00:02:01.0000] <annevk>
going down recklessly is a lot of fun; though I have to be careful because otherwise Lachy will reprimand me for being reckless :)

[00:21:00.0000] <annevk>
so should I mention developers.whatwg.org or should I leave that to a separate post?

[00:21:01.0000] <annevk>
I guess i'll leave it to a separate post

[00:27:00.0000] <zcorpan>
annevk: so who should i bug about getting rights to edit html5-differences?

[00:29:00.0000] <annevk>
mike probably

[00:29:01.0000] <annevk>
or maybe the sysreq⊙wo

[00:29:02.0000] <annevk>
they need your public key or some such and it should be all good

[00:32:00.0000] <hsivonen>
we don't want innerHTML-created style sheets to block scripts, right?

[00:37:00.0000] <zewt>
annevk: this is tricky enough that I wouldn't feel comfortable drawing any conclusions from it without review, but http://zewt.org/~glenn/test-event-flags

[00:38:00.0000] <zewt>
a little hesitant to even spend much time squinting at the results in different browsers, since any bugs in those tests could lead me squinting off on a red herring

[00:45:00.0000] <annevk>
zewt, looks cool

[00:54:00.0000] <annevk>
I was gonna something to that...

[00:55:00.0000] <annevk>
namely that I will hopefully look at it later today

[00:55:01.0000] <annevk>
trying to focus on the blog entry first

[00:55:02.0000] <annevk>
and then probably flush out from-origin so the draft is somewhat more complete

[00:55:03.0000] <annevk>
I had wanted to do most of that yesterday, but I was dead tired instead :)

[00:56:00.0000] <zewt>
tired of looking at events tonight, so take your time :)

[01:01:00.0000] <hsivonen>
/me just helped a person whose JS program failed due to Namespaces

[01:06:00.0000] <micheil>
hsivonen: namespaces?

[01:06:01.0000] <hsivonen>
micheil: the beloved Namespaces in XML

[01:07:00.0000] <micheil>
uhh.. okay, glad I don't need to deal with them

[01:10:00.0000] <jgraham>
hsivonen: What was the bug?

[01:11:00.0000] <hsivonen>
jgraham: svgscript.setAttribute("xlink:href", "foo.js");

[01:12:00.0000] <annevk>
that would work if the element in question had a namespaced attribute named xlink:href to begin with

[01:12:01.0000] <hsivonen>
annevk: really? that seems super-bad design in the DOM.

[01:13:00.0000] <jgraham>
hsivonen: why the note of surprise?

[01:13:01.0000] <jgraham>
The DOM has plenty of bad design :)

[01:13:02.0000] <hsivonen>
jgraham: I know the DOM has plenty of bad design, but this is worse than usual

[01:16:00.0000] <hsivonen>
in other news, it seems that I have made a rather bad bug in Gecko's script loader

[01:16:01.0000] <hsivonen>
I'm shocked that I haven't noticed it before

[01:17:00.0000] <hsivonen>
http://hsivonen.iki.fi/test/moz/premature-script-execution/test-external.html

[01:20:00.0000] <zcorpan>
annevk: "If the context object does not have an Attr object whose local name is qualifiedName" ...

[01:21:00.0000] <jgraham>
hsivonen: The bug being that it doesn't wait for the alert?

[01:21:01.0000] <annevk>
zcorpan, hmm bug

[01:21:02.0000] <annevk>
at least, I think it is

[01:21:03.0000] <zewt>
is that the external script bug we were talking about the other day?

[01:21:04.0000] <hsivonen>
jgraham: the bug being that the inserted script runs before the inserted script finishes

[01:22:00.0000] <jgraham>
One day I plan to clean up Hallvord's script scheduling tests and submit them to the testsuite

[01:22:01.0000] <annevk>
i'd like to summarize public-html, but it's much more daunting

[01:22:02.0000] <annevk>
:/

[01:22:03.0000] <zcorpan>
annevk: seems gecko and webkit do as you say, but opera doesn't

[01:23:00.0000] <jgraham>
It's quite a bit of work though as they are based on guessing desired behaviour rather than a spec

[01:23:01.0000] <jgraham>
and so are wrong in some cases

[01:23:02.0000] <zcorpan>
anyone have ie9 at hand? http://software.hixie.ch/utilities/js/live-dom-viewer/saved/850

[01:23:03.0000] <zewt>
hsivonen: i noticed that a while back, but I assumed it was known, and bugzilla is too hard to search ... sorry, heh

[01:23:04.0000] <hsivonen>
whoa, whoa! the script run in the right order if I use console.log.

[01:23:05.0000] <hsivonen>
not my bug!

[01:24:00.0000] <hsivonen>
bug in the new tab-model alert stuff more likely

[01:24:01.0000] <hsivonen>
whew.

[01:24:02.0000] <zewt>
yeah, that's what I thought you meant

[01:24:03.0000] <hsivonen>
I thought I had committed totally bogus code

[01:24:04.0000] <zewt>
alert() doesn't fully pause the event loop; external scripts will load during it now

[01:25:00.0000] <hsivonen>
zewt: I was wondering how tab modal alert was even possible with the required event loop semantics

[01:25:01.0000] <hsivonen>
violating the required semantics explains it

[01:26:00.0000] <zewt>
zcorpan: "IE has modified this page to help prevent cross-site scripting." and doesn't show anything

[01:26:01.0000] <zewt>
hsivonen: Opera does it correctly, IIRC

[01:26:02.0000] <jgraham>
Hmm, making tab modal alert possible seems important

[01:26:03.0000] <hsivonen>
zewt: yes, it does

[01:26:04.0000] <zewt>
the event loop is "paused" (no queued tasks run)

[01:26:05.0000] <hsivonen>
zewt: Opera's architecture is radically different

[01:26:06.0000] <zewt>
yeah, I'll take modal alerts no matter how many weird bugs it causes

[01:27:00.0000] <zcorpan>
zewt: can you disable or work around the xss protection?

[01:27:01.0000] <zewt>
zcorpan: it only has a "What's the risk?" link and an "X", no "no seriously, do it" button

[01:28:00.0000] <zcorpan>
zewt: you can disable it somewhere in prefs. to work aruond it, open the link in another browser, copy the input, paste it into ie

[01:28:01.0000] <zewt>
I just ran the code directly

[01:28:02.0000] <zewt>
x<script>document.body.setAttributeNS('x','xlink:href','1');

[01:28:03.0000] <zewt>
document.body.setAttribute('xlink:href','2');

[01:28:04.0000] <zewt>
alert(document.body.getAttribute('xlink:href'));

[01:28:05.0000] <zewt>
alerts 2 (as I'd expect)

[01:29:00.0000] <zewt>
why would/should that do anything else? seems the obvious behavior

[01:29:01.0000] <zcorpan>
thanks

[01:29:02.0000] <zcorpan>
seems like stupid behavior to me :)

[01:29:03.0000] <zewt>
... how so?

[01:29:04.0000] <zcorpan>
would be much clearer if setAttribute() always set a no-namespace attribute

[01:29:05.0000] <hsivonen>
zcorpan: BODY xlink:href="2"

[01:30:00.0000] <zewt>
i'm not even sure what that is, heh

[01:30:01.0000] <zewt>
why should x.setAttribute(a, b); x.getAttribute(a); ever return anything other than b?

[01:30:02.0000] <zcorpan>
what you get if you didn't have the first line in the script

[01:30:03.0000] <zewt>
ah that namespace

[01:31:00.0000] <hsivonen>
apparently if you have disabled the XSS filter for software.hixie.ch before installing IE9 RC, you need to disable it again after installing RC for it to take effect in RC

[01:31:01.0000] <zewt>
i'm not familiar with those--to me "namespace" is just the "xlink:" part of the attribute name

[01:31:02.0000] <hsivonen>
zewt: that's how bugs emerge

[01:31:03.0000] <zewt>
not even sure what the point of those NS functions is; I've never seen them used so I've never felt the need to see what they're for

[01:32:00.0000] <hsivonen>
zewt: the short version is that if you are doing SVG stuff without *NS, you are writing broken code

[01:32:01.0000] <jgraham>
(or MathML)

[01:32:02.0000] <zewt>
sounds like ugly legacy noise

[01:32:03.0000] <jgraham>
Hah

[01:32:04.0000] <hsivonen>
zewt: YES

[01:33:00.0000] <zewt>
which seems to comprise a significant chunk of DOM, heh

[01:33:01.0000] <jgraham>
It is the glorious future, don't ya know

[01:33:02.0000] <zewt>
but I'm still not sure why x.setAttribute('a:b', 'c'); x.getAttribute('a:b') shouldn't return 'c'

[01:33:03.0000] <zcorpan>
i guess we should suck it up and change opera, since we're the odd one out

[01:33:04.0000] <zcorpan>
but it still sucks

[01:34:00.0000] <zewt>
i've used attributes like that before, though I havn't had any reason to set them; mostly to let me put custom attributes in markup

[01:34:01.0000] <zcorpan>
zewt: i wouldn't mind if getAttribute() also only worked for no-namespace attributes, but there may be web compat problems with changing that

[01:35:00.0000] <zewt>
such as a whole lot of my code :)

[01:35:01.0000] <jgraham>
It turns out that colons are the worst possible character for doing custom whatever

[01:35:02.0000] <jgraham>
because they pull in all this architecture

[01:35:03.0000] <zewt>
well, not a lot, but I've been using it more lately, and I've never even considered using *NS for it

[01:35:04.0000] <jgraham>
that you don't want

[01:35:05.0000] <jgraham>
hence -data-foo

[01:35:06.0000] <zcorpan>
it'd still work if you used non-NS methods for both and never use NS methods

[01:36:00.0000] <zcorpan>
and don't use <svg xlink:href>

[01:36:01.0000] <hsivonen>
jgraham: it's happy fun that Facebook uses colons in HTML DOMs all over

[01:36:02.0000] <zewt>
well, the question for my code isn't setAttribute, it's markup

[01:36:03.0000] <hsivonen>
jgraham: with *NS methods!

[01:37:00.0000] <jgraham>
hsivonen: I guess facebook has a culture of thinking they are smart enough to play with fire

[01:37:01.0000] <zewt>
well, if it works in every browser people test in, then people have no reason to think they're doing so

[01:38:00.0000] <zewt>
and if it works in every (or many) browsers, then the good old de facto standard process kicks in :|

[01:38:01.0000] <hsivonen>
zewt: that logic doesn't work for Facebook, since they have at least four engine-specific code paths

[01:38:02.0000] <zewt>
haha

[01:38:03.0000] <hsivonen>
zewt: so there's no guarantee that whatever happens on one of them would work cross-browser

[01:39:00.0000] <zewt>
i don't even use facebook, but from the times I've loaded the page, they're not doing anything fancy at all that would warrant that kind of complexity

[01:43:00.0000] <jgraham>
zewt: The implementation of facebook is more fancy than the content would suggest. Some of it seems a lit like unnecessary complexity, however

[01:44:00.0000] <zewt>
geh

[01:44:01.0000] <jgraham>
e.g. a great deal of content is loaded from scripts in order to reduce loading times (or something)

[01:44:02.0000] <zewt>
on that setAttribute case, innerHTML shows <body href="2">

[01:44:03.0000] <zewt>
if I comment out the setAttributeNS, i get <body xlink:href="2>

[01:45:00.0000] <zewt>
in FF3

[01:45:01.0000] <zewt>
">

[01:45:02.0000] <zewt>
do I even want to know? heh

[01:56:00.0000] <annevk>
http://blog.whatwg.org/weekly-same-origin

[02:07:00.0000] <annevk>
when is ben usually online?

[02:07:01.0000] <annevk>
I suppose I can write some announcement post tomorrow if he's too busy for it

[02:44:00.0000] <annevk>
in ABNF

[02:44:01.0000] <annevk>
well, HTTP BNF

[02:44:02.0000] <annevk>
there's #header-value

[02:44:03.0000] <annevk>
what is #header-value-or-some-other-value

[02:44:04.0000] <annevk>
#[a|b

[02:44:05.0000] <annevk>
]

[02:44:06.0000] <annevk>
or just #a|b ?

[02:50:00.0000] <kennyluck>
annevk, in http://blog.whatwg.org/weekly-same-origin , the first link in the second item (dom) links to the wrong page (bugzilla) it seems.

[02:51:00.0000] <annevk>
not here...

[02:52:00.0000] <annevk>
it seems there is some markup error though

[02:52:01.0000] <annevk>
/me goes to fix

[02:53:00.0000] <annevk>
fixed

[02:54:00.0000] <kennyluck>
thanks!

[03:30:00.0000] <annevk>
http://dvcs.w3.org/hg/from-origin/raw-file/tip/Overview.html#from-origin-response-header now has a processing model

[03:40:00.0000] <hsivonen>
annevk: the spec is completely obscure unless one remembers what prefix # means in this flavor of BNF

[03:41:00.0000] <hsivonen>
annevk: can the header take a list of multiple origins?

[03:41:01.0000] <zewt>
where's the definition of this BNF syntax? should it be referenced explicitly?

[03:42:00.0000] <hsivonen>
annevk: it's very sad that CORS doesn't allow multiple origins to be specified

[03:42:01.0000] <hsivonen>
zewt: that would help

[03:43:00.0000] <zewt>
i assumed the #[] meant a comma-separated list or something like that

[03:43:01.0000] <hsivonen>
/me doesn't know what #[] means

[03:44:00.0000] <hsivonen>
also, the words origin and same aren't quoted but if they are non-terminals, I don't see expansions, either

[03:45:00.0000] <hsivonen>
"if none of" suggests that a list is allowed

[03:47:00.0000] <annevk>
hsivonen, first version of CORS is not meant for static resources

[03:47:01.0000] <annevk>
hsivonen, that Gecko used it for fonts without prior discussion with WebApps, well, ...

[03:47:02.0000] <annevk>
# is some HTTPism

[03:48:00.0000] <annevk>
makes sense to me to define headers the same way HTTP does

[03:48:01.0000] <annevk>
you're right about same, I should make that an expansion and link origin to some definition in the origin concept draft

[03:50:00.0000] <zewt>
"same" = empty list, don't terminate in step 1 and depend on step 5 to allow same-origin only?

[03:51:00.0000] <annevk>
terminate means "these steps don't apply"

[03:51:01.0000] <annevk>
that should prolly be clarified somewhat

[03:51:02.0000] <zewt>
i know that

[03:51:03.0000] <annevk>
and "same" is a convenience keyword

[03:51:04.0000] <annevk>
if you can specify an empty header that should probably be allowed too

[03:51:05.0000] <zewt>
i mean "From-Origin: same" means #1 won't terminate and step 7 will always terminate?

[03:52:00.0000] <zewt>
er, abort

[03:52:01.0000] <annevk>
right

[03:52:02.0000] <annevk>
however, before step 7 it will be terminated if it's same origin

[03:52:03.0000] <annevk>
so that's all good

[03:52:04.0000] <zewt>
i figured that was the idea

[03:52:05.0000] <zewt>
having an empty header would be cleaner but yeah I don't remember if that's allowed, and it might be a bad idea anyway since nothing ever does that

[03:53:00.0000] <zewt>
probably best for empty header to be equivalent to no header

[03:53:01.0000] <annevk>
actually, WebDAV does that I believe

[03:54:00.0000] <annevk>
XHR also has a distinction between no header and empty string value

[03:54:01.0000] <zewt>
for example, there's no way to specify an empty header with curl

[03:54:02.0000] <zewt>
specifying an empty header removes it

[03:55:00.0000] <annevk>
anyway, currently it's not allowed

[03:55:01.0000] <annevk>
# means one or more

[03:55:02.0000] <annevk>
iirc

[03:55:03.0000] <hsivonen>
annevk: so is From-Origin: same, same conforming?

[03:55:04.0000] <zewt>
should it be #[origin | "same"]?

[03:56:00.0000] <hsivonen>
annevk: it would be really nice to link the word "BNF" to whatever IETF flavor of BNF this is

[03:56:01.0000] <zewt>
bnf-fu very rusty

[03:56:02.0000] <hsivonen>
annevk: also, linking the non-terminals to their expansions would be really nice

[03:56:03.0000] <annevk>
hsivonen, yes and yes it would; guess I'll do it now

[03:56:04.0000] <annevk>
zewt, no, then same would not be case-sensitive

[04:00:00.0000] <karlcow>
http://www.w3.org/TR/2000/REC-xml-20001006#sec-notation a link for EBNF

[04:00:01.0000] <zewt>
this relates not just to HTML but HTTP; should it reference HTTP for what "response header" means? not sure how explicit that's typically made

[04:01:00.0000] <annevk>
maybe case-insensitive is okay

[04:01:01.0000] <zewt>
that definition says "strings" are case-sensitive

[04:01:02.0000] <annevk>
lets not confuse HTTP ABNF with EBNF

[04:02:00.0000] <karlcow>
there is also ABNF http://tools.ietf.org/html/rfc4234

[04:02:01.0000] <karlcow>
http://tools.ietf.org/html/rfc5234

[04:03:00.0000] <karlcow>
geez with erratas

[04:04:00.0000] <hsivonen>
karlcow: XML BNF is readable. Unlike the IETF stuff.

[04:04:01.0000] <zewt>
15.7.1 Denial of Service Attacks on Proxies

[04:04:02.0000] <zewt>
They exist. They are hard to defend against. Research continues.

[04:04:03.0000] <zewt>
Beware.

[04:04:04.0000] <zewt>
gotta love a spec that uses the single word "beware" as a sentence

[04:05:00.0000] <zewt>
http://tools.ietf.org/html/rfc2616#page-14

[04:06:00.0000] <zewt>
("page-14" as an anchor? really?)

[04:06:01.0000] <jgraham>
ietf is kinda fucked up

[04:06:02.0000] <zewt>
writing specs as if the expectation is that everyone's going to print them out ... that's pretty amusing even for 1999

[04:07:00.0000] <jgraham>
They regard technologies that postdate the 60s with suspicion and even downright hostility

[04:07:01.0000] <zcorpan>
"They exist. They are hard to defend against. Research continues. Beware." seems like a good section for other stuff as well, like "Security considerations"

[04:09:00.0000] <zewt>
can I be happy that we're in an age where we no longer feel the need to explicitly reference the ASCII spec from HTML

[04:09:01.0000] <annevk>
http://dvcs.w3.org/hg/from-origin/raw-file/tip/Overview.html#from-origin-response-header refresh

[04:10:00.0000] <jgraham>
I thought we did reference the ASCII spec

[04:10:01.0000] <karlcow>
zewt: for http I recommend to look in the direction of httpbis

[04:11:00.0000] <jgraham>
They was a whole cycle of the Issue process around it, was there not?

[04:11:01.0000] <karlcow>
http://tools.ietf.org/wg/httpbis/

[04:13:00.0000] <zewt>
annevk: perhaps explicitly say that these steps are to be performed as part of the "main step" of fetching

[04:13:01.0000] <zewt>
assuming that's where it goes

[04:14:00.0000] <zewt>
(implying that if F-O aborts the resource, cookies aren't updated, and so on)

[04:17:00.0000] <zcorpan>
annevk: RFC2119 ref is broken

[04:18:00.0000] <jre>
annevk, zevt: reusing the HTTP ABNF makes sense here.

[04:18:01.0000] <annevk>
thanks zewt, done

[04:19:00.0000] <jre>
the reference should go to http://greenbytes.de/tech/webdav/rfc2616.html#rfc.section.2.1

[04:19:01.0000] <jre>
(not that URI, but RFC 2616, Section 2.1)

[04:19:02.0000] <zewt>
httpbis ref is http://tools.ietf.org/html/draft-ietf-httpbis-p1-messaging-12#page-7 but if it's the same may as well not use an in-progress reference

[04:19:03.0000] <jre>
you'll also need to steal the definition of OWS from HTTPbis

[04:19:04.0000] <zewt>
<zewt> http://tools.ietf.org/html/rfc2616#page-14 <- that's the 2616 ref

[04:20:00.0000] <jre>
http://greenbytes.de/tech/webdav/draft-ietf-httpbis-p1-messaging-12.html#rfc.section.1.2.2

[04:20:01.0000] <annevk>
I guess I'll just say that the ABNF is the same as the Web Origin Concept

[04:20:02.0000] <annevk>
so I can avoid dealing with HTTP references

[04:20:03.0000] <jre>
it may make sense to steal the details from the new cookie spec

[04:21:00.0000] <jre>
actually no: it uses the 5234 syntax

[04:21:01.0000] <annevk>
it now just references ORIGIN

[04:22:00.0000] <annevk>
which in turn hopefully references some correct spec, but it's no longer my problem :)

[04:22:01.0000] <annevk>
actually, this is not quite correct

[04:22:02.0000] <annevk>
bah

[04:24:00.0000] <zewt>
annevk: the fetch algorithm has a specifically named "main step"; i think it makes sense to refer to it by name to be precise about where in the algorithm it goes

[04:24:01.0000] <zewt>
(of course, it won't be when multiple addon-specs are doing that, but heh)

[04:24:02.0000] <annevk>
origin-list is space separated :/

[04:29:00.0000] <annevk>
fixed bnf again

[04:29:01.0000] <annevk>
zewt, yeah, this all needs to be integrated one day

[04:30:00.0000] <annevk>
at some point someone might take everything network and write it all down :)

[04:31:00.0000] <MikeSmith>
annevk: please take a look at http://dev.w3.org/2006/webapi/WebNotifications/static.html and let me know if you see any problems

[04:31:01.0000] <MikeSmith>
please compare to http://dev.w3.org/2006/webapi/WebNotifications/publish/Notifications.html

[04:31:02.0000] <MikeSmith>
the main difference is where/how the Notification constructor is defined

[04:33:00.0000] <annevk>
MikeSmith, that is wrong

[04:33:01.0000] <MikeSmith>
Berjon's current JS respec does not seem to provide any way to handle the constructor differently than normal methods

[04:33:02.0000] <MikeSmith>
hmm

[04:33:03.0000] <MikeSmith>
oK

[04:33:04.0000] <hendry>
Philip`: hi there, can we chat about how reports are gathered with your test harness?

[04:33:05.0000] <annevk>
MikeSmith, now it says there's a method Notification on the Notification object

[04:33:06.0000] <MikeSmith>
annevk; so now I have to hack fricking respec more

[04:34:00.0000] <MikeSmith>
yeah, I know

[04:34:01.0000] <annevk>
MikeSmith, respec2 doesn't handle it either? sounds painful

[04:34:02.0000] <MikeSmith>
I can't imagine this is the first spec using respec that has needed to document a constructtor

[04:34:03.0000] <annevk>
MikeSmith, I'm fine with publishing as-is though, maybe with a note

[04:35:00.0000] <annevk>
or maybe berjon knows a cure

[04:35:01.0000] <MikeSmith>
nah, I can fix it today

[04:35:02.0000] <MikeSmith>
maybe

[04:35:03.0000] <annevk>
zewt, added main step

[04:35:04.0000] <annevk>
zewt, hsivonen, thanks a lot

[05:40:00.0000] <Philip`>
hendry: Sure

[05:40:01.0000] <Philip`>
hendry: (Which test harness?)

[05:57:00.0000] <hendry>
Philip`: w3c one, did you get my email btw?

[05:58:00.0000] <Philip`>
hendry: I see the email now

[05:59:00.0000] <Philip`>
I know nothing about the W3C test reporting system

[05:59:01.0000] <jgraham>
hendry: What is the question?

[05:59:02.0000] <Philip`>
I've heard that it's mostly manual so I haven't been inclined to have a look at it

[06:01:00.0000] <hendry>
jgraham: just a general enquiry to how the actual reporting is done. e.g. http://dvcs.w3.org/hg/html/file/tip/tests/submission

[06:01:01.0000] <hendry>
Philip`: i.e. how automation is best done :)

[06:02:00.0000] <jgraham>
hendry: Oh, like Philip` I haven't dared look at that too hard

[06:03:00.0000] <jgraham>
There is a javascript thing in the repo somewhere that opens the tests in an iframe and lets people submit the results and builds that XML or something

[06:03:01.0000] <hendry>
jgraham: if you find it let me know

[06:04:00.0000] <hendry>
jgraham, Philip` if there are reporting / automated examples I could see, I would be grateful

[06:04:01.0000] <Philip`>
http://test.w3.org/html/tests/harness/harness.htm

[06:04:02.0000] <Philip`>
You click pass/fail buttons 819 times and then click "test results" and then post it to a mailing list, I think

[06:04:03.0000] <hendry>
Philip`: ah ..

[06:05:00.0000] <jgraham>
hendry: Oh, Philip` beat me to it

[06:05:01.0000] <jgraham>
The whole thing is insane

[06:05:02.0000] <jgraham>
the most useful thing would be if people would stop spamming me with test results :(

[06:05:03.0000] <Philip`>
http://philip.html5.org/tests/canvas/suite/reportgenentry.html is my automated one but that's for a slightly obsolete version of the tests

[06:05:04.0000] <Philip`>
and also you can't submit the results anywhere

[06:05:05.0000] <jgraham>
But there must be something somewhere encouraging it

[06:06:00.0000] <jgraham>
Also, it is quite trivial to build an automated harness for the javascript tests

[06:06:01.0000] <jgraham>
Since it has an API specifically for that purpose

[06:06:02.0000] <zewt>
click a button 819 times? make a game out of it and people will pay to run your tests for you

[06:07:00.0000] <hendry>
jgraham: where is this API documented?

[06:07:01.0000] <jgraham>
hendry: http://dvcs.w3.org/hg/html/file/0be07106838c/tests/resources/testharness.js

[06:07:02.0000] <jgraham>
See where it says "external API"

[06:07:03.0000] <jgraham>
zewt: Heh

[06:08:00.0000] <jgraham>
We should totally do that

[06:08:01.0000] <jgraham>
Make people pay to buy a test autoclicker than can submit 5 results for them

[06:08:02.0000] <Philip`>
Make an online game like The Typing of the Dead

[06:09:00.0000] <jgraham>
I was totally thinking farmville

[06:09:01.0000] <Philip`>
where instead of showing you a word you have to type in to kill zombies, it shows a test case in an iframe and you have to select pass/fail to kill zombies

[06:10:00.0000] <Philip`>
The end-of-level boss can be a series of test cases submitted by Microsoft where it's really hard to figure out whether it passed or failed

[06:10:01.0000] <zewt>
heh typing of the dead

[06:10:02.0000] <zewt>
someone had me playing that years ago, except it was the japanese version on DC

[06:10:03.0000] <hendry>
jgraham: don't quite understand that "external API" stuff, was expecting to see a func with XMLHttpRequest post

[06:11:00.0000] <Philip`>
"Test passes if the text 'PASS' appears to the left and the text 'Your browser does not support media elements.' does not appear anywhere on this page."

[06:11:01.0000] <zewt>
not being able to read any of it made the boss battles ... a challenge

[06:11:02.0000] <Philip`>
That text will always appear on that page, as part of the instructions

[06:12:00.0000] <hendry>
jgraham: so one implements result_callback to post results or something?

[06:13:00.0000] <hendry>
jgraham: i need an example i think

[06:26:00.0000] <Workshiva>
Philip`: This test intentionally left failing

[06:41:00.0000] <jgraham>
Philip`: Hah

[06:43:00.0000] <jgraham>
hendry: If one loads the test in an iframe it will try to send the results to a function in the top-level browsing context called completion_callback

[06:43:01.0000] <jgraham>
It might have been neater to use postMessage…

[06:43:02.0000] <jgraham>
In fact it might still be possible to change

[06:45:00.0000] <annevk>
zcorpan, need any information on generating the spec?

[06:46:00.0000] <annevk>
I currently use (and change ED to WD somewhere and add -F date=2011-xx-xx when generating a copy for publication):

[06:46:01.0000] <annevk>
curl -u w3c-user:password -F file=@Overview.src.html -F group=none -F output=html -F method=file http://cgi.w3.org/member-bin/process.cgi -o Overview.html

[07:02:00.0000] <zcorpan>
annevk: thanks

[07:07:00.0000] <zcorpan>
where do i change ED to WD?

[07:12:00.0000] <zcorpan>
the current version seems to be WD

[07:18:00.0000] <zcorpan>
annevk: ^

[07:21:00.0000] <annevk>
I guess you can keep it that way

[07:21:01.0000] <zcorpan>
ok

[07:22:00.0000] <annevk>
but if someone wants you to change it back, change WD to ED in the "This Version:" URL in http://dev.w3.org/html5/html4-differences/Overview.src.html

[07:22:01.0000] <annevk>
everything else should adjust automatically

[07:23:00.0000] <zcorpan>
ok

[07:23:01.0000] <annevk>
if something breaks with the generator you probably need to contact Bert Bos or switch to Anolis

[07:23:02.0000] <annevk>
publication related questions are probably best directed to Mike Smith

[07:23:03.0000] <zcorpan>
i added myself as editor to see if it'd work

[07:24:00.0000] <MikeSmith>
yeah, I can help with pub stuff

[07:24:01.0000] <zcorpan>
cool

[07:25:00.0000] <zcorpan>
i guess i'm all set then

[07:26:00.0000] <zcorpan>
annevk: one more, what do you check when you update it? just the svn log?

[07:26:01.0000] <annevk>
yes

[07:26:02.0000] <zcorpan>
ok

[07:26:03.0000] <annevk>
I keep track of SVN numbers in the comments

[07:26:04.0000] <zewt>
how did this thread about microphone devices suddenly turn towards sh? heh

[07:26:05.0000] <zewt>
that may be the most nonsensical suggestion I've seen on the list yet

[07:27:00.0000] <annevk>
if you look at the HTML5 changelogs section it should be pretty simple to figure out

[07:27:01.0000] <annevk>
that is, if you look at the source

[07:27:02.0000] <annevk>
feel free to make more ambitious changes though :)

[07:27:03.0000] <annevk>
such as defining the DOM HTML delta or some such

[07:27:04.0000] <annevk>
;)

[07:28:00.0000] <zcorpan>
heh, don't worry, i won't :)

[07:29:00.0000] <zcorpan>
ok seeya

[07:30:00.0000] <annevk>
:)

[07:30:01.0000] <zcorpan>
btw i won't be in linköping this week

[07:30:02.0000] <zcorpan>
so i guess i won't seeya

[07:30:03.0000] <zcorpan>
anyway

[07:31:00.0000] <annevk>
aaah

[07:33:00.0000] <annevk>
Ms2ger, when you read this, jgraham has been given access to dom-core to commit some tests

[07:37:00.0000] <annevk>
zcorpan, you forgot "editor" under "Acknowledgments" :)

[08:08:00.0000] <Rik`>
"Error: Text run is not in Unicode Normalization Form C."

[08:08:01.0000] <Rik`>
what the hell does that mean?

[08:09:00.0000] <jgraham>
Dunno why it's an error

[08:09:01.0000] <jgraham>
But apart from that it means what it says, mostly

[08:09:02.0000] <Workshiva>
Because unicode is bad enough with NFC

[08:10:00.0000] <jgraham>
Rik`: It means that certain sequences of characters and combining characters are in docomposed form rather than single-codepoint form

[08:10:01.0000] <jgraham>
e.g. if you have an e character followed by an acute combining mark

[08:10:02.0000] <Workshiva>
If you have e.g. A followed by ring-above-symbol-whatnot instead of Å

[08:10:03.0000] <jgraham>
rather than an e-acute character

[08:11:00.0000] <Rik`>
jgraham: oh right, thanks !

[08:11:01.0000] <jgraham>
Rik`: Note that NFC doesn't mean that there aren't *any* combining chracters

[08:11:02.0000] <jgraham>
It just means that there aren't the ones in NFC

[08:11:03.0000] <jgraham>
(I believe that NFD is fully decomposed, however)

[08:12:00.0000] <jgraham>
http://unicode.org/reports/tr15/

[08:13:00.0000] <jgraham>
Also http://diveintomark.org/archives/2004/07/06/nfc seems quite relevant to your situation

[08:58:00.0000] <Rik`>
still experiencing funny error messages

[08:58:01.0000] <Rik`>
Error: Bad value UserVoice.Popin.show(uservoiceOptions); return false; for attribute onclick on element a: invalid return

[08:58:02.0000] <Rik`>
why is can't it "return false" ?

[08:58:03.0000] <zewt>
i don't even know what language that is, heh

[08:59:00.0000] <zewt>
of course I didn't sleep last night and I'm in zombie mode, but

[09:32:00.0000] <karlcow>
http://my.opera.com/core/blog/2011/02/28/webgl-and-hardware-acceleration-2

[09:32:01.0000] <Rik`>
hsivonen: do you have any idea ?

[09:38:00.0000] <annevk>
fuck iTunes

[09:38:01.0000] <annevk>
bought Radiohead album in WAV because why not

[09:38:02.0000] <annevk>
drag into iTunes

[09:38:03.0000] <annevk>
iTunes does not play ball

[09:39:00.0000] <annevk>
after modifying song names and album information appropriately myself (because iTunes does not play ball) it does not allow me to change the frigging artwork

[09:39:01.0000] <annevk>
does this mean I now have to buy the MP3 version to get this to work?

[09:44:00.0000] <matjas>
try using iTunes to convert it to MP3

[09:51:00.0000] <hsivonen>
Rik`: any idea about return false; in onclick? no, no idea

[09:51:01.0000] <zewt>
WAV is hard stuff

[09:55:00.0000] <matjas>
TabAtkins: http://asi.qfox.nl/ is pretty cool

[09:55:01.0000] <zewt>
annevk: the terms "type" and "name" with events are used of ambiguously in places

[09:56:00.0000] <Rik`>
so validator.nu says there is an error but validator.w3.org says it's ok

[09:56:01.0000] <zewt>
DOM Core refers to the event interface as the "type" and the event name as the "name", but the parameter to init*Event functions is "type" (refering to the name)

[09:57:00.0000] <zewt>
and specs seem inconsistent (in eventsource within "dispatch the event", step 3 uses "name" and step 4 uses "type" to--I think--refer to the same thing)

[10:03:00.0000] <zewt>
might be more consistent for DOM Core to always say "event that uses the Event interface" and never refer to that as "type" or "name"

[10:03:01.0000] <TabAtkins>
Yus!  I missed 6 ASIs and wasted 8 unnecessary.  Still pretty good!

[10:03:02.0000] <zewt>
(I think "type" is sort of entrenched, due to the prototypes of all of the initEvent methods)

[10:04:00.0000] <TabAtkins>
Most of those wasted ones were me putting them after function declarations, which the rules didn't call out explicitly.

[10:04:01.0000] <TabAtkins>
(It's subsumed in the "hidden rules" it mentions, I guess.)

[10:05:00.0000] <karlcow>
hmmmm checking http://www.w3.org/TR/DOM-Level-3-Events/ too

[10:07:00.0000] <zewt>
i think DOM Events always uses "type" to refer to the event name, not "name"

[10:08:00.0000] <zewt>
so yeah I'd also change the term "name" to "type", I think

[11:01:00.0000] <zewt>
aren't custom events a bit of a namespace nightmare? as soon as people start using events with arbitrary names, adding new events to anything ever will cause backwards-compat problems

[11:20:00.0000] <TabAtkins>
Argh, how can someone in the leadership of the accessibility group write such inaccessible emails?

[11:22:00.0000] <TabAtkins>
I can't figure out who is saying what in the quoted part of this top-posted email, and I'm a fully-sighted user.

[11:53:00.0000] <hober>
TabAtkins: srsly

[11:55:00.0000] <Hixie>
kennyluck: please don't cross-post messages to the whatwg list, it causes thread fragmentation when people not on the list reply to the thread

[12:29:00.0000] <zcorpan>
hsivonen: "There is an option to ignore the “legacy doctype” and “xml:lang” errors that Validator.nu reports for documents using an XHTML doctype" http://www.456bereastreet.com/archive/201102/html5_validator_extension_updates/

[12:59:00.0000] <kennyluck>
Hixie: hmm... OK, but I was replying a mail that was cross-posted. What am I supposed to do?

[13:04:00.0000] <Hixie>
kennyluck: figure out the best list to reply to, i guess :-)

[13:04:01.0000] <Hixie>
kennyluck: are you on whatwg?

[13:04:02.0000] <kennyluck>
Hixie: Yeah.

[13:04:03.0000] <Hixie>
k

[13:04:04.0000] <zewt>
only replying to one list is causing thread fragmentation, not replying to all :P

[13:05:00.0000] <Hixie>
yeah but it just encourages others to do the same :-)

[13:06:00.0000] <zewt>
crossposting between relevant lists is pretty ordinary--works fine as long as lists aren't subscriber-post-only (unfortunately, some lists are)

[13:06:01.0000] <karlushi>
You can minimize the damage of cross-posting by stopping the thread and replying to one list and then send an email to the other list pointing to the discussion. Reply-To: might help too. Though nothing perfect, beauty of humans.

[13:06:02.0000] <zewt>
(like that annoying PRNG thread that people expected everyone to subscribe to es-discuss for)

[13:06:03.0000] <Hixie>
zewt: yeah. whatwg is, for spam control reasons

[13:07:00.0000] <zewt>
speaking of spam control, maybe the spec feedback form should throw away comments that begin with "Please enter your feedback" :)

[13:09:00.0000] <kennyluck>
Hmm... the email address I use everyday isn't the email address I use to subscribe to the whatwg list. I guess that's the reason why my letter doesn't show up on the whatwg list.

[13:10:00.0000] <Hixie>
zewt: is it common?

[13:11:00.0000] <zewt>
probably not common enough to actually spend time on it, though if I was the one who had to keep closing them I might get annoyed enough to, heh

[13:11:01.0000] <Hixie>
if it's happened more than twice i'm happy to add code for it, it'll take a second or two

[13:11:02.0000] <Hixie>
paste the urls to the cases where it happens and i'll deal with it

[13:12:00.0000] <zewt>
eg. http://www.w3.org/Bugs/Public/show_bug.cgi?id=12206

[13:13:00.0000] <zewt>
(i'm surprised those don't happen more often than they do)

[13:13:01.0000] <Hixie>
wow i wonder how _that_ happens

[13:14:00.0000] <AryehGregor>
Why is it so hard to traverse the DOM in tree order?

[13:14:01.0000] <Hixie>
six times so far

[13:14:02.0000] <Hixie>
crazy

[13:14:03.0000] <AryehGregor>
From JavaScript, I mean.

[13:14:04.0000] <Hixie>
/me goes to block that case

[13:14:05.0000] <AryehGregor>
Would Node.nextNode be too much to ask?

[13:14:06.0000] <zewt>
is it hard?

[13:14:07.0000] <Hixie>
AryehGregor: Node.nextSibling?

[13:14:08.0000] <AryehGregor>
Hixie, what if it's the last child?

[13:14:09.0000] <Hixie>
AryehGregor: oh you mean including the next node

[13:14:10.0000] <AryehGregor>
Or what if it has a child?

[13:14:11.0000] <gsnedders>
AryehGregor: walk parentNode?

[13:14:12.0000] <Hixie>
AryehGregor: use a node iterator

[13:15:00.0000] <AryehGregor>
Hmm, let me look into that.

[13:15:01.0000] <gsnedders>
AryehGregor: NodeIterator?

[13:15:02.0000] <AryehGregor>
Is that available cross-browser these days?

[13:16:00.0000] <gsnedders>
AryehGregor: Non-IE, at least. It's in Acid3. I think IE9 supports it.

[13:16:01.0000] <AryehGregor>
This seems way more complicated than I want.

[13:16:02.0000] <AryehGregor>
/me just does it manually

[13:16:03.0000] <gsnedders>
AryehGregor: If you want to do it for all documents, have fun with IE's non-tree documents.

[13:17:00.0000] <zewt>
write a nextNode(node) function, add it to the bag of helpers :)

[13:17:01.0000] <AryehGregor>
Yeah, that's what I did.

[13:17:02.0000] <AryehGregor>
gsnedders, well, if IE does that, it will just fail my tests, so too bad on it.

[13:17:03.0000] <Hixie>
make sure it fails and doesn't lock u

[13:17:04.0000] <Hixie>
p

[13:19:00.0000] <jgraham>
Locking up browsers is fun!

[13:19:01.0000] <jgraham>
But probably shouldn't be encouraged...

[13:20:00.0000] <zewt>
Hixie: maybe he's asking you to enter your feedback (to yourself)

[13:20:01.0000] <Hixie>
heh

[13:20:02.0000] <zewt>
that would be rather literal feedback

[13:21:00.0000] <gsnedders>
AryehGregor: Indeed, what Hixie said is the risk here. (Just following the circle.)

[13:22:00.0000] <AryehGregor>
Well, tests that time out fail automatically, right?

[13:22:01.0000] <AryehGregor>
Anyway, does IE9 in standards mode allow non-tree documents?

[13:22:02.0000] <AryehGregor>
Not like we're testing compatibility modes.

[13:22:03.0000] <AryehGregor>
/me will worry about it when he gets to it

[13:22:04.0000] <zewt>
better to detect an infinite loop and fail quickly instead of waiting for a timeout and making the test set take forever

[13:22:05.0000] <gsnedders>
AryehGregor: I think not.

[13:23:00.0000] <Hixie>
we'll have to test compatibility modes in due course

[13:23:01.0000] <AryehGregor>
I doubt it.

[13:23:02.0000] <jgraham>
Boy is that going to be a fun discussion

[13:23:03.0000] <AryehGregor>
We'll probably never test compatibility modes.

[13:23:04.0000] <AryehGregor>
IE's, anyway.

[13:23:05.0000] <jgraham>
We should test doctype/no doctype at least

[13:23:06.0000] <AryehGregor>
Nobody has any real reason to want to emulate them.

[13:23:07.0000] <AryehGregor>
Well, maybe someday.

[13:24:00.0000] <Hixie>
the spec doesn't have compatibility modes, it just has one set of rules that include some differences based on the doctype

[13:24:01.0000] <Hixie>
so...

[13:24:02.0000] <zewt>
it's annoying that apparently only IE9 changes modes significantly with no doctype

[13:24:03.0000] <gsnedders>
Yeah, we should test standards/quirks.

[13:24:04.0000] <gsnedders>
But that's going to be painful enough.

[13:25:00.0000] <jgraham>
I'm not sure that intentionally putting IE in a compat mode to show that it doesn't follow standards in that mode really helps anyone

[13:25:01.0000] <Hixie>
i don't really care about IE

[13:25:02.0000] <Hixie>
it's not an IE issue

[13:25:03.0000] <jgraham>
But showing that it fails to follow ordinary quirks mode is fine

[13:25:04.0000] <zewt>
(every time I make a quick test HTML and I'm lazy and don't put a doctype, everything works fine in every browser ... except IE9, which falls to quirksmode)

[13:25:05.0000] <Hixie>
since they refuse to follow the spec for this anyway

[13:25:06.0000] <Hixie>
we still need to make sure the spec is useful for the browsers who _do_ want to follow it

[13:26:00.0000] <gsnedders>
Hixie: Then what is gained by testing it?

[13:26:01.0000] <Hixie>
IE isn't the only browser?

[13:26:02.0000] <jgraham>
Right, but it is reasonable to assume that <meta content=what-ever-the-magic-is> won't dpo anything magic in non-IE browsers

[13:26:03.0000] <Hixie>
zewt: i tried to add somethin to prevent the case you mentioned earlier

[13:26:04.0000] <gsnedders>
Hixie: But how likely are they to end up on the wrong code-path because of x-ua-compatible?

[13:27:00.0000] <gsnedders>
Hixie: cost/benefit doesn't seem to make it seem worthwhile, because the meta does nothing.

[13:27:01.0000] <Hixie>
jgraham: oh i wasn't suggesting having tests that check the IE thing

[13:27:02.0000] <zewt>
i don't expect other browsers to deliberately break when there's no doctype, but it'd be nice if there was *some* indication, so the problem doesn't lurk

[13:27:03.0000] <Hixie>
didn't mean to imply anything about X-UA-Compatible

[13:27:04.0000] <jgraham>
Hixie: It sounded like you were :)

[13:27:05.0000] <gsnedders>
Indeed. :)

[13:27:06.0000] <Hixie>
what did i say that sounded like that?

[13:27:07.0000] <Hixie>
/me is confoosed

[13:27:08.0000] <jgraham>
15:26 < Hixie> we'll have to test compatibility modes in due course

[13:27:09.0000] <gsnedders>
We should test everything in at least quirks/non-quirks. Dunno if we sohuld test everything in limit-quirked.

[13:28:00.0000] <gsnedders>
Hixie: "compatibility modes" is something I only ever hear wrt IE's modes

[13:28:01.0000] <jgraham>
"compatibility modes" in context sounds like the IEism

[13:28:02.0000] <Hixie>
jgraham: i meant the quirks mode thing, sorry

[13:28:03.0000] <jgraham>
not the spec thing

[13:28:04.0000] <jgraham>
Hixie: np

[13:28:05.0000] <jgraham>
/me is less ambitious than gsnedders 

[13:29:00.0000] <Hixie>
back in a bit, unch

[13:29:01.0000] <gsnedders>
jgraham: I think we want to check for everything that behaviour isn't changed by being in quirks

[13:29:02.0000] <jgraham>
/me would settle for tests that just cover the areas where they should be the same

[13:29:03.0000] <gsnedders>
To avoid browsers changing too much in quirks

[13:29:04.0000] <jgraham>
er

[13:29:05.0000] <jgraham>
s/same/different/

[13:29:06.0000] <jgraham>
gsnedders: We can do that ofc

[13:29:07.0000] <jgraham>
But it seems like a lot of effort for not much gain

[13:30:00.0000] <jgraham>
(like: it won't just be a case of adding or removing <!doctype html> from the top of each html file)

[13:30:01.0000] <gsnedders>
I know.

[13:31:00.0000] <gsnedders>
It should be for a lot, though.

[13:31:01.0000] <gsnedders>
Very little changes per spec for quirks mode.

[13:31:02.0000] <gsnedders>
CSS would be a huge amount of work, but HTML5 wouldn't be.

[13:31:03.0000] <jgraham>
Lots of tests will do thjings like load documents in iframes

[13:31:04.0000] <jgraham>
Do you need to change the document in the iframe

[13:31:05.0000] <jgraham>
*So

[13:32:00.0000] <jgraham>
Which could be a data: uri

[13:32:01.0000] <jgraham>
So there is no automated approach that will be reliable

[13:32:02.0000] <jgraham>
So it will mean going through all submissions by hand

[13:32:03.0000] <jgraham>
Which is possible ofc

[13:33:00.0000] <jgraham>
It's not like it will be an impossible amount of work

[13:33:01.0000] <TabAtkins>
Hixie: While you're changing the comment verifier code, could you reject any feedback starting with a doctype too?  For reasons unknown to me a lot of the spam is people just putting source-code for pages into the comment box, and I haven't seen a single bug legitimately start with a doctype.

[13:33:02.0000] <gsnedders>
jgraham: I would much rather do that, FWIW.

[13:33:03.0000] <gsnedders>
jgraham: Than having separate tests.

[13:33:04.0000] <jgraham>
gsnedders: Do what?

[13:33:05.0000] <TabAtkins>
Hixie: (You could probably get away with just rejecting anything starting with "<", possibly preceded by whitespace.)

[13:34:00.0000] <gsnedders>
jgraham: Having the same testsuite for both, pretty much.

[13:34:01.0000] <jgraham>
TabAtkins: <html> might be a better be

[13:34:02.0000] <jgraham>
gsnedders: If you can convince someone to pay for it, sure

[13:34:03.0000] <jgraham>
*bet

[13:34:04.0000] <jgraham>
At the moment we don't even have an automated harness

[13:34:05.0000] <TabAtkins>
jgraham: That wouldn't work - a good chunk of the relevant spam starts witha doctype, not <html>.

[13:34:06.0000] <jgraham>
So some proverb involving beggars and choosers comes to mind

[13:34:07.0000] <gsnedders>
jgraham: But an automated harness is needed by no browser vendor, so…

[13:35:00.0000] <zewt>
relevant spam - an uncommon sequence of words

[13:35:01.0000] <gsnedders>
jgraham: Whereas more tests benefit browser vendors.

[13:35:02.0000] <TabAtkins>
zewt: Meaning "the spam under discussion", of coruse.

[13:35:03.0000] <zewt>
i know, heh

[13:35:04.0000] <jgraham>
TabAtkins: I think I meant <!DOCTYPE | <html>

[13:35:05.0000] <TabAtkins>
jgraham: Oh, okay.  Yeah, I suspect that would catch most of them.  Though I don't think I've ever seen a legitimate bug starting with <, either.

[13:36:00.0000] <jgraham>
gsnedders: Doubling the number of tests just to test the same codepath twice in most cases doesn't sound that appealing to vendors

[13:36:01.0000] <TabAtkins>
Best, of course, would be setting up an approval queue that a few of us can hit and accept/reject things quickly and easily before hitting the bugzilla.

[13:37:00.0000] <jgraham>
It makes test runs take twice as long, doubles the number of regressions to investigate per bug, and takes time to implement

[13:37:01.0000] <gsnedders>
/me doesn't feel like debating it now

[13:37:02.0000] <jgraham>
gsnedders: Clearly it is an axis along which browser behaviour can vary. But one presumes that in a sane browser the mode doesn't propogate everywhere

[13:38:00.0000] <jgraham>
So it doesn't seem more valuable then, say, making sure all tests pass if there is at least one script in the DOM

[13:38:01.0000] <gsnedders>
jgraham: We need some tests for things that quirks mode might obviously change, at the very least. And things it does change in any browsers in the past few years.

[13:38:02.0000] <jgraham>
gsnedders: Agreed entirely

[13:39:00.0000] <gsnedders>
How far we go is a question we'll need to discuss, though

[13:39:01.0000] <AryehGregor>
Okay, testing deleteContents() is kind of annoying.

[13:39:02.0000] <AryehGregor>
Because it's a real pain to reset between tests . . .

[13:39:03.0000] <AryehGregor>
Especially since cloneNode() doesn't work on Documents for some obnoxious reason.

[13:39:04.0000] <zewt>
this is bugging me--aren't custom event names (with no requirement of any sane namespacing) going to cause backwards-compat issues in the future, because people will be using every conceivable verb as an event name?

[13:39:05.0000] <jgraham>
AryehGregor: Can you use try/catch/finally?

[13:40:00.0000] <gsnedders>
zewt: No moreso than creating new HTML elements.

[13:40:01.0000] <AryehGregor>
jgraham, how does that help when it successfully deletes a chunk of the document?  I have to restore the document to its previous state somehow.

[13:40:02.0000] <jgraham>
try {/*do the test*/} catch(e) {throw e} finally {/*reset*/}

[13:40:03.0000] <zewt>
people aren't exactly encouraged to use arbitrary strings as HTML elements

[13:40:04.0000] <zewt>
(rather, they're strongly discouraged from it)

[13:40:05.0000] <AryehGregor>
That's not the issue, the issue is I have to actually reset the document.

[13:40:06.0000] <hober>
name collisions just aren't that big of a deal in practice

[13:40:07.0000] <gsnedders>
zewt: Go read the IE blog :P

[13:41:00.0000] <jgraham>
AryehGregor: Well yes, I am somewhat assuming you have a way to create the initial state

[13:41:01.0000] <jgraham>
I recommend recreating all state from scratch between tests

[13:41:02.0000] <zewt>
also, one set of horrible backwards-compatibility black holes doesn't justify another :P

[13:41:03.0000] <AryehGregor>
That's what I'll have to do here, yes.

[13:41:04.0000] <AryehGregor>
For things that don't mutate the DOM, it's not really necessary.

[13:41:05.0000] <jgraham>
Right

[13:42:00.0000] <jgraham>
But in general it is good if errors from one test don't propogate into others

[13:42:01.0000] <zewt>
it's not a problem if people use event names with any sensible namespacing scheme, but there's no convention in place or anything

[13:42:02.0000] <jgraham>
(for some reason, I seem to recall that javascript libraries love making tests like that)

[13:42:03.0000] <AryehGregor>
I generally adopt the philosophy that if there are test failures, I'll look into them then.

[13:42:04.0000] <AryehGregor>
/me realizes he can just use innerHTML to reset, nice

[13:44:00.0000] <AryehGregor>
(assuming my DOM is nice enough that it will round-trip, but if not, oh well)

[13:44:01.0000] <jgraham>
AryehGregor: Bear in mind that you are (hopefully) not the only consumer of your tests

[13:44:02.0000] <AryehGregor>
I'm testing all the consumers of my tests.

[13:44:03.0000] <hober>
zewt: if you don't want your names to collide, pick sufficiently interesting names.

[13:45:00.0000] <zewt>
but web specs generally don't make changes under the notion of "it's okay to break web pages if the developer was incompetent"

[13:47:00.0000] <jgraham>
AryehGregor: Right, but the ultimate consumer is some developer who gets a regression report telling them that a whole bunch of contentEditable tests failed with the changes they made

[13:47:01.0000] <AryehGregor>
I'm aware of that.

[13:50:00.0000] <AryehGregor>
Ugh, why can't Documents be cloned?

[13:53:00.0000] <TabAtkins>
AryehGregor: Because cloning is an abomination.

[13:53:01.0000] <AryehGregor>
Why?

[13:53:02.0000] <TabAtkins>
I should have added "...unto God."

[13:54:00.0000] <AryehGregor>
Why?

[13:54:01.0000] <TabAtkins>
I dunno, go ask the Bible.

[13:54:02.0000] <TabAtkins>
I didn't make the rules here.

[13:55:00.0000] <AryehGregor>
. . .

[13:57:00.0000] <AryehGregor>
You know, I just realized that restoring the document by overwriting the contents of the log isn't really that useful for testing purposes.

[13:57:01.0000] <AryehGregor>
I think I'm going to use an iframe.

[13:57:02.0000] <AryehGregor>
That seems a lot saner.

[13:57:03.0000] <AryehGregor>
/me now has to figure out how iframes work, exactly, but that shouldn't be too hard

[13:58:00.0000] <jgraham>
As long as you remember that the load is async, all is good

[14:00:00.0000] <jgraham>
(which is pretty straightforward)

[14:04:00.0000] <Hixie>
TabAtkins: sure

[14:05:00.0000] <Hixie>
TabAtkins: on it

[14:09:00.0000] <TabAtkins>
Hixie: Either my suggestion (reject if it starts with "<") or jgraham's (reject if it starts with "<!doctype" or "<html") would work.

[14:10:00.0000] <AryehGregor>
Reject if it starts with "<" sounds too broad.

[14:10:01.0000] <TabAtkins>
AryehGregor: I don't recall ever seeing a legitimate bug that started with "<".

[14:11:00.0000] <Hixie>
i rejected with a <, it'll only affect ms2ger

[14:11:01.0000] <TabAtkins>
Haha.

[14:11:02.0000] <TabAtkins>
I suppose starting a bug with a chat transcript may cause a problem.

[14:11:03.0000] <Hixie>
people should give context anyway

[14:12:00.0000] <Hixie>
i hate reading these bugs that just start without context so i've no idea wtf y'all are talking about until i'm half-way through

[14:12:01.0000] <Hixie>
then i have to reread it with context :-P

[14:12:02.0000] <AryehGregor>
TabAtkins, http://bit.ly/eAdCP7

[14:12:03.0000] <Hixie>
i've also updated the bug report form so it logs the user agent, hopefully we'll be able to see if there's any patterns there

[14:12:04.0000] <TabAtkins>
Hixie: That reminds me, I have a five-page paper expounding on the changes you should make to HTML.

[14:13:00.0000] <Hixie>
cool, mail it in

[14:13:01.0000] <AryehGregor>
E.g.: http://www.w3.org/Bugs/Public/show_bug.cgi?id=7746

[14:13:02.0000] <Hixie>
i'll stick it on top of the other 1600 pages :-P

[14:13:03.0000] <othermaciej>
Hixie: 118 decision just posted

[14:13:04.0000] <TabAtkins>
Hixie: I was, um, joking about rambling context-less bugs.  ^_^

[14:13:05.0000] <othermaciej>
Hixie: will 3 weeks extra time to draft a 119 counter-proposal be sufficient?

[14:13:06.0000] <Hixie>
TabAtkins: :-P

[14:14:00.0000] <TabAtkins>
AryehGregor: Okay, point taken.  Shrug.  They can start their bug with something else, or file it via bugzilla.

[14:14:01.0000] <Hixie>
othermaciej: one sec

[14:14:02.0000] <AryehGregor>
Is there a spec for how encoding names are supposed to be processed?  (Apropos: http://blogs.msdn.com/b/ieinternals/archive/2011/02/28/script-error-c00ce56e-means-you-have-specified-an-invalid-charset-utf8-is-not-utf-8.aspx)

[14:15:00.0000] <Hixie>
othermaciej: doesn't that decision supercede issue 119 altogether?

[14:15:01.0000] <Hixie>
othermaciej: (awesome decision, btw)

[14:15:02.0000] <Hixie>
othermaciej: (didn't expect that to go that way at all)

[14:15:03.0000] <othermaciej>
Hixie: I have no idea, I don't remember what 119 is about

[14:16:00.0000] <othermaciej>
Hixie: did the relations with special meaning when repeated all get dropped?

[14:16:01.0000] <Hixie>
othermaciej: yes

[14:16:02.0000] <othermaciej>
it's just about "up"?

[14:17:00.0000] <othermaciej>
ok

[14:17:01.0000] <Hixie>
othermaciej: 118 drops index, up, first, and last. 119 is about up.

[14:17:02.0000] <Hixie>
othermaciej: allow me to make this easier on you. I retract any intent to object to 119. :-)

[14:18:00.0000] <othermaciej>
then I guess I should just post a call for consensus to close 119 by amicable resolution

[14:21:00.0000] <Hixie>
sounds good

[15:26:00.0000] <TabAtkins>
Ah, extracting a common algorithm is always satisfying, especially in specs.  ^_^

[15:28:00.0000] <Hixie>
yeah

[15:29:00.0000] <Hixie>
not quite as satisfying as deleting a bunch of text!

[15:30:00.0000] <TabAtkins>
Does it count if you're deleting the text that was previously duplicating the common algo?

[15:30:01.0000] <Hixie>
that's extracting a common algorithm

[15:30:02.0000] <TabAtkins>
Damn.

[15:30:03.0000] <Hixie>
i mean deleting text without replacing it with anything :-)

