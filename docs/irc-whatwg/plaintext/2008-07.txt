2008-07-01
[21:22:00.0000] <Hixie>
I love how readyState is an integer on most interfaces, but a string on DOMString

[21:22:01.0000] <Hixie>
er

[21:22:02.0000] <Hixie>
Document

[00:17:00.0000] <Hixie>
http://www.thewebsiteisdown.com/ is the funniest thing i've seen for weeks

[00:30:00.0000] <Hixie>
what do you call the way of encoding integers that uses the top bit to indicate if there's more to come again?

[01:11:00.0000] <annevk>
http://feeds.feedburner.com/~r/blogspot/MKuf/~3/323764470/google-learns-to-crawl-flash.html :/

[01:12:00.0000] <Hixie>
oh cool, we finally launched that

[01:14:00.0000] <annevk>
yum, WebSocket

[01:18:00.0000] <annevk>
there are several markup errors below the readyState def

[01:18:01.0000] <Hixie>
there are?

[01:18:02.0000] <Hixie>
i may have fixed them already

[01:19:00.0000] <annevk>
oops, I hit F5 while the bandwidth here is terrible...

[01:20:00.0000] <annevk>
they advertize high speed but you get 6kb

[01:20:01.0000] <Hixie>
i should go to bed, i have to get up in 6 hours to catch a plane to meet you

[01:21:00.0000] <annevk>
i just woke up again :/

[01:21:01.0000] <annevk>
but yeah, sounds like a plan :)

[01:22:00.0000] <annevk>
(seems to be fixed btw)

[01:25:00.0000] <Hixie>
what building is this meeting in again?

[01:25:01.0000] <annevk>
122

[01:25:02.0000] <Hixie>
nm found it

[01:25:03.0000] <annevk>
see http://www.w3.org/2008/webapps/Group/f2f0807.html

[01:26:00.0000] <Hixie>
yeah found it

[01:26:01.0000] <Hixie>
i'll be on Southwest Flight #3506 SJC-SEA, landing at 10:50am, so i should be there by 1pm

[01:27:00.0000] <Hixie>
nn

[01:27:01.0000] <annevk>
k, g'n

[07:34:00.0000] <tefery>
hellow

[07:47:00.0000] <hendry>
hsivonen: why do i get a bad value with a data url on http://static.webvm.net/wct/test.html

[07:47:01.0000] <hendry>
with validator.nu? :)

[07:49:00.0000] <zcorpan>
hendry: line breaks

[07:52:00.0000] <hendry>
zcorpan: oh thanks

[07:54:00.0000] <hendry>
zcorpan: i was just looking at http://simon.html5.org/articles/mobile-results btw

[07:55:00.0000] <hendry>
zcorpan: perhaps you had a suggestion for the "Web Compatibility Test for Mobile Browsers"?

[08:25:00.0000] <hsivonen>
hendry: Valid data URIs forbid all sorts of convenience

[08:33:00.0000] <philipj>
m

[08:35:00.0000] <hendry>
hsivonen: i don't understand ?

[08:36:00.0000] <annevk>
maybe there should be an exception for data:

[08:37:00.0000] <hsivonen>
hendry: unescaped spaces, etc. aren't allowed

[08:43:00.0000] <zcorpan>
hendry: i did but i don't know if my suggestions have been implemented

[08:48:00.0000] <hendry>
zcorpan: i think they are in test #5 http://lists.w3.org/Archives/Public/public-mwts/2008Jul/0002.html

[08:49:00.0000] <hendry>
hsivonen: oh ok. well when i tested the "line broken" url in a couple of browsers, it worked fine.

[08:58:00.0000] <zcorpan>
hendry: ah yep, although it doesn't test drocanianness

[09:01:00.0000] <zcorpan>
Philip`_: hmm, why does http://philip.html5.org/tests/canvas/suite/tests/2d.path.arcTo.shape.curve1.html say Passed in opera 9.5?

[09:04:00.0000] <zcorpan>
Philip`_: is http://philip.html5.org/tests/canvas/suite/tests/2d.fillRect.zero.html correct?

[09:08:00.0000] <zcorpan>
http://philip.html5.org/tests/canvas/suite/tests/2d.path.arc.selfintersect.1.html

[09:21:00.0000] <annevk>
(it says pass because presumably not enough points are compared)

[09:32:00.0000] <Philip`>
zcorpan: What annevk said

[09:33:00.0000] <Philip`>
I'll fix the test so that it fails :-)

[09:33:01.0000] <annevk>
it shouldn't be too expensive to just compare all points, no?

[09:33:02.0000] <Philip`>
(Well, I'll fix my offline copy, but I won't bother uploading it since that takes way too much effort)

[09:33:03.0000] <annevk>
at least when the end result is all lime

[09:34:00.0000] <annevk>
anyway, time to find some food

[09:34:01.0000] <Philip`>
annevk: That doesn't really work due to antialiasing - it needs to avoid comparing pixels around the edges of shapes, else it'll fail due to unnoticeable blending differences

[09:37:00.0000] <Philip`>
zcorpan: 2d.fillRect.zero is wrong - I already fixed that in my offline copy but didn't bother uploading it :-(

[09:40:00.0000] <Philip`>
zcorpan: Changed my thing so that 2d.path.arc.selfintersect.1 fails too - it's not meant to be testing for that bug but I suppose there's no reason why it shouldn't

[10:07:00.0000] <gsnedders>
Philip`, jgraham: Either of you have my phone number? I'm gonna be offline from tonight till next Tues/Wed, so it may be worthwhile for (at least) one of you to have it

[10:08:00.0000] <Philip`>
gsnedders: I don't know whether either of us has it

[10:08:01.0000] <gsnedders>
it's at the end of http://stuff.gsnedders.com/http-parsing.txt

[10:08:02.0000] <Philip`>
(hence you can logically deduce that I don't have it)

[10:09:00.0000] <Philip`>
/me saves that somewhere

[10:10:00.0000] <gsnedders>
(it also has my address if anyone wants to stalk me)

[10:13:00.0000] <Philip`>
gsnedders: Did we agree some specific time? Grep says "20080707" / "7-ish" / same location as before, but I don't have any clocks with 7-ish marked on them so I wouldn't be quite sure when that is

[10:13:01.0000] <gsnedders>
Philip`: 20080707T190000+01

[10:13:02.0000] <gsnedders>
Philip`: 20080707T190000+0100 to be exact

[10:14:00.0000] <Philip`>
20080707T190+0100 is probably as specific as I can manage :-)

[10:14:01.0000] <gsnedders>
Philip`: Yeah, I was guessing you'd be late, again :P

[10:14:02.0000] <Philip`>
Anyway, sounds fine to me

[10:15:00.0000] <Philip`>
as long as someone reminds me in case I forget

[10:16:00.0000] <gsnedders>
Well, I know how long it takes to get there, now, so perhaps I can be on time

[10:18:00.0000] <Philip`>
/me sets up cron as a reminder, though he's probably set it up wrong

[10:20:00.0000] <gsnedders>
jgraham: remind Philip` 

[10:21:00.0000] <gsnedders>
that's about as much as I can do to remind you :P

[11:15:00.0000] <Dashiva>
Oh snap. Did RB just call Hixie incompetent?

[11:16:00.0000] <krijnh>
Isn't he implying that all the time? :)

[11:17:00.0000] <Dashiva>
Fair enough, but this one surprised me: http://www.w3.org/Bugs/Public/show_bug.cgi?id=5822#c2

[11:18:00.0000] <annevk>
http://isen.com/blog/2008/05/four-paths-to-nz-internet-leadership.html

[11:24:00.0000] <krijnh>
Dashiva: it has the same tone as every other mail he sends..

[11:25:00.0000] <krijnh>
annevk: no news about logging #webapps? :)

[11:25:01.0000] <Dashiva>
Not much point. Nobody talks there outside of telcons, and they don't have the telcons there if it's logged :)

[11:26:00.0000] <krijnh>
Ke, makes sense

[11:29:00.0000] <Philip`>
The process around the logging reveals more than the logging itself would :-)

[11:30:00.0000] <krijnh>
:)

[11:30:01.0000] <Dashiva>
Without it I would never have learned what "open" actually means

[11:45:00.0000] <Dashiva>
So now that URLs are nearing as-done-as-it-gets, I wonder if we'll see WF2 work

[11:50:00.0000] <jcranmer>
Dashiva: I think he, in calling Hixie incompetent, showed his incompetency

[12:04:00.0000] <annevk>
http://isen.com/blog/2008/03/next-president-internet-policy.html

[12:20:00.0000] <Hixie>
merry mailman mailing list reminder day everyone

[12:22:00.0000] <Hixie>
wow, we've beaten the www-html daily traffic record for some time

[12:22:01.0000] <annevk>
whatwg⊙wo ?

[12:23:00.0000] <gsnedders>
jcranmer: who?

[12:23:01.0000] <jcranmer>
gsnedders: RB

[12:23:02.0000] <gsnedders>
jcranmer: ah

[12:23:03.0000] <jcranmer>
conversation happened 3 min before you arrived

[12:23:04.0000] <gsnedders>
damned Apple releasing system updates!

[12:25:00.0000] <gsnedders>
/me reads his description of what the header is for, and wonders what the use of something that complex is

[12:25:01.0000] <jgraham>
RB's comment was funny. I mean I think there might be a legitimate reason for the feature request but the way he phrased his comment suggests that he's either oblivious or taking the piss

[12:25:02.0000] <Hixie>
no i mean more traffic to www-html than we've had for days

[12:26:00.0000] <gsnedders>
that's it, we need a better mailing list.

[12:26:01.0000] <annevk>
ah

[12:26:02.0000] <gsnedders>
gsnedders-is-awesome, anybody?

[12:33:00.0000] <JaffaTheCake>
hullo

[12:34:00.0000] <JaffaTheCake>
Anyone alive that can answer some questions on <abbr>?

[12:34:01.0000] <annevk>
sure

[12:35:00.0000] <JaffaTheCake>
Looking at the html4 & xhtml2 specs, it seems to suggest that anything that can have an expansion should be wrapped in <abbr title=""></abbr>

[12:36:00.0000] <annevk>
not the case in HTML5

[12:36:01.0000] <Hixie>
yeah you only need to wrap abbreviations you want to annotate, basically

[12:36:02.0000] <JaffaTheCake>
However, the html5 spec seems to suggest only abbreviations that are vocally pronounced should have the abbr element

[12:36:03.0000] <JaffaTheCake>
ahh

[12:36:04.0000] <JaffaTheCake>
excellent

[12:36:05.0000] <JaffaTheCake>
That was my reading

[12:36:06.0000] <JaffaTheCake>
Just checking

[12:36:07.0000] <Hixie>
doesn't have to just be the vocally pronounced ones necessarily

[12:36:08.0000] <Hixie>
just the ones you want to annotate with an expansion :-)

[12:37:00.0000] <JaffaTheCake>
fair enough

[12:37:01.0000] <JaffaTheCake>
I guess the microformat abbr date pattern goes against that thinking?

[12:38:00.0000] <Hixie>
in html5 instead of <abbr> for date and times you can use <time> :-)

[12:38:01.0000] <jcranmer>
forget mailing lists, someone needs to update mailman to use HTML 5

[12:39:00.0000] <jcranmer>
or at least HTML 4.01

[12:40:00.0000] <annevk>
or have it use the W3C mailing list software

[12:40:01.0000] <JaffaTheCake>
Yeah, saw the time thingy, great to finally have that in a spec.

[12:40:02.0000] <Hixie>
the w3c mailing list software is pretty awesome except for one thing, which is the way it doesn't do cross-references across mailing lists or months

[12:41:00.0000] <JaffaTheCake>
But I think it's worth following the html5 idea of abbr now, or at least as much as you can while still being valid html4

[12:42:00.0000] <JaffaTheCake>
So I'm guessing <abbr title="2008-07-07">next Monday</abbr> would be a misuse of abbr in html5's eyes

[12:42:01.0000] <jcranmer>
Hixie: I'm working on trying to fix that, at least for a select group of users :-)

[12:42:02.0000] <JaffaTheCake>
ignoring that html5 has a better tag for the job

[12:44:00.0000] <Hixie>
JaffaTheCake: yeah

[12:45:00.0000] <othermaciej>
yeah it is always a pain to read cross-month threads via the archives

[12:45:01.0000] <JaffaTheCake>
Cheers guys

[12:47:00.0000] <JaffaTheCake>
It's probably worth expending the bit on abbr in the spec to make it completely clear (more examples and such), unless I'm alone in my dumbness. It's frequently abused to it's worth keeping ambiguity to a minimum

[12:49:00.0000] <Hixie>
it has five examples already :-)

[12:49:01.0000] <Hixie>
but i'd be happy to add more

[12:57:00.0000] <hsivonen>
looks like the term "benevolent dictator" is a PR problem outside the Python communtity

[12:57:01.0000] <hsivonen>
http://www.w3.org/QA/2008/06/what_benevolent_dictator.html

[12:58:00.0000] <Dashiva>
They should use philosopher king instead then ;)

[13:02:00.0000] <Hixie>
/me comments unproductively on that blog post

[13:24:00.0000] <JaffaTheCake>
Hixie: Perhaps not another example then, but a bit more on when it would be used and when it wouldn't (and why). Especially as it's a significant difference from HTML4

[13:31:00.0000] <Hixie>
could you send an e-mail to that effect to whatwg⊙wo? (otherwise i'll forget, i'm deep in the web sockets stuff right now)

[13:33:00.0000] <JaffaTheCake>
Yeah sure

[13:33:01.0000] <JaffaTheCake>
no probs

[13:35:00.0000] <jgraham>
/me wonders if he is the only person who is irritated by the W3C's comment moderation system

[13:39:00.0000] <Hixie>
JaffaTheCake: thanks dude

[13:41:00.0000] <hsivonen>
Hixie: Thanks for the recent fixes for the bugs I filed.

[13:42:00.0000] <hsivonen>
Hixie: I'm a bit surprised, though, that you opted to qualify the scopingness of the non-foreignObject stack nodes by the HTML namespace

[13:42:01.0000] <hsivonen>
I'll have to study what the effect is, since not all of them break out of foreign content

[13:42:02.0000] <Hixie>
hm?

[13:43:00.0000] <Hixie>
i wasn't aware that i had done something surprising

[13:43:01.0000] <Hixie>
hsivonen: could you elaborate?

[13:44:00.0000] <Hixie>
maybe it was unintentional

[13:46:00.0000] <hsivonen>
Hixie: consider http://parsetree.validator.nu/?parser=html5&content=%3Cmath%3E%3Cmrow%3Efoo%3Cobject%3Ebar%3C%2Fmrow%3Ebaz%3C%2Fobject%3E%3C%2Fmath%3E&submit=Print+Tree

[13:47:00.0000] <hsivonen>
Hixie: in my implementation, the scoping elements other than foreignObject retain their scopingness even if assigned to a foreign namespace

[13:47:01.0000] <hsivonen>
Hixie: I thought this was intentional to minimize tree shape differences of cargo cult paste

[13:48:00.0000] <hsivonen>
vs. http://parsetree.validator.nu/?parser=html5&content=%3Cmath%3E%3Cmrow%3Efoo%3Cnot-object%3Ebar%3C%2Fmrow%3Ebaz%3C%2Fnot-object%3E%3C%2Fmath%3E&submit=Print+Tree

[13:55:00.0000] <Hixie>
oh good lord no, that was never itended

[13:55:01.0000] <Hixie>
intended

[13:55:02.0000] <Hixie>
if that had been intended it wouldn't have linked to the definitions of the elements

[13:56:00.0000] <hsivonen>
hmm interesting. I guess I'll have some code to change then

[13:57:00.0000] <hsivonen>
as far as I could tell, what I implemented matched the spririt of the foreign content design

[14:00:00.0000] <Hixie>
that would just lead to really weird effects

[14:00:01.0000] <Hixie>
my intent was to make the foreign content as surprise-free as possible

[14:00:02.0000] <hsivonen>
Hixie: what weird effects? one would never notice with proper nesting

[14:01:00.0000] <Hixie>
sure but one missed end tag (or /) and boom, the whole dom goes weird

[14:01:01.0000] <hsivonen>
one would never notice with what's today valid MathML or SVG, either

[14:05:00.0000] <hsivonen>
OK. I'll make the scoping HTML elements non-scoping, but I think that to make things non-weird, <font> really can't unconditionally break foreign content

[14:06:00.0000] <Hixie>
<font> needs research

[14:10:00.0000] <Hixie>
annevk, weinig, othermaciej: the binary stuff is a v2 feature anyway, we'll see if we can get browsers doing UTF-8 first!

[14:10:01.0000] <weinig>
/me nods

[14:10:02.0000] <othermaciej>
yeah as long as the protocol is prepared for different packet types

[14:10:03.0000] <Hixie>
yep

[14:11:00.0000] <Hixie>
my protocol strawman is:

[14:11:01.0000] <annevk>
i suppose you can .data, and .bytes or .blob in the future

[14:11:02.0000] <annevk>
can have*

[14:11:03.0000] <Hixie>
text frame: 0x00 [zero or more UTF-8 bytes] 0xFF

[14:12:00.0000] <annevk>
adding members to Event interfaces shows how broken the init* stuff is

[14:12:01.0000] <othermaciej>
Hixie: I think type/length prefix would be better than start and end delimiters

[14:12:02.0000] <Hixie>
other frames: if the first byte & 0x80 == 0x00, then read bytes until 0xFF and then discard

[14:12:03.0000] <Hixie>
other frames: if the first byte & 0x80 == 0x80, then read a length (7-bit extended integer) and then read that many bytes and then discard

[14:13:00.0000] <Hixie>
(binary data will use frame type 0x80 in a future version)

[14:13:01.0000] <Hixie>
othermaciej: you don't want the server to have to measure UTF-8 strings, it's too easy to get it wrong and not notice for a long time (e.g. if you only test with ASCII)

[14:13:02.0000] <Hixie>
othermaciej: but for binary data you want a length, hence the other frame type

[14:15:00.0000] <othermaciej>
Hixie: I see your point about measuring but having both approaches also seems risky, since clients will have to support both to correctly find packet boundaries but one will likely be untested in the wild at first

[14:16:00.0000] <othermaciej>
(gonna try to pay attention to meeting now)

[14:16:01.0000] <hsivonen>
do Web Sockets violate Architecture if they use GET?

[14:16:02.0000] <hsivonen>
do they use GET?

[14:17:00.0000] <Hixie>
they're not HTTP

[14:17:01.0000] <Hixie>
that's my line and i'm sticking to it

[14:20:00.0000] <hsivonen>
my gut tells to use a non-cacheable method for handshake, but I don't have any substance for this gut feeling

[14:20:01.0000] <Hixie>
who would be doing the caching?

[14:20:02.0000] <hsivonen>
Hixie: a proxy

[14:21:00.0000] <Hixie>
the proxy doesn't see the request, you do a CONNECT to it like with TLS

[14:21:01.0000] <hsivonen>
Hixie: a transparent proxy so that the browser doesn't know it is talking to a proxy

[14:22:00.0000] <hsivonen>
hmm. will Web Sockets break with transparent proxies anyway?

[14:23:00.0000] <Hixie>
so the problem case is when client accesses server, server doesn't yet do Web Sockets and so returns a 200 OK, and then later the client tries to connect again and the cache says "200 OK" instead of upgrading?

[14:23:01.0000] <hsivonen>
/me wonders if transparent proxies are in violation of Architecture

[14:23:02.0000] <Hixie>
btw i recently learnt that what we call "transparent proxies" aren't what http calls "transparent proxies"

[14:24:00.0000] <hsivonen>
Hixie: the problem is that the proxy manages to cache a response for someone else first without proper Vary stuff

[14:24:01.0000] <hsivonen>
but like I said, my gut feeling has no substance

[14:26:00.0000] <hsivonen>
Hixie: did you consider minting a method like SOCKET or WEBSOCKET and rejected it?

[14:30:00.0000] <hsivonen>
does MSN search inside silverlight content?

[14:31:00.0000] <Hixie>
i considered it

[14:32:00.0000] <Hixie>
wasn't really sure what to do about it

[14:32:01.0000] <Hixie>
i guess we could

[14:34:00.0000] <annevk>
servers handle custom methods quite well nowadays

[14:35:00.0000] <hsivonen>
hmm. now that I think about it, minting a new method will need testing with AJP13 and mod_jk

[14:36:00.0000] <hsivonen>
unless, of course, there's a reason why mod_jk can't exist on a socket path anyway

[14:36:01.0000] <Hixie>
no idea

[14:37:00.0000] <hsivonen>
in any case, Web Sockets is the kind of thing you'd expect people to want to implement in a process whose Web connectivity goes through mod_jk

[14:53:00.0000] <hsivonen>
annevk: so it turns out that Standards Suck is available to S60 phones on YouTube, but there's no way to navigate to it from standardssuck.org

[14:54:00.0000] <annevk>
weird

[14:54:01.0000] <hsivonen>
clearly, we need support for HTML5 video in both browsers for S60 and on YouTube

[14:54:02.0000] <annevk>
yes

[14:58:00.0000] <hsivonen>
http://m.youtube.com/profile?user=standardssuck&warned=1

[16:03:00.0000] <Philip`>
/me wonders if switching from Xerces-C to libxml2 is sane

[16:03:01.0000] <Dashiva>
It's got x and 2, how can it not be?

[16:05:00.0000] <Philip`>
But Xerces reminds me of Persian kings, which has to count for something


2008-07-02
[18:07:00.0000] <jacobolus>
annevk: is it well known that «context».translate, «context».scale, and «context».rotate() work exactly the opposite in Opera as they do in Gecko and Webkit?

[18:07:01.0000] <jacobolus>
(these are canvas operations)

[18:10:00.0000] <annevk>
I'm not sure. I'd suggest to file a bug at https://bugs.opera.com/wizard/

[18:10:01.0000] <annevk>
I'm in a meeting atm

[18:10:02.0000] <annevk>
(and sleepy)

[18:10:03.0000] <jacobolus>
no worries

[18:14:00.0000] <jacobolus>
Hixie: I found a whatwg mailing list post of yours which states that opera's behavior is per the spec, and gecko/webkit are doing it wrong.  But it seems to me like it could go either way.  Why did the spec pick Opera’s way, if it in fact did?

[18:14:01.0000] <jacobolus>
The way Gecko/Webkit work is that transforms affect the origin/direction/scale of the "pen" which will draw a line, but then once something is drawn, it stays put, so the way to do transformations is to apply them *before* drawing.

[18:14:02.0000] <jacobolus>
In Opera (and perhaps in the spec?) transformations instead affect whatever path has already been drawn, so transformations must come *after* making a path but before stroking/filling it

[18:15:00.0000] <Hixie>
you mean for the path construction stuff?

[18:15:01.0000] <jacobolus>
Either way, it means that if such transformations are to be used, they can either target webkit/gecko, or opera, but not both

[18:15:02.0000] <Hixie>
i believe the spec changed and opera is now wrong

[18:15:03.0000] <jacobolus>
ah, oky

[18:15:04.0000] <jacobolus>
so that mailing list message that came up in a google search is just out of date then )

[18:15:05.0000] <jacobolus>
:) rather

[18:16:00.0000] <jacobolus>
well, have some shapes: http://www.orbited.org/wiki/CanvasShapes

[18:17:00.0000] <jacobolus>
Hixie: I was drawing polygons, etc. by repeatedly applying «context».rotate(«angle»); «context».moveTo(0,1)

[18:17:01.0000] <Hixie>
yeah, that's not longer gonna work per spec iirc

[18:17:02.0000] <Hixie>
no

[18:17:03.0000] <jacobolus>
and in opera it of course doesn’t work that way :)

[18:17:04.0000] <Hixie>
i expect browsers will get fixed in due course

[18:18:00.0000] <jacobolus>
so that is not going to be an acceptable way to draw per the spec?

[18:18:01.0000] <jacobolus>
because it is very convenient

[18:18:02.0000] <jacobolus>
and makes for quite readable code

[18:20:00.0000] <Hixie>
to be honest i don't recall where the spec ended up

[18:20:01.0000] <Hixie>
Philip` probably knows

[18:20:02.0000] <Hixie>
if he's around

[18:21:00.0000] <jacobolus>
the spec doesn't really make it clear, IMO

[18:21:01.0000] <jacobolus>
it just says “The transformation matrix is applied to coordinates when creating shapes and paths.”

[18:22:00.0000] <Hixie>
yeah

[18:22:01.0000] <Hixie>
i'd look in more detail but i'm in a meeting right now

[18:22:02.0000] <Hixie>
sorry :-)

[18:22:03.0000] <jacobolus>
no worries. not urgent :)

[18:23:00.0000] <Hixie>
try pinging me again in coming days (or ask Philip`!) and i'll do a better job of answering you :-)

[18:23:01.0000] <jacobolus>
cool.  Philip`: if you know, feel free to chime in. :)

[18:25:00.0000] <annevk>
he's in Europe, so might be sleeping

[18:25:01.0000] <jacobolus>
okay, I'll try back later, or in a few days, or something :)

[18:25:02.0000] <Hixie>
:-)

[18:26:00.0000] <jacobolus>
or maybe even make a mailing list post, if I feel ambitious :)

[18:26:01.0000] <annevk>
I'm suggesting you try a different time :)

[18:26:02.0000] <annevk>
(mailing list would probably work better)

[18:26:03.0000] <Hixie>
e-mail would be fine, yes

[18:26:04.0000] <Hixie>
send it to help@

[18:26:05.0000] <Hixie>
rather than whatwg@

[18:26:06.0000] <Hixie>
unless you want to start a thread about changing it again :-)

[18:27:00.0000] <csarven>
Should <object> be only used for non-native data types?

[18:27:01.0000] <csarven>
I just want to get this <object> out of my system because of a few microformats issues :)

[18:27:02.0000] <jacobolus>
Hixie: I don’t think the spec makes it clear what the proper behavior is currently.  so it probably should be made more explicit

[18:27:03.0000] <csarven>
annevk helped quite a bit but I just wanted to wrap it up.

[18:27:04.0000] <Hixie>
ah, well, then send mail to whatwg@ asking for it to be cleared up :-)

[18:28:00.0000] <Hixie>
it probably needs an example or something

[18:28:01.0000] <jacobolus>
yep.  I agree.  I'll maybe write up a blog post about how the two models currently work.

[18:28:02.0000] <jacobolus>
with some pretty pictures, etc.

[18:29:00.0000] <annevk>
csarven, using <object> for HTML, images, etc. is fine

[18:30:00.0000] <csarven>
"fine" ?

[18:31:00.0000] <annevk>
in general it's not needed, but it's not forbidden

[18:31:01.0000] <csarven>
Reading the 4.01 spec it mentions the opposite that, the intention is to handle data types that are not native to the UA

[18:31:02.0000] <jacobolus>
the mozilla canvas tutorial has some transformations applied before drawing whole shapes, but it doesn't seem to have considered applying transformations in the middle of drawing a path

[18:31:03.0000] <csarven>
But I find it slightly ambigious

[18:32:00.0000] <csarven>
annevk It is true that it doesn't say it must/should not be used that way but it doesn't mean it may be.

[18:32:01.0000] <mcarter>
hello

[18:32:02.0000] <mcarter>
Hixie, yt?

[18:33:00.0000] <Hixie>
yo

[18:34:00.0000] <csarven>
"Most user agents have built-in mechanisms for rendering common data types such as text, GIF images, colors, fonts, and a handful of graphic elements. To render data types they don't support natively, user agents generally run external applications. The OBJECT element allows authors to control whether data should be rendered externally or by some program, specified by the author, that renders the data within the user agent." http

[18:34:01.0000] <mcarter>
Hixie, i'm on a different machine -- I don't suppose you have that link handy with the notes you made?

[18:35:00.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/notes

[18:35:01.0000] <Hixie>
i started speccing it, you can see what i have so far here: http://www.whatwg.org/specs/web-apps/current-work/#network

[18:37:00.0000] <csarven>
annevk Also, when you say "not forbidden", what purpose would it then serve if it is used for native data types?

[18:38:00.0000] <annevk>
dunno, embedding data with rich data

[18:38:01.0000] <annevk>
rich fallback data, oops

[18:39:00.0000] <csarven>
I'm not sure if I understand that. Got an example?

[18:40:00.0000] <Hixie>
mcarter: (see above, in case you missed my comments)

[18:43:00.0000] <csarven>
The 4.01 spec only mentions that it is intended for non-native data types. Is there anything that suggests that it *may* be used for native data types other then the fact that it doesn't say it *should not* or *must not* be used for native data types?

[18:44:00.0000] <mcarter>
Hixie, I think the WebSocketReadEvent interface should have a type or dataType attribute, for when we can receive binary data as well as text

[18:45:00.0000] <Hixie>
i was thinking of have ontext instead of onread

[18:45:01.0000] <Hixie>
of having

[18:45:02.0000] <annevk>
we should just add .blob to it when that happens

[18:45:03.0000] <annevk>
well, maybe

[18:47:00.0000] <mcarter>
I prefer onread with evt.datatype to ontext and onblob (or whatever we would call it), but i'm not sure why i prefer it

[18:47:01.0000] <Hixie>
well for now there's only text anyway

[18:47:02.0000] <annevk>
why'd you need datatype? you probably know what you're going to communicate in

[18:47:03.0000] <annevk>
and if not you can check which of the two is empty and use the other

[18:48:00.0000] <Hixie>
annevk: when we add binary data you'd get a mixture

[18:48:01.0000] <jacobolus>
mcarter: maybe because it would preserve order?

[18:48:02.0000] <annevk>
isn't it decided by the handshake which one is going to be filled?

[18:48:03.0000] <mcarter>
jacobolus, I was thinking that, but it doesn't matter either way

[18:48:04.0000] <annevk>
seems a bit weird to have strangely decoded UTF-8 when you transmit "binary"

[18:48:05.0000] <kangax>
Is this the right place to ask about canvas?

[18:49:00.0000] <jacobolus>
kangax: you can ask me anyway.  i just spent a day trying to figure it out :)

[18:50:00.0000] <kangax>
jacobolus: I can't find a native way to output text

[18:50:01.0000] <jacobolus>
kangax: yeah, that only works in some browsers (firefox 3 maybe?)

[18:50:02.0000] <kangax>
damn

[18:51:00.0000] <jacobolus>
kangax: the way people do it is to make other html elements and layer them over the top of the canvas :)

[18:51:01.0000] <annevk>
next generation of Web browsers likely :/

[18:51:02.0000] <annevk>
or create small images for letters

[18:51:03.0000] <jacobolus>
kangax: but obviously that's not a great solution

[18:51:04.0000] <kangax>
I am looking at cvi_text_lib which simulates text output

[18:51:05.0000] <Hixie>
bbl

[18:52:00.0000] <Hixie>
spec is work in progress

[18:52:01.0000] <kangax>
it's pretty slow when rotating/moving the text

[18:52:02.0000] <Hixie>
but feel free to give comments here

[18:52:03.0000] <Hixie>
later

[18:52:04.0000] <jacobolus>
kangax: SVG does text ;)

[18:52:05.0000] <kangax>
Is it supported by A-grade browsers?

[18:52:06.0000] <kangax>
(svg)

[18:53:00.0000] <jacobolus>
what's A-grade? :)

[18:53:01.0000] <jacobolus>
it's supported by recent gecko/webkit/opera

[18:53:02.0000] <kangax>
FF2+, IE6+, S2+, O9+

[18:53:03.0000] <jacobolus>
and by a plugin from adobe

[18:53:04.0000] <roc>
Firefox trunk supports the HTML5 text APIs for canvas

[18:54:00.0000] <mcarter>
kangax, IE6 gets a C- in my book...

[18:54:01.0000] <jacobolus>
kangax: there's no drawing api with text supported by all of those, no

[18:54:02.0000] <kangax>
roc: interesting... I wish I could afford supporting FF only

[18:54:03.0000] <roc>
so you can play with that and your code should work in the next version of Firefox and the other good browsers

[18:55:00.0000] <kangax>
I'm just trying to figure out if it's best to go with flash or of I can actually make JS do what I need

[18:55:01.0000] <jacobolus>
kangax: what do you need?

[18:55:02.0000] <roc>
if you need it to work in IE then you should probably go with Flash :-(

[18:56:00.0000] <kangax>
text (rotatiion/moving/letter-by-letter coloring), user images (moving/rotation/resizing)

[02:24:00.0000] <jacobolus>
Hixie: ah, according to http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2008-June/015058.html you’ve got it figured out now, and the Opera behavior is wrong, while Webkit/Gecko are correct.  So then the only suggestion I have is that an example is needed, and the spec needs to be more explicit

[02:32:00.0000] <Windstoss>
Provided, you define a opportunistic caching namespace that matches all URLs of an "GET-only" Website. You don't assign any URLs to this namespace. Now, a user browses this Website. When he goes offline for some reason and revisits the website, would he be able to browse all sites he browsed when he was online?

[02:50:00.0000] <hsivonen>
Hixie: I don't understand your "unproductive" comment on the dictator blog post

[02:57:00.0000] <gDashiva>
/me assumes it relates to "The W3C process has evolved to reduce the central role of the Director."

[02:57:01.0000] <gDashiva>
(and the rest of that paragraph)

[03:41:00.0000] <Windstoss>
Alright, I think I got the bit about fallback entries wrong :(

[04:48:00.0000] <zcorpan>
hmm, why is http://www.pumpkinpirate.info/ks/test.html getting black edges in opera

[05:26:00.0000] <Philip`>
jacobolus: If you tell the canvas to transform then draw path then fill, it'll work exactly the same in all implementations, so you can write code that always works - it only differs if you transform after drawing the path

[05:27:00.0000] <Philip`>
jacobolus: rotate/moveTo/rotate/moveTo should work according to the spec (and Firefox and WebKit and Konqueror - see http://philip.html5.org/tests/canvas/suite/tests/results.html#2d.path.transformation.basic )

[05:27:01.0000] <Philip`>
jacobolus: The spec says "The points and lines added to the path by these methods must be transformed according to the current transformation matrix as they are added." which seems clear enough to me

[05:27:02.0000] <Philip`>
(Someone poke me if he joins this channel so I can point him at the log :-) )

[06:16:00.0000] <zcorpan>
Philip`: is http://philip.html5.org/tests/canvas/suite/tests/2d.strokeRect.zero.4.html correct?

[06:56:00.0000] <Philip`>
zcorpan: Yes (I think) - zero-height strokeRect draws a horizontal line (not a rect), so there's no vertical lines that should be drawn onto the visible canvas region; and strokeRect draws a closed shaped, so it doesn't have any line-caps (only line-joins), so those shouldn't draw anything visible onto the canvas

[06:57:00.0000] <Philip`>
(That particular case comes from when I was going through a stupid phase of unnecessarily using transparent-canvas-on-green-background to indicate success instead of solid-green-canvas - I ought to fix all those at some point in the future)

[06:57:01.0000] <zcorpan>
Philip`: ok... thanks

[08:26:00.0000] <Philip`>
zcorpan: On 2d.path.arc.shape.5 try making the canvas much larger and the lineWidth much narrower, and then you'll see how weird Opera is :-)

[08:27:00.0000] <Philip`>
I think I saw someone do arc(x, y, r, 0, 360, false), which triggered that bug (because 360 = lots of radians)

[08:31:00.0000] <zcorpan>
Philip`: whey, that's pretty weird indeed

[09:18:00.0000] <zcorpan>
hmm it's easy to make firefox hang by doing an arc() with a very high number for the radius argument

[09:20:00.0000] <hsivonen>
the CAPTCHA thing makes one go "hmm": http://www.webvisum.com/

[09:23:00.0000] <hsivonen>
zcorpan: icon.png deployed on validator.nu. the usual front page caching issues apply.

[09:23:01.0000] <hsivonen>
zcorpan: thank you

[09:23:02.0000] <hsivonen>
hendry: see above. validator.nu now has a favicon

[09:25:00.0000] <zcorpan>
hsivonen: cool

[09:26:00.0000] <zcorpan>
the V is a bit blurry but i guess it's ok

[09:27:00.0000] <hsivonen>
zcorpan: I deployed your file bit-for-bit :-)

[09:27:01.0000] <zcorpan>
hsivonen: yeah i know :)

[09:35:00.0000] <Hixie>
hsivonen: i argue that a benevolent dictator is needed for good work to result, and point to tim as an example of the w3c having a benevolent dictator. but the w3c has been doing poor work in recent years, which would be explained by tim no longer being dictator as per that post.

[09:35:01.0000] <hsivonen>
/me learns the term syntactic vinegar from tantek's namespaces considered harmful wiki article

[09:36:00.0000] <hsivonen>
Hixie: it seems though, that actually using the term "benevolent dictator" is a PR problem when your audience hasn't been socialized to know Python terminology

[09:36:01.0000] <hsivonen>
(both for the W3C and the WHATWG)

[09:36:02.0000] <Hixie>
python has a benevolent dictator?

[09:36:03.0000] <Hixie>
cool

[09:36:04.0000] <Hixie>
i guess i knew that

[09:37:00.0000] <Hixie>
that certainly isn't where i first heard the term

[09:37:01.0000] <hsivonen>
for life even

[09:37:02.0000] <Hixie>
but yes, most big projects have one

[09:37:03.0000] <Hixie>
linux, perl, python

[09:37:04.0000] <hsivonen>
Hixie: having one and using the term without PR issues are two different things

[09:38:00.0000] <Hixie>
*shrug*

[09:38:01.0000] <Hixie>
the term is accurate

[09:38:02.0000] <Hixie>
i'm not big into doublespeak

[09:38:03.0000] <hsivonen>
Hixie: I don't follow Linux development, but I'd expect certain vendors to be able to override Linus if Linus wanted bad things

[09:39:00.0000] <Hixie>
no more so than in python, as far as i can tell

[09:40:00.0000] <Philip`>
I would guess that far more vendors ship the Linux kernel with significant patches than for Python

[09:40:01.0000] <hsivonen>
the PR issue is that people who aren't familiar with the concept think that the dictator can dictate anything (one person's opinion) when really the dictator can only dictate things that implementors allow the dictator to resolve

[09:41:00.0000] <Philip`>
so they have ultimate control over what their users run

[09:43:00.0000] <Hixie>
hsivonen: that isn't a problem with the term "dictator", it's a problem with the word "spec".

[09:43:01.0000] <Hixie>
hsivonen: c.f. the people who think the vendors should do whatever the wg resolves.

[09:44:00.0000] <hsivonen>
Hixie: that, too

[09:45:00.0000] <hsivonen>
I wonder where the supposed expert were expected to come from according to the writer of the blog post from a few days ago that advocated experts instead of browser vendors driving the spec

[09:46:00.0000] <Philip`>
What are they meant to be experts in?

[09:46:01.0000] <hsivonen>
Philip`: I don't know. They'd be experts.

[09:53:00.0000] <hsivonen>
someone should write up some theory with words like "indifference curve" explaining what kind of things in practice can be decided by whom

[09:54:00.0000] <Philip`>
Might be easier to understand if it didn't use words like "indifference curve" :-)

[09:57:00.0000] <hsivonen>
fwiw, I think both "dictator" and "consensus" give the wrong idea of how things really happen

[10:11:00.0000] <hsivonen>
I wonder if I get accused of being part of a vast browser-wing conspiracy if I blog about managing one's expectations when suggesting features for Web specs

[10:13:00.0000] <hsivonen>
one thing that intrigues me is how socialization happens when a new person approaches a group like the WHATWG

[10:13:01.0000] <annevk>
sounds useful to blog about that

[10:14:00.0000] <annevk>
makes things easier when someone new comes along :)

[10:14:01.0000] <hsivonen>
I mean: why is it that some people fit the group but some people feel frustrated that they aren't being listened to

[10:14:02.0000] <hsivonen>
do people get socialized

[10:15:00.0000] <hsivonen>
or do the opinions a person happens to hold when approaching the group predetermine if the person fits in?

[10:25:00.0000] <hsivonen>
do we have any documentation that indicates that "try to get a browser vendor to commit to implementing it experimentally" should be read the same way "patches welcome" should be read in an open source context?

[10:31:00.0000] <Philip`>
i.e. "shut up and don't come back until you've done something productive"?

[10:31:01.0000] <hsivonen>
Philip`: right

[10:34:00.0000] <Philip`>
It would be nicer if they weren't told to go away, even in politer language

[10:58:00.0000] <gsnedders>
/me waves

[11:01:00.0000] <Philip`>
gsnedders: Hello

[11:02:00.0000] <gsnedders>
Onboard train internet access is so slow :(

[11:02:01.0000] <gsnedders>
and I keep getting errors trying to push the changes I made to the spec-ge

[11:02:02.0000] <gsnedders>
*gen

[11:03:00.0000] <Philip`>
Probably contention from all the passengers running BitTorrent

[11:03:01.0000] <gsnedders>
Got up to 12KB/s! New high!

[11:03:02.0000] <gsnedders>
It wasn't this bad last time :\

[11:05:00.0000] <gsnedders>
Oh, well, it's not got as bad as it was when I was stuck outside Inverkeithing in May: highest was 51 _BYTES_ per second.

[11:05:01.0000] <gsnedders>
I was trying to download a bit of the Unicode spec at the time. It was estimating several hours remaining. For a single chapter.

[11:06:00.0000] <Philip`>
/me looks at his Downloads window

[11:06:01.0000] <Philip`>
1323.7 KByte/s for the last thing I downloaded, which sounds much more reasonable

[11:06:02.0000] <gsnedders>
WHAT!? Peak it now 35KB/s! That's amazing!

[11:07:00.0000] <gsnedders>
(the highest I've ever got on a train would be maybe 300KB/s)

[11:08:00.0000] <gsnedders>
/me sighs

[11:08:01.0000] <gsnedders>
I _can't_ get a connection that fast at home

[11:25:00.0000] <Hixie>
hsivonen: i certainly don't mean "don't come back until you've done something productive"; we've had input from many people who have done nothing but make a suggestion, and that's absolutely fine

[11:26:00.0000] <Hixie>
hsivonen: however, when someone is told "we have considered that and rejected it because browser vendors won't implement it" and they argue back, then the real honest answer is "well then get a browser vendor to implement it"

[11:27:00.0000] <Hixie>
hsivonen: it's not a lie, it's not even misleading

[11:27:01.0000] <Hixie>
hsivonen: however, it's possible that some people do come to a working group like the whatwg with expectations that don't match what will happen (e.g. expecting suggestions to be considered without looking at previous existing content)

[11:28:00.0000] <Hixie>
hsivonen: (or not accepting that simplicity is a virtue for the web platform, or that a significant number of web developers will just copy and paste anything until it works)

[11:48:00.0000] <john_fallows>
Hixie, does the "Server-sent DOM Events" section still need "DOM" in the title?

[11:48:01.0000] <Hixie>
i guess not

[11:58:00.0000] <hsivonen>
Hixie: I wasn't suggesting that the "experimental implementation" line were a lie or misleading.

[11:58:01.0000] <Hixie>
sure

[11:59:00.0000] <hsivonen>
Hixie: and suggestions are fine too

[12:00:00.0000] <hsivonen>
after all, I don't have commit access to any browser code base

[12:00:01.0000] <hsivonen>
I suggest stuff, though

[12:00:02.0000] <annevk>
Hixie, "websocket-uri" is obviously the wrong name! :)

[12:01:00.0000] <hsivonen>
but I try not to act like I were entitled to get other implement my suggestions right away

[12:01:01.0000] <hsivonen>
s/other/others/

[12:02:00.0000] <hsivonen>
actually, I think the key to not getting too frustrated is not expecting to be entitled to swift implmentation in browsers

[12:07:00.0000] <takkaria>
what's the dictator blog post?

[12:07:01.0000] <hsivonen>
takkaria: http://www.w3.org/QA/2008/06/what_benevolent_dictator.html

[12:08:00.0000] <takkaria>
ah, thanks

[12:12:00.0000] <Hixie>
annevk: what should it be called instead (other than URL)?

[12:13:00.0000] <annevk>
URL is not an option?

[12:14:00.0000] <Hixie>
i might change it to URL, but that's not a good name either :-)

[12:15:00.0000] <hsivonen>
Hmm. the complexity of http://juicystudio.com/wcag/tables/complexdatatable.html is that the dataset is three-dimensional, isn't it?

[12:15:01.0000] <hsivonen>
actually, that's not exactly it

[12:16:00.0000] <hsivonen>
anyway, the table isn't immediately obvious even visually

[12:16:01.0000] <annevk>
Hixie, I suggest URL until something better comes up. Especially since we try to remove URI everywhere introducing it here is just confusing :)

[12:17:00.0000] <annevk>
Hixie, maybe location

[12:17:01.0000] <annevk>
though given that it holds a URL...

[12:52:00.0000] <Lachy>
My podcast interview has been released http://boagworld.com/podcast/124/

[13:43:00.0000] <hober>
#webapps is quite quiet for a group currently f2fing

[13:45:00.0000] <Philip`>
Maybe they moved to #wam or something

[13:47:00.0000] <Philip`>
by which I mean, it looks very much like they did

[13:47:01.0000] <othermaciej>
yes

[13:49:00.0000] <annevk>
aaah, they discovered our top secret meeting channel

[13:49:01.0000] <Lachy>
annevk, which channel are you in?

[13:49:02.0000] <Philip`>
Just a lucky guess

[13:50:00.0000] <Lachy>
wtf? Why was the web apps meeting in #wam???

[13:50:01.0000] <gsnedders>
Philip`: Do you know how late the co-op is open?

[13:50:02.0000] <gsnedders>
(like, the one by where you live)

[13:51:00.0000] <Philip`>
gsnedders: 10pm every day, if I remember correctly

[13:52:00.0000] <gsnedders>
Philip`: Ah, so I can still go out and buy something tonight. Thanks.

[13:52:01.0000] <gsnedders>
(i.e., I am now in town)

[13:53:00.0000] <Philip`>
Also, 10pm every day according to the web site, so that's likely to be the correct time

[13:53:01.0000] <gsnedders>
(I am also just using some random person's unencrypted wifi)

[13:53:02.0000] <Philip`>
though they tend to run out of food in the late evenings

[13:54:00.0000] <gsnedders>
Yes, my mother just said that.

[13:55:00.0000] <Hixie>
Lachy: their Chair told us that was how it was going to be and wouldn't entertain discussion on the subject

[13:55:01.0000] <Hixie>
i believe the chair works for opera, so i blame opera

[13:56:00.0000] <Philip`>
(Sainsbury's is open until 10pm too, and they don't have an annoyingly small selection of food, but that requires far too much effort for me to bother going there often)

[13:57:00.0000] <gsnedders>
I guess it's slightly closer for me, but only marginally

[13:57:01.0000] <gsnedders>
And for the sake of getting some juice, I'm not going to bother.

[13:57:02.0000] <annevk>
It took me a while to get this, but "the cloud" is basically a new word for Web servers?

[13:58:00.0000] <Hixie>
yes

[13:58:01.0000] <hsivonen>
I think "the cloud" implies that the person who runs a service doesn't know where the servers are 

[13:59:00.0000] <annevk>
http://www.webware.com/8300-1_109-2.html?keyword=Google+Gears makes me think it's not that fine grained

[13:59:01.0000] <hsivonen>
(or at least I don't consider Validator.nu to be properly in the cloud, because I have an idea which part of the city the Xen VM is in)

[14:00:00.0000] <Hixie>
google considers its servers to be in the cloud and believe me, we know where our servers are

[14:00:01.0000] <hsivonen>
Hixie: I would have thought that the people writing the software didn't know which server runs the code at a given moment

[14:01:00.0000] <Hixie>
well i wouldn't want to comment on specifics, but your assumptions may be wrong

[14:02:00.0000] <Philip`>
The cloud is where Web 2.0 runs

[14:07:00.0000] <othermaciej>
"the cloud" is mostly a term that applies from the point of view of a user or client system

[14:07:01.0000] <othermaciej>
their data is somewhere remote and they allegedly don't have to care where -- it is "in the cloud"

[14:08:00.0000] <Hixie>
right

[14:08:01.0000] <Hixie>
the term "cloud" refers to the diagram icon used in network topology diagrams

[14:08:02.0000] <Hixie>
(where the internet is represented by a cloud-like bubble)

[14:40:00.0000] <Philip`>
http://blogs.msdn.com/ie/archive/2008/07/02/ie8-security-part-iv-the-xss-filter.aspx

[14:42:00.0000] <Philip`>
(I guess that'll break my unlive DOM viewer...)

[14:45:00.0000] <Philip`>
http://blogs.msdn.com/ie/archive/2008/07/02/ie8-security-part-v-comprehensive-protection.aspx too - window.toStaticHTML(), native JSON, content-type sniffing changes, "Content-Type: text/plain; authoritative=true"

[14:47:00.0000] <Philip`>
and changes to <input type=file>.value

[14:47:01.0000] <Hixie>
wtf is this xss filter 

[14:48:00.0000] <Hixie>
it just blocks anything that says "><script> ?

[14:48:01.0000] <annevk>
you can probably ask the guy who posted that blog post during the break

[14:48:02.0000] <annevk>
he's in the room

[14:49:00.0000] <annevk>
next to shepazu

[14:50:00.0000] <Hixie>
LOL

[14:50:01.0000] <Hixie>
"authoritative=true"

[14:50:02.0000] <Hixie>
that's awesometastic

[14:50:03.0000] <annevk>
not exactly "out loud" :p

[14:51:00.0000] <Philip`>
Hixie: It sounds like it looks for suspicious strings in the request, and for similar strings in the response, and blocks them if the complex undocumented heuristics say it's probably XSS

[14:52:00.0000] <Philip`>
Does HTML5 say a JS file served with Content-Type: text/javascript; authoritative=true must not be executed because it's got unknown type parameters?

[14:53:00.0000] <Hixie>
i believe so, yes

[14:55:00.0000] <gsnedders>
3l of good juice for £2.50. Not bad.

[14:56:00.0000] <gsnedders>
And it did seem to have plenty of stuff, interestingly, despite both Philip` and my mother's warnings

[14:57:00.0000] <Philip`>
Well, it always has plenty of stuff, but often not of the few specific things I'm looking for :-(

[15:09:00.0000] <Hixie>
/me has finished the client-side requirements for Web Sockets

[15:09:01.0000] <gsnedders>
Hmm, this wi-fi comes and goes

[15:13:00.0000] <roc>
handy rule: anyone who writes "PhD" after their name is likely to be a jerk

[15:14:00.0000] <Philip`>
gsnedders: Knock on your neighbour's door and tell them off for having rubbish wireless

[15:14:01.0000] <gsnedders>
That means going across to the next block of flats, and that's too much effort

[15:14:02.0000] <gsnedders>
and it's my uncle's flat :P

[15:15:00.0000] <Philip`>
Or go to http://192.168.0.1 (password "" or "admin") and see if you can reconfigure the wireless signal

[15:16:00.0000] <Philip`>
Also, get irssi+screen+ssh so you don't miss the exciting happenings while you are disconnected :-)

[15:16:01.0000] <gsnedders>
Philip`: someday I will :P

[15:17:00.0000] <Lachy>
I need a server that I can run irssi+screen on, before I can do that

[15:17:01.0000] <Philip`>
Find an unencrypted wireless router and replace its firmware with Linux and use that as your server

[15:18:00.0000] <gsnedders>
Hixie: Can we actually put authorative=true in the HTML 5 spec? I mean, it won't break anything

[15:18:01.0000] <Lachy>
hmm, that's an interesting idea

[15:18:02.0000] <Lachy>
gsnedders, what is authorative=true?

[15:19:00.0000] <gsnedders>
Lachy: IE8b2 supports "Content-Type: text/plain; authoritative=true", which makes the Content-Type trusted

[15:19:01.0000] <Lachy>
oh

[15:19:02.0000] <Lachy>
why don't they just stop implementing content sniffing?

[15:20:00.0000] <gsnedders>
far too much relies upon it

[15:20:01.0000] <Lachy>
I don't care

[15:20:02.0000] <gsnedders>
I do :)

[15:20:03.0000] <gsnedders>
It'd break as much as requiring an SGML parser to be used for text/html, almost

[15:20:04.0000] <Lachy>
other browsers don't implment it as badly as IE does

[15:21:00.0000] <gsnedders>
They're making it better in IE8, though

[15:21:01.0000] <Lachy>
sniffing binary files served as text/plain is ok, but IE goes too far by sniffing text/html

[15:21:02.0000] <gsnedders>
You need to sniff text/html for whether it is a feed, but no more

[15:22:00.0000] <Lachy>
was IE8b2 released yet?

[15:22:01.0000] <gsnedders>
Nope

[15:22:02.0000] <Lachy>
ah, then where did you hear about authoritative=1 from?

[15:22:03.0000] <Philip`>
Lachy: http://blogs.msdn.com/ie/

[15:23:00.0000] <gsnedders>
Lachy: there's a load posted on the IE blog about what's coming

[15:23:01.0000] <Philip`>
(See the latest three posts)

[15:23:02.0000] <gsnedders>
The York Open Day managed to totally put me off CS there, FWIW

[15:24:00.0000] <Philip`>
What did they do wrong?

[15:24:01.0000] <Lachy>
gsnedders, oh, I must have missed reading that last blog post

[15:24:02.0000] <gsnedders>
Philip`: They care about the really high level, and the really low level, but not really anything between

[15:25:00.0000] <Philip`>
gsnedders: Like software engineering and digital electronics but no programming, or something like that?

[15:25:01.0000] <Lachy>
omg, X-Download-Options looks a bit silly

[15:26:00.0000] <gsnedders>
Philip`: Well, only programming is Java, and yeah, doing those two

[15:27:00.0000] <roc>
I wonder about "authoritative=true"

[15:27:01.0000] <roc>
I wonder if we'll later have "really-authoritative=true"

[15:28:00.0000] <gsnedders>
Well, if other browsers don't do it, then we might end up like that :P

[15:29:00.0000] <Philip`>
roc: That won't be needed - just use "authoritative=truer"

[15:29:01.0000] <Philip`>
/me wonders what authoritative=false will do

[15:29:02.0000] <roc>
authoritative=IE8

[15:30:00.0000] <Philip`>
X-Sniffing-Algorithm: ie8

[15:30:01.0000] <Lachy>
roc, would that mean that other browsers need to ask IE8 what it would do before proceeding?

[15:30:02.0000] <roc>
so their toStaticHTML proposal might be worth something

[15:31:00.0000] <roc>
Lachy: yeah I think so. Maybe Microsoft should have a Web service that other browsers can hand content to for IE8 rendering

[15:32:00.0000] <Lachy>
roc, nah, other browsers should just secretly embed IE8's rendering engine in their own products

[15:32:01.0000] <Lachy>
then we'll have perfect interoperability

[15:32:02.0000] <Philip`>
Lachy: Only if nobody ever upgrades to IE9

[15:42:00.0000] <Hixie>
gsnedders: it's a retarded idea

[15:42:01.0000] <jgraham>
gsnedders: FWIW York's open day totally put me off from going there but for different reasons

[15:42:02.0000] <Hixie>
gsnedders: it'll just get content-sniffed itself in a few years

[15:43:00.0000] <Hixie>
roc: yeah i'm looking forward to being able to reverse engineer this and work out what they missed

[15:43:01.0000] <Hixie>
roc: though i think sandboxed iframes might be a better solution in practice (with doc="" maybe)

[15:43:02.0000] <Philip`>
Maybe IIS will start sending authoritative=true by default on all content, for security

[15:44:00.0000] <Hixie>
Philip`: that would make it be sniffed even quicker

[15:44:01.0000] <Hixie>
Philip`: since IE7 will still sniff on those pages

[15:44:02.0000] <roc>
yeah, sandboxes IFRAMEs would be considerably more powerful.

[15:44:03.0000] <Philip`>
Maybe IIS will UA-sniff and send authoritative=true to IE8

[15:45:00.0000] <roc>
someone should lean on MS to put toStaticHTML through a standards group

[15:47:00.0000] <jcranmer>
where's the WebIDL stuff defined?

[15:48:00.0000] <jcranmer>
nm, found it

[15:48:01.0000] <jcranmer>
/me wonders why they name it "DOM-Bindings" still

[15:50:00.0000] <Lachy>
Philip`, according to a browser upgrade study done by Google and other companies, no-one upgrades IE anyway.

[15:50:01.0000] <Hixie>
jcranmer: it is renamed

[15:50:02.0000] <Hixie>
jcranmer: http://dev.w3.org/2006/webapi/WebIDL/

[15:50:03.0000] <annevk>
it's a bit weird why it was moved

[15:51:00.0000] <annevk>
maybe I should not care

[15:51:01.0000] <jcranmer>
hmm, very recently renamed :-)

[15:51:02.0000] <jcranmer>
they haven't changed over DOM-Bindings link to point to WebIDL

[15:58:00.0000] <Lachy>
has anyone listened to my boagworld interview yet? Any feedback for me?

[16:22:00.0000] <Lachy>
they finally get to my interview at about 30 minutes into the show.

[16:25:00.0000] <Hixie>
cool, look forward to listening to it

[16:25:01.0000] <Hixie>
probably monday


2008-07-03
[19:12:00.0000] <Philip`>
jacobolus: http://krijnhoetmer.nl/irc-logs/whatwg/20080702#l-282

[19:15:00.0000] <jacobolus>
Philip`: that may be, but that limits what you can do

[19:16:00.0000] <jacobolus>
Philip`: it's quite useful to draw a bit, then transform, then draw a bit more (in the same path)

[19:17:00.0000] <jacobolus>
Philip`: that spec wording you pasted in that chat seems about right to me, and is sufficiently explicit.  cool.

[19:17:01.0000] <Philip`>
jacobolus: Only Opera prevents you from doing that, and nobody uses Opera so you could ignore it ;-)

[19:18:00.0000] <jacobolus>
yep

[19:18:01.0000] <jacobolus>
that's the plan

[19:18:02.0000] <Philip`>
/me uses Opera :-(

[19:18:03.0000] <jacobolus>
Philip`: so my little test thing at http://www.orbited.org/wiki/CanvasShapes won’t work for you then

[19:19:00.0000] <jacobolus>
or rather, it will only draw circles

[19:20:00.0000] <Philip`>
jacobolus: That's what happens in Opera, though I can trivially switch to Firefox to see it properly :-)

[19:23:00.0000] <Philip`>
jacobolus: The arc() call for drawing circles should probably use false (clockwise) instead of true, else (according to the spec) it might (if Math.PI > π) draw nothing instead of a circle

[19:23:01.0000] <jacobolus>
okay

[19:24:00.0000] <Philip`>
(because of the way angles get wrapped, depending on the clockwisity and the angles)

[19:24:01.0000] <jacobolus>
Philip`: I would expect one of arc(x, y, radius, 0, 0, false) and arc(x, y, radius, 0, 0, true) to draw a whole circle

[19:24:02.0000] <jacobolus>
but both just do nothing

[19:24:03.0000] <Philip`>
(Hmm, maybe "clockwisdom" is a better term)

[19:24:04.0000] <jacobolus>
hehe

[19:26:00.0000] <Philip`>
arc() is a bit weird and unintuitive

[19:27:00.0000] <Philip`>
but it's implemented interoperably in Firefox and WebKit, so I guess there'd need to be strong justification for changing the spec to not match those implementations

[19:36:00.0000] <jacobolus>
Philip`: hmm, if I use a bit more than 2π for the second angle, it draws most of a circle whether I use true or false

[19:44:00.0000] <Philip`>
jacobolus: Argh

[19:44:01.0000] <Philip`>
You are entirely right, and that is the expected behaviour

[19:44:02.0000] <Philip`>
I just get this all mixed up every time I look at arc() :-/

[19:44:03.0000] <Philip`>
I remember not enough to be correct, but enough to be dangerous

[19:45:00.0000] <jacobolus>
Philip`: is there a mathy explanation of how arc is supposed to work?

[19:45:01.0000] <Philip`>
jacobolus: What do you consider "mathy"?

[19:45:02.0000] <Philip`>
(particularly compared to what's in the spec already)

[19:45:03.0000] <jacobolus>
just unambiguous.  I haven't read what the spec says about arc :)

[19:48:00.0000] <Philip`>
If start->end is clockwise (i.e. end > start), and anticlockwise=false, then it draws all the way from start to end and possibly goes all the way around the circle (though at most once); and if anticlockwise=true, then the angles are wrapped modulo 2pi and the shortest anticlockwise arc from start to end is drawn

[19:48:01.0000] <Philip`>
and same if you swap all mentions of 'clockwise' and 'anticlockwise'

[19:48:02.0000] <Philip`>
or at least I think that's what it is

[19:51:00.0000] <Philip`>
Oh, maybe the problem is if Math.PI < π, because drawing anticlockwise from 0 to 2π-ε would draw an ε-long line instead of a circle

[19:51:01.0000] <Philip`>
But I could still be wrong, so I'll just give up and go to bed :-)

[19:53:00.0000] <jacobolus>
Philip`: yes, that is true

[19:54:00.0000] <jacobolus>
Philip`: if you have Math.PI < π then arc(x, y, radius, 0, 2*Math.PI, true) draws nothing

[19:54:01.0000] <jacobolus>
so you’re right, to draw a circle I should use false

[19:56:00.0000] <Philip`>
Drawing circles is quite irritatingly complex

[19:56:01.0000] <Philip`>
Anyway, good night for now

[19:57:00.0000] <jacobolus>
'night

[19:57:01.0000] <jacobolus>
thanks

[01:51:00.0000] <gDashiva>
"Because of the number of legacy servers on the web (e.g. those that serve all files as text/plain) MIME-sniffing is an important compatibility feature."

[01:51:01.0000] <gDashiva>
Are these text/plain web servers related to hsivonen's transcoding proxies?

[02:11:00.0000] <Hixie>
hsivonen: the most common errors i get are (1) mistyping the start tag (e.g. missing the leading <), and (2) getting hte wrong end tag.

[02:11:01.0000] <Hixie>
these two errors both cause an inordinate number of errors to be reported and none of them really say what the actual mistake was.

[02:12:00.0000] <Hixie>
e.g. <p> foo var title="">x</vsr> </p>  and  <p> <a href="">x</span> </p>

[02:12:01.0000] <othermaciej>
I had a similar experience with the validator

[02:13:00.0000] <othermaciej>
although the mistake was missing close "

[02:14:00.0000] <Hixie>
the wrong end tag for an inline element in particular cascades into an error for almost every block-level element in the tree from the point of the error on.

[02:14:01.0000] <Hixie>
which is exciting when the error is half way down the html5 spec

[02:18:00.0000] <Hixie>
first draft of Web Sockets has now been completely defined

[02:19:00.0000] <jacobolus>
Hixie: that sounds great.  I'll take a look tomorrow morning

[02:21:00.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/#network

[02:30:00.0000] <Hixie>
Lachy_: just listend to the podcast on the web, and i think you did great!

[02:32:00.0000] <hsivonen>
Hixie: recorded http://bugzilla.validator.nu/show_bug.cgi?id=258

[02:32:01.0000] <Hixie>
cool

[02:34:00.0000] <Lachy>
Hixie, really? I couldn't listen to it all. The sound of my own voice is irritating.

[02:41:00.0000] <Hixie>
heh

[02:41:01.0000] <Hixie>
it was fine as far as i could tell :-)

[02:41:02.0000] <Hixie>
one's own voice is often found to irritate one

[02:42:00.0000] <Lachy>
I tend to say um and ah far too often, at least at the beginning

[02:42:01.0000] <Lachy>
I need to practice more

[02:42:02.0000] <Hixie>
eh, everyone does :-)

[02:42:03.0000] <Hixie>
you should hear my talks, i'm terrible

[02:42:04.0000] <Lachy>
have you got any recorded?

[02:46:00.0000] <Hixie>
not publicly :-)

[02:48:00.0000] <Hixie>
right bed time

[02:48:01.0000] <Hixie>
nn

[02:51:00.0000] <hsivonen>
Lachy: It's a bit hard to comment, since I already know the topic, so I can't comment what it souded like to someone who doesn't.

[02:51:01.0000] <hsivonen>
Lachy: you did go a bit easy (non-controversially) on the XHTML vs. HTML question

[02:52:00.0000] <Hixie>
(wow, julian was fast at sending that complaint about the Web Socket Protocol)

[02:58:00.0000] <Lachy>
hsivonen, of course I did. If I said anything bad about XHTML, think of the complaints I'd be getting from certain people

[02:59:00.0000] <Lachy>
gotta go, bbl

[03:03:00.0000] <othermaciej>
Hixie: specifying the bytes is not really helpful to implementors (I don't think anyone will put an array of hex values in their code instead of a string)

[03:03:01.0000] <hsivonen>
othermaciej: for another part of the spec I did and later regretted

[03:04:00.0000] <hsivonen>
(not an array actually, but individual numbers)

[03:05:00.0000] <othermaciej>
yikes

[03:06:00.0000] <othermaciej>
I don't understand also why validating the response depends on details that are irrelevant from the HTTP point of view

[03:07:00.0000] <othermaciej>
that makes it harder to make a module for an existing web server that would implement this on the same port as the normal connection

[03:08:00.0000] <othermaciej>
seems like gratuitous draconianism (but maybe I am missing the motivation)

[03:09:00.0000] <othermaciej>
also the fact that it defaults to a weird port and doesn't rely on same-origin security at all partly misses the point of making it look like HTTP

[03:11:00.0000] <othermaciej>
I guess I can send email tomorrow

[03:38:00.0000] <mcarter>
good evening

[06:59:00.0000] <Windstoss>
What is the browser supposed to do, when an author sets contenteditable for <title></title>?

[07:00:00.0000] <annevk>
Hixie, "their originating server" seems false, as it clearly allows cross-origin

[07:01:00.0000] <annevk>
Windstoss, make it editable?

[07:02:00.0000] <zcorpan>
Windstoss: same as any other element i guess

[07:11:00.0000] <zcorpan>
Philip`: is there an easy way to sort the canvas results table so that tests that fail across the board are at the top, tests with 1 pass next, 2 passes next, and so forth?

[07:22:00.0000] <Philip`>
zcorpan: The easy way is to just write a script that sorts them based on the class names, I would expect

[07:23:00.0000] <zcorpan>
Philip`: ok

[07:25:00.0000] <Philip`>
zcorpan: probably something like http://philip.html5.org/misc/canvas-table-sort.txt but less rubbish

[07:29:00.0000] <zcorpan>
Philip`: thanks, you're faster than me :)

[07:31:00.0000] <Philip`>
JS needs an operator like Perl's <=> and cmp

[07:36:00.0000] <Philip`>
zcorpan: (Updated the script to give nicer output now)

[07:42:00.0000] <zcorpan>
Philip`: thanks

[07:43:00.0000] <zcorpan>
http://simon.html5.org/dump/canvas-results-sorted.html

[07:44:00.0000] <zcorpan>
i think i'll go through the top ones and see if it makes sense to change the spec

[07:45:00.0000] <Philip`>
It'd probably be sensible to ignore the Excanvas column

[07:46:00.0000] <zcorpan>
yeah but it's mostly fail anyway :)

[07:47:00.0000] <zcorpan>
is it defined somewhere what should happen in general with too few or too many arguments?

[07:48:00.0000] <Philip`>
zcorpan: http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#common

[07:54:00.0000] <zcorpan>
wonder if it would be useful to have a standard exception for not enough arguments

[07:54:01.0000] <zcorpan>
that is different from NOT_SUPPORTED_ERR

[07:56:00.0000] <annevk>
if the use case is testing, no :)

[07:56:01.0000] <gDashiva>
WRONG_ARITY_ERR

[07:57:00.0000] <zcorpan>
well debugging for authors

[07:58:00.0000] <zcorpan>
"not enough arguments" is more helpful than "NOT_SUPPORTED_ERR" when the author looks in the error console to figure out why it doesn't work

[07:58:01.0000] <annevk>
usually exceptions have some message that could be more detailed

[07:58:02.0000] <zcorpan>
oh that's true

[07:58:03.0000] <zcorpan>
ok

[08:15:00.0000] <zcorpan>
hmm, is the imageData stuff not implemented yet?

[08:17:00.0000] <annevk>
it is

[08:17:01.0000] <annevk>
though in varying degree

[08:28:00.0000] <zcorpan>
now i wonder, should i post my notes to whatwg, public-html or file a bug?

[08:29:00.0000] <zcorpan>
/me posts to whatwg

[08:31:00.0000] <Philip`>
zcorpan: Nobody implements it all, as far as I'm aware

[09:10:00.0000] <annevk>
Hixie, yt? any idea whether we postponed the meeting to 10AM again?

[09:23:00.0000] <annevk>
guess i'll be there at nine

[10:16:00.0000] <annevk>
seems I was wrong, nobody here :/

[11:35:00.0000] <gsnedders>
Hixie: What's the justification for not just using full HTTP/1.1 for WebSockets?

[11:37:00.0000] <takkaria>
it's the requirement to write a websockets server in only a few lines of code

[11:37:01.0000] <takkaria>
I believe, anyway

[11:38:00.0000] <annevk>
indeed

[11:38:01.0000] <Hixie>
right

[11:39:00.0000] <gsnedders>
peh. we already have perfectly good HTTP servers.

[11:39:01.0000] <Hixie>
i'm not writing a whole web server just to do a chat client

[11:39:02.0000] <Hixie>
the "perfectly good HTTP servers" don't do full duplex.

[11:39:03.0000] <Hixie>
cos HTTP isn't full duplex.

[11:42:00.0000] <gsnedders>
hmm, looking through the diff of spec-gen v. the CSS WG's postprocessor, a heckuva lot is just the difference between actually parsing it and serializing it v. rewriting parts of the document

[11:42:01.0000] <gsnedders>
brb (again)

[11:43:00.0000] <gsnedders>
(back)

[11:51:00.0000] <Hixie>
othermaciej: the reason for having an exact hex dump is to make absolutely sure that the remote end really is a WebSocket server and isn't being tricked into pretending to be one

[11:51:01.0000] <gsnedders>
Why claim to be an HTTP server?

[11:52:00.0000] <gsnedders>
(i.e., get off ma lawn!)

[11:52:01.0000] <Hixie>
so that you can reuse the same port

[11:52:02.0000] <othermaciej>
Hixie: it seems like the most likely thing to trick would be a generic web server that doesn't actually support WebSocket at all

[11:53:00.0000] <othermaciej>
in which case, requiring a particular header order does not seem like a strong defense

[11:54:00.0000] <othermaciej>
but it may well make it more of a pain in the ass to implement it integrated into normal web servers

[11:54:01.0000] <Hixie>
well there's no way that a random HTTP server is going to be saying "Upgrade: WebSocket".

[11:56:00.0000] <othermaciej>
it seems unlikely that anything else could be made to produce something that looks like an http response with the right status code and response headers, but only with the headers in a different order

[11:56:01.0000] <john_fallows>
Hixie, looks you are making very good progress with the WebSocket section :)

[11:58:00.0000] <Hixie>
john_fallows: it's basically done :-)

[11:58:01.0000] <john_fallows>
i have a question about the step 11 in the handshake

[11:59:00.0000] <Philip`>
...except for the implementations and tests and feedback and tutorials and ...

[11:59:01.0000] <john_fallows>
why use GET rather than OPTIONS?

[12:00:00.0000] <Philip`>
(Note to self: Hash tables don't work well when you have ten thousand items and the hash function always returns 0)

[12:02:00.0000] <gsnedders>
/me is looking over an htmldiff of the real spec-gen's output and his own

[12:02:01.0000] <gsnedders>
no breakage that I've seen yet

[12:02:02.0000] <Hixie>
othermaciej: i don't think it's that unlikely. we'd still have to define error handling to a lot of detail, too, so it seems better to make that as simple as possible

[12:02:03.0000] <Hixie>
Philip`: i just meant the text in the spec :-)

[12:03:00.0000] <gsnedders>
(well, breakages due to one or two things not being supported yet)

[12:03:01.0000] <Hixie>
john_fallows: OPTIONS means "tell me about this resource", GET means "give me this resource"

[12:03:02.0000] <Hixie>
john_fallows: we don't want to know if it's possible, we just want to connect :-)

[12:05:00.0000] <john_fallows>
don't we need to wait for the 101 Switching Protocols to know if it's possible?

[12:10:00.0000] <john_fallows>
Hixie: sorry, did not prefix my last comment with your id

[12:11:00.0000] <Hixie>
well, it's like with a normal GET request right? You don't know if the URL exists before you call it.

[12:21:00.0000] <john_fallows>
Hixie: yes, that applies to many different HTTP methods with request paths, such as GET, POST, PUT, DELETE, HEAD, OPTIONS, so it doesn't seem to imply the use of GET

[12:31:00.0000] <john_fallows>
Hixie: OPTIONS implies we are negotiating capabilities of the conversation, which IMHO seems like the best fit for the WebSocket handshake

[12:32:00.0000] <Hixie>
OPTIONS isn't negotiation, it's asking for information

[12:33:00.0000] <gsnedders>
Now, I need help with a non-recursive algorithm

[12:34:00.0000] <john_fallows>
Hixie: you are right, OPTIONS is asking for meta-information about a resource, not the resource itself - that's why OPTIONS is a better fit over GET

[12:35:00.0000] <Hixie>
we want a resource here, not meta information

[12:35:01.0000] <gsnedders>
Namely, http://pastebin.com/m2f04a2a

[12:36:00.0000] <john_fallows>
if we wanted to return the actual resource, wouldn't that be a 200 OK or similar with a request body?

[12:37:00.0000] <Hixie>
it is

[12:37:01.0000] <annevk>
gsnedders, hey, how far is your specgen?

[12:37:02.0000] <Hixie>
well

[12:37:03.0000] <Hixie>
it's a 101

[12:37:04.0000] <Hixie>
but 101 just means "i'm moving to another protocol to give you the 200 OK"

[12:37:05.0000] <gsnedders>
annevk: xref is more or less perfect, I just need to build the TOC from the internal structure and add section numbers

[12:38:00.0000] <gsnedders>
and that'll probably do for 1.0 (well, with some bugfixes)

[12:38:01.0000] <annevk>
is it available as web service already?

[12:38:02.0000] <gsnedders>
nope

[12:42:00.0000] <john_fallows>
Hixie: we do want meta-information about the resource, namely whether or not it supports Upgrade: WebSocket

[12:43:00.0000] <Hixie>
john_fallows: no, we want it to actually upgrade

[12:44:00.0000] <Hixie>
it's like saying when you go to ikea to buy a cupboard, you're looking for the instructions to build the cupboard, not the cupboard itself

[12:48:00.0000] <john_fallows>
looking at the TLS Upgrade scenario in RFC2817 - http://www.ietf.org/rfc/rfc2817.txt

[12:49:00.0000] <john_fallows>
they specify Optional Upgrade using GET and Mandatory Upgrade using OPTIONS

[12:49:01.0000] <gsnedders>
Hixie: I want the pieces to build the cupboard from too, when I go to IKEA

[12:50:00.0000] <john_fallows>
the WebSocket upgrade is mandatory, which seems to imply using OPTIONS rather than GET

[12:58:00.0000] <Hixie>
2817 is on crack

[12:58:01.0000] <Hixie>
note how nobody implements it

[13:00:00.0000] <gsnedders>
/me passes Hixie some crack so he can be on it too

[13:00:01.0000] <Hixie>
no thanks :-)

[13:02:00.0000] <gsnedders>
0.714s to xref HTML 5

[13:03:00.0000] <Hixie>
how long to parse? :-)

[13:03:01.0000] <gsnedders>
Far too long :)

[13:04:00.0000] <gsnedders>
13.106s

[13:06:00.0000] <Hixie>
d'oh

[13:21:00.0000] <john_fallows>
if the handshake is forced to either Upgrade or fail, and can never return a non-upgraded response, i don't see how we can justify using GET over OPTIONS

[13:21:01.0000] <Hixie>
i don't see how we can justify using OPTIONS

[13:22:00.0000] <john_fallows>
sorry Hixie, don't mean to bug you on this, just trying to better understand the "is on crack" response earlier :)

[13:22:01.0000] <Hixie>
rfc2817 is just fundamentally not a sane spec

[13:22:02.0000] <Hixie>
and is not likely to convince me as an appeal to authority :-)

[13:23:00.0000] <john_fallows>
maybe if i understood why you think that, it would be easier for me to reach your perspective

[13:26:00.0000] <Hixie>
it makes fundamental mistakes like not having a way for pages to say that following a link must happen over an encrypted channel

[13:27:00.0000] <john_fallows>
is that relevant to the optional upgrade=GET, mandatory upgrade=OPTIONS?

[13:27:01.0000] <Hixie>
well, that's just another example of something i don't think is sane in that spec :-)

[13:28:00.0000] <Hixie>
i'm just saying that RFC2817 being a proponent of something or not isn't a useful technical argument

[13:28:01.0000] <Philip`>
Hixie: If you made the encoded length value be big-endian instead of little-endian, then it'd be compatible with Perl's "pack 'w'", which might be nice

[13:28:02.0000] <john_fallows>
ok, understood

[13:28:03.0000] <john_fallows>
well, we're not even delivering a pseudo 200 OK after the 101, because after the protocol switch we are both sending and receiving bytes on the wire, it is no longer about resource retrieval

[13:30:00.0000] <Hixie>
john_fallows: once it's upgraded, it is implied that it is OK :-)

[13:30:01.0000] <Hixie>
Philip`: hm, interesting

[13:31:00.0000] <john_fallows>
yeah, but you didn't actually retrieve any resource when it upgraded, you just changed the rules on how to communicate with that resource

[13:34:00.0000] <Hixie>
well, the full duplex socket is the resource

[13:34:01.0000] <john_fallows>
identified by the request URI

[13:36:00.0000] <Hixie>
right

[13:40:00.0000] <john_fallows>
so what are you saying?  GET makes sense to you because you are "GET"ing the full duplex socket resource?

[13:46:00.0000] <Hixie>
right

[13:46:01.0000] <Hixie>
Philip`: i have switched to big endian

[13:50:00.0000] <john_fallows>
those semantics are not consistent with HTTP specification's definition of the GET method, to transfer an entity identified by request URI

[13:51:00.0000] <Philip`>
Hixie: It should multiply 'length' by 128 in each iteration, not by 'multiple'

[14:38:00.0000] <Hixie>
Philip`: oops

[14:44:00.0000] <gsnedders>
Does anyone want to bitch about how bad http://pastebin.com/m3f6dd4f4 is?

[14:45:00.0000] <gsnedders>
That's my first attempt at a non-recursive implementation of that (due to the need to be able to cope with infinitely deep nested sections)

[14:45:01.0000] <gsnedders>
(which jgraham's online viewer will hit the recursion limit with)

[14:54:00.0000] <hsivonen>
Hixie: in the binary math, shifting left may be more intuitive that multiplication

[15:00:00.0000] <Hixie>
true

[15:00:01.0000] <Hixie>
too busy to change it right now

[15:08:00.0000] <Philip`>
Nobody's going to implement it correctly - they'll all wrap at 2^31 or 2^32 or 2^64 or something

[15:09:00.0000] <Hixie>
probably

[15:09:01.0000] <Philip`>
so maybe it should be defined so that a straightforward 32-bit implementation will work correctly, because nobody has a legitimate reason to send 4GB messages

[15:09:02.0000] <Hixie>
today

[15:09:03.0000] <roc>
4GB ought to be enough for anyone

[15:09:04.0000] <gsnedders>
Hmm, my HD is bigger than that.

[15:09:05.0000] <Hixie>
/me already deals with terabyte files

[15:10:00.0000] <Philip`>
You can split the data up into multiple messages

[15:10:01.0000] <takkaria>
Hixie: yes, but will you really want to send those files over a WebSocket?

[15:10:02.0000] <annevk>
couple of MB was enough for anyone at some point in the past

[15:10:03.0000] <jgraham>
gsnedders: Why re you using a deque?

[15:10:04.0000] <annevk>
even a couple of KB...

[15:11:00.0000] <gsnedders>
jgraham: Well, it probably doesn't make much difference on such a small outline (even as big as HTML 5)

[15:11:01.0000] <Philip`>
You don't really want to transmit 4.0GB of your 4.1GB file and then have the connection drop and have to resend the entire thing, so you'd always split it up and build some higher-level file transfer protocol on top of it

[15:11:02.0000] <takkaria>
if you're dealing with 4GB of data transfer at one point, you're better using BitTorrent or something else

[15:11:03.0000] <takkaria>
I thought WebSocket was there for chat applications and remote train control, not sending files

[15:11:04.0000] <Hixie>
we can certainly define a limit after which the client should abort the connection

[15:11:05.0000] <Hixie>
that's what i tried doing on the last checkin

[15:11:06.0000] <Philip`>
gsnedders: Replace deque with list, and replace extendleft with push, and replace popleft with pop

[15:12:00.0000] <Philip`>
s/push/append/ or whatever

[15:12:01.0000] <jgraham>
gsnedders: what Philip` said

[15:12:02.0000] <Philip`>
gsnedders: Also have a single list of (section, indent) tuples, instead of two lists

[15:12:03.0000] <gsnedders>
Hey, I'm not a CS student!

[15:12:04.0000] <jgraham>
gsnedders: Me neither :)

[15:13:00.0000] <Philip`>
gsnedders: (unless that'd make the implementation ugly, but I don't see obvious problems)

[15:13:01.0000] <gsnedders>
Philip`: Well, extend not push

[15:13:02.0000] <jgraham>
/me was going to write you an implementation which just walked the tree iteratively

[15:13:03.0000] <Philip`>
gsnedders: Oh, right, I meant s/push/extend/

[15:14:00.0000] <jgraham>
But that's only really easier if you have parent pointers and I don't know if you do

[15:14:01.0000] <gsnedders>
lxml has _Element.parent

[15:15:00.0000] <Philip`>
takkaria: I'd be pretty worried if I was a passenger on a train that was being controlled by Web Sockets :-(

[15:15:01.0000] <jgraham>
gsnedders: But a section is not an lxml element, right?

[15:15:02.0000] <gsnedders>
jgraham: right

[15:15:03.0000] <gsnedders>
jgraham: It's a subclass of list, and has section.header and section.parent

[15:16:00.0000] <gsnedders>
You need to be able to get the parent to implement the algorithm anyway

[15:18:00.0000] <gsnedders>
Philip`: How can I do something like l18?

[15:18:01.0000] <takkaria>
Philip`: not if you were a fly. :)

[15:19:00.0000] <gsnedders>
Philip`: All I can think to do is a loop over section and append a truple for each

[15:20:00.0000] <Philip`>
gsnedders: section_and_indents_list.extend((s, indent+2) for s in sections) perhaps

[15:20:01.0000] <jgraham>
gsnedders sections.extend((sec, indent+2) for sec on section)

[15:20:02.0000] <gsnedders>
ah, I don't often think of that, and not with truples

[15:20:03.0000] <Philip`>
s/sections/section/

[15:20:04.0000] <jgraham>
s/on/in/ of course

[15:22:00.0000] <gsnedders>
I've done something wrong.

[15:22:01.0000] <Hixie>
q+

[15:22:02.0000] <Hixie>
er

[15:22:03.0000] <Hixie>
wc

[15:28:00.0000] <gsnedders>
That just looks messy.

[15:28:01.0000] <gsnedders>
http://pastebin.com/m7d7fc0a1

[15:30:00.0000] <gsnedders>
22*C here tomorrow.

[15:30:01.0000] <Hixie>
http://languagelog.ldc.upenn.edu/myl/TranslateServerError.jpg

[15:30:02.0000] <Hixie>
...

[15:31:00.0000] <hsivonen>
Hixie: that's awesome

[15:31:01.0000] <gsnedders>
I think that's a bug.

[15:31:02.0000] <roc>
owah

[15:32:00.0000] <roc>
could it be photoshopped?

[15:32:01.0000] <Hixie>
could be

[15:32:02.0000] <Hixie>
wouldn't surprise me if it was real

[15:33:00.0000] <gsnedders>
http://xkcd.com/331/

[15:33:01.0000] <roc>
it could be real, but a *lot* of Chinese people know English these days, especially ones involved in the Olympics I guess

[15:34:00.0000] <roc>
so it would have to be a monumental stuff-up

[15:34:01.0000] <roc>
which is of course entirely possible

[15:34:02.0000] <gsnedders>
Like, committing code that breaks everything thinking it's a tiny fix and can't possibly break anything?

[15:35:00.0000] <jgraham>
gsnedders: You should do something like item = sections.pop(); section, indent = item

[15:35:01.0000] <takkaria>
there's a massive screen in Manchester, UK, right in the middle of town, which every now and again has Windows error boxes about media types not being supported

[15:35:02.0000] <gsnedders>
jgraham: or just section, indent = sections.pop()

[15:35:03.0000] <jgraham>
Yeah, or just that :)

[15:35:04.0000] <gsnedders>
jgraham: Myself coding half asleep isn't good :)

[15:36:00.0000] <gsnedders>
Actually building the TOC, inevitably, is more complex.

[15:39:00.0000] <gsnedders>
I also need to deal with no-toc

[15:41:00.0000] <gsnedders>
How come I need reversed() like this, but not with the non-recursive algorithm?

[15:42:00.0000] <jgraham>
Do you mean not with the recursive algorithm?

[15:42:01.0000] <gsnedders>
yeah

[15:43:00.0000] <gsnedders>
I _am_ half asleep, remember :P

[15:43:01.0000] <jgraham>
Because at each stage you want to pick the first child of the current section to serialize next which means that it has to go on the far right of the array so it is popped off next

[15:44:00.0000] <gsnedders>
duh.

[15:44:01.0000] <jgraham>
Alternatively, if there are no children, you want the next sibling of the current node, so that has to be one to the left of the current node in the array

[15:44:02.0000] <gsnedders>
Because I push and not pop now.

[15:45:00.0000] <gsnedders>
/me is really proving how silly his is when tired

[15:45:01.0000] <gsnedders>
/me heads off to sleep

[15:45:02.0000] <jgraham>
His what is ? ;)

[15:45:03.0000] <gsnedders>
:)

[15:45:04.0000] <gsnedders>
s/his/he/

[15:46:00.0000] <jgraham>
Did anyone mention http://www.toolness.com/wp/?p=52 already?

[16:09:00.0000] <Philip`>
jgraham: So I could run Python code that's compiled into Python bytecode, executed by an interpreter that's written in C and compiled to LLVM IR then converted to opcodes for a virtual machine written in ActionScript, ...

[16:09:01.0000] <Philip`>
which is compiled to ABC bytecode, which runs in an interpreter written in Forth, which gets JITted to x86 machine code, which is translated into micro-ops which get executed on the hardware

[16:09:02.0000] <Philip`>
Abstraction is great

[16:13:00.0000] <roc>
it's amazing anything ever works at all

[16:14:00.0000] <othermaciej>
I wonder why the LLVM IR needs to be interpreted rather than translated to ABC directly

[16:16:00.0000] <othermaciej>
I imagine you could give LLVM an ABC back end, but maybe writing a back end is more complex than I thought

[16:19:00.0000] <roc>
maybe the poster is just confused

[16:20:00.0000] <roc>
if you delete the "in" before "Actionscript" in step 2 I think it would make more sense :-)

[16:23:00.0000] <othermaciej>
presumably we'd have to ask someone who has seen the presentation

[16:24:00.0000] <roc>
I don't think it really matters, we can all see the ways it could work

[16:24:01.0000] <Philip`>
and all those ways are similarly crazy

[16:24:02.0000] <roc>
the only crazy thing is the prospect of JS as the universal compiler intermediate language

[16:25:00.0000] <othermaciej>
translating LLVM to a custom bytecode which is then interpreted by a VM written in ActionScript is certainly possible

[16:25:01.0000] <othermaciej>
though it does seem like needless extra steps compared to translating LLVM to ABC bytecode

[16:25:02.0000] <othermaciej>
or translating LLVM IR to ActionScript directly

[16:25:03.0000] <othermaciej>
rather than to a different bytecode interpreted by ActionScript

[16:26:00.0000] <othermaciej>
/me shrugs

[16:26:01.0000] <Philip`>
It would be fun to try debugging a performance problem in your Python code and having to traverse down a dozen levels to find the cause

[16:26:02.0000] <Philip`>
s/levels/levels of abstraction/


2008-07-04
[04:09:00.0000] <gsnedders>
I guess I should treat <pre><dfn>foo  bar</dfn><span>foo bar</span></pre> specially

[06:32:00.0000] <Lachy>
JohnResig, yt?

[06:51:00.0000] <JohnResig>
Lachy: hey

[06:55:00.0000] <mcarter>
JohnResig, I'm working on a Comet demo that may interest you. A multiplayer game using canvas with processing.js, and TCPSocket via Orbited for the network communication

[06:55:01.0000] <JohnResig>
mcarter: neat!

[06:56:00.0000] <JohnResig>
mcarter: definitely of interest

[06:56:01.0000] <mcarter>
JohnResig, I'll let you know when we you can test it out

[06:57:00.0000] <JohnResig>
mcarter: awesome - thanks!

[06:59:00.0000] <Lachy>
JohnResig, see mail about selectors api test suite on public-webapps

[07:00:00.0000] <Lachy>
crap, I just noticed a big mistake in my script.

[07:00:01.0000] <Lachy>
I guess I should have tested it first :-)

[07:05:00.0000] <Philip`>
http://blogs.msdn.com/dross/archive/2008/07/03/ie8-xss-filter-design-philosophy-in-depth.aspx

[07:06:00.0000] <zcorpan>
hsivonen: it would be cool to experiment with svg and mathml together with the validation part in validator.nu. is it something you're working on or are you deliberately disabling svg/mathml?

[07:07:00.0000] <zcorpan>
for instance, i've noted that html5 requires an html:html child of svg:foreignObject but such a tree is impossible to achieve in text/html

[07:08:00.0000] <zcorpan>
and trying <svg><foreignobject><html><head>etc might get unintiutive error messages

[09:12:00.0000] <annevk>
Form survey: http://www.w3.org/2002/09/wbs/40318/wfreq/

[09:29:00.0000] <annevk>
wow, the html4all crowd is calling FUD on hsivonen

[09:30:00.0000] <Windstoss>
Is there a way to get the date of a specific revision on the html5.org tracker?

[09:31:00.0000] <Windstoss>
1143 in my case…

[09:32:00.0000] <annevk>
you can use the hidden limit parameter to get a lot more results

[09:33:00.0000] <annevk>
with -1 meaning all and an arbitrary number meaning as much as you specify

[09:35:00.0000] <Windstoss>
annevk: you mean http://html5.org/tools/web-apps-tracker?limit=-1?

[09:35:01.0000] <annevk>
I was not putting in a link to prevent massive load on the server, but yes... :)

[09:37:00.0000] <Windstoss>
annevk: Won't mention it ;)

[09:38:00.0000] <Windstoss>
ah, 2007-12-11.

[09:38:01.0000] <Windstoss>
removal of OGG Theora :(

[09:38:02.0000] <Windstoss>
are there any news about this, btw?

[09:39:00.0000] <annevk>
nope

[09:39:01.0000] <Lachy__>
annevk, who's calling FUD on hsivonen and where?

[09:39:02.0000] <annevk>
see public-html

[09:39:03.0000] <annevk>
iirc

[09:40:00.0000] <Lachy>
http://www.w3.org/mid/486D4AE0.5070505⊙mn

[09:43:00.0000] <annevk>
and http://lists.w3.org/Archives/Public/public-html/2008Jul/0067.html

[09:46:00.0000] <hsivonen>
zcorpan: I have not prioritized SVG and MathML schema work for text/html, because I have had other stuff to prioritize and I think it's particularly harmful if authors start anticipating SVG-in-text/html support before there are browsers

[09:50:00.0000] <annevk>
woohoo, won 4 EUR in the lotto

[09:51:00.0000] <annevk>
can't believe they conned me into participating and I still haven't cancelled the thing

[10:21:00.0000] <annevk>
http://code.google.com/p/quipt/ hmm, we need localStorage

[11:06:00.0000] <gsnedders>
Stealing other people's wifi doesn't always work well

[11:08:00.0000] <Dashiva>
If you call it stealing, no wonder :P

[13:17:00.0000] <mrkrause>
think there's a market for a js game library using canvas?

[13:22:00.0000] <mrkrause>
I've been able to remake some classic games in canvas using a common Game class, I'm just wondering if there's any interest out there for me to release it

[13:33:00.0000] <annevk>
mrkrause, I'm interested in the games :)

[13:34:00.0000] <mrkrause>
annevk: I'd love more canvas based games too, I'm just wondering if there's an incentive for a flash replacement

[13:35:00.0000] <mrkrause>
I'm hoping something like a library could help

[13:36:00.0000] <hsivonen>
mrkrause: I think releasing a library would be a good idea

[13:39:00.0000] <mrkrause>
great

[13:40:00.0000] <mrkrause>
if anyone's interested I've got something basic running at 193.189.149.218/~mkrause/tetris

[13:40:01.0000] <mrkrause>
(Only works in Firefox 3, have yet to fix some bugs in other browsers)

[14:51:00.0000] <gsnedders>
hmm

[14:52:00.0000] <gsnedders>
TOC building is fn

[14:52:01.0000] <gsnedders>
*fun

[14:52:02.0000] <gsnedders>
is there anyway to clear an attribute in lxml?

[14:59:00.0000] <gsnedders_>
Did I miss an answer?

[14:59:01.0000] <mrkrause>
no

[15:31:00.0000] <gsnedders>
/me sighs

[15:31:01.0000] <gsnedders>
I mostly have a TOC!

[15:35:00.0000] <gsnedders>
http://pastebin.com/m3890bbad — a mostly correct TOC for HTML 5, it doesn't strip things like dfn from the actual text though

[15:43:00.0000] <gsnedders>
This is truly bizarre. I can see no way to remove attrs in lxml

[15:51:00.0000] <Dashiva>
gsnedders: Can't you just remove it from the attrib dict directly?


2008-07-05
[17:11:00.0000] <annevk>
http://remiel.info/post/40766424/on-googles-web-the-user-is-1-google-is-0

[02:00:00.0000] <hsivonen>
http://www.steamd.net/2008/06/html-vs-xhtml-rumble-in-the-ju.html

[02:06:00.0000] <Dashiva>
He seems to be missing the point

[02:07:00.0000] <Dashiva>
"No one can argue that HTML 4 is a well documented standard."

[02:08:00.0000] <Dashiva>
He left out a not, but it became all the more appropriate :)

[03:05:00.0000] <Lachy>
LOL. He is indeed a web standards wannabe. :-)

[04:43:00.0000] <takkaria>
I like Justin James' objection to including Web Forms 2

[04:43:01.0000] <takkaria>
"This can only lead to problems. Without this, developers are forced to perform server-side validation. With it, developers will rely upon it, and create massive security holes in their applications."

[04:44:00.0000] <Dashiva>
Yeah, because nobody relies on client side validation right now

[04:48:00.0000] <Philip`>
It's not about absolutes - some developers will use it, and some of those will not do server-side validation when they otherwise would, because they're lazy or they don't understand why it's needed, and some of those cases will be security holes

[04:57:00.0000] <Lachy>
it seems he objects to the whole thing

[04:58:00.0000] <Lachy>
though I somewhat agree with him about the XML form submission. I don't see why it's necessary at all, it doesn't add any more expressiveness beyond other form submission methods

[04:59:00.0000] <Lachy>
and Hixie already said the repetition model would probably be dropped, but I don't mind it being included

[05:00:00.0000] <takkaria>
forms just aren't part of a static document, so by having forms in the spec at all HTML becomes a pseudo-declarative programming language

[05:01:00.0000] <takkaria>
to then claim that adding the repetition model makes a difference to that is a bit off, I think

[05:11:00.0000] <Philip`>
takkaria: I have lots of documents with forms that are very static since they're printed on paper

[05:11:01.0000] <Philip`>
but none of those have buttons to add or remove rows

[05:12:00.0000] <Philip`>
so the repetition does make a difference in that way compared to basic forms

[05:18:00.0000] <takkaria>
forms on the Web are interactive, though; they say "put a control here" and "put a control here"

[05:19:00.0000] <takkaria>
not "draw an outline here"

[05:20:00.0000] <takkaria>
you're certainly not marking up text by providing forms, so in that way forms are describing a UI

[05:21:00.0000] <takkaria>
so all that varies then is how much UI you want to allow

[13:45:00.0000] <gsnedders>
/me wonders how long this will last

[13:46:00.0000] <Lachy>
gsnedders, how long what will last?

[13:47:00.0000] <gsnedders>
Lachy: this wi-fi conneciton

[13:47:01.0000] <gsnedders>
On another note, I have an almost completely working spec-gen

[13:52:00.0000] <gsnedders>
that wasn't the answer I was looking for

[13:54:00.0000] <gsnedders>
heh. not only is my web connection teh sux the webserver I want it down :P

[14:53:00.0000] <gsnedders>
Hixie: Can you change /style/specification to reference .toc and not ul.toc (my spec-gen outputs ol, as it really should be)

[14:53:01.0000] <gsnedders>
Hixie: (mine also only has .toc on the out-most level)

[14:57:00.0000] <gsnedders>
/me is still debating whether to just do s/[DATE]/4th July 2008/ or something in the structure

[15:00:00.0000] <Hixie>
done


2008-07-06
[03:27:00.0000] <Hixie>
/me finishes replying to WebSocket feedback

[05:22:00.0000] <gsnedders>
Hixie: thx

[07:54:00.0000] <gsnedders>
Anyone have any opinion on when xref'ing <code>foo</code> whether it should become <a><code>foo</code></a> or <code><a>foo</a></code>

[07:55:00.0000] <webben>
gsnedders: if I were linking a function I'd use the former; if I were linking from sample code the later.

[07:55:01.0000] <webben>
probably

[07:56:00.0000] <gsnedders>
webben: When automatically creating xrefs I don't have an AI :)

[07:56:01.0000] <gsnedders>
*any

[07:56:02.0000] <webben>
do you have to deal with code containing more than one link target?

[07:57:00.0000] <gsnedders>
No

[07:57:01.0000] <webben>
then it doesn't matter terribly much :)

[07:57:02.0000] <gsnedders>
Bert Bos went for the latter, I currently do the former

[07:57:03.0000] <gsnedders>
Bits of the styling of html5 break using the former

[07:59:00.0000] <annevk>
I'd prefer the latter for the same reason

[07:59:01.0000] <gsnedders>
annevk: that stuff breaks?

[08:00:00.0000] <webben>
couldn't one just adjust the CSS to suit either solution?

[08:00:01.0000] <gsnedders>
Yeah. I've already broken parts of the styling of HTML5 (though I got Hixie to change the stylesheet so both work now)

[08:01:00.0000] <gsnedders>
ul.toc becomes .toc (I use an ol, as it really should be semantically), and the @class='toc' is only on the out-most list of the TOC

[08:01:01.0000] <gsnedders>
It seems better to use the former, though

[08:02:00.0000] <gsnedders>
/me could just add another w3c-compat option

[08:13:00.0000] <annevk>
webben, I already have the CSS for a set of specs

[08:22:00.0000] <Philip`>
I suggest <a><code><a>foo</a></code></a> to get the best of both worlds

[08:26:00.0000] <Dashiva>
I'm just surprised nobody's turned it into an argument about global @href

[09:25:00.0000] <gsnedders>
Dashiva: yeah, that's what we should use. //*@href FTW!

[09:26:00.0000] <gsnedders>
(span is changed to a, like in the real spec-gen, this is just a question of the other elements)

[09:31:00.0000] <gsnedders_>
I'm tempted to stick with my behaviour, just as I think it's semantically better :P

[09:32:00.0000] <annevk>
i'll fork your product and provide the old behavior as that's more backwards compatible :p

[09:32:01.0000] <gsnedders>
Philip`: Problem is the second <a> implicitly closes the first, so the second </a> is useless :P

[09:32:02.0000] <gsnedders>
annevk: No, I'll have it as an option built in :P

[09:32:03.0000] <gsnedders>
/me wonders how long we can go on ending lines with :P

[09:42:00.0000] <Philip`>
gsnedders: Not long

[09:43:00.0000] <annevk>
gsnedders, my software will have less features :D

[09:45:00.0000] <Philip`>
gsnedders: (By the way, there's a possibility I'll be kind of busy tomorrow afternoon/evening since I need to help some people finish writing some stuff before some deadline, though with some luck it'll be mostly finished today so it won't be a problem tomorrow)

[09:49:00.0000] <gsnedders_>
annevk: :P

[09:50:00.0000] <gsnedders_>
Philip`: Well, Tuesday lunchtime might just be doable with me, but dunno about jgraham 

[10:01:00.0000] <gsnedders>
annevk: I now have a --w3c-compat option :P

[10:01:01.0000] <gsnedders>
http://hg.gsnedders.com/spec-gen/ if anyone wants to play around

[10:38:00.0000] <zcorpan>
/me removes some spam from the forums

[10:39:00.0000] <annevk>
I did that too the other day. Seems it's getting more spammy :/

[10:40:00.0000] <annevk>
would be good if we had some better software in place

[10:41:00.0000] <zcorpan>
yeah, hopefully phpBB3 will be better

[12:41:00.0000] <jgraham>
Philip`, gsnedders I won't make tommorrow evening as I'm going home

[12:42:00.0000] <jgraham>
(because I'm a bit ill in a not-bad-but potentially infectious way that means I should avoid my office)

[12:45:00.0000] <zcorpan>
hsivonen: which files should i look at if i want to see what the error messages are? Tokenizer.java,  TreeBuilder.java, XmlParser.java...

[14:31:00.0000] <gsnedders>
jgraham: Get well soon!

[14:32:00.0000] <gsnedders>
Philip`: So, yeah. Hmm. Phone me tomorrow (before 18:45+01) to say whether you can make it or not, as IRC can't really be relied upon me getting it

[14:36:00.0000] <Philip`>
jgraham: I echo gsnedders' sentiments since I can't think of any of my own

[14:36:01.0000] <gsnedders>
Philip`: huh?

[14:37:00.0000] <gsnedders>
Philip`: How did you make yourself ill? :P

[14:38:00.0000] <Philip`>
gsnedders: Okay - I currently predict I'll be free tomorrow, but then again I predicted I'd finish this afternoon the thing I'm still not near finishing yet so my predictions aren't very reliable, so I'll let you know tomorrow :-)

[14:38:01.0000] <Philip`>
gsnedders: Huh?

[14:54:00.0000] <jgraham>
Huh? ;)

[15:08:00.0000] <mpt>
Huh

[15:27:00.0000] <Hixie>
wtf is up with julian

[15:27:01.0000] <Hixie>
does he just randomly pick a part of the spec and argue about it for fun?

[15:28:00.0000] <Philip`>
The spec itself says it should be read by picking random sections, and it's sensible to post feedback when reading

[15:30:00.0000] <Hixie>
it's not the reading i'm complaining about

[15:30:01.0000] <Hixie>
it's the utterly pointless feedback he sometimes sends

[15:31:00.0000] <Hixie>
like his current complaint which i really frankly don't understand

[15:31:01.0000] <Hixie>
he seems to be complaining about the fact that we used the same status message as HTTP

[15:31:02.0000] <Hixie>
in our WSP protocol handshake

[15:33:00.0000] <Philip`>
I thought he was complaining that the WSP protocol handshake was more complex than necessary within the constraint that it should be compatible with HTTP

[15:33:01.0000] <Philip`>
and since people make more mistakes when implementing complex things than simple things, it seems good to make things as simple as possible

[15:35:00.0000] <Philip`>
(e.g. they'd use some existing HTTP code to generate the response message, and it'd work fine, but then someone would change the web server's locale settings so it starts sending status messages in German and then everything unexpectedly breaks)

[15:47:00.0000] <Hixie>
well the parenthetical is an interesting point (which he didn't raise)

[15:47:01.0000] <Hixie>
i suppose we could hardcode the status line to our own handshake message


2008-07-07
[19:33:00.0000] <Hixie>
i wish i'd spelt it <eventsource>

[19:33:01.0000] <Hixie>
i wonder if it's too late to change it

[19:33:02.0000] <Hixie>
only opera implements it right?

[19:33:03.0000] <jacobolus>
Hixie: yes, only opera

[19:34:00.0000] <Philip`>
Events ource?

[19:34:01.0000] <Hixie>
/me looks around for an opera person to hassle

[19:34:02.0000] <Philip`>
/me likes explicit word separators

[19:34:03.0000] <jacobolus>
Philip`: psycho the rapist?

[19:34:04.0000] <Hixie>
Philip`: yeah but none of the other html elements have hyphens

[19:34:05.0000] <Hixie>
and precious few attributes do either

[19:34:06.0000] <Hixie>
(only http-equiv?)

[19:35:00.0000] <jacobolus>
Hixie: I think arve (whatever his handle is; I don't remember) is the best one to ask about SSE in opera

[19:36:00.0000] <Philip`>
jacobolus: and http://www.penisland.net/ etc

[19:36:01.0000] <jacobolus>
Hixie: did anyone consider “That said, I recommend the addition of .getTransformation to the Canvas specification: it will save a lot of unnecessary code rewriting, most of which is matrix multiplication best done in a low-level language.” from http://azarask.in/blog/post/contextfreejs-algorithm-ink-making-art-with-javascript/ ??

[19:38:00.0000] <Hixie>
i'll poke anne or lachlan or zcorpan when they get back

[19:38:01.0000] <Hixie>
getTransform() has been considered before, yes

[19:39:00.0000] <jacobolus>
Hixie: anyway, given that their implementation is going to have to change incompatibly anyway, I don't think you should worry too much about changing the name

[19:39:01.0000] <Hixie>
didn't they change already?

[19:39:02.0000] <jacobolus>
oh did they?

[19:39:03.0000] <jacobolus>
I don't know

[19:40:00.0000] <jacobolus>
I haven't played with Opera's SSE stuff for a few months

[19:44:00.0000] <jacobolus>
Hixie: the bit of the spec that says “WebSocket objects must also implement the EventTarget interface.” implies that those objects will support AddEventListener w/ "open", "read", "close" as events, right?  Or am I misunderstanding?

[19:46:00.0000] <Hixie>
yes

[19:46:01.0000] <Hixie>
you are not misunderstanding

[19:46:02.0000] <jacobolus>
okay, good.  because that's what I told some other people :)

[19:48:00.0000] <jacobolus>
Hixie: mcarter was thinking about whether Orbited’s TCPSocket objects should support the same interface, and wondering what use cases would be for having multiple event listeners for a socket.  I couldn’t think of any that were particularly compelling.

[19:49:00.0000] <Hixie>
i'm not aware of any use cases

[19:49:01.0000] <Hixie>
i just use the DOM Events mechanism wherever possible as a matter of course

[19:50:00.0000] <Hixie>
for consistency across the platform

[19:51:00.0000] <jacobolus>
yeah.  that was the only argument I had for using the same interface :)

[21:00:00.0000] <roc>
/me wonders what to do about Alan Gresley

[21:38:00.0000] <Hixie>
who is Alan and what is there to do about him?

[21:48:00.0000] <roc>
A guy who posts a lot to www-style, who thinks error tolerance is a conspiracy

[21:55:00.0000] <Hixie>
ignore him

[21:55:01.0000] <Hixie>
:-)

[01:23:00.0000] <annevk>
Hixie, since everything else changed we're more or less incompatible with the spec at this point anyway

[01:23:01.0000] <Hixie>
so it hasn't been updated then?

[01:23:02.0000] <Hixie>
k

[01:23:03.0000] <annevk>
Hixie, well, we're still compatible with the infrastructure, but I'm not sure if that's worth it

[01:24:00.0000] <annevk>
(infrastructure being the attachEventSource() stuff and <event-source>)

[01:38:00.0000] <annevk>
apart from headers/methods optin Access Control is mostly fixed btw

[01:38:01.0000] <annevk>
well, my offline version

[01:38:02.0000] <annevk>
I've notes for headers/methods too and I'm stuck on naming :)

[01:39:00.0000] <annevk>
/me always has bikeshed issues with himself when writing specs

[02:27:00.0000] <annevk>
(where I said attachEventSource I meant addEventSource...)

[02:53:00.0000] <MikeSmith>
Hixie: for r1848, there are a couple places where it seems like the only change made was to change the order of some citations -- "[RFC2109] [RFC2965]" instead of "[RFC2965] [RFC2109]"

[02:53:01.0000] <MikeSmith>
wondering what the significance of that change is meant to be

[02:53:02.0000] <Hixie>
yes

[02:53:03.0000] <Hixie>
none, just wanted it in numerical order

[02:54:00.0000] <MikeSmith>
ah

[02:58:00.0000] <annevk>
the checkin comment made it seems like more was happening

[02:58:01.0000] <annevk>
I landed an initial version of the AC draft we agreed upon at the Seattle F2F: http://dev.w3.org/2006/waf/access-control/

[02:59:00.0000] <annevk>
It doesn't have the headers/methods proposal included yet, though there are comments in the source regarding that

[03:01:00.0000] <MikeSmith>
annevk: cool. that was pretty fast work

[03:01:01.0000] <MikeSmith>
about that checkin, more did happen -

[03:01:02.0000] <MikeSmith>
http://people.w3.org/mike/diffs/html5/spec/Overview.1.1037.html#sandboxCookies

[03:02:00.0000] <MikeSmith>
just that it added "or later specifications" to "RFC 2109 section 4.3.4. or later specifications"

[03:02:01.0000] <roc>
is there any writeup about what happened at that meeting?

[03:02:02.0000] <annevk>
true

[03:04:00.0000] <annevk>
roc, http://www.w3.org/2008/07/01-wam-minutes.html and http://www.w3.org/2008/07/02-wam-minutes.html if you have W3C Member access

[03:04:01.0000] <roc>
thanks!

[03:05:00.0000] <annevk>
http://www.w3.org/2008/07/03-wam-minutes.html seems to have even more limited rights, MikeSmith?

[03:05:01.0000] <annevk>
they should become public within a few weeks (hopefully less)

[03:07:00.0000] <hendry>
is there a good resource for "onload events"? i've looked at a few different libraries and the browser specific hacks aside there seems a number of ways to do it: onload. window.load, DOMContentLoaded, document.readyState. I'm assuming here I should have the DOM ready for an AJAX call.

[03:08:00.0000] <hendry>
this is for a mobile AJAX test case: http://dev.w3.org/cvsweb/2008/mobile-test/xmlhttprequest.js

[03:08:01.0000] <MikeSmith>
annevk: I just changed http://www.w3.org/2008/07/03-wam-minutes.html to member-viewable

[03:09:00.0000] <roc>
schepers was there? huh

[03:09:01.0000] <MikeSmith>
roc: for me, it was particularly nice to finally meet Jonas Sicking

[03:10:00.0000] <annevk>
03 was the day we made descisions on all the drastic changes quite early in the morning

[03:10:01.0000] <roc>
he's a good man

[03:11:00.0000] <annevk>
/me goes food shopping before falling asleep

[03:11:01.0000] <MikeSmith>
roc: btw, I went to a FF3 release party here in Tokyo a couple weeks back. They showed a video with clips from a bunch of Mozilla developers talking about their favorite feature in FF3

[03:11:02.0000] <MikeSmith>
including you

[03:11:03.0000] <roc>
haha

[03:11:04.0000] <MikeSmith>
so that was cool too

[03:15:00.0000] <MikeSmith>
Julien Chaffraix's started checking in code changes to support XBL2 in Webkit

[03:16:00.0000] <MikeSmith>
http://trac.webkit.org/search?q=jchaffraix

[03:22:00.0000] <roc>
how long were these AC meetings?

[03:22:01.0000] <Hixie>
theoretically 9-5 tuesday-thursday

[03:23:00.0000] <Hixie>
in practice, 1pm-5pm tuesday, 11pm-5pm wednesday, 11pm-5pm friday

[03:23:01.0000] <Hixie>
though everything after 3pm on friday seems to be missing from the minutes

[03:23:02.0000] <Hixie>
(which is unfortunate as i left at 3pm)

[03:23:03.0000] <othermaciej>
we adjourned around that point

[03:37:00.0000] <annevk>
it's 11PM and not 11AM?

[03:37:01.0000] <roc>
I'm sure he meant 11am

[03:37:02.0000] <Hixie>
i meant am

[03:40:00.0000] <annevk>
good, I already find it slightly quirky that it's 12PM for midday (iirc), but this would be even more odd

[03:41:00.0000] <Hixie>
the whole am/pm thing is silly imho

[03:41:01.0000] <Hixie>
what's wrong with 24h clocks

[03:41:02.0000] <annevk>
Europe generally uses 24h clocks for notation

[03:41:03.0000] <annevk>
well, the Netherlands :p

[03:42:00.0000] <Hixie>
i know, i'm european :-)

[03:45:00.0000] <Lachy>
Hixie, which country are you from originally?

[03:46:00.0000] <Philip`>
11:59:59.999 is clearly AM, 12:00:00.001 is clearly PM, so it makes sense that 12:00:00.000 is PM because it shares most of its digits with nearby PM times

[03:46:01.0000] <Hixie>
switzerland

[03:46:02.0000] <Hixie>
hence the .ch

[03:46:03.0000] <Lachy>
ok

[03:49:00.0000] <annevk>
Philip`, true, I suppose I expect 0-11 rather than 12-11

[04:42:00.0000] <zcorpan>
Philip`: do you know off-hand whether you have a tc in your testsuite that is equivalent to 

[04:42:01.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0D%0A%3Cp%3EThere%20should%20be%20only%20one%20line%20below.%3C%2Fp%3E%0D%0A%3Ccanvas%3E%3C%2Fcanvas%3E%0D%0A%3Cscript%3E%0D%0Avar%20canvas%20%3D%20document.getElementsByTagName('canvas')%5B0%5D%3B%0D%0Avar%20g%20%3D%20canvas.getContext('2d')%3B%0D%0Ag.moveTo(0%2C%200)%3B%0D%0Ag.lineTo(100%2C%200)%3B%0D%0Ag.stroke()%3B%0D%0Ag.translate(0%2C%2050)%3B%09%09%0D%0Ag.stroke()

[04:42:02.0000] <zcorpan>
%3B%0D%0A%3C%2Fscript%3E

[04:42:03.0000] <zcorpan>
(uploaded)

[04:44:00.0000] <zcorpan>
http://philip.html5.org/tests/canvas/suite/tests/2d.path.transformation.changing.html ?

[04:56:00.0000] <Lachy>
hey Hixie, what was the original reason for including XML form submission in WF2? Was that just because XForms submitted XML, and so we should allow that too?

[04:56:01.0000] <Hixie>
yeah

[04:57:00.0000] <Lachy>
ok, cause I'm thinking it should be dropped for offering no benefits over traditional submission methods

[05:00:00.0000] <Hixie>
yeah

[05:00:01.0000] <Hixie>
i agree

[05:14:00.0000] <Philip`>
zcorpan: http://philip.html5.org/tests/canvas/suite/tests/2d.path.transformation.multiple.html seems like that, only with fill instead of stroke - does that make a difference?

[05:20:00.0000] <zcorpan>
Philip`: seems not.. though i guess it would be good to have both covered :)

[06:40:00.0000] <takkaria>
heh, Alan Gresley seems like a very unproductive person to talk to

[06:41:00.0000] <takkaria>
http://lists.w3.org/Archives/Public/www-style/2008Jul/0123.html

[06:45:00.0000] <Philip`>
"my dream is a one interoperable open web. This may mean that we don't have many implementors but just one. There is nothing to stop all of you working together on *one implementation*." - that's... not going to work

[06:46:00.0000] <takkaria>
I like the bit about wanting a world poll on whether browsers should accept invalid markup

[06:48:00.0000] <Philip`>
Asking people what they want is not a good way of finding what people want, so instead he perhaps could make a Firefox extension that makes your browser abort with an error message when there's any invalid markup, and see how popular it becomes

[06:50:00.0000] <zcorpan>
it might well become popular among people who use firefox for web development and not for browsing

[07:15:00.0000] <jcranmer>
Hixie: you seen Wall-E yet?

[09:36:00.0000] <gsnedders>
Philip`: any idea yet ?:P

[09:44:00.0000] <gsnedders_>
yay! bad wi-fi!

[09:45:00.0000] <Philip`>
gsnedders_: Not entirely sure - it depends on whether anyone convinces me to feel guilty for leaving them to finish all the work :-)

[09:45:01.0000] <Philip`>
(Bye)

[09:49:00.0000] <Philip`>
(I think there isn't much left for me to do so hopefully it should be fine this evening)

[09:57:00.0000] <gsnedders>
Philip`: With the internet access this bad, just phone me at 6:45 at the latest if you can't make it :P

[09:58:00.0000] <Philip`>
gsnedders: Okay - I think it's reasonable to assume by default I will make it, so I'll just let you know if that's wrong

[09:58:01.0000] <Philip`>
gsnedders: (where "it" = 7pm outside King's, if I remember correctly)

[09:58:02.0000] <gsnedders>
Philip`: Yeah

[09:59:00.0000] <gsnedders>
Philip`: Then we can argue where to go from ther e:P

[09:59:01.0000] <gsnedders>
*there

[10:00:00.0000] <Philip`>
/me hopes it won't start raining again

[10:00:01.0000] <gsnedders>
Oh, I doubt it will be as bad as it was in Ely earlier

[10:00:02.0000] <Philip`>
(My trousers are still slightly wet from two minutes outside four hours ago)

[10:01:00.0000] <Philip`>
s/wet/damp/

[10:02:00.0000] <gsnedders>
My trousers are dry, my hoodie is not

[13:02:00.0000] <annevk>
still only 26 answers to the Web Forms thingy... I guess it's still early in the US

[13:03:00.0000] <hober>
3 PM in Boston, noon in SF

[13:04:00.0000] <Hixie>
jcranmer: yes

[13:04:01.0000] <jcranmer>
ah, good :-)

[13:04:02.0000] <annevk>
hober, guess that explains why I feel weird too

[13:05:00.0000] <hober>
No responses from Apple, nor Mozilla

[13:05:01.0000] <annevk>
/me arrived from Seattle in Amsterdam about 12 hours ago

[13:06:00.0000] <annevk>
othermaciej, hey, maybe fill in http://www.w3.org/2002/09/wbs/40318/wfreq/ ...

[13:08:00.0000] <Hixie>
jcranmer: i saw it on opening day

[13:08:01.0000] <jcranmer>
ah

[13:08:02.0000] <jcranmer>
I saw it saturdayh

[13:09:00.0000] <annevk>
is it any good?

[13:09:01.0000] <jcranmer>
it's wonderful

[13:09:02.0000] <annevk>
k

[13:09:03.0000] <Hixie>
best movie of the year

[13:09:04.0000] <Hixie>
and this time it's not just me saying it :-)

[13:09:05.0000] <annevk>
you say that every year :p

[13:10:00.0000] <jcranmer>
one of Pixar's better films

[13:10:01.0000] <annevk>
oh ok, lol

[13:10:02.0000] <Hixie>
it got like 97% on rotten tomatoes

[13:10:03.0000] <annevk>
nice, it would be nice if you could just pay a little online, but it seems torrents is more effective

[13:11:00.0000] <Hixie>
you want to see this movie in the theatre

[13:13:00.0000] <annevk>
if it's really good, I suppose I could go to theatre as well

[13:13:01.0000] <annevk>
arrives here on July 30th :/

[13:13:02.0000] <Hixie>
ah

[13:13:03.0000] <Hixie>
that's sdumb

[13:14:00.0000] <Hixie>
this thread in public-html is crazy

[13:14:01.0000] <Hixie>
so many people saying that specs are independent of reality

[13:15:00.0000] <Hixie>
do they not understand that if the spec is ignored then it's worthless?

[13:15:01.0000] <jcranmer>
not knowing any context, the only time what a spec says should differ from reality is if there is a later de-facto standard (e.g., news: URIs)

[13:19:00.0000] <Hixie>
or if the spec is broken in some (probably unforseen) way

[13:19:01.0000] <Hixie>
as with, e.g., http, uri, iri, html4, dom2, ...

[15:07:00.0000] <Windstoss>
Is this what is supposed to happen?

[15:07:01.0000] <Windstoss>
var actives = document.getElementsByClassName('active')

[15:07:02.0000] <Windstoss>
actives.length, returns say 39

[15:08:00.0000] <Windstoss>
actives[0].deactivate(); (removes classNAme active)

[15:08:01.0000] <Windstoss>
actives.length, returns 38

[15:09:00.0000] <Windstoss>
It is different from what the Frameworks are doing if there is no native method?

[15:18:00.0000] <Hixie>
any opera people around?

[15:19:00.0000] <Hixie>
annevk, Lachy?

[15:20:00.0000] <annevk>
AM NOW

[15:20:01.0000] <annevk>
Windstoss, it's a live list, yes

[15:21:00.0000] <annevk>
Wall-E is indeed nice

[15:22:00.0000] <annevk>
Hixie, ^

[15:22:01.0000] <Hixie>
annevk: do you know who would be a good contact point at opera for worker thread stuff?

[15:23:00.0000] <Windstoss>
annevk: That is good to know. Sorry, if my question is a little offtopic… but how to iterate the live list when in one iteration you change the list (e.g. be removing a classname).

[15:25:00.0000] <annevk>
Hixie, I think bratell⊙oc would be a good start (cc me please)

[15:26:00.0000] <annevk>
Windstoss, you should probably avoid doing that :)

[15:26:01.0000] <Windstoss>
annevk: yeah, I think, I learned it the hard way. Almost banged my head! So, copy to an array first is the "right" way?

[15:27:00.0000] <Windstoss>
annevk: it feels messy?

[15:27:01.0000] <annevk>
kind of depends on what you want to do I suppose, most stuff in the DOM is live

[15:27:02.0000] <Hixie>
annevk: thanks

[15:29:00.0000] <Windstoss>
Thanks… I'm off then.

[15:30:00.0000] <weinig>
annevk: hey, quick question about the Selectors API

[15:30:01.0000] <weinig>
annevk: do you know what exception should be thrown if CSS3 Namespaces syntax is used in the selector string, and we don't support the NSResolver?

[15:30:02.0000] <weinig>
annevk: I assume just the regular old SYNTAX_ERR

[15:31:00.0000] <annevk>
Lachy is editing that spec now mostly

[15:32:00.0000] <annevk>
SYNTAX_ERR makes sense

[15:33:00.0000] <weinig>
annevk: ah

[15:33:01.0000] <weinig>
Lachy: do you agree?

[15:37:00.0000] <annevk>
400GB dics (readonly): http://www.tgdaily.com/html_tmp/content-view-38271-135.html

[15:38:00.0000] <annevk>
disc, duh

[16:23:00.0000] <Lachy>
if weinig comes back and I'm not here, someone tell him that in answer to his question about selectors api, it's either a NOT_SUPPORTED_ERR (if an NSResolver is passed), or a NAMESPACE_ERR if it's not.

[16:23:01.0000] <Lachy>
Exactly as defined in the spec.

[16:24:00.0000] <Lachy>
or, can someone from apple pass on the message to him? othermaciej, maybe?


2008-07-08
[17:37:00.0000] <annevk>
with all this new gTLD stuff I'm glad most APIs are same-origin bound, rather than something else, though cookies remain problematic

[17:41:00.0000] <weinig_>
Lachy: ping

[17:43:00.0000] <annevk>
http://forum.icann.org/lists/idn-cctld-fast-track/msg00020.html seems to be confused about ccTLD vs gTLD...

[17:45:00.0000] <Lachy>
weinig, hi

[17:46:00.0000] <Lachy>
weinig, earlier, I said:

[17:46:01.0000] <Lachy>
[00:26]  <Lachy> if weinig comes back and I'm not here, someone tell him that in answer to his question about selectors api, it's either a NOT_SUPPORTED_ERR (if an NSResolver is passed), or a NAMESPACE_ERR if it's not.

[17:47:00.0000] <Lachy>
[00:26]  <Lachy> Exactly as defined in the spec.

[17:47:01.0000] <weinig>
Lachy: ah

[17:47:02.0000] <weinig>
Lachy: thanks

[17:47:03.0000] <Lachy>
weinig, did you get a chance to take a look at the test suite framework I wrote for selectors api?

[17:47:04.0000] <weinig>
Lachy: I did a while ago

[17:48:00.0000] <Lachy>
I added a few more tests to it today as well

[17:48:01.0000] <weinig>
Lachy: I am going to look at more tonight :)

[17:48:02.0000] <weinig>
Lachy: awesome

[17:48:03.0000] <Lachy>
http://dev.w3.org/cvsweb/2006/webapi/selectors-api-testsuite/

[17:48:04.0000] <Lachy>
http://dev.w3.org/2006/webapi/selectors-api-testsuite/

[17:49:00.0000] <Lachy>
there's currently tests in test-implementation.js and test-queryselector-return-values.js. The rest are placeholder files, waiting for me to finish writing them

[17:50:00.0000] <Lachy>
I also need to make the framework automatically load and run each of them. at the moment, it's just hardcoded to load one of them

[17:50:01.0000] <weinig>
Lachy: ah, I was wondering if the framework just didn't work in Safari

[17:50:02.0000] <Lachy>
I've been testing it in webkit and opera, so it definitely works

[17:50:03.0000] <weinig>
/me realizes once again he was looking at an old draft

[17:51:00.0000] <Lachy>
heh

[17:51:01.0000] <Lachy>
always look at the copy in CVS

[17:51:02.0000] <weinig>
Lachy: only for the last 5 minutes or so

[17:51:03.0000] <weinig>
Lachy: earlier today I had the correct one :)

[17:52:00.0000] <Lachy>
btw, the specific conformance criteria that cover your earlier question is this: "If the implementation does not support resolving namespaces, then when the nsesolver parameter is provided and it is not set to either null or undefined, the implementation must raise a NOT_SUPPORTED_ERR exception."

[17:53:00.0000] <weinig>
/me nods

[17:53:01.0000] <Lachy>
and this ". When an unresolvable namespace is encountered, the implementation must raise a NAMESPACE_ERR exception"

[17:53:02.0000] <weinig>
Lachy: I am not clear what that means for selectors like "|div" or "*|div"

[17:53:03.0000] <weinig>
Lachy: the second part

[17:54:00.0000] <Lachy>
oh, good question.

[17:54:01.0000] <Lachy>
send mail, I'll deal with it tomorrow.

[17:54:02.0000] <Lachy>
what do you think is the most sensible behaviour?

[17:55:00.0000] <weinig>
Lachy: right now I have it implemented to treat both as if no | was there

[17:55:01.0000] <weinig>
Lachy: but I am not sure if that is the most sensible behavior

[17:55:02.0000] <weinig>
/me will ponder this

[17:57:00.0000] <Hixie>
man, wtf is sam smoking

[17:58:00.0000] <Hixie>
(re http://intertwingly.net/blog/2008/07/02/authoritative-true)

[18:01:00.0000] <Hixie>
he defends microsoft unilaterally bypassing standards committees, he says i'm "self-appointed" then doesn't even correct himself when i point out i'm not...

[18:01:01.0000] <Lachy>
*|div should never require the implementation to resolve a namespace, so I suppose it should match even if the implementation doesn't support the NSResolver

[18:03:00.0000] <Hixie>
...and at the end I don't even understand what point he's trying to make, and he defers to Julian whose point I also don't understand (and have already responded to showing the problems with it). Good times.

[18:05:00.0000] <annevk>
I think I did get it. His point is that he wants a way to force the browser to respect the Content-Type using some server trick

[18:06:00.0000] <annevk>
As you illustrated this is harder to achieve as we're closer to the equilibrium HTML5 defines, but he considers it to be an important feature

[18:08:00.0000] <Lachy>
in theory, it would be nice to have a way to tell the browser not to second guess what the server tells it, but I can understand the problems it will create when it inevitably fails.

[18:14:00.0000] <Hixie>
i'd love to be able to do it, but i can't see how to get there from here

[18:15:00.0000] <Hixie>
wishful thinking doesn't work

[18:15:01.0000] <Hixie>
and i don't see how that point really had anything to do with what you were responding to in his blog comments

[18:15:02.0000] <Lachy>
we may be forced to anyway, since IE is doing it. :-(

[18:15:03.0000] <Hixie>
what IE's doing will just introduce a second set of content-sniffing rules

[18:15:04.0000] <Hixie>
if we follow it

[18:15:05.0000] <Hixie>
note that IE isn't anywhere near as big an influence these days

[18:16:00.0000] <Hixie>
their market share is diminishing

[18:16:01.0000] <roc>
yeah

[18:16:02.0000] <roc>
I think we can hold the line

[18:16:03.0000] <annevk>
I hope other browsers won't follow so the platform stays a little bit simpler

[18:17:00.0000] <annevk>
there doesn't seem to be too much of a gain

[18:17:01.0000] <annevk>
(I wonder by the way if they'll always respect it or if in case of <img> / <script> / etc. it will still be ignored...)

[18:18:00.0000] <Lachy>
I guess we'll find out when beta2 is released, but it wouldn't hurt to ask them

[18:18:01.0000] <Hixie>
i wouldn't bet on them knowing :-)

[18:18:02.0000] <Hixie>
but go ahead :-)

[18:18:03.0000] <Lachy>
I wouldn't be surpised if they didn't even think about that case and just apply the same heuristics in such cases

[18:19:00.0000] <Hixie>
most people don't think to think about that case as sniffing, even

[18:19:01.0000] <Hixie>
those cases

[18:21:00.0000] <Lachy>
yeah, I guess

[18:22:00.0000] <Hixie>
i mean, nobody complained about <img> doing content sniffing

[18:22:01.0000] <Hixie>
even once we added the navigation algorithm and they complained about that, they still didn't mention <img> and <script>

[18:23:00.0000] <Hixie>
you know what tires me the most about sam and julian's whining is that they assume that just because i'm disagreeing with their proposals and ideas, that i disagree with their goals

[18:24:00.0000] <Hixie>
sam even went as far as to say i should speak to eric lawerence after we all spent three days at microsoft talking with that team

[18:24:01.0000] <Hixie>
like hello

[18:24:02.0000] <Hixie>
please at least assume i'm trying to do my job right, even if you don't agree with my conclusions

[18:25:00.0000] <annevk>
what would be the fun in that?

[18:30:00.0000] <othermaciej>
Hixie: maybe if you stopped doing everything wrong, people would stop complaining

[18:30:01.0000] <Hixie>
i wish i knew what i was doing wrong!

[18:31:00.0000] <Philip`>
Hixie: maybe if you stopped doing everything, people would stop complaining

[18:32:00.0000] <Philip`>
although I suppose then they'd complain that nobody was doing anything, so that strategy wouldn't work

[18:32:01.0000] <Hixie>
indeed

[18:33:00.0000] <Hixie>
good chance i'd lose my cushy job at google, too :-P

[18:35:00.0000] <Lachy>
putting up with complaints while working in a cushy job is a reasonable trade off.

[19:12:00.0000] <weinig>
Lachy: in the Selectors test suite, in test-queryselector-return-values.js, var doc = document.getElementsByTagName("iframe")[0] should probably read var doc = document.getElementsByTagName("iframe")[0].contentDocument

[19:15:00.0000] <annevk>
var doc = frames[0].document

[19:19:00.0000] <weinig>
that could work too

[20:40:00.0000] <jacobolus1>
does anyone here know the limits of the iPhone's canvas implementation?

[20:41:00.0000] <jacobolus>
it doesn't seem to like various things I draw which work perfectly well in safari 2 and safari 3 both

[21:32:00.0000] <jacobolus>
Hixie, Philip` : heh.  I didn't realize that released versions of safari 3, including the browser on the iPhone, do transformations the way Opera does (but now the webkit trunk is back to doing it per the updated spec, and the safari 2/gecko implementations)

[21:32:01.0000] <jacobolus>
very annoying :/

[21:33:00.0000] <jacobolus>
it means I have to rewrite all the graphics code for this little multiplayer browser game :/

[03:16:00.0000] <Hixie>
if gsnedders was here i'd ask him if he'd tested to see if browsers supported comments in http headers

[03:16:01.0000] <Hixie>
like in Content-Type values

[03:16:02.0000] <Hixie>
same with servers, for that matter

[04:40:00.0000] <Windstoss>
Can nav elements be nested? Is this the way to go to markup a sub-navigation?

[04:44:00.0000] <Lachy>
Windstoss, there's nothing preventing them from being nested

[04:45:00.0000] <Lachy>
But, navigation is typically marked up as nested lists within the nav element.

[04:46:00.0000] <Lachy>
e.g. <nav><ul><li>Foo</li><li>Bar <ul><li>Sub navigation</li></ul></li></ul></nav>

[04:46:01.0000] <Windstoss>
Lachy: yeah, that seems to be more reasonable… thanks.

[05:44:00.0000] <annevk>
http://blog.karppinen.fi/2008/07/apple-just-gave-out-my-apple-i.html :o

[05:59:00.0000] <Philip`>
Why are so many Google people blogging about Protocol Buffers?

[05:59:01.0000] <Philip`>
I don't quite see what's new or interesting about them

[06:03:00.0000] <zcorpan>
annevk: maybe one should try the same trick on other places, sending a password request from a different email for one's own account to see if they give it out

[06:05:00.0000] <othermaciej>
it looks like XML-RPC, without the XML

[06:07:00.0000] <Philip`>
i.e. RPC? :-)

[06:09:00.0000] <Philip`>
Converting hierarchical data structures to a self-describing binary format doesn't seem like a new idea

[06:14:00.0000] <othermaciej>
nor is a message format metalanguage that can compile to programming language stubs particularly new

[06:46:00.0000] <annevk>
othermaciej, where is toolbar.visible exposed?

[06:54:00.0000] <annevk>
ah, it's on Window

[06:54:01.0000] <annevk>
supposedly

[06:55:00.0000] <othermaciej>
yeah

[06:56:00.0000] <othermaciej>
I totally forgot about it

[06:56:01.0000] <othermaciej>
then I started thinking, "browsers already expose some UI details via the window.open parameter string"

[06:56:02.0000] <othermaciej>
then I remembered that there are properties on Window for some of those things too

[06:56:03.0000] <othermaciej>
only problem with the BarInfo objects is lack of change notification, in case you care

[06:57:00.0000] <annevk>
I suppose that HTML could define something for that

[06:58:00.0000] <annevk>
if we decide to go down this route

[07:29:00.0000] <zcorpan>
Philip`: you know whether in http://software.hixie.ch/utilities/js/live-dom-viewer/?%3Ccanvas%3E.%3C%2Fcanvas%3E%0D%0A%3Cscript%3E%0D%0Awith(document.body.firstChild.getContext('2d'))%7B%0D%0AlineWidth%20%3D%2050%3B%0D%0AbeginPath()%3B%0D%0AmoveTo(50%2C%2024)%3B%0D%0AlineTo(50%2C%2025)%3B%0D%0AlineTo(50%2C%2026)%3B%0D%0AclosePath()%3B%0D%0Astroke()%3B%0D%0A%7D%0D%0A%3C%2Fscript%3E there should be one (opera/safari) or two (firefox) lines?

[07:30:00.0000] <zcorpan>
(based on your 2d.line.union testcase)

[07:34:00.0000] <Philip`>
zcorpan: I believe it's undefined according to the spec

[07:35:00.0000] <zcorpan>
should it be? :)

[07:38:00.0000] <Philip`>
zcorpan: (In that test case I assumed it'd be equivalent to drawing one straight line, then drawing another unioned on top of it (rather than doing any non-zero-winding stuff); so in your example that should give one line)

[07:47:00.0000] <Philip`>
zcorpan: I suppose it'd be nice if stroke rendering was defined, but I imagine it'd be non-trivial to do so

[07:48:00.0000] <Philip`>
(and non-trivial to make implementations follow it in all the edge cases)

[08:15:00.0000] <annevk>
Did anyone test if the HTML5 definition of URLs is implemented by browsers for CSS and HTTP Location as well?

[08:15:01.0000] <annevk>
(both for parts affected by encoding and parts that are not)

[08:16:00.0000] <annevk>
I suppose I should look at Hixie's tests

[08:18:00.0000] <annevk>
doesn't appear to be covered

[09:04:00.0000] <annevk>
Hmm, so the IRI spec is modified for XML, but not HTML et all...

[10:05:00.0000] <annevk>
haha: http://intertwingly.net/blog/2008/07/02/authoritative-true#c1215531501

[10:07:00.0000] <zcorpan>
/me notes that all browsers fail http://philip.html5.org/tests/canvas/suite/tests/2d.path.stroke.prune.arc.html

[10:08:00.0000] <annevk>
Firefox and Opera fail in the same way

[10:08:01.0000] <zcorpan>
not quite

[10:09:00.0000] <annevk>
true

[10:10:00.0000] <philipj>
the canvas arc spec is quite impossible to read (and understand)

[10:10:01.0000] <zcorpan>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3Ccanvas%20height%3D300%3E.%3C%2Fcanvas%3E%0A%3Cscript%3E%0Awith(document.body.firstChild.getContext(%272d%27)){%0AfillStyle%20%3D%20%27%23fff%27%3B%0AfillRect(0%2C%200%2C%20300%2C%20300)%3B%0AlineWidth%20%3D%20100%3B%0AlineCap%20%3D%20%27round%27%3B%0AlineJoin%20%3D%20%27round%27%3B%0AbeginPath()%3B%0AmoveTo(50%2C%2075)%3B%0AarcTo(50%2C%2075%2C%20150%2C%2075%2C%20110)%3B%0Astroke()%3B%0Abeg

[10:10:02.0000] <zcorpan>
inPath()%3B%0AmoveTo(50%2C%20200)%3B%0Aarc(50%2C%20200%2C%20110%2C%200%2C%200%2C%20false)%3B%0Astroke()%3B%0A}%0A%3C%2Fscript%3E

[12:00:00.0000] <jgraham>
/me wonders if Chris Wilson is serious that Microsoft will not change the authorative=True behaviour even if it costs them marketshare

[12:01:00.0000] <annevk>
other posts seemed to indicate that this was primarily for intranet sites

[12:02:00.0000] <annevk>
so maybe it will be tied to IE=8 or something

[12:09:00.0000] <takkaria>
I think that feed sniffing will have to be done regardless

[12:09:01.0000] <takkaria>
since independent feed readers often don't check content-type at all

[12:10:00.0000] <takkaria>
I wonder when the IE team will learn that unilateral extensions leave everyone with a bad taste in their mouth, though...

[12:10:01.0000] <takkaria>
or equally, if they will

[12:10:02.0000] <Dashiva>
I notice Kris managed to put both @whatwg.org and @lists.whatwg.org in the CC. Fun :)

[12:11:00.0000] <takkaria>
ah, that explains the dup messages

[12:11:01.0000] <annevk>
yeah :/

[12:11:02.0000] <annevk>
that has happened before

[12:12:00.0000] <annevk>
ideally the lists.whatwg.org just bounced

[12:12:01.0000] <annevk>
s/bounced/bounces/

[12:13:00.0000] <zcorpan>
what's up with validator.nu?

[12:18:00.0000] <annevk>
hsivonen, validator.nu is down :/

[12:25:00.0000] <Dashiva>
Ideally the mailer would realize "Hey, the list already got this message-id"

[13:05:00.0000] <annevk>
Dashiva, true

[13:06:00.0000] <annevk>
Dashiva, though there's no real reason to have two lists e-mail addresses in the first place

[13:37:00.0000] <Dashiva>
annevk: Also true

[13:38:00.0000] <annevk>
meh

[13:38:01.0000] <annevk>
alright, did access control

[13:38:02.0000] <annevk>
I suppose I should fix XMLHttpRequest next

[13:46:00.0000] <zcorpan>
hsivonen: if you're going to include an option for warning about inferred tags, are you going to include an option to check for indentation style, consistent attribute quoting, consistency between > vs /> etc?

[13:47:00.0000] <annevk>
hsivonen, the Access Control for Cross-Site Requests specification changed in a way that affects your implementation

[13:48:00.0000] <annevk>
hsivonen, if don't need custom headers and methods other than GET/POST you can even get away with not having OPTIONS at all

[13:48:01.0000] <annevk>
hsivonen, I'd file a bug if I had an account or if it accepted id.annevankesteren.nl as account :)

[13:50:00.0000] <zcorpan>
hsivonen: perhaps as a non-schema checker URL with query parameters, lintchecks?quotes=any&voidslash=no

[13:51:00.0000] <annevk>
identation style seems less of a concern than requiring attribute quotes (regardless of ' vs ") and requiring no inferred tags and something with the void slash

[13:52:00.0000] <annevk>
attribute quotes and inferrred tags seems the biggest concern

[13:53:00.0000] <zcorpan>
that's just because people are used to what xhtml validation provides

[13:54:00.0000] <zcorpan>
doesn't mean that what xhtml validation provides is as good as it can get. ideally you should be able to check against a style guide

[13:56:00.0000] <annevk>
i didn't disagree with that, as you might have read :)

[14:38:00.0000] <zcorpan>
hsivonen: something like http://simon.html5.org/dump/lint-checks.html

[14:40:00.0000] <zcorpan>
not sure about indentation style

[14:42:00.0000] <annevk>
the check boxes don't make much sense

[14:43:00.0000] <zcorpan>
why not?

[14:44:00.0000] <annevk>
actually, I guess they do

[14:44:01.0000] <zcorpan>
checked means it's allowed

[14:45:00.0000] <zcorpan>
although i guess you'd have to allow at least one of single and double quoted

[14:46:00.0000] <zcorpan>
unless you want to write alt=Hello&#x20;world

[15:27:00.0000] <zcorpan>
perhaps it's harder to check for presence of optional tags and perhaps few people would want to check for that anyway (cost-benefit)

[15:28:00.0000] <zcorpan>
i mean warn if optional tags are present

[16:28:00.0000] <Hixie>
ok

[16:28:01.0000] <Hixie>
video

[16:31:00.0000] <annevk>
Hixie, any chance you can add tests for XMLHttpRequest and CSS url() to your URL encoding tests

[16:31:01.0000] <annevk>
Hixie, it would be good to know if the HTML5 definition of string->URI is implemented by browsers everywhere

[16:33:00.0000] <Hixie>
if you give me hte source of the test i'll add it

[16:33:01.0000] <annevk>
hmm, can you give me the source of the cgi script? maybe I can do something

[16:34:00.0000] <Hixie>
oh i just meant that if you provided what you wanted me to host i'd add it

[16:34:01.0000] <Hixie>
if you want to host it yourself, sure, i can send you the script too

[16:34:02.0000] <Hixie>
which would you prefer?

[16:34:03.0000] <annevk>
I want the results, I don't have anything yet to create the results

[16:34:04.0000] <Hixie>
i just don't want to spend time writing tests :-)

[16:34:05.0000] <roc>
doublec is now scared

[16:34:06.0000] <doublec>
very 

[16:34:07.0000] <annevk>
right :)

[16:34:08.0000] <annevk>
Hixie, having the file would be a first step

[16:35:00.0000] <annevk>
Hixie, or maybe the entire directory as zip, while you're at it

[16:35:01.0000] <Hixie>
sure

[16:35:02.0000] <jgraham>
scared that Hixie doesn't want to spend ime writing testss? Or scared about the video work? Because I find the former scary...

[16:36:00.0000] <jgraham>
/me swears the t key on this keybord is less senstive than the others

[16:36:01.0000] <Hixie>
annevk: ok, encoding.tar.gz in the parent directory

[16:36:02.0000] <Hixie>
doublec: any video feedback i should know of?

[16:36:03.0000] <Hixie>
s/of/about/

[16:36:04.0000] <Philip`>
jgraham: And the a and i keys too?

[16:37:00.0000] <doublec>
Hixie, nothing that hasn't already been discussed on the whatwg list

[16:37:01.0000] <Hixie>
doublec: k

[16:38:00.0000] <jgraham>
Philip`: Yeah maybe :)

[16:41:00.0000] <annevk>
/me notices Gears gets an Audio API

[16:41:01.0000] <annevk>
/me wonders when it will tackle video codecs

[16:46:00.0000] <annevk>
/me wonders what "rest of the world" means in the context of Roy Fielding

[16:47:00.0000] <Hixie>
I don't really identify with Roy's positions on standards-related things

[16:47:01.0000] <jgraham>
I was just wondering what the "error handling for the name on your birth certificate" comment was supposed to mean

[16:48:00.0000] <Hixie>
oh i missed that

[16:49:00.0000] <jgraham>
I mean I assume that there is some procedure that you can follow if the name on your birth certificate is wrong so there is defined error handling

[16:49:01.0000] <annevk>
I think he means that the protocol should not define the error handling, but the user of the protocol

[16:50:00.0000] <jgraham>
it happens that in that case there is two way communicaion between the client and the author which makes an interactive scheme possible but that's not a luxury we have

[16:50:01.0000] <jgraham>
How does "birth certificate" map to "protocol"? A birth certificate is a document

[16:51:00.0000] <annevk>
e.g. HTML can be implemented in a browser but also by some script. Each class would be allowed to have their own error handling or so...

[16:51:01.0000] <jgraham>
The protocol is the steps you go through to get one

[16:51:02.0000] <annevk>
though maybe I'm reading too much into it

[16:52:00.0000] <jgraham>
annevk: I understand that point but don't see how that corresponds to his analogy

[16:52:01.0000] <jgraham>
(as an aside there may be an issue worth considering in the context of non-browser applicaions 

[16:53:00.0000] <Hixie>
validator.nu seems to be down

[16:53:01.0000] <Hixie>
different tools having different error handling is ridiculous

[16:54:00.0000] <jgraham>
which is that having a HTML-specific mapping between attribute values and URIs means that authors have to remember to use some HTML specific intermediary between their document representation and their IRI resolver

[16:54:01.0000] <Hixie>
the only variation that makes sense with error handling is aborting altogether on error

[16:54:02.0000] <jgraham>
s/URIs/IRIs/

[16:55:00.0000] <jgraham>
which is hard for script authors. It's much easier if here is one set of rules that everyone has to play by

[16:57:00.0000] <annevk>
I'm just trying to find out what his position is, but as you note, his example is confusing

[16:57:01.0000] <hober>
right, and that one set of rules needs to match what you need to work with the billions of documents out there, not what RFCNNNN says...

[16:58:00.0000] <jgraham>
hober: Indeed

[16:58:01.0000] <annevk>
I have a feeling URL as defined by HTML5 is what is used by browsers in most APIs they support


2008-07-09
[18:22:00.0000] <roc>
annevk: what codecs does Gears support?

[18:25:00.0000] <annevk>
for Audio? dunno

[18:25:01.0000] <annevk>
ah, http://code.google.com/p/gears/wiki/AudioAPI says WAV and OGG

[18:25:02.0000] <annevk>
and that there's no clear plan for MP3

[18:38:00.0000] <annevk>
Hixie, Workers is going into HTML5?

[18:47:00.0000] <annevk>
/me -> bed

[19:04:00.0000] <roc>
er

[19:04:01.0000] <roc>
Ogg "pending discussion about patent and license issues"

[19:04:02.0000] <roc>
hahaha

[19:12:00.0000] <annevk>
since I'm still awake, I thought Ogg Vorbis at least was shipped with the XBox et all and therefore "safe"

[19:51:00.0000] <MikeSmith>
maybe it would be good to have a validator.nu mirror on html5.org .. v.html5.org

[20:56:00.0000] <Hixie>
annevk: either in html5 or a separate spec

[20:56:01.0000] <Hixie>
it isn't clear what is best for workers

[20:56:02.0000] <Hixie>
on the one hand, workers need to tightly integrate with much of html5, and an extra spec is a lot of overhead

[20:56:03.0000] <Hixie>
on the other hand, workers are a separate feature and adding making html5 bigger isn't going to be popular

[21:12:00.0000] <othermaciej>
my biggest worry about a separate spec is that we'd get lots of complaints (and attempted process blockage) about the inevitable HTML5 dependencies

[21:12:01.0000] <othermaciej>
I am ok with a separate spec if we have buy-in that such dependencies are acceptable

[21:14:00.0000] <Hixie>
i get the feeling this is complicated enough material that bikeshedding won't be an issue

[00:16:00.0000] <annevk>
I'd prefer a separate document, but I don't feel strongly about it

[00:21:00.0000] <MikeSmith>
I think Workers as a separate doc would make our lives easier

[00:22:00.0000] <MikeSmith>
And I'd certainly be willing to run cover on dealing with complaints about the HTML5 dependencies for it, and any process-blocking attempts

[00:24:00.0000] <MikeSmith>
as far as I can see, UA implementors seem to pretty much universally agree that having a standard workers spec would be great

[00:26:00.0000] <annevk>
I guess the main problem is that it bolds on top of postMessage in part, and also builds on top of Window

[00:27:00.0000] <MikeSmith>
yeah, but those kinds of dependencies on HTML5 are going to be true of any major feature that's introduced that has any implementation impact on UAs

[00:27:01.0000] <MikeSmith>
meaning pretty much everything

[00:27:02.0000] <Hixie>
ok

[00:27:03.0000] <Hixie>
so, separate doc it is

[00:27:04.0000] <MikeSmith>
impossible to get around that since HTML5 is defining many infrastructure details that have never been defined before

[00:28:00.0000] <Hixie>
how do people like "Web Threads"

[00:28:01.0000] <annevk>
I guess that's true, but from what I've seen of Workers it seems worse than for XMLHttpRequest, for instance

[00:28:02.0000] <annevk>
Hixie, hehe, fine by me :)

[00:30:00.0000] <MikeSmith>
Hixie: "Web Threads" seems nice and simple to me.. and consistent with current trends (Web IDL, Web Sockets)

[00:33:00.0000] <Hixie>
/me wonders how to set this up so he can still use his spec development toolchain

[00:36:00.0000] <Hixie>
i guess i don't need the stuff to handle large files

[00:37:00.0000] <Hixie>
nor do i need the status annotation stuff

[00:37:01.0000] <Hixie>
and i can use the same issues system

[00:38:00.0000] <othermaciej>
Hixie: I would rather it use Workers instead of Threads in the name

[00:39:00.0000] <othermaciej>
Hixie: since they may not be implemented as threads

[00:39:01.0000] <othermaciej>
and it would be bad to bias the name

[00:39:02.0000] <Hixie>
Web Workers?

[00:39:03.0000] <Hixie>
that works too

[00:39:04.0000] <othermaciej>
also to some people Thread may imply shared memory, while these are shared-nothing

[00:39:05.0000] <othermaciej>
(w/ message passing)

[00:39:06.0000] <othermaciej>
or just Workers, though I don't mind the Web prefix

[00:40:00.0000] <Hixie>
if i work on it, it has the Web prefix. :-)

[00:40:01.0000] <MikeSmith>
/me is less enthusiastic about "Web Workers", because of it already meaning something else

[00:41:00.0000] <Hixie>
Web Worker Threads? :-)

[00:41:01.0000] <annevk>
"web workers" only has ~52k hits on Google

[00:41:02.0000] <Hixie>
what does Web Workers mean?

[00:41:03.0000] <Dashiva>
Could always drag out SPMD or some other acronym :)

[00:42:00.0000] <annevk>
Hixie, it's about people making money on the Web, it seems

[00:42:01.0000] <MikeSmith>
here in Japan it's used a lot to describe people who do Web-related work -- Web designers and developers

[00:42:02.0000] <othermaciej>
Web WorkQueues?

[00:42:03.0000] <MikeSmith>
but then a lot of people I meet here have business cards that say "Markup Engineer"

[00:42:04.0000] <annevk>
Hixie, so it seems there's not much of a clash if you use it to describe a threading technology

[00:43:00.0000] <Hixie>
"Web Workqueue" has no hits on google

[00:43:01.0000] <Hixie>
but i don't know if that's better than web workers

[00:44:00.0000] <Dashiva>
Maybe webapp or web application instead of web?

[00:44:01.0000] <Hixie>
i'll just use Web Workers

[00:44:02.0000] <Hixie>
we can always change the exact name later

[00:44:03.0000] <Hixie>
doesn't matter what the directory is called really

[00:44:04.0000] <annevk>
(workqueue is annoying to spell)

[00:44:05.0000] <Hixie>
i mean html5 still says "webapps"

[00:45:00.0000] <Hixie>
anne: but it has the shortname "wwq"

[00:45:01.0000] <othermaciej>
you can be silly and call it workq

[00:45:02.0000] <Hixie>
ew

[00:45:03.0000] <othermaciej>
though that has the downside of looking like a typo

[00:45:04.0000] <othermaciej>
I think worker is a fine name though

[00:45:05.0000] <Dashiva>
Webqueues

[00:46:00.0000] <MikeSmith>
I think it's likely that we're going to most often keep calling them just "workers" anyway, whatever the documented name is

[00:46:01.0000] <Hixie>
yep

[00:50:00.0000] <annevk>
othermaciej, I'm pretty sure we decided against double GET on day 3

[00:50:01.0000] <annevk>
othermaciej, like 99% certain

[00:51:00.0000] <othermaciej>
annevk: I don't think so - we agreed that would be good conditional on Microsoft committing to using the protocol profile

[00:51:01.0000] <othermaciej>
(and that was not even a formal RESOLUTION afaik)

[00:52:00.0000] <Hixie>
yet another reasons f2fs aren't any good -- you don't know what you agreed to

[00:52:01.0000] <othermaciej>
prior to that, we resolved to use the double-GET approach on the assumption that there was no way MS would change for IE8

[00:52:02.0000] <Hixie>
s/you don't/one doesn't/

[00:53:00.0000] <othermaciej>
currently we are waiting on their answer, though I believe Sunava has gone past his self-imposed deadline

[00:53:01.0000] <Hixie>
SHOCKING

[00:53:02.0000] <annevk>
othermaciej, you're indeed correct

[00:53:03.0000] <annevk>
per http://www.w3.org/2008/07/03-wam-minutes (W3C Member only) that is

[00:54:00.0000] <MikeSmith>
time for me or shepazu to ping Sunava about it, I guess

[00:54:01.0000] <annevk>
what's currently specified assumes a positive reply from MS; we'll see

[00:55:00.0000] <MikeSmith>
I thought the agreement was that we recognized we needed to move on regardless of whether we got a response from them or not

[00:55:01.0000] <othermaciej>
that is a generous assumption

[00:55:02.0000] <othermaciej>
I think our plan was not to change from the day 2 resolution until we got a response

[00:55:03.0000] <othermaciej>
at least that was my understanding

[00:55:04.0000] <MikeSmith>
OK

[00:55:05.0000] <Hixie>
me too

[00:55:06.0000] <MikeSmith>
yeah, that's what I was trying to say too

[00:56:00.0000] <annevk>
othermaciej, my understanding was also that I would draft the profile thing they could use before the end of this week

[00:56:01.0000] <othermaciej>
annevk: yeah, so maybe we need both versions drafted

[00:56:02.0000] <annevk>
othermaciej, and since the profile thing and not doing double GET goes hand in hand, I did that

[00:57:00.0000] <annevk>
othermaciej, hmm, yeah

[01:02:00.0000] <Hixie>
you'll likely have to write the other one anyway

[01:03:00.0000] <Hixie>
might as well write it and provide the two revisions as separate links to the wg

[01:03:01.0000] <Hixie>
it's easy to switch from one rev to another

[01:16:00.0000] <Hixie>
where on the mess that is dev.w3.org should this web-workers spec go?

[01:17:00.0000] <Hixie>
html5/web-workers?

[01:17:01.0000] <Hixie>
webapps/workers ?

[01:18:00.0000] <MikeSmith>
Hixie: either. we can move/renames it on the cvs server side later if needed

[01:18:01.0000] <Hixie>
k

[01:18:02.0000] <annevk>
(the last one makes more sense to me)

[01:18:03.0000] <Hixie>
html5/workers it is

[01:19:00.0000] <Hixie>
i'd use /webapps/ but i don't want to mint yet another root directory

[01:19:01.0000] <annevk>
fair enough

[01:19:02.0000] <Hixie>
i think i've minted two on that server already

[01:21:00.0000] <Hixie>
hey mike

[01:21:01.0000] <Hixie>
did anything ever come of that thing with rigo?

[01:22:00.0000] <Hixie>
i still plan to publish in august

[01:22:01.0000] <Hixie>
which is fast approaching

[01:28:00.0000] <MikeSmith>
Hixie: I've not gotten any resolution with Rigo about it

[01:29:00.0000] <MikeSmith>
I do realize we're going to need to before we publish the next WD

[01:30:00.0000] <annevk>
pointer?

[01:31:00.0000] <Hixie>
i don't think it was ever archived somewhere public

[01:31:01.0000] <annevk>
k, guess I sort of know what it is about

[01:31:02.0000] <Hixie>
not that anyone should take this as evidence that the w3c isn't fully open

[01:31:03.0000] <Hixie>
the other thing is the xhtml2wg's problem with the relationshiup to xhtml1 section

[01:31:04.0000] <Hixie>
which they haven't gotten back to us about

[01:32:00.0000] <Hixie>
i guess we just publish as is if they haven't gotten back to us

[01:33:00.0000] <Hixie>
maybe we should let them know that we plan to publish in august

[01:33:01.0000] <Hixie>
so they don't blame us for being too fast or something

[01:34:00.0000] <annevk>
seems they're working on something

[01:34:01.0000] <Hixie>
oh?

[01:34:02.0000] <Hixie>
i didn't see anything in the minutes

[01:35:00.0000] <annevk>
somewhere in the middle an action as assigned to Steven

[01:35:01.0000] <annevk>
there was no discussion around it

[01:35:02.0000] <annevk>
very weird

[01:35:03.0000] <Hixie>
ah, missed that

[01:36:00.0000] <MikeSmith>
I don't think the rationale that Roland gave (for their request to remove the offending text) will stand up to much scrutiny

[01:36:01.0000] <MikeSmith>
it seems like he was not questioning whether it was accurate

[01:36:02.0000] <Hixie>
what was the rationale?

[01:37:00.0000] <MikeSmith>
I think he was basically saying that it gave the appearance that the XHTML2 WG was not chartered to maintain the "XHTML family of languages"

[01:38:00.0000] <MikeSmith>
and I think I responded to say that was neither the intent nor the actual effect

[01:38:01.0000] <Hixie>
i don't really care what we say so long as it is clear, explanatory and accurate

[01:38:02.0000] <MikeSmith>
I think the current text qualifies as all those

[01:38:03.0000] <Hixie>
yes

[01:39:00.0000] <Hixie>
We could also add 

[01:40:00.0000] <Hixie>
"Note that the W3C has also chartered another working group to work on the XHTML family of specifications."

[01:40:01.0000] <Hixie>
if they want

[01:40:02.0000] <annevk>
http://www.w3.org/2008/06/26-pf-minutes.html#item07 (W3C Member only) is also interesting

[01:40:03.0000] <MikeSmith>
Hixie: maybe that would be good. Maybe that's what they can request

[01:41:00.0000] <MikeSmith>
I'm not sure we should volunteer adding it unless/until they get back to us with suggested revised text

[01:41:01.0000] <MikeSmith>
and lacking that, I don't so that we are required to remove it simply because they've requested it

[01:42:00.0000] <MikeSmith>
if it were LC, it'd be a different matter, I guess

[01:42:01.0000] <MikeSmith>
but it's not LC

[01:42:02.0000] <Hixie>
well, from the point of view of working in good faith, i'm just saying we should let them know our timetable

[01:42:03.0000] <Hixie>
since they may not be expecting us to work punctually

[01:42:04.0000] <MikeSmith>
OK

[01:42:05.0000] <MikeSmith>
yeah, understood

[01:42:06.0000] <Hixie>
not rush them or anything

[01:45:00.0000] <gDashiva>
Speaking of xhtml2, are they exempt from heartbeat, or do all their non-xhtml2 drafts count towards it?

[01:45:01.0000] <annevk>
making this proposal seems like a goo thing too

[01:45:02.0000] <annevk>
gDashiva, heartbeat is ultimately a per-group and not a per-document requirement

[01:45:03.0000] <annevk>
gDashiva, and is also pretty much universally ignored

[01:48:00.0000] <MikeSmith>
the process doc still states clearly that groups should publish WDs of their specs every 3 months, and if they can't do that, instead publish some kind of status report at least 

[01:50:00.0000] <Hixie>
the status document says a lot of things

[01:55:00.0000] <annevk>
and it continues: http://intertwingly.net/blog/2008/07/02/authoritative-true#c1215587954

[02:01:00.0000] <Hixie>
i love how rob refers to hte "the W3C priority of constituencies"

[02:01:01.0000] <Hixie>
i wonder if he realises taht that concept was basically first pushed by the whatwg crowd

[02:19:00.0000] <annevk>
whatwg.org down?

[02:19:01.0000] <Hixie>
yeah

[02:19:02.0000] <Hixie>
nfs issues again

[02:20:00.0000] <Hixie>
sent them mail already

[02:50:00.0000] <zcorpan>
"Where is the HTML version of Line Rider? It is in Flash and Silverlight now. If you want to see something really interesting check out Hard Rock Cafe’s memorabilia page (Silverlight 2 required) and tell me if you’ve ever seen something like that with HTML." -- http://pseudosavant.com/blog/2008/07/08/a-proprietary-web-blame-the-w3c/

[02:52:00.0000] <zcorpan>
can that be implemented with canvas?

[02:52:01.0000] <Philip`>
(Also http://tech.slashdot.org/article.pl?sid=08/07/08/1730231 for other comments on that)

[02:53:00.0000] <zcorpan>
flash line rider http://www8.agame.com/mirror/flash/l/linerider_v1_5.swf

[02:53:01.0000] <Philip`>
I don't see any reason why it couldn't

[02:58:00.0000] <zcorpan>
so who's gonna implement it in canvas? :)

[03:00:00.0000] <annevk>
from the comments: "If WHATWG had done its job correctly, we’d be on HTML 6 by now and nobody would be using IE7 due to it being horribly out of date."

[03:00:01.0000] <annevk>
also, "But it became a victim of the same process bloat that plagues the W3C, and so we’re still stuck using proprietary technologies."

[03:01:00.0000] <Philip`>
zcorpan: You could :-)

[03:02:00.0000] <zcorpan>
Philip`: gotta file more canvas bugs first :P

[03:02:01.0000] <zcorpan>
Philip`: if you didn't write so many test cases i'd be done by now!

[03:04:00.0000] <Philip`>
zcorpan: Once you've finished, writing non-trivial canvas examples is a good way to find more bugs - I don't think I've ever written anything where I haven't encountered new bugs :-)

[03:05:00.0000] <Philip`>
zcorpan: Blame the Opera developers for having so many bugs in their code :-p

[03:05:01.0000] <zcorpan>
Philip`: :)

[03:07:00.0000] <annevk>
Philip`, what do you think filing a bug means? :p

[03:07:01.0000] <Philip`>
or blame Hixie for changing the spec so that what Opera implements is now a bug

[03:26:00.0000] <MikeSmith>
annevk: regarding that blog posting, seems like just yet another tale "full of sound and fury"

[03:26:01.0000] <MikeSmith>
http://clicknotes.com/macbeth/T55.html#26

[03:27:00.0000] <MikeSmith>
or yet another poor player just strutting and fretting

[03:29:00.0000] <gDashiva>
I wonder how many Tom Lehrer fans recognize the MacBeth quote

[03:35:00.0000] <annevk>
MikeSmith, he makes some valid points

[04:05:00.0000] <Lachy>
ah, damn. the live-dom-viewer is down. :-(

[04:12:00.0000] <jgraham>
The problem is that it is much easier to introduce cool new features unilaterally and ship them in the next version of your priprietry runtime than it is to take them through a standards process and then wait for your competitors to implement them before anyone is prepared to use them

[04:14:00.0000] <jgraham>
So even though the w3c is pretty slow it's not clear that's where the real problem lies

[04:14:01.0000] <Philip`>
The problem is standards, so the solution is to not do standards

[04:15:00.0000] <Lachy>
JohnResig, are there any Firefox builds available publicly with support for selectors api?

[04:17:00.0000] <jgraham>
Philip`: From the point of view of Microsoft that's really true. From the point of view of the end user it depends what your priorities are

[04:17:01.0000] <Philip`>
As an end user, I want cool stuff

[04:18:00.0000] <jgraham>
Yeah, clearly most end users are prepared to install Flash so they can watch the video at standardssuck.org and not worry about whether it is proprietry or not

[04:18:01.0000] <jgraham>
s/standardssuck.org/youtube/ maybe ;)

[04:25:00.0000] <jgraham>
I guess we're pretty lucky that Flash sucks so much at basic stuff like text form controls and bookmarkability

[04:25:01.0000] <roc>
Lachy: not that I know of, I think it's still in Boris' tree

[04:32:00.0000] <annevk>
I think with the WHATWG we're sort of getting to the state of specifying competitive features in a timely manner and getting them shipped

[04:34:00.0000] <annevk>
Lachy, IE throwing for |div and all is fine as IE doesn't support all of Selectors

[04:34:01.0000] <othermaciej>
Hixie: the Design Principles document shows the power of writing things down (and of actually having principles)

[04:34:02.0000] <othermaciej>
those were all things people fought about tooth and nail in the early days of the WG

[04:34:03.0000] <othermaciej>
now they are canon

[04:34:04.0000] <annevk>
that is indeed quite amazing

[04:37:00.0000] <annevk>
roc, fwiw, I'd be in favor of having it without prefix, there's plenty of precedent for that too (provided you're willing to make changes to details)

[04:37:01.0000] <roc>
yeah

[04:37:02.0000] <roc>
the Web isn't going to depend on it in a hurry

[04:38:00.0000] <annevk>
right

[04:39:00.0000] <Lachy>
annevk, ok.

[04:40:00.0000] <Lachy>
annevk, it seems IE8 makes it impossible to know what type of exception was thrown. I can't tell if it's a syntax err or namespace err

[04:41:00.0000] <annevk>
make sure to test it in the testsuite

[04:41:01.0000] <annevk>
e.code and all

[04:42:00.0000] <Lachy>
annevk, yeah, it will be

[04:43:00.0000] <Lachy>
today, I'm going through the backlog of issues and responding.

[04:44:00.0000] <Hixie>
othermaciej: i'm not convinced the effort required to write them down was a price worth paying to get rob to quote those principles back at me as if i wasn't following them

[04:45:00.0000] <annevk>
it's certainly entertaining

[04:46:00.0000] <Lachy>
has anyone seen any demand for a hasFeature string from implementers of other languages implementing selecotrs api? e.g. Java?

[04:47:00.0000] <gDashiva>
/me looks for the "Don't disrupt the WG activity for no good reason" design principle

[04:47:01.0000] <Lachy>
gDashiva, look up netiquette guidelines for that

[04:48:00.0000] <annevk>
ah, whatwg.org is back up

[04:48:01.0000] <annevk>
/me spots http://www.whatwg.org/specs/web-workers/current-work/

[04:50:00.0000] <Hixie>
any chance we can get http://html5.org/tools/web-workers-tracker ? :-)

[04:50:01.0000] <Lachy>
Hixie, why is there a new spec? Is HTML5 being split up into several?

[04:51:00.0000] <jgraham>
/me notes that web workers seems like a very silly name

[04:51:01.0000] <Hixie>
people wanted workers not to be added to html5

[04:51:02.0000] <jgraham>
Just becauseit sounds funny

[04:51:03.0000] <jgraham>
But I don't actually object :)

[04:52:00.0000] <jgraham>
Isn't HTML5 supposed to be in feature freeze?

[04:52:01.0000] <Hixie>
well, technically this wasn't added to the html5 spec, so sure :-)

[04:52:02.0000] <Lachy>
ok, so what's the criteria for something to be moved to that spec, or left in the existing spec?  Is it just the few things mentioned in the introduction like canvas, context menus and server-sent events?

[04:52:03.0000] <Hixie>
but in any case, the feature freeze is intended to prevent the spec from getting too far ahead of implementations

[04:52:04.0000] <annevk>
Hixie, http://html5.org/tools/web-apps-tracker?source=http://svn.whatwg.org/webworkers/source works...

[04:53:00.0000] <annevk>
Hixie, though the links and such will be broken, so it doesn't totally work

[04:53:01.0000] <Hixie>
so if implementations get ahead of the spec (as they were threatening to with workers), the freeze isn't useful

[04:53:02.0000] <Hixie>
Lachy: nothing will be moved to web workers

[04:53:03.0000] <Hixie>
Lachy: it's for workers

[04:53:04.0000] <Hixie>
Lachy: which are new

[04:53:05.0000] <Lachy>
oh, ok. What is a worker?

[04:54:00.0000] <takkaria>
Hixie: webworkers still has <title>HTML 5</title>

[04:54:01.0000] <Hixie>
background thread for js

[04:54:02.0000] <annevk>
Lachy, the introduction is a copy from somewhere else

[04:54:03.0000] <Hixie>
did i forget to change the intro?

[04:54:04.0000] <Hixie>
oops

[04:54:05.0000] <Hixie>
/me goes to fix

[04:54:06.0000] <Lachy>
yeah, the abstract is from html5

[04:54:07.0000] <Hixie>
oh the abstract

[04:55:00.0000] <annevk>
abstract/intro, meh

[04:56:00.0000] <Hixie>
fixed

[04:59:00.0000] <Lachy>
Hixie, also, the abstract in HTML5 is wrong. It still mentions inline popup windows, which were never included.

[04:59:01.0000] <gDashiva>
Lachy: Apparently certain wg participants don't feel netiquette is part of our charter :)

[04:59:02.0000] <Lachy>
oh, it isn't? Cool. I should participate in more flamewars then.

[05:00:00.0000] <takkaria>
http://www.whatwg.org/specs/web-workers/current-work/'s <title> is still HTML 5. :)

[05:02:00.0000] <Philip`>
I hope you don't want a multipage version of this

[05:03:00.0000] <Hixie>
takkaria: oops

[05:03:01.0000] <gDashiva>
Philip`: No, but he'll want it preprocessed using workers :P

[05:03:02.0000] <Hixie>
fixed.

[05:06:00.0000] <roc>
if flamewars aren't valid netiquette, then the spec should be changed to match reality

[05:07:00.0000] <annevk>
yeah, writing specs that are not implemented is no fun

[05:08:00.0000] <Hixie>
Lachy: updated the abstract

[05:12:00.0000] <annevk>
showModalDialog is sort of an inline popup

[05:14:00.0000] <jgraham>
Framewars should be non-conformant but have defined error handling

[05:14:01.0000] <jgraham>
s/Frame/Flame/

[05:15:00.0000] <annevk>
<frame>wars too!

[05:17:00.0000] <Lachy>
yeah, there are many things in RFC 1855 that need to be updated to deal with common situations, like bikeshedding, banning HTML mail, banning the use of broken mail clients that destroy threading and quoting, etc.

[05:20:00.0000] <othermaciej>
Hixie: sure, he's still irritating, but accepting your principles as the ground rules makes it harder for him to argue

[05:20:01.0000] <othermaciej>
remember, he could be much worse

[05:20:02.0000] <othermaciej>
and has been!

[05:22:00.0000] <Hixie>
it doesn't seem to have made any difference to the quality of his arguments

[05:23:00.0000] <Hixie>
you know, i get mixed messages from the opera crowd

[05:23:01.0000] <Hixie>
or rather, i get mixed messages from chaals relative to the rest of opera.

[05:25:00.0000] <Hixie>
ok. i have my web workers dev environment set up. tomorrow i shall write the spec.

[05:25:01.0000] <Hixie>
nn

[05:26:00.0000] <annevk>
I think chaals was asking about major changes. I agree that those should go to public-html.

[05:26:01.0000] <annevk>
Actually, he didn't say that explicitly, so never mind

[06:54:00.0000] <JohnResig>
Lachy: no public builds, no

[06:54:01.0000] <JohnResig>
Lachy: you can take the patch from the bug and build your own copy

[06:54:02.0000] <JohnResig>
Lachy: which I might do here soon in order to finish the test suite

[06:55:00.0000] <Lachy>
JohnResig, assume I don't have the time or skill to work out how to build my own.

[06:56:00.0000] <Lachy>
if you make one for the mac, can you send me a build?

[06:56:01.0000] <JohnResig>
Lachy: right, yeah - it's a pain - a full build won't be around for a while

[06:56:02.0000] <JohnResig>
Lachy: sure, I'll see what i can do

[06:56:03.0000] <Lachy>
thanks

[06:58:00.0000] <Lachy>
oh, btw, we need to make sure the test suite handles querySelector(null);.  Currently, there's no interop on that issue. But it was recently defined in the spec

[07:18:00.0000] <annevk>
I think treating null like "null" is more consistent with most DOM APIs, but I don't really feel strongly about this issue

[07:19:00.0000] <gDashiva>
I wonder what kind of apps depend on null -> "null"

[07:21:00.0000] <annevk>
lots of stuff that does "(" + variable + ")" or something

[07:22:00.0000] <Lachy>
annevk, this way the null is handled the same way in all places throughout the spec, for both NSResolver return values and parameters

[07:23:00.0000] <Lachy>
plus, it seems more intuitive for null to match nothing, rather than inadvertenly match an element <null> in the document

[07:23:01.0000] <annevk>
I think "" would be a SYNTAX_ERR

[07:25:00.0000] <Lachy>
annevk, yes. it is

[07:25:01.0000] <Lachy>
and therefore, so is null

[07:25:02.0000] <Lachy>
but if you still disagree, respond on the list and I'll take another look

[07:26:00.0000] <Lachy>
oh, looks like there's a thread from February neither I nor anyone else responded to. I'd better do that now.

[08:35:00.0000] <JohnResig>
Lachy: ok, I've got some interesting edge case here. Safari feels that :enabled does not include hidden input elements (Opera does). Also, no browser currently selects option[selected] when the selected is implied (e.g. selected by default) - even if you were to check .selected and see that it's true, it wouldn't match with this selector.

[08:47:00.0000] <Lachy>
option[selected] shouldn't match when the selection is implied, because it's an attribute selector.

[08:47:01.0000] <Lachy>
so the implementations are correct according to the spec

[08:48:00.0000] <JohnResig>
Lachy: and :enabled?

[08:49:00.0000] <Lachy>
Selectors states: "An element is enabled if the user can either activate it or transfer the focus to it. "

[08:49:01.0000] <Lachy>
since a user can't do that to a hidden input, Safari's behaviour is correct

[08:50:00.0000] <Lachy>
if you've got a TC, I'll file a bug with Opear

[08:50:01.0000] <Lachy>
Opera*

[08:51:00.0000] <Lachy>
does option:checked work?

[08:51:01.0000] <JohnResig>
Lachy: let me see

[08:51:02.0000] <Lachy>
hmm. probably not. I think it only applies to checkboxes and radio button

[08:51:03.0000] <JohnResig>
err, yeah

[08:52:00.0000] <Lachy>
oh, wait, yeah, selectors says it should

[08:52:01.0000] <Lachy>
"The :checked pseudo-class initially applies to such elements that have the HTML4 selected and checked attributes..."

[08:52:02.0000] <Lachy>
which includes option

[08:55:00.0000] <JohnResig>
Lachy: heh, the test suite crashes gogi now

[08:55:01.0000] <Lachy>
cool

[08:55:02.0000] <JohnResig>
Lachy: well, in Safari option:checked doesn't select anything

[08:56:00.0000] <annevk>
I'd suggest not to trust Selectors on this and instead check how Web Forms 2.0 defines the mapping

[08:56:01.0000] <annevk>
Web Forms 2.0 is quite detailed on the subject and arguably the more correct place than Selectors anyway

[08:57:00.0000] <Lachy>
annevk, ok.

[08:57:01.0000] <Lachy>
option:checked doesn't match for me in gogi either.

[08:57:02.0000] <JohnResig>
ok - so we're up to about 1500 tests: http://ejohn.org/apps/selectortest/ - I've gotta move on to the namespace stuff now

[08:57:03.0000] <Lachy>
ok

[08:58:00.0000] <annevk>
JohnResig, hey man, that's awesome

[08:58:01.0000] <JohnResig>
annevk: :)

[08:58:02.0000] <Lachy>
hmm, not working at all in gogi. I just get a blank white space where the results are supposed to be

[08:59:00.0000] <JohnResig>
Lachy: that's more than I got :-/

[08:59:01.0000] <Lachy>
heh. Yeah, that acid 3 build probably still had a few crashers in it

[09:01:00.0000] <annevk>
lies, our acid3 build was perfect!

[09:02:00.0000] <Lachy>
annevk, of course. our developers write bug free code. :-)

[09:05:00.0000] <Lachy>
JohnResig, I'm dealing with the thread about adding a selector detection mechanism. http://lists.w3.org/Archives/Public/www-style/2008Apr/0113.html ...

[09:05:01.0000] <Lachy>
As a JS library author, would you have any need for any such mechanism that isn't covered by catching exceptions for syntax errors and unsupported selectors?

[09:06:00.0000] <Lachy>
the whole thread is lacking compelling use cases, so I'm likely to just respond and reject the proposal

[09:06:01.0000] <annevk>
we don't have supportsHTMLAnchorElementWithPingAttribute() either...

[09:07:00.0000] <JohnResig>
Lachy: I asked for something a little more detailed back when I gave my comments - showing which portion of a selector was valid (or "at which point a token wasn't recognized by the selector engine") - but I had trouble convincing boris that he could actually implement it

[09:08:00.0000] <Lachy>
oh, yeah, I remember that.

[09:08:01.0000] <annevk>
what is the use case for a library?

[09:08:02.0000] <Lachy>
http://lists.w3.org/Archives/Public/www-style/2008Apr/0160.html has an interesting solution that JS authors could use if there really is a need it.

[09:08:03.0000] <JohnResig>
right now all we get is "hey an error happened somewhere in this selector - good luck in figuring out what went wrong and where"

[09:09:00.0000] <annevk>
but do you need an error console feature or a JS API

[09:09:01.0000] <JohnResig>
annevk: JS API - well, more precisely, a better-detailed error message (which is what I brought up for discussion on the mailing list)

[09:10:00.0000] <Lachy>
what would you want to do with the information if you got it?

[09:11:00.0000] <annevk>
Lachy, did you define whitespace when you added that note?

[09:12:00.0000] <JohnResig>
we could determine that (for example) given the selector: "#foo div span select > option:selected" that it was good up until ":selected" - we'd go back and pass through all the good parts and end up with a resulting string - then do our own filtering to implement the ":selected"

[09:12:01.0000] <Lachy>
annevk, the one about trimming leading and trailing whitespace?

[09:13:00.0000] <annevk>
yes

[09:13:01.0000] <Lachy>
whitespace is defined in Selectors. Do you want me to add an explicit reference to its definition?

[09:13:02.0000] <annevk>
Lachy, maybe just a note that indicates where it comes from

[09:14:00.0000] <Lachy>
I'll add a link to http://www.w3.org/TR/css3-selectors/#whitespace

[09:15:00.0000] <annevk>
JohnResig, right... that does seem tricky and quite a bit over engineered and optimized for libraries

[09:16:00.0000] <JohnResig>
annevk: well - unless there's a drastic change in the flexibility of this spec - libraries are still going to be the primary consumer of this API

[09:28:00.0000] <zcorpan>
Philip`: in http://philip.html5.org/tests/canvas/suite/tests/2d.path.clip.winding.2.html is it intentional that the ctx.lineTo(0, 0); line (after the second beginPath()) is lineTo and not moveTo?

[09:44:00.0000] <zcorpan>
http://www.sitepoint.com/article/html-or-xhtml-does-it-matter hmm

[09:44:01.0000] <Lachy>
now I'm down to 100 more emails in my selectors-api folder to deal with. I'll try and finish those off tomorrow.

[09:44:02.0000] <Lachy>
(down from about 200 earlier today)

[09:46:00.0000] <annevk>
zcorpan, removal of alt=""?

[09:47:00.0000] <annevk>
headers=""?

[09:47:01.0000] <annevk>
when was this article written? before we introduced the <img> element?

[09:52:00.0000] <takkaria>
there so many uninformed opinions and bad arguments on the web, sometimes I get dizzy just thinking about it

[10:03:00.0000] <zcorpan>
annevk: today

[10:04:00.0000] <zcorpan>
brothercake wrote the article

[10:04:01.0000] <zcorpan>
gotta go

[10:37:00.0000] <Philip`>
zcorpan: Oops, that's not intentional

[10:38:00.0000] <Philip`>
/me fixes his local version

[10:51:00.0000] <JohnResig>
Lachy: "if the selectors argument is null, undefined, or omitted, the implementation must act as if the selectors argument was set to """ - is throwing a syntax_err a valid response?

[10:52:00.0000] <annevk>
yes, because that's what you're supposed to do for the empty string

[11:08:00.0000] <JohnResig>
"Note: Authors are strongly discouraged from writing an NSResolver that returns inconsistent results. " - I'm actually tempted to try and write one that does a little rand() action - or maybe throw a % 2 on the resolver results

[11:24:00.0000] <Lachy>
JohnResig, see if you can break Opera by doing that. It seems to resolve each prefix every time it's used, so "x|div x|span" resolves x twice

[11:25:00.0000] <Lachy>
I need to ask our developers why they did that, cause it seems inefficient

[11:25:01.0000] <JohnResig>
Lachy: ok, I'll add that in, as well

[11:26:00.0000] <annevk>
maybe it was easier

[11:26:01.0000] <annevk>
as nobody uses namespaces anyway, it would be a premature optimization if the current thing was easier

[11:27:00.0000] <annevk>
/me is still not really convinced Selectors API needs namespace support

[11:28:00.0000] <JohnResig>
it certainly ups the complexity of the spec

[11:28:01.0000] <Dashiva>
Has anyone asked for namespace support, or was it just implicit with css namespaces existing?

[11:28:02.0000] <JohnResig>
Dashiva: dunno - I assume /someone/ asked for it

[11:29:00.0000] <JohnResig>
it wasn't me, though, heh

[11:29:01.0000] <annevk>
bzbarsky was in favor iirc

[11:29:02.0000] <annevk>
might be that someone at Opera liked it too, dunno

[11:29:03.0000] <JohnResig>
k

[11:30:00.0000] <annevk>
seems pointless to me

[11:30:01.0000] <annevk>
but then I specced it initially so you can all blame me

[11:43:00.0000] <JohnResig>
ugh... I fear running this test suite in IE

[12:30:00.0000] <annevk>
hmm, maybe SSD will be able to solve the slow boot up times of computers

[12:30:01.0000] <annevk>
(as opposed to software)

[12:33:00.0000] <Dashiva>
Isn't software the reason? :)

[12:34:00.0000] <annevk>
I'd think so, but I don't really know

[12:35:00.0000] <Dashiva>
I know from experience that OS startup time increases with age, and I doubt my disks are getting slower 

[12:39:00.0000] <Lachy>
hmm, I found this in my todo folder for selectors api. http://lists.w3.org/Archives/Public/public-webapi/2008May/0357.html Not sure how to deal with it, since I already responded to another thread on the same issue today saying the opposite

[12:40:00.0000] <Lachy>
JohnResig, as a JS library author, what seems most intuitive for you in regards to handling querySelector(null);? What the spec says, or what annevk is asking for (stringifying to "null")?

[12:40:01.0000] <JohnResig>
ew - stringifying sounds frightening

[12:41:00.0000] <JohnResig>
querySelector(null) finds all null elements on the page? not feeling that, heh

[12:41:01.0000] <JohnResig>
I'm fine with an exception

[12:41:02.0000] <annevk>
it accepts a DOMString after all

[12:41:03.0000] <annevk>
and null + "x" also gives "nullx"

[12:41:04.0000] <JohnResig>
sure - and if something that isn't a DOMString is passed in an exception should be thrown

[12:41:05.0000] <annevk>
no

[12:42:00.0000] <annevk>
that's not how JS works

[12:42:01.0000] <Lachy>
no, any object is stringified using .toString()

[12:42:02.0000] <Lachy>
the spec just makes an exception for null and undefined

[12:43:00.0000] <JohnResig>
then why are you asking me about null -> "null" - it's obviously a done deal, then?

[12:43:01.0000] <Lachy>
I'm asking because annevk wants the spec to change and I'm not sure if I should.

[12:43:02.0000] <othermaciej>
the spec is a draft

[12:44:00.0000] <annevk>
I don't feel strongly about this issue, as there are APIs that work either way

[12:44:01.0000] <othermaciej>
nothing is a done deal, yet

[12:44:02.0000] <annevk>
though for new specs sticking with the default behavior makes more sense to me

[12:44:03.0000] <Lachy>
I just want to know if null should be stringified to "null" or ""

[12:44:04.0000] <Lachy>
IIRC, Opera using "null", webkit uses ""

[12:44:05.0000] <othermaciej>
the way null and undefined convert to string in JS sucks, and it sucks more that DOM APIs are inconsistent about whether they treat null and/or undefined specially instead of using normal stringification rules

[12:44:06.0000] <JohnResig>
going to "" would make sense, considering that we're expecting the behavior of qSA(null) to be the same as qSA("")

[12:45:00.0000] <othermaciej>
it is not a big hassle either way implementation-wise, as long as it is specified

[12:46:00.0000] <Lachy>
othermaciej, so would you prefer to apply normal stringification rules then?

[12:46:01.0000] <othermaciej>
I have no real preference other a desire for closure on this issue

[12:47:00.0000] <othermaciej>
since it is a new API, doing whatever is less error-prone makes sense

[12:47:01.0000] <Lachy>
it's a bikeshed. There can be no closure :-)

[12:47:02.0000] <JohnResig>
null -> "", undefined -> "", (nothing) -> "" fit well with what's currently specified

[12:47:03.0000] <JohnResig>
and since "" throws an exception it'll be easy to handle

[12:48:00.0000] <Dashiva>
My paint color: If the user is going to see the result, "null" is good. If it's just a parameter, we want null to mean nothing and that puts it with ""

[12:49:00.0000] <Lachy>
having null result in an exception may make it easier for debugging. Consider calling querySelctor(myVar); and getting zero results returned and not understanding that myVar was accidentally left set to null.

[12:50:00.0000] <JohnResig>
Lachy: correct

[12:50:01.0000] <Lachy>
at least with an exception, it makes the error an obvious error, rather than a damn logic error that could go undetected.

[12:50:02.0000] <Lachy>
issue settled. Bikeshed painted a beautiful sky blue. :-)

[12:51:00.0000] <takkaria>
I say gray

[12:54:00.0000] <Lachy>
annevk, are you sure the raises thing in the IDL is optional?

[12:56:00.0000] <annevk>
yes

[12:56:01.0000] <annevk>
I'm positive it needs to be

[12:56:02.0000] <Lachy>
ok, in that case I'll remove it because it just makes the IDL more cluttered

[12:57:00.0000] <annevk>
indeed

[13:04:00.0000] <Lachy>
oh crap. I hate how we have a new mailing list. Now when I respond to old threads, I keep forgetting to change from public-webapi to public-webapps

[13:54:00.0000] <rubys>
hsivonen: html5.validator.nu appears to be down

[13:55:00.0000] <annevk>
yeah, has been like that for a day or so now :/

[13:55:01.0000] <annevk>
seems hsivonen is not around

[13:56:00.0000] <rubys>
Thanks!  I'm sure he'll attend to it when he gets back.

[14:19:00.0000] <MikeSmith>
unfortunately, building from http://svn.versiondude.net/whattf/build/trunk also appears to be broke

[14:19:01.0000] <MikeSmith>
in my environment at least

[14:30:00.0000] <JohnResig>
Lachy: hmm... no matter what I do I get NAMESPACE_ERRs from the Opera Gogi build

[14:30:01.0000] <JohnResig>
Lachy: I get the error if I give it an invalid namespace resolver or a valid one

[14:31:00.0000] <Lachy>
really? Show me a simple TC

[14:32:00.0000] <JohnResig>
well, let me see

[14:34:00.0000] <roc>
annevk: thanks man!

[14:35:00.0000] <JohnResig>
huh... works in my simple test case - time to work backwards

[14:36:00.0000] <Lachy>
ok, ping me when you work it out

[14:39:00.0000] <Lachy>
JohnResig, remember to test :hover as well. That one is going to be a little tricky, and will need to be interactive

[14:39:01.0000] <gsnedders>
/me now has a decent connection, and so shouldn't drop offline unexpectedly

[14:39:02.0000] <annevk>
roc, np, hopefully it kills the thread :)

[14:45:00.0000] <gsnedders>
annevk: The Xbox itself didn't, though many games have (Halo, anything using the Unreal Engine 2.5 and above)

[14:45:01.0000] <gsnedders>
annevk: (re: vorbis)

[14:46:00.0000] <gsnedders>
712 unread emails. Yay.

[14:46:01.0000] <JohnResig>
Lachy: ok! fixed the bug and found one error - Opera doesn't throw an exception with this resolver: { lookupNamespaceURI: function(){} }

[14:47:00.0000] <Lachy>
while resolving the default ns or a prefix?

[14:48:00.0000] <Lachy>
if it's while resolving the default ns, that's fine because it's implicitly returning undefined

[14:48:01.0000] <JohnResig>
a prefix - it doesn't throw a NAMESPACE_ERR

[14:48:02.0000] <Lachy>
oh, ok. Let me see

[14:50:00.0000] <JohnResig>
weird, I'm having troubles with a reduction - although I'm able to get the others (return null, return "") to fail.

[14:50:01.0000] <MikeSmith>
Hixie: would be good to try to get the "Fetching resources" section completed before publishing the next WD

[14:51:00.0000] <JohnResig>
Lachy: ok, I'm still investigating - I'm not sure why this one would fail

[14:52:00.0000] <JohnResig>
oh! wait

[14:52:01.0000] <JohnResig>
Lachy: ok, nm - I was giving it a valid namespace - just one that wasn't on the page

[14:53:00.0000] <JohnResig>
OK! need to generate a lot more test cases, now that it appears to be working

[14:54:00.0000] <Lachy>
ah, ok. cool. FWIW, this worked for me:

[14:54:01.0000] <Lachy>
<!DOCTYPE html>

[14:54:02.0000] <Lachy>
<script>

[14:54:03.0000] <Lachy>
try {

[14:54:04.0000] <Lachy>
  var p = document.querySelector("x|p", function(){});

[14:54:05.0000] <Lachy>
} catch (e) {

[14:54:06.0000] <Lachy>
  alert(e);

[14:54:07.0000] <Lachy>
}

[14:54:08.0000] <Lachy>
</script>

[14:55:00.0000] <JohnResig>
k

[15:07:00.0000] <Lachy>
hmm, now I'm down to the difficult issues. Dealing with NSResolver problems. I've put it off long enough, I will have to deal with it all tomorrow.

[15:08:00.0000] <Lachy>
only about 90 emails on the topic :-(

[15:09:00.0000] <JohnResig>
Lachy: ok! I think I found a legitimate bug with test case: http://ejohn.org/apps/selectortest/tmp.html it seems like this should find, at least, one svg element

[15:13:00.0000] <annevk>
doublec, roc, btw, the VoidCallback stuff from <video> should be just a function in ECMAScript (will be part of Web IDL or might already be, dunno)

[15:14:00.0000] <Lachy>
JohnResig, yep, looks like a bug to me.

[15:15:00.0000] <JohnResig>
Lachy: ok! I'll write a bunch of svg-in-xhtml cases (as I was going to do) - I'll just kind of have to eyeball how the results should go, since I don't have a reference at this point

[15:16:00.0000] <JohnResig>
Lachy: I'll leave this as a permanent URL, then: http://ejohn.org/apps/selectortest/svg-in-xhtml.html

[15:17:00.0000] <MikeSmith>
/me reads message from Sunava stating "IE8 will ship the updated section of Access Control that enables public data aggregation (no creds on wildcard) while setting us up on a trajectory to support more in the future (post IE8) using the API flag in an XDR level 2"

[15:17:01.0000] <roc>
annevk: but HTML5 doesn't say that yet, right?

[15:17:02.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/public-webapps/2008JulSep/0057.html

[15:18:00.0000] <Lachy>
JohnResig, it's not a bug

[15:18:01.0000] <Lachy>
it's your fault

[15:18:02.0000] <roc>
so they're not going to support anything in XHR, only XDR?

[15:19:00.0000] <Lachy>
JohnResig, the page is served as text/html. Serve it as XML and it works.

[15:19:01.0000] <Lachy>
since we don't yet support SVG in text/html, your test fails

[15:21:00.0000] <annevk>
roc, correct, twice

[15:23:00.0000] <roc>
that sucks, but no surprise

[15:24:00.0000] <annevk>
for the latter, yes

[15:35:00.0000] <annevk>
I'm glad I didn't specify the double GET algorithm :)

[15:36:00.0000] <gsnedders>
I'm glad I'm not spec'ing HTTP…

[15:36:01.0000] <annevk>
you stopped?

[15:36:02.0000] <gsnedders>
… oh, wait, I am :)

[15:36:03.0000] <annevk>
are you doing cookies too btw?

[15:37:00.0000] <gsnedders>
annevk: in the parsing spec? yeah.

[15:51:00.0000] <Lachy>
JohnResig, It seems Opera resolves duplicate namespace prefixes twice, but still use the first value returned.

[15:51:01.0000] <Philip`>
/me discovers that Dehydra is quite neat

[15:52:00.0000] <JohnResig>
Lachy: huh

[15:58:00.0000] <Hixie>
MikeSmith: what do you want that section to say? The main reason i haven't written it is i don't know what it should say, really

[16:01:00.0000] <MikeSmith>
Hixie: to say at least what you mention in your editorial note that it will cover

[16:02:00.0000] <Hixie>
do you think it should say those things?

[16:02:01.0000] <Hixie>
i'm undecided

[16:02:02.0000] <MikeSmith>
Hixie: mostly because of the x-refs to it

[16:03:00.0000] <Hixie>
yeah

[16:03:01.0000] <MikeSmith>
btw, r1857 seems to have broken styling of the editorial notes in the W3C version

[16:03:02.0000] <MikeSmith>
http://dev.w3.org/html5/spec/#fetching

[16:03:03.0000] <Hixie>
ok, i'll file a bug on myself seeing what i can do about fetching

[16:03:04.0000] <MikeSmith>
Hixie: cool

[16:03:05.0000] <Hixie>
yes, i removed the <style> block after noticing that the pubrules said i shouldn't have one

[16:04:00.0000] <Hixie>
is there some class i should use for notes in w3c docs?

[16:04:01.0000] <MikeSmith>
for the Publication Notes, I just use an embedded <style> block

[16:04:02.0000] <MikeSmith>
pubrules doesn't actually seem to complain about it

[16:04:03.0000] <annevk>
I use <style> too for a lot of specs

[16:05:00.0000] <MikeSmith>
and no person has

[16:05:01.0000] <MikeSmith>
Hixie: so I'd suggest just restoring the <style>

[16:05:02.0000] <annevk>
Hixie, websocket-allow-origin, meh, now it's back on my plate :p

[16:06:00.0000] <Hixie>
it was a pretty big <style> block

[16:07:00.0000] <Hixie>
i'd rather just use the classes w3c provides, i mean, it would be more in line with the intent of the pubrules

[16:08:00.0000] <MikeSmith>
true

[16:08:01.0000] <MikeSmith>
I'll look at the stock stylesheets right now and see what they provide

[16:08:02.0000] <Hixie>
ok

[16:08:03.0000] <Hixie>
i have to go to work, i'll be back in a bit

[16:08:04.0000] <MikeSmith>
Hixie: btw, also on my wish list is a definition for "a document's address" (XXXDOCURL flagged stuff)

[16:09:00.0000] <MikeSmith>
though there are not x-refs for that now, so less need

[16:09:01.0000] <Hixie>
yeah i've even less idea what to do about that one

[16:09:02.0000] <MikeSmith>
yeah, I know you mentioned that before

[16:09:03.0000] <MikeSmith>
anyway, ttl

[16:09:04.0000] <Hixie>
later

[16:25:00.0000] <MikeSmith>
I so far find jack in the StyleSheets/TR/ stylesheets as far as class values for marking up notes of any kind

[16:26:00.0000] <MikeSmith>
they really quite basic

[16:28:00.0000] <MikeSmith>
would that we had something like, say, and <aside> element or something


2008-07-10
[19:08:00.0000] <Hixie>
where should i mail comments about the workers spec

[19:08:01.0000] <Hixie>
public-html, whatwg, or public-webapps?

[19:16:00.0000] <MikeSmith>
Hixie: public-html + whatwg would seem appropriate to me at least

[19:17:00.0000] <MikeSmith>
though I'd think that at this point more feedback would likely come back from the whatwg list than from public-html

[19:17:01.0000] <Hixie>
k

[19:27:00.0000] <Hixie>
ok, mailed whatwg and public-html

[20:07:00.0000] <Hixie>
ok bbl. food.

[22:41:00.0000] <annevk>
/me wakes up

[22:42:00.0000] <annevk>
lol, Mozilla is changing their mind on POST again?!

[22:42:01.0000] <annevk>
/me sighs

[22:51:00.0000] <roc>
hmm?

[22:52:00.0000] <roc>
if you're talking about Jonas' last message to whatwg, he's not talking about AC, right?

[22:53:00.0000] <annevk>
this message: http://lists.w3.org/Archives/Public/public-webapps/2008JulSep/0069.html

[22:53:01.0000] <annevk>
but I'm a bit grumpy since I woke up early

[22:56:00.0000] <roc>
I'm grumpy because there are things I want Jonas to be doing other than wrangling cross-domain specs

[22:58:00.0000] <annevk>
as far as the actual Flash documentation is concerned, it seems that pretty much anything goes

[22:58:01.0000] <annevk>
including arbitrary headers apart from a certain subset

[22:59:00.0000] <annevk>
(similar headers to those that are blocked in XMLHttpRequest)

[23:04:00.0000] <MikeSmith>
I think Jonas is already convinced. seems like he just needs something data to take back to others

[23:04:01.0000] <MikeSmith>
preferably something succinct

[00:56:00.0000] <annevk>
http://alex.dojotoolkit.org/?p=687 is pretty good

[01:08:00.0000] <takkaria>
Alan Gresley posted there, heh

[01:08:01.0000] <takkaria>
s/posted/commented/ perhaps

[01:09:00.0000] <annevk>
I don't really follow that guy

[01:42:00.0000] <takkaria>
mozilla landed initial <video> support yesterday, it seems

[01:42:01.0000] <takkaria>
though not turned on by default

[01:54:00.0000] <Lachy>
http://standardssuck.org/the-test-suite-is-not-enough

[02:03:00.0000] <Lachy>
Hixie, this NodeList.toArray() seems like something for DOM5, not HTML5 http://www.w3.org/Bugs/Public/show_bug.cgi?id=5851

[02:04:00.0000] <Lachy>
but it's definitely needed. I think i suggested it somewhere once too, or if not, I know I at least thought about it.

[02:04:01.0000] <Hixie>
yeah I just wanted to turn one of my e-mails into something more specific

[02:04:02.0000] <Hixie>
(originally i just had an e-mail saying "look at this blog entry")

[02:04:03.0000] <Lachy>
ok

[02:04:04.0000] <Hixie>
(but that was the only thing actionable from that list)

[02:05:00.0000] <Hixie>
i wish webidl (heycam) and dom core (zcorpan) and other specs (lachy, annevk) used bugzilla

[02:06:00.0000] <Hixie>
then i could bounce these bugs to other people and know they were not lost

[02:06:01.0000] <Lachy>
sure, that could work.

[02:07:00.0000] <Lachy>
I'll speak to chaals about setting up a webapps product and then you can move all the stuff to that and assign to the right person.

[02:07:01.0000] <Hixie>
that would be sweet

[02:08:00.0000] <Lachy>
I just don't know when I'll be able to speak to him, I don't know where he is and he still hasn't responded to a mail I sent him last week

[02:10:00.0000] <Hixie>
just post it to the public-webapps list and have mike or doug do it :-)

[02:10:01.0000] <Hixie>
i'm sure chaals wouldn't mind, it's not like it affects the group really

[02:11:00.0000] <Hixie>
it's up to the editors how they track issues, after all

[02:11:01.0000] <Lachy>
ok, maybe later.

[02:11:02.0000] <Lachy>
I gotta get ready and go to work now

[02:13:00.0000] <takkaria>
looks public-html-bugzilla hasn't recieved new posts for a while

[02:13:01.0000] <takkaria>
oh, no, that's just me looking at the June archive page

[02:13:02.0000] <Lachy>
takkaria, sure it has.

[02:13:03.0000] <Lachy>
oh

[02:13:04.0000] <gDashiva>
I do that every month change

[02:14:00.0000] <gDashiva>
"man, traffic sure died down"

[02:14:01.0000] <Hixie>
use /latest as your bookmark

[02:14:02.0000] <Lachy>
gDashiva, just bookmark /public-html-bugzilla/latest and you don't have the problem

[02:14:03.0000] <gDashiva>
I don't use bookmarks, I keep open tabs

[02:14:04.0000] <Hixie>
wow, my browsers aren't stable enough for that

[02:14:05.0000] <Lachy>
or just keep that in your autocomplete history then

[02:14:06.0000] <Hixie>
/me uses http://☺.damowmow.com/

[02:15:00.0000] <Lachy>
gDashiva, how many tabs do you keep open?

[02:15:01.0000] <gDashiva>
Want me to count?

[02:15:02.0000] <Lachy>
just a rough guess

[02:15:03.0000] <Hixie>
i wonder how long i should wait for microsoft to get back to me on their needs for workers

[02:16:00.0000] <gDashiva>
12+41+10 over three opera windows, and five in firefox

[02:16:01.0000] <Lachy>
Hixie, knowing MS, you could be waiting months.

[02:16:02.0000] <Lachy>
woah. I hate having more than 6, and when I get to about 10 I start closing old ones

[02:17:00.0000] <Lachy>
how do you find anything efficiently with that many tabs?

[02:17:01.0000] <annevk>
then I'd have to create a W3C bugzilla account

[02:17:02.0000] <gDashiva>
Lachy: window panel

[02:17:03.0000] <Lachy>
If I want to look at a page again, I just start typing it's url or, if I can't remember that, something from the title and it shows up quickly enough

[03:19:00.0000] <takkaria>
has anyone done a useful explanitory diagram of the adoption agency algorithm yet?

[03:19:01.0000] <takkaria>
because if not, I'm in the process of making one and I could be persuaded to turn it into an svg or something

[03:27:00.0000] <Lachy>
Hixie, MikeSmith set up the WebApps WG product in bugzilla, so you can start assiging us bugs

[03:42:00.0000] <jgraham>
takkaria: Not as far as I know and please :)

[03:44:00.0000] <jgraham>
Hixie: I think refering to workers as "threads" is going to cause a lot of messages asking where the lock features are. Better to call them worker "microprocesses" or somthing that makes their shared-nothing nature more explicit (plus this will also make you look more trendy and down with the kids ;) )

[03:45:00.0000] <takkaria>
Shared-Nothing Web Worker Threads abbreviated nicely

[03:46:00.0000] <takkaria>
abbreviates, even

[03:48:00.0000] <Lachy>
SNWWT? That's a terrible abbreviation.

[03:48:01.0000] <jgraham>
I was assuming irony

[03:49:00.0000] <Lachy>
although, given the W3C's track record for coming up with abbreviations, it's not too bad

[03:50:00.0000] <Lachy>
I think we need a name with a recursive algorithm

[03:50:01.0000] <Lachy>
*acronym

[03:51:00.0000] <Lachy>
but something more creative than PHP's lame attempt with "PHP Hypertext Processor"

[03:57:00.0000] <takkaria>
you could redefine WHATWG to be "WHATTF's Hypertext Application Technology Working Group" and WHATTF to be "WHATWG's Hypertext Application Technology Task Force"

[04:03:00.0000] <gDashiva>
Lachy: You preferred Personal Homepage?

[04:08:00.0000] <Lachy>
gDashiva, what?

[04:08:01.0000] <Lachy>
takkaria, nice :-)

[04:10:00.0000] <takkaria>
rename WHATWG to Web HATWG, too, since we like having "Web" in things, and I like hats

[04:10:01.0000] <gDashiva>
Lachy: That was the original meaning of php, until they retconned it

[04:12:00.0000] <Lachy>
takkaria, the Web Hat WG sounds interesting.

[04:12:01.0000] <Lachy>
for all those geeky people that wear hats with web stuff on them

[04:24:00.0000] <zcorpan_>
Philip`: was 2d.imageData.get.smallest.html intentionally removed or replaced by something else?

[04:32:00.0000] <MikeSmith>
Lachy: so what do you need bugzilla for that you can't do with the existing group Tracker?

[04:33:00.0000] <Lachy>
MikeSmith, bugzilla is a better than the group tracker

[04:33:01.0000] <MikeSmith>
in what ways?

[04:33:02.0000] <Lachy>
also, Hixie suggested it so that he could easily reassign some of the issues from old WHATWG discussions to us for dealing with in WebApps

[04:34:00.0000] <MikeSmith>
ah

[04:34:01.0000] <Lachy>
like, for instance, bug 5851

[04:34:02.0000] <Lachy>
Hixie will probably reassign that to zcorpan_ for adding to DOM5

[04:35:00.0000] <zcorpan_>
cool i need a central place for my dom5 issues

[04:35:01.0000] <zcorpan_>
right now i have notes all over the place

[04:35:02.0000] <MikeSmith>
well, the main unique thing about bugzilla is that public people (not members of the WG) can use it to raise and track issues

[04:36:00.0000] <MikeSmith>
or public people can opt-in to particular issues by adding themselves to the Cc list

[04:36:01.0000] <MikeSmith>
cherry-pick which issues they want to follow

[04:37:00.0000] <MikeSmith>
Adam Barth has done that with a couple HTML WG bugzilla issues so far 

[04:37:01.0000] <MikeSmith>
I suspect we will see more of that

[04:38:00.0000] <MikeSmith>
Lachy: bug 5841 from what system?

[04:40:00.0000] <Lachy>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=5851

[05:02:00.0000] <zcorpan_>
Philip`: in 2d.path.clip.unaffected.html is the first lineTo supposed to be moveTo?

[06:44:00.0000] <Lachy>
in WF2, I wonder if the validity requirements for type=url should be changed to refer to URL definition in HTML5 after it's incorporated into the main spec, instead of referring directly to the RFC

[06:50:00.0000] <takkaria>
seems sensible

[06:50:01.0000] <takkaria>
though you might want something looser than that, e.g. allowing spaces

[08:06:00.0000] <Lachy>
grr. I may have to give in and define a feature string for selectors api, even though I really don't want to.

[08:07:00.0000] <Lachy>
annevk, zcorpan_, Hixie: any opinions on the matter? See http://lists.w3.org/Archives/Public/public-webapps/2008JulSep/0085.html

[08:07:01.0000] <Lachy>
othermaciej, ^

[08:08:00.0000] <Lachy>
ah, weinig's here too.

[08:19:00.0000] <gDashiva>
Lachy: Use web hats

[08:20:00.0000] <Lachy>
gDashiva, how does that help?

[08:21:00.0000] <gDashiva>
In the string :)

[08:21:01.0000] <Lachy>
btw, your new nickname is annoying cause I keep typing "gs<tab>" instead of "gd<tab>". I preferred it when I could type "da<tab>"

[08:22:00.0000] <Lachy>
oh. hasFeature("web hats", "2.0")?

[08:25:00.0000] <Lachy>
maybe I should use hasFeature("select-a-pie", "3.141592653589793238462643383279502");

[08:25:01.0000] <gDashiva>
Yes, like that

[08:25:02.0000] <gDashiva>
Or maybe hasFeature("web hats", "selector hat")

[08:26:00.0000] <Lachy>
the second param needs to be a version number

[08:26:01.0000] <takkaria>
selector hat 3. :)

[08:26:02.0000] <gDashiva>
Does it allow complex numbers?

[08:27:00.0000] <Lachy>
I'm not sure

[08:27:01.0000] <gDashiva>
I'm not of much help then

[08:29:00.0000] <gDashiva>
Did anyone ever make a response to the "What about an implementation that supports 95%" scenario?

[08:37:00.0000] <Lachy>
don't remember

[08:38:00.0000] <Lachy>
returning true for hasFeature doesn't really mean that it fully supports the API in practice. It only means that the implementation is claiming support, despite having known bugs

[08:39:00.0000] <Lachy>
although exactly where an implementation draws the line between total experimental support (returning false) and pretty good support (returning true) is up the implementation and varies significantly in practice

[10:10:00.0000] <Hixie>
othermaciej: if you define a set that has to be supported, define it as the complete set

[10:43:00.0000] <gsnedders>
Hixie: Can you fix all these DuplicateTermExceptions I'm getting? :P

[10:45:00.0000] <gsnedders>
Hixie: http://hg.gsnedders.com/spec-gen/ if you want to just download it and run it to find the terms that cause it

[11:09:00.0000] <Lachy>
gsnedders, how do I use your spec generator?

[11:10:00.0000] <Lachy>
what does setup.py do? Does that install the script or something?

[11:10:01.0000] <gsnedders>
Lachy: Install it in the normal python way (python setup.py install), then see the spec-gen program it installs

[11:10:02.0000] <Lachy>
ok

[11:10:03.0000] <Lachy>
then how do I use it after it's installed?

[11:10:04.0000] <gsnedders>
Lachy: spec-gen --help :)

[11:12:00.0000] <Lachy>
gsnedders, I get an error

[11:12:01.0000] <gsnedders>
Lachy: what?

[11:12:02.0000] <Lachy>
$ spec-gen --help

[11:12:03.0000] <Lachy>
Traceback (most recent call last):

[11:12:04.0000] <Lachy>
  File "/usr/local/bin/spec-gen", line 11, in <module>

[11:12:05.0000] <Lachy>
    from specGen import generator

[11:12:06.0000] <Lachy>
  File "/Library/Python/2.5/site-packages/specGen/generator.py", line 26, in <module>

[11:12:07.0000] <Lachy>
    from lxml import etree

[11:12:08.0000] <Lachy>
ImportError: No module named lxml

[11:12:09.0000] <gsnedders>
Lachy: Ah, you need to install lxml

[11:12:10.0000] <Lachy>
how?

[11:13:00.0000] <gsnedders>
http://codespeak.net/lxml/installation.html

[11:13:01.0000] <jgraham>
easy_install lxml

[11:13:02.0000] <jgraham>
But you need to instally easy_install first :)

[11:13:03.0000] <gsnedders>
(yeah, it's rather obvious that the spec-gen is pre-alpha software)

[11:13:04.0000] <jgraham>
(Unless it is already installed)

[11:13:05.0000] <jgraham>
Lachy: I suggest you google ez_setup.py

[11:14:00.0000] <jgraham>
Then run that (maybe with sudo) to install easy_install

[11:14:01.0000] <jgraham>
Then do "easy_install lxml"

[11:14:02.0000] <takkaria>
jgraham: cheers for the online parse tree viewer, btw, it's been very useful in constructing testcases

[11:14:03.0000] <jgraham>
takkaria: np

[11:15:00.0000] <Lachy>
I ran easy_install and tried, but failed

[11:15:01.0000] <Lachy>
src/lxml/lxml.etree.c: At top level:

[11:15:02.0000] <Lachy>
src/lxml/lxml.etree.c:110954: error: invalid application of ‘sizeof’ to incomplete type ‘struct __pyx_obj_4lxml_5etree__ParserSchemaValidationContext’ 

[11:15:03.0000] <Lachy>
lipo: can't open input file: /var/folders/hO/hOi6uidEGwKsuLgkSfspM++++TI/-Tmp-//ccXmNL9v.out (No such file or directory)

[11:15:04.0000] <Lachy>
error: Setup script exited with error: command 'gcc' failed with exit status 1

[11:16:00.0000] <jcranmer>
someones relying on a declaration where a definition is needed

[11:16:01.0000] <jgraham>
hmm... it looks like it can't find all your headers. I think I have heard of this on OS X before...

[11:16:02.0000] <jcranmer>
or more likely, someone neglected the declaration altogether and it was inferred by another declartion

[11:17:00.0000] <jgraham>
http://blog.offbytwo.com/2008/05/07/installing-lxml-on-os-x-leopard/ - I followed those instructions last time I think

[11:17:01.0000] <gsnedders>
easy_install worked fine for me last night

[11:18:00.0000] <Lachy>
sudo port install py25-lxml should work for me

[11:18:01.0000] <Lachy>
that's the mac port, apparently

[11:18:02.0000] <jgraham>
Lachy: I guess that would work too

[11:18:03.0000] <jgraham>
gsnedders: Did you ever find a good problem for learning Haskell?

[11:19:00.0000] <Lachy>
I wonder why the libraries in OS X are so outdated

[11:19:01.0000] <Lachy>
that sucks

[11:19:02.0000] <gsnedders>
jgraham: no

[11:19:03.0000] <gsnedders>
Lachy: Because, IIRC, they're frozen when it reaches RC (which is around a year ago now for LeoparD)

[11:20:00.0000] <gsnedders>
*Leopard

[11:20:01.0000] <gsnedders>
Lachy: were you running easy_install with superuser perms?

[11:21:00.0000] <gsnedders>
Lachy: You need lxml and html5lib installed

[11:21:01.0000] <jgraham>
gsnedders: You could try porting a sudoku solver to haskell. http://norvig.com/sudoku.html seems quite interesting in terms of how it works even if at the end you only have a sudoku solver to show for it

[11:23:00.0000] <Lachy>
gsnedders, no

[11:23:01.0000] <Lachy>
I may have to update my html5lib installation

[11:24:00.0000] <gsnedders>
I don't think it _needs_ a recent version. It's just 0.11 is far quicker than any previous version

[11:24:01.0000] <Lachy>
I may not have it installed. I can't remember if I did it before or after the last time I wiped my machine

[11:24:02.0000] <gsnedders>
1.494s to run the spec-gen on an XML copy of HTML 5, and serialising back to XML

[11:28:00.0000] <Lachy>
ok, that mac port finished installing. Now I'm running sudo easy_install lxml

[11:28:01.0000] <Lachy>
and I also installed html5lib quite easily

[11:29:00.0000] <Lachy>
now spec-gen --help works

[11:29:01.0000] <Hixie>
gsnedders: what are the duplicate terms? (got any examples?)

[11:29:02.0000] <gsnedders>
Hixie: Well, it's a fatal error and stops at the first: attr-meta-http-equiv

[11:30:00.0000] <gsnedders>
Lachy: try running the test cases (python runtests.py)

[11:30:01.0000] <Hixie>
/me looks at the spec

[11:30:02.0000] <Lachy>
This is useful help for this option: --sanitize            sanitize

[11:30:03.0000] <gsnedders>
Lachy: That's copied verbatim from html5lib's parse.py :P

[11:31:00.0000] <Lachy>
oh, well I should complain to jgraham or annevk about that

[11:31:01.0000] <gsnedders>
rubys I expect wrote that, but I'm not sure

[11:32:00.0000] <Hixie>
gsnedders: fixed it

[11:34:00.0000] <gsnedders>
Now, let me go help my sister with supper

[11:41:00.0000] <Lachy>
can html5lib be used from the command line directly like spec-gen can, or only within other python scripts?

[11:42:00.0000] <Lachy>
e.g. to quickly parse a document and see if it reports any parsing errors?

[11:44:00.0000] <Lachy>
gsnedders, could the command be renamed to specgen? The hyphen makes typing it slower

[11:45:00.0000] <Lachy>
gsnedders, I need it to support the automatic bibliographic references that the CSSWG postprocessor does

[11:47:00.0000] <Lachy>
if you can access it, the post processor uses this data file http://www.w3.org/Style/Group/css3-src/biblio.ref

[11:47:01.0000] <Lachy>
it might be member only, though

[11:49:00.0000] <Lachy>
gsnedders, <!--begin-status-->...<!--end-status--> needs to be supported to. It's supposed to replace that with boilerplate status text

[11:50:00.0000] <Lachy>
oh, and the [[REFERENCE]] and [[!REFERENCE]] syntax too

[12:01:00.0000] <gsnedders>
Lachy: I don't really want to rename, but I guess I could

[12:01:01.0000] <gsnedders>
Lachy: I don't want to support those bibliography references

[12:01:02.0000] <gsnedders>
Lachy: No, I can't access that

[12:01:03.0000] <jgraham>
Lachy: parse.py allows html5lib to be run from the command line

[12:02:00.0000] <gsnedders>
Lachy: There are no substitutions done yet :P

[12:03:00.0000] <gsnedders>
(I'd quick like to use BibTeX for bibliographies)

[12:04:00.0000] <Lachy>
jgraham, that would mean I need to keep a copy of parse.py in same directory and run ./parse.py.  Is there a way I can set it up so I can just run it from within any directory at any time?

[12:05:00.0000] <Lachy>
gsnedders, I don't care how you do the references. I just want a quick and easy way for me to insert a reference using something like [[REFERENCE]] in the source, and have everything else automatically generated.

[12:05:01.0000] <gsnedders>
Lachy: I guess the identifier needs to be in the database?

[12:05:02.0000] <Lachy>
the css post process adds all the necessary <a href='...'><cite>...</cite></a> stuff around that and generates the appropriate rerference at the end of the page forme

[12:06:00.0000] <Lachy>
gsnedders, yeah

[12:09:00.0000] <gsnedders>
I guess seeming you can't actually change the file it uses in the real one what format my one uses is irrelevant

[12:13:00.0000] <jgraham>
Lachy: Just use a symlink like ln -s ~/bin/htmlparse /path/to/parse.py 

[12:14:00.0000] <Lachy>
jgraham, ok. I'll have to find a suitable place to store parse.py then.

[12:15:00.0000] <jgraham>
Er, I think I got that the wrong way round; /path/to/parse.py should be before the link name

[12:17:00.0000] <Lachy>
ok. I'll look up the man page before I do it to be sure

[12:17:01.0000] <Lachy>
but I always get it backwards when I run it anyway :-)

[12:17:02.0000] <jgraham>
And it seems like OSX doesn't have ~/bin on the default path

[12:18:00.0000] <Lachy>
no, it has /usr/bin/ I think

[12:26:00.0000] <gsnedders>
Hixie: specGen.processes.xref.DuplicateTermException: canvaspattern

[12:30:00.0000] <tusho>
any docs for html5lib ruby?

[12:47:00.0000] <tusho>
huh

[12:47:01.0000] <tusho>
RuntimeError: Unknown TreeWalker dom

[12:48:00.0000] <jgraham>
tusho: I don't think there are any specifically

[12:48:01.0000] <tusho>
still what about the above

[12:48:02.0000] <jgraham>
/me doesn't know ruby

[12:48:03.0000] <tusho>
don't see why that would happen

[12:48:04.0000] <jgraham>
When did that happen?

[12:48:05.0000] <Hixie>
gsnedders: fixed

[12:48:06.0000] <jgraham>
i.e. what did you call?

[12:48:07.0000] <tusho>
HTML5::TreeWalkers.get_tree_walker('dom')

[12:50:00.0000] <jgraham>
tusho: DOM doesn't seem to be an option. You can have REXML, Hpricot or SimpleTree

[12:50:01.0000] <tusho>
Oh, I see.

[12:51:00.0000] <tusho>
I'll pick Hpricot, I like hpricot

[13:00:00.0000] <tusho>
Hmph.

[13:00:01.0000] <tusho>
The hpricot isn't very useful. No searching stuff.

[13:00:02.0000] <tusho>
:|

[13:04:00.0000] <jgraham>
tusho: What are you trying to do? 

[13:05:00.0000] <tusho>
Move all hN tags down M levels.

[13:05:01.0000] <tusho>
So if '2', h1 -> h3, etc, and h4-h6 -> h6

[13:07:00.0000] <jgraham>
It sounds like you don't need  treewalker except for serialization

[13:07:01.0000] <jgraham>
In python I would do something like:

[13:08:00.0000] <jgraham>
p = html5lib.HTMLParser(tree=treebuilders.getTreBuilder("lxml"))

[13:08:01.0000] <tusho>
OK. What should I use, then? I'm _already_ using the parser for sanitization.,

[13:08:02.0000] <tusho>
Ah, I see. Okay. Hm.

[13:08:03.0000] <jgraham>
doc = p.parse("input.html")

[13:08:04.0000] <tusho>
/me nods

[13:08:05.0000] <jgraham>
then the tree-specific method of doing what you want

[13:09:00.0000] <jgraham>
then maybe use the treewalker stuff to do the output and sanitisation

[13:09:01.0000] <tusho>
OK!

[13:14:00.0000] <tusho>
jgraham: Hmmmmmmmmmmmmmmm.

[13:15:00.0000] <tusho>
I take it that this isn't _really_ hpricot?

[13:18:00.0000] <jgraham>
tusho: I think it is really hpricot

[13:18:01.0000] <tusho>
NoMethodError: undefined method `/' for #<HTML5::TreeBuilders::Hpricot::TreeBuilder:0x122c4cc>

[13:18:02.0000] <tusho>
after

[13:18:03.0000] <tusho>
HTML5::TreeBuilders[:hpricot].new(tree)/"a"

[13:18:04.0000] <tusho>
tree is the html5parser result

[13:19:00.0000] <jgraham>
I'm not sure what that's trying to do

[13:19:01.0000] <tusho>
Get all the 'a' tags.

[13:22:00.0000] <jgraham>
http://golem.ph.utexas.edu/~distler/code/instiki/svn/lib/sanitize.rb might be useful to you

[13:23:00.0000] <tusho>
    @treebuilder = TreeBuilders::REXML::TreeBuilder

[13:23:01.0000] <tusho>
Not really.

[13:25:00.0000] <jgraham>
OK, so tree is a hpricot tree, right? So what does all the HTML5::TreeBuilders[:hpricot].new do?

[13:25:01.0000] <jgraham>
(did I mention that I don't know Ruby)

[13:26:00.0000] <tusho>
HTML5::TreeBuilders[:hpricot] -> HTML5::Treebuilders::Hpricot::Treebuilder

[13:26:01.0000] <tusho>
Then I make a new instance.

[13:30:00.0000] <Hixie>
aa___: yt? othermaciej: yt?

[13:33:00.0000] <annevk>
Lachy, FWIW, I'm opposed to hasFeature

[13:36:00.0000] <jgraham>
tusho: I think you want to set the HTML5::Treebuilders::Hpricot::Treebuilder class as the @tree attribute on your HTMLParser

[13:36:01.0000] <tusho>
Ah.

[13:36:02.0000] <tusho>
That might work. :P Then how would I use it like Hpricot?

[13:36:03.0000] <tusho>
i.e. get the actual document object

[13:38:00.0000] <jgraham>
the .parse method of the HTMLParser will return a Hpricot tree object

[13:38:01.0000] <jgraham>
(fwiw I can't remember if you want to set the @tree to be a class or an instance)

[13:40:00.0000] <jgraham>
(but you should be able to use HTML5::Trebuilders::getTreeBuilder("hpricot") to get the right type of object

[13:40:01.0000] <jgraham>
)

[13:42:00.0000] <tusho>
jgraham: get_tree_builder, it'd be

[13:44:00.0000] <tusho>
jgraham: and as [] is a shortcut:

[13:44:01.0000] <tusho>
HTML5::TreeBuilders[:hpricot]

[13:45:00.0000] <jgraham>
Crazy ;)

[13:45:01.0000] <tusho>
jgraham: It'll just be something like this:

[13:45:02.0000] <tusho>
def [](name)

[13:45:03.0000] <tusho>
get_tree_builder name

[13:45:04.0000] <tusho>
end

[13:45:05.0000] <tusho>
So not too crazy :)

[13:45:06.0000] <tusho>
(And :foo is just the (Lisp) symbol 'foo')

[13:47:00.0000] <jgraham>
Oh, I see. That makes som sense

[13:48:00.0000] <jgraham>
*some

[13:48:01.0000] <gsnedders>
Hixie: command-insertorderedlist and remoteeventtarget are the two remaining dupes

[13:48:02.0000] <tusho>
jgraham: You could do:

[13:49:00.0000] <tusho>
html5.treebuilders['hpricot'] in python

[13:49:01.0000] <tusho>
__getitem__, vs defining []

[13:50:00.0000] <Hixie>
gsnedders: fixed

[13:51:00.0000] <Hixie>
i guess i'll define pipes in html5 proper

[13:51:01.0000] <Hixie>
postMessage v2

[13:51:02.0000] <Hixie>
might as well add basic data structure support while i'm at it

[13:52:00.0000] <tusho>
Hixie: can't you just ... use JS or something?

[13:52:01.0000] <tusho>
you're inventing a programming language! :)

[13:52:02.0000] <Hixie>
i mean for transfering data using postMessage()

[13:53:00.0000] <Hixie>
we can't just use JS, as that would allow cross-domain polution

[13:53:01.0000] <annevk>
that's bound to confuse postMessage implementors

[13:53:02.0000] <tusho>
true

[13:53:03.0000] <tusho>
still...

[13:53:04.0000] <tusho>
pipes and data structures..

[13:53:05.0000] <tusho>
i'm sure there's some kind of constrained language that already does it

[13:53:06.0000] <Hixie>
annevk: what is?

[13:54:00.0000] <Hixie>
tusho: i don't understand what you mean

[13:54:01.0000] <annevk>
if the whole postMessage algorithm changes now to add support for pipes

[13:54:02.0000] <jgraham>
tusho: Yeah, although it wouldn't actually work in python because treebuilders is a module not a class

[13:54:03.0000] <Hixie>
annevk: it'd be a superset

[13:54:04.0000] <tusho>
jgraham: Well, in Ruby I think it's a module

[13:54:05.0000] <jgraham>
(re: __getitem__ that is)

[13:54:06.0000] <annevk>
yes, but a group of implementors is still working on v1 and shipping that and won't have time to add v2

[13:54:07.0000] <tusho>
Which are used for namespaces and mixins. :p

[13:54:08.0000] <Hixie>
brb

[13:57:00.0000] <tusho>
Hmph.

[13:57:01.0000] <tusho>
The tree gives me an array of elements.

[13:57:02.0000] <tusho>
Why couldn't it just be a Hpricot document. Sheehs

[13:58:00.0000] <annevk>
Lachy, for hasFeature, maybe make it something for non-ECMAScript impl

[13:59:00.0000] <Lachy>
ok, that could work

[13:59:01.0000] <annevk>
and also mark it at risk :)

[13:59:02.0000] <annevk>
so we can drop it after CR :p

[14:00:00.0000] <annevk>
:evil:

[14:00:01.0000] <Lachy>
LOL

[14:00:02.0000] <Lachy>
Hixie, othermaciej, http://lists.w3.org/Archives/Public/www-archive/2008Jul/att-0019/Overview.html

[14:00:03.0000] <gsnedders>
Hixie: the spec-gen works in 1.5s on an XML copy of html5 (both parsing and serialising in a C extension), so with chtml5lib, that'd be the sort of speed doable

[14:00:04.0000] <Lachy>
also mailed www-style about it

[14:01:00.0000] <Lachy>
JohnResig_, see URI above

[14:01:01.0000] <Lachy>
http://lists.w3.org/Archives/Public/www-style/2008Jul/0193.html

[14:02:00.0000] <Lachy>
I suppose I should mail webapps about it to

[14:10:00.0000] <gsnedders>
Philip`: No, there is no ISO for TOC

[14:20:00.0000] <tusho>
Hmph.

[14:20:01.0000] <tusho>
The tree is an array of hpricot elements.

[14:20:02.0000] <tusho>
Not an hpricot searcher thing

[14:22:00.0000] <gsnedders>
Hmm…

[14:22:01.0000] <gsnedders>
That's a rather major bug.

[14:23:00.0000] <tusho>
Is it a bug?

[14:23:01.0000] <tusho>
:\

[14:23:02.0000] <tusho>
Dunno how on earth to turn it into a hpricot searcher thingy though..

[14:23:03.0000] <gsnedders>
No, in my spec-gen, I just found a huge bug

[14:23:04.0000] <gsnedders>
Completely unrelated to you :P

[14:23:05.0000] <tusho>
Oh.

[14:23:06.0000] <tusho>
:(

[14:26:00.0000] <gsnedders>
I _really_ hate lxml

[14:27:00.0000] <weinig>
Lachy: Am I correct in assuming querySelector is supposed to work with elements that are not in the document?

[14:27:01.0000] <weinig>
Lachy: for instance a freshly created element, (document.createElement("foo")

[14:27:02.0000] <annevk>
yes

[14:27:03.0000] <annevk>
it should work for document fragments and such

[14:28:00.0000] <annevk>
well, iirc

[14:28:01.0000] <JohnResig>
weinig: currently no implementation supports fragments

[14:28:02.0000] <weinig>
JohnResig: I am implementing fragments right now

[14:28:03.0000] <weinig>
JohnResig: webkit should support them in an hour

[14:29:00.0000] <weinig>
thanks annevk

[14:29:01.0000] <JohnResig>
weinig: nice - did you catch my test suite?

[14:29:02.0000] <weinig>
JohnResig: I saw it last night, it looks cool

[14:30:00.0000] <weinig>
JohnResig: it seems to have some weird issues in Safari though

[14:30:01.0000] <JohnResig>
weinig: k - I noticed a couple regressions from Safari 3.1 -> Nightly (but also some fixes)

[14:30:02.0000] <JohnResig>
I assume that things are still being worked on, on your end

[14:30:03.0000] <weinig>
really?

[14:30:04.0000] <weinig>
JohnResig: they are

[14:32:00.0000] <jgraham>
gsnedders: Why do you hate lxml?

[14:33:00.0000] <gsnedders>
jgraham: how it stores text

[14:33:01.0000] <gsnedders>
(the latest bug is because I forget to copy the tail)

[14:33:02.0000] <jgraham>
gsnedders: Yeah the .text .tail thing isn't really optimised for documents but text nodes are pretty bad too

[14:34:00.0000] <jgraham>
(that is documents as opposed to data where .tails are rare)

[14:43:00.0000] <JohnResig>
Lachy: I'll need your attention here: https://bugzilla.mozilla.org/show_bug.cgi?id=416317#c29 Boris has some Selectors API spec questions

[14:52:00.0000] <Lachy>
weinig, yes

[14:52:01.0000] <Lachy>
JohnResig, looking now

[14:57:00.0000] <Lachy>
JohnResig, so if I understand, the issue is what to do with:

[14:57:01.0000] <Lachy>
.querySelector("foo", {});

[14:57:02.0000] <JohnResig>
that's one of the points, yes

[14:57:03.0000] <Lachy>
what does Firefox do now?

[14:57:04.0000] <JohnResig>
it sounds like it just ignores it

[14:58:00.0000] <Lachy>
I would expect it to throw an NAMESPACE_ERR

[14:58:01.0000] <JohnResig>
yeah - that's what I test for

[14:58:02.0000] <JohnResig>
the other point: what should .querySelector() do (passing in nothing)

[14:59:00.0000] <JohnResig>
since that's not specified (it seems)

[15:01:00.0000] <Lachy>
I think it is, let me see.

[15:01:01.0000] <zcorpan>
wow, image { background:fuchsia } <img> works in ie

[15:02:00.0000] <gsnedders>
zcorpan: <img> has a non-zero size, or there being an actual image?

[15:02:01.0000] <Lachy>
JohnResig, it says "If the selectors parameter is set to either null or undefined, the implementation must behave as if an empty string had been passed instead". In that case, it's undefined

[15:02:02.0000] <Lachy>
because in JS, not passing a parameter === undefined

[15:02:03.0000] <Lachy>
At least, that's how I understand it

[15:02:04.0000] <zcorpan>
gsnedders: placeholder box

[15:03:00.0000] <annevk>
zcorpan, nice

[15:03:01.0000] <JohnResig>
Lachy: well, no - since when doing fn( undefined ) you have one argument whose value is undefined, doing fn() you have no arguments

[15:03:02.0000] <gsnedders>
Lachy: (FWIW, your local copy of the spec-gen will become quickly outdated with how much I've been doing over the holidays)

[15:03:03.0000] <gsnedders>
Regardless, g'nite y'all

[15:03:04.0000] <JohnResig>
function fn(){ alert(arguments.length); } to test

[15:03:05.0000] <annevk>
(and also bad, but it's also nice as it's sort of consistent)

[15:03:06.0000] <Lachy>
oh, I see.

[15:03:07.0000] <Lachy>
ok, I'll fix that, because it was my intention to cover missing arguements too

[15:04:00.0000] <Lachy>
the intention is for: missing argument == undefined == null == "" for the selectors argument

[15:04:01.0000] <JohnResig>
ok, sure

[15:06:00.0000] <Hixie>
Lachy: i don't think the child nodes of a DocumentFragment node should match ":context > *" (especially since they presumably would not match "* > *")

[15:07:00.0000] <zcorpan>
http://doctype.googlecode.com/svn/trunk/tests/html/elements/plaintext-element-applies-style-test.html

[15:07:01.0000] <annevk>
Hixie, my main postMessage concern is with IE, Opera, and Safari, which afaik haven't shipped an impl yet

[15:07:02.0000] <annevk>
of v1

[15:07:03.0000] <annevk>
but plan to do so soonish

[15:08:00.0000] <Lachy>
Hixie, send mail

[15:08:01.0000] <Hixie>
annevk: so?

[15:08:02.0000] <Hixie>
Lachy: k

[15:08:03.0000] <Hixie>
Lachy: www-style?

[15:08:04.0000] <Lachy>
Hixie, I added DocumentFragment back in based on earlier feedback from JohnResig

[15:08:05.0000] <annevk>
Hixie, depending on how you write down the new stuff, it might be harder to figure out what we have to implement

[15:08:06.0000] <Lachy>
but I left Entity and EntityReference out based on your earlier feedback

[15:08:07.0000] <Lachy>
Hixie, yeah, www-style will do

[15:09:00.0000] <Hixie>
sent

[15:09:01.0000] <Hixie>
annevk: yeah, i'll be careful

[15:09:02.0000] <annevk>
Hixie, I'm mainly concerned with IE pulling the implementation because they think the feature is instable

[15:10:00.0000] <annevk>
ok, we'll see how it goes

[15:10:01.0000] <Hixie>
yeah, that's a valid concern

[15:11:00.0000] <Hixie>
i'll make it clearly separate

[15:12:00.0000] <annevk>
chaals: "A. Naturally, we have a complete implementation of the final version of HTML 5..."

[15:12:01.0000] <annevk>
typical

[15:12:02.0000] <annevk>
-- http://www.w3.org/QA/2008/07/interview_charles_mccathienevi.html

[15:12:03.0000] <Hixie>
heycam`: yt?

[15:14:00.0000] <annevk>
two questions about XForms

[15:14:01.0000] <Lachy>
JohnResig, maybe treating missing arguments as undefined isn't really great behaviour.  What are the other possibilities for handling it?

[15:15:00.0000] <Lachy>
how are missing args handled in other cases where they're required?

[15:17:00.0000] <Lachy>
oh, querySelector("xxx", {}); should probably throw a TYPE_MISMATCH_ERR

[15:23:00.0000] <Lachy>
JohnResig, I commented on the bug

[15:23:01.0000] <JohnResig>
Lachy: great, thanks

[15:24:00.0000] <annevk>
where's gsnedders?

[15:25:00.0000] <annevk>
gsnedders, if you read this, another feature request: no xref from within <hx>

[15:27:00.0000] <jgraham>
/me thinks gsnedders needs bugzilla.gsnedders.com

[15:27:01.0000] <jgraham>
(other bug tracking software is avaliable)

[15:27:02.0000] <tusho>
bugzilla, eurgh

[15:28:00.0000] <annevk>
jgraham, he just needs to read the logs :p

[15:29:00.0000] <jgraham>
Yeah and keep track of all the bugs, which have been coming in pretty fast today

[15:46:00.0000] <Lachy>
does anyone know what Andrew is trying to say here? http://lists.w3.org/Archives/Public/www-style/2008Jul/0196.html

[15:47:00.0000] <Lachy>
I can't comprehend his selectChild() and selectParent() examples.

[15:47:01.0000] <Hixie>
i never have any idea what that guy is talking about

[15:47:02.0000] <Hixie>
i mean, never

[15:47:03.0000] <Hixie>
i've tried many a time

[15:47:04.0000] <Lachy>
I know, I never have either.

[15:47:05.0000] <JohnResig>
Lachy: he wants to overload :root to mean :root or :context

[15:47:06.0000] <Lachy>
yeah, I get that. Obviously, we can't do that. Besides, that was discussed in the webapi wg and rejected earlier.

[16:33:00.0000] <heycam>
Hixie, here now

[16:34:00.0000] <othermaciej>
Lachy: why :context instead of :scope?

[16:34:01.0000] <othermaciej>
(I asked by email too)

[16:42:00.0000] <weinig>
JohnResig: hey, it would really helpful if there was someway to figure out what each individual failure was testing specifically

[16:43:00.0000] <weinig>
JohnResig: I am not sure what things like FAIL: Fragment: childhood selector

[16:43:01.0000] <weinig>
JohnResig: means

[16:43:02.0000] <JohnResig>
weinig: hmm - I wonder if I could do a stack trace or something

[16:44:00.0000] <weinig>
JohnResig: I was thinking more just what the actual call to querySelector or querySelectorAll was being passed

[16:44:01.0000] <weinig>
JohnResig: the specific string

[16:45:00.0000] <JohnResig>
weinig: the pass/fail doesn't always associate with a direct query (most do) the one you cited, for example, is from a traversal through the document verifying the exact items that were matched were supposed to be matched

[16:45:01.0000] <weinig>
JohnResig: I see

[16:45:02.0000] <Lachy>
othermaciej, I thought it was a better name

[16:45:03.0000] <weinig>
JohnResig: perhaps that could be made more clear

[16:45:04.0000] <JohnResig>
weinig: if a test is ever testing a selector directly then it's shown in the test result in parentheses 

[16:46:00.0000] <weinig>
JohnResig: ah, I see that now

[16:46:01.0000] <Lachy>
othermaciej, I wouldn't mind changing it back to :scope, but I don't want this to become another naming debate either

[16:47:00.0000] <othermaciej>
Lachy: I liked :context better at first, but if we ever want to add a version of querySelector that prepends :scope/:context implicitly to each selector in the group (which I think we probably do, since it matches JS library semantics much better), queryScopedSelector would be a better name than queryContextualSelector

[16:47:01.0000] <othermaciej>
Lachy: other than that, don't care and was mostly curious

[16:50:00.0000] <Lachy>
othermaciej, I'm not yet convinced we need queryScopedSelector as well as this.

[16:50:01.0000] <othermaciej>
Lachy: I think there are two reasons we may still want it:

[16:51:00.0000] <othermaciej>
1) otherwise JS libraries have to do rewriting of their incoming selectors, which is both slower and more error-prone in JS code than in native code

[16:51:01.0000] <othermaciej>
2) without a way to access those syntax features directly, it becomes harder for authors to ever switch off the library wrappers to the native version, even once all browsers support it

[16:52:00.0000] <annevk>
unless libraries support two versions

[16:52:01.0000] <othermaciej>
libraries support two versions of what?

[16:52:02.0000] <annevk>
querySelector()

[16:52:03.0000] <annevk>
but i've no opinion on this so i  should shut up :)

[16:53:00.0000] <othermaciej>
I don't understand how libraries supporting two versions makes a difference to either of my points

[16:54:00.0000] <othermaciej>
I guess if libraries support a non-scoped version, they don't have to do rewriting for that one, but presumably they do not want to drop their old features entirely, and authors do not want to stop using them

[16:57:00.0000] <annevk>
my case was based on libraries offering two versions and authors switching to one that eventually allows them to just use querySelector

[16:57:01.0000] <annevk>
anyway, like I said, I should not discuss this

[16:59:00.0000] <othermaciej>
it seems like neither libraries nor authors want to do that


2008-07-11
[17:00:00.0000] <annevk>
it was a rather hypothetical point, indeed

[17:06:00.0000] <Lachy>
othermaciej, would it make sense to have both queryScopedSelector and :context?

[17:06:01.0000] <Lachy>
oh, well, for scoped stylesheets in HTML5, yes. But for selectors api?

[17:07:00.0000] <othermaciej>
Lachy: I think so

[17:07:01.0000] <Lachy>
ok, fair enough

[17:07:02.0000] <othermaciej>
Lachy: the pseudo-class lets you do things that implicit scoping wouldn't

[17:07:03.0000] <Lachy>
I'll take another look at the idea over the next few days

[17:07:04.0000] <Lachy>
right

[17:07:05.0000] <othermaciej>
but implicit scoping is convenient and has evolved as a de facto standard in JS libraries

[17:08:00.0000] <othermaciej>
I think we should go along with it instead of fighting it, so long as the semantics can be defined soundly

[17:08:01.0000] <Lachy>
ok, fair enough. I"ll talk to our developers about whether or not its implementable

[17:08:02.0000] <othermaciej>
a while back I sent a fairly simple algorithm that could be used to translate a scoped selector to a selector using :scope/:context

[17:08:03.0000] <othermaciej>
to public-webapi

[17:09:00.0000] <Lachy>
and then there was that issue of effectively redefining the grammar of selectors, which would probably result in some complaints from the CSSWG

[17:09:01.0000] <othermaciej>
1. Initialize nesting level to 0

[17:09:02.0000] <othermaciej>
2. Initialize the output string to the empty string

[17:09:03.0000] <othermaciej>
3. While characters in the input string remain:

[17:09:04.0000] <othermaciej>
   3.a. read the current character

[17:09:05.0000] <othermaciej>
   3.b. if the current character is:

[17:09:06.0000] <othermaciej>
      ",": if the nesting level is 0, append ", :scope " to the output string

[17:09:07.0000] <othermaciej>
      "(": increase the nesting level by 1, and append "(" to the output string

[17:09:08.0000] <Lachy>
yeah, I remember that.

[17:09:09.0000] <othermaciej>
      ")": decrease the nesting level by 1, and append ")" to the output string

[17:09:10.0000] <othermaciej>
      anything else: append the current character to the output string

[17:09:11.0000] <Lachy>
oh, where is that mail?

[17:09:12.0000] <othermaciej>
    3.c. advance to the next character

[17:09:13.0000] <othermaciej>
4. return the output string

[17:09:14.0000] <Lachy>
I was looking for it

[17:09:15.0000] <othermaciej>
(sorry for the large paste)

[17:09:16.0000] <othermaciej>
it's in the public-webapi archives

[17:09:17.0000] <annevk>
SVG in HTML: http://www.w3.org/2008/07/10-svg-minutes.html#action02

[17:09:18.0000] <Lachy>
do you have a link handy

[17:10:00.0000] <othermaciej>
it doesn't redefine the grammar of selectors, just defines a new syntax for the related notion of scoped/contextual selector

[17:10:01.0000] <Lachy>
found it http://lists.w3.org/Archives/Public/public-webapi/2008May/0058.html

[17:10:02.0000] <annevk>
I'd suggest postponing that to Selectors API Level 2

[17:11:00.0000] <Lachy>
yeah, that might be sensibe

[17:11:01.0000] <Lachy>
othermaciej, is there any reason to rush it through in v1?

[17:11:02.0000] <othermaciej>
http://lists.w3.org/Archives/Public/public-webapi/2008May/0058.html

[17:11:03.0000] <annevk>
unless :context is somehow fast tracked

[17:11:04.0000] <othermaciej>
Lachy: I don't think it is essential for v1

[17:11:05.0000] <Lachy>
ok, good.

[17:11:06.0000] <othermaciej>
just seems like a good idea in general

[17:12:00.0000] <Lachy>
I'll write up a draft for v2 with it included and put it in CVS later

[17:12:01.0000] <othermaciej>
however, I do think <style scoped> + queryScopedSelector would lean towards the pseudo-class being :scope instead of :context

[17:12:02.0000] <othermaciej>
for consistency

[17:12:03.0000] <Lachy>
also have to add other requested features like NodeList.querySelector

[17:13:00.0000] <Lachy>
but first, I have to deal with those pesky NSResolver issues

[17:13:01.0000] <Lachy>
unfortunately, I didn't have tim to look at replacing it with one of the other proposals now, and since Mozilla has started implementing it, it's a bit late to turn back now :-(

[17:14:00.0000] <Lachy>
s/tim/time/

[17:14:01.0000] <othermaciej>
Mozilla's implementation hasn't shipped yet

[17:14:02.0000] <othermaciej>
so I guess lack of your time would be the only problem

[17:14:03.0000] <othermaciej>
(afaik Mozilla's implementation has not even been checked in yet)

[17:15:00.0000] <Lachy>
yeah, and I'm pretty sure I can resolve the issues with the function approach anyway. Besides, they need to be solved for NSResolvers used elsewhere, so they may as well be solved here and adopted into the other places too

[17:16:00.0000] <Lachy>
since the other specs with NSResolvers leave a lot of this largely undefined

[17:16:01.0000] <othermaciej>
my problem with the function approach isn't really that it can do random things, but just that it is a bad idea in the first place to use a function instead of a data structure to represent namespace prefix mappings

[17:17:00.0000] <othermaciej>
requiring resolution of all prefixes in the selector up front should be enough to make behavior interoperable

[17:17:01.0000] <othermaciej>
I think the only reason we are using NSResolver is because XPath did, which doesn't seem like a particularly good reason to me

[17:18:00.0000] <Lachy>
yeah, that's a possibility

[17:19:00.0000] <Lachy>
how about I draft up the spec to replace it tomorrow and let the WG decide if we want to keep it as is, or adopt the newer approach.

[17:19:01.0000] <Lachy>
With a concrete proposal, it might make the decision process a lot easier

[17:19:02.0000] <Lachy>
since so far we've been arguing about what we've already spent a great deal of time on and is already quite mature, and something that isn't even specced yet

[17:20:00.0000] <Lachy>
It would have been easier if Mozilla had decided to ship without NSResolver support though, which is what I had hoped when I defined it to be optinal

[17:21:00.0000] <roc>
we haven't shipped anything so i don't see what the problem is

[17:22:00.0000] <Lachy>
the problem is that time is being spent implementing and testing a feature which could be dropped

[17:22:01.0000] <Lachy>
so I'd better hurry up and make a decision to not too much time is wasted

[17:22:02.0000] <Lachy>
but in any case, the implementation experience could help make the decision easier I guess

[17:22:03.0000] <roc>
I'm not sure if Boris has implemented the NSResolver stuff, but the whole thing only took him a week or less so not much effort has been wasted at worst

[17:22:04.0000] <roc>
on our side

[17:22:05.0000] <Lachy>
he started on it a couple of days ago

[17:23:00.0000] <Lachy>
they're already discussing issues with in in bugzilla

[17:23:01.0000] <roc>
er ok :-)

[17:23:02.0000] <Hixie>
othermaciej: your convertor fails on \escapes

[17:24:00.0000] <annevk>
introducing the second argument to querySelector was a mistake

[17:24:01.0000] <othermaciej>
Hixie: good point - should be patchable

[17:24:02.0000] <Lachy>
I think the best alternative solution was to make it a DOMString like "#default=http://www.w3.org/1999/xhtml svg=http://www.w3.org/2000/svg" or something like that

[17:24:03.0000] <othermaciej>
Hixie: given how unrelated it is to normal parsing, I should probably try to write a proof that it will DTRT for all selector syntax

[17:24:04.0000] <annevk>
my apologies and 10.000 dollar (monopoly currency) to Ian Hickson for saying that from the beginning

[17:25:00.0000] <othermaciej>
should be easy to do inductively and should catch any other errors

[17:26:00.0000] <annevk>
as from a use case point of view namespace support is not at all needed at this point

[17:27:00.0000] <annevk>
even for SVG and MathML it would work fine without it

[17:35:00.0000] <Hixie>
othermaciej: (doesn't handle strings, either)

[17:36:00.0000] <othermaciej>
Hixie: acknowledged

[17:42:00.0000] <annevk>
/me -> bed

[17:43:00.0000] <Lachy>
grr. Why is it that I can't get a straight answer to my question about what Boris wants the spec to say? https://bugzilla.mozilla.org/show_bug.cgi?id=416317#c31

[17:46:00.0000] <Hixie>
isn't he just saying "leave it up to webidl"?

[17:54:00.0000] <Lachy>
yeah, maybe. I posted another comment saying that

[17:57:00.0000] <Lachy>
ok, it seems :context for DocumentFragments isn't getting much support. Unless there are really convincing use cases for it, I'm going to drop it. But even if there are, there's probably better solutions.

[20:50:00.0000] <weinig>
JohnResig: ping

[20:53:00.0000] <weinig>
JohnResig: I am curious about verifyResolve method in your selectors test

[20:54:00.0000] <weinig>
JohnResig: I am getting a failure because null is being passed to it, but my reading of spec says that null should be passed to the resolver to get the default namespace

[03:59:00.0000] <hendry>
/me wonders if those messaging edits would help me in my "i want to tail logs via a web browser" use case

[06:43:00.0000] <JohnResig>
Lachy: the webkit guys are saying that in order to get the default namespace null has to be passed in to the namespace resolver - however in the examples in the spec it shows "" as representing the default namespace (and Opera does "" as well)

[06:45:00.0000] <annevk>
http://dev.w3.org/2006/webapi/selectors-api/#nsresolver says null...

[06:46:00.0000] <JohnResig>
annevk: so I think Opera's implementation is probably in the wrong here

[06:46:01.0000] <JohnResig>
annevk: we have gems like this, as well: ""    :"http://www.w3.org/1999/xhtml", // Default namespace

[06:46:02.0000] <JohnResig>
which is, apparently, completely wrong

[06:46:03.0000] <annevk>
can you do { null : "..." } ?

[06:46:04.0000] <annevk>
if not, changing to the empty string might make sense

[06:47:00.0000] <JohnResig>
null gets converted into a string representation of "null" (which means that you can no longer have a namespace named null)

[06:47:01.0000] <JohnResig>
yeah, that's why empty string made sense - since you can't have an empty namespace to begin with

[06:47:02.0000] <annevk>
you're confusing prefix and namespace

[06:47:03.0000] <annevk>
i agree that the empty string makes sense though

[06:50:00.0000] <Lachy>
oh dear.

[06:51:00.0000] <Lachy>
there was a reason this was changed.  I believe it was because Node.lookupNamespaceResolver or maybe the XPath NSResolver expected null to be passed.

[06:51:01.0000] <annevk>
XPath doesn't do default namespace

[06:52:00.0000] <Lachy>
ok, it must have been the Node one then

[06:52:01.0000] <annevk>
why are we keeping NSResolver around again? :)

[06:53:00.0000] <Lachy>
annevk, I don't know :-)

[06:53:01.0000] <annevk>
yeah: http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespaceURI

[06:54:00.0000] <JohnResig>
ok, that seems pretty conclusive, then

[06:54:01.0000] <JohnResig>
I'll change the test suite

[06:55:00.0000] <Lachy>
well, not entirely. It sucks for authors.

[06:56:00.0000] <JohnResig>
which authors?

[06:56:01.0000] <annevk>
we don't depend on lookupNamespaceURI so it makes no sense to be compatible with it

[06:56:02.0000] <annevk>
imo

[06:56:03.0000] <JohnResig>
oh

[06:58:00.0000] <annevk>
doing obj = { "" : "...", "prefix1" : "..." }; return obj[prefix] is much more convenient than if(prefix == null) { ... } else { return obj[prefix] }

[06:58:01.0000] <Lachy>
JohnResig, not being able to use the simple hash that I used in the example sucks for authors

[06:59:00.0000] <JohnResig>
ok! so yeah, I'm changing the test suite, then

[06:59:01.0000] <annevk>
though namespaces suck anyway and are hardly relevant for any use case I can imagine for this API, so it doesn't matter

[06:59:02.0000] <Lachy>
ok, fair enough

[06:59:03.0000] <Lachy>
maybe I really should focus on looking at the alternative proposals

[07:00:00.0000] <krijnh>
JohnResig: how is your new JS selector engine going?

[07:00:01.0000] <JohnResig>
krijnh: going good - haven't had time to work on it in a while

[07:01:00.0000] <krijnh>
I got ignored on jquery-dev, when asking about it :)

[07:02:00.0000] <JohnResig>
krijnh: I haven't announced it publicly

[07:04:00.0000] <krijnh>
Hmm, I thought I read about it somewhere

[07:04:01.0000] <JohnResig>
krijnh: were you at Kings of Code

[07:04:02.0000] <krijnh>
Yeah, I was, but apart from that

[07:05:00.0000] <krijnh>
I was the one not doing any talking :)

[07:18:00.0000] <Lachy>
JohnResig, regarding the queryScopedSelector idea, which would be able to accept combinator rooted queries like ">em, >strong", could you provide me with details sometime (via email) about how exactly JQuery goes about parsing them?

[07:18:01.0000] <Lachy>
if we're going to consider adding that to selectors api v2, it would be useful to know so we could ensure proper compatibility

[07:18:02.0000] <JohnResig>
ok!

[07:19:00.0000] <Lachy>
also, any experience you have with implementing :context and prepending that to queries that you will eventually pass to querySelector(); would help too

[07:20:00.0000] <Lachy>
do you want me to send you a mail about that, or will you just remember to do it? There's not rush though.

[07:20:01.0000] <JohnResig>
Lachy: feel free to pass me an email

[07:20:02.0000] <Lachy>
ok, I will do later

[08:01:00.0000] <takkaria>
hmm, html5lib has an odd test

[08:01:01.0000] <takkaria>
well, I think it has a wrong one anyway

[08:02:00.0000] <annevk>
patches accepted

[08:02:01.0000] <takkaria>
I'm just checking I'm right against the spec

[08:20:00.0000] <annevk>
I gave in and made a bugzilla account

[08:29:00.0000] <Lachy>
annevk, wow.

[08:29:01.0000] <Lachy>
what made you change your mind?

[08:30:00.0000] <annevk>
All the extra e-mail I will get

[08:46:00.0000] <codedread>
does anyone have any good reference docs on mousewheel handling cross-browser?

[08:48:00.0000] <codedread>
(obviously i'm talking about current support, not future perfect support of onmousewheel)

[08:48:01.0000] <annevk>
I don't think there's much documentation on such things

[08:49:00.0000] <codedread>
grumble

[08:49:01.0000] <codedread>
google does it cross-browser for google maps, so it must be in doctype right?  right? :)

[08:57:00.0000] <takkaria>
jgraham: does the html5lib parse tree viewer use an up-to-date version of html5lib?

[09:04:00.0000] <jgraham>
takkaria: I think it's relatively up to date. It has the svn rev at the botom of the viewer page

[09:04:01.0000] <takkaria>
jgraham: ah, thanks

[09:21:00.0000] <JohnResig>
Lachy: I changed the suite to use null as the way to get the default prefix, made it so that doing querySelectorAll() (no arguments) only requires that an exception be thrown - not a particular one, I added some more default namespace tests, and added tests for disconnected DOM trees. Up to about 4200 tests now.

[09:42:00.0000] <tusho>
So using html5lib with Ruby, I want to do things with all tags h1-h6.

[09:42:01.0000] <tusho>
Preferably with the hpricot interface.

[09:42:02.0000] <tusho>
What's the simplest way?

[09:48:00.0000] <Lachy>
JohnResig_, yeah, I just saw your bugzilla comment about it. That's awesome

[09:49:00.0000] <weinig>
JohnResig_: thanks for fixing the test

[09:49:01.0000] <JohnResig_>
Lachy: it sounds like we're getting closer on our implementation - as is WebKit

[09:49:02.0000] <JohnResig_>
weinig: no problem, thanks for letting me know

[09:49:03.0000] <weinig>
np

[09:49:04.0000] <JohnResig_>
weinig: let me know if you spot any other weirdness/need help with test explanations

[09:49:05.0000] <weinig>
JohnResig_: will do

[09:53:00.0000] <Lachy>
wow, I think Bert Bos totally misunderstood the :context proposal http://lists.w3.org/Archives/Public/www-style/2008Jul/0214.html

[09:53:01.0000] <Lachy>
or at least the use cases it's trying to address

[09:53:02.0000] <weinig>
JohnResig_: I think I see one other issue

[09:53:03.0000] <weinig>
JohnResig_: xHTML|*#root3 xHTML|div svg *|circle is supposed to match circle1 as well

[09:54:00.0000] <weinig>
JohnResig_: since there is no default namespace provided by the resolver

[09:55:00.0000] <JohnResig_>
so you're saying that when no default namespace is provided "svg" becomes equivalent to "*|svg"

[09:55:01.0000] <JohnResig_>
sorry - when a resolver is provided - and no default namespace is given (returns null, undefined, etc.)

[09:55:02.0000] <tusho>
:\

[09:56:00.0000] <weinig>
JohnResig_: yes

[09:56:01.0000] <jgraham>
tusho: Once you have a hpricot tree it should just work however hpricot normally works

[09:56:02.0000] <weinig>
/me checks the spec :)

[09:56:03.0000] <JohnResig_>
/me does the same

[09:56:04.0000] <tusho>
jgraham: But I _can't get an hpricot tree_.

[09:56:05.0000] <tusho>
It gives me an array of Hpricot element objects.

[09:56:06.0000] <tusho>
That's not useful for just about anything.

[09:56:07.0000] <JohnResig_>
Lachy: thoughts on the above?

[09:57:00.0000] <jgraham>
Oh yeah I remeber now :)

[09:57:01.0000] <weinig>
To get the default namespace, if there was an NSResolver object provided, implementations must invoke the lookupNamespaceURI() method with null as the argument. If there is no NSResolver object provided, or if the method returns null, then there is no default namespace. Otherwise, the return value is the default namespace.

[09:57:02.0000] <weinig>
this is the case of the method returning null

[09:57:03.0000] <jgraham>
tusho: Er, well you want to talk to a ruby type really like kingryan 

[09:57:04.0000] <JohnResig_>
interesting

[09:58:00.0000] <tusho>
jgraham: Well, I just asked to see if anyone knew :)

[09:58:01.0000] <weinig>
JohnResig_: since the method is actually returing undefined

[09:58:02.0000] <weinig>
JohnResig_: you have to take into account this sentance

[09:58:03.0000] <weinig>
"While resolving either a prefix or the default namespace, if the lookupNamespaceURI() method returns undefined or an empty string, the implementation must act as if null had been returned"

[09:58:04.0000] <JohnResig_>
so in all cases "svg" is equivalent to "*|svg" iff a resolver is provided that actually gives a default namespace response

[09:58:05.0000] <Lachy>
JohnResig_, yeah, "svg" is the same as "*|svg" when there is no default namespace

[09:58:06.0000] <JohnResig_>
ok! time to change some tests

[09:59:00.0000] <weinig>
reloads :D

[09:59:01.0000] <JohnResig_>
heh - eww... this will be tricky, considering that some tests will have different output

[09:59:02.0000] <JohnResig_>
ok, won't be a simple tweak

[10:01:00.0000] <JohnResig>
weinig: ok, it seems like t( "SVG", "xHTML|div svg *|circle", ["circle2","circle3"] ); is the only test that will be affected

[10:02:00.0000] <weinig>
JohnResig: yes

[10:05:00.0000] <tusho>
:\

[10:12:00.0000] <jgraham>
tusho: Well sadly the best I can offer is a pointer in the direction of the code: http://code.google.com/p/html5lib/source/browse/trunk/ruby/lib/html5/treebuilders/hpricot.rb#220 is the line that gets called to get the object to return from .parse

[10:12:01.0000] <tusho>
ah, thanks

[10:13:00.0000] <tusho>
Beh, it does seem to use the hpricot element stuff.

[10:13:01.0000] <tusho>
Instead of the whole document.

[10:20:00.0000] <JohnResig>
weinig: ok - I think I've implemented it - it seems to be catching the right pass/fail in Opera, at least

[10:22:00.0000] <Lachy>
JohnResig, has anyone told Microsoft about your test suite? Did you get it to run in IE8?

[10:23:00.0000] <JohnResig>
Lachy: I can't get it to run in IE8 because it's served with the correct mimetype - it just tries to download it

[10:23:01.0000] <jgraham>
tusho: patches welcome I guess

[10:23:02.0000] <tusho>
indeed

[10:23:03.0000] <Lachy>
oh, ok.

[10:23:04.0000] <jgraham>
/me doesn't want to take reposnsibility if you break other people using ruby + hpricot

[10:23:05.0000] <Lachy>
Can you make an HTML only version without the namespace stuff for them to test with?

[10:24:00.0000] <Lachy>
and with additional tests to make sure they throw a NOT_SUPPORTED_ERR when an nsresolver is provided

[10:24:01.0000] <JohnResig>
have they said that that's what they're going to do?

[10:24:02.0000] <Lachy>
yes

[10:24:03.0000] <jgraham>
tusho: If you have an incompatible chnage to make I suggest you post to the mailing list first. If you have a compatible change I can check it in

[10:25:00.0000] <tusho>
it'd be quite complex to change jgraham 

[10:25:01.0000] <jgraham>
(or give you commit access I guess)

[10:26:00.0000] <Lachy>
I don't think they support the namespace syntax either, so tests for "*|div" and "|div" will throw a SYNTAX_ERR, instead of automatically resolving even without an nsresolver

[10:26:01.0000] <JohnResig>
well, if they throw an exception, then it's a good bet that they'll fail all the tests that I provide

[10:26:02.0000] <Lachy>
sure, that's fine

[10:26:03.0000] <Lachy>
the spec actually requries full support for Selectors, so it's still a bug

[10:27:00.0000] <JohnResig>
yeah

[10:27:01.0000] <jgraham>
tusho: Well if you decide to pursue it let me kno and we'll work out a way to integrate the changes. The ruby port could really use some active maintainance :)

[10:27:02.0000] <tusho>
I will probably just serialize the tree after sanitization then run it through hpricot instead of combining it. :p

[10:27:03.0000] <tusho>
Ah, hacks!

[12:58:00.0000] <takkaria>
the SVG people weren't very clever with their tag naming

[12:58:01.0000] <takkaria>
"malignmark" sounds evil; why would I want that in my graphics?

[12:59:00.0000] <webben>
does sound like a hex doesn't it? ;)

[13:13:00.0000] <jgraham>
takkaria: How is your parser coming along? Is it close to usable yet?

[13:13:01.0000] <takkaria>
jgraham: I'm one test away from passing the html5lib tests

[13:14:00.0000] <takkaria>
so, probably fairly usable :)

[13:15:00.0000] <takkaria>
I'm currently fighting with scoping and the commented-out bits in the spec that deal with SVG

[13:18:00.0000] <jgraham>
cool 

[13:18:01.0000] <jgraham>
I will have to take a look

[13:18:02.0000] <jgraham>
/me should find some time to work on html5lib as well

[13:19:00.0000] <takkaria>
I quite fancy doing some work on html5lib to learn python

[13:19:01.0000] <takkaria>
since I know html5-parsing fairly well know

[13:40:00.0000] <takkaria>
actually, the C html parser I've been working on is now passing all tests

[13:40:01.0000] <jgraham>
takkaria: Nice. Now if only I could get it to find libiconv :(

[13:44:00.0000] <takkaria>
jgraham: what OS are you using?

[13:44:01.0000] <jgraham>
OSX

[13:44:02.0000] <jgraham>
takkaria: Although I could probably find a linux box if that is likely to be easier

[13:44:03.0000] <jgraham>
s/find/log on to/

[13:45:00.0000] <takkaria>
linux would be much easier, I think

[13:45:01.0000] <takkaria>
jmb (the other developer) has OS X, but I don't know what hoops he jumps through to compile

[13:46:00.0000] <takkaria>
I think tomorrow I'll take a break from coding and write up API docs

[13:48:00.0000] <jmb>
jgraham: depends where the problem is. if it's the test harnesses, then add -liconv to the LDFLAGS in test/Makefile

[13:50:00.0000] <jgraham>
jmb: Thanks, that helped a bit (I had added it in the wrong place apparently) now I get a different error :)

[13:51:00.0000] <jmb>
jgraham: feel free to pastebin it or somesuch :)

[13:53:00.0000] <jgraham>
jmb: http://pastebin.ca/1069420 (maybe I have an old version of the source? I used the "download tarball" link on the repo browser)

[13:54:00.0000] <jmb>
jgraham: aha. you'll need the json-c in trunk/json-c/json-c, too

[13:54:01.0000] <Philip`>
gsnedders: http://en.wikipedia.org/wiki/ISO_2145 is what I was thinking of

[13:54:02.0000] <jmb>
jgraham: there's a couple of patches we need to feed upstream (e.g. handling of \0 in input)

[13:56:00.0000] <takkaria>
jmb: have you emailed the fella about that?  if not, might be worth setting up a google code project for it or something

[13:56:01.0000] <jgraham>
jmb: I put json-c 0.7 in json/json-c-0.7/ (and installed it) do I need to do something else, like change the directory names?

[13:56:02.0000] <jmb>
takkaria: no, I haven't. two reasons: a) laziness b) lack of response to the last set of patches I sent

[13:56:03.0000] <jgraham>
(and I applied the patches)

[13:58:00.0000] <takkaria>
jgraham: apply this patch too: http://source.netsurf-browser.org/trunk/json-c/json-c/json_object.c?r1=4383&r2=4385&view=patch

[13:58:01.0000] <takkaria>
actually, don't, that's just for one file

[13:58:02.0000] <jmb>
jgraham: the readme in hubbub/json is out of date. I need to fix that. please accept my apologies. if you build the version at svn://source.netsurf-browser.org/trunk/json-c/json-c, then you should have the stuff it needs

[13:59:00.0000] <jmb>
s/build/build and install/

[14:04:00.0000] <jgraham>
jmb: That worked :)

[14:04:01.0000] <jmb>
jgraham: cool :)

[14:04:02.0000] <takkaria>
it's a shame the parser tests format doesn't have any comment syntax, it would help

[14:05:00.0000] <jgraham>
takkaria: Yeah. If hsivonen was here I would propose that we add one

[14:05:01.0000] <jmb>
/me runs off to find food

[14:05:02.0000] <takkaria>
jgraham: I'll send mail to whatwg-imps

[15:32:00.0000] <jgraham>
How is it that pretty much every single scientific journal I have used manages to create such an awful user experience for citations

[15:32:01.0000] <webben>
jgraham: talking about deadtree or online?

[15:33:00.0000] <jgraham>
webben: Journals that are primarilly deadtree but also have html versions

[15:33:01.0000] <webben>
lack of dedicated markup and UI I guess.

[15:33:02.0000] <jgraham>
(or primarilly PDF I guess)

[15:34:00.0000] <webben>
does Zotero help?

[15:34:01.0000] <jgraham>
webben: Given how bad they are at using the <a> element I don't see that more markup would improve the situation

[15:34:02.0000] <jgraham>
What is Zotero?

[15:34:03.0000] <webben>
http://www.zotero.org/

[15:37:00.0000] <jgraham>
Yeah, that looks like it might be useful. Really I don't have complex needs; all I want is that when I come across an interesting-looking reference in an article I can get to the referenced article without having to search for it manually and/or have multiple popup windows, and without losing my place in the original article

[15:37:01.0000] <webben>
sure

[15:38:00.0000] <webben>
but browsers don't seem to have competed on the basis of what's useful for scholars.

[15:38:01.0000] <Philip`>
Browsers should have a 'back within current document' button, so you can scroll to the end and then jump back to where you were

[15:38:02.0000] <Philip`>
(It's pretty useful in KPDF)

[15:38:03.0000] <jgraham>
webben: I don't doubt that the browser could be better but the sites themselves are so so poor

[15:39:00.0000] <webben>
jgraham: Oh no disagreement. i've seen journal markup. it's dreadful.

[15:39:01.0000] <webben>
but it's also inconsistent from one journal to another, and dedicated markup /might/ have helped with that.

[15:41:00.0000] <webben>
Philip`: You mean rather than inserting fragments in the same history as pages?

[15:42:00.0000] <jgraham>
webben: Yeah, but even with what they have. I mean Wiley Interscience (which Monthly Notices of the Royal Astronomical Society just moved to) doesn't seem to have a link to the cited article _at all_

[15:42:01.0000] <webben>
(Your typical modern Back button does let you jump back from fragments; it just doesn't let you jump back with one click to a previous page.)

[15:42:02.0000] <Philip`>
webben: I mean something like how browsers currently insert same-page fragments into the history, except for manual scrolling of the page (e.g. dragging the scrollbar or hitting the 'end' key) instead of clicking fragment links

[15:42:03.0000] <webben>
jgraham: has it got anything? like a doi?

[15:43:00.0000] <webben>
Philip`: I see what you mean. Interesting idea.

[15:44:00.0000] <webben>
a 'Step back to previous positions' button

[15:44:01.0000] <jgraham>
webben: Well it has the text and a link to something called SFX which doesn't seem to have anything in

[15:45:00.0000] <webben>
jgraham: http://www.exlibrisgroup.com/category/SFXOverview ... looks you need to have a library network with a SFX-based linking solution or something.

[15:45:01.0000] <webben>
jgraham: I guess the problem to be solved is dependent on your library, your route to an online version is different.

[15:45:02.0000] <webben>
(depending on whom your institution buys subscriptions from)

[15:46:00.0000] <Philip`>
Hixie: r1860 ("more typos") did what its commit message says and added more typos, particularly "insertUnrderedList"

[15:48:00.0000] <Hixie>
d'oh

[15:48:01.0000] <Hixie>
thanks

[15:48:02.0000] <jgraham>
webben: For astrophysics there is a NASA service called ADS which everyone uses for everything (it's smilar to PubMed I think). Anything else, especially anything that doesn't actually get me to the article, is not the right solution :)

[15:49:00.0000] <webben>
/me thinks doi works well.

[15:49:01.0000] <jgraham>
(the old MNRAS site linked to ADS in a way that was irritating in that it involved multiple popup windows but could be greasemonkied)

[15:50:00.0000] <webben>
well ... well enough

[15:50:01.0000] <jgraham>
webben: doi is just a numbering system right?

[15:50:02.0000] <webben>
jgraham: yeah, basically ; doi is a permanent digital object identifier ; 

[15:51:00.0000] <webben>
jgraham: but it's human legible (can copy and paste it, or /print/ it, or scribble it down) and you can use it as a link by linking to a resolver.

[15:52:00.0000] <webben>
http://dx.doi.org/

[15:52:01.0000] <webben>
or use a bookmarklet http://www.doi.org/resolver_button/doibutton.html

[15:55:00.0000] <jgraham>
webben: Right so the problem is that a) not all journals put the doi in text format (because it's not really any more human readable an an icq number for example) and b) copying and pasting is exactly what I'm trying to avoid. This is supposed to be hypertext and so the one thing I should be able to do is to link between resources

[15:55:01.0000] <webben>
jgraham: sure, every doi should be printed as a number and linked to a resolver

[15:56:00.0000] <webben>
ideally one would use the doi scheme I guess.

[15:57:00.0000] <webben>
doi:// whatever

[15:57:01.0000] <webben>
it's a question of whether it's more useful atm to just link to a resolver.

[15:59:00.0000] <webben>
jgraham: lots of tools can use them without copying/pasting: http://www.doi.org/tools.html

[16:00:00.0000] <jgraham>
webben: Well I can't imagine browsers ever supporting the doi scheme or researchers ever bothing to install extensions

[16:00:01.0000] <webben>
/me installed extensions as a student, so he easily can.

[16:02:00.0000] <webben>
also, if I was in the habit of patching browsers, it's probably a patch I'd submit.

[16:02:01.0000] <jgraham>
webben: Sure, I install extensions too. Indeed I even went so far as to write a custom extension for our research group and have it installed on all our systems But I can't see my supervisor installing an extension by himself

[16:03:00.0000] <webben>
that's old generation

[16:03:01.0000] <webben>
they don't get the interwebs

[16:03:02.0000] <webben>
hence ... failsome journal markup

[16:03:03.0000] <roc>
why wouldn't researchers install extensions?

[16:03:04.0000] <webben>
https://bugzilla.mozilla.org/show_bug.cgi?id=226648

[16:04:00.0000] <roc>
university IT departments could preinstall them anyway

[16:04:01.0000] <webben>
(open bug to support DOI)

[16:04:02.0000] <jgraham>
roc: Because most of them are not power users

[16:04:03.0000] <roc>
ok

[16:04:04.0000] <roc>
but honestly extensions aren't just for power users anymore

[16:05:00.0000] <webben>
i think the researchers of the future are inevitably "power users" compared to the current generation

[16:05:01.0000] <jgraham>
The problem in this case is chicken/egg. Journals don't use doi:// links because no one could use them, no one bothers to install stuff to make them usable because they're not widely used

[16:05:02.0000] <webben>
jgraham: "journals don't use" ... actually lots do, from what I've seen. There may well be disciplinary gaps however.

[16:06:00.0000] <webben>
I found out about doi precisely because journals I was reading did use em

[16:06:01.0000] <annevk>
Hixie, postMessage v2 design looks good so far

[16:06:02.0000] <webben>
e.g. nature uses doi iirc

[16:06:03.0000] <jgraham>
roc: I'm not sure. Of the people in my office only the "power users" have extensions

[16:06:04.0000] <annevk>
Hixie, it addresses my concerns, anyway

[16:06:05.0000] <Hixie>
annevk: i haven't done anything yet :-)

[16:07:00.0000] <webben>
http://www.nature.com/bjc/journal/v99/n1/full/6604432a.html

[16:07:01.0000] <annevk>
Hixie, you're going to use a new section for the postMessage v2 method :)

[16:07:02.0000] <annevk>
or at least, a separate algorithm

[16:07:03.0000] <Philip`>
gsnedders: http://krijnhoetmer.nl/irc-logs/whatwg/20080711#l-478

[16:07:04.0000] <Hixie>
i haven't worked out what to do with the postMessage(data, pipe, origin) case

[16:07:05.0000] <annevk>
oh ok

[16:07:06.0000] <Hixie>
but the Pipe stuff has its own section for sure

[16:08:00.0000] <Hixie>
i might just not specify postMessage(d,p,o) for a while

[16:08:01.0000] <Hixie>
until several postMessage()s ship, at least

[16:08:02.0000] <Hixie>
btw i changed eventsource a lot

[16:08:03.0000] <jgraham>
webben: That looks pretty good. Better than most journals I've encountered

[16:08:04.0000] <Hixie>
and websocket uses message now

[16:08:05.0000] <gsnedders>
Philip`: I guess I can do most of that

[16:09:00.0000] <webben>
jgraham: nature have a clue (not all the clues, but at least a clue ;) )

[16:09:01.0000] <Philip`>
gsnedders: (found via http://lists.w3.org/Archives/Public/www-html-editor/2005JulSep/0003.html )

[16:11:00.0000] <jgraham>
webben: The nature review article I want doesn't seem to have a HTML version at all (just PDF)

[16:11:01.0000] <gsnedders>
Now, do I bother keeping the pre-existing full-stop behaviour in w3c-compat?

[16:11:02.0000] <annevk>
Hixie, I noticed

[16:11:03.0000] <Hixie>
goo

[16:11:04.0000] <Hixie>
d

[16:11:05.0000] <annevk>
Hixie, though server sent events was already massively changed and we haven't updated yet

[16:11:06.0000] <jgraham>
and although it has the references online some are missing doi links and none have ADS links

[16:12:00.0000] <gsnedders>
Hixie, annevk, Lachy: thoughts on whether I should keep num as 1.2.4.5. in w3c-compat, or just always use 1.2.3.4.5 (per ISO 2145)?

[16:12:01.0000] <annevk>
I'm interested in other browsers showing some activity there first before taking a stab at it again

[16:12:02.0000] <gsnedders>
(i.e., do any of you care if that changes even in w3c-compat?)

[16:12:03.0000] <annevk>
(trying to get someone to update it, that is :) )

[16:12:04.0000] <Hixie>
gsnedders: no opinion, just do whatever is prettiest.

[16:13:00.0000] <Philip`>
zcorpan: 2d.imageData.get.smallest was replaced with 2d.imageData.get.tiny (since the aim was to test the smallest non-zero source-rectangle)

[16:13:01.0000] <Hixie>
gsnedders: though for w3c-compat it should follow the pubrules document

[16:13:02.0000] <Hixie>
annevk: understood

[16:13:03.0000] <annevk>
gsnedders, depending on the spec, w3c-compat might be 2., but 2.3

[16:13:04.0000] <annevk>
gsnedders, there's only a leading dot for the top level chapters

[16:13:05.0000] <gsnedders>
annevk: It's a dot after the final one for one level and for > 4 levels

[16:13:06.0000] <annevk>
I meant trailing

[16:14:00.0000] <gsnedders>
annevk: Once you get deep enough it comes back

[16:14:01.0000] <annevk>
I see

[16:14:02.0000] <gsnedders>
annevk: (see HTML 5)

[16:14:03.0000] <annevk>
ok

[16:14:04.0000] <Hixie>
that's fucked up

[16:14:05.0000] <annevk>
I don't think it matters though

[16:14:06.0000] <Lachy>
gsnedders, I'm not sure what exactly you're referring to?

[16:14:07.0000] <Hixie>
don't do that for non-w3c-compat :-)

[16:14:08.0000] <Philip`>
zcorpan: 2d.path.clip.unaffected should be using moveTo (thanks!)

[16:14:09.0000] <annevk>
pubrules doesn't require anything with regards to that

[16:14:10.0000] <gsnedders>
Hixie: Of course not — it breaks ISO 2145 anyway :P

[16:14:11.0000] <annevk>
(Bert actually changed the trailing dot stuff at some point)

[16:15:00.0000] <Hixie>
cool

[16:15:01.0000] <gsnedders>
ISO 2145:1978: Documentation -- Numbering of divisions and subdivisions in written documents

[16:15:02.0000] <gsnedders>
what a spec to have…

[16:16:00.0000] <Philip`>
Yours for only 34,00 CHF!

[16:16:01.0000] <Philip`>
s/34/36/

[16:17:00.0000] <gsnedders>
Far less than ISO 8601, to be fair

[16:17:01.0000] <gsnedders>
(that was > 200 CHF last I looked)

[16:17:02.0000] <Philip`>
126,00 now, apparently

[16:18:00.0000] <Philip`>
I wonder if they ever do BOGOF offers

[16:20:00.0000] <Lachy>
gsnedders, is the difference between the W3C numbering and ISO numbering only that the W3C includes the trailing full stop, and the ISO doesn't?

[16:20:01.0000] <gsnedders>
Lachy: yeah

[16:20:02.0000] <gsnedders>
Lachy: There is no W3C numbering per se — it's just what the CSS WG Postprocessor implements

[16:22:00.0000] <Lachy>
gsnedders, looking at the HTML5 spec, the use of the trailing . looks inconsistent

[16:23:00.0000] <gsnedders>
Lachy: there is a trailing full-stop character at the top level and at the fourth level and deeper

[16:23:01.0000] <gsnedders>
Lachy: That's the complexity of the rule

[16:23:02.0000] <Lachy>
yeah, why?

[16:23:03.0000] <gsnedders>
Lachy: Ask Bert Bos.

[16:23:04.0000] <Lachy>
that's silly. That's probably just a bug

[16:23:05.0000] <gsnedders>
It certainly changed quite noticeably. I highly doubt that.,

[16:23:06.0000] <gsnedders>
s/,//

[16:24:00.0000] <Lachy>
when did it change?

[16:25:00.0000] <gsnedders>
Earlier this year?

[16:25:01.0000] <gsnedders>
Hixie, you remember?

[16:25:02.0000] <Hixie>
hm?

[16:25:03.0000] <Lachy>
looks like WF2 has all trailing dots

[16:25:04.0000] <gsnedders>
Hixie: when trailing full-stop in num changed?

[16:25:05.0000] <Hixie>
i don't pay attention to dots

[16:26:00.0000] <gsnedders>
You commented on it at the time, IIRC

[16:26:01.0000] <Philip`>
I remember it changed, and made one diff unexpectedly huge

[16:26:02.0000] <Lachy>
gsnedders, I really don't think it matters that much. It has to be a bug. Bert probably just made a change to the script and somehow managed to omit them

[16:27:00.0000] <annevk>
I think it was intentional

[16:27:01.0000] <Lachy>
annevk, why would it be?

[16:27:02.0000] <annevk>
but it doesn't matter

[16:27:03.0000] <annevk>
ask Bert

[16:27:04.0000] <jgraham>
Is there a reason not to pick the sane behaviour and go with it until someone complains?

[16:28:00.0000] <Lachy>
no-one will complain. I never even noticed it before gsnedders asked about it

[16:28:01.0000] <annevk>
othermaciej++ for pushing for ECMA exit criteria

[16:29:00.0000] <annevk>
Lachy, and the world centers around you, uhuh

[16:29:01.0000] <annevk>
;)

[16:38:00.0000] <Philip`>
http://lists.whatwg.org/pipermail/commit-watchers-whatwg.org/2008/000397.html

[16:42:00.0000] <jgraham>
In case anyone was wondering which colour other people have paited the bikeshed, the LaTeX style I have to hand has no trailing dot

[16:42:01.0000] <jgraham>
painted

[16:44:00.0000] <othermaciej>
annevk: if you'd like to agree with me on the list feel free

[16:50:00.0000] <annevk>
done, though it seems one of the bigger players is already on board :)


2008-07-12
[18:09:00.0000] <kingryan>
has anyone else implemented the content-type sniffing in the spec?

[19:23:00.0000] <JohnResig>
weinig: hehe, my name is 'resig' ;) btw http://trac.webkit.org/changeset/35134 I updated the test suite a bunch this afternoon, might want to pull a fresh copy (fixing up some unresolved failures) let me know if you have any questions!

[19:24:00.0000] <weinig>
oh noes!

[19:24:01.0000] <weinig>
will fix

[19:24:02.0000] <weinig>
sorry!

[19:25:00.0000] <weinig>
JohnResig: I think "xHTML|*#root3 xHTML|div svg *|circle" is still incorrect

[19:25:01.0000] <weinig>
circle1 should be allowed

[19:26:00.0000] <JohnResig>
weinig: one sec, I chatted with boris about this

[19:26:01.0000] <weinig>
ok

[19:31:00.0000] <JohnResig>
weinig: it seems to make sense to me - I'm double-checking. The one case that I fixed in that test was where a default namespace was actually provided - in that case the result should be *just* "circle1"

[19:33:00.0000] <weinig>
JohnResig: sorry

[19:33:01.0000] <weinig>
JohnResig: you were saying?

[19:33:02.0000] <JohnResig>
weinig: it seems to make sense to me - I'm double-checking. The one case that I fixed in that test was where a default namespace was actually provided - in that case the result should be *just* "cir

[19:33:03.0000] <JohnResig>
oops

[19:34:00.0000] <JohnResig>
*just* circle1

[19:34:01.0000] <weinig>
why just circle1?

[19:34:02.0000] <weinig>
svg should be interpreted as *|svg in this case

[19:35:00.0000] <JohnResig>
since when a default namespace is provided (when the resolver returns "http://www.w3.org/1999/xhtml") it should limit it to that namespace - the other case, that the test also handles, is when the resolver returns undefined as the default namespace - in that case it should probably be "*|svg" - which is what I'm double-checking on right now.

[19:40:00.0000] <weinig>
JohnResig: no default namespace is provided though

[19:41:00.0000] <JohnResig>
weinig: "Good Namespace" resolvers 1, 3, 5, 7 return a default namespace if null is passed in

[19:42:00.0000] <weinig>
right, I think this was for number 2

[19:42:01.0000] <JohnResig>
correct - which is what I mentioned - that you and I think it should be equal to *|svg

[19:42:02.0000] <JohnResig>
and it's what I'm double-checking on now

[19:42:03.0000] <weinig>
I see

[19:43:00.0000] <JohnResig>
I had discussed it with bz earlier, I just wanted to verify our talk

[20:27:00.0000] <Hixie>
wtf is frank smoking

[20:44:00.0000] <weinig_>
JohnResig: receive verification? :) 

[21:24:00.0000] <Hixie>
why won't apple take my money, othermaciej

[21:24:01.0000] <Hixie>
/me has been trying to update his ipod for 2 days now

[21:27:00.0000] <jruderman>
wait, doesn't the update fix a bunch of security holes? they're making you pay for a security fix?

[21:28:00.0000] <jruderman>
i'm going by http://blog.washingtonpost.com/securityfix/2008/07/a_bakers_dozen_security_update.html

[21:38:00.0000] <Hixie>
the only part of the update i care about is the part that gives me a public key that i can use to verify signed software

[21:39:00.0000] <Hixie>
which i guess is a "security fix" in the same sense that being under house arrest is a "security fix" for the people in the house

[21:39:01.0000] <Hixie>
(this feature is being marketed as "app store")

[21:59:00.0000] <Hixie>
this has to be the most botched launch of the year

[22:21:00.0000] <Hixie>
oooh, it started downloading

[00:06:00.0000] <othermaciej>
Hixie: if you'd like to send your money direct to me instead I'd accept it

[00:07:00.0000] <Hixie>
hah

[00:08:00.0000] <Hixie>
do i also get the stuff i would get through the normal channels? :-)

[00:12:00.0000] <othermaciej>
oh, you want to get stuff for your money

[00:12:01.0000] <othermaciej>
how selfish

[00:46:00.0000] <Hixie>
holy crap

[00:46:01.0000] <Hixie>
undocumented unexpected bug fix in ipod touch 2.0 software

[00:47:00.0000] <Hixie>
unicode font that includes U+263A!

[00:53:00.0000] <Hixie>
/me wonders why safari doesn't support Link: headers with rel="icon"

[01:10:00.0000] <Hixie>
hey the music player also takes video now

[01:20:00.0000] <Hixie>
good god

[01:20:01.0000] <Hixie>
is frank for real?

[01:21:00.0000] <Hixie>
calling firefox "bastard browser from hell" is so not professional

[01:22:00.0000] <MikeSmith>
dude seems to be in a world of his own

[01:26:00.0000] <MikeSmith>
Hixie: I guess you reopened Bug 5830 because of latest mail from Philip Jägenstedt about cue ranges?

[01:44:00.0000] <MikeSmith>
hmm, this is weird. I'm trying to use html5lib to parse the HTML5 spec, read in from the web (instead of a local filesystem copy).  Sometimes it works, but sometimes it seems to get only part way through and then just quits -- without emitting any error.

[01:45:00.0000] <MikeSmith>
when it quits, I seem to end up with a truncated version of the source, which if I serialize it, looks like, e.g.:

[01:45:01.0000] <MikeSmith>
      </td><td> There is a <a href="#ltquerygt" title="url-query">&lt;query&gt;</a>

[01:45:02.0000] <MikeSmith>
       component, but it is empty. The question mark in the resulting value

[01:45:03.0000] <MikeSmith>
       is the prefix</td></tr></tbody></table></div></body></html>

[01:46:00.0000] <MikeSmith>
is there another python HTML parser I can use?

[01:46:01.0000] <Hixie>
the philip and david mails

[01:46:02.0000] <MikeSmith>
Hixie: I see

[02:27:00.0000] <jgraham>
MikeSmith: Can you report that as a bug please? I have an idea what the problem is but can't look right now

[02:36:00.0000] <jgraham>
(fwiw I suspect it works if you read the whole thing off the network up front)

[02:41:00.0000] <othermaciej>
Hixie: frank who?

[03:05:00.0000] <Lachy>
othermaciej, Frank Ellermann on public-html-comments http://lists.w3.org/Archives/Public/public-html-comments/2008Jul/0013.html

[03:08:00.0000] <Lachy>
othermaciej, I think I may have a better solution to the NSResolver issue.

[03:09:00.0000] <weinig>
JohnResig: you around?

[03:09:01.0000] <Lachy>
If I make it a DOMString that uses the @namespace syntax, then browsers can use their existing parsers from CSS, it shifts the case sensitivity issue from selectors api to css3-namespace, solves all the problems with the function approach and is relatively easy and familiar for authors already using namespaces in selectors

[03:10:00.0000] <Lachy>
weinig, what do you think about that?

[03:11:00.0000] <Lachy>
e.g. querySelector("x|p", "@namespace x 'http://example.com'");

[03:11:01.0000] <weinig>
Lachy: it might be a little cumbersome but I think it could work nicely

[03:12:00.0000] <Lachy>
since namespaces are a silly little edge case that authors will use relatively rarely, I don't really care that much about it being a little cumbersome

[03:12:01.0000] <Lachy>
but it's less cumbersome than the function

[03:13:00.0000] <weinig>
Lachy: way less!

[03:14:00.0000] <weinig>
Lachy: so the separate namespaces would be separated by ; ?

[03:14:01.0000] <weinig>
as in stylesheets

[03:14:02.0000] <Lachy>
yes

[03:15:00.0000] <Lachy>
and best of all, I get away with not having to define syntax and parsing requirements as I would have for the other DOMString suggestions previously raised on public-webapi

[03:17:00.0000] <othermaciej>
Lachy: BETTER THAN WHAT?

[03:17:01.0000] <othermaciej>
Lachy: THAT SEEMS OK

[03:17:02.0000] <othermaciej>
Lachy: oops

[03:17:03.0000] <othermaciej>
sorry I accidentally hit caps lock

[03:21:00.0000] <Lachy>
othermaciej, I wondered why you were shouting at me? :-)

[03:21:01.0000] <Lachy>
othermaciej, it's better than the current function approach

[04:00:00.0000] <Hixie>
all set up now. http://junkyard.damowmow.com/329

[04:00:01.0000] <Hixie>
i can now go back to fixing the spec.

[04:00:02.0000] <Hixie>
oh good, julian took care of frank.

[04:00:03.0000] <Philip`>
/me wonders who uses pi-bar as a currency

[04:01:00.0000] <Hixie>
valid question

[04:02:00.0000] <Philip`>
Oh, apparently 元 is Yuan so it's Chinese people

[04:07:00.0000] <Hixie>
ah

[04:10:00.0000] <Lachy>
Philip`, who said anything about "pi-bar"?

[04:12:00.0000] <Hixie>
i did

[04:13:00.0000] <Lachy>
where?

[04:23:00.0000] <Hixie>
"all set up now. http://junkyard.damowmow.com/329"

[04:23:01.0000] <Hixie>
oops, forgot to remove the DHSPAM marker that my spam filter added

[04:23:02.0000] <Hixie>
oh well

[04:23:03.0000] <Hixie>
i hope frank doesn't take offence

[04:24:00.0000] <Lachy>
oh, I see. In the currency converter logo.

[04:55:00.0000] <takkaria>
Hixie: how could you give credit to someone who's making you spell "tokenisation" wrong? :P

[04:55:01.0000] <Hixie>
eh i gave up on that months ago, the word tokenisation somehow slipped through the cracks

[04:55:02.0000] <Hixie>
everything else was changed a while back

[04:55:03.0000] <takkaria>
ah

[04:56:00.0000] <takkaria>
/me sighs

[04:56:01.0000] <Lachy>
what? why?

[04:56:02.0000] <Lachy>
tokenisation is the correct spelling

[04:56:03.0000] <Hixie>
imho it should be spelt tokenization

[04:56:04.0000] <Lachy>
silly corrupted american spelling :-(

[04:57:00.0000] <Hixie>
er wait

[04:57:01.0000] <Hixie>
other way around

[04:57:02.0000] <Hixie>
it should be spelt tokenisation

[04:57:03.0000] <Hixie>
but the spec now spells it tokenization

[04:57:04.0000] <Hixie>
or something

[04:57:05.0000] <Hixie>
i dunno

[04:57:06.0000] <Hixie>
whatever

[04:58:00.0000] <Lachy>
I see you did that mostly with color/colour too

[04:58:01.0000] <Hixie>
yeah

[04:58:02.0000] <Hixie>
not a battle worth fighting

[04:58:03.0000] <Lachy>
who insisted on changing it to en-US?

[04:59:00.0000] <Lachy>
(my specs are in en-AU and they're not changing)

[04:59:01.0000] <Hixie>
w3c policy

[04:59:02.0000] <Hixie>
good luck with that

[04:59:03.0000] <Lachy>
I'd be willing to settle for en-GB though

[04:59:04.0000] <Lachy>
the spelling is mostly the same

[05:02:00.0000] <Hixie>
i have plenty of petty fights already without adding spelling to the list :-)

[05:02:01.0000] <Hixie>
mostly i don't have a good argument against the spelling thing

[05:02:02.0000] <Hixie>
whereas i do on the other petty things :-)

[05:03:00.0000] <mcarter>
Lachy, it seems pretty trivial to come up with a list of words to transform from en-AU to en-US as part of the "publication process"

[05:03:01.0000] <Lachy>
I do. It's my native spelling and my editors all have en-AU spell checkers.  If I were to use en-US, it would make it more difficult and easier for spelling mistakes to slip through

[05:03:02.0000] <takkaria>
just pretend you're a toff and you refuse to speak in American when you go fox-hunting

[05:03:03.0000] <Hixie>
sadly for me my editors all have en-US spelling checkers, so that doesn't work for me :-)

[05:04:00.0000] <Hixie>
anyway, that's enough editing for a friday night

[05:04:01.0000] <Hixie>
more tomorrow probably

[05:04:02.0000] <Hixie>
nn

[06:24:00.0000] <annevk>
Hixie, "patter length"

[06:25:00.0000] <Lachy>
annevk, any thoughts about my @namespace proposal for selectors api?

[06:29:00.0000] <annevk>
it puts a dependency on CSS

[06:30:00.0000] <annevk>
also, it seems worse than my proposal

[06:30:01.0000] <annevk>
but it seems nobody is interested in mine

[06:41:00.0000] <Lachy>
what was your proposal? dropping it?

[06:41:01.0000] <annevk>
yes

[06:44:00.0000] <JohnResig>
weinig|zZz: I added the "circle1" that we talked about, last night

[07:15:00.0000] <annevk>
seems validator.nu is back up

[07:15:01.0000] <annevk>
the logo remind of V for Vendetta

[11:12:00.0000] <Lachy>
does anyone know if we have the use cases for scoped stylesheets documented anywhere?

[13:22:00.0000] <jgraham>
Lachy: http://esw.w3.org/topic/HTML/StyleAttribute indirectly has some of the use cases for <style scoped>


2008-07-13
[02:24:00.0000] <mitsuhiko>
hmm. small bug in html5lib

[02:24:01.0000] <mitsuhiko>
etree_lxml tries to import lxml.etree as etree twice

[02:24:02.0000] <mitsuhiko>
however the first import should import lxml.html as etree

[02:46:00.0000] <Lachy>
whatwg.org is down again

[05:17:00.0000] <Lachy>
JohnResig, yt?

[05:18:00.0000] <Lachy>
JohnResig, you might like to CC yourself on this bug http://www.w3.org/Bugs/Public/show_bug.cgi?id=5860

[05:18:01.0000] <Lachy>
I'm using bugzilla to track the feature request for selectors api v2

[08:44:00.0000] <Philip`>
http://ejohn.org/blog/html-5-data-attributes/ - "With data- attributes you can implement RDFa in HTML, advanced Microformats in HTML, ..." - but data- attributes are specifically intended to *not* be used for those things (i.e. things where some software external to the page infers some meaning from a page's use of data- attributes)

[08:54:00.0000] <jgraham>
Philip`: I can't imagine that anything the spec has to say about that will stop it from happening. It's such an obvious idea

[09:39:00.0000] <webben_>
/me wonders whether having script- and data- attributes would be a clean solution.

[10:06:00.0000] <Philip`>
jgraham: The spec could stop that from happening by removing the data- feature - it's a bad solution to the use-cases if everyone's going to abuse it as a simple get-out-of-validation-free trick

[10:21:00.0000] <jgraham>
Philip`: Well yes I guess that would work, but it seems a bit drastic. Presumably we could also acknowledge that people are going to see it as a good place to put e.g. Microformat data instead of overloading @title or whatever, and put some suggestions in the psec or the authoring guide to mitigate the bad side effects

[10:25:00.0000] <webben_>
/me isn't clear why people can't be given an official place to hide extractable data.

[10:25:01.0000] <webben_>
or what the bad side effects of that would be.

[11:56:00.0000] <Philip`>
webben_: The problem is that there's no standard for how authors/UAs should handle specific data- attributes, so there will be lots of interoperability problems once multiple parties try to interoperate with the same data; and there's nothing to attempt to prevent name collisions, if two people/tools independently decide to process the same attribute in different ways

[11:57:00.0000] <webben_>
Philip`: Seems to me that the idea of data- was for multiple parties not to use them.

[11:58:00.0000] <webben_>
Philip`: as for name collisions with microformat data, well, that's the same issue as class

[11:58:01.0000] <webben_>
if class structures aren't good enough to solve that, resurrect profile

[11:58:02.0000] <webben_>
Philip`: and note that the problem already happens without data-

[11:59:00.0000] <webben_>
the abbr title issue is precisely an issue of multiple parties using the title attribute for different purposes

[12:00:00.0000] <Philip`>
webben_: It was intended to be used only in single-party situations, like when a page contains the data and the scripts to act on that data; but people seem to be failing to notice that, and only seeing the 'you can use any attributes you want and the validator won't complain' aspect of it

[12:00:01.0000] <Dashiva>
Not like it wasn't possible to use class and title as opaque strings already...

[12:00:02.0000] <webben_>
/me is unsurprised. But then I don't think the validator is that useful unless you're interested in what it's validating, if you see what I mean.

[12:00:03.0000] <webben_>
that is to say, people invent attributes already

[12:01:00.0000] <webben_>
the fact that they don't validate doesn't seem to deter them much

[12:01:01.0000] <webben_>
/me says this as someone who argues strongly against people using HyperText MadeUp Language.

[12:01:02.0000] <Philip`>
Dashiva: Doing it with class feels like an ugly hack, because people know class is meant to be used to associate CSS with an element, and it gets messy if your data includes spaces, so many people seem to stay away from abusing class like that

[12:01:03.0000] <Philip`>
Dashiva: and doing it with title means you get ugly tooltips all over your page

[12:02:00.0000] <Dashiva>
Philip`: You mean they "know" it's meant to be used for CSS

[12:02:01.0000] <webben_>
class isn't just intended to be used for CSS

[12:02:02.0000] <webben_>
(or even primarily)

[12:03:00.0000] <Philip`>
Dashiva: whereas using data- for embedding custom data seems like a perfectly sensible justifiable thing to do because that's the whole reason it was added to HTML5, so it's a good place to stick all your microformats and RDFa into

[12:03:01.0000] <Dashiva>
So people will do what they're already doing in a cleaner way

[12:03:02.0000] <webben_>
but that's not the reason it was added

[12:03:03.0000] <webben_>
it was added for people who wanted to dump data for use in on-page JS

[12:03:04.0000] <Dashiva>
/me looks up the data type of @class

[12:04:00.0000] <webben_>
cdata whitespace separated.

[12:04:01.0000] <Philip`>
Dashiva: They will use the slightly ugly data- way instead of trying to reuse appropriate semantics that are already supported by HTML and instead of trying to standardise proper extensions to the language

[12:04:02.0000] <Philip`>
s/They/Some of them/

[12:04:03.0000] <webben_>
I think the problem of using generic solutions rather than particular solutions is an unavoidable authoring error in this stack.

[12:05:00.0000] <Philip`>
webben_: It wasn't intended for CSS, but I'm guessing that that's how pretty much all web developers think of it, though I have zero justification other than that's how I tend to think of it :-)

[12:05:01.0000] <webben_>
e.g. use of divs and spans instead of more specific elements.

[12:06:00.0000] <webben_>
Philip`: I think you'll find web developers fall into various significant groups wrt class.

[12:06:01.0000] <Dashiva>
Just in case anyone hasn't looked it up already

[12:06:02.0000] <Dashiva>
The class attribute has several roles in HTML: * As a style sheet selector (when an author wishes to assign style information to a set of elements). * For general purpose processing by user agents.

[12:06:03.0000] <webben_>
a) people who barely know it exists and use presentational markup / style attributes instead.

[12:06:04.0000] <webben_>
b) people who uses presentational classes (".red")

[12:06:05.0000] <webben_>
c) people who use semantic class naming

[12:07:00.0000] <Philip`>
webben_: What about people who use semantic class naming but use it solely as a way of attaching styling to elements?

[12:07:01.0000] <takkaria>
I don't see the difference between b and c.  class names are opaque so there's no practical difference

[12:08:00.0000] <webben_>
takkaria: There's a heck of a lot of difference if you have to work with the code.

[12:08:01.0000] <Philip`>
I write <div class="header"> instead of <div> because I want to apply certain header-like styling to the element; I would't bother with the 'semantic' name if I wasn't going to style it

[12:08:02.0000] <webben_>
takkaria: also semantic class names end up being microformat-prototypes.

[12:08:03.0000] <Dashiva>
class="data-apple=pie,computers,records"

[12:08:04.0000] <Philip`>
*wouldn't

[12:09:00.0000] <Philip`>
Dashiva: Then you have to write a parser when you have multiple key/value pairs on an element, and it gets all yucky

[12:10:00.0000] <webben_>
class is certainly under discussion as a title alternative in the microformats community; it's reconcilable with the spec and easier to implement than natural language processing.

[12:10:01.0000] <webben_>
it's generally felt to be icky however.

[12:11:00.0000] <Dashiva>
var classData = {}; var classRe = /([^\s=]+)=(\s+)/g; while (var res = re.exec(el.class)) { classData[res[1]] = res[2]; }; return classData;

[12:11:01.0000] <webben_>
s/generally/widely/

[12:11:02.0000] <Philip`>
(In some real code I've written for some site, I just used <a href="..." _foo="..." _bar="..."> because that's the easiest solution and who cares about validators anyway)

[12:11:03.0000] <Dashiva>
It's the same work you do parsing the query string, indicentally

[12:11:04.0000] <Dashiva>
Just split on space instead of &

[12:11:05.0000] <webben_>
/me would suggest that if you do use custom attributes you namespace them.

[12:11:06.0000] <Philip`>
Dashiva: Good luck getting an average web developer to understand (never mind write) code like that :-p

[12:11:07.0000] <Dashiva>
Philip`: See above comment about query string

[12:11:08.0000] <webben_>
Philip`: average web developers don't need to understand such code.

[12:11:09.0000] <takkaria>
webben_: I'm just sceptical of anyone who says something has a meaning independent of its behaviour.  if you do <div class="header"> instead <div class="big"> but the style rule is the same between them, what's the difference?

[12:12:00.0000] <Philip`>
Dashiva: You parse the query string by reading $_GET on the server side

[12:12:01.0000] <webben_>
takkaria: What it means to the people working on the code.

[12:12:02.0000] <Dashiva>
Philip`: Have fun with your web 0.9 app then

[12:12:03.0000] <webben_>
takkaria: Maybe it's difficult to grok unless you've worked in teams that use semantic naming /and/ have tried to make sense of random people's code on IRC.

[12:13:00.0000] <Philip`>
Dashiva: Pfah, I'll use an AJAX request to send the query string to a PHP script that parses it and returns a JSON representation

[12:13:01.0000] <Philip`>
That should be sufficiently Web 2.0

[12:13:02.0000] <Dashiva>
So do the same for class :P

[12:13:03.0000] <webben_>
takkaria: plus, you'll often use class names for scripting, so you're attaching multiple behaviors to the same "semantic" target.

[12:13:04.0000] <Philip`>
Dashiva: That would be quite inefficient, since there's only one query string per page but lots of class names

[12:13:05.0000] <takkaria>
webben_: ok, I think I'm just being overly hostile towards people's use of the word "semantic", I don't think my point really applies to the current discussion :)

[12:14:00.0000] <Dashiva>
Philip`: Sounds even more web 2.0 to me

[12:15:00.0000] <Dashiva>
It sounds like you never experienced Web 2.0 <blink> or Web 2.0 alert()

[12:15:01.0000] <Philip`>
Dashiva: I suppose the inefficiency can be fixed in Web 2.0 SP1

[12:16:00.0000] <Dashiva>
(cf. http://cheese.blartwendo.com/web21-demo.html)

[14:51:00.0000] <john__m>
is there a preference in html5 using <embed> and <object> for displaying inline flash content?

[14:53:00.0000] <john__m>
whoops...a preference between using <embed> or <object>...

[15:00:00.0000] <Hixie>
Philip`: data- is a good place for microformats only so long as you don't want the browsers ever to support those microformats natively

[15:06:00.0000] <webben_>
so not useful for microformats

[15:09:00.0000] <webben_>
john__m: not afaict from the draft proposals; contrast applet which is obsoleted http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#sandboxPluginApplet

[15:13:00.0000] <takkaria>
Hixie: you did some stats a while back on what the average number of attributes on tags was

[15:13:01.0000] <takkaria>
Hixie: at least, I think you did.  is it still around?

[15:14:00.0000] <john__m>
webben_: to me the spec only seems to differ in the availability of fallback content, at least I can't see how <embed> is supposed to provide fallback

[15:18:00.0000] <webben_>
john__m: the draft says: "The embed element has no fallback content. If the user agent can't display the specified resource, e.g. because the given type is not supported, then the user agent must use a default plugin for the content. (This default could be as simple as saying "Unsupported Format", of course.) "

[15:19:00.0000] <webben_>
john__m: in terms of real-world text/html clients, some support alt on embed, and there's also a noembed element

[15:24:00.0000] <john__m>
webben_: thanks, somehow I read right over that paragraph in the <embed> spec

[15:36:00.0000] <annevk>
the idea is that the format itself is accessible

[15:36:01.0000] <annevk>
of course, Flash is better avoided :)

[15:39:00.0000] <webben_>
s/is/should be/ ?

[15:56:00.0000] <Philip`>
takkaria: http://canvex.lazyilluminati.com/misc/stats/ has some fairly rubbish data including number of attributes per tag

[16:09:00.0000] <john__m>
annevk: maybe you should call my client and tell them that – my attempts, obviously, failed :)

[16:56:00.0000] <annevk>
Hixie, status of http://www.whatwg.org/specs/web-workers/current-work/ is probably wrong, it's not really a "Draft Recommendation"


2008-07-14
[17:01:00.0000] <takkaria>
Philip`: ah, thankyou

[17:01:01.0000] <takkaria>
Philip`: did you do that with an html5 parser?

[17:06:00.0000] <Philip`>
takkaria: It was with a (very old) HTML5 tokeniser

[17:06:01.0000] <Philip`>
though I might have hacked in something to make it respond to <script> etc correctly

[17:07:00.0000] <takkaria>
hmm

[17:08:00.0000] <takkaria>
it fits in with what I thought

[17:08:01.0000] <takkaria>
well, wildly guessed

[17:09:00.0000] <takkaria>
which was that attributes can be allocated in blocks of five

[17:09:01.0000] <Philip`>
I measured stuff like tag name lengths so I could preallocate enough space to make the common cases fast, but I can't find any of the results from that :-(

[17:10:00.0000] <takkaria>
I'd be very interested in seeing the longest attribute values found in real world content

[17:12:00.0000] <Philip`>
I saw tens of kilobytes in some <img alt> attributes

[17:13:00.0000] <takkaria>
I wonder what implementation limits there are in current Web browsers

[17:19:00.0000] <roc>
we have a 2GB string limit, other than that I think we're OK

[17:20:00.0000] <takkaria>
roc: I've been wanting to isolate mozilla's htmlparser to do speed tests with it, you don't know of anyone who's done something similar in the past do you?

[17:20:01.0000] <Philip`>
Hmph, there goes my plans for a microformat that embeds base-64 DVD rips in title attributes :-(

[17:21:00.0000] <takkaria>
/me chuckles

[17:21:01.0000] <roc>
I know people have tried to do that, but I don't have any details worry

[17:21:02.0000] <roc>
sorry

[17:21:03.0000] <takkaria>
ah, it was worth trying.  thanks :)

[17:21:04.0000] <roc>
mrbkap might know

[17:22:00.0000] <roc>
my guess is our parser is not all that fast, other than bugfixes it has not received enthusiastic maintenance for several years.

[17:22:01.0000] <takkaria>
hmm

[17:23:00.0000] <takkaria>
I was going to have a play with it at some point and see if I could coax some more html5-style handling into it

[17:23:01.0000] <takkaria>
probably in the autumn, though, if at all

[17:23:02.0000] <roc>
I would dearly love someone to come up with a super-fast from-scratch HTML5 parser that we could integrate :-)

[17:23:03.0000] <roc>
but mrbkap is the person to talk to about such things

[17:26:00.0000] <takkaria>
ok, I might have to do that later

[17:26:01.0000] <takkaria>
he's working on html5 comment parsing in mozilla IIRC, right?

[17:27:00.0000] <takkaria>
yeah, he is: https://bugzilla.mozilla.org/show_bug.cgi?id=214476

[19:18:00.0000] <Lachy>
JohnResig_, another selectos api feature request. http://www.w3.org/Bugs/Public/show_bug.cgi?id=5864  If you know of or think of any other feature requests, particularly those that are already implemented in JS libraries, let me know

[19:35:00.0000] <JohnResig_>
Lachy: cool, thanks - I'll be sure to let you know

[01:13:00.0000] <Lachy>
Geez, why won't some people listen when I say no and explain why :root cannot be redefined?! http://lists.w3.org/Archives/Public/www-style/2008Jul/0298.html

[02:12:00.0000] <MikeSmith>
Philip`: you around?

[02:55:00.0000] <Philip`>
MikeSmith: Yes, but you aren't

[06:18:00.0000] <takkaria>
/me reads the SVG WG's proposal

[06:20:00.0000] <annevk>
Hmm, Mozilla is not going re-use XMLHttpRequest for Workers? -- https://bugzilla.mozilla.org/show_bug.cgi?id=437152

[06:33:00.0000] <takkaria>
well, they want a case-preserving tokeniser

[06:33:01.0000] <takkaria>
though I can't see why, since as soon as they hit an <svg xmlns="..."> tag they hand it off to an XML processor anyway

[06:34:00.0000] <takkaria>
they also have a paragraph about using SVG in <img> which is mostly entirely irrelevant

[06:35:00.0000] <annevk>
case-preserving the toeknizer helps with <svg viewBox=... xmlns=...>

[06:35:01.0000] <annevk>
tokenizer, even

[06:36:00.0000] <roc>
yeah that whole section about SVG integration with HTML is irrelevant

[06:36:01.0000] <takkaria>
it doesn't, since they want everything from "<svg" to be passed

[06:37:00.0000] <roc>
I think the issue is that they don't want <SVG xMLns="..."> to do something

[06:38:00.0000] <takkaria>
it won't do the right thing anyway, because when it gets passed to the XML parser, the resulting tree will have no namespace or whatever

[06:42:00.0000] <takkaria>
what they have is implementable, but I really object to having to deal with *:math and *:svg

[06:43:00.0000] <annevk>
I guess I'm glad I'm going away for a few weeks while everyone else can have that discussion :)

[06:43:01.0000] <takkaria>
heh

[07:00:00.0000] <Lachy>
JohnResig_, yt?

[07:00:01.0000] <JohnResig_>
Lachy: yeah

[07:00:02.0000] <Lachy>
just a quick question about http://docs.jquery.com/Traversing/filter#expr

[07:01:00.0000] <Lachy>
I don't understand the use cases for that.  How is the example given: $("p").filter(".selected"); any different from $("p.selected"); ?

[07:02:00.0000] <JohnResig_>
Lachy: it's not any different - but it allows for 1) queries to $("p") to be cached for later and 2) it allows you to manipulate $("p") before performing a later filter, weening down the number of elements.

[07:02:01.0000] <Lachy>
ok

[07:03:00.0000] <annevk>
document.forms.querySelector("#test")

[07:03:01.0000] <JohnResig_>
it's the same reason we have .find(), .not() and others

[07:03:02.0000] <Lachy>
I'll keep that in mind for the .matchesSelector() feature for selectors api 2

[08:37:00.0000] <takkaria>
well, I'm sure I'll live to regret that

[08:41:00.0000] <howardr>
where is a good html5 validator?

[08:41:01.0000] <takkaria>
http://validator.nu/

[08:42:00.0000] <howardr>
thanks

[08:42:01.0000] <annevk>
http://html5.validator.nu/ has the simple UI for that, fwiw

[08:44:00.0000] <jmb>
takkaria: works for me :)

[11:20:00.0000] <Lachy>
aargh! I really don't know how to respond to this? http://lists.w3.org/Archives/Public/www-style/2008Jul/0302.html

[11:21:00.0000] <Lachy>
How can I possibly make it any clearer that the answer is no and that's final, without being rude about it?

[11:24:00.0000] <annevk>
just say :root has a different purpose

[11:24:01.0000] <annevk>
there's :root so you can do :not(html):root > body > :context > a

[11:26:00.0000] <Lachy>
I already that :root has a different purpose.

[11:27:00.0000] <annevk>
might be worth repeating then, giving an example

[11:30:00.0000] <Lachy>
but I don't know when :root is ever useful, other than as a CSS hack to filter out browsers that don't support it.

[11:31:00.0000] <annevk>
if it's not useful, why not reuse it then?

[11:33:00.0000] <Lachy>
because it would require redefining it in Selectors, getting implementers to change their existing implementations of and and make sure that all implementers have changed it before they ship support for seletors api.

[11:34:00.0000] <Lachy>
and given the slow process, I'm not sure we could even get :context through before they ship selectors api

[11:34:01.0000] <annevk>
it seems it would be a pretty trivial change to Selectors

[11:35:00.0000] <annevk>
:root either matches the "context element" or in case that is not defined the "root element"

[11:35:01.0000] <Lachy>
plus, getting the CSS WG to agree to change an existing selector seems like it would be harder than introducing a new one. Plus, the name :root doesn't really make much sense when it doesn't have to be the root of the tree

[11:35:02.0000] <annevk>
it's the root of the tree you're interested in...

[11:35:03.0000] <Lachy>
e.g. "body :root div" would work, but that's clearly not the root of any tree.

[11:36:00.0000] <annevk>
it's the root of the context tree

[11:36:01.0000] <annevk>
having the CSS WG make changes to a single paragraph seems easier than the effort required to put out a new draft

[11:36:02.0000] <annevk>
a new spec, I mean

[11:37:00.0000] <Lachy>
that depends. The context element may be at the bottom of the tree, depending what it's used for. e.g. for the possible matchesSelector() method, foo.matchesSelector("div>:context") isn't at the root of a tree.

[11:44:00.0000] <annevk>
I don't know how matchesSelector is supposed to work

[11:46:00.0000] <annevk>
for the proposals currently on the table :root can work and I think it might be easier to introduce than :context

[11:50:00.0000] <Lachy>
I don't think it will work. matchesSelector() returns true or false depending on whether the element matches or not.

[11:51:00.0000] <annevk>
for that case you don't want :context

[11:51:01.0000] <annevk>
and :root can just match the root element

[11:53:00.0000] <Lachy>
what? why wouldn't that case want :context?

[11:53:01.0000] <annevk>
why would it?

[11:54:00.0000] <annevk>
how is :context different from *?

[11:54:01.0000] <Lachy>
in that particular case, it probably makes no difference

[11:55:00.0000] <Dashiva>
What if it's div > :context > span?

[11:55:01.0000] <Lachy>
but I still don't get how the name :root fits the purpose of this selector anyway.

[11:55:02.0000] <annevk>
Dashiva, that would never match the :context element itself

[11:56:00.0000] <Dashiva>
But it could match something or nothing

[11:56:01.0000] <annevk>
Lachy, are you bikeshedding over a name?

[11:57:00.0000] <Lachy>
annevk, I'm just trying to stop others from arguing with me over the name I chose.

[11:57:01.0000] <annevk>
Dashiva, sure, but that's besides the point of matchesSelector

[11:57:02.0000] <Lachy>
becuase :root doesn't work or make sense

[11:57:03.0000] <annevk>
Lachy, I don't think you've shown that :root doesn't work

[11:57:04.0000] <Lachy>
I clearly did.

[11:58:00.0000] <annevk>
you did?

[11:58:01.0000] <Dashiva>
I figured it was a "Is the hassle and incompatability from redefining :root worse than the hassle from defining :context" thing

[11:59:00.0000] <Lachy>
yes. and neither you nor Brad or Andrew on www-style have put forth convincing arguments for why :root should be reused.

[11:59:01.0000] <annevk>
I'd appreciate a pointer to evidence

[11:59:02.0000] <Lachy>
see www-style

[11:59:03.0000] <annevk>
I read www-style

[12:00:00.0000] <annevk>
:root seems easier to fit to this new purpose and doesn't really have a use without it anyway

[12:00:01.0000] <Lachy>
http://lists.w3.org/Archives/Public/www-style/2008Jul/0299.html

[12:00:02.0000] <annevk>
and the name works good enough

[12:00:03.0000] <annevk>
(that e-mail is marked as visited)

[12:00:04.0000] <Lachy>
so re-read it.

[12:01:00.0000] <Lachy>
it's confusing because if it's redefined, then in scoped stylesheets it will allow things like <style scoped>body.foo :root>div { ... }</style>, and that doesn't make sense cause it's not the root element.

[12:01:01.0000] <annevk>
I just did, I don't think your arguments are compelling

[12:02:00.0000] <Lachy>
sure they are, you're being silly.

[12:02:01.0000] <annevk>
that doesn't really seem productive

[12:03:00.0000] <Philip`>
If people are not compelled by the arguments, clearly the arguments are not compelling

[12:03:01.0000] <Lachy>
I'm not being compelled by their arguments either

[12:03:02.0000] <Dashiva>
Sounds like a job for... consensus-man

[12:04:00.0000] <Philip`>
I suggest dice

[12:04:01.0000] <Lachy>
so far, the only reason put forth has been ":root is mostly useless, so let's just redefine it to something that doesn't make sense"

[12:04:02.0000] <Lachy>
--> not a compelling argument!

[12:05:00.0000] <annevk>
I said that it was easier to redefine :root than to introduce a new pseudo-class as a separate specification

[12:06:00.0000] <annevk>
Also, the way you phrase the "only reason" is clearly way to biased to your own opinion for third parties to draw conclusions from

[12:06:01.0000] <bradee-oh>
Hixie: Acid3 doesn't think Mac IE 5.1 has javascript  :(

[12:06:02.0000] <Lachy>
annevk, of course. We don't want third parties mistakenly beleiving your arguments are in any way compelling. :-)

[12:07:00.0000] <annevk>
I also think reusing :root makes sense and I actually believe that re-using :root for scoped style sheets was part of the original goals having talked to glazou

[12:07:01.0000] <annevk>
though I may recall incorrectly

[12:25:00.0000] <annevk>
/me tries to make a more compelling case for :context

[12:40:00.0000] <Lachy>
/me wonders how many times annevk is going to keep apologising for adding NSResolver to selectors api

[12:42:00.0000] <Lachy>
ok, so what should I make this feature string be? hasFeature("Selectors-API", "1.0");? Do I need to distinguish between implementations that choose to support NSResolver and those that don't?

[12:42:01.0000] <Lachy>
(I don't want to, I want to keep it as simple as possible)

[12:43:00.0000] <annevk>
Lachy, as long as it takes for someone to kill it

[12:43:01.0000] <annevk>
and the whole concept of it, that is

[12:44:00.0000] <othermaciej>
I think you should make either NSResolver or the replacement namespace resolution feature non-optional

[12:44:01.0000] <othermaciej>
optional features suck

[12:45:00.0000] <othermaciej>
but in general I agree on only one feature string

[12:46:00.0000] <annevk>
I agree that the namespace feature should never have been made optional

[12:46:01.0000] <annevk>
it should just have been removed

[12:46:02.0000] <Lachy>
othermaciej, the only reason I made it optional was because IE8 refuses to ship with support for the NSResolver, and I wanted to at least define sensible behaviour for them.

[12:47:00.0000] <Lachy>
so could I make it required, and still say that if implementations still don't support it, that they should show a NOT_SUPPORTED_ERR anyway?

[12:47:01.0000] <Lachy>
annevk, I would have removed it, but Mozilla wants it.

[12:47:02.0000] <annevk>
that's optional

[12:48:00.0000] <othermaciej>
removing would have been ok too

[12:48:01.0000] <annevk>
Mozilla is not the only player and so far they haven't really put forward any compelling cases

[12:48:02.0000] <othermaciej>
saying what to do if you violate a requirement of the spec seems pointless

[12:48:03.0000] <Lachy>
if I remove it and they still ship, then we're stuck with having to define whatever they ship with.

[12:49:00.0000] <annevk>
again, Mozilla is not the only player

[12:49:01.0000] <othermaciej>
if content starts depending on the resolver part of the feature, then it's not really optional

[12:49:02.0000] <annevk>
you're not saying we're stuck with defining what Microsoft ships with

[12:49:03.0000] <Lachy>
hmm, good point.

[12:49:04.0000] <othermaciej>
if content does not depend on it, then it doesn't matter what Mozilla ships with

[12:51:00.0000] <Lachy>
ok. Please raise these arguments on the mailing list and I'll deal with it tomorrow.

[12:51:01.0000] <Lachy>
othermaciej, you made a reasonably good case to use :scope.

[12:53:00.0000] <Lachy>
should I still refer to it in the spec as the "context element" (or contextual reference element that I have in my local draft), or find a more appriate name that aligns with :scope?

[12:53:01.0000] <othermaciej>
"scope element"

[12:53:02.0000] <Lachy>
ok

[12:53:03.0000] <Lachy>
I'll update it now and send in a new copy.

[12:53:04.0000] <othermaciej>
surprisingly, my naming debate entry seems to be more productive than most of the other content on the thread

[12:54:00.0000] <Lachy>
LOL :-D

[12:54:01.0000] <Lachy>
Bjoern and Hixie's comments were also productive

[12:55:00.0000] <Lachy>
I'm still waiting for a clarification from Bert, cause I didn't understand where he was coming from.

[15:16:00.0000] <gsnedders>
Hixie: FWIW, I agree with Julian (sp?) about the requirement for an opaque HTTP-like string for WebSockets

[15:18:00.0000] <jruderman>
Hixie: annevk says https://bugzilla.mozilla.org/show_bug.cgi?id=445166 is invalid per html5. is that intentional on your part?

[15:19:00.0000] <annevk>
someone should fix XML instead

[15:19:01.0000] <gsnedders>
jruderman: to answer on behalf of Hixie, it's because you can't rely upon external DOCTYPEs being read by XML processors, thereby meaning there's no point in allowing any entities as they can't be relied upon

[15:19:02.0000] <annevk>
fixing all the APIs around it doesn't scale long term

[15:19:03.0000] <gsnedders>
jruderman: (beyond those that are defined in XML itself)

[15:19:04.0000] <jruderman>
how about just including the same entities that HTML includes?

[15:20:00.0000] <gsnedders>
jruderman: See above. That needs a DOCTYPE.

[15:20:01.0000] <annevk>
in all of XML or just for innerHTML?

[15:20:02.0000] <annevk>
(note that HTML now has over 2000 entities)

[15:20:03.0000] <gsnedders>
for innerHTML it'd be silly to make it different to normal XML

[15:21:00.0000] <annevk>
well, that's one POV

[15:21:01.0000] <jruderman>
increasing compatibility between text/html and application/xhtml+xml isn't silly

[15:22:00.0000] <gsnedders>
They'll always have to be incompatible though. There's no point in pretending the two are.

[15:23:00.0000] <annevk>
it seems better to change XML to get more predefined entities, but that may be a hard battle

[15:23:01.0000] <Hixie>
gsnedders: which requirement? (re websocket)

[15:24:00.0000] <Hixie>
jruderman: yes, it is intended to work the same way as any xml content (that doesn't declare a dtd)

[15:25:00.0000] <gsnedders>
Hixie: "Read the first 85 bytes from the server. If the connection closes before 85 bytes are received, or if the first 85 bytes aren't exactly equal to the following bytes, then fail the Web Socket connection and abort these steps." for one

[15:25:01.0000] <gsnedders>
annevk: Yeah, in some ways we need that for RSS (people just blindingly using HTML content without escaping it, often just causing errors purely because of entities)

[15:26:00.0000] <annevk>
it's called XML5, but only has blog traction

[15:26:01.0000] <Hixie>
gsnedders: what's wrong with that?

[15:26:02.0000] <gsnedders>
That was on the list of things to help with over the summer, annevk, but too far down to be reached, I suspect

[15:26:03.0000] <gsnedders>
Hixie: I'll send a long email once I get home, but I mostly agree with Julian until then :)

[15:27:00.0000] <Hixie>
ok, but bear in mind that the main requirement from me is that the handshake be resilient

[15:27:01.0000] <gsnedders>
Yeah, sure

[15:27:02.0000] <Hixie>
leaving holes in the handshake through which you can pass inconvenient material wouldn't work

[15:27:03.0000] <Hixie>
i am in fact disappointed as to how much flexibility we already have

[15:30:00.0000] <Hixie>
jesus, the svgwg's proposal is longer than the entire checkin i made to support svg

[15:31:00.0000] <annevk>
apparently it addresses more than just the syntax issue

[15:32:00.0000] <othermaciej>
link?

[15:33:00.0000] <Hixie>
public-html

[15:33:01.0000] <annevk>
http://lists.w3.org/Archives/Public/public-html/2008Jul/att-0179/svg-html-proposal.html

[15:33:02.0000] <Hixie>
feedback from apple would be very interesting and would inform my response

[15:35:00.0000] <roc>
the entire section "Use of SVG Resources in HTML and CSS" is irrelevant and should be dropped

[15:36:00.0000] <othermaciej>
yeah it has nothing to do with this topic

[15:36:01.0000] <othermaciej>
I do not uinderstand the effect of the tokenizer changes

[15:36:02.0000] <othermaciej>
*understand

[15:36:03.0000] <annevk>
takkaria commented on that already

[15:36:04.0000] <Hixie>
well one big effect is killing performance

[15:37:00.0000] <Hixie>
hsivonen_ told me before going on vacation that he strongly objected to anything that involved making the tokeniser case-preserving because it would just kill his performance by order(s) of magnitude

[15:37:01.0000] <othermaciej>
I'm not sure what they are meant to do

[15:37:02.0000] <othermaciej>
are they trying to implement XML parsing in the HTML tokenizer formalism?

[15:38:00.0000] <gsnedders>
Why would that kill perf. though? Surely it's just a question of where you do the case-normalisation?

[15:38:01.0000] <roc>
I actually doubt that it would kill performance

[15:39:00.0000] <roc>
anyone who wants to round-trip HTML source (we do) will have to preserve case somewhere anyway

[15:39:01.0000] <annevk>
gsnedders, if you create an integer for the element during tokenization to match on during tree building it would be quite different if tokenization required preserving case

[15:40:00.0000] <Hixie>
his problem is that he normalises all strings to IDs, and having to do his normalisation in different ways for different tokens is crazy, as i understand it

[15:40:01.0000] <gsnedders>
ah

[15:40:02.0000] <Hixie>
he does case-preserving for roundtripping by remembering indexes into the original source

[15:40:03.0000] <Hixie>
which bypasses the entire problem

[15:40:04.0000] <roc>
then he can use that info to do the case-sensitive comparisons the SVG people want

[15:41:00.0000] <Hixie>
you have to do this for every single token

[15:42:00.0000] <othermaciej>
WebKit makes no effort to preserve case when parsing text/html

[15:43:00.0000] <othermaciej>
so it's certainly not the case that everyone has to preserve case someday

[15:43:01.0000] <othermaciej>
the html and xml parsers both intern atoms for tag names, either converting to lowercase or preserving case

[15:43:02.0000] <othermaciej>
would probably be a hassle to change that decision to be made late

[15:44:00.0000] <othermaciej>
instead of determined by whether it is the html or xml tokenizer

[15:44:01.0000] <othermaciej>
if that is indeed required

[15:44:02.0000] <Hixie>
that appears to be what is required

[15:44:03.0000] <Hixie>
but i haven

[15:44:04.0000] <Hixie>
't studied it in detail yet

[15:44:05.0000] <Hixie>
and do not have an opinion of my own at this time

[15:45:00.0000] <annevk>
since they require parsing using an XML parser for the bits where it matters it seems to be a performance optimization at "best"

[15:45:01.0000] <othermaciej>
their ideas for fallback mechanisms both don't work

[15:45:02.0000] <roc>
seems to me the only place where case-sensitivity *matters* is the case-sensitive check for math/svg tag names and "xmlns" attribute

[15:45:03.0000] <othermaciej>
(at least as proposals for fallback in the current generation of UAs)

[15:46:00.0000] <Hixie>
wait where does the xml parser fall into this

[15:47:00.0000] <annevk>
the bit that says "Create a new XML parser"?

[15:47:01.0000] <Hixie>
woah

[15:47:02.0000] <Hixie>
well that's not going to fly

[15:47:03.0000] <Hixie>
we have a requirement that you be able to implemnt html5 without an xml parser

[15:47:04.0000] <roc>
why?

[15:48:00.0000] <Hixie>
because having to have two parsers just to poke at some microformats is a little excessive

[15:48:01.0000] <roc>
eh

[15:49:00.0000] <roc>
all browsers are going to have XML parsers in them

[15:49:01.0000] <roc>
most platforms have one

[15:49:02.0000] <Hixie>
browsers aren't the only implementations of html5

[15:49:03.0000] <Hixie>
in fact right now they're in the minority :-)

[15:49:04.0000] <roc>
like I said, most platforms have one

[15:49:05.0000] <jcranmer>
roc: and drop support for DOS?

[15:49:06.0000] <Philip`>
It doesn't seem like it'd be that infeasible to implement an XML-fragment (minus doctype etc) parser as an extra HTML5 tree constructor mode

[15:50:00.0000] <Hixie>
that's probably how i would spec it if we did this

[15:50:01.0000] <Hixie>
but that seems like a lot of excess work for no good benefit

[15:51:00.0000] <Hixie>
how do they handle xml parse errors?

[15:51:01.0000] <Hixie>
i guess i should read this thing

[15:51:02.0000] <roc>
I don't see why they actually need to make tokenization case-sensitive

[15:52:00.0000] <Dashiva>
Someone suggested it was because they didn't want <SVG XMLNS in their lap

[15:52:01.0000] <othermaciej>
their proposal for XML parse errors seems to be, when you hit one you close all open XML element and resume parsing as HTML at the same character position

[15:52:02.0000] <othermaciej>
which seems like a weird compromise between draconian and tolerant

[15:52:03.0000] <roc>
Dashiva: they wouldn't get it that, because that wouldn't render anything

[15:53:00.0000] <roc>
The XML parser  would create an <SVG> element with no namespace, and the author tries again

[15:53:01.0000] <Hixie>
they require <a> in svg to be written <svg:a>

[15:53:02.0000] <Hixie>
as i understand it

[15:54:00.0000] <Hixie>
this proposal seems to somewhat fail to achieve the goal maciej put forward

[15:54:01.0000] <Hixie>
of providing for svg the same level of author-friendliness as html has

[15:55:00.0000] <roc>
that goal is 100% incompatible with the SVG WG's goal of strict XML parsing

[15:55:01.0000] <Hixie>
yes

[15:55:02.0000] <gsnedders>
yay! simple consensus!

[15:56:00.0000] <Hixie>
wait, this proposal requires html in svg to be marked up as xhtml, too

[15:58:00.0000] <gsnedders>
oh yuk.

[15:59:00.0000] <annevk>
last thing I read about that was to embed text/html HTML through CDATA or something, similar to Atom

[15:59:01.0000] <annevk>
I didn't like it too much

[16:00:00.0000] <roc>
I don't think that's really a big deal

[16:00:01.0000] <jgraham>
CDATA? For real?

[16:00:02.0000] <Hixie>
this proposal would also totally break this page http://www.laroseweb.com/calcs/fans.php

[16:00:03.0000] <gsnedders>
It works, sure, and it would be compat. with SVG/XML, but it seems illogical within HTML

[16:01:00.0000] <Hixie>
it would knock out the stylesheet and the script

[16:01:01.0000] <roc>
many things make HTML in <foreignObject> less than ideal

[16:02:00.0000] <annevk>
Hixie, it would fail on &mathml;

[16:02:01.0000] <Hixie>
oh, true

[16:03:00.0000] <jgraham>
roc: I guess HTML in <foreignObject> will be one of the most useful features if the syntax doesn't suck so much that no one can get it right

[16:03:01.0000] <roc>
it really only works for fixed-size objects

[16:03:02.0000] <annevk>
aren't most of the HTML in <foreignObject> cases addressed by SVG effects through CSS?

[16:04:00.0000] <roc>
yes

[16:04:01.0000] <roc>
one of the main goals of SVG effects through CSS is to get around the fact that <foreignObject> prevents reasonable layout

[16:04:02.0000] <annevk>
I would expect SVG in HTML to be mostly used for iconic images and logos

[16:04:03.0000] <roc>
diagrams

[16:04:04.0000] <roc>
if you want to send a diagram in email it's going to be the only way

[16:06:00.0000] <Hixie>
bbiab

[16:09:00.0000] <takkaria>
I don't really have an opinion either way on how to do svg-in-html; even implenting an xml fragment parser in the html parsing algorithm wouldn't be that much of a code burden

[16:10:00.0000] <takkaria>
it wouldn't be great, but it's doable

[16:10:01.0000] <annevk>
would it be more work than what you have so far?

[16:10:02.0000] <takkaria>
I very much doubt it, really

[16:11:00.0000] <takkaria>
it just multiplies the number of testcases needlessly, I guess

[16:14:00.0000] <howardr>
does anyone know any good irc channels on js?

[16:14:01.0000] <takkaria>
I would much prefer just making sure implementations can export the SVG tree as well-formed XML, really, because that seems like by far the least effort on anyone's part

[16:14:02.0000] <roc>
irc.mozilla.org has #js, not sure if it's good :-)

[16:15:00.0000] <takkaria>
(though I'm just repeating what I said in my reply now, so I'll go back to fixing my parser...)

[16:15:01.0000] <Dashiva>
howardr: #javascript on efnet

[16:17:00.0000] <howardr>
thanks

[16:30:00.0000] <gsnedders>
Any feelings on handling of <!--begin-toc--><em>foo<!--end-toc-->bar?

[16:30:01.0000] <jcranmer>
a comment in the middle of a word? :-P

[16:30:02.0000] <gsnedders>
(with regards to the spec-gen, that is)

[16:31:00.0000] <gsnedders>
I feel like throwing a fatal error if the start and end comments don't have the same parent

[16:34:00.0000] <annevk>
gsnedders, just do whatever is easiest for weird stuff

[16:34:01.0000] <annevk>
(until we complain :) )

[16:48:00.0000] <gsnedders>
Well, either I just let the behaviour be weird (everything after until the em tag closes vanishes), or I just throw a fatal error

[16:49:00.0000] <gsnedders>
I think the latter behaviour is more desirable

[16:49:01.0000] <gsnedders>
anyhow, g'nite


2008-07-15
[17:12:00.0000] <Lachy>
if scoped stylesheets were changed to be evaluated only in the context of the scoped tree, rather than the whole document, the :scope would still be useful because it allows you to select the scope element and it's children with the child combinator

[17:13:00.0000] <Lachy>
it would only remove the need for :scope when used in conjunction with the descendant combinator, in most cases.

[17:14:00.0000] <annevk>
if selectors would work that way re-using :root makes even more sense

[17:14:01.0000] <annevk>
and the sole advantage of :root as I demonstrated in my e-mail goes away

[17:14:02.0000] <annevk>
advantage of :scope, I should say

[17:14:03.0000] <Lachy>
maybe we could allow for both options

[17:15:00.0000] <annevk>
over engineering?

[17:15:01.0000] <Lachy>
no

[17:15:02.0000] <annevk>
yes

[17:15:03.0000] <Lachy>
no

[17:15:04.0000] <Hixie>
:root should match the root element and that's all

[17:15:05.0000] <Hixie>
don't overload it with random other functionality

[17:16:00.0000] <othermaciej>
I don't see why changing the meaning of :root in some cases is better than adding :scope for those use cases

[17:16:01.0000] <Lachy>
there were a few cases where the ancestor elements outside the scope are useful, as I gave some examples of already

[17:16:02.0000] <othermaciej>
it would still need a change to the Selectors spec

[17:17:00.0000] <othermaciej>
and unless there are cases where you want to refer to either the document root or the scope node interchangeably depending on context, it doesn't seem helpful to use a single pseudo-class for both

[17:17:01.0000] <annevk>
I was just saying that if we change selectors to not match outside the subtree it would be over engineering to also keep the current solution

[17:17:02.0000] <Lachy>
new version of the spec http://lists.w3.org/Archives/Public/www-archive/2008Jul/att-0025/Overview.html

[17:17:03.0000] <Lachy>
using :scope now

[17:17:04.0000] <jcranmer>
whee, discussion of the scoped-stylesheet debate

[17:17:05.0000] <annevk>
but since the current solution is better it seems good to not introduce the one where you need to change selectors

[17:19:00.0000] <Hixie>
selectors should match outside the scoped subtree imho

[17:19:01.0000] <annevk>
doing anything else changes selectors

[17:20:00.0000] <annevk>
afaict

[17:20:01.0000] <jcranmer>
I still don't see why

[17:20:02.0000] <annevk>
because selectors are run in the context of a document

[17:20:03.0000] <jcranmer>
well, the idea of scoping is that you're explicitly limiting scope

[17:21:00.0000] <Hixie>
the element doesn't suddenly lose its parent just because you are scoped to it

[17:21:01.0000] <jcranmer>
which to me implicitly limits context as well

[17:21:02.0000] <Hixie>
if you style elements that are inside <Aside> elements, they should still have those styles even if the <Aside> is outside your scope

[17:21:03.0000] <jcranmer>
it doesn't limit it, it just makes it portable

[17:21:04.0000] <jcranmer>
s/limit it/loses its parent/

[17:22:00.0000] <Lachy>
I think they should apply to the whole document too.  It should be possible to take a stylesheet that normally applies to a whole document, but then just restrict the set of elements it applies to, without altering which elements match.

[17:22:01.0000] <Lachy>
that's only possible with matching outside of the subtree is true.

[17:23:00.0000] <jcranmer>
AFAICT, the primary use case is for when the author of a subsection does not have access to the style of the whole page

[17:23:01.0000] <jcranmer>
which makes matching outside the scope pointless

[17:23:02.0000] <annevk>
my use case was including some local styles for a blog entry

[17:23:03.0000] <jcranmer>
right

[17:23:04.0000] <Lachy>
but, there does seem to be some demand for the other situation too, and so maybe if those use cases are justified, an attribute on the style selement could specify whether the context was the whole document or the subtree

[17:24:00.0000] <annevk>
i do have access to the whole page :)

[17:24:01.0000] <jcranmer>
I'd end up having to <root of scope> <rest of selector> the entire thing

[17:24:02.0000] <annevk>
jcranmer, why?

[17:24:03.0000] <jcranmer>
annevk: to limit the styles properly of course

[17:25:00.0000] <Lachy>
only when you're using the descendant selector

[17:25:01.0000] <annevk>
jcranmer, if you needed to do that the scoped attribute would have no effect, but it does

[17:25:02.0000] <jcranmer>
of course, I think we can sidestep the entire argument by having the author point out which model he would like to use

[17:26:00.0000] <jcranmer>
/me heads to supper

[17:26:01.0000] <Lachy>
<style scoped context="document"> or <... context="scope">

[17:26:02.0000] <annevk>
not changing selectors seems the most straightforward path and is already how, e.g. getElementsByClassName works

[17:27:00.0000] <annevk>
well, the definition, hah, it doesn't actually matter of course there :/

[17:30:00.0000] <Hixie>
with :scope you don't need any of this

[17:30:01.0000] <Hixie>
you can just stick :Scope on the front of every selector and be done with it

[17:31:00.0000] <annevk>
yup

[17:38:00.0000] <Lachy>
Hixie, yeah, I agree, but people are complaining about having to do that.

[17:39:00.0000] <annevk>
there's always people who disagree with something

[17:39:01.0000] <Lachy>
I know, but I don't like that. Why can't everyone just agree with everything I say?

[17:40:00.0000] <annevk>
/me shrugs

[17:42:00.0000] <Hixie>
Lachy: "waah"

[17:42:01.0000] <Hixie>
Lachy: "I have considered your feedback but decided to not do this for v1."

[17:43:00.0000] <Lachy>
what?

[17:43:01.0000] <Lachy>
where did I say that?

[17:44:00.0000] <Hixie>
you didn't

[17:44:01.0000] <Hixie>
i'm saying that's how you should respond

[17:44:02.0000] <Lachy>
oh

[17:44:03.0000] <Hixie>
in response to the "waah" from people

[17:45:00.0000] <Lachy>
ok.

[17:46:00.0000] <Lachy>
for some issues, it's just not worth it though. It's sometimes easier to give in than to continue putting up with whinging.

[17:46:01.0000] <Hixie>
no

[17:46:02.0000] <Hixie>
never let whinging make you make suboptimal decisions

[17:46:03.0000] <Lachy>
ok

[17:47:00.0000] <Hixie>
as spec writers people for the next 100 years or more are going to rely on our decisions

[17:47:01.0000] <takkaria>
Hixie: btw, on your comments about hsivonen's parser earlier, if the tokeniser was only switched into case-preserving mode "in foreign content", I don't think there'd be much if any performance hit

[17:47:02.0000] <Hixie>
that is a huge responsibility

[17:47:03.0000] <Lachy>
Hixie, that's right. So I have to be sure that I'm making the right decisions.

[17:48:00.0000] <Lachy>
sometimes that's difficult.

[17:48:01.0000] <Hixie>
often :-)

[17:48:02.0000] <Hixie>
takkaria: maybe, i don't know what his parser looks like

[17:49:00.0000] <takkaria>
I've looked at it, and that seems to be the case

[17:49:01.0000] <takkaria>
not that would make the SVG people happy anyway

[17:56:00.0000] <Hixie>
why does no software handle multigigabyte files well

[17:56:01.0000] <Hixie>
sigh

[17:57:00.0000] <Lachy>
what kind of file do you have that is multigigabyte, unless it's video or something?

[17:57:01.0000] <Hixie>
.csv file

[18:05:00.0000] <jcranmer>
/me points out the simple solution again

[18:05:01.0000] <Hixie>
there's a simple solution to dealing with multigigabyte csv files? :-)

[18:06:00.0000] <takkaria>
is fgets() not enough?

[18:07:00.0000] <jcranmer>
Hixie: no, to the scoped style discussion

[18:07:01.0000] <jcranmer>
make an attribute on the element and let authors decide

[18:07:02.0000] <Hixie>
adding an attribute seems like bad design

[18:07:03.0000] <Hixie>
why is :Scope not enough?

[18:08:00.0000] <jcranmer>
because I'd prepend it to every selector then

[18:08:01.0000] <Hixie>
takkaria: writing little scripts to process the data is what i've done, but it sucks that i can't use real spreadsheet tools

[18:08:02.0000] <Hixie>
jcranmer: so?

[18:08:03.0000] <jcranmer>
the key word there is "every"

[18:08:04.0000] <jcranmer>
if there's boilerplate for everything, then maybe the decision should be looked at again

[18:08:05.0000] <Hixie>
jcranmer: to be honest i don't believe you :-) i mean, i believe that you think you would, but i think in practice you wouldn't at all end up doing that.

[18:09:00.0000] <Hixie>
jcranmer: for example if you have styles for elements that are in links, i don't see why it matters if the link is inside the scope or not

[18:09:01.0000] <takkaria>
Hixie: I'd have thought excel would manage it, but if not, then I don't know what hope any other spreadsheet tools have

[18:09:02.0000] <Hixie>
i don't have office

[18:10:00.0000] <jcranmer>
OOo?

[18:10:01.0000] <Hixie>
but i doubt either numbers or the openoffice spreadsheet tool can handle a few dozen megabytes, let alone more than 2 gigabytes

[18:11:00.0000] <jcranmer>
I'm going out on a limb here and guessing you're not using FAT

[18:11:01.0000] <Hixie>
um no

[18:11:02.0000] <Hixie>
NFS

[18:11:03.0000] <jcranmer>
hmm, how could I guess ;-)

[18:11:04.0000] <Hixie>
does anyone still use FAT?

[18:11:05.0000] <roc>
yes

[18:11:06.0000] <Hixie>
wow

[18:11:07.0000] <roc>
All CF cards

[18:11:08.0000] <jcranmer>
my old, *old* computer

[18:12:00.0000] <jcranmer>
anyone who uses floppies

[18:12:01.0000] <roc>
so *you* still use FAT

[18:12:02.0000] <Hixie>
i don't have any CF cards

[18:12:03.0000] <jcranmer>
roc: I don't use that computer

[18:12:04.0000] <jcranmer>
it's my parents

[18:12:05.0000] <jcranmer>
'

[18:12:06.0000] <takkaria>
/me uses CF cards :(

[18:13:00.0000] <roc>
I bet most USB keys use FAT too

[18:13:01.0000] <Hixie>
don't have any of those either :-)

[18:13:02.0000] <roc>
and probably Sony's memory sticks

[18:13:03.0000] <roc>
and SD

[18:13:04.0000] <Hixie>
SD?

[18:13:05.0000] <roc>
if you don't have a digital camera, then I'll be impressed

[18:13:06.0000] <jcranmer>
Hixie: what about your brain?

[18:13:07.0000] <Hixie>
i don't have a digital camera

[18:13:08.0000] <takkaria>
you have an iPod, but if you're a Mac user, you probably don't use FAT there either...

[18:14:00.0000] <roc>
now yu

[18:14:01.0000] <Hixie>
yeah my ipod is HFS+, i believe

[18:14:02.0000] <roc>
now you're just showing off

[18:14:03.0000] <Hixie>
i have an iSight and an external iSight

[18:14:04.0000] <Hixie>
but those don't have storage

[18:14:05.0000] <jcranmer>
/me would not be suprised if an appliance in Hixie's house used FAT

[18:15:00.0000] <jcranmer>
if not, I'm sure the computers at the airport checkin line use them

[18:15:01.0000] <jcranmer>
maybe the ATM as well

[18:15:02.0000] <Hixie>
i expect my girlfriend's camera uses flash, but i don't know what storage it uses (she uses USB to get the data off)

[18:15:03.0000] <Hixie>
i used an ATM once in the last 12 months. :-)

[18:16:00.0000] <Hixie>
/me recently discovered this when he audited his bank records to make his budget for the coming months

[18:16:01.0000] <Hixie>
er, s/uses flash/uses FAT/

[18:16:02.0000] <jcranmer>
hmm, Hixie said nothing about flying...

[18:16:03.0000] <Hixie>
i flew three times in the last year, i think

[18:16:04.0000] <Hixie>
well, three times two

[18:17:00.0000] <Hixie>
and the experiecne is worse each time

[18:18:00.0000] <Hixie>
anyway

[18:18:01.0000] <Hixie>
/me goes back to defining Pipes

[18:18:02.0000] <Hixie>
if anyone can find a better name for the PipeEnd object, let me know

[18:19:00.0000] <othermaciej>
MessagePort

[18:19:01.0000] <roc>
yeah Port

[18:19:02.0000] <Hixie>
ooo

[18:20:00.0000] <othermaciej>
(I like that better as general terminology than Pipe too)

[18:21:00.0000] <roc>
it's useful to be able to talk about the connection itself

[18:21:01.0000] <roc>
although usually the connection isn't exposed as a first-class object

[18:22:00.0000] <annevk>
only the bridge between the "ports" is exposed

[18:22:01.0000] <Hixie>
right now only hte ports are exposed

[18:22:02.0000] <Hixie>
but you create them as ap air

[18:22:03.0000] <Hixie>
as a pair

[18:23:00.0000] <Hixie>
so there is an object that represents a pair of ports when they are first created

[18:23:01.0000] <Hixie>
called a Pipe right now

[18:24:00.0000] <roc>
Unix pipes block on write if the reader isn't reading

[18:24:01.0000] <roc>
if you're doing something asynchronous then you might want a more general term for clarity

[18:24:02.0000] <Hixie>
no blocking here

[18:24:03.0000] <Hixie>
yeah

[18:24:04.0000] <Hixie>
i've renamed PipeEnd to MessagePort

[18:25:00.0000] <Hixie>
what terminology goes with Ports for the object that holds two ports?

[18:25:01.0000] <roc>
MessageChannel for the connection object?

[18:25:02.0000] <Hixie>
that works

[18:26:00.0000] <Hixie>
or just Channel

[18:26:01.0000] <Hixie>
since this is the constructor you'll call

[18:26:02.0000] <Hixie>
var x = new Channel();

[18:26:03.0000] <Hixie>
x.port1; x.port2;

[18:27:00.0000] <Hixie>
maybe Channel and ChannelPort? Rather than Channel and MessagePort?

[18:28:00.0000] <othermaciej>
ChannelPort seems less clear

[18:28:01.0000] <Hixie>
yeah

[18:28:02.0000] <Hixie>
though frankly, few people will deal with the name MessagePort

[18:29:00.0000] <roc>
I'd use MessageChannel to be honest

[18:30:00.0000] <othermaciej>
Channel does seem a bit more vague

[18:30:01.0000] <Hixie>
MessageChannel it is

[18:30:02.0000] <annevk>
MessageChannel is also more consistent with postMessage

[18:31:00.0000] <Hixie>
ok well this terminology is much better now

[18:31:01.0000] <Hixie>
thanks

[01:56:00.0000] <Hixie>
if you have a channel with ports 1 and 2

[01:56:01.0000] <Hixie>
and you try to send port2 down port1

[01:56:02.0000] <Hixie>
it should obviously fail

[01:56:03.0000] <Hixie>
because the semantics of that are just crazy weird

[01:56:04.0000] <Hixie>
but if you send port1 down port1

[01:56:05.0000] <Hixie>
should it also throw?

[01:57:00.0000] <Hixie>
it would be equivalent to having a rope and throwing one end to the other end

[01:57:01.0000] <Hixie>
"here's a channel!"

[01:57:02.0000] <Hixie>
pretty useless, since why wouldn't you just create a new MessageChannel() for yourself

[01:57:03.0000] <Hixie>
i would guess most cases of port1 going down port1 will be mistakes

[01:57:04.0000] <Hixie>
so it makes sense to fail big

[01:57:05.0000] <Hixie>
at the point of error

[01:58:00.0000] <Hixie>
instead of having hard-to-debug problems later

[02:16:00.0000] <gDashiva>
/me is getting postMessage endpoint-passing flashbacks

[02:18:00.0000] <Hixie>
gDashiva: hm?

[02:18:01.0000] <gDashiva>
It just sounds so similar

[02:19:00.0000] <Hixie>
it is more than similar

[02:19:01.0000] <Hixie>
it's the same thing

[02:19:02.0000] <gDashiva>
That would explain it then

[02:25:00.0000] <Hixie>
roc and mjs came up with the better names

[02:25:01.0000] <Hixie>
pipe become message channel

[02:25:02.0000] <Hixie>
and end point and pipe end become message port

[02:26:00.0000] <Hixie>
s/become/became/

[02:26:01.0000] <Hixie>
i'm doing dvorak-layout typos while typing on a qwerty keyboard

[02:26:02.0000] <Hixie>
that's freaky

[02:27:00.0000] <Hixie>
that suggests that when i do typos, i'm hitting the keys my brain intended to hit

[02:27:01.0000] <Hixie>
but that my brain doesn't have a good idea of what keys to hit, and that it makes mistakes based on locality of the keyboard layout

[02:27:02.0000] <Hixie>
but that the mistakes it makes aren't necessarily related to the keyboard layout it is actually typing on

[02:41:00.0000] <Lachy>
http://blogs.msdn.com/ie/archive/2008/07/14/ie8-ajax-navigation.aspx

[03:02:00.0000] <Hixie>
wish they'd say what they actually implemented :-)

[03:04:00.0000] <Hixie>
just the hashchanged event apparently

[03:18:00.0000] <gDashiva>
The third comment makes me sad.

[03:26:00.0000] <Hixie>
is that the one about how their markup "sucls"?

[03:26:01.0000] <Hixie>
sucks

[03:26:02.0000] <Hixie>
rather

[03:26:03.0000] <Hixie>
it made me sad too

[03:28:00.0000] <MikeSmith>
I'm pretty sure this is picture of the guy who wrote that comment:

[03:28:01.0000] <MikeSmith>
http://upload.wikimedia.org/wikipedia/en/7/79/The_Simpsons-Jeff_Albertson.png

[03:29:00.0000] <annevk>
you wouldn't say

[03:32:00.0000] <Lachy>
when did Comic Book Guy get named Jeff Albertson?

[03:33:00.0000] <Lachy>
oh, apparently way back in 2005.

[03:35:00.0000] <Lachy>
that comment did have a point about the DOCTYPE though. The PDF contains "<!DOCTYPE>"

[03:38:00.0000] <annevk>
Hixie, in MessagePort various definitions and references have mismatching titles, at least onmessage and ownerWindow

[03:39:00.0000] <Hixie>
fixed onmessage a while back

[03:39:01.0000] <Hixie>
fixed ownerWindow just now, thanks

[03:48:00.0000] <annevk>
Hmm, isn't another reason that the tokenizer is made case-insensitive so that xmlns and xmlns:* attributes can be used outside the context of the subtree?

[03:54:00.0000] <takkaria>
heh, "Having <svg:a> be interpreted by a legacy user agent as <html:a> is perhaps not that critical, you can even add a 'src' attribute to have the link work in both contexts, so it can be used as a sort of fallback.

[03:57:00.0000] <annevk>
Hixie, just hit refresh to verify, seems the second ownerWindow ref is still wrong

[03:57:01.0000] <gDashiva>
takkaria: svg in html, appendix C

[04:00:00.0000] <Hixie>
anne: should be ok now

[04:00:01.0000] <annevk>
lol, few days before the E3 Sony says it can't be bothered by Nintendo and now they announce all kinds of competitive features

[04:32:00.0000] <annevk>
what is DOMFrameContentLoaded?

[04:32:01.0000] <annevk>
hmm, seems to be some Firefox event

[04:32:02.0000] <Hixie>
ok, i defined postMessage(m, p, o)

[04:33:00.0000] <Hixie>
let me know if it's separate enoug

[04:33:01.0000] <Hixie>
h

[04:36:00.0000] <Hixie>
ok what else do i need for workers

[04:36:01.0000] <Hixie>
i guess i need to split Window

[04:37:00.0000] <Hixie>
i love how everyone was saying "use a separate spec!"

[04:37:01.0000] <Hixie>
but i've basically ended up having to do tons of work in html5 proper anyway

[04:38:00.0000] <annevk>
Hixie, message is not dispatched on an element and is not dispatched on document either (re: introduction)

[04:39:00.0000] <annevk>
Hixie, I think the latest is that it's dispatched on window

[04:39:01.0000] <Hixie>
hm i just moved that example up

[04:39:02.0000] <Hixie>
i didn't edit it :-)

[04:40:00.0000] <annevk>
that might explain things :p

[04:41:00.0000] <Hixie>
fixed

[04:46:00.0000] <annevk>
yeah, for Workers you need to split Window into main thread only and multithreaded functionality

[04:47:00.0000] <annevk>
but that would've been the case if you kept it in the spec or not

[04:47:01.0000] <Hixie>
sure

[04:48:00.0000] <Hixie>
i'm just amused that the workers spec is going to be about one page long of non-boilerplate material

[04:48:01.0000] <Hixie>
but that the total number of changes will have been dozens of pages

[05:13:00.0000] <annevk>
lol, http://www.p01.org/releases/DHTML_contests/files/DEFENDER_of_the_favicon/

[05:17:00.0000] <Hixie>
wow he is so completely disqualified from ever suggesting anything to html5 again :-P

[05:21:00.0000] <Hixie>
ok Window is split

[05:21:01.0000] <Hixie>
that was easy

[05:21:02.0000] <Lachy>
that's clever, but really difficult to play

[05:22:00.0000] <Lachy>
even if I zoom my screen right in to see it, it's just not enough pixels

[05:23:00.0000] <Philip`>
I can't play the game without the page scrolling annoyingly

[05:23:01.0000] <annevk>
Hixie, why is frames not under self-reference?

[05:23:02.0000] <Hixie>
because workers can't have frames

[05:24:00.0000] <Lachy>
Philip`, make your window bigger so it doesn't have scroll bars

[05:24:01.0000] <annevk>
Hixie, but frames is just a useless alias for self and window

[05:24:02.0000] <annevk>
Hixie, it's nothing special

[05:24:03.0000] <Hixie>
indeed

[05:24:04.0000] <Hixie>
so why have it on workers?

[05:24:05.0000] <annevk>
why have self on workers?

[05:24:06.0000] <Philip`>
Lachy: I'd have to make the window bigger than my screen, which is kind of awkward

[05:25:00.0000] <Hixie>
annevk: because it makes more sense than window

[05:25:01.0000] <Lachy>
Philip`, get a bigger screen with a higher resolution.

[05:25:02.0000] <Philip`>
Lachy: That's expensive :-p

[05:26:00.0000] <Lachy>
it's essential that you have a screen resolution of 1920x1200 so you can play a game of 16x16px

[05:26:01.0000] <gDashiva>
If I reduced my resolution to 640x480, maybe I'd be able to see what was happening

[05:26:02.0000] <annevk>
Hixie, still most people use window and don't use self

[05:26:03.0000] <virtuelv>
Philip`: you can use WASD to move instead -- won't scroll then

[05:26:04.0000] <Philip`>
If you're on OS X, just use the ctrl(?) + mouse-wheel thing to zoom in on the play area

[05:27:00.0000] <gDashiva>
annevk: If anything, self is often shadowed to work around "this" voodoo

[05:27:01.0000] <Lachy>
Philip`, yes

[05:27:02.0000] <Philip`>
virtuelv: It does scroll, since those keys make Opera select links on the page

[05:27:03.0000] <virtuelv>
Philip`: disable one-key shortcuts

[05:27:04.0000] <Hixie>
annevk: right, that's why i'm keeping window too

[05:27:05.0000] <Lachy>
Philip`, write a user style sheet that hides everything else on the page

[05:28:00.0000] <Philip`>
virtuelv: But then shift-G stops working, which is why I turned on one-key shortcuts in the first place

[05:28:01.0000] <Lachy>
what does Shift+G do?

[05:28:02.0000] <virtuelv>
Lachy: toggle images

[05:28:03.0000] <Philip`>
Lachy: Toggle stylesheets

[05:28:04.0000] <virtuelv>
ah, stylesheets it was

[05:29:00.0000] <virtuelv>
Philip`: you could always reassign keys to your own liking :)

[05:29:01.0000] <Philip`>
virtuelv: I'm far too lazy for that

[05:29:02.0000] <Philip`>
and far too indecisive

[05:30:00.0000] <Lachy>
Philip`, just temporarily disable it. I had to disable "Search for text when I start typing" so I could play it too.

[05:30:01.0000] <Philip`>
I can cope with preference checkboxes, but if I get offered a million actions to map onto any permutation of a million keystrokes, I get too confused to do anything at all :-(

[05:31:00.0000] <Lachy>
Philip`, yeah, it's a well known problem that Opera's keyboard shortcut configuration is too complex

[09:05:00.0000] <billyjack>
interesting to see that Kaazing guys will be doing a session on the WebSocket interface at AjaxWorld

[09:05:01.0000] <billyjack>
http://www.sys-con.com/read/609412_p.htm

[12:01:00.0000] <csarven->
http://1997.webhistory.org/www.lists/www-talk.1993q1/0182.html

[13:45:00.0000] <tusho_>
Huh. Why is the sanitizer allowing <p> in <h1>?!

[14:08:00.0000] <gsnedders>
People are crazy.

[14:09:00.0000] <gsnedders>
This is what defining how people have made the real world has taught me.

[14:09:01.0000] <Hixie>
no kiding

[14:09:02.0000] <Hixie>
kidding

[14:10:00.0000] <gsnedders>
Content-Type: text/html;image/gif;image/jpeg; Charset=iso-8859-1;text/javascript

[14:11:00.0000] <jmb>
gsnedders: nice! which one is it really? :)

[14:11:01.0000] <gsnedders>
jmb: Dunno, haven't looked :)

[14:12:00.0000] <gsnedders>
text/html, it's http://www.ecsrefining.com/

[14:13:00.0000] <gsnedders>
you just ignore most of the stuff as invalid parameters, I expect

[14:13:01.0000] <Hixie>
do browsers get the right charset?

[14:13:02.0000] <Hixie>
does html5?

[14:14:00.0000] <gsnedders>
It looks to be pure US-ACSII the actual page

[14:14:01.0000] <gsnedders>
It should be treated as windows-1252

[14:15:00.0000] <gsnedders>
So, yeah, HTML 5 and everything copes fine

[14:16:00.0000] <gsnedders>
text/html; charSet=gb2312;charset=ISO-8859-1 makes me more interested

[14:17:00.0000] <gsnedders>
That is gb2312 really

[14:17:01.0000] <gsnedders>
http://www.mediachina.net/ FWIW

[15:25:00.0000] <Hixie>
what's better. window.closing becoming true when the thread is being shut down, or window.active becoming false when the thread is being shut down.

[15:25:01.0000] <Hixie>
the latter allows for  while(active) { ... }

[15:26:00.0000] <Hixie>
the former allws for  if (closing) return;

[15:28:00.0000] <othermaciej>
will the cancellation design make it meaningful to even ask?

[15:29:00.0000] <Hixie>
i figure when the thread gets canceled we should set this flag, fire an unload event at the next available opportunity, and wait a couple of seconds to see if the thread shuts down cleanly, and if it doesn't, kill it forcibly.

[15:29:01.0000] <Hixie>
seems better to at least give the thread a chance to clean up after itself rather than just always killing it forcibly

[15:31:00.0000] <othermaciej>
POSIX has the notion of registering cancellation cleanup handlers

[15:31:01.0000] <othermaciej>
I'm not sure if "run for a few more seconds" is a useful design point

[15:31:02.0000] <Hixie>
that's what the unload event is for

[15:31:03.0000] <othermaciej>
particularly if those few seconds might be in blocking I/O (assuming blocking IO operations are cancellation points)

[15:32:00.0000] <Hixie>
POSIX doesn't have to worry about the cancelation cleanup handlers trying to do blocking I/O or trying to solve checkers on a 64x64 board.

[15:32:01.0000] <Hixie>
we do.

[15:32:02.0000] <Hixie>
i don't see how we can _not_ have a timeout

[15:32:03.0000] <Hixie>
since we have to basically assume the workers are hostile

[15:33:00.0000] <othermaciej>
I guess what I'm saying is, I think it would be better to terminate normal flow execution of the thread (if any) immediately, fire the cancellation-related event, and then have a timeout

[15:33:01.0000] <othermaciej>
having the thread keep running means you need two timeouts

[15:33:02.0000] <Hixie>
that's a bit extreme, you might be in the middle of a 10ms transaction when you get terminated

[15:34:00.0000] <othermaciej>
and sprinkling your code with "am I cancelled" checks would be ugly and in some cases not really possible anyway

[15:34:01.0000] <Hixie>
i guess i don't mind having two timeouts if you think we need it, but i certainly think we need at least to give the main code the opportunity to run to completion before we kill it

[15:34:02.0000] <othermaciej>
that misses the point of cancellation

[15:35:00.0000] <othermaciej>
if the main code could be trusted to run to completion in reasonable time, you could just send the thread a message to kill itself

[15:35:01.0000] <Hixie>
i think you're assuming that workers are going to always be running non-stop code

[15:35:02.0000] <othermaciej>
no, I'm assuming they might be

[15:35:03.0000] <othermaciej>
cancellation is most important for the case where they are

[15:36:00.0000] <othermaciej>
if they aren't you can use messages to establish a protocol to stop the thread's activity

[15:36:01.0000] <Hixie>
i'm imagining many workers will be mostly idle and will be mostly doing very short event handler type code -- receive an event, store the data in the database. And for those cases, you absolutely never want to abort in the middle of the handler, since that might corrupt your database or lose data.

[15:36:02.0000] <othermaciej>
aborting would not corrupt your database because they have transactional semantics

[15:37:00.0000] <othermaciej>
the database operation must either complete or roll back

[15:37:01.0000] <Hixie>
assumign they do it right, sure

[15:37:02.0000] <Hixie>
you'll still lose data

[15:37:03.0000] <Hixie>
i don't see any reason not to give those handlers time to complete, they won't be taking long anyway.

[15:38:00.0000] <othermaciej>
if you can afford to wait for them, then you can just postMessage to the thread and ask it to stop further activity

[15:38:01.0000] <othermaciej>
if you absolutely want to guarantee that any pending I/O finishes, you have to do that anyway

[15:38:02.0000] <othermaciej>
a timeout gives you the worst of both worlds

[15:39:00.0000] <othermaciej>
no guarantee the I/O will complete, and no guarantee the thread stops promptly

[15:39:01.0000] <Hixie>
that's what the unload event is for

[15:39:02.0000] <othermaciej>
if you need to register an event handler to ensure that cancellation is clean, then there's no benefit to your main code continuing to run

[15:39:03.0000] <Hixie>
i don't understand what you are proposing or why

[15:42:00.0000] <othermaciej>
I'm proposing that cancellation stops whatever is executing right away, and invokes any registered cancellation handlers with a timeout limit

[15:43:00.0000] <Hixie>
how does that not cause dataloss in the case of a thread having just received a message asking it to store data?

[15:43:01.0000] <othermaciej>
and I explained why - letting the main code continue to run defeats the most important use case for cancellation, which is a thread that's busy doing a long computation

[15:43:02.0000] <othermaciej>
the other way causes data loss too, if the message has not been dispatched yet

[15:44:00.0000] <othermaciej>
(unless the thread registers a cancellation handler, but I guess there is no way to explicitly drain the message queue)

[15:44:01.0000] <Hixie>
unload would be added to the queue of events, it would be the last fired event.

[15:44:02.0000] <othermaciej>
you shouldn't cancel a thread if you sent it a message that you actually need to be processed

[15:44:03.0000] <Hixie>
the author isn't the one canceling the thread

[15:44:04.0000] <Hixie>
the user is

[15:44:05.0000] <othermaciej>
you should ask it to finish itself instead

[15:45:00.0000] <othermaciej>
so this is for leaving the page, not for an explicit cancellation API?

[15:45:01.0000] <Hixie>
we're talking about the user closing the window or something like that, yes

[15:47:00.0000] <othermaciej>
well for code on the main thread, there's no specific timeout for currently running code defined, and unload gets to run with no specific timeout defined

[15:47:01.0000] <othermaciej>
(as well as beforeunload which has the opportunity to cancel the close / leave operation)

[15:47:02.0000] <Hixie>
the spec doesn't define a timeout, but there is a timeout

[15:48:00.0000] <Hixie>
and arguably the spec should define that (though the precise number would be up to the UA)

[15:48:01.0000] <othermaciej>
in the case of Safari the timeout would be the general slow script timeout

[15:48:02.0000] <Hixie>
right

[15:49:00.0000] <othermaciej>
anyway I see that this is a trickier design problem than what I thought you were talking about (API for thread cancellation)

[15:50:00.0000] <Hixie>
ah ok

[15:50:01.0000] <Hixie>
the API for thread cancellation is simple

[15:50:02.0000] <Hixie>
just send an event and be done with it

[15:50:03.0000] <Hixie>
i don't know that i'll even add anything explicit for that

[15:50:04.0000] <othermaciej>
you need to be able to cancel a thread that is blocked or in the middle of computation

[15:51:00.0000] <Hixie>
maybe just the "close()" method of the message port objects

[15:51:01.0000] <othermaciej>
postMessage conventions can't do that

[15:51:02.0000] <Hixie>
why?

[15:51:03.0000] <Hixie>
i mean, why is that necessary

[15:53:00.0000] <othermaciej>
to avoid wasting CPU cycles if you fire off long-running computation that turns out to be unnecessary

[15:54:00.0000] <Hixie>
hm

[15:54:01.0000] <othermaciej>
and to make it slightly easier not to make all your threads be runaways (otherwise you have to set up a message handler in the thread to cancel all timers and pending I/O when asked to stop, seems like a needless pain)

[15:55:00.0000] <Hixie>
well if all the channels to a worker get closed, you kill the thread as if the user had killed it

[15:55:01.0000] <Hixie>
though you'd still want to use a timeout to allow the thread to empty it's message queue

[15:55:02.0000] <Hixie>
its

[15:56:00.0000] <othermaciej>
closing all channels as implicit termination is a bit weak (you have to keep track of all channels you may have vended)

[15:57:00.0000] <othermaciej>
and also I guess counts on the worker object itself not being a message target, or else you have to make sure to drop all refs and let it get GC'd to really kill it

[15:57:01.0000] <Hixie>
isn't that a good thing? why would you want to kill a worker if some other frame has a handle to it? especially given that that could mean the thread dying while someone is talkign to it

[15:58:00.0000] <Hixie>
well the way i'm currently speccing it, there is no worker object on the outside

[15:58:01.0000] <Hixie>
only the channels

[15:58:02.0000] <Hixie>
creating a worker gets you a channel to that worker

[15:58:03.0000] <othermaciej>
I see

[15:59:00.0000] <othermaciej>
is there a way to copy the channel (so that you have multiple copies which independently need to be closed)?

[15:59:01.0000] <Hixie>
if the worker is named, you can get multiple independent windows (from the same origin) getting channels to a single worker

[15:59:02.0000] <Hixie>
and since you can send a port down a channel, you can associate multiple channels with a worker, yes

[16:00:00.0000] <Hixie>
they're not the same channel, just different channels that have one end owned by the worker

[16:01:00.0000] <othermaciej>
I don't think open channels controlling the lifecycle makes sense

[16:01:01.0000] <Hixie>
why not?

[16:01:02.0000] <othermaciej>
having an open channel wouldn't keep a Window alive presumably, if that window is otherwise closed

[16:02:00.0000] <Hixie>
if a window closes, or has its session history traversed, channels to that window have their other end temporarily deactivated

[16:02:01.0000] <Hixie>
(the channels get permanently deactivated when the window is garbage collected)

[16:19:00.0000] <annevk>
Hixie, is Workers going to define a new database and local storage API and such?


2008-07-16
[03:06:00.0000] <annevk>
Hixie, "The closing attribute must return false until the "kill a worker" processing model defined below sets it to false."

[05:49:00.0000] <Lachy>
Hixie, yt?

[05:55:00.0000] <Lachy>
never mind.

[06:34:00.0000] <maikmerten>
hmm... as for the audio canvas... I was about to write to the list that this might have security implications (generate signals damaging amplifiers, speakers and ears), but then I recognized that this works nicely with prerecorded audio files as well ;)

[06:35:00.0000] <Philip`>
You could make a page with a very loud 20kHz background sound, so that most people won't even notice it but small children and dogs will get very annoyed

[06:35:01.0000] <maikmerten>
aye

[06:37:00.0000] <maikmerten>
perhaps in future Creative will try to sell "security enabled" soundcards and speaker systems that detect potentially harmful audio signals ;)

[06:38:00.0000] <Philip`>
Or you could just buy cheap speakers with a very limited frequency range and volume :-)

[06:38:01.0000] <maikmerten>
:)

[06:41:00.0000] <Philip`>
/me wonders when we'll get microphone and webcam APIs

[06:42:00.0000] <annevk>
http://lists.w3.org/Archives/Public/www-style/2008Jul/0354.html -_-

[07:01:00.0000] <gDashiva>
Philip`: Well, flash does it already, doesn't it?

[07:36:00.0000] <Lachy>
krijn, yt?

[07:50:00.0000] <krijn>
Lachy: yes

[12:26:00.0000] <tusho>
What would be a good tag for 'actual page'?

[12:27:00.0000] <tusho>
Header, actual page, footer

[12:51:00.0000] <Hixie>
this global object nonsense is going to be painful to specify

[14:27:00.0000] <Hixie>
i just found an occurance of "the the" in the spec

[14:27:01.0000] <Hixie>
which due to copy/paste over the past few months

[14:27:02.0000] <Hixie>
was actually four occurances

[14:27:03.0000] <Hixie>
yay copy/paste.

[14:28:00.0000] <Hixie>
it's sad that i only write new words like 10% of the time

[14:28:01.0000] <Hixie>
i almost always just find something that says vaguely what i want to say and then fix it up

[14:29:00.0000] <takkaria>
sounds like coding

[14:35:00.0000] <Philip`>
That makes the spec more accessible to low-bandwidth users, since copied-and-pasted text gets good gzip compression

[14:36:00.0000] <Hixie>
hah

[14:44:00.0000] <gsnedders>
ergh.

[14:46:00.0000] <gsnedders>
the postprocessor strips everything apart from ASCII alphanumeric characters and spaces for xref

[14:48:00.0000] <gsnedders>
and I don't do that

[14:48:01.0000] <gsnedders>
causes compat. issues for HTML 5

[14:49:00.0000] <gsnedders>
It also makes NFD é == e

[15:12:00.0000] <gsnedders>
it's behaviour is so weird all over the place

[15:12:01.0000] <gsnedders>
I'm going insane.

[15:12:02.0000] <gsnedders>
(and of course things like HTML 5 _rely_ on that behaviour)

[15:16:00.0000] <Philip`>
gsnedders: Why not just fix HTML 5?

[15:16:01.0000] <gsnedders>
Philip`: other specs will rely on it too

[15:16:02.0000] <gsnedders>
Philip`: so better have it in w3c-compat mode

[15:16:03.0000] <gsnedders>
(I won't have it in the non-compat mode, though)

[16:04:00.0000] <gsnedders>
Hixie: I now have a copy of the spec-gen that is quicker than the W3C CSS WG Postprocessor!

[16:05:00.0000] <gsnedders>
0m3.752s

[16:06:00.0000] <Philip`>
On a many-gigahertz multi-core processor?

[16:07:00.0000] <gsnedders>
On a 2.4GHz Core 2 Duo MBP :)

[16:07:01.0000] <Philip`>
That's an awful lot of clock cycles just to process a text file

[16:07:02.0000] <gsnedders>
It can certainly be made quicker still


2008-07-17
[17:13:00.0000] <Hixie>
gsnedders: let me know if there are things i should fix in html5 to get around insanity

[17:13:01.0000] <Hixie>
gsnedders: also, i have a feature request for you to hate me for

[17:13:02.0000] <Hixie>
gsnedders: is there any way i can get the web workers spec's cross-references to reference into the html5 spec? :-)

[17:14:00.0000] <Hixie>
gsnedders: wow, how'd you make it so quick?

[17:14:01.0000] <Hixie>
that's awesome!

[17:17:00.0000] <annevk>
I wonder if that's using the C parser rather than html5lib

[17:56:00.0000] <Hixie>
someone just contacted me asking if there was anywhere he could tell us how stupid he thought html5 was

[17:56:01.0000] <Hixie>
/me pointed him to all the usual channels (irc, forums, blog, mailing list, etc)

[17:59:00.0000] <jruderman>
i think html5 is this stupid:  -----><----

[18:01:00.0000] <Hixie>
wow, not stupid at all

[18:01:01.0000] <Hixie>
i'm impressed

[18:02:00.0000] <Hixie>
i think html5 is at least this stupid: ----->| |<--

[18:02:01.0000] <franksalim>
jruderman, my line broke such that i saw that as arrows pointed in opposite directions

[18:02:02.0000] <Hixie>
(hopefully mine didn't line break for anyone)

[18:02:03.0000] <franksalim>
infinitely stupid

[18:02:04.0000] <Hixie>
or negatively!

[18:03:00.0000] <franksalim>
hey yeah

[18:03:01.0000] <Hixie>
and the science gets done, and you make a neat gun, for the people who are still alive.

[18:05:00.0000] <jcranmer>
I think the CSS debate over whether or not roc's bling is outside the scope is about as pointless as this sentence

[18:05:01.0000] <jcranmer>
/me looks for a way to scrub the dots off of the i's

[18:09:00.0000] <Hixie>
jcranmer: U+0131 :-)

[18:09:01.0000] <jcranmer>
in that case,

[18:10:00.0000] <jcranmer>
I thınk the CSS debate over whether or not roc's blıng ıs outsıde the scope of CSS ıs about as poıntless as thıs sentence

[18:10:01.0000] <Hixie>
:-)

[18:11:00.0000] <jcranmer>
I was going to do the stupid with the arrows thing, until I realized it could be interpreted in two different manners

[18:11:01.0000] <Hixie>
/me scrubs his morning's stupidity off html5

[18:12:00.0000] <jcranmer>
--><-- could mean that there's no distance, so, ergo, it could be as stupid as nothing, or not stupid at all

[18:12:01.0000] <jcranmer>
unless you think that nothing is stupid

[18:12:02.0000] <takkaria>
this debate seems both stupid and pointless. :)

[18:12:03.0000] <jcranmer>
precisely

[18:13:00.0000] <jcranmer>
or something like that

[18:15:00.0000] <Hixie>
should a thread have a way to self-terminate, or should it only terminate when all of the channels connecting into it have themselves closed?

[18:15:01.0000] <Hixie>
if it can self-terminate, should that send an explicit unload through those channels?

[18:16:00.0000] <Hixie>
if it does, what about channels that the other end doesn't realise point into a worker?

[18:16:01.0000] <Hixie>
hmm

[18:19:00.0000] <jgraham>
Having threads able to self terminate sounds nice but I'm tired and should have been asleep some time ago so I'm not going to think about it now :)

[19:15:00.0000] <takkaria>
http://www.marcozehe.de/2008/07/16/wordpress-26-brings-a-lot-of-accessibility-improvements/ makes me sad

[19:15:01.0000] <takkaria>
aria introduced aria-required so that screenreaders know that an attribute is required

[19:15:02.0000] <takkaria>
er, text input, you know what I mean

[19:15:03.0000] <takkaria>
WF2 has its own required attribute

[19:17:00.0000] <takkaria>
and now aria-required is getting deployed widely, when instead the wf2 one could be getting deployed widely instead

[19:18:00.0000] <takkaria>
not worth lingering on, I guess, but it's a bit sad

[19:24:00.0000] <annevk>
bolt-on accessibility prolly pays better consultancy fees

[20:17:00.0000] <Hixie>
hmm

[20:17:01.0000] <Hixie>
how should we join a named worker

[20:18:00.0000] <Hixie>
we could have a method joinOrCreateNamedWorker(name, url) that looks for a worker named name, and if it fails to find one, creates one from URL url and gives it that name

[20:18:01.0000] <Hixie>
or we could have the same, but indexed on url _and_ name

[20:19:00.0000] <Hixie>
or we could just index on url

[20:19:01.0000] <Hixie>
we couldn't just have joinNamedWorker() because that would have a race condition if two threads tried to create the same shared worker at the same time

[20:19:02.0000] <Hixie>
hmmmmm

[20:22:00.0000] <othermaciej>
Hixie: in the threading context people might expect "join" to mean something else

[20:22:01.0000] <othermaciej>
Hixie: are named workers really necessary?

[20:22:02.0000] <othermaciej>
they remind me of my hate for named frame targetting

[20:23:00.0000] <Hixie>
one of the requests was for shared threads so that e.g. multiple gmail windows don't all try to mash the client's database at the same time

[20:23:01.0000] <Hixie>
i'm open to other solutions

[20:23:02.0000] <Hixie>
but i think it makes sense to have a single thread accessible by multiple windows that otherwise wouldn't know about each other

[20:24:00.0000] <Hixie>
(the namespace would definitely be per-origin)

[20:24:01.0000] <othermaciej>
I guess the alternative would be to have an alternate mechanism for windows from the same domain to send each other messages without directly knowing of each other

[20:24:02.0000] <Hixie>
then they have to negotiate a leader, which seems complicated in the face of a user closing windows

[20:25:00.0000] <Hixie>
i'd rather not have web authors have to implement windows-networking-style "browser elections"

[20:25:01.0000] <othermaciej>
I guess named threads are less bad if the namespace is separate for every origin

[20:25:02.0000] <othermaciej>
part of the problem with named frame/window targetting is the lack of namespace control

[20:26:00.0000] <Hixie>
should we make the namespace be not only per-origin but per-script-url?

[20:26:01.0000] <Hixie>
or is that excessive

[20:27:00.0000] <othermaciej>
seems excessive

[20:27:01.0000] <othermaciej>
one thing that concerns me is that having this as the sole mechanism for messaging between instances of a web app in different windows will lead to web apps spawning workers when they don't really need them, except for messaging

[20:27:02.0000] <othermaciej>
actually I guess you can use LocalStorage for messaging

[20:28:00.0000] <othermaciej>
(just no way to pass a MessagePort through it)

[20:28:01.0000] <Hixie>
are there other uses for messaging across windows? i'm happy to add some sort of same-origin, disconnected-window postMessage() mechanism

[20:28:02.0000] <Hixie>
but i haven't heard of any requests to do that

[20:28:03.0000] <othermaciej>
LocalStorage plus the change event already provides that

[20:28:04.0000] <Hixie>
if it's just sharing state, yeah

[20:29:00.0000] <Hixie>
how we design a solution depends on the problem, but i don't really know the problem on this one

[20:29:01.0000] <othermaciej>
updating UI state in multiple instances in response to a user action

[20:29:02.0000] <othermaciej>
would be one use case

[20:29:03.0000] <othermaciej>
but I think LocalStorage is fine for that

[20:29:04.0000] <Hixie>
yeah

[20:30:00.0000] <Hixie>
or, frankly, websocket

[20:30:01.0000] <Hixie>
since you'd want that to work cross-machine too

[20:30:02.0000] <othermaciej>
depends on the type of change

[20:31:00.0000] <othermaciej>
if it is a preference type setting you may want it to be per-machine

[20:31:01.0000] <Hixie>
true

[20:31:02.0000] <othermaciej>
alternately you may not want to wait for a network round trip to update locally

[20:31:03.0000] <othermaciej>
or you may be offline

[20:32:00.0000] <othermaciej>
is there a way to run a script by URL in an unnamed worker after it is already running?

[20:32:01.0000] <othermaciej>
(if so you only really need an API to get a worker by name and you don't have to care if it was created or retrieved)

[20:32:02.0000] <Hixie>
how do you mean?

[20:33:00.0000] <othermaciej>
well joinOrCreateNamedWorker(name, url) lets you run a new script in an existing worker

[20:33:01.0000] <othermaciej>
(I presume from the method signature)

[20:33:02.0000] <othermaciej>
but only a named one

[20:33:03.0000] <Hixie>
the idea was that it would either join one in progress, or fetch url, create a worker, run that script, and join that worker

[20:33:04.0000] <Hixie>
it wouldn't run url in the worker if it joined it

[20:34:00.0000] <Hixie>
(i'm looking for better names if you have any ideas)

[20:34:01.0000] <Hixie>
(right now i'm using createNamedWorker)

[20:34:02.0000] <othermaciej>
that seems like a potentially confusing design

[20:34:03.0000] <Hixie>
agreed

[20:34:04.0000] <Hixie>
not sure what is better though

[20:35:00.0000] <Hixie>
(btw, we might cut all this joining stuff out altogether in due course, but let's for now assume we're trying to address this use case)

[20:35:01.0000] <Hixie>
(that way we have a clear extension path even if we do decide to cut it from v1)

[20:35:02.0000] <othermaciej>
I twitch whenever you say "join" because in threading terminology, to join a thread means to block and wait for it to terminate

[20:36:00.0000] <Hixie>
these aren't threads, as you pointed out :-P

[20:36:01.0000] <Hixie>
what's a better term

[20:36:02.0000] <Hixie>
?

[20:36:03.0000] <othermaciej>
"get"

[20:36:04.0000] <othermaciej>
(since you're just retrieving an ID)

[20:36:05.0000] <Hixie>
ok

[20:36:06.0000] <othermaciej>
(and it's normal for get to have "or create if needed" semantics)

[20:37:00.0000] <othermaciej>
(or at least not uncommon)

[20:37:01.0000] <Hixie>
i could call it getNamedWorker(), but then it looks weird because the two methods are createWorker() and getNamedWorker()

[20:38:00.0000] <Hixie>
and they are both ways to create workers

[20:38:01.0000] <Hixie>
(though one "gets" a worker if it can)

[20:38:02.0000] <othermaciej>
create always makes a new one

[20:38:03.0000] <othermaciej>
you could also call the other one create and not worry about it sometimes reusing

[20:38:04.0000] <Hixie>
(btw i was using "join" in the old tv sense of "we now join this programme, already in progress")

[20:39:00.0000] <Hixie>
yeah calling both create() is what my original proposal had

[20:39:01.0000] <othermaciej>
I think maybe there should be an object identifying a worker separate from the port which has a method to queue a script to run in the worker (by URL or source text)

[20:39:02.0000] <othermaciej>
then you can separate loading a script from creation

[20:40:00.0000] <othermaciej>
but still be able to vend the port without letting the recipient run arbitrary code in the worker

[20:40:01.0000] <Hixie>
that would be weird

[20:41:00.0000] <Hixie>
kinda like navigating a frame to a javascript: uri

[20:41:01.0000] <Hixie>
to make it run script

[20:41:02.0000] <othermaciej>
or like injecting a <script> element on a frame or calling eval() on a frame

[20:41:03.0000] <othermaciej>
but asynchronous of course

[20:41:04.0000] <Hixie>
yeah

[20:42:00.0000] <Hixie>
not sure we really want to go there

[20:42:01.0000] <othermaciej>
it just seems odd that you can only make a thread load a script when creating it

[20:42:02.0000] <Hixie>
just consider the script to _be_ the thread

[20:42:03.0000] <Hixie>
then it's not so weird

[20:42:04.0000] <othermaciej>
(obviously you need to at least in that case, so that it can bootstrap, but why are they tied?)

[20:42:05.0000] <othermaciej>
then createNamedWorker should fail if the URL doesn't match

[20:42:06.0000] <Hixie>
ok

[20:43:00.0000] <Hixie>
that makes sense

[20:43:01.0000] <othermaciej>
but I don't think it makes sense to say that the script *is* the thread

[20:43:02.0000] <othermaciej>
it's just the startup code, then the thread sits and waits for events / timers / etc

[20:43:03.0000] <Hixie>
well i don't say that, but that's more like how i envisage it, as opposed to a bucket you throw scripts into willy nilly

[20:45:00.0000] <othermaciej>
it should at least be able to load additional scripts into itself

[20:45:01.0000] <Hixie>
oh yes, for sure

[20:45:02.0000] <Hixie>
a worker can call include(url)

[20:45:03.0000] <Hixie>
which blocks for fetching the url and running it inline

[20:45:04.0000] <Hixie>
(at least, it is going to block unless someone wants it not to)

[20:46:00.0000] <Hixie>
(i don't really care either way, but blocking seems easiest and safe in this case)

[20:46:01.0000] <othermaciej>
maybe import(url) is better, since presumably it would not textually include

[20:46:02.0000] <Hixie>
import() it is

[20:46:03.0000] <Hixie>
(remind me to rename it if i end up calling it include() anyway, i haven't specced that bit yet)

[20:47:00.0000] <othermaciej>
sure

[20:53:00.0000] <Hixie>
when someone "gets" a worker, it sends an event to the worker with a port

[20:53:01.0000] <Hixie>
what should that even be called?

[20:53:02.0000] <Hixie>
(it used to be called 'join')

[20:55:00.0000] <Hixie>
it's the same message that gets fired when a worker is created in the first place, to give it the port for the channel back to its creator

[21:26:00.0000] <heycam>
Hixie, is the styling on the w3 hosted copy of the spec deliberately a bit more bland now?

[21:26:01.0000] <heycam>
e.g. no borders/backgrounds around idl sections, or the colourful backgrounds of the element definition sections?

[21:27:00.0000] <Hixie>
yeah i removed the custom style sheet because the w3c pubrules say not to add custom styles

[21:27:01.0000] <Hixie>
noticed it while i was doing the web workers spec

[21:28:00.0000] <Hixie>
i wouldn't have worried too much about it except the stylesheet was like a page long, which i assume is exactly hte kind of thing the pubrules are trying to avoid

[21:28:01.0000] <heycam>
it's harder to read now though

[21:28:02.0000] <Hixie>
use the whatwg version :-)

[21:28:03.0000] <heycam>
and i'm sure other specs use custom stylesheets

[21:28:04.0000] <Hixie>
i'm hoping the w3c style sheet will have some classes added that i can hook onto

[21:28:05.0000] <heycam>
the w3 version's url is easier to remember :)

[21:29:00.0000] <Hixie>
whatwg.org/html5

[21:29:01.0000] <heycam>
ok that might be shorter

[21:31:00.0000] <Hixie>
it's also the first hit got "html5" on google, so in firefox you can just type "html5" in the location bar and hit enter

[21:32:00.0000] <Hixie>
oh actually i guess it doesn't do an i'm feeling lucky search for that term

[21:32:01.0000] <Hixie>
weird

[21:32:02.0000] <Hixie>
anyway

[21:32:03.0000] <Hixie>
whatwg.org/html5

[21:36:00.0000] <Hixie>
bbiab

[21:42:00.0000] <jacobolus>
wow.  what a useful shorter link. :)

[21:43:00.0000] <jacobolus>
my general method has been a google lucky search for 'html5' :)

[21:43:01.0000] <heycam>
google.com/search?q=html5&btnI=1 -- still a bit long :)

[21:44:00.0000] <jacobolus>
heycam: well for me, it’s just `go html5`

[21:44:01.0000] <heycam>
i wondered why my firefox was getting slow, and then i realised i had 3 copies of the html5 spec open in different windows

[21:45:00.0000] <heycam>
(plus about 40 other tabs)

[22:26:00.0000] <Hixie>
heycam: hah

[22:27:00.0000] <Hixie>
right now webkit seems the most able to handle the one-page version of the html5 spec

[23:20:00.0000] <MikeSmith>
Hixie: I'd really like for you to add the stylesheet back

[23:21:00.0000] <MikeSmith>
Hixie: as far as I cant tell, pubrules does not seems to absolutely forbid custom stylesheets

[23:21:01.0000] <MikeSmith>
the only thing I can find that it says is:

[23:21:02.0000] <MikeSmith>
"Any internal style sheets MUST be cascaded before this link; i.e., the internal style sheets MUST NOT override the W3C tech report styles."

[01:10:00.0000] <Hixie>
ok i added rules for the various classes html5 uses (idl, note, issue, example, warning)

[01:12:00.0000] <MikeSmith>
Hixie: cool, thanks

[01:13:00.0000] <MikeSmith>
we really should have some styles for all those things in the stock stylesheets, so I'll try to get them added

[01:13:01.0000] <MikeSmith>
quietly

[01:14:00.0000] <heycam>
MikeSmith, i quite like the style used on the actual w3c manual of style page

[01:14:01.0000] <heycam>
will the revisions to the TR stylesheets make them look like that?

[01:15:00.0000] <MikeSmith>
heycam: about the manual of style, you mean the aqua stuff with the blue bars?

[01:15:01.0000] <heycam>
MikeSmith, yeah

[01:16:00.0000] <heycam>
that, and using an ok non-default sans-serif font

[01:16:01.0000] <MikeSmith>
I don't know what the styles will look like because I will not be doing them

[01:16:02.0000] <heycam>
but yes the light black background thick dark blue top/bottom border style for the references i particularly like

[01:17:00.0000] <MikeSmith>
but that manual-of-style styles look pretty good to me too

[01:21:00.0000] <MikeSmith>
anyway, I will try to get some note/example/IDL-block styles in the WD/Rec stylesheets

[01:21:01.0000] <MikeSmith>
we really ought to have consistent styles for those across all published specs

[01:22:00.0000] <MikeSmith>
for consistency

[01:22:01.0000] <MikeSmith>
rather N of use reinventing N different styles for it

[01:23:00.0000] <MikeSmith>
I just hope it can be done quietly and quickly

[01:24:00.0000] <MikeSmith>
rather than, say, be opened up for wider suggestions/opinions and turning into a bikeshed discussion

[02:06:00.0000] <MikeSmith>
.warning { color: yellow; background: maroon; }

[02:06:01.0000] <MikeSmith>
interesting choice there, Hixie 

[03:00:00.0000] <heycam>
/me thinks hixie has chosen colours to drive people to the whatwg version :)

[03:34:00.0000] <Lachy>
I'm looking into the queryScopedSelector proposal now, and trying to figure out the pre-parsing rules for it. http://lists.w3.org/Archives/Public/public-webapi/2008May/0058.html

[03:35:00.0000] <Lachy>
but it seems to be a lot more complicated that othermaciej's proposal

[03:36:00.0000] <Lachy>
cause I have to handle things like commas in functional pseudos: 'div:foo(x,y), >p'

[03:39:00.0000] <Lachy>
strings: a[title="foo, bar"], span[title="escaped \" quote \' marks"]

[03:42:00.0000] <Lachy>
I wonder if I just define that it uses the same grammar as selectors, except that the selector production becomes:

[03:42:01.0000] <Lachy>
selector : combinator? simple_selector_sequence [ combinator simple_selector_sequence ]*

[03:56:00.0000] <gsnedders>
Hixie: annevk was right: using the C parser (as in, lxml.html, libxml2's HTML parser)

[03:57:00.0000] <gsnedders>
Hixie: There are things you should fix in HTML 5, but they're needed in w3c-compat

[03:57:01.0000] <gsnedders>
Hixie: It should be able to create a usable version of HTML 5, as it is currently, in the w3c-compat mode

[03:57:02.0000] <Hixie>
send me mail or file a bug or let me know tomorrow and i'll fix them

[03:58:00.0000] <Hixie>
we have to make a clibhtml5 at some point

[03:58:01.0000] <gsnedders>
Yeah, certainly.

[03:58:02.0000] <gsnedders>
Philip` said on Monday last week that there was no single bottleneck now in html5lib/py

[03:58:03.0000] <Hixie>
did the suggestion i made scare you too much btw, or is it something you might be able to do? :-)

[03:58:04.0000] <gsnedders>
Hixie: Not for 1.0 :)

[03:59:00.0000] <Hixie>
i hope 1.1 ships soon :-D

[03:59:01.0000] <gsnedders>
(but there again, the criteria for 1.0's release are more or less just being able to do HTML 5 correctly :D)

[03:59:02.0000] <Hixie>
:-)

[04:00:00.0000] <gsnedders>
1.1 will probably be other stuff that other people from the postprocessor

[04:00:01.0000] <gsnedders>
1.2 is probably when I'll start adding really new stuff like that :P

[04:01:00.0000] <Hixie>
i hope 1.2 ships soon :-D

[04:01:01.0000] <gsnedders>
:D

[04:20:00.0000] <gsnedders>
Hixie: applicationcache is a dupe dfn

[04:21:00.0000] <Hixie>
no, one has a title="" of dom-applicationcache

[04:23:00.0000] <gsnedders>
No, that's not the bug :)

[04:24:00.0000] <gsnedders>
I'm doing too much whitespace normalisation now

[04:24:01.0000] <gsnedders>
<dfn>application cache</dfn> == <dfn>ApplicationCache</dfn>

[04:33:00.0000] <gsnedders>
Interesting.

[04:33:01.0000] <gsnedders>
the postprocessor removes any existing @class=seco

[04:33:02.0000] <gsnedders>
*secno

[04:44:00.0000] <Philip`>
gsnedders: The input stream is still a bit of a bottleneck, and I got reasonable improvements by rewriting a couple of its methods in C; but after that, it seemed like the rest of the time was spread around the entire tokeniser, so that whole thing would have to be rewritten in C

[04:45:00.0000] <gsnedders>
Then do so! :P

[04:45:01.0000] <Hixie>
nn

[04:45:02.0000] <Philip`>
(The improvement from writing the input stream in C is probably too low to be worth the cost of being a binary module)

[04:45:03.0000] <gsnedders>
Hixie: night

[04:46:00.0000] <Philip`>
gsnedders: It'd probably be most sensible to hook in Hubbub, and maybe try feeding its tokeniser output into the Python tree builders

[04:48:00.0000] <gsnedders>
hmm, I want some xpath statement like //*[contains(., '[DATE')], but one that doesn't return all ancestors too

[04:55:00.0000] <gsnedders>
/text()[contains(., '[DATE')]/..

[04:57:00.0000] <Philip`>
You should use //*[foo()] where foo is a user-defined function that does what you want

[04:58:00.0000] <Philip`>
/me wonders if any XPath implementations actually support user-defined functions

[04:58:01.0000] <gsnedders>
Is that not XPath 2?

[04:59:00.0000] <gsnedders>
No, it is allowed in XPath 1

[04:59:01.0000] <gsnedders>
/me shrugs

[05:00:00.0000] <gsnedders>
/text()[contains(., '[DATE')]/.. is what the above should be

[05:00:01.0000] <gsnedders>
wait, //text()[contains(., '[DATE')]/..

[05:00:02.0000] <gsnedders>
Duh. the first / is eaten by IRC.

[05:00:03.0000] <gsnedders>
/me headdesks

[05:04:00.0000] <gDashiva>
gsnedders: So your problem is solved then

[05:04:01.0000] <gsnedders>
sure.

[05:04:02.0000] <gsnedders>
:P

[05:11:00.0000] <gsnedders>
(it's odd that this is actually quicker using xpath)

[05:12:00.0000] <gsnedders>
aim for today: get HTML 5 processed in under 3s

[05:25:00.0000] <MikeSmith>
gsnedders: odd that it's quicker than what?

[05:25:01.0000] <MikeSmith>
btw, you using lxml.etree.XPath() ?

[05:26:00.0000] <gsnedders>
MikeSmith: manually iterating and doing it all in Python, which is normally quicker

[05:26:01.0000] <gsnedders>
MikeSmith: yeah

[05:29:00.0000] <MikeSmith>
gsnedders: what's this tool you been working on? what's it do?

[05:29:01.0000] <gsnedders>
MikeSmith: The spec-gen? Basically the same as the CSS WG's Postprocessor

[05:29:02.0000] <MikeSmith>
ah cool

[05:29:03.0000] <MikeSmith>
that will be great to have

[05:30:00.0000] <takkaria>
gsnedders: so you're using libxml2's html parser at the moment for it?

[05:30:01.0000] <gsnedders>
(half the point is just so people like me, non W3C members, can access it)

[05:31:00.0000] <gsnedders>
takkaria: By default it uses html5lib, but it can also use that or it's XML parser

[05:31:01.0000] <gsnedders>
s/'//

[05:31:02.0000] <takkaria>
right

[05:32:00.0000] <MikeSmith>
would be great to have a python interface to hubbub, through lxml or however

[05:33:00.0000] <MikeSmith>
takkaria: would be cool to have simple command-line utility built from hubbub

[05:33:01.0000] <MikeSmith>
that is, like the parse.py thing for html5lib

[05:39:00.0000] <takkaria>
the idea of feeding hubbub's tokeniser through lxml's treebuilder seems to be a good one for speeding up html5lib

[05:42:00.0000] <MikeSmith>
takkaria: yeah

[06:59:00.0000] <hdh>
Hixie: in Link type "icon", "either width string or height string start with" should read "starts"

[07:03:00.0000] <Philip`>
There's about a million other places where the spec has grammar issues like that

[07:53:00.0000] <gsnedders>
Hixie ought to learn English.

[08:16:00.0000] <gsnedders>
"If url doesn't match the <URI-reference> production, even after the above changes are made to the ABNF definitions, then parsing the URL fails with an error."

[08:17:00.0000] <gsnedders>
In what cases can it fail?

[08:43:00.0000] <mpt>
/me wonders what one is supposed to do to get HTML 5 sectioning elements working in IE

[08:43:01.0000] <Philip`>
mpt: <script>document.createElement('section')</script> should make it parse better

[08:44:00.0000] <Philip`>
(if you run that script some place before you use a <section> element)

[08:45:00.0000] <mpt>
Philip`, does that need to be done for each <section> element in the page?

[08:45:01.0000] <Philip`>
mpt: No - it just needs to be done once, and then IE's parser will recognise that element as being an XML-like element for the rest of the page

[08:45:02.0000] <mpt>
ah, neat

[08:46:00.0000] <mpt>
I guess the same applies to <aside>

[08:46:01.0000] <Philip`>
(where "XML-like" means you can do <section/> etc)

[08:46:02.0000] <Philip`>
Yep

[08:46:03.0000] <mpt>
I was expecting to find tricks like this on the wiki, but I couldn't find any authoring info there

[08:46:04.0000] <smedero>
There's some discussion around that method on Sam Ruby's blog: http://www.intertwingly.net/blog/2008/01/22/Best-Standards-Support

[08:47:00.0000] <smedero>
(sorta, scattered across the comments)

[08:47:01.0000] <smedero>
ahh right, and here: http://ejohn.org/blog/html5-shiv/

[08:48:00.0000] <mpt>
Anyone mind if I create a "For Web authors" section on the wiki that contains only that to start with? :-)

[08:49:00.0000] <Philip`>
That sounds quite reasonable to me

[08:50:00.0000] <Philip`>
as long as you note that it's an evil hack that takes advantage of IE's insanity ;-)

[08:57:00.0000] <mpt>
done

[08:59:00.0000] <mpt>
thanks for the tip Philip` 

[09:03:00.0000] <gsnedders>
Can the postprocessor, _PLEASE_ be sane

[09:03:01.0000] <Philip`>
Thank Microsoft for implementing such a useful and obvious feature

[09:05:00.0000] <gsnedders>
"<!--logo-->Foo" results in the obvious output of <!--begin-logo-->\n\n  <p><a href="http://www.w3.org/"><img alt=W3C height=48\n   src="http://www.w3.org/Icons/w3c_home" width=72></a> <!--end-logo-->\n\n  <p>Foo

[09:08:00.0000] <gsnedders>
/me refuses to do the crazy after stuff

[09:12:00.0000] <gsnedders>
/me finds a bug in the docs

[09:16:00.0000] <tusho>
What would be an appropriate tag for "the main page content"?

[09:16:01.0000] <tusho>
You have <header>, <???>, <footer>

[09:21:00.0000] <smedero>
<section> or <article> would be appropriate depending on the type of content.

[09:21:01.0000] <tusho>
smedero: Multiple articles, though. (A recent posts page).

[09:22:00.0000] <tusho>
So: header being the generic starting cruft, ??? being the thing containing each <article>, then footer

[09:22:01.0000] <tusho>
<section id="content">, I suppose.

[12:03:00.0000] <hdh>
I'm using <body><header/> (<article><header/>...<footer/></article>)+ <footer/></body>

[12:32:00.0000] <gsnedders>
ERGH.

[12:32:01.0000] <gsnedders>
The docs really SUCK.

[12:32:02.0000] <gsnedders>
"If there is a H2 subheading under the H1 that gives the spec's status, the [STATUS] variable will be initialized from that, otherwise it will default to WD."

[12:33:00.0000] <gsnedders>
Actually, it isn't initalized from there, and it defaults to ED.

[12:35:00.0000] <gsnedders>
[LONGSTATUS] is completely and utterly undocumented

[12:41:00.0000] <gsnedders>
ERGH.

[12:42:00.0000] <gsnedders>
http://www.w3.org/StyleSheets/TR/W3C-ED gets changed per the status by complete magic

[12:43:00.0000] <gsnedders>
/me stabs stabs stabs

[12:45:00.0000] <Philip`>
/me gets 13 different outputs from a single function that does a few floating-point calculations, between various compilers and compiler flags

[12:46:00.0000] <Philip`>
(which makes me unhappy since I want cross-platform deterministic simulations)

[12:46:01.0000] <Lachy>
gsnedders, the status gets acquired from the This Version link: <dd><a href="[VERSION]/">http://www.w3.org/TR/[YEAR]/ED-selectors-api-[CDATE]/</a></dd>

[12:46:02.0000] <gsnedders>
Lachy: Yeah, I've reverse engineered that now

[12:47:00.0000] <Lachy>
I reverse engineered that once before when I needed to actually change it once.

[12:55:00.0000] <gsnedders>
Actually, that isn't the behaviour

[12:55:01.0000] <gsnedders>
It just finds the first http://www.w3.org/TR/[YEAR]xxx-

[13:03:00.0000] <Lachy>
gsnedders, could you make your spec generator generate all that boiler plate markup from a simpler syntax?

[13:04:00.0000] <gsnedders>
Lachy: how much is "all"

[13:04:01.0000] <Lachy>
everything in the <dl> near the top that includes This Version, Previous Versions, Editors, etc.

[13:06:00.0000] <gsnedders>
Lachy: What do I put in editors, previous versions, latest version? What URLs do I use for this version?

[13:06:01.0000] <gsnedders>
Oh lovely, "[Sorry, the postprocessor doesn't yet have the boilerplate text for this status]"

[13:08:00.0000] <Lachy>
gsnedders, you would need the author to provide a list of URLs, and then you just generate the link and dl markup

[13:09:00.0000] <gsnedders>
Lachy: It'd be easier just to have something to cut out the duplication of the URLs

[13:09:01.0000] <gsnedders>
and that'd cut it down quite a lot

[13:09:02.0000] <Lachy>
so a comment at the top that was formatted like this:

[13:09:03.0000] <gsnedders>
I know what you mean

[13:09:04.0000] <Lachy>
Selectors API

[13:09:05.0000] <Lachy>
WD

[13:09:06.0000] <Lachy>
This Version:

[13:09:07.0000] <Lachy>
http://www.w3.org/TR/2008/ED-selectors-api-20080717/ 

[13:09:08.0000] <Lachy>
Latest Version:

[13:09:09.0000] <Lachy>
http://www.w3.org/TR/selectors-api/ 

[13:09:10.0000] <Lachy>
Previous Versions:

[13:10:00.0000] <Lachy>
http://www.w3.org/TR/2007/WD-selectors-api-20071221/ 

[13:10:01.0000] <Lachy>
http://www.w3.org/TR/2007/WD-selectors-api-20071019/ 

[13:10:02.0000] <Lachy>
http://www.w3.org/TR/2006/WD-selectors-api-20060926/ 

[13:10:03.0000] <Lachy>
http://www.w3.org/TR/2006/WD-selectors-api-20060525/ 

[13:10:04.0000] <Lachy>
Editors:

[13:10:05.0000] <Lachy>
Editor Name1 (Affiliation) <user⊙ec>

[13:10:06.0000] <Lachy>
Editor Name2 (Affiliation) <user⊙ec>

[13:10:07.0000] <gsnedders>
Some specs don't have that format though

[13:11:00.0000] <Lachy>
which specs?

[13:11:01.0000] <gsnedders>
I'd rather have something like <!--begin-link-->http://www.w3.org/TR/2008/ED-selectors-api-20080717/<!--end-link--> that got converted into a link to http://www.w3.org/TR/2008/ED-selectors-api-20080717/ with that as its content

[13:11:02.0000] <gsnedders>
css3-namespace, for example

[13:11:03.0000] <Lachy>
yes it does

[13:11:04.0000] <gsnedders>
<dd><a href="http://annevankesteren.nl/contact">Anne van Kesteren</a>, Opera Software ASA</dd>

[13:11:05.0000] <gsnedders>
That doesn't look like that format to me :)

[13:12:00.0000] <Lachy>
oh, yeah, I forgot the links to the home pages.

[13:12:01.0000] <Lachy>
but the affiliation and email addresses are optional.

[13:12:02.0000] <Lachy>
that's not a problem

[13:13:00.0000] <gsnedders>
I just think having it all as a comment doesn't help that much more than just something to create a link

[13:13:01.0000] <gsnedders>
Because that cuts down most of the excess stuff in the header

[13:13:02.0000] <Lachy>
I just want a way to reduce as much markup as possible

[13:13:03.0000] <gsnedders>
Do you really touch the top that often? :P

[13:14:00.0000] <Lachy>
no, but it should be easy to edit when I do.

[13:14:01.0000] <gsnedders>
Lachy: And the current difficulty is from what? The duplication of URLs?

[13:15:00.0000] <Lachy>
yeah, the duplcation is a problem cause when I copy and paste to add another one, it's easy to forget to change one of the links

[13:16:00.0000] <gsnedders>
Yeah, and my proposal gets rid of that duplication

[13:16:01.0000] <Lachy>
and also creating a new spec requires too much editing

[13:17:00.0000] <Lachy>
marking up editor names is the most complicated for creating a spec

[13:19:00.0000] <Lachy>
also, the duplication in the <title> and <h1>

[13:19:01.0000] <gsnedders>
I'm not sure how simpler we can make editor names, though

[13:19:02.0000] <gsnedders>
I could add [TITLE] for that

[13:23:00.0000] <Lachy>
ok

[13:28:00.0000] <gsnedders>
Hmm, it must be more complex than I thought

[13:28:01.0000] <gsnedders>
http://dev.w3.org/cvsweb/csswg/cssom/Overview.src.html?rev=1.67&content-type=text/x-cvsweb-markup

[13:29:00.0000] <gsnedders>
that would result in [STATUS] == REC if I were right

[13:31:00.0000] <Lachy>
gsnedders, why?

[13:32:00.0000] <gsnedders>
Lachy: first http://www.w3.org/TR/[YEAR]/xx- link

[13:32:01.0000] <Lachy>
the first such link is http://www.w3.org/TR/[YEAR]/WD-cssom-[CDATE]/

[13:33:00.0000] <gsnedders>
that's in a comment, and is certainly ignored

[13:34:00.0000] <gsnedders>
[STATUS] == ED for that document, the default

[16:06:00.0000] <mpt>
/me is now unpleasantly surprised that <aside> doesn't work in Firefox 2

[16:07:00.0000] <Philip`>
Upgrade to FF3 :-)

[16:07:01.0000] <mpt>
I have, but ~11% of our page hits come from FF2

[16:09:00.0000] <Philip`>
Wait a few months

[16:09:01.0000] <Philip`>
and then everyone else should have upgraded

[16:10:00.0000] <Dashiva>
Not unless it gets backported to fifteen million linux distros

[16:11:00.0000] <Philip`>
Fourteen point many-nines of those Linux distros have no users, so they don't matter

[16:12:00.0000] <Philip`>
Uh

[16:12:01.0000] <Philip`>
Fourteen point many-nines millions

[16:12:02.0000] <Philip`>
and Ubuntu already has FF3 and who cares about anything else

[16:12:03.0000] <mpt>
So you're saying I should buy Alexander Sack lunch tomorrow, then? :-)

[16:13:00.0000] <Dashiva>
Philip`: Ubuntu newer than some version, yes

[16:13:01.0000] <mpt>
(for shipping Ubuntu 8.04 with FF3 beta instead of FF2)

[16:14:00.0000] <Philip`>
/me sees that Gentoo has mozilla-firefox-3.0 and mozilla-firefox-bin-3.0, but not marked as stable yet :-(

[16:15:00.0000] <mpt>
63% of our page hits are from people using Linux, but still FF2 is at 12%

[16:17:00.0000] <mpt>
<div class="aside"> is looking tempting ;-)

[16:30:00.0000] <gsnedders>
Philip`: Well get a better distro yourself :P

[16:41:00.0000] <Lachy>
JohnResig, yt?

[16:48:00.0000] <gsnedders>
Yay!

[16:48:01.0000] <gsnedders>
I've made sense of the status detection done by the spec-gen, at last

[16:49:00.0000] <Hixie>
mpt: <div class="aside"> is what i would recommend for now anyway

[16:49:01.0000] <gsnedders>
It stops looking at "latest version"

[16:49:02.0000] <mpt>
ok


2008-07-18
[17:12:00.0000] <gsnedders>
Lachy: I now have <!--begin-link-->http://example.com<!--end-link--> working

[17:14:00.0000] <Lachy>
is there some more abbreviated syntax you could use insted? Perhaps wiki style: [http://example.com/]

[17:14:01.0000] <Philip`>
I suggest <a href="http://example.com">

[17:15:00.0000] <gsnedders>
Philip`: Heh. The entire point is to _AVOID_ that.

[17:15:01.0000] <gsnedders>
We want something to become the content of a link

[17:15:02.0000] <Lachy>
Philip`, we want to avoid using that because it's for the situations where the link text is the URL itself

[17:15:03.0000] <gsnedders>
i.e., that above example becomes <a href=http://example.com>http://example.com</a>

[17:16:00.0000] <Philip`>
Ah, I can see how it's a terrible burden to have to copy-and-paste a bit of text onto the same line

[17:16:01.0000] <gsnedders>
Lachy: Is [DATE] a relative URL, or is it wanting the current date?

[17:16:02.0000] <Lachy>
maybe it would have to be [URL http://.../]

[17:18:00.0000] <Lachy>
gsnedders, it's just the current date

[17:18:01.0000] <Lachy>
that's why [URL ...] would work

[17:18:02.0000] <gsnedders>
Yeah, sure

[17:19:00.0000] <gsnedders>
I'd suggest [[]], but then we hit issues with biblio

[17:19:01.0000] <Lachy>
yep, that's why I didn't suggest it

[17:19:02.0000] <Lachy>
the W3C processor seems to accept random crap within "[DATE ... ]"

[17:20:00.0000] <gsnedders>
It needs a colon, does it not?

[17:20:01.0000] <gsnedders>
(at least it does if you believe the docs)

[17:20:02.0000] <Lachy>
dunno, will test

[17:20:03.0000] <Lachy>
no colon needed

[17:30:00.0000] <Hixie>
man, this preprocessor does way more than i use it for :-)

[17:31:00.0000] <gsnedders>
Yeah, you barely use it :)

[17:31:01.0000] <gsnedders>
It also does all kinds of stuff that people rely upon that aren't in the docs

[17:31:02.0000] <gsnedders>
like [LONGSTATUS]

[17:31:03.0000] <Hixie>
wtf is longstatus

[17:32:00.0000] <gsnedders>
"W3C Working Draft", for example

[17:32:01.0000] <Hixie>
i remember trying to use that stuff and it would never work

[17:32:02.0000] <Hixie>
i actually have to escape one of the stylesheet URLs to prevent it from screwing it up

[17:32:03.0000] <gsnedders>
(opposed to [STATUS] which would give "WD")

[17:32:04.0000] <gsnedders>
Hixie: Because it changes it? Yeah, it's weird.

[17:32:05.0000] <Hixie>
maybe that was before ED was supported

[17:33:00.0000] <Hixie>
anyway WHATWG drafts don't have that problem

[17:33:01.0000] <Hixie>
:-)

[17:33:02.0000] <gsnedders>
Hixie: I can tell you how it gets the status, after several hours of trying to work that out :P

[17:34:00.0000] <Hixie>
:-)

[17:34:01.0000] <gsnedders>
Hint: Everything the docs says about [STATUS] is wrong.

[17:34:02.0000] <Hixie>
i take it it is a completely different way than the way the pubrules checker gets it?

[17:34:03.0000] <Hixie>
there are docs?

[17:34:04.0000] <gsnedders>
dunno. Haven't tried :)

[17:35:00.0000] <gsnedders>
insofar as http://www.w3.org/Style/Group/css3-src/bin/README.html is a doc, yes

[17:35:01.0000] <Hixie>
oh hey what was it you wanted me to change in html5?

[17:35:02.0000] <gsnedders>
Not that I have a copy of that, obviously

[17:35:03.0000] <gsnedders>
Hixie: I can't remember.

[17:35:04.0000] <Hixie>
k

[17:35:05.0000] <gsnedders>
Hixie: We can try and work that out once it's done: run the spec through in w3c-compat and not, then diff it

[17:37:00.0000] <Hixie>
ok well just let me know when you know :-)

[17:37:01.0000] <gsnedders>
Hixie: Ah, it was that you rely on "setInterval(...)" being the same as "setInterval" for xref

[17:37:02.0000] <Hixie>
oh that's gonna be all over the place

[17:38:00.0000] <gsnedders>
I was guessing that :P

[17:38:01.0000] <gsnedders>
I don't like that behaviour, so it's w3c-compat only :D

[17:39:00.0000] <gsnedders>
Lachy: I could just check that [foo] was an absolute URL

[17:40:00.0000] <Hixie>
oh actually that doesn't happen as much as i expected

[17:40:01.0000] <gsnedders>
I can give you something that will show everywhere where it does :P

[17:40:02.0000] <Hixie>
fixed those i could find

[17:40:03.0000] <Hixie>
sure

[17:44:00.0000] <gsnedders>
Wow. that's a lot.

[17:46:00.0000] <gsnedders>
Actually, no, that's me being stupid.

[17:47:00.0000] <gsnedders>
http://pastebin.ca/1074875 — these are all the terms that are changed by the aggressive normalisation

[17:48:00.0000] <Lachy>
gsnedders, I don't mind how you do it. Just make it simple to use.

[17:50:00.0000] <gsnedders>
Hixie: cleartimeout and clearinterval and setinterval

[17:52:00.0000] <gsnedders>
Hixie: those are the only ones used in such a way that breaks without the normalisation

[17:55:00.0000] <gsnedders>
Hixie: Actually, no, that's still wrong

[18:00:00.0000] <gsnedders>
No, I think that's right.

[18:00:01.0000] <gsnedders>
/me shuts up

[18:00:02.0000] <gsnedders>
/me goes to sleep

[18:18:00.0000] <Hixie>
gsnedders: couldn't find any occurances of cleartimeout and clearinterval and setinterval that didn't have a title="" attribute

[18:35:00.0000] <Hixie>
i am minting URL_MISMATCH_ERR exception code 19

[18:59:00.0000] <Hixie>
holy crap this is going to be complicated

[18:59:01.0000] <Hixie>
what happens if you create a worker, but the script takes a long time to download

[18:59:02.0000] <Hixie>
and in the meantime, the user has navigated the window

[19:00:00.0000] <Hixie>
but the user agent hasn't expired the document, merely suspended it and its global object and scripts in session history

[19:00:01.0000] <Hixie>
and then you go back

[19:16:00.0000] <Hixie>
heycam: yt?

[19:17:00.0000] <Hixie>
heycam: i got a problem with workes and webidl

[19:17:01.0000] <heycam>
hi Hixie

[19:17:02.0000] <Hixie>
heycam: WebIDL 4.3 Interfaces says "For every interface that is not declared with the [NoInterfaceObject] extended attribute, a corresponding property must exist on the ECMAScript global object whose name is the identifier of the interface."

[19:17:03.0000] <Hixie>
heycam: but now there are two types of global objects, those that implement WindowBrowsingContext and those that implement WindowWorker

[19:18:00.0000] <Hixie>
(and those that implement neither, e.g. as the global object of the script in <img src="javascript:...">)

[19:18:01.0000] <Hixie>
we need a way to say which global objects these things end up visible in

[19:19:00.0000] <heycam>
hmm, so you need to scope a bunch of IDL to cause interfaces to exist on a particular global object

[19:19:01.0000] <Hixie>
or multiple objects

[19:20:00.0000] <heycam>
pointer to the WindowBrowsingContext / WindowWorker stuff?

[19:20:01.0000] <Hixie>
e.g. new WebSocket() needs to be in both WindowWorker and WindowBrowsingContext global objects, but not the null global object

[19:20:02.0000] <Hixie>
http://www.whatwg.org/specs/web-workers/current-work/#windowworker and http://www.whatwg.org/specs/web-apps/current-work/#windowbrowsingcontext

[19:21:00.0000] <Hixie>
http://www.whatwg.org/specs/web-workers/current-work/#apis-available shows how this is getting complicated in other senses too

[19:22:00.0000] <Hixie>
i need to go get food, but i'll be back online later. feel free to mention any ideas you may have and i'll read them when i get back.

[19:22:01.0000] <heycam>
ok

[19:35:00.0000] <heycam>
Hixie, is the main case that interface objects should appear on all global objects?

[19:35:01.0000] <heycam>
i'm wondering whether putting [GlobalObject=<identifier-list>] on those you want to restrict would be too onerous

[19:36:00.0000] <heycam>
and then in your specs you'd say how those identifiers map to the different global objects you have

[22:52:00.0000] <MikeSmith>
"the Window object's browsing context's active document's effective script origin" is quite a mouthful

[22:54:00.0000] <MikeSmith>
though it conveniently forms a pronounceable acronym

[22:54:01.0000] <MikeSmith>
the WOBCADESO

[23:32:00.0000] <Hixie>
heycam: actually no, the common case is that the interfaces are only visible to global objects that implement WindowBrowsingContext

[23:33:00.0000] <Hixie>
pretty much nothing (only ECMA262-defined types) are visible to the "empty" global object, for instance

[23:33:01.0000] <heycam>
where's this empty one defined?  i tried searching for "null global object" but didn't get anywhere.

[23:35:00.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#script0

[23:36:00.0000] <Hixie>
and http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#the-javascript paragraph 3

[23:37:00.0000] <heycam>
so "script browsing context" means the global script object?

[23:38:00.0000] <Hixie>
there's an open bug on figuring out what it means exactly

[23:38:01.0000] <Hixie>
global objects are very complex

[23:38:02.0000] <Hixie>
since the global object has to change when you navigate, but there's only one Window object per window

[23:39:00.0000] <Hixie>
so you get pschyzophrenic code

[23:42:00.0000] <heycam>
so is it possible for script to be running, the page navigates to something else, but that same script is running, and its global object is now a different object?

[23:43:00.0000] <Hixie>
the global object is the same, but the 'window' attribute on that global object no longer points to the global object, even though the value it used to have is === the value that it had when it _was_ equal to the global object

[23:44:00.0000] <heycam>
ah, interesting

[23:44:01.0000] <heycam>
i never realised they could be different

[23:44:02.0000] <Hixie>
the web is a crazy crazy platform

[23:45:00.0000] <Hixie>
basically the Window object reflects the properties of the global object of the active document

[23:45:01.0000] <Hixie>
and you can never get a pointer to the actual global object

[23:45:02.0000] <Hixie>
as i understand it

[23:46:00.0000] <heycam>
huh?

[23:46:01.0000] <heycam>
so you don't consider the Window object to be the actual global object?

[23:48:00.0000] <Hixie>
well right now none of this is defined

[23:48:01.0000] <Hixie>
but yeah

[23:49:00.0000] <heycam>
that's kind of strange

[23:49:01.0000] <heycam>
i mean, always though the Window object was exactly the same object that 'this' refers to at the top level of your script

[23:49:02.0000] <heycam>
s/always though/i &t/

[23:50:00.0000] <Hixie>
it is

[23:50:01.0000] <Hixie>
the 'this' is not the actual global object, it turns out

[23:50:02.0000] <Hixie>
but an object pretending to be it

[23:50:03.0000] <Hixie>
as i understand it

[23:51:00.0000] <heycam>
then i resign

[23:51:01.0000] <Hixie>
see also http://www.w3.org/Bugs/Public/show_bug.cgi?id=5850

[23:51:02.0000] <heycam>
:)

[23:51:03.0000] <Hixie>
q.v. topic :-)

[23:55:00.0000] <heycam>
so html5 will says something like:  "when you go to run a script, instead of evaluating it with the ecma-262 global object as the 'this' value, evaluate it with this strange Window object that mostly reflects the ecma-262 global object as the 'this' value"?

[23:56:00.0000] <Hixie>
dunno, haven't figured it out yet

[23:58:00.0000] <heycam>
let me know when you do :)

[23:58:01.0000] <heycam>
(well, i'll see the mails from the bug anyway)

[23:59:00.0000] <heycam>
then i'll think more about idl support for this stuff

[23:59:01.0000] <heycam>
/me out

[00:00:00.0000] <Hixie>
thanks

[00:00:01.0000] <Hixie>
later

[01:34:00.0000] <Lachy>
damn, Andrew is really quite annoying to deal with on www-style. He's so damn persistent, and fails to understand problems I clearly describe to him.

[01:35:00.0000] <Lachy>
though, unfortunately, he does have a point about the use cases. I can't think of any compelling ones that need to have a selector evaluated against the whole documet; only technical problems with what he needs, that need to be solved.

[01:41:00.0000] <Hixie>
what's the question?

[01:42:00.0000] <Lachy>
what question?

[01:44:00.0000] <Lachy>
this is the mail I was talking about http://lists.w3.org/Archives/Public/www-style/2008Jul/0419.html

[01:45:00.0000] <Hixie>
i mean, what's the thing you need a use case for?

[01:46:00.0000] <Hixie>
i don't read www-style these days unless html5 or acid3 is in the body :-)

[01:46:01.0000] <Hixie>
yay for keyword filtering

[01:47:00.0000] <Lachy>
oh, with the way querySelector() is defined div.querySelector("body p") would still match, even though body is an ancestor of the div. I need a use case for when that would actually be necessary, rather than just restricting all selectors to match descendants of the element itself.

[01:48:00.0000] <Lachy>
the solution that is actually needed is a way to say things like querySelector(">p");, but that requries changes to selector parsing and for an implicit :scope to be prepended to the beginning.

[01:49:00.0000] <Lachy>
and for querySelector("+p"); to work, it needs to match the element's siblings as well.

[01:51:00.0000] <Lachy>
if Andrew is right (which would be a huge surprise), I wonder if it's too late to change it now.

[01:55:00.0000] <gDashiva>
Regular querySelector evaluates against entire document and only returns matches inside scope, right?

[01:56:00.0000] <Lachy>
yes

[01:56:01.0000] <gDashiva>
If there's an implicit :scope in the scopedQuerySelector the result filtering wouldn't need to happen

[01:57:00.0000] <gDashiva>
Since it would limit itself to matching descendants and siblings anyhow

[01:57:01.0000] <Lachy>
yeah, the problem is how to get the implicit :scope there in cases like this: ">em, >strong"

[01:57:02.0000] <Lachy>
it's possible, I wrote up a proposed pre-parse algorithm to do it, but not sure how reliable it is in all cases yet

[01:57:03.0000] <gDashiva>
But assuming the parser manages to insert :scope properly, it's all in the green?

[01:58:00.0000] <Lachy>
the other issue is that querySelector is only defined to check its descendant elements. It would also need to be changed to check its sibling elements

[01:59:00.0000] <Lachy>
but they would only ever match in the case of :scope+p

[01:59:01.0000] <Lachy>
or ~p

[01:59:02.0000] <gDashiva>
Couldn't you just remove the restriction entirely? Surely when the browser itself prepends :scope it also knows where to avoid matching :)

[02:00:00.0000] <Lachy>
I guess it could just be left up to browser's own optimisations

[02:01:00.0000] <Lachy>
so then document.querySelector() and element.querySelector() would be handled very differently from each other.

[02:01:01.0000] <gDashiva>
Scope is applied in both cases. For regular querySelector it limits the return, for scoped querySelect it limits the match.

[02:01:02.0000] <gDashiva>
(Although it might be necessary to give them separate names, for clarity)

[02:02:00.0000] <Lachy>
gDashiva, but what are the use cases for keeping the current querySelector around?

[02:02:01.0000] <Lachy>
the only somewhat compelling reason I have at the moment is that implementations are getting ready to ship, and such a huge change could delay things

[02:03:00.0000] <Lachy>
though, perhaps that's not a huge problem, since IE8 is still only beta 1, Firefox 3 only just shipped and probably won't ship with support in a final product for months

[02:03:01.0000] <Lachy>
same for Opera

[02:04:00.0000] <Lachy>
dunno, will need to check with implementers and re-evaluate the whole situation

[02:04:01.0000] <gDashiva>
Hmm... the old one is the scoped one on document + filtering, since scoping to document on the match is no scoping. So it's document.scoedQuerySelector().removeNonDescendantOf(element). And the question is a use case for the filtering.

[02:05:00.0000] <Lachy>
what?

[02:05:01.0000] <gDashiva>
The old element.querySelector matches against the whole document, but only returns results inside the element's scope, right?

[02:06:00.0000] <Lachy>
it evaluates elements in the context of the whole document, but only returns descendant elements. So it doesn't bother checking for matches outside

[02:07:00.0000] <gDashiva>
True, using separate filtering would be a performance problem

[02:08:00.0000] <Hixie>
Lachy: the use case is going through a CSS style sheet and making sure you match all the nodes that the style sheet matches

[02:08:01.0000] <Hixie>
Lachy: or the use case is if you want to do something to <h2> elements that are inside <aside> elements, it doesn't matter if the <aside> is in the scope or not

[02:08:02.0000] <Lachy>
Hixie, when would anyone ever do that?

[02:09:00.0000] <Hixie>
Lachy: i'm not really sure when anyone would do any of this

[02:09:01.0000] <Lachy>
in that case, you could do document.querySelector("aside h2")

[02:09:02.0000] <Lachy>
which is the same problem I'm having.

[02:09:03.0000] <Hixie>
no i mean for the entire feature

[02:09:04.0000] <Hixie>
i don't know why people ever want to select multiple elements

[02:10:00.0000] <Lachy>
oh, well, people do it with JS libraries, so they must have a reason

[02:10:01.0000] <Hixie>
or do anything scoped

[02:10:02.0000] <Hixie>
so, look at those reasons

[02:10:03.0000] <Hixie>
you can't write a spec without knowing what the spec will be used for

[02:10:04.0000] <Lachy>
yeah, but those all work the way queryScopedSelector() would work, rather than how querySelector() works now.

[02:11:00.0000] <Hixie>
so i guess that's what we should have

[02:11:01.0000] <Lachy>
which is why I need to know if things should stay as they are, or be changed to match what Andrew, and what JohnResig had asked for earlier.

[02:11:02.0000] <gDashiva>
Lachy: Well, apart from some unquantified performance loss, you can emulate querySelector using queryScopedSelector and filtering

[02:12:00.0000] <gDashiva>
So the use cases would still be satisfied

[02:12:01.0000] <Hixie>
if everyone is asking for X, and you can't find any reasons for Y, then it seems likely X is the way to go

[02:12:02.0000] <Lachy>
I know. I just don't know if it's too late to change things

[02:12:03.0000] <Hixie>
why would it be too late?

[02:12:04.0000] <Lachy>
because back when all this was discussed previously, we didn't have solutions to the technical problems

[02:12:05.0000] <Hixie>
?

[02:13:00.0000] <gDashiva>
The :scope prepending

[02:13:01.0000] <Lachy>
because implementers are already working on getting the current spec implemented and could be close to shipping. But if they're willing to change at this stage, it won't be too late

[02:13:02.0000] <Lachy>
I will write up a proposal for how it could be redefined and ask

[02:14:00.0000] <Hixie>
well you already have four methods, right? just add two more and be done with it

[02:14:01.0000] <Hixie>
it's trivial to define

[02:14:02.0000] <Hixie>
you just don't ever match any simple selectors on nodes outside the scope

[02:15:00.0000] <Lachy>
that simple approach doesn't solve the use cases though. That's described in solution 3 or 4 in http://lists.w3.org/Archives/Public/public-webapi/2008May/0057.html

[02:15:01.0000] <Hixie>
wait do you even have queryScopedSelector and queryScopedSelectorAll in the draft at all? i can't find them

[02:15:02.0000] <Lachy>
not yet

[02:16:00.0000] <Lachy>
we're just discussing whether to add them, or whether to redefine querySelector to be what they would have been

[02:17:00.0000] <Hixie>
well it can't be too late if they don't exist yet :-)

[02:17:01.0000] <Hixie>
oh i see, because you have the element and document ones on the same interface

[02:17:02.0000] <Lachy>
yes

[02:18:00.0000] <Hixie>
seems like for these use cases what you want is a non-scoped variant that sets the context node, actually

[02:18:01.0000] <Lachy>
what do you mean?

[02:19:00.0000] <Hixie>
someRandomElement.queryContextSelector(":context + p")

[02:19:01.0000] <Hixie>
matching someRandomElement.nextSibling if that's a <p>

[02:19:02.0000] <Hixie>
i.e. scope is Document, context node is someRandomElement

[02:20:00.0000] <Lachy>
oh, yeah, but to do what JS libraries do, we would need to make the :context (or :scope now) implicit

[02:20:01.0000] <Hixie>
screw that

[02:20:02.0000] <Hixie>
people can put in a pseudo-class, that's not a big deal.

[02:21:00.0000] <Hixie>
for a few versions the libraries can have a shim, they already have CSS parsers after all

[02:22:00.0000] <Lachy>
othermaciej argued that we should do it with implicit scope because:

[02:22:01.0000] <Lachy>
<othermaciej> Lachy: I think there are two reasons we may still want it:

[02:22:02.0000] <Lachy>
<othermaciej> 1) otherwise JS libraries have to do rewriting of their incoming

[02:22:03.0000] <Lachy>
selectors, which is both slower and more error-prone in JS code than in native

[02:22:04.0000] <Lachy>
code

[02:22:05.0000] <Lachy>
<othermaciej> 2) without a way to access those syntax features directly, it

[02:22:06.0000] <Lachy>
becomes harder for authors to ever switch off the library wrappers to the

[02:22:07.0000] <Lachy>
native version, even once all browsers support it

[02:23:00.0000] <Lachy>
currently, JQuery and other libraries have to change jquery(">div, >p") into  ":scope>div, :scope>p" by themselves. The proposal is to make the browser to that in a standardised way

[02:24:00.0000] <Hixie>
the existing pages will keep using the existing libraries. new pages can use new libraries. it's not like there's a massive number of people who have existing code who will upgrade their libraries without upgrading their code to use new APIs in those libraries.

[02:24:01.0000] <Hixie>
so i call bs on othermaciej's reasons

[02:25:00.0000] <Lachy>
also, with your suggestion, would element.queryContextSelector("p"); only match descendant p elements, or all elements in the whole document?

[02:25:01.0000] <Hixie>
it would match the first <p> in the document

[02:25:02.0000] <Lachy>
that is unintuitive

[02:25:03.0000] <Hixie>
if you want the first in the subtree, use the filtered version (Element.querySelector())

[02:25:04.0000] <Hixie>
it's queryContextSelector() because it's for using :context

[02:25:05.0000] <Lachy>
which is worse than we have now, and authors are already complaining we did it wrong

[02:27:00.0000] <Hixie>
i'd have six methods, two each of Document.querySelector, Element.querySelector, and Element.queryContextSelector, with those three being document-wide selector matching, with the second one being filtered to the element, and the last two having the element as the :context node

[02:27:01.0000] <Hixie>
that handles all the use cases pretty simply

[02:28:00.0000] <Hixie>
and doesn't require any silly breaking of Selector rules like scoping what simple selectors can match on

[02:28:01.0000] <Hixie>
nor redefining what selectors mean by adding pseudo-classes in or whatever

[02:30:00.0000] <Lachy>
so element.querySelector(":scope p"); would match the same as element.queryContextSelector(":scope p"); but they would differ in their handling of ":scope+p". Is that right?

[02:31:00.0000] <Hixie>
i wouldn't call it :scope if you do this, but yes

[02:31:01.0000] <Lachy>
queryContextSelector() might be more intuitive as document.querySelector(":scope p", contextNode);

[02:31:02.0000] <Hixie>
that would be fine too

[02:31:03.0000] <Hixie>
(i still wouldn't call it :scope though)

[02:31:04.0000] <Lachy>
fine, the name isn't important.

[02:33:00.0000] <Lachy>
so your proposal is to keep exactly what we have now and add queryContextSelector or equivalent. But that doesn't help me deal with the problems people are having with querySelector now.

[02:34:00.0000] <Hixie>
sure, just tell them to give a contextNode

[02:44:00.0000] <othermaciej>
Hixie: why is your rebuttal relevant to my reasons?

[02:45:00.0000] <othermaciej>
Hixie: both library authors and web developers appear to like the scoped semantics (in some case, to the degree of apoplectic rage at the suggestion of anything else)

[02:45:01.0000] <othermaciej>
I would call it queryScopedSelector not queryContextSelector btw

[02:45:02.0000] <Hixie>
for 1, because i'm saying there's no rewriting needed, and for 2, because i'm saying we should offer those features (albeit not with a compatible syntax).

[02:46:00.0000] <othermaciej>
"context selector" doesn't make sense

[02:46:01.0000] <Hixie>
it's not scoped

[02:46:02.0000] <othermaciej>
I guess it depends on what you mean by it

[02:46:03.0000] <Hixie>
if ":context + p" matches something, then clearly you're not scoped to :context

[02:46:04.0000] <Hixie>
since a node's sibling is outside the node

[02:46:05.0000] <Hixie>
this would become even more relevant with something like :has() or, worse, :matches().

[02:47:00.0000] <othermaciej>
that's true, the + version would in fact be unscoped relative to the normal version

[02:47:01.0000] <othermaciej>
I hadn't imagined catering to the + exception

[02:47:02.0000] <Hixie>
it was in lachy's list of what people do/need

[02:47:03.0000] <Hixie>
if we're not worrying about what they need, then we should screw the whole scoped thing and keep the spec as is :-)

[02:48:00.0000] <othermaciej>
I recall from past discussions that people were less fervent about that than "div span" only matching if the div is the element queried on or inside it, and not if the whole thing happens to be contained in a div

[02:49:00.0000] <othermaciej>
(in fact I recall at least one JS library author conceding that "+ p" didn't entirely make sense)

[02:49:01.0000] <Lachy>
othermaciej, which JS author?

[02:50:00.0000] <Hixie>
if we give them "div:context span" then that use case is handled fine

[02:50:01.0000] <othermaciej>
I can't remember

[02:50:02.0000] <othermaciej>
Hixie: I am sure JS libraries will rewrite their current pseudo-selector syntax into that, and their clients will continue to just write "div span"

[02:51:00.0000] <Lachy>
Hixie, sure, :context as currently defined can handle every use case except the +p case.

[02:51:01.0000] <othermaciej>
incidentally "div:context span" would not mean the same thing

[02:51:02.0000] <othermaciej>
":context div span" would

[02:51:03.0000] <Hixie>
othermaciej: why would they?

[02:52:00.0000] <othermaciej>
Hixie: at least some library authors have said they feel obligated to (and in some cases deeply enthusiastic about) maintaining their current syntax

[02:52:01.0000] <Hixie>
sure but that doesn't preclude them providing new APIs

[02:52:02.0000] <othermaciej>
presumably they are in touch with their clients

[02:52:03.0000] <Hixie>
basically the way i see it the current installed base pales in comparison to the future uses

[02:53:00.0000] <Hixie>
it's not like we're breaking back compat, we're just not making the back compat faster.

[02:53:01.0000] <othermaciej>
sure, but why not give them what they want?

[02:53:02.0000] <othermaciej>
is there a downside?

[02:53:03.0000] <Lachy>
Hixie, what future uses are we addressing by failing to directly meet their needs, instead of indirectly via :context as we are now?

[02:53:04.0000] <othermaciej>
one more method plus one more selector parser or preprocessor is not a big deal implementation-wise

[02:53:05.0000] <othermaciej>
the only reason not to do it as far as I can tell is a sense of purity

[02:54:00.0000] <Lachy>
othermaciej, should we keep querySelector() as defined, or just redefine it to what queryScopedSelector() would have been?

[02:54:01.0000] <Hixie>
what they want is a new selector syntax

[02:54:02.0000] <Lachy>
yes, which has been my argument against them till now

[02:54:03.0000] <Hixie>
that's a whole ton more speccing, developing, and testing work than what i think we want to do

[02:55:00.0000] <othermaciej>
Lachy: I think querySelector may already be used enough to preclude completely redefining it

[02:55:01.0000] <Hixie>
so that's the reason for not doing what they are asking for

[02:55:02.0000] <gsnedders>
Something is going oddly wrong in my spec-gen

[02:55:03.0000] <Hixie>
we can cater for the exact same use cases with a much cleaner mechanism

[02:55:04.0000] <othermaciej>
the cost seems low compared to the benefit of making them happy

[02:56:00.0000] <othermaciej>
and the cost will be borne mostly by Lachy and by implementors

[02:56:01.0000] <Hixie>
well, it's not me who has to pay the cost, so if you can get the css group to define a new syntax for selectors, along with creating a new test suite, and implementors are up for it, go for it

[02:57:00.0000] <Hixie>
personally i think that's a high cost for making people feel happy when we could address their same use cases in a much cleaner and simpler way that, once they realised it addressed their use cases, would likely make them just as happy

[02:57:01.0000] <Hixie>
(not to mention it's more powerful going forward)

[02:57:02.0000] <othermaciej>
if the new syntax is defined by translation to the canonical selector syntax then I see no need to involve the CSS WG

[02:57:03.0000] <Lachy>
Hixie, the proposed solution addresses it with a pre-parse that inserts :context (or whatever) in the appropriate places before parsing as a normal selector

[02:57:04.0000] <othermaciej>
I do like :scope/:context and I think it should probably be done first

[02:58:00.0000] <othermaciej>
that will give us more information on whether JS library authors or Web developers in general are inclined to switch

[02:58:01.0000] <Lachy>
othermaciej, can you respond to Andrew on www-style or public-webapps and help me explain to him why the current solution is good?

[02:58:02.0000] <gsnedders>
Ah! I've found teh bug!

[02:58:03.0000] <Hixie>
/me has a low opinion of specs that define things in terms of transforming one syntax into another

[02:58:04.0000] <Hixie>
seems like a hack to me

[02:59:00.0000] <Hixie>
but it's not my problem :-)

[02:59:01.0000] <Lachy>
Hixie, sure, it is a hack

[02:59:02.0000] <Hixie>
the platform has enough hackiness without adding more

[03:00:00.0000] <Hixie>
it's not like any sane implementor will actually implement it as a preparse

[03:00:01.0000] <Hixie>
parsing selectors is slow enough as it is

[03:00:02.0000] <Hixie>
without having to do it twice each time

[03:00:03.0000] <Hixie>
given that these methods are likely to be called in tight loops

[03:00:04.0000] <othermaciej>
I would guess parsing is a trivial fraction of the cost of querySelector

[03:00:05.0000] <Hixie>
so whether the csswg is involved or not, it's still a new syntax

[03:00:06.0000] <Lachy>
Hixie, the other solution was to slightly modify the grammar of selectors as described here http://lists.w3.org/Archives/Public/public-webapps/2008JulSep/0181.html

[03:00:07.0000] <othermaciej>
(that's a pretty well educated guess)

[03:01:00.0000] <Hixie>
othermaciej: on scoped trees with caching? i'm surprised.

[03:02:00.0000] <othermaciej>
Shark don't lie

[03:02:01.0000] <othermaciej>
we only use caching for the most trivial of selectors (otherwise maintaining correctness of the cache would be too complicated to be worth the benefit in the unlikely case that you redo the identical query on the same subtree)

[03:03:00.0000] <gsnedders>
teh webs are teh weirdness.

[03:10:00.0000] <gsnedders>
Hixie: I think title=">HTML documents" is a bug

[03:10:01.0000] <Hixie>
fixed

[03:12:00.0000] <gsnedders>
Hixie: http://pastebin.ca/1075314 — That's a diff of everything going from the aggressive normalisation to next to none

[03:12:01.0000] <gsnedders>
(obviously the top change isn't to do with that)

[03:16:00.0000] <Hixie>
fixed

[03:27:00.0000] <Hixie>
othermaciej: btw i ended up using "attach" instead of "join" -- but that's not much better. do you have any better ideas for terminology for what to call it when a new client registers with a worker?

[03:27:01.0000] <Hixie>
http://www.whatwg.org/specs/web-workers/current-work/ is mostly ready now, though it's missing some of the APIs it should have

[03:27:02.0000] <Hixie>
like database APIs

[03:53:00.0000] <MikeSmith>
Hixie: fwiw, "attach" doesn't seem so bad to me. 

[03:53:01.0000] <MikeSmith>
since it's used in other ways to describe interactions with processes

[03:54:00.0000] <Hixie>
attaching to a thread somewhat implies a debugger actually monitoring the thread

[03:54:01.0000] <MikeSmith>
ah

[03:54:02.0000] <Hixie>
which is not what this is

[03:54:03.0000] <MikeSmith>
right, I see

[03:54:04.0000] <Hixie>
but in the absence of a better term...

[03:55:00.0000] <MikeSmith>
hmm, only other word I can think of is "tether", and that probably sucks more

[03:55:01.0000] <Hixie>
heh

[03:56:00.0000] <Hixie>
i used join, but joining a thread means waiting for it to complete, which isn't the same thing at all :-)

[03:56:01.0000] <Hixie>
so attach is a step in the right direction

[03:56:02.0000] <Hixie>
but merely a small step

[03:56:03.0000] <Philip`>
"connect"?

[03:57:00.0000] <Hixie>
could work

[03:58:00.0000] <MikeSmith>
hook, tie, bind, pin, fasten, harness

[03:58:01.0000] <MikeSmith>
and "hog tie"

[03:59:00.0000] <Hixie>
connect is winning so far

[04:00:00.0000] <Philip`>
"tether"

[04:01:00.0000] <Philip`>
"tractor beam"

[04:02:00.0000] <MikeSmith>
bear hug

[04:02:01.0000] <gDashiva>
assimilate

[04:03:00.0000] <gDashiva>
/me ponders <p><label>Text <input></p>

[04:04:00.0000] <othermaciej>
connect is best, since what you get back is a message port

[04:04:01.0000] <othermaciej>
connectToNamedWorker

[04:05:00.0000] <Hixie>
it's still createNamedWorker() for consistency with createWorker()

[04:05:01.0000] <Hixie>
the name 'connect' is the event name

[04:06:00.0000] <gDashiva>
How about assign?

[04:06:01.0000] <Hixie>
unless you think it should be connectToNamedWorker() and connectToWorker(), or connectToNamedWorker() and createWorker() ?

[04:07:00.0000] <Hixie>
why assign?

[04:08:00.0000] <gDashiva>
connect makes me think of connections and pipes and such

[04:08:01.0000] <Hixie>
well the message ports did used to be called pipes

[04:10:00.0000] <gDashiva>
But that's for inter-worker communication, isn't it? Not for task-to-worker

[04:14:00.0000] <Hixie>
i don't understand what you mean

[04:14:01.0000] <Hixie>
message ports are how any two things communicate

[04:14:02.0000] <Hixie>
whether they be in different workers, same worker, different frames, whatever

[04:17:00.0000] <gDashiva>
Just me being confused, then.

[04:19:00.0000] <gsnedders>
gDashiva: Like normal.

[04:20:00.0000] <gDashiva>
I should add it to my OKRs

[04:23:00.0000] <Hixie>
something else we could use <browserbutton> for is the ability to move a page into the background completely

[04:23:01.0000] <Hixie>
so e.g. you could hide google calendar and it could still be doing toast notifications of your events

[05:02:00.0000] <gsnedders>
/me wants a copy of ISO 2145

[05:03:00.0000] <Hixie>
which is that one>

[05:03:01.0000] <Hixie>
?

[05:04:00.0000] <gsnedders>
Hixie: numbering of divisions and subdivisions in written documents

[05:04:01.0000] <Hixie>
aah

[05:04:02.0000] <gsnedders>
It's an entire two pages long :P

[05:04:03.0000] <gsnedders>
And I bet the first is just the cover page.

[05:05:00.0000] <Hixie>
http://www.w3.org/mid/E906BBE0-6737-4C8D-9D7F-D3ADF99BFE5D⊙bc -- wouldn't it make more sense to just teach peopel to read?

[05:05:01.0000] <gsnedders>
Wikipedia claims to give the definition, but is it "can" or must it be?

[05:06:00.0000] <gsnedders>
Hixie: Peh! Standards are more fun than school anyway!

[05:06:01.0000] <gsnedders>
</sarcasm>

[05:06:02.0000] <Hixie>
ok, <browserbutton> or .makeStandalone() or whatever we decide to do is what i'm working on tomorrow

[05:08:00.0000] <gsnedders>
Lachy: I can't really get any other syntax that doesn't become really rather complex to parse

[05:08:01.0000] <gsnedders>
Lachy: [URL: http://exam<em>ple</em>.com] would be complete hell to parse

[05:09:00.0000] <jgraham>
Hixie: Why are workers JS only? And which version of JS? 

[05:10:00.0000] <jgraham>
I presume ECMAScript 4 still requires an out of band indicator that the file is ECMAScript4?

[05:10:01.0000] <Hixie>
the js folk need to realise that out of band versioning is a bad idea

[05:11:00.0000] <Hixie>
anyway bed time

[05:11:01.0000] <gsnedders>
g'nite

[05:11:02.0000] <gsnedders>
I'll try and have nicer generated IDs by when you awaken

[05:12:00.0000] <Lachy>
gsnedders, just find /\[URL:?\s([^\])]\]/

[05:12:01.0000] <jgraham>
Hixie: Sure, but I still don't understand why they are, in principle, JS only

[05:12:02.0000] <Lachy>
then escape special characters in the result

[05:12:03.0000] <gsnedders>
Lachy: That's hard when you have an XML document, and I don't want therefore to be a bozo

[05:13:00.0000] <jgraham>
(and it seems like trying to force the hand of the ECMA people this way is bad)

[05:13:01.0000] <Lachy>
oh, right

[05:13:02.0000] <Hixie>
jgraham: they're JS only because i didn't write the bit that says how to handle the content-type headers

[05:14:00.0000] <Lachy>
gsnedders, but no-one is going to put markup in the middle of a URL like this. Remember, it's not random stupid people using your tool, it's spec writers who at least have basic understanding of what they're doing.

[05:14:01.0000] <gsnedders>
Lachy: Robustness ftw.

[05:14:02.0000] <gsnedders>
:P

[05:14:03.0000] <Lachy>
so just require that the whole [URL: ...] this is in a single text node

[05:14:04.0000] <Lachy>
if it's not, output it as plain text

[05:14:05.0000] <gsnedders>
Yeah, I could do that

[05:14:06.0000] <Philip`>
Preprocess the document with regular expressions

[05:15:00.0000] <gsnedders>
Philip`: No. :P

[05:15:01.0000] <gDashiva>
Use sed

[05:15:02.0000] <Hixie>
just make people use <a href="...">...</a>

[05:15:03.0000] <Hixie>
require that the ... bits be equal, to confirm that they did actually intend it

[05:15:04.0000] <gsnedders>
Hixie: But people are lazy!

[05:15:05.0000] <Hixie>
if they're not equal, then just leave it unchanged

[05:15:06.0000] <gsnedders>
Hixie: huh?

[05:15:07.0000] <Philip`>
gsnedders: Lazy people don't write specs

[05:16:00.0000] <Hixie>
and if they're equal, then output <a href="...">...</a>

[05:16:01.0000] <gsnedders>
Philip`: No, we do, just slowly :)

[05:16:02.0000] <Hixie>
should be pretty easy to implement!

[05:16:03.0000] <Philip`>
gsnedders: That just means you're insufficiently lazy

[05:16:04.0000] <Lachy>
Hixie, there are other links in the spec where they shouldn't be equal, so how would you distinguish between those cases?

[05:16:05.0000] <gsnedders>
Hixie: So what? Just require an ellipsis in one place, or what do you mena?

[05:16:06.0000] <gsnedders>
*mean

[05:17:00.0000] <Hixie>
/me wishes lachy would fix http://www.w3.org/Bugs/Public/show_bug.cgi?id=5852 so it wasn't on his list :-)

[05:17:01.0000] <gDashiva>
I could picture a lazy person writing a spec because they're too lazy to implement themselves, but writing some text is okay

[05:17:02.0000] <Hixie>
/me is too lazy to fix his search query

[05:17:03.0000] <Hixie>
Lachy, gsnedders: i was saying "do nothing" basically

[05:17:04.0000] <Philip`>
Lachy: If the link text is equal to the href, then you treat it as the equal case; and if it isn't, you treat it as the unequal case

[05:17:05.0000] <gsnedders>
Hixie: ah :P

[05:17:06.0000] <Hixie>
/me just wants spec gen 1.2 :-P

[05:18:00.0000] <gsnedders>
:D

[05:18:01.0000] <Hixie>
look at all the big green thick underlines in http://whatwg.org/ww

[05:18:02.0000] <Lachy>
Hixie, we're trying to solve the cases where the URL is the same URL is used in both the href and link text to avoid the duplication.

[05:18:03.0000] <Hixie>
all of those would go away if i had 1.2!

[05:18:04.0000] <Hixie>
Lachy: i know, i'm just not convinced it's a problem :-)

[05:19:00.0000] <Lachy>
Hixie, it's just a minor problem when updating the header of the document where the Previous Version links are. When I copy and paste, I want to make it easier to avoid forgetting to change one of the links when I copy and paste

[05:19:01.0000] <gsnedders>
/me hugs Hixie. It'll be all right!

[05:20:00.0000] <Lachy>
I also wanted an easier, markup free syntax to make that whole spec header easier to fill out and generate

[05:20:01.0000] <Lachy>
but gsnedders said no to that

[05:20:02.0000] <Hixie>
heh

[05:20:03.0000] <gsnedders>
(because he's an asshole)

[05:20:04.0000] <Lachy>
gsnedders, who? me or you?

[05:20:05.0000] <Hixie>
/me spends very little time on the header of his specs

[05:20:06.0000] <gsnedders>
Lachy: Me :P

[05:21:00.0000] <Lachy>
ok, good

[05:21:01.0000] <gsnedders>
/me is listening to Look At Your Son Now by The F-Ups from The F-Ups

[05:21:02.0000] <Lachy>
maybe I could solve the problem by making a template generator where I can fill out that info in a form and have it all generated for me

[05:21:03.0000] <gsnedders>
I love how we're writing code so we can _then_ be lazy.

[05:22:00.0000] <gsnedders>
It'd probably be quicker to just not be lazy in the first place.

[05:22:01.0000] <Philip`>
Lachy: You could do it all with XSLT

[05:22:02.0000] <Lachy>
Hixie, re bug 5852, I suppose I could work on it. Any suggestions for how to mark it up and present it in a user friendly way?

[05:22:03.0000] <Lachy>
Philip`, I'd rather not do anything with XSLT

[05:23:00.0000] <Hixie>
Lachy: no idea

[05:23:01.0000] <Hixie>
Lachy: i generate the table automatically though

[05:23:02.0000] <Hixie>
Lachy: so something that does the same is probably best :-)

[05:23:03.0000] <Hixie>
anyway

[05:23:04.0000] <Lachy>
Hixie, I know. I already got the script to do that from you

[05:23:05.0000] <Hixie>
bed time now

[05:23:06.0000] <Hixie>
nn

[05:24:00.0000] <Philip`>
You should make the table user friendlier by deleting most of it

[05:24:01.0000] <Philip`>
(The full table just has too much data for anyone to ever make sense of)

[05:25:00.0000] <Philip`>
Approximately nobody uses MathML entities, so just get rid of them and tell people to use &#n; instead

[05:25:01.0000] <Philip`>
(*get rid of them in the author-oriented version of the table, even if they're still supported by UAs)

[05:25:02.0000] <gsnedders>
I thought we only needed to address 80% of use-cases, so why do we need them at all?

[05:26:00.0000] <richardigel>
hello! how good is the web forms 2.0 support of current browsers?

[05:27:00.0000] <Philip`>
richardigel: http://en.wikipedia.org/wiki/Comparison_of_layout_engines_(HTML_5)#Web_Forms_2.0 might be relevant and might be roughly correct

[05:30:00.0000] <richardigel>
Philip`: hmm. pretty much nothing is implemented. 

[05:30:01.0000] <jgraham>
MathML entities are very useful if you are trying to enter maths

[05:31:00.0000] <gsnedders>
LaTeX ftw.

[05:32:00.0000] <Philip`>
jgraham: Why not just copy-and-paste the Unicode symbols directly?

[05:32:01.0000] <jgraham>
Philip`: For the same reason that's inconvenient when when entering LaTeX

[05:33:00.0000] <Philip`>
jgraham: It's inconvenient when entering LaTeX because LaTeX doesn't support Unicode properly, whereas HTML and HTML editors do

[05:34:00.0000] <jgraham>
\Phi is easier than finding gnome character map, typing ctrl+f (or whatever it is) entering capital phi copying the result switching back to the editor and pasting 

[05:34:01.0000] <jgraham>
the unicode support of LaTeX has very little to do with it

[05:36:00.0000] <Philip`>
\Phi is not much easier than finding the place where you used Φ on the previous line of equation or a few paragraphs earlier and then copying-and-pasting it

[05:39:00.0000] <Lachy>
Omitting entity refs just because they're silly isn't an option. The intention is to cover everything that authors would ever need to know about HTML5, including all useless features

[05:39:01.0000] <jgraham>
Philip`: It really is

[05:40:00.0000] <gsnedders>
Philip`: You're just a silly comp.sci. student. Anyone who does real maths knows it is easier.

[05:40:01.0000] <jgraham>
Having to scan back through stuff breaks your concentration on what you're actually trying to do

[05:40:02.0000] <gsnedders>
(and that'll probably be my only comment today with my physics hat on)

[05:40:03.0000] <jgraham>
Which (in the case of Latex) is try not to end up with the wrong number of \lefts compared to your \rights

[05:41:00.0000] <Lachy>
This is really nice, but I don't want to just copy it http://www.digitalmediaminute.com/reference/entity/index.php

[05:41:01.0000] <Philip`>
Lachy: That seems a worse intention than trying to make something that is as useful as possible to authors (and hence has to be as easy to read as possible)

[05:42:00.0000] <Lachy>
Philip`, making it as thorough as possible and being useful and easy to read aren't mutually exclusive goals

[05:43:00.0000] <Philip`>
The HTML 5 spec already has everything authors could ever need to know, and is unreadable to authors because of it

[05:44:00.0000] <Philip`>
/me often uses the HTML 4 spec when trying to look up how some element works

[05:45:00.0000] <Philip`>
Lachy: But they are not absolutely compatible goals, so you'll have to make some tradeoffs between them

[05:45:01.0000] <Lachy>
the HTML5 spec is not very readable by authors because it's targetted at implementers

[05:46:00.0000] <Philip`>
Look at e.g. the <img alt> definition - that's targetted at authors, with lots of examples and stuff, and it covers everything in excruciating detail, and so no author is going to bother reading it all and if they do then they're not going to understand it all properly

[06:05:00.0000] <gsnedders>
Hmm, anyone got a clue why re.compile(u"[\U0001FFFF-\U0002FFFF]") causes an exception

[06:06:00.0000] <Philip`>
>>> import re

[06:06:01.0000] <Philip`>
>>> re.compile(u"[\U0001FFFF-\U0002FFFF]")

[06:06:02.0000] <Philip`>
<_sre.SRE_Pattern object at 0xb7c43640>

[06:21:00.0000] <gsnedders>
hmm.

[06:21:01.0000] <Philip`>
Maybe it causes an exception because you didn't import re? :-p

[06:22:00.0000] <gsnedders>
sre_constants.error: bad character range

[06:24:00.0000] <Philip`>
What version of Python?

[06:24:01.0000] <Philip`>
Is len(u"[\U0001FFFF-\U0002FFFF]") == 5?

[06:25:00.0000] <Philip`>
(Is it a UCS-2 build of Python?)

[06:25:01.0000] <Philip`>
etc

[06:26:00.0000] <gsnedders>
2.5.1

[06:26:01.0000] <gsnedders>
No, it isn't. len() = 7

[06:30:00.0000] <Philip`>
That sounds like it's doing something silly

[06:30:01.0000] <Philip`>
/me has UCS-4 Python, and len() == 5

[06:32:00.0000] <gDashiva>
Works in my 2.4.3, len=5

[06:47:00.0000] <Lachy>
JohnResig, I've just got a few issues to sort out with selectors api

[06:48:00.0000] <Lachy>
I just gotta find the link...

[06:48:01.0000] <Lachy>
http://lists.w3.org/Archives/Public/www-style/2008Jul/0419.html and ...

[06:49:00.0000] <Lachy>
http://krijnhoetmer.nl/irc-logs/whatwg/20080718#l-225

[06:50:00.0000] <Lachy>
basically, I need to sort out whether going with the more flexible :context/:scope was the right approach, and work out how to deal with the complaints

[06:51:00.0000] <Lachy>
skim the IRC logs to catch up first though

[06:53:00.0000] <Lachy>
the thing is, document.querySelector(":context+p", contextNode); would address all the use cases that JQuery handles, but it does require an explicit :context/:scope pseudo-class

[06:54:00.0000] <Lachy>
whereas, element.queryScopedSelector("+p"); which would be defined to imply :context at the beginning, and do a document wide search for all matching elements (which would be effectively limited to descendants and siblings anyway)

[06:55:00.0000] <Lachy>
the latter requires hacking the Selector parser in browsers, the former is easier to define and implement, but places a small burdon on authors/js libraries

[06:56:00.0000] <Lachy>
JohnResig, any thoughts?

[06:57:00.0000] <JohnResig>
Lachy: I'm reading through the log at the moment...

[06:57:01.0000] <Lachy>
ok

[06:57:02.0000] <JohnResig>
Lachy: I'm fine with the :root proposal, as well - just changing its meaning when it's within a context

[06:57:03.0000] <JohnResig>
taht may be easier to spec out?

[06:57:04.0000] <JohnResig>
*that

[06:59:00.0000] <Lachy>
there are problems with the :root proposal that I'm not comfortable with

[07:00:00.0000] <Lachy>
since it's defined to be the root of the document, and div.querySelector("body :root p") would then work, which is silly.

[07:00:01.0000] <Lachy>
but :context/:scope is the same as what people have asked to do with :root, just a different name.

[07:03:00.0000] <Philip`>
Lachy: The priority of constituencies says that spec writers and implementors should be burdened instead of authors, so that seems like an easy answer to your concern :-)

[07:03:01.0000] <Lachy>
hmm, if we had document.querySelector(":context+p", contextNode); then element.queryScopedSelector("+p"); could be defined to automatically imply :context and then behave as if the former had been called instead.

[07:03:02.0000] <Lachy>
Philip`, I know.

[07:04:00.0000] <JohnResig>
phew... this is a lot of logs - still reading

[07:04:01.0000] <Lachy>
Philip`, but I don't think adding an extra pseudo-class is that much of a problem

[07:05:00.0000] <Lachy>
wow, it went for over an hour :-)

[07:21:00.0000] <JohnResig>
Lachy: you keep mentioning a document.querySelector("...", contextNode) - I'm not sure where this is coming from

[07:22:00.0000] <Lachy>
JohnResig, it's just one of the possible solutions

[07:22:01.0000] <Lachy>
not specced yet

[07:23:00.0000] <Lachy>
it was originally mentioned as a possible alternative at the end of this email http://lists.w3.org/Archives/Public/public-webapi/2008May/0057.html

[07:23:01.0000] <Lachy>
and it is an alternative method to do what Hixie's proposed queryContextSelector() did.

[07:27:00.0000] <Lachy>
this is where it was first mentioned in the logs http://krijnhoetmer.nl/irc-logs/whatwg/20080718#l-329

[07:36:00.0000] <JohnResig>
Lachy: it seems like there's two issues at play here

[07:37:00.0000] <JohnResig>
hmm, wait

[07:37:01.0000] <Lachy>
yeah, there could be a few

[07:39:00.0000] <Lachy>
the big issue is that I see both sides of the issue and I'm indecisive :-(

[08:24:00.0000] <Philip`>
Are there mail readers that handle deeply nested threads less stupidly than Thunderbird (which indents the subject line by more than the width of the column it's in, hence making it disappear entirely)?

[08:25:00.0000] <Lachy>
Philip`, Mail.app has a broken threading implementation that doesn't indent like Thunderbird.

[08:26:00.0000] <Lachy>
but it's threading is more like a list, just grouped together

[08:28:00.0000] <Philip`>
I have a thread with maybe two hundred messages, including big chunks that are mostly-independent forks from the main thread, and it'd be nice if those were handled sensibly instead of all being mushed together

[08:30:00.0000] <Lachy>
describe what you would consider sensible?

[08:32:00.0000] <Philip`>
Maybe it could let me select a certain message and say that I want it (and all its descendants) to be displayed as if they were a new thread, instead of being nested under its parent

[08:58:00.0000] <gsnedders>
Yeah, my build must be a UCS-2 of Python

[09:00:00.0000] <gsnedders>
or a UTF-16 one rather

[09:00:01.0000] <gsnedders>
hmm

[09:18:00.0000] <gsnedders>
<em<b>foo creates a different result in html5lib than it does in any browser, as far as I can see

[09:31:00.0000] <gsnedders>
Philip`: What do you get for len(u"\U0001FFFF")?

[09:33:00.0000] <Philip`>
gsnedders: 1

[09:33:01.0000] <gsnedders>
Philip`: Yeah, it's a UTF-16 copy I have

[09:43:00.0000] <MikeSmith>
Philip`: mutt

[12:22:00.0000] <gsnedders>
Does anyone care enough about the postprocessor's stupid ID generation enough to want me to copy it?

[12:22:01.0000] <gsnedders>
(in w3c-compat, at least)

[12:33:00.0000] <Dashiva>
If you care enough to make a compat mode, it should be compatible

[12:44:00.0000] <gsnedders>
Dashiva: It never will be completely compatible, because what I do is too logical.

[12:44:01.0000] <gsnedders>
Dashiva: It just needs to be compatible enough in the real world

[12:44:02.0000] <gsnedders>
And as with the postprocessor the IDs change half the time because the ID gen is so bad…

[12:53:00.0000] <gsnedders>
/text()[contains(normalize-space(translate(., 'AEILNORSTV', 'aeilnorstv')), 'latest version') or contains(., 'http://www.w3.org/TR/')] — lovely xpath!

[12:58:00.0000] <Dashiva>
Isn't there a lower()?

[12:59:00.0000] <gsnedders>
Nope.

[12:59:01.0000] <gsnedders>
In XPath 2.0 there is lower-case, but next to nothing actually implements 2.0

[12:59:02.0000] <Dashiva>
How wonderful

[12:59:03.0000] <gsnedders>
Yeah, it really is.

[13:00:00.0000] <gsnedders>
But when dealing with something as large as HTML 5, it tends to be quicker if you can get away with a single XPath statement than doing a whole iter of the tree

[13:00:01.0000] <gsnedders>
Especially when looking at text nodes

[13:01:00.0000] <Dashiva>
Gee. No case changing, but they have starts-with, substring-before and substring-after

[13:01:01.0000] <jcranmer>
XPath is so wonderful, it's a shame that more people don't implement more of it

[13:02:00.0000] <jcranmer>
although the spec could be made a little easier to digest for people trying to use it

[13:02:01.0000] <gsnedders>
Yeah, the spec is rather horrible

[13:03:00.0000] <gsnedders>
You have to be careful how much you use it when performance matters though

[13:03:01.0000] <jcranmer>
it's more useful (IMHO) than SAX or DOM when you're trying to scrape information from something with varying structure

[13:04:00.0000] <gsnedders>
Easier? I'd say so. Useful? No more so.

[13:05:00.0000] <Dashiva>
More convenient, but not really easier than DOM

[13:05:01.0000] <jcranmer>
Dashiva: what if you have something that can either be a dl, ul, ol, or table?

[13:06:00.0000] <Dashiva>
That's the convenient part

[13:06:01.0000] <jcranmer>
or, to be more precise, a specific row or item of any of those

[13:06:02.0000] <Dashiva>
tableref.rows[i].cols[j]

[13:06:03.0000] <Dashiva>
*cells

[13:06:04.0000] <jcranmer>
yes, but I have to store whether or not I'm querying the list or table

[13:07:00.0000] <Dashiva>
Yes, we already agreed it's more convenient with xpath

[13:08:00.0000] <Dashiva>
But the basic DOM functions are lot easier to learn than all the xpath incantations

[13:08:01.0000] <jcranmer>
I have to use a reference either way, but I guess I don't do enough HTML/XML-based development to matter

[13:09:00.0000] <gsnedders>
http://hg.gsnedders.com/spec-gen/file/tip/specGen/processes/sub.py#l101 — yay :\

[13:09:01.0000] <gsnedders>
I'm probably better at dealing with XPath, but mainly because I don't use the DOM much at all

[13:22:00.0000] <gsnedders>
WTH is the point of <!--status-->?

[13:23:00.0000] <gsnedders>
It only outputs anything apart from "[Sorry, the postprocessor doesn't yet have the boilerplate text for this status]" when the status is ED.

[13:23:01.0000] <gsnedders>
Lachy, Hixie?

[13:28:00.0000] <Lachy>
gsnedders

[13:28:01.0000] <gsnedders>
Yes, that's me

[13:28:02.0000] <Lachy>
you called?

[13:28:03.0000] <gsnedders>
See the above question

[13:29:00.0000] <Lachy>
hmm, let me see...

[13:29:01.0000] <takkaria>
Philip`: how did you go about obtaining your corpus of dmoz data?  did you write a script to download the files, and if so, any chance I could have it?  (for performance benchmarking reasons)

[13:32:00.0000] <gsnedders>
It seems to be the same thing in every status apart from ED de-facto anyway

[13:33:00.0000] <gsnedders>
I dunno if MOs are the same, as I can't see any, though

[13:34:00.0000] <Lachy>
gsnedders, I get "This is a public copy of the editors' draft. It is provided for discussion only and may change at any moment. It probably contains errors. Its publication here does not imply endorsement of its contents by W3C"

[13:34:01.0000] <gsnedders>
Lachy: Yeah, that's what I get. It's just that no other status gives anything (apart from the note that there is no boilerplate text)

[13:35:00.0000] <Lachy>
oh, ok. let me try other ones...

[13:35:01.0000] <gsnedders>
/me has already tried them all

[13:35:02.0000] <Lachy>
ok

[13:36:00.0000] <gsnedders>
Lachy: What use is it when it doesn't give anything normally?

[13:36:01.0000] <gsnedders>
That's what I want to know.

[13:36:02.0000] <Lachy>
it's probably because other statuses need custom status text

[13:36:03.0000] <gsnedders>
They don't. They all always have the same.

[13:36:04.0000] <gsnedders>
This section describes the status of this document at the time of its publication. Other documents may supersede this document. A list of current W3C publications and the latest revision of this technical report can be found in the W3C technical reports index at http://www.w3.org/TR/.

[13:39:00.0000] <smedero>
for whatever reason the geo api spec differs, but not by much.... 

[13:39:01.0000] <smedero>
"This section describes the status of this document at the time of its publication. Other documents may supersede this document. A list of current W3C publications and the most recently formally published revision of this technical report can be found in the W3C technical reports index  at http://www.w3.org/TR/."

[13:40:00.0000] <smedero>
"recently formally published"

[13:40:01.0000] <smedero>
http://dev.w3.org/geo/api/spec-source.html

[13:40:02.0000] <gsnedders>
Ahah!

[13:41:00.0000] <gsnedders>
You get status text if you set the WG to "CSS WG"

[13:41:01.0000] <gsnedders>
/me refuses to copy that

[13:42:00.0000] <gsnedders>
I am _NOT_ adding WG specific stuff.

[13:43:00.0000] <Lachy>
gsnedders, have you checked the pubrules document to find out the requirements?

[13:48:00.0000] <gsnedders>
Lachy: It changes for almost every status, and I don't want to do any more than the postprocessor does here. I'm not adding any W3C specific stuff without good reason

[13:52:00.0000] <Lachy>
gsnedders, if it's boiler plate text that is standard for each status level, then it should be included to make it easier for spec writers

[13:52:01.0000] <gsnedders>
Lachy: But it's non-backwards-compatible

[13:52:02.0000] <Lachy>
what do you mean?

[13:53:00.0000] <gsnedders>
Lachy: Documents designed for the postprocessor have it in them themselves

[13:53:01.0000] <Lachy>
so? Documents designed for the post processor also typically omit <!--status-->, and if that isn't there, then don't include it.

[13:54:00.0000] <gsnedders>
Lachy: it ought to be compatible in the compat. mode, within reason, so I can't do that.

[13:55:00.0000] <Lachy>
sure you can.

[13:55:01.0000] <Lachy>
I don't see how updating a feature that wasn't properly implemented in the old processor will break anything.

[14:15:00.0000] <Philip`>
takkaria: I just downloaded dmoz's RDF site listing, used Perl regexps to extract the URLs and to s/&amp;/&/ etc, then passed it through 'sort' and 'uniq', and then 'sort -R' to randomise it, and then took the first n from that list

[14:16:00.0000] <Philip`>
takkaria: and then used a Java program to download and analyse the pages (using HttpClient, and around a hundred simultaneous threads)

[14:17:00.0000] <Philip`>
takkaria: and the Java program cached the downloaded headers/content to disk so it wouldn't have to download them when I ran it a second time

[14:18:00.0000] <Philip`>
takkaria: I could upload the Java thing somewhere, but it's big and ugly, and if you just want a collection of page bodies then it'd probably be easier to just pass the page list into wget or curl

[14:19:00.0000] <Philip`>
/me goes away for a bit

[14:20:00.0000] <Philip`>
(Oh, I also limited the downloads to something like 256K per page, because there was at least one infinitely long radio stream and I didn't want all of it)

[14:20:01.0000] <Philip`>
*256KB

[14:20:02.0000] <smedero>
heh

[14:27:00.0000] <gsnedders>
/me implements something he really doesn't want to

[14:32:00.0000] <gsnedders>
http://hg.gsnedders.com/spec-gen/rev/f10347e98d3c

[14:35:00.0000] <gsnedders>
time to upload a few files from the latest spec-gen

[14:37:00.0000] <gsnedders>
http://stuff.gsnedders.com/spec-gen/ — find bugs in those files, plz.

[14:39:00.0000] <takkaria>
Philip`: ah, thanks.  I'll just grab the RDF and curl it

[14:41:00.0000] <gsnedders>
/me is tempted to add a --w3c-compat-crazy-subsitutions option

[14:43:00.0000] <Lachy>
gsnedders, for which features?

[14:43:01.0000] <gsnedders>
Lachy: rewriting http://www.w3.org/StyleSheets/TR/W3C-(MO|ED|WD|CR|PR|REC|PER|NOTE|RSCND|Member-SUBM)

[14:49:00.0000] <MikeSmith>
gsnedders: fwiw, I don't like the automated ID generation

[14:49:01.0000] <MikeSmith>
I don't like the fact that the IDs can change

[14:50:00.0000] <gsnedders>
MikeSmith: in the existing postprocessor?

[14:50:01.0000] <MikeSmith>
I mean in general

[14:50:02.0000] <MikeSmith>
It doesn't seem like much of hardship to me for editors to manually maintain IDs

[14:52:00.0000] <gsnedders>
MikeSmith: ah

[14:53:00.0000] <MikeSmith>
having stable IDs is a much more valuable feature in a spec

[14:53:01.0000] <MikeSmith>
the ID-generation feature is the wrong kind of optimization

[14:54:00.0000] <takkaria>
I guess that isssue only shows up when the spec is going to take a long time to finish and is being written in public

[14:54:01.0000] <MikeSmith>
of marginal and questionable value to editors, of zero value to readers and other consumers of the doc

[14:55:00.0000] <MikeSmith>
takkaria: true

[14:57:00.0000] <Hixie>
i don't want the ids in the source document if i can help it, but i'm certainly in agreement in principle and would love to see the generator keep state or something to not change IDs

[14:58:00.0000] <Hixie>
generally if you use the title="" attribute to generate the IDs you should be fine i think

[14:59:00.0000] <gsnedders>
(which the postprocessor doesn't)

[14:59:01.0000] <Hixie>
i don't mind if the IDs change as a one time thing when we're switching generators

[15:00:00.0000] <Hixie>
if that means more stability going forward

[15:02:00.0000] <gsnedders>
Yeah, the way I generate IDs should be far more stable

[15:02:01.0000] <Hixie>
how do you do it?

[15:04:00.0000] <gsnedders>
from @title or the textContent, lowercase it, strip leading/trailing whitespace, replace internal whitespace with -

[15:05:00.0000] <gsnedders>
(the postprocessor does all kinds of crazy stuff, but basically stops after it gets to the first space after taking five characters)

[15:05:01.0000] <gsnedders>
and a longer ID should make it more stable

[15:06:00.0000] <Hixie>
cool

[15:14:00.0000] <gsnedders>
/me never knew ID gen could be cool

[15:14:01.0000] <Hixie>
i'm not a good benchmark for determining objective coolness.

[15:16:00.0000] <Philip`>
I hate the crunching noise made by interaction of shoe and snail

[15:17:00.0000] <Philip`>
If you can create a file mapping from old IDs to new IDs, it could be added into the multipage spec's magical redirection thingy so that old links get redirected to the right place

[15:18:00.0000] <Hixie>
good idea

[15:18:01.0000] <takkaria>
Hixie: oh, btw, any chance of getting the tokeniser states upgraded to TOC-visible headers?  would make linking to states easier

[15:21:00.0000] <Hixie>
file a bug

[15:21:01.0000] <takkaria>
k

[15:21:02.0000] <Hixie>
or send e-mail if it's not urgent

[15:21:03.0000] <Hixie>
either way

[15:23:00.0000] <kangax>
html tidy complains that canvas tag is not recognized

[15:24:00.0000] <kangax>
interesting...

[15:25:00.0000] <Philip`>
kangax: I expect it only understands elements from HTML4, so it won't include any HTML5 ones like <canvas>

[15:25:01.0000] <kangax>
that makes sense


2008-07-20
[08:00:00.0000] <gsnedders>
/me wonders if he needs any other features for 1.0 of the spec-gen

[08:12:00.0000] <Lachy>
gsnedders, I already did add the mathml entities to that chart

[08:13:00.0000] <gsnedders>
/me claims blindness

[08:13:01.0000] <gsnedders>
Well, of course, you refer to the entities by their numbers. Duh.

[10:42:00.0000] <gsnedders>
String replacements are expensive. Really expensive.

[10:43:00.0000] <gsnedders>
When done on something the size of HTML 5, at least, looking at every text node, comment, PI, and attribute value in the document.

[10:48:00.0000] <Philip`>
Doing replacements on all those strings, or just doing matches on them all?

[10:49:00.0000] <gsnedders>
Well, doing basic string matches on them all, then if they match that doing a regex replacement

[10:52:00.0000] <gsnedders>
The subs are like half the time taken to process HTML 5

[10:52:01.0000] <gsnedders>
They're a bit more expensive than xref

[10:52:02.0000] <gsnedders>
Basic advice: TOCs rule. They're cheap.

[13:31:00.0000] <gsnedders>
/me stabs lxml

[13:32:00.0000] <jgraham>
?

[13:32:01.0000] <gsnedders>
Store text in a sane way!

[13:32:02.0000] <jgraham>
define sane

[13:33:00.0000] <gsnedders>
Not using the whole tail thing :_

[13:33:01.0000] <gsnedders>
* :P

[13:34:00.0000] <jgraham>
define sane :)

[13:35:00.0000] <gsnedders>
Text nodes, like DOM are sae.

[13:35:01.0000] <gsnedders>
*sane

[13:35:02.0000] <jgraham>
No

[13:37:00.0000] <gsnedders>
They're saner than what lxml does, at lesat.

[13:37:01.0000] <gsnedders>
*least

[13:37:02.0000] <gsnedders>
/me can't type

[13:38:00.0000] <gsnedders>
XPath is nice too.

[13:38:01.0000] <gsnedders>
//text()[contains(normalize-space(translate(., 'AEILNORSTV', 'aeilnorstv')), 'latest version') or contains(., 'http://www.w3.org/TR/')]

[13:50:00.0000] <Dashiva>
gsnedders: You already showed us that one :P

[13:50:01.0000] <gsnedders>
Dashiva: Shhh!

[14:51:00.0000] <gsnedders>
Conclusion of a friend of mine from school: "You're too crazy"

[14:51:01.0000] <gsnedders>
(where the second person refers to me)

[14:52:00.0000] <krijnh>
Mine mostly refers to 'me' :)

[14:54:00.0000] <gsnedders>
krijnh: Yes, but it didn't mean the conclusion referred to me, just that it was his conclusion

[16:08:00.0000] <jgraham>
gsnedders: To elaborate on my brief point earlier, text-as-nodes doesn't make for a nice api because they always get in the way when trying to do sensible tree navigation type things where you only really want elements, so you end up having to define a whole seperate API for tree navigation (ElementTraversal)

[16:09:00.0000] <jgraham>
But I guess you realised that was my point

[16:09:01.0000] <gsnedders>
jgraham: Yeah, they have obvious flaws, but I think in a lot of ways nicer.

[16:10:00.0000] <jgraham>
Well .text isn't too bad, it's the weird .tail thing in elementtree that sucks

[16:10:01.0000] <gsnedders>
yeah

[16:10:02.0000] <gsnedders>
But there's no way around that with the .text

[16:11:00.0000] <jgraham>
Not an obvious one at least

[16:27:00.0000] <jgraham>
Lachy: I think a character reference that told authors how to include any character, not just those with named references, would be nice, especially as there are problems using named references

[16:28:00.0000] <jgraham>
s/reference/pallete/ maybe

[16:28:01.0000] <webben>
could just link to ishida's converter

[16:28:02.0000] <webben>
http://rishida.net/scripts/uniview/conversion.php 

[16:28:03.0000] <webben>
as step 1

[16:30:00.0000] <Philip`>
There should be a thing where you can draw the shape you want using your mouse and it'll search for the matching character

[16:35:00.0000] <webben>
sounds like a use-case for a direct-drawing API ;)

[16:35:01.0000] <jgraham>
webben: That's way more complex than I had in mind. I basically want a way to search for characters with "alpha" in their name or description and get a glyph and an idea of how to include them in my html document

[16:36:00.0000] <jgraham>
Philip`: That would be awesome

[16:36:01.0000] <webben>
http://rishida.net/scripts/pickers/ worth a look too


2008-07-21
[23:00:00.0000] <heycam>
Hixie, typo in html5: s/one or mode/one or more/

[01:36:00.0000] <hsivonen_>
lots of logs to read...

[01:52:00.0000] <hsivonen_>
zcorpan: Tokenizer errors are in Tokenizer.java, tree builder errors in TreeBuilder.java. XML errors are in the xmlparser module

[01:53:00.0000] <hsivonen_>
zcorpan: RELAX NG errors are in onvdl/src//Users/hsivonen/Projects/whattf/onvdl/src/com/thaiopensource/relaxng/impl/resources/Messages.properties 

[01:53:01.0000] <hsivonen_>
zcorpan: non-schema errors are in the non-schema module

[01:53:02.0000] <hsivonen_>
zcorpan: in summary: messages are all over the place. :-(

[01:54:00.0000] <hsivonen_>
mainly because each component is supposed to be reusable on its own and, therefore, needs to contain its own messages

[01:54:01.0000] <hsivonen_>
or came from a third party that way

[01:55:00.0000] <hsivonen_>
zcorpan: warning about inferred tags would be an XML parity advocacy feature

[01:55:01.0000] <hsivonen_>
zcorpan: checking for indentation doesn't seem to come with a similar competitive consideration

[01:57:00.0000] <hsivonen_>
annevk: if someone wants to use XHR to POST text/html from a browser by giving the content as a string to XHR, they need to set Content-Type and, hence, still need OPTIONS, right?

[02:37:00.0000] <hsivonen_>
re: data-* and microformats: It seems to me that it would be better to have a fast-track way for microformats.org to get attributes added to HTML validation.

[02:38:00.0000] <hsivonen_>
Validator.nu already supports custom schemas in case a user doesn't want to wait for the presets to change

[02:57:00.0000] <hsivonen_>
roc: Re: parsing perf and case preserving: It might be OK to make the tokenizer conditionally case folding. What's bad for performance is deferring case folding to after the tokenizer, since early interning of tokens is desirable. (not only interning the string but mapping to a static token object that has the 'scoping' etc flags, the tree builder dispatch group magic number, etc.)

[03:00:00.0000] <hsivonen_>
I do camelCase fixes for SVG by having the static pre-interned tokens carry a reference to a camelCased string

[03:00:01.0000] <Philip`>
hsivonen_: Can't you have each token contain both the original un-case-folded string and the interned static case-folded token object?

[03:00:02.0000] <hsivonen_>
so the camelCasing is zero-cost in execution time and only cost memory footprint

[03:01:00.0000] <hsivonen_>
Philip`: then I couldn't share the same objects for each concurrent parser instance

[03:01:01.0000] <hsivonen_>
Philip`: the well-known tokens are statics that go in memory at initialization time and are then shared by all threads

[03:02:00.0000] <hsivonen_>
I guess I should reply on list to SVG WG's proposal and explain how I do token interning and tree builder dispatch

[03:03:00.0000] <roc>
the token objects refer back to the source right?

[03:03:01.0000] <hsivonen_>
roc: they don't

[03:03:02.0000] <roc>
hmm, someone claimed that they do

[03:03:03.0000] <hsivonen_>
roc: Hixie got that part wrong about how I implemented it

[03:04:00.0000] <roc>
ok

[03:04:01.0000] <roc>
I'm surprised that round-trippability of source is not a concern here

[03:05:00.0000] <hsivonen_>
roc: the DOM doesn't represent inter-attribute whitespace, either

[03:05:01.0000] <roc>
since HTML5 specifies (and Acid3 tests) round-trippability of attribute values, I assumed full round-trippability was the way the wind was blowing

[03:05:02.0000] <roc>
that's true

[03:05:03.0000] <hsivonen_>
roc: round tripping source on the level that preserves meaningless details is a huge hassle

[03:05:04.0000] <hsivonen_>
and would interfere with the primary use cases of a parser

[03:06:00.0000] <hsivonen_>
(at least for perf considerations)

[03:06:01.0000] <hsivonen_>
round-trippability of attribute values is different

[03:09:00.0000] <Philip`>
Is parser performance a significant issue in practice, compared to networking and scripting and everything else involved in loading a page?

[03:09:01.0000] <hsivonen_>
I find I pretty much agree with takkaria's feedback regarding the SVG proposal

[03:09:02.0000] <roc>
yes

[03:10:00.0000] <Philip`>
The author-visible aspects of the language seem like they should be much more important than the optimisation details of some specific parser implementations

[03:11:00.0000] <roc>
I agree

[03:11:01.0000] <hsivonen_>
Philip`: it seems to me that early interning is a general implementation concern--not just a concern for a specific impl

[03:12:00.0000] <roc>
maybe

[03:12:01.0000] <roc>
designing around implementation details is risky because later on those implementation details might not matter, or might be broken by another spec change

[03:13:00.0000] <roc>
see my comments about SVG filters

[03:14:00.0000] <hsivonen_>
roc: OTOH, it really sucks to get parts of infrastructure that are really inconvenient in practice (e.g. Namespaces)

[03:15:00.0000] <roc>
it does, but that's life writing Web browsers

[03:15:01.0000] <hsivonen_>
/me guesses that Gecko's XML parsing could be faster if nsIAtoms for element local names could be built much earlier

[03:16:00.0000] <roc>
I never did figure out why the SVG WG's proposal actually needs to preserve case in tokens, though

[04:07:00.0000] <gsnedders>
Hixie: you around?

[04:27:00.0000] <gsnedders>
Hixie: Sent mail anyway now

[04:50:00.0000] <zcorpan_>
hsivonen: ok (re messages etc)

[05:51:00.0000] <zcorpan_>
krijnh: feature request for the logs: at the bottom please have links to the previous and next day

[06:02:00.0000] <zcorpan_>
that favicon game got me inspired

[06:02:01.0000] <zcorpan_>
i think i'll implement a creepy favicon that looks at the cursor later today

[06:12:00.0000] <mpt>
zcorpan_, call it xeyes 2.0 BETA

[06:48:00.0000] <takkaria>
I don't see how you can get acceptable performance from an HTML5 parser without some kind of string interning

[06:49:00.0000] <virtuelv>
mpt: Xeys, even

[06:53:00.0000] <mpt>
touch´

[06:53:01.0000] <gsnedders>
takkaria: Well, implement it in a totally different way to how it is spec'd :P

[06:54:00.0000] <takkaria>
well, if you have a treebuilder, and you have comparisons on tag name, either you do string comparisons multiple times per tag or you do a simple integer comparison, probably using switch() or the equivalent thereof

[06:54:01.0000] <Philip`>
takkaria: It's trivial - just lower your expectations

[06:55:00.0000] <Philip`>
"Acceptable" is purely subjective, and you are the subject, so you can choose to accept anything :-)

[06:57:00.0000] <takkaria>
by "acceptable" I mean "anywhere near competing with browser speeds"

[06:58:00.0000] <takkaria>
or even just libxml2 speed, really

[06:58:01.0000] <Philip`>
Presumably you need some kind of "unknown" token that includes the (case-folded) original source string, when it's not one of the default set of internable strings; so I'm still not sure why you can't just do the same for known tags, and carry around the original (unfolded) string in case you need it in the tree constructor, as well as the folded interned integer for fast switching

[07:01:00.0000] <takkaria>
the thought of doing that makes me cringe, I'd have to rerewrite a chunk of hubbub that I'm only just finishing off rewriting

[07:01:01.0000] <takkaria>
:)

[07:04:00.0000] <Philip`>
When balancing some inconvenience for early implementers like you by breaking your optimisation assumptions, versus some inconvenience for the whole of humanity for the rest of eternity by not designing the best possible language, I think you're on the losing side :-p

[07:05:00.0000] <takkaria>
I'm just not sure why people want thee tokeniser to case-preserve

[07:06:00.0000] <gsnedders>
takkaria: Gecko keeps it for one or two mainly irrelevant things

[07:09:00.0000] <Philip`>
takkaria: I think I'd be happier if people argued that way in terms of whether it's the best possible language for authors, and didn't use "but I already implemented this stuff that's commented out in a recently-written controversial section of a draft spec, and it'd take lots of work to change and I'd have to rethink my optimisation approach" as an argument for anything :-)

[07:12:00.0000] <takkaria>
all I'm saying is this; the spec currently makes case-folding mandatory.  if there is a reason to change it, then change it, by all means, but if the reason is because the SVG group don't want "<SVG>" to start an SVG block, then I'm not convinced

[07:17:00.0000] <hsivonen>
gsnedders: Gecko does what? Gecko's internal tree API wants to see element names as nsIAtoms which are essentially interned strings

[07:18:00.0000] <gsnedders>
hsivonen: case-preserve

[07:18:01.0000] <hsivonen>
gsnedders: and the well-known lower-case HTML names are pre-interned

[07:20:00.0000] <Philip`>
takkaria: If the only case it's ever needed is to detect <SVG>, just add a one-bit flag to tokens to say "this token name was 'svg' in lowercase", and the tokeniser can set that before it does its standard case folding

[07:21:00.0000] <Philip`>
(Please note that I have no idea how sensible tokenisers are implemented, so I could be entirely wrong about everything :-) )

[07:24:00.0000] <takkaria>
it would be an arse to do that in hubbub

[07:25:00.0000] <takkaria>
I can't imagine it being a significant perf loss to special-case "svg" but all the same, I'd want to avoid it

[07:25:01.0000] <hsivonen>
Philip`: I just sent email recounting why I don't want late case folding

[07:25:02.0000] <hsivonen>
Philip`: of course, I think what I'm doing is sensible :-)

[07:26:00.0000] <takkaria>
given that e.g. it would have roughly the same effect as passing it through to the xml processor (it wouldn't display since tag names are in the wrong case)

[07:26:01.0000] <gsnedders>
hsivonen: It obviously isn't sensible, because you're doing it

[07:26:02.0000] <takkaria>
nice to see the odd ad hominem still in use :)

[07:26:03.0000] <gsnedders>
:P

[07:27:00.0000] <gsnedders>
takkaria: The thing is anyone around here for long enough should know I don't mean it at all :P

[07:27:01.0000] <Philip`>
Clearly the sensible thing would be to not write an HTML5 parser, and to do something nicer instead

[07:28:00.0000] <gsnedders>
Write an XML5 parser!

[07:28:01.0000] <hsivonen>
hmm. Mail.app made my quoting ugly :-(

[07:37:00.0000] <takkaria>
hsivonen: that mail must have taken you a long time to write

[07:39:00.0000] <gsnedders>
Mail.app sux.

[07:39:01.0000] <gsnedders>
/me needs to find a better mail client

[07:42:00.0000] <jcranmer>
gsnedders: telnet?

[07:42:01.0000] <gsnedders>
jcranmer: better, I said.

[07:42:02.0000] <jcranmer>
oh, you're using Mail.app, not Outlook

[07:43:00.0000] <takkaria>
thunderbird 3 might be an upgrade

[07:43:01.0000] <takkaria>
of course, you have to wait a while. :)

[07:44:00.0000] <jcranmer>
only 6-ish months

[07:44:01.0000] <gsnedders>
Provided it fixed the idiotic UI behaviour.

[07:44:02.0000] <gsnedders>
:P

[07:44:03.0000] <jcranmer>
which idiotic UI behavior?

[07:44:04.0000] <gsnedders>
(Like, don't come up with your own behaviour for things, do what everything else does)

[07:44:05.0000] <jcranmer>
ah

[07:45:00.0000] <gsnedders>
Like, cmd+scroll with scroll wheel should have the same affect as without cmd

[07:45:01.0000] <gsnedders>
(yes, I do randomly hold cmd down)

[07:45:02.0000] <takkaria>
I also hope that they figure out how to let me connect to my own mail server over SSL with a self-signed cert without me having to go through the rigmarole that tb3 currently puts me through

[07:45:03.0000] <jcranmer>
I think that's FF's fault

[07:46:00.0000] <gsnedders>
It's been a while since I've played around with TB, and I can't remember what annoys me in Gecko and what annoys me in TB :P

[07:48:00.0000] <Philip`>
Thunderbird shows me a list of my emails and lets me click on them to read them, and that's good enough for me

[07:48:01.0000] <gsnedders>
I want sane threading.

[07:49:00.0000] <jcranmer>
I want free email clients to actually generate I-R-T and References: correctly

[07:49:01.0000] <Lachy>
gsnedders, compared with Mail.app, Thunderbird gives very sane threading, unlike Mail.app's confusing threading

[07:49:02.0000] <gsnedders>
Lachy: True, but TB annoys me in other ways.

[07:49:03.0000] <jcranmer>
besides, TB uses the unofficial official threading algorithm

[07:49:04.0000] <Lachy>
jcranmer, what?

[07:50:00.0000] <jcranmer>
Lachy: the algorithm in the expired draft RFC

[07:50:01.0000] <Lachy>
which one?

[07:51:00.0000] <jcranmer>
hmm, I can't find it ATM, but RFC 5256 references http://www.jwz.org/doc/threading.html for threading

[07:53:00.0000] <jcranmer>
although the algorithm is given by jwz, so be prepared to meet bile at any product other than NS2

[07:53:01.0000] <gsnedders>
NS2?

[07:54:00.0000] <takkaria>
netscape 2

[07:54:01.0000] <gsnedders>
ah

[07:54:02.0000] <jcranmer>
netscape 2, jwz apparently hates ns 4 and anything later with a passion

[07:54:03.0000] <Philip`>
What about NS3?

[07:54:04.0000] <jcranmer>
he seems to be okay with that

[07:55:00.0000] <jcranmer>
my knowledge of early Netscape history is very little

[07:55:01.0000] <gsnedders>
/me doesn't remember it either

[07:55:02.0000] <gsnedders>
But maybe that's more justifiable

[07:56:00.0000] <Philip`>
My (possibly incorrect) memory of that era is primarily that NS3 allowed you to set img.src in scripts, but that was the only dynamicity allowed, but then IE4 came out and you could dynamically change pretty much anything on the entire page, and I thought that was really cool

[07:56:01.0000] <Philip`>
(I also thought Java applets to do animated wobbly text were really cool)

[07:56:02.0000] <gsnedders>
So maybe you aren't he best person to judge objective coolness either.

[07:57:00.0000] <Philip`>
I'm not sure "objective coolness" is a concept that makes sense

[07:58:00.0000] <takkaria>
dynamicity is a terrible word

[07:59:00.0000] <gsnedders>
takkaria.name = 'bob'

[07:59:01.0000] <gsnedders>
That doesn't seem to work

[08:00:00.0000] <takkaria>
I'm obviously still running NS3. :)

[08:00:01.0000] <gsnedders>
Philip`: Besides, how dare you be kind to MS!

[08:00:02.0000] <jcranmer>
/me notes that he actually has used telnet to check email, but only because he's trying to write an IMAP server and needs to correlate with a real IMAP server

[08:01:00.0000] <gsnedders>
/me is listening to Finding My Way by Rush from Rush

[08:01:01.0000] <gsnedders>
Hmm, that had the undesired result

[08:01:02.0000] <jcranmer>
/me also notes that /.'s knee-jerk reaction to MS is often unwarranted

[08:01:03.0000] <gsnedders>
/me also notes that /.'s knee-jerk reaction to most things is often unwarranted :)

[08:02:00.0000] <Philip`>
/me notes that knee-jerk reactions in general are often unwarranted

[08:04:00.0000] <jcranmer>
/me notes that /me seems to be popular today

[08:04:01.0000] <Philip`>
takkaria: http://rubyhacker.com/coralbook/dynam.html is long enough to serve as adequate defence of my use of the word :-)

[08:06:00.0000] <gsnedders>
/me notes the comments on digg are stupid

[08:06:01.0000] <gsnedders>
Godwin's Law invoked on the first comment.

[08:08:00.0000] <gsnedders>
And factually incorrect.

[08:08:01.0000] <gsnedders>
I'll be dugg down for saying why Hitler did actually hate the Jews, but so is life

[08:10:00.0000] <jcranmer>
logic + /. / digg / etc. = NaN

[08:12:00.0000] <gsnedders>
:P

[08:13:00.0000] <gsnedders>
Lesson one of digg: Thou shalt not post the truth.

[08:13:01.0000] <Philip`>
Lesson zero: Thou shalt not post.

[08:14:00.0000] <gsnedders>
:)

[08:14:01.0000] <Philip`>
Saves an awful lot of time and stress

[08:14:02.0000] <gsnedders>
It amazes me what manages to get dugg up at times though

[08:16:00.0000] <gsnedders>
Like, at time defending MS and putting down F/OSS gets dugg up.

[08:38:00.0000] <takkaria>
jcranmer: are IMAP servers not remotely like what the spec says they should be, then?

[08:38:01.0000] <takkaria>
the first rule of digg is actually to not look at digg, fwiw

[08:40:00.0000] <takkaria>
Philip`: it's still an ugly word without a nice-sounding pronounciation

[08:41:00.0000] <jcranmer>
takkaria: the spec is one of the most obfuscated I've ever read

[08:41:01.0000] <jcranmer>
if I were grading it for organization, I'd think a C would be on the high side

[08:42:00.0000] <takkaria>
I read it through when I was going to implement a webmail app but never got round to it

[08:43:00.0000] <takkaria>
my favpurite bit was always the modified UTF-7 encoding

[08:43:01.0000] <Philip`>
takkaria: Pronouncing it kind of like "diner-MIcity" sounds reasonable to me

[08:44:00.0000] <jcranmer>
takkaria: fortunately, there's a draft to actually wave it all off and make it UTF-8

[08:45:00.0000] <takkaria>
jcranmer: oh, really?  that means I might get round to writing my webmail app then

[08:45:01.0000] <Philip`>
GIMPLE is fun

[08:45:02.0000] <Philip`>
*not entirely

[08:45:03.0000] <jcranmer>
unfortunately, knowing IETF, it will take a year or so before it actually becomes an RFC

[10:08:00.0000] <zcorpan_>
is there a way to get larger extracts from google alerts?

[10:45:00.0000] <virtuelv>
*sigh* twitterspamfollowers seriously all need to go die in a fire

[10:45:01.0000] <virtuelv>
pronto

[11:25:00.0000] <Hixie>
i just realised that the svgwg's proposal has a giant hole

[11:25:01.0000] <Hixie>
it specifies that the parser should bail as soon as a well-formedness error is hit

[11:25:02.0000] <Hixie>
but nothing defines where that error is

[11:25:03.0000] <Hixie>
as far as i can tell

[11:27:00.0000] <Philip`>
That sounds easy - just define it as the earliest point such that no well-formed XML document could begin with the characters up to that point

[11:28:00.0000] <Hixie>
yeah, that could work

[11:28:01.0000] <gsnedders>
Philip`: That'd require the entire document to be well-formed XML, thoguh

[11:28:02.0000] <gsnedders>
*though

[11:29:00.0000] <Hixie>
nah, you know when the xml stream starts

[11:30:00.0000] <Philip`>
gsnedders: just define it as the earliest point such that no well-formed XML document could begin with the characters from the start of the magic XML-triggering element up to that point

[11:30:01.0000] <gsnedders>
That's different :P

[11:30:02.0000] <Philip`>
Only if you're unnecessarily pedantic and ignore what I meant :-p

[11:31:00.0000] <gsnedders>
That'd be me :P

[11:31:01.0000] <Philip`>
/me plays with floating point stuff, and discovers the 'nextafter' function, which is exciting since he never knew such a thing existed

[11:32:00.0000] <Hixie>
neat

[11:32:01.0000] <gsnedders>
Philip`: in what?

[11:32:02.0000] <Philip`>
gsnedders: C

[11:32:03.0000] <gsnedders>
eww.

[11:32:04.0000] <gsnedders>
/me runs

[11:32:05.0000] <gsnedders>
No, I should actually do something about learning C

[11:33:00.0000] <Philip`>
(I'm actually playing with floating point stuff in JS, so I've added a native function to expose nextafter to my scripts)

[11:34:00.0000] <Philip`>
(It's slightly annoying that e.g. Math.cos(DBL_MAX) == 0.905781 or 1.79769e+308 depending on compiler optimisations)

[11:35:00.0000] <gsnedders>
DBL_MAX?

[11:35:01.0000] <Philip`>
Oh, that's a C thing too

[11:35:02.0000] <Hixie>
does anyone know of any UAs that handle rel=alternate other than for feed autodetection and stylesheet declarations?

[11:35:03.0000] <Philip`>
It's just the maximum finite double

[11:51:00.0000] <smedero>
Hixie: rel=alternate for Opera Widgets: http://virtuelvis.com/archives/2006/07/widget-autodiscovery

[11:51:01.0000] <smedero>
not sure if that's still valid or not.

[11:51:02.0000] <smedero>
(as in, whether Opera 9.5 supports it...)

[11:52:00.0000] <Hixie>
cool thanks

[11:54:00.0000] <smedero>
Also, didn't IE implement something like uh <link rel="alternate" media="print" href="print-version.html">

[11:54:01.0000] <Hixie>
did they?

[11:54:02.0000] <smedero>
I'm vaguely remembering some half-baked feature... sadly I'm not seeing anything official in msdn land...

[11:55:00.0000] <Hixie>
no worries

[11:56:00.0000] <smedero>
This page suggest IE4 supported something like that: http://www.dynamicdrive.com/dynamicindex9/printstyle.htm

[12:29:00.0000] <virtuelv>
smedero: still valid, supported, and I think there's a note in one of the widget specs as well

[12:29:01.0000] <takkaria>
Philip`: sam ruby is doing a Decimal class, I believe, to help with that kind of thing

[12:30:00.0000] <virtuelv>
no, we changed that to rel="widget" http://dev.w3.org/2006/waf/widgets/#appendix

[12:34:00.0000] <Philip`>
takkaria: Unfortunately I need to guarantee that any arbitrary script will always give precisely the same result, so I need normal JS Numbers to work

[12:35:00.0000] <Philip`>
(I need to guarantee some C++ code always gives precisely the same result too, but that's easier since it can just be rewritten with fixed-point maths)

[12:35:01.0000] <takkaria>
Philip`: fair enough, just thought I'd mention it

[12:36:00.0000] <Philip`>
The most obvious problem I've seen is that (-0) % 1 == either 0 or -0 depending on compiler optimisations

[12:37:00.0000] <Philip`>
Also Math.pow(-1, 1e36) is NaN in GCC but 0 in MSVC

[12:38:00.0000] <gsnedders>
/me attempts to validate http://stuff.gsnedders.com/spec-gen/html5.html

[12:38:01.0000] <Philip`>
and a load of functions give different answers in the 16th decimal place

[12:51:00.0000] <Hixie>
gsnedders: i just mistook your version for the whatwg.org copy, so that's a good sign :-)

[12:51:01.0000] <gsnedders>
:)

[12:52:00.0000] <gsnedders>
It's creating duplicate IDs, which isn't.

[12:52:01.0000] <Hixie>
search for "(meaning that a regular </a> end tag"

[12:53:00.0000] <Hixie>
why is that linked?

[12:53:01.0000] <gsnedders>
/me wonders how that isn't linked in the original

[12:54:00.0000] <gsnedders>
hmm.

[12:54:01.0000] <gsnedders>
Stripping non-alphanumberic/space characters in the term, is the answer

[12:54:02.0000] <Hixie>
oh this is with w3c-compat enabled?

[12:54:03.0000] <gsnedders>
Yeah

[12:54:04.0000] <Hixie>
ah

[12:54:05.0000] <gsnedders>
But that behaviour still isn't w3c-compat

[12:54:06.0000] <gsnedders>
Hmm.

[13:00:00.0000] <gsnedders>
Why on earth am I creating duplicate IDs?

[13:04:00.0000] <gsnedders>
Huh.

[13:04:01.0000] <gsnedders>
This makes absolutely no sense.

[13:05:00.0000] <Hixie>
what are some of the duplicates?

[13:05:01.0000] <Hixie>
maybe i have "foo-bar" and "foo bar" as two different title attributes and you turn them both into "foo-bar"?

[13:06:00.0000] <gsnedders>
That shouldn't be an issue.

[13:08:00.0000] <Hixie>
it strikes me that http://www.w3.org/TR/css3-selectors/#UIstates doesn't actually define what :enabled and :disabled actually match

[13:10:00.0000] <gsnedders>
'HtmlElement' object has no attribute 'getroot'

[13:10:01.0000] <gsnedders>
/me stabs lxml, again

[13:10:02.0000] <gsnedders>
Oh, I see.

[13:10:03.0000] <gsnedders>
Element.getroottree().getroot()

[13:20:00.0000] <gsnedders>
/me fixes that bug

[13:23:00.0000] <gsnedders>
OK, the only validation errors now are either Hixie's fault or just me not making the ID valid per HTML 4.01

[13:23:01.0000] <gsnedders>
The former by definition are somebody else's problem, and the latter I better fix.

[13:23:02.0000] <Hixie>
i run the html5 validator every time i check in

[13:23:03.0000] <Hixie>
and right now the only error is the doctype

[13:23:04.0000] <Hixie>
as far as i know

[13:24:00.0000] <gsnedders>
Hixie: As HTML 5?

[13:24:01.0000] <Hixie>
yes

[13:24:02.0000] <gsnedders>
That makes a difference :)

[13:24:03.0000] <Hixie>
/me just fixed the whatwg version's doctype to be html5 too :-P

[13:24:04.0000] <Hixie>
(not checked in yet)

[13:24:05.0000] <gsnedders>
Then I don't have it, seeming I just work from SVN :P

[13:24:06.0000] <Hixie>
:-)

[13:25:00.0000] <gsnedders>
The only errors are <script> missing @type, and a table having no tbody (for lack of <!--CHARACTER-REFERENCES-->)

[13:26:00.0000] <Hixie>
ah ok good

[13:26:01.0000] <gsnedders>
And then what I've broken :)

[13:26:02.0000] <gsnedders>
HTML 5 allows everything except spaces in @id, right?

[13:27:00.0000] <Hixie>
/me looks

[13:27:01.0000] <gsnedders>
/me is just checking he isn't being really dumb

[13:27:02.0000] <Hixie>
The value must be unique in the subtree within which the element finds itself and must contain at least one character. The value must not contain any space characters.

[13:27:03.0000] <gsnedders>
Yeah, I have that in front of me.

[13:27:04.0000] <gsnedders>
Not in the WHATWG or W3C copy, though :)

[13:27:05.0000] <Hixie>
hm?

[13:27:06.0000] <gsnedders>
my copy :P

[13:27:07.0000] <Hixie>
aah

[13:28:00.0000] <Hixie>
my brain doesn't work so early in the morning

[13:28:01.0000] <gsnedders>
Hixie: But it isn't even morning in SF. :P

[13:29:00.0000] <gsnedders>
(I use SVN because then I can just change whatwg-header once to use absolute URLs, and then SVN takes care when updating it)

[13:29:01.0000] <gsnedders>
/me wonders

[13:29:02.0000] <gsnedders>
Do I default to HTML 5 @id, or HTML 4.01 @id?

[13:30:00.0000] <Hixie>
what characters are you outputting that aren't valid in html4?

[13:30:01.0000] <Hixie>
also why is my web server under such high load suddenly

[13:31:00.0000] <gsnedders>
Hixie: 'ID and NAME tokens must begin with a letter ([A-Za-z]) and may be followed by any number of letters, digits ([0-9]), hyphens ("-"), underscores ("_"), colons (":"), and periods (".").'

[13:32:00.0000] <gsnedders>
And I just follow HTML 5 currently

[13:32:01.0000] <gsnedders>
Hixie: Not me

[13:33:00.0000] <Hixie>
w3c is being slow too -- 49 seconds to gen the spec!

[13:33:01.0000] <Hixie>
normally it's like 10

[13:34:00.0000] <gsnedders>
I can do it in a few seconds here in w3c-compat, in around 4s when not

[13:34:01.0000] <Hixie>
still slow, but much faster than w3c :-)

[13:34:02.0000] <gsnedders>
There again, I'm not reliant on anybody else's computer :)

[13:34:03.0000] <Hixie>
ok shouldn't be any conformance errors now

[13:35:00.0000] <gsnedders>
/me runs `make upload -j 10`

[13:35:01.0000] <Hixie>
ok i'm going to eat lunch. back later.

[13:35:02.0000] <gsnedders>
(10 is just an arbitrary number, as it only ever does 3/4 things at once)

[13:51:00.0000] <Philip`>
gsnedders: Only three quarters of a thing?

[13:51:01.0000] <gsnedders>
Philip`: three or four

[13:55:00.0000] <Philip`>
You could run "make -j" instead of "make -j 10", to make it do as many things as possible

[14:07:00.0000] <gsnedders>
spec-gen 1.0a2 available today!111!!!eleventy!

[16:47:00.0000] <gsnedders>
Hixie: I can't see why "meaning that a regular </a> end tag" isn't linked in the postprocessor

[16:49:00.0000] <Hixie>
no idea

[16:49:01.0000] <gsnedders>
(thus I won't fix the fact it isn't in my copy)

[16:49:02.0000] <gsnedders>
(in compat.)

[16:53:00.0000] <gsnedders>
Hixie: http://pastebin.ca/1078900 — those need to be fixed

[16:54:00.0000] <Hixie>
cool thanks

[16:54:01.0000] <Hixie>
will do

[16:54:02.0000] <gsnedders>
Then no need for --w3c-compat for HTML5 :)

[16:57:00.0000] <Philip`>
/me 's attempt to test floating point numbers in SpiderMonkey ends up finding a buffer overflow in SpiderMonkey instead :-(

[16:58:00.0000] <gsnedders>
:D


2008-07-22
[17:05:00.0000] <Philip`>
https://bugzilla.mozilla.org/show_bug.cgi?id=446494 - great fun

[18:04:00.0000] <gsnedders>
/me pokes michaeltwofish 

[18:04:01.0000] <gsnedders>
/me laughs at him

[18:04:02.0000] <gsnedders>
/me runs

[18:04:03.0000] <michaeltwofish>
gsnedders: I told you I was sensitive :p

[18:05:00.0000] <gsnedders>
Hixie: When do you think you'll change all the em and the like used for xref currently, BTW?

[18:05:01.0000] <Hixie>
about an hour or two from now

[18:05:02.0000] <gsnedders>
Ah :)

[18:05:03.0000] <gsnedders>
Then no more --w3c-compat! Yay!

[18:05:04.0000] <Hixie>
:-)

[18:05:05.0000] <gsnedders>
But libxml2's HTML parser mungles the DOCTYPE :(

[18:05:06.0000] <Hixie>
/me waves his "specgen 1.2" flag

[18:05:07.0000] <gsnedders>
:D

[18:06:00.0000] <gsnedders>
Which leads to it outputting no DOCTYPE using that parser, meaning html5lib has to be used, which is annoying slow.

[18:06:01.0000] <gsnedders>
HTML 4.01 for ever!

[18:06:02.0000] <Hixie>
i can fix up the doctype in post

[18:06:03.0000] <Hixie>
no biggie

[18:07:00.0000] <gsnedders>
Probably quicker to do it that way around than use html5lib

[18:07:01.0000] <gsnedders>
Hopefully we can eventually get libxml2's HTML parser to be an html5 parser anyway

[18:07:02.0000] <Hixie>
hopefully

[18:07:03.0000] <gsnedders>
We can always dream :P

[18:08:00.0000] <gsnedders>
I'll try and push a first beta release of 1.0 tomorrow

[18:08:01.0000] <gsnedders>
Hopefully only need one, then I can get out an RC, while will hopefully become the final version without changes

[18:09:00.0000] <gsnedders>
(The main thing needed now is just docs)

[18:09:01.0000] <gsnedders>
The only thing that doesn't work is the XML input/output mode.

[18:09:02.0000] <gsnedders>
And I think that'll just be pushed to 1.1

[18:10:00.0000] <gsnedders>
Then after that you can get your beloved release :P

[18:10:01.0000] <Hixie>
push it to 1.3! 1.3! :-D

[18:10:02.0000] <gsnedders>
:D

[18:10:03.0000] <gsnedders>
And have what in 1.2?

[18:10:04.0000] <gsnedders>
I have nothing else in my to-do list for 1.2 yet! :P

[18:10:05.0000] <jcranmer>
1.2 be an experimental release?

[18:11:00.0000] <gsnedders>
jcranmer: So a re-release of 1.1, just experimental? I like that idea.

[18:11:01.0000] <Hixie>
1.2 is the one where you have the ability for the Web Workers spec's cross-references to HTML5 to be automatically done

[18:11:02.0000] <jcranmer>
although typically it's the odd numbers that are experiments...

[18:11:03.0000] <Hixie>
all the spans that have faded green thick underlines in: http://www.whatwg.org/specs/web-workers/current-work/

[18:11:04.0000] <gsnedders>
Hixie: Push XML to 1.3, you mean?

[18:12:00.0000] <Hixie>
...should be links to HTML5

[18:12:01.0000] <Hixie>
yes

[18:12:02.0000] <gsnedders>
It isn't that much work

[18:12:03.0000] <gsnedders>
Maybe an hour or so

[18:12:04.0000] <gsnedders>
I just want to ship 1.0 :P

[18:12:05.0000] <Hixie>
see, that delays my feature by an hour!

[18:12:06.0000] <gsnedders>
1.0 = Keeping Hixie somewhat happy

[18:12:07.0000] <gsnedders>
1.1 = Keeping annevk and Lachy happy

[18:12:08.0000] <jcranmer>
gsnedders: what exactly is it you're working on?

[18:12:09.0000] <gsnedders>
1.2 = Making Hixie happy

[18:13:00.0000] <Hixie>
that's pretty cunning

[18:13:01.0000] <Hixie>
make me think i'm important but actually put me second, i like it :-P

[18:13:02.0000] <gsnedders>
Hixie: No, you're just more demanding than the others :P

[18:13:03.0000] <Hixie>
sounds familiar

[18:13:04.0000] <gsnedders>
jcranmer: Basically a clone of the CSS WG's postprocessor, so it does xrefs and toc building, and things like date substitution

[18:14:00.0000] <jcranmer>
ah

[18:14:01.0000] <Hixie>
a clone that's faster

[18:14:02.0000] <Hixie>
the speed being the main feature

[18:14:03.0000] <gsnedders>
… and better.

[18:14:04.0000] <jcranmer>
/me is more of a spec complainer than a spec writer

[18:14:05.0000] <Hixie>
better in 1.2!

[18:14:06.0000] <gsnedders>
Hixie doesn't care much about the better part.

[18:14:07.0000] <gsnedders>
He just wants speed.

[18:14:08.0000] <Hixie>
:-)

[18:14:09.0000] <Hixie>
what's better about it anyway?

[18:14:10.0000] <gsnedders>
"i need the section numbering, the table of contents, the cross-referencing, and i think that's all. oh and speed. speed is the most important. oh and the date substitution, maybe, but that i can do myself if necessary."

[18:15:00.0000] <gsnedders>
(and that's more or less the entire feature list of 1.0)

[18:15:01.0000] <Hixie>
heh

[18:15:02.0000] <Hixie>
what are anne and lachlan getting?

[18:15:03.0000] <gsnedders>
Hixie: Anne just wants one or two things like dfn with header linking to header

[18:16:00.0000] <gsnedders>
Hixie: Lachlan wants things like biblio

[18:16:01.0000] <Hixie>
btw if you're still looking for ways to make date substitution faster, just stop doing substitution after the TOC

[18:16:02.0000] <gsnedders>
That's not overly expensive

[18:16:03.0000] <Hixie>
hm, <dfn> in the first paragraph after a section header linking to the header would be quite nice, yes

[18:16:04.0000] <gsnedders>
Anne meant <h1><dfn>foo</dfn></h1>

[18:17:00.0000] <Hixie>
oh

[18:17:01.0000] <Hixie>
well that'd be ok too

[18:17:02.0000] <gsnedders>
http://bugs.gsnedders.com/issues/show/5

[18:17:03.0000] <Hixie>
actually linking to the paragraph instead of the dfn in the general case wouldn't be bad probably

[18:17:04.0000] <Hixie>
internal error

[18:18:00.0000] <gsnedders>
Hmm.

[18:18:01.0000] <gsnedders>
the dangers of running unstable versions of bug tracking software

[18:18:02.0000] <gsnedders>
Hixie: http://krijnhoetmer.nl/irc-logs/whatwg/20080603#l-556

[18:19:00.0000] <gsnedders>
Hixie: It just quotes three lines from that, annevk at :36, :37, and :58

[18:19:01.0000] <gsnedders>
Another thing in 1.1 is indexing

[18:20:00.0000] <takkaria>
gsnedders: I imagine you'll see a speedup when hubbub can be used with libxml2... given that for my google summer of code project I'll have to write some kind of hubbub<->libxml2 binding, it's not too far off

[18:20:01.0000] <gsnedders>
takkaria: Then I have to wait for it to get a fair way downstream :P

[18:20:02.0000] <takkaria>
oh, I suppose so

[18:20:03.0000] <takkaria>
that will take time

[18:21:00.0000] <takkaria>
unless someone writes a C to python compiler, but I suppose that defeats the purpose

[18:22:00.0000] <gsnedders>
Hixie: I have this lovely option now for the CLI: --w3c-compat-crazy-substitutions

[18:22:01.0000] <gsnedders>
Which does the rewriting of http://www.w3.org/StyleSheets/TR/W3C-XXX

[18:24:00.0000] <jcranmer>
/me wishes he could use WF2 in his intranet

[18:25:00.0000] <Hixie>
so far i've only really had one hit with html5

[18:25:01.0000] <Hixie>
namely, postMessage()

[18:25:02.0000] <Hixie>
that's the only thing that's been implemented by all four major browsers

[18:25:03.0000] <jcranmer>
<input type="date" /> makes me salivate

[18:26:00.0000] <Hixie>
i want <menu> and <datagrid>

[18:26:01.0000] <jcranmer>
because rolling a custom date input that is sane is not fun

[18:26:02.0000] <Hixie>
yeah

[18:26:03.0000] <gsnedders>
I want input@type='color'

[18:26:04.0000] <takkaria>
Hixie: not the DOM storage stuff?

[18:26:05.0000] <gsnedders>
actually, I _want_ input@type='colour' :P

[18:26:06.0000] <Hixie>
takkaria: opera and safari haven't got Storage, i don't think, do they?

[18:27:00.0000] <Philip`>
jcranmer: Custom date inputs are easy - just do <script src="custom-date-input-widget.js">

[18:27:01.0000] <Hixie>
he said "sane"

[18:27:02.0000] <jcranmer>
input type=color would also be useful, but I'd want implemented in about five different ways

[18:27:03.0000] <Philip`>
since you're not the first person on the web to want a date widget, so someone must have a made a decent one already

[18:27:04.0000] <jcranmer>
Philip`: I forgot to mention one of the requirements: it works without JS

[18:28:00.0000] <Hixie>
type=color is unlikely to happen, just see how many types of colour pickers mac os x has

[18:28:01.0000] <takkaria>
Hixie: webkit svn has had --with-dom-storage as a configure option for a while

[18:28:02.0000] <Hixie>
ah

[18:28:03.0000] <jcranmer>
the problem with type=color is that people want different things

[18:28:04.0000] <Hixie>
and opera?

[18:28:05.0000] <gsnedders>
Hixie: OS X just has a single one, and options within it :P

[18:29:00.0000] <jcranmer>
chooseable RGB/HSL is common (generally with "recent"), but "select from these options" is also common

[18:29:01.0000] <Hixie>
mac os x has a colour picker picker

[18:29:02.0000] <gsnedders>
True.

[18:29:03.0000] <gsnedders>
Oh well, I better head off to sleep.

[18:29:04.0000] <Hixie>
nn

[18:29:05.0000] <jcranmer>
g'night gsnedders 

[18:29:06.0000] <gsnedders>
I expect a fixed HTML 5 by when I awaken! :P

[18:30:00.0000] <Hixie>
:-)

[18:30:01.0000] <Hixie>
i'll try :-)

[18:30:02.0000] <gsnedders>
Not only is Hixie demanding, but so am I :P

[18:32:00.0000] <takkaria>
Hixie: I thought it had, but maybe it doesn't

[18:32:01.0000] <takkaria>
still, three out of four, when one of the three is IE, I'd class that as a hit

[18:32:02.0000] <jcranmer>
/me can't find a bug in mozilla for <input type="date" />

[18:34:00.0000] <takkaria>
jcranmer: https://bugzilla.mozilla.org/show_bug.cgi?id=344614 would cover it

[18:34:01.0000] <Hixie>
ok, a platinum and a gold? :-)

[18:34:02.0000] <Hixie>
not that IE8 has shipped yet

[18:34:03.0000] <jcranmer>
takkaria: but that's a metabug

[18:35:00.0000] <Hixie>
also, they tried to embrace and extend DOM Storage, so counting it is dubious

[18:35:01.0000] <jcranmer>
if you look at deps, you'll see other <input type=""> as bugs

[18:35:02.0000] <takkaria>
aye, I just saw that

[18:36:00.0000] <takkaria>
Hixie: MS embrace and extend things they see as a threat, so take it as a compliment :)

[18:38:00.0000] <Hixie>
oh i had already taken it as a compliment

[18:38:01.0000] <Hixie>
that's a whole different issue :-)

[18:40:00.0000] <jcranmer>
if IE supports WF2 in IE 8, I think WebKit + Gecko will bump it up on the todo list

[18:41:00.0000] <takkaria>
is it going to?

[18:41:01.0000] <jcranmer>
AFAICT, no

[18:42:00.0000] <jcranmer>
they're too busy hyping CSS 2.1 support

[18:43:00.0000] <jcranmer>
and uber-fashionable stuff like WebSlices

[18:43:01.0000] <jcranmer>
something that every web developer would simply die to have is obviously not on their radar

[18:43:02.0000] <Hixie>
does anyone actually care about WebSlices?

[18:43:03.0000] <jcranmer>
outside of MS

[18:44:00.0000] <Hixie>
i've never heard anyone but microsoft talk about them

[18:44:01.0000] <jcranmer>
probably not

[18:44:02.0000] <takkaria>
mozilla labs are doing something with them

[18:44:03.0000] <Hixie>
oh?

[18:45:00.0000] <Hixie>
oh you mean the microsummaries stuff?

[18:45:01.0000] <Hixie>
that's in ff3

[18:46:00.0000] <Hixie>
webslices seem like a less powerful version of safari's snippets

[18:46:01.0000] <jcranmer>
since FF already has a datepicker, you'd think that proper input@type=date shouldn't be too hard to add

[18:52:00.0000] <Philip`>
I'm not familiar with many date pickers but I noticed the one in Vista's clock is actually pretty nice, because it zooms pleasantly, so e.g. if it's showing a list of months and you click a month then it zooms in on it and shows all the days

[18:53:00.0000] <Philip`>
and you can go century -> decade -> year -> month -> day just by clicking without getting lost and without having nasty fiddly drop-down lists or tiny arrows

[18:53:01.0000] <Hixie>
this is the clock for setting the system time?

[18:55:00.0000] <Philip`>
Yes

[18:55:01.0000] <Philip`>
(I'm not sure if it's used elsewhere)

[18:55:02.0000] <Hixie>
and it lets you pick centuries?

[18:55:03.0000] <Philip`>
No, it's limited to the current century (actually 1990-2099) at the outermost zoom level

[18:56:00.0000] <Hixie>
ah ok

[18:57:00.0000] <Hixie>
seriously wtf, why do i keep timing out from irc.w3c.org

[19:10:00.0000] <Hixie>
ok i fixed the things gsnedders pointed out; I also remove title="" attributes from <em> elements so it's likely that there will be cross-reference problems until i start using his script to gen the spec

[19:10:01.0000] <Hixie>
hsivonen: the validator seems much slower than it was

[20:04:00.0000] <aroben>
Hixie: the bb element's interface is currently called "HTMLCommandElement" -- seems like a typo

[20:11:00.0000] <Hixie>
duuuuh

[20:11:01.0000] <Hixie>
me stoopid

[20:11:02.0000] <Hixie>
thanks fixed

[20:39:00.0000] <Lachy>
Hixie, why was command renamed to bb?

[20:39:01.0000] <Hixie>
it wasn't

[20:39:02.0000] <Lachy>
oh, sorry, misunderstood

[20:43:00.0000] <Lachy>
so, if I've understood correctly, is <bb> designed to allow web pages to include commands within the webpage itself to perform user agent functions, somewhat analogous to a link like <a href="javascript:print()">, but in a non-scripted way?

[20:45:00.0000] <Hixie>
yes

[20:45:01.0000] <Hixie>
indeed we might add <bb type="print">Print this page</bb> at some point

[20:46:00.0000] <Hixie>
it's just an idea though, i'm mostly curious to see how othermaciej responds when I post my reply to the list (I'm still writing it)

[20:46:01.0000] <Hixie>
i think i addressed his concerns

[20:46:02.0000] <Hixie>
but i'm not 100% sure

[20:46:03.0000] <Lachy>
wouldn't action="" be a better name for the attribute?

[20:46:04.0000] <Hixie>
i guess

[20:46:05.0000] <jcranmer>
sounds useful, except for the fact that one of the underlying principles in my intranet project is that "it should work without JS unless you have a compelling reason to require JS"

[20:46:06.0000] <Hixie>
i didn't really think about what to call it

[20:47:00.0000] <Hixie>
jcranmer: this works without js

[20:47:01.0000] <jcranmer>
Hixie: I should also mention an IE requirement ;-)

[20:47:02.0000] <Hixie>
well, IE doesn't support standalone webapps at all, so that point is moot

[20:47:03.0000] <jcranmer>
in any case, there was one feature I added not too long ago that required FF

[20:48:00.0000] <othermaciej>
I will read the email and see what I think

[20:48:01.0000] <jcranmer>
justified on the fact that the only people using it are the people who use FF and actually ask us if it's safe to upgrade to the next minor version :-)

[20:49:00.0000] <Hixie>
we just hit r1900!

[23:13:00.0000] <gsnedders>
Hixie: Well, start using it today :P

[23:16:00.0000] <gsnedders>
/me has an obscenely sore stomach and can't sleep

[23:34:00.0000] <Hixie>
hm, only Firefox and Safari had window.toolbar

[23:55:00.0000] <gsnedders>
Hixie: http://stuff.gsnedders.com/spec-gen/html5.html— output of spec-gen html5.src.html html5.html (i..e, with no options)

[23:55:01.0000] <gsnedders>
and therefore not in w3c compat mode

[23:57:00.0000] <gsnedders>
Hixie: The only thing that breaks at all is what I mentioned in the email yesterday

[00:00:00.0000] <Hixie>
you have some <a>s inside <code>s

[00:00:01.0000] <Hixie>
i fixed what you mentioned yesterday

[00:00:02.0000] <Hixie>
the <em>s

[00:01:00.0000] <Hixie>
oh nevermind

[00:01:01.0000] <Hixie>
you don't

[00:02:00.0000] <gsnedders>
Of course I don't. I wrote the code, so therefore it's right.

[00:04:00.0000] <Hixie>
aw man, now i have double underlines

[00:05:00.0000] <Hixie>
i don't have the selectors i need to make this work

[00:05:01.0000] <gsnedders>
Make better selectors!

[00:05:02.0000] <gsnedders>
:P

[00:05:03.0000] <Hixie>
people didn't like my proposal for :matches()

[00:05:04.0000] <gsnedders>
:uber-html5-selector()

[00:06:00.0000] <Hixie>
i guess we'll have to switch the <a> and the <code> around

[00:06:01.0000] <Hixie>
sigh

[00:12:00.0000] <gsnedders>
We need a parent selector! :P

[00:12:01.0000] <gsnedders>
/me runs

[00:19:00.0000] <gsnedders>
Hixie: I guess you don't stand by, "That's easily fixable" :)

[00:19:01.0000] <Hixie>
guess not

[00:20:00.0000] <gsnedders>
Hixie: The thing is, there are already places like http://www.whatwg.org/specs/web-apps/current-work/#dynamic0

[00:25:00.0000] <gsnedders>
The only thing that matches //code//a in my copy is "identity matrix, and then invoke the transform", where transform is a span inside a code

[00:33:00.0000] <gsnedders>
Hixie: Oh well, there's always --w3c-compat-xref-a-placement (which thereby only does that, and no other compat. stuff)

[01:38:00.0000] <hsivonen>
aargh. Apache on validator.nu has died again. this time differently.

[01:40:00.0000] <hsivonen>
time to upgrade the server I guess

[01:55:00.0000] <hsivonen>
I see "[error] server reached MaxClients setting, consider raising the MaxClients setting" in the Apache logs

[01:56:00.0000] <hsivonen>
surely Apache shouldn't die if MaxClients is reached?

[01:58:00.0000] <Dashiva>
If the clients are hanging/locking up, then there's be none left for new requests, and the server would look pretty dead

[01:59:00.0000] <hsivonen>
Shouldn't a robust HTTP server recover from such a situation somehow?

[02:03:00.0000] <Dashiva>
Apparently there's backlog of waiting requests, but that too has a limit

[02:06:00.0000] <hsivonen>
how do people generally deal with situations like this? I can't be the first person running Apache.

[02:07:00.0000] <hsivonen>
as far as I can tell from access logs, there hasn't been any horrid DoS attack going on

[02:09:00.0000] <hsivonen>
unless, of course, the relevant last log lines are lost in a situation like this

[02:11:00.0000] <wilhelm>
hsivonen: I've had the same issues on my Ubuntu mirror. I just increased the limit significantly.

[02:11:01.0000] <wilhelm>
As long as the hardware survives, that shouldn't be a problem.

[02:12:00.0000] <hsivonen>
wilhelm: I'll try that. thanks

[02:13:00.0000] <wilhelm>
How much traffic is there?

[02:14:00.0000] <hsivonen>
wilhelm: I don't have numbers at hand, but from looking at the raw logs, not enough to explain this

[02:30:00.0000] <hsivonen>
Hixie: how does XHR work from workers if DOM nodes aren't visible in workers?

[02:32:00.0000] <virtuelv>
<arve> I can provoke Opera into showing me any random number of context menus

[02:33:00.0000] <virtuelv>
err, wrong clipboard

[02:33:01.0000] <virtuelv>
http://blogs.msdn.com/ie/archive/2008/07/21/font-embedding-on-the-web.aspx

[02:35:00.0000] <jgraham>
hsivonen: I was under the impression that XHR didn't work in Workers, but I might be wrong

[02:36:00.0000] <Philip`>
/me sees https://bugzilla.mozilla.org/show_bug.cgi?id=437152

[02:37:00.0000] <Philip`>
(including #c9)

[02:37:01.0000] <hsivonen>
jgraham: there's a red box in the worker spec implying that XHR is available

[02:51:00.0000] <Hixie>
hsivonen: it works well, just without the "XML" part

[02:51:01.0000] <hsivonen>
Hixie: ok

[03:19:00.0000] <hsivonen>
:-( things are going really wrong with Apache on validator.nu

[03:20:00.0000] <Hixie>
 :-(

[03:33:00.0000] <gsnedders>
Why is that I am monumentally more productive sitting on the pier with a notebook than here?

[03:37:00.0000] <gsnedders>
/me guesses: no internet

[03:40:00.0000] <hendry>
hsivonen: need some help?

[03:41:00.0000] <hsivonen>
hendry: possibly, but I need to look into this some more to have smart questions to ask

[03:44:00.0000] <hsivonen>
/me sees Timeout 300

[03:45:00.0000] <hendry>
hsivonen: i am thinking of trying to get css validator going on one of my machines.

[03:46:00.0000] <hendry>
don't know why the W3 haven't done anything on the GNU output front. Holidays?

[03:47:00.0000] <hsivonen>
hendry: I don't know what the usual feature request fulfillment time is for the CSS validator

[03:48:00.0000] <hendry>
afaik they need to drop in the template which i helped make and restart the server ;)

[03:52:00.0000] <Hixie>
i think spec authors and working groups should be required to work on a dozen vaguely related things instead of allowing any one group to focus on one specific problem

[03:52:01.0000] <Hixie>
i think having too much expertise on one problem leads to overengineered specs that do too much.

[03:52:02.0000] <Hixie>
/me gets off his soapbox

[03:53:00.0000] <hsivonen>
/me wonders which WG inspired the soapboxing this time

[03:53:01.0000] <Hixie>
CMML/annodex

[03:53:02.0000] <Hixie>
and timed text

[03:54:00.0000] <hsivonen>
/me is not a fan of the W3C timed text spec

[03:56:00.0000] <hendry>
is it a sin to markup my audio oggs in a video tag?

[03:57:00.0000] <hsivonen>
hendry: I have installed software from an unofficial but distribution-specific apt source. do I need to do something specific before I upgrade the distrobution in place?

[03:57:01.0000] <wilhelm>
Hm. Is the <bb> element supposed to replace stuff like this?: <form action='./delete/' method='post'><input type='submit' value='Delete'></form>

[03:58:00.0000] <hsivonen>
wilhelm: as far as I can tell, the purpose of <bb> is to provide a trigger for turning a Web app into a Dock icon

[03:58:01.0000] <hendry>
hsivonen: no.. just:  sudo apt-get update && sudo apt-get -u dist-upgrade

[03:59:00.0000] <hsivonen>
hendry: ok. thanks

[04:25:00.0000] <MikeSmith>
gsnedders: you around?

[04:25:01.0000] <gsnedders>
MikeSmith: I appear to be

[04:27:00.0000] <MikeSmith>
so I know you've almost got a complete workalike of the CSS module postprocesser thing done, but if you still have time and interest, maybe it would be used for rethinking something better than that

[04:28:00.0000] <gsnedders>
MikeSmith: Re-thinking in what way?

[04:28:01.0000] <MikeSmith>
well, in terms of the markup I forces me to put in my source -- the CSS module postprocessor system seems kind of broken by design

[04:29:00.0000] <MikeSmith>
the [FOO] macro stuff

[04:29:01.0000] <gsnedders>
Ah. I already had a relatively long discussion about that.

[04:29:02.0000] <MikeSmith>
OK

[04:30:00.0000] <gsnedders>
On the face of it, it would be nice to use <!--foo--> instead, but then you can't do <link rel="stylesheet" href="http://www.w3.org/StyleSheets/TR/W3C-[STATUS]">

[04:31:00.0000] <gsnedders>
I'd be happy to implement something nicer, pending something found without large flaws

[04:31:01.0000] <MikeSmith>
well, for the Web IDL spec, heycam came up with something that I think is pretty good

[04:32:00.0000] <MikeSmith>
hang on, lemme get you a URL

[04:33:00.0000] <hsivonen>
fwiw, my bibliography generator uses [Foo] in text content as the bibliography trigger

[04:35:00.0000] <gsnedders>
hsivonen: postprocesser does [[foo]]

[04:35:01.0000] <MikeSmith>
gsnedders: http://dev.w3.org/cvsweb/~checkout~/html5/pubnotes/Overview.src.html?rev=1.316&content-type=text/plain;%20charset=utf-8

[04:36:00.0000] <MikeSmith>
see the <header> stuff

[04:37:00.0000] <MikeSmith>
viewing the rendered version of the source gives this:

[04:37:01.0000] <MikeSmith>
it minimizes 

[04:37:02.0000] <MikeSmith>
whoops

[04:37:03.0000] <MikeSmith>
http://dev.w3.org/html5/pubnotes/Overview.src.html

[04:38:00.0000] <MikeSmith>
and the processed result looks just like other WDs

[04:38:01.0000] <MikeSmith>
http://dev.w3.org/html5/pubnotes/Overview.html

[04:38:02.0000] <Lachy>
hmm, interesting.

[04:39:00.0000] <Lachy>
for the class=person and other stuff within, it might be better to use hCard

[04:40:00.0000] <MikeSmith>
I cribbed the basics of that from heycam's stuff here:

[04:40:01.0000] <MikeSmith>
http://dev.w3.org/cvsweb/~checkout~/2006/webapi/WebIDL/Overview.xml?rev=1.83&content-type=text/plain

[04:40:02.0000] <MikeSmith>
Lachy: true

[04:40:03.0000] <Lachy>
hmm, maybe not, cause hcard can be a bit verbose

[04:40:04.0000] <Lachy>
and its class names aren't really author friendly.

[04:40:05.0000] <MikeSmith>
well, it's something people may have familiarity with already at least

[04:40:06.0000] <MikeSmith>
what I have there is just ad-hoc

[04:41:00.0000] <MikeSmith>
or actually it might be based on docbook

[04:41:01.0000] <MikeSmith>
anyway, the general idea is to minimize that markup that authors need to put in the source

[04:41:02.0000] <MikeSmith>
and just move all the boilerplate stuff to the processor

[04:42:00.0000] <gsnedders>
Stuff like the status section is really W3C specific, and I don't want that much W3C specific stuff

[04:43:00.0000] <MikeSmith>
you can of course make that configurable

[04:44:00.0000] <MikeSmith>
or just omit it from the source

[04:44:01.0000] <MikeSmith>
in which case the processor doesn't need to do anything with it

[04:45:00.0000] <gsnedders>
or to phrase it another way, it's something I won't use, and thus have little interest in writing code for :)

[04:45:01.0000] <Lachy>
gsnedders, maybe there's a way to make it more generic, so instead of hard coding W3C specific stuff into the spec-gen, allow authors to provide some sort of boiler-plate text config file that declares things like <!--status--> and its replacement

[04:46:00.0000] <MikeSmith>
gsnedders: what Lachy said

[04:46:01.0000] <gsnedders>
Lachy: And then you need a database of long/short forms of statuses; the status boilerplate for each status, which varies from WG to WG

[04:47:00.0000] <MikeSmith>
boilerplate for status doesn't vary from group to group, actually

[04:47:01.0000] <MikeSmith>
it's mostly the same

[04:47:02.0000] <MikeSmith>
some strings in it are different

[04:48:00.0000] <Lachy>
gsnedders, parts of the status are the same for everyone and other parts are customised for each spec. That's not a problem

[04:48:01.0000] <MikeSmith>
btw, I was recently told that there's no requirement to mention the W3C activity or domain in the status

[04:49:00.0000] <MikeSmith>
so those can be ommitted

[04:49:01.0000] <Lachy>
but even if they were different, then just let each WG provide their own config file with customised boilerplate text

[04:49:02.0000] <MikeSmith>
the only thing in the W3C status boilerplate that's really W3C specific is the IPP thing

[04:50:00.0000] <MikeSmith>
all the other variables there are general

[04:50:01.0000] <MikeSmith>
1) a group name 2) a mailing adress for comments 3) a URL for archive of the mailing list

[04:51:00.0000] <Lachy>
/me wonders what Rob is smoking. http://lists.w3.org/Archives/Public/public-html/2008Jul/0273.html

[04:51:01.0000] <Lachy>
http://lists.w3.org/Archives/Public/public-html/2008Jul/0267.html

[04:52:00.0000] <Lachy>
/me is resisting the urge to respond cause it'll only end up being a flamewar

[04:53:00.0000] <MikeSmith>
Lachy: yep

[04:54:00.0000] <MikeSmith>
on the good-news side, John Resig recent blog entry about performance of DocumentFragment is kinda nice

[04:57:00.0000] <Lachy>
MikeSmith, link?

[04:57:01.0000] <hsivonen>
Lachy: replying wouldn't be productive

[04:58:00.0000] <Lachy>
hsivonen, I know, that was my point.

[04:59:00.0000] <Lachy>
http://ejohn.org/blog/dom-documentfragments/

[05:00:00.0000] <zcorpan_>
funny that he calls hsivonen ignorant about dtds

[05:09:00.0000] <gsnedders>
http://comox.textdrive.com/pipermail/wp-hackers/2008-July/021076.html — more WP fun

[05:39:00.0000] <zcorpan_>
http://wimleers.com/blog/whatwg-truly-open-participation-for-designing-the-next-foundation-of-the-internet makes me smile :)

[06:03:00.0000] <hsivonen>
/me sees a LATERed bug (http://www.w3.org/Bugs/Public/show_bug.cgi?id=5833) despite REMIND and LATER being considered harmful

[06:04:00.0000] <Philip`>
/me wishes Opera's JS implementation supported 'for each'

[06:13:00.0000] <Lachy>
hsivonen, why are LATER and REMIND harmful?

[06:14:00.0000] <hsivonen>
Lachy: https://bugzilla.mozilla.org/show_bug.cgi?id=13534 https://bugzilla.mozilla.org/show_bug.cgi?id=35839

[06:32:00.0000] <Lachy>
aargh! NO! I just deleted a bunch of files I shouldn't have :-(

[06:33:00.0000] <Lachy>
/me will have to recreate them :-(

[06:33:01.0000] <Philip`>
Look in the Recycle Bin

[06:35:00.0000] <Lachy>
Philip`, out of habbit, I emptied the trash straight away without realising that the wrong file had been selected. The problem was I didn't notice I'd 

[06:37:00.0000] <hsivonen>
Lachy: no Time Machine?

[06:39:00.0000] <Philip`>
The data's probably still on disk, so just "hexdump -C /dev/sda" or whatever the non-Linux equivalent is

[06:40:00.0000] <Lachy>
I have no idea what the Mac equivalent for that would be

[06:41:00.0000] <Lachy>
maybe I can install it. But what does that command do?

[06:41:01.0000] <gsnedders>
/dev/disk0s1 is the root drive, IIRC

[06:41:02.0000] <hsivonen>
Lachy: you can read the disk with 'less' on Mac

[06:41:03.0000] <gsnedders>
(You can look up that in Disk Utility)

[06:41:04.0000] <gsnedders>
But you probably just want /dev/disk0 actually

[06:41:05.0000] <Philip`>
/dev/sda is just a file that gives direct access to the hard disk

[06:42:00.0000] <Lachy>
hsivonen, how do I use 'less'?

[06:42:01.0000] <Philip`>
and hexdump is kind of like cat except it dumps stuff in hex

[06:42:02.0000] <Philip`>
(and hexdump -C is a nicer format output)

[06:42:03.0000] <Lachy>
should I just use: less /dev/sda

[06:42:04.0000] <gsnedders>
Lachy: You want /dev/disk0, and not /dev/sda

[06:43:00.0000] <Philip`>
Reading a hundred gigabytes of data through 'less' might not be the best idea ever :-p

[06:43:01.0000] <gsnedders>
Why not? :P

[06:43:02.0000] <gsnedders>
/me runs away

[06:43:03.0000] <gsnedders>
To the pier!

[06:43:04.0000] <gsnedders>
(with a notebook)

[06:44:00.0000] <gsnedders>
(I'm more productive sitting there with a notebook than I am with the internet and everything else to distract me at home, unless I meet someone I know)

[06:44:01.0000] <Lachy>
ok, so do I just keep going through the all the output till I see the file I want?

[06:44:02.0000] <hsivonen>
Lachy: sudo less -f /dev/disk0s1

[06:45:00.0000] <hsivonen>
Lachy: less has search

[06:45:01.0000] <Philip`>
You'd probably have to search for part of the file's content, not its filename

[06:46:00.0000] <Lachy>
Philip`, how do I search for it?

[06:46:01.0000] <Philip`>
How large is the file?

[06:46:02.0000] <Lachy>
the important one was just a python script

[06:46:03.0000] <hsivonen>
Lachy: press slash and then type a string that is unique in the contents of the file and hit enter

[06:46:04.0000] <Philip`>
/me would have thought there'd exist some kind of undeleter program that would be easier to use than less :-)

[06:47:00.0000] <Lachy>
Philip`, there is, but they cost money

[06:48:00.0000] <Philip`>
Lachy: That seems an unfortunate side-effect of using OS X

[06:49:00.0000] <Lachy>
I guess I can just rewrite the script again if I can't get it. It was based on this one http://junkyard.damowmow.com/322

[06:50:00.0000] <Philip`>
/me thinks he has never actually bought any software ever, except for games

[07:16:00.0000] <Lachy>
I couldn't recover the files from my disk, but luckily I can redownload most of them from the original sources and rewrite the python script

[08:36:00.0000] <Lachy>
this time, I checked the script into CVS so I won't lost it again. http://dev.w3.org/cvsweb/html5/html-author/utils/

[08:45:00.0000] <hsivonen>
why is the WHATWG copy of the spec lacking a doctype?

[08:49:00.0000] <zcorpan>
because quirks mode is the new shit

[08:50:00.0000] <zcorpan>
or because http://svn.whatwg.org/webapps/header-whatwg has <!DOCTYPE html> and the css post processor strips the doctype in that case

[08:51:00.0000] <Lachy>
zcorpan, then why would the DOCTYPE still be in the W3C copy?

[08:51:01.0000] <zcorpan>
i guess Hixie is waiting for gsnedders' 1.2 specgen

[08:51:02.0000] <zcorpan>
Lachy: i guess the w3c copy has a different header

[08:52:00.0000] <gsnedders>
hsivonen: Likely because my spec-gen is being used for the WHATWG copy, and with the libxml2 HTML parser being used, it vanishes

[08:53:00.0000] <gsnedders>
Actually, that can't be it

[08:53:01.0000] <zcorpan>
gsnedders: oh is hixie already using your specgen?

[08:53:02.0000] <gsnedders>
zcorpan: Not yet, it seems

[08:53:03.0000] <zcorpan>
ok

[08:53:04.0000] <gsnedders>
The stuff he wants in 1.2 is completely new stuff: 1.0 does everything he needs that already happens

[08:54:00.0000] <gsnedders>
But yeah, the W3C copy has a different header

[08:54:01.0000] <gsnedders>
And pubrules stipulate that a normative copy of the spec must exist as HTML 4.01 or XHTML 1.0

[08:55:00.0000] <Philip`>
The multipage W3C one is HTML 4, so that can be the normative copy :-)

[08:55:01.0000] <gsnedders>
:P

[08:56:00.0000] <hsivonen>
anyway, I just deployed a fix for http://www.w3.org/Bugs/Public/show_bug.cgi?id=5796

[08:56:01.0000] <hsivonen>
which makes errors go away when validating the spec

[08:57:00.0000] <zcorpan>
i like that hyatt is an editor for the w3c version but not for the whatwg version

[08:57:01.0000] <gsnedders>
He wrote the status section for the W3C, I guess.

[08:57:02.0000] <gsnedders>
:P

[08:58:00.0000] <hsivonen>
I guess the data templates stuff is partially hyatt's.

[08:58:01.0000] <hsivonen>
even if Hixie expressed it in writing

[08:58:02.0000] <zcorpan>
and now Hixie's gonna drop it :(

[08:59:00.0000] <gsnedders>
"Special thanks and $10,000 to David Hyatt who came up with a broken implementation of the adoption agency algorithm that the editor had to reverse engineer and fix before using it in the parsing section."

[08:59:01.0000] <gsnedders>
Isn't that a conflict of interest?

[08:59:02.0000] <zcorpan>
did he actually get $10,000?

[08:59:03.0000] <gsnedders>
No :P

[08:59:04.0000] <Philip`>
hsivonen: People who come up with ideas go in the acknowledgements section; the people in the editors section should be the people who edit

[09:00:00.0000] <zcorpan>
gsnedders: :(

[09:00:01.0000] <gsnedders>
Which is why he could just edit the status section of the W3C copy, and then he's an editor of that but not the WHATWG copy :P

[09:00:02.0000] <Philip`>
gsnedders: http://quotes.burntelectrons.org/2413

[09:00:03.0000] <gsnedders>
Philip`: Heh.

[09:01:00.0000] <gsnedders>
I still like http://quotes.burntelectrons.org/3770

[09:02:00.0000] <gsnedders>
Philip`: And for you, http://quotes.burntelectrons.org/3653

[09:04:00.0000] <gsnedders>
http://stuff.gsnedders.com/spec-gen/html5.html — that the latest copy of the WHATWG spec from my spec-gen

[09:06:00.0000] <zcorpan>
gsnedders: are you stipping optional tags per html5 rules or not at all?

[09:06:01.0000] <zcorpan>
not at all it seems

[09:06:02.0000] <gsnedders>
zcorpan: I'm following html5lib's defaults.

[09:07:00.0000] <gsnedders>
Whatever they are :)

[09:07:01.0000] <zcorpan>
ok

[09:07:02.0000] <Philip`>
The table of contents ought to have newlines so the source is readable

[09:07:03.0000] <gsnedders>
Yeah, it ought to.

[09:07:04.0000] <gsnedders>
I never got round to doing that, though.

[09:08:00.0000] <hsivonen>
Philip`: it's for browsers to read. the pre-specgen version is for humans

[09:08:01.0000] <zcorpan>
why would you read the source of the toc?

[09:09:00.0000] <Philip`>
hsivonen: Humans read what is published, and the post-specgen version is what's published

[09:09:01.0000] <gsnedders>
I think that's the only thing that I generate that is unreadable

[09:10:00.0000] <takkaria>
zcorpan: puts you to sleep quickly at night, I'd say

[09:10:01.0000] <Philip`>
zcorpan: Reading the spec's source is sometimes interesting because it has comments and jokes and stuff, and when reading the spec's source you inevitably see the giant ugly lump of TOC code while scrolling down

[09:11:00.0000] <hsivonen>
Philip`: the comments also have interesting SVG parsing stuff :-)

[09:13:00.0000] <Lachy>
Philip`, there's a reveal comments bookmarklet you can use for that, so you don't need to look at the source for them http://lachy.id.au/dev/utilities/

[09:13:01.0000] <zcorpan>
<h5 id=the-xml:base-attribute-(xml-only)> -- omg that wouldn't be xml-namespace-valid if converted to xml

[09:13:02.0000] <gsnedders>
zcorpan: It doesn't try to be, though :)

[09:14:00.0000] <gsnedders>
zcorpan: It does different stuff in HTML 4.01 documents to keep them conforming, with stricter @id syntax

[09:14:01.0000] <gsnedders>
zcorpan: And when I get around to getting XML working, it will be all right there too

[09:14:02.0000] <Philip`>
Lachy: But I'm too lazy to learn how to use bookmarklets, and I already know how to open 'view source' quickly

[09:14:03.0000] <zcorpan>
gsnedders: so the w3c and whatwg copies end up having different ids?

[09:14:04.0000] <hsivonen>
Lachy: cool. it beachballs firefox 3 on the spec, though

[09:15:00.0000] <gsnedders>
zcorpan: hmm. true.

[09:15:01.0000] <MikeSmith>
if the generated TOC doesn't have newlines, it makes a gigantic diff any time a single change is made to one section title in the spec

[09:15:02.0000] <Lachy>
hsivonen, only for a few seconds

[09:15:03.0000] <zcorpan>
gsnedders: i think it'd make sense to have the same rules for all even though text/html html5 allows more characters than xml or html4

[09:15:04.0000] <Lachy>
Philip`, all you do is drag it to your bookmarks toolbar and then click on it to use it

[09:16:00.0000] <MikeSmith>
/me sees that he just re-stated what Philip had already said better

[09:16:01.0000] <Philip`>
MikeSmith: Not if the diffs are done on the pre-specgen version

[09:16:02.0000] <MikeSmith>
Philip`: true

[09:16:03.0000] <gsnedders>
zcorpan: I'd rather not, but just make it an option

[09:16:04.0000] <Philip`>
Lachy: I don't have a bookmarks toolbar

[09:16:05.0000] <hsivonen>
Philip`: my bookmarks toolbar is for bookmarklets

[09:19:00.0000] <Lachy>
Philip`, I'm sure Opera has several toolbars available in which you could add it as a button or something

[09:21:00.0000] <Lachy>
this is sad http://blogs.msdn.com/ie/archive/2008/07/21/font-embedding-on-the-web.aspx

[09:21:01.0000] <Philip`>
Lachy: Whenever I change my browser UI at all, the differences disturb me for days :-(

[09:21:02.0000] <zcorpan>
Philip`: commit-watchers does diffs on both the generated and the source versions

[09:22:00.0000] <gsnedders>
http://bugs.gsnedders.com/projects/roadmap/spec-gen

[09:24:00.0000] <hsivonen>
/me hasn't heard of Ascender Corporation before

[09:34:00.0000] <hsivonen>
/me discovers that allowing full DTD functionality without the Same Origin Policy or Access-Control would allow cross-site data leakage

[09:48:00.0000] <gsnedders>
hsivonen: how?

[09:49:00.0000] <hsivonen>
gsnedders: yeah. I had thought about many bad sides of DTDs but not external parsed entities (or sensitive entities in general)

[09:50:00.0000] <hsivonen>
gsnedders: https://bugzilla.mozilla.org/show_bug.cgi?id=22942#c103

[09:53:00.0000] <hsivonen>
/me is amused by "(Non-normative) <cite>Inter Gravissimas</cite>, A. Lilius, C. Clavius. Gregory XIII Papal Bulls, February 1582."

[09:59:00.0000] <hsivonen>
at least the Microsoft partner is acknowledging the existence of the top four browsers in the lower left corner: http://www.fontembedding.com/

[10:07:00.0000] <Philip`>
/me wonders why Rob Burns thinks XML requires documents to have a doctype

[10:10:00.0000] <takkaria>
it's all about how you read the spec

[10:10:01.0000] <hsivonen>
takkaria: you mean like it's all a point of view? :-)

[10:10:02.0000] <Philip`>
I read it by opening the spec and searching for all mentions of "doctype" and "document type" and trying to find anything that indicates you must have one, and entirely failing

[10:11:00.0000] <takkaria>
hsivonen: well, in his field, he must argue a lot about how to best read a text; about the author's intentions, and such.  and also what the most useful reading of a text would be

[10:11:01.0000] <Philip`>
I suppose you could read it by not actually reading it, and just knowing what it's surely meant to say, and if it turns out that's not what it says then the spec must be wrong

[10:11:02.0000] <takkaria>
when you get into literary theory, not even a good spec is straightforward. :)

[16:09:00.0000] <zcorpan>
Hixie: i think we have to disable the forums or change forum software or do something because the spam is not maintainable and the actual usage is pretty low anyway :(

[16:10:00.0000] <Hixie>
pity

[16:10:01.0000] <zcorpan>
yeah

[16:11:00.0000] <Hixie>
want me to try upgrading it and see if there's anything helpful in newer versions?

[16:12:00.0000] <Hixie>
do you have access to the actual files btw? or did i install it in my user or something?

[16:12:01.0000] <zcorpan>
perhaps phpbb3 has something? i don't think 2.0.23 has anything useful over 2.0.22

[16:12:02.0000] <zcorpan>
i don't

[16:13:00.0000] <zcorpan>
afaik

[16:14:00.0000] <Hixie>
oh i see them, they're in my user

[16:14:01.0000] <Hixie>
ok looks like it's updated

[16:14:02.0000] <Hixie>
to 3.0

[16:14:03.0000] <zcorpan>
cool

[16:15:00.0000] <Hixie>
did it have captchas before?

[16:15:01.0000] <zcorpan>
yeah

[16:18:00.0000] <Hixie>
want me to add this textual confirmation plugin?

[16:20:00.0000] <Hixie>
http://www.phpbb.com/community/viewtopic.php?f=70&t=544007

[16:23:00.0000] <zcorpan>
sure

[16:24:00.0000] <zcorpan>
i'm going to bed now, i'll look again tomorrow. thanks!

[16:24:01.0000] <Hixie>
nn


2008-07-23
[20:16:00.0000] <MikeSmith>
Hixie: in the "Coercing an HTML DOM into an infoset" section

[20:16:01.0000] <MikeSmith>
editorial nit:

[20:16:02.0000] <MikeSmith>
"Tools that cannot convey the out-of-band information using out-of-band mechanisms, or that cannot convey the DOM exact as prescribed by this specification"

[20:17:00.0000] <MikeSmith>
s/exact/exactly/

[20:20:00.0000] <MikeSmith>
also, "Form controls being associated with forms that aren't their nearest ancestor (use of the form element pointer"

[20:20:01.0000] <MikeSmith>
is missing closing paren character

[20:23:00.0000] <Hixie>
actually it was missing an >

[20:23:01.0000] <Hixie>
:-)

[20:23:02.0000] <Hixie>
thanks

[21:01:00.0000] <takkaria>
Hixie: those fixes are great, thanks

[23:19:00.0000] <hsivonen>
hmm. so in www-archive Jonathan Chetwynd wants the W3C to cater to the illiterate as an accessibility issue and then cites a study that attributes his illieracy rate figure to poor schooling (not disability)

[23:19:01.0000] <hsivonen>
yay, I mistyped illiteracy

[23:20:00.0000] <jruderman>
so? accessibility isn't only about disabilities.

[23:21:00.0000] <MikeSmith>
illieracy is no laffing matter

[23:21:01.0000] <hsivonen>
jruderman: in the W3C context it is

[23:21:02.0000] <hsivonen>
also, the right solution to poor schooling is good schooling--not making it easier to avoid becoming literate

[23:22:00.0000] <jruderman>
and the right solution to blindness is not being careless with BB guns. so?

[23:25:00.0000] <roc>
how is accessibility for the illiterate different from accessibility for the blind?

[23:25:01.0000] <roc>
I guess the illiterate can't type

[23:25:02.0000] <hsivonen>
jruderman: are you just being provocative or are you actually equating disability and poor schooling?

[23:26:00.0000] <jruderman>
hsivonen: some of both

[23:26:01.0000] <hsivonen>
roc: accessibility for people who can't learn to read is like accessibility for the blind

[23:26:02.0000] <hsivonen>
roc: poor schooling in the UK is something for the UK government--not the W3C to address

[23:26:03.0000] <roc>
except that blind people can type and, I assume, illiterate people can't

[23:27:00.0000] <roc>
I'm less confused now. Somehow I'd received the impression that Jonathan wanted the W3C standards process to be accessible to the illiterate

[23:32:00.0000] <hsivonen>
(100% literacy of adults who don't have a learning *disability* is certainly achievable: http://hsivonen.iki.fi/literacy/ )

[00:12:00.0000] <Hixie>
my own literacy is clearly waning

[00:12:01.0000] <Hixie>
i typed "ratio" so often earlier than i later mistyped "rather" as "ratio"

[00:16:00.0000] <shepazu>
hmmm... roc is gone... but I think his initial impression was correct: Jonathan does want the W3C process to directly involve people with cognitive disabilities and literacy problems

[00:17:00.0000] <shepazu>
and presumably that same group of people would have to be insane, if they want to get involved in Web standards

[00:18:00.0000] <hsivonen>
Hixie: you just specced syntax that could be commandeered for overriding doctype sniffing over the wire :-/

[00:19:00.0000] <Hixie>
i'm happy to change it to something else

[00:28:00.0000] <hsivonen>
Hixie: do you have a preference regarding new bugs vs. comments on bugs marked FIXED?

[00:32:00.0000] <Hixie>
not at all, just make sure the bug is reopened if you comment

[00:32:01.0000] <Hixie>
i don't read the bugmail, i only look at the list of open bugs

[00:32:02.0000] <hsivonen>
Hixie: ok.

[00:35:00.0000] <hsivonen>
commented and reopened

[00:36:00.0000] <Hixie>
thx

[00:36:01.0000] <Hixie>
(generally speaking i think i prefer mail, fwiw)

[00:36:02.0000] <Hixie>
(but bugs are fine too)

[00:38:00.0000] <Hixie>
hsivonen: how can you avoid name clashes with a mapping function?

[00:39:00.0000] <Hixie>
hsivonen: can't the author just predict what attribute name you're going to use and use that himself?

[00:39:01.0000] <hsivonen>
Hixie: you salt the result of the mapping function with some upper-case letters.

[00:40:00.0000] <Hixie>
o_O

[00:40:01.0000] <hsivonen>
Hixie: as zcorpan pointed out, the result can't clash as the tokenizer lowercases input

[00:40:02.0000] <Hixie>
oh, i see, you're assuming we don't take the svgwg's idea

[00:40:03.0000] <Hixie>
hmm

[00:46:00.0000] <Hixie>
hsivonen: also, I don't see how the the text you have is any less vague than what the spec says

[00:46:01.0000] <Hixie>
hsivonen: in particular, i don't understand what is too vague about what the spec says

[00:47:00.0000] <hsivonen>
"Construct the DOM as if appropriate namespace declarations were in scope." what does that mean? does it mean the implementation isn't required to create synthetic declarations?

[00:48:00.0000] <hsivonen>
"Construct the DOM as if these were default namespace declarations." What does that mean?

[00:48:01.0000] <Hixie>
what's a synthetic declaration?

[00:48:02.0000] <Hixie>
a default namespace declaration is an xmlns="" attribute being interpreted as per [XMLNS]

[00:48:03.0000] <hsivonen>
Hixie: a synthetic declaration is a declaration that the parser communicates to the app but that doesn't correspond to an attribute in the source

[00:49:00.0000] <Hixie>
how is that different from acting as if appropriate namespace declarations were in scope?

[00:49:01.0000] <hsivonen>
Hixie: so does "Construct the DOM as if these were default namespace declarations. " mean that a declaration should be exposed or that it doesn't need to be exposed?

[00:50:00.0000] <Hixie>
i don't understand what that question means

[00:50:01.0000] <hsivonen>
Hixie: a parser can expose namespaced nodes to the app without exposing any declarations at all

[00:50:02.0000] <hsivonen>
see? it's not clear enough. :-)

[00:51:00.0000] <Hixie>
i don't understand why not

[00:51:01.0000] <Hixie>
i don't care if the app internally shows declarations or not

[00:51:02.0000] <Hixie>
the whole point is that different pipelines are able/not able to show those declarations

[00:51:03.0000] <Hixie>
and this is saying that you should do whatever is needed by your pipeline

[00:52:00.0000] <hsivonen>
Hixie: right, but if I read the spec, it's not at all obvious that the position on declarations is "I don't care. Drop or synthetize at will."

[00:53:00.0000] <Hixie>
the spec explicitly says you can drop whatever, or construct the DOM as if the "xmlns" attributes were actual namespace declarations

[00:53:01.0000] <hsivonen>
Instead, the spec covers different cases and calls for "as if"s where it's not 100% clear what API behavior "as if" refers to

[00:53:02.0000] <Hixie>
i don't know how to make it more obvious

[00:54:00.0000] <hsivonen>
Hixie: you could say: "The parser may drop attributes whose name starts with "xmlns" or that are in the XMLNS namespace. The parser may expose synthetic namespace declarations to the application."

[00:56:00.0000] <Hixie>
well that allows all kinds of bad stuff

[00:56:01.0000] <hsivonen>
Hixie: what's the bad stuff?

[00:56:02.0000] <Hixie>
e.g. it allows dropping <embed xmlnsy> and allows putting random namespace declarations on elements that don't even match the namespaces being used

[00:56:03.0000] <Hixie>
the former is easy to fix

[00:57:00.0000] <Hixie>
but the latter is what the current text is trying to avoid

[00:57:01.0000] <hsivonen>
Hixie: if your position is that you don't care about the API exposure of declations, why is overdeclaring namespaces synthetically on random nodes a problem?

[00:58:00.0000] <hsivonen>
Hixie: fwiw, if I implement synthetic declarations, my plan was to declare the XLink namespace speculatively even when it isn't actually used

[00:58:01.0000] <Hixie>
what i don't care about is whether the declarations are visible or not

[00:58:02.0000] <Hixie>
if we're going to define a mapping, the mapping had better be a proper mapping

[01:02:00.0000] <hsivonen>
Hixie: how about this: "The parser may drop attributes whose name is 'xmlns', whose name starts with 'xmlns:' or that is in the XMLNS namespace. When an element node does not have a parent or the parent has a different namespace, the parser may syntethize a namespace declaration on the element node declaring the namespace of the element as the default namespace. When a declaration of the SVG namespace or the MathML namespace is synthetized this way,

[01:03:00.0000] <Hixie>
that cut off at "this way,"

[01:03:01.0000] <hsivonen>
MathML namespace is synthetized this way, the parser should  also synthetize a namespace declaration that binds the prefix  'xlink' to the XLink namespace."?

[01:03:02.0000] <Hixie>
but that precludes taking xmlns="" attributes on random HTML nodes and turning them into real xmlns="" attributes

[01:04:00.0000] <hsivonen>
Hixie: I don't mind if you allow that as well.

[01:07:00.0000] <Hixie>
eh screw it, i'm going to change this section into a "pass it out of band or drop it" thing, getting rid of the __ crap

[01:07:01.0000] <Hixie>
and will just say that whatever namespace declarations the app feels like showing or fine

[01:07:02.0000] <hsivonen>
Hixie: what about name munging?

[01:08:00.0000] <Hixie>
drop 'em

[01:08:01.0000] <hsivonen>
munging is easier

[01:08:02.0000] <hsivonen>
and makes things more obvious to someone looking at a data dump

[01:09:00.0000] <Hixie>
munging won't work with the svgwg's proposal

[01:09:01.0000] <hsivonen>
Hixie: the SVG WG's proposal has many other problems

[01:13:00.0000] <Hixie>
it's not clear that they're willing to fix the problems

[01:14:00.0000] <hsivonen>
I'd prefer not integrating it into the HTML5 parsing algorithm with the problems.

[01:16:00.0000] <Hixie>
so far, you're the only implementor who has indicated that you prefer the current prose

[01:16:01.0000] <hsivonen>
Hixie: did I misread takkaria's comments?

[01:18:00.0000] <hsivonen>
Hixie: has any implementor shown preference to passing data to an XML parser a character at a time?

[01:19:00.0000] <Hixie>
is andrew working a parser?

[01:19:01.0000] <Hixie>
so far implementors haven't said much of anything

[01:20:00.0000] <Hixie>
except for opera and apple presumably backing the svg's proposal (since they're on that group)

[01:22:00.0000] <hsivonen>
Hixie: he is. As far as I can tell, 100% of the public implementor feedback (two datapoints: takkaria and me) prefers the commented out stuff over the SVG WG's proposal

[01:22:01.0000] <Hixie>
(cool. which parser? do you have a link?)

[01:22:02.0000] <hsivonen>
Hixie: "I much prefer the HTML5 model over having to incorporate an XML parser as the SVG WG suggests" http://www.w3.org/mid/487B650D.6080803⊙acu

[01:22:03.0000] <Hixie>
oh i agree that he was not in favour of the svgwg proposal

[01:22:04.0000] <Hixie>
i didn't realise he was writing a parser

[01:23:00.0000] <Hixie>
anyway, let's just say that ignoring or rejecting a working group's requests is not done lightly

[01:23:01.0000] <hsivonen>
Hixie: Hubbub parser for the NetSurf browser

[01:23:02.0000] <Hixie>
oh he works in riscos?

[01:23:03.0000] <Hixie>
nice

[01:23:04.0000] <Hixie>
i had no idea

[01:24:00.0000] <Hixie>
it would be helpful if we had feedback from the parser writers for major browsers

[01:49:00.0000] <hsivonen>
(some validator.nu virtual host are going down for maintenance. the validator functionality should be up on another server)

[01:57:00.0000] <Hixie>
hsivonen: what should happen if we parse an element or attribute name with a colon in it? (notwithstanding xlink: and xml: prefixes)

[01:58:00.0000] <hsivonen>
Hixie: in the Infoset coercing mode? it should trigger name munging

[01:58:01.0000] <Hixie>
k

[01:59:00.0000] <hsivonen>
since it's not an XML 1.0 4th ed. plus Namespaces 2nd ed. NCName

[01:59:01.0000] <Hixie>
<foo:bar> would be a well-formed NCName

[01:59:02.0000] <Hixie>
foo: just wouldn't be bound

[01:59:03.0000] <Hixie>
which is a separate problem

[01:59:04.0000] <hsivonen>
Hixie: it would be a Name but not an NCName

[02:00:00.0000] <Hixie>
oh i see what you mean

[02:00:01.0000] <Hixie>
but then what about the attributes that _do_ have colons?

[02:01:00.0000] <hsivonen>
the name that is interesting is the local name after the possible XLink adjustments

[02:02:00.0000] <hsivonen>
so xlink:href on an HTML element would get munged but on a foreign element it wouldn't

[02:03:00.0000] <Hixie>
aah, yes, defining in terms of local name, that's the key

[02:03:01.0000] <Hixie>
ok

[02:03:02.0000] <Hixie>
thanks

[02:11:00.0000] <hsivonen>
Hixie: btw, contrary to previous note about UTF-8, I now do the name munging as hex UTF-16 code units

[02:11:01.0000] <hsivonen>
(because the UTF-8 conversion wasn't portable to GWT)

[02:12:00.0000] <Hixie>
i'm speccing the name munging to just be "replace the bad character with 'U' followed by the five character codepoint", as in '.foo' -> 'U0002Efoo'

[02:12:01.0000] <hsivonen>
I suppose UTF-16 to UTF-32 conversion is doable, but not too useful

[02:13:00.0000] <Hixie>
well it doesn't really matter unless you're providing a library anyway

[02:13:01.0000] <Hixie>
and are any astral characters that UTF-16 can express disallowed in NCNames?

[02:14:00.0000] <hsivonen>
Hixie: off the top of my head, no.

[02:16:00.0000] <Hixie>
actually i can't find where 4th ed allows astral characters at all

[02:17:00.0000] <hsivonen>
Hixie: umm. right. top of my head was wrong

[02:18:00.0000] <Hixie>
could have sworn it allowed them

[02:19:00.0000] <hsivonen>
Hixie: it's the char production that allows everything above the BMP

[02:19:01.0000] <Hixie>
sigh

[02:19:02.0000] <Hixie>
i hate arbitrary restrictions

[02:20:00.0000] <hsivonen>
the restrictions on XML names are particularly silly considering perf

[02:23:00.0000] <Hixie>
but don't forget, xml is faster!

[02:23:01.0000] <Hixie>
because it has no error handling code!

[02:24:00.0000] <gDashiva>
and no errors

[02:27:00.0000] <Hixie>
ok hsivonen

[02:27:01.0000] <Hixie>
i've revamped the coercions

[02:27:02.0000] <hsivonen>
/me reloads

[02:31:00.0000] <hsivonen>
Hixie: looks good except I'd prefer permitting no-namespace attributes called "xmlns" or starting with "xmlns:" to be dropped.

[02:31:01.0000] <Hixie>
ok

[02:31:02.0000] <hsivonen>
thanks

[02:32:00.0000] <hsivonen>
(particularly this avoids munged attributes in docs that have conforming xmlns talismans)

[02:36:00.0000] <Hixie>
commited

[02:36:01.0000] <Hixie>
forgot to mark it 't', sorry

[02:39:00.0000] <hsivonen>
https://bugzilla.mozilla.org/show_bug.cgi?id=22942#c104

[02:50:00.0000] <Hixie>
boy is that a long comment

[04:02:00.0000] <gsnedders>
Colloquy crashed :\

[04:02:01.0000] <Lachy>
finally, a way for socially inept people to use phones without actually talking directly to people! :-) http://mobile.slashdot.org/article.pl?sid=08/07/22/1558236

[04:04:00.0000] <gsnedders>
Yay! I'm saved!

[04:07:00.0000] <Hixie>
why would you need a reason to use a phone

[04:08:00.0000] <gsnedders>
heh: "What rational person would want to spend time talking about Web standards?" — Doug

[04:09:00.0000] <gsnedders>
Hixie: Because it's a full-duplex method of communication, and it works even when the other person doesn't use any such thing online.

[04:09:01.0000] <Hixie>
but it's synchronous

[04:09:02.0000] <gsnedders>
Hixie: I only just got up!

[04:10:00.0000] <gsnedders>
(e.g., what I say is bullshit by definition)

[04:12:00.0000] <gsnedders>
Hixie: OK, but compared with email/snail-mail, if those are the alternatives

[04:13:00.0000] <Hixie>
irc, im

[04:13:01.0000] <Hixie>
sms

[04:13:02.0000] <Hixie>
e-mail

[04:13:03.0000] <Hixie>
all those are superior

[04:13:04.0000] <gsnedders>
If they don't have IRC or IM, if you don't know their mobile number.

[04:13:05.0000] <Hixie>
to a synchronous audio channel

[04:13:06.0000] <gsnedders>
e-mail is asynchronous

[04:13:07.0000] <Hixie>
well if i don't have their phone number, i can't call them anyway

[04:13:08.0000] <gsnedders>
(so is SMS, really, even though a lot of people use it as if it isn't)

[04:13:09.0000] <Lachy>
Hixie, with this, it makes phones asynchronous

[04:13:10.0000] <Hixie>
and since i don't have a phone number, they can never call me

[04:14:00.0000] <gsnedders>
Hixie: a home phone number?

[04:14:01.0000] <Lachy>
Hixie, do you have an office phone?

[04:14:02.0000] <gsnedders>
/me wonders when he last used his phone

[04:14:03.0000] <Hixie>
Lachy: yes, this mechanism is a good idea. i was just responding to your statement which implied that a reason to use a phone was something we were waiting for :-)

[04:15:00.0000] <Hixie>
i don't have a phone at all at home (no land line, no mobile)

[04:15:01.0000] <Hixie>
and i am never in my office so my office phone is essentially useless

[04:15:02.0000] <hsivonen>
speaking of SMS: any recommendations on a Web site monitoring service that sends SMS when the monitored site is down?

[04:16:00.0000] <hsivonen>
is this one any good: http://rootinternet.co.uk/ ?

[04:16:01.0000] <Hixie>
hsivonen: use twitter direct messages

[04:16:02.0000] <Hixie>
though twitter might not be reliable enough for his purpose

[04:16:03.0000] <Lachy>
twitter is the most unreliable service ever

[04:17:00.0000] <gsnedders>
It is finally getting better, at least

[04:17:01.0000] <Lachy>
I'm still waiting for them to restore IM support, but I hope when they bring it back, they make it far more reliable than it was before.

[04:19:00.0000] <hsivonen>
http://intertwingly.net/blog/2008/07/02/authoritative-true#c1216242757 is that a hypothetical or is authoritative=true being implemented in a non-IE browser?

[04:21:00.0000] <Lachy>
it seems hypothetical to me

[04:40:00.0000] <Hixie>
can someone with a more recent build of opera check the result of http://damowmow.com/playground/demos/global-object/008.html ?

[04:40:01.0000] <Hixie>
click navigate, then click test

[04:41:00.0000] <virtuelv>
result: true false false true true

[04:41:01.0000] <virtuelv>
9.52/2069

[04:41:02.0000] <Hixie>
cool thanks

[04:41:03.0000] <Hixie>
all other browsers do true true true true true

[04:41:04.0000] <Hixie>
fwiw

[04:45:00.0000] <hsivonen>
http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2008-July/015368.html is rather defeatist about captioning :-(

[04:47:00.0000] <zcorpan>
someone should make the webapps-tracker provide links to bugs mentioned in the checkins in a separate column

[04:55:00.0000] <hsivonen>
http://www.ietf.org/mail-archive/web/ietf/current/msg52473.html

[05:00:00.0000] <Hixie>
ugh, their new text versions suck compared to the old text versions

[05:01:00.0000] <hsivonen>
getting on the bandwagon when others are getting off

[05:02:00.0000] <gDashiva>
http://www.iana.org/assignments/aaa-parameters/aaa-parameters.xhtml (new HTML version) <-- no x!

[05:05:00.0000] <hsivonen>
whoa. they'll even turn off the old formats

[05:05:01.0000] <Lachy>
wow, that sucks

[05:05:02.0000] <hsivonen>
how nice for software that reads existing IANA data

[05:08:00.0000] <Lachy>
it wouldn't be a problem if they would just continue generating the old text format from the XML, instead of inventing a new text format

[05:08:01.0000] <hsivonen>
perhaps the old format is hard to generate from XSLT

[05:08:02.0000] <Lachy>
then that's a reason to not use XSLT, not a reason to change the format

[05:09:00.0000] <gDashiva>
Maybe just leave the old text files alone, even

[05:10:00.0000] <Lachy>
gDashiva, then they would go out of date

[05:10:01.0000] <gDashiva>
out of date files for out of date applications :)

[05:16:00.0000] <Hixie>
this global object stuff is way more annoying that i'd like

[05:16:01.0000] <Hixie>
i'm going to bed

[05:24:00.0000] <MikeSmith>
http://blog.mozilla.com/meeting-notes/archives/26

[05:25:00.0000] <MikeSmith>
I'm wondering what the crossed-out stuff means

[05:25:01.0000] <MikeSmith>
e.g., "worker threads (under review)" striked out

[05:26:00.0000] <MikeSmith>
and "native JSON (under review)"

[05:26:01.0000] <Philip`>
I thought it just meant it won't be in alpha 1

[05:26:02.0000] <MikeSmith>
ah, OK

[05:27:00.0000] <Philip`>
http://wiki.mozilla.org/Firefox3.1/StatusMeetings/2008-07-22 is a better view of that list since it has indentation

[05:33:00.0000] <MikeSmith>
Philip`: ah, thanks

[05:41:00.0000] <zcorpan>
Hixie: the html parser can't emit an element ".foo<bar"

[05:41:01.0000] <zcorpan>
Hixie: <. is the same as &lt;.

[05:42:00.0000] <zcorpan>
Hixie: s/element/attribute/ works though

[05:43:00.0000] <zcorpan>
Hixie: btw, perhaps <embed> should disallow attributes with ascii uppercase

[05:44:00.0000] <hsivonen>
zcorpan: the same reasoning with apply to data-FOO

[05:44:01.0000] <zcorpan>
hsivonen: yes

[05:57:00.0000] <zcorpan>
Hixie: the coerce section should mention comments ending with a -

[06:21:00.0000] <Windstoss>
err, whats wrong with contenteditable in Opera?

[06:22:00.0000] <Windstoss>
Works in FF, Safari… Opera claims to support it?

[07:10:00.0000] <Lachy>
Hixie, http://lists.w3.org/Archives/Public/www-archive/2008Jul/0064.html

[07:11:00.0000] <Lachy>
Hixie, you could just make the colour the same as it is in the whatwg copy of the spec, which is #222

[08:13:00.0000] <zcorpan>
why is the w3 version suddely extremely ugly?

[08:16:00.0000] <Lachy>
zcorpan, ugly in what way?

[08:16:01.0000] <Lachy>
it looks the same as it always has

[08:16:02.0000] <zcorpan>
Lachy: it used to have nice blue background for element definitions for one

[08:17:00.0000] <zcorpan>
and orangered <code>

[08:17:01.0000] <Lachy>
oh, but the .warning styles look horible - yellow text on brown background

[08:17:02.0000] <zcorpan>
yeah

[08:19:00.0000] <Lachy>
I don't really care what it looks like, I always use the whatwg copy anyway

[08:19:01.0000] <Philip`>
zcorpan: In case you missed it while away: http://krijnhoetmer.nl/irc-logs/whatwg/20080712#l-66 and http://krijnhoetmer.nl/irc-logs/whatwg/20080712#l-81

[08:19:02.0000] <zcorpan>
Philip`: saw those, cheers

[08:19:03.0000] <Philip`>
zcorpan: (I've uploaded a new http://philip.html5.org/tests/canvas/suite/source.tar.bz2 which hopefully has those fixes, though I haven't updated the HTML files on that site)

[08:20:00.0000] <zcorpan>
Philip`: thanks

[08:21:00.0000] <zcorpan>
Philip`: perhaps there are more instances of lineTo(0, 0) that should be moveTo(0, 0)? i haven't gone through all tests but it would be a simple thing to search for if you feel like it :)

[08:26:00.0000] <zcorpan>
hsivonen: trying to validate http://dev.w3.org/html5/html-author/charref always gives "Internal Error: Oops. That was not supposed to happen. A bug manifested itself in the application internals. Unable to continue. Sorry. The admin was notified."

[08:26:01.0000] <Philip`>
zcorpan: I don't see any other incorrect lineTo(0, 0)s, though it's not impossible that there are some other unintentional lineTo(x, y)s in there

[08:26:02.0000] <zcorpan>
Philip`: ok

[08:28:00.0000] <zcorpan>
Hixie: had you updated to phpbb3?

[08:33:00.0000] <takkaria>
Hixie: I'm surprised you didn't know I was writing a parser, it has been mentioned a fair bit. :)

[08:33:01.0000] <gsnedders>
Hixie is a complete n00b anyway :P

[08:34:00.0000] <takkaria>
Hixie's employer is even paying me to write it

[08:35:00.0000] <gsnedders>
Hixie's employer is rather large, though

[09:59:00.0000] <hsivonen>
zcorpan: the reason is insufficient heap space. sorry about that. Validator.nu is running on a backup server while the main server undergoes an update to higher RAM spec

[10:01:00.0000] <hsivonen>
zcorpan: tweaking heap setting now...

[10:02:00.0000] <hsivonen>
(the real solution, of course, would be to eliminate Schematron...)

[10:03:00.0000] <hsivonen>
hmm. this happens even without schematron

[10:03:01.0000] <hsivonen>
very interesting...

[10:05:00.0000] <hsivonen>
even more interesting is that it runs out of heap in the same place even after increasing heap

[10:13:00.0000] <kangax>
What would be the best way to represent (store) custom shapes which are later to be imported to canvas? Set of curves, points, lines?

[10:18:00.0000] <zcorpan>
hsivonen: no worries, i just thought i'd let you know since it seemed to work fine for other resources

[11:21:00.0000] <zcorpan>
hsivonen: "<body></html><html>" gives "19: Stray “html” start tag." twice in parsetree.validator.nu

[11:36:00.0000] <zcorpan>
hsivonen: also, parsetree.validator.nu says "XML; don‚Äôt load external entities"

[11:49:00.0000] <zcorpan>
i love how http://en.wikipedia.org/wiki/HTML_5 puts so much weight on the codec issue relative to the rest of the article

[11:50:00.0000] <zcorpan>
i mean if it would be balanced then the codec issue wouldn't get more than a single sentence

[11:51:00.0000] <hsivonen>
zcorpan: the codec issue is what made to slashdot and that non-HTML5 technical people have an opinion about

[11:52:00.0000] <hsivonen>
(I'll look into the parse tree issues tomorrow)

[11:54:00.0000] <zcorpan>
hsivonen: indeed

[12:25:00.0000] <hdh>
"An html element's end tag may be omitted if the html element is not immediately followed a comment" is a "by" missing?

[12:26:00.0000] <zcorpan>
hdh: yeah

[13:11:00.0000] <gsnedders>
Can someone write docs so I don't have to for the spec-gen?

[13:11:01.0000] <gsnedders>
:P

[13:18:00.0000] <jgraham>
gsnedders: There's no point in getting anyone else to do it because they won't do it well wnough to satisfy you and you'll have to do it yourself eventually anyway

[13:19:00.0000] <gsnedders>
jgraham: True :P

[13:19:01.0000] <Lachy>
gsnedders, I could do it if you write down everything it does for me to base it on

[13:19:02.0000] <gsnedders>
Lachy: :P

[13:19:03.0000] <gsnedders>
Lachy: That kinda wrecks the point of getting someone else to do it

[14:56:00.0000] <Hixie>
takkaria: i probably forgot and got you confused with all the other people writing parsers :-)

[14:57:00.0000] <Hixie>
gsnedders: assuming takkaria is talking about summer of code, the company being large doesn't really act as an excuse for me since i work on the team that does summer of code :-)

[14:57:01.0000] <gsnedders>
Hixie: Ah. That is problematic for that excuse.

[14:59:00.0000] <gsnedders>
/me guesses that police car isn't going to bust his friends who are currently breaking the law as it is going the wrong way

[15:15:00.0000] <gsnedders>
/me notes he still won't be old enough for GSoC next year

[15:15:01.0000] <jcranmer>
there's a min age onGSoC?

[15:17:00.0000] <gsnedders>
jcranmer: yeah, 18.

[15:17:01.0000] <jcranmer>
ah

[15:17:02.0000] <jcranmer>
/me only turned 18 a few mos ago

[15:18:00.0000] <gsnedders>
/me only turns 18 in 2010

[15:18:01.0000] <Philip`>
/me feels old :-(

[15:19:00.0000] <gsnedders>
Philip`: At least you don't have to look at my youthfulness now :P

[15:19:01.0000] <jcranmer>
well, I'm technically a second-semester sophomore at college, IIRC

[15:19:02.0000] <jgraham>
/me is even older than Philip` :(

[15:19:03.0000] <jgraham>
(unless I'm not of course)

[15:20:00.0000] <jcranmer>
everyone is 5 standard geosystems units old

[15:20:01.0000] <gsnedders>
jcranmer: a sophomore?

[15:20:02.0000] <jcranmer>
gsnedders: AP + dual-enrollment course credits :-)

[15:20:03.0000] <gsnedders>
jcranmer: huh?

[15:20:04.0000] <gsnedders>
jcranmer: We need more i18n here.

[15:20:05.0000] <jgraham>
jcranmer: You may have o convert to non-US :)

[15:20:06.0000] <jcranmer>
gsnedders: sophmore = 2nd-year of college (university)

[15:20:07.0000] <gsnedders>
jcranmer: Ah.

[15:21:00.0000] <gsnedders>
/me needs to decide where to apply… and soon.

[15:21:01.0000] <gsnedders>
s/apply/apply to/

[15:21:02.0000] <jcranmer>
gsnedders: which locale?

[15:21:03.0000] <gsnedders>
jcranmer: en-gb-x-sneddy, or en-gb-oed if you can't manage the former

[15:22:00.0000] <jgraham>
gsnedders: Presumably your university will just be en-gb unless you plan to self educate

[15:22:01.0000] <jcranmer>
ah, so someone who can understand me if I refer to the subjunctive mood?

[15:22:02.0000] <gsnedders>
I thought jcranmer meant what language to localize to :P

[15:23:00.0000] <gsnedders>
jgraham: That's making the assumption I go to the UK :)

[15:23:01.0000] <gsnedders>
jcranmer: Only possibly

[15:26:00.0000] <jgraham>
jcranmer: Why would en-gb-* people be better at grammar than anyone else?

[15:26:01.0000] <jcranmer>
jgraham: he said en-gb-oed

[15:26:02.0000] <jgraham>
Oh. Well I guess that he could look it up then

[15:27:00.0000] <jgraham>
But we have essentially no education in grammar here

[15:27:01.0000] <jcranmer>
just like an en-us-x-harvard would understand it but not an en-us-x-hillbilly

[15:27:02.0000] <gsnedders>
My parents own a paper copy of the "compact" OED, which is basically the same as the full OED just printed in 8pt type with four normal OED pages to the page

[15:28:00.0000] <Philip`>
Hooray for www.oed.com

[15:30:00.0000] <gsnedders>
jcranmer: ("only possibly" because the OED merely defines words in terms of other words, and eventually falls about with recursive definitions, so it isn't certain I can understand anything)

[15:30:01.0000] <jgraham>
Philip`: Hooray for university subscriptions to hugely expensive reference works 

[15:30:02.0000] <jcranmer>
I use dictionary.oed.com through school's proxy

[15:31:00.0000] <gsnedders>
/me needs to write his personal statement

[15:31:01.0000] <gsnedders>
/me sighs

[15:31:02.0000] <Philip`>
jgraham: and for SSH proxying so I can access it from home

[15:31:03.0000] <jgraham>
Philip`: Yeah, that's cool too

[15:31:04.0000] <jgraham>
/me only discovered that recently

[15:32:00.0000] <gsnedders>
I also know whatever I write in the first draft of it will be completely thrown out and rewritten as I over-edit it.

[15:32:01.0000] <Philip`>
though usually I'm lazy and use rdesktop to a Windows machine instead, because that's easier than complicated port forwarding and faster than simple X forwarding

[15:35:00.0000] <Philip`>
gsnedders: In that case you can fill your first draft with jokes and terrible puns and obvious fabrications, which will make it more interesting

[15:35:01.0000] <gsnedders>
Philip`: But only make the first draft more interesting.

[15:35:02.0000] <Philip`>
That's better than nothing

[15:36:00.0000] <gsnedders>
Which will result in the second draft being what the first draft normally is :)

[15:36:01.0000] <jcranmer>
I wrote on of my college apps the night it was due grumbling about it in IRC

[15:36:02.0000] <jcranmer>
s/on/one/

[15:37:00.0000] <gsnedders>
jcranmer: At least here we have a centralized admissions process :)

[15:37:01.0000] <jcranmer>
http://quotes.burntelectrons.org/3042

[15:37:02.0000] <gsnedders>
But I may end up applying to MIT and Stanford…

[15:38:00.0000] <jcranmer>
didn't like Stanford's campus, and there was a certain haughtiness on the staff's part as well

[15:38:01.0000] <jcranmer>
then again, it seems that every American university's admissions director

[15:39:00.0000] <gsnedders>
/me has the disadvantage of being unlikely to be able to see either before going there

[15:39:01.0000] <jcranmer>
s' job is to try to make it seem like you can't get in

[15:39:02.0000] <jgraham>
Hey the OED is 50% cheaper in the USA!

[15:39:03.0000] <jcranmer>
but our money is twice as cheap as yours...

[15:40:00.0000] <gsnedders>
I sent an email asking one or two questions to MIT Admissions, the reply I got had a reassuring start: "Hello Geoggrey,"

[15:40:01.0000] <jcranmer>
/me curses the until-recently negative average savings rate

[15:40:02.0000] <gsnedders>
/me wonders where else is better than Cambridge for Comp.Sci.

[15:41:00.0000] <jcranmer>
and lack of fiscal sanity on the part of elected officials, but you can't have it all

[15:41:01.0000] <jgraham>
gsnedders: Whilst I may not be sampling the ull distribution function, all the MIT people I have met have been both excepionally bright and excepionally nice

[15:42:00.0000] <jgraham>
s/ull/full/

[15:42:01.0000] <Philip`>
gsnedders: I don't think there exists a total ordering of the goodness of universities, so it doesn't make sense to ask if somewhere is "better" than somewhere else :-p

[15:42:02.0000] <gsnedders>
jgraham: I have the same experience. My uncle went their briefly as a post-grad, then went off to Kenya before completing his PhD, as he got a job offer

[15:42:03.0000] <gsnedders>
Philip`: True :P

[15:42:04.0000] <gsnedders>
/me is listening to I Want It All by Queen from Greatest Hits II

[15:42:05.0000] <gsnedders>
jcranmer: Will that do? :P

[15:43:00.0000] <gsnedders>
However, being somewhere like CA would be good for my CFS…

[15:43:01.0000] <jcranmer>
I never really looked at MIT that much

[15:43:02.0000] <jgraham>
gsnedders: Sunlight?

[15:44:00.0000] <gsnedders>
jgraham: Heat.

[15:44:01.0000] <jgraham>
?! Really?

[15:44:02.0000] <gsnedders>
jgraham: For all the various things it does to your muscles at least :P

[15:44:03.0000] <gsnedders>
/me is on obscene amounts of painkillers and anti-inflamatores for all that pain

[15:45:00.0000] <jgraham>
All I recall about Stanford is that the asrophysics department is in the bsement

[15:45:01.0000] <gsnedders>
jgraham: Light helps some people, and not others. Not so much me. Being this far north means I get plenty here in summer :)

[15:46:00.0000] <gsnedders>
jgraham: Peh! You don't need sunlight for astrophysics! :P

[15:47:00.0000] <gsnedders>
Lack of sunlight just screws with me mentally more than physically, esp. when I get really bad at winter, and end up never seeing any sunlight

[15:47:01.0000] <roc>
"didn't like Stanford's campus"? You are mad

[15:47:02.0000] <jgraham>
gsnedders: Well if you did the people at MRAO in Cambridge would be screwed (the Physics department has a negligible number of windows)

[15:47:03.0000] <gsnedders>
jgraham: Hehe. I am aware :)

[15:49:00.0000] <gsnedders>
/me is currently leaning towards applying for Edinburgh (Comp. Phys.), York (Phys.), Cambridge (Comp.Sci.), MIT (Comp.Sci), Stanford (Comp.Sci.)

[15:50:00.0000] <gsnedders>
(sorry, s/(Phys/Theoretical Phys./)

[15:52:00.0000] <gsnedders>
roc: You like it then, I take? :P

[15:53:00.0000] <gsnedders>
/me bursts out laughing at Chris Wilson's latest tweet: "Twitter's usual web presence = EPIC WHALE"

[15:53:01.0000] <roc>
it's a lovely campus

[15:54:00.0000] <roc>
now, I chose to go to CMU instead of Stanford, so the campus isn't everything

[15:54:01.0000] <gsnedders>
Challenge: convince me why I should go to one of those universities?

[15:54:02.0000] <Hixie>
the only experience i have of stanford is the couple of times we were trying to drive from el camino onto university to go to dinner and took a wrong turn and ended up driving up the big stanford avenue in an attempt to find somewhere to u-turn

[15:54:03.0000] <Hixie>
that avenue sure looked nice

[15:55:00.0000] <roc>
apply to Stanford, CMU, MIT and Berkeley

[15:55:01.0000] <roc>
and study CompSci at one of those

[15:55:02.0000] <gsnedders>
roc: Berkeley is near-impossible to get into as an international student

[15:55:03.0000] <roc>
oh yeah

[15:55:04.0000] <Hixie>
yeah if you're going to do compsci then those are the ones to do it at

[15:55:05.0000] <roc>
sorry

[15:55:06.0000] <roc>
ok the other three

[15:55:07.0000] <gsnedders>
roc: CMU?

[15:55:08.0000] <roc>
Carnegie Mellon University

[15:55:09.0000] <roc>
the best CompSci program that the average person hasn't heard of

[15:56:00.0000] <gsnedders>
Pittsburgh… I think I went there.

[15:56:01.0000] <roc>
but it's as good as the other big three

[15:56:02.0000] <gsnedders>
(I went to the USA once when I was five, I don't remember that much)

[15:56:03.0000] <gsnedders>
(I remember I don't like LA, and one or two things I didn't really like in Boston)

[15:57:00.0000] <gsnedders>
(and the other place we went to was some random place where my father was giving a paper at a conference, which was the whole reason for going)

[15:58:00.0000] <gsnedders>
/me sighs

[15:58:01.0000] <gsnedders>
choices.

[15:59:00.0000] <gsnedders>
Someone (not me) should just make a choice from my above list and be done with it :P

[16:00:00.0000] <jgraham>
gsnedders: Someone (not you) will decide whether to let you in to those places or not :)

[16:00:01.0000] <gsnedders>
jgraham: :P

[16:00:02.0000] <Hixie>
if you have money, pick stanford

[16:00:03.0000] <gsnedders>
The US unis are pushing it in terms of money

[16:01:00.0000] <Hixie>
then you're near google, apple, and mozilla, which might be helpful

[16:01:01.0000] <Hixie>
(e.g. for internships)

[16:01:02.0000] <gsnedders>
/me sighs

[16:01:03.0000] <gsnedders>
I can't even decide what subject to do :P

[16:01:04.0000] <gsnedders>
I probably won't get into such good places for physics though

[16:02:00.0000] <gsnedders>
/me notes Cambridge has the advantage of being able to switch to that after the first year of comp.sci. without having to do any catching up

[16:12:00.0000] <takkaria>
it's bad that I read comp.sci as a newsgroup name

[16:21:00.0000] <jcranmer>
yay, I'm not the only person who reads newsgroups!


2008-07-24
[17:05:00.0000] <Hixie>
heycam: you haven't done anything to do with callbacks yet right? other than [NativeObject]? (just checking, not complaining or anything -- there's no rush, i just happened to run into the issue again today)

[17:09:00.0000] <heycam>
Hixie, that's right

[17:09:01.0000] <Hixie>
k

[17:10:00.0000] <Hixie>
i updated html5 to use the constructor stuff today

[17:10:01.0000] <Hixie>
it seems to work well

[17:10:02.0000] <heycam>
cool

[18:51:00.0000] <heycam>
where is window.parent defined?

[19:19:00.0000] <Hixie>
heycam: it's not yet, iirc

[19:19:01.0000] <Hixie>
heycam: do you need it?

[19:20:00.0000] <heycam>
i was just going to make some comments about the Global stuff in svg tiny 1.2, and make a reference to parent in html5

[19:20:01.0000] <heycam>
but then i realised it wasn't there

[19:21:00.0000] <heycam>
(since there's a 'parent' attribute on the SVGGlobal interface)

[19:22:00.0000] <heycam>
ah i see it's in www.w3.org/TR/Window

[19:22:01.0000] <Hixie>
i'm treating that draft as obsolete, fwiw

[19:22:02.0000] <heycam>
yeah i'm wondering what's going to happen with it

[19:22:03.0000] <Hixie>
i really should define 'parent' at some point

[19:22:04.0000] <heycam>
will you fold it in to html5?

[19:22:05.0000] <Hixie>
not sure if it has any complications

[19:22:06.0000] <Hixie>
it's already folded in, for the most part

[19:23:00.0000] <heycam>
i would rather it be a separate spec, but i know othermaciej mentioned intricate dependencies with other stuff in html 5

[19:23:01.0000] <Hixie>
is 'parent' just the parent browsing context's default view's Window object, or is there more to it?

[19:23:02.0000] <Hixie>
Window is probably the most integrated part of HTML5

[19:24:00.0000] <othermaciej>
or self if there is no parent

[19:24:01.0000] <Hixie>
factoring out Window from HTML5 would be like factoring out the nervous system from a human being

[19:25:00.0000] <heycam>
i don't think it's impossible, or even necessarily a bad idea.  it might be a lot of effort, though.

[19:28:00.0000] <Hixie>
ok, defined window.parent

[20:09:00.0000] <Hixie>
wow, <embed src=""> processing is so far from what http requires as to be stupid

[02:50:00.0000] <Hixie>
if anyone has any good ideas on how to resolve http://www.w3.org/Bugs/Public/show_bug.cgi?id=5859 please write them in the bug

[02:52:00.0000] <hsivonen>
Hixie: can there ever be a window object and a scripting context whose origin is a URI scheme that the browser doesn't support?

[02:52:01.0000] <hsivonen>
or does this issue have a wider scope than examining the document's own origin port?

[02:53:00.0000] <hsivonen>
/me searches for default port

[02:54:00.0000] <hsivonen>
the only non-Origin-related "default port" I see is under parsing URLs

[03:07:00.0000] <Philip`>
http://www.sitepen.com/blog/2008/07/22/windowname-transport/ seems kind of crazy

[03:09:00.0000] <hsivonen>
Philip`: does postMessage do anything that can't be emulated on top of window.name?

[03:18:00.0000] <hsivonen>
hendry: now that OpenJDK is in Debian, it should be feasible to get all sort of server-side Java stuff in Debian and have it run with reasonable effort. (e.g. latest Jetty)

[03:19:00.0000] <hendry>
hsivonen: from what i gather openjdk is exactly the same as the old sun-java6 package

[03:20:00.0000] <hendry>
hsivonen: are all the other deps coming in too now?

[03:20:01.0000] <hsivonen>
hendry: I thought some parts were removed or rewritten

[03:20:02.0000] <hsivonen>
hendry: but as far as non-GUI stuff goes, yeah it should be the same code

[03:21:00.0000] <hsivonen>
hendry: dunno. I supposed each package maintainer needs to be poked

[03:21:01.0000] <hsivonen>
like getting Jetty upgraded from legacy 5.x to 6.x etc.

[03:21:02.0000] <hendry>
hsivonen: i'm not super keen on java as you know ;)

[03:22:00.0000] <hendry>
hsivonen: couldn't you shed some depedencies somehow? or migrate to C? ;)

[03:22:01.0000] <hsivonen>
hendry: It Free now. What's not to be keen about? :-)

[03:22:02.0000] <hsivonen>
hendry: I can shed some of the gratuitous build deps when Saxon 9.1 is out

[03:22:03.0000] <hendry>
hsivonen: it's bloatware. i'm a patron of the "lesscode movement" like http://www.suckless.org/ project

[03:22:04.0000] <hsivonen>
(then I no longer need to maintain my own fork of Saxon)

[03:23:00.0000] <hendry>
/me wonders if the css validator also have tons of Java deps

[03:23:01.0000] <hsivonen>
hendry: I like the JVM and I like java.lang and java.util. There's lot of bloat in the class library

[03:25:00.0000] <hsivonen>
/me discovers Jetty 7.0

[03:26:00.0000] <hendry>
so saxon is XSLT? what do you need XSLT for?

[03:27:00.0000] <hsivonen>
btw, the RAM on validator.nu is now updated. It should take about 8 hours for the DNS to point to the higher spec server

[03:27:01.0000] <hendry>
couldn't you have a simple light PHP interface and pipe results to a JVM

[03:27:02.0000] <hsivonen>
hendry: the Schematron engine compiles the Schematron schema into an XSLT program

[03:28:00.0000] <hendry>
hsivonen: why has the service been down? has load increased?

[03:28:01.0000] <hsivonen>
hendry: isn't mod_jk that light interface? :-)

[03:28:02.0000] <hsivonen>
hendry: http://hsivonen.iki.fi/downtime/

[03:28:03.0000] <hendry>
hsivonen: mod_jk, no :)

[03:28:04.0000] <hendry>
hsivonen: think less code, think drops deps

[03:28:05.0000] <hendry>
PHP is like air nowadays

[03:29:00.0000] <hsivonen>
hendry: dropping deps means forking intermediate deps :-(

[03:29:01.0000] <hsivonen>
hendry: most of the deps just satisfy latent kitchen sink deps that don't actually load at runtime

[03:29:02.0000] <hsivonen>
like Ant

[03:30:00.0000] <hsivonen>
don't get me started on depending on Ant

[03:30:01.0000] <hendry>
hsivonen: i'll look at your build.xml and see if it can re-written as a Makefile

[03:30:02.0000] <hsivonen>
hendry: I don't have build.xml

[03:30:03.0000] <hsivonen>
hendry: no XML situps!

[03:31:00.0000] <hendry>
hsivonen: oh that's right... well I am just trying to think of ways to dropping deps. I guess your deps require ant

[03:31:01.0000] <hendry>
anyway, ant isn't too bad.

[03:31:02.0000] <hsivonen>
(and yes, I have now verified that additional swap survives a reboot)

[03:31:03.0000] <hsivonen>
hendry: some deps provide an ant task

[03:31:04.0000] <hendry>
but Makefiles are *so* much better

[03:31:05.0000] <hsivonen>
hendry: and to compile that, ant has to be present

[03:32:00.0000] <hsivonen>
and ant inself has ballooned into being huge

[03:33:00.0000] <roc_>
Makefiles are better than someting? how astonishing

[03:34:00.0000] <hendry>
i used to hate Makefiles. Now I think they're great. :)

[03:34:01.0000] <hendry>
hsivonen: did I ever show you http://getacue.dabase.com/ ?

[03:35:00.0000] <hsivonen>
hendry: you didn't

[03:36:00.0000] <hendry>
hsivonen: take a look at it and tell me what you think. it's ongoing mind

[03:39:00.0000] <hsivonen>
hendry: so one is supposed to learn to remember the border color?

[03:46:00.0000] <hendry>
hsivonen: yes over repeated use over time of course

[03:46:01.0000] <hendry>
hsivonen: it was initially an android proposal

[03:47:00.0000] <hendry>
so imagine picking up a device and every form was coloured on input

[03:47:01.0000] <hendry>
if you have a rediculous long phone number, you can "cue" it by telling the reciepient it's dark green on input or something :)

[03:50:00.0000] <hsivonen>
did Ubuntu comment out Apache2 AddDefaultCharset for Hardy? I'm pretty sure it was on by default in Feisty.

[05:10:00.0000] <tusho>
Which is correct:

[05:10:01.0000] <tusho>
<cite>extract from Some Book by Author</cite>

[05:10:02.0000] <tusho>
or

[05:10:03.0000] <tusho>
extract from <cite>Some Book by Author</cite>

[05:10:04.0000] <hsivonen>
tusho: extract from <cite>Some Book</cite> by Author

[05:11:00.0000] <tusho>
OK, thanks :)

[05:11:01.0000] <tusho>
What if I wanted to style 'Author' a certain way? what tag would it go in?

[05:11:02.0000] <tusho>
Just a span?

[05:11:03.0000] <hsivonen>
tusho: <span> or <b> depending on the conventions of your publication's style manual, I guess

[05:12:00.0000] <tusho>
/me nods

[05:12:01.0000] <tusho>
I've always wondered which is more semantic, though: since this is going to be the only span in the paragraph and ostensibly just used for styling, should I give the span a class?

[05:13:00.0000] <tusho>
My thoughts say yes when thinking about, e.g. programmatical manipulation of the document.

[05:14:00.0000] <hsivonen>
tusho: are you planning to manipulate your documents programmatically right way or is this an investment in case you want to do it later?

[05:14:01.0000] <tusho>
Not really planning to do it, but I'd like to keep open the possibility, obviously.

[05:15:00.0000] <tusho>
(If I wasn't aiming for a good level of semantics I'd just be using tag soup, wouldn't I?)

[05:15:01.0000] <tusho>
I'll give it a class, an unadorned span seems out of place.

[05:17:00.0000] <Philip`>
Writing <span class=author> doesn't seem any harder than writing <span>, and CSS like "foo .author" seems much easier to read than "foo span", and it means you have less to worry about if you add some other unrelated <span>s in the future since you won't have to rewrite all the existing ones

[05:18:00.0000] <hsivonen>
tusho: "good level of semantics" has an opportunity cost just like everything else that takes effort

[05:18:01.0000] <tusho>
Philip`: That was pretty much my deduction.

[05:18:02.0000] <tusho>
hsivonen: Well, yes, but giving elements a span doesn't seem very difficult ;)

[05:22:00.0000] <Philip`>
(Hmm, someone replaced my telephone with a Cisco VOIP one)

[05:23:00.0000] <Philip`>
/me guesses it won't be quite as reliable as the old phone system

[05:23:01.0000] <hsivonen>
is there any harm in running 'apache2ctl start' from cron every minute or so?

[05:25:00.0000] <tusho>
hsivonen: Why would you need to?

[05:25:01.0000] <tusho>
If Apache is crashing every minute, well ...

[05:26:00.0000] <hsivonen>
tusho: to restart apache if the kernel kills it on OOM

[05:26:01.0000] <tusho>
hsivonen: Ah - are you using worker or prefork?

[05:26:02.0000] <tusho>
If it's prefork, switch to worker. I find memory problems instantly disappear. Unfortunately, you can't use mod_php any more, but you can run PHP via CGI/FastCGI.

[05:28:00.0000] <hsivonen>
tusho: I use the Ubuntu default and it isn't immediately obvious where it is set

[05:28:01.0000] <tusho>
hsivonen: Do this-

[05:28:02.0000] <tusho>
$ sudo apt-get install apache2-mpm-worker

[05:28:03.0000] <tusho>
It'll uninstall mod_php (if installed) and the current one, and install worker.

[05:28:04.0000] <tusho>
(Your config files will stay.)

[05:28:05.0000] <hsivonen>
tusho: I don't need PHP. I need CGI for Bugzilla and mod_jk for Java

[05:28:06.0000] <tusho>
Tjat

[05:28:07.0000] <tusho>
*That's OK.

[05:28:08.0000] <tusho>
Both will work fine.

[05:28:09.0000] <tusho>
Well, look at what apache2-mpm-worker says it'll uninstall.

[05:28:10.0000] <tusho>
If it doesn't mention either of those, then you're OK.

[05:29:00.0000] <hsivonen>
tusho: thanks

[05:29:01.0000] <tusho>
I know for a fact CGI works, though

[05:29:02.0000] <tusho>
hsivonen: No problem :)

[05:29:03.0000] <Philip`>
I suggest not running out of memory :-)

[05:30:00.0000] <Philip`>
Can't you just limit the JVM heap size and limit the number of concurrent processes Apache will spawn?

[05:30:01.0000] <hsivonen>
Philip`: I don't know what # on concurrent processes I should limit Apache to

[05:31:00.0000] <hsivonen>
Philip`: It dies like thrice a year and leaves no diagnostic dump of what provoked the unusual memory allocation

[05:31:01.0000] <Philip`>
hsivonen: (Total RAM - amount used by OS and services - some spare) / (maximum heap size allocated to each JVM)

[05:33:00.0000] <Philip`>
hsivonen: Can you run something like ApacheBench to stress test it and make it break reproducibly?

[05:34:00.0000] <hsivonen>
Philip`: I suppose I could. Except I already started the process of pointing the DNS to the real server that is the one needing testing...

[05:34:01.0000] <hsivonen>
and DNS changes take 8 hours

[05:36:00.0000] <Philip`>
They take no time if you just modify /etc/hosts :-)

[05:37:00.0000] <hsivonen>
Philip`: my point is that stress testing the real server now affects real users

[05:38:00.0000] <Philip`>
hsivonen: How many real users are there?

[05:38:01.0000] <zcorpan>
Hixie: +  attribute may be left blank if there is another <code>area<code>

[05:39:00.0000] <zcorpan>
Hixie: should be </code>

[05:39:01.0000] <hsivonen>
Philip`: does the number matter if the people who care about the service are inconvenienced?

[05:40:00.0000] <Philip`>
/me is glad he doesn't have anything with users, since then he'd have to worry about them

[05:42:00.0000] <tusho>
Just use -worker, seriously ;)

[05:42:01.0000] <tusho>
-prefork is deprecated.

[05:43:00.0000] <Philip`>
hsivonen: If the only users are people in this channel, you could say "please be aware that the validator will be slow and/or crashed while I'm testing it over the next few hours" and probably nobody would mind, which would make it easy :-)

[05:43:01.0000] <hsivonen>
tusho: at least aptitude didn't complain about installed modules...

[05:44:00.0000] <tusho>
hsivonen: Yay—then you can just install it and be happy.

[05:44:01.0000] <tusho>
(Hopefully. I've never had any problems with worker.)

[05:44:02.0000] <Philip`>
tusho: Do you have a pointer to something saying it's deprecated?

[05:44:03.0000] <tusho>
Philip`: Certainly.

[05:45:00.0000] <tusho>
Just a sec.

[05:45:01.0000] <tusho>
Hm, can't find it - wait, let me ask #apache for the link.

[05:46:00.0000] <hsivonen>
are mpm_* modules special under Ubuntu/Debian in that they don't show up in mods-available?

[05:47:00.0000] <Philip`>
MPMs apparently have to be compiled into the server, so you can't load them as runtime modules

[05:48:00.0000] <hsivonen>
how do I check which MPM is actually active?

[05:48:01.0000] <Philip`>
"it is possible to determine which MPM was chosen by using ./httpd -l"

[05:48:02.0000] <Philip`>
says http://httpd.apache.org/docs/trunk/mpm.html

[05:49:00.0000] <hsivonen>
/me assumes worker.c means successful install

[05:49:01.0000] <tusho>
Huh, you're already on worker.

[05:50:00.0000] <tusho>
Then yes, you have a problem.

[05:50:01.0000] <hsivonen>
indeed, aptitude install apache2-mpm-worker didn't install anything

[05:56:00.0000] <gsnedders>
/me works his way up through flagged emails

[06:27:00.0000] <hsivonen>
I reduced the Apache Timeout value significantly and added a cron job to kick Apache back up when it gets killed

[06:27:01.0000] <hsivonen>
let's see how it goes

[07:37:00.0000] <hsivonen>
http://lists.w3.org/Archives/Public/www-archive/2008Jul/0068.html

[07:39:00.0000] <hsivonen>
http://codinginparadise.org/weblog/2008/07/what-heck-is-open-web.html

[07:40:00.0000] <hsivonen>
"If Adobe were to open source Flex/Flash, or Microsoft Silverlight, would that be the Open Web? If so, why? If not, why not?"

[07:40:01.0000] <hsivonen>
/me notes that Java is now Open Source but Hixie still rejects <applet>

[07:41:00.0000] <hsivonen>
/me suspects that multiple independent implementations at least one of which is open source is required

[07:41:01.0000] <hsivonen>
although Java approximately has that, too

[07:48:00.0000] <Philip`>
Java give the impression of being big and slow and ugly, which is a major failure of marketing, so we don't want to associate that with our The Open Web

[07:48:01.0000] <Philip`>
s/give/gives/

[07:49:00.0000] <hsivonen>
sure. Applets totally suck.

[07:50:00.0000] <hsivonen>
(but Java being slow is no longer true except for the JVM startup)

[07:51:00.0000] <hsivonen>
(that said, I use the Web with Java disabled and am quite unhappy when I run into an applet requirement to get information out of a site)

[07:52:00.0000] <hsivonen>
(recently, I actually ran across a site that had a superbly bad map hidden inside an applet)

[07:52:01.0000] <Philip`>
(For applets, JVM startup time is more significant than its runtime performance - when I visit a site that uses Java applets, and it freezes my browser and crunches my disk for ten seconds, it encourages me to hate Java)

[07:52:02.0000] <hsivonen>
(apparently whoever runs the site doesn't have the clue to link to Google Maps)

[07:53:00.0000] <Philip`>
(And anyway I said "gives the impression of being [...] slow", not "is slow", and the impressions are what matter when trying to convince people that the Open Web consists of all the cool stuff and none of the rubbish stuff)

[07:54:00.0000] <hsivonen>
(I didn't enable Java on the site in question. Instead, I searched for the place on Google Maps)

[07:55:00.0000] <hsivonen>
btw, does JavaFX somehow sweep AWT and Swing out of the view?

[07:56:00.0000] <Philip`>
(Well, maybe it doesn't actually give that impression, but people have that impression because the JVM used to give that impression and then everyone propagated it even when it untrue. Or something like that)

[07:57:00.0000] <hsivonen>
hmm. the JavaFX site is all ajaxy

[07:57:01.0000] <hsivonen>
have I misunderstood what JavaFX is?

[07:58:00.0000] <Philip`>
/me has never understood what it is

[07:59:00.0000] <hsivonen>
"Sun is not replacing Swing with JavaFX Script. Instead, JavaFX Script makes Swing easier to use."

[07:59:01.0000] <hsivonen>
/me intends to stay away from it

[07:59:02.0000] <hsivonen>
quote from http://www.javafx.com/htdocs/javafxfaq.html

[08:00:00.0000] <Philip`>
Why stay away from it?

[08:00:01.0000] <hsivonen>
Philip`: Swing suck. Or at least that's the impression I have. :-)

[08:01:00.0000] <hsivonen>
sucks even

[08:01:01.0000] <Philip`>
For reasons other than it being hard to use?

[08:01:02.0000] <hsivonen>
Philip`: for the default PLAF being hideous and the other PLAFs not feeling native

[08:02:00.0000] <hsivonen>
the entire concept of a PLAF doesn't make sense

[08:02:01.0000] <hsivonen>
as if you could just plug in the Mac *feel*

[08:02:02.0000] <Philip`>
/me has written a total of one small Swing application in his life, and didn't think it was entirely great, mostly because its Win32 L&F font renderer had a bug that made the default font unacceptably hideous

[08:04:00.0000] <Philip`>
(Also I've got used to how wxWidgets does layouts, and get confused by anything that's different)

[08:07:00.0000] <MikeSmith>
Qt

[08:08:00.0000] <Philip`>
/me used wxWidgets instead of Qt since he didn't want to have to be GPL

[08:09:00.0000] <hsivonen>
what's happening with the licensing of Qt? Before Nokia acquired TrollTech, Nokia was all about a 'level playing field' and LGPL.

[08:10:00.0000] <hsivonen>
(in rhetoric that is)

[08:12:00.0000] <MikeSmith>
Qt is dual license

[08:12:01.0000] <MikeSmith>
no changes in that afaik

[08:13:00.0000] <hsivonen>
ok. I guess the playing field looks different when they own the tollbooth :-)

[08:15:00.0000] <MikeSmith>
there's now an open-source Webkit-based browser UI based on Qt port of Webkit

[08:15:01.0000] <MikeSmith>
Arora

[08:15:02.0000] <MikeSmith>
http://code.google.com/p/arora/

[08:16:00.0000] <MikeSmith>
(not that this has anything to do with the Java, applets Swing, etc. discussion)

[08:16:01.0000] <MikeSmith>
just with wxWidgets

[08:16:02.0000] <MikeSmith>
(there's also a wxWidgets port of WebKit)

[08:20:00.0000] <Philip`>
/me thought about embedding WebKit in his program (an OpenGL-based game), but then realised that'd be stupid because there seems to be no existing support for rendering into OpenGL and seemingly no decent cross-platform port :-(

[08:22:00.0000] <MikeSmith>
Philip`: Qt is cross-platform and have some kind of build-in OpenGL support

[08:27:00.0000] <Philip`>
MikeSmith: I assume you mean support for rendering GL content into a panel on a Qt window? That doesn't seem to be a problem - the difficulty is rendering the WebKit view (no external GUI, but probably buttons and scrollbars and stuff) onto an OpenGL surface, so it can be drawn onto the game's fullscreen window

[08:27:01.0000] <MikeSmith>
ah

[08:28:00.0000] <Philip`>
(and hooking it into the game's mouse/keyboard event system, etc)

[08:28:01.0000] <MikeSmith>
/me re-reads what Philip` actually said before

[08:35:00.0000] <zcorpan>
it appears that the processing rules of aria have changed so now it's again undefined what "whitespace" is for instance

[09:59:00.0000] <gDashiva>
Here's the magic line: A JSON parser MAY accept non-JSON forms or extensions.

[09:59:01.0000] <gsnedders>
Yay!

[10:00:00.0000] <smedero>
huh.

[10:00:01.0000] <gDashiva>
But: A JSON generator produces JSON text.  The resulting text MUST strictly conform to the JSON grammar.

[10:00:02.0000] <Philip`>
That's just Postel's Law

[10:01:00.0000] <gDashiva>
Sure, but it throws out probably over 90% of all json implementations 

[12:02:00.0000] <sidda>
This is a question regarding data framing in the WebSockets protocol. The protocol draft says the contents of the DataFrame should be UTF8 encoded. Can 2 strings (each null terminated) be sent in one dataframe?

[12:03:00.0000] <sidda>
Also, can one large string straddle across 2 dataframes?

[12:06:00.0000] <gsnedders>
/me finally bothers to write docs

[12:29:00.0000] <gsnedders>
/me should probably copy the CSS stylesheet and not just hotlink the WHATWG copy :P

[12:52:00.0000] <Lachy>
http://meyerweb.com/eric/thoughts/2008/07/23/any-element-linking-demo/

[13:47:00.0000] <Hixie>
hsivonen: open source != non-proprietary. q.v. xul.

[13:52:00.0000] <gavin_>
xul isn't proprietary in the common sense of the word

[13:52:01.0000] <gavin_>
(as in, it isn't "exclusively owned")

[14:05:00.0000] <hsivonen>
XUL is single-implementation technology, though

[14:06:00.0000] <gavin_>
yes

[14:06:01.0000] <mpt>
XCF is open source and proprietary

[14:09:00.0000] <hsivonen>
If bug https://bugzilla.mozilla.org/show_bug.cgi?id=22942 is any indication, pleople are wedding intranet apps with XUL

[14:09:01.0000] <Hixie>
gavin: xul is exclusively owned by mozilla

[14:09:02.0000] <hsivonen>
s/pleople/people/

[14:09:03.0000] <Hixie>
gavin: i'm not in any way saying this is inappropriate or bad

[14:09:04.0000] <Hixie>
gavin: it's perfectly reasonable for groups to invent technologies that they use for their own purposes

[14:11:00.0000] <gavin_>
I'm not arguing because I think it being "proprietary" is bad

[14:11:01.0000] <gavin_>
I'm arguing because I think it's innaccurate :)

[14:12:00.0000] <gavin_>
but I suppose that definition of proprietary is pretty common

[14:12:01.0000] <gavin_>
not sure what "owned by mozilla" means

[14:13:00.0000] <gavin_>
if IE implemented it would they have 50% ownership?

[14:13:01.0000] <hsivonen>
I try to use "product-specific" instead of proprietary when referring to Inkscape cruft to avoid debates about the opensourciness of Inkscape

[14:14:00.0000] <Hixie>
gavin: if IE implemented it, and implemented it slightly differently, would mozilla have any interest whatsoever in converging on what IE did? (i'm guessing no.)

[14:14:01.0000] <gavin_>
well now we're getting into pretty crazy "ifs"

[14:14:02.0000] <Hixie>
that's my point

[14:14:03.0000] <Hixie>
:-)

[14:15:00.0000] <gavin_>
mozilla does want to converge on an interoperable xul-like box model

[14:16:00.0000] <Hixie>
a technology is "proprietary", imho, if the group that defines it is more concerned about its own needs and the needs of its users than about the needs of all competing implementations and their users

[14:16:01.0000] <Hixie>
yes, the flexbox stuff isn't proprietary

[14:17:00.0000] <gavin_>
ok

[14:17:01.0000] <hsivonen>
I think XUL box model together with HTML5 would be Good fo the Web

[14:17:02.0000] <Hixie>
yes

[14:17:03.0000] <gavin_>
that seems like a weird definition of "proprietary"

[14:17:04.0000] <gavin_>
but I won't argue that it doesn't apply to XUL

[14:17:05.0000] <Hixie>
wikipedia says "A proprietary format is a file format which is covered by a patent or copyright which is intended to give the license holder exclusive control of the technology to the (current or future) exclusion of others"

[14:18:00.0000] <Hixie>
which imho is basically saying the same thing

[14:19:00.0000] <Hixie>
but if someone has a better word i'm all for using that

[14:19:01.0000] <gavin_>
if other people started implementing xul and promoting it's use on the web, mozilla would certainly want to encourage interoperability

[14:19:02.0000] <gavin_>
but that's not where we are

[14:19:03.0000] <gavin_>
(and arguably that isn't a very good plan)

[14:20:00.0000] <hsivonen>
We should have some Venn diagrams and theory about the feature set overlap of Gecko, WebKit and Opera and when stuff becomes part of the open Web platform

[14:20:01.0000] <gavin_>
I mean, there's no reason why we would care about more than just our users if only our users are using it :)

[14:24:00.0000] <hsivonen>
Hixie: there are at least 3 independent open-souce implementations of Java. 

[14:25:00.0000] <hsivonen>
Hixie: what would ti take for <applet> not ot be considered an integration poit for proprietary technology?

[14:25:01.0000] <Hixie>
sure, just like there's an open source implementation (or two!) of Win32 and an open source implementation of .NET

[14:25:02.0000] <Hixie>
doesn't make it an open standard

[14:25:03.0000] <Hixie>
it would take Sun giving up control over the language

[14:25:04.0000] <hsivonen>
ok

[14:25:05.0000] <Hixie>
and turning it over to an actual open standards committee that wasn't beholden to their interests

[14:26:00.0000] <Hixie>
ODF and OOXML are other examples of "standards" that are still effectively proprietary

[14:27:00.0000] <hsivonen>
personally, I'd prefer to see the language frozen at 5, cutting down the "standard library" and letting innovation happen in open-souce libs that aren't part of the "standard" java platform

[14:30:00.0000] <Hixie>
takkaria: did you implement the commented out svg stuff in hubbub? or am i misremembering

[14:31:00.0000] <Hixie>
hsivonen: there are plenty of things that are interesting in newer versions of java (i don't know if this is <=5 or >5), like generics, lambdas, etc

[14:31:01.0000] <Hixie>
hard to do those in libraries

[14:33:00.0000] <hsivonen>
Hixie: generics are 5

[14:34:00.0000] <hsivonen>
Hixie: as I understand it, lamdbas aren't in a release version of Java

[14:34:01.0000] <hsivonen>
(the idea seems a bit like lipstick on a pig in the case of java)

[14:36:00.0000] <Hixie>
could have sworn they'd been added to the standard

[14:36:01.0000] <Hixie>
/me shrugs

[14:36:02.0000] <Hixie>
i don't know java

[14:37:00.0000] <Hixie>
i just like watching the java talks we have at work because they're given by really good presentators :-)

[14:38:00.0000] <jcranmer>
Hixie: lambdas aren't in Java

[14:38:01.0000] <jcranmer>
you're referring to closures, I'm guessing

[14:39:00.0000] <jcranmer>
most of the interesting stuff is in 5

[14:39:01.0000] <Hixie>
closures were another feature that was added later, yes

[14:39:02.0000] <Hixie>
maybe lambdas got cut

[14:39:03.0000] <jcranmer>
it's not added yet

[14:39:04.0000] <Hixie>
ah ok

[14:39:05.0000] <Hixie>
well like i said, i don't know jack shit about java, so i'll shut up now :-)

[14:40:00.0000] <jcranmer>
I oppose closures personally for various reasons, most notably because "too much syntax and too much catering to corner cases for too little benefit"

[14:40:01.0000] <jcranmer>
someone referred to making "return" and "return;" do *entirely* different things

[14:41:00.0000] <jcranmer>
fortunately, the closures people are still fighting over the some of the more egregious additions

[14:54:00.0000] <sidda>
Hixie: This is a question regarding data framing in the WebSockets protocol. The protocol draft says the contents of the DataFrame should be UTF8 encoded. Can 2 strings (each null terminated) be sent in one dataframe? Also, can one large string straddle across 2 dataframes?

[14:55:00.0000] <Hixie>
a dataframe defines a single string. A string can contain NULLs. You can't straddle two dataframes because then they would be two strings.

[14:58:00.0000] <sidda>
Thanks Hixie

[15:00:00.0000] <sidda>
Wait, if String can contain a null, then existing decoders would stop at that null right. So, NULL can only occur in the end correct?

[15:03:00.0000] <Hixie>
why would a decoder stop at null?

[15:20:00.0000] <roc>
I think XUL is proprietary, in that control over its evolution is governed by Mozilla alone

[15:21:00.0000] <roc>
but it's better than other similar proprietary technologies by being based as much as possible on open standards (DOM, CSS, etc)

[15:22:00.0000] <Hixie>
xul was just used as an example -- the original debate was over whether java was proprietary now that it "is open source"

[15:22:01.0000] <roc>
and hopefully eventually all its functionality will be supported in open standards and then it can go away (remaining in Mozilla products as a compatibility layer only) and we can all breathe a sigh of relief

[15:22:02.0000] <roc>
oh

[15:22:03.0000] <roc>
Java's not proprietary

[15:23:00.0000] <roc>
stakeholders other than Sun have significant input into its evolution

[15:23:01.0000] <jcranmer>
like Google

[15:23:02.0000] <roc>
that's one

[15:23:03.0000] <jcranmer>
IBM

[15:23:04.0000] <roc>
another

[15:23:05.0000] <jcranmer>
I'd have to look at the JSPs to know others off the top of my head

[15:24:00.0000] <jcranmer>
I think Apple has some say as well

[15:25:00.0000] <jcranmer>
I'd quite likely say that Java is less proprietary than XUL

[15:27:00.0000] <Hixie>
it's certainly billed that way, yes.

[15:28:00.0000] <roc>
maybe Sun has undue influence. It's a question of degree

[15:28:01.0000] <roc>
ostensibly C# is governed by an ISO committee but in practice all decisions are made by Microsoft

[15:29:00.0000] <jcranmer>
WP has at least 16 JVM impls

[15:29:01.0000] <Hixie>
and win32 and .NET have multiple implementations too

[15:29:02.0000] <Hixie>
as has flash

[15:30:00.0000] <jcranmer>
GCJ, Sun's JVM, and IBM's are three major implementations

[15:30:01.0000] <Hixie>
i don't think anyone is arguing java doesn't have multiple implementations :-)

[15:30:02.0000] <roc>
the situation with Java is a bit better since people take implementations other than Sun's seriously

[15:31:00.0000] <jcranmer>
right

[15:31:01.0000] <jcranmer>
I've seen code that checks for at least three or four different JVM versions

[15:35:00.0000] <jcranmer>
so I'd claim it's not quite under the category of "propiterary"

[15:36:00.0000] <jcranmer>
even if I spelled that right

[15:37:00.0000] <gsnedders>
proprietary

[15:50:00.0000] <hdh>
Philip`: webkit in OpenGL http://www.atoker.com/blog/2008/06/12/webkit-meta-a-new-standard-for-in-game-web-content/

[16:16:00.0000] <Philip`>
hdh: Oh, nice, that sounds like what I was looking for

[16:17:00.0000] <Philip`>
I guess I didn't see it because it didn't exist when I looked :-)

[16:17:01.0000] <Philip`>
although it looks like it doesn't yet exist in a downloadable form :-(

[16:19:00.0000] <roc>
Philip`: what exactly do you need?

[16:22:00.0000] <Philip`>
roc: Something to render the in-game GUI of a 3D OpenGL RTS game

[16:23:00.0000] <Philip`>
(and to handle scripted interaction, respond to user input, etc)

[16:24:00.0000] <Philip`>
(and to work on Windows/Linux/OSX, and to be open source but not GPL, etc)

[16:24:01.0000] <Philip`>
(Also the scripting has to be JavaScript, to be consistent with the rest of the game's scripts)

[16:25:00.0000] <Philip`>
(I don't need to base it on HTML, but it'd seem kind of nice if I could)

[16:26:00.0000] <roc>
for some reason I thought you worked on Opera

[16:26:01.0000] <roc>
Alp's thing does sound like what you want

[16:27:00.0000] <Philip`>
All I do with Opera is use it and find bugs in it :-)

[16:28:00.0000] <Philip`>
and then usually complain about the bugs, because I've got nothing better to complain about

[16:29:00.0000] <wilhelm>
Much appreciated. (c;

[16:30:00.0000] <roc>
looks OK to me

[16:30:01.0000] <roc>
sorry wrong channel

[16:43:00.0000] <virtuelv>
hm

[16:43:01.0000] <virtuelv>
http://www.patentlyo.com/patent/2008/07/the-death-of-go.html

[16:45:00.0000] <roc>
we can only hope

[16:46:00.0000] <Philip`>
Hmm, the URL made me think someone had patented Go and was going to prevent anyone from playing it

[16:47:00.0000] <jcranmer>
woah, the PTO is proposing making software patents unpatentable?

[16:48:00.0000] <roc>
no

[16:48:01.0000] <jcranmer>
530 comments on /. in 7.5 hrs

[16:48:02.0000] <jcranmer>
roc: ?

[16:48:03.0000] <roc>
the PTO is still saying that software is patentable, but this person is saying recent PTO rules are incompatible with that

[16:48:04.0000] <roc>
note that the blogger there is a very pro-software-patents person

[16:49:00.0000] <jcranmer>
"the PTO Board of Patent Appeals and Interferences has now supplied an answer to that question: A general purpose computer is not a particular machine, and thus innovative software processes are unpatentable if they are tied only to a general purpose computer."

[16:49:01.0000] <jcranmer>
roc: I noted that

[16:49:02.0000] <roc>
it's written not to make nerds happy but to make patent attourneys unhappy

[16:49:03.0000] <jcranmer>
it's made nerds happy, though

[16:50:00.0000] <roc>
my brother says that his analysis is reasonable but that nothing will change in practice until courts have to rule on the issues, and that will override the PTO's decisions anyway

[16:50:01.0000] <roc>
(my brother is a patent attourney)

[16:50:02.0000] <jcranmer>
well, I am against software patents on the basis that mathematical algorithms should not be patented and software is essentially a mathematical algorithm

[16:51:00.0000] <jcranmer>
cf. LZW

[16:53:00.0000] <zcorpan>
jcranmer: why shouldn't mathematical algorithms be patented?

[16:53:01.0000] <jcranmer>
zcorpan: why should they be?

[16:53:02.0000] <jcranmer>
besides, mathematical algorithms are expressly unpatentable under US patent law

[16:54:00.0000] <zcorpan>
jcranmer: dunno, a lot of things are patented and i don't know why they should be

[16:54:01.0000] <zcorpan>
jcranmer: ok

[16:55:00.0000] <Hixie>
software patents would be ok if it wasn't for two things, one, their insane lifetime in an industry that moves as fast as IT, and two, patent troll companies that aren't actually using the patents, just preventing other people from using them

[16:55:01.0000] <jcranmer>
well, the basic idea IMHO is that software is better protected by copyright

[16:55:02.0000] <Hixie>
i'd feel much better about patents if the people suing were actually using patents for what they're intended, making money on the basis of a temporary monopoly

[16:56:00.0000] <jcranmer>
if I had to write patent law over again, I would include a stipulation that if the company actually isn't provably acting on its patent, its patent becomes invalid

[16:56:01.0000] <Hixie>
right

[16:57:00.0000] <Hixie>
patents shouldn't be licensable either, inventing something and then making money by making other people pay you if they come up with the same idea is just not the point of the invention

[16:57:01.0000] <jcranmer>
but even the patentability of sofware is questionable, IMO

[16:57:02.0000] <jcranmer>
Hixie: I disagree about the licensability

[16:58:00.0000] <jcranmer>
if I come up with a process to (hypothetically speaking, of course) turn water into oil, but I don't have the resources to actually make the machine that does that

[16:59:00.0000] <jcranmer>
I should be able to ask other companies if they would like to use the technology themselves for a fee

[16:59:01.0000] <Hixie>
if you came up with a process to turn water into oil, finding vc funding would be the LAST of your problems

[16:59:02.0000] <Hixie>
you'd be turning DOWN vc funding

[16:59:03.0000] <gavin_>
heh

[16:59:04.0000] <jcranmer>
bad example then

[16:59:05.0000] <Hixie>
:-)

[16:59:06.0000] <jcranmer>
but you get the gist

[16:59:07.0000] <Hixie>
if you came up with an algorithm to compress moving pictures slightly better

[16:59:08.0000] <roc>
there's another thing, which is that in software we've got this great possibility for people can create products and give them away for zero marginal cost, and patents can destroy that


2008-07-25
[17:00:00.0000] <Hixie>
should you be able to hold the entire industry hostage when others independently come up with the same idea?

[17:00:01.0000] <jcranmer>
well, compressing movie pictures shouldn't be patentable

[17:00:02.0000] <Hixie>
anyway

[17:00:03.0000] <jcranmer>
since you're essentially taking one number and making it another number

[17:00:04.0000] <gsnedders>
patents suck, kthxbai

[17:01:00.0000] <roc>
Stephen Wolfram would argue that everything that happens in the universe boils down to that too

[17:01:01.0000] <zcorpan>
Hixie: did you change anything to the live forums.whatwg.org?

[17:01:02.0000] <Hixie>
zcorpan: upgraded to 3.0 and added the text confirmation thing

[17:01:03.0000] <gsnedders>
roc: More dangerously, so would I :)

[17:01:04.0000] <Hixie>
zcorpan: did i break something?

[17:02:00.0000] <gsnedders>
(dangerously insofar as that I'm hre)

[17:02:01.0000] <gsnedders>
*here

[17:02:02.0000] <jcranmer>
well, there's one potential ramification if everything flies

[17:03:00.0000] <jcranmer>
no one can have any qualms about MP3 being patent-protected :-)

[17:03:01.0000] <roc>
it would solve a ton of problems

[17:03:02.0000] <roc>
it would greatly simplify the issue of choosing standard codecs for <video> and <audio>

[17:04:00.0000] <roc>
/me brings the thread back on topic

[17:04:01.0000] <zcorpan>
Hixie: doesn't look like 3.0 and the admin panel says it's 2.0.22 like before

[17:04:02.0000] <jcranmer>
yep

[17:04:03.0000] <roc>
but I'm not holding my breath, to be honest. too good to be true

[17:04:04.0000] <gsnedders>
Hixie, zcorpan: Yeah, that's certainly 2.0: even 3.0's subSilver looks different

[17:04:05.0000] <jcranmer>
roc: all we have to do is hope that the justices are sufficiently computer-literate to understand why software patents are bad

[17:05:00.0000] <zcorpan>
Hixie: got a PM from BearState saying that he got promted for his password when posting, so it looks like someone has messed up our phpbb

[17:05:01.0000] <roc>
that's actually the best hope --- the current US Supreme Court is very skeptical about patents

[17:06:00.0000] <roc>
putting Roberts in charge is the best thing the Bush administration ever did

[17:06:01.0000] <roc>
which isn't saying much

[17:06:02.0000] <jcranmer>
well, my day is made if 

[17:06:03.0000] <jcranmer>
a) Supreme Court goes back to the Betamax decision

[17:06:04.0000] <jcranmer>
b) Diamond v. Diehr is overturned

[17:09:00.0000] <jcranmer>
sorry, not necessarily Diehr's decision, but the State Street decision

[17:10:00.0000] <zcorpan>
Hixie: i think i'll edit the permissions so people can't post at all for now

[17:14:00.0000] <Hixie>
odd that it would not be 3.0

[17:33:00.0000] <Philip`>
/me sees http://openwebfoundation.org/

[17:35:00.0000] <jruderman>
that page's copyright is apparently owned by the year 2008

[17:37:00.0000] <jruderman>
i like that. i think i'm going to assign my next copyright to whitespace (not any particular whitespace, but the general concept of whitespace).

[17:37:01.0000] <Philip`>
The W in their logo font is a bit ugly

[17:37:02.0000] <jruderman>
eww. yes, it is.

[17:38:00.0000] <gavin_>
I like it

[18:20:00.0000] <kangax>
Why does shape produced by strokeRect has some kind of an implicit min-width?

[18:20:01.0000] <kangax>
strokeRect(1,1,1,100); // => draws a rectangle that is ~5px wide

[18:24:00.0000] <Philip`>
kangax: It might be caused by drawing lines along the edges between pixels, so the pixels on both sides of that edge get painted

[18:25:00.0000] <Philip`>
strokeRect(1.5, 1.5, 1, 100) should draw a sharper rectangle, because then it's drawing its lines through a single row/column of pixels instead of between the rows/columns

[18:26:00.0000] <kangax>
actually, I think I got it - second/third args are width/height, not coordinates of bottom right corner

[18:26:01.0000] <Philip`>
Ah, that might affect it too :-)

[18:26:02.0000] <kangax>
: ) thanks

[19:03:00.0000] <Hixie>
zcorpan: patched

[20:24:00.0000] <heycam>
"The term activation behavior is used as defined in the DOM3 Events specification. At the time of writing, DOM3 Events hadn't yet been updated to define that phrase." :)

[20:29:00.0000] <Hixie>
i think DOM3 Events has changed editors at least once since i came to an agreement with the editor of dom3 events to define that

[20:31:00.0000] <heycam>
aha

[20:32:00.0000] <heycam>
http://dev.w3.org/2006/webapi/DOM-Level-3-Events/html/DOM3-Events.html#events-Events-flow-cancelation says "This section is currently being rewritten", though it does mention activation behaviour

[22:12:00.0000] <Mook>
anybody bored and want to talk xbl2? I just have a relatively simple question...

[22:14:00.0000] <Mook>
For an element bound via CSS, does moving the node (via a single appendChild call, for example) involve unbinding it first? (would script properties persist across the move)

[22:24:00.0000] <heycam>
Mook, i would say that it would involve unbinding

[22:25:00.0000] <heycam>
because appendChild() will have to remove the element from the document and then reinsert it

[22:25:01.0000] <Mook>
even though it will end up still bound after the move?

[22:25:02.0000] <Mook>
right

[22:25:03.0000] <heycam>
by my reading, yeah

[22:25:04.0000] <Mook>
:( That'd mean we'll still end up losing state, which kinda sucks

[22:25:05.0000] <heycam>
it does kinda

[22:26:00.0000] <heycam>
esp if you're just moving elements around for z-order or something (which probably is more of an issue for svg than html)

[22:26:01.0000] <Mook>
(can't be worse than moz-xbl, though - in that case, the constructor gets called, but not the destructor, and all <field/>s are reset, but existing random properties are not)

[22:27:00.0000] <heycam>
that doesn't sound useful

[22:28:00.0000] <Mook>
it's perfectly useful for introducing bugs into your app :p  Hitting this, again, today was what prompted me to look at xbl2 behaviour.

[22:28:01.0000] <heycam>
heh

[22:35:00.0000] <roc>
SVG should just bite the bullet and adopt CSS z-index

[22:36:00.0000] <heycam>
perhaps

[22:36:01.0000] <Mook>
well, my use case was tab reordering in a tab strip

[22:36:02.0000] <Mook>
so unless CSS can magically display a series of DOM nodes in arbitrary order...

[22:36:03.0000] <heycam>
Mook, but xbl can do that, no? :)

[22:36:04.0000] <roc>
XUL flexbox CSS can

[22:37:00.0000] <roc>
I don't think XBL can

[22:37:01.0000] <Mook>
/me tries to figure out how to make <tabs><tab label="A"/><tab label="B"/><tab label="C"/></tabs> display "C A B"

[22:38:00.0000] <Mook>
... and scaling to > 3, of course, so #c{float: left} doesn't help :p

[22:38:01.0000] <heycam>
couldn't xbl do that with <content> elements?

[22:40:00.0000] <heycam>
http://www.cs.washington.edu/education/courses/190m/08sp/exams/final/student_art.pdf

[22:40:01.0000] <roc>
You can't do arbitrary content permutations that way

[22:40:02.0000] <heycam>
no, not arbitrary

[22:45:00.0000] <Mook>
setInsertionPoint says "The order of nodes assigned to a content element is always be the same as the relative order of those nodes in the original core DOM" explicitly. So I guess that doesn't help.

[22:47:00.0000] <roc>
no

[22:47:01.0000] <roc>
it does help

[22:47:02.0000] <roc>
because you can use multiple insertion points

[22:47:03.0000] <Mook>
hmm, I wonder if I'd be able to dynamically create insertion points

[22:48:00.0000] <Mook>
and if I do, I wonder if they'll end up applying to all instances of the binding. reading time.

[22:55:00.0000] <Mook>
okay, so the shadow tree is cloned from the shadow tree template (sec 4), and can be manipulated (4.6).  so yay.

[00:25:00.0000] <Hixie>
this test shows that IE uses compatibility case folding for usemap:

[00:25:01.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cmap%20name%3D%22T%26eacute%3B%26%23x01F1%3B%26%23x2075%3B%22%3E%3Carea%20href%3D%22%2F%22%20shape%3Drect%20coords%3D0%2C0%2C200%2C200%3E%3C%2Fmap%3E%0A%3Cimg%20usemap%3D%22%23t%26Eacute%3BDZ5%22%20src%3Dimage%3E

[00:26:00.0000] <Hixie>
but given that, why doesn't it find a match with this test?:

[00:26:01.0000] <Hixie>
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C!DOCTYPE%20html%3E%0A%3Cmap%20name%3D%22T%26eacute%3B%26%23x01F1%3B%26%23x2075%3B%26%23xFB01%3B%22%3E%3Carea%20href%3D%22%2F%22%20shape%3Drect%20coords%3D0%2C0%2C200%2C200%3E%3C%2Fmap%3E%0A%3Cimg%20usemap%3D%22%23t%26Eacute%3BDZ5F%26%23x0131%3B%26%23x0307%3B%22%20src%3Dimage%3E

[00:27:00.0000] <Hixie>
maybe it doesn't know that dotless i + combining dot above is the same as an i?

[00:27:01.0000] <Hixie>
i wonder how they'd get that kind of bug

[00:28:00.0000] <zcorpan>
i'd rather it was ascii case insensitive unless there are pages relying on it

[00:36:00.0000] <zcorpan>
i've allowed posting on the forums again

[01:32:00.0000] <zcorpan>
if somone here wants to be a mod on forums.whatwg.org to help delete spam, let me know

[01:32:01.0000] <zcorpan>
if someone here anytime spots spam on the forums, also let me know

[01:42:00.0000] <zcorpan>
/me tries activating admin account activation

[02:36:00.0000] <zcorpan>
Hixie: btw, there's no need to upgrade to 3.0 at this point, doing so might mean we have to redo some changes

[02:36:01.0000] <Hixie>
good cos i have no idea how to do that :-)

[02:37:00.0000] <Lachy>
Can someone who understands CSS well, take a look at this test case. As it is now, Firefox passes and Opera and WebKit fail, but I'm told the test is invalid, but I can't figure out why. http://html5.lachy.id.au/output?data=%3C!DOCTYPE+html%3E%0D%0A%3Ctitle%3Emin-height+of+body+when+child+has+bottom+margin%3C%2Ftitle%3E%0D%0A%3Cstyle%3E%0D%0Ahtml+{+background%3A+red%3B+margin%3A+0%3B+padding%3A+0%3B+height%3A+100%25%3B+}%0D%0Abody+{++background%3A+whit

[02:37:01.0000] <Lachy>
e%3B+margin%3A+0%3B+padding%3A+0%3B+min-height%3A+100%25%3B+}%0D%0Adiv+{+margin-bottom%3A+100px%3B+}%0D%0A%3C%2Fstyle%3E%0D%0A%3Cdiv%3EThis+page+should+not+be+able+to+scroll+and+there+should+be+no+red.%3C%2Fdiv%3E&type=text%2Fhtml%3B+charset%3DUTF-8

[02:37:02.0000] <Lachy>
here's a tiny URL for it http://tinyurl.com/5dha3q

[02:38:00.0000] <Hixie>
the test assumes viewport is > 100px

[02:38:01.0000] <Lachy>
yes, which is reasonable

[02:39:00.0000] <Hixie>
otehr than that it seems valid to me...

[02:39:01.0000] <Lachy>
cool, that's what I thought

[02:39:02.0000] <Hixie>
who told you it was invalid?

[02:39:03.0000] <Lachy>
Moose did

[02:40:00.0000] <Hixie>
ah

[02:40:01.0000] <Hixie>
ask him for chapter and verse

[02:40:02.0000] <Hixie>
generally speaking though in my experience moose's understanding of the css specs is often at odds with my own

[02:40:03.0000] <Hixie>
(even in cases where i wrote the relevant parts of css)

[02:41:00.0000] <MikeSmith>
Moose is bigger than Lachy, maybe Lachy's afraid

[02:41:01.0000] <Hixie>
if you want me to comment on a bug, let me know the # :-)

[02:41:02.0000] <Lachy>
I pointed him to the exact part of the specification that backs me up. I'm waiting for him to respond to the bug report again

[02:41:03.0000] <Lachy>
Hixie, do you still have access to Opera's bug tracker?

[02:41:04.0000] <Hixie>
i have a bts account, yes

[02:41:05.0000] <Hixie>
(and am under nda with opera)

[02:41:06.0000] <MikeSmith>
Lachy: you need to grow a beard so that you can be more intimidating.. a beer gut helps too

[02:42:00.0000] <Lachy>
MikeSmith, no chance of me growing a beard. A friend of my tried to get me to grow one for a week. I couldn't last more than 3 days without shaving.

[02:43:00.0000] <Philip`>
You could grow one in a flower pot, then put it on for special occasions

[02:43:01.0000] <Lachy>
LOL

[02:44:00.0000] <MikeSmith>
OK, you can buy one from a makeup show and wear that. But it needs to be a big-ass, Grizzly Adams /Old Testament prophet kind of beard  -- especially in Norway

[02:45:00.0000] <MikeSmith>
beard cred

[02:47:00.0000] <Lachy>
MikeSmith, did you have a beard while you were in Oslo?

[02:48:00.0000] <MikeSmith>
yeah, but more a boozer beard -- Yasser Arafat type of beard

[02:53:00.0000] <virtuelv>
Lachy: go ask moose why

[02:54:00.0000] <virtuelv>
(re test case)

[02:54:01.0000] <Lachy>
virtuelv, yeah, he wasn't in his office when I checked earlier

[02:55:00.0000] <virtuelv>
ah, that's right, he's off for the weekend

[03:04:00.0000] <zcorpan>
Hixie: should noscript be display:none!important in the ua style sheet when scripting is enabled?

[03:04:01.0000] <Hixie>
not !important

[03:04:02.0000] <Hixie>
imho

[03:17:00.0000] <Lachy>
I can't figure out why this is giving an internal server error now. The code used to work on my old web host. http://html5.lachy.id.au/clipboard - source code here: http://html5.lachy.id.au/clipboard-source

[03:19:00.0000] <Hixie>
what's the error?

[03:23:00.0000] <Hixie>
/me removes about 40 XXXs from the spec

[03:23:01.0000] <Hixie>
aw man, that's hardly even a dent in the line

[03:23:02.0000] <MikeSmith>
Lachy: that script seems to work OK if I run it from command line

[03:24:00.0000] <MikeSmith>
i.e., with CONTENT_TYPE=text/html REQUEST_METHOD=POST python clipboard-source

[03:25:00.0000] <Lachy>
Hixie, other than an Internal Server Error of some kind, I have no idea. I just know it's being caused by when I try to send a 204 No Content response

[03:25:01.0000] <Hixie>
no message in the logs?

[03:25:02.0000] <Hixie>
apache's error.log in particular?

[03:25:03.0000] <Lachy>
where would I find the error log?

[03:26:00.0000] <Lachy>
[Fri Jul 25 11:26:49 2008] [error] [client ::1] Premature end of script headers: clipboard.py

[03:27:00.0000] <MikeSmith>
/var/log/apache2/error.log

[03:27:01.0000] <MikeSmith>
maybe

[03:27:02.0000] <Lachy>
found it in /Applications/MAMP/logs/apache_error_log

[03:28:00.0000] <Lachy>
on my localhost server

[03:28:01.0000] <Hixie>
try outputting an extra blank line

[03:28:02.0000] <MikeSmith>
it's not sending any Content-Type header.. should it be?

[03:29:00.0000] <Hixie>
not for a 204

[03:29:01.0000] <Hixie>
but i think it needs a blank line

[03:29:02.0000] <hsivonen>
eww. compatibility caselessness :-(

[03:30:00.0000] <Hixie>
yeah i was shocked to see IE do that

[03:30:01.0000] <Lachy>
changing it to print "Status: 204 No Content\r\n" has no effect

[03:30:02.0000] <Hixie>
mind you none of the other browsers do so maybe we can change it

[03:30:03.0000] <Hixie>
Lachy: does python's "print" output a newline automatically? does it still do that if the string ends in a newline?

[03:31:00.0000] <Lachy>
I don't know

[03:31:01.0000] <Lachy>
I think it does, but I'll have to check the docs

[03:31:02.0000] <MikeSmith>
python "print" prints out a newline automatically, I'm purty sure

[03:32:00.0000] <Lachy>
"A "\n" character is written at the end, unless the print statement ends with a comma. This is the only action if the statement contains just the keyword print."

[03:33:00.0000] <Hixie>
dunno then

[03:33:01.0000] <Hixie>
try sending a body

[03:34:00.0000] <Lachy>
already tried that, had no effect

[03:35:00.0000] <Lachy>
but if I change it to print 200 OK instead, it works fine. So it just doesn't like sending 204

[03:36:00.0000] <Hixie>
weird

[03:37:00.0000] <Hixie>
heycam: there's no special WebIDL-fu to handle https://bugzilla.mozilla.org/show_bug.cgi?id=214574#c8 yet, right? Is that on your list?

[03:38:00.0000] <MikeSmith>
Lachy: you tried just:

[03:38:01.0000] <MikeSmith>
print "Status: 204 No Content"

[03:39:00.0000] <MikeSmith>
print

[03:39:01.0000] <MikeSmith>
just and empty "print" I mean

[03:39:02.0000] <MikeSmith>
instead of "print .. \r\n"

[03:40:00.0000] <Lachy>
ah, I found my problem. It was sending 204 properly when I added \r\n, but the browser kept displaying the error message because it had nothing to replace it with.

[03:41:00.0000] <Lachy>
now it works

[03:44:00.0000] <Hixie>
hah

[03:45:00.0000] <Hixie>
that's funny

[03:49:00.0000] <Hixie>
ok bed time

[03:49:01.0000] <Hixie>
nn

[04:20:00.0000] <hsivonen>
It seems that machine translation isn't quite there yet. http://translate.google.com/translate?u=http%3A%2F%2Fweb.g.hatena.ne.jp%2Fvantguarde%2F20080707%2F1215437094

[04:24:00.0000] <Philip`>
Babel Fish doesn't seem any better

[04:36:00.0000] <hsivonen>
/me wonders how many bytes would be saved daily in bandwidth if WP didn't have the silly profile attribute...

[04:37:00.0000] <hsivonen>
http://trac.wordpress.org/ticket/6918

[04:38:00.0000] <zcorpan>
hsivonen: is that basically saying "switch to html5"?

[04:39:00.0000] <hsivonen>
zcorpan: it could also be saying: "create an XHTML 1.0 plus ARIA validatation target"

[04:41:00.0000] <zcorpan>
i don't want another XHTML PFI :(

[04:41:01.0000] <hsivonen>
zcorpan: one cannot be coined without triggering the standards mode

[04:42:00.0000] <hsivonen>
zcorpan: however, the W3C validator could trigger on the system id and keep an existing public id

[04:42:01.0000] <hsivonen>
which would be totally wrong in theory, of course

[04:43:00.0000] <tommorris>
the profile attribute isn't silly. it is actually useful, if used correctly.

[04:43:01.0000] <hsivonen>
tommorris: what is it useful for?

[04:44:00.0000] <tommorris>
GRDDL

[04:44:01.0000] <hsivonen>
tommorris: in a loosely coupled distributed environment, it totally sucks if the publisher needs to cooperate in order to make a specific scraping solution work

[04:45:00.0000] <tommorris>
that's not how it's designed.

[04:47:00.0000] <tommorris>
I still don't see why it has been removed from HTML 5. Nobody is asking the editors to like GRDDL. Just not break it.

[04:49:00.0000] <MikeSmith>
hsivonen: vantguarde is the same as myakura 

[04:50:00.0000] <MikeSmith>
so you can ask him to translate it for you :)

[04:50:01.0000] <hsivonen>
MikeSmith: I was unaware. 

[04:50:02.0000] <hsivonen>
MikeSmith: nah. translation is too much trouble. 

[05:04:00.0000] <hsivonen>
tommorris: I think it is about a duty to protect Web authors against the trouble of dealing with requests to add profile on their pages. or something like that.

[05:04:01.0000] <tommorris>
srsly, how often does *that* happen

[05:05:00.0000] <tommorris>
I guess, you are also protecting the authors who want to use it from the same fate

[05:08:00.0000] <hsivonen>
I don't know. Way back in 2000 I ended up wasting my time on putting Dublin Core metadata on my pages. 

[05:09:00.0000] <hsivonen>
zcorpan: I fixed the http://dev.w3.org/html5/html-author/charref crash. thanks

[05:10:00.0000] <zcorpan>
hsivonen: cool

[05:10:01.0000] <hsivonen>
the highligting in errors 5 and 6 in unintuitive now...

[05:11:00.0000] <hsivonen>
(caused by tag inference)

[05:12:00.0000] <hsivonen>
Lachy: you could avoid errors 1-4 by putting a space before the combining char

[05:12:01.0000] <Lachy>
hsivonen, ok, I'll do that now

[05:13:00.0000] <hsivonen>
Hixie: it seems theoretically impure to have entities that expand to non-NFC (OHM SIGN and ANGSTROM SIGN)

[05:14:00.0000] <gsnedders>
hsivonen: Since when did we care about theoretical pureness? We're a long way from it already.

[05:14:01.0000] <hsivonen>
/me is inclined to think OHM SIGN and ANGSTROM SIGN should never have gotten their own code points

[05:15:00.0000] <hsivonen>
(DC metadata in HTML was a waste of time, because it duplicated metadata that HTML and HTTP support natively.)

[05:16:00.0000] <Lachy>
hsivonen, done.

[05:16:01.0000] <zcorpan>
gsnedders: at least you should be able to use allowed entities and not get validation errors

[05:16:02.0000] <Lachy>
what about the last 2 errors?

[05:16:03.0000] <hsivonen>
Lachy: thanks

[05:16:04.0000] <hsivonen>
Lachy: I think you can't conform to charmod-norm and use OHM SIGN and ANGSTROM SIGN.

[05:18:00.0000] <Lachy>
really? why?

[05:19:00.0000] <hsivonen>
Lachy: they expand to code points that are prohibited in NFC

[05:19:01.0000] <hsivonen>
NFC normalizes them to upper case omega and a with ring above

[05:19:02.0000] <Lachy>
oh, that seems a bit odd

[05:20:00.0000] <tommorris>
hsivonen: GRDDL+profile is a way to dramatically reduce the need for duplication of metadata...

[05:20:01.0000] <hsivonen>
Lachy: it seems to me it's a bug in Unicode that they tried to mitigate when defining NFC

[05:20:02.0000] <Lachy>
if that's the case, then should we make them non-conforming?

[05:21:00.0000] <hsivonen>
tommorris: my point is that you shouldn't need any incantation to tell a scraper that HTML <title> is the title. The scraper should know that in text/html, <title> is the title.

[05:21:01.0000] <zcorpan>
hsivonen: or make the entities expand to the NFC equivalents

[05:21:02.0000] <zcorpan>
s/hsivonen/Lachy/

[05:21:03.0000] <hsivonen>
zcorpan: good point

[05:21:04.0000] <hsivonen>
Hixie: what zcorpan said merits considering

[05:22:00.0000] <zcorpan>
/me files a bug

[05:22:01.0000] <hsivonen>
Lachy: at some point I had some reason to guess that charmod-norm would become part of HTML5 conformance criteria

[05:23:00.0000] <Lachy>
so do you mean that #ohm; and &angst; will be expanded to U+03A9 and U+00C5 instead?

[05:23:01.0000] <Lachy>
making them the same as &omega; and &aring;?

[05:23:02.0000] <tommorris>
hsivonen: nobody is suggesting that one *needs* that. just that it's quite useful to be able to provide a way for a parser to follow it's nose and find more information about how to parse a document.

[05:23:03.0000] <hsivonen>
though by the time HTML5 becomes a REC, the installed base of browsers will deal with NFD

[05:23:04.0000] <hsivonen>
or, rather, stuff that NFC hides

[05:24:00.0000] <hsivonen>
Lachy: &Omega; and &Aring;

[05:24:01.0000] <Lachy>
right, that's what I meant

[05:24:02.0000] <hsivonen>
tommorris: the parser can't do that unless someone troubles the page authors

[05:24:03.0000] <Lachy>
I gave the right codepoints, just capitalised wrongly

[05:25:00.0000] <tommorris>
hsivonen: I still don't get this point. If they want to put an hCard in, they will be "troubled". If they want to put a <time> in, they'll be "troubled". What's so different about putting in a @profile?

[05:25:01.0000] <hsivonen>
tommorris: the value it provides compared to an alternative solution

[05:26:00.0000] <tommorris>
if the aim is to not trouble page authors, just tell them to not put any thing up on the web. or stick to text/plain

[05:27:00.0000] <tommorris>
so, the alternative solution is <link rel="profile">. only that breaks existing grddl implementations...

[05:28:00.0000] <zcorpan>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=5897

[05:28:01.0000] <hsivonen>
tommorris: what I see as the alternative solution is the scraper having programmed knowledge about well-known vocabularies and the ability to recognize microformat gestalts

[05:29:00.0000] <tommorris>
hsivonen: how does that solve the problem of a web author who wants to publish a whole bunch of HTML pages that have a custom set of metadata? Wait, don't tell me: "Go Pareto Principle!"

[05:30:00.0000] <hsivonen>
tommorris: who's going to consume the custom metadata?

[05:30:01.0000] <tommorris>
anyone who wants to.

[05:31:00.0000] <hsivonen>
tommorris: how does the agreement on meaning form between the loosely coupled parties? how is one person's homegrown metadata vocabulary interesting enough for someone to write software for it?

[05:32:00.0000] <tommorris>
well, you know, all the usual ways stuff like that happens.

[05:33:00.0000] <tommorris>
we can't expect everyone to do that on whatwg.org or microformats.org

[05:33:01.0000] <zcorpan>
Hixie: "+  string or a value that is a, <span>ASCII case-insensitive</span>" s/a,/an/

[05:34:00.0000] <hsivonen>
tommorris: even if a microformat-like format isn't tantek-approved, the non-loose parties can agree on meaning

[05:35:00.0000] <tommorris>
eg. a bunch of geneticists are working on ways of marking that, say, a web document refers to specific genes. part of the way they do that is to start publishing documents, and GRDDL provides an easy way for them to map that to existing RDF and XML-based metadata formats

[05:36:00.0000] <hsivonen>
tommorris: what I don't understand is this: if you are out to scrape a genetic microformat with GRDDL, why wouldn't you make the scraper default to that GRDDL transformation so that you can catch cases where the profile is missing

[05:37:00.0000] <tommorris>
yes, but the idea is that authors should be able to declare the microformats (etc.) that they use.

[05:38:00.0000] <hsivonen>
I guess I just don't see the value in declaring them, because consumers are better off trying to look for the gestalt instead of failing when the declaration is missing

[05:39:00.0000] <tommorris>
I can think of certain instances where one should not do that

[05:39:01.0000] <tommorris>
the "not-hCard" scenarios are an academic example of that.

[05:42:00.0000] <hsivonen>
tommorris: I think academic examples aren't interesting. Real coincidences are.

[05:45:00.0000] <tommorris>
well, the thing is that the argument you are making is against GRDDL. but all that will happen is that if @profile isn't in HTML 5, we'll probably have to just change the GRDDL spec so that parsers look in both @profile and link[@rel='profile'], and change the various parsers so they do that.

[05:48:00.0000] <tommorris>
either way people will want to use it (not many people, but that doesn't matter to anyone who is not a Pareto fundamentalist), and they'll find a way. it just seems silly not to have it in the spec.

[05:54:00.0000] <zcorpan>
tommorris: i don't know anything about grddl but would it hurt to ignore profile and just assume it's there?

[05:55:00.0000] <tommorris>
zcorpan: what do you mean? when writing HTML 5 documents, just include @profile?

[05:55:01.0000] <tommorris>
that's what DanC is doing, btw

[05:55:02.0000] <tommorris>
view source on http://www.w3.org/People/Connolly/ ;)

[05:56:00.0000] <zcorpan>
tommorris: i mean, when doing grddl processing, don't look for profile but act as if it was there

[05:56:01.0000] <hsivonen>
tommorris: when you are extracting genetic data, behaving as if every page had a profile for the genetic data GRDDL transformation

[05:56:02.0000] <hsivonen>
tommorris: and when looking for contact info, behaving as if every page had an hCard profile

[05:57:00.0000] <tommorris>
well, yes, but that doesn't solve the problem

[05:57:01.0000] <tommorris>
that still means that for every use case you have to write a new parser.

[05:58:00.0000] <hsivonen>
tommorris: no, you don't need to write a new parser, you just need to give a GRDDL transformation appropriate for the use case as an input argument

[05:59:00.0000] <tommorris>
again, yes, you can do that - and many implementations will do that - but it doesn't solve the problem

[06:00:00.0000] <hsivonen>
tommorris: what's "the problem"?

[06:00:01.0000] <tommorris>
the problem is that authors should be able to declare in a machine-readable way the data schemas they are using, rather than having to insert magic into every parser

[06:01:00.0000] <hsivonen>
that doesn't look like a problem statement. It looks like a solution statement.

[06:01:01.0000] <gsnedders>
tommorris: In the case of things like µf, parsers already have to behave as if there is a @profile there even when it is missing, because it isn't there so often

[06:02:00.0000] <gsnedders>
tommorris: They're going to have to have this to be compatible with the real world regardless of whether @profile exists in HTML 5.

[06:02:01.0000] <tommorris>
Yes, but that's discretionary.

[06:03:00.0000] <gsnedders>
tommorris: Only really discretionary insofar as an option of: a) be compatible with real websites; b) be theoretically correct

[06:04:00.0000] <tommorris>
The problem with this is that it presumes that there is a universal microformat mapping.

[06:04:01.0000] <hsivonen>
tommorris: not universal. just one that your next processing step expects

[06:05:00.0000] <hsivonen>
tommorris: if you are scraping for hCard data, surely you need something that groks hCard/vCard-like data as a further step

[06:05:01.0000] <hsivonen>
assuming that the process *does* something with the data after scraping it

[06:58:00.0000] <Philip`>
hsivonen: That sounds like a violation of layering - just like how your HTTP processor shouldn't have to care whether you're expecting HTML or CSS or PNG data, your RDF/GRDDL/something processor shouldn't have to care whether you're expecting hCard or hCal or XFN data

[07:22:00.0000] <Lachy>
I've fixed all known bugs with http://html5.lachy.id.au/ - Now the clipboard, validation feature and html5lib viewer features work properly

[07:22:01.0000] <Lachy>
also added a default template to the text box

[07:23:00.0000] <zcorpan>
Hixie: actually the svg wg's proposal is pretty much based on my suggestions as well :) not that i personally like the svg wg's proposal though

[07:31:00.0000] <hsivonen>
Philip`: when you load a PNG image over HTTP, the image doesn't come with a URI pointing to a PNG decoder 

[08:20:00.0000] <Philip`>
hsivonen: That unfortunately missing feature is impossible in HTTP, since there's no way to write a PNG decoder that's portable and fast and not hundreds of kilobytes, built on a framework that also let you implement decoders for all other useful types of content (JPEG, SVG, HTML, etc)

[08:21:00.0000] <Philip`>
so we have to live with the disadvantages that come from that, like never using anything other than three bitmap image formats

[08:22:00.0000] <Philip`>
GRDDL stuff doesn't have that problem, since the associated XSLT files are small and portable, so there's much more possibility of being able to implement something like that

[08:23:00.0000] <tommorris>
yep, and GRDDL is not-just-RDF: I can imagine some great uses to do Atom, KML and other XML syntaxes

[08:51:00.0000] <zcorpan>
the forums now have 11 moderators, i hope that'll scare spammers away

[08:52:00.0000] <Philip`>
Not when they realise all the moderators are inactive :-)

[08:52:01.0000] <zcorpan>
we'll see

[08:52:02.0000] <zcorpan>
at least we haven't got any spam so far!

[09:00:00.0000] <zcorpan>
hmm, shouldn't <meta ... content="TEXT/HTML; CHARSET=UTF-8"> be allowed? (with uppercase "charset")

[10:26:00.0000] <gsnedders>
http://hg.gsnedders.com/spec-gen/raw-file/tip/README.html

[10:27:00.0000] <Philip`>
s/enviroments/environments/

[10:28:00.0000] <Philip`>
When you talk about abbr, etc elements, is that limited to the HTML namespace?

[11:09:00.0000] <gsnedders>
Philip`: either in no namespace or the HTML namespace

[11:16:00.0000] <hsivonen>
3

[11:16:01.0000] <gsnedders>
4

[11:16:02.0000] <hsivonen>
6Oops

[11:17:00.0000] <gsnedders>
Hmm…

[11:17:01.0000] <gsnedders>
It'd be interesting to have the spec-gen implemented in ECMAScript

[11:18:00.0000] <gsnedders>
Philip`: Is the updated copy clear enough?

[12:14:00.0000] <Hixie>
tommorris: profile="" isn't in HTML5 because it's a dumb feature, it has nothing to do with my opinion of GRDDL :-)

[12:14:01.0000] <Hixie>
tommorris: (and it wasn't taken out, we started HTML5 from a blank slate -- I literally wrote every word in the spec from scratch)

[12:15:00.0000] <tommorris>
Okay. How then can we progress to get an amiable situation? Basically, I want to be able to have HTML 5 with working GRDDL. I don't really mind who changes their spec.

[12:16:00.0000] <Hixie>
GRDDL should just support the microformats it supports without being prompted to support them

[12:17:00.0000] <tommorris>
Yes, but there is layering at work here.

[12:18:00.0000] <Hixie>
layering?

[12:18:01.0000] <tommorris>
If I'm implementing GRDDL, generally one will make it work as to the spec.

[12:18:02.0000] <tommorris>
Then you can leave a big option field open so that the user can pop in a list of all the default microformats it wants to look for.

[12:19:00.0000] <Hixie>
GRDDL should always look for all microformats it supports, if it requires a flag in the document before looking for a microformat, that's a bug in GRDDL

[12:19:01.0000] <hober>
Couldn't GRDDL use link@rel="profile" instead of head@profile? RelExtensions lists link@rel="profile"

[12:19:02.0000] <Hixie>
link rel="profile" is as stupid as head profile=""

[12:20:00.0000] <tommorris>
Stupid it may be. Ugly it may be. But there are plenty of people - like myself - who have to implement it

[12:21:00.0000] <hober>
Hixie: indeed, but rel values are less obtrusive than a custom attribute like head@profile. So if they insist, I'd just assume they use @rel="profile" over head@profile.

[12:21:01.0000] <tommorris>
And if it's just a microformats scraper, that's not the point of GRDDL. It's about letting authors explicitly declare the data inside their page.

[12:21:02.0000] <tommorris>
I don't really care either way. I just have to write the damn code. ;)

[12:21:03.0000] <hober>
tommorris: But simply by saying <div class="vcard">, I've already explicitly declared the data on my page...

[12:22:00.0000] <tommorris>
Yes, unless in outer Mongolia or somewhere, class="vcard" means something different.

[12:22:01.0000] <jgraham>
The problem is that @profile is a long way in metadata space from the actual data so it's quite likely to be wrong or missing

[12:22:02.0000] <jgraham>
See also: content-type

[12:22:03.0000] <Hixie>
tommorris, hober: I have no interest in supporting people who are doing stupid things

[12:22:04.0000] <tommorris>
Again, my preferred solution is to actually look through the whole document for *[@rel='profile']/@href

[12:23:00.0000] <Hixie>
tommorris, hober: no offense :-)

[12:23:01.0000] <hober>
None taken. :) I don't want @profile in HTML.

[12:23:02.0000] <Hixie>
tommorris: i recommend making your code pretend that all profiles are always declared

[12:23:03.0000] <tommorris>
But there is an infinite number of profiles. That's the beauty of them. Distributed extensibility.

[12:24:00.0000] <Hixie>
tommorris: does your GRDDL support all infinite number of them?

[12:24:01.0000] <tommorris>
Yes, it is a generic implementation at a library language level.

[12:24:02.0000] <tommorris>
What people choose to do with it is up to them.

[12:24:03.0000] <Hixie>
wait what?

[12:25:00.0000] <Hixie>
tell you what why don't you give me a rundown of what your code does

[12:25:01.0000] <Hixie>
pretend i know nothing about GRDDL

[12:25:02.0000] <Hixie>
since apparently i might not

[12:25:03.0000] <Hixie>
:-)

[12:25:04.0000] <gsnedders>
/me gives Hixie a newbie badge

[12:25:05.0000] <tommorris>
It takes a URI, it loads the URI, takes a rough stab to see what it is (and makes a decision of either HTML/XHTML or 'generic XML' or 'dunno, I give up')

[12:26:00.0000] <tommorris>
then if it's XML, it follows the XML parsing rules

[12:26:01.0000] <tommorris>
if it's HTML/XHTML, it follows the HTML/XHTML parsing rules (basically, runs it through Tidy and loads it in as an XML document)

[12:27:00.0000] <tommorris>
then it checks to have a look at the @profile attribute, loads each of the URIs listed in the profile attribute and extracts from those URIs the location of an XSLT document

[12:28:00.0000] <tommorris>
It then runs all the XSLTs found across the document, takes all the outputs and loads them in to an RDF graph and returns a Graph object to the user to do with as they like

[12:28:01.0000] <Hixie>
ok so there are two problems with that

[12:28:02.0000] <Hixie>
one is that your output is RDF, so in practice it really doesn't matter what you do :-)

[12:28:03.0000] <Hixie>
the other is that the target of the profile="" attribute typically doesn't include a link to an XSLT sheet

[12:29:00.0000] <Hixie>
and it's unlikely that most authors of microformats will include the link to a page that mentions XSLT

[12:29:01.0000] <Hixie>
(indeed it's unlikely that they'll include any profile links at all)

[12:29:02.0000] <Hixie>
a better mechanism would be for the user of the GRDDL mechanism to provide all the XSLTs himself

[12:29:03.0000] <Hixie>
instead of relying on the page's author getting the link right

[12:30:00.0000] <tommorris>
Most existing GRDDL implementations have a method you can call which allows you to specify some existing XSLTs (or shortcuts thereto)

[12:31:00.0000] <Hixie>
problem solved then, no need for a profile="" mechanism

[12:31:01.0000] <tommorris>
Not at all.

[12:32:00.0000] <tommorris>
That not many people use it properly is not an argument for not letting those who do use it be able to.

[12:32:01.0000] <Hixie>
actually, for html5, it is

[12:33:00.0000] <tommorris>
I don't exactly see why.

[12:33:01.0000] <Hixie>
if most people do something wrong, then we assume the spec is stupid, and fix it.

[12:33:02.0000] <Hixie>
but anyway here the point is that the grddl user isn't the web page author, presumably, because if he was, then he wouldn't need to have the indirection through the page to declare the profiles

[12:34:00.0000] <Hixie>
and if it's not the same author, then using profile="" is going to be unreliable by definition

[12:34:01.0000] <tommorris>
Ah, but often he does because he doesn't want to repeat himself

[12:34:02.0000] <Hixie>
the use case you are putting forward is fundamentally non-sensical

[12:34:03.0000] <Hixie>
there no reason to repeat oneself -- only say it once, to the grddl, instead of once in every page (which would be repetition indeed!)

[12:35:00.0000] <tommorris>
If I want to publish some data on the web and have it parseable in an RDFish kind of way, I can either put it all up in, say, RDF/XML for computers *and* HTML for people - or I can put it up as HTML, with a little "hey, go here and find out how to parse it" instruction at the top and half the amount of data I have to publish

[12:35:01.0000] <gsnedders>
Hixie: Most people use non-conforming HTML. Can't we fix the spec for that?

[12:36:00.0000] <Hixie>
gsnedders: we did. we made a massive effort to define how to parse broken html.

[12:36:01.0000] <Hixie>
gsnedders: and made a number of previously disallowed things allowed.

[12:36:02.0000] <Hixie>
(where they were harmless)

[12:36:03.0000] <gsnedders>
Hixie: Then most people will still do something wrong, so we will assume HTML 5 is stupid, and fix it. :P

[12:36:04.0000] <gsnedders>
/me runs away

[12:37:00.0000] <Hixie>
tommorris: the rdf spec says how to parse rdf right? the html spec says how to parse html? you don't need to declare how to parse them in the file itself? so why do you do that with microformats?

[12:38:00.0000] <Hixie>
tommorris: the point though is that most people don't include the "how to parse it" instructions, and so any actual use of the data has to know how to parse it anyway, making the instructions moot

[12:38:01.0000] <tommorris>
in the more common circumstances.

[12:38:02.0000] <tommorris>
the point is that in niche circumstances, it is quite useful

[12:38:03.0000] <Hixie>
html5 isn't targetting niche circumstances

[12:38:04.0000] <tommorris>
and, yes, I've heard the Pareto principle guff, which is a justification to make it only work 80% of the time. ;)

[12:38:05.0000] <Hixie>
we are explicitly cutting off at 80%

[12:39:00.0000] <Hixie>
if we didn't, we'd end up with a disaster like docbook. or rdf.

[12:39:01.0000] <gsnedders>
Hixie: In May, myself, jgraham, and Philip` ended up concluding we'd get rid of the numbers 0 and 9, as we only need to address 80% of use-cases.

[12:39:02.0000] <Hixie>
gsnedders: then your study of use cases was likely severely flawed

[12:40:00.0000] <gsnedders>
/me blames jgraham 

[12:40:01.0000] <Hixie>
since most people don't use octal

[12:41:00.0000] <gsnedders>
BTW, http://hg.gsnedders.com/spec-gen/raw-file/tip/README.html — OMG docs!

[12:41:01.0000] <tommorris>
again, I'm not asking people to use or like GRDDL - just not break our implementations

[12:41:02.0000] <Hixie>
i'm not breaking your implementations any more than they are already broken

[12:41:03.0000] <Hixie>
they rely on something that is fundamentally not going to happen regardless of what the spec says

[12:41:04.0000] <Hixie>
all i'm doing is showing you reality

[12:42:00.0000] <Hixie>
pulling your head out of the sand, as it were

[12:42:01.0000] <Hixie>
sorry for being so blunt

[12:42:02.0000] <tommorris>
it's not a case of "do we make it go away or not?", it's a case of "do we make it work as it does already or do we make it so we have to rewrite them to treat HTML 5 differently from how they do HTML 4/XHTML 1?"

[12:43:00.0000] <Hixie>
you're missing the best option, which is "do we make it so we have to rewrite them to actually handle all of HTML5/HTML4/XHTML1 in a way that actually works"

[12:46:00.0000] <Philip`>
gsnedders: In Introduction, "consquently"

[12:46:01.0000] <Philip`>
gsnedders: Also the colon seems like inappropriate punctuation there

[12:46:02.0000] <gsnedders>
Philip`: Stop wanting me to spell things correctly!

[12:46:03.0000] <gsnedders>
:P

[12:46:04.0000] <gsnedders>
But thanks.

[12:47:00.0000] <Philip`>
gsnedders: Computers are good at finding such errors :-)

[12:47:01.0000] <Philip`>
gsnedders: although actually I've never quite worked out how to spell-check sensibly on Linux so I just do it manually :-(

[12:48:00.0000] <gsnedders>
/me lives on spell checking existing on any and every text-field

[12:48:01.0000] <gsnedders>
But the problem is it breaks badly on HTML source, so I have to turn it off there :(

[12:48:02.0000] <Philip`>
/me likes how Visual Assist does spell-checking of C++ code, by looking in strings and comments

[13:00:00.0000] <gsnedders>
/me is defining the useful stuff to know that the CSS3 module postprocessor doesn't define

[13:00:01.0000] <gsnedders>
Which is going to end up with the interesting situation of my docs documenting what I implement in compat. mode better than the original docs do.

[13:08:00.0000] <Hixie>
oops, apologies about the double post just now

[13:12:00.0000] <gsnedders>
Hixie: What text editor do you use to edit the huge spec.? Do you do the text-wrapping by hand, or by using…?

[13:12:01.0000] <Hixie>
emacs

[13:12:02.0000] <gsnedders>
For both?

[13:12:03.0000] <hsivonen>
looks like emacs isn't deterministic

[13:12:04.0000] <hsivonen>
sometimes commits rewrap lines for no good reason

[13:13:00.0000] <Hixie>
i do the line wrapping semi-manually

[13:13:01.0000] <Hixie>
i have f7 bound to "wrap this paragraph"

[13:13:02.0000] <Hixie>
so when i do regexp search/replaces, the paragraphs don't get rewrapped unless i explicitly request it

[13:14:00.0000] <Hixie>
thus what you're seeing

[13:15:00.0000] <gsnedders>
Hixie: See, I'm always scared when documentation is a 3MB HTML file :)

[13:15:01.0000] <hsivonen>
ok. makes sense

[13:15:02.0000] <Hixie>
gsnedders: emacs is a terrible text editor. it can do pretty much anything and is horribly hard to use out of the box.

[13:16:00.0000] <gsnedders>
The problem is there are no good text editors that can do pretty much anything :(

[13:16:01.0000] <Hixie>
gsnedders: it also happens to handle multimegabyte files fine (though it chokes once they get into the hundreds of mb) and does very good search/replace and a few other things i need.

[13:16:02.0000] <hsivonen>
has anyone embedded Gecko inside emacs yet?

[13:16:03.0000] <Hixie>
i use emacs under screen over ssh

[13:16:04.0000] <Hixie>
so i wouldn't know

[13:16:05.0000] <gsnedders>
Hixie: nano deals with all that fine :P

[13:16:06.0000] <hsivonen>
Emacs W3 isn't that good for browsing the web

[13:16:07.0000] <hsivonen>
so there are limits to the kitchen sink

[13:17:00.0000] <Hixie>
hsivonen: i said it could do anything, not that it could do anything well.

[13:17:01.0000] <Hixie>
gsnedders: nano is ok for little jobs

[13:17:02.0000] <Hixie>
gsnedders: i couldn't use it to edit the spec tohugh

[13:17:03.0000] <Hixie>
nano is what i use for config files, etc

[13:18:00.0000] <gsnedders>
I dunno. Once you set it up right, it's surprisingly powerful.

[13:18:01.0000] <Hixie>
does it have a shell?

[13:18:02.0000] <Hixie>
multiple buffers?

[13:18:03.0000] <gsnedders>
A shell to do what?

[13:18:04.0000] <Hixie>
a clipboard list?

[13:18:05.0000] <gsnedders>
Yes

[13:18:06.0000] <gsnedders>
No

[13:18:07.0000] <franksalim>
tetris?

[13:18:08.0000] <gsnedders>
No

[13:18:09.0000] <gsnedders>
Pong?

[13:18:10.0000] <gsnedders>
No

[13:18:11.0000] <hsivonen>
hrm. the multipage sections keep moving

[13:19:00.0000] <Hixie>
one of the features of emacs i use the most is that you can open a bash shell as a file

[13:19:01.0000] <gsnedders>
Hixie: Is Tetris the real reason you use emacs?

[13:19:02.0000] <Hixie>
you can edit the shell just like a file

[13:19:03.0000] <Hixie>
but it runs commands when you hit enter

[13:19:04.0000] <Hixie>
i hate tetris :-)

[13:19:05.0000] <gsnedders>
Hixie: Then pong?

[13:19:06.0000] <Hixie>
nope

[13:20:00.0000] <Hixie>
I use M-x count-matches and M-x list-matching-lines a lot too

[13:20:01.0000] <Hixie>
if i had the time i'd write my own editor

[13:20:02.0000] <Hixie>
now that i know what i want from it

[13:21:00.0000] <Hixie>
but it wouldn't be useful for anyone else :-)

[13:21:01.0000] <Hixie>
Should we come up with an alternative to textContent that handles dir="", <bdo>, <img alt="">, etc?

[13:21:02.0000] <gsnedders>
Hixie: Yes.

[13:22:00.0000] <gsnedders>
Actually, no.

[13:22:01.0000] <gsnedders>
Hixie: You should.

[13:22:02.0000] <gsnedders>
:D

[13:22:03.0000] <hsivonen>
aaargh. the spec splitter no longer spits the tokenization section into a standalone file

[13:22:04.0000] <jcranmer>
vim works better IHMO, but I'm not going to ignite an editor war

[13:22:05.0000] <Hixie>
hsivonen: speak to Philip` 

[13:22:06.0000] <gsnedders>
jcranmer: That wasn't humble enough.

[13:22:07.0000] <jcranmer>
er, IMHO

[13:22:08.0000] <Hixie>
jcranmer: i think both suck, but i could never get into the "mode" mindset that vi uses

[13:23:00.0000] <hsivonen>
also, something changed about the structure so that Lynx breaks the lines differently

[13:23:01.0000] <hsivonen>
making diff useless

[13:24:00.0000] <Philip`>
hsivonen: It's Hixie's fault for changing the section names

[13:24:01.0000] <Philip`>
Hixie: You need to stop modifying the spec, it messes everything up :-(

[13:24:02.0000] <Hixie>
hsivonen: i moved the tokenisation section so that each state is its own subsection

[13:25:00.0000] <Hixie>
so it shows up in the ToC

[13:25:01.0000] <hsivonen>
Hixie: :-(

[13:25:02.0000] <Philip`>
It was renamed to "tokenization" which broke the splitter

[13:25:03.0000] <hsivonen>
Hixie: is there a way to recover the spec plitter output for the tokenizer section from immediately before that change?

[13:26:00.0000] <Hixie>
rerun the spec splitter on that version i guess

[13:26:01.0000] <Hixie>
i dunno

[13:26:02.0000] <Hixie>
i just use Philip`'s web service

[13:26:03.0000] <hsivonen>
are there docs for the service?

[13:27:00.0000] <Philip`>
hsivonen: There aren't

[13:27:01.0000] <hsivonen>
Philip`: any guidance on how to use it?

[13:28:00.0000] <Philip`>
hsivonen: If you have suitable bits of Python and lxml and html5lib installed, you could hopefully just run <some URL which I'll find in a minute since my internet connection is really slow>

[13:28:01.0000] <Philip`>
hsivonen: http://html5.googlecode.com/svn/trunk/spec-splitter/spec-splitter.py

[13:29:00.0000] <hsivonen>
Philip`: thanks. I guess I don't have the deps. I'll have to investigate

[13:29:01.0000] <gsnedders>
Philip`: It'd be quick to use iter than use findall for things like making refs absolute

[13:30:00.0000] <hsivonen>
do I need to also run spec gen first to get compatible results?

[13:30:01.0000] <Philip`>
gsnedders: It takes about a minute to parse the input, so it's already slow enough that minor optimisations will have no practical effect :-)

[13:31:00.0000] <hsivonen>
zcorpan: I fixed the two parsetree.v.nu issues

[13:31:01.0000] <gsnedders>
Philip`: IIRC it was a fair difference doing stuff like that

[13:31:02.0000] <Philip`>
hsivonen: You need to run it on the post-spec-gen "index" file (which should be in SVN)

[13:31:03.0000] <hsivonen>
Philip`: ok.

[13:31:04.0000] <gsnedders>
Or you can help find bugs in my spec-gen :P

[13:32:00.0000] <Philip`>
hsivonen: If you don't have the relevant dependencies, but you know what revision number you're interested in, I could convert it manually

[13:33:00.0000] <hsivonen>
Philip`: I'm interested in rev 1905 and 1906

[13:34:00.0000] <Hixie>
those changed nothing of substance

[13:34:01.0000] <Hixie>
for r1906, i did the diff locally using -w

[13:35:00.0000] <Hixie>
and there was nothing except the <dt>s turning into <h5>s

[13:35:01.0000] <Hixie>
(and i missed one, which got fixed later)

[13:35:02.0000] <hsivonen>
Hixie: right, so first I need to diff my baseline against 1905. then I need to make 1906 my baseline and diff it agaist the latest version

[13:36:00.0000] <Hixie>
ah, makes sense

[13:37:00.0000] <gsnedders>
Is http://hg.gsnedders.com/spec-gen/raw-file/tip/README.html#cross-referencing-0 good enough docs?

[13:37:01.0000] <Philip`>
(I've updated the online spec-splitter so it should split on "tokenization" correctly now)

[13:37:02.0000] <gsnedders>
(for that section, for xref)

[13:39:00.0000] <Hixie>
thanks Philip` 

[13:40:00.0000] <Philip`>
hsivonen: Downloading those revisions now

[13:41:00.0000] <Hixie>
gsnedders: looks good to me

[13:41:01.0000] <hsivonen>
Philip`: thanks

[13:41:02.0000] <Hixie>
not sure about the white-on-red styling though :-)

[13:41:03.0000] <Hixie>
or white-on-blue :-)

[13:42:00.0000] <gsnedders>
Hixie: The white-on-red and white-on-blue is all editorial :)

[13:42:01.0000] <Hixie>
/me sees the make install step and prays it doesn't require him to be root

[13:43:00.0000] <gsnedders>
(white-on-red is span:not([title=""]):not(.secno) and white-on-blue is a:not([href]))

[13:43:01.0000] <Philip`>
hsivonen: http://philip.html5.org/misc/tokenization-r1905.html http://philip.html5.org/misc/tokenization-r1906.html

[13:43:02.0000] <gsnedders>
Hixie: The only thing that might require perms. is to install the spec-gen application, by default in /usr/local/bin

[13:44:00.0000] <Philip`>
gsnedders: "An instance is only used if it does not have a a, dfn, or datagrid element as either a parent or a child." - s/a a/an a/

[13:44:01.0000] <hsivonen>
Philip`: thank you

[13:45:00.0000] <Philip`>
gsnedders: s/dependant/dependent/

[13:45:01.0000] <Hixie>
gsnedders: k, i hope i can install it elsewhere :-)

[13:46:00.0000] <gsnedders>
Hixie: where ever you want :)

[13:46:01.0000] <Hixie>
:-D

[13:46:02.0000] <gsnedders>
Hixie: (or at least anywhere you have write perms for :P)

[13:47:00.0000] <gsnedders>
Philip`: Is dependent preferred in the OED? dependant is the en-gb norm.

[13:50:00.0000] <Philip`>
gsnedders: If I'm not mistaken, "dependant" is always a noun (like a person who depends on someone), and "dependent" is always the adjective or whatever it is

[13:51:00.0000] <gsnedders>
/me looks up

[13:51:01.0000] <gsnedders>
Philip`: It's an obsolete spelling of the adjective :P

[13:51:02.0000] <gsnedders>
Philip`: -ant is obs. adj, and en-gb noun; -ent is adj., an en-us noun

[13:57:00.0000] <Philip`>
gsnedders: Ah, so I'm right, if you ignore obsolete and American usage, and you should ignore them :-)

[13:58:00.0000] <hsivonen>
so now Jetty docs say I should be using HTTP and mod_proxy instead of AJP13 and mod_jk starting with Apache 2.2

[13:59:00.0000] <hsivonen>
stuff keeps changing all the time

[14:00:00.0000] <Philip`>
The obsolete versions won't keep changing, so you could stick with them

[14:01:00.0000] <hsivonen>
at least AJP13 still works even though Jetty docs say it is less performant

[14:01:01.0000] <hsivonen>
(but the bottle neck is Schematron anyway)

[14:02:00.0000] <hsivonen>
and I only need standard HTTP methods, so AJP13 doesn't limit me that way

[14:03:00.0000] <hsivonen>
nn

[14:30:00.0000] <gsnedders>
Hmm.

[14:30:01.0000] <gsnedders>
Should program options be in a code element?

[14:30:02.0000] <gsnedders>
/me thinks so


2008-07-26
[18:04:00.0000] <Hixie>
Philip`: yt?

[18:04:01.0000] <Philip`>
Hixie: Sort of, but also sort of playing TF2

[18:05:00.0000] <Philip`>
so I'll be here for about fifteen seconds while respawning, a few times a minute

[18:05:01.0000] <Hixie>
ok

[18:05:02.0000] <Hixie>
that's cool

[18:06:00.0000] <Hixie>
i was wondering if you could give me a rundown of what the access characteristics of your issue list script are intended to be

[18:06:01.0000] <Hixie>
i.e. does it redownload every email every day, or just new ones, or what?

[18:06:02.0000] <Hixie>
and is it trying to do one request per minute, or what?

[18:06:03.0000] <Hixie>
or as fast as possible, or something slower?

[18:07:00.0000] <Philip`>
It only downloads data when someone requests a page

[18:07:01.0000] <Hixie>
(it's not causing problems, i'm just trying to understand the patterns i'm seeing)

[18:07:02.0000] <Philip`>
The category listings get cached for 24 hours

[18:07:03.0000] <Philip`>
The individual emails get cached forever

[18:07:04.0000] <Hixie>
aah, so it must be google doing a hit per minute or something

[18:08:00.0000] <Philip`>
It could be Google hitting me and causing me to hit you

[18:08:01.0000] <Hixie>
so what i'm seeing on my side is that every minute or so, i get a request from you, which spawns my server, which then tries to live for ten minutes and time out, except that because google is hitting you less than that, the server basically never times out

[18:08:02.0000] <Hixie>
is there any chance i can get you to aggressively precache once per day or something?

[18:08:03.0000] <Hixie>
the data is only refreshed once per day anyway

[18:08:04.0000] <Hixie>
there's no rush on this

[18:54:00.0000] <heycam>
Hixie, correct (re a way to indicate whether interface properties or named item lookups take precedence)

[18:55:00.0000] <heycam>
Hixie, would you like one?

[18:55:01.0000] <heycam>
/me breakfasts

[20:34:00.0000] <Philip`>
Hixie: Oops, it had fast respawn times and I got distracted

[20:35:00.0000] <Philip`>
I think it should be quite possible for me to set something up that forces all the caching to happen at once

[20:35:01.0000] <Philip`>
but I need to sleep now, and I'll probably forget, so feel free to remind me at some point in the near future

[23:00:00.0000] <Hixie>
heycam: yes please

[23:00:01.0000] <Hixie>
Philip`: ok

[03:34:00.0000] <gsnedders>
/me notes that Hixie is still replying to stuff from before he joined the whatwg list :P

[11:33:00.0000] <Windstoss>
Assuming, a ressource (say, an image) requested with GET is listed in the applications cache manifest. There is network connectivity. The image in the cache is older than the one on the server. Now, is this image loaded from cache before the application cache update process has replaced the older image with the recent one? So, in other words, does the user see the old image first, before, perhaps a script updates the image?

[12:24:00.0000] <Hixie>
Windstoss: once something is in an application cache, all network uses that cache (except online whitelist stuff and fallback stuff)

[12:24:01.0000] <Hixie>
Windstoss: and teh cache gets updated every now and then

[12:25:00.0000] <Windstoss>
Hixie: Thanks again :)

[12:42:00.0000] <hsivonen>
I find it sad that extracting Dublin Core is put forward as a GRDDL/profile use case. It doesn't work with all the HTML doc out there that have <title> but no profele

[12:42:01.0000] <hsivonen>
profile even

[12:58:00.0000] <zcorpan>
Hixie: is it possible to see the IP of a user from the admin panel? there's a new spammer "BUYIT"

[13:04:00.0000] <hsivonen>
/me think telling the recipient to run an XSLT program to get at metadata violates the Principle of Least power

[13:04:01.0000] <hsivonen>
thinks even

[13:04:02.0000] <gsnedders>
Anyone able to look anything up in the OED around?

[13:04:03.0000] <gsnedders>
Is pre-existing hyphenated or not?

[13:05:00.0000] <hsivonen>
/me would hyphenate 'pre-existing' but not 'cooperative'

[13:05:01.0000] <gsnedders>
/me would hyphenate both

[13:13:00.0000] <tndH>
it's listed as "pre-existing"

[13:15:00.0000] <gsnedders>
tndH: thx

[13:20:00.0000] <hsivonen>
can someone explain me hwy the GRDDL/profile approach to serving RDF data to a client doesn't violate this TAG finding: http://www.w3.org/2001/tag/doc/leastPower ?

[13:20:01.0000] <hsivonen>
or is the Semantic Web in violation of Architecture, too?

[13:24:00.0000] <gsnedders>
/me wouldn't be surprised

[13:49:00.0000] <zcorpan>
hmm it might be better to instead of deleting spammers' accounts, just deactivating them; that way both the account name and the email address are effectively banned

[13:59:00.0000] <gsnedders>
Something very bizarre is happening.

[14:06:00.0000] <gsnedders>
<h1>foo</h1><section><h1>foo</h1></section>

[14:06:01.0000] <gsnedders>
I suppose the second foo being within the first is expected

[14:07:00.0000] <gsnedders>
<section><h1>foo</h1></section><h1>bar</h1>

[14:07:01.0000] <gsnedders>
foo is a child of bar

[14:07:02.0000] <gsnedders>
huh?

[14:13:00.0000] <gsnedders>
Hmm. It'd be nice to have a outline view in the live dom viewer


2008-07-27
[04:15:00.0000] <jgraham>
Hixie: Re: an alt+etc. respecting version of textContent; yes please for use cases such as making a table of contents (or trying to extract any user-displayed string from a non-CDATA element, really)

[06:11:00.0000] <zcorpan>
hsivonen: http://validator.nu/?doc=http://forums.whatwg.org/&showsource=yes has some extracts missing and others ending at the wrong place

[06:12:00.0000] <zcorpan>
hsivonen: (or starting at the wrong place)

[06:13:00.0000] <zcorpan>
hsivonen: starting with error 95

[07:42:00.0000] <hsivonen>
zcorpan: thanks. I'll investigate.

[08:51:00.0000] <zcorpan>
hsivonen: xml:lang attributes didn't use to be fatal in v.nu, did they?

[08:53:00.0000] <gsnedders>
The Settlers' II is awesome.

[08:57:00.0000] <zcorpan>
yeah i remember that game

[08:59:00.0000] <zcorpan>
/me looks up Widelands

[09:00:00.0000] <gsnedders>
I've just gone back to playing it for more or less the first time since the '90s.

[09:01:00.0000] <gsnedders>
Really primitive graphics, but its hard to find much flaw with the gameplay itself

[09:01:01.0000] <gsnedders>
anyone played The Settlers II 10th Anniversary Edition?

[09:03:00.0000] <zcorpan>
/me downloads the demo

[09:36:00.0000] <gsnedders>
ack, I'll go back to not writing docs, and playing Settlers II

[11:44:00.0000] <gsnedders>
/me finally drags himself away from it

[12:58:00.0000] <gsnedders>
Is the behaviour described at <http://hg.gsnedders.com/spec-gen/raw-file/tip/README.html#table-of-contents/section-numbering> for when there is no heading sane enough?

[12:59:00.0000] <gsnedders>
Hixie: ^^

[13:03:00.0000] <Hixie>
looks fine to me

[13:24:00.0000] <gsnedders>
Wow.

[13:25:00.0000] <gsnedders>
608 sections in HTML 5

[13:27:00.0000] <gsnedders>
(approx)

[13:28:00.0000] <gsnedders>
Yeah, 609.

[13:29:00.0000] <gsnedders>
/me finds he can save a couple of thousands of a second by using a deque

[13:29:01.0000] <gsnedders>
/me thinks that's ever so slightly pointless

[13:31:00.0000] <gsnedders>
/me does a different optimization, and cuts buildToc on HTML 5 down from 16.702s to 0.635s

[13:31:01.0000] <gsnedders>
That's probably more noticeable

[13:33:00.0000] <gsnedders>
Running an XPath statement once is not noticeable. Running it 608 times is.

[13:35:00.0000] <hsivonen>
SAX for perf!

[13:36:00.0000] <gsnedders>
hsivonen: I'm not even doing that. I'm just manually iterating over the element and doing what the XPath did manually :P

[13:38:00.0000] <gsnedders>
Besides, the thing that I really need to make a large difference to perf is a quicker parser/serializer :P

[13:44:00.0000] <hsivonen>
gsnedders: if your tree API works with Jython...

[13:45:00.0000] <hsivonen>
gsnedders: (adding tree API glue layers to the validator.nu parser is easy)

[13:46:00.0000] <gsnedders>
hsivonen: For most purposes libxml2's HTML parser works fine, and I'd rather work on finishing the spec-gen than getting more parsers working

[13:47:00.0000] <gsnedders>
Hmm. I can't see any easy way to remove //text()[contains(normalize-space(translate(., 'AEILNORSTV', 'aeilnorstv')), 'latest version') or contains(., 'http://www.w3.org/TR/')]

[13:48:00.0000] <gsnedders>
I can't check .text and .tail at the same time, as I need the text nodes in document order

[13:49:00.0000] <gsnedders>
I can't use etree.iterwalk() because I need the tail of comments, PIs, and the like

[14:13:00.0000] <gsnedders>
/me could do with annevk being on IRC

[14:14:00.0000] <jgraham>
gsnedders: What's wrong with using d.iter() (assuming d is an etree tree)

[14:14:01.0000] <gsnedders>
jgraham: I need text nodes in document order. I can't get that from d.iteR()

[14:14:02.0000] <jgraham>
(as opposed to iterwalk, not as opposed to annevk who is on holiday for a while)

[14:17:00.0000] <jgraham>
gsnedders: Oh well you'd have to iterate by hand I guess, or you could use the html5lib lxml treewalker which does what you want

[14:17:01.0000] <gsnedders>
jgraham: Or just use XPath, which is what I do now

[14:17:02.0000] <gsnedders>
jgraham: I probably won't get quicker than that :(

[14:17:03.0000] <jgraham>
gsnedders: I thouht you were trying to replace the XPath

[14:18:00.0000] <gsnedders>
jgraham: For the sake of being quicker. Iterating by hand will be slow.

[14:18:01.0000] <zcorpan>
gsnedders: use regexp on the source

[14:19:00.0000] <gsnedders>
zcorpan: It has to only be text nodes for compat. with existing docs

[14:19:01.0000] <jgraham>
gsnedders: I thought you had claimed that iterating by hand was surprisingly fast 

[14:20:00.0000] <jgraham>
but maybe I was mistaken

[14:20:01.0000] <zcorpan>
gsnedders: which docs?

[14:20:02.0000] <gsnedders>
jgraham: I claimed that the built-in iterators could be surprisingly quick compared with things like .find

[14:21:00.0000] <jgraham>
Oh OK. I guess using a built in iterator + a stack wouldn't help?

[14:22:00.0000] <gsnedders>
Not really

[14:35:00.0000] <gsnedders>
/me goes against his original plan and implements something for anne in spec-gen 1.0

[14:49:00.0000] <gsnedders>
http://stuff.gsnedders.com/spec-gen/html5.html#the-a-element — note where the xref for "a" now points

[15:03:00.0000] <gsnedders>
(i.e., not #a)


2008-07-28
[02:28:00.0000] <melvster>
Hi All, looking at example 2.1 http://dev.w3.org/html5/html-author/#html-syntax I am wondering if the <p> should be closed?

[02:29:00.0000] <hsivonen>
melvster: no need to close it there

[02:29:01.0000] <melvster>
is it because it's the last node?

[02:30:00.0000] <hsivonen>
yes, the last p node in a container doesn't need to be closed

[02:30:01.0000] <melvster>
hsivonen: OK thanks!

[02:31:00.0000] <zcorpan>
melvster: "A p element's end tag may be omitted if the p element is immediately followed by an address, article, aside, blockquote, datagrid, dialog, dir, div, dl, fieldset, footer, form, h1, h2, h3, h4, h5, h6, header, hr, menu, nav, ol, p, pre, section, table, or ul, element, or if there is no more content in the parent element."

[02:32:00.0000] <melvster>
zcorpan: thanks again, i should have read that first

[02:32:01.0000] <zcorpan>
no worries :)

[02:33:00.0000] <zcorpan>
though <p><article> has a bad back compat story

[02:34:00.0000] <zcorpan>
and <p><form> is buggy in some browsers

[02:34:01.0000] <zcorpan>
<p><hr> in ie too iirc

[02:34:02.0000] <zcorpan>
and <p><table>

[02:35:00.0000] <hsivonen>
which RFC defines the syntax for charset names?

[02:35:01.0000] <hsivonen>
/me should keep better notes in source comments

[02:35:02.0000] <zcorpan>
<p>x<hr> is different in ie

[02:39:00.0000] <hsivonen>
http://tools.ietf.org/html/rfc2978 apparently

[02:51:00.0000] <zcorpan>
hmm, the bail-out list could be different for mathml and svg so that <svg><font> is allowed but <math><font> not

[02:53:00.0000] <hsivonen>
Hixie: is it safe to refer to http://www.whatwg.org/style/specification from elsewhere? is that URI expected to point to a "Working Draft" style?

[02:53:01.0000] <hsivonen>
Hixie: or should I copy the style sheet?

[02:53:02.0000] <hsivonen>
(I'm assuming the style sheet is covered by the WHATWG document license)

[02:54:00.0000] <zcorpan>
could also add <a>, <script> and <style> to the mathml list

[02:54:01.0000] <Hixie>
it's covered by whatever license you want

[02:54:02.0000] <Hixie>
i make no promises about not changing it

[02:54:03.0000] <Hixie>
it's not working draft vs any other kind of spec though

[02:55:00.0000] <Hixie>
iirc i have a class on the body element to decide the 'worker draft' banner

[02:55:01.0000] <zcorpan>
yep

[02:55:02.0000] <hsivonen>
Hixie: ok.

[02:55:03.0000] <zcorpan>
Hixie: what do you think about different bail-out lists (see above)?

[02:55:04.0000] <hsivonen>
(now that I think about it, I already saw zcorpan use the class on body)

[02:56:00.0000] <hsivonen>
zcorpan: one possibility is bailing out on font only if it has the kind of attributes presentational HTML has

[02:58:00.0000] <zcorpan>
hsivonen: oh yep didn't think of that

[02:58:01.0000] <zcorpan>
not sure which is better

[02:59:00.0000] <Hixie>
zcorpan: i'm not yet convinced we can add <svg><font>, need to study that further

[03:00:00.0000] <hsivonen>
Hixie: we could also require a <defs> context

[03:00:01.0000] <Hixie>
that would be profiling svg in a more weird way

[03:00:02.0000] <Hixie>
it's one thing to say "you can't use font"

[03:00:03.0000] <Hixie>
it's another to say "you can use font in these specific cases..."

[03:01:00.0000] <hsivonen>
Isn't <font> in practice always used as a child of <defs> in non-contrived SVG?

[03:03:00.0000] <zcorpan>
Hixie: doesn't not bailing on <script> break some pages with <math><script> ?

[03:03:01.0000] <zcorpan>
(or style/a)

[03:04:00.0000] <hsivonen>
Hixie: could you please add ids to the paragraphs starting with "In the foo state," and giving the conformance reqs for the shape attribute states for image map area?

[03:04:01.0000] <hsivonen>
s/shape/coords/

[03:04:02.0000] <Hixie>
hsivonen: not to my knowledge, why would you bother with the <defs>?

[03:04:03.0000] <Hixie>
if you want changes, send mail

[03:05:00.0000] <Hixie>
i'm not near the editor right now

[03:05:01.0000] <hsivonen>
Hixie: I'm just generalizing from the stuff Philip` found in Wikipedia

[03:05:02.0000] <hsivonen>
Hixie: ok. I'll send mail

[03:05:03.0000] <Hixie>
thx

[03:06:00.0000] <Hixie>
i think basing it on attributes would be better than on context, given that the whole point is to bail if someone does something stupid

[03:06:01.0000] <Hixie>
they're more likely to put an html font after a bunch of random svg copied and pasted, than to put svg font attributes on an html font element

[03:07:00.0000] <zcorpan>
Hixie: makes sense

[03:07:01.0000] <Hixie>
oh btw someone sent me mail about a major bug in the parser that i need to fix

[03:07:02.0000] <Hixie>
basically the generic cdata element parsing algorithm thingy totally doesn't work with document.write()

[03:08:00.0000] <Hixie>
consider <script>document.write("<style>a");document.write("b</style>")</script>

[03:08:01.0000] <Hixie>
(or worse, nested <script> elements)

[03:08:02.0000] <hsivonen>
/me fires up his GWT test harness...

[03:08:03.0000] <Hixie>
so i'm going to split the cdata algorithm into its own state

[03:09:00.0000] <Hixie>
instead of being a tokeniser pull, bring it in line with everything else (tokeniser push)

[03:09:01.0000] <zcorpan>
Hixie: why doesn't that work?

[03:09:02.0000] <Hixie>
is there anything else that pulls from the tokeniser at this point?

[03:09:03.0000] <hsivonen>
Hixie: no. (and I've already implemented everything as push)

[03:10:00.0000] <Hixie>
zcorpan: because at the end of the document.write() input stream the tokeniser is stopped and the tree construction stage is exitted, so you lose the fact that you're in the middle of a pulling step

[03:10:01.0000] <zcorpan>
Hixie: ah

[03:10:02.0000] <Hixie>
hsivonen: did you implement the generic cdata thing as having a new variable to preserve the source state?

[03:10:03.0000] <Hixie>
hsivonen: or?

[03:11:00.0000] <hsivonen>
Hixie: I implemented it as a flag in the tree builder

[03:11:01.0000] <hsivonen>
Hixie: and it appears that your example above breaks it :-(

[03:11:02.0000] <Hixie>
ah, somewhat like the earlier split of insertion modes vs states?

[03:11:03.0000] <Hixie>
oh?

[03:12:00.0000] <hsivonen>
at least when using WebKit as the engine in GWT, "b" never ends up inside the style element

[03:12:01.0000] <hsivonen>
it's completely lost somewhere

[03:12:02.0000] <Hixie>
fun

[03:12:03.0000] <Hixie>
if you replace style with script the problem becomes worse

[03:12:04.0000] <Hixie>
because the element is added with the end tag, not the start tag

[03:12:05.0000] <Hixie>
so you end up losing the element altogether in a naive push implementation

[03:14:00.0000] <Philip`>
<script>document.write('<style></sty');document.write('le>')</script> - how would that work with the tokeniser upon seeing the "</", since the "[if] the next few characters do not match the tag name of the last start tag token emitted" condition wouldn't make sense at that point?

[03:14:01.0000] <hsivonen>
I'm trying to review what exactl I'm doing but Eclipse beachballs on me

[03:14:02.0000] <Philip`>
Wait, do I mean <style>?

[03:15:00.0000] <Philip`>
Oh, yes, I think I do

[03:15:01.0000] <Hixie>
Philip`: yeah, i noticed the same problem with the <![CDATA and <!DOCTYPE tokenising

[03:16:00.0000] <Hixie>
Philip`: but that's easy to fix, you just say that the tokeniser stops when it's missing data to resolve an ambiguous state and wave your hand and move on

[03:16:01.0000] <Hixie>
Philip`: "implementation detail"

[03:16:02.0000] <hsivonen>
Hixie: here's what I do:

[03:16:03.0000] <hsivonen>
1) Everything is tokenizer push

[03:16:04.0000] <hsivonen>
2) tree builder has a variable called cdataOrRcdataTimesToPop

[03:16:05.0000] <Philip`>
Hixie: Can't you do the same hand-waving in the generic CDATA whatnots, then?

[03:17:00.0000] <Hixie>
Philip`: no, because when you abort that tree construction stage you return the previous one, which is in the middle of doing the cdata processing

[03:17:01.0000] <hsivonen>
3) If the spec calls for pushing the head element on stack first, cdataOrRcdataTimesToPop is set to 2. else, it is set to 1

[03:17:02.0000] <hsivonen>
4) endTag pops cdataOrRcdataTimesToPop times

[03:18:00.0000] <hsivonen>
and zeros cdataOrRcdataTimesToPop

[03:18:01.0000] <Philip`>
Ah

[03:18:02.0000] <Hixie>
ah

[03:18:03.0000] <Hixie>
that won't work :-)

[03:18:04.0000] <Hixie>
but makes sense given the spec today

[03:18:05.0000] <hsivonen>
5) if cdataOrRcdataTimesToPop > 0, characters just accumulate and returns early without inspecting insertion mode

[03:19:00.0000] <Hixie>
anyway dunno when i'll fix this, i expect it's in the coming few weeks though

[03:19:01.0000] <hsivonen>
It bothers me that I don't know what happened to "b" in the GWT case

[03:19:02.0000] <Hixie>
i've been avoiding the parser folder because i've been hoping the svgwg will fix the issues you, takkaria, and myself raised with their proposal

[03:20:00.0000] <Hixie>
but i guess eventually i'll go in and deal with it

[03:21:00.0000] <hsivonen>
Hixie: well, both takkaria and I said we'd prefer your/zcorpan's suggestion

[03:21:01.0000] <Hixie>
apparently <datagrid> is the next target

[03:21:02.0000] <Hixie>
hsivonen: zcorpan claims the svgwg proposal is as much his as the current spec's :-P

[03:23:00.0000] <Hixie>
ok bed time nn

[05:59:00.0000] <hsivonen>
Does HTML5 define where LWS is really allowed in the http://tools.ietf.org/html/rfc2045#section-5.1 syntax for Web purposes?

[06:33:00.0000] <gsnedders>
hsivonen: no

[06:35:00.0000] <hsivonen>
gsnedders: OK. thanks.

[06:35:01.0000] <hsivonen>
gsnedders: do you happen to document it for HTTP?

[06:35:02.0000] <gsnedders>
(and I don't know either)

[06:35:03.0000] <hsivonen>
it appears I have made up a definition then

[06:35:04.0000] <hsivonen>
I'll just write that down in my spec

[06:35:05.0000] <gsnedders>
I'm still (occasionally) working on the overall syntax of the entire HTTP structure

[06:35:06.0000] <gsnedders>
Not got to anything so exact as parsing actual headers :P

[06:48:00.0000] <hsivonen>
http://hsivonen.iki.fi/html5-datatypes/ comments welcome

[06:50:00.0000] <Philip`>
hsivonen: s/hecking/checking/

[06:51:00.0000] <hsivonen>
Philip`: thanks

[06:55:00.0000] <hsivonen>
selittäkääpä, miten kongressihenkilöt voivat istua tuntikaupalla hearingissa käymättä vessassa

[06:59:00.0000] <zcorpan>
is this valid? <img usemap=# src=x><map name>

[07:01:00.0000] <hsivonen>
zcorpan: no, the name attribute must be non-empty

[07:01:01.0000] <zcorpan>
hsivonen: ah

[07:01:02.0000] <hsivonen>
zcorpan: but according to the datatype lib, usemap=# is valid (checking referential integrity happens elsewhere)

[07:02:00.0000] <zcorpan>
ok

[07:18:00.0000] <hsivonen>
hendry: did you get an instance of the CSS validator running? If yes, under which servlet container?

[07:38:00.0000] <zcorpan>
hmm, why does name allow whitespace

[07:39:00.0000] <hsivonen>
zcorpan: in validator or in spec?

[07:39:01.0000] <zcorpan>
hsivonen: in spec

[07:39:02.0000] <zcorpan>
at leat if id is not present

[07:43:00.0000] <hsivonen>
I've now postponed rel checking well over a year.

[07:43:01.0000] <hsivonen>
I wonder if the rel stuff is still at risk...

[07:44:00.0000] <hsivonen>
at least the registry was discussed relatively recently on public-html

[07:59:00.0000] <Lachy>
I finally found some time to review the SVG WG's proposal. Personally, I'm not particularly fond of it

[08:01:00.0000] <Lachy>
there isn't really sufficient justification for some of the requirements it tries to address, beyond keeping it theoretically-pure-well-formed XML

[08:07:00.0000] <zcorpan>
should we add alt to embed? apparently opera supports it

[08:12:00.0000] <hsivonen>
zcorpan: would it be rendered when the plugin isn't installed?

[08:12:01.0000] <zcorpan>
hsivonen: yes

[08:15:00.0000] <hsivonen>
hmm. Flash is supposed to be accessible in itself. Video plug-ins are supposed to get superceded by <video>. Apart from Silverlight, newer plugins tend to be non-rendered and provide JS APIs

[08:16:00.0000] <hsivonen>
like Gears or the Garmin plugin for integrating GPS devices

[08:17:00.0000] <hsivonen>
it seems to me that the use case would be customizing the "Boohoo. Go install a plugin." message that e.g. Firefox generates as UI.

[08:18:00.0000] <zcorpan>
i guess

[08:21:00.0000] <zcorpan>
hsivonen: s/strings match/strings that match/

[08:21:01.0000] <zcorpan>
hsivonen: might squeeze in a "the" in there too

[08:22:00.0000] <hsivonen>
zcorpan: fixed, thanks

[08:22:01.0000] <zcorpan>
hsivonen: what is xml-name used for?

[08:23:00.0000] <hsivonen>
zcorpan: it's used for XHTML 1.0 backports. it probably shouldn't be in the lib in theory, but putting it there is convenient for me

[08:23:01.0000] <zcorpan>
hsivonen: ok

[08:55:00.0000] <gsnedders>
/me wonders whether to do something that'll make him unpopular with many around here: serve XHTML as text/html

[08:57:00.0000] <gsnedders>
Actually, I can just do this in Ruby, and use a pre-existing HTML parser!

[08:57:01.0000] <gsnedders>
Yay!

[10:52:00.0000] <Philip`>
/me discovers that if he makes a Jabber client send namespace-ill-formed XML to a group chat, then ejabberd propagates it to all the other clients and they detect the error and disconnect

[10:53:00.0000] <Philip`>
and when they reconnect and rejoin the group, the server helpfully sends the past messages to the newly-joining clients, which breaks them again

[10:54:00.0000] <gsnedders>
Hahahaha.

[10:54:01.0000] <gsnedders>
Awesome.

[10:55:00.0000] <gsnedders>
I think something is wrong. Fx fails all of the HTTP parsing tests

[10:56:00.0000] <Philip`>
I'd be more concerned if it passed them all

[10:58:00.0000] <gsnedders>
Yes, but it doesn't even try running them.

[10:58:01.0000] <gsnedders>
Which is why it claims to fail them all.

[10:58:02.0000] <gsnedders>
expected_xhr.onreadystatechange is never hit :\

[10:59:00.0000] <gsnedders>
Interesting.

[10:59:01.0000] <gsnedders>
Opera has changed behaviour with HTTP/0.9

[11:00:00.0000] <gsnedders>
Got status code 0, expected 200

[11:00:01.0000] <gsnedders>
Got status text , expected OK

[11:01:00.0000] <takkaria>
/me chuckles at Philip` and his XML games

[11:01:01.0000] <Philip`>
(It works against individuals by sending normal messages too, but the server doesn't appear to resend them after the first time)

[11:02:00.0000] <jmb>
Philip`: that's pretty nasty :)

[11:04:00.0000] <gsnedders>
Why is onreadystatechange never called?

[11:16:00.0000] <gsnedders>
readyState is getting changed :\

[11:19:00.0000] <Philip`>
https://support.process-one.net/browse/EJAB-680

[11:19:01.0000] <takkaria>
Philip`: would you be able to give me some statistics on the number of pages which include CRs and NULs in attribute values?

[11:21:00.0000] <gsnedders>
Philip`: Also, could you see if you have any pages that start with "HTTP" case-insensitively but not case-sensitively?

[11:23:00.0000] <Philip`>
takkaria: Maybe - I guess it should be easy to modify hsivonen's tokeniser to detect that

[11:23:01.0000] <Philip`>
takkaria: Do you care how many times per page it occurs, or just how many pages it occurs >= 1 time on?

[11:23:02.0000] <takkaria>
Philip`: the latter

[11:23:03.0000] <Philip`>
gsnedders: By "pages", do you mean the body of the page (i.e. after parsing and stripping the HTTP headers)?

[11:24:00.0000] <gsnedders>
Philip`: No, I mean the entire response

[11:24:01.0000] <gsnedders>
(i.e., what the response-line begins with)

[11:24:02.0000] <Philip`>
gsnedders: In that case, no

[11:24:03.0000] <gsnedders>
or status-line, or whatever it's called

[11:24:04.0000] <Philip`>
gsnedders: since I didn't save the raw response bytes, only the parsed representation

[11:25:00.0000] <gsnedders>
Philip`: Ah.

[11:25:01.0000] <Philip`>
gsnedders: (since I couldn't see a way to make HttpClient return the raw response bytes)

[11:25:02.0000] <gsnedders>
Philip`: Write your own! :P

[11:25:03.0000] <Philip`>
gsnedders: My own HTTP client? I can't do that until someone's written a proper spec on how to write one :-p

[11:26:00.0000] <gsnedders>
Philip`: Oh, all I'm writing is how to parse the response/request. You don't need to do either of those :P

[11:50:00.0000] <Philip`>
takkaria: It looks like about 10% have \r in attribute values somewhere, and about 0% have \0

[11:50:01.0000] <Philip`>
and of those 0%, most are JPEG and PDF files

[11:51:00.0000] <Philip`>
Wait a minute, I'll change it to only look at text/html...

[11:53:00.0000] <Philip`>
http://www.slovanova.sk/ - aha, actual HTML with a \0

[11:55:00.0000] <Philip`>
/me waits ten minutes while it searches through all the other files

[11:57:00.0000] <takkaria>
10% is an interestingly high value

[12:09:00.0000] <Philip`>
takkaria: From something like 126989 text/html pages in total:

[12:09:01.0000] <Philip`>
     16 \0 in attribute value

[12:09:02.0000] <Philip`>
  10622 \r in attribute value

[12:09:03.0000] <Philip`>
     47 \r\n in attribute value

[12:10:00.0000] <Philip`>
(Those "\r\n" are slightly bogus - it should have aborted after finding the first "\r", but I didn't detect \rs that came after entities and got unconsumed, so it didn't notice until it got to the \n)

[12:12:00.0000] <Philip`>
takkaria: http://philip.html5.org/data/attr-chars.txt lists them all

[14:25:00.0000] <weinig>
Hixie: ping

[14:40:00.0000] <gsnedders>
/me still needs a decent idea for his computing project for this year for school :\

[14:48:00.0000] <gsnedders>
40 hours project, with 20 hours for impl.

[14:51:00.0000] <Philip`>
A day of coding? That's not much :-p

[14:51:01.0000] <gsnedders>
You aren't expected to do it in one day :P

[14:52:00.0000] <Philip`>
That doesn't demonstrate much dedication

[14:52:01.0000] <gsnedders>
You're only expected to have an hour of class time per day five days a week

[14:53:00.0000] <gsnedders>
Of course, I'm doing it out of class, so I have none :P

[15:48:00.0000] <gsnedders>
/me would like to do something in Haskell or C/C++

[15:48:01.0000] <gsnedders>
But I can't decide what :P

[15:49:00.0000] <gsnedders>
Anybody got any suggestions?

[15:53:00.0000] <jgraham>
gsnedders: Well lerning Haskell might be a 20 hour project on its own. Not much to hand in though

[15:53:01.0000] <gsnedders>
jgraham: That's problematic, especially when it counts for 40% of the final grade.

[15:54:00.0000] <jgraham>
You could implement a domain-specific language for something

[15:54:01.0000] <gsnedders>
Writing an html5 parser is too big, probably

[15:54:02.0000] <jgraham>
gsnedders: an html5 would probably take longer, yes

[15:55:00.0000] <jgraham>
http://effbot.org/zone/simple-top-down-parsing.htm seems like a nice article about language parsing

[15:55:01.0000] <jgraham>
s/an html5/an html5 parser/

[15:56:00.0000] <gsnedders>
jgraham: Yeah, writing HTML 5 would take a while :P

[15:56:01.0000] <jgraham>
Well if you manage it in 20 hours Hixie will look a bit silly :)

[15:58:00.0000] <gsnedders>
hmmm.

[16:09:00.0000] <gsnedders>
I could do something based on trying to detect spam

[16:12:00.0000] <jgraham>
gsnedders: I have a problem that I actually would like a solution to but don't currently have time to implement

[16:12:01.0000] <gsnedders>
jgraham: What problem? :P

[16:15:00.0000] <jgraham>
Many scientists use the arXiv prepint servers to keep up to date with current research. The basically provide a daily list of new preprints ordered by submission time. They are broadly categorised but only in astrophysics / high energy physics / computer science / etc. much broader than the expertise of most readers

[16:15:01.0000] <jgraham>
The time ordering creates two problems. One is that it is hard to find things that you are interested in, especially if they appear down the list somewhere

[16:16:00.0000] <jgraham>
The second is that papers appearing near the top of the listings tend to be noticed more and get more citations --- this is a measured effect

[16:17:00.0000] <jgraham>
What i want is an interface to the preprint server where the day's listings are ordered according to my personal reading habits

[16:17:01.0000] <jgraham>
These would be deermied automatically using some sort of machine learing algorithm

[16:19:00.0000] <jgraham>
Basically the way I imagine it working is that when you click on a paper the keywords from that paper (authors, title, abstract text) are added to some weighting which increases the probability of papers with similar authors, titles or abstracts appearing at the top

[16:20:00.0000] <jgraham>
This is basically just a spam classificaion problem except that you're trying to pick out the most useful items and present them first

[16:20:01.0000] <jgraham>
Rather than discard the least useful items

[16:20:02.0000] <Hixie>
weinig|kaphine: pong

[16:21:00.0000] <jgraham>
gsnedders: I don't know how easy writing the actual machine learning bit would be but you might be able to find library code for that

[16:22:00.0000] <jgraham>
In fact I know you can because I looked when I first hough about this problem

[16:22:01.0000] <weinig>
hey Hixie 

[16:22:02.0000] <gsnedders>
jgraham: It'd be nice to do that with feeds, to do it in more generic form

[16:23:00.0000] <weinig>
Hixie: I as curious if you were considering specifying the rules for HTML entity error recovery at some point in HTML5?

[16:23:01.0000] <weinig>
s/as/am/

[16:23:02.0000] <jgraham>
gsnedders: Sure, although that's not the problem that I'm interestedd in :)

[16:24:00.0000] <gsnedders>
jgraham: The logic used to detect whether an article is of interest or not is the same, though

[16:24:01.0000] <Hixie>
weinig: HTML entity error recovery?

[16:24:02.0000] <gsnedders>
And that, I expect, it the hard part.

[16:24:03.0000] <weinig>
Hixie: some thing akin to the issue described in https://bugs.webkit.org/show_bug.cgi?id=4948

[16:25:00.0000] <jgraham>
gsnedders: Yes, I agree that it's essentially the same problem

[16:25:01.0000] <Hixie>
weinig: that's all already defined

[16:25:02.0000] <Hixie>
weinig: note that it differs from attributes and in body text (the spec handles that too)

[16:25:03.0000] <weinig>
Hixie: it is?  great!

[16:25:04.0000] <gsnedders>
jgraham: It's just a matter of plugging in the data source

[16:25:05.0000] <weinig>
couldn't find it in the text

[16:25:06.0000] <weinig>
will look again

[16:26:00.0000] <Hixie>
weinig: just start from the data state in the tokeniser (or the attribute value state in the tokeniser)

[16:26:01.0000] <Hixie>
weinig: and pretend you are parsing each of those cases

[16:26:02.0000] <weinig>
/me nods

[16:26:03.0000] <franksalim>
gsnedders, jgraham: you would just need to generate a feed from arXiv if there isn't one already

[16:26:04.0000] <Hixie>
should all be hyperlinked properly

[16:27:00.0000] <jgraham>
franksalim: I'm pretty sure there is 

[16:30:00.0000] <jgraham>
Although curiously it seems to be different to the web page


2008-07-29
[18:44:00.0000] <Lachy>
Stargate Continuum is awesome. One of the best films I've seen in a while. :-)

[18:45:00.0000] <Hixie>
hope my dvd arrives soon

[18:45:01.0000] <Lachy>
I just downloaded it. But I will definitely buy the DVD as soon as it's realeased in Australia

[18:46:00.0000] <Hixie>
my dvd is in kentucky apparently

[18:47:00.0000] <Hixie>
i got spoilt in several ways abotu continuum listening to the atlantis season 4 commentaries

[18:47:01.0000] <Hixie>
i know some of hte characters in it, where it was show, and i've seen some of the sets

[18:47:02.0000] <Hixie>
where it was shot, even

[18:48:00.0000] <Lachy>
I knew nothing about it before seeing it. I'd only seen a very short teaser trailer for it on my season 3 DVDs

[18:49:00.0000] <Lachy>
I've got about 20 minutes of it left to watch

[18:49:01.0000] <Hixie>
heh

[18:49:02.0000] <Hixie>
you are online while watching stargate!

[18:49:03.0000] <Hixie>
terrible

[19:04:00.0000] <Lachy>
it's over now. Great ending.

[19:19:00.0000] <takkaria>
weinig: I have a table of what HTML5 specifies here if that's useful

[19:19:01.0000] <takkaria>
weinig: I mean, for each of the cases attached to that bug

[19:21:00.0000] <takkaria>
weinig: WebKit seems closer to HTML5 than any of the other browsers already

[19:22:00.0000] <takkaria>
weinig: no, that's a lie; I thought the "Current" column would be WebKit, turns out it's just Firefox 3

[19:23:00.0000] <takkaria>
(since I'm using ff3)

[00:35:00.0000] <hsivonen>
Hixie: is this thread on your radar: http://lists.w3.org/Archives/Public/wai-xtech/2008Jul/0114.html ?

[01:10:00.0000] <hsivonen>
/me doesn't like it that some W3C specs don't come as a single HTML file

[03:34:00.0000] <Hixie>
hsivonen: anything in particular?

[03:36:00.0000] <hsivonen>
Hixie: in the wai-xtech thread? the possibility of introducing a title-like attribute like aria-name that wouldn't be shown as a tooltip

[03:36:01.0000] <Hixie>
i hope they have fun with that

[03:37:00.0000] <Hixie>
http://www.w3.org/2008/07/24-tagmem-minutes.html#item03 is funny -- they cite html5 as being "new information"

[03:38:00.0000] <Hixie>
nevermind that html5 is just describing the status quo

[03:38:01.0000] <hsivonen>
in other news, I've learned that the MathML 2.0 allows xlink:href but the DTD allows both xlink:href and xlink:type

[03:38:02.0000] <hsivonen>
but neither explicitly allows the rest of XLink

[03:38:03.0000] <Hixie>
xlink:href only has meaning if there is an xlink:type

[03:39:00.0000] <hsivonen>
Hixie: according to DevMo, XLink 1.1 defaults to xlink:type=simple if absent

[03:39:01.0000] <Hixie>
devmo is describing mozilla's implementation

[03:39:02.0000] <Hixie>
not the spec's requirements

[03:39:03.0000] <hsivonen>
it purports to recount XLink 1.1 reqs

[03:39:04.0000] <hsivonen>
/me goes see the actual spec

[03:40:00.0000] <hsivonen>
Hixie: http://www.w3.org/TR/xlink11/#markup-reqs point #2

[03:41:00.0000] <hsivonen>
(aside: point #4 over there seems weird)

[03:41:01.0000] <Hixie>
ah, they changed that in 1.1

[03:41:02.0000] <hsivonen>
also, it appears that MathML 2.0 does not allow xml:space

[03:41:03.0000] <Hixie>
oh, 1.1 isn't out yet

[03:41:04.0000] <Hixie>
that's still a wd

[03:41:05.0000] <Hixie>
that's why i didn't know about it

[03:42:00.0000] <hsivonen>
oh. right

[03:42:01.0000] <hsivonen>
Still, I'll pretend that xlink:type=simple is a talisman that can be omitted

[03:43:00.0000] <hsivonen>
more stuff to document about how Validator.nu deviates from RECs in order to work like users expect

[03:43:01.0000] <hsivonen>
and to implement first

[03:44:00.0000] <Hixie>
if you're going to ignore the xlink spec, i recommend ignoring it completely

[03:45:00.0000] <hsivonen>
Hixie: I've got a bug report that Validator.nu doesn't allow xlink:type on MathML elements

[03:45:01.0000] <Hixie>
RESOLVED INVALID

[03:45:02.0000] <hsivonen>
thereby giving unhelpful messages on content that contains legacy bits

[03:46:00.0000] <Hixie>
or RESOLVED FINDABETTERSPEC

[03:46:01.0000] <hsivonen>
Hixie: I'm going to allow it, but only with the value "simple"

[03:46:02.0000] <hsivonen>
Hixie: for better or worse, Gecko supports it, so it has some real-world relevance

[03:51:00.0000] <Hixie>
https://bugzilla.mozilla.org/show_bug.cgi?id=332773

[03:56:00.0000] <hsivonen>
hmm. I don't see XLink working in Firefox 3

[03:58:00.0000] <hsivonen>
Hixie: looks like XLink regressed between Firefox 2 and 3.

[03:58:01.0000] <Hixie>
aww, how unfortunate.

[03:58:02.0000] <hsivonen>
Hixie: seems unintentional since you bug is NEW

[03:59:00.0000] <Hixie>
my bug could be a dupe that the people "fixing" xlink didn't know about

[04:00:00.0000] <hsivonen>
Hixie: how would you propose linkifying bits of a MathML formula?

[04:00:01.0000] <Hixie>
<a href=""></a>

[04:01:00.0000] <Hixie>
if you really think xlink is dead in ff3 btw, please do comment on that bug to that effect

[04:01:01.0000] <Hixie>
i don't seem to have any tests for it

[04:01:02.0000] <Hixie>
or i would comment myself

[04:01:03.0000] <hsivonen>
OK.

[04:15:00.0000] <Hixie>
/me sends bad news to the htmlwg (well, bad news for some!)

[04:15:01.0000] <hsivonen>
Hixie: I added a comment to the bug.

[04:15:02.0000] <Hixie>
thanks

[04:20:00.0000] <hsivonen>
Hixie: are the "careful studies" available in public?

[04:20:01.0000] <Hixie>
i'm sure many are, spread over e-mails of many years

[04:26:00.0000] <Hixie>
i'm amused as to how much of the latest tag minutes talk about html5

[04:26:01.0000] <Hixie>
i'm more amused by their characterisation of html5 as new information though

[04:26:02.0000] <Hixie>
it's like they never looked at the web when forming their original opinions

[04:38:00.0000] <gsnedders>
Hixie: linky?

[04:38:01.0000] <hsivonen>
gsnedders: http://www.w3.org/2008/07/24-tagmem-minutes.html#item03

[04:39:00.0000] <Hixie>
and 04

[04:41:00.0000] <hsivonen>
someone else is drawing comparisons with religious denominations: http://lists.w3.org/Archives/Public/www-tag/2008Jul/0141.html

[04:43:00.0000] <hsivonen>
and to me, 05 seems to be decentralized extensibility of URIs in action

[04:52:00.0000] <hsivonen>
/me doesn't like debugging Show Source

[05:00:00.0000] <hendry>
can anyone who knows better about DOM mutation events can please look over my test? http://static.webvm.net/loader-test.html

[05:19:00.0000] <Hixie>
i wonder if p. t. (webmaster) was trying to troll me

[05:19:01.0000] <Hixie>
and whether my response counts as being trolled or as trolling

[05:20:00.0000] <hsivonen>
Hixie: I think using the passive voice instead of 'we' would offend people less

[05:20:01.0000] <Hixie>
where would the fun be in that

[05:28:00.0000] <Hixie>
/me pokes hsivonen 

[05:29:00.0000] <Philip`>
When replying to emails in Gmail, why does it prefix the quoted message with a line "2008/7/29 Oliver Hunt <oliver⊙ac>:" and fail to insert any grammar? (Does this affect anyone except me?)

[05:31:00.0000] <gDashiva>
I get grammar

[05:31:01.0000] <gsnedders>
Philip`: What language? en-gb or en?

[05:32:00.0000] <gsnedders>
Why on earth are there bagpipes playing in the heavy mist in the park below my house?

[05:33:00.0000] <gsnedders>
No, it's on the other side of my house, someone practising in their drive

[05:33:01.0000] <gsnedders>
(Which is somewhat rational as it is an outdoor instrument, and completely deafening inside)

[05:33:02.0000] <gDashiva>
(and completely deafening outside as well)

[05:34:00.0000] <gsnedders>
gDashiva: No, only nearly completely deafening

[05:34:01.0000] <Philip`>
gsnedders: "English (UK)"

[05:34:02.0000] <Philip`>
(and using Gmail 2.0 or whatever the newish version is called)

[05:34:03.0000] <gsnedders>
Philip`: I've seen that have weird things before, thus I just use English :P

[05:35:00.0000] <hsivonen>
source highlighting is hard.

[05:36:00.0000] <gsnedders>
/me turns his music up loud to drown out the bagpipes

[05:36:01.0000] <Hixie>
damnit, both hsivonen and myself fell into the trap of replying to sam

[05:36:02.0000] <gsnedders>
Now, can I be bothered to cook my own lunch?

[05:36:03.0000] <Hixie>
why do i fall into that trap every time

[05:36:04.0000] <Hixie>
bah i'm going to bed

[05:36:05.0000] <Hixie>
nn

[05:37:00.0000] <Lachy>
gsnedders, is the person playing the bagpipes in or out of tune?

[05:37:01.0000] <gsnedders>
Hixie: n00b

[05:37:02.0000] <gsnedders>
Lachy: mostly in tune, but squeaking a bit

[05:37:03.0000] <Lachy>
bagpipes always sound squeeky, so that's normal :-)

[05:37:04.0000] <gsnedders>
Lachy: Not when played well :)

[05:37:05.0000] <gsnedders>
(It's just very hard to)

[05:38:00.0000] <Lachy>
gsnedders, you're assuming it's possible to play them well.

[05:38:01.0000] <gsnedders>
Lachy: I have friends who can :)

[05:38:02.0000] <gsnedders>
My school has a reputable pipe band

[05:38:03.0000] <hsivonen>
I so wish CRLF didn't exist

[05:39:00.0000] <Lachy>
hsivonen, what problems is it causing?

[05:39:01.0000] <hsivonen>
Lachy: it makes tracking source location harder

[05:40:00.0000] <hsivonen>
Lachy: I blame CRLF for the source location bug zcorpan found when validating forums.whatwg.org

[05:40:01.0000] <Lachy>
why? If your input stream processor normalises all CR and CRLF to LF, and then reports based on line numbers and character positions within the line, what's the problem?

[05:41:00.0000] <hsivonen>
Lachy: having a separate input stream processor is inefficient

[05:41:01.0000] <hsivonen>
Lachy: can't have that

[05:42:00.0000] <Lachy>
why would you need a separate processor?

[05:43:00.0000] <Lachy>
if the input goes through one input stream processor, and the output of that is used by everything else as needed, you only need one, and there's no problem

[05:43:01.0000] <Lachy>
I assume that would be how you have it?

[05:43:02.0000] <hsivonen>
Lachy: that's not how I have it

[05:43:03.0000] <Lachy>
ok

[05:43:04.0000] <hsivonen>
to allow efficient buffering, the additional layer of input stream preprocessing is eliminated

[05:44:00.0000] <Lachy>
ok

[05:44:01.0000] <hsivonen>
instead, the "preprocessing" happens in the tokenizer buffer

[05:45:00.0000] <hsivonen>
the tokenizer turns the CR into an LF in place. then it return to the driver signaling that it saw a CR

[05:45:01.0000] <hsivonen>
the driver checks if the next character is an LF and if it is, adjust buffer start position before re-entering the tokenizer

[05:46:00.0000] <hsivonen>
this way, the data isn't copied or moved in the buffer

[05:47:00.0000] <hsivonen>
also, having a real stream preprocessor could only work a char at a time, because document.write() writes to the unpreprocessed stream

[05:48:00.0000] <hsivonen>
anyway, CRLF really, really sucks

[05:48:01.0000] <hsivonen>
one of those things that probably seemed really simple at first

[05:50:00.0000] <Lachy>
yep. So we need to reinvent ASCII using only LF, and ditching many of the other useless control codes while we're at it.

[05:51:00.0000] <gDashiva>
ASCV

[05:51:01.0000] <Lachy>
?

[05:51:02.0000] <gDashiva>
5 > 2

[05:51:03.0000] <gsnedders>
?

[05:51:04.0000] <hsivonen>
:-) 

[05:52:00.0000] <gsnedders>
(I know where that comes from, but where the relevance to ASCV, and what is ASCV?)

[05:52:01.0000] <gDashiva>
II = 2, V = 5

[05:52:02.0000] <gsnedders>
ah.

[05:52:03.0000] <gsnedders>
Duh.

[05:52:04.0000] <Lachy>
heh

[05:53:00.0000] <gsnedders>
5 > *, * ∈ ℝ, * ≠ 5.

[05:55:00.0000] <hsivonen>
the things that annoy me the most as a parser writer are CRLF and xmlns attributes

[05:57:00.0000] <Philip`>
The things that would annoy me most would be users

[05:58:00.0000] <gDashiva>
Warning: Your document contains CRLF, which makes the validator sad.

[05:58:01.0000] <Philip`>
Hmm, it seems we don't have consensus on whether consensus is overrated

[05:59:00.0000] <gsnedders>
Wow. 5 > 2 is over a year old.

[05:59:01.0000] <Lachy>
I wish we could make CRLF non-conforming

[05:59:02.0000] <Lachy>
screw the windows users who don't know how to configure their editors correctly.

[06:00:00.0000] <gsnedders>
Screw Windows.

[06:00:01.0000] <gsnedders>
:P

[06:00:02.0000] <Philip`>
gsnedders: I think mathematicians have know that for somewhat longer than a year

[06:00:03.0000] <gsnedders>
Philip`: Well, http://five-gt-two.spreadshirt.com/us/US/Shop/ is

[06:00:04.0000] <Lachy>
and especially Notepad for *still* not supporting LF on its own

[06:00:05.0000] <Lachy>
did anyone buy that shirt?

[06:01:00.0000] <gsnedders>
I know some people did. I never did.

[06:01:01.0000] <Philip`>
Lachy: About 10% of some set of pages have \r in attribute values (not even looking at any other characters in the page), so you'd make quite a large fraction of currently-valid pages become invalid

[06:01:02.0000] <gsnedders>
Lachy: Someone commented that they were the person with the 5 > 2 shirt at some µf meeting

[06:02:00.0000] <Lachy>
we should make a real WHATWG or HTML5 shirt that actually looks good

[06:03:00.0000] <Lachy>
a nice polo shirt with the WHATWG's ?⃝ logo on it.

[06:03:01.0000] <gDashiva>
Didn't someone suggest a WHATWF, Mate? shirt once?

[06:03:02.0000] <gDashiva>
*TF

[06:05:00.0000] <Hixie>
/me mumbles something about wishing p. t. (webmaster) would stop threatening him and actually ask for him to step down already

[06:05:01.0000] <Hixie>
all this posturing is getting tiring

[06:06:00.0000] <Philip`>
Has he not asked that already?

[06:06:01.0000] <gsnedders>
He certainly has.

[06:06:02.0000] <Hixie>
has he?

[06:07:00.0000] <Philip`>
/me can't remember

[06:07:01.0000] <Lachy>
Hixie, would you step down if asked?

[06:07:02.0000] <Hixie>
i would love to step down as htmlwg editor

[06:07:03.0000] <Philip`>
Asked by whom?

[06:07:04.0000] <Lachy>
anyone

[06:08:00.0000] <hsivonen>
Lachy: well, stepping down because of RB or PT (webmaster) would suck

[06:08:01.0000] <Lachy>
Hixie, I assume you would remain as the WHATWG's editor though

[06:08:02.0000] <Hixie>
being able to just go back to the whatwg and not have to deal with the nutjobs in the htmlwg would make my year

[06:08:03.0000] <Lachy>
LOL

[06:08:04.0000] <gsnedders>
Hixie: What was this about wanting to avoid the specs diverging?

[06:09:00.0000] <Hixie>
i always said the whatwg would always be identical to or a superset of the htmlwg's spec

[06:09:01.0000] <Lachy>
keeping the whatwg spec a superset of the htmlwg spec could work in theory, unless the htmlwg spec does something totally crazy which is ignored by implementers

[06:09:02.0000] <Hixie>
(and that i'd diverge if the htmlwg made stupid decisions)

[06:09:03.0000] <gsnedders>
Which will happen.

[06:10:00.0000] <Hixie>
anyway i really should sleep

[06:10:01.0000] <gsnedders>
Hixie: Sleep is for losers.

[06:12:00.0000] <Hixie>
i'm responding to what might well be trolls now, so i really am a loser at this point :-)

[06:19:00.0000] <gsnedders>
/me concludes he really can't be bothered to cook lunch, and heads into town

[06:42:00.0000] <hsivonen>
/me likes http://www.cuil.com/search?q=doctype

[06:44:00.0000] <hsivonen>
http://www.cuil.com/search?q=html5+validator isn't so good

[06:44:01.0000] <hsivonen>
and the image choices are a bit weird

[06:58:00.0000] <Lachy>
http://www.mikeonads.com/2008/07/13/using-your-browser-url-history-estimate-gender/

[06:59:00.0000] <Lachy>
http://www.cuil.com/search?q=Lachy&sl=long is not so good either, but http://www.cuil.com/search?q=Lachlan%20Hunt&sl=long is

[07:00:00.0000] <Lachy>
cuil doesn't turn into a verb as well as google does. Saying I just cuiled myself sounds weird.

[07:03:00.0000] <Philip`>
I don't even know how to pronounce Cuil

[07:20:00.0000] <Lachy>
Philip`, according the slashdot article I read about it yesterday, it's pronounced "cool"

[07:21:00.0000] <gsnedders>
/me returns from getting lunch in town

[07:21:01.0000] <Lachy>
http://tech.slashdot.org/article.pl?sid=08/07/28/068211&from=rss

[07:23:00.0000] <Philip`>
Lachy: That sounds like a fairly stupid name

[07:23:01.0000] <Philip`>
It's not even trying to disguise that it's trying to appear cool, and therefore it fails to be so

[07:24:00.0000] <Philip`>
(There's nothing less cool than trying hard to be cool)

[07:24:01.0000] <hsivonen>
/me wonders if Cuil is going to be successful in Frech-language locales

[07:24:02.0000] <hsivonen>
French

[07:25:00.0000] <gsnedders>
Heh.

[07:25:01.0000] <gsnedders>
I never realised what Hixie said earlier today: the HTML 5 timetable is longer than how long the web has so long existed.

[07:26:00.0000] <Philip`>
How long will it be until that statement is no longer true?

[07:27:00.0000] <gsnedders>
Philip`: Depends on when you define the web as beginning

[07:27:01.0000] <gsnedders>
Philip`: And your speed.

[07:27:02.0000] <gsnedders>
It was all working in 1990

[07:27:03.0000] <Philip`>
I define it as whenever Wikipedia said it began

[07:27:04.0000] <gsnedders>
So 2009

[07:28:00.0000] <Lachy>
I'll try it out for a few weeks and see how it goes. I expect the results to be a little off since it's a new startup, but they could get better

[07:29:00.0000] <Philip`>
Oops, I was thinking of how long was left until the end of the HTML 5 timetable, versus how long the web has existed

[07:29:01.0000] <gsnedders>
Philip`: 2003 HTML 5 began

[07:29:02.0000] <Philip`>
in which case it'd be 2006

[07:30:00.0000] <gsnedders>
2003–2022 is 19 years

[07:30:01.0000] <Lachy>
since the HTML5 timetable is only a guesstimate, and the beginning of the web is difficult to define, it's an impossible question to answer

[07:30:02.0000] <Philip`>
s/it'/the point at which they're equal woul/

[07:33:00.0000] <Lachy>
hmm, the new MacBooks are rumoured to have glass touchpads. I wonder what the advantage of that will be, if it's true

[07:33:01.0000] <gsnedders>
Lachy: Ooooo! Shiny!

[07:34:00.0000] <Lachy>
maybe it's like an iPhone screen

[07:35:00.0000] <Philip`>
It'll make your greasy fingerprints show up much more clearly

[07:36:00.0000] <Philip`>
/me just wants Apple to make a touchpad driver for Windows that isn't pathetic

[07:36:01.0000] <Lachy>
I haven't tried the windows touchpad driver. What's wrong with it?

[07:36:02.0000] <hsivonen>
Philip`: Do you run Windows on a MacBook? 

[07:37:00.0000] <hsivonen>
Without virtualization?

[07:37:01.0000] <Philip`>
hsivonen: Yes

[07:37:02.0000] <Lachy>
with Bootcamp?

[07:37:03.0000] <hsivonen>
Philip`: that seems wrong.

[07:37:04.0000] <Philip`>
since I mainly use it for playing games

[07:37:05.0000] <Philip`>
Lachy: Yes

[07:37:06.0000] <Lachy>
do you dualboot OSX too?

[07:37:07.0000] <Lachy>
Philip`, the games for Mac OS X are better than windows

[07:38:00.0000] <Lachy>
compare Solitare XL on OSX with Microsoft Solitaire on Windows, for instance.

[07:38:01.0000] <Lachy>
:-)

[07:39:00.0000] <hsivonen>
zcorpan: I forgot to mention: I fixed the source location issue with forums.whatwg.org

[07:39:01.0000] <hsivonen>
zcorpan: thanks

[07:39:02.0000] <Philip`>
Lachy: The main problems are it doesn't do tap-to-click, and the drag-to-scroll thing is stupidly sensitive such that it's actually physically impossible to right click on a file in Explorer, because moving my hand to click the button makes the window scroll wildly up/down

[07:40:00.0000] <Philip`>
Lachy: It has OS X, but I pretty much never use it

[07:40:01.0000] <Lachy>
can't you adjust it in the settings?

[07:40:02.0000] <Philip`>
Lachy: I have Vista Business which doesn't come with any games at all, as far as I can see :-(

[07:41:00.0000] <Philip`>
but the internet solves that problem

[07:41:01.0000] <Lachy>
I would install windows under bootcamp to test it out, but I only have an XP upgrade disc available, and it needs a full version

[07:41:02.0000] <Philip`>
(Hooray for Steam)

[07:41:03.0000] <Philip`>
Lachy: There are no settings

[07:41:04.0000] <Lachy>
wtf? Not even in control panel?

[07:41:05.0000] <Philip`>
(except for the standard Windows ones, like how many lines you want to scroll per increment of the mouse wheel)

[07:41:06.0000] <Lachy>
oh, how sucky

[07:42:00.0000] <Lachy>
though Vista sucks in general. Why didn't you get XP?

[07:42:01.0000] <Philip`>
Mostly since I occasionally want to test software on Vista

[07:43:00.0000] <Philip`>
Also, it doesn't seem worse than XP; it's just different, and I've never used XP so that difference doesn't affect me :-)

[07:44:00.0000] <gsnedders>
XP is just 2000 with shiny graphics :)

[07:44:01.0000] <Lachy>
I used vista briefly on a friend's laptop, and it sucked so much, it was one of the reasons I switched to Mac

[07:44:02.0000] <Philip`>
but the Boot Camp drivers apparently have the same problems on XP

[07:44:03.0000] <gsnedders>
/me doesn't think Vista is that bad

[07:44:04.0000] <gsnedders>
But it doesn't have a native unix-like shell, so it sucks.

[07:44:05.0000] <Lachy>
/me notes that gsnedders' opinion is wrong

[07:45:00.0000] <gsnedders>
Lachy: Sure, that goes without saying, as it is my opinion.

[07:45:01.0000] <Philip`>
/me turned off the Aero stuff, but decided not to switch to the Classic theme since he really ought to get used to the modern world

[07:45:02.0000] <gsnedders>
Philip`: So what? Aero Basic?

[07:46:00.0000] <hsivonen>
/me thought Mac OS X and Ubuntu were the modern world

[07:46:01.0000] <Lachy>
maybe I should get a pirated version of vista to try it out briefly on my iMac and/or MBP

[07:46:02.0000] <Lachy>
or on my old crappy PC

[07:46:03.0000] <gsnedders>
Lachy: You can use it for up to 240 days without a license key or activation

[07:47:00.0000] <Philip`>
gsnedders: Yes, like http://upload.wikimedia.org/wikipedia/en/5/59/Windows_Vista_Basic.png

[07:47:01.0000] <Lachy>
ah, ok. In that case, I may be able to borrow my friend's vista disc to do it

[07:47:02.0000] <gsnedders>
I think it's 240 days at least

[07:47:03.0000] <gsnedders>
That's what it is for 2008 Server

[07:47:04.0000] <gsnedders>
It's at least 60

[07:47:05.0000] <Philip`>
except with the Classic start menu since I've got too used to that over the past decade

[07:49:00.0000] <gsnedders>
Lachy: Only 120 for Vista

[07:49:01.0000] <Lachy>
I had the Vista Ultimate release candidate, but at the time, I couldn't use it much at the time since I was missing some important drivers for my network card

[07:49:02.0000] <gsnedders>
Lachy: http://support.microsoft.com/kb/948472

[07:49:03.0000] <gsnedders>
Lachy: Same instructions work o Vista, just s/60/30/g and s/240/120/g

[07:50:00.0000] <Lachy>
wtf? Why are they giving instructions on how to do that? What's the point if one can just run that command every 59 days

[07:50:01.0000] <gsnedders>
Lachy: You can only do it three times

[07:50:02.0000] <Lachy>
oh

[07:51:00.0000] <gsnedders>
Lachy: But yeah, it is rather stupid. May as well have it that long to start with

[07:51:01.0000] <Lachy>
well, then you just reinstall

[07:51:02.0000] <gsnedders>
Exactly

[07:51:03.0000] <gsnedders>
It's stupid :P

[07:51:04.0000] <Philip`>
They should give away all their software for free - that'd solve all the problems

[07:51:05.0000] <Lachy>
XP had a 30 day no-activation period

[07:52:00.0000] <Lachy>
but activation is annoying. I got myself a corporate edition that doesn't require activation, even though I own a legit copy

[07:52:01.0000] <Philip`>
Why is it annoying to type in a few dozen characters once when you're installing your computer?

[07:53:00.0000] <Lachy>
because I had installed XP on a few different machines and upgraded a few times, so I had to call the help centre to activate it over the phone.

[07:53:01.0000] <Lachy>
since I bought my copy in 2001, I've had several machines since then

[07:55:00.0000] <Lachy>
and they were all custom built machines, so none of them came with XP preinstalled

[08:20:00.0000] <zcorpan>
"hundreds of test cases" -- http://www.w3.org/mid/488EE5BE.1030009⊙wo

[08:21:00.0000] <zcorpan>
seems underrated -- does svg really only have hundreds of test cases?

[08:21:01.0000] <hsivonen>
well, at least the HTML WG isn't the only WG with questions about evidence and accessibility

[08:24:00.0000] <Philip`>
The number of test cases seems fairly meaningless, since a test case could test a single aspect of a single feature or it could test hundreds

[08:25:00.0000] <zcorpan>
Philip`: the former is fare more common i'd think

[08:25:01.0000] <zcorpan>
s/fare/far/

[08:26:00.0000] <takkaria>
hundreds of test cases and thousands of pages of spec sounds like the wrong way round. :)

[08:26:01.0000] <hsivonen>
heh

[08:27:00.0000] <zcorpan>
hundreds of specs and thousands of pages of test cases?

[08:27:01.0000] <Philip`>
If I had to write dozens of lines of XML boilerplate for each test case then I'd try to write as few as possible and put as many feature tests as possible in each one :-)

[08:28:00.0000] <zcorpan>
Philip`: that's not what you did for the canvas testsuite :)

[08:28:01.0000] <zcorpan>
(for which i'm glad!)

[08:28:02.0000] <Philip`>
That's because I had no lines of XML boilerplate

[08:29:00.0000] <zcorpan>
does it matter if the boilerplate is XML or something else?

[08:29:01.0000] <Philip`>
No

[08:29:02.0000] <zcorpan>
i mean you generated the tests from script and they have a boilerplate

[08:29:03.0000] <Philip`>
So, it's because I had no lines of boilerplate :-)

[08:29:04.0000] <zcorpan>
really?

[08:30:00.0000] <Philip`>
Well, there's blank lines between the tests, for aesthetic appeal

[08:30:01.0000] <zcorpan>
did you write each test from scratch?

[08:30:02.0000] <Philip`>
The only necessary repeated stuff in the source file is the YAML field names, and those were only parts of lines, not actually lines :-)

[08:31:00.0000] <gsnedders>
/me has stopped himself from getting spam

[08:31:01.0000] <gsnedders>
<form action="&#104;&#116;&#116;&#112;&#58;&#47;&#47;&#103;&#115;&#110;&#101;&#100;&#100;&#101;&#114;&#115;&#46;&#99;&#111;&#109;&#47;&#49;&#54;&#53;&#47;&#102;&#101;&#101;&#100;&#98;&#97;&#99;&#107;" method="post" id="commentform">

[08:31:02.0000] <zcorpan>
my point is that for an svg testsuite you could omit the boilerplate from the source file

[08:31:03.0000] <gsnedders>
Naïve spammers not using HTML parsers :)

[08:34:00.0000] <Philip`>
The nearly-minimal test case I can write is

[08:34:01.0000] <Philip`>
  - name: something

[08:34:02.0000] <Philip`>
    code: @assert true

[08:34:03.0000] <Philip`>
so there's only eleven fixed unavoidable non-whitespace characters

[08:35:00.0000] <jcranmer>
/me notes that many WYSIWYG editors fail to perform "obvious" CSS simplification

[08:36:00.0000] <takkaria>
gsnedders: hopefully that will change with the advent of HTML5 parsing libraries

[08:36:01.0000] <gsnedders>
takkaria: Hopefully? :(

[08:38:00.0000] <Philip`>
zcorpan: For an SVG test suite you could do that, but it looks like http://dev.w3.org/cvsweb/SVG/profiles/1.2T/test/svg/udom-node-201-t.svg?rev=1.4&content-type=text/x-cvsweb-markup is what they actually do, which is more than eleven characters

[08:40:00.0000] <Philip`>
I tend to use something like mailto:me&#X040;wherever because that's possibly more likely to break stupid HTML scrapers

[08:41:00.0000] <jcranmer>
on some of the pages I have, I've noted that even just sticking it in raw seems to miss most spambots, although I'll admit it's not a widely-distributed page

[08:42:00.0000] <gsnedders>
My email address is in far worse places than my website :P

[08:42:01.0000] <Philip`>
/me is in favour of writing "desc: ..." rather than <d:OperatorScript xmlns:d="http://www.w3.org/2000/02/svg/testsuite/description/" xmlns="http://www.w3.org/1999/xhtml"><p>...</p></d:OperatorScript>

[08:44:00.0000] <takkaria>
I used to care about not showing my email in public, but I have decent spam filters not

[08:44:01.0000] <takkaria>
s/not/now

[08:50:00.0000] <gsnedders>
takkaria: I just use character references for stuff like email and IM

[08:50:01.0000] <zcorpan>
Philip`: ouch

[08:51:00.0000] <gsnedders>
takkaria: Absolutely no hassle for any real users using a browser, hopeless for naïve spammers :P

[08:53:00.0000] <Philip`>
I just set robots.txt to disallow spammers from reading my pages

[08:54:00.0000] <zcorpan>
Philip`: naïve spammers don't read robots.txt

[08:54:01.0000] <jcranmer>
zcorpan: it probably works better than you think it does

[08:54:02.0000] <hsivonen>
I thought the naïve ones are the ones who honor it

[08:54:03.0000] <zcorpan>
or maybe it's the other way around: experienced spammers don't read robots.txt :P

[08:54:04.0000] <jcranmer>
although one thing to try would be to set up a way to get spambots caught in a loop but real bots respecting robots.txt wouldn't

[08:56:00.0000] <gsnedders>
Are we actually any better than the spammers themselves trying to do things like this?

[08:56:01.0000] <Philip`>
Maybe naive spammers use web crawlers whose default configuration makes them respect robots.txt

[08:56:02.0000] <Philip`>
gsnedders: Yes.

[08:57:00.0000] <takkaria>
you see right and wrong, I see a primeval battle for survival

[08:57:01.0000] <Philip`>
I don't think the primeval world had email

[09:05:00.0000] <hsivonen>
http://www.rpbourret.com/xml/NamespacesFAQ.htm

[09:05:01.0000] <hsivonen>
that's a lot of questions

[09:06:00.0000] <gDashiva>
When your FAQ has an executive summary, or even worse, two...

[09:08:00.0000] <gDashiva>
Am I the only one who feels it's a bad idea to call it 'URI reference' when it can't be dereferenced?

[09:11:00.0000] <Philip`>
That site has (almost) a dozen XML namespace myths too

[09:11:01.0000] <Philip`>
which seems to indicate that it may occasionally be misunderstood

[09:11:02.0000] <Philip`>
Hmm, "Myth #1: XML namespaces exist"

[11:40:00.0000] <bradee-oh>
Hixie: around?

[13:41:00.0000] <Hixie>
bradee-oh: i can be

[13:51:00.0000] <gsnedders>
Hixie: Don't give in to people's demands!

[14:29:00.0000] <bradee-oh>
Hixie: nm, I found the answer in the archived version of you  ;)

[14:34:00.0000] <Hixie>
k

[15:53:00.0000] <Hixie>
good lord

[15:54:00.0000] <Hixie>
i just came across an e-mail in the input-for-whatwg-navigation-and-frames folder that says:

[15:54:01.0000] <Hixie>
Subject: When moving to a new document, stop scripts, event handlers, etc

[15:54:02.0000] <Hixie>
From: Past Ian <ian⊙hc>

[15:54:03.0000] <Hixie>
To: Future Ian <ian⊙hc>

[15:55:00.0000] <webben>
Hixie: Ha. Surely it's only when you start getting emails /from/ Future Ian that you're going to be really surprised. ;)

[15:55:01.0000] <Hixie>
:-)


2008-07-30
[18:14:00.0000] <Philip`>
http://developer.apple.com/internet/webcontent/XMLHttpRequestExample/example.html - in getElementTextNS: hooray for browser sniffing (which probably doesn't even work in IE7)

[18:20:00.0000] <kingryan>
Hixie: you around?

[18:32:00.0000] <Hixie>
kingryan: i am

[18:33:00.0000] <kingryan>
i think i actually figured it out

[18:33:01.0000] <Hixie>
ok

[18:33:02.0000] <Hixie>
my respect for sam is starting to seriously suffer

[18:33:03.0000] <kingryan>
i'm implementing http://html5.org/tools/web-apps-tracker?from=1926&to=1927 and was trying to figure out how to trigger the useage of the unknown-type table

[18:33:04.0000] <Hixie>
what is this, like the eight millionth time he's asked us to consider the same thing?

[18:34:00.0000] <kingryan>
but then i realized i was only using the patterns as tests, and any real files would have 'binary bytes' later on in the file

[18:34:01.0000] <Hixie>
ah indeed

[18:54:00.0000] <kingryan>
ok, that wasn't hard to implement

[18:54:01.0000] <Hixie>
cool

[18:57:00.0000] <kingryan>
it'll be in html5lib soon

[18:57:01.0000] <kingryan>
and AFAIK this is the first implementation of that section?

[18:58:00.0000] <Hixie>
gsnedders has some sort of code for this iirc

[18:58:01.0000] <Hixie>
but i'm not sure

[19:17:00.0000] <Hixie>
what to do about alt="".

[00:47:00.0000] <hsivonen>
Philip`: did you have a method for finding SVG images created with a specific program from Wikimedia Commons?

[02:08:00.0000] <hsivonen>
Philip`: or do you have a method for dumping the URLs of SVG images in wikimedia commons?

[02:51:00.0000] <Hixie>
i wish more people would send input on the svgwg proposal

[02:52:00.0000] <Hixie>
/me prods othermaciej

[02:52:01.0000] <othermaciej>
hey there Hixie

[02:52:02.0000] <othermaciej>
I will look at it

[02:52:03.0000] <Hixie>
:-)

[02:52:04.0000] <zcorpan>
/me doesn't see what's wrong with the "fake code" example other than do while (node) { ... } should be do { ... } while (node)

[02:53:00.0000] <othermaciej>
it is hard for me to evaluate it as written; not sure if it is conceded that it will probably break somewhat more content than the spec proposal

[02:54:00.0000] <Hixie>
as i see it the key issue is over whether the requirements are right

[02:54:01.0000] <zcorpan>
i don't think it's clear to the svgwg that it does, but i could be wrong

[02:54:02.0000] <hsivonen>
othermaciej: I think it's a no-brainer that tokenizing the stream twice and the interface between layers being unbufferable cannot be good (or will effective preclude code reuse if optimized)

[02:54:03.0000] <Hixie>
their requirements and use cases were certainly very different than the set i distilled the original 600 e-mails' worth of input to when i came up with the proposal commented out

[02:55:00.0000] <othermaciej>
I can certainly comment on requirements

[02:55:01.0000] <othermaciej>
I have a hard time understanding what their proposal does, it is detailed yet surprisingly unclear

[02:57:00.0000] <Hixie>
that seems to be the svgwg house style

[02:58:00.0000] <Hixie>
(i've said the same about their specs for years)

[03:00:00.0000] <Hixie>
kind of the opposite of css, which has surprisingly clear specs which, when you start trying to work out the details, end up being oddly vague and contradictory

[03:02:00.0000] <Hixie>
on another note, what's the opposite of paged? as in, a pdf file can be paged, but a png file is...?

[03:02:01.0000] <wilhelm>
Continuous.

[03:03:00.0000] <wilhelm>
http://www.w3.org/TR/REC-CSS2/media.html#media-groups

[03:03:01.0000] <Hixie>
i don't think people would understand the concept of a "continuous image" being a png as opposed to a multipage pdf

[03:11:00.0000] <Hixie>
oops, didn't mark the last checking as affecting validators. oh well.

[03:21:00.0000] <zcorpan>
does firefox still have the dom inspector? i thought it was gone as of version 3

[03:21:01.0000] <Hixie>
isn't it an optional extension?

[03:21:02.0000] <zcorpan>
it used to be an option in the installation

[03:22:00.0000] <zcorpan>
dunno if it's still available as an extension

[03:28:00.0000] <jgraham>
zcorpan: It's an extension now https://addons.mozilla.org/en-US/firefox/addon/6622

[03:29:00.0000] <hendry>
isn't firebug good enough for inspecting the dom?

[03:41:00.0000] <Hixie>
firebug is much better

[03:52:00.0000] <hsivonen>
sigh. it appears that replying to the SVG-in-HTML email is going to result in some long emails.

[04:07:00.0000] <Philip`>
hsivonen: My method was downloading Wikipedia's image database SQL dump, grepping it for strings that looked like "foo.svg" (because MySQL refused to load the dump, so I had to use other tools), downloading some number of them, and then grepping for certain strings to guess what program each was made with

[04:07:01.0000] <hsivonen>
Philip`: where do I get the MySQL dump?

[04:12:00.0000] <Lachy>
hsivonen, http://en.wikipedia.org/wiki/Wikipedia:Database_download

[04:14:00.0000] <hsivonen>
Lachy: thanks. which dump should I get from http://download.wikimedia.org/commonswiki/20080615/

[04:16:00.0000] <Lachy>
I don't know

[04:18:00.0000] <Hixie>
/me tries to get Kristof to stop top-posting

[04:26:00.0000] <Hixie>
so who are the big svg tool developers these days?

[04:27:00.0000] <hendry>
inkscape

[04:28:00.0000] <hsivonen>
Hixie: what shepazu said about prefixes and Inkscape and Illustrator is true but highly misleading (I'm writing a reply)

[04:28:01.0000] <Hixie>
heh, that was the next e-mail i was about to start on, glad you're doing it instead :-)

[04:29:00.0000] <Hixie>
zcorpan: am i supposed to be expecting something about an rss plugin or something for the forums?

[04:36:00.0000] <rgl>
/me waves

[04:36:01.0000] <zcorpan>
Hixie: maybe, at least one person has talked about some plugin and asked if we want it

[04:37:00.0000] <zcorpan>
Hixie: right now there doesn't really seem to be a need but i guess it could be nice to have

[04:40:00.0000] <Hixie>
zcorpan: what should i do? install it, or tell him that we don't want to add more code to this already quite overworked server?

[04:41:00.0000] <zcorpan>
Hixie: tell him that we don't need it right now

[04:42:00.0000] <Hixie>
ok

[04:54:00.0000] <hsivonen>
A friend from the XML trenches who wishes to remain anonymous shared a bug involving a supposedly no-op redeclaration of a prefix: http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6475032

[04:57:00.0000] <hsivonen>
perhaps we should start a WHATWG wiki page pointing to bugs caused by Namespaces

[04:58:00.0000] <Hixie>
go for it

[05:10:00.0000] <hsivonen>
created http://wiki.whatwg.org/wiki/Namespace_confusion

[05:16:00.0000] <Lachy>
hah, even though PTW claimed Hixie was unfit to be the editor, he's not willing to pursue the issue. http://lists.w3.org/Archives/Public/public-html/2008Jul/0360.html 

[05:17:00.0000] <gsnedders>
Hixie: The encoding detection?

[05:17:01.0000] <gsnedders>
Hixie: Sorry, the character set, even

[05:18:00.0000] <gsnedders>
Hixie: I've been shipping character set detection since Jan :P

[05:19:00.0000] <Hixie>
i think it was content type sniffing, not encoding sniffing

[05:19:01.0000] <gsnedders>
Hixie: Yeah, I meant to say content type. I only just got up :)

[05:19:02.0000] <gsnedders>
s/character set/content type/g

[05:19:03.0000] <gsnedders>
That's what I really meant.

[05:21:00.0000] <Hixie>
ah ok

[05:22:00.0000] <Hixie>
so... what's gonna break if i say <a> is flow content with a transparent content model?

[05:23:00.0000] <gsnedders>
A lot, I expect :)

[05:23:01.0000] <hsivonen>
Hixie: why would you say that?

[05:24:00.0000] <Hixie>
to satisfy the use cases of the people who want global href=""

[05:24:01.0000] <Hixie>
some of them, at least

[05:24:02.0000] <Hixie>
hm, apparently handling of <a><p> would break

[05:24:03.0000] <hsivonen>
Hixie: btw, to me the ability to send parameters to SVG in <object> without breaking HTTP caches seems like a legitimate feature

[05:24:04.0000] <Hixie>
it seems like a legitimate, low-priority feature, yes

[05:24:05.0000] <Hixie>
i have bigger fish to fry

[05:25:00.0000] <gsnedders>
haha — "while I'm thinking about the subject in the shower."

[05:25:01.0000] <gsnedders>
Oh Hixie…

[05:25:02.0000] <Hixie>
hsivonen: like getting the 600 pages of the spec we have already written, implemented

[05:26:00.0000] <hsivonen>
Hixie: I expect you mean s/we/I/ :-)

[05:26:01.0000] <Hixie>
hey i might be the one doing the typing but this spec would be a whole heck of a lot crapper if it weren't for y'all helping me

[05:27:00.0000] <Hixie>
just look at the acknowledgements section, and consider that i only ever add people if they say something that causes the spec to change

[05:27:01.0000] <hsivonen>
true

[05:28:00.0000] <gsnedders>
Hixie: That's be an easier section to look at if less people helped :)

[05:31:00.0000] <hsivonen>
does the connection limit apply per host name or per IP address?

[05:33:00.0000] <Philip`>
hsivonen: I think I used enwiki-latest-imagelinks.sql.gz (though it might have been enwiki-latest-image.sql.gz), from Wikipedia rather than Commons

[05:37:00.0000] <hsivonen>
hmm. http://download.wikimedia.org/commonswiki/20080615/commonswiki-20080615-image.sql.gz looks interesting

[05:37:01.0000] <hsivonen>
Philip`: ok

[05:43:00.0000] <hsivonen>
/me goes back to writing an XML serializer and cursing namespaces

[06:24:00.0000] <takkaria>
Philip`: ping

[06:32:00.0000] <krijnh>
Hixie: is the <a> thing only problematic for unclosed <p>'s ?

[06:36:00.0000] <takkaria>
it annoys me that out of 37 tokeniser states, 12 are for handling doctypes.  it seems disproportionate, somehow

[06:44:00.0000] <zcorpan>
we could just require </p> if the parent is "a"

[06:44:01.0000] <zcorpan>
the optional end tag rules are insanely complicated anyways ;)

[06:45:00.0000] <Philip`>
takkaria: Pung

[06:45:01.0000] <krijnh>
zcorpan: yeah, would that be possible?

[06:45:02.0000] <krijnh>
Still doesn't make a <tr> 'clickable' though

[06:46:00.0000] <hsivonen>
takkaria: the most complexity in an XML parser goes into handling not only doctypes but DTDs!

[06:46:01.0000] <zcorpan>
krijnh: sure it would. and yep

[06:47:00.0000] <zcorpan>
i think we should go ahead and allow blocks in <a> :)

[06:47:01.0000] <zcorpan>
maybe that'd put some pressure on firefox to fix their parser, too

[06:48:00.0000] <krijnh>
So how much do we need to pay Hixie for this? :)

[06:48:01.0000] <krijnh>
Or would that break current pages?

[06:48:02.0000] <takkaria>
Philip`: I was going to ask you if you could get statistics on what % of tag tokens emitted by the tokeniser have at least one character in the tag name or attribute name(s) lowercased, but I have a feeling it might be a bit of a tall order. :)

[06:51:00.0000] <Philip`>
takkaria: Do you mean how many characters are uppercase in the source and hence have to be lowercased by the tokeniser?

[06:51:01.0000] <takkaria>
yeah, that :)

[06:52:00.0000] <Philip`>
Sounds like it probably shouldn't be too hard to hack something like that into the validator.nu tokeniser

[06:53:00.0000] <Philip`>
although I guess it wouldn't be trivial since I'm not sure how to feed the statistics back to the outside code

[06:53:01.0000] <Philip`>
(particularly in a threadsafe way)

[06:54:00.0000] <Philip`>
so I probably don't quite have time to do something like that now, although if e.g. you modified the code to make it report that data then I could run it fairly easily :-)

[06:55:00.0000] <takkaria>
I may look into that, or I may try and get some kind of statistics thing hooked up to hubbub

[06:56:00.0000] <takkaria>
/me doesn't know Java, so hacking the v.nu tokeniser would be troublesome

[06:56:01.0000] <Philip`>
Java is easy - it's just C with objects and without pointers :-)

[06:59:00.0000] <Philip`>
If you want to collect statistics yourself, it's fairly easy to just download a few thousand pages given some list of URLs, and then pass them all through some processing program, and write a script to summarise the output

[07:00:00.0000] <takkaria>
yeah, it seems like a reasonable thing to do

[07:00:01.0000] <Philip`>
(The mean page size I saw was something like 30KB, so it doesn't take long to download lots, assuming you do enough in parallel)

[07:01:00.0000] <takkaria>
I need to get a corpus of pages anyway for speed tests and test coverage

[07:02:00.0000] <takkaria>
so that's a good idea, really

[07:14:00.0000] <hsivonen>
Philip`: do you have a catalog of evil input that breaks naïve XML output?

[07:19:00.0000] <Philip`>
hsivonen: No - I've only ever needed to know %00 and %ef%bf%bf, since in all cases that's sufficient ;-)

[07:19:01.0000] <Philip`>
Oh, and sometimes %0c

[07:20:00.0000] <Philip`>
But that's about all, I think

[07:20:01.0000] <hsivonen>
ok. thanks

[07:37:00.0000] <krijnh>
http://meyerweb.com/eric/thoughts/2008/07/23/any-element-linking-demo/#comment-396361 :)

[07:41:00.0000] <zcorpan>
perhaps HTMLElement should have a links collection so you can do <tr onclick="location = links[0]"> instead of getElementsByTagName/querySelector

[07:51:00.0000] <zcorpan>
Philip`: you forgot a ? in <xml:namespace prefix=v>

[07:51:01.0000] <Philip`>
zcorpan: No I didn't :-)

[07:52:00.0000] <Philip`>
I copied from http://msdn2.microsoft.com/en-us/library/bb250524.aspx and it seems to work without a ?

[07:55:00.0000] <Philip`>
(Well, I did actually forget about the ?, but at least I remembered that I was forgetting something like that, hence mentioning "maybe some other incantations" to cover my failings :-) )

[08:14:00.0000] <zcorpan>
Philip`: oh, i thought only <?xml:namespace... worked

[08:15:00.0000] <gsnedders>
Less than a week till my exam results :\

[08:15:01.0000] <Philip`>
zcorpan: It's dangerous to make such assumptions about how IE works :-)

[08:17:00.0000] <zcorpan>
Philip`: does <body prefix=v> work?

[08:18:00.0000] <Philip`>
zcorpan: No

[08:18:01.0000] <Philip`>
(nor does <body xmlns:v>)

[08:18:02.0000] <zcorpan>
<html prefix=y> doesn't seem to work either

[08:20:00.0000] <gsnedders>
Philip`: <html gsneddersisawesome>?

[08:20:01.0000] <gsnedders>
Philip`: (you said not to make such assumptions! :P)

[08:21:00.0000] <Philip`>
Ah, you can use <?import namespace="v" implementation="#default#VML">

[08:21:01.0000] <Philip`>
instead of the CSS behavior thing

[08:22:00.0000] <zcorpan>
yeah

[08:22:01.0000] <zcorpan>
and/or some <object> thing in head

[08:22:02.0000] <zcorpan>
i think

[08:22:03.0000] <zcorpan>
well at least to enable asv

[08:23:00.0000] <zcorpan>
<object id=foo classid=...></object><?import namespace=svg implementation=#foo> or so

[08:25:00.0000] <Philip`>
I guess that's to make it load the plugin that will hook into that namespace behaviour or something

[08:26:00.0000] <zcorpan>
yeah

[08:26:01.0000] <zcorpan>
for mathplayer2 you can use some specific doctype instead and/or application/xhtml+xml

[08:27:00.0000] <zcorpan>
though that works without prefixes

[08:28:00.0000] <zcorpan>
so i'm not sure what happens there

[08:28:01.0000] <zcorpan>
perhaps it does the document.createElement('math') thing

[08:57:00.0000] <gsnedders>
/me tries to validate HTML 5

[08:57:01.0000] <gsnedders>
/me begs hsivonen for forgiveness ;P

[08:58:00.0000] <gsnedders>
yay!

[08:58:01.0000] <gsnedders>
It's valid!

[08:58:02.0000] <gsnedders>
hsivonen: Do you check if URIs are valid?

[09:05:00.0000] <gDashiva>
gsnedders: We could just make Hixie add "This document is valid HTML5" to one of the normative sections, and you wouldn't have to worry ever again ;)

[09:05:01.0000] <gsnedders>
gDashiva: :)

[09:06:00.0000] <gsnedders>
gDashiva: But it is always conforming, or only the copy that Hixie publishes (i.e., if I run it through my spec-gen, is it still valid?)?

[09:08:00.0000] <Philip`>
gDashiva: That seems insufficiently verbose

[09:08:01.0000] <Philip`>
Maybe "An HTML 5 document is a conforming document if it either follows all the conformance requirements described in this specification, or if it is this specification"

[09:10:00.0000] <Lachy>
Philip`, how does a validator correctly identify a document as being the spec?

[09:11:00.0000] <Philip`>
Lachy: It could hardcode the MD5 of the spec

[09:12:00.0000] <gsnedders>
Philip`: If it goes through my spec-gen, it will have a different MD5, and yet will still be the spec

[09:12:01.0000] <gsnedders>
Philip`: Also, what if Hixie updates the spec?

[09:12:02.0000] <Philip`>
gsnedders: It could hardcode the MD5 of all versions of the spec

[09:12:03.0000] <gsnedders>
Philip`: Including all possible future versions of the spec (i.e., every possible md5 hash)?

[09:12:04.0000] <Philip`>
gsnedders: The validator would have to be updated, which is what already has to happen for many spec changes

[09:13:00.0000] <gDashiva>
Would it be the w3c or whatwg version that was valid?

[09:13:01.0000] <Lachy>
does the conformance criteria implictly apply to all prior versions of the spec too, even though they are obsolete?

[09:19:00.0000] <gsnedders>
http://bugs.gsnedders.com/issues/show/15 — anyone agree with that?

[09:20:00.0000] <Lachy>
gsnedders, it asks me to log in

[09:20:01.0000] <gDashiva>
No, it should be bu.gsnedders.com

[09:20:02.0000] <gsnedders>
Lachy: I disagree with that.

[09:20:03.0000] <gsnedders>
:P

[09:20:04.0000] <gDashiva>
I also get the login screen

[09:20:05.0000] <gsnedders>
and now?

[09:20:06.0000] <gsnedders>
500 :\

[09:20:07.0000] <Philip`>
Internal Error

[09:20:08.0000] <gDashiva>
It redirected me to login.php for the login screen, so reloading doesn't fix it!

[09:20:09.0000] <Lachy>
same

[09:21:00.0000] <gsnedders>
Internal error isn't good.

[09:21:01.0000] <Philip`>
Better than an external error

[09:21:02.0000] <gDashiva>
It maybe depends on login credentials or something

[09:22:00.0000] <gsnedders>
gDashiva: it shouldn't :P

[09:22:01.0000] <gsnedders>
Basically, should whitespace have meaning within pre for non-visual UAs?

[09:22:02.0000] <gDashiva>
gsnedders: And it shouldn't 500 either :P

[09:24:00.0000] <Philip`>
gsnedders: Yes, because otherwise you wouldn't be able to teach blind programmers Python

[09:24:01.0000] <gsnedders>
Philip`: so <pre><dfn> foo bar </dfn></pre> <span>foo bar</span> should be xref'd how? :P

[09:25:00.0000] <gsnedders>
Should it not be as the span doesn't start with whitespace?

[09:25:01.0000] <gDashiva>
I would warn/error on non-trimmed dfn contents

[09:26:00.0000] <Philip`>
gsnedders: That's a totally unrelated question :-p

[09:26:01.0000] <gsnedders>
Philip`: Totally? It's completely related to the meaning of whitespace in pre! :P

[09:27:00.0000] <gDashiva>
I think gsnedders is saying his script is a non-visual UA

[09:27:01.0000] <gsnedders>
s/non-visual UA/not a visual UA/g

[09:27:02.0000] <gsnedders>
how about that?

[09:28:00.0000] <gsnedders>
well, it is a UA

[09:28:01.0000] <gsnedders>
and non visual

[09:28:02.0000] <gsnedders>
and no scripting support :)

[09:29:00.0000] <gDashiva>
Lies, it supports arbitrary script execution through vulnerabilities

[09:29:01.0000] <gsnedders>
gDashiva: Does it, though? :P

[09:29:02.0000] <Philip`>
gsnedders: Your UA doesn't know or care about meaning - it's just doing fuzzy string matching, and your second question was about how much fuzziness you want

[09:30:00.0000] <gsnedders>
the fuzziness should be based on the meaning :)

[09:30:01.0000] <gDashiva>
I repeat my suggestion

[09:30:02.0000] <gDashiva>
It avoids having to make a decision by putting the onus on the author

[09:33:00.0000] <Philip`>
If you cared much about meaning, you'd recognise that <dfn>foo bar</dfn> and <span>foo bars</span> are referring to the same concept, just with some modifications to cope with grammar, and automatically link those together

[09:35:00.0000] <gDashiva>
Should he also recognize Attorneys General as referring to the singular form? :)

[09:35:01.0000] <gsnedders>
Philip`: Peh. That means using a natural language parser (yuk)

[09:35:02.0000] <Philip`>
gDashiva: Of course

[09:36:00.0000] <Philip`>
And it has to be i18nised so it'll cope with all natural languages that people will translate specs into

[09:41:00.0000] <gsnedders>
Philip`: So you think I should do nothing? :P

[09:51:00.0000] <Philip`>
gsnedders: I never suggested such a thing

[09:51:01.0000] <gsnedders>
Philip`: What do you believe my behaviour should be when the instance or the dfn is in a pre?

[09:52:00.0000] <Philip`>
gsnedders: I'm happy to leave that decision up to you

[09:52:01.0000] <gsnedders>
ergh.

[09:52:02.0000] <gsnedders>
people are so helpful :)

[09:53:00.0000] <gsnedders>
Philip`: There again, did I really expect you to make a decision?

[09:53:01.0000] <gsnedders>
But only I can answer that.

[09:53:02.0000] <Philip`>
gsnedders: Not all people

[09:53:03.0000] <Philip`>
as is easily demonstrated

[11:24:00.0000] <takkaria>
urgh, people should stop emailing whatwg⊙lwo and whatwg⊙wo

[12:01:00.0000] <gsnedders>
http://flickr.com/photos/gsnedders/2716775325/ — that _so_ isn't distorted

[12:09:00.0000] <zcorpan>
who wants to join the party? http://lists.w3.org/Archives/Public/public-xhtml2/2008Jul/0034.html

[12:12:00.0000] <zcorpan>
"FWIW, the XHTML2 Working Group "mints" new FPIs all the time.  I am saddened to learn that this is a problem for browser vendors."

[12:22:00.0000] <KevinMarks>
/me is listening to Vicki talk about HTML5 in Safari 4

[12:25:00.0000] <hsivonen>
gsnedders: Validator.nu check the generic IRI syntax and scheme-specific syntax for certain schemes. Unregistered schemes are allowes. The spec's URL stuff isn't in yet. It'll require extensions to the RELAX NG engine to carry the encoding metadatum around

[12:26:00.0000] <gsnedders>
hsivonen: OK, thanks

[12:26:01.0000] <Philip`>
gsnedders: http://flickr.com/photos/gsnedders/2716769953/ - s/Cathrine's/Catharine's/

[12:26:02.0000] <hsivonen>
gsnedders: http://hsivonen.iki.fi/html5-datatypes/#iri

[12:26:03.0000] <gsnedders>
Philip`: fixed

[12:26:04.0000] <Philip`>
gsnedders: http://flickr.com/photos/gsnedders/2716765339/ - s/Queen's/Queens'/

[12:27:00.0000] <gsnedders>
Philip`: I was guessing that was after some queen who founded it

[12:27:01.0000] <Philip`>
gsnedders: http://www.quns.cam.ac.uk/queens/Misc/apostrophe.html

[12:27:02.0000] <gsnedders>
heh.

[12:27:03.0000] <hsivonen>
Philip`: thanks for poiting out that IE isn't drinking the XML kool-aid

[12:28:00.0000] <gsnedders>
"The spelling changed from Queen's to Queens' in the calendar of 1831." — 200 years ago I'd have been right!

[12:28:01.0000] <Philip`>
hsivonen: IE is when you use <xml>, though

[12:28:02.0000] <Philip`>
gsnedders: 200 years ago, Flickr didn't exist, so the point would be irrelevant

[12:28:03.0000] <gsnedders>
Philip`: shhh

[12:28:04.0000] <gsnedders>
:P

[12:31:00.0000] <hsivonen>
gsnedders: your bug tracker shows me an internal error

[12:36:00.0000] <KevinMarks>
2 queens, like 2 kings

[12:37:00.0000] <KevinMarks>
did you go to Sidney?

[12:37:01.0000] <Philip`>
What two kings?

[12:38:00.0000] <KevinMarks>
Henry VI and VII

[12:40:00.0000] <Philip`>
But King's College is only named after Henry VI

[12:43:00.0000] <KevinMarks>
oh, right

[12:45:00.0000] <Philip`>
It's best to never expect any kind of consistency :-)

[12:56:00.0000] <gsnedders>
Esp. in Cambridge :)

[12:56:01.0000] <gsnedders>
hsivonen: Yeah, I know :(

[12:56:02.0000] <gsnedders>
hsivonen: The alternative is a login screen.

[12:57:00.0000] <gsnedders>
Something is broken.

[14:14:00.0000] <hsivonen>
http://esw.w3.org/topic/PF/XTech/HTML5/MediaSpecifcElements

[14:15:00.0000] <Hixie>
what about it?

[14:15:01.0000] <hsivonen>
looks like a draft about adding stuff to HTML5 

[14:16:00.0000] <Hixie>
i hope they have fun with that

[15:34:00.0000] <gsnedders>
MikeSmith: You around?

[15:36:00.0000] <gsnedders>
MikeSmith: If not, can you just tell me sometime whether http://stuff.gsnedders.com/spec-gen/html5.html has sane enough indenting of the TOC for your liking (seeming you're the only person apart from me who cares if it is, or at least who has voiced an opinion)?

[15:39:00.0000] <takkaria>
that looks sane to me

[15:39:01.0000] <gsnedders>
(I know the end tags are a bit wacky, but being nice with them would result in even crazier code than that needs)

[15:52:00.0000] <gsnedders>
Yay!

[15:52:01.0000] <gsnedders>
Only one thing blocking release of 1.0b1 now

[15:52:02.0000] <gsnedders>
(docs)

[16:02:00.0000] <tusho>
Is rel="author" meaningful?

[16:05:00.0000] <webben>
tusho: in the sense of it being obvious what's intended? it is to me.

[16:05:01.0000] <tusho>
:P

[16:05:02.0000] <tusho>
Just wondering if anything did anything with it.

[16:06:00.0000] <webben>
like what?

[16:07:00.0000] <webben>
well, actually I guess one could use it when generating a citation

[16:10:00.0000] <Hixie>
 so i've allowed <a> to contain blocks

[16:10:01.0000] <Hixie>
now i have to work out what this does to our definition of paragraph

[16:10:02.0000] <Hixie>
because at the moment it doesn't match css's behaviour

[16:10:03.0000] <tusho>
Hixie: "oh and by the way, i've just detonated a nuclear device"

[16:10:04.0000] <tusho>
"on another note..."

[16:11:00.0000] <gsnedders>
tusho: In Norway?

[16:11:01.0000] <tusho>
gsnedders: :-)

[16:11:02.0000] <gsnedders>
tusho: (I assume that comment is related to #html-wg)

[16:12:00.0000] <tusho>
gsnedders: I was just commenting on "so i've allowed <a> to contain blocks"

[16:12:01.0000] <tusho>
and its offhand form of delivery

[16:13:00.0000] <Hixie>
i guess i'll just make <a> elements transparent to the definition, like <ins> and <del>

[16:14:00.0000] <gsnedders>
Hixie: I guess it hasn't much affect, as <a><p>foo</a> is already linked nowadays

[16:14:01.0000] <Hixie>
doesn't affect implementations

[16:14:02.0000] <Hixie>
affects henri and authos

[16:15:00.0000] <Hixie>
though i screwed up the notification when i commited it

[16:31:00.0000] <Hixie>
http://www.w3.org/mid/4890704F.7040501⊙cau is the most concise description of what IE does i've ever seen

[16:31:01.0000] <Hixie>
and hoo boy does it blow most preconceptions out of the water

[16:33:00.0000] <Philip`>
It's only concise because it ignores almost all of the details :-p

[16:43:00.0000] <Philip`>
Hmm, apparently IE treats unknown tags as empty because if it parsed them as containers then IE3 ran out of stack space on some common bogus content

[16:43:01.0000] <gavin_>
heh

[16:51:00.0000] <Lachy>
Philip`, the <xml:namespace prefix=v> thing needs to be a processing instruction, using the SGML syntax, not the XML syntax (i.e. no trailing '?')

[16:51:01.0000] <Lachy>
so it's <?xml:namespace ...>

[16:52:00.0000] <Philip`>
Lachy: It works as both <xml:namespace> and <?xml:namespace>

[16:52:01.0000] <Lachy>
oh

[16:52:02.0000] <Lachy>
ok

[16:52:03.0000] <Lachy>
I analysed IE's handling of XML crap before http://lists.w3.org/Archives/Public/www-forms/2006Sep/0057.html

[16:58:00.0000] <Lachy>
IE actually handles both <?xml:namespace /> and <xml:namespace /> in exactly the same way, by adding the <?xml:... /> one to the DOM, which is visible by looking at the .innerHTML of the document


2008-07-31
[17:03:00.0000] <Philip`>
Does it actually add it to the DOM, or does the innerHTML getter synthesise it for output?

[17:04:00.0000] <Philip`>
(e.g. adding it just before it emits a tag that uses that namespace)

[17:46:00.0000] <Lachy>
Philip`, I don't know how it works in detail. But I don't believe it's possible to see it via any other DOM methods. But that's probably because IE doesn't support the ProcessingInstruction node interface

[19:15:00.0000] <jcranmer>
falling asleep on a bus takes about ten minutes for me

[19:15:01.0000] <jcranmer>
er, wrong channel

[19:16:00.0000] <takkaria>
good to know, though. :)

[19:17:00.0000] <jcranmer>
(related to the rock slide on the main Whistler-Vancouver highway)

[19:19:00.0000] <jcranmer>
I now get to get on a bus at midnight, catch a flight at noon, and getting to my home airport at 10 PM (assuming no problems), to get home closish to 11

[21:14:00.0000] <Hixie>
we crossed the 2000 pending e-mail barrier! only 1933 e-mails left!

[21:45:00.0000] <Hixie>
i ordered something form amazon which shipped and went to the USPS' HEBRON KY facility

[21:45:01.0000] <Hixie>
and then stopped

[21:45:02.0000] <Hixie>
it's been there for days now

[22:05:00.0000] <Hixie>
/me chuckles at daniel's e-mail

[22:05:01.0000] <Hixie>
i'm glad i'm not the only one who had that reaction :-)

[03:08:00.0000] <zcorpan>
LOL

[03:09:00.0000] <zcorpan>
http://www.w3.org/mid/Pine.LNX.4.62.0807310535280.3295⊙hdc

[03:09:01.0000] <zcorpan>
Hixie: do i always do that? :P

[03:11:00.0000] <Hixie>
wow, someone actually read to the end :-D

[03:12:00.0000] <zcorpan>
heh

[03:49:00.0000] <MikeSmith>
Hixie: do you have online or in subversion the source for the W3C version of the header for the HTML5 spec?

[03:49:01.0000] <MikeSmith>
I want to try to just give you a patch with the proposed additions

[03:49:02.0000] <MikeSmith>
if that'll work for you

[03:50:00.0000] <MikeSmith>
otherwise, I can just from the Overview.html that checked into dev.w3.org CVS

[03:51:00.0000] <Hixie>
i'd rather just get the list of changes you want, but if you really want to do a patch, the source file is http://www.whatwg.org/specs/web-apps/current-work/header-w3c

[03:51:01.0000] <MikeSmith>
OK

[03:51:02.0000] <MikeSmith>
I can just send you the list too

[03:52:00.0000] <Hixie>
bed time now, anyway :-)

[03:52:01.0000] <Hixie>
nn

[03:52:02.0000] <MikeSmith>
night

[03:53:00.0000] <MikeSmith>
hsivonen: you around? I wanted to ask if the sources for the schemas you use for validator.nu are static sources you maintain manually or if you have build that uses Petr Nalevka's schemas in some way.

[03:54:00.0000] <MikeSmith>
The reason I ask is that I remember when I reported the error with the <ins> content model, you made a change in http://svn.versiondude.net/whattf/validator/trunk/schema/xhtml10/edit.rnc

[03:56:00.0000] <MikeSmith>
hmm.. or does validator.nu actually use the http://svn.versiondude.net/whattf/syntax/trunk/relaxng schemas at all?

[03:59:00.0000] <MikeSmith>
oops, I asked because I saw "svn log" was telling me no changes had been made to the revision.rnc file since January

[03:59:01.0000] <MikeSmith>
but I see the content model was already correct in there

[04:00:00.0000] <MikeSmith>
but then, I guess if validator.nu had actually been using that instead of Petr's schema, I would not have observed the error I got

[04:17:00.0000] <hsivonen>
MikeSmith: the preset schemas are maintained by me manually.

[04:17:01.0000] <MikeSmith>
hsivonen: I see

[04:17:02.0000] <hsivonen>
and yes, http://svn.versiondude.net/whattf/syntax/trunk/relaxng are used for HTML5

[04:21:00.0000] <MikeSmith>
hsivonen: I'm confused about why I ran into that error in spite of the http://svn.versiondude.net/whattf/syntax/trunk/relaxng having had the correct content model at that time

[04:21:01.0000] <MikeSmith>
as far as I can see

[04:22:00.0000] <hsivonen>
MikeSmith: was the error in HTML5 or XHTML 1.0?

[04:22:01.0000] <hsivonen>
(afk)

[04:22:02.0000] <MikeSmith>
ah, I guess was checking XHTML 1.0 source

[04:22:03.0000] <MikeSmith>
that had to be what it was

[06:50:00.0000] <hsivonen>
Philip`: what headers do I need to show to wikimedia servers in order to be able to download stuff?

[06:52:00.0000] <Philip`>
hsivonen: I think I might have just had to remove wget's User-Agent header

[06:55:00.0000] <hsivonen>
hmm. I wonder how to compute the /0/0b/ bit: http://upload.wikimedia.org/wikipedia/commons/0/0b/2001-5_Gubernatorial_election_map.svg

[06:55:01.0000] <Philip`>
First two hex digits of the MD5 of the filename, if I remember correctly

[06:56:00.0000] <hsivonen>
as UTF-8 I presume?

[06:56:01.0000] <Philip`>
I didn't worry about that :-)

[06:57:00.0000] <Philip`>
$ echo -n '2001-5_Gubernatorial_election_map.svg' | md5sum

[06:57:01.0000] <Philip`>
0b4c683b9c7a33f7178e7276e49c261e  -

[06:57:02.0000] <Philip`>
(That seems about right)

[06:57:03.0000] <hsivonen>
and is /0/ always /0/?

[06:57:04.0000] <Philip`>
That's the first hex digit of the MD5

[06:58:00.0000] <Philip`>
and the /0b/ is the first two

[06:58:01.0000] <hsivonen>
Philip`: thanks

[06:58:02.0000] <hsivonen>
it appears that concocting a non-wget UA string doesn't work, but using a browser-looking string works...

[06:59:00.0000] <Philip`>
What about no UA string at all?

[06:59:01.0000] <hsivonen>
Philip`: 403

[06:59:02.0000] <Philip`>
Oh, okay

[07:00:00.0000] <Philip`>
(I think my download script was just a line of bash and it's not in my command history and it's not saved anywhere else)

[07:27:00.0000] <hendry>
how do you specify required/mandatory in the w3c webidl? a comment?

[07:31:00.0000] <Lachy>
hendry, in what context?

[07:32:00.0000] <hendry>
Lachy: for e.g. http://dev.w3.org/geo/api/spec-source.html#position latitude, longitude are mandatory, whilst heading isn't

[07:34:00.0000] <Lachy>
I think you have to specify that in the prose, where you define how to create the object, by specifying what each value must be set to in different circumstances

[07:36:00.0000] <hendry>
Lachy: do you have an example?

[07:38:00.0000] <zcorpan>
hendry: why not just allow it to always be null?

[07:38:01.0000] <Lachy>
well, it currently says "... If the implementation cannot provide heading information, the value of this attribute must be null." That seems fine to me

[07:39:00.0000] <Lachy>
but it doesn't define what to do if either the latitude or longditude isn't available.

[07:40:00.0000] <hendry>
just for extra clarity i thought it could be in the IDL

[07:40:01.0000] <hendry>
as well as the "prose" / text below

[07:45:00.0000] <Lachy>
hendry, in the section just above that for the PositionOptions interface, it says "The errorCallback and enableHiqhAccuracy  attributes are optional."  It's not clear to me what that means, nor where the errorCallback attribute is defined

[07:46:00.0000] <Lachy>
unless you're referring to the errorCallback parameter used in other methods defined earlier in the spec

[07:47:00.0000] <Lachy>
hmm, I guess I should review that spec in more detail one day

[07:47:01.0000] <hendry>
Lachy: sooner the better. Web 3.0 is waiting my man

[07:48:00.0000] <Lachy>
are you the editor of the spec?

[07:48:01.0000] <hendry>
Lachy: no

[07:48:02.0000] <Lachy>
oh, I thought by the way you were asking, you were wondering how you could improve the spec.

[07:50:00.0000] <hendry>
yes, of course i want to improve it :) i want it done yesterday

[07:53:00.0000] <gsnedders>
/me wonders whether to be a pedantic asshole

[07:53:01.0000] <gsnedders>
"the text of header elements" — what's "the text"?

[07:53:02.0000] <Lachy>
gsnedders, you are always like that

[07:53:03.0000] <Lachy>
;-)

[07:54:00.0000] <gsnedders>
Lachy: No, almost always :)

[07:54:01.0000] <Lachy>
gsnedders, it may refer to the text content

[07:54:02.0000] <Lachy>
but it's difficult to know without a bit more context

[07:54:03.0000] <hsivonen>
wow. generating namespace prefixes without bugs is more complex than I had thought

[07:55:00.0000] <gsnedders>
Lachy: Look at 4.3.7 The header element

[07:58:00.0000] <Lachy>
gsnedders, I assume it's referring to the text that would be used for the purpose of creating a document outline. But if it's not used in the outline algorithm, then I don't know what it's for

[07:58:01.0000] <Lachy>
hsivonen, why are you trying to generate namespace prefixes?

[07:58:02.0000] <gsnedders>
I suppose for giving the header of the outline

[07:58:03.0000] <gsnedders>
But for the sake of numbering, do I number that header?

[07:59:00.0000] <hsivonen>
Lachy: because using a serializer written by someone else and left unmaintained sucks too

[07:59:01.0000] <Lachy>
what do you mean by the header of the outline?

[08:00:00.0000] <gsnedders>
s/outline/section/

[08:00:01.0000] <Lachy>
hsivonen, why is the content you're serialising using namespaces?

[08:01:00.0000] <hendry>
/me wonders if there is a JS graphing library that could render something like this in canvas or SVG http://port70.net/~nsz/dwm-sloc.png

[08:01:01.0000] <hsivonen>
Lachy: If I write an XML serializer, I write one that works in the general case

[08:01:02.0000] <Lachy>
oh, ok

[08:02:00.0000] <hsivonen>
anyway, it probably surprises no one, but getting namespaces right is by far the hardest part of writing a SAX to XML serializer

[08:03:00.0000] <hsivonen>
Lachy: if I didn't make it general purpose, and later I'd use it in an unexpected way, Philip` could provoke Validator.nu to emit ill-formed output and I could be ridiculed as a bozo

[08:03:01.0000] <Lachy>
LOL

[08:07:00.0000] <zcorpan>
Hixie: the link on http://www.whatwg.org/mailing-list should be #commits not #commit

[08:08:00.0000] <zcorpan>
hsivonen: but everyone is a bozo anyway

[08:10:00.0000] <hsivonen>
Lachy: also, I want a serializer that doesn't leak the prefix choices from an XSLT program into the output

[08:12:00.0000] <gsnedders>
I wonder how complex it would be to take a CharMapML file and a binary string, and convert it to Unicode

[08:13:00.0000] <takkaria>
oh, WF2 integration in HTML5.  that'd be nice

[08:24:00.0000] <Lachy>
hsivonen, then in such cases, where do you obtain the appropriate prefixes from, or do you just generate them randomly?

[08:25:00.0000] <Lachy>
gsnedders, what?

[09:49:00.0000] <Philip`>
hendry: Why JS? It seems easier to e.g. use Gnuplot's SVG output, if you just want a static graph in a scalable web-friendly format

[09:50:00.0000] <hober>
hendry: google's chart api could probably handle that

[10:54:00.0000] <takkaria>
Philip`: I'm amazed at how long a sort -R of dmoz urls is taking

[10:55:00.0000] <Philip`>
takkaria: How much RAM do you have?

[10:55:01.0000] <takkaria>
just the 2GB

[10:55:02.0000] <Philip`>
I think 'sort' uses temporary files as scratch space when it's processing a lot of data

[10:56:00.0000] <Philip`>
The first time I did this, I used Perl to slurp the entire file into an array in memory and then randomise it and print it out again

[10:56:01.0000] <Philip`>
which used rather a lot of RAM, but did actually work and didn't take forever (but wasn't particularly fast either)

[10:56:02.0000] <takkaria>
/me appears to only be using ~40% of RAM at the moment

[10:57:00.0000] <Philip`>
where "rather a lot" was a bit more than 2GB, if I remember correctly

[10:57:01.0000] <Philip`>
(on a machine with 4GB RAM, so that was alright)

[10:57:02.0000] <takkaria>
ouch

[10:57:03.0000] <takkaria>
I don't have any machines with RAM >2GB

[10:58:00.0000] <takkaria>
times like these it would be nice to have a shell account on a supercomputer

[10:58:01.0000] <Philip`>
You could trim the file down substantially, e.g. skip a random 99% of the lines, and then randomise the output from that

[10:59:00.0000] <Philip`>
(By the way, be careful to remove duplicate URLs, and be careful to unescape the RDF XML (which I forgot to do since I just parsed it with regexps :-( ))

[11:01:00.0000] <takkaria>
yeah, I did the replacements and uniq stuff

[11:01:01.0000] <takkaria>
I found a very efficient method of extracting the URLs was simply perl -i -pe 's/&quot;/"/g' uniq-urllist

[11:01:02.0000] <takkaria>
grep "&" uniq-urllist | grep -v "amp"

[11:01:03.0000] <takkaria>
perl -i -pe 's/&amp;/&/g' uniq-urllist

[11:01:04.0000] <takkaria>
er, that was the wrong thing to paste

[11:01:05.0000] <takkaria>
'grep "http://" content.rdf.u8 | cut -d\" -f2 >urllist' is what I meant

[11:02:00.0000] <takkaria>
then "grep ^http" again, to filter out the odd description/name which had an URL in it

[11:03:00.0000] <Philip`>
Just out of interest, do you find 'grep' to be massively slower than 'LANG=C grep'?

[11:04:00.0000] <Philip`>
That was a pain to me when dealing with large files, until I realised setting LANG made it much faster, probably because my default locale was doing UTF-8 decoding of every line or something

[11:05:00.0000] <takkaria>
LANG=c is faster, but only by about 1% or so

[11:05:01.0000] <takkaria>
my normal LANG is en_GB.UTF-8

[11:07:00.0000] <Philip`>
Hmm, I'm using en_GB.UTF-8 by default too, but it goes ~30x faster with LANG=c

[11:07:01.0000] <Philip`>
on at least the two computers (one Gentoo, one Fedora) I've tested it on

[11:07:02.0000] <takkaria>
I'm an Ubuntuite

[12:47:00.0000] <nzkoz>
hey guys, does anyone know the best way to get in contact with the validator.nu maintainer?  I've been noticing strange results lately, just wondering if I should be reporting them somewhere

[12:47:01.0000] <takkaria>
nzkoz: the maintainer is hsivonen, he's here quite a lot

[12:48:00.0000] <nzkoz>
takkaria: thanks, I'll keep an eye out over the next few days,  any idea what timezone he's in?

[12:48:01.0000] <takkaria>
european time

[12:49:00.0000] <takkaria>
possibly GMT+2 or GMT+3, I'm not sure

[12:49:01.0000] <nzkoz>
cool, same as me, so hopefully we overlap a bunch :)

[13:23:00.0000] <gsnedders>
nzkoz: UTC+3

[13:24:00.0000] <nzkoz>
cheers

[13:37:00.0000] <takkaria>
Philip`: I now have a system that does roughly what yours does, except without Java ;)

[13:39:00.0000] <takkaria>
I don't cache headers, mind, but I do use wget -m which should be roughly the same

[13:40:00.0000] <Philip`>
takkaria: Does it do it with parallelism too? :-)

[13:40:01.0000] <takkaria>
yup

[13:41:00.0000] <Philip`>
Does it get confused by infinitely long web pages? :-)

[13:41:01.0000] <takkaria>
nope

[13:43:00.0000] <takkaria>
I get the master page list, split it into files of 100 urls each, then write a make rule that takes each list, and runs wget with a quota

[13:43:01.0000] <takkaria>
so make -j 4 does all the work for me wrt parallelism

[13:48:00.0000] <Philip`>
Sounds quite nice, then :-)

[13:48:01.0000] <takkaria>
I'm reasonably happy with it

[13:48:02.0000] <Philip`>
Hmm, only 4?

[13:48:03.0000] <takkaria>
I'm on a 100kB/s downstream connection :\

[13:49:00.0000] <takkaria>
I'm just writing all the steps I did to get it up and running into a makefile so that you can run "make fetch", it'll grab the rdf list, grep, sed, uniq, sort, randomise, and fetch

[13:49:01.0000] <Philip`>
Ah, right

[13:50:00.0000] <Philip`>
/me likes university internet connections :-)

[13:50:01.0000] <takkaria>
I'm tempted to pop within wifi range of mine tomorrow and get the 2MB/s connection

[13:51:00.0000] <Philip`>
I think the best I've seen is something like 50Mbit/s

[13:53:00.0000] <takkaria>
speeds like that make me a little bit sad

[13:53:01.0000] <takkaria>
that said, I should have  a4MB

[13:53:02.0000] <takkaria>
... a 4MB/s connection fairly soon

[14:25:00.0000] <gsnedders>
Why on earth is Time Machine claiming not enough space?

[14:27:00.0000] <gsnedders>
ah! the sparebundle is too small

[14:27:01.0000] <Hixie>
timemachine sparsebundles auto-grow, no?

[14:27:02.0000] <gsnedders>
Um, yeah. Can't you create a sparseBundle big enough, kthxbai.

[14:28:00.0000] <gsnedders>
Hixie: They have a predefined max. size, IIRC

[14:28:01.0000] <Hixie>
for me, time machine just grows it whenever needed

[14:28:02.0000] <Hixie>
having said that i have a whole bunch of other problems doing timemachine over the network

[14:29:00.0000] <gsnedders>
Hixie: If you open the sparseBundle, you can find it's capacity

[14:29:01.0000] <Hixie>
and there's a maximum it won't go over?

[14:29:02.0000] <Hixie>
maybe that _is_ the problem i've been seeing then

[14:29:03.0000] <gsnedders>
Yeah

[14:32:00.0000] <gsnedders>
Hixie: hdiutil resize -size max -growonly [path to sparseBundle]

[14:32:01.0000] <gsnedders>
Hixie: Just don't have it mounted ;)

[14:32:02.0000] <Hixie>
disk utility lets you change all that much easier :-)

[14:32:03.0000] <gsnedders>
Does it allow you do that with disk images?

[14:32:04.0000] <gsnedders>
Oh.

[14:33:00.0000] <Hixie>
:-)

[14:33:01.0000] <gsnedders>
/me shrugs

[14:33:02.0000] <gsnedders>
CLI is simple enough :)

[14:33:03.0000] <Hixie>
/me has disk utility on his dock, at home

[14:33:04.0000] <Hixie>
my mac mini is so slow, poor mini

[14:35:00.0000] <gsnedders>
/me has Terminal in his dock

[14:35:01.0000] <gsnedders>
That does everything :)

[14:47:00.0000] <gsnedders>
/me ought to pack before leaving tomorrow

[14:47:01.0000] <Hixie>
Terminal is the first thing I put in my Dock, always :-)

[14:47:02.0000] <Hixie>
usually, the only apps i have running are Terminal and 1 to 4 browsers

[14:53:00.0000] <gsnedders>
Hixie: Don't forget Finder!

[14:53:01.0000] <gsnedders>
:P

[14:54:00.0000] <Hixie>
i'd turn that off if i could!

[14:57:00.0000] <gsnedders>
Finder, Mail.app, Safari, Colloquy, SubEthaEdit, iTunes, and Terminal

[15:11:00.0000] <gsnedders>
Hixie: Re: <header>, if I'm numbering the section headers, where should the number go? The first highest ranking hx?

[15:11:01.0000] <Hixie>
yes

[15:11:02.0000] <Hixie>
though i would just treat <header> as implying no-toc no-num

[15:11:03.0000] <Hixie>
in a spec

[15:12:00.0000] <gsnedders>
meh. I don't really want behaviour like that anyway

[15:12:01.0000] <gsnedders>
by default I only do stuff from depth 2–6

[15:13:00.0000] <gsnedders>
I'll fix that for RC1

[15:14:00.0000] <gsnedders>
(I currently don't do anything special for header, more or less)

[15:14:01.0000] <gsnedders>
(in terms of it's text)

[15:14:02.0000] <gsnedders>
s/'//

[15:15:00.0000] <Hixie>
not doing anything special is fine too

[15:15:01.0000] <gsnedders>
well, I basically just treat it as if it were an hx element

[15:15:02.0000] <Hixie>
it's not like we use it; nor will we use it for anything but the actual <h1> header

[15:15:03.0000] <Hixie>
i expect

[15:16:00.0000] <gsnedders>
Which will lead to problems, I expect

[15:16:01.0000] <gsnedders>
But we don't use it yet, so who cares atm?

[15:17:00.0000] <Hixie>
indeed

[15:20:00.0000] <gsnedders>
And I want to get b1 out before I go on holiday, and probably offline for two weeks

[15:20:01.0000] <Hixie>
no rush

[15:20:02.0000] <Hixie>
probably don't want to switch to spec gen just before publication anyway

[15:20:03.0000] <Hixie>
which will be in a couple of weeks or so

[15:20:04.0000] <Hixie>
so that's fine

[15:21:00.0000] <Hixie>
?

[15:22:00.0000] <gsnedders>
It's a whole lotta notihng

[15:22:01.0000] <gsnedders>
*nothing

[15:24:00.0000] <gsnedders>
/me adds a new test, just 'cos it fails

[15:24:01.0000] <Philip`>
Uh

[15:24:02.0000] <Philip`>
My internet connection is pretty broken, so I was just randomly hitting keys into my dead SSH session, and it looks like they actually got transmitted

[15:26:00.0000] <Hixie>
hah

[15:30:00.0000] <gsnedders>
Hixie: svn.whatwg.org is down :\

[15:31:00.0000] <Hixie>
wfm

[15:31:01.0000] <Hixie>
no load or memory problems on the machine at the moment

[15:31:02.0000] <Hixie>
only minor nfs lag, nothing serious

[15:31:03.0000] <Hixie>
no unusual processes, either

[15:33:00.0000] <gsnedders>
working again now

[15:34:00.0000] <gsnedders>
/me gets to the thing which he doesn't want to document

[15:34:01.0000] <gsnedders>
Detection of w3c status

[15:34:02.0000] <gsnedders>
This took me a while to reverse engineer :P

[15:35:00.0000] <gsnedders>
(in part because I was mislead by the docs)

[15:51:00.0000] <gsnedders>
I probably should've started writing the ack section months ago

[16:14:00.0000] <Hixie>
/me adds a ten-day moving average to http://www.whatwg.org/issues/data.html for no apparently reason

[16:23:00.0000] <gsnedders>
/me doesn't really want to write, "normally, the normal string substitutions are…"

[16:28:00.0000] <gsnedders>
/me wonders how to avoid [DATE] being parsed

[16:28:01.0000] <gsnedders>
This is making it rather hard to document

[16:29:00.0000] <gsnedders>
Hixie: Is <!----> the shortest conforming comment?

[16:30:00.0000] <Hixie>
i believe so

[16:30:01.0000] <gsnedders>
Because although the text can't start with U+002D, the text is optional?

[16:31:00.0000] <Hixie>
right

[16:31:01.0000] <Hixie>
well

[16:31:02.0000] <Hixie>
iirc, the text isn't optional, but it can be the empty string

[16:31:03.0000] <Hixie>
which is the same thing!

[16:32:00.0000] <gsnedders>
Hixie: text is may

[16:32:01.0000] <gsnedders>
Hixie: Thus it isn't required

[16:34:00.0000] <Hixie>
ah ok

[16:34:01.0000] <Hixie>
well there you go then

[16:34:02.0000] <gsnedders>
(string subs must be contained within a single text node, thus having a comment that is empty stops it from being repalced)

[16:34:03.0000] <gsnedders>
*replaced

