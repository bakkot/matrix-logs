2015-06-01
[20:53:02.0000] <karlcow>
embed src to html document… showing the doc or not?

[20:53:03.0000] <karlcow>
https://bugzilla.mozilla.org/show_bug.cgi?id=730768#c3

[20:53:03.0000] <karlcow>
Blink yes     Gecko no

[20:53:21.0000] <karlcow>
I wonder what IE does

[03:59:50.0000] <frivoal>
Is there a generic name for the all html elements that are meant to hold "content" (p, section, article, h1-6, blockquote...), by opposition to elements used for UI and page construction (input, button, label, menu, br...)?

[04:02:57.0000] <boogyman>
frivoal: http://www.w3.org/TR/2011/WD-html5-20110525/content-models.html

[04:05:25.0000] <Ms2ger>
https://html.spec.whatwg.org/multipage/

[04:29:23.0000] <frivoal>
boogyman: Thanks, that seems like the right place to look at. Unfortunately that classification doesn't seem to have a category for what I want, at least not without complicated unions/intersections/differences

[04:29:51.0000] <frivoal>
I'm looking for the set of elements on which is is generally not a good idea to set "user-select: none", to make that a SHOULD NOT in the user-select spec

[04:33:34.0000] <MikeSmith>
frivoal: I don't think the spec defines any term for what you want, but you should ask Hixie when he's around

[04:34:11.0000] <frivoal>
MikeSmith: Thanks, I'll mail him.

[04:37:19.0000] <MikeSmith>
frivoal: I think the "palpable content" thing that Hixie coined might be closest to what you need

[04:38:02.0000] <MikeSmith>
which as I understand it just means those elements that should usually have some text content descendants

[04:38:13.0000] <MikeSmith>
e.g. the p element

[04:38:42.0000] <MikeSmith>
https://html.spec.whatwg.org/multipage/dom.html#palpable-content

[04:38:51.0000] <frivoal>
Ooooh, sounds like it might. That was not in the w3c spec.

[04:39:12.0000] <MikeSmith>
yeah it is I'm pretty sure

[04:39:34.0000] <MikeSmith>
that link boogyman provided is to an old TR draft

[04:40:22.0000] <boogyman>
/me goes to update his references

[04:40:43.0000] <frivoal>
indeed. The world doesn't seem to suck after all.

[04:41:00.0000] <frivoal>
Great, no need to mail Hixie then.

[04:41:31.0000] <MikeSmith>
hmm, there's a bug in that definition; Hixie has the input and button elements and some other void elements in that "palpable content" category but clearly they should not be

[04:41:43.0000] <MikeSmith>
/me will file a bug for that

[04:41:52.0000] <frivoal>
duh

[04:42:26.0000] <MikeSmith>
sometimes even Atlas shrugs

[04:42:32.0000] <frivoal>
:)

[05:12:22.0000] <darobin>
MikeSmith: button has content

[05:12:47.0000] <MikeSmith>
oop

[05:14:12.0000] <darobin>
but that's not what palpable content is

[05:14:50.0000] <darobin>
elements that are meant to hold content ought to have at least one content item that's palpable

[05:15:39.0000] <darobin>
I'm not sure exactly what frivoal is looking for, maybe flow content is the closest?

[05:15:55.0000] <darobin>
but it's not an exact match

[05:17:11.0000] <frivoal>
Maybe what I want doesn't exist. in content vs structure vs ui, I want just content. But maybe elements cannot actually be split that way.

[05:17:29.0000] <Ms2ger>
I doubt it

[05:17:32.0000] <darobin>
frivoal: I'm trying to figure out exactly which elements ought not to have user-select on them

[05:17:53.0000] <darobin>
frivoal: I'm guessing anything that can be interactive and anything that contains something that can be interactive?

[05:18:08.0000] <darobin>
it would help to know exactly which warning/issue you want to flag

[05:18:20.0000] <frivoal>
darobin: user-select: none, specifically. user-select:all or user-select: element doesn't seem bad to me

[05:19:01.0000] <darobin>
frivoal: yeah, but I meant more generally what is the problem you wish to SHOULD NOT in the usage of user-select:none?

[05:19:46.0000] <darobin>
user-select is a pretty dangerous thing to boot

[05:21:03.0000] <Ms2ger>
"Authors SHOULD NOT use user-select."

[05:21:06.0000] <frivoal>
darobin: The problem is: 'user-select: none' is a UI convenience feature, not a copy protection mechanism. Warn authors that they're likely doing something wrong if they're applying it to <p>, <h1~6>, <em>, etc

[05:21:15.0000] <darobin>
I would spec it as "You MAY use user-select: none as you wish, but you should be advised that most legislations consider it acceptable for users to stab you in the face if you do it wrong. Also see 'Disabling user scale'"

[05:21:18.0000] <frivoal>
my issue being what's "etc"

[05:21:56.0000] <darobin>
right

[05:22:22.0000] <darobin>
"You should only use it in SVG and, if you really know what you're doing, in Web Components"? :)

[05:22:55.0000] <frivoal>
I've already put some language in the spec trying to tell people "you're doing it wrong", and to tell browsers that they're allowed to provide ways to bypass it. But I'd like to empower validators to complain as well.

[05:23:01.0000] <darobin>
(The intersection of people knowing what they're doing and still using Web Components may be too small to be worth mentioning, though.)

[05:23:29.0000] <darobin>
I see, but I'm trying to think of a case in which you would set user-select to none on an existing HTML element and it's not a mistake

[05:23:44.0000] <Ms2ger>
Doesn't "using WC" imply "not knowing what you're doing"?

[05:23:59.0000] <darobin>
you're a bit slow there Ms2ger, I made that joke two lines up :)

[05:24:56.0000] <darobin>
frivoal: the only uses I can think of would be on stuff like tabs, but I'm not sure that there's a way of distinguishing the acceptable markup constructs for those

[05:24:58.0000] <frivoal>
whether using WC or not, applying it to UI-like things which are surrounded by content sounds ok, as you're trying to make the content more easily selectable without grabbing the UI elements as well

[05:25:21.0000] <MikeSmith>
frivoal: which validator? the HTML checker?

[05:26:11.0000] <darobin>
frivoal: e.g. I can easily see a tabs thing where you set it on DT because that's what you're using for your tabs (which could be legit in some cases); but most of the time it's still wrong to do so on a DT

[05:26:39.0000] <frivoal>
MikeSmith: I'm a spec Editor. Leave me alone in my disconnected ivory tower and don't bother me with actual questions relating to real implementations of things. /s

[05:27:03.0000] <darobin>
lol

[05:27:48.0000] <frivoal>
darobin: if you're writing a mail client UI, you probably don't want all the buttons and labels like "To:" or "Subject: " to be selectable

[05:28:24.0000] <darobin>
frivoal: I agree; but I can't think of a way of abstracting that to something validatable

[05:28:59.0000] <frivoal>
darobin: The failure to do so is what brought me here, hoping to find wiser people.

[05:29:07.0000] <darobin>
/me points at /topic

[05:29:10.0000] <frivoal>
(this is where I might have gone wrogn)

[05:29:17.0000] <frivoal>
s/wrogn/wrong/

[05:29:57.0000] <frivoal>
I'm looking for wisdom, not logic, so the topic is irrelevant.

[05:30:14.0000] <darobin>
frivoal: here's what I would do in a linter

[05:30:38.0000] <darobin>
I would look at the length of the text content under something that's user-select:none

[05:30:44.0000] <darobin>
and above a threshold, I'd warn

[05:30:54.0000] <darobin>
that ought to catch uses for content protection

[05:31:03.0000] <darobin>
I don't think you can do more

[05:31:58.0000] <darobin>
Conformance checkers may warn if the amount of text contained blah exceeds a certain size.

[05:32:08.0000] <frivoal>
you don't think "palpable content" - "form elements and similar (which is a bit broader than interactive element, as it for example includes <progress>)" would cut it?

[05:33:15.0000] <darobin>
palpable content means that you couldn't use it on a dl or ul that's used for a menu for instance

[05:34:11.0000] <darobin>
or for that matter on a div or span, which are likely to be the building blocks used in a UI — you're killing the use case there

[05:34:45.0000] <darobin>
I guess that setting it on a form element is likely wrong (the author probably wants disabled)

[05:36:09.0000] <frivoal>
for divs, spans, dl and ul, that's why I'm making this "SHOULD NOT" rather than "MUST NOT".

[05:36:49.0000] <frivoal>
for form elements like buttons, it's fine. For form elements that contain editable text, the spec takes care of that by making it compute to "element" (aka "contain").

[05:36:57.0000] <darobin>
frivoal: yeah but... the primary use case applies to those element, it's weird to have them under SHOULD NOT

[05:37:05.0000] <frivoal>
yah

[05:37:09.0000] <frivoal>
yeah

[05:38:24.0000] <frivoal>
So we may have to live with heuristics, which is kind of hard to spec for.

[05:38:48.0000] <darobin>
frivoal: in general I am not convinced that specs should define linting behaviour

[05:39:43.0000] <darobin>
IMHO it would be better to have that specified separately, which in turn makes it more straightforward for different constituencies to have their own linting

[05:39:47.0000] <frivoal>
darobin: When something has clear cases of "this is bad, don't do it", I'm in favor of putting that in the spec, possibly in a way that give authority to validators to complain about. But if it's not a clear case...

[05:40:49.0000] <MikeSmith>
fwiw I have added warnings in the HTML checker that aren't requirements in any spec

[05:40:56.0000] <MikeSmith>
so I don't need for a spec to say it's OK

[05:40:58.0000] <darobin>
frivoal: if it's obviously bad, as in both nocive to users and reliably detectable, then sure

[05:41:30.0000] <darobin>
but the list of such things is short, and in such cases there's an argument to be made to have implementations reject it (assuming it's not a historical blunder of course)

[05:45:16.0000] <frivoal>
Darobin: I think I'm convinced that this case is not simple enough to spec. There are probably enough warnings already in the spec to give the right idea to people who care, and if they're not going to care, whatever I say won't make a difference

[05:46:28.0000] <MikeSmith>
If I were you I wouldn't give up until Hixie weighs in

[05:46:54.0000] <MikeSmith>
he's known to have a few ideas about this kind of stuff now and then

[05:51:23.0000] <frivoal>
MikeSmith: that spec is far for being frozen in REC, and I have mailed hixie, so we'll see. But I am not too hopeful at this point

[05:52:30.0000] <Ms2ger>
Hah, rec

[05:56:10.0000] <MikeSmith>
indeed our friend Rec is a real kidder

[05:56:35.0000] <MikeSmith>
he's the one in our cartoon who always does stuff like accidentally blowing up our moonshine still

[05:57:15.0000] <MikeSmith>
but afterwards we laugh about it together as we drink up our remaining moonshine

[05:59:00.0000] <MikeSmith>
hey I even found a picture of good ole Rec http://goo.gl/L5aHj0

[06:02:35.0000] <MikeSmith>
Hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=28728

[07:53:19.0000] <jochen__>
 /act

[07:54:10.0000] <jochen__>
:-/


2015-06-02
[18:27:05.0000] <MikeSmith>
https://lists.mozilla.org/pipermail/dev-platform/2015-June/010180.html

[18:27:21.0000] <MikeSmith>
"We enabled native copy-to-clipboard on github.com today for Firefox Nightly visitors. The copy buttons no longer use a Flash widget in Nightly or Chrome!"

[18:27:27.0000] <MikeSmith>
nice

[19:25:53.0000] <MikeSmith>
former Chrome engineer Shiki Okasaka now has his own company making a pretty cool new ergonomic keyboard http://www.esrille.com/keyboard/ with the source for its firmware available on Github (and designed to be user-updateable relatively easily)

[19:37:16.0000] <caitp->
my goal is to slack off as much as possible, and with as good posture as possible, so that I don't have to worry about rsi or other injuries like that

[19:37:25.0000] <caitp->
and hopefully retire before 40

[19:37:30.0000] <caitp->
here's hopin

[19:39:24.0000] <caitp->
maybe it's futile :(

[05:07:19.0000] <MikeSmith>
https://code.google.com/p/chromium/issues/detail?id=495577

[05:08:02.0000] <MikeSmith>
Chrome shouldn't be trying to fetch something in a background tab if it requires user interaction in order to load

[05:08:34.0000] <MikeSmith>
(and then keeping a socket open waiting for the user interaction to happen)

[08:22:53.0000] <benjamingr>
Domenic: what's web platform branding? Not to be annoying yet again - but I can't seem to be able to google it

[08:23:09.0000] <Domenic>
benjamingr: I don't know what you're referring to?

[08:23:25.0000] <benjamingr>
"WeakSets are perfect for branding and are how I would expect web platform class branding to be explained."

[08:23:33.0000] <benjamingr>
Oh lol, web platform _class_ branding, sorry.

[08:25:07.0000] <benjamingr>
Like, why wouldn't an `instanceof` or another similar check work there Domenic ?

[08:25:25.0000] <Domenic>
benjamingr: because then you could fool it with Object.create(Foo)

[08:25:39.0000] <Domenic>
(Or with [Symbol.hasInstance], these days.)

[08:26:23.0000] <benjamingr>
Why would you be _that_ defensive about it in the first place?

[08:27:50.0000] <caitp>
fooling instanceof isn't necessarily bad

[08:27:50.0000] <benjamingr>
I'm not being critical, I genuinely don't know where I'd be that defensive

[08:28:00.0000] <caitp>
it's potentially helpful for unit tests

[08:28:29.0000] <benjamingr>
caitp: here's context https://esdiscuss.org/topic/actual-weakset-use-cases

[08:28:35.0000] <caitp>
yes I know, I sent a reply

[08:28:38.0000] <benjamingr>
oh wait, you arleady commented there nvm

[08:28:42.0000] <benjamingr>
*already

[08:29:24.0000] <benjamingr>
caitp: wouldn't that example work with a regular set too?

[08:29:31.0000] <caitp>
well sure

[08:29:36.0000] <benjamingr>
(Domenic 's doesn't since the set outlive the objects)

[08:29:36.0000] <Domenic>
benjamingr: because you could break C++

[08:29:56.0000] <Domenic>
benjamingr: C++ code does stuff like getInternalCppObjectFrom(jsObject)

[08:30:10.0000] <benjamingr>
Domenic: but if it's to guard C++, can't/shouldn't it be done from the C++ side anyway?

[08:30:10.0000] <caitp>
you're right, you could use a plain ol' Set

[08:30:53.0000] <Domenic>
benjamingr: yes, that is how it's currently done. But if you wanted to implement things in JS (which would have its own invariants, e.g. getInternalJSObjectFrom(jsObject)) you'd use WeakSet.

[08:31:01.0000] <caitp>
although theoretically fn() could destroy <object>

[08:31:17.0000] <caitp>
and if it gets collected during iteration, not impossible, you know

[08:32:25.0000] <Domenic>
in general any security-sensitive code that depends on object invariants would use this

[08:32:40.0000] <benjamingr>
Domenic: interesting, in your example you can `.call(myFakeObject)` to add things in - but that's besides the point. I wonder if I can come up with a library example.

[08:32:54.0000] <benjamingr>
If you have existing security critical code that needs this I'd definitely love to see it.

[08:33:07.0000] <Domenic>
benjamingr: like, all of browsers, or anything Mark Miller writes.

[08:33:10.0000] <benjamingr>
caitp: but you still own a reference to the object from the closure - if you had a weakref instead that'd work.

[08:33:14.0000] <Domenic>
benjamingr: what do you mean by .call(myFakeObject)?

[08:33:23.0000] <Domenic>
class constructors aren't callable, remember.

[08:33:34.0000] <benjamingr>
Oh, right, my mistake

[08:33:42.0000] <caitp>
stop using your logic on me :p

[08:33:52.0000] <Domenic>
weakrefs

[08:33:56.0000] <caitp>
yes, Weak isn't really ar equirement for that use case

[08:34:05.0000] <Domenic>
we're going to have SAB, might as well have weakrefs

[08:34:32.0000] <benjamingr>
Domenic: anything mark miller writes is the first place I looked (well, the thesis and recent security papers). I couldn't distill a use case from there I could show.

[08:34:56.0000] <Domenic>
benjamingr: hmm maybe look through the SES source code. He probably uses WeakMap with dummy values.

[08:35:10.0000] <benjamingr>
That's a good idea, I'll do that thanks.

[08:36:13.0000] <benjamingr>
IIRC Mark has that really cool WeakMap shim for SES but doesn't actually use WeakSet

[08:36:44.0000] <Domenic>
Yeah that is my recollection too but it seems quite possible he uses it conceptually while using the actual WeakMap impl.

[08:38:16.0000] <benjamingr>
yes, WeakMap but no WeakSet. Your "guarding against X" example is pretty good though, like having verified objects that were impossible to tinker with. It can be done with a WeakMap easily but then again that's true for every Set and it's still pretty solid.

[11:15:35.0000] <TabAtkins>
Yeah, a set is just a Map where you only ever use .has(), never .get().


2015-06-03
[17:25:49.0000] <MikeSmith>
what does "WAI" mean in the context of a Chrome bug report? https://code.google.com/p/chromium/issues/detail?id=495577#c2

[17:29:34.0000] <TabAtkins>
MikeSmith: "working as intended"

[17:29:57.0000] <MikeSmith>
TabAtkins: ah, OKーthanks

[18:49:35.0000] <MikeSmith>
TabAtkins: about the problem dbaron points out with the stylesheet from that CSS WG draft, I think the only way that could have got added was by Chris or Bert doing it for some reason. So I think the mystery could be solved by asking one of them

[18:50:21.0000] <MikeSmith>
but I agree they shouldn't be adding changes like that without trying to get an OK from editors

[18:52:37.0000] <astearns>
MikeSmith: some public access to the change logs would help

[18:56:05.0000] <MikeSmith>
astearns: true but afaik the only people who have perms to make changes there are people on the W3C staff, and further the only people who would in practice make changes there are Chris and Bert

[18:56:40.0000] <MikeSmith>
yeah, looking at the log there I see Wed May 13 13:07:48 2015 UTC (2 weeks, 6 days ago) by clilley

[18:57:26.0000] <MikeSmith>
but that's just for that one copy of that stylesheet. I don't even know myself where to look for the original and the log for it

[18:58:31.0000] <MikeSmith>
I really don't understand why anybody would want to make the styling in the body of the TR version be different from that of the ED

[18:58:48.0000] <astearns>
agreed

[18:59:38.0000] <MikeSmith>
I guess that's also what TabAtkins was saying in his reply to dbaron. The change is just kind of baffling

[18:59:55.0000] <MikeSmith>
anyway I think it's something for the CSS WG to bring up with Bert and Chris

[19:00:09.0000] <MikeSmith>
it's not a general W3C problem as far as I can see

[19:00:45.0000] <MikeSmith>
not that we don't actually have plenty of other real problems that are general

[19:00:48.0000] <astearns>
the general problem is just the secrecy, I think. You could look into the log and see where the problem cropped up. Anyone should be able to do that

[19:01:29.0000] <MikeSmith>
fair enough but I wouldn't classify it as secrecy

[19:01:37.0000] <MikeSmith>
it's more like bad systems design

[19:01:49.0000] <MikeSmith>
in that we are still using CVS, for one thing

[19:01:53.0000] <astearns>
well, that and whatever pubrules check caused Chris to add the rule trying to fix things

[19:02:44.0000] <MikeSmith>
well the way I deal with that is just to tell the webmaster to back off and/or just ask plh to make them see reason

[19:03:37.0000] <MikeSmith>
btw we do now once again have a webmaster who's way more reasonble than some others have been

[19:04:00.0000] <astearns>
sounds good - who's the new person?

[19:04:14.0000] <MikeSmith>
Denis

[19:04:47.0000] <astearns>
Ah :) Yes, he seems quite reaonable

[19:05:04.0000] <astearns>
(with an s in there somewhere)

[19:05:24.0000] <MikeSmith>
yeah, he's on our side and he's extremely competent and capable

[19:06:18.0000] <MikeSmith>
Denis is also one of the main people who built the new stuff that editors and WGs can use to auto-publish to TR whenever they want as often as they want

[19:06:34.0000] <MikeSmith>
echidna and specberus or whatever they're called

[19:07:03.0000] <astearns>
ah, even better. I haven't tried them out yet, but I like the direction

[19:07:08.0000] <MikeSmith>
yeah

[19:11:42.0000] <MikeSmith>
btw I think the log for that stylesheet is at https://hg.csswg.org/drafts/log/tip/default-TR.css

[19:12:07.0000] <TabAtkins>
MikeSmith: Yeah, I sent an email to w3c-css-wg already asking about it.

[19:12:37.0000] <MikeSmith>
TabAtkins: ah OK

[19:17:20.0000] <MikeSmith>
along with continuing to use CVS and HTTP Basic Auth (over insecure plain-text HTTP even) I wonder what other cutting-edge technologies we can add to the list

[19:18:50.0000] <astearns>
ok, I retract my comment about secrecy. Apparently that problem was just my ignorance

[19:20:54.0000] <MikeSmith>
well to be fair I don't "ignorance" applies since nobody should be expected to figure out on their own how to navigate the multiple levels of arcane cruft involved

[19:21:21.0000] <MikeSmith>
unintentional obscurity

[19:23:56.0000] <MikeSmith>
and to me at least the systems that the CSS WG uses for managing stuff are even more baroque and overengineered than all the rest

[19:26:55.0000] <MikeSmith>
slightlyoff: btw I finally figured out the cause of the "Waiting for available socket" problem I mentioned to you when I was in San Fransisco https://code.google.com/p/chromium/issues/detail?id=495577

[19:27:40.0000] <slightlyoff>
wowza

[19:27:54.0000] <slightlyoff>
also *basic auth* :-/

[19:28:01.0000] <MikeSmith>
yeah :(

[19:28:33.0000] <MikeSmith>
another frozen-in-time W3C systems thing

[19:28:46.0000] <slightlyoff>
but it's interesting this hit me in another context recently

[19:28:52.0000] <MikeSmith>
oh?

[19:29:19.0000] <slightlyoff>
debugging a partner's staging site; basic auth fail in chromium

[19:29:40.0000] <slightlyoff>
likely same root cause

[19:30:14.0000] <MikeSmith>
ah OK

[19:30:14.0000] <slightlyoff>
but yeah, the plural of anecdote isn't data; basic auth needs to die in a fire

[19:30:28.0000] <MikeSmith>
agreed

[19:30:35.0000] <slightlyoff>
/me wonders if we have a usecounter

[19:31:04.0000] <MikeSmith>
if you don't have a usecounter for it yet please try to get one added

[19:31:19.0000] <MikeSmith>
because I can't think of one single other place where I ever use basic auth

[19:32:38.0000] <MikeSmith>
/me wonders what the equivalent of "outlier" in the sense of doing something that nobody else does because they all already realize it's not a smart thing to do

[20:10:22.0000] <MikeSmith>
github is apparently using web sockets for something. I wonder what

[01:48:42.0000] <mathiasbynens>
TIL: “No, WHATWG is not the organization we should use for anything.” http://stackoverflow.com/q/30526880/96656#comment49254637_30569669

[01:54:53.0000] <darobin>
mathiasbynens: you engaged in a discussion with someone who quotes from RFCs, you get what you deserve ;-)

[02:00:04.0000] <espadrine>
> You advised to use WHATWG specs for anything

[02:00:07.0000] <espadrine>
> The WHATWG URL Standard is the one reference you should use for anything

[02:00:11.0000] <espadrine>
yeah

[05:11:34.0000] <MikeSmith>
OH: pretty sure "Frederik Krautwald" is an anagram for "asshat" in German

[05:13:34.0000] <ondras>
:}

[05:15:35.0000] <MikeSmith>
"WHATWG only addresses URLs in respect to the Web." ...

[05:16:14.0000] <MikeSmith>
as opposed to the myriad other places where URLs have any relevance

[05:18:51.0000] <MikeSmith>
holy christ I just now see my own stackoverflow score and find I got +500 from somewhere somehow recently

[05:18:55.0000] <MikeSmith>
what the hell

[05:37:56.0000] <darobin>
MikeSmith: SO scores are weird

[05:38:15.0000] <darobin>
I've answered maybe five questions and I'm at the 51th percentile

[06:27:16.0000] <TabAtkins>
Over 90% of my SO score comes from two CSS questions I answered years ago. People upvote them every few days.

[06:30:00.0000] <Domenic>
I did SO for years to get to like 20K and since then have coasted on upvotes to get me to 50K

[06:30:35.0000] <Domenic>
These days I'm just making sure I stay in the top 1000

[06:39:26.0000] <MikeSmith>
can anybody imagine why I would have used `if (path.matches("^http:/[^/].+$"))` instead of just `startsWith("http://")`

[06:39:47.0000] <MikeSmith>
context is https://github.com/mariusj/validator/commit/4e7d409e00291d6c83bdb1d471a1a28414053d0d

[06:40:01.0000] <MikeSmith>
I'd like to think I must have had some good reason

[06:42:55.0000] <TabAtkins>
MikeSmith: Becuase you're specifically *not* looking for things that start with http:// ?

[06:43:12.0000] <TabAtkins>
That regex finds anything that starts with "http:/", then *doesn't* have a second slash.

[06:43:39.0000] <TabAtkins>
Tho why you used ".+$" on a .matches() call is still a mystery.

[06:44:41.0000] <MikeSmith>
yeah..

[06:44:59.0000] <MikeSmith>
it might help if I had actually written any unit tests

[06:45:13.0000] <MikeSmith>
and/or comments

[06:48:13.0000] <halfline>
that's a weird thing to check for

[06:48:45.0000] <halfline>
why is "http:/frog" interesting but "blog:/frog" not interesting ?

[06:49:17.0000] <halfline>
seems like !startsWith("http://") is a more useful check in general

[06:53:25.0000] <MikeSmith>
yeah I'm equally baffled

[07:11:57.0000] <darobin>
that code makes no sense

[07:12:57.0000] <darobin>
MikeSmith: it looks like you were working around a Java bug

[07:13:18.0000] <darobin>
or at least a bug in whatever that File class is

[07:13:24.0000] <MikeSmith>
yeah I now vaguely recall that being the reason

[07:13:32.0000] <darobin>
in which it returned broken paths

[07:13:40.0000] <MikeSmith>
yup

[07:14:12.0000] <MikeSmith>
it elides multiple concurrent slashes I think

[07:14:19.0000] <darobin>
lovely

[07:14:32.0000] <MikeSmith>
or rathers, changes them into single slashes

[07:14:34.0000] <darobin>
but that doesn't explain why you copypasted the same code for http and https :)

[07:14:47.0000] <darobin>
or the .+$

[07:14:54.0000] <darobin>
that's probably the alcohol

[07:15:11.0000] <MikeSmith>
yeah what I'm doing with the code to begin with is basically a cludge to begin with

[07:15:21.0000] <darobin>
well it's Java

[07:15:51.0000] <MikeSmith>
and yeah pretty much given that it there was some alcohol involved

[07:15:52.0000] <darobin>
hacker's gotta do what a hacker's gotta do

[07:16:29.0000] <MikeSmith>
to paraphrase Antti Koivisto: Never code Java sober

[14:28:32.0000] <TabAtkins>
annevk: I finally deciphered what was going wrong with Document linking, and fixed it in Bikeshed.  (Or rather, isolated the problem and solved it hackily for now.)


2015-06-04
[17:24:16.0000] <TabAtkins>
Domenic: Do you use Bikeshed's piping features?

[17:32:43.0000] <MikeSmith>
in Mozilla bug reviews, what is rs=me

[17:35:47.0000] <heycam>
rubberstamp

[17:35:57.0000] <heycam>
a review without closely at the patch

[17:42:47.0000] <MikeSmith>
heycam: ah ok, thanks

[01:29:35.0000] <MikeSmith>
is location.assign(location.hash) is reasonable workaround to force navigation to the right anchor

[01:30:19.0000] <MikeSmith>
in a case where other script from a page is causing it to fail to scroll to the right place

[01:32:23.0000] <MikeSmith>
/me is trying to troubleshoot a buggy document and would prefer to workaround it rather than wade through its gobs of jquery-based script trying to figure out what's preventing it from scrolling to the expected anchor

[02:03:40.0000] <jgraham>
MikeSmith: Web development advice? Tried #html-wg? ;)

[02:06:31.0000] <darobin>
hahahaha

[02:06:55.0000] <darobin>
MikeSmith: I'm not sure that'll work if the browser thinks it's already at the hash, no?

[02:08:48.0000] <darobin>
MikeSmith: this is how it's solved in ReSpec https://github.com/w3c/respec/blob/develop/js/core/location-hash.js

[02:25:20.0000] <MikeSmith>
/me looks

[02:28:42.0000] <darobin>
MikeSmith: that code does some tricks to detect whether the user has already scrolled during load (so as not to re-scroll them back to the anchor)

[02:28:45.0000] <darobin>
you might not need that

[02:29:05.0000] <darobin>
but the heart of the trick is to unset location.hash, then set it again

[02:29:22.0000] <darobin>
IIRC nothing else worked, at least when that code was written

[02:31:37.0000] <MikeSmith>
darobin: The location.assign(location.hash) way does work for me in my problem case, which is: location.hash does already have the right value (the anchor I want to scroll to) but other existing  (broken) script on the page has caused it to scroll to the wrong place

[02:32:16.0000] <darobin>
MikeSmith: it's quite possible that the code I'm pointing you to was written to address a browser that is no longer an issue

[02:40:12.0000] <MikeSmith>
jgraham: you're getting more like Ms2ger in your old age

[02:40:29.0000] <Ms2ger>
Get off our lawn

[02:40:44.0000] <jgraham>
Maybe I am Ms2ger

[02:41:04.0000] <MikeSmith>
or maybe y'all are actually twin brothers separated at birth

[02:41:06.0000] <Ms2ger>
Has anyone ever seen us in the same room anyway?

[02:41:41.0000] <MikeSmith>
I did, in a dream

[02:41:51.0000] <MikeSmith>
I won't go into the details

[02:42:03.0000] <Ms2ger>
tmi already

[02:42:12.0000] <MikeSmith>
heh

[04:40:15.0000] <MikeSmith>
darobin: in https://lists.mozilla.org/pipermail/dev-platform/2015-June/010235.html you must mean linked data is deployed to millions of *pages*, right? (not millions of domains)

[04:58:31.0000] <darobin>
MikeSmith: no, domains

[04:58:43.0000] <darobin>
counting pages is pretty useless

[04:58:51.0000] <darobin>
some of those sites have infinite URL spaces

[04:59:15.0000] <darobin>
I have it on very good authority, I didn't include the source because I'm not sure that I can quote it

[05:00:31.0000] <darobin>
MikeSmith: search engines and social networks do useful stuff with that, it's not surprising that it's successful

[05:00:36.0000] <darobin>
there's a huge incentive

[05:49:45.0000] <MikeSmith>
darobin: so yeah I see that https://schema.org/ says "Over 10 million sites use Schema.org to markup their web pages and email messages."

[05:50:23.0000] <MikeSmith>
(dunno how a site can use it mark up email messages though)

[05:51:21.0000] <MikeSmith>
I also see that Guha said back at the end of 2013, "about 15 percent of the pages we crawl have schema.org markup... Now over 5 million sites are using it."

[05:51:29.0000] <MikeSmith>
http://www.dataversity.net/schema-org-chat-googles-r-v-guha/

[05:52:32.0000] <MikeSmith>
still I count that as a success measure specifically for schema.org rather than for Linked Data in general

[05:52:44.0000] <darobin>
MikeSmith: there you go

[05:52:52.0000] <darobin>
MikeSmith: FYI it was 7 million at TPAC

[05:53:14.0000] <MikeSmith>
yeah clearly it's still growing

[05:55:06.0000] <MikeSmith>
darobin: also 10 million sites is still only 3% or 4% of the sites on the Web, right?

[05:55:32.0000] <darobin>
MikeSmith: yeah, but it's not a random 10 million, most are from the top destinations

[05:55:38.0000] <MikeSmith>
sure

[05:56:26.0000] <darobin>
MikeSmith: re email, it does stuff in GMail (and some other clients)

[05:56:34.0000] <darobin>
I'm sure Google can measure that :)

[05:57:07.0000] <darobin>
in fact it's the only way of adding interactivity to email, so that's another big incentive

[07:23:29.0000] <Domenic>
TabAtkins: I do not think I use Bikeshed's piping features.

[10:55:21.0000] <TabAtkins>
Domenic: Cool, no problem then. Pretty sure krit is the only person who is. Just turning off the auto-piping, as it's a misfeature.


2015-06-06
[17:25:32.0000] <JonathanNeal>
After reviewing the ARIA roles for menu and menubar, I don’t understand the usecase for menubar. That it would be laid horizontally seems moot to its purpose. Can someone explain its purpose?

[17:32:22.0000] <MikeSmith>
wow Andreas Gal has left Mozilla

[18:15:04.0000] <caitp->
entering the internet of things space in order to find ways to sell more data about you

[18:35:36.0000] <MikeSmith>
I'll pyt that

[18:35:55.0000] <MikeSmith>
*buy

[20:50:39.0000] <deltab>
JonathanNeal: I guess it's because 1) orientation affects which cursor keys you use; 2) a menubar usually has a dedicated space whereas other menus are transitory; 3) a menu typically will take keyboard input automatically when visible, whereas activating a menubar's options needs another step


2015-06-07
[06:16:09.0000] <MojoTheOnlyGod>
H

[06:16:11.0000] <MojoTheOnlyGod>
E

[06:16:12.0000] <MojoTheOnlyGod>
J

[06:16:13.0000] <MojoTheOnlyGod>
Bx

[06:16:14.0000] <MojoTheOnlyGod>
T

[06:16:14.0000] <MojoTheOnlyGod>
V

[06:16:15.0000] <MojoTheOnlyGod>
B

[06:16:15.0000] <MojoTheOnlyGod>
J

[06:16:16.0000] <MojoTheOnlyGod>
J

[06:16:16.0000] <MojoTheOnlyGod>
Z

[06:16:17.0000] <MojoTheOnlyGod>
H

[06:16:17.0000] <MojoTheOnlyGod>
U

[06:16:17.0000] <MojoTheOnlyGod>
U

[06:16:18.0000] <MojoTheOnlyGod>
U

[06:16:18.0000] <MojoTheOnlyGod>
8

[06:16:19.0000] <MojoTheOnlyGod>
U

[06:16:19.0000] <MojoTheOnlyGod>
Z

[06:16:20.0000] <MojoTheOnlyGod>
H

[06:16:20.0000] <MojoTheOnlyGod>
J

[06:16:21.0000] <MojoTheOnlyGod>
U

[06:16:31.0000] <MojoTheOnlyGod>
U

[06:16:32.0000] <MojoTheOnlyGod>
U

[06:16:32.0000] <MojoTheOnlyGod>
7

[06:16:33.0000] <MojoTheOnlyGod>
U

[06:16:33.0000] <MojoTheOnlyGod>
J

[06:16:34.0000] <MojoTheOnlyGod>
7

[06:16:34.0000] <MojoTheOnlyGod>
U

[06:16:35.0000] <MojoTheOnlyGod>
U

[06:16:35.0000] <MojoTheOnlyGod>
J

[06:16:36.0000] <MojoTheOnlyGod>
T

[06:16:36.0000] <MojoTheOnlyGod>
H

[06:16:37.0000] <MojoTheOnlyGod>
H

[06:16:37.0000] <MojoTheOnlyGod>
H

[06:16:38.0000] <MojoTheOnlyGod>
H

[06:16:38.0000] <MojoTheOnlyGod>
H

[06:16:39.0000] <MojoTheOnlyGod>
H

[06:16:49.0000] <MojoTheOnlyGod>
Fuf

[06:16:51.0000] <MojoTheOnlyGod>
Guguc

[06:18:07.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:11.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:13.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:14.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:18.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:20.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:22.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:24.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:25.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:27.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:29.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:30.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:32.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:33.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:36.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:37.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:39.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:40.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:42.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:43.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:47.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:48.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:50.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:51.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:18:54.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:30.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:32.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:33.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:34.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:36.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:37.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:39.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:40.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:43.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:44.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:46.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:48.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:49.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:51.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:52.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:54.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:55.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:56.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:22:58.0000] <MojoTheOnlyGod>
https://www.facebook.com/ad.lingers

[06:23:04.0000] <Ms2ger>
Get lost

[06:25:08.0000] <SolidBird>
https://www.facebook.com/ad.lingers

[06:25:09.0000] <SolidBird>
https://www.facebook.com/ad.lingers

[06:25:11.0000] <SolidBird>
https://www.facebook.com/ad.lingers

[06:25:12.0000] <SolidBird>
https://www.facebook.com/ad.lingers

[06:25:14.0000] <SolidBird>
https://www.facebook.com/ad.lingers

[06:25:15.0000] <SolidBird>
https://www.facebook.com/ad.lingers

[06:25:17.0000] <Ms2ger>
Oh please

[06:25:17.0000] <SolidBird>
https://www.facebook.com/ad.lingers

[06:25:18.0000] <SolidBird>
https://www.facebook.com/ad.lingers

[06:27:20.0000] <Ms2ger>
Bye again

[06:32:30.0000] <Solomon>
https://www.facebook.com/ad.lingers

[06:32:45.0000] <Solomon>
https://www.facebook.com/ad.lingers

[06:37:29.0000] <Guest26320>
thx


2015-06-08
[01:58:22.0000] <JakeA>
Domenic: ping me when you're awake, we should start thinking about cancellable promises again

[06:51:04.0000] <Domenic>
JakeA: awake, but commuting/breakfasting for the next hour-ish

[06:52:17.0000] <JakeA>
Domenic: no rush, still catching up stuff too. I imagine the next step of the plan is investigate bluebird, but I'd like your take on it. Ping me when you're free.

[06:54:21.0000] <wanderview>
JakeA: maybe the SW f2f date got finalized in person or something?  last email I have is from May 1

[06:55:57.0000] <JakeA>
wanderview: hmm, you're right, slightlyoff mentioned that date, but it was internal. Will hold off on flight bookings.

[06:56:00.0000] <JakeA>
Cheers!

[06:56:16.0000] <wanderview>
well, someone has to just pick a date sometime :-)

[06:56:41.0000] <wanderview>
July 20 works for me

[06:57:21.0000] <wanderview>
at least when the robots take over the AI should do a better job of meeting scheduling

[09:22:05.0000] <jgraham>
Hmm, so I'm looking at script executionm in WebDriver. I have an ES Function (from "Create a Function Object"), but it isn't really clear to me if I can just call [[Call]] on it, or if I need to do something with creating a script setting a code entry point and then jumping to that code entry point

[09:22:56.0000] <Ms2ger>
Probably the latter

[09:24:23.0000] <jgraham>
This is what I fear

[09:27:21.0000] <jgraham>
It seems like the existing machinary for actually invoking a function like that is defined in WebIDL

[09:37:23.0000] <Ms2ger>
jgraham, is this servo?

[09:58:33.0000] <jgraham>
Ms2ger: No, it's the spec

[09:58:41.0000] <Ms2ger>
Oh

[09:58:50.0000] <Ms2ger>
Yeah, use IDL abstractions always

[09:59:46.0000] <jgraham>
Right, but there isn't actually a DOM API involved anywhere :)

[10:13:56.0000] <jgraham>
Yeah, it pretty much feels like WebIDL isn't the right thing here since it does a bunch of converting to IDL types that I really don't want

[11:42:05.0000] <Domenic>
I don't think IDL actually handles globals and executoin contexts anyways... that's one of the big open issues

[11:49:47.0000] <bradleymeck>
i think that may be a bit difficult if you are wanting languages to be agnostic

[11:49:58.0000] <bradleymeck>
to be language agnostic*

[11:50:53.0000] <Domenic>
nobody wants that

[11:51:43.0000] <bradleymeck>
at one time Java was tracking DOM APIs /shrug

[12:35:40.0000] <wanderview>
Domenic: whatever happened to the wrapper alternative?

[12:43:06.0000] <TabAtkins>
bradleymeck: WebIDL stopped trying to be language-agnostic years ago, tho. It's just a JS description language now.

[13:40:08.0000] <jgraham>
Hixie: You around? Do you know the answer to my script-injection question above?


2015-06-09
[21:13:48.0000] <MikeSmith>
The Bloomberg site has a pretty cool way of handling page transitions as you scroll vertically

[21:14:00.0000] <MikeSmith>
e.g., starting at http://www.bloomberg.com/politics/articles/2015-06-08/donald-rumsfeld-george-w-bush-was-wrong-about-iraq

[21:14:55.0000] <MikeSmith>
which as you scroll past the end of that article transitions to the next one at http://www.bloomberg.com/politics/articles/2015-06-09/inidian-prime-minister-s-despite-being-a-woman-remark-sparks-backlash

[21:15:09.0000] <MikeSmith>
then from that to http://www.bloomberg.com/politics/articles/2015-06-09/bono-and-bill-clinton-denver-gets-a-power-lunch

[21:15:12.0000] <MikeSmith>
etc

[21:15:22.0000] <MikeSmith>
I wonder how many other sites are doing this

[21:15:38.0000] <boogyman>
I believe that's called the infinite scroll

[21:16:23.0000] <MikeSmith>
boogyman: no it's not

[21:16:27.0000] <MikeSmith>
not in the normal sense

[21:16:41.0000] <MikeSmith>
in the normal sense the URL for the page stays the same

[21:17:17.0000] <MikeSmith>
which is why many people rightly don't like infinite scroll

[21:18:09.0000] <boogyman>
ah, so they are using the History API to push the new article onto the stack.

[21:24:52.0000] <MikeSmith>
boogyman: yeah

[21:25:17.0000] <MikeSmith>
but I remember there was some other proposed API for facilitating this

[21:25:23.0000] <MikeSmith>
/me searches

[21:26:45.0000] <MikeSmith>
I find https://docs.google.com/document/d/17jg1RRL3RI969cLwbKBIcoGDsPwqaEdBxafGNYGwiY4/edit#heading=h.pcll678prpwu

[21:26:56.0000] <MikeSmith>
but I think that's not what I had remembered

[21:29:37.0000] <MikeSmith>
http://www.androidpolice.com/2014/11/20/chromes-upcoming-navigation-transitions-api-will-make-the-web-animate-and-flow-like-material-design-in-android/

[21:30:07.0000] <MikeSmith>
but then something more recent from Chris Lord that actually looks a lot better: http://chrislord.net/index.php/2015/04/24/web-navigation-transitions/

[21:30:36.0000] <boogyman>
dang, i haven't seen these.

[21:32:38.0000] <MikeSmith>
https://www.chromestatus.com/features/5169444246519808 entry for "Navigation Transitions" says "No longer pursuing"

[21:33:41.0000] <MikeSmith>
it looks like the code was implemented in blink but then removed last month

[21:34:02.0000] <MikeSmith>
https://code.google.com/p/chromium/issues/detail?id=370696#c86

[23:58:04.0000] <annevk>
So I got two password reset emails from wordpress.com...

[00:10:54.0000] <MikeSmith>
hey annevk

[00:11:06.0000] <MikeSmith>
that's double protection I guess

[00:11:44.0000] <annevk>
I wonder if I should be worried

[00:12:07.0000] <MikeSmith>
I guess you should always be worried if you're using wordpress

[00:12:20.0000] <MikeSmith>
seriously

[00:12:33.0000] <MikeSmith>
it seems like multiple accidents waiting to happen

[00:14:41.0000] <MikeSmith>
annevk: anyway, the other day when we were talking about one of those tweets in Japanese about WHATWG, do you remember one being about stuff to enable sites to smoothly transition between different documents?

[00:15:07.0000] <MikeSmith>
in the context of single-page-app kind of user experiences

[00:15:44.0000] <annevk>
I don't really...

[00:15:48.0000] <MikeSmith>
oh

[00:15:58.0000] <MikeSmith>
ah well

[00:16:20.0000] <annevk>
I did figure out what https://twitter.com/hail2u_/status/604693350445285376 was about

[00:16:20.0000] <MikeSmith>
anyway I was trying to remember if anybody had ever properly specced out anything about it

[00:16:28.0000] <MikeSmith>
oh

[00:16:31.0000] <annevk>
Apparently HTML and that game use a bunch of terms that are similar

[00:16:37.0000] <annevk>
Such as "element"

[00:16:42.0000] <MikeSmith>
hah

[00:16:48.0000] <MikeSmith>
well

[00:17:00.0000] <MikeSmith>
chemistry uses "element" too

[00:17:52.0000] <annevk>
"attribute" too apparently

[00:20:08.0000] <MikeSmith>
annevk: when you have minute please look at http://www.bloomberg.com/politics/articles/2015-06-08/donald-rumsfeld-george-w-bush-was-wrong-about-iraq and scroll down past the end of the first article

[00:20:31.0000] <MikeSmith>
or see http://krijnhoetmer.nl/irc-logs/whatwg/20150609#l-128 for the context

[00:21:13.0000] <MikeSmith>
the seem to have put a pretty nice user experience around navigation transitions from one document/article to the next

[00:21:31.0000] <MikeSmith>
maybe there are other sites that are doing this well now, I dunno

[00:21:34.0000] <annevk>
“I am happy that Bangladesh Prime Minister, despite being a woman, has declared zero tolerance for terrorism.” o_O

[00:21:41.0000] <MikeSmith>
heh

[00:22:17.0000] <annevk>
Oooh, they change the URL too, pretty cool

[00:22:22.0000] <MikeSmith>
yeah

[00:22:26.0000] <annevk>
Now they need to add some HTTPS

[00:22:31.0000] <MikeSmith>
well yeah

[00:22:38.0000] <MikeSmith>
baby steps

[00:22:51.0000] <MikeSmith>
it would be nice to hear from the developers how they are doing that

[00:23:07.0000] <MikeSmith>
and if there are others doing it well now

[00:23:20.0000] <MikeSmith>
and then maybe pave some cowpath there

[00:24:03.0000] <MikeSmith>
because the Google-led "Navigation Transitions" thing that the implemented in blink seems to have not been a technical success

[00:24:19.0000] <MikeSmith>
since they yanked all the code for it least month

[00:25:04.0000] <MikeSmith>
Chris Lord's proposal at http://chrislord.net/index.php/2015/04/24/web-navigation-transitions/ looks sane

[01:13:28.0000] <annevk>
I remember both not making much sense to me

[01:13:54.0000] <annevk>
Ah, Chris updated his post with my suggestion

[01:14:14.0000] <annevk>
Though not all the text...

[02:30:01.0000] <jgraham>
annevk: Do you know enough to help with the script execution problems I have? Specifically I am speccing a process that has a Window object, a string representing a function body, and an array of arguments, and I want to correctly get the effect of something like "var fn = new Function($body); fn.prototype.apply($window, $args)" i.e. construct a function object from the body and execute it with the provided args with window as the this object in the

[03:00:08.0000] <annevk>
jgraham: I guess you could look at what event handlers did

[03:00:15.0000] <annevk>
jgraham: I think you basically want to talk to bz though

[03:01:13.0000] <jgraham>
annevk: So I basically copied what event handlers did so far, but then to actually run the script they call some WebIDL algorithm that does conversion to IDL types, which is unfortunately more than I want

[03:02:26.0000] <annevk>
jgraham: I guess you could call directly to some ES-defined algorithm

[03:02:37.0000] <annevk>
jgraham: if you don't work with IDL that's sort of what you have to do

[03:02:47.0000] <annevk>
jgraham: though then you need to security checks and such yourself too

[03:02:57.0000] <annevk>
jgraham: at which point you want to talk to bz

[03:03:26.0000] <jgraham>
Yeah, so I wondered if I could just call [[Call]] but it wasn't clear to me that would actually specify execution in the right global

[03:04:27.0000] <annevk>
You probably need a little more, but I'm also lacking some context so I'm not sure

[03:05:13.0000] <jgraham>
annevk: The context is that I'm trying to rewrite https://w3c.github.io/webdriver/webdriver-spec.html#executescript to be less wrong

[03:05:28.0000] <jgraham>
/me -> train

[03:23:34.0000] <annevk>
jgraham: I guess you want to study how eval() works and copy that?

[03:58:32.0000] <jgraham>
annevk: So I think the thing I fundamentally don't understand is which bits that are in HTML but aren't in ES I need (the script settings object &c.)

[04:00:20.0000] <jgraham>
http://hoppipolla.co.uk/410/webdriver-spec/webdriver-spec.html#executescript is what I wrote so far

[04:03:14.0000] <jgraham>
(step 6 is known to be wrong, but not in a relevant way)

[04:17:16.0000] <smaug____>
annevk: dglazkov: I wonder how we should proceed with shadow DOM. Has the "3 champions" perhaps discussed something privately, and will have a proposal? (I still think imperative API should be the v1 solution)

[04:18:00.0000] <smaug____>
but I wouldn't be surprised if simple slots based approach will be used

[04:38:12.0000] <annevk>
jgraham: script settings object is 1:1 with global object iirc

[04:38:49.0000] <annevk>
jgraham: but as others have said there's some missing bits in IDL and HTML, and perhaps in ES

[04:43:11.0000] <annevk>
hmm, smaug left

[04:53:33.0000] <annevk>
TabAtkins: I need some help with that typing of <dfn>

[04:53:47.0000] <annevk>
TabAtkins: I have the feeling rubys did it wrong for URL

[04:54:12.0000] <annevk>
TabAtkins: with lt="URL query" rather than something about the type being a URL, and query just being the term

[05:37:46.0000] <annevk>
TabAtkins: also see https://github.com/whatwg/dom/issues/39#issuecomment-110343254

[05:53:05.0000] <Sebmaster>
annevk: am i reading the TR46 spec correctly, in that it doesn't have as many requirements for valid labels as the IDNA2008 spec?

[05:56:31.0000] <annevk>
Sebmaster: yeah

[05:56:39.0000] <annevk>
Sebmaster: browsers use IDNA2003

[05:56:48.0000] <annevk>
(roughly)

[05:57:01.0000] <Sebmaster>
great :/, so the idna test data doesn't have to necessarily pass?

[05:57:15.0000] <annevk>
Sebmaster: I think the IDNA test data is correct per browsers

[05:57:23.0000] <Sebmaster>
oh, hrm

[05:57:40.0000] <annevk>
Sebmaster: and TR46 does have a non-transitional mode that should match IDNA2008

[05:57:46.0000] <Sebmaster>
then i may have bugs in my implementation

[05:57:49.0000] <annevk>
but URL doesn't use it

[05:57:51.0000] <Sebmaster>
oh yeah, tr46 is weird

[05:57:57.0000] <Sebmaster>
it uuh

[05:58:08.0000] <Sebmaster>
describes something impossible for conformance tests

[05:58:11.0000] <Sebmaster>
but maybe i read it wrong

[05:58:42.0000] <annevk>
it's not a great writeup, but it's somewhat better now than before

[05:58:51.0000] <Sebmaster>
http://www.unicode.org/reports/tr46/#Format

[05:58:56.0000] <Sebmaster>
see toASCII vs toUnicode

[05:59:21.0000] <Sebmaster>
toUnicode in the tests says it accepts the processing_option

[05:59:34.0000] <Sebmaster>
but the implementation further up defines processing_option only for toASCII

[05:59:47.0000] <Sebmaster>
i think the test descriptions are switched around there

[06:01:35.0000] <annevk>
ToUnicode always sets the processing_option to NonTransitional it seems

[06:02:02.0000] <annevk>
not sure if that matches browsers, hmm

[06:02:08.0000] <annevk>
I thought this was somewhat different before

[06:02:17.0000] <Sebmaster>
yeah but the conformance description says ToUnicode should accept the processing_option given in the first cell

[06:02:25.0000] <annevk>
I might not have reviewed ToUnicode closely enough

[06:02:35.0000] <annevk>
browsers generally use ToASCII

[06:02:45.0000] <annevk>
only for display is ToUnicode used

[06:03:03.0000] <Sebmaster>
my issues is just with the conformance test description

[06:03:42.0000] <Sebmaster>
when i switched the two processing_options around (i.e. apply the given processing_option to toASCII) and always use nontransitional for unicode it seems to pass more tests

[06:04:14.0000] <Sebmaster>
the conformance test section doesn't match the implementation parameters, is what i'm saying

[06:04:43.0000] <Sebmaster>
no idea yet with regards to if the implementation itself is described perfectly

[06:35:33.0000] <annevk>
Sebmaster: you should give Unicode feedback

[06:35:53.0000] <annevk>
Sebmaster: and document somewhere that you did, since their archiving is poor

[06:36:03.0000] <annevk>
Sebmaster: e.g. by emailing www-archive⊙wo your feedback

[06:36:05.0000] <Sebmaster>
i have no idea where to go, so you were the first that came to mind

[06:36:29.0000] <annevk>
http://www.unicode.org/reporting.html unfortunately...

[06:37:05.0000] <annevk>
Mark Davis tells me to use that form and they seem to process those comments

[06:42:40.0000] <Sebmaster>
okay, will do

[06:43:14.0000] <annevk>
Sebmaster: ta

[06:43:22.0000] <annevk>
TabAtkins: https://github.com/tabatkins/bikeshed/issues/403 still not fixed afaict

[06:43:48.0000] <annevk>
TabAtkins: force=Document that is

[06:43:57.0000] <annevk>
TabAtkins: Document still links to HTML

[07:12:36.0000] <wanderview>
JakeA: s/CookieContainer/CookieJar/g

[07:14:10.0000] <JakeA>
hah, yeep

[07:14:26.0000] <wanderview>
thats my significant contribution for today

[07:14:33.0000] <wanderview>
/me goes back to bed

[07:14:34.0000] <JakeA>
:D

[07:14:57.0000] <JakeA>
S'ok, my brain is broken reading https://github.com/petkaantonov/bluebird/issues/415

[07:32:06.0000] <annevk>
/me wonders if Domenic is following the promise changes on es-discuss

[08:05:29.0000] <Domenic>
I am mostly ignoring them, they go into weird territory quickly

[08:37:33.0000] <awal>
hello

[08:43:22.0000] <MikeSmith>
TabAtkins: I'm guessing the mysql "Too many connections" at https://drafts.csswg.org/ is something only Peter has access to fix and he's probably not online yet?

[08:43:51.0000] <awal>
I am sorry I don't know where else to ask this, but https://developer.chrome.com/devtools/docs/commandline-api#additional-apis this page describes that we can hook extra functions to the __commandLineAPI object and links to the extension https://chrome.google.com/webstore/detail/debug-utils/djailkkojeahmihdpcelmmobkpepmkcl?utm_source=chrome-app-lau

[08:43:51.0000] <awal>
ncher-info-dialog but it doesn't seem to be working as expected. It exposes the debugUtils object to the window scope as well. Is this intended behavior? How can I add functions for the console scope only?

[08:44:55.0000] <awal>
cc paul_irish ^ (sorry for random ping but someone told me I can ping you here for devtools related questions)

[08:45:26.0000] <MikeSmith>
awal: you might have better luck asking in #chromium-support

[08:45:59.0000] <awal>
MikeSmith: ok thanks! :)

[08:51:39.0000] <JonathanNeal>
In the small event someone wants to check it out or test it, I wrote a pretty small DOM4 query polyfill this morning that won’t modify the DOM or add to the query selector to accomplish the task. Not that size matters these days, but I’ve scoped it out to be roughly 603bytes minified+gzipped https://gist.github.com/jonathantneal/446aea88f6d49b665dcc

[08:52:19.0000] <JonathanNeal>
It would probably be even smaller if I cut out the IE8 support, too.

[09:02:12.0000] <Domenic>
I wonder what a DOM4 is

[09:08:00.0000] <annevk>
It's a thing I coined at some point when I didn't know better

[09:08:22.0000] <annevk>
And it stuck :-(

[09:09:00.0000] <tantek>
sounds legit

[09:11:23.0000] <annevk>
Well W3C put a sticker on it, so I guess it is

[09:12:09.0000] <awal>
where to get the sticker

[09:12:20.0000] <Domenic>
only streams and html have stickers so far

[09:14:39.0000] <annevk>
Streams does?

[09:14:48.0000] <annevk>
Oh, you're talking actual stickers

[09:14:56.0000] <annevk>
:-)

[09:15:28.0000] <Domenic>
:)

[09:32:05.0000] <MikeSmith>
we're actually already at DOM 4.1 at the W3C

[09:32:46.0000] <MikeSmith>
I even made a logo for it http://emidius.mi.ingv.it/pictures/logo_DOM4.gif

[09:33:31.0000] <MikeSmith>
the caption translates as Chill Data is Illin'

[09:33:33.0000] <annevk>
MikeSmith: nice find, though I'd like a 4.01

[09:34:24.0000] <MikeSmith>
we can back-formate 4.01 later

[09:34:29.0000] <MikeSmith>
good brainstorming

[09:34:50.0000] <annevk>
jetlag is great for that

[09:34:57.0000] <MikeSmith>
heh

[09:35:43.0000] <annevk>
woohoo, GitHub down to zero unread

[09:35:49.0000] <annevk>
if I missed something, let me know

[09:36:06.0000] <annevk>
tomorrow the remaining emails and Bugzilla

[10:12:20.0000] <Domenic>
It's good to have you back!! :)

[10:25:35.0000] <Domenic>
annevk: JakeA: are cookies multimaps?

[10:26:28.0000] <JakeA>
Domenic: I believe the cookie name is a unique id, if that's what you're asking

[10:26:46.0000] <Domenic>
Hmm I am not entirely sure what I'm asking

[10:27:16.0000] <JakeA>
:D

[10:27:40.0000] <Domenic>
I guess can you have multiple values for the same cookie ID

[10:29:04.0000] <boogyman>
If I remember correctly some browser implementations differentiate secure only and http cookie definitions with the same id

[10:29:22.0000] <Domenic>
gross

[10:30:34.0000] <JakeA>
I wonder what happens if a subdomain tries to set a cookie with name "hello", when there's already a cookie named "hello" for all subdomains

[10:30:53.0000] <JakeA>
Whoa, I know nothing about cookies

[10:31:16.0000] <boogyman>
JakeA: be happy that SW don't send creds by default

[10:31:35.0000] <JakeA>
:D

[10:56:30.0000] <Domenic>
Is it just me or is [NewObject] kind of silly? It feels like there are lots of places that return new objects each time that don't use it...

[11:02:51.0000] <TabAtkins>
annevk: There are a few ways you can do a definition like that.  Having a nice, descriptive linking term like "URL query" is actually pretty good.  You can then use local-lt="query" to let yourself link to it with a shorter word in the spec.  Or, yeah, <dfn for=URL>query</dfn> also works.  I don't have a best practices for this kind of thing yet.

[11:10:01.0000] <TabAtkins>
annevk: I'm very curious as to what you're looking at that makes you think that Document is still linking to HTML.

[11:19:08.0000] <annevk>
Domenic: not sure, see the RFC?

[11:19:35.0000] <annevk>
Domenic: [NewObject] can help JIT iirc and is basically a check to see if specification authors paid attention

[11:20:10.0000] <annevk>
TabAtkins: https://dom.spec.whatwg.org/#interface-document after "interface" it says "Document", that links to HTML

[11:20:44.0000] <TabAtkins>
annevk: ...no it doesn't.

[11:21:04.0000] <TabAtkins>
Are you still looking at a cached version?

[11:21:23.0000] <annevk>
o_O

[11:21:28.0000] <annevk>
I guess I was

[11:21:35.0000] <TabAtkins>
lol

[11:21:44.0000] <annevk>
That never happens...

[11:22:42.0000] <TabAtkins>
Except when it's most embarrassing.

[11:22:59.0000] <annevk>
Right, sorry about that

[11:23:05.0000] <TabAtkins>
It's okay!

[11:23:18.0000] <annevk>
So I can remove Document from "ignored terms" I guess?

[11:23:45.0000] <TabAtkins>
Yeah

[11:24:07.0000] <TabAtkins>
(That just suppresses the linking warnings telling you that there are two plausible targets.)

[11:24:12.0000] <stakagi>
TabAtkins:I would like to use a suitable iframe external resource according to media query list for mapping use case's level of detail functionality. Can I use picture element or its variant in the future?

[11:24:52.0000] <annevk>
Guess I should look into the URL stuff a bit more, looks a bit messy to me at the moment

[11:24:57.0000] <TabAtkins>
Next step is for me to implement the "obsoletes" attribute so DOM can declare that it wins over the HTML and SVG dfns.  (The HTML one is extra annoying, since it's just a link to DOM.)

[11:25:51.0000] <TabAtkins>
stakagi: You don't want to use <picture>; it's defined as a wrapper for <img> only.  But it *might* be appropriate as a model for how to design something for level-of-detail.

[11:30:15.0000] <stakagi>
TabAtkins:Thanks. What kind of contribution can I do for the design?  TabAtkins:Thanks. What kind of contribution can I do for the design? Although I am concentrated on SVGWG from the first, probably it will not be limited to SVG.

[11:40:05.0000] <TabAtkins>
stakagi: I dunno, I'm still not sure how to do the LoD stuff correctly. I agree that it's an interesting and worthwhile case, it's unclear what to use for it.

[11:48:12.0000] <stakagi>
TabAtkins:I will draw up the description of Level Of Detail which I implemented. Incidentally, it is a combination of a picture element-like function, and a lazyload.js-like function.

[11:48:31.0000] <TabAtkins>
Yeah, I remember your presentation last year or so, in the Moz Japan offices.

[11:54:32.0000] <stakagi>
TabAtkins:Since two functionalities described above (picture and lazyload) have become the topic separately recently, I hope that the examination of Level Of Detail may be able to be performed slowly.

[13:08:21.0000] <boogyman>
anyone here know how to contact someone from Mozilla support? https://developer.mozilla.org/en-US/ is down (500)

[13:15:53.0000] <caitp>
it doesn't look down to me

[13:17:22.0000] <boogyman>
interesting, i get a new message, but basically the same code "this service is temporarily unavailable"

[13:21:28.0000] <Ms2ger>
boogyman, appears to be up now

[13:21:50.0000] <boogyman>
cheers


2015-06-10
[21:47:42.0000] <annevk>
I wonder what made Twitter show the trailing slash in profile URLs

[01:14:01.0000] <heycam>
MikeSmith, ping

[01:25:27.0000] <MikeSmith>
heycam: here now

[01:26:43.0000] <heycam>
MikeSmith, hi! can you add someone to the right github group so they can push changes to the SVG spec?

[01:26:53.0000] <heycam>
MikeSmith, github username is boggydigital

[01:27:07.0000] <heycam>
MikeSmith, I think the group name is "svgwg members" or something

[01:27:37.0000] <MikeSmith>
cool username

[01:27:41.0000] <MikeSmith>
/me checks now

[01:28:57.0000] <MikeSmith>
heycam: ok added just now

[01:29:13.0000] <heycam>
MikeSmith: cheers!

[01:57:56.0000] <annevk>
Domenic: beverloo: abarth: belated happy b-day!

[02:05:16.0000] <MikeSmith>
triplets

[02:05:43.0000] <MikeSmith>
speaking of abarth I wonder where or where has our abarth gone these days

[02:06:15.0000] <MikeSmith>
he seems to not be working on web-platform stuff as much these days

[02:06:21.0000] <MikeSmith>
at least not publicly

[02:06:50.0000] <MikeSmith>
I think the web platform misses him

[02:09:33.0000] <MikeSmith>
so I'm wondering what level of implementor interest does the current draft at http://w3c.github.io/filesystem-api/ have

[02:10:36.0000] <MikeSmith>
I see that Domenic filed an issue against it a couple weeks ago https://github.com/w3c/filesystem-api/issues/4

[02:11:11.0000] <MikeSmith>
so I would assume that means it's still a relevant spec with some promise

[02:15:06.0000] <arunranga>
Hi MikeSmith: I’d say parts of it are relevant including figuring out directory upload stuff.

[02:16:35.0000] <MikeSmith>
oh hey arunranga-afk !

[02:16:44.0000] <MikeSmith>
long time no see

[02:17:00.0000] <arunranga-afk>
oh hai MikeSmith :)

[02:17:54.0000] <MikeSmith>
arunranga-afk: I've not seen so much recent discussion about it but then I'm not on script-coord any more so maybe there's been some there

[02:18:21.0000] <MikeSmith>
anyway I hope we can finally get this right and get some implementor momentum behind it

[02:18:31.0000] <arunranga-afk>
/me hopes

[02:18:45.0000] <MikeSmith>
I'm glad you're still on it

[02:19:50.0000] <arunranga-afk>
MikeSmith, there’s been some public-script-coord discussion about having certain web platform types, including that old tin can, FileList, being converted to Array-types.

[02:20:29.0000] <MikeSmith>
ah OK

[02:20:46.0000] <MikeSmith>
I guess that's the right place now to have those discussions

[02:40:13.0000] <MikeSmith>
https://twitter.com/ISOTC211/status/608567032506912768 "The @W3C process is open|: drafts are published, mailing list available to public, etc... Quite different from @opengeospatial and #ISOTC221"

[02:44:58.0000] <MikeSmith>
in https://developer.apple.com/videos/wwdc/2015/?id=501 Brent Fulgham talks about "people coming to JavaScript from languages like Swift" (in the context of saying those people find JS's "prototype-based syntax has been somewhat less accessible" to such people

[02:58:44.0000] <ondras>
https://pbs.twimg.com/media/CGvdAOBUIAEQCUE.jpg:large

[03:01:48.0000] <annevk>
MikeSmith: what is open|: supposed to mean?

[03:02:38.0000] <annevk>
ondras: I don't get why he refers to the friend as crazy in the third panel after just saying he isn't

[03:16:20.0000] <MikeSmith>
annevk: maybe that tweeter meant to type an explanation point instead of that pipe?

[03:16:41.0000] <MikeSmith>
aren't they the same key on english keyboards

[03:17:18.0000] <MikeSmith>
oh I guess not

[03:32:50.0000] <ondras>
annevk: yeah. well, I am not an author, just an twitter->irc proxy

[03:32:55.0000] <ondras>
*a

[03:35:23.0000] <MikeSmith>
inconsistency is funny

[04:07:53.0000] <annevk>
philipj: if you want to experiment with lowercasing createAttribute() input, that'd be great...

[04:08:05.0000] <annevk>
philipj: but currently no browser does that so maybe that's a bridge too far?

[04:15:32.0000] <philipj>
annevk: I don't know, would that be a big win if it would work out?

[04:16:12.0000] <philipj>
annevk: I'm not sure how to estimate the risk of it without extra bookkeeping

[04:16:15.0000] <annevk>
philipj: you can do atom comparison rather than string comparison

[04:16:48.0000] <annevk>
philipj: also, seems like Chrome does not always use case-insensitive matching... e.g. removeAttribute does something else?

[04:16:56.0000] <annevk>
philipj: per comments in the Gecko bug

[04:18:01.0000] <philipj>
but when you're doing lookup, you're not traversing the attributes and comparing

[04:18:12.0000] <philipj>
sorry, wasn't finishing typing that

[04:18:39.0000] <philipj>
I'm just guessing that there's a hash map, and that hash map could be case insensitive without storing the strings themselves in a normalized case

[04:18:42.0000] <philipj>
maybe?

[04:18:57.0000] <annevk>
sure

[04:19:37.0000] <annevk>
I guess the more interesting thing is that not even case-insensitive will give us the same behavior, since Chrome does not share that algorithm across all methods

[04:20:05.0000] <annevk>
philipj: oh also, createAttribute("test:test") is different in Chrome/Safari vs Firefox/IE & DOM

[04:20:13.0000] <philipj>
annevk: and you're right, removeAttribute() does look different, it lowercases the value if it's an HTML Element and Document

[04:20:53.0000] <philipj>
annevk: and so does hasAttribute actually

[04:21:04.0000] <annevk>
but not getAttribute()?

[04:21:06.0000] <annevk>
meh

[04:21:07.0000] <philipj>
a weird mix of lowercasing and case-insensitive comparison, this is

[04:21:11.0000] <annevk>
yes

[04:21:22.0000] <annevk>
seems like we should do something consistent at least

[04:22:57.0000] <philipj>
well, getAttribute() seems to set a |shouldIgnoreCase| which is used to do a case-insensitive compare when iterating over the attributes

[04:23:31.0000] <philipj>
so at least Blink doesn't do the hash table thing, I guess there are too few attributes on average for it to be worth it

[04:23:50.0000] <philipj>
I agree this is pretty strange and inconsistent

[04:25:31.0000] <philipj>
how closely have you studied Gecko's and IE's black-box behavior? any hunch as to what state would be easiest to reach interop on?

[04:26:01.0000] <annevk>
Gecko is problematic since we changed

[04:26:15.0000] <annevk>
IE seemed to be mostly aligned with Chrome/Safari

[04:26:27.0000] <annevk>
|shouldIgnoreCase| seems easiest

[04:26:28.0000] <philipj>
right, did you just revert the change or is there now a old-Gecko vs. new-Gecko behavior to consider?

[04:26:40.0000] <annevk>
We haven't reverted the change yet

[04:26:51.0000] <annevk>
We need to decide on something though before we ship

[04:26:54.0000] <philipj>
did it reach stable and break stuff?

[04:27:08.0000] <annevk>
No, broke stuff earlier on

[04:27:19.0000] <annevk>
So now we need to figure out what to do

[04:27:33.0000] <philipj>
ok, that's a pretty good indication it's not going to fly. what was the attempted behavior? to lowercase like the spec says?

[04:28:10.0000] <annevk>
Yeah, but we did not attempt lowercasing createAttribute()

[04:28:33.0000] <annevk>
The cases that surfaced would have worked if that lowercased, but there's probably other cases that would break

[04:28:45.0000] <annevk>
IE seems to be more consistently case-insensitive

[04:28:58.0000] <annevk>
At least given https://bugzilla.mozilla.org/show_bug.cgi?id=1165851#c32

[04:29:28.0000] <annevk>
So making everyone do that seems like the most trivial change

[04:29:39.0000] <annevk>
The prettiest change would be lowercasing createAttribute()

[04:29:40.0000] <philipj>
there's really no way to measure the risk of lowercasing the input, as there's no way to track how the string returned by e.g. element.attributes[0].localName is used

[04:29:46.0000] <annevk>
yeah

[04:29:50.0000] <annevk>
:/

[04:30:24.0000] <philipj>
but wait, in an HTML document, should element.setAttribute('FOO', 'bar') result in an element with localName 'FOO'?

[04:31:05.0000] <philipj>
/me tries

[04:31:09.0000] <annevk>
nope

[04:31:18.0000] <annevk>
different code path

[04:31:47.0000] <philipj>
so where should the lowercasing go in the hypothetical store-as-normalized go?

[04:32:32.0000] <annevk>
philipj: step 1.5 of https://dom.spec.whatwg.org/#dom-document-createattributelocalname would do that

[04:33:12.0000] <philipj>
oh, so the extent of the compat risk is just when you manually create attribute nodes?

[04:33:22.0000] <annevk>
(at which point we might introduce some kind of abstract "create an attribute" operation that does all the work)

[04:33:24.0000] <annevk>
philipj: yeah

[04:33:45.0000] <annevk>
afaict that's the only place that does not lowercase

[04:34:16.0000] <philipj>
well, that actually doesn't sound too crazy

[04:40:56.0000] <philipj>
the relevant use counter is https://www.chromestatus.com/metrics/feature/timeline/popularity/111 at ~0.13%

[04:41:27.0000] <annevk>
I left a comment in the bug suggesting this alternative path

[04:42:38.0000] <philipj>
however, if the true justification for trying this is performance, perhaps someone should verify that it's really going to be faster to lowercase the input and do case-sensitive compares than to just do case-insensitive compares in the loop?

[04:46:29.0000] <annevk>
philipj: I don't think perf is a great argument, it would mostly be consistency

[04:46:46.0000] <philipj>
what was Gecko's old behavior?

[04:46:55.0000] <annevk>
philipj: though perhaps perf is important for Selector matching

[04:47:22.0000] <philipj>
perf is pretty important in this context though, don't want Gecko implementing this new model and then we can't land it in Blink because there happens to be a perf test that regresses

[04:48:02.0000] <philipj>
oh wait, let me see what setAttribute does

[04:49:53.0000] <philipj>
I'm still a bit confused, clearly setAttribute already does the lowercasing, and that's the point where one should be careful

[04:49:54.0000] <annevk>
philipj: I think per https://bugzilla.mozilla.org/show_bug.cgi?id=1075702 we might have lowercased for setNamedItem and friends

[04:50:25.0000] <philipj>
I link to think of all other APIs as aliases for setAttribute(NS) and getAttribute(NS), does that match your thinking?

[04:50:27.0000] <annevk>
philipj: but not createAttribute(), which would bem ore logical

[04:50:29.0000] <philipj>
s/link/like/

[04:50:42.0000] <annevk>
not really

[04:51:26.0000] <philipj>
no? so instead all the web-exposed APIs are entry points into the same underlying algorithm?

[04:51:51.0000] <annevk>
yeah, they all share a bunch of logic

[04:52:29.0000] <philipj>
so, anyway, the important point is that it's strange if say setAttribute() has different rules for case-folding than say setting Attr.value

[04:52:42.0000] <philipj>
as long as that's not the case, it's fine

[04:53:05.0000] <annevk>
setAttribute() has different rules from createAttribute()

[04:53:11.0000] <annevk>
the value is never normalized

[04:53:20.0000] <annevk>
the problem here is around attribute names

[04:54:12.0000] <philipj>
sorry, I was thinking about changing the attribute name, but obviously you can't do that via Attr

[04:55:28.0000] <philipj>
so are setAttribute(), setAttributeNS(), createAttribute() and createAttributeNS() the only entry points for scripts to create attributes, other than via the parser a la innerHTML?

[04:57:16.0000] <Ms2ger>
I believe that's correct

[04:58:00.0000] <philipj>
well, then since the parser already normalizes the case, then trying to close that last hole that is createAttribute() does sound pretty good

[04:59:46.0000] <philipj>
however, this does mean that for setAttributeNS(namespace, 'FOO', value) the resulting Attr would have localName 'FOO', correct? and getAttribute('FOO') would fail to return that value, where it would currently

[05:00:23.0000] <annevk>
philipj: in Gecko that has always failed to return a value

[05:00:32.0000] <annevk>
philipj: not sure about other browsers

[05:01:18.0000] <annevk>
What Gecko did previously as far as I can tell is normalize case during setAttributeNode / setNamedItem... Ms2ger?

[05:01:37.0000] <philipj>
annevk: that does work in Blink currently

[05:01:54.0000] <Ms2ger>
I can look if you find me the bug that changed it...

[05:01:56.0000] <annevk>
philipj: yeah, and removeAttribute() does not

[05:02:07.0000] <annevk>
Ms2ger: https://bugzilla.mozilla.org/show_bug.cgi?id=1075702

[05:02:10.0000] <philipj>
annevk: same in IE11

[05:02:43.0000] <philipj>
don't know, given that it never worked in Gecko it could work out

[05:02:56.0000] <annevk>
philipj: I'm not worried about that though, seems like the smallest of all risks

[05:03:30.0000] <philipj>
annevk: what kind of code are you most worried about breaking?

[05:03:58.0000] <annevk>
philipj: attr.name == "FOO"

[05:04:24.0000] <philipj>
annevk: where "FOO" comes from document.createAttribute("FOO")?

[05:04:29.0000] <annevk>
yes

[05:05:04.0000] <philipj>
ok, would it be of any help to measure how often lowercasing the name in createAttribute() results in a different string?

[05:05:14.0000] <philipj>
as an upper limit of breakage

[05:05:40.0000] <philipj>
it would be a few months to get data, so if you're in a hurry it won't help you

[05:05:47.0000] <annevk>
Maybe. I think given what Gecko did before lowercasing is probably sound

[05:06:04.0000] <annevk>
Since the only code that would break is code that checked the name before appending the attribute

[05:06:10.0000] <annevk>
Since appending it lowercased the name in Gecko

[05:11:30.0000] <philipj>
oh, so it was setAttribute that would change the case?

[05:14:56.0000] <philipj>
one difference if doing it in createAttribute is that you don't yet know if it'll be attached to an HTML element, so the conditions won't be exactly the same

[05:14:59.0000] <philipj>
but that's probably fine

[05:16:15.0000] <philipj>
well, keep me posted on what you want to try in Gecko and if you change the spec for document.createAttribute(), in which case I'll add a use counter to gague if that'll be safe

[05:16:29.0000] <annevk>
philipj: setAttribute != setAttributeNode

[05:17:05.0000] <annevk>
I think I'll suggest to bz that we lowercase for createAttribute(), if he comes online again

[05:17:12.0000] <philipj>
annevk: uh, yes, I mean setAttributeNode(document.createAttribute('FOO'))

[05:26:05.0000] <MikeSmith>
annevk: I just now reverted that change I made to github/xrefs that added the IETF Origin spec

[05:26:21.0000] <annevk>
ta

[05:37:15.0000] <philipj>
annevk: https://bugzilla.mozilla.org/show_bug.cgi?id=1165851#c36

[05:55:26.0000] <JonathanNeal>
Where would be the best place for someone to make a suggestion like extending RegExp to include a RegExp.escape function ala http://discourse.specifiction.org/t/regexp-escape-str/832

[05:55:59.0000] <JonathanNeal>
It would seem useful to provide some direction, like contact so-and-so or write an email to such-list.

[05:56:06.0000] <Ms2ger>
es-discuss

[06:18:49.0000] <JonathanNeal>
Thanks, Ms2ger!

[06:19:57.0000] <Sebmaster>
annevk: i think i dont get it, why would it return null?

[06:21:19.0000] <annevk>
Sebmaster: read step 2 of https://url.spec.whatwg.org/#dom-urlutils-origin

[06:21:58.0000] <Sebmaster>
ohhh

[06:22:25.0000] <Sebmaster>
so you serialize the GUID, which is not a scheme, host, port tuple

[06:22:40.0000] <annevk>
right

[06:22:52.0000] <annevk>
Sebmaster: I filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=28788 though to get HTML a little clearer on this

[06:23:03.0000] <Sebmaster>
is the GUID ever public then?

[06:23:11.0000] <annevk>
Sebmaster: it should just say "if origin is an opaque identifier, return 'null'"

[06:23:16.0000] <annevk>
Sebmaster: nope

[06:23:23.0000] <annevk>
Sebmaster: neither is the alias concept

[06:23:45.0000] <Sebmaster>
what're aliases?

[06:23:50.0000] <Sebmaster>
I havent read about those anywhere

[06:24:49.0000] <annevk>
Sebmaster: read HTML's definition of what an origin can be

[06:25:05.0000] <annevk>
Sebmaster: you encounter alias in the DOM, with <iframe> and such

[06:25:30.0000] <Sebmaster>
huh, wow

[06:25:48.0000] <Sebmaster>
there's so much we still have to get into jsdom :/

[06:27:37.0000] <Sebmaster>
Thanks, annevk

[07:25:10.0000] <darobin>
Sebmaster: FWIW you're doing awesome work with jsdom, there's always more but keep it up :)

[07:29:22.0000] <Sebmaster>
darobin: thanks!

[07:36:36.0000] <JonathanNeal>
mathiasbynens: thank you for that ticket. Good, someone solved this five years ago.

[07:36:57.0000] <mathiasbynens>
JonathanNeal: well, not really, it’s still not being standardized

[07:37:01.0000] <mathiasbynens>
baby steps though :P

[07:37:42.0000] <JonathanNeal>
“The tree of features must be refreshed from time to time with the blood of polyfills and new threads.”

[07:42:08.0000] <MikeSmith>
heh

[07:56:40.0000] <hsivonen>
annevk: have you checked whether input methods in common use in Hong Kong and Taiwan produce astral characters and not PUA characters these days for the astral characters in Big5?

[07:57:27.0000] <annevk>
no

[07:57:29.0000] <hsivonen>
annevk: it appears that Windows 8.1 comes with font coverage for the whole of Encoding Standard Big5 but Ubuntu does not (at least not by default in an en-US install)

[07:57:33.0000] <annevk>
philipj might have

[07:57:47.0000] <hsivonen>
annevk: ok. that's a possible source of risk, then

[08:01:53.0000] <smaug____>
any amazon employees here?

[08:02:10.0000] <annevk>
smaug____: hey!

[08:02:16.0000] <annevk>
smaug____: so about web components

[08:02:29.0000] <smaug____>
annevk: yes, I pinged yesterday

[08:02:41.0000] <annevk>
smaug____: I think the only thing that was discussed is instead of an imperative API move back to the slots proposal

[08:02:54.0000] <smaug____>
(sorry, been offline/online unusual times because of uncle-duties)

[08:02:56.0000] <annevk>
smaug____: since everyone but Google was okay with that, and now Google is too

[08:03:20.0000] <smaug____>
right

[08:03:30.0000] <smaug____>
but there isn't really a proper slots proposal yet, right?

[08:03:42.0000] <smaug____>
I mean something which truly explain what would be spec'ed

[08:04:15.0000] <smaug____>
including when distribution happens (but I assume that it just sync)

[08:04:22.0000] <smaug____>
s/it/is/

[08:06:45.0000] <annevk>
smaug____: https://github.com/w3c/webcomponents/blob/gh-pages/proposals/Slots-Proposal.md

[08:08:32.0000] <annevk>
hmm, new API that returns a NodeList...

[08:16:25.0000] <smaug____>
annevk: ah...

[08:16:32.0000] <smaug____>
doesn't explain when distribution happens

[08:17:04.0000] <annevk>
smaug____: right, that's still left up to the UA

[08:17:47.0000] <annevk>
I have somewhat mixed feelings about this...

[08:41:50.0000] <philipj>
hsivonen: I didn't check any IMEs

[08:43:17.0000] <philipj>
I would guess that the most common ones are Google pinyin and Sogou pinyin

[08:43:22.0000] <philipj>
/me gotta go

[10:14:04.0000] <dglazkov>
annevk, smaug____: going to hack on this with rniwa today. Hopefully, will flesh this out a bit more.

[10:55:17.0000] <annevk>
dglazkov: cool

[10:57:12.0000] <dglazkov>
annevk: on NodeList, please patch it up the way you like it

[10:57:24.0000] <dglazkov>
I was just copying stuff from the current spec

[10:57:51.0000] <annevk>
will do

[14:02:52.0000] <wanderview>
JakeA: ping

[14:05:02.0000] <JakeA>
wanderview: hey, winding down for the night, but can pick up whatever in the morning

[14:05:16.0000] <wanderview>
np, I just realized I have to run in a minute as well

[14:05:21.0000] <wanderview>
sorry for the late ping

[14:27:40.0000] <TabAtkins>
annevk: Re the simpsons cartoon, that's because it's what Troy McClure said in the episode (modulo JS stuff, obvs)


2015-06-11
[21:38:58.0000] <Sebmaster>
annevk: you there?

[22:05:32.0000] <annevk>
Sebmaster: waking up

[22:05:36.0000] <annevk>
Sebmaster: what's up?

[22:05:46.0000] <Sebmaster>
annevk: created an issue on whatwg/url

[22:06:21.0000] <Sebmaster>
not that important/time-critical

[22:07:24.0000] <annevk>
Sebmaster: I think you found a bug

[22:07:31.0000] <Sebmaster>
sweet

[22:07:37.0000] <annevk>
Sebmaster: should probably flush out step 5 to use the appropriate set

[22:07:48.0000] <annevk>
1.3.5 that is

[22:07:50.0000] <Sebmaster>
currently reporting the bug to unicode too

[22:08:05.0000] <annevk>
ooh wait

[22:08:13.0000] <annevk>
actually that might not be a bug

[22:08:42.0000] <Sebmaster>
aww

[22:08:50.0000] <annevk>
since all the code points that password/username add are treated specially in authority state

[22:09:26.0000] <Sebmaster>
what's that?

[22:10:16.0000] <annevk>
Sebmaster: https://url.spec.whatwg.org/#default-encode-set if you look at the password and username encode set

[22:10:46.0000] <annevk>
Sebmaster: "/", "@", "\", and ":" all have special meaning within the authority state so could never end up there

[22:11:01.0000] <annevk>
Sebmaster: I guess we might still want to add a note of sorts there to that effect

[22:11:28.0000] <Sebmaster>
oooh, i think i found my error :/

[22:11:48.0000] <Sebmaster>
sorry for bothering

[22:14:23.0000] <Sebmaster>
yeah, i got it... i simple encoded it

[22:26:51.0000] <annevk>
no worries

[00:09:47.0000] <tobie>
Anyone knows why DOMHighResTimeStamp is relative?

[00:13:36.0000] <tobie>
relative to performance.timing.navigationStart, I mean.

[00:15:04.0000] <tobie>
Is that due to some limitation as to how numbers can be represented in JS or is it just a weird choice?

[00:19:52.0000] <ondras>
Date.now() * 1000

[00:19:53.0000] <ondras>
1434007172260000

[00:19:56.0000] <ondras>
Number.MAX_SAFE_INTEGER

[00:19:57.0000] <ondras>
9007199254740991

[00:20:09.0000] <ondras>
not sure.

[00:25:27.0000] <annevk>
tobie: all time is relative :p

[00:26:00.0000] <tobie>
go away, annevk

[00:26:08.0000] <annevk>
tobie: but yeah, we don't have large enough numbers to get that kind of precision since epoch

[00:27:27.0000] <tobie>
new Date(Math.floor(Number.MAX_SAFE_INTEGER/1000))

[00:27:28.0000] <tobie>
Wed Jun 06 2255 01:47:34 GMT+0200 (CEST)

[00:31:23.0000] <annevk>
That roughly matches the 272 years at microsecond resolution from https://github.com/WebAudio/web-midi-api/issues/145#issuecomment-110477683

[00:31:34.0000] <annevk>
DOMHighResTimeStamp is more precise

[00:31:42.0000] <tobie>
I have no idea what I'm doing but that seems future proof for more than 2 centuries, no?

[00:32:13.0000] <annevk>
Not if you want higher resolution...

[00:32:13.0000] <ondras>
"accurate to the thousandth of millisecond"

[00:32:52.0000] <tobie>
http://www.w3.org/TR/hr-time/#sec-DOMHighResTimeStamp

[00:33:38.0000] <ondras>
I do not see why JS ints are not suffucient for the required microsecond precision

[00:34:48.0000] <tobie>
annevk: oh, you're actually looking at that right now?

[00:35:21.0000] <tobie>
annevk: I was looking at something similar for the sensor stuff

[00:36:49.0000] <annevk>
tobie: well, it's been going on for at least a year now

[00:37:04.0000] <annevk>
tobie: but yeah, the plan is to change events to report DOMHighResTimeStamp instead

[00:37:28.0000] <tobie>
From navigation start? or from epoch?

[00:37:41.0000] <annevk>
Can't from epoch, so navigation start

[00:37:48.0000] <annevk>
See comments in that issue from Brian

[00:38:04.0000] <annevk>
Oh, @birtles

[00:38:45.0000] <birtles>
yeah, I need to get on and finish making that change in Gecko

[00:39:34.0000] <annevk>
Yes!

[00:39:56.0000] <tobie>
I don't understand half of the concerns birtles brought up, tbh.

[00:40:10.0000] <birtles>
tobie: which ones?

[00:40:19.0000] <tobie>
And I mean that literally, I'm not contesting them.

[00:40:21.0000] <tobie>
:)

[00:40:45.0000] <birtles>
the monotonically increasing thing?

[00:40:46.0000] <tobie>
"I don't think you can have interop with Date if you want these values to be monotonically increasing"

[00:41:11.0000] <tobie>
yeah, I don't understand how that could be an issue.

[00:41:20.0000] <ondras>
annevk: I am still unsure why microseconds from the unix epoch are not suitable for JS numbers

[00:41:49.0000] <annevk>
ondras: presumably the high resolution platform APIs don't give answers since epoch

[00:42:13.0000] <ondras>
well

[00:42:13.0000] <ondras>
09:26 < annevk> tobie: but yeah, we don't have large enough numbers to get that kind of precision since epoch

[00:42:29.0000] <ondras>
so I am not sure whether this is about the required precision

[00:42:30.0000] <annevk>
ondras: well, people want nanoseconds I think

[00:42:36.0000] <ondras>
ah

[00:42:55.0000] <tobie>
annevk: where's *that* requirement?

[00:43:04.0000] <ondras>
so it is possible to increase the precision backwards-compatibly by using floats

[00:43:11.0000] <ondras>
the number is still millis

[00:43:15.0000] <annevk>
tobie: isn't that why we have performance.now()?

[00:43:18.0000] <ondras>
but the precision increases to nanos

[00:43:20.0000] <ondras>
interesting

[00:43:47.0000] <tobie>
annevk: it microseconds, per spec

[00:44:01.0000] <birtles>
tobie: as I understand it Date.now() is not monotonically increasing, so when your computer's clock goes backwards due to DST or time adjustments etc. Date.now() also goes backwards

[00:44:14.0000] <birtles>
tobie: so if you want event timestamps to line up with Date.now() values, then those times can go backwards now

[00:44:26.0000] <birtles>
so if you're comparing the timestamps between events to see which one came first, you'll occasionally get wacky bugs

[00:44:45.0000] <birtles>
performance.now() doesn't have the problem

[00:45:34.0000] <tobie>
oh, all of this is because of the bloody daylight saving time?

[00:45:48.0000] <birtles>
nah, there are other system time adjustments

[00:45:54.0000] <birtles>
like sync with time servers etc.

[00:45:59.0000] <annevk>
timezones

[00:46:50.0000] <tobie>
annevk: isn't Date.now() UTC?

[00:47:50.0000] <tobie>
birtles: but couldn't you still have something monotonic yet fully compatible?

[00:48:21.0000] <birtles>
tobie: I thought about that, but then I think you get even weirder bugs

[00:48:40.0000] <birtles>
e.g. store the time internally using some monotonically increasing value and convert it on access

[00:48:56.0000] <birtles>
but then if time changes between subsequent accesses you get even weirder bugs

[00:49:45.0000] <tobie>
I'm not sure I get that.

[00:49:58.0000] <tobie>
what do you mean by "on access"

[00:50:11.0000] <tobie>
and "store the time internally"?

[00:50:39.0000] <birtles>
basically, making Event.timeStamp live

[00:51:00.0000] <tobie>
oh, that's not what I meant.

[00:51:20.0000] <birtles>
ok, maybe I didn't get what you meant by fully compatible

[00:51:37.0000] <tobie>
no wonder, that was kind of hand-wavy

[00:51:41.0000] <tobie>
:)

[00:51:49.0000] <tobie>
let me try to explain better

[00:53:25.0000] <tobie>
right now DOMHighResTimeStamp is monotonic but starts at performance.timing.navigationStart

[00:54:49.0000] <tobie>
so to turn something into a date you kind of have to do (pseudo code): new Date(DOMHighResTimeStamp + performance.timing.navigationStart)

[00:56:13.0000] <tobie>
what if instead you had DOMHighResTimeStamp start at epoch but be monotonic from the moment the page loads?

[00:58:04.0000] <tobie>
birtles: is that just a different flavor of hand-wavy or am I making more sense?

[00:58:39.0000] <birtles>
tobie: in other words, store the time since navigationStart but at the API level, do the addition you described above automatically?

[00:58:46.0000] <tobie>
yes

[00:58:55.0000] <birtles>
I think there are two issues...

[00:59:01.0000] <tobie>
only?

[00:59:05.0000] <birtles>
:)

[00:59:08.0000] <birtles>
one is that then you lose compatibility with Date

[00:59:27.0000] <birtles>
since the values you're reporting no longer correspond to the values it returns

[00:59:27.0000] <tobie>
how so?

[00:59:53.0000] <tobie>
why would that be?

[01:00:05.0000] <birtles>
if you update your system clock backwards 1 minute, Date.now() goes backwards 1 minute

[01:00:30.0000] <birtles>
if you want to report a timestamp as a monotonically increasing value though it can't go backwards relative to any other timestamps

[01:00:32.0000] <tobie>
sure, but Date.preciselynow() wouldn't

[01:00:38.0000] <birtles>
so it can't go backwards

[01:00:51.0000] <birtles>
so you can't meaningfully compare those timestamps with Date.now() anymore

[01:01:00.0000] <tobie>
Right

[01:01:49.0000] <birtles>
so then the second issue is you lose compatibility with everything that's based on navigationStart: performance.now(), requestAnimationFrame, Web Animations etc.

[01:02:06.0000] <birtles>
it seems like you lose compatibility with everything except some yet-to-be-created Date function?

[01:03:11.0000] <tobie>
well, unless you'd have to change performance.timing.navigationStart to always return 0

[01:03:25.0000] <tobie>
:D

[01:03:45.0000] <tobie>
s/'d have to//

[01:04:21.0000] <birtles>
yeah, that might work :) pretty sure no one would notice :)

[01:05:52.0000] <tobie>
I'm not sure if you're being 1) ironic, 2) not ironic, or 3) unsure yourself whether to be ironic or not ironic

[01:07:06.0000] <birtles>
sorry, yeah, I don't think we'd get away with that and I'm not entirely sure it would be useful either

[01:08:53.0000] <birtles>
I think the fundamental problem is that Date.now() is not monotonically increasing (I just checked on this computer to be sure)

[01:09:59.0000] <tobie>
I guess you're right and the only thing I'm after is: Date.fromPrecisionTiming() and Date.preciseNow = performance.now or something similar

[01:10:17.0000] <birtles>
yeah, I can see that being useful

[01:11:18.0000] <tobie>
That should belong in ES, tbh

[01:12:04.0000] <tobie>
and so you'd also need a Date.contextStarted or some such

[01:12:32.0000] <birtles>
yeah, I think we're still speccing workerStart at the moment

[01:12:43.0000] <tobie>
equivalent of current performance.timing.navigationStart but not platform specific

[01:13:16.0000] <tobie>
well, seems its at the wrong layer, no?

[01:13:24.0000] <tobie>
How do I get that in node?

[01:14:22.0000] <tobie>
new Date(timestamp + (performance.timing.navigationStart || this.workerStart || process.startTime))

[01:14:50.0000] <tobie>
or rather:

[01:15:19.0000] <tobie>
 new Date(timestamp + ((performance && performance.timing && performance.timing.navigationStart) || this.workerStart || (process && process.startTime)))

[01:15:44.0000] <tobie>
<3

[01:26:14.0000] <tobie>
birtles: here, I solved all the things for you: https://twitter.com/tobie/status/608912362813464576

[01:27:01.0000] <birtles>
tobie: cheers, our work here is done

[01:48:21.0000] <annevk>
ECMAScript*, by Ecma

[01:48:52.0000] <tobie>
oh--is it?

[01:49:30.0000] <tobie>
Well, Ecma International, more precisely.

[01:52:42.0000] <annevk>
It used to be ECMA, but then they were no longer European and decided to turn the abbreviation into a name

[01:54:04.0000] <tobie>
Yup. Wasn't aware ECMA had stuck in ECMAScript though.

[01:56:00.0000] <annevk>
Well, given ES6 vs ECMAScript 2015 they always seem to go for maximum developer confusion

[02:10:09.0000] <espadrine>
that's not really on them, though—isn't that a decision made by TC39?

[02:12:15.0000] <annevk>
TC39 is basically Ecma at this point

[02:12:32.0000] <annevk>
Not much else to hold it alive

[02:12:50.0000] <annevk>
I guess there's TC52 for Dart, but euh...

[02:13:26.0000] <espadrine>
and that thing to pretend that docx is standardized

[02:14:10.0000] <espadrine>
TC45

[02:16:42.0000] <MikeSmith>
http://www.ecma.org/about-ecma/organisational-structure/ecma-tobacco-forum.html

[02:17:46.0000] <ondras>
:}

[02:18:10.0000] <ondras>
nothing beats a good old tobacco packaging

[02:20:51.0000] <tobie>
MikeSmith: is that the same Ecma?

[02:21:13.0000] <MikeSmith>
qyep

[02:21:19.0000] <tobie>
I know they do a lot of other non-open, non-RF standards, but this stuff?

[02:22:16.0000] <annevk>
Pretty sure that is not the same

[02:22:22.0000] <annevk>
"ECMA – European Carton Makers Associations"

[02:22:23.0000] <tobie>
not the same ecma

[02:22:48.0000] <tobie>
they have the nice domain name though

[02:24:13.0000] <tobie>
kind of worrying that a carton maker association snapped the domain name of the SDO defining the language used by the platform, but oh well.

[02:27:40.0000] <darobin>
my bad, I'm the one who confused ecma.org and ecma-international

[02:28:02.0000] <darobin>
the official site for the latter redirects to their hosting provider...

[02:37:02.0000] <tobie>
darobin: afaik they're in the process of fixing it.

[02:37:11.0000] <darobin>
why bother?

[02:37:25.0000] <tobie>
darobin: (has been reported yesterday evening)

[02:37:38.0000] <darobin>
forgot to pay the hosting fee?

[02:37:39.0000] <tobie>
darobin: hook for IP commitments

[02:37:47.0000] <darobin>
hmpf

[02:37:50.0000] <annevk>
hallvors: so bz was asking about fetch() tests

[02:38:04.0000] <annevk>
hallvors: I wonder how much we can reuse from XMLHttpRequest

[02:38:20.0000] <annevk>
hallvors: and maybe from odinho's CORS tests

[02:38:21.0000] <Ms2ger>
Not much, I suspect

[02:38:42.0000] <annevk>
At a high-level similar things are being tested, e.g. methods etc.

[02:39:01.0000] <MikeSmith>
I heard that the source for the text on all cigarette cartons OS maintained in MS Word files. Pretty sure darobin is the one who told me that.

[02:39:15.0000] <hallvors>
Hm..

[02:39:51.0000] <hallvors>
annevk: just write a polyfill making XHR requests use window.fetch(), reuse everything :-p

[02:40:11.0000] <annevk>
And a bunch of the server infrastructure will be similar...

[02:40:20.0000] <annevk>
But maybe it's too much effort to make something generic?

[02:40:54.0000] <hallvors>
the serious reply is: not sure off the top of my head. Probably needs to be decided on a test-by-test basis

[02:41:11.0000] <hallvors>
(aka there's quite some work to do )

[02:42:04.0000] <hallvors>
much of the backend stuff is rather trivial anyway, but of course nice to reuse

[02:43:14.0000] <darobin>
tobie: I just released your PR

[02:45:10.0000] <annevk>
hallvors: hmm, I'm not sure I want to be the one doing this

[02:46:00.0000] <Ms2ger>
I know I don't want to be it either :)

[02:47:56.0000] <annevk>
jgraham: something is wrong with the links: http://w3c-test.org/fetch

[02:48:29.0000] <annevk>
jgraham: that should probably redirect to /fetch/ since now nosniff points to http://w3c-test.org/nosniff/ which does not exist obviously

[02:50:20.0000] <hallvors>
well, there's this thing called test the web forward

[02:50:46.0000] <hallvors>
(which always seems like a gramatically dubious name, but then I'm not a native English speaker)

[02:51:58.0000] <annevk>
I'm not sure those really work well

[02:52:23.0000] <Ms2ger>
They don't

[02:52:38.0000] <annevk>
In the end writing good tests is similar to writing good specifications or writing good implementations. You need to have quite a bit of experience.

[03:00:32.0000] <jgraham>
annevk: What links?

[03:01:29.0000] <Ms2ger>
annevk, http://w3c-test.org/fetch/ works

[03:07:22.0000] <annevk>
Ms2ger: I know

[03:07:45.0000] <annevk>
jgraham: if you link to a directory without a trailing slash

[03:07:57.0000] <annevk>
jgraham: the links within the directory view

[03:14:16.0000] <jgraham>
annevk: Yeah, there intentionally isn't any special magic to make /foo and /foo/ the same

[03:29:51.0000] <karlcow>
I wonder why annevk is asking about /foo and /foo/ if foo is a directory.

[03:29:52.0000] <karlcow>
/me knows that the default of Apache httpd are a bit painful with regards to this. 

[03:30:33.0000] <annevk>
karlcow: because I ended up at http://w3c-test.org/fetch and the link to nosniff is broken

[03:30:36.0000] <karlcow>
Specifically in this case:

[03:30:36.0000] <karlcow>
  /foo/

[03:30:37.0000] <karlcow>
  /foo.html

[03:31:11.0000] <karlcow>
when you request /foo

[03:31:52.0000] <jgraham>
annevk: I think the bug there is that /fetch works at all

[03:31:58.0000] <jgraham>
It really isn't supposed to

[03:32:49.0000] <karlcow>
Server: BaseHTTP/0.3 Python/2.7.3

[03:33:23.0000] <karlcow>
homemade server?

[03:33:27.0000] <Ms2ger>
Yup

[03:33:39.0000] <Ms2ger>
wptserve

[03:34:12.0000] <karlcow>
https://github.com/w3c/wptserve

[03:47:43.0000] <CrLF0710>
hi, i'm reading the HTML spec, now i'm at Chapter 14. what does the 'i' in "table[align=left i] { float: left }" mean?

[03:48:25.0000] <jgraham>
annevk: https://critic.hoppipolla.co.uk/r/5244

[03:48:43.0000] <annevk>
CrLF0710: means ASCII case-insensitive matching

[03:48:49.0000] <annevk>
CrLF0710: on the value

[03:48:56.0000] <annevk>
CrLF0710: defined in Selectors

[03:49:20.0000] <Ms2ger>
jgraham, can't we redirect in that case rather than 404?

[03:49:36.0000] <CrLF0710>
annevk: got it. thank you!

[03:49:52.0000] <jgraham>
Ms2ger: I would much prefer not to

[03:50:22.0000] <annevk>
jgraham: you could first check if a directory of that name exists and then redirect?

[03:51:49.0000] <jgraham>
annevk: The directory is known to exist, but not doing too much magic seems strictly better

[03:54:45.0000] <annevk>
jgraham: I can't review that but looks okay

[04:04:45.0000] <jgraham>
annevk: You can review it now

[04:07:25.0000] <annevk>
r+

[04:09:00.0000] <jgraham>
Thanks

[04:09:04.0000] <tobie>
darobin: ty

[04:09:33.0000] <tobie>
darobin: didn't know WebIDL had a ws option.

[04:10:22.0000] <tobie>
s/WebIDL/webidl2.js/

[04:49:28.0000] <darobin>
tobie: yeah it does as of I think about a year ago, I forget

[04:49:35.0000] <darobin>
it's not like there's an announcement list or anything

[04:49:55.0000] <darobin>
I wrote it specifically for use cases like jyasskin_w's thing

[04:58:15.0000] <tobie>
darobin: darn, spent quite a while trying to figure out was was breaking

[05:01:45.0000] <darobin>
tobie: sorry about that :(

[05:01:54.0000] <darobin>
tobie: don't hesitate to ping me when you have trouble with that

[05:02:13.0000] <tobie>
It was midnight

[05:02:19.0000] <tobie>
You weren't around

[05:05:05.0000] <tobie>
darobin: tbh, the problem had more to do with getting stack traces deep within compressed JS

[05:05:23.0000] <darobin>
don't code at midnight

[05:05:27.0000] <darobin>
be in bed, read a book man

[05:05:37.0000] <darobin>
tobie: we could do sourcemaps if it helps

[05:06:19.0000] <tobie>
that was excpetional, tbh, I generally no longer do this.

[05:06:49.0000] <tobie>
nah, I think we should just migrate to browserify at some point and get all of this stuff for free.

[05:07:05.0000] <darobin>
ah, the problem was inside ReSpec

[05:07:11.0000] <darobin>
yeah, I should browserify it

[05:07:42.0000] <darobin>
webidl2.js could have a distributed .min though, it's a nicety

[05:07:51.0000] <tobie>
AMD was a bad id from the start

[05:08:31.0000] <tobie>
idea, even

[05:09:46.0000] <darobin>
yeah

[05:09:58.0000] <darobin>
I really had to fight RequireJS to get it to be useful for me

[05:10:01.0000] <darobin>
it's a bit of a nightmare

[05:10:10.0000] <darobin>
well, a kludge at least

[05:10:41.0000] <darobin>
it's probably not a huge port to just browserify the whole thing, I'd say a day's worth of work tops

[05:12:22.0000] <tobie>
famous last words

[05:15:30.0000] <darobin>
tobie: heh, nah, I really think it's not that much work

[05:21:46.0000] <annevk>
What should we call the flag that makes <img> and Beacon survive an environment settings object going down?

[05:21:55.0000] <annevk>
Any other APIs that do that?

[05:21:59.0000] <annevk>
"survive flag"?

[05:22:51.0000] <annevk>
"survive client termination flag"?

[05:22:52.0000] <darobin>
the gaynor flag

[05:23:32.0000] <annevk>
Don't get the reference :/

[05:55:37.0000] <MikeSmith>
annevk: if you go with the longer one, it should be "survive client-termination flag" with a hyphen

[05:56:06.0000] <MikeSmith>
otherwise it sounds like it's a "termination flag" of some kind

[05:56:27.0000] <annevk>
Does that also go for "local URLs only flag"?

[05:56:39.0000] <annevk>
Or " same-origin data URL flag"?

[05:56:50.0000] <MikeSmith>
yes

[05:56:51.0000] <annevk>
"unsafe request flag"?

[05:56:55.0000] <MikeSmith>
yes

[05:56:59.0000] <annevk>
"CORS preflight flag"?

[05:57:06.0000] <MikeSmith>
yes there too

[05:57:11.0000] <MikeSmith>
hyphens all

[05:57:13.0000] <annevk>
So many hyphens

[05:57:27.0000] <MikeSmith>
well the alternative is ambiguity

[05:57:27.0000] <annevk>
same-origin-data-URL?

[05:57:38.0000] <hsivonen>
/me tries to refactor HTML parsing code for character references

[05:57:41.0000] <hsivonen>
test don't pass

[05:58:16.0000] <annevk>
"sandboxed storage area URLs flag"...

[05:58:16.0000] <hsivonen>
&notit; looks like something that never works right on the first try after changing code

[05:58:20.0000] <MikeSmith>
annevk: "same-origin data-URL flag" I would think

[05:58:27.0000] <annevk>
MikeSmith: I might need some help with where the hyphens need to go

[05:59:01.0000] <MikeSmith>
/me looks for a style-guide reference

[05:59:27.0000] <Ms2ger>
hsivonen, yay for tests :)

[05:59:43.0000] <annevk>
I wish specifications had tests

[05:59:54.0000] <hsivonen>
haha. I forgot to write some code I marked TODO a moment ago

[05:59:55.0000] <annevk>
For over a month all responses lost URLs

[06:00:19.0000] <MikeSmith>
hsivonen: you working on refactoring it in order to deal with the ambiguous-ampersand stuff?

[06:00:20.0000] <annevk>
And nobody noticed but me :-(

[06:00:40.0000] <Ms2ger>
And you wrote a test that would have caught it?

[06:00:50.0000] <darobin>
annevk: sorry, Gloria Gaynor https://www.youtube.com/watch?v=ZBR2G-iI3-I

[06:00:57.0000] <MikeSmith>
hsivonen: btw are you waiting on me still for the patches parsing patches I pinged you for review?

[06:01:04.0000] <Ms2ger>
/me curses websockets

[06:03:32.0000] <hsivonen>
MikeSmith: this refactoring is not for the ambiguos ampersands, but this is a good opportunity for me to recap the code so that I could review the patch

[06:03:47.0000] <MikeSmith>
ok

[06:04:01.0000] <hsivonen>
MikeSmith: the goal of this refactoring is to stop OOM crashes on the release channel

[06:04:08.0000] <MikeSmith>
oh boy

[06:04:15.0000] <MikeSmith>
yeah that's a bit more important

[06:04:40.0000] <annevk>
MikeSmith: so CORS-preflight flag?

[06:05:53.0000] <annevk>
MikeSmith: what I don't understand is why "survive client-termination flag" does not make it a "client-termination flag" of some kind

[06:06:32.0000] <MikeSmith>
hsivonen: well I'm not wedded to that patch, so if your refactoring makes it end up being "overtaken by events" in a way that's not mergeable to the refactored code,then no worries

[06:06:50.0000] <hsivonen>
MikeSmith: back in 2008, there was a plan for infallible malloc in Gecko, but only part of the plan was implemented. When I ported the parser, I was assuming the full plan would be implemented...

[06:07:11.0000] <hsivonen>
MikeSmith: I think I'll need to merge it manually, yes

[06:07:16.0000] <MikeSmith>
annevk: yeah "CORS-preflight flag" I think

[06:07:35.0000] <hsivonen>
MikeSmith: at I think I need to actually try stuff with the patch locally before I can review

[06:07:46.0000] <hsivonen>
MikeSmith: this stuff is very hard to review by just looking at the code

[06:08:09.0000] <MikeSmith>
hsivonen: ok (about the manual merge) but I'm also happy to take another shot at it after the refactoring (if you want)

[06:08:27.0000] <MikeSmith>
hsivonen: yeah, agreed (about being hard to review just be looking at the code, with this stuff)

[06:08:52.0000] <annevk>
MikeSmith: I guess that means "CORS preflight fetch" and such need hyphens too?

[06:09:30.0000] <annevk>
MikeSmith: seems like a pretty big problem overall with https://fetch.spec.whatwg.org/ at the moment

[06:09:40.0000] <MikeSmith>
annevk: I would say so but I'm not the definitive work on this stuff

[06:09:56.0000] <MikeSmith>
"In general, a compound modifier comprising an adjective plus a noun and preceding the word or words it modifies should be hyphenated"

[06:09:58.0000] <annevk>
I guess I'll leave this hyphenless until someone can give me the rules

[06:10:54.0000] <hsivonen>
hmm. looks like the html5lib tokenizer test format has changed since I last ran the tests

[06:11:44.0000] <MikeSmith>
annevk: "survive client-termination flag" could also be "survive-client-termination flag" and yeah I agree it can start to look a bit silly and like overkill but the point is to make it clear and unambiguous, not necessarily pretty

[06:12:16.0000] <annevk>
That latter spelling makes more sense to me

[06:13:00.0000] <MikeSmith>
annevk: http://www.economist.com/style-guide/hyphens is one guide with some example

[06:13:29.0000] <MikeSmith>
e.g., "third-world war" and "third world war" mean two different things

[06:14:19.0000] <MikeSmith>
http://www.apastyle.org/learn/faqs/when-use-hyphen.aspx is good too

[06:16:16.0000] <tobie>
darobin: does respec support syntax highlighting of JS? I assumed it did, but can't seem to get it working

[06:16:26.0000] <MikeSmith>
http://www.thewriter.com/what-we-think/style-guide/to-hyphenate-or-not-to-hyphenate/

[06:16:31.0000] <hsivonen>
The Chicago Manual of Style is *very* weird around this topic

[06:16:36.0000] <darobin>
tobie: <pre class="example highlight">.... should work

[06:16:51.0000] <MikeSmith>
"A man eating tiger" vs "A man-eating tiger"

[06:17:04.0000] <hsivonen>
IIRC, it says that "Civil War-era" should be written with an en dash instead of a hyphen. (who does that?)

[06:17:57.0000] <MikeSmith>
hsivonen: yeah Chicago Manual has a lot of quaint idiosyncrasies

[06:20:00.0000] <MikeSmith>
New Yorker magazine has some relics too, like they still use coöperate instead of cooperate like everybody else in the universe

[06:20:50.0000] <hsivonen>
MikeSmith: coöperate isn't as weird as promoting a hyphen to an en dash

[06:20:58.0000] <MikeSmith>
true

[06:24:01.0000] <MikeSmith>
hsivonen: http://www.thepunctuationguide.com/en-dash.html#compoundadjectives says something about that odd en-dash usage

[06:24:18.0000] <MikeSmith>
"When a compound adjective is formed with an element that is itself an open compound or hyphenated compound, some writers replace the customary hyphen with an en dash."

[06:24:31.0000] <MikeSmith>
but yeah I don't know who those "some writers" are

[06:25:21.0000] <MikeSmith>
"The Oxford University Press style manual points out that ‘If you take hyphens seriously, you will surely go mad’."

[06:25:32.0000] <hsivonen>
the editorial board of CMoS probably

[06:25:52.0000] <hsivonen>
(being "some writers" that is)

[06:26:31.0000] <hsivonen>
in other news, I found a bug either in my parser code, in the unit tests or the spec. most likely in the parser

[06:26:44.0000] <hsivonen>
though I'm pretty sure that the code followed the spec when written

[06:27:06.0000] <hsivonen>
the issue being the name of the token in the <!DOCTYPE> case

[06:27:15.0000] <hsivonen>
parser says "", tests say null

[06:33:53.0000] <MikeSmith>
/me hopes it's not a regression caused by code he touched but pretty sure it could not be

[06:34:49.0000] <hsivonen>
MikeSmith: code comments suggests that the code is ancient and written to then-spec

[06:34:59.0000] <hsivonen>
so...

[06:35:01.0000] <MikeSmith>
whew

[06:35:20.0000] <hsivonen>
before the refactoring, I should have thought about overflowing numeric character references some more

[06:35:22.0000] <MikeSmith>
I wouldn't be surprised if the spec changed in the mean time then

[06:35:28.0000] <hsivonen>
/me considers them now

[06:35:41.0000] <MikeSmith>
character references is massive PITA

[06:35:47.0000] <hsivonen>
yes

[06:35:54.0000] <MikeSmith>
not worth the cost but stuck with it now

[06:40:08.0000] <hsivonen>
/me finds a bug in the existing NCR overflow handling

[06:41:22.0000] <hsivonen>
fun

[06:44:42.0000] <hsivonen>
only happens on EOF

[06:46:48.0000] <MikeSmith>
that code is no joy ride

[06:46:57.0000] <MikeSmith>
I guess it's the nature of the thing though

[06:47:40.0000] <hsivonen>
&#11111111111EOF differs from &#1111111111EOF &#111111111111EOF &#11111111111x and &#11111111111;

[06:48:30.0000] <MikeSmith>
that kinda rings some bells

[06:48:56.0000] <MikeSmith>
I think I independently noticed that when I was writing the othe patch

[06:49:02.0000] <hsivonen>
wow

[06:51:14.0000] <MikeSmith>
I spent quite a while looking at that code at the time, and testing

[06:51:37.0000] <MikeSmith>
I guess I should have actually put some additional test cases somewhere

[06:52:54.0000] <MikeSmith>
but I sorta vaguely remember finding out, hmm, this doesn't actually work for all cases (I mean just as far as the patch I had written)

[06:53:38.0000] <MikeSmith>
I guess I assumed the reason it didn't work for some cases was a problem in the code in my patch and not a problem already in the existing code

[06:54:03.0000] <MikeSmith>
/me wonders what html5ever source for handling this stuff looks like

[06:55:31.0000] <MikeSmith>
/me peruses https://github.com/servo/html5ever/blob/master/src/tokenizer/char_ref/mod.rs

[06:57:37.0000] <MikeSmith>
oh I didn't know html5ever had actual error reporting for parse errors

[06:57:39.0000] <jgraham>
WTAF

[06:58:04.0000] <jgraham>
Is my Firefox broken or are github using a non-fixed width font for code>

[07:00:16.0000] <jgraham>
Hmm, the font-family rule looks reasonable

[07:00:50.0000] <MikeSmith>
looks like fixed-width in my Firefox

[07:01:51.0000] <jgraham>
So apparently "Consolas" is being interpreted as something else

[07:01:55.0000] <jgraham>
for me

[07:06:04.0000] <MikeSmith>
jgraham: I got "Menlo Regular" (system) Used as: "Menlo"

[07:06:30.0000] <jgraham>
MikeSmith: Yeah, isn't that a mac thing though

[07:06:56.0000] <MikeSmith>
oh

[07:07:00.0000] <MikeSmith>
yeah I guess so

[07:08:03.0000] <MikeSmith>
ah    font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;

[07:15:08.0000] <annevk>
/me started using needsinfo on W3C Bugzilla

[07:15:14.0000] <annevk>
So far, positive results!

[07:17:02.0000] <MikeSmith>
yay glob

[07:29:23.0000] <hsivonen>
hmm. does the spec really now involve scanning for an arbitrarily large number of alphanumeric ASCII after & to see if the sequence is followed by ;?

[07:29:37.0000] <hsivonen>
to see if it's a parse error or not

[07:29:42.0000] <srji>
cd /home/visualisierte/Web/uiani

[07:32:34.0000] <annevk>
edit dom.bs

[07:32:59.0000] <hsivonen>
DoubleLongLeftRightArrow;

[07:33:06.0000] <hsivonen>
ClockwiseContourIntegral;

[07:33:14.0000] <hsivonen>
ooh. there is

[07:33:21.0000] <hsivonen>
CounterClockwiseContourIntegral;

[07:33:58.0000] <hsivonen>
that seems to be the longest valid character reference name

[07:34:07.0000] <hsivonen>
but I guess I should check programmatically

[07:34:37.0000] <hsivonen>
/me wishes https://html.spec.whatwg.org/entities.json had existed way back when

[07:53:18.0000] <wanderview>
annevk: can you elaborate on what you mean in this comment?  https://github.com/slightlyoff/ServiceWorker/issues/710#issuecomment-111017003

[07:53:27.0000] <wanderview>
what impact does opaque have on <img>?

[07:53:47.0000] <annevk>
wanderview: that you cannot paint it on canvas and then read the bytes

[07:53:52.0000] <annevk>
read the pixels*

[07:54:01.0000] <wanderview>
annevk: is that spec'd anywhere yet?

[07:55:00.0000] <wanderview>
and what behavior should painting on canvas implement?  display, but reading rejects or returns zero or something?

[07:56:42.0000] <annevk>
yeah, once you paint on canvas that taints it

[07:56:49.0000] <annevk>
that is specced

[07:57:04.0000] <annevk>
what is not specced is that if <img> gets an opaque response it needs to look at the internal response

[07:57:26.0000] <annevk>
the idea is that most new features would not look at the internal response but would use the same API as everyone else

[07:57:41.0000] <annevk>
thereby not creating new cross-origin information leaks

[07:57:49.0000] <annevk>
(<img> leaks height/width)

[07:58:37.0000] <wanderview>
its in the canvas spec?

[08:00:12.0000] <annevk>
yeah

[08:00:27.0000] <wanderview>
origin-clean

[08:00:28.0000] <wanderview>
I see it

[08:00:42.0000] <wanderview>
now to find where gecko implements that

[08:28:59.0000] <wanderview>
annevk: I think maybe we should write a separate spec issue for this... the only thing I see in the SW spec is non-normative text: "Renderer-side security checks about tainting for cross-origin content are tied to the transparency (or opacity) of the Response body, not URLs."

[08:29:16.0000] <wanderview>
it seems the steps should say something about tainting based on opacity

[08:30:34.0000] <wanderview>
I guess the steps don't really say to do anything in respondWith()... they just... end

[08:33:48.0000] <wanderview>
hmm, no it returns it to Main Fetch through HandleFetch

[08:34:04.0000] <wanderview>
annevk: does normal document loading integrate with Main Fetch or HandleFetch anywhere?  maybe thats what I am missing

[08:38:24.0000] <annevk>
wanderview: everything invokes #concept-fetch

[08:38:54.0000] <annevk>
wanderview: I guess I need to review SW again

[08:39:27.0000] <wanderview>
annevk: does it say to use the internal body of an opaque response?  because I guess its the internal things that use fetch that need to say that

[08:40:56.0000] <annevk>
wanderview: I don't follow

[08:41:24.0000] <annevk>
wanderview: ah, when you navigate someplace and get an opaque response that fails

[08:41:36.0000] <annevk>
wanderview: Fetch has some checks for that, results in a network error

[08:41:38.0000] <wanderview>
annevk: sorry, not navigate itself...

[08:42:25.0000] <wanderview>
annevk: what in spec says the browser should look at the internal response body when an opaque response is passed to respondWith() for a resource load (not navigation)

[08:42:26.0000] <wanderview>
?

[08:42:45.0000] <wanderview>
doesn't that need to be done in whatever uses #concept-fetch?

[08:44:00.0000] <annevk>
yes

[08:45:12.0000] <annevk>
wanderview: Fetch also needs to work on the internal response

[08:45:33.0000] <wanderview>
annevk: but does something in the main html spec use concept-fetch?

[08:45:34.0000] <annevk>
wanderview: it currently doesn't in https://fetch.spec.whatwg.org/#concept-http-fetch which might be buggy

[08:45:57.0000] <annevk>
wanderview: not literally right now, but the whole platform does conceptually

[08:47:05.0000] <annevk>
back later

[08:47:07.0000] <wanderview>
annevk: well, I think its literal for the respondWith() case, right?  the browser is loading an <img> element and the SW intercepts with respondWith()... that integration between <img> load and respondWith() Response is not really spec'd anywhere yet, right?

[08:48:40.0000] <annevk>
wanderview: once HTML et al are updated to use #concept-fetch, that would be specified

[08:48:47.0000] <wanderview>
ok, thanks

[08:49:18.0000] <annevk>
I mean, as long as those specifications are not updated, nothing would result in a SW being booted to handle their fetches...

[08:49:25.0000] <annevk>
Technically...

[08:50:21.0000] <wanderview>
yea

[08:50:31.0000] <wanderview>
stuff like passing on the tainting is not spec'd yet either, then

[08:51:40.0000] <ek_>
hello

[08:51:49.0000] <ek_>
i have a question related to HTML5 spec

[08:52:01.0000] <ek_>
In the spec when it says await a stable state

[08:52:14.0000] <ek_>
what does it mean by stable state?

[08:59:05.0000] <JonathanNeal>
I wanted to bring to your attention an issue I have with :focus and :hover being separate pseudo-classes, and pitching a solution @ http://discourse.specifiction.org/t/a-common-pseudo-class-for-hover-and-focus/877

[09:27:49.0000] <annevk>
heycam: you around?

[09:28:16.0000] <annevk>
heycam: the algorithms to get bytes out of a BufferSource can throw

[09:28:23.0000] <annevk>
heycam: due to e.g. the buffer being detached

[09:28:35.0000] <annevk>
heycam: it would be much nicer if the binding layer threw, no?

[09:31:01.0000] <Domenic>
https://github.com/orgs/improved-permissions?utm_source=github_site&utm_medium=blog&utm_campaign=organization-permissions looks useful

[09:53:53.0000] <heycam>
annevk: hi, yes but about to head out to dinner

[09:57:50.0000] <heycam>
annevk: where is the algorithm now, in Fetch?

[09:58:41.0000] <heycam>
annevk: oh no, we've got the "get a copy of the bytes held by the buffer source" term in IDL

[09:58:57.0000] <heycam>
and "Attempting to get a reference to or get a copy of the bytes held by a buffer source when the ArrayBuffer has been detached will fail in a language binding-specific manner."

[09:59:15.0000] <heycam>
so yes, I think having something in IDL that says the specific failure mode would be good

[10:00:48.0000] <heycam>
hmm, so in http://heycam.github.io/webidl/#es-buffer-source-types we check for [[ArrayBufferData]] being null, and throw

[10:00:56.0000] <heycam>
which I think is the state when the buffer has been detached

[10:01:03.0000] <heycam>
can you verify that's right?

[10:50:21.0000] <annevk>
heycam|away: yeah

[10:50:30.0000] <annevk>
heycam|away: I'll file a bug on making that use  IsDetachedBuffer

[12:10:18.0000] <Domenic>
annevk: btw we are collecting code coverage on web-platform-tests vs. jsdom/whatwg-url: https://github.com/jsdom/whatwg-url/issues/8

[12:10:34.0000] <Domenic>
annevk: hopefully we will supplement web-platform-tests with 100% coverage before this is all over

[12:10:42.0000] <Domenic>
right now it is like 70%

[12:25:15.0000] <jgraham>
Domenic++

[12:28:36.0000] <tobie>
this is probably a very daft question, is it possible to throw DOM Exceptions from application code, and if so, what's the best practice to do it?

[12:29:56.0000] <Ms2ger>
new DOMException()

[12:30:06.0000] <Ms2ger>
Works in Gecko

[12:31:06.0000] <Domenic>
Not in Chrome yet, but soon

[12:33:17.0000] <tobie>
oh, that's why. :)

[12:33:43.0000] <jib>
tobie: in firefox: throw new DOMException("hi", "SyntaxError"); http://jsfiddle.net/gm2czfva

[12:34:54.0000] <tobie>
ty jib

[13:03:29.0000] <TabAtkins>
Who still theoretically "maintains" Anolis?  Can we get that person to put a big "THIS TOOL IS NOT MAINTAINED, PLEASE USE BIKESHED INSTEAD" message on all the docs and download pages?

[13:03:51.0000] <jgraham>
gsnedders: ^

[13:04:25.0000] <gsnedders>
Ms2ger: ^^

[13:04:59.0000] <TabAtkins>
(Someone just dropped by w3c#pub with a problem publishing a spec using Anolis, and robin was rightly horrified that they were even capable of doing that at this point.)

[13:05:28.0000] <jgraham>
(something, something, horrified, respec, something)

[13:06:11.0000] <TabAtkins>
Baby steps.

[13:06:25.0000] <tantek>
bikeshed > respec b/c js;dr something something

[13:20:19.0000] <TabAtkins>
tantek: Well, there are a few reasons, related to both user experience and ecosystem health, but yeah.

[13:22:54.0000] <tantek>
TabAtkins: agreed, hence the something something :)

[13:32:14.0000] <jsbell>
tobie: per spec, `new` is optional for DOMException() constructor, just like native JS errors. That's holding me up landing Chrome support (it shouldn't but I'm also lazy...)

[13:33:45.0000] <tobie>
jsbell: do we get to add new error codes to it?

[13:33:57.0000] <tobie>
(asking for a friend)

[13:34:46.0000] <jsbell>
tobie: no; if you pass a known name (from webidl spec) it gets stamped with the right code, otherwise .code === 0

[13:35:11.0000] <jsbell>
Unless you meant new error names, in which case yeah, use any string you want.

[13:35:38.0000] <tobie>
I don't know what I meant

[13:36:24.0000] <tobie>
Imagine I'd like to have CacheMissError in a spec, how would I go about doing that?

[13:36:54.0000] <Ms2ger>
TabAtkins, can do, send me email

[13:37:27.0000] <jsbell>
tobie: "throw a CacheMissError exception." where 'throw' references the algorithm in webidl

[13:37:53.0000] <tobie>
and that's it?

[13:38:09.0000] <tobie>
I don't need to define CacheMissError anywhere?

[13:38:28.0000] <tobie>
/me goes crazy

[13:38:30.0000] <jsbell>
tobie: or "throw a new DOMException with error name CacheMissError"

[13:38:33.0000] <jsbell>
it's just a string

[13:38:34.0000] <jsbell>
go wild

[13:38:59.0000] <jsbell>
(the former is the short form I've seen annevk using and I've borrowed, webidl uses the latter)

[13:39:54.0000] <tobie>
/me throws a NSFWError exception.

[13:40:10.0000] <tobie>
ty

[13:40:43.0000] <jsbell>
webidl says "if you invent new exception types, report 'em and they'll get added asap" but I think that's just to keep the documentation in one place

[13:40:59.0000] <jsbell>
in IDB "v2' I still have all the exception types documented, but it does defer all details to webidl

[13:41:24.0000] <tobie>
k

[13:41:39.0000] <jsbell>
(^^ not an actual quote)

[16:26:07.0000] <ek_>
HI

[16:26:09.0000] <ek_>
 In HTML5 specs it talks about event loop which is responsible for processing events from the task queues. I was wondering which thread can enqueue events? Lets say if there is a UI event will there be a separate thread that will enqueue event and that event will be processed by the event loop?


2015-06-12
[17:48:46.0000] <JonathanNeal>
What are the advantages or disadvantages to adding all of the ARIA roles on a page via JavaScript?

[19:10:33.0000] <MikeSmith>
JonathanNeal: http://w3c.github.io/aria-in-html/#add-aria-inline-or-via-script

[19:15:34.0000] <MikeSmith>
hmm I guess it's not clear whether that guidance is about roles as well, not just states and properties

[19:16:36.0000] <MikeSmith>
though in practice I don't know how anybody would manage states and properties except via JavaScript

[19:34:06.0000] <Domenic>
I have found that roles cannot be modified (or added or removed) after inserting the element into the document

[19:34:11.0000] <Domenic>
At least, that is what chrome://accessibility says

[19:35:54.0000] <caitp>
i don't think that's actually true in practice, I believe there is code in the wild that needs to modify roles sometimes

[19:36:25.0000] <caitp>
at least, ngAria tries to attach a role to an element that didn't previously have one

[19:51:15.0000] <MikeSmith>
I reckon Steve Faulkner would know

[19:53:32.0000] <MikeSmith>
but rightly, his spec should be more precise here and also provide guidance on that question of whether roles should be changed or not (or can safely/reliably across UAs)

[20:16:59.0000] <Domenic>
caitp: but does that code actually work?

[20:19:45.0000] <caitp>
I think so

[20:20:36.0000] <caitp>
marcy sutton is pretty good with that stuff, and in touch with the spec

[20:21:23.0000] <caitp>
tests pass on multiple browsers, a few sites are using it, so i'm "pretty sure" it works

[20:21:49.0000] <caitp>
although the tests might not be very meaningful

[22:48:29.0000] <annevk>
Domenic: very cool

[22:48:34.0000] <annevk>
Domenic: re code coverage

[23:52:33.0000] <annevk>
Sebmaster: goes more for you I guess ^^

[00:18:22.0000] <annevk>
Hmm

[01:09:13.0000] <MikeSmith>
botie, inform annevk wanted to ask you if any spec change was made related to https://lists.w3.org/Archives/Public/www-archive/2014Oct/0018.html or what the URL for the open issue for it (if any)

[01:09:14.0000] <botie>
will do

[01:46:04.0000] <SteveF>
Domenic: you can add/change role values after doc has loaded. If you refresh the chrome://accessibility/ acc tree dump it will show the current role in DOM

[01:51:17.0000] <SteveF>
MikeSmith: the advice you pointed to is about not adding ARIA attributes in the DOM that don't make sense when scripting is not supported, suggests all attributes that rely on scripting to make sense should be added via scripting (unless the app is only meant to be used with scripting enabled) For example landmark roles are fine as they convey doc structure , while <div role=spinbox> would...

[01:51:18.0000] <SteveF>
...only make sense if the widget is scripted

[01:59:11.0000] <SteveF>
If any advice in w3c.github.io/aria-in-html/ needs improvement please file an issue https://github.com/w3c/aria-in-html/issues

[02:14:22.0000] <MikeSmith>
ok

[02:36:30.0000] <hsivonen>
w3.org unreachable for everyone or just for me?

[02:40:22.0000] <espadrine>
for me too

[02:40:29.0000] <beowulf>
hsivonen: europe seems to be having some problems with it's internet, judging by twitter

[02:42:05.0000] <espadrine>
wow, I hit ctrl+U, and I'm seeing the bytes arrive packet by packet

[02:42:13.0000] <espadrine>
it's really slow

[02:50:23.0000] <hsivonen>
espadrine, beowulf: thanks

[02:56:09.0000] <beowulf>
hsivonen: https://twitter.com/JobSnijders/status/609289882184384512

[03:06:35.0000] <tantek>
hsivonen w3.org unreliable from here too

[03:17:00.0000] <MikeSmith>
tantek: from San Francisco?

[03:17:38.0000] <darobin>
beowulf: I don't think that's the problem, this is W3C-specific

[03:17:47.0000] <darobin>
I can only access any W3C service through my VPN

[03:19:22.0000] <JoWie>
same for me

[03:19:23.0000] <MikeSmith>
have people who are having problems getting to w3c tried a traceroute

[03:19:31.0000] <MikeSmith>
hsivonen: traceroute?

[03:21:32.0000] <MikeSmith>
JoWie: from US or EU?

[03:23:34.0000] <darobin>
if you have it around, sudo mtr www.w3.org would be nice

[03:25:45.0000] <MikeSmith>
yeah just tried mtr and concur with darobin advice

[03:26:01.0000] <MikeSmith>
I'm not having any problems getting a route for the UK at least

[03:26:47.0000] <MikeSmith>
hmm well I wasn't until just a moment ago

[03:26:53.0000] <MikeSmith>
but now I am

[03:27:05.0000] <MikeSmith>
I guess I just further jinxed it

[03:27:11.0000] <darobin>
lol

[03:27:20.0000] <darobin>
maybe this is the day the internet dies

[03:27:21.0000] <JoWie>
EU

[03:27:35.0000] <tantek>
MikeSmith: yes

[03:28:02.0000] <darobin>
bye sweet friends, we'll meet again when we rebuild civilisation!

[03:28:17.0000] <MikeSmith>
I'm now getting as far as Level3 at Manchester

[03:28:30.0000] <MikeSmith>
civlization has ended at Manchester

[03:28:36.0000] <MikeSmith>
god help us all

[03:29:10.0000] <JoWie>
for me traceroute gives empty results on later hops

[03:29:16.0000] <JoWie>
last one i see is prolexic

[03:29:25.0000] <MikeSmith>
JoWie: interesting

[03:30:20.0000] <darobin>
yeah prolexic is failing, users in Germany are also reporting Level3 or Telia as failing

[03:30:45.0000] <JoWie>
i've had many issues with level 3 in a multiplayer game many years ago

[03:30:54.0000] <MikeSmith>
heh

[03:30:58.0000] <JoWie>
for months on end

[03:31:10.0000] <JoWie>
it was actually faster for me to proxy to a server i have in the US

[03:31:26.0000] <MikeSmith>
oh I thought you were making a joke

[03:31:36.0000] <MikeSmith>
yeah Level3 has issues sometimes

[03:31:45.0000] <JoWie>
faster as in ping times

[03:31:48.0000] <JoWie>
heh

[03:31:55.0000] <darobin>
anyway, I think that means it's lunch time

[03:32:20.0000] <MikeSmith>
but since some giant % of net traffic goes through Level3 when they have problems everybody has problems

[03:32:50.0000] <MikeSmith>
/me cracks open some lunch in support of darobin 

[03:33:19.0000] <darobin>
heh

[03:36:00.0000] <MikeSmith>
It was Level3 who also apparently gave the NSA access to Google and Yahoo internal network lines (as was reported a couple years back from the first set Snowden materials that published I think)

[03:36:18.0000] <darobin>
ok, I can confirm that beowulf was right, this is not the w3c-specific issue I thought it might be

[03:38:16.0000] <MikeSmith>
ah ok

[03:43:02.0000] <MikeSmith>
ok so it seems http://research.dyn.com/2014/09/why-the-internet-broke-today/ might be happening again

[03:43:14.0000] <MikeSmith>
BGP FTW

[03:43:55.0000] <darobin>
yup

[03:44:12.0000] <MikeSmith>
https://twitter.com/mitsuhiko/status/609307066159767552

[03:44:20.0000] <MikeSmith>
http://www.karotte.org/pics/bgp-stability.png

[03:53:45.0000] <smaug____>
philipj: do you you have usage data for svg's useCurrentView ?

[04:19:55.0000] <philipj>
smaug____: I'm afraid not, is that something you'd like to change/remove?

[04:33:53.0000] <smaug____>
philipj: heycam|away wants to remove it

[04:34:08.0000] <smaug____>
apparently removed from the latest svg spec already

[04:34:30.0000] <philipj>
smaug____: let me check, that must have happened very recently since I just synced this interface with the spec

[04:35:38.0000] <smaug____>
philipj: https://github.com/w3c/svgwg/commit/4c26fd36937a65192024208d85c144a21071b057

[04:35:49.0000] <philipj>
smaug____: thanks

[04:36:05.0000] <smaug____>
so yes, somewhat recent change ;)

[04:36:56.0000] <philipj>
smaug____: heh :)

[04:37:04.0000] <philipj>
smaug____: I'll add the use countesr

[04:55:35.0000] <heycam>
philipj, smaug____, thanks

[04:56:25.0000] <philipj>
heycam, smaug____, use counters in Gecko would be sweet, nudge nudge

[04:56:35.0000] <heycam>
philipj: the patches are in the process of being reviewed :)

[05:00:36.0000] <smaug____>
heycam: so should we wait for usage data before removing the property?

[05:00:57.0000] <smaug____>
/me thinks so

[05:01:15.0000] <heycam>
yeah sounds fine

[05:01:21.0000] <heycam>
I think I know what the answer will be, but no rush :)

[05:02:00.0000] <smaug____>
yeah, sorry about being so reluctant to make blind changes to web apis ;)

[05:02:06.0000] <smaug____>
or how to say

[05:02:50.0000] <heycam>
np

[05:31:55.0000] <botie>
annevk, at 2015-06-12 08:09 UTC, MikeSmith said: wanted to ask you if any spec change was made related to https://lists.w3.org/Archives/Public/www-archive/2014Oct/0018.html or what the URL for the open issue for it (if any)

[05:40:50.0000] <annevk>
MikeSmith: not sure honestly

[05:41:16.0000] <annevk>
MikeSmith: doesn't seem like that was ever reported as issue

[05:41:42.0000] <MikeSmith>
annevk: OK

[05:42:06.0000] <MikeSmith>
annevk: do you think it should be an issue or is it not really actually an issue?

[05:42:38.0000] <MikeSmith>
Santi at least didn't seem to think it was an issue that he as an implementor needed to actually care about

[05:42:41.0000] <annevk>
MikeSmith: it's not clear that test is actually testing it

[05:42:45.0000] <MikeSmith>
ok

[05:43:11.0000] <MikeSmith>
well as long at you're aware of it that's sufficient for me

[05:43:30.0000] <MikeSmith>
I just wasn't sure if anybody had bothered to give you a heads-up about it

[05:44:04.0000] <annevk>
MikeSmith: if you go to https://url.spec.whatwg.org/reference-implementation/liveview.html and enter http://test.com/[ you'll see the percent encoding being uppercase

[05:44:41.0000] <annevk>
MikeSmith: yeah, pretty sure that email is Sam not actually understanding what is going on

[05:45:05.0000] <annevk>
MikeSmith: basically, if you have percent encoding in the input, it's not normalized

[05:45:18.0000] <annevk>
MikeSmith: and I think Santiago might be normalizing, which is wrong per the specification

[06:06:56.0000] <MikeSmith>
annevk: yeah but Santi also explains why he's doing what he's doing (with the implication that he's not concerned about strict conformance of his implementation to the spec on this and doesn't think any of his users care either)

[06:07:56.0000] <annevk>
MikeSmith: yeah, it's just the reply that's wrong I guess

[06:08:21.0000] <MikeSmith>
yeah

[06:08:36.0000] <MikeSmith>
doesn't seem like something that anybody else sees as a real problem

[06:08:41.0000] <annevk>
MikeSmith: I somewhat agree with Santi that it would be nicer if everyone normalized and if I had defined URLs fifteen years ago (with the knowledge I have now) I would have, but...

[06:09:10.0000] <MikeSmith>
yup

[06:09:37.0000] <annevk>
philipj: I'll try to fix that mutation macro stuff now

[06:10:01.0000] <annevk>
philipj: I think I'll also get rid of the macro name and how it currently works, since it's rather weird

[06:10:41.0000] <philipj>
annevk: good timing, if you're really quick maybe the implementation can be updated before it lands

[06:10:50.0000] <philipj>
(not ships, that's not on the table yet)

[06:11:10.0000] <annevk>
I think you'll need Symbol.unscopeables to prevent breakage, but who knows

[06:18:01.0000] <philipj>
annevk: the IDL has [Unscopeable

[06:18:14.0000] <philipj>
I'm hoping that does the right thing

[06:18:25.0000] <annevk>
ah yes, if that's all defined already it should

[06:18:50.0000] <philipj>
should all new APIs ever now have [Unscopeable], or what's the deal?

[06:19:33.0000] <annevk>
mostly new stuff on nodes and arrays and such

[06:19:41.0000] <philipj>
heycam: will it be enough to measure just the attributes on SVGSVGElement, or is there some internal thing that's connected that should also be measured?

[06:19:43.0000] <annevk>
if it's likely that someone has a variable with that name

[06:20:19.0000] <heycam>
philipj: no just measuring accessing that property is fine

[06:20:28.0000] <philipj>
heycam: thanks, doing it now

[06:23:29.0000] <philipj>
heycam: which patches are in the process of being reviewed, those for the SVG changes or something for use counters?

[06:23:58.0000] <heycam>
philipj: use counters

[06:24:06.0000] <philipj>
awesome :)

[06:24:11.0000] <heycam>
https://bugzilla.mozilla.org/show_bug.cgi?id=968923 if you're interested

[06:25:38.0000] <philipj>
CC'd myself

[06:51:45.0000] <hsivonen>
does anyone happen to have URLs to test cases that have huge attributes or text nodes?

[06:52:04.0000] <hsivonen>
(checking if I can be lazy and not write my own)

[07:48:00.0000] <annevk>
whoa Wikipedia goes HTTPS

[07:51:01.0000] <Domenic>
woah!

[07:58:09.0000] <tobie>
it's to make sure no one can alter the content. oh wait.

[07:59:26.0000] <annevk>
heh

[08:04:31.0000] <annevk>
philipj: I proposed a fix for the remaining bug with before/after/replaceWith

[08:09:44.0000] <ek_>
hello

[08:10:28.0000] <annevk>
ek_: hey

[08:11:01.0000] <ek_>
How are you? I had some questions to ask about HTML5 internals

[08:11:15.0000] <annevk>
ek_: good good, I saw, but you were not here!

[08:11:41.0000] <ek_>
I have some questions regarding task queue

[08:11:43.0000] <annevk>
ek_: basically, the UI events come from OS-level notifications, that the browser then queues up tasks for

[08:12:09.0000] <annevk>
ek_: it probably varies per OS if that's a distinct thread or not

[08:12:30.0000] <ek_>
How does the OS send notification to the browser? lets say its linux

[08:13:26.0000] <annevk>
ek_: "it's complicated" http://stackoverflow.com/questions/12717138/what-is-linux-s-native-gui-api

[08:15:39.0000] <ek_>
ok cool. Well actually what I was looking for not just for UI events. As there are multiple task queues in the browser. Is there any possibility that there are multiple threads that are inserting task into single queue(either it is UI, DOM or network queue)

[08:17:55.0000] <annevk>
Maybe history could hit such a situation

[08:17:55.0000] <Ms2ger>
I don't know why not

[08:18:16.0000] <annevk>
But in general that's up to implementations

[08:18:49.0000] <annevk>
As long as A -> [black box] -> B, it doesn't really matter what [black box] is

[08:20:36.0000] <Domenic>
tobie: rwaldron: I am going to unwatch sensors API for now because I am trying to cut down on my email flow a bit. But don't hesitate to tag me into interesting issues and questions.

[08:21:00.0000] <MikeSmith>
ek_: I'm curious why the answer to that question matters to you

[08:21:28.0000] <ek_>
So basically what I understood is when the specs tells us to do some operation asynchronously like fetch something from the web. It will be up to the implementor to do it using a different thread and then enqueue whatever task it is supposed to do or use some other mechanism to do it asynchronously.

[08:21:53.0000] <Ms2ger>
Yep

[08:21:59.0000] <tobie>
Domenic: noted. Thanks for all you did so far, it's been really helpful.

[08:23:18.0000] <annevk>
ek_: it doesn't necessarily have to be a distinct thread, but you have to be pretty clever to pull that of (Opera used to do that)

[08:23:49.0000] <ek_>
MikeSmith: I am trying to understand the queueing internals from browser perspective to get a better understanding of the event based model used and how browser is implemented

[08:23:53.0000] <annevk>
ek_: note that tasks are used to synchronize, they're not "in parallel" activity

[08:24:26.0000] <MikeSmith>
annevk: Opera did it on a single thread? if so I'd wonder why or what was too be gained from implementing it that way

[08:25:13.0000] <MikeSmith>
ek_: if so it would kinda seem like you'd want to be looking at some actual browser code for it

[08:25:20.0000] <ek_>
yeah tasks are executed in order as there is only one event loop that will be processing the events but usually there can be many threads that can insert task into the queue.

[08:27:25.0000] <annevk>
MikeSmith: supporting devices without threads

[08:27:27.0000] <MikeSmith>
myself I don't understand how, practically speaking, it can be implemented without at least one other thread separate from the JS execution is running

[08:27:34.0000] <MikeSmith>
annevk: ah sure

[08:27:35.0000] <annevk>
MikeSmith: dare I say, Brew

[08:27:41.0000] <MikeSmith>
oh god

[08:27:56.0000] <MikeSmith>
yeah now I vaguely recall some of this

[08:28:31.0000] <Ms2ger>
Pausing js execution

[08:28:38.0000] <MikeSmith>
the "PC Site Viewer" version of Opera Mobile we did for KDDI/Au here in Japan

[08:29:03.0000] <MikeSmith>
Ms2ger: right that's why I said practically speaking

[08:29:09.0000] <MikeSmith>
performantly speaking

[08:29:45.0000] <Domenic>
async I/O!

[08:29:46.0000] <MikeSmith>
not-totally-sucking-for-users-in-terms-of-performance-and-responsiveness speaking

[08:29:52.0000] <Domenic>
it's webscale

[08:29:55.0000] <MikeSmith>
heh

[08:30:34.0000] <MikeSmith>
I do know that the Brew "PC Site Viewer" version of Opera was actually usable, because I used it every day

[08:31:05.0000] <MikeSmith>
it wasn't a joy ride but it worked without being completely unusable at least

[08:31:46.0000] <MikeSmith>
I can imagine they had to use the same tricks for the Opera version that ran on the Nintento DS

[08:32:07.0000] <MikeSmith>
which had as much computing power as a sewing machine

[08:32:47.0000] <MikeSmith>
I doubt anybody else could have done it, or at least nobody would have tried

[08:35:13.0000] <ek_>
Thanks for the help

[08:36:35.0000] <JoWie>
non blocking i/o is easy to use

[08:36:45.0000] <Ms2ger>
MikeSmith, I think the better comparison is "as much computing power as the Apollo control system" :)

[08:37:02.0000] <MikeSmith>
heh

[08:37:11.0000] <gsnedders>
MikeSmith: you just have the JS engine yield control after some number of bytecode instructions have been executed, and use async IO and such like

[08:38:04.0000] <gsnedders>
the DS version of Opera… Well…

[08:38:40.0000] <gsnedders>
I'm pretty certain the diff was pretty huge v. any other release

[08:42:32.0000] <JoWie>
you had to buy opera on the wii

[08:51:06.0000] <gsnedders>
JoWie: the DS version was on a cartridge you had to buy!

[08:51:13.0000] <gsnedders>
and the DS has like no memory.

[08:51:33.0000] <jgraham>
MikeSmith: I think you're being quite harsh ot sewing machines

[08:52:05.0000] <jgraham>
Ht Wii version of Opera was free

[08:52:24.0000] <jgraham>
The CS version had to be bundled with extra memory on the cartridge

[08:52:28.0000] <jgraham>
*DS

[08:55:54.0000] <JoWie>
opera on wii became free later on

[08:55:56.0000] <JoWie>
with a refund

[08:56:11.0000] <JoWie>
it cost 500 "points" initially

[09:04:56.0000] <JoWie>
is there an easy way to view old versions of a spec

[09:05:32.0000] <Ms2ger>
Which?

[09:05:32.0000] <botie>
Which is all true, but that still doesn't mean it's a good idea, but obviously not everyone at Mozilla is aligned on that

[09:05:52.0000] <JoWie>
dom

[09:06:10.0000] <Domenic>
JoWie: the committed versions are all checked in so use rawgithub.com

[09:06:22.0000] <Ms2ger>
^

[09:08:09.0000] <gsnedders>
jgraham: the memory cartridge was separate!

[09:08:37.0000] <gsnedders>
jgraham: and also only for the DS, not the DSi (which has more memory and no GBA slot)

[09:08:46.0000] <JoWie>
cool site

[09:09:23.0000] <gsnedders>
even with the DSi the binary is larger than the total RAM, IIRC

[09:27:53.0000] <jgraham>
So WebDriver wants to define an operation that will take a JS object and convert it into a serialized form that has a trivial JSON representation. In particular this representation represents Elements as objects like {some_magic_property: element_uuid}. It should also handle arrays-of-things-that-can-contain-elements e.g. Array, NodeList, HTMLCollection, etc. Is there a generic way to refer to this class of collections (basically either collections 

[09:28:02.0000] <jgraham>
/me isn't sure that made sense

[09:30:20.0000] <gsnedders>
"basically either collections t"

[09:30:27.0000] <gsnedders>
having the rest of what you wrote would help

[09:30:42.0000] <jgraham>
hat may have arbitary members or collections that may contain elements), or do I need to go on a case-by-case?

[11:15:38.0000] <mounir>
annevk: yt?

[15:41:54.0000] <caitp>
what is with the structured clone algorithm throwing for instances of Error?

[15:42:52.0000] <caitp>
it's the kind of thing that's nice to be able to pass from a worker to the ui thread

[15:50:26.0000] <caitp>
seems like it shouldn't be too much of a stretch to make [[ErrorData]] do something useful like hold precious stacktrace info for structured clone's needs

[16:10:12.0000] <benjamingr>
zenparsing: would you mind taking a look at something (short!) I just wrote and giving me quick feedback?

[16:11:50.0000] <zenparsing>
benjamingr sure - url?


2015-06-13
[21:19:14.0000] <caitp|away>
and for that matter, why is it referencing [[Class]]

[23:21:37.0000] <annevk>
mounir: am now

[23:22:47.0000] <annevk>
caitp: https://www.w3.org/Bugs/Public/show_bug.cgi?id=28389

[23:24:18.0000] <annevk>
jgraham: in IDL you could use sequence<Element>

[23:24:59.0000] <annevk>
jgraham: however, if you do things at the ES-level you need to handle all of them, though you could still use the iterator protocol I suppose, but just gets a little wordier

[23:25:02.0000] <annevk>
(and harder)

[01:21:36.0000] <tobie>
I'm trying to help people visualize different proposals for the generic sensor api and I'm not too sure how to go about it.

[01:22:03.0000] <tobie>
Examples help, but don't really give an idea of how the different pieces fit together.

[01:22:51.0000] <tobie>
I was wondering if UML-ish class diagrams would help, and if so, if they were some good tools to turn WebIDL into such diagrams.

[04:11:24.0000] <Ms2ger>
assert_equals(window.matchMedia('(device-aspect-ratio: 1280/800)').matches, true, "Expected value for device-aspect-ratio is 1280/800");

[04:11:31.0000] <Ms2ger>
What? Why?


2015-06-15
[04:29:48.0000] <annevk>
philipj: Media Session has matured surprisingly fast

[04:30:01.0000] <annevk>
philipj: pretty good work from you guys

[04:32:08.0000] <philipj>
annevk: that's almost entirely thanks to richt, implementation-wise we're not very far along yet :)

[04:32:54.0000] <annevk>
I will say that he is amazingly bad at placing commas for a native speaker :p

[04:33:06.0000] <richt>
annevk: lol. but thanks.

[04:33:43.0000] <richt>
we still have lots of interesting issues to resolve of course. Implementation should flush those out.

[04:34:19.0000] <annevk>
philipj: so sicking's concerns seem mostly high-level

[04:34:32.0000] <annevk>
philipj: whether we can align desktop and mobile and not break stuff

[04:34:39.0000] <annevk>
philipj: that current implementations are rather sucky

[04:45:41.0000] <philipj>
annevk: one issue that we're trying to get internal input in, do resolve our deadlock, is https://github.com/whatwg/mediasession/issues/50

[04:45:50.0000] <philipj>
s/internal/external/

[05:01:02.0000] <annevk>
philipj: your position makes somewhat more sense to me

[05:03:07.0000] <annevk>
philipj: although I don't really see how https://github.com/whatwg/mediasession/issues/50#issuecomment-111076225 cannot be achieved without activate()

[05:03:25.0000] <annevk>
philipj: it seems to me you can always create a MediaSession as appropriate and assign it to some element

[05:04:42.0000] <philipj>
annevk: do you mean that the metadata could be used even before the session has become active for the first time?

[05:05:19.0000] <annevk>
philipj: well it could be set and ready way before you invoke play() and then once play() is invoked the UA updates all things

[05:05:54.0000] <annevk>
philipj: that is, you don't need activate to set metadata afaict

[05:06:55.0000] <philipj>
annevk: right, you don't, but our thinking has been that the session needs to become active (by explicit or implicit activation) before any UI is shown

[05:07:29.0000] <annevk>
ah right

[05:07:44.0000] <davve>
and remote control events hooked up in this case.

[05:07:54.0000] <philipj>
I mean that's not set in stone, but it's the model I think we've all had in mind so far

[05:09:33.0000] <philipj>
annevk: if after reading our walls of text you don't feel strongly then don't feel like you have to pick sides :)

[05:10:21.0000] <annevk>
https://extensiblewebmanifesto.org/ makes me think we should go with whatever iOS and Android do

[05:11:08.0000] <annevk>
it seems the issues richt is alluding to could be avoided by the UA first requiring the user to interact with an app before granting it "activate", based on some heuristics

[05:11:40.0000] <annevk>
I guess it might be worth asking the iOS/Android folks if they like the current setup

[05:11:41.0000] <philipj>
annevk: requiring a user interaction for activate() has crossed my mind

[05:13:07.0000] <philipj>
we haven't experimented, but I don't think iOS/Android has that kind of restriction

[05:17:09.0000] <davve>
On iOS you may call AVAudioSession.sharedInstance().setActive(true) right when your app is shown to silence whatever was playing.

[05:19:43.0000] <philipj>
requiring the tab to be visible would be a smaller restriction

[05:48:50.0000] <annevk>
visible + focus

[05:55:05.0000] <JakeA>
annevk: "The idea is to have some kind of new API that can be used to store a small amount of synchronization data (perhaps writeonly to avoid abuse)" - notifications have .data, is generalising this what you were thinking? As in, a (potentially) disk-based sorta-weakmap?

[05:55:46.0000] <JakeA>
Seeing people abuse the cache API for key/value storage because IDB's too hard makes me sad, but I totally get it

[06:00:44.0000] <annevk>
JakeA: yeah, a simple setPersistentData() thingie and having fetch() accept it for network transfer

[06:01:12.0000] <annevk>
JakeA: just so you can store some state like progress in a game that isn't wiped when the user runs out of storage

[06:01:24.0000] <annevk>
JakeA: prolly capped at a MiB or less

[06:58:57.0000] <annevk>
Location is so whacky :-(

[07:01:21.0000] <JonathanNeal>
Why has :any-link seen such poor browser adoption?

[07:03:44.0000] <darobin>
I think people are just generally happy selecting for a, or failing that a[href]

[07:04:12.0000] <darobin>
I mean :any-link is slightly neater, but it's not that huge of a difference

[07:04:49.0000] <bid>
hi, since XMLHttpRequest.async = false is deprecated, with what i can replace the behavior? i need to do a "blocking" operation can't change to none blocking... :\

[07:09:03.0000] <annevk>
JonathanNeal: Mozilla has supported a prefixed variant since forever

[07:09:15.0000] <annevk>
JonathanNeal: submit a patch to unprefix it if that hasn't happened yet?

[07:09:28.0000] <JonathanNeal>
darobin: do you know why :link was even a thing? Are there other visually similar elements that match :link?

[07:09:29.0000] <annevk>
bid: yes you can

[07:12:23.0000] <bid>
annevk: how?

[07:13:14.0000] <annevk>
depends on the situation

[07:14:07.0000] <darobin>
JonathanNeal: well, :link should really just be called :unvisited

[07:14:19.0000] <darobin>
beyond that, I think it was just premature generalisation

[07:16:32.0000] <bid>
annevk: i am loading a webpage using node.js and jsdom. some of the pages i am loading require me to emulate file system actions like "ls -al" so i fugure i will use Ajax, since i need the data "now" i can't do it in async way. and i can't change the way the pages works since the idea is to emulate the way they rans on production system. i hope it is clear :\

[07:17:53.0000] <annevk>
that you need the data synchronous is a bug in your software

[07:17:56.0000] <JonathanNeal>
Ah. Perhaps :any-link would have made more sense paired with an :unvisited pseudo-class cloning :link

[07:17:58.0000] <Ms2ger>
Also, what's with the respec plugging on my Anolis thread? BS is a much more sensible replacement

[07:18:53.0000] <annevk>
Who is doing that?

[07:23:36.0000] <darobin>
Ms2ger: take it up with Marcos

[07:23:45.0000] <darobin>
you'll be wrong, but take it up with Marcos ;)

[07:24:07.0000] <Ms2ger>
I wa talking about you too :)

[07:24:25.0000] <darobin>
I didn't plug nothing man

[07:24:39.0000] <darobin>
I just let people pick their thing

[07:25:04.0000] <darobin>
if you like Python then Bikeshed is great, if you're more into Web technologies then ReSpec might come more naturally

[07:25:06.0000] <darobin>
just sayin'

[07:26:01.0000] <darobin>
JonathanNeal: I'm not sure that there'd be value in having a :unvisited that's exactly the same as :link; it's not like it's the only misnomer in the platform

[07:26:28.0000] <Ms2ger>
Let's fix Referer

[07:26:32.0000] <annevk>
if you're into fouc, non-working fragment identifiers, and old-fashioned API markup I guess ReSpec is pretty awesome

[07:26:34.0000] <JonathanNeal>
Yea, this isn’t something commonly upsetting websites either. I only noticed it because it was so similar to a problem I was having with :focus and :hover.

[07:27:08.0000] <darobin>
annevk: I haven't seen a fouc in a long time, but maybe that's just me; frags have worked forever, newer-style WebIDL has landed...

[07:27:32.0000] <annevk>
I frequently have to hit enter again in the address bar to get where I want to be

[07:27:42.0000] <darobin>
never seen that problem

[07:27:52.0000] <JonathanNeal>
I was QA’ing a beautiful site that totally failed me with keyboard navigation. Most of my bugs boiled down to the solution: “add :focus support”.

[07:27:58.0000] <darobin>
I mean, not since it was fixed in 2010 or some such

[07:28:46.0000] <darobin>
bid: I really see no reason to do what you're doing, especially if you're loading with jsdom — you should have enough control to do whatever you want and not need anything sync

[07:29:08.0000] <annevk>
I see fouc all the time

[07:29:12.0000] <annevk>
with ReSpec

[07:29:22.0000] <JonathanNeal>
I see minute-ouc on mobile

[07:29:35.0000] <annevk>
can't reproduce the fragment issue at the moment

[07:29:44.0000] <philipj>
darobin: I've seen the fragment problem from time to time, doesn't seem to end up exactly at the right place

[07:29:56.0000] <philipj>
never filed a bug when it's happened, of course

[07:30:10.0000] <philipj>
an fouc is the norm for respec isn't it? when doesn't it happen?

[07:30:23.0000] <darobin>
philipj: the only cases in which I've seen the fragment problem today are not ReSpec-specific, it's people tacking their own script processing on at the end

[07:30:30.0000] <Ms2ger>
Perhaps in w3c offices :)

[07:30:43.0000] <darobin>
I don't get FOUCs, but maybe it's because it's always hot in cache

[07:30:52.0000] <darobin>
/me doesn't work in a W3C office

[07:31:01.0000] <bid>
beside the qustion if it is good design. is there a way to query the server in a blocking way?

[07:31:31.0000] <JonathanNeal>
I wrote about my issue with :hover here and proposed a new pseudo-class to target :focus and :hover jointly. http://discourse.specifiction.org/t/a-common-pseudo-class-for-hover-and-focus/877/3

[07:32:38.0000] <darobin>
bid: well... you can navigate

[07:33:13.0000] <bid>
darobin: there is a reason, for a start the main thing is to auto QA the javascript. so i can't change the source files.

[07:33:22.0000] <bid>
what do you mean navigate?

[07:33:40.0000] <darobin>
like go to a completely different page; the server pushing HTML to you can block all it wants

[07:33:52.0000] <JonathanNeal>
annevk: ^ :enter addresses a far more prevelent issue on sites than :link/:visited - thoughts?

[07:33:59.0000] <darobin>
bid: none of that sounds like it needs sync

[07:34:41.0000] <annevk>
JonathanNeal: I remember proposing something like that ages ago, not sure why it didn't happen

[07:34:57.0000] <annevk>
JonathanNeal: www-style is still the best place for those discussions

[07:35:49.0000] <JonathanNeal>
annevk: Nice, I’d love to see those discussions. I wrote a polyfill, too https://github.com/jonathantneal/postcss-pseudo-class-enter I’ll try to get on that list and pitch this there as well.

[07:37:15.0000] <bid>
darobin: i am emulating javascript that runs inside exe file. since it is running on the server side and in "production" the javascript rans in the exe file and have access to different windows api... in the server side (node+jsdom) i need to emulate the windows api behavior... this is the use case...

[07:37:48.0000] <JakeA>
JonathanNeal: The problem I have is :focus plays badly with click handlers

[07:38:02.0000] <JakeA>
I end up calling blur() to un-stick the style

[07:38:16.0000] <JakeA>
or avoiding :focus altogether. Both options bad.

[07:38:48.0000] <JakeA>
I'd like a :tab-focus pseudo to differentiate between a general :focus and a keyboard focus

[07:40:25.0000] <JonathanNeal>
JakeA: I’ve seen something like with a list of hash links. Once one link is clicked, it holds focus, and once I hover over other elements, I get the illusion of two hovered elements.

[07:40:35.0000] <JonathanNeal>
Is that similar to what you’re describing?

[07:40:40.0000] <JakeA>
exactly

[07:40:50.0000] <darobin>
bid: sorry, your situation seems to be pretty unusual, I don't think I can help you

[07:41:18.0000] <bid>
yes it is... :) so what is the way to bypass and do sync operations?

[07:41:37.0000] <bid>
i tried using workers but in jsdom i have issues with it..

[07:41:44.0000] <bid>
not sure why yet...

[07:41:59.0000] <Sebmaster>
bid: worker support isnt in jsdom

[07:42:43.0000] <bid>
Sebmaster: can you elaborate?

[07:43:41.0000] <Sebmaster>
bid: jsdom doesn't support Worker; it's kinda hard to do in node.js since you need to spawn a new process

[07:45:03.0000] <bid>
ok.. so what are the alternative?

[07:45:19.0000] <Ms2ger>
Process?

[07:46:21.0000] <bid>
?

[07:48:09.0000] <JonathanNeal>
JakeA: it’s almost like we want elements to drop :focus on :activate.

[07:48:31.0000] <JonathanNeal>
Except we don’t want to lose our tab position.

[07:49:05.0000] <JakeA>
right, although I don't know if I want :focus gone after :activate if the focus was via keyboard

[07:52:19.0000] <darobin>
Sebmaster: what problem are you seeing with starting a new process? it's not hard. Is it for communication?

[07:53:19.0000] <annevk>
MikeSmith: was https://www.w3.org/Bugs/Public/show_bug.cgi?id=26338#c6 ever banned?

[07:53:31.0000] <Sebmaster>
darobin: we'd need to start a new process, and initialize jsdom in it (targeted specifically to a worker) and then run the code; postMessage()'ing is gonna be the next problem afterwards

[07:54:08.0000] <darobin>
Sebmaster: I'm not saying it doesn't require work :) But it doesn't seem problematic in itself

[07:54:27.0000] <Sebmaster>
darobin: yeah, but there's just so much more important stuff in jsdom than that to do

[07:56:40.0000] <darobin>
Sebmaster: sure, I was just reacting to the fact that you seems to be pointing at a serious issue; I completely understand that it takes time

[07:56:46.0000] <darobin>
(and isn't a priority)

[07:57:12.0000] <Sebmaster>
nah i was just trying to express that it's not going to happen anytime soon in jsdom

[07:57:30.0000] <Sebmaster>
(at least from an official side, PRs might change that easily)

[07:57:34.0000] <JakeA>
bid: Is this what you're looking for? https://github.com/driverdan/node-XMLHttpRequest

[07:59:20.0000] <Sebmaster>
bid: jsdom should still support synchronous XHR anyways

[07:59:36.0000] <Sebmaster>
i dont think we'll forcibly remove it

[08:27:56.0000] <Domenic>
annevk: does <sdfoasdfsf> close <p>s or is that just <div>?

[08:28:19.0000] <annevk>
Domenic: just <div>

[08:28:30.0000] <Domenic>
hmm I see

[08:28:36.0000] <annevk>
Domenic: currently custom elements parse like <sdfoasdfsf>

[08:31:01.0000] <bid>
Sebmaster: strange it is not. maybe it's becuase iam usign node and not io.js? its jsdom version 3.1.2

[08:31:30.0000] <Domenic>
annevk: what about <asfdsf> and <span>?

[08:32:21.0000] <Sebmaster>
bid: it may just be that we don't implement the async attribute

[08:32:26.0000] <Sebmaster>
but it should work in the constructor

[08:33:12.0000] <bid>
i just open it with ('get',sUrl, false) and than send(null)

[08:33:19.0000] <Sebmaster>
that should work

[08:33:21.0000] <bid>
it freezes

[08:33:27.0000] <Sebmaster>
well... yeah

[08:33:31.0000] <Sebmaster>
it's synchronous

[08:33:50.0000] <bid>
i mean it freez for good. as if the node just crashs,,,

[08:34:27.0000] <bid>
maybe i have js error that cause it to fail... its very hared to debug jsdom

[08:35:15.0000] <Sebmaster>
bid: might be a bug in node-xmlhttprequest

[08:35:32.0000] <Sebmaster>
since we basically just import that as-is

[08:36:34.0000] <bid>
ok, thanks.

[08:37:10.0000] <bid>
i will play with it some more.

[08:37:15.0000] <bid>
will udpate

[08:40:55.0000] <JonathanNeal>
annevk: thanks for your advice. I’ve sent my issue and pitch to www-style. I still have hope that Specifiction becomes a hub.

[08:55:42.0000] <MikeSmith>
annevk: yeah I banned that bugzilla account already

[08:55:53.0000] <MikeSmith>
a long time ago I think

[09:10:15.0000] <annevk>
Domenic: I think <span> might be special

[09:10:24.0000] <annevk>
Domenic: look at the parser categories

[09:11:15.0000] <annevk>
Domenic: https://html.spec.whatwg.org/multipage/syntax.html#the-stack-of-open-elements

[09:11:55.0000] <annevk>
Domenic: it seems <span> is only special inside foreign content, otherwise the same as <asfdsf>

[09:12:14.0000] <annevk>
Domenic: (only hit for "span" in that section)

[09:13:47.0000] <annevk>
MikeSmith: kk

[11:02:08.0000] <annevk>
Sebmaster: did you run into any issues with the "@ flag" in the URL Standard?

[11:02:27.0000] <annevk>
Sebmaster: iirc Sam said there was a bug there, but it's not reported and I'm not quite sure what it is

[11:02:28.0000] <Sebmaster>
annevk: not that i know of... yet?

[11:03:23.0000] <Sebmaster>
i havent thought much about it, just implemented stupidly according to spec and tests work

[11:03:49.0000] <Sebmaster>
so it might be something untested... or not at all

[11:04:41.0000] <annevk>
Sebmaster: http://krijnhoetmer.nl/irc-logs/whatwg/20141119#l-235

[11:04:49.0000] <annevk>
I guess I should look into that tomorrow

[11:05:14.0000] <annevk>
I'm going through the open bugs once more

[11:05:50.0000] <annevk>
Another thing I plan on fixing is (new URL("test", "test://x/")).href === "test://x/test"

[11:06:02.0000] <annevk>
But that's a bit harder

[11:07:38.0000] <annevk>
Sebmaster: I also wrote some extra tests today: https://github.com/w3c/web-platform-tests/pull/1902

[11:08:00.0000] <annevk>
(And new specification text. Apparently all URLs can handle relative fragments.)

[11:08:18.0000] <Sebmaster>
annevk: do you have some plan for fixing windows paths yet?

[11:08:40.0000] <annevk>
Sebmaster: not how, just that I want to

[11:08:52.0000] <Sebmaster>
lemme find my commit

[11:09:29.0000] <Sebmaster>
annevk: https://github.com/jsdom/whatwg-url/commit/5be541eee4a7fff33278d2cc2840ea283a7436b9 was my start

[11:09:32.0000] <Sebmaster>
but its incomplete

[11:09:58.0000] <Sebmaster>
if i remember correctly you'd need to extend the conditions there

[11:10:00.0000] <annevk>
Yeah Domenic showed me that and I think pointed to some issues with it too

[11:11:11.0000] <annevk>
Sebmaster: perhaps we should store Windows drive letters on the URL directly so they become more easy to work with...

[11:12:22.0000] <annevk>
Anyway, file URLs are last in the list of parser bugs I want to fix

[11:12:32.0000] <annevk>
But I'll get to them this summer

[11:13:46.0000] <Sebmaster>
looking forward to it

[11:14:13.0000] <Sebmaster>
i think it's something which fails a lot of tests in jsdom, but i havent examined if they're bugs somewhere else yet

[11:17:06.0000] <annevk>
Sebmaster: you're of course encouraged to try sort out the spec for this yourself and make a PR ;-)

[11:17:55.0000] <Sebmaster>
yeah, ill see if i can fix my PR up to at least pass the tests, maybe it's useful to you then

[11:18:42.0000] <Sebmaster>
oh yeah, annevk i had two more untested things i think

[11:18:44.0000] <Sebmaster>
lemme check

[11:19:34.0000] <Sebmaster>
annevk: oh yeah, the encoding stuff you changed recently isnt tested by web-platform-tests yet

[11:19:56.0000] <Sebmaster>
i currently just added https://github.com/jsdom/whatwg-url/blob/master/test/additional-tests.txt to our internal tests

[11:22:07.0000] <annevk>
Sebmaster: hmm yeah, I guess all the ASCII chars need testing

[11:23:19.0000] <annevk>
I guess I should write some exhuastive test for that too, but also not today

[16:52:39.0000] <jwalden>
/me wonders how cynical he should be about Apple's unilateral <link rel="icon" mask> thingamabob

[16:54:10.0000] <jarek>
Hi

[16:55:32.0000] <jarek>
On Chrome element.nodeName and element.tagName are returning uppercase strings for HTML elements (e.g. "BODY") and lowercase strings for SVG elements inside HTML (e.g. "rect")

[16:56:11.0000] <jarek>
Is this standard behavior? If so, are there any plans to introduce a new property that would be more consistent?

[16:59:03.0000] <jarek>
Google shows 113,000 results for "nodeName.toLowerCase()" query

[16:59:14.0000] <boogyman>
 just pass it through a normalization workflow (toLowerCase() or toUpperCase()) before evaluation.


2015-06-16
[17:00:04.0000] <jarek>
boogyman: yeah, that's what I'm doing right now, but this is used so often that it really deserves better API

[17:01:56.0000] <jarek>
Attribute nodes have the property "node" which gives me lowercase values

[17:02:20.0000] <jarek>
I mean "name", not "node"

[17:02:34.0000] <jarek>
it would make perfect sense to also have "node" property on elements

[17:03:15.0000] <jarek>
oops, I meant "name", not "node", again

[17:22:05.0000] <ek_>
hello

[17:38:09.0000] <karlcow>
jarek: maybe better https://github.com/search?q=%22nodeName.toLowerCase%28%29%22&ref=searchresults&type=Code&utf8=%E2%9C%93

[17:38:49.0000] <karlcow>
even https://github.com/search?l=javascript&q=%22nodeName.toLowerCase%28%29%22&ref=searchresults&type=Code&utf8=%E2%9C%93

[17:45:11.0000] <jarek>
karlcow: Github code search is broken

[17:45:25.0000] <jarek>
e.g. try https://github.com/search?utf8=%E2%9C%93&q=%22tagName.toLowerCase%22&type=Code&ref=searchresults

[17:49:53.0000] <jarek>
or even https://github.com/search?l=javascript&q=tagName+toLowerCase&ref=searchresults&type=Code&utf8=%E2%9C%93

[17:50:05.0000] <jarek>
almost every bigger project uses this hack somewhere

[17:52:44.0000] <karlcow>
ah better search. Cool

[18:29:30.0000] <MikeSmith>
for anybody around who's knowledgeable about Chrome's WebRTC implementation: it seems like a bug that doesn't recognize RTCPeerConnection.createOffer() (with no args)

[18:29:59.0000] <MikeSmith>
so I'm wondering if there might be an open Chromium bug for that

[18:30:56.0000] <MikeSmith>
the WebIDL at http://w3c.github.io/webrtc-pc/#interface-definition says:

[18:31:05.0000] <MikeSmith>
interface RTCPeerConnection : EventTarget  { Promise<RTCSessionDescription> createOffer (optional RTCOfferOptions options);

[19:54:47.0000] <MikeSmith>
heycam: any chance you might be able to rope in somebody to review the SVG tests you submitted?

[19:55:04.0000] <MikeSmith>
otherwise they might end up just sitting for a while

[19:55:53.0000] <MikeSmith>
wonder if ed could be talked into reviewing

[19:55:55.0000] <heycam>
MikeSmith, I sent an email to jgraham asking about review procedures but maybe it got caught in a spam filter

[19:56:07.0000] <MikeSmith>
oh

[19:56:18.0000] <heycam>
MikeSmith, how do we (SVG WG members) become allowed to review tests?

[19:56:25.0000] <MikeSmith>
or maybe jgraham just not made time to reply yet

[19:56:39.0000] <MikeSmith>
anybody can review

[19:56:55.0000] <MikeSmith>
just not everybody can merge to master

[19:57:00.0000] <heycam>
I see

[19:57:07.0000] <heycam>
how do you indicate r+?

[19:57:30.0000] <MikeSmith>
using this critic tool thing that came from Opera originally

[19:57:36.0000] <heycam>
aha

[19:57:49.0000] <heycam>
and then someone will be alerted to the fact that it passed review, and one of you wpt owners will merge it?

[19:57:56.0000] <MikeSmith>
yup

[19:58:03.0000] <MikeSmith>
exactly that

[19:58:04.0000] <heycam>
ok, great

[19:58:21.0000] <heycam>
I had a couple of questions about file format / testing approach in those two PRs

[19:58:22.0000] <MikeSmith>
I don't know if you've used critic before but it's not so bad

[19:58:26.0000] <MikeSmith>
oh

[19:58:37.0000] <MikeSmith>
OK I might be able to answer

[19:58:42.0000] <heycam>
so hopefully one of you can answer those, so I've got a baseline I can review other tests from

[19:58:48.0000] <MikeSmith>
ok

[19:59:00.0000] <MikeSmith>
did you send the questions to a mailing list?

[19:59:07.0000] <MikeSmith>
if not, you might want to

[19:59:09.0000] <heycam>
no, they're just in the PRs

[19:59:13.0000] <MikeSmith>
ah OK

[19:59:16.0000] <MikeSmith>
/me looks now

[19:59:35.0000] <heycam>
is there a mailing list that's good for wpt discussion?

[20:00:06.0000] <MikeSmith>
yeah, we use public-test-infra⊙wo

[20:00:17.0000] <MikeSmith>
https://lists.w3.org/Archives/Public/public-test-infra/

[20:00:20.0000] <heycam>
ok, I'll get on that one

[20:01:54.0000] <MikeSmith>
so about the question of the best way to handle scripted SVG tests, I take it you mean putting the script in HTML test file itself vs a separate file

[20:02:15.0000] <MikeSmith>
if so there's no policy nor any recommended best practice really

[20:02:15.0000] <heycam>
yeah, or even just having the SVG document as the top level thing and including testharness.js in there

[20:02:27.0000] <heycam>
I figure the test harness reporting thing won't work if you do that though

[20:02:27.0000] <MikeSmith>
ah

[20:03:36.0000] <MikeSmith>
yeah the reporting thing wouldn't work in that case

[20:03:56.0000] <MikeSmith>
I guess we could figure out a way to make it work, if that would make it easier to write SVG tests

[20:04:13.0000] <heycam>
nah, it should be fine. we're not really caring about UAs that support SVG and script but not HTML

[20:04:26.0000] <MikeSmith>
ah yeah

[20:05:17.0000] <heycam>
one other question: my reftest for <rect> is comparing against an <div>. some people in the WG (last week at the F2F) said they would prefer not comparing against HTML, and would rather a PNG reference there

[20:05:18.0000] <heycam>
wdyt?

[20:09:05.0000] <MikeSmith>
I guess comparing against HTML is what existing wpt tests would normally do, but I suppose in that's in part just because it's all assuming an HTML UA to begin with

[20:09:19.0000] <MikeSmith>
but SVG is different of course

[20:09:45.0000] <MikeSmith>
so anyway it wouldn't be against policy or best practice to compare against a PNG reference

[20:10:03.0000] <MikeSmith>
there are probably some existing tests that already do I guess

[20:10:07.0000] <heycam>
ok

[20:10:23.0000] <heycam>
I figure if we do that it's probably only go to be for some of the base tests that all the rest of the tests rely on

[20:10:25.0000] <MikeSmith>
it's maybe just more work for you as the test authro

[20:10:33.0000] <MikeSmith>
ok

[20:10:37.0000] <heycam>
yeah, generating the PNG is a little annoying

[20:11:49.0000] <MikeSmith>
yeah but it's not a huge hardship and if is makes others happier I guess it might be worth it

[20:12:06.0000] <MikeSmith>
btw about <link rel=help> thing, is there a reason to not point it to the ED?

[20:12:09.0000] <heycam>
yeah. it will make it easier for example for Inkscape to import the tests.

[20:12:26.0000] <heycam>
no good reason; I just copied another test that pointed to TR/

[20:12:36.0000] <MikeSmith>
ah Inkscape yeah (the PNG thing)

[20:13:00.0000] <heycam>
still there are probably a bunch of SVG text tests that would warrant testing against HTML

[20:13:17.0000] <MikeSmith>
yeah

[20:14:33.0000] <MikeSmith>
and for better or worse, I think the harness and infrastructure overall pretty much assume an HTML UA

[20:15:18.0000] <heycam>
for sure. though hopefully do have their own harness to import and run the tests in an automated fashion.

[20:15:27.0000] <heycam>
*hopefully vendors

[20:16:26.0000] <heycam>
I will get a bit more time to look at the tests after the end of this month. thanks for the answers; I'll direct questions to public-test-infra as they come up.

[20:16:52.0000] <MikeSmith>
yeah (about automation), though jgraham has been working hard on making it possible for all vendors to integrate wptrunner into their CI (similar to the way mozilla CI does already)

[20:16:57.0000] <MikeSmith>
super

[20:17:26.0000] <MikeSmith>
and if/when it's faster, feel free to also ping me any time here or on #testing

[20:18:29.0000] <heycam>
ok, cheers

[22:02:51.0000] <annevk>
/me wonders why jarek doesn't use localName

[22:03:19.0000] <annevk>
heycam: MikeSmith: using PNGs seems bad

[22:03:34.0000] <annevk>
heycam: MikeSmith: it's one of the reasons WebKit/Blink have so much overhead

[22:03:43.0000] <annevk>
heycam: MikeSmith: in their testing infrastructure

[22:03:58.0000] <heycam>
it would only be for a couple of basic tests

[22:04:09.0000] <heycam>
I agree we don't want to have PNGs for everything

[22:04:23.0000] <heycam>
(their repo was massive because they had PNGs for everything)

[22:04:51.0000] <annevk>
heycam: I don't really understand why on the one hand the WG is okay with accepting HTML / scripting, but on the other hand they'd want to use PNG for reftests

[22:05:03.0000] <annevk>
heycam: but that does sound better

[22:05:42.0000] <heycam>
it would help at least for the Inkscape folks, who can't run script, but do want to be able to run the reftests

[22:05:56.0000] <heycam>
though Rossen preferred the PNG for the <rect> test too

[22:05:57.0000] <heycam>
/me shrugs

[22:06:35.0000] <heycam>
/me should look up what Gecko has for <path> reftests, if anything

[22:07:20.0000] <heycam>
the answer is: very little

[22:33:29.0000] <MikeSmith>
annevk: heycam I would assume that enabling a few ad-hoc PNG reftests for some SVG tests wouldn't require any additional infrastructure outside of what those tests need themselves, nor require needing to provide some general supported mechanism in the wpt infrastructure to do it for other tests

[22:34:26.0000] <MikeSmith>
but that said, if it requires any python modules that we aren't already requiring, then even just that would make it a non-starter probably

[22:34:58.0000] <MikeSmith>
see jgraham comment at https://lists.w3.org/Archives/Public/public-test-infra/2015AprJun/0010.html

[22:35:08.0000] <annevk>
MikeSmith: the problem for WebKit/Blink is 1) weight of the repo and 2) the cost of having to regenerate those images

[22:35:20.0000] <annevk>
MikeSmith: 2) might be less of a problem for SVG than it is for ordinary layout tests

[22:35:49.0000] <annevk>
MikeSmith: but once you start with fonts, it's still tricky I think

[22:36:14.0000] <heycam>
annevk, I reckon for text/font tests that need it, comparing against HTML should be ok

[22:36:31.0000] <heycam>
and hopefully Ahem can be used for most of the rest of SVG text tests

[22:37:55.0000] <MikeSmith>
as far at the PNGs, if it's possible for static PNGs to be used rather than needing be dynamically generated, the those can just be checked in and we don't have any cost other than the additional footprint

[22:38:47.0000] <heycam>
yeah I'm not expecting the reference PNGs to change

[22:38:49.0000] <MikeSmith>
I wouldn't think we'd be looking at much additional weight for the repo if it's just isolated to these SVG tests

[22:39:11.0000] <heycam>
and it's not like we have the problem of pixel-perfect checking that WebKit's tests require (or required?), over multiple platforms

[22:39:41.0000] <MikeSmith>
heycam: yeah OK then I think the potential problems annevk mentioned might not be so relevant in this particular case

[22:41:09.0000] <MikeSmith>
(but that said I agree with annevk that we'd never want to end up with that problems that WebKit/Blink have created for themselves with what they built out for the general case)

[22:41:49.0000] <heycam>
right, I agree

[22:48:25.0000] <annevk>
Hmm, going through http://krijnhoetmer.nl/irc-logs/whatwg/20141119#l-235 again I can't find the bug rubys was talking about

[22:48:32.0000] <annevk>
As far as I can tell prepending always works fine

[22:49:00.0000] <annevk>
Because the buffer is cleared after each time you see @

[22:51:44.0000] <MikeSmith>
annevk: other than "hmm, yeah, there's a bug there, I can't reproduce reordering in Firefox"?

[22:52:31.0000] <annevk>
MikeSmith: I guess I should test browsers

[22:53:23.0000] <annevk>
MikeSmith: afaict for http://@test@test⊙ec/ you want a username that is %40test%40test and Firefox seems to do just that

[22:53:41.0000] <annevk>
Chrome does the same

[22:53:50.0000] <annevk>
So maybe I was reading the specification wrong back then?

[22:53:58.0000] <annevk>
In any event, I should check that this is tested

[23:20:10.0000] <MikeSmith>
annevk: yeah (about %40test%40test for username)

[23:22:42.0000] <Ms2ger>
So is it me or have I not seen Hixie in a long time?

[23:52:17.0000] <MikeSmith>
Ms2ger: yeah he's not been around here so much recently

[23:53:25.0000] <MikeSmith>
abarth not been around as much for a while either

[00:51:38.0000] <philipj>
Ms2ger: how do you pronounce your nick?

[00:51:49.0000] <philipj>
is it like i18n, so "messenger" or something?

[00:52:37.0000] <Ms2ger>
There is no canonical pronunciation

[00:53:41.0000] <philipj>
Well OK, I'll just make stuff up then :)

[00:53:46.0000] <annevk>
miss-too-ger

[00:54:18.0000] <philipj>
I think of V'ger

[00:58:28.0000] <MikeSmith>
I just say "em es two gee ee are"

[00:59:25.0000] <MikeSmith>
which is longer but more elegantly symmetrical in that it has the same number of syllables as "Anne van Kesteren"

[00:59:26.0000] <philipj>
We'll just have to wait until Ms2ger writes a book that gets recorded as an audio book

[01:00:04.0000] <philipj>
MikeSmith: coincidence? I think not!

[01:00:22.0000] <MikeSmith>
I vote for that book to be narrated either by Benedict Cumberbatch or Ian McShane

[01:02:02.0000] <philipj>
"A technological history of mutation events, by em es two gee ee are, narrated by that guy from Sherlock"

[01:04:09.0000] <Ms2ger>
I have no connection with Wimbledon Tennismatch

[01:05:18.0000] <MikeSmith>
"with interludes from Henry Miller's Tropic of Cancer read by James Graham in the speaking manner of Blackbeard from one of those Johnny Depp pirate movies"

[01:06:01.0000] <philipj>
:)

[01:06:09.0000] <Ms2ger>
Based on interviews with /smaug/

[01:09:18.0000] <MikeSmith>
heh

[01:13:54.0000] <annevk>
It seems Safari simply returns failure if it sees a duplicate @

[01:17:50.0000] <annevk>
Sebmaster: https://github.com/w3c/web-platform-tests/pull/1907

[01:17:52.0000] <annevk>
MikeSmith: ^

[01:18:15.0000] <MikeSmith>
/me looks

[01:18:29.0000] <Sebmaster>
annevk: got it ;)

[01:19:11.0000] <MikeSmith>
annevk: will review it shortly

[01:22:59.0000] <annevk>
/me reaches out to the Safari team

[01:28:53.0000] <MikeSmith>
annevk: I don't find a test for "http://`{}:`{}@h/`{}?`{}" in Sebmaster's file at https://github.com/jsdom/whatwg-url/blob/master/test/additional-tests.txt

[01:29:21.0000] <annevk>
he tests for `, {, and }, based on recent changes to the specification

[01:29:22.0000] <MikeSmith>
I see one for "http://test:a{b@localhost" and one for "http://localhost?query=a`b"

[01:29:27.0000] <MikeSmith>
ok

[01:29:41.0000] <annevk>
I adjusted the test to cast a somewhat wider net

[01:30:05.0000] <MikeSmith>
hai

[01:37:22.0000] <MikeSmith>
/me sees the "Use the username and password encode sets within authority state" spec change come across

[01:40:46.0000] <Sebmaster>
annevk: sweet, i think the new fragment tests found a bug in my implementation

[01:41:12.0000] <annevk>
Sebmaster: well I had to change the specification for them, so :-)

[01:41:25.0000] <Sebmaster>
ohh :<

[01:41:37.0000] <annevk>
Sebmaster: https://github.com/whatwg/url/commit/7468c397f600b72f650f52fc02466f051bf96ad3

[01:41:40.0000] <Sebmaster>
but the @ flag didnt break anything i think

[01:41:51.0000] <annevk>
Sebmaster: yeah, the @ flag was a non-issue

[01:42:15.0000] <annevk>
Sebmaster: at least, I can't think of a reason why I thought it was a problem and looking at the specification today it seems fine

[01:43:24.0000] <annevk>
Sebmaster: you could watch whatwg/url if you want to see the commits come by

[01:43:53.0000] <annevk>
or follow on Twitter I suppose

[01:44:11.0000] <Sebmaster>
hrm... but watching gives me all issue comments right?

[01:44:21.0000] <annevk>
Yeah it would

[01:44:40.0000] <Sebmaster>
twitter it is

[01:50:57.0000] <annevk>
mathiasbynens: https://www.w3.org/Bugs/Public/show_bug.cgi?id=27641 (feel free to sort this out)

[01:51:16.0000] <annevk>
mathiasbynens: I think hober also has some insights here and a funny demo URL that shows how broken RTL URLs are

[01:51:45.0000] <annevk>
mathiasbynens: my thinking at the moment is that I'll wait and put a recommendation in the specification once UAs have demonstrated something that works reasonably well

[01:52:40.0000] <MikeSmith>
annevk: wow https://code.google.com/p/chromium/issues/detail?id=351639 is epic (the "Security: Spoofable RTL URLs in the UI" bug)

[01:53:35.0000] <annevk>
quick, resurrect John Milton for a poem

[01:53:42.0000] <MikeSmith>
heh

[01:54:20.0000] <MikeSmith>
annevk: does the proposal from Matt Giuca have agreement?

[01:54:30.0000] <MikeSmith>
I mean as far as Chrome goes

[01:54:54.0000] <annevk>
MikeSmith: not sure, I had not read that far

[01:55:41.0000] <MikeSmith>
ah yeah I see mathiasbynens just recently cc'ed you

[01:56:00.0000] <annevk>
This does not look as bad as what Safari does

[01:56:09.0000] <annevk>
Safari puts part of the path into the domain

[01:56:25.0000] <Sebmaster>
annevk: i think im missing a set relative flag now to make `pathname` return schema data instead of "/"

[02:00:02.0000] <annevk>
Sebmaster: hmm yes

[02:00:21.0000] <annevk>
Sebmaster: I guess I should just inline it

[02:00:34.0000] <Sebmaster>
so not my impl?

[02:00:46.0000] <annevk>
Sebmaster: bug in spec

[02:01:15.0000] <Sebmaster>
great

[02:01:19.0000] <Sebmaster>
... for me, that is :D

[02:03:41.0000] <MikeSmith>
finding spec bugs is the greatest achievement possible, so it's always good

[02:04:07.0000] <MikeSmith>
the prayer bells ring in heaven every time somebody finds a spec bug

[02:09:07.0000] <jgraham>
MikeSmith: I think you need to recalibrate your achievementometer there

[02:09:41.0000] <Ms2ger>
Morning jgraham

[02:10:08.0000] <jgraham>
Ms2ger: What do you want? :)

[02:17:35.0000] <annevk>
Sebmaster: fixed

[02:18:16.0000] <Sebmaster>
annevk: on it

[02:18:45.0000] <Sebmaster>
annevk: lookin good

[02:18:56.0000] <Sebmaster>
all tests pass again (including the new ones)

[02:22:12.0000] <annevk>
I guess I should start working on (new URL("test", "test://x/")).href === "test://x/test" as that's going to be a lot of work :-(

[02:26:19.0000] <Sebmaster>
annevk: good luck... or something :D

[03:10:11.0000] <annevk>
Yeah, this is a giant mess

[03:37:31.0000] <Ms2ger>
jgraham, just to say good morning

[03:44:06.0000] <hsivonen>
so, according to Wikipedia, it seems like Gecko's Big5-HKSCS support has been stuck to a pre-2004 level for a decade...

[03:46:01.0000] <Ms2ger>
When did ftang leave? :)

[03:46:33.0000] <hsivonen>
Ms2ger: in 2003 at the latest if not before

[05:10:21.0000] <annevk>
SimonSapin: https://lists.w3.org/Archives/Public/public-whatwg-archive/2015Jun/0028.html

[05:14:03.0000] <SimonSapin>
annevk: data:/../ becomes data:/ ‽

[05:14:10.0000] <annevk>
yeah

[05:14:39.0000] <SimonSapin>
this makes no sense

[05:14:42.0000] <annevk>
that's actually pretty much what RFC 3986 says

[05:14:57.0000] <annevk>
so things will be much closer to what the IETF does

[05:15:16.0000] <annevk>
also, see topic?

[05:15:59.0000] <SimonSapin>
so are you supposed to use something like data:%2F..%2F ?

[05:16:27.0000] <annevk>
SimonSapin: data URLs don't start with a slash typically so it's not a problem

[05:16:38.0000] <SimonSapin>
is it only at the start?

[05:16:51.0000] <annevk>
if you start with a slash you become a relative URL

[05:16:52.0000] <SimonSapin>
what about, say, data:,a/../

[05:17:06.0000] <annevk>
that would stay as-is, obviously

[05:17:15.0000] <annevk>
it's no longer a path

[05:17:22.0000] <SimonSapin>
is that current impls, or a proposal?

[05:17:34.0000] <annevk>
current impls per the email?

[05:17:44.0000] <SimonSapin>
obviously, not that obvious to me

[05:23:14.0000] <SimonSapin>
annevk: I’d like to take more time to look into this, but I can’t really in the next two weeks

[05:28:39.0000] <annevk>
SimonSapin: I'm pretty sure about my general outline, but I guess I can always revert if you find a showstopper

[05:28:57.0000] <annevk>
SimonSapin: we can discuss it more next week if you want

[05:35:40.0000] <SimonSapin>
annevk: will you be in Whistler ?

[05:35:45.0000] <annevk>
yeah

[05:36:13.0000] <SimonSapin>
ok, we can chat about it then

[05:55:23.0000] <annevk>
philipj: https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c69

[05:55:37.0000] <annevk>
philipj: hsivonen is implementing your big5 work

[05:58:45.0000] <philipj>
annevk, hsivonen, I hope it works out, it would be sweet if we can have the big5 label always mean the same thing

[06:01:15.0000] <annevk>
philipj: if you didn't click, you might want to look and answer the question about that test

[06:01:23.0000] <annevk>
/me hopes it works out too

[06:07:52.0000] <philipj>
annevk: I did follow the link, but didn't recognize test_big5.js as my thing, is it just the data from the spec?

[06:08:09.0000] <annevk>
oh oops

[06:08:16.0000] <annevk>
it's from jsbell

[06:08:18.0000] <annevk>
my bad

[06:08:43.0000] <annevk>
I assumed it must be yours if he found it someplace online

[06:10:25.0000] <annevk>
Sebmaster: supporting relative URLs all over might not actually be that bad, a lot can be reused, though it depends a bit on how we decide to do certain things

[06:10:49.0000] <annevk>
Sebmaster: I guess I'll start with writing tests though so you can catch all my bugs :p

[06:10:49.0000] <philipj>
nope, I wasn't involved with that. Just a single input and a single output seems not enough to test this well, someone (tm) needs to write tests that target specific steps of the algorithm in the spec I think

[06:11:43.0000] <annevk>
if only I could get a hold of that someone (tm) I might make them write some other tests too

[06:24:24.0000] <jgraham>
MikeSmith: I think they're talking about you ;)

[06:29:32.0000] <MikeSmith>
heh

[06:29:32.0000] <Sebmaster>
annevk: i love tests

[06:29:36.0000] <Sebmaster>
not writing them though :>

[06:30:11.0000] <MikeSmith>
the only thing funner than writing tests is reviewing them

[06:30:52.0000] <MikeSmith>
wait not, debugging intermittent test failures is the funnest beyond those two things put together

[07:26:32.0000] <annevk>
SimonSapin: I'm going with your idea btw of clearly calling out "ASCII strings" in the specification

[07:26:51.0000] <SimonSapin>
annevk: ok

[07:56:55.0000] <annevk>
Hmm, https://lists.w3.org/Archives/Public/public-webapps/2015AprJun/0901.html only Domenic's email is not clickable

[07:57:14.0000] <annevk>
Did someone use a regular expression to parse email addresses and assumed everyone would use at least two characters?

[07:57:30.0000] <SimonSapin>
or have a TLD whitelist

[07:57:47.0000] <wanderview>
this is my new mental image for spec writers: http://www.shutterstock.com/video/clip-2985172-stock-footage-happy-engineer-holding-blueprints-against-a-white-background.html

[07:58:11.0000] <annevk>
Seems arbitrary to recognize the Netherlands but not Montenegro

[07:58:29.0000] <SimonSapin>
annevk: at some point I had rust-url use a string type that is guaranteed to b ASCII (like String is guaranteed to be UTF-8) but that was inconvenient for users so I went back to String. Still, ASCII strings make sense for the spec

[07:58:42.0000] <JoWie>
maybe the regexp was written by someone from nl

[07:59:24.0000] <annevk>
SimonSapin: users should not directly modify those slots though

[07:59:44.0000] <annevk>
SimonSapin: oh, I guess you'd have to cast?

[07:59:58.0000] <SimonSapin>
yeah, even accessing is annoying

[08:00:03.0000] <annevk>
bah

[08:00:19.0000] <SimonSapin>
things like `if url.scheme == "http"` wouldn’t work

[08:00:31.0000] <annevk>
yeah that sucks

[08:00:47.0000] <annevk>
you need the cleverness of the ECMAScript engine I guess

[08:00:58.0000] <annevk>
s/need/want/

[08:01:19.0000] <SimonSapin>
maybe it wouldn’t be as bad with newer fancy language features, but I think it’s enough to document "these strings are always ASCII"

[08:01:35.0000] <annevk>
that's pretty much what the spec says now

[08:02:06.0000] <annevk>
A few of them could be restricted even more, but not worth it for now

[08:02:12.0000] <SimonSapin>
the spec’s algorithms don’t have a type checker :)

[08:02:30.0000] <annevk>
It's called SimonSapin|Sebmaster

[08:06:23.0000] <SimonSapin>
wanderview: spec writing actually looks like this: https://imgur.com/44qdOfz

[08:19:08.0000] <Sebmaster>
annevk: huh?

[08:19:23.0000] <Sebmaster>
what joke did i not get?

[08:19:33.0000] <annevk>
Sebmaster: that you're the type checker of the spec

[08:19:39.0000] <Sebmaster>
sweet :>

[10:51:05.0000] <annevk>
Hmm... If either A or B is X, but not both nor neither, terminate these steps.

[10:51:14.0000] <annevk>
What would be a vastly better way of writing that out?

[10:51:48.0000] <annevk>
Two steps? If A and B are both X, terminate. If A and B are both not X, terminate?

[10:53:02.0000] <caitp>
that sounds like the opposite of the instructions you said above

[10:53:34.0000] <caitp>
if A is X and A is not B, terminate these steps

[10:53:41.0000] <annevk>
Hmm yeah, the second set of instructions are wrong.

[10:54:28.0000] <annevk>
Sorry, X is a set

[10:54:44.0000] <annevk>
They need to either both belong or both not belong

[10:56:17.0000] <terinjokes>
If A and B are in the set X, terminate. If A nor B are in the set X, terminate.

[10:56:20.0000] <caitp>
if A is in set X then if B is not in set X, terminate these steps; else if B is in set X, terminate these steps

[11:16:57.0000] <TabAtkins>
annevk: Use xor.

[11:17:25.0000] <annevk>
TabAtkins: I thought of that, but ...

[11:17:35.0000] <TabAtkins>
Or just use "but not both". No need for "nor neither", since the first part of the clause already requires at least one.

[11:18:17.0000] <annevk>
If A exclusive or B is a X, ...

[11:18:19.0000] <Domenic>
I would do: If A is in X and B is not in X, terminate these steps. If A is not in X and B is in X, terminate these steps.

[11:18:21.0000] <TabAtkins>
Or say "if exactly one of the following is true:" with a bulleted list after.  (This is more useful for three conditions.)

[11:18:36.0000] <TabAtkins>
annevk: "If a xor B is a X", with xor linked to a definition for clarity.

[11:18:40.0000] <annevk>
Domenic: that's what the commit says

[11:19:11.0000] <annevk>
I guess I'll leave this as is, thanks for all the thoughts :-)

[11:20:17.0000] <caitp>
there isn't a very high bar for readability in html

[11:44:43.0000] <bholley_>
Hixie: yt?

[13:55:51.0000] <gde33>
greetings logicians

[13:59:45.0000] <gde33>
I was curious if there have been proposals for html to get a nice standard outliner.

[14:00:22.0000] <gde33>
something like <outline href="foo.opml">

[14:01:11.0000] <gde33>
http://dev.opml.org/spec2.html

[14:02:32.0000] <gde33>
can have a nice fold out tree with nested opml files and site feeds files

[14:03:05.0000] <Sample>
I'm trying to discern the outline esp. regaring headers not rising above sections. Say you have <body><nav id="masthead"><h1>Navigation<h1><nav><h1>Rest of the document</h1> isn't the bodys outline children totally meaningless?

[14:03:29.0000] <Sample>
the whole document I'd think should be under the body outline

[14:03:42.0000] <Sample>
<body><nav> creates a totally meaningless body section right

[14:04:28.0000] <Sample>
it says "The body has a nav and only a nav. The rest of the document lies within other sections"

[14:04:53.0000] <Sample>
(second <nav> in my first example should be </nav> obviously)

[14:05:02.0000] <TabAtkins>
No?

[14:05:27.0000] <Sample>
<body><nav></nav><h1>

[14:05:48.0000] <Sample>
Creates "Untitled BODY" > "NAV Title"

[14:05:55.0000] <caitp>
html and xml differ in some ways

[14:05:56.0000] <Sample>
followed by new outline section H1

[14:06:46.0000] <caitp>
for better or worse

[14:06:54.0000] <Sample>
Essentially the body's section extends only until the first Sectioning element

[14:06:59.0000] <Sample>
that seems super odd

[14:09:42.0000] <TabAtkins>
That's how you wrote it.  You didn't give a heading to the body, so it gets an "implied heading".

[14:09:48.0000] <TabAtkins>
Order matters in an outline.

[14:09:52.0000] <Sample>
right

[14:10:26.0000] <TabAtkins>
If you want the tnire body to have a heading (that is, the nav and all other sections are children of the heading'd section), put the heading first. That's what makes the most sense in any format.

[14:10:34.0000] <Sample>
but is it correct to say the body's section (titled or not) extends only until the first sectioning element or <h1>

[14:10:46.0000] <TabAtkins>
No. The body's section contains all of its children.

[14:10:57.0000] <TabAtkins>
Including, in your example, the nav, and the <h1>'d section.

[14:11:01.0000] <Sample>
hmm

[14:11:37.0000] <TabAtkins>
Or, rather, <body> doesn't have a section in and of itself. It's a root for the section tree.

[14:11:54.0000] <TabAtkins>
The way the ouline tree is defined, the sectioning roots aren't sections themselves.

[14:15:00.0000] <Sample>
ah okay

[14:16:32.0000] <TabAtkins>
In <body>foo<nav>bar</nav><h1>baz</h1>, "foo" gets an anonymous implied section for itself, first in the outline.  Then <nav> happens, making a second section (explicit, but anonymous).  Then <h1> happens, making a third section (implicit, but named).  So three sibling sections.

[14:16:36.0000] <TabAtkins>
(If I'm reading the algo correctly.)

[14:16:39.0000] <Sample>
my confusion was the presumption that the first <h1> was defining a title to the body's section

[14:17:05.0000] <TabAtkins>
Right, it's not, because there's no such thing as "the body's section".

[14:17:24.0000] <TabAtkins>
Tho in practice quite often the <body> contains only a single section, and all other sections are nested within it.

[14:17:28.0000] <Sample>
<body><nav></nav><h1></h1> confused me because I created this totally meaningless section to house just a NAV

[14:18:29.0000] <Sample>
my <h1> was actually wrapped in a <main> which made semantic sense but I guess I should wrap it in a <section> to prevent this odd outline

[14:19:02.0000] <gde33>
<nav> is just for screen readers?

[14:19:12.0000] <Sample>
no?

[14:19:37.0000] <Sample>
It's a sectioning element like section, article, aside

[14:19:55.0000] <gde33>
ah ok

[14:20:27.0000] <Sample>
nav article and aside are essentially <section> with more meaning

[14:21:01.0000] <boogyman>
which are all div with more meaning.

[14:21:11.0000] <Sample>
except div isn't sectioning content

[14:21:18.0000] <Sample>
and doesn't contribute to outlines

[14:21:20.0000] <Sample>
so not relaly

[14:21:25.0000] <gde33>
so much meaning one doesn't know what it all means

[14:24:44.0000] <gde33>
I was thinking, I want html documents in a folder but I want a menu on all pages that can be updated. Ideally it would also be cached. In stead of using javascript to document.write a few links to the page [pun mine] it would be cool to just have something like <nav src="/feed/">

[14:25:59.0000] <gde33>
and a nice fold out tree with an opml in it that contains other opml files and site feeds

[14:27:46.0000] <gde33>
a nice fold out tree without the need for complex css, images and javascript

[14:27:57.0000] <Sample>
TabAtkins: well I've solved my problem by just replacing <main> with <section> so that the <h1> wasn't creating a meaningless outline within the body root

[14:28:26.0000] <Sample>
kind of odd because I feel like main and section have totally different meanings but I felt like I had to since headings don't rise

[14:28:50.0000] <Sample>
also decided <article> shouldn't represent the <main> of the document but <section> could

[14:33:59.0000] <Sample>
e.g. <body><nav id="document-navigation"></nav><main><h1>This represents the main content but cannot be wrapped in main or it creates a meaningless section

[14:35:29.0000] <boogyman>
Sample: have you tried role="presentation"

[14:39:10.0000] <Sample>
boogyman: you don't understand the outline =)

[14:39:20.0000] <boogyman>
mayb

[14:40:22.0000] <Sample>
it's funny the W3C version of the HTML spec totally contradicts itself regarding <main> but the WHATWG version doesn't

[14:40:44.0000] <boogyman>
whatwg is the source of truth according to Hixie

[14:40:57.0000] <Sample>
it actually made me curious to see a diff between the two

[15:28:14.0000] <Sample>
TabAtkins: another quick question. should links within a nav be wrapped in a header tags to make them navigible in the outline? aka, so the outline for the nav section shows both the nav header (if present) and the list of its links

[15:28:30.0000] <Sample>
even though the link (headers) may not have actual section content of their own


2015-06-17
[18:52:19.0000] <MikeSmith>
https://twitter.com/qubyte/status/610968768760651776

[18:52:38.0000] <MikeSmith>
"Linters are like children... Very naïve, often insightful, and worth taking time and effort to explain things to."

[18:54:59.0000] <MikeSmith>
gde33: about your "I was curious if there have been proposals for html to get a nice standard outliner" questions at http://krijnhoetmer.nl/irc-logs/whatwg/20150616#l-762 yeah there have been proposals

[18:56:41.0000] <MikeSmith>
not necessarily for a way to directly render an outline, but at least for a way for Web content to get access to the outline as an object

[18:57:15.0000] <MikeSmith>
a method to get an outline object in script, either for the whole doc or for a subtree

[21:02:52.0000] <MikeSmith>
Hixie: I'm going to disable your W3C bugmail briefly while I mass-change some bugs in an uninteresting way

[21:40:30.0000] <MikeSmith>
Hixie: turned your W3C bugmail back on

[21:55:53.0000] <annevk>
So Safar when seeing a duplicate @ simply returns failure...

[21:56:03.0000] <annevk>
I keep writing Safar instead of Safari...

[02:36:02.0000] <mrflix>
I just ran into this problem: in a web-app UI we want the user to input a timeframe in hours in which to responde to a message. The timeframe should be hours up to 72. We’d love to use input#time but its limited to 24 hours max. Any suggestions where I can suggest a change in the standard?

[02:45:27.0000] <Ms2ger>
People seriously want to put HTML in WebApps

[02:45:28.0000] <Ms2ger>
?

[03:05:03.0000] <jgraham>
Ms2ger: One group to rule them all

[03:06:41.0000] <Ms2ger>
Not one I'll touch with a ten-foot pole

[03:16:52.0000] <annevk>
Rewriting the URL parser is somewhat more work than anticipated

[03:49:05.0000] <MikeSmith>
annevk: you doing the functional thing?

[03:49:31.0000] <annevk>
MikeSmith: no, just the rewrite to support relative URLs

[03:49:38.0000] <MikeSmith>
ah OK

[03:49:46.0000] <MikeSmith>
yeah had forgotten about that

[03:50:45.0000] <annevk>
"just"

[03:51:04.0000] <MikeSmith>
heh

[03:51:21.0000] <MikeSmith>
I wouldn't think it would be so much work

[03:51:32.0000] <MikeSmith>
well, relative to other stuff at least

[03:51:40.0000] <MikeSmith>
(no pun intended)

[03:57:24.0000] <hsivonen>
annevk: yay unit tests. I found a spec bug in the big5 decoder thanks to a unit test added for a Gecko bug you had filed.

[03:57:40.0000] <hsivonen>
annevk: I'll file a spec bug

[03:58:01.0000] <annevk>
yay

[04:01:16.0000] <annevk>
MikeSmith: hehe

[04:01:31.0000] <annevk>
MikeSmith: it's a lot of extra conditionals and states

[04:01:37.0000] <annevk>
MikeSmith: and some reorganizing of existing states

[04:10:49.0000] <JakeA>
annevk: fetch(request) - if request's redirect flag is set to "manual", do you remember why we set it to follow rather than return a redirect (perhaps with the location header opaque)

[04:10:52.0000] <hsivonen>
annevk: https://github.com/whatwg/encoding/issues/5

[04:24:56.0000] <JakeA>
(will create a github issue)

[04:30:51.0000] <hsivonen>
/me learns that Gecko's encoding converter API is underdocumented, too

[04:31:13.0000] <hsivonen>
looking forward to seeing a encoding conversion API that isn't underdocumented

[04:32:01.0000] <annevk>
JakeA: because fetch() does not allow setting it to manual

[04:38:04.0000] <JakeA>
annevk: https://github.com/whatwg/fetch/issues/66

[05:27:25.0000] <JakeA>
annevk: "analyzed" - do you mean by a security team?

[05:27:37.0000] <annevk>
JakeA: yeah

[05:28:01.0000] <annevk>
JakeA: last time exposing status was a no-go

[05:28:39.0000] <annevk>
JakeA: and redirects are a constant source of bugs

[05:28:47.0000] <annevk>
JakeA: both security and otherwise

[05:28:49.0000] <JakeA>
annevk: if that's the only objection here, I'll look into it. I thought it was the redirect location that caused the problems rather than just knowing there was a redirect, but I'll dig in

[05:29:07.0000] <annevk>
JakeA: making them more fragile is not something I'm very happy with

[05:29:38.0000] <annevk>
JakeA: well that was a issue we found and why the hole was closed

[05:29:44.0000] <annevk>
JakeA: there might very well be others

[05:31:53.0000] <JakeA>
annevk: thanks, I'll run it past people. I'm not against making it opaque btw.

[05:32:24.0000] <JakeA>
But a common pattern is hit url -> not logged in? -> redirect to other origin for login

[05:32:29.0000] <JakeA>
And we're breaking that

[05:32:43.0000] <annevk>
JakeA: I think one of the problems is what happens if you store a redirect in the cache

[05:33:00.0000] <annevk>
JakeA: what happens if you respondWith that redirect in a different context

[05:33:19.0000] <annevk>
that's all kinds of new vectors

[05:33:28.0000] <JakeA>
annevk: shouldn't be a problem, should it? Would act the same as if you returned Response.redirect(url)

[05:33:55.0000] <annevk>
well, except the latter is not privileged

[05:34:47.0000] <annevk>
and doesn't go to a secret URL

[05:35:05.0000] <annevk>
e.g. I store that redirect

[05:35:12.0000] <annevk>
then I create a DELETE request

[05:35:18.0000] <annevk>
and reply that redirect to that DELETE request

[05:35:39.0000] <annevk>
that'll fail cross-origin, but same-origin could still be problematic

[05:36:07.0000] <annevk>
at least, I hope that'll fail cross-origin...

[05:38:45.0000] <hsivonen>
annevk: It looks like I have push access to whatwg repos. to submit a PR to encoding, should I push a feature branch to the main repo or should I first create a fork under my own account?

[05:39:44.0000] <annevk>
hsivonen: main repo should be fine

[05:39:49.0000] <hsivonen>
annevk: ok. thanks

[05:39:57.0000] <annevk>
hsivonen: that used to trigger the Twitter bot, but it now filters for the master branch

[05:55:54.0000] <hsivonen>
annevk: OK. I created a PR.

[06:00:05.0000] <annevk>
hsivonen: thanks!

[06:00:09.0000] <annevk>
hsivonen: merged and stuff

[06:07:13.0000] <hsivonen>
annevk: thanks

[07:51:06.0000] <wanderview>
JakeA: do you have any thoughts on this one?  https://github.com/slightlyoff/ServiceWorker/issues/709

[07:51:17.0000] <wanderview>
just wondering if I should try to get it in

[07:56:21.0000] <JoWie>
is that enforce https for new features still a thing?

[08:03:48.0000] <annevk>
JoWie: yes

[08:08:14.0000] <JakeA>
wanderview: replied!

[08:09:42.0000] <wanderview>
thanks!

[08:09:50.0000] <JoWie>
so would i need a localhost certificate ;)

[08:10:00.0000] <wanderview>
I'll try to get something implemented soon even though its not completely spec'd

[08:10:11.0000] <wanderview>
I think localhost should be exempted

[08:10:31.0000] <MikeSmith>
I think it is already

[08:11:11.0000] <wanderview>
for SW it is, but this is about adding a new restriction... so nothing is really specified... I don't think this mentions localhost in general: https://w3c.github.io/webappsec/specs/powerfulfeatures/#settings-secure

[08:11:59.0000] <MikeSmith>
「Certain origins are always potentially trustworthy. In particular, UAs MUST treat file URLs and URLs with hostnames names equivalent to "localhost" as potentially trustworthy.」

[08:12:06.0000] <MikeSmith>
https://w3c.github.io/webappsec/specs/powerfulfeatures/#is-origin-trustworthy

[08:15:03.0000] <wanderview>
ah, cool... thanks

[08:15:24.0000] <annevk>
JoWie: localhost is whitelisted

[08:15:37.0000] <annevk>
JoWie: did you not read the threads?

[08:15:48.0000] <JoWie>
i read it a long while back

[08:15:50.0000] <annevk>
wanderview++

[08:15:52.0000] <JoWie>
but i never heard from it afterwards

[08:16:18.0000] <annevk>
Better start ordering some certificates, or wait until September 14 I guess

[08:17:19.0000] <JoWie>
i rarely use https because you have to renew them

[08:18:41.0000] <JoWie>
i just hope i do not accidentally use one of the newer features and then only find out alter i need a cert

[08:19:23.0000] <JoWie>
or just bug people to modify their whitelist :p

[08:21:08.0000] <annevk>
JoWie: I recommend doing some reading then, something as basic as HTTP/2 requires it

[08:23:40.0000] <JoWie>
i thought http 2 had opportunistic ssl

[08:34:39.0000] <annevk>
Firefox implements that, unfortunately, but fortunately, nobody else does

[08:48:34.0000] <wanderview>
MikeSmith: annevk: does this address the case of http doc creates https iframe which creates https SharedWorker? seems SharedWorker doesn't have a strict parent to trace back through: https://w3c.github.io/webappsec/specs/powerfulfeatures/#settings-secure

[08:50:38.0000] <annevk>
wanderview: SharedWorker can have multiple parents...

[08:51:15.0000] <annevk>
wanderview: I guess using the initial parent or all parents would be an okay solution...

[08:51:27.0000] <annevk>
wanderview: I'd somewhat prefer all if that's not a major perf issue

[08:51:46.0000] <annevk>
wanderview: although I guess all is not really an option as that would make it change over time

[08:51:56.0000] <annevk>
wanderview: probably the one that created the SharedWorker then

[08:51:56.0000] <wanderview>
annevk: I think the issue with that is it could oscillate between trusted to untrusted to trusted again as docs attach/detach

[08:52:23.0000] <wanderview>
annevk: I think sicking has requested that SharedWorker not base anything on doc at all, since the docs can change over time

[08:52:25.0000] <annevk>
so you determine securedness on creation and store that

[08:53:11.0000] <annevk>
the initial doc can't

[08:53:20.0000] <wanderview>
annevk: so if something else for that origin has made SharedWorker already... then http doc->https iframe->SharedWorker works... but if nothing else has made the worker yet, then you get the restriction?  that will probably be a bit magical for people to understand

[08:53:23.0000] <annevk>
and I'm okay with docs changing

[08:53:38.0000] <annevk>
I'm just saying that we set this bit on creation and keep it around until the sharedworker is destroyed

[08:54:10.0000] <wanderview>
annevk: I understand that... but from the call site in the http doc->https iframe the behavior will be inconsistent

[08:54:22.0000] <wanderview>
and I guess also lets the GC of SharedWorkers be observed

[08:55:05.0000] <wanderview>
annevk: I guess I can open an issue in the powerfeatures repo

[08:55:48.0000] <annevk>
wanderview: maybe sharedworker should simply not work in such a mixed environment?

[08:55:54.0000] <wanderview>
yea

[08:56:04.0000] <annevk>
wanderview: that would be the best way out here I think

[08:56:15.0000] <annevk>
wanderview: require a same-scheme parent chain

[08:59:20.0000] <wanderview>
annevk: I wrote this: https://github.com/w3c/webappsec/issues/406

[09:04:19.0000] <annevk>
https://blog.mozilla.org/luke/2015/06/17/webassembly/

[09:48:29.0000] <JonathanNeal>
https://github.com/jonathantneal/postcss-nesting @TabAtkins I hope I got it right. Getting the parent reference to work was a pain. Would you be able to dumb down how @media works for me? The spec doesn’t give an example.

[10:29:43.0000] <annevk>
"As another example, the mobile Web depends on your browser downloading font resources without checking the CORS headers (as per spec) — we’ve had to change to WebKit behavior in our mobile browsers to make the mobile Web work."

[10:29:46.0000] <annevk>
http://blogs.windows.com/msedgedev/2015/06/17/building-a-more-interoperable-web-with-microsoft-edge/

[10:29:49.0000] <annevk>
Well that's interesting

[10:42:24.0000] <annevk>
hsivonen: your latest big5 patch still mentions the GitHub issue

[10:42:35.0000] <annevk>
hsivonen: not a big deal I guess, but you might want to remove that reference locally

[10:43:37.0000] <Domenic>
meanwhile i feel like there was movement in chrome to try to enforce the cors header. not sure it went anywhere though.

[10:45:59.0000] <hsivonen>
annevk: I'll remove the reference if I respin the patch or, alternatively, in the encoder patch

[10:49:54.0000] <annevk>
Domenic: yeah, TabAtkins mentioned that at some point

[10:53:51.0000] <annevk>
MikeSmith: more URL tests: https://github.com/w3c/web-platform-tests/pull/1909

[10:53:54.0000] <annevk>
Sebmaster: ^

[10:54:35.0000] <annevk>
The URL Standard just had a major change landed. If you encounter bugs please tell me. It's likely...

[10:55:01.0000] <Sebmaster>
annevk: havent had time to integrate the changes yet and its kinda late

[10:55:05.0000] <Sebmaster>
but ill get to it tomorrow

[10:55:13.0000] <annevk>
Sebmaster: no rush

[11:17:58.0000] <TabAtkins>
annevk, Domenic: I'll ping Kenji about that again today.

[11:18:27.0000] <TabAtkins>
JonathanNeal: What needs explaining?

[11:21:44.0000] <JonathanNeal>
TabAtkins: I’m unsure what happens when @media is nested.

[11:23:42.0000] <TabAtkins>
The spec doesn't add any new @media nesting abilities

[11:25:11.0000] <JonathanNeal>
.foo { { @media (min-width: 768px) { /* so this is just gonna fail, right? */ } }

[11:26:50.0000] <TabAtkins>
Under current specs + Nesting, yeah.

[11:27:07.0000] <TabAtkins>
You don't need Nesting Block for at-rules anyway.

[11:27:55.0000] <TabAtkins>
(I'm still considering getting rid of the Nesting Block, and using plain & at the start, or a new @nest rule when it's not at the start.)

[11:28:13.0000] <TabAtkins>
So for most cases it'd be the same as Sass.

[11:29:27.0000] <TabAtkins>
Technically, we only need *anything* special to handle the case of a selector starting with a type selector.

[11:30:08.0000] <TabAtkins>
But I think that's too fine of a distinction to capture directly. The "starts with &" criteria is easier.

[12:14:33.0000] <JonathanNeal>
TabAtkins: are you thinking of refreshing the syntax?

[12:20:56.0000] <TabAtkins>
Yeah

[12:37:00.0000] <JonathanNeal>
How does the new version work, it requires & somewhere before the {?

[14:02:06.0000] <David17Obbatala>
hola

[14:02:07.0000] <botie>
niihau, David17Obbatala

[14:05:22.0000] <David17Obbatala>
niihau botie

[16:42:01.0000] <MikeSmith>
is this true? https://twitter.com/w3be/status/611306366758727681 (that browsers fall back to UTF-8 for unknown/supported values of charset; e.g., charset=utfX or charset=utf9)

[16:42:57.0000] <MikeSmith>
/me tries Chris Weber's tool at http://www.lookout.net/test/charsets/iana-charset-support/ to see

[16:44:14.0000] <MikeSmith>
hmm yeah, "utf16" -> UTF-8

[16:45:59.0000] <Domenic>
No way...

[16:47:55.0000] <MikeSmith>
far as I can see

[16:48:04.0000] <MikeSmith>
hyphens are important :)

[16:56:52.0000] <Domenic>
I wonder about the header vs. the meta tag


2015-06-18
[17:23:17.0000] <MikeSmith>
Domenic: hmm yeah

[17:24:50.0000] <MikeSmith>
and I'm just trusting that tool of Chris's is testing what it seems to be testing (because too lazy to try testing it directly right now)

[17:25:29.0000] <MikeSmith>
I'm busy reading through the now-finally-not-a-private-repo-any-more wasm stuff

[17:26:35.0000] <MikeSmith>
after weeks of luring on the #webassembly IRC channel and trying to reverse-engineer from check-in comments that commit bot posts there

[17:26:54.0000] <MikeSmith>
*lurking

[17:29:21.0000] <jsbell>
MikeSmith: re: encodings - https://encoding.spec.whatwg.org/#names-and-labels

[17:31:35.0000] <MikeSmith>
/me looks

[17:33:09.0000] <jsbell>
depends on context, but if it's not in the table the result is "failure" - which means depends on context

[17:33:18.0000] <MikeSmith>
jsbell: I guess annevk needs to update the "utf-8" row in that table to say "also any string that's not a name or label for any other encoding listed in this table"

[17:33:19.0000] <jsbell>
for html, it's still good ol' windows-1252

[17:33:33.0000] <MikeSmith>
oh

[17:34:09.0000] <MikeSmith>
jsbell: so is http://www.lookout.net/test/charsets/iana-charset-support/ not showing what it seems to be showing?

[17:34:33.0000] <MikeSmith>
or are all UAs just not conforming on this?

[17:35:46.0000] <MikeSmith>
hmm now that I say that out loud I realize already know that HTML parsers fall back to windows-1252

[17:35:48.0000] <jsbell>
ugh, contentDocument.charset/characterSet is a whole nother set of aliases/logic...

[17:36:41.0000] <MikeSmith>
/me drafts reply to Chris Weber

[17:37:05.0000] <MikeSmith>
/me sees that jsbell already beat him to it

[17:37:32.0000] <jsbell>
well, I was missing context so I'm not sure I'm helping.

[17:38:09.0000] <jsbell>
hrm, those aliases aren't as bad as I remember apparently: https://github.com/w3c/web-platform-tests/blob/master/encoding/resources/encodings.js

[17:41:37.0000] <karlcow>
TabAtkins: +1 to the meta element in SVG. that would save a lot of insanity.

[17:42:09.0000] <heycam>
that, and link, would make my life easier writing reftests

[17:42:22.0000] <TabAtkins>
Yeah, we want it for a few other things, too, like declaring SVG Params (the ability to set a CSS custom property via a query parameter).

[17:42:34.0000] <TabAtkins>
Yeah, <link> too.

[17:42:44.0000] <heycam>
but it would need us to finally come up with a plan for supporting these from-HTML elements without duplicating them in the SVG namespace

[17:43:05.0000] <heycam>
(a plan that everyone can live with, that is; we've had a couple of plans...)

[17:43:27.0000] <TabAtkins>
The only "issue" is that in an XML syntax you need to specify the HTML namespace for them.

[17:43:53.0000] <TabAtkins>
(Note that we're now finally actively looking into just using the foreign-content parser for standalone SVG. More than just talk, finally.)

[17:44:17.0000] <TabAtkins>
(That would avoid the need; HTML elements would just be given the HTML namespace automatically.)

[17:45:02.0000] <heycam>
TabAtkins, is that Blink experimenting with using HTML parser for standalone SVG documents?

[17:45:09.0000] <TabAtkins>
Yeah.

[17:45:20.0000] <heycam>
do you have a link for any discussion/announcement?

[17:45:34.0000] <TabAtkins>
Not yet, just internal discussions. We're throwing around some use-counters right now.

[17:45:56.0000] <heycam>
ok. look forward to hearing the outcomes.

[17:46:04.0000] <TabAtkins>
(Attempting to eliminate XML from our engine entirely, if possible.  We only need it for SVG, XHR.responseXML, and XSLT.)

[17:46:50.0000] <TabAtkins>
Moving SVG to the HTML parser would be easy and better for authors (consistent syntax), XHR we'll see if we can move to a simplistic parser like XML5 or similar. XSLT, lol I dunno.

[17:47:16.0000] <heycam>
I thought you already were going to just implement XSLT in JS

[17:48:25.0000] <TabAtkins>
That's vaguely the plan, yeah.

[17:49:40.0000] <boogyman>
TabAtkins: re: (the ability to set a CSS custom property via a query parameter). <-- What's the use-case? Why would you want the client to control the aesthetics of your app?

[17:50:13.0000] <TabAtkins>
boogyman: SVG images that can have colors/etc set at time of use.  <img src="logo.svg?main-color=blue">

[17:50:47.0000] <TabAtkins>
You have to pre-declare which properties are Params, to prevent arbitrary screwing around.

[18:25:50.0000] <MikeSmith>
ah rektide

[18:26:04.0000] <MikeSmith>
it didn't take you long

[18:26:26.0000] <MikeSmith>
https://groups.google.com/d/msg/emscripten-discuss/k-egXO7AkJY/GLqWCJCPnqwJ

[18:26:34.0000] <MikeSmith>
you need one of those signs man

[18:27:31.0000] <MikeSmith>
"The End is Near"

[20:26:44.0000] <hayato>
Does someone know why DocumentFragment doesn't support innerHTML? It looks only Element support it.

[20:33:39.0000] <hayato>
The context is https://code.google.com/p/chromium/issues/detail?id=497175  . I am wondering how ShadowRoot.innerHTML should behave.

[20:57:09.0000] <Domenic>
hayato: there was a thread a few years back, let me find it

[20:57:29.0000] <Domenic>
hayato: https://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0663

[20:57:56.0000] <hayato>
Domenic: Thank you!

[20:59:41.0000] <Domenic>
lots of support from blink people, here's some from Moz... https://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0670.html

[20:59:59.0000] <Domenic>
Here's some from rniwa... https://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0675.html

[21:00:49.0000] <Domenic>
this one outlines some of the hard cases... https://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0766.html

[21:02:12.0000] <Domenic>
<a> is a problem, SVG vs. HTML https://lists.w3.org/Archives/Public/public-webapps/2011OctDec/0812.html

[21:02:56.0000] <Domenic>
so in conclusion, people like it, but edge cases are probably hard

[21:10:03.0000] <rniwa>
Domenic: I don't think you should consider my comment in 2011 as endorsement from WebKit project

[21:10:11.0000] <rniwa>
Domenic: since i was working for Google at the time.

[21:10:31.0000] <Domenic>
haha right, ok

[21:11:29.0000] <rniwa>
(note that i would necessarily oppose to this particular proposal)

[21:11:35.0000] <boogyman>
rniwa: were you speaking on behalf of yourself or the company?

[21:14:21.0000] <rniwa>
boogyman: in public-webapps, I was a representative of Google until October 2012.

[21:14:58.0000] <rniwa>
boogyman: now I'm a representative of Apple

[21:15:08.0000] <boogyman>
cheers

[21:15:21.0000] <rniwa>
boogyman: do I speak on behalf of my employer? probably not.

[21:15:48.0000] <rniwa>
boogyman: do my opinions change based on goals/needs of my employer? absolutely.

[21:17:33.0000] <boogyman>
Understood. classic User v Business model for making decisions.

[21:18:13.0000] <rniwa>
yeah, each company has its own priority and rightly so.

[22:10:04.0000] <annevk>
MikeSmith: yeah, there's no defaulting to utf-8

[22:24:49.0000] <MikeSmith>
annevk: yeah I don't know what Chris's test is doing

[22:30:07.0000] <annevk>
MikeSmith: when can you review the new URL tests?

[22:30:22.0000] <MikeSmith>
in a few hours

[22:30:28.0000] <annevk>
MikeSmith: thanks!

[22:30:38.0000] <annevk>
MikeSmith: I might create some more today, and I'm super bad with git

[22:30:50.0000] <annevk>
so I'd rather not get a bunch of merge conflicts

[22:31:03.0000] <MikeSmith>
OK

[22:31:21.0000] <MikeSmith>
I reckon I can get to it within 1 hour

[23:36:18.0000] <MikeSmith>
annevk: gedaan

[23:48:45.0000] <annevk>
MikeSmith: sugoi

[23:55:26.0000] <annevk>
https://github.com/w3c/web-platform-tests/commit/2717ed0b937d4612bd18261559bd0dd7800fba96 this looks really bad... SRI fixes shouldn't affect all those files...

[23:55:57.0000] <annevk>
Or is that just how bad merges go? How do we know that did not overwrite any other work? Seems impossible to review...

[23:58:44.0000] <MikeSmith>
annevk: yeah that stuff is all because Joel flubbed and ended up with a branch merge tin that PR

[23:59:06.0000] <MikeSmith>
unfortunately with git that's a very easy mistake to make

[23:59:20.0000] <MikeSmith>
but it's not hard to unwind

[23:59:21.0000] <annevk>
But how do we know nothing bad happened?

[23:59:44.0000] <MikeSmith>
you can look at the commits separately

[00:00:17.0000] <MikeSmith>
though he should probably re-submit another PR with the same commits minus that merge

[00:00:49.0000] <MikeSmith>
or I can do it for him and he can clone the branch I make

[00:01:02.0000] <annevk>
well all the commits already went into master

[00:01:07.0000] <annevk>
oh well

[00:01:31.0000] <annevk>
perhaps there should be some tighter control on who can do the final commits so the whole thing makes a bit more sense

[00:01:47.0000] <MikeSmith>
ah christ you're right

[00:02:04.0000] <MikeSmith>
I thought he had committed to a branch

[00:02:18.0000] <MikeSmith>
yeah that's .. not so great

[00:02:25.0000] <MikeSmith>
but we can still unwind it

[00:03:14.0000] <annevk>
I've started doing things the Domenic-way for my repos so you don't even get merge commits

[00:03:21.0000] <MikeSmith>
annevk: about tighter control we have a soft policy that nobody should commit any of their own changes to master

[00:03:26.0000] <annevk>
I just attribute authorship through --author although that's rather cumbersome

[00:03:44.0000] <MikeSmith>
yeah that works too

[00:03:52.0000] <annevk>
I want GitHub to support an author field in their client

[00:04:11.0000] <annevk>
So I can just use @domenic or some such

[00:04:18.0000] <MikeSmith>
I've never used their client

[00:04:26.0000] <MikeSmith>
I just use the git comment

[00:04:29.0000] <MikeSmith>
*command

[00:04:35.0000] <annevk>
I guess I should learn to use that

[00:04:48.0000] <annevk>
Main problem with the command line and me is multiline stuff

[00:05:03.0000] <MikeSmith>
man I hope Joel did all that by mistake. I mean as far as committing it master

[00:05:08.0000] <annevk>
Well and remembering all the silly parameters

[00:06:20.0000] <MikeSmith>
Brad reviewed that PR, but it didn't have those branch merges in it when he reviewed it

[00:06:52.0000] <MikeSmith>
what probably should have better happened is that Brad just pushed the merge button in the github UI after he reviewed it

[00:07:38.0000] <MikeSmith>
what seems to have happened instead is that Joel committed the branch merges after Brad had reviewed it, then Joel pushed that

[00:07:48.0000] <MikeSmith>
anyway, nothing fatal

[00:12:46.0000] <annevk>
MikeSmith: also, web-platform-tests has a lot of old branches

[00:12:54.0000] <annevk>
MikeSmith: I assume not all of those are active anymore

[00:12:59.0000] <annevk>
MikeSmith: could we maybe kill some of them?

[00:19:42.0000] <MikeSmith>
annevk: yeah I will right now

[00:19:52.0000] <MikeSmith>
kill some

[00:20:06.0000] <annevk>
Maybe https://bugzilla.mozilla.org/show_bug.cgi?id=1170774#c4 should be documented on the wiki

[00:20:20.0000] <annevk>
Amount of WHATWG Standards is slowly growing

[00:29:27.0000] <MikeSmith>
may a hundred flowers bloom

[00:29:47.0000] <MikeSmith>
and a hundred schools of thought contend

[00:36:32.0000] <MikeSmith>
annevk: deleted all the old branches I safely could

[00:37:49.0000] <MikeSmith>
many of the remaining ones were either created by jgraham or Ms2ger and have no associated PR so they would need to check and see if it's a branch they're planning to work again on ever or not

[00:38:25.0000] <MikeSmith>
annevk: btw one of those branches-in-limbo is yours, https://github.com/w3c/web-platform-tests/tree/encoding-and-css

[00:38:53.0000] <MikeSmith>
with https://github.com/w3c/web-platform-tests/commit/02ac3d372060393f4c0a6a0f29a95dd9f0ee8fda

[01:14:40.0000] <annevk>
I wonder if we should require owners to setup 2-factor auth... https://github.com/orgs/whatwg/people

[01:15:07.0000] <annevk>
MikeSmith: yeah I know, I was hoping someone would take that over

[01:15:36.0000] <annevk>
MikeSmith: but despite all the talk from the i18n WG, nothing much materialized

[01:15:37.0000] <MikeSmith>
annevk: well it's not doing any harm so you could just leave it

[01:16:08.0000] <MikeSmith>
annevk: no comment 😆

[01:16:18.0000] <MikeSmith>
we need a template for that sentence

[01:16:49.0000] <MikeSmith>
"despite all the talk from [aaa], nothing much materialized"

[01:46:31.0000] <annevk>
heh

[01:47:21.0000] <annevk>
There's that skeleton meme...

[03:01:27.0000] <philipj>
annevk: do you have a preference about https://bugzilla.mozilla.org/show_bug.cgi?id=1165851#c41 ? I'm trying to measure something here, but what do you think the most likely end-state of the spec will be?

[03:02:00.0000] <annevk>
philipj: my preference is 1 as well

[03:02:13.0000] <annevk>
philipj: I have good hopes that's fine, smaug____ seems to think otherwise

[03:02:56.0000] <smaug____>
it is just very weird API if it can't be used with SVG

[03:03:12.0000] <philipj>
annevk: ok, so if I'm to measure differences, it's exactly what the spec currently says, plus a "lowercase localName if the document is an HTML document" as part of createAttribute?

[03:03:17.0000] <smaug____>
I'd then make setAttributeNode to throw with SVG elements in html documents

[03:03:29.0000] <philipj>
smaug____: there's still createAttributeNS and setAttribute

[03:03:58.0000] <smaug____>
sure

[03:04:11.0000] <philipj>
smaug____: what end state do you think would be better?

[03:04:24.0000] <smaug____>
but attributes are rarely in any namespace, so I wouldn't expect the API user to remember that *NS should be used with SVG

[03:04:33.0000] <smaug____>
of course no one should use Attr nodes

[03:05:17.0000] <annevk>
smaug____: I don't think making any method throw improves the status quo

[03:05:19.0000] <philipj>
from the code I've found, people are already assuming that case doesn't matter with createAttribute, doing things like createAttribute("frameBorder")

[03:05:33.0000] <annevk>
smaug____: perhaps making setAttribute() more magical to recognize SVG attributes would

[03:06:03.0000] <smaug____>
annevk: well, it would make it clear that if #1 is taken, createAttribute is totally broken with svg

[03:06:11.0000] <smaug____>
(and MathML too)

[03:06:34.0000] <smaug____>
philipj: but case does matter on SVG

[03:06:35.0000] <annevk>
we could rather than lowercase all the things also recognize https://html.spec.whatwg.org/multipage/syntax.html#adjust-svg-attributes

[03:06:49.0000] <annevk>
smaug____: it's not totally broken with SVG

[03:06:50.0000] <philipj>
smaug____: yes, but I found zero cases of SVG attribute together with createAttribute

[03:06:54.0000] <annevk>
smaug____: it works just fine for most SVG usage

[03:07:12.0000] <annevk>
smaug____: even more so for MathML

[03:07:25.0000] <philipj>
annevk, smaug____, how about modifying Attr.localName inside setAttributNode?

[03:07:26.0000] <annevk>
smaug____: there's only one MathML attribute that's not lowercase

[03:08:06.0000] <annevk>
philipj: that's prolly only feasible if Attr's are not really nodes

[03:08:07.0000] <philipj>
at least there's an element around in that case

[03:09:10.0000] <philipj>
annevk: why?

[03:09:17.0000] <smaug____>
the number of non-lowercase doesn't matter, if there is just one. Either the API should work with SVG and MathML, or it shouldn't. The buggy "works occasionally, if you remember to not use it with camelCase attributes" sounds rather horrible to me

[03:09:31.0000] <annevk>
philipj: never mind, might be okay either way, but also somewhat magical

[03:09:40.0000] <smaug____>
philipj: that might work

[03:10:04.0000] <smaug____>
so, preserve case, but when setAttributeNode is called on html element in html document, lowercase?

[03:10:05.0000] <philipj>
annevk: sure, it's a bit odd, but technically it doesn't seem very hard

[03:10:14.0000] <philipj>
smaug____: yes

[03:10:25.0000] <annevk>
I wouldn't really use setAttribute() most of the time anyway... Most attributes have a dedicated getter/setter pair you can use instead

[03:13:18.0000] <philipj>
assuming that no createAttribute() hack works out, would the next best thing be to lowercase input in all other setters and do case-insensitive lookups in getters, removers, and hasAttribute?

[03:14:00.0000] <Ms2ger>
No case-insensitive lookup, please

[03:14:56.0000] <philipj>
Ms2ger: is there another way if a createAttribute() fix doesn't work out? Just trying to figure out what's interesting to measure so we only have to wait for one release cycle

[03:15:00.0000] <annevk>
philipj: yeah, but we should do createAttribute()

[03:15:19.0000] <annevk>
I don't really care if that makes it impractical for some SVG usage, it shouldn't be used anyway

[03:15:47.0000] <philipj>
annevk: well I can get behind that. will it fly in Gecko code review, smaug____?

[03:19:48.0000] <smaug____>
philipj: I don't now understand the proposal

[03:20:44.0000] <philipj>
smaug____: annevk may correct me, but simply to convert localName to lowercase when createAttribute(localName) is called in an HTML document

[03:21:05.0000] <smaug____>
so #1

[03:21:09.0000] <philipj>
yeah

[03:21:11.0000] <smaug____>
which doesn't work with svg

[03:21:16.0000] <philipj>
right

[03:21:31.0000] <philipj>
so will it fly?

[03:21:46.0000] <smaug____>
I'd rather take "preserve case, but when setAttributeNode is called on html element in html document, lowercase"

[03:22:33.0000] <smaug____>
philipj: though, if telemetry shows that Attrs are never used with svg, then #1 would be fine. Horrible, broken API, but easy to implement

[03:22:53.0000] <annevk>
smaug____: that seems like a weirder API since currently names are immutable for all nodes in the DOM

[03:24:07.0000] <philipj>
smaug____: ok, so if the telemtry requested in https://bugzilla.mozilla.org/show_bug.cgi?id=1175031 shows that virtually no calls createAttribute() with non-lowercase input and then attaches that to a non-HTML document, it's OK?

[03:24:15.0000] <philipj>
+one

[03:24:35.0000] <philipj>
non-HTML element I mean

[03:24:52.0000] <smaug____>
at least I'd have hard time to object the behavior then :)

[03:25:20.0000] <smaug____>
philipj: non-HTMLElement

[03:25:22.0000] <smaug____>
not document

[03:25:33.0000] <smaug____>
the worrisome case is svg in HTML document

[03:25:51.0000] <smaug____>
I assume createAttribute won't lowercase ever in non-html documents

[03:26:01.0000] <philipj>
smaug____: right, that would be overkill

[03:26:23.0000] <philipj>
it would be very easy to measure how often setAttribute is called on an SVG element in an HTML document and the attr.localName is not lowercase

[03:26:39.0000] <philipj>
some other ideas would require tracking the source of the Attr object which seems less fun

[03:27:41.0000] <philipj>
or perhaps non-HTMLElement instead of SVGElement to be slightly more conservative

[04:11:49.0000] <annevk>
beverloo: can you tell me where IsIPv4Char is defined within http://src.chromium.org/viewvc/chrome/trunk/src/url/ perhaps?

[04:12:12.0000] <annevk>
Google's URL code is so much more complicated than that of Apple... I wonder what happened

[04:12:18.0000] <beverloo>
https://code.google.com/p/chromium/codesearch#chromium/src/url/url_canon_internal.h&q=IsIPv4Char&sq=package:chromium&type=cs&l=65

[04:12:47.0000] <annevk>
That viewer is so much better!

[04:12:51.0000] <beverloo>
which maps to: https://code.google.com/p/chromium/codesearch#chromium/src/url/url_canon_internal.cc&q=kSharedCharTypeTable&sq=package:chromium&type=cs&l=110

[04:13:39.0000] <beverloo>
It's got a search function too :) https://cs.chromium.org

[04:15:44.0000] <annevk>
So that kind of matches what I expected, but doesn't really explain why 100x.0.0.0 ends up as a normal host name and not as a failure...

[04:16:29.0000] <annevk>
I guess there's some rather arbitrary rulings when something becomes IPv4, "broken", or "not IPv4"...

[07:16:39.0000] <yoav>
Hey! Anyone happens to know why in "<img src width='100*'>" the width is ignored?

[07:19:53.0000] <smaug____>
yoav: because of https://html.spec.whatwg.org/multipage/infrastructure.html#rules-for-parsing-integers

[07:21:32.0000] <yoav>
smaug____: What I see is that * is special cased

[07:21:46.0000] <yoav>
e.g. "200^" is not ignored

[07:22:18.0000] <smaug____>
that is then a bug

[07:22:28.0000] <smaug____>
/me checks the implementation

[07:22:29.0000] <yoav>
http://jsbin.com/fonidicohi/edit?html,output

[07:22:38.0000] <yoav>
That's what I see in Blink

[07:23:37.0000] <yoav>
Oh, in Firefox it is not being special cased

[07:24:01.0000] <yoav>
I got a feeling this whole area needs a cleanup

[07:24:33.0000] <yoav>
special cased in WebKit as well

[07:27:16.0000] <smaug____>
yoav: Gecko is doing something against the current spec

[07:27:33.0000] <smaug____>
in your test I see $ and * giving the same behavior

[07:27:40.0000] <smaug____>
both those are ignored

[07:28:06.0000] <smaug____>
yoav: and blink special cases * somehow

[07:28:22.0000] <yoav>
Yeah, in Blink/WebKit, only * drops the entire int

[07:28:39.0000] <yoav>
anything else after the digits is being ignored

[07:29:02.0000] <smaug____>
yoav: any idea why * is such special case?

[07:29:13.0000] <smaug____>
/me files a Gecko bug anyhow

[07:29:17.0000] <Ms2ger>
Don't old-style frames use that?

[07:29:21.0000] <yoav>
My question exactly :D

[07:30:21.0000] <yoav>
I think I'll add use counters and try to rip that out if possible

[07:30:35.0000] <yoav>
and '%' too, for that matter (I doubt that would work though)

[07:47:51.0000] <yoav>
Ms2ger: Frames where using it inside their `width` attributes?

[08:22:39.0000] <JonathanNeal>
In the CSS nesting spec, I can use a cartesian product to tie together the parent and child selectors. However, once parent references are involved, I’m lost. Any ideas?

[08:31:42.0000] <annevk>
yoav: you might want to compare with parseInt()

[08:35:56.0000] <yoav>
annevk: I see an explicit special casing for '*' before parsing the integer

[08:37:10.0000] <annevk>
heh

[08:41:30.0000] <yoav>
annevk: It's totally weird. I'll try counting occurrences and kill it with fire if it's not common (and it shouldn't be since it'd have been a compat issue with Firefox)

[08:45:05.0000] <annevk>
I guess it's frame parsing code reused because someone was lazy

[08:45:23.0000] <annevk>
wanderview: so we'll restrict the Cache API on time?

[08:45:35.0000] <annevk>
wanderview: wondering whether or not to ask that on the intent to ship thread...

[08:46:04.0000] <annevk>
/me finds https://bugzilla.mozilla.org/show_bug.cgi?id=1175138

[08:46:05.0000] <wanderview>
annevk: I am currently planning to do a partial restriction and then implement the full restriction later... what do you think?

[08:46:14.0000] <annevk>
wanderview: yeah that sounds fine

[08:46:34.0000] <annevk>
wanderview: we need to see if we can restrict SharedWorker somehow

[08:46:36.0000] <wanderview>
chrome is already shipping caches on http I think... although maybe its just in beta

[08:46:55.0000] <wanderview>
annevk: my partial restriction will just be a scheme check to start

[08:47:18.0000] <wanderview>
https:// or localhost (or app: for fxos I guess)

[08:48:20.0000] <annevk>
wanderview: what if SharedWorker created from a secure context could never be accessed from an insecure context?

[08:48:31.0000] <annevk>
wanderview: and only such a SharedWorker gets the goodness?

[08:48:53.0000] <wanderview>
annevk: not sure... seems like we need a spec issue on whatever repo defines SharedWorker

[08:48:56.0000] <annevk>
wanderview: that is, the secure context would just add to the scope of a SharedWorker

[08:49:11.0000] <annevk>
HTML defines SharedWorker, but this needs to be monkey patched first

[08:49:20.0000] <annevk>
I'll file a bug on "POWER" I guess

[08:49:57.0000] <annevk>
Oh, I can add to your issue: https://github.com/w3c/webappsec/issues/406

[08:50:16.0000] <wanderview>
annevk: yea, chrome shipping caches on window in 43... so I believe it allows caches to be used in non-trusted already

[08:50:22.0000] <wanderview>
^shipping^shipped

[08:50:27.0000] <annevk>
bah

[08:50:36.0000] <annevk>
Was sleevi sleeping?

[08:50:56.0000] <annevk>
And Joel? And Chris?

[08:51:56.0000] <wanderview>
annevk: yea... just tried it in the console in chrome release and it worked

[08:53:45.0000] <annevk>
https://github.com/w3c/webappsec/issues/406#issuecomment-113199509 has my proposal for truly secure shared workers

[08:56:16.0000] <yoav>
annevk: Is the bit about frame parsing needing to special case '*' defined somewhere?

[08:56:34.0000] <annevk>
should be

[08:56:57.0000] <annevk>
https://html.spec.whatwg.org/multipage/rendering.html#frames-and-framesets

[08:57:11.0000] <yoav>
Thanks!

[08:57:22.0000] <annevk>
https://html.spec.whatwg.org/multipage/infrastructure.html#rules-for-parsing-a-list-of-dimensions

[08:57:51.0000] <annevk>
That's only used for frames

[10:43:19.0000] <annevk>
Whoa whoa whoa

[10:43:24.0000] <annevk>
"Let mathInt be the mathematical integer value that is represented by Z in radix-R notation, using the letters A-Z and a-z for digits with values 10 through 35."

[10:43:34.0000] <annevk>
That's not very Allen-style...

[10:43:59.0000] <annevk>
But I'm going to steal that as it seems wonderfully short

[10:49:22.0000] <jgraham>
Strictly speaking it doesn't define which digit maps to which symbol

[10:51:20.0000] <annevk>
I would be happy with better language. Was just looking for some inspiration for the IPv4 thingie

[11:03:05.0000] <MikeSmith>
I wonder where TC39 is with progress on value objects http://wiki.ecmascript.org/doku.php?id=strawman:value_objects

[11:03:48.0000] <annevk>
MikeSmith: https://github.com/tc39/ecma262 has a better overview

[11:04:07.0000] <annevk>
MikeSmith: I think you want https://github.com/dslomov-chromium/typed-objects-es7

[11:04:26.0000] <annevk>
MikeSmith: and maybe the SIMD stuff

[11:08:54.0000] <annevk>
Whoa... (0x4334234).toString(33) is undefined. JavaScript is cutting a lot of corners

[11:20:12.0000] <caitp>
to be fair, I'm not sure we actually use base 33 very often in practice

[11:22:22.0000] <caitp>
but wait, no, any radix between 2 and 36 is supposed to do the right thing and not be undefined >_-

[11:30:30.0000] <deltab>
(26231474015353).toString(31)

[12:18:18.0000] <MikeSmith>
annevk: thanks

[13:23:48.0000] <annevk>
https://github.com/WebAssembly/design/pull/195 "You'll have to join the W3C Community Group before we can [correct the link]."

[13:23:56.0000] <annevk>
That's a new level of absurdity right there

[13:33:35.0000] <caitp->
maybe you could just nudge someone whose already in the group?

[13:34:42.0000] <wanderview>
annevk: wow

[13:46:16.0000] <Domenic>
wait it's worse https://github.com/WebAssembly/design/pull/199

[13:50:10.0000] <caitp->
azakai makes a good point though?

[13:56:18.0000] <JoWie>
they might as well lock all issues then


2015-06-19
[18:13:08.0000] <MikeSmith>
hmm, problem with irc.mozilla.org right now?

[18:13:24.0000] <MikeSmith>
seem to have lost my connection

[18:13:43.0000] <MikeSmith>
"Unable to connect server irc.mozilla.org port 6667 [Connection refused"

[18:14:48.0000] <heycam>
MikeSmith, bunch of irccloud users seemed to disconnect but are coming back now

[18:15:17.0000] <MikeSmith>
k

[18:15:21.0000] <capella>
ah, thoug it was just me

[18:16:09.0000] <MikeSmith>
ah looks like I'm back in now at least

[22:00:50.0000] <MikeSmith>
there's nothing wront with using a relative URL with xhr.open right?

[22:09:59.0000] <annevk>
MikeSmith: nope

[22:27:04.0000] <MikeSmith>
annevk: ok thanks

[22:27:18.0000] <MikeSmith>
oh hey reviewed your PR

[22:27:25.0000] <MikeSmith>
you got a fix to make there

[22:47:59.0000] <annevk>
MikeSmith: replied

[22:48:10.0000] <annevk>
MikeSmith: empty host is one of the new syntax constructs

[22:48:50.0000] <MikeSmith>
annevk: the problem isn't the empty host part

[22:48:57.0000] <MikeSmith>
look at the path

[22:49:12.0000] <MikeSmith>
you got "p/" there, literally

[22:50:43.0000] <MikeSmith>
sorry for not being more specific in the review comment

[22:53:16.0000] <MikeSmith>
I was just trying to make a Minimal Viable Comment, in the style that you and Ms2ger have pioneered

[23:13:07.0000] <annevk>
hehe

[23:13:58.0000] <annevk>
MikeSmith: pushed a typo fix, heading to the airport now...

[03:09:35.0000] <MikeSmith>
https://github.com/w3c/webcomponents/blob/gh-pages/proposals/shadow-dom-v1-in-blink.md

[03:09:47.0000] <MikeSmith>
hayato++

[07:08:07.0000] <mounir>
Ms2ger: ping

[07:08:28.0000] <Ms2ger>
Here for a minute

[07:15:05.0000] <mounir>
Ms2ger: nm then

[11:07:35.0000] <wanderview>
Domenic: sadly twitter cards don't support svg images like the streams icon

[11:07:41.0000] <wanderview>
TIL

[11:37:05.0000] <Domenic>
svg support on websites is a travesty in general

[11:37:18.0000] <Domenic>
never have been able to upload a svg profile picture anywhere, for example

[12:12:30.0000] <JoWie>
svg allows for javascript right

[15:46:47.0000] <pdr>
JoWie, svg allows for javascript but not when svg is used as an image <img src="svg.svg">

[15:47:47.0000] <JoWie>
Ah great, i was too paranoid to allow svg uploads

[15:48:18.0000] <pdr>
JoWie, yeah by spec svg as image is a little special. It's its own world down there and can't request resources either

[15:54:54.0000] <JoWie>
So what if someone opens an svg directly? E.g. someone uploads a svg and sends links to it to people

[15:55:10.0000] <pdr>
JoWie, then the javascript will run

[15:57:11.0000] <JoWie>
Ah so still a bad idea

[16:18:56.0000] <JoWie>
Content-Disposition + CSP will help, but it still feels like a potential landmine


2015-06-21
[07:55:46.0000] <MikeSmith>
hsivonen: 502 from https://validator.nu/ & https://html5.validator.nu/

[08:05:32.0000] <GPHemsley>
Yup, the XSD spec is just as bad as I remembered.

[08:34:44.0000] <hsivonen>
MikeSmith: thanks

[08:36:34.0000] <hsivonen>
MikeSmith: relaunched

[08:36:49.0000] <MikeSmith>
hsivonen: cool, thanks

[10:51:47.0000] <annevk>
If you ever wonder about the topic: https://twitter.com/annevk/status/612678790074929152


2015-06-22
[21:28:58.0000] <ek>
hello

[21:34:12.0000] <ek>
any one there?

[21:45:46.0000] <roc>
no

[23:58:10.0000] <Ms2ger>
Oh look, Hixie's alive

[00:05:35.0000] <MikeSmith>
he phoned that stuff in

[07:26:37.0000] <gsnedders>
bah, calc doesn't work in linear-gradient


2015-06-23
[20:57:47.0000] <MikeSmith>
Krinkle: so I think they people who are working on specs for contentEditable-next stuff are having a face-to-face meeting in Paris on August 23-24 https://lists.w3.org/Archives/Public/public-editing-tf/2015Jun/0023.html

[20:58:45.0000] <Krinkle>
Aye, 3rd/4th week of August I'm unavailable. Woud've love to attend.

[20:58:53.0000] <MikeSmith>
oh

[20:58:58.0000] <Krinkle>
MikeSmith: Thanks for the heads up though!

[20:59:01.0000] <MikeSmith>
k

[20:59:56.0000] <Krinkle>
Those two actual days I'm not pre-occupied but I am on the day directly before and after

[21:00:05.0000] <MikeSmith>
ah OK

[21:00:19.0000] <MikeSmith>
well, August is not a good month to schedule meetings in

[21:00:25.0000] <Krinkle>
MikeSmith: They'll have notes after, and some input from mailing lists before major decisions

[21:00:26.0000] <MikeSmith>
especially not in Europe

[21:00:26.0000] <Krinkle>
?

[21:00:32.0000] <MikeSmith>
yeah

[21:00:39.0000] <MikeSmith>
it will all be minuted

[21:00:57.0000] <Krinkle>
Yeah, I'm taking my 2 weeks of vacation during those weeks.

[21:01:06.0000] <MikeSmith>
yeah I figured

[21:01:13.0000] <MikeSmith>
they can probably also set up a teleconference bridge for it

[21:01:39.0000] <MikeSmith>
or short of that, somebody can skype you in if you want to be around for some specific part

[21:01:44.0000] <MikeSmith>
or even the whole thing

[21:01:47.0000] <Krinkle>
I wouldn't mind attending this during my vacation though, but alas I'm up north in the Netherlands for a family event on that saturday before.

[21:02:12.0000] <MikeSmith>
yeah so you can probably call in for at least part of it

[21:02:20.0000] <Krinkle>
Yeah, that'd be nice.

[21:02:30.0000] <MikeSmith>
I won't be there but I think Robin Berjon from W3C will be

[21:02:35.0000] <MikeSmith>
darobin on IRC

[21:04:51.0000] <MikeSmith>
botie, inform darobin it would be good to have people be able to call in during the Aug 23-24 Editing f2f; Krinkle here is one person who might be interested in calling in for at least part of it

[21:04:51.0000] <botie>
will do

[21:05:39.0000] <Krinkle>
I'll keep my scanners peeled on the mailing list for instructions.

[01:07:21.0000] <botie>
darobin, at 2015-06-23 04:04 UTC, MikeSmith said: it would be good to have people be able to call in during the Aug 23-24 Editing f2f; Krinkle here is one person who might be interested in calling in for at least part of it

[01:15:00.0000] <darobin>
MikeSmith: ok, I'll see if that's possible

[01:15:30.0000] <darobin>
MikeSmith: note that people have gotten a bit carried away with the hosting in Paris thing; I said I would look into it and all of a sudden it was "organised" here

[01:20:06.0000] <MikeSmith>
darobin: this is why I don't use e-mail

[01:20:15.0000] <darobin>
heh

[01:20:35.0000] <MikeSmith>
why didn't the Warsaw plans work out?

[01:20:52.0000] <MikeSmith>
somebody complained it's not California?

[04:07:34.0000] <barrydg>
SimonSapin_: you here?

[04:10:27.0000] <Ms2ger>
He's on Vancouver time

[04:14:40.0000] <barrydg>
AH

[04:14:43.0000] <barrydg>
thanks

[04:14:50.0000] <barrydg>
I will shoot him an email then

[04:17:54.0000] <Ms2ger>
Np

[06:37:51.0000] <jgraham>
a/win 4

[11:55:24.0000] <mditty>
Are there any experts on http://www.w3.org/TR/css-syntax-3/ online?

[11:55:42.0000] <mditty>
I have a question related to lex/parse productions/procedures.

[12:03:44.0000] <svl>
mditty: It tends to be useful to go ahead and ask the actual question right away, just in case someone who wouldn't describe themselves as an "expert" happens to know an answer anyway.

[15:40:23.0000] <annevk>
karlcow: background-position-x/y are now part of CSS?

[15:40:37.0000] <annevk>
karlcow: I wonder when the last time was that I asked for that...

[15:40:46.0000] <karlcow>
yes it is

[15:42:34.0000] <annevk>
Hmm, seems like it was end of 2010, not too long ago

[15:54:25.0000] <karlcow>
annevk: http://lists.w3.org/Archives/Public/www-style/2014Apr/0188.html


2015-06-24
[17:32:09.0000] <MikeSmith>
did something change recently with regard to styling of Wikipedia pages in Firefox?

[17:33:10.0000] <MikeSmith>
when I look at Wikipedia pages in Firefox recently, it seems like there's less white space around the content, maybe smaller line hight, smaller font

[17:33:17.0000] <MikeSmith>
it doesn't look good

[17:34:19.0000] <MikeSmith>
hmm, I see now there's a background image there too, which I don't see in other browsers

[17:34:36.0000] <MikeSmith>
at that top

[17:34:54.0000] <MikeSmith>
or some kind of funky gradient

[17:49:22.0000] <JonathanNeal>
Is there a clever combination of preserveAspectRatio, width, and height properties that can render me an SVG that would automatically cover any element it was made the background image of?

[17:54:56.0000] <terinjokes>
JonathanNeal: baby tears

[17:55:09.0000] <JonathanNeal>
lemme try that

[18:03:42.0000] <heycam>
JonathanNeal, does specifying a viewBox but no width/height attributes work?

[18:11:40.0000] <MikeSmith>
can anybody else connect to irc.w3.org right now?

[18:11:44.0000] <MikeSmith>
just lost my connection

[18:17:16.0000] <jgraham>
MikeSmith: I think I did too

[18:18:04.0000] <MikeSmith>
jgraham: yeah I'm checking with systems team now

[18:18:23.0000] <MikeSmith>
(harder to do when we're not on the same IRC channel...)

[18:22:57.0000] <TabAtkins>
JonathanNeal: If you just don't use a viewBox, widht, or height at all, it'll automatically fill the space it's used in (the entire background area).

[20:07:16.0000] <MikeSmith>
jgraham: w3c-test.org unreachable as well

[20:07:44.0000] <MikeSmith>
I can't even ssh to it from within the firewal

[20:14:58.0000] <JonathanNeal>
I’m also unable to connect to irc.w3c.org

[20:19:09.0000] <MikeSmith>
JonathanNeal: try now

[20:20:03.0000] <JonathanNeal>
I’m in. Thanks.

[20:45:13.0000] <zewt>
this 'outsmart the user and copy random crap out of the address bar" browser fad needs to end already

[21:21:47.0000] <JonathanNeal>
zewt: are you referring to copy hijack?

[21:29:42.0000] <zewt>
no, how I'll copy part of a url from the address bar and it's completely random whether i'll get the protocol at the start of the url or not

[21:30:27.0000] <zewt>
because some middle manager decided that showing "http://" in the address bar is somehow bad, so now there are obnoxious heuristics for browsers to decide what to copy

[21:37:37.0000] <JonathanNeal>
zewt: never experienced that, but I know if I copy a URL before it has been visited and the http isn’t present, then it doesn’t add it.

[21:37:44.0000] <JonathanNeal>
What browsers does this happen on?

[21:38:48.0000] <zewt>
firefox and chrome both try to be too clever

[21:39:25.0000] <zewt>
any browser that doesn't show the http protocol inherently has this problem (since then they have to play dumb games when you copy the url to figure out if they need to add it back in for the copy op)

[21:40:06.0000] <zewt>
so stupid things happen, like i'll copy just the hostname to ping a site and end up pasting a url instead of what i copied; or i'll edit a url in the address bar (eg. to simplify an amazon url), paste it and now the protocol is missing

[05:16:20.0000] <MikeSmith>
ISOC is holding a workshop today focusing on "DNSSEC Successes, Statistics and Innovation"

[05:16:56.0000] <MikeSmith>
meanwhile, only 0.43% of .COM domains are DNSSEC-signed...

[05:18:02.0000] <MikeSmith>
emperor's new clothes

[05:35:22.0000] <darobin>
MikeSmith: on the contrary, I think it makes perfect sense

[05:35:36.0000] <darobin>
given sufficient innovation in statistics, you can find success in DNSSEC

[05:35:43.0000] <MikeSmith>
hahah

[05:36:00.0000] <darobin>
you got it all, right there

[05:36:20.0000] <MikeSmith>
they should hire you to do their PR

[05:36:28.0000] <darobin>
shouldn't everyone?

[05:37:40.0000] <MikeSmith>
heh

[05:39:11.0000] <Ms2ger>
No.

[07:22:34.0000] <JakeA>
wanderview: So, range requests. Any idea how the browser defends against getting none-matching partials

[07:22:49.0000] <JakeA>
as in, the underlying resource has changed between range requests

[07:23:10.0000] <JakeA>
leading to the cached version being a frankenresource

[07:24:52.0000] <JoWie>
probably using Last-Modified

[07:26:17.0000] <JakeA>
JoWie: you are right https://tools.ietf.org/html/rfc2616#section-13.5.4

[07:30:15.0000] <JoWie>
ah but only if Date is more than 60 seconds after Last-Modified

[07:30:57.0000] <JoWie>
ETag also works

[07:44:31.0000] <annevk>
JakeA: we need to decide on that used flag thing for Request/Response

[07:45:22.0000] <JakeA>
annevk: ok, brain dumping on the restarting download issue, then will move onto that

[07:45:43.0000] <annevk>
JakeA: note that we need support for range in the cache API too

[07:45:56.0000] <JakeA>
annevk: I'm brain dumping on that too

[07:46:00.0000] <annevk>
JakeA: and we need to figure out how synthetic 206 behaves

[07:46:02.0000] <annevk>
excellent

[07:46:04.0000] <annevk>
ta

[07:46:45.0000] <JakeA>
annevk: I guess your thinking is similar to mine then. Cache never contains 206 responses but it may vend them depending on the request in .match(request)

[07:47:12.0000] <annevk>
I haven't really figured this out yet

[07:47:29.0000] <annevk>
Note that we do allow synthetic 304 at the moment

[07:47:49.0000] <annevk>
Which is the equivalent for a cached non-partial response

[08:30:31.0000] <JakeA>
wanderview: I WAS JUST WRITING THAT

[08:30:40.0000] <JakeA>
now I'm not going to seem as smart

[08:30:52.0000] <wanderview>
JakeA: the content-length thing?  annevk and I were talking about it yesterday

[08:31:08.0000] <JakeA>
wanderview: nah, "I would prefer if just have getReader() set the flag"

[08:31:23.0000] <wanderview>
oh, yea... lets reduce the insanity

[08:31:40.0000] <wanderview>
JakeA: btw, does chrome implement the incumbent cache record and partial cache entries yet?

[08:31:53.0000] <JakeA>
wanderview: I doubt it, but I don't know for sure

[08:50:29.0000] <wanderview>
JakeA: thanks... just curious if I should be in a hurry to implement that

[08:50:38.0000] <wanderview>
I still have a hard time wrapping my head around what the spec says now

[08:52:08.0000] <wanderview>
JakeA: I guess the issue is, if the download of the Response is happening outside of Cache, then cache can't do any automatic restart... the fetch() needs to do the range request in order to avoid duplicating the initial download

[08:52:30.0000] <wanderview>
do we need to support restarting for both external-to-cache fetch() and internal-to-cache fetch()?

[08:52:43.0000] <wanderview>
I think solving for external-to-cache fetch() should be the higher priority

[09:34:42.0000] <wanderview>
annevk: where is null body distinguished/used in html spec?

[09:35:04.0000] <annevk>
wanderview: did I write HTML?

[09:35:11.0000] <annevk>
wanderview: oops

[09:35:23.0000] <wanderview>
oh, you wrote http

[09:37:41.0000] <wanderview>
annevk: I don't understand what the proposal is any more

[09:38:13.0000] <wanderview>
annevk: JakeA: Domenic: maybe we should sit down in SF in July to figure this out

[09:38:24.0000] <annevk>
The proposal is that Response/Request have an associated "used flag" that is set by fetch() / put() / getReader()

[09:38:37.0000] <annevk>
If the flag is set, fetch() / put() / getReader() throw

[09:38:57.0000] <annevk>
(also new Request())

[09:39:21.0000] <annevk>
Whether body is null or a stream is not important

[09:39:56.0000] <wanderview>
annevk: it just sucks that we have special case logic outside of fetch in put(), etc

[09:40:02.0000] <wanderview>
outside of fetch spec

[09:40:45.0000] <wanderview>
annevk: I would prefer to just do it getReader() and if body is null then don't mark used... its all consistent whoever uses the Response then

[09:42:18.0000] <annevk>
How does that work with new Request()?

[09:42:36.0000] <annevk>
Because that is what fetch() and put() use today

[09:42:41.0000] <annevk>
To normalize some other stuff

[09:43:24.0000] <wanderview>
annevk: ok... then put() doesn't do anything special... it uses new Request() which makes setting the flag internal to fetch

[09:43:56.0000] <wanderview>
annevk: I want setting the used flag to be done by the fetch spec and no one else... and Cache only uses public API calls from fetch to do it... the constructor works for that

[09:44:09.0000] <annevk>
Okay

[09:44:24.0000] <annevk>
I guess the only case that's not explained is the getReader() scenario

[09:44:32.0000] <annevk>
At least not through new Request()

[09:44:57.0000] <wanderview>
annevk: well, fetch spec needs to integrate with getReader() somehow... either through weasel-words or wrapping the stream or observing the stream somehow

[09:45:12.0000] <wanderview>
Domenic: is there a way to observe the getReader() call? ^^^

[12:33:00.0000] <WeirdAl>
hi folks - does either the HTML spec or the 6th edition of ECMAScript specify how to load a JS as 6th-ed ECMAScript (so that we get 6th-ed features such as the let statement)??

[12:33:36.0000] <Domenic>
wanderview: no, not without monkey-patching

[12:33:46.0000] <Domenic>
getReader() being observable is nonsensical

[12:33:59.0000] <Domenic>
you can just do .getReader().releaseLock() and you've done nothing

[12:35:14.0000] <Domenic>
> I want setting the used flag to be done by the fetch spec and no one else // if that's what you want, it's easy, just keep a side-table

[12:35:23.0000] <Domenic>
but I thought you also wanted to throw if someone else read using a reader

[12:49:11.0000] <Ms2ger>
WeirdAl, there are no versions. JS is JS

[12:49:52.0000] <WeirdAl>
Ms2ger: uh huh... then tell me how I can have the same script tag, and the same script, in a HTML document, and use let blocks, in both Google Chrome and Mozilla Firefox.

[12:50:19.0000] <Ms2ger>
let blocks? Those don't exist :)

[12:50:36.0000] <WeirdAl>
FF wants type="application/javascript;version=1.7" or a higher version - but GC won't recognize that MIME type.

[12:50:43.0000] <WeirdAl>
(in the script tag)

[12:51:17.0000] <WeirdAl>
if you put "use strict" in the script that seems to be enough for GC, except for the aforementioned type attribute problem

[12:52:44.0000] <WeirdAl>
ok, let statements, not let blocks :p

[12:54:58.0000] <WeirdAl>
basically, I want a common way to say "this JS should be loaded as if it were dependent on the 6th edition of ECMAScript."

[12:57:33.0000] <Ms2ger>
<script>

[12:57:42.0000] <Ms2ger>
Maybe not today, but soon enough

[13:01:17.0000] <WeirdAl>
:-| okay... and what if I want to use experimental "7th-edition" features?  (Please, don't say polyfill.)

[13:02:52.0000] <WeirdAl>
(also, is there a FF bug to turn on 6th edition by default?)

[13:05:59.0000] <Ms2ger>
No, but there should be a bug to enable let bindings by default

[13:12:23.0000] <WeirdAl>
grumble grumble

[13:23:57.0000] <Ms2ger>
WeirdAl, I'm being pointed at https://bugzilla.mozilla.org/show_bug.cgi?id=950547

[13:27:39.0000] <WeirdAl>
https://bugzilla.mozilla.org/show_bug.cgi?id=932513#c5 is interesting

[13:43:54.0000] <Domenic>
there is no such thing as versions in browser, WeirdAl.

[13:44:02.0000] <Domenic>
versions are a fiction propagated by spec writers

[13:44:13.0000] <WeirdAl>
editions, then

[13:44:19.0000] <Domenic>
no such thing

[13:44:29.0000] <Domenic>
they are made up

[13:44:49.0000] <Domenic>
browsers just implement features, in some random order

[13:45:04.0000] <Domenic>
sometimes they implement features from edition 5, sometimes from 6, sometimes from 7

[14:14:25.0000] <wanderview>
Domenic: yes I do want normal stream readers to result in the used flag being set...  I think annevk was suggesting we do the set flag as soon as getReader() is called the first time... I told him I thought you would dislike that since you want it on stream close

[14:14:33.0000] <wanderview>
Domenic: I just want us all to settle on something at this point

[14:14:53.0000] <Domenic>
wanderview: yes :(

[14:15:21.0000] <Domenic>
offset seemed like a big concession from me; I'm surprised it wasn't enough to get everyone on board.

[14:15:37.0000] <wanderview>
Domenic: if nothing else we can talk after the SW f2f if you are in SF that week

[14:16:30.0000] <wanderview>
Domenic: well, I think annevk is trying to do the breaking change so we don't need the offset all... I think we viewed that as a concession as well

[14:16:37.0000] <Domenic>
wanderview: when is the SW f2f? I will be at the custom elements f2f July 21...

[14:17:00.0000] <wanderview>
Domenic: its the day before the custom elements...  annevk and I will be in town until Thursday I think

[14:17:07.0000] <wanderview>
he might leave on Thursday

[14:17:09.0000] <Domenic>
oh perfect, ok

[14:17:11.0000] <wanderview>
so maybe Wednesday

[14:17:12.0000] <wanderview>
?

[14:17:20.0000] <Domenic>
yeah sounds good

[14:17:25.0000] <wanderview>
cool


2015-06-25
[23:13:34.0000] <howdoi>
howdy people?

[03:26:07.0000] <MikeSmith>
Do a lot of sites actually use sitemap.xml files?

[08:11:25.0000] <TabAtkins>
I know I generated one back in the day when I was a webmaster.

[08:11:34.0000] <TabAtkins>
At the insistence of our terrible SEO firm.

[08:28:39.0000] <MikeSmith>
TabAtkins: yeah I was curious just because I came across https://github.com/mariusj/validator-sitemap "utility for Nu validator that reads sitemap.xml and validates all URL found in that file"

[08:29:40.0000] <MikeSmith>
and wondering how many people in practice would actually use such a thing

[11:26:31.0000] <annevk>
/me wonders what a DREAM spec is

[11:26:35.0000] <annevk>
/me pages Domenic

[11:28:07.0000] <TabAtkins>
annevk: It's the status for "i'm just thinking about loud here"

[11:28:20.0000] <TabAtkins>
s/ab//

[11:43:50.0000] <JoWie>
mikesmith: i know a lot of people who add sitemap.xml files because they think it helps with ranking in google search results

[11:43:57.0000] <pyfisch>
hello, are there cases where a server can return the last bytes of a resource in response to a range request without knowing the length of the resource?

[12:55:21.0000] <annevk>
pyfisch: how would you know what the last bytes are?


2015-06-26
[00:53:49.0000] <manishearth>
ooh https://microsoftedge.github.io/directory-upload/proposal.html

[01:51:44.0000] <benjamingr>
Hey smart people - who came up with the iteration protocol in ECMAScript?

[01:54:37.0000] <espadrine_>
tc39 probably

[01:55:23.0000] <MikeSmith>
benjamingr: I think Brendan did but I have no evidence to point you to for substantiating that

[01:55:42.0000] <MikeSmith>
but Brendan would be a good person to ask

[01:56:06.0000] <espadrine_>
he wrote http://wiki.ecmascript.org/doku.php?id=harmony:iterators at least

[01:56:15.0000] <MikeSmith>
(I mean as far as who started the work on it initially)

[01:57:09.0000] <benjamingr>
I want to understand why it works though a `{done, value}` pair at its base. The biggest advantage I see for that is the fact it's atomic which doesn't sound huge in JS

[01:57:26.0000] <benjamingr>
Also, I recall Firefox having old iterators with a different structure and a StopIteration like exception for stopping them.

[02:00:36.0000] <MikeSmith>
this all has the ring-a-ling of Brendan about it

[02:01:07.0000] <MikeSmith>
If I were you I'd just ping him on twitter to ask

[02:01:25.0000] <MikeSmith>
or find wherever he might hang out on IRC

[02:01:47.0000] <MikeSmith>
he does come around on some IRC channels now and then

[02:07:43.0000] <benjamingr>
MikeSmith: if only I knew which :) This is for trying to dualize it with observables better.

[02:25:56.0000] <MikeSmith>
benjamingr: dualize?

[02:27:04.0000] <benjamingr>
MikeSmith: a dude called Erik Meijer (who is an insanely smart guy) figured out a few years ago that observables and iterables are pretty much the same thing - here is a nice talk about it channel9.msdn.com/Events/Lang-NEXT/Lang-NEXT-2014/Keynote-Duality . We're trying to figure out how to model this in JavaScript and I want to figure out some of the ideas

[02:27:04.0000] <benjamingr>
behind the iteration protocol

[02:44:36.0000] <Domenic>
benjamingr: Brendan advocated Python-esque StopIteration. dherman made the switch to { value, done } IIRC. Someone else unified send(v) and next() into next(v_opt), thus making iterators a subset of generators; can't remember who. Jafar advocated for adding .return(), with Brendan supporting it since Python has .close().

[02:45:31.0000] <benjamingr>
Domenic: thanks! I'm really confused on that es-observable issue. Either me or Jafar got the duality wrong and I default to thinking it's me

[02:45:58.0000] <Domenic>
meanwhile I remain skeptical this duality is desirable, sustainable, or sensible

[02:46:02.0000] <benjamingr>
dherman: do you have anything I can read about why you made the switch to { value, done }

[02:46:13.0000] <Domenic>
benjamingr: meeting notes are best

[02:46:24.0000] <Domenic>
it'll require some searching though

[02:46:26.0000] <benjamingr>
Do you recall broadly when that meeting was held?

[02:46:46.0000] <Domenic>
ehhhhhh more than a year ago, less than 3.5

[02:47:36.0000] <benjamingr>
Domenic: did you see my last message on that topic? I think this is what actual duality would look like https://github.com/zenparsing/es-observable/issues/14#issuecomment-115557631 it's really not similar to the current model

[02:47:55.0000] <Domenic>
benjamingr: sure, still unclear on the "why"

[02:49:58.0000] <benjamingr>
Domenic: there are two questions here - "is duality desirable?" and "does the current model express duality?" I think the answer to the latter is false and the answer to the former is *maybe*

[02:50:17.0000] <Domenic>
sounds about right

[02:50:40.0000] <Domenic>
it seems like the proposal is struggling between opposing forces of "do what C# does," "get some duality going," and "be useful."

[02:51:54.0000] <benjamingr>
This is why I brought Meijer along, he's the one guy who has integrated this into (more than one) language in the past, he practically invented the concept and he understands it best. I feel like all other parties involved (me included) are trying to follow footsteps of his work where he can actually bring new insight to the topic.

[02:52:34.0000] <Domenic>
Maybe. I remain skeptical that there's actual an endgame here, no matter who is helping.

[02:53:02.0000] <benjamingr>
Also, he seems very level headed. Not only does he have the most experience with observables and the most experience with the issues involved in integrating them with a language. He undersands the importance of not having one-size fits all, he understands why pull iterators, promises and other primitives are important rather than having a "everything is a

[02:53:02.0000] <benjamingr>
nail" approach.

[02:53:07.0000] <Domenic>
E.g. his article on how to do this stuff in Dart is nice on paper ... and then Dart adds pause/resume, to get crippled async iterator semantics, since their backpressure is broken.

[02:53:38.0000] <benjamingr>
He didn't add pause/resume to Dart iterators, they did it - iirc he was against it.

[02:53:57.0000] <Domenic>
right, what i'm saying is there's a mismatch between his model and what is needed in programs

[02:54:08.0000] <benjamingr>
I'm not sure there is an actual endgame here either, I'm pretty convinced he is two steps ahead the people involved in observables from a JS-centric or RxJS-centric perspective.

[02:54:47.0000] <BigPants>
Benjamin Gruenbaum? Not the Benjamin Gruenbaum formerly known as Inglor, is it?

[02:55:13.0000] <benjamingr>
Yes, that was a long time ago - why?

[02:55:39.0000] <BigPants>
Haha, cool, I remember you from Newgrounds, strangely enough

[02:56:45.0000] <BigPants>
Don't mind me though, didn't mean to interrupt or anything

[02:57:07.0000] <benjamingr>
I'm not sure pause/resume is needed in programs Domenic , but note that he didn't actually talk about backpressure in Rx, I don't think he'd model observables through Rx or with similar semantics today which is another reason to listen to him. The progress being made is alarming in that it indicates we haven't "figured this out" and baking it into the

[02:57:07.0000] <benjamingr>
language at this point is very risky.

[02:57:24.0000] <Domenic>
+1 to that last

[02:57:26.0000] <benjamingr>
BigPants: oh cool! I still <3 newgrounds, that was a long time ago - had a blast.

[02:57:56.0000] <BigPants>
Same, haven't been around there in many years though

[02:58:18.0000] <BigPants>
I was Rantzien then, dunno if you recall

[02:59:08.0000] <benjamingr>
Domenic: now, if you ask me what I think will happen - I think Erik will say exactly that (that we're not ready) *or* he has figured out the model finally. In either way, I'm not optimistic about the result in his absence - some forces (not you Jafar or Kevin) are very aggressive in the way they argue for Rx semantics and I'm afraid they don't understand the

[02:59:08.0000] <benjamingr>
domain very well. Then again I'm counting on you and other TC members to be very careful and make the right calls :)

[03:00:11.0000] <benjamingr>
BigPants:  oh cool! Yeah I remember you dude from the BBS, those were awesome times! Are you still making games?

[03:01:51.0000] <BigPants>
Nah, I'm mostly just doing web development now. Although with all the web APIs that has come out the past few years, maybe it's time to pick that up again ;) What about you?

[03:03:58.0000] <benjamingr>
BigPants: I'm taking this to PM not to spam the channel :)

[03:04:05.0000] <BigPants>
Good call

[08:58:32.0000] <Ms2ger>
http://static.googleusercontent.com/media/www.google.com/en//selfdrivingcar/files/reports/report-0515.pdf

[09:57:14.0000] <annevk>
Can someone tell me if this is a good idea: https://github.com/annevk/webvtt/pull/9

[10:02:27.0000] <benjamingr>
annevk: I'm not a bower fan, but if a user wants to use bower and it makes the package more inclusive I say go for it.

[10:05:21.0000] <annevk>
benjamingr: I just dislike all those metadata files that'll get out of date

[10:05:40.0000] <annevk>
benjamingr: but I guess

[10:06:05.0000] <benjamingr>
annevk: then don't merge it and tell him bower can install straight from GH, like NPM

[10:20:09.0000] <annevk>
thanks, I asked

[11:23:28.0000] <annevk>
hallvors: https://github.com/w3c/web-platform-tests/pull/1697

[11:24:24.0000] <annevk>
hallvors: nevermind

[11:24:27.0000] <annevk>
jgraham: https://critic.hoppipolla.co.uk/showcomment?chain=11603

[11:24:48.0000] <annevk>
jgraham: it seems that Python overrules you sending bytes

[11:24:55.0000] <annevk>
jgraham: which seems weird

[11:40:30.0000] <jgraham>
annevk: Oh with HEAD? Yeah in that case you will probably have to do something more complex

[11:42:13.0000] <jgraham>
annevk: See comment

[11:42:47.0000] <annevk>
interesting

[14:10:45.0000] <annevk>
Domenic: why is Object.observe() still a thing?

[14:37:15.0000] <bkardell>
this is a bug in IE, yes? https://rawgit.com/bkardell/93a8d267e4848265a4d8/raw/e0aa34c0d0c7a45e0b611f0f4957f417edd64093/isolated-focus.html

[14:41:50.0000] <annevk>
yeah

[14:45:31.0000] <bkardell>
annevk: thanks.

[14:53:03.0000] <Ms2ger>
annevk, what's whatwg/compat?

[14:53:22.0000] <annevk>
Ms2ger: -webkit-/WebKit

[14:53:30.0000] <annevk>
aka good times

[14:53:41.0000] <annevk>
miketaylr is in charge

[14:53:52.0000] <Ms2ger>
Ew

[14:59:43.0000] <annevk>
https://github.com/whatwg/compat/blob/master/images/webcompat-logo.svg pretty good first sketch

[15:02:45.0000] <Ms2ger>
Should be whatwg green

[15:03:16.0000] <heycam>
set it to whatwg green using old webkit gradient syntax

[15:05:15.0000] <miketaylr>
oh vey

[15:05:22.0000] <miketaylr>
*oy vey

[15:07:10.0000] <miketaylr>
yeah, that's probably going to change.

[15:21:12.0000] <terinjokes>
annevk: logo looks great

[16:51:08.0000] <annevk>
philipj: hey, so we have some more people look at MediaSession now

[16:51:19.0000] <annevk>
philipj: did you guys consider telephony?

[16:51:40.0000] <annevk>
s/guys/people/

[16:52:16.0000] <annevk>
philipj: we have a slightly more complicated model on Firefox OS I learned

[16:52:38.0000] <annevk>
philipj: e.g. if you have an incoming call while you're already on a call the incoming one will make some kind of different sound

[16:56:24.0000] <annevk>
philipj: baku is doing some of the work in Gecko

[16:56:29.0000] <annevk>
philipj: and Firefox OS

[16:56:40.0000] <baku>
hi philipj

[16:56:45.0000] <annevk>
baku: http://krijnhoetmer.nl/irc-logs/whatwg/20150627#l-50


2015-06-27
[17:08:23.0000] <smaug____>
anyone know where zcorpan is ?

[17:08:45.0000] <smaug____>
(need to fix resize event handling somehow in the spec - don't know how though)

[17:11:18.0000] <jgraham>
He was on vacation

[17:11:32.0000] <jgraham>
*right now* I guess he is asleep

[17:20:27.0000] <smaug____>
ok, thanks

[18:12:41.0000] <annevk>
philipj: I filed some issues


2015-06-28
[20:51:38.0000] <MikeSmith>
TabAtkins: nice work, man :) 🌈

[20:54:49.0000] <TabAtkins>
Heh, thanks. Guess I'll leave it up for pride weekend, revert on Monday

[20:56:18.0000] <MikeSmith>
yeah that'd be great

[04:34:54.0000] <benjamingr>
hey, where is the `window.name` property specified?

[04:39:47.0000] <Ms2ger>
HTML

[04:51:30.0000] <benjamingr>
?

[04:52:02.0000] <Ms2ger>
https://html.spec.whatwg.org/multipage/

[04:52:12.0000] <Ms2ger>
Look for the IDL block for Window

[05:25:11.0000] <benjamingr>
awesome thanks

[08:47:56.0000] <TabAtkins>
annevk: Should object.observe *not* be a thing?

[10:06:47.0000] <annevk>
TabAtkins: not sure, but if it's not progressing keeping it in Chrome seems dangerous

[10:07:02.0000] <annevk>
TabAtkins: and especially if folks keep talking about changing it to return an observable

[10:07:53.0000] <caitp>
the proposal is at stage 2

[10:08:00.0000] <caitp>
but it could still die?

[10:08:14.0000] <camm>
Hi, i've heard many people saying html5 is equal to: html + css + javascript. Is that correct?

[10:08:29.0000] <annevk>
camm: sure

[10:10:17.0000] <camm>
But, in the html5.org web site says that html5 is just the lastest version of html and xhtml.

[10:13:50.0000] <annevk>
camm: different groups use it to mean different things, generally

[10:14:14.0000] <annevk>
camm: html5.org reflects the original meaning

[10:14:31.0000] <annevk>
camm: though is no longer accurate since HTML is the latest version of HTML, not HTML5...

[10:15:27.0000] <JoWie>
(see last part of channel topic :p)

[10:17:47.0000] <camm>
Ok, thanks annevk.


2015-06-29
[00:21:42.0000] <philipj>
annevk: thanks for filing those issues

[01:14:24.0000] <annevk>
philipj: we're looking into implementing this and how to reconcile it with the infrastructure we have for Firefox OS

[01:16:08.0000] <philipj>
annevk: I guess that means you want some kind of priority between different kinds of audio

[01:16:47.0000] <philipj>
not sure how to square that with Android or other systems where there is no such concept, or if it's only the sytem itself which can have higher priority, which seems to be the case on iOS

[01:17:09.0000] <annevk>
philipj: maybe, it might be that the labels are sufficient

[01:17:19.0000] <annevk>
philipj: e.g. telephony would always use ambient-solo

[01:18:12.0000] <philipj>
you mean having labels that map to the three behaviors we have, but which also have something to do with priorities?

[01:18:20.0000] <davve>
ambient-solo doesn't sound right. Mute/pause telephone audio when going to background?

[01:18:57.0000] <philipj>
annevk: I guess you mean transient-solo right?

[01:19:06.0000] <annevk>
yeah, oops

[01:19:19.0000] <philipj>
we have talked about an ambient-solo which would be slightly different then

[01:19:30.0000] <annevk>
I see, my bad

[01:20:04.0000] <annevk>
But yeah, maybe something like priorities is needed, I haven't really thought it through entirely

[01:20:11.0000] <philipj>
anyway, yeah, phone calls behave like transient-solo, but there would be no way to build a WebRTC app which can trump all other apps in the same way that I presume the built-in phone app can

[01:20:46.0000] <annevk>
I don't think we want Phone > Skype though

[01:21:03.0000] <philipj>
actually on Android it doesn't seem like the phone app has special powers, but on iOS it probably does

[01:21:21.0000] <annevk>
Though there should be some way to indicate to the user that while you're on Skype, someone is calling (either through Phone, or perhaps something else, like Hangouts)

[01:21:58.0000] <philipj>
oh, you mean how to actually make the ringing sound without interrupting everyone else?

[01:22:12.0000] <annevk>
So while you're on Skype, Hangouts tries to become active, but that fails and therefore it sends some other kind of notification?

[01:22:13.0000] <philipj>
or whatever the sound is, you mentioned it could be different

[01:23:41.0000] <philipj>
so on Android you can check if another app says it's playing music, or if the phone call is in progress (separate from the audio focus system) but I don't think there's a way for say the Android Skype and Viber apps to play entirely nicely together, knowing when the other is in a call

[01:24:06.0000] <philipj>
haven't investigated that specifically though, but that's my guess

[01:28:04.0000] <philipj>
I suppose it's best to discuss specific changes in GitHub issues and involving those who have done the work on Firefox OS

[01:28:42.0000] <annevk>
Hopefully baku will participate directly

[01:29:05.0000] <annevk>
I think they mentioned you guys already had a meeting at one point? We might want to have another in due course...

[01:32:35.0000] <philipj>
yeah, a big hangout to get everyone in sync would be nice

[02:36:53.0000] <annevk>
philipj: how would you implement from script a pause invoked from the lock screen?

[02:45:31.0000] <philipj>
annevk: you'd have to keep track of all the media elements where you had assigned the session, and more importantly you'd need an event for when the lock screen pause button is pressed, and there isn't one yet

[02:45:48.0000] <philipj>
so multiple things missing :)

[02:46:30.0000] <annevk>
philipj: right, so I guess that's what I'm asking for

[02:46:50.0000] <annevk>
philipj: you also want pause/play I think if you need to synchronize with non-media element stuff, such as an animation

[02:48:07.0000] <philipj>
annevk: to merely synchronize, the smallest addition would be to expose when the session state goes from active to interrupted and back

[02:48:13.0000] <philipj>
which we also don't have

[02:51:13.0000] <annevk>
philipj: can a background tab request activation? E.g. is it feasible for a UA to grant that if it granted activation to that tab before when it was not in the background.

[02:51:59.0000] <annevk>
philipj: that's sort of the basic thing you need for telephony, with some extensions around service workers I guess...

[03:04:38.0000] <mrflix>
I’d like to propose <input type=time>’s max value to go beyond 23:59 e.g. 48:00 or 72:00. Any thoughts?

[03:09:24.0000] <Domenic>
it's not <input type=timespan>, it's <input type=time> (i.e. time of day)

[03:17:04.0000] <mrflix>
domenic: alright, makes sense. So I suppose there should be a <input type=timespan>

[03:17:30.0000] <Domenic>
mrflix: yeah, except browser vendors are already not so great about implementing the existing input types. better to just roll your own custom element.

[03:17:45.0000] <Domenic>
it'll be a lot faster than trying to convince all the vendors to implement your new input type

[03:20:32.0000] <mrflix>
Dominic: I see 😐. Thanks for the feedback!

[03:21:23.0000] <mrflix>
Domenic: Domenic*

[03:21:38.0000] <Domenic>
:)

[03:31:41.0000] <annevk>
except implementing your own input type is not really feasible either...

[03:31:51.0000] <annevk>
So might as well record this request somewhere

[03:32:04.0000] <annevk>
Since figuring out how to make <form> et al extensible might well take longer

[03:41:33.0000] <MikeSmith>
o

[03:41:47.0000] <MikeSmith>
oofs

[03:42:13.0000] <MikeSmith>
fat-fingered

[04:14:01.0000] <Domenic>
An interesting area of non-interop https://github.com/kpdecker/six-speed/issues/14

[04:14:33.0000] <annevk>
Domenic: Chrome ignores the type attribute?

[04:14:50.0000] <Domenic>
annevk: maybe, or maybe something like assumes unknown => text/css

[04:14:58.0000] <philipj>
annevk: we haven't quite figured that out yet, there's some discussion in https://github.com/whatwg/mediasession/issues/50

[04:14:58.0000] <Domenic>
or maybe uses the Content-Type in preference

[04:15:08.0000] <annevk>
Hmm

[04:15:14.0000] <philipj>
annevk: oh actually there isn't, that was in an email

[04:18:40.0000] <philipj>
annevk: summarized in https://github.com/whatwg/mediasession/issues/50#issuecomment-116615686

[04:20:21.0000] <annevk>
philipj: I think we're considering some requirements and some "ask forgiveness UI" so the user can change course after we've given activation to a site, but nothing set in stone

[04:21:15.0000] <philipj>
annevk: isn't the (customizable) UI for "this tab is making sound" pretty much that UI?

[04:22:13.0000] <annevk>
yeah that might be sufficient

[04:57:47.0000] <Cwiiis>
Does anyone know if the type for an animation or transition duration in CSSOM is defined anywhere? And if not, what you should use when trying to specify CSSOM that uses a duration?

[05:08:17.0000] <annevk>
TabAtkins: zcorpan: SimonSapin: ^^

[05:23:13.0000] <SimonSapin>
Cwiiis: this? http://dev.w3.org/csswg/css-values/#time

[05:27:47.0000] <annevk>
SimonSapin: what's that in JavaScript?

[05:40:08.0000] <Cwiiis>
SimonSapin: right - how do I reference that in idl?

[05:41:32.0000] <Ms2ger>
zcorpan, you have a cat tweeting for you?

[07:00:13.0000] <MikeSmith>
why don't any browser-engine projects use some kind of mechanism for documenting test coverage when they implement new features against a spec

[07:04:01.0000] <JoWie>
that is on my long todo  list mikesmith

[07:04:44.0000] <JoWie>
for a headless browsers though :p

[07:59:13.0000] <TabAtkins>
Cwiiis: It's a string in the CSSOM, because everything's a string in the CSSOM, because the CSSOM is terrible.

[07:59:21.0000] <TabAtkins>
Cwiiis: What are you actually trying to do?

[07:59:52.0000] <Cwiiis>
TabAtkins: spec out the CSSOM for navigation transitions - which I was also going to ping you about, if you don't mind :)

[08:00:48.0000] <TabAtkins>
Ah, sure. I've got some feedback about your grammars anyway.

[08:07:53.0000] <Cwiiis>
TabAtkins: cool, all feedback gratefully received (probably)

[08:08:11.0000] <TabAtkins>
OK cool, feedback 1: FUCK ALL THIS SHIT

[08:08:14.0000] <TabAtkins>
(jkjkjk)

[08:09:09.0000] <Cwiiis>
¬_¬

[09:45:43.0000] <annevk>
MikeSmith: we accept... patches?

[11:22:33.0000] <annevk>
TabAtkins: any (constructive) help would be appreciated

[11:22:50.0000] <annevk>
TabAtkins: we'd like to get navigation transitions out there somehow

[11:23:23.0000] <annevk>
TabAtkins: and if we could improve some OM stuff along the way... all the better, but I guess we're okay with sticking with the DOMString mess

[11:37:12.0000] <TabAtkins>
annevk: We're working on better OM, as a transitional step until we get Value Objects from ES.  Will be proposing something soon.

[11:37:43.0000] <annevk>
TabAtkins: what's this trend of not doing that in public?

[11:38:02.0000] <TabAtkins>
Working out basic shit first before putting something up in front of people?

[11:38:28.0000] <annevk>
Sure, but even at that level there's a bunch of people that could follow along and help out

[11:38:55.0000] <TabAtkins>
There's also a bunch of basic mistakes that'll just waste people's time.

[11:39:41.0000] <annevk>
The main thing that worries me is that you end up with some Google-centric proposal

[11:40:20.0000] <annevk>
Although that might happen either way, I guess; e.g. navigator.connect doesn't have many happy Mozillians atm

[11:40:45.0000] <TabAtkins>
Not sure what "Google-centric" could mean in the context of CSSOM APIs.

[11:41:32.0000] <annevk>
Mostly no non-Googlers consulted

[11:42:10.0000] <TabAtkins>
That's why we throw it at the list as soon as we've got something we're vaguely happy with.

[11:42:12.0000] <annevk>
(or not enough)

[11:42:17.0000] <annevk>
mkay

[11:42:52.0000] <annevk>
Thanks for fixing that bikeshed fragment issue btw

[11:43:15.0000] <TabAtkins>
I mean, we can start with a Shane-centric proposal and put it on the list, but I'm not sure how "proposed something that was created just by Shane" is any better than "proposed something that a couple of Googlers vetted".

[11:43:20.0000] <TabAtkins>
np

[11:45:46.0000] <annevk>
What I like about "here's an idea" is that it usually is more malleable to different opinions than something vetted

[11:46:54.0000] <TabAtkins>
Sure, but what I like about "we discussed this a bit" is that it's not a big pile of shit to start with.

[11:47:01.0000] <TabAtkins>
(There were *lots* of issues with the first draft.)

[11:52:55.0000] <jgraham>
Why is it important that Google discuss it a bit before !Google discuss it a bit?

[11:53:11.0000] <BigPants>
Sorry to butt in, but there might be a point to making those issues visible, in that people who aren't that experienced with specification work can see that even the more experienced people make mistakes and that it's an iterative process. Which might encourage more people to get involved and suggest changes.

[11:58:25.0000] <annevk>
BigPants: (no need to apologies next time, your opinions are welcome here)

[12:02:39.0000] <BigPants>
Fair enough!

[12:38:50.0000] <TabAtkins>
jgraham: It's that >1 people discuss it for a bit, and if one of us is discussing it, it's pretty easy to do a quick Hangout to hash things out (because face-to-face is faster iteration than over lists).

[12:53:34.0000] <jgraham>
TabAtkins: Seems like it would be possible to make that happen with the wider community with a little effort

[12:54:07.0000] <TabAtkins>
Not really. Or at least, it requires more than "a little".

[12:54:43.0000] <TabAtkins>
And it's just putting heads together for an initial proposal, one which is wide-open to change and revision after being proposed.

[13:03:38.0000] <smaug____>
hmm, CSS WG switching its chairs... perhaps a good thing


2015-06-30
[17:41:26.0000] <gsnedders>
is there any real guideline for www-archive anywhere? no? basically, don't be a dick and massively abuse it?

[17:41:29.0000] <gsnedders>
MikeSmith: ^^

[17:42:55.0000] <Domenic>
isn't www-archive specifically where you want to archive precious moments of being a dick?

[17:44:56.0000] <gsnedders>
:)

[17:45:34.0000] <gsnedders>
/me has generally gone for some viewpoint of things being of interest to W3C members and participants being reasonable there 

[17:47:15.0000] <Domenic>
Hmm yes it appears to be less hilarious than last time I checked it.

[18:06:56.0000] <MikeSmith>
gsnedders: no rules, it's a free-for-all

[18:07:21.0000] <gsnedders>
MikeSmith: bah, I know that, I was looking for some sort of guideline :P

[18:07:34.0000] <gsnedders>
like, at what point would it become abusive?

[18:08:53.0000] <MikeSmith>
at whatever point that might be, I reckon Bjoern has already crossed it

[18:09:02.0000] <MikeSmith>
So the point has moved

[18:09:20.0000] <MikeSmith>
But nobody's going to complain

[18:09:43.0000] <MikeSmith>
They have only themselves to blame if they're actually subscribed to it

[18:10:21.0000] <MikeSmith>
also DanC has used it for plenty of odd stuff over the years

[18:11:20.0000] <MikeSmith>
actually, the guideline is, it's for stuff that there's no other list you can think of where it seems appropriate for

[23:06:19.0000] <MikeSmith>
does Chrome stop showing all notifications from a particular origin if the origin has created an excessive number of notifications in some particular period of time?

[23:40:10.0000] <frewsxcv>
annevk: you can respond to me here if that's easier for you

[23:40:35.0000] <annevk>
frewsxcv: I don't understand why you think it gets set to itself

[23:40:45.0000] <annevk>
frewsxcv: it gets set to the next sibling of itself

[23:41:54.0000] <frewsxcv>
my last message was misworded. why does it get set to it's next sibling?

[23:43:15.0000] <frewsxcv>
or possibly: what does it mean for node.next_sibling == node?

[23:43:22.0000] <frewsxcv>
why is that ever desired?

[23:49:21.0000] <frewsxcv>
annevk ^

[23:58:52.0000] <annevk>
frewsxcv: because of insertBefore

[23:59:11.0000] <annevk>
frewsxcv: which is used next

[00:03:09.0000] <frewsxcv>
hmmm okay. i'm probably overthinking this and need sleep. thanks for the help annevk_, sorry for the confusion

[00:03:44.0000] <annevk>
frewsxcv: let me know if it still doesn't make sense once you've had some sleep and we'll sort something out

[02:46:16.0000] <annevk>
Hmm, MikeSmith, not all W3C Staff has a Bugzilla account

[02:46:33.0000] <annevk>
MikeSmith: tried to add Wendy to https://www.w3.org/Bugs/Public/show_bug.cgi?id=28861 but that didn't work out

[07:48:44.0000] <wanderview>
MikeSmith: my impression was if a UI change was made in response to the notification, then chrome allowed them all through... so it just can't be a completely silent, behind the scenes operation

[08:16:31.0000] <wanderview>
annevk: what sets the content frame type defined in fetch?  would that be where things integrate with fetch (but isn't spec'd yet)?

[08:16:44.0000] <annevk>
yup

[08:17:21.0000] <wanderview>
annevk: I'm trying to interpret this condition from navigation request context: "internal" (as long as context frame type is not "none")

[08:17:31.0000] <wanderview>
but its unclear to me what would provide a internal+none or internal+nested, etc

[08:18:20.0000] <annevk>
wanderview: internal+none would be something where the UA uses internal for something other than navigation

[08:18:37.0000] <annevk>
wanderview: for history or refresh or some such though there'd usually be a frame type

[08:19:17.0000] <wanderview>
annevk: forward/back/refresh would be "top level"?

[08:20:30.0000] <annevk>
wanderview: yeah, unless you activate them in an <iframe>

[08:21:03.0000] <wanderview>
annevk: I guess its safest to treat all "Internal" values as navigations for now

[08:41:24.0000] <Ms2ger>
"W3C Invites Implementations of XML Inclusions (XInclude) Version 1.1"

[09:16:04.0000] <mounir>
Ms2ger: does the interface here sounds valid per WebIDL: https://w3c.github.io/permissions/#permissions-interface

[09:17:01.0000] <Ms2ger>
Ugh, promises

[09:17:19.0000] <Ms2ger>
--> dinner, but nothing wrong pops out

[09:18:12.0000] <mounir>
Ms2ger: sequence<T> or T sounds good to you?

[09:19:28.0000] <MikeSmith>
annevk: I will encourage Wendy to create a bugzilla account

[09:21:38.0000] <MikeSmith>
wanderview: there is something funky that Chrome on OS X at least does in cases where a document at a particular origin has called a bunch of notifications in a short period of time

[09:22:05.0000] <MikeSmith>
it quits showing any notifications for that origin after that

[09:22:33.0000] <MikeSmith>
try  http://w3c-test.org/notifications/notification-lang.html in Chrome

[09:22:44.0000] <MikeSmith>
and then reload it

[09:23:36.0000] <MikeSmith>
after reloading, the notifications won't appear any longer

[09:24:18.0000] <MikeSmith>
beverloo: in fact after loading that page once, if you try to navigate to any other documents at that origin which emit notifications, none of the notifications will be shown; e.g., http://w3c-test.org/notifications/notification-body-basic-manual.html

[09:25:27.0000] <MikeSmith>
But if I restart Chrome, it will then show the notifications as expected

[09:30:38.0000] <annevk>
mounir: not if T is a dictionary

[09:30:44.0000] <annevk>
mounir: as I explained to you before...

[09:31:15.0000] <mounir>
annevk: AFAIK, you said that you didn't know and I should check

[09:31:45.0000] <annevk>
So instead you put it in the spec?

[09:33:48.0000] <annevk>
mounir: seems like according to IDL dictionary cannot appear in a union

[09:34:08.0000] <mounir>
annevk: I prefer to have the spec expressing intent then fix errors

[09:35:25.0000] <Ms2ger>
mounir, well, there is something obviously wrong: it uses resped

[09:35:26.0000] <Ms2ger>
c

[10:35:44.0000] <mounir>
annevk: i'm pretty sure you are still going to be unhappy with it but you can have another look at the spec

[10:35:49.0000] <mounir>
annevk: I applied some changes you asked

[11:06:33.0000] <jsbell>
huh... did those new webstorage tests actually get... y'know... tested?

[11:08:59.0000] <MikeSmith>
jsbell: I think one of the Intel Crosswalk devs reviewed those

[11:09:14.0000] <MikeSmith>
Zhang

[11:09:29.0000] <jsbell>
MikeSmith: many of them hang/fail in both FF and Chrome, look like they're trying to do async tests w/ test()

[11:09:46.0000] <MikeSmith>
Ah geez

[11:10:06.0000] <MikeSmith>
Is this an open PR?

[11:10:16.0000] <jsbell>
it was merged

[11:10:32.0000] <MikeSmith>
Zhang merged it?

[11:10:39.0000] <jsbell>
jgraham I think?

[11:10:50.0000] <jsbell>
Just noticed, I was going to import that directory into Blink.

[11:11:12.0000] <MikeSmith>
ok, I'll check on it

[11:11:26.0000] <jgraham>
I did what now?

[11:11:46.0000] <MikeSmith>
oh jgraham still awake

[11:12:00.0000] <jsbell>
While you two are here... https://critic.hoppipolla.co.uk/r/5424

[11:12:01.0000] <jgraham>
It's only 19:10 here, my jetlag isn't that bad :)

[11:13:15.0000] <jgraham>
jsbell: BTW I landed an import of the blink serviceworker tests in the gecko tree in the hope that people will pay them more attention if they are there and exposing bugs (which they are) than if they are hypothetical

[11:13:42.0000] <jgraham>
Once people are happy that they're right, I'll move them so they get upstreamed

[11:13:49.0000] <jsbell>
jgraham: (context for the above^^) several of the new webstorage/ tests (event_basic.html, event_body_attribute.html, event_case_sensitive.html, ...) appear to be buggy.

[11:13:53.0000] <jsbell>
jgraham: awesome!

[11:14:26.0000] <jgraham>
I don't recall reviewing those, but I might have

[11:14:53.0000] <jsbell>
Ah, it was Zhang.

[11:15:33.0000] <jgraham>
jsbell: re: moving things into resources/ directories, I think it's OK, but not a good idea to require it (I already had this conversation with someone on a different bug)

[11:15:51.0000] <jgraham>
The canonical source of information for what's a test is the manifest file

[11:18:27.0000] <jgraham>
(I have to leave in a minute, so I don't think I'll get through that review)

[11:18:51.0000] <jsbell>
np

[11:19:53.0000] <jsbell>
jgraham: I'll make a note that we (Blink) should generate/follow MANIFEST.json

[11:44:48.0000] <wanderview>
jgraham: I liked at a couple of them... the one I remember was a bug in firefox

[11:46:54.0000] <jgraham>
wanderview: Too much facebook? ("liked" ;)

[11:47:12.0000] <wanderview>
oh... looked

[11:47:18.0000] <wanderview>
something, something, jet lag

[11:47:28.0000] <wanderview>
which is weak since I only have a 3 hour time difference

[11:47:33.0000] <jgraham>
Heh

[11:50:28.0000] <jsbell>
Ugh, yeah, those imported webstorage tests are just borked. Need to be one big async_test() not several nested test()s (I mean, w/o rewriting from scratch)

[12:26:58.0000] <Ms2ger>
jsbell, wow, those are curiously written tests :)

[12:28:55.0000] <Ms2ger>
storageEventList = new Array();

[12:28:55.0000] <Ms2ger>
iframe.contentWindow.onstorage = function (e) {

[12:28:55.0000] <Ms2ger>
    window.parent.storageEventList.push(e);

[12:29:03.0000] <Ms2ger>
I'm not sure that does what it thinks it does

[13:22:10.0000] <Ms2ger>
jsbell, r? https://github.com/w3c/web-platform-tests/pull/1954

[14:00:52.0000] <jsbell>
Ms2ger: looking

[14:06:38.0000] <jsbell>
Ms2ger: lgtm, trying to remember how to do that in critic...

[14:07:06.0000] <jsbell>
Ms2ger: do you have to add me as a reviewer?

[14:08:13.0000] <TabAtkins>
jsbell: Just click on everything until something happens.

[14:09:57.0000] <jsbell>
[].slice.call(document.all).forEach(e => e.click()); right?

[14:15:03.0000] <wanderview>
JakeA: trained-to-thrill installs an impressive number of node modules

[14:18:31.0000] <jsbell>
Ms2ger: ah, there we go, added myself

[14:28:56.0000] <jsbell>
Ms2ger: ISTM the storage_*_window_open.html tests that navigate themselves to storage_*_window_open_second.html need to be recast in terms of iframes... ?

[14:49:31.0000] <JakeA>
wanderview: for the build perhaps. But that's the way of node, lots of one-job micro libraries

[14:52:12.0000] <wanderview>
yea

[15:16:16.0000] <caitp>
so does anything actually use [ArrayClass] anymore, or would implementing that be basically dead code

[15:25:06.0000] <jsbell>
Ms2ger: https://critic.hoppipolla.co.uk/managereviewers?review=5428

[15:31:33.0000] <caitp>
I guess gecko uses it for DOMRectList and some other things, so maybe it's not totally useless?

