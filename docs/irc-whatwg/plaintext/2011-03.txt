2011-03-01
[16:52:00.0000] <Hixie>
does anyone implement   text-align: "."   yet?

[16:52:01.0000] <TabAtkins>
No.

[16:52:02.0000] <Hixie>
we should really do something about that

[16:53:00.0000] <TabAtkins>
Agreed.

[16:53:01.0000] <Hixie>
do you know what spec it's in

[16:53:02.0000] <Hixie>
?

[16:53:03.0000] <TabAtkins>
Text.

[16:53:04.0000] <Hixie>
thanks

[16:53:05.0000] <aho>
what's that supposed to do?

[16:54:00.0000] <TabAtkins>
It does some magic to make things line up on the first occurence of the specified string.

[16:54:01.0000] <aho>
o_O

[16:54:02.0000] <TabAtkins>
It only works on table cells.

[16:54:03.0000] <aho>
o_OÂ²

[16:55:00.0000] <TabAtkins>
Well, there's no sane way to do it outside of a table-cell.

[16:55:01.0000] <TabAtkins>
http://dev.w3.org/csswg/css3-text/#text-align

[16:55:02.0000] <aho>
trust me, it also doesn't sound sane if you throw table cells into the mix :>

[16:55:03.0000] <TabAtkins>
Check the example.  It does.

[16:57:00.0000] <aho>
hm

[16:58:00.0000] <aho>
i'd write "$85.00" and i'd prefer if that "N/A" would be right aligned as well

[16:58:01.0000] <TabAtkins>
Hm, I don't understand the use-case for text-align-first.

[16:59:00.0000] <TabAtkins>
Okay, then you just use "right" as the value.

[16:59:01.0000] <aho>
yes

[17:02:00.0000] <aho>
text-align-last looks kinda pointless to me... and i don't get text-align-first at all

[17:02:01.0000] <TabAtkins>
Aligning the last line of a paragraph differently is relatively common.

[17:03:00.0000] <aho>
i only read technical books (they don't do anything fancy) and stuff on the internet (even less fancy)

[17:08:00.0000] <aho>
white-space-collapsing... weird. tab-size... woo! :>

[17:09:00.0000] <zewt>
tab-size is :| evil

[17:10:00.0000] <aho>
yes, tab-size should be always 4 ;)

[17:10:01.0000] <TabAtkins>
zewt: Um?

[17:10:02.0000] <zewt>
(I spend so much time teaching confused people that tab-size is always 8 in text files and must never, ever be changed)

[17:10:03.0000] <zewt>
(and yeah I know HTML != plain text files)

[17:10:04.0000] <TabAtkins>
zewt: Why are you teaching people badwrong things?

[17:11:00.0000] <aho>
99% use 4 though

[17:11:01.0000] <aho>
:>

[17:11:02.0000] <TabAtkins>
I use 3.  ^_^

[17:11:03.0000] <aho>
HERETIC! :v

[17:11:04.0000] <zewt>
yeah I'll just change the tab stop in my terminal every time I view a file written for broken hard tab widths :P

[17:11:05.0000] <TabAtkins>
I just need it as small as possible while still being easy to tell what nesting level I'm on.  2 is too small, 3 isn't.

[17:11:06.0000] <zewt>
TabAtkins: that's the common confusion

[17:11:07.0000] <zewt>
the width of the tab stop != how far you indent your code

[17:12:00.0000] <TabAtkins>
zewt: Um, yes it is.  You indent with tabs.  Thus, by definition, the size of the tab is how far you indent your code.

[17:12:01.0000] <zewt>
people change the former when they mean to change the latter, leading to broken text files in everything else

[17:12:02.0000] <TabAtkins>
If you're indenting with spaces, you are badwrong.

[17:12:03.0000] <zewt>
i indent with whatever vim feels like indenting with; it doesn't really matter to me

[17:12:04.0000] <TabAtkins>
zewt: Then you're part of the problem, most likely.

[17:13:00.0000] <zewt>
(unless I'm editing code that uses spaces, in which case I'll :set et for consistency)

[17:13:01.0000] <TabAtkins>
Just teach people to use editors that use tabs.

[17:13:02.0000] <TabAtkins>
Not stupid broken ones that convert to spaces automatically.

[17:13:03.0000] <zewt>
hard tabs are 8 spaces; anything else looks wrong in everything that's not a specially-configured text editor.

[17:13:04.0000] <TabAtkins>
Um, what?  No, that's nonsense.  8-space tabs are almost always GIGANTONORMOUS.

[17:14:00.0000] <zewt>
and the idea of having to reconfigure your environment every time you edit a file authored for a different tab width is, well, a bit insane :P

[17:14:01.0000] <TabAtkins>
Again, I have no idea why you're claiming any reconfiguring has to happen?  What problem are you talking about?

[17:14:02.0000] <zewt>
code written for ts=4 viewed in a ts=8 environment invariably looks completely broken.

[17:14:03.0000] <aho>
the vast majority of people use a tab size of 4 though :>

[17:14:04.0000] <TabAtkins>
No, no it doesn't, unless you do it wrong.

[17:14:05.0000] <aho>
8 is notepad

[17:15:00.0000] <TabAtkins>
Where "wrong" = using tabs for alignment as well as indentation.

[17:15:01.0000] <aho>
everything else is 4 by default :>

[17:15:02.0000] <zewt>
8 is *, the only thing I've ever seen that defaults to ts=4 is msvc

[17:15:03.0000] <zewt>
aho: have you ever used, err, a terminal? :P

[17:15:04.0000] <TabAtkins>
You indent with tabs, and then align with spaces.  Simple, obvious rule.

[17:15:05.0000] <AryehGregor>
A tab size of 8 is reasonable if you're actually using tabs for tabulation instead of abusing them for indentation.

[17:16:00.0000] <AryehGregor>
4 is way too small for tabulation.

[17:16:01.0000] <aho>
isn't using spaces for indentation even more abuse?

[17:16:02.0000] <TabAtkins>
I disagree on that count - *no* static tab length is appropriate for tabulation.

[17:16:03.0000] <AryehGregor>
It is if you're just tabulating small numbers, for instance.

[17:16:04.0000] <TabAtkins>
You either want tables, or elastic tab stops.

[17:16:05.0000] <AryehGregor>
Then 8 is plenty.

[17:16:06.0000] <AryehGregor>
Elastic tab stops would be better, yes.

[17:17:00.0000] <zewt>
i can't count the number of times I've opened a source file, found myself in a jagged zig zag mess, cursed and had to fiddle with ts values to figure out what the author was using

[17:17:01.0000] <TabAtkins>
AryehGregor: Sure, and then the moment you use a string more than 7 characters, your entire table is messed up.

[17:17:02.0000] <TabAtkins>
zewt: That's becasue the author was doing it wrong.

[17:17:03.0000] <TabAtkins>
I assure you that you can read the files I write in *any* tab-size.

[17:17:04.0000] <TabAtkins>
(Well, not 0.)

[17:17:05.0000] <zewt>
if you use ts=8, then there's no such thing as "doing it wrong"; no matter how you do it, it'll render correctly.

[17:18:00.0000] <TabAtkins>
zewt: Except that "correctly" here actually means "with GIGANTONORMOUS GAPS".

[17:18:01.0000] <TabAtkins>
Which is ugly and hard to read.

[17:18:02.0000] <zewt>
good luck trying to teach people in varying environments and editors you've never used yourself "put ^I here and spaces here", heh

[17:18:03.0000] <zewt>
no, once again, ts != sw

[17:18:04.0000] <TabAtkins>
As long as your editor isn't broken (which means inserting spaces when you hit "Tab"), the rule is trivial and easy.

[17:18:05.0000] <zewt>
any decent programmer's editor lets you set the number of spaces to indent independently from the tab stop

[17:19:00.0000] <aho>
(sorry for starting this) :I

[17:19:01.0000] <zewt>
aho: holy war go!

[17:19:02.0000] <TabAtkins>
zewt: How are you distinguishing indentation from tabstops here?  They're both created by pressing "Tab".

[17:20:00.0000] <zewt>
... do you know how to use vim?

[17:20:01.0000] <TabAtkins>
No, why would I?  I use a real text editor.  ^_^

[17:20:02.0000] <zewt>
not rising to that bait :P

[17:20:03.0000] <zewt>
one holy war at a time

[17:20:04.0000] <TabAtkins>
(Note: not emacs)

[17:21:00.0000] <aho>
well, css3-text surely looks a lot more complicated than the last time i looked at it

[17:21:01.0000] <aho>
half of it is giving me a serious headache

[17:22:00.0000] <aho>
hyphenation is somewhat interesting though... finally a use for text-align:justify :>

[17:22:01.0000] <zewt>
if I set sw=4 sts=4, pressing tab once inserts 4 spaces; pressing it again replaces it with a tab. it works fine, and renders reliably.

[17:23:00.0000] <aho>
invisible magic

[17:23:01.0000] <aho>
not cool :)

[17:23:02.0000] <zewt>
hardly magic

[17:23:03.0000] <TabAtkins>
So do you indent with the 4 spaces, or the tab?

[17:23:04.0000] <aho>
and is that a tab or 4 spaces?

[17:23:05.0000] <zewt>
i don't have to think about what it's doing; I know it's doing something reasonable and I spend my time thinking about the code I'm writing. heh

[17:24:00.0000] <TabAtkins>
If you're not thinking about it, then you're probably writing code that will look bad in my editor.

[17:25:00.0000] <zewt>
i'll probably start defaulting to expandtabs (uses only spaces, not tabs), just because it's what most people use in Python

[17:25:01.0000] <zewt>
if your editor is set to 4-space tabs, then it's your editor's fault, not my code's.

[17:25:02.0000] <TabAtkins>
Yes, it is your fault.  Tabs are supposed to be size-agnostic, and treating them as a certain size is harmful.

[17:26:00.0000] <zewt>
no, they're not supposed to be size-agnostic. tabs in plain text files are 8 spaces apart.

[17:26:01.0000] <AryehGregor>
I have vim set up to do expandtabs for Python only.

[17:26:02.0000] <AryehGregor>
No, tabs are a user-configurable number of spaces.

[17:26:03.0000] <zewt>
no, tabs are 8 spaces.

[17:26:04.0000] <AryehGregor>
Pretending they're always 8 is just silly.

[17:26:05.0000] <TabAtkins>
So, dude, we're disagreeing on the most fundamental point here.  You're wrong, unfortunately.

[17:26:06.0000] <AryehGregor>
Not in my text editor.

[17:26:07.0000] <AryehGregor>
I have them set to 4.

[17:26:08.0000] <zewt>
(we could bang our heads on this all night; I'm pretty sure we already know where we disagree, so maybe we should move on :)

[17:26:09.0000] <aho>
you mean... some old school text editors use a tab size of 8 by default...yes

[17:26:10.0000] <AryehGregor>
MediaWiki's style guidelines officially say they're 4, in MediaWiki code.

[17:26:11.0000] <aho>
but every semi-recent one uses a default of 4

[17:27:00.0000] <AryehGregor>
It is factually incorrect to say that text editors always render tabs as eight spaces.

[17:27:01.0000] <AryehGregor>
That is quite demonstrably false.

[17:27:02.0000] <zewt>
text editors are only one consumer of text files. again, terminals.

[17:27:03.0000] <aho>
notepad does and uhm... edit.com perhaps

[17:27:04.0000] <AryehGregor>
Yes, terminals are always eight spaces.

[17:27:05.0000] <AryehGregor>
Also browsers.

[17:27:06.0000] <AryehGregor>
And some text editors.

[17:27:07.0000] <AryehGregor>
But other text editors are four spaces.

[17:27:08.0000] <aho>
browsers, yes. for legacy reasons :>

[17:27:09.0000] <AryehGregor>
So it's not reliable, they can be different sizes.

[17:27:10.0000] <zewt>
(well, tab-size, which is how we got on this in the first place, heh)

[17:28:00.0000] <AryehGregor>
As TabAtkins says.

[17:29:00.0000] <zewt>
text editors that default to anything else have a broken default, probably due to being half-baked editors that can't separate presentation of tabs from the underlying file format.

[17:29:01.0000] <aho>
most people use ts 4

[17:29:02.0000] <aho>
most people like ts 4

[17:30:00.0000] <aho>
hence ts 4 is the default

[17:30:01.0000] <aho>
that's how defaults work

[17:30:02.0000] <zewt>
if so, then most people don't understand tabs. (which itself doesn't seem like an unlikely case)

[17:30:03.0000] <TabAtkins>
zewt: Your statement is inconsistent.  You claim that defaulting to anything other than 8 is a broken default, and then claim that this means they can't separate separation from the underlying format.

[17:30:04.0000] <zewt>
what?

[17:31:00.0000] <aho>
exactly

[17:31:01.0000] <TabAtkins>
The separation of presentation from underlying data is *precisely why* tabs are variable-size.

[17:31:02.0000] <AryehGregor>
Just because you think the default in some text editors is broken doesn't mean it's not there.

[17:31:03.0000] <TabAtkins>
If an editor inserts spaces when you press Tab, or won't let you change the visual size of tabs, the editor is broken and doing things wrong.

[17:31:04.0000] <zewt>
uh, no. any decent text editor lets you press tab and cause a configurable amount of whitespace to appear, regardless of how it's represented in the underlying file.

[17:32:00.0000] <TabAtkins>
The correct amount of whitesapce that should appear is "one tab".

[17:32:01.0000] <TabAtkins>
On account of that's the key you pressed.

[17:32:02.0000] <AryehGregor>
The reality is, your tabs will display in variable widths, and if you aim to accommodate all common ways of viewing your source code instead of deciding you'll ignore many popular text editors, you have to plan for your tabs to be viewed in multiple widths.

[17:32:03.0000] <AryehGregor>
At least four and eight spaces.

[17:32:04.0000] <AryehGregor>
TabAtkins, not according to, e.g., most Python programmers.

[17:32:05.0000] <AryehGregor>
Conventions vary.

[17:32:06.0000] <TabAtkins>
AryehGregor: Unfortunately, that PEP is badwrong.  ^_^

[17:32:07.0000] <AryehGregor>
Some people prefer spaces for indentation because they display consistently.

[17:32:08.0000] <AryehGregor>
Which is a good argument.

[17:33:00.0000] <AryehGregor>
But they're more annoying to backspace in a typical editor, that's the major problem I have with them.

[17:33:01.0000] <zewt>
the tab key means "insert an amount of space to move the visual column to a multiple of some number". it certainly doesn't have to mean "insert a ^I"; most people don't even know what that means.

[17:33:02.0000] <TabAtkins>
No, it's a bad argument, because their code isn't consistent with my code.

[17:33:03.0000] <AryehGregor>
(I'm sure I can configure vim somehow to backspace them properly, but I haven't looked into it.)

[17:33:04.0000] <zewt>
heh, the thing that I hate about PEP-8 is how it actually tells people to wrap code at 80 columns : |

[17:33:05.0000] <TabAtkins>
Where "my code" can be substited for "arbitrary other code that uses a different tab width".

[17:34:00.0000] <zewt>
leading to \

[17:34:01.0000] <zewt>
code that \

[17:34:02.0000] <zewt>
looks like \

[17:34:03.0000] <zewt>
this

[17:34:04.0000] <TabAtkins>
zewt: People don't have to understand what tabs do.  Inserting a tab does exactly what you say.

[17:35:00.0000] <zewt>
yes: insert whitespace so the column number is a multiple of some number.

[17:35:01.0000] <TabAtkins>
Sigh.  Don't pretend like you misunderstood me.

[17:36:00.0000] <zewt>
i'm not, i'm pointing out that "what you say" and "what I say" are (evidently) not the same thing

[17:36:01.0000] <TabAtkins>
Inserting a tab makes the column number a multiple of the tab width.

[17:37:00.0000] <zewt>
but the tab width (8) doesn't have to -- okay let's stop going in circles because we both know the radius of the circle is not going to decrease, heh

[17:37:01.0000] <TabAtkins>
This is different from inserting spaces, because the tab width can change, and the start-location of the whitespace (and thus the distance to the next multiple of the tab width) can as well.

[17:37:02.0000] <TabAtkins>
Thus, inserting spaces is a broken behavior.

[17:38:00.0000] <TabAtkins>
It is in my best interest to convince you of my position, because you are apparently in a position to teach others, and I'd rather read code that is properly indented and aligned in the future.

[17:39:00.0000] <zewt>
and I say precisely the same thing to you, and neither seems likely to happen

[17:39:01.0000] <TabAtkins>
You are making false statements, though, such as the statement that a tab-size of 8 is the most common and/or correct choice.

[17:40:00.0000] <zewt>
you're claiming that your argument is right by saying my argument is wrong; that's not a very compelling case, heh

[17:40:01.0000] <AryehGregor>
Why don't you just ignore any prescriptivism and discuss factual questions, like "how can I get my code to display properly in typical editors?"

[17:41:00.0000] <AryehGregor>
There's no point in discussing whether tab stops "should" be four or eight spaces.

[17:41:01.0000] <TabAtkins>
If that's what I was saying, you'd be right.  Luckily, it's not.  I'm stating that your argument is wrong for specific reasons based on factual inaccuracies in your justifications.

[17:41:02.0000] <AryehGregor>
The reality is, both happen, and if you declare that the many common editors that don't agree with your choice are broken and you don't care about their users, you're a jerk.

[17:41:03.0000] <zewt>
so you're denying that terminals universally use 8-space tabs?

[17:41:04.0000] <AryehGregor>
Terminals do.

[17:41:05.0000] <aho>
worst tab/spaces war ever

[17:42:00.0000] <AryehGregor>
If you're writing something that's only meant for terminal outputs, like ls, then definitely rely on eight-space tabs.

[17:42:01.0000] <aho>
this caramel cappuchino is very delicious by the way

[17:42:02.0000] <AryehGregor>
But not if you expect it to be read in a variety of text editors.

[17:43:00.0000] <aho>
conversation successfully killed? yes? :)

[17:43:01.0000] <TabAtkins>
aho: Did you bring enough for everyone?

[17:43:02.0000] <aho>
bought lots of it

[17:43:03.0000] <aho>
was a bargain thingy :)

[17:43:04.0000] <TabAtkins>
Hand it over, then, or else we're continuing the argument.

[17:43:05.0000] <aho>
2 bucks instead of 3

[17:43:06.0000] <zewt>
can you get some to me while it's hot?

[17:44:00.0000] <aho>
the hyphenation stuff looks kinda complicated

[17:45:00.0000] <aho>
loading dictionary thingies in a @font-face like fashion looks a bit like overkill

[17:45:01.0000] <aho>
but... it's also an amazingly complicated topic

[17:45:02.0000] <TabAtkins>
How often do you need to load hyphenation dictionaries?

[17:46:00.0000] <aho>
how often do they change?

[17:46:01.0000] <aho>
personally i always thought this should be completely offloaded to the browser

[17:46:02.0000] <aho>
i.e. the browser should take care of that dictionary stuff

[17:46:03.0000] <aho>
just like it takes care of dictionaries for spellchecking

[17:46:04.0000] <TabAtkins>
That doesn't help with technical information, for example.

[17:47:00.0000] <TabAtkins>
Spellchecking is a user issue that should be consistent across the browser.  Hyphenation is a display issue for the specific site.

[17:47:01.0000] <TabAtkins>
That said, I believe browsers are allowed to be smart with default hyphenation, it's just that nobody does it.

[17:48:00.0000] <aho>
well, there are common words

[17:48:01.0000] <aho>
like 100k per language

[17:48:02.0000] <TabAtkins>
(This could be accomplished through hyphenation dicts specified in the UA stylesheet, of course.)

[17:48:03.0000] <aho>
no need to define how those should be hyphenated over and over again

[17:48:04.0000] <aho>
yes, some default dictionary... and you can augment that with your own

[17:48:05.0000] <aho>
e.g. you use 50 unusal words and you want those hyphenated, too

[17:49:00.0000] <TabAtkins>
Ooh, I think I might finally be ready to publish an ED of flexbox.

[17:49:01.0000] <TabAtkins>
Let's generate and see.

[17:49:02.0000] <aho>
woo! flexbox! :D

[18:04:00.0000] <TabAtkins>
Damn my colorblindness!  I can only barely see issues inside of notes, given the default stylesheet.

[18:07:00.0000] <TabAtkins>
Aw yeah: http://dev.w3.org/csswg/css3-flexbox/

[22:49:00.0000] <annevk>
wait what

[22:49:01.0000] <annevk>
the link relation "up" will be removed from HTML?

[22:49:02.0000] <annevk>
has the point arrived where I should just nuke most rel attribute usage on my site?

[22:56:00.0000] <annevk>
AryehGregor, interesting idea; making ProcessingInstruction a CharacterData type

[22:56:01.0000] <annevk>
AryehGregor, should it inherit from Comment, even?

[23:11:00.0000] <othermaciej>
annevk: you can always register "up" in your registry of choice

[23:12:00.0000] <annevk>
I wish the situation was a bit more clear than "do whatever you want" and it "depends on who you ask what it means"

[23:14:00.0000] <annevk>
At this point it sure seems that the only link relationships I still want to use are those with some tangible benefit. E.g. "stylesheet", "alternate" in combination with type=application/atom+xml, maybe "noreferrer", "nofollow"...

[23:15:00.0000] <othermaciej>
I do think that in general, it's good to use things in your markup if they have a tangible benefit

[23:15:01.0000] <annevk>
So why did we keep rel=author?

[23:16:00.0000] <annevk>
Most relationships make it easier to understand the structure of a site I suppose. But that includes last/first/up/...

[23:17:00.0000] <othermaciej>
no one made that particular argument against removing them - the focus seemed to be on the very few user agents that expose last/first/up in UI, and on what link types exactly are used by various CMS systems in their templates

[23:18:00.0000] <annevk>
next/previous are not exactly common either

[23:18:01.0000] <annevk>
or rel=search

[23:19:00.0000] <annevk>
oh well, I'm gonna assume that we'll revisit this in a couple of years

[23:19:01.0000] <annevk>
othermaciej, btw, I wrote up http://dvcs.w3.org/hg/from-origin/raw-file/tip/Overview.html

[23:20:00.0000] <annevk>
I guess I'll write an email to public-webapps about it now

[23:22:00.0000] <othermaciej>
annevk: sweet

[23:22:01.0000] <annevk>
I'm somewhat surprised the allowing cross-origin embedding of fonts is dangerous for security argument is still floating around

[23:23:00.0000] <othermaciej>
is it?

[23:23:01.0000] <othermaciej>
I thought I managed to kill that

[23:23:02.0000] <annevk>
you did, but that it was raised at all

[23:23:03.0000] <othermaciej>
I explained to everyone on that one telecon that same-origin policy is not a defense against code execution attacks from malwareâ¦

[23:23:04.0000] <annevk>
because it was used a year ago too and I said pretty much the same thing you did

[23:24:00.0000] <othermaciej>
cargo cult security is apparently a powerful meme

[23:30:00.0000] <foolip>
Hixie, about http://www.w3.org/Bugs/Public/show_bug.cgi?id=11984 do you plan to investigate further what Microsoft/Mozilla are actually willing to implement, or should I turn it into an ISSUE?

[23:31:00.0000] <Hixie>
i left the bug open to work out if there was anything we could do

[23:31:01.0000] <Hixie>
but i'm happy for you to try to solve it for me :-)

[23:32:00.0000] <foolip>
ugh, I may be a bit too partial to come up with an honest suggestion :)

[23:32:01.0000] <foolip>
but if you *do* want me to make an ISSUE, you need to close some bug that I disagree with I guess. right, othermaciej?

[23:32:02.0000] <annevk>
othermaciej, http://lists.w3.org/Archives/Public/public-webapps/2011JanMar/0710.html

[23:32:03.0000] <othermaciej>
foolip: yes, it needs to be resolved to be escalated

[23:33:00.0000] <annevk>
othermaciej, might help if you weigh in, however brief

[23:33:01.0000] <othermaciej>
foolip: as far as I am concerned, I think it is fine for Hixie to either WONTFIX it, or to take another crack at a mutually agreeable resolution

[23:33:02.0000] <Hixie>
othermaciej: you can try to come up with a resultion without using the wg issue process

[23:33:03.0000] <Hixie>
er

[23:33:04.0000] <Hixie>
s/othermaciej/foolip/

[23:34:00.0000] <foolip>
I don't know how to communicate with Microsoft, so in that case I'd prefer for Hixie to try once more...

[23:34:01.0000] <Hixie>
i have never successfully managed to communicate with microsoft

[23:34:02.0000] <foolip>
Hixie, how did you manage to get the statement that I cited in my original CP then?

[23:35:00.0000] <Hixie>
i mailed them about this very issue months ago and they said that obeying Content-Type was the most stupid thing ever

[23:35:01.0000] <othermaciej>
foolip: in the case of this bug, you could contact Adrian Bateman directly

[23:35:02.0000] <Hixie>
foolip: what statement?

[23:35:03.0000] <othermaciej>
foolip: in general, if Microsoft people fail to reply on something HTML WG related, I have found that asking Paul Cotton often results in a response from somebody over there

[23:36:00.0000] <foolip>
Hixie, "Microsoft's position is, as far as I can tell, that there's no point looking at the Content-Type header"

[23:36:01.0000] <Hixie>
ah, yeah, that was what they told me

[23:36:02.0000] <Hixie>
they then implemented the exact opposite of that, apparently

[23:36:03.0000] <Hixie>
so like i said

[23:36:04.0000] <Hixie>
i have never successfully managed to communicate with microsoft

[23:36:05.0000] <foolip>
ok, true :)

[23:37:00.0000] <Hixie>
given how much it would help microsoft for me to be able to make the spec match what they want, you'd think they'd be more communicative

[23:38:00.0000] <annevk>
haha

[23:38:01.0000] <annevk>
you must be new here

[23:53:00.0000] <foolip>
Hixie, ok, I made a naive attempt at friendly dialog

[23:59:00.0000] <annevk>
othermaciej, I guess abarth would have to explain the CSP angle

[00:04:00.0000] <abarth>
the CSP angle of?  /me is missing context

[00:05:00.0000] <annevk>
see latest in public-webapps

[00:05:01.0000] <annevk>
sorry

[00:07:00.0000] <abarth>
ah, i see

[00:07:01.0000] <abarth>
sure

[00:13:00.0000] <othermaciej>
it does vaguely fit with the CSP theme of denying actions that are normally allowed

[00:13:01.0000] <othermaciej>
but other than that, I don't get it

[00:16:00.0000] <abarth>
i'm writing up a reply for the mailing list

[00:16:01.0000] <abarth>
its a lot like frame-ancestors

[00:17:00.0000] <abarth>
aside from the aesthetic questions

[00:17:01.0000] <abarth>
From-Origin is probably going to want to designate a list of origins that can embed the resource

[00:17:02.0000] <abarth>
which is something CSP has syntax for

[00:20:00.0000] <annevk>
it does allow a list of origins atm

[00:20:01.0000] <annevk>
that's what # means

[00:20:02.0000] <annevk>
subtle, but true :)

[00:20:03.0000] <abarth>
what about wildcarding?

[00:20:04.0000] <annevk>
but it does not allow the wild card matching of CSP

[00:21:00.0000] <abarth>
so, that's similar, but slightly different than CSP

[00:21:01.0000] <abarth>
which seems like a loss in terms of extra complexity

[00:22:00.0000] <annevk>
I modeled it after CORS

[00:22:01.0000] <abarth>
can you have a list of Origins in CORS?

[00:22:02.0000] <annevk>
not yet

[00:23:00.0000] <annevk>
but it can be quite easily added in the future

[00:23:01.0000] <abarth>
its entirely likely the best solution here is to decide that a Content-Security-Policy header doesn't make sense

[00:23:02.0000] <annevk>
and it would follow the design of From-Origin

[00:23:03.0000] <abarth>
and instead we should have separate headers for the different CSP use cases

[00:23:04.0000] <annevk>
hey I don't know either :)

[00:23:05.0000] <annevk>
just trying to defend my design decisions :)

[00:24:00.0000] <annevk>
abarth, that does sound better

[00:24:01.0000] <annevk>
less <input> and <object>, more <canvas>, <video>, etc.

[00:24:02.0000] <abarth>
yes

[00:24:03.0000] <abarth>
i suspect the mozilla folks will be less excited about that approach

[00:24:04.0000] <abarth>
although it would be fine with me

[00:25:00.0000] <abarth>
they have this thought process around "Default deny" begin a good starting point

[00:25:01.0000] <abarth>
but i'm skeptical about how that will evolve in the future

[00:30:00.0000] <othermaciej>
a "default deny everything" starting point pretty clearly cannot accommodate future things one might want to deny

[00:31:00.0000] <abarth>
yeah, i've said that to the moz folks in every meeting we've had on this topic

[00:32:00.0000] <abarth>
i'm not really sure where the miscommunication is

[00:33:00.0000] <othermaciej>
what is their response to this line of argument?

[00:33:01.0000] <othermaciej>
I could imagine:

[00:34:00.0000] <othermaciej>
(a) few sites will use CSP, so we'll just break them

[00:34:01.0000] <othermaciej>
(b) a current set will be default-deny, but future things will be default-allow

[00:34:02.0000] <othermaciej>
(c) we'll never think of anything new

[00:34:03.0000] <othermaciej>
(d) versioning

[00:35:00.0000] <othermaciej>
none of those sound great

[00:35:01.0000] <abarth>
i think part of their thinking is that they've enumerated all the ways web pages can load resources

[00:35:02.0000] <abarth>
and that subresource loads are the most important thing for security

[00:36:00.0000] <abarth>
as they add new kinds of subresource loads

[00:36:01.0000] <abarth>
they'll remember to add them to the default-deny

[00:36:02.0000] <abarth>
so there will never exist a version of Firefox that allows them by default

[00:37:00.0000] <abarth>
when i push back and say that there's more to security than subresource loads, they usually say something like (b)

[00:37:01.0000] <abarth>
that's also connected with their sadness about me only wanting to do the script parts

[00:37:02.0000] <abarth>
because that doesn't square with their mental model of controlling all subresources

[00:39:00.0000] <othermaciej>
preventing yourself from accidentally loading offsite images does not seem like it would be a concern for most sites

[00:41:00.0000] <abarth>
i usually use the example of off-site fonts

[00:41:01.0000] <othermaciej>
more likely vice versa (i.e. prevent people from hotlinking your images) but that doesn't seem to me to really fit in with the existing CSP policies

[00:42:00.0000] <othermaciej>
interestingly, fonts are also a case where you are cub more likely to want to prevent others hot linking them from your site than to want to prevent accidental embedding

[00:42:01.0000] <othermaciej>
in the case of images specifically though, it is a very likely use case to want to allow embedding images from anywhere, while limiting possible origins for scripts to a whitelist

[00:44:00.0000] <abarth>
the script / XSS use case is pretty compelling to me

[00:44:01.0000] <abarth>
enough that I want to implement it

[00:45:00.0000] <abarth>
but I don't want to implement gratuitously different from Firefox

[00:46:00.0000] <abarth>
that leaves me with the task of trying to win brandon and co over to my perspective

[00:48:00.0000] <abarth>
they seem excited about implementing restrictions on lots of things that don't seem that useful (e.g., images, fonts)

[00:48:01.0000] <abarth>
my current approach is to set things up so we can implement a subset of the features

[00:48:02.0000] <abarth>
e.g., script controls

[00:48:03.0000] <abarth>
and then decide later whether to implement more

[00:49:00.0000] <annevk>
othermaciej, replied to your questions on changes

[00:49:01.0000] <othermaciej>
that does seem like a sensible approach

[00:49:02.0000] <annevk>
guess I should now read this chatbacklog :)

[00:51:00.0000] <annevk>
I do agree that I never really saw the point in all the options they had

[00:52:00.0000] <annevk>
but I guess they are afraid of the site having some kind of XSS hole and leaking information to an external site?

[00:52:01.0000] <othermaciej>
annevk: I guess I will have to do some research to understand some of those

[00:52:02.0000] <abarth>
annevk: they agree that we can't stop leaking information

[00:52:03.0000] <othermaciej>
in what way was Event.type formerly restricted?

[00:52:04.0000] <annevk>
othermaciej, it could not be empty

[00:53:00.0000] <othermaciej>
do implementations let it be empty?

[00:53:01.0000] <annevk>
euh

[00:53:02.0000] <annevk>
not sure what happened

[00:53:03.0000] <annevk>
but yes, in Gecko it can be empty

[00:53:04.0000] <annevk>
you can register event listeners for empty event names too

[00:53:05.0000] <annevk>
the only trick is that you need to use initEvent() currently

[00:54:00.0000] <annevk>
otherwise getting Event.type throws

[00:54:01.0000] <annevk>
which is just kind of silly and a restriction I removed from DOM Core

[00:54:02.0000] <othermaciej>
it seems like most of the listed changes are either trivial, or compatible extensions

[00:55:00.0000] <annevk>
removing EventException and changing the details around stop propagation and canceling are probably the more problematic ones

[00:55:01.0000] <annevk>
well, incompatible ones

[00:56:00.0000] <annevk>
zewt wrote http://zewt.org/~glenn/test-event-flags/ to figure out what will make the most sense with the stop propagation and canceled flags

[00:59:00.0000] <othermaciej>
interesting, I am mildly surprised to discover that Gecko and WebKit do not match on those things

[01:00:00.0000] <annevk>
when I started looking into events I was surprised to find many holes

[01:01:00.0000] <annevk>
I'm starting to wonder if you need to write specs "Hixie-style" to prevent getting them

[01:01:01.0000] <annevk>
I mean something as simple as var e = document.createEvent("Event"); alert(e.eventPhase) or alert(e.type) is undefined

[01:02:00.0000] <annevk>
Did nobody ever think of that?

[01:02:01.0000] <annevk>
How can this be?

[01:02:02.0000] <othermaciej>
the only WebKit/Gecko difference is in the last two tests and the Gecko behavior seems more sensible

[01:02:03.0000] <othermaciej>
it does seem strange for that behavior to be undeinfed

[01:07:00.0000] <annevk>
it seems that the "canceled flag" should be reset just before dispatching

[01:08:00.0000] <annevk>
and that the "stop propagation flag" and "stop immediate propagation flag" should be reset just after dispatching

[01:08:01.0000] <annevk>
but that doesn't explain this one: "Calling preventDefault before dispatch prevents the default action from running: yes (DOM Events) "

[01:09:00.0000] <annevk>
which seemingly contradicts "If preventDefault was called during a previous dispatch of an event, dispatching the event again resets defaultPrevented to false: yes (DOM Events, DOM Core) "

[01:09:01.0000] <annevk>
in combination with "defaultPrevented is retained after dispatchEvent returns: yes (DOM Core) "

[01:09:02.0000] <annevk>
I don't get how those can be all "yes" in Minefield

[01:15:00.0000] <othermaciej>
does preventDefault ever have any effect when called while the event is not being dispatched?

[01:16:00.0000] <othermaciej>
I guess the answer must be yes

[01:16:01.0000] <othermaciej>
proposed test case: dispatch an event, then call preventDefault on it, then dispatch again

[01:16:02.0000] <annevk>
that is the second statement above

[01:16:03.0000] <othermaciej>
no it's not

[01:17:00.0000] <othermaciej>
let me be more clear

[01:17:01.0000] <othermaciej>
dispatch an event, after dispatchEvent returns call preventDefault on it, then call dispatchEvent again

[01:17:02.0000] <annevk>
oh sorry

[01:18:00.0000] <othermaciej>
my working theory is that dispatchEvent resets an event's flags only if the event has been dispatch before

[01:18:01.0000] <othermaciej>
but it's also possible there is something magic about changing flags while it is not being dispatched

[01:19:00.0000] <annevk>
it would be much simpler to always reset them at some point

[01:19:01.0000] <annevk>
but resetting canceled at the end has the side effect of making defaultPrevented useless after dispatch

[01:20:00.0000] <annevk>
and resetting it upfront breaks prevents canceling an event before dispatch (only relevant for synthetic events though)

[01:21:00.0000] <annevk>
another thing I wonder about is whether there's currently a difference between UA-fired and synthetically-fired events

[01:21:01.0000] <annevk>
I got the impression there was

[01:22:00.0000] <othermaciej>
in WebKit there is not, as far as dispatch logic is concerned, anyway

[01:22:01.0000] <othermaciej>
some event default actions may require a real UA-fired event

[01:23:00.0000] <annevk>
yeah, that is the "trusted flag"

[01:23:01.0000] <zcorpan>
Rik`, hsivonen, MikeSmith: http://krijnhoetmer.nl/irc-logs/whatwg/20110228#l-738 seems like a bug in v.nu

[01:23:02.0000] <annevk>
only set for spec-fired events

[01:23:03.0000] <annevk>
and unset when a spec-fired event is dispatched again manually

[01:24:00.0000] <hsivonen>
zcorpan: oh, I didn't realize it was about v.nu

[01:26:00.0000] <othermaciej>
you can see our overall tree dispatch logic here:

[01:26:01.0000] <othermaciej>
http://trac.webkit.org/browser/trunk/Source/WebCore/dom/Node.cpp#L2644

[01:26:02.0000] <othermaciej>
per-target dispatch logic starting here: http://trac.webkit.org/browser/trunk/Source/WebCore/dom/EventTarget.cpp#L287

[01:26:03.0000] <othermaciej>
(most of the interesting stuff is down in fireEventListeners)

[01:27:00.0000] <othermaciej>
it should be really easy to follow, unlike Gecko's event dispatch, at least last time I looked

[01:27:01.0000] <othermaciej>
UA-fired events go through dispatchEvent()

[01:27:02.0000] <annevk>
"return !event->defaultPrevented();" shouldn't that be the opposite?

[01:28:00.0000] <hsivonen>
http://my.opera.com/core/blog/2011/02/28/webgl-and-hardware-acceleration-2 is interesting

[01:28:01.0000] <annevk>
hmm, that !event pattern is more common

[01:28:02.0000] <hsivonen>
I wonder how Opera has dealt with the Linux driver situation

[01:29:00.0000] <hsivonen>
and the driver situation on Windows, too

[01:29:01.0000] <othermaciej>
it is entirely possible our dispatchEvent return value is backwards

[01:29:02.0000] <hsivonen>
and text rendering

[01:30:00.0000] <annevk>
othermaciej, it seems like it is, yes

[01:31:00.0000] <annevk>
othermaciej, seems like a copy and paste mistake on closer reading

[01:31:01.0000] <annevk>
othermaciej, if I had the WebKit tree here I would give you a patch to remove that !

[01:31:02.0000] <annevk>
(zewt's test confirms this bug fwiw)

[01:31:03.0000] <othermaciej>
annevk: I would do it myself, but I need to check all the callers first

[01:32:00.0000] <othermaciej>
hmm, I think it is right

[01:32:01.0000] <othermaciej>
 If Event.preventDefault() was called the returned value shall be false, else it shall be true.

[01:32:02.0000] <othermaciej>
says DOM Level 3 Events

[01:32:03.0000] <jgraham>
Yay, foreign content stuff changed!

[01:33:00.0000] <othermaciej>
which is what I think "return !event->defaultPrevented();" does - false if default was prevented, otherwise true

[01:33:01.0000] <annevk>
othermaciej, seems like a bug in DOM 3 Events

[01:33:02.0000] <annevk>
dispatchEvent should return the value of defaultPrevented

[01:33:03.0000] <annevk>
not the opposite

[01:34:00.0000] <othermaciej>
DOM Level 2 Events agrees with Level 3

[01:35:00.0000] <othermaciej>
it does appear that DOM Core does the opposite

[01:35:01.0000] <annevk>
hmm yeah, so maybe a bug in DOM Core then

[01:36:00.0000] <annevk>
I guess it makes sense

[01:36:01.0000] <annevk>
and I was incorrect with respect to WebKit being the only one here, everyone does it this way

[01:36:02.0000] <annevk>
/me fixes

[01:37:00.0000] <othermaciej>
I think the reason for the funky backwardness is like this:

[01:38:00.0000] <othermaciej>
it is assumed that the caller of dispatchEvent uses the return (if they use it at all) to decide whether to carry out a default action

[01:38:01.0000] <othermaciej>
so you write:

[01:39:00.0000] <othermaciej>
if (target.dispatchEvent(event)) defaultAction(target, event);

[01:39:01.0000] <annevk>
makes sense

[01:39:02.0000] <annevk>
https://bitbucket.org/ms2ger/dom-core/changeset/6789c290eb6a

[01:40:00.0000] <othermaciej>
now that's responsiveness :-)

[01:42:00.0000] <annevk>
zcorpan, could you update the link in http://simon.html5.org/specs/web-dom-core once more?

[02:05:00.0000] <zcorpan>
done

[02:08:00.0000] <annevk>
thanks

[02:16:00.0000] <roc>
abarth|zZz: the conflict between evolution and default-deny for CSP exists for <iframe sandboxed> too

[02:18:00.0000] <annevk>
zewt, you around?

[02:20:00.0000] <zcorpan>
oh, so ie9 changed to the other extreme for <video> content-type. fun

[02:25:00.0000] <roc>
I had resigned myself to giving up on Content-Type, and now I have to think about it again

[02:26:00.0000] <zcorpan>
it seems like we'd want to sniff for the missing content-type header case at least

[02:27:00.0000] <MikeSmith>
zcorpan: I fixed that bug a while back. fix is in the repo but validator.nu hasn't been redeployed yet after I made that change

[02:27:01.0000] <roc>
yeah

[02:27:02.0000] <zcorpan>
MikeSmith: ok

[02:27:03.0000] <MikeSmith>
Rik`: (see above about the validator bug you noticed)

[02:28:00.0000] <annevk>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/853 here is that test Maciej wondered about

[02:29:00.0000] <annevk>
well, if you comment out the first e.preventDefault()

[02:29:01.0000] <annevk>
othermaciej, ^^

[02:29:02.0000] <annevk>
it seems that both Gecko and WebKit reset just before dispatching

[02:31:00.0000] <annevk>
or maybe, it only has effect when called during dispatch

[02:31:01.0000] <annevk>
grmbl

[02:33:00.0000] <annevk>
oh, it was because I did not make it cancelable

[02:34:00.0000] <annevk>
it seems what happens is that in Gecko the canceled flag is simply never cleared

[02:34:01.0000] <Rik`>
MikeSmith: zcorpan: oh thanks, my brain can return to sanity mode

[02:35:00.0000] <annevk>
even calling initEvent does not make a change

[02:35:01.0000] <MikeSmith>
Rik`: yeah, sorry about that

[02:35:02.0000] <annevk>
the same is true in WebKit

[02:35:03.0000] <annevk>
afaict, again

[02:45:00.0000] <annevk>
which makes dispatching events again kind of useless

[02:46:00.0000] <zcorpan>
Rik`: you mean your brain can return false; ?

[02:47:00.0000] <annevk>
in WebKit stop propagation is not reset either

[02:47:01.0000] <annevk>
in Gecko it is

[02:48:00.0000] <annevk>
Opera is like WebKit...

[02:48:01.0000] <annevk>
so why does the DOM spec says resetting is going on here for historical reasons? smaug?

[02:48:02.0000] <annevk>
DOM Events spec*

[03:03:00.0000] <annevk>
emailed www-dom and reported it as a DOM3Events issue

[03:03:01.0000] <annevk>
lets see how that goes

[03:48:00.0000] <mpt>
Does anyone have statistics on how often <img> elements have alt=, how often they have title=, how often they have both, and how often they're different?

[03:49:00.0000] <mpt>
I've looked in <http://code.google.com/webstats/2005-12/elements.html> and <http://philip.html5.org/data/>

[03:51:00.0000] <jgraham>
mpt: You live! also http://dev.opera.com/articles/view/mama-images-elements-and-formats/ might or might not help

[03:51:01.0000] <jgraham>
Mostly not I guess

[03:52:00.0000] <mpt>
That at least answers the first two questions

[03:52:01.0000] <mpt>
thanks jgraham

[03:53:00.0000] <Philip`>
I can count <img alt>/<img title> easily, but the rest would involve some code

[03:53:01.0000] <mpt>
I guess so

[03:53:02.0000] <hsivonen>
I wonder how http://itunes.apple.com/app/opera/id404764921?mt=12 works with security updates

[03:55:00.0000] <annevk>
jgraham, it's becoming more evident you're not on twitter

[03:55:01.0000] <jgraham>
annevk: I have a happily empty twitter account

[03:57:00.0000] <annevk>
is it jgraha or jgraham?

[03:58:00.0000] <jgraham>
jgraham

[03:58:01.0000] <annevk>
seems some people found it already :)

[03:58:02.0000] <annevk>
/me follow it too just in case

[03:58:03.0000] <annevk>
follows*

[04:14:00.0000] <annevk>
http://www.google.com/search?q=site:annevankesteren.nl&tbm=blg what the hell is that "?q=http://www.evilaliv3.org/"

[04:16:00.0000] <karlcow>
strange

[04:19:00.0000] <annevk>
iTunes does indeed work when stuff is converted to AAC btw o_O

[04:20:00.0000] <annevk>
though getting album information still requires "importing" which elsewhere it says is done by dragging and dropping

[04:20:01.0000] <annevk>
bugs...

[04:20:02.0000] <annevk>
of course you only run into this because Radiohead decided to stick it to Apple

[04:21:00.0000] <Philip`>
http://www.google.com/support/forum/p/Webmasters/thread?tid=0f1d3b5cf0ac27bb&hl=en

[04:21:01.0000] <annevk>
so maybe the idea is to create an experience that says "if it's not via us, it's more sucky"

[04:21:02.0000] <Philip`>
Sounds common

[04:29:00.0000] <jgraham>
annevk: Apple making the experience worse when using non-Apple content or software? Surely not!

[04:37:00.0000] <Philip`>
(Has Apple made their touchpad driver for Windows in Boot Camp not incredibly terrible yet?)

[05:04:00.0000] <karlcow>
wondering if someone did implementation check for NetFront http://www.access-company.com/products/mobile_solutions/netfrontmobile/browser/index.html

[05:05:00.0000] <karlcow>
it claims "HTML 5 (Partial)"

[05:05:01.0000] <karlcow>
wonder which parts of HTML 5

[05:06:00.0000] <annevk>
there's no HTML 5 :p

[05:11:00.0000] <zewt>
annevk: catch comments about event name/type/interface terminology?

[05:15:00.0000] <annevk>
hmm?

[05:16:00.0000] <annevk>
gonna have lunch + watching californication

[05:16:01.0000] <annevk>
back in 30

[05:19:00.0000] <hsivonen>
karlcow: sure any browser that can browser HTML at all has "partial" HTML5 support

[05:44:00.0000] <annevk>
zewt, I will catch your comments now

[05:45:00.0000] <annevk>
well, can

[05:48:00.0000] <annevk>
I guess I should write a blog post on DOM Core additions

[05:48:01.0000] <annevk>
see if I can inspire some more feedback

[05:58:00.0000] <zewt>
annevk: was suggesting that the event name is referred to as the event type (to match DOM Events, and the init*Event prototypes), and the class of the event as the interface (eg. "create an event that uses the MessageEvent interface")

[06:02:00.0000] <annevk>
but it's not really logical...

[06:02:01.0000] <zewt>
what isn't?

[06:02:02.0000] <annevk>
the type is "mouse event" or "progress event", the name is "click", "dblclick" etc.

[06:03:00.0000] <annevk>
but maybe I should not care about that

[06:03:01.0000] <zewt>
it's very confusing to refer to the interface as the "type" when the name of the property event.type is something completely different

[06:04:00.0000] <annevk>
I guess that is fair enough

[06:04:01.0000] <annevk>
btw http://lists.w3.org/Archives/Public/www-dom/2011JanMar/0054.html

[06:04:02.0000] <annevk>
I will attempt making that change now

[06:05:00.0000] <zewt>
for example, eventsource is confusing in "dispatch the event", since in one line it says "with the event name", then in the next step it says "change the type" ... seems like picking consistent terminology is important

[06:05:01.0000] <zewt>
(less concerned personally with what that terminology is; suggested "type" due to the attribute name and because it already seems widely used)

[06:05:02.0000] <zewt>
yeah I saw that

[06:08:00.0000] <annevk>
kind of annoying since the "of type" concept is used quite frequently, but not a huge deal

[06:09:00.0000] <zewt>
in spec terms are "of type" and "implementing the interface" considered the same?

[06:11:00.0000] <annevk>
sort of, I guess

[06:11:01.0000] <annevk>
anyway, not a huge deal: https://bitbucket.org/ms2ger/dom-core/changeset/bf5fa39afb93

[06:11:02.0000] <zewt>
not sure if the former means "create this type" and the latter is "create anything implementing this type", or if it's not that precise

[06:11:03.0000] <annevk>
guess I should also fix XHR/PE

[06:11:04.0000] <annevk>
oh, XHR is not affected

[06:13:00.0000] <zewt>
annevk: re Gecko resetting the canceled flag, it seems a little more complex, unless I messed up in my testing

[06:14:00.0000] <zewt>
there are three effects of resetting the flag on the next dispatch: running the default handler, the return value of dispatchEvent, and the value of defaultPrevented (getPreventDefault)

[06:14:01.0000] <zewt>
gecko seems to do the first and the last only

[06:14:02.0000] <zcorpan>
the new terminology for type/interface is better

[06:15:00.0000] <zewt>
http://zewt.org/~glenn/test-event-flags/ the three preventDefault cases; in FF3.6 I see yes/no/yes

[06:15:01.0000] <annevk>
zewt, zcorpan, glad you guys like it, please go after all specs :)

[06:16:00.0000] <annevk>
zewt, note that the return value of dispatchEvent is the opposite of what you might expect

[06:16:01.0000] <annevk>
zewt, I just fixed that this morning in DOM Core

[06:17:00.0000] <zewt>
yeah I know

[06:17:01.0000] <annevk>
zewt, per my testing Gecko's return value for dispatchEvent is consistent with what I'd expect

[06:17:02.0000] <annevk>
zewt, so maybe you don't negate it first when equality testing?

[06:17:03.0000] <zewt>
you mean, it's consistent with not resetting the flag, right?

[06:18:00.0000] <zcorpan>
/me finds various "of type" in complete.html

[06:19:00.0000] <zewt>
(... but going over my other test I'm confused, because FF doesn't execute the default handler at all--so how was I testing that at all in FF? sigh)

[06:20:00.0000] <annevk>
zewt, dispatchEvent returns !(canceledFlag) basically

[06:20:01.0000] <annevk>
so if the canceled flag is set, it returns false

[06:20:02.0000] <zewt>
right, I know the two are inverted

[06:21:00.0000] <annevk>
so you can if(target.dispatchEvent(event)) defaultAction("teehee")

[06:21:01.0000] <zewt>
var dispatchEventReportsPreventDefault = !elem.dispatchEvent(ev);

[06:21:02.0000] <zewt>
var defaultPreventedReportsPreventDefault = ev.getPreventDefault();

[06:21:03.0000] <annevk>
okay

[06:21:04.0000] <zewt>
let me go check what the heck I was doing with default testing though ... since FF appears to never run default handlers for "click" and that's what my test was based on

[06:25:00.0000] <zewt>
yeah that's what was confusing me

[06:28:00.0000] <zewt>
... does FF really not run default handlers for synthesized clicks? i swear I've done that before...

[06:29:00.0000] <annevk>
might be a security feature

[06:29:01.0000] <zewt>
misfeature, perhaps

[06:30:00.0000] <annevk>
not running default handlers based on the trusted flag seems sensible to me

[06:30:01.0000] <zewt>
but click is an explicit exception to that

[06:31:00.0000] <annevk>
anyway, I think default handles should follow the normal model

[06:31:01.0000] <annevk>
handlers*

[06:32:00.0000] <zewt>
oh, I apparently worked around it manually, setting location.href by hand

[06:32:01.0000] <zcorpan>
what's a default handler?

[06:32:02.0000] <annevk>
zcorpan, like following a link

[06:32:03.0000] <zcorpan>
ok

[06:33:00.0000] <annevk>
user agent internal event listeners basically

[06:33:01.0000] <MikeSmith>
annevk: http://www.w3.org/TR/2011/WD-notifications-20110301/

[06:33:02.0000] <zewt>
it's also annoying that there's no way of knowing whether a dispatched click event was run

[06:33:03.0000] <annevk>
MikeSmith, teehee

[06:34:00.0000] <MikeSmith>
annevk: please take a look again and let me know if you see any problems

[06:34:01.0000] <MikeSmith>
not published yetâ¦ I still have to jump through some pubrules hoops

[06:34:02.0000] <MikeSmith>
and get systems team to set up the symlink

[06:34:03.0000] <annevk>
MikeSmith, ah, Notification is still listed under Methods

[06:34:04.0000] <MikeSmith>
oh, I'll fix that right now

[06:35:00.0000] <zcorpan>
FPWD?

[06:36:00.0000] <annevk>
yes

[06:36:01.0000] <MikeSmith>
annevk: reload

[06:36:02.0000] <zcorpan>
cool

[06:36:03.0000] <annevk>
MikeSmith, not all attributes are of type Function

[06:36:04.0000] <annevk>
replaceId and dir are supposed to be DOMString

[06:38:00.0000] <zewt>
should iconUrl/title/body be exposed as (maybe readonly) attributes on Notification?

[06:38:01.0000] <annevk>
and 5.4 defines a bunch of 5.1 more succinctly, but I am not sure it is worth bothering fixing all this now

[06:40:00.0000] <annevk>
zewt, that's something to bring up on the mailing list

[06:41:00.0000] <annevk>
MikeSmith, it seems the Function/DOMString thing for replaceId and dir is your fault

[06:41:01.0000] <annevk>
MikeSmith :/

[06:43:00.0000] <annevk>
waking up at 6:30AM makes for being both tired and productive btw

[06:43:01.0000] <annevk>
recommend trying it at least once

[06:43:02.0000] <zewt>
"stepping on a tack will make you move really fast"

[06:44:00.0000] <zewt>
(also swear a lot)

[06:44:01.0000] <annevk>
http://lists.w3.org/Archives/Public/public-webapps/2011JanMar/ hmm I'm a big spammer

[06:52:00.0000] <karlcow>
annevk: it's why we are banning you for 3 months starting next week :p

[06:52:01.0000] <karlcow>
http://lists.w3.org/Archives/Public/public-webapps/2011JanMar/author.html

[06:52:02.0000] <annevk>
heh

[06:52:03.0000] <annevk>
compared to some of those other guys I'm not doing that bad it seems

[06:53:00.0000] <zewt>
that bugzilla guy needs to shut up for a while

[06:53:01.0000] <annevk>
and Glenn, who is Glenn?!

[06:53:02.0000] <zewt>
some loser

[06:54:00.0000] <annevk>
clearly, he has plenty of time to write email :p

[06:55:00.0000] <zewt>
livin' the life, he is

[06:56:00.0000] <zewt>
one's "no, really, you don't need to reply to that" filter takes continual upkeep :P

[06:57:00.0000] <MikeSmith>
annevk: oops

[06:57:01.0000] <MikeSmith>
annevk: thanks for catching that

[06:57:02.0000] <MikeSmith>
reload please

[06:57:03.0000] <MikeSmith>
and let me know if you spot any remaining problems

[06:57:04.0000] <annevk>
I'm surprised I'm spotting these :)

[06:57:05.0000] <MikeSmith>
the thing about 5.4 is editorial and John needs to fix that if it's to be fixed

[06:58:00.0000] <MikeSmith>
I need to spend some quality time with respec at some point

[06:59:00.0000] <MikeSmith>
frustratingâ¦ I actually had a nightmare last night in which I was arguing with Berjon about it

[06:59:01.0000] <annevk>
MikeSmith, ouch

[06:59:02.0000] <annevk>
MikeSmith, was he dressed as dahut?

[06:59:03.0000] <MikeSmith>
heh

[06:59:04.0000] <annevk>
MikeSmith, looks good now btw

[07:00:00.0000] <MikeSmith>
no, regular Berjon casual attire

[07:00:01.0000] <MikeSmith>
thanks

[07:00:02.0000] <MikeSmith>
validates too

[07:00:03.0000] <MikeSmith>
I need to add a paragraph to the Status section

[07:00:04.0000] <MikeSmith>
sayingâ¦ something

[07:00:05.0000] <MikeSmith>
any suggestions?

[07:00:06.0000] <annevk>
MikeSmith, still pretty scary

[07:00:07.0000] <MikeSmith>
heh

[07:01:00.0000] <annevk>
MikeSmith, "Although this is an initial draft and we are open to changing the design so far we have not received feedback asking us to do so."

[07:02:00.0000] <annevk>
but isn't just boilerplate enough?

[07:03:00.0000] <annevk>
e.g. the only custom paragraph CORS has is all its previous names

[07:05:00.0000] <MikeSmith>
I don't really know what the purpose of the "custom paragraph" requirement in the sotd is

[07:05:01.0000] <MikeSmith>
maybe nobody knows

[07:05:02.0000] <MikeSmith>
anymore

[07:06:00.0000] <annevk>
sounds like you should omit it

[07:06:01.0000] <MikeSmith>
I think pubrules checker will choke if I do

[07:06:02.0000] <MikeSmith>
I'll try

[07:06:03.0000] <annevk>
http://www.w3.org/TR/cssom-view/#sotd

[07:06:04.0000] <annevk>
doesn't seem to have anything special either

[07:07:00.0000] <annevk>
and Bert Bos is serious about that stuff, he even has his own rules on top of the W3C rules

[07:11:00.0000] <hsivonen>
Hixie: thanks for fixing foreign content

[07:14:00.0000] <hsivonen>
Hixie: umm. It seems that you changed more than what the bug requested.

[07:14:01.0000] <hsivonen>
Hixie: did you really mean to change the handling of character tokens when the current node is an HTML integration point?

[07:16:00.0000] <MikeSmith>
annevk: hmm, http://www.w3.org/2001/06/manual/#Status has more details

[07:16:01.0000] <MikeSmith>
but I can't be bothered

[07:19:00.0000] <jgraham>
hsivonen: (I haven't looked in detail, but a testcase that changes would be helpful)

[07:20:00.0000] <annevk>
MikeSmith, oh wow; well I tried telling ij SotD is near useless, but he didn't really listen this time around

[07:24:00.0000] <annevk>
http://annevankesteren.nl/2011/03/dom-core-events -- when I worked on Events I wanted to write a more technical post as well, but that would require looking at all the details again at this point :/

[07:25:00.0000] <hsivonen>
jgraham: it's also possible that Gecko is in error

[07:25:01.0000] <zewt>
by the way, your "ARCHIV" link text is clipped :P

[07:26:00.0000] <zewt>
(on my system, anyway)

[07:26:01.0000] <hsivonen>
jgraham: what's affected is U+0000 handling and whether active formatting elements get reconstructed

[07:27:00.0000] <annevk>
your browser has been spit on :p

[07:27:01.0000] <jgraham>
hsivonen: Hmm, OK I will have a look in a bit

[07:27:02.0000] <zewt>
you mean it's been spi on

[07:28:00.0000] <zewt>
ah, looks like you're depending on a custom font, and I force fonts

[07:28:01.0000] <annevk>
that would fail yes

[07:43:00.0000] <annevk>
might be back later

[07:54:00.0000] <bga_>
can opera implement "Enable Video" in F12 and localStorage managment (like cookies managment) and per site proxy settings? :) plz

[09:00:00.0000] <chriseppstein>
I'll just leave this here: http://hslpicker.com/

[09:11:00.0000] <TabAtkins>
chriseppstein: Ooh, that's pretty.

[09:11:01.0000] <chriseppstein>
TabAtkins: :) That's Brandon. He did the design for http://beta.compass-style.org/ too

[09:12:00.0000] <chriseppstein>
he's great

[09:12:01.0000] <jgraham>
/me thinks it is kinda ugly tbh but was going to be too polite to say soâ¦

[09:12:02.0000] <TabAtkins>
I'm sorry that you're wrong, jgraham.  ^_^

[09:13:00.0000] <TabAtkins>
/me goes back to iterator homework.

[09:13:01.0000] <TabAtkins>
The standardization process never rests.

[09:13:02.0000] <jgraham>
TabAtkins: Dude, you put me in a bad mood all morning due to your preference for tabs rather than spaces

[09:13:03.0000] <jgraham>
You have no high ground here :p

[09:13:04.0000] <TabAtkins>
Um, dude, I'm right.

[09:14:00.0000] <TabAtkins>
(That said, my fingers are betraying me this morning, because I was composing code in a textarea last night and needed to use spaces.

[09:14:01.0000] <TabAtkins>
)

[09:14:02.0000] <jgraham>
(it's OK if I don't like the hsl thing, because the compass-style site is quite nice)

[09:14:03.0000] <zewt>
i'm swearing off whitespace arguments for a while for the sake of getting real things done :P

[09:15:00.0000] <chriseppstein>
jgraham: you don't have you use the garish tool.

[09:15:01.0000] <chriseppstein>
:P

[09:15:02.0000] <jgraham>
chriseppstein: :)

[09:15:03.0000] <Philip`>
TabAtkins is just suffering from nominative determinism and there's no need to get yourself worried by taking his concerns seriously

[09:15:04.0000] <Philip`>
Everyone else knows spaces are better

[09:16:00.0000] <chriseppstein>
If only there was a tool that could convert between them with a simple command *cough* vim *cough*

[09:16:01.0000] <chriseppstein>
/me runs out of the bikeshed

[09:17:00.0000] <jgraham>
chriseppstein: There is, emacs

[09:17:01.0000] <jgraham>
:p

[09:17:02.0000] <karlcow>
http://lists.w3.org/Archives/Public/www-archive/2011Mar/att-0001/microsoft-api-draft-final.html

[09:17:03.0000] <TabAtkins>
chriseppstein: If only there was a tool that could infer what indentation level is attempting to be used by people who sprinkle inconsistent amounts of spaces around their file.

[09:17:04.0000] <karlcow>
HTML Speech XG Speech API Proposal

[09:17:05.0000] <chriseppstein>
Isn't emacs self-aware yet?

[09:17:06.0000] <zewt>
remember when emacs was actually thought of as a large program? heh

[09:17:07.0000] <jgraham>
karlcow: You seem to have accidentally pasted a buncg or unrelated words and letters into iRC

[09:17:08.0000] <zewt>
now video drivers are larger D:

[09:18:00.0000] <karlcow>
?

[09:18:01.0000] <jgraham>
11:21 < karlcow> HTML Speech XG Speech API Proposal

[09:18:02.0000] <karlcow>
yep

[09:18:03.0000] <karlcow>
and [18:20]  <karlcow> http://lists.w3.org/Archives/Public/www-archive/2011Mar/att-0001/microsoft-api-draft-final.html

[09:19:00.0000] <jgraham>
karlcow: I prefer things where the title makes a modicum of sense to me

[09:19:01.0000] <karlcow>
it is TabAtkins who put his line in between mine ;) blame him :p

[09:19:02.0000] <karlcow>
> "This specification extends HTML to enable pages to incorporate speech recognition and synthesis."

[09:20:00.0000] <zewt>
HTMLSXGSAPIP

[09:20:01.0000] <karlcow>
I think zewt got it ;)

[09:20:02.0000] <zewt>
wait, should the abbreviations be abbreviated? HSXSAP

[09:21:00.0000] <karlcow>
Is it "speechable"?

[09:21:01.0000] <TabAtkins>
Ah, finally got my code back into a semblance of working, rather than just returning weird errors.

[09:21:02.0000] <zewt>
that's usually the part where the real work begins

[09:22:00.0000] <zewt>
finding the big breakages is easy; the rest, well...

[09:23:00.0000] <jgraham>
karlcow: so VoiceXML with s/X/HT/?

[09:23:01.0000] <karlcow>
jgraham: it seems. I'm discovering like you. It was posted on www-archive.

[09:24:00.0000] <karlcow>
by the W3C HTML Speech Incubator Group

[09:24:01.0000] <karlcow>
http://www.w3.org/2005/Incubator/htmlspeech/

[09:24:02.0000] <karlcow>
"determine the feasibility of integrating speech technology in HTML5 in a way that leverages the capabilities of both speech and HTML (e.g., DOM) to provide a high-quality, browser-independent speech/multimodal experience while avoiding unnecessary standards fragmentation or overlap. "

[09:24:03.0000] <TabAtkins>
zewt: It's harder when your code *was* working, until you changed a small bit of the API that, it turns out, several things were depending on.

[09:26:00.0000] <zewt>
aka "I never thought I'd see a resonance cascade, let alone create one"

[09:26:01.0000] <TabAtkins>
Haha, yup.

[09:28:00.0000] <TabAtkins>
In other news, I can't wait until rest args are everywhere.  Doing "func.apply(undefined, [].slice(arguments)" is painful when I know it could just be "func(...rest)".

[09:28:01.0000] <zewt>
worst is when it turns into a schrodinbug: you change it back, and everything remains broken

[09:31:00.0000] <matjas>
Should atob() and btoa() work inside Web Workers?

[09:31:01.0000] <TabAtkins>
Why not?

[09:31:02.0000] <matjas>
Should atob() and btoa() work inside Web Workers?

[09:31:03.0000] <TabAtkins>
They're just conversion functions.

[09:32:00.0000] <matjas>
Sorry for the double post, IRC client was acting up.

[09:32:01.0000] <matjas>
Yeah, then according to this guy thereâs a bug in WebKit: https://twitter.com/jonleighton/status/42638578408374272

[09:33:00.0000] <zewt>
web workers don't support lots and lots of things, which is a shame

[09:34:00.0000] <matjas>
zewt: Well itâs good to know itâs not that bad, theoretically  :)

[09:34:01.0000] <zewt>
unicode single quotes as apostrophes make me sad :(

[09:34:02.0000] <Ms2ger>
That's (hah) what they're (hah) for.

[09:36:00.0000] <zewt>
unicode says that, and I want to know who was on what drugs when they said that

[09:36:01.0000] <TabAtkins>
I want to know what drugs Knuth was on when he said that strings start with `` and end with ''.

[09:37:00.0000] <zewt>
heh, at least that's died out

[09:37:01.0000] <zewt>
mostly

[09:37:02.0000] <Ms2ger>
Not in TeX

[09:38:00.0000] <zewt>
didn't gnu tools used to do that in their output?

[09:38:01.0000] <zewt>
not sure

[09:38:02.0000] <zewt>
eg. gcc output

[09:39:00.0000] <MikeSmith>
TabAtkins: it is a sin to question the wisdom of Knuth

[09:40:00.0000] <MikeSmith>
anything that Knuth has ever done is axiomatically Right

[09:40:01.0000] <TabAtkins>
He pushed Fortress.  He's definitely not always right.  ^_^

[09:40:02.0000] <MikeSmith>
heh

[09:40:03.0000] <TabAtkins>
But I'll give him a pass on that, as he was on the CL committee.

[09:40:04.0000] <MikeSmith>
he was on drugs at the time

[09:40:05.0000] <MikeSmith>
that was his drug-experimentation time

[09:41:00.0000] <MikeSmith>
we all go through that

[09:41:01.0000] <MikeSmith>
I'm still in that phase actually

[09:41:02.0000] <zewt>
mental note: if I ever do anything that'll make me hated by future generations of programmers, do some drugs for a while so I can use it as an excuse later

[09:41:03.0000] <TabAtkins>
^_^

[09:41:04.0000] <MikeSmith>
zewt: do some drugs anyway

[09:41:05.0000] <TabAtkins>
zewt: If you're a programmer, you'll do horrible things every day.  Take drugs anyway.

[09:41:06.0000] <MikeSmith>
I get that sense that you don't do enough now

[09:41:07.0000] <MikeSmith>
do more

[09:42:00.0000] <Philip`>
TabAtkins: Without ``...'', how would you express text with correct curly quotes?

[09:42:01.0000] <TabAtkins>
With curly quotes.

[09:42:02.0000] <Philip`>
(given you can only express things in ASCII)

[09:42:03.0000] <TabAtkins>
Oh.  Remove that restriction, then use curly quotes.

[09:43:00.0000] <zewt>
fortunately, we live in the future now

[09:43:01.0000] <Philip`>
My keyboard doesn't have curly quote keys on it

[09:43:02.0000] <Philip`>
so I'd be a bit stuck

[09:43:03.0000] <Ms2ger>
Get a better keyboard

[09:43:04.0000] <karlcow>
MikeSmith: http://lists.w3.org/Archives/Public/www-validator/2005Sep/0052 related to Knuth ;)

[09:43:05.0000] <TabAtkins>
I am sympathetic to the ideas of (a) directly quotes, so you can actually nest strings, and (b) a difference between quotes and apostrophes, again so you can easily nest them.

[09:43:06.0000] <MikeSmith>
in the future we'll be able to do as much drugs as we want and not have consequences

[09:43:07.0000] <Ms2ger>
MikeSmith, in your case, the future is now ;)

[09:44:00.0000] <MikeSmith>
heh

[09:44:01.0000] <Philip`>
Maybe they should put tilt sensors in keyboards

[09:44:02.0000] <MikeSmith>
I am a pioneer

[09:44:03.0000] <Philip`>
so you can tilt it one way then type "

[09:44:04.0000] <MikeSmith>
I am walking the walk

[09:44:05.0000] <Philip`>
and get a curly quote in one direction

[09:44:06.0000] <MikeSmith>
leading by example

[09:44:07.0000] <Philip`>
and tilt the other way to get the other quote

[09:44:08.0000] <TabAtkins>
karlcow: Um, is that Knuth or Maggie?  The From and the sig conflict.

[09:44:09.0000] <zewt>
why not just put one on your head; the quote hat

[09:44:10.0000] <zewt>
then you can just bob your head back and forth as you type

[09:45:00.0000] <zewt>
bonus: entertaining for others to watch

[09:45:01.0000] <karlcow>
TabAtkins: It is Knuth sent by his admin assistant

[09:45:02.0000] <Philip`>
TabAtkins: Knuth doesn't have an email address

[09:45:03.0000] <TabAtkins>
Ah, kk.  That's awesome.

[09:45:04.0000] <MikeSmith>
karlcow: é¢ç½ã

[09:45:05.0000] <Philip`>
(http://www-cs-faculty.stanford.edu/~uno/email.html)

[09:45:06.0000] <MikeSmith>
I really should have my admin assistants to more workâ¦ it's not clear to me now how they are spending their current working hours

[09:46:00.0000] <TabAtkins>
MikeSmith: Porn.

[09:46:01.0000] <TabAtkins>
Obviously.

[09:46:02.0000] <MikeSmith>
heh

[09:46:03.0000] <zewt>
i giggled at "still using a doctype he learned from a book years ago"

[09:46:04.0000] <zewt>
updating to use current standards? NEVER

[09:46:05.0000] <MikeSmith>
TabAtkins: well, again, I guess I'm leading by example

[09:47:00.0000] <TabAtkins>
zewt: A bit later he looks for another doctype to use and says "Version 2.0 seemed promising; but... it doesn't know the bgcolor and text color attributes on <body>"

[09:47:01.0000] <deane>
MikeSmith: What do you mean by "polygot tweeter"

[09:49:00.0000] <MikeSmith>
deane: for a while I didn't tweet in English

[09:49:01.0000] <MikeSmith>
I tweeted only in languages that I don't actually speak

[09:49:02.0000] <Ms2ger>
/me thought it was someone whose tweets could be parsed as HTML and XML

[09:50:00.0000] <MikeSmith>
 deane: but people who followed me seemed to not have liked that so muchâ¦ they were scared by it and I lost a lot of followers

[09:50:01.0000] <MikeSmith>
Ms2ger: :)

[09:50:02.0000] <zewt>
twitter.com -> ãã¼ãã±ã­ã§.co.jp?

[09:51:00.0000] <MikeSmith>
deane: you in Auckland? did you meet any of the SVG WG participants? they're all there now I think

[09:52:00.0000] <MikeSmith>
zewt: no clue

[09:52:01.0000] <MikeSmith>
never heard of that domain before

[09:52:02.0000] <zewt>
ignore the dumb jokes. heh

[09:52:03.0000] <zewt>
(in my case, a redundant phrase)

[09:53:00.0000] <MikeSmith>
deane: if you understand nothing else about me after all the time we have spent together I hope you can understand my desire to keep people confused

[09:54:00.0000] <MikeSmith>
clarity is to be avoided whenever possible

[09:54:01.0000] <MikeSmith>
that's a quote from Albert Einstein

[09:55:00.0000] <deane>
MikeSmith: sorry, a bit behind with the news.

[09:55:01.0000] <TabAtkins>
Eschew obfuscation, weaponize confusion.

[09:55:02.0000] <MikeSmith>
heh

[09:55:03.0000] <MikeSmith>
TabAtkins: you continue to have a way with words

[09:55:04.0000] <MikeSmith>
write more poetry

[09:55:05.0000] <Ms2ger>
MikeSmith, I find your reference to Einstein confusing

[09:55:06.0000] <MikeSmith>
heh

[09:57:00.0000] <MikeSmith>
TabAtkins: gsnedders can give you some guidance on writing love poems

[09:58:00.0000] <zewt>
: |

[10:00:00.0000] <MikeSmith>
geez, it appears that I may have actually done my job correctly for the first time in quite a while

[10:00:01.0000] <MikeSmith>
http://www.w3.org/TR/notifications/

[10:01:00.0000] <TabAtkins>
Augh, I'm in love with seeing artists progress over the years: http://s3.amazonaws.com/data.tumblr.com/tumblr_lg87qtM1KG1qcbajko1_1280.jpg?AWSAccessKeyId=0RYTHV9YYQ4W5Q3HQMG2&Expires=1299088987&Signature=pDFn68bpvnhhNoPWXjWH6phk9mw%3D

[10:04:00.0000] <Ms2ger>
MikeSmith++

[10:06:00.0000] <jgraham>
TabAtkins: The main progression seems to be from more -> fewer clothes

[10:07:00.0000] <jgraham>
(with deviations)

[10:09:00.0000] <TabAtkins>
jgraham: Hah, that seems fair.

[10:10:00.0000] <TabAtkins>
How do I override a getter on an object?  I obviously can't just set it.

[10:10:01.0000] <jgraham>
TabAtkins: With ES3+extensions __defineGetter__

[10:10:02.0000] <jgraham>
With ES5 something else that I forget the name of right now

[10:11:00.0000] <jgraham>
defineOwnProperty

[10:11:01.0000] <TabAtkins>
ES3 works for me.  Let's try it out...

[10:12:00.0000] <jgraham>
Aslo, was that timeline from somewhere?

[10:13:00.0000] <TabAtkins>
jgraham: Dresden Codak

[10:14:00.0000] <TabAtkins>
From his tumblog, specifically.

[10:35:00.0000] <TabAtkins>
Our next exhibit: an hour of debugging caused by me forgetting the difference between "[].slice(arguments)" and "[].slice.call(arguments)". >_<

[10:36:00.0000] <TabAtkins>
/me hates 'this' really bad.

[10:36:01.0000] <zewt>
one of javascript's more painful warts

[10:37:00.0000] <TabAtkins>
Unrelated: holy crap, the fact that chrome now syncs *all* my info across all my machines is surprising every time.

[10:37:01.0000] <AryehGregor>
"All" meaning what?

[10:37:02.0000] <TabAtkins>
Specifically, when I find it autocompleting on my work machine, based on searches I made yesterday at home.

[10:51:00.0000] <Hixie>
hsivonen: it was not my intent to change character handling in foreign content; how did it change?

[10:59:00.0000] <jgraham>
The difference between .slice and .slice.call is quite annoying

[11:00:00.0000] <jgraham>
I get that wrong annoyingly often

[11:00:01.0000] <jgraham>
i.e. more than never

[11:11:00.0000] <Hixie>
othermaciej: i'm a little confused wit issue-9... what happens to its CPs if we agree to close it?

[11:12:00.0000] <othermaciej>
Hixie: they will not be considered adopted

[11:12:01.0000] <Hixie>
k

[11:12:02.0000] <othermaciej>
Hixie: if they were to be adopted, they'd likely have to be rewritten against the current spec baseline, which includes most of their functionality

[11:12:03.0000] <Hixie>
ah ok

[11:13:00.0000] <othermaciej>
Hixie: my understanding is that no one particularly cares about writing up that delta, or applying it t the spec

[11:13:01.0000] <othermaciej>
but if anyone does, they can object

[11:13:02.0000] <Hixie>
makes sense

[11:13:03.0000] <Hixie>
thanks

[11:26:00.0000] <TabAtkins>
Why has no programming language yet invented nestable comments?  This is ridiculous.

[11:26:01.0000] <wolfman2000>
TabAtkins: /* You mean /* like this */ example? */

[11:26:02.0000] <TabAtkins>
Yes.

[11:27:00.0000] <wolfman2000>
...I have no answer.

[11:27:01.0000] <TabAtkins>
I had a function which took arbitrary arguments, which I indicated in the definition like "function foo(/* args */)", but then I can't comment out a block of code containing that definition.

[11:27:02.0000] <bfrohs>
Probably has something to do with not wanting to worry about escaping inside of comments

[11:28:00.0000] <TabAtkins>
The only reasons I can think of are (1) didn't want to disallow putting /* in your comments, which is stupid, because we disallow putting */ in them

[11:28:01.0000] <othermaciej>
TabAtkins: in the C family of languages, you can achieve nest able comments with #if 0 / #endif

[11:28:02.0000] <TabAtkins>
Or (b) were lazy and didn't want to search inside a comment for more comment tokens and tracking a stack.

[11:28:03.0000] <zewt>
i often do if(0) { ... } to comment out sections, too (which means they're still parsed, but handy for quick edits)

[11:29:00.0000] <TabAtkins>
othermaciej: That's a nasty macro hack, but it works, yeah.

[11:29:01.0000] <TabAtkins>
zewt: Yeah, I guess.  It's not obvious that the closing brace is a comment-closer, though.  Also, I often comment chunks of code that arent' syntactically valid.

[11:29:02.0000] <zewt>
usually i just do it when I want to get code out of the way quickly

[11:29:03.0000] <TabAtkins>
So I guess I'm just going to be quietly frustrated.

[11:30:00.0000] <hober>
Lots of programming languages have nestable comments

[11:30:01.0000] <othermaciej>
TabAtkins: it doesn't involve macros at all, it's a preprocessor hack

[11:30:02.0000] <zewt>
i thought Lua had something for them, like --[[[ ]]] or something, but I guess not

[11:30:03.0000] <othermaciej>
C++-style // comments are also effectively nestable, though it only takes one end-of-line to terminate multiple levels

[11:30:04.0000] <Philip`>
TabAtkins: OCaml has nestable comments

[11:30:05.0000] <TabAtkins>
othermaciej: Argh, yeah.  I even wrote "preprocessor" and then removed it.

[11:30:06.0000] <hober>
e.g. #| ... |# in Common Lisp

[11:30:07.0000] <othermaciej>
This is // a comment that contains // a comment

[11:31:00.0000] <Philip`>
(* comment (* comment *) comment *) not comment

[11:31:01.0000] <TabAtkins>
hober: Are CL's nestable?

[11:31:02.0000] <hober>
TabAtkins: yes.

[11:31:03.0000] <TabAtkins>
Hm, didn't realize that.  I use them rarely enough that I haven't run into it.

[11:31:04.0000] <othermaciej>
well of course it's nestable in Lisp

[11:31:05.0000] <othermaciej>
Lisp is all about nesting

[11:31:06.0000] <zewt>
(* â¿ *)

[11:31:07.0000] <hober>
IIRC Pascal's comments were nestable too. {* ... *}? I'm not sure if that was what it was

[11:31:08.0000] <TabAtkins>
Heh, yeah.

[11:35:00.0000] <zewt>
how is it Unicode has PILE OF POO, yet it doesn't have ... an octagon

[11:35:01.0000] <zewt>
i can see they have their priorities straight

[11:36:00.0000] <bfrohs>
zewt: The former is a better representation of IE6

[11:38:00.0000] <hober>
zewt: I believe we have the Japanese to blame

[11:38:01.0000] <AryehGregor>
Async stuff in JS makes my head hurt.  I can't figure out how you're supposed to do synchronization, like only do some particular thing when an event handler is finished.  Just run it from the event handler?

[11:38:02.0000] <zewt>
yep

[11:38:03.0000] <AryehGregor>
Then if you do that repeatedly, you get an arbitrarily deep stack.

[11:38:04.0000] <zewt>
event handlers run from event handlers don't run under the same stack

[11:38:05.0000] <AryehGregor>
Ah, of course.

[11:38:06.0000] <AryehGregor>
That makes sense.

[11:38:07.0000] <AryehGregor>
/me tries that

[11:53:00.0000] <zewt>
okay, gmail is officially weird

[11:54:00.0000] <zewt>
it breaks mail subject displays into separate spans at seemingly random spots, so when I double-click to select words in FF the word breaking stops mid-word

[12:18:00.0000] <david_carlisle>
TabAtkins:  (*xpath  (*comments*) *)

[12:19:00.0000] <david_carlisle>
oops (: :) not *

[12:26:00.0000] <TabAtkins>
Okay, so it looks like it was just that C got comments wrong, and then JS copied C.  Dammit.

[12:28:00.0000] <AryehGregor>
Some C compilers allow nesting comments, don't they?

[12:28:01.0000] <zewt>
nonstandard

[12:28:02.0000] <Ms2ger>
And not copied to JS

[12:28:03.0000] <zewt>
(of course, plenty of nonstandard things are supported widely in C compilers, but that's not a common one)

[12:29:00.0000] <AryehGregor>
Oh well.

[12:30:00.0000] <hober>
interesting feedback on the outline algorithm & the sectioning elements: http://www.456bereastreet.com/archive/201103/html5_sectioning_elements_headings_and_document_outlines/

[12:30:01.0000] <Hixie>
othermaciej: i've used programming languages whose parsers have supported nested comments

[12:30:02.0000] <Hixie>
er

[12:31:00.0000] <Hixie>
s/ othermaciej / TabAtkins /

[12:31:01.0000] <Hixie>
man i do that all the time

[12:31:02.0000] <TabAtkins>
What, talk to othermaciej all the tiem?

[12:32:00.0000] <Hixie>
use his name instead of whoever i actually meant to talk to, because of seeing him as the last person to have spoken to the person i meant to speak to on the topic

[12:32:01.0000] <Hixie>
http://junkyard.damowmow.com/454 doesn't do what i expect in any browser

[12:32:02.0000] <Hixie>
(i don't get any alerts)

[12:32:03.0000] <Hixie>
am i doing it wrong?

[12:32:04.0000] <Hixie>
(trying to test step 4 of the "prepare a script" algorithm)

[12:33:00.0000] <AryehGregor>
Do browsers not support document.innerHTML?

[12:33:01.0000] <Hixie>
i think i made that up

[12:34:00.0000] <Hixie>
ohhh i get it

[12:35:00.0000] <Hixie>
wait no i don't

[12:35:01.0000] <Hixie>
wtf

[12:35:02.0000] <Ms2ger>
Well, yes, document.innerHTML is a quick way to failure

[12:38:00.0000] <zewt>
funky code--did you mean to be shuffling the nodes around as you iterate over them?

[12:38:01.0000] <Ms2ger>
/me thinks that was the point

[12:39:00.0000] <Hixie>
zewt: yeah

[12:39:01.0000] <Hixie>
zewt: oh, wait

[12:39:02.0000] <Hixie>
zewt: good point

[12:39:03.0000] <Hixie>
zewt: i forgot that the list was live

[12:39:04.0000] <zewt>
so x[0] operates on the document.write, x[1] operates on the blank script (skipping over the other <script>)

[12:39:05.0000] <Hixie>
zewt: thanks!

[12:39:06.0000] <AryehGregor>
Ms2ger, what?

[12:40:00.0000] <Ms2ger>
Hmm?

[12:40:01.0000] <AryehGregor>
What about document.innerHTML?

[12:40:02.0000] <AryehGregor>
/me has only found two trivial IE bugs in deleteContents() so far, needs more tests

[12:40:03.0000] <Ms2ger>
Currently fiction

[12:40:04.0000] <AryehGregor>
Oh, and Opera doesn't run the tests correctly at all.

[12:40:05.0000] <AryehGregor>
Oh.

[12:40:06.0000] <zewt>
hmm, though it's still odd that the script isn't executed

[12:40:07.0000] <AryehGregor>
Opera doesn't seem to be firing a load event at my iframe when I change the src.

[12:41:00.0000] <AryehGregor>
That kind of totally breaks my testing setup.

[12:41:01.0000] <Ms2ger>
Uh

[12:41:02.0000] <AryehGregor>
/me waits to be told he's an idiot

[12:41:03.0000] <Ms2ger>
That sounds broken

[12:41:04.0000] <AryehGregor>
Oh, okay, so I'm not just clueless.

[12:41:05.0000] <AryehGregor>
I dunno, see for yourself: http://aryeh.name/spec/dom-range/test/Range-deleteContents.html

[12:42:00.0000] <AryehGregor>
Works in all other browsers.

[12:42:01.0000] <zewt>
ah yeah I see what's happening, when it's shuffling around the list, it ends up only actually modifying script nodes that have already executed, which does nothing

[12:42:02.0000] <AryehGregor>
If I add an alert() to the onload handler, it only fires the first time the src is set for that iframe.

[12:42:03.0000] <Ms2ger>
The 1 complete, 0 remain... 2 complete, 0 remain... 3 complete, 0 remain... is pretty silly

[12:42:04.0000] <zewt>
be nice if modifying an "already started" script would raise an exception or at least warn about it

[12:42:05.0000] <AryehGregor>
Don't look at me, not my test framework.

[12:43:00.0000] <Ms2ger>
I know right

[12:43:01.0000] <Ms2ger>
I'm not sure if using strict mode in tests is a good idea, fwiw

[12:43:02.0000] <AryehGregor>
I thought you were the one who added that to my tests to begin with when you committed them.

[12:43:03.0000] <Ms2ger>
I did?

[12:44:00.0000] <Ms2ger>
I certainly shouldn't have

[12:44:01.0000] <Ms2ger>
 actual.onload = ""; seems strange

[12:45:00.0000] <AryehGregor>
I did that because I'm only changing the hash, so it doesn't fire a load event otherwise.

[12:45:01.0000] <AryehGregor>
I could reload() it also, maybe?

[12:45:02.0000] <Ms2ger>
But why set a Function IDL attribute to a string?

[12:46:00.0000] <AryehGregor>
It accepts strings too, no?  As the function body?

[12:46:01.0000] <AryehGregor>
I could set it to the empty function, but that's more verbose.

[12:46:02.0000] <Ms2ger>
Just the content attribute, or am I clueless here?

[12:46:03.0000] <AryehGregor>
I dunno.

[12:47:00.0000] <AryehGregor>
/me tests

[12:47:01.0000] <zewt>
actual.onload = null?

[12:47:02.0000] <AryehGregor>
Seems so.

[12:47:03.0000] <AryehGregor>
Yeah, that makes more sense . . .

[12:49:00.0000] <AryehGregor>
Changed.

[12:50:00.0000] <AryehGregor>
Ms2ger, also: https://bitbucket.org/ms2ger/dom-range/src/925ad3b285f9/test/selection-extend.html

[12:50:01.0000] <AryehGregor>
"use strict" was not in the patch I submitted, I don't think . . .

[12:50:02.0000] <AryehGregor>
Although maybe I'm hallucinating.

[12:50:03.0000] <AryehGregor>
Anyway, it will help me catch bugs in my code as I write it.  It can always be removed later.

[12:51:00.0000] <Ms2ger>
Yeah, that's fine

[12:52:00.0000] <AryehGregor>
I'm very disappointed.

[12:52:01.0000] <AryehGregor>
I wasn't able to find any bugs at all, except some trivial ones in IE9 (involving whether text nodes are split or modified in-place, and whether empty text nodes are removed).

[12:52:02.0000] <AryehGregor>
Does anyone have any more tests to suggest?

[12:53:00.0000] <AryehGregor>
I've tested about every type of Range I can think of, and they all work.  :(

[12:54:00.0000] <Ms2ger>
s/:(/:)/

[12:54:01.0000] <AryehGregor>
I guess so.  :)

[12:57:00.0000] <zewt>
"curse you browsers for not having enough bugs *fist shake*"

[12:57:01.0000] <AryehGregor>
I generally assume that if testing doesn't find inconsistencies in some nontrivial feature, the tests aren't good enough.

[12:58:00.0000] <gsnedders>
AryehGregor: Stuff browsers do differently with Range? Looked through bug trackers?

[12:58:01.0000] <AryehGregor>
gsnedders, what?

[12:59:00.0000] <gsnedders>
AryehGregor: What are you trying to test?

[12:59:01.0000] <TabAtkins>
Hm, is there a way to return an object with an error, so that I can look through it in the inspector?

[12:59:02.0000] <AryehGregor>
I'm talking specifically about Range.deleteContents() here.

[12:59:03.0000] <bfrohs>
AryehGregor: ask on Twitter--I'm sure there's someone, somewhere that has an edge case that's buggy in browsers

[12:59:04.0000] <AryehGregor>
Also, maybe Opera is totally broken, I don't know, because my tests don't run for some reason.

[12:59:05.0000] <AryehGregor>
http://aryeh.name/spec/dom-range/test/Range-deleteContents.html

[12:59:06.0000] <AryehGregor>
It only runs the first two, then it times out.

[13:00:00.0000] <zewt>
i get a fail and timeout in FF3.6, FWIW

[13:01:00.0000] <AryehGregor>
Interesting.

[13:01:01.0000] <AryehGregor>
Firefox 4b11 works fine for me.

[13:01:02.0000] <gsnedders>
AryehGregor: tbh I'd be surprised if there was much different with deleteContents

[13:01:03.0000] <zewt>
function () { range.deleteContents(); } threw with code INVALID_STATE_ERR (11) expected INVALID_STATE_ERR (11)

[13:01:04.0000] <AryehGregor>
Oh, that.

[13:01:05.0000] <AryehGregor>
That's a known bug that affects every single assert_throws() in this test framework.

[13:01:06.0000] <AryehGregor>
Ms2ger filed it somewhere.

[13:01:07.0000] <AryehGregor>
It can get annoying, but I'm not counting it for this purpose, since it's not specific to deleteContents().

[13:02:00.0000] <zewt>
second one times out

[13:02:01.0000] <Ms2ger>
One not run? What's that about?

[13:03:00.0000] <zewt>
Range 0 [paras[0].firstChild, 0, paras[0].firstChild, 0] Test timed out

[13:03:01.0000] <Ms2ger>
WFM

[13:03:02.0000] <bfrohs>
AryehGregor: same results as zewt in ff3.6 on ubuntu

[13:04:00.0000] <zewt>
(XP64)

[13:04:01.0000] <AryehGregor>
3.6 doesn't really matter, it's only the most current browsers that really matter for tests.

[13:04:02.0000] <AryehGregor>
Opera is more of an issue.

[13:05:00.0000] <AryehGregor>
Also, if I'm doing something fragile or whatever and there's a better way to do it, that would be nice to know.

[13:05:01.0000] <AryehGregor>
But it seems fairly straightforward to me.

[13:06:00.0000] <Ms2ger>
Hmm, I got timeouts for 5 and 42

[13:06:01.0000] <AryehGregor>
In what browser?

[13:07:00.0000] <Ms2ger>
Fx4

[13:07:01.0000] <AryehGregor>
Annoying.

[13:07:02.0000] <AryehGregor>
There's probably a better way to write the tests.

[13:07:03.0000] <AryehGregor>
But I'm not sure how, given the need to reset every time.

[13:08:00.0000] <bfrohs>
No timeouts for me in ff4 on ubuntu

[13:13:00.0000] <AryehGregor>
Okay, specced: http://html5.org/specs/dom-range.html#dom-range-deletecontents

[13:13:01.0000] <AryehGregor>
I could go back to execCommand(), but I think I'll do some more Range stuff first.

[13:13:02.0000] <Ms2ger>
No objections here

[13:14:00.0000] <AryehGregor>
/me discovers http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html

[13:14:01.0000] <AryehGregor>
Why did I not know about that before?

[13:14:02.0000] <Ms2ger>
/me was wondering that

[13:15:00.0000] <AryehGregor>
Was wondering what?

[13:15:01.0000] <Ms2ger>
That you just discovered it

[13:15:02.0000] <AryehGregor>
Oh, hey, this even attempts to define what mutation does.

[13:15:03.0000] <Hixie>
wait you didn't know about the existing spec you've been rewriting? :-)

[13:15:04.0000] <AryehGregor>
No, nobody told me.

[13:15:05.0000] <Hixie>
i assumed you knew!

[13:15:06.0000] <Hixie>
sorry dude

[13:15:07.0000] <AryehGregor>
Does the current DOM Range draft mention it anywhere?

[13:16:00.0000] <Hixie>
dunno

[13:16:01.0000] <Ms2ger>
Probably not

[13:16:02.0000] <AryehGregor>
Actually, there's some nice terminology here.  Let me read this.

[13:21:00.0000] <AryehGregor>
This isn't a bad spec at all, although it's not quite as precise as we do things these days.

[13:22:00.0000] <AryehGregor>
For instance, it specifically calls out the two corner cases that IE gets wrong.

[13:22:01.0000] <zewt>
from reading current specs, it seems like the major shift lately has been from descriptive specs to more or less pseudocode specs

[13:22:02.0000] <AryehGregor>
Yes, definitely.

[13:23:00.0000] <AryehGregor>
Makes them harder to read, but it's much easier to be precise that way.

[13:23:01.0000] <Ms2ger>
AryehGregor, http://www.w3.org/DOM/DOMTR, fyi :)

[13:23:02.0000] <zewt>
i find them easier to read, myself

[13:23:03.0000] <AryehGregor>
Ms2ger, :)

[13:23:04.0000] <AryehGregor>
Hmm, maybe.

[13:24:00.0000] <TabAtkins>
I definitely try to write my specs in pseudocode style.  I employ prose in the non-normative description of properties to explain what they do without reference to algorithms, but describing the algorithms descriptively is pretty clearly a failure.

[13:24:01.0000] <AryehGregor>
I prefer them myself.

[13:24:02.0000] <zewt>
in the same sense that it can be easier to understand an algorithm by reading code that does it rather than a research paper explaining it

[13:24:03.0000] <AryehGregor>
Ms2ger, I actually think I did see the old DOM Range spec before, I just never read it . . .

[13:24:04.0000] <zewt>
(provided it's well-written code, of course)

[13:24:05.0000] <AryehGregor>
Or only long ago.

[13:25:00.0000] <Ms2ger>
Just wanted to make sure you didn't miss any other specs ;)

[13:25:01.0000] <AryehGregor>
:P

[13:27:00.0000] <jgraham>
Gah, you go away for one moment and people start discussing things you need to pay attention to

[13:28:00.0000] <Ms2ger>
sh pipes?

[13:28:01.0000] <AryehGregor>
Hahahaha.

[13:28:02.0000] <jgraham>
AryehGregor: The weird assert_throws error should, I think, be fixed in a recent testharness.js

[13:28:03.0000] <zewt>
Ms2ger: i saw that and just backed away slowly

[13:28:04.0000] <AryehGregor>
jgraham, you mean the one where Firefox fails every time?

[13:29:00.0000] <jgraham>
AryehGregor: Yes, the one with expected foo, got foo

[13:29:01.0000] <Ms2ger>
AryehGregor, if you just pull the repo, it'll be fixed ;)

[13:29:02.0000] <AryehGregor>
zewt, I would have, but just wanted to make it clear how spectacularly insane it was in case any innocent bystanders got misled.

[13:29:03.0000] <AryehGregor>
Ms2ger, which, dom-range?

[13:29:04.0000] <AryehGregor>
I pulled just now before merging.

[13:29:05.0000] <Ms2ger>
Yeah

[13:29:06.0000] <AryehGregor>
Oh, yeah, it works.

[13:29:07.0000] <AryehGregor>
Yay.

[13:29:08.0000] <jgraham>
What are you doing with onload that breaks Opera? That works for sure in general so you must be doing something special

[13:30:00.0000] <AryehGregor>
jgraham, https://bitbucket.org/ms2ger/dom-range/src/a6993c2d45e1/test/Range-deleteContents.html

[13:30:01.0000] <AryehGregor>
Live version: http://aryeh.name/spec/dom-range/test/Range-deleteContents.html

[13:31:00.0000] <AryehGregor>
I'm just repeatedly setting the onload and src of an iframe.

[13:31:01.0000] <AryehGregor>
Only the first onload I set this way seems to fire.

[13:34:00.0000] <jgraham>
AryehGregor: What happens if you put about:blank rather than the empty string?

[13:35:00.0000] <AryehGregor>
jgraham, fails in a different way, it looks like . . .

[13:35:01.0000] <AryehGregor>
(I've made the change, you can try it out)

[13:35:02.0000] <jgraham>
I get 26 pass

[13:35:03.0000] <jgraham>
What should I get?

[13:35:04.0000] <AryehGregor>
Hmm.

[13:35:05.0000] <AryehGregor>
I get 3 pass.

[13:36:00.0000] <AryehGregor>
You should get . . . hey, now it fails in Firefox too.

[13:36:01.0000] <AryehGregor>
One sec.

[13:36:02.0000] <AryehGregor>
I think the new harness broke the tests.

[13:36:03.0000] <AryehGregor>
It should be like 50 or so passes.

[13:36:04.0000] <jgraham>
Hmm

[13:36:05.0000] <AryehGregor>
And it was before the new harness.

[13:36:06.0000] <jgraham>
Could have happened

[13:37:00.0000] <jgraham>
/me might be too tired to helpfully debug now

[13:37:01.0000] <jgraham>
Just out of interest, is setting .src to about:blank magic?

[13:37:02.0000] <jgraham>
Specifically is it sync?

[13:37:03.0000] <jgraham>
Otherwise there is a race condition I think?

[13:38:00.0000] <jgraham>
(you set src then set onload)

[13:38:01.0000] <AryehGregor>
Oh.

[13:38:02.0000] <AryehGregor>
Didn't think of that.

[13:39:00.0000] <AryehGregor>
Maybe there's a better way to do this.

[13:39:01.0000] <AryehGregor>
Calling iframe.contentWindow.location.reload() should fire a load event, right?

[13:40:00.0000] <zewt>
havn't squinted too hard at this, but could you just add a dummy parameter to the URL to force a reload?

[13:40:01.0000] <zewt>
?role=actual&x=1

[13:41:00.0000] <zewt>
guess that would also make it not cache, which you probably don't want

[13:41:01.0000] <AryehGregor>
Oh, right.

[13:41:02.0000] <AryehGregor>
That would slow down the tests needlessly.

[13:41:03.0000] <zewt>
or, just discard the whole iframe and create a new one manually each time

[13:41:04.0000] <zewt>
(don't know if that's compatible with the code)

[13:42:00.0000] <AryehGregor>
It would work.

[13:42:01.0000] <AryehGregor>
Let me try reload() first.

[13:43:00.0000] <AryehGregor>
Oh, wait, that's still a race condition.

[13:43:01.0000] <AryehGregor>
Can I just use onhashchange instead, maybe?

[13:43:02.0000] <AryehGregor>
/me tries that

[13:43:03.0000] <jgraham>
AryehGregor: I haven't read everything carefully but using a query parameter rather than a hash seems like it would save lots of effort

[13:43:04.0000] <AryehGregor>
Hmm.

[13:43:05.0000] <AryehGregor>
Maybe that too.

[13:43:06.0000] <zewt>
would need to use both, i think, since the first time would be onload

[13:44:00.0000] <AryehGregor>
Not if it starts out at the given URL.

[13:45:00.0000] <AryehGregor>
Is there some nice way to access location.search as an associative array, or do I get to write my own?

[13:45:01.0000] <AryehGregor>
(not that it's very hard)

[13:45:02.0000] <Ms2ger>
You get to write your own

[13:45:03.0000] <AryehGregor>
Yay!

[13:46:00.0000] <jgraham>
AryehGregor: Also, you might want to take advantage of the fact that test objects now start their timeout the first time their .step is called

[13:46:01.0000] <AryehGregor>
What does that mean for my purposes?

[13:46:02.0000] <jgraham>
So you can generate all the test objects upfront (so the harness knows how many there should be)

[13:46:03.0000] <zewt>
jgraham: but caching

[13:46:04.0000] <jgraham>
zewt: Screw caching

[13:47:00.0000] <AryehGregor>
Hmm, okay.

[13:47:01.0000] <jgraham>
AryehGregor: The advantage is that when things go wrong it is more obvious what happened

[13:48:00.0000] <jgraham>
Rather than just getting teh wrong number of results

[13:48:01.0000] <AryehGregor>
Okay.

[13:48:02.0000] <zewt>
the difference between 50 tests taking a second to run or 30 seconds is the difference between people running the tests often and not

[13:49:00.0000] <jgraham>
zewt: The difference won't be that large in this case

[13:49:01.0000] <jgraham>
and if it is there are plenty of ways to work around it

[13:49:02.0000] <jgraham>
e.g. make each test a data:uri and the script a cacheable external resource

[13:51:00.0000] <AryehGregor>
Does IE9 support data: URIs here?

[13:51:01.0000] <jgraham>
I think so

[13:51:02.0000] <jgraham>
Why wouldn't it?

[13:51:03.0000] <zewt>
FYI, it's already revalidating for every test (need to tweak cache headers to fix that)

[13:52:00.0000] <Ms2ger>
Because it used to allow them only where needed to pass acid2

[13:52:01.0000] <jgraham>
Well if microsoft fail every test duw to making a retarded implementation of data: I have very little sympathy

[13:52:02.0000] <jgraham>
Since they knowing made it just good enough for PR

[13:53:00.0000] <jgraham>
*knowingly

[13:53:01.0000] <zewt>
AryehGregor: odd: even if I just set src and onload, it reloads the document every time and works fine--not sure off-hand why that doesn't trigger a hashchange like you said

[13:53:02.0000] <zewt>
oh, because it's changing the src of an iframe--not the same as changing document.location

[13:53:03.0000] <zewt>
(i think--I don't use iframes often)

[13:55:00.0000] <AryehGregor>
How do I discard my changes to a particular file, in hg?

[13:55:01.0000] <AryehGregor>
Like git checkout FILENAME.

[13:55:02.0000] <AryehGregor>
Or (IIRC) svn up FILENAME.

[13:56:00.0000] <Ms2ger>
hg up -C?

[13:56:01.0000] <AryehGregor>
Hmm, doesn't matter, I didn't change any other files anyway.

[13:56:02.0000] <Ms2ger>
But check help first

[13:56:03.0000] <AryehGregor>
Ms2ger, that resets all files, not just the given ones.

[13:56:04.0000] <AryehGregor>
It doesn't seem to take filename args.

[13:56:05.0000] <AryehGregor>
Ah, hg revert.

[13:59:00.0000] <zewt>
ah: changing the hash in the src of an iframe seems to always trigger onload in FF4, but not Chrome

[13:59:01.0000] <AryehGregor>
What does the spec say?

[14:00:00.0000] <zewt>
havn't looked

[14:01:00.0000] <Ms2ger>
/me whines about the <banner>, <body> and <wrapper> threads

[14:06:00.0000] <zewt>
AryehGregor: sanest way seems to be to just create new iframes each time

[14:06:01.0000] <AryehGregor>
Okay, now I'm getting racy behavior all over the place, but I can't see anything I do that's a race condition.

[14:07:00.0000] <AryehGregor>
Let me try creating new iframes each time.

[14:07:01.0000] <zewt>
i'm doing that, it's working in FF4 but not Chrome

[14:07:02.0000] <zewt>
don't know the framework to know why

[14:07:03.0000] <zewt>
http://pastebin.com/NNKbjRNb

[14:08:00.0000] <zewt>
the tests all run and pass in chrome, but only the first two show up

[14:11:00.0000] <AryehGregor>
I'm still getting mysterious racy behavior.

[14:11:01.0000] <AryehGregor>
Works in Chrome, although I get two new failures.

[14:12:00.0000] <AryehGregor>
Firefox skips a random number of tests at the end.

[14:12:01.0000] <AryehGregor>
Opera has gone into an infinite loop or something.

[14:12:02.0000] <AryehGregor>
IE also skips a random number at the end.

[14:13:00.0000] <AryehGregor>
jgraham, are you sure these aren't timing out prematurely?

[14:14:00.0000] <Ms2ger>
Sounds likely

[14:17:00.0000] <Ms2ger>
You know you're getting INDEX_SIZE_ERRs in Fx?

[14:18:00.0000] <AryehGregor>
For which tests, deleteContents()?

[14:18:01.0000] <Ms2ger>
Yeah

[14:19:00.0000] <AryehGregor>
Hmm.

[14:19:01.0000] <AryehGregor>
I'll look at that tomorrow, I guess.

[14:19:02.0000] <Ms2ger>
And extending the timeout gives me 52 finished tests

[14:19:03.0000] <AryehGregor>
Really?

[14:19:04.0000] <AryehGregor>
How did you extend it?

[14:19:05.0000] <AryehGregor>
In setup() or what?

[14:19:06.0000] <Ms2ger>
Firebug :)

[14:19:07.0000] <AryehGregor>
Um, okay.

[14:20:00.0000] <Ms2ger>
But yes, setup would be the right way, I think

[14:22:00.0000] <AryehGregor>
Hmm, that seems to help.

[14:22:01.0000] <AryehGregor>
Chrome is now weird, though.

[14:22:02.0000] <zewt>
seems like I'm only getting 2 results in Opera/Chrome, because as soon as the second test completes, tests.phase == COMPLETE and no further tests are reported?

[14:22:03.0000] <AryehGregor>
Oh, it now semi-runs in Opera.

[14:23:00.0000] <AryehGregor>
I'm changing the tests live, by the way, so if anyone else is trying to run them, you're probably getting confusing results.

[14:24:00.0000] <AryehGregor>
Okay, now I've made my last change for the day (probably), so it's safe to experiment on the live copies.

[14:24:01.0000] <AryehGregor>
Firefox and IE seem to work now, Chrome and Opera randomly fail after a few tests.

[14:27:00.0000] <jgraham>
AryehGregor: Yes, they could be timing out

[14:28:00.0000] <jgraham>
setup({timeout:some_high_number_of_ms}) should fix that

[14:28:01.0000] <jgraham>
AryehGregor: This is much easier to debug if you define all tests upfront

[14:28:02.0000] <jgraham>
rather than creating one test as the other finishes

[14:29:00.0000] <jgraham>
/me sees 52 pass in opera

[14:30:00.0000] <jgraham>
Is it me or is it *really* slow in gecko compared to opera?

[14:32:00.0000] <jgraham>
Chrome seems to have stopped after 22

[14:33:00.0000] <zewt>
alright, I think I have it working reliably, had to poke at the harness to see what was going on

[14:34:00.0000] <jgraham>
zewt: What did you change?

[14:34:01.0000] <zewt>
it seems that the test harness stops as soon as the number of tests waiting to run is 0

[14:34:02.0000] <jgraham>
Yes

[14:34:03.0000] <zewt>
due to tests.prototype.notify_result going through the all_done codepath, which sets it to COMPLETE

[14:34:04.0000] <jgraham>
(given other conditions)

[14:34:05.0000] <zewt>
i hacked around it by adding a dummy test

[14:35:00.0000] <zewt>
http://zewt.org/~glenn/foo/Range-deleteContents.html

[14:37:00.0000] <jgraham>
zewt: Oh

[14:37:01.0000] <jgraham>
I wonder why it ever worked

[14:37:02.0000] <zewt>
works for me in opera 11, chrome 9, ff4 (havn't tried IE9 since I have to start a bloated Win7 VM for it)

[14:37:03.0000] <zewt>
jgraham: my guess (havn't investigated) is something along the lines of somehow ending up with more than one async test running due to some other race

[14:38:00.0000] <jgraham>
Anyway, I think The Right Fix (TM) is to define all the tests up front

[14:38:01.0000] <jgraham>
But I thin AryehGregor is doing that now and it fails in Chrome

[14:38:02.0000] <jgraham>
*think

[14:39:00.0000] <jgraham>
Oh, look at that

[14:39:01.0000] <jgraham>
It seems to be throwing outside a t.step()

[14:40:00.0000] <jgraham>
Which is bad

[14:40:01.0000] <jgraham>
Uncaught Error: NOT_FOUND_ERR: DOM Exception 8

[14:43:00.0000] <jgraham>
So my suggestion is to put more code inside the t.step()

[14:43:01.0000] <jgraham>
possibly ading more steps

[14:46:00.0000] <zewt>
there also seems to be some kind of funkiness with synchronous tests and onload

[14:47:00.0000] <zewt>
running any sync test after onload triggers COMPLETE

[14:47:01.0000] <zewt>
(because all_loaded is true)

[14:49:00.0000] <zewt>
anyhow, the current version I have up works in FF4, Opera 11, Chrome 9 and IE9 consistently for me

[14:53:00.0000] <jgraham>
zewt: What exactly is the bug?

[14:54:00.0000] <jgraham>
With sync tests and onload?

[14:55:00.0000] <jgraham>
It *should* only mark the tests as complete if num_pending is 0, which *should* only happen if there are no uncompleted async tests

[14:55:01.0000] <zewt>
if you run a sync test after onload, test() -> test_obj.done() -> tests.result() -> tests.notify_result -> tests.complete()

[14:55:02.0000] <zewt>
right, but I was only using sync tests, with no async ones at all

[14:55:03.0000] <jgraham>
That sounds like expected behaviour

[14:56:00.0000] <jgraham>
I mean, how do you expect it to know that you will add a sync test at some point in the future?

[14:56:01.0000] <zewt>
seems strange that you can only run one sync test unless you start a placeholder async one

[14:56:02.0000] <jgraham>
You can have > 0 sync tests as long as you define them to run before onload fires

[14:56:03.0000] <zewt>
well, i think it's trying to be too magic--don't try to figure out when I'm done, give me a "finishedWithAllTests" to call

[14:56:04.0000] <jgraham>
There is

[14:57:00.0000] <zewt>
but they have to run after onload, since they need to load iframes

[14:57:01.0000] <jgraham>
But it is off by default

[14:57:02.0000] <jgraham>
 * == Determining when all tests are complete ==

[14:57:03.0000] <jgraham>
 *

[14:57:04.0000] <jgraham>
 * By default the test harness will assume there are no more results to come

[14:57:05.0000] <jgraham>
 * when:

[14:57:06.0000] <jgraham>
 * 1) There are no Test objects that have been created but not completed

[14:57:07.0000] <jgraham>
 * 2) The load event on the document has fired

[14:57:08.0000] <jgraham>
 *

[14:57:09.0000] <jgraham>
 * This behaviour can be overridden by setting the explicit_done property to true

[14:57:10.0000] <jgraham>
 * in a call to setup(). If explicit_done is true, the test harness will not assume

[14:57:11.0000] <jgraham>
 * it is done until the global done() function is called. Once done() is called, the

[14:58:00.0000] <jgraham>
 * two conditions above apply like normal.

[14:59:00.0000] <zewt>
k

[14:59:01.0000] <jgraham>
In the futuure the default could change

[15:00:00.0000] <jgraham>
/me -> sleep

[15:09:00.0000] <erlehmann>
the body thing on the list is pretty strange

[15:09:01.0000] <erlehmann>
what the hell is this usario thinking?

[15:10:00.0000] <zewt>
"i found a spec mailing list and I want to suggest something"

[15:17:00.0000] <TabAtkins>
erlehmann: He's obvious fallen into the trap of solving an attractively easy problem without checking to see if it's actually a problem.

[15:17:01.0000] <TabAtkins>
In this case, "'body' doesn't sound like a properly semantic name for the page content".

[15:29:00.0000] <zewt>
i'm trying not to read this <body> thread but driving past a car crash, etc

[15:29:01.0000] <TabAtkins>
Mute it.  It's not worth  reading.  He doesn't want to provide a problem.

[15:32:00.0000] <erlehmann>
tabAtkins, there was a nice talk about âhow to fail at teaching people stuffâ from kathrin passig at re:publica 2010. step 1: wait until they think they have a problem. :)

[15:32:01.0000] <TabAtkins>
I already asked him clearly and unambiguously to find out what problem he's trying to solve. ^_^

[15:33:00.0000] <zewt>
careful; he's more likely to interpret that as "retroactively find a problem to justify the change you started at"

[15:34:00.0000] <TabAtkins>
That's not an issue; you can then just point out that the problem isn't important.

[15:53:00.0000] <erlehmann>
tabAtkins, this may or may not be fun. happy trolling :)


2011-03-02
[16:21:00.0000] <AryehGregor>
"I believe what implementors present at TPAC agreed to is that we do not like mutation events and want them to die in a fire."  Why?

[16:22:00.0000] <AryehGregor>
Bad performance, hard to implement, underdefined?

[16:25:00.0000] <Dashiva>
Yes

[16:25:01.0000] <Dashiva>
All three

[16:25:02.0000] <Dashiva>
There's been some work to define an alternate solution that satisfies the practical use cases without suffering from the same problems

[16:53:00.0000] <AryehGregor>
Whoa, paths on Windows are a maximum of 256 characters in the standard APIs?

[16:53:01.0000] <AryehGregor>
That's amazingly lame, even for Windows.

[16:55:00.0000] <TabAtkins>
AryehGregor: The mortal sin of mutation events is that they're defined to fire sync, which means that you immediately get re-entrancy problems - a function may mutate the DOM, then the mutation event runs, possible changing the DOM underneath the function.  Mutation events can even fire syncly during other mutation events.  This is crazytimes.

[16:55:01.0000] <AryehGregor>
Ouch.

[16:56:00.0000] <TabAtkins>
Yeah, mutation-events-inside-mutation-events are a sure route to stale pointer issues in teh browser implementation.

[16:56:01.0000] <othermaciej>
they also suck for perf

[16:56:02.0000] <othermaciej>
since dynamically allocating events for every DOM mutation is super expensive

[16:56:03.0000] <TabAtkins>
Further, mutation events suffer from the same problem as the key* family, where a single type of event is fired for *everything*, and you have to decide inside the listener if youa ctually wanted to listen to it or not.

[16:57:00.0000] <Philip`>
AryehGregor: No, it's not limited to 256 characters

[16:58:00.0000] <Philip`>
It's limited to 260 (including the drive identifier and terminating null)

[16:58:01.0000] <AryehGregor>
Ah, that's better, then.

[16:58:02.0000] <TabAtkins>
They'd be much less painful if they were async and were changed so you could listen to specific things, like "I want to be notified when this specific attribute on this specific element is changed".

[16:58:03.0000] <Philip`>
MAX_PATH is 260, so lots of applications have fixed-size buffers that won't cope with longer paths, I think

[16:58:04.0000] <TabAtkins>
(Similar to how key* would be better if you could say "I want to listen for when the user presses an arrow key".

[16:59:00.0000] <TabAtkins>
Philip`: Specifically, Explorer.

[17:00:00.0000] <zewt>
explorer could deal with it if Microsoft updated it to use whatever the newer APIs are that don't have that limitation; I imagine they don't since no other applications support it (chicken/egg)

[17:00:01.0000] <zewt>
it's pretty funny that you can create file trees in explorer that you can then not delete

[17:01:00.0000] <zewt>
(without playing filename puzzle games to reduce path lengths)

[17:01:01.0000] <AryehGregor>
What I really want is an API that lets me run some code immediately before or after an element is added to the DOM that matches a particular CSS selector.

[17:01:02.0000] <AryehGregor>
E.g., if I have something where I want to change the state somehow immediately when it's added to the page, for whatever reason.

[17:01:03.0000] <TabAtkins>
"immediately before" is hard.

[17:01:04.0000] <Hixie>
by immediately you mean synchronously?

[17:01:05.0000] <AryehGregor>
Like because I want the default appearance to differ between scripting and non-scripting UAs.

[17:01:06.0000] <Hixie>
if so, that's the problem with mutation events.

[17:01:07.0000] <TabAtkins>
Unless you make the DOM mutatino APIs async.

[17:02:00.0000] <AryehGregor>
I want something that behaves like inserting a <script> tag immediately before or after the open or close tag of a particular element.

[17:02:01.0000] <AryehGregor>
So that I don't have to, you know, actually do that.

[17:02:02.0000] <AryehGregor>
This is particularly significant with CSP, where you can't use inline script.

[17:03:00.0000] <Hixie>
"use xbl" :-)

[17:03:01.0000] <AryehGregor>
So you have no way to emulate the effect at all that I know of.

[17:04:00.0000] <TabAtkins>
component model

[17:04:01.0000] <TabAtkins>
 /component model, that is

[17:28:00.0000] <zewt>
heh, seems like neither browser with tab-modal alerts really handles background prompting very well

[17:29:00.0000] <zewt>
opera only sets the tab to "new" (blue tab text), which isn't noticable at all; ff4 is on the other side of the spectrum, letting the tab steal focus outright, which seems like too much

[17:29:01.0000] <zewt>
i'd think they'd mimic windows's taskbar notification flash, which seems about the right level of attention-grabbing

[17:58:00.0000] <zewt>
Showing results for w3 xml. Search instead for w3 xbl <- google seriously needs an I-know-how-to-type-so-stop-correcting-me option

[23:41:00.0000] <annevk>
Hixie, yeah, activation behavior didn't really seem appropriate

[23:42:00.0000] <Hixie>
hm?

[23:46:00.0000] <annevk>
Hixie, to define in DOM Core

[23:46:01.0000] <Hixie>
oh i didn't mean activation behaviour

[23:46:02.0000] <Hixie>
that's defined in html

[23:46:03.0000] <annevk>
ooh, wait, interaction events

[23:46:04.0000] <Hixie>
i meant the actual mapping of devices to events

[23:46:05.0000] <annevk>
yeah, that shouldn't either

[23:46:06.0000] <Hixie>
right

[23:46:07.0000] <Hixie>
still needs a spec though

[23:47:00.0000] <annevk>
mouse events should be part of CSS hit testing imo

[23:47:01.0000] <Hixie>
if doug wants to write it, that would be awesome

[23:48:00.0000] <annevk>
Shelley Powers volunteers to write the WHATWG Weekly

[23:49:00.0000] <Hixie>
is she willing to do it politely and objectively?

[23:50:00.0000] <annevk>
dunno, and she hasn't been on IRC yet

[23:50:01.0000] <annevk>
but what we do mostly with first-time contributors on the blog is that an admin quickly reviews it

[23:50:02.0000] <annevk>
so that should be fine

[23:50:03.0000] <Hixie>
worksforme

[23:51:00.0000] <Hixie>
if she can actually do it usefully that would be awesome

[23:51:01.0000] <Hixie>
you and mark have done a really useful job :-)

[23:56:00.0000] <foolip>
Microsoft committed to implementing SMPTE-TT?

[23:56:01.0000] <foolip>
http://lists.w3.org/Archives/Public/public-html/2011Mar/0017.html

[23:56:02.0000] <foolip>
"But in any case I at least am implementing support for SMPTE-TT."

[23:57:00.0000] <annevk>
the title of xkcd comics is often the best :)

[23:57:01.0000] <othermaciej_>
I don't think Sean Hayes is on the IE team

[23:57:02.0000] <othermaciej_>
though he has in the past referred to implementing TTML in Silverlight

[23:58:00.0000] <annevk>
and with that I mean title="", not <h2> or whatever he is using

[23:58:01.0000] <foolip>
I do hope we can actually agree on 1 format for text...

[23:58:02.0000] <foolip>
the world will rightfully hate us otherwise

[23:58:03.0000] <annevk>
it was already known he worked on other formats

[23:58:04.0000] <annevk>
but he's not with the IE guys

[23:59:00.0000] <foolip>
phew, there is still hope :)

[23:59:01.0000] <annevk>
Kris from Microsoft to Hixie

[23:59:02.0000] <annevk>
"Nice to see you participate and listen to feedback on the html5 spec."

[23:59:03.0000] <foolip>
annevk, link?

[23:59:04.0000] <Hixie>
o_O

[00:00:00.0000] <annevk>
I guess maybe he said that because it was on public-html-testsuite and he meant participating there

[00:00:01.0000] <annevk>
otherwise it would be really weird

[00:00:02.0000] <annevk>
foolip, http://lists.w3.org/Archives/Public/public-html-testsuite/2011Mar/0001.html

[00:01:00.0000] <othermaciej_>
yes, I think there was an implied "on the testing list" there

[00:02:00.0000] <Hixie>
/me has been on the testing list since probably before kris

[00:08:00.0000] <annevk>
fwiw, I replied to Shelley: http://blog.whatwg.org/weekly-same-origin#comment-42803

[00:24:00.0000] <hsivonen>
Interop doesn't look too good here: http://hsivonen.iki.fi/test/moz/about-blank-load-location.html

[00:26:00.0000] <karlcow>
hsivonen: what is supposed to do? I open it in firefox, safari and opera and have the same blank square

[00:29:00.0000] <hsivonen>
karlcow: it uses console.log

[00:29:01.0000] <hsivonen>
karlcow: logs once in Firefox

[00:29:02.0000] <hsivonen>
karlcow: twice in Opera and Chrome

[00:30:00.0000] <karlcow>
ah ok thanks.

[00:30:01.0000] <hsivonen>
logs once in IE9 but it a crazier than expected way

[00:32:00.0000] <hsivonen>
I wonder if the test in buggy and fails in an unexpected way in IE9

[00:32:01.0000] <hsivonen>
the IE9 result makes no sense otherwise

[00:34:00.0000] <annevk>
look at that

[00:34:01.0000] <annevk>
above zero in Sweden!

[00:35:00.0000] <annevk>
only at night it is painfully cold

[00:37:00.0000] <karlcow>
annevk: I have been now in Oslo for 10 days, and it is somehow tropical compared to Montreal. :D

[00:38:00.0000] <annevk>
right...

[00:38:01.0000] <annevk>
I still need to get there however

[00:38:02.0000] <annevk>
and vote

[00:38:03.0000] <annevk>
and pack

[00:38:04.0000] <hsivonen>
well, *this* is interesting. IE9 mode doesn't create a body for about:blank synchronously

[00:38:05.0000] <annevk>
and more

[00:39:00.0000] <hsivonen>
I wonder if that's Web compatible

[00:39:01.0000] <hsivonen>
now I need to test my hypotheses in multiple IE modes

[00:39:02.0000] <hsivonen>
grr

[00:39:03.0000] <annevk>
lol MikeSmith

[00:39:04.0000] <zcorpan>
it's only 14 modes to test, right? or how many are there again?

[00:39:05.0000] <annevk>
"great tea abuser" hahaha

[00:40:00.0000] <annevk>
green*

[00:40:01.0000] <MikeSmith>
heh

[00:40:02.0000] <hsivonen>
It's extremely hard for me to believe that IE9 standards mode could be Web-compatible here

[00:41:00.0000] <Ms2ger>
They don't need to

[00:41:01.0000] <hsivonen>
because Gecko, WebKit and Presto all go through the trouble of making document.body non-null for about:blank synchronously

[00:41:02.0000] <hsivonen>
Ms2ger: right. but it sucks when trying to figure out what I should make Gecko do

[00:42:00.0000] <zcorpan>
annevk: is there a bugzilla component for html5diff?

[00:42:01.0000] <Ms2ger>
I thought there was

[00:42:02.0000] <zcorpan>
there is

[00:43:00.0000] <zcorpan>
17 open bugs

[00:44:00.0000] <hsivonen>
hmm. If I use developer tools in IE9 to force Browser Mode to IE9 and Document Mode to Quirks, I still get null document.body after parsing iframe before the event loop has spun

[00:44:01.0000] <annevk>
zcorpan, I think those are from Marcos

[00:44:02.0000] <hsivonen>
now I'm really confused

[00:45:00.0000] <annevk>
zcorpan, he still needs to close them

[00:45:01.0000] <hsivonen>
what's the closest thing to console.log that I could use in IE6 without disrupting the event loop?

[00:45:02.0000] <hsivonen>
I don't trust alert()

[00:46:00.0000] <hsivonen>
maybe I need to write my own in-test-case logging facility

[00:46:01.0000] <hsivonen>
again

[00:47:00.0000] <jgraham>
hsivonen: I suspect you do

[00:47:01.0000] <zcorpan>
annevk: filtering out marcos leaves 4 open bugs

[00:47:02.0000] <jgraham>
annevk: It's about -4 here

[00:47:03.0000] <hsivonen>
about:blank is such a pain

[00:49:00.0000] <zcorpan>
/me creates an email label to keep track of html5diff emails

[00:51:00.0000] <hsivonen>
about:blank in iframe is so sane in IE9 that I wish the Web would agree with us standardizing that behavior

[00:51:01.0000] <Ms2ger>
It's sane? Then probably not

[00:52:00.0000] <hsivonen>
which reminds me that I need to test this stuff in window.open, too, before I draw conclusions

[00:55:00.0000] <foolip>
"the Ian has also removed the relation"

[00:55:01.0000] <foolip>
sounds like Ian is either a machine or a derogatory term :)

[00:56:00.0000] <jgraham>
It sounds like he is some sort of Terminator

[00:56:01.0000] <jgraham>
hired to kill off family members

[00:57:00.0000] <foolip>
imagine the movie version of Ian editing the spec!

[01:01:00.0000] <hsivonen>
whoa! whoa! even IE6 is saner than the other browsers on this!!!

[01:01:01.0000] <hsivonen>
could it be that the quirkiness of about:blank is Gecko's fault instead?

[01:04:00.0000] <zcorpan>
John Gregg and @sideshowbarker delivers? sounds creepy

[01:06:00.0000] <MikeSmith>
I didn't deliver anything, I just throw it into the machine and turn some knobs

[01:06:01.0000] <hsivonen>
aaaargh! it seems that window.open is crazy in IE

[01:06:02.0000] <hsivonen>
and other browser generalized the craziness to iframed browsing contexts

[01:09:00.0000] <annevk>
zcorpan, who said it isn't?

[01:10:00.0000] <hsivonen>
is there any way to set a "load" event handler in a window.open call so that the event handler gets set before window.open() returns?

[01:11:00.0000] <annevk>
modify the about:blank page? :)

[01:12:00.0000] <hsivonen>
annevk: I don't have the source for IE

[01:16:00.0000] <karlcow>
/me will abuse himself with green tea 

[01:19:00.0000] <zcorpan>
hsivonen: you just need to kidnap some ie team employee's kids and require the source for ie in exchange

[01:21:00.0000] <hsivonen>
why doesn't Opera have a truthy addEventListener on the object returned by window.open?

[01:22:00.0000] <karlcow>
you gotta love tools :) wonderful. http://www.nzeldes.com/HOC/Posographe.htm

[01:23:00.0000] <hsivonen>
this is weird. top-level windows in Opera have addEventListener but windows returned by window.open don't

[01:24:00.0000] <zcorpan>
weird indeed

[01:28:00.0000] <zcorpan>
hsivonen: seems to be that we don't create a script environment for the opened window if it's blocked by the popup blocker

[01:28:01.0000] <zcorpan>
hsivonen: addEventListener exists if you open() in response to a click

[01:29:00.0000] <hsivonen>
zcorpan: thanks

[01:30:00.0000] <zcorpan>
we don't try very hard to hide side-effects of the popup blocker

[01:30:01.0000] <hsivonen>
zcorpan: if I disable the blocker, Opera is more similar to Gecko than to Chrome and IE9 but still different

[01:32:00.0000] <hsivonen>
where when I say "Gecko", I meant Gecko configured to target window.open to tabs

[01:32:01.0000] <hsivonen>
which is different from opening real windows!

[01:33:00.0000] <zcorpan>
hsivonen: if you like testing, opera has a pref for opening windows instead of tabs

[01:35:00.0000] <hsivonen>
zcorpan: yay, more configurations

[01:35:01.0000] <hsivonen>
the worst part of this is the Gecko-specific unit tests that depend on *exactly* what Gecko does now

[01:36:00.0000] <hsivonen>
and I don't mean unit tests designed to test this thing in particular

[01:36:01.0000] <hsivonen>
but random tests for other things

[01:37:00.0000] <hsivonen>
currently in Gecko, about:blank and document.open() on *.mail.live.com are special-cased to use the old parser

[01:38:00.0000] <zcorpan>
hsivonen: what's the problem with the new parser?

[01:38:01.0000] <hsivonen>
zcorpan: the problem with about:blank is that the new parser takes 2 task queue tasks to finish  minimum and our test cases want about:blank processing to take one task queue task

[01:39:00.0000] <zcorpan>
hsivonen: i meant with mail.live.com

[01:39:01.0000] <Ms2ger>
Script processing? :)

[01:40:00.0000] <hsivonen>
zcorpan: I'll leave it to the Hotmail team to disclose the details if they want to

[01:40:01.0000] <zcorpan>
is it confidential?

[01:41:00.0000] <hsivonen>
zcorpan: it not clear to me what the confidentiality expectation is, so I'm erring on the side of it being confidential

[01:43:00.0000] <zcorpan>
ok

[01:48:00.0000] <jgraham>
Sorry, what?

[01:48:01.0000] <hsivonen>
IE6 is so much more annoying than I remembered

[01:48:02.0000] <jgraham>
You swicth back to the old parser for one specific page?

[01:49:00.0000] <jgraham>
Jesus wept

[01:49:01.0000] <hsivonen>
jgraham: well, before this week it was only one: about:blank

[01:49:02.0000] <hsivonen>
jgraham: now it's also all document.open()ed pages on *.mail.live.com

[01:50:00.0000] <jgraham>
hsivonen: I assume since you can't talk about it that you also don't have a bug number?

[01:50:01.0000] <hsivonen>
jgraham: about:blank is only one specific page but it's the hardest one there is

[01:50:02.0000] <Ms2ger>
The bug is public

[01:51:00.0000] <hsivonen>
jgraham: I have several bug numbers

[01:51:01.0000] <hsivonen>
jgraham: https://bugzilla.mozilla.org/show_bug.cgi?id=627729 https://bugzilla.mozilla.org/show_bug.cgi?id=636692 https://bugzilla.mozilla.org/show_bug.cgi?id=636690

[01:51:02.0000] <jgraham>
hsivonen: Thanks

[01:52:00.0000] <hsivonen>
jgraham: It's UA-sniffed code on Hotmail. It's not served to Chrome. Probably not served to Opera, either.

[01:52:01.0000] <jgraham>
hsivonen: Hmm, OK

[01:54:00.0000] <zcorpan>
/me has experienced repeated reloading in hotmail in opera at some point

[01:54:01.0000] <jgraham>
/me has tried to avoid experiencing hotmail

[01:55:00.0000] <hsivonen>
I'm in awe at people who've actually managed to develop JS programs for IE6

[01:56:00.0000] <zcorpan>
jgraham: i guess i should say that i've seen my wife experience repeated reloading in hotmail in opera at some point. she has now switched to gmail

[02:02:00.0000] <hsivonen>
aargh. attachEvent wants the "on" bit in event names

[02:02:01.0000] <hsivonen>
that explains a lot

[02:05:00.0000] <zcorpan>
heh

[02:07:00.0000] <hsivonen>
awesome. IE9 has regressed the ability to listen for the load event of window.opened windows even the attachEvent way that worked in IE6

[02:09:00.0000] <hsivonen>
hmm. Opera is weird

[02:09:01.0000] <hsivonen>
if I open about:blank using window.open, I get a load event

[02:09:02.0000] <hsivonen>
if I open something else (same-origin), I don't get a load event

[02:27:00.0000] <hsivonen>
I guess I should also test if the initial about:blank shows up in the history API or something

[02:27:01.0000] <hsivonen>
sigh.

[02:31:00.0000] <_bga>
Hixie are you here?

[02:34:00.0000] <jgraham>
_bga: He is probably asleep

[02:35:00.0000] <_bga>
ok

[03:44:00.0000] <hsivonen>
is the non-joint history exposed to JS?

[03:47:00.0000] <hsivonen>
ah. "The actual entries are not accessible from script."

[03:59:00.0000] <annevk>
"the Ian", lol where is that from?

[04:00:00.0000] <annevk>
I wish I had gotten some replies on the DOM Core stuff

[04:01:00.0000] <annevk>
I guess later today I can sort out what BjÃ¶rn pointed out

[04:02:00.0000] <annevk>
though I'm somewhat skeptical there is new information there

[04:02:01.0000] <annevk>
should probably also write a blog post on Web Notifications as some kind of introduction

[04:03:00.0000] <annevk>
lots of technical posts before my blog turns into a collection of travel stories

[04:07:00.0000] <hsivonen>
looks like about:blank is going to eat up my day :-(

[04:08:00.0000] <annevk>
your experience does show that the HTML parser really is intertwined with most everything

[04:08:01.0000] <annevk>
not sure that's a good thing

[04:08:02.0000] <Ms2ger>
I'm sure. No.

[04:09:00.0000] <annevk>
back later, going to get high (in the sky) bahaha bad joke

[04:35:00.0000] <hsivonen>
zcorpan: where can I find the Opera pref for targeting window.open to window instead of tab?

[04:36:00.0000] <hsivonen>
also, does Chrome have an option for doing the opposite?

[04:39:00.0000] <karlcow>
hmm the dfn element doesn't really makes it easy to build glossary automagically. It needs a bit of markup-fu to make it more useful.

[04:39:01.0000] <karlcow>
s/makes/make/

[06:43:00.0000] <foolip>
hsivonen, missing "to" in "WebKit used handle things"

[06:55:00.0000] <annevk>
/me can now place prank calls pretending to be gsnedders

[06:56:00.0000] <zcorpan>
hsivonen: i don't know what the opera:config pref is called, but it's in prefs, advanced, tabs, additional options

[06:58:00.0000] <hsivonen>
foolip: fixed. thanks

[06:59:00.0000] <hsivonen>
zcorpan: thanks

[07:12:00.0000] <zcorpan>
hsivonen: "Sync plus incr other" is not defined

[07:12:01.0000] <zcorpan>
hsivonen: meant to be "Sync plus async other"?

[07:18:00.0000] <hsivonen>
zcorpan: yes. fixed. thanks.

[07:23:00.0000] <annevk>
zcorpan, can I forward html5-diff comments to you now?

[07:23:01.0000] <zcorpan>
annevk: sure

[07:23:02.0000] <annevk>
playing with CVS with someone else also playing with it is pain :)

[07:23:03.0000] <zcorpan>
hsivonen: about:blank is sad panda

[07:24:00.0000] <zcorpan>
annevk: we'll have to take turns :P

[07:25:00.0000] <jgraham>
/me would point out the irony of a VCS not allowing multiple people to work simultaneously, but realises that the letters CVS make the point moot

[07:25:01.0000] <zewt>
cvs in 2011? my condolensces

[07:25:02.0000] <annevk>
I plan on just leaving it alone for some time now :)

[07:25:03.0000] <annevk>
zewt, everything on dev.w3.org is in CVS

[07:25:04.0000] <zcorpan>
ok

[07:26:00.0000] <annevk>
I'm leaving in two weeks and we're not publishing so that seemed reasonable to me

[07:26:01.0000] <annevk>
especially since you're all set up now

[07:26:02.0000] <zewt>
would getting version control updated to something not completely obsolete require three years of procedures and a unanimous vote

[07:27:00.0000] <annevk>
new stuff is done here mostly: http://dvcs.w3.org/hg/

[07:28:00.0000] <jgraham>
I think it took a little less than 3 years

[07:28:01.0000] <jgraham>
Basically staff got to decide so it happened fast

[07:31:00.0000] <karlcow>
zewt: nah. but there can be many dependencies on a system.

[07:38:00.0000] <hsivonen>
zcorpan: I updated the result table to include Opera 11 targeting window.open to windows

[07:38:01.0000] <hsivonen>
nothing new there, fortunately

[08:19:00.0000] <Clotaire>
Hello everybody

[08:20:00.0000] <Clotaire>
i am a french man and i am writting a tutorial on HTML5 and CSS3 on http://www.siteduzero.com

[08:27:00.0000] <jgraham>
http://spacewar.oversigma.com/html5/

[08:35:00.0000] <zcorpan>
hsivonen: but not same behavior as tab, which seems like a bug

[08:35:01.0000] <zcorpan>
oh wait

[08:35:02.0000] <zcorpan>
i read teh table wrong

[08:42:00.0000] <Clotaire>
it is a official W3C developper here ?

[08:42:01.0000] <Clotaire>
i just want to ask some questions

[08:42:02.0000] <wilhelm>
Several, I presume.

[08:42:03.0000] <Clotaire>
like ?

[08:43:00.0000] <zcorpan>
just ask your question

[08:44:00.0000] <jgraham>
There isn't such a thing as an official W3C developer

[08:44:01.0000] <jgraham>
Although there are various kindds of staff

[08:44:02.0000] <jgraham>
and Mike Smith

[08:45:00.0000] <Clotaire>
i am talking about an "official developper", does mean a person who work directly in de structure as programmer

[08:45:01.0000] <jgraham>
Clotaire: Seriously, ask whatever question you have

[08:45:02.0000] <jgraham>
and people will either answer or try to point you to the right person

[08:47:00.0000] <Clotaire>
my preocupation is about the HTML5 geolocalisation API

[08:48:00.0000] <Ms2ger>
That's not an HTML5 API, do continue

[08:55:00.0000] <Rik`>
Wingat: if you want to talk in French, maybe #openweb can help

[08:56:00.0000] <Rik`>
##openweb actually

[08:57:00.0000] <karlcow>
strange question from Clotaire. What is an official W3C developer.

[08:57:01.0000] <Wingat>
tank you verry much

[08:57:02.0000] <karlcow>
he left

[08:58:00.0000] <Rik`>
karlcow: Clotaire is now known as Wingate

[08:58:01.0000] <karlcow>
aaaah

[08:58:02.0000] <Wingat>
sorry if my questions are idiotic

[08:58:03.0000] <jgraham>
Rik`: Wingat, in fact

[08:58:04.0000] <karlcow>
no no not idiotic, just strange

[08:58:05.0000] <Rik`>
jgraham: I was about to past another one

[08:58:06.0000] <Ms2ger>
Both, in fact

[08:58:07.0000] <Wingat>
Wingate is my real nick

[08:58:08.0000] <Wingat>
but it is register

[08:58:09.0000] <karlcow>
trying to understand what you mean by official w3c developer

[08:58:10.0000] <Wingat>
and i have forgotten how to sign in

[08:58:11.0000] <zewt>
mime type developer/w3c

[08:59:00.0000] <Wingat>
with a register nick

[08:59:01.0000] <Rik`>
zewt: I'm not sure I want to sniff a W3C developerâ¦

[08:59:02.0000] <karlcow>
Wingat: en franÃ§ais, si tu es plus confortable, c'est possible aussi

[08:59:03.0000] <zewt>
D:

[09:00:00.0000] <Wingat>
Ah okey :)

[09:00:01.0000] <Wingat>
merci

[09:00:02.0000] <Wingat>
enfin un frÃ¨re !

[09:00:03.0000] <Wingat>
alors comment on se connecte avec un nick enregistrÃ© ?

[09:03:00.0000] <karlcow>
Wingat: http://freenode.net/faq.shtml#userregistration

[09:30:00.0000] <TabAtkins>
Untitled sections aren't actually a "problem", right?  I mean, titling them is ideal, but the mere fact that something is a <nav> is better than nothing.

[09:33:00.0000] <Workshiva>
In fact, last I checked the spec encourages outline tools to provide sensible names for untitled non-generic sections

[09:34:00.0000] <jgraham>
TabAtkins: No, that was the fundamental mistake in that article

[09:34:01.0000] <TabAtkins>
K.  I'm chatting with the dude, and I was just making sure before I pressed the point.

[09:34:02.0000] <Workshiva>
"User agents should provide default headings for sections that do not have explicit section headings."

[09:48:00.0000] <zcorpan>
http://webaim.org/projects/screenreadersurvey3/#html5

[09:50:00.0000] <jgraham>
zcorpan: Aren't the results of a survey on that topic rather uninformative?

[09:50:01.0000] <zcorpan>
maybe

[09:52:00.0000] <jgraham>
In general it seems like questions along the lines of "do you think that x is good" aren't good at determining if x is good. Moreso if it is "going to be good"

[09:53:00.0000] <jgraham>
I suppose it is useful to find our if you are doing well at PR though

[09:54:00.0000] <zcorpan>
seems more than half find longdesc useful

[09:55:00.0000] <Philip`>
I suppose it shows that the "HTML5 is a step backwards for accessibility because it's removing accessibility-related markup" message is not that widespread amongst this group of people

[09:55:01.0000] <TabAtkins>
/me needs to write up his proposal to add @src to canvas, so it can act as a drop-in <img> replacement with structured accessibility fallback.

[09:56:00.0000] <jgraham>
zcorpan: It shows that more than half of people said they found it useful when asked in a survey. That is quite different from them actually finding it useful

[09:56:01.0000] <zcorpan>
right

[09:56:02.0000] <jgraham>
Most of those people may never have come across a longdesc, for all we know

[09:57:00.0000] <jgraham>
And the wording of the question would allow "how helpful is a method of providing a long description for complex images to you"

[09:58:00.0000] <jgraham>
Since a problem that many people who use screenreaders have is that they can't see (or can't see well) it seems natural for them to answer that such a thing would be useful without having any clue about longdesc in particular

[10:09:00.0000] <zcorpan>
maybe you would get slightly more accurate answers if the question was "How useful is longdesc to you" and one of the alternatives is "I don't know what longdesc is"

[10:10:00.0000] <zcorpan>
and another "I know what longdesc is but have never encountered a page that uses it"

[10:11:00.0000] <Philip`>
What about people who have encountered it and used it but don't know it as the technical term "longdesc"?

[10:11:01.0000] <zcorpan>
i guess the question could be asked in terms of how longdesc is exposed in the user's primary screen reader

[10:13:00.0000] <jgraham>
The right way to do it would be to instrument some peoples screenreaders for objective questions

[10:13:01.0000] <jgraham>
and only ask about subjective things

[10:13:02.0000] <TabAtkins>
Instrumentation is always the answer.

[10:14:00.0000] <jgraham>
Even for apparently subjective things like "did you find that task easy" instrumentation can help you work out whether it was really easy or hard

[10:14:01.0000] <jgraham>
and normalise against different people

[10:15:00.0000] <jgraham>
since you can measure how long things took, how many steps they went through, etc.

[10:15:01.0000] <zewt>
trying to derive useful information from that is something of a black art, though

[10:15:02.0000] <zcorpan>
speaking of easy and hard, MS Office 2010 has seriously regressed in ease of use

[10:15:03.0000] <jgraham>
zewt: Maybe

[10:16:00.0000] <jgraham>
But much less of a black art than reading tealeaves aka what people said in an interview

[10:17:00.0000] <jgraham>
(one presumes people like Freedom Scientific alrady have all this information but are not willing to share it)

[10:17:01.0000] <jgraham>
(or at least some of it)

[10:18:00.0000] <jgraham>
(one could presumably do the same thing with nvda in a more open way, but it would of course need funding and so on)

[10:59:00.0000] <Hixie>
bga_: here now

[11:01:00.0000] <zcorpan>
gotta love people who come here with a question but never ask it

[11:01:01.0000] <bga_>
sec :)

[11:02:00.0000] <bga_>
serios question about webworkers

[11:02:01.0000] <zcorpan>
/me was referring to Wingat

[11:05:00.0000] <bga_>
Hixie you know that each message passing cost is serialization + atomic queue + deserialization

[11:05:01.0000] <Hixie>
the workers spec lets you send structured data

[11:05:02.0000] <bga_>
but serialization/deserialization is very slow

[11:06:00.0000] <Hixie>
and browsers can implement it as copy-on-write

[11:06:01.0000] <Hixie>
so it doesn't have to be slow

[11:06:02.0000] <bga_>
hm

[11:07:00.0000] <Hixie>
it actually doesn't even have to block, though the most optimal implementation performance-wise is a little subtle and requires careful thought to get right

[11:09:00.0000] <zcorpan>
Hixie: seemingly the most optimal impl has not been implemented anywhere, it might be worthwhile to give a hint in the spec about the matter

[11:09:01.0000] <Hixie>
well the browsers still only do strings, right?

[11:09:02.0000] <zcorpan>
no

[11:10:00.0000] <Hixie>
oh, cool

[11:10:01.0000] <Hixie>
who does structured data?

[11:10:02.0000] <zcorpan>
opera and webkit at least

[11:10:03.0000] <Hixie>
shows what i know

[11:13:00.0000] <bga_>
if js will have weak references and abstract operation globalDelete(varName) => message passing will be better

[11:13:01.0000] <zcorpan>
firefox too

[11:13:02.0000] <Philip`>
SpiderMonkey implements the structured clone algorithm, though I don't know if/where it's used

[11:14:00.0000] <Philip`>
/me only knows since he uses that for message passing between threads in his non-web-based application

[11:15:00.0000] <bga_>
anyway erlang has classis actors model (WebWorkers - actors model too) and global atomic dictonary

[11:16:00.0000] <bga_>
yeah we want to avoid extra crictical sections and rece contition but global dictonary is usefull

[11:16:01.0000] <bga_>
*race

[11:16:02.0000] <zcorpan>
firefox does strings for window.postMessage, webkit and opera does stuctured clone there too

[11:17:00.0000] <zcorpan>
Hixie: btw, has it been pondered about the security implications of sending Files in window.postMessage?

[11:18:00.0000] <Hixie>
yes

[11:18:01.0000] <zcorpan>
ok

[11:18:02.0000] <Hixie>
(as far as i can tell there are no implications since you could always just proxy all the calls back and forth anyway)

[11:19:00.0000] <zewt>
seems sensible that if a user grants a site access to a file, the site should be able to transfer that permission to other origins anyway

[11:20:00.0000] <zcorpan>
yeah that was my conclusion as well, although i haven't thought about it a great deal yet. (we haven't implemented cloning of Files yet)

[11:21:00.0000] <zewt>
i was wondering at one point about the fact that it seems like IDB is allowed to store File references, when permission to access a file shouldn't actually persist

[11:21:01.0000] <zewt>
(don't recall what the answer to that was off-hand)

[11:22:00.0000] <Hixie>
storage lets you store files

[11:22:01.0000] <bga_>
heh copy-on-write means incoming object is recursive Proxy :(

[11:22:02.0000] <bga_>
slow access

[11:22:03.0000] <zewt>
but File is normally a reference to a file, not the actual file contents, right?

[11:23:00.0000] <zcorpan>
does anyone support structured clone for the history api's data argument?

[11:23:01.0000] <zcorpan>
zewt: yes

[11:23:02.0000] <zcorpan>
zewt: you can read the contents with FileReader

[11:23:03.0000] <zewt>
yeah, I know how it works with eg. file inputs

[11:24:00.0000] <zewt>
where the File object essentially acts as your token giving you permission to access the file it references

[11:25:00.0000] <zewt>
the curious part is if you're allowed to store a File in IDB, then it's allowing you to persist that token long-term ... which is useful, but seems at odds with the security model

[11:25:01.0000] <bga_>
fast passing and slow access vs. slow passing and fast access

[11:27:00.0000] <AryehGregor>
Okay, now my tests work very nicely in all browsers: http://aryeh.name/spec/dom-range/test/Range-deleteContents.html

[11:28:00.0000] <Hixie>
AryehGregor: any idea what webmartians is referring to when he says you insulted him?

[11:28:01.0000] <AryehGregor>
Hixie, I didn't see that yet.

[11:28:02.0000] <Hixie>
it doesn't seem like you did

[11:28:03.0000] <Hixie>
so i am confused

[11:28:04.0000] <zewt>
bga: can also selectively COW, eg. make copies of smaller objects but COW for big arrays, ImageData, etc

[11:28:05.0000] <TabAtkins>
I'm also confused.

[11:28:06.0000] <AryehGregor>
Which guy was he again?

[11:28:07.0000] <zcorpan>
TabAtkins: all pass in opera, yay

[11:28:08.0000] <TabAtkins>
zcorpan: Huh?

[11:28:09.0000] <AryehGregor>
Maybe that was directed at me?

[11:29:00.0000] <zcorpan>
uh

[11:29:01.0000] <zcorpan>
yeah

[11:29:02.0000] <zcorpan>
sorry

[11:29:03.0000] <AryehGregor>
Also, they run much faster now, since I run them in parallel.

[11:29:04.0000] <zewt>
heh, I had a response written in that "deprecate alert" thread with "webmartians", but discarded it after his last post; wrote him off as an idiot

[11:29:05.0000] <TabAtkins>
Unrelated: I love Ahem.  Testing line-breaking with it is much better, as you don't have to rely on oddities of precise glyph sizes.

[11:29:06.0000] <zewt>
AryehGregor: i fixed that for you last night; did you get the link?

[11:29:07.0000] <AryehGregor>
Oh, did he get annoyed when I said that we need actual use-cases and not just citations of Windows API features?

[11:30:00.0000] <AryehGregor>
zewt, yeah, I was just looking at that.

[11:30:01.0000] <AryehGregor>
Your fix didn't seem to work for me as-is.

[11:30:02.0000] <AryehGregor>
I think because mine was still timing out in Chrome.

[11:30:03.0000] <zewt>
worked for me in all browsers, and doesn't need to create all of the tests at once

[11:30:04.0000] <AryehGregor>
Anyway, partly I just copied your changes, even though they seemed insignificant compared to what I wound up with at the end of last night (I think we made similar changes in parallel).

[11:30:05.0000] <AryehGregor>
But whatever, it works now and it's fast.

[11:30:06.0000] <TabAtkins>
Hixie: Could you fix the Live DOM Viewer so that pressing Tab while in the markup pane generates a tab, rather than moving focus?

[11:31:00.0000] <zewt>
AryehGregor: FWIW, the response I had typed up and discarded re: timed-out alerts was essentially: saying there are no use cases is a very narrow view, and it's very easy to find use cases

[11:31:01.0000] <AryehGregor>
Although there's a new WebKit failure I need to track down.

[11:31:02.0000] <Hixie>
TabAtkins: isn't that a UA choice?

[11:31:03.0000] <AryehGregor>
zewt, do you have a name I should credit, or is "zewt" good?

[11:31:04.0000] <TabAtkins>
Hixie: Theoretically, but in reality tab always changes focus.

[11:31:05.0000] <zewt>
... *but*, by the time you hit any of those use cases, you're doing things way too complex to use that old API and you should be using a real prompt library

[11:31:06.0000] <AryehGregor>
zewt, well, that may be, but they still have to be stated by someone.

[11:31:07.0000] <Philip`>
TabAtkins: Use spaces instead?

[11:31:08.0000] <Hixie>
TabAtkins: copy and paste a tab from somewhere else :-)

[11:31:09.0000] <TabAtkins>
Philip`: UNACCEPTABLE

[11:31:10.0000] <Hixie>
TabAtkins: i expect he's testing tabbing and whitespace

[11:32:00.0000] <Hixie>
line wrapping of tabs and white-space i should say

[11:32:01.0000] <AryehGregor>
TabAtkins, on GNOME, Ctrl+Shift+u9 works.

[11:32:02.0000] <TabAtkins>
Actually, I just use tabs to indent code, and I have to train myself not to press tab when using LDV.

[11:32:03.0000] <AryehGregor>
/me uses that all the time

[11:32:04.0000] <Philip`>
I thought it was just his usual tab-over-space perversion

[11:32:05.0000] <Hixie>
ah

[11:32:06.0000] <Hixie>
well

[11:32:07.0000] <Hixie>
consider this part of your course in not using tabs to indent code

[11:32:08.0000] <TabAtkins>
Hixie: You're wrong and I hate you.

[11:32:09.0000] <zewt>
AryehGregor: (glenn maynard)

[11:32:10.0000] <Hixie>
we shall cure you in due course!

[11:32:11.0000] <AryehGregor>
zewt, oh, that's you.

[11:32:12.0000] <zewt>
AryehGregor: it doesn't work for you in Chrome? which version--works for me in 9, anyway

[11:32:13.0000] <AryehGregor>
zewt, your version did, but not when I copied the changes to my version.

[11:33:00.0000] <AryehGregor>
My version loaded the iframes more slowly.

[11:33:01.0000] <AryehGregor>
So it timed out.

[11:33:02.0000] <AryehGregor>
Worked when I upped the timeout.

[11:33:03.0000] <zewt>
oh, your webserver is sending different cache headers, I think

[11:33:04.0000] <AryehGregor>
But now that I do it in parallel, I don't need to up the timeout, yay.

[11:33:05.0000] <AryehGregor>
Yeah.

[11:33:06.0000] <zewt>
the file is being cached off mine, but revalidated over and over on yours

[11:33:07.0000] <AryehGregor>
I use lighttpd, and I can't change the cache headers except by editing the central config file and restarting the webserver, AFAICT.

[11:33:08.0000] <zewt>
heh

[11:33:09.0000] <AryehGregor>
(but on the other hand, I save a couple GB RAM compared to Apache+mod_php, so . . .)

[11:34:00.0000] <AryehGregor>
Oh, WebKit doesn't deleteContents() doctypes, it looks like.

[11:34:01.0000] <AryehGregor>
So I did find a not-completely-trivial bug, yay.

[11:34:02.0000] <AryehGregor>
(well, granted, it's pretty trivial)

[11:34:03.0000] <zewt>
a pretty-trivial-but-not-completely-so bug

[11:35:00.0000] <ttepasse>
Huh? rel=next and such are dropped?

[11:35:01.0000] <zewt>
that's probably a bugzilla priority

[11:47:00.0000] <zcorpan>
ttepasse: next wasn't dropped

[11:48:00.0000] <Hixie>
the "Cryptographically strong random numbers" thread doesn't seem to have included any feedback on a spec i work on, so I am not going to be replying to it

[11:48:01.0000] <Hixie>
please let me know if i missed anything there

[11:48:02.0000] <zcorpan>
why is external in the rel list to begin with? it doesn't do anything anywhere

[11:50:00.0000] <zewt>
http://stackoverflow.com/questions/1145880 : |

[11:51:00.0000] <zewt>
people sure find strange contortions to try to avoid harmless validator warnings

[11:55:00.0000] <AryehGregor>
Does Live DOM Viewer work in IE 9 yet, or does the XSS protection stuff still interfere?

[11:56:00.0000] <AryehGregor>
zewt, wouldn't type="email" or type="url" work to solve the problem even better?

[11:57:00.0000] <zewt>
if it's as supported as the attribute he's using, probably

[11:57:01.0000] <zewt>
(no idea whether it is)

[11:57:02.0000] <Hixie>
zewt: commented

[11:59:00.0000] <zewt>
AryehGregor: not so much the particular attribute that bugs me, but the fact that many people treat the end goal of using a validator as "quieting the warnings" instead of "fixing problems"

[11:59:01.0000] <AryehGregor>
Live DOM Viewer works in IE9, yay.

[11:59:02.0000] <AryehGregor>
zewt, that's why validator warnings need to be used with caution.

[11:59:03.0000] <zewt>
like people triaging but trackers with the unspoken goal of "close as many tickets as possible" instead of "fix as many problems as possible"

[12:00:00.0000] <AryehGregor>
I hate that, yeah.

[12:00:01.0000] <AryehGregor>
Oh, IE still won't load saved URLs in Live DOM Viewer.

[12:00:02.0000] <zcorpan>
holy cow http://wiki.whatwg.org/wiki/RelExtensions has a lot of rels

[12:00:03.0000] <AryehGregor>
Oh well.

[12:00:04.0000] <zcorpan>
i guess that's good; the wiki page is working as intended

[12:00:05.0000] <zcorpan>
/me didn't expect that

[12:01:00.0000] <zewt>
didn't expect a wiki page to work? :P

[12:01:01.0000] <zcorpan>
yeah

[12:01:02.0000] <AryehGregor>
You should have more faith in wikis.

[12:02:00.0000] <zewt>
would be more useful sorted by status/keyword instead of keyword, I think

[12:02:01.0000] <AryehGregor>
(although I might be biased ;) )

[12:02:02.0000] <zewt>
wait, can this thing sort?

[12:02:03.0000] <zewt>
hey, it can

[12:02:04.0000] <zewt>
(who knew)

[12:03:00.0000] <volkmar>
vertical progress bars have been removed from the specs or i didn't found where it was mentioned?

[12:05:00.0000] <zcorpan>
http://mathiasbynens.be/notes/touch-icons - time to spec "apple-touch-icon"?

[12:07:00.0000] <zewt>
is there anything in it that's not heavily vendor-specific?

[12:07:01.0000] <bfrohs>
Zewt, Android uses it too

[12:08:00.0000] <zewt>
yeah but it's just mimicking it for compatibility (and I assume it doesn't do eg. the precompose effects)

[12:09:00.0000] <zcorpan>
zewt: you must be new here

[12:10:00.0000] <zewt>
well there's a useful comment if ever there was one, heh

[12:10:01.0000] <Hixie>
zcorpan: i was thinking about the rel registry thing when taking out all the rel values recently

[12:11:00.0000] <Hixie>
zcorpan: i think maybe the way to go is to have the wiki page be a place to avoid clashes, but then for the "approval" process to be integrating the rel values into the spec

[12:11:01.0000] <zewt>
i suppose <link rel=icon> having an equivalent to precomposed could be useful

[12:11:02.0000] <Hixie>
zcorpan: since we have a living spec model now, that's actually viable

[12:12:00.0000] <zewt>
but less so, since with iOS you know in advance what the composed effects are, to know if you need to disable them--in the general case you don't

[12:25:00.0000] <zcorpan>
Hixie: i guess that makes sense

[12:27:00.0000] <Hixie>
i doubt the w3c would ever go for that though, and it'd be silly to have two mechanisms

[12:51:00.0000] <syskk>
I want to know if the navigator.geolocation.getCurrentPosition(callback) callback was triggered because the user clicked on "Share position" in the browser or if it was automatically triggered because the user previously shared it and checked Always share with this website

[12:52:00.0000] <syskk>
is that possible? or any workaround?

[12:52:01.0000] <TabAtkins>
Why do you need that information?

[12:52:02.0000] <syskk>
TabAtkins: I want to automatically redirect the user when he clicks share position but I don't want the redirection to happen if it's triggered automatically

[12:53:00.0000] <TabAtkins>
I still don't understand.  What is the redirection supposed to accomplish?  Why do you want different behavior, if in both cases you're getting the geo info?

[12:54:00.0000] <syskk>
I have a welcome page where the user can either chose to enter a zip code or give geolocation through browser. Once I get that info, the user is redirected to another page but if he comes back to the change location page he will be auto redirected if he previously checked Always share location and won't be able to enter his zip code for example

[12:56:00.0000] <TabAtkins>
Sounds like your "welcome" and "change location" pages have different functionality.  Perhaps they should actually be different pages?

[12:56:01.0000] <zewt>
remember that browsers don't have to ask at all; they might be configured to always allow it

[12:56:02.0000] <syskk>
right, change location could never automatically redirect

[12:57:00.0000] <syskk>
still it would be nice if the callback was triggered by the browser or by a user action

[12:58:00.0000] <TabAtkins>
Is there a way to detect if you're currently sharing your location?  It does seem like a useful scenario.

[12:58:01.0000] <syskk>
maybe itd be possible to do using the timestamp

[12:59:00.0000] <zewt>
I havn't used the geoloc API; I'd expect it'd be useful to be able to passively query it, eg. ask for the location if permission is available, without prompting the user if it's not, eg. for secondary, background features where you don't necessarily want to actively nag the user about them

[12:59:01.0000] <syskk>
well, he knows it when he clicks share position

[13:00:00.0000] <TabAtkins>
syskk: I meant you, the page author.  Looks like there's not.

[13:00:01.0000] <syskk>
zewt has a point too

[13:00:02.0000] <TabAtkins>
So yeah, sounds like useful functionality.

[13:00:03.0000] <TabAtkins>
Both for your and zewt's scenarios.

[13:00:04.0000] <syskk>
TabAtkins: I misread you. thought you said "doesn't seem"

[13:00:05.0000] <TabAtkins>
Send the suggestion to public-geolocationâwo

[13:01:00.0000] <TabAtkins>
Or I could, if you'd prefer.

[13:01:01.0000] <zewt>
most asking-of-permission in current APIs are largely based on "ask the first time the user uses a site feature", but that doesn't always obviously apply for "passive" features...

[13:02:00.0000] <AryehGregor>
Is there some convenient way for an iframe to pass some info up to its parent, other than by modifying its own DOM?

[13:02:01.0000] <zewt>
web messaging?

[13:03:00.0000] <zewt>
(havn't used it so I don't know how implemented it is)

[13:03:01.0000] <AryehGregor>
This is for my deleteContents() tests, I want to report back what the Range is selecting after the deletion.

[13:03:02.0000] <AryehGregor>
I could just encode the information in the DOM somehow, but that's . . . kind of icky.

[13:03:03.0000] <AryehGregor>
I'd prefer that it be a separate test, anyway.

[13:03:04.0000] <zewt>
http://dev.w3.org/html5/postmsg/#web-messaging

[13:04:00.0000] <AryehGregor>
I'd prefer not to rely on a new feature like that unless it's simple and everyone's implemented it interoperably and so on.  Otherwise it might cause extra failures or something tiresome like that.

[13:04:01.0000] <syskk>
I think one way around would be to check the position's timestamp

[13:05:00.0000] <zewt>
don't know if there's anything else--I think that's exactly what that API is meant to solve (not just for iframes, of course)

[13:05:01.0000] <jgraham>
AryehGregor: It's same origin

[13:05:02.0000] <syskk>
if timestamp < now, position was shared in a previous request

[13:05:03.0000] <jgraham>
So you can just make a function call

[13:05:04.0000] <AryehGregor>
Like how?

[13:05:05.0000] <jgraham>
well top is the top-level iframe

[13:05:06.0000] <jgraham>
so top.foo()

[13:05:07.0000] <jgraham>
but don't use top

[13:06:00.0000] <jgraham>
Because your whole test might be run in an iframe

[13:06:01.0000] <AryehGregor>
Should I be running this code in the iframe or the main page?

[13:06:02.0000] <AryehGregor>
And what should I use if not top?

[13:06:03.0000] <jgraham>
I think opener?

[13:06:04.0000] <jgraham>
but that might just be window.open created windows

[13:06:05.0000] <AryehGregor>
Hmm, I just realized that I can't really compare node equality across iframes anyway.

[13:06:06.0000] <arnehass>
AryehGregor: I believe you can use parent.functionName() in the iframe to call on a functionName situated in the parent page

[13:07:00.0000] <AryehGregor>
I guess I'll just have to do the DOM modification thing, although it's a bit weird.

[13:07:01.0000] <arnehass>
haven't played to much with it thought, since I don't really like iframes...

[13:08:00.0000] <TabAtkins>
syskk: I'll send a request to the public-geolocation list, as there's no way to reliably know the information you need.  There are scenarios that can trigger both false positive and false negatives.

[13:08:01.0000] <TabAtkins>
syskk: What your email?  I'll cc you.

[13:08:02.0000] <jgraham>
AryehGregor: Oh yes, parent it is

[13:08:03.0000] <jgraham>
Why do you want to compare node equality?

[13:08:04.0000] <jgraham>
What do you even mean equality?

[13:09:00.0000] <AryehGregor>
jgraham, deleteContents() should change the range's start and end positions to a particular place.

[13:09:01.0000] <AryehGregor>
I need to verify those are the same for the expected and actual.

[13:09:02.0000] <AryehGregor>
Which means the start/end nodes must be in the same place in their respective DOMs.

[13:10:00.0000] <AryehGregor>
Hmm, I can make it separate tests if I can run a function from the iframe in the parent.

[13:10:01.0000] <AryehGregor>
Can I do something like iframe.contentWindow.someFunction()?

[13:10:02.0000] <jgraham>
AryehGregor: Yes

[13:10:03.0000] <AryehGregor>
Okay, good.

[13:10:04.0000] <jgraham>
same origin all these things are unrestricted

[13:11:00.0000] <syskk>
TabAtkins: thanks! olalondeâgc

[13:11:01.0000] <AryehGregor>
Hmm.  I just realized that I'm not actually testing anything in the cases where the range isn't in the actual document.  Oops.

[13:11:02.0000] <AryehGregor>
/me needs to fix that

[13:12:00.0000] <zewt>
the danger of writing tests that aren't regression tests: they're hard to test. heh

[13:15:00.0000] <AryehGregor>
See, I knew my tests weren't good enough.

[13:18:00.0000] <zewt>
need to write meta-tests to test the tests

[13:21:00.0000] <AryehGregor>
jgraham, iframe.contentWindow doesn't seem to have the methods I put on it in the iframe.

[13:22:00.0000] <AryehGregor>
/me Googles it

[13:23:00.0000] <AryehGregor>
Oh, wait, maybe that's just a WebKit bug.

[13:23:01.0000] <AryehGregor>
Boo.

[13:34:00.0000] <TabAtkins>
syskk: You still here?  I've read the Geolocation spec more carefully, and found that your case is already addressed.

[13:34:01.0000] <TabAtkins>
syskk: getCurrentPosition takes three args - a success callback (for when the user grants their location), an error callback (for when they don't), and an options object.

[13:36:00.0000] <TabAtkins>
syskk: In the options, you can define a timeout.  If you set the timeout to 0, the function will return a cached Position if possible (if they'd previously granted permission, and the last Position isn't too old); otherwise, it just immediately fires the error callback without prompting the user.

[13:36:01.0000] <syskk>
TabAtkins: doesn't really help. the success callback is called regardless if the user chose to always share position

[13:36:02.0000] <TabAtkins>
Nope, it isn't.  Check step 3 of the algorithm at http://dev.w3.org/geo/api/spec-source.html#api_description

[13:37:00.0000] <syskk>
ok I will

[13:37:01.0000] <TabAtkins>
"If the value of the timeout variable is 0, invoke the errorCallback (if present)..."

[13:37:02.0000] <Moo-_-_>
hmm

[13:38:00.0000] <TabAtkins>
In order to properly grab the cached Position when it exists, you also have to set a maximumAge on the options object with an appropriately high value.

[13:38:01.0000] <zewt>
hmm, but if there's no cached position (eg. GPS isn't started up), you can't distinguish it "don't already have permission" (don't know if that matters for his case)

[13:38:02.0000] <Moo-_-_>
may I propose new <notsafeinworktag> for HTML?

[13:39:00.0000] <TabAtkins>
zewt: Yeah, that's the one caveat - it doesn't address the case where the user has granted you permission previously (or instructed the browser to auto-grant permission to everyone), but you haven't yet extracted a position, or it's just *really* old.

[13:40:00.0000] <syskk>
TabAtkins: that's what I thought earlier. I can check the timestamp of the cache object and compare with the current time. I think this could solve the problem

[13:41:00.0000] <zewt>
(without squinting too hard at what you're suggesting, it's making brittle-hack alarm bells go off)

[13:41:01.0000] <TabAtkins>
zewt: It sounds like it was an *intended* hack, though.

[13:41:02.0000] <zewt>
TabAtkins: syskk's hack, not yours

[13:42:00.0000] <jamesr_>
can i suggest a <badidea> tag in HTML for new tag proposals?

[13:42:01.0000] <zewt>
zero-timeouts for "nonblocking retrieve from cache but don't wait" is ordinary enough

[13:42:02.0000] <zewt>
jamesr: we already have a syntax for that, <!-- you write them like this -->

[13:43:00.0000] <TabAtkins>
syskk: You don't need to check the timestamp at all.  If the success callback fires, you *know* you got a cached position, not a live one.  If the error callback fires, you get a Position with its 'code' attribute set to TIMEOUT.

[13:44:00.0000] <zewt>
AryehGregor: i'm fiddling around with your iframe stuff (since I havn't needed to mess with iframes very much), and I feel like I'm doing something dumb, because it seems like the <script>s aren't being executed at all

[13:44:01.0000] <TabAtkins>
Geolocation.getCurrentPosition(function(){ /* Permission was already granted. */}, function(){ /* It wasn't granted. /*}, {maximumAge:9999999999999, timeout:0});

[13:44:02.0000] <zewt>
alert(), console.log, even straight-up syntax errors show nothing (in Chrome and FF4)

[13:44:03.0000] <AryehGregor>
zewt, that sounds unlikely.

[13:44:04.0000] <AryehGregor>
alert() and console.log might be suppressed, maybe?

[13:44:05.0000] <zewt>
hit some cache glitches but dealt with those

[13:44:06.0000] <AryehGregor>
From iframes, that is.

[13:45:00.0000] <AryehGregor>
Maybe it also doesn't log errors from iframes?

[13:45:01.0000] <AryehGregor>
I dunno.

[13:45:02.0000] <zewt>
alert maybe, console.log seems unlikely

[13:45:03.0000] <zewt>
and syntax errors more unlikely

[13:45:04.0000] <AryehGregor>
Try having your script put some visible content in the iframe.

[13:45:05.0000] <AryehGregor>
See if that works.

[13:45:06.0000] <zewt>
i know I hit some caching glitches, but I hacked around those to make sure it was reloading

[13:45:07.0000] <syskk>
TabAtkins: clicking the "Share location" in FF/chrome does trigger the success callback so no way to know. I'll do some test and see if I can get something out of the error callback like you suggest

[13:46:00.0000] <zewt>
gah

[13:46:01.0000] <zewt>
it's interpreting the files at text instead of html. that would do it, heh

[13:46:02.0000] <TabAtkins>
syskk: Sounds like a bug, then.

[13:46:03.0000] <zewt>
/me fixes MIME type

[13:46:04.0000] <AryehGregor>
Yeah, I noticed that on your site.

[13:48:00.0000] <jgraham>
alert and console should work from iframes

[13:49:00.0000] <zewt>
yeah, it just wasn't loading the file as HTML at all

[13:50:00.0000] <zewt>
AryehGregor: instead of running the scripts in the iframes, might be simpler to move those entire scripts to the main script and pass them a window object to work on

[13:50:01.0000] <AryehGregor>
Hmm, maybe.

[13:52:00.0000] <zewt>
wonder if you can you create an iframe with no data, to just get a new empty window/document without needing a dummy external resource

[13:52:01.0000] <TabAtkins>
syskk: I'm still sending an email to the list, just modifying it based on the new understanding.

[13:53:00.0000] <TabAtkins>
<iframe src="data:text/html,<!doctype html>"></iframe>

[13:53:01.0000] <TabAtkins>
(Need the doctype to forced the page into standards mode.)

[13:53:02.0000] <TabAtkins>
Alternately, <iframe srcdoc=""></iframe>

[13:53:03.0000] <zewt>
then you get rid of the entire caching issue as a bonus

[13:54:00.0000] <syskk>
TabAtkins: yep.  thanks

[13:57:00.0000] <jgraham>
<iframe src="about:blank"> might work

[13:57:01.0000] <jgraham>
But abut:blank is a bit special

[13:57:02.0000] <TabAtkins>
That'll give you a yucky quirks-mode page.

[13:57:03.0000] <TabAtkins>
Also: it's crazy.

[14:00:00.0000] <TabAtkins>
syskk: Sent, and cc'd you.

[14:00:01.0000] <TabAtkins>
And now, I'm off for the day to go man the booth at GDC.

[14:18:00.0000] <AryehGregor>
Yay, my tests found another spec bug.

[15:12:00.0000] <jamesr>
heycam, yt?


2011-03-03
[16:02:00.0000] <AryehGregor>
Hixie, I think WeBMartians meant that I made an ad hominem attack on Microsoft, by saying they care about developers more than users.

[16:41:00.0000] <heycam>
jamesr, hi (though busy)

[16:41:01.0000] <jamesr_>
heycam: so it seems the web perf WG has decided that requestanimationframe should be in their charter. the FX TF has also decided that requestanimationframe is in their scope

[16:42:00.0000] <jamesr_>
i'm happy to help get it standardized in some form with either group

[16:42:01.0000] <zewt>
what does that have to do with performance? isn't that basically a vsync feature or something?

[16:42:02.0000] <jamesr_>
zewt: that is somewhat mysterious to me as well

[16:42:03.0000] <zewt>
web perf is profiling stuff, right?

[16:43:00.0000] <jamesr_>
previously, yeah

[16:43:01.0000] <jamesr_>
they've decided to expand their charter

[16:43:02.0000] <zewt>
not too familiar with it, but sounds ... sort of contrived, heh

[16:43:03.0000] <heycam>
i think it's ok to go with web perf

[16:44:00.0000] <heycam>
/me must return to svg wg f2f stuff

[16:44:01.0000] <jamesr_>
ok

[16:44:02.0000] <jamesr_>
my main concern with web perf is that nobody from apple is there (i assume that you can keep roc / boris z up to date)

[16:45:00.0000] <roc>
I think it's OK, heycam can represent us there :-)

[16:46:00.0000] <jamesr_>
i guess i could harass smfr into joining the web perf WG

[16:50:00.0000] <AryehGregor>
Google people: are there internal Google aliases that reject all external mail or something?  Some people have been sending me stuff CCd to webkit-editingâgc, but when I reply all, it bounces.

[16:50:01.0000] <jamesr_>
yes, most internal mailing lists bounce external mail

[16:50:02.0000] <jamesr_>
you shouldn't be CC'd on such lists in general

[16:51:00.0000] <jamesr_>
tell whoever is adding you to the CC list that they are doing it wrong ;)

[16:52:00.0000] <jamesr_>
and should probably be having the whole thread on the appropriate external list

[16:53:00.0000] <AryehGregor>
I told them to repost feedback to whatwg, which they by and large did, so all is well.

[16:53:01.0000] <AryehGregor>
Just wondering.

[21:42:00.0000] <Hixie>
is there a mouse capturing api in the platform?

[21:45:00.0000] <Hixie>
i'm doing stuff using dragging around a canvas, and i can't work out how to not have one of these bugs:

[21:45:01.0000] <Hixie>
1) dragging out, releasing the mouse button, and going back in makes the ui drag things around without a button

[21:52:00.0000] <Hixie>
2) dragging out and back in without releeasing the button loses the drag

[23:59:00.0000] <zcorpan>
Hixie: i think annevk worked around those issues in his canvas paintr

[23:59:01.0000] <zcorpan>
http://annevankesteren.nl/2006/08-paintr21

[00:17:00.0000] <zcorpan>
lol "If your web application fails in browsers with scripting disabled, Jakob Nielsenâs dog will come to your house and shit on your carpet." http://diveintohtml5.org/history.html

[00:24:00.0000] <zcorpan>
boo for using sync xhr

[00:43:00.0000] <zcorpan>
hsivonen, MikeSmith:  <meta http-equiv="Content-type" content="text/html; charset=utf-8"><meta charset="utf-8"> validates

[00:43:01.0000] <MikeSmith>
yeah

[00:44:00.0000] <MikeSmith>
validator is currently not doing any check for that at all

[00:44:01.0000] <zcorpan>
known?

[00:44:02.0000] <zcorpan>
oh?

[00:44:03.0000] <MikeSmith>
yeah, I filed a spec bug on this

[00:44:04.0000] <zcorpan>
ok

[00:45:00.0000] <MikeSmith>
I think the spec should just say, "A document must not have more than one character-encoding declaration."

[00:45:01.0000] <MikeSmith>
and leave it at that

[00:45:02.0000] <MikeSmith>
the current spec language doesn't even prohibit multiple <meta http-equiv="Content-type"â¦ instances

[00:47:00.0000] <MikeSmith>
zcorpan: what I think we should implement is: report an error for any character-encoding declaration except the first one (in document order)

[00:48:00.0000] <MikeSmith>
and possibly, also report the location of the first one

[00:49:00.0000] <MikeSmith>
a problem with that is, this part of the code currently has no means for emitting Info-level messages

[00:49:01.0000] <MikeSmith>
it can only emit errors and warnings

[00:50:00.0000] <MikeSmith>
zcorpan: anyway, this is bug : http://www.w3.org/Bugs/Public/show_bug.cgi?id=12054

[00:50:01.0000] <MikeSmith>
of course feel free to comment there if you think anything I said there is wrong, or if you have anything to add

[00:52:00.0000] <zcorpan>
seems fine

[00:53:00.0000] <MikeSmith>
ok

[00:53:01.0000] <karlcow>
Does it send a warning when there are conflicting?

[00:54:00.0000] <karlcow>
s/there/they/

[00:54:01.0000] <karlcow>
/me is going to tes

[00:54:02.0000] <karlcow>
test

[00:54:03.0000] <karlcow>
/me is in typos day

[00:56:00.0000] <MikeSmith>
karlcow: it doesn't do anything currently

[00:57:00.0000] <karlcow>
the direct input does funny things

[01:07:00.0000] <annevk>
email is down

[01:07:01.0000] <annevk>
bah

[01:26:00.0000] <karlcow>
rha bad network here.

[01:27:00.0000] <karlcow>
MikeSmith: interesting thing with the meta and the validator

[01:27:01.0000] <karlcow>
http://validator.w3.org/check?uri=http%3A%2F%2Fwww.la-grange.net%2F2011%2F03%2F03%2Ftest%2Fvalid-charset-02&charset=%28detect+automatically%29&doctype=Inline&group=0&user-agent=W3C_Validator%2F1.2

[01:27:02.0000] <karlcow>
http://validator.w3.org/check?uri=http%3A%2F%2Fwww.la-grange.net%2F2011%2F03%2F03%2Ftest%2Fvalid-charset&charset=%28detect+automatically%29&doctype=Inline&group=0&user-agent=W3C_Validator%2F1.2

[01:28:00.0000] <karlcow>
the order of the meta is different but it always warn about one being wrong.

[01:28:01.0000] <karlcow>
which is the case

[01:28:02.0000] <karlcow>
but it doesn't warn there are two :) indeed

[01:29:00.0000] <karlcow>
I wonder if browsers pick the first one or the last one in the pile

[01:29:01.0000] <zcorpan>
karlcow: http://www.la-grange.net/2011/03/03/test/valid-charset has charset in http content-type

[01:29:02.0000] <zcorpan>
karlcow: which wins over meta

[01:30:00.0000] <karlcow>
ah interesting making a 3rd test

[01:30:01.0000] <zcorpan>
charset detection has already been researched and specified and implemented

[01:31:00.0000] <karlcow>
zcorpan: I would have thought that the meta/charset would win over meta/http

[01:33:00.0000] <karlcow>
http://validator.w3.org/check?uri=http%3A%2F%2Fwww.la-grange.net%2F2011%2F03%2F03%2Ftest%2Fvalid-charset-04&charset=%28detect+automatically%29&doctype=Inline&group=0&user-agent=W3C_Validator%2F1.2

[01:33:01.0000] <karlcow>
here it says there are two

[01:33:02.0000] <karlcow>
"The character encoding specified in the HTTP header (utf-8) is different from the value in the <meta> element (iso-8859-1, utf-8). I will use the value from the HTTP header (utf-8) for this validation."

[01:33:03.0000] <karlcow>
or more exactly it sees there are two

[01:34:00.0000] <zcorpan>
it doesn't seem to be validator.nu that emits that message

[01:41:00.0000] <karlcow>
nope, probably the additional layer of W3C validator for messages

[01:41:01.0000] <hsivonen>
Is my reading comprehension correct that the Chairs "accepted" http://www.w3.org/html/wg/wiki/ChangeProposals/ARIAinHTML5#Details but excluded more than 50% of its proposed edits?

[01:41:02.0000] <hsivonen>
thus effectively formulating a middle ground that wasn't fully represented by any one CP

[01:42:00.0000] <hsivonen>
might have been easier to document which edits were upheld than to say which edits were excluded

[01:42:01.0000] <annevk>
I should have just stayed asleep

[01:42:02.0000] <annevk>
no email no news no nothing

[01:43:00.0000] <annevk>
although I guess I can concentrate more on this blog post on Web Notifications

[01:44:00.0000] <karlcow>
hsivonen: there's a thread in between sam and steve about it http://lists.w3.org/Archives/Public/public-html/2011Mar/thread.html#msg5

[01:44:01.0000] <hsivonen>
karlcow: yeah, so it seems. thanks

[01:45:00.0000] <zcorpan>
annevk: you mean there's nothing that can procrastinate real work?

[01:46:00.0000] <karlcow>
arf http://www.opera.com/press/releases/2011/03/03/

[01:46:01.0000] <karlcow>
>"I'm very concerned," says Standal. "Seventeen is very young, and I am not sure if, at that age, people are ready to use such an application. It's very fast, you know, and it has a lot of features. I think the download requirement should be at least 18."

[01:47:00.0000] <zcorpan>
heh

[01:47:01.0000] <annevk>
zcorpan, well, trying to clean up my inbox is pretty much my job

[01:47:02.0000] <annevk>
it contains bug reports with specs

[01:48:00.0000] <annevk>
but when I do that I'd like to have up to date information

[01:48:01.0000] <hsivonen>
/me wonders how Apple came up with 17

[01:49:00.0000] <hsivonen>
aren't 15, 16, 18 and 21 more common special ages?

[01:49:01.0000] <karlcow>
yes very strange

[01:50:00.0000] <hsivonen>
I wonder how the iUniverse works for young people and people without credit cards

[01:50:01.0000] <jgraham>
floor((15+16+18+21)/4) maybe

[01:50:02.0000] <hsivonen>
I started using Apple products as a minor and without a credit card

[01:51:00.0000] <karlcow>
well I'm an adult (well maybe) and I do not use Mac AppStore specifically because of this credit card policy

[01:52:00.0000] <karlcow>
no shiny new tweetie for me

[01:52:01.0000] <hsivonen>
I was a hassle to get my dad pay for software using his credit cards back when vendors wanted stuff faxed to them

[01:52:02.0000] <hsivonen>
karlcow: don't you have a credit card or do you oppose to registering yours in order to download free stuff?

[01:53:00.0000] <hsivonen>
s/I /It

[01:53:01.0000] <karlcow>
I have credit cards but indeed you are forced to register to download free stuff

[01:57:00.0000] <hsivonen>
I haven't installed any apps from the Mac App Store, either

[01:58:00.0000] <hsivonen>
I'd probably have more credit card activity with Apple if they got rid of the territorial restrictions on movie rentals

[01:58:01.0000] <karlcow>
to their credits, I think the territorial stupidity is coming from the movie industry.

[01:59:00.0000] <hsivonen>
karlcow: that's one possibility.

[01:59:01.0000] <hsivonen>
karlcow: it could also be coming from the laws the Finnish copyright lobby has gotten set up to favor Finnish copyright holders

[01:59:02.0000] <annevk>
yeah, I think it's that each country has their own silly laws

[01:59:03.0000] <hsivonen>
karlcow: or it could come from Apple (incorrectly) thinking that they have to have the movies translated to the local language before they can open the store

[02:01:00.0000] <karlcow>
so many missed opportunities for the movie industry. Which reminds me that I should add that on my next talk on the topic.

[02:01:01.0000] <hsivonen>
but since Apple already sells music in Finland, they have to have had some kind of contact with the local copyright lobby anyway

[02:01:02.0000] <hsivonen>
the book industry is super-sad, too

[02:01:03.0000] <karlcow>
yep

[02:02:00.0000] <hsivonen>
can't get a single e-Ink-based reader device that'd make sense for both English-language and Finnish-language books

[02:02:01.0000] <karlcow>
many people do not understand. At least there are new publishers riding on their own fully digital.

[02:02:02.0000] <hsivonen>
because the broadest selection for English uses Amazon's DRM and the broadest selection for Finnish uses Adobe's DRM

[02:02:03.0000] <zcorpan>
"CDATA sections must start with the character sequence U+003C U+0021 U+005B U+0043 U+0044 U+0041 U+0054 U+0041 U+005B (<![CDATA[)." is easier to read than:

[02:02:04.0000] <zcorpan>
"CDATA sections must start with the character sequence U+003C LESS-THAN SIGN, U+0021 EXCLAMATION MARK, U+005B LEFT SQUARE BRACKET, U+0043 LATIN CAPITAL LETTER C, U+0044 LATIN CAPITAL LETTER D, U+0041 LATIN CAPITAL LETTER A, U+0054 LATIN CAPITAL LETTER T, U+0041 LATIN CAPITAL LETTER A, U+005B LEFT SQUARE BRACKET (<![CDATA[)."

[02:03:00.0000] <hsivonen>
zcorpan: that bit of the spec is putting specifiers ahead of implementors anyway. :-)

[02:03:01.0000] <hsivonen>
in other ways that is

[02:04:00.0000] <karlcow>
"CDATA sections must start with the character sequence "<![CDATA[" (U+003C U+0021 U+005B U+0043 U+0044 U+0041 U+0054 U+0041 U+005B)"

[02:04:01.0000] <karlcow>
even easier to read?

[02:04:02.0000] <zcorpan>
karlcow: yeah maybe

[02:05:00.0000] <hsivonen>
are Julian's CPs about slashes in charset all about the content-type sniffing algorithm?

[02:05:01.0000] <hsivonen>
or does he have CPs that affect HTML parsing?

[02:13:00.0000] <hsivonen>
where can I locate the different proposals that are referred to by proposal numbers in the script execution thread?

[02:18:00.0000] <hsivonen>
oh. there's http://www.w3.org/2002/09/wbs/40318/issue-125-objection-poll/

[02:18:01.0000] <hsivonen>
I guess I need to take the time to object to it.

[02:18:02.0000] <hsivonen>
I'd appreciate it if I could fix bugs instead of spending time to object to these

[02:23:00.0000] <zcorpan>
opera has now removed uts22 charset alias matching, fwiw

[02:24:00.0000] <annevk>
in public builds?

[02:25:00.0000] <zcorpan>
i thought i saw it in a changelog of a snapshot

[02:25:01.0000] <zcorpan>
don't remember which and it seems i can't access the desktop team site right now

[02:25:02.0000] <karlcow>
annevk: http://my.opera.com/desktopteam/blog/2011/02/17/a-first-glimpse-at-barracuda

[02:25:03.0000] <karlcow>
"CORE-21407 remove support for UTS22 Â§1.4 charset alias matching"

[02:26:00.0000] <annevk>
nice

[02:27:00.0000] <karlcow>
the changelog of Barracuda is quite impressive

[02:30:00.0000] <hsivonen>
responded to http://www.w3.org/2002/09/wbs/40318/issue-125-objection-poll/results

[02:39:00.0000] <karlcow>
http://www.ecyrd.com/timeismoney/

[02:39:01.0000] <karlcow>
for people who loves meetings

[02:40:00.0000] <zcorpan>
annevk: i would imagine showing notification in-window first and having a button on the notification to opt-in to os-level notification for the origin

[02:40:01.0000] <zcorpan>
annevk: and an easy way to opt-out again

[02:42:00.0000] <annevk>
yeah, Hixie proposed that

[02:42:01.0000] <annevk>
well, that was his design

[02:42:02.0000] <annevk>
but apparently people want to know things upfront and such

[02:42:03.0000] <annevk>
but maybe we should just not cater to them?

[02:43:00.0000] <zcorpan>
show a notification upfront? :)

[02:43:01.0000] <annevk>
yeah, but they didn't quite like that either

[02:43:02.0000] <jgraham>
Umm, that sounds quite complex

[02:43:03.0000] <annevk>
I forgot where this was discussed

[02:44:00.0000] <annevk>
and I rather have this be someone else their problem

[02:44:01.0000] <jgraham>
as you can't just hand off to an OS notification mechanism

[02:46:00.0000] <annevk>
rel=pingback unused?

[02:46:01.0000] <annevk>
has this person not heard of WordPress?

[03:17:00.0000] <zcorpan>
apparently

[03:20:00.0000] <zcorpan>
/me filed that bug btw

[03:29:00.0000] <hsivonen>
hmm. looks like @opera has "space astronauts" instead of architecture astronauts working on network operations

[03:31:00.0000] <zcorpan>
hmm?

[03:31:01.0000] <benschwarz>
adactio Whatup!

[03:32:00.0000] <adactio>
benschwarz: Nice work on HTML5 for developers â lovely stuff.

[03:32:01.0000] <benschwarz>
adactioâThanks. I enjoyed seeing your tweet

[03:57:00.0000] <annevk>
hsivonen, what do you mean?

[03:59:00.0000] <hsivonen>
annevk: https://twitter.com/#!/opera/status/43254428245032961

[03:59:01.0000] <annevk>
:)

[04:01:00.0000] <adactio>
I have a niggling doubt about the definition of the the figure element that I'd like to get clarified http://www.whatwg.org/specs/web-apps/current-work/multipage/grouping-content.html#the-figure-element

[04:01:01.0000] <adactio>
"The figure element http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#represents some http://www.whatwg.org/specs/web-apps/current-work/multipage/content-models.html#flow-content, optionally with a caption, that is self-contained and is typically referenced as a single unit from the main flow of the document."

[04:02:00.0000] <adactio>
Is it indeed "the document" that we're talking about or is it actually "containing sectioning content"?

[04:02:01.0000] <adactio>
(I suspect it is indeed the whole document but I just want to make sure)

[04:07:00.0000] <karlcow>
I wonder if a space astronauts is like vocal singer

[04:07:01.0000] <annevk>
adactio, it's the whole document

[04:08:00.0000] <adactio>
annevk: Thanks. That's what I thought.

[04:08:01.0000] <annevk>
adactio, e.g. you might have a bunch of graphs in an appendix referenced from the main text

[04:11:00.0000] <hsivonen>
regarding http://dev.w3.org/html5/status/formal-objection-status.html : Have the FOs to adopting HTML5 as the WGs "basis for review" been withdrawn?

[04:12:00.0000] <annevk>
oh right

[04:12:01.0000] <annevk>
I need to submit a CCP today

[04:13:00.0000] <hsivonen>
annevk: which ISSUE?

[04:21:00.0000] <annevk>
140

[04:36:00.0000] <hsivonen>
I can't work out from Noah's CP if a "Conforming HTML5 Document" is allowed to have stuff in svg or math subtrees

[04:37:00.0000] <hsivonen>
also, I can't work out from Anne's current CCP if a "Conforming Document" is allowed to have stuff in svg or math subtrees

[04:37:01.0000] <hsivonen>
and with both CPs: which stuff?

[04:39:00.0000] <zewt>
zcorpan: seems like it may be important to be able to request permission to show os-level notifications in advance; the "ask on first use" permission model (of eg. geolocation) doesn't really apply, since by the time you need to show a notification, it's too late

[04:41:00.0000] <hsivonen>
does anyone remember what's a good summary of the aria:foo vs. aria-foo episode?

[04:41:01.0000] <zcorpan>
zewt: yeah

[04:41:02.0000] <hsivonen>
use case: explaining why smil:foo is bad for the exact same reasons as aria:foo

[04:43:00.0000] <zewt>
is anything actually using the web permissions spec yet?

[04:44:00.0000] <annevk>
hsivonen, there's probably some emails on www-tag explaining that

[04:46:00.0000] <zcorpan>
http://lists.w3.org/Archives/Public/www-tag/2008Apr/0244.html ?

[04:48:00.0000] <hsivonen>
zcorpan: that one explains that IBM threw its weight behind aria-foo but it doesn't explain the technical problem fully

[04:48:01.0000] <hsivonen>
looking at my own emails to www-tag, I don't see a nice summary among my own emails, either

[04:48:02.0000] <annevk>
http://lists.w3.org/Archives/Public/www-tag/2008Apr/0235.html

[04:48:03.0000] <annevk>
is mine, not very good though

[04:48:04.0000] <annevk>
but highlights some of the technical issues

[04:49:00.0000] <hsivonen>
annevk: thanks. that's the best one so far

[04:50:00.0000] <zewt>
heh the quote in that mail

[04:50:01.0000] <zewt>
doesn't it basically say "if we spend some cost, we can change the cost/benefit ratio"

[05:28:00.0000] <jgraham>
so why doesn't http://software.hixie.ch/utilities/js/live-dom-viewer/saved/858 work in webkit?

[05:31:00.0000] <zewt>
works in chrome

[05:34:00.0000] <zcorpan>
there's something weird with chrome: if i just load a saved livedomviewer, it doesn't run scripts until i edit the script contents in the input

[05:35:00.0000] <zcorpan>
security feature?

[05:37:00.0000] <zewt>
what version? seems normal in 9

[05:38:00.0000] <zewt>
oh, it displays but I don't know if the onload is working

[05:38:01.0000] <zcorpan>
dev 11.0.686.1

[05:38:02.0000] <zewt>
ah yeah contentDocument is undefined

[05:40:00.0000] <zewt>
looks like the data: URL isn't considered same-origin to the page itself

[05:41:00.0000] <zewt>
Unsafe JavaScript attempt to access frame with URL data:text/html,iframe with data: uri from frame with URL http://software.hixie.ch/utilities/js/live-dom-viewer/?... Domains, protocols and ports must match.

[05:41:01.0000] <bga_>
yeah

[05:42:00.0000] <bga_>
in ff all ok

[05:42:01.0000] <bga_>
http: !== data: formally

[05:43:00.0000] <bga_>
zewt document.write is workaround

[05:44:00.0000] <zewt>
oddly doesn't work in FF3 (iframe is undefined); works in 4

[05:46:00.0000] <bga_>
btw this behavior is usefull for sandboxing

[05:46:01.0000] <zewt>
not if it's not consistent, though

[05:47:00.0000] <zewt>
doesn't help sandboxing if it's not sandboxed in FF4

[05:47:01.0000] <bga_>
partial solution for webkit

[05:47:02.0000] <zewt>
i assume chrome is strict about it for some XSS-related reason or something like that

[05:49:00.0000] <bga_>
htmlfile for IE but i havent discovered it deeply

[05:50:00.0000] <jgraham>
Right, I am kind of hoping that that is special magic for data: uris

[05:50:01.0000] <jgraham>
Like Opera and Firefox have

[05:50:02.0000] <jgraham>
Because making data: cross-origin is annoying

[05:51:00.0000] <jgraham>
and document.write doesn't work for my case

[06:50:00.0000] <annevk>
answered 126, left 125 alone (would have had the same arguments as hsivonen)

[06:55:00.0000] <annevk>
Hixie, PDF version link of the spec is broken?

[07:10:00.0000] <webr3>
hsivonen, around?

[07:11:00.0000] <hsivonen>
webr3: yes

[07:12:00.0000] <webr3>
cool, re HTML+RDFa1.1 - would you be happier if there was /no/ mention at all of xmlns in that doc (html host lang for rdfa core)

[07:12:01.0000] <webr3>
or, mentioned only for processors for backwards compat with xhtml+rdfa1.0 with a text/html mime type

[07:13:00.0000] <hsivonen>
webr3: I'd be happier if neither RDFa in HTML nor RDFa in XHTML relied on xmlns:foo

[07:14:00.0000] <hsivonen>
and compat with existing content was achieved by hardwiring property names

[07:15:00.0000] <webr3>
we can't do that though sadly, there are too many to hard wire

[07:16:00.0000] <webr3>
we're stuck int hat we've done everything to get rid of it, but have several million docs out there with it to handle for bc

[07:16:01.0000] <webr3>
ack, moving topic in meeting - will pick up at a later date

[07:16:02.0000] <hsivonen>
webr3: don't those several million all use a handful of vocabs? Facebook, Google, Yahoo!, CC, DC?

[07:18:00.0000] <webr3>
we're moving to hard wire them (well for processors) - but doesn't handle all of them, will only handle some

[07:18:01.0000] <webr3>
and we have in charter the bc thing, so can't avoid

[07:19:00.0000] <webr3>
we've made it so authors can forget movign forward, and we don't mention xmlns, /but/ the extra rules needed to handle bc for text/html are goign to make it prominent in that doc

[07:19:01.0000] <hsivonen>
webr3: charters are set by the people in the WG, so it's not really credible to point to charter as something that forces you

[07:19:02.0000] <webr3>
so 50+ mentions in HTML+RDFa1.1 - and 1 in rdfa core :|

[07:22:00.0000] <Philip`>
Instead of mentioning "xmlns" explicitly, you could discourage people from using it by calling it "U+0078 LATIN SMALL LETTER X, U+006D LATIN SMALL LETTER M, U+006C LATIN SMALL LETTER L, U+006E LATIN SMALL LETTER N, U+0073 LATIN SMALL LETTER S"

[07:31:00.0000] <karlcow>
Philip`: not sure, that would encourage perverts

[07:34:00.0000] <annevk>
zewt, hey, you around

[07:34:01.0000] <annevk>
zewt, http://www.w3.org/2006/webapi/track/issues/35

[07:34:02.0000] <annevk>
it seems form submission works by dispatching a synthetic submit event

[07:36:00.0000] <annevk>
it also seems that Ian described "form submission" in the wrong way

[07:36:01.0000] <annevk>
it is triggered by the submit event, but it is not defined that way

[07:38:00.0000] <annevk>
/me filed http://www.w3.org/Bugs/Public/show_bug.cgi?id=12230

[07:42:00.0000] <zewt>
looks like we came to the same conclusions he did

[07:43:00.0000] <annevk>
yeah, that's positive

[07:43:01.0000] <annevk>
I'm leaning towards only initEvent() resetting stuff

[07:43:02.0000] <annevk>
and then making the first argument of initEvent optional too

[07:44:00.0000] <zewt>
i think like you suggested, resetting in init*Event makes most sense--prevents the canceled flag from being set and then the cancel flag from being unset (inconsistent state), and avoids both the problems of early-reset and late-reset during dispatch

[07:44:01.0000] <annevk>
yup

[07:44:02.0000] <annevk>
and when we get fancy-objects I guess we should let initEvent take an object

[07:44:03.0000] <annevk>
instead of a series of arguments

[07:45:00.0000] <annevk>
so you can easily set all the properties

[07:45:01.0000] <annevk>
and then "deprecate" init*Event and not allow them on new event objects

[07:45:02.0000] <zewt>
the "set the properties manually" idea would be nice but that seems way too different from the current model where most event properties are readonly

[07:45:03.0000] <karlcow>
http://robert.accettura.com/blog/2011/03/03/wanted-native-js-encryption/

[07:46:00.0000] <annevk>
zewt, oh yeah, we could do that too still...

[07:46:01.0000] <annevk>
zewt, they'd still be readonly while dispatching

[07:46:02.0000] <zewt>
i think it'd need to ... yeah what you said

[07:46:03.0000] <zewt>
so you can't change them for trusted events, in particular

[07:46:04.0000] <annevk>
hmm, gotta run again; should be online at tenish though

[07:46:05.0000] <zewt>
it's tenish now, here :P

[07:46:06.0000] <zewt>
(okay, elevenish)

[07:46:07.0000] <annevk>
timezones

[07:48:00.0000] <zewt>
should also be defined that non-trusted submit events perform their default action, if it isn't (iirc only click is explicitly mentioned)

[08:13:00.0000] <Moo-_-_>
karlcow: wanted native gzip too :)

[08:56:00.0000] <MikeSmith>
if anybody is interested in doing some book writing on HTML5, please let me know. I have an acquisitions editor I can put you in contact with

[08:56:01.0000] <MikeSmith>
ping me here or DM me or e-mail me at mikeâwo

[09:11:00.0000] <jgraham>
MikeSmith: I totally read DM as "Dungeon Master"

[09:11:01.0000] <MikeSmith>
heh

[09:48:00.0000] <TabAtkins>
Can <object>'s contents be thought of as accessibility fallback?  I'd dismissed that offhand earlier, but anne is bringing it up as a solution.

[09:49:00.0000] <bfrohs>
/me thought that's what it was already

[09:49:01.0000] <TabAtkins>
I thought it was functionality fallback, but I may be drawing a distinction that doesn't exist.

[09:49:02.0000] <jgraham>
I thought this distinction was important for <video>?

[09:49:03.0000] <jgraham>
Or was that some other distinction?

[09:50:00.0000] <jgraham>
/me tired

[09:50:01.0000] <TabAtkins>
I don't... I don't know.  I'm confused now.

[09:50:02.0000] <jgraham>
In any case I disagree with anne I think

[09:50:03.0000] <jgraham>
<object> is worse than <canvas>

[09:50:04.0000] <zewt>
using canvas as an IMG seems questionable, since they're very different things (eg. progressive image rendering is very IMG-specific)

[09:51:00.0000] <jgraham>
zewt: It seems natural to load an image with a declarative src and then draw on it

[09:51:01.0000] <TabAtkins>
jgraham: In that case you can just use <img> and then draw it in, though.

[09:51:02.0000] <zewt>
what would it mean? would it be immutable while it's loading (like an img), and only allow drawing ops after the load finishes?

[09:52:00.0000] <TabAtkins>
I'd be inclined to say "don't touch it until you see a load, because it'll explode".

[09:52:01.0000] <zewt>
(eg. act as if you stuck an img on top of the canvas, then blitted the img onto the canvas and deleted the image at onload)

[09:52:02.0000] <TabAtkins>
Alternately, interacting with it between the time you set @src and when 'load' fires will abort the load.

[09:53:00.0000] <TabAtkins>
That counts as "explode"

[09:53:01.0000] <TabAtkins>
jgraham: If you could comment on why <object> is bad news, that would be nice.  I can't formulate a forceful enough objection.

[09:55:00.0000] <jgraham>
TabAtkins: For all the normal reasons that <object> is bad

[09:55:01.0000] <TabAtkins>
I'm insufficiently familiar with why <object> is bad, I've just picked up the religion.

[09:55:02.0000] <zewt>
a lot of stuff currently specced for img would seem to need to be defined for canvas (onload, "fully decodable" and so on)--i'd hope there's a simpler way

[09:55:03.0000] <jgraham>
It tries to do many things and none of them well

[09:56:00.0000] <jgraham>
So you don't get media-specific apis and so on

[09:56:01.0000] <TabAtkins>
zewt: All those are already defined, so it would just be a matter of "do [this]".

[09:57:00.0000] <zewt>
they're defined for images, canvas isn't complicated by them

[09:57:01.0000] <TabAtkins>
jgraham: Is there much in the way of media-specific APIs for <img>?  I grok why we did <video>/<audio> instead of extending <object>.

[09:57:02.0000] <TabAtkins>
zewt: I don't understand what distinction you're trying to draw.  All the algorithms are well-defined and can be trivially reused.

[09:58:00.0000] <TabAtkins>
None of them depend on the name of the element.

[09:59:00.0000] <zewt>
(let me reread your mail and think for a bit)

[09:59:01.0000] <zewt>
(not that I'll necessarily have any ideas)

[09:59:02.0000] <zewt>
hmm... seems like the obvious, but impossible, solution would be to put the alternate data in the children of img; impossible since img can't have children, of course

[10:00:00.0000] <TabAtkins>
Yes, indeed.  That's why I'm turning to the idea of using the *other* image element.

[10:00:01.0000] <zewt>
my first impression would be to define another tag which is completely synonymous with <img> but has children, eg. <cimg>, sharing 99% of the spec and (preferably) the same object type--existing only to syntactically allow it to have descendents

[10:01:00.0000] <TabAtkins>
Didn't somebody suggest doing that for <image>?

[10:01:01.0000] <zewt>
don't know

[10:01:02.0000] <bfrohs>
TabAtkins: I think so

[10:14:00.0000] <zewt>
another possibility would be something like <img src=foo.jpg id=foo><fallback for=foo>...</fallback>, which degrades a bit more nicely

[10:15:00.0000] <TabAtkins>
That seems weirder.

[10:15:01.0000] <zewt>
(modelling label, of course)

[10:19:00.0000] <TabAtkins>
presumably <fallback> wouldn't render if the element that it was for rendered correctly?

[10:19:01.0000] <zewt>
yeah, something like that--something like "hide this element by default, and show it if the target is in an error state"

[10:25:00.0000] <zewt>
degradation would require users to have a script to hide <fallback> when it's not supported, but image loading would be unchanged

[10:45:00.0000] <AryehGregor>
Hixie, could you get me sample execCommand() usage in the wild?

[10:45:01.0000] <AryehGregor>
Probably I should also research some major WYSIWYG implementations.

[11:04:00.0000] <TabAtkins>
Is there any strong technical objection against the 'beforeprint' event that IE fires?

[11:06:00.0000] <TabAtkins>
Google docs changes the rendering of the document for printing if you hit Ctrl+P or select Print from the in-app menu, but it can't tell if you hit Print from the browser's menu.

[11:06:01.0000] <Ms2ger>
media=print

[11:07:00.0000] <TabAtkins>
That doesn't let you run arbitrary JS.

[11:07:01.0000] <TabAtkins>
Unless you can have matchMedia?

[11:07:02.0000] <TabAtkins>
Hmm...

[11:07:03.0000] <Ms2ger>
I was about to mention that

[11:12:00.0000] <TabAtkins>
I suggested that we implement matchMedia instead.

[11:13:00.0000] <TabAtkins>
Now, back to writing an email summarizing a subtle technical issue with floats.

[11:14:00.0000] <Ms2ger>
/me screams at CSS2.1

[11:14:01.0000] <TabAtkins>
I'd just scream at floats.  They're defined SO BADLY.

[11:14:02.0000] <TabAtkins>
I don't think anyone recognized at the time how complex they are.

[11:15:00.0000] <Ms2ger>
They're not hard, if you use them as intended

[11:15:01.0000] <TabAtkins>
No, they're always hard.  You just don't realize it.

[11:15:02.0000] <Ms2ger>
Just don't start making float-based layouts

[11:16:00.0000] <Ms2ger>
(Hi most of the web)

[11:16:01.0000] <TabAtkins>
Perfectly natural-looking use-cases turn out to be subtly odd

[11:16:02.0000] <Ms2ger>
dropcaps!

[11:16:03.0000] <TabAtkins>
For example, I'm almost certain the spec doesn't cover the case exercised by: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/859

[11:17:00.0000] <TabAtkins>
(Remove the / in front of the float to swap behavior.)

[11:17:01.0000] <TabAtkins>
The float drops to the second line, some of the content following it jumps to the previous line, while some of the content that was previous on the same line as it drops to the line below it.

[11:17:02.0000] <TabAtkins>
s/previous/previously/

[11:17:03.0000] <zewt>
sounds like some kind of dance routine

[11:17:04.0000] <Ms2ger>
I'm pretty certain I can find undefined things in most of CSS2.1

[11:18:00.0000] <Ms2ger>
Even if they're not explicitly called out

[11:18:01.0000] <TabAtkins>
Oh, indeed.

[11:18:02.0000] <Ms2ger>
Hence the scream

[12:00:00.0000] <AryehGregor>
/me realizes his definition of node position is totally, totally broken

[12:26:00.0000] <emersonvinicius>
Hello everybody

[12:27:00.0000] <emersonvinicius>
sorry my english, but what the diference of spec whatwg instead w3c?

[12:28:00.0000] <Ms2ger>
http://www.whatwg.org/specs/web-apps/current-work/multipage/introduction.html#is-this-html5? explains it better than I ever could

[12:28:01.0000] <emersonvinicius>
Ms2ger: thx

[12:40:00.0000] <AryehGregor>
Note to all who may be concerned: doing simultaneous alert()s in fifty or so iframes at once makes Firefox unhappy.

[12:41:00.0000] <TabAtkins>
Anyone mind if I rewrite every sentence involving floats to a new, subtly backward-incompatible version that actually makes sense?

[12:41:01.0000] <AryehGregor>
In what spec?

[12:41:02.0000] <Ms2ger>
CSS

[12:41:03.0000] <Ms2ger>
And no

[12:41:04.0000] <zewt>
at least in ff4 i'll get to stop killing the entire browser every time I inadvertently cause an alert loop. heh

[12:42:00.0000] <AryehGregor>
Yeah, but that doesn't help if you create fifty alerts from fifty separate iframes.  Apparently the "don't show more" box doesn't work then.

[12:43:00.0000] <TabAtkins>
Sounds like a good rick-rolling situation.

[12:43:01.0000] <zewt>
i havn't squinted hard enough at the "pause" part of the spec, but I'd expect an alert (of any modal type) to pause scripts on the whole window, so you can only have one alert at a time even across iframes

[12:43:02.0000] <zewt>
(i know that's the case with a single document; just not sure off-hand how that translates to iframes)

[12:45:00.0000] <zewt>
oh, since it pauses the event loop, and iframes are in the same event loop, it should pause all iframes in the window together

[12:51:00.0000] <zewt>
same bug as async scripts running during prompts, i guess

[13:03:00.0000] <Hixie>
AryehGregor: i dunno how much use it'll be but http://aupeople.com.au/1/aupeople2/read.php?tid=60099 is a random sample of some pages with "execCommand(" and "<script"

[13:03:01.0000] <Hixie>
AryehGregor: i don't have an easy way to get pages that have JS files that use execCommand(, which unfortunately is going to be the majority of your interesting cases

[13:03:02.0000] <Hixie>
AryehGregor: but e.g. i'm sure google docs uses it

[13:03:03.0000] <AryehGregor>
Ah, okay.

[13:03:04.0000] <AryehGregor>
Yeah, it's probably best to look at specific high-profile examples.

[13:04:00.0000] <Hixie>
yeah

[13:04:01.0000] <bfrohs>
Google Docs, AFAIK, does not use execCommand anymore. They ran into a ton of inconsistencies with browsers and I believe they ended up creating their own API for it in javascript (create characters off-screen, take measurements, and move them into place).

[13:05:00.0000] <Hixie>
hm, possible

[13:05:01.0000] <TabAtkins>
Docs does EVERYTHING manually.

[13:05:02.0000] <Hixie>
it'll still be interesting though as it'll be able to show the use cases that are important

[13:06:00.0000] <bfrohs>
Yeah, that's very true.

[13:06:01.0000] <bfrohs>
Gmail/hotmail/etc WYSIWYG editors as well.

[13:21:00.0000] <annevk>
I really like my idea of removing all initXXXEvent in favor of initEvent(object)

[13:21:01.0000] <annevk>
well, removing all future initXXXEvent

[13:26:00.0000] <jamesr__>
i never understood why i have to create a mouse event and then init it before it's really a mouse event

[13:26:01.0000] <zewt>
it just sets the properties, since most of them are read-only

[13:27:00.0000] <annevk>
so yeah, the alternative would be removing all future initXXXEvent in favor of read-write attributes before and after dispatch

[13:28:00.0000] <annevk>
but the initEvent() design is probably slightly better, as that also cleanly resets the "trusted flag" and maybe also the "propagation flag" and such if we decided to do that

[13:28:01.0000] <zewt>
could deal with the getters problem by just defining it as operating on a copy, eg. var copy = {}; for(key in obj) { copy[key] = obj[key]; } but sorting the keys, which would be a simple way of defining how getters are called

[13:28:02.0000] <zewt>
(doesn't work for structured clone, but works here since it's not recursive)

[13:28:03.0000] <annevk>
heycam can sort that out :)

[13:29:00.0000] <annevk>
though it should allow arbitrary nested objects, e.g. for CustomEvent

[13:29:01.0000] <zewt>
having properties be writable when not in dispatch would be nicer, but sort of unusual behavior

[13:31:00.0000] <zewt>
wonder if there's any precedent for that--properties which are only conditionally read-only

[13:31:01.0000] <heycam>
i like the idea of just writable properties on Events

[13:31:02.0000] <heycam>
instead of 50-argument init methods

[13:31:03.0000] <zewt>
either idea gets rid of the horrible init methods

[13:31:04.0000] <othermaciej>
giant init methods suck

[13:32:00.0000] <othermaciej>
otoh it is weird if you can alter the property of an event being dispatched by the UA

[13:32:01.0000] <othermaciej>
I guess altering any properties would have to clear the "trusted" flag

[13:32:02.0000] <zewt>
othermaciej: needs to be read-only when the dispatch flag is set

[13:33:00.0000] <zewt>
that'd be weird--setting a property would effectively imply preventDefault for most eventts, which would be confusing

[13:34:00.0000] <annevk>
heycam, the idea was to have initEvent(object) instead

[13:34:01.0000] <heycam>
annevk, ah. that works too.

[13:34:02.0000] <annevk>
writable attributes does not solve the problem of resetting some flags not exposed by attributes

[13:34:03.0000] <heycam>
right, ok

[13:34:04.0000] <heycam>
i wasn't really considering them

[13:35:00.0000] <annevk>
e.g. the moment you modify you want the "trusted flag" to be false

[13:35:01.0000] <heycam>
aha

[13:35:02.0000] <heycam>
well that you could do

[13:35:03.0000] <annevk>
defining that for each attribute would be kind of weird

[13:35:04.0000] <heycam>
but you couldn't then reset it to true

[13:35:05.0000] <heycam>
actually you never want that do you

[13:35:06.0000] <zewt>
i think the current readonly flags in events should stay readonly (at least during dispatch), not silently clear trusted

[13:35:07.0000] <annevk>
heycam, yeah, it would never be set back to true

[13:36:00.0000] <heycam>
you could just make the writable attributes also set the internal trusted flags, it's easy enough

[13:36:01.0000] <heycam>
/me doesn't mind either way

[13:36:02.0000] <annevk>
yeah, it could be done, it just seems less intuitive

[13:37:00.0000] <annevk>
zewt, this is for when a trusted event is dispatched and then modified after dispatch

[13:37:01.0000] <zewt>
annevk: right, I'm saying you shouldn't be able to modify it during dispatch at all

[13:38:00.0000] <annevk>
I don't think I suggested otherwise

[13:38:01.0000] <zewt>
<annevk> e.g. the moment you modify you want the "trusted flag" to be false <- modify when? if you modify outside of dispatch it doesn't matter (trusted will be reset on dispatch anyway)

[13:40:00.0000] <zewt>
i guess i'm assuming the trusted flag is only important during dispatch

[13:42:00.0000] <annevk>
i want isTrusted to always be correct

[13:42:01.0000] <annevk>
anyway, if not for the "trusted flag" it would also go for the "canceled flag"

[13:42:02.0000] <zewt>
then initEvent(object) seems simpler--one entry point to clear the flag

[13:42:03.0000] <annevk>
and for that using initEvent() is also better, as otherwise you'd have to set an attribute to reset it...

[13:44:00.0000] <Hixie>
yeah this CDATA paragraph is ridiculous

[13:44:01.0000] <Hixie>
what was i thinking

[13:45:00.0000] <zewt>
i was assuming there'd still be initEvent() for the base event flags, and only the additional properties would be writable

[13:46:00.0000] <zewt>
eg. e.initEvent("click", true, true); e.offsetX = 10; ...

[13:47:00.0000] <Hixie>
(please don't let events be modified during dispatch)

[13:47:01.0000] <Ms2ger>
/me tries to get Hixie back in the business of writing evil test cases

[13:54:00.0000] <annevk>
Hixie, some browsers allow it, but yeah, that's the plan

[13:54:01.0000] <annevk>
zewt, eww

[13:57:00.0000] <zewt>
might be sort of handy that you can initEvent(object) with the same object multiple times (though of course you could implement that manually, copying properties from a saved object)

[14:05:00.0000] <Hixie>
nessy: so, it's likely going to be time to actually do this multitrack thing soon. it seems there's been lots of discussion about it in public-html; is there a summary anywhere of the current thinking?

[14:05:01.0000] <nessy>
Hi Hixie

[14:05:02.0000] <Hixie>
in particular, list of use cases, implementation constraints, anything like that?

[14:06:00.0000] <nessy>
try this: http://www.w3.org/WAI/PF/HTML/wiki/Media_Multitrack_Media_API

[14:06:01.0000] <nessy>
I'll be working with Eric Carlson on a change proposal

[14:07:00.0000] <nessy>
the proposal that Microsoft did is too limited and only restricted to audio tracks

[14:08:00.0000] <Hixie>
that page is great

[14:09:00.0000] <Hixie>
i considered reopening http://www.w3.org/Bugs/Public/show_bug.cgi?id=9452 but i wasn't sure whether that was appropriate or not

[14:09:01.0000] <Hixie>
since we had agreed to assign it to the tf

[14:09:02.0000] <Hixie>
and then it got closed and escalated while assigned to the tf

[14:10:00.0000] <AryehGregor>
Okay, deleteContents() is probably finished.  Hurrah.

[14:12:00.0000] <annevk>
zewt, I don't see why we'd disallow that

[14:13:00.0000] <zewt>
just mean, one (minor) handy side-effect of the init(object) approach

[14:14:00.0000] <annevk>
ah k

[14:16:00.0000] <annevk>
once we have that initEvent(object) stuff we could also make that automatic

[14:16:01.0000] <annevk>
document.createEvent(interface, initObject)

[14:16:02.0000] <nessy>
yeah, I think they worked through all the remaining open bugs and just escalated them to issues - though some slipped the cracks - I don't claim to understand

[14:16:03.0000] <annevk>
or maybe new MouseEvent(initObject) at some point... dunno though

[14:17:00.0000] <annevk>
would be a lot of additional things to test for somewhat minor benefit

[14:17:01.0000] <annevk>
pretty easy to make these things way more complicated than they need to be because the problems are so simple

[14:17:02.0000] <nessy>
Hixie: you can either try and work through it now and understand all the options etc, or you can wait until the call for change proposals closes and you have some more thought-through proposals to work through

[14:17:03.0000] <zewt>
doesn't seem very important to have a lot of redundant shortcuts for event init

[14:18:00.0000] <nessy>
the main problem we still haven't looked at is how to actually render all this stuff - and how to address it through CSS

[14:18:01.0000] <nessy>
that's not in that wiki page

[14:19:00.0000] <Hixie>
nessy: well i don't want to step on any toes here. If the bug was filed today, I would probably just address it, but then there wouldn't be pending CPs and whatnot.

[14:19:01.0000] <zewt>
personally I'm not crazy about the separate fireEvent() suggestion for the same reason--doesn't seem worth the redundancy

[14:20:00.0000] <nessy>
Hixie: no toes to step on - people are looking for a solution and are prepared to put in effort to help get there - but we all want the best possible outcome

[14:20:01.0000] <Hixie>
nessy: I don't want to have people feel like they have worked on something and then have me just come along and change it, but i also don't want y'all to work on something if you'd rather i just went ahead and did my thing like i usually do :-)

[14:20:02.0000] <nessy>
it's not a simple task though, so if you have a good solution, it would be awesome to push it!

[14:20:03.0000] <annevk>
zewt, right, I think initEvent(object) is probably the simplest approach to something sane here

[14:20:04.0000] <Ms2ger>
AryehGregor, how about you write tests for intersectsNode, then I can get it into Gecko ;)

[14:21:00.0000] <zewt>
yeah

[14:21:01.0000] <nessy>
how about you do your thing like you usually do, but put it forward as a change proposal rather than pushing it into the spec?

[14:21:02.0000] <Hixie>
nessy: well i don't have anything right now, but i'm sure i would come up with something (maybe good, maybe not) if i were to go through that wiki page

[14:21:03.0000] <annevk>
zewt, the advantages are no crazy initXXXEvent methods, it makes event interfaces extensible, and does not change much about the current model

[14:21:04.0000] <AryehGregor>
Ms2ger, maybe I'll take a look tomorrow.

[14:21:05.0000] <Hixie>
nessy: i hate writing CPs

[14:21:06.0000] <Hixie>
nessy: they take 10 times longer than writing spec text

[14:21:07.0000] <nessy>
just add another option to the wiki page then?

[14:21:08.0000] <nessy>
or engage in the discussion to state which option(s) you prefer?

[14:22:00.0000] <nessy>
it's good to come up to speed so we can shoot down the bad change proposals/options early IMHO

[14:22:01.0000] <Ms2ger>
/me will be out for the weekend

[14:23:00.0000] <Hixie>
nessy: what is the direction you and eric are likely to go in for your CP?

[14:23:01.0000] <nessy>
that's the hard question

[14:23:02.0000] <nessy>
Eric submitted option 8 and I think that's the main one he is after

[14:24:00.0000] <nessy>
but we have already found that option 1 will be necessary in addition so we can make adaptive HTTP streaming work

[14:24:01.0000] <Hixie>
looking at this i think a variation on 6 is probably what i'd mainly propose

[14:24:02.0000] <nessy>
and we have found cases where a total replacement of the resource is necessary, which could be done with option 6 or 7

[14:24:03.0000] <Hixie>
anything that messes with <track> is flat-out wrong since video/audio tracks have nothing to do with text tracks, and as something near the top says, anything that messes with <source> is a nightmare in waiting

[14:25:00.0000] <Hixie>
however, 6 wouldn't really help with multiple tracks in one file

[14:25:01.0000] <nessy>
Philip is mostly for 6 or 7

[14:26:00.0000] <Hixie>
i imagine if i were to try to spec this it'd be a hybrid of all of the above plus some more out-of-the-box thinking

[14:26:01.0000] <Hixie>
e.g. with a controller object as the master and all the <Video>s as slaves

[14:26:02.0000] <nessy>
well, the discussion about 8 is on the list - you should engage with Eric/David about that, because they are very keen on 8

[14:26:03.0000] <nessy>
haha, that's option 4 - and very smil-like

[14:27:00.0000] <Hixie>
it's similar to 4

[14:27:01.0000] <Hixie>
and similar to 6

[14:27:02.0000] <Hixie>
probably wouldn't be an element though

[14:28:00.0000] <nessy>
interesting!

[14:28:01.0000] <nessy>
throw it in the wiki and add it as a proposal to the email thread?

[14:28:02.0000] <Hixie>
i'd have to actually spend the time to consider this, i'm just making stuff up here

[14:29:00.0000] <nessy>
that's how we all started...

[14:30:00.0000] <Hixie>
whenever i make proposals without thinking them through, they end up implemented and with legacy content before i have a chance to correct them

[14:30:01.0000] <Hixie>
so...

[14:30:02.0000] <nessy>
I actually quite like option 8 right now - it leaves the main a/v in place as the controlling entity and the others are clearly dependent

[14:30:03.0000] <nessy>
but I'm, keen to see yours!

[14:31:00.0000] <Hixie>
option 8 is a non-starter imho, it messes with <track> in a nonsensical way

[14:31:01.0000] <Hixie>
it's unclear to me whether external sign-language tracks need to be supported without JS, and what the use case is for inline embedded videos being controlled from JS.

[14:31:02.0000] <Hixie>
are there same pages anywhere?

[14:31:03.0000] <Hixie>
sample

[14:31:04.0000] <Hixie>
not same

[14:32:00.0000] <nessy>
let me see - I stared a collection some time ago...

[14:33:00.0000] <nessy>
how's this http://www.w3.org/WAI/PF/HTML/wiki/Media_Multitrack_Media_Rendering

[14:33:01.0000] <nessy>
incomplete, but has some ideas..

[14:35:00.0000] <Hixie>
we really should look at how people do this today in more detail before we write proposals

[14:36:00.0000] <nessy>
mostly sign language is picture-in-picture or two videos next to each other

[14:37:00.0000] <nessy>
there's not that much more options anyway

[14:37:01.0000] <nessy>
I'm thinking about rendering that we could render all the active video tracks in a video into the single viewport and have two rendering modes: a tiling approach and a picture-in-picture approach

[14:38:00.0000] <Hixie>
yeah but do people use two videos? one video with two tracks?

[14:38:01.0000] <Hixie>
do they let people control both videos separately?

[14:38:02.0000] <nessy>
on modern TV all the time

[14:38:03.0000] <Hixie>
etc

[14:38:04.0000] <nessy>
actually, there's a third display mode, usually used on tV

[14:39:00.0000] <nessy>
the main video is large and a couple of other views are tiled down the side

[14:39:01.0000] <nessy>
when you select one of the smaller tiles, it becomes the big one and swaps position with the big one

[14:40:00.0000] <Hixie>
TVs aren't really good as a precedent here since they have very different interaction modalities and constraints

[14:40:01.0000] <TabAtkins>
I've never seen that used on tv.

[14:40:02.0000] <nessy>
my uncle had a TV like that in Germany 5 years ago - I was quite impressed - probably had a set-top box

[14:41:00.0000] <nessy>
typically used for sports games to allow people to have different perspectives

[14:41:01.0000] <zewt>
annevk: re "Conflicts" - it sort of makes sense to require initEvent to be called, since in practice you probably don't want to take the default and dispatch an event with e.type == ""

[14:41:02.0000] <nessy>
there is only a single timeline though and only one control

[14:42:00.0000] <zewt>
(which I assume is why DOM Events disallows e.type == ""; that seems to be what's checked when requiring initEvent to be called, so it doesn't need a separate "has been initialized" flag)

[14:43:00.0000] <annevk>
zewt, what does DOM3Events say should happen when it is not called? what does it say should happen .type returns? or .eventPhase returns? lots of things are undefined

[14:43:01.0000] <annevk>
zewt, I'm not sure putting arbitrary restrictions in place really makes sense

[14:43:02.0000] <zewt>
not sure; I'm looking more at browser behavior than the spec

[14:44:00.0000] <annevk>
I'm also not sure why he thinks event.type can be null in D3E

[14:44:01.0000] <zewt>
it can't be, in either browser I tried

[14:44:02.0000] <annevk>
e.g. D3E says it has to be at least one character and has multiple places say it cannot be an "invalid string"

[14:44:03.0000] <zewt>
(by spec I don't know)

[14:45:00.0000] <zewt>
(predictably, I havn't read the entire DOM Events spec :)

[14:45:01.0000] <annevk>
would be cool to know what Jacob thought about how the spec was written

[14:46:00.0000] <annevk>
but I should sleep some and then read everything again and then reply

[14:48:00.0000] <TabAtkins>
annevk: Re using <object> for inline fallback on images, <object> is horrible for video and audio, but I'm not sure if there are any APIs we have to worry about for static images that <object> won't expose.

[14:50:00.0000] <zewt>
seems generally unpleasant to have people start putting images in object tags...

[14:50:01.0000] <annevk>
using <object> if you want rich fallback is the argument we have been using for years

[14:50:02.0000] <annevk>
if it is invalid I would appreciate to learn why, as it works fine for me

[14:51:00.0000] <nessy>
TabAtkins: I've found something similar: http://gigaom.com/video/att-lets-cubs-fans-choose-their-own-camera-angle/ - though this brings in different channels rather than tracks of the same video

[14:52:00.0000] <annevk>
whatwg.org uses <object> for an image by the way

[14:54:00.0000] <TabAtkins>
nessy: Ah, that's a cool use-case.

[14:54:01.0000] <Hixie>
<object> works pretty well for images

[14:56:00.0000] <jamesr__>
i still think the 'fallback-ish' behavior for <canvas> is bizarre

[14:58:00.0000] <zewt>
FWIW, object doesn't have naturalHeight/naturalWidth, or complete (doesn't define the "available" state like <img> does) ... not necessarily critical for the cases where you want rich fallback (eg. you're probably not blitting it into a canvas)

[14:59:00.0000] <Hixie>
jamesr__: how would you do it instead?

[15:00:00.0000] <zewt>
to sum up my earlier two suggestions, 1: have another tag, eg. <cimg>, which is identical to <img> but allows descendants, and put fallback data there; 2: have a <fallback for=id> tag (like <label>) which is only shown if the given id is not

[15:00:01.0000] <fantasai>
hsivonen: just wanted to note that we just ran into a HTML parsing issue with </! starting a tag sequence

[15:00:02.0000] <fantasai>
hsivonen: in case that's an interesting test case for you

[15:01:00.0000] <annevk>
zewt, neither is backwards compatible

[15:01:01.0000] <zewt>
the <canvas> suggestion isn't, either

[15:02:00.0000] <annevk>
well I'm not really considering that one either

[15:02:01.0000] <zewt>
<fallback> can be made to degrade sensibly with a little scripting help, at least

[15:02:02.0000] <annevk>
with scripting everything can be made to work...

[15:02:03.0000] <zewt>
(eg. check if HTMLFallbackElement exists; if not, add fallback { display: none; })

[15:02:04.0000] <nessy>
TabAtkins: here's one with multiple angles on a single game http://www.sportsgeekery.com/2010/10/28/watch-tnts-nba-games-online-with-overtime-extra/

[15:03:00.0000] <annevk>
lets all look at what we can safely remove instead :)

[15:18:00.0000] <nessy>
Hixie: I added a few more examples to http://www.w3.org/WAI/PF/HTML/wiki/Media_Multitrack_Media_Rendering

[15:20:00.0000] <Hixie>
i don't understand the third one down

[15:20:01.0000] <Hixie>
there only seems to be one video on the page mentioned by the blog post cited on that page, the sign-language one

[15:22:00.0000] <Hixie>
the firstone seems to just be single standable videos with one track

[15:23:00.0000] <Hixie>
the second one seems to just be two unrelated videos rendered on top of each other

[15:24:00.0000] <Hixie>
for the fourth one, the olympics thing, it's unclear to me what the requirements are. It looks like just four unsynchronised live streams, which we can do today. If they're to be synchronised, I guess that's more like proposals 4/6 -- separate <video>s that are slaved to each other.

[15:25:00.0000] <Hixie>
unclear to me what the 5th is showing.

[15:25:01.0000] <Hixie>
or the 6th

[15:26:00.0000] <Hixie>
the 7th is burnt-in.

[15:26:01.0000] <Hixie>
presumably pretty much whatever we do will support the equivalent rendering with two tracks, so long as you can sync it somehow.

[15:28:00.0000] <Hixie>
8th is the same as the 2nd, it seems

[15:29:00.0000] <Hixie>
dunno what the 9th is.

[15:29:01.0000] <Hixie>
10th is like the 7th.

[15:29:02.0000] <Hixie>
11th too

[15:31:00.0000] <Hixie>
12th is like the 4th, assuming they're synchronised. four streams slaved to each other with one set of controls.

[15:34:00.0000] <Hixie>
13th is weird, looks like multiple unsynchronised video streams in some incarnations, and more like the slaved case in others.

[15:35:00.0000] <Hixie>
the last one is more like the olymics thing again

[15:35:01.0000] <Hixie>
so in conclusion it looks like we have the following kinds of use cases here:

[15:35:02.0000] <Hixie>
1. unsynchronised video streams next to each other (possible today with <video>)

[15:36:00.0000] <Hixie>
2. an additional track, either in a separate file or in the same file, providing a sign-language overlay, which must be synchronised to the primary track, and presumably which can be turned off and on.

[15:36:01.0000] <Hixie>
3. multiple independent tracks that need to be played along the same timeline

[15:37:00.0000] <zewt>
(do deaf people seriously use sign-language overlays? heh)

[15:38:00.0000] <Hixie>
zewt: some do. There's a lot of variety in the deaf community from what I understand, but certainly there are those that use sign-language overlays.

[15:39:00.0000] <zewt>
that's ... odd, heh

[15:39:01.0000] <Hixie>
why?

[15:39:02.0000] <zewt>
hard to think of why you'd want sign language instead of text, since I don't imagine you can watch someone signing while actually watching whatever video contains whatever's being signed

[15:39:03.0000] <AryehGregor>
I'd imagine you could watch sign-language as well as printed text.

[15:40:00.0000] <zewt>
text you can read in half a second and go back to the video

[15:40:01.0000] <Hixie>
sign-language is much denser than text, and you end up seeing it out of the corner of your eye

[15:40:02.0000] <AryehGregor>
Is the sign language we're talking about here animated, or some type of sequence of symbols?

[15:40:03.0000] <Hixie>
neither, it's live action of someone signing

[15:40:04.0000] <AryehGregor>
Interesting.

[15:40:05.0000] <AryehGregor>
Sign language is developed instinctively, like speech and unlike writing.

[15:41:00.0000] <AryehGregor>
Sign languages reliably arise spontaneously whenever you have a critical mass of deaf children and no local sign language for them to learn.

[15:41:01.0000] <zewt>
possibly a similar use case would be animated karaoke tracks of the sort fansubs like to use, which are way outside of webvtt's scope

[15:41:02.0000] <AryehGregor>
Whereas writing was an invention that was invented independently maybe like three times.

[15:41:03.0000] <AryehGregor>
And alphabetic writing was invented once.

[15:41:04.0000] <AryehGregor>
In all of human history.

[15:41:05.0000] <zewt>
having a separate baked video track overlaid on top of the video would be a lot nicer (in theory) then baking them right into the video

[15:42:00.0000] <AryehGregor>
So maybe sign language is much easier to follow than writing, if you grew up speaking it.

[15:42:01.0000] <zewt>
well, signing is more like speech than writing, and speech arises on its own too

[15:42:02.0000] <aho>
i imagine it's more like having someone talking to you

[15:42:03.0000] <aho>
instead of reading something

[15:43:00.0000] <zewt>
(one practical problem with karaoke overlays is video codecs generally don't support alpha, or if they do underneith it's never implemented)

[15:44:00.0000] <aho>
what's the new name of websrt again? :>

[15:44:01.0000] <zewt>
webvtt

[15:44:02.0000] <zewt>
(don't know why it was renamed, much harder to remember, heh)

[15:44:03.0000] <nessy>
there's also signwriting, btw - I think in the long run that has the most potential to become a machine-readable sign language

[15:45:00.0000] <nessy>
Hixie: I will make some notes on the examples

[15:45:01.0000] <aho>
i really wonder why they didn't go with something more straightforward... like... y'know... websubtitles :>

[15:46:00.0000] <nessy>
in general, your conclusion seems sound though

[15:46:01.0000] <aho>
or websubs lol

[15:46:02.0000] <nessy>
I took those examples also so we can see how multiple tracks can be displayed

[15:47:00.0000] <Hixie>
aho: webvtt has the advantage of an obvious filename extension (.vtt) that isn't used by anyone already (unlike .sub)

[15:47:01.0000] <nessy>
vtt = video text track - not that bad IMHO

[15:47:02.0000] <Hixie>
also "sub"-anything is someone misleading since we do more than subtitles

[15:47:03.0000] <aho>
still kinda hard to remember

[15:48:00.0000] <zewt>
we'll get used to it :)

[15:48:01.0000] <zewt>
better than .ASS

[15:48:02.0000] <aho>
oh yea, i remember that discussions from many moons ago... going with some "ASS" based name would have been fun :>

[15:48:03.0000] <nessy>
lol

[15:49:00.0000] <zewt>
don't know any particular discussion, just another common sub format :P

[15:50:00.0000] <aho>
basically, someone made a subset of aas and the idea was to call it small ass or something like that :>

[15:50:01.0000] <aho>
WebAss would have been fine, too

[15:51:00.0000] <aho>
haha

[15:51:01.0000] <aho>
/me is easily amused

[15:53:00.0000] <nessy>
(Hixie: re third one down - I was simply looking for an example where the sign language video would sit in same size as main video next to it, but I couldn't find an image better than this - maybe I am mistaken to have thought I'd seen that before)

[15:54:00.0000] <zewt>
sign language track - as a separate element or as an overlay?

[15:55:00.0000] <Hixie>
nessy: that's why it's important to have actual examples. :-)

[15:55:01.0000] <zewt>
(of course you can do both by overlaying two <video> elements, but that's sort of the wrong layer in general I'd think)

[15:55:02.0000] <Hixie>
zewt: that's what we're discussing

[15:55:03.0000] <aho>
zewt, would allow resizing and moving it around though

[15:55:04.0000] <nessy>
Hixie: you're right - I might remove that one and add your comments on all, so we keep track (not just in the bug tracker ;-)

[15:55:05.0000] <Hixie>
nessy: one use case that hasn't been talked about here that i'm interested in is playing two videos back synchronised but at different offsets

[15:55:06.0000] <aho>
full screen would be f-ed though :l

[15:56:00.0000] <Hixie>
nessy: something like the "double youtube" thing but where you can pick the synchronisation point

[15:56:01.0000] <zewt>
yeah, if you're on a TV you probably want something like PIP for that, not side-by-side

[15:56:02.0000] <nessy>
aho: when we attach full screen to page elements, it's possible still

[15:56:03.0000] <aho>
ah yea... there was that thing

[15:57:00.0000] <nessy>
Hixie: is that use case not just a toy? I'm worried we end up with SMIL ...

[15:57:01.0000] <aho>
does any browser support it today?

[15:57:02.0000] <zewt>
programmatic fullscreen doesn't exist yet at all afaik

[15:57:03.0000] <aho>
so far i've only seen very slow video fsm

[15:57:04.0000] <aho>
(full screen mode, not flying spaghetti monster)

[15:57:05.0000] <nessy>
aho, not yet - but it's being discussed

[15:58:00.0000] <zewt>
well yeah all (afaik) video implementations right now are really bad at fullscreening, presumably that'll get fixed

[15:58:01.0000] <Hixie>
nessy: toys are good too :-)

[15:58:02.0000] <Hixie>
nessy: it's the kind of thing that would be good to support if it can be done in a way that doesn't add complexity

[15:58:03.0000] <zewt>
Hixie: being able to adjust the offset is also useful to, for example, quickly adjust off-sync audio or captions

[15:59:00.0000] <Hixie>
yeah, that too

[15:59:01.0000] <nessy>
yeah, but then we get those that say that we need to be able to arbitrarily align any video track and audio tracks and have choices between subparts of them etc

[15:59:02.0000] <nessy>
that really is SMIL and I would prefer to keep such stuff to JavaScript

[15:59:03.0000] <Hixie>
nessy: e.g. if we have a controller + slaves model, you can imagine a model where the controller doesn't have a timeline, it just controls the velocity (and pauses everything whenever any of them stall), which would let you do all of the above with very minimal additional complexity


2011-03-04
[16:00:00.0000] <Hixie>
nessy: the only change to the current model would be that instead of advancing whenever you're potentially playing, you advance when the controller says to

[16:00:01.0000] <nessy>
interesting - I'd like to see that specced a bit more

[16:01:00.0000] <Hixie>
nessy: or maybe even you just multiply the playback rate by he controller's rate, and the controller sets its rate to zero whenever anyone is stalled (or when the controller is paused)

[16:02:00.0000] <nessy>
I personally actually don't think the playback of the main resource should be stalled because of subresources

[16:02:01.0000] <nessy>
or at least you should have the possibility to not stall

[16:02:02.0000] <nessy>
e.g. maybe I care about seeing sign language, but not enough to want my movie to be stalled when it falls behind a bit

[16:04:00.0000] <zewt>
the whole "seeking to keyframe" thing might be tricky with multiple video tracks, since they won't necessarily keyframe together

[16:04:01.0000] <zewt>
(very unlikely unless specially authored)

[16:05:00.0000] <Hixie>
nessy: well you definitely don't want it to fall behind a bit

[16:05:01.0000] <nessy>
no, just drop it when out of sync

[16:06:00.0000] <Hixie>
nessy: you might want it to just be muted for a bit while the UA buffers, but in most cases if you need to buffer, and you don't, you'll just never have that track again.

[16:06:01.0000] <Hixie>
unless it just skips ahead and starts buffering in the future, and then rejoins later

[16:06:02.0000] <Hixie>
which seems like very confusing behaviour.

[16:06:03.0000] <Hixie>
i can't really imagine wanting my audio track to do that, so i don't see why a sign-language user would want that to happen to theirs.

[16:06:04.0000] <nessy>
I would prefer that - but maybe I am a strange user

[16:07:00.0000] <nessy>
I am concerned about mixed viewing environments

[16:07:01.0000] <nessy>
when a deaf person watches something with non-deaf people and the sign language track keeps stalling

[16:08:00.0000] <Hixie>
AryehGregor: can you give me a tl;dr on http://www.w3.org/Bugs/Public/show_bug.cgi?id=11912 ?

[16:08:01.0000] <Hixie>
nessy: the web is mostly a single-viewing environment.

[16:09:00.0000] <nessy>
hmm, for now maybe

[16:09:01.0000] <Hixie>
nessy: the mixed-viewing environments tend to have reliable video streams.

[16:09:02.0000] <AryehGregor>
Hixie, he wants to improve HTTP auth in a couple of obvious ways, allowing you to use it via forms and allowing the site to log you out.

[16:09:03.0000] <AryehGregor>
I got into a long argument with him about whether HTTP auth is worth salvaging, but it didn't relate to his actual suggestions.

[16:09:04.0000] <Hixie>
nessy: but in any case, if you're watching something with someone who's blind, and the video needs to buffer but we still have the audio, do you want the video to cut out? or do you want it to pause?

[16:09:05.0000] <Hixie>
AryehGregor: k

[16:10:00.0000] <Hixie>
AryehGregor: thanks

[16:10:01.0000] <nessy>
depends on how much is happening on the video

[16:11:00.0000] <nessy>
but yeah, I guess the main use case is that of keeping in sync and stalling when one active track stalls

[16:12:00.0000] <zewt>
multiple people watching a video seems normal enough, but I'd think if the sign track keeps dropping out, the deaf person's going to be even more annoyed (than the non-deaf people would be if it stalled the whole video)

[17:48:00.0000] <nessy>
say, has anyone ever considered introducing an attribute such as @rows onto the <select> element?

[17:49:00.0000] <TabAtkins>
What would it do?

[17:49:01.0000] <nessy>
I am baffled that there is no way to limit the number of options that are displayed in a <select> for scrollbars

[17:49:02.0000] <TabAtkins>
<select multiple size>?

[17:50:00.0000] <AryehGregor>
Or just <select size>.

[17:50:01.0000] <AryehGregor>
E.g., <select size=6>.

[17:50:02.0000] <AryehGregor>
Or whatever.

[17:50:03.0000] <TabAtkins>
Ah, indeed, I didn't realize you could use @size on a plain select.

[17:50:04.0000] <TabAtkins>
Still ugly as sin.

[17:51:00.0000] <nessy>
no, @size gives you the number of options that are displayed and turns the option drop-down off

[17:52:00.0000] <nessy>
http://stackoverflow.com/questions/570642/height-of-an-html-select-box-dropdown

[17:52:01.0000] <nessy>
this part:

[17:52:02.0000] <nessy>
the height needed to show (x) entries (with scrollbars to see remaining)

[17:52:03.0000] <nessy>
Â  Â  Â (20 in Firefox & Chrome, 30 in IE6,7,8, 16 for Opera 10, 14 for Opera 11,

[17:52:04.0000] <nessy>
Â  Â  Â  22 for Safari 4, 18 for Safari 5, 11 in IE5.0,5.5)

[17:53:00.0000] <nessy>
that number of option rows that are displayed is fixed and browser dependent and there is no way to change it

[17:53:01.0000] <TabAtkins>
@size is the correct answer, you just have to convince browser to make it not look like *ass*.

[17:53:02.0000] <nessy>
but @size turns it from a drop-down to a list

[17:54:00.0000] <TabAtkins>
That's not a necessary effect, it's just how browsers traditionally present it.

[17:55:00.0000] <nessy>
but since all browsers do that, it's the de-facto standard

[17:55:01.0000] <TabAtkins>
Considering how horrible it looks, though, I suspect not too many people are actually using it.

[17:55:02.0000] <TabAtkins>
(I could be wrong.)

[17:55:03.0000] <TabAtkins>
This is something we can test.

[17:56:00.0000] <nessy>
so we need a way to convince the browsers to keep displaying it as a drop-down even when @size is given

[17:56:01.0000] <nessy>
I guess

[17:57:00.0000] <nessy>
hmmâ¦ Firefox even seems to completely ignore @size (testing here: http://www.w3schools.com/TAGS/tryit.asp?filename=tryhtml_option)

[17:57:01.0000] <zewt>
there's no size there

[17:58:00.0000] <nessy>
@size is specified to be "the number of options to show to the user" which is not equivalent to restricting the drop-down length, actually

[17:58:01.0000] <nessy>
zewt: no, but it's simple to add it manually

[17:58:02.0000] <zewt>
but it doesn't ignore it when I add it

[17:58:03.0000] <nessy>
and see the effect

[17:59:00.0000] <nessy>
if I set it to size=2, then I get all four options, but as a list rather than a drop-down

[17:59:01.0000] <zewt>
i set it to 5 and it shows all 4 with one empty spot

[17:59:02.0000] <TabAtkins>
size=4 is probably the minimum size

[17:59:03.0000] <AryehGregor>
Hixie, in http://www.w3.org/Bugs/Public/show_bug.cgi?id=11912, to be fair, the reporter did actually convince me that there was a not-totally-theoretical use-case in which HTTP auth was inherently more secure than cookie auth, albeit slightly.

[17:59:04.0000] <TabAtkins>
chrome does the same.

[17:59:05.0000] <zewt>
if i set it to 2 i see 2 options

[17:59:06.0000] <nessy>
same in safari

[17:59:07.0000] <zewt>
haha but

[17:59:08.0000] <zewt>
if i set it to 5, i get 5 rows with a disabled scrollbar

[18:00:00.0000] <zewt>
if i set it to 2, i get 2 rows ... and no scrollbar

[18:00:01.0000] <nessy>
ups: I mixed up my chrome and firefox

[18:00:02.0000] <AryehGregor>
But "not totally theoretical" I mean "He said it applies to his application, but it doesn't apply to any app I know about, because you'd have to be incredibly obsessive about separation of privilege for it to be relevant."

[18:00:03.0000] <AryehGregor>
s/But/By/

[18:00:04.0000] <zewt>
so it shows a scrollbar if it doesn't need one, and doesn't show a scrollbar if it does need one

[18:00:05.0000] <nessy>
actually, firefox is the only one that actually does limit the length

[18:01:00.0000] <Hixie>
AryehGregor: what was the use case?

[18:01:01.0000] <zewt>
nessy: same behavior in Opera as FF

[18:02:00.0000] <nessy>
yup, Opera and FF behave the specced way, I guess

[18:02:01.0000] <AryehGregor>
Hixie, the guy had a system where the application didn't actually have access to the database.  The only way for it to access the database was using the users' actual username and login.

[18:02:02.0000] <AryehGregor>
Username and password.

[18:02:03.0000] <nessy>
so webkit only changes from drop-down to list display without actually limiting the size

[18:02:04.0000] <zewt>
webkit (testing in chrome) will extend but not scroll (which again makes it bizarre that it shows a disabled scrollbar)

[18:02:05.0000] <TabAtkins>
AryehGregor: We need to not worry about that ever.

[18:02:06.0000] <AryehGregor>
So every application-level user had a corresponding database user, and the database user had only the rights to access stuff that the application user had.

[18:02:07.0000] <AryehGregor>
And so if the browser submits the password every time, the app just uses it for that request, to access the database, then throws it away.

[18:02:08.0000] <nessy>
so, I would say that's a webkit bug

[18:03:00.0000] <nessy>
but it's also a spec bug to not have a possibility to remain in drop-down mode and limit the length

[18:03:01.0000] <AryehGregor>
But if you use cookies, you'd force the application to remember the user's password somehow, so an application server compromise would result in database server compromise too, even for users who aren't actually executing requests at that particular moment.

[18:03:02.0000] <AryehGregor>
I thought it was cool that the guy actually designed such a system that he apparently uses.

[18:03:03.0000] <AryehGregor>
Or at least he works with such a system, dunno if he designed it.

[18:04:00.0000] <AryehGregor>
But, uh, not exactly mainstream practice.

[18:05:00.0000] <zewt>
(AryehGregor: not necessarily useful to that person, but if I really needed that, I'd probably do something along the lines of storing an encrypted password in the cookie with a key on the server, so the server can decrypt it for each request and then throw it away)

[18:05:01.0000] <AryehGregor>
Neat idea.

[18:05:02.0000] <Hixie>
AryehGregor: how did he add new users to the database?

[18:06:00.0000] <AryehGregor>
Hixie, I didn't ask.  I'm guessing this is some workplace thing, and the database is getting the user info from LDAP or some other external authentication source.

[18:06:01.0000] <AryehGregor>
So people are probably added by hand by a sysadmin when they first come there, or something.

[18:06:02.0000] <Hixie>
i can't actually imagine a scenario where i could use that kind of technique

[18:07:00.0000] <AryehGregor>
In principle, though, you could have open login.

[18:07:01.0000] <Hixie>
unless his database has per-row ACLs or something

[18:07:02.0000] <AryehGregor>
It's PostgreSQL.

[18:07:03.0000] <AryehGregor>
Which, yes, can have extremely granular access controls.

[18:07:04.0000] <AryehGregor>
I suspect a nontrivial amount of the application logic was implemented as stored procedures or such on the database server.

[18:07:05.0000] <Hixie>
well anyway

[18:07:06.0000] <AryehGregor>
So users without direct access to particular rows might still have access to functions that would let them read or modify them indirectly.

[18:08:00.0000] <Hixie>
you can do that without http auth

[18:08:01.0000] <Hixie>
in fact most systems i write send the password and username along with every request too

[18:08:02.0000] <Hixie>
they just use xhr :-)

[18:08:03.0000] <AryehGregor>
Yeah, but that doesn't work for regular web browsing.

[18:08:04.0000] <Hixie>
"regular"?

[18:08:05.0000] <Hixie>
you mean web 1.0 ?

[18:08:06.0000] <AryehGregor>
:)

[18:09:00.0000] <AryehGregor>
"something that works in lynx"

[18:09:01.0000] <TabAtkins>
I don't think we're designing the web for lynx.

[18:09:02.0000] <AryehGregor>
Really?  Darn.

[18:09:03.0000] <Hixie>
lynx needs to get with the programme and implement js already

[18:09:04.0000] <TabAtkins>
AryehGregor: I could be wrong.  Ask Hixie.

[18:10:00.0000] <zewt>
the few times in the last decade I've had to load lynx for one reason or another, it still does the "pause to show a message 10 times per page load" thing

[18:11:00.0000] <zewt>
which is pretty awesome

[18:11:01.0000] <AryehGregor>
You mean like "This site is trying to set a cookie.  Do you want to accept it?"

[18:11:02.0000] <zewt>
(for some value of awesome)

[18:11:03.0000] <AryehGregor>
Several times?

[18:12:00.0000] <AryehGregor>
Yeah, lynx is cool that way.

[18:12:01.0000] <zewt>
well come on, cookies are a violation of privacy, you need to ask permission for each one

[18:12:02.0000] <AryehGregor>
One time my school computers (almost all RHEL) were practically unusable because NFS was unresponsive, taking like a second to service simple requests.

[18:13:00.0000] <AryehGregor>
So all GUI stuff totally died because everyone's home directory was on NFS and all GNOME stuff checks every file in your home directory a billion times a second or something.

[18:13:01.0000] <TabAtkins>
True story.

[18:13:02.0000] <AryehGregor>
So I did Ctrl-Alt-F1 and browsed the web using lynx, which more or less worked if you were patient.

[18:13:03.0000] <AryehGregor>
It impressed my officemate.

[18:13:04.0000] <AryehGregor>
TabAtkins, have you ever tried straceing a GNOME process's startup?

[18:14:00.0000] <TabAtkins>
AryehGregor: No.  I've never run strace in any capacity.

[18:14:01.0000] <zewt>
i havn't used gnome in like a decade and I hope to keep my streak going

[18:14:02.0000] <AryehGregor>
$ strace gnome-calculator 2>&1 | grep '^open(' | wc -l

[18:14:03.0000] <AryehGregor>
338

[18:14:04.0000] <AryehGregor>
That's starting and then immediately closing.

[18:14:05.0000] <AryehGregor>
srsly.

[18:15:00.0000] <AryehGregor>
zewt, what do you use?

[18:15:01.0000] <zewt>
windows :)

[18:15:02.0000] <zewt>
(linux too, but relegated to a shell)

[18:16:00.0000] <AryehGregor>
Speaking of GNOME, I have to think of new ways to harass them into reviewing the one-line patch I submitted well over six months ago.

[18:16:01.0000] <zewt>
generally if i have to harass people to look at patches, I find other projects to contribute to

[18:17:00.0000] <AryehGregor>
I think I'm going to write up step-by-step instructions for how to apply the patch to your desktop, and post it on all the bugs I filed in various bug trackers.

[18:17:01.0000] <AryehGregor>
Then maybe other people will find it works for them and they'll help me harass them.

[18:17:02.0000] <AryehGregor>
zewt, me too, except that in this case it means I have to either endure the bug or re-patch the GNOME clock every time.

[18:17:03.0000] <AryehGregor>
Currently I've chosen to endure it because I can't be bothered to figure out again how to actually replace the clock applet on a running system.

[18:18:00.0000] <AryehGregor>
But if I write up instructions and post them on the bugs, then at least I'll have something to refer to when I next upgrade.

[18:26:00.0000] <AryehGregor>
Hixie, why is <xmp> not conforming?  It would be nice to have when marking up sample HTML markup in HTML by hand.

[18:27:00.0000] <AryehGregor>
(If you're generating the HTML by a script, you can of course just escape it.)

[18:27:01.0000] <AryehGregor>
I hate having to type out stuff like &lt;b>Foo&lt;/b>, it's incredibly awkward.

[18:27:02.0000] <Hixie>
same reason <u> isn't conforming :-)

[18:28:00.0000] <TabAtkins>
This is why I'm writing myself a custom Markdown parser that doesn't understand any HTML, so I can just write things in that and then take the generated HTML.

[18:28:01.0000] <Hixie>
(what semantic would it have?)

[18:29:00.0000] <AryehGregor>
Hixie, it's a syntactic construct, not a semantic one.  It should be semantically void, like <span>.

[18:29:01.0000] <AryehGregor>
Or <div>, maybe.

[18:30:00.0000] <AryehGregor>
<xmp><b></xmp> and <span>&lt;b&gt;</span> would be semantically equivalent.

[18:33:00.0000] <Hixie>
interesting

[18:33:01.0000] <Hixie>
file a bug, i guess

[18:33:02.0000] <TabAtkins>
I don't think HTML has any syntactic constructs any more.

[18:33:03.0000] <Hixie>
cc henri, i'm interested in what he'd have to say

[18:33:04.0000] <Hixie>
it'd be an xhtml vs html difference

[18:34:00.0000] <Hixie>
what is supposed to happen with a UTF-8 document that contains a U+D800 (surrogate half) character?

[18:34:01.0000] <TabAtkins>
My only fear is people using it as a way of "safely" embedding user-generated text.

[18:34:02.0000] <Hixie>
did we change this recently?

[18:37:00.0000] <zewt>
AryehGregor: would &amp; &lt; &gt; still resolve to &<>? (to encode </xmp> literally)

[18:37:01.0000] <AryehGregor>
zewt, try it and see: data:text/html,<!doctype html><xmp>&lt;&gt;&amp;</xmp>

[18:37:02.0000] <AryehGregor>
(no)

[18:37:03.0000] <AryehGregor>
(so you can't encode </xmp> literally, just like you can't encode </script> literally inside <script>)

[18:38:00.0000] <zewt>
well, </script> has a workaround; would this?

[18:38:01.0000] <TabAtkins>
Sure - use two <xmp> elements.

[18:38:02.0000] <AryehGregor>
Doesn't work well with default style.

[18:38:03.0000] <TabAtkins>
Encoding the first "<x" in one, and "mp>" in the other.

[18:39:00.0000] <AryehGregor>
Which is block, same as pre.

[18:39:01.0000] <zewt>
that's not the same, though--that gives you two elements

[18:39:02.0000] <AryehGregor>
The workaround would be using <pre> instead, and HTML-escaping.

[18:39:03.0000] <TabAtkins>
Sure, I'm not saying it's perfect.

[18:39:04.0000] <zewt>
(granted, "</scr"+"ipt>" isn't exactly the same, either, but in practical terms it is)

[18:39:05.0000] <AryehGregor>
So <xmp> isn't perfect, that's life.

[18:39:06.0000] <jcranmer>
"\u003c/script>" ?

[18:42:00.0000] <AryehGregor>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=12235

[18:43:00.0000] <AryehGregor>
/me goes to bed

[18:43:01.0000] <AryehGregor>
I'll try to think of a use-case for <plaintext>.  :)

[18:51:00.0000] <zewt>
speaking of </script>, should innerHTML/outerHTML's non-normative text note that the fragment may not represent the element exactly (may not round-trip)?

[18:51:01.0000] <Hixie>
it already does somewhere

[18:53:00.0000] <zewt>
hmm, down in the HTML serialization algo text ... okay i guess

[23:12:00.0000] <annevk>
Hixie, the multipart boundary string probably needs to be prefixed by "boundary="

[23:12:01.0000] <annevk>
Hixie, when you make the MIME type

[23:22:00.0000] <jamesr__>
hey y'all i'm trying to find documentation or specification for the 'scrolling' attribute on i?frame. it seems pretty widely supported but i can't find references to it

[23:24:00.0000] <zcorpan>
Hixie: <xmp> already has the same semantic as <pre>

[23:25:00.0000] <annevk>
jamesr__, http://www.whatwg.org/specs/web-apps/current-work/complete.html#margins-and-padding

[23:39:00.0000] <annevk>
benschwarz, yo

[23:39:01.0000] <annevk>
benschwarz, how about that blog post?

[23:39:02.0000] <annevk>
;)

[23:54:00.0000] <zcorpan>
annevk: one argument against <object> is that it's not as safe as <img> -- it allows scripted content and plugins, so wouldn't allow it for user generated stuff

[23:54:01.0000] <zcorpan>
maybe <iframe sandbox> solves that, dunno

[23:55:00.0000] <zcorpan>
also svg in object is like interactive and eats click events while svg in img is not interactive and doesn't eat click events

[23:56:00.0000] <zcorpan>
so if you want to use an svg image in a link with rich fallback, <object> makes the link not work

[23:59:00.0000] <boblet>
hsivonen: I think I found a validator.nu bug. Using <style scoped> as the first child of <figure> gives an error

[00:11:00.0000] <zcorpan>
Hixie: +  &lt;ul onchange="calculate(form)"> - this wouldn't actually work right? would need to be document.forms.pricecalc or so

[00:56:00.0000] <hsivonen>
boblet: thanks. I kinda wish we had a clear direction on <style scoped>: remove from spec ASAP or implement in browsers ASAP

[00:56:01.0000] <boblet>
oh, is it controversial?

[00:57:00.0000] <boblet>
I love it for code examples â everything bundled into one figure

[00:57:01.0000] <zcorpan>
i don't think it's controversial, it's just low priority and probably non-trivial to implement (especially scoped @-rules)

[01:00:00.0000] <boblet>
yeah, thatâs true. Iâm just using it with an id hook, so implementation isnât really so important for me

[01:00:01.0000] <zcorpan>
hsivonen: maybe the simplest thing to do at the moment is have an assertion that bans <style scoped> on the basis that it's not implemented anywhere yet so should not be used yet

[01:01:00.0000] <boblet>
zcorpan: is it actually harmful tho? itâs just added to head styles, no?

[01:02:00.0000] <zcorpan>
boblet: it's harmful if sites start depending on styles being applied to the whole document

[01:02:01.0000] <zcorpan>
boblet: because then the feature can't be implemented without breaking those sites

[01:02:02.0000] <zcorpan>
apparently this has already happened with "use strict";

[01:04:00.0000] <boblet>
I was thinking to write about it for HTML5Doctor, and say to use with an id hook until thereâs browser support

[01:04:01.0000] <zcorpan>
i'd wait with recommending use of new features until they're implemented

[01:05:00.0000] <boblet>
well, more if you use it, use it like this. I take your point, but I think ppl will find and use it regardless

[01:05:01.0000] <zcorpan>
i'm frankly surprised that we haven't had any problems with <article> and friends

[01:05:02.0000] <Hixie>
zcorpan, annevk: good points; please file bugs!

[01:07:00.0000] <boblet>
hsivonen: regardless of which way you decide to jump, the current error for style scoped is a bit confusing, so a warning or more accurate admonition would help

[01:07:01.0000] <boblet>
zcorpan: thanks

[01:08:00.0000] <boblet>
l8r

[01:08:01.0000] <zcorpan>
seeya

[01:12:00.0000] <annevk>
filed http://www.w3.org/Bugs/Public/show_bug.cgi?id=12237

[01:15:00.0000] <annevk>
I guess I should use www-dom for DOM Core

[01:15:01.0000] <annevk>
or, we should use

[01:15:02.0000] <annevk>
but Ms2ger is away or something

[01:28:00.0000] <annevk>
so in some browsers you can apply CSS properties to <frameset> and such?

[01:28:01.0000] <annevk>
like 'background'?

[01:29:00.0000] <annevk>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/863

[01:29:01.0000] <annevk>
works in Gecko

[01:30:00.0000] <annevk>
I guess that's a bug then

[01:31:00.0000] <zcorpan>
spelling fail - JaÃ«gerMonkey https://mozillademos.org/demos/dashboard/demo.html

[01:33:00.0000] <zcorpan>
section on CORS talks about CSP

[01:42:00.0000] <jgraham__>
zcorpan: ae is cool and umlauts are cool clearly having both is double plus cool. But they really missed a trick not going for Ã¦Ì

[01:46:00.0000] <jgraham__>
MikeSmith: BTW did I mention recently how awesome the HTML version of the ES5 spec is?

[01:47:00.0000] <MikeSmith>
no you didn't

[01:47:01.0000] <MikeSmith>
but glad it's useful

[01:51:00.0000] <zcorpan>
Ã¤Ã«?

[01:53:00.0000] <annevk>
AryehGregor, you are not subscribed to www-dom

[01:54:00.0000] <annevk>
/me was wondering who would miss out on DOM Core discussion

[02:00:00.0000] <jgraham__>
zcorpan: Nah, the coolness of Ã¦ is so much greater than ae that the double diaeresis can't comepete

[02:02:00.0000] <zcorpan>
/me was just having an unrelated discussion with his mom about how to type Ã¦ on windows

[02:17:00.0000] <zcorpan>
lol http://clubajax.org/presentations/the-fight-over-html5/

[02:18:00.0000] <zcorpan>
funny and accurate, love it

[02:21:00.0000] <Philip`>
AryehGregor: If you want a syntactic construct rather than a semantic one, it seems better design to use something like <![CDATA[ that is purely syntactic and doesn't affect the DOM

[02:21:01.0000] <Philip`>
(Need to find a way to make it apply in non-foreign content though, I guess)

[02:22:00.0000] <karlcow>
zcorpan: misleading and inaccurate the clubajax thingie

[02:22:01.0000] <karlcow>
I left a comment here but still in the moderation queue http://clubajax.org/presentation-the-fight-over-html5/comment-page-1/#comment-7463

[02:23:00.0000] <annevk>
there was only one real error I spotted

[02:24:00.0000] <zcorpan>
namely?

[02:25:00.0000] <zcorpan>
it spells W3C as WC3

[02:25:01.0000] <annevk>
trying to make standards patentable

[02:25:02.0000] <zcorpan>
oh right

[02:26:00.0000] <annevk>
well and the logo cost, but that seems like an obvious joke

[02:26:01.0000] <zcorpan>
you sure? :)

[02:26:02.0000] <annevk>
nah, just seems that way

[02:36:00.0000] <deane>
Hixie: I think the spec needs to define what a document is. It needs a definition or a pointer to a definition. Many people get confused between syntax and document.

[02:41:00.0000] <zcorpan>
deane: file a bug

[02:44:00.0000] <deane>
zcorpan: AFAIK the whatwg doesn't have a bug tracking system

[02:45:00.0000] <zcorpan>
deane: html wg does, there's a comment box in the whatwg spec to use it

[02:47:00.0000] <deane>
zcorpan: yeah, I know, but some people prefer not to deal with the w3c so the whatwg should provide some sort of alternative.

[02:48:00.0000] <zcorpan>
ah, ok. the alternative in whatwg land is whatwgâwo i guess

[02:48:01.0000] <deane>
zcorpan: yeah, I'll sort something out

[02:55:00.0000] <jgraham>
Not really clear how you have to "deal with w3c" to file a bug

[02:55:01.0000] <jgraham>
I guess there is the possibility that someone will raise your bug to an Issue

[02:56:00.0000] <jgraham>
but you can ignore it if you like

[03:06:00.0000] <MikeSmith>
the W3C needs an official theme song

[03:06:01.0000] <MikeSmith>
WHATWG already has that T.Rex "Whatever Happened to the Teenage Dream" song

[03:06:02.0000] <MikeSmith>
which is a great song

[03:06:03.0000] <MikeSmith>
but we need a similarly appropriate one for the W3C

[03:08:00.0000] <deane>
I don't particularly wish to use the W3C's buzilla since the last time I used it I was attacked by some crazed fan of Hixies

[03:12:00.0000] <jgraham>
Hixie has /groupies/? This spec editor lifestyle is so much mopre rock and roll than I thought

[03:13:00.0000] <MikeSmith>
I'm a fan of Hixie

[03:13:01.0000] <jgraham>
/me is somewhat ashamed that his brain has just started reworking "Money for Nothing" to more apropos form

[03:13:02.0000] <MikeSmith>
I'm aheh

[03:13:03.0000] <MikeSmith>
oh

[03:13:04.0000] <MikeSmith>
heh

[03:13:05.0000] <deane>
I'm a fan of Hixie too

[03:13:06.0000] <MikeSmith>
I'm also crazed maybe

[03:14:00.0000] <MikeSmith>
but I don't know if I'm crazed about Hixie

[03:14:01.0000] <MikeSmith>
I'm just a big fan

[03:14:02.0000] <deane>
nah,MikeSmith, you're ok

[03:14:03.0000] <MikeSmith>
like I'm a Charlie Sheen fan too

[03:14:04.0000] <jgraham>
MikeSmith: Have you ever turned up at his hotel room door without wearing any clothes?

[03:14:05.0000] <deane>
maybe you're his biggest fan

[03:14:06.0000] <jgraham>
That is really the acid test for a groupie

[03:14:07.0000] <deane>
maybe you're like a Hixie stalker

[03:15:00.0000] <MikeSmith>
jgraham: I have done that, and worse

[03:15:01.0000] <MikeSmith>
oh *his* hotel room

[03:15:02.0000] <MikeSmith>
well, no

[03:15:03.0000] <MikeSmith>
but other hotel rooms, yeah

[03:15:04.0000] <deane>
MikeSmith: perhaps you have photos of Hixie on your bedroom wall

[03:15:05.0000] <jgraham>
MikeSmith: Phew. The images I was getting there were seriously disturbing

[03:16:00.0000] <MikeSmith>
Hixie and David Cassidy from the Partridge Family

[03:16:01.0000] <MikeSmith>
I also have pictures of Roy Fielding

[03:16:02.0000] <MikeSmith>
waiting to be autographed

[03:17:00.0000] <MikeSmith>
anyway, I need to drop off

[03:17:01.0000] <MikeSmith>
going to watch a movie

[03:17:02.0000] <MikeSmith>
"The Town"

[03:17:03.0000] <MikeSmith>
which, it better be good, or I'm going to raise hell

[03:17:04.0000] <MikeSmith>
because I had to travel all the way across town to find a theater showing it at a decent time

[03:18:00.0000] <MikeSmith>
you all don't have too much fun without me

[03:19:00.0000] <deane>
MikeSmith: enjoy your movie

[03:44:00.0000] <annevk>
heycam, so should I file a bug on Web IDL to get some kind of object support?

[04:01:00.0000] <annevk>
http://www.w3.org/2005/06/tracker/webapi/issues/20 Member-only?

[04:26:00.0000] <annevk>
hmm, CustomEvent is not yet in Gecko or WebKit

[04:27:00.0000] <annevk>
so initCustomEvent can probably be dropped then

[04:27:01.0000] <annevk>
if people react positively to the initEvent(object) proposal

[04:29:00.0000] <jgraham>
/me doesn't really know why create and init are seperate steps

[04:29:01.0000] <jgraham>
But I havne't read the draft carefully

[04:32:00.0000] <hsivonen>
having create and init as separate steps feels like an artifact of C++ memory management

[04:33:00.0000] <annevk>
maybe at some point we'll make the init implicit

[04:33:01.0000] <annevk>
like new MouseEvent(initObject)

[04:33:02.0000] <annevk>
but for now this is good enough and much simpler

[04:33:03.0000] <zcorpan>
can we jump to that directly?

[04:34:00.0000] <annevk>
I'd rather not

[04:34:01.0000] <zcorpan>
having three ways to create+init seems bad

[04:34:02.0000] <annevk>
I mean everyone here gets excited about simplicity and how complex this is, but it's really not that complex and the use cases are nihil

[04:35:00.0000] <hsivonen>
does IE SmartScreen treat all unsigned .exe files dangerous by default even if they don't match against malware fingerprints?

[04:35:01.0000] <annevk>
zcorpan, one would just be a shorthand for the other in the end...

[04:35:02.0000] <zcorpan>
annevk: if the use cases are nihil, why bother with initEvent(object)?

[04:36:00.0000] <annevk>
zcorpan, as I explained in the email, I want event interfaces to be extensible and initXXXEvent does not accomplish that

[04:37:00.0000] <annevk>
zcorpan, so I want to introduce something as simple as possible that prevents introduction of any new initXXXEvent methods

[04:37:01.0000] <annevk>
(and maybe allows us to remove some of them)

[05:17:00.0000] <annevk>
hmm, newsycombinator discovered canvaspaint.org

[05:20:00.0000] <loucapo>
greetings everyone

[05:21:00.0000] <annevk>
good day

[05:21:01.0000] <loucapo>
i dont believe there is, but does anyone here know for sure about limitations of CORS posting from http to https?

[05:25:00.0000] <annevk>
in theory there are no limitations

[05:26:00.0000] <annevk>
in practice implementations might enforce limitations

[05:26:01.0000] <annevk>
at some point we might formalize those one way or another

[05:26:02.0000] <loucapo>
i see, we are seeing that status 0 issue again for non 200s

[05:26:03.0000] <loucapo>
and 0 for 200s on chrome

[05:28:00.0000] <bga_>
http://d.hatena.ne.jp/masa141421356/20110228/1298904732

[05:41:00.0000] <annevk>
if DOM Core did not have XML production checking the only normative dependencies would be Web IDL and RFC 2119...

[05:41:01.0000] <annevk>
hardcore

[05:58:00.0000] <annevk>
/me wonders where AryehGregor is

[05:59:00.0000] <annevk>
guess I should update XHR with the new hooks HTML has now

[06:30:00.0000] <annevk>
http://who-t.blogspot.com/2011/03/how-to-dos-developer.html glad I work on open standards instead...

[06:33:00.0000] <annevk>
updated http://dev.w3.org/2006/webapi/XMLHttpRequest-2/ with the new terms from HTML

[06:33:01.0000] <annevk>
now I guess DOM Level 3 Events review comments

[06:36:00.0000] <smaug____>
/me should review events part of web dom core

[06:37:00.0000] <jgraham>
annevk: Sarcasm? (about the "how to DOSâ¦" article)

[06:42:00.0000] <annevk>
only slightly, because we do not nearly have as much people involved as open source projects I think

[06:47:00.0000] <jgraham>
Pretty sure I have seen most of the IRC and email things

[06:58:00.0000] <Rik`>
TabAtkins: http://bonjourmozilla.fr/?post/2011/02/25/Boris-Zbarsky for some BZ facts :)

[07:09:00.0000] <loucapo>
annevk, have you seen something similar to what i was saying earlier?

[07:09:01.0000] <annevk>
strange as it may seem, I have not played much with CORS yet

[07:10:00.0000] <loucapo>
seems like not too many have

[07:10:01.0000] <loucapo>
i hear people still say its not possible to post across domains

[07:10:02.0000] <loucapo>
makes me wanna slap them

[07:10:03.0000] <annevk>
it's getting traction, but it's not exactly simple :/

[07:10:04.0000] <loucapo>
i put my code on github

[07:11:00.0000] <loucapo>
but never shared it

[07:11:01.0000] <annevk>
hopefully Apache will do this by default one day

[07:12:00.0000] <jgraham>
Rik`: I think that is the first photo of bz I ever saw

[07:30:00.0000] <annevk>
I think I raised all relevant points on DOM Level 3 Events: http://lists.w3.org/Archives/Public/www-dom/2011JanMar/

[07:33:00.0000] <zewt>
way too late to invert the return value of dispatchEvent...

[07:36:00.0000] <annevk>
zewt, I did not suggest that

[07:38:00.0000] <annevk>
As a heads up, Shelley Powers will be writing the WHATWG Weekly starting with her first post around March 21

[07:38:01.0000] <annevk>
jgraham volunteered to help out with publishing, though she can publish directly if she wishes in line with what we use for other contributors (everyone is allowed to blog)

[07:39:00.0000] <annevk>
She asked that any suggestions for the WHATWG Weekly are submitted to "Shelley Powers" <shelleypâbn>

[07:39:01.0000] <annevk>
as she will be primarily be focusing on HTML and might not always have all the details on everything else that is going on

[07:40:00.0000] <annevk>
I will include this summary in the next two WHATWG Weekly posts that I write as well and then hopefully the world knows how it works :)

[07:42:00.0000] <karlcow>
there will be redundancy ;) that will cool to see

[07:42:01.0000] <karlcow>
s/will/will be/

[07:51:00.0000] <annevk>
zewt, you misread what I wrote right? otherwise I need to fix something

[08:03:00.0000] <zewt>
ah yeah, k

[08:03:01.0000] <jonathanMH>
This may be a little wordpress specific, but how should I differ between nav and aside in my themes? When I distribute a theme I can't tell which widgets will be put in the widget areas by the user. Would <section> be the best solution for this kind of uncertainty?

[08:08:00.0000] <annevk>
anyone know if html5test.com guy is available on IRC?

[08:08:01.0000] <annevk>
the type=color validation tests are wrong

[08:09:00.0000] <annevk>
it's impossible to make that invalid

[08:09:01.0000] <annevk>
also, the form event tests are wrong

[08:09:02.0000] <annevk>
besides that the events are now removed 'dispatchFormInput()' in form will return false because of the parenthesis

[08:11:00.0000] <Rik`>
annevk: I believe volkmar is in contact with him, by mail

[08:12:00.0000] <volkmar>
Rik`: not really by email, but i have his email

[08:13:00.0000] <volkmar>
i was going to send him a patch to remove forminput, formchange, and dispatch methods

[08:13:01.0000] <volkmar>
but i have to understand why vim doesn't like utf-8 on this computer :(

[08:15:00.0000] <annevk>
the keygen tests are also wrong

[08:16:00.0000] <Rik`>
(and probably talking about forms :) )

[08:17:00.0000] <volkmar>
annevk: who cares about keygen?

[08:18:00.0000] <annevk>
dunno, but it's worth points!

[08:18:01.0000] <annevk>
actually, I used to care about <keygen>, mostly because it existed and I wanted it documented, but now that is done

[08:18:02.0000] <volkmar>
eh... i can't really ask who cares about these kind of tests, sadly :(

[08:19:00.0000] <annevk>
we decided to look through it because it's Friday

[08:19:01.0000] <annevk>
drinking a beer would be more enjoyable however so I'm going to do that now

[08:20:00.0000] <volkmar>
annevk: a beer is a thousand times better :)

[08:20:01.0000] <volkmar>
and cheers ;)

[08:27:00.0000] <TabAtkins>
Rik`: That bz link is funny. ^_^

[08:30:00.0000] <mven>
is it still going ?

[08:30:01.0000] <mven>
beh wrong channel ;p

[08:33:00.0000] <AryehGregor>
annevk, I'm reluctant to subscribe to any more spec mailing lists, they take enough time as-is.

[08:33:01.0000] <jgraham>
http://ie6countdown.com/

[08:34:00.0000] <TabAtkins>
Hah, Opera's nearly stamped out IE6 usage in Norway. ^_^

[08:35:00.0000] <AryehGregor>
Also, yeah, http://clubajax.org/presentations/the-fight-over-html5/ is awesome.

[08:36:00.0000] <AryehGregor>
"12.0% of the world was using Internet Explorer 6, which was 9% lower than the previous year"

[08:36:01.0000] <AryehGregor>
I assume they mean "9 percentage points" and not "9%" there.

[08:38:00.0000] <TabAtkins>
Yes, I assume so.

[08:39:00.0000] <TabAtkins>
This is why percentages are confusing - they don't contain information about what they're relative to.

[09:28:00.0000] <AryehGregor>
You know, if <xmp> isn't made valid, I could always do <script type=text/plain style=display:inline><b>some HTML I don't need to escape&&&!</b></script>

[09:28:01.0000] <AryehGregor>
That would just be semantically incorrect.

[09:28:02.0000] <AryehGregor>
I have to say, it's sad that <xmp> is flow content instead of phrasing content.  Makes it much less useful.

[09:34:00.0000] <AryehGregor>
"My main regret in saying this is that WebIDL, having evolved from Corba IDL,

[09:34:01.0000] <AryehGregor>
is notationally almost pessimal for encouraging good JS interface design. We

[09:34:02.0000] <AryehGregor>
have all been suffering the consequences of that. I fear that WebIDL, and

[09:34:03.0000] <AryehGregor>
What's that supposed to mean?

[09:34:04.0000] <AryehGregor>
JS programmers are the only ones we cater to, in real life . . .

[09:40:00.0000] <AryehGregor>
Argh, my toString() definition is wrong too.

[09:40:01.0000] <AryehGregor>
Ranges are bloody confusing.

[09:44:00.0000] <bfrohs>
Yes, yes they are.

[09:45:00.0000] <AryehGregor>
It's so tempting to assume that they assume that they include everything between their start and end nodes.

[09:45:01.0000] <AryehGregor>
That would make things so simple.

[09:46:00.0000] <AryehGregor>
But it's a primrose path.  Don't be fooled!

[09:46:01.0000] <bfrohs>
They don't?

[09:46:02.0000] <AryehGregor>
No, not even remotely.

[09:46:03.0000] <AryehGregor>
Consider a range whose start is (head, 0) and whose end is (body, 3).

[09:46:04.0000] <AryehGregor>
It contains a whole bunch of nodes that come after body in the DOM.

[09:46:05.0000] <bfrohs>
Also, I noticed when copying an ordered list, if you don't include the first item, it doesn't realize it is an ordered list and only sees the li and makes it unordered. (at least in ff)

[09:47:00.0000] <AryehGregor>
. . . what?

[09:47:01.0000] <AryehGregor>
Oh, I see.

[09:47:02.0000] <AryehGregor>
That sounds like a Selection.toString() issue!

[09:47:03.0000] <AryehGregor>
Which I'm supposed to be standardizing, but I got demoralized and moved on to things that are saner.

[09:47:04.0000] <bfrohs>
IIRC, there are several other issues when copying and pasting from mid-string (similar to the li issue)

[09:48:00.0000] <AryehGregor>
Yes, this is why I ran away from it.

[09:48:01.0000] <AryehGregor>
I didn't even consider this sort of mid-string issue.

[09:48:02.0000] <AryehGregor>
But I still ran away.

[09:48:03.0000] <bfrohs>
I don't blame you one bit

[09:49:00.0000] <AryehGregor>
Also because it's not clear anyone wants to standardize the API.

[09:49:01.0000] <zot-->
bravely ran away?

[09:49:02.0000] <AryehGregor>
Possibly.

[09:49:03.0000] <bfrohs>
oh, you wouldn't happen to be standardizing double/triple clicking selects, would you?

[09:49:04.0000] <AryehGregor>
Certainly not, those are platform-specific.

[09:49:05.0000] <bfrohs>
Cause it becomes *very* interesting when generated content is involved

[09:49:06.0000] <AryehGregor>
Oh, selecting generated content.

[09:49:07.0000] <AryehGregor>
Yeah, that's a fun one.

[09:49:08.0000] <bfrohs>
:first-letter especially

[09:50:00.0000] <AryehGregor>
Hmm?  What generated content would you put in :first-letter?

[09:50:01.0000] <bfrohs>
well, wait

[09:50:02.0000] <bfrohs>
Let me go back to what I was doing and figure out exactly what the issue was--one sec

[09:51:00.0000] <bfrohs>
Take that back, SPAN around first letter in an H1

[09:55:00.0000] <dglazkov>
is there any indication anywhere that meter/progress elements should change their orientation depending on the containing width?

[09:55:01.0000] <dglazkov>
I just scanned http://www.whatwg.org/specs/web-apps/current-work/multipage/the-button-element.html#the-progress-element and http://www.whatwg.org/specs/web-apps/current-work/multipage/the-button-element.html#the-meter-element

[09:55:02.0000] <dglazkov>
and there doesn't seem to be anything there

[09:57:00.0000] <AryehGregor>
dglazkov, http://www.whatwg.org/specs/web-apps/current-work/multipage/rendering.html#the-meter-element-0

[09:57:01.0000] <TabAtkins_>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=12232

[09:59:00.0000] <uf0>
question

[09:59:01.0000] <TabAtkins_>
answer

[09:59:02.0000] <uf0>
what kind of bugs occur if I leave out '<meta charset="utf-8">' in a basic html page

[09:59:03.0000] <TabAtkins_>
Depends.  Are you sending a charset header?

[09:59:04.0000] <uf0>
sending, as in in the apache config?

[10:00:00.0000] <TabAtkins_>
If you are, the page uses that.  If not, it defaults to, um, Windows-1252 or something?  Something that'll make your page look messed up if you use characters too far outside of ascii.

[10:00:01.0000] <TabAtkins_>
Yes.

[10:00:02.0000] <zot-->
depends on the user's environment--typically defaults to their default windows codepage, i think

[10:00:03.0000] <zot-->
(... in windows)

[10:00:04.0000] <uf0>
makes sense, you've answered my question :)

[10:00:05.0000] <uf0>
got another one

[10:01:00.0000] <zot-->
so many japanese pages with no charset defined anywhere, just expecting that everyone will default to sjis, heh

[10:01:01.0000] <uf0>
<meta http-equiv="X-UA-Compatible">

[10:01:02.0000] <zot-->
i almost wish every browser would just default to something totally nonsensical so the problem wouldn't be so obscured

[10:01:03.0000] <uf0>
is that something WhatWG created or microsoft

[10:01:04.0000] <uf0>
?

[10:01:05.0000] <TabAtkins_>
Microsoft.

[10:01:06.0000] <uf0>
so why this..

[10:01:07.0000] <uf0>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

[10:01:08.0000] <TabAtkins_>
We wouldn't do something so dumb.

[10:01:09.0000] <uf0>
the chrome=1 part

[10:01:10.0000] <uf0>
which is google

[10:02:00.0000] <TabAtkins_>
That's something that Chrome Frame listens for.

[10:02:01.0000] <uf0>
what's the point of adding that then, I see the point for IE

[10:02:02.0000] <uf0>
because I actually ran into a bug where it rendered in IE7 mode

[10:02:03.0000] <uf0>
and edge fixed

[10:02:04.0000] <TabAtkins_>
It tells Chrome Frame "hey, if you're installed, use yourself to render me".

[10:03:00.0000] <uf0>
you're a fucking guru, thanks!

[10:03:01.0000] <uf0>
case closed.

[10:19:00.0000] <AryehGregor>
Does Opera have a built-in mail client?

[10:20:00.0000] <karlcow>
AryehGregor: yes

[10:20:01.0000] <karlcow>
irc too

[10:20:02.0000] <karlcow>
p2p too

[10:20:03.0000] <zot-->
also tetris and a copy of emacs

[10:20:04.0000] <AryehGregor>
Mmm.

[10:21:00.0000] <AryehGregor>
rniwa is saying he thinks maybe <font> is needed for e-mail clients, because some clients don't understand CSS.

[10:21:01.0000] <AryehGregor>
I'll have to do a survey of e-mail clients to see.

[10:21:02.0000] <annevk>
AryehGregor, if DOM related matters are to be discussed on www-dom I suspect that would make sense for DOM Range too

[10:22:00.0000] <AryehGregor>
Then maybe I can subscribe to www-dom and unsubscribe from public-webapps.

[10:22:01.0000] <AryehGregor>
Is www-dom also a Webapps WG list?

[10:22:02.0000] <karlcow>
AryehGregor: the support of HTML in email clients has been historically bad.

[10:22:03.0000] <karlcow>
there is a very good source for it

[10:22:04.0000] <annevk>
AryehGregor, sort of

[10:23:00.0000] <karlcow>
let me fetch it

[10:25:00.0000] <karlcow>
AryehGregor: http://www.campaignmonitor.com/css/

[10:27:00.0000] <AryehGregor>
Ouch, Blackberry doesn't support font-family or font-size.

[10:33:00.0000] <AryehGregor>
Actually, I remember now, people were complaining about this and Hixie WONTFIXed them.

[10:34:00.0000] <AryehGregor>
They wanted legacy markup to be made valid because Blackberry needed it and he said they should complain to Blackberry.

[10:34:01.0000] <AryehGregor>
I suspect browser implementers whose rendering engines are used for e-mail clients won't be receptive to that suggestion.

[10:34:02.0000] <karlcow>
Email marketers/communications teams/PR people have to rely on tables for their html emails

[11:04:00.0000] <zot-->
html spec vs. chrome 9: html spec wins

[11:06:00.0000] <AryehGregor>
Hmm?

[11:08:00.0000] <zewt>
made the mistake of triple-clicking in the spec, heh

[11:24:00.0000] <AryehGregor>
Argh, that's the second time in two days I wrote "for (var i = 0; i < foo; i++)" instead of "for (var i = 0; i < foo.length; i++)".

[11:24:01.0000] <AryehGregor>
This is why we want foreach-style loops.  C-style for loops are an abomination.

[11:25:00.0000] <othermaciej>
what language are you writing in?

[11:26:00.0000] <AryehGregor>
JavaScript.

[11:26:01.0000] <zewt>
gah, i can't copy text from the spec with chrome no matter what I do; it always decides to select the whole document

[11:26:02.0000] <AryehGregor>
As I understand it, for (var entry in arr) is a bad idea because it might pick up added attributes or wacky stuff like that, right?

[11:27:00.0000] <gsnedder1>
AryehGregor: Right

[11:29:00.0000] <jamesr_>
it's a crappy language that lets you do that

[11:29:01.0000] <jamesr_>
without at least some sort of indication of a problem

[11:29:02.0000] <jamesr_>
comparing an int to an array is silly

[11:29:03.0000] <othermaciej>
for (var entry in arr) won't really do what you want

[11:29:04.0000] <AryehGregor>
Yes, the typing here is really too weak.

[11:30:00.0000] <AryehGregor>
It should raise an exception or at least log a warning if you compare a number to an array.

[11:30:01.0000] <AryehGregor>
I guess it's too late for that, though.

[11:30:02.0000] <AryehGregor>
(Maybe in strict mode?  :) )

[11:30:03.0000] <zewt>
can we just make strict mode python

[11:30:04.0000] <gsnedder1>
Logging a warning can always be done. And changes in Harmony are always possible.

[11:30:05.0000] <AryehGregor>
(Is there any provision for extending strict mode?  "use stricter mode";?)

[11:30:06.0000] <AryehGregor>
zewt++

[11:31:00.0000] <gsnedder1>
AryehGregor: Harmony will have separate MIME-type, as I understand the intention

[11:31:01.0000] <othermaciej>
it will enumerate the property names, not the properties

[11:31:02.0000] <othermaciej>
however, I don't see how forgetting .length undermines for loops

[11:31:03.0000] <othermaciej>
obviously there is much better syntax for enumerating arrays out there, but that's not a very good example of why for loops are grungy

[11:31:04.0000] <AryehGregor>
Given that, will anyone actually use it?

[11:31:05.0000] <AryehGregor>
Well, I'd reply, but you just left.

[11:32:00.0000] <AryehGregor>
gsnedder1, FWIW, I found no Opera bugs with my deleteContents() tests, other than unrelated bugs in Range that I already knew about.  I found at least one bug in every other browser.

[11:32:01.0000] <gsnedder1>
AryehGregor: Well you generally have a properly if you ever want to make any syntax change because they're inherently not BC compatible, and will just throw SyntaxError in existing impls

[11:32:02.0000] <AryehGregor>
. . . although the unrelated bugs still make Opera fail more bugs than any other non-IE browser.

[11:33:00.0000] <AryehGregor>
gsnedders, so instead, let's pop up a "would you like to download this file?" dialog in legacy UAs! . . . or actually, I guess they just ignore scripts with different <script type="">, right?

[11:33:01.0000] <gsnedders>
AryehGregor: Just ignore them. They have to, because of legacy VBScript.

[11:33:02.0000] <AryehGregor>
As long as they don't care about the actual MIME type served by the server, that sounds potentially sane.

[11:34:00.0000] <gsnedders>
AryehGregor: There was some talk about both in-band and out-of-band markers

[11:35:00.0000] <gsnedders>
I haven't been massively keeping up-to-date on all of this, and I'm not on the TC39 list

[11:49:00.0000] <uf0>
why are these chosen to display block: article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section { display:block; }

[11:50:00.0000] <uf0>
why aren't any others added? is it because those are the only block elements

[11:50:01.0000] <uf0>
and everything else is inline by default?

[12:10:00.0000] <AryehGregor>
IE sometimes randomly doesn't run some of my tests, even with timeout: 60000.  :(

[12:11:00.0000] <AryehGregor>
Where by "sometimes" I mean "usually".

[12:11:01.0000] <AryehGregor>
Oh, now it worked.

[12:52:00.0000] <aho>
http://html5doctor.com/html5-simplequiz-6-zeldmans-fat-footer/#comment-14585

[12:52:01.0000] <aho>
is there anything else one could use for image+caption?

[12:53:00.0000] <aho>
dl/dt/dd is kinda icky :>

[12:59:00.0000] <AryehGregor>
<div> and <span>?

[12:59:01.0000] <aho>
<div><img/><span>caption</span></div>... meh :>

[13:00:00.0000] <aho>
with <dl><dt><img/></dt><dd>caption</dd></dl> you got at least some relationship between the image and the caption

[13:01:00.0000] <aho>
i.e. they belong together

[13:01:01.0000] <aho>
whereas the former is just some image and oh there is also some span... might be the caption or some other text

[13:02:00.0000] <AryehGregor>
<div> implies there's some type of grouping relevant to its contents.

[13:03:00.0000] <aho>
that's only as strong as the outer dl in the second example

[13:04:00.0000] <aho>
it's like a pile of things vs a pile of things where two things are glued together :>

[13:30:00.0000] <annevk>
Hixie, no idea why impls do it that way, found it via http://www.w3.org/2006/webapi/track/issues/35

[13:31:00.0000] <annevk>
Hixie, I suspect there might be a few other things that work this way, but I have not tried figuring it out

[13:31:01.0000] <annevk>
Hixie, we could introduce some kind of "default handler" concept in DOM Core for this I suppose

[13:47:00.0000] <AryehGregor>
annevk, okay, I joined www-dom.  If DOM discussion stays there, maybe I can drop public-webapps.

[13:47:01.0000] <AryehGregor>
Mostly stuff about IndexedDB and whatnot, it seems.

[14:17:00.0000] <uf0>
what's the using the keyword 'only' in: @media only screen and (max-device-width: 480px)

[14:18:00.0000] <uf0>
what's the use**

[14:21:00.0000] <Hixie>
annevk: can we change implementations?

[14:23:00.0000] <uf0>
I don't see the point of using 'only' media queries

[14:23:01.0000] <uf0>
because browsers that don't support MQ will ignore anyway

[14:23:02.0000] <uf0>
am I wrong here?

[14:24:00.0000] <uf0>
@media only screen and (max-device-width: 480px) vs @media screen and (max-device-width: 480px)

[14:24:01.0000] <Hixie>
uf0: according to html4, browsers that don't support MQ will treat "screen and (foo)" as "screen"

[14:24:02.0000] <stevela>
q

[14:24:03.0000] <stevela>
sorry - ignore me.

[14:25:00.0000] <uf0>
so are you advocating for me to use @media only screen and (max-device-width: 480px)

[14:25:01.0000] <uf0>
?

[14:25:02.0000] <uf0>
that's safer?

[14:26:00.0000] <Hixie>
only way to know what's safer is to test browsers

[14:26:01.0000] <tw2113>
use media queries to alter what would be the default view, and if they're not supported, have the regular version show up

[14:27:00.0000] <uf0>
tw2113 I'm specifically talking about the keyword 'only'

[14:27:01.0000] <uf0>
should it be left in or not

[14:29:00.0000] <uf0>
thanks Hixie.

[14:39:00.0000] <heycam>
annevk, yes file a bug please (for generic structured-cloneable object support)

[14:39:01.0000] <annevk>
Hixie, no idea really, maybe cc jonas and such

[14:39:02.0000] <annevk>
Hixie, and some other "old timers"

[14:39:03.0000] <annevk>
Hixie, they might know :)

[14:40:00.0000] <annevk>
heycam, will do tomorrow

[14:40:01.0000] <heycam>
annevk, how does html5 deal with? are there specific apis that take an object to do a structured clone of?

[14:41:00.0000] <annevk>
heycam, postMessage() and localStorage I guess

[14:42:00.0000] <annevk>
heycam, Jonas says Indexed DB might use it

[14:42:01.0000] <annevk>
heycam, for events I guess we only need the keys and their immediate values to be "sane"

[14:42:02.0000] <annevk>
heycam, as e.g. CustomEvent.details can take an arbitrary object as far as I can tell

[14:43:00.0000] <heycam>
annevk, for details though will it do the structured clone?

[14:43:01.0000] <heycam>
or just hold on a reference to that object?

[14:43:02.0000] <heycam>
if the latter, we don't need anything special

[14:43:03.0000] <heycam>
and the implementation won't be inspecting that object, it's only for script to use, right?

[14:44:00.0000] <annevk>
heycam, right, but that object can be nested in another one that does need some kind of "saneness"

[14:44:01.0000] <annevk>
heycam, see http://lists.w3.org/Archives/Public/www-dom/2011JanMar/0061.html

[14:45:00.0000] <heycam>
annevk, ah

[14:45:01.0000] <annevk>
heycam, so it's just a reference, but it can be inside an object where you need some kind of guarantees

[14:46:00.0000] <heycam>
annevk, so I think the way some of the DAP specs handled this is to define an interface (with [Callback] maybe?) with writable attributes for each of the keys you might expect on the object

[14:46:01.0000] <heycam>
annevk, that might not work if you don't know the set of keys you're expecting

[14:46:02.0000] <heycam>
s/might not/won't/

[14:55:00.0000] <annevk>
heycam, what I want is an object with an unknown set of keys that I can query in any order without side effects of which the values can be basically anything; i.e. numbers, objects, strings, etc.

[14:56:00.0000] <heycam>
annevk, ok

[14:56:01.0000] <heycam>
annevk, please mention that in the bug :)

[14:57:00.0000] <annevk>
yeah, tomorrow I will try to write it down

[14:57:01.0000] <zewt>
with deterministic side-effects, rather than with no side-effects

[14:57:02.0000] <annevk>
and make sure I add the Indexed DB people

[14:57:03.0000] <heycam>
zewt, yeah if the object has getters on it...

[14:57:04.0000] <zewt>
eg. evaluate getters into static properties

[14:58:00.0000] <annevk>
http://my.opera.com/haavard/blog/2011/03/04/doj

[14:58:01.0000] <zewt>
heh

[15:00:00.0000] <zewt>
<mpeg-la> we can't possibly tell you which of our patents you're infringing. we have way too many and they're all hundreds of pages each, you can't expect us to know them all!

[15:02:00.0000] <Hixie>
annevk: make sure to mention that we need to define what happens with custom getters on these things

[15:02:01.0000] <annevk>
yeah, that's the side effect thingie above

[15:03:00.0000] <annevk>
guess I'll just end up enumerating the various cases it needs to address and the constraints and let heycam solve it :)

[15:04:00.0000] <Hixie>
k

[15:05:00.0000] <annevk>
heycam, btw, http://html5.org/specs/dom-parsing.html

[15:05:01.0000] <heycam>
annevk, ah thanks

[15:05:02.0000] <heycam>
annevk, so that parses/serialises as either HTML/XML depending on the document mode

[15:05:03.0000] <annevk>
yeah

[15:06:00.0000] <annevk>
not in DOM Core to prevent lots of dependencies

[15:06:01.0000] <heycam>
I wonder if it would be useful to be able to get a definite parsing mode regardless of the document mode

[15:06:02.0000] <annevk>
DOMParser does that

[15:06:03.0000] <heycam>
annevk, ok. (though less convenient.)

[15:06:04.0000] <annevk>
except not yet it seems

[15:08:00.0000] <heycam>
annevk, when are you away?

[15:09:00.0000] <annevk>
anyway, bedtime

[15:09:01.0000] <annevk>
10 days from now

[15:09:02.0000] <heycam>
k

[15:09:03.0000] <heycam>
nn

[15:09:04.0000] <annevk>
nn


2011-03-05
[16:10:00.0000] <ap>
Hixie: is splitting text nodes during parsing something the HTML spec would be concerned about? WebKit stopped doing that while implementing HTML5, but looks like it was quite bad for performance

[16:10:01.0000] <ap>
so we may have to reintroduce that

[16:12:00.0000] <Hixie>
why is it bad for perf?

[16:13:00.0000] <othermaciej>
extra allocation and copying, I would presume

[16:13:01.0000] <othermaciej>
though I'm not sure what benchmark ap is looking at that convinces him it's an issue

[16:13:02.0000] <Hixie>
why would one long string need more allocation and copying than more shorter strings?

[16:14:00.0000] <ap>
Hixie: search and replace algorithms that create new nodes hit this (think about an algorithm that finds all e-mails with a regexp, and replaces them with <a> links)

[16:15:00.0000] <ap>
Hixie: it's not about WebKit own performance, but about performance of scripts and other clients

[16:16:00.0000] <Hixie>
i don't understand why the number of DOM nodes needs to have any correlation to the number of allocations in the background, nor why editing fewer larger strings needs to be slower than more editing smaller strings.

[16:16:01.0000] <ap>
Hixie: yeah, I need to explain in more detail

[16:16:02.0000] <Hixie>
just implement the DOM string as an interface on top of a string system that uses whatever is optimal for the platform

[16:17:00.0000] <Hixie>
e.g. if someone tries to splice something into the middle of a string, you can just have the DOM node be stored as two strings and an edit point

[16:17:01.0000] <Hixie>
no need to move the original string at all

[16:17:02.0000] <Hixie>
etc

[16:18:00.0000] <ap>
Hixie: say, you're processing a string line aaa&lt;ianâhc>bbb, and need to replace it with aaa<a href="mailto:ianâhc">ianâhc</a>bbb

[16:19:00.0000] <ap>
Hixie: you have to split the text, and copy "bbb" into a new node

[16:19:01.0000] <ap>
Hixie: the larger nodes are, the more time it takes

[16:19:02.0000] <Hixie>
only if your implementation of text nodes is naive

[16:20:00.0000] <Hixie>
if you split the dom text nodes so that you have adjacent nodes in the dom, all you're going to do is break implementations that don't expect it

[16:20:01.0000] <ap>
Hixie: I can add to that that the strings are round tripped to a client via an API

[16:20:02.0000] <Hixie>
s/implementations/pages/

[16:21:00.0000] <ap>
Hixie: given that both Gecko and WebKit used to split, those pages were already broken

[16:21:01.0000] <Hixie>
so e.g. if the dom nodes are [aaa&lt;ap@web] and [kit.org>bbb], pages will likely miss it entirely

[16:21:02.0000] <ap>
Hixie: you are talking about a pretty serious amount of sophistication for a CharacterData implementation here

[16:22:00.0000] <Hixie>
sure

[16:22:01.0000] <Hixie>
i'd rather browsers be sophisticated that rely on web page authors to be sophisticated :-)

[16:22:02.0000] <Hixie>
or as others would say, the "priority of constituencies" puts authors ahead of browsers

[16:23:00.0000] <ap>
Hixie: my priority here is to prevent real applications from freezing due to this change

[16:24:00.0000] <ap>
Hixie: I'm only working on a fix, and wanted to touch bas first, but it's pretty unlikely that we'll keep apps freezing until the desired level of sophistication is reached

[16:25:00.0000] <Hixie>
thanks for the heads-up

[16:25:01.0000] <othermaciej>
ap: is there a web app that has an N^2 problem with growing text nodes?

[16:26:00.0000] <othermaciej>
giant run of plaintext I would guess?

[16:26:01.0000] <ap>
othermaciej: <rdar://problem/9013049>

[16:26:02.0000] <ap>
othermaciej: in that case, it's also about memory use

[16:28:00.0000] <othermaciej>
ap: I shall comment internally, given the nature of that bug

[17:31:00.0000] <TabAtkins_>
Hixie: I started using <xmp> today in Lists.  It makes my life easier.

[17:33:00.0000] <aho>
what's xmp? :l

[17:34:00.0000] <TabAtkins_>
Like <pre>, but you don't need to escape anything inside of it.

[17:34:01.0000] <aho>
:o

[17:34:02.0000] <TabAtkins_>
So <xmp>To bold something, type <b>.</xmp> actually says what you'd expect.

[17:35:00.0000] <aho>
can't find it in the html5 specs... or well... anywhere

[17:35:01.0000] <TabAtkins_>
It's in the "obsolete elements" section right now.

[17:35:02.0000] <aho>
only found some old blog post which says it's deprecated

[17:36:00.0000] <aho>
hm

[17:36:01.0000] <TabAtkins_>
Webkit, at least, actually supports <xmp> properly.  It's quite helpful when writing HTML examples

[17:36:02.0000] <aho>
on my blog i'm using some input filter to get this kind of effect

[17:37:00.0000] <aho>
i always thought that this was a tad strange

[17:37:01.0000] <TabAtkins_>
For yourself, or for comments?

[17:37:02.0000] <aho>
myself

[17:37:03.0000] <TabAtkins_>
(This does *not* protect you against code injection from comments.)

[17:37:04.0000] <TabAtkins_>
Ok, yeah.

[17:37:05.0000] <TabAtkins_>
I write my blog in markdown, so the code blocks in markdown automatically know to escape their contents when serializing to HTML.

[17:38:00.0000] <aho>
well, i kinda like it and i always wanted something like that for my other technical documentation

[17:38:01.0000] <aho>
right now i always search/replace < and >, but that's somewhat annoying

[17:38:02.0000] <aho>
needless to say that it also makes the markup kinda ugly

[17:38:03.0000] <TabAtkins_>
You don't need to replace >, but you *do* need to replace &.

[17:39:00.0000] <TabAtkins_>
(> is safe everywhere except in unquoted attribute values)

[17:39:01.0000] <aho>
i replace <, &, and > (for symmetry) :>

[17:40:00.0000] <aho>
is xmp something from html 3.x?

[17:40:01.0000] <aho>
ah... 2.0 it seems

[17:41:00.0000] <Philip`>
I don't think there's any HTML spec in which it wasn't already deprecated

[17:41:01.0000] <aho>
also <plaintext> and <listing>... weird :)

[17:41:02.0000] <oojacoboo>
does anyone know if the pseudo class :focus will allow styling of other elements based on that event or if it's only binded to the styling of that particular element?

[17:42:00.0000] <aho>
there is still no way to specifiy the programming language of a <code> block, right?

[17:42:01.0000] <TabAtkins_>
oojacoboo: I don't understand what you mean.

[17:42:02.0000] <TabAtkins_>
aho: No way in HTML, yeah.

[17:43:00.0000] <oojacoboo>
TabAtkins_: this is my selector that doesn't work... form.schweet li.help-tip input:focus + a.tipper

[17:43:01.0000] <TabAtkins_>
(Various javascript syntax-highlighting scripts recommend ways to mark it up.)

[17:43:02.0000] <oojacoboo>
here is one that does... form.schweet li.help-tip:hover a.tipper

[17:44:00.0000] <TabAtkins_>
Okay.  There's nothing wrong with the former.  As long as the input is focused, and the rest of the structure is right, then it will work.

[17:44:01.0000] <oojacoboo>
TabAtkins_: it doesn't :/

[17:44:02.0000] <TabAtkins_>
oojacoboo: I'd have to see your code.  There's nothing wrong with the selector, so you're doing something else wrong.

[17:44:03.0000] <oojacoboo>
it's the most awkward thing I've seen

[17:45:00.0000] <oojacoboo>
I wish I could get you the code, it's a massive application

[17:45:01.0000] <aho>
ye, most of them use classes for that, but that's not quite right... i mean... there is zero semantic weight behind it. some micro format bs would work, i guess. but i'd prefer some regular attribute for that. i mean, <code> *is* for source code in *some* language

[17:45:02.0000] <TabAtkins_>
aho: Use data-src-lang or something.

[17:46:00.0000] <aho>
right now, i'd use data-lang, yes ;)

[17:47:00.0000] <aho>
Although there is no formal way to indicate the language of computer code being marked up, authors who wish to mark code elements with the language used, e.g. so that syntax highlighting scripts can use the right rules, may do so by adding a class prefixed with "language-" to the element.

[17:47:01.0000] <aho>
meep :>

[17:47:02.0000] <oojacoboo>
TabAtkins_: am I wrong in assuming that the cursor doesn't have to be over the input for :focus to be triggered?

[17:47:03.0000] <oojacoboo>
I thought the cursor sitting in an input kept the :focus event triggered

[17:47:04.0000] <TabAtkins_>
oojacoboo: Focus, for an input, is when the caret is in the input.

[17:48:00.0000] <TabAtkins_>
It has nothing to do with the mouse cursor.

[17:48:01.0000] <oojacoboo>
strange...

[17:48:02.0000] <TabAtkins_>
Why is it strange?  That's what it means to "focus" an input.

[17:48:03.0000] <aho>
there can be only one element with focus... if an element got focus it will receive keyboard input

[17:48:04.0000] <TabAtkins_>
Yes.

[17:49:00.0000] <oojacoboo>
the behavior I am seeing is very strange, that event handling is as expected

[17:49:01.0000] <aho>
typically <tab> can be used to focus the next element and <shift>+<tab> jumps backwards

[17:49:02.0000] <oojacoboo>
aho: right

[17:50:00.0000] <aho>
clicking on some element also gives it focus

[17:50:01.0000] <oojacoboo>
yea, I actually know how it works, just not experiencing it

[17:50:02.0000] <TabAtkins_>
oojacoboo: Can you get :focus to work on its own, like "input:focus { outline: thick solid red; }" ?

[17:50:03.0000] <oojacoboo>
TabAtkins_: yes

[17:51:00.0000] <oojacoboo>
that much is handled correctly

[17:51:01.0000] <oojacoboo>
background-color, color, etc

[17:52:00.0000] <TabAtkins_>
oojacoboo: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/865

[17:52:01.0000] <aho>
input:focus+label works in ff3.6... i just tried that

[17:53:00.0000] <aho>
(completely useless, but yes, that works) :>

[17:53:01.0000] <oojacoboo>
trying to see if something else is the culprit here

[18:01:00.0000] <oojacoboo>
TabAtkins_: no clue, it seems to be working fine in the testcases where I try to replicate, clearly something else is going on... thanks for your help, if I find something I'll report back

[18:01:01.0000] <TabAtkins_>
No problem.

[18:01:02.0000] <TabAtkins_>
Unrelated: A virus so big it gets viruses: http://arstechnica.com/science/news/2011/03/a-virus-so-large-it-gets-viruses.ars?utm_source=twitterfeed&utm_medium=twitter&utm_campaign=rss

[18:11:00.0000] <aho>
would be nice if there would be something like focus, which bubbles up like hover :>

[18:12:00.0000] <aho>
input:focus+label <- e.g. that kind of thing would be useful if i could write it the other way around

[18:12:01.0000] <TabAtkins_>
label:has-sibling(input:focus), someday...

[18:12:02.0000] <aho>
but with some focus bubbling thingy i could do that via the wrapper

[18:13:00.0000] <aho>
.whatever:focus-bubble-voodoo>label :>

[18:15:00.0000] <aho>
putting the label after the text fields would work of course, but that makes positioning a nightmare

[18:15:01.0000] <aho>
and of course you'd end up with pure nonsense if you look at it without css

[18:20:00.0000] <aho>
input:focus^label (adjacent previous sibling, lol)

[18:20:01.0000] <aho>
well, would be nice to have

[18:20:02.0000] <aho>
it's also kinda funny how css ran out of special chars :>

[18:23:00.0000] <oojacoboo>
aho that'd be awesome

[18:24:00.0000] <zewt>
inputâºfocus

[18:24:01.0000] <aho>
input(ã ãÐã)ã å½¡ â»ââ»focus

[18:24:02.0000] <aho>
rage table flip combinator

[18:25:00.0000] <zewt>
inputå·¥å·¥å·¥ï½´ï½´ï½´ï½´ï½´ï½´ï½ªï½ªï½ªï½ªï½ªï½ª(ï¾Ðï¾)ï½ªï½ªï½ªï½ªï½ªï½ªï½´ï½´ï½´ï½´ï½´ï½´å·¥å·¥å·¥focus

[18:26:00.0000] <aho>
:)

[18:28:00.0000] <aho>
well, there aren't too many "regular special characters" left and even most of those which are currently used don't make any sense whatsoever

[18:29:00.0000] <zewt>
can use longer tokens where it's not ambiguous

[18:29:01.0000] <aho>
yea, :whatever(...) will always work, but that's kinda awful :>

[18:30:00.0000] <aho>
input:focus:previous-adjacent-sibling(label){... uh hum...}

[18:30:01.0000] <zewt>
a::b->c@@d

[18:31:00.0000] <zewt>
as long as it doesn't devolve into the gnu regex absurdities like [:digit:] or whatever, heh

[18:31:01.0000] <aho>
[href$=".pdf"]

[18:31:02.0000] <aho>
:>

[18:33:00.0000] <aho>
but to be honest, i only use a very small subset of css selectors/combinators for the things i currently build (with some architecture n stuff)

[18:37:00.0000] <oojacoboo>
aho: honestly, you rarely need the special ones

[18:37:01.0000] <oojacoboo>
I've built a very advanced application that uses a lot of css, and very rarely need special selectors

[18:39:00.0000] <aho>
i do virtually everything with the child combinator

[18:39:01.0000] <oojacoboo>
what do you mean?

[18:39:02.0000] <aho>
the descendant one is only used for recursion :>

[18:39:03.0000] <oojacoboo>
.this < .that

[18:39:04.0000] <aho>
>

[18:39:05.0000] <oojacoboo>
gotcha

[18:40:00.0000] <aho>
everything is a sub tree which can be plugged in any leaf of any other sub tree

[18:40:01.0000] <aho>
works great so far

[18:41:00.0000] <oojacoboo>
you can't always go up the DOM though

[18:41:01.0000] <oojacoboo>
esp when you need pseudo classes

[18:42:00.0000] <aho>
you cant go up or backwards with css

[18:42:01.0000] <aho>
only down and forwards

[18:42:02.0000] <oojacoboo>
yea, but what I mean is, you can't always target a parent

[18:42:03.0000] <oojacoboo>
or use that parent rather, in the selection

[18:42:04.0000] <aho>
(well, strictly speaking it's the other way around since selectors are evaluated from right to left) :>

[18:42:05.0000] <aho>
of course i can

[18:43:00.0000] <oojacoboo>
how can I do this then...

[18:43:01.0000] <aho>
the markup is created that way from the very beginning

[18:43:02.0000] <aho>
first structure, then markup/css

[18:43:03.0000] <oojacoboo>
li:focus a.tipper {} where I have... <li><input /><a></a></li>

[18:43:04.0000] <aho>
and not arbitrary markup which i then try to beat into submission via css :>

[18:44:00.0000] <oojacoboo>
aho: of course, that's why I am saying I almost never have an issue

[18:44:01.0000] <oojacoboo>
so long as you have control over the DOM, you are almost always ok

[18:45:00.0000] <oojacoboo>
in that example I want to do something like... li(li a) < input:focus {}

[18:46:00.0000] <oojacoboo>
obv that doesnt' make sense, but pass the event on the input to style down from the <li>

[18:46:01.0000] <aho>
li isn't focusable by default

[18:47:00.0000] <aho>
<li tabindex="0" ...> makes it focusable

[18:47:01.0000] <aho>
but that's all kinds of ugly :>

[18:47:02.0000] <oojacoboo>
really??

[18:48:00.0000] <oojacoboo>
is that legit

[18:48:01.0000] <zewt>
iirc not consistently supported

[18:49:00.0000] <aho>
well, focus doesnt bubble up anyways

[18:49:01.0000] <oojacoboo>
right

[18:49:02.0000] <aho>
so, if some input inside that li got focus... then this one got the focus any nothing else gets it :>

[18:49:03.0000] <aho>
*and

[18:50:00.0000] <aho>
that's why i said it would be nice to have something like focus which bubbles up like hover :>

[18:50:01.0000] <oojacoboo>
mmm yea, just saying it'd be nice to be able to have it bubble or, or hack that somehow

[18:50:02.0000] <oojacoboo>
li < input:focus {}

[18:51:00.0000] <oojacoboo>
you'd get something sorta like that, but how could you apply that to children of the li

[18:51:01.0000] <zewt>
people have complained about focus events not bubbling since forever, heh

[18:52:00.0000] <oojacoboo>
obv not enough people ;)

[18:54:00.0000] <zewt>
oh it's mouseover/mouseout bubbling that i'm thinking of

[00:14:00.0000] <annevk>
http://www.isolani.co.uk/blog/standards/MicrosoftsAntiIe6Rhetoric

[00:51:00.0000] <annevk>
I pulled bug before the comment: http://html5.org/tools/web-apps-tracker

[00:51:01.0000] <annevk>
Renamed "R" to "SVN" and "B" to "Bug"

[00:51:02.0000] <annevk>
better?

[04:41:00.0000] <hsivonen>
Hixie: FYI: https://bugzilla.mozilla.org/show_bug.cgi?id=638842

[06:01:00.0000] <foolip_>
gsnedders, you there?

[06:18:00.0000] <gsnedders>
foolip_: Vaguely.

[06:18:01.0000] <foolip_>
gsnedders, I was going to ask how the spec section ids are generated, but then I found secid.py

[06:34:00.0000] <foolip_>
gsnedders, although, now it looks like secid.py isn't actually used in anolis2, did I find the wrong code?

[06:35:00.0000] <foolip_>
maybe the code is just invoked in some more roundabout way than actually importing secid and calling secid.Process...

[06:51:00.0000] <kukman>
There is some bug in Selections in Opera

[06:51:01.0000] <kukman>
http://jsfiddle.net/pEqeu/2/

[06:51:02.0000] <kukman>
and, if you click mouse anywhere else, space between numbers will be still selected

[09:23:00.0000] <annevk>
Could also name the SVN column HTML

[09:23:01.0000] <annevk>
currently at HTML5944

[13:37:00.0000] <Yuhong>
Making HTML XML-valid then omit the xmlns because of a hate for namespaces? Huh?

[13:37:01.0000] <Yuhong>
http://tantek.com/2010/302/b1/xhtml-dead-long-live-xml-valid-html5

[13:38:00.0000] <zewt>
generally i tend not to take anyone seriously who uses the world "fail" in all caps

[13:50:00.0000] <aho>
personally, i kinda like STOP EVERYTHING error handling :>

[13:51:00.0000] <aho>
i mean... gee... we are able to produce all kinds of well-formed formats. there is nothing magical about html which makes it impossible

[13:52:00.0000] <Dashiva>
aho: Why do you hate your users?

[13:53:00.0000] <aho>
a broken image wont work

[13:53:01.0000] <aho>
a broken archive wont work

[13:53:02.0000] <aho>
a broken css file wont work

[13:53:03.0000] <aho>
a broken js file wont work

[13:53:04.0000] <Dashiva>
Sure they do

[13:54:00.0000] <aho>
about as well as broken xml, yes

[13:54:01.0000] <Dashiva>
You use broken css files and images every day

[13:55:00.0000] <Dashiva>
Same with JS files, for that matter

[13:55:01.0000] <aho>
we're talking about non recoverable errors

[13:55:02.0000] <zewt>
"not strictly correct" != "broken"; if it works it's, by definition, not broken. heh

[13:55:03.0000] <aho>
not things like ASI

[13:56:00.0000] <aho>
"the image ... contains errors and cannot be displayed" :>

[13:56:01.0000] <Dashiva>
zewt: Except that's how XML defines broken

[13:56:02.0000] <aho>
well, try writing some junk into the header of a jpg file

[13:56:03.0000] <aho>
see how that works

[13:56:04.0000] <aho>
:P

[13:57:00.0000] <zewt>
we're speaking english, not XML :P

[13:57:01.0000] <zewt>
aho: JPEGs aren't human-writable, so they can be a lot less forgiving

[13:58:00.0000] <aho>
how about obj (wavefront) then?

[13:58:01.0000] <aho>
technically it's human readable, too

[13:58:02.0000] <zewt>
don't know it

[13:58:03.0000] <aho>
it's a text based model format

[13:59:00.0000] <aho>
needless to say that things will go horribly wrong if you put some random junk data into one of those obj files :>

[13:59:01.0000] <zewt>
even readers for binary formats generally have to be forgiving of certain errors, when buggy software puts weird files in the wild; eg. reading AVIs is a serious pain

[14:00:00.0000] <aho>
well, that's what html5 is kinda doing... it tries to specify this error handling

[14:00:01.0000] <aho>
beforehand the result was just random

[14:00:02.0000] <aho>
that's not any good, really :)

[14:00:03.0000] <aho>
so yea, it should be either very strict and if it isn't the result should be predictable

[14:01:00.0000] <aho>
the latter is of course a lot more complicated

[15:33:00.0000] <aho>
there really should be a global vendor prefix registry which is maintained by browser vendors

[15:33:01.0000] <aho>
the current state is somewhat troublesome

[15:34:00.0000] <paul_irish>
how so

[15:34:01.0000] <paul_irish>
like when things go unprefixed.. and what existing prefixed props are supported by each?

[15:34:02.0000] <aho>
there are hundreds of prefixes and figuring out which one is still needed is pretty time consuming

[15:34:03.0000] <aho>
yes

[15:35:00.0000] <paul_irish>
hundreds of prefixes? i thought there were only 4 practical ones.. and then like ~14 that are in some spec somewhere.

[15:35:01.0000] <aho>
like -moz-opacity was required for firefox <0.9 and it's completely ignored since 3.5

[15:36:00.0000] <Peter->
I got history info on http://peter.sh/experiments/vendor-prefixed-css-property-overview/ which I plan to do things with

[15:36:01.0000] <paul_irish>
mozilla and google are (and will be) documenting that on the MDC

[15:36:02.0000] <Peter->
the primary problem is that gecko and webkit can be automated, whereas Opera and Microsoft cannot

[15:36:03.0000] <Peter->
(I did e-mail them)

[15:37:00.0000] <aho>
http://code.google.com/p/cssmin/source/browse/tags/version-2.0/cssmin.php

[15:37:01.0000] <aho>
line 386 and up

[15:37:02.0000] <gsnedders>
Peter-: Automated in what way?

[15:38:00.0000] <Peter->
Both Gecko as WebKit maintain a single file in which all properties are available

[15:38:01.0000] <aho>
where is that file?

[15:38:02.0000] <aho>
havent seen it on mdc

[15:38:03.0000] <Peter->
I fetch them every three hours, parse the files into individual properties and update my db

[15:38:04.0000] <Peter->
it also feeds the rss feed

[15:39:00.0000] <Peter->
http://hg.mozilla.org/mozilla-central/raw-file/tip/layout/style/nsCSSPropList.h

[15:39:01.0000] <Peter->
http://trac.webkit.org/export/0/trunk/Source/WebCore/css/CSSPropertyNames.in

[15:39:02.0000] <gsnedders>
Right, so it's just a bi-product of them being open-source.

[15:39:03.0000] <aho>
ahm... ok... pulling it out of the source directly

[15:39:04.0000] <aho>
hoped there was some json file or even xml or whatever

[15:39:05.0000] <Peter->
Opera doesn't maintain a single (or conveniently accessible) list. Microsoft has a few pages on MSDN which list all, but usually with a 3/4 month delay

[15:40:00.0000] <Peter->
I do have a json

[15:40:01.0000] <aho>
linky? :)

[15:41:00.0000] <Peter->
http://peter.sh/data/vendor-prefixed-css.php

[15:41:01.0000] <paul_irish>
hero!

[15:41:02.0000] <aho>
:D

[15:43:00.0000] <Peter->
I have code (and data) for such lists on all properties (including non-prefixed ones) per browser version somewhere too, but I *really* need to finish that sometime soon

[15:44:00.0000] <aho>
would be cool if that would end up in some official place (i.e. some place which can be actually found by anyone)

[15:44:01.0000] <paul_irish>
what were you searching for to attempt to find it?

[15:45:00.0000] <paul_irish>
'List CSS Style Properties' ?

[15:46:00.0000] <gsnedders>
Peter-: FWIW, publishing a complete list of properties supported for any Presto version should be trivial

[15:48:00.0000] <aho>
paul_irish, me? i look most of them up on mdc and i crosschecked that IE stuff with msdn. that's about it.

[15:48:01.0000] <paul_irish>
k

[15:48:02.0000] <aho>
didn't know where else to look

[15:49:00.0000] <aho>
gsnedders, would be awesome :)

[15:49:01.0000] <Peter->
gsnedders, I requested it late last year but never got a reply. The presto docs are complete, but the properties are listed all over the place

[15:49:02.0000] <Peter->
that makes it hard to automate

[15:50:00.0000] <gsnedders>
Peter-: I can quite trivially send you a .txt file with one property per line

[15:50:01.0000] <aho>
soo... only microsoft is missing then eh? :)

[15:50:02.0000] <Peter->
gsnedders, that'd be great

[15:50:03.0000] <gsnedders>
Peter-: Do you want multiple versions or just latest?

[15:51:00.0000] <Peter->
gsnedders, just the latest will do. My e-mail address is peterâlc

[15:51:01.0000] <Peter->
gsnedders, thank you!

[15:53:00.0000] <aho>
Peter-, got some twitter account? (would like to be up to date on this heh) :>

[15:54:00.0000] <Peter->
aho, I'm @beverloo. I don't really have an ETA, but it surely is high on my list :)

[15:54:01.0000] <aho>
twitter stalkers++

[15:54:02.0000] <smaug____>
why does <progress> have .form?

[15:55:00.0000] <aho>
ah yea, twiter already told me several times to stalk you, too :)

[15:56:00.0000] <Peter->
Cool :-). I'm off to bed for now, night

[15:56:01.0000] <aho>
nn

[15:57:00.0000] <smaug____>
ah, hmm, nm

[15:58:00.0000] <smaug____>
er, no, I don't still get it


2011-03-06
[16:00:00.0000] <gsnedders>
Peter-: sent

[16:00:01.0000] <aho>
woo! :)

[16:02:00.0000] <aho>
now, if everything goes right this stuff will go straight into preprocessors like sass/less/cssmin/whatever

[16:03:00.0000] <gsnedders>
(for those curious, see www-arhcive)

[16:03:01.0000] <gsnedders>
*www-archive

[16:04:00.0000] <aho>
for the lazy ones: http://lists.w3.org/Archives/Public/www-archive/2011Mar/0007.html

[16:04:01.0000] <aho>
<:

[16:05:00.0000] <aho>
sorted by length... odd :)

[16:05:01.0000] <aho>
-xv-voice-pitch-range

[16:05:02.0000] <aho>
 <- what's that?

[16:06:00.0000] <zewt>
tts?

[16:06:01.0000] <aho>
-o-, -wap-, and -xv- prefixes... hum :>

[16:08:00.0000] <gsnedders>
aho: http://dev.opera.com/articles/view/xhtml-voice-in-style/

[16:08:01.0000] <aho>
-apple-dashboard-region

[16:08:02.0000] <aho>
 <- and that one

[16:08:03.0000] <aho>
gsnedders, ah :)

[16:11:00.0000] <Philip`>
(You can get that list of properties just by running "strings" on the opera binary and looking at the right section)

[16:12:00.0000] <AryehGregor>
I love doing that.

[16:21:00.0000] <aho>
i wonder if it's possible to pull that out of document.documentElement.style somehow

[16:21:01.0000] <AryehGregor>
Just try assigning every possible string as a style property and see which ones work.

[16:21:02.0000] <aho>
but it seems like those properties are hidden by non-iter magic :l

[16:22:00.0000] <aho>
i.e. "in" works, but for-in doesnt

[16:23:00.0000] <gsnedders>
aho: That's just the [[Configurable]] property of the property in ES

[16:23:01.0000] <gsnedders>
Configurable? Enumerable.

[16:23:02.0000] <gsnedders>
/me is blatantly too tired

[16:23:03.0000] <aho>
ye, but there is no way around that, is there?

[16:24:00.0000] <aho>
i mean... except for brute force

[16:24:01.0000] <AryehGregor>
The longest one is only 29 characters.

[16:24:02.0000] <aho>
gonna try them all! :v

[16:24:03.0000] <gsnedders>
aho: No, there isn't.

[16:24:04.0000] <AryehGregor>
That's counting the hyphens, so I guess for our purposes it's really 25 characters.

[16:24:05.0000] <aho>
i wonder how long that would take with IE6-9's JS engines :>

[16:24:06.0000] <AryehGregor>
There are what, only 52 possible characters then?

[16:24:07.0000] <AryehGregor>
So it's only 52^25, which is, um . . .

[16:25:00.0000] <aho>
>>> print 52**25

[16:25:01.0000] <aho>
7944811378381907919170379739856654861074432

[16:26:00.0000] <AryehGregor>
 7944811378381907919170379739856654861074432

[16:26:01.0000] <aho>
7.9 paininthearseillions

[16:26:02.0000] <gsnedders>
aho: pff, you should be using some JS prompt ;P

[16:26:03.0000] <AryehGregor>
I did /exec -o calc 52^25

[16:26:04.0000] <aho>
had that one open .)

[16:26:05.0000] <AryehGregor>
But XChat complained that there was already a process running.

[16:27:00.0000] <AryehGregor>
So I had to do pstree, ps aux a couple of times, and some kills before XChat would let me run the command.

[16:27:01.0000] <AryehGregor>
So you beat me.  :(

[16:27:02.0000] <aho>
> print(Math.pow(52,25));

[16:27:03.0000] <aho>
7.944811378381908e+42

[16:27:04.0000] <gsnedders>
Though admittedly the exact behaviour of Math.pow is undefined

[16:27:05.0000] <aho>
meep :)

[16:28:00.0000] <aho>
well, i think this would take pretty long... :>

[16:30:00.0000] <AryehGregor>
I don't think you'd need more than about a trillion universe-lifetimes, if you had a decent supercomputer.

[16:30:01.0000] <AryehGregor>
Hardly worth talking about if you're used to thermodynamics.

[16:32:00.0000] <aho>
hm

[16:32:01.0000] <aho>
well, there are rules to this

[16:33:00.0000] <aho>
one could use some kind of dictionary

[16:33:01.0000] <AryehGregor>
One could also run strings on the binary.

[16:33:02.0000] <aho>
that's cheating :v

[16:52:00.0000] <AryehGregor>
Does ISSUE-56 matter?

[16:52:01.0000] <AryehGregor>
(IRI normative references)

[21:45:00.0000] <Yuhong>
FYI, <XMP> was deprecated when HTML was made based on SGML.

[21:46:00.0000] <Yuhong>
The problem is that they didn't like the SGML CDATA feature.

[21:50:00.0000] <Yuhong>
But the funny thing is that then they later added the <SCRIPT> and <STYLE> tags, which had to be CDATA. (STYLE is the older one, BTW)

[21:51:00.0000] <Yuhong>
Now that HTML is no longer based on SGML, I wonder whether it should be undeprecated.

[00:15:00.0000] <annevk>
short night o_O

[00:15:01.0000] <annevk>
but home safe home

[00:19:00.0000] <foolip_>
annevk, did you see the stuff in http://code.google.com/p/html5/issues/list ?

[00:20:00.0000] <annevk>
oh hey cool

[00:29:00.0000] <annevk>
foolip_, so no, but I will patch

[00:30:00.0000] <foolip_>
ok

[00:30:01.0000] <foolip_>
I'm playing with my "log by section" thing, so I poked around a bit in your tool

[00:31:00.0000] <foolip_>
it's been twice now that there have been changes in the video section that I didn't notice until much later and I consider to be regressions, so it'd be good to keep track of sections

[00:32:00.0000] <annevk>
hmm

[00:33:00.0000] <annevk>
I guess I should leave my server details with someone

[00:33:01.0000] <annevk>
In case it gets hacked again and for updating html5.org related services

[00:33:02.0000] <foolip_>
it got hacked?

[00:33:03.0000] <annevk>
I suspect that might be tricky from an internet cafe in Bolivia

[00:34:00.0000] <foolip_>
in any case you shouldn't work during vacation

[00:34:01.0000] <annevk>
there were a couple of suspicious files

[00:34:02.0000] <annevk>
so far I have not managed avoiding reading a bunch of stuff while on vacation

[00:34:03.0000] <annevk>
including mailing lists :/

[00:34:04.0000] <annevk>
maybe this time it will be better, since it is so long

[00:36:00.0000] <foolip_>
well, if you trust me, I could take a hack at updating the icon and shorturl thing and get an account in the process

[00:37:00.0000] <annevk>
I do

[00:38:00.0000] <annevk>
the subversion stuff is somewhat disconnected from the actual code btw

[00:38:01.0000] <annevk>
the actual code lives somewhere on my server together with my own site and a dozen others

[00:38:02.0000] <foolip_>
is it in sync at least?

[00:39:00.0000] <annevk>
apart from the change I made the other day

[00:39:01.0000] <foolip_>
that it doesn't autoupdate doesn't surprise me, that'd be enterprisy

[00:39:02.0000] <annevk>
I can check that in and then give you the ssh password somehow

[00:53:00.0000] <foolip_>
gotta have breakfast, brb

[01:10:00.0000] <annevk>
Hixie, you online?

[01:11:00.0000] <annevk>
Hixie, can you add foolip to http://code.google.com/p/html5/ and maybe make someone co-owner or admin so we don't have to rely on just you?

[01:48:00.0000] <Peter->
gsnedders: got it, thanks!

[01:59:00.0000] <smaug____>
annevk: do you happen to know why <progress> is a form-associated element?

[02:01:00.0000] <annevk>
I remember it being changed to that at some point on request

[02:01:01.0000] <annevk>
/me looks in logs

[02:03:00.0000] <annevk>
hmm, at least over 1000 revisions ago

[02:04:00.0000] <annevk>
smaug____, it was for <label> I think: http://html5.org/tools/web-apps-tracker?from=4530&to=4531

[02:05:00.0000] <annevk>
which has http://www.w3.org/Bugs/Public/show_bug.cgi?id=8554 associated with it

[02:05:01.0000] <smaug____>
/me looks

[02:06:00.0000] <annevk>
yay for web-apps-tracker

[02:06:01.0000] <annevk>
answering questions for at least a few years now

[02:07:00.0000] <smaug____>
why does having label require form association ?

[02:09:00.0000] <smaug____>
or what useful does having progress.form bring in?

[02:09:01.0000] <annevk>
the way <label> is defined it requires a form-associated element at the moment

[02:09:02.0000] <annevk>
I am not sure really, maybe we should change it somewhat

[02:10:00.0000] <annevk>
maybe it is for form.elements to make sense

[02:11:00.0000] <smaug____>
if progress was resetable, this all would make some more sense

[02:11:01.0000] <annevk>
can you have labeled progress bar outside a form?

[02:11:02.0000] <smaug____>
why not?

[02:12:00.0000] <annevk>
just asking

[02:12:01.0000] <smaug____>
actually, should <progress> be even submittabled

[02:12:02.0000] <annevk>
don't think so

[02:12:03.0000] <smaug____>
submittable

[02:12:04.0000] <annevk>
can you file a bug?

[02:12:05.0000] <smaug____>
yeah

[02:13:00.0000] <annevk>
maybe hixie didn't consider making <label> work for non-form controls

[02:18:00.0000] <smaug____>
annevk: btw, progress isn't even "Listed element", so it doesn't show up in form.elements

[02:19:00.0000] <annevk>
oh ok

[02:19:01.0000] <annevk>
I remember not knowing why Hixie did it at the time but not caring enough to question it

[02:19:02.0000] <annevk>
hopefully I have not that too often, but I guess others pick it up in due course

[02:20:00.0000] <smaug____>
I was reviewing volkmar's patch for this and wondered why there is the .form

[03:05:00.0000] <foolip_>
annevk, so diffs are cached in the diffs/ folder to relieve the SVN server in web-apps-tracker ?

[03:42:00.0000] <Dashiva>
MikeSmith: Even if you use a fake URL, you're still giving away intimate knowledge of what the place is called :P

[03:50:00.0000] <volkmar>
smaug____: there is a .form for progress?

[03:51:00.0000] <smaug____>
volkmar: http://www.whatwg.org/specs/web-apps/current-work/multipage/the-button-element.html#the-progress-element

[03:52:00.0000] <smaug____>
volkmar: and in your patch you do implement .form

[03:53:00.0000] <volkmar>
eh, meter has .form too...

[03:53:01.0000] <smaug____>
volkmar: the w3c bug is about meter too

[03:53:02.0000] <volkmar>
smaug____: i guess i should try to think a little bit more when i implement something

[03:53:03.0000] <volkmar>
smaug____: what's the # ?

[03:54:00.0000] <smaug____>
http://www.whatwg.org/specs/web-apps/current-work/multipage/the-button-element.html#the-progress-element

[03:54:01.0000] <volkmar>
smaug____: NaN :)

[03:54:02.0000] <smaug____>
uups

[03:54:03.0000] <smaug____>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=12254

[03:55:00.0000] <volkmar>
thanks

[05:04:00.0000] <annevk>
foolip, right

[06:01:00.0000] <foolip_>
updated gecko, opera and ie icons on http://html5.org/tools/web-apps-tracker, any objections?

[06:02:00.0000] <annevk>
wow much better

[06:03:00.0000] <annevk>
although not too great on the red I guess

[06:04:00.0000] <annevk>
volkmar, hope my reply helped

[06:05:00.0000] <volkmar>
annevk: yep

[06:05:01.0000] <foolip_>
annevk, difficult to do much about that, the icons are the colors they are

[06:05:02.0000] <foolip_>
well, one could add shadows or something, but I'm not gonna

[06:06:00.0000] <annevk>
yeah, I was thinking maybe forcing a background color or something

[06:07:00.0000] <annevk>
adding a box-shadow to img is funny though :)

[06:07:01.0000] <annevk>
but not sure it looks better

[06:08:00.0000] <foolip_>
if something can be done with just CSS, that'd be nice

[06:08:01.0000] <foolip_>
the ie icon is especially ugly on red

[06:10:00.0000] <foolip_>
annevk, see http://validator.nu/?doc=http%3A%2F%2Fhtml5.org%2Ftools%2Fweb-apps-tracker

[06:10:01.0000] <foolip_>
was it necessary to add value="" for some browser?

[06:10:02.0000] <foolip_>
just removing it still leaves an empty input box for me

[06:11:00.0000] <foolip_>
ah, I see it's because of the template

[06:11:01.0000] <foolip_>
maybe value="" should just be valid?

[06:12:00.0000] <annevk>
img { background:#fff; box-shadow:1px 1px 2px #fff } maybe?

[06:12:01.0000] <annevk>
value is not valid?

[06:13:00.0000] <annevk>
actually

[06:13:01.0000] <annevk>
img { background:#fff; padding:1px }

[06:13:02.0000] <annevk>
is pretty good

[06:13:03.0000] <annevk>
in Opera anyway

[06:15:00.0000] <foolip_>
isn't a box going to be very boxy?

[06:15:01.0000] <foolip_>
if one makes it blurry enough maybe it will look good

[06:16:00.0000] <foolip_>
filed http://www.w3.org/Bugs/Public/show_bug.cgi?id=12256 for the value="" thing

[06:18:00.0000] <annevk>
foolip_, it's boxy but decent looking :)

[06:18:01.0000] <foolip_>
annevk, are you editing it live now so I can see?

[06:18:02.0000] <annevk>
live in Opera :)

[06:18:03.0000] <annevk>
so no

[06:19:00.0000] <annevk>
I just did view source and save changes

[06:20:00.0000] <foolip_>
 img { background:#fff; padding:1px } looks very white I'll say

[06:21:00.0000] <foolip_>
SVG filters would be better for this I think

[06:21:01.0000] <foolip_>
one wants a greyscale copy of the alpha channel and then to smear that a bit, maybe tainting it a bit white/yellow

[06:23:00.0000] <annevk>
well yeah, you could apply rocket science

[06:23:01.0000] <annevk>
i was just going for visible

[06:23:02.0000] <annevk>
:)

[06:25:00.0000] <annevk>
foolip_, where does it say valid="" is invalid?

[06:26:00.0000] <foolip_>
not sure if it does, just assuming validator.nu is correct

[06:26:01.0000] <annevk>
i cannot find it

[06:27:00.0000] <foolip_>
can you find anything that says that the value should be a floating point number?

[06:28:00.0000] <annevk>
ah good point, I guess I wasn't looking in the right section

[06:29:00.0000] <annevk>
"The value attribute, if specified, must have a value that is a valid floating point number."

[06:29:01.0000] <annevk>
not allowing the empty string there does indeed seem a bug

[06:31:00.0000] <foolip_>
annevk, should urlshortener.py be considered part of web-apps-tracker ?

[06:44:00.0000] <annevk>
I guess

[06:44:01.0000] <annevk>
structure is all kind of adhoc

[11:35:00.0000] <Hixie>
foolip_: what's your e-mail address?

[11:35:01.0000] <Hixie>
annevk: made more of you admins

[11:36:00.0000] <foolip_>
Hixie, for code.google.com purposes?

[11:36:01.0000] <foolip_>
if so, philipâfo

[11:37:00.0000] <Hixie>
yeah

[11:37:01.0000] <Hixie>
k, you're added

[11:38:00.0000] <Hixie>
it auto-expanded you to a gmail address!

[11:38:01.0000] <AryehGregor>
What code is this?

[11:38:02.0000] <Hixie>
weird

[11:40:00.0000] <foolip_>
oh, I have added philipâfo as an alternative to my google account

[11:40:01.0000] <foolip_>
too bad, I don't want anyone to ever use my gmail address :)

[11:45:00.0000] <foolip_>
Hixie, looks like it worked, thanks!

[11:45:01.0000] <foolip_>
AryehGregor, just some changes to http://html5.org/tools/web-apps-tracker

[11:45:02.0000] <AryehGregor>
Ah.


2011-03-07
[16:53:00.0000] <aho>
TabAtkins_, plain text data region?

[16:53:01.0000] <aho>
that xmp thing?

[17:49:00.0000] <koalayumyum>
Anyone here used the html5 boilerplate?

[17:50:00.0000] <paul_irish>
i have.

[17:50:01.0000] <koalayumyum>
ah ha =]

[17:50:02.0000] <paul_irish>
;)

[17:51:00.0000] <koalayumyum>
I'm havin an issue with the .ir class on a site I'm working on...perhaps I'm not implementing it correctly...would you mind taking a look?

[17:51:01.0000] <paul_irish>
sure. come over to #html5 and we can dig into it there

[17:52:00.0000] <koalayumyum>
ok, thanks

[19:21:00.0000] <Sonja>
can most browsers handle something like <img src="foo.svg" height="36" width="234"> nowadays? or must i still resort to a png that doesn't gracefully react to Ctrl-plus and Ctrl-minus

[19:23:00.0000] <m0>
Nice -hyphenate-limit-{before,after} is now implemented in WebKit!

[23:46:00.0000] <annevk>
guess it's time to write WHATWG Weekly

[23:57:00.0000] <foolip_>
gsnedders, jgraham, would either/both of you care to have a look at http://code.google.com/p/html5lib/issues/detail?id=178 ?

[00:13:00.0000] <annevk>
congratulations Lachy!

[00:53:00.0000] <annevk>
Led Zeppelin win

[00:54:00.0000] <zcorpan>
hsivonen: i'm having a bit of trouble reading the text on your site. could you try to increase the line-height slightly please?

[00:54:01.0000] <hsivonen>
zcorpan: is Opera still picking the wrong font file?

[00:54:02.0000] <annevk>
so far I have

[00:54:03.0000] <annevk>
Web Notifications

[00:54:04.0000] <zcorpan>
hsivonen: dunno

[00:54:05.0000] <annevk>
Purging Link Relations

[00:55:00.0000] <annevk>
leading with Shelley Powers volunteering

[00:55:01.0000] <annevk>
and a bunch of shorts from the WHATWG list

[00:55:02.0000] <jgraham>
Led Zepplin?

[00:55:03.0000] <annevk>
guess I should check the HTML WG list

[00:55:04.0000] <zcorpan>
hsivonen: don't think so, looks the same in firefox

[00:55:05.0000] <annevk>
jgraham, album IV

[00:56:00.0000] <hsivonen>
oh, nice. Opera has fixed its font selection.

[00:57:00.0000] <hsivonen>
I wonder which line-height I should use.

[00:57:01.0000] <zcorpan>
hsivonen: a line-height of 1.4 or 1.5 makes it easier to read for me

[00:57:02.0000] <zcorpan>
(unitless)

[00:59:00.0000] <jgraham>
annevk: Now I have both a headache and the drums from "When the Levee Breaks" in my head

[00:59:01.0000] <jgraham>
annevk: But still, awesome album :)

[00:59:02.0000] <hsivonen>
zcorpan: how about now? (1.25)

[01:00:00.0000] <jgraham>
foolip: Interesting bug

[01:03:00.0000] <zcorpan>
hsivonen: still too little for me

[01:03:01.0000] <annevk>
:)

[01:05:00.0000] <hsivonen>
hmm. 1.4 feels a bit too much of a jump for me

[01:05:01.0000] <foolip>
jgraham, is it easy to run html5lib directly from the hg repo to try out some fixes?

[01:07:00.0000] <jgraham>
foolip: Once you have a clone? Yes

[01:08:00.0000] <jgraham>
either cd into the python directory and import html5lib

[01:08:01.0000] <jgraham>
Or setup a virtualenv or so and do python setup.py develop

[01:08:02.0000] <jgraham>
and it will be the installed version in the whole virtualenv

[01:09:00.0000] <foolip>
haven't ever used virtualenv, does it have any benefits over the first option?

[01:09:01.0000] <jgraham>
Not really in this case

[01:09:02.0000] <jgraham>
In general, it is The Right Thing To Do

[01:09:03.0000] <jgraham>
if you are writing python

[01:13:00.0000] <foolip>
jgraham, so does my hypothesis about the bug seem right?

[01:19:00.0000] <jgraham>
foolip: It seems that something is going wrong when we try to clone the token to reconstruct the active formatting element

[01:20:00.0000] <jgraham>
Or maybe when we insert the attribute

[01:20:01.0000] <jgraham>
In any case it seems very odd to have getcontext()< as the attribute name

[01:20:02.0000] <annevk>
ok

[01:20:03.0000] <annevk>
gonna post now

[01:20:04.0000] <jgraham>
foolip: BTW you know that you can just pass a string in to the parser, right?

[01:21:00.0000] <foolip>
jgraham, yes, but it didn't reproduce then

[01:21:01.0000] <jgraham>
No need for a file

[01:21:02.0000] <foolip>
or I just guessed the wrong syntax

[01:22:00.0000] <foolip>
is it not  html5lib.parse("<p><code x<=foo></code></p>", treebuilder="lxml") ?

[01:23:00.0000] <annevk>
http://blog.whatwg.org/weekly-web-notifications

[01:24:00.0000] <annevk>
either I missed something or not much happened

[01:24:01.0000] <jgraham>
foolip: That is scary

[01:25:00.0000] <jgraham>
I can reproduce it only reproducing with file input

[01:26:00.0000] <jgraham>
annevk: You should have mentioned hsivonen's investigation into loading about:blank I guess

[01:28:00.0000] <annevk>
added to shorts

[01:32:00.0000] <jgraham>
/me wonders what to think about the W3C license

[01:32:01.0000] <jgraham>
+ suggestion

[01:33:00.0000] <annevk>
no replies to any of the events emails

[01:33:01.0000] <annevk>
guess I have to wait until tomorrow

[01:46:00.0000] <hsivonen>
/me sighs at http://www.w3.org/Bugs/Public/show_bug.cgi?id=11637#c2

[01:48:00.0000] <annevk>
bureaucracy is painful

[01:50:00.0000] <annevk>
though it can also be funny

[01:50:01.0000] <annevk>
the other day I saw this exposition in Sweden: http://www.newyorker.com/online/blogs/photobooth/2010/06/bureaucratics.html

[01:52:00.0000] <zcorpan>
abarth: "and

[01:52:01.0000] <zcorpan>
   the non-origin cookies are returned in the Origin-Cookie header

[01:52:02.0000] <zcorpan>
   field." -- s/Origin-//

[01:57:00.0000] <annevk>
wait what

[01:57:01.0000] <annevk>
I thought the HTML WG test suite was under the MIT license?

[01:58:00.0000] <jgraham>
annevk: No

[01:58:01.0000] <annevk>
when was that decision reverted?

[01:59:00.0000] <hsivonen>
annevk: was there ever a decision?

[01:59:01.0000] <annevk>
http://dev.w3.org/html5/tests/license.txt

[01:59:02.0000] <hsivonen>
ooh. interesting

[01:59:03.0000] <jgraham>
wtf

[01:59:04.0000] <jgraham>
http://dvcs.w3.org/hg/html/file/1c140e17afb5/tests/resources/testharness.js has BSD/W3C

[02:00:00.0000] <hsivonen>
/me feels sorry for whoever has to bother lawyers about sorting that out

[02:00:01.0000] <jgraham>
http://www.w3.org/html/wg/wiki/Testing/Submission/

[02:00:02.0000] <annevk>
well, it's not going to be me

[02:00:03.0000] <annevk>
at least not anytime soon

[02:01:00.0000] <hsivonen>
/me is guessing it's going to be jgraham 

[02:01:01.0000] <jgraham>
/me hopes he doesn't have to bother lawyers

[02:01:02.0000] <jgraham>
But the prospects look bad :(

[02:02:00.0000] <jgraham>
Maybe I can make MikeSmith do it!

[02:02:01.0000] <jgraham>
<laugh type=evil>

[02:04:00.0000] <zcorpan>
/me puts <laugh> on the list of formatting elements and injects a bunch of <p>s in the input stream

[02:05:00.0000] <annevk>
guess I should fix EventSource tests today

[02:05:01.0000] <annevk>
:/

[02:05:02.0000] <zcorpan>
annevk: it's better than fixing websocket tests, i bet

[02:06:00.0000] <jgraham>
zcorpan: <laugh> is a void element

[02:06:01.0000] <annevk>
what I hate most is all the different servers and setups and keeping it all in sync

[02:06:02.0000] <zcorpan>
jgraham: bummer

[02:06:03.0000] <jgraham>
Also I think even lawyers might be better than updating websockets tests

[02:06:04.0000] <zcorpan>
heh :/

[02:06:05.0000] <jgraham>
Although that might just be optimisim on my part

[02:07:00.0000] <annevk>
lawyers delayed WHATWG work for six months or so

[02:07:01.0000] <annevk>
sorting out the two-line copyright license

[02:08:00.0000] <zcorpan>
there was no whatwg work for six months because of the license?

[02:10:00.0000] <annevk>
pretty sure

[02:10:01.0000] <jgraham>
Well yes, and the "option 3" thing that has taken years and looks dangerously like it has field of use restrictions

[02:10:02.0000] <annevk>
before SVN I'm afraid

[02:16:00.0000] <zcorpan>
must have been in 2004 before i got involved

[02:16:01.0000] <annevk>
yeah, after the summer or so

[02:17:00.0000] <annevk>
I think

[03:01:00.0000] <annevk>
so, time to drop the "living standard" label and proceed without labels?

[03:02:00.0000] <jgraham>
And also the HTML label?

[03:02:01.0000] <jgraham>
("living standard" is just a description, it's not a label)

[03:03:00.0000] <annevk>
you wouldn't call "working draft" or "candidate recommendation" a label?

[03:04:00.0000] <jgraham>
Well they have formal status

[03:04:01.0000] <jgraham>
They are names for states

[03:04:02.0000] <annevk>
all the same to me

[03:04:03.0000] <jgraham>
"living standard" is purely descriptive

[03:04:04.0000] <annevk>
and we don't need it

[03:05:00.0000] <jgraham>
No, we also don't need any non-normative text

[03:05:01.0000] <jgraham>
But it has value

[03:06:00.0000] <annevk>
i don't think this has and I thought the plan was to get rid of it

[03:06:01.0000] <jgraham>
I think it is very successful in conveying to people the model that is being used

[03:07:00.0000] <jgraham>
You can tell it works because people are objecting to the model

[03:07:01.0000] <jgraham>
Their objections are largely nonsense

[03:07:02.0000] <jgraham>
But that's not generally because they don't understand the model

[03:08:00.0000] <jgraham>
But becuase they don't understand the implications correctly

[03:09:00.0000] <annevk>
why convey something that just causes confusion?

[03:09:01.0000] <jgraham>
It doesn't cause confusion

[03:09:02.0000] <annevk>
yes it does

[03:09:03.0000] <jgraham>
No, people's broken idea of how web specs work causes confusion

[03:09:04.0000] <annevk>
see the >100 comments on the post announcing the phrase

[03:10:00.0000] <jgraham>
The phrase is helpful in conveying the actual model

[03:10:01.0000] <jgraham>
Those 100+ comments were, by and large, not people confusion about our intentions for maintaining HTML going forward

[03:11:00.0000] <jgraham>
They were people confused into thinking that the model we will use will cause all sorts of bad side effects

[03:11:01.0000] <jgraham>
The right approach to clearing up that confusion is not to make it less obvious what the model is

[03:11:02.0000] <jgraham>
But to make it more obvious that all the bad stuff either won't happen or doesn't matter

[03:12:00.0000] <annevk>
it makes more sense to me to convey the model by practice than markety terms

[03:12:01.0000] <jgraham>
The model has been in practice since 1994 or so

[03:12:02.0000] <annevk>
not really

[03:13:00.0000] <jgraham>
It's just that even the people practising it thought they weren't

[03:13:01.0000] <annevk>
o_O

[03:13:02.0000] <jgraham>
Well except the bit where you actually write down what you are doing

[03:13:03.0000] <jgraham>
Rather than just doing random stuff

[03:14:00.0000] <jgraham>
I mean, in practice, since 1994 HTML has been unversioned for implementors. Authors have had to determine compatibility by looking at what UAs support rather than spec versions they conform to

[03:14:01.0000] <annevk>
you should get a blog for these essays

[03:14:02.0000] <annevk>
and I should get some sleep :)

[03:15:00.0000] <annevk>
but first eventsource

[03:16:00.0000] <jgraham>
Anyway, I think that changing the name every two weeks only has bad effects

[03:16:01.0000] <jgraham>
And what we have is fine

[03:24:00.0000] <annevk>
That went somewhat easier than anticipated although still quite a bit of work.

[03:46:00.0000] <annevk>
DOM Level 3 Events introduces new hasFeature usage

[03:46:01.0000] <annevk>
grmbl

[03:56:00.0000] <zcorpan>
/me has complained about that in his partial dom3events review

[03:57:00.0000] <annevk>
oh, then I duplicated your effort

[04:26:00.0000] <smaug____>
argh , even more PutForwards in the spec

[04:29:00.0000] <annevk>
it's used quite a lot

[04:31:00.0000] <smaug____>
apparently with dropzone too, which is quite bizarre.

[04:31:01.0000] <smaug____>
/me needs to propose something better

[04:36:00.0000] <annevk>
down to 850 emails

[04:36:01.0000] <annevk>
maybe I should try to get down to 500 before I leave

[04:38:00.0000] <smaug____>
annevk: vacation?

[04:40:00.0000] <annevk>
3 months to South America starting March 15

[04:41:00.0000] <smaug____>
Doesn't sound too bad :)

[04:43:00.0000] <annevk>
Yeah, I'm quite excited :)

[05:05:00.0000] <smaug____>
oh, it is not just the dropzone which need some work, but the whole new d&d

[06:05:00.0000] <speakman>
is this channel for html5 usage questions?

[06:09:00.0000] <erlehmann>
speakman, no, go to #html5

[06:16:00.0000] <MikeSmith>
erlehmann: um, I don't think most people here would have any problems with speakman asking html5 usage questions here

[06:21:00.0000] <karlcow>
Qt was not cute enough for Nokia.

[06:39:00.0000] <erlehmann>
MikeSmith, probably. but speakman asked explicitly for a usage question channel and isn't #html5 the more appropriate answer then?

[06:44:00.0000] <speakman>
Didn't know about #html5. Sounds like a more appropriate channel. :)

[06:46:00.0000] <krijnserver>
-_-

[06:46:01.0000] <krijnserver>
Is HTML5 done yet?

[06:47:00.0000] <krijnserver>
Can I use it already?

[06:47:01.0000] <Moo-_-_>
krijnserver: you can use it already

[06:47:02.0000] <Moo-_-_>
krijnserver: however, you need to specify which subset of HTML5 you use

[06:47:03.0000] <Moo-_-_>
krijnserver: All modern browsers support at least some of the HTML5 features

[06:47:04.0000] <krijnserver>
Hm, interesting

[06:48:00.0000] <erlehmann>
krijnserver, no and yes.

[06:48:01.0000] <Moo-_-_>
krijnserver: http://html5readiness.com/

[06:51:00.0000] <annevk>
Moo-_-_, erlehmann, krijnh is trolling you

[06:51:01.0000] <krijnh>
I'm pulling a ppk

[06:51:02.0000] <Moo-_-_>
annevk: ah. it was not instantly obvious. wouldn't be the first person asking the question :)

[06:51:03.0000] <erlehmann>
annevk, OH NOES. MY COGNITIVE RESOURCES.

[06:51:04.0000] <Moo-_-_>
/me pours some tar and feathers on krijnh

[06:52:00.0000] <annevk>
well well... he runs the IRC logs

[06:52:01.0000] <annevk>
guess that gives him some trolling privileges :)

[06:52:02.0000] <krijnh>
And you know it!

[07:02:00.0000] <annevk>
sure sounds like this will lead to "stable standards" http://lists.w3.org/Archives/Public/public-geolocation/2011Mar/0007.html

[07:12:00.0000] <zewt>
ew

[07:13:00.0000] <zewt>
referencing RFCs instead of w3 specs for that reason seems ... borderline absurd

[07:16:00.0000] <annevk>
the IDL one is the "best"

[07:39:00.0000] <zcorpan>
annevk: yay progress!

[07:40:00.0000] <zcorpan>
"Let's drop the reference to WebIDL and replace it with prose that requires the same things"

[07:50:00.0000] <hsivonen>
zcorpan: where's the quote from?

[07:50:01.0000] <hsivonen>
is this some Process stuff around spec maturity?

[07:50:02.0000] <jgraham>
/me is quite scared hsivonen is reading his mind

[07:51:00.0000] <jgraham>
OI was literallyu jsut about to type that

[07:51:01.0000] <zcorpan>
it's not a quote, but a translation of the trailing part of http://lists.w3.org/Archives/Public/public-geolocation/2011Mar/0007.html

[07:52:00.0000] <hsivonen>
zcorpan: that's so very sad

[07:58:00.0000] <karlcow>
The intent of this rule is to avoid a normative reference to a content which might be dropped in the future.

[07:59:00.0000] <jgraham>
karlcow: If webidl gets dropped we have much bigger problems

[07:59:01.0000] <karlcow>
Not webidl.

[07:59:02.0000] <karlcow>
a specific feature of webidl

[08:00:00.0000] <jgraham>
karlcow: By induction the only way one can avoid that is to not use webidl at all

[08:00:01.0000] <karlcow>
The normative reference is usually to say, This feature in my spec X has a dependcy on the feature of the spec Z.

[08:01:00.0000] <jgraham>
And if spec A depends on feature X of WebIDL and WebIDL changes the meaning of X we likely want A to inherit the change anyway

[08:01:01.0000] <karlcow>
jgraham: It's why encouraging smaller orthogonal specs with their own track was helping in this situation. Easier to fast forward.

[08:01:02.0000] <karlcow>
btw, I'm not saying it is good or not. I'm explaining the context of it.

[08:02:00.0000] <karlcow>
Process and specifications have their story telling and history :)

[08:02:01.0000] <karlcow>
jgraham: yep

[08:02:02.0000] <karlcow>
I think there is something to alleviate this issue

[08:02:03.0000] <karlcow>
let me try to find.

[08:02:04.0000] <jgraham>
karlcow: Well yes I understand that there is a reason in theory for the process. But I don't think it matches the reality

[08:03:00.0000] <karlcow>
jgraham: it doesn't match the current reality anymore.

[08:03:01.0000] <karlcow>
to read Deleuze about Jurisprudence and Legal systems.

[08:04:00.0000] <jgraham>
Arguably it never matched the reality. But that is angels on the head of a pin stuff

[08:04:01.0000] <karlcow>
here there are different strategies for normative references http://www.w3.org/TR/qaframe-spec/#ref-define-practice

[08:04:02.0000] <jgraham>
The important point is that specs now shouldn't be crippled by process issues

[08:05:00.0000] <karlcow>
one of them is the one adopted by Unicode

[08:05:01.0000] <karlcow>
Where character sets will evolve in the future

[08:05:02.0000] <zcorpan>
it's also not a requirement in the Process document, but just a "typically" statement

[08:06:00.0000] <karlcow>
jgraham: "specs now shouldn't be crippled by process issues" this time it is you which is out of reality. Written or not, in human transactions there are always process. This is exactly what human communications are.

[08:06:01.0000] <karlcow>
http://www.w3.org/TR/2005/REC-charmod-20050215/#sec-RefUnicode

[08:07:00.0000] <karlcow>
An example of referencing future version.

[08:07:01.0000] <jgraham>
*crippled*

[08:07:02.0000] <jgraham>
Rewiting a chunk of text purely to avoid a preocess issue, thereby potentially causing problems down the line === crippling

[08:07:03.0000] <karlcow>
I'm not on geolocation list, but if you want to chime in. It is possible to make a reference to WebIDL in a generic way by clearly stating it what the reference means.

[08:10:00.0000] <karlcow>
so basically, in summary, people have a tendency to make the W3C process stricter than it is. The W3C process basically says here there is a risk, explain to people, so they have the right expectations when reading this piece. That's all.

[08:14:00.0000] <hsivonen>
karlcow: sounds like "the Team Disease" :-/

[08:14:01.0000] <karlcow>
/me doesn't know what is the team disease

[08:15:00.0000] <hsivonen>
karlcow: people who have been on the W3C Team rationalize W3C stuff not to be as bad as it looks even after leaving the Team

[08:15:01.0000] <hsivonen>
(the term is not my invention, FWIW)

[08:16:00.0000] <karlcow>
Because it is not that bad, but you might have different opinion :) it is ok.

[08:23:00.0000] <MikeSmith_>
if you all talking about the problem the restriction that specs can't normatively reference drafts/specs that aren't already at PR, then fwiw, that seems to me to clearly be a major process bug that needs to be fixed

[08:23:01.0000] <MikeSmith_>
seems blazingly obvious to me

[08:24:00.0000] <karlcow>
MikeSmith: it is not a true bug. It can be fixed. But it is authorized to link a future reference of a technology :)

[08:24:01.0000] <zewt>
well it does seem to make sense that a finalized spec shouldn't reference a spec that isn't finalized ... but the solution seems to be simply "wait for the spec you need to reference to be finished"

[08:24:02.0000] <karlcow>
been there, done that.

[08:24:03.0000] <MikeSmith>
karlcow: it is a true bug, in that we all know it's a problem, but despite that, we've not fixed it

[08:25:00.0000] <MikeSmith>
zewt: in some worlds that might make sense, but in the real world it doesn't

[08:25:01.0000] <karlcow>
Nope. People are saying it is a problem, and that it is absolutely forbidden. :)

[08:25:02.0000] <MikeSmith>
exactly

[08:25:03.0000] <karlcow>
which is not true

[08:25:04.0000] <MikeSmith>
it's a people problem

[08:25:05.0000] <MikeSmith>
it's a people bug

[08:26:00.0000] <MikeSmith>
we need to fix some people, frankly, in order to get that bug fixed

[08:26:01.0000] <karlcow>
ahaha

[08:26:02.0000] <zewt>
clearly, embedding snippets from other specs and referencing old RFCs instead of W3 specs to work around it is worse than any other possible end result, heh

[08:26:03.0000] <karlcow>
/me has a big smile

[08:27:00.0000] <Philip`>
I guess the problem is the expectation that new technologies are built on a solid foundation, when actually the foundations of web technologies are terrible and full of holes

[08:27:01.0000] <MikeSmith>
bingo

[08:27:02.0000] <MikeSmith>
pretending otherwise isâ¦ pretending

[08:27:03.0000] <MikeSmith>
and pretending is traditionally more the province of the IETF

[08:27:04.0000] <Philip`>
And it's evidently okay to build on terrible foundations, because the web still pretty much works

[08:27:05.0000] <hsivonen>
Web specs are only as stable as the software implementing them

[08:28:00.0000] <hsivonen>
and the software keeps getting changed all the time

[08:28:01.0000] <MikeSmith>
Philip`: same old "worse is better" vs "the right thing"

[08:28:02.0000] <hsivonen>
but some parts of the software are still stable in practice

[08:28:03.0000] <MikeSmith>
yeah, ture

[08:28:04.0000] <MikeSmith>
*true

[08:28:05.0000] <MikeSmith>
most APIs are quite stable

[08:28:06.0000] <MikeSmith>
because, well, otherwise we have madness

[08:29:00.0000] <hsivonen>
the concept of Origin is pretty stable for http URLs. less so for data: URLs

[08:30:00.0000] <karlcow>
/me is trying to find an example of a technology which is stableâ¦ and can't find. Which makes "foundations of web technologies are terrible and full of holes" kind of moot. It is not the right argument

[08:31:00.0000] <zewt>
define stable :)

[08:31:01.0000] <zewt>
a word with many different meanings

[08:31:02.0000] <karlcow>
zewt: exactly

[08:31:03.0000] <zewt>
principally "works reliably" vs. "doesn't change"

[08:32:00.0000] <MikeSmith>
stability is something very different from "foundations of web technologies are terrible and full of holes"

[08:32:01.0000] <zewt>
(generally the latter when talking about specs, of course)

[08:32:02.0000] <MikeSmith>
that "foundations of web technologies are terrible and full of holes" comment wasn't about stability

[08:33:00.0000] <karlcow>
it is a truism.

[08:33:01.0000] <Philip`>
I suppose the WHATWG has a similar attitude problem in expecting two interoperable implementations of a whole spec and a comprehensive test suite, because that's the only way to ensure a spec is good quality - in practice that's never going to happen for HTML5 and it's a waste of time pretending we'll ever reach that point, so it'd be better to give up on the quality goal and focus on optimising limited resources

[08:34:00.0000] <MikeSmith>
Philip`: it's imaginable that we can arrive at some other metrics for deciding when a particular technology is recommendable as "ready for widespread adoption in production sites" (or whatever)

[08:35:00.0000] <MikeSmith>
that is, short of the " two interoperable implementations of a whole spec and a comprehensive test suite" metric

[08:36:00.0000] <karlcow>
same ol' discussions for the last few centuries :)

[08:36:01.0000] <MikeSmith>
really?

[08:36:02.0000] <MikeSmith>
I don't remember a whole lot of discussion about that previously

[08:36:03.0000] <jgraham>
Philip`: The WHATWG *has* given up on that goal, effectively

[08:36:04.0000] <karlcow>
/me is sending his copy of Thomas Kuhn to MikeSmith 

[08:36:05.0000] <MikeSmith>
jgraham: yeah, well

[08:37:00.0000] <jgraham>
/me isn't quite sure why Kuhn is relevant but is pretty sure it wasn't two centuries ago

[08:37:01.0000] <karlcow>
The issue is people searching for purity. The rules or the spirit of the rules

[08:37:02.0000] <Philip`>
jgraham: I thought there was still the idea within the WHATWG that the snapshot subset of HTML that the W3C calls HTML5 will meet that criteria in 2022, and that people should be working towards that goal

[08:38:00.0000] <MikeSmith>
jgraham: the "WHATWG" may have implicitly given up on that goal. But since there's not any actual way of measuring what the "WHATWG" actually thinks, that's something else that pretty much impossible to measure

[08:39:00.0000] <annevk>
karlcow, smaller orthogonal specs hardly exist

[08:39:01.0000] <karlcow>
about the double implementation report as a foolish guarantee, I have already written about that. http://www.w3.org/wiki/ImplementationReport

[08:39:02.0000] <karlcow>
The inconsistency raises a question: does this table prove interoperability between the products? We find that only Feature 1 and Feature 2 are implemented across the three products; only 40% of the specification FooML has reached widespread interoperability.

[08:39:03.0000] <karlcow>
Is FooML at a good point or at a bad point? Can we improve things? Can we use better metrics for improving implementations?

[08:39:04.0000] <jgraham>
Well yes, I guess i have falled into the lazy intellectual trap of ascribing notions to "the WHATWG" even when it has no cohesive existence

[08:39:05.0000] <annevk>
karlcow, the web is intertwined

[08:39:06.0000] <annevk>
karlcow, people better get used to it

[08:40:00.0000] <jgraham>
Philip`: Maybe

[08:40:01.0000] <karlcow>
annevk: yes you are right. The physics, the biology, the cooking, everything is intertwined. Another truism.

[08:40:02.0000] <karlcow>
This discussion doesn't make sense.

[08:40:03.0000] <jgraham>
Philip`: I subscribe to the view that testing parts of the spec that are getting implemtation is valuable in continuously increasing interoperability and that arbitary timelines aren't that useful

[08:41:00.0000] <jgraham>
I don't know if that matches what anyone else thinks

[08:42:00.0000] <jgraham>
I guess dates have some value in giving people a sense of urgency

[08:42:01.0000] <MikeSmith>
jgraham: fwiw, it matches what I think too

[08:42:02.0000] <MikeSmith>
I think it's absurd that we aren't doing more formal testing at this point

[08:43:00.0000] <jgraham>
In the sense that the HTML5 testsuite is very post-hoc?

[08:43:01.0000] <zewt>
jgraham: dates 15 years in the future don't do that so much, though... :)

[08:43:02.0000] <MikeSmith>
jgraham: yeah, but not just that

[08:44:00.0000] <karlcow>
MikeSmith: it might be absurd, but it illustrates a reality. Not that many people like testing stuff. Not very rewarding with regard to the social group for many people. :)

[08:44:01.0000] <MikeSmith>
but it would seem in general that we all have a bit of ass-backwards way of doing feature development that's not in line with common, modern best practices in software development

[08:45:00.0000] <MikeSmith>
karlcow: developers who write application code don't like testing stuff either

[08:45:01.0000] <karlcow>
yep

[08:45:02.0000] <karlcow>
/me nods

[08:46:00.0000] <MikeSmith>
but they do test-driven development because they know that if they don't, they're just pushing off the costs til later, and of course increasing risk of bugs

[08:46:01.0000] <zewt>
depending heavily on the environment, language, etc

[08:46:02.0000] <MikeSmith>
sure

[08:47:00.0000] <zewt>
not really possible to write tests for stuff until late in the game anyway, since you need implementations to ... test the tests

[08:47:01.0000] <karlcow>
I'm not under the feeling that a majority of devs do test-driven, without entering into another overrated debate about dev methodologies

[08:47:02.0000] <wilhelm>
A lot of testing work is happening within the organizations of each browser vendor, I presume. But it takes effort to share tests. An effort well worth the investment, presumably. (c:

[08:47:03.0000] <Philip`>
/me thinks "test-driven development" is something very specific that he's pretty much never seen anyone do in practice

[08:47:04.0000] <Philip`>
(i.e. you write tests first, and then write the code to make them pass)

[08:48:00.0000] <Philip`>
(Seems much more common to write code and tests in parallel, or the tests slightly after, in my (very limited) experience)

[08:48:01.0000] <zewt>
that sounds up there in terms of real-world unreasonable as "assurance"

[08:48:02.0000] <zewt>
way too expensive

[08:49:00.0000] <Philip`>
(and even more common to not write tests at all)

[08:49:01.0000] <MikeSmith>
Philip`: yeah, well, it's like religion. like somebody asking Mark Twain if he had something against Christians, and him saying, no, he'd just never actually met one yet.

[08:49:02.0000] <zewt>
in the real world, with most development, tests don't actually always pay for themselves, heh

[08:49:03.0000] <wilhelm>
zewt: That depends on the complexity on the problem you're solving. When adding new APIs to the OperaWatir test framework, we actually wrote tests before the implementation.

[08:49:04.0000] <wilhelm>
That's a quite trivial software project compared to a web browser, though.

[08:50:00.0000] <zewt>
well, yeah--and in most development, you don't actually know precisely where you're going when you start, anyway

[08:50:01.0000] <MikeSmith>
zewt: that's true of any creative endeavor

[08:50:02.0000] <zewt>
yeah, but not all development (or every subsection of development) is creative

[08:50:03.0000] <MikeSmith>
I think it is

[08:51:00.0000] <MikeSmith>
I think it is fundamentally creative

[08:51:01.0000] <karlcow>
/me on this good words will go cut the creative daikon for lunch

[08:51:02.0000] <wilhelm>
When implementing moderately stable web specs, you do know where you're going. We write tests and the running code at the same time here â with different people doing each part.

[08:52:00.0000] <zewt>
do you have poor hapless interns writing test code

[08:52:01.0000] <wilhelm>
They're not interns. (c;

[08:52:02.0000] <zewt>
extra hapless, then

[08:53:00.0000] <wilhelm>
One full-time tester per two developers.

[08:53:01.0000] <wilhelm>
Approximately.

[08:53:02.0000] <MikeSmith>
historically, hapless interns writing test code eventually turn into experiencec QA engineers and valuable test-case writers

[08:53:03.0000] <MikeSmith>
or even spec writers

[08:53:04.0000] <zewt>
writing test code seems more like a high-level QA job than development

[08:54:00.0000] <zewt>
though, perhaps with the advantage that the people developing the software will hate you less than a typical QA staff :P

[08:54:01.0000] <zewt>
QA results based on reproducable tests that I can run myself? yes please

[08:55:00.0000] <wilhelm>
If it can be automated, it must be. (c:

[09:08:00.0000] <MikeSmith>
wilhelm: amen

[09:10:00.0000] <karlcow>
/me - daikon is being cooked

[09:32:00.0000] <MikeSmith>
heh http://twitter.com/#!/brianleroux/status/44811140668198912

[09:33:00.0000] <MikeSmith>
"Client wants 5 extra devs on project in final week before SXSW. I wish Fred Brooks was a super hero I could invoke with a heartfelt plea."

[09:33:01.0000] <zewt>
when in doubt, throw a half dozen new people on project at last minute

[09:33:02.0000] <zewt>
what could possibly go wrong?

[09:35:00.0000] <karlcow>
it reminds me last year nightmares.

[09:37:00.0000] <karlcow>
The business of Web development/Web agencies is flawed at many levels. Saturated market, low prices, lack of Web culture inherited from the publicity/marketing world. :/

[09:52:00.0000] <foolip_>
jgraham, care to commit my change for http://code.google.com/p/html5lib/issues/detail?id=169 or make me committer so I can do it myself?

[09:54:00.0000] <jgraham>
foolip_: philipâfo?

[09:56:00.0000] <foolip_>
jgraham, right

[09:57:00.0000] <zewt>
... is that foo lip or fool ip? :P

[09:57:01.0000] <foolip_>
that's philip with s/phi/foo/, so the former I guess

[09:58:00.0000] <foolip_>
jgraham, do you ever do any kind of code review for html5lib?

[09:58:01.0000] <foolip_>
or just commit and hope for the best?

[09:58:02.0000] <jgraham>
foolip_: Sometimes we go "oh my sainted lord what is this crap"

[09:58:03.0000] <jgraham>
Does that count?

[09:59:00.0000] <foolip_>
hehe, absolutely

[09:59:01.0000] <jgraham>
I guess occasionally we use different curses too

[09:59:02.0000] <jgraham>
But basically, so far we haven't bothered

[10:00:00.0000] <foolip_>
ok, I'll just apply common sense and colorful curses

[10:00:01.0000] <jgraham>
If you would like anything reviewed please ask

[10:01:00.0000] <foolip_>
sure

[10:01:01.0000] <jgraham>
And if you commit things that use \ to extend long lines I will have to use my full palette of curse colours

[10:01:02.0000] <zewt>
python? :P

[10:01:03.0000] <jgraham>
;)

[10:01:04.0000] <jgraham>
zewt: Yeah

[10:01:05.0000] <zewt>
i've spent way too much time trying to "fix" people who have been tainted by PEP-8 :|

[10:02:00.0000] <zewt>
let's wrap at 80 columns, because anything more won't fit on my 14" CRT

[10:02:01.0000] <jgraham>
foolip_: (for style issues, basically try to look like the rest of the file. But I guess that is obvious)

[10:02:02.0000] <foolip_>
yep

[10:02:03.0000] <jgraham>
zewt: No, that is good and right

[10:02:04.0000] <foolip_>
one good thing about python is that it doesn't allow for as much variation and "styles" as some languages

[10:02:05.0000] <jgraham>
zewt: I often have two windows open side-by-side for example

[10:03:00.0000] <zewt>
doesn't really matter, the world doesn't end if your editor has to wrap a line here and there :)

[10:03:01.0000] <jgraham>
People who insist on using all the horizontal space on their dual 30" monitors when there are multiple nice places to wrap the line are very annoying

[10:03:02.0000] <foolip_>
watch out zewt, people with strong opinions about source code formatting are amusing :)

[10:04:00.0000] <zewt>
foolip_: probably everyone in here has strong opinions on such things :)

[10:04:01.0000] <jgraham>
Hmm, looks like the html5lib bugs have been building up a bit

[10:04:02.0000] <zewt>
i'll wrap if and where it makes sense, but I won't mangle code to force it

[10:04:03.0000] <jgraham>
I should give it some love

[10:07:00.0000] <foolip_>
hmm, what does mercurial do you try to push a commit while your repo is out of date?

[10:07:01.0000] <foolip_>
does it even do rebase?

[10:08:00.0000] <annevk>
you do hg pull and then hg update

[10:08:01.0000] <annevk>
and then hg commit -m "merge" if it merged cleanly

[10:08:02.0000] <annevk>
or some such

[10:09:00.0000] <jgraham>
foolip_: You can enable rebase in the config

[10:10:00.0000] <jgraham>
and do hg pull --rebase

[10:10:01.0000] <foolip_>
jgraham, thanks

[11:04:00.0000] <foolip_>
jgraham, what's the proper way to run all the python tests?

[11:04:01.0000] <foolip_>
the runtest.sh script is a lie

[11:17:00.0000] <karlcow>
http://lists.w3.org/Archives/Public/public-web-and-tv/2011Mar/thread.html

[11:17:01.0000] <karlcow>
1 message about meeting

[11:17:02.0000] <karlcow>
12 messages about IPR

[11:17:03.0000] <karlcow>
1 message about techno

[11:18:00.0000] <karlcow>
the web and TV thing will show culture clashes for a little bit while.

[12:12:00.0000] <AryehGregor>
Anyone have suggestions on non-obfuscated execCommand() users I could look at?

[12:13:00.0000] <miketaylr>
https://github.com/search?type=Code&language=javascript&q=execCommand&repo=&langOverride=&start_value=1&x=24&y=22 :)

[12:16:00.0000] <jgraham>
foolip_: In theory python runtests.py should do it

[12:17:00.0000] <jgraham>
Note that some tests will fail today

[12:17:01.0000] <jgraham>
Since the tests evolve independenly

[12:45:00.0000] <foolip_>
jgraham, filed http://code.google.com/p/html5lib/issues/detail?id=179 about all the things that are broken about tests

[12:47:00.0000] <jgraham>
foolip_: Looks like I bitrotted some of the stuf when I had a cleanout

[12:47:01.0000] <jgraham>
that shell script should die

[12:47:02.0000] <foolip_>
shall I just remove it?

[12:47:03.0000] <jgraham>
Yes

[12:48:00.0000] <jgraham>
simplejson shouldn't be in the support package, you should have to install it

[12:48:01.0000] <jgraham>
although we should use the built-in json where possible

[12:48:02.0000] <jgraham>
the potscript files are freaking me out

[12:48:03.0000] <jgraham>
*postscript

[12:48:04.0000] <jgraham>
I hope that is just random

[12:50:00.0000] <foolip_>
you've never seen them?

[12:51:00.0000] <jgraham>
No

[12:53:00.0000] <annevk>
awesome Hixie

[12:53:01.0000] <annevk>
gonna create those tomorrow

[13:35:00.0000] <AryehGregor>
Wordpress supports WYSIWYG of some type, right?  Does anyone know of an existing Wordpress blog with public WYSIWYG comments enabled?

[13:35:01.0000] <AryehGregor>
Hmm, or maybe it only allows WYSIWYG for editors, not commenters?

[13:36:00.0000] <gsnedders>
For editors, AFAIK

[13:36:01.0000] <Peter`>
gsnedders: thanks for the list!

[13:36:02.0000] <AryehGregor>
Hmm, do I have a login at blog.whatwg.org?

[13:37:00.0000] <gsnedders>
Peter`: np

[13:39:00.0000] <AryehGregor>
Ah, looks like it uses TinyMCE, maybe.

[13:40:00.0000] <gsnedders>
IIRC it does

[13:42:00.0000] <AryehGregor>
Blech, DOS line-endings?

[13:43:00.0000] <AryehGregor>
Oh, no, it has a mix.  Nice.

[13:47:00.0000] <bfrohs>
/me loves line-endings

[13:50:00.0000] <zewt>
i don't believe your lies

[13:50:01.0000] <zewt>
are you going to tell us you like time zones and legacy charsets, too

[13:50:02.0000] <Ms2ger>
Yes

[13:51:00.0000] <bfrohs>
Yes, I love them all /sarcasm

[13:53:00.0000] <AryehGregor>
Okay, so it looks like the big projects all just avoid execCommand() and roll their own editors.

[13:53:01.0000] <AryehGregor>
For good reason, needless to say.

[14:04:00.0000] <TabAtkins>
Oh man, if so, can we just drop execCommand?

[14:04:01.0000] <AryehGregor>
No.

[14:05:00.0000] <AryehGregor>
I mean, go ahead and try to convince implementers if you like.

[14:05:01.0000] <AryehGregor>
But no.

[14:05:02.0000] <annevk>
and if we make it work it might actually be useful

[14:05:03.0000] <AryehGregor>
Yeah, that's the thing.

[14:05:04.0000] <AryehGregor>
No one uses it because it's so horribly inconsistent between browsers.

[14:05:05.0000] <AryehGregor>
If not for that, it would be useful.

[14:05:06.0000] <AryehGregor>
Although it could probably also do with being more flexible.

[14:08:00.0000] <bfrohs>
Thing I wish execCommand had was formatinline (inline version of formatblock)

[14:08:01.0000] <AryehGregor>
Yeah, that sounds like a good feature to add.

[14:09:00.0000] <AryehGregor>
Although it will be more complicated than formatBlock for sure.

[14:09:01.0000] <AryehGregor>
(if you want it to work sensibly)

[14:10:00.0000] <bfrohs>
Yeah, the lack of that feature caused me a lot of headaches awhile back when working on a basic wysiwyg editor

[14:11:00.0000] <zewt>
"modern" editors in javascript are invariably such a headache to use...

[14:11:01.0000] <zewt>
too magic, which means glitchy

[15:55:00.0000] <Hixie>
jgraham: anne's 6 month estimate is 6 times too long, but yeah, figuring out the original copyright notice took a month of me speaking to laywers

[15:56:00.0000] <Hixie>
jgraham: that's why i didn't make any effort at solving the patent problem


2011-03-08
[16:08:00.0000] <AryehGregor>
I like the phrase "ipso facto" a lot, but I've discovered it doesn't really mean anything, so I never get a chance to use it.  This makes me sad.

[16:10:00.0000] <TabAtkins>
Assign a meaning to it and use it consistently.

[16:10:01.0000] <zewt>
give ipso facto a de facto meaning :|

[16:11:00.0000] <TabAtkins>
But it does mean something.  You can usually substitute "thus" for it, and so you can probably replace some of your "thus"es with "ipso facto".

[20:04:00.0000] <Hixie>
ok whatwg.org and hixie.ch are now IPv6-enabled

[22:37:00.0000] <annevk>
sure felt like six months :p

[22:37:01.0000] <Hixie>
can't argue with that :-)

[23:04:00.0000] <annevk>
AryehGregor, are your specs in some bitbucket or other repository somewhere?

[23:08:00.0000] <Hixie>
is order of enumeration of JS objects defined at all?

[23:09:00.0000] <Hixie>
it seems to be order of creation but deleting then resetting a property doesn't seem to move it to the end

[23:10:00.0000] <annevk>
it's defined to be unordered but implementations have to do at least creation order to not break web pages

[23:11:00.0000] <Hixie>
is there a way to move a property to the end of the order?

[23:11:01.0000] <Hixie>
short of creating a whole new object...

[23:11:02.0000] <annevk>
http://wiki.whatwg.org/wiki/Web_ECMAScript#Property_Enumeration

[23:11:03.0000] <annevk>
no idea :/

[23:12:00.0000] <Hixie>
oh well

[23:12:01.0000] <Hixie>
thanks anyway

[23:12:02.0000] <Hixie>
/me updates that wiki page with what he's found about "delete"

[23:28:00.0000] <annevk>
http://tools.ietf.org/html/draft-hodges-websec-framework-reqs

[23:32:00.0000] <annevk>
the introduction especially is an interesting read

[23:33:00.0000] <Hixie>
i have a page which consists primarily of a two-cell css table fixed positioned to the viewport, where the right cell is shrink-to-fit and the left cell fills the rest of the available space

[23:33:01.0000] <annevk>
security seems to be getting impossibly hard

[23:33:02.0000] <Hixie>
i'd like the left cell to be overflow:auto in case its contents are too big to fit the available space in the viewport

[23:33:03.0000] <Hixie>
is there a way to do that?

[23:33:04.0000] <Hixie>
everything i've thought of has the table cell grow to fit the contents

[23:34:00.0000] <Hixie>
which defeats the point (it means the whole viewport scrolls and i lose the right cell)

[23:34:01.0000] <annevk>
table-layout:fixed was sort of designed for it I think but never really implemented well?

[23:34:02.0000] <annevk>
I'm not really sure

[23:34:03.0000] <Hixie>
table-layout:fixed requires that i know the right cell's width ahead of time, i think

[23:34:04.0000] <Hixie>
i hope TabAtkins' drafts solve this

[23:35:00.0000] <annevk>
there's a new value for width that means shrink-to-fit

[23:35:01.0000] <annevk>
not sure if that works

[23:35:02.0000] <annevk>
well it does in Mozilla, but in combination with table-layout:fixed...

[23:36:00.0000] <hsivonen>
I'm losing track of goings on at the IETF. What's the story behind there being an informational Internet-Draft and a standards track ID about Do Not Track by different authors?

[23:36:01.0000] <annevk>
it's a bit sad that to date nobody has figured out table layouts

[23:36:02.0000] <annevk>
and written it down

[23:36:03.0000] <annevk>
hsivonen, didn't follow that one

[23:38:00.0000] <Hixie>
annevk: the problem is my shrink-to-fit cell comes on the same row as my as-big-as-possible cell

[23:38:01.0000] <Hixie>
annevk: so i don't think table-layout:fixed can solve it

[23:38:02.0000] <Hixie>
even if implemented per spec

[23:38:03.0000] <annevk>
karlcow, would be nice if there was a dedicated category for http://www.w3.org/QA/2011/03/open-web-weekly-summary.html

[23:45:00.0000] <hsivonen>
karlcow: nice to see that they let you link to lists.whatwg.org from the W3C blog

[23:45:01.0000] <annevk>
I think that may be a first

[23:47:00.0000] <annevk>
karlcow, also, it needs a more compelling title

[23:47:01.0000] <annevk>
karlcow, extremely long name followed by two digitized dates just confirms the W3C is boring

[23:48:00.0000] <annevk>
so we still haven't announced developers.whatwg.org on the blog

[23:48:01.0000] <annevk>
I tried getting hold of ben to do it, but that seems difficult :)

[23:49:00.0000] <annevk>
anyone minds if I go ahead and write a short note?

[23:51:00.0000] <annevk>
(no response in an hour means I'll go ahead)

[23:54:00.0000] <karlcow>
for title, I adopted the same model than http://my.opera.com/karlcow/blog/index.dml/tag/web%20standards%20links :) It was my decision. I accept my boringness

[23:55:00.0000] <karlcow>
for category, yes good suggestion. I will put that on the todo list.

[00:12:00.0000] <annevk>
I need a todo list

[00:16:00.0000] <karlcow>
nah you do not need, you are younger than me.

[00:17:00.0000] <annevk>
Maybe, but I'm so unprepared for the next three months... And behind on silly things like administration.

[00:18:00.0000] <annevk>
Immediate future (i.e. until this weekend) is pretty much sorted though :)

[00:21:00.0000] <karlcow>
I'm looking forward the reports of your trips when you are back. Pretty exciting.

[01:09:00.0000] <abarth>
annevk: i've failed at every todo list system i've tried

[01:16:00.0000] <annevk>
:)

[01:16:01.0000] <annevk>
me too

[01:16:02.0000] <annevk>
my current approach is memory, sometimes notes in TextWrangler since I'm using that a lot, and notes in my calendar

[01:17:00.0000] <annevk>
and putting objects like letters in obvious places :)

[01:41:00.0000] <karlcow>
http://labs.adobe.com/technologies/wallaby/

[01:41:01.0000] <karlcow>
"Convert Adobe Flash FLA files into HTML and reach more devices"

[02:28:00.0000] <annevk>
i have a very short blog post now

[02:28:01.0000] <annevk>
anyone wants to review before it goes live?

[02:31:00.0000] <annevk>
http://blog.whatwg.org/html5-for-web-developers

[02:33:00.0000] <aho>
looks fine

[02:49:00.0000] <annevk>
per twitter it seems quite a few people hadn't seen it yet

[03:29:00.0000] <annevk>
oh wow, our type=color implementation makes use of <datalist>?

[03:29:01.0000] <annevk>
I did not know

[03:55:00.0000] <annevk>
hmm, updating event-source tests has to wait a little

[03:56:00.0000] <annevk>
EventSource, even

[03:57:00.0000] <karlcow>
http://www.bbc.co.uk/news/technology-12668552

[03:57:01.0000] <karlcow>
From 25 May, European laws dictate that "explicit consent" must be gathered from web users who are being tracked via text files called "cookies".

[04:43:00.0000] <zewt>
always nice when politicians stick their heads into stuff without even trying to understand it

[05:04:00.0000] <aho>
"Currently, most browsers support low-complexity AAC and MP3 audio [...]" <- yea right, apple :v

[05:05:00.0000] <Lachy>
aho, where's that quote from?

[05:05:01.0000] <aho>
http://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/Using_HTML5_Audio_Video/AudioandVideoTagBasics/AudioandVideoTagBasics.html

[05:06:00.0000] <zcorpan>
does chrome support AAC?

[05:07:00.0000] <Lachy>
if they're counting Safari, current versions of Chrome and IE9, then perhaps 3 out of 5 is technically "most"

[05:07:01.0000] <zcorpan>
or was it thrown out together with h.264?

[05:07:02.0000] <jgraham>
Lachy: Weird calculus you have there

[05:07:03.0000] <Lachy>
it's supported in MP4 along with h.264, and support should disappear when they remove it

[05:08:00.0000] <Lachy>
jgraham, I'm not doing calculus.

[05:08:01.0000] <zcorpan>
didn't they remove it already?

[05:08:02.0000] <aho>
Safari on the desktop (Mac OS X and Windows) supports all media supported by the installed version of QuickTime <- this includes he-aac, right?

[05:08:03.0000] <jgraham>
Lachy: You have a system for calculating

[05:08:04.0000] <Lachy>
I thought they were planning to do it in 5 months

[05:08:05.0000] <zcorpan>
oh

[05:08:06.0000] <aho>
afaict i need ogg/vorbis and (he?)-aac for ie9 and safari

[05:10:00.0000] <aho>
and i gotta use the mp4 container for that, right?

[05:11:00.0000] <aho>
3gp should theoretically work, too

[05:11:01.0000] <aho>
*scratches head*

[05:11:02.0000] <zcorpan>
/me thought 3gp was the same thing as mp4

[05:11:03.0000] <jgraham>
Lachy: (fwiw see meaning 2 under http://oxforddictionaries.com/view/entry/m_en_gb0116730#m_en_gb0116730 )

[05:11:04.0000] <aho>
3GP (3GPP file format) is a multimedia container format defined by the Third Generation Partnership Project (3GPP) for 3G UMTS multimedia services.

[05:12:00.0000] <aho>
MPEG-4 Part 14 or MP4 file format, formally ISO/IEC 14496-14:2003, is a multimedia container format standard specified as a part of MPEG-4.

[05:12:01.0000] <aho>
oh and there is mov, too

[05:12:02.0000] <Lachy>
jgraham, ok. I just assumed you meant meaning 1, since that's the only usage I've heard before

[05:12:03.0000] <aho>
iirc flash supported these 3, but i don't have a clue about safari or ie9

[05:13:00.0000] <jgraham>
Lachy: Think also "lambda calculus"

[05:13:01.0000] <Lachy>
jgraham, I have no idea what "lambda calculus" means

[05:13:02.0000] <aho>
guess mp4 is the safest bet

[05:13:03.0000] <jgraham>
http://en.wikipedia.org/wiki/Lambda_calculus

[05:15:00.0000] <Lachy>
zcorpan, "These changes will occur in the next couple months but we are announcing them now to give content publishers and developers using HTML <video> an opportunity to make any necessary changes to their sites."

[05:15:01.0000] <Lachy>
http://blog.chromium.org/2011/01/html-video-codec-support-in-chrome.html

[05:15:02.0000] <Lachy>
so they don't say exactly when they will remove it

[05:16:00.0000] <zcorpan>
k

[05:19:00.0000] <aho>
http://html5doctor.com/native-audio-in-the-browser/ <- omits aac... meh :l

[05:35:00.0000] <hsivonen>
I guess different people have different idea of what counts as "removal". removal in nightly, dev, beta or stable

[05:39:00.0000] <zcorpan>
hsivonen: is it removed in some of them?

[05:40:00.0000] <hsivonen>
zcorpan: I think I read somewhere it's now removed in nightly and dev. I didn't verify.

[05:42:00.0000] <zcorpan>
canPlayType in dev chrome gives me '' for canPlayType('video/mpeg') but 'maybe' for audio/mpeg

[05:42:01.0000] <hsivonen>
what about video/mp4?

[05:43:00.0000] <zcorpan>
oh right, audio/mpeg is mp3

[05:43:01.0000] <zcorpan>
'maybe' for audio/mp4 and video/mp4

[05:44:00.0000] <hsivonen>
does it actually play an H.264 test file?

[06:12:00.0000] <zcorpan>
hsivonen: yes

[06:13:00.0000] <hsivonen>
zcorpan: ok. I guess my source or my recollection was wrong then.

[06:27:00.0000] <hsivonen>
Hmm. no mention of the DoJ/MPEG-LA story on Daring Fireball

[06:31:00.0000] <karlcow>
annevk: category done. http://www.w3.org/QA/archive/open_web/

[06:35:00.0000] <MikeSmith>
hsivonen: I notice that investigation seems to be limited to just the anti-competitive positioning against VP8

[06:37:00.0000] <MikeSmith>
and not the broader issue of whether the H.264 patent pool itself was accumulated in good faith according to this initial assertions they made about its purpose and scope

[06:37:01.0000] <MikeSmith>
remember there was an analysis that somebody did about that last year

[06:38:00.0000] <MikeSmith>
something like, their initial claim is that it would be limited to just a couple dozen patents -- less that 50 or whatever

[06:38:01.0000] <MikeSmith>
but despite that it ballooned into what it is now

[06:38:02.0000] <MikeSmith>
500+ patents or whatever

[06:41:00.0000] <MikeSmith>
hmm, more like 800, I guess

[06:41:01.0000] <MikeSmith>
the Nero lawsuit

[06:42:00.0000] <MikeSmith>
filed last May

[06:42:01.0000] <MikeSmith>
and don't remember hearing much about it since

[06:42:02.0000] <zewt>
i think the world needs more patent abuse at levels beyond absurdity

[06:42:03.0000] <zewt>
nothing less will get anything changed, heh

[07:33:00.0000] <erlehmann>
zewt, more abuse does not necessary yield revolution.

[07:34:00.0000] <zewt>
not sufficient, but possibly necessary

[07:36:00.0000] <erlehmann>
?

[07:38:00.0000] <zewt>
more abuse is not sufficient to trigger reform, but it does seem necessary for it to ever happen. not that I hold out much hope in any case

[07:38:01.0000] <erlehmann>
do we need more hashbangs to abolish them entirely?

[07:39:00.0000] <zewt>
i don't think there's much or any parallel :)

[07:40:00.0000] <zewt>
(and they'll never be abolished until the history API is universally available--so the ball's still in UAs' court on that one)

[07:43:00.0000] <zcorpan>
video implementors, see http://www.w3.org/Bugs/Public/show_bug.cgi?id=12267

[07:48:00.0000] <jgraham>
zcorpan: You don't derive humor from race conditions?

[07:51:00.0000] <Philip`>
What if it's a three-legged race condition?

[07:54:00.0000] <jgraham>
Today a pancake race condition would be more apropos

[07:55:00.0000] <jgraham>
(for i18n purposes I am required to link to http://en.wikipedia.org/wiki/Shrove_Tuesday#Festivities at this point)

[07:56:00.0000] <zcorpan>
i thought today was fettisdagen

[07:56:01.0000] <zcorpan>
so semla race condition

[07:57:00.0000] <jgraham>
Is that where someone offers you semla and you run away screaming?

[07:58:00.0000] <zcorpan>
it's where you line up 20 semlor and the first one to eat them all wins

[07:58:01.0000] <zcorpan>
(i.e. 20 semlor per contentant)

[07:58:02.0000] <jgraham>
I fear you might not be joking

[07:58:03.0000] <zcorpan>
i just made it up

[07:59:00.0000] <zcorpan>
but i'd love to watch such a race

[07:59:01.0000] <jgraham>
Still it sounds plausible

[07:59:02.0000] <jgraham>
I bet you could convince people it is a tradition

[08:38:00.0000] <virtuelv>
cute little replaceState() hack: http://grack.com/blog/2011/03/07/abusing-the-html5-history-api-for-fun-and-chaos/

[08:46:00.0000] <jgraham>
/me notes that abarth has committed to the html5lib repo 5 times with 5 different email addresses

[09:09:00.0000] <annevk>
lesson learned: even when WHATWG news seems spread all over, still post it to the blog

[09:51:00.0000] <annevk>
character encoding registry still malfunctioning

[09:52:00.0000] <annevk>
maybe once I'm back I'm interested in updating my research again and actually write a spec

[10:22:00.0000] <AryehGregor>
annevk, my specs are at aryeh.name/gitweb.cgi if I have nowhere else specific to put them.

[10:52:00.0000] <annevk>
yay more URLs

[11:10:00.0000] <Ms2ger>
We just need someone to put specs in bzr...

[11:11:00.0000] <AryehGregor>
Is there an established term for "a Node or its ancestor"?  The original DOM Range spec uses "ancestor container".

[11:11:01.0000] <AryehGregor>
I guess I'll go with that for now.

[11:18:00.0000] <annevk>
ancestor or self

[11:18:01.0000] <annevk>
I think

[11:18:02.0000] <annevk>
or maybe that's just XPath

[11:18:03.0000] <AryehGregor>
"If foo is an ancestor or self of bar"?

[11:18:04.0000] <AryehGregor>
Doesn't read well.

[11:20:00.0000] <zewt>
"if foo is bar or an ancestor of bar"

[11:20:01.0000] <AryehGregor>
I was using that, but it gets awkward if you need it a lot.

[11:20:02.0000] <AryehGregor>
Old definition of "partially contained": A Node is partially contained in a range if either it is the same as or an ancestor of the range's start node but is neither equal to nor an ancestor of its end node, or is the same as or an ancestor of the range's end node but is neither equal to nor an ancestor of its start node.

[11:20:03.0000] <AryehGregor>
New definition: A Node is partially contained in a range if it is an ancestor container of the range's start but not its end, or vice versa.

[11:21:00.0000] <zewt>
strange term; "ancestor container" doesn't suggest "same node" at all to me

[11:22:00.0000] <AryehGregor>
I know, it's a bad name.

[11:22:01.0000] <AryehGregor>
I didn't make it up.

[11:23:00.0000] <Philip`>
AryehGregor: I have a book that says a node is its own ancestor

[11:23:01.0000] <AryehGregor>
It might help to know that "container" really means "node", in the original context.

[11:23:02.0000] <Philip`>
but not its own proper ancestor

[11:23:03.0000] <AryehGregor>
Philip`, yes, that would be the mathematical way to do it.

[11:23:04.0000] <AryehGregor>
It was my first thought, really.

[11:23:05.0000] <AryehGregor>
But it's confusing to non-mathematicians.

[11:23:06.0000] <AryehGregor>
"I'm my own grandpa!"

[11:23:07.0000] <zewt>
Philip`: i don't think using that definition of "ancestor" is a good idea--programmers don't think of the term that way

[11:23:08.0000] <Philip`>
To avoid ambiguity, call it an improper ancestor :-)

[11:24:00.0000] <zewt>
that's so much clearer :P

[11:25:00.0000] <AryehGregor>
An improper ancestor would be an ancestor that's not not proper, i.e., the node itself.

[11:25:01.0000] <AryehGregor>
It would be a possibly-improper ancestor.

[12:29:00.0000] <twisted_>
how come there's a huge difference in rendering (nowadays?) between gecko and webkit?

[12:29:01.0000] <twisted_>
I suddenly have a lot of inconsitencies...

[12:30:00.0000] <Ms2ger>
There usually isn't

[12:30:01.0000] <twisted_>
Ms2ger: I know but i got a certain design atm

[12:30:02.0000] <twisted_>
where it looks perfect in Webkit and totally fubar'd in firefox

[12:30:03.0000] <twisted_>
and really... confused

[12:35:00.0000] <AryehGregor>
twisted_, link?

[12:35:01.0000] <roc>
create a minimal testcase and post it here :-)

[12:35:02.0000] <twisted_>
sure wait a sec lemme upload

[12:39:00.0000] <aho>
note that firefox 3.x doesnt use the html5 parser. some valid constructs are completely b0rked. e.g. <a ...><div>...</div></a> will *randomly* break. it's a timing issue which depends on reflows. as such, things like gzip, length, latency, and the phase of the moon affect it :I

[12:39:01.0000] <twisted_>
AryehGregor: http://bastardoperatorfromhell.org/~jakoury/contact.html

[12:40:00.0000] <kbrosnan>
roc: ^

[12:40:01.0000] <twisted_>
oh and I get one interesting error which I understand but... thought I was allowed

[12:41:00.0000] <twisted_>
not allowed to use a <header> inside a <header> but I thought it's allowed if you start a new <section> or <article>

[12:41:01.0000] <aho>
twisted_, section and so forth need a display:block

[12:41:02.0000] <aho>
try eric's new reset

[12:41:03.0000] <aho>
it's a good starting point

[12:41:04.0000] <aho>
http://meyerweb.com/eric/tools/css/reset/

[12:42:00.0000] <aho>
(unknown elements default to display:inline)

[12:42:01.0000] <twisted_>
cool talking a look

[12:43:00.0000] <twisted_>
aho: small change but getting closer

[12:43:01.0000] <zcorpan>
twisted_: what's the use case for header in section or article in header?

[12:44:00.0000] <twisted_>
well I'm afraid indeed that I gotta rewrite that part... hehe... I started on index.html and worked from there but THERE the header made sense

[12:44:01.0000] <twisted_>
here it should just be a normal div I think

[12:44:02.0000] <Ms2ger>
zcorpan, s/header in section/section in header/?

[12:44:03.0000] <aho>
twisted_, add overflow:hidden to #top

[12:45:00.0000] <zcorpan>
Ms2ger: no

[12:45:01.0000] <zcorpan>
header in (section or article) in header

[12:46:00.0000] <Ms2ger>
That's not the canonical operator precedence :)

[12:47:00.0000] <zcorpan>
twisted_: i'm asking because maybe the spec should be changed if there is a use case. what did you have when it made sense?

[12:48:00.0000] <twisted_>
zcorpan: well, on the index page I had a <header> because it was the top part of the page (the head) and underneat it had the rest. but INSIDE that header I needed later to add some other thingies and that also needed a header inside...

[12:49:00.0000] <twisted_>
thing I'm missing the most for an <article> is something in between <header> and <footer> (like a <body>)

[12:49:01.0000] <twisted_>
cause explaining that <article> had a column-count of 2 makes everything go all whooey, but now I wrap the <p>'s inbetween <header> and <footer> in a <div>

[12:50:00.0000] <roc>
twisted_: looks like we don't support position:relative with 'right' and 'bottom'

[12:51:00.0000] <AryehGregor>
o_O

[12:51:01.0000] <AryehGregor>
Isn't that kind of basic?

[12:51:02.0000] <twisted_>
roc: it _suddenly_ works

[12:51:03.0000] <twisted_>
I refereshed and poof

[12:51:04.0000] <twisted_>
it looks the same

[12:51:05.0000] <roc>
AryehGregor: I don't think anyone ever uses anything but 'left' and 'top' for relative positioning

[12:51:06.0000] <roc>
until now!

[12:51:07.0000] <roc>
I didn't even know you *could* use right and bottom

[12:52:00.0000] <twisted_>
roc: well cause this crazy designer thought of aligning it to the right

[12:52:01.0000] <twisted_>
and then it's easier to measure it from there

[12:52:02.0000] <twisted_>
roc: used it before btw

[12:52:03.0000] <AryehGregor>
I guess for relative positioning, right and bottom are equivalent to the negative of left and top?

[12:52:04.0000] <roc>
yes

[12:52:05.0000] <twisted_>
checkout the prijzen.html

[12:52:06.0000] <AryehGregor>
For absolute positioning, obviously there's a really big difference, so you'd use all of them.

[12:52:07.0000] <roc>
sure

[12:52:08.0000] <roc>
we would have noticed by now if right and bottom didn't work for abs-pos :-)

[12:52:09.0000] <zewt>
heh

[12:53:00.0000] <zewt>
nothing's better than the things that are broken and seem like they can't possibly actually be broken

[12:53:01.0000] <twisted_>
\o/

[12:53:02.0000] <twisted_>
ok now off to fiddle with getting custom radiobuttons

[12:54:00.0000] <twisted_>
this designer wants to have a 3px solid #a40061 border around a circle

[12:54:01.0000] <twisted_>
instead of the normal thingies

[12:54:02.0000] <twisted_>
grrr

[12:54:03.0000] <roc>
wow, I think we don't even have a bug on file about this

[12:55:00.0000] <twisted_>
roc: refresh this: http://bastardoperatorfromhell.org/~jakoury/contact.html position problem has been solved

[12:55:01.0000] <twisted_>
but only thing I changed... was the overflow: none

[12:55:02.0000] <roc>
oh wait

[12:55:03.0000] <twisted_>
so... dunno

[12:55:04.0000] <roc>
we do have code for this

[12:55:05.0000] <roc>
so something else is broken

[12:55:06.0000] <roc>
I dunno

[12:55:07.0000] <roc>
need minimal testcase, etc

[12:55:08.0000] <roc>
at least file a bug

[12:56:00.0000] <roc>
please

[12:56:01.0000] <roc>
thanks

[13:02:00.0000] <twisted_>
roc: uhm... I'd love to but... not sure what just fixed it actually

[13:02:01.0000] <twisted_>
*magic*

[13:05:00.0000] <roc>
oh, that was my psychic powers

[13:06:00.0000] <roc>
many developers find that their presence makes users unable to reproduce bugs

[13:22:00.0000] <twisted_>
roc: it's the common law of computing

[13:22:01.0000] <twisted_>
users call for their sysadmin (me) and suddenly the problem they had is gone

[13:23:00.0000] <twisted_>
big chance that when I check tomorrow the bug is back ;) haha

[13:33:00.0000] <twisted_>
question maybe someone here can clarify: I understand that during development of new features there's a -webkit or -moz prefix to a css property but for example the border-radius and -moz-border-radius has (afaik) the same syntax. Why not then have it as just border-radius?

[13:36:00.0000] <bfrohs>
There are still bugs with -moz-border-radius

[13:37:00.0000] <bfrohs>
This way, you know -moz-border-radius will have the bugs, while border-radius in a future version of firefox will not

[13:37:01.0000] <bfrohs>
(at least not major bugs that they know about)

[13:37:02.0000] <twisted_>
;)

[13:37:03.0000] <twisted_>
hmm makes sense

[13:43:00.0000] <Ms2ger>
Also, they don't have the same syntax for the longhand, iirc

[13:45:00.0000] <twisted_>
this site is gonna be an all nighter I'm afraid

[13:45:01.0000] <twisted_>
pff

[13:57:00.0000] <jamesr>
-moz-border-radius is not the best example

[14:01:00.0000] <zcorpan>
twisted_: you can't know that border-radius is going to have the same syntax until the spec is finished


2011-03-09
[21:47:00.0000] <jamesr>
http://probablyinteractive.com/url-hunter

[01:14:00.0000] <jgraham>
/me is very confused about whether there is actually a concept of things being OK but not "authorised" and if so what the word "authorised" implies

[01:20:00.0000] <jgraham>
Also, and unrelatedly, if objects-as-keyword arguments have to evaluate all the expected keys in a defined order first, can we end up with a problem if vendors add extensions? At the very least any extensions should be evaluated last

[01:28:00.0000] <Ms2ger>
Do we avoid that if we only allow data properties?

[01:29:00.0000] <jgraham>
The proposal to only allow data properties wasn't popular

[01:29:01.0000] <jgraham>
in particular with the TC39 people

[01:30:00.0000] <Ms2ger>
Was with me

[01:31:00.0000] <jgraham>
Ms2ger: Well if you fancy arguing with Brendan and Allen, feel free

[01:33:00.0000] <Ms2ger>
/me waits for a spec

[01:49:00.0000] <hsivonen>
jgraham: what's the context of "authorized"?

[01:51:00.0000] <jgraham>
hsivonen: The "option 3" discussion

[01:52:00.0000] <jgraham>
http://www.w3.org/mid/D9DDF34C-2949-4CB1-8E88-CD25444E1CDFâmc infers a distinction between things that are OK and things that are authorized presumably based on http://www.w3.org/mid/085c01cbdd27$b7719b50$2654d1f0$@com

[01:53:00.0000] <jgraham>
But I found each additional explaination in that thread has only added to, not reduced, my confusion

[02:46:00.0000] <karlcow>
I wonder if authorization relates to http://en.wikipedia.org/wiki/Authorization#Publishing

[03:16:00.0000] <hsivonen>
karlcow: is that based on some kind of legal loophole around a work having to be fixed in a tangible medium to be under copyright?

[03:17:00.0000] <karlcow>
hsivonen: legal frameworks are difficult and change from countries to countries. So I have no ideas about that.

[03:17:01.0000] <karlcow>
I guess it is the same type of photos of a person when in the street.

[03:18:00.0000] <karlcow>
In USA no issue

[03:18:01.0000] <karlcow>
In Quebec, you do not have the right

[03:18:02.0000] <karlcow>
In France there is a right to images in some circumstances

[03:19:00.0000] <karlcow>
For text in France, there are two rights: Patrimonial (property) and Moral

[03:19:01.0000] <karlcow>
the moral right never ceases

[03:19:02.0000] <hsivonen>
I can imagine that lecture thing to be some kind of English thing that wouldn't fly in France

[03:19:03.0000] <karlcow>
and you can forbid someone to publish a text if you think it is misrepresenting the idea of the text or something like that. IANAL

[03:20:00.0000] <karlcow>
hsivonen: yes probably

[03:21:00.0000] <karlcow>
It's all silly, really. It is inherited from a time where it might have made sense. But now it seems more and more idiotic. :/

[03:54:00.0000] <annevk>
http://wiki.whatwg.org/wiki/Special:RecentChanges isn't search already a keyword on its own?

[03:55:00.0000] <zcorpan>
foolip: maybe we should also make things more forgiving e.g. make setting currentTime in HAVE_NOTHING just work by doing the seek when it's possible to seek

[03:56:00.0000] <foolip>
zcorpan, I agree, but that's kind of an orthogonal issue

[03:56:01.0000] <zcorpan>
yes

[03:56:02.0000] <foolip>
and there would be less reason to allow that if the spec wasn't racy

[03:56:03.0000] <zcorpan>
true

[04:01:00.0000] <annevk>
yay ojan

[04:02:00.0000] <annevk>
also, not yay me

[04:02:01.0000] <annevk>
>1000

[04:02:02.0000] <annevk>
:/

[04:06:00.0000] <zcorpan>
/me has 3333 unread mailing list emails

[04:07:00.0000] <jgraham>
/me has one two threee more lots

[04:07:01.0000] <zcorpan>
biggest chunk is public-html-bugzilla almost exactly a third

[04:08:00.0000] <annevk>
well i'm not subscribed to that one and I don't have a QA day job :)

[04:44:00.0000] <annevk>
copyright threads :/

[04:44:01.0000] <annevk>
if only rigo would listen to timbl

[05:38:00.0000] <matjas>
any ideas on how to feature detect <details> support?

[05:38:01.0000] <matjas>
now that Chrome false positives on `'open' in document.createElement('details')`

[05:39:00.0000] <Rik`>
it's really annoying that Chrome is breaking so many feature detections

[05:40:00.0000] <matjas>
I was thinking of injecting a <details><summary>foo</summary>bar</details>, triggering onclick on the summary and see if the height changes

[05:41:00.0000] <hsivonen>
looks like the Chrome team needs a serious policy-level solution to this problem

[05:41:01.0000] <hsivonen>
it's not even the first time

[05:41:02.0000] <hsivonen>
do they score higher on html5test.com because of this?

[05:41:03.0000] <zewt>
matijsb: last I played with it, synthetic click events didn't fire default behavior in FF (bug, IMO)

[05:42:00.0000] <matijsb>
matjas: ^ :)

[05:42:01.0000] <Ms2ger>
html5test checks 'open' in element

[05:42:02.0000] <zewt>
my policy is to nick complete at 3 characters and any ambiguities at that point are a bug in other people's nicks :P

[05:43:00.0000] <annevk>
zewt, I don't think it's a bug

[05:44:00.0000] <zewt>
annevk: i remember ... some spec (dom events?) saying that most events shouldn't run defaults for synth events, but that click was an explicit exception

[05:44:01.0000] <annevk>
zewt, in fact, default behavior should only happen if the code path that dispatched the event also contains the default behavior

[05:44:02.0000] <annevk>
if(target.dispatchEvent(ev) default()

[05:44:03.0000] <annevk>
zewt, that spec is silly

[05:44:04.0000] <annevk>
zewt, http://www.w3.org/Bugs/Public/show_bug.cgi?id=12230

[05:45:00.0000] <zewt>
that doesn't make sense to me; the entire point of dispatching a click event would be to cause its click action to be run

[05:45:01.0000] <zewt>
you shouldn't have to examine the object you're fake-clicking and hardcode all of the possible default behaviors (which I've had to do, eg. manually copying window.location.href = a.href)

[05:48:00.0000] <annevk>
why else would dispatchEvent return a value?

[05:48:01.0000] <zewt>
so you can run your own default behavior after the browser runs its

[05:48:02.0000] <annevk>
hmm

[05:49:00.0000] <zewt>
i've always viewed browser default event behavior as being part of event dispatch ... that is, not logically equivalent to the browser using dispatchEvent() and checking the return

[05:49:01.0000] <zewt>
of course, it's moot and totally equivalent most of the time, when browsers refuse to run default behavior for nontrusted events

[05:50:00.0000] <zewt>
and since there are so few events where you can actually do that I'm not religiously attached to that view of events or anything

[05:51:00.0000] <zewt>
i'm not sure what the trusted flag is for otherwise, though...

[05:51:01.0000] <zewt>
i've always viewed the trusted flag as letting the default browser event handler tell whether the event originally came from the browser and not a script

[05:52:00.0000] <zewt>
if default behavior is logically outside of dispatch anyway, that doesn't matter

[05:53:00.0000] <annevk>
because of hixie I started viewing it the dispatchEvent() way

[05:53:01.0000] <annevk>
I don't really care what way is correct

[05:53:02.0000] <annevk>
but I'd appreciate consistency

[05:53:03.0000] <annevk>
so if synthetic click should work, synthetic submit should too

[05:54:00.0000] <annevk>
but making neither work is fine with me too

[05:55:00.0000] <zewt>
i don't think firing submit always submits--I have some code here that explicitly does dispatchEvent(e); if(!e.stopped) form.submit(); but I don't remember if that was needed on all browsers or what (oldish code)

[05:55:01.0000] <zewt>
or if the code's just wrong

[05:57:00.0000] <annevk>
e.stopped?

[05:57:01.0000] <zewt>
er that's a prototype thing (mirrors preventDefault)

[06:00:00.0000] <zewt>
on a quick test FF3.6 seems to submit on synth submit events, chrome 9 seems not to?

[06:00:01.0000] <zewt>
i sure love the web

[06:00:02.0000] <annevk>
the bug above has the cross-browser info

[06:05:00.0000] <zewt>
fwiw, the use case here is capturing things that need auth (clicks and form submits on registered-only features, etc), running a login handler in an overlay, then redispatching after login is completed

[06:07:00.0000] <zewt>
(but it handles IE, so it's not nearly that simple, heh)

[06:09:00.0000] <annevk>
you can also do that by <a>.click() and and <form>.submit()

[06:09:01.0000] <zewt>
no you can't--those don't dispatch events

[06:10:00.0000] <annevk>
you listen to the event, prevent it, do auth, then invoke those

[06:10:01.0000] <zewt>
that would skip event handlers

[06:11:00.0000] <zewt>
if you're capturing document.onclick, doing the login stuff, then you call target.click(), none of the event handlers below it would ever run

[06:12:00.0000] <annevk>
volkmar, hey, what was the in-range/out-of-range bug again?

[06:16:00.0000] <jgraham>
/me is disappointed at WebKit for breaking <details>

[06:18:00.0000] <zewt>
annevk: if event defaults are outside of dispatch, what's the purpose of trusted?

[06:18:01.0000] <Ms2ger>
/me is disappointed at WebKit in general

[06:19:00.0000] <annevk>
allows complex sites to see where the event came from

[06:19:01.0000] <annevk>
i.e. whether it was library or UA-generated

[06:19:02.0000] <annevk>
could be used e.g. to enable debugging code if you use synthetic events for automated testing

[06:21:00.0000] <zewt>
i'd just set a custom property to do that in my test code, don't need browser help for it

[06:22:00.0000] <annevk>
the browser does not need isTrusted exposed to do what it does now either

[06:23:00.0000] <zewt>
even less so if default behavior is thought of as outside dispatch

[06:24:00.0000] <annevk>
i don't think that was the reason why it was exposed

[06:24:01.0000] <annevk>
but i don't think it matters much

[06:24:02.0000] <annevk>
if you have many libraries and lots of people working on the code it might be good to know where the event came from in certain situations

[06:27:00.0000] <volkmar>
annevk: http://www.w3.org/Bugs/Public/show_bug.cgi?id=12151

[06:28:00.0000] <annevk>
ta

[06:39:00.0000] <AryehGregor>
So, how fair is the IEBlog post just now on hardware acceleration?

[06:39:01.0000] <AryehGregor>
It looks like they're saying IE beats everyone fair and square, and I don't notice any obvious problems with their account.

[06:39:02.0000] <AryehGregor>
But I don't have a machine handy with IE9 and a decent graphics card to test on.

[06:41:00.0000] <Rik`>
AryehGregor: testing with only one demo, produced by themselves ?

[06:41:01.0000] <AryehGregor>
Rik`, but was the demo unfair?

[06:42:00.0000] <annevk>
seems a bit early to tell

[06:42:01.0000] <annevk>
but so far their track record has been that they publish about what works and keep everything else hidden

[06:46:00.0000] <jgraham>
AryehGregor: It is impossible to tell without actually analysing it. e.g. they could be selecting particular operations they know they are fast at, or making the scores highly non-linear to accentuate small differences

[06:48:00.0000] <AryehGregor>
Or they could also have a better GPU acceleration implementation?

[06:48:01.0000] <AryehGregor>
Is there any evidence against that?

[06:48:02.0000] <jgraham>
I have no evidence either way

[06:49:00.0000] <AryehGregor>
Seems like it's important for other browser vendors to investigate.

[06:50:00.0000] <jgraham>
Sure. But that blog post doesn't strongly affect my opinion of whether their implementation is good

[06:50:01.0000] <jgraham>
because, without actually doing that investigation, there is very little information

[06:53:00.0000] <AryehGregor>
Wow, and I thought SSL warnings gave too little info: http://blogs.msdn.com/cfs-filesystemfile.ashx/__key/CommunityServer-Blogs-Components-WeblogFiles/00-00-00-47-13-metablogapi/6428.image_5F00_1DC874E0.png

[06:53:01.0000] <AryehGregor>
That's a whole new league of useless.

[06:58:00.0000] <zewt>
annevk: brings to mind a use case for calling preventDefault before dispatchEvent

[06:58:01.0000] <Ms2ger>
Normal people don't read those dialogs, so it doesn't matter

[06:59:00.0000] <zewt>
there's no way of knowing whether a browser will run default behavior on a synth event (short of hardcoding the cases); the reliable thing to do is to always preventDefault before every synth event to guarantee it won't be

[07:00:00.0000] <zewt>
i sure wish FF would stop making me do a four-step song and dance every time I want to load an SSL page with a self-signed cert; I'll take a "yes/no" dialog over that any day, heh

[07:01:00.0000] <AryehGregor>
Yeah, the way browsers handle SSL errors is incredibly broken all down the line.

[07:02:00.0000] <zewt>
wish from the beginning there had been a separate protocol name, eg. "httpe", which was https with no certificates

[07:02:01.0000] <zewt>
then people who just want encryption would use it and the entire https certificate prompting thing would be much less of an issue

[07:03:00.0000] <zewt>
(in practice, I'm guessing something like SPDY will be the real-world fix)

[07:05:00.0000] <AryehGregor>
I'm hoping that STS will encourage browsers to treat security errors in non-STS contexts less severely.

[07:05:01.0000] <zewt>
havn't heard of that

[07:06:00.0000] <AryehGregor>
http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security

[07:09:00.0000] <zewt>
what's really needed is a mechanism to allow encryption with no cert without prompting at all--I doubt browsers will ever do that with https

[07:11:00.0000] <zewt>
if it's an excuse to get people to stop with the absurd "click here, now click here, now do the chicken dance and sing show tunes" game for self-signed sites, that'd be a step forward, though

[07:12:00.0000] <jgraham>
Maybe you should should rig up the Wii Fit to your browser so it could *actually* make you dance

[07:12:01.0000] <AryehGregor>
What they need to do is have a more nuanced approach, not the all-or-nothing way they do it now.

[07:13:00.0000] <zewt>
i'm not sure nuance works for security when it meets real-world users :)

[07:13:01.0000] <AryehGregor>
Anyway, the current way they do it is complete garbage, since it strongly assumes the site is malicious when everyone knows there's an approximately 100% chance that it's perfectly fine.

[07:14:00.0000] <zewt>
and the message it sets is essentially "unsigned encryption is less secure than plaintext", which is idiotic

[07:16:00.0000] <jgraham>
I think the theory is that unsigned encryption when you think you are securely connected is less good than a connection that is known to be untrusted

[07:16:01.0000] <zewt>
yeah, I understand the rationale for prompting with https

[07:17:00.0000] <zewt>
to prevent an MITM using an unsigned/self-signed cert

[07:17:01.0000] <jgraham>
Well given the rationale, I don't think it's idiotic

[07:17:02.0000] <jgraham>
Although it porbably makes inaccurate assumptions about user's mental models

[07:17:03.0000] <jgraham>
*probably

[07:17:04.0000] <zewt>
the rationale is fine; the way it solved it is broken, it's the end result that's idiotic

[07:18:00.0000] <jgraham>
If you think the rationale is fine, what is the better soluton? It seems to me that the rationale is likely flawed

[07:19:00.0000] <zewt>
there should have been a separate origin which was SSL without signing (and not displayed to the user as secure)

[07:19:01.0000] <Ms2ger>
"Is", not "would have been" ;)

[07:19:02.0000] <jgraham>
What was the backwards-compatible solution? :)

[07:19:03.0000] <jgraham>
s/was/is/

[07:20:00.0000] <zewt>
there's no backwards-compatible solution, which is why I said "should have been" rather than "should be" :)

[07:20:01.0000] <jgraham>
Then it seems silly to complain about it

[07:21:00.0000] <zewt>
hardly; it needs to be fixed going forward--like I said, I suspect the real solution will happen if SPDY, or something out of it, gains traction

[07:21:01.0000] <zewt>
it's always SSL, so I think that's effectively what would happen

[07:21:02.0000] <jgraham>
A good solution might be just to not distinguish http and no-cert https in the UI

[07:22:00.0000] <jgraham>
and complain loudly only if a site goes from cert-?no cert

[07:22:01.0000] <zewt>
well, yeah, ideally the "http" user-visible protocol would have been able to seamlessly upgrade to an SSL connection, but I understand why that didn't happen

[07:23:00.0000] <jgraham>
There is no really good reason for the string "http" to appear in the UI

[07:23:01.0000] <zewt>
Ms2ger: (not sure what you meant, btw)

[07:24:00.0000] <zewt>
heh chrome's magic-http-hiding thing drives me nuts, since I'll try to copy a hostname out of the address bar and it'll tack "http://" on it

[07:24:01.0000] <jgraham>
zewt: See if O11's approach drives you less nuts

[07:25:00.0000] <zewt>
it's definitely less magic, which is good

[07:27:00.0000] <zewt>
also not a fan of how both browsers put the path in an unreadable low-contrast grey

[07:27:01.0000] <zewt>
the address bar is every browser's favorite playground for overly-clever gimmicks, heh

[07:51:00.0000] <Olemiss>
Hey guys, I have a quick question... Is it ok to use the information on Whatwg on a Wiki?

[07:53:00.0000] <Olemiss>
For instance, if I wanted to create an article on Wikipedia about a feature of Html5, would I get in trouble if I copied some information from Whatwg?

[07:53:01.0000] <Ms2ger>
Not at all

[07:54:00.0000] <Ms2ger>
You can do whatever you like with it

[07:54:01.0000] <Olemiss>
Alright, great... is there anywhere on the whatwg site that says so?

[07:55:00.0000] <Olemiss>
I just want my facts to be straight, and theres nothing better than the source.

[07:57:00.0000] <jgraham>
Olemiss: The WHATWG wiki is MIT licensed. The spec is under a special license included in the file

[07:57:01.0000] <jgraham>
I don't know about anything else

[07:57:02.0000] <Philip`>
The wiki should say licensing details at the bottom of every page

[07:57:03.0000] <Olemiss>
Yeah, thats what I figured, ill look deeper

[08:03:00.0000] <hsivonen>
hmm. what's the deal with Wikipedia not appearing to have guidelines about importing non-PD but Free content from elsewhere into Wikipedia?

[08:04:00.0000] <hsivonen>
I'd have expected Wikipedia to have guidelines about importing MIT/BSD content

[08:34:00.0000] <MikeSmith>
hsivonen: http://www.mozillazine.org/articles/article177.html seems not to work

[09:01:00.0000] <twisted_>
hmm weird, Safari just outperformed Chrome 10 with the http://ie.microsoft.com/testdrive/Performance/MazeSolver/Default.html

[09:01:01.0000] <twisted_>
Chrome took 264seconds, Firefox 4 176s, Safari 216 seconds

[09:02:00.0000] <Peter->
The performance has been improved through a patch last week, it almost doubled

[09:02:01.0000] <Peter->
(for WebKit that is)

[09:03:00.0000] <annevk>
zewt, if you always call preventDefault() you cannot use the mechanism yourself

[09:04:00.0000] <annevk>
zewt, however, recent DOM Core no longer resets the "canceled flag"; unless you invoke initEvent()

[09:41:00.0000] <zewt>
annevk: it's unfortunate to not be able to tell whether an event will or did have default behavior executed...

[09:42:00.0000] <zewt>
even if everyone consistently follows the "allow defaults for click" approach, it's still really fuzzy, eg. it probably still generally only works for button = 0 (can't synthetize a right click and open a context menu)

[09:43:00.0000] <smaug____>
/me needs to find some time to review d&d. Looks like the latest changes haven't been reviewed.

[09:44:00.0000] <Ms2ger>
And DOM Core ;)

[09:44:01.0000] <zewt>
so yeah, it's an annoying limitation but I think I agree that treating default behavior as being run by the caller to dispatch and not as part of dispatch itself makes more sense

[09:45:00.0000] <zewt>
(or at least, is much less complex to get right)

[09:53:00.0000] <Ms2ger>
http://rly.cc/Moi8M, in case anybody is interested in /.

[10:29:00.0000] <annevk>
hmm, so maybe we should nuke CustomEvent?

[10:29:01.0000] <annevk>
it's not really widely implemented

[10:30:00.0000] <annevk>
Erik has some cool ideas

[10:30:01.0000] <zewt>
how does it differ from just creating a basic Event?

[10:35:00.0000] <zewt>
i guess there's ... really no difference

[14:01:00.0000] <zewt>
TabAtkins: well, almost off-list...

[14:29:00.0000] <TabAtkins>
Sigh.  Yeah...

[15:17:00.0000] <Hixie>
heycam: what's the use case for http://dev.w3.org/2006/webapi/WebIDL/#idl-static-operations ?

[15:17:01.0000] <Hixie>
are there features in the platform (other than URL) that use this?

[15:17:02.0000] <zewt>
http://zewt.org/~glenn/test-hashchange-ff4.html browser back after a history.pushState doesn't seem to fire onhashchange in ff4rc1 ... anyone feel like double-checking/confirming before I file it?

[15:18:00.0000] <heycam>
Hixie, sicking is using it for something in indexed db

[15:18:01.0000] <Hixie>
aw man

[15:18:02.0000] <sicking>
yes!

[15:18:03.0000] <heycam>
you don't like it?

[15:18:04.0000] <Hixie>
it's so... not like the rest of the platform

[15:18:05.0000] <sicking>
zewt: are you actually changing the hash?

[15:18:06.0000] <zewt>
yes

[15:18:07.0000] <sicking>
oh, i see what you mean

[15:19:00.0000] <zewt>
history.pushState({}, window.title, url + "#1");

[15:19:01.0000] <sicking>
zewt: are you sure it's supposed to fire?

[15:19:02.0000] <heycam>
Hixie, JS has built in methods like that... Object.whatever, e.g.

[15:19:03.0000] <sicking>
zewt: iirc there's some comment in the code specifically stating that we should not fire

[15:19:04.0000] <zewt>
i think it is (on browser back, not due to the pushState itself), but i'm not positive so i'm asking here

[15:19:05.0000] <sicking>
zewt: oooh

[15:19:06.0000] <Hixie>
heycam: i guess

[15:19:07.0000] <zewt>
noticed since it broke my app that works in c9

[15:20:00.0000] <sicking>
zewt: you want it to fire when pressing "back". Not when calling pushState

[15:20:01.0000] <Hixie>
heycam: yeah, ok

[15:20:02.0000] <Hixie>
heycam: fair enough

[15:20:03.0000] <sicking>
zewt: ?

[15:20:04.0000] <Hixie>
heycam: nevermind :-)

[15:20:05.0000] <heycam>
Hixie, ok :)

[15:20:06.0000] <zewt>
right--browser back is a navigation, regardless of how the history entry was created

[15:21:00.0000] <sicking>
zewt: file a bug, cc me and ":jlebar"

[15:21:01.0000] <sicking>
zewt: won't get fixed for FF4, but maybe we can fix it for FF4.0.1

[15:22:00.0000] <zewt>
:|

[15:22:01.0000] <zewt>
k

[15:23:00.0000] <Hixie>
zewt: that part of the spec changed back and forth a lot unfortunately

[15:23:01.0000] <Hixie>
zewt: so browser vendors probably had a hard time keeping track

[15:23:02.0000] <sicking>
zewt: i know. It's just too much risk to take at this point. The code is done FF4RC was just released

[15:23:03.0000] <sicking>
which reminds me

[15:23:04.0000] <zewt>
odd, it would be strange not to fire onhashchange depending on how the history entry was changed (which is what seems to be happening, anyway)

[15:23:05.0000] <Hixie>
(it's the main reason i am so reluctant to change anything, which is why i'm always pushing back ever on somewhat good ideas)

[15:24:00.0000] <Hixie>
(when they involve changing rather than adding)

[15:24:01.0000] <sicking>
hear ye, hear ye. Go download FF4RC and let me know if you find any problems. Or file a bug

[15:24:02.0000] <sicking>
getfirefox.com/beta

[15:24:03.0000] <zewt>
... is the about screen supposed to not have the build identifier anywhere? heh

[15:25:00.0000] <zewt>
(i'm sure that when I type in "ff4rc1" people will know what I mean, but I usually just copy and paste from that dialog)

[15:27:00.0000] <smaug____>
zewt: about:support should give all sorts of information, like the build identifier

[15:28:00.0000] <zewt>
odd to move it, fyi the bug tracker still points at help->about

[15:28:01.0000] <smaug____>
and I was wrong :)

[15:28:02.0000] <smaug____>
it doesn't have the buildid

[15:29:00.0000] <zewt>
FF4 does, but FF3.x doesn't

[15:29:01.0000] <zewt>
(so if it's not in help->about, there's no version-agnostic place to point people to get it)

[15:29:02.0000] <smaug____>
/me doesn't use release builds, so about:support gives a bit different information

[15:37:00.0000] <zewt>
sicking: https://bugzilla.mozilla.org/show_bug.cgi?id=640387

[15:39:00.0000] <sicking>
Hixie: fwiw, I generally much prefer having a bug filed against me that I can fix in an update, than leave major problems in an API in an effort not to change the spec

[15:40:00.0000] <Hixie>
sicking: yeah if the change is a major problem it's a different matter, and i'll try to fix it

[15:41:00.0000] <sicking>
Hixie: and it's generally not that hard to track the spec if you just file a bug (and ideally attach a testcase) against existing implementations.

[15:41:01.0000] <Hixie>
(i was referring more to design preferences)

[15:42:00.0000] <Hixie>
sicking: i wish i had the bandwidth to do that.

[15:42:01.0000] <Hixie>
speaking of design preferences, why is URL.createObjectURL() called createObjectURL()?

[15:42:02.0000] <sicking>
Hixie: as opposed to?

[15:42:03.0000] <Hixie>
dunno

[15:42:04.0000] <Hixie>
it returns a URL string, not an Object

[15:42:05.0000] <Hixie>
createURLForObject()?

[15:42:06.0000] <zewt>
yay for user-agent sniffing for bug workarounds

[15:43:00.0000] <Hixie>
i don't really mind what it's called, just curious where the name came from

[15:43:01.0000] <sicking>
Hixie: it started as createFileURL(), but then we realized that we probably want to use it for streams

[15:43:02.0000] <Hixie>
yeah i'm writing the Stream version as we speak

[15:43:03.0000] <sicking>
Hixie: hence s/File/Object/ to make it more generic

[15:43:04.0000] <Hixie>
fair enough

[15:44:00.0000] <sicking>
Hixie: I would have been fine with createURLForObject too, but it's essentially shipped at this point, renaming doesn't seem worth it

[15:44:01.0000] <Hixie>
yeah, not suggesting we change it

[15:45:00.0000] <Hixie>
as far as names go i'm always happy to defer to whoever is writing the relevant spec

[15:45:01.0000] <sicking>
Hixie: is there a reason you can't just let streams use URL.createObjectURL?

[15:45:02.0000] <Hixie>
that's what i'm doing

[15:45:03.0000] <zewt>
heh i coincidentally have code onscreen to workaround the createObjURL/createBlobURL thing in earlier FF builds right now

[15:45:04.0000] <sicking>
Hixie: i concur

[15:45:05.0000] <sicking>
Hixie: sweet!

[15:45:06.0000] <Hixie>
:-)

[15:45:07.0000] <zewt>
(since I'm in the "work around browser nits" part of my setup code for the pushState workaround)

[15:46:00.0000] <Hixie>
i wish pushState was better designed

[15:46:01.0000] <sicking>
Hixie: i doubly concur :(

[15:46:02.0000] <Hixie>
i mean, i _wrote the spec_ and i'm not sure i understand it

[15:46:03.0000] <Hixie>
it's sad

[15:46:04.0000] <sicking>
Hixie: err.. though.. i owe the list a long email

[15:47:00.0000] <zewt>
(guess I can remove the createBlobURL compatibility at this point)

[15:47:01.0000] <sicking>
Hixie: we made a number of changes compared to the spec after talking it over with google

[15:47:02.0000] <Hixie>
oh, good

[15:47:03.0000] <Hixie>
maybe it can be saved yet

[15:47:04.0000] <sicking>
IMHO it's much better now, but still confusing. Though *mostly* confusing in name

[15:47:05.0000] <zewt>
i'm just happy to have replaceState at all, since that's something that's bugged me for a long time (don't expect to actually get away from hashes any time soon)

[15:48:00.0000] <Hixie>
if you don't have time to write a long e-mail, please send a short one reminding me to reverse engineer it

[15:48:01.0000] <zewt>
no longer need to carefully choose which things to stash in the URL based on not wanting to spam the history

[15:48:02.0000] <sicking>
Hixie: http://hacks.mozilla.org/2011/03/history-api-changes-in-firefox-4/

[15:49:00.0000] <Hixie>
those changes make sense

[15:49:01.0000] <Hixie>
having popstate delayed until after load was to make sure you didn't miss any sent before your code was ready, but if you add window.history.state that solves that problem

[15:50:00.0000] <Hixie>
i'll file a bug to update the spec

[15:50:01.0000] <erlehmann>
hashes break semantics. i rage every single time friends of mine send me hash urls and i cannot read the content.

[15:50:02.0000] <sicking>
Hixie: sweet, thanks!

[15:50:03.0000] <erlehmann>
s/hash/hashbang/gi

[15:50:04.0000] <sicking>
Hixie: i did realize another big flaw though. Which we did not have time to fix, but which *might* be salvagable

[15:50:05.0000] <Hixie>
sicking: http://www.w3.org/Bugs/Public/show_bug.cgi?id=12277

[15:51:00.0000] <zewt>
that's irrelevant for totally javascript-based web apps that don't use anchors at all, and hashes are the only way to do what they do until History is widely-deployed, so you'll have to bear with it for a while yet, heh

[15:51:01.0000] <erlehmann>
._.

[15:51:02.0000] <zewt>
____________

[15:52:00.0000] <sicking>
Hixie: the problem is that if you have a page which uses the state argument. And the user clicks a <a href="#hash"> somewhere in the page. That doesn't just scroll, it also creates a history entry that doesn't have the state

[15:53:00.0000] <Hixie>
sicking: yeah, you can work around that using onhashchange and replaceState()

[15:53:01.0000] <Hixie>
sicking: not clear what the right solution is in the API though

[15:54:00.0000] <sicking>
Hixie: ideally all history entries which just represent hash-navigation should share state

[15:54:01.0000] <sicking>
Hixie: onhashchange and replaceState isn't really enough

[15:54:02.0000] <erlehmann>
sicking, in chrome it is difficult to use the address bar when devs are abusing the history (as you may have seen on hacker news) â new URLs tend to overwrite my input as soon as it loses focus. does mozilla have any remedy for that?

[15:54:03.0000] <sicking>
Hixie: you can add the state on the newly created history entry, but if you later need to change the state (using replaceState), you can only modify the state for the current entry, not the previous one

[15:55:00.0000] <Hixie>
sicking: ah, yeah. if you need to share the state that's a bigger problem.

[15:55:01.0000] <Hixie>
sicking: you can work around that too by storing an index instead of the state, but that's lame, granted.

[15:55:02.0000] <sicking>
Hixie: s/share/modify/ ?

[15:55:03.0000] <Hixie>
sicking: modify shared state

[15:56:00.0000] <sicking>
erlehmann: first i hear of it. Don't know how our frontend code will behave

[15:56:01.0000] <sicking>
Hixie: right, the index thing won't work on restarts

[15:56:02.0000] <sicking>
Hixie: or getting kicked out of bfcache

[15:57:00.0000] <Hixie>
sicking: it will if it's an index into localStorage, but granted.

[15:57:01.0000] <sicking>
Hixie: true

[15:57:02.0000] <Hixie>
sicking: can you file a bug on this? or add a comment to http://www.w3.org/Bugs/Public/show_bug.cgi?id=12277 ?

[15:57:03.0000] <erlehmann>
sicking, >http://www.webmonkey.com/2011/03/url-hunter-a-cool-game-but-not-html5/<

[15:57:04.0000] <sicking>
Hixie: i'll file a separate bug on it

[15:58:00.0000] <Hixie>
sicking: thanks

[15:58:01.0000] <erlehmann>
oh wait. that is using anchors.

[15:58:02.0000] <erlehmann>
err fragments

[15:59:00.0000] <Hixie>
sicking: do you know who has implemented this stuff? were you talking to chrome people at google about this? just curious how much of a compat constraint we have here.

[15:59:01.0000] <sicking>
erlehmann: wow, that's hilarious

[15:59:02.0000] <sicking>
Hixie: i was talking to darin fisher and another google guy. The safari people still need to buy into it though.


2011-03-10
[16:00:00.0000] <erlehmann>
it makes chrome not want to close tabs immediately. :/

[16:00:01.0000] <sicking>
Hixie: i.e. we haven't talked to them

[16:00:02.0000] <zewt>
because animated gifs as favicons wasn't annoying enough :)

[16:00:03.0000] <Hixie>
sicking: k

[16:00:04.0000] <sicking>
Hixie: the most backwards-breaking change is removing the after-onload-popstate event

[16:01:00.0000] <erlehmann>
sicking, wait until people implement text adventures using the history API. or zsh.

[16:01:01.0000] <Hixie>
sicking: well if the browsers are doing different things anyway i guess the compat story is weaker and it might be a non-issue.

[16:01:02.0000] <sicking>
Hixie: it seems like most people are filtering out that event though

[16:01:03.0000] <Hixie>
sicking: yeah

[16:01:04.0000] <zewt>
sigh I hate window methods that break when moved off of window

[16:02:00.0000] <sicking>
erlehmann: seems like firefox is doing ok on that page for what it's worth

[16:02:01.0000] <sicking>
zewt: such as?

[16:02:02.0000] <erlehmann>
still, a rate limiter would help with this kind of history abuse.

[16:02:03.0000] <zewt>
(tried to do window.URL = { createObjectURL: window.createObjectURL } in Chrome but will need to be a wrapper instead, oh well)

[16:03:00.0000] <sicking>
zewt: oh, yeah, due to how the DOM is implemented I'd expect that to break in all browsers

[16:03:01.0000] <zewt>
it's more annoying for console.log than anything else

[16:03:02.0000] <sicking>
zewt: i.e. due to it being implemented in C++, I'd expect that not to work

[16:17:00.0000] <gsnedders>
Yay host objects

[16:22:00.0000] <zewt>
spoiled by python method binding, heh

[16:23:00.0000] <TabAtkins>
zewt: That's due to binding, right?  If not called through 'window', 'this' is bound to undefined.

[16:23:01.0000] <zewt>
right

[16:23:02.0000] <zewt>
heh what the

[16:23:03.0000] <zewt>
okay this one's weird

[16:23:04.0000] <TabAtkins>
Yeah, we just need to fix the binding behavior of javascript.

[16:23:05.0000] <uf0>
what exactly does "initial-scale=1.0" do for mobile?

[16:24:00.0000] <zewt>
i do window.history.pushState = null, which works ... but five seconds later, it's reset to the method

[16:25:00.0000] <zewt>
anyone want to see if I'm going insane? http://zewt.org/~glenn/test-ff4rc1-pushState-assignment.html logs four times; after the last, after a long timer, pushState is back from the dead

[16:25:01.0000] <zewt>
er, ff4rc1

[17:14:00.0000] <gsnedders>
TabAtkins: What it's called through doesn't matter, Function.prototype.{apply,call,bind} allow functions to be called with any value as the thisArg

[17:14:01.0000] <TabAtkins>
gsnedders: Yes, of course.

[17:15:00.0000] <TabAtkins>
gsnedders: zewt's use was just ripping the function off, without binding or explicit calling.

[21:52:00.0000] <alystair>
is there any reason the whatwg specs pages are able to bring firefox to its knees

[21:53:00.0000] <alystair>
looks like it froze it

[21:54:00.0000] <alystair>
pegging my cpu

[21:55:00.0000] <MikeSmith>
alystair: multi-page version: http://whatwg.org/C

[21:55:01.0000] <doublec>
it does that for the single page version, yes

[21:56:00.0000] <alystair>
firebug should not link

[21:56:01.0000] <alystair>
  <meta charset=utf-8>

[21:56:02.0000] <alystair>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

[21:56:03.0000] <alystair>
<html xmlns="http://www.w3.org/1999/xhtml" <?php language_attributes(); ?>>

[21:56:04.0000] <alystair>
er

[21:56:05.0000] <alystair>
whoory

[21:57:00.0000] <alystair>
sorry hotkey fiesta, I'll leave now, too sleep deprived :S

[23:28:00.0000] <Hixie>
i need an algorithm that has as input an integer in the range 0..N where N is at least 32, and has as output an RGB triple, such that:

[23:28:01.0000] <Hixie>
* all the outputs are distinguishable colours

[23:29:00.0000] <Hixie>
* the outputs are deterministic (a given input always gives the same output)

[23:29:01.0000] <Hixie>
* the colors in the range 0..n where n < N are clearly distinct

[23:30:00.0000] <Hixie>
* earlier colours are especially distinct, e.g. the colours of the rainbow

[23:30:01.0000] <Hixie>
/me ponders

[23:54:00.0000] <nessy>
Hixie: map the first #FFFFFF numbers to n numbers and then re-use those n numbers until you have N?

[23:55:00.0000] <Hixie>
come again?

[23:55:01.0000] <Hixie>
oh, by "the colors in the range 0..n where n < N are clearly distinct" i just meant that given any subrange starting from 0, the colours have to be distinct

[23:55:02.0000] <Hixie>
so e.g. it's not the seven colours of the rainbow followed by 8 shades of red

[23:56:00.0000] <Hixie>
then 8 shades of green, etc

[23:56:01.0000] <Hixie>
right now my solution is to just have a hard-coded list of colours for 0..N, but that forces me to have a small N (15 in this case).

[00:08:00.0000] <annevk>
Would love an email client that lets you stick emails together

[00:08:01.0000] <Hixie>
pine

[00:08:02.0000] <Hixie>
is what i use

[00:08:03.0000] <annevk>
For when people use email clients that screw up threading

[00:08:04.0000] <Hixie>
works like a charm

[00:09:00.0000] <annevk>
:)d

[00:09:01.0000] <Hixie>
just select multiple e-mails then hit Apply Reply

[00:09:02.0000] <Hixie>
(a r)

[00:09:03.0000] <annevk>
that's a pretty nifty feature, but I meant for when going through my inbox later one thread would actually appear as one

[00:10:00.0000] <Hixie>
pine does that too :-)

[00:10:01.0000] <Hixie>
sort by thread groups threads with the same subject

[00:10:02.0000] <Hixie>
we really need to have a better solution for rotated text in table cells than embedded svg

[00:10:03.0000] <annevk>
can you also group seemingly unrelated emails? like you can do with apps on your iPhone?

[00:11:00.0000] <Hixie>
no, but mostly because i don't have an iphone

[00:11:01.0000] <Hixie>
what do you mean, "group seemingly unrelated emails"?

[00:11:02.0000] <annevk>
that would be kind of neat too, grouping all feedback for one particular spec

[00:11:03.0000] <Hixie>
specifically what do you mean by "group"

[00:11:04.0000] <annevk>
i guess you just create folders and such

[00:12:00.0000] <Hixie>
you can do select by recipient, zoom: ";trpublic-html[ENTER]z" for example will just limit the view to e-mails from the html list

[00:12:01.0000] <annevk>
hmm, in Opera Mail a thread is "group" of related emails that can be collapsed into one so you can see a lot more emails than just that thread

[00:12:02.0000] <Hixie>
you can collapse threads, but you can't collapse multiple unthreaded e-mails in pine, no

[00:13:00.0000] <Hixie>
but you rarely need to, since you just use the zoom feature all the time instead

[00:20:00.0000] <annevk>
very much liking it that Jukka is active on the list now

[00:21:00.0000] <Hixie>
except for him bringing up issues we resolved literally half a decade ago...

[00:22:00.0000] <Hixie>
svg is hard

[00:22:01.0000] <annevk>
apparently our resolutions are not very clear then :)

[00:22:02.0000] <Hixie>
how the heck do i make it so that the x= y= coordinate i give a <text> refers to the bottom left of the bounding box of the em boxes?

[00:22:03.0000] <annevk>
it's evident from his emails that he has read the spec

[00:23:00.0000] <annevk>
Hixie, hmm yeah, the coordinate system always bites me too

[00:23:01.0000] <Hixie>
i'm staring at the svg 1.1 spec's text chapter with very little understanding

[00:23:02.0000] <Hixie>
all i want to do is have the text in a cell of a table be vertical instead of horizontal

[00:23:03.0000] <Hixie>
that shouldn't be this hard

[00:24:00.0000] <Hixie>
i'm even willing to give explicit heights and widths, though i shouldn't hav eto

[00:25:00.0000] <annevk>
apply a transform/

[00:25:01.0000] <annevk>
?

[00:25:02.0000] <annevk>
i don't think SVG has vertical text

[00:25:03.0000] <Hixie>
css transforms aren't implement as non-vendor-specific properties by anyone as far as i can tell

[00:25:04.0000] <Hixie>
also css transforms don't really work for this since they happen after layout as far as i can tell

[00:26:00.0000] <annevk>
SVG has transforms

[00:26:01.0000] <Hixie>
oh, sure, that's how i'm rotating the text

[00:26:02.0000] <Hixie>
but i don't really see how to get the right rotation

[00:27:00.0000] <annevk>
oh, transforms in SVG are around 0,0

[00:27:01.0000] <annevk>
I think

[00:27:02.0000] <Hixie>
you can pass an explicit coordinate to do the transform around

[00:27:03.0000] <Hixie>
rotate(angle, cx, cy)

[00:27:04.0000] <Hixie>
but as far as i can tell you can't use units there

[00:27:05.0000] <Hixie>
you have to use pixels

[00:27:06.0000] <Hixie>
which means you have to use viewBox to set the coordinate system

[00:27:07.0000] <Hixie>
except then my coordinate system isn't square

[00:27:08.0000] <Hixie>
gah

[00:28:00.0000] <annevk>
good times? :p

[00:28:01.0000] <annevk>
maybe you should just stick with an HTML table for now and outsource the SVG bit

[00:32:00.0000] <Hixie>
ok i give up on svg

[00:32:01.0000] <Hixie>
what else can i use

[00:32:02.0000] <Hixie>
i guess i could do it with canvas

[00:32:03.0000] <Hixie>
that would be ridiculous

[00:32:04.0000] <Hixie>
but i guess it'd work

[00:35:00.0000] <annevk>
heycam, don't we have the array type for that?

[00:36:00.0000] <annevk>
heycam, and which specifications are using it then?

[00:37:00.0000] <annevk>
Hixie, why do care so much about the presentation?

[00:37:01.0000] <Hixie>
annevk: it's for a home project i'm working on

[00:39:00.0000] <annevk>
so the last two very short blog posts are found way more interesting on twitter than any of the summary blog posts

[00:39:01.0000] <annevk>
measured by RTs

[00:40:00.0000] <annevk>
latest WHATWG Weekly: 1 RT; HTML5 for Web Developers: 20 RT; Validator.nu update: 16 RT

[00:40:01.0000] <Hixie>
what about hits?

[00:40:02.0000] <annevk>
/me looks

[00:41:00.0000] <annevk>
Hixie, can you add my email to the analytics account for the frontpage btw?

[00:41:01.0000] <annevk>
/me is curious

[00:41:02.0000] <Hixie>
/me wonders how to do that

[00:41:03.0000] <Hixie>
username?

[00:42:00.0000] <annevk>
annevankesterenâgc

[00:43:00.0000] <annevk>
in terms of pageviews it's HTML5 for Web Developers; latest WHATWG Weekly; Validator.nu update

[00:43:01.0000] <Hixie>
done

[00:44:00.0000] <annevk>
though even more popular even over the last 10 days is the road to contenteditable

[00:44:01.0000] <annevk>
and just after HTML5 for Web Developers is HTML is the new HTML5

[00:44:02.0000] <annevk>
still going strong :)

[00:45:00.0000] <Hixie>
i don't understand why analytics isn't picking up any of the clicks on the home page

[00:52:00.0000] <annevk>
http://www.pinkbike.com/news/DNS-Prefetching-implications.html

[00:54:00.0000] <annevk>
I can't find anything about that <meta> in either HTML or the WHATWG Wiki :/

[00:55:00.0000] <annevk>
https://developer.mozilla.org/en/controlling_dns_prefetching#Controlling_prefetching_from_content

[00:55:01.0000] <Hixie>
add it :-)

[00:56:00.0000] <annevk>
the HTTP header is X- prefixed and the rel value is squatted, makes so much sense...

[00:57:00.0000] <Hixie>
i love when people ship x- http headers on the basis that that's easier than registering them

[00:57:01.0000] <Hixie>
and then people argue the problem is with them, not the registration system :-)

[00:58:00.0000] <annevk>
one of the IETF ADs did put out a draft suggesting people no longer do that

[00:58:01.0000] <Hixie>
ok so using canvas i've been able to actually get the text to display in the right place, but now i am fighting a web font issue

[00:58:02.0000] <Hixie>
i guess i have to postpone drawing the canvas until after onload

[00:58:03.0000] <annevk>
maybe I should advertise that draft somewhere so people actually notice

[00:58:04.0000] <Hixie>
also getting the font size is non-trivial

[00:59:00.0000] <Hixie>
"parseInt(getComputedStyle(canvas, '')['font-size'], 10)"

[00:59:01.0000] <Hixie>
there has to be a better way to do that

[00:59:02.0000] <Hixie>
like canvas.runtimeStyle.fontSize.px or something

[01:00:00.0000] <Hixie>
(why didn't we support context.font = 'inherit'?)

[01:00:01.0000] <annevk>
something like canvas.resolvedValue.values.fontSize.px or some such has been proposed

[01:00:02.0000] <annevk>
euh, resolvedStyle

[01:01:00.0000] <annevk>
still waiting for some experimental implementations before drafting everything

[01:01:01.0000] <annevk>
they have been told to be coming, but it looks like it will be a while

[01:01:02.0000] <annevk>
though I guess at some point I should just write it all out

[01:01:03.0000] <annevk>
and see if that has better results

[01:02:00.0000] <zcorpan>
Hixie: http://lists.w3.org/Archives/Public/public-html/2009Jul/0947.html

[01:03:00.0000] <Hixie>
zcorpan: that ian guy is such a moron. i wish he had just done what i want instead. :-P

[01:03:01.0000] <Hixie>
i'm getting weirdly unreliable effects even waiting until onload

[01:03:02.0000] <Hixie>
do fonts not delay onload?

[01:03:03.0000] <zcorpan>
fonts should delay onload

[01:04:00.0000] <zcorpan>
at least in impl, don't recall if there's a spec that says so

[01:06:00.0000] <zcorpan>
Hixie: maybe you should learn from the inherit thing and do what i say next time? :)

[01:07:00.0000] <Hixie>
not if you don't give use cases :-)

[01:07:01.0000] <annevk>
http://wiki.whatwg.org/wiki/PragmaExtensions added the x-... thingie. dns-prefetch was already registered

[01:08:00.0000] <annevk>
http://wiki.whatwg.org/wiki/RelExtensions should we remove archives and such now?

[01:08:01.0000] <Hixie>
i haven't bothered removing anything from RelExtensions yet because i'm waiting for a decision on what the spec should say

[01:08:02.0000] <Hixie>
about registering values

[01:09:00.0000] <annevk>
at this point I don't think I want to accept anything but a wiki-based approach

[01:10:00.0000] <annevk>
the idea of maintaining it in the spec is somewhat nice, but doesn't work well for experimental values

[01:10:01.0000] <Hixie>
yeah it's pretty clear to me now that the right solution is to have a wiki page where you can register values, the values time out after a year with no proof of implementation, and the good ones get moved into the spec.

[01:11:00.0000] <annevk>
sounds reasonable

[01:11:01.0000] <Hixie>
dunno how to get the chairs to go for that since it's a new proporasl

[01:11:02.0000] <Hixie>
proposal

[01:12:00.0000] <Hixie>
(seriously, anyone know how to change the baseline alignment for <text> in svg? i want to align something based on the em box and not the alphabetic baseline, but can't work out how to do it. the spec is very confusing.)

[01:12:01.0000] <annevk>
so you want the coordinates to be from the bottom or something?

[01:12:02.0000] <Hixie>
or the top, either would work

[01:13:00.0000] <annevk>
http://stackoverflow.com/questions/56402/aligning-text-in-svg ?

[01:14:00.0000] <Hixie>
style="dominant-baseline:top" doesn't seem to do anything in chrome

[01:15:00.0000] <Hixie>
let's try firefox

[01:15:01.0000] <Hixie>
nope

[01:16:00.0000] <Hixie>
ah because apparently it's spelt "text-before-edge"

[01:16:01.0000] <Hixie>
how intuitive

[01:16:02.0000] <annevk>
dominant-baseline is rather intuitive too

[01:16:03.0000] <Hixie>
this seems to be based on the bounding box not the em box

[01:16:04.0000] <Hixie>
maybe that's a chrome bug

[01:17:00.0000] <Hixie>
works in firefox

[01:18:00.0000] <Hixie>
next question, why isn't it rendering in the color i'm specifying

[01:19:00.0000] <Hixie>
oh, right. i have to set fill="currentColor".

[01:19:01.0000] <annevk>
that seems like a bug

[01:20:00.0000] <annevk>
oh no

[01:21:00.0000] <Hixie>
is there an svg test suite?

[01:21:01.0000] <annevk>
"The âcolorâ property is used to provide a potential indirect value (currentColor) for the âfillâ, âstrokeâ, âstop-colorâ, âflood-colorâ and âlighting-colorâ properties." but the initial value for 'fill' is black...

[01:21:02.0000] <annevk>
http://www.w3.org/Graphics/SVG/WG/wiki/Test_Suite_Overview

[01:21:03.0000] <Hixie>
as far as i can tell, none of these tests test dominant-baseline

[01:22:00.0000] <Hixie>
gotta wonder how they got out of CR

[01:22:01.0000] <Hixie>
probably the same way HTML5 is gonna hit REC in 2014...

[01:22:02.0000] <annevk>
with 275 tests it's pretty clear not every feature is tested

[01:23:00.0000] <Hixie>
ok, well, hardcoding the font size, the shrink-wrap dimensions, and the baseline offset, i was able to make this work using svg.

[01:23:01.0000] <Hixie>
i'm going to say that as a platform, we've really dropped the ball on this particular feature.

[01:26:00.0000] <annevk>
SVG is way hard

[01:26:01.0000] <Hixie>
well to be fair this really should be solved in css

[01:26:02.0000] <Hixie>
and i guess it will be with vertical text

[01:27:00.0000] <Hixie>
though that doesn't handle the slight-angle case

[01:27:01.0000] <annevk>
in retrospect I think SVG should have been part of "XBL" in some way

[01:27:02.0000] <annevk>
to prettify semantics, but not to describe applications by itself

[01:28:00.0000] <Hixie>
yeah

[01:28:01.0000] <Hixie>
but it was originally intended to replace flash, as i understand it

[01:29:00.0000] <Hixie>
and now it's too late to do it right

[01:29:01.0000] <Hixie>
the browser vendors (me included) totally dropped the ball on svg because we ignored it until too late

[01:29:02.0000] <annevk>
yeah, Adobe pushed for it to replace Flash

[01:29:03.0000] <annevk>
then bought Flash

[01:29:04.0000] <annevk>
and stopped caring (mostly)

[01:29:05.0000] <annevk>
and we got stuck with it

[01:33:00.0000] <annevk>
but yeah, also our own fault

[01:33:01.0000] <annevk>
cannot really fix something you're not actively involved in

[01:37:00.0000] <annevk>
AryehGregor, http://weblogs.mozillazine.org/roc/archives/2011/03/the_myth_of_ful.html seems to indicate the IE blog post was indeed misleading

[01:37:01.0000] <annevk>
AryehGregor, in tradition with their other blog posts

[01:45:00.0000] <Hixie>
nn

[01:46:00.0000] <annevk>
g'night

[01:52:00.0000] <hsivonen>
AryehGregor: you may also be interested in https://bugzilla.mozilla.org/show_bug.cgi?id=638241

[01:52:01.0000] <hsivonen>
AryehGregor: in that case, Firefox lost to IE on the FishTank not because of hardware acceleration flaws but because of same-origin checks

[01:53:00.0000] <hsivonen>
so basically, one can't really attribute slowness to what the benchmark says it's testing without actually profiling and seeing what's slow

[01:57:00.0000] <jgraham>
I am told that a peril of hardware acceleration is that you have to be careful not to regress performance in areas where the CPU is relatively fast

[02:28:00.0000] <annevk>
I'm back on Android again

[02:28:01.0000] <annevk>
new iPhone broke in the exact same way

[02:28:02.0000] <annevk>
I'm still using it through (sometimes by enabling tethering on the Android phone to get things working) as getting it repaired before leaving is not going to happen

[02:28:03.0000] <annevk>
(It's fully functional apart from the microphone...)

[02:32:00.0000] <jgraham>
Isn't the microphone quite important on a phone?

[02:33:00.0000] <annevk>
Well, now phones are computers it's less essential, but it started bothering me enough that I switched.

[02:34:00.0000] <annevk>
Also, some shop will call me to tell my tent has been repaired and I would like to be able to answer them :)

[03:56:00.0000] <annevk>
Philip`, is isPointInPath() the only method quite different in browsers with respect to transforms?

[03:57:00.0000] <annevk>
Philip`, and is Firefox correct per current spec or Opera/WebKit?

[03:57:01.0000] <annevk>
/me thinks it's the former, but isn't quite sure

[04:00:00.0000] <Philip`>
http://philip.html5.org/tests/canvas/suite/tests/results.html#2d.path.isPointInPath.transform.1 suggests Firefox is wrong (since I don't think the spec changed since those tests)

[04:01:00.0000] <Philip`>
I don't remember any other features with a similar problem

[04:11:00.0000] <annevk>
ooh

[04:11:01.0000] <annevk>
<800

[04:11:02.0000] <annevk>
Philip`, the spec says transforms do not affect isPointInPath()

[04:12:00.0000] <annevk>
"The isPointInPath(x, y) method must return true if the point given by the x and y coordinates passed to the method, when treated as coordinates in the canvas coordinate space unaffected by the current transformation"

[04:13:00.0000] <Philip`>
That's what the tests test

[04:13:01.0000] <Philip`>
(I think)

[04:13:02.0000] <annevk>
ok

[04:14:00.0000] <Philip`>
ctx.translate(50, 0);

[04:14:01.0000] <Philip`>
ctx.rect(0, 0, 20, 20);

[04:14:02.0000] <Philip`>
_assertSame(ctx.isPointInPath(51, 10), true, "ctx.isPointInPath(51, 10)", "true");

[04:14:03.0000] <Philip`>
etc

[04:15:00.0000] <Philip`>
(The rect() is affected by the transform, at least since that part of the spec got changed)

[04:15:01.0000] <annevk>
thanks

[05:01:00.0000] <zcorpan>
need to reboot to install firefox 4 rc on windows 7?

[05:03:00.0000] <jgraham>
zcorpan: I didn't

[05:13:00.0000] <Rik`>
zcorpan: that's mandatory to get Bing as a default search :)

[05:56:00.0000] <annevk>
zcorpan, why is the order of Nodes interfaces the way it is?

[05:59:00.0000] <annevk>
zcorpan, order of sections that is

[06:02:00.0000] <zcorpan>
annevk: don't remember, maybe i copied dom3core

[06:04:00.0000] <annevk>
oh yeah, you did

[06:04:01.0000] <annevk>
but then it got reshuffled somewhat afterwards

[06:49:00.0000] <annevk>
jgraham, is there some reason why assert_equals does not handle \0?

[07:02:00.0000] <jgraham>
annevk: It doesn't?

[07:05:00.0000] <annevk>
dunno, something seems to fail somewhat

[07:18:00.0000] <jgraham>
annevk: Show me an example and I will try to fix

[07:20:00.0000] <annevk>
gonna upload one soon

[07:20:01.0000] <annevk>
working on some new EventSource tests based on suggestions Hixie gave

[07:28:00.0000] <smaug____>
annevk: do you have tests for XHR2 and "progress" event?

[07:28:01.0000] <smaug____>
something which tests that "progress" doesn't fire too often

[07:28:02.0000] <annevk>
no tests for XHR2 at all

[07:28:03.0000] <smaug____>
k

[07:28:04.0000] <annevk>
I was planning on writing CORS tests, but did not get around to it

[07:29:00.0000] <annevk>
timing tests are particularly annoying :/

[07:29:01.0000] <smaug____>
indeed

[07:33:00.0000] <annevk>
so far I have found one bug in WebKit

[07:33:01.0000] <annevk>
it does not parse the retry field correctly

[07:34:00.0000] <annevk>
not sure this was worth all the trouble

[07:37:00.0000] <annevk>
jgraham, http://tc.labs.opera.com/apis/EventSource/format-field-parsing.htm

[07:38:00.0000] <zewt>
heh, opera throws a nice exception if you dispatch without initEvent

[07:38:01.0000] <zewt>
Error:

[07:38:02.0000] <annevk>
it's very interoperable I hear

[07:39:00.0000] <zewt>
are there interoperability concerns with having the null string as an error message? :)

[07:40:00.0000] <annevk>
well it should at least have a code and such

[07:44:00.0000] <annevk>
zewt, where does DOM Events require a non-null event name?

[07:45:00.0000] <annevk>
it's defined as such

[07:45:01.0000] <annevk>
"The name of the event type. The name must be a DOMString. Specifications that define events, content authors, and authoring tools must use case-sensitive event type names that do not contain whitespace characters."

[07:45:02.0000] <annevk>
which does not say much at all

[07:45:03.0000] <jgraham>
annevk: I'm not sure what bug I'm supposed to see

[07:46:00.0000] <zewt>
i remember that being one of the things you explicitly changed in core

[07:46:01.0000] <zewt>
here it is, in dispatchEvent

[07:46:02.0000] <annevk>
jgraham, I think the problem might be that under got it says "\0" rather than using an actual zero byte

[07:46:03.0000] <zewt>
UNSPECIFIED_EVENT_TYPE_ERR: Raised if the Event.type was not specified by initializing the event before dispatchEvent was called. Specification of the Event.type as null or an empty string must also trigger this exception.

[07:47:00.0000] <annevk>
but it does allow specifications to define events that are the empty string

[07:47:01.0000] <jgraham>
annevk: That seems more likely to be either a bug in the browser or a problem with your test, no?

[07:47:02.0000] <annevk>
anyway, there's a separate thread on that too

[07:48:00.0000] <annevk>
jgraham, could be a problem with the test I suppose

[07:48:01.0000] <zewt>
i know

[07:48:02.0000] <zewt>
just tying the two issues together--they should either both go or both stay

[07:48:03.0000] <jgraham>
annevk: (I don't think it makes a difference but encodeURIComponent seems more appropriate than encodeURI)

[07:49:00.0000] <zewt>
(removing the null string restriction and then, as a side-effect of that, having to add a new "initEvent was called" flag would just be silly)

[07:49:01.0000] <zewt>
well strictly speaking, initEvent("", ...) doesn't actually throw by D3E's rules

[07:49:02.0000] <annevk>
zewt, well that is what Gecko is doing at the moment

[07:50:00.0000] <annevk>
zewt, they do not have the dispatchEvent() limitation but do have the requirement to invoke initEvent()

[07:50:01.0000] <zewt>
yeah I think I saw that

[07:50:02.0000] <zewt>
that's the only browser doing that, right?

[07:50:03.0000] <annevk>
could be

[07:50:04.0000] <zewt>
whereas webkit has the null-string check (iirc)

[07:50:05.0000] <annevk>
but they're happy to change

[07:50:06.0000] <annevk>
and Opera is too

[07:51:00.0000] <zewt>
yeah since no real webpages actually want to send the null string as an event i'd hope nobody would dig in their heels on this

[07:51:01.0000] <smaug____>
ok, as I expected, Chrome does fire "progress" occasionally way too often

[07:52:00.0000] <smaug____>
3ms, when it should be every 50ms

[07:52:01.0000] <zewt>
(i mean, there are no compat issues or anything, this is just a straightforward simplification for everyone)

[07:54:00.0000] <annevk>
except when you believe in the magical DOM Level 3 Events it seems

[07:54:01.0000] <annevk>
it defies logic

[07:55:00.0000] <zewt>
still havn't seen any response from the d3e editor to suggest he'll actually budge on anything ever, heh :|

[07:55:01.0000] <annevk>
he's on vacation I'm told

[07:55:02.0000] <zewt>
ah fair enough

[07:55:03.0000] <annevk>
I asked Ms2ger to take care of pushing to publish DOM Core when I'm goen

[07:55:04.0000] <smaug____>
yeah, shepazu is on vacation

[07:55:05.0000] <annevk>
gone*

[07:55:06.0000] <annevk>
Art is not really willing to do it without a green light from Doug, which is fair enough

[07:57:00.0000] <zewt>
hopefully d3e will eventually just become a spec for the actual events (the major bulk of that spec) and reference dom core for the underlying event model ... but well heh

[07:58:00.0000] <zewt>
i mean i agree that having two "parallel" normative specs for the same thing, written completely differently, is ... weird

[07:58:01.0000] <smaug____>
something like that would be good. Need to just be careful to keep the specs readable

[07:59:00.0000] <smaug____>
Hmm, though, do events need to be in DOM Web Core

[08:00:00.0000] <smaug____>
mutation events should be there, if we want to keep supporting them

[08:00:01.0000] <annevk>
it's nice that the event model is there

[08:00:02.0000] <smaug____>
why?

[08:01:00.0000] <annevk>
http://annevankesteren.nl/2011/03/dom-core-events (and some emails on a mailing list which I can't find)

[08:02:00.0000] <smaug____>
.createEvent is a valid reason

[08:02:01.0000] <smaug____>
though if we move to new FooEvent, that reason would be gone

[08:03:00.0000] <annevk>
the method would still be there...

[08:03:01.0000] <smaug____>
sure, and DOM Core could just refer to Events spec for the result

[08:03:02.0000] <zewt>
seems like it'd make more sense to define an interface that exposes createEvent, which document (and hopefully WorkerGlobalScope) is a user of--so the event API doesn't have to know about document

[08:04:00.0000] <smaug____>
I'm mainly just worried about getting another monster spec which includes everything between earth and sky

[08:04:01.0000] <zewt>
(don't personally care whether events are in DOM Core or a split out DOM Core Events or whatever)

[08:05:00.0000] <jgraham>
DOM Core hardly seems to be a monster spec

[08:05:01.0000] <smaug____>
not yet, at least

[08:06:00.0000] <annevk>
what do you mean not yet?

[08:06:01.0000] <jgraham>
How much is missing?

[08:06:02.0000] <annevk>
goals and issues are pretty clearly identified: http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#goals

[08:06:03.0000] <smaug____>
well, if there are features creeping in ...

[08:06:04.0000] <zewt>
well, there's a big difference between a huge spec that defines a single topic (D3E) and one that defines a bunch of very clearly-separated topics (eg. HTML)

[08:07:00.0000] <smaug____>
I said "I'm just worried"

[08:07:01.0000] <annevk>
D3E is a bunch of different topics too imo

[08:07:02.0000] <annevk>
more so than Events and Nodes are...

[08:07:03.0000] <zewt>
d3e seems like two topics: the event model and the element events that use it

[08:07:04.0000] <smaug____>
D3E has several topics, sure

[08:07:05.0000] <zewt>
(the latter can be broken down further, of course)

[08:07:06.0000] <annevk>
mouse events are way different from keyboard events

[08:07:07.0000] <smaug____>
keyevents could be in a separate document

[08:08:00.0000] <annevk>
mouse events should be tied with 'pointer-events' and hit testing

[08:09:00.0000] <smaug____>
possibly. And the DOM Events could contain just the event dispatching, which isn't tied to DOM tree, so it wouldn't need to be in DOM core

[08:09:01.0000] <annevk>
there's two infrastructure things I'd consider for DOM Core

[08:09:02.0000] <annevk>
the event loop and event handler attributes

[08:09:03.0000] <annevk>
so you can avoid depending on HTML5 if you need those

[08:09:04.0000] <annevk>
smaug____, the event model is very small

[08:10:00.0000] <annevk>
smaug____, not really worth separating it out and duplicating all the boilerplate, duplicating the references required, cross dependency, etc.

[08:11:00.0000] <zewt>
well, if you remove all of the event definitions from DOM Events, and give it DOM Core's event model description, then it simply becomes a DOM Core Events :)

[08:11:01.0000] <zewt>
(remove as in move to relevant sections elsewhere)

[08:11:02.0000] <smaug____>
yeah, DOM Core Events could make sense

[08:11:03.0000] <annevk>
the events model is 5 pages out of 50

[08:11:04.0000] <smaug____>
so

[08:12:00.0000] <smaug____>
?

[08:12:01.0000] <annevk>
so it would just create a bunch of boilerplate and editorial work for no good reason

[08:12:02.0000] <annevk>
as you always need DOM Core for DOM Events and vice versa

[08:12:03.0000] <annevk>
exceptions are shared, tree model is shared

[08:12:04.0000] <annevk>
Node inherits from EventTarget

[08:12:05.0000] <annevk>
and Document has createEvent()

[08:13:00.0000] <annevk>
compared with the 500-1000 pages HTML has, I'm really quite pleased it's only 50

[08:13:01.0000] <annevk>
46 even

[08:15:00.0000] <smaug____>
the old level 2 specs are/were quite readable (I'm not talking about whether they are good specs).

[08:15:01.0000] <zewt>
annevk: any reason not to define createEvent as an interface implemented by Document? seems more consistent

[08:15:02.0000] <annevk>
zewt, that's not how it's implemented

[08:16:00.0000] <zewt>
don't know what user-visible difference it makes

[08:16:01.0000] <annevk>
zewt, we could still define it in a separate document and make it behave the same as it does now though

[08:16:02.0000] <annevk>
I just don't see the point

[08:16:03.0000] <smaug____>
there is certainly implementations which implement DocumentEvent interface

[08:17:00.0000] <annevk>
sure

[08:17:01.0000] <smaug____>
s/is/are/

[08:17:02.0000] <zewt>
just sort of odd that everything else in there is an interface; that one being different leads to the odd "introduced later ..." note in 4.4, and (although it doesn't really matter yet) means WorkerGlobalScope can't implement it

[08:18:00.0000] <zewt>
minor thing, just curious

[08:18:01.0000] <annevk>
WorkerGlobalScope could define a similar method

[08:19:00.0000] <annevk>
or something similar, no real need to worry about that now

[08:20:00.0000] <annevk>
but rather than focusing on splitting it out can't we instead focus on the contents for a while?

[08:20:01.0000] <annevk>
or is it being in the same document the real problem here?

[08:23:00.0000] <annevk>
the equivalent text in DOM Level 3 Events is over fifteen pages

[08:24:00.0000] <annevk>
not counting boilerplate, graphs, and definitions

[08:24:01.0000] <annevk>
if you count those it's over 30

[08:25:00.0000] <zewt>
nothing discourages reporting bugs quite like a summary zero-discussion wontfix...

[08:25:01.0000] <zewt>
/me grumbles

[08:26:00.0000] <annevk>
?

[08:26:01.0000] <zewt>
totally off-topic grumbling :)

[08:26:02.0000] <annevk>
i was already afraid I did something wrong :)

[08:26:03.0000] <zewt>
sorry :P

[08:27:00.0000] <zewt>
seems like the urge to split things into tiny chicklet specs is sort of overcompensation for previous giganto-specs

[08:28:00.0000] <zewt>
since it's not like specs are python modules and splitting them apart is without cost

[08:29:00.0000] <annevk>
just http://www.w3.org/TR/DOM-Level-3-Core/core.html is already twice as long as DOM Core is today

[08:29:01.0000] <annevk>
so the mega spec concern really seems unjustified

[08:30:00.0000] <annevk>
that page is 95 pages

[08:30:01.0000] <annevk>
DOM Core is 46

[08:30:02.0000] <annevk>
that page is not all of DOM Level 3 Core

[08:30:03.0000] <annevk>
DOM Core also includes the event model

[08:30:04.0000] <zewt>
even if dom core defined 10x as many features and was 10x as long, I wouldn't be worried--as long as they remain clearly separated with clear relationships between the features

[08:31:00.0000] <annevk>
me neither, but that seems unlikely to happen and the criticism is not backed with any facts

[08:41:00.0000] <smaug____>
DOM 2 Core is around 50 pages, and that is still quite readable, especially because that spec doesn't contain too many unrelated features

[08:42:00.0000] <jgraham>
The main reason DOM 2 Core is readable is that it doesn't really define anything in much detail

[08:44:00.0000] <annevk>
I get 48 for DOM Level 2 Core

[08:45:00.0000] <annevk>
that's still two pages more than DOM Core

[08:45:01.0000] <annevk>
and it doesn't define the event model and lacks a bunch of detail

[08:45:02.0000] <annevk>
and that is also not counting all the appendices

[08:46:00.0000] <annevk>
because the count for DOM Core includes references, glossary, acknowledgments, etc.

[08:46:01.0000] <smaug____>
ok, if dom web core can be kept the size it is now, then good

[08:46:02.0000] <smaug____>
although the event model isn't strictly core stuff

[08:46:03.0000] <zewt>
i really don't think it's the size that's the issue

[08:47:00.0000] <annevk>
I don't really see the issue with that either

[08:47:01.0000] <smaug____>
size is part of the readability issue

[08:47:02.0000] <smaug____>
which html spec has now

[08:47:03.0000] <zewt>
well that's a presentation issue, splitting specs isn't the only possible way to deal with that

[08:48:00.0000] <zewt>
really need an html spec rendering that's one-page but doesn't choke every browser, heh

[08:48:01.0000] <smaug____>
that is true

[08:48:02.0000] <smaug____>
yeah :)

[08:48:03.0000] <zewt>
it's also slightly ironic to have an html spec that kills browsers :)

[08:49:00.0000] <annevk>
I suspect DOM Core will grow somewhat as there are a few missing details and we might want to add a little more advice for authors

[08:49:01.0000] <annevk>
but I can't see it going from 46 to 800 pages or so

[08:50:00.0000] <annevk>
and we can always split it then

[08:50:01.0000] <annevk>
at this point complaining about size is illogical given that it's smaller than pretty much every other spec

[08:50:02.0000] <annevk>
and contains more

[08:53:00.0000] <smaug____>
I didn't complain the size atm

[08:53:01.0000] <smaug____>
I said "I'm just worried ...."

[08:54:00.0000] <smaug____>
and also, for me events aren't part of the core

[08:54:01.0000] <smaug____>
but yet, I'm happy to see web dom core which removes lots of crazy features of DOM 3 Core

[08:55:00.0000] <zewt>
doesn't really remove anything, right? just makes it ... comprehensible

[08:55:01.0000] <annevk>
it removes a lot of unimplemented features (and some implemented ones)

[08:55:02.0000] <annevk>
see the historical section

[08:57:00.0000] <zewt>
i have, other than EventException it's just minor changes, not removed features

[08:57:01.0000] <jgraham>
Attribute ninodes

[08:57:02.0000] <jgraham>
s/ni//

[08:57:03.0000] <zewt>
sounds like a medical condition

[08:59:00.0000] <annevk>
zewt, DOM 3 Core, not DOM 3 Events

[09:00:00.0000] <zewt>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-events ?

[09:01:00.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-core

[09:01:01.0000] <zewt>
only "feature removal" (if it can even be called that) listed there is EventException

[09:02:00.0000] <zewt>
oh, havn't even looked at that stuff

[09:06:00.0000] <zewt>
annevk: nitpick on Goals: one of the goals of DOM Core is to "Import bits of HTML5 that ought to be in DOM Core", which is sort of recursive

[09:08:00.0000] <TabAtkins_>
What the *hell* is bug 12284 going on about?

[09:12:00.0000] <miketaylr>
you know "C" parsing of ... words :/

[09:13:00.0000] <TabAtkins_>
I can only guess that he has some fragile/stupid program that tests whether a document is HTML/XML by testing the length of some "word".

[09:13:01.0000] <miketaylr>
just use .htm, BAM

[09:14:00.0000] <miketaylr>
assuming that word is a file extension, who knows

[09:14:01.0000] <TabAtkins_>
If he's using extensions, yeah.  But if that would fix his program, then I guess .doc would register as xml?

[09:14:02.0000] <TabAtkins_>
In any case, it's retarded and I marked it as invalid.

[09:14:03.0000] <miketaylr>
maybe we need a resolution "RESOLVED RETARDED"

[09:15:00.0000] <jgraham>
Curiously I was going to suggest the same thing

[09:16:00.0000] <jgraham>
Although to be fair RESOLEVED: DON'T HIRE REPORTER AS C PROGRAMMER is more accurate

[09:16:01.0000] <TabAtkins_>
hahaha

[09:17:00.0000] <zewt>
that's a tag stackoverflow needs badly

[09:17:01.0000] <zewt>
"unhirable"

[09:17:02.0000] <zewt>
or at the very least, "doomed"

[09:55:00.0000] <TabAtkins_>
Urgh, tablelayout is such a horrible decisions.  >_<

[09:55:01.0000] <TabAtkins_>
Also: Hixie, I apologize for submitting the winning table example CP.

[10:05:00.0000] <TabAtkins_>
Hmm, the spec doesnt' seem to define which actions will focus an element, beyond sequential focus navigation.

[10:05:01.0000] <TabAtkins_>
In specific, there's some incompatibility between browsers over whether clicking an <a href> focuses it.

[10:10:00.0000] <AryehGregor>
TabAtkins_, presumably the spec doesn't want to get too heavily into UI stuff.

[10:12:00.0000] <TabAtkins_>
That's what I suspect as well, but I have an internal developer complaining at me about it.  ^_^

[10:23:00.0000] <aho>
"FFS, the HTMLWG just decided to allow presentation tables as valid HTML."

[10:23:01.0000] <aho>
wtf?

[10:24:00.0000] <TabAtkins_>
See the decision on issue 130

[10:25:00.0000] <aho>
got a link?

[10:25:01.0000] <TabAtkins_>
http://lists.w3.org/Archives/Public/public-html/2011Mar/0245.html

[10:26:00.0000] <aho>
ty

[10:29:00.0000] <AryehGregor>
Okay, so am I correct that when hg tries to merge something, it seems to be starting up vim, and then if I quit vim without saving because I have no interest in using it for merge resolution and just want conflict markers, it does some kind of braindead merge and destroys my work or something like that?

[10:30:00.0000] <AryehGregor>
Or is this somehow nondefault?

[10:31:00.0000] <AryehGregor>
/me tries setting merge = internal:merge, but really doesn't appreciate the "do some mysterious and probably destructive merge without actually asking me"

[10:31:01.0000] <AryehGregor>
I really hate hg.

[10:31:02.0000] <AryehGregor>
Ah, hg rollback works.

[10:31:03.0000] <AryehGregor>
Maybe.

[10:31:04.0000] <AryehGregor>
No, not really.

[10:31:05.0000] <AryehGregor>
/me restores from backup

[10:35:00.0000] <AryehGregor>
Hmm, maybe it was only the output file that conflicted, not the source . . . whatever.

[10:56:00.0000] <foolip_>
jgraham, are you around?

[11:40:00.0000] <AryehGregor>
Why did I think extractContents() and cloneContents() would be easy to spec after deleteContents()?  They're way more complicated.

[11:40:01.0000] <AryehGregor>
On the bright side, it's improving my understanding of ranges a lot.

[11:41:00.0000] <AryehGregor>
(Although it's sad that ranges are that hard to understand.)

[11:46:00.0000] <hober>
just a reminder that http://www.w3.org/2002/09/wbs/40318/issue-56-objection-poll closes tomorrow

[11:46:01.0000] <TabAtkins_>
I have no idea which one I should care about.

[11:47:00.0000] <zewt>
secret issues? heh

[11:47:01.0000] <Hixie>
wow, the chairs finally made a completely wrong decision

[11:47:02.0000] <Hixie>
wonder what i'm supposed to do now

[11:47:03.0000] <TabAtkins_>
Fork the spec, finally?

[11:48:00.0000] <hober>
Hixie: which one? <table role=presentation>?

[11:49:00.0000] <Hixie>
the change from "Tables must not be used as layout aids" to "Tables should not be used as layout aids"

[11:50:00.0000] <zewt>
i've never really understood that--it doesn't make sense to me for specs to say what I can use something for, only what the feature does

[11:51:00.0000] <TabAtkins_>
Sure it does.  If a feature can be fundamentally misused by an author unaware of the issues that make the misuse bad, the most useful path is to just disallow that use.

[11:53:00.0000] <TabAtkins_>
It's like disallowing people from putting important information in the content of a ::before element, except I think that CSS doesn't explicitly say MUST NOT (because we're somewhat allergic to using the word "must").

[11:53:01.0000] <zewt>
but what does it even mean, if it's not even objectively testable?

[11:54:00.0000] <zewt>
it's fine to say "if you do this, some UAs may do something you don't expect and leave you with something you didn't want", but that should be implied from the requirements placed on the UA

[11:54:01.0000] <TabAtkins_>
Authors dont' read UA requirements.  ^_^

[11:55:00.0000] <zewt>
that's sort of the point, it's going to work, so people are going to do it

[11:56:00.0000] <zewt>
eg. it's not something that a validator can flag for people

[11:56:01.0000] <TabAtkins_>
Not an automatic validator, no.

[11:56:02.0000] <AryehGregor>
Hixie, if this encourages authors to put role=presentational on their presentational tables, I think it will be an excellent change.

[11:56:03.0000] <TabAtkins_>
That doesn't mean it can't be flagged manually, though.

[11:57:00.0000] <TabAtkins_>
AryehGregor: If this encourages authors to write more pages with presentational tables rather than using current and upcoming CSS layout techniques, it will be a horrible change.

[11:57:01.0000] <AryehGregor>
Also true.

[11:57:02.0000] <AryehGregor>
Hard to say which is going to be the bigger effect in practice.

[11:57:03.0000] <AryehGregor>
/me hasn't read the decision yet, though

[12:01:00.0000] <TabAtkins_>
One outcome only affects legacy pages (which aren't, in general, very likely to change), while the other affects pages that have not yet been created.  We usually optimize for the latter, precisely because the former are unlikely to change en masse.

[12:02:00.0000] <AryehGregor>
I've seen a lot of templates on Wikipedia that use presentational tables.

[12:02:01.0000] <AryehGregor>
It'd be a bloody lot easier to add role=presentational than to rewrite them to not use tables.

[12:02:02.0000] <AryehGregor>
Particularly if they're protected, so only admins can edit them.

[12:03:00.0000] <AryehGregor>
More generally, if some site uses presentational tables, you're a lot more likely to get it fixed to use role=presentational than to get it fixed to not use tables.

[12:03:01.0000] <AryehGregor>
How about we say nested tables aren't conforming unless they all have role=presentational?

[12:03:02.0000] <AryehGregor>
Or all but the innermost, say.

[12:04:00.0000] <AryehGregor>
That would be a nice and concrete improvement, right?  You could also just say they're not conforming period, but that would get fewer sites to change.

[12:06:00.0000] <Hixie>
(does saying role=presentational on a table even work, per ARIA? don't you have to set it on all the cells and rows and everything?)

[12:06:01.0000] <AryehGregor>
If it doesn't, wouldn't that be new information?

[12:07:00.0000] <Hixie>
one would assume the chairs actually checked that kind of thing before making this kind of decision

[12:07:01.0000] <Hixie>
so presumably not

[12:07:02.0000] <AryehGregor>
They only read what's submitted to them, right?

[12:08:00.0000] <Hixie>
if they only read what's sumitted, then them making decisions on the spec is irresponsible

[12:08:01.0000] <AryehGregor>
I think you're a couple years late in that judgment.

[12:08:02.0000] <Hixie>
but i doubt that they limit themselves

[12:08:03.0000] <Hixie>
that would be crazy

[12:09:00.0000] <AryehGregor>
Well, you could ask.

[12:11:00.0000] <Hixie>
i'm deep in video-conferencing edits right now

[12:11:01.0000] <Hixie>
but when i get to applying their decision, i'm sure i will be talking to them :-)

[12:11:02.0000] <Hixie>
i can't believe they just reverted 15 years of advocacy so casually

[12:13:00.0000] <zewt>
if they're making decisions without talking to the spec editor about them first, it's a pretty hopelessly broken system, heh

[12:14:00.0000] <AryehGregor>
The spec editor has a chance to comment.

[12:15:00.0000] <zewt>
"commenting" isn't the same as discussion, and from the fact that he seems borderline blindsided by this it doesn't seem like there was actual discussion, heh

[12:16:00.0000] <Hixie>
i'm not blindsided, they've been due to give a decision on this for months

[12:16:01.0000] <Hixie>
i'm just shocked at what they decided

[12:16:02.0000] <pesla>
Does that mean that any element with role=presentational can be used for layout purposes? :)

[12:16:03.0000] <Hixie>
i'm about to move the forums over from my account to a dedicated role account so zcorpan can manage them, so if they go down it's not hugely unexpected

[12:16:04.0000] <Hixie>
if all goes well though it should just transition smoothly

[12:18:00.0000] <Hixie>
/me presses the button

[12:25:00.0000] <Hixie>
holy cow

[12:25:01.0000] <Hixie>
i moved the forums to another user and NOTHING BROKE as far as i can tell

[12:25:02.0000] <Hixie>
sweet!

[12:26:00.0000] <zewt>
when nothing seems to break, that's when you start to get worried

[12:26:01.0000] <zewt>
the big, obvious breaks--those are the easy ones

[12:26:02.0000] <Hixie>
well i'm going offline for a few hours now, so expect the forums to catch fire momentarily! :-)

[12:26:03.0000] <Hixie>
bbl

[12:52:00.0000] <cying>
dear WG: what is the vendor prefix syntax for CSS *classnames*?

[12:52:01.0000] <cying>
is it ... -vendor-* ?

[12:52:02.0000] <cying>
i thought that's only for CSS properties...

[12:53:00.0000] <AryehGregor>
"classnames"?

[12:53:01.0000] <cying>
yeah

[12:53:02.0000] <cying>
like if a vendor wanted to have a set of class names for the general web to use... what would they specify that wouldn't clash?

[12:55:00.0000] <AryehGregor>
Vendors are not allowed to use class names.  Only authors are.

[12:56:00.0000] <AryehGregor>
Well, I don't see that stated explicitly in the spec.

[12:56:01.0000] <AryehGregor>
But that's the general practice.

[12:56:02.0000] <AryehGregor>
Vendors who want to introduce features typically introduce attributes, they don't reuse the class attribute.

[12:57:00.0000] <AryehGregor>
Does this crash Opera 11 for everyone else too?  http://aryeh.name/spec/dom-range/test/Range-extractContents.html

[12:58:00.0000] <zewt>
yeah.

[12:58:01.0000] <gsnedders>
AryehGregor: yes

[12:58:02.0000] <AryehGregor>
Yay.

[12:58:03.0000] <AryehGregor>
Want to have someone look into it?

[12:59:00.0000] <gsnedders>
Nah, let's just leave the crash bug unfixed!

[12:59:01.0000] <AryehGregor>
That would be sad, because then I'd have to figure out myself how to work around it.

[13:01:00.0000] <gsnedders>
Trying to create a comment, it would seem

[13:03:00.0000] <AryehGregor>
createComment() is crashing?

[13:04:00.0000] <gsnedders>
No, creating a comment because of some range thing

[13:05:00.0000] <AryehGregor>
Always happy to help you track down crash bugs.

[13:05:01.0000] <gsnedders>
extractContents/cloneContents somewhere

[13:07:00.0000] <gsnedders>
Whcih is unsurprising with what that is testing :)

[13:08:00.0000] <AryehGregor>
It's extractContents().

[13:09:00.0000] <gsnedders>
Yeah, so it crashes when creating a comment node because of extractContents is not the most surprising of causes.

[13:12:00.0000] <AryehGregor>
Hardly a common case to extractContents() a range including comments, I guess.

[13:22:00.0000] <TabAtkins_>
cying: What Aryeh said.  Classes are entirely a user-level extension mechanism.  Vendors work in pseudo-classes and similar.

[13:23:00.0000] <cying>
TabAtkins_: hmmm i guess we don't want to recommend custom attributes though

[13:23:01.0000] <TabAtkins_>
cying: I'm missing context.  What you are trying to do?

[13:24:00.0000] <cying>
TabAtkins_: i want to recommend additional hints people can add to their web pages, ala Instapaper adding a class "instapaper-ignore" to elements on a web page to ignore those elements

[13:24:01.0000] <TabAtkins_>
>

[13:24:02.0000] <cying>
TabAtkins_: (when instapaper performs readability on a page, it'll ignore those elements in the web page)

[13:24:03.0000] <TabAtkins_>
For what?

[13:24:04.0000] <cying>
so that an article's "readable subset" can be extracted out

[13:25:00.0000] <cying>
or, in our case:

[13:25:01.0000] <cying>
we want to mark an element in a web page that is meant to be the "byline" for an article... so we're considering asking publishers to add "flipboard-byline" to the classes for an element

[13:25:02.0000] <cying>
so:

[13:26:00.0000] <dglazkov>
what's up with forwarding emails from private lists?

[13:26:01.0000] <TabAtkins_>
This should be done through a standardization effort, if it's something that you want to do at the browser level.

[13:26:02.0000] <cying>
<span class="myformatting">Charles Ying</span> would become:

[13:26:03.0000] <cying>
<span class="myformatting flipboard-byline">Charles Ying</span>

[13:26:04.0000] <AryehGregor>
dglazkov, probably shouldn't happen, I guess?

[13:26:05.0000] <dglazkov>
cant' the author just resend it? :)

[13:26:06.0000] <zewt>
dglazkov: the author may not be on the list--having to subscribe just to repost one message is a pain

[13:27:00.0000] <AryehGregor>
(without the author's permission, that is)

[13:27:01.0000] <TabAtkins_>
cying: If you're trying to annotate the page with additional semantic information, this should be standardized.

[13:27:02.0000] <cying>
TabAtkins_: understood, we don't really need it to be at the browser level, but wanted to try to make something along the same thinking as the spec community

[13:27:03.0000] <TabAtkins_>
I dont' necessarily mean through HTML, though - microformats sounds like a good avenue to pursue this in.

[13:27:04.0000] <cying>
TabAtkins_: is there an existing effort for annotating pages?

[13:27:05.0000] <cying>
i see

[13:27:06.0000] <cying>
microformats can get tricky for some of our publishers, we'll need something simpler

[13:28:00.0000] <TabAtkins_>
Annotating a page with hAtom isn't difficult, and it provides pretty good structure for extracting.

[13:29:00.0000] <cying>
TabAtkins_: ah! got it, that's more along the lines of what we're looking for

[13:29:01.0000] <TabAtkins_>
The point is that you should *not* unilaterally create an application-specific annotation mechanism that you want to deploy to the web.

[13:29:02.0000] <cying>
TabAtkins_: thanks!

[13:30:00.0000] <TabAtkins_>
No problem. ^_^

[13:30:01.0000] <cying>
TabAtkins_: we're trying very hard not to. we really dislike having to say "flipboard-*" for class names

[13:37:00.0000] <dglazkov>
is daniel glazman visiting these parts of the world?

[13:37:01.0000] <TabAtkins_>
He's gone back to france now.

[13:37:02.0000] <dglazkov>
:)

[13:38:00.0000] <dglazkov>
I mean this channel

[13:38:01.0000] <TabAtkins_>
Oh, that wasn't obvious.  ^_^  No, he doesn't do this channel.  You may be able to raise him on irc.w3.org#css

[13:45:00.0000] <jgraham>
foolip_: I am somewhat around now

[13:46:00.0000] <dglazkov>
heycam: great response

[13:46:01.0000] <heycam>
dglazkov, thanks

[13:46:02.0000] <heycam>
I think people are reasonably happy with things like SVG & MathML having dedicated syntax in text/html, as well as the XML syntax

[13:47:00.0000] <heycam>
so I don't think it is unreasonable to do the same with XBL (or whatever the end solution is)

[13:48:00.0000] <dglazkov>
heycam: yup

[13:49:00.0000] <dglazkov>
heycam: I decided we should call it HTML5 Modularity-enabling Dujibobs, or HTML5MED

[13:49:01.0000] <heycam>
ha

[13:50:00.0000] <heycam>
/me takes his html5 meds

[13:50:01.0000] <zewt>
what the

[13:51:00.0000] <zewt>
my xhr progress-events form that works in chrome 9 doesn't work in FF4 :| time to find out why

[13:52:00.0000] <jgraham>
"The HTML serialization of a binding won't be usable in a UA not suppporting HTML" well duh...

[13:52:01.0000] <zewt>
heh user error ... sort of

[13:52:02.0000] <heycam>
"don't do that then"

[13:53:00.0000] <heycam>
although if you're thinking of the case where you want to use bindings someone else has written, and they are written in an HTML document...

[13:53:01.0000] <zewt>
typing a hostname in the address bar in FF will complete based on title before hostname, so when I typed "foo" to load "foo.com" (real site) it loaded 10.0.0.1 with title "foo site" and I didn't notice :|

[13:53:02.0000] <jgraham>
/me isn't thinking of any case

[13:53:03.0000] <jgraham>
/me is just finding glazou's argument silly

[13:53:04.0000] <zewt>
address bars try to be too clever for anyone's good these days

[13:53:05.0000] <gsnedders>
AryehGregor: http://pastebin.com/AgRRbWXJ

[13:53:06.0000] <foolip_>
jgraham, just wanted to ask you about http://code.google.com/p/html5lib/issues/detail?id=178 but I guess you've gotten email about it by now

[13:54:00.0000] <gsnedders>
AryehGregor: The important point is that the range ends at offset zero into the comment

[13:54:01.0000] <AryehGregor>
gsnedders, cool.

[13:54:02.0000] <jgraham>
sicking: So what is the state of the hsitory API stuff? Do you have / expect byt-in from WebKit on these changes?

[13:55:00.0000] <TabAtkins_>
Okay, I just plain can't watch flash video in Chrome 10 any more.  Dammit.

[13:55:01.0000] <jgraham>
foolip_: Looking

[13:55:02.0000] <jgraham>
TabAtkins_: "feature"

[13:55:03.0000] <zewt>
heh

[13:56:00.0000] <TabAtkins_>
jgraham: Hah, I wish.  If it was a feature it wouldn't crash the renderer.

[13:56:01.0000] <jgraham>
TabAtkins_: It's called "being taught a lesson"

[13:56:02.0000] <zewt>
teach lessons after html video is feature complete :P

[13:57:00.0000] <AryehGregor>
gsnedders, okay, I commented that test out.

[13:57:01.0000] <TabAtkins_>
Or at least after Youtube does its total conversion.

[13:57:02.0000] <zewt>
until we have programmatic fullscreen, and UAs can actually scale video to fullscreen without dropping to a slideshow

[13:57:03.0000] <zewt>
(at least)

[13:58:00.0000] <zewt>
maybe the latter has improved lately, havn't checked

[14:03:00.0000] <dglazkov>
TabAtkins_: you should totally yell at someone. You're in the right office :)

[14:03:01.0000] <TabAtkins_>
Indeed.

[14:06:00.0000] <TabAtkins_>
All right, yelling is done.

[14:06:01.0000] <AryehGregor>
gsnedders, okay, I sanity-checked Opera's results and now uncommented the line, so Opera crashes on the test again.  Not really fair to remove tests just because someone crashes on them.  But I left a comment in the source explaining which line you have to comment out for it to work.

[14:10:00.0000] <AryehGregor>
Hurrah, extractContents() specced and tested.

[14:10:01.0000] <AryehGregor>
Now for cloneContents().

[14:10:02.0000] <AryehGregor>
Should be easy after extractContents().  And I mean it this time.

[14:11:00.0000] <AryehGregor>
Since its functionality is basically a subset of extractContents()'s.

[14:12:00.0000] <dglazkov>
copy/paste time! :)

[14:12:01.0000] <zewt>
itym cloneContents() time

[14:16:00.0000] <AryehGregor>
I considered writing all three methods' specs in the same algorithm with variations called out, but it wound up being too messy.

[14:20:00.0000] <gsnedders>
AryehGregor: The expected result for what I pastebined is an empty comment, right?

[14:21:00.0000] <AryehGregor>
Let's see: http://html5.org/specs/dom-range.html#dom-range-extractcontents

[14:22:00.0000] <AryehGregor>
Contained nodes would be empty, first partially contained child is null, last partially contained child is the comment.

[14:22:01.0000] <AryehGregor>
So yeah, you should clone it and set the data to the empty string.

[14:22:02.0000] <AryehGregor>
Per spec.

[14:23:00.0000] <AryehGregor>
Which admittedly I just made up.

[14:23:01.0000] <AryehGregor>
But it matches Gecko and WebKit.

[14:25:00.0000] <gsnedders>
AryehGregor: And if it started at div.firstChild it should return an empty DocumentFragment?

[14:25:01.0000] <AryehGregor>
Yes, that's what Gecko and WebKit do.  Opera clones an empty node in this case too.

[14:25:02.0000] <AryehGregor>
Which possibly makes more sense.

[14:26:00.0000] <AryehGregor>
But too late for making sense.

[14:26:01.0000] <gsnedders>
Yeah, I know we make an empty node in that case tooâ¦ because we crash in that case too :P

[14:26:02.0000] <AryehGregor>
Er, well.

[14:26:03.0000] <gsnedders>
(Trying to create the empty node)

[14:26:04.0000] <AryehGregor>
Ah, I see.

[14:26:05.0000] <AryehGregor>
But for text nodes you succeed.

[14:26:06.0000] <AryehGregor>
Didn't test PIs.

[14:26:07.0000] <gsnedders>
And for CDATASections we do too.

[14:27:00.0000] <AryehGregor>
CDATASections don't exist in Web DOM Core-land.

[14:27:01.0000] <AryehGregor>
I don't know why, since browsers seem to implement them.

[14:27:02.0000] <gsnedders>
I don't understand how we don't crash with CDATASections, but we don't. :P

[14:27:03.0000] <AryehGregor>
But the DOM Range spec doesn't consider them, because it depends on DOM Core, and DOM Core says they don't exist.

[14:28:00.0000] <gsnedders>
PIs would be interesting to test too, IMO

[14:28:01.0000] <AryehGregor>
I do test PIs.

[14:28:02.0000] <gsnedders>
Ah, okay, just in our case for this you didn't test PIs.

[14:28:03.0000] <AryehGregor>
I have at least three tests that involve PIs.

[14:30:00.0000] <AryehGregor>
data:application/xhtml+xml,<html xmlns="http://www.w3.org/1999/xhtml"><body><![CDATA[<span>foo</span>]]><script>alert(document.querySelector("body").firstChild);</script></body></html>

[14:30:01.0000] <AryehGregor>
That alerts a CDATASection.

[14:31:00.0000] <AryehGregor>
Why does DOM Core not acknowledge them?

[14:31:01.0000] <AryehGregor>
annevk, ^?

[14:31:02.0000] <TabAtkins_>
Hahaha, "Electron Band Structure in Germanium, My Ass": http://pages.cs.wisc.edu/~kovar/hall.html

[14:33:00.0000] <gsnedders>
AryehGregor: IIRC, mine/zcorpan's argument was there was no good reason why they can't just be Text nodes

[14:33:01.0000] <charlvn>
TabAtkins_: now that's my kind of research! :P

[14:42:00.0000] <jgraham>
TabAtkins_: That is the reason to give up experimental physics

[14:43:00.0000] <jgraham>
Or rather was my reason

[14:43:01.0000] <jgraham>
Well in particular the fact that I sucked at it

[14:43:02.0000] <jgraham>
/me is physically incapable of any task involving a soldering iron

[14:44:00.0000] <jgraham>
/me is not happy about this as there are many useful things that can be acomplished using a soldering iron

[14:45:00.0000] <jgraham>
/me has no particular evident handicap that should lead to this particular problem, but nevertheless it exists

[14:45:01.0000] <dglazkov|away>
at ths point, the appropriate response is MONKEYPANTS

[14:45:02.0000] <dglazkov|away>
it's appropriately nonsensical

[14:54:00.0000] <dglazkov>
TabAtkins <3

[15:02:00.0000] <TabAtkins_>
Does anyone else see my response on the <canvas src> thread which I just posted?

[15:02:01.0000] <TabAtkins_>
The public-html list just autoresponded me in a way that suggests it forget I'm a member.

[15:03:00.0000] <heycam>
TabAtkins_, yes: http://www.w3.org/mid/AANLkTi=8rxN8gVzYf4wU1OP6db82tjR+zjSMDpRNqt_=@mail.gmail.com

[15:03:01.0000] <TabAtkins_>
heycam: Okay, cool.  So I'll just ignore this as the listdaemon being crazy.

[15:03:02.0000] <heycam>
but see you've CCed public-html-request too, maybe that was the cause of the mail back?

[15:03:03.0000] <TabAtkins_>
Oh, wow, I did?  Who put that in there?  That doesn't even make sense.

[15:04:00.0000] <heycam>
yeah I have no idea why that gets in peoples' CC lists sometimes

[15:12:00.0000] <AryehGregor>
gsnedders, are browsers planning to actually make them text nodes, though?

[15:12:01.0000] <gsnedders>
AryehGregor: Dunno

[15:12:02.0000] <AryehGregor>
It would make more sense to treat them like entities, and merge them into adjacent text nodes when deserializing the XML.  Not make them text nodes themselves.

[15:14:00.0000] <AryehGregor>
What specification defines how to parse XML into a DOM?  Does XML 1.0 itself somehow define that?

[15:14:01.0000] <heycam>
agree

[15:14:02.0000] <AryehGregor>
It doesn't mention "DOM" anywhere.

[15:14:03.0000] <AryehGregor>
Oh, wait.

[15:14:04.0000] <AryehGregor>
I see, HTML seems to, at least for XHTML.

[15:14:05.0000] <AryehGregor>
No, it sort of defers to other specs in a vague fashion.

[15:15:00.0000] <gsnedders>
AryehGregor: XML Infoset

[15:16:00.0000] <gsnedders>
And then somewhere maps the Infoset to the DOM

[15:16:01.0000] <AryehGregor>
Fun.

[15:16:02.0000] <AryehGregor>
Is anyone planning on actually speccing how to parse XML into a DOM without CDATASection, or is DOM Core just going to pretend they don't exist without defining what to do with them?

[15:17:00.0000] <AryehGregor>
Because it makes more sense to reflect reality here if no one has specific plans to change, IMO.

[15:20:00.0000] <Hixie>
cying: there's no particular syntax for custom class names, it's just a microformat. Best bet is to go to the microformats community and put forward your use case and see what they suggest.

[15:20:01.0000] <Hixie>
cying: ("it has to be really simple" being part of your use case)

[15:20:02.0000] <Hixie>
cying: i don't see anything wrong with class="byline" being sufficient, though

[15:21:00.0000] <cying>
Hixie: thanks... yeah, class="byline" is okay... but we want a bit more namespacing as to not conflict with most common classes

[15:21:01.0000] <cying>
Hixie: i think that's the path we'll take

[15:22:00.0000] <Hixie>
what's wrong with conflicting with class="byline"?

[15:22:01.0000] <Hixie>
it's not like people will have used it for anything but a byline :-)

[15:24:00.0000] <dglazkov>
Hixie: dhyatt (and I) want to change the spec: https://bugs.webkit.org/show_bug.cgi?id=56001#c9. Do I send mail to whatwg? File a bug? Wait for things to magically happen on its own?

[15:24:01.0000] <Hixie>
please hold

[15:24:02.0000] <Hixie>
looking...

[15:25:00.0000] <Hixie>
if you want to change that you should mail the list explaining the reason for it to be changed

[15:25:01.0000] <dglazkov>
k

[15:25:02.0000] <Hixie>
(what's the reason?)

[15:25:03.0000] <dglazkov>
can't do it reasonably in WebKit and still allow user styling of controls

[15:25:04.0000] <Hixie>
"it's hard" is a lame reason

[15:25:05.0000] <Hixie>
authors are more important than implementors

[15:26:00.0000] <TabAtkins_>
How about "It's impossible in pure CSS"?

[15:26:01.0000] <dglazkov>
didn't say it's hard. can't do it != it's hard

[15:26:02.0000] <Hixie>
of course you can do it :-)

[15:26:03.0000] <dglazkov>
:)

[15:26:04.0000] <Hixie>
just define a new appearance value that automatically senses the direction and renders it appropriately

[15:26:05.0000] <Hixie>
what's the problem here

[15:27:00.0000] <TabAtkins>
"Renders it appropriately" means that it's being done magically by the browser, and can't be done by the user.

[15:27:01.0000] <dglazkov>
how does a user-styled control do it?

[15:28:00.0000] <dglazkov>
TabAtkins: I think we downed Hixie

[15:28:01.0000] <dglazkov>
:)

[15:28:02.0000] <Hixie>
if the author wants to change the rendering, they use xbl, just like any other form control

[15:29:00.0000] <Hixie>
the whole point of this control is that they get platform-native rendering and don't have to override anything

[15:29:01.0000] <TabAtkins>
We don't do platform-native rendering. ^_^

[15:29:02.0000] <dglazkov>
Hixie: that's not the way it works now. There's lots of uses in the wild where peeps put -webkit-appearance:none and style their controls already

[15:30:00.0000] <Hixie>
css doesn't support styling <meter> manually anyway, whether it's vertical, horizontal, or both.

[15:30:01.0000] <Hixie>
it's like <select>'s drop-down, there's no way to style it from css.

[15:30:02.0000] <dglazkov>
Hixie: there is in WebKit

[15:30:03.0000] <Hixie>
demo page?

[15:31:00.0000] <dglazkov>
/me builds a demo page

[15:33:00.0000] <dglazkov>
http://jsfiddle.net/TmRPq/

[15:34:00.0000] <Hixie>
oh i thought you meant for <select>

[15:34:01.0000] <dglazkov>
Hixie: that would be great, actually, but no :)

[15:35:00.0000] <dglazkov>
at this point, we have two choices: 1) not implement size-sensing in WebKit and 2) change the spec to allow explicit sizing

[15:35:01.0000] <Hixie>
ok well for <meter> you've already solved the problem. Just change "::-webkit-meter-horizontal-bar" to "::-webkit-meter-bar", and dynamically determine the stacking direction.

[15:35:02.0000] <dglazkov>
besides, auto sizing is not necessary what you need.

[15:35:03.0000] <TabAtkins>
That doesn't let you, for example, use a gradient for the bar.

[15:36:00.0000] <TabAtkins>
(Since you need to know the direction to construct the right gradient.)

[15:36:01.0000] <dglazkov>
you might want a fat, short meter

[15:36:02.0000] <dglazkov>
like the old-school radio lamp ones

[15:37:00.0000] <TabAtkins>
Huh.  My editor is highlighting 'import' like it's a reserved word in PHP.  The googles don't tell me anything about this, though.  AryehGregor, you know anything?

[15:38:00.0000] <Hixie>
TabAtkins: you know the direction, since you set the dimensions too

[15:38:01.0000] <gsnedders>
TabAtkins: It isn't

[15:38:02.0000] <AryehGregor>
TabAtkins, pretty sure it's not.

[15:38:03.0000] <Hixie>
dglazkov: show me one page anywhere that actually does that

[15:38:04.0000] <TabAtkins>
Okay, thanks.  My syntax highlighter is just dumb.

[15:38:05.0000] <AryehGregor>
http://php.net/manual/en/reserved.php

[15:39:00.0000] <Hixie>
(if you really want to support a fat meter, just have three appearance values: -webkit-meter, -webkit-meter-horizontal, -webkit-meter-vertical)

[15:39:01.0000] <dglazkov>
Hixie: appearance is not going to cut it if I want to style it

[15:41:00.0000] <Hixie>
you need 'appearance' and the pseudos, sure

[15:41:01.0000] <dglazkov>
Hixie: here's a page: http://jsfiddle.net/TmRPq/2/

[15:41:02.0000] <dglazkov>
Hixie: why go into all the trouble?

[15:41:03.0000] <Hixie>
because most people won't want to style it and because a fat meter is dumb

[15:41:04.0000] <Hixie>
it's the right thing to do

[15:42:00.0000] <dglazkov>
Hixie: I think it's too early to tell if most people don't want to style it

[15:42:01.0000] <Hixie>
no it's not

[15:42:02.0000] <Hixie>
look at all other controls

[15:42:03.0000] <dglazkov>
:)

[15:42:04.0000] <Hixie>
most people don't style them

[15:42:05.0000] <Hixie>
anyway i'm not saying don't support styling

[15:42:06.0000] <Hixie>
i'm saying:

[15:42:07.0000] <Hixie>
* support styling

[15:42:08.0000] <Hixie>
* by default orient sanely

[15:42:09.0000] <Hixie>
* allow override of orientation

[15:43:00.0000] <Hixie>
this seems to support everything you've mentioned and everything i've mentioned

[15:43:01.0000] <dglazkov>
how would I override orientation?

[15:43:02.0000] <Hixie>
<Hixie> (if you really want to support a fat meter, just have three appearance values: -webkit-meter, -webkit-meter-horizontal, -webkit-meter-vertical)

[15:43:03.0000] <AryehGregor>
Hixie, all existing form controls are meant to allow the user to input things, not present information to the user.

[15:43:04.0000] <AryehGregor>
I think that makes a difference to how likely people are to want to style them.

[15:43:05.0000] <dglazkov>
can you help me with a bit of code?

[15:44:00.0000] <dglazkov>
Hixie: I don't understand what you mean

[15:44:01.0000] <dglazkov>
if I want to style controls, I have to set apprearance: none

[15:45:00.0000] <dglazkov>
especially if there platform-specific styling

[15:45:01.0000] <dglazkov>
(and since we're arguing about styling controls, I think you'd be surprised how many sites actually _do_ style controls)

[15:46:00.0000] <dglazkov>
especially considering there are entire libraries dedicated to that

[15:46:01.0000] <Hixie>
how do you control the direction today?

[15:48:00.0000] <dglazkov>
Hixie: it's done in a wrong way today for meter and progress. We use -webkit-appearance: slider-vertical for input[type=range]

[15:48:01.0000] <dglazkov>
once you've made it vertical, you can't apply user styling to it

[15:48:02.0000] <dglazkov>
it sucks

[15:48:03.0000] <Hixie>
ok so here's a proposal:

[15:48:04.0000] <Hixie>
for the default rendering, have -webkit-appearance: meter / slider / progress;

[15:49:00.0000] <Hixie>
once you set -webkit-appearance: none, get the direction from -webkit-direction: horizontal / vertical

[15:49:01.0000] <dglazkov>
that's what I suggested in https://bugs.webkit.org/show_bug.cgi?id=56001#c1

[15:50:00.0000] <Hixie>
then you have a bunch of pseudos for the various parts, like ::-webkit-meter-bar, ::-webkit-meter-high, ::-webkit-slider-thumb, whatever

[15:50:01.0000] <dglazkov>
or nearly

[15:50:02.0000] <Hixie>
so where's the problem

[15:51:00.0000] <dglazkov>
Hyatt thinks box-sensing is a dumb idea :)

[15:51:01.0000] <dglazkov>
you should talk to him

[15:51:02.0000] <Hixie>
hyatt is a big boy, he can argue his own thoughts if he wants the spec changed

[15:51:03.0000] <dglazkov>
:)

[15:55:00.0000] <dglazkov>
Also: I think that adding this "magic" to controls is a bad idea for a whole different reason: it's not possible with just CSS.

[15:55:01.0000] <dglazkov>
dglazkov: and I intuitively hate "magic" in the platform

[15:55:02.0000] <TabAtkins>
Now you're talking to yourself?

[15:55:03.0000] <zewt>
that's you, by the way

[15:55:04.0000] <dglazkov>
:D

[15:55:05.0000] <dglazkov>
sorry

[15:56:00.0000] <zewt>
zewt: this guy's losing it

[15:56:01.0000] <dglazkov>
I would rather see less magic in the platform, moving to a place where you could concievably "explain" all built-in HTML elements with CSS.

[15:56:02.0000] <AryehGregor>
URLs starting with \\ in Windows are network shares or something, right?

[15:57:00.0000] <zewt>
among other things

[15:57:01.0000] <AryehGregor>
Is there some standard way to express those in URLs?  Like replace the initial \\ with smb:// or something?

[15:57:02.0000] <AryehGregor>
The URL is specifically: \\eshel.campus.ad.bgu.ac.il\BW-Students

[15:59:00.0000] <zewt>
file://///host/path in firefox (5)

[15:59:01.0000] <zewt>
(had to squint to be sure I wasn't going crazy, heh)

[15:59:02.0000] <AryehGregor>
Heh.


2011-03-11
[16:00:00.0000] <Hixie>
dglazkov: what i just described was just css. :-)

[16:00:01.0000] <zewt>
at least, that's what it gives me if I load a file into FF from a UNC path

[16:00:02.0000] <Hixie>
dglazkov: so clearly it can be described as css :-)

[16:00:03.0000] <TabAtkins>
The 'appearance' property counts as 'magic'. ^_^

[16:01:00.0000] <Hixie>
well HTML defines everything in terms of XBL

[16:01:01.0000] <Hixie>
so you could just implement XBL instead :-)

[16:01:02.0000] <dglazkov>
Hixie: oh right. I like the idea of -webkit-direction

[16:02:00.0000] <dglazkov>
Hixie: but I think the authors would much rather do: meter { -webkit-direction: horizontal; }

[16:02:01.0000] <Hixie>
dglazkov: well then have the default -webkit-direction value be 'auto'

[16:02:02.0000] <dglazkov>
Hixie: meter { width: 200px; height: 10px; }

[16:04:00.0000] <dglazkov>
Hixie: in order for the box-sensing to work, they'd have to style _more_ than in explicit setting

[16:05:00.0000] <Hixie>
how so?

[16:05:01.0000] <dglazkov>
meter { direction: horizontal } -- done

[16:05:02.0000] <zewt>
AryehGregor: not that it answers your question about standards (no idea), but Chrome and Opera use the much saner file://host/path (havn't tried IE9)

[16:05:03.0000] <Hixie>
dglazkov: what is done?

[16:05:04.0000] <dglazkov>
meter { width: somevalueIneedtoknow, height: someothervalue; }

[16:05:05.0000] <Hixie>
dglazkov: what is the use case you're trying to solve here?

[16:06:00.0000] <dglazkov>
Hixie: I am reasoning against auto-sensing the dimensions

[16:06:01.0000] <dglazkov>
Hixie: dimensions are a poor way of doing this

[16:06:02.0000] <Hixie>
what is "this"?

[16:06:03.0000] <dglazkov>
determining the orientation of control

[16:07:00.0000] <dglazkov>
you don't actually mean what you say. The author wants to say: "I want this to be horizonal"

[16:07:01.0000] <dglazkov>
so they have to start measuring stuff

[16:07:02.0000] <dglazkov>
instead, they just need to be able to say "horizonal"

[16:07:03.0000] <Hixie>
dimensions are the best way of determining the default orientation of control, they are only going to want to have a vertical meter if they are sizing their meter to be vertical.

[16:07:04.0000] <dglazkov>
as in <meter orientation="horizonal">

[16:08:00.0000] <dglazkov>
you are saying that they are the best, but why?

[16:08:01.0000] <dglazkov>
why is it easier than just explicitly stating the orientation?

[16:08:02.0000] <Hixie>
authors are far more likely to be giving the dimensions of their control and be disappointed that the control is now in a stupid direction (e.g. taller than wide but still horizontal), than they are to care about the direction of the control but not its dimensions.

[16:08:03.0000] <dglazkov>
that's just hearsay

[16:08:04.0000] <Hixie>
not saying something is trivially easier than saying something.

[16:09:00.0000] <dglazkov>
you are still saying something

[16:09:01.0000] <Hixie>
my argument has as much validity as the one you are making :-)

[16:09:02.0000] <zewt>
it seems like a sensible default, as long as it can be overridden

[16:09:03.0000] <dglazkov>
no, it doesn't

[16:09:04.0000] <Hixie>
you're saying the opposite of what i'm saying with as much evidence

[16:09:05.0000] <dglazkov>
you are adding magic

[16:09:06.0000] <dglazkov>
where I am not

[16:09:07.0000] <dglazkov>
therefore my argument is better :)

[16:09:08.0000] <Hixie>
you say magic, i say usability :-)

[16:09:09.0000] <Hixie>
therefore my argument is better :-)

[16:10:00.0000] <dglazkov>
ok, let's start from a few steps back

[16:10:01.0000] <Hixie>
k

[16:10:02.0000] <dglazkov>
when I want to specify orientation of a control, do I think a) dimensions or b) orientation?

[16:10:03.0000] <dglazkov>
I would say orientation

[16:11:00.0000] <Hixie>
sure

[16:11:01.0000] <Hixie>
when I want to specify dimensions of a control, do I think a) dimensions or b) orientation?

[16:11:02.0000] <Hixie>
I would say dimensions

[16:11:03.0000] <dglazkov>
yup

[16:11:04.0000] <dglazkov>
and you are conflating the two

[16:12:00.0000] <Hixie>
i said the same as you did with one word switched!

[16:12:01.0000] <dglazkov>
you proved my point!

[16:12:02.0000] <zewt>
let's exclaim things!

[16:12:03.0000] <Hixie>
dglazkov: i really don't know what your point is, so that's surprising to me :-)

[16:12:04.0000] <dglazkov>
you are conflating setting dimensions with setting orientation.

[16:12:05.0000] <dglazkov>
and what I am saying is that they should be two separate things

[16:13:00.0000] <Hixie>
i'm saying that when authors change the dimensions, they will almost always what the orientation to switch to match.

[16:13:01.0000] <dglazkov>
because when the author wants to set dimensions, he doesn't expect to set both dimension and orientation

[16:13:02.0000] <Hixie>
EXACTLY

[16:13:03.0000] <Hixie>
which is why when you set the dimensions, the orientation should automatically follow

[16:14:00.0000] <zewt>
i think he meant: he doesn't expect both dimension and orientation to be set

[16:14:01.0000] <Hixie>
then i completely disagree

[16:14:02.0000] <Hixie>
when the author wants to set dimensions, he doesn't expect to have to set both dimension and orientation

[16:14:03.0000] <dglazkov>
Hixie: there is nothing on the Web that behaves like that

[16:14:04.0000] <dglazkov>
Hixie: when the author sets dimensions of a div, he doesn't expect the div to change orientation

[16:15:00.0000] <Hixie>
everything on the web behaves like this. You put content in a table, it automatically sizes to fit it. You put a bunch of floats next to each other, they automatically wrap to avoid each other. Etc.

[16:15:01.0000] <dglazkov>
wrap and fit are totally different from orientation

[16:15:02.0000] <dglazkov>
nothing changes orientation

[16:16:00.0000] <Hixie>
what would have needed to change orientation?

[16:16:01.0000] <zewt>
either way you'd still be able to set the orientation explicitly, right? (eg. if you really do want a 10x100 progress bar that fills horizontally)

[16:16:02.0000] <dglazkov>
when an author builds a page with a meter, he/she thinks of orientation, not dimensions

[16:17:00.0000] <dglazkov>
dimensions come as a forcing function to change orientation

[16:17:01.0000] <zewt>
(eg. the auto argument is only a default, not for not having an orientation style at all?)

[16:17:02.0000] <dglazkov>
or at least it will be, according to the spec today

[16:17:03.0000] <Hixie>
I disagree with "when an author builds a page with a meter, he/she thinks of orientation, not dimensions"

[16:17:04.0000] <dglazkov>
in a normal flow document, dimensions aren't even necessary

[16:17:05.0000] <dglazkov>
and you're making the author think of dimensions

[16:18:00.0000] <dglazkov>
<p>This restaurant is awesome</p>

[16:18:01.0000] <dglazkov>
<meter>

[16:18:02.0000] <AryehGregor>
Agreed that you'd often want to specify orientation without dimensions.

[16:18:03.0000] <Hixie>
when an author builds a page with a meter, he/she thinks of dimensions, not orientation.

[16:18:04.0000] <AryehGregor>
In many cases, the dimensions aren't going to be important.

[16:18:05.0000] <dglazkov>
Hixie: not at all

[16:18:06.0000] <AryehGregor>
Unless you're building a carefully sized layout.

[16:18:07.0000] <dglazkov>
AryehGregor: exactly.

[16:18:08.0000] <zewt>
when I (an author :) build a page with a meter, I think of both, together

[16:18:09.0000] <AryehGregor>
Generally you just stick stuff in and let it be whatever size it is.

[16:18:10.0000] <Hixie>
can you show me some examples with vertical meters?

[16:18:11.0000] <zewt>
(not with <meter> yet, but in the manual progress meters I've implemented)

[16:18:12.0000] <Hixie>
some real pages?

[16:19:00.0000] <AryehGregor>
I don't care much what size my inputs are, for instance.

[16:19:01.0000] <Hixie>
all the pages i've seen have horizontal meters with specified sizes.

[16:19:02.0000] <Hixie>
i can't think of a single page with a vertical meter.

[16:19:03.0000] <AryehGregor>
They only have specified sizes because they kind of have to if you're hacking them up with <img>s.  :)

[16:19:04.0000] <dglazkov>
Hixie: I think you're trying to defer discussion by making me do some grungy work :) I know this tactic

[16:19:05.0000] <zewt>
(not arguing either way--neither way of doing it seems particularly better or worse to me)

[16:19:06.0000] <AryehGregor>
It's certainly true that vertical meters seem like they'd be less common.

[16:19:07.0000] <dglazkov>
Hixie: can you show me one page that needs auto-sizing controls?

[16:19:08.0000] <AryehGregor>
Horizontal meters seem like they're a much bigger use-case.

[16:19:09.0000] <Hixie>
dglazkov: no, i'm trying to base our decisions on real world data

[16:20:00.0000] <Hixie>
dglazkov: what do you mean by "auto-sizing controls"?

[16:20:01.0000] <dglazkov>
Hixie: controls that change orientation based on their size

[16:20:02.0000] <zewt>
here's one case where auto-orientation would be funky: a meter with a CSS animation to animate its width from 0 to full-size

[16:21:00.0000] <zewt>
if it's automatically oriented, it'd briefly be vertical at the start of the animation

[16:21:01.0000] <dglazkov>
Hixie: real-world data is hard to come by when meter is a brand new baby

[16:22:00.0000] <dglazkov>
Hixie: but pretty much any statistical bar chart could be made with meters

[16:22:01.0000] <dglazkov>
vertical ones

[16:22:02.0000] <AryehGregor>
dglazkov, I assume he means pages that hack up their own meters.

[16:23:00.0000] <AryehGregor>
Personally, I'm unconvinced that <meter> is worth implementing at all.  But that's me.

[16:24:00.0000] <dglazkov>
and assuming we have a statistical bar chart, I can see it being implemented as meter { float: left; orientation: vertical }

[16:24:01.0000] <dglazkov>
no need to fiddle with dimensions

[16:25:00.0000] <dglazkov>
I guess what I am saying is: there is no proof that size-sensing is a useful feature. And you're making browser peeps run in circles because you think it's cool

[16:25:01.0000] <dglazkov>
less complexity

[16:26:00.0000] <dglazkov>
is better

[16:27:00.0000] <Hixie>
dglazkov: ok, finally was able to find the right page in the Cocoa documentation. The NSSlider control automatically orients itself based on its size: http://developer.apple.com/library/mac/#documentation/Cocoa/Reference/ApplicationKit/Classes/NSSlider_Class/Reference/Reference.html#//apple_ref/occ/cl/NSSlider (search for isVertical)

[16:28:00.0000] <Hixie>
dglazkov: not really sure how one would find a page that "needs" this since by definition any page could work around the lack of this feature. The idea here is that the feature saves author time.

[16:28:01.0000] <dglazkov>
Hixie: yup. And it's a great feature for fixed-positioned platforms. But for the web, I highly doubt it

[16:28:02.0000] <Hixie>
dglazkov: why?

[16:28:03.0000] <Hixie>
dglazkov: it's even MORE useful on the web

[16:29:00.0000] <dglazkov>
Hixie: because dimensions play lesser role

[16:29:01.0000] <dglazkov>
Hixie: as I demonstrated in my bar chart example, I don't even need to know dimensions

[16:29:02.0000] <AryehGregor>
Web pages don't use fixed sizes much.

[16:29:03.0000] <AryehGregor>
Stuff is fluid.

[16:29:04.0000] <gsnedders>
Life is fluid.

[16:29:05.0000] <Hixie>
i wish that were true

[16:30:00.0000] <Hixie>
but everything has dimensions on the web

[16:30:01.0000] <AryehGregor>
Mostly not author-specified unless you force them to.

[16:30:02.0000] <dglazkov>
Hixie: as you resize the page, your constraints can change. Do you expect meters to be changing orientation too?

[16:30:03.0000] <AryehGregor>
Authors like things that auto-size, like tables and floats.

[16:30:04.0000] <dglazkov>
Hixie: that's just not true at all

[16:30:05.0000] <AryehGregor>
They mostly only specify fixed sizes when their layout requires them to use absolute positioning due to CSS limitations, or things like that.

[16:30:06.0000] <dglazkov>
Hixie: look at Wikipedia. What percentage of the layout is based on actual dimensions?

[16:30:07.0000] <AryehGregor>
dglazkov, the sidebar is fixed-width.

[16:30:08.0000] <Hixie>
dglazkov: if the meter gets so narrow that it's taller than wide, yes, it would be a usuability win if it became more readable by automatically switching direction.

[16:30:09.0000] <AryehGregor>
So is the stuff at the top.

[16:31:00.0000] <AryehGregor>
It's all absolute positioning.

[16:31:01.0000] <AryehGregor>
Infoboxes are fixed-width.

[16:31:02.0000] <AryehGregor>
Images are fixed-width.

[16:31:03.0000] <AryehGregor>
Lots of stuff is.

[16:31:04.0000] <Hixie>
dglazkov: the meter on the wikipedia page (when they ask for money) is fixed-width (as a % of page width), iirc

[16:31:05.0000] <AryehGregor>
Yeah, percentages are useful for things like that.

[16:31:06.0000] <AryehGregor>
Not if it's inline with the page text.  But lots of meters aren't.

[16:32:00.0000] <dglazkov>
alright folks, this was lots of fun :)

[16:32:01.0000] <dglazkov>
but I gotta go

[16:32:02.0000] <dglazkov>
unfortunately

[16:32:03.0000] <dglazkov>
this discussion reminded me of the old days in college

[16:32:04.0000] <Hixie>
AryehGregor: if it's inline with the page, you're not going to change its orientation either

[16:33:00.0000] <AryehGregor>
Meters like that are unlikely, yeah, unless you're constructing a bar graph or something.

[16:33:01.0000] <AryehGregor>
But then it seems really unlikely you'd want any kind of default meter appearance.

[16:33:02.0000] <Hixie>
making a bar graph with <meter>s is wacky

[16:33:03.0000] <AryehGregor>
But arguing from use-cases here is kind of weak because, as I said, the use-cases for a <meter> element are really very limited.

[16:33:04.0000] <Hixie>
yeah the main use case for <meter> is "try to reduce the number of people who abuse <progress> for meters"

[16:34:00.0000] <Hixie>
but the same discussion applies to <progress>

[16:34:01.0000] <AryehGregor>
Which also seems like it has very limited use-cases, as an element.

[16:34:02.0000] <Hixie>
well it has one use case

[16:34:03.0000] <Hixie>
showing a progress bar :-)

[16:35:00.0000] <AryehGregor>
Yes, but how many sites will actually want to use a system default progress bar?

[16:35:01.0000] <Hixie>
enough :-)

[16:35:02.0000] <zewt>
depends on if UAs style it reasonably or hideously, heh

[16:35:03.0000] <Hixie>
i've already written pages that use it myself, in fact

[16:35:04.0000] <Hixie>
e.g. http://hixie.ch/tests/adhoc/html/parsing/encoding/all.html

[16:36:00.0000] <Hixie>
in fact i may have used <progress> more than <aside>

[16:36:01.0000] <Hixie>
:-)

[16:37:00.0000] <gsnedders>
neither progress/meter can represent something which has a segment that is "done", and another segment that is "in progress" (as well as "not started"), right?

[16:37:01.0000] <Hixie>
example?

[16:39:00.0000] <gsnedders>
Hixie: An automated testing system, and tests been run, being run, yet to run.

[16:41:00.0000] <Hixie>
isn't that just many <progress>es?

[16:49:00.0000] <gsnedders>
Hixie: So what? One of tests run (out of total tests) and one of tests being run (out of total tests)?

[16:50:00.0000] <Hixie>
gsnedders: i don't fully understand what you're describing, so i'm not sure.

[16:50:01.0000] <Hixie>
gsnedders: if you have a bunch of tests and they can each have progress, then i'd guess each one would have a <progress>

[16:50:02.0000] <Hixie>
gsnedders: if you have a bunch of tests and you want to indicate how many are "on", then a <meter> is appropriate

[16:51:00.0000] <Hixie>
gsnedders: if you have a bunch of tests running and you want to indicate their aggregate progress, <progress> is appropriate

[16:51:01.0000] <Hixie>
hth

[17:15:00.0000] <TabAtkins>
What. The. Hell.  Can someone who knows PHP look at this and tell me why I'm clearly hallucinating, because there's no way this behavior could actually be happening? http://www.xanthir.com/test.php

[17:19:00.0000] <gsnedders>
TabAtkins: $arr['4300'] != $arr[4300]

[17:19:01.0000] <gsnedders>
TabAtkins: Also, are you sure the value genuinely isn't NULL? What's error_reporting set at?

[17:19:02.0000] <TabAtkins>
gsnedders: Well, no, apparently they *are* the same.  But *neither* will retrieve the element with the key '4300'.

[17:20:00.0000] <hober>
TabAtkins: weird

[17:21:00.0000] <TabAtkins>
The array is constructed by just reading in a big JSON blob, and the '4300' entry definitely exists here in the json.

[17:25:00.0000] <TabAtkins>
And now isset() is reporting that the index isn't set, despite it being right there in the array_keys() result.

[17:27:00.0000] <gsnedders>
TabAtkins: isset returns false if the value is null

[17:27:01.0000] <gsnedders>
TabAtkins: see array_key_exists

[17:27:02.0000] <TabAtkins>
omg

[17:29:00.0000] <TabAtkins>
Yup, array_key_exists('4300',$arr) returns false, despite '4300' showing up right there in array_keys($arr).

[17:29:01.0000] <TabAtkins>
W.T.F.

[17:31:00.0000] <TabAtkins>
And a foreach over the array shows the missing key.

[17:32:00.0000] <Hixie>
is there anything in the platform that returns a Blob for some generated data yet?

[17:32:01.0000] <Hixie>
i'm trying to work out what to call the method on StreamRecorder that returns (via callback) a Blob containing the recorded data

[17:32:02.0000] <Hixie>
it used to be stop() but that doesn't make sense since it doesn't actually stop anything

[17:32:03.0000] <Hixie>
getBlob(callback)?

[17:33:00.0000] <hober>
getRecordedData(cb)

[17:34:00.0000] <Hixie>
var r = stream.record(); ... r.getRecordedData(function(blob) { use(blob) }); ?

[17:34:01.0000] <Hixie>
i guess that works

[17:34:02.0000] <Hixie>
vs  var r = stream.record(); ... r.getBlob(function(blob) { use(blob) });

[17:35:00.0000] <TabAtkins>
Jeez, if I do a foreach over $arr, not only does the key exist (though the array claims it doesn't) but the value is an object (not a NULL).  omg.

[17:38:00.0000] <boogyman>
TabAtkins: fail lol :(

[17:39:00.0000] <zewt>
filesystem api is just getFile for File, fwiw, getBlob would be in line with that

[17:40:00.0000] <boogyman>
TabAtkins: 4300 isn't a "key" it's the value of $arr[10]

[17:40:01.0000] <TabAtkins>
boogyman: Look closer.  That first array is the result of array_keys

[17:41:00.0000] <TabAtkins>
Which produces an array whose values are the keys of the passed array.

[17:41:01.0000] <TabAtkins>
I'm not outputting $arr directly, because it's huge.

[17:42:00.0000] <Hixie>
zewt: yeah but there we're getting a file (which happens to be a File), whereas here we're getting recorded data (which happens to be a Blob)

[17:42:01.0000] <Hixie>
zewt: so it's not a clear precedent

[17:42:02.0000] <Philip`>
TabAtkins: Does it fail for all keys that are /^\d+$/ ?

[17:43:00.0000] <TabAtkins>
Philip`: Yes.

[17:43:01.0000] <TabAtkins>
And I think I may know why...

[17:44:00.0000] <Philip`>
Bug in the JSON parser that tries to use $arr as both a string-indexed and numeric-indexed array, when PHP only supports them being one or the other?

[17:44:01.0000] <AryehGregor>
PHP supports the same array being both.

[17:45:00.0000] <AryehGregor>
I think what they actually do is just cast numeric indexes to strings.

[17:45:01.0000] <AryehGregor>
$ php -r '$arr = array(); $arr[1] = "foo"; $arr["1"] = "bar"; var_dump($arr[1]);'

[17:45:02.0000] <AryehGregor>
string(3) "bar"

[17:45:03.0000] <TabAtkins>
Okay, I was hoping that maybe it was a property rather than an array, but no, property_exists throws a warning at me.

[17:45:04.0000] <zewt>
is the only place that actually creates Blobs right now Blob.slice()? (via File)

[17:45:05.0000] <TabAtkins>
AryehGregor: I know!  It works fine for arbitrary arrays!

[17:46:00.0000] <AryehGregor>
TabAtkins, what code is the problem?

[17:47:00.0000] <TabAtkins>
My json-backed database.  I load a json file into an array (what I'm calling $arr on the test.php page), and then operate on it.

[17:47:01.0000] <Hixie>
zewt: XHR2 probably too

[17:47:02.0000] <Hixie>
ok i'm outta here. bbl.

[17:47:03.0000] <AryehGregor>
What functions do you use to load the array?

[17:47:04.0000] <TabAtkins>
json_decode

[17:48:00.0000] <AryehGregor>
Just json_decode($str), with no further parameters specified?

[17:48:01.0000] <Philip`>
TabAtkins: http://bugs.php.net/bug.php?id=53130 ?

[17:48:02.0000] <TabAtkins>
AryehGregor: Yup.

[17:48:03.0000] <TabAtkins>
Philip`: ...yup, that's it.

[17:49:00.0000] <AryehGregor>
Yay PHP.

[17:49:01.0000] <AryehGregor>
Try doing json_decode($str, true).

[17:49:02.0000] <AryehGregor>
Apparently that gives you arrays.

[17:49:03.0000] <AryehGregor>
Which makes way more sense, in PHP.

[17:50:00.0000] <TabAtkins>
The problem is that I don't want objects on the lower level to be coerced to arrays.

[17:50:01.0000] <TabAtkins>
(I find object access more aesthetically pleasing than array access with string keys.)

[17:50:02.0000] <AryehGregor>
http://us.php.net/language.types.array#language.types.array.casting

[17:50:03.0000] <AryehGregor>
"If an object is converted to an array, the result is an array whose elements are the object's properties. The keys are the member variable names, with a few notable exceptions: integer properties are unaccessible; private variables have the class name prepended to the variable name; protected variables have a '*' prepended to the variable name. These prepended values have null bytes on either side. This can result in some unexpected behaviou

[17:50:04.0000] <AryehGregor>
r:"

[17:50:05.0000] <AryehGregor>
Wow, PHP is freaking broken.

[17:50:06.0000] <zewt>
news flash

[17:50:07.0000] <TabAtkins>
Oh my god.

[17:50:08.0000] <AryehGregor>
"The above will appear to have two keys named 'AA', although one of them is actually named '\0A\0A'."

[17:51:00.0000] <TabAtkins>
This is the dumbest crap I have ever seen.

[17:51:01.0000] <zewt>
also world round, universe large

[17:51:02.0000] <AryehGregor>
TabAtkins, this is PHP.

[17:52:00.0000] <TabAtkins>
Okay, the whole reason I was casting the decoded object into an array anyway was so I could use array_keys on it.

[17:52:01.0000] <TabAtkins>
But I didn't know there was a get_object_vars, which should probably work too.

[17:53:00.0000] <zewt>
i wish Python was more amenable to templating, which would make it easier for the sort of quick web hacks that PHP is used for

[17:53:01.0000] <zewt>
that's one thing its tab syntax is very bad at

[17:53:02.0000] <TabAtkins>
But seriously this is the brokenest thing I have ever seen PHP do.  ARgh.

[17:54:00.0000] <TabAtkins>
Going home now, I'll fix this tonight.

[17:54:01.0000] <Philip`>
s/fix/rewrite in a real language/ ?

[17:54:02.0000] <zewt>
heh

[17:55:00.0000] <TabAtkins>
Unfortunately, no.  zewt's right that PHP's templating ability still makes it the easiest thing to develop small sites in.

[17:55:01.0000] <zewt>
i can't take any language seriously now that uses $basic $variable $prefixes

[17:55:02.0000] <zewt>
feels like someone's sneezed all over my code

[17:56:00.0000] <Philip`>
TabAtkins: CGI + Perl works for that :-)

[17:57:00.0000] <zewt>
perl is not really an improvement :)

[17:57:01.0000] <TabAtkins>
yeah...

[17:57:02.0000] <zewt>
"waiter, there seems to be glass in my soup" "would you like staples instead?"

[17:59:00.0000] <Philip`>
PHP is weird and illogical; Perl is weirdly logical

[17:59:01.0000] <Philip`>
Both make you say "why on Earth does it work like this?", but Perl usually has an answer

[17:59:02.0000] <zewt>
i don't use either, except for very limited, mostly throwaway hacks

[18:00:00.0000] <zewt>
php for quick server-side tests and very small mini-pages; perl for sed/awk-ish one-liners

[18:01:00.0000] <AryehGregor>
TabAtkins, if this is the most broken thing you've seen in PHP, you haven't programmed PHP enough.

[18:01:01.0000] <zewt>
my take on perl is it's the only language that I've used, on and off, for over a decade, and still get headaches from the basic syntax

[18:01:02.0000] <AryehGregor>
How about supporting getters on objects, which return null without logging any warning if they're called recursively?

[18:02:00.0000] <zewt>
i consider myself competent enough to place the blame on perl and not myself, heh

[18:04:00.0000] <boogyman>
zewt: lol, as long as you believe that :P

[18:05:00.0000] <zewt>
versus understanding more or less all of python's syntax in a couple days :P

[18:07:00.0000] <roc>
zewt: you're going to love CSS variables!

[18:07:01.0000] <zewt>
do i have to :(

[18:08:00.0000] <boogyman>
roc: might need to wait a couple yrs for that

[23:55:00.0000] <annevk>
morning

[23:55:01.0000] <annevk>
AryehGregor, we nuked CDATASection in favor of just Text

[00:14:00.0000] <annevk>
http://www.w3.org/TR/progress-events/ Last Call

[00:14:01.0000] <annevk>
better comment by June 1 or we'll ignore you

[00:14:02.0000] <annevk>
(but not really, but still it would be nice if you did)

[00:16:00.0000] <zcorpan>
http://www.aminutewithbrendan.com/pages/20110308 - pretty sure we can't add an operator called 'div'

[00:28:00.0000] <jgraham>
/me advises caution around arguments that boil down to "PHP is the easiest language because it lets me mix output and code freely"

[00:29:00.0000] <jgraham>
Really Python + any template library will save you a lot of badness if the site ever grows

[00:29:01.0000] <jgraham>
In somewhat related news

[00:30:00.0000] <jgraham>
Hixie: The use case gsnedders was failing to explain was the "we have x% of tests done and a further y% currently assigned to test machines"

[00:31:00.0000] <jgraham>
"and we want a progress bar that looks like [xxxxxyy   ]

[00:31:01.0000] <jgraham>
so that one can see at a glance how much is done and how much will be done soon"

[00:33:00.0000] <annevk>
what to do in the day before last

[00:33:01.0000] <annevk>
I think I'm pretty much done with everything I wanted and it seems kind of late to start something new...

[00:42:00.0000] <matijsb>
go spinning :)

[00:52:00.0000] <annevk>
hehe

[00:52:01.0000] <annevk>
if I could go in an hour from now...

[01:08:00.0000] <annevk>
http://dev.twitter.com/doc/get/statuses/user_timeline has an undocumented parameter (and maybe more) called exclude_replies which can be set to true

[01:13:00.0000] <annevk>
no idea how to give feedback on that website so I'll just leave it here in case someone here works for twitter or knows someone who does

[01:14:00.0000] <annevk>
(oh, and please don't kill the feature, it's useful :) )

[01:14:01.0000] <zcorpan>
Hixie: role=presentation on <table> implies role=presentation on all the rows and cells as well

[01:57:00.0000] <annevk>
MikeSmith, all okay?

[01:59:00.0000] <MikeSmith>
yeah, not dead

[01:59:01.0000] <MikeSmith>
yet

[02:01:00.0000] <annevk>
good good

[02:33:00.0000] <annevk>
myakura is also ok it seems :)

[02:40:00.0000] <annevk>
I guess I should do expenses

[02:40:01.0000] <annevk>
:/

[02:46:00.0000] <Hixie>
zcorpan: ok good. i assumed it'd be something like that, or the decision would be even more ridiculous.

[02:47:00.0000] <Hixie>
anyone in the bay area, if you haven't heard yet, tsunami is expected to hit us at 8:08am so stay half-a-mile or more away from the coast.

[02:47:01.0000] <Hixie>
anyone else in the pacific region, check local broadcasts.

[02:47:02.0000] <Hixie>
MikeSmith: you ok?

[02:48:00.0000] <MikeSmith>
yeah

[02:48:01.0000] <MikeSmith>
things remarkably undamaged here outside

[02:48:02.0000] <MikeSmith>
despite a pretty good amount of shaking

[02:48:03.0000] <annevk>
I saw this on twitter

[02:49:00.0000] <annevk>
"""The headline you won't be reading: "Millions saved in Japan by good engineering and government building codes". Buts it's the truth."""

[02:50:00.0000] <Hixie>
MikeSmith: good to hear. the video we're seeing on the news is pretty scary.,

[02:50:01.0000] <jgraham>
/me wonders what all the free-market-liberterian-kooks think about building codes

[02:50:02.0000] <MikeSmith>
yeah, up north in Sendai things were worse

[02:51:00.0000] <MikeSmith>
with the tsunami

[02:51:01.0000] <Peter->
I saw the video of the tsunami progressing inland on the news, that's horrible

[02:52:00.0000] <Hixie>
i saw one video with a huge ball of fire being pushed along by the water, that was one of hte most disturbing images

[02:54:00.0000] <MikeSmith>
yeah, I think a refinery in Chiba caught fire

[02:57:00.0000] <wilhelm>
Looks like everyone at Opera's Tokyo office and my other friends in town are all okay.

[02:57:01.0000] <Hixie>
good to know

[03:05:00.0000] <Rik`>
same for Mozilla Japan

[03:06:00.0000] <Rik`>
the office has been shaken http://www.flickr.com/photos/dynamozilla/5516432243/in/set-72157626116876855/

[03:08:00.0000] <wilhelm>
http://a4.sphotos.ak.fbcdn.net/hphotos-ak-snc6/190668_10150438508240355_802015354_17665227_4360168_n.jpg (c:

[03:15:00.0000] <jgraham>
Hixie: When one "Remove any tasks queued by the history traversal task source." I assume that is irrespective of the document associated with the task?

[03:16:00.0000] <jgraham>
e.g. if I pushState in an iframe it will clear a navigation queued in the parent?

[03:16:01.0000] <jgraham>
Why is clearing the navigation desirable?

[03:35:00.0000] <myakura>
it feels like i'm getting seasick..

[03:59:00.0000] <hsivonen>
good to see that myakura and MikeSmith are apparently at relatively safe locations

[04:43:00.0000] <jgraham>
heycam: So it it not clear to me exactly what it means in WebIDL to "implement the interface"

[04:44:00.0000] <jgraham>
But the real question I have is that if I have, for example, an exception that implements DOMException, what should

[04:44:01.0000] <jgraham>
exception instanceof other_window.DOMException

[04:44:02.0000] <jgraham>
return?

[04:46:00.0000] <jgraham>
/me assumes false since the exception doesn't "implement the interface", but is an instance of a constructor that does, or something

[05:03:00.0000] <asmodai>
mmm, Windows 7's math input panel generates a lot of unnecessary mrow's in their mathml output

[07:33:00.0000] <hsivonen>
Remember to object, folks: http://www.w3.org/2002/09/wbs/40318/issue-56-objection-poll/

[08:11:00.0000] <TabAtkins>
hsivonen: I don't understand the implications of any of the options in that poll.

[08:13:00.0000] <hsivonen>
TabAtkins: well, at least IRIBIS has failed to deliver

[08:13:01.0000] <hsivonen>
TabAtkins: as mentioned in my Objection, Larry's Proposal is already over a year old!

[08:59:00.0000] <jgraham>
TabAtkins: Isn't the security concern with drawWindow not just cross-origin stuff?

[08:59:01.0000] <TabAtkins>
I... wouldn't think so?

[08:59:02.0000] <jgraham>
The comment emoller quoted suggests it is

[09:00:00.0000] <jgraham>
"endering the user's theme and then extracting the results

[09:00:01.0000] <jgraham>
+r

[09:00:02.0000] <jgraham>
rendering native anonymous content (e.g., file input paths"

[09:00:03.0000] <TabAtkins>
Darn, I skimmed past that part.

[09:01:00.0000] <TabAtkins>
I doubt that the user's theme is security-conscious, though I wouldn't be surprised if I was wrong.

[09:01:01.0000] <TabAtkins>
File inputs are a bit more important.

[09:01:02.0000] <hober>
hsivonen: your objection should really apply to both the first and second proposals

[09:01:03.0000] <TabAtkins>
We can render those specially as blank inputs, I guess?

[09:01:04.0000] <TabAtkins>
Or just punch holes in the canvas there.

[09:02:00.0000] <hober>
hsivonen: since the second proposal relies on the IRIbis folks providing a spec that adheres to the interface described in the proposal

[09:02:01.0000] <hsivonen>
hober: might be worthwhile to point that out on the poll

[09:03:00.0000] <smaug____>
user theme is not security, but possible privacy issue

[09:05:00.0000] <jgraham>
Is the security concern about reading colours from non-standard themes to make fake popups and so on look more convincing?

[09:05:01.0000] <jgraham>
(that doesn't seem like a very strong concern, but maybe I am wrong)

[09:06:00.0000] <smaug____>
ah, indeed, that would make it a some kind of security issue

[09:06:01.0000] <hober>
hsivonen: here's the current IRIbis text about "href" values: http://tools.ietf.org/html/draft-ietf-iri-3987bis-03#section-7.2

[09:07:00.0000] <hober>
hsivonen: would you agree that it doesn't meet the needs of hixie's CP?

[09:07:01.0000] <Philip`>
drawWindow would have to hide visited link colours too

[09:07:02.0000] <hober>
hsivonen: I'm writing up my poll reply now actually :)

[09:08:00.0000] <hsivonen>
hober: sorry. I have to step away from the computer and can't review right now.

[09:08:01.0000] <hober>
hsivonen: fair enough

[11:12:00.0000] <AryehGregor>
annevk, are browsers planning to drop of CDATASection?  Are there bugs filed and such?  I don't see a Gecko bug.

[11:13:00.0000] <AryehGregor>
If there are no plans to act on it, I don't think the spec should claim this change is true.

[11:13:01.0000] <AryehGregor>
Where was this discussed, and who supported it?

[11:14:00.0000] <Ms2ger>
/me notes that cdata sections in HTML turn into Text nodes

[11:15:00.0000] <annevk>
the spec has a few such things without bugs

[11:15:01.0000] <annevk>
it's both ideas and reality

[11:15:02.0000] <annevk>
somewhat of a mixed bag

[11:15:03.0000] <annevk>
anyway, it's my time off now :)

[11:18:00.0000] <Ms2ger>
I'd do it, but our XML parser hurts my eyes

[11:21:00.0000] <AryehGregor>
Surely it's better than the HTML parser.

[11:22:00.0000] <Ms2ger>
Nope

[11:28:00.0000] <smaug____>
Ms2ger: ?

[11:29:00.0000] <smaug____>
Gecko's XML parser is expat

[11:29:01.0000] <smaug____>
is that really bad?

[11:29:02.0000] <zewt>
i don't know if it's good or bad, but it's certainly very common...

[11:30:00.0000] <Ms2ger>
You can judge it for yourself, but I think I'm going to stay away :)

[11:32:00.0000] <zewt>
i try to stay away from xml in general :)

[13:00:00.0000] <AryehGregor>
Could anyone explain to me why <view-source:http://test.wikipedia.org/wiki/Special:RecentChanges> is not well-formed?  My XML library claims there's a mismatched tag, but I just can't see it at the claimed position.

[13:02:00.0000] <AryehGregor>
Oh, wait.

[13:02:01.0000] <AryehGregor>
<br>.

[13:02:02.0000] <AryehGregor>
Huh.

[13:02:03.0000] <AryehGregor>
Okay, never mind.

[13:02:04.0000] <Philip`>
<br><span style="color: #999999;"><b>TEST WIKI</b></span></div>

[13:03:00.0000] <Philip`>
Oh, too late

[13:03:01.0000] <AryehGregor>
Yeah, I just mentally skipped over the <br>.

[13:03:02.0000] <AryehGregor>
It would help if my library told me where the bad opening tag was.

[13:03:03.0000] <AryehGregor>
(Python's xml.sax in this case)

[13:03:04.0000] <Philip`>
xmllint says "parser error : Opening and ending tag mismatch: br line 62 and div"

[13:05:00.0000] <AryehGregor>
That's more helpful.

[13:09:00.0000] <AryehGregor>
Okay, well, the well-formedness error isn't $wgHtml5's fault, so I don't have to fix it.

[13:09:01.0000] <AryehGregor>
Now we're ready for try three of Wikipedia on HTML5!

[13:09:02.0000] <AryehGregor>
Whenever a sysadmin gets around to it, anyway.

[13:20:00.0000] <TabAtkins>
Man, <xmp> really does make my examples way easier to read.  I'll have to take it out eventually due to pubrules, but it's so nice to use it in my editor's drafts.

[13:26:00.0000] <jamesr>
AryehGregor: no more xhtml?

[13:27:00.0000] <AryehGregor>
jamesr, <!DOCTYPE html> is the plan.  But we'll still output well-formed XML, because of all the screen-scraping bots that depend on it.

[13:27:01.0000] <AryehGregor>
Including browser-based stuff using XHR responseXML or whatever it's called, who can't easily switch to a non-XML parser.

[13:28:00.0000] <jamesr>
AryehGregor: heh - that would actually make wikipedia load a lot faster in webkit because we currently don't prefetch for anything that we parse with the XML parser but we do prefetch stuff that uses the HTML parser

[13:28:01.0000] <AryehGregor>
jamesr, we've always been serving as text/html.

[13:28:02.0000] <AryehGregor>
Serving with an XML MIME type would be insane.

[13:28:03.0000] <AryehGregor>
For all sorts of reasons.

[13:28:04.0000] <jamesr>
yeah but we for some reason use the XML parser, iirc

[13:28:05.0000] <AryehGregor>
Seriously?

[13:28:06.0000] <AryehGregor>
That sounds incredibly unlikely.

[13:29:00.0000] <AryehGregor>
It violates the HTML5 spec, and it also would break some pages.

[13:29:01.0000] <AryehGregor>
Because we don't output well-formed XML 100% of the time, there are known bugs.

[13:29:02.0000] <AryehGregor>
Like: http://test.wikipedia.org/wiki/Special:RecentChanges

[13:29:03.0000] <jamesr>
it's an XML doctype, hmmm

[13:29:04.0000] <AryehGregor>
Yes, but no browser actually parses as XML if there's an XML doctype present.

[13:29:05.0000] <AryehGregor>
Loads of pages have XML doctypes but are horribly malformed.

[13:30:00.0000] <jamesr>
time for gdb

[13:30:01.0000] <AryehGregor>
Just observe that you can load http://test.wikipedia.org/wiki/Special:RecentChanges in WebKit and don't get a YSOD.

[13:30:02.0000] <AryehGregor>
But it's malformed.

[13:30:03.0000] <AryehGregor>
(<br> instead of <br />)

[14:06:00.0000] <AryehGregor>
"Compared to CSS, tables take more bandwidth, they aren't as  cacheable, they require you to cut images, they result in pages that aren't as maintainable, and aren't rendered incrementally in many  browsers."

[14:06:01.0000] <AryehGregor>
What browsers don't render tables incrementally?

[14:06:02.0000] <Philip`>
Netscape 4?

[14:06:03.0000] <AryehGregor>
Or does it just mean that they do a two-pass layout and jump as the page loads?

[14:07:00.0000] <AryehGregor>
Okay, does Netscape 4 count as "many"?

[14:07:01.0000] <Philip`>
/me was just guessing about Netscape

[14:10:00.0000] <AryehGregor>
Personally, I think the chairs made the right decision in ISSUE-130.

[14:10:01.0000] <AryehGregor>
Hurrah for <table role=presentation>.

[14:17:00.0000] <AryehGregor>
/me makes a mental note to add role= support to MediaWiki

[14:51:00.0000] <Hixie>
hey does anyone know what "valid" means here? the definition makes no sense to me:

[14:51:01.0000] <Hixie>
http://dev.w3.org/2006/webapi/FileAPI/#valid

[15:14:00.0000] <hober>
/me reads

[15:14:01.0000] <hober>
yeah, that doesn't make sense

[15:15:00.0000] <hober>
ObPollReminder: http://www.w3.org/2002/09/wbs/40318/issue-127-objection-poll/ closes today

[15:35:00.0000] <Hixie>
TabAtkins: is there a css property for making an image be a reflection of itself? transform(mirror) or something?

[15:35:01.0000] <Hixie>
doesn't have to be implemented yet

[15:37:00.0000] <Hixie>
hm, you can give a matrix

[15:37:01.0000] <Hixie>
and iirc there's a matrix that'll reflect

[15:37:02.0000] <Hixie>
-1 0, 0 1?

[15:38:00.0000] <Hixie>
or scaleX(-1)

[15:39:00.0000] <Hixie>
aha!

[15:39:01.0000] <Hixie>
yes!

[15:39:02.0000] <zewt>
<TabAtkins> np

[15:54:00.0000] <Hixie>
heycam: so i'm doing the video conferencing stuff and i need to expose the current list of streams

[15:54:01.0000] <Hixie>
heycam: that's an array/list/set/whatever of Stream objects

[15:54:02.0000] <Hixie>
heycam: what's the best way of exposing that to the page? I don't mind if it's a live list

[15:54:03.0000] <Hixie>
or not


2011-03-12
[17:49:00.0000] <Yuhong>
So almost everybody knows how the IE6 monopoly was bad by now.

[17:49:01.0000] <Yuhong>
Now, how many know how the Netscape monopoly was bad?

[17:49:02.0000] <Yuhong>
Now, how many know remember the Netscape monopoly was bad?

[17:50:00.0000] <Yuhong>
Now, how many remember how the Netscape monopoly was bad?

[18:02:00.0000] <Yuhong>
So almost everybody knows how the IE6 monopoly was bad by now.

[18:02:01.0000] <Yuhong>
Now, how many remember how the Netscape monopoly was bad?

[18:06:00.0000] <zewt>
...

[04:32:00.0000] <alrra>
can someone explain to me how the collaboration between WHATWG and W3C works , or who to follow when it comes to the html5 spec (or what browser follow what spec) ?

[04:38:00.0000] <Ms2ger>
alrra, see http://www.whatwg.org/specs/web-apps/current-work/multipage/introduction.html#is-this-html5?

[05:09:00.0000] <alrra>
Ms2ger: tnx :)

[07:56:00.0000] <jud>
oogelly ol ooo gnen gtff ar ar ar entubu

[07:57:00.0000] <erlehmann>
u jelly?

[07:58:00.0000] <jud>
eerrgnff fuzzl frrezzl eeuen

[07:59:00.0000] <jud>
chic bok

[08:24:00.0000] <annevk>
todo list so far: write WHATWG Weekly

[08:25:00.0000] <Ms2ger>
/me adds mutation events to that list

[08:26:00.0000] <annevk>
haha

[08:26:01.0000] <annevk>
I discussed them with Olli and he said he still plans on removing them

[08:26:02.0000] <annevk>
so I'm waiting for post Firefox 4 news

[08:27:00.0000] <annevk>
so I guess that will be a summer item :)

[08:27:01.0000] <annevk>
unless someone starts doing them before then

[08:27:02.0000] <Ms2ger>
Were you thinking of anybody in particular? :)

[08:28:00.0000] <annevk>
heh, nah I won't do that to you

[08:32:00.0000] <annevk>
guess I'll quickly add that todo.txt file Hixie asked for

[08:35:00.0000] <annevk>
http://tc.labs.opera.com/apis/EventSource/todo.txt

[08:37:00.0000] <Ms2ger>
annevk, your test runner is trying to run that

[08:37:01.0000] <annevk>
gah

[08:42:00.0000] <annevk>
hmm testrunner seems broken anyway

[08:44:00.0000] <Ms2ger>
No, it claims all tests fail in Gecko

[08:44:01.0000] <Ms2ger>
Surely that can't be true :)

[08:45:00.0000] <annevk>
so it does run fine in Gecko...

[08:45:01.0000] <annevk>
I guess it has something to do with one of the tests

[08:45:02.0000] <annevk>
maybe the document.domain test :/

[09:27:00.0000] <zewt>
annevk: fwiw, if people really won't buy into making initEvent optional, it almost seems better to retain the no-empty-event-type restriction and to use webkit's check, avoiding adding a pointless initEvent-was-called flag

[09:27:01.0000] <zewt>
(mentioning it here instead of the thread since I think it'd just confuse things there at the moment)

[09:29:00.0000] <annevk>
agreed

[09:29:01.0000] <annevk>
but it seems e.g. Jacob argues for both?

[09:29:02.0000] <annevk>
or does not argue for anything in particular

[09:29:03.0000] <annevk>
from him I mostly get the impression he doesn't like change

[09:29:04.0000] <zewt>
not sure with jacob since he didn't seem to know what the phrase "null string" meant

[09:29:05.0000] <annevk>
but not what the event model should be instead where it is currently vague

[09:30:00.0000] <zewt>
(he seemed to think I meant "null")

[09:30:01.0000] <annevk>
well he tested and null is stringified to "null" in some implementations

[09:30:02.0000] <zewt>
"Actually, null string has nothing to do with it. Anne has spec'd the default to be empty string, not null."

[09:30:03.0000] <zewt>
^ he was confused here

[09:31:00.0000] <zewt>
i think

[09:31:01.0000] <annevk>
null string is a vague word though

[09:31:02.0000] <annevk>
we use empty string for that

[09:31:03.0000] <annevk>
s/word/term/

[09:31:04.0000] <zewt>
null string is pretty universally synonymous

[09:32:00.0000] <zewt>
his arguments based on "interoperable" is sort of hard to buy since there's so little consistency, heh

[09:32:01.0000] <annevk>
http://www.google.com/search?q=null+string

[09:32:02.0000] <annevk>
does not seem universal

[09:32:03.0000] <annevk>
though Wikipedia argues that way

[09:32:04.0000] <zewt>
i've used the term for 15 years and never seen anyone get confused by it before :P

[09:32:05.0000] <annevk>
first hit for me is "Checking a string for null or empty string - Jeff Key"

[09:32:06.0000] <annevk>
anyways

[09:33:00.0000] <annevk>
yeah agreed

[09:33:01.0000] <annevk>
and interoperable and magic fairies works for me

[09:33:02.0000] <annevk>
but then say what it should be since DOM Level 3 Events is ambiguous as hell

[09:33:03.0000] <Ms2ger>
I guess that's what MS likes about it :Ã 

[09:33:04.0000] <zewt>
i personally don't care too much about whether type can be "" or not, if it's easier to get agreement on webkit's behavior and not allowing it then that's equally fine with me

[09:33:05.0000] <Ms2ger>
:)

[09:34:00.0000] <Philip`>
const char* str = NULL; // null string

[09:34:01.0000] <zewt>
firefox just seems sort of broken ... accessing e.type before calling initEvent throws, and dispatchEvent(createEvent()) does nothing whatsoever afaict

[09:35:00.0000] <zewt>
no, that's null, not the null string

[09:35:01.0000] <Philip`>
'str' is a string, and it's null

[09:35:02.0000] <Philip`>
so it's a null string :-)

[09:35:03.0000] <annevk>
omg make it stop

[09:36:00.0000] <zewt>
i disagree but let's move on :P

[09:37:00.0000] <annevk>
anyway, unless this is somehow magically resolved by Monday Ms2ger will have to make edits or I'll pick this up again end of June

[09:37:01.0000] <zewt>
personally I think having as simple a spec as possible is also more important here than with most cases

[09:37:02.0000] <annevk>
I hear standards move at a glacial pace, so there's no rush

[09:37:03.0000] <smaug____>
removing Mutation events is something for next year, at earliest

[09:38:00.0000] <zewt>
since this is such a major, core algorithm and getting rid of totally unneeded steps means it's easier for users to fully understand it

[09:38:01.0000] <Ms2ger>
zewt, you must be new here ;)

[09:38:02.0000] <zewt>
not new to algorithms :P

[09:38:03.0000] <annevk>
smaug____, seems fine to me

[12:35:00.0000] <nimbupani>
TabAtkins: you are both live-minuting in different channels?

[12:37:00.0000] <Hixie>
oh it's sxsw today right?

[12:37:01.0000] <Hixie>
anything interesting going on?

[12:38:00.0000] <nimbupani>
TabAtkins: is apparently live-minuting some session but I am not sure where :P

[12:39:00.0000] <nimbupani>
o found it its #scificities

[13:12:00.0000] <Iarfen>
Hi!!

[14:43:00.0000] <hober>
Hixie: I think the browser wars panel was today

[14:43:01.0000] <hober>
Hixie: I know the CSS WG panel was today

[15:16:00.0000] <Hixie>
hober: anything interesting happen?

[15:32:00.0000] <hober>
Hixie: dunno, not there


2011-03-13
[06:15:00.0000] <eyebrows>
I guess the guy who came up with 0.5 pixel measurements for canvas strokes left his logic at the door too

[06:15:01.0000] <eyebrows>
I mean, really

[10:36:00.0000] <AryehGregor>
Heh: http://lists.w3.org/Archives/Public/www-archive/2011Mar/0015.html

[10:37:00.0000] <AryehGregor>
So, Hixie, what are these "many browsers" that don't render tables incrementally?

[10:55:00.0000] <zewt>
http://kathack.com/ probably old but o_O

[12:47:00.0000] <Hixie>
AryehGregor: hm?

[12:48:00.0000] <AryehGregor>
Hixie, browsers render tables incrementally, don't they?  Or did you just mean they have to reflow them?

[12:48:01.0000] <Hixie>
it varies

[12:48:02.0000] <AryehGregor>
How so?

[12:49:00.0000] <Hixie>
hold on, let me get you a test

[12:53:00.0000] <Hixie>
hrm, how do i turn off deflate compression

[12:58:00.0000] <zewt>
some htaccess magic?

[13:01:00.0000] <zewt>
in apache .htaccess, SetEnv no-gzip

[13:04:00.0000] <Hixie>
oooh

[13:04:01.0000] <Hixie>
cunning

[13:07:00.0000] <Hixie>
even with that the server is still returning the file back in one block, bummer

[13:08:00.0000] <erlehmann>
Hixie, what are you trying to accomplish?

[13:08:01.0000] <zewt>
see if <? sleep(2) ?> in php causes it to send incrementally (or if it just blocks)

[13:08:02.0000] <Hixie>
have the server return cells with a one second pause between them

[13:08:03.0000] <Hixie>
using perl

[13:08:04.0000] <zewt>
or just stuff a bunch of whitespace to convince it to send some

[13:09:00.0000] <Hixie>
i'm stuffing 1024 'x's between each cell

[13:09:01.0000] <Hixie>
4096 even

[13:09:02.0000] <Hixie>
that really should be enough

[13:09:03.0000] <Hixie>
even 40960 isn't enough

[13:09:04.0000] <AryehGregor>
Are you sure you're flushing the output buffer when you pause?

[13:09:05.0000] <zewt>
is apache just waiting for the whole thing so it can send content-length?

[13:10:00.0000] <zewt>
not sure how to force chunked

[13:11:00.0000] <zewt>
curl: (56) Received problem 2 in the chunky parser

[13:11:01.0000] <zewt>
chunky parser? sounds delicious

[13:11:02.0000] <Hixie>
AryehGregor: i'm outputting 40K of content before sleeping, if that doesn't force it i don't know what will

[13:11:03.0000] <AryehGregor>
Maybe it will buffer indefinitely unless you explicitly flush the buffer.

[13:12:00.0000] <Hixie>
how do i flush the buffer?

[13:12:01.0000] <AryehGregor>
I don't know.  In PHP with ob, it's ob_flush().

[13:12:02.0000] <zewt>
ah php switches to chunked automatically if you call flush()

[13:12:03.0000] <AryehGregor>
Without ob I guess it's flush().

[13:13:00.0000] <zewt>
Hixie: this works for me in PHP, anyway http://pastebin.com/NUBf9tCq

[13:13:01.0000] <zewt>
don't know about perl

[13:13:02.0000] <zewt>
no padding needed

[13:13:03.0000] <Hixie>
well i have perl's autoflush mode enabled

[13:13:04.0000] <Hixie>
i don't know what's up

[13:13:05.0000] <Philip`>
If it's CGI, there's use IO::Handle; STDOUT->flush;

[13:14:00.0000] <Philip`>
/me doesn't know what buffering Apache does

[13:14:01.0000] <zewt>
i'd imagine that unless you actually somehow tell it to, it won't turn on chunked (in php, calling flush() is also telling it to do that)

[13:14:02.0000] <Hixie>
tried that too, with no success

[13:14:03.0000] <Hixie>
oh well

[13:14:04.0000] <heycam>
jgraham, just by following http://dev.w3.org/2006/webapi/WebIDL/#es-exception-hasinstance it seems to require that to be true [exception instanceof other_window.DOMException]

[13:14:05.0000] <zewt>
http://zewt.org/~glenn/delay.php

[13:15:00.0000] <heycam>
jgraham, but the spec doesn't really deal with multiple globals specifically...

[13:16:00.0000] <heycam>
jgraham, if you think "instanceof"s like this (and `node instanceof other_window.Node`) should be returning false, let me know

[13:16:01.0000] <heycam>
jgraham, (probably they should be returning false, since that's what'd happen with say `myObj instanceof other_window.Object`)

[13:27:00.0000] <AryehGregor>
Who would be a good Mozilla person to ask about execCommand()?

[13:30:00.0000] <AryehGregor>
roc, smaug____, volkmar, do any of you know who a good Mozilla person is to ask for feedback about my execCommand() spec?

[13:30:01.0000] <roc>
ehsan

[13:30:02.0000] <volkmar>
AryehGregor: ehsan i think

[13:30:03.0000] <AryehGregor>
Okay, thanks.

[13:35:00.0000] <gsnedders>
AryehGregor: Email hallvord for anything frm an Opera POV, FWIW

[13:35:01.0000] <AryehGregor>
gsnedders, okay, I'll CC him too.

[13:36:00.0000] <AryehGregor>
Thanks.

[13:36:01.0000] <gsnedders>
*from

[13:42:00.0000] <AryehGregor>
Okay, e-mail sent.

[13:42:01.0000] <AryehGregor>
anolis --dump-xrefs intermediate.html /tmp/spec is hanging, by the way.

[13:43:00.0000] <AryehGregor>
http://pastebin.com/3rJJkWcY

[13:43:01.0000] <AryehGregor>
Just freezes there forever.

[13:43:02.0000] <AryehGregor>
/me tries updating it

[13:44:00.0000] <AryehGregor>
Nope, still hangs.

[13:44:01.0000] <AryehGregor>
It's Ms2ger's hacked version.

[13:55:00.0000] <erlehmann>
I believe this is old news for almost all of you, but can someone tell me if that is a practical joke? <http://whyfirefoxisblocked.com/>

[14:00:00.0000] <Hixie>
it was intended seriously (back in the mid 200s)

[14:01:00.0000] <Hixie>
however it was seriously misguided then and remains so now :-)

[14:02:00.0000] <Hixie>
mid 2000s even

[14:04:00.0000] <erlehmann>
Hixie, I stand confused from the logic: âToo few visitors are viewing my ads, so I'm blocking everyone â even the 95% without an ad blocker from viewing my page (and, by extension, my ads).â

[14:05:00.0000] <Hixie>
it's even worse than that

[14:05:01.0000] <erlehmann>
This seems like one of these shows making fun of bureaucrats â¦ ON THE INTERNET.

[14:05:02.0000] <Hixie>
the people _with_ ad blockers have the ability to work around the block, so they still see the content

[14:05:03.0000] <Hixie>
the people _without_ ad blockers learn about them

[14:06:00.0000] <erlehmann>
Oh wow. m(

[14:07:00.0000] <zewt>
the mid 200s? yeah i guess 1800 years ago this might have passed for rational thought :)

[14:08:00.0000] <zewt>
that's pretty high comedy--"too few people click my ads, so I need to reduce it further"

[14:09:00.0000] <zewt>
i'm honestly surprised there's as little ad-blocker-blocking in the wild as there is; it's not like there's a shortage of people with such bad judgement

[14:10:00.0000] <zewt>
i'm similarly surprised there's very little effort to try to make ads that can't be blocked; it's an arms race that ad blockers would ultimately lose

[14:13:00.0000] <Hixie>
most people don't mind ads

[14:13:01.0000] <erlehmann>
zewt, how do you know they haven't already lost? ;)

[14:13:02.0000] <zewt>
erlehmann: largely because I almost never see ads :)

[14:13:03.0000] <Hixie>
imho ads are fine so long as they are (a) useful and relevant and (b) not actually blocking the content or annoying

[14:13:04.0000] <erlehmann>
dito here.

[14:14:00.0000] <erlehmann>
zewt, parsed sentence wrong: thought ad blockers would win and ad companies would lose.

[14:14:01.0000] <Hixie>
(interstitial and preroll ads on big blogs and in video streams drive me crazy)

[14:14:02.0000] <zewt>
Hixie: sure, but a whole lot of ads are neither of those things :)

[14:14:03.0000] <Hixie>
yeah

[14:15:00.0000] <erlehmann>
Well, relevant content is relevant.

[14:15:01.0000] <zewt>
there are plenty of ads and ad providers who just want to spam banners everywhere they can--it's that sort I'm surprised aren't trying harder to thwart blockers

[14:16:00.0000] <erlehmann>
I consider ad blockers as a tool to skew the signal-to-noise-ratio in my favor â they are not the only ones, I once wrote a userscript utilizing LZW compression to remove repetitive spammy comments from my view of an imageboard.

[14:16:01.0000] <erlehmann>
It was funny when I realized it also blocked legit comments that were just not that interesting due to repetitive style.

[14:17:00.0000] <Hixie>
what's sad is that relevant and useful ads make so much more money than irrelevant and annoying ads, it makes you wonder why people keep on using the annoying ones

[14:17:01.0000] <zewt>
not every type of site has ads that are really relevant to it, though

[14:18:00.0000] <zewt>
if you're reviewing graphics cards then it's easy; if you're blogging about earthquakes in japan, not so much

[14:20:00.0000] <erlehmann>
Anyone having usable CSS for @cite? I'm currently using this: blockquote::after { content: "<" attr(cite) ">"; }

[14:20:01.0000] <erlehmann>
should probably be blockquote[cite]::after

[14:20:02.0000] <wilhelm>
zewt: CNN at least tries to be relevant: http://i.imgur.com/GTNjf.png :P

[14:29:00.0000] <erlehmann>
wilhelm, could be worse. At least 4chan is not displaying fake ads for âS.T.A.L.K.E.R.: Shadow of Fukushimaâ.

[14:29:01.0000] <erlehmann>
(but given the puddi disaster, that may happen)

[14:30:00.0000] <erlehmann>
btw, adblock was extremely useful against puddi

[14:31:00.0000] <erlehmann>
oh wait, the puddi video was an ad. so obvious it hurts.

[15:18:00.0000] <AryehGregor>
How did I not think to test whitespace stripping in my reflection tests?

[15:18:01.0000] <AryehGregor>
I'll have to fix that.

[15:29:00.0000] <AryehGregor>
I'm mildly amused when I see people who use complicated jQuery stuff when they could use much simpler built-in features.

[15:29:01.0000] <AryehGregor>
Like: var tabIndex = parseInt( $(this).attr( 'tabindex' ), 10 );

[15:29:02.0000] <AryehGregor>
Instead of, let's say: var tabIndex = this.tabIndex;

[15:40:00.0000] <erlehmann>
wat


2011-03-14
[23:31:00.0000] <Hixie>
abarth: yt?

[23:33:00.0000] <Hixie>
abarth: i have a string of bytes of variable length which i'm sending in a UDP packet. i can limit the total allowed length of the input to an arbitrary limit, e.g. 30K, 60K, whatever fits in an IPv6 UDP packet (65487 bytes as far as I can tell would therefore be the max). I want to make sure it is masked so it can't ever be used to reliably attack a service.

[23:34:00.0000] <Hixie>
is there a good way to do that? the most obvious way seems to be to limit it to 30K and make each packet contain first a one-time pad of equal length (and completely random) followed by the data xor'ed with that pad

[23:34:01.0000] <Hixie>
but is there some crypto magic that would be better?

[23:58:00.0000] <abarth>
Hixie: hey

[23:59:00.0000] <abarth>
Hixie:

[23:59:01.0000] <abarth>
Hixie: yay

[23:59:02.0000] <abarth>
s/yay/yeah/

[23:59:03.0000] <abarth>
just use AES-128-CTR

[23:59:04.0000] <Hixie>
cool

[23:59:05.0000] <abarth>
send a nonce

[23:59:06.0000] <abarth>
then HMAC a unique id with the nonce to get the key

[23:59:07.0000] <abarth>
and use AES-128-CTR

[00:00:00.0000] <abarth>
the CTR is the important part

[00:00:01.0000] <Hixie>
k

[00:00:02.0000] <Hixie>
wait CTR won't work if the receiver doesn't receive everything right?

[00:01:00.0000] <Hixie>
this is UDP so the delivery is unreliable

[00:01:01.0000] <abarth>
CTR is a stream cipher

[00:01:02.0000] <abarth>
you want to re-key with each packet

[00:01:03.0000] <Hixie>
ah ok

[00:01:04.0000] <abarth>
you can decrypt each byte as it arives

[00:01:05.0000] <Hixie>
right

[00:01:06.0000] <Hixie>
cool, thanks

[00:02:00.0000] <Hixie>
and the unique id is unique to the spec? or to the UA? or to the packet?

[00:02:01.0000] <Hixie>
spec presumably

[00:02:02.0000] <abarth>
the spec

[00:02:03.0000] <Hixie>
how big should the nonce and unique id be?

[00:02:04.0000] <Hixie>
16 bytes?

[00:03:00.0000] <abarth>
yeah, that should be plenty

[00:03:01.0000] <abarth>
for the unique id, you can just use uuidgen

[00:03:02.0000] <Hixie>
i figured i'd pipe /dev/urandom to head then to hexdump :-)

[00:04:00.0000] <abarth>
that works too :)

[00:04:01.0000] <Hixie>
to get 16 random bytes i can copy-paste into the spec :-)

[00:05:00.0000] <Hixie>
does websocket -06 have prose for this that's spec-ready by any chance?

[00:05:01.0000] <abarth>
http://tools.ietf.org/html/draft-abarth-websocket-handshake-01 probably does

[00:06:00.0000] <abarth>
looking

[00:06:01.0000] <abarth>
http://tools.ietf.org/html/draft-abarth-websocket-handshake-00

[00:06:02.0000] <abarth>
27

[00:06:03.0000] <abarth>
step 27 on page 9

[00:07:00.0000] <Hixie>
awesome

[00:07:01.0000] <Hixie>
thanks

[00:07:02.0000] <abarth>
there's a NIST document you can reference for AES-128-CTR

[00:08:00.0000] <Hixie>
references i'm good with :-)

[00:08:01.0000] <hsivonen>
http://blog.lostdecadegames.com/an-html5-game-in-the-mac-app-store Somehow I'm annoyed at how the article claims that Chrome and WebKit on Mac are "completely different platform[s]"

[00:23:00.0000] <annevk>
w3.org Bugzilla slow for anyone else?

[01:11:00.0000] <annevk>
subjects so far: extend paragraphs/inline lists; datalist stuff; WebApps publications; cross-origin databases

[01:12:00.0000] <annevk>
maybe I should write about the license debate hmm

[01:28:00.0000] <Hixie>
annevk: what exception should i fire for when too much data has been passed to a method? (specifically, too much data to fit in a UDP packet)

[01:29:00.0000] <Hixie>
INVALID_ACCESS_ERR?

[01:30:00.0000] <annevk>
INDEX_SIZE_ERR ?

[01:30:01.0000] <annevk>
hmm I guess that's not quite correct

[01:30:02.0000] <Hixie>
yeah i made the same mistake

[01:30:03.0000] <Hixie>
i guess SIZE_ERR is misleading

[01:31:00.0000] <hsivonen>
hmm. the spec is silent on how to render runs of multiple spaces in the values of a title attribute

[01:31:01.0000] <hsivonen>
or tabs

[01:31:02.0000] <hsivonen>
or carriage returns

[01:31:03.0000] <Hixie>
we mention line feeds though right?

[01:31:04.0000] <hsivonen>
Hixie: yes

[01:31:05.0000] <Hixie>
k good

[01:31:06.0000] <Hixie>
if you want more specifics, please file a bug or send mail, happy to add more

[01:32:00.0000] <annevk>
INVALID_ACCESS_ERR sounds good

[01:32:01.0000] <Hixie>
CRs should be treated the same as NULLs

[01:32:02.0000] <annevk>
I can also add a new one

[01:32:03.0000] <Hixie>
(or any control character)

[01:32:04.0000] <hsivonen>
Hixie: OK. I guess I need to test what other browsers do first, so I know what to ask for!

[01:32:05.0000] <Hixie>
annevk: wasn't sure what to call it that would be generic enough to make it useful yet less generic than INVALID_ACCESS_ERR

[01:32:06.0000] <Hixie>
hsivonen: :-)

[01:33:00.0000] <annevk>
QUOTA_EXCEEDED_ERR is quite close too, but it's named in a specific way

[01:33:01.0000] <annevk>
actually no, that's quite different

[01:33:02.0000] <annevk>
meh

[01:33:03.0000] <annevk>
/me goes back to writing WHATWG Weekly

[01:34:00.0000] <zcorpan>
/me disables [FLASH] feature in the forums

[01:35:00.0000] <zcorpan>
a bit scary that phpbb3 allows remote flash embedding in user posts by default

[01:35:01.0000] <hsivonen>
zcorpan: it indeed is

[01:36:00.0000] <hsivonen>
not only a bit scary

[01:36:01.0000] <Hixie>
luckily the forums are isolated on their own origin

[01:37:00.0000] <hsivonen>
Grr. Why doesn't the Gnome Character Map include ASCII?

[01:38:00.0000] <zcorpan>
Hixie: maybe somebody pulls off an attack against the other origins on the same virtual machine with Flash sockets

[01:39:00.0000] <Hixie>
zcorpan: well we're not going to be any safer if we disable flash if that's the attack scenario

[01:40:00.0000] <zcorpan>
maybe not :)

[01:47:00.0000] <hsivonen>
hmm. this is interesting: IE9 seems to handle literal tab and escaped tab differently in the title attribute

[01:48:00.0000] <hsivonen>
no I fail

[01:48:01.0000] <hsivonen>
editor set to expand tabs to spaces

[01:59:00.0000] <jgraham>
hsivonen: Gnome Character Map does include ASCII

[02:00:00.0000] <jgraham>
It's called "Basic Latin"

[02:00:01.0000] <jgraham>
/me thought that annevk was away

[02:01:00.0000] <hsivonen>
jgraham: oh right. I got fooled by having Latin 1 selected and being unable to scroll up

[02:02:00.0000] <hsivonen>
it also confuses me greatly that the Unicode Blocks are sorted by name alphabetically instead of being sorted by code point order

[02:02:01.0000] <jgraham>
Yeah, having a by-codepoint view might be nice

[02:03:00.0000] <jgraham>
Hixie: Is it intentional that one can now nest <input> inside <button>?

[02:03:01.0000] <hsivonen>
and it irks me that there's no in-windows search field, so I have to use ctrl-f

[02:03:02.0000] <Hixie>
one can?

[02:03:03.0000] <Hixie>
how can one?

[02:03:04.0000] <hsivonen>
jgraham: intentional as in conformance or as in parser?

[02:03:05.0000] <jgraham>
Hixie: <button><input></button>

[02:03:06.0000] <jgraham>
hsivonen: In the parser

[02:03:07.0000] <Hixie>
oh in the parser

[02:03:08.0000] <Hixie>
no idea

[02:04:00.0000] <Hixie>
what changed it?

[02:04:01.0000] <Hixie>
what do browsers do?

[02:04:02.0000] <jgraham>
We specced the parser

[02:04:03.0000] <jgraham>
Before we specced the parser it didn't work

[02:04:04.0000] <jgraham>
:)

[02:04:05.0000] <Hixie>
if all browsers do otherwise and the parser spec has always allowed it then it was an oversight due to incomplete testing

[02:04:06.0000] <hsivonen>
I expect to become very tired of switching between IE9 and IE8 VM snapshots...

[02:04:07.0000] <jgraham>
I think HTML5 browsers allow it and pre-HTML5 browsers don't

[02:05:00.0000] <jgraham>
I haven't tried IE

[02:05:01.0000] <jgraham>
(I suppose s/HTML5/parser spec/

[02:05:02.0000] <jgraham>
)

[02:05:03.0000] <zcorpan>
jgraham: in ie the input is put inside the button but it doesn't render

[02:06:00.0000] <hsivonen>
jgraham: IE8 allows them nest

[02:06:01.0000] <hsivonen>
jgraham: so interop FTW!

[02:07:00.0000] <zcorpan>
hsivonen: does it render in ie8?

[02:07:01.0000] <hsivonen>
zcorpan: AFAICT, the input isn't rendered

[02:08:00.0000] <jgraham>
Well I am not adverse to just leaving things as-is; it just means that I need to change some tests that assume the old behaviour

[02:08:01.0000] <annevk>
jgraham, leaving 4AM tomorrow, flying to Madrid from Germany at around 8AM

[02:08:02.0000] <hsivonen>
I'm greatly annoyed by Microsoft not allowing XP Mode to be run on the VM of my choice outside Windows 7

[02:08:03.0000] <annevk>
jgraham, arriving in BogotÃ¡ at around 5PM local time if all goes well...

[02:08:04.0000] <jgraham>
Having a visible, but unclickable input is weird but so are lots of things

[02:09:00.0000] <hsivonen>
Virtual PC doesn't work when Windows 7 itself is itself  running in a VM

[02:09:01.0000] <jgraham>
annevk: I see

[02:09:02.0000] <hsivonen>
anyway, I don't have IE6 or IE7 to test with on this computer

[02:11:00.0000] <hsivonen>
jgraham: Clearly, the parsing algorithm is correct. Maybe we should consider doing

[02:11:01.0000] <hsivonen>
button input { display: none; }

[02:11:02.0000] <jgraham>
Yes

[02:12:00.0000] <hsivonen>
in other news, it seems the Gnome folks don't actively test their site in IE8

[02:12:01.0000] <annevk>
http://blog.whatwg.org/weekly-layout-table

[02:12:02.0000] <hsivonen>
got a bug report about API doc layout changing on gnome.org due to the HTML5 parser

[02:12:03.0000] <hsivonen>
when AFAICT, we became more like IE

[02:13:00.0000] <hsivonen>
the <br></br> thing

[02:13:01.0000] <jgraham>
It seems quite plausible that very few gnome developers *have* IEâ¦

[02:14:00.0000] <hsivonen>
sadly, enhanced interop may be thought of as a bug in the context of Linux or Mac-oriented sites

[02:14:01.0000] <hsivonen>
well, fortunately, it's not the end of the world if API listings have some extra blank lines

[02:14:02.0000] <hsivonen>
also, XHTML as text/html for the lose

[02:17:00.0000] <jgraham>
hsivonen: It would be astonishingly shortsighted for the people who benefit from greater interop in general (those running on minority platforms) to view interop as a negative thing

[02:19:00.0000] <zcorpan>
Hixie: a better attack scenario would be attacking the admin panel

[02:19:01.0000] <Hixie>
sure

[02:19:02.0000] <Hixie>
allowing embedded flash is equivalent to allowing embedded <script>

[02:20:00.0000] <Hixie>
i was just saying the damage would be isolated to the forums

[02:20:01.0000] <zcorpan>
yeah

[02:20:02.0000] <hsivonen>
I think the background image breakage on http://www.buzzmachine.com/ shows a huge win for interop

[02:21:00.0000] <hsivonen>
the page "worked" in pre-HTML5 non-IE browsers but the HTML5 parser-enabled builds of non-IE browsers break the page exactly like IE

[02:22:00.0000] <davve__>
he

[02:23:00.0000] <zcorpan>
hsivonen: what's the cause of the background breakage on that page?

[02:23:01.0000] <hsivonen>
zcorpan: <ul><div><li>foo</li></div></ul>, I've been told

[02:24:00.0000] <zcorpan>
did pre-HTML5 non-IE pop the div?

[02:25:00.0000] <hsivonen>
or maybe the key is <ul><div></div><li></ul>

[02:25:01.0000] <Hixie>
jesus some of these RFCs have stupidly long names

[02:26:00.0000] <hsivonen>
zcorpan: I don't recall, but anyway, the divs become a bit different and the div that has the background ends up having the content overflow instead of having another div in it that'd stretch the bg div

[02:26:01.0000] <zcorpan>
/me sees a <center> in <ul>

[02:26:02.0000] <hsivonen>
zcorpan: anyway, I think we shouldn't change the spec or implementations

[02:26:03.0000] <hsivonen>
zcorpan: I think we should declare victory

[02:26:04.0000] <zcorpan>
yep, was just curious :)

[02:28:00.0000] <hsivonen>
oh, great. Firefox, Chrome and IE can't agree on the tab size in tooltips

[02:32:00.0000] <hsivonen>
I wonder why IE9 RC pops up a balloon to call my attention to the compat view button when loading http://hsivonen.iki.fi/test/moz/title-attribute.html

[02:32:01.0000] <hsivonen>
or maybe it pops the balloon when the user repeatedly reloads the page

[02:33:00.0000] <Hixie>
my quest to write the spec with the most references ever continues unabated

[02:34:00.0000] <zcorpan>
hsivonen: i think it's the latter. at least i remember ie8 doing that when reloading some random page

[02:36:00.0000] <hsivonen>
zcorpan: yeah. looks like it's the reload

[02:40:00.0000] <annevk>
Hixie, is there some WIP to view?

[02:42:00.0000] <Hixie>
yeah, reload

[02:42:01.0000] <Hixie>
search for PeerConnection

[02:42:02.0000] <Hixie>
that whole section is new

[02:42:03.0000] <Hixie>
i'm fixing markup errors

[02:42:04.0000] <Hixie>
so don't worry if the whole page is blue or whatever

[02:44:00.0000] <annevk>
:)

[02:50:00.0000] <annevk>
Hixie, instead of sendText shouldn't this follow XHR / postMessage() more?

[02:50:01.0000] <Hixie>
good idea

[03:02:00.0000] <Hixie>
annevk: i changed sendText to postMessage, i hope that's what you meant!

[03:05:00.0000] <annevk>
either postMessage or just send()

[03:05:01.0000] <annevk>
something that can be overloaded later

[03:05:02.0000] <annevk>
with ArrayBuffer and other things we want to tranmist

[03:05:03.0000] <jgraham>
Without looking, son't we want to reuse the terminology from websockets?

[03:05:04.0000] <jgraham>
*don't

[03:06:00.0000] <Hixie>
which terminology?

[03:06:01.0000] <annevk>
yeah, I sort of expected Hixie to pick send()

[03:06:02.0000] <Hixie>
send() is fine too

[03:06:03.0000] <jgraham>
The function names

[03:06:04.0000] <Hixie>
sure

[03:07:00.0000] <Hixie>
so i have idl checking in my pipeline

[03:08:00.0000] <Hixie>
unfortunately the error messages refer to the number of the idl block

[03:08:01.0000] <Hixie>
i've no idea which idl block is numbered what

[03:08:02.0000] <Hixie>
apparently idl block 115 or so has a new error

[03:08:03.0000] <Hixie>
something about DOMString vs (

[03:08:04.0000] <Hixie>
so if anyone sees the mistake later, let me knot

[03:08:05.0000] <Hixie>
know

[03:13:00.0000] <annevk>
so this also nukes device

[03:13:01.0000] <annevk>
wonder what Andrei will say to that

[03:14:00.0000] <Hixie>
which andrei?

[03:14:01.0000] <Hixie>
andrei p?

[03:14:02.0000] <annevk>
yeah

[03:14:03.0000] <Hixie>
i think he'll be fine with it

[03:14:04.0000] <Hixie>
there was a lot of confusion amongst webkit guys about what exactly <device> should do

[03:15:00.0000] <annevk>
hmm yeah, reading the message again he seems less displeased with that suggestion than I remembered

[03:15:01.0000] <annevk>
the main question is UI

[03:17:00.0000] <Hixie>
ok this is committed

[03:17:01.0000] <jgraham>
Hixie: On an entirely different topic, DOMTokenList specifies that you get null for .index(n) with n>=.length But WebIDL specifies that, at least for index properties you throw TypeError for out of range

[03:17:02.0000] <jgraham>
Is it intentional that there is a difference?

[03:17:03.0000] <Hixie>
i doubt it

[03:17:04.0000] <jgraham>
Is it even allowed by WebIDL?

[03:17:05.0000] <Hixie>
dunno

[03:17:06.0000] <Hixie>
file a bug or send mail :-)

[03:17:07.0000] <Hixie>
i'm hours late for bed

[03:18:00.0000] <jgraham>
/me can't see anything that would prevent it right now, butâ¦

[03:18:01.0000] <Hixie>
wanted to get this peer-to-peer thing done

[03:18:02.0000] <Hixie>
nn :-)

[03:18:03.0000] <jgraham>
Hixie: Fair enough :)

[03:18:04.0000] <jgraham>
Sleep wel

[03:18:05.0000] <jgraham>
l

[03:18:06.0000] <Hixie>
ta :-)

[03:45:00.0000] <jgraham>
So what obvious thing am a I missing? Where is it specified that \n -> \r\n for form submission?

[03:50:00.0000] <jgraham>
Ah, only for type=hidden

[03:50:01.0000] <jgraham>
Perhaps

[03:51:00.0000] <jgraham>
No, <textarea? also

[03:51:01.0000] <jgraham>
s/?/>/

[04:04:00.0000] <richt>
FYI http://my.opera.com/core/blog/2011/03/14/web-meet-device

[04:04:01.0000] <richt>
I'll caveat that with the fact we will update the APIs with Hixie's latest changes from here on out :)

[04:21:00.0000] <hsivonen>
is this a fork? http://libav.org/

[04:23:00.0000] <annevk>
the event should probably be named message rather than text

[04:23:01.0000] <annevk>
like WebSockets

[04:23:02.0000] <annevk>
oh well, details

[04:24:00.0000] <annevk>
hsivonen, "We, as a group of FFmpeg developers, have decided to continue developing FFmpeg under the name Libav. All existing infrastructure will be transferred to the libav.org domain."

[04:24:01.0000] <hsivonen>
annevk: but why? and why doesn't the same message appear on ffmpeg.org?

[04:27:00.0000] <annevk>
no idea

[04:31:00.0000] <hsivonen>
I can guess three possible explanations: 1) fork 2) MPEG complaining about name 3) rebranding is more general than just MPEG

[04:43:00.0000] <Philip`>
hsivonen: Sounds like a reaction to http://lwn.net/Articles/423702/

[04:43:01.0000] <Philip`>
http://lists.mplayerhq.hu/pipermail/ffmpeg-devel/2011-March/109202.html

[04:46:00.0000] <Philip`>
http://avcodec.org/pipermail/ffmpeg-private/2011-March/thread.html also somewhat relevant

[04:51:00.0000] <Philip`>
(Sounds kind of like there was a fork due to the normal reasons (personality clashes and disagreements over development practices), but the forkers took control of the FFmpeg name, which the other people didn't like, so the other people started their own fork called libav, or something like that)

[04:55:00.0000] <hsivonen>
Philip`: thanks. too much email for me to have a clear understanding of what happened and why

[04:56:00.0000] <hsivonen>
I wonder if someone is chronicling open source fork history with reasonably unbiased recounts of what happened in each case

[05:02:00.0000] <Philip`>
Unbiased accounts might not help understanding the reason much, since the reason usually seems to be people's differing biases

[05:03:00.0000] <Philip`>
The most useful thing you can get is a full collection of everyone's biases, since then the reader can recognise the conflict

[05:03:01.0000] <jgraham>
Philip`: Presumably one can objectively document a bias without having to share it

[05:04:00.0000] <jgraham>
Insofar as one can objectively document anything

[05:25:00.0000] <Lachy>
Hixie, in the new getUserMedia() method, the description says options is comma separated, but the algorithm says to split on spaces.

[05:31:00.0000] <hsivonen>
Speaking of forks, who is using XFree86 still?

[05:39:00.0000] <smaug____>
has <device> been removed from HTML spec?

[05:39:01.0000] <smaug____>
it is mentioned in Abstract, but I can't seem to find it elsewhere

[05:41:00.0000] <jgraham>
smaug____: Yes

[05:42:00.0000] <smaug____>
jgraham: I was just wondering the example http://my.opera.com/core/blog/2011/03/14/web-meet-device (I think the example shows that the API is rather strange)

[05:43:00.0000] <jgraham>
smaug____: <device> was removed this morning

[05:43:01.0000] <smaug____>
aha, good

[05:43:02.0000] <smaug____>
I wonder what the reasoning was

[05:48:00.0000] <smaug____>
annevk: are you on vacation already?

[05:50:00.0000] <erlehmann>
oh noes

[06:07:00.0000] <Lachy>
smaug____, there are a few reasons why an API is better than the device element

[06:08:00.0000] <smaug____>
sure. I never liked <device>, though I didn't have time to review it properly

[06:08:01.0000] <foolip>
Hixie, are you aware that the video conferencing section ended up in http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#video-conferencing-and-peer-to-peer-communication ?

[06:09:00.0000] <foolip>
seems rather unrelated to drag and drop :)

[06:10:00.0000] <zcorpan>
Philip`: ^

[06:11:00.0000] <Lachy>
smaug____, firstly, the device element would require a native control to be inserted into the page so that the user can initiate access. Native controls suck for designers, since hey

[06:11:01.0000] <Lachy>
since they're difficult to style

[06:11:02.0000] <smaug____>
Lachy: very true. Similar reasons why I don't like Google's proposals for HTML Speech

[06:12:00.0000] <Lachy>
The API lets the author use whatever controls they like, and activiate it with a script, and then the browser can provide suitable UI in the chrome to request access, just like with geolocation

[06:13:00.0000] <smaug____>
right

[06:13:01.0000] <smaug____>
I wonder why the API is in HTML spec

[06:13:02.0000] <smaug____>
sounds a lot like something which could be handled in some separate spec

[06:13:03.0000] <Lachy>
because <device> was in the HTML spec, and no-one has yet offered to take over and write it as a separate spec

[06:14:00.0000] <hsivonen>
smaug____: probably because it's easier to add a section to an existing document than to start a new one

[06:14:01.0000] <jgraham>
smaug____: (that type of comment is more or less pure stop energy without actually doing the seperation)

[06:14:02.0000] <Philip`>
Hmph, Hixie keeps adding markup to the spec

[06:14:03.0000] <jgraham>
smaug____: (not suggesting that's what you intended at all)

[06:15:00.0000] <Philip`>
foolip: If you remind me later today or thereabouts, I can probably update the splitter

[06:15:01.0000] <Philip`>
(else I'll probably forget)

[06:16:00.0000] <smaug____>
jgraham: how so? I would guess there are pretty good tools to separate parts of HTML spec to separate documents automatically. Isn't that what happened to Websockets API for example

[06:17:00.0000] <hsivonen>
smaug____: there are tools, because people have complained in the past, but still the organization across specs isn't a substantive problem

[06:17:01.0000] <jgraham>
smaug____: Because it is not providing any useful feedback on the spec but requiring other people to expend effort to make, in the best case, meaningless changes

[06:18:00.0000] <jgraham>
when that effort could be better spent on actually improving the spec

[06:19:00.0000] <smaug____>
/me doesn't understand how trying to make things easier to read is meaningless

[06:19:01.0000] <smaug____>
but anyway, not important enough to complain now...

[06:19:02.0000] <jgraham>
Is it really easier? Especially if it is conveniently split into its own page in the multipage version

[06:20:00.0000] <jgraham>
I find it harder because I have to hunt out the particular document that the thing I'm interested in is living in

[06:20:01.0000] <jgraham>
rather than just searching the TOC

[06:20:02.0000] <foolip>
Philip`, how much later should I remind you?

[06:21:00.0000] <smaug____>
it is true that readability of the spec could perhaps be improved also in some other ways

[06:21:01.0000] <jgraham>
(in the worst case, it is used as a tactic by people who don't like a spec to try and bury it; c.f. microdata)

[06:23:00.0000] <smaug____>
But anyhow, I'm concerned about the readability of the spec. It needs to reviewed more often and more thoroughly

[06:23:01.0000] <hsivonen>
smaug____: I like to be able to use in-browser search over a larger body of text

[06:24:00.0000] <Lachy>
smaug____, splitting specs sucks so much, and that's why I always look at complete.html because it has everything in it

[06:24:01.0000] <hsivonen>
smaug____: it annoys me greatly that the single-page version of SVG 1.1 latest ed. is hidden and that the latest EDs of CSS are sprinkled across documents

[06:25:00.0000] <hsivonen>
smaug____: also, a part of the pushback you are seeing is probably due to connotations from microdata etc. at the HTML WG

[06:25:01.0000] <Philip`>
foolip: Perhaps in between maybe 5 and 10 hours

[06:28:00.0000] <Lachy>
Is Interface GeneratedStream supposed to inherit from Stream? The IDL doesn't show that, but the prose indicates that might be the case

[06:29:00.0000] <zcorpan>
Lachy: my thought too

[06:29:01.0000] <zcorpan>
Lachy: second thought was that if that is the case, it'd be nicer to have all constants on Stream

[06:29:02.0000] <Lachy>
zcorpan, yeah, was just thinking that too

[06:34:00.0000] <zcorpan>
getRecordedData should probably have void return value

[06:40:00.0000] <Lachy>
why was the readystatechange event added to this, since there is also separate events for play, paused and ended?

[07:28:00.0000] <annevk>
smaug____, still here

[07:28:01.0000] <annevk>
somewhat

[07:28:02.0000] <zcorpan>
why is it ontext rather than onmessage?

[07:28:03.0000] <smaug____>
I wonder what I was going to ask...

[07:30:00.0000] <annevk>
zcorpan, it was sendText() or some such before as well

[07:30:01.0000] <annevk>
zcorpan, I hope Hixie just forgot to fix it

[07:31:00.0000] <annevk>
well, that's what I expect

[07:31:01.0000] <zcorpan>
ok

[07:31:02.0000] <hsivonen>
hmm. Microsoft PR links to a review at Softpedia

[07:39:00.0000] <zcorpan>
"as i recently realised, there is not (to my knowledge) a single MUST requirement on browsers to implement the features of HTML5 in an accessible, interoperable way." http://blog.whatwg.org/weekly-layout-table

[07:42:00.0000] <hsivonen>
zcorpan: curiously, the HTML5 spec requires data mining tools to treat elements according to their semantics, but there's no requirement (that I could find) for accessibility API exposure to do the same

[07:43:00.0000] <jgraham>
/me is just getting the blog timing out

[07:43:01.0000] <zcorpan>
thus, it's proof that Hixie cares more about data mining tools than about accessibility

[07:43:02.0000] <hsivonen>
I wonder if it's too controversial to highlight quirky and almost standards doctypes as errors in View Source

[07:43:03.0000] <jgraham>
Quirky should be

[07:44:00.0000] <hsivonen>
jgraham: highligthed or controversial? :-)

[07:44:01.0000] <jgraham>
heh

[07:44:02.0000] <jgraham>
Highlighted

[07:44:03.0000] <hsivonen>
it would seem inconsistent not to highlight Almost Standards, too, in that case

[07:45:00.0000] <jgraham>
Yeah, I would highlight both

[07:45:01.0000] <hsivonen>
at present, I'm not highlighting tree builder errors detected on EOF, because I don't know what I'd highlight

[07:46:00.0000] <hsivonen>
since there's no visible EOF character to highlight

[07:46:01.0000] <annevk>
hmm

[07:46:02.0000] <annevk>
even http://dreamhoststatus.com/ is down?!

[07:46:03.0000] <zewt>
dreamhoststatusstatus.com

[07:47:00.0000] <hsivonen>
zewt: I had to check if that one really existed

[07:47:01.0000] <zewt>
dreamhoststatus^N.com

[07:48:00.0000] <annevk>
"Update 7:11 am: We are currently operating on half of a core, so partial connectivity has been restored. We are working to resolve an issue with one of the cisco core supervisors not maintaining itâs configuration. Systems that are affected by this are our servers located at our downtown Los Angels, CA location (including the panel)â servers at our LAX data center are not affected by this outage."

[07:48:01.0000] <hsivonen>
whoa. looks like Hixie has allowed mozillaquestquest.com expire

[07:49:00.0000] <hsivonen>
(cue concern trolling about Hixie-owned domain names)

[08:02:00.0000] <Lachy>
Apparently Dreamhost is having network issues. Even Dreamhost Status is offline and I can't get my email :-(

[08:04:00.0000] <hsivonen>
I have a hard time understanding Microsoft's update categories. Are all "important" updates eligible for autoinstall?

[08:04:01.0000] <hsivonen>
If yes, why do I see unchecked-by-default "Important" updates in Windows Update?

[08:27:00.0000] <annevk>
dammit dreamhost

[08:29:00.0000] <zewt>
heh dreamhost is pretty much down at the bottom of the bargain bin of hosting

[08:31:00.0000] <jgraham>
hsivonen: What would it mean for an accessibility API to treat an element according to its semantics?

[08:32:00.0000] <hsivonen>
jgraham: that a <button> element is exposed as a button--not, for example, as a scrollbar

[08:32:01.0000] <jgraham>
hsivonen: Isn't that defined on a per element basis?

[08:33:00.0000] <jgraham>
using aria as an intermediate layer or something?

[08:34:00.0000] <hsivonen>
jgraham: only for stuff that's representable as ARIA, right? And is there a req to support ARIA?

[08:34:01.0000] <hsivonen>
jgraham: it's quite possible that the req is there but I just didn't find it

[08:34:02.0000] <jgraham>
http://www.whatwg.org/specs/web-apps/current-work/multipage/content-models.html#annotations-for-assistive-technology-products-(aria)

[08:34:03.0000] <jgraham>
"User agents are required to implement ARIA semantics on all HTML elements, as defined in the ARIA specifications"

[08:35:00.0000] <hsivonen>
jgraham: oh. OK.

[09:57:00.0000] <Hixie>
richt: d'oh, that was some poor timing we did there :-)

[10:57:00.0000] <AryehGregor>
Hixie, it's kind of a pain that the spec doesn't define things like phrasing vs. flow content for obsolete elements.  In execCommand(), I need a category of "things that are safe to put in inlines", meaning in practice that if you put them in a <span> it will serialize safely to text/html.

[10:58:00.0000] <Hixie>
i can add something like that if you want

[10:58:01.0000] <AryehGregor>
E.g., if you have <p><font color=red>Foo</font> bar</p>, and the user bolds the whole paragraph, I want to be able to say you can do <p><b><font color=red>Foo</font> bar</b></p>.

[10:58:02.0000] <Hixie>
file a bug with the list of elements you want defined and the name of the term you want it defined as

[10:58:03.0000] <AryehGregor>
Okay, will do.

[11:03:00.0000] <AryehGregor>
Wait, can you put stuff like <p> inside a <b> in text/html?

[11:03:01.0000] <AryehGregor>
It looks like you can.

[11:03:02.0000] <AryehGregor>
So it's just invalid?

[11:03:03.0000] <AryehGregor>
Maybe this isn't needed, in that case.

[11:04:00.0000] <Ms2ger>
http://ln.hixie.ch/?start=1138169545&count=1

[11:05:00.0000] <AryehGregor>
So it will work fine as long as they're nested properly?

[11:05:01.0000] <AryehGregor>
Why is it even invalid, in that case?

[11:07:00.0000] <Hixie>
it's more often an indication of a mistake than intentional

[11:08:00.0000] <AryehGregor>
Really?  How so?

[11:11:00.0000] <Hixie>
<p><b>.... <p><b>... <p><b>...

[11:11:01.0000] <AryehGregor>
Oh.

[11:11:02.0000] <AryehGregor>
Hmm.

[11:11:03.0000] <Hixie>
there are very few times you ever need to actually nest paragraphs

[11:11:04.0000] <Ms2ger>
<p><span><ul>

[11:11:05.0000] <Hixie>
arguably there are no times because it's meaningless, though in practice there are times where it's not completely meaningless

[11:11:06.0000] <Ms2ger>
/me still wishes that happened

[11:12:00.0000] <AryehGregor>
Oh, so in that case it will actually nest the paragraphs?  Yeah, I can see why you'd want to avoid that, then.

[11:12:01.0000] <Hixie>
it'll nest the <p>s in the case above, yeah

[11:12:02.0000] <AryehGregor>
Although why can't you make the paragraph nesting invalid, while still allowing <b><p>Foo <p>Bar</b>?

[11:12:03.0000] <Hixie>
you can also nest paragraphs with just one <p>, as in  "foo bar<b>baz  <p>foo bar"

[11:12:04.0000] <AryehGregor>
If you close your <b> then it's not relevant, though, is it?

[11:13:00.0000] <AryehGregor>
So just make the lack of closing tag the error.

[11:13:01.0000] <Hixie>
it turns out the syntax gets really unintuitive if you allow <p> inside things like <b>

[11:13:02.0000] <Hixie>
we could do it

[11:13:03.0000] <Hixie>
but i don't think people would thank us on the long run

[11:13:04.0000] <Hixie>
it'd be a different matter if </p> wasn't optional

[11:13:05.0000] <AryehGregor>
Hmm.

[11:13:06.0000] <Hixie>
also, semantically given our definitions of the various phrasing elements, there's very few cases where it makes sense

[11:14:00.0000] <Hixie>
(for <i> there's a better argument, admittedly)

[11:14:01.0000] <AryehGregor>
How about for things like <ol>, where the ending tag isn't optional anyway?

[11:14:02.0000] <AryehGregor>
There are cases where you want to <strong> or <small> multiple paragraphs in a row, for example.

[11:14:03.0000] <Hixie>
yeah, there are cases where it makes sense

[11:15:00.0000] <Hixie>
the problem is that it interacts poorly with previous paragraphs, even in the <ol> case

[11:15:01.0000] <Hixie>
e.g. <small><ol>...</ol></small> should be allowed

[11:15:02.0000] <Hixie>
but <p>... <small><ol>...</ol></small> doesn't do what it looks like

[11:15:03.0000] <AryehGregor>
Ah.

[11:15:04.0000] <Ms2ger>
Depends on what it looks like to you, I guess :)

[11:15:05.0000] <AryehGregor>
That's an issue, yeah.

[11:16:00.0000] <AryehGregor>
Oh well.

[11:16:01.0000] <Hixie>
for a while we had the spec allow nesting <ol>s inside <p>s

[11:16:02.0000] <Hixie>
primarily for xhtml

[11:16:03.0000] <Ms2ger>
Hmm, you're right

[11:16:04.0000] <Hixie>
we even for a while had the <span> thing ms2ger described above

[11:16:05.0000] <AryehGregor>
But if it's invalid anyway, I'm not going to worry, I'll just allow stuff like <b><listing>foo</listing></b> or whatever to happen in the odd case you have such an element.

[11:16:06.0000] <Hixie>
but it doesn't really work sadly

[11:16:07.0000] <AryehGregor>
I mean, given that it parses okay when you serialize the DOM.

[11:16:08.0000] <AryehGregor>
I assumed it didn't parse right.

[11:17:00.0000] <Hixie>
AryehGregor: yeah for execCommand() i think the guideline to use is "don't make a conforming document non-conforming"

[11:17:01.0000] <AryehGregor>
Hixie, in practice it looks like there has to be some mode that can make the document non-conforming, because at least e-mail clients seem to need to use <font> if they want to be understood by, e.g., Blackberry.

[11:17:02.0000] <Hixie>
AryehGregor: when you start with a non-conforming document, it doesn't really matter critically what happens

[11:18:00.0000] <AryehGregor>
The HTML/CSS engines in some common e-mail clients appear to be terrible.

[11:18:01.0000] <TabAtkins>
They don't appear to be.  They are.

[11:18:02.0000] <AryehGregor>
But I'll see if we can get away with making that a non-default mode.

[11:18:03.0000] <TabAtkins>
/me shudders at the memories.

[11:18:04.0000] <Hixie>
yeah the e-mail use case might need a different mode

[11:18:05.0000] <Hixie>
but in that mode just pretend <font> is conforming and my statement still holds :-)

[11:18:06.0000] <TabAtkins>
I don't understand how people ever did table-based layouts.  I did two complex emails using them, and it was the worst coding experience of my life.

[11:18:07.0000] <AryehGregor>
They were the only thing that worked.

[11:18:08.0000] <Hixie>
TabAtkins: indeed

[11:24:00.0000] <TabAtkins>
Argh, can I please have XML5 SVG already?  Quoting attribute values is so annoying.  >_<

[11:24:01.0000] <AryehGregor>
Serve as text/html.

[11:25:00.0000] <TabAtkins>
That doesn't let me use it as an image.

[11:25:01.0000] <AryehGregor>
It should.

[11:25:02.0000] <AryehGregor>
File bugs.

[11:25:03.0000] <AryehGregor>
:)

[11:26:00.0000] <TabAtkins>
Problem is that we probably don't want to allow HTML as an image in general.

[11:26:01.0000] <TabAtkins>
We do a lot of (non-interoperable) hacks to make SVG less objectionable as an embedded image.

[11:26:02.0000] <zewt>
AryehGregor: personally I'd be happy with email clients universally refusing to apply fonts in emails. heh

[11:26:03.0000] <zewt>
it boggles the mind that gmail doesn't have an option to ignore fonts in html mail

[11:27:00.0000] <Ms2ger>
zewt++

[11:28:00.0000] <Ms2ger>
Myself, I'd be even happier without HTML email

[11:29:00.0000] <zewt>
certain limited uses are okay, but I decide what font and color I read mail in, not the other guy

[11:33:00.0000] <TabAtkins>
Particularly, most people that set the font color of their emails don't follow the basic accessibility guidelines of also setting the background-color, often rendering it unreadable for me.

[12:54:00.0000] <annevk>
Hixie, "Create an event that uses the MessageEvent interface, with the name text" should be named message just like Web Sockets

[13:31:00.0000] <AryehGregor>
Has anyone ever found that sometimes WebKit's Web Inspector inconsistently refuses to let you set a breakpoint at some line on a script, sometimes until you reload the page and sometimes until you restart?

[13:32:00.0000] <AryehGregor>
I've had that lately with Chrome dev, and it's really really annoying.

[13:32:01.0000] <AryehGregor>
Clicking on a line, or picking "Add breakpoint" from the context menu, just does nothing.

[13:33:00.0000] <AryehGregor>
On the other hand, Firebug routinely just claims there are no scripts on the page.

[13:34:00.0000] <Ms2ger>
I think that happened to me when going back/forward in history

[13:34:01.0000] <zewt>
i gave up on firebug long ago; always made firefox unusably flaky

[13:34:02.0000] <zewt>
even when not using it

[13:36:00.0000] <AryehGregor>
I've also found that WebKit sometimes doesn't update the Elements view in Web Inspector properly until you close and reopen it.

[13:36:01.0000] <AryehGregor>
It's really incredibly annoying.

[13:36:02.0000] <AryehGregor>
But I don't have a reduced test-case or anything, it's unreliable.

[13:40:00.0000] <jgraham>
/me finds that kind of problem all the time with all page inspectors

[13:40:01.0000] <jgraham>
But yeah, the bugs all seem to be stateful and hard to reproduce on demand

[13:41:00.0000] <AryehGregor>
I didn't try at all to reproduce it, admittedly.

[13:44:00.0000] <AryehGregor>
I feel like it didn't used to happen, with Web Inspector.

[13:44:01.0000] <AryehGregor>
(dunno about Firebug)

[14:59:00.0000] <AryehGregor>
Ms2ger, did I ever ask you to take my tests for createContextualFragment()?

[14:59:01.0000] <AryehGregor>
Ms2ger, they're here: http://aryeh.name/spec/dom-parsing-and-serialization/test/

[14:59:02.0000] <Ms2ger>
Ooh, nice

[15:01:00.0000] <Ms2ger>
Oh, did you update Anolis, btw?

[15:08:00.0000] <AryehGregor>
When?

[15:14:00.0000] <Ms2ger>
After --dump-xrefs broke :)

[15:15:00.0000] <AryehGregor>
I just stopped dumping my xrefs for editcommands.  It's going to be merged into HTML5 eventually anyway, so it's not like anyone will ever want them.

[15:15:01.0000] <Ms2ger>
That makes sense

[15:18:00.0000] <TabAtkins>
Hmm, is there an easy way to tell if I'm 32 or 64 bit on Ubuntu?

[15:19:00.0000] <AryehGregor>
TabAtkins, uname -a should do it.

[15:20:00.0000] <TabAtkins>
Excellent, thank you.

[15:20:01.0000] <AryehGregor>
uname -m, more specifically.

[15:20:02.0000] <TabAtkins>
Well, -a gave me sufficient information for me to find an appropriate-looking value.

[15:20:03.0000] <TabAtkins>
I'm gonna try out Sublime Text 2 as an editor, and needed to know which build to use.

[15:21:00.0000] <AryehGregor>
Cool: http://src.chromium.org/viewvc/chrome?view=rev&revision=77860

[15:22:00.0000] <zewt>
hmm

[15:23:00.0000] <zewt>
but that may encourage people to put site titles as prefixes, when so far people have been encouraged to make them suffixes, which is better

[15:23:01.0000] <zewt>
eg. "text - Google Search" instead of "Google Search - text"

[15:29:00.0000] <AryehGregor>
Yes, the real solution is just to have people who use site name prefixes die in a fire.

[15:29:01.0000] <AryehGregor>
But sometimes it's not practical.

[15:30:00.0000] <AryehGregor>
E.g., consider a message board with a multipage thread, and the user is viewing the first page.

[15:30:01.0000] <zewt>
sure, but if people see it and start using prefixes where they would have otherwise used suffixes, it's a loss

[15:30:02.0000] <AryehGregor>
Do you do "Thread title - Page 1 - Site Name" or "Page 1 - Thread title - Site Name"?  Presumably the latter.

[15:30:03.0000] <AryehGregor>
Er, the former.

[15:30:04.0000] <AryehGregor>
But then what if the user is viewing multiple pages at once?

[15:30:05.0000] <AryehGregor>
I think people use prefixes because they didn't think about it, so I'm not too worried about that.

[15:31:00.0000] <zewt>
personally I don't understand why vertical tabs are so poorly supported; they're a much more obvious way of listing tabs

[15:31:01.0000] <zewt>
afaik only Opera supports it natively and Firefox with some questionably-supported extensions

[15:32:00.0000] <AryehGregor>
Why don't OSes do it?

[15:32:01.0000] <zewt>
it's one of the main things keeping me from using Chrome

[15:32:02.0000] <zewt>
they can

[15:32:03.0000] <AryehGregor>
Anyway, it doesn't bother me.

[15:32:04.0000] <AryehGregor>
Yeah, I guess they can.

[15:32:05.0000] <AryehGregor>
Pretty sure Windows and GNOME do, at least.

[15:32:06.0000] <TabAtkins>
zewt: Switch to a portrait-orientation on your monitor.  Then tabs at the top make more sense.

[15:32:07.0000] <zewt>
heh

[15:33:00.0000] <TabAtkins>
You need a monitor large enough that the narrow side is at least 1024, though.

[15:33:01.0000] <zewt>
i typically have 30-50 tabs open per browser window; horizontal tabs are a non-starter

[15:33:02.0000] <TabAtkins>
Ah, k.  Stop doing that, then?

[15:33:03.0000] <TabAtkins>
That was my solution.

[15:33:04.0000] <zewt>
i like doing that; it works well for me

[15:34:00.0000] <TabAtkins>
Sure, except that it's harder to get the tabs to display right for you. ^_^

[15:34:01.0000] <zewt>
right now I'm using one of those aforementioned extensions, but it's not ported to FF4 yet...

[15:34:02.0000] <gsnedders>
zewt: Use Opera? :P

[15:34:03.0000] <zewt>
i used to :)

[15:34:04.0000] <AryehGregor>
I used to use a Firefox extension that allowed multiple rows of tabs.

[15:34:05.0000] <AryehGregor>
Worked pretty well.

[15:35:00.0000] <AryehGregor>
There were scrollbars if it got beyond three.

[15:35:01.0000] <AryehGregor>
Tab Mix Plus, it was called.

[15:35:02.0000] <AryehGregor>
Then I realized extensions are a horrible idea and switched to Chrome.

[15:35:03.0000] <zewt>
(using FF for the typical reason: too much stuff in extensions it has that Opera doesn't)

[15:35:04.0000] <zewt>
i use TMP+VertTabbar

[15:36:00.0000] <zewt>
most of the blockers for using chrome are fixed (abp, stylish, a couple other things), but the vertical tab thing is still in the way

[15:37:00.0000] <zewt>
(also not crazy about my process list being totally filled with dozens of Chrome processes, heh)

[15:39:00.0000] <zewt>
jesus, someone sure is dissertationing about D&D on the list, heh

[15:41:00.0000] <TabAtkins>
I really wish drap-n-drop wasn't abbreviated to D&D or DnD.  That already carries strong and hard-to-overwrite connotations in my head.

[15:42:00.0000] <zewt>
"Proposal: add dice rolling methods to the D&D API"

[15:51:00.0000] <TabAtkins>
I kinda want to file a bug on that.

[15:51:01.0000] <TabAtkins>
Except I don't want to waste Hixie's time.

[15:51:02.0000] <zewt>
heh

[15:52:00.0000] <Hixie>
do i abbreviate it anywhere?

[15:52:01.0000] <TabAtkins>
I doubt it, unfortunately.

[15:52:02.0000] <Hixie>
problem solved!

[15:52:03.0000] <TabAtkins>
My bug would be about adding dice-rolling methods.

[15:52:04.0000] <Hixie>
hah

[15:53:00.0000] <gsnedders>
TabAtkins: Using a how many sided die?

[15:53:01.0000] <TabAtkins>
Well, that's clearly a parameter to the methods.

[15:53:02.0000] <zewt>
NaN

[15:54:00.0000] <aho>
NaN NaN NaN NaN batman :v

[15:55:00.0000] <zewt>
:|

[16:27:00.0000] <hober>
sidedness could be a new CSS unit

[16:27:01.0000] <hober>
20d

[16:27:02.0000] <hober>
oof, that looks like 20 old pence

[16:41:00.0000] <TabAtkins>
hober: units are allowed (per the grammar) to have numbers in them, so 20d6 can be a valid CSS value, using the 'd6' unit.

[16:42:00.0000] <zewt>
that leads to the question of metaunits

[16:42:01.0000] <zewt>
eg. width: 2d6em

[16:42:02.0000] <zewt>
i just made myself sad

[16:42:03.0000] <TabAtkins>
That's calc( 2d6 * 1em )

[16:43:00.0000] <TabAtkins>
(Given that the dX units are subtypes of <integer>, I guess.)

[16:45:00.0000] <zewt>
though that raises the question of when the value is resolved; having a new width chosen during each reflow would be unpleasant

[16:45:01.0000] <TabAtkins>
Indeed, that's a harder problem.

[16:47:00.0000] <AryehGregor>
/me will be interested to see the answer to his comments here: http://blogs.msdn.com/b/ieinternals/archive/2011/03/14/internet-explorer-hidden-images-styled-with-display-none-always-have-zero-0-height.aspx

[16:49:00.0000] <TabAtkins>
Yeah, that behavior is clearly broken, as it means that <img>s which haven't yet been inserted into the document (and thus aren't participating in layout) should return 0 as well.

[16:49:01.0000] <zewt>
that's pretty evil

[16:49:02.0000] <zewt>
happen to know if it happens if the image isn't hidden, but it's in a container which is?

[16:49:03.0000] <TabAtkins>
If the container is display:none?  Should be the same.

[16:50:00.0000] <zewt>
i regularly do that to preload images (without using the evil load-images-without-putting-them-in-a-document hack)


2011-03-15
[17:02:00.0000] <zewt>
gah

[17:02:01.0000] <zewt>
alright, can anyone give me a plausible explanation for this which has driven me insane for years: "if your download doesn't start in 15 seconds..." and a redirect to download links, instead of plain standard old download links, heh

[17:03:00.0000] <zewt>
so broken and it's hard to think up even an implausible explanation

[17:05:00.0000] <TabAtkins>
Those types of things typically use an iframe pointing to the file with appropriate headers to trigger an automatic download prompt.

[17:05:01.0000] <zewt>
which is the same thing you'll get with a plain download link

[17:05:02.0000] <TabAtkins>
Not necessarily, if it's a type of file that the browser thinks it can handle itself.

[17:05:03.0000] <TabAtkins>
Also: more branding!

[17:05:04.0000] <zewt>
that's what content-disposition: attachment is for (iirc)

[17:06:00.0000] <zewt>
and it's so broken--breaks browser copy-link, and in the case of the Firefox upgrade I just did, it happily pops up another download prompt after I restart the session (since the download page is still open)

[17:08:00.0000] <TabAtkins>
Yup, it really shouldn't be necessary anymore.

[18:31:00.0000] <zewt>
missing messages in the archive? http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/029492.html should be http://www.mail-archive.com/whatwgâlwo/msg24505.html

[18:48:00.0000] <Hixie>
zewt: weird

[19:06:00.0000] <zewt>
looks like the list indexes are broken when the trailing slash is missing from the URL

[19:06:01.0000] <zewt>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-February vs http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-February/

[19:06:02.0000] <Hixie>
not much i can do about it, it's a dreamhost thing

[23:52:00.0000] <abarth>
Hixie: is there an easy what to see which rev you removed <device> in?

[23:52:01.0000] <abarth>
i don't see it on http://twitter.com/whatwg

[23:53:00.0000] <zcorpan>
it was  http://html5.org/r/5945

[23:55:00.0000] <abarth>
yhx

[00:12:00.0000] <zcorpan>
Hixie: <p><b>.... <p><b>... <p><b>... won't nest the <p>s! don't you know the parsing algorithm by heart? :)

[01:49:00.0000] <hsivonen>
I guess I should do community service and draw a flowchart now that IE9 is final...

[02:24:00.0000] <hsivonen>
Am I reading the CSS 2.1 spec under /TR/ wrong or is its "Features at risk" out of sync with the actual spec requirements as far as the HTML body background rule goes?

[02:25:00.0000] <hsivonen>
it says the there's the risk that the exception might be extended to XHTML, but AFAICT, it has already been extended in the spec

[02:25:01.0000] <hsivonen>
and implemented across the top 4 engines, too

[02:25:02.0000] <zcorpan>
yeah, it's out of sync

[02:25:03.0000] <hsivonen>
are there now any CSS differences between XML and HTML Standards Mode?

[02:25:04.0000] <zcorpan>
i pointed that out when the spec was changed a few years ago

[02:26:00.0000] <zcorpan>
i think only in Selectors case-sensitivity

[02:26:01.0000] <hsivonen>
zcorpan: thanks.

[03:26:00.0000] <hsivonen>
Findings so far: IE9 sticks to the IE8 notion of what's quirky. Doesn't align with HTML5 and other browsers.

[03:31:00.0000] <zcorpan>
also for comment before doctype?

[03:34:00.0000] <hsivonen>
zcorpan: didn't test that yet

[03:51:00.0000] <smaug____>
/me doesn't understand how the new Stream + video is supposed to work. In what format is the Blob created from Stream? Do all the browsers need to support that?

[04:22:00.0000] <Lachy>
smaug____, the spec says "Generate a file that containing data in a format supported by the user agent for use in audio and video elements."

[04:23:00.0000] <Lachy>
so it seems that browsers could save the file as WebM (VP8/Vorbis) or MP4 (h.264/AAC) or whatever they choose

[04:24:00.0000] <smaug____>
so the whole PeerConnection would work well only it both ends support same codecs

[04:24:01.0000] <Lachy>
that just means that if the website wants to accept those file uploads, then the servers are going to need to have support for both formats

[04:24:02.0000] <Lachy>
the P2P stuff is more complicated, as you will only be able to stream between browsers that support the same formats

[04:24:03.0000] <Lachy>
right

[04:25:00.0000] <smaug____>
That is bad

[04:25:01.0000] <smaug____>
leaving a major point of the feature unspecified

[04:25:02.0000] <Lachy>
yeah, it sucks big time. We just need to make sure we can make WebM successful for that purpose

[04:25:03.0000] <smaug____>
(which is ofc the case with <video> too)

[04:26:00.0000] <jgraham>
smaug____: Yeah, it does suck. Not sure what the alternative is though :(

[04:26:01.0000] <Lachy>
but we haven't implemented that stuff yet. Only what we announced yesterday, which was initial support for <device> and the ability to play that in a <video> element. We should be able to change the new API easily though.

[04:27:00.0000] <Lachy>
I mean, change *to* the new API easily

[04:27:01.0000] <smaug____>
I'm not sure I like the PeerConnection anyway

[04:28:00.0000] <smaug____>
the whole thing reminds a lot like WebSockets (with support for Streams), but with different protocols

[04:30:00.0000] <jgraham>
Isn't being like websockets a good thing?

[04:30:01.0000] <jgraham>
Or are you saying that we should reuse websockets?

[04:31:00.0000] <smaug____>
we could perhaps have just one API

[04:31:01.0000] <smaug____>
with support for different protocols

[04:33:00.0000] <jgraham>
I wonder if Hixie has looked at the design of 0mq

[04:33:01.0000] <jgraham>
It does multiple protocols / connection topologies with more or less a single API

[04:34:00.0000] <jgraham>
AFAIK

[04:34:01.0000] <jgraham>
/me has never used it but has read the manual

[04:34:02.0000] <jgraham>
Or parts thereof

[04:51:00.0000] <smaug____>
hmm, so implementation would need to encode video stream to webm and then show it in <video> ?

[04:51:01.0000] <smaug____>
though, perhap using the URL.createObjectURL doesn't require any encoding

[04:52:00.0000] <smaug____>
erm, but that is done for Stream, and Stream needs to be encoded...

[04:55:00.0000] <smaug____>
Lachy: how does that work with <device>? Do you first encode the video and then decode using <video> ?

[04:57:00.0000] <Lachy>
there is some magic in the back end that somehow renders the video directly from the camera without encoding as webm first.

[04:58:00.0000] <smaug____>
actually, <device> allows that quite easily, but with Streams that is not so easy

[04:59:00.0000] <Lachy>
the new API will also allow that quite easily, at least as far as rendering it locally is concerned. The recording or P2P streaming features will require webm encoding though.

[05:41:00.0000] <benschwarz>
Hi all

[05:43:00.0000] <zcorpan>
hi benschwarz

[05:50:00.0000] <benschwarz>
zcorpan he did it

[05:51:00.0000] <benschwarz>
(your tweet)

[05:52:00.0000] <zcorpan>
yeah

[05:52:01.0000] <zcorpan>
though i guess it still has default phpbb3 styles

[05:53:00.0000] <benschwarz>
zcorpan: its a start

[05:53:01.0000] <hsivonen>
Are "Compatibility Mode Settings" gone in IE9 or do I just have trouble finding them?

[06:07:00.0000] <hsivonen>
found it

[06:08:00.0000] <hsivonen>
required menu bar

[06:08:01.0000] <hsivonen>
well hidden!

[06:24:00.0000] <smaug____>
does Opera implement xhr.timeout?

[06:35:00.0000] <zcorpan>
smaug____: no

[06:35:01.0000] <smaug____>
ok

[06:35:02.0000] <smaug____>
then it is still easy to change it, since no one has implemented it

[06:36:00.0000] <smaug____>
zcorpan: thanks

[06:37:00.0000] <zcorpan>
how do you want to change it?

[06:37:01.0000] <smaug____>
zcorpan: it should be possible to cancel the timeout

[06:37:02.0000] <smaug____>
and perhaps also change it after send()

[06:38:00.0000] <smaug____>
about to send an email about this to webapps

[06:38:01.0000] <zcorpan>
maybe also set in UNSENT state?

[06:39:00.0000] <smaug____>
why does it need to be limited at all

[06:39:01.0000] <smaug____>
well, at all after opened

[08:42:00.0000] <jgraham>
Yay! Working group decision on ascii-ref means we get to waste even more time on arguing about the decision

[09:59:00.0000] <dylanw>
I'm trying to understand why header/footer are inline and not block elements. Could someone point me in the direction of that discussion?

[10:00:00.0000] <Ms2ger>
There's no such distinction

[10:00:01.0000] <Ms2ger>
But I think you're misinterpreting something, because they are what some would call block elements

[10:01:00.0000] <TabAtkins>
They're not inline, they're flow elements.  The default UA stylesheet sets them to display:block.

[10:01:01.0000] <TabAtkins>
http://www.whatwg.org/specs/web-apps/current-work/complete/rendering.html#display-types

[10:01:02.0000] <dylanw>
FF3.6 by default has them display:inline

[10:02:00.0000] <dylanw>
browser bug?

[10:02:01.0000] <TabAtkins>
That's because it doesn't know what the elements are.  Unknown elements are display:inline by default.

[10:04:00.0000] <dylanw>
So then FF3.6 doesn't actually support HTML?

[10:05:00.0000] <TabAtkins>
It doesn't understand several of the new HTML elements, no.

[10:05:01.0000] <TabAtkins>
3.6 is relatively old at this point.

[10:07:00.0000] <dylanw>
OK, I understand. I misinterpreted flow. And apparently so did the Moz crew.

[10:07:01.0000] <dylanw>
Thx

[10:07:02.0000] <TabAtkins>
No, Moz did not misinterpret it.  3.6 doesn't implement those elements at all.

[10:08:00.0000] <jgraham>
dylanw: To be fair all Mozilla did wrong was to have a long release cycle

[10:08:01.0000] <TabAtkins>
(Most flow elements are display:block, actually.)

[10:08:02.0000] <TabAtkins>
(Maybe all?)

[10:09:00.0000] <dylanw>
anchors are listed as flow

[10:10:00.0000] <dylanw>
yeah, the current flow list is a mix of classical block (div) and inline (abbr)

[10:10:01.0000] <TabAtkins>
Hmm, I'm surprised that abbr is flow.  That sounds like it should be phrasing content.

[10:11:00.0000] <dylanw>
It's both.

[10:11:01.0000] <TabAtkins>
Indeed.  I wonder why it's flow at all, though?

[10:11:02.0000] <dylanw>
It seems, and I'm just doing this prima facie

[10:11:03.0000] <dylanw>
that flow only means you're probably a block

[10:11:04.0000] <dylanw>
flow+phrasing you're probably inline

[10:12:00.0000] <dylanw>
though p is the obvious exception

[10:12:01.0000] <dylanw>
wait, no, p isn't phrasing

[10:12:02.0000] <dylanw>
duh. has its own section

[10:12:03.0000] <TabAtkins>
Ah, never mind, lots of elements are flow+phrasing.

[10:13:00.0000] <dylanw>
HTML standard never really specifies whether something is a "block"

[10:14:00.0000] <TabAtkins>
Yes it does, in the rendering section.

[10:14:01.0000] <TabAtkins>
Which I linked. ^_^

[10:15:00.0000] <dylanw>
OK, I see now

[10:17:00.0000] <dylanw>
I'll just use that as a reset stylesheet

[10:18:00.0000] <dylanw>
thx

[10:18:01.0000] <TabAtkins>
Nah, it's not quite good enough for a reset stylesheet, since it uses some things that aren't supported in CSS.  Use html5boilerplate.com

[10:21:00.0000] <dylanw>
Hadn't seen Paul's stuff yet.

[10:21:01.0000] <dylanw>
HTML makes me feel like I'm back in 2000 again screaming at Netscape 4's DOM.

[10:26:00.0000] <AryehGregor>
abbr is flow content, but can only be used where phrasing content is expected . . . so what does it mean that it's flow content?

[10:26:01.0000] <AryehGregor>
Oh, of course.

[10:26:02.0000] <AryehGregor>
It means you can do <div><abbr>Foo</abbr></div> or such, right?

[10:26:03.0000] <AryehGregor>
Wait, no.

[10:26:04.0000] <AryehGregor>
You can't.

[10:26:05.0000] <AryehGregor>
/me is confused now

[10:29:00.0000] <jgraham>
"Flow COntent" doesn't mean much

[10:29:01.0000] <jgraham>
s/O/o/

[10:30:00.0000] <jgraham>
Just that the element represents part of the document rather than part of the metadata, or something

[10:31:00.0000] <jgraham>
Not even that

[10:32:00.0000] <jgraham>
Just "stuff that appears in the body"

[10:33:00.0000] <jgraham>
So for abbr the important requirement is that it can only be used where phrasing content is expected

[10:34:00.0000] <jgraham>
Hixie: You around yet?

[11:08:00.0000] <TabAtkins>
Wow, once you remove the filters and fonts from SVG, it's actually a pretty small and manageable spec.

[11:22:00.0000] <TabAtkins>
Hm, how appropriate is it to break up a table into sub-tables purely by using some rows as new headers?  I want multiple related tables that all size their cells the same.

[11:24:00.0000] <hsivonen>
TabAtkins: even with <use> in place?

[11:24:01.0000] <TabAtkins>
Huh?

[11:24:02.0000] <TabAtkins>
Oh, SVG.

[11:24:03.0000] <TabAtkins>
One sec, breaking for lunch.

[12:00:00.0000] <Hixie>
jgraham: here

[12:01:00.0000] <Hixie>
smaug____: yes, PeerConnection would work well only it both ends support same codecs. I suppose I could put in the spec "user agents must implement the codecs that other user agents implement" but I doubt it would help...

[12:01:01.0000] <Ms2ger>
Hixie, Objection!

[12:02:00.0000] <Hixie>
to what?

[12:02:01.0000] <Hixie>
my being here? :-)

[12:02:02.0000] <smaug____>
Hixie: that would at least make it clear that PeerConnection works only in some cases

[12:02:03.0000] <Ms2ger>
To a requirement to implement codecs other UAs implement

[12:03:00.0000] <Hixie>
if the goal is to point out that PeerConnection's media streaming features are only going to interoperate between implementations that are interoperable, I think there'd be better ways to do it

[12:03:01.0000] <Hixie>
but it seems pretty self-evident to me

[12:03:02.0000] <Ms2ger>
Well, most things are only going to interoperate between implementations that are interoperable, no?

[12:03:03.0000] <Hixie>
precisely

[12:04:00.0000] <Ms2ger>
The question is how much interoperability the spec requires/can require

[12:04:01.0000] <Hixie>
for codecs, currently, none, as far as i can tell

[12:05:00.0000] <smaug____>
Could there be some hint which codecs are supported and then the other end wouldn't even try to connect if the right codecs weren't supported?

[12:05:01.0000] <Hixie>
there is

[12:05:02.0000] <Hixie>
it uses SDP offer/answer

[12:05:03.0000] <Hixie>
same as SIP

[12:06:00.0000] <smaug____>
but PeerConnection isn't about playing any stream

[12:06:01.0000] <smaug____>
One could just save the stream

[12:06:02.0000] <smaug____>
/me needs to re-read PeerConnection

[12:06:03.0000] <Hixie>
you're only allowed to save the stream if you can write it out in a format you support, currently

[12:07:00.0000] <Hixie>
(the goal is to enable video conferencing, not remote stream saving, so i think it makes sense to natively support the codec negotiation use case and probably doesn't make sense to allow arbitrary unsupported streams to be sent)

[12:12:00.0000] <smaug____>
Hixie: why you're allowed to save only stream you support?

[12:12:01.0000] <smaug____>
it would make sense to save the stream and perhaps use some other program to open it

[12:12:02.0000] <Hixie>
the actual requirement is that you be able to render streams you generate

[12:12:03.0000] <smaug____>
that way you couldn't really "stream" anything, but at least send videos

[12:12:04.0000] <Hixie>
so that you can always view local video

[12:13:00.0000] <smaug____>
sure, that is a different thing

[12:13:01.0000] <smaug____>
but if you get some other format from the other end

[12:16:00.0000] <Hixie>
well the idea is that you can't get an unsupported stream, so... :-)

[12:16:01.0000] <smaug____>
:)

[12:17:00.0000] <smaug____>
the whole Streaming needs to be extended a bit

[12:18:00.0000] <smaug____>
so that sending random files becomes possible etc.

[12:18:01.0000] <smaug____>
I also wonder if there could be just one API for streaming-like communication, not two WebSockets and PeerConnection

[12:22:00.0000] <zewt>
they're different enough that trying to merge them would probably end up more complex than the sum of the two separate APIs

[12:25:00.0000] <smaug____>
they are not that different

[12:25:01.0000] <smaug____>
though both APIs will change so we don't know what they will look like

[12:26:00.0000] <zewt>
maybe

[12:26:01.0000] <zewt>
always the tricky issue--between trying to generalize things, and overgeneralizing

[12:27:00.0000] <smaug____>
true

[12:27:01.0000] <Hixie>
smaug____: what's the use case?

[12:28:00.0000] <smaug____>
atm it would be still rather easy to change both APIs since neither of them are being used

[12:28:01.0000] <zewt>
particularly early in design where, as you said, where it's going hasn't solidified yet

[12:28:02.0000] <smaug____>
Hixie: use case? to keep web platform easier for developers by not adding too many APIs

[12:28:03.0000] <smaug____>
note, I'm not sure whether merging the APIs would be good, but something to think about

[12:29:00.0000] <Hixie>
no i mean for streaming unsupported media

[12:29:01.0000] <smaug____>
oh

[12:29:02.0000] <Hixie>
i agree that we should keep the APIs consistent

[12:29:03.0000] <Hixie>
i've got a bit more work to do on that shortly

[12:30:00.0000] <smaug____>
streaming unsupported message... say, someone wants to send me some video message, and I can't use my browser to show it on live, but I could just save it and use some other tool to watch it

[12:30:01.0000] <Hixie>
that seems like an extremely rare case that could just as easily be supported (possibly more easily be supported) by having the file be relayed through the server

[12:31:00.0000] <smaug____>
true, which is a reason why I said sending files/blobs should be supports

[12:31:01.0000] <smaug____>
supported

[12:31:02.0000] <Hixie>
you're saying we _should_ support it because it's rare and not needed? i'm confused.

[12:32:00.0000] <smaug____>
well, it would be natural to support sending all kinds of streams

[12:33:00.0000] <smaug____>
but if that case can be handled by just sending blobs, that is ok too

[12:33:01.0000] <Hixie>
i don't understand why it's natural to want to do P2P transfer of data that needs to be transmitted reliably and for which latency is not an issue.

[12:33:02.0000] <TabAtkins>
I need to poke around the issue with our idea for just ripping streams off of <input type=file accept>, so we have a nice consistent API living in the DOM.

[12:33:03.0000] <Hixie>
if anything it seems highly _un_natural to me

[12:35:00.0000] <smaug____>
Hixie: well, currently sending files isn't really supported by PeerConnection

[12:35:01.0000] <Hixie>
right, because it's rare and unnecessary

[12:35:02.0000] <smaug____>
ph

[12:35:03.0000] <smaug____>
er

[12:35:04.0000] <smaug____>
oh

[12:35:05.0000] <smaug____>
:)

[12:35:06.0000] <smaug____>
Hixie: how so?

[12:35:07.0000] <smaug____>
is the idea to send files using some other mechanism?

[12:35:08.0000] <Hixie>
yeah. XHR to the server.

[12:36:00.0000] <Hixie>
peer-to-peer transfer is hugely complicated but has one redeeming feature: low latency.

[12:36:01.0000] <smaug____>
ah

[12:36:02.0000] <Hixie>
if you don't need low latency, then really peer-to-peer transfer is far more pain than it's worth.

[12:37:00.0000] <smaug____>
hmm, not sure I like that a server needs to store some huge file before someone else can download it from there

[12:37:01.0000] <Hixie>
doesn't have to be stored, it can just be relayed.

[12:38:00.0000] <Hixie>
(if you use websockets(

[12:38:01.0000] <Hixie>
))

[12:39:00.0000] <smaug____>
but that causes still quite a bit network traffic to the server

[12:39:01.0000] <smaug____>
I wonder how skype works when sending files

[12:39:02.0000] <zewt>
proprietarily :)

[12:39:03.0000] <zewt>
(also, very poorly, in my experience)

[12:39:04.0000] <Hixie>
if users really transfer files to and from each other a lot, then it's a different matter

[12:40:00.0000] <Hixie>
but seriously, who does that anymore?

[12:40:01.0000] <zewt>
these days they're called "torrents"

[12:40:02.0000] <zewt>
things no javascript networking API is going to be thorough enough to support: torrents :)

[12:41:00.0000] <zewt>
(thankfully)

[12:41:01.0000] <smaug____>
anyone who needs to send huge audio file packages for mixing for example

[12:41:02.0000] <smaug____>
it is quite handy to use Skype to send a new mix of some song

[12:41:03.0000] <Hixie>
zewt: actually there's not really any reason you couldn't build torrents on PeerConnection as far as I can tell

[12:41:04.0000] <zewt>
one use case (not claiming it's a common one): web IRC clients, with DCC transfers or equivalent

[12:41:05.0000] <Hixie>
smaug____: you wait for the other person to be online to do that? that seems unlikely.

[12:42:00.0000] <zewt>
(it's common for IRC, though usually for bad reasons)

[12:42:01.0000] <Philip`>
People occasionally try to send me files (text files, images, etc) over MSN

[12:42:02.0000] <zewt>
same thing for sending files over IM clients in general, I guess

[12:42:03.0000] <Philip`>
(which fails because I use Bitlbee)

[12:42:04.0000] <zewt>
(let's say the same thing simultaneously, ready go)

[12:43:00.0000] <AryehGregor>
Hixie, people commonly spend all day on these messaging thingies.

[12:43:01.0000] <smaug____>
exactly

[12:43:02.0000] <AryehGregor>
I just idle on MSN all the time, except that when I reboot I forget and don't restart it because I never use it.

[12:43:03.0000] <Hixie>
for sending small files, relaying is fine

[12:43:04.0000] <zewt>
i'd argue not

[12:43:05.0000] <AryehGregor>
But I idle on IRC all the time, which is the same sort of idea.

[12:44:00.0000] <zewt>
when you have millions of users on an IM network, relaying every file transfer through centralized servers is a pretty hefty server requirement when it can often be completely elimianted

[12:44:01.0000] <zewt>
eliminated

[12:45:00.0000] <Hixie>
as the only person here who actually works for a company who runs an IM network as far as I know, I'm not at all convinced. :-)

[12:45:01.0000] <zewt>
i'd say typical size for files over IM clients is a few megs, at least (eg. larger than text files, but typically not CD images)

[12:45:02.0000] <Hixie>
trying to do it peer-to-peer probably means far more support costs than it would cost just to do it via relay

[12:45:03.0000] <TabAtkins>
Hixie: to be fair, the chat network is well-integrated into the email client, so there's little need to directly transfer files through the chat.

[12:45:04.0000] <smaug____>
Hixie: does anyone actually use Google's IM ;)

[12:46:00.0000] <Hixie>
TabAtkins: well yeah, exactly

[12:46:01.0000] <zewt>
Hixie: i think your company has more bandwidth available than most :)

[12:46:02.0000] <TabAtkins>
smaug____: ...yes?  It's the only IM client I use, largely because I have gmail up at all times.

[12:46:03.0000] <smaug____>
/me has stopped using gmail web client

[12:46:04.0000] <zewt>
most IM clients are entirely peer-to-peer for file transfers, I *think*

[12:47:00.0000] <zewt>
or at the very least, most of the time with some kind of fallback (Skype feeds files through other users when it can't make a direct connection, which doesn't work very well--too slow)

[12:48:00.0000] <smaug____>
but usually Skype's file transfer works really well

[12:48:01.0000] <Philip`>
MSN apparently has 350 million active users per month (as of 2009), which is apparently about double Gmail's users

[12:48:02.0000] <zewt>
(not saying this is necessarily a use case that this API should try to handle--just that it is a real case)

[12:48:03.0000] <Hixie>
anyway. we can always add features later. we can't remove features. so let's start small.

[12:48:04.0000] <zewt>
(not familiar enough with the API to argue the former)

[12:48:05.0000] <Hixie>
especially when it's not clear we need the features :-)

[12:50:00.0000] <smaug____>
/me goes jogging and will think about a monster API which combines WebSockets and PeerConnection and which supports file transfer and any type of video streams :)

[12:57:00.0000] <hsivonen>
wasn't it part of the plan to be able to filter the bytes that come from Web Socket / Peer Connection before pushing them to a video decoder?

[12:58:00.0000] <Hixie>
there was a plan?

[12:58:01.0000] <hsivonen>
so that sites that implement their own obfuscations schemes in JS and stop whining about the lack of built-in DRM

[12:58:02.0000] <Hixie>
oh, no, i have no plan to support that kind of thing.

[12:58:03.0000] <Hixie>
the current model would support it though, fwiw. We'd just have to create a descendant of Stream that takes a Stream as input and invokes a callback regularly or some such.

[12:59:00.0000] <hsivonen>
Hixie: so if the current model would support it, you are planning on enabling it

[12:59:01.0000] <hsivonen>
even if not deliberately

[12:59:02.0000] <Hixie>
no

[12:59:03.0000] <Hixie>
the model could be extended to support it, it doesn't support it currently.

[13:00:00.0000] <hsivonen>
Hixie: oh

[13:00:01.0000] <Hixie>
and i'm not planning on enabling it, though it could be enabled as a side-effect of the design.

[13:00:02.0000] <Hixie>
a hallmark of good design is that it enables all kinds of things that weren't planned for :-)

[13:02:00.0000] <tw2113>
i think after this side of Pearl Jam's album Ten is done spinning, i should hit up the post office quick

[13:08:00.0000] <tw2113>
oops, wrong room :D

[13:55:00.0000] <jgraham>
Hixie: Would it be possible for you to look at the Mozilla history API changes soon?

[13:55:01.0000] <Hixie>
how soon is soon?

[13:56:00.0000] <jgraham>
Well the sooner the better, really

[13:56:01.0000] <jgraham>
But obviously it is your schedule :)

[13:56:02.0000] <Hixie>
i have to do something about issue 152, i'm already late with issue 147, and i have to send this feedback on p2p stuff

[13:57:00.0000] <Hixie>
also have to update the websocket api spec

[13:57:01.0000] <Hixie>
oh and issue 131 is coming up

[13:57:02.0000] <Ms2ger>
jgraham, obviously you should touch all older bugs :)

[13:58:00.0000] <Hixie>
oh man, 155 and 144 are coming up too

[13:59:00.0000] <jgraham>
Ms2ger: Or stop the HTMLWG chairs from cluttering up Hixie's life with fixed deadline issues that don't correspond to things I care about

[13:59:01.0000] <jgraham>
Not sure how to do that though

[13:59:02.0000] <Hixie>
well one way is to write the CCPs for those, that would really help

[13:59:03.0000] <Ms2ger>
That works too

[14:00:00.0000] <Hixie>
but i can understand if you're not inclined to do that :-)

[14:00:01.0000] <Hixie>
jgraham: is there a specific thread for the history stuff already in whatwg.org/issues?

[14:00:02.0000] <Hixie>
or bug#?

[14:00:03.0000] <Ms2ger>
There's a bug

[14:00:04.0000] <Ms2ger>
I think you filed it

[14:01:00.0000] <Hixie>
k

[14:01:01.0000] <jgraham>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=12277

[14:02:00.0000] <jgraham>
I think making me write CCPs for the multimedia stuff would not be a winning strategy :)

[14:08:00.0000] <Hixie>
could you write one for 147?

[14:08:01.0000] <Hixie>
anyway, i think i should be able to get to the history stuff in the near future

[14:08:02.0000] <Hixie>
(as in within the next month)

[14:08:03.0000] <Hixie>
keep bugging me about it

[14:14:00.0000] <jgraham>
Hixie: OK, thanks

[14:31:00.0000] <twisted>
hi, question, in Chrome background-size works if I put it on 80%. In Firefox it doesn't. I've checked and now also have the -moz-background-size set but still nothing in Firefox...

[14:31:01.0000] <twisted>
what am I doing wrong?

[14:43:00.0000] <TabAtkins>
Does the version of FF you're testing against support background-size?

[14:47:00.0000] <aho>
https://developer.mozilla.org/en/css/-moz-background-size

[14:47:01.0000] <aho>
3.6 requires a prefix, 4.0 doesnt anymore

[14:53:00.0000] <twisted>
using 4.0

[14:53:01.0000] <twisted>
http://twixted.hatkeintuv.de:8888/all4wheels/ that's the site in question

[14:54:00.0000] <twisted>
if you inspect the element #main-menu li a

[14:54:01.0000] <twisted>
it does show the css it should use but somehow it doesn't do anything with it

[14:58:00.0000] <TabAtkins>
Try changing the 'background' declaration on line 7 to just background-image.

[14:58:01.0000] <TabAtkins>
That *shouldn't* affect anything, but FF may be buggy and reseting the -size property when you use the background shorthand.

[14:59:00.0000] <twisted>
it now dissapeared completely

[14:59:01.0000] <twisted>
even went *poof* in chrome

[14:59:02.0000] <twisted>
lemme check

[14:59:03.0000] <TabAtkins>
Oh, right.  The no-repeat value there would then need to be pulled out into background-repeat.

[15:00:00.0000] <twisted>
whoo

[15:00:01.0000] <twisted>
works

[15:00:02.0000] <TabAtkins>
If that worked, then FF is buggy.  File a bug, please?

[15:00:03.0000] <twisted>
firefox actually does the center center more nicely then chrome

[15:00:04.0000] <twisted>
uhm, where?

[15:01:00.0000] <TabAtkins>
bugzilla.mozilla.org

[15:01:01.0000] <twisted>
cool I will

[15:03:00.0000] <twisted>
funny since I fixed it in Firefox now Chrome suddenly also does it properly centered

[15:04:00.0000] <TabAtkins>
Same deal - background-size was being reset by the 'background' rule, because 'background' was more specific than all the background-* rules you had set generally on the links.

[15:05:00.0000] <TabAtkins>
Why are you doing this with backgrounds, though?  Why not just use an <img> with @alt, rather than putting in real text, hiding it, then putting in an image via the background property?

[15:16:00.0000] <twisted>
TabAtkins: because drupal #^@#%& sucks

[15:17:00.0000] <twisted>
already had to make a custom function to get an extra span

[15:17:01.0000] <TabAtkins>
Ah, indeed it does.  I recommend not using it.

[15:17:02.0000] <twisted>
well considering the budget for this website

[15:17:03.0000] <twisted>
it's probably the cheapest solution

[15:17:04.0000] <twisted>
joomla really sucks

[15:17:05.0000] <twisted>
wordpress is for blogs

[15:18:00.0000] <TabAtkins>
I've been reasonably happy with Django, if you really need a CMS.

[15:22:00.0000] <twisted>
I unfortuanly spend waaay too much time already on Drupal atm to switch

[15:27:00.0000] <twisted>
still didn't get my bugzilla email :p

[15:27:01.0000] <twisted>
ah spam folder lol

[15:30:00.0000] <AryehGregor>
/me suspects he could construct a minimal test-case for the really annoying Web Inspector bug in Chrome, with some effort

[15:30:01.0000] <AryehGregor>
Unfortunately, I lack the time to expend effort.

[15:31:00.0000] <AryehGregor>
I think that when scripts are reloaded and change, it still partially caches the old version of the script sometimes, which means it only lets you set breakpoints at lines that you could have set breakpoints at in the previous version of the file.

[15:31:01.0000] <TabAtkins>
Your margins is too narrow?

[15:35:00.0000] <twisted>
TabAtkins: https://bugzilla.mozilla.org/show_bug.cgi?id=641977

[15:52:00.0000] <zot-->
dreaming of the day we can have some consistency in keyboard shortcuts for web apps :|

[15:53:00.0000] <zewt>
chrome seems really good at it, not eating many alt- keys; but everyone else...

[15:54:00.0000] <twisted>
TabAtkins: happy to have been able to file a bug!

[15:55:00.0000] <TabAtkins>
Thanks for doing so!

[15:56:00.0000] <zewt>
can't even use , and . as hotkeys--Opera users get irate

[15:57:00.0000] <TabAtkins>
We need a new hyper key which is explicitly reserved for use by apps.

[15:58:00.0000] <zewt>
heh

[15:58:01.0000] <zewt>
every time a new encapsulation layer is added to computers, a new key is needed

[15:58:02.0000] <zewt>
windows key, control key, web key

[16:07:00.0000] <TabAtkins>
Just do what I do and say that you get the web key when you press Alt+Ctrl+Windows at the same time.

[16:07:01.0000] <TabAtkins>
(I use this combo to move between desktops.)

[16:09:00.0000] <zewt>
i'll avoid using key combinations that many keyboards physically can't register. heh

[16:14:00.0000] <zewt>
heh, i'm half-inclined to just stomp over browser hotkeys (since they'll let you, generally) for web apps, so long as they don't give a better option :|

[16:27:00.0000] <hober>
TabAtkins: we just need to get everyone to use the space cadet keyboard; then we'll have several modifiers for use by web apps

[16:31:00.0000] <TabAtkins>
hober: Yup, that'd work.

[16:32:00.0000] <zewt>
browsers just need to let go of alt/meta :|

[16:33:00.0000] <zewt>
was easier for chrome to do (from the beginning) than for old browsers (with users and user habits), but I think it's just something to get over

[16:44:00.0000] <TabAtkins>
twisted: Sorry for misinforming you - I somehow missed the 'background-size' in the list of properties that the 'background' shorthand reset.

[16:44:01.0000] <TabAtkins>
So Firefox's behavior is correct, Chrome's isnt.

[16:46:00.0000] <twisted>
huh, but isn't the idea of CSS that it overrides based on cascading?

[16:47:00.0000] <twisted>
so my latter definition of the size should still affect it

[16:47:01.0000] <twisted>
and not ignore?

[16:49:00.0000] <TabAtkins>
twisted: the selector setting the plain 'background' property has higher specificity.

[16:58:00.0000] <twisted>
then it still doesn't get overidden?

[16:59:00.0000] <TabAtkins>
No, because the 'background' shorthand acts like all the component properties were being set instead.  Thus, the "background-size:initial" that is implied by your rule overrides the "background-size:80%" that you actually have.

[16:59:01.0000] <TabAtkins>
Same with the background-position.


2011-03-16
[17:05:00.0000] <twisted>
but then how can I override the 80% to the 100% later?

[17:05:01.0000] <twisted>
cause that works...

[17:10:00.0000] <TabAtkins>
I don't understand the question.

[17:16:00.0000] <twisted>
TabAtkins: well, if I define a background: the initial gets set and can't be overriden you say

[17:16:01.0000] <twisted>
but then why can a background-size be overridden when it has been set?

[17:16:02.0000] <twisted>
or is initial some special thing that can't change anymore?

[17:20:00.0000] <TabAtkins>
No, it gets overridden because the 'background' property has higher specificity than your 'background-size' declaration.  It's not permanent or unfixable.  You can either set the individual property with a higher-specificity selector, or switch away from using the shorthand, since it's unnecessary in your case.

[17:21:00.0000] <TabAtkins>
(Just move 'background-repeat:no-repeat' to the general rules for "#main-menu > li > a", and then use background-image in the specialized rules.

[17:21:01.0000] <twisted>
yep that's what I did

[17:22:00.0000] <twisted>
just that background: ended up there because of laziness and simply because it *worked* in chrome but didn't in firefox and saw no real reason why it shouldn't have worked :)

[17:22:01.0000] <twisted>
/me goes very deeply by the if it works don't fix it concept

[17:22:02.0000] <TabAtkins>
Except it didn't work in Chrome - the background property was resetting your background-position rule. ^_^

[17:22:03.0000] <twisted>
anyway :) ttyl, gotta get up early to bring my gf to the foot-specialist to figure out what she exactly broke

[17:23:00.0000] <twisted>
TabAtkins: true :)

[17:23:01.0000] <twisted>
cool thanks for the help

[17:23:02.0000] <twisted>
hehe

[17:23:03.0000] <TabAtkins>
np

[17:23:04.0000] <twisted>
/me saved this channel in autojoin

[17:24:00.0000] <twisted>
have to join it each time but forget

[17:24:01.0000] <twisted>
hehe

[18:10:00.0000] <aho>
eh... why is there no panning for Audio?

[18:10:01.0000] <aho>
kinda sucks for games :v

[18:10:02.0000] <TabAtkins>
Because <audio> is very simplistic, like <canvas>.  This is being solved by a more advanced api designed by the guy sitting across from me.

[18:10:03.0000] <zewt>
audio filtering is a whole API in and of itself

[18:12:00.0000] <aho>
canvas is like 2 steps above audio

[18:12:01.0000] <kinetik>
aho: there are a couple of groups working on more powerful audio APIs.

[18:12:02.0000] <aho>
ye, i know... i was just very surprised that there isnt even panning

[18:13:00.0000] <aho>
i was even able to do that with java's midi stuff :P

[18:13:01.0000] <zewt>
1d panning alone is pretty limiting; what about 2d (surround) and 3d (environmental) panning? may as well throw in environmental reverb and modelling too :P

[18:14:00.0000] <zewt>
of course, it's always frustrating when the line is drawn for an API's scope just *barely* below where you need it at the time, heh

[18:15:00.0000] <aho>
for now i would be happy if i could a) play sounds, b) without delay, c) w/o stutter, d) w/o randomly breaking, and e) with some little panning :>

[18:16:00.0000] <zewt>
without delay is hard, too :P

[18:16:01.0000] <aho>
currently only opera's sound is somewhat ok-ish (even though it also got that latency issue like all other browsers)

[18:17:00.0000] <aho>
it comes from a data uri and was load()ed once

[18:17:01.0000] <aho>
there shouldn't be any delay

[18:17:02.0000] <zewt>
not that simple at the OS level--it takes a lot more work to get "interactive" levels of delay than to get reliable streaming for music/video

[18:20:00.0000] <aho>
dunno... works fine in java, with openal, or things like fmod

[18:20:01.0000] <aho>
or flash :>

[18:21:00.0000] <aho>
no idea why browser vendors don't manage to get it right

[18:21:01.0000] <kinetik>
aho: because they haven't tried yet?

[18:21:02.0000] <aho>
i wasn't talking about panning

[18:22:00.0000] <kinetik>
nor was i.

[18:22:01.0000] <aho>
chrome for example goes silent after a few minutes

[18:22:02.0000] <zewt>
openal still exists? i seem to recall looking at its source ~10 years ago and it being some of the worst I'd ever seen (like, 8-12 levels of indentation per function)

[18:22:03.0000] <zewt>
(but being 10 years ago, I may be thinking of something else)

[18:23:00.0000] <aho>
firefox is kinda stuttery... 3.6 totally fails at short samples

[18:23:01.0000] <aho>
ie9 also doesnt work right

[18:23:02.0000] <zewt>
guessing most audio implementations to start are focusing on the music use case more than games

[18:24:00.0000] <zewt>
don't really know, though

[18:25:00.0000] <roc>
kthe short-sample bug might be fixed in Firefox 4

[18:26:00.0000] <kinetik>
it is, it was also windows only iirc.

[18:26:01.0000] <zewt>
what I'd like to know is why browsers are allowing <audio> without asking permission, heh

[18:27:00.0000] <zewt>
audio is not something any page should be able to do without asking first

[18:27:01.0000] <roc>
I agree it is strange we are speccing out new A/V features at breakneck speed while basic stuff doesn't work too well across browsers :-)

[18:28:00.0000] <aho>
roc, yes short samples work a lot better now

[18:28:01.0000] <zewt>
both ff4 and chrome will happily obnoxiously play music without any kind of permission :|

[18:29:00.0000] <aho>
was possible with flash too

[18:29:01.0000] <zewt>
and that's exactly why I use flashblock

[18:30:00.0000] <aho>
guess browsers will add some volume control thingy at some point

[18:30:01.0000] <aho>
would make sense, i guess

[18:30:02.0000] <zewt>
it's strange that new browser APIs are written with limiting how obnoxious webpages can be in mind, but <audio> gets deployed without that

[18:31:00.0000] <zewt>
i guess audioblock won't be far off :)

[18:33:00.0000] <roc>
because for 99% of users, Web pages have been able to play audio since forever

[18:33:01.0000] <jarib>
3

[18:34:00.0000] <jarib>
<

[18:34:01.0000] <jarib>
>.

[18:34:02.0000] <jarib>
>.

[18:34:03.0000] <jarib>
<.>

[18:34:04.0000] <jarib>
woops. sorry :)

[18:34:05.0000] <zewt>
"flash does it wrong" is not a reason to excuse core web features from doing things wrong

[18:34:06.0000] <zewt>
(flash does lots of things wrong)

[18:35:00.0000] <aho>
ah... opera got a sound on/off thing since ages

[18:36:00.0000] <zewt>
a major thing needed is a way to find out who's playing sound (via any API); eg. an icon in Chrome's task manager

[18:36:01.0000] <aho>
doesnt seem to have any effect though... (i'm using the hyper glitchy webgl build) ;>

[18:36:02.0000] <zewt>
yeah that wasn't my Chrome window

[18:37:00.0000] <aho>
ye, like background tabs which play sound get their favicon replaced by a speaker icon (or a mini UV meter thingy)

[18:37:01.0000] <zewt>
so many times I've loaded a browser session, had sound start playing from some random tab and had to go hunting to figure out which, heh

[18:38:00.0000] <roc>
those are good ideas

[18:44:00.0000] <uf0>
should there be more than one <h1> on a page?

[20:02:00.0000] <Hixie>
i'm looking for people willing to take up writing CCPs for 131, 147, 155, and 144 (in that order), in case anyone is interested

[20:03:00.0000] <Hixie>
(i'm happy to help out, but am getting tired of taking point on these things)

[22:22:00.0000] <hober>
Hixie: I'll take a look at those issues in the morning and let you know which (if any) I'll take

[22:22:01.0000] <Hixie>
cool, thanks

[22:25:00.0000] <Hixie>
i wonder what PeerConnection.close() should do

[22:26:00.0000] <Hixie>
abrubtly end all communication? remove all the media streams and restart ICE (which will notify the other side that all the streams got removed)? send a simple packet to the other side telling it to abort everything?

[22:27:00.0000] <Hixie>
stop sending data but keep receiving it?

[22:28:00.0000] <Hixie>
i guess in the typical use case there has to be some out-of-band signaling separate from the SDP signaling channel

[22:28:01.0000] <Hixie>
and that's likely to be where the apps first agree that the session is ending

[22:28:02.0000] <Hixie>
so we don't need to be graceful at the ICE level

[22:55:00.0000] <Hixie>
abarth: our discussion the other day resulted in http://www.whatwg.org/specs/web-apps/current-work/complete.html#the-data-stream

[22:55:01.0000] <abarth>
reading

[22:58:00.0000] <abarth>
encrypted twice.  interesting

[22:59:00.0000] <Hixie>
yeah. the other layer is supposed to be actual encryption, the inner layer is supposed to make it so that there's never a known plaintext.

[22:59:01.0000] <Hixie>
but i don't know how much that makes sense, so i'm just calling it masking. :-)

[22:59:02.0000] <Hixie>
s/other/outer/

[23:00:00.0000] <abarth>
looks reasonable

[23:00:01.0000] <Hixie>
cool

[23:00:02.0000] <abarth>
i bet you could combine those two layers somehow if you needed to save a few bytes

[23:00:03.0000] <abarth>
i'm not sure i understand the constraints on the outer layer

[23:00:04.0000] <Hixie>
it wouldn't save bytes, just CPU, right?

[23:01:00.0000] <abarth>
ah

[23:01:01.0000] <abarth>
yes

[23:01:02.0000] <Hixie>
originally i had the key be generated from the HMAC of the ice-key, the salt, and the nonce

[23:02:00.0000] <abarth>
that could work too

[23:02:01.0000] <Hixie>
but i was lying in bed and thinking about it and it struck me that since an attacker would always know the salt, could always get the nonce by inspection, and could likely engineer a known plaintext (the first four bytes are always 0x00 0x00 0x00 0x01 for example), that might not be as secure

[23:02:02.0000] <zewt>
blah spec crashing firefox, time to see if session saves thing i've been typing for 20 minutes...

[23:02:03.0000] <Hixie>
but i have no idea really

[23:03:00.0000] <abarth>
that's not really an issue

[23:03:01.0000] <Hixie>
seems that the maths would be harder this way, but likely no less possible

[23:03:02.0000] <abarth>
you should think of AES-128-CTR has giving your a stream of random bytes to XOR with the message

[23:03:03.0000] <abarth>
for all intents and purposes, they bytes are really random if you don't know the key

[23:04:00.0000] <Hixie>
ah ok

[23:04:01.0000] <Hixie>
so one layer would be just as good?

[23:04:02.0000] <abarth>
yeah

[23:04:03.0000] <Hixie>
k

[23:05:00.0000] <abarth>
i assume you've looked at this: http://tools.ietf.org/html/draft-jennings-rtcweb-api-00

[23:06:00.0000] <Hixie>
don't think i've seen that one yet

[23:06:01.0000] <Hixie>
everybody and their dog seems to be writing requirements docs

[23:07:00.0000] <hsivonen>
hooray! WebKit landed async=false.

[23:14:00.0000] <Hixie>
abarth: k, spec updated to just use one layer

[23:21:00.0000] <zewt>
should there be a hash of the data within the packet, too, to prevent randomly tampering with encrypted packets?

[23:22:00.0000] <zewt>
(that's not implicit in -CTR, right? been a while...)

[23:22:01.0000] <abarth>
depends if you want integrity protection

[23:23:00.0000] <abarth>
CTR has zero integrity protection

[23:23:01.0000] <Hixie>
there's also the risk of replay attacks

[23:23:02.0000] <abarth>
at some point you're re-inventing DTLS

[23:27:00.0000] <Hixie>
does DTLS work without having to negotiate certs and stuff?

[23:27:01.0000] <Hixie>
we have a signaling channel here for that kind of stuff

[23:28:00.0000] <Hixie>
it would be unfortunate if our UDP data channel also had to do all kinds of stuff like that

[23:33:00.0000] <zewt>
without integrity protection, if an attacker knows a single, full packet (eg. a handshaking packet that's always the same), he can derive the key from the packet, then use that key over and over to generate whatever fake data he wants

[23:34:00.0000] <zewt>
(worse than just a replay attack)

[23:34:01.0000] <Hixie>
i thought AES-128-CTR prevented that

[23:34:02.0000] <Hixie>
(in principle)

[23:34:03.0000] <Hixie>
(for current technology)

[23:34:04.0000] <zewt>
CTR is supposed to never reuse a key

[23:35:00.0000] <Hixie>
right, it doesn't

[23:35:01.0000] <zewt>
by increasing a counter for each packet

[23:35:02.0000] <Hixie>
we have a nonce for each packet

[23:35:03.0000] <zewt>
but the key is determined by the sender, right?

[23:35:04.0000] <zewt>
right, the 16 random bytes--but nothing prevents me from taking your 16 random bytes and just using them again and again

[23:35:05.0000] <Hixie>
the key for each packet is a combination of the salt in the spec, the nonce, and the connection key

[23:36:00.0000] <Hixie>
sure, but that's just a replay attack

[23:36:01.0000] <Hixie>
you can't get the key from that

[23:36:02.0000] <Hixie>
(except by brute force)

[23:36:03.0000] <zewt>
i can get the key from an encrypted packet and a decrypted packet

[23:36:04.0000] <zewt>
(not the original AES key, the nonce+salt+ice-key key)

[23:36:05.0000] <Hixie>
abarth earlier asserted that you couldn't

[23:37:00.0000] <Hixie>
what's the difference between the original AES key and the nonce+salt+ice-key key?

[23:37:01.0000] <zewt>
correct me if I'm forgetting how it works, but AES-128-CTR is basically taking the input key (nonce+salt+ice-key), generating a securely-random block of bytes, and XORing those bytes with the plaintext

[23:38:00.0000] <zewt>
so if I know the plaintext (eg. handshaking packet) and I know the encrypted data (sniffing), I can XOR to get those random bytes back

[23:38:01.0000] <zewt>
then I can reuse the 16 random bytes (causing it to use the same random bytes), and then spoof whatever data I want

[23:38:02.0000] <Hixie>
well if that's correct then i should go back to the double-encryption thing i had specced earlier

[23:39:00.0000] <Hixie>
but abarth suggested it was not

[23:39:01.0000] <zewt>
i think here, the "counter" (in -CTR terms) in your scheme is the nonce?

[23:39:02.0000] <Hixie>
and i tend to trust abarth :-)

[23:41:00.0000] <zewt>
it's late and I'll look at it more tomorrow when I'm not tired, but I think for this to work the way you want, you'd want a counter in each packet that can only increase--but that won't work since UDP packets can come in out of order

[23:42:00.0000] <Hixie>
if what you describe is accurate, which isn't clear to me, then the previously-specced solution should work fine

[23:42:01.0000] <Hixie>
since it encrypts the nonce

[23:42:02.0000] <Hixie>
so that there's no known plaintext

[23:42:03.0000] <zewt>
have a URL to that version of the spec? i'll look at it tomorrow

[23:43:00.0000] <Hixie>
see the diff :-)

[23:43:01.0000] <Hixie>
(on tracker)

[23:43:02.0000] <zewt>
i don't even know where the diffs go :)

[23:43:03.0000] <Hixie>
(linked from the spec)

[23:43:04.0000] <zewt>
k found it

[23:45:00.0000] <zewt>
i think the missing piece here is you don't actually have a counter anywhere

[23:46:00.0000] <zewt>
the inputs to AES-128-CTR are the key, the plaintext and the counter--you only have the first two, so it's just plain AES-128

[23:46:01.0000] <zewt>
anyway 'night

[23:47:00.0000] <abarth>
"i can get the key from an encrypted packet and a decrypted packet"  <--- that's not really true

[23:49:00.0000] <Hixie>
so you can't just take an encrypted packet and the plaintext, xor them, xor the result with a new plaintxt, and send it on its way?

[23:49:01.0000] <abarth>
or rather, if you could, you could break AES and make lots of money by hacking the banking system

[23:49:02.0000] <abarth>
oh, you can alter the data in a single packet all you like

[23:49:03.0000] <abarth>
that's what we mean when we say there's no integrity

[23:49:04.0000] <abarth>
but that doesn't help you learn the contents of the message

[23:50:00.0000] <Hixie>
wouldn't my double-encryption thing protect you from that too?

[23:50:01.0000] <abarth>
nope

[23:50:02.0000] <Hixie>
why not?

[23:51:00.0000] <abarth>
imagine you knew the plain text was "attack at dawn"

[23:51:01.0000] <abarth>
the bytes on the wire are "attack at dawn" XOR something

[23:51:02.0000] <abarth>
so you take those bytes and XOR them with ("attack at dawn" XOR "let's do lunch")

[23:52:00.0000] <abarth>
it doesn't matter what the something is

[23:52:01.0000] <abarth>
the "attack at dawn"s cancel out

[23:52:02.0000] <abarth>
and the message decrypts to "let's do lunch"

[23:53:00.0000] <Hixie>
fair enough

[23:54:00.0000] <abarth>
if you want integrity, you need to do something like MAC the message using SHA1-HMAC

[23:54:01.0000] <abarth>
you can generated a key for that using the ice-key and another salt

[23:54:02.0000] <abarth>
to be precise, you should MAC the ciphertext

[23:55:00.0000] <Hixie>
what would you do with the MAC?

[23:56:00.0000] <abarth>
if you got a message with a bogus mac, you'd ignore it

[23:56:01.0000] <Hixie>
i don't follow

[23:56:02.0000] <Hixie>
how would you know it's bogus?

[23:57:00.0000] <abarth>
since the receiver knows the ice-key and the salt

[23:57:01.0000] <abarth>
he knows the mac-key

[23:57:02.0000] <Hixie>
i'm missing something here

[23:57:03.0000] <abarth>
ok

[23:57:04.0000] <abarth>
backing up

[23:58:00.0000] <abarth>
if we're worried about someone changing the message enroute

[23:58:01.0000] <abarth>
(rather than just learning the contents of the message)

[23:58:02.0000] <abarth>
we need some way for the receiver to drop messages that have been changed, right?

[23:58:03.0000] <Hixie>
right.

[23:58:04.0000] <abarth>
the most common approach to doing that

[23:59:00.0000] <abarth>
is to send something like a checksum with the message

[23:59:01.0000] <abarth>
that both the sender and receiver can compute

[23:59:02.0000] <abarth>
but the attacker cannot

[23:59:03.0000] <abarth>
so if the messages arrives with the correct checksum

[23:59:04.0000] <abarth>
the receiver knows it was sent by the sender at some point in the past

[23:59:05.0000] <Hixie>
ohh, you're saying send the MAC with the message

[23:59:06.0000] <Hixie>
got it

[23:59:07.0000] <abarth>
yes

[00:00:00.0000] <abarth>
that still doesn't solve the replay problem

[00:00:01.0000] <Hixie>
replay is easy to solve at the application layer

[00:00:02.0000] <abarth>
yes

[00:00:03.0000] <Hixie>
hmmm

[00:00:04.0000] <Hixie>
/me ponders whether to add a checksum or not

[00:03:00.0000] <Hixie>
any reason it has to be a different salt, btw?

[00:03:01.0000] <abarth>
you're never supposed to use the same key for more than one thing

[00:04:00.0000] <Hixie>
fair enough

[00:05:00.0000] <Hixie>
ok filed a bug on that

[00:07:00.0000] <Hixie>
yeah DTLS isn't really appropriate here

[00:08:00.0000] <Hixie>
having to do a handshake as part of setting this up seems silly when we have a signaling channel

[00:08:01.0000] <abarth>
yep

[07:24:00.0000] <matjas>
TabAtkins: Whatâs up with your CSS feed?

[07:25:00.0000] <matjas>
Make that your entire website :o

[07:26:00.0000] <matjas>
http://downforeveryoneorjustme.com/xanthir.com

[07:51:00.0000] <zewt>
"<abarth> "i can get the key from an encrypted packet and a decrypted packet" <--- that's not really true" <- not the AES key; the resulting block of data AES generates to XOR with the plaintext

[07:56:00.0000] <zewt>
"<Hixie> replay is easy to solve at the application layer" <- if you mean by user code, I don't recommend it--users shouldn't need to worry about that layer of security; you could, for example, have each peer send the salt the other side should be using (instead of using a hardcoded salt), which would stop replay entirely

[08:04:00.0000] <zewt>
including a hash in the packet won't fix the known-plaintext problem; the fundamental problem is this is using CTR without having a counter (which doesn't really make sense, it's missing a parameter to the algorithm)

[08:07:00.0000] <TabAtkins>
matjas: Sorry, I let my account run out of money.  Funding it now...

[08:08:00.0000] <jgraham>
/me discovered once that letting your account run out of money is easy to do if all the email about impending doom goes to a dead or unused account

[08:08:01.0000] <jgraham>
Well I say once

[08:09:00.0000] <jgraham>
It was more like like twice in quick succession

[08:10:00.0000] <jgraham>
zewt: At risk of making an idiot of myself, don't you just start the counter at 0 at some point? So it doesn't need to be an input

[08:11:00.0000] <zewt>
jgraham: you have to specify what the counter is, it's not implicit--this is UDP, it's going to miss and reorder packets, so it's not as simple as "increment it once for each packet"

[08:15:00.0000] <TabAtkins>
jgraham: I got the $1 message a few days ago, I just didn't do anything with it.  Sometime overnight I got the "we've turned off your website" message.  ^_^  Back now, though.

[09:53:00.0000] <zcorpan>
hsivonen: webm.html5.org needs a snippet that people can use on their sites to show a link to webm.html5.org only when a webm video fails

[10:08:00.0000] <hober>
Hixie: OK, getting back to you on those CCPs.

[10:08:01.0000] <hober>
131 is the sort of thing I'd like to run by Maciej, but he's on vacation.

[10:09:00.0000] <hober>
WRT 147, we support Frank's CP.

[10:09:01.0000] <hober>
155 is not something we have any sort of position on, but I'm surprised to say that I personally agree with Leif on this one.

[10:10:00.0000] <hober>
(I can't say I ever expected to say that)

[10:10:01.0000] <hober>
Re: 144, we generate <u> in WebCore editing's applyStyle command, and don't intend to change that. All things being equal, we'd like the markup that we generate to be conforming.

[10:11:00.0000] <zcorpan>
hsivonen: maybe something like http://software.hixie.ch/utilities/js/live-dom-viewer/saved/883

[10:11:01.0000] <jgraham>
hober: Why do you agree with Leif for 155 (just curious)? Assume I haven't read or understood any or what Leif wroteâ¦

[10:12:00.0000] <hober>
jgraham: <table border=1> is the most succinct way to mark up a data table that survives syndication

[10:12:01.0000] <Philip`>
/me assumes that's not a far-fetched assumption

[10:13:00.0000] <hober>
Philip`: indeed, he's quite hard to follow most if not all of the time.

[10:16:00.0000] <jgraham>
Oh, is there actaully a CP just about border? I just read the issue titleâ¦

[10:18:00.0000] <jgraham>
(as a theoretical point, it seems that the "I want this to survive syndication" argument implies people don't really want seperation of content and style, they just want a convenient way of reusing style)

[10:19:00.0000] <hober>
jgraham: yeah, 155 is just about <table border>

[10:21:00.0000] <hober>
jgraham: In this case, I think the syndication argument is a pragmatic one. Personally, I want content and style to be separate. That said, if one of the most common methods for consuming my content mangles it in a way that makes it lose meaning, I'm happy to do something to avoid that

[10:21:01.0000] <hober>
Consider a data table which is a matrix of single digit numbers

[10:22:00.0000] <jgraham>
Right, I see that it could be bad to lose the border

[10:22:01.0000] <jgraham>
I'm wondering if it is ever the case that it could be bad to have the border

[10:22:02.0000] <jgraham>
Assuming one wasn't using tables for layout

[10:23:00.0000] <jgraham>
Otherwise, feed readers could add borders in their UA stylesheet

[10:23:01.0000] <hober>
If feed readers started doing that, that would be good New Information for revisiting the issue

[10:24:00.0000] <jgraham>
Right, in the absence of them actually doing that it seems that it could be pragmatic to allow authors to control it somehow

[10:25:00.0000] <jgraham>
In other news, I have no idea what the text at http://www.whatwg.org/specs/web-apps/current-work/#renderingUA means

[10:25:01.0000] <jgraham>
It sounds like "if a UA says it conforms to this section, it must conform to this section"

[10:26:00.0000] <hober>
jgraham: indeed

[10:27:00.0000] <AryehGregor>
hober, by applyStyle do you mean execCommand(), or is that something else that does a similar thing?

[10:27:01.0000] <jgraham>
Hmm, bug 12319 is at least the third time someone has made that mistake

[10:28:00.0000] <AryehGregor>
jgraham, it's saying that you can only claim to be "a visual user agent that supports the suggested default rendering" if you implement the rules in the rendering section.

[10:28:01.0000] <AryehGregor>
So it defines the term "a visual user agent that supports the suggested default rendering".

[10:29:00.0000] <zcorpan>
/me claims there are no user agents that support the suggested default rendering

[10:30:00.0000] <AryehGregor>
Well, yes.

[10:30:01.0000] <AryehGregor>
There are no user agents in any of the other conformance classes either, yet.

[10:31:00.0000] <zcorpan>
sure there is. i have a data mining tool that does nothing. i think it's a conforming data mining tool!

[10:33:00.0000] <zcorpan>
(it's my table; it's also a conforming HTML4 UA)

[10:34:00.0000] <hober>
jgraham: I think it's an internal noodly bit lower down than execCommand

[10:34:01.0000] <jgraham>
AryehGregor: ^

[10:35:00.0000] <jgraham>
Although I approve of the idea of noodly bits. Functional and tasty!

[10:36:00.0000] <AryehGregor>
hober, I'm writing an execCommand() spec right now.  Currently my plan is to have the default only output conforming elements, but if you set styleWithCSS = false, it will output stuff like <font> (for things like e-mail where you can't rely on clients supporting CSS).

[10:36:01.0000] <AryehGregor>
Of course, this will depend on what implementers think, since it's a change from the status quo.

[10:36:02.0000] <AryehGregor>
I do hope <u> becomes conforming, though.

[10:42:00.0000] <hober>
AryehGregor: link to your draft? I'll fwd it along to the right people over here

[10:42:01.0000] <hober>
which, now that I think about it, I think I've already done

[10:42:02.0000] <hober>
nvm

[10:42:03.0000] <AryehGregor>
hober, pretty sure they've seen it.  :)

[10:42:04.0000] <AryehGregor>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-March/030714.html

[10:43:00.0000] <AryehGregor>
I've had lots of discussion with rniwa in particular, and am busy rewriting the spec based on his input.

[10:43:01.0000] <AryehGregor>
Actually, WebKit people are the only ones who have given me much feedback so far.  Except for Hallvord of Opera, who gave me a bookmarklet to use to trace execCommand() usage in insanely complicated rich text editors like Gmail.

[10:44:00.0000] <AryehGregor>
Which I'll be sure to use at some point.

[10:56:00.0000] <TabAtkins>
Yay, I found a nearly up-to-date version of my Lists UA stylesheet that I generated off the old spec a while back!  That'll save me a lot of conversion efforts in rewriting the numeric and alphabetic lists.

[11:37:00.0000] <AryehGregor>
So apparently, bolding something in a text editor will only unbold it if the whole selection is already bold.

[11:37:01.0000] <AryehGregor>
Interesting.

[11:37:02.0000] <AryehGregor>
I thought it went according to the start, for some reason.

[11:39:00.0000] <TabAtkins>
Yes, that's the standard behavior.  If anything is unbold, it bolds it first.

[11:58:00.0000] <zewt>
Hixie: it may be worth considering just using DTLS, because: it deals with all of the security issues we've discussed; it deals with some that I havn't brought up yet (like being able to support new ciphers/hashes down the line); it may improve interoperability (for example, allowing comms with other systems supporting the existing protocol); openssl already supports it; it's already (I expect) thoroughly audited; ...

[12:13:00.0000] <Hixie>
hober: k

[12:14:00.0000] <Hixie>
hober: could you elaborate on 147?

[12:14:01.0000] <Hixie>
jgraham: all the conformance classes are opt-in, essentially

[12:14:02.0000] <Hixie>
jgraham: the goal of that particular clause though is to let people write a test suite for the rendering section

[12:15:00.0000] <hober>
Hixie: it's not really my area of expertise; maybe eric_carlson can elaborate

[12:18:00.0000] <Hixie>
for <u> and <table border> and layout tables i expect i'm just not going to bother fighting it for now; maybe fork the whatwg copy, maybe just wait a few more years and try again. It's sad that every time we try to help the cause of accessibility advocacy by removing the presentational aspects, people insist on trying to keep some.

[12:18:01.0000] <Hixie>
it's so shortsighted.

[12:18:02.0000] <Hixie>
but oh well.

[12:19:00.0000] <bfrohs>
Hixie: That's humanity for ya :)

[12:20:00.0000] <eric_carlson>
Hixie: what is hober volunteering me for?

[12:21:00.0000] <hober>
eric_carlson: ISSUE-147 (the playbackRate thing)

[12:21:01.0000] <eric_carlson>
Hixie: OK

[12:23:00.0000] <eric_carlson>
Hixie: the problem is that is really isn't always possible to play at an arbitrary rate

[12:25:00.0000] <eric_carlson>
Hixie: so the current behavior in browsers that support rates other than 1 and 0 is what Frank suggests

[12:26:00.0000] <Hixie>
eric_carlson: it's always possible, why would it not be?

[12:27:00.0000] <Hixie>
playing it back faster is just a matter of decoding it faster, playing it back slower is just a matter of decoding it slower. playing it backwards is, at the extreme, just a matter of decoding it forwards into a buffer then playing it backwards.

[12:29:00.0000] <eric_carlson>
Hixie: OK, "not possible" was poorly chosen

[12:30:00.0000] <Hixie>
well if it's just possible but hard, tat's just a quality of implementation issue

[12:30:01.0000] <Hixie>
lots of things in the platform are hard

[12:30:02.0000] <Hixie>
rendering box-shadow on a large box is apparently hard, but we don't say that browsers can just give up after a certain number of pixels

[12:30:03.0000] <zewt>
well, there's a difference between "hard" and "doesn't fit the design of the data" (eg. "you really don't want to do this")

[12:31:00.0000] <eric_carlson>
Hixie: most (all?) media frameworks don't support arbitrary playback rates, and while it may be possible to work around the issue with the tricks you note, it seems *extremely* unlikely that anyone will do it

[12:31:01.0000] <Hixie>
yeah, the difference is a quality of implementation difference

[12:31:02.0000] <zewt>
eg. in the extreme case, say, 30 seconds of HD data with no keyframes and not enough memory to hold the entire uncompressed video in memory at once, you may have to decode the entire video for each frame, which is O(n^2); that's worse than just "hard", it's pathologically broken

[12:32:00.0000] <Hixie>
eric_carlson: well then the media frameworks aren't good enough and need improving. that's hardly the first time we've had that problem. platform networking frameworks have had to be rewritten for web browsers, platform font support has had to be shored up for web browsers, etc. why is media special?

[12:32:01.0000] <hober>
this sounds like an area where we're likely to have browser behavior converge on frank's proposal and not what's currently in the spec

[12:32:02.0000] <Hixie>
sure, we'll always have coverage on subsets of the spec before the whole spec

[12:32:03.0000] <Hixie>
the question is what do we want in the future, not what we have now

[12:33:00.0000] <eric_carlson>
Hixie: aren't good enough because they don't implement a feature that isn't terribly useful?

[12:33:01.0000] <Hixie>
eric_carlson: if arbitrary playback speed isn't useful, let's remove the feature, not just make it optional to implement

[12:34:00.0000] <Hixie>
i was under the impression that it was in facD[D[D[D[D[D[D[Dt terribly useful

[12:34:01.0000] <Hixie>
er, "fact"

[12:34:02.0000] <eric_carlson>
Hixie: isn't that essentially what the CP suggests: "If the user agent is unable to play back media at the requested rate, ignore the requested rate; playbackrate must not change"

[12:34:03.0000] <Hixie>
eric_carlson: that's making the feature optional, not removing it.

[12:35:00.0000] <Hixie>
eric_carlson: i'm suggesting if we have the feature we should require that it be implemented

[12:35:01.0000] <Hixie>
eric_carlson: and that if we don't want the feature, we remove it

[12:35:02.0000] <zewt>
it should be optional, since whether it's possible (or real-world-reasonable) to play at a specific rate (particularly in reverse) depends heavily on the file being played (keyframe frequency, mostly)

[12:35:03.0000] <zewt>
if you want to support playing backwards then you have to encode a file with that in mind

[12:36:00.0000] <zewt>
(i'd expect in practice if it's "required", browsers are going to sort of fudge it, such as by only playing keyframes--which seems worse than honestly telling scripts "nope, can't do that")

[12:38:00.0000] <Hixie>
seems much better to me to fudge it than not do it

[12:38:01.0000] <eric_carlson>
zewt: I don't agree that playing only keyframes is necessarily a bad idea

[12:38:02.0000] <Hixie>
seems even better to just do it right

[12:38:03.0000] <zewt>
well, more specifically: as a developer I'd rather have feedback from the UA when the quality of a feature is significantly reduced

[12:39:00.0000] <zewt>
and granted doing so by disabling the feature and ignoring the setting isn't necessarily the best way of doing so

[12:39:01.0000] <Hixie>
i guess i should submit two CPs: "this feature isn't useful so we should remove it altogether, not make it essentially useless", and "this feature is implementable, so it's just a quality of implementation issue and we should not have the browser refuse to set the rate"

[12:40:00.0000] <Hixie>
i don't mind having metrics saying how well the video is playing

[12:40:01.0000] <Hixie>
we need that anyway

[12:45:00.0000] <zewt>
(of course, either way, i'd think this has got to be at the bottom of the pile of important things to be worried about right now, heh)

[12:46:00.0000] <zewt>
do these things just get forced on you out of order? heh

[13:03:00.0000] <espadrine>
God, ie9 now supports webm?!

[13:03:01.0000] <espadrine>
officially!

[13:06:00.0000] <miketaylr>
...with a plugin

[13:07:00.0000] <espadrine>
well, having them embrace it is pretty much the best we could hope for

[13:07:01.0000] <espadrine>
even with a plugin

[13:07:02.0000] <miketaylr>
better than nothing :)

[13:29:00.0000] <Philip`>
Sounds like IE9 supports WebM to the same extent that Safari support Theora

[13:34:00.0000] <aho>
safari doesnt even support audio on xp and vista

[13:35:00.0000] <aho>
i'm not really sure what's up with that

[13:35:01.0000] <aho>
(i.e. Audio is undefined)

[13:40:00.0000] <aho>
On Windows, if QuickTime is not installed, Safari is missing the "Audio" and "Video" APIs completely. - http://twitter.com/thomasfuchs/status/48095892976304129

[13:40:01.0000] <aho>
that explains it :)

[13:53:00.0000] <karlcow>
http://www.w3.org/mid/AANLkTinLGdDzxn=KatYoJSkum_NFz5ddJQsHG8jJCdJbâmgc

[13:53:01.0000] <karlcow>
Spellchecker for the DOM

[13:57:00.0000] <Hixie>
zewt: yeah, the chairs decide the order

[13:57:01.0000] <Hixie>
ok, bbiab

[14:17:00.0000] <TabAtkins>
Hixie: Is it worth it for me to transcribe the syriac characters into a @counter-style rule?  Looks like the language is dead, and it would be a lot of annoying copypaste.

[14:45:00.0000] <AryehGregor>
Wow, Eric Law is apparently very aggressive about editing his blog post comments: http://blogs.msdn.com/b/ieinternals/archive/2011/03/14/internet-explorer-hidden-images-styled-with-display-none-always-have-zero-0-height.aspx

[14:46:00.0000] <AryehGregor>
There were lots more before, and the one remaining one by me has been edited to point to the W3C spec instead of the WHATWG spec.

[14:46:01.0000] <TabAtkins>
That's... weird.

[14:46:02.0000] <AryehGregor>
Originally I linked to the WHATWG spec, then he asked if I had a W3C spec link, so I gave that.

[14:46:03.0000] <AryehGregor>
Then some other people posted comments.

[14:46:04.0000] <zewt>
that's unacceptable--you don't edit the writing of someone else, period

[14:46:05.0000] <AryehGregor>
Then my second comment disappeared, along with a bunch of other people's comments.

[14:47:00.0000] <AryehGregor>
Then I reposted some form of my second comment.

[14:47:01.0000] <AryehGregor>
Now he's removed all the other comments, including the ones he's left before; edited my first comment to link to the W3C spec; and added a response.

[14:47:02.0000] <AryehGregor>
Well, at least he filed a bug about it.

[14:48:00.0000] <zewt>
he's edited what you said to make it look like you said something you didn't; that's beyond unacceptable

[14:48:01.0000] <zewt>
the sort of thing that makes me angry even though it didn't even happen to me, heh

[14:51:00.0000] <AryehGregor>
Yeah, it's kind of objectionable.

[14:51:01.0000] <AryehGregor>
But oh well.

[14:51:02.0000] <AryehGregor>
I've had posts disappear before on various blogs, or never appear, but I don't think they were ever edited to make them say something they didn't before.

[14:52:00.0000] <TabAtkins>
Yeah, that's shitty.  The most I've seen is in-place edits with a note from the site author indicating what they edited, and then it was only for really minor things.

[14:53:00.0000] <zewt>
censoring comments is bad enough, but editing other people's messages directly--intuitively I put that in a similar level of unacceptability as plagiarism

[14:53:01.0000] <AryehGregor>
Meh, no need to get excited about it.

[14:53:02.0000] <AryehGregor>
It's not like Microsoft is usually any better than that.

[14:54:00.0000] <TabAtkins>
On an unrelated note, luckily one of the geocities-preserval projects contained the reference I needed from this unicode technical note.

[14:54:01.0000] <AryehGregor>
. . .

[14:54:02.0000] <AryehGregor>
What?

[14:55:00.0000] <TabAtkins>
One of the cited references in this note was a geocities page about tamil numbering.

[14:56:00.0000] <zewt>
references to geocities, heh

[14:56:01.0000] <zewt>
i suppose the modern-day analogue would be referencing a pastebin

[14:56:02.0000] <AryehGregor>
Really.

[14:57:00.0000] <AryehGregor>
That's a little bit sad.

[14:57:01.0000] <TabAtkins>
Well, the note itself appears to be hosted on scribd, which isn't any better.

[14:57:02.0000] <AryehGregor>
Although I guess it's not so different from html5.org references in the HTML5 draft.

[14:58:00.0000] <Philip`>
zewt: Not really, since Geocities was intended for permanent hosting of individuals' sites, whereas pastebins are generally intended to be temporary and anonymous

[14:58:01.0000] <AryehGregor>
Philip`, plenty of pastebins default to permanent storage.

[14:58:02.0000] <zewt>
well, most pastebins have "expire: never" options--but I wouldn't count on them, either

[15:00:00.0000] <Philip`>
AryehGregor: They're probably technically as permanent as Geocities, but I don't think they give the impression to users that they'll exist forever

[15:00:01.0000] <AryehGregor>
Did Geocities give that impression, strictly speaking?

[15:00:02.0000] <Philip`>
/me had some sites on Geocities, and never considered the possibility that it would ever disappear

[15:01:00.0000] <AryehGregor>
Yeah, but is that because they gave you that impression, or because you made it up?

[15:01:01.0000] <Philip`>
(If I had thought about it I probably could have assumed it might disappear eventually, but I never thought about it)

[15:01:02.0000] <Philip`>
It's the impression I got

[15:01:03.0000] <Philip`>
regardless of where that impression came from :-)

[15:01:04.0000] <zewt>
we were all new at things back then :)

[15:02:00.0000] <Philip`>
Of course the things that I thought *would* disappear, like newsgroups postings, have stuck around forever

[15:04:00.0000] <AryehGregor>
/me finds his old Geocities page from when he was 16

[15:04:01.0000] <Philip`>
(Also I put sites on my ISP's free web hosting thing, which was under the ISP's domain name, which was a bad idea since it meant I couldn't leave that ISP without losing my sites and email addresses)

[15:05:00.0000] <zewt>
everyone's done that... once

[15:05:01.0000] <AryehGregor>
This site really brings back memories.

[15:05:02.0000] <TabAtkins>
Did it used to be expensive to register domain names or something?

[15:05:03.0000] <zewt>
was originally something like $50/mo, I think

[15:05:04.0000] <zewt>
er

[15:05:05.0000] <zewt>
/year

[15:05:06.0000] <zewt>
(not *that* expensive. heh)

[15:06:00.0000] <Philip`>
http://www.dotweekly.com/respecting-a-domain-name-with-age-registration-history - "From 1995-1998 Network Solutions was the only domain name registrar and .com (I think .net and .org as well) domain name feeâs were $100 for a 2 year minimum"

[15:07:00.0000] <TabAtkins>
Jeez.

[15:07:01.0000] <Philip`>
That's quite expensive when you're about 12 :-)

[15:07:02.0000] <TabAtkins>
zewt was referring to his mistake of marking it as per month.

[15:08:00.0000] <AryehGregor>
Seems like the Gmail app got stuck in an infinite loop or something on my phone.

[15:09:00.0000] <AryehGregor>
It ran down the battery to 15% over the course of a few hours, with the screen off and everything, and the phone was hot to the touch.

[15:09:01.0000] <AryehGregor>
Yay power management!


2011-03-17
[17:57:00.0000] <AryehGregor>
Does Firefox 4 do hardware acceleration on Windows XP?  I'm having trouble finding sources.

[17:58:00.0000] <AryehGregor>
I assume it does, but I don't see it stated anywhere.

[17:59:00.0000] <zewt>
i've seen rendering corruption in canvas that looks reminiscent of texture corruption, anyway; don't know the real cause (too sporadic)

[17:59:01.0000] <zewt>
(xp64)

[18:00:00.0000] <kinetik>
AryehGregor: it has compositing acceleration via D3D9, if your video card/drivers are sufficient.

[18:00:01.0000] <AryehGregor>
So I assumed.

[18:00:02.0000] <kinetik>
AryehGregor: check about:support's graphics section to see if it's enabled on a given machine.

[18:01:00.0000] <AryehGregor>
kinetik, I was wondering because the Ars Technica review of IE9 repeated Microsoft's lie that they don't support XP because it doesn't support hardware acceleration.

[18:01:01.0000] <AryehGregor>
Would be nice if I had a good source to counter that.

[18:02:00.0000] <zewt>
hate how I have to use win7 to test IE9; win7 VMs are gigantic compared to XP VMs

[18:03:00.0000] <zewt>
also, it's not like you generally get hardware acceleration in VMware--yet IE9 works fine

[18:04:00.0000] <TabAtkins>
AryehGregor: I know that Chrome does hardware acceleration on XP.

[18:04:01.0000] <AryehGregor>
zewt, well, I assume it uses APIs like D2D and DirectWrite, and they presumably fall back to some kind of software rendering if acceleration is unavailable.

[18:05:00.0000] <zewt>
right

[18:05:01.0000] <AryehGregor>
That doesn't mean you could run it on XP without major changes, you'd have to add a compatibility layer.

[18:05:02.0000] <AryehGregor>
All the other browsers have to have such a compatibility layer anyway because they work on Mac and/or Linux.

[18:05:03.0000] <AryehGregor>
So it's not really much extra effort for them to support XP too.

[18:05:04.0000] <AryehGregor>
Does D2D actually do anything you can't do with DirectX 9?  I mean, it's the same hardware, right?

[18:08:00.0000] <Philip`>
It apparently needs DX 10.1 for acceleration, which includes features that DX9 hardware lacks

[18:08:01.0000] <Philip`>
(I have no idea which of those features it uses, though)

[18:10:00.0000] <AryehGregor>
So does it only work on DX 10.1 hardware?

[18:14:00.0000] <Philip`>
Oh, actually, apparently it also works with DX9 hardware via Direct3D 10Level9

[18:15:00.0000] <AryehGregor>
Which does, D2D?

[18:15:01.0000] <Philip`>
D2D

[18:15:02.0000] <Philip`>
like in http://www.techarp.com/showarticle.aspx?artno=637&pgno=2

[18:16:00.0000] <Philip`>
assuming sufficient drivers

[18:17:00.0000] <AryehGregor>
It's sad how a reputable site like Ars is repeating Microsoft's lies about stuff like this.

[18:18:00.0000] <AryehGregor>
They also repeated Microsoft's lies about how much they contribute to the standards process, and how many tests they contribute.

[18:18:01.0000] <zewt>
they contribute to the standards process by silently editing out any mention of whateg :P

[18:18:02.0000] <AryehGregor>
I'm pretty sure that to date, you and I are the only people who contributed comprehensive test suites for any HTML5 feature at all.

[18:18:03.0000] <Philip`>
I don't know if that means the DX9 API and/or drivers are too limited to support D2D (despite the hardware being capable), or just that they didn't feel like implementing D2D on the DX9 API when they could use a more modern API and upgrade people's drivers

[18:18:04.0000] <AryehGregor>
At least last I checked.

[18:27:00.0000] <AryehGregor>
I need a blog so that I can pontificate more easily.

[18:27:01.0000] <AryehGregor>
The problem is, if I wanted to have a blog I'd have to write the software for it, just for the principle of the thing.

[18:28:00.0000] <Hixie>
i hear ya

[18:28:01.0000] <AryehGregor>
Hmm, I could do a WYSIWYG editor using my JavaScript implementation of my execCommand() spec.

[18:28:02.0000] <Hixie>
luckily blog software is amongst one of the easiest things to write

[18:28:03.0000] <Philip`>
Just use a .plan file

[18:28:04.0000] <AryehGregor>
Although I should probably hold off on that until I actually spec things like, e.g., block formatting.

[18:28:05.0000] <AryehGregor>
What's a .plan file?

[18:29:00.0000] <Philip`>
http://www.catb.org/jargon/html/P/plan-file.html

[18:30:00.0000] <zewt>
blogs before there were blogs

[18:32:00.0000] <Philip`>
(John Carmack's one (http://www.bluesnews.com/cgi-bin/finger.pl?id=1&time=19991226003141 etc) seems to be the most famous recent one)

[18:32:01.0000] <zewt>
carmack's is probably the only famous one, heh

[18:33:00.0000] <erlehmann>
>What needs to be done is to create two closed source programs that act as executable loaders / verifiers and communication proxies for the client and server.

[18:33:01.0000] <erlehmann>
my fail-sense is tingling

[18:35:00.0000] <Philip`>
Having an external verification program seems to be how modern anti-cheat systems work, as far as I'm aware

[18:36:00.0000] <zewt>
it's sort of dimly amusing that he's saying 1: the problem is the GPL won't let you close source it, so 2: we need to use a mechanism that deliberately thwarts the GPL

[18:36:01.0000] <AryehGregor>
In practice, is this strategy moderately effective, or totally ineffective?

[18:36:02.0000] <AryehGregor>
Obviously anyone willing to spend enough time with a debugger could subvert the system.

[18:36:03.0000] <AryehGregor>
It really depends on whether you make it annoying enough, and change it often enough, that no one with the necessary skills will bother spending the time.

[18:37:00.0000] <Philip`>
It seems to work well enough for Valve

[18:38:00.0000] <AryehGregor>
Speaking of which, someone should really get their act together and write good DRM for games.

[18:38:01.0000] <jcranmer>
you mean like Steam?

[18:38:02.0000] <AryehGregor>
If you're willing to require an Internet connection, it should be very feasible to make it impractical to crack at all for at least a moderate period after the game's release.

[18:38:03.0000] <AryehGregor>
What, Steam games aren't cracked?  Since when?

[18:38:04.0000] <jcranmer>
well, they are cracked

[18:38:05.0000] <jcranmer>
but Steam provides a useful DRM service

[18:38:06.0000] <Philip`>
It helps if there's a strong penalty for getting caught (e.g. getting your account banned and losing your paid-for games), because then you don't have to prevent cheats as long as you detect them soon enough to disincentivise players (which could be weeks)

[18:39:00.0000] <jcranmer>
you need an internet connection once every 10 days or so

[18:39:01.0000] <AryehGregor>
Anyway, all you'd have to do is make sure that there are lots and lots of small essential pieces of info that the server holds, only a subset of which will ever be legitimately needed on a given playthrough.

[18:39:02.0000] <jcranmer>
and you also get the ability to download the game on any computer without needing the disk

[18:39:03.0000] <Philip`>
Players aren't willing to accept a required internet connection

[18:39:04.0000] <jcranmer>
that may no longer be true

[18:40:00.0000] <jcranmer>
well

[18:40:01.0000] <jcranmer>
hmm

[18:40:02.0000] <Philip`>
or at least they seem to complain vocally when you require that

[18:40:03.0000] <jcranmer>
I would say they're willing to accept an intermittent requirement

[18:40:04.0000] <AryehGregor>
Then you can just have the game request the pieces of info from the server as needed.  Have the server keep track and throttle accounts that ask for too many.

[18:41:00.0000] <Philip`>
AryehGregor: How do you avoid suffering from latency when requesting information?

[18:41:01.0000] <AryehGregor>
Just make sure the pieces of information are only needed occasionally, and are fetched well in advance.

[18:41:02.0000] <AryehGregor>
So even if you lose your connection you could still play for, I don't know, a couple of hours.

[18:41:03.0000] <AryehGregor>
This approach would fit naturally for RPGs, for instance.

[18:41:04.0000] <jcranmer>
but not for, say, FPSs

[18:41:05.0000] <Philip`>
So you need lots of critical pieces of information, all of which can be predicted seconds or hours in advance of demand?

[18:42:00.0000] <AryehGregor>
Well, if their main selling point is the single-player plot, then it could work for FPSes too.

[18:42:01.0000] <Philip`>
including when players load saved games

[18:42:02.0000] <AryehGregor>
Philip`, yes.  I don't think it would be hard.

[18:42:03.0000] <AryehGregor>
Lots of RPGs already have substantial amounts of random content and events.

[18:42:04.0000] <Philip`>
or use the in-game console to teleport to a random location in a random map

[18:42:05.0000] <Philip`>
Seems like it'd be a nightmare for QA :-p

[18:43:00.0000] <AryehGregor>
That would be handily masked by the level load delay.

[18:43:01.0000] <AryehGregor>
Network delays would be negligible.

[18:43:02.0000] <jcranmer>
it works better for RPGs than for FPSes

[18:43:03.0000] <AryehGregor>
Yeah, I was really thinking it would be best for RPGs.

[18:43:04.0000] <jcranmer>
except it might not work so well for non-linear RPGs, if those were ever created

[18:44:00.0000] <AryehGregor>
One simplistic way to do it would just be to separately encrypt every single texture, model, line of dialog, and so on.  But that requires a reliable network connection.

[18:44:01.0000] <Philip`>
It doesn't seem like something you could feasibly retrofit onto an existing game design - you'd probably have to start with the same basic assumptions as an MMORPG

[18:44:02.0000] <AryehGregor>
If you could rely on the network connection, you could do it really straightforwardly in a typical RPG by just encrypting every line of dialog with a separate key.

[18:45:00.0000] <AryehGregor>
Yes, hackers would get a basic version out within a few days, but if you happen to choose weird conversation options . . .

[18:45:01.0000] <Philip`>
If you've got a reliable network you don't even need to run the game logic on the client - just do everything on the server

[18:45:02.0000] <AryehGregor>
Well, "reliable" is different from "low-latency and high-throughput".

[18:45:03.0000] <AryehGregor>
Although yes, you could also do it by just putting most of the game logic on the server.

[18:46:00.0000] <AryehGregor>
But you could minimize network involvement by putting only small, critical, hard-to-reverse-engineer parts of game logic on the server.

[18:46:01.0000] <Philip`>
(where "everything" means "what MMORPGs do", i.e. all resources on the client and lots of client-side prediction to smooth out lag etc)

[18:46:02.0000] <AryehGregor>
MMORPGs are designed for an entirely different purpose.

[18:46:03.0000] <AryehGregor>
The server exists to coordinate different clients.

[18:46:04.0000] <AryehGregor>
So I don't think the design would be comparable in practice.

[18:48:00.0000] <AryehGregor>
One thing you could do is have some decision-making pushed off to the server that's complicated and random, thus not hard to reverse-engineer approximately but impossible to reverse-engineer exactly.

[18:49:00.0000] <AryehGregor>
. . . to be honest, it would be a lot simpler and more foolproof to either put everything on the server or require trusted clients.

[18:49:01.0000] <AryehGregor>
But it's interesting to think about anyway.

[18:51:00.0000] <Philip`>
/me likes things to be simple and foolproof, since they're usually less of a pain to debug than clever schemes

[18:51:01.0000] <AryehGregor>
But much less fun to think about.

[18:54:00.0000] <AryehGregor>
Man, why does Google keep Chrome partly closed-source?  It's annoying.

[18:54:01.0000] <AryehGregor>
/me pokes TabAtkins for unofficial comment

[18:56:00.0000] <Philip`>
I suppose you could make the game be like Demon's Souls, where you get hints and warnings from other players via the server

[18:56:01.0000] <Philip`>
so if you're offline or don't have a valid account then you get a degraded version of the game

[18:57:00.0000] <Philip`>
(though still playable, so players don't get annoyed and drive up tech support costs when they have a flakey connection)

[18:58:00.0000] <AryehGregor>
Are you suggesting that games have tech support?

[18:58:01.0000] <AryehGregor>
I don't think I ever even tried looking for tech support for a game.

[18:58:02.0000] <AryehGregor>
Also, lol: http://seclists.org/nmap-dev/2011/q1/767

[19:00:00.0000] <Philip`>
I believe they always do, probably because otherwise disgruntled customers would call whatever phone number they could find for the company and annoy more highly-paid employees

[19:00:01.0000] <AryehGregor>
Sounds likely.

[19:01:00.0000] <Philip`>
/me likes getting feedback from users, as long as he doesn't feel obliged to reply to it

[19:02:00.0000] <Philip`>
(I added a text box on the menu screen of a game that sends a message anonymously to a server where we can read it, and got a hundred messages in a few days, and since it's anonymous there's no expectation of a response)

[19:02:01.0000] <Philip`>
(and more people use it for quick messages than use IRC or forums)

[19:03:00.0000] <Philip`>
(and some of the messages are actually useful)

[19:03:01.0000] <AryehGregor>
Yeah, that sort of thing is nice.

[19:04:00.0000] <AryehGregor>
It's the wiki principle: something that requires zero effort will be much, much more popular than something that requires slight effort.

[19:04:01.0000] <AryehGregor>
Although most wikis seem to not allow anonymous editing, which shows that this point is hard to grasp.

[19:05:00.0000] <Philip`>
(although some messages are of the form "pointer mouse is too sloww" or "Hello... How can i have the full game???Because the computer don't play..." and not terribly informative)

[19:05:01.0000] <AryehGregor>
Sure, but those are mostly harmless.

[19:06:00.0000] <Philip`>
Yeah, I think the important thing is for useless feedback and/or spam to have very low cost

[19:07:00.0000] <AryehGregor>
Thus on wikis, it's easier to undo changes than to make them in the first place.

[19:07:01.0000] <Philip`>
Spam on wikis is still fairly costly, in terms of the effect it has on readers and the requirement on editors to regularly check for it

[19:07:02.0000] <aho>
unless those changes were made by a botnet

[19:09:00.0000] <Philip`>
(especially on small wikis with few editors)

[19:09:01.0000] <Philip`>
(where spam can go unnoticed for hours or days or years)

[19:16:00.0000] <AryehGregor>
Yes, there's definitely a size threshold below which anonymous editing isn't useful.

[19:16:01.0000] <AryehGregor>
Having anonymous edits go into a moderation queue would be one obvious thing to do.

[19:17:00.0000] <AryehGregor>
MediaWiki should be able to do that these days with the FlaggedRevs extension, I assume.

[19:17:01.0000] <AryehGregor>
On Wikimedia wikis it's not being configured that way, obviously, but I imagine it could be.

[19:47:00.0000] <erlehmann>
AryehGregor, Philip`, it is interesting how you web engineers put the principles that make the web thriving away when talking about games. What makes them different?

[01:46:00.0000] <Creap>
Hi, how do I specify an input pattern to be case insensitive?

[01:52:00.0000] <zcorpan>
Creap: you can't currently

[01:53:00.0000] <Creap>
ok

[01:53:01.0000] <zcorpan>
but you can do [Hh][Ee][Ll][Ll][Oo]

[01:53:02.0000] <jacobrask>
yeah, I'll have to do a-zA-Z, not a big problem, but /i would be easier

[01:55:00.0000] <hsivonen>
is my recollection bad or did Opera 11.10 beta regress layout on https://demos.mozilla.org/en-US/ compared to 11.01? (I'm too lazy to go back to the old version to check)

[01:55:01.0000] <hsivonen>
the Planetarium demo crashes for me in Opera 11.10 on Linux 64

[01:57:00.0000] <zcorpan>
hsivonen: it looks pretty much like in firefox in 11.01 for me

[01:57:01.0000] <zcorpan>
/me hasn't got the beta yet

[01:58:00.0000] <zcorpan>
planetarium doesn't crash here

[01:59:00.0000] <hsivonen>
zcorpan: thanks. I'll count the layout regressions as Opera beta bugs then, and won't file against the site

[02:00:00.0000] <hsivonen>
I submitted the crash report using the automatic reporter (I lost the id, but I put my @iki.fi address in the email field)

[02:01:00.0000] <jacobrask>
I believe it's known

[02:03:00.0000] <jacobrask>
zcorpan: Should I report the modifier issue somewhere? mailing list, or has it been discussed already?

[02:05:00.0000] <hsivonen>
jacobrask: what's known?

[02:06:00.0000] <jacobrask>
that input pattern does not support modifiers like case insensitivity

[02:06:01.0000] <jacobrask>
or oh

[02:06:02.0000] <jacobrask>
sorry

[02:07:00.0000] <jacobrask>
that Planetarium crashes in 11.10b is known

[02:07:01.0000] <zcorpan>
jacobolus: i think there's a bug on it (case insensitivity)

[02:08:00.0000] <zcorpan>
jacobolus: but you could whine about your use case in that bug to increase the likelihood that Hixie will add it to the spec

[02:08:01.0000] <jacobolus>
zcorpan: I think you mean jacobrask?

[02:08:02.0000] <jacobolus>
:)

[02:09:00.0000] <zcorpan>
yes, too similar names!

[02:09:01.0000] <jacobrask>
:P

[02:13:00.0000] <jacobrask>
where's the issue tracker?

[02:19:00.0000] <zcorpan>
you mean bugzilla?

[02:19:01.0000] <jacobrask>
I found w3c.org/Bugs

[02:19:02.0000] <jacobrask>
but no related issue

[02:19:03.0000] <jacobrask>
w3.org/Bugs ofcourse

[02:20:00.0000] <jacobrask>
I'll mail the list

[02:23:00.0000] <mrmil>
Hi, I noticed a "s" element in the spec and I am interested what it stands for (like "a" stands for "anchor", "s" stands for "?"), anybody happends to know?

[02:24:00.0000] <jacobrask>
strike

[02:25:00.0000] <mrmil>
ah, right, thanks :)

[03:17:00.0000] <jgraham>
AryehGregor: FWIW the one sensible argument I have heard against eagerly approving tests is that they could be picked up by some third party who want to use them in some sort of approval process

[03:18:00.0000] <jgraham>
Then having lots of buggy tests could be a problem

[03:19:00.0000] <jgraham>
Another reason I just invented is that it either encourages people to publish test results early (which I think is bad) or pushes back finding bugs until it is very late

[03:20:00.0000] <jgraham>
Neither of those reasons may â as a working group chair would no doubt phrase it â be decisive

[03:21:00.0000] <jgraham>
There are certianly advantages to removing the, sadly somewhat dysfunctional, review stage

[03:22:00.0000] <jgraham>
But the CSS2.1 situation where there is a big churn of the tests right at the end as people suddenly notice that they are full of problems isn't wonderful either

[03:24:00.0000] <jgraham>
(of course, taking a wider viewpoint, the whole idea of an "end" is an artificial construction that could well be gone by the time it becomes relevant to HTML)

[03:31:00.0000] <hsivonen>
It's quite sad that there is a prefix mapping error on the BustBuy page cited as evidence of prefixes not being especially complicated in the RDFa prefix ISSUE CP

[03:31:01.0000] <hsivonen>
*BestBuy

[03:32:00.0000] <hsivonen>
Today's the last day to object to http://www.w3.org/2002/09/wbs/40318/issue-120-objection-poll/results

[03:47:00.0000] <jgraham>
/me wonders if it worth pointing out that Yahoo shut down SearchMonkey

[03:48:00.0000] <jgraham>
Also that Julian's analogy with CSS is wrong

[04:21:00.0000] <hsivonen>
jgraham: please do point out that SearchMonkey has been shut down. (if it has. I was unaware.)

[04:21:01.0000] <hsivonen>
or had forgotten. or something

[04:25:00.0000] <jgraham>
Can someone confirm my findings that the facebook open graph api linter fails to extract any information if you change the prefix from "og" but works fine if the prefix is "og" but undeclared?

[04:25:01.0000] <jgraham>
My example documents are http://hoppipolla.co.uk/410/rdfa.html and http://hoppipolla.co.uk/410/rdfa-1.html

[04:26:00.0000] <jgraham>
http://developers.facebook.com/tools/lint/

[04:26:01.0000] <hsivonen>
jgraham: your "Lint it" link is broken

[04:28:00.0000] <jgraham>
hsivonen: Yes,m I just copied the example file

[04:28:01.0000] <jgraham>
You need to copy the URI

[04:28:02.0000] <jgraham>
(I will fix)

[04:28:03.0000] <hsivonen>
jgraham: yeah, it seems to be that your finding is correct.

[04:28:04.0000] <hsivonen>
jgraham: please document it on the poll

[04:28:05.0000] <jgraham>
Also, the Java, Python, ruby and one PHP libraries all look for "og:"

[04:29:00.0000] <jgraham>
There is a PHP library that is actaully doing real RDFa processing and one perl one that I assume is

[04:29:01.0000] <hsivonen>
This kind of name dropping companies whose implementations don't implement the spec *really* annoys me.

[04:30:00.0000] <jgraham>
I think this is quite reasonable evidence that using prefixes actually already doesn't work

[04:31:00.0000] <hsivonen>
jgraham: indeed

[05:00:00.0000] <jgraham>
hsivonen, anyone: could you read http://hoppipolla.co.uk/410/120.txt and see if it makes sense, please?

[05:01:00.0000] <hsivonen>
jgraham: looking

[05:02:00.0000] <zcorpan>
"... itâs important for site developers to test their site in the Compatibility View Browser Mode." http://blogs.msdn.com/b/ie/archive/2010/10/19/testing-sites-with-browser-mode-vs-doc-mode.aspx

[05:03:00.0000] <hsivonen>
jgraham: looks good

[05:03:01.0000] <hsivonen>
zcorpan: aargh! :-(

[05:05:00.0000] <hsivonen>
zcorpan: on the bright side, it appears that IE9 itself doesn't (outside dev tools) provide UI for running the browser in the IE8 browser mode or the IE7 browser mode

[05:05:01.0000] <hsivonen>
zcorpan: though I gather that apps that embed Trident can do that

[05:05:02.0000] <kennyluck>
I wonder why no one ever mentions the possibility of moving RDFa out of HTML WG in the objections. The proposed change in Hixie's proposal is too large that it can't be acceptable.

[05:06:00.0000] <zcorpan>
since ie9 uses the same mode as the parent frame, i guess it's also "important" to test the site in the IE 5.5 mode if you care about being framed on arbitrary sites

[05:07:00.0000] <zcorpan>
hsivonen: the context of the sentence was the compatibility mode button

[05:07:01.0000] <zcorpan>
s/mode/view/

[05:08:00.0000] <zcorpan>
i thought the x-ua-compatible would override compatibility view?

[05:08:01.0000] <hsivonen>
zcorpan: yeah, but I think it's very sad to put effort into making the site work if the user presses a "break design" button

[05:08:02.0000] <hsivonen>
zcorpan: X-UA-Compatible overrides the button and hides the button

[05:09:00.0000] <hsivonen>
zcorpan: also overrides the pref for displaying all sites in compat mode

[05:09:01.0000] <zcorpan>
i wonder why microsoft now recommends wasting even more time over using x-ua-compatible

[05:11:00.0000] <hsivonen>
there's no way an average user is going to last even a day without Flash Player using IE9 :-(

[05:11:01.0000] <hsivonen>
the browser is so eager to prompt for drive-by installs of Flash Player

[05:13:00.0000] <zcorpan>
"As long as developers need document modes to run their sites, weâre going to support them. We want to remove document modes as soon as the web transitions to run in the latest standards mode. The timing is really up to developers."

[05:13:01.0000] <hsivonen>
zcorpan: whoa! looks like I need to retest the framing bit. :-(

[05:13:02.0000] <zcorpan>
Translation: We're never going to remove any document modes.

[05:15:00.0000] <zcorpan>
hsivonen: i haven't tested it myself, but somebody on sitepoint forums said ie9 would use quirks mode if the parent frame uses quirks mode

[05:15:01.0000] <zcorpan>
regardless of doctype or x-ua-compatible, iirc

[05:15:02.0000] <hsivonen>
note to self: always retest *everything*

[05:19:00.0000] <hsivonen>
well, *this* is weird

[05:20:00.0000] <hsivonen>
when framed by a quirky page, it seems that X-UA-Compatible: IE=9 only elevates to mode to 8

[05:21:00.0000] <hsivonen>
I need to draw some new decision diamonds for my chart

[05:22:00.0000] <hsivonen>
if my framing testing so far is right, this is gonna be bad news for HTML5 video embedding iframes

[05:23:00.0000] <hsivonen>
since <video> requires IE9 mode

[06:36:00.0000] <zcorpan>
hsivonen: http://www.sitepoint.com/forums/html-xhtml-52/ie9-iframes-doctypes-you-743000.html was the ie9 iframe thing

[09:06:00.0000] <TabAtkins>
AryehGregor: As far as I know, it's because we have some libraries that can't be open-sourced.

[09:06:01.0000] <TabAtkins>
Like our implementation of Flash and PDF.

[09:07:00.0000] <jgraham>
death_to_kittens.cpp

[09:10:00.0000] <TabAtkins>
Well, we do hate kittens.

[09:58:00.0000] <zewt>
what the

[09:58:01.0000] <zewt>
apparently checking out the webkit source gives you ... webkit.org? thanks, I guess... :)

[10:03:00.0000] <TabAtkins_>
?_?

[10:07:00.0000] <Peter->
The source of webkit.org is on svn, he's probably poining that out

[10:07:01.0000] <Peter->
(the site)

[10:07:02.0000] <Peter->
as are bugs. and planet.

[10:11:00.0000] <AryehGregor>
erlehmann, just because openness and standards work for the web doesn't mean they're needed everywhere.  I tend to broadly agree with Eric S. Raymond's analysis of open-source software, where he suggests that closed-source software will always work better in some markets.  The same logic applies to open standards.

[10:12:00.0000] <erlehmann>
AryehGregor, please elaborate. don't work âclosedâ products better even with open standards?

[10:13:00.0000] <AryehGregor>
Well, if interoperability is useful, yes.  What do games need to interoperate on?

[10:13:01.0000] <erlehmann>
There may be more people than h4kon advocating open standards while being perfectly fine with closed software.

[10:13:02.0000] <AryehGregor>
A typical high-end game is a standalone product that interacts with no other program (beyond the OS) and is basically obsolete in two years.

[10:14:00.0000] <AryehGregor>
What exactly is there to standardize?

[10:14:01.0000] <erlehmann>
Special clients? I always hated it when strategy games did not give me the ability to write my own macros.

[10:15:00.0000] <erlehmann>
(The only one that included it was Earth2150 in 1999, but the current rights holder is opposed to releasing the source code.)

[10:15:01.0000] <AryehGregor>
What sort of API would they expose?  Different games work very differently, that's one of the problems.

[10:16:00.0000] <erlehmann>
I just hate it when people lay bricks into my way of customizing things.

[10:16:01.0000] <AryehGregor>
I don't think standardization would help with that.

[10:16:02.0000] <AryehGregor>
Standardization is needed for inter-program APIs, document formats, things like that.  But any two independent games are different enough that there's nothing I can see that they could usefully share, in general.

[10:16:03.0000] <AryehGregor>
Well, they share things like graphics engines, clearly.

[10:17:00.0000] <AryehGregor>
But not along nice clean standardizable lines that you could make a stable API out of.

[10:17:01.0000] <Philip`>
They can be standardised at the OpenGL/DirectX level

[10:17:02.0000] <AryehGregor>
At least it's my impression that when games use a third-party engine, they typically customize it to fit their needs.

[10:17:03.0000] <AryehGregor>
Well, yes.  Also file access can be standardized.

[10:17:04.0000] <AryehGregor>
Novel idea right there.

[10:17:05.0000] <AryehGregor>
But that's standardizing the OS, not the game.

[10:18:00.0000] <Philip`>
Anything higher-level will be obsolete within a year so everyone will want to write their own instead, unless the shared engine is continually updated and no longer standardised

[10:18:01.0000] <AryehGregor>
Essentially, yes.

[10:19:00.0000] <AryehGregor>
(I've given thought to the possibility that an open-source graphics engine for games could be successful, if it used a dual-licensing scheme in the vein of MySQL.)

[10:19:01.0000] <AryehGregor>
(It's really ridiculous how companies rewrite their graphics engines from scratch for most games they make.)

[10:19:02.0000] <erlehmann>
Possible strawman: I neither do nor did advocate a common API or ABI for all games.

[10:20:00.0000] <Philip`>
(How would dual-licensing make it more successful than e.g. Ogre, which used to be dual-licensed and now is MIT?)

[10:21:00.0000] <AryehGregor>
erlehmann, even similar games aren't similar enough that I see any useful API you could make.

[10:21:01.0000] <AryehGregor>
Maybe adopting a common scripting language or something like that, sure.

[10:21:02.0000] <AryehGregor>
Would be possible.

[10:21:03.0000] <erlehmann>
LUA called, it wants its fame back ;)

[10:22:00.0000] <AryehGregor>
But high-end games are usually written from scratch in a very short period and then thrown out.  That makes it unattractive to invest in features that aren't broadly useful.

[10:22:01.0000] <AryehGregor>
Philip`, I've never heard of Ogre.  I'm just saying it could work, it could also fail for lots of reasons.

[10:22:02.0000] <erlehmann>
Philip`, re: dual-licensing âcommercially successfulâ is different from âbroad adoption successfulâ

[10:23:00.0000] <AryehGregor>
My strategy would be to distribute it for free and let small players use it for free, and figure that if any big games stole it we'd notice.

[10:23:01.0000] <AryehGregor>
Try to get universities to use it in their courses, try to get a development community going.

[10:24:00.0000] <AryehGregor>
Anyway, I'm not actually going to try this, just an idle thought.

[10:25:00.0000] <Hixie>
hober: is othermaciej on vacation or something?

[10:25:01.0000] <AryehGregor>
hsivonen, you are aware that the chairs will consider objections even if they don't use the words "I object" every two sentences, right?

[10:25:02.0000] <Philip`>
AryehGregor: Ogre's only the most well-known widespread open source graphics engine, which has been going seriously for ~6 years and has been used in several commercial games (e.g. Torchlight) :-)

[10:25:03.0000] <AryehGregor>
Ah, interesting.

[10:26:00.0000] <AryehGregor>
Where do they get their development money from, if they're MIT-licensed?  Contracts, support?  I thought good 3D engines required very large ongoing development costs.

[10:27:00.0000] <AryehGregor>
(As opposed to most open-source projects, which can be more or less completed and then add features at their leisure without necessarily falling far behind)

[10:27:01.0000] <Philip`>
(I thought vaguely about using it recently, but found it's a pain to install on Linux because it now relies on a library that interacts badly with system libraries so most Linux distros won't touch it, so it ends up being a bit of a mess getting everything installed)

[10:27:02.0000] <jgraham>
AryehGregor: It seems to be profitable to be very explicit when writing objections

[10:28:00.0000] <Philip`>
(so it's easier to just hack stuff onto an existing inflexible GL-based engine)

[10:28:01.0000] <AryehGregor>
jgraham, that I agree with.

[10:29:00.0000] <Philip`>
AryehGregor: As far as I'm aware they don't have development money, it's just volunteers who want to work on the engine or want to use it for their own open source games

[10:29:01.0000] <zewt>
i've worked on a commercial game that MIT-licenses most of its code for many years ... it works "okay"

[10:29:02.0000] <AryehGregor>
And it's still competitive?  Or it's not competitive with the commercial engines, but it's good enough for the cost?

[10:29:03.0000] <Philip`>
and the result is okay enough that some commercial developers choose it instead of writing their own or buying one

[10:31:00.0000] <Philip`>
It's competitive if you're making a PC game that should run easily on 5-year-old hardware

[10:31:01.0000] <Philip`>
(from what I can see)

[10:31:02.0000] <Philip`>
(e.g. Torchlight lists GeForce 2 as a minimum requirement)

[10:32:00.0000] <Philip`>
(or Intel GMA 950, more relevantly)

[10:32:01.0000] <zewt>
that's more like 10-year-old

[10:32:02.0000] <Philip`>
950 is more like 5, I think

[10:32:03.0000] <Philip`>
and is very widespread

[10:33:00.0000] <jgraham>
AryehGregor: I rather suspect I was insufficently explicit

[10:33:01.0000] <AryehGregor>
jgraham, on which issue?

[10:33:02.0000] <Philip`>
It's not exactly a graphics engine you're going to use for an Xbox 360 game

[10:34:00.0000] <Philip`>
(even if it supported consoles, which it doesn't)

[10:34:01.0000] <zewt>
well, no open source game is actually going to really support consoles, since the APIs are largely proprietary and it's probably quasi-legal to even release code using them, heh

[10:34:02.0000] <jgraham>
AryehGregor: 120

[10:35:00.0000] <AryehGregor>
jgraham, I hate when people refer to issues by numbers.  Can't you at least use the short description?

[10:35:01.0000] <zewt>
(we did a PS2 port of our game years back; none of that code was ever released)

[10:35:02.0000] <AryehGregor>
Is that the RDFa prefix one?

[10:36:00.0000] <AryehGregor>
I suspect that one's a lost cause politically, but the chairs may surprise me.

[10:36:01.0000] <jgraham>
AryehGregor: Yes, it's the RDFa one

[10:36:02.0000] <jgraham>
I have no idea what the shortname is

[10:36:03.0000] <jgraham>
Oh rdfa-prefixes

[10:37:00.0000] <Philip`>
Fortunately open source people seem very easily pleased with simple graphics - I see lots of compliments for the graphics of the game I work on, which has a 2004-era renderer that supports diffuse textures and shadows and a single light source and that's pretty much all

[10:38:00.0000] <hober>
yeah, I need to get some survey responses in today

[10:38:01.0000] <AryehGregor>
What does "a single light source" mean, in practice?

[10:38:02.0000] <Philip`>
The sun

[10:38:03.0000] <AryehGregor>
Ah.

[10:38:04.0000] <Philip`>
(No dynamic lighting or anything)

[10:38:05.0000] <AryehGregor>
So constant illumination from a fixed direction.

[10:38:06.0000] <AryehGregor>
I find graphics vaguely interesting.

[10:38:07.0000] <Philip`>
Indeed

[10:39:00.0000] <AryehGregor>
I remember being amused when I saw in my brother's 3D graphics program (3DS Max or whatever) that he could change the rate at which the intensity of light dropped off.

[10:39:01.0000] <AryehGregor>
Constant, inverse-square, inverse, inverse-cube, exponential . . .

[10:39:02.0000] <jgraham>
AryehGregor: Anyway, clearly the solution is to write a RFC defining terms like OBJECT and SUPPORT so people would know to look at the sentences with the defined terms and filter out the rest.

[10:40:00.0000] <AryehGregor>
Granted, constant makes sense for very far light sources like the sun, but exponential dropoff for light?  I guess you're not always aiming for realism, in graphics.

[10:40:01.0000] <AryehGregor>
The software also supported indices of refraction less than 1.

[10:40:02.0000] <AryehGregor>
Although negative indices of refraction can be possible.

[10:41:00.0000] <AryehGregor>
jgraham, I don't think the chairs have dropped any objections lately just because of how they were phrased, did they?

[10:41:01.0000] <Philip`>
/me recently considered doing something as extreme as requiring GLSL shaders, which are only 7 years old, so he set up http://feedback.wildfiregames.com/report/opengl/ a few weeks ago to figure out what hardware support was available

[10:41:02.0000] <Philip`>
but it turns out quite a few people still have terrible hardware or drivers :-(

[10:42:00.0000] <AryehGregor>
Philip`, do you know of any book I could read that would teach me more about the principles of graphics programming, without expecting that I'd be willing to write any actual code except maybe really trivial snippets?

[10:42:01.0000] <zewt>
i'd imagine typical systems with onboard Intel video chipsets and similar laptops

[10:43:00.0000] <AryehGregor>
I would like to get it, read the first twenty pages, put it aside somewhere, and forget about it for months until I clean up my room, at which point I'll realize I have no time to read it and put it on my shelf, with a forlorn bookmark forever remaining in it as a testament to my lack of persistence.

[10:43:01.0000] <Philip`>
AryehGregor: No - I don't think I've read any particularly relevant books, and I don't know enough about the subject to guess which ones might be good

[10:43:02.0000] <jgraham>
AryehGregor: It's hard to tell. Based on http://www.w3.org/mid/20110310180425.M45789âhn it seems that some people don't feel their points have been considered in the way they would like due to the choice of wording

[10:44:00.0000] <AryehGregor>
jgraham, that objection was ignored because it suggested a change that wasn't suggested by any change proposal.

[10:44:01.0000] <AryehGregor>
I.e., it didn't actually support either change proposal, and they were only trying to decide between the change proposals, so it was useless to them.

[10:45:00.0000] <Philip`>
zewt: Yeah, lots of those, though I was surprised to see someone apparently still had a GeForce2 MX

[10:47:00.0000] <Philip`>
(which is even slower than an Intel 945GM, seemingly)

[10:47:01.0000] <AryehGregor>
I think I have a GeForce 1 somewhere.

[10:47:02.0000] <AryehGregor>
Not in an actual working computer, needless to say.

[10:48:00.0000] <AryehGregor>
Wasn't GeForce 1 a PCI card, though?  If so, maybe it would still work.  I bet the Linux kernel still supports it.

[10:50:00.0000] <Philip`>
AGP, apparently

[10:50:01.0000] <Philip`>
(http://en.wikipedia.org/wiki/Comparison_of_Nvidia_graphics_processing_units#GeForce_series)

[10:52:00.0000] <AryehGregor>
I probably have an AGP motherboard somewhere.  Whether I have a CPU and RAM to go with it is a separate question.

[10:56:00.0000] <Philip`>
/me likes measuring things

[10:56:01.0000] <Philip`>
http://zaynar.co.uk/0ad-pub/performance-20110317.png - probably wholly inaccurate, but I think it looks pretty

[10:57:00.0000] <jgraham>
What did you plot it with?

[10:57:01.0000] <Philip`>
matplotlib

[11:02:00.0000] <AryehGregor>
I don't suppose anyone here knows how to get execCommand() to work in IE?  It doesn't seem to work on my page: http://aryeh.name/spec/editcommands/autoimplementation.html

[11:02:01.0000] <AryehGregor>
The "browser" column remains stubbornly unstyled in IE9, with no errors logged or anything.

[11:03:00.0000] <AryehGregor>
It's worked before . . .

[11:03:01.0000] <AryehGregor>
Oh well, I don't need to know IE's behavior for this particular thing anyway.

[11:03:02.0000] <AryehGregor>
/me goes back to rewriting his spec for about the fourth time

[11:03:03.0000] <AryehGregor>
No, wait, I think it's only the third.

[11:19:00.0000] <zewt>
<Peter-> The source of webkit.org is on svn <- it's not having them in svn that's surprising, it's having them in the WebKit source tree

[11:22:00.0000] <nessy>
Hixie: are you there?

[11:22:01.0000] <Hixie>
here

[11:23:00.0000] <nessy>
issue-147 about playbackrate

[11:23:01.0000] <zewt>
webkit doesn't send onprogress reliably on chunked XHR responses :(

[11:23:02.0000] <nessy>
are you planning on writing a change proposal?

[11:24:00.0000] <zewt>
probably due to buffering

[11:24:01.0000] <zewt>
yeah, definitely

[11:26:00.0000] <Hixie>
nessy: not if i can help it

[11:26:01.0000] <nessy>
Hixie: if you like the idea of requestedPlaybackRate/actualPlaybackRate, I'd be happy to quickly write it

[11:26:02.0000] <nessy>
and request another week of discussion extension, I guess

[11:27:00.0000] <Hixie>
based on what frank said, he doesn't much care to do anything but what they already shipped

[11:27:01.0000] <Hixie>
so...

[11:28:00.0000] <nessy>
hmm, I care about a good spec and I would like to hear other browser vendor opinions

[11:28:01.0000] <Hixie>
i care about a good spec too, but it seems the w3c html wg is not the place we'll be able to achieve that

[11:28:02.0000] <Hixie>
(this is yet another example of how having microsoft implement cutting-edge stuff is a mistake)

[11:29:00.0000] <nessy>
I've not lost faith :)

[11:29:01.0000] <nessy>
other browsers have implemented stuff, too, that got changed later - that's not new

[11:30:00.0000] <nessy>
no worries, I'll go ahead then

[11:33:00.0000] <Hixie>
other browsers don't have 3 year ship cycles

[11:33:01.0000] <Hixie>
(my faith is mostly lost from sam's many decisions recently, not just this issue)

[11:36:00.0000] <Hixie>
(and the recent polls, which have no good solutions proposed)

[11:40:00.0000] <AryehGregor>
IE9 was shipped only two years after IE8, to be fair, not three.  :)

[12:07:00.0000] <nessy>
OK, change proposal on issue-147 playbackrate sent - we'll see what the discussion will further turn up :)

[12:18:00.0000] <Hixie>
nessy: thanks

[12:18:01.0000] <Hixie>
nessy: there's a good chance that whatever happens we'll end up forced to spec whatever IE did though

[12:20:00.0000] <Hixie>
nessy: also "requestedPlaybackRate" makes it sound like its ok for the browser to be playing it back at another rate

[12:20:01.0000] <Hixie>
nessy: (if i was doing this myself rather than jumping through sam's hoops, i think we'd probably want to put this into a separate object hanging off the HTMLMediaElement that exposes all kinds of metrics, not just the actualPlaybackRate)

[12:21:00.0000] <nessy>
you should write that as a change proposal then :)

[12:21:01.0000] <Hixie>
*shrug*

[12:22:00.0000] <nessy>
I'm not sure I would regard the actualPlaybackRate as a statistic though - it's not quite in the same realm...

[12:22:01.0000] <Hixie>
how so?

[12:22:02.0000] <nessy>
other stats are about what the browser has tried to achieve and wasn't able to - this is about the feature being not available on some devices

[12:23:00.0000] <Hixie>
i don't understand the difference

[12:23:01.0000] <Hixie>
those sound like different ways of describing exactly the same thing

[12:23:02.0000] <nessy>
basically it confirms what you say above: it's ok for the feature not to be implemented

[12:23:03.0000] <Hixie>
it's not ok for the feature not to be implemented

[12:24:00.0000] <Hixie>
if it was ok for the feature not to be implemented, we should just remove the feature

[12:25:00.0000] <nessy>
no, I think people have different expectations of different devices

[12:25:01.0000] <nessy>
and their capabilities - what is ok on some is not ok on others

[12:25:02.0000] <Hixie>
we have an explicit hardware limitations clause

[12:25:03.0000] <Hixie>
which covers this kind of thing for everything

[12:25:04.0000] <Hixie>
why is playback rate special?

[12:25:05.0000] <nessy>
yeah, and that's fine - but then how do you determine as an author when something has been hw limited?

[12:28:00.0000] <Hixie>
you don't, because if we have to expose something like that for every feature, that won't scale

[12:28:01.0000] <AryehGregor>
The hardware limitation clause is invoked too much.  We should specify how to behave in the event of hardware limitations where possible, same as with all error handling.

[12:28:02.0000] <AryehGregor>
Although obviously it could get out of hand if you go too far down that route, yeah.

[12:29:00.0000] <AryehGregor>
/me has no comment on the specific issue, hasn't looked at it

[12:29:01.0000] <Hixie>
it's not realistic to do that. for example browsers assume infinite ram, and will fail in unpredictable ways when ram runs out, and there's nothing we can do about that really.

[12:29:02.0000] <AryehGregor>
Generally it fails in a quite predictable way, viz., the browser exits or is killed.

[12:30:00.0000] <Hixie>
that is one of a number of different eventualities

[12:30:01.0000] <Hixie>
it's by far not the only one

[12:31:00.0000] <Hixie>
and it's not really one we can spec

[12:31:01.0000] <Hixie>
since it's very reasonable for a browser to try to do better

[12:39:00.0000] <nessy>
it's well possible that a metrics or statistics element could contain this information in a better way, so it might be time to get on top of that - what's your plan on that? (I know you're swamped with issues)

[12:40:00.0000] <nessy>
my change proposal basically bought us some more time...

[12:41:00.0000] <nessy>
I know that some browsers are already implementing statistics elements, so it might be good to move that forward

[12:41:01.0000] <Hixie>
for implementation issues like this all that matters is what browsers implement, not what the wg decides

[12:41:02.0000] <Hixie>
so it doesn't really matter what the chairs decide, we can always change it later if we find a better solution that gets implemented

[12:41:03.0000] <Hixie>
hence my lack of caring about the change proposal stuff

[12:42:00.0000] <Hixie>
re video statistics, is there any documentation anywhere about what browsers have implemented for that?

[12:42:01.0000] <Hixie>
i don't really know what authors want, stats-wise

[12:43:00.0000] <Hixie>
i have the same problem with PeerConnection -- we're gonna need to expose some stats there, but i dunno what authors want

[13:00:00.0000] <nessy>
brb

[13:09:00.0000] <nessy>
stats info is a bit all over the place actually

[13:09:01.0000] <nessy>
in mozilla bugs, webkit bugs, http adaptive streaming discussions

[13:10:00.0000] <nessy>
maybe I should start pulling it all together in a web page

[13:10:01.0000] <nessy>
wiki page

[13:10:02.0000] <Hixie>
that would be awesome

[13:10:03.0000] <Hixie>
i can definitely commit to speccing out such a feature sooner if you do that :-)

[13:10:04.0000] <nessy>
happy to help where I can!

[13:11:00.0000] <nessy>
I will be in MTV all of next week, btw

[13:11:01.0000] <Hixie>
cool

[13:11:02.0000] <Hixie>
i'm doing a lot of WFH recently for family reasons

[13:11:03.0000] <Hixie>
dunno where i'll be next week

[13:11:04.0000] <Hixie>
we should try to meet up though if i'm around

[13:11:05.0000] <nessy>
if you want to chat on Monday about the multitrack stuff, for example, just before the change proposal is due, I'd be there

[13:12:00.0000] <Hixie>
when is that due again?

[13:12:01.0000] <nessy>
Tuesday

[13:12:02.0000] <Hixie>
aw man

[13:12:03.0000] <nessy>
yeahâ¦ I know ...

[13:12:04.0000] <Hixie>
i guess i'd better cook something up over the weekend

[13:12:05.0000] <Hixie>
these deadlines are asinine

[13:12:06.0000] <nessy>
that would be awesome

[13:13:00.0000] <nessy>
(wow, had to look up that word - sometimes it sucks not being a native speaker ;-)

[13:14:00.0000] <nessy>
I'll be around Naomi and Ken most of the time, so just ping me when you're in the office and I'll come over (when I'm not in meetings and stuff)

[13:14:01.0000] <nessy>
we can grab a coffee

[13:14:02.0000] <Hixie>
(it wouldn't be so bad if the issues were being dealt with (a) in something resembling a realistic priority order and (b) were getting decisions from the chairs made promptly

[13:14:03.0000] <Hixie>
but anyway)

[13:15:00.0000] <hober>
It's particularly irritating when there's active discussion and possible convergence (as in this case), but that active discussion just happened to not happen before the decision process kicked in

[13:16:00.0000] <AryehGregor>
The decision process can always be stopped if there's an amicable resolution.

[13:29:00.0000] <Hixie>
AryehGregor: the problem is with something like the rel="" issue, where i think we'll never get amicable resolution, but where there's likely to be a better idea than the options currently on the table eventually, but as the decision process will be invoked before then (even though there's no rush on the issue), the htmlwg will not be able to change its decision, and if the whatwg tries the other option, we'll have a forked registration mechanism, which is bad for e

[13:29:01.0000] <AryehGregor>
Hixie, you got cut of at "which is bad for".

[13:29:02.0000] <Hixie>
was just loading the logs to find out where it cut out :-)

[13:30:00.0000] <AryehGregor>
If a new idea comes up that's better, the issue can probably be reopened.

[13:30:01.0000] <Hixie>
"which is bad for everyone."

[13:30:02.0000] <Hixie>
the chairs only reopen for "new information", not new ideas

[13:31:00.0000] <AryehGregor>
I expect they'd be willing to reopen if there were a good solution that hadn't previously been suggested.  No way to tell until we try.

[13:32:00.0000] <Hixie>
your optimism is heart-warming. :-)

[13:32:01.0000] <AryehGregor>
Their goal is to get as much consensus as possible, so they're unlikely to refuse to reopen the issue if it looks like a new solution will get more people to agree.

[13:32:02.0000] <Hixie>
their goal is walk through the process, not get consensus, as far as i can tell

[13:33:00.0000] <AryehGregor>
They rely heavily on the process because they want to appear as impartial as possible.

[13:33:01.0000] <AryehGregor>
Thus they try to leave as little as possible up to their own discretion.

[13:33:02.0000] <Hixie>
i mean the lc/cr/rec process, not the htmlwg process

[13:33:03.0000] <AryehGregor>
Oh, well, that's obviously their goal too.

[13:33:04.0000] <Hixie>
their goal SHOULD be making a good web

[13:33:05.0000] <Hixie>
but anyway

[13:33:06.0000] <Hixie>
brb

[13:33:07.0000] <AryehGregor>
Well, yeah, but that's life.

[13:34:00.0000] <AryehGregor>
Only way you're going to fix it is if you get everyone important to jump ship at the W3C, or credibly threaten to.

[13:51:00.0000] <AryehGregor>
Is there a less verbose way to get the last element of an array than list[list.length - 1]?

[13:52:00.0000] <Hixie>
in js?

[13:52:01.0000] <jgraham>
AryehGregor: No

[13:52:02.0000] <AryehGregor>
Hixie, yes.

[13:52:03.0000] <AryehGregor>
jgraham, <3

[13:53:00.0000] <Hixie>
if you don't mind changing the array you can call .pop :-)

[13:53:01.0000] <AryehGregor>
$ python -c 'print [1, 2, 3][-1]'

[13:53:02.0000] <AryehGregor>
3

[13:53:03.0000] <AryehGregor>
Yeah, I figured that out.

[13:53:04.0000] <AryehGregor>
/me grumbles

[13:53:05.0000] <Hixie>
in perl you can use $#, as in $array[$#array]

[13:54:00.0000] <AryehGregor>
Python's still shorter.  :)

[13:54:01.0000] <jgraham>
/me assumes that perl makes sense to someone

[13:54:02.0000] <AryehGregor>
And it lets you access anything starting from the end of the list with about equal ease.

[13:54:03.0000] <AryehGregor>
jgraham, I assume $#array is just the length of the array, or maybe that minus one.

[13:54:04.0000] <AryehGregor>
#, after all.

[13:54:05.0000] <heycam>
AryehGregor, list.slice(-1)

[13:54:06.0000] <zewt>
python? more convenient than javascript? : O

[13:54:07.0000] <AryehGregor>
heycam, nice, thanks.

[13:54:08.0000] <heycam>
well that's a list actually

[13:54:09.0000] <Hixie>
you might be able to do array.slice(-1)[0] in js, but i expect the .length thing is more optimal

[13:54:10.0000] <AryehGregor>
Oh, that returns -- yeah.

[13:54:11.0000] <heycam>
so .slice(-1)[0] :)

[13:54:12.0000] <AryehGregor>
list.slice(-1)[0].

[13:54:13.0000] <AryehGregor>
Hmm.

[13:55:00.0000] <Hixie>
oh heycam beat me to it

[13:55:01.0000] <AryehGregor>
Well, that's shorter if the variable name is long.

[13:55:02.0000] <jgraham>
That is slower though

[13:55:03.0000] <jgraham>
It has to create a new temporary array

[13:55:04.0000] <AryehGregor>
It's also more inscrutable.

[13:55:05.0000] <AryehGregor>
We can't just make Python the new official web programming language?  :(

[13:55:06.0000] <jgraham>
Well unless the javascript engine is really clever I suppose

[13:55:07.0000] <heycam>
Object.defineProperty(Array.prototype, "-1", { get: function() { return this[this.length - 1] }, enumerable: false })

[13:55:08.0000] <heycam>
:)

[13:55:09.0000] <AryehGregor>
/me really wishes he had more opportunity to write Python

[13:56:00.0000] <AryehGregor>
heycam, that's the most inscrutable sort of thing to do of all . . .

[13:56:01.0000] <jgraham>
heycam: He said shorter :p

[13:56:02.0000] <Hixie>
another option is to store your array in the opposite order

[13:56:03.0000] <AryehGregor>
jgraham, no, the point is then I could do array[-1].

[13:56:04.0000] <Hixie>
and use [0]

[13:56:05.0000] <jgraham>
AryehGregor: Yeah, I understand

[13:56:06.0000] <AryehGregor>
Then I can't use push() and pop(), so my overall length in this case goes up.

[13:56:07.0000] <jgraham>
But if you only do it once...

[13:58:00.0000] <Hixie>
AryehGregor: you can use .shift and .unshift instead

[13:58:01.0000] <Hixie>
though i can never remember which adds and which removes

[13:58:02.0000] <AryehGregor>
Aha, that will do it.

[13:58:03.0000] <AryehGregor>
Not enough effort to rewrite my code now, but I'll keep it in mind for the future.

[13:59:00.0000] <jgraham>
It seems like they could be horribly inefficient too

[13:59:01.0000] <jgraham>
Depending on the implementation and the size of the array

[14:00:00.0000] <AryehGregor>
I'm ignoring efficiency here.

[14:00:01.0000] <Hixie>
no reason they should be any worse than pop and push

[14:00:02.0000] <AryehGregor>
Hixie, sure they should, if you're using something like std::vector to implement it, and that works by allocating an array.

[14:00:03.0000] <AryehGregor>
You'd have to shift all the elements up every time you unshifted.

[14:01:00.0000] <AryehGregor>
And down if you shifted, unless you wanted to just stop using the beginning of the array.

[14:01:01.0000] <Hixie>
i'd be shocked if browsers don't all have their own implementations of Array designed to handle all these things

[14:02:00.0000] <AryehGregor>
I said "something like".

[14:02:01.0000] <Hixie>
my point stands :-)

[14:02:02.0000] <AryehGregor>
I also really doubt they're actually using std::vector.

[14:02:03.0000] <Hixie>
i doubt it's anything like std::vector

[14:03:00.0000] <jgraham>
If you are representing an array as something a bit like a C array you can pop rather easilly (assuming you overallocate memory)

[14:03:01.0000] <jgraham>
But doing the same thing which shift seems more complex

[14:03:02.0000] <jgraham>
Or, at least, you could end up with memory fragmentation

[14:04:00.0000] <jgraham>
I don't know what actual browsers do though

[14:04:01.0000] <jgraham>
It seems like one could time it to find out :)

[14:07:00.0000] <zewt>
seems O(n^2) in chrome

[14:08:00.0000] <AryehGregor>
JavaScript is really obnoxiously verbose.  It's the one language where I feel the need to do: autocmd FileType javascript setlocal fo-=t

[14:09:00.0000] <zewt>
or it did a minute ago--same test went from 6s to 5ms, scratching my head at it for a minute

[14:09:01.0000] <AryehGregor>
(which says "don't automatically break code at 79 characters)

[14:10:00.0000] <zewt>
okay, chrome is just acting strangely

[14:10:01.0000] <Hixie>
zewt: i wouldn't be at all surprised if it did something like adapt the implementation to match the usage

[14:11:00.0000] <zewt>
just refreshed the test, and it froze for around 15 seconds, then came back saying it took 13ms, suggesting it got stuck somewhere else

[14:12:00.0000] <Hixie>
i see that sometimes with the spec

[14:13:00.0000] <Hixie>
reloading the spec seems to make the tab go weird

[14:13:01.0000] <Hixie>
could be a GC thing

[14:14:00.0000] <gsnedders>
Hixie: I think it's still O(n) in most JS engines

[14:15:00.0000] <gsnedders>
Hixie: Also varies for some engines depending upon whether it's an actual Array or not, and what array representation it is using (AFAIK all have multiple)

[14:37:00.0000] <Philip`>
The trick to getting good performance is to use JS features in the same way that artificial benchmarks use them

[14:38:00.0000] <Philip`>
If you try do anything unusually clever you'll probably fall into a slow path

[14:39:00.0000] <Hixie>
i thought the trick was to write benchmarks that used js the way you do :-)

[14:40:00.0000] <Philip`>
That works but only if you're willing to wait a year or two

[14:40:01.0000] <gsnedders>
And manage to get anyone to pay attention to your benchmarks

[14:41:00.0000] <zewt>
Hixie: mailed a summary of how I think the PeerConnection crypto should be handled ... down to the bottom of the queue I go :)

[14:46:00.0000] <erlehmann>
<http://saveie6.com/> I pooped a little.

[14:46:01.0000] <zewt>
tmi

[14:46:02.0000] <erlehmann>
i use reverse while loops in Js for performance :3

[14:48:00.0000] <erlehmann>
<http://blogs.sun.com/greimer/entry/best_way_to_code_a>

[14:48:01.0000] <zewt>
prediction, and only slightly exaggerated: in the future, android's browser becomes the new ie6 :|

[14:49:00.0000] <AryehGregor>
I just finished rewriting my spec so that it's slightly shorter, but produces dramatically better output.

[14:49:01.0000] <zewt>
(in older versions it's really bad--still is in some ways--and zillions of phones have been shipped with no mechanism to update the browser, short of carrier updates that never happen)

[14:49:02.0000] <AryehGregor>
Yay.

[14:50:00.0000] <Hixie>
zewt: thanks. I am replying to all the mail so far, started just after Lachlan's first e-mail. The rest of the mail predates the recent changes.

[14:50:01.0000] <erlehmann>
âGet the W3C standard changed to fit IE6â is listed as a goal of the site. Good job, Hixie ;)

[14:51:00.0000] <erlehmann>
zewt, i thought safari is the new IE6!

[14:51:01.0000] <zewt>
i don't know; i never use safari ever, except in its other webkit incarnations (such as ... android's browser :)

[14:52:00.0000] <zewt>
(but my annoyance with androidbrowser isn't really WebKit's fault)

[14:53:00.0000] <erlehmann>
my annoyance with safari isn't also webkit's fault. but you are right, android browser is an annoying UA, from a dev perspective.

[14:55:00.0000] <zewt>
android's browser is *really* bad at what I'd think would be a huge top priority: full-page web apps (eg. GMaps-style)

[14:55:01.0000] <zewt>
due to the magic-address-bar weirdness

[14:59:00.0000] <AryehGregor>
Google Maps has an app which works much better than the web page.

[14:59:01.0000] <jgraham>
erlehmann: (that fastest way to... article appears to be hopelessly out of date)

[15:00:00.0000] <zewt>
that's just what's so obnoxious--even Google making apps for things, instead of improving their browser so they can be done properly, as portable web apps

[15:02:00.0000] <zewt>
(at least on iOS's browser there's a mechanism to get rid of the address bar, even if it sort of sucks; on android you have to do all kinds of brittle magic tricks to convince it to scroll it off)

[15:03:00.0000] <erlehmann>
jgraham, thanks, i'll re-check it when i need it again.

[16:40:00.0000] <AryehGregor>
How do QR codes work?  I tried taking a picture of one today, with my Nexus One, but apparently that doesn't work.

[16:40:01.0000] <AryehGregor>
I guess I need a separate app.

[16:40:02.0000] <gsnedders>
AryehGregor: Search the Android Market for barcode

[16:40:03.0000] <AryehGregor>
Feh.  Should be built-in.

[16:41:00.0000] <AryehGregor>
I hate third-party apps.

[16:41:01.0000] <AryehGregor>
They tend to a) be poorly designed, b) request unreasonably many permissions.

[16:46:00.0000] <AryehGregor>
That's one reason I like Linux, I can get pretty much all the programs I need from the package repos.

[16:46:01.0000] <AryehGregor>
Some of those are poorly designed, but at least I know they're almost certainly not malicious or overly obnoxious.

[16:48:00.0000] <gsnedders>
AryehGregor: You have seen the perms that the built-in apps want when upgrading? /That/ disturbs me more than most third party stuff

[16:49:00.0000] <AryehGregor>
Yeah, but I don't care, because if Google wants to root my phone they can do it anyway.

[16:51:00.0000] <zewt>
well, largely a side-effect of the unfortunate permissions model: you have to request everything at once--it's impossible to request permission when features are used, so users can actually tell what each is for

[16:51:01.0000] <zewt>
so if you have a net-accessing feature that 1% use, everyone has to agree to it (or not use the app at all)

[16:55:00.0000] <AryehGregor>
I wish I could just disable the permissions selectively.

[16:55:01.0000] <AryehGregor>
That really annoys me.

[16:55:02.0000] <AryehGregor>
Anyway, this is interesting: http://blogs.msdn.com/b/ie/archive/2011/03/17/internet-explorer-9-network-performance-improvements.aspx

[16:55:03.0000] <AryehGregor>
Some of these are things I've never heard of.  Do other browsers do all of that?

[16:56:00.0000] <AryehGregor>
Like caching which domains some domain includes resources for, and resolving them speculatively before you even send the HTTP request for the page content?

[16:56:01.0000] <AryehGregor>
I know Chrome does pre-resolution for links.


2011-03-18
[17:06:00.0000] <TabAtkins_>
AryehGregor: Pretty sure we do that too (pre-resolving domains).

[17:07:00.0000] <AryehGregor>
Do you store which domains every site includes resources from, though?

[17:07:01.0000] <TabAtkins_>
I have no idea.

[17:56:00.0000] <Yuhong>
hsivonen: In http://hsivonen.iki.fi/doctype/test-quirks.php, the support for X-UA-Compatible do not work properly.

[18:01:00.0000] <Hixie>
heycam: in http://www.w3.org/mid/20110317224558.GI1187âwmia , what's the difference between having or not having the [NoInterfaceObject] decorator on the suggested IDL?

[18:02:00.0000] <Hixie>
seems like the suggested idl is different in meaning than the [Supplemental] idl

[18:10:00.0000] <AryehGregor>
Is there a way to get Flash to not insist on being on top of everything else on the page?

[18:10:01.0000] <aho>
wmode=opaque (like a canvas with background color)

[18:11:00.0000] <aho>
wmode=transparent (like canvas)

[18:11:01.0000] <aho>
default is wmode=window, which basically means draw on top of that target rectangle inside the browser window

[18:12:00.0000] <aho>
/me pokes AryehGregor

[18:12:01.0000] <AryehGregor>
aho, thanks.

[18:13:00.0000] <AryehGregor>
I'll try that.

[18:13:01.0000] <aho>
use opaque if possible. it's a bit faster than transparent. (both are very slow.)

[18:14:00.0000] <roc>
if you set CSS opacity:/join #auckland

[18:14:01.0000] <AryehGregor>
Oh, right, we use <iframe> for YouTube, so we probably can't change it.

[18:14:02.0000] <AryehGregor>
roc, uh, mispaste?

[18:14:03.0000] <roc>
sorry

[18:15:00.0000] <AryehGregor>
aho, it causes a big slowdown in video playback, or what?

[18:15:01.0000] <zewt>
#auckland, where people who set CSS opacity gather

[18:15:02.0000] <AryehGregor>
http://stackoverflow.com/questions/4050999/youtube-iframe-wmode-issue

[18:15:03.0000] <aho>
well, it means that the plugin needs to copy that stuff from whatever surface it is using, then hand it over to the browser, which in turn does the compositing voodoo

[18:16:00.0000] <aho>
so... there is some friction involved

[18:16:01.0000] <aho>
native things like canvas and video don't necessarily have to do an extra copy step

[18:17:00.0000] <aho>
(you currently get one with webgl with most implementations though) :>

[18:17:01.0000] <heycam>
Hixie, if we gain this "mixin interface" concept, then they would automatically be [NoInterfaceObject], since they would never exist outside being mixed in somewhere

[18:17:02.0000] <heycam>
Hixie, which is why I left it off that last example, if that's why you're asking

[18:18:00.0000] <heycam>
Hixie, without [NoInterfaceObject] on that middle example, then window.WindowPerformance would exist

[18:18:01.0000] <heycam>
(since I set that name there)

[18:18:02.0000] <Hixie>
heycam: is there any difference between  interface A {x}; [NoInterfaceObject] interface B {y}; A implements B;  and  interface A {xy}  ?

[18:19:00.0000] <heycam>
Hixie, yes: currently we have this "mixin prototype object" that gathers up all of the things from the RHS of implements statements

[18:20:00.0000] <heycam>
that will probably go away with these mixin interface changes

[18:20:01.0000] <heycam>
so that y would go directly on A.prototype

[18:20:02.0000] <Hixie>
the idea of [Supplemental] is that there is no difference, so if there is a difference, then removing [Supplemental] isn't solving the problem. But we can switch from [Supplemental] once the mixin stuff is done.

[18:20:03.0000] <heycam>
yeah

[18:20:04.0000] <heycam>
ok

[18:21:00.0000] <heycam>
so my suggested change to them (the middle one) does then have an impact

[18:21:01.0000] <heycam>
since it'll cause this mixin protoype object to exist

[18:21:02.0000] <heycam>
well, it'll cause the "performance" property to go on that, instead of on Window.prototype

[18:21:03.0000] <Hixie>
yeah

[18:22:00.0000] <heycam>
I think for the moment it doesn't really matter, and once Web IDL is settled (finally) the mixin interface stuff should do what you and they want

[18:22:01.0000] <heycam>
(well I guess you also want [Supplemental] or something like it for the editorial reasons)

[18:29:00.0000] <Hixie>
yeah there are several use cases for it but here i'm just talking about the simple one they use it for :-)

[18:31:00.0000] <paradisaeidae>
Does this imply that html5 drag and drop functionality should by default be available to the svg dom? :: http://dev.w3.org/html5/spec/infrastructure.html#xml

[18:37:00.0000] <ajh_555>
Anyone know if backticks (``) are legal attribute value delimiters? What should UAs do when encountering them?

[18:37:01.0000] <ajh_555>
e.g. class=`foo` or onclick=`bar();`

[18:38:00.0000] <aho>
catching fire is an appropriate response :>

[18:39:00.0000] <gsnedders>
ajh_555: They aren't. They should become part of the attribute value. so the same as class="`foo`"

[18:39:01.0000] <gsnedders>
ajh_555: IE however allows them

[18:41:00.0000] <ajh_555>
Thanks gsnedders

[18:41:01.0000] <ajh_555>
my test matches what you are saying: http://dl.dropbox.com/u/105727/web/backticks.html

[18:43:00.0000] <aho>
tbh i'd be more worried about "smart quotes", which can be often seen in code posted on some blogs

[18:44:00.0000] <gsnedders>
aho: They aren't treated as quote chars by any UA I know of

[18:44:01.0000] <aho>
good :)

[18:51:00.0000] <ajh_555>
Odd that âevenâ IE9 allows backticksâ¦ I thought they were baking in fundamental HTML5 support.

[18:52:00.0000] <ajh_555>
Correct me if Iâm wrong but things should break fairly obviously if you pasting smart quotes âÂ troublesome to the dev, perhaps, but not a long-term XSS fret?

[18:53:00.0000] <zewt>
you're using smart quotes as apostrophes, by the way :)

[18:57:00.0000] <ajh_555>
Yeah, itâs a habit. I actually type them.

[18:58:00.0000] <zewt>
as apostrophes? why? heh

[18:58:01.0000] <ajh_555>
theyâre typographically correct. I use smart quotes for quoting purposes too.

[18:58:02.0000] <ajh_555>
I guess Iâm just kind of anal about design stuff sometimes.

[18:58:03.0000] <zewt>
it's really just plain wrong to use a close quote as an apostrophe; one of the sillier bugs in Unicode

[18:59:00.0000] <ajh_555>
How do you figure?

[18:59:01.0000] <zewt>
apostrophes and single quotation marks are two different things, and we have characters for them both; why use close quotes when you mean apostrophe?

[19:00:00.0000] <zewt>
(i have no honest hope of there ever being any kind of consistency in the world around quotation marks, so this is entirely academic, heh)

[19:01:00.0000] <ajh_555>
In practice though, both the right quote and apostrophe are mapped to U+2019

[19:01:01.0000] <ajh_555>
so the problem isnât that Iâm using the same character, itâs that you think Unicode should distinguish them?

[19:02:00.0000] <ajh_555>
which I could potentially be convinced of, it makes sense.

[19:02:01.0000] <zewt>
U+0027 has always been apostrophe

[19:02:02.0000] <zewt>
it seems bizarre to me that Unicode introduces a close quotation mark, and then goes and aliases apostrophe on top of it again

[19:03:00.0000] <ajh_555>
wellâ¦ thatâs the dumb apostropheâ¦ Elements of Typographic Style says that character doesnât really have a typographic purpose

[19:03:01.0000] <ajh_555>
Yeah that is weird

[19:04:00.0000] <zewt>
seems like it does nothing but muddy everything, since ' will never, ever be "phased out" as an apostrophe--it's not like it's something unicode can "deprecate" with any meaning

[19:05:00.0000] <ajh_555>
yeah

[19:05:01.0000] <ajh_555>
alright iâm splitting, itâs been fun. cheers all

[19:05:02.0000] <zewt>
heh later

[20:56:00.0000] <zewt>
"SHOULD+"? "MUST-"? is the IETF just high?

[21:25:00.0000] <paradisaeidae>
HiAll: Does this imply that html5 drag and drop functionality should by default be available to the svg dom? :: http://dev.w3.org/html5/spec/infrastructure.html#xml

[21:43:00.0000] <Hixie>
ok, i sent out the mail about PeerConnection

[21:43:01.0000] <Hixie>
next on my list is figuring out some mechanism for keeping multiple audio and video tracks in sync

[21:44:00.0000] <Hixie>
(also known as "issue 152" to those following along in the htmlwg)

[22:16:00.0000] <jamesr___>
Hixie: where'd you send the mail about PeerConnection? i don't see anything on whatwg yet

[23:12:00.0000] <Hixie>
jamesr___: oops, it hit the size limit. moderated it out of the queue. :-)

[23:14:00.0000] <jamesr___>
hah!

[00:14:00.0000] <hsivonen>
AryehGregor: from past communication, I've drawn the conclusion that if one bothers to respond at all, it is prudent to make sure that everything is unambigously formulated as objections so that nothing accidentally gets treated as a side observation or expression of support for something

[00:33:00.0000] <matjas>
looks like thereâs a typo in http://html5.org/tools/web-apps-tracker?from=5956&to=5957 that hasnât been fixed yet

[00:34:00.0000] <matjas>
âgiven the value <code title="">image/*</code>, a user agent could offer the user the option of recording a clip using a headset microphone.â

[00:34:01.0000] <matjas>
i guess that shouldâve been audio/*, not image/* again

[00:34:02.0000] <matjas>
is Hixie reading this or should i file a bug for this? :)

[00:35:00.0000] <zcorpan>
matjas: probably both

[00:36:00.0000] <matjas>
k

[00:38:00.0000] <Hixie>
matjas: did you file a bug?

[00:38:01.0000] <Hixie>
if not i can fix it now

[00:38:02.0000] <matjas>
Hixie: I was just doing it; havenât submitted yet

[00:38:03.0000] <matjas>
Hixie: ok, that would be great

[00:38:04.0000] <Hixie>
k don't bother

[00:38:05.0000] <Hixie>
fixing it now

[00:38:06.0000] <Hixie>
thanks

[00:38:07.0000] <matjas>
\o/

[00:40:00.0000] <Hixie>
should be fixed

[00:41:00.0000] <matjas>
yay, thanks

[00:41:01.0000] <matjas>
http://html5.org/r/5959

[01:10:00.0000] <zcorpan>
Hixie: are the four bytes 0x00 0x00 0x00 0x01 the extension area?

[01:15:00.0000] <hsivonen>
whoa. plh objected to Hixie's CP for ISSUE 120 (RDFa prefixes)

[01:15:01.0000] <hsivonen>
that's rather unusual

[01:16:00.0000] <hsivonen>
do the Chairs now have a choice how to Decide when a person who can remove them from chairship objected?

[01:17:00.0000] <jamesr___>
whois plh ?

[01:17:01.0000] <hsivonen>
jamesr___: Philippe Le HÃ©garet, the Domain Leader

[01:20:00.0000] <zcorpan>
Hixie: being able to stop sending audio but continue sending video seems useful for conferencing

[01:22:00.0000] <jamesr___>
where did he register this objection?

[01:22:01.0000] <hsivonen>
jamesr___: http://www.w3.org/2002/09/wbs/40318/issue-120-objection-poll/results

[04:10:00.0000] <zcorpan>
i hope the html wg doesn't decide to publish next week

[05:11:00.0000] <hsivonen>
zcorpan: why?

[05:24:00.0000] <zcorpan>
hsivonen: i'll be on vacation so can't update html5-differences

[05:29:00.0000] <hsivonen>
zcorpan: I see

[08:26:00.0000] <TabAtkins>
zewt: Where's the "SHOULD+" and "MUST-" stuff from?

[08:27:00.0000] <zewt>
http://tools.ietf.org/html/rfc4835

[08:28:00.0000] <TabAtkins>
...okay, yeah, they're high.

[08:40:00.0000] <hsivonen>
AryehGregor: not sure if someone replied to you already about HW accel in Firefox, but there are at least 5 types of HW accel I can think of:

[08:40:01.0000] <hsivonen>
1) Accelerating 3D drawing

[08:40:02.0000] <hsivonen>
2) Accelerating 2D drawing

[08:40:03.0000] <hsivonen>
3) Accelerating compositing

[08:40:04.0000] <hsivonen>
4) Accelerating YUV to RGB conversion

[08:41:00.0000] <hsivonen>
5) Accelerating video decompression

[08:42:00.0000] <hsivonen>
AryehGregor: Firefox accelates compositing on XP, Vista, Windows 7 and Mac. 2D drawing on Linux, Vista and Windows 7.

[08:42:01.0000] <hsivonen>
AryehGregor: s/Mac/Snow Leopard/ actually

[08:43:00.0000] <hsivonen>
3D drawing on XP, Vista, Windows 7, Snow Leopard and Linux

[08:43:01.0000] <hsivonen>
and I *think* YUV to RGB somewhere but I don't know where

[08:43:02.0000] <hsivonen>
all subject to drivers

[08:44:00.0000] <hsivonen>
AryehGregor: so comparing XP and Windows 7, XP doesn't get the acceleration of 2D drawing

[08:44:01.0000] <hsivonen>
AryehGregor: I understand that IE9 in some cases accelerates video decompression, too

[08:48:00.0000] <zewt>
know where it fits video scaling into there? logically it's part of 2d drawing, but video scaling is too important to only support in vista (though I havn't checked, so maybe it does)

[08:48:01.0000] <zewt>
(it could be done as part of compositing, too)

[08:49:00.0000] <zewt>
(or with hardware yuv/rgb conversion, integrated with that--lots of ways to do video, heh)

[09:54:00.0000] <zewt>
ugh suddenly window.URL is webkit.webkitURL in chrome, more mess to work around...

[10:07:00.0000] <zewt>
seems like they're misapplying CSS -naming-prefixes to javascript objects... that, or they hit some real pages where suddenly having a global "URL" breaks pages (which I havn't seen, but wouldn't be all that surprised by)

[10:12:00.0000] <TabAtkins>
Well, if you're adding something experimental in JS, the naming convention is indeed to still do vendor prefixing.

[10:12:01.0000] <TabAtkins>
I dunno why we would have switched from plain URL to webkitURL, though.

[10:28:00.0000] <zewt>
for CSS it makes sense: there's no feature testing in CSS, so if browsers implement foo-property before it's fixed, and that property changes incompatibly, then using the final foo-property can break things later on, with the old and new versions both in the wild

[10:29:00.0000] <TabAtkins>
Actual feature-testing, as in trying out the property and seeing if it works, is often too expensive or impractical.  Name detection is much cheaper and usually good enough, so why not make that easy?

[10:29:01.0000] <zewt>
but you can feature test this stuff in JS explicitly--if there's "webkitURL", then it should also be webkitBlob, webkitCanvas, webkitWorker, for every non-finalized spec

[10:30:00.0000] <TabAtkins>
The JS criteria for what makes a spec sufficiently stable to drop the prefix is *way* more permissive than the CSS one.

[10:30:01.0000] <TabAtkins>
Typically you just prefix if you're doing something experimental.  As soon as it hits a spec that other browsers have given the thumbs up on, you drop the prefix.

[10:31:00.0000] <zewt>
er, but window.URL is also implemented in FF4

[10:31:01.0000] <TabAtkins>
Yeah, as I said, I don't know why we did webkitURL.

[10:32:00.0000] <zewt>
i sort of get it for webkitNotifications (the only other one in window), since that's a really bleeding-edge spec ... though I might only think that since I havn't used it and I've used createObjectURL a lot

[10:33:00.0000] <zewt>
(though from what I recall reading that spec, it's nowhere near complete yet, at least according to its use case section)

[10:42:00.0000] <AryehGregor>
Where's the unofficial HTML version of ES5?

[10:43:00.0000] <AryehGregor>
Google is failing me.

[10:43:01.0000] <nimbupani>
https://github.com/sideshowbarker/es5-spec ?

[10:43:02.0000] <nimbupani>
oops http://es5.github.com/

[10:43:03.0000] <AryehGregor>
Thanks.

[11:04:00.0000] <AryehGregor>
jgraham, do you mind if I hack your error reporting code to pretty-print values?  Like so undefined and "undefined" don't look like the same thing?

[11:04:01.0000] <AryehGregor>
I mean for testharness.js, clearly.

[11:05:00.0000] <zewt>
heh reminds me of someone getting confused on www-dom recently, because eg. addEventListener(null, ...) ends up being addEventListener("null", ...)

[11:05:01.0000] <zewt>
everyone loves them some implicit conversions, right?

[11:30:00.0000] <zewt>
oops, opened an inspect window in chrome on the web-apps spec

[11:30:01.0000] <zewt>
may not be the smartest thing I've ever done

[12:01:00.0000] <Hixie>
/me starts looking at the video sync use cases

[12:12:00.0000] <TabAtkins>
Hixie: I blame you for not speccing cjk lists correctly. >_<

[12:12:01.0000] <Hixie>
i accept full blame

[12:12:02.0000] <Hixie>
the spec wasn't complete when i stopped working on it

[12:12:03.0000] <Hixie>
hence the 200+ e-mails i sent you :-)

[12:12:04.0000] <TabAtkins>
Heh, kk.

[12:13:00.0000] <Hixie>
i was planning on returning to it in 2018 or so

[12:13:01.0000] <TabAtkins>
...you make plans that far ahead?

[12:13:02.0000] <Hixie>
though i doubt anyone on the wg actually believed me when i said that back in 2005 or so

[12:13:03.0000] <Hixie>
sure

[12:13:04.0000] <Hixie>
i planned the html work up to 2022

[12:13:05.0000] <Hixie>
(and we're still on track)

[12:13:06.0000] <TabAtkins>
Other than "I want to have a lot of money when I retire", I've got no plans extending more than 2 or 3 years into the future.

[12:14:00.0000] <Hixie>
well specs take decades to get right

[12:14:01.0000] <Hixie>
it's hard not to plan ahead if one wants to succeed :-)

[12:18:00.0000] <Hixie>
/me ponders in-band tracks

[12:18:01.0000] <Hixie>
does anyone have any examples i can look at of video files with multiple in-band tracks?

[12:19:00.0000] <zewt>
multiple audio/sub tracks, or more esoteric examples?

[12:20:00.0000] <Hixie>
multiple audio or multiple video tracks

[12:20:01.0000] <Hixie>
not subs

[12:20:02.0000] <Hixie>
hohoho, look at this, media-frags already supports picking tracks

[12:20:03.0000] <Hixie>
eeeexcellent

[12:20:04.0000] <zewt>
multiple audio is common on dvds/bds with commentary and dub tracks... never seen multiple video tracks, ever

[12:21:00.0000] <TabAtkins>
Yay media fragments!  Now if only someone would implement them...

[12:21:01.0000] <Hixie>
zewt: sorry i meant actual video files on the web

[12:22:00.0000] <Hixie>
zewt: agreed that dvds do this

[12:22:01.0000] <zewt>
well, the ones I have are based on dvds ... :)

[12:23:00.0000] <Hixie>
oh tools rip multitrack dvds to video files with multiple audio tracks?

[12:23:01.0000] <Hixie>
interesting

[12:23:02.0000] <Hixie>
good to know

[12:23:03.0000] <zewt>
most commonly with .mkv files, in practice

[12:48:00.0000] <zewt>
dreaming of the day there are sufficient APIs for people to make formatted editors that aren't glitchy and strange

[12:48:01.0000] <zewt>
even gmail's is seriously unpleasant to work with

[12:50:00.0000] <aho>
i once created a multi video track mkv... it was weird

[12:50:01.0000] <aho>
vlc opened two displays simultaneously

[12:51:00.0000] <aho>
mpc ignored the second track

[12:51:01.0000] <aho>
wasn't really sure what i had to expect tho :>

[12:51:02.0000] <zewt>
multitrack video seems of really questionable use ... since interleaving the tracks means it'll jack the bitrate way up when you're still just viewing one track

[13:00:00.0000] <AryehGregor>
Whoever decided that switch statements should default to falling through needs to be hit very hard on the head with a crowbar.

[13:00:01.0000] <AryehGregor>
Would requiring "continue;" to fall through be so hard?

[13:01:00.0000] <zewt>
i'd imagine so, since that means something else :)

[13:01:01.0000] <hober>
AryehGregor: but that would make Duff's device be so ugly

[13:01:02.0000] <hober>
:)

[13:01:03.0000] <AryehGregor>
Does "continue;" mean something else in a switch statement?

[13:01:04.0000] <AryehGregor>
hober, maybe that's a good thing . . .

[13:02:00.0000] <Hixie>
AryehGregor: what language?

[13:02:01.0000] <AryehGregor>
JavaScript, at the moment, but it's a general observation.

[13:02:02.0000] <Philip`>
You want to support "case 1: case 2: case 3: /* do something common */; break; case 4: case 5: ..." without explicit fallthrough syntax

[13:02:03.0000] <Hixie>
as far as i can tell the languages that default to fallthrough are the languages that don't have a good way of giving multiple values in the 'case'

[13:02:04.0000] <TabAtkins>
AryehGregor: Right now, 'continue' means "skip to the next iteration of the enclosing loop" if used in a switch, like it would anywhere else.

[13:03:00.0000] <AryehGregor>
Oh, that's a point.

[13:03:01.0000] <zewt>
the "switch fallthrough" thing always felt like one of those looks-like-a-huge-oroblem-but-it's-really-not scenarios

[13:03:02.0000] <AryehGregor>
case 0: case 1: something(); break; wouldn't work then.

[13:03:03.0000] <AryehGregor>
Sigh.

[13:03:04.0000] <AryehGregor>
Oh well.

[13:03:05.0000] <foolip_>
Philip`, ping about the spec splitting: http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#video-conferencing-and-peer-to-peer-communication

[13:03:06.0000] <zewt>
where people seem to complain about it a lot, but which I've never actually had trouble with

[13:03:07.0000] <Philip`>
It looks like C# allows "case 0: case 1: ...", and otherwise it requires an explicit "break" or explicit "goto case 3"

[13:04:00.0000] <zewt>
sort of like people who use yoda conditions because they think if(x = 1) is a big, confusing problem in C--but it's not ...

[13:04:01.0000] <Hixie>
pascal for instance doesn't have fallthrough but allows stuff like:   1, 2, 3: ...;  4, 5: ...;

[13:04:02.0000] <Philip`>
so you can do explicit fallthrough and also you can reorder cases without subtly breaking things

[13:04:03.0000] <zewt>
my condolensces for having knowledge about pascal cluttering up your mind

[13:04:04.0000] <zewt>
i havn't touched that language since highschool :)

[13:04:05.0000] <Hixie>
i was going to say perl doesn't even have switch statements, but wikipedia says perl doesn't have fallthrough but allows it via 'continue'

[13:04:06.0000] <TabAtkins>
Lisp does the same thing with CASE.

[13:04:07.0000] <Hixie>
wonder if they're talking about perl6

[13:04:08.0000] <TabAtkins>
I mean COND.

[13:04:09.0000] <aho>
personally, i think fallthrough would be fine if it were a keyword that is :>

[13:05:00.0000] <Hixie>
zewt: as someone who switches between languages a lot, the '=' vs '==' has been the source of an ungodly number of bugs in my code

[13:05:01.0000] <Philip`>
Perl 5.10 has 'use feature "switch";'

[13:05:02.0000] <Hixie>
really!

[13:05:03.0000] <Hixie>
i had no idea

[13:05:04.0000] <Philip`>
http://perldoc.perl.org/perlsyn.html#Switch-statements

[13:06:00.0000] <Hixie>
ooo

[13:06:01.0000] <aho>
Hixie, using = in a context where == (or ===) is typically used usually generates some kind of warning

[13:06:02.0000] <zewt>
(perl--even more condoleces than pascal)

[13:06:03.0000] <aho>
and you have to add some extra paraens to supress it

[13:06:04.0000] <aho>
eg if ((x=5))

[13:06:05.0000] <zewt>
aho: unless you're stuck in MSVC :|

[13:06:06.0000] <zewt>
unless they've added that in 2010, last I used was 2008

[13:07:00.0000] <Philip`>
zewt: 2008 warns about it

[13:07:01.0000] <Philip`>
(under /W4, it seems)

[13:07:02.0000] <zewt>
does it not disable the warning if you parenthesize?

[13:07:03.0000] <Philip`>
http://msdn.microsoft.com/en-us/library/7hw7c1he(v=vs.80).aspx

[13:07:04.0000] <zewt>
trying to remember what the oddness was, or maybe we just never enabled that warning in that compiler

[13:08:00.0000] <Philip`>
Oh, apparently parentheses don't disable it

[13:08:01.0000] <zewt>
ah yeah

[13:08:02.0000] <zewt>
so i'd have disabled the warning

[13:08:03.0000] <zewt>
since that's even more broken :|

[13:08:04.0000] <Philip`>
Is adding '!= 0' that hard?

[13:11:00.0000] <zewt>
normally it ends up with things like if((f = fopen()) != NULL)

[13:11:01.0000] <zewt>
granted, I've been less inclined to do that anyway in more recent years

[13:13:00.0000] <Hixie>
aho: i usually do it in js

[13:13:01.0000] <aho>
jslint complains about that if you dont add extra parens :>

[13:13:02.0000] <aho>
well, at least i'm fairly sure it does

[13:13:03.0000] <gsnedders>
jslint complains about many random things.

[13:13:04.0000] <aho>
(i never made that mistake for some reason) :>

[13:13:05.0000] <Hixie>
zewt: objectpascal is actually a really nice language.

[13:14:00.0000] <Hixie>
but yeah, i don't use it much :(

[13:14:01.0000] <hober>
my first non-basic, high-level language :)

[13:14:02.0000] <aho>
if (x = 3) -> "Expected a conditional expression and instead saw an assignment."

[13:15:00.0000] <Hixie>
and perl is a really powerful language but very easy to screw up

[13:15:01.0000] <aho>
if ((x = 3)) <- same... aww

[13:15:02.0000] <Hixie>
anyway

[13:15:03.0000] <zewt>
perl is great as an example of how to never design a language, and that's about it :)

[13:15:04.0000] <aho>
if (!!(x = 3)) <- fine... yuck :D

[13:16:00.0000] <zewt>
heh

[13:16:01.0000] <gsnedders>
For some reason I got complained at when myself/a friend rewrote a sed script in Perl.

[13:16:02.0000] <zewt>
i've sometimes done that to quiet MSVC's warning on implicit int -> bool conversions

[13:16:03.0000] <Hixie>
perl is fantastic for really short code, like one-liners or short throwaway text file munging code

[13:16:04.0000] <zewt>
the only thing I use perl for is for things sed/awk used to be for; and even then, only for commandline throwaways, not for anything I'll have to come back to

[13:17:00.0000] <Hixie>
it's also good for things where you're going to do a ton of string manipulation, cos it has really good text handling primitives

[13:17:01.0000] <Hixie>
it's not great for complicated logic, where you really need a strongly typed language

[13:18:00.0000] <Hixie>
(that's one area where objectpascal really shines)

[13:18:01.0000] <zewt>
low-level: C++. high-level: python. embedding: lua. web: javascript.

[13:19:00.0000] <Hixie>
none of those have good typing systems

[13:20:00.0000] <gsnedders>
Haskell ftw!

[13:20:01.0000] <gsnedders>
/me hides from jgraham 

[13:20:02.0000] <Hixie>
i haven't done much with functional languages other than scheme, i really should at some point

[13:20:03.0000] <Hixie>
unfortunately i rarely have purely functional problems to solve

[13:20:04.0000] <Hixie>
usually it's really stateful things like web apps

[13:20:05.0000] <Hixie>
or ui

[13:20:06.0000] <karlcow>
/me votes for human language and poetry

[13:21:00.0000] <zewt>
everything i've ever seen about functional languages just seems totally academic

[13:21:01.0000] <zewt>
so i've mostly ignored them

[13:21:02.0000] <Hixie>
human language is what i use as my main programming language in my job

[13:21:03.0000] <Hixie>
but the compilers are really slow

[13:21:04.0000] <gsnedders>
:)

[13:21:05.0000] <Hixie>
and tend to complain a lot more :-P

[13:21:06.0000] <karlcow>
ahaha

[13:22:00.0000] <Hixie>
bbiab, food.

[13:23:00.0000] <zewt>
who gives more, longer and more nonsensical complaints: people, or an angry C++ compiler and some templates

[13:40:00.0000] <Philip`>
I like functional languages (or at least OCaml; I haven't tried using Haskell) for writing compilers

[13:41:00.0000] <Philip`>
since they seem good at dealing with complex tree-structured data types

[13:42:00.0000] <Philip`>
(because of pattern matching, and static typing that can tell when you've handled all the cases)

[13:52:00.0000] <kennyluck>
I used to think human language is stupid. I guess I still think it is.

[13:53:00.0000] <TabAtkins>
Don't get me started on human language.

[13:55:00.0000] <TabAtkins>
Do any of the browsers support mathml-in-html yet?

[13:56:00.0000] <paul_irish>
FF does

[13:56:01.0000] <TabAtkins>
Excellent.

[13:57:00.0000] <paul_irish>
There is no summary of the <device>, stream API, etc  activity that's going on, is there?

[13:57:01.0000] <paul_irish>
those discussions are terribly difficult to keep track of.

[13:57:02.0000] <TabAtkins>
No.

[13:57:03.0000] <TabAtkins>
Though, I guess Hixie's recent mega-email kinda works.

[13:58:00.0000] <paul_irish>
aye

[13:58:01.0000] <nimbupani>
TabAtkins: so does Opera >_>

[13:58:02.0000] <nimbupani>
at least the ragnarok build

[14:01:00.0000] <TabAtkins>
paul_irish: No one ever said standards is easy.

[14:08:00.0000] <paul_irish>
true story

[14:14:00.0000] <AryehGregor>
Looks like the HTML serialization algorithm doesn't know about <xmp> or <plaintext>.

[14:14:01.0000] <Hixie>
not much to do with <plaintext>

[14:15:00.0000] <Hixie>
though i guess we could omit optional end tags after it or something if we cared

[14:16:00.0000] <TabAtkins>
I'm sad that the CSS spec post-processor barfs on <xmp>.  I had to remove my use of it.  ;_;

[14:16:01.0000] <AryehGregor>
Actually, not much you can do about <xmp> either . . . you can easily create unserializable DOMs this way.

[14:16:02.0000] <AryehGregor>
TabAtkins, port it to an HTML5 parser.

[14:16:03.0000] <Yuhong>
hsivonen: In http://hsivonen.iki.fi/doctype/test-quirks.php, the support for X-UA-Compatible faking do not work properly.

[14:16:04.0000] <TabAtkins>
I don't want to spend the time porting Bert's processor, though it would probably be worthwhile...

[14:17:00.0000] <jgraham>
AryehGregor: Of course not. I have been meaning to do it but haven't got around to it

[14:17:01.0000] <jgraham>
AryehGregor: I don't think reporting "this browser passes all tests for this feature" is good

[14:17:02.0000] <AryehGregor>
jgraham, okay, let me do that then.  I've got a decent one (IMO :) ) written up for my reflection harness.

[14:17:03.0000] <AryehGregor>
Why not?

[14:18:00.0000] <jgraham>
If a browser already passes all tests the tests aren't good enough, probably

[14:18:01.0000] <jgraham>
and it creates *really bad* incentives

[14:18:02.0000] <AryehGregor>
Firefox already passes my base64 tests, and that's legit.

[14:18:03.0000] <AryehGregor>
Why does it create really bad incentives?

[14:18:04.0000] <AryehGregor>
I mean, what incentives, specifically?

[14:19:00.0000] <jgraham>
Because it makes things very binary. Either you pass everything and get praise or pass less than everything and get nothing

[14:19:01.0000] <AryehGregor>
It's still per-feature.

[14:19:02.0000] <jgraham>
So there is a strong incentive not to submit tests that you fail

[14:19:03.0000] <AryehGregor>
Well, there's already an incentive to not submit tests you fail.

[14:19:04.0000] <AryehGregor>
Just look at Microsoft.

[14:19:05.0000] <jgraham>
Even stronger than if there is a continum

[14:19:06.0000] <AryehGregor>
But your competitors will have a *very* strong incentive to submit tests that you fail.

[14:20:00.0000] <AryehGregor>
So let's just assume no one will submit any tests except the ones they pass.

[14:20:01.0000] <AryehGregor>
Still no problem.

[14:20:02.0000] <AryehGregor>
I mean, why is that a problem, really?

[14:20:03.0000] <jgraham>
I don't like that assumption. In particular I personally don't wanthat

[14:20:04.0000] <AryehGregor>
Why not?  What's wrong with it?

[14:20:05.0000] <AryehGregor>
It doesn't matter who writes the tests, as long as they're written.

[14:21:00.0000] <zewt>
i'd expect that if test results are submitted with tests omitted, the assumption would be that those tests failed

[14:21:01.0000] <jgraham>
I would hate to develop good tests that I was prevented from submitting for PR reasons

[14:21:02.0000] <Philip`>
It seems bad to design the process around the idea that all participants are purely rational and will always follow the designed incentives

[14:21:03.0000] <AryehGregor>
That's a personal reason.  I'm asking for a reason from the perspective of the test suite's quality.

[14:21:04.0000] <zewt>
perhaps reported differently, eg. "implicitly-failed"

[14:21:05.0000] <Philip`>
People are much more random than that

[14:22:00.0000] <AryehGregor>
What problem will it cause for the test suite's quality if that's our assumption?

[14:22:01.0000] <TabAtkins>
Philip`: If they're significantly random, then no incentives are useful, so we can ignore them when designing incentives.

[14:22:02.0000] <jgraham>
The asdsumption that someone else will write an equivalent test is highly dubious

[14:22:03.0000] <jgraham>
*assumption

[14:22:04.0000] <jgraham>
Different organisations have shown different levels of commitment to the testsuite

[14:22:05.0000] <AryehGregor>
Philip`, no, you can't completely rely on people following incentives, but incentives are still helpful.

[14:22:06.0000] <Hixie>
(fwiw, if you have written valid tests and the company you work for prevents you from submitting them for any reason, PR or otherwise, send me your resume.)

[14:23:00.0000] <AryehGregor>
jgraham, you only need two.

[14:23:01.0000] <jgraham>
Different organisations have different internal structures

[14:23:02.0000] <AryehGregor>
Also, yeah.

[14:23:03.0000] <AryehGregor>
I'm pretty sure Google and Mozilla people are not going to be prevented from submitting tests just because it makes them look worse.

[14:23:04.0000] <Yuhong>
Yea, MS is the most non PR 2.0 compliant browser vendor, and has been for a while now.

[14:23:05.0000] <AryehGregor>
I mean, your alternative basically creates no incentives for anyone to do anything.

[14:24:00.0000] <AryehGregor>
Is that really superior?

[14:24:01.0000] <Philip`>
TabAtkins: Microsoft seems pretty random and it seems AryehGregor is trying to design a process to incentivise Microsoft differently

[14:24:02.0000] <Hixie>
if anyone stops anyone at google submitting tests for pr reasons, i and probably many others will go non-linear.

[14:24:03.0000] <AryehGregor>
Philip`, no, Microsoft is already acting according to my incentives for PR reasons without those incentives existing yet.  :)

[14:24:04.0000] <Hixie>
i would imagine the same applies to mozilla, and certainly the same applied at opera when i was there.

[14:24:05.0000] <AryehGregor>
(in that they only submit tests that make them look good and other browsers bad)

[14:24:06.0000] <jgraham>
My scheme is designed to stop all the badness associated with reporting results of an unfinished testsuite

[14:24:07.0000] <Hixie>
i mean, just look at acid2... howcome and i actually made opera fail on it worse than it originally did :-)

[14:24:08.0000] <AryehGregor>
(I wonder how many tests they didn't submit because too many competitors pass them)

[14:25:00.0000] <jgraham>
I don't think that creating incentives to releasing tests is the problem

[14:25:01.0000] <AryehGregor>
jgraham, you seem to be very against using the test suite to promote any kind of inter-browser competition.

[14:25:02.0000] <AryehGregor>
As far as I see it, that's one of the most important purposes of the test suite, and the key to getting it to be complete.

[14:25:03.0000] <Philip`>
AryehGregor: A Microsoft person approved all the canvas tests, even though they fail lots of them, so they don't seem to be acting purely to gain 100% scores

[14:26:00.0000] <Hixie>
(having said all that, i'm kinda with jgraham that test suites should just report results neutrally without granting extra praise if you hit particular thresholds like 100%)

[14:26:01.0000] <jgraham>
AryehGregor: I am happy for parts of the testsuite where there is reasonably ood coverage to be used in that way

[14:26:02.0000] <AryehGregor>
Philip`, they also corrected some of their submitted tests even when that made IE fail them.  They're not going to try to get perfect scores if they have to do something dishonest publicly, that people can call them out on.

[14:26:03.0000] <jgraham>
*good

[14:27:00.0000] <AryehGregor>
jgraham, I'm fine with only reporting results where we feel there's good coverage.

[14:27:01.0000] <Philip`>
AryehGregor: They say things in blog posts where people call them out on dishonesty all the time

[14:27:02.0000] <jgraham>
AryehGregor: So, going back to the original problem, you need a way to highlight "this test fails in all browsers and so could well be buggy"

[14:27:03.0000] <AryehGregor>
Hixie, why?  The percentage doesn't really mean anything.  You could fail every test due to one trivial bug, or you could fail almost no tests despite major bugs, depending on how the tests are written.

[14:27:04.0000] <zewt>
they also edit blog comments by other people to say things they didn't say :)

[14:27:05.0000] <AryehGregor>
Philip`, well, yes.  But there are limits.

[14:28:00.0000] <jgraham>
My scheme does that without requiring laxy-journalist-friendly tables

[14:28:01.0000] <jgraham>
*lazy

[14:28:02.0000] <Hixie>
AryehGregor: because the percentage doesn't really mean anything, and nor does passing every test.

[14:28:03.0000] <AryehGregor>
zewt, no, that was probably just one guy.

[14:28:04.0000] <AryehGregor>
jgraham, that's orthogonal.  I agree we should flag such tests, no matter what approval or reporting scheme we use.

[14:28:05.0000] <Hixie>
AryehGregor: the only thing that means anything is failure of an individual test, and all it means is that either the test, the spec, or the browser has a bug

[14:28:06.0000] <AryehGregor>
Although most of them are probably just "nobody implements this yet".

[14:29:00.0000] <AryehGregor>
Hixie, passing every test means there are no bugs known to the test suite maintainers in the implementation of that feature.  That means something.

[14:29:01.0000] <Hixie>
only that the test suite is incomplete :-)

[14:29:02.0000] <jgraham>
AryehGregor: No

[14:29:03.0000] <AryehGregor>
If tests fail due only to spec or test bugs, you'd expect the implementer to figure that out and fix the tests.

[14:29:04.0000] <Philip`>
Trying to reverse-engineer Microsoft's private motivations and behaviour based on their public behaviour doesn't seem particularly reliable

[14:29:05.0000] <jgraham>
It means the test suite isn't good enough

[14:29:06.0000] <zewt>
who's doing something evil enough on a microsoft domain for me to associate some of that with the company

[14:29:07.0000] <Philip`>
(particularly since they're many individuals with different motivations, not a monolithic group mind)

[14:29:08.0000] <AryehGregor>
Hixie, jgraham: so do you have suggestions on what to add to my base64 tests so that Firefox fails a test?

[14:30:00.0000] <AryehGregor>
It's a pretty simple feature, it's not rocket science to match the spec exactly.

[14:30:01.0000] <Hixie>
jgraham: not necessarily that it's not good enough -- if there are other things that are failing, then it might just be that the test suite is good enough given the current priorities

[14:30:02.0000] <AryehGregor>
Of course there might be unknown bugs, but nothing's perfect.  You can at least check for all known possible bugs.

[14:31:00.0000] <jgraham>
AryehGregor: No. Myabe for that feature it is possible to match the spec exactly. But for more complex features I would expect all browsers to fail a bit for a long time

[14:31:01.0000] <AryehGregor>
Yes, I totally agree.

[14:31:02.0000] <Hixie>
AryehGregor: i don't think it's a priority to test more things in that test suite at this point, so i'd say the test suite for that feature is good enough; but if everything else was to pass as well, then yes, i'd think that we could add things.

[14:31:03.0000] <Hixie>
AryehGregor: for example, what happens if you pass a 2.1GB argument to the method?

[14:31:04.0000] <AryehGregor>
Hixie, behavior is undefined, hardware limitations clause.  :)

[14:31:05.0000] <AryehGregor>
(Do *I* have to tell *you* that?)

[14:32:00.0000] <jgraham>
AryehGregor: All behaviour is undefined due to that clause :)

[14:32:01.0000] <Hixie>
AryehGregor: if it crashes, that's a bug regardless of the spec

[14:32:02.0000] <AryehGregor>
It's a QoI bug.

[14:32:03.0000] <AryehGregor>
Browsers are allowed to crash due to hardware limitations.

[14:32:04.0000] <Hixie>
AryehGregor: if it hangs, it's a bug regardless of the spec

[14:32:05.0000] <Hixie>
AryehGregor: etc

[14:32:06.0000] <AryehGregor>
Still a QoI bug.

[14:32:07.0000] <AryehGregor>
Not a spec bug.

[14:32:08.0000] <Hixie>
didn't say it was

[14:32:09.0000] <Yuhong>
"Microsoft seems to have a stronger corporate agenda dictating the actions of its standards bodies representatives. Hickson [from Google] looks very independent"

[14:32:10.0000] <Yuhong>
from http://news.cnet.com/8301-30685_3-20008935-264.html#ixzz1EBjhiiN4

[14:32:11.0000] <Hixie>
who cares if it's a spec bug

[14:33:00.0000] <AryehGregor>
Well, these are spec tests, not QoI tests.  We deliberately don't want to test hardware limitations for the same reason we don't want to spec them.

[14:33:01.0000] <Hixie>
what matters is whether there's a bug or not, not whether there's a spec bug or not :-)

[14:33:02.0000] <Hixie>
oh it's quite possible that the w3c wouldn't want to test this, sure

[14:33:03.0000] <zewt>
well, the practical "optimum" behavioor for passing a 2.1GB argument, if there isn't enough memory, is probably to just disable scripts on the page entirely--which is rather hard to test...

[14:33:04.0000] <jgraham>
AryehGregor: If you do contentWindow.atob in an iframe in Firefox, it will probably throw a DOMException that is an instanceof a DOMException in the top frame. Eventually WebIDL will say that is wrong

[14:34:00.0000] <Hixie>
browser vendors presumably would (in the scenario we're talking about, where every other bug has been found and all the features are tested to the same comprehensive level)

[14:34:01.0000] <AryehGregor>
jgraham, well, your harness is the one that should be testing for that.

[14:34:02.0000] <AryehGregor>
Anyway, we've gotten off-topic.

[14:34:03.0000] <zewt>
on irc? never!

[14:34:04.0000] <AryehGregor>
(actually, no, I guess my test would have to be run in an iframe, but whatever, it's not specced yet)

[14:34:05.0000] <Hixie>
Yuhong: that's an ooooold article :-)

[14:34:06.0000] <AryehGregor>
(anyway the harness could also do it)

[14:35:00.0000] <Yuhong>
Hixie: but proves my point.

[14:35:01.0000] <jgraham>
AryehGregor: It doesn't test the negative i.e. it only checks that the DOMException is defined in the global is is supposed to be

[14:35:02.0000] <AryehGregor>
Okay, so back to the topic: the goal of the test suite approval and reporting procedure should be to get as many high-quality tests as possible.  Yes or no?

[14:35:03.0000] <jgraham>
Not that it is not an instance of any other DOMExceptions in different globals

[14:36:00.0000] <jgraham>
AryehGregor: Pedantically, no. It should be to get the best coverage of implementations and the spec possible

[14:36:01.0000] <AryehGregor>
Okay, fine.

[14:36:02.0000] <AryehGregor>
It's basically the same idea if you assume a high-quality test doesn't duplicate other tests.

[14:37:00.0000] <AryehGregor>
So, to do so, we should try to design the process to encourage people and organizations to write and submit tests, and to encourage implementations to change to conform to the tests.  Right?

[14:37:01.0000] <AryehGregor>
Just making sure our goals are clear here.

[14:37:02.0000] <jgraham>
The second part isn't really related to the goal you set

[14:38:00.0000] <AryehGregor>
Yes, okay.

[14:38:01.0000] <jgraham>
Of course having people pass tests is good, but it is in tension with making the best possible testsuite

[14:39:00.0000] <AryehGregor>
So actually, the goal is to get implementations to converge on standard behavior.

[14:39:01.0000] <AryehGregor>
That's the point of everything here.

[14:39:02.0000] <AryehGregor>
The point of the test suite is actually to further that goal.

[14:39:03.0000] <jgraham>
Yes, the testsuite is a tool

[14:39:04.0000] <AryehGregor>
Good now?  Let's not confuse ends and means.

[14:40:00.0000] <AryehGregor>
Okay, now there are at least two ways the test suite can further that goal:

[14:40:01.0000] <Hixie>
i'm not really sure i'd agree with "we should try to design the process"...

[14:40:02.0000] <Hixie>
who needs process

[14:40:03.0000] <AryehGregor>
1) Giving implementers a tool to identify where they fail.

[14:40:04.0000] <zewt>
a secondary goal, I think--which is related to that in a roundabout way--is also finding where implementations are universally *not* converging on the spec (suggesting a spec issue)

[14:40:05.0000] <Hixie>
just have someone in charge of the test suite and delegate all authority to them, if they do a bad job then fork

[14:40:06.0000] <AryehGregor>
2) Pressure implementers to pass more of the tests (and thus, if the tests are good, converge on standard behavior).

[14:40:07.0000] <zewt>
(eg. the storage mutex)

[14:41:00.0000] <AryehGregor>
Hixie, are you volunteering?  If not, who do you propose?

[14:41:01.0000] <Hixie>
if you want to do it, i'm all for you doing it :-) or jgraham :-) anyone who wants to do it, basically

[14:41:02.0000] <AryehGregor>
zewt, I deliberately said "standard behavior" to include behavior that might not match any written spec (in which case the spec should be written or changed).

[14:42:00.0000] <AryehGregor>
Hixie, but for the purposes of (2), it helps if they're endorsed by the W3C, so that the general public will accept their legitimacy more readily.

[14:42:01.0000] <Hixie>
o_O

[14:42:02.0000] <zewt>
that's not what I said, though--converging on a single behavior (that differs from the spec) and not converging at all are different things

[14:42:03.0000] <Hixie>
they're tests

[14:42:04.0000] <Hixie>
they're not for the general public

[14:42:05.0000] <AryehGregor>
Then do you disagree with my (2) above?

[14:42:06.0000] <Hixie>
their legitimacy is determined by their technical value, not by PR

[14:42:07.0000] <jgraham>
AryehGregor: The canonical example of (2) is acid 3

[14:42:08.0000] <AryehGregor>
And think tests should only be for (1)?

[14:43:00.0000] <Hixie>
2) is not the goal of the test suite imho

[14:43:01.0000] <AryehGregor>
jgraham, yes.  Acid3 was flawed because it tested only a very narrow slice of things.

[14:43:02.0000] <Hixie>
the market should take care of 2 on its own

[14:43:03.0000] <Hixie>
if the standard isn't worth implementing interoperably then it should not be implemented interoperably

[14:43:04.0000] <AryehGregor>
Interesting perspective.

[14:43:05.0000] <AryehGregor>
From that perspective, we simply shouldn't report test suite results.

[14:43:06.0000] <Hixie>
entirely 100% agreed

[14:44:00.0000] <AryehGregor>
Although W3C process will require that each test be passed by two implementations.

[14:44:01.0000] <AryehGregor>
But let's forget about that for now.

[14:44:02.0000] <Hixie>
the w3c process is antiquated

[14:44:03.0000] <jgraham>
AryehGregor: I'm not saying Acid 3 was perfect. I'm saying it is the canonical example of optimising for PR

[14:44:04.0000] <jgraham>
and it happened outside W3C

[14:44:05.0000] <AryehGregor>
True.

[14:44:06.0000] <Hixie>
yeah, acid tests are a whole different beast

[14:45:00.0000] <AryehGregor>
Hixie, so wait, why is it okay for Acid3 to be designed for PR but not a real test suite?

[14:45:01.0000] <zewt>
reporting test results is useful for developers, who want to know how reliably they can use a particular feature (in more detail than "which vendors claim to implement it")

[14:45:02.0000] <Hixie>
they're pretty much the worst example of what a test suite is

[14:45:03.0000] <zewt>
(that's a separate goal, of course, so secondary)

[14:45:04.0000] <jgraham>
zewt: It seems reasonable to do that at the level of caniuseit.com

[14:45:05.0000] <Lachy>
acid tests are absolutely terrible for QA. They're only good for PR

[14:46:00.0000] <zewt>
jgraham: that's very, very broad--it only says whether a feature is generally supported by each browser

[14:46:01.0000] <jgraham>
zewt: i.e. you get someone knowlegable to go through the test results and decide which are critical failures and which are minor issues and put things in big categories like "not implemented", "too buggy to use" "acceptable", "good" etc.

[14:46:02.0000] <zewt>
(which is also useful, obviously)

[14:47:00.0000] <jgraham>
zewt: It seems about as useful as saying that a browser got 78% on a particular testsuite without any reference to the quality of the tests or why it failed

[14:48:00.0000] <jgraham>
It is quite trivial to set up a situation where a worse implementation gets a better score when one deals in percentages

[14:48:01.0000] <AryehGregor>
That's why all-or-nothing is a better approach.

[14:48:02.0000] <zewt>
"78% on a particular testsuite" is pretty useless anyway, I'm talking about individual test pass/fail reports

[14:48:03.0000] <jgraham>
No, all or nothing is the worst approach

[14:48:04.0000] <zewt>
all-or-nothing is utterly useless...

[14:48:05.0000] <AryehGregor>
/me wtfs at this templating code in testharness.js

[14:48:06.0000] <AryehGregor>
zewt, why?

[14:49:00.0000] <jgraham>
AryehGregor: (I apologise for that code)

[14:49:01.0000] <zewt>
conversely, how is it useful?

[14:49:02.0000] <AryehGregor>
It's useful because if the browser passes all tests, you know it has no known bugs.

[14:49:03.0000] <AryehGregor>
If it passes any less than that, you have to get into very subjective evaluations of the importance of the various failures before you can pass judgment.

[14:49:04.0000] <zewt>
for example, every browser will always fail a storage test, because no browser (afaik) implements or has any plans of implementing the storage mutex. it's not useful to see "storage: failed"; it should be one test of many, telling what particular bits failed

[14:50:00.0000] <AryehGregor>
If no browser implements it, it should be removed from the spec and thus not tested.

[14:50:01.0000] <zewt>
that's a conclusion you make from (among other things) looking at the test results.

[14:50:02.0000] <jgraham>
AryehGregor: Arguably the only incenive that creates is to add just enough tests for already well-tested parts of the spec that the competion fail to get a perfect score

[14:50:03.0000] <AryehGregor>
Of course the individual test results would still be available for those who wanted them.

[14:51:00.0000] <AryehGregor>
I meant that on the official-looking page where it says "BROWSER STANDARDS CONFORMANCE RESULTS" it should only report all-or-nothing.

[14:51:01.0000] <zewt>
"pass/fail" for whole features seems useful for nobody *but* PR: "we passed this test and nobody else did!"

[14:51:02.0000] <jgraham>
zewt: It seems entirely unreasonable to expect a web developer to go through 100,000 tests to determine which features they can use

[14:51:03.0000] <AryehGregor>
Yeah, I'm saying that we should use pass/fail for PR while implementers use the actual lists of failures.

[14:51:04.0000] <zewt>
jgraham: i hope the tests are organized somewhat better than a soup of 100000 tests :)

[14:52:00.0000] <jgraham>
zewt: Even if it is just a few hundred tests for a feature

[14:52:01.0000] <Hixie>
"if the browser passes all tests, you know it has no known bugs" is clearly not true, since there are almost certainly known bugs without tests yet

[14:52:02.0000] <Hixie>
s/clearly/often/

[14:53:00.0000] <AryehGregor>
Hixie, if it had publicly known bugs, anyone (e.g., its competitors) could submit new tests to make it fail.

[14:53:01.0000] <AryehGregor>
So you'd expect that to happen pretty soon.

[14:53:02.0000] <zewt>
jgraham: i'd find it useful to be able to look in detail at known cross-browser issues based on test results--is there really any reason to *not* make that information available?

[14:53:03.0000] <Hixie>
if you want to do pr, you should design something for pr, not use a test suite designed to check for correctness

[14:53:04.0000] <AryehGregor>
But we want browsers to get good PR only if they're correct.

[14:54:00.0000] <AryehGregor>
Acid3 gives them good PR only if they partially implement a bizarre subset of web features just enough to pass the tests.

[14:54:01.0000] <zewt>
AryehGregor: suggestion: if you want to make "having any tests failing at all" look bad, don't format it as "140/150 tests passed"; say "10 tests failed"

[14:54:02.0000] <jgraham>
AryehGregor: In any case I remain utterly unconvinced that a system that encourages people to not submit tests that make them fail and relies on other people coming up with the same test later to get the same coverage is a good idea

[14:55:00.0000] <jgraham>
It seems like the most stable equlibrium is at 100% pass for everyone and a poor quality testsuite

[14:56:00.0000] <AryehGregor>
jgraham, that will never happen if your competitor (or some random person) can find a bug and submit a test for it.

[14:56:01.0000] <AryehGregor>
So it's not stable at all.

[14:56:02.0000] <AryehGregor>
The only stable equilibrium is either everyone passing or everyone failing, for a given test.

[14:56:03.0000] <AryehGregor>
Actually, everyone passing is only a stable equilibrium if no one has any easily-spotted bugs.

[14:56:04.0000] <zewt>
often the workflow for projects, when they discover a bug, is to fix the bug and add a regression test (in their own test suite) for the bug at the same time--rather than adding a failing test and then coming back to fix it months later

[14:56:05.0000] <Hixie>
we don't want browsers to get PR at all from this

[14:56:06.0000] <Hixie>
or at least, i don't

[14:57:00.0000] <AryehGregor>
The problem with the scheme is that "everyone fails" might be too hard to get out of, for nontrivial features.

[14:57:01.0000] <jgraham>
AryehGregor: But it is quite stable because people are typically looking for bugs in thei own product not in others' and because people will know that if they submit a test that causes others to fail, the others will have an incentive to submit a test that makes them fail

[14:57:02.0000] <zewt>
so if you can get people to submit tests as part of that (eg. taking their regression test and submitting it as a spec test) as standard procedure, that'd probably lead to a lot of useful tests

[14:58:00.0000] <jgraham>
Hixie: Agreed.

[14:58:01.0000] <AryehGregor>
jgraham, random third parties can also submit tests, and so can people at places like Mozilla or Google where they won't stop you from doing it.

[14:58:02.0000] <jgraham>
AryehGregor: Even at Mozilla and Google there are incentives to look good on public tests

[14:58:03.0000] <AryehGregor>
zewt, that's helpful, but it's not going to get you really comprehensive tests.  Regression tests have a different purpose from conformance tests.

[14:59:00.0000] <AryehGregor>
jgraham, I work for Google right now, and I have no incentive to make WebKit look good on tests.

[14:59:01.0000] <zewt>
regression tests are a subset of conformance tests; it's not enough, but it can be quite a lot

[14:59:02.0000] <jgraham>
AryehGregor: I presume there is some reason that people keep implementing parts of HTML5 in webkit just enough to score on tests but not enough to actually be used

[14:59:03.0000] <jgraham>
e.g. <details>

[15:00:00.0000] <AryehGregor>
jgraham, I don't know if that's why he's doing it.  Maybe it would explain why their implementation is so terrible.

[15:01:00.0000] <AryehGregor>
But that's why results shouldn't be reported unless the test suite is reasonably comprehensive.

[15:01:01.0000] <AryehGregor>
Although for things where that implies good UI, it's kind of hard to test, granted.

[15:01:02.0000] <Hixie>
jgraham: make sure to keep tab in the loop when you spot things like this, he sits with the chrome team and can go sit on their keybord when they do that

[15:02:00.0000] <hober>
jgraham: what's wrong with the <details> impl?

[15:02:01.0000] <jgraham>
TabAtkins: Hixie thinks you are a cat

[15:02:02.0000] <jgraham>
hober: It seems to have no UI

[15:02:03.0000] <jamesr>
it's a hell of a lot easier to implement something to a specific set of tests than to somebody's vaguely stated requirements

[15:02:04.0000] <AryehGregor>
Hixie, I'm pretty sure he knows about their atrocious forms implementation, but he hasn't managed to stop it yet.

[15:02:05.0000] <AryehGregor>
jamesr, since when are HTML5 or related specs vague?

[15:03:00.0000] <jamesr>
rendering requirements are

[15:03:01.0000] <jamesr>
and test suites are always less vague than english

[15:03:02.0000] <Hixie>
yeah but that doesn't mean we get to just screw things up :-)

[15:04:00.0000] <AryehGregor>
Most of WebKit's forms implementation is not even subtly bad.  It's inexcusably bad.

[15:04:01.0000] <AryehGregor>
Like a date-picker that behaves like a number-picker.

[15:04:02.0000] <jgraham>
jamesr: Implementing enough to pass feature detection, but not actually a useful form of the feature is just poisoning the well

[15:04:03.0000] <Hixie>
wow, i just tested <details> in chrome

[15:04:04.0000] <Hixie>
who the heck did that

[15:04:05.0000] <TabAtkins>
Yeah, our <details> thing was pretty crappy, since it screwed up modernizr.  But we've got an actual impl going now.

[15:05:00.0000] <jamesr>
i think the date picker is pretty lulzy

[15:05:01.0000] <AryehGregor>
It's very clear that the forms stuff skipped the design phase.

[15:05:02.0000] <jamesr>
jgraham: i agree we shouldn't pass feature detection until the impl is at least passable

[15:05:03.0000] <AryehGregor>
Whereas Firefox's forms are really nice and well-designed.

[15:05:04.0000] <AryehGregor>
And Opera's are kind of mediocre, but at least they're not horrible.

[15:05:05.0000] <paul_irish>
AryehGregor: yeah.. though you've seen the WIP for the new datepicker?

[15:06:00.0000] <jgraham>
AryehGregor: I thought the implementation improved a lot recently?

[15:06:01.0000] <zewt>
can that be a test result summary: "at least it's not horrible"

[15:06:02.0000] <AryehGregor>
Whose, Opera's?

[15:06:03.0000] <Hixie>
i wish firefox did type=range

[15:06:04.0000] <jgraham>
(in Opera)

[15:06:05.0000] <AryehGregor>
I haven't checked recently.

[15:06:06.0000] <Hixie>
that's the main one i want to use

[15:06:07.0000] <paul_irish>
http://peter.sh/files/webkit-html5-date-picker.html

[15:06:08.0000] <Hixie>
that or type=color

[15:06:09.0000] <Hixie>
also really useful would be image borders

[15:06:10.0000] <paul_irish>
this is a few weeks back.. the <<< buttons got killed recently along with added polish

[15:06:11.0000] <jgraham>
AryehGregor: Please do. It must have been O11 where the new implemenation landed

[15:08:00.0000] <nimbupani>
TabAtkins: can I point typos in css3-values spec here? :)

[15:09:00.0000] <TabAtkins>
Could you hit me in a private message?  I can make the edits, but there's no need to spam the rest of the channel. ^_^

[15:09:01.0000] <nimbupani>
DONE.thnx.

[15:10:00.0000] <TabAtkins>
I'll get to them in a bit - just send them all to me now, don't wait for a response.

[15:10:01.0000] <nimbupani>
kay!

[15:12:00.0000] <jamesr>
jgraham: i agree that we (chrome) should do a better job on form control UI

[15:12:01.0000] <jamesr>
but you can't expect an automated test suite to enforce that

[15:12:02.0000] <Hixie>
yeah we need more manual test suites

[15:13:00.0000] <Hixie>
s/suites//

[15:13:01.0000] <Hixie>
more manual tests

[15:13:02.0000] <Hixie>
to test this kind of stuff

[15:13:03.0000] <Hixie>
make sure that the elements are rendering sanely

[15:13:04.0000] <jgraham>
jamesr: I don't expet an automated testsuite to enforce that

[15:13:05.0000] <Hixie>
make sure interaction is working right

[15:13:06.0000] <jgraham>
*expect

[15:14:00.0000] <AryehGregor>
How exactly is a test suite supposed to test UI if there are no UI requirements written down anywhere, in the spec or elsewhere?

[15:14:01.0000] <Hixie>
but still, shipping a feature as broken as <details> is on dev right now is pretty bad (haven't checked the release builds)

[15:14:02.0000] <Hixie>
AryehGregor: the spec has ui requirements

[15:14:03.0000] <jamesr>
AryehGregor: that's what i meant by rendering requirements being vague. they are some rendering requirements in the spec

[15:14:04.0000] <AryehGregor>
Ah, right.

[15:14:05.0000] <Hixie>
AryehGregor: "In the absence of style-layer rules to the contrary (e.g. author style sheets), user agents are expected to render an element so that it conveys to the user the meaning that the element represents" ... "The details element represents a disclosure widget from which the user can obtain additional information or controls"

[15:14:06.0000] <AryehGregor>
Well, each implementer has to make its own detailed rendering requirements in the usual UI design process.

[15:15:00.0000] <AryehGregor>
Oh, well, that's right.

[15:15:01.0000] <AryehGregor>
I was thinking of date-pickers and such.

[15:15:02.0000] <AryehGregor>
For <details> you're right.

[15:15:03.0000] <AryehGregor>
But I don't think the spec prohibits using a number-picker for a date-picker.

[15:15:04.0000] <AryehGregor>
(maybe it should)

[15:15:05.0000] <jgraham>
jamesr: Without knowing how Chrome development works I would expect this case to be caught by, say, code review. Or QA.

[15:15:06.0000] <AryehGregor>
Yeah, me too.  But somehow it wasn't.

[15:16:00.0000] <Hixie>
also, re <details>, "If the [open] attribute is absent, the details are not to be shown" but despite the .open being implemented in chrome, the contents are still shown

[15:16:01.0000] <zewt>
that could be automatically tested, right?

[15:16:02.0000] <AryehGregor>
People have definitely complained to WebKit, but nothing has happened.

[15:16:03.0000] <Hixie>
AryehGregor: well, a number picker might make sense, i dunno. maybe some ubernerd wants a time_t skin for their browser. :-)

[15:16:04.0000] <AryehGregor>
zewt, how, looking at pixels?

[15:17:00.0000] <jgraham>
AryehGregor: getCompuedStyle, presumably

[15:17:01.0000] <AryehGregor>
That assumes they implement it by CSS . . . although I guess that's reasonable.

[15:17:02.0000] <AryehGregor>
Or not really.

[15:17:03.0000] <zewt>
i havn't looked at <details>--just seems like checking if something is shown is akin to testing display: none

[15:18:00.0000] <AryehGregor>
The <summary> is a child of <details>, but has to be shown even if it's closed.

[15:18:01.0000] <jgraham>
AryehGregor: Doesn't the rendering section require that?

[15:18:02.0000] <AryehGregor>
So you can't use display: none.

[15:18:03.0000] <AryehGregor>
Does it?

[15:18:04.0000] <AryehGregor>
"When the details element does not have an open attribute, this second container is expected to be removed from the rendering."

[15:18:05.0000] <Hixie>
(though "are not" is lame, i wonder why that's not a should... hmm...)

[15:19:00.0000] <Hixie>
/me files a bug

[15:20:00.0000] <Hixie>
huh, this 152 proposal from microsoft is terrible

[15:20:01.0000] <Hixie>
it doesn't even support audio descriptions when the video file contains them

[15:20:02.0000] <jgraham>
AryehGregor: "removed from the rendering" suggests it has 0 height

[15:20:03.0000] <Lachy>
that webkit date control prototype looks kind of nice, but unfortunately, still uses the same old basic UI that is tedious to use.

[15:20:04.0000] <AryehGregor>
"suggests"

[15:20:05.0000] <Hixie>
jgraham: fwiw the rendering section does have more details (in css terms) about how <details> is rendered

[15:21:00.0000] <jgraham>
AryehGregor: Well the rendering section requires more tealeaves than average

[15:21:01.0000] <AryehGregor>
Lachy, well, <select multiple> still displays in every browser (AFAIK) as something you can't actually use without knowing the magical Ctrl-/Shift-click secret.

[15:21:02.0000] <AryehGregor>
So I'm not optimistic about UI improving much beyond the basics.

[15:22:00.0000] <Lachy>
yeah, but select multiple is a relic from the past that doesn't get used too often these days.

[15:22:01.0000] <AryehGregor>
Only because it's so horrible.

[15:22:02.0000] <AryehGregor>
It would be useful if the UI weren't horrible.

[15:22:03.0000] <TabAtkins>
Opera Mini/Mobile (dunno which) actually rendered <select multiple> well, as a checkbox list.

[15:23:00.0000] <AryehGregor>
Yeah, I wish more browsers did.

[15:23:01.0000] <Lachy>
opera mini and mobile should use the same UI

[15:23:02.0000] <Hixie>
lynx too iirc

[15:23:03.0000] <zewt>
i wonder about ios/android webkits, since you don't have control- at all on a touchscreen

[15:23:04.0000] <Lachy>
at least, they do in recent versions. I will see what it looks like.

[15:29:00.0000] <TabAtkins>
Um, apparently Android totally screws up a <select multiple>.  Wow.

[15:29:01.0000] <zewt>
i didn't feel like plodding through on my g1 to check. heh

[15:29:02.0000] <zewt>
hard to get motivated on hardware like that :)

[15:29:03.0000] <TabAtkins>
xanthir.com/test.html if you wanna look

[15:38:00.0000] <Hixie>
/me ponders how audio volume should work in a multitrack situation

[15:39:00.0000] <zewt>
for playing more than one track at once?

[15:39:01.0000] <Hixie>
yeah

[15:39:02.0000] <zewt>
very little prior art for that...

[15:39:03.0000] <Hixie>
suppose you have a video with a main audio track and an audio descriptions track

[15:39:04.0000] <Hixie>
all the implementations i've seen just have one volume control, i guess

[15:39:05.0000] <Hixie>
but that's not really the problem

[15:39:06.0000] <zewt>
yeah I can see the use cases for it, i've just never seen anything actually do it

[15:40:00.0000] <Hixie>
the problem is if we are exposing this as two objects, do they both get volume controls? and if so, what happens when you twist the volume knob?

[15:40:01.0000] <Hixie>
and what is saved as the user preference?

[15:41:00.0000] <zewt>
if it's a media player where i've selected "audio with descriptions", i'd still expect to get a single volume control

[15:41:01.0000] <Hixie>
yeah, it's the api i'm worried about, more than the ui

[15:41:02.0000] <Hixie>
or rather, how to make sure the api makes the ui work

[15:41:03.0000] <Hixie>
as people would expect

[15:42:00.0000] <zewt>
my initial reaction is separate volume controls: one for the whole audio element, and one per track

[15:42:01.0000] <zewt>
where the UI, and most users of the API, would only use the former

[15:42:02.0000] <Hixie>
if you've set the main audio to 50% and the audio description to 75%, and you twist the volume knob, can it take the other volumes any higher?

[15:42:03.0000] <zewt>
i've always only implemented volume control as attenuation

[15:43:00.0000] <Hixie>
and if so, does that mean that if you change the individual controls from the api, the master volume will appear to change?

[15:43:01.0000] <zewt>
so if channel 2 is set to 50%, it's not possible to turn the main volume control up to 200% and cancel it out

[15:43:02.0000] <Hixie>
or should the master volume only be able to reduce the volume, in which case the "real" volume is just multiplying each channel's volume by the master volume

[15:43:03.0000] <Hixie>
it seems like a poor user experience if the script sets the volume low that the user can't then bring it back up high

[15:43:04.0000] <zewt>
the latter: each volume control is [0,1], the final volume for each channel is their product, and the main volume control only affects the master attenuation

[15:44:00.0000] <zewt>
(don't know if this is necessarily the ideal approach--just a common, straightforward one)

[15:46:00.0000] <zewt>
hard to say if per-track volume controls are even important, without prior works to look at

[15:47:00.0000] <Hixie>
well if we use <audio> elements to represent multiple audio tracks, then they each get a volume control

[15:47:01.0000] <Hixie>
i guess we could force them equal, but that seems unintuitive from an API perspective

[15:47:02.0000] <Hixie>
the UI could drive them all together I guess

[15:47:03.0000] <zewt>
hmm, a use case I can think of where controlling each track's volume is useful:

[15:48:00.0000] <zewt>
if you have an intermittent description/commentary track, you might want to pull the volume of the main track down when someone makes a comment, then bring it back up

[15:48:01.0000] <zewt>
without doing so if the alternate track is disabled

[15:48:02.0000] <Hixie>
that's known as ducking

[15:48:03.0000] <Hixie>
we'd want to do that automatically, ideally

[15:48:04.0000] <zewt>
(i've done this myself, in games I've worked on)

[15:48:05.0000] <zewt>
that's tricky to do from an API perspective due to latency, though

[15:48:06.0000] <jgraham>
Doesn't this work the same way as the typical situation where you have one master volume control and one volume control per output device?

[15:49:00.0000] <Hixie>
jgraham: that would be the style zewt was suggesting

[15:49:01.0000] <jgraham>
Yes

[15:49:02.0000] <Hixie>
it's one option

[15:49:03.0000] <jgraham>
I would be surprised by other options

[15:49:04.0000] <jgraham>
Not by them existing

[15:49:05.0000] <jgraham>
But by their dissimilarity to the familar

[15:49:06.0000] <Hixie>
well don't forget from the user's perspective there's likely only going to be one knob at all

[15:50:00.0000] <zewt>
trying to make a one-knob UI with any other mechanism seems hairier

[15:50:01.0000] <Hixie>
the question is if the author made the volume low on all the tracks, should the user, manipulating a master knob, be able to make the audio audible

[15:50:02.0000] <jgraham>
I would expect a site that bothered to provide multiple tracks would also bother to have UI for controlling their relative volumes

[15:51:00.0000] <Hixie>
TVs don't

[15:51:01.0000] <Lachy>
Hixie, I'd expect the track volume to be exposed in an extra UI pane that the user can bring up, like an equaliser panel, or like the volume control window in Windows

[15:51:02.0000] <zewt>
not necessarily; it's more complex and possibly confusing for regular users

[15:51:03.0000] <zewt>
(i mean, they can always expose it as an advanced option, but as far as the standard UI goes)

[15:51:04.0000] <jgraham>
Pretty much all software does

[15:51:05.0000] <zewt>
(yeah what lachy said)

[15:51:06.0000] <jgraham>
Sure, I would expect the standard UI to be a single control

[15:52:00.0000] <jgraham>
But it seems silly to have multiple tracks if they can't be controlled seperately

[15:52:01.0000] <Hixie>
given the difficulties we've had getting browser vendors to expose UIs (see earlier discussion), i wouldn't count on even a single volume control being made available, frankly

[15:53:00.0000] <jgraham>
It also seems a bit silly to worry about the site doing something user-hostile

[15:53:01.0000] <Hixie>
but it seems bad to design the api on the basis that the UI will expose them all, either way

[15:53:02.0000] <Hixie>
worrying about sites doing user-hostile things is my day job :-P

[15:53:03.0000] <jgraham>
Presumably they can already screw with you by continually changing the volume

[15:53:04.0000] <TabAtkins>
Hixie: All the browsers expose a volume control on <video> and <audio> already.  Only one, obviously.

[15:54:00.0000] <Hixie>
jgraham: it's the unintentional hostility i'm more worried about in this case

[15:54:01.0000] <jgraham>
(it seems more reasonable to assume that javascript-based video players will expose mixer UIs than browsers)

[15:54:02.0000] <Lachy>
for the API, the .volume property should just be the master volume, and then there could be an audio track API, perhaps exposed as a separate object, that lets scripts mute/unmute selected tracks and control their volume.

[15:55:00.0000] <Hixie>
which one should the UA remember as the preference?

[15:55:01.0000] <Hixie>
(in UAs that are so fine-grained)

[15:56:00.0000] <jgraham>
Hixie: That seems like a UA problem

[15:56:01.0000] <jgraham>
Why can't it remember all of them?

[15:56:02.0000] <zewt>
i'd expect the API for volume control to be identical for the master volume and each track: they're both just audio tracks--the master volume is just a track sourcing from the individual tracks

[15:57:00.0000] <Lachy>
are there use cases for also exposing APIs to controll the bass, treble, and surround sound mixers too?

[15:57:01.0000] <Hixie>
jgraham: it could, sure

[15:57:02.0000] <Hixie>
jgraham: just trying to understand what you had in mind

[15:58:00.0000] <zewt>
jgraham: provided tracks are tagged generically enough to meaningfully remember them

[15:58:01.0000] <Hixie>
Lachy: probably, but i'm hoping to deal with that separately

[15:58:02.0000] <jgraham>
zewt: Yeah it isn't quite a trivial problem

[15:58:03.0000] <zewt>
eg. saving the volume for "track 2 of foo.ogv" isn't too useful; but remembering the volume for "commentary tracks on origin http://whatever" is more useful

[15:58:04.0000] <jgraham>
But neither is form autofill

[15:59:00.0000] <jgraham>
So possibly if it improves the user experience enough it will happen

[15:59:01.0000] <jgraham>
(possibly it won't be that useful though and the people who want it will have to install extensions or something)

[15:59:02.0000] <zewt>
Lachy: seems like that's pushing the scope out a lot more than volume

[15:59:03.0000] <zewt>
jgraham: in this case, i think playing multiple audio tracks simultaneously will be so rare browsers won't optimize it much

[16:00:00.0000] <zewt>
but who knows, heh

[16:00:01.0000] <Lachy>
Hixie, sure, but it's worth keeping in mind for the future. I'm thinking we could have an AudioControl object (or whatever name), in which we can have all the properties for controlling everything related to audio, and that could be exposed as HTMLMediaElement.audioMixer or something

[16:01:00.0000] <zewt>
yeah, that's what I had in mind above--eg. .volume, .onvolumechange, .mute, .unmute, etc., as an interface exposed for both the master channel and each individual track


2011-03-19
[20:29:00.0000] <Hixie>
well the css-discuss thread about <table> is pretty much everything i feared and more, and i haven't even updated the spec yet

[12:53:00.0000] <Xdega>
does anyone know who maintains this channel?

[12:58:00.0000] <Hixie>
Xdega: how do you mean, "maintains"?

[13:00:00.0000] <Xdega>
maybe

[13:00:01.0000] <Xdega>
heh

[13:00:02.0000] <Xdega>
well just curious if a link to the forums could be added

[13:01:00.0000] <Xdega>
forums.whatwg.org

[13:01:01.0000] <Xdega>
in the welcome message

[13:01:02.0000] <Xdega>
so i guess anyone that is able to edit the welcome message

[13:01:03.0000] <Hixie>
pretty much anyone is able to edit the message, i think, but we have so many links (blog, forums, wiki, spec, etc) that we just put them on www.whatwg.org/ and then link to that instead

[13:02:00.0000] <Xdega>
kk

[13:03:00.0000] <Xdega>
also looks like the facebook page is missing a link to the website even. Just a copy paste from wikipedia. (and no whatwg logo)

[13:04:00.0000] <Hixie>
we have a facebook page? o_O

[13:04:01.0000] <Hixie>
dunno who's running that

[13:04:02.0000] <Xdega>
aparently, lol http://www.facebook.com/pages/WHATWG/116109708402918

[13:04:03.0000] <Xdega>
only 9 likes atm though.

[13:04:04.0000] <Hixie>
i don't even have a facebook account :-)

[13:05:00.0000] <Xdega>
that is awkward, cause it's not possible to make a page with the same name, and the person running the page is meant to be a representative of the grp or organization per facebooks terms

[13:05:01.0000] <Hixie>
i don't see how to change that page without making a whole facebook profile and stuff

[13:05:02.0000] <gsnedders>
/me should create an Ian Hickson public-figure page just to like that

[13:05:03.0000] <Hixie>
but anyone who does the facebook stuff and cares about this is welcome to do whatever is the appropriate thing

[13:06:00.0000] <Hixie>
feel free to make that your contribution to the community :-)

[13:06:01.0000] <Xdega>
well if i could find out who has that current page I would be more than happy

[13:06:02.0000] <Hixie>
doesn't it say?

[13:06:03.0000] <Xdega>
already working with the forums, trying to get them a little more active. I think facebook could be a good window

[13:06:04.0000] <Hixie>
cool

[13:09:00.0000] <Xdega>
well just submitted a report to facebook for a "fake page" If it gets removed I will make a new one heh.

[13:11:00.0000] <Xdega>
also trying to find a way to convert the mailing list to RSS feed, and then will work on implementing some kind of integration with Twitter RSS and Mailing list RSS on the forums :D

[13:13:00.0000] <Hixie>
neat

[13:54:00.0000] <Xdega>
so how would I go about getting access to submit an article for the WHATWG Blog?

[13:55:00.0000] <Hixie>
i should be able to do it but since we removed the admin link i don't remember the page to do it from :-(

[13:55:01.0000] <gsnedders>
Xdega: Can you not just create an account?

[13:55:02.0000] <Xdega>
not seeing the option >.<

[13:56:00.0000] <gsnedders>
Oh, "User registration is currently not allowed."

[13:56:01.0000] <gsnedders>
Hixie: Is that deliberate, do you know?

[13:56:02.0000] <Hixie>
not sure

[13:58:00.0000] <gsnedders>
/me doesn't really want to change that

[13:58:01.0000] <gsnedders>
Xdega: what's your email (pm is fine if you don't want it logged)?

[13:58:02.0000] <gsnedders>
Xdega: And choose a username.

[14:07:00.0000] <gsnedders>
Xdega: Just ask here when you want to publish something, then someone with admin perms should be able to publish it for you.

[14:07:01.0000] <Xdega>
ok. well i plan on writing an article later (maybe tommorow). I will let you guys know.

[14:08:00.0000] <Xdega>
although it appears I have the ability to click "publish" from the WP dashboard.

[14:11:00.0000] <jgraham>
gsnedders: I think it is deliberate

[14:11:01.0000] <jgraham>
Once you have an account you can publish

[14:11:02.0000] <jgraham>
But you have to ask for an account

[14:14:00.0000] <Xdega>
well time for me to bounce, thanks for the account.

[14:17:00.0000] <jgraham>
boing

[14:18:00.0000] <Ms2ger>
/me hits jgraham over the head with a balloon

[14:20:00.0000] <gsnedders>
/me watches jgraham get entagled in the balloon and float up and away

[14:21:00.0000] <Ms2ger>
/me gets his crossbow

[14:22:00.0000] <gsnedders>
Ms2ger: Trying to harm the opposition by making me have to work in the same room as that guy?

[14:22:01.0000] <jgraham>
/me gets out his bra-ket notation

[14:23:00.0000] <gsnedders>
Well, for the occasions when I'm in Lkpg :P

[14:23:01.0000] <Ms2ger>
You're a student. What do you mean, work?

[14:24:00.0000] <gsnedders>
Ms2ger: I work part-time for Opera. And when I work in an office, I tend to work in the same room as jgraham.

[14:26:00.0000] <jgraham>
Are you saying that when you go to the other offices you don't work?

[14:28:00.0000] <gsnedders>
jgraham: What do you think they do in GÃ¶teborg if not play Quake 3?

[15:08:00.0000] <smaug____>
(Stikki did sound immediately someone from Finland, even before noticing the domain ;) )

[16:39:00.0000] <eric_carlson>
Hixie: ping?

[16:39:01.0000] <Hixie>
here

[16:40:00.0000] <eric_carlson>
what is the rational for not having cues in the DOM?

[16:41:00.0000] <Hixie>
they are in the dom

[16:41:01.0000] <Hixie>
same as CSS and JS

[16:41:02.0000] <eric_carlson>
Hixie: the text for the current cue?

[16:42:00.0000] <Hixie>
the text for the current cue of the first track of  a video element /video/ is  video.tracks[0].activeCues[0].getCueAsHTML()

[16:43:00.0000] <nessy>
it's not in the page DOM though, right?

[16:44:00.0000] <Hixie>
it's in the page DOM just like CSS and JS is...? I don't understand the question.

[16:44:01.0000] <nessy>
as in - a cue could be added as a <div> underneath e.g. the <track> element

[16:45:00.0000] <Hixie>
?

[16:45:01.0000] <erlehmann>
whyyyy would you do that?

[16:45:02.0000] <Hixie>
oh you mean putting the cues in teh page?

[16:45:03.0000] <Hixie>
i considered that but it seemed like most people would want thhe subtitles in a separate file

[16:46:00.0000] <nessy>
the idea is to parse the external file and upon parsing change the page DOM and add the cues in <div> elements

[16:46:01.0000] <erlehmann>
well, that would certainly be possible. but inline cues would be a mess. let's not go there.

[16:47:00.0000] <nessy>
why would they be a mess?

[16:47:01.0000] <Hixie>
that makes no sense

[16:47:02.0000] <nessy>
(not necessarily saying I want that, but trying to understand the reasons)

[16:48:00.0000] <Hixie>
why would something not in the page be in the page?

[16:48:01.0000] <Hixie>
i don't think i understand the proposal

[16:49:00.0000] <erlehmann>
nessy, what would happen if track elements are in a video and in a div next to it?

[16:50:00.0000] <erlehmann>
in what order would video.tracks be filled? what if later the DOM changes?

[16:50:01.0000] <erlehmann>
what if the div with the tracks comes before the video? can tracks for one video also be used for another?

[16:50:02.0000] <nessy>
erlehmann: this is not the proposal

[16:50:03.0000] <erlehmann>
oh. i don't think i understand the proposal, then.

[16:51:00.0000] <Hixie>
yeah me either

[16:51:01.0000] <erlehmann>
please elaborate, nessy.

[16:51:02.0000] <nessy>
erlehmann: the proposal is to parse an external file and to load the cues from that external file into the page and then ignore the external file

[16:51:03.0000] <Hixie>
that's exactly what happens

[16:51:04.0000] <nessy>
like an iframe

[16:51:05.0000] <Hixie>
the cues get parsed, just like js or css, into a dom structure

[16:51:06.0000] <erlehmann>
nessy, âinto the pageâ?

[16:51:07.0000] <nessy>
ok, but right now we only add them to the IDL, not the page DOM

[16:51:08.0000] <Hixie>
that's what video.tracks is

[16:52:00.0000] <Hixie>
what's the difference between "the IDL" and "the page DOM"?

[16:52:01.0000] <nessy>
no, you cannot address it directly through CSS

[16:52:02.0000] <erlehmann>
i remain confused. nessy, what is video.tracks missing?

[16:52:03.0000] <Hixie>
oh if you're talking about how you style it in CSS, then you use the ::cue pseudo-element

[16:53:00.0000] <Hixie>
so in the page CSS you can say, e.g., viduo::cue(v[voice=narrator]) { color: red; }

[16:53:01.0000] <nessy>
sure, the question that is being asked here is why not put it straight into the page so we don't need a pseudo-element and can directly use a page element

[16:54:00.0000] <Hixie>
well like i said, i did consider supporting having the cues directly in the page

[16:54:01.0000] <nessy>
e.g. video > track > cue

[16:54:02.0000] <Hixie>
but it seems most people would want to use an external file

[16:54:03.0000] <Hixie>
so i ended up not supporting that

[16:54:04.0000] <Hixie>
we could certainly add support for in-page cues too i guess

[16:54:05.0000] <Hixie>
if there's a good use case

[16:55:00.0000] <nessy>
the author wouldn't author them in the page - they would be authored in an external file

[16:55:01.0000] <Hixie>
basically just define a maping of nodes to the Track API

[16:55:02.0000] <Hixie>
you just said "having the cues directly in the page"

[16:55:03.0000] <Hixie>
er, mispaste. you just said "why not put it straight into the page"

[16:55:04.0000] <nessy>
after the UA has parsed the file and included them into the page

[16:55:05.0000] <Hixie>
wait wait wait, you're saying you want the VTT parser to actually parse into the HTML parser's output?!

[16:56:00.0000] <nessy>
yes - are there good reasons not to do that?

[16:56:01.0000] <Hixie>
sanity?

[16:56:02.0000] <Hixie>
i mean that would just be crazy

[16:56:03.0000] <nessy>
why? (sorry for asking the seemingly dumb...)

[16:57:00.0000] <Hixie>
it would be completely inconsistent with everything the platform does with external files

[16:57:01.0000] <Hixie>
it would prevent any kind of round-tripping of files containing links to cues

[16:57:02.0000] <Hixie>
it would mean the DOM didn't reflect the markup even when no script has manipulated the DOM

[16:57:03.0000] <nessy>
iframes get rendered into the DOM, too

[16:57:04.0000] <Hixie>
<iframe>s work exactly like cues

[16:57:05.0000] <Hixie>
they are separate trees

[16:58:00.0000] <Hixie>
that can be accessed via the DOM API

[16:58:01.0000] <Hixie>
the child of the iframe isn't the iframe's browsing context's dom tree

[16:58:02.0000] <Hixie>
that would be a security disaster

[16:59:00.0000] <nessy>
it's the round-tripping of links in the cue that would create the security disaster?

[16:59:01.0000] <Hixie>
i mean... if external cues went into the HTML tree, it would mean that an external cue file could affect form submission of unrelated forms, for example

[16:59:02.0000] <Hixie>
no the security disaster would be if iframes worked as you describe

[16:59:03.0000] <Hixie>
not for cues


2011-03-20
[17:00:00.0000] <Hixie>
cues are same-origin, so we side-step the security issues there

[17:00:01.0000] <Hixie>
though if we did what you described, we'd never be able to do cross-origin cues either

[17:00:02.0000] <nessy>
ok, so that problem doesn't exist for cues?

[17:00:03.0000] <nessy>
ah ok

[17:02:00.0000] <nessy>
thanks, that's the arguments that we needed :-)

[22:56:00.0000] <Hixie>
why on earth are <output> elements in Chrome focusable

[22:56:01.0000] <Hixie>
is that fixed in dev builds?

[22:57:00.0000] <Hixie>
/me wonders if he's already run into this and complained about it...

[10:07:00.0000] <MikeSmith>
foolip: you around?

[11:57:00.0000] <Xdega>
Hi. Just a heads up to any admins. I just submitted a new blog entry for review ;)

[15:50:00.0000] <ktos>
Hello

[15:51:00.0000] <ktos>
I read TabAtkins blogpost about layout template vs flexbox

[15:52:00.0000] <ktos>
his arguments are very nice but just wondering does anybody have different opinion? :)

[15:52:01.0000] <ktos>
http://www.xanthir.com/blog/b4580

[16:00:00.0000] <aho>
like what?

[16:00:01.0000] <aho>
flexbox isn't the ultimate solution for doing layouts

[16:00:02.0000] <aho>
it's just too limited

[16:00:03.0000] <aho>
ascii layout... eh.. "template" gets rid of some restrictions

[16:02:00.0000] <aho>
the biggest problem is probably that css isn't a layout language

[16:02:01.0000] <aho>
however, no one really knows how a layout language should look like :>

[16:02:02.0000] <ktos>
aho: but if you had to choose what would you say? :)

[16:03:00.0000] <aho>
didn't know it was a xor thing

[16:04:00.0000] <aho>
his conclusion also doesnt suggest this

[16:04:01.0000] <ktos>
there was yet Microsoft

[16:05:00.0000] <ktos>
's draft

[16:05:01.0000] <ktos>
in 2007 but seems to be dead

[16:07:00.0000] <aho>
i'm still not sure what you're looking for

[16:09:00.0000] <ktos>
I just tried to get know the future :)

[16:09:01.0000] <ktos>
but image is very distorted

[16:10:00.0000] <ktos>
anyway thank you for expressions :)

[16:10:01.0000] <aho>
btw there is some js implementation of ascii layout

[16:11:00.0000] <aho>
you could give it a try if you want

[16:12:00.0000] <ktos>
yes, I saw it such as flexbox js implementaions

[16:12:01.0000] <ktos>
I going to test it

[16:12:02.0000] <aho>
we'll probably end up with both things... or two things which are sorta kinda like that... or one thing which can do both things without getting too awkward

[16:12:03.0000] <ktos>
author or temmplate writes:

[16:13:00.0000] <ktos>
This draft is related to the drafts about positoning with grid units (âgrâ) [CSS3GRID], flexible GUIs [CSS3-FLEXBOX], and tables [CSS3TBL]. The CSS Working Group is considering combining some or all of these into a single specification with all matrix-based layouts.

[16:14:00.0000] <ktos>
aho: have you seen this: http://desandro.com/demo/masonry/ ?

[16:14:01.0000] <aho>
yes

[16:15:00.0000] <aho>
that float "up" kind of thing innit?

[16:15:01.0000] <ktos>
aho: I am wondering is it another idea or implementation of some of drafts

[16:16:00.0000] <ktos>
I saw some description about float reversing there but I am still unsure

[16:16:01.0000] <aho>
afaict something like that isn't covered by any of the drafts

[16:17:00.0000] <ktos>
do you think does it make any sense or better use some implementation of draft in hypothetical production use?

[16:17:01.0000] <ktos>
js implmentation of draft*

[16:18:00.0000] <aho>
you can use anything in production that works good enough on the target hardware/software

[16:18:01.0000] <aho>
what that exactly means is a different story :>

[16:19:00.0000] <ktos>
yeah, my problem is I like the best of the best solutions, no compromises, which is very rare in CS unfortunatly :)

[16:20:00.0000] <aho>
web front-end stuff = compromises build on top of other compromises :>

[16:21:00.0000] <ktos>
right :)

[16:28:00.0000] <ktos>
oh, btw just discovered Microsoft's idea resurected http://www.interoperabilitybridges.com/css3-grid-align/

[16:30:00.0000] <CvP>
grid is kinda ... great so far.

[16:30:01.0000] <CvP>
combine this with flex and it should be really "flexible"


2011-03-21
[17:29:00.0000] <smaug____>
abarth: I wonder if I'm just testing Chrome+SearchBox somehow wrongly

[17:29:01.0000] <abarth>
smaug____: possibly, how are you testing it?

[17:30:00.0000] <smaug____>
abarth: well, I have google as the default engine

[17:30:01.0000] <abarth>
chrome://settings/browser

[17:30:02.0000] <abarth>
Enable Instant for faster searching and browsing

[17:30:03.0000] <smaug____>
and I just type 'potato'

[17:30:04.0000] <abarth>
should be checked

[17:30:05.0000] <smaug____>
what should happen?

[17:30:06.0000] <smaug____>
yeah, I have that instant thing enabled

[17:30:07.0000] <abarth>
so, don't press enter

[17:30:08.0000] <abarth>
you should see the SERP for potato

[17:30:09.0000] <smaug____>
should I have google loaded

[17:30:10.0000] <abarth>
nope

[17:30:11.0000] <abarth>
any old tab will do

[17:31:00.0000] <smaug____>
ok

[17:31:01.0000] <smaug____>
so, I load first www.helsinki.fi

[17:31:02.0000] <smaug____>
then type 'potato', and not enter

[17:31:03.0000] <smaug____>
the old page just get dimmed

[17:32:00.0000] <abarth>
you don't see a results page?

[17:32:01.0000] <smaug____>
and the dropdown under search box gives potato soup, salad, etc

[17:32:02.0000] <smaug____>
that is all

[17:32:03.0000] <smaug____>
no search page

[17:32:04.0000] <abarth>
ok, you must not have the feature enabled properly

[17:32:05.0000] <smaug____>
is it possible that google is not serving the same pages to Europe?

[17:33:00.0000] <smaug____>
/me has restarted Chrome with and without the pref

[17:33:01.0000] <abarth>
that's possible.  it's hard for me to test that

[17:34:00.0000] <abarth>
if you go to www.google.com

[17:34:01.0000] <abarth>
and type potato (without pressing enter)

[17:34:02.0000] <abarth>
do you see results?

[17:34:03.0000] <smaug____>
yeah, it does give me results

[17:34:04.0000] <abarth>
what happens if you type in the omnibox now?

[17:35:00.0000] <abarth>
(e.g., "dog" without pressing enter)

[17:35:01.0000] <smaug____>
google.com gets dimmed, and the dropdown under omnibox shows some results

[17:35:02.0000] <smaug____>
er

[17:35:03.0000] <smaug____>
not results

[17:35:04.0000] <smaug____>
but search suggests

[17:36:00.0000] <abarth>
what do you mean by dimmed?

[17:37:00.0000] <smaug____>
abarth: there is some kind of background-color: white; opacity: 0.5; layer above the page

[17:37:01.0000] <abarth>
does that stay indefinitely?

[17:38:00.0000] <smaug____>
as long as I'm using omnibox without pressing enter

[17:38:01.0000] <abarth>
strange

[17:38:02.0000] <abarth>
that's the UI for waiting for results from the server

[17:38:03.0000] <abarth>
sounds like you're seeing some bugs

[17:39:00.0000] <smaug____>
I did get one crash earlier when setting instant search enabled first time

[17:39:01.0000] <smaug____>
or soon after that

[17:40:00.0000] <smaug____>
abarth: anyway, so the idea is that when user types something to omnibox, search page is loaded and then browser communicates with that page?

[17:41:00.0000] <abarth>
yes

[17:41:01.0000] <smaug____>
where is that search page loaded?

[17:41:02.0000] <abarth>
in the main content area

[17:41:03.0000] <abarth>
just as it would be if you typed enter

[17:41:04.0000] <smaug____>
does the old page in the current tab get unloaded?

[17:41:05.0000] <abarth>
nope

[17:41:06.0000] <abarth>
it's just hidden

[17:41:07.0000] <abarth>
as if in a background tab

[17:41:08.0000] <abarth>
it gets unloaded if you actually navigate to the search page

[17:42:00.0000] <abarth>
by typing enter

[17:42:01.0000] <smaug____>
the API assumes a lot of things, which aren't specified :(

[17:42:02.0000] <abarth>
yes, the spec needs a bunch of work

[17:42:03.0000] <abarth>
i asked tony to do some of that work

[17:42:04.0000] <abarth>
and he said he was hoping other folks would be interested in it

[17:45:00.0000] <smaug____>
something in the API doesn't feel right... it has to do with exposing more information about browser chrome to web, and that way limit what the UI can be...

[17:46:00.0000] <smaug____>
need to think about this

[17:46:01.0000] <abarth>
i think the core use case if getting notified of typing quickly

[17:46:02.0000] <abarth>
so the results page can update

[17:46:03.0000] <abarth>
s/if/of/

[17:47:00.0000] <abarth>
also, having the results page supply suggested completions via javascript is also important for performance

[17:47:01.0000] <smaug____>
sure

[17:48:00.0000] <abarth>
the occlusion stuff feels the most non-general to me

[17:50:00.0000] <smaug____>
abarth: why does the browser show any suggestions in this case? Couldn't all that be moved to the web page

[17:51:00.0000] <smaug____>
then there wouldn't be popupbox under the omnibox in this case

[17:51:01.0000] <abarth>
there area a bunch of different suggestions shown the dropdown

[17:51:02.0000] <abarth>
not all of them are searches

[17:51:03.0000] <smaug____>
ah, right

[17:55:00.0000] <smaug____>
I wonder how Google search handles the case when location bar isn't on top

[17:55:01.0000] <abarth>
there's probably a way to experiment with that using the web inspector

[17:56:00.0000] <abarth>
maybe it would make sense to separate the two parts of the proposal?

[17:56:01.0000] <abarth>
(the typing / suggestion data flow and the occlusion part)

[17:58:00.0000] <smaug____>
yeah

[17:58:01.0000] <smaug____>
and maybe not emphasize the "search" part so much, since also UI may overlap the page

[17:59:00.0000] <smaug____>
and web page may want to get data from browser UI also in some other cases.

[18:00:00.0000] <smaug____>
s/also UI/also other UI/

[18:02:00.0000] <abarth>
AutocompleteInput ?

[18:03:00.0000] <abarth>
(trying to think of non-search names)

[21:28:00.0000] <Xdega>
are there any admins of the whatwg blog online?

[21:31:00.0000] <Hixie>
Xdega: here - just looking at your post in fact

[21:31:01.0000] <Xdega>
cool

[21:32:00.0000] <Hixie>
Xdega: looks good, just change the <br/><br/> stuff to <p>s so people don't poke fun at us for using <br> when the spec says not to :-)

[21:32:01.0000] <Hixie>
oh and remove the &nbsp; at the end

[21:33:00.0000] <Xdega>
i think WP did that on it's own. Cause I used the editor

[21:33:01.0000] <Hixie>
ah ok

[21:33:02.0000] <Hixie>
is there some way to change the markup that you can see?

[21:33:03.0000] <Hixie>
i can't see how to switch to it, it seems to be the default for me

[21:34:00.0000] <Hixie>
let me know if you can't, and i can do it

[21:36:00.0000] <Xdega>
yah, there is a html tab

[21:37:00.0000] <Xdega>
i was fixing it, but noticed someone else was editing it simultaneously. heh

[21:38:00.0000] <Hixie>
if it said "ian hickson" or "admin" was editing it that's cos i was logged in and looking at it

[21:38:01.0000] <Hixie>
i noticed it said anne had touched it recently but i thought he was off on some faraway island or something

[21:38:02.0000] <Xdega>
k

[21:40:00.0000] <gsnedders>
Hixie: I'm not sure South America (somewhere) counts as a faraway island. :)

[21:41:00.0000] <Xdega>
heh, well post markup fixd :D

[21:43:00.0000] <Xdega>
worst part is the wysiwyg editor in wp auto added xhtml style br tags, lol

[21:43:01.0000] <Hixie>
gsnedders: it's an island far from you, isn't it? :-P

[21:44:00.0000] <Hixie>
Xdega:

[21:44:01.0000] <Hixie>
cool

[21:44:02.0000] <Hixie>
/me tries to remember how to log into the blog again

[21:45:00.0000] <Xdega>
http://blog.whatwg.org/wp-login.php

[21:45:01.0000] <Hixie>
yeah i found it

[21:48:00.0000] <Hixie>
man i really should let the experts do this

[21:48:01.0000] <Hixie>
/me fights with wordpress :-P

[21:48:02.0000] <Hixie>
ok!

[21:48:03.0000] <Hixie>
you should now have the right to publish your post

[21:49:00.0000] <Hixie>
hopefully i didn't break anything in the process

[21:49:01.0000] <Xdega>
cool

[21:49:02.0000] <Hixie>
/me logs out quickly to limit the damage he can cause :-P

[21:52:00.0000] <Xdega>
heh, alright. Blog entry published. good deal

[21:52:01.0000] <Xdega>
thx

[21:53:00.0000] <Hixie>
thank _you_!

[21:54:00.0000] <Xdega>
well 12am where I am. + Work bright and early = Bed Time.

[21:54:01.0000] <Xdega>
nn guys :D

[21:55:00.0000] <Hixie>
nn!

[22:09:00.0000] <othermaciej>
hi everyone

[22:12:00.0000] <othermaciej>
/me just returned from 2 weeks in no-internet-land

[22:15:00.0000] <heycam>
othermaciej, come on, australia has internet

[22:15:01.0000] <heycam>
in places

[22:15:02.0000] <heycam>
:)

[22:15:03.0000] <othermaciej>
heycam: unfortunately, those places do not include Uluru or the Coral Sea

[22:16:00.0000] <heycam>
ah, nice! never been there myself.

[22:16:01.0000] <othermaciej>
(both very nice places, despite the lack of internet and high concentration of deadly flora and fauna)

[22:26:00.0000] <Hixie>
nessy: yt?

[22:26:01.0000] <Hixie>
othermaciej: yay, you returned!

[22:26:02.0000] <Hixie>
othermaciej: did you see the sky at night at Uluru?

[22:26:03.0000] <othermaciej>
hey there Hixie!

[22:26:04.0000] <othermaciej>
Hixie: yes

[22:26:05.0000] <othermaciej>
I even brought an iPad star chart app so I could identify the stars

[22:27:00.0000] <Hixie>
othermaciej: that's the most beautiful skyscape i've ever seen

[22:27:01.0000] <othermaciej>
spotting the milky way, the southern cross and orion was easy

[22:27:02.0000] <Hixie>
othermaciej: (only place i've ever been with no other lights)

[22:27:03.0000] <othermaciej>
but I am not sure I would have identified the Magellanic Clouds otherwise

[22:27:04.0000] <Hixie>
cool

[22:27:05.0000] <othermaciej>
or Saturn

[22:28:00.0000] <othermaciej>
GPS / accelerometer based star chart is so win

[22:28:01.0000] <Hixie>
yeah

[22:28:02.0000] <Hixie>
google sky, or something else?

[22:28:03.0000] <Hixie>
google sky is pretty sweet

[22:28:04.0000] <Hixie>
haven't played with it much though

[22:28:05.0000] <othermaciej>
it was one called RedShift

[22:28:06.0000] <Hixie>
ah, cool

[22:28:07.0000] <Hixie>
haven't seen that one

[22:28:08.0000] <othermaciej>
(and my girlfriend had Sky Walk)

[22:28:09.0000] <othermaciej>
I hadn't heard of Google Sky

[22:28:10.0000] <Hixie>
it's basically the opposite of google earth

[22:29:00.0000] <Hixie>
on the desktop it's just a subfeature of earth

[22:29:01.0000] <Hixie>
on mobile it's a separate app

[22:30:00.0000] <othermaciej>
doesn't seem to exist for iOS, unless it has a non-obvious name

[22:30:01.0000] <Hixie>
ah, yeah, might not be on iOS

[22:30:02.0000] <Hixie>
it's probably a 20% project

[22:31:00.0000] <Hixie>
so it probably just runs on the platform that whoever wrote it uses :-)

[22:32:00.0000] <othermaciej>
anyway, you definitely can't find a place with that little light pollution anywhere in california

[22:32:01.0000] <Hixie>
yeah no kidding

[22:33:00.0000] <Hixie>
other than the middle of the ocean, you'd probably be hardpressed anywhere

[22:33:01.0000] <Hixie>
i doubt anywhere in europe is anywhere like that for instance

[22:35:00.0000] <kig>
lapland maybe

[22:40:00.0000] <othermaciej>
I've previously noticed that just about any place in Australia that is far from major cities has a good night sky view

[22:40:01.0000] <othermaciej>
I would be there are places in Alaska or Canada that are far enough

[02:17:00.0000] <jgraham>
AryehGregor: Did you ever make a pacth for prettyprinting in testharness.js?

[02:17:01.0000] <jgraham>
*patch

[03:59:00.0000] <Hixie>
right. sent a proposal for -152.

[03:59:01.0000] <Hixie>
nn.

[05:18:00.0000] <jacobolus>
someone maybe mention to Shelley that Columbia â  Colombia :)

[05:21:00.0000] <jacobolus>
otherwise, the weekly looks good

[05:35:00.0000] <hsivonen>
jgraham: this test doesn't comply with the documented test format: http://code.google.com/p/html5lib/source/diff?spec=svne4a9be41411d8592c858a4618a0cc68e2a6b2378&r=99e8af7f0c486da0f7ca7e570177d8f7b9f68ed4&format=side&path=/testdata/tree-construction/tests26.dat

[05:36:00.0000] <hsivonen>
fixed now

[06:02:00.0000] <jgraham>
hsivonen: Thanks

[06:03:00.0000] <jgraham>
The <time> element is supposed to render its datetime attribute, right?

[06:03:01.0000] <jgraham>
Or rather the parsed values of it

[06:04:00.0000] <jgraham>
Per http://www.whatwg.org/specs/web-apps/current-work/#the-time-element-0

[06:06:00.0000] <jgraham>
However http://www.whatwg.org/specs/web-apps/current-work/#the-time-element has an example

[06:06:01.0000] <jgraham>
<time class="dtend" datetime="2007-10-20">19</time>

[06:06:02.0000] <jgraham>
(The end date is encoded as one day after the last date of the event because in the iCalendar format, end dates are exclusive, not inclusive.)

[06:07:00.0000] <jgraham>
Which seems problematic given that a supporting UA will render 2007-10-20 not 2007-10-19

[06:08:00.0000] <hsivonen>
I wonder if it is intentional that text in a MathML text integration point doesn't reconstruct the active formatting elements

[06:11:00.0000] <matjas>
someone with access to the @whatwg Twitter account should really tweet about the new WHATWG Weekly

[06:12:00.0000] <hsivonen>
who has twitter access except annevk?

[06:13:00.0000] <hsivonen>
the blog post UI has an option to tweet upon publishing. I guess it didn't get checked this time.

[06:16:00.0000] <jgraham>
hsivonen: Thanks for bugging the MathML text integration point stuff

[06:17:00.0000] <hsivonen>
jgraham: RagnarÃ¶k implements it per spec, FWIW

[06:27:00.0000] <smaug____>
what is "WHATWG Weekly"?

[06:27:01.0000] <hsivonen>
smaug____: a blog post series

[06:30:00.0000] <anne-vac>
it seems the WordPress plugin we use for twitter broke

[06:30:01.0000] <jgraham>
Well that only lasted a week

[06:30:02.0000] <anne-vac>
as we are mostly recovering this morning from a night bus to Medellin I thought I could drop in

[06:32:00.0000] <anne-vac>
anyone who wants to take over maintaining the twitter account_

[06:32:01.0000] <anne-vac>
? i mean

[06:32:02.0000] <anne-vac>
weird keyboards around here

[06:32:03.0000] <anne-vac>
I retweeted the tweet from shelley for now

[06:33:00.0000] <Lachy>
anne-vac, the twitter plugin offered an update and I just installed it about an hour or two ago.

[06:34:00.0000] <Lachy>
I just assumed it was still working

[06:34:01.0000] <anne-vac>
k

[06:34:02.0000] <anne-vac>
someone should also educate people about the URL feature of WordPress

[06:34:03.0000] <hsivonen>
well, this is rather useless. ghex2--a hex editor--won't copy and paste data with a zero byte in it!

[06:35:00.0000] <Lachy>
the WP Dashboard also now displays the notice "Twitoaster Plugin is deprecated! Please read this announcement for more information" http://blog.twitoaster.com/twitoaster-shutting-down

[06:35:01.0000] <anne-vac>
yeah, we should find something else

[06:35:02.0000] <anne-vac>
there is a feed to twitter thingie somewhere, but that is not live

[06:36:00.0000] <anne-vac>
i rather have something live

[06:37:00.0000] <anne-vac>
nobody volunteering to maintain twitter?

[06:39:00.0000] <hsivonen>
anne-vac: I suppose I could volunteer

[06:42:00.0000] <anne-vac>
alright, hsivonen is the one to bug now :)

[06:43:00.0000] <Lachy>
hsivonen, I disabled Twitoaster

[06:44:00.0000] <Lachy>
you can uninstall it I guess, and install whatever

[06:47:00.0000] <hsivonen>
Lachy: my current plan is to tweet manually once per week until anne-vac returns it becomes his problem again

[06:52:00.0000] <anne-vac>
time to play cards on the balcony ;-)

[07:00:00.0000] <jgraham>
So, logically, I must have an account on the blog since I have posted on it and stuff. But I have no idea what the email address for it is, even

[07:00:01.0000] <gsnedders>
/me uses his 1337 hacker skillz to find out

[07:01:00.0000] <gsnedders>
jgraham: @opera.com

[07:04:00.0000] <AryehGregor>
jgraham, no, I saw all the twisty formatting code and gave up.  The actual pretty-printing part is easy, I already made a function for that: http://dvcs.w3.org/hg/html/file/8f1a0cc1800b/tests/submission/AryehGregor/reflection/original-harness.js#l16

[07:08:00.0000] <AryehGregor>
It would probably be safe enough to shoehorn in the pretty-printing at the level of assert_*, though.

[07:37:00.0000] <jgraham>
AryehGregor: That's what I was expecting you to do

[07:38:00.0000] <jgraham>
Pretty-priting all subsitutions seems dangerous because sometimes you want "" to be output as the empty string and not quote characters

[07:58:00.0000] <hsivonen>
jgraham: is the point of ark.dat that setting the attribute has an effect on the Noah's Ark rule?

[07:59:00.0000] <hsivonen>
jgraham: if so, I believe the test is wrong.

[07:59:01.0000] <hsivonen>
or if the test isn't wrong, the spec is.

[07:59:02.0000] <hsivonen>
because we wanted the tree builder never to read back from the DOM

[07:59:03.0000] <jgraham>
hsivonen: I thought it was supposed to test that it didn't have an effect

[08:00:00.0000] <jgraham>
It is not impossible that I checked in a broken version of the test by mistake

[08:00:01.0000] <hsivonen>
jgraham: interesting. I'm extremely sure that Gecko can't possibly read back from the DOM, and the result doesn't match the expected results

[08:01:00.0000] <hsivonen>
jgraham: at least it was broken in the sense that it didn't have a newline at the end of the file :-)

[08:10:00.0000] <hsivonen>
https://bugs.webkit.org/show_bug.cgi?id=56727 What's the status in the CSS WG?

[08:10:01.0000] <jgraham>
hsivonen: The ark test is clearly broken because it has a <font> as a child of the <script>

[08:11:00.0000] <jgraham>
hsivonen: Which is a bug I fixed at least once :(

[08:11:01.0000] <jgraham>
hsivonen: With that fixed I think the test is right

[08:11:02.0000] <jgraham>
and tests that we reconstruct using the original token rather than the DOM

[08:13:00.0000] <jgraham>
hsivonen: (If you have the file open right now and can push a fix, I would appreciate it)

[08:14:00.0000] <hsivonen>
jgraham: ok

[08:19:00.0000] <hsivonen>
jgraham: fixed

[08:21:00.0000] <jgraham>
hsivonen: Thanks

[09:27:00.0000] <TabAtkins>
hsivonen: Mixins haven't been proposed yet, because I haven't found time to do so yet.  Glazman posted a comment on the bug to that effect about an hour ago.

[09:33:00.0000] <AryehGregor>
elRTE.prototype.ui.prototype.buttons.button.prototype.command = function() {

[09:33:01.0000] <AryehGregor>
. . .

[09:33:02.0000] <TabAtkins>
...

[09:33:03.0000] <AryehGregor>
Does my astonishment at that line indicate my JavaScript naivete, or am I correct that that looks kind of crazy?

[09:33:04.0000] <TabAtkins>
The latter.

[09:33:05.0000] <AryehGregor>
Good.

[09:34:00.0000] <bga_>
TabAtkins Class.prototype = Class;

[09:35:00.0000] <TabAtkins>
That's just rooting a prototype tree. ^_^

[09:35:01.0000] <TabAtkins>
(Object.prototype == Object)

[09:37:00.0000] <bga_>
TabAtkins since i "invent" this trick i forget about 'prototype' word :)

[09:51:00.0000] <nessy>
Hixie: nice change proposal!

[10:37:00.0000] <beowulf>
are localStorage events implemented in any browser?

[10:47:00.0000] <beowulf>
"The storage event is supported everywhere the localStorage object is supported, which includes Internet Explorer 8." # is that true? http://diveintohtml5.org/storage.html

[10:47:01.0000] <AryehGregor>
Very likely, if diveintohtml5.org says it.

[11:08:00.0000] <beowulf>
gah, need two tabs open

[11:09:00.0000] <TabAtkins>
Grr, I hate trying to read dense declarative formats.

[12:14:00.0000] <AryehGregor>
Wow, Selection.collapse() is an interop trainwreck.

[12:15:00.0000] <AryehGregor>
Opera seems to actually treat it like removeAllRanges().

[12:16:00.0000] <AryehGregor>
IE9 seems to get most cases right if they're sane, which means it only fails about two-thirds of my tests.

[12:16:01.0000] <AryehGregor>
WebKit's Selection.collapse() makes me want to cry tears of blood.

[12:16:02.0000] <AryehGregor>
I don't know *what* it's doing.

[12:19:00.0000] <AryehGregor>
Maybe it's just because WebKit's Selection implementation is completely nonstandard and can only select things that are actually visible.

[12:20:00.0000] <AryehGregor>
I think that explains most of it

[12:20:01.0000] <AryehGregor>
.

[12:26:00.0000] <TabAtkins>
What is collapse() supposed to do in the first place?

[12:27:00.0000] <othermaciej>
I would assume it's supposed to collapse the selection to a caret (though at which end, I don't know)

[12:33:00.0000] <AryehGregor>
TabAtkins, othermaciej, it's called like selection.collapse(node, offset), and it collapses the selection to the given place.

[12:33:01.0000] <AryehGregor>
Range.collapse() collapses it to the start or end, depending on whether you pass true or false as its parameter (don't ask me which is which).

[12:33:02.0000] <AryehGregor>
I dunno who decided to name those two methods the same thing when they mean something entirely different.

[12:34:00.0000] <AryehGregor>
(WebKit's Range implementation is fine, it's only its Selections that are really weird)

[12:34:01.0000] <othermaciej>
our Selection tries to limit endpoints to selections that could be created by user interaction

[12:35:00.0000] <AryehGregor>
Which is reasonable in principle, perhaps, but not what anyone else does, or what the spec says.

[12:35:01.0000] <AryehGregor>
Maybe not reasonable in principle, either, because it makes the behavior of Selection stuff depend on, e.g., CSS.

[13:53:00.0000] <jgraham>
heycam: yt? If I have a readonly property and I apply the delete operator, what happens? I feel there is some magic spec text I am overlooking

[13:55:00.0000] <heycam>
hi jgraham

[13:55:01.0000] <heycam>
the behaviour falls out just due to the attributes of the property

[13:56:00.0000] <heycam>
/me will find spec text link

[13:57:00.0000] <jgraham>
heycam: That's what I thought, but I couldn't see why it would return true if that were the case

[13:58:00.0000] <jgraham>
So I guess I missed something

[13:58:01.0000] <heycam>
hmm, how does delete work when you use it on an object and the property comes from the prototype?

[13:59:00.0000] <heycam>
if you do `delete Node.prototype.nodeType`, that should actually remove the property, since properties for attributes are configurable now, per spec

[14:00:00.0000] <heycam>
(they were originally ReadOnly, when the spec targetted ES3, and that carried over to them being non-configurable, until a recent change)

[14:00:01.0000] <jgraham>
Ah

[14:00:02.0000] <heycam>
ok so `delete myNode.nodeType` should return true and do nothing

[14:00:03.0000] <heycam>
because there's no own property "nodeType" on the instance

[14:01:00.0000] <jgraham>
What about delete on the prototype object?

[14:01:01.0000] <heycam>
that will remove it and return true

[14:01:02.0000] <jgraham>
OK

[14:02:00.0000] <jgraham>
It seems that it was not my reading comprehension skills that were at fault but my assumptions

[14:03:00.0000] <jgraham>
To be clear, all properties except constants are now defined on the prototypes rather than on instances?

[14:03:01.0000] <jgraham>
so e.g. document.hasOwnProperty("createElement") is false

[14:04:00.0000] <heycam>
jgraham, that's right

[14:04:01.0000] <heycam>
hmm is that true about constants?

[14:05:00.0000] <jgraham>
I might be misremembering

[14:05:01.0000] <heycam>
no, constants go both on the interface object itself and the prototype

[14:06:00.0000] <jgraham>
Yeah, sorry I confused the interface object and the instance object

[14:06:01.0000] <jgraham>
Right, it all makes sense now :)

[14:06:02.0000] <jgraham>
For small values of all

[14:07:00.0000] <heycam>
:)

[14:07:01.0000] <jgraham>
heycam: thanks :)

[14:07:02.0000] <heycam>
np

[14:27:00.0000] <nessy>
is wiki.whatwg down?

[14:27:01.0000] <Hixie>
does seem that way

[14:27:02.0000] <Hixie>
weird

[14:28:00.0000] <tw2113>
It's not just you! - http://wiki.whatwg looks down from here.

[14:28:01.0000] <tw2113>
according to the bot in #html5

[14:28:02.0000] <Hixie>
oh, there it is

[14:28:03.0000] <Hixie>
ok it's up

[14:28:04.0000] <Hixie>
dunno what that was about

[14:28:05.0000] <nessy>
thanks :)

[14:29:00.0000] <tw2113>
it hiccuped

[14:29:01.0000] <nessy>
I take it personal

[14:29:02.0000] <Hixie>
btw you'll notice that wiki.whatwg.org is now on IPv6 :-)

[14:29:03.0000] <Hixie>
(as are all my sites now)

[14:30:00.0000] <nessy>
ah, the big ipv6 day

[14:30:01.0000] <Hixie>
happened a few days ago actually

[14:30:02.0000] <nessy>
are you at MTV today?

[14:30:03.0000] <Hixie>
yeah

[14:30:04.0000] <nessy>
am here, too

[14:31:00.0000] <tw2113>
here's a good question

[14:32:00.0000] <tw2113>
should we be viewing the IPv4 vs IPv6 as a complete move or an expansion?

[14:32:01.0000] <tw2113>
sort of like adding a million rooms to a house instead of moving into a million room larger house

[14:32:02.0000] <tw2113>
although i know IPv6 will offer more addresses than we'll ever need

[14:34:00.0000] <Hixie>
IPv6 doesn't add _that_ many addresses

[14:34:01.0000] <tw2113>
gotcha, just curious

[14:38:00.0000] <AryehGregor>
Hixie, it adds approximately 6.7 x 10^23 addresses per square meter of the Earth's surface.

[14:39:00.0000] <AryehGregor>
Which is slightly more than Avogadro's number, as Andrew S. Tanenbaum points out in his networking textbook.

[14:39:01.0000] <Hixie>
yeah but the entire top half of the address space is for in-subnet host identifications

[14:39:02.0000] <Hixie>
so it's only really 2^64 subnets

[14:39:03.0000] <Hixie>
not 2^128 hosts

[14:39:04.0000] <tw2113>
and we have to account for 10 different addresses per person

[14:40:00.0000] <Hixie>
and that's not even enough for one subnet per known star

[14:40:01.0000] <tw2113>
because we're all hyperconnected these days

[14:40:02.0000] <Hixie>
let alone per planet or per user on all those planets

[14:40:03.0000] <AryehGregor>
Nobody says we can't change how we assign the addresses later.

[14:40:04.0000] <Hixie>
yeah cos that worked so well with ipv4

[14:40:05.0000] <AryehGregor>
IPv4 originally had addresses only assigned in Class A, B, or C blocks, right?

[14:40:06.0000] <Hixie>
we only used about 15% of ipv4 by the time it was "completely exhausted"

[14:41:00.0000] <AryehGregor>
15% of 2^128 is an awful lot more than 2^64.

[14:41:01.0000] <othermaciej>
if we ever run IP at interstellar scales, it will need a version bump anyway

[14:41:02.0000] <AryehGregor>
Granted it will always be underallocated due to routing concerns, but not by a factor of 2^64.

[14:41:03.0000] <othermaciej>
to increase the maximum timeout to hundreds of years

[14:42:00.0000] <AryehGregor>
Aren't timeouts a TCP feature?

[14:42:01.0000] <Hixie>
ipv6 is obviously a whole heck of a lot bigger than ipv4, i'm just saying that we shouldn't get cocky and think it's more addresses than we'll ever need

[14:42:02.0000] <othermaciej>
I believe IP has a maximum TTL before your packets get dropped

[14:43:00.0000] <AryehGregor>
Yeah, but isn't the TTL in hops, not seconds?

[14:43:01.0000] <Hixie>
vint has already worked on a variant of IP for interplanetary use

[14:43:02.0000] <Hixie>
i believe it's what is used to communicate with the devices in orbit around mars

[14:44:00.0000] <othermaciej>
yeah, but, there we're talking order of minutes, not years / hundreds of years for transit time

[14:44:01.0000] <Hixie>
i don't know the specifics

[14:47:00.0000] <AryehGregor>
Realistically, the model of a single network where any address is transparently addressable breaks down when you get to a scale of anything close to light-years.

[14:47:01.0000] <AryehGregor>
It makes no sense for transport or application layers to be agnostic about whether they're communicating with someone 100 ms away or 100 years away.

[14:48:00.0000] <AryehGregor>
If you were communicating with faraway planets, you'd very likely want to use different protocols all down the stack.

[14:48:01.0000] <AryehGregor>
I mean, they could share some things, but I doubt IP-addressability is going to be an important requirement.

[14:51:00.0000] <Hixie>
one can imagine a situation in which one would want to have one virtual host per star, or some such, in which case the number of stars is relevant but their relative distance is not. but i'm just making stuff up here. :-)

[14:52:00.0000] <Hixie>
i just think it's silly to say things along the lines of "more [...] than we'll ever need" since historically there's always come a time where someone has come up with something that needs more

[14:53:00.0000] <Hixie>
maybe we'll be numbering atoms by IP address, in which case 6.7 x 10^23 addresses limits us to one mole, which isn't much at all, e.g.

[14:53:01.0000] <Hixie>
it's sufficient addresses for the forseeable future though

[14:53:02.0000] <AryehGregor>
But that will only hold true until we make the numbers large enough to exceed any relevant physical limits.

[14:54:00.0000] <Hixie>
not if we transcend the relevant physical limits :-)

[14:54:01.0000] <Hixie>
and one can easily have a host that responds to 2^128 addresses without having to have 2^128 rows in a configuration file or whatnot

[14:55:00.0000] <AryehGregor>
For instance, ZFS uses 128-bit block pointers on the theory that the information entropy of storing 2^128 bits would be enough to boil the oceans.

[14:55:01.0000] <AryehGregor>
I'll grant that that's not a totally bulletproof argument.

[14:55:02.0000] <AryehGregor>
But it's fair to say that "2^128 blocks is all a filesystem will ever need" is much more likely to be true than "640 KB is all anyone will ever need".

[14:55:03.0000] <AryehGregor>
It's a qualitatively different sort of statement.

[14:56:00.0000] <Hixie>
both are unjustifiably unqualified, imho

[14:56:01.0000] <Hixie>
it's easy to add "for the forseeable future" :-)

[14:59:00.0000] <uf0>
guys, what you feel about multiple h2 tags

[15:00:00.0000] <uf0>
example: <h1>search result for: johnny</h1>... <h2>result title 1</h2> <h2>result title 2</h2>

[15:00:01.0000] <TabAtkins>
What about it?

[15:00:02.0000] <uf0>
or should those be result titles be <h3>

[15:01:00.0000] <Hixie>
doesn't matter

[15:01:01.0000] <uf0>
question is.. should it multiple h2 or h3

[15:01:02.0000] <TabAtkins>
Why do you think there's a difference?

[15:01:03.0000] <uf0>
doesn't it according to Mr. Google

[15:01:04.0000] <Hixie>
mr google cares about the quality of your content

[15:01:05.0000] <Hixie>
not about whether you use h2 or h3

[15:02:00.0000] <uf0>
i know, but they clearly put emphasis on a H1 tag

[15:02:01.0000] <uf0>
so that's why i wonder about h2s 3s

[15:02:02.0000] <uf0>
for arguments sake, which one would you guys use?

[15:03:00.0000] <Hixie>
personally i'd use <section> and <h1>

[15:03:01.0000] <Evet>
anyone tried amplesdk + xul?

[15:03:02.0000] <Hixie>
uf0: as in <body> <h1>page title</h1> <section> <h1>subtitle</h1> ...content... </section> <section> <h1>subtitle</h1> ...content... </section> </body>

[15:05:00.0000] <uf0>
Hixie: H1 for page title and subtitle? hmm

[15:08:00.0000] <uf0>
alright

[15:19:00.0000] <Hixie>
uf0: <section> resets the scope for <h1>

[15:19:01.0000] <Hixie>
uf0: see the spec :-) developers.whatwg.org

[15:24:00.0000] <uf0>
gotcha thanks hixie

[15:30:00.0000] <pkzip>
I have a spec query...

[15:30:01.0000] <pkzip>
... anyone want to take it?

[15:31:00.0000] <AryehGregor>
pkzip, ask and you'll find out.

[15:31:01.0000] <TabAtkins>
Ask questions, not questions about your questions, please. ^_^

[15:32:00.0000] <pkzip>
Ok, well here we go. A table, height 100%,, in a body, html of height 100%. Two rows. First fixed height (say 100px), the other auto height.

[15:33:00.0000] <pkzip>
The spec doesn't define how a child of the cell in the second, auto-height row calculates its height.

[15:33:01.0000] <TabAtkins>
Correct.  Table rendering is essentially undefined.

[15:33:02.0000] <TabAtkins>
(Unfortunately.)

[15:33:03.0000] <pkzip>
Chrome does the obvious thing.

[15:33:04.0000] <pkzip>
But IE and FF don't. And I think it would be very useful if FF at least copied Chrome, so that say a div of height 100% in the second td

[15:34:00.0000] <pkzip>
fills it up, rather than trying to be the same height as the entire table

[15:34:01.0000] <pkzip>
which IMO makes no sense.

[15:34:02.0000] <AryehGregor>
I suspect no one's going to be willing to change their algorithms much until someone writes a spec.

[15:34:03.0000] <TabAtkins>
Put a bug on them, then?  Like I said, there is *not* any spec text actually mandating a behavior here.  At the moment it's purely a quality-of-implementation issue.

[15:34:04.0000] <AryehGregor>
Too much risk of breaking stuff.

[15:34:05.0000] <AryehGregor>
But you could try to file a bug against Firefox.

[15:34:06.0000] <pkzip>
Okay. So that's the thing to do, file a bug?

[15:35:00.0000] <TabAtkins>
For now, yeah, that's the best you can do.  No promises about what it'll accomplish, though.

[15:35:01.0000] <TabAtkins>
I'm curious as to why you're using a screen-filling table as a direct child of <body>, though.

[15:35:02.0000] <TabAtkins>
That sounds like a layout table.

[15:35:03.0000] <pkzip>
Yeah I get that. So here's a meta-question- I thought one of the points of html5 was to standardise stuff like this.

[15:35:04.0000] <AryehGregor>
This is CSS, not HTML.

[15:36:00.0000] <TabAtkins>
This is a CSS issue, not an HTML issue.

[15:36:01.0000] <pkzip>
Ohhhh. :)

[15:36:02.0000] <AryehGregor>
But yes, you're right more generally.

[15:36:03.0000] <AryehGregor>
We do want to standardize things like this.

[15:36:04.0000] <AryehGregor>
But there's loads and loads of stuff to standardize, and no one's gotten around to this specific one yet.

[15:36:05.0000] <jgraham>
You could file a bug against TabAtkins to make him work on this

[15:36:06.0000] <TabAtkins>
Indeed.  The only problem is that no one has so far wanted to spend the effort to write a Table Module.

[15:36:07.0000] <jgraham>
Or against his manager to assign him to work on it

[15:36:08.0000] <AryehGregor>
Hopefully someone will standardize it in the not-too-distant future.

[15:37:00.0000] <jgraham>
/me doesn't know if TabAtkins or anyone above him in the heirachy has a public bugtracker though :)

[15:37:01.0000] <TabAtkins>
I do not, thank the gods.

[15:37:02.0000] <TabAtkins>
Though that would be pretty funny.

[15:37:03.0000] <TabAtkins>
And... maybe useful?

[15:38:00.0000] <pkzip>
This is table-for-layout, btw. Because there's still stuff that only tables are good for.

[15:38:01.0000] <TabAtkins>
pkzip: I doubt that you actually need a table for what you're doing.  It's possible, but I've been able to get *very* far without them.

[15:39:00.0000] <TabAtkins>
(Leaning on display:table has solved some of the problems I've run into, of course.)

[15:39:01.0000] <Hixie>
/me pokes nessy to read her e-mail :-P

[15:40:00.0000] <pkzip>
Okay, well display:table too. But display:table ends up with exactly the issue I first described, of course!

[15:40:01.0000] <TabAtkins>
Yes.

[15:42:00.0000] <pkzip>
Okay bug it is then. Thanks.


2011-03-22
[01:47:00.0000] <hsivonen>
Did Opera ship a browser for Windows Phone 7 today? Mini? Java translated to CLR?

[02:05:00.0000] <jgraham>
OMG! double (positive) digit temperatures!

[02:08:00.0000] <jgraham>
hsivonen: More to the point, did we put a picture on opera.com depicting Windows as an aging rock drummer?

[02:09:00.0000] <gsnedders>
hsivonen: FWIW, you're not going to get an answer to that from anywhere. Apart from the fact that we did indeed ship.

[02:11:00.0000] <jgraham>
gsnedders: I think the answer is no, isn't it? Unless I don't understand our press release

[02:11:01.0000] <hsivonen>
gsnedders: I see that Opera shipped on Symbian and Android. Was anything shipped on an kind of handheld Windows today?

[02:11:02.0000] <jgraham>
"The Opera Mobile 11 browser [...] Windows 7 desktop (labs release)"

[02:11:03.0000] <hsivonen>
AFAICT, nothing was shipped for Windows or iOS

[02:11:04.0000] <hsivonen>
jgraham: ooh.

[02:12:00.0000] <hsivonen>
interesting

[02:12:01.0000] <gsnedders>
Oooh.

[02:12:02.0000] <gsnedders>
Stop assuming I've read stuff.

[02:12:03.0000] <gsnedders>
:)

[02:12:04.0000] <hsivonen>
jgraham: so it's for Windows 7 tablets?

[02:12:05.0000] <hsivonen>
anyway, congratulations for shipping

[02:13:00.0000] <jgraham>
hsivonen: I think that is the idea

[02:13:01.0000] <hsivonen>
does Mobile on Android support WebM?

[02:13:02.0000] <hsivonen>
also, kudos for not losing my Opera Mini settings this time

[02:13:03.0000] <gsnedders>
Oh, yay, first stable release with JIT for ARM. I can claim to have done something that's part of it.

[02:13:04.0000] <jgraham>
Not sure, I would have to find the documentation

[02:14:00.0000] <hsivonen>
my Opera Mobile settings were lost, though

[02:16:00.0000] <hsivonen>
on the bringht side, this time the UX for logging into an existing Opera Link account for the first time in a given Opera Mobile installations sucks less

[02:17:00.0000] <hsivonen>
that is, this time the setup process gives feedback that the first sync is happening and lets the user know when the first sync is done

[02:18:00.0000] <hsivonen>
now Speed Dial rerendered the thumbnails, so I lost the face of Jimmy Wales :-(

[02:19:00.0000] <hsivonen>
(on the Speed Dial entry for Wikipedia that is)

[02:20:00.0000] <jgraham>
Gosh, that sounds like a terrible loss. Were you just enjoying prodding him in the eyes to access stuff?

[02:21:00.0000] <hsivonen>
Opera Mobile on S60 seems to have regressed @font-face support

[02:21:01.0000] <hsivonen>
but has gained <video> support

[02:21:02.0000] <hsivonen>
in such a way that trying to play a video brings up a download prompt

[02:22:00.0000] <hsivonen>
I will probably have to edit webm.html5.org to special case Opera Mobile 11

[02:23:00.0000] <jgraham>
That doesn't sound ideal :(

[02:23:01.0000] <hsivonen>
jgraham: especially when .play() from JS brings up the download prompt

[02:23:02.0000] <jgraham>
But it might be platform-specific; it seems to work fine on the windows 7 version

[02:37:00.0000] <hsivonen>
does anyone here happen to have Opera Mobile 11 on Symbian^3?

[02:37:01.0000] <hsivonen>
what happens on http://webm.html5.org/ in Opera Mobile 11 on Symbian^3?

[02:53:00.0000] <jgraham>
hsivonen: Filed your issues

[02:53:01.0000] <hsivonen>
jgraham: thanks

[02:56:00.0000] <hsivonen>
using IE9 to navigate to m.opera.com for the Windows 7 version fails

[03:00:00.0000] <hsivonen>
also, the Windows 7 installer isn't signed

[03:03:00.0000] <jgraham>
hsivonen: What S60 device are you using?

[03:05:00.0000] <hsivonen>
jgraham: Nokia 6120 Classic

[03:09:00.0000] <hsivonen>
hmm. the press release says Opera Mobile 11 is available for Maemo. Does that mean Maemo 5 only or also Maemo 4? my Maemo 4 device didn't autoupdate

[03:14:00.0000] <hsivonen>
hmm. I don't see any Maemo download for Opera Mobile 11

[04:23:00.0000] <Lachy>
The design of the new audioTracks API seems to be quite strange

[04:24:00.0000] <Lachy>
I was expecting audioTracks to be a collection of AudioTrack objects, with each one implementing properties like .volume, .enable, .label, .kind, etc.

[04:28:00.0000] <Lachy>
and it's somewhat weird that the videoTrack only allows a single video track to be enabled at a time, when there are use cases for multiple video tracks (like a sign language track, or other overlays) that could be addressed easier than with the synchronisation feature

[05:03:00.0000] <jgraham>
Navigation to fragments seems to be async per spec. Is that right?

[07:53:00.0000] <jgraham>
Congratulations on the release Mozilla people

[07:54:00.0000] <nimbupani>
yes congratulations!

[07:54:01.0000] <jgraham>
Ooh, need more !

[07:54:02.0000] <jgraham>
Let's try again

[07:54:03.0000] <jgraham>
Congratulations on the release Mozilla people!

[07:55:00.0000] <jgraham>
Better!

[07:55:01.0000] <Rik`>
thanks :)

[07:56:00.0000] <hsivonen>
thanks. congratulations for the release of Opera Mobile & Mini

[07:59:00.0000] <nimbupani>
ha ha thanks :)

[08:00:00.0000] <Rik`>
yeah congrats on so many simultaneous releases

[08:07:00.0000] <kennyluck>
Congratulations on the release Mozilla people!!

[08:10:00.0000] <Lachy>
there's a little push coming, from the feedback I'm getting, for the about: URI scheme draft to be updated to include an IANA registry for reserved about: URIs. I'm not sure what to do about that.

[08:10:01.0000] <Lachy>
I certainly don't want it to be a bureaucratic nightmare, like the past attempts with the link rel registry

[08:16:00.0000] <hober>
bleah

[08:23:00.0000] <hober>
Lachy: besides about:blank, are there any other about: URIs that need to be specified?

[08:25:00.0000] <Lachy>
about:legacy-compat and about:srcurl are defined in HTML. about:streamurl has been proposed for use with the user media streaming (formerly <device> element) stuff

[09:02:00.0000] <Sabriel1>
Any ideas/thoughts on how SEO will be affected by the new HTML5 Modular sectioning of content (such as using h1s inside sections within sections etc)

[09:02:01.0000] <TabAtkins>
It wont' be significant.

[09:02:02.0000] <Sabriel1>
Are search engines such as Google (because lets be honest where google goes the others will follow) already understanding this, or if we use it now will we be punished do you know?

[09:03:00.0000] <TabAtkins>
Google has officially said that you shouldn't worry about it.

[09:03:01.0000] <Sabriel1>
HTML5 has me very excited but my company works with several SEO/SMM companies and i'm sure this part will be a big deal to them.

[09:03:02.0000] <Sabriel1>
Do you have a link to anything I can read about how google is/is planning to handle such structural changes?

[09:04:00.0000] <TabAtkins>
http://html5doctor.com/html5-seo-search-engine-optimisation/

[09:21:00.0000] <TabAtkins>
Interesting, we've got a 4-dot quantum chip that can almost certainly be scaled up.

[11:07:00.0000] <TabAtkins>
Man, I wish they'd gone with <c> instead of <span>.  Shorter, and then we'd have innumerable tutorials purporting to teach you the "<a> <b> <c>s of HTML".

[11:07:01.0000] <TabAtkins>
(I just like that using <a> and <b> in examples looks like you're using placeholders.)

[11:22:00.0000] <AryehGregor>
Hixie isn't here, amazing.

[11:47:00.0000] <kennyluck>
Wow.

[11:48:00.0000] <TabAtkins>
jgraham: By the way, I have a bugtracker now.  https://github.com/tabatkins/life/issues

[12:12:00.0000] <asmodai>
Anybody happen to know if the Firefox 4 release changed from the RC + updates? Just wondering whether I'd need to install or if update is being right saying there are no updates available.

[12:13:00.0000] <Ms2ger>
We don't usually change any bits in the binary between the last RC and final

[12:13:01.0000] <asmodai>
Cool, then I don't need to mess with the current install.

[12:14:00.0000] <asmodai>
I'm still trying to remember where the version/user id string is hidden nowadays

[12:14:01.0000] <Ms2ger>
about:buildconfig?

[12:14:02.0000] <asmodai>
ah yes

[12:14:03.0000] <asmodai>
that's the one, ta

[12:43:00.0000] <blooberry>
elise: did you see this? http://www.useit.com/alertbox/nonprofit-donations.html

[12:54:00.0000] <blooberry>
*facepalm* (wrong channel)

[13:50:00.0000] <nessy>
Hixie not around today?

[14:04:00.0000] <TabAtkins>
His server's being re-imaged.

[14:05:00.0000] <TabAtkins>
nessy: You on 1950 3rd floor, right?  I think Hixie might have been heading up there.

[14:05:01.0000] <nessy>
4th floor

[14:05:02.0000] <nessy>
ok, that's cool

[14:05:03.0000] <TabAtkins>
He was just at my desk about two minutes ago, on the 2nd floor.

[15:06:00.0000] <AryehGregor>
Philip`, does the dotnetdotcom.org index only contain text/html files?

[15:07:00.0000] <Philip`>
AryehGregor: http://philip.html5.org/data/dotbot-20090424.txt

[15:08:00.0000] <AryehGregor>
Ah, thanks.

[15:08:01.0000] <Philip`>
I don't know kind of filtering or processing they did on the data

[15:08:02.0000] <Philip`>
*what kind

[15:09:00.0000] <AryehGregor>
I'm looking for stats about execCommand() usage, so I really want to search stuff in scripts.

[15:09:01.0000] <AryehGregor>
So that probably won't be too useful, oh well.

[15:10:00.0000] <Philip`>
There's lots of inline scripts

[15:10:01.0000] <Philip`>
but otherwise you'd have to parse the HTML and resolve <script src>s and download them

[15:10:02.0000] <AryehGregor>
Which basically means searching all the scripts myself, which is probably pointless given how many scripts there are and how few will use execCommand().

[15:11:00.0000] <Philip`>
http://philip.html5.org/data/execCommand.txt was some inline scripts

[15:11:01.0000] <Philip`>
That's like 0.1% of pages, which is pretty high :-)

[15:12:00.0000] <Philip`>
Downloading a million files is easy and looks like it should give a non-zero number of usages

[15:15:00.0000] <AryehGregor>
Yeah, but it will be an extremely skewed sample of execCommand() usage, since any nontrivial use is likely to be in a separate .js file.

[15:16:00.0000] <AryehGregor>
The usages there look like they're only doing one trivial thing.

[15:16:01.0000] <Philip`>
I mean downloading a million separate .js files is easy

[15:16:02.0000] <Philip`>
for relative values of "easy"

[15:16:03.0000] <AryehGregor>
Only two of them even use a formatting command.

[15:16:04.0000] <AryehGregor>
Oh.

[15:16:05.0000] <AryehGregor>
Well, I'll ask Hixie when he gets back on.

[15:17:00.0000] <Philip`>
(At least it's not harder than downloading a million .html files)

[15:17:01.0000] <AryehGregor>
Would be kind of stupid for me to try doing something like that in the course of doing a job for Google.  :)

[15:17:02.0000] <Philip`>
(assuming you already have a million .html files to follow links from)

[15:17:03.0000] <Philip`>
(and an HTML parser and a URL resolver that understands <base> etc)

[15:17:04.0000] <Philip`>
(and a parallel downloader)

[15:18:00.0000] <Philip`>
(Then it's only a few gigabytes of data, which is easily doable on a home internet connection)

[15:28:00.0000] <jamesr>
AryehGregor: another option if you have access to a browser vendor is to ask them to instrument execCommand and correlate that against page loads or something

[15:28:01.0000] <AryehGregor>
jamesr, I'm just saying that in the e-mail I'm writing right now.

[15:28:02.0000] <jamesr>
i think most of us have ways for users to opt into anonymous aggregate stat tracking of that sorta stuff these days

[15:29:00.0000] <jamesr>
you run the risk of getting biased towards the use patterns of whoever uses that browser

[15:29:01.0000] <jamesr>
(so for example if we did this in chrome dev channel only you'd get people who are cool enough to use chrome and who use dev releases)


2011-03-23
[02:19:00.0000] <DennisRasCollege>
I can't seem to find any documentation or article about how to detect image transparency. Any help on where I should read more about that? Basically  I want to draw an image and have the user only be able to click the image where it's non-transparent, am I making any sense?

[02:19:01.0000] <DennisRasCollege>
This is with canvas (I supposed) or SVG if that's my only option

[02:23:00.0000] <Lachy>
DennisRasCollege, use getImageData(), then use the CanvasPixelArray returned to get the colour of the pixels, with which you can check the value of the alpha channel

[02:23:01.0000] <Lachy>
that depends on the image having the same origin though, so that getImageData works

[02:24:00.0000] <DennisRasCollege>
What do mean with having the same origin?

[02:25:00.0000] <DennisRasCollege>
The position?

[02:25:01.0000] <Lachy>
I mean, there are security restrictions in place if you've painted an <img> onto a canvas, and that image comes from a different domain than the web page.

[02:25:02.0000] <DennisRasCollege>
Oh I don't have that problem though, but thanks

[02:44:00.0000] <DennisRasCollege>
Lachy: wait is getImageData for the canvas or an image object?

[02:45:00.0000] <Lachy>
it's a method on the canvas context

[02:45:01.0000] <Lachy>
look up the spec

[02:45:02.0000] <DennisRasCollege>
But what do I do if I have layered images?

[02:45:03.0000] <DennisRasCollege>
Yeah I just saw that, which is why I'm asking

[02:46:00.0000] <Lachy>
You could create a new hidden canvas, paint just that one image you want to check, and then figure out what the co-ordinates would be on the other canvas from that.

[02:47:00.0000] <DennisRasCollege>
That looks like a lot of processing?

[02:48:00.0000] <DennisRasCollege>
Say with 100 images

[02:50:00.0000] <Lachy>
if you want to know where the transparent pixels are for every single image, there's no way to get around the amount of processing you have to do.

[02:51:00.0000] <Lachy>
it would be less if you could just get the remaining transparent pixels after adding several of the images together.

[02:55:00.0000] <DennisRasCollege>
yeah but it's not the canvas transparency I was looking for, sorry about that

[02:55:01.0000] <DennisRasCollege>
anyway my goal is to be able to make a click detection which takes image transparency into consideration

[02:56:00.0000] <DennisRasCollege>
and i dont know what to search for

[02:58:00.0000] <Lachy>
if you're donig it on click detection, then you only need to check the specific pixels on a limited set of the images each time, which should reduce the amount of processing you need to do

[03:00:00.0000] <Lachy>
so when a user clicks co-ordinates x,y, you check which images are covering that location, and then you can check the co-ordinates on those specific images, by painting them to another blank, transparent canvas.

[03:01:00.0000] <DennisRasCollege>
Yeah that makes sense

[03:01:01.0000] <DennisRasCollege>
And I guess the background canvas should have images added in the same order as the z-index right?

[03:01:02.0000] <DennisRasCollege>
highest index first

[03:02:00.0000] <DennisRasCollege>
This could be fun to do :)

[03:05:00.0000] <hdhoang>
I don't think it has to: if any image contributes an opaque pixel, the result would not be transparent

[03:05:01.0000] <DennisRasCollege>
What do you mean?

[03:11:00.0000] <phrearch>
hello

[03:12:00.0000] <phrearch>
im trying to find out the default language per user, but the websocket handshake doesnt include accept-language

[03:12:01.0000] <phrearch>
in the header

[03:13:00.0000] <phrearch>
is there a way to add this parameter to the header?

[03:14:00.0000] <jgraham>
phrearch: No

[03:14:01.0000] <jgraham>
It sounds like a dubious approach to the problem anyway (is accept-language generally right?)

[03:15:00.0000] <jgraham>
But in general the idea is that you send application-specific data over the socket, not in the handshake

[03:16:00.0000] <phrearch>
yea indeed. maybe ill have to set preferences then

[03:16:01.0000] <phrearch>
im using the django framework, but it relies on http headers for proper language detection. cant use that with websocket requests :(

[03:17:00.0000] <hsivonen>
phrearch: you can write navigator.language into the socket after opening it

[03:17:01.0000] <Lachy>
DennisRasCollege, he means that once you determine the set of images that need to be checked for transparency, you can paint them all on a new canvas, and then just check the one pixel, rather than having to check each image individually.

[03:18:00.0000] <phrearch>
hsivonen: aha thanks!

[03:18:01.0000] <phrearch>
seems like i have to send the language in each websocket request though

[03:19:00.0000] <hsivonen>
phrearch: is your server stateless between Web Socket packets?

[03:19:01.0000] <phrearch>
no, it maintains state

[03:20:00.0000] <phrearch>
you mean if it keeps track of the connections?

[03:20:01.0000] <hsivonen>
phrearch: I mean: did you mean it would forget the language associated with a connection after establishing the language once?

[03:21:00.0000] <hsivonen>
if you meant you need te send the language once per Web Socket connection, then, yes

[03:21:01.0000] <phrearch>
hm no, it could stay in memory, but the whole webframework is built around the notion of a request object available, which is not there in this case(only a reference to the client connection)

[03:22:00.0000] <phrearch>
hm, think you gave me the answer :)

[03:23:00.0000] <hsivonen>
I wonder if anyone has done research on how ofter the browser's UI language actually matches the user's content language preference on sites that try to select the content language from the UI language

[03:23:01.0000] <hsivonen>
*often

[03:24:00.0000] <phrearch>
most sites use language selection i guess

[03:24:01.0000] <phrearch>
*manual*

[03:24:02.0000] <hsivonen>
I use en-US browsers but I want my banking UI to be in Finnish, because banking requires vocabulary that's not only domain-specific but country-specific, too

[03:25:00.0000] <hsivonen>
phrearch: yeah, manual language selection is likely to actually reflect what the user wants

[03:28:00.0000] <phrearch>
its actually hard to set chromium in something else than en-us hehe

[03:30:00.0000] <phrearch>
ill try to detect the browser language first, and add an option for the user to override the setting

[03:31:00.0000] <phrearch>
maybe the initial bootstrapping http request is suitable for that

[03:53:00.0000] <DennisRasCollege>
Lachy_: that's not the result im looking for though, gonna get back to you in a bit after dinner

[03:54:00.0000] <Lachy>
DennisRasCollege, ok. You haven't been particularly clear about what exactly you want to achieve

[05:10:00.0000] <MikeSmith>
hsivonen: plh points out to me that the message "The document validates according to the specified schema(s)." may lead people to assume that validator.nu is only doing schema validation

[05:14:00.0000] <MikeSmith>
not sure what better wording could be put in there

[05:15:00.0000] <MikeSmith>
maybe make it a hyperlink to the description on about.validator.nu of the types of checks it is doing?

[05:16:00.0000] <MikeSmith>
"The document validates according to the specified schema(s) and to additional constraints checked by the validator."

[05:16:01.0000] <MikeSmith>
maybe

[05:22:00.0000] <hsivonen>
MikeSmith: good point

[05:23:00.0000] <MikeSmith>
hsivonen: any thoughts about better wording?

[05:23:01.0000] <hsivonen>
MikeSmith: your wording seems OK

[05:24:00.0000] <MikeSmith>
ok

[05:24:01.0000] <hsivonen>
jgraham: it seems that the WebM download prompt is what confuses @font-face in Opera Mobile 11 on Symbian

[05:24:02.0000] <hsivonen>
jgraham: If I don't call .play(), the fonts apply

[05:26:00.0000] <hsivonen>
jgraham: I updated webm.html5.org with a special case for Opera Mobile 11.x for Symbian, but now the page never finishes loading and I don't know why

[05:27:00.0000] <hsivonen>
anyone: Please let me know if webm.html5.org also needs special casing for Opera Mobile 11 for Android

[05:28:00.0000] <hsivonen>
Opera Mobile 11 on Windows 7 seems OK

[05:28:01.0000] <jgraham>
hsivonen: Right. I think the bug is some bad interaction between the video download stuff and resource loading

[05:29:00.0000] <hsivonen>
jgraham: I suspect having ever had a <video> element in the DOM confuses the browser to think the page hasn't finished loading even if I remove the <video> from the DOM

[05:30:00.0000] <hsivonen>
curiously, the browser say "probably" to the canPlayType query

[05:30:01.0000] <hsivonen>
which seems wrong, since it, in fact, cannot play the type

[05:31:00.0000] <jgraham>
Interesting

[05:31:01.0000] <gsnedders>
/me blames foolip 

[05:31:02.0000] <jgraham>
gsnedders: I think this is platform specific

[05:32:00.0000] <gsnedders>
jgraham: If the canPlayType thing is what I think â I doubt it is.

[05:32:01.0000] <hsivonen>
It's sad that canPlayType sucks the most in various mobile browsers where it is needed the most, since site authors can't test in every flavor of mobile browser

[05:32:02.0000] <jgraham>
My understanding (without trying it) is that it uses the platform media player to do the actual playing

[05:32:03.0000] <gsnedders>
That is correct.

[05:32:04.0000] <foolip>
I didn't know we had any support for <video> on Symbian at all

[05:32:05.0000] <foolip>
in fact I'm pretty sure we don't

[05:33:00.0000] <jgraham>
foolip: We invoke the platform media player on seeing a <video> element

[05:33:01.0000] <jgraham>
Or something

[05:33:02.0000] <hsivonen>
foolip: you most certainly show a black rectangle with a play button and prompt to download the file when calling .play() or pressing the button

[05:33:03.0000] <jgraham>
I'm not quite sure how it works

[05:33:04.0000] <foolip>
jgraham, I've never heard from a platform team implementing <video> on Symbian

[05:33:05.0000] <hsivonen>
foolip: and it never seems to fire any of the events one might expect after calling .play()

[05:33:06.0000] <hsivonen>
like Konqueror...

[05:34:00.0000] <DennisRasCollege>
Lachy: No and that's my fault, I'm sorry about that. It's just that I don't want to seem like someone who hasn't done research (when answers might be SO simple even though they aren't for me) since I have done a lot of research

[05:35:00.0000] <hsivonen>
anyway, Opera Mobile 11 now has the questionable honor shared with Konqueror to be a browser that can't be subjected to a WebM .play() attempt

[05:35:01.0000] <foolip>
hsivonen, that all sounds very strange, probably the feature has been enabled without actually implementing the platform bits

[05:36:00.0000] <DennisRasCollege>
Lachy: I'm creating a 'game' sort of where a lot of sprites overlap each other and I need a click detection which detects which sprite is clicked on even though they overlap eachother and got transparent pixels within the sprite image

[05:36:01.0000] <hsivonen>
foolip: I think I even saw a marketing video that showed the download prompt as a feature

[05:36:02.0000] <hsivonen>
foolip: but the video may have demoed Android

[05:37:00.0000] <hsivonen>
so I'd like to know if I should blacklist Opera Mobile 11 on Android, too

[05:38:00.0000] <jgraham>
hsivonen: Maybe you could try the android emulator

[05:38:01.0000] <foolip>
hsivonen, it looks like we have implemented some support for it

[05:38:02.0000] <jgraham>
Maybe I should get a phone that actually lets me use a web browser :)

[05:38:03.0000] <foolip>
hsivonen, not very well though, this is the first time I've heard about it

[05:39:00.0000] <hsivonen>
jgraham: I didn't know there was any useful kind of emulator

[05:39:01.0000] <jgraham>
I have no idea if it is useful

[05:39:02.0000] <jgraham>
http://developer.android.com/guide/developing/devices/emulator.html

[05:39:03.0000] <Lachy>
DennisRasCollege, ok, then in that case, you will need to check each image sequentially, acording to their z-index from front to back, until you find a non-transparent pixel at the clicked coordinates

[05:39:04.0000] <hsivonen>
jgraham: do you mean what's in the SDK? I have only read bad things about it.

[05:39:05.0000] <hsivonen>
jgraham: yeah, that one

[05:39:06.0000] <foolip>
hsivonen, it looks like it will reply "probably" to absolutely anything and try to download it

[05:39:07.0000] <MikeSmith>
foolip: hey, I got your reply. I had been pinging you at the time because I was talking with Silvia and Eric Carlson and Frank Olivier about media stuff and wanted to ask you aboutâ¦ something

[05:39:08.0000] <jgraham>
hsivonen: Oh, OK

[05:39:09.0000] <hsivonen>
jgraham: I didn't get it to boot when I last tried

[05:40:00.0000] <MikeSmith>
foolip: can't remember now what it was

[05:40:01.0000] <foolip>
MikeSmith, ok

[05:40:02.0000] <MikeSmith>
anyway, thanks for having followed up about it

[05:40:03.0000] <jgraham>
hsivonen: I can probably find someone with an android phone and ask them to try

[05:40:04.0000] <hsivonen>
jgraham: yeah

[05:40:05.0000] <hsivonen>
anyone on this channel with an Android phone and Opera Mobile 11 on it?

[05:41:00.0000] <hsivonen>
I guess I should get an Android phone at some point

[05:42:00.0000] <hsivonen>
but I have been dragging my feet waiting for the dust to settle around Firefox for Android requirements and for a WebM hardware decoder to appear in Android devices

[05:42:01.0000] <foolip>
hsivonen, I borrowed one from a colleague, what do you want me to test?

[05:42:02.0000] <hsivonen>
foolip: if loading http://webm.html5.org/ prompts to download or completes with useful information or something else

[05:43:00.0000] <jgraham>
hsivonen: Oh, WebM for android. I think you just put me off buying an android device for another round :)

[05:44:00.0000] <foolip>
hsivonen, it plays a 1 second video in fullscreen of "WebM" with a green tick next to it, then I see "Congratulations!"

[05:44:01.0000] <hsivonen>
jgraham: I don't actually know anything, but since the hardware design was announced on the WebM blog, I have been assuming that it's expected to find its way to Google's OEMs some day

[05:44:02.0000] <hsivonen>
foolip: great

[05:45:00.0000] <hsivonen>
foolip: and congrats for shipping WebM support for Android!

[05:45:01.0000] <jgraham>
hsivonen: Yes, I know about the same as you, I just hadn't considered it :)

[05:45:02.0000] <foolip>
hsivonen, I actually had no idea that WebM worked yet :)

[05:45:03.0000] <foolip>
we're just using the platform player on android I think

[05:46:00.0000] <hsivonen>
I guess now I have to edit the android advice to say that Opera Mobile 11 works in addition to Firefox

[05:46:01.0000] <hsivonen>
foolip: what version of Android did you test on?

[05:47:00.0000] <foolip>
hsivonen, I don't know, how do I check?

[05:47:01.0000] <foolip>
I can ask

[05:47:02.0000] <hsivonen>
foolip: I don't know

[05:47:03.0000] <foolip>
hsivonen, 2.3.3 says the owner

[05:47:04.0000] <foolip>
let's assume that's true

[05:48:00.0000] <hsivonen>
foolip: ok. that one is supposed to ship with a WebM decoder in the system

[05:48:01.0000] <hsivonen>
so now we don't know what happens in Opera on downlevel Android

[05:48:02.0000] <hsivonen>
assuming that you indeed are using the system bits

[05:52:00.0000] <hsivonen>
I wonder if there's a market: URL for Opera

[05:53:00.0000] <hsivonen>
/me guesses market://details?id=com.opera.browser

[05:58:00.0000] <hsivonen>
OK. I think I'm now done with webm.html5.org updates for today.

[05:58:01.0000] <hsivonen>
foolip: thanks

[05:58:02.0000] <hsivonen>
anyone: If you find that Opera Mobile 11 does not play WebM on downlevel Android, please let me know

[06:11:00.0000] <miketaylr>
hsivonen: "For Android versions earlier than 2.3 only H.264 is supported, while from version 2.3 onward WebM is also supported."

[06:11:01.0000] <miketaylr>
from http://www.opera.com/docs/specs/productspecs/

[06:17:00.0000] <hsivonen>
miketaylr: is that *really* 2.3 or 2.3.3?

[06:17:01.0000] <miketaylr>
i'm not certain... i'm stuck on 2.2 :/

[06:17:02.0000] <hsivonen>
miketaylr: IIRC, 2.3.0 didn't have WebM even though it was originally announced

[06:18:00.0000] <hsivonen>
/me goes edit webm.html5.org again

[06:18:01.0000] <miketaylr>
i'll ask around and have that updated if it's incorrect

[06:18:02.0000] <hsivonen>
miketaylr: thanks

[06:19:00.0000] <hsivonen>
Hmm. Opera Mobile itself doesn't report the Android version, so it's not possible to give targeted upgrade advice

[06:28:00.0000] <hsivonen>
In general, giving browser advice to Android users sucks. Firefox wants an ARM v7 CPU, and you don't know if the visitor has one.

[06:29:00.0000] <hsivonen>
Opera Mobile 11 needs Android 2.3, but you don't know what version of Android the user has if the user is already running Opera Mobile or Opera Mini

[06:29:01.0000] <gsnedders>
hsivonen: You have no way on ARM to tell what sort of CPU you have apart from blindingly trusting the OS

[06:29:02.0000] <gsnedders>
(or trying and seeing if you crash)

[06:30:00.0000] <hsivonen>
gsnedders: as I understand it, Firefox reads stuff under /proc to figure out if the CPU supports neon

[06:30:01.0000] <hsivonen>
also to blacklist the JIT on certain Samsung devices

[06:34:00.0000] <gsnedders>
hsivonen: AFAIK short of reading /proc there's nothing you can do, as I understand it

[06:35:00.0000] <gsnedders>
Like, there's nothing analogous to CPUID.

[06:35:01.0000] <hsivonen>
gsnedders: how does Linux itself find out what sort of ARM CPU it has?

[06:39:00.0000] <gsnedders>
hsivonen: This I don't entirely understand, and looking at this again I'm confusedâ¦ I *believe* it is set at compile-time.

[06:39:01.0000] <hsivonen>
/me wonders how Verizon Opera Mini differs from Opera Mini except by being a version behind and having an ugly icon

[06:39:02.0000] <gsnedders>
hsivonen: looking at it on a BeagleBoard, "Features" is incomplete, for example.

[06:40:00.0000] <hsivonen>
gsnedders: so if the kernel isn't device-specific (e.g. Debian) one can't tell?

[06:41:00.0000] <gsnedders>
hsivonen: I believe this to be the case. I'm just looking on Ubuntu on ARM, FWIW.

[06:43:00.0000] <hsivonen>
/me didn't know Ubuntu shipped on ARM

[06:45:00.0000] <gsnedders>
hsivonen: Only an unofficial port

[06:46:00.0000] <hsivonen>
http://en.wikipedia.org/wiki/Linux_distribution_comparison#Architecture_support seems to list a distro as "Yes" if it has ever supported a given architecture

[06:46:01.0000] <hsivonen>
which misrepresents e.g. PPC support today

[07:15:00.0000] <Lachy>
Opera Mobile for Android build previewing getUserMedia() support has released http://my.opera.com/core/blog/2011/03/23/webcam-orientation-preview

[07:16:00.0000] <richt>
/me it remains to be seen if we're going to bleed out on this cutting edge with getUserMedia()

[07:21:00.0000] <hsivonen>
so where does HTML5 get the idea that cloning a script clones the "already started" flag?

[07:23:00.0000] <hsivonen>
whoa! Hixie is not on IRC.

[07:23:01.0000] <hsivonen>
anyway, the context is https://bugzilla.mozilla.org/show_bug.cgi?id=644034

[07:24:00.0000] <Lachy>
Hixie hasn't been on IRC since at least yesterday. I don't know why.

[07:24:01.0000] <jgraham>
I think someone said his server is being reimaged

[07:24:02.0000] <jgraham>
So I blame wilhelm

[07:26:00.0000] <jgraham>
hsivonen: Your TCs need better pass conditions

[07:26:01.0000] <jgraham>
Or need better descriptions of what's going on

[07:27:00.0000] <hsivonen>
jgraham: view source :-)

[07:27:01.0000] <jgraham>
hsivonen: I did :)

[07:27:02.0000] <hsivonen>
jgraham: also, it's not clear if I should call the specced behavior "PASS"!

[07:28:00.0000] <jgraham>
hsivonen: Making the descriptions "cloned script ran" and "cloned script did not run" would be clear

[07:29:00.0000] <hsivonen>
jgraham: changed

[07:29:01.0000] <karlcow>
Hixie decided to give up finally, and grow veggies in Southern America in a remote farmland.

[07:29:02.0000] <jgraham>
karlcow: You are confusing Hixie and annevk :p

[07:29:03.0000] <karlcow>
ahaha

[07:30:00.0000] <hsivonen>
Opera passes, FWIW

[07:32:00.0000] <wilhelm>
I am indeed to blame! But I like to think of it as an accidental visit to rehab. (c:

[09:44:00.0000] <MikeSmith>
is anybody here using django-cms?

[09:44:01.0000] <MikeSmith>
or tried it?

[09:58:00.0000] <jgraham>
MikeSmith: Is django-cms something different to django?

[09:58:01.0000] <MikeSmith>
yeah

[09:58:02.0000] <MikeSmith>
it's a specific application of django

[09:59:00.0000] <MikeSmith>
as far as I understand it

[09:59:01.0000] <MikeSmith>
which isn't very far

[09:59:02.0000] <jgraham>
/me finds the website

[10:00:00.0000] <smaug____>
Google did it again. http://chrome.blogspot.com/2011/03/talking-to-your-computer-with-html5.html  Calling their own API as part of HTML5   "HTML5 speech input API"

[10:05:00.0000] <MikeSmith>
smaug____: I think they have written a draft for thatâ¦ maybe "HTML5" now means "existence of a draft for an open standard"

[10:06:00.0000] <MikeSmith>
anyway, I'm happy until PHP starts getting called HTML5

[10:06:01.0000] <smaug____>
MikeSmith: they have written a (not very good, IMO) proposal for HTML Speech XG

[10:06:02.0000] <smaug____>
there are also other proposals

[10:06:03.0000] <MikeSmith>
yeah

[10:08:00.0000] <MikeSmith>
we need a isPointInPath(x, y) to determine if something really is HTML5

[10:08:01.0000] <MikeSmith>
with a non-zero winding rule number

[10:08:02.0000] <smaug____>
Microsoft has a lot more sane proposal for HTML+Speech

[10:08:03.0000] <MikeSmith>
I haven't actually seen that one, I guess

[10:09:00.0000] <smaug____>
well, MS has 3 proposals, but 2 of those are nice ones

[10:09:01.0000] <smaug____>
:)

[10:10:00.0000] <MikeSmith>
that's a good way to do it

[10:47:00.0000] <MikeSmith>
jgraham: sometime soon, I would like to get your help with figuring out where we need to be going with trying to get a common test runner set up

[10:47:01.0000] <MikeSmith>
I can go to where you are if needed

[10:48:00.0000] <MikeSmith>
you still in LinkÃ¶ping, right?

[11:15:00.0000] <AryehGregor>
/me realizes that foo.insertBefore(bar, foo.firstChild) works to insert bar as the first child of foo, by magic

[11:15:01.0000] <AryehGregor>
Would prependChild() have killed anyone, honestly?

[11:17:00.0000] <Lachy>
AryehGregor, does that work even if foo has no children, and foo.firstChild returns null?

[11:18:00.0000] <AryehGregor>
Lachy, yes, because foo.insertBefore(bar, null) is the same as foo.appendChild(bar).

[11:18:01.0000] <AryehGregor>
As I said, magic.

[11:18:02.0000] <Lachy>
ok

[11:27:00.0000] <zewt>
that's not magic, that's avoiding redundant entry points

[11:28:00.0000] <zewt>
when you have several exactly equivalent ways of doing the same thing, all you do is fragment code, with everyone choosing one at random

[11:29:00.0000] <AryehGregor>
You make the code shorter, clearer, and more readable.

[11:29:01.0000] <AryehGregor>
Python's startsWith() and endsWith() methods for strings are a great example.

[11:30:00.0000] <AryehGregor>
When they're useful, it's clear that you do in fact want to use them rather than some other methods, and they read much better than non-special-purpose alternatives.

[11:30:01.0000] <zewt>
"insert before the first child" is perfectly readable to me

[11:30:02.0000] <MikeSmith>
/me finds himself strongly agreeing with AryehGregor 

[11:31:00.0000] <AryehGregor>
E.g., if url.startsWith("http://"): vs. if url.substr(0, 7) == "http://": or if re.match("^http://", url): (I don't even remember if the latter two are correct, but you get the point)

[11:31:01.0000] <AryehGregor>
zewt, no, because it's not obvious what happens if there's no first child.

[11:31:02.0000] <zewt>
it's not obvious if you don't know the API

[11:32:00.0000] <AryehGregor>
Actually, Python is a great example of usually providing only one good way to do things, while still being very easy to learn and read.

[11:32:01.0000] <zewt>
(and even then it seems pretty straightforward)

[11:32:02.0000] <AryehGregor>
zewt, you can't expect the typical developer to know API details.  Even if you know the API, it's not so logical that you wouldn't have to think for a moment, unless maybe you're *really* familiar with it.

[11:33:00.0000] <AryehGregor>
prependChild() would be shorter and clearer.

[11:33:01.0000] <zewt>
that's just it--a Python API wouldn't have both insertBefore(obj, null) and insertAtBeginning(obj), it'd only have the former

[11:33:02.0000] <zewt>
(there's no "native" tree or linked list type in Python, though)

[11:33:03.0000] <zewt>
(oddly)

[11:34:00.0000] <AryehGregor>
Well, why does the API have appendChild(), then?  I guess according to you that shouldn't exist either?

[11:35:00.0000] <MikeSmith>
http://my.opera.com/operamobile/blog/the-components-of-opera-mobile-11-on-android is a nice article

[11:35:01.0000] <zewt>
because you can't implement appendChild with insertBefore

[11:35:02.0000] <MikeSmith>
/me wonders who Dag Olav Norem is

[11:35:03.0000] <AryehGregor>
Sure you can.  a.appendChild(b) == a.insertBefore(b, null).

[11:36:00.0000] <zewt>
er, yeah (mixing up in my head due to multitasking)--and that's exactly why there shouldn't be multiple ways to do that

[11:37:00.0000] <zewt>
instead we have multiple methods to remember

[11:38:00.0000] <AryehGregor>
http://docs.python.org/py3k/library/stdtypes.html#mutable-sequence-types

[11:38:01.0000] <AryehGregor>
That has append(), extend(), and insert() even though you can get the same effect by array slicing.

[11:38:02.0000] <AryehGregor>
Also remove().

[11:45:00.0000] <zewt>
it boils down to what you consider an "obvious way to do something"; to me, with a node-based data structure like a tree, it makes sense to have a single "insert child" method

[11:45:01.0000] <zewt>
which I think is not, at least, comparable to s[len(s):len(s)] = [x] :)

[11:50:00.0000] <zewt>
jeeezus

[11:50:01.0000] <zewt>
mail from ferraiolo on webapps is a poster child for why html mail is a bad idea. heh

[11:50:02.0000] <AryehGregor>
Man, text-decoration is a horrible property in every possible respect.

[11:50:03.0000] <zewt>
i can't even tell what his mailer is trying to do with that gigantic quote header

[11:50:04.0000] <AryehGregor>
It sets several orthogonal things with no way to set them separately and no way to override it in descendants.

[11:55:00.0000] <zewt>
one can also only wonder why "blink" is in there at all

[11:55:01.0000] <zewt>
"let's resurrect the single most hated thing webpages have ever done!"

[11:56:00.0000] <zewt>
(okay, pop-unders are probably higher on that list)

[11:57:00.0000] <kennyluck>
I wonder why no browser implementor is interested in the "text-decoration-skip" property. At least it's a canceler.

[11:57:01.0000] <zewt>
what the heck does this mean? "SVG1, CSS1-only, and CSS2-only user agents may implement the older model and still claim conformance to this part of CSS 2.1. (This does not apply to UAs developed after this specification was released.)"

[11:58:00.0000] <zewt>
"you can claim conformance to this if you implemented it before the spec was released, but not after"? spec grandfathering? that seems ... sort of absurd, heh

[11:58:01.0000] <zewt>
am I misreading that?

[12:00:00.0000] <kennyluck>
Backward compatible on UA that claims to conform to http://www.w3.org/TR/CSS2/ I guess. They should have linked to the date-specific version.

[12:57:00.0000] <Hixie>
does opera have a pushstate implementation?

[13:04:00.0000] <karlcow>
Hixie: for history stuff?

[13:04:01.0000] <karlcow>
not in a public build yet

[13:05:00.0000] <aho>
11.01 and 11.50 (webgl build) don't support it yet

[13:06:00.0000] <aho>
if anyone wants to try it... here is a nice demo page: http://html5demos.com/history

[13:25:00.0000] <Hixie>
karlcow: k

[14:05:00.0000] <hober>
Hixie: nice to finally meet you, however briefly

[14:18:00.0000] <Hixie>
hober: indeed!

[14:20:00.0000] <Lachy>
Hixie, just wondering when you next plan to work on the device streaming api?

[14:22:00.0000] <Hixie>
soonish. the w3c html wg deadlines keep getting in my way.

[14:23:00.0000] <Hixie>
history api is my next job, since that's urgent (shipping already, fixes must bedone asap)

[14:23:01.0000] <Hixie>
then device, then updating websockets, then 147 and 144

[14:33:00.0000] <Hixie>
tomorrow's the deadline on http://www.w3.org/2002/09/wbs/40318/issue-122-objection-poll/results if anyone cares

[14:33:01.0000] <Hixie>
not really sure what to say on that one, both options seem kinda poor and neither seem related to the issue i originally raised

[14:34:00.0000] <Hixie>
othermaciej: http://www.w3.org/2002/09/wbs/40318/issue-31-80-objection-poll/ seems corrupted

[15:04:00.0000] <AryehGregor>
othermaciej, here's a page that seeks to convert Subversion users to the DVCS way of thinking, if you're interested: http://hginit.com/00.html

[15:29:00.0000] <Lachy>
didn't anyone submit a no-change proposal for issue-122?

[15:30:00.0000] <Hixie>
apparently not

[15:30:01.0000] <Lachy>
that sucks. why don't the survey's include a no change option by default anyway?

[15:30:02.0000] <Hixie>
i didn't expect it to have any effect on the spec since it was an issue on another document

[15:34:00.0000] <Lachy>
what do you mean? It's about the lady of shallott example in the spec. How is that about another document?

[15:35:00.0000] <Hixie>
it's about the lady of shallott example in faulkner's document, not the spec

[15:35:01.0000] <Hixie>
i raised the issue. then retracted it, but the chairs let it live anyway.

[15:35:02.0000] <Hixie>
then it somehow mutated into changes to the spec

[15:41:00.0000] <Lachy>
oh, well if it's about the alt-techniques document, then I can ignore it as an irrelevant spec

[15:41:01.0000] <Hixie>
it was about alt-techniques

[15:41:02.0000] <Hixie>
but the changes proposed are on the html spec

[15:42:00.0000] <Lachy>
hmm, it seems the second change proposal relates to the spec. The first proposal only refers to the alt-techniques document

[15:43:00.0000] <Hixie>
really?

[15:43:01.0000] <Hixie>
i thought both applied to both

[15:44:00.0000] <Hixie>
step 2 of the details of CP 1 affects HTML5

[15:44:01.0000] <Hixie>
and CP2 only affects html5

[15:44:02.0000] <Lachy>
oh, wtf. I'm confused now

[15:44:03.0000] <Lachy>
the description of the issue at the beginning of the questionnaire only refers to there being a problem in alt-techniques.

[15:45:00.0000] <Hixie>
yeah this does seem highly misleading

[15:45:01.0000] <Hixie>
and confusing

[15:45:02.0000] <Hixie>
and both proposals seem net negative to me

[15:45:03.0000] <Hixie>
hence my not being sure what to do

[15:53:00.0000] <jgraham>
Hixie: Point this out and assume that reasonable action will be taken to remedy the evident problems?


2011-03-24
[17:34:00.0000] <Hixie>
ok i'm outta here. bbl.

[02:02:00.0000] <idnc>
hi all

[02:19:00.0000] <idnc>
before I file a feature request(or more of a query)..

[02:20:00.0000] <idnc>
http://pastebin.com/ZmStuMQn

[02:21:00.0000] <idnc>
- the feature part - was this already discussed here? or is this even the right place?

[02:23:00.0000] <idnc>
..I was send here from moz dev nw, although I think its more browser-related then a spec issue

[02:46:00.0000] <jgraham>
/me grumbles at the lack of x-archived-at type headers on WHATWG mail

[02:56:00.0000] <kennyluck>
/me why need x- ?

[02:59:00.0000] <jgraham>
Oh Maybe no x-

[08:31:00.0000] <wilhelm>
Have any browser vendors written any tests for <details> (and friends) yet?

[08:33:00.0000] <Peter->
There are a few tests on WebKit's SVN, though no formal test-cases

[08:33:01.0000] <jgraham>
wilhelm: Don't think anyone has implemented <details> yetâ¦

[08:33:02.0000] <Peter->
WebKit has

[08:33:03.0000] <Peter->
http://trac.webkit.org/changeset/81035

[08:33:04.0000] <jgraham>
Peter-: With an actual UI?

[08:34:00.0000] <wilhelm>
jgraham: I only care about tests right now. (c:

[08:34:01.0000] <Peter->
Yes, jgraham, albeit simple. It's available in WebKit/Chromium nightlies. Further down that page is a list of changed files which begins with various html files

[08:34:02.0000] <wilhelm>
Peter-: Excellent. Thank you.

[08:34:03.0000] <Peter->
these are tests

[08:36:00.0000] <jgraham>
Peter-: Oh. Indeed. Nice

[08:36:01.0000] <jgraham>
wilhelm: BTW it occurred to me that the open/closed thing is an ideal use for a != ref test

[08:40:00.0000] <wilhelm>
jgraham: Indeed.

[12:00:00.0000] <AryehGregor>
Wow, I finally got IE9 to work with my execCommand() auto-run thing.

[12:01:00.0000] <AryehGregor>
It seems like execCommand() only works . . . well, I have no idea what the actual conditions are, but I eventually fixed the problem by replacing a function call with setting an input's value, focus()ing the input, and click()ing a button that ran the script on the input's value.

[12:01:01.0000] <AryehGregor>
I mean, WTF, but it works.

[12:04:00.0000] <AryehGregor>
So now I can actually research what IE does.

[12:34:00.0000] <Hixie>
AryehGregor: that's messed up

[12:34:01.0000] <Hixie>
AryehGregor: i wonder how devs get it to work on real sites

[12:35:00.0000] <AryehGregor>
Hixie, remember, the usual use-case is interactive stuff.

[12:35:01.0000] <AryehGregor>
It's not going to be common to want to run hundreds of commands on different artificially-constructed selections without user interaction of any kind.

[12:35:02.0000] <AryehGregor>
Also, I'm using the W3C Range API, which is new in IE9.  Maybe it would work differently with their proprietary API.

[12:35:03.0000] <AryehGregor>
Anyway, the overall answer to how devs get execCommand() to work on real sites "with much pain".

[12:38:00.0000] <Hixie>
fair enough

[13:58:00.0000] <AryehGregor>
I am seriously ready to murder whoever wrote the default vim indentation script for HTML.

[13:59:00.0000] <AryehGregor>
Most of them are fine, like for PHP or JS.  I have quibbles, but they're usable.

[13:59:01.0000] <AryehGregor>
But HTML . . . argh.

[14:07:00.0000] <matijsb1>
AryehGregor: what goes wrong? (thinking of switching to vim from TextMate here)

[14:08:00.0000] <AryehGregor>
matijsb1, lots and lots of stuff.  For instance, whenever I try to do "} else {" in an embedded JS block, in K&R style, it tries to indent it an extra line.

[14:08:01.0000] <AryehGregor>
Then when I try to de-indent it, it reindents it when I hit Enter.

[14:08:02.0000] <zewt>
it tends to be nitty about switching to JS mode inside HTML, though increasing the search distance helps a lot

[14:08:03.0000] <AryehGregor>
Then when I de-indent it again, it de-indents all following lines I add by an extra tab.

[14:09:00.0000] <AryehGregor>
zewt, I just use syn sync fromstart for HTML, that solves it.

[14:09:01.0000] <AryehGregor>
But the indentation is infuriating.

[14:09:02.0000] <zewt>
i'd expect it to just use JS's indentation rules for JS nested in HTML, though

[14:09:03.0000] <matijsb1>
AryehGregor: oh god, that sounds bad

[14:09:04.0000] <AryehGregor>
If you try to omit end tags from table cells, it just indents all further lines to a crazy degree.

[14:10:00.0000] <zewt>
i don't have autoindent enabled for JS, though; i probably should

[14:10:01.0000] <matijsb1>
especially the re-indenting after de-indenting would drive me absolutely insane

[14:10:02.0000] <AryehGregor>
It sometimes indents JS that has HTML tags embedded in strings or comments, apparently unable to figure out that it's really a string or comment.

[14:10:03.0000] <AryehGregor>
It also always tries indenting the contents of <script> and <style>, and again, re-indents if you de-indent.

[14:10:04.0000] <zewt>
err, I do in Linux but not in Windows gvim, probably need to sync my configs

[14:10:05.0000] <AryehGregor>
I just do ":set indentexpr=" when I get too fed up, but then it does no real indentation at all.

[14:11:00.0000] <AryehGregor>
Maybe there's an alternative script out there someone's written.

[14:11:01.0000] <zewt>
don't see problems with "} else {" with a .js file, though it's pretty dumb about indentation when statement-ending semicolons are missing

[14:11:02.0000] <AryehGregor>
For other languages it's fine, although occasionally annoying (like the PHP formatter always tries to leave whitespace at the end of lines in comments when it auto-breaks lines, and gets confused if you remove it).

[14:11:03.0000] <zewt>
eg. if you say foo() instead of foo(); it indents the next line

[14:11:04.0000] <AryehGregor>
No, .js is okay.

[14:12:00.0000] <AryehGregor>
Well, I don't do that, so I'm fine.  :)

[14:12:01.0000] <zewt>
(i'm from a C background so I always stick a semicolon there anyway, so I don't hit that much)

[14:12:02.0000] <zewt>
that's what I mean--if it's sane, javascript inside html should use the same indentation rules as a .js file--not, of course, claiming that it's *actually* sane

[14:12:03.0000] <AryehGregor>
I did most of my early JavaScript for MediaWiki, whose style conventions say to use semicolons in JS, presumably so it looks more PHP-like.

[14:12:04.0000] <zewt>
yeah I see what you're saying for embedded JS

[14:13:00.0000] <zewt>
why would anyone want to make things look more like PHP? :)

[14:13:01.0000] <AryehGregor>
Because MediaWiki is written in PHP.

[14:13:02.0000] <matijsb1>
lol

[14:15:00.0000] <zewt>
ew:

[14:15:01.0000] <zewt>
let js = '<script.*type\s*=\s*.*java'

[14:16:00.0000] <zewt>
not sure what affect that has, but it looks like it doesn't know that <script> = <script type="text/javascript"> now

[14:16:01.0000] <AryehGregor>
Anyone want to write an HTML parser that does incremental updates as the user types?  :)

[14:16:02.0000] <AryehGregor>
<script> without a type works for me in vim . . .

[14:16:03.0000] <zewt>
it does seem to work--but something in the HTML indentor, at least, is matching that

[14:18:00.0000] <zewt>
bleh: vim's indentation/highlighting is great when it works, but it makes me want to cut myself whenever I have to look at its configuration

[14:18:01.0000] <AryehGregor>
Yes, the configuration is horrifying.

[14:19:00.0000] <gsnedders>
emacs ftw!

[14:19:01.0000] <gsnedders>
/me hids

[14:19:02.0000] <gsnedders>
*hides

[14:19:03.0000] <zewt>
run, coward, run

[14:19:04.0000] <AryehGregor>
The highlighting is almost always superb, much better than I've seen in any other editor (I haven't tried emacs, but assume it's comparably good).

[14:19:05.0000] <AryehGregor>
Although it has a few bugs, like parsing ?> as a PHP end tag for PHP even if it's inside a string literal.

[14:19:06.0000] <AryehGregor>
(comes up fairly often with regex)

[14:30:00.0000] <zewt>
AryehGregor: the } else { problem does go away if I say <script type="text/javascript">

[14:30:01.0000] <AryehGregor>
Oh, really.

[14:30:02.0000] <AryehGregor>
I'll have to try that.

[14:30:03.0000] <espadrine>
zewt: some odd stuff then!

[14:30:04.0000] <zewt>
i'm guessing that can be fixed by fiddling with that regex

[14:30:05.0000] <AryehGregor>
If it works, I'm definitely going to be writing up a patch.

[14:31:00.0000] <zewt>
(the syntax coloring is still totally wrong--that is, not the same as it is in a .JS file)

[14:31:01.0000] <AryehGregor>
It's syntax-colored as JS, although it uses different actual colors.

[14:31:02.0000] <zewt>
(which I find more annoying than the indentation, I should probably look into that)

[14:32:00.0000] <zewt>
yeah, it should be using the exact same ruleset

[14:32:01.0000] <AryehGregor>
FWIW, in PHP, it switches into another language's colors if you use a heredoc.  Like: $foo = <<HTML

[14:32:02.0000] <AryehGregor>
<b>Hello!</b>

[14:32:03.0000] <AryehGregor>
HTML;

[14:32:04.0000] <AryehGregor>
The <b>Hello!</b> gets highlighted as HTML.

[14:32:05.0000] <AryehGregor>
So that suggests maybe it's possible to embed another language's ruleset, but maybe it just reimplements everything too.

[14:33:00.0000] <zewt>
http://www.vim.org/scripts/script.php?script_id=3081 this seems to have some improvements, too, though I'm not crazy about forking Vim's configuration stuff--wonder if he knows to send patches

[14:33:01.0000] <zewt>
well ... it's on vim.org, so heh I don't know

[14:36:00.0000] <zewt>
comments in the HTML highlighting script like '" JAVA SCRIPT' don't inspire a whole lot of confidence

[14:55:00.0000] <jgraham>
AryehGregor: Well hober is writing a HTML parser for emacs whcih I assume will provide kickass highlighting and indentation :)

[14:55:01.0000] <jgraham>
Probably not js-in-HTML though

[14:55:02.0000] <AryehGregor>
Not quite enough to get me to consider switching from vim to emacs at this point, I'm afraid.

[14:56:00.0000] <jgraham>
Oh just admit it, you're only using vim because you accidentially started it once and still haven't figured out how to quit it

[14:56:01.0000] <zewt>
bleh guess I should try vim 7.3 before sending any mails about the highlighting stuff

[14:58:00.0000] <AryehGregor>
jgraham, no, I'm using it because the server I originally used didn't have emacs installed, so when I graduated from nano I naturally switched to vim.

[14:59:00.0000] <zewt>
heh

[14:59:01.0000] <zewt>
:help!

[14:59:02.0000] <AryehGregor>
I think I might have even been root, but figured it wasn't worth an apt-get to try out emacs when vim was already installed.

[15:04:00.0000] <zewt>
ever loaded an XPM in vim? heh


2011-03-25
[17:56:00.0000] <Hixie>
ok history.state is fixed

[17:57:00.0000] <Hixie>
...and i guess the overall pushState/popState feature now has a new name, history.state

[18:49:00.0000] <Yuhong>
hsivonen: Just found this: http://msdn.microsoft.com/en-us/library/ff406036(v=VS.85).aspx

[19:12:00.0000] <Yuhong>
hsivonen: There is also IE9 quirks mode, defined here: http://msdn.microsoft.com/en-us/library/gg558056(v=VS.85).aspx

[19:14:00.0000] <AryehGregor>
Wow, there's loads of secret discussion on member-psig about the HTML5 license.

[19:16:00.0000] <zewt>
is "it's dangerous to go alone, take this" a sufficient license for a spec

[19:19:00.0000] <AryehGregor>
Doesn't sound GPL-compatible.

[19:19:01.0000] <zewt>
i remember when I cared about the GPL. nostalgia ...

[19:23:00.0000] <AryehGregor>
Oh, like half of these messages were CCd to public-html anyway.

[19:23:01.0000] <AryehGregor>
Still interesting, though.

[19:23:02.0000] <zewt>
but less so for not being secreT? :P

[19:24:00.0000] <zewt>
(capital T makes it even more secret)

[19:24:01.0000] <AryehGregor>
I mean the ones that aren't CCd to public-html are interesting.

[19:24:02.0000] <AryehGregor>
Although I guess I'm not allowed to say anything specific to people who don't have real membership (rather than the fake Public Invited Expert thing).

[19:51:00.0000] <Hixie>
AryehGregor: there's not much to report that hasn't already been reported. they spent n years coming up with a bunch of licenses none of which address all the use cases we asked for, and the MIT license does.

[22:46:00.0000] <micheil>
Hixie: are you about?

[22:46:01.0000] <Hixie>
vaguely

[22:49:00.0000] <micheil>
Hixie: would it be an idea to add into the websocket specification a way to enable debugging, so that you can see the actual network packets?

[22:49:01.0000] <Hixie>
not as part of the specification, but it would make sense for browsers to do that, sure

[22:49:02.0000] <micheil>
hmm, okay

[22:49:03.0000] <Hixie>
in firebug or whatever they call their debuggers

[22:49:04.0000] <micheil>
just trying to figure out whether node-websocket-server is actually following spec.

[22:50:00.0000] <Hixie>
the new one?

[22:50:01.0000] <Hixie>
new spec, that is

[22:50:02.0000] <micheil>
on server close, it sends 0xFF0x00, and then closes the socket

[22:50:03.0000] <Hixie>
i'm pretty sure that's not valid in the new spec

[22:51:00.0000] <micheil>
unfortunately not, I working on cutting a release that supports 75 and 76, before rewriting it all to support the latest

[22:51:01.0000] <Hixie>
ah ok

[22:51:02.0000] <micheil>
yeah.

[22:51:03.0000] <micheil>
to be able to support each version requires that.

[22:51:04.0000] <Hixie>
going to ietf was such a mistake

[22:51:05.0000] <micheil>
also, is there any browser support for the latest version?

[22:51:06.0000] <Hixie>
doubt it

[22:51:07.0000] <micheil>
:/

[22:51:08.0000] <micheil>
makes' it hard to test then.

[22:51:09.0000] <Hixie>
they'll get there eventually

[22:52:00.0000] <micheil>
well, in all honesty, parts of their framing are better then what the original framing was

[22:52:01.0000] <micheil>
specifically the length based framing instead of prefix/suffix based

[22:53:00.0000] <micheil>
but other stuff that really belongs at userlevel has been included at protocol level

[23:41:00.0000] <nshaik>
Hi .. is invoking a webworker from a file:/// html and js incorrect..because i get ** Message: console message: undefined @0: SECURITY_ERR: DOM Exception 18: An attempt was made to break through the security policy of the user agent.

[00:14:00.0000] <rmccue>
Hi, quick question regarding sections and headings: are headings relative to their nearest section or the top-most one?

[00:14:01.0000] <rmccue>
(i.e. <section> <h1>Top</h1> <section> <h2>Another</h2> </section> </section>, or <h1> again?)

[02:20:00.0000] <jgraham>
micheil: Gecko have a test build of -06

[02:20:01.0000] <jgraham>
Maybe WebKit also

[02:22:00.0000] <jgraham>
http://www.ducksong.com/misc/websockets-builds/ws-06/4.0.rc1.01/

[02:24:00.0000] <jgraham>
/me gets the impression that the licesning stuff is trying to solve an impossible problem

[04:28:00.0000] <micheil>
jgraham: are these likely to reach end users?

[04:29:00.0000] <micheil>
jgraham: or are these just test builds to see that the protocol actually works?

[04:30:00.0000] <MikeSmith>
wow, chrome dev channel is up to v12 now

[04:30:01.0000] <jgraham>
Well presumably the intention is to roll the protocol out to end users eventually

[04:30:02.0000] <micheil>
jgraham: yeah, I'm just wondering if it'd be better to have websockets in dev only builds, or only ship up to -76, until the protocol stablises

[04:31:00.0000] <jgraham>
MikeSmith: Well that will happen if you increment the version number 8 times a year

[04:32:00.0000] <jgraham>
micheil: It would be better for no one to ship -76

[04:32:01.0000] <micheil>
jgraham: well, I'm more so meaning, -76 is the latest one to have shipped, right?

[04:32:02.0000] <micheil>
(out of any vendor)

[04:32:03.0000] <jgraham>
Yeah, but only WebKit still ship

[04:33:00.0000] <jgraham>
And it would be nice if they would stop

[04:33:01.0000] <jgraham>
(off by default doesn't count)

[04:33:02.0000] <micheil>
so, webkit would be the only ones to maybe be implementing -06?

[04:33:03.0000] <jgraham>
How did you infer that?

[04:33:04.0000] <micheil>
okay, well, I'm more meaning, is it worth my time implementing -06?

[04:34:00.0000] <jgraham>
It's not like WebKit are the only people that care about WS, they're just the only people shipping the broken version

[04:34:01.0000] <jgraham>
micheil: No idea

[04:34:02.0000] <jgraham>
I guess it depends on the value of your timer

[04:34:03.0000] <jgraham>
*time

[04:35:00.0000] <micheil>
well, if it means that end users get to make use of the product, and that it isn't deprecated without any use, then, that's time well spent

[04:35:01.0000] <jgraham>
I have rather given up on the whole IETF thing since it became clear that there was no chance of anything I said having an effect

[04:35:02.0000] <micheil>
is anybody shipping any future versions of websockets yet?

[04:36:00.0000] <micheil>
jgraham: yeah, it does seem like a gated community in an open web.

[04:36:01.0000] <jgraham>
Where by "future" you mean "current"?

[04:36:02.0000] <micheil>
well, yeah, I guess

[04:36:03.0000] <jgraham>
Not afaik

[04:36:04.0000] <micheil>
so, nothing currently is using -06?

[04:37:00.0000] <jgraham>
It seems Chrome has an implementation

[04:37:01.0000] <jgraham>
I'm not aware that they actuallly ship it

[04:40:00.0000] <micheil>
hmm..

[04:43:00.0000] <micheil>
jgraham: would you say this looks accurate? https://github.com/miksago/node-websocket-server/wiki/Browser-Support

[04:45:00.0000] <jgraham>
micheil: Opera shipped disabled by default

[04:45:01.0000] <micheil>
in 10.70?

[04:45:02.0000] <jgraham>
There is no 10.70 :)

[04:45:03.0000] <jgraham>
11

[04:45:04.0000] <micheil>
okay...

[04:46:00.0000] <micheil>
was there a 10.70?

[04:46:01.0000] <jgraham>
No

[04:46:02.0000] <jgraham>
It was called 11

[04:46:03.0000] <micheil>
okay

[04:47:00.0000] <jgraham>
Chrome and Chromium should presumably be identical here

[04:47:01.0000] <micheil>
updated.

[04:47:02.0000] <micheil>
yeah.

[04:48:00.0000] <micheil>
so that should be right? (updated)

[04:50:00.0000] <jgraham>
I think so

[04:50:01.0000] <micheil>
okay, cool

[05:04:00.0000] <hsivonen>
/me feels sorry for Opera brand people for the toilet seat logo refusing to die in the press and on third-party sites

[05:27:00.0000] <MikeSmith>
hsivonen: have you gotten any new bug reports for parsing bugs since the FF4 release on the 22nd?

[05:31:00.0000] <hsivonen>
MikeSmith: I noticed one myself

[05:31:01.0000] <MikeSmith>
oh?

[05:31:02.0000] <hsivonen>
MikeSmith: and there's one that's tied to UA sniffing

[05:31:03.0000] <MikeSmith>
ok

[05:32:00.0000] <hsivonen>
MikeSmith: Firefox 4 doesn't reconstruct active formatting elements when it sees text in an HTML integration point

[05:32:01.0000] <MikeSmith>
oh

[05:32:02.0000] <hsivonen>
MikeSmith: I gave up on debugging the UA sniffing case after observing that it worked if I faked Chrome's UA string

[05:32:03.0000] <MikeSmith>
hmm

[05:34:00.0000] <hsivonen>
https://bugzilla.mozilla.org/show_bug.cgi?id=644144

[05:34:01.0000] <MikeSmith>
about the former bug, are there sites for which that has caused significant problems?

[05:34:02.0000] <hsivonen>
https://bugzilla.mozilla.org/show_bug.cgi?id=643410

[05:35:00.0000] <hsivonen>
MikeSmith: none known. I noticed it when I reviewed a spec change

[05:35:01.0000] <MikeSmith>
ok

[05:35:02.0000] <MikeSmith>
/me looks at the bug reports

[05:35:03.0000] <hsivonen>
see also http://www.w3.org/Bugs/Public/show_bug.cgi?id=12357

[05:36:00.0000] <MikeSmith>
/me looks

[05:36:01.0000] <hsivonen>
oh, and also https://bugzilla.mozilla.org/show_bug.cgi?id=644034

[05:36:02.0000] <MikeSmith>
that seems like an oversight

[05:37:00.0000] <MikeSmith>
oh

[05:37:01.0000] <MikeSmith>
that's not good

[05:37:02.0000] <MikeSmith>
whoah

[05:37:03.0000] <MikeSmith>
but you're WONTFIXing it?

[05:37:04.0000] <hsivonen>
MikeSmith: well, didn't break sites in the wild, so OK

[05:37:05.0000] <MikeSmith>
ah, OK

[05:38:00.0000] <hsivonen>
MikeSmith: Firefox 4 complies with the spec, spec makes sense, no sites in the wild broken

[05:38:01.0000] <hsivonen>
one broken bank so far: https://bugzilla.mozilla.org/show_bug.cgi?id=643710

[05:40:00.0000] <MikeSmith>
developers of bank sites as a class seem to be in constant competition with airline sites to prove who can come up with the most bizarre asshattedly broken code

[05:40:01.0000] <hsivonen>
MikeSmith: we unbroke united.com before shipping

[05:41:00.0000] <MikeSmith>
thanks

[05:41:01.0000] <MikeSmith>
as a United customer I appreciate it :)

[05:42:00.0000] <hsivonen>
MikeSmith: but you are a U.S. citizen, right? the bug affected only non-U.S. citizens

[05:42:01.0000] <MikeSmith>
ah, OK

[05:42:02.0000] <karlcow>
:D

[05:43:00.0000] <MikeSmith>
hsivonen: so what's the current target date for FF5?

[05:44:00.0000] <MikeSmith>
/me notices his Minefield is now at 4.2

[05:45:00.0000] <hsivonen>
I really wish we'd fix the prerelease UA strings to say what the stable version will say

[05:46:00.0000] <hsivonen>
MikeSmith: I can't find the date written anywhere, so I'll refrain from repeating hearsay from memory

[05:49:00.0000] <karlcow>
I wonder if the quick evolution of version numbers will help killing the user agent sniffing based on version numbers

[05:49:01.0000] <wilhelm>
That would be nice.

[05:49:02.0000] <hsivonen>
that would be an excellent outcome, yes

[05:50:00.0000] <Rik`>
MikeSmith: June 22 I think

[05:50:01.0000] <hsivonen>
though the problems I see are more often based on browser name than number

[05:51:00.0000] <hsivonen>
like sites not working, because Firefox 4 doesn't have the substring "Safari" in the UA string

[05:51:01.0000] <hsivonen>
that's the most common one I've seen

[05:53:00.0000] <hsivonen>
karlcow: btw, you might want to add wikia.com to the list of sites you will need to evangelize when Opera implements HTML5-compliant script execution. https://bugzilla.mozilla.org/show_bug.cgi?id=610369

[05:55:00.0000] <karlcow>
hsivonen: thanks. Useful I already see a few bugs opened for wikia

[05:59:00.0000] <MikeSmith>
Rik`: thanks

[06:13:00.0000] <karlcow>
> Drieu left Apple in March 2010, where he was the head of the company's rich media and applications group. After a five month period without employment, he joined Motorola. His work with Web standards groups WhatWG and W3C and his Web-related patents suggest that he would be well-suited to lead an operating system development effort.

[06:13:01.0000] <karlcow>
â http://www.informationweek.com/news/development/mobility/showArticle.jhtml?articleID=229400097

[06:21:00.0000] <MikeSmith>
karlcow: huh?

[06:22:00.0000] <MikeSmith>
http://www.linkedin.com/in/gillesdrieu

[06:23:00.0000] <MikeSmith>
look in the Patents and Publications part

[06:23:01.0000] <MikeSmith>
wtf

[06:24:00.0000] <miketaylr>
O_o

[06:24:01.0000] <MikeSmith>
"Participated very actively to the Khronos WebGL working group (spec editor)."

[06:25:00.0000] <MikeSmith>
hey, maybe he's actually Chris Marrin

[06:25:01.0000] <MikeSmith>
under an assumed name

[06:26:00.0000] <karlcow>
I have no idea where they got the name. The article is thin.

[06:29:00.0000] <karlcow>
impressive list of contributions

[06:34:00.0000] <karlcow>
hmm http://www.google.com/search?q=css+drieu++site%3Aw3.org

[06:35:00.0000] <karlcow>
http://www.w3.org/Search/Mail/Public/search?keywords=drieu

[06:36:00.0000] <MikeSmith>
well, you can't blame a man for padding his resume a bit

[06:36:01.0000] <MikeSmith>
god knows I have

[06:36:02.0000] <MikeSmith>
http://www.linkedin.com/in/sideshowbarker

[06:37:00.0000] <karlcow>
heh

[08:06:00.0000] <jgraham>
Is http://hoppipolla.co.uk/tests/navigation/001.html making some unreasonable assumption, or is the stuff in the spec about fragment navigation being async not really true?

[08:06:01.0000] <jgraham>
(disclaimer: I didn't write that test)

[08:10:00.0000] <aho>
awful indention

[08:10:01.0000] <jgraham>
Oh, that is my fault

[08:10:02.0000] <jgraham>
It lost all the whitespace when I copied it into emacs and I made a half-assed attempt at reindenting it

[08:10:03.0000] <aho>
i wont bother trying to understand what it does, if it looks like this :>

[08:13:00.0000] <aho>
or more accurately: if i'd try to read it i'd probably get an aneurysm in the process

[08:14:00.0000] <jgraham>
It could be better now

[08:17:00.0000] <aho>
i'd say you cant actually test this behavior with js correctly

[08:19:00.0000] <aho>
hash is a magic host object... if i set it to some other value it can either do that stuff synchronously or asynchronously... however, reading that value back won't necessarily tell me if it's done with doing so or not

[08:19:01.0000] <jgraham>
aho: My reading of the spec is that the value of location.hash is given by the current document address

[08:20:00.0000] <jgraham>
The current document address doesn't change until the navigation occurs

[08:20:01.0000] <aho>
e.g. it might cache that new value and don't even bother with crossing the native bridge if that value is requested

[08:20:02.0000] <jgraham>
and the navigation is async

[08:21:00.0000] <jgraham>
aho: Are you basing this on the spec or on the behaviour of some browser(s) or on something else?

[08:22:00.0000] <aho>
is this specified in depth?

[08:22:01.0000] <jgraham>
Yes

[08:22:02.0000] <aho>
linky?

[08:24:00.0000] <jgraham>
http://www.whatwg.org/specs/web-apps/current-work/#location and references therein

[08:24:01.0000] <jgraham>
In particular http://www.whatwg.org/specs/web-apps/current-work/#navigate

[08:24:02.0000] <jgraham>
and http://www.whatwg.org/specs/web-apps/current-work/#scroll-to-fragid

[08:25:00.0000] <bfrohs>
http://twitter.com/WHATWG/status/51084738148057088 - Might want to look into tweaking the automatic shortener. Perhaps shorten to last full word? (hacks.mozilla link broken in tweet)

[08:28:00.0000] <aho>
http://www.whatwg.org/specs/web-apps/current-work/#navigate <- about navigating across documents, does not apply

[08:28:01.0000] <aho>
http://www.whatwg.org/specs/web-apps/current-work/#scroll-to-fragid <- doesn't mention anything async

[08:29:00.0000] <jgraham>
aho: The first one is the definition of "Navigate"

[08:29:01.0000] <jgraham>
and the second one says "queue a task"

[08:35:00.0000] <aho>
well, imo this is like retrieving css values. you set some new value(s) (which might be cached/delayed), but once you try to retieve them you'll always get those new values back, because those changes were flushed forcefully

[08:36:00.0000] <aho>
so from the js side it always looks synchronous (but it isn't necessarily synchronous)

[08:37:00.0000] <aho>
(would be a lot more complicated to handle if this weren't the case)

[08:39:00.0000] <jgraham>
aho: If that is the intended model, then either I am misreading the spec, or the spec is wrong

[08:40:00.0000] <jgraham>
Which brings me back to the original question :)

[08:42:00.0000] <aho>
well... either way... you can't really test it with js unless the spec explicitly states that reading the hash must be a live value and must not cause any kind of flushing, which would be a) annoying to use and b) annoying to implement :>

[08:43:00.0000] <aho>
(i'm aware that this still doesn't really answer your question, but it's the best shot i got)

[08:43:01.0000] <jgraham>
The whole point is that the javascript-visible behaviour has to be specified

[11:34:00.0000] <AryehGregor>
So there's no way to get the Selection in IE9 to contain an arbitrary range except addRange(), since it doesn't support extend() . . . but addRange() fails unpredictably with "Error: Unspecified error."

[11:34:01.0000] <AryehGregor>
Okay, I'm going to have to bite the bullet and look into IE's proprietary selection APIs.

[11:38:00.0000] <AryehGregor>
Except I forgot that there seems to be no actual way to set a TextRange to a given element/offset.

[11:38:01.0000] <AryehGregor>
SIGH.

[11:41:00.0000] <AryehGregor>
/me tries upgrading to IE9 final

[12:01:00.0000] <bga_>
js everywhere :) http://git.gnome.org/browse/gnome-shell/tree/js/ui

[12:10:00.0000] <AryehGregor>
Do any Opera people know what would cause Selection.addRange() to silently fail in some cases?

[12:13:00.0000] <gsnedders>
AryehGregor: In Opera?

[12:13:01.0000] <AryehGregor>
gsnedders, well, I'd hardly Opera people about other browsers, would I?

[12:13:02.0000] <AryehGregor>
Specifically in: http://aryeh.name/spec/dom-range/test/Selection-extend.html

[12:15:00.0000] <AryehGregor>
(which takes a long time to load, BTW)

[12:15:01.0000] <AryehGregor>
Notice how it complains rangeCount is 0 in every single case.

[12:19:00.0000] <AryehGregor>
/me prepares a slightly more minimal test-case

[12:21:00.0000] <AryehGregor>
. . . Does addRange() work at all in Opera?

[12:22:00.0000] <AryehGregor>
data:text/html,<!doctype html><script>getSelection().addRange(document.createRange()); alert(getSelection().rangeCount);</script>

[12:23:00.0000] <AryehGregor>
Actually, do any Selection mutation methods work at all?

[12:25:00.0000] <AryehGregor>
rangeCount works fine if you create the selection yourself.

[12:25:01.0000] <AryehGregor>
Hmm, wait, how do my execCommand tests work in Opera?

[12:25:02.0000] <AryehGregor>
/me looks

[12:25:03.0000] <AryehGregor>
That uses addRange() . . .

[12:26:00.0000] <AryehGregor>
data:text/html,<!doctype html><script>getSelection().addRange(document.createRange()); alert(typeof getSelection().getRangeAt(0));</script>

[12:26:01.0000] <AryehGregor>
Oh, it's just rangeCount that's totally broken.

[12:26:02.0000] <AryehGregor>
It doesn't work for programmatically-set ranges.

[12:26:03.0000] <AryehGregor>
That explains it.

[12:28:00.0000] <AryehGregor>
No, wait.

[12:28:01.0000] <AryehGregor>
Hmm.

[12:30:00.0000] <AryehGregor>
Okay, so getRangeAt(0) works in Opera even if there are no ranges.

[12:32:00.0000] <AryehGregor>
Oh, I see.

[12:32:01.0000] <AryehGregor>
Opera won't allow you to add just any range.

[12:33:00.0000] <AryehGregor>
Maybe it has some visibility requirement like WebKit does.  Hmm.

[12:33:01.0000] <AryehGregor>
rangeCount does seem to work.

[12:36:00.0000] <AryehGregor>
So adding a collapsed range seems not to work, and maybe also an invisible range.

[12:42:00.0000] <AryehGregor>
Aha, finally.

[12:42:01.0000] <AryehGregor>
The stuff I was selecting was below the test log, and didn't get displayed for some reason.

[12:45:00.0000] <AryehGregor>
Now Opera passes 80 tests, instead of 1!

[12:46:00.0000] <AryehGregor>
That's 80 out of 10913, but hey, at least all the failures are legitimate now.

[12:48:00.0000] <AryehGregor>
Also, it now runs the tests incredibly fast, presumably because >99% are now no-ops (don't even try to run extend()).

[12:49:00.0000] <Hixie>
i need to stop getting spam from people offering me canvas ink

[12:49:01.0000] <Hixie>
as funny as it is

[12:49:02.0000] <AryehGregor>
That is pretty funny.

[12:55:00.0000] <Hixie>
jeez, even with the big red warning on the TR/ page i _still_ get people e-mailing me questions about it without checking the latest draft first

[12:58:00.0000] <AryehGregor>
Hmm, still getting "Error: Unspecified error" in IE9 final.  I totally wasn't getting this yesterday.

[12:58:01.0000] <Ms2ger>
Hixie, I'd argue this is sadder:

[12:58:02.0000] <Ms2ger>
  isFirefox: (document.ATTRIBUTE_NODE != null && window.directories != null),

[12:59:00.0000] <Hixie>
sadder than what?

[12:59:01.0000] <Ms2ger>
TR/

[12:59:02.0000] <othermaciej>
what's "canvas ink"?

[13:00:00.0000] <Hixie>
othermaciej: ink. for paintings and stuff.

[13:05:00.0000] <AryehGregor>
Oh, phew, figured it out.

[13:46:00.0000] <AryehGregor>
Does anyone know where I can find version history for <http://dev.w3.org/csswg/css3-text/>?

[13:53:00.0000] <Ms2ger>
http://dev.w3.org/cvsweb/csswg/css3-text/

[13:53:01.0000] <AryehGregor>
Great, thanks.

[14:48:00.0000] <AryehGregor>
Hah, <sup> and <sub> don't use CSS even with styleWithCSS true.

[14:49:00.0000] <AryehGregor>
Fits my theory of the origins of styleWithCSS perfectly.

[14:49:01.0000] <AryehGregor>
In Gecko, anyway.

[14:50:00.0000] <AryehGregor>
In WebKit it does <span style="vertical-align: ...">, which is wrong because it doesn't reduce the size.

[15:20:00.0000] <kennyluck>
Which browser outputs <strong> and <em> for content editing? IE? So sad.

[15:21:00.0000] <AryehGregor>
IE and Opera.

[15:21:01.0000] <AryehGregor>
At least their more recent versions.

[15:21:02.0000] <AryehGregor>
It's possible this was motivated by the deprecation of <b> and <i> in some earlier HTML versions.  Not sure, it would help if I know when they started.

[15:22:00.0000] <AryehGregor>
I think IE originally might have output <b> and <i>.  Anyone have IE4 to test in?  :)

[15:22:01.0000] <AryehGregor>
(not that I'd have any idea how to write a test for IE4 even if I did have a copy handy)

[15:23:00.0000] <AryehGregor>
There are non-browser-based WYSIWYG editors that output <strong> and <em> for bold and italics, too.

[15:23:01.0000] <kennyluck>
<b> and <i> were never deprecated last time I checked HTML4.

[15:23:02.0000] <AryehGregor>
I've seen it.

[15:23:03.0000] <AryehGregor>
Hmm, right, but were they removed from XHTML 2 or something?

[15:23:04.0000] <AryehGregor>
I can't remember all these ridiculous obsolete decisions.

[15:24:00.0000] <kennyluck>
Yeah, I saw a BBC guideline for their site which says no <i> <b> <u> is allowed.

[15:24:01.0000] <AryehGregor>
http://www.w3.org/TR/xhtml2/mod-text.html#s_textmodule

[15:24:02.0000] <AryehGregor>
Don't you love the â¢ in the titles of the XHTML 1.1 and 2.0 specs?

[15:24:03.0000] <AryehGregor>
So classy.

[15:25:00.0000] <othermaciej>
they trademarked "XHTML" to try to prevent forking

[15:25:01.0000] <kennyluck>
Don't know what that means

[15:25:02.0000] <AryehGregor>
Don't know what what means?

[15:25:03.0000] <kennyluck>
Oh.

[15:26:00.0000] <AryehGregor>
Why couldn't try trademark HTML also?  They invented that too, or at least TBL did.

[15:26:01.0000] <kennyluck>
I can't believe XHTML was trademarked. I actually didn't think what â¢ is there for.

[15:26:02.0000] <AryehGregor>
Why couldn't they trademark HTML also?  They invented that too, or at least TBL did.

[15:27:00.0000] <AryehGregor>
http://www.trademarkia.com/xhtml-75636639.html

[15:27:01.0000] <AryehGregor>
It seems to be registered to some dude in California?

[15:27:02.0000] <AryehGregor>
Or possibly Norway.

[15:28:00.0000] <AryehGregor>
Looks like CERN trademarked HTML at one point: http://www.trademarkia.com/html-74719487.html

[15:28:01.0000] <Hixie>
they tried trademarking html, but they couldn't keep it for some reason or something

[15:29:00.0000] <othermaciej>
HTML was considered a generic term by then

[15:29:01.0000] <Hixie>
(that was one reason i called the spec "Web Applications 1.0" way back when)

[15:29:02.0000] <othermaciej>
or something

[15:30:00.0000] <AryehGregor>
Why would they care about forks, honestly?  If the browsers are forking, they're not going to keep them by suing them, and if anyone else is forking, they can just be ignored.

[15:30:01.0000] <AryehGregor>
Idiocy.

[15:30:02.0000] <Hixie>
beats me

[15:30:03.0000] <Hixie>
what's worse is that none of their attempts to stop forking have worked

[15:31:00.0000] <Hixie>
both ISO and WHATWG (opposite ends of the spectrum, really) have forked HTML successfully despite their best attempts at stopping it

[15:31:01.0000] <zewt>
solution to forking: make something good enough that people don't need to fork it

[15:31:02.0000] <Hixie>
yes!

[15:31:03.0000] <Hixie>
that's what i keep saying

[15:31:04.0000] <Hixie>
their continued fear imho is fear that they can't make something good enough

[15:32:00.0000] <Hixie>
in other news: people keep telling me UDP packets above the MTU will fail to transmit. Is that true? I thought they'd just get fragmented at the IP level, but would still make it through eventually, am I wrong?

[15:32:01.0000] <zewt>
heh you know

[15:32:02.0000] <zewt>
despite all the networking I've done I don't know the answer to that question

[15:32:03.0000] <zewt>
i'd expect the same thing, yet my intuition is also that it won't work

[15:33:00.0000] <AryehGregor>
Hixie, the people actually making the standards seem to not mind forking so much.  It's the Advisory Committee that voted down forking, right?

[15:33:01.0000] <Hixie>
realistically it's w3c staff and the paying members, yes

[15:33:02.0000] <zewt>
fear that someone will fork and no longer take their committee under advisement? heh

[15:33:03.0000] <Hixie>
(not all of either, but a plurality)

[15:33:04.0000] <AryehGregor>
Members pay a decent amount of money for the privilege of having a say in all these standards.  Unsurprising that they want to protect their investment.

[15:34:00.0000] <AryehGregor>
Likewise, W3C staff can be expected to want to protect their job and the work they've invested.

[15:34:01.0000] <AryehGregor>
I wouldn't call it fear.

[15:35:00.0000] <Hixie>
if they were confident they could make something good enough, they would not think of allowing forking as a risk to their investment

[15:35:01.0000] <AryehGregor>
But the people making the decision aren't the ones actually making the specs.  They have no control over spec quality.

[15:35:02.0000] <AryehGregor>
At best they have some indirect influence.

[15:35:03.0000] <Philip`>
If UDP fragmentation does work reliably, it still seems bad from the perspective of reliability, since dropping a single fragment will cause the whole message to be lost

[15:36:00.0000] <Philip`>
so the effect of random packet loss will be amplified significantly

[15:36:01.0000] <AryehGregor>
Fragmentation on the IP level certainly won't work in IPv6, right?

[15:36:02.0000] <Philip`>
/me has no idea whether it does work reliably in practice or if some/many routers are stupid and just drop packets, though

[15:36:03.0000] <Hixie>
AryehGregor: whether they influence it or not, the point is that they wouldn't fear for their investment if they were confidents the w3c's specs were good.

[15:36:04.0000] <Hixie>
Philip`: that's what i thought too

[15:36:05.0000] <AryehGregor>
And in IPv4 you want to avoid it because it's typically a big waste of resources, unless your packet size happens to be equal to or slightly under a multiple of the MTU.

[15:37:00.0000] <Hixie>
Philip`: but people seem to say it's worse than just less reliable

[15:37:01.0000] <AryehGregor>
Hixie, sure.

[15:37:02.0000] <AryehGregor>
Hixie, are you considering IPv6 here?

[15:37:03.0000] <Hixie>
both

[15:37:04.0000] <AryehGregor>
Oh, wait, I forgot.

[15:37:05.0000] <zewt>
well, many protocols don't have variable-size packets--you're more likely to depend on IP fragmentation if, for example, you have 1000-byte packets, which fit in most MTUs but not all

[15:37:06.0000] <AryehGregor>
IPv6 also transparently fragments packets, just it requires the sender to do it instead of the router, right?

[15:38:00.0000] <zewt>
that is, I think most of the time if you're expecting fragmentation to work, it's not for the normal case, but to work around the edge cases

[15:39:00.0000] <AryehGregor>
So speaking of MTUs, when are we going to get rid of Ethernet requirements that have been obsolete for decades and allow reasonable MTUs like 64 KB?  :)

[15:40:00.0000] <Philip`>
Message 3 on http://www.groupsrv.com/groups/view.php?c=computer&g=1804&id=42288&p=0 suggests some firewalls with stateful packet inspection drop fragmented packets (because they're too expensive to reconstruct)

[15:43:00.0000] <zewt>
FWIW: running netcat -u on a remote server, and nc -u < test.txt to it, it looks like packets larger than the MTU are not received

[15:43:01.0000] <zewt>
(set my MTU to 700 and tried sending a 900-byte packet a few times, never received; raised it back to 1500 and it works)


2011-03-26
[18:39:00.0000] <erlehmann>
âThe message's content type was not explicitly allowedâ

[18:44:00.0000] <erlehmann>
It would help to include which content types would be allowed. And no, I was not trying to send text/html.

[19:03:00.0000] <erlehmann>
seems multipart/mixed is not allowed. so much for PGP signatures.

[01:28:00.0000] <matjas>
As per HTML 4.01, the first occurrence of the character sequence </ (ETAGO or end-tag open delimiter) is treated as terminating the end of the <script> elementâs content: http://www.w3.org/TR/html4/types.html#h-6.2

[01:29:00.0000] <matjas>
Has this changed since?

[01:29:01.0000] <Ms2ger>
That has never been true

[01:29:02.0000] <Ms2ger>
(Like most of HTML4)

[01:29:03.0000] <matjas>
It may have since no browser seems to enforce it; the de facto standard seems to be </script: http://kangax.github.com/jstests/etago_delimiter_test/

[01:30:00.0000] <matjas>
Ms2ger: Do you know if it was excluded from HTML5^H?

[01:31:00.0000] <Ms2ger>
script parsing is an awful mess

[01:32:00.0000] <Ms2ger>
Try <script><!--<script></script>

[01:34:00.0000] <matjas>
Mind = blown

[01:49:00.0000] <hsivonen>
matjas: if you are trying to sanitize html, you need an html  parser

[01:49:01.0000] <hsivonen>
the tree builder is needed to tell apart html and svg scripts

[01:49:02.0000] <hsivonen>
which tokenize differently

[01:50:00.0000] <hsivonen>
Ms2ger: script parsing is a well-defined mess now!

[01:51:00.0000] <Ms2ger>
hsivonen, still an awful mess

[02:41:00.0000] <matjas>
hsivonen: Iâm not trying to do anything like that; just curious whatâs specced and what isnât

[02:41:01.0000] <matjas>
so, the </ isnât treated as terminating the end of the <script> elementâs content in any browser

[02:42:00.0000] <matjas>
but "</script" is

[02:42:01.0000] <matjas>
perhaps that should be standardized / included in the spec then

[02:47:00.0000] <Ms2ger>
It's all in the spec

[02:47:01.0000] <Peter->
http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#script-data-end-tag-open-state

[02:48:00.0000] <matjas>
Thatâs what I was looking for, thanks!

[02:51:00.0000] <hsivonen>
matjas: note that the string </script inside a script doesn't always go through that state

[02:52:00.0000] <hsivonen>
matjas: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#script-data-escaped-end-tag-open-state

[04:31:00.0000] <karlcow>
>Quoting standards is just stupid, when there's

[04:31:01.0000] <karlcow>
>two simple choices: "it works" or "it doesn't work because bugs happen".

[04:31:02.0000] <karlcow>
>Standards are paper. I use paper to wipe my butt every day. That's how much

[04:31:03.0000] <karlcow>
>that paper is worth.

[04:31:04.0000] <karlcow>
>Reality is what matters.

[04:31:05.0000] <karlcow>
â Linus Torvalds, https://bugzilla.redhat.com/show_bug.cgi?id=638477#c129

[05:04:00.0000] <ktoss>
any one use flexiejs here?

[07:39:00.0000] <MikeSmith>
anybody know any details about the Web browser that Baidu has supposedly developed?

[07:40:00.0000] <Ms2ger>
Not me, but I'm sure Fx is better :)

[07:44:00.0000] <MikeSmith>
what's Fx?

[07:44:01.0000] <MikeSmith>
Firefox?

[07:44:02.0000] <MikeSmith>
/me is listening to Invasion of the Reverb Snatchers by Bambi Molesters from Intensity! (â®â®â®â®â®)

[07:51:00.0000] <karlcow>
and for a depressing moment http://vimeo.com/21197696

[08:01:00.0000] <MikeSmith>
karlcow: I feel impressed rather then depressed

[08:01:01.0000] <MikeSmith>
/me wonders if gsnedders is around

[08:04:00.0000] <MikeSmith>
oh

[08:04:01.0000] <karlcow>
/me wonders if gsnedders still wears his make-up

[08:04:02.0000] <MikeSmith>
I got to the more depressing part

[08:05:00.0000] <MikeSmith>
/me is listening to Lands End by Laika & The Cosmonauts from Cosmopolis (â®â®â®â®â®)

[08:10:00.0000] <MikeSmith>
http://hacks.mozilla.org/2011/03/nocomply/ is nice

[08:13:00.0000] <erlehmann>
MikeSmith, Sputnik 2 was not designed to be retrievable, and Laika had always been intended to die. Depressed now?

[08:19:00.0000] <MikeSmith>
Laika died a hero and will remembered forever

[08:22:00.0000] <MikeSmith>
/me reaches the point in his macports reinstall where it's rebuilding atlasâ¦ whatever the hell atlas isâ¦ decides to check back in a few days to see if it's completed yet

[08:37:00.0000] <erlehmann>
MikeSmith, so you are saying â¦ Laika died to become a meme? 4chan is not amused.

[08:37:01.0000] <MikeSmith>
I'm sorry for 4chan

[08:39:00.0000] <MikeSmith>
ok, this is pretty interesting: http://www.sciencedaily.com/releases/2011/03/110325102008.htm

[08:39:01.0000] <MikeSmith>
"The many hundreds of scales, however, seem to possess a deeper commonality: if their tones are compared in a two- or three-dimensional way by means of a coordinate system, they form convex or star-convex structures."

[08:41:00.0000] <MikeSmith>
http://www.english.uva.nl/news/news.cfm/9DEDC76E-E021-4F6E-AE9F0A55E899FC22

[08:41:01.0000] <MikeSmith>
http://staff.science.uva.nl/~ahoningh/publicaties/convex_scales.pdf

[08:42:00.0000] <MikeSmith>
"investigating the humanities from a computational perspective"

[08:45:00.0000] <MikeSmith>
100% of traditional musical scales form a star-convex pattern

[08:47:00.0000] <MikeSmith>
it would be interesting to do the reverse -- construct something in a star-convex pattern and generate a scale from it and see what it sounds like

[08:51:00.0000] <karlcow>
about laika, well like millions of cows, chicken that we raise to die :) still yummy

[08:56:00.0000] <MikeSmith>
dogs taste pretty good too

[08:56:01.0000] <MikeSmith>
whales also

[08:58:00.0000] <karlcow>
dogs I do not know

[08:59:00.0000] <karlcow>
or maybe I do not know if I had already one

[09:03:00.0000] <karlcow>
http://pmuellr.github.com/weinre/ remote debugging coming to webkit like Opera Dragonfly

[09:05:00.0000] <MikeSmith>
yeah, Patrick been working on that for a while now, I think

[09:08:00.0000] <karlcow>
I wish scope was standardized and implemented everywhere, so you could use any tools for debugging any devices

[09:24:00.0000] <karlcow>
http://www.facebook.com/note.php?note_id=10150103900258920

[09:24:01.0000] <karlcow>
>To accomplish this, we had to engineer a system that could process over 20 billion events per day (200,000 events per second) with a lag of less than 30 seconds.

[09:50:00.0000] <matjas>
Okay, Iâm having some trouble understanding http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#script-data-end-tag-open-state and http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#script-data-escaped-end-tag-open-state

[09:50:01.0000] <matjas>
Can somebody translate it for me into human language? :)

[09:50:02.0000] <Ms2ger>
matjas, that's a sign of sanity

[09:51:00.0000] <matjas>
Specifically, Iâm wondering what happens when you use <script>document.write('<foo></foo>')</script> â is that alright as per that algorithm or not?

[09:51:01.0000] <Ms2ger>
What is alright?

[09:51:02.0000] <matjas>
The â</fooâ part

[09:52:00.0000] <Ms2ger>
What do you mean by alright?

[09:52:01.0000] <matjas>
Does it not trigger the end of the <script> element?

[09:52:02.0000] <matjas>
(Iâd assume it would not)

[09:52:03.0000] <zewt>
on a quick read, it's ignored because it's not an "appropriate end tag token", right?

[09:53:00.0000] <Ms2ger>
You can test in Fx4, latest Chrome or Opera's test build

[09:53:01.0000] <matjas>
Well it works fine there

[09:53:02.0000] <Ms2ger>
Well, they do what the spec requires

[09:53:03.0000] <matjas>
Their HTML5^H parsers follow the spec perfectly? :)

[09:53:04.0000] <matjas>
Good to know

[09:53:05.0000] <matjas>
HTML 4.01 said the character sequence â</â is treated as terminating the end of the <script> element

[09:54:00.0000] <matjas>
I know that was never really enforced/implemented by browsers

[09:54:01.0000] <Ms2ger>
HTML4 is like a cake

[09:54:02.0000] <Ms2ger>
It's a lie

[09:54:03.0000] <matjas>
:)

[09:54:04.0000] <matjas>
Okay, so it seems HTML5^H rectifies this (although I couldnât understand that from reading the spec)

[09:55:00.0000] <Ms2ger>
Our bus factor for the HTML parser is pretty low

[09:57:00.0000] <matjas>
So <script>document.write('<script></script>');alert(1)</script> shouldnât alert(1) as per HTML5^5

[09:57:01.0000] <matjas>
â Same in HTML 4.01

[09:58:00.0000] <matjas>
But <script>document.write('<div></div>');alert(42)</script> should alert(42) just fine

[09:58:01.0000] <matjas>
Even though HTML âCakeâ 4.01 said it shouldnât

[09:58:02.0000] <matjas>
(Tested and verified using Fx 4âs wonderful HTML5 parser)

[09:58:03.0000] <zewt>
why do people keep calling FF4 "Fx4"? heh

[09:59:00.0000] <zewt>
firefox = FF, it's waaaay too late to try to change that abbreviation

[09:59:01.0000] <matjas>
Iâve always used Fx

[09:59:02.0000] <zewt>
i've only seen it in like the last week

[09:59:03.0000] <matjas>
FF started to sound lame ever since the invention of Follow Friday

[09:59:04.0000] <matjas>
I know krijnhoetmer always uses Fx

[09:59:05.0000] <matjas>
/me blames him

[10:00:00.0000] <zewt>
"fx" is applied to so many countless things it's a terrible abbreviation, too

[10:00:01.0000] <zewt>
"FF", not nearly so much

[10:00:02.0000] <matjas>
The capital F makes it stand out IMHO

[10:05:00.0000] <Ms2ger>
Fx has always been the official abbreviation, afaik

[10:06:00.0000] <zewt>
nobody really gets to "pick" abbreviations; ultimately the language decides, and I've only seen FF, for many many years

[10:07:00.0000] <Ms2ger>
Not anymore :)

[10:07:01.0000] <zewt>
just was curious why suddenly I was seeing a few people going "Fx" in the last week or so--it's just confusing

[10:08:00.0000] <tw2113>
i think the version number helped out

[10:08:01.0000] <tw2113>
Fx4

[10:17:00.0000] <erlehmann>
â64-bit Cubic Flash debunks 32-bit AS WITCHCRAFT!â

[10:55:00.0000] <gsnedders>
karlcow: Well, apart from nail varnish, no.

[11:50:00.0000] <Yuhong>
"I know that was never really enforced/implemented by browsers"

[11:51:00.0000] <Yuhong>
FYI, this is another artifact of HTML being based on SGML.

[11:51:01.0000] <Yuhong>
HTML4, that is.

[11:52:00.0000] <Yuhong>
In fact, this artifact applies to all elements that was declared in HTML4 as being CDATA, including for example the XMP element too.

[11:57:00.0000] <Yuhong>
The history: while the earliest libwww did not parse HTML as SGML, DanC were going to transition HTML to being based on SGML in 1992.

[11:58:00.0000] <Yuhong>
But then came Mosaic which didn't parse HTML as SGML, and it got so popular that...

[12:03:00.0000] <jgraham>
/me wonders why gsnedders is still banging on about nail varnish

[12:47:00.0000] <gsnedders>
jgraham: because karlcow mentioned it!

[14:44:00.0000] <GPHemsley>
Are there any live use cases of @hidden? I'm having trouble understanding why the spec isn't self-contradictory about @hidden. What's the intended usage and what isn't?

[14:44:01.0000] <GPHemsley>
And what about the fact that browser implement @hidden simply by setting 'display: none;"?

[14:56:00.0000] <jgraham>
GPHemsley: The intended use case is for cases where you want something to be removed from all renderings of the page (inc. audio, etc.) because it is not part of the currently relevant content

[14:57:00.0000] <GPHemsley>
but what is the definition of "relevant content" that allows this while disallowing, e.g., a tabbed interface?

[15:00:00.0000] <jgraham>
The idea is that a tabbed interaface could be linearized so that it was all visible at once

[15:02:00.0000] <jgraham>
I'm not clear if this is really a useful distinction or not

[15:08:00.0000] <zewt>
are you saying that !hidden also implies audio elements are inactive? that's not clear to me from the spec--it says that hidden elements are still active

[15:08:01.0000] <jgraham>
No, I meant an audio presentation of the webpage e.g. via some AT

[15:09:00.0000] <zewt>
i've never been able to find any purpose to that attribute--that is, any reason to ever use it instead of display: none

[15:14:00.0000] <jgraham>
The theory is that you can always disable CSS without changing the meaning, but you can't remove @hidden without changing the meaning

[15:14:01.0000] <jgraham>
Like I say this may be a purely theoretical concern

[15:14:02.0000] <zewt>
that sounds like a theory that doesn't hold up in real world use

[15:15:00.0000] <jgraham>
It certainly isn't universially true that removing CSS leaves sites functional

[15:15:01.0000] <zewt>
eg. most nontrivial pages have display: none's that you can't simply disable--things tied to scripts and so on

[15:16:00.0000] <jgraham>
On the other hand one can argue that we should be trying to make the web more media-independent, not less

[15:18:00.0000] <zewt>
personally, rather than trying to make CSS purely presentational, which I think is entirely academic, it seems more useful to distinguish (at an authoring POV) between functional and presentational rules

[15:19:00.0000] <zewt>
just as my elements very often have functional class names (for scripts to detect) next to presentational ones (for CSS)

[15:25:00.0000] <GPHemsley>
so... would a multi-step installation process (e.g.) be a valid use case for @hidden?

[15:26:00.0000] <GPHemsley>
where all steps other than the one you're currently on are marked with @hidden

[15:26:01.0000] <Ms2ger>
I'd say yes

[15:28:00.0000] <GPHemsley>
interesting

[15:32:00.0000] <zewt>
i suppose the main use case is making pages not break in no-style mode, which is probably one of the few cases where functional CSS actually causes a problem

[15:32:01.0000] <GPHemsley>
ah; hmm

[15:32:02.0000] <zewt>
of course, the only time anyone does that is when a page's style is really, really bad, heh


2011-03-27
[03:23:00.0000] <IamTrying>
I wrote first my application in java Applet, and then i wrote it in Flash, and then i wrote it in javascript to flash object to system desktop. We have Html5 why not html5 allow us audio/video/device selection and full duplex? Its already everywhere in the browser supported.

[03:24:00.0000] <IamTrying>
The application in my html, works with flash player in full duplex.

[03:24:01.0000] <IamTrying>
Where my desktop application is in Lua/Java

[03:24:02.0000] <IamTrying>
Can we not have such already embeded in html5?

[03:43:00.0000] <IamTrying>
Site says: In more length: "HTML5" has at various times been used to refer to a wide variety of technologies, some of which originated in this document, and some of which have only ever been tangentially related.

[03:44:00.0000] <IamTrying>
SIP and H.323 is missing and full duplex is missing. But same thing is getting repeatedly used using Flash/Silverlight/JavaFX or Applet or Activex. We should have this in html5 already.


2011-03-28
[18:35:00.0000] <AryehGregor>
Whee, I just got WebKit to make a Range whose end offset is greater than the length of its end node.

[18:36:00.0000] <AryehGregor>
While IE makes a Range whose start and end node don't have a common ancestor.

[18:36:01.0000] <AryehGregor>
Nice.

[18:37:00.0000] <AryehGregor>
data:text/html,<!doctype html><body><script>var text = document.createTextNode("Abcdef"); var range = document.createRange(); range.setStart(text, 0); range.setEnd(text, 2); text.splitText(1); document.body.textContent = range.startContainer.data + range.startOffset + range.endContainer.data + range.endOffset;</script>

[18:37:01.0000] <AryehGregor>
Chrome 11 dev: A0A2

[18:38:00.0000] <AryehGregor>
IE 9: A0bcdef2

[18:52:00.0000] <roc>
nice testcase

[18:53:00.0000] <roc>
I wonder if you can trigger interesting bugs in Webkit by using that range

[18:53:01.0000] <AryehGregor>
Gecko just doesn't special-case splitText(), so it does A0A1.

[18:53:02.0000] <AryehGregor>
Which is bad overall, IMO, so I'm speccing WebKit's behavior here (but with corner cases correctly handled :) ).

[18:53:03.0000] <AryehGregor>
Yeah, I was wondering that too.

[18:54:00.0000] <AryehGregor>
Or in IE.

[18:54:01.0000] <roc>
so what do you think the correct answer is?

[18:54:02.0000] <AryehGregor>
In this case, I think Gecko is right.

[18:54:03.0000] <roc>
oh I see

[18:54:04.0000] <AryehGregor>
But in the normal case, where the text node isn't detached, it should be A0bcdef1.

[18:54:05.0000] <AryehGregor>
Because that's logically what the range is.

[18:54:06.0000] <roc>
yeah

[07:15:00.0000] <karlcow>
MikeSmith: is it the most recent? http://sideshowbarker.github.com/console-spec/

[07:16:00.0000] <karlcow>
still no editor for it?

[07:27:00.0000] <MikeSmith>
karlcow: yeah, that is the latest

[07:27:01.0000] <MikeSmith>
and no editor

[07:27:02.0000] <MikeSmith>
other than me

[07:27:03.0000] <karlcow>
MikeSmith: thanks

[08:33:00.0000] <funkie>
question.

[08:35:00.0000] <funkie>
I have my header set up and whatnot

[08:35:01.0000] <funkie>
using header and nav,

[08:35:02.0000] <funkie>
where the content goes, can I use a <section> tag?

[08:36:00.0000] <funkie>
it's not a complicated website, and the section tag here will be used to store and have all the info about the company in the different links of the website

[08:36:01.0000] <funkie>
is this correct use?

[08:36:02.0000] <funkie>
(I got direceted here by HTML5 for web designers by Jeremy keith

[08:36:03.0000] <funkie>
)

[08:37:00.0000] <jgraham>
Roughly speaking a <section> is a grouping of content under a <hx> heading

[08:38:00.0000] <jgraham>
So if each bit of content has a <hx> then <section> is indeed right

[08:39:00.0000] <funkie>
hx is header right?

[08:42:00.0000] <jgraham>
<h1> or <h2> or whatever

[09:14:00.0000] <karlcow>
html5 nytimes. Checked. http://www.nytimes.com/2011/03/27/business/27unboxed.html?_r=1&src=tptw&pagewanted=print

[10:39:00.0000] <foolip_>
huh, Hixie isn't here?

[10:47:00.0000] <karlcow>
Google has a limited notion of browser support http://www.google.com/support/profiles/bin/answer.py?answer=1151309

[11:25:00.0000] <hsivonen>
karlcow: :-( At least this time the outdated icon is the Firefox icon--not the Opera icon

[11:26:00.0000] <zewt>
it's pretty gross to see Google doing the exclusive-list-of-supported-browsers thing ... they should be setting a better example

[11:26:01.0000] <nimbupani>
ha google is a big monster now.

[11:26:02.0000] <nimbupani>
so many different teams in so many different directions.

[11:27:00.0000] <karlcow>
zewt, it is because the last paragraph about Interoperability and Open Web has been cut. It was after the 60 words limit.

[11:28:00.0000] <zewt>
heh, know what made me lose hope in sanity-of-google?

[11:28:01.0000] <zewt>
"Change background image"

[11:28:02.0000] <karlcow>
:)

[11:28:03.0000] <zewt>
clearly this is the single most important feature in all of Google

[12:57:00.0000] <foolip_>
Hixie, do you intend to write a CP for ISSUE-147?

[13:43:00.0000] <Hixie>
foolip_: if you could write one that would save me a lot of time, but if you don't i expect i'll get around to it at some point

[14:25:00.0000] <smaug____>
AryehGregor: are you proposing to change DOM Range

[14:25:01.0000] <smaug____>
or behavior of selection?

[14:25:02.0000] <AryehGregor>
smaug____, it would be pretty weird if the behavior of selections didn't follow from ranges, wouldn't it?

[14:25:03.0000] <AryehGregor>
I'm suggesting we change ranges, and selections will follow.

[14:26:00.0000] <AryehGregor>
(It's a change to DOM Range either way, if by "DOM Range" you mean the new version Ms2ger wrote and that I'm working on, and not the old DOM Level 2 Range spec)

[14:26:01.0000] <smaug____>
AryehGregor: I'm not sure I follow <p>{Foo<i>bar</i>} case

[14:26:02.0000] <AryehGregor>
Which part?

[14:26:03.0000] <smaug____>
why would you move nodes nodes one by one

[14:26:04.0000] <AryehGregor>
How else can you move them?

[14:27:00.0000] <smaug____>
extract all to documentfragment

[14:27:01.0000] <AryehGregor>
Interesting.

[14:27:02.0000] <AryehGregor>
That would destroy the range no matter what we do.  But you're just saying we can manually reconstruct it afterwards easily enough, right?

[14:27:03.0000] <smaug____>
and then insert the documenfragment to the right place

[14:28:00.0000] <smaug____>
destroy the range?

[14:28:01.0000] <smaug____>
why

[14:28:02.0000] <AryehGregor>
I mean, collapse it.

[14:29:00.0000] <smaug____>
hmm

[14:29:01.0000] <smaug____>
should <b> end up in the range

[14:29:02.0000] <smaug____>
or outside it

[14:29:03.0000] <AryehGregor>
Probably outside, if we assume that when the user starts typing it should replace the selection and should be bold.

[14:29:04.0000] <smaug____>
right

[14:30:00.0000] <AryehGregor>
Anyway, there are other cases where I need to mutate things.  Like for instance, if you bold here: <b>fo[o</b>bar] I change it to: <b>fo[obar]</b> preserving the original element.

[14:30:01.0000] <AryehGregor>
(Gecko does this too, IIRC, at least in some cases.)

[14:31:00.0000] <smaug____>
it would be, IMO, just a bit strange to special this in DOM Range

[14:31:01.0000] <smaug____>
but need to think about it some more

[14:31:02.0000] <AryehGregor>
You mean, to special-case it when a node is being moved to a more or less adjacent position?

[14:31:03.0000] <smaug____>
yes

[14:32:00.0000] <AryehGregor>
It actually seems very logical to me that you don't want to treat it like a totally different node in that case.  It naturally satisfies all of my execCommand() selection-mutation needs without any need for extra prose in the execCommand() spec.

[14:32:01.0000] <smaug____>
selection is different thing than just pure DOM range

[14:32:02.0000] <AryehGregor>
How so?  Selections are specced as just a list of Ranges.

[14:32:03.0000] <smaug____>
DOM Range spec may be bad, but at least it is quite consistent

[14:33:00.0000] <smaug____>
sure, once user has done a selection, it shows up as a range

[14:33:01.0000] <smaug____>
user, script, whatever

[14:34:00.0000] <AryehGregor>
But?

[14:35:00.0000] <smaug____>
browsers may modify ranges the way they need

[14:35:01.0000] <AryehGregor>
What do you mean?

[14:35:02.0000] <AryehGregor>
I know WebKit and Opera don't allow all Ranges to be part of Selections, but that's not what the spec says or what IE/Gecko do.

[14:35:03.0000] <smaug____>
I mean, in case of selection and execCommand, browsers could just handle range the way you want DOM range to work always

[14:36:00.0000] <smaug____>
but as I said, I need to think about this some more

[14:37:00.0000] <AryehGregor>
Why would you want ranges to work differently in other cases?  Are there applications of Range where the current model is more useful?

[14:37:01.0000] <AryehGregor>
(Actually, I'm not sure offhand what applications there are of Ranges at all, beyond editing-related stuff.)

[14:38:00.0000] <smaug____>
copy-paste at least

[14:38:01.0000] <smaug____>
d&d

[14:38:02.0000] <AryehGregor>
Is the current model more useful there, or are you just mentioning use-cases?

[14:38:03.0000] <smaug____>
although those are close to editing

[14:39:00.0000] <AryehGregor>
Copy-paste is definitely Selection-related.

[14:39:01.0000] <AryehGregor>
Anyway, I wouldn't be totally against special-casing Selections here, but I don't see why we'd want to.

[14:40:00.0000] <smaug____>
I'm just worried about adding a bit strange special case to DOM Range, which otherwise is pretty consistently defined

[14:41:00.0000] <smaug____>
AryehGregor: but as I said, need to think this some more

[14:41:01.0000] <AryehGregor>
There are already some special cases for other DOM mutations, like insertData() and deleteData() (which behave differently from setting the data attribute).

[14:41:02.0000] <AryehGregor>
But anyway, go ahead and think about it.

[14:42:00.0000] <AryehGregor>
I'm happy to hear feedback.

[14:51:00.0000] <smaug____>
AryehGregor: what do you mean with insertdeleteData() and data setting? what is the special case there?

[14:52:00.0000] <smaug____>
I may have forgotten something about DOM Ranges :)

[14:52:01.0000] <AryehGregor>
Well, you could argue it's not actually a special case, I guess.

[14:52:02.0000] <AryehGregor>
But, e.g., node.appendData("foo") behaves differently from node.data += "foo" with respect to Range mutation.

[14:52:03.0000] <AryehGregor>
The DOM Level 2 Range is very vague about it.

[14:53:00.0000] <AryehGregor>
The spec I've written so far to precisely define how CharacterData nodes should behave when their data is changed is probably about as long as it would take to define my proposed scheme for node insertions/deletions.

[14:54:00.0000] <smaug____>
oh, but node.data += "foo" replaces the whole value with new one

[14:54:01.0000] <AryehGregor>
Yeah, so you could say it's not logically a special case, but in the spec it has to be a special case.

[14:54:02.0000] <AryehGregor>
At least if you're precise.

[14:55:00.0000] <smaug____>
I would expect node.data += work differently to appendData

[14:55:01.0000] <smaug____>
I wonder what browsers do

[14:55:02.0000] <AryehGregor>
It works differently.

[14:55:03.0000] <AryehGregor>
(I'm writing tests for it right now to go with my spec text, should be ready by tomorrow sometime)

[14:56:00.0000] <AryehGregor>
My current philosophy is that we should match what's the most logical even if it's more complicated, but you seem to be not entirely happy with that for Ranges.

[14:56:01.0000] <AryehGregor>
What do you feel about splitText()?

[14:56:02.0000] <AryehGregor>
If you have a text node like "Ab[cd]ef" and do splitText(3), what happens to the range?

[14:57:00.0000] <AryehGregor>
"Ab[c]" "def" is what the preexisting specs would suggest, and what Gecko and Opera do.  But "Ab[c" "d]ef" would make more sense, and is what WebKit does.

[14:57:01.0000] <smaug____>
I don't know what is not logical in DOM Range

[14:58:00.0000] <smaug____>
oh, there Ab[c is the right one

[14:58:01.0000] <AryehGregor>
By "logical" I mean "what people would expect in the specific case", not "obeys some kind of consistent internal logic".

[14:58:02.0000] <AryehGregor>
Well, that means we have to special-case splitText().  On general principle, you'd say that some data was deleted from the first node and an unrelated new node was inserted, so the end of the range is lost, right?

[14:58:03.0000] <AryehGregor>
(which is what Gecko does right now)

[14:59:00.0000] <smaug____>
right

[14:59:01.0000] <smaug____>
what is the special case?

[14:59:02.0000] <AryehGregor>
http://aryeh.name/tmp/dom-range.html#range-behavior-under-document-mutation

[14:59:03.0000] <AryehGregor>
There's no way to do it that I see except to say "When splitText() is run, take these special steps."

[14:59:04.0000] <smaug____>
just a second... I want to test data += handling in gecko

[15:00:00.0000] <AryehGregor>
Setting data just resets the offset to 0 in all cases that I tested.

[15:00:01.0000] <AryehGregor>
In both Gecko and WebKit.

[15:00:02.0000] <smaug____>
good

[15:00:03.0000] <smaug____>
that is what I was expecting

[15:00:04.0000] <AryehGregor>
In Opera it sets start offsets to 0 and end offsets to the new data's length, and in IE it does somewhat weird stuff.

[15:00:05.0000] <AryehGregor>
(like in some cases changing the start/end nodes of the range)

[15:01:00.0000] <AryehGregor>
Relatedly, if you have something like {Foobar} (start/end containers are the parent of the text node, not the text node itself) and do splitText(3), all browsers produce {Foo}bar.

[15:01:01.0000] <smaug____>
surprising that Webkit resets offsets in that case, but it follows some other logic with insertNode ...

[15:02:00.0000] <roc>
it would be kinda cool if += behaved like append() but expressing that in WebIDL would not be easy

[15:02:01.0000] <AryehGregor>
I.e., they keep the boundary point offset intact, so it's now logically in the middle of the split string, instead of advancing it by one.

[15:02:02.0000] <smaug____>
well, += is part of JS

[15:03:00.0000] <AryehGregor>
It was surprising to me as an author that document.innerHTML += stuff; would actually wipe out everything in the document and recreate it from scratch, instead of appending to it in-place.

[15:04:00.0000] <AryehGregor>
Can built-in stuff override the semantics of += separately from =?  Like how in C++ you can overload different assignment operators differently?

[15:04:01.0000] <smaug____>
I don't think it is possible to override +=

[15:04:02.0000] <smaug____>
otherwise that would have been done in browsers

[15:04:03.0000] <smaug____>
innerHTML += shows up in *many* performance tests

[15:05:00.0000] <AryehGregor>
Well, you could get ES changed to allow it, right?

[15:06:00.0000] <smaug____>
innerHTML += may have other problems too, since you really need to reparse the whole result, I think

[15:07:00.0000] <roc>
probably the easiest way to "fix" += would be to have a special case for setting .data based on whether the old value is a prefix of the new value

[15:07:01.0000] <roc>
ditto for innerHTML

[15:07:02.0000] <AryehGregor>
Is that actually true?  The contents of innerHTML are serialized from a DOM, so they're going to have all end tags closed and so on.

[15:07:03.0000] <roc>
but that could trip people up too

[15:07:04.0000] <AryehGregor>
Interesting.  You could also special-case suffixing that way.

[15:07:05.0000] <AryehGregor>
Not insertData(), though.

[15:07:06.0000] <AryehGregor>
(currently the spec special-cases setting data to the exact same thing, matching WebKit but seemingly no one else)

[15:08:00.0000] <AryehGregor>
(but if implementers would prefer fewer special cases in Range for whatever reason, I could simplify it)

[15:08:01.0000] <smaug____>
what does the spec say about that?

[15:08:02.0000] <AryehGregor>
About what?

[15:08:03.0000] <smaug____>
setting .data to the exact same thing

[15:08:04.0000] <roc>
I mean if you just write "foo.data = str;" it might be bad for that to behave differently if "str" is accidentally an extension of the old value

[15:08:05.0000] <AryehGregor>
The spec I just wrote in the last three hours or so says that setting .data to the exact same thing shouldn't change any Ranges.

[15:08:06.0000] <smaug____>
um

[15:08:07.0000] <AryehGregor>
There's no spec for it before that, I don't think.

[15:09:00.0000] <smaug____>
that is possible

[15:09:01.0000] <AryehGregor>
DOM Level 2 Range doesn't say how you should handle it.  You could conjecture that setting data should be like removing all the data and then adding the new data.

[15:10:00.0000] <AryehGregor>
But you could also conjecture that setting it to the current content should be special-cased.

[15:10:01.0000] <AryehGregor>
It doesn't say.

[15:11:00.0000] <smaug____>
have you specced insertNode?

[15:11:01.0000] <AryehGregor>
No, not yet.

[15:11:02.0000] <smaug____>
just curious

[15:11:03.0000] <AryehGregor>
Are there any tricky bits in it?

[15:11:04.0000] <smaug____>
since Acid3 allows two different behaviors for it

[15:11:05.0000] <AryehGregor>
Interesting.

[15:11:06.0000] <smaug____>
the one DOM 2 Range specs

[15:11:07.0000] <smaug____>
and then one Webkit implements

[15:11:08.0000] <AryehGregor>
Heh.

[15:11:09.0000] <AryehGregor>
Well, if I spec it, I'll write tests that only allow one behavior.  :)

[15:12:00.0000] <smaug____>
(and after Acid3 Opera change their behavior from spec to webkit)

[15:12:01.0000] <smaug____>
s/change/changed/

[15:12:02.0000] <AryehGregor>
What's the difference?

[15:12:03.0000] <smaug____>
IIRC, whether or not change collapsed range

[15:13:00.0000] <smaug____>
(I think Opera changed their behavior because for some time Acid3 didn't allow what the spec says)

[15:29:00.0000] <foolip_>
Hixie, if I write it, it will be a zero-edit proposal, is that what you wanted as well?

[15:33:00.0000] <Hixie>
foolip_: i don't know what i want since i'm still trying to understand the issue (see the e-mails i cited in my mail to sam that i'm waiting for replies on), and i haven't done the testing to see what browsers do

[15:33:01.0000] <Hixie>
foolip_: but a no-change proposal is certainly a subset of what i'd propose

[15:33:02.0000] <Hixie>
foolip_: so it works for me

[15:34:00.0000] <foolip_>
Hixie, ok, I'll write/send it tomorrow morning

[15:34:01.0000] <Hixie>
thanks dude

[15:34:02.0000] <Hixie>
much appreciated

[15:34:03.0000] <foolip_>
np, I just don't want to implement something weird for which I don't understand the use case


2011-03-29
[17:42:00.0000] <AryehGregor>
roc, random question: about what percentage of your time do you spend reviewing other people's code, versus writing your own?

[17:47:00.0000] <AryehGregor>
Also volkmar ^^

[17:47:01.0000] <AryehGregor>
/me is having another argument with Wikimedia managers about the value of reviewing volunteer contributions promptly

[17:58:00.0000] <volkmar>
AryehGregor: i'm not a reviewer

[17:58:01.0000] <AryehGregor>
Oh, well, that answers that.  :)

[17:58:02.0000] <volkmar>
AryehGregor: you should ask bz and smaug maybe (and roc)

[17:58:03.0000] <AryehGregor>
I was going to ask smaug, but he left the channel.

[17:58:04.0000] <AryehGregor>
No big deal.

[18:00:00.0000] <AryehGregor>
We have a Wikimedia manager who's suggesting that if we had paid developers make sure to review all submitted patches promptly, they would be there (quote) "purely in a subservient role of approving/rejecting code as it comes in".  http://lists.wikimedia.org/pipermail/wikitech-l/2011-March/052524.html

[18:04:00.0000] <volkmar>
AryehGregor: i've never heard this kind of complaints at Mozilla

[18:04:01.0000] <AryehGregor>
Nor have I.

[18:04:02.0000] <AryehGregor>
Nor at any other open-source project in the world.

[18:04:03.0000] <volkmar>
even if senior devs spend an important part of their time doing reviews

[18:05:00.0000] <AryehGregor>
It was influenced by the fact that there was a huge code review backlog and a lot of paid developers had to work full-time to clear it.  But they only had to do it full-time because they let it accumulate for so long . . . like a year or so.

[18:07:00.0000] <volkmar>
eh, i'm managing my emails the same way :)

[18:08:00.0000] <AryehGregor>
I use filters to keep everything manageable.

[18:08:01.0000] <AryehGregor>
Out of the last 50 e-mails in "All Mail" in Gmail, eight are read.

[18:09:00.0000] <AryehGregor>
Five I haven't read yet because they're in my spec inbox and I didn't go through that today, and all the rest I'm never going to see.

[18:28:00.0000] <gsnedders>
/me pushes tree-walker API change to html5lib, finally changing it to something he is happening with

[19:25:00.0000] <roc>
AryehGregor: I spend hours every day reviewing code

[19:25:01.0000] <roc>
some days as little as one hour

[19:25:02.0000] <roc>
sometimes it's a drag

[19:25:03.0000] <roc>
but it's totally worth it

[19:26:00.0000] <roc>
and yes, it's totally essential to attracting and retaining contributors to review their patches promptly

[19:26:01.0000] <roc>
so for me it's almost always higher priority than writing my own code

[19:32:00.0000] <roc>
although we're not perfect; patches slip through the cracks, some developers are not as responsive as they should be, etc

[20:25:00.0000] <othermaciej>
AryehGregor: that person sounds clueless about open source and perhaps even clueless about software

[20:25:01.0000] <othermaciej>
code review is power

[20:27:00.0000] <othermaciej>
AryehGregor: though, looking at the email, perhaps things ar different in a CTR model

[20:30:00.0000] <othermaciej>
AryehGregor: I also disagree on this: "Reviewing code normally takes *much* less time than writing it."

[20:31:00.0000] <othermaciej>
sometimes reviewing code properly takes more time than writing it

[20:39:00.0000] <roc>
depends on whether it was written properly :-)

[01:21:00.0000] <zcorpan>
hello everyone

[01:26:00.0000] <jgraham>
zcorpan: Hej!

[01:29:00.0000] <zcorpan>
apart from being publication time soon, what has happened?

[01:31:00.0000] <jgraham>
I want to tell you that we usurped Hixie and instated gsnedders as editor. But I would be lying.

[01:31:01.0000] <jgraham>
Think how awesome that would be though

[01:31:02.0000] <zcorpan>
heh

[01:31:03.0000] <jgraham>
We could get an emo version of the spec done out in black

[01:32:00.0000] <zcorpan>
i take that as nothing in particular has happened

[01:32:01.0000] <jgraham>
I can't remember anything, but there were some Decisions and stuff

[01:33:00.0000] <jgraham>
I asusme you were here when <device> died?

[01:33:01.0000] <jgraham>
Oh and Hixie had some proposal for multi-track media stuff

[01:33:02.0000] <jgraham>
myabe you missed that?

[01:37:00.0000] <zcorpan>
yes and yes

[01:37:01.0000] <zcorpan>
thanks

[02:23:00.0000] <zcorpan>
where's the execCommand spec?

[02:25:00.0000] <zcorpan>
http://aryeh.name/spec/editcommands/editcommands.html

[02:25:01.0000] <zcorpan>
AryehGregor: please spec queryCommandSupported

[04:15:00.0000] <zcorpan>
does html5lib testsuite have a test for <device> not being special?

[04:19:00.0000] <jgraham>
Not sure

[04:45:00.0000] <zcorpan>
shelley++ for weeklies

[05:41:00.0000] <zcorpan>
sow how would you use custom controls with the MediaController thing?

[05:46:00.0000] <zcorpan>
oh you just use the API for the MediaController instead of for one of the slaves

[05:59:00.0000] <MikeSmith>
hsivonen: when you're around, I wanted to ask if it's OK with you if I go ahead and check in the patch submitted for http://bugzilla.validator.nu/show_bug.cgi?id=818

[06:03:00.0000] <hsivonen>
MikeSmith: OK

[06:03:01.0000] <MikeSmith>
thanks

[07:18:00.0000] <zcorpan>
hmm. i have opera mobile 11 on android 2.3.3, HTC Gracia which is ARM6. webm.html5.org says it doesn't support WebM

[07:29:00.0000] <hsivonen>
zcorpan: what does http://webm.html5.org/debug/ say?

[07:29:01.0000] <hsivonen>
zcorpan: I may have introduced a bug when I tried to blacklist Opera Mobile on Symbian

[07:38:00.0000] <zcorpan>
hsivonen: it says Android 2.2, (empty), (empty)

[07:39:00.0000] <zcorpan>
shows a video element but doesn't play anything

[07:39:01.0000] <zcorpan>
i thought i had upgraded to 2.3.3

[07:39:02.0000] <hsivonen>
zcorpan: oh so Opera Mobile now reveals the Android version. interesting

[07:40:00.0000] <hsivonen>
zcorpan: could you paste the entire UA string, please?

[07:42:00.0000] <zcorpan>
sent by email

[07:43:00.0000] <hsivonen>
zcorpan: thanks

[07:44:00.0000] <zcorpan>
it seems i still have android 2.2, but no new updates are available

[07:45:00.0000] <AryehGregor>
othermaciej, I agree that sometimes reviewing code properly takes more time than writing it, but normally it takes much less time.  In particular, well-written patches should include enough comments, documentation, and explanation that they're reasonably easy to review, and if they don't, the reviewer can ask for them.

[07:45:01.0000] <AryehGregor>
In most cases.  You'll still always have some hard-to-review patches, in the end.

[07:45:02.0000] <AryehGregor>
(you probably have a lot more experience reviewing patches than I do, though, and maybe you review them more thoroughly)

[07:46:00.0000] <AryehGregor>
I do think that in commit-then-review, reviewers have a lot less power than in review-then-commit.

[07:46:01.0000] <hsivonen>
zcorpan: what does the ADR number mean in the UA string?

[07:46:02.0000] <jgraham>
Is there any software project that uses CtR?

[07:46:03.0000] <AryehGregor>
zcorpan, I'm going to spec everything execCommand()-related eventually, but there's loads to do.  The only thing I'm really working on speccing right now is the algorithm for applying inline markup commands.

[07:46:04.0000] <zcorpan>
hsivonen: no idea

[07:47:00.0000] <AryehGregor>
jgraham, MediaWiki, for one.

[07:47:01.0000] <AryehGregor>
It's probably a bad idea, and most of us seem to be in favor of switching to RtC.

[07:47:02.0000] <zcorpan>
AryehGregor: cool

[07:47:03.0000] <jgraham>
AryehGregor: Well that seems like a bad idea

[07:47:04.0000] <AryehGregor>
zcorpan, I should say, I'm going to do it if time allows.  I still have a few months left, though, so it's likely that I'll be able to finish it.

[07:47:05.0000] <jgraham>
(using CtR)

[07:48:00.0000] <AryehGregor>
jgraham, yes, it is, which is why a lot of us want to change it.

[07:52:00.0000] <AryehGregor>
jgraham, if you count projects that have a status of "commit access" but no formal review process as CtR, then I suspect it's more popular overall than RtC.

[07:52:01.0000] <AryehGregor>
Although big, prominent, well-run projects tend to use RtC.

[07:54:00.0000] <hsivonen>
zcorpan: I refined the Android advice that webm.html5.org gives

[07:54:01.0000] <jgraham>
AryehGregor: I think "we don't have review" is a bit different to CtR

[07:54:02.0000] <AryehGregor>
Maybe, yeah.

[07:54:03.0000] <hsivonen>
it still sucks that Firefox is tied to CPU and Opera to the Android version

[07:54:04.0000] <AryehGregor>
You'll still usually have some sort of informal review in such cases, though.

[07:54:05.0000] <hsivonen>
I wonder how many Android users know what CPU their device has :-(

[07:55:00.0000] <jgraham>
e.g. html5lib doesn't really have review. Except that I have never committed a patch from a non-core-contributer without reviewing it first

[07:55:01.0000] <jgraham>
For single person projects the concept of review doesn't even make sense

[07:56:00.0000] <hsivonen>
I'd love to know if the default browser on Android 2.3.3 supports WebM and if Opera Mobile 11 on Android >= 2.3 but < 2.3.3 supports WebM

[08:02:00.0000] <hsivonen>
for additional Android fragmentation FAIL, HTC doesn't list the Android version or the CPU instruction set in its product specs

[08:03:00.0000] <Rik`>
hsivonen: I tried to update my android device but it requires a SIM cardâ¦

[08:04:00.0000] <hsivonen>
Rik`: so the device works without a SIM in general but doesn't update without a SIM?

[08:04:01.0000] <Rik`>
yes

[08:04:02.0000] <Rik`>
I'm using it on wifi all the time in the office for testing but never as a phone

[08:04:03.0000] <hsivonen>
is this some user-hostile mechanism that allows updates to be blocked by operator?

[08:04:04.0000] <Rik`>
might be

[08:05:00.0000] <hsivonen>
because otherwise, people with hostile operators could just take out the SIM and upgrade over wifi

[08:05:01.0000] <hsivonen>
the mobile business is so sad

[08:06:00.0000] <Rik`>
as someone reminded recently, home ISP was bad 10 years ago

[08:06:01.0000] <hsivonen>
even Apple, the supposed savior of users from operator hostility, reportedly requires partner operators to impose data transfer caps in order sell iPads

[08:06:02.0000] <hsivonen>
that's so crazily bizarre.

[08:07:00.0000] <Rik`>
like you could only use the ISP modem, you couldn't use more than one machine behind the modem, etc

[08:07:01.0000] <hsivonen>
maybe they want their product offering to suck everywhere as much as it sucks in the U.S. or something

[08:07:02.0000] <hsivonen>
Rik`: in France? it wasn't like that in Finland in 1995

[08:08:00.0000] <Rik`>
hsivonen: yes

[08:08:01.0000] <Rik`>
they weren't enforcing the "one machine" rule a lot, but it was in the contract

[08:09:00.0000] <Rik`>
and the plans were limited in time, only 10/20/50 hours a month

[08:11:00.0000] <bfrohs>
Rik`: It was the same way in the US back then :(

[08:12:00.0000] <Rik`>
hopefully one ISP was aggressive enough to change a lot of those rules and we now have one of the cheapest internet access

[08:12:01.0000] <Rik`>
and this ISP (Iliad/Free) should launch mobile plans next year, hopefully changing the market in the same way

[08:51:00.0000] <volkmar>
is there a reason to use NodeList instead of HTMLCollection except when we might have non-elements in the list?

[10:03:00.0000] <aho>
background-image:url(foo.svg#bar) <- ff, chrome, and opera discard the fragment. is it supposed to be this way?

[10:04:00.0000] <aho>
would allow awesome svg spriting otherwise :I

[10:05:00.0000] <jgraham>
aho: Pure guess: does the # need to be escaped?

[10:05:01.0000] <wilhelm>
Indeed. But who needs sprites when we have data URIs? :P

[10:07:00.0000] <aho>
oh lol

[10:07:01.0000] <aho>
it actually works in firefox

[10:07:02.0000] <aho>
:)

[10:08:00.0000] <aho>
unescaped, that is

[10:08:01.0000] <aho>
replacing it with %35 (right one?) doesn't seem to help with chrome and opera

[10:09:00.0000] <zewt>
wouldn't escaping it be explicitly making it *not* a fragment, but part of the filename?

[10:10:00.0000] <jgraham>
Right, I didn't mean % escaping

[10:11:00.0000] <aho>
lemme upload my test thingy

[10:12:00.0000] <aho>
http://kaioa.com/k/test/svgsprites/index.html

[10:12:01.0000] <aho>
http://kaioa.com/k/test/svgsprites/svgsprites.svg <- view source

[10:13:00.0000] <jgraham>
Escaping is wrong; # should work fine

[10:14:00.0000] <aho>
<style> svg>g{display:none}...</style> <- having it like that in the svg is fine, right?

[10:14:01.0000] <aho>
or do i need cdata stuff there?

[10:16:00.0000] <aho>
mmh nop... adding cdata doesnt change anything

[10:16:01.0000] <aho>
still works in ff, still doesnt work elsewhere

[10:16:02.0000] <aho>
anyone got ie9? :>

[10:18:00.0000] <tomasf>
aho: no go in IE 9

[10:18:01.0000] <aho>
kay. ty. :)

[10:18:02.0000] <aho>
wilhelm, ye, data uris work. however, i think this looks a bit nicer and it's easier to automate

[10:19:00.0000] <aho>
background-image:url(svgsprites.svg#square); <- e.g. i can tell that this is some square thing

[10:21:00.0000] <aho>
soooo... is it a bug that it works in firefox or are the other browsers faulty? :)

[10:29:00.0000] <CvP>
[aho] what do you need?

[10:30:00.0000] <aho>
fame and money, i guess

[10:30:01.0000] <CvP>
/me flames all aho's money.

[10:30:02.0000] <aho>
http://kaioa.com/k/test/svgsprites/index.html

[10:30:03.0000] <aho>
works with firefox

[10:30:04.0000] <aho>
but i'm not really sure if this should work or not

[10:30:05.0000] <aho>
it doesnt work with any other browser

[10:31:00.0000] <CvP>
i can see square, large dot and cross

[10:31:01.0000] <CvP>
in ie9

[10:32:00.0000] <CvP>
it doesn't owrk in chrome dev

[10:32:01.0000] <CvP>
works just fine in ie9 and latest minefield

[10:33:00.0000] <aho>
tomasf, can you try it again in ie9?

[10:33:01.0000] <CvP>
does not work on opera 11.01

[10:33:02.0000] <aho>
ie9 probably needs that cdata stuff

[10:34:00.0000] <nimbupani>
yeah i am pretty surprised it doesnt work on opera aho

[10:34:01.0000] <aho>
me too

[10:34:02.0000] <aho>
:)

[10:34:03.0000] <tomasf>
aho: sorry! I had IE 7 mode turned on. it does work :)

[10:34:04.0000] <aho>
ah :)

[10:35:00.0000] <aho>
zooming is weird with ff4

[10:35:01.0000] <aho>
the repeated ones behave like bitmaps (pixelated/blurry) while the no-repeat ones (spans at the bottom) scale nicely

[10:36:00.0000] <CvP>
lol

[10:36:01.0000] <CvP>
now that i have zoomed it in minefield

[10:36:02.0000] <CvP>
i remember this picture

[10:36:03.0000] <CvP>
seeing somewhere before

[10:37:00.0000] <aho>
triangle is missing

[10:37:01.0000] <aho>
:>

[10:37:02.0000] <nimbupani>
umm aho

[10:38:00.0000] <nimbupani>
why do you have display: none in ur svg?

[10:38:01.0000] <aho>
why not?

[10:38:02.0000] <aho>
well, the big idea is to hide all those groups

[10:38:03.0000] <aho>
and then show them via the :target pseudo class thingy

[10:38:04.0000] <nimbupani>
but everything is hidden :|

[10:38:05.0000] <nimbupani>
then how will it work as bg?

[10:38:06.0000] <aho>
unless targeted, yes

[10:39:00.0000] <aho>
http://kaioa.com/k/test/svgsprites/svgsprites.svg#dot

[10:39:01.0000] <aho>
http://kaioa.com/k/test/svgsprites/svgsprites.svg#square

[10:39:02.0000] <aho>
see? (works fine with opera)

[10:39:03.0000] <nimbupani>
oh i see

[10:39:04.0000] <aho>
:)

[10:39:05.0000] <nimbupani>
thats what the sprites thing is about :)

[10:42:00.0000] <nimbupani>
aha aho something about #dot and #square is not being detected by Opera.

[10:43:00.0000] <aho>
ye, the fragments don't show up in dragonfly

[10:43:01.0000] <nimbupani>
yeah thats what. i am filing a bug as we speak :)

[10:44:00.0000] <aho>
ty :)

[10:48:00.0000] <aho>
i really should have tried this sooner... had this idea about 2-3 years ago :>

[10:49:00.0000] <nimbupani>
its a pretty neat idea!

[10:49:01.0000] <aho>
oct 2007... actually :)

[10:49:02.0000] <nimbupani>
we could combine this with fonts

[10:50:00.0000] <aho>
heh

[10:50:01.0000] <nimbupani>
and all we need is a single SVG file ;)

[10:50:02.0000] <jgraham>
TabAtkins: I think the cynical answer to that is "yes", and the very cynical answer is "no"

[10:54:00.0000] <jgraham>
If you don't add the word "formal" the chairs can ignore what you say because it doesn't fall under Process. If you do add the word "formal" than the chairs have to pass it on to TimBL and I imagine you share the same reckoning that I do of the chance of him upholding an objection to remove URI-based indirection

[10:58:00.0000] <hasather>
nimbupani: did you file a bug? Can you CC me?

[10:58:01.0000] <hasather>
nimbupani: CC davidh that is

[11:01:00.0000] <nimbupani>
hasather: oh haha hai david :)

[11:01:01.0000] <nimbupani>
yes I will ASAP

[11:01:02.0000] <hasather>
nimbupani: Hey! And great :)

[11:11:00.0000] <aho>
heh... odd

[11:11:01.0000] <aho>
firefox4 requests the svg 3 times

[11:12:00.0000] <nimbupani>
:|

[11:13:00.0000] <aho>
it really shouldn't do that :]

[11:14:00.0000] <aho>
in the net panel these requests actually do show up as svgsprites.svg#dot, svgsprites.svg#square, and svgsprites.svg#x

[11:14:01.0000] <aho>
i also cross-checked with fiddler

[11:14:02.0000] <aho>
there are indeed 3 requests to svgsprites.svg

[11:20:00.0000] <aho>
kay... those pointless requests can be suppressed with far future expires headers

[11:20:01.0000] <aho>
http://kaioa.com/k/test/svgsprites2/index.html <- only one request

[11:21:00.0000] <AryehGregor>
Hixie, so, can I write an objection on Google's time to your CP in conforming-u?  0:)

[11:26:00.0000] <hsivonen>
/me wonders if gruber is going to write about Firefox 4 now that there's a "no Flash" angle

[11:26:01.0000] <AryehGregor>
What "no Flash" angle?

[11:27:00.0000] <Ms2ger>
hsivonen, "Apple did it first"?

[11:27:01.0000] <hsivonen>
AryehGregor: Firefox 4 on Android doesn't support Flash

[11:27:02.0000] <AryehGregor>
Oh, interesting.

[11:27:03.0000] <hsivonen>
maybe that applies to Maemo, too

[11:28:00.0000] <AryehGregor>
Is that for ideological reasons or practical ones?

[11:28:01.0000] <hsivonen>
AryehGregor: practical

[11:28:02.0000] <AryehGregor>
Ah, okay.

[11:29:00.0000] <hsivonen>
though I expect Apple's reasons to be practical, too

[11:35:00.0000] <Smylers>
jgraham: So "formal" is to "objection" as "sudo" is to "make me a sandwich"?

[11:35:01.0000] <aho>
nimbupani, fyi suppressing the pointless requests with far future expires headers did work :)

[11:36:00.0000] <aho>
http://kaioa.com/k/test/svgsprites2/index.html

[11:36:01.0000] <nimbupani>
ah sweet aho

[11:36:02.0000] <nimbupani>
you should like blog about it :)

[11:36:03.0000] <nimbupani>
its a technique worth implementing once browser support is all fixed :)

[11:36:04.0000] <aho>
yeaaaa... there are about a dozen things i should blog about :I

[11:37:00.0000] <aho>
maybe next weekend .)

[11:38:00.0000] <nimbupani>
:)

[11:41:00.0000] <Hixie>
AryehGregor: if your objection is something substantial that hasn't already been debunked, sure

[11:42:00.0000] <AryehGregor>
Hixie, you probably think all my objections are groundless and have been debunked.  Doesn't really matter, I'll do it on my own time.

[11:42:01.0000] <Hixie>
k :-)

[11:44:00.0000] <hober>
Smylers: yes

[12:46:00.0000] <AryehGregor>
Hixie, could you please set "X-XSS-Protection: 0" for the Live DOM Viewer?  IE's XSS filter is really interfering with my development work.  http://blogs.msdn.com/b/ieinternals/archive/2011/01/31/controlling-the-internet-explorer-xss-filter-with-the-x-xss-protection-http-header.aspx

[12:48:00.0000] <Hixie>
file a bug with microsoft

[12:48:01.0000] <AryehGregor>
Hixie, . . .

[12:49:00.0000] <Hixie>
i'm not adding a flag to make a browser follow the specs when they should just follow the specs in the first place

[12:49:01.0000] <Hixie>
(especially for something as dumb as this)

[12:49:02.0000] <AryehGregor>
How is this not following the specs?  Other browsers have heuristic XSS filters too, like Chrome.

[12:49:03.0000] <AryehGregor>
The Live DOM Viewer page views that trigger the filter *are* XSS, you're injecting HTML from a query parameter into the document.

[12:49:04.0000] <Hixie>
if the browser is following the specs, what is interfering with your work?

[12:50:00.0000] <AryehGregor>
Because I'm trying to make something in Live DOM Viewer in a non-IE browser, save it, and load it in IE.

[12:50:01.0000] <Hixie>
if IE is following the specs, that'll work fine

[12:51:00.0000] <othermaciej>
Safari also has a heuristic XSS filter

[12:51:01.0000] <othermaciej>
I think Chrome doesn't actually ship with it on by default yet, but Safari does

[12:51:02.0000] <AryehGregor>
Are you saying that no browser should block page script if it heuristically detects XSS on the page?

[12:51:03.0000] <AryehGregor>
/me tries in Safari

[12:52:00.0000] <Hixie>
yes

[12:52:01.0000] <AryehGregor>
It doesn't work in Safari either.

[12:52:02.0000] <Hixie>
i have considered just base64-encoding the argument

[12:52:03.0000] <othermaciej>
the specs do not actually permit browsers to protect users from Web sites with reflective XSS vulnerabilities

[12:52:04.0000] <othermaciej>
but it's still a good thing to do

[12:53:00.0000] <AryehGregor>
Hixie, um . . . why?  XSS is one of the biggest security problems web authors face, and a simple scheme that blocks URL parameters can potentially stop many attacks.

[12:53:01.0000] <othermaciej>
sufficiently encoding the argument would probably defeat XSS filters

[12:53:02.0000] <othermaciej>
even rot13 would work, I expect

[12:53:03.0000] <Hixie>
base64 is easier from js :-)

[12:53:04.0000] <AryehGregor>
Not in IE.  :)

[12:53:05.0000] <Hixie>
oh right

[12:53:06.0000] <othermaciej>
AryehGregor: XSS filters are not foolproof

[12:53:07.0000] <Ms2ger>
Would rot13 encode <s?

[12:53:08.0000] <othermaciej>
so it's not really wise for authors to rely on them

[12:54:00.0000] <othermaciej>
it's a protection for users when authors screw up

[12:54:01.0000] <othermaciej>
not a protection for authors

[12:54:02.0000] <AryehGregor>
othermaciej, no, but if you can prevent a substantial percentage of author bugs from being escalated to XSS, that's a good thing for everyone.

[12:54:03.0000] <Hixie>
not for you apparently :-)

[12:54:04.0000] <othermaciej>
well the downside is that there are false positive matches and/or sites that are deliberately willing to be XSS'd

[12:55:00.0000] <AryehGregor>
Okay, fine.  But pragmatically speaking, IE does have this feature and I do need to do work in IE and it would be nice if the relevant tools were written with the goal of actually working in significant browsers instead of adhering to some idealized world in which everything is completely standardized.

[12:56:00.0000] <AryehGregor>
(which doesn't seem practical for things as heuristic as XSS filtering, offhand)

[12:56:01.0000] <Hixie>
i'll fool their protection at some point

[12:56:02.0000] <Hixie>
in the meantime just use the upload/download feature

[12:56:03.0000] <AryehGregor>
Also:   <script>

[12:56:04.0000] <AryehGregor>
   if (navigator.userAgent.match('Gecko/(\\d+)') && RegExp.$1 == '20060217' && RegExp.$1 != '00000000') {

[12:56:05.0000] <AryehGregor>
     var style = document.getElementsByTagName('style')[1];

[12:56:06.0000] <AryehGregor>
     style.parentNode.removeChild(style);

[12:56:07.0000] <AryehGregor>
   }

[12:56:08.0000] <AryehGregor>
  </script>

[12:57:00.0000] <AryehGregor>
That does not look like you're excessively concerned about only supporting standards-compliant browsers.

[12:57:01.0000] <Hixie>
that wasn't a non-standards-compliant browser

[12:57:02.0000] <Hixie>
that was a browser that followed CSS2 rather than CSS2.1

[12:57:03.0000] <Hixie>
and therefore made ugly trees

[12:57:04.0000] <Hixie>
we changed the spec on them, not their fault

[12:58:00.0000] <AryehGregor>
What's upload/download supposed to do?

[12:58:01.0000] <AryehGregor>
It doesn't seem to do anything but clear the page.

[12:58:02.0000] <Hixie>
it's like a clipboard

[12:58:03.0000] <Hixie>
upload copies the file into the clipboard

[12:58:04.0000] <Hixie>
download copies the clipboard into the file

[12:58:05.0000] <Hixie>
file = first textarea

[12:59:00.0000] <zewt>
browser testing tools that only work on bug-free browsers seem no more useful than a debugger that only works on bug-free programs

[12:59:01.0000] <AryehGregor>
Which doesn't help me much if my primary machine is Linux and I'm using Windows to test IE, does it?

[12:59:02.0000] <Hixie>
it's a server-side clipboard

[12:59:03.0000] <AryehGregor>
Wait, then how does it work?

[12:59:04.0000] <Hixie>
it does an XHR to upload the file

[12:59:05.0000] <Hixie>
there's a single shared clipboard for all of tus

[12:59:06.0000] <AryehGregor>
Oh, weird.

[12:59:07.0000] <AryehGregor>
/me tries

[13:00:00.0000] <AryehGregor>
Hey, that works.  Thanks.

[13:00:01.0000] <Hixie>
i'll fix the save thing at some point

[13:00:02.0000] <AryehGregor>
/me notices if (n.nodeType == 3 /* text node */) n = n.nextSibling; // we should always do this but in IE, text nodes vanish

[13:00:03.0000] <Ms2ger>
/me uploads random junk while AryehGregor tests

[13:01:00.0000] <AryehGregor>
But upload/download is more convenient than save anyway, so I'll just use that.

[13:01:01.0000] <Hixie>
yeah save is mostly for when refering to tests in e-mail

[13:14:00.0000] <zcorpan>
Hixie: if you're making changes to live dom viewer, how about using the fragment identifier instead of query so that the page can be loaded from cache?

[13:15:00.0000] <zcorpan>
and not need a reload when saving

[13:15:01.0000] <zcorpan>
or maybe save doesn't reload now, but anyway

[13:16:00.0000] <deane>
zcorpan: Hi. would it be ok if I 'copied' some of your html5 elements page, changed it around a bit and made my own one? I just wanted to do something similar but show more details of the elements :)

[13:16:01.0000] <zcorpan>
deane: go ahead

[13:17:00.0000] <zcorpan>
deane: there's also an appendix in the spec with all elements and more details

[13:17:01.0000] <zcorpan>
deane: you could copy that instead, apart from having more details it's less likely to have broken links :)

[13:17:02.0000] <deane>
zcorpan: Thanks, I'll give a link back to your one with credit to you. cool

[13:18:00.0000] <zcorpan>
deane: if you find any broken links let me know and i'll fix

[13:22:00.0000] <zcorpan>
http://dev.w3.org/html5/status/issue-status.html - no decisions are about the html5 differences document, right?

[13:22:01.0000] <zcorpan>
would be nice with a column about which document the issue is about

[13:22:02.0000] <jgraham>
zcorpan: I guess in theory they could be

[13:23:00.0000] <jgraham>
So, is there some reason that having a registry of predefined prefixes wouldn't work for RDFa?

[13:23:01.0000] <zcorpan>
jgraham: you mean indirectly?

[13:24:00.0000] <jgraham>
zcorpan: Well, no I mean someone could file a bug with the document that you WONTFIXed and they escallated

[13:24:01.0000] <jgraham>
Or something

[13:24:02.0000] <zcorpan>
i mean in the current list

[13:25:00.0000] <jgraham>
zcorpan: I don't know of anything in the current list that is about that document, but I haven't checked

[13:28:00.0000] <jgraham>
In particular the Facebook example leads me to believe that one already needs a registry to correctly process "in the wild" RDFa both in order to find all the OpenGraph content that screws up the prefix mapping stuff, nad to avoid the "og" prefix for non-OpenGraph uses

[13:28:01.0000] <jgraham>
(since that will be misinterpreted by clients that do literal prefix matching)

[13:30:00.0000] <jgraham>
So if one proposed a setup where one MUST register prefixes, HTML tools MUST only use literal string matching against registered prefixes and other prefix binding mechanisms MAY be supplied for compatibility with non-HTML tools, why would that be bad?

[13:31:00.0000] <zcorpan>
it could lead to a spec that matched reality

[13:31:01.0000] <zcorpan>
/me now has 4999 mailing list email

[13:32:00.0000] <zcorpan>
wonder if i should do 'mark all as read' on some mailing lists

[13:34:00.0000] <AryehGregor>
Opera people, here's a test that makes Opera fail to render the page, with an OOM error: data:text/html,<!doctype html><script>document.createComment("foo").deleteData(0, 3);</script>

[13:34:01.0000] <AryehGregor>
I get "Out of memory; script terminated." in the error log, and script execution terminates.

[13:36:00.0000] <jgraham>
AryehGregor: Awesome

[13:37:00.0000] <jgraham>
AryehGregor: Would you like to file a bug? Otherwise I can

[13:37:01.0000] <AryehGregor>
jgraham, I don't file bugs in bug trackers where I can't see the status of the bug and have never been contacted for a follow-up.

[13:37:02.0000] <AryehGregor>
So go ahead.

[13:38:00.0000] <jgraham>
AryehGregor: We do contact people for follow-up information sometimes fwiw

[13:38:01.0000] <AryehGregor>
Hasn't happened to me.

[13:39:00.0000] <jgraham>
Well I guess you haven't filed hard-to-reproduce bugs, or something

[13:41:00.0000] <jgraham>
/me points out to anyone listening that the new set of polls is very unclear since the email is titled "Straw Poll For Objections", then says "In this case we are NOT

[13:41:01.0000] <jgraham>
asking WG members to give objections to a particular change proposal"

[13:41:02.0000] <jgraham>
and then goes back to talking about objections everywhere

[13:42:00.0000] <jgraham>
Including via the biolerplate text about not having to object if someone else already made your objection

[13:42:01.0000] <jgraham>
and in the text of the poll itself

[13:44:00.0000] <jgraham>
Oh, so I guess the point is that when it says "we are asking WG members to indicate their position", it actually means "give objections"

[13:45:00.0000] <jgraham>
Either that or I am more confused than I thought

[13:46:00.0000] <jamesr>
maybe objections are the only valid position

[13:47:00.0000] <Ms2ger>
jamesr, Objection!

[13:51:00.0000] <jgraham>
jamesr: Yes, I think a social scientist would have a field day documenting how we have devolved to the level where we can only communicate in the form of objections

[13:52:00.0000] <Ms2ger>
s/day/career/

[13:53:00.0000] <zcorpan>
what i don't like with the phpbb3 theme is that it's hard to tell apart threads with new posts from threads without

[13:53:01.0000] <jgraham>
zcorpan: Surely you don't like more than just that?

[13:54:00.0000] <zcorpan>
yeah i don't like how approving/disapproving new posts is more effort than necessary

[13:55:00.0000] <zcorpan>
or did you mean just the theme?

[13:55:01.0000] <jgraham>
AryehGregor: Is there a spec for deleteData anywhere?

[13:55:02.0000] <jgraham>
Even a broken one?

[13:55:03.0000] <AryehGregor>
jgraham, http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#dom-characterdata-deletedata

[13:55:04.0000] <jgraham>
zcorpan: I mostly meant that it was ugly

[13:55:05.0000] <AryehGregor>
It doesn't look broken to me, looks reasonable.

[13:55:06.0000] <AryehGregor>
A pretty simple method, no?  What's the question?

[13:56:00.0000] <jgraham>
AryehGregor: "where's the spec" was the question

[13:56:01.0000] <AryehGregor>
I meant, what did you need the spec for?

[13:56:02.0000] <zcorpan>
maybe Xdega will make a new theme with a nice design

[13:57:00.0000] <jgraham>
AryehGregor: To understand what deleteDatais supposed to do

[13:57:01.0000] <AryehGregor>
Ah, okay.  That's a good reason to want a spec.  :)

[13:58:00.0000] <zcorpan>
deleteData must run these steps: 1. Don't crash. 2. ??? 3. Profit!

[13:59:00.0000] <jgraham>
AryehGregor: OK, filed

[13:59:01.0000] <jgraham>
Thanks

[14:07:00.0000] <kennyluck>
jgraham: Did you check http://www.w3.org/profile/rdfa-1.1(re. So, is there some reason that having a registry of predefined prefixes wouldn't work for RDFa?) ?

[14:07:01.0000] <kennyluck>
http://www.w3.org/profile/rdfa-1.1

[14:08:00.0000] <jgraham>
kennyluck: Fascinating

[14:13:00.0000] <AryehGregor>
Hmm, WebKit doesn't seem to let you made eval()d anonymous functions?  data:text/html,<!doctype html><script>var f = eval("function() { alert('hello'); }"); f();</script>

[14:13:01.0000] <AryehGregor>
This works, though: data:text/html,<!doctype html><script>eval("var f = function() { alert('hello'); }"); f();</script>

[14:15:00.0000] <zewt>
stick it in parens

[14:15:01.0000] <zewt>
eg. same as how you have to say (function() { })() instead of function(){} ()

[14:15:02.0000] <AryehGregor>
Weird, no other browser requires that.

[14:16:00.0000] <AryehGregor>
Thanks for the suggestion, that works.

[14:43:00.0000] <jgraham>
AryehGregor: That isn't a "WebKit" thing since different WebKit based browsers have different scripting engines

[14:43:01.0000] <AryehGregor>
Oh, right.

[14:43:02.0000] <AryehGregor>
I guess I'm just not testing Safari, then.  :)

[14:57:00.0000] <AryehGregor>
I just constructed a test case in IE9 where a Node object has a non-null parent, but is not equal to any child of that parent.

[14:57:01.0000] <AryehGregor>
. . .

[14:58:00.0000] <AryehGregor>
Is it just me, or do these insane type of bugs really mostly occur in IE?

[14:59:00.0000] <bfrohs>
/me is going to remain silent because he bashes IE far too often

[14:59:01.0000] <Ms2ger>
The others fix them? :)

[15:08:00.0000] <karlcow>
Or people try harder to find bugs in IE

[15:09:00.0000] <AryehGregor>
I'm running the exact same test suite on all browsers.

[15:09:01.0000] <AryehGregor>
I generally review the results and try to get some idea of what's causing the failures in all browsers, in case it's a bug in the test or spec.

[15:09:02.0000] <jamesr>
it's not impossible to get that sort of crazy in WebKit (although i think we've fixed all the issues of that sorts i'm aware of)

[15:10:00.0000] <jamesr>
if that makes you feel any better

[15:10:01.0000] <AryehGregor>
jamesr, I found a case the other day where WebKit will produce a range with an offset longer than the length of the corresponding node.

[15:10:02.0000] <AryehGregor>
But that sort of bug is at least comprehensible.

[15:11:00.0000] <Ms2ger>
Though potentially scary

[15:11:01.0000] <AryehGregor>
data:text/html,<!doctype html><body><script>var text = document.createTextNode("Abcdef"); var range = document.createRange(); range.setStart(text, 0); range.setEnd(text, 2); text.splitText(1); document.body.textContent = range.startContainer.data + range.startOffset + range.endContainer.data + range.endOffset;</script>

[15:11:02.0000] <AryehGregor>
Didn't test in Safari, but in Chrome it outputs "A0A2".

[15:16:00.0000] <Lachy>
AryehGregor, what's the test case that shows the bug in IE?

[15:17:00.0000] <AryehGregor>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/895

[15:17:01.0000] <AryehGregor>
Subject to the proviso that you'll have to extract the contents using some other browser and then paste them into IE, because otherwise it will trigger the XSS filter.

[15:18:00.0000] <AryehGregor>
It outputs "false" twice.

[15:18:01.0000] <AryehGregor>
Hmm, Chrome behaves oddly here too.

[15:19:00.0000] <Lachy>
ok. I'll run it in a sec, just got to try and load windows 7 in a virtual machine without it slowing everything else down

[15:20:00.0000] <AryehGregor>
Chrome doesn't output the w()'s unless you add w("foo") or something before the for loop.

[15:20:01.0000] <Ms2ger>
That's really annoying

[15:20:02.0000] <Ms2ger>
Aryeh, don't you know anyone at Google who could fix that? ^^

[15:20:03.0000] <AryehGregor>
Ms2ger, fix what?

[15:21:00.0000] <AryehGregor>
I don't know anyone more at Google than you do.

[15:21:01.0000] <Ms2ger>
The w() thing

[15:21:02.0000] <AryehGregor>
Also, what's the story with getting DOM Range into the W3C these days?

[15:21:03.0000] <AryehGregor>
I don't know, it's a random glitch of some kind, no idea what causes it and no real desire to investigate.

[15:21:04.0000] <Ms2ger>
I'm wondering if I should wait until I can publish under a reasonable license

[15:22:00.0000] <AryehGregor>
Why don't you do like with HTML5 and just keep a separate version under a reasonable license?

[15:22:01.0000] <AryehGregor>
Also, why do you expect that the W3C will ever publish anything under a reasonable license?

[15:23:00.0000] <Ms2ger>
I'm not yet *that* cynical

[15:23:01.0000] <Ms2ger>
Also,  busy

[15:24:00.0000] <Hixie>
christ these alt="" polls are confusing

[15:24:01.0000] <Hixie>
even more confusing that usual

[15:26:00.0000] <AryehGregor>
Do you view it as cynical to think that the W3C will refuse to publish specs under a reasonable license, when they have repeatedly refused to do so for HTML5?

[15:27:00.0000] <Ms2ger>
I like to AGF sometimes

[15:28:00.0000] <AryehGregor>
The W3C is acting in good faith, they just have a different idea of what constitutes a reasonable license.

[15:28:01.0000] <AryehGregor>
Viz., they don't believe in forking.  Or at least some parts of the W3C don't, and so far they've prevailed.

[15:30:00.0000] <Philip`>
The W3C should publish the spec under an open license and let the people who don't believe in forking fork the spec and release their version under a more restrictive license

[15:31:00.0000] <Philip`>
That way everyone can be happy

[15:32:00.0000] <AryehGregor>
I encourage you to propose that solution to the PSIG.

[15:33:00.0000] <Ms2ger>
Call it option pi

[15:33:01.0000] <Lachy>
AryehGregor, the problem doesn't seem to be as bad as you thought.  The problem is that this returns false: w(range.startContainer == range.startContainer);

[15:33:02.0000] <AryehGregor>
Oh, that's fine, then.

[15:34:00.0000] <Lachy>
which is still quite insane having an object that is not equal to itself, but at least is not a malformed DOM

[15:34:01.0000] <jgraham>
Philip`: Well the current situation is that the people who write the specs publish them under open licenses and then W3C forks the specs and releases them under restrictive licenses

[15:35:00.0000] <zewt>
jgraham: ... why bother? that's a no-op

[15:35:01.0000] <zewt>
since you can always fork from the open original, heh

[15:36:00.0000] <Ms2ger>
Not with a W3C logo

[15:37:00.0000] <zewt>
that should be a trademark/logo licensing thing, not a license on the spec itself

[15:38:00.0000] <jamesr>
you also couldn't take the W3C contributions, which they view as significant

[15:39:00.0000] <Philip`>
Lachy: What about "var s = range.startContainer; w(s == s)"?

[15:39:01.0000] <Philip`>
Lachy: (Maybe the object is equal to itself, but the 'startContainer' getter returns a new object each time)

[15:39:02.0000] <Philip`>
Lachy: (which sounds fairly sane to me)

[15:39:03.0000] <jgraham>
jamesr: Well we seem to, at least with HTML5. Maybe that wouldn't be permitted for less high profile specs

[15:40:00.0000] <Hixie>
there haven't been any significant contributions

[15:40:01.0000] <Hixie>
so that rather neatly solves that

[15:41:00.0000] <Lachy>
Philip`, s==s returns true

[15:43:00.0000] <AryehGregor>
Philip`, a new object that points to the same thing in the DOM?  That doesn't sound at all sane to me.

[15:46:00.0000] <jgraham>
Hixie: If you have a moment, can you explain to me whether http://software.hixie.ch/utilities/js/live-dom-viewer/saved/897 can be explained by the current spec. Try also uncommenting the commented line.

[15:47:00.0000] <Hixie>
i have no idea what's going on there

[15:48:00.0000] <Hixie>
what am i looking for in particular?

[15:48:01.0000] <Hixie>
i get a different result each time i add a space to the source, in chrome

[15:48:02.0000] <Hixie>
oh it seems to just be the initial load that's acting differently

[15:49:00.0000] <Hixie>
jgraham: dunno what i'm looking for, please elaborate :-)

[15:51:00.0000] <jgraham>
Hixie: It seems that setting document.domain on the parent also affects the about:blank iframe so that one can still access e.g. the <body> in the iframe

[15:52:00.0000] <jgraham>
But messing with the parent dom seems to prevent this

[15:52:01.0000] <Hixie>
currently the spec cannot explain that, no

[15:53:00.0000] <Hixie>
though it probably wouldn't be too much work to fix that, if you can work out exactly what the rules are for the propagation

[15:53:01.0000] <Hixie>
should about:blank just use the origin of the parent directly rather than copying it when created?

[15:54:00.0000] <jgraham>
I don't think it is that simple otherwise setting innerHTML on the parent wouldn't affect the abillity to access the child

[15:54:01.0000] <jgraham>
I will look at this more tomorrow

[16:39:00.0000] <AryehGregor>
So obviously Microsoft is looking at implementing <iframe sandbox> for IE10.

[16:50:00.0000] <zewt>
gar i wish there was just a bit more design put into this new floaty-status-bar fad

[16:51:00.0000] <zewt>
both chrome's and ff4's assume every page has a light background and that it's okay to cover up the bottom corners of the page


2011-03-30
[17:17:00.0000] <Lachy>
othermaciej, the links to the decisions for issues 120 and 142 are linking to the wrong post. Can you fix this? http://dev.w3.org/html5/status/formal-objection-status.html

[17:17:01.0000] <othermaciej>
Lachy: yes

[18:34:00.0000] <othermaciej>
Lachy: fixed

[20:34:00.0000] <DJTrey>
any reason why this isn't playing in firefox 3.6.0

[20:34:01.0000] <DJTrey>
http://pastebin.com/V8ncecLy

[21:04:00.0000] <doublec>
DJTrey: what's it do? Does it show the element at all?

[21:04:01.0000] <DJTrey>
nevermind. i got it

[21:04:02.0000] <DJTrey>
i moved around some things and it started working....

[21:04:03.0000] <DJTrey>
might've been the AddType too

[21:04:04.0000] <doublec>
my first thought would have been the server not sending the correct mime type

[01:53:00.0000] <hsivonen>
is it known who Harald Alvestrand is consulting for in the p2p API case? or is he doing it on his own dime and time?

[02:23:00.0000] <doublec>
hsivonen: wikipedia says he works for the big G

[02:23:01.0000] <hsivonen>
doublec: interesting

[02:25:00.0000] <doublec>
should I be saddened that W3C keeps membership passwords in clear text

[02:26:00.0000] <jgraham>
I am

[02:26:01.0000] <hsivonen>
doublec: yes. at W3C meetings, as a tinfoil hat, I route my traffic through Mountain View

[02:26:02.0000] <doublec>
I'm glad I picked one so hard to guess I couldn't even remember it and wrote it down wrong

[02:26:03.0000] <doublec>
(I'm referring to their password reset stuff which sends the password out in email)

[02:27:00.0000] <doublec>
but I guess they're using basic auth too

[02:27:01.0000] <hsivonen>
(not to suggest that anyone in particular would sniff my password at a meeting, but at those meetings, there a plenty of people *capable* of sniffing around and there's a need to send the password over wifi)

[02:28:00.0000] <doublec>
yeah, tunnelling the traffic is a wise move

[02:30:00.0000] <hsivonen>
jgraham: I think it's sad that the Chairs labeled your RDFa findings as "arguments not considered" even though they did accept the claims about existing usage

[02:32:00.0000] <jgraham>
hsivonen: I am somewhat considering raising an objection on the basis that the chairs failed to properly consider the arguments presented. However I am interested to see their response to my enquiry about what was considered first

[02:33:00.0000] <hsivonen>
jgraham: Sam's reply to Tab hints that if you do, you need to use sudo

[02:33:01.0000] <hsivonen>
jgraham: i.e. make it Formal

[02:33:02.0000] <jgraham>
Yes, I understand that the word objection is considered meaningless without the word Formal

[02:34:00.0000] <hsivonen>
at least JF not only uses Formal but FORMAL

[02:35:00.0000] <jgraham>
So far I am disappointed that neither sicking nor I have got responses to our request for more information about recent decisions

[02:39:00.0000] <hsivonen>
oh, nice. Tab already made his points Formal.

[02:40:00.0000] <hsivonen>
I wonder if it makes any difference if I make the same points Formally as well

[02:43:00.0000] <zcorpan>
/me recalls FORMAL COMPLAINT

[02:44:00.0000] <jgraham>
I am somewhat hesitant to recommend a course of action that will undoubtedly lead to multiple Formal objections for each issue that fails to adopt a change proposal from the a11y people

[02:44:01.0000] <jgraham>
But I have no idea what the process for considering these objections is

[02:45:00.0000] <hsivonen>
I find it amusing that karlcow relays a Japanese requirement never to have subtitles for two movie characters on screen at the same time when translating Japanese to English in the anime context supposedly require all sorts of clutter

[03:38:00.0000] <hsivonen>
Hooray! UTF-7 and UTF-32 removed from Gecko trunk!

[03:41:00.0000] <zcorpan>
yay

[03:41:01.0000] <zcorpan>
isn't utf-7 needed for email in thunderbird?

[03:44:00.0000] <hsivonen>
zcorpan: IIRC, there was a solution that enabled email decoding without exposing UTF-7 as a general-purpose decoder

[03:44:01.0000] <hsivonen>
zcorpan: IIRC, email decoding in Thunderbird doesn't have the architecture one would expect anyway

[03:46:00.0000] <hsivonen>
zcorpan: did you see http://www.w3.org/Bugs/Public/show_bug.cgi?id=12398 ?

[03:48:00.0000] <zcorpan>
hadn't seen that

[03:51:00.0000] <zcorpan>
agree with wontfix

[03:52:00.0000] <hsivonen>
zcorpan: might be worthwhile to say that on the bug

[03:54:00.0000] <jgraham>
+1

[03:57:00.0000] <jgraham>
Live dom viewer down :(

[04:06:00.0000] <hsivonen>
zcorpan: thanks for the bug comment

[04:06:01.0000] <zcorpan>
np

[04:08:00.0000] <hsivonen>
/me wonders how much usage share Firefox 4 and Chrome need to get in Germany before http://www.mypokito.de/ gets fixed

[04:09:00.0000] <roc>
hsivonen: removed UTF-7 and UTF-32 just now? I don't see it

[04:12:00.0000] <hsivonen>
roc: https://bugzilla.mozilla.org/show_bug.cgi?id=604317 https://bugzilla.mozilla.org/show_bug.cgi?id=414064

[04:14:00.0000] <roc>
oh right

[04:14:01.0000] <roc>
thanks

[04:54:00.0000] <karlcow>
hsivonen: re japanese subtitles - And I didn't talk about the characters kerning etc. It's impressive how strict they are. But I have heard a lot of these specific requirements for the last year or two at a regular pace at home in the evening ;)

[04:58:00.0000] <MikeSmith>
karlcow: the subtitles I see in Japanese films don't seem to me to have much sophisticated typography requirements at all

[06:24:00.0000] <hsivonen>
karlcow: I thought Japanese typography didn't need kerning because all glyphs are equally wide

[06:24:01.0000] <hsivonen>
What part of Firefox reporting Gruber highlights is so predictable: http://daringfireball.net/linked/2011/03/29/firefox-mobile-flash

[06:28:00.0000] <karlcow>
hsivonen: in fact they do need kerning. I'll find you a reference.

[06:29:00.0000] <karlcow>
TSUMEGUMI (kerning / tracking)

[06:30:00.0000] <karlcow>
http://www.w3.org/TR/2008/WD-jlreq-20080411/#subheading1_2_3

[06:30:01.0000] <karlcow>
Adjustment of inter-character space by making the distance between the letter face of adjacent characters shorter than that produced by solid setting. (JIS Z 8125)

[06:31:00.0000] <karlcow>
better http://www.w3.org/TR/jlreq/#en-subheading1_2_3

[06:32:00.0000] <erlehmann>
hsivonen, is there any value in reading grubers ramblings except for the occasional chuckle?

[06:33:00.0000] <erlehmann>
i mean, if you are not that into apple culture.

[06:33:01.0000] <erlehmann>
(which i am, decidedly, not)

[07:36:00.0000] <hsivonen>
This is a curious case https://bugzilla.mozilla.org/show_bug.cgi?id=646224

[07:36:01.0000] <hsivonen>
why does the page look "right" in Safari 5?

[07:39:00.0000] <jgraham>
Safari 5 has the old parser, right?

[07:40:00.0000] <hsivonen>
jgraham: yes

[07:41:00.0000] <hsivonen>
jgraham: so why doesn't the spec clone any of old Gecko, old Trident or old WebKit in this case?

[07:42:00.0000] <hsivonen>
is this due to the AAA difference between old WebKit and the spec?

[07:42:01.0000] <hsivonen>
the difference that I can neither pin down nor understand

[07:42:02.0000] <hsivonen>
but that Hixie says is a "fix"

[08:02:00.0000] <karlcow>
hsivonen: the new UI of Skype really sucks on the mac at least. A lot bigger, too many things.

[08:03:00.0000] <hsivonen>
karlcow: OK. I wonder if the old one has known vulnerabilities. I haven't upgraded.

[08:04:00.0000] <karlcow>
I reverted myself to the old one when I tried the beta

[08:05:00.0000] <karlcow>
I think the new UI is in HTML

[08:07:00.0000] <Rik`>
so HTML is worse than native apps, q.e.d. ! :)

[08:08:00.0000] <moo-_->
HTML is the new native

[08:08:01.0000] <karlcow>
heh for certain things such as UI ;) I had written something along this a long time ago. On how I was wishing that instead of putting all apps in my browser, I wanted to have the Web in my apps. Aka using HTTP and api, etc

[08:09:00.0000] <jgraham>
/me doesn't hate new skype as much as he had been led to believe he might

[08:10:00.0000] <karlcow>
jgraham: I tried to use it forâ¦ 2 weeks then reverted.

[08:10:01.0000] <jgraham>
Ah, I think I tried once so far

[08:27:00.0000] <zcorpan>
hsivonen: safari doesn't match the spec for <a><div></a> either

[08:28:00.0000] <zcorpan>
or <b><div></b>

[08:28:01.0000] <zcorpan>
seems like a spec bug

[08:38:00.0000] <zewt>
karlcow: heh, i'm using a windows skype client from a couple years ago--anything newer i find utterly unusable

[08:55:00.0000] <mooreinteractive>
navigation.getUserMedia anyone know about this?

[10:39:00.0000] <nimbupani>
hey everyone, I am trying to "guess" the default line-height that all browsers use, but it seems pretty random, does anyone know if there is any documentation other than the spec  (which sez it should be between 1.0 and 1.2) http://jsfiddle.net/nimbu/rg8FX/

[11:15:00.0000] <kennyluck>
http://krijnhoetmer.nl/irc-logs/css/20110330#l-395

[11:15:01.0000] <MikeSmith>
zcorpan: you'll be able to have the html-diffs document updated for April 5 WD publication?

[11:23:00.0000] <zcorpan>
yep

[11:23:01.0000] <MikeSmith>
thanks

[11:38:00.0000] <karlcow>
http://twitter.com/mnot/status/53128146882543616

[11:38:01.0000] <karlcow>
>"This group primarily conducts its technical work on a Public mailing list public-html." #bullshit #w3c

[11:39:00.0000] <karlcow>
I'm wondering to which specific event mnot is reacting to

[11:39:01.0000] <kennyluck>
Me too.

[11:40:00.0000] <kennyluck>
The sentence in the charter?

[11:40:01.0000] <Philip`>
I thought the group conducts its technical work on the whatwg list, and public-html is just for Process spam

[11:40:02.0000] <AryehGregor>
Be fair, some technical work is done on Bugzilla.

[11:41:00.0000] <kennyluck>
You need to define what "the group" means then.

[11:42:00.0000] <Philip`>
I mean the people who cause changes to occur in the HTML5 spec that the HTML WG publishes

[11:42:01.0000] <karlcow>
As usual, and like it has always been since its inception, technical work is done everywhere, in meetings, mailing-lists, private discussions, irc, companies bug trackers, etc.

[11:49:00.0000] <zcorpan>
MikeSmith: hey i fixed a bug!

[11:49:01.0000] <MikeSmith>
eh?

[11:49:02.0000] <MikeSmith>
which bug?

[11:49:03.0000] <zcorpan>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=10796

[11:50:00.0000] <MikeSmith>
oh cool

[11:51:00.0000] <MikeSmith>
I think that's more bugs than Anne has fixed in the whole history of him maintaining that document!

[11:51:01.0000] <zcorpan>
lol

[11:51:02.0000] <MikeSmith>
so I think that means Anne will be very happy for you take over permanent ownership of it

[11:51:03.0000] <MikeSmith>
(which was probably his plan all along) :)

[11:51:04.0000] <zcorpan>
likely

[11:51:05.0000] <karlcow>
Anne is evil

[11:52:00.0000] <MikeSmith>
Anne is a god

[11:52:01.0000] <MikeSmith>
but like Loki

[11:52:02.0000] <karlcow>
well that's the same no?

[11:52:03.0000] <MikeSmith>
heh

[11:53:00.0000] <zcorpan>
hmm, should i say that xml:space is only allowed in XHTML documents?

[11:53:01.0000] <karlcow>
/me is reading Iliad these days ;) and really impatient to finish. Two chapters to go. I have blood all over my face. The body count starts to put me down

[11:53:02.0000] <MikeSmith>
the ways of Anne are precocious/unpredictable

[11:53:03.0000] <MikeSmith>
zcorpan: yeah, prolly

[12:12:00.0000] <MikeSmith>
zcorpan: "The dl now represents an association listâ¦" should maybe better be, "The dl element now represents an association listâ¦"

[12:15:00.0000] <zcorpan>
heh, thanks

[12:22:00.0000] <jgraham>
/me wonders if karlcow should put the book down and visit the hospital if he is covered in blood

[12:22:01.0000] <jgraham>
Or the police station, depending on whose blood it is

[12:24:00.0000] <karlcow>
jgraham: I'm counting on Apollon, Hera, Artemis, Zeus, etc. to help

[12:37:00.0000] <Hixie>
hsivonen: harald is a googler, strong ietf background

[12:38:00.0000] <smaug____>
AryehGregor: what you mean with "surroundContents() doesn't work

[12:38:01.0000] <smaug____>
here, because in all browsers except Opera it removes all children of

[12:38:02.0000] <smaug____>
the node before appending the range's contents.  (Opera actually

[12:38:03.0000] <smaug____>
follows DOM 2 Range here, but other browsers don't.)"

[12:39:00.0000] <smaug____>
AryehGregor: all children should be removed from newParent

[12:40:00.0000] <AryehGregor>
smaug____, oh, I missed that part, sorry.

[12:40:01.0000] <AryehGregor>
You're right, it says "If the node newParent has any children, those children are removed before its insertion."

[12:40:02.0000] <AryehGregor>
That was at the end after it described the actual steps to take, so I missed it.

[12:41:00.0000] <AryehGregor>
My bad.

[12:41:01.0000] <smaug____>
DOM 2 Range is hard to read

[12:41:02.0000] <smaug____>
in general it seems to be internally consistent, but just hard to read

[12:41:03.0000] <AryehGregor>
Yeah.

[12:41:04.0000] <AryehGregor>
And vague.

[12:42:00.0000] <AryehGregor>
(although not *that* vague)

[12:42:01.0000] <AryehGregor>
(not like a lot of CSS specs, for instance, much clearer than that)

[12:42:02.0000] <smaug____>
yeah, not that vague, just hard to read

[12:49:00.0000] <zewt>
it's just way too descriptive, more like a paper describing the API than a spec

[12:50:00.0000] <zewt>
actually i'm not sure if i've looked at that particular one, i'm just thinking of ... well, every dom 2 spec I've ever looked at

[12:53:00.0000] <zewt>
that one's layout isn't as bad as some, anyway

[13:02:00.0000] <karlcow>
was the first ever user agent string Mosaic? http://webaim.org/blog/user-agent-string-history/

[13:08:00.0000] <AryehGregor>
Okay, so this alerts "bar": data:text/html,<!doctype html><script>var a = "foo"; var f = function() { alert(a); }; a = "bar"; f();</script>

[13:09:00.0000] <AryehGregor>
Is there any way, when making f, to fix the values of all the variables it references, so that in this case it would alert "bar"?

[13:09:01.0000] <AryehGregor>
/me isn't sure this is the right approach to his problem at all

[13:09:02.0000] <AryehGregor>
I mean, I want a to be evaluated at function declaration time, not when the function is run.

[13:10:00.0000] <kennyluck>
OCaml does something like this IIRC. I don't think Javascript would allow you to do this.

[13:10:01.0000] <AryehGregor>
Hmm: data:text/html,<!doctype html><script>var a = "foo"; var f = function(a) { return function() { alert(a); } }(a); a = "bar"; f();</script>

[13:10:02.0000] <AryehGregor>
That works.

[13:10:03.0000] <AryehGregor>
Although it's kind of . . . um.

[13:11:00.0000] <AryehGregor>
Functional programming can get weird sometimes, amirite?

[13:14:00.0000] <AryehGregor>
So, that was an exciting hour exploring JavaScript.

[13:14:01.0000] <zewt>
use a different variable so you're not assigning over it later, heh

[13:15:00.0000] <zewt>
var a = "foo"; var b = a; var f = function() { alert(b); }; a = "bar"; f();

[13:16:00.0000] <AryehGregor>
I'm doing this in a loop, any variable I use will get overwritten by the next iteration.

[13:17:00.0000] <AryehGregor>
Which is why I specified the question in terms of the function, not the variables.

[13:17:01.0000] <zewt>
var -> let?

[13:17:02.0000] <AryehGregor>
let?

[13:18:00.0000] <AryehGregor>
/me looks

[13:19:00.0000] <AryehGregor>
What's the actual difference between let and var?  MDC is unhelpful (uncharacteristically).

[13:19:01.0000] <zewt>
http://zewt.org/~glenn/example.html

[13:19:02.0000] <AryehGregor>
Oh, I see.

[13:19:03.0000] <AryehGregor>
It gives you C-style variable binding semantics.

[13:19:04.0000] <zewt>
i've only seen its difference in code and not from docs, but from what I understand, var scopes to the function; let scopes to the block

[13:19:05.0000] <AryehGregor>
That'll do it, thanks.

[13:20:00.0000] <zewt>
also note that you usually need to explicitly set a javascript version

[13:20:01.0000] <zewt>
so watch out for older browsers

[13:20:02.0000] <jgraham>
let doesn't exist

[13:20:03.0000] <jgraham>
unless you only care about spidermonkey

[13:20:04.0000] <AryehGregor>
Oh.

[13:20:05.0000] <zewt>
function-wide scoping is so horribly broken

[13:20:06.0000] <AryehGregor>
Never mind, then.

[13:21:00.0000] <jgraham>
AryehGregor: I think your solution seems reasonable

[13:22:00.0000] <jgraham>
Although I am not really following

[13:26:00.0000] <AryehGregor>
I've come to suspect that my attempt to reduce code duplication has become horribly overengineered.

[13:27:00.0000] <AryehGregor>
Copy-paste starts to look attractive again.

[13:31:00.0000] <AryehGregor>
jgraham, I mean, you were the one who wrote the templating code in testharness.js, right?

[13:31:01.0000] <jgraham>
In testcases it is less evil than in normal code

[13:32:00.0000] <jgraham>
AryehGregor: yes...

[13:32:01.0000] <AryehGregor>
You mean copy-paste is less evil?  Because it won't have to be maintained, yeah.

[13:32:02.0000] <jgraham>
right

[13:33:00.0000] <jgraham>
although it can be necessary to change tests

[13:37:00.0000] <MikeSmith>
jgraham: I am thinking about coming by LinkÃ¶ping before or after the W3C AC meeting in May

[13:38:00.0000] <MikeSmith>
to talk with you and others there about testing, test-harness stuff, etc

[13:38:01.0000] <MikeSmith>
if you think that would be a good use of time

[13:38:02.0000] <MikeSmith>
maybe we can get gsnedder1 to visit at that time

[13:40:00.0000] <MikeSmith>
it would be a major achievement if we could get agreement about a cross-WG test harness by end of this summer

[13:40:01.0000] <MikeSmith>
one that met everybody's needs

[13:48:00.0000] <jgraham>
MikeSmith: I approve of this plan

[13:48:01.0000] <jgraham>
I expect gsnedders is at university then

[13:50:00.0000] <aho>
anyone knows why there still isn't some source+target rect stuff in CSS? (i.e. the kind of thing you get with *every* 2d drawing API. it's almost as if the csswg pretends that sprites don't exist.)

[13:51:00.0000] <gsnedder1>
miketaylr: When exactly is that?

[13:51:01.0000] <aho>
e.g. x1 y1 w1 h1 x2 y2 w2 h2 :>

[13:51:02.0000] <gsnedder1>
MikeSmith, that was meant to be

[13:51:03.0000] <AryehGregor>
aho, there's a spec for that, just not implemented yet.

[13:51:04.0000] <AryehGregor>
Media fragments.

[13:51:05.0000] <AryehGregor>
Okay, so all my massive rewriting wound up being 124 insertions and 189 deletions, with a massive decrease in comprehensibility.  I think I'm going to have to chuck it out.

[13:51:06.0000] <aho>
got a link?

[13:52:00.0000] <aho>
http://www.w3.org/2010/11/02-mediafrag-minutes.html <- this one?

[13:52:01.0000] <aho>
eh wait

[13:52:02.0000] <aho>
:>

[13:52:03.0000] <AryehGregor>
aho, http://www.w3.org/2008/WebVideo/Fragments/WD-media-fragments-spec/

[13:52:04.0000] <aho>
http://www.w3.org/TR/media-frags/

[13:52:05.0000] <AryehGregor>
Yeah, that's the WD.  Avoid those, they tend to be outdated.

[13:53:00.0000] <aho>
kay

[13:53:01.0000] <AryehGregor>
Hmm, but if I revert this, I'll have to redo the functional improvements I made . . .

[13:53:02.0000] <AryehGregor>
Oh well, I'll just add some comments and hopefully it will be fine.

[13:54:00.0000] <aho>
does that also include that svgView stuff (foo.svg#svgView(viewBox(0,200,1000,1000)))?

[13:54:01.0000] <AryehGregor>
I don't know, I haven't looked at it lately.

[13:54:02.0000] <AryehGregor>
Or ever read it very carefully.

[13:57:00.0000] <aho>
foo.png#xywh=160,120,320,240

[13:57:01.0000] <aho>
mh. yea. that would work, i guess

[13:57:02.0000] <aho>
doesn't include scaling/flipping like source/target rect does though

[13:58:00.0000] <aho>
i'm also kinda disappointed that this stuff is buried in this huge heavy spec... it will probably take ages until it's implemented

[13:58:01.0000] <AryehGregor>
I dunno about that.

[13:58:02.0000] <AryehGregor>
Or if it will, it's not because of the spec size, it's because of what implementers think is important.

[13:59:00.0000] <aho>
well, sprites are just awful and everyone uses them anyways

[13:59:01.0000] <aho>
it's really surprising that there isn't a good solution available yet

[14:01:00.0000] <aho>
i mean, doing this kind of thing is easier and more manageable in generic programming languages

[14:01:01.0000] <zewt>
arguably scaling/flipping doesn't belong there, though

[14:02:00.0000] <zewt>
i've wished i could reference sprites within a PNG with a fragment like that before though

[14:02:01.0000] <aho>
we all did... ;)

[14:02:02.0000] <zewt>
(if you want to scale or resize--there's already CSS for that)

[14:02:03.0000] <zewt>
(er, scale, flip, etc)

[14:04:00.0000] <gsnedders>
From CSS WG telecon minutes: RESOLVED: Advance CSS2.1 to PR.

[14:04:01.0000] <aho>
test.jar!/img1.png

[14:04:02.0000] <aho>
works with firefox :>

[14:04:03.0000] <aho>
http://kaioa.com/b/0907/jartest.html

[14:05:00.0000] <aho>
url(jar:test.jar!/img2.png) <- different proto though

[14:06:00.0000] <zewt>
that helps some of the use cases of sprites ... not all though

[14:06:01.0000] <zewt>
does help the probably most common one, though (reducing network requests)

[14:07:00.0000] <aho>
ye, well zip is kinda silly for that anyways

[14:07:01.0000] <zewt>
zip is fine for that, really

[14:07:02.0000] <aho>
i just used it for that demo (article here: http://kaioa.com/node/99 ) because it worked in firefox

[14:07:03.0000] <zewt>
(as long as compression is disabled, of course)

[14:08:00.0000] <zewt>
not ideal for sprite animations, though

[14:08:01.0000] <AryehGregor>
gsnedders, that would be more interesting and impressive if they didn't leave so much stuff undefined and/or untested to reach that goal.

[14:08:02.0000] <aho>
zip isn't a solid archive (less efficient compression - however, files can be decompressed individually), support for utf-8 is poor, support for changing the order of the files is poor, it uses a *trailing* index

[14:09:00.0000] <aho>
it's a general purpose archive format. that trailing index makes sense in that case. i.e. if you add one or two files to that 2gb file, you won't have to rewrite the whole thing

[14:09:01.0000] <aho>
but if it's used as transport mechanism over the wire, a leading index would make much more sense

[14:09:02.0000] <zewt>
solid archives are bad for this sort of use

[14:10:00.0000] <aho>
you want to know what stuff is inside the archive as soon as possible

[14:10:01.0000] <zewt>
you don't want to have to decompress the entire file to randomly access one file inside it

[14:10:02.0000] <zewt>
(also, when you're packaging sprites you don't want compression anyway)

[14:10:03.0000] <aho>
you would decompress all of it either way

[14:10:04.0000] <aho>
and populate the cache with that stuff

[14:10:05.0000] <zewt>
i wouldn't, i'd decompress on demand

[14:11:00.0000] <aho>
you can inflate hudreds of mb per second on a cheap office machine

[14:11:01.0000] <aho>
decompressing some tiny file really isn't an issue

[14:11:02.0000] <aho>
deflate is really really cheap

[14:12:00.0000] <zewt>
decompressing files that you're never going to access? that's just wasteful and increases latency

[14:12:01.0000] <aho>
why would you put files into some RP which aren't used?

[14:13:00.0000] <zewt>
used rarely and not used at all are different things, eg. icons for submenus

[14:13:01.0000] <zewt>
the nice thing about zip is that it's the most widely-supported, well-understood archive format there is, which is no small thing

[14:14:00.0000] <zewt>
not that it's without some warts (zip64, grr)

[14:14:01.0000] <aho>
yeaaa... that's kinda misaligned though. what you actually want for this is a format which can be easily written with std libraries which are available everywhere

[14:14:02.0000] <jgraham>
AryehGregor: Be nice, it has taken the CSSWG a decade to get CSS2.1 this far :)

[14:15:00.0000] <aho>
this is true for zip, but it would be also true for a custom format with a leading header

[14:15:01.0000] <AryehGregor>
jgraham, where "this far" is an arbitrary and useless bureaucratic milestone instead of a measurement of anything useful.

[14:16:00.0000] <gsnedders>
AryehGregor: It's not just a bureaucratic milestone, REC has meanings beyond the bureaucratic (patent policy comes into affect, etc.)

[14:16:01.0000] <aho>
zewt, zip also doesn't support mime types

[14:17:00.0000] <zewt>
not a practical problem in my experience, just a would-be-nice

[14:17:01.0000] <AryehGregor>
gsnedders, fine, it's not a measurement of anything *technically* useful.  The patent policy might be interesting to lawyers.

[14:18:00.0000] <zewt>
the universal support for ZIP just puts a very high bar in my mind for using something else

[14:19:00.0000] <jgraham>
gsnedders: If that is the metric of useful, then we should be worried that they overran by >= 6 years

[14:19:01.0000] <aho>
zewt, the trailing header is a practical problem though. the proposed "solution" is to put some index file into the archive first, which is kinda silly... just writing that index and the data (and piping it through zip) would be all we need

[14:19:02.0000] <aho>
*gzip

[14:20:00.0000] <aho>
amount of code on the server side would be also about the same

[14:20:01.0000] <aho>
there is nothing relevant to gain by using zip

[14:20:02.0000] <zewt>
nothing? i already have tools on every platform i use to manipulate zips; that's a huge win in and of itself

[14:21:00.0000] <zewt>
putting extra index files in archives is a terrible idea--then you have to use special tools to manipulate the zip (to keep the index up to date), which pretty much defeats all of the benefit

[14:23:00.0000] <zewt>
especially if using regular tools on them results in an inconsistent index file and causes confusing problems--at which point you're worse off than you'd have been with a new format

[14:23:01.0000] <jgraham>
gsnedders: (a more reasonable technical point would be that they finally got a useful testsuite together)

[14:23:02.0000] <jgraham>
gsnedders: (hopefully we do better in the future, although there is no assurance of that)

[14:24:00.0000] <aho>
if that custom format becomes some spec, there will be tools to support that format, too

[14:24:01.0000] <aho>
would require about 50 lines of java or so

[14:24:02.0000] <zewt>
java?

[14:24:03.0000] <zewt>
heh

[14:28:00.0000] <AryehGregor>
jgraham, is that the test suite that consists entirely of manual tests and which Microsoft takes three days to run?

[14:28:01.0000] <aho>
not really a big deal if it uses some standard compression scheme like deflate

[14:30:00.0000] <aho>
i used java as example for a somewhat verbose language which is used on the server side

[14:30:01.0000] <aho>
actually... i already do use some kind of custom format which is created on the server side

[14:31:00.0000] <aho>
it got a leading index, mime types, and the data is b64 encoded (for performance reasons) and the whole thing is gzipped

[14:31:01.0000] <zewt>
fwiw, another reason for a trailing index on zips is it makes it trivial to stream zips

[14:31:02.0000] <zewt>
not a critical property, just another handy one

[14:32:00.0000] <aho>
http://mbtic.com/games/dadadash/dadadash-ogg.ibz <- looks like this

[14:32:01.0000] <aho>
it's really not very difficult to create

[14:32:02.0000] <aho>
did it first with php and nowadays it's done with java

[14:33:00.0000] <aho>
it's some kind of mxhr thing, basically

[14:34:00.0000] <aho>
well, the point is... people already do use custom formats, because they have to :>

[14:36:00.0000] <zewt>
my point is, the bar should be set very high for using a custom format over a broadly-supported one; the bar is there and there are real cases when it's needed, but i err conservative on making up new file formats

[14:36:01.0000] <jgraham>
AryehGregor: There are certainly lessons to be learnt from it, yes

[14:36:02.0000] <aho>
tell me if you find one which was made for a similar use case

[14:37:00.0000] <zewt>
i definitely would say that adding hacks to ZIP like a leading index file is much worse than just making a new format, though.

[14:37:01.0000] <aho>
zip really isn't a sensible choice for this

[14:40:00.0000] <aho>
requirements: leading index, mime types, utf-8, deflate. ideally: seekable (i.e. it should be possible to decode a specific file inside that archieve without having to download everything. just the index and then the range which contains that file.)

[14:41:00.0000] <aho>
this would for example allow browser vendors to open parallel connections (if it appears to be worth it) and progressively load those files from the 2nd/3rd/4th connection without having to finish the block from the 1st connection first

[14:43:00.0000] <aho>
and seriously... writing something like that or a zip is about the same amount of code. it really isn't a big difference

[14:43:01.0000] <zewt>
it's not the same amount of code when you already have code and infrastructure to handle zips (as firefox already does, with jars)

[14:44:00.0000] <zewt>
personally i'm less interested in browser overhead ("not my problem" and not likely to be a sticking point in practice) as with toolset ("tools will support this eventually" isn't the same as "everything already does")

[14:45:00.0000] <aho>
that jar stuff is some ancient leftover code... it would require a complete rewrite for progressive loading etc

[14:45:01.0000] <zewt>
and a general aversion to format proliferation

[14:45:02.0000] <aho>
amount of code... meant on the server side

[14:46:00.0000] <aho>
i.e. code which needs to be written by the people who want to utilize RPs

[14:46:01.0000] <zewt>
i already have code to generate zips in my website architecture :)

[14:47:00.0000] <aho>
well, spitting out some simple header and gzipping the whole lot won't look much different

[14:47:01.0000] <zewt>
well, this format is inherently different--you need to have the data already compressed before you can output a header, since presumably the header would include indexes to each file

[14:48:00.0000] <aho>
ideally, yes

[14:49:00.0000] <aho>
(i.e. if you /also/ want that seekability)

[14:49:01.0000] <aho>
(not "just" a leading header)

[14:49:02.0000] <zewt>
well, you get that with zips

[14:50:00.0000] <aho>
zips got a trailing header

[14:50:01.0000] <zewt>
yes but you do get file offsets

[14:50:02.0000] <aho>
and each file also got its own header

[14:50:03.0000] <aho>
so you have to download the whole thing in order to be able to tell which files it contains

[14:50:04.0000] <zewt>
file-local headers in zips mostly don't matter (they're redundant with the trailing header)

[14:51:00.0000] <zewt>
no, you only need to download the end of the file to get the index--it's just more round-trips to do so

[14:51:01.0000] <zewt>
which for this sort of use you presumably want to minimize

[14:52:00.0000] <aho>
yea... i mean, that's the big idea, isn't it? ;)

[14:52:01.0000] <zewt>
it would typically take two extra round-trips to download the central directory in advance

[14:53:00.0000] <zewt>
though, that would also make caching more complex

[14:54:00.0000] <aho>
"you need to have the data already compressed" <- this isn't a big deal, by the way. it's an AOT operation and the amount of data is fairly small. you can do all of that in-memory and once you got everything you need you write it in one go

[14:54:01.0000] <zewt>
eg. using ETag or something to make sure that the end of central directory, central directory and then files are all from the same file

[14:54:02.0000] <zewt>
which is just annoying and easy to get wrong

[14:55:00.0000] <zewt>
that depends on what you're putting in the archive

[14:55:01.0000] <aho>
one person gets it right, puts it on github

[14:55:02.0000] <aho>
problem solved

[14:55:03.0000] <aho>
:>

[14:55:04.0000] <zewt>
if only things were that easy :)

[14:57:00.0000] <aho>
tbh, i'd rather use bloody tar files instead of zips

[14:57:01.0000] <aho>
but that would be super awful, too

[14:57:02.0000] <zewt>
guh

[14:58:00.0000] <zewt>
tars are so much more horrible heh

[14:58:01.0000] <zewt>
trailing index is better than no index :)

[15:05:00.0000] <aho>
well, that whole thing can be done as "composite format"

[15:06:00.0000] <zewt>
tars can also only be solid archives

[15:06:01.0000] <aho>
index = json (can be validated)... and gzipped. each file gzipped. then everything just concatinated

[15:06:02.0000] <aho>
done :>

[15:06:03.0000] <aho>
technically not a new format

[15:06:04.0000] <aho>
:>~

[15:07:00.0000] <zewt>
you're stretching "technically" :P

[15:07:01.0000] <zewt>
don't need to involve tar when doing it that way, though

[15:07:02.0000] <aho>
would be pretty straighforward though, wouldn't it?

[15:08:00.0000] <aho>
ye, meant w/o tar

[15:08:01.0000] <aho>
stuff->gzip->concat

[15:09:00.0000] <aho>
using json for the index also simplifies things quite a bit

[15:10:00.0000] <aho>
it's utf-8 and the parser also already exists

[15:10:01.0000] <zewt>
one nitty thing about gzip is it doesn't include the file size as a header, so if you want to just download the header, you can't tell how much to read in advance ... sort of annoying, i think

[15:10:02.0000] <aho>
there are also libraries to write it

[15:11:00.0000] <aho>
mmmh... yea, file length is in the footer :l

[15:11:01.0000] <zewt>
of course, you could have a tiny initial header (which you'd want anyway, so the file doesn't sniff like a gzip), which includes a magic + the size of the compressed header

[15:11:02.0000] <aho>
wikipedia mentions optional extra headers... probably hard to create with most default libs

[15:11:03.0000] <zewt>
i mean with your random idea

[15:12:00.0000] <aho>
yea

[15:12:01.0000] <aho>
just looked at gzip's wikipedia entry again for reference

[15:12:02.0000] <zewt>
couldn't really do it with gzip directly, since you don't want it to have a gzip header at the very beginning

[15:13:00.0000] <zewt>
or tools wouldn't be able to reliably tell them apart from a plain gzip of json

[15:13:01.0000] <aho>
true

[15:13:02.0000] <aho>
also, some UAs do gzip sniffing

[15:13:03.0000] <aho>
(opera does)

[15:14:00.0000] <Hixie>
someone asked me for suggestions as to who should review their book on html and web standards, anyone interested?

[15:20:00.0000] <Philip`>
/me notes randomly that Age of Empires 3 (and others in the series) uses zlib-compressed data preceded by the 32-bit filesize preceded by the string "l33t"

[15:20:01.0000] <aho>
:>

[15:21:00.0000] <Peter->
I love that game :) Though not as much as AoE 2

[15:23:00.0000] <aho>
zewt, but yea... i think that should work nicely. magic, compressed length of the json thing, json index (gzipped), file1 (gzipped), file2... fileN

[15:24:00.0000] <aho>
well, maybe 3 byte magic + 1 byte version number :>

[15:24:01.0000] <zewt>
well, you'd also want a way to have uncompressed data

[15:24:02.0000] <aho>
gzip can do that

[15:25:00.0000] <aho>
18 byte overhead

[15:25:01.0000] <zewt>
don't know any way to do that with gzip(1)

[15:26:00.0000] <aho>
gzip 0 = store

[15:26:01.0000] <zewt>
gzip: invalid option -- '0'

[15:26:02.0000] <aho>
it automatically switches to store if the compressed thing is bigger than the input

[15:27:00.0000] <zewt>
need to be able to not attempt to compress at all when you know the file format is already compressed

[15:27:01.0000] <zewt>
odd that there's no option to do that already though

[15:27:02.0000] <aho>
http://en.wikipedia.org/wiki/DEFLATE -> Encoding method used for this block type -> 00: a stored/raw/literal section follows, between 0 and 65,535 bytes in length.

[15:27:03.0000] <zewt>
pretty obvious thing, and any zip tool can do it

[15:28:00.0000] <zewt>
another thing to think about once you're making a new format: drop crc32, use sha-1, and put the sha-1 in the index, not with each file (as it is with gzip)

[15:29:00.0000] <aho>
<aho> 18 byte overhead <- +1 byte every 64k ;)

[15:29:01.0000] <zewt>
benefit: you can tell if your (externally cached) copy of the decompressed data is out of data by just looking at the index

[15:29:02.0000] <zewt>
which can mean not having to fetch the data at all

[15:30:00.0000] <aho>
well, you probably want to use this in conjunction with a far future expires header and cache busting

[15:30:01.0000] <aho>
so, if the RP's content has changed, the path will be different

[15:31:00.0000] <zewt>
but with a proper hash you can update an archive and clients can (if they're smart enough) only download the changed file

[15:31:01.0000] <aho>
hum

[15:31:02.0000] <zewt>
(or files, even quickly using a multi-range Content-Range)

[15:31:03.0000] <zewt>
request the range for each changed file and get the entire thing streamed with one request

[15:32:00.0000] <zewt>
(entire thing -> entire set of changed files)

[15:32:01.0000] <Philip`>
Related to compression: http://virtualdub.org/blog/pivot/entry.php?id=335 looks fun

[15:33:00.0000] <zewt>
heh my comment at the bottom

[15:33:01.0000] <zewt>
<- glenn maynard

[15:33:02.0000] <Philip`>
Seems like you can't always assume tools are competent :-(

[15:34:00.0000] <aho>
http://www.reddit.com/r/programming/comments/genvz/and_i_thought_my_implementation_of_deflate_was/c1n1tho <- my comment

[15:34:01.0000] <aho>
reddit is slooooooow :>

[15:35:00.0000] <aho>
zewt, are there multi-range requests? :o

[15:36:00.0000] <zewt>
i thought there were, but maybe not (there certainly should have been)

[15:39:00.0000] <aho>
speaking of which, that diffing stuff they did for google maps is neat

[15:39:01.0000] <aho>
but to be honest, i still don't really understand how it works :>

[15:40:00.0000] <aho>
with java/webstart you can also just download a diff of the required jars

[15:40:01.0000] <aho>
would be cool if there would be something like that out-of-the-box. (no clue how that should look like though)

[15:46:00.0000] <aho>
ah yea, checksums. with a json index you could use some kind of version string, which could be whatever you want. e.g. a revision number or a checksum (i like md5 -> b64-for-urls -> truncate to 22 chars [last 2 chars are always '=='])

[15:47:00.0000] <zewt>
ew

[15:48:00.0000] <aho>
works great for cache busting ;)

[15:48:01.0000] <zewt>
hex encoding for hashes is pretty standardized

[15:48:02.0000] <aho>
hex is bigger

[15:48:03.0000] <zewt>
really not something worth breaking from the crowd about :)

[15:48:04.0000] <aho>
well, if it's a string you can use whatever you want

[15:49:00.0000] <zewt>
better off using the same thing everyone else in the universe uses whenever possible

[15:49:01.0000] <zewt>
i wonder how much deflate compresses lots of hex strings

[15:50:00.0000] <aho>
well, 32 chars vs 22 chars

[15:50:01.0000] <aho>
totally worth it! ;D

[15:51:00.0000] <zewt>
gzip compresses a 2048-byte block of random hex to 1174--that's really good, actually (with 1024 being optimal, ignoring headers)

[15:55:00.0000] <aho>
b64 is about the same

[15:55:01.0000] <zewt>
gzipped base64, 1086 bytes ... very close

[15:55:02.0000] <aho>
b64=33% bloat, gzip gets rid of that again :>

[15:55:03.0000] <zewt>
(well--less close if it's a lot of data, but for a file index it's close enough)

[15:56:00.0000] <zewt>
and being able to look at the index (with your eyes and not special tools), pull out an sha-1, run sha1sum on a file and compare them (again with no special tools)--that's a general real-world win

[15:57:00.0000] <zewt>
can't do that if your hashes are encoded in an unusual way

[15:58:00.0000] <aho>
i do know one other person who does it the same way and who came up with it independently :>

[15:58:01.0000] <zewt>
also stop with the md5 already it's 2011 :P

[15:59:00.0000] <aho>
if you're only interested in detecting changes, md5 works fine

[16:00:00.0000] <zewt>
no reason to use md5 in anything new--default to sha-1

[16:00:01.0000] <zewt>
even if there's no particular reason to for an application, it helps to get out of the habit :P

[16:01:00.0000] <aho>
why not skein then? :>

[16:02:00.0000] <aho>
or sha-2 for that matter

[16:05:00.0000] <zewt>
well, sha-1 isn't considered obsolete today; md5 is

[16:08:00.0000] <aho>
sha-1 outputs 20 bytes instead of 16... meh :I

[16:08:01.0000] <aho>
http://en.wikipedia.org/wiki/Cryptographic_hash_function#Cryptographic_hash_algorithms

[16:09:00.0000] <aho>
mhmh... ripemd-128 :>

[16:09:01.0000] <aho>
never heard of that one


2011-03-31
[17:19:00.0000] <aho>
are websockets now part of html5?

[17:19:01.0000] <aho>
http://dev.w3.org/html5/websockets/ <- this url seems to suggest that

[17:19:02.0000] <Hixie>
define "html5"

[17:19:03.0000] <aho>
http://www.whatwg.org/C <- that :P

[17:19:04.0000] <Hixie>
that's not "HTML5", that's Web Applications 1.0

[17:20:00.0000] <Hixie>
the Web Sockets API is part of Web Applications 1.0, the Web Sockets Protocol is not.

[17:20:01.0000] <aho>
well, it was html5 prior to that whole "dropping the version number thing", right?

[17:20:02.0000] <Hixie>
http://whatwg.org/html was labeled "html5" for a while

[17:20:03.0000] <Hixie>
but that's a subset of http://whatwg.org/C

[17:21:00.0000] <Hixie>
(the C stands for Complete)

[17:21:01.0000] <aho>
ah... ok

[17:21:02.0000] <Hixie>
the FAQ tries to explain it better if you're still confused :-)

[17:24:00.0000] <aho>
and the /protocol/ is part of... some ietf thing?

[17:26:00.0000] <wilhelm>
/me approves of the kitchen sink illustration.

[17:26:01.0000] <aho>
http://www.brucelawson.co.uk/2010/meet-newt-new-exciting-web-technologies/

[17:26:02.0000] <aho>
lets go with that

[17:26:03.0000] <aho>
css3? NEWT. webworkers? NEWT. canvas? NEWT. :>

[17:30:00.0000] <potatis_invalido>
Pronounced it'd sound like the Swedish word for pleasure.

[17:30:01.0000] <aho>
sounds about right

[17:30:02.0000] <aho>
:>

[17:31:00.0000] <potatis_invalido>
Haha yeah

[17:32:00.0000] <potatis_invalido>
What fun projects are you people working on? (With emphasis on the word fun)

[17:32:01.0000] <aho>
http://mbtic.com/ddd

[17:33:00.0000] <aho>
old site, old markup, ignore that :>

[17:33:01.0000] <potatis_invalido>
It's like the ice skating in PokÃ©mon

[17:33:02.0000] <aho>
never played any pokemon game

[17:33:03.0000] <potatis_invalido>
but way cooler

[17:33:04.0000] <aho>
:)

[17:34:00.0000] <potatis_invalido>
I'm working on a Hammer Editor clone

[17:34:01.0000] <potatis_invalido>
for the web

[17:34:02.0000] <potatis_invalido>
Hammer Editor is the map editor for Half-Life and Source games

[17:34:03.0000] <potatis_invalido>
3D FPS games in other words

[17:34:04.0000] <aho>
ah

[17:34:05.0000] <aho>
i only used radiant (quake3's)

[17:35:00.0000] <aho>
and some really old one for quake1

[17:35:01.0000] <aho>
no idea how that one was called

[17:35:02.0000] <potatis_invalido>
I've tried radiant. Found it confusing

[17:35:03.0000] <aho>
it is

[17:35:04.0000] <aho>
got some curve to it

[17:35:05.0000] <potatis_invalido>
quark?

[17:35:06.0000] <aho>
probably :)

[17:35:07.0000] <aho>
it's been a while

[17:36:00.0000] <Hixie>
aho: web socket protocol is being done by the ietf hybi group

[17:36:01.0000] <potatis_invalido>
Did you finish any maps?

[17:36:02.0000] <aho>
i made some midair maps

[17:36:03.0000] <Yuhong>
"I wonder what Arjun Ray is doing these days. one could spend a weekend reading his ciwah posts from the late 1990s "

[17:36:04.0000] <Yuhong>
People have forgotten how the Netscape monopoly was bad.

[17:37:00.0000] <aho>
but that mod was experimental and only a dozen people ever played it :>

[17:37:01.0000] <Yuhong>
Back in 1995 or so.

[17:37:02.0000] <potatis_invalido>
I've been mapping Half-Life ~5 years now. Still haven't been able to produce anything worth looking at :P

[17:37:03.0000] <Yuhong>
It basically killed HTML 3.0, which existed as HTML+ before Netscape even existed.

[17:37:04.0000] <potatis_invalido>
too short attention span

[17:38:00.0000] <aho>
midair = typically just one room... maybe void... maybe lava... that's about it

[17:38:01.0000] <potatis_invalido>
No platforms or anything?

[17:38:02.0000] <Philip`>
/me vaguely remembers that he gave up on making Quake maps before any GUI editor was released, when you had to write the whole level's brush positions in a text file by hand (and then spend two hours computing the lighting maps)

[17:38:03.0000] <Yuhong>
It delayed adoption of style sheets for years, while they invented their own CENTER and FONT tags.

[17:38:04.0000] <aho>
RL only, crazy vertical knockback, the higher the enemy is in the air, the more damage they receive

[17:39:00.0000] <Yuhong>
(First draft of CSS dates around the time of Netscape 0.9)

[17:39:01.0000] <aho>
it's some qw game type

[17:39:02.0000] <potatis_invalido>
I made a room in the .map format for Half-Life once (it's the same format as for Quake)

[17:40:00.0000] <potatis_invalido>
I can't imagine what it'd be like making an entire map like that

[17:40:01.0000] <Yuhong>
Reading Arjun Ray's posts will make all that clear.

[17:40:02.0000] <potatis_invalido>
Are the DaDaDash levels randomly generated?

[17:40:03.0000] <aho>
ye

[17:41:00.0000] <aho>
there will be real ones in the future though

[17:41:01.0000] <potatis_invalido>
Ok, that explains why it's so easy :P

[17:41:02.0000] <aho>
and two extra twists

[17:41:03.0000] <potatis_invalido>
not getting any harder, I should have said

[17:41:04.0000] <aho>
http://i.imgur.com/EKhMK.png <- it sometimes creates something interesting though

[17:41:05.0000] <aho>
<:

[17:42:00.0000] <potatis_invalido>
Indeed

[17:42:01.0000] <erlehmann>
try building concave-convex shapes

[17:43:00.0000] <aho>
~4.5kb js.gz and 59.6 for the resource blob. it's fairly compact :)

[17:43:01.0000] <potatis_invalido>
Resource blob? Are all images in one file?

[17:43:02.0000] <potatis_invalido>
and sounds*

[17:44:00.0000] <aho>
everything

[17:44:01.0000] <aho>
it's just those two files

[17:44:02.0000] <aho>
check the net panel ;)

[17:45:00.0000] <potatis_invalido>
How did you pull that off? Do you generate data: URIs to load the sounds and images?

[17:45:01.0000] <aho>
http://mbtic.com/games/dadadash/dadadash-ogg.ibz

[17:45:02.0000] <aho>
it's like mxhr, but with an index

[17:45:03.0000] <aho>
name,type,length... and so forth... then a ';' followed by the b64 data uris

[17:46:00.0000] <potatis_invalido>
Interesting

[17:46:01.0000] <aho>
with gzip it's about the same size as a zip

[17:46:02.0000] <potatis_invalido>
I might consider doing something similar for my app

[17:47:00.0000] <aho>
we also tried some other stuff... like b64-ing on the client side, but that turned out to be too slow

[17:47:01.0000] <aho>
we also tried tar.gz :)

[17:47:02.0000] <potatis_invalido>
Do you need to b64 it though?

[17:47:03.0000] <aho>
way. too. slow.

[17:47:04.0000] <aho>
ye

[17:48:00.0000] <aho>
there is no other way to hand those bytes over to image or audio

[17:48:01.0000] <aho>
so, i do need b64 at some point

[17:48:02.0000] <potatis_invalido>
Is it impossible to use data: with binary data?

[17:48:03.0000] <zewt>
there's still no api for generating blobs manually, is there?

[17:48:04.0000] <zewt>
which is really what's wanted for this sort of thing

[17:49:00.0000] <zewt>
well ... you could XHR the whole file to get a File, and slice the individual files, but XHR isn't too great for resource loading

[17:49:01.0000] <aho>
i'm using xhr for this

[17:50:00.0000] <aho>
there isn't any other option, is there?

[17:50:01.0000] <zewt>
iirc some browsers simply never cache xhr :(

[17:50:02.0000] <zewt>
(opera?)

[17:51:00.0000] <zewt>
if you use xhr (xhr2, rather), and if the individual files aren't compressed (use HTTP compression instead), you could slice the individual Files from the XHR result, then use object URLs to load them as resources--so you never have to manipulate the data in JS directly

[17:51:01.0000] <zewt>
(havn't looked at how you're doing it)

[17:52:00.0000] <aho>
object urls?

[17:52:01.0000] <zewt>
URL.createObjectURL(file/blob) -> URL

[17:53:00.0000] <aho>
does that work with ff/opera/chrome/ie9?

[17:54:00.0000] <zewt>
ff4/chrome 9+ supports it, iirc; don't know about ie9, don't think opera does

[17:54:01.0000] <zewt>
also the API has been in minor flux so the name has changed (easy to work around, just fyi)

[17:55:00.0000] <potatis_invalido>
I can confirm that there's no URI object in Opera 11.10 Beta

[17:56:00.0000] <zewt>
webkitURL.createObjectURL in chrome 10

[17:56:01.0000] <zewt>
(and revokeObjectURL)

[18:00:00.0000] <zewt>
if you want to see why I hate data: URLs, try context menu->view image on a large canvas in FF :P

[18:01:00.0000] <zewt>
(which I *wouldn't* call a QoA issue: code that deals with URLs should not have to be engineered to deal with multiple-megabyte URLs)

[18:02:00.0000] <aho>
hmhm... interesting

[18:03:00.0000] <aho>
i only knew that something like that was in the works, but i didn't know how it's called nor how it was supposed to work :>

[18:04:00.0000] <potatis_invalido>
Does DaDaDash only generate games that can be solved?

[18:04:01.0000] <aho>
yes

[18:04:02.0000] <aho>
(the level is created in reverse)

[18:04:03.0000] <potatis_invalido>
Maybe that's what I need to do

[18:04:04.0000] <potatis_invalido>
Think in reverse

[18:05:00.0000] <aho>
ye, that's the idea... it's 100% pure backtracking :>

[18:05:01.0000] <potatis_invalido>
That did it.

[18:05:02.0000] <aho>
:)

[18:06:00.0000] <potatis_invalido>
It's quite entertaining for such a simple game

[18:06:01.0000] <zewt>
puzzle games just make me want to write programs to solve them for me

[18:06:02.0000] <potatis_invalido>
Haha

[18:07:00.0000] <potatis_invalido>
The thought does cross my mind from time to time

[18:07:01.0000] <potatis_invalido>
I'm a FreeCell adict.

[18:07:02.0000] <aho>
if you got java installed you can also try another overly pure game of mine: http://kaioa.com/jws/jnlp_na/fuzetsu.jnlp

[18:07:03.0000] <aho>
this one is 100% bullet scraping

[18:07:04.0000] <aho>
:>

[18:08:00.0000] <aho>
it's a 4k game, by the way (i.e. the whole thing is <= 4096 bytes)

[18:08:01.0000] <potatis_invalido>
How do you play? (I didn't miss a help screen, did I?)

[18:09:00.0000] <aho>
get close to the bullets, but dont touch them with the white dot in the middle

[18:09:01.0000] <aho>
that's it :>

[18:09:02.0000] <potatis_invalido>
oh, ok

[18:09:03.0000] <aho>
only risk/reward :)

[18:10:00.0000] <potatis_invalido>
HA! HA!

[18:10:01.0000] <aho>
evil, eh? ;D

[18:11:00.0000] <potatis_invalido>
Indeed

[18:11:01.0000] <aho>
there are 22 or 23 levels

[18:13:00.0000] <aho>
http://kaioa.com/k/double_winder.png <- the level editor :)

[18:15:00.0000] <potatis_invalido>
Wasn't it more work creating a level editor than it'd be doing it manually? (This is coming from someone who has almost no experience with Java)

[18:16:00.0000] <aho>
there are 8 parameters per emitter and there can be up to 3 emitters (mid, left, right)

[18:16:01.0000] <aho>
finding interesting values is a lot of trial and error

[18:16:02.0000] <aho>
the editor took only a few hours

[18:16:03.0000] <potatis_invalido>
Heh, no way I'd survive 3 of them

[18:17:00.0000] <aho>
http://kaioa.com/k/fuzetsu4.png

[18:17:01.0000] <aho>
http://kaioa.com/k/fuzetsu5.png

[18:17:02.0000] <aho>
:)

[18:18:00.0000] <aho>
creating an editor is usually worth it

[18:19:00.0000] <aho>
in this case it easily saved me from /days/ of change, compile, start, test :>

[18:20:00.0000] <potatis_invalido>
Right. I forgot that Java is compiled.

[18:20:01.0000] <aho>
http://www.youtube.com/watch?v=eJfO5Z2deKc <- integrated level editor :)

[18:21:00.0000] <potatis_invalido>
I love games where it's simple to make maps

[18:21:01.0000] <potatis_invalido>
like Worms, Cell Block or Super Mario War

[18:21:02.0000] <potatis_invalido>
or N

[18:22:00.0000] <aho>
imo it's important to have a very high turn-over rate

[18:23:00.0000] <aho>
doom3 was interesting in that regard

[18:23:01.0000] <potatis_invalido>
If you're a Half-Life player you might have heard of Entmod. It's a server-side plugin which allows players to modify and copy world objects. You can build houses, trains and stuff.

[18:23:02.0000] <aho>
you could just back and forth between the editor and the game

[18:23:03.0000] <aho>
and you also got the real lighting right off the bat :)

[18:23:04.0000] <potatis_invalido>
Sounds cool. I've been meaning to try Doom 3.

[18:24:00.0000] <potatis_invalido>
I love the old games.

[18:25:00.0000] <potatis_invalido>
I actually played an Ultimate Doom co-op game with a couple of friends a few hours ago

[18:25:01.0000] <aho>
doom3 is kinda meh imo .)

[18:25:02.0000] <aho>
but the engine was pretty interesting back then

[18:25:03.0000] <aho>
well, you can grab the game for 5 bucks nowadays

[18:26:00.0000] <potatis_invalido>
I read they plan to release the source code once Rage is done

[18:27:00.0000] <potatis_invalido>
should spawn some interesting projects

[18:27:01.0000] <aho>
right away?

[18:28:00.0000] <potatis_invalido>
"At the QuakeCon 2009, Carmack said that he planned to petition ZeniMax Media to release the id Tech 4 source upon the release of Rage (expected in 2011)"

[18:28:01.0000] <potatis_invalido>
id Tech 4 is Doom 3's engine

[18:28:02.0000] <aho>
ye, rage is tech5

[18:29:00.0000] <aho>
thought you meant tech5 :)

[18:29:01.0000] <potatis_invalido>
Oh

[18:29:02.0000] <potatis_invalido>
LOL

[18:29:03.0000] <potatis_invalido>
I'm normally not impressed by graphics and such but Rage looks pretty sweet from the few images I've seen

[18:30:00.0000] <aho>
hope we'll see some kind-of impressive webgl game some day :>

[18:30:01.0000] <aho>
or well... some real game would be cool for starters

[18:30:02.0000] <aho>
;)

[18:31:00.0000] <aho>
(the quake one doesnt count)

[18:31:01.0000] <potatis_invalido>
Damn it

[18:31:02.0000] <potatis_invalido>
I was just going to mention that

[18:32:00.0000] <potatis_invalido>
Yes, I'd like that too

[18:33:00.0000] <potatis_invalido>
JavaScript will probably have to get a little faster first though.

[18:34:00.0000] <potatis_invalido>
But if we give it a few years I'm sure something will pop up

[18:37:00.0000] <aho>
speed is ok-ish nowadays, methinks

[18:38:00.0000] <aho>
full screen is still missing (right?)

[18:38:01.0000] <aho>
and mouse grabbing, too

[18:38:02.0000] <aho>
also, audio is very lacking

[18:39:00.0000] <potatis_invalido>
I agree about the first three

[18:39:01.0000] <potatis_invalido>
but audio?

[18:40:00.0000] <zewt>
there was some talk recently about getting started on a fullscreen API, but most of the talk was "which WG to do it in"; I don't know if that went anywhere

[18:40:01.0000] <potatis_invalido>
3D audio might be a problem, now that I think of it

[18:40:02.0000] <zewt>
critical for <video> and games

[18:40:03.0000] <potatis_invalido>
position audio.

[18:40:04.0000] <potatis_invalido>
positional*

[18:41:00.0000] <zewt>
well, there's no API designed for game-audio

[18:41:01.0000] <potatis_invalido>
for simple audio you can just create a bunch of audio elements

[18:43:00.0000] <potatis_invalido>
HTML and related technologies are becoming more and more like traditional program environments

[18:43:01.0000] <zewt>
a full audio API is fairly complex, once you start getting into it (eg. positioning is just one part of environmental audio)

[18:43:02.0000] <potatis_invalido>
like Java and .NET

[18:44:00.0000] <aho>
there isn't even panning :)

[18:44:01.0000] <potatis_invalido>
So I don't think it's entirely unlikely we'd see a 3D audio API in this decade.

[18:44:02.0000] <potatis_invalido>
we'll*

[18:44:03.0000] <zewt>
also a tough topic: accurate sync

[18:45:00.0000] <aho>
there are also some issues with current implementations. typically there is too much latency and chrome is the worst offender... it goes silent after a few minutes :v

[18:45:01.0000] <zewt>
my work has been on music games for years, so i know some of the headaches involved with audio sync :P

[18:51:00.0000] <potatis_invalido>
Its's always something, isn't it? Remember that people once were impressed by Pong. :)

[18:53:00.0000] <aho>
opera does indeed not bother with caching that xhr thing

[18:53:01.0000] <zewt>
http://www.youtube.com/watch?v=T3BMqt00z9Y <- that's what I do (... no, that's not me); I don't have any hope of ever being able to make that sort of game in a web app :|

[18:53:02.0000] <aho>
even though the header says it expires in 2 years :I

[18:54:00.0000] <zewt>
audio apis tend to not give enough attention to sync, so making a game that depends on sub-10ms play-position accuracy is tricky

[18:57:00.0000] <zewt>
aho: go nag some opera devs, i hate that too :P

[18:58:00.0000] <zewt>
don't know off-hand if it's the only browser that does that

[19:01:00.0000] <zewt>
it's particularly odd, since opera is generally more aggressive about caching than other browsers--not more conservative

[19:02:00.0000] <zewt>
(and there's no way they don't know about it)

[19:05:00.0000] <aho>
just cross-checked with fiddler... it really does request the file anew

[19:10:00.0000] <aho>
http://www.stevesouders.com/blog/2009/08/11/f5-and-xhr-deep-dive/

[19:10:01.0000] <aho>
according to that expires in the future should be enough

[19:11:00.0000] <zewt>
i remember not being able to get data cached at all--but it's been a while and I'm not sure which browser I was having trouble with

[19:11:01.0000] <zewt>
it may have been some browser always revalidating even when told not to

[19:11:02.0000] <zewt>
(which is a lesser crime but still very bad, forcing a round-trip)

[19:13:00.0000] <zewt>
(let me know if you confirm expire/opera, btw, curious)

[19:16:00.0000] <potatis_invalido>
I'm calling it a night. It was nice talking to you.

[19:16:01.0000] <aho>
nn

[19:16:02.0000] <aho>
well, as i said i already use expires headers (2 years in the future) and it doesn't cache anything

[19:16:03.0000] <aho>
same thing with his test case

[19:17:00.0000] <aho>
(he talks about opera 10 though. i'm using 11.)

[19:17:01.0000] <Hixie>
nessy: yt?

[19:17:02.0000] <Hixie>
foolip: yt?

[19:17:03.0000] <zewt>
could also be one of the other 92 cache-related headers

[19:17:04.0000] <Hixie>
doublec: yt?

[19:17:05.0000] <doublec>
Hixie: yep

[19:18:00.0000] <Hixie>
doublec: so i'm looking at how to make MediaController work better based on the feedback so far

[19:18:01.0000] <Hixie>
doublec: dunno how much you've been following that

[19:18:02.0000] <Hixie>
doublec: (that's the multiple-synchronised-video/audio thing)

[19:18:03.0000] <doublec>
Hixie: Unfortunately I haven't had a chance to look at that yet

[19:18:04.0000] <aho>
http://pastebin.com/srkSQ2dk <- looks fine to me :f

[19:19:00.0000] <aho>
ehm

[19:19:01.0000] <aho>
wrong one

[19:19:02.0000] <aho>
:>

[19:19:03.0000] <Hixie>
doublec: k. well, quick overview: basically, it proposes an object that a <video> or <audio> element can be slaved to

[19:19:04.0000] <Hixie>
doublec: and all the slaved elements are forced to play at the same rate, and stall at the same time if any of them stall for network buffering, etc

[19:20:00.0000] <aho>
http://pastebin.com/KuBUSdJ1

[19:21:00.0000] <Hixie>
doublec: one thing my original proposal supported somewhat accidentally due to the way it was written is that if any of the media elements were set to loop, it would act as if the looping track was copied many times over infinitely in both directions -- think like a drum beat or metronome loop playing over a song

[19:21:01.0000] <Hixie>
doublec: based on feedback, i'm changing the api a bit to have the controlling object have a known duration, which of course doesn't work so well if any of the subtracks are looping

[19:22:00.0000] <Hixie>
doublec: i'm curious as to whether you have any suggestions on that front

[19:22:01.0000] <Hixie>
doublec: i'm thinking of basically making the looping tracks "fill" any time required to get them to fit the length of the longest non-repeating track

[19:23:00.0000] <Hixie>
doublec: kinda like a repeating background image

[19:24:00.0000] <doublec>
Hixie: we've got a Mozilla all hands next week where I'd like to gather the mozilla interested parties to discuss the api

[19:24:01.0000] <doublec>
Hixie: and then provide feedback

[19:25:00.0000] <Hixie>
doublec: in that case you should definitely let the htmlwg chairs know your timeline because they are saying we have to be done with proposals by this friday :-/

[19:25:01.0000] <Hixie>
doublec: i've been trying to explain to them that that's crazy but with minimal success

[19:25:02.0000] <doublec>
Hixie: that is crazy

[19:25:03.0000] <zewt>
are the chairs people, or are they actually like, lawn chairs

[19:25:04.0000] <doublec>
Hixie: is there a public-html thread about the deadline?

[19:25:05.0000] <zewt>
from people's opinions of them in here I'm no longer certain

[19:26:00.0000] <Hixie>
doublec: yeah. one minute, brb and can get it for you.

[19:27:00.0000] <jamesr>
Hixie: can't you just punt this all from html5 so the htmlwg doesn't care?

[19:30:00.0000] <othermaciej>
doublec: the deadline is effectively imposed by the LC deadline - we could punt the issue past Last Call, but currently Adrian Bateman has objected to that course of action

[19:30:01.0000] <Hixie>
jamesr: i did punt it from html5. then someone escalated it and now the chairs are insisting it must be done before their arbitrary last call deadline.

[19:30:02.0000] <othermaciej>
he suggested an extra week instead

[19:31:00.0000] <othermaciej>
it might be possible to give a one-week extension without blowing the LC deadline

[19:31:01.0000] <othermaciej>
I'm also not at all against postponing the issue if there is consensus to do that

[19:31:02.0000] <jamesr>
with the idea that designing an API in one week will produce a better result than waiting for it to be actually good?

[19:31:03.0000] <othermaciej>
I'm not sure why Adrian asked for the issue to be resolved in the very short time before Last Call

[19:32:00.0000] <othermaciej>
but folks should feel free to ask him

[19:32:01.0000] <othermaciej>
well, there's several API designs now which I think took more than a week each to create

[19:32:02.0000] <othermaciej>
I think it's a matter of refining them and seeing if differences can be eliminated

[19:32:03.0000] <Hixie>
i like how one vendor, who btw isn't going to ship anything for years given their ship cycle, is able to force an issue to be resolved in a few weeks but when we ask them for input we get nothing for months

[19:32:04.0000] <Hixie>
othermaciej, jamesr: any opinion on the thing above btw?

[19:32:05.0000] <jamesr>
i'm not familiar enough with media issues to comment intelligently

[19:33:00.0000] <Hixie>
othermaciej: consensus isn't the best way to make decisions

[19:33:01.0000] <Hixie>
othermaciej: also, why do we need consensus on postponing but not consensus on rushing?

[19:35:00.0000] <doublec>
I'd rather not include it at all than rush an api

[19:35:01.0000] <othermaciej>
Hixie: after reading the discussion thread, I kind of think the MediaController thing is ill-conceived - it's there in theory to avoid media elements having different master and slave modes, but in implementation terms, they have to have modes anyway

[19:35:02.0000] <othermaciej>
Hixie: and it results in an API that can't deliver what it promises

[19:36:00.0000] <Hixie>
othermaciej: it's there to avoid making the api asymetric

[19:36:01.0000] <othermaciej>
Hixie: so it seems like it's prioritizing purity over implementations

[19:36:02.0000] <Hixie>
othermaciej: it's prioritising for authors.

[19:36:03.0000] <othermaciej>
(I don't think it's a benefit to authors to give them an API that doesn't work)

[19:36:04.0000] <Hixie>
why would it not work?

[19:36:05.0000] <Hixie>
or rather what doesn't work?

[19:36:06.0000] <othermaciej>
well, I'm imagining how we'd change our built-in controls to work with this API

[19:37:00.0000] <othermaciej>
they'd have to basically always talk to the controller object and never use the API directly on video

[19:37:01.0000] <Hixie>
same as with all the other proposals

[19:37:02.0000] <othermaciej>
and without a master/slave relationship, there wouldn't even be an easy way to have a different set of controls for the auxiliary tracks

[19:37:03.0000] <Hixie>
do you have an example of what you mean?

[19:37:04.0000] <othermaciej>
I imagine this is true of most set of JS-authored controls that want to work generically, and not just for one page

[19:37:05.0000] <Hixie>
what's an auxiliary track?

[19:38:00.0000] <othermaciej>
for example, a sign language translation that displays in a separate area

[19:38:01.0000] <othermaciej>
it might be that there are use cases where there isn't one clear "main" display area, but in the accessibility use cases, there generally is

[19:39:00.0000] <Hixie>
if there are two video playback areas, one with "content" and one with "sign language", what controls do you expect to see on the two elements?

[19:39:01.0000] <Hixie>
the two areas, i mean

[19:39:02.0000] <othermaciej>
I'd expect the content one to have full controls that control the master timeline

[19:40:00.0000] <othermaciej>
I would expect the sign language track to have either the same, or possibly to have reduced controls that don't actually manipulate the timeline, to reduce confusion/complexity

[19:40:01.0000] <othermaciej>
I don't know what our UI people would prefer

[19:40:02.0000] <othermaciej>
also we might hack the built-in fullscreen control to try to take the whole synchronized group full screen

[19:40:03.0000] <othermaciej>
though I dunno exactly how we'd do that

[19:40:04.0000] <Hixie>
none of this sounds hard with the MediaController API

[19:41:00.0000] <othermaciej>
it's not especially hard, but it's not easier either

[19:41:01.0000] <othermaciej>
the APIs on individual media elements would basically turn into an obscure thing that you should almost never use

[19:41:02.0000] <Hixie>
same as if they're asymetric

[19:41:03.0000] <Hixie>
except for one of the elements

[19:41:04.0000] <Hixie>
where they'd be serving two purposes

[19:41:05.0000] <othermaciej>
(does the MediaController API let you designate one media element as the lead, and others as auxiliary?)

[19:42:00.0000] <Hixie>
it could

[19:42:01.0000] <Hixie>
doesn't currently

[19:42:02.0000] <othermaciej>
I think when elements are synchronized, then probably all of their APIs should control the master timeline

[19:42:03.0000] <Hixie>
in most cases there isn't a lead, as fdar as i can tell

[19:42:04.0000] <othermaciej>
it's probably true that for non-accessibility use cases, there isn't necessarily a lead

[19:43:00.0000] <othermaciej>
anyway, I don't like rushing the design of this either :-(

[19:43:01.0000] <othermaciej>
and I have to get food while there's still time

[19:43:02.0000] <othermaciej>
brb

[19:49:00.0000] <nessy>
Hixie: here

[19:50:00.0000] <Hixie>
nessy: trying to work out how to deal with looping of tracks in a multitrack situation, especially when the looping track is not the same length as the other tracks

[19:50:01.0000] <Hixie>
nessy: any ideas?

[19:50:02.0000] <nessy>
/me reading up on discussion about .. gimme a sec

[19:55:00.0000] <nessy>
/me ok..

[19:55:01.0000] <nessy>
so, it's all about what we want to see in the UI, I guess

[19:56:00.0000] <Hixie>
i doubt most cases with looping would have a ui

[19:56:01.0000] <nessy>
do we want individual slave tracks to have their own controls (API and displayed)?

[19:56:02.0000] <Hixie>
it's more about what cases might need looping

[19:56:03.0000] <nessy>
if it was for me, I'd disable individual looping

[19:56:04.0000] <Hixie>
most looping is likely to be used in things like games

[19:56:05.0000] <nessy>
in fact, all the functions that access the timeline, I would slave them together

[19:57:00.0000] <zewt>
is there really any practical use for looping except to loop an entire, combined media?

[19:57:01.0000] <zewt>
(eg. all tracks or none)

[19:57:02.0000] <nessy>
what zewt says...

[19:57:03.0000] <zewt>
the "metronome" thing is pretty contrived

[19:57:04.0000] <nessy>
what's your game use case?

[19:58:00.0000] <Hixie>
games use audio for all kinds of things

[19:58:01.0000] <zewt>
game audio is way beyond <audio> anyway

[19:58:02.0000] <Hixie>
e.g. background fire effects when you're in a room with a fire

[19:58:03.0000] <Hixie>
music

[19:58:04.0000] <Hixie>
explosions

[19:58:05.0000] <nessy>
the model I have in mind for multitrack is basically to replicate for external files what in-band would do - I don't think there is any in-band use for looping individual tracks

[19:59:00.0000] <Hixie>
have you ever used garage band?

[19:59:01.0000] <zewt>
(my audio engine allows beat-matching two looping music tracks to seamlessly switch from one to another; rather beyond anything current APIs would try to do, heh)

[19:59:02.0000] <nessy>
yeah, but this is not an API to create a drum machine or music tracks

[19:59:03.0000] <Hixie>
we'd probably want a better api for something like garage band, but for simpler cases of things like that it might make sense to just use audio

[19:59:04.0000] <nessy>
I'd want that problem to be solved by an audio API

[20:00:00.0000] <Hixie>
for the whole app, sure

[20:00:01.0000] <nessy>
or asked otherwise: would somebody that wants to implement a game or a drum machine really want to use a multitrack media resource approach?

[20:00:02.0000] <zewt>
imo, trying to address game use cases with <audio> without actually expanding it to be a full-blown sound engine API ... feels like design creep

[20:00:03.0000] <Hixie>
what i'm saying is that smaller-scale parts of that might well be simple enough that people would just use <audio> for it

[20:01:00.0000] <nessy>
they wouldn't use in-band mutltirack, certainly, so why try to bend external multitrack to support it?

[20:01:01.0000] <Hixie>
it's not about bending external multitrack

[20:02:00.0000] <Hixie>
given an external controller, these abilities just fall out if we do it right. the question is what is the right way to do it.

[20:02:01.0000] <nessy>
well, it creates a set of problems that I don't think we want to address in multitrack

[20:03:00.0000] <Hixie>
what problems?

[20:03:01.0000] <nessy>
such as independent looping, such as defining the duration, such as what happens with indpendent startOffset and with changes to playbackRate

[20:03:02.0000] <Hixie>
those aren't problems

[20:03:03.0000] <nessy>
what would be the duration of a multitrack resource that has a looping track?

[20:03:04.0000] <Hixie>
those are things we have to define anyway

[20:03:05.0000] <Hixie>
we can define them as "they do nothing" or we can provide a useful definition

[20:03:06.0000] <Hixie>
but either way we have taoaddress them

[20:04:00.0000] <nessy>
no, if we don't accept looping on an individual track, the duration of the overall composition is easier to determine

[20:04:01.0000] <nessy>
the problem space is smaller

[20:04:02.0000] <Hixie>
if you decide something, then the number of things you have to decide is smaller, yes

[20:04:03.0000] <roc>
I hear we need to give feedback by Friday

[20:04:04.0000] <nessy>
hi roc!

[20:04:05.0000] <Hixie>
but the number of things you have to decide in all is still the same

[20:05:00.0000] <roc>
what's up with that? We can't give decent feedback until we've implemented it, and believe it or not we won't have it implemented by Friday

[20:05:01.0000] <Hixie>
oh, that reminds me, i had to get a url for doublec

[20:05:02.0000] <roc>
nessy: hi

[20:05:03.0000] <nessy>
yeah, do write an email on the list that you also want more time to give feedback

[20:05:04.0000] <zewt>
FWIW, I'd have a duration *assigned* to looping tracks individually (which might be "infinite" if the user wants to loop forever); tracks loop for as long as they're told to; and the duration of the composition of many tracks is straightforward: the maximum duration of all tracks

[20:05:05.0000] <nessy>
I've already stated that multiple times

[20:06:00.0000] <roc>
which list?

[20:06:01.0000] <roc>
public-html?

[20:06:02.0000] <nessy>
yes

[20:06:03.0000] <nessy>
reply to Adrian's message I would say

[20:06:04.0000] <Hixie>
doublec, roc: http://lists.w3.org/Archives/Public/public-html-a11y/2011Mar/0214.html

[20:07:00.0000] <nessy>
search for "Timing of ISSUE-152"

[20:07:01.0000] <Hixie>
http://lists.w3.org/Archives/Public/public-html/2011Mar/0746.html is adrian's e-mail

[20:07:02.0000] <nessy>
well, the first one is on the a11y list and thus more an internal discussion, IMHO

[20:07:03.0000] <nessy>
yeah, that second one

[20:07:04.0000] <Hixie>
"internal"?

[20:08:00.0000] <nessy>
well, TF-internal discussion to at least get agreement within the TF

[20:09:00.0000] <Hixie>
agreement within the TF means nothing except that it's harder to discuss the issue once it goes to the whole group since the people in the TF are invested in their agreement :-)

[20:09:01.0000] <Hixie>
/me thinks the TFs are a bad idea, but that's probably old news

[20:09:02.0000] <nessy>
yes, that's why I am saying the one on the main list is more important

[20:09:03.0000] <nessy>
btw: there's not necessarily agreement in the TF even when things are moved forward

[20:09:04.0000] <nessy>
anyway...

[20:12:00.0000] <nessy>
what is the duration of a composition that contains a looping track?

[20:12:01.0000] <Hixie>
that is one of the questions we'd have to answer if we decide looping is to be supported

[20:12:02.0000] <nessy>
would it play until all non-loping tracks have completed their duration and then just continue with the looping track?

[20:13:00.0000] <nessy>
to be honest, I think it's an artificial use case - a solution looking for a problem

[20:13:01.0000] <zewt>
it seems it's hard to decide what to do because there are no use cases to base a design on :)

[20:14:00.0000] <Hixie>
it's not a use case, it's not a solution -- it's just something we have to decide one way or the other

[20:14:01.0000] <Hixie>
nessy: it's like saying that the ability to put a span inside an em inside a dfn is an artificial use case or a solution looking for a problem

[20:14:02.0000] <nessy>
what things to you intend to lock into sync between the slave elements?

[20:15:00.0000] <Hixie>
based on feedback so far, playback rate

[20:16:00.0000] <nessy>
also currentTime progress when playing, I guess

[20:16:01.0000] <Hixie>
how do you mean?

[20:17:00.0000] <nessy>
well, when you start playing one, you should start playing them all (as far as they are set to display), right?

[20:17:01.0000] <Hixie>
that's the playback rate :-)

[20:18:00.0000] <nessy>
how do you jump to the same time offset across all of them?

[20:18:01.0000] <nessy>
from script

[20:18:02.0000] <nessy>
so you can make a common controller for all of them

[20:18:03.0000] <roc>
Hixie: I have a feeling that solutions for multiple-media-resource synchronization, advanced audio API and RTC all need to be solved in an integrated way

[20:18:04.0000] <roc>
right now I think we have three trains rushing towards each other at high speed

[20:19:00.0000] <Hixie>
nessy: based on your feedback i'm planning on providing a currentTime feature in the MediaController to replace the seek() feature (that's why the looping thing became an issue -- it wasn't an issue at all with the old seek() approach, which is why i'd gone with seek() rather than a currentTime approach)

[20:19:01.0000] <nessy>
lol: want to add a fourth train? HTTP adaptive streaming

[20:19:02.0000] <nessy>
Hixie: I see - that explains it

[20:19:03.0000] <Hixie>
roc: the RTC and multiple-track things are definitely coordinated, at least insofar as I'm working on them

[20:20:00.0000] <Hixie>
roc: in fact they currently share an interface (the TrackList thing)

[20:20:01.0000] <roc>
yeah

[20:20:02.0000] <nessy>
oh really? â¦ I need to check that...

[20:21:00.0000] <Hixie>
roc: (that's one reason i'm hoping to make the MediaController thing be good enough to convince silvia and others, so that they are coordinated, since the other proposals aren't coordinated like that)

[20:21:01.0000] <roc>
but the audio API piece is very significant

[20:21:02.0000] <Hixie>
roc: agreed

[20:21:03.0000] <Hixie>
roc: i need to coordinate with them more

[20:21:04.0000] <roc>
audio API needs to sync multiple streams

[20:21:05.0000] <roc>
with processing

[20:21:06.0000] <Hixie>
unfortunately they went to hide into an xg of their own :-P

[20:21:07.0000] <Hixie>
bbiab

[20:22:00.0000] <roc>
audio API needs to integrate with RTC to enable big use cases like XBox 360's voice distortion

[20:22:01.0000] <roc>
er, XBox Live

[20:24:00.0000] <nessy>
roc: do write about that to public-html, too - maybe that makes Adrian change his mind

[20:25:00.0000] <roc>
message already sent

[20:26:00.0000] <karlcow>
http://httparchive.org/interesting.php

[20:26:01.0000] <nessy>
in real-time communication - do we really need to lock the local and remote video stream to each other via a controller?

[20:26:02.0000] <roc>
you can't

[20:26:03.0000] <nessy>
I mean: skype doesn't do that - it just displays the data that it gets as quickly as possible

[20:27:00.0000] <roc>
who says we should do that?

[20:27:01.0000] <karlcow>
28% of Web pages with Error.

[20:27:02.0000] <nessy>
ok, cool - I need to find out what we need tracks for RTC then...

[20:27:03.0000] <karlcow>
or more exactly 28% of URIs with HTTP errors

[20:28:00.0000] <karlcow>
61% with HTTP redirects

[20:28:01.0000] <nessy>
(I've not read up on the RTC proposal yet)

[20:28:02.0000] <nessy>
http://www.whatwg.org/specs/web-apps/current-work/complete/video-conferencing-and-peer-to-peer-communication.html#generatedstream

[20:29:00.0000] <nessy>
ok, there is no controller there, just the track lists

[20:31:00.0000] <roc>
I think the tracklist stuff is low-hanging fruit

[20:31:01.0000] <roc>
we could just add that to media elements without any of the MediaController stuff, relatively easy to implement and addresses some important use cases

[20:31:02.0000] <roc>
that seems uncontroversial to me

[20:33:00.0000] <othermaciej>
Hixie: so, let me elaborate my prior use case a it more

[20:33:01.0000] <othermaciej>
Hixie: let's say I have a site that embeds various videos

[20:33:02.0000] <othermaciej>
I use an existing JS library to provide custom branded controls

[20:34:00.0000] <othermaciej>
this library is written to use the regular <video> API, not MediaController, since that is what it's historically used, and it generally works if you don't synchronize additional media items, so the developer never thought to change it

[20:35:00.0000] <othermaciej>
now for one video, I want to synch an external sign language translation video

[20:35:01.0000] <othermaciej>
in a separate playback area

[20:35:02.0000] <othermaciej>
it seems like my options are:

[20:35:03.0000] <othermaciej>
- rewrite the control logic

[20:35:04.0000] <othermaciej>
- switch to another JS library

[20:35:05.0000] <othermaciej>
- accept broken playback controls

[20:35:06.0000] <othermaciej>
that's kind of sucky

[20:35:07.0000] <othermaciej>
so there have to be strong use cases to justify the model that imposes this porting cost

[20:36:00.0000] <othermaciej>
now, one thing you could do is make the playback API on synch'd videos always throw, to force you to use the media controller, so at least that kind of bug is caught sooner

[20:37:00.0000] <othermaciej>
but that seems to remove the elegance and symmetry from the proposal

[20:39:00.0000] <othermaciej>
(I think the Eric/Sylvia proposal will Just Work for that case if you don't want any controls on the slave track, which most likely you do not)

[20:40:00.0000] <nessy>
(note that I am not married to our proposal - I want this to be worked out properly and I am not yet sure what the best approach is - still experimenting)

[20:48:00.0000] <Hixie>
othermaciej: if we had much legacy for <video>, i'd agree

[20:48:01.0000] <Hixie>
othermaciej: but we don't

[20:48:02.0000] <Hixie>
othermaciej: we can just treat this as part of the original api

[20:48:03.0000] <Hixie>
othermaciej: note that just using the Eric/Sylvia proposal wouldn't work either, if the slaved track was longer

[20:49:00.0000] <Hixie>
othermaciej: and it wouldn't work right if it assumed that the readyState of the main media element was representative of when the media could play

[20:49:01.0000] <othermaciej>
really? there's a lot of hosting sites using HTML5 video, and a lot of control libraries

[20:49:02.0000] <Hixie>
othermaciej: (since the other track might still be buffering)

[20:49:03.0000] <othermaciej>
I'm not down with (effectively) breaking compatibility with all current HTML5 video content

[20:49:04.0000] <Hixie>
othermaciej: this wouldn't break compat with anything, it just adds a new feature

[20:50:00.0000] <othermaciej>
sure, but if you use the feature, it breaks compat with any existing reusable video code you may have used

[20:50:01.0000] <othermaciej>
Eric/Sylvia proposal is easily extended to make the master media element proxy more things for the whole group

[20:50:02.0000] <Hixie>
othermaciej: the idea of reusing a media element as the master is a huge hack that will cause problems for years, imho

[20:51:00.0000] <othermaciej>
what kind of problems do you expect it to cause?

[20:52:00.0000] <Hixie>
othermaciej: it ties together the status for the whole group and the status for a single resource in such a way that you can't intuitively tell which you're looking at

[20:52:01.0000] <Hixie>
othermaciej: so e.g. we'll be stuck with not having tracks longer than the master track

[20:52:02.0000] <Hixie>
othermaciej: we'll be stuck with never having separate playback rate controls for individual tracks in a consistent way

[20:52:03.0000] <othermaciej>
if you make it only represent status for the whole group, we won't be stuck with such things

[20:52:04.0000] <nessy>
what is "working right for slaved tracks of different duration"? what do you expect should happen? it is possible to make that happen in any of the proposals IMHO

[20:52:05.0000] <othermaciej>
the timeline would be max of all timelines

[20:52:06.0000] <Hixie>
othermaciej: you wouldn't be able to mute the audio of just the master track

[20:53:00.0000] <Hixie>
othermaciej: you wouldn't be able to seek just the master track

[20:53:01.0000] <Hixie>
othermaciej: the list goes on and on and on

[20:53:02.0000] <othermaciej>
separate playback rate controls for individual tracks doesn't really have much of a use case

[20:53:03.0000] <othermaciej>
your suggested use cases do not seem realistic or useful as reviewed by media experts

[20:53:04.0000] <Hixie>
it's just an example of something we get blocked out of

[20:54:00.0000] <Hixie>
anything that relies on the api to control an individual track as opposed to the group is screwed

[20:54:01.0000] <othermaciej>
seeking just the master track also seems useless

[20:54:02.0000] <Hixie>
nessy: either the master's video.duration is the resource's duration (in which case you lose the ability to see the group's) or it's the group's (in which case you lose the ability to see the resource's)

[20:54:03.0000] <othermaciej>
well, if we ever have real use cases for and practical implementability of individual playback control of sync'd tracks, we can add new API for that

[20:55:00.0000] <Hixie>
othermaciej: you keep dismissing abilities as having no use cases but the whole point is to have a simple api that enables any use case

[20:55:01.0000] <othermaciej>
right now, there aren't good use cases, and it's not practical to implement

[20:55:02.0000] <othermaciej>
Hixie: you sound like an RDF guy right now

[20:55:03.0000] <Hixie>
hah

[20:55:04.0000] <Hixie>
based on what Jer was saying, it's quite feasible to implement a MediaController approach

[20:55:05.0000] <nessy>
I'm not opposed to a MediaController approach either

[20:56:00.0000] <nessy>
I think we have to solve the same problems for all of the proposals, btw

[20:56:01.0000] <othermaciej>
it is, it will just have severe limitations that make the edge case use cases not really work

[20:56:02.0000] <othermaciej>
and it will break compat with existing controller code if you ever use syncing

[20:56:03.0000] <Hixie>
what severe limitations?

[20:56:04.0000] <othermaciej>
and poor performance if you don't hit the sweet spot

[20:57:00.0000] <Hixie>
so would the other proposal

[20:57:01.0000] <Hixie>
and the existing controllers don't just work with the asymetric proposal either

[20:57:02.0000] <othermaciej>
you can't actually control playback of the individual tracks separately live

[20:58:00.0000] <Hixie>
the asymetric proposal allows that too, to the same extent (except that you can't do the master track for a random reason)

[20:58:01.0000] <nessy>
the master is not independent of its slaves, that's right

[20:58:02.0000] <Hixie>
so it would have the same "severe limitation"

[20:58:03.0000] <Hixie>
(or as i would put it, and as jer put it, "quality of implementation issue")

[20:59:00.0000] <Hixie>
othermaciej: the difference between this and rdf is that in this case, we get the various abilities and a consistent api by having a _simpler_ solution

[20:59:01.0000] <othermaciej>
sure, but if every implementation is going to have a QoI issue that makes a feature not practical to use, it's not helpful to say it's just a QoI issue

[20:59:02.0000] <nessy>
my main objection is whether it can be implemented, since the controller basically has its own independent timeline

[20:59:03.0000] <Hixie>
othermaciej: so should we not support seeking in the current api either?

[21:00:00.0000] <othermaciej>
I think it's debatable whether adding new API or making existing API modal is simpler

[21:00:01.0000] <Hixie>
othermaciej: or playbackRate?

[21:00:02.0000] <nessy>
however, we could always assume that the first element that is slaved to the controller is the main one to define the timeline from a sw implementation pov

[21:00:03.0000] <Hixie>
the video api is full of things that have QoI issues

[21:00:04.0000] <Hixie>
nessy: what do you mean by "timeline"?

[21:01:00.0000] <nessy>
clock

[21:01:01.0000] <Hixie>
nessy: the MediaController spec already defines that

[21:01:02.0000] <nessy>
it drives the playbackRate of all the slaves

[21:01:03.0000] <nessy>
so, it needs to have a clock

[21:01:04.0000] <Hixie>
"All the slaved media elements of a MediaController must use the same clock for their definition of their media timeline's unit time."

[21:01:05.0000] <nessy>
and in all media frameworks that I know, there is no such thing as an abstract clock - it's always bound to a specific resource

[21:02:00.0000] <Hixie>
no need to define which one it is, since it doesn't matter which one it is so long as there is only noe

[21:02:01.0000] <nessy>
(I'm talking implementation, not definition)

[21:02:02.0000] <Hixie>
one

[21:02:03.0000] <Hixie>
ah ok

[21:02:04.0000] <Hixie>
i don't see the problem then

[21:03:00.0000] <Hixie>
why would it be any different to implement?

[21:03:01.0000] <nessy>
yeah, all I am saying is that it's probably a hack to get it implemented and not as clean as it might seem

[21:03:02.0000] <nessy>
i.e. if you happen to remove during playback the one element that defines the timeline, all sorts of things may go wrong

[21:04:00.0000] <Hixie>
if you remove anything during playback, you need to redo the group anyway

[21:04:01.0000] <Hixie>
according to jer

[21:04:02.0000] <Hixie>
so that's rather academic

[21:04:03.0000] <Hixie>
also, you can do that with your proposal too :-)

[21:04:04.0000] <nessy>
you could remove any slave without affecting the timeline

[21:04:05.0000] <nessy>
removing the master is kinda dumb

[21:05:00.0000] <Hixie>
removing a slave, according to jer, will cause stalling

[21:05:01.0000] <nessy>
when you have a controller, yes, because you may need to find another element to become the timeline master

[21:05:02.0000] <Hixie>
no, in general

[21:05:03.0000] <Hixie>
not because of the controller

[21:05:04.0000] <nessy>
I don't thinks - that's not how I interpreted Jer's feedback

[21:06:00.0000] <nessy>
s/thinks/think so/

[21:06:01.0000] <Hixie>
ah, correction, he was talking about adding tracks

[21:06:02.0000] <Hixie>
in any case, what's the use case for every adding or removing tracks on the fly?

[21:06:03.0000] <nessy>
yeah, I guess hooking that into the master or controller would take time

[21:07:00.0000] <Hixie>
it seems like a rare event, so i don't see much point worrying about it

[21:07:01.0000] <Hixie>
and since both proposals have the problem, it seems academic

[21:07:02.0000] <nessy>
not at all - what if you are playing a video and mid-video you turn on the audio description track?

[21:07:03.0000] <Hixie>
it would already be slaved

[21:07:04.0000] <nessy>
I think that use case is more common than looping ;-)

[21:07:05.0000] <Hixie>
just disabled

[21:08:00.0000] <Hixie>
looping of synced content isn't common at all as far as i'm aware

[21:08:01.0000] <nessy>
disabled tracks aren't loaded and thus aren't progressing in time

[21:08:02.0000] <Hixie>
they can be

[21:08:03.0000] <Hixie>
they certainly will be loaded

[21:08:04.0000] <nessy>
(agree on the looping - I can't think of having seen that anywhere)

[21:09:00.0000] <Hixie>
my point is just that the problem exists with all the proposals

[21:09:01.0000] <nessy>
why would you load a resource that you're not using?

[21:09:02.0000] <Hixie>
because you might use it

[21:09:03.0000] <Hixie>
that's what prefetching is all about

[21:10:00.0000] <nessy>
yes, but in this case prefetching doesn't make much sense for disabled tracks

[21:10:01.0000] <nessy>
in particular if you have a video with 52 dubbed audio tracks where you only want to play one

[21:10:02.0000] <Hixie>
*shrug* sure, the author would say which to prefetch

[21:12:00.0000] <nessy>
all I am saying is that in my understanding the implementation would be a hack that would probably decide on a master video or audio anyway

[21:12:01.0000] <nessy>
this does not mean, however, that we have to define the html markup and api in that way

[21:12:02.0000] <Hixie>
i'm not sure i understand your use of the word "hack", but ok

[21:14:00.0000] <nessy>
a "hack" in that the concept that is defined in the controller as a clock that applies to all elements would in the implementation mean to clock of one element to which the others are slaved

[21:14:01.0000] <nessy>
I can see advantages of the controller approach

[21:15:00.0000] <Hixie>
but the spec doesn't say the controller has a clock

[21:15:01.0000] <Hixie>
it says the slaved elements must have the same clock, that's all

[21:15:02.0000] <nessy>
I would almost feel compelled to give the controller a css rendering area of its own even, so we can use css to arrange all the slave elements into that box and provide a single transport bar over all of them

[21:16:00.0000] <roc>
I want to implement API to list and select in-band tracks in a single media element, and punt on the out-of-band stuff until we understand how RTC and advanced audio API fit in

[21:16:01.0000] <Hixie>
(in practice you have to use the clock of the sound card. in your proposal, what would happen if the master was silent and there were two slaved audio tracks? the UA would have to use the clock of one of the audio tracks.)

[21:16:02.0000] <roc>
if the master is silent you can pretend it has an audio track of all silence and mix the slaves into it

[21:16:03.0000] <Hixie>
roc: i had been hoping to punt the api for the same reason, but unfortunately nessy then escalated the issue which is how we ended up discussing it :-)

[21:17:00.0000] <nessy>
I did not escalate the issue - I've not ever escalated any issue!

[21:17:01.0000] <Hixie>
http://www.w3.org/html/wg/tracker/issues/152 says "This issue was raised on behalf of Silvia Pfeiffer"

[21:17:02.0000] <nessy>
but I certainly registered the bug

[21:18:00.0000] <Hixie>
http://www.w3.org/Bugs/Public/show_bug.cgi?id=9452#c8 is where the TrackerRequest keyword was added, which indeed suggests otherwise

[21:26:00.0000] <nessy>
I guess it was just raised as part of the bugs that were registered pre last call

[21:26:01.0000] <nessy>
anyway...

[21:27:00.0000] <nessy>
what influence does RTC have on mutltirack?

[21:27:01.0000] <Hixie>
hard to know in advance

[21:27:02.0000] <Hixie>
in the current proposal they share the audioTracks and videoTracks attributes

[21:27:03.0000] <Hixie>
amongst other things

[21:27:04.0000] <Hixie>
(like both using <video>)

[21:27:05.0000] <nessy>
do you want to make use of the controller concept for rtc?

[21:28:00.0000] <Hixie>
i'm not currently aware of any reason to use MediaController in the context of video conferencing, but naturally we'd have to make sure how they interact is defined

[21:30:00.0000] <nessy>
or asked otherwise: why do you have a GeneratedStream API, when it is basically the same as the MediaController?

[21:30:01.0000] <nessy>
aren't they basically achieving the same thing?

[21:30:02.0000] <nessy>
(really trying to understand it - no criticism)

[21:32:00.0000] <Hixie>
i don't understand in what way they are similar :-)

[21:32:01.0000] <Hixie>
they have nothing in common as far as i can tell

[21:33:00.0000] <nessy>
a controller synchronizes multiple audio and video streams - so does a generatedStream

[21:34:00.0000] <Hixie>
a generatedstream just exposes a local webcam

[21:34:01.0000] <Hixie>
it doesn't do synchronisation

[21:34:02.0000] <Hixie>
not in the sense that mediacontroller does

[21:34:03.0000] <nessy>
so the audio and video tracks inside it are not synchronized?

[21:34:04.0000] <Hixie>
they're one media stream

[21:35:00.0000] <nessy>
is the difference that the GeneratedStream is creating data, while the MediaController is playing back data?

[21:35:01.0000] <Hixie>
the mediacontroller doesn't play back data

[21:35:02.0000] <Hixie>
it just ensures a number of <video> elements have the same clock

[21:35:03.0000] <Hixie>
it's like saying a <video> is the same as a mediacontroller, which i think is equally non-sequitur, though i guess you are proposing that too :-)

[21:35:04.0000] <nessy>
â¦ and they play them back in sync, so indirectly, it does that

[21:36:00.0000] <nessy>
a <video> has a controller, if you want it or not - it may not be exposed ;-)

[21:36:01.0000] <Hixie>
overloading objects to do many related things is bad api design

[21:37:00.0000] <Hixie>
one should just have one object per task

[21:37:01.0000] <nessy>
sure

[21:37:02.0000] <Hixie>
(video, in retrospect, is poorly designed because it amalgamates video fetch and video playback)

[21:37:03.0000] <nessy>
I'm trying to understand the difference ...

[21:37:04.0000] <nessy>
and if we say that there is a difference, then I also don't see a need to have one wait for the other to be defined

[21:39:00.0000] <Hixie>
things that interact need to be designed with each other in mind

[21:39:01.0000] <Hixie>
otherwise you end up with apis that look like, well, a lot of the web's apis

[21:39:02.0000] <othermaciej>
fair point; though there is also value to doing things incrementally

[21:39:03.0000] <othermaciej>
it is hard to strike the right balance

[21:39:04.0000] <nessy>
yeah, unfortunately, it is impossible to solve all the world's problems at the same time - you end up achieving nothing

[21:39:05.0000] <Hixie>
incrementally is fine too, but it risks getting things like the video element :-)

[21:40:00.0000] <Hixie>
nessy: what i often do in the whatwg spec is overdesign and then comment-out large parts of the feature

[21:40:01.0000] <nessy>
yeah, I learnt that recently - I was indeed curious!

[21:40:02.0000] <Hixie>
nessy: the (new) drag-and-drop api being one example, where the spec already has support for a number of things that aren't in the spec, like promises and file objects (or is it blob objects)

[21:41:00.0000] <Hixie>
or like automatic ducking in the multitrack feature

[21:41:01.0000] <Hixie>
which is in there but commented out

[21:41:02.0000] <nessy>
is there a way to view the spec will all your commented out things>

[21:41:03.0000] <nessy>
?

[21:41:04.0000] <Hixie>
view > source :-)

[21:41:05.0000] <nessy>
lol

[21:42:00.0000] <nessy>
okâ¦ I might browse the repository - I find that easier

[21:42:01.0000] <Hixie>
(though you're better off just looking at the /source file)

[21:42:02.0000] <roc>
Hixie: I think there could be an indirect relationship between RTC and multitrack

[21:42:03.0000] <nessy>
anyway - I am planning to try and design the multitrack with a conroller in mind, too, independently of what you did, and see where that takes me

[21:42:04.0000] <nessy>
â¦ might end up having a clearer view of things then

[21:43:00.0000] <nessy>
roc: how so? do you have a hunch?

[21:43:01.0000] <roc>
Hixie's RTC proposal defines Streams which can be used as sources for media elements

[21:44:00.0000] <roc>
maybe that feature isn't literally in Hixie's draft, but it's clearly coming

[21:44:01.0000] <Hixie>
it's there

[21:44:02.0000] <Hixie>
there's even an example

[21:44:03.0000] <roc>
therefore multitrack synchronization needs to work with Streams

[21:44:04.0000] <Hixie>
search for "Snapshot Kiosk"

[21:45:00.0000] <roc>
furthermore

[21:45:01.0000] <roc>
if we define an advanced audio API based on Streams

[21:45:02.0000] <roc>
(including integrating existing audio API proposals with Streams)

[21:46:00.0000] <roc>
then that API will almost certainly allow mixing of multiple sources

[21:46:01.0000] <roc>
which will need to be synchronized

[21:47:00.0000] <roc>
which creates considerable overlap with MediaController and related proposals

[21:47:01.0000] <nessy>
GeneratedStream is the thing that synchronizes them, right?

[21:47:02.0000] <Hixie>
GeneratedStream is just a representation of the local WebCam's output

[21:48:00.0000] <Hixie>
it doesn't synchronise anything

[21:48:01.0000] <Hixie>
you can think of it as a remote stream

[21:48:02.0000] <Hixie>
rtsp://whatever/foo

[21:49:00.0000] <roc>
in particular any advanced audio API is likely to need a way to get a Stream (or equivalent) representing an arbitrary media resource, and mix those Streams together in a synchronized way, optionally with effects

[21:50:00.0000] <roc>
at which point you almost have the functionality of a MediaController

[21:50:01.0000] <roc>
even if the APIs stay unrelated (I'm not sure if that's wise or not), the implementation probably should have much in common

[21:51:00.0000] <roc>
at least in Gecko, where we're not shackled by some media framework

[21:51:01.0000] <roc>
am I making sense?

[21:55:00.0000] <roc>
I guess not :-)

[21:55:01.0000] <nessy>
/me is thinking...

[21:56:00.0000] <nessy>
well, if the implementation shares a lot, that would not have much of an effect on the markup and API, I guess

[21:56:01.0000] <Hixie>
hmm...

[21:57:00.0000] <nessy>
I am trying to understand how the streams are synchronized in the rtc proposal

[21:59:00.0000] <Hixie>
having added a combined currentTime feature, i wonder whether to just force the slaved tracks to be aligned up and not support offsets at all

[21:59:01.0000] <Hixie>
since offsets would have to be implicit, which is confusing

[21:59:02.0000] <Hixie>
hmm

[22:00:00.0000] <Hixie>
/me isn't liking the implications of having to add currentTime to the media controller

[22:00:01.0000] <Hixie>
nessy: nothing synchronises anything in the PeerConnection/GeneratedStream world

[22:00:02.0000] <Hixie>
nessy: there's nothing to synchronise

[22:01:00.0000] <nessy>
a local audio and video stream that are recorded and then sent to the other side would need to be synchronized to each other

[22:01:01.0000] <Hixie>
they're one stream

[22:01:02.0000] <nessy>
s/recorded/captured/

[22:02:00.0000] <Hixie>
that's like asking what synchronises the audio and video in a .mov file

[22:02:01.0000] <Hixie>
they're never _not_ synchronised

[22:02:02.0000] <nessy>
yes, and there is an answer: the container

[22:02:03.0000] <Hixie>
same answer applies here

[22:02:04.0000] <nessy>
are they being put in a container?

[22:03:00.0000] <nessy>
by the GeneratedStream object?

[22:03:01.0000] <nessy>
then it does the synchronization

[22:03:02.0000] <Hixie>
the user agent serialises them (with a container) as part of RTP

[22:03:03.0000] <Hixie>
(or as part of the StreamRecorder when recording to a file)

[22:04:00.0000] <Hixie>
this is an entirely different, and far less interesting, kind of synchronisation than what we're talking about with MediaController

[22:04:01.0000] <nessy>
anyway â¦ more importantly your question before...

[22:05:00.0000] <nessy>
I would agree that we should not support offsets

[22:05:01.0000] <Hixie>
well we'd still support offsets, either now or eventually

[22:05:02.0000] <Hixie>
the question is when we do, what should the api look like

[22:05:03.0000] <nessy>
the by far most common use case for multitrack is same length audio and video tracks that all start at the same time and all end at roughly the same time

[22:06:00.0000] <Hixie>
that's a self-fulfilling prophecy if we design it to only truly cater for that use case

[22:07:00.0000] <nessy>
maybe there are two fundamentally different use cases that we are trying to satisfy with the same approach

[22:07:01.0000] <Hixie>
if we instead do as roc is suggesting, and design this with the audio api in mind, then "drum machines" as you call them (and more specifically, the audio synchronisation in video games) might well be far more common use cases

[22:08:00.0000] <Hixie>
on the long run

[22:09:00.0000] <Hixie>
even if we don't support that, i think things like director's commentaries are going to be a major use case, and they're often not the same length as the video

[22:09:01.0000] <nessy>
they still start at the same time

[22:09:02.0000] <Hixie>
usually

[22:09:03.0000] <Hixie>
though often they're silent for a while at the start

[22:09:04.0000] <nessy>
overhang at the end is not as big a problem as different playback positions for each track

[22:09:05.0000] <Hixie>
different playback positions isn't a problem :-)

[22:10:00.0000] <nessy>
how do you create a common transport bar then?

[22:10:01.0000] <Hixie>
we can easily have the media controller define a zero point and a total duration that spans the earliest point to the latest point, taking offsets into account

[22:11:00.0000] <zewt>
for a commentary track that doesn't start immediately, that can probably be done by having a timestamp offset in the file itself, at authoring time to match the video track it's for--rather than setting it by hand in script

[22:11:01.0000] <nessy>
ok, then currentTime would be the time on that transport bar - where is the problem?

[22:11:02.0000] <Hixie>
nessy: you're the one who said there was a problem :-)

[22:12:00.0000] <nessy>
you said:

[22:12:01.0000] <Hixie>
zewt: yeah, that would be ideal

[22:12:02.0000] <nessy>
"having added a combined currentTime feature, i wonder whether to just force the slaved tracks to be aligned up and not support offsets at all

[22:12:03.0000] <nessy>
since offsets would have to be implicit, which is confusing"

[22:14:00.0000] <Hixie>
here's what i just wrote in the e-mail i'm writing in response to all the feedback:

[22:14:01.0000] <Hixie>
Originally, the tracks could be offset because their .currentTime attributes were advanced at a fixed rate, and the MediaController didn't                                            have any concept of the currentTime, so just changing the currentTime of  a media element offset the video by the difference between the old and    new values. I guess theoretically we can still do that, but it becomes kind of weird  that you can change the currentTime of each video in 

[22:15:00.0000] <Hixie>
oh that didn't wrap right

[22:15:01.0000] <Hixie>
second try:

[22:15:02.0000] <Hixie>
Originally, the tracks could be offset because their .currentTime

[22:15:03.0000] <Hixie>
attributes were advanced at a fixed rate, and the MediaController didn't

[22:15:04.0000] <Hixie>
have any concept of the currentTime, so just changing the currentTime of

[22:15:05.0000] <Hixie>
a media element offset the video by the difference between the old and

[22:15:06.0000] <Hixie>
new values.

[22:15:07.0000] <Hixie>
I guess theoretically we can still do that, but it becomes kind of weird

[22:15:08.0000] <Hixie>
that you can change the currentTime of each video in turn, and when you

[22:15:09.0000] <Hixie>
change the first one, the controller's "duration" changes, and then

[22:15:10.0000] <Hixie>
suddenly when you change the last slaved media elements's currentTime, the

[22:16:00.0000] <Hixie>
duration changes back.

[22:17:00.0000] <nessy>
all good thoughts!

[22:20:00.0000] <nessy>
I think we're starting to feel the pain between close and loose coupling

[23:07:00.0000] <Hixie>
actually i guess i have to support the offset thing, because otherwise setting currentTime on the video would be even weirder

[23:07:01.0000] <Hixie>
i wonder what nessy did in her proposal

[23:08:00.0000] <Hixie>
"currentTime of the slaves is turned into a readonly attribute"

[23:08:01.0000] <Hixie>
o_O

[23:08:02.0000] <Hixie>
nessy: what does "currentTime of the slaves is turned into a readonly attribute" mean in your proposal?

[23:09:00.0000] <nessy>
it means that they slaves are slaved to the timeline of the master and cannot seek on their own

[23:10:00.0000] <Hixie>
so what happens when you set a slave's .currentTime attribute?

[23:10:01.0000] <nessy>
however, they may not be fully in sync with the master, so the currenTime does display where they are actually at

[23:10:02.0000] <nessy>
nothing - it's rejected

[23:10:03.0000] <nessy>
but that was something I randomly made up - not sure it makes sense

[23:10:04.0000] <Hixie>
the setter just ignores the new value?

[23:10:05.0000] <nessy>
it was part of slaving everything to the master

[23:10:06.0000] <nessy>
yes

[23:10:07.0000] <Hixie>
huh

[23:11:00.0000] <nessy>
I guess it would be possible - if the master is paused - to set the slave and play with it individually

[23:12:00.0000] <nessy>
but as soon as the master (or controller) is touched, then the slaves would re-sync with it

[23:13:00.0000] <Hixie>
it seems really weird to have a mutable attribute whose value changes but which ignores values it is set to

[23:14:00.0000] <Hixie>
i wonder how else to handle this

[23:14:01.0000] <Hixie>
i guess i'll have to support the offsets after all

[23:14:02.0000] <Hixie>
hmm

[23:24:00.0000] <nessy1>
curious: what does it have to do with offsets?

[23:24:01.0000] <Hixie>
ignoring a new value in a mutable attribute is bad api design, so imho not an option

[23:24:02.0000] <nessy1>
ok, fair enough - but how else to deal with it?

[23:24:03.0000] <Hixie>
exactly

[23:25:00.0000] <Hixie>
if we have to make it do something, what is the logical thing for it to do?

[23:25:01.0000] <Hixie>
i see two options:

[23:25:02.0000] <nessy1>
you could play independently, I guess

[23:25:03.0000] <Hixie>
making all the currentTimes into proxies for each other, and making it just change that element's position

[23:25:04.0000] <nessy1>
/me is on a ferry, so may drop out randomly, sorry

[23:25:05.0000] <Hixie>
now if we grant that the elements must remain synced, then the second is equivalent to setting an offset

[23:26:00.0000] <Hixie>
the former seems bad because there's no intuitive reason why setting one track's position should affect other tracks, especially since it might set the other tracks to entirely different numbers

[23:26:01.0000] <Hixie>
(since they might have different "zero" times)

[23:26:02.0000] <nessy1>
except if you interpret the second as a local positioning only - so when the user changes the currentTime of the controller, it snaps back into place

[23:27:00.0000] <Hixie>
that would be essentially useless, especially while playing

[23:27:01.0000] <Hixie>
designing useless APIs is also bad api design :-)

[23:27:02.0000] <nessy1>
how so?

[23:27:03.0000] <Hixie>
it's essentially the same as saying it's ignored

[23:28:00.0000] <nessy1>
I can see it very useful - e.g. I have a sign language track and a main video - I watch both - I miss some parts in the sign language and just scroll back on that to watch something again - then I play the full composition again in sync

[23:28:01.0000] <Hixie>
if you can play one track and the others don't move then it's not synced...

[23:28:02.0000] <nessy1>
not when you directly interact with it

[23:29:00.0000] <nessy1>
isn't that the beauty of a controller?

[23:29:01.0000] <Hixie>
the beauty of a controller is that the api isn't asymetric

[23:29:02.0000] <nessy1>
that it only controls when interacted with it and otherwise leaves the slaves alone?

[23:30:00.0000] <Hixie>
you can't interact with a controller, it's a js object, it has no UI

[23:30:01.0000] <Hixie>
i'm not sure i follow what you're proposing

[23:30:02.0000] <Hixie>
anyway i have to go to bed now

[23:30:03.0000] <nessy1>
well, if they are all slaved together, then I don't see why the first option doesn't make sense

[23:30:04.0000] <Hixie>
i'll finish this tomorrow night i guess

[23:30:05.0000] <nessy1>
no worries

[23:30:06.0000] <nessy1>
nn

[23:30:07.0000] <nessy1>
(it's hard!)

[23:31:00.0000] <Hixie>
this is by orders of magnitude not what i'd call hard, it's just finicky

[23:31:01.0000] <Hixie>
if you think this is hard you should try writing the html parser spec :-)

[23:32:00.0000] <Hixie>
nn

[00:48:00.0000] <zcorpan>
Hixie: i'm happy to review books

[00:49:00.0000] <zcorpan>
at least if "review" means "point out errors to the author", not "publish a review to make the book sell more copies"

[00:57:00.0000] <VISHAL>
Hi

[00:57:01.0000] <VISHAL>
Hope this is the right channel to ask about html5

[01:02:00.0000] <VISHAL>
i am trying to access the server to get some data using ajax aplication is on same server but it shows Origin null is not allowed by Access-Control-Allow-Origin

[01:15:00.0000] <zcorpan>
Hixie: there's a problem with overlaying a sign-language video and using native controls

[01:15:01.0000] <zcorpan>
Hixie: because the overlaid video overlaps the native controls

[01:19:00.0000] <zcorpan>
/me filed a bug

[01:26:00.0000] <hsivonen>
what's the most realistic documentation of mutation events?

[02:46:00.0000] <gsnedders>
Where does WebIDL forbid assignment to read only attributes in the ES binding?

[02:50:00.0000] <gsnedders>
Oh, "The attribute setter is undefined if the attribute is declared readonly and has neither a [PutForwards] nor a [Replaceable] extended attribute declared on it"

[02:51:00.0000] <gsnedders>
Which means that the exact behaviour depends upon strict-mode

[02:54:00.0000] <foolip>
Hixie, I'm here now

[03:06:00.0000] <Lachy>
Hixie, yt?

[03:10:00.0000] <jgraham>
gsnedders: Yes]

[03:10:01.0000] <jgraham>
Lachy: 00:34 < Hixie> anyway i have to go to bed now

[03:11:00.0000] <jgraham>
I know that isn't always a reliable indicator, but it was 4 hours ago

[03:12:00.0000] <Lachy>
jgraham, "00:34" is 11 hours ago, unless you're running in a weird timezone

[03:13:00.0000] <jgraham>
Yes the server is in the US somewhere and I am too lazy to change the timezone in irssi

[03:13:01.0000] <Lachy>
ok

[03:15:00.0000] <zcorpan>
ok i have updated http://dev.w3.org/html5/html4-differences/

[03:16:00.0000] <zcorpan>
i guess i should set the date to 5th also

[03:17:00.0000] <zcorpan>
there

[03:33:00.0000] <jgraham>
Hixie: BTW I might also be interested in doing book review, if they need more volunteers (assuming the same definition as zcorpan)

[03:36:00.0000] <jgraham>
MikeSmith: BTW, as gsnedders reminded me, I will not be around on 20th May, and possibly some of the following week

[03:52:00.0000] <hsivonen>
anyone got an insertAdjacentHTML test suite_

[03:52:01.0000] <hsivonen>
?

[03:55:00.0000] <jgraham>
I don't at least

[04:09:00.0000] <hsivonen>
googling for mutation events shows an unfortunate interest in them

[04:28:00.0000] <hsivonen>
Someone seem to believe that whatwg members want to filter Norm: http://twitter.com/#!/gimsieke/status/51567252096548865

[05:50:00.0000] <MikeSmith>
jgraham: how about the week of May 8 to 14?

[05:50:01.0000] <jgraham>
MikeSmith: That is good for me, but before gsnedders finishes his exams

[05:50:02.0000] <MikeSmith>
oh

[05:51:00.0000] <MikeSmith>
anyway, I'm busy on the 20th as well

[05:51:01.0000] <MikeSmith>
but free after that

[05:51:02.0000] <jgraham>
I will *probably* be free the following week

[05:52:00.0000] <jgraham>
Not sure about gsnedders though

[05:52:01.0000] <MikeSmith>
OK, let's see what he says when he's back here

[05:53:00.0000] <MikeSmith>
zcorpan: doc looks good

[05:53:01.0000] <MikeSmith>
I will try to get it staged up today at http://www.w3.org/TR/2011/WD-html5-diff-20110405/

[05:55:00.0000] <MikeSmith>
hmm "The action and formaction attributes are no longer allowed to have the empty string as value."

[05:56:00.0000] <MikeSmith>
/me tries to remember if any validator fix has been made for that yet

[05:56:01.0000] <MikeSmith>
oh yeah, value is common.data.uri.non-empty

[05:58:00.0000] <zcorpan>
MikeSmith: cool

[06:06:00.0000] <hsivonen>
wow. this time writing test cases really pays off

[06:06:01.0000] <hsivonen>
/me is implementing insertAdjacentHTML

[06:07:00.0000] <jgraham>
hsivonen:  Planning to release the tests?

[06:08:00.0000] <hsivonen>
jgraham: yes, in the "pushed to m-c" sense

[06:08:01.0000] <hsivonen>
jgraham: other publication depends on how easy it is to repurpose mochitests as HTML WG tests

[06:17:00.0000] <hsivonen>
jgraham: the tests are now public but not necessarily useful outside mochitest: https://bugzilla.mozilla.org/attachment.cgi?id=523283&action=diff

[06:28:00.0000] <volkmar>
someone knows what could be the labels attribute use case? (I see a few internal browser stuff but not for authors)

[06:29:00.0000] <hsivonen>
jgraham: Is the execution flow in HTML WG test harness one-to-one mappable to mochitest yet?

[06:41:00.0000] <jgraham>
hsivonen: I think the answer to your question is probably "no" although I don't understand the question.

[06:42:00.0000] <jgraham>
One could write a MochiTest wrapper for the HTML WG harness

[06:42:01.0000] <hsivonen>
jgraham: could I just take the tests that I linked to above, change the assertion function names and have it work?

[06:42:02.0000] <jgraham>
No

[06:42:03.0000] <hsivonen>
(maybe adding some kind of explicit finish() call)

[06:42:04.0000] <hsivonen>
jgraham: ok :-(

[06:43:00.0000] <zcorpan>
jgraham: btw, it'd be nice with a second version of t.step() that returns a function

[06:44:00.0000] <hsivonen>
jgraham: I'd really like to get to a point where the difference between Mochtest and HTML WG tests is just trivialities in naming that can be addressed with a simple wrapper

[06:44:01.0000] <hsivonen>
but I really don't expect to spend the time to adapt mochitests to .step() in order to contribute

[06:56:00.0000] <jgraham>
zcorpan: Yes, I was thinking t.step_func or so

[06:57:00.0000] <jgraham>
hsivonen: It would be trivial to write a wrapper that collected the results of a HTMLWG test and returned them to mochitest

[06:57:01.0000] <jgraham>
s/HTMLWG/testharness.js/

[06:57:02.0000] <jgraham>
zcorpan: I can add that now if you need it

[06:58:00.0000] <hsivonen>
jgraham: what about the other way round?

[06:58:01.0000] <jgraham>
hsivonen: I don't know about the other way around because I don't know how MochiTest exposes its test results

[06:59:00.0000] <jgraham>
testharness.js has callbacks for each test that completes and for the whole suite completing

[07:00:00.0000] <jgraham>
So you would just hook into those and do something like function on_result(test) {is(test.result === test.PASS, test.message)}

[07:00:01.0000] <jgraham>
(and hook on_result up to the right callbacks)

[07:02:00.0000] <zcorpan>
jgraham: that'd be nice

[07:03:00.0000] <hsivonen>
jgraham: what about window.onerror?

[07:08:00.0000] <jgraham>
hsivonen: What about it?

[07:09:00.0000] <hsivonen>
jgraham: are tests that rely on window.onerror now accepted in HTML WG test submissions?

[07:09:01.0000] <jgraham>
Rely on it in what way? Tests that test it are fine

[07:10:00.0000] <jgraham>
Tests that require it when they don't need to seem extremely dubious to me

[07:10:01.0000] <hsivonen>
jgraham: If something in the global scope fails, it is caught by window.onerror

[07:11:00.0000] <hsivonen>
which would matter if we submitted tests that failed in some UA

[07:11:01.0000] <jgraham>
hsivonen: In general relying on that is discouraged, not least becase when testing window.onerror one will need exceptions that propogate to the global scope

[07:14:00.0000] <zcorpan>
jgraham: step_func would support only one argument, right? javascript doesn't support passing along an arbitrary number of arguments, does it

[07:15:00.0000] <jgraham>
zcorpan: Sure it does

[07:16:00.0000] <zcorpan>
oh?

[07:16:01.0000] <hsivonen>
I think Mozilla needs someone whose primary work item is wrapping HTML WG tests into the mochitest reporting system and wrapping mochitests into the HTML WG reporting system

[07:16:02.0000] <jgraham>
hsivonen: http://hoppipolla.co.uk/tests/insert_adjacent_html.html is a very quick transliteration, which probably has bugs

[07:19:00.0000] <gsnedders>
MikeSmith: 8 to 14th definitely can't do. Week after the 20th I *might* be able to do. Almost certainly end of that is doable.

[07:19:01.0000] <MikeSmith>
ok

[07:21:00.0000] <Workshiva>
zcorpan: apply is your friend

[07:21:01.0000] <jgraham>
Workshiva: Or your enemy

[07:22:00.0000] <Workshiva>
Only if you mistreat it

[07:26:00.0000] <zcorpan>
ah

[07:26:01.0000] <zcorpan>
/me doesn't know the javascript fu

[07:26:02.0000] <hsivonen>
jgraham: there are somefailures in the translation in my build that passes the mochitest

[07:27:00.0000] <hsivonen>
jgraham: all "Should have had <a> as next sibling" tests throw

[07:28:00.0000] <hsivonen>
and tests 30 though 33 say expected is undefined

[07:28:01.0000] <jgraham>
so you ant to be able to do something like something.some_event = t.step_func(function(e) {assert_equals(1, e.a)}) or something?

[07:29:00.0000] <zcorpan>
yes

[07:30:00.0000] <zcorpan>
so one argument is good enough for me

[07:34:00.0000] <Workshiva>
Just make sure you get an argument and not abuse

[07:36:00.0000] <jgraham>
hsivonen: typo, fixed

[07:38:00.0000] <jgraham>
Oh, I missed the "script should not have run" bits

[07:40:00.0000] <hsivonen>
jgraham: now all tests pass

[07:43:00.0000] <jgraham>
hsivonen: Fancy cleaning up the "script should not have run" bits (e.g. by setting a flag in the script and checking its value doesn't change) and submitting to HTML WG?

[07:44:00.0000] <jgraham>
Or I could do that I supposeâ¦

[07:54:00.0000] <gsnedders>
MikeSmith: I guess a more reasonable question from my POV is when is the latest the meeting can be to suit you?

[07:55:00.0000] <MikeSmith>
the end of that week I guess

[08:02:00.0000] <hsivonen>
jgraham: I can do it, but if you are already doing it, go ahead

[08:04:00.0000] <gsnedders>
MikeSmith: mmhmm, maybe doable

[08:06:00.0000] <jgraham>
gsnedders: Am I missing something on the RegExp.prototype.compile thread?

[08:07:00.0000] <gsnedders>
jgraham: I'm sure I am.

[08:08:00.0000] <jgraham>
gsnedders: OK, your reply makes sense to me

[08:13:00.0000] <gsnedders>
jgraham: At least it makes sense to someone

[08:54:00.0000] <zcorpan>
/me notes that there's no EventSourceSync for workers

[08:54:01.0000] <zcorpan>
but maybe that doesn't make any sense

[09:51:00.0000] <zewt>
... websql stopped because sqlite was too good? heh

[10:02:00.0000] <TabAtkins>
zewt: More precisely, sqlite was "good enough" that nobody seriously wanted to write an independent implementation.  It's still not very good, though.

[10:03:00.0000] <TabAtkins>
(We're currently using sqlite as the backing store for indexeddb, and it's pretty slow and horrible.  We're writing a specialized backing store just for it right now.)

[10:03:01.0000] <zewt>
sqlite is pretty excellent; it's definitely not "slow and horrible"

[10:03:02.0000] <TabAtkins>
Tell that to our indexeddb folks.

[10:04:00.0000] <zewt>
idb seems like a heinous wheel reinvention; the world doesn't need another completely distinct database vocabulary

[10:04:01.0000] <zewt>
(vs. sql)

[10:05:00.0000] <TabAtkins>
indexeddb is a pretty standard simple object store.

[10:06:00.0000] <zewt>
and they're spending all kinds of time trying to solve things like "how do we define multi-key indexes with different orderings on each key", stuff which is already solved in SQL

[10:07:00.0000] <TabAtkins>
Yes?

[10:07:01.0000] <zewt>
yes?

[10:07:02.0000] <zewt>
sorry, that's not a very meaningful response. heh

[10:07:03.0000] <TabAtkins>
SQL is still a relational model, which, for whatever reason, a lot of people simply can't wrap their heads around.  I don't understand why, because I found relational algebra pretty trivial, but whatever.

[10:08:00.0000] <TabAtkins>
Linear object stores appear to be much more intuitive to most people.

[10:08:01.0000] <TabAtkins>
And then we need to find a way to map more advanced concepts onto the simpler model, in a clean and understandable way.

[10:09:00.0000] <zewt>
i can't say i have much sympathy for people who can't understand SQL. heh

[10:09:01.0000] <zewt>
basic stuff.

[10:10:00.0000] <TabAtkins>
I have sympathy for developers in general.  That's why I obsess so much over things being simple in my specs.

[10:11:00.0000] <Philip`>
Given how many inexperienced people manage to develop web sites with PHP+MySQL, it seems it's understable enough to get by

[10:11:01.0000] <TabAtkins>
Have you looked at their databases?

[10:11:02.0000] <TabAtkins>
/me shudders.

[10:11:03.0000] <zewt>
heh, that may not be the most flattering comparison if you consider how secure those sites probably are on the whole :|

[10:11:04.0000] <Philip`>
s/understable/understandable/

[10:12:00.0000] <Philip`>
Their databases are probably no worse than their PHP code :-)

[10:12:01.0000] <TabAtkins>
Point. ^_^

[10:13:00.0000] <Philip`>
They've probably never heard of relation algebra but that doesn't stop them using the tools to solve their problems

[10:13:01.0000] <TabAtkins>
Indeed, and the relational algebra does *not* help them solve the problem.  They just bodge on and create something pretty bad.  We can offer them something that more closely matches their intuitive model, so when they just throw something together it's not as bad.

[10:15:00.0000] <zewt>
what bothers me a lot, though, is the notion that WebSQL development died because everyone used sqlite--that's exactly what they should be doing

[10:15:01.0000] <TabAtkins>
No, because then the web depends on sqlite's bugs, rather than the spec.

[10:15:02.0000] <zewt>
sqlite is in a small category of libraries that are so widely-used, heavily tested and robust that, for tasks it's designed for, it's generally a really bad idea to not use them (along with eg. zlib, libpng/jpeg, etc)

[10:16:00.0000] <TabAtkins>
All of those latter libraries definitely have problems as well, and we'd be better off if we spent the effort to reimplement them.

[10:16:01.0000] <TabAtkins>
They're just "good enough" that we don't do so.

[10:16:02.0000] <zewt>
none of those libraries need reimplementing.

[10:17:00.0000] <TabAtkins>
Luckily, the problems with those libraries are almost completely hidden from the web author.  Exposing sqlite via websqldb means its problems *aren't* hidden.

[10:18:00.0000] <TabAtkins>
Again, ask our devs.  I've heard a lot of chatter about people wanting to reimplement libpng, for example, due to its horribleness.

[10:18:01.0000] <Philip`>
Seems pretty typical for programmers to want reimplement everything - you always think you can do better yourself

[10:19:00.0000] <zewt>
heh

[10:19:01.0000] <zewt>
i'm not immune from NIH, but i'd never go there for that set of libraries

[10:24:00.0000] <Philip`>
(Usually you *can* do better, because you've got the experience of the old design and an extra decade of research, and better development tools and practices)

[10:24:01.0000] <Philip`>
(which makes it dangerously tempting)

[10:25:00.0000] <zewt>
oh, you could do better--but not enough better, IMO, to warrant throwing away the extra decade of testing and real-world use

[10:26:00.0000] <zewt>
(personally, zlib's buffering API always annoys me when I have to use it, for example, but everyone's used to it)

[10:27:00.0000] <Philip`>
(API problems are usually the easiest thing to resolve - just stick a wrapper API around it)

[10:27:01.0000] <zewt>
yeah.

[10:28:00.0000] <Philip`>
(libpng's use of setjmp is kind of nasty, but not enough to really matter)

[10:29:00.0000] <zewt>
oh yeah, i forgot about that. lua does that too

[10:29:01.0000] <TabAtkins>
I think that's one of the things that annoys some of our devs a lot.

[10:29:02.0000] <zewt>
that's pretty much wrappable too, i think.

[10:32:00.0000] <Philip`>
The more important problems are probably things like libjpeg using a poor decoding algorithm (given e.g. http://cbloomrants.blogspot.com/2011/02/02-13-11-jpeg-decoding.html)

[10:35:00.0000] <Philip`>
but then it's nice to fix the problems as non-disruptively as possible, e.g. change the implementation but don't redesign the whole API unless it's really necessary, and definitely don't make a whole new file format (e.g. WebP) that's incompatible with everybody else in the world

[10:35:01.0000] <zewt>
i'd sooner hope that improvements like that would make their way into libjpeg, not replace it outright

[10:36:00.0000] <zewt>
of course, that depends on how flexible libjpeg's internals are (which I have never needed to look at--which is a major part of why I like libjpeg so much :)

[10:41:00.0000] <stefan-_>
hi

[10:41:01.0000] <stefan-_>
how safe in terms of browser compat is it to use a contentEditable based editor?

[10:43:00.0000] <TabAtkins>
It's not.

[10:43:01.0000] <TabAtkins>
At least, not if you want to use execCommand().

[10:44:00.0000] <TabAtkins>
If you're willing to roll your own editting commands, then it's okay.

[10:44:01.0000] <stefan-_>
just for simple formatting (bold, underline, etc)

[10:45:00.0000] <stefan-_>
http://www.freshcode.co.za/plugins/jquery.contentEditable/demo.html

[10:45:01.0000] <stefan-_>
im using this one currently

[10:45:02.0000] <stefan-_>
seems to work ok in ie6 and chrome so far

[10:47:00.0000] <stefan-_>
so what you mean with rolling out my own editing commands?

[10:48:00.0000] <stefan-_>
http://www.quirksmode.org/dom/execCommand.html

[10:48:01.0000] <stefan-_>
nice

[10:48:02.0000] <stefan-_>
that should be satisfactory

[10:50:00.0000] <micheil>
Hixie: do you know if all vendors currently implementing websockets support the Events IDL?

[10:50:01.0000] <micheil>
(as in WebSocket inherits from the Events api)

[10:52:00.0000] <jgraham>
micheil: what do you actually mean?

[10:52:01.0000] <jgraham>
All relevant browsers implement DOM eventsâ¦

[10:52:02.0000] <micheil>
well, each websocket instance has the .addListener methods

[10:53:00.0000] <micheil>
is a websocket guaranteed to inherit from DOMEvents

[10:54:00.0000] <jgraham>
By the spec, sure

[10:54:01.0000] <jgraham>
browsers can have bugs ofc

[10:54:02.0000] <jgraham>
If you want to ensure that they don't you'll have to test

[12:45:00.0000] <beowulf>
/me resents jgraham's suggestion that work must be done before cakes can be had

[13:11:00.0000] <jgraham>
There is cake?

[13:12:00.0000] <bfrohs>
The cake is a lie.

[14:09:00.0000] <zcorpan>
hsivonen: you have access to the @whatwg twitter?

[14:10:00.0000] <zcorpan>
hsivonen: wondered if you could RT https://twitter.com/zcorpan/status/53548207921315840 from @whatwg (or write a new tweet)

[14:19:00.0000] <antti_s>
is there an offline html5 validator available? (other than a local instance of validator.nu)

[14:19:01.0000] <Ms2ger>
That's the only one I know

[14:20:00.0000] <zcorpan>
is there an html5 validator other than validator.nu?

[14:29:00.0000] <karlcow>
zcorpan: validator.w3.org but which is the same engine than validator.nu. I do not know another implementations of html5 validation. Unfortunately.

[14:30:00.0000] <zcorpan>
yeah would be nice with some competition there - i'd like a validator that was tightly integrated with browser dev tools

[14:31:00.0000] <zcorpan>
where clicking an error would bring up the relevant element in the dom tree view

[14:32:00.0000] <bfrohs>
/me misses his old validator/dev tool that did exactly that

[14:33:00.0000] <zewt>
out of curiosity, when is that more useful than going to the corresponding source line?

[14:34:00.0000] <zcorpan>
there might not be a source line if you're doing stuff with script

[14:34:01.0000] <zewt>
i suppose if there were any in-place validators that could validate a DOM tree directly, eg. to validate dynamic content

[14:35:00.0000] <zcorpan>
with today's web apps, what the validator sees is not so useful to validate

[14:44:00.0000] <jgraham>
By the time you have a DOM you missed half the errors anyway

[14:44:01.0000] <jgraham>
Of course you can collect those up at the time

[14:45:00.0000] <zcorpan>
sure, parse errors would be logged too

[14:45:01.0000] <karlcow>
http://lists.w3.org/Archives/Public/www-archive/2011Mar/0016

[14:45:02.0000] <zcorpan>
also those from innerHTML etc, which could point to the line of script where it occurred

[14:46:00.0000] <karlcow>
DOM SpellChecker by Sean Palmer

[14:49:00.0000] <zcorpan>
karlcow: is that just thoughts or running code?

[14:50:00.0000] <karlcow>
zcorpan: thoughts I think. But Sean Palmer is known to hack too. So I do not know if he tried

