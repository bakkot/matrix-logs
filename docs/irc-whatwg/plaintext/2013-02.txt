2013-02-01
[16:16:39.0000] <JonathanNeal>
eddieolson joined, eddieolson left, joined, left. He's as predictable as the spec.

[16:16:49.0000] <zewt>
gar is there some magic when i want to enter an address bar in firefox that happens to be open somewhere else

[16:16:57.0000] <dgorbik_>
Hixie: should all webvtt nodes be lineBoxes?

[16:17:04.0000] <zewt>
it demands very insistently that i switch to the other tab and refuses to autocomplete the url normally

[16:17:22.0000] <Hixie>
dgorbik_: what is a lineBox?

[16:17:31.0000] <dgorbik_>
Hixie: is display: block valid for any webvtt nodes in other words?

[16:17:44.0000] <dgorbik_>
Hixie: as far as I understand that's not valid at all

[16:18:16.0000] <Hixie>
what do you mean by "valid"?

[16:18:22.0000] <TabAtkins>
dgorbik_: "line boxes" isn't the right level of abstraction here.  Maybe they're inline elements, but that's something different.

[16:18:30.0000] <dgorbik_>
Hixie: possible to have according to spevs

[16:18:38.0000] <TabAtkins>
(Line boxes get created out of all the inline elements participating in a given inline formatting context.)

[16:18:41.0000] <Hixie>
'display' doesn't apply to the ::cue() pseudo-element regardless of argument, if that's what you mean

[16:19:17.0000] <dgorbik_>
TabAtkins: right. I am still trying to understand something about ruby

[16:19:27.0000] <dgorbik_>
TabAtkins: and display: ruby

[16:19:40.0000] <TabAtkins>
dgorbik_: Don't try to understand display:ruby. It's a bad spec that we will rewrite.

[16:20:13.0000] <dgorbik_>
TabAtkins: so I guess it's probably fine to drop the support for styling ruby/rt in webvtt for now?

[16:20:33.0000] <dgorbik_>
elements will still exist but without any default styles...

[16:21:50.0000] <TabAtkins>
You should still format them as ruby, but dont' worry about their interation with the current CSS Ruby spec.

[16:22:12.0000] <dgorbik_>
TabAtkins: what do you mean by "format"?

[16:22:45.0000] <TabAtkins>
As in, shrink the rt and stack it on top of the rb. Normaly ruby formatting.

[16:30:30.0000] <kbrosnan>
zewt: shift overrides the tab switch behavior

[18:10:51.0000] <zewt>
in a thoroughly buggy way, it seems

[22:39:26.0000] <MikeSmith>
if I read https://bugzilla.mozilla.org/show_bug.cgi?id=782211 right, Gecko will soon have a fully conforming implementation of the current Notifications spec

[22:51:44.0000] <cgcardona>
MikeSmith: ah, that's the problem. You need to read it left </lamejoke>

[22:52:14.0000] <MikeSmith>
heh

[22:52:49.0000] <cgcardona>
:-]

[03:02:14.0000] <hellyeah>
i try to do clock wih svg http://www.w3.org/TR/SVG/animate.html is it a good link tu study for it

[03:02:53.0000] <jgraham>
(this channel is typically for work on the specifications themselves. But I'm sure people will try to answer other questions too)

[03:03:14.0000] <hellyeah>
this is the first time i join this channel

[03:03:15.0000] <MikeSmith>
the #html5 channel might be better

[03:03:33.0000] <hellyeah>
i mean my question is kinda off topic sorry for that

[03:03:45.0000] <MikeSmith>
hellyeah: you might want to start by reading an SVG tutorial instead of the SVG spec

[03:03:57.0000] <hellyeah>
hmm

[03:04:15.0000] <hellyeah>
can you suggest svg tutorial to me if you have time

[03:04:40.0000] <MikeSmith>
http://html5demos.com/svg-clock

[03:05:10.0000] <MikeSmith>
http://www.nimblecoder.com/blog/archive/2009/12/30/animated-clocks-for-svg-and-silverlight.aspx

[03:05:40.0000] <MikeSmith>
could just do "view source" on some of those to start

[03:08:25.0000] <hellyeah>
it can be totally stupid question. But i should know ig it is not. Html5 is windows thing?

[03:13:34.0000] <jgraham>
Oooh, it's zcorpan

[03:13:46.0000] <zcorpan>
hey

[03:15:44.0000] <MikeSmith>
long time not see

[03:18:14.0000] <zcorpan>
indeed

[03:18:43.0000] <zcorpan>
i'll be offline for another while. just popped in here now accidentally. :-P

[03:19:03.0000] <jgraham>
Heh

[03:20:42.0000] <zcorpan>
so how's things?

[03:21:52.0000] <jgraham>
Pretty quiet

[03:23:11.0000] <jgraham>
Sounds like someone at moz. is implementing <track>

[03:23:31.0000] <jgraham>
It's nto clear if they have the right idea about how to read a spec or not :|

[03:24:04.0000] <jgraham>
But I pointed them at your tests at least

[03:24:11.0000] <Ms2ger>
It's a group of students

[03:24:20.0000] <zcorpan>
nice

[03:24:27.0000] <jgraham>
I see

[03:24:33.0000] <zcorpan>
bring on the clue bat :-)

[03:24:38.0000] <Ms2ger>
Lead by David Humphrey at Seneca

[03:24:44.0000] <Ms2ger>
I will :)

[03:25:19.0000] <jgraham>
Yeah, I remember them doing things before. Pointer lock last year, perhaps?

[03:25:57.0000] <MikeSmith>
yeah I think his students have a done several things that ended up landing

[03:26:04.0000] <Ms2ger>
Yep

[03:26:22.0000] <jgraham>
Seems liek a pretty neat course

[03:27:08.0000] <MikeSmith>
yeah if you read his blog postings, seems like he's got a great approach

[03:28:06.0000] <jgraham>
I haven't seen any about this time; perhaps he fell foul of the weird planet mozilla policies

[03:28:42.0000] <MikeSmith>
though comments from the guy that was here earlier asking implementing track parsing does make you think maybe they need some better direction in how to read a spec and how to implement from a spec

[03:29:34.0000] <MikeSmith>
in other news I'm going to make a serious effort this weekend to get github->w3c-test.org sync set  up

[03:29:41.0000] <MikeSmith>
sorry it's taking so long

[03:30:24.0000] <Ms2ger>
Specs are hard, let's go shopping

[03:30:40.0000] <jgraham>
MikeSmith: Cool

[05:08:56.0000] <Jonny_>
hello everybody.

[05:11:09.0000] <Jonny_>
iam getting bad respone if using canvas EventListener. iÂ´m using this in a phonegab application so base is webkit...

[05:12:41.0000] <Jonny_>
Are threre any other choice than EventListener detecting a touch area?

[05:14:40.0000] <Jonny_>
or frameworks to get smoother respone....?

[08:31:55.0000] <dglazkov>
good morning, Whatwg!

[09:00:55.0000] <Ms2ger>
/me snorts

[09:02:34.0000] <Velmont>
cocaine?

[09:03:03.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/public-script-coord/2013JanMar/0120.html

[09:06:23.0000] <MikeSmith>
Ms2ger: he plays a mean bass

[14:21:38.0000] <zewt>
ios 6 safari ignores maxlength for <input type=number> but doesn't support max? :|

[15:12:12.0000] <smaug____>
gavin: ping

[15:20:34.0000] <gavin>
smaug____: pong

[15:21:23.0000] <smaug____>
gavin: nm. I think I can access bugzilla after all. Need to get the connection limit to moznet increased. This hotel is full of geeks

[15:23:26.0000] <smaug____>
gavin: but if  you could hint to the right people that fixing Bug 837310 asap would be really nice

[15:25:37.0000] <gavin>
I can ping some people

[15:26:04.0000] <gavin>
though looks like dumitru's already on it

[15:31:43.0000] <smaug____>
ok, thanks


2013-02-02
[18:11:15.0000] <zewt>
... what possible sense does prefixing calc() have

[18:11:32.0000] <zewt>
doesn't that make it impossible to use? heh

[18:12:44.0000] <zewt>
guess it just makes things ugly, as usual

[18:43:52.0000] <zewt>
https://developer.mozilla.org/en-US/docs/CSS/Using_CSS_flexible_boxes#Basic_flex_example somebody has a wildly mistaken understanding of "basic examples"

[19:24:04.0000] <kerozene>
why do browsers not cache js files as opcode? is parsing js just not that much overhead?

[01:03:49.0000] <happarappa>
What the WG?

[05:50:17.0000] <MikeSmith>
jgraham: Web mirror of the github html-testsuite repo is now at http://w3c-test.org/html-testsuite/

[05:51:29.0000] <MikeSmith>
lacking any other brilliant ideas for how to automate the sync using hooks or whatever, I just have a cron job set up to pull into there every 10 minutes

[05:51:45.0000] <MikeSmith>
the submission branches are at http://w3c-test.org/html-testsuite/submission/

[05:52:24.0000] <MikeSmith>
I do not have any cron jobs set up to sync those

[05:55:06.0000] <MikeSmith>
I need to talk to Robin first to see if we even need those there at all

[07:25:11.0000] <Velmont>
MikeSmith: Cool. -- The submissions mirror, how does that even work? Just checking out the changed files?

[07:25:28.0000] <Velmont>
The links there doesn't seem to go anywhere helpful though :-) Probably leftover something.

[07:34:11.0000] <MikeSmith>
Velmont: yeah that HTML page should just be removed from the submissions sources

[07:35:35.0000] <MikeSmith>
the submissions mirrors I just created with, e.g., "git checkout -b Mozilla origin/submission/Mozilla"

[07:57:33.0000] <Velmont>
MikeSmith: Hmm. So how is origin/submission/Mozilla? Is it not a branch off from the repo itself, but a root commit?

[07:58:34.0000] <zewt>
yeah i'm not reading the "allow..." thread any more, heh

[07:58:51.0000] <zewt>
seems like people are just stream-of-consciousnessing and not even reading replies

[07:59:41.0000] <Velmont>
Ah, no, they're full as expected, okay :-)

[08:04:50.0000] <MikeSmith>
Velmont: no clue. i didn't the original (remote) branches. Robin did. So you'd need to ask him.

[12:57:19.0000] <freedrull>
has anyone tried to make an mp3 encoder in js yet? :)

[13:01:51.0000] <zewt>
i sure hope not

[13:03:36.0000] <freedrull>
lol

[13:31:28.0000] <zewt>
somebody needs to tell whoever's editing mdn that his elementary schoolteacher lied to him, and it's perfectly okay to end a sentence with a preposition

[13:32:23.0000] <zewt>
painful to read text where people contort sentences endlessly because they were misled by a well-meaning but clueless teacher at some point in their past

[13:45:10.0000] <Philip`>
A preposition is never okay to end a sentence with!

[13:46:08.0000] <WeirdAl>
ooh, tis trouble you beg for...

[13:46:22.0000] <zewt>
The border-image-outset property describes, by which amount the border image area extends beyond the border box.

[13:46:26.0000] <zewt>
^ : |

[13:47:43.0000] <gsnedders>
Why the comma!?

[13:47:50.0000] <gsnedders>
That just doesn't make sense at all with the comma there.

[13:47:50.0000] <zewt>
buh, no way to use css border-image with sprite sheets?

[13:47:55.0000] <Philip`>
"... describes the amount by which the ..." would probably be best there

[13:48:04.0000] <zewt>
wish there was a url() syntax that let you pick a rect

[13:48:39.0000] <zewt>
in general any time you find yourself saying "by which", back up and sanity check. heh

[13:52:03.0000] <zewt>
i guess image() is supposed to do that, but isn't implemented

[13:57:59.0000] <zewt>
or media-frags, which isn't either

[14:48:03.0000] <Hixie>
"It's fairly simple to implement so I added it to the spec" seems like a dangerously slippery slope...

[14:54:58.0000] <zewt>
making every link play fart sounds when clicked is fairly simple to implement

[14:58:33.0000] <Velmont>
Okay, so now I know that grammar myth about never ending sentences with prepositions.

[14:58:54.0000] <Velmont>
The stuff you learn in #whatwg :]

[14:59:21.0000] <zewt>
up with which i will not put and all that

[15:04:34.0000] <Hixie>
how can send() return less than the length that it was given, but with errno==0

[15:04:39.0000] <Hixie>
that makes no sense

[15:14:14.0000] <smaug____>
mystery solved. Ms2ger has been seen


2013-02-03
[16:25:10.0000] <zewt>
Hixie: ENONBLOCK?

[16:26:52.0000] <zewt>
er, O_NONBLOCK or whatever

[17:41:04.0000] <Hixie>
zewt: ENONBLOCK is 0?

[17:41:54.0000] <zewt>
i mean, if it's a nonblocking fd then writing to it might write a partial amount of data (however much fills in the kernel buffer), and it'll return that amount

[17:42:19.0000] <zewt>
with tcp, anyway, not udp (and i'm not sure since i normally use write, not send)

[17:42:31.0000] <Hixie>
right, and set errno te EAGAIN or EWOULDBLOCK

[17:42:46.0000] <Hixie>
but it set it o 0

[18:09:52.0000] <zewt>
errno is only set if there's an error, if it partially writes the buffer then there's no error

[18:10:33.0000] <Hixie>
send()'s documentation says the error is set to EAGAIN or EWOULDBLOCK in the case that the length returned doesn't equal the length provided.

[18:10:41.0000] <zewt>
if you get -1 and EAGAIN, that means nothing was written (or read) at all, but partial writes return the number of bytes written, which isn't an error (meaning errno is ENOERR)

[18:11:19.0000] <Hixie>
well clearly you're right, but imho that's not at all clear in the documentation

[18:11:48.0000] <zewt>
what documentation?

[18:12:02.0000] <Hixie>
linux man page

[18:12:22.0000] <zewt>
very loose documentation, that

[18:12:56.0000] <zewt>
write(2) is much slower to reality, i think

[18:13:26.0000] <zewt>
wait, i have different OS's in different shells, hold on

[18:14:12.0000] <zewt>
write(2) in OSX is closer (slower? i blame the weekend):

[18:14:21.0000] <zewt>
     [EAGAIN]           The file is marked for non-blocking I/O, and no data could be written immediately.

[18:17:29.0000] <Hixie>
well in any case this is a pain because i have to rearchitect my code so that i can check for write-readiness in my select loop and the "write" code is in an object that doesn't have access to the select loop's configuration variables. boo.

[18:18:49.0000] <Hixie>
(not that this is the most serious of problems, it happened once during an overnight run of continuously sending data)

[20:27:24.0000] <rcombs>
has anyone considered adding inline SVG to WebVTT?

[20:27:35.0000] <Hixie>
considered and rejected :-)

[20:28:02.0000] <rcombs>
aww

[20:28:11.0000] <rcombs>
too complex?

[20:28:15.0000] <Hixie>
the first T in WebVTT stands for "Text"

[20:28:46.0000] <shepazu>
thus, no images in HyperText Markup Language

[20:28:48.0000] <Hixie>
if you want graphics overlayed on your movie... put them in your movie :-)

[20:29:05.0000] <rcombs>
hmm

[20:29:17.0000] <Hixie>
shepazu: i didn't name that one, so the same logic doesn't apply :-)

[20:29:19.0000] <zewt>
technically, couldn't you put images in background-image: url()? heh

[20:29:57.0000] <rcombs>
it'd be nice to have an ASS-like standard supported in web for more specific timing on overlays

[20:30:37.0000] <zewt>
(i suspect no non-browser implementation will actually implement anything but simple background colors, though)

[20:30:39.0000] <Hixie>
rcombs: if what you're looking for is just a generic vector animation system, SVG itself supports that natively

[20:31:12.0000] <rcombs>
Hixie: can't embed that in a video

[20:31:27.0000] <Hixie>
rcombs: ?

[20:31:39.0000] <rcombs>
e.g. screenshot #2 linked here: https://plexapp.lighthouseapp.com/projects/14382/tickets/1414-transcoder-baking-subtitles-results-in-artifacts-quality-degradation-and-incorrect-placement

[20:31:56.0000] <rcombs>
the actual bug there is in a very unrelated piece of software

[20:32:14.0000] <rcombs>
and the screenshot shows an incorrect rendering, but demonstrates my purpose well

[20:32:37.0000] <zewt>
(with one of the most hated seasons of anime of all time)

[20:32:59.0000] <rcombs>
the text is precisely positioned over the original in-video text, and a shaped box between the new and old text masking the original out

[20:33:03.0000] <rcombs>
zewt: yep

[20:33:14.0000] <rcombs>
zewt: I actually watched all 8

[20:33:56.0000] <Hixie>
rcombs: this isn't what WebVTT is for. WebVTT is for subtitles. If you're trying to localise a movie, updating graphics, changing text, etc, then subtitles aren't the right technology.

[20:33:58.0000] <rcombs>
zewt: there were originally only supposed to be about 3, but they were extended when the animators ran out of material when Disappearance was moved to a movie

[20:34:05.0000] <zewt>
nothing in webvtt is designed for replacing moving text in-frame

[20:34:18.0000] <rcombs>
Hixie: WebVTT may be the wrong standard, but I think there should be a right one

[20:34:28.0000] <rcombs>
at the moment, the best thing we've got is ASS

[20:34:34.0000] <Hixie>
rcombs: well that's fine, i have no objection to people making other standards for stuff :-)

[20:34:38.0000] <rcombs>
that may just be the standard to support

[20:34:49.0000] <zewt>
ssa/ass is not a standard, heh

[20:34:54.0000] <zewt>
it's an ad hoc file format

[20:34:56.0000] <rcombs>
zewt: therein lies the problem

[20:34:59.0000] <Hixie>
rcombs: i would have thought Ogg Theora and WebM were pretty good standards for it myself

[20:35:15.0000] <Hixie>
rcombs: gives you ultimate control over each pixel

[20:35:40.0000] <rcombs>
Hixie: do those support overlaying text over video in a precise manner that allows you to make paint edits without encoding, storing, and distributing multiple versions of each video?

[20:36:07.0000] <Hixie>
rcombs: no, the whole point is what you're doing _should_ involve "encoding, storing, and distributing multiple versions of each video"

[20:36:12.0000] <Hixie>
rcombs: because what you're doing is creating multiple versions of each video

[20:36:14.0000] <zewt>
Hixie: it absolutely should not

[20:36:21.0000] <rcombs>
Hixie: disagreeing there

[20:36:39.0000] <Hixie>
ok well i have no particular horse in this race, just letting you know what i think is the right answer

[20:37:12.0000] <rcombs>
Hixie: for a change as small as text replacement, which is done (and done well, most of the time) in ASS, there's no good reason for the "correct answer" to involve making a new version of the entire video

[20:37:26.0000] <Hixie>
when Pixar made a localised version of Monsters, Inc for the non-US market, they didn't just take Monsters, Inc and overlay it with subtitles

[20:37:31.0000] <Hixie>
they changed entire parts of the video

[20:37:35.0000] <rcombs>
that's true

[20:37:53.0000] <rcombs>
and there are plenty of videos where that is necessary

[20:37:54.0000] <zewt>
which means people who want to see the original version have to buy two copies, making it a poor solution

[20:37:58.0000] <rcombs>
but also plenty where it's not

[20:38:13.0000] <Hixie>
ok well as i said, you guys do as you wish :-)

[20:39:08.0000] <rcombs>
(I'm also saddened by MKV's lack of a feature that lets you skip a portion of a video if a particular audio track is selected, and one that specifies a particular subtitle track to accompany a particular audio track)

[20:39:37.0000] <zewt>
subtitle tracks and audio tracks are by definition orthogonal

[20:39:49.0000] <zewt>
caption tracks and audio tracks are related (same language)

[20:39:54.0000] <rcombs>
(or allow swapping to another audio and subtitle track for a particular scene)

[20:40:59.0000] <rcombs>
zewt: e.g. associate a non-original audio track with a signs/songs subtitle track, and an original audio track with a full subtitle track

[20:41:30.0000] <rcombs>
zewt: or, if multiple full subtitle tracks are present, choose the user's preferred language out of them

[20:41:44.0000] <rcombs>
(current behavior, that last bit)

[20:41:57.0000] <zewt>
that's an implementation feature, not a file format issue

[20:42:02.0000] <rcombs>
I'm not sure what a better channel for this is

[20:42:33.0000] <rcombs>
zewt: the implementation can choose a track, but if you have multiple English tracks, it has no way of knowing which is a signs/songs and which is a full dialogue

[20:42:57.0000] <zewt>
never seen a case where that even makes sense to have

[20:44:45.0000] <rcombs>
zewt: e.g. file with 4 sub tracks (S/S english, D english, D French, D German) and 2 audio tracks (Japanese, English). If English user and English audio, show S/S English by default. If German user, show German by default (same with French). If English user and Japanese audio, show English D by default

[20:45:36.0000] <zewt>
"S/S" and "D" are not meaningful abbreviations :)

[20:45:49.0000] <rcombs>
zewt: S/S = signs/songs, D = dialogue; sorry

[20:46:20.0000] <zewt>
real users listening to english audio who speak english don't want to see captions for signs

[20:46:59.0000] <rcombs>
zewt: example on skipping/swapping: if English audio, but a portion was never dubbed, either skip that scene or revert to Japanese audio and English full subtitles (no need to double-encode the JP audio or English subtitles for the scene)

[20:47:22.0000] <zewt>
(well, i expect anything with english audio to be a commercial release, with signs actually translated in-band--which isn't really relevant to mkv, since i've never heard of commercial releases of anything in mkv)

[20:47:46.0000] <rcombs>
zewt: signs here refers to any original-language text present in the video

[20:49:02.0000] <zewt>
also bear in mind that not every single possible thing you might want to do in localization can be soft-encoded, and a whole lot of nittier things where trying to do it will just complicate everyone's lives and probably not actually work very well

[20:49:37.0000] <rcombs>
zewt: commercial releases should be able to include both audio tracks _and_ regular subtitles _and_ provide a way to show translated signs (SSA-style)

[20:50:45.0000] <rcombs>
zewt: what I'm currently suggesting could be done by making a few additions to the MKV spec (with more specific language than mine) and ASS being properly standardized

[20:51:15.0000] <rcombs>
there's no good reason why commercial releases shouldn't be able to use any of this

[20:51:25.0000] <zewt>
but it'll never allow changing everything they want to change, and if it doesn't do everything, they'll probably use it for nothing (if they have to pay the cost of reencoding anyway)

[20:51:43.0000] <rcombs>
side-note: any idea of a better channel for this?

[20:52:03.0000] <zewt>
well it's pretty irrelevant for commercial releases, since they'll always use whatever the home media standard is (eg. bluray), and that'll never be mkv

[20:52:05.0000] <rcombs>
This stopped being web-related quite a while back, and I feel like I'm cluttering the channel now

[20:52:42.0000] <zewt>
(well, commercial-movies-on-a-disc releases--who knows what'll happen with online delivery, of course, which is more potentially relevant for mkv, webvtt, and so on)

[20:52:48.0000] <rcombs>
zewt: why can't MKV be used commercially as a home media standard?

[20:53:08.0000] <rcombs>
zewt: online delivery is becoming very popular, and commercial movies on discs are dying slowly

[20:53:13.0000] <rcombs>
but dying they are

[20:54:25.0000] <zewt>
the industry will always favor a single, universally-supported standard, and open formats simply haven't yet dented that space

[20:54:55.0000] <rcombs>
while they haven't at the present time, I see no reason why they can't

[20:54:58.0000] <zewt>
maybe they will eventually, but I wouldn't put my money on it any time soon :)

[20:56:12.0000] <zewt>
(and no, I don't know what channels are relevant to this; it's not something I've sought out)

[20:56:29.0000] <rcombs>
well, that's about all I've got to say about that

[20:56:51.0000] <rcombs>
/me returns to his regularly-scheduled bug report filing about bad ASS rendering in Plex

[20:58:15.0000] <zewt>
i filed a bug on libass at one point, and his response was along the lines of "people should fix their files, i don't need to make my software work with real data", so I quickly gave up that line of contribution, heh

[20:59:10.0000] <rcombs>
<_<

[20:59:14.0000] <rcombs>
>_>

[20:59:31.0000] <zewt>
http://code.google.com/p/libass/issues/detail?id=67 heh

[21:02:28.0000] <rcombs>
zewt: well, I can see the guy's point

[21:02:55.0000] <zewt>
it's an academic point, with no understanding of the file format, that doesn't lead to reliable software

[21:03:27.0000] <rcombs>
zewt: it's a bit like keeping bugs in software because people have written around them, and fixing the bugs would break other people's stuff

[21:04:14.0000] <zewt>
except the other way around, since it's vsfilter that everything works with and libass that tries to be "pure" and doesn't work as a result

[21:04:21.0000] <rcombs>
zewt: I really wish the original web browsers completely stopped, XHTML-style, when presented with an invalid file

[21:04:35.0000] <zewt>
i prefer a web that works :)

[21:04:47.0000] <rcombs>
zewt: because then people would write valid files

[21:05:38.0000] <rcombs>
but it's too late for that now

[21:06:15.0000] <zewt>
putting aside other issues (it's pretty author-hostile), as soon as a browser has a bug and lets through an authoring error, it breaks down--now everyone else has to let it through, too

[21:06:36.0000] <zewt>
(just as in this case, vsfilter tolerates the broken section header, since it doesn't even parse them, which means libass needs to, too)

[21:07:51.0000] <zewt>
(it also doesn't allow for backwards-compatible format extensions, if older software rejects anything it doesn't already know about)

[21:08:23.0000] <rcombs>
zewt: anyone who cares about people actually being able to play their videos/view their webpages wouldn't write invalid stuff if it only worked in one browser

[21:08:55.0000] <zewt>
except real-world Joe Authors often only test in a single UA (whether that's a browser or a media player)

[21:09:16.0000] <rcombs>
zewt: and it'd be trivial to specify, say, for HTML, that unknown tags are allowed and parsed as <div>s

[21:09:21.0000] <rcombs>
actually, isn't that how it works now?

[21:09:25.0000] <rcombs>
(just an example)

[21:10:34.0000] <rcombs>
regardless, it's too late for any of this to actually happen

[21:35:16.0000] <zewt>
it's a bit more complicated than that; it's not simply "fatal errors or not", it's "what's an error and what's a warning", which is an analog scale

[21:38:15.0000] <zewt>
that's less important than making the "warning" cases behave predictably (which HTML tries very hard to do, and in the above case, ASS failed at)

[22:03:43.0000] <Jay2daM>
hello


2013-02-04
[05:49:10.0000] <Ms2ger>
darobin, I'm not an existing contributor? :)

[05:49:43.0000] <darobin>
Ms2ger: your productivity increased too â I can feel the anger powering your commits :)

[05:54:57.0000] <MikeSmith>
btw I left http://w3c-test.org/html/ for now because I figured there were existing links to it and such

[05:55:11.0000] <MikeSmith>
but at some point I guess we need to drop it

[05:55:20.0000] <MikeSmith>
or set up redirects

[05:57:50.0000] <jgraham>
redirects++

[05:58:01.0000] <jgraham>
MikeSmith: Thanks for doing the work btw

[05:58:16.0000] <jgraham>
I was away when you pinged me about it, so forgot to reply :)

[05:59:05.0000] <MikeSmith>
no worries

[06:03:32.0000] <odinho>
darobin: Why "Artur Barstow" but "ext Odin HÃ¸rthe Omdal"? :-(

[06:04:02.0000] <Ms2ger>
The ext is an Art-ism, I think

[06:04:11.0000] <odinho>
Nokiaism it seems.

[06:04:34.0000] <odinho>
Ms2ger: But this was from darobin's email... Although I guess the client might've just copied it in.

[06:04:49.0000] <odinho>
Ms2ger: Or darobin is evil and just ext-ing me.

[06:07:16.0000] <Ms2ger>
Well, darobin *is* evil, we know that ;)

[06:07:55.0000] <Ms2ger>
Oh, and we might want a new index.html for http://w3c-test.org/html-testsuite/

[06:08:05.0000] <Ms2ger>
/me will leave that to odinho and darobin_ 

[06:08:34.0000] <odinho>
Why am I suddenly someone to defer to?  I usually do the deferring :P

[06:09:07.0000] <Ms2ger>
That's why :)

[06:09:46.0000] <Ms2ger>
So, is krisk going to resubmit the MS tests?

[06:10:08.0000] <Ms2ger>
I also see Opera's still need to be done...

[06:10:14.0000] <Ms2ger>
/me looks at odinho and jgraham 

[06:10:18.0000] <darobin_>
odinho: huwah?

[06:10:32.0000] <Ms2ger>
<Ms2ger> Oh, and we might want a new index.html for http://w3c-test.org/html-testsuite/

[06:10:43.0000] <MikeSmith>
Ms2ger: I think he's planning to. I think he was saying it was blocked on me getting the mirroring set up

[06:10:51.0000] <Ms2ger>
Ah, good

[06:10:57.0000] <Ms2ger>
Do we meet tomorrow?

[06:11:05.0000] <MikeSmith>
yeah I think so

[06:11:09.0000] <darobin>
odinho: I didn't do anything with your name or whatnot, whatever weirdness happened is entirely Art's fault

[06:11:20.0000] <Ms2ger>
Or, well, you; I probably won't make it

[06:11:45.0000] <MikeSmith>
hmm I guess the HTML index page for the CR branch needs to be replaced or nuked

[06:11:50.0000] <odinho>
So, the only comments we really have hanging is the naming issue.

[06:11:59.0000] <Ms2ger>
web-tests?

[06:12:11.0000] <darobin>
SHIP IT

[06:12:13.0000] <Ms2ger>
browser-tests?

[06:12:13.0000] <MikeSmith>
I like that

[06:12:19.0000] <MikeSmith>
web-tests

[06:12:26.0000] <MikeSmith>
it's shorter

[06:12:26.0000] <odinho>
Yeah, I like web-tests too.

[06:12:46.0000] <Ms2ger>
Yeah, but I don't want semantic-web-tests ;)

[06:13:29.0000] <MikeSmith>
drive-by-web-tests

[06:13:47.0000] <jgraham>
"drive-by"-web-tests

[06:14:03.0000] <odinho>
jgraham or someone proposed webplatform-tests IIRC, -- but web-tests is shorter and works just as well IMHO.

[06:14:08.0000] <jgraham>
The quotes are to exclude people that can't figure out obscure shell quoting rules

[06:14:32.0000] <Ms2ger>
Why do you want to exclude me? First git, now this :(

[06:14:45.0000] <jgraham>
I think I excluded myself first :)

[06:17:07.0000] <jgraham>
odinho: The only reason I like webplatform-tests is that it ties in with webplatform.org

[06:17:20.0000] <jgraham>
It would give the impression that the W3C has a strategy

[06:17:42.0000] <jgraham>
Which might not be true, but we could fake it for them

[06:29:50.0000] <MikeSmith>
that's the spirit

[06:31:53.0000] <Ms2ger>
Someone figure out what's the right rendering for http://jsfiddle.net/pGrSN/2/ , please

[06:32:52.0000] <jgraham>
Philip`: I think he's talking to you :)

[06:34:14.0000] <Ms2ger>
I've long given up on expecting anything from Philip`

[06:55:13.0000] <darobin>
jgraham: errr, I'd rather the testing effort weren't conflated with webplatform.org

[06:55:27.0000] <darobin>
otherwise people might start looking there for docs which we plan to put elsewhere :)

[06:56:01.0000] <darobin>
Ms2ger: I think the right rendering is "some sort of penis-like shape"

[06:56:22.0000] <darobin>
you should probably be using assert_looks_like_a_penis()

[07:06:46.0000] <jgraham>
darobin: I don't think it is similar enough to be confusing

[07:06:58.0000] <jgraham>
But it creates what you might call a unified brand

[07:07:10.0000] <jgraham>
If you were the sort of person that worked in marketing

[07:07:35.0000] <jgraham>
If you *are* the sort of person that works in marketing, I should introduce you to Bill Hicks :)

[07:10:25.0000] <darobin>
lol

[07:10:37.0000] <darobin>
jgraham: it's a unified brand between two things that I don't think should be unified

[07:10:53.0000] <jgraham>
Well

[07:10:58.0000] <darobin>
I reckon that tobie wanted to just grab a new domain under which to put all the testing stuff

[07:11:10.0000] <darobin>
I'd defer to him, as my new Testing Overlord

[07:11:20.0000] <jgraham>
I maybe don't know enough about the webplatform.org stuff

[07:11:38.0000] <jgraham>
(except that they still seem to have badly imported MSDN docs, which is a bit worrying)

[07:11:46.0000] <darobin>
heh

[07:12:13.0000] <jgraham>
But "web platform" is to #whatwg what "HTML5" is to the rest of the world

[07:13:07.0000] <darobin>
W3C uses OWP with similarly resounding success

[07:14:03.0000] <darobin>
I do so cherish the irony that the people who complain most about the success of the "HTML5" moniker are from #whatwg though :)

[07:14:20.0000] <jgraham>
/me doesn't complain

[07:14:38.0000] <darobin>
yeah I simply couldn't give less of a shit

[07:14:50.0000] <darobin>
if people are using the right tech, they can call it whatever they want

[07:14:52.0000] <jgraham>
It is, to quote the TV show Green Wing "the unexpectedly bitter taste of victory"

[07:15:05.0000] <darobin>
lol, indeed :)

[07:15:46.0000] <zewt>
grr @ setTimeout minimum delays

[07:16:53.0000] <jgraham>
zewt: Feel free to grrr at all the people that accidentially created 100% CPU usage by abusing it

[07:16:57.0000] <zewt>
ios safari always has a minimum delay (not just on recursion), which means that when setTimeout(fire click event, 0) within a touchend event, there's a delay between them and a chance for the page to do a style update

[07:17:17.0000] <annevk>
W3C Member access again

[07:17:21.0000] <zewt>
jgraham: not relevant (you only need to delay on recursion to stop that, not all the time)

[07:17:33.0000] <zewt>
(iirc that's also all the spec requires)

[07:17:39.0000] <jgraham>
zewt: Oh, well that sounds more like grr at iOS Safari bug

[07:17:41.0000] <annevk>
aka back in the bubble

[07:17:54.0000] <jgraham>
annevk: So, there's a downside as well?

[07:17:59.0000] <zewt>
yes, that's what i said :)

[07:18:55.0000] <zewt>
so my workaround for safari click delays has to fire click at the start of touchend (during the capture phase on window), which is earlier than it should be

[07:21:03.0000] <zewt>
and that introduces other problems.  bleh--what possible reason does apple have for that horrid click delay thing in safari, anyway

[07:21:20.0000] <zewt>
other than "make web apps look unresponsive so people install ios apps instead"

[07:23:16.0000] <annevk>
jgraham: from the outside it was easier to see how closed certain things are, such as the TAG

[07:34:59.0000] <tobie>
annevk: that's kind of weird. The TAG should be super visible.

[07:36:54.0000] <tobie>
darobin: Testing Overlord seems like exactly the right thing to put on my new business cards. Will that make you all fear me?

[07:37:36.0000] <darobin>
tobie: we've sometimes tended to want to hide the TAG, actually ;)

[07:37:44.0000] <darobin>
tobie: yes, sure!

[07:37:56.0000] <darobin>
/me muahaha, and another falls for the "overlord" trick!

[07:38:11.0000] <darobin>
along with jgraham, my new Coffee Delivery Overlord!

[07:39:38.0000] <tobie>
titles are only useful if they're inspire fear (lots of it). Seems you're not taking this seriously enough, darobin.

[07:42:03.0000] <MikeSmith>
darobin: does respec have any provision for adding a "This document is informative only."? Or otherwise any switch for flagging a doc as non-normative?

[07:43:45.0000] <darobin>
tobie: oh I do

[07:43:51.0000] <darobin>
my title says "HTML Editor"

[07:44:03.0000] <darobin>
I would expect the prospect of that being true to scare quite a few people off

[07:44:22.0000] <darobin>
MikeSmith: no, but Denis has asked me to do that

[07:44:32.0000] <darobin>
I was planning on doing it as soon as I'm through with email

[07:44:48.0000] <Ms2ger>
Isn't it more "HTML Copy-Editor"?

[07:45:15.0000] <tobie>
darobin: you clearly don't get this. Purpose of a scary title is to scare others not yourself.

[07:45:37.0000] <darobin>
heh

[07:49:50.0000] <MikeSmith>
my official title speaks intimidation pretty strongly I guess

[07:50:00.0000] <MikeSmith>
Special Missions Subsection Junior Interim Floor Manager

[08:38:29.0000] <annevk>
tobie: will try to make it that way I suppose

[08:38:42.0000] <annevk>
tobie: congrats with the Fellow appointment btw

[08:40:34.0000] <Ms2ger>
Case sensitivity as the first thing on a Monday morning

[08:40:49.0000] <tantek>
annevk: https://twitter.com/t/status/298471161090686976

[08:40:50.0000] <Ms2ger>
/me is glad he doesn't have to go to CSS F2Fs

[08:41:15.0000] <tantek>
Ms2ger - you're just afraid of outing yourself to more people ;)

[08:41:21.0000] <Ms2ger>
Pah

[08:41:33.0000] <Ms2ger>
Should've come to fosdem

[08:49:41.0000] <annevk>
tantek: sounds like you guys are having a good time :)

[08:50:18.0000] <tantek>
annevk - I'm smiling, which is good enough for now. :)

[08:50:41.0000] <tantek>
/me is suppressing an impulse to bring up prefixing.

[08:50:47.0000] <annevk>
I hope John still has the energy to fight the good fight

[08:51:25.0000] <tantek>
oh he's going strong

[08:51:29.0000] <annevk>
only with a prefix you'll get Unicode case folding? :p

[09:02:06.0000] <tantek>
"Who's in favor of a straw poll?"

[09:04:16.0000] <jgraham>
CSS WG: doing it wrong so you don't have to

[09:05:31.0000] <jwalden>
heh

[09:10:05.0000] <Ms2ger>
OH: "That should be clearly specified."

[09:11:26.0000] <gsnedders>
FAILED (errors=499, failures=234)

[09:11:29.0000] <gsnedders>
Yay!

[09:11:34.0000] <gsnedders>
Okay, not quite. :)

[09:11:37.0000] <dglazkov>
good morning, Whatwg!

[09:11:42.0000] <gsnedders>
(html5lib, single codebase for Py2/3)

[09:11:56.0000] <Ms2ger>
It runs?! :)

[09:13:16.0000] <gsnedders>
And the majority of the tests pass, now.

[09:13:28.0000] <gsnedders>
(27k tests)

[09:19:55.0000] <tantek>
(still on case (in)sensitivity) :)

[09:22:20.0000] <Ms2ger>
tantek, did you guys put a time limit on the discussion or is this just going to go on until lunch?

[09:26:20.0000] <slightlyoff>
hey annevk

[09:26:34.0000] <tantek>
good day slightlyoff

[09:26:47.0000] <slightlyoff>
what's your thinking on having addEventListener() return the EventTarget itself by default?

[09:26:49.0000] <slightlyoff>
hey tantek

[09:27:27.0000] <Ms2ger>
So, why do we have HTMLTimeElement.datetime and HTMLModElement.dateTime?

[09:27:31.0000] <slightlyoff>
annevk: was talking this through with JakeA, and since it returns undefined right now, I don't think it'll break much, if anything

[09:27:42.0000] <slightlyoff>
I can imagine that someone might be testing it for falsey

[09:27:50.0000] <slightlyoff>
but I can't think of any other scenario where it'd break things

[09:28:02.0000] <JakeA>
/me waves

[09:29:19.0000] <tantek>
Ms2ger - we just decided to break and summarily end discussion on that topic! (for today ;) )

[09:29:31.0000] <tantek>
.datetime vs. .dateTime. W.T.F.

[09:29:52.0000] <Ms2ger>
tantek, if you guys are talking about case, maybe throw that in the group :)

[09:30:43.0000] <tantek>
Ms2ger, can we call .datetime a bug and fix it to .dateTime?

[09:30:58.0000] <tantek>
since HTMLModElement is likely an older interface than HTMLTimeElement?

[09:31:08.0000] <Ms2ger>
That would be nice

[09:31:39.0000] <Ms2ger>
/me looks who supports <time>

[09:33:01.0000] <Ms2ger>
Oho

[09:33:31.0000] <Ms2ger>
Opera supports time.dateTime

[09:34:19.0000] <Ms2ger>
Okay, let me declare this a spec bug

[09:34:24.0000] <Ms2ger>
Hixie, ^

[09:34:42.0000] <gsnedders>
Ms2ger: plus any other microdata impl, at least

[09:34:57.0000] <Ms2ger>
gsnedders, sorry?

[09:35:08.0000] <Ms2ger>
gsnedders, the spec has time.datetime

[09:35:19.0000] <gsnedders>
Ms2ger: We impl it for the sake of microdata, basically

[09:35:53.0000] <Ms2ger>
"An error occured while submitting your comment. Please let ianâhc know."

[09:35:58.0000] <Ms2ger>
Hixie, I let you know ^

[09:36:01.0000] <tantek>
lol

[09:37:13.0000] <Hixie>
weird

[09:37:47.0000] <Ms2ger>
Ah, here you are

[09:38:15.0000] <Hixie>
oh, hah

[09:38:16.0000] <Hixie>
my bad

[09:38:20.0000] <Hixie>
we changed the milestones...

[09:38:35.0000] <Hixie>
what's hte default now, Unsorted?

[09:38:38.0000] <Ms2ger>
Yeah

[09:39:10.0000] <annevk>
slightlyoff: if we add target.on() or some such I don't really see the point

[09:39:24.0000] <slightlyoff>
annevk: do we have target.on() in the spec now?

[09:39:38.0000] <slightlyoff>
also, why not fix the existing one if it's risk-free?

[09:39:47.0000] <annevk>
slightlyoff: not yet, was discussing the last couple of details

[09:39:49.0000] <slightlyoff>
I mean, the name and 3rd param are much of the problem

[09:40:02.0000] <slightlyoff>
so I support .on()

[09:40:11.0000] <slightlyoff>
(obviously...arv and I added it to the Dart DOM for a reason)

[09:40:39.0000] <annevk>
slightlyoff: well you also want delegation support and probably not have to use removeEventListener() at all (instead return a function/object to deregister so you don't have to store the callback anywhere)

[09:40:58.0000] <Hixie>
Ms2ger: ok fixed

[09:41:23.0000] <Ms2ger>
Hixie, how about the bug I tried to file? :)

[09:41:35.0000] <annevk>
and if the API becomes that much more convenient and will be used instead, there's not much point in changing how an existing one behaves, even if theoretically risk-free (if it is, people do weird stuff)

[09:41:38.0000] <Hixie>
Ms2ger: also fixing that

[09:41:42.0000] <Ms2ger>
Thanks

[09:42:21.0000] <slightlyoff>
annevk: I see...but adding a return value to the existing API changes none of those goals, right?

[09:42:40.0000] <slightlyoff>
annevk: or is the idea that you'd like to use that return value to get to that point with addEventListener()?

[09:43:11.0000] <annevk>
slightlyoff: well changing the existing API if we expect that the existing API will not be used going forward seems like make work

[09:43:23.0000] <annevk>
I'd rather have developers and QA work on something else :)

[09:43:29.0000] <arv>
annevk, slightlyoff: even with event delegation there is value in on()... There are lots of cases where you have non DOM event targets

[09:43:40.0000] <arv>
sorry, non Node event targets

[09:44:03.0000] <annevk>
Jake had an idea how to make delegation not be bound to anything

[09:44:09.0000] <annevk>
by making it a callback

[09:45:25.0000] <slightlyoff>
annevk: so I'm trying to get the Future thing ironed out, and extensibility is key...the latent issue is that when you want to extent (e.g., via an event), you can't use .then()

[09:46:05.0000] <slightlyoff>
annevk: and you don't really want to break the chain

[09:46:27.0000] <slightlyoff>
annevk: i.e., you should be able to do f.addEventListener(...).then(...);

[09:46:31.0000] <slightlyoff>
and this is a non-Node case

[09:46:36.0000] <slightlyoff>
but it's still important

[09:46:36.0000] <annevk>
I'm not sure I follow exactly

[09:47:06.0000] <slightlyoff>
annevk: so there are a set of things you want to allow subclasses to do; e.g., add progress events or upgradeneeded events and the like

[09:47:13.0000] <slightlyoff>
they aren't completion values

[09:47:21.0000] <slightlyoff>
i.e., they don't end a chain of Futures

[09:47:39.0000] <slightlyoff>
they're additional semantics for events that happen before/after/around resolution

[09:47:39.0000] <annevk>
wouldn't you just use the full API in that case rather than the Future API?

[09:47:45.0000] <slightlyoff>
no

[09:47:57.0000] <slightlyoff>
the Future API *is* the full API for a lot of this stuff going forward, I'd hope

[09:48:17.0000] <slightlyoff>
if we enable this, Future subclasses are how you'd express what, e.g., IDB uses EventTarget for

[09:48:24.0000] <slightlyoff>
since they're EventTarget instances themselves

[09:48:39.0000] <slightlyoff>
so the question is, how do we enable chaining in that API, since that's one of the best bits of Future use

[09:48:51.0000] <slightlyoff>
(and no, I don't think I have to justify wanting this...see all of jQuery)

[09:49:11.0000] <annevk>
if there's no end of task, how would chaining even make sense?

[09:49:26.0000] <slightlyoff>
it's chaining calls *on the same Future*

[09:49:43.0000] <slightlyoff>
it's not vending a new Future from the then() return values of another

[09:50:01.0000] <annevk>
(at this point I'm rather lost I think, not arguing against it or anything :))

[09:50:19.0000] <slightlyoff>
annevk: instead of writing:

[09:50:46.0000] <slightlyoff>
var f = async(); f.addEventListener("...", ...); f.then(a, r);

[09:50:51.0000] <slightlyoff>
you'd write:

[09:51:11.0000] <slightlyoff>
async().addEventListener("...", ...).then(a, r);

[09:51:36.0000] <slightlyoff>
assuming you return a new future from the then call, you should be able to keep going:

[09:51:54.0000] <slightlyoff>
async().addEventListener("...", ...).then(a, r).done(...);

[09:51:57.0000] <annevk>
oh so just chaining

[09:51:59.0000] <slightlyoff>
yeah

[09:52:17.0000] <slightlyoff>
that's the only reason I'm asking for returning the EventTarget from the addEventListener() call

[09:52:23.0000] <slightlyoff>
(or a .on() that does the same)

[09:52:38.0000] <annevk>
yeah the problem with that is that I'd want to return a function to unregister the event

[09:52:48.0000] <annevk>
otherwise you'd have to remember the callback

[09:52:54.0000] <Ms2ger>
Everyone else hates that ;)

[09:53:07.0000] <annevk>
well or an object

[09:53:10.0000] <annevk>
whatever

[09:53:15.0000] <slightlyoff>
annevk: the function object can have a ref to the future?

[09:53:32.0000] <zewt>
slightlyoff: that's not a pattern that the platform typically bothers with

[09:53:47.0000] <slightlyoff>
zewt: sorry, that's sort of a busted argument by default

[09:53:47.0000] <annevk>
yeah, could maybe do on().ref and on().remove()

[09:53:50.0000] <zewt>
(and honestly it makes for pretty ugly code)

[09:53:58.0000] <zewt>
slightlyoff: sorry, you'll have to do better than that

[09:54:08.0000] <annevk>
x.on().ref would have ref point to x or some such

[09:54:12.0000] <Ms2ger>
/me tunes out again

[09:54:21.0000] <annevk>
dinnertime

[09:54:28.0000] <slightlyoff>
zewt: afraid I don't. Saying "it should be better" means "it should be different", ipso facto

[09:54:34.0000] <slightlyoff>
annevk: yeah, heading home too

[09:54:42.0000] <slightlyoff>
annevk: can live with that

[09:54:44.0000] <zewt>
you're saying it should be different, it's not "better"

[09:54:50.0000] <annevk>
i'll be online tomorrow again, we can discuss it some more

[09:55:05.0000] <slightlyoff>
zewt: I'm saying "better" is always a discussion, but for anything to be better it must be different than the current state

[09:55:12.0000] <slightlyoff>
zewt: I have no time for software conservatives

[09:55:28.0000] <slightlyoff>
at least not when it comes to effecting progress

[09:55:28.0000] <zewt>
i have no time for people with bad attitudes

[09:55:32.0000] <Hixie>
Ms2ger: fixed

[09:55:34.0000] <slightlyoff>
great, then I'm done here = )

[09:55:54.0000] <Ms2ger>
Hixie, great, thanks

[10:06:08.0000] <volkmar>
Hixie: we agree that <input type='time' min='00:01' step='86400000'> doesn't have a valid value?

[10:06:29.0000] <volkmar>
given that we step >= 86400000, the only valid value is 00:00

[10:15:02.0000] <Hixie>
volkmar: 00:01 seems like a valid value?

[10:15:13.0000] <Hixie>
volkmar: (if there's a min, the step counts from the min, iirc)

[10:15:37.0000] <volkmar>
oh... indeed

[10:33:02.0000] <GPHemsley>
isn't "datetime" one word in computer speak?

[10:33:31.0000] <GPHemsley>
(I'm arguing against treating "time" as a separate word for camel-casing)

[10:34:42.0000] <zewt>
the only place i can think of offhand where it's used (space or not) is python

[10:35:01.0000] <zewt>
(i use python a lot, so its name feels more natural to me, but it's just one sample, so)

[10:36:32.0000] <Ms2ger>
Then again, python likes lowercase

[10:38:28.0000] <zewt>
if they wanted two words they'd have used "date_time", though they do prefer shorter, easier-to-type names

[10:38:55.0000] <Ms2ger>
startswith and stuff like that

[10:39:00.0000] <zewt>
(which is more important for a common datetime class in python than it is for a relatively infrequently used string in HTML, of course)

[10:53:30.0000] <zewt>
... confused, is flexbox in ios safari or not

[10:53:51.0000] <zewt>
caniuse claims some version of it is in there, but i don't see any flex- or -webkit-flex- styles

[10:56:42.0000] <zewt>
"display: -webkit-box", must be a really old version

[10:58:19.0000] <zewt>
i guess if it's been in since ios 3.2 it must be, heh

[11:04:40.0000] <kerozene>
is <picture><source ... likely to happen?

[11:06:29.0000] <Ms2ger>
No

[11:06:50.0000] <miketaylr>
heh

[11:07:37.0000] <kerozene>
seriously? why is there so much activism about it then?

[11:08:26.0000] <kerozene>
sorry, maybe this is all quite explicit in some mailing list thread

[11:10:29.0000] <marcosc>
kerozene: the main thing is the use cases. Right now, there is a gap. If srcset fills that gap then there will be much rejoicing.

[11:13:42.0000] <kerozene>
marcosc: thanks. just had a look at it here: http://www.w3.org/community/respimg/2012/05/11/respimg-proposal/

[11:14:08.0000] <Hixie>
GPHemsley: "A byte sequence is a sequence of bytes." isn't a particularly helpful definition :-)

[11:16:37.0000] <jgraham>
zewt: In python per PEP8 the module should have been datetime and the class DateTime. But it predates PEP8 I guess. Or at least predates the stdlib caring about PEP8

[11:16:45.0000] <jgraham>
gsnedders: Nice progress

[11:17:39.0000] <gsnedders>
jgraham: While you're around, thoughts on moving to github (for the sake of Travis CI, amongst other things) and splitting the repo up into multiple repos?

[11:18:55.0000] <jgraham>
I was already considering github because not Google Code

[11:19:15.0000] <jgraham>
I thought people might be upset about the hg->git transition though

[11:19:39.0000] <jgraham>
I am happy to split the repos into python/php/ruby/etc.

[11:19:57.0000] <gsnedders>
Testdata I guess we could keep in hg, given that's what the W3C is using.

[11:20:06.0000] <jgraham>
They are?

[11:20:14.0000] <gsnedders>
Well, I mean test.w3.org is

[11:20:16.0000] <jgraham>
The problem with testdata is

[11:20:30.0000] <jgraham>
That it really really sounds like a usecase for submodules

[11:20:56.0000] <gsnedders>
Yeah, it does.

[11:20:59.0000] <jgraham>
I think going forward we should assume that all important W3C stuff will be in git

[11:21:06.0000] <gsnedders>
Which is why on the whole git makes more sense.

[11:21:51.0000] <Ms2ger>
jgraham, boo

[11:23:03.0000] <jgraham>
Ms2ger: Sucks to be you :p

[11:23:11.0000] <gsnedders>
jgraham: Also goddamnit why does lxml return bytes on Py2?

[11:23:17.0000] <gsnedders>
/me rages

[11:23:32.0000] <jgraham>
Ms2ger: But, seriously, if it would create a problem for Mozilla if we move this stuff we should try to fix that

[11:23:44.0000] <jgraham>
gsnedders: Maybe git subtree can solve all problems

[11:24:27.0000] <Ms2ger>
It only creates problems for people who don't have a Stockholm Syndrome for git yet :)

[11:24:41.0000] <gsnedders>
jgraham: git subtree?

[11:25:00.0000] <jgraham>
Ms2ger: You don't have any infrastructure that tries to automatically sync the tests or anything?

[11:25:17.0000] <Ms2ger>
I've got scripts

[11:25:25.0000] <Ms2ger>
They're broken for HTML now, I guess

[11:25:29.0000] <jgraham>
gsnedders: http://apenwarr.ca/log/?m=200904#30

[11:25:38.0000] <jgraham>
gsnedders: (now in git mainline)

[11:25:59.0000] <jgraham>
Ms2ger: So I should file them under "need to be fixed anyway"?

[11:26:31.0000] <Ms2ger>
Oh, hmm, the html5lib tests, you mean

[11:26:34.0000] <Ms2ger>
/me misread that

[11:27:45.0000] <Ms2ger>
hsivonen might have a script; I don't see one checked in

[11:28:00.0000] <jgraham>
I will check with hsivonen tomorrow then

[11:28:04.0000] <jgraham>
hsivonen: ^

[11:29:11.0000] <jgraham>
gsnedders: I think we should do this, but probably not when you are in the middle of a major refactoring

[11:30:03.0000] <jgraham>
So let's keep Google Code for now and fix it when you have 499 fewer errors and whatever-it-was fewer fails

[11:30:17.0000] <gsnedders>
jgraham: Agreed.

[11:30:50.0000] <gsnedders>
jgraham: Not sure how to keep over the Py3 history, though

[11:33:36.0000] <jgraham>
gsnedders: Well, you will still have the history, it will just be a bit confusing

[11:33:57.0000] <jgraham>
I mean

[11:34:02.0000] <gsnedders>
jgraham: I mean when splitting the repo up

[11:34:13.0000] <jgraham>
Well it depends how you do it

[11:34:50.0000] <jgraham>
You can pull everything and then rewrite the history to remove all the commits in the non-python directories

[11:35:11.0000] <jgraham>
and then have a commit where the python3 directory is removed and the python/ directory is stripped

[11:35:15.0000] <gsnedders>
And then at the end move it?

[11:35:20.0000] <jgraham>
Exactly

[11:35:37.0000] <gsnedders>
(Well, it'll be the other way around, python3 will become root)

[11:36:40.0000] <jgraham>
Well whichever

[11:37:28.0000] <gsnedders>
/me adds more assert isinstace(x, text_type), type(x) to the codebase

[11:37:45.0000] <gsnedders>
(Just to make sure Py2 keeps unicode everywhere)

[11:38:28.0000] <Ms2ger>
instace?

[11:39:02.0000] <gsnedders>
blehblehbleh

[11:39:10.0000] <jgraham>
Short for "is instant ace!"

[11:39:24.0000] <jgraham>
gsnedders' new video microblogging service

[11:40:18.0000] <gsnedders>
I'm surprised you didn't make an emo joke there.

[11:41:44.0000] <gsnedders>
So parsing now works in the joint codebase, though serializing does not.

[11:42:23.0000] <Ms2ger>
Oh man, making emo jokes about gsnedders is so 2008

[11:42:51.0000] <jgraham>
gsnedders: I was thinking about making penis jokes at twitter's expense

[11:42:54.0000] <gsnedders>
jgraham was doing it a few months ago, at least internally.

[11:43:05.0000] <jgraham>
But emo would have been better

[11:43:18.0000] <jgraham>
Could probably have gone with emo penis jokes

[11:43:36.0000] <jgraham>
;)

[11:44:28.0000] <gsnedders>
Parser works fine, now, BTW.

[11:44:37.0000] <gsnedders>
Treewalking/serializing to go.

[11:46:47.0000] <jgraham>
Nice :)

[11:47:16.0000] <gsnedders>
Also, back to NjÃ¡ls saga.

[11:50:51.0000] <kerozene>
is he burnt yet?

[11:51:26.0000] <gsnedders>
Well, I'm not reading it in order...

[11:51:35.0000] <gsnedders>
So... sort of?

[11:51:37.0000] <kerozene>
how come you're reading it?

[11:52:18.0000] <gsnedders>
kerozene: University course on Old Norse. Linguistics, influence on English, is the fundemental reason.

[11:52:27.0000] <kerozene>
I have a copy but I couldn't get anywhere with it

[11:52:34.0000] <kerozene>
figures

[11:52:48.0000] <gsnedders>
I have two, one in Old Norse and one in English. :)

[11:52:55.0000] <kerozene>
yikes

[11:53:33.0000] <gsnedders>
Speaking of which, time to confuse my brain some more and make it even more a mix of Swedish, Norwegian, and Old Norse, unable to remember what word is what language :)

[11:53:59.0000] <gsnedders>
(Damn it Opera!)

[11:54:48.0000] <marcosc>
/me shows gsnedders his knife... "from old norse, now give me your money!" :)

[11:55:28.0000] <gsnedders>
marcosc: I refuse to pay ransom. You'll just come back and demand more, till the country in bankcrupt.

[11:56:24.0000] <marcosc>
/me sticks gsnedders with the pointy end 

[11:56:36.0000] <marcosc>
wasn't gonna get my money anyway

[11:56:56.0000] <kerozene>
it's a jungle in here

[11:59:43.0000] <gsnedders>
(The largest payment from England was around 30k kg (i.e., 30Mg) of silver)

[12:00:19.0000] <gsnedders>
(The largest amount of surviving English coinage from the period is in Sweden.)

[12:05:27.0000] <Ms2ger>
Excellent

[12:05:57.0000] <Ms2ger>
My hg-based script actually works perfectly on the new git repo

[12:09:44.0000] <GPHemsley>
Hixie: But is it an unhelpful definition? ;)

[12:32:50.0000] <gsnedders>
treewalkers/lxmletree.py needs totally rewriting, basically

[12:32:50.0000] <zewt>
i don't think i'll ever stop typing "var foo(bar) { }" in JS

[12:33:16.0000] <Hixie>
is anne around?

[12:34:10.0000] <zewt>
i really wish foo.dataset.x = null deleted the attribute instead of setting it to "null"

[12:34:28.0000] <Hixie>
just do delete foo.dataset.x;

[12:34:38.0000] <gsnedders>
Don't delete properties. That's evil.

[12:34:49.0000] <zewt>
it's really annoying to have to say if(value) foo.dataset.x = value; else delete foo.dataset.x; every time

[12:34:50.0000] <Ms2ger>
It's not in this case

[12:35:08.0000] <zewt>
(or rather, if(value != null))

[12:35:32.0000] <Hixie>
zewt: ah, yeah, if you don't know ahead of time if you're adding or removing, that's sad

[12:35:40.0000] <zewt>
"sad"?

[12:35:46.0000] <Hixie>
sad that the API doesn't work for you

[12:36:02.0000] <zewt>
i end up writing a helper function, which is okay but unpretty

[12:36:06.0000] <Hixie>
yeah

[12:36:09.0000] <zewt>
set_value(foo.dataset, "bar", value)

[12:36:15.0000] <Hixie>
what is setting "value" in this case?

[12:36:26.0000] <Hixie>
like, how do you end up with "Null"?

[12:37:15.0000] <zewt>
well a common case is eg. function is_logged_in() { return true/false; } document.body.dataset.loggedIn = is_logged_in();, and I end up with "false" where i'd rather the property not be set at all

[12:37:39.0000] <Hixie>
ah

[12:37:42.0000] <Hixie>
interesting

[12:37:44.0000] <Hixie>
so it's not just null

[12:37:55.0000] <Hixie>
hmmm

[12:38:14.0000] <zewt>
bool is probably the more common case actually yeah

[12:38:44.0000] <Hixie>
yeah i don't have a good answer for you there other than a helpfer function

[12:39:39.0000] <zewt>
i'll resist the temptation to try to hack DOMStringMap's prototype, heh

[12:39:50.0000] <zewt>
(in the list of Things That Will Bite Me In The Ass Two Years From Now)

[12:40:30.0000] <gsnedders>
jgraham: See commit just pushed.

[12:44:43.0000] <zewt>
it'd be nice if a.x = undefined was the same as delete a.x

[12:44:54.0000] <zewt>
sort of silly to allow defining a value to undefined, heh

[12:45:08.0000] <gsnedders>
It's sort of silly to allow undefined to be redefined.

[12:46:52.0000] <Ms2ger>
"return node.tail and (node, "tail") or node.getnext()" doesn't work anymore?

[12:47:08.0000] <gsnedders>
It does, just tidying up a bit

[12:47:16.0000] <gsnedders>
Given we don't care about < 2.6

[12:47:18.0000] <Ms2ger>
Makes sense

[12:56:43.0000] <zewt>
box-sizing buggy on ios safari? :|

[12:56:53.0000] <gsnedders>
jgraham: Also: finish unifying codebases, decide whether we drop soup support for the next release, make sure tests pass (add the AAA limits, currently), move to git, then release?

[12:57:02.0000] <zewt>
(for border-box)

[13:02:42.0000] <Ms2ger>
gsnedders, and take fantasai's patches? ;)

[13:03:09.0000] <gsnedders>
Ms2ger: As I said to her ages ago, I don't want to take them as is.

[13:03:38.0000] <gsnedders>
The functionality will get added. I wonder where my mostly-finished impl was...

[13:03:59.0000] <Ms2ger>
wfm :)

[13:05:03.0000] <jgraham>
gsnedders: Sounds like a plan

[13:07:58.0000] <zewt>
some weird interaction between border-box and display: table, i guess

[13:09:08.0000] <muyyatin>
I have a number of Canvas spec questions (all based on different behavior between browsers). Should I ask here or send an email somewhere?

[13:35:34.0000] <Hixie>
muyyatin: different browser behaviour is a bug, but feel free to ask here

[13:37:37.0000] <muyyatin>
Hixie: First of all, I'm working off http://phet.colorado.edu/files/phet-scene/tests/browsers/canvas-test-suite.html rendered in different browsers

[13:39:19.0000] <muyyatin>
Hixie: There are a number of differences in rendering quadratic / cubic bezier curves, and some occur only with specific line caps

[13:40:02.0000] <muyyatin>
Hixie: For example, is there anywhere it is noted what the "inflated" path is defined as for #trace-a-path? For cubics with a cusp, does it inflate around the cusp?

[13:42:08.0000] <muyyatin>
Hixie: Additionally, does the Canvas spec allow for differences rendering quadratic / cubic bezier curves that occur due to imprecision of approximation offset curves? (top-left-most example shows it most clearly)

[14:18:02.0000] <zewt>
http://stackoverflow.com/questions/12855123 ... seriously?

[14:18:25.0000] <zewt>
ios silently discarding timers from within touch events during scrolling

[14:34:04.0000] <zewt>
i'm pretty convinced that mobile safari hates me personally

[14:34:23.0000] <zewt>
window.scrollY will go beyond the bottom, if you're rubber-band-scrolled past the end, but it won't go negative if you do it at the top

[14:34:46.0000] <Hixie>
muyyatin: sorry, was afk

[14:35:19.0000] <Hixie>
muyyatin: not sure i know the answers to your questions unfortunately

[14:45:17.0000] <muyyatin>
Hixie: No worries! I'm not sure if this behavior is spelled out anywhere, and browser vendors may not be able to easily change implementations since a lot of this is determined by underlying graphics engines

[15:13:14.0000] <myndzi>
"If node is the target node, terminate in a match state." - what is the 'target node' in this case?

[15:18:36.0000] <JonathanNeal>
What constitutes an element getting a HTMLXConstructor (where X is Audio, Div, Span, Li, etc.)?

[15:43:35.0000] <Hixie>
JonathanNeal: you mean, what does it mean for there to be one?

[15:44:16.0000] <JonathanNeal>
Yes, is there a criteria?

[15:44:43.0000] <Hixie>
oh you mean what constitues a reason for an element getting a constructor?

[15:44:45.0000] <Hixie>
hm

[15:44:52.0000] <Hixie>
dunno

[15:45:02.0000] <Hixie>
for audio, it was added before it was an element

[15:45:25.0000] <Hixie>
then when we retrofitted it into being an element, we made it constructable so the API wouldn't change much

[15:45:45.0000] <JonathanNeal>
Okay.

[15:46:06.0000] <Hixie>
the only other two are Image and Option and similarly predate there actually being elements at all

[15:46:17.0000] <Hixie>
so they were also retrofits, effectively

[15:46:43.0000] <myndzi>
hixie, your nick seems familiar but i can't place it

[15:53:15.0000] <Hixie>
myndzi: i've used it for many years...

[15:53:30.0000] <myndzi>
i imagine so, but if you don't recognize me then i must be thinking of someone else ;)

[15:53:41.0000] <Hixie>
oh i dunno about htat

[15:53:47.0000] <Hixie>
i have the worst memory for people

[15:54:03.0000] <myndzi>
well i've been on irc a long time haha, seen lots of nicks that i never talked to i'm sure :P

[15:54:39.0000] <myndzi>
wtf does it mean to "pretend p has been seen and reprocess"

[15:55:04.0000] <myndzi>
been seen where? how would i reprocess with the goal of finding an open p tag without actually having one?

[15:56:53.0000] <Hixie>
where does it say that?

[15:57:16.0000] <myndzi>
parsing rules under syntax.html

[15:57:25.0000] <myndzi>
'an end tag whose tag name is "p"'

[15:57:33.0000] <Hixie>
the string "pretend p has been seen and reprocess" isn't in the spec as far as i can tell

[15:57:49.0000] <myndzi>
"act as if a start tag with the tag name "p" had been seen, then reprocess the current token"

[15:58:27.0000] <myndzi>
after transcribing these rules i do see a common pattern, which i'm grateful for :P

[15:58:30.0000] <Hixie>
http://www.whatwg.org/specs/web-apps/current-work/#act-as-if-a-token-had-been-seen

[15:59:45.0000] <myndzi>
ah. so "insert a p token" basically :P

[15:59:55.0000] <Hixie>
not necessarily


2013-02-05
[16:00:12.0000] <myndzi>
p is an element in the html namespace yes?

[16:00:21.0000] <Hixie>
could involve closing some other elements, doing things with formatting elements, etc

[16:00:24.0000] <Hixie>
foster parenting

[16:00:27.0000] <Hixie>
all kinds of stuff

[16:00:31.0000] <Hixie>
depends where you have to do it

[16:00:52.0000] <myndzi>
oh right, i was thinking it would reprocess the end tag (which it will)

[16:00:55.0000] <myndzi>
but first it must process the opening tag

[16:02:18.0000] <myndzi>
well that's beyond the scope of what i have to do, so i'll have to treat it like the others for now

[16:02:50.0000] <myndzi>
it looks like in general i can simply have a list of scope delimiters to search for, and when i get a non-matching tag, look up which scope it's in and either ignore or fix as specified

[16:03:08.0000] <myndzi>
ignore if there isn't an open tag in scope, fix if there is

[16:03:16.0000] <Hixie>
are you writing an html parser?

[16:03:22.0000] <myndzi>
patching one

[16:03:30.0000] <myndzi>
it's not structured favorably for proper implementation

[16:03:37.0000] <myndzi>
but it's choking on missing li and td tags

[16:03:37.0000] <Hixie>
i recommend just starting over then

[16:03:45.0000] <myndzi>
i may at some point

[16:03:51.0000] <myndzi>
but for now i need a working fix asap

[16:03:57.0000] <Hixie>
it's probably less work than patching it, and we have a ton of tests :-)

[16:04:15.0000] <myndzi>
i'd try to use aredridel's parser but i can't figure out HOW, it has no documentation haha

[16:04:22.0000] <myndzi>
rather, i can't figure out how to integrate it into cheerio

[16:04:35.0000] <myndzi>
and anyway, as long as the rules are simple, the patch is easy

[16:04:52.0000] <myndzi>
i just needed to come up with a generalization that will work sufficiently for our purposes :P

[16:05:08.0000] <myndzi>
i get where you're coming from but my boss is already on my ass all the time about trying to do things Right instead of Fast

[16:05:32.0000] <myndzi>
and when it affects business it's not a good time to argue hehe

[16:06:42.0000] <myndzi>
some of these rules are fairly confusing/irritating

[16:06:51.0000] <myndzi>
for example, closing non-special tags says to close implied end tags

[16:07:04.0000] <myndzi>
but closing implied end tags only does anything if the current tag is special

[16:08:57.0000] <myndzi>
i guess that means it must happen in some other situation, but man my head! :\

[16:09:16.0000] <Hixie>
you mean "generate implied end tags"?

[16:09:56.0000] <myndzi>
yeah

[16:10:08.0000] <myndzi>
i guess it could reach a special tag as part of the loop process

[16:10:32.0000] <Hixie>
<div><p></div> has to close the <p>

[16:10:32.0000] <myndzi>
except it says to abort in that case

[16:10:51.0000] <Hixie>
i guess i don't understand what you mean exactly

[16:11:19.0000] <Hixie>
do you have an example that invokes the algorithm that is pointless?

[16:31:35.0000] <myndzi>
i could try, but not right now

[16:31:39.0000] <myndzi>
here is one that's worth looking at though

[16:31:50.0000] <myndzi>
(This will never fail, since the loop will always terminate in the previous step if the top of the stack â an html element â is reached.)

[16:32:01.0000] <myndzi>
but the list for element in select scope does not include 'html'

[16:41:09.0000] <Hixie>
myndzi: if you're in select scope, then you'll stop at the select.

[16:41:49.0000] <Hixie>
myndzi: (everything is in the list for select, except optgroup and option)

[16:42:49.0000] <myndzi>
yeah, presumably it relies on having inserted the select earlier

[17:46:58.0000] <muyyatin>
I wish pointer-events would apply to Canvas elements in IE. It's not really MORE of a security risk, since you could replace the canvas with an embedded SVG image using toDataURL(). </rant>

[01:49:08.0000] <hsivonen>
Ms2ger: I sync the html5lib tests manually when I happen to be working on related stuff

[01:53:09.0000] <jgraham>
hsivonen: Would you care if they were in git instead of hg?

[01:54:39.0000] <hsivonen>
jgraham: not really

[01:55:02.0000] <jgraham>
hsivonen: Excellent :)

[08:27:09.0000] <slightlyoff>
annevk: about the on()/addEventListener() return...

[08:27:20.0000] <slightlyoff>
you around?

[08:35:12.0000] <dglazkov>
good morning, Whatwg!

[08:40:11.0000] <JonathanNeal>
Good morning!

[08:41:47.0000] <slightlyoff>
howdy dglazkov

[09:35:56.0000] <annevk>
slightlyoff: am now

[09:36:16.0000] <annevk>
slightlyoff: middle of meeting week

[09:36:33.0000] <slightlyoff>
yeah, sorry to pounce durring your first week

[09:38:41.0000] <annevk>
I'm thinking next week will be better

[09:38:58.0000] <annevk>
there's also all these silly UK forms I need to fill out

[09:41:39.0000] <slightlyoff>
annevk: was thinking that the returned object should have a method that allows you to disconnect (and perhaps reconnect)

[09:42:13.0000] <annevk>
yeah, that's the idea

[09:42:24.0000] <zewt>
if anybody's bored and feels like taking a stab at explaining this behavior before i file a bug on webkit: https://zewt.org/~glenn/test-webkit-transition-bug.html run test(); the text appears on top of the blue box above it at weird times

[09:42:31.0000] <annevk>
well, initially Jake came up with the idea of just returning a function, but people didn't like that

[09:42:39.0000] <zewt>
annevk: hi

[09:42:45.0000] <zewt>
heh

[09:43:13.0000] <annevk>
still need to ask some people about memory usage around that

[09:44:06.0000] <zewt>
annevk: i'm curious if you find anything out, since i'd expect creating an object and creating a closure function to be pretty much the same thing

[09:44:22.0000] <zewt>
but of course reality doesn't always meet expectations, so

[09:44:48.0000] <annevk>
well, if you have an object you still need the function

[09:45:00.0000] <annevk>
so you'd have at least twice the stuff

[09:45:26.0000] <zewt>
but it'd be the same function on all of the objects, just a value hanging off the interface like any other interface function

[09:47:27.0000] <annevk>
yeah, not sure how that works, guess that varies per engine

[09:47:35.0000] <zewt>
either way you (at least naively) have references to two objects: either the observation and an interface, or the observation and a function

[09:47:40.0000] <slightlyoff>
note: functions are objects =)

[09:48:05.0000] <zewt>
slightlyoff: right, but the important thing is that this is a closure, not just a function

[09:48:26.0000] <zewt>
that is, you aren't returning the same function every time, you still have to allocate something to stash what it's for

[09:48:40.0000] <zewt>
anyway, yeah, let me know what you find out

[09:49:40.0000] <slightlyoff>
there's no difference (aside from optimization) between allocating a new function and a new object of some other sort

[09:49:48.0000] <slightlyoff>
zewt: closures aren't magic

[09:49:52.0000] <zewt>
slightlyoff: that's what i'm saying :)

[09:50:13.0000] <slightlyoff>
yes, it's possible to optimize away internal storage for a function that closes over no free variables

[09:50:21.0000] <slightlyoff>
but not all engines will (or do)

[09:50:34.0000] <slightlyoff>
and we can't require that in the spec

[09:50:39.0000] <zewt>
not really related here

[09:51:06.0000] <zewt>
since it *does* have storage (the function would have to have a reference to the event handler it manipulates)

[09:51:16.0000] <slightlyoff>
correct

[09:58:34.0000] <JonathanNeal>
Y U NO ALLOW NEGATIVE PADDING?

[09:58:58.0000] <Hixie>
what would it mean?

[10:00:43.0000] <JonathanNeal>
Well, before I answer that, let me admit that "padding" is the wrong word to describe the problem I'm trying to solve. I'm trying to give an element a negative inset for its contents, similar to what a negative padding might do, in theory.

[10:03:30.0000] <zewt>
(negative margins won't work for your case for some reason?)

[10:03:42.0000] <JonathanNeal>
I'll put an example online.

[10:03:43.0000] <zewt>
or do you want to extend the contents beyond the box?

[10:06:24.0000] <zewt>
reduced weird webkit bug, and still not sure how to work around it; bleh

[10:10:08.0000] <annevk>
hmm smaug____ doesn't even care

[10:10:27.0000] <annevk>
well I guess that's settled then

[10:10:31.0000] <annevk>
now I just need to find some time

[10:13:54.0000] <JonathanNeal>
I have a container with 4 panels. These panels have gutters between them, like columns in print, but there are no gutters between the edge of the panels and the container. Since this is being done on the web, I'm taking advantage of media queries. At high resolutions, the panels have these widths: 50%, 50%, 50%, and 50%, so that visually they look like 2 rows. At smaller resolutions, the panels have these widths: 100%, 50%, 50%,

[10:13:54.0000] <JonathanNeal>
100%, so that visually they look like 3 rows.

[10:14:23.0000] <zewt>
annevk: btw. not sure i got a reply to just extending addEventListener instead of adding a whole new entry point

[10:14:45.0000] <annevk>
I think that'd be just confusing

[10:15:08.0000] <annevk>
and doesn't improve on the long name complaint

[10:15:22.0000] <zewt>
how so? handler = elem.addEventListener("click", handler, { alwaysBubble: true, capture: false })

[10:15:37.0000] <Hixie>
JonathanNeal: this seems reasonably easy, is there more to it?

[10:15:42.0000] <slightlyoff>
zewt: you're still typing "addEventListener", which sucks

[10:15:58.0000] <zewt>
while i'm happy to have shorter names, it's not a good enough reason to add a new, different API

[10:16:02.0000] <JonathanNeal>
Hixie: that's it.

[10:16:22.0000] <zewt>
(alias on = addEventListener if anything, no need for distinct APIs)

[10:17:11.0000] <slightlyoff>
zewt: cart before the horse. Lets make something good and *then* see if we can work back to patching addEventListener to support it (which is likely ,but should not be a key goal)

[10:17:32.0000] <Hixie>
JonathanNeal: and what is your markup? just four elements back to back?

[10:17:53.0000] <slightlyoff>
zewt: also, naming is important. Those who say "short names are not enough" are not paying attention to the history of libraries

[10:17:55.0000] <JonathanNeal>
In one container, yes.

[10:18:10.0000] <zewt>
no, don't start by making a whole new API; start with the features and use cases you want, and design an API for them

[10:18:56.0000] <slightlyoff>
zewt: uh...you just pre-disposed and outcome and then said "design for your use-case", which is defeated by pre-supposing the outcome

[10:19:04.0000] <zewt>
and i'm pretty sure the interface I proposed handles the use cases people want (being able to remove the handler without retaining a reference to the function; being able to ignore the bubble flag for event delegation; event delegation filtering)

[10:19:23.0000] <slightlyoff>
zewt: honestly, this is like the second day in a row that you're making me regret signing onto IRC

[10:19:24.0000] <zewt>
slightlyoff: okay, you're apparently not capable of civil conversation, so i'm not having one with you

[10:19:34.0000] <zewt>
wow, first time i've been tempted to /ignore someone on this channel

[10:19:39.0000] <zewt>
congrats, etc

[10:20:31.0000] <annevk>
zewt: I think having a new API map to the same abstract concept is better than retrofitting old APIs

[10:20:48.0000] <annevk>
zewt: because you then a) double the testing and b) need to handle cases like boolean or dictionary

[10:20:54.0000] <zewt>
annevk: why? this seems like a straightforward extension

[10:21:14.0000] <annevk>
if we want to advocate on() anyway there's no need to touch the old code

[10:21:17.0000] <zewt>
a) it definitely doesn't double the testing (what?), and b) that's what webidl is for

[10:21:21.0000] <annevk>
just needs to speak the same language

[10:22:15.0000] <annevk>
it's more confusing too imo

[10:22:21.0000] <zewt>
... why?

[10:23:07.0000] <annevk>
because suddenly addEventListener returns an object that allows for removal rather than using removeEventListener for that, etc.

[10:23:11.0000] <annevk>
seems kinda obvious

[10:23:24.0000] <Hixie>
JonathanNeal: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2080 http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2081

[10:23:36.0000] <Hixie>
JonathanNeal: i sadly had to add a wrapper div around each one because we don't have ::outside yet

[10:24:04.0000] <zewt>
annealtf4

[10:27:18.0000] <zewt>
for the irc log record, there's nothing confusing about adding a feature to addEventListener to make it return an object instead of nothing

[10:27:38.0000] <JonathanNeal>
Hixie: got it, so you can't use the wrapper div.

[10:27:42.0000] <JonathanNeal>
I see.

[10:29:13.0000] <smaug____>
/me does care

[10:31:23.0000] <JonathanNeal>
Hixie: you've also got overflow in your example

[10:31:27.0000] <JonathanNeal>
the body is scrolling x

[10:31:40.0000] <Hixie>
JonathanNeal: yeah it probably needs minor tweaks

[10:31:47.0000] <Hixie>
overflow-x:hidden e.g.

[10:35:07.0000] <JonathanNeal>
Right, which has its own issues. That's where I'm at too.

[10:35:33.0000] <JonathanNeal>
I don't wrap each panel though, I put a wrapper just inside the container.

[10:35:56.0000] <Hixie>
the wrapping of each panel lets you more easily just set the horizontal width at the margin level

[10:36:03.0000] <Hixie>
you can probably get it to work with box-sizing too

[10:36:29.0000] <Hixie>
if you don't care about the boxes being _exactly_ equal width, you can easily get rid of the scrollbar by setting the left margin on the first one and the right margin on the last one to 0

[10:36:34.0000] <Hixie>
and then removing the negative margins

[11:23:46.0000] <JonathanNeal>
I'm using box-sizing: border-box.

[11:24:02.0000] <JonathanNeal>
I wish it were the default anyway.

[13:24:07.0000] <zewt>
i ooooi

[13:47:31.0000] <zewt>
did i just vim all over the channel

[14:55:40.0000] <zewt>
i guess one problem with the "clone a DocumentFragment then appendChild it" template pattern is you lose any reference to the nodes when they're inserted :|

[15:15:26.0000] <smaug____>
/me wonders why table sorting has anything to do with microtasks

[15:58:38.0000] <volkmar>
Hixie: by any chance, do you know how the size of the <input type='file'> in webkit is computed?

[15:59:34.0000] <Hixie>
like, in pixels?

[15:59:35.0000] <Hixie>
no idea

[15:59:43.0000] <Hixie>
i would assume it's fixed? or based on the font-size?


2013-02-06
[16:07:52.0000] <volkmar>
Hixie: I guess so

[16:13:44.0000] <Hixie>
volkmar: TabAtkins might know

[01:51:02.0000] <jgraham>
odinho: In test metadata is seriously overrated

[01:51:10.0000] <jgraham>
Please don't makework people with it :)

[02:17:38.0000] <odinho>
jgraham: author is extremely helpful

[02:18:06.0000] <odinho>
jgraham: The help-assert things not as much right now. But for IDB, I did add lots of asserts etc to the tests, and had a script hilight the parts of the spec that was covered.

[02:18:10.0000] <odinho>
jgraham: That was very helpful.

[02:18:12.0000] <jgraham>
odinho: Happily git provides that information for you

[02:18:46.0000] <jgraham>
And with the directory structure thing you get close to help-assert with no effort

[02:18:48.0000] <marcosc>
Is it true that all the kids are no longer using booleans in APIs? That they prefer strings even in cases where things are clearly suited to be a boolean data type?

[02:19:12.0000] <jgraham>
/me goes looking for a five year old to ask

[02:19:28.0000] <odinho>
marcosc: ... No? Strings instead of stupid integers.

[02:19:38.0000] <odinho>
So called constants.

[02:19:46.0000] <marcosc>
yeah, that one makes sense

[02:19:48.0000] <marcosc>
but ...

[02:19:56.0000] <marcosc>
see this: http://www.w3.org/TR/2013/WD-web-alarms-20130205/#interface-alarmmanager

[02:19:58.0000] <jgraham>
marcosc: It is certainly true that a) people are using strings rather than named constants and b) there is a school of thought that bools in APIs are always bad

[02:20:15.0000] <marcosc>
the enum in that API

[02:20:19.0000] <marcosc>
enum TimezoneDirective { "respectTimezone", "ignoreTimezone" };

[02:20:41.0000] <marcosc>
seems kinda silly to have a required enum that is just a boolean

[02:20:54.0000] <jgraham>
Well

[02:21:07.0000] <odinho>
marcosc: More readable

[02:21:25.0000] <jgraham>
The theory is that AlaramManager.add(some_date, true)

[02:21:28.0000] <marcosc>
odinho: right, it's more readable, but the type could still be a boolean

[02:21:33.0000] <odinho>
marcosc: although camelCase bloat is superugly.

[02:21:43.0000] <jgraham>
is impossible to understand without the API documentation to ahnd

[02:21:45.0000] <jgraham>
*hand

[02:21:46.0000] <marcosc>
AlaramManager.add(some_date, "respectYo")

[02:21:50.0000] <marcosc>
would still work just fine

[02:22:04.0000] <marcosc>
if the type was boolean

[02:22:15.0000] <odinho>
marcosc: lol, but people won't write that

[02:22:16.0000] <jgraham>
Woah

[02:22:23.0000] <odinho>
marcosc: And doesn't for false

[02:22:24.0000] <jgraham>
That's crazy

[02:22:30.0000] <odinho>
And it is crazy

[02:22:35.0000] <odinho>
^_^

[02:22:41.0000] <marcosc>
sure, it's crazy

[02:22:49.0000] <odinho>
So, down with the crazy man

[02:22:57.0000] <jgraham>
Personally, I would have set a default for respectTimezone and had

[02:23:05.0000] <marcosc>
I agree

[02:23:11.0000] <odinho>
Mm.

[02:23:12.0000] <marcosc>
jgraham: it should be optional

[02:23:15.0000] <jgraham>
AlarmManager.add(data, {respectTimezone:false, data:[]})

[02:23:28.0000] <odinho>
Coolest kids use that these days.

[02:23:34.0000] <odinho>
It's in IDB

[02:23:46.0000] <odinho>
why double data?

[02:23:46.0000] <marcosc>
IDB is hated by all the kids

[02:23:54.0000] <jgraham>
odinho: Those two sentences don't agree :)

[02:23:55.0000] <odinho>
ah, you misspelled date

[02:24:03.0000] <jgraham>
Yeah

[02:24:07.0000] <odinho>
IDB is cool, man.

[02:24:18.0000] <jgraham>
date as a required parameter

[02:24:30.0000] <jgraham>
and the bool as an optional, named, parameter

[02:24:40.0000] <marcosc>
check all the hate at the bottom of http://www.html5rocks.com/en/tutorials/indexeddb/todo/http://www.html5rocks.com/en/tutorials/indexeddb/todo/

[02:24:43.0000] <marcosc>
http://www.html5rocks.com/en/tutorials/indexeddb/todo/

[02:24:44.0000] <marcosc>
even

[02:24:45.0000] <jgraham>
Or at least as some fake due to js deficiencies in this area

[02:26:44.0000] <marcosc>
seems like bad design in IDB that you have to wrap all your operations in a function, leads to a lot of bloat and you can't write the code atomically (e.g., in the browser's JS console)

[02:27:33.0000] <jgraham>
Well it has to be async

[02:28:21.0000] <marcosc>
yes, I get that. But setting event handlers after you start an operation seems a bit ... um... strange

[02:28:40.0000] <jgraham>
Well

[02:28:52.0000] <jgraham>
It makes sense if you understand the model

[02:29:20.0000] <jgraham>
Doesn't mean that it couldn't be better of course

[02:29:32.0000] <jgraham>
But I'm not sure what you are proposing as better

[02:29:37.0000] <marcosc>
Don't get me wrong, I get the model. It's just assumes that the code is all self contained in a file.

[02:31:17.0000] <marcosc>
jgraham: true, I'm not really proposing anything I guess. I guess most people would expect making, for instance, and OpenDBRequest (onsucces, onfail set), and then OpenRequst.open()

[02:31:43.0000] <marcosc>
OpenDBRequest even

[02:32:09.0000] <marcosc>
instead of function(){ ... do a bunch of DB stuff ...}();

[02:33:08.0000] <marcosc>
the above takes all the fun out of async programming

[02:33:50.0000] <marcosc>
because it forces the actual javascript to be programmed as if it is sync by needing to wrap everything in a function

[02:35:10.0000] <marcosc>
Anyhooo

[02:35:22.0000] <odinho>
I prefer how it is now to that. :-)

[02:35:39.0000] <marcosc>
why is that?

[02:37:41.0000] <jgraham>
The callback style does tend to lead to spaghetti. And isn't really a pattern in the platform.

[02:37:52.0000] <jgraham>
Maybe you could make something based on promises

[02:38:00.0000] <marcosc>
promises would be nice

[02:38:09.0000] <jgraham>
Which would at least flatten out the spagetti

[02:38:21.0000] <odinho>
It is promises now, is it not?

[02:38:37.0000] <jgraham>
It's event based now isn't it?

[02:38:51.0000] <marcosc>
I thought it was all strings and no booleans?

[02:39:29.0000] <marcosc>
It's events by the looks of it

[02:39:30.0000] <odinho>
Yeah events, -- I didn't think they excluded eachother.

[02:39:49.0000] <odinho>
Promises work on top of events, do they not?

[02:40:48.0000] <jgraham>
Well, maybe given an event api you can write a promised, based API

[02:40:52.0000] <jgraham>
I'm not sure

[02:40:58.0000] <marcosc>
I'm not sure either

[02:40:59.0000] <jgraham>
But they are not identical at least

[03:48:35.0000] <annevk>
Man that spec is poorly written :(

[03:48:50.0000] <annevk>
http://sysapps.github.com/sysapps/proposals/alarm/Overview.html that is

[03:49:06.0000] <marcosc>
it's only a FPWD

[03:49:08.0000] <marcosc>
but yeah

[03:49:36.0000] <marcosc>
annevk: do you have any opinions about the whole http://sysapps.github.com/sysapps/proposals/alarm/Overview.html#interface-alarmrequest

[03:50:13.0000] <annevk>
Apart from it not being written properly?

[03:50:18.0000] <marcosc>
yeah

[03:50:22.0000] <annevk>
getAll() has the wrong signature

[03:50:35.0000] <marcosc>
Look at that AlarmRequest thing

[03:50:37.0000] <annevk>
enums should not use camelcase

[03:50:56.0000] <marcosc>
It's like a bad mix of events and callbacks

[03:51:30.0000] <annevk>
It's just events no?

[03:51:45.0000] <marcosc>
except for the error attribute

[03:51:47.0000] <annevk>
Except they're using some ancient syntax to declare event handlers

[03:51:54.0000] <marcosc>
yeah, just ignore that

[03:51:58.0000] <marcosc>
that's easy to update

[03:52:09.0000] <marcosc>
I'm about to do a pull request and fix all those

[03:52:25.0000] <marcosc>
I'm more concerned about the whole AlarmRequest model

[03:52:46.0000] <marcosc>
and the fact that this adds yet another database to the web platform

[03:52:59.0000] <marcosc>
(well, at least it tries to)

[03:53:04.0000] <karlcow>
:)

[03:53:15.0000] <karlcow>
one db for all

[03:53:32.0000] <marcosc>
sure, why not :)

[03:53:35.0000] <karlcow>
(my precious)

[03:54:13.0000] <annevk>
marcosc: I just looked at it high-level, actually reviewing would take more time

[03:54:24.0000] <marcosc>
annevk: fair enough

[03:54:56.0000] <annevk>
marcosc: maybe slightlyoff can yell at them so we don't have to :)

[03:55:07.0000] <marcosc>
heh, that would be nice :)

[03:57:03.0000] <annevk>
Hmm, need to install XCode again forgot about that

[03:57:12.0000] <annevk>
kinda happy I wrote that blog post now

[03:57:47.0000] <marcosc>
new mac, eh? Always fun :)

[03:58:04.0000] <annevk>
yeah and it's awesome

[03:58:18.0000] <annevk>
have to get used to not rebooting it all the time

[03:58:25.0000] <marcosc>
My main motivation for trying to get to the TAG meeting is so I can go shopping at the Mac Store :)

[03:58:55.0000] <marcosc>
So much cheaper in the US

[04:00:00.0000] <annevk>
Would be nice to say hi too :)

[04:01:56.0000] <annevk>
What's the canonical URL for Opera Nightly?

[04:02:19.0000] <jgraham>
There isn't one, I don't think

[04:02:26.0000] <jgraham>
I mean there is the desktop team blog

[04:02:28.0000] <annevk>
doh http://www.opera.com/browser/next/

[04:02:34.0000] <annevk>
or is that not it?

[04:02:45.0000] <jgraham>
Well yeah

[04:03:08.0000] <jgraham>
But that isn't always the actual latest version

[04:03:16.0000] <marcosc>
annevk: I usually just go to the desktop blog

[06:23:25.0000] <annevk>
Hmm, to install Anolis I need to have hg?

[06:24:00.0000] <annevk>
Maybe Anolis should move to GitHub

[06:27:58.0000] <MikeSmith>
annevk: you gotta have hg to build firefox

[06:28:25.0000] <annevk>
babysteps

[06:28:41.0000] <darobin>
putting Anolis on GH would certainly be nicer

[06:29:41.0000] <darobin>
for one it would make it possible to have it in a submodule when it's a dependency

[06:30:12.0000] <jgraham>
You can get Mozilla on git also these days

[06:30:19.0000] <jgraham>
You might need hg to commit

[06:31:21.0000] <jgraham>
https://github.com/mozilla/mozilla-central

[06:34:26.0000] <MikeSmith>
jgraham: oh didn't know

[06:49:19.0000] <MikeSmith>
so btw it seems we are definitely going to have a WebApps WG meetup on April 25 and 26 in California

[06:49:51.0000] <MikeSmith>
and HTML WG on 23 and 24

[06:50:06.0000] <MikeSmith>
and I think WebAppSec on 23 and 24 as well

[06:52:09.0000] <Ms2ger>
annevk, so you're becoming lead editor for sysapps?

[06:53:55.0000] <MikeSmith>
'git push origin master:gh-pages' to push current master /wo extra local gh-pages branch

[06:54:02.0000] <MikeSmith>
dinnet know you could do that

[06:54:12.0000] <MikeSmith>
https://twitter.com/jviereck/status/299032009156726784

[06:56:31.0000] <jgraham>
MikeSmith: The git bit or the github bit?

[06:57:09.0000] <MikeSmith>
git bit

[06:57:19.0000] <jgraham>
Ah

[06:57:46.0000] <MikeSmith>
can you use that locally too?

[06:57:51.0000] <jgraham>
You can even write HEAD instaed of master to push the head of the working branch. Or any random SHA1

[06:57:58.0000] <MikeSmith>
ok

[06:58:17.0000] <MikeSmith>
d'oh forget what I asked about locally

[06:58:38.0000] <MikeSmith>
obviously not relevant for push 'ing

[07:44:48.0000] <zewt>
eh, is there really no way to tell box-shadow to draw the whole shadow and not cut out the box

[08:14:29.0000] <kerozene>
I wish. would make transparent borders more fun

[08:23:06.0000] <annevk>
Ms2ger: euh no :)

[08:23:48.0000] <annevk>
Ms2ger: trying to fix a bug in DOM

[08:23:55.0000] <annevk>
Ms2ger: but the meetings slow me down

[08:24:05.0000] <Ms2ger>
Heh

[08:24:41.0000] <Ms2ger>
And if you don't go there, they just have you do attrexodus :)

[08:25:34.0000] <annevk>
Ms2ger: exactly, we assign action items to pseudonymous external contributors

[08:25:46.0000] <Ms2ger>
Damn you all! :)

[08:31:27.0000] <Ms2ger>
Hmm, CSS discussing <!--/--> in style sheets

[08:51:10.0000] <annevk>
Ms2ger: what's there to discuss?

[08:53:01.0000] <Ms2ger>
Whether they're allowed in variables, aiui

[08:56:51.0000] <annevk>
Good times

[08:57:04.0000] <annevk>
Ms2ger: so uh, put Anolis under WHATWG?

[08:57:12.0000] <annevk>
Ms2ger: then I won't have to install hg

[08:57:27.0000] <annevk>
/me has reached the point where Anolis is the bottleneck

[08:58:38.0000] <annevk>
/me decides to not let Ms2ger be a bottleneck

[09:00:37.0000] <Ms2ger>
wfm :)

[09:09:28.0000] <annevk>
Hmm, how can installing command line tools possibly fail?

[09:27:35.0000] <annevk>
oh yes

[09:27:36.0000] <annevk>
it works

[09:27:55.0000] <annevk>
why o why did /usr/local/bin become permission denied?

[09:27:57.0000] <annevk>
so weird

[09:37:12.0000] <hsivonen>
has the SETTINGS: prefer-online thing always been there for app cache?

[09:38:01.0000] <hsivonen>
I don't see prefer-online on MXR. strongly suggests we don't support it

[09:38:06.0000] <hsivonen>
does Chrome?

[09:39:37.0000] <hsivonen>
not found in https://mxr.mozilla.org/chromium/search?string=prefer-online either

[09:40:11.0000] <hsivonen>
so is the SETTINGS part of the spec fiction?

[09:41:18.0000] <hsivonen>
ah. it was not always there: http://labs.ft.com/2012/07/prefer-online-not-so-much/

[09:45:13.0000] <hsivonen>
we really need spec edits to start with red background that fades to white over time

[09:45:31.0000] <hsivonen>
so that you could tell new fiction from real stuff

[09:45:57.0000] <Ms2ger>
What colour would the navigation stuff be? :)

[09:46:46.0000] <annevk>
Ms2ger: go create Attr objects :p

[09:47:03.0000] <Ms2ger>
That's on my todo list for tomorrow ;)

[09:49:15.0000] <dglazkov>
good morning, Whatwg!

[09:49:23.0000] <hsivonen>
does IE10 support prefer-online?

[10:07:35.0000] <annevk>
Ms2ger: sweet

[10:09:11.0000] <hsivonen>
whoa whoa. Hixie basically advocates news sites and blogs to become Ajax apps instead of traditionally crawlable pages in https://www.w3.org/Bugs/Public/show_bug.cgi?id=14702#c20

[10:11:53.0000] <nimbu>
hsivonen: are you gawker.com

[10:13:43.0000] <hsivonen>
nimbu: no, but what Hixie advocated in that bug is pretty shocking considering how people who try to use the app cache disagree

[10:18:11.0000] <hsivonen>
did IE10 extend app cache somehow?

[10:20:27.0000] <hsivonen>
:-( https://www.w3.org/Bugs/Public/show_bug.cgi?id=14702#c31

[10:21:21.0000] <hsivonen>
Hixie: do you have a proposed set of changes to HTTP cache management that would address all the online acceleration use cases app cache is used for?

[10:24:43.0000] <hsivonen>
in the Client-Hints case, the person proposing it is a server module dev and has an HTTP hammer

[10:25:09.0000] <annevk>
hsivonen: yeah IE has extensions

[10:25:18.0000] <hsivonen>
but then in most other cases, devs want non-HTTP solutions, because HTTP headers are too hard

[10:25:36.0000] <hsivonen>
(though Client-Hints is a request header and response headers are too hard)

[10:25:48.0000] <hsivonen>
annevk: I didn't find them on MSDN. URL?

[10:26:16.0000] <hsivonen>
the prefer-online thing is so sad

[10:26:43.0000] <hsivonen>
it should be prefer-online-if-newer-than: 5min

[10:26:58.0000] <annevk>
I think you can find them in W3C Bugzilla

[10:27:11.0000] <annevk>
a WONTFIXed bug somewhere

[10:29:01.0000] <annevk>
https://www.w3.org/Bugs/Public/buglist.cgi?query_format=advanced&list_id=4905&short_desc=appcache&bug_status=UNCONFIRMED&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED&bug_status=RESOLVED&bug_status=VERIFIED&bug_status=CLOSED&short_desc_type=allwordssubstr

[10:38:03.0000] <Ms2ger>
OH: "Bert resisting"

[12:13:12.0000] <Hixie>
hsivonen: um, no. i advocate _applications_ with data to be ajaxified.

[12:13:43.0000] <Hixie>
hsivonen: in general if you could just assume i'm not an idiot and interpret my statements in that light, that would help :-)

[12:14:06.0000] <jgraham>
/me isn't clear what's an application and what's a document

[12:14:17.0000] <jgraham>
e.g. is the new blogger an application or a document?

[12:14:18.0000] <Hixie>
hsivonen: well, it's a continuum

[12:14:24.0000] <esprehn>
jgraham: number of bytes of JS ;)

[12:14:57.0000] <jgraham>
esprehn: In that case it's an application for sure :)

[12:15:01.0000] <Hixie>
but generally speaking, a document is something that you give to other people to read, whereas an application is something that you log into to edit data

[12:15:35.0000] <Hixie>
er, s/hsivonen/jgraham/ in my most recent use of "hsivonen"

[12:16:33.0000] <Hixie>
hsivonen: dunno if it solves everything, but https://www.w3.org/Bugs/Public/show_bug.cgi?id=20083 is one proposal.

[12:17:05.0000] <Hixie>
hsivonen: for reasons i don't understand, the main people interested in appcache keep doing things in f2f meetings and the like instead of commenting on the whatwg list

[12:17:11.0000] <Hixie>
(or any other public list for that matter)

[12:21:30.0000] <jgraham>
Yes, I feel totally out of the loop on app-cache

[12:21:36.0000] <jgraham>
But on the other hand

[12:22:03.0000] <jgraham>
It seems fitting that all the discussions are happening off line

[12:22:15.0000] <esprehn_>
have things changed in app cache?

[12:22:22.0000] <Hixie>
hah

[12:22:44.0000] <Hixie>
esprehn_: not in the last few days

[12:23:11.0000] <Hixie>
i think medium term the next news on appcache will be some sort of generic network-layer filter

[12:23:49.0000] <Hixie>
that runs JS in its own thread and can respond to requests either by passing them through, or generating files, or getting files from a cache

[12:23:58.0000] <Hixie>
the biggest thing blocking that, i think, is lack of a good place to store files

[12:25:36.0000] <jgraham>
Woah

[12:25:44.0000] <jgraham>
That sounds scary

[12:25:57.0000] <Hixie>
that's what https://www.w3.org/Bugs/Public/show_bug.cgi?id=20083 is about

[12:27:09.0000] <esprehn_>
This has come up several times internally at Google

[12:27:36.0000] <esprehn_>
no one wants a manifest file, you want to be able to say "requests to http://xxx.com/ should go to a worker instead"

[12:27:56.0000] <jgraham>
Bugzilla makes it very easy to not know about these conversations

[12:28:14.0000] <Hixie>
esprehn_, jgraham: yeah, i keep telling people to post to the whatwg list

[12:28:29.0000] <Hixie>
the only public discussion i was able to get was that brain dump in the bug

[12:28:48.0000] <Hixie>
we're not going to get anywhere until people can discuss this publicly

[12:28:49.0000] <jgraham>
It explains why the whatwg list is so quiet these days

[12:28:59.0000] <jgraham>
If everyone is ghettoising

[12:29:42.0000] <esprehn_>
Hixie: I'll see if I can dig up our diagram from the architecture for that

[12:29:56.0000] <jgraham>
Anyway, without reading any of the bug, I wonder if this will avoid the problems of autoproxy

[12:29:57.0000] <esprehn_>
Hixie: you need magic for things like HttpOnly cookies to work

[12:30:10.0000] <jgraham>
Not that I remember exactly what those problems *are*

[12:30:42.0000] <jgraham>
But obviously badly behaved scripts can be problematic if they block network reqiests

[12:30:45.0000] <jgraham>
*requests

[12:31:07.0000] <jgraham>
(maybe this is less problematic if it is same-origin only)

[12:31:16.0000] <Hixie>
esprehn_: what's really needed is just a description of the problems we're trying to solve. even the brain dump in the bug is mostly talking about solutions, not problems.

[12:31:29.0000] <Hixie>
jgraham: this would be on a worker thread, and same-origin only.

[12:31:47.0000] <Hixie>
jgraham: (or rather, per-origin; i suppose an origin can provide a worker for when it's accessed from another?)

[12:32:13.0000] <esprehn_>
Hixie: I'll see if I can gather my notes from the discussions. There were just more pressing things at the time like Web Components

[12:32:14.0000] <Hixie>
jgraham: so you couldn't really do anything you can't do already on the server, in terms of harm.

[12:32:38.0000] <jgraham>
Yeah, being in a worker helps of cource since you can't block the event loop

[12:33:07.0000] <esprehn_>
effectively you want a persistent worker per origin, perhaps with some path prefixing logic

[12:34:19.0000] <esprehn_>
You run into issues with http://www.google.com/calendar/ and /images/ and other apps. They each need their own.

[12:36:25.0000] <Hixie>
the biggest problem i see is how to bootstrap without adding latency for first load yet without making first load avoid using the worker...

[12:37:18.0000] <Hixie>
the obvious way is to send a header with the request that says "if you recognise this, then instead of sending me back the page, send me back the worker", but you still add at least one RTT to the cost

[12:37:32.0000] <Hixie>
(and you add a header, which is itself bad)

[12:37:42.0000] <esprehn_>
what's the issue with the header?

[12:38:51.0000] <Hixie>
you have to send it on every request, so it costs global bandwidth; plus it adds a fingerprinting bit, plus it runs compat risks

[12:39:14.0000] <Hixie>
i guess the fingerprinting bit in this case would be correlated with the UA string so it wouldn't add a whole bit

[12:39:29.0000] <esprehn_>
heh, stick it on favicon

[12:39:39.0000] <Hixie>
wouldn't solve the path problem

[12:40:01.0000] <esprehn_>
sorry, which path problem?

[12:40:08.0000] <Hixie>
the one you mentioned, /calendar vs /mail

[12:40:13.0000] <Hixie>
nor does it solve the RTT issue

[12:41:19.0000] <esprehn_>
well, the header could specify which path it pertains to

[12:41:25.0000] <esprehn_>
or a table of paths

[12:41:44.0000] <Hixie>
oh you mean a header on the response

[12:41:45.0000] <Hixie>
interesting

[12:41:47.0000] <Hixie>
i meant on the request

[12:42:05.0000] <esprehn_>
ah no, the server should respond back with a table of delegates

[12:42:21.0000] <Hixie>
header on the response could work, though it still doesn't solve the RTT issue -- in fact it makes it worse

[12:42:28.0000] <Hixie>
now you have to do 3 RTTs to do what today uses just one

[12:42:47.0000] <esprehn_>
3?

[12:42:58.0000] <Hixie>
4, i guess

[12:43:34.0000] <esprehn_>
we decided it was probably fine for first request to hit the server unless the worker was already running

[12:43:36.0000] <Hixie>
1 for TCP handshake, 1 for getting the index file, which you then drop because you see the header with this script, one to get the script, and one to get the data.

[12:44:00.0000] <Hixie>
well it would be pretty hard for the first request not to hit the server if you don't know about the worker :-P

[12:44:06.0000] <esprehn_>
right

[12:44:32.0000] <esprehn_>
I don't think you should need to pipe through the worker

[12:44:34.0000] <Hixie>
anyway, 4 RTTs just to get what today takes 2 is a big latency hit

[12:45:09.0000] <esprehn_>
so it wouldn't be 4 RTTs

[12:45:41.0000] <esprehn_>
you'd never "drop the current request", the header only applies to subsequent requests

[12:46:26.0000] <Hixie>
that's the "without making first load avoid using the worker" problem i was trying to solve

[12:46:42.0000] <Hixie>
it's pretty horrible to have a system where the very first time you try to use it, it doesn't work the way it's supposed to.

[12:46:59.0000] <Hixie>
not that i see another solution, but it doesn't make it any less lame

[12:47:23.0000] <esprehn_>
yeah, I think it's a reasonable compromise

[12:47:59.0000] <Hixie>
compromises suck.

[12:48:00.0000] <Hixie>
:-)

[12:49:04.0000] <esprehn_>
I don't know of any solution that isn't a compromise on the web

[12:49:05.0000] <esprehn_>
:)

[12:49:27.0000] <Hixie>
well, yeah

[12:49:30.0000] <Hixie>
but i keep hoping!

[12:49:31.0000] <Hixie>
one day!

[12:49:38.0000] <Hixie>
we shall solve a problem well!

[12:49:41.0000] <esprehn_>
cupcakes and ponies!

[13:19:24.0000] <Hixie>
is it just me or does this page not actually show the diff? https://github.com/w3c/html/commit/3d85bac87355240a433865ec56074a80c33a271d

[13:19:28.0000] <Hixie>
and how do i get to see the diff?

[13:21:24.0000] <miketaylr>
Hixie: https://github.com/w3c/html/commit/3d85bac87355240a433865ec56074a80c33a271d.diff

[13:21:28.0000] <miketaylr>
add .diff?

[13:21:36.0000] <Hixie>
is there ui for that?

[13:21:41.0000] <miketaylr>
oh, dunno

[13:21:45.0000] <Hixie>
or are we supposed to divine it

[13:21:50.0000] <Hixie>
(thanks, btw)

[13:22:34.0000] <gavinc>
Hixie: it looks like github decided that was a binary file, thus the lack of diff showing up on the page

[13:22:45.0000] <Hixie>
i see

[13:23:00.0000] <Hixie>
poor file doesn't have a single 8th bit set anywhere, but ok github :-)

[13:23:15.0000] <gavinc>
I imagine it has a size trigger ;)

[13:23:18.0000] <Hixie>
(or at least my version doesn't, i guess it's possible the htmlwg's does)

[13:23:25.0000] <gavinc>
Most source files aren't 5mb

[13:23:29.0000] <Hixie>
pah

[13:44:11.0000] <Hixie>
two questions:

[13:44:23.0000] <Hixie>
(a) why doesn't https://dvcs.w3.org/hg/d4e/raw-file/tip/source_respec.htm define the actual event processing model? or am i missing something?

[13:44:54.0000] <Hixie>
(b) why doesn't it document the actually implemented 'mousewheel' event with wheelDelta, or am I missing something?

[14:19:19.0000] <Hixie>
MikeSmith: yt?

[14:28:21.0000] <Hixie>
MikeSmith: nm, i asked my question in https://www.w3.org/Bugs/Public/show_bug.cgi?id=20068

[14:40:49.0000] <rillian>
Hixie: re bug 20889, I think I'm misunderstanding how this section is written in general

[14:41:04.0000] <Hixie>
/me looks

[14:41:16.0000] <Hixie>
ah

[14:41:18.0000] <Hixie>
one sec

[14:41:22.0000] <rillian>
I have the same question with srclang

[14:41:40.0000] <Hixie>
see http://whatwg.org/html/#how-to-read-this-specification :-)

[14:41:44.0000] <rillian>
is one a guide for authors and the other parsing instructions

[14:41:57.0000] <Hixie>
(ignore paragraph 1)

[14:42:17.0000] <Hixie>
(about reading it cover to cover)

[14:42:59.0000] <rillian>
:)

[14:43:07.0000] <rillian>
ok, that helps

[14:43:10.0000] <Hixie>
cool

[14:43:26.0000] <rillian>
I'm still unclear how one tells which is which

[14:43:35.0000] <rillian>
maybe IETF specs have warped my mind

[14:43:44.0000] <Hixie>
just read it literally

[14:43:55.0000] <Hixie>
if it says "it must be empty", then when you generate it, you make sure it's empty

[14:44:09.0000] <Hixie>
if it says "if it's not empty", then if it's not empty, you follow the requirement

[14:44:45.0000] <Hixie>
you don't reject anything unless it says "you must reject" or some such

[14:45:10.0000] <Hixie>
(i'm assuming you're writing a browser)

[14:45:19.0000] <Hixie>
(if you're writing an editor or conformance checker, it's different)

[14:47:38.0000] <rillian>
yes, browser in this case

[14:48:01.0000] <rillian>
ok, thanks for explaining

[14:48:24.0000] <Hixie>
np. if it's still unclear don't hesitate to ask further.


2013-02-07
[23:32:36.0000] <MikeSmith>
Hixie: here now

[23:32:48.0000] <MikeSmith>
oh I guess you got your answer

[01:02:09.0000] <MikeSmith>
Hixie: responded on that outline bug https://www.w3.org/Bugs/Public/show_bug.cgi?id=20068#c3

[01:07:49.0000] <jgraham>
MikeSmith: I agree that Hixie's expectation in the first case is bizarre

[01:08:28.0000] <jgraham>
I would at least expect C to be section 1.2

[01:08:49.0000] <MikeSmith>
yeah I think he may have just mistyped that

[01:09:04.0000] <jgraham>
I hope so :)

[01:10:30.0000] <MikeSmith>
but still the fact that the first markup case he gives should have an implied heading at the top level and the second should not, I don't understand why there should be difference

[01:12:06.0000] <Ms2ger>
jgraham, you should assume he isn't an idiot and reinterpret what he says in that light ;ï¿½

[01:12:08.0000] <Ms2ger>
;)*

[01:12:34.0000] <jgraham>
Ms2ger: I preferred your first smilie. Although I don't know what it represents.

[01:13:40.0000] <Philip`>
I think it's someone being punched in the mouth

[01:13:47.0000] <Ms2ger>
Do you know Edvard Munch?

[01:13:49.0000] <jgraham>
MikeSmith: I assuming he is thinking that <section>a<section>b</section><h2>C</h2>c</section> is equivalent to <section>a<section>b</section><section><h2>C</h2>c</section></section>

[01:14:08.0000] <MikeSmith>
I think that smiley is he's giving you the finger

[01:14:40.0000] <MikeSmith>
jgraham: hmm, OK

[01:14:40.0000] <jgraham>
Which makes some sense

[01:14:44.0000] <MikeSmith>
yeah

[01:15:19.0000] <darobin_>
Ms2ger++ # "Do you know Edvard Munch?"

[01:16:24.0000] <jgraham>
Pretty sure you need a seance to know Munch these days

[01:16:32.0000] <jgraham>
Unless you mean in the Biblical sense

[01:16:56.0000] <darobin>
errrr

[01:17:08.0000] <MikeSmith>
maybe ;Ã  means he is simultaneously winking and grave. A grave wink.

[01:17:17.0000] <darobin>
you'd need one hell of a seance to know him in the Biblical sense I'd reckon

[01:17:50.0000] <darobin>
I interpreted it as a winking goatee

[01:18:06.0000] <darobin>
somehow I think that a goatee would really become Ms2ger

[01:18:22.0000] <Ms2ger>
I beg to differ

[01:18:42.0000] <jgraham>
Oh, goat*ee*

[01:19:10.0000] <Ms2ger>
Why thank you, jgraham

[01:19:39.0000] <darobin>
heh

[01:21:46.0000] <MikeSmith>
I wonder what does Hixie use <!--CLEANUP--> for in the spec source

[01:22:12.0000] <MikeSmith>
something he's planning to come back and clean up later?

[01:24:13.0000] <Ms2ger>
I was wondering the same

[01:24:17.0000] <Ms2ger>
/me summons Hixie 

[01:24:55.0000] <jgraham>
/me looks at the time in SF.

[01:25:05.0000] <jgraham>
/me thinks "good luck with that".

[01:26:29.0000] <jgraham>
darobin: You could argue that we have had external contributers. For example Philip` is external for some definition of external.

[01:27:00.0000] <jgraham>
Roughly the definition that means "doesn't get paid to do this"

[01:27:14.0000] <darobin>
jgraham: I know, but I was thinking of people completely outside of the fold

[01:27:32.0000] <darobin>
I mean people know Philip`, it's not like he appeared out of the blue from nowhere like our new contributors

[01:27:52.0000] <jgraham>
Sure, for that definition of "external" I agree

[01:28:05.0000] <Ms2ger>
/me had this manual stuff figured out long ago

[01:28:07.0000] <darobin>
also, I'm annoyed that Kris seems to have nothing better to do than undermine the work done in a group he's supposed to be running

[01:29:28.0000] <jgraham>
Well he was always (one of the) strongest opponents of the github thing

[01:30:34.0000] <darobin>
yeah, but at some point when the decision is made you don't keep shooting at it

[01:30:46.0000] <darobin>
what's more with arguments that are factually wrong

[01:31:20.0000] <jgraham>
For WebApps the decision Hasn't been made (in theory)

[01:31:26.0000] <jgraham>
s/H/h/

[01:31:33.0000] <darobin>
yeah but he was making comments about the HTML work

[01:32:05.0000] <jgraham>
Sure, I agree he was wrong about almost everything he said

[01:32:19.0000] <darobin>
almost? :)

[01:32:29.0000] <jgraham>
Well I guess he got his name right? ;)

[01:32:34.0000] <darobin>
hahaha

[01:33:38.0000] <jgraham>
Anyway, I don't know if he is was just ignorant of the state of the move, or intentionally understating its success to try to put WebApps off

[01:34:03.0000] <jgraham>
I guess the former

[01:34:23.0000] <darobin>
yeah I'm guessing the former

[01:34:35.0000] <Ms2ger>
Clearly you guys haven't been explaining well enough in our meetings

[01:35:17.0000] <jgraham>
I was going to say, maybe an email to public-html[-something] giving the current state of the move would be helpful

[01:35:38.0000] <jgraham>
I have no idea if -something should be -testsuite -admin or nothing at all.

[01:36:31.0000] <Ms2ger>
I thought -admin was just for trolling?

[01:36:50.0000] <darobin>
I reckon to just public-html

[01:37:21.0000] <jgraham>
I suppose you are right, -admin is for DRM

[01:39:13.0000] <Philip`>
darobin: I did appear out of the blue once, but that was many years ago :-(

[01:40:01.0000] <darobin>
Philip`: well we all did, didn't we? :)

[01:40:19.0000] <Ms2ger>
darobin, well, you appeared in a whiff of smoke

[01:40:37.0000] <darobin>
out of the dark

[01:40:41.0000] <darobin>
smelling of brimstone

[01:40:46.0000] <jgraham>
I think you guys need to have a chat with your parents

[01:41:03.0000] <jgraham>
In unrelated news

[01:41:08.0000] <jgraham>
https://github.com/w3c/event-source/pull/7#issuecomment-13218167

[01:41:17.0000] <jgraham>
Does someone want to answer that

[01:41:32.0000] <jgraham>
MikeSmith, darobin: I'm looking at you :)

[01:41:58.0000] <Philip`>
/me is currently "external" mostly in the sense of "not involved at all"

[01:45:35.0000] <darobin>
jgraham: done

[01:47:06.0000] <jgraham>
darobin: Thanks

[01:47:25.0000] <jgraham>
(that does sort of suggest we need a LICENSE file in the repo, or something, no?)

[01:47:32.0000] <darobin>
yeah, we should do that

[01:47:48.0000] <darobin>
actually, I should do that for all my GH repos... (sigh)

[01:48:02.0000] <Ms2ger>
Damn copyright

[01:49:47.0000] <annevk>
slightlyoff: btw, how about instead of inheriting from EventTarget we only give it on() and fire()?

[01:52:54.0000] <darobin>
annevk: are you going to the appcache thing tomorrow?

[01:53:16.0000] <annevk>
darobin: yes

[01:53:55.0000] <darobin>
cool, see you there then

[01:54:42.0000] <annevk>
ah fun

[01:54:46.0000] <hsivonen>
Hixie: I'm not assuming your are an idiot. Sorry if it looked that way. It would help not to treat the people who ask for app cache changes because they want to accelerate non-appy sites as non-idiots, too

[01:55:35.0000] <hsivonen>
Hixie: maybe "just use HTTP cache" isn't the answer when all those people want to push the boundaries of app cache instead of using the HTTP cache

[01:58:59.0000] <hsivonen>
Hixie: yeah, we probably want a worker--based solution for the really hard cases

[02:00:48.0000] <hsivonen>
doh. remove either "not" or "non-" in the last "idiot" sentence above

[02:03:06.0000] <hsivonen>
Hixie: part of the reason why solutions are sought in f2f meetings instead of seeking them at the WHATWG might be that you WONTFIXed the bugs when people tried non-f2f way of working

[02:04:32.0000] <hsivonen>
Hixie: FWIW, I've been saying we might need a way for "important" sites to be able to ensure their HTTP cache entries don't get evicted on an LRU basis among all cache entries

[02:05:04.0000] <hsivonen>
i.e. having separpate cache quota and eviction policy for Facebook vs. random sites

[02:05:11.0000] <hsivonen>
*separate

[02:05:32.0000] <jgraham>
Why wouldn't every site want to opt in to the "I'm important" area?

[02:05:46.0000] <hsivonen>
jgraham: yes. We need to solve that

[02:06:05.0000] <hsivonen>
jgraham: app cache has that problem, too

[02:06:13.0000] <hsivonen>
Chrome just lets them store stuff

[02:06:17.0000] <jgraham>
hsivonen: It's not clear to me as a user that facebook *is* more important than any other site

[02:06:18.0000] <hsivonen>
Firefox prompts

[02:06:21.0000] <hsivonen>
the prompt is bad

[02:06:34.0000] <jgraham>
I mean sure, the fb engineers think so

[02:06:54.0000] <hsivonen>
jgraham: well, Facebook has the engineering resources to treat themselves as more important

[02:07:14.0000] <hsivonen>
i.e. work around the HTTP cache if we don't allow them to make themselves special there

[02:08:56.0000] <jgraham>
This is a bit distressing. The idea that we have to kowtow to big enough sites, even if it doesn't actually provide a net win for users

[02:09:29.0000] <jgraham>
(i.e. if we end up in a situation where fb + gmail always hit the cache, but other sites never hit the cache)

[02:10:10.0000] <hsivonen>
jgraham: other sites can hit the cache, if fb and gmail cache their stuff outside the normal cachequota

[02:10:33.0000] <jgraham>
hsivonen: Right, but at some level we only have a fixed amount of space to play with

[02:11:02.0000] <jgraham>
There is an element of zero-sum about this game

[02:11:16.0000] <hsivonen>
jgraham: well, on desktop the space is most of the time large enough not to matter

[02:11:36.0000] <hsivonen>
jgraham: on mobile, if we don't give them cache space, native app installation will

[02:11:47.0000] <jgraham>
If that was really true it isn't clear why LRU wouldn't be good enough

[02:12:08.0000] <hsivonen>
jgraham: so we should consider ourselves to be in competition with whatever space a native Facebook app gets to consume on the device

[02:13:00.0000] <darobin>
we are

[02:14:02.0000] <darobin>
do browser just use basic LRU? I would think that adding a notion of frequency might be helpful too

[02:14:35.0000] <jgraham>
Well, to the extent this is tied to webapps-as-installable-sites (e.g. a facebook button on your home screen that actually just launches the site), it makes sense to have seperate quotas (and permissions) for that "app"

[02:14:57.0000] <darobin>
I reckon people are doing some f2f for appcache also because some parts get complicated enough that waving hands and doodling on a whiteboard become useful

[02:15:56.0000] <jgraham>
Maybe you could also tie it to pinned tabs in browsers

[02:16:46.0000] <jgraham>
So the point is that big sites aren't special

[02:17:23.0000] <jgraham>
But any site where the user has taken some positive step to indicate that they regard that site as special, is special

[02:19:09.0000] <Ms2ger>
Philip`, while you're here...

[02:26:32.0000] <annevk>
jgraham: you'd implement some kind of popularity-based caching policy

[02:26:54.0000] <annevk>
jgraham: if you visit site A often, it would become more pinned than others

[02:27:41.0000] <Ms2ger>
/me waves at baku 

[02:27:51.0000] <annevk>
On another note, Ms2ger, how about "host-inclusive ancestor" for "inclusive ancestor" that also considers DocumentFragment's host concept

[02:28:04.0000] <baku>
good morning Ms2ger

[02:28:18.0000] <annevk>
Ms2ger: my checkin yesterday didn't consider nesting, so I think introducing a term might be better

[02:28:19.0000] <jgraham>
annevk: That sounds like it can work without anything other than "normal http caching"

[02:28:45.0000] <jgraham>
It just means doign what darobin said and changing LRU to some other heuristic

[02:28:54.0000] <annevk>
jgraham: except that appcache helps caching resources that might not initially be loaded

[02:29:01.0000] <jgraham>
So it doesn't seem like the same thing that hsivonen is talking about

[02:29:04.0000] <annevk>
jgraham: and groups them for a given origin

[02:29:17.0000] <Ms2ger>
I'm not sure if "host-inclusive ancestor" makes it clear that the node itself is included

[02:29:17.0000] <annevk>
What is LRU?

[02:29:27.0000] <jgraham>
Least Recently Used

[02:29:48.0000] <annevk>
Ms2ger: host-including-inclusive ancestor?

[02:29:50.0000] <jgraham>
So when you evict stuff you evict the stuff that was last loaded the longest ago

[02:30:09.0000] <Ms2ger>
I'd drop the second dash, I think

[02:32:03.0000] <jgraham>
Sure, I can see that using app-cache as a formal way of precaching resources can be good. But I don't quite see what you mean by "groups them for a specific origin"

[02:33:14.0000] <annevk>
jgraham: you cache a set rather than a bunch of individual resources

[02:34:50.0000] <jgraham>
But if there are items in that set that you just aren't using it doesn't make sense to keep them in the cache. And if you are using them they won't get evicted anyway

[02:35:15.0000] <jgraham>
So it isn't clear to me why coarser-grained caches are a win

[02:36:27.0000] <annevk>
You want to keep them in the cache because you might use them at some point while offline

[02:37:18.0000] <darobin>
there definitely is value in using appcache for non-appy stuff

[02:37:43.0000] <darobin>
independently of regular caching

[02:37:54.0000] <jgraham>
Yes, I agree that for offline you need a bundle of resources

[02:37:57.0000] <darobin>
for instance, I would like to have a cache of all wikipedia articles that I've ever read

[02:38:00.0000] <darobin>
ditto for specs

[02:38:24.0000] <jgraham>
darobin: You can't keep all specs you've ever read cached in your brain?

[02:39:31.0000] <Ms2ger>
Do you think he wants traces of DOM2 in his *brain*? :)

[02:39:44.0000] <jgraham>
But, yeah, offline wikipedia could be nice. But I would want that to be something that was explicitly turned on, or something

[02:40:26.0000] <darobin>
jgraham: I can't even seem to keep those I've written in my brain

[02:40:40.0000] <darobin>
Ms2ger: that's not at all the worst spec I've read...

[02:40:57.0000] <Ms2ger>
darobin, oh, I guess you get to read sysapps too :)

[02:40:58.0000] <darobin>
jgraham: yeah, sure, and you'd want to be able to remove stuff too

[02:41:14.0000] <jgraham>
darobin: Fortunately I have zcorpan sitting nearby. He is an excellent L2 cache

[02:41:28.0000] <darobin>
Ms2ger: that's *still* not the worst stuff by any margin :) even taking enums of very long strings into account

[02:41:35.0000] <darobin>
hahaha

[02:41:39.0000] <Ms2ger>
Do tell, what is the worst?

[02:41:43.0000] <Ms2ger>
/me awaits "DOM"

[02:41:43.0000] <darobin>
mmmmmm

[02:41:50.0000] <darobin>
I reckon WSDL's got to be up there

[02:41:51.0000] <jgraham>
DOM3 events?

[02:41:55.0000] <darobin>
pah

[02:42:07.0000] <darobin>
XML Schema part 1 scores well on that count

[02:42:20.0000] <jgraham>
Oh well yeah I guess all the non-Web stuff could be even worse ;)

[02:42:34.0000] <darobin>
oh, and don't get me started on MPEG or 3GPP stuff

[02:42:47.0000] <Ms2ger>
These have specs?

[02:42:56.0000] <darobin>
the email and MIME specs are pretty sordid too

[02:43:15.0000] <darobin>
Ms2ger: not if by spec you intend to mean something that fosters interop

[02:43:21.0000] <jgraham>
Ms2ger: That depends how much you're willing to pay

[02:43:26.0000] <darobin>
but they do have documents pretending to define technology

[02:44:04.0000] <Ms2ger>
Sounds like DOM2

[02:44:13.0000] <darobin>
so yeah, from where I stand most of the DOM feels like a breeze of fresh air

[03:31:07.0000] <darobin>
I want whoever designed the DOM 3 XPath API shot, and I want it now

[03:32:56.0000] <Ms2ger>
You'll be meeting jst?

[03:33:16.0000] <Ms2ger>
Oh, Ray Whitmer

[03:33:19.0000] <Ms2ger>
Never heard of

[03:34:34.0000] <darobin>
I have dim memories of him on www-dom from a very long time ago

[03:36:10.0000] <Ms2ger>
Old man

[03:36:43.0000] <darobin>
he probably is :p

[04:01:36.0000] <hsivonen>
Hixie: what was the rationale for not using JSON for app cache manifests? non-Draconian error handling? just the requirements not looking JSON-y enough?

[05:02:38.0000] <annevk>
So should we add new DOMError()?

[05:02:53.0000] <annevk>
I guess it might be useful if you want your own API to reuse that object.

[05:04:15.0000] <annevk>
FWIW, I talked to jst and he's not to blame. DOM was a heavily server-side dominated group at the time, designing the API for a client-side world.

[05:38:17.0000] <darobin>
annevk: it doesn't suck any less as a server-side API :)

[05:39:05.0000] <annevk>
But but but Java!

[05:39:29.0000] <darobin>
I reckon it sucks moderately even by Java standards

[05:39:35.0000] <darobin>
at least, the Java people seemed to think so

[05:39:51.0000] <darobin>
and it certainly sucked for all other server-side languages

[05:40:05.0000] <annevk>
hsivonen thinks so too I think and he's the only Java-"fanboy" I know

[05:40:22.0000] <darobin>
at some point "inventing your own tree API" was a sort of sport

[05:41:02.0000] <annevk>
And these days it's graphs? (Microdata et al.)

[05:42:13.0000] <darobin>
I don't get the impression that people are building that many graphs APIs

[05:42:24.0000] <darobin>
everyone has made a templating language though

[05:44:05.0000] <Stevef>
darobin: ping for laters http://krijnhoetmer.nl/irc-logs/html-wg/20130207#l-127 am sick so am going for a snooze

[05:45:02.0000] <darobin>
Stevef: ah yes saw that and have it tacked away for after I'm done with what I'm doing now

[05:45:07.0000] <darobin>
(get better man)

[05:46:30.0000] <Stevef>
cool thanks wasn't sure if you clocked it

[05:50:53.0000] <hsivonen>
darobin: sad part is that the "better DOM" Java APIs are bad, too

[05:51:20.0000] <hsivonen>
darobin: for example, XOM made the mistake of using child lists instead of firstChild and nextSibling references

[05:51:56.0000] <hsivonen>
annevk: and indeed, the DOM is bad from the Java point of view, too.

[05:52:02.0000] <darobin>
hsivonen: I actually like both depending on context

[05:52:07.0000] <darobin>
but yeah, XOM isn't great either

[05:52:41.0000] <hsivonen>
dom4j is a kitchen sink that has the DOM interfaces in it, IIRC

[05:52:59.0000] <hsivonen>
jdom was bad, but I don't recall why

[05:53:27.0000] <hsivonen>
I just recall that one of its original developers wrote a book about XML and got some basic XML spec lawyering wrong up front

[05:53:33.0000] <hsivonen>
which isn't a good sign

[05:54:00.0000] <darobin>
typical Java, though

[05:54:24.0000] <hsivonen>
IIRC, I haven't gotten any requests for jdom support in the parser

[05:54:30.0000] <hsivonen>
but there are users of the XOM support

[05:54:59.0000] <darobin>
by users, you mean some who aren't ERH?

[05:55:04.0000] <hsivonen>
yeah

[05:55:06.0000] <darobin>
fascinating

[05:55:16.0000] <darobin>
I thought that thing had died ages ago

[05:55:25.0000] <hsivonen>
adding jdom support would be trivial, FWIW

[05:55:40.0000] <hsivonen>
basically just taking the time to type out some stuff

[05:56:03.0000] <hsivonen>
type as in push keys on keyboard

[06:17:49.0000] <boblet>
Hey all. Iâm wondering about the difference between del and s. Should del as âremoved contentâ in theory not be displayed? Does anyone have another example for s that isnât a price change? cc: hixie

[06:18:47.0000] <Ms2ger>
I would not suggest spending too much time on retrofitted semantics :)

[06:20:54.0000] <boblet>
Ms2ger: well, when duty callsâ¦ ;) Iâm after a rule of thumb for a HTML5 Doctor article

[06:21:34.0000] <Ms2ger>
When you'd strike something through rather than tipp-ex it

[06:23:45.0000] <boblet>
thatâs a nice real-world take of my obsolete vs edited (removed from doc) version

[06:27:52.0000] <zewt>
quotostrophes

[06:56:57.0000] <zewt>
gah, bubbles and cancelable default to false when using the constructor/dictionary syntax? :(

[06:57:39.0000] <zewt>
true is almost always what you want, so that means having to say {bubbles: true, cancelable: true} on every single constructed event :|

[07:00:47.0000] <annevk>
boblet: <del> is an edit, <s> is for fake edits

[07:00:55.0000] <annevk>
roughly

[07:01:01.0000] <jgraham>
hsivonen: I believe Hixie objected to the lack of comments, and the need to define error handling because the format is much more flexible than the requirements suggetsed was needed

[07:24:57.0000] <hsivonen>
jgraham: ok. (well, the requirements have grown since thenâ¦)

[07:25:22.0000] <jgraham>
Hopefully the desire for comments hasn'tâ¦

[07:25:32.0000] <jgraham>
(that's a huge misfeature of JSON)

[07:27:56.0000] <TabAtkins>
boblet: <s> is the "sarcastic delete", basically.

[07:28:31.0000] <TabAtkins>
"That talk was <s>terrible</s> awesome."

[07:34:09.0000] <darobin>
actually we should retrofit <s> for sarcasm in general

[07:34:13.0000] <darobin>
we all know it's needed

[07:34:29.0000] <Ms2ger>
</sarcasm>

[07:34:33.0000] <TabAtkins>
The default styling even works, crossing out the bullshit so no one else needs to see it!

[07:34:58.0000] <annevk>
"I have been arguing for some time that we need a JS API to SQL -- the real SQL standard" apart from the question whether this is a good idea, that's not the way to get things done

[07:35:01.0000] <darobin>
exactly

[07:35:42.0000] <darobin>
well good, because it would be a terrible thing for that to happen in the first place :)

[07:41:53.0000] <MikeSmith>
darobin: wow http://www.scientiamobile.com/blog/post/view/id/24/title/BDConf-and-Exposing-WURFL-Capabilities-to-JavaScript

[07:42:14.0000] <MikeSmith>
fun to know that Luca Passani is still around

[07:43:03.0000] <MikeSmith>
keeping WURFL alive I guess

[07:43:12.0000] <MikeSmith>
or trying to

[07:43:42.0000] <TabAtkins>
Oh for chrissakes, that's terrible.

[07:44:07.0000] <MikeSmith>
darobin: btw in my pyramid of tactful communicators, Luca is at the very top

[07:44:21.0000] <MikeSmith>
gold medalist

[07:44:34.0000] <darobin>
oooh, WURFL

[07:44:47.0000] <darobin>
yeah of course let's build that into browsers

[07:44:53.0000] <TabAtkins>
Honestly, 5 years ago it might have still been justifiable to make the distinction between "phone" and "tablet" meaningfully.  That's long past.

[07:45:02.0000] <MikeSmith>
TabAtkins: that's not an uncommon reaction to an encounter with Luca

[07:45:15.0000] <TabAtkins>
haha

[07:45:46.0000] <Ms2ger>
TabAtkins, how about in UA strings?

[07:46:14.0000] <TabAtkins>
Ms2ger: Trying to reason about UA strings leads to madness.

[07:46:36.0000] <karlcow>
:)

[07:46:42.0000] <karlcow>
been there done that

[07:46:46.0000] <MikeSmith>
darobin: at least good to see that Luca has figured out that there's another browser scripting language other than WMLScript

[07:47:06.0000] <jgraham>
I reckon if I had to beat someone to death, I would rather have a tablet than a phone

[07:47:15.0000] <jgraham>
Is that a meaningful distinction?

[07:47:38.0000] <TabAtkins>
My point is that phablets exist.

[07:47:40.0000] <MikeSmith>
darobin: next we need a JavaScript API for Device Description Repositories

[07:47:40.0000] <darobin>
MikeSmith: VBScript?

[07:47:49.0000] <MikeSmith>
heh

[07:48:19.0000] <darobin>
/me beats up TabAtkins with his thone

[07:48:24.0000] <Ms2ger>
jgraham, but if you brick your phone...

[07:48:30.0000] <TabAtkins>
MikeSmith: This is just your attempt at a bait-and-switch.  As soon as we approve your spec and give you the /TR/DDR shortname, BAM, W3C IS ALL DANCE GAMES ALL THE TIME.

[07:48:49.0000] <karlcow>
http://my.opera.com/ODIN/blog/2012/10/08/introducing-device-stock-ua#comment97890952

[07:49:00.0000] <Ms2ger>
/TR/DDR?

[07:49:08.0000] <Ms2ger>
What's next, /TR/SovietRussia?

[07:49:40.0000] <MikeSmith>
/me hopes that darobin's thone isn't a combination of a thong and phone

[07:50:36.0000] <darobin>
MikeSmith: you know you really hope it is

[07:51:45.0000] <MikeSmith>
TabAtkins: hahah :-)

[07:52:15.0000] <MikeSmith>
darobin: yeah almost as much as I'd hope to see Luca in a mankini

[08:35:19.0000] <hsivonen>
WURFL--

[08:35:54.0000] <dglazkov>
good morning, Whatwg!

[08:36:02.0000] <hsivonen>
so they think marketing_name is a capability of the browser

[08:36:09.0000] <hsivonen>
*facepalm*

[08:36:44.0000] <hsivonen>
too bad Opera capitulated to them already and did the stock UA header

[09:41:26.0000] <MikeSmith>
https://twitter.com/PaulLomax/status/299442850800734209 "Text columns in CSS are a total nightmare. The Times have spent Â£1m writing javascript to make columns work responsively"

[09:41:51.0000] <MikeSmith>
Really? I wonder how they calculated that.

[09:42:52.0000] <rillian>
lots of administrative and office space overhead?

[09:51:09.0000] <Hixie>
TabAtkins, MikeSmith: btw, you should add yourself to http://wiki.whatwg.org/wiki/Presentations if you like giving talks

[09:51:14.0000] <Hixie>
annevk: you should update http://wiki.whatwg.org/wiki/Presentations

[09:58:10.0000] <annevk>
Hixie: heh

[10:00:02.0000] <annevk>
Hixie: but please say yes to that one request in the Netherlands ;)

[10:02:27.0000] <Hixie>
dude i get asked like every week

[10:02:32.0000] <Hixie>
if i started saying yes i'd never get any work done

[10:02:39.0000] <Hixie>
and i'm already so far behind...

[10:11:08.0000] <MikeSmith>
I like doing presentations about anything except Web-platform stuff

[10:12:46.0000] <Hixie>
hah

[10:18:48.0000] <nimbu>
:))))

[10:19:07.0000] <zewt>
gar, why isn't ios webkit letting me defineProperty over scrollTop :| chrome allows it

[10:20:44.0000] <zewt>
guess i can do it a little cleaner with a separate proxy property

[10:21:18.0000] <zewt>
needing to be able to figure out if an onscroll event is happening because of a change to scrollTop, or because of the user dragging the window, so i can kill a scrollTop animation if needed

[10:22:31.0000] <zewt>
which is particularly tricky with iOS scroll momentum

[10:59:46.0000] <Ms2ger>
A question

[10:59:51.0000] <Ms2ger>
document.createElement("button").formMethod

[10:59:58.0000] <Ms2ger>
What should that return per spec?

[11:02:22.0000] <JonathanNeal>
heya

[11:03:22.0000] <Hixie>
/me reads the spec to find the answer

[11:03:40.0000] <JonathanNeal>
I love that there's interest in :media again.

[11:03:43.0000] <Hixie>
"must reflect the formmethod content attribute, limited to only known values"

[11:03:54.0000] <Hixie>
/me follows links to find out what that means

[11:04:12.0000] <Hixie>
"on getting, the IDL attribute must return the conforming value associated with the state the attribute is in (in its canonical case), if any, or the empty string if the attribute is in a state that has no associated keyword value or if the attribute is not in a state (e.g. the attribute is missing and there is no missing value default)"

[11:04:25.0000] <Hixie>
/me looks up the formmethod content attribute

[11:04:41.0000] <Hixie>
"(There is no missing value default for the formmethod attribute.)"

[11:04:54.0000] <JonathanNeal>
https://twitter.com/necolas/status/299573744307941376 "We need native CSS media queries at the element/component/widget level, not just the viewport. Make it so, internetz."

[11:05:09.0000] <Hixie>
Ms2ger: i think it must return the empty string.

[11:05:15.0000] <Hixie>
/me hopes he passed the test

[11:05:19.0000] <Ms2ger>
I think so too

[11:05:42.0000] <Ms2ger>
Now, Gecko's implementation doesn't...

[11:05:51.0000] <Hixie>
this changed relatively recently iirc

[11:06:04.0000] <Ms2ger>
/me looks at others

[11:07:54.0000] <Ms2ger>
Chrome gets it right

[11:08:12.0000] <Ms2ger>
But doesn't for formEnctype, which I think follows the same pattern

[11:08:34.0000] <Hixie>
it changed because mounir asked for it to change in https://www.w3.org/Bugs/Public/show_bug.cgi?id=17185

[11:09:32.0000] <Ms2ger>
/me shakes his fist at mounir

[11:10:11.0000] <Ms2ger>
Wait, huh

[11:10:33.0000] <Ms2ger>
/me shakes his fist at mounir some more

[11:25:25.0000] <JonathanNeal>
If we were to put media queries on individual element, would we use *:media or *::media ?

[11:25:33.0000] <JonathanNeal>
Pardon my lackluster understanding of : vs ::.

[11:27:12.0000] <JonathanNeal>
*individual elements (oh how I wish my eyes would catch these things before I press return)

[11:27:17.0000] <Hixie>
:foo is a pseudo-class. it works like a dynamic class="" value. an element either has it or not.

[11:28:17.0000] <Hixie>
::foo is a pseudo-element. it works like a dynamic element. it doesn't match to an existing element, it relates to "fake" elements in the DOM

[11:32:57.0000] <JonathanNeal>
So, if we were looking at section:media(max-width:20em) then we'd interpret it to mean "the section must be at least 20em wide to apply its css", whereas if we were looking at section::media(max-width:20em) we'd interpret it to mean "the page must be at least 20em wide to apply its css"?

[11:34:00.0000] <JonathanNeal>
Or is it implied that the :: pseudo-element belongs to the element?

[11:34:14.0000] <JonathanNeal>
(like a kind of shadow dom)

[11:34:51.0000] <Hixie>
neither of those would make sense, since you can't really have selectors depending on the layout

[11:34:54.0000] <Hixie>
but

[11:35:31.0000] <JonathanNeal>
Also, div:before { content: ''; position: absolute; ... }, not a pseudo-element?

[11:35:35.0000] <Hixie>
it's easiest to understand the : and :: thing by looking at existing ones

[11:35:47.0000] <Hixie>
:before is a legacy name, it's really called ::before

[11:35:56.0000] <Hixie>
same with :first-line

[11:36:00.0000] <Hixie>
it's really ::first-line

[11:36:15.0000] <JonathanNeal>
and ::first-letter?

[11:36:17.0000] <Hixie>
so ::before is a pesudo-element because it matches an element that isn't actually in the DOM

[11:36:20.0000] <Hixie>
yeah, and ::after

[11:36:30.0000] <Hixie>
all four of those match elements that don't actually exist

[11:36:46.0000] <Hixie>
::first-letter matches a fake <span> that surrounds the first letter of another element

[11:36:54.0000] <JonathanNeal>
Thanks, I've learned something relevant now too.

[11:37:12.0000] <Hixie>
so p::first-letter matches the inner element in:    <p><::first-letter>H</::first-letter>ello</p>

[11:37:28.0000] <Hixie>
whereas p:hover matches the <p> in:  <p class=":hover">Hello</p>

[11:37:35.0000] <Hixie>
conceptually

[11:37:43.0000] <JonathanNeal>
That makes sense.

[11:37:56.0000] <Hixie>
you can think of p::foo as really being short for "p > ::foo"

[11:38:03.0000] <JonathanNeal>
I might write up a blog post about this, can I quote you or attribute you to this knowledge dump you've given me?

[11:38:10.0000] <Hixie>
(that's also why pseudo-elements have to be at the end)

[11:38:33.0000] <Hixie>
(but pseudo-classes can be anywhere)

[11:38:34.0000] <JonathanNeal>
I never knew that's how it worked, and the way you've explained it makes a lot of sense.

[11:40:30.0000] <JonathanNeal>
So, like p:hover, p:media could be interpreted as a state of <p>?

[11:40:37.0000] <Hixie>
yeah

[11:40:50.0000] <Hixie>
though if you're depending on the style of the <p> that is pretty dodgy

[11:41:04.0000] <Hixie>
it's very very easy to end up with infinite loops if you define a selector based on the results of CSS properties

[11:41:43.0000] <JonathanNeal>
Yes, it is. We had a discussion about this with :hover once too.

[11:42:22.0000] <Hixie>
yeah even :hover falls into this

[11:45:33.0000] <JonathanNeal>
I do like the idea of letting elements respond to their state vs the state of the page. For instance, in a 960 grid, being 12-columns-wide in 40em is very different than being 4-columns-wide in 40em. Right now, the best way to target this experience is to use a combination of media queries and classes <div class="four-columns-wide"><div class="widget"/></div> @media (max-width: 40em) { .four-columns-wide .widget { /* styles */ } }

[11:46:09.0000] <JonathanNeal>
This has the adverse effect of increasing the specificity and bloating the markup.

[11:47:10.0000] <JonathanNeal>
Whereas .widget:media(max-width: 26em) { /* styles .widget when it falls at or below 26em, and the selector weight stays happy  */ }

[11:49:43.0000] <JonathanNeal>
Would this be inline with the existing specification theory?

[11:50:31.0000] <Hixie>
.widget:media(max-width: 26em) { width: 27em; }

[11:51:20.0000] <JonathanNeal>
.widget:hover { display: none; }

[11:51:29.0000] <JonathanNeal>
Consistent bugs. :)

[11:51:56.0000] <JonathanNeal>
Actually, maybe we could finally define what should happen in a loop.

[11:51:57.0000] <Hixie>
yes, :hover suffers from this. it's still a bad thing. :-)

[11:52:44.0000] <JonathanNeal>
Yes, but the benefit of :media and how it resolves the selector weight issue make it worth it to address the infinite loop bug.

[11:59:12.0000] <JonathanNeal>
Let me test the waters with this â¦ p:media(page-max-width: 40em) ?

[12:00:16.0000] <JonathanNeal>
where p:media(page-max-width: 40em) { /*this*/ } is synonymous with @media (max-width: 40em) { p { /*this*/ } }

[12:00:42.0000] <JonathanNeal>
Very very bad or actually close to something that could be?

[12:01:22.0000] <Hixie>
TabAtkins would be a better person to answer that

[12:03:03.0000] <JonathanNeal>
TabAtkins: join our party!

[12:03:14.0000] <JonathanNeal>
/me hands him a hat.

[12:44:54.0000] <greggman>
Hixie: I'm trying to add a proposal to the wiki but maybe I don't have permissions to make a new page? Comparing to another media wiki, when I go to a URL that does not exist there's a "create" button near the top right. But no such button is appearing on the whatwg wiki..user: gman

[12:57:57.0000] <gman2>
Can anyone here help me with this? I'm trying to add a proposal to the wiki but maybe I don't have permissions to make a new page? Comparing to another media wiki, when I go to a URL that does not exist there's a "create" button near the top right. But no such button is appearing on the whatwg wiki..user: gman

[12:58:16.0000] <Hixie>
gman2: weird

[12:58:24.0000] <Hixie>
GPHemsley: can you help gman2 out?

[12:58:44.0000] <Hixie>
i dunno what you have to do to be able to create a page :-)

[13:01:55.0000] <gman2>
Hacking the url to an edit page url I get permission errors "You do not have permission to create pages, for the following reason: You do not have permission to create new pages."

[13:03:03.0000] <gman2>
If you can't give me permission to make new pages maybe someone could make this page? http://wiki.whatwg.org/index.php?title=CanvasInWorkers&action=edit and then I can edit it

[13:07:51.0000] <boblet>
annevk, TabAtkins thx for the takes on del/s, btw. Much obliged.

[13:21:27.0000] <Hixie>
gman2: sorry, had a kernel panic. will create the page momentarily.

[13:22:27.0000] <Hixie>
gman2: ok try now

[13:23:13.0000] <JonathanNeal>
How much weight do :: selectors add?

[13:23:19.0000] <JonathanNeal>
as much as a class name?

[13:24:36.0000] <gman2>
Hixie: No luck :-(  I tried logging out and logging back in. I tried another browser

[13:25:18.0000] <Hixie>
gman2: the page should exist at least though no?

[13:25:48.0000] <gman2>
Hixie: This page? http://wiki.whatwg.org/wiki/CanvasInWorkers

[13:26:46.0000] <GPHemsley>
Hixie, gman2: You must be a registered and autoconfirmed user to create pages.

[13:27:29.0000] <Hixie>
GPHemsley: did i miscreate his account? :-/

[13:27:41.0000] <GPHemsley>
Hixie, gman2: You can become an autoconfirmed user by making edits to existing pages and waiting a few days. Or you can be added manually to the user group.

[13:27:58.0000] <GPHemsley>
Hixie: Nope; this is an additional spam prevention measure.

[13:28:13.0000] <Hixie>
we should just make it so anyone can create pages, i mean, nobody who's contacted us to get an account has then spammed anything right?

[13:28:33.0000] <GPHemsley>
Hixie: Never say never :P

[13:29:31.0000] <gman2>
Hixie, GPHemsley: Okay but still, can someone please create this page http://wiki.whatwg.org/wiki/CanvasInWorkers so I can edit it :-)

[13:29:42.0000] <GPHemsley>
gman2: Hixie already did

[13:30:04.0000] <gman2>
GPHemsley, Hixie: Thank you.

[13:30:47.0000] <GPHemsley>
Hixie: You can add users to the autoconfirmed user group manually, if you want, just by going to [[Special:UserRights]].

[13:32:15.0000] <GPHemsley>
If anyone wants to know what rights each user type has, you can go here: http://wiki.whatwg.org/wiki/Special:ListGroupRights

[13:32:55.0000] <GPHemsley>
In general, it's (all) < Users < Autoconfirmed users < Administrators.

[13:33:27.0000] <GPHemsley>
(Bots, which we don't have any of, get somewhat different rights.)

[13:42:18.0000] <Hixie>
GPHemsley: i think we should err on the side of being as open as possible until we have a real problem

[13:42:36.0000] <Hixie>
and then do the minimum possible to avoid that problem

[13:50:51.0000] <GPHemsley>
/me is not the biggest fan of reaction over proaction.

[13:54:30.0000] <GPHemsley>
Hixie: But anyway, I've enabled article and talk page creation for newly registered users.

[13:56:21.0000] <GPHemsley>
Hixie: But I will say for the record that I only did it because you asked me to. If spammy articles get created, I'm not cleaning them up. ;)

[14:09:19.0000] <Hixie>
GPHemsley: fair enough :-) thanks :-)

[15:23:48.0000] <JonathanNeal>
Put my thoughts on Media Queries for Elements together in a blog. https://twitter.com/jon_neal/status/299659191583395840

[15:24:12.0000] <JonathanNeal>
Or rather http://www.jonathantneal.com/blog/thoughts-on-media-queries-for-elements/


2013-02-08
[17:15:18.0000] <zewt>
not sure whether to be amazed that webgl people are actually arguing for polling with a straight face, or thankful that somebody involved is actually bothering to ask us for help

[17:17:44.0000] <Hixie>
you know "us" includes webgl people, right? :-)

[17:17:56.0000] <zewt>
yep :)

[17:18:57.0000] <zewt>
(i don't mind if somebody who thinks polling is acceptable on the web platform knows how insane I think that is)

[17:54:49.0000] <gman2>
I'm the one pushing for callbacks. Unfortunately the majority of WebGL peeps come from C land. So please help convince them (with logic not snark) why it must be callbacks, not polling.

[17:55:25.0000] <Hixie>
zewt: ^

[17:56:40.0000] <zewt>
gman2: already made my attempt :)

[18:00:43.0000] <zewt>
what I wish is that the people arguing for WebGL being different from the rest would spend the effort of asking why the platform is as it is, instead of just assuming conventions are wrong and should be ignored

[18:01:40.0000] <zewt>
some sort of fallacy of intuition--people experienced in C, whose intuition in C is probably usually right, moving to JavaScript and expecting their intuition to still work without the experience to back it

[18:01:58.0000] <zewt>
(and I wouldn't claim to be immune from this myself, of course)

[18:06:14.0000] <gman2>
There's more to it than just "make it like C". There's also the politics. It's much easier to get several browser vendors to agree to implement an existing standard (OpenGL ES) than to make a new one and argue over it for years

[18:07:06.0000] <zewt>
i don't buy that; opengl es is a *C* standard, and it should be no harder to get people to implement a competently-designed and specced JavaScript binding

[18:07:26.0000] <zewt>
(of course, the spec can be written in terms of dispatch to C entry points in GLES)

[18:08:42.0000] <gman2>
The proof's in the pudding. Post your design. Once you start changing the API you make it harder to port existing code. You also open up the "well if we changed that why not this too?"  I know one guy that wants to make it stateless. I'd luuuuuuuuuv that. But I have no hope it's going to happen

[18:08:57.0000] <zewt>
"port"? there's no such thing as a "port" from C to JavaScript; that's a rewrite

[18:09:34.0000] <zewt>
and the binding layer is the simplest part of the whole thing (the complex parts are things like rendering details, which you *do* want to get as unchanged as possible from GLES, and the canvas binding details, which GLES doesn't help at all with)

[18:11:25.0000] <zewt>
anyway, we're stuck with the webgl we have today; the point is that a polling API would be the same sort of mistake

[18:12:26.0000] <zewt>
it sounds like the real, immediate problem with the polling/callback thing is simply a matter of education, which is why I posted the sample code I did; it shows that event-based APIs are no harder to use

[18:15:58.0000] <gman2>
Just fyi, some of the objections to callback vs polling are coming from members of Google Maps Team. (not all of them,). The point being they aren't noob JS people. They're arguably writing one of the more complex web apps out there.

[18:16:50.0000] <zewt>
all that does is lower my opinion of Google a bit further

[18:18:22.0000] <gman2>
Just fyi, the next WebGL is planned to require a different context string. So there is a chance to change anything you'd like to see changed. Join the list and present your thoughts

[18:19:00.0000] <zewt>
i was very active on the list for quite a while; i found it a bit too frustrating, so decided to take a break

[18:19:07.0000] <Hixie>
zewt: pro tip, btw, you'll be able to convince more people if you don't (even slightly, implicitly, or in their absence) insult them... (not that i'm good at taking that advice myself, but i'm just putting it out there)

[18:19:26.0000] <zewt>
(also the idea of "the next WebGL" sounds a bit un-Web to me)

[18:19:59.0000] <Hixie>
gman2: browsers are going to have to support two webgls?

[18:20:04.0000] <zewt>
Hixie: i try; but i hit my quota quickly with particularly-nuts things

[18:20:29.0000] <zewt>
Hixie: which, by the way, is another of the many reasons I don't want your job :)

[18:22:21.0000] <zewt>
gman2: if anybody can explain any possible downside to an API like HTMLImageElement's .complete and onload, I'm listening--but I can't even contrive one

[18:22:47.0000] <gman2>
Hixie: The current plan is the new one is a superset of the old. But you get it by requesting "webgl2.0" or something. So at the moment it would be backward compatible. You could take your webgl 1.0 code, ask for a webgl 2.0 context and it would just work. But, it doesn't have to stay that way. There's no reason it has to stay backward compatible. People could ask for a 1.0 context and there apps would keep working.

[18:22:59.0000] <zewt>
(that is, compared to a polling interface--not talking about the weird details of <img>, of course)

[18:23:02.0000] <Hixie>
gman2: .complete is a disaster, mostly because it can change while script is running. but that's orthogonal.

[18:23:25.0000] <Hixie>
gman2: there are _lots_ of reasons it should stay backwards compatible and that we should only have one webgl

[18:23:35.0000] <zewt>
gman2: remember, .complete *does* allow polling if you really want to do that--but it gives an event, too

[18:25:28.0000] <gman2>
zewt: Yea, I gave that example that if you only have callbacks and you want polling you just make the callback set some flag and then poll the flag. All though with true polling you could exit a hard loop. Without it you can't

[18:25:49.0000] <zewt>
gman2: define "true polling" in this context, since I'm not sure what it means

[18:26:05.0000] <zewt>
(or, I hope it doesn't mean what I think it means :)

[18:26:20.0000] <gman2>
"true polling" means this loop exits  while(!complete());

[18:26:26.0000] <zewt>
:|

[18:26:32.0000] <gman2>
I know

[18:26:33.0000] <Hixie>
"peg the cpu" isn't a good coding technique :-)

[18:26:38.0000] <zewt>
that's not just a bad idea, that's catastrophic

[18:29:37.0000] <zewt>
every api on the platform (web-compatibility aside, eg. .complete) should be designed to guarantee that that never works, to make sure nobody ever does it

[18:34:23.0000] <zewt>
(if people want to write synchronous code, they need to wait for worker support)

[18:34:47.0000] <Hixie>
even in a worker, i wouldn't want anyone to rely on polling, that'll just peg the cpu

[18:35:16.0000] <zewt>
Hixie: right, but you can expose real synchronous APIs

[21:21:14.0000] <MikeSmith>
Hixie: ok, about the outline bug, I read your latest comment and went back and re-implemented it per spec

[21:21:56.0000] <MikeSmith>
and for your first case I'm now getting output that matches what you described in your earlier comment

[21:22:34.0000] <MikeSmith>
and without breaking the expected behavior for the other two cases that I was already conforming to

[21:23:15.0000] <MikeSmith>
I'll push the change to http://qa-dev.w3.org:8888/

[21:25:12.0000] <MikeSmith>
so now the validator will have the only conforming implementation and people who compare results with the other outline tools are going to file bugs against the validator saying it doesn't match what those other tools produce :-)

[21:34:54.0000] <MikeSmith>
Hixie: now pushed to http://qa-dev.w3.org:8888/

[21:35:13.0000] <MikeSmith>
would be nice to have some other test cases

[21:54:11.0000] <Hixie>
MikeSmith: cool

[21:56:57.0000] <Hixie>
MikeSmith: should i add something like "adding the implied headings is not a no-op! :-)" to the spec, or do you think the spec's output is suboptimal?

[21:59:04.0000] <MikeSmith>
heh :) no, I don't think "adding the implied headings is not a no-op!" is needed. And after considering the output, I think the spec's output it quite rational.

[21:59:54.0000] <MikeSmith>
really my mistake was that I looked at other implementations and assumed I must have made a mistake since my output didn't match those

[22:00:25.0000] <Hixie>
how many other implementations are there?

[22:00:32.0000] <Hixie>
i'm concerned that none of them matched the spec

[22:00:39.0000] <MikeSmith>
I can see now that I actually pretty much had it right to begin with, but then I changed it after looking at others

[22:00:41.0000] <Hixie>
implies the spec is broken in some sense

[22:01:22.0000] <MikeSmith>
Hixie: maybe. Or maybe it's because they all tried to match the behavior of the first implementation

[22:01:27.0000] <Hixie>
heh

[22:01:30.0000] <Hixie>
could be

[22:01:35.0000] <MikeSmith>
which I maybe gsnedders was the first

[22:01:41.0000] <Hixie>
maybe the examples i mentioned in that bug would be useful in the spec then

[22:01:52.0000] <MikeSmith>
yeah yeah

[22:01:57.0000] <MikeSmith>
for sure

[22:02:02.0000] <MikeSmith>
good idea

[22:02:07.0000] <MikeSmith>
that would help

[22:02:34.0000] <MikeSmith>
I guess I should also write some tests and contribute them to the test suite

[22:03:22.0000] <MikeSmith>
anyway, there are 3 other implementations I know of

[22:03:29.0000] <MikeSmith>
lemme get some URLs

[22:03:39.0000] <Hixie>
just names is fine

[22:03:42.0000] <Hixie>
not planning on looking them up

[22:03:44.0000] <Hixie>
just curious what they are

[22:05:09.0000] <MikeSmith>
well, there's gsnedders one, then there is "h5o" which is a Chrome extension/bookmarklet thing, and then .. one more

[22:05:13.0000] <MikeSmith>
/me looks for the name

[22:06:24.0000] <MikeSmith>
just called "HTML5 Outliner" from hoyois on github

[22:07:44.0000] <Hixie>
k

[22:10:15.0000] <MikeSmith>
Hixie: anyway, thanks for your patience in your responses in the bug

[22:10:20.0000] <Hixie>
hey np

[22:10:21.0000] <Hixie>
that's my job

[22:11:04.0000] <Hixie>
i wonder what the best markup is to describe a document outline

[22:11:14.0000] <Hixie>
nested <ol>s is the most obvious choice

[22:12:22.0000] <MikeSmith>
yeah that's what I use for the "Show outline" output for the validator

[22:19:37.0000] <MikeSmith>
Hixie: btw I just found and tried a fourth implementation, an Opera extension, and it matches the non-spec-conforming behavior of the other three (for the <section>a<section>b</section><h2>C</h2>c</section>

[22:19:42.0000] <MikeSmith>
case)

[22:19:52.0000] <Hixie>
man

[22:20:08.0000] <Hixie>
i wonder if it's a lost cause

[22:20:10.0000] <MikeSmith>
as far as I know, these really are all independent implementations

[22:20:19.0000] <Hixie>
seems so weird to consider C the heading of b in that example

[22:20:38.0000] <MikeSmith>
yeah, it seems weird to me now as well

[22:20:39.0000] <Hixie>
i guess i'll try these examples in the spec and see if that helps, first

[22:20:43.0000] <MikeSmith>
ok

[22:22:20.0000] <Hixie>
btw when i submit a text field upload, the text field on the results page doesn't have my input in it

[22:22:24.0000] <Hixie>
which makes it hard to iterate

[22:22:27.0000] <Hixie>
(on the validator)

[22:22:56.0000] <MikeSmith>
oh

[22:23:16.0000] <MikeSmith>
that's not intentional -- it's supposed to copy it back in

[22:23:38.0000] <MikeSmith>
so that's maybe a regression I introduced somehow recently

[22:25:59.0000] <MikeSmith>
Hixie: oh I think it only copies it if you have the "Show source" option set

[22:26:04.0000] <Hixie>
aah

[22:27:04.0000] <MikeSmith>
that is by design because what we actually do is, we copy the source from the "Show source" output back into the textarea, on the client side

[22:27:23.0000] <Hixie>
i just wanted to play with the outliner :-)

[22:28:04.0000] <Hixie>
<body><section><h1>A</h1><h1>B</h1></section></body>

[22:28:13.0000] <Hixie>
...gives me an implied heading for the <section> for some reason

[22:28:40.0000] <MikeSmith>
hmm yeah

[22:28:42.0000] <MikeSmith>
that's a bug

[22:30:01.0000] <MikeSmith>
but if you do <body><h1>h1</h1><section><h1>A</h1><h1>B</h1></section></body> there's no bug

[22:30:10.0000] <Hixie>
odd

[22:30:34.0000] <MikeSmith>
I guess probably just due to me not re-initializing something

[22:30:41.0000] <MikeSmith>
/me checks

[22:32:56.0000] <MikeSmith>
yeah, that's all it was

[22:33:32.0000] <MikeSmith>
Hixie: thanks for catching that :)

[22:33:47.0000] <Hixie>
it was one of the examples i'm adding :-)

[22:34:01.0000] <MikeSmith>
fixed in my working directory and will push it to qa-dev in a minute

[22:34:13.0000] <MikeSmith>
sloppy coding man

[22:34:39.0000] <MikeSmith>
sometimes surprised any of my code works at all

[22:34:45.0000] <Hixie>
i know the feeling

[23:00:24.0000] <Hixie>
MikeSmith: http://qa-dev.w3.org:8888/ seems to be down

[23:03:55.0000] <Hixie>
MikeSmith: http://www.whatwg.org/specs/web-apps/current-work/#sample-outlines

[23:15:27.0000] <MikeSmith>
Hixie: thanks

[23:15:30.0000] <MikeSmith>
/me reads

[23:15:55.0000] <MikeSmith>
Hixie: I just restarted http://qa-dev.w3.org:8888/ to push the fix I made

[23:16:00.0000] <MikeSmith>
should be working now

[23:17:10.0000] <MikeSmith>
Hixie: btw I see now that the Opera extension is not an independent implementation -- it says "This extension is a port of the bookmarklet at http://code.google.com/p/h5o/"

[23:22:16.0000] <MikeSmith>
Hixie: I read all of http://qa-dev.w3.org:8888/

[23:22:23.0000] <MikeSmith>
looks great man

[23:22:25.0000] <MikeSmith>
big thanks

[23:22:29.0000] <JonathanNeal>
Did TabAtkins ever come around?

[23:23:03.0000] <MikeSmith>
JonathanNeal: not in the last 4 hours, no

[23:23:23.0000] <JonathanNeal>
k

[23:26:36.0000] <MikeSmith>
Hixie: btw I guess if you tested http://qa-dev.w3.org:8888/ you know for the outline it just drops subheadings on the floor. I guess I could without enough have it do something like your "Additional Commentary â Because not all this is necessarily true â Ok it's almost certainly not true" example instead. But as long as it's conforming to just do the laziest possible thing of just dropping them on the floor, I prefer doing that. :-)

[23:27:03.0000] <MikeSmith>
JonathanNeal: nice blog post, btw. about MQ stuff

[23:27:36.0000] <MikeSmith>
s/could without enough/could without too much trouble/

[23:28:11.0000] <JonathanNeal>
Thanks for reading it. Let me know if you have any ideas yourself or other feedback to improve the conversation.

[23:35:21.0000] <MikeSmith>
Hixie: also btw I guess you can see that for the validator outline rather than styling with numbers I just stole your Live DOM Viewer tree-view styling.

[01:07:52.0000] <Ms2ger>
!summon zcorpan

[01:09:56.0000] <Ms2ger>
"40% of Gmail's storage is signature files and attached logo images."

[01:09:58.0000] <jgraham>
Ms2ger: glwt

[01:10:07.0000] <Ms2ger>
jgraham, hmm?

[01:10:17.0000] <jgraham>
Summoning zcorpan

[01:10:35.0000] <Ms2ger>
Alright, you then

[01:10:42.0000] <jgraham>
Dammit

[01:10:48.0000] <Ms2ger>
Do you know if there's a test for https://www.w3.org/Bugs/Public/show_bug.cgi?id=17195 in the test suite? :)

[01:11:33.0000] <jgraham>
MikeSmith: FWIW I had an outline implementation before gsnedders. But it got deleted at some point (I *think*, but I'm not sure, that gsnedders' implementation is independent)

[01:14:22.0000] <jgraham>
Ms2ger: I strongly suspect there isn't

[01:14:28.0000] <jgraham>
But I don't know

[01:14:31.0000] <Ms2ger>
You want to add one? :)

[01:14:45.0000] <jgraham>
I want you to add one :p

[01:15:27.0000] <Ms2ger>
But I don't want to add one :)

[01:15:39.0000] <jgraham>
Seems like Hixie already wrote a test, it just needs to be testharnessified

[01:22:03.0000] <Ms2ger>
Hrm

[01:23:55.0000] <Ms2ger>
jgraham, https://github.com/w3c/html-testsuite/blob/master/old-tests/submission/Opera/microdata/001.html#L1340

[01:24:13.0000] <Ms2ger>
AFAICT, the last two assertions there are wrong

[01:27:36.0000] <jgraham>
about dateTime and textContent?

[01:27:52.0000] <jgraham>
/me notes he didn't write these tests

[01:28:12.0000] <jgraham>
(not because I never write wrong tests; I do, but because I'm not that familiar with them)

[01:32:24.0000] <Ms2ger>
Setting itemValue should set datetime, not textContent, I think

[01:32:59.0000] <Ms2ger>
And I'm asking you because you're the closest to a zcorpan I can find here :)

[01:33:14.0000] <MikeSmith>
jgraham: I hope your outline-algorithm implementation actually followed the spec. After working on this, I've gone from being a skeptic about the outline-algorithm logic to being a true believer.

[01:33:22.0000] <MikeSmith>
I'm a convert

[01:33:24.0000] <jgraham>
He didn't write the tests eitehr :)

[01:33:32.0000] <jgraham>
/me checks the spec

[01:34:53.0000] <MikeSmith>
maybe I changed do to Stockholm Syndrome but I don't care

[01:34:59.0000] <nickshanks>
morning users

[01:35:28.0000] <MikeSmith>
nickshanks: howdy

[01:36:24.0000] <Ms2ger>
jgraham, got anyone else to pester? odinho? :)

[01:36:32.0000] <odinho>
Nooooo

[01:36:36.0000] <jgraham>
He didn't write them either :)

[01:36:48.0000] <jgraham>
Ms2ger: I tend to agree that it should set the attribute rather than the textContent

[01:37:11.0000] <jgraham>
Although it isn't really clear how one "acts as if" an attribute was reflected

[01:37:55.0000] <Ms2ger>
"on setting, must set the content attribute to the specified literal value", presumably

[01:38:04.0000] <jgraham>
Presumably

[01:50:37.0000] <nickshanks>
where can i find a "changes from HTML 5.0" document/appendix to HTML 5.1?

[01:56:16.0000] <Ms2ger>
jgraham, so could you find someone to fix the test? :)

[01:56:54.0000] <jgraham>
Ms2ger: Hi, I have a test that needs fixing

[01:57:29.0000] <Ms2ger>
I hate you

[01:59:21.0000] <jgraham>
Ms2ger: I guess I can fix it

[01:59:45.0000] <Ms2ger>
That would be great :)

[02:23:02.0000] <MikeSmith>
nickshanks: there isn't one

[02:23:13.0000] <jgraham>
Ms2ger: Pull request sent

[02:24:28.0000] <Ms2ger>
Merged, thanks

[02:24:29.0000] <MikeSmith>
nickshanks: and most people here aren't involved with HTML 5.0 and HTML 5.1. The better IRC place to ask is #html-wg on irc.w3.org

[02:34:15.0000] <Ms2ger>
Hmm, darobin merged some of my tests, excellent

[02:53:06.0000] <Ms2ger>
Didn't Hixie move to the URL standard yet?

[02:55:48.0000] <MikeSmith>
not yet I don't think, no

[03:00:02.0000] <annevk>
Ms2ger: no, open bug

[03:00:13.0000] <Ms2ger>
I see

[03:00:15.0000] <annevk>
Ms2ger: Encoding Standard is in

[03:00:23.0000] <Ms2ger>
\o/

[03:02:25.0000] <MikeSmith>
annevk: is the appcache meeting today?

[03:05:12.0000] <darobin>
MikeSmith: yeah

[03:05:58.0000] <annevk>
MikeSmith: it's in #appcache

[03:09:39.0000] <gsnedders>
jgraham: My outline impl had nothing to do with yours.

[03:09:54.0000] <Ms2ger>
jgraham, and can you find someone to clear out the tests that don't match the spec anymore from http://w3c-test.org/html-testsuite/master/old-tests/submission/Opera/timeelement/001.html ?

[03:09:58.0000] <Ms2ger>
/me looks at odinho 

[03:22:26.0000] <MikeSmith>
so I wonder who's going to be the first smartass to try to draw some conclusion from the fact that the % of WebKit commits from Apple and Google engineers are roughly the same in http://bitergia.com/public/reports/webkit/2013_01/ while there's almost four times as many Google authors committing as there are Apple authors committing

[03:23:47.0000] <Ms2ger>
/me tries to understand what MikeSmith is saying

[03:23:55.0000] <gsnedders>
Words.

[03:24:07.0000] <Ms2ger>
Applers are four times more productive than Googlers?

[03:26:41.0000] <karlcow>
There are more lords (reviewers) at Apple than peasants (committers)  too

[03:27:21.0000] <MikeSmith>
I distrust data

[03:28:03.0000] <MikeSmith>
I think we need some experts to weigh in on this so that I be told what I should properly be thinking of it

[03:29:17.0000] <karlcow>
sir dada tuttsi

[03:38:16.0000] <odinho>
MikeSmith: Well, Apple has core webkit people who work on webkit code/stuff. Google people work on the full browser, and go down to webkit everytime they feel like it?

[03:52:15.0000] <Ms2ger>
jgraham, I'll have a look at the time test myself

[03:53:27.0000] <odinho>
Ms2ger: Sorry, little time atm. Can't jump on everything that would be nice to do.

[03:53:59.0000] <Ms2ger>
Don't we all? :)

[04:21:59.0000] <jgraham>
Ms2ger: Thanks

[04:23:01.0000] <Ms2ger>
Np

[04:24:12.0000] <jgraham>
All this talk of Apple, and now I want a tart tartin

[05:07:35.0000] <karlcow>
jgraham: tatin but yes +1 to that ;)

[05:08:00.0000] <karlcow>
https://fr.wikipedia.org/wiki/Tarte_Tatin

[05:10:20.0000] <jgraham>
karlcow: I can't even spell in English. What hope do I have in strange foreign tounges?

[05:10:35.0000] <karlcow>
:D

[05:11:43.0000] <karlcow>
I gave up myself a long time ago on that. I have been exposed far too late on foreign languages. First time ever at school at 12 for German, then 14 for English. It shows.

[06:45:12.0000] <zewt>
hmm, sort of weird that the URL interface can't distinguish between http://foo.com and http://foo.com# and http://foo.com?, even though it seems like the interface allows it

[06:45:22.0000] <zewt>
(s/can't/doesn't/)

[07:04:21.0000] <jgraham>
/me grumbles about appcache discussions happening in a private repository

[07:09:03.0000] <nickshanks>
jgraham, just ask for permission. i did. :)

[07:10:58.0000] <cwilso>
and jgraham, that's a temporal anomaly.  It will be resolved shortly.

[07:24:38.0000] <jgraham>
cwilso: Well, please ping me when someone clicks the "make this repo public" button

[07:25:57.0000] <cwilso>
jgraham: will do.

[07:26:11.0000] <jgraham>
Thanks

[09:10:35.0000] <GPHemsley>
MikeSmith, hsivonen: I don't remember who's in charge of the various validators, but they seem to treat all tags within <option> as stray end tags, even when they're start tags

[09:12:51.0000] <MikeSmith>
GPHemsley: pretty sure that's not the case for http://validator.nu/ or http://validator.w3.org/nu/

[09:12:59.0000] <MikeSmith>
which are the only ones I work on

[09:13:40.0000] <GPHemsley>
MikeSmith: Oh, it indeed is the case. :)

[09:14:16.0000] <GPHemsley>
http://validator.w3.org/nu/?doc=http%3A%2F%2Fwww.govtrack.us%2F

[09:14:16.0000] <MikeSmith>
ok if so that's due to the validator having a parser that follows the spec

[09:14:31.0000] <GPHemsley>
Hixie: Oh, so this is your fault? ;)

[09:16:00.0000] <MikeSmith>
that message may just be a copy/paste error in the htmlparser code

[09:16:23.0000] <GPHemsley>
ah, much simpler

[09:17:50.0000] <GPHemsley>
If so, though, it's carried over from the old one to the new one

[09:17:55.0000] <GPHemsley>
(nu one)

[09:18:36.0000] <MikeSmith>
hmm no, because the error message from "View source" in Firefox says "Stray start tag" as expected.

[09:19:11.0000] <GPHemsley>
eesh, view source is 7 lines?? >_<

[09:19:54.0000] <GPHemsley>
(and only because a <dl> apparently gets special formatting)

[09:21:41.0000] <MikeSmith>
hmm weird that there's this difference between the messages from Firefox and the validator

[09:22:08.0000] <MikeSmith>
because it's the same parser and those messages come straight from the parser code, not the validator code

[09:24:13.0000] <GPHemsley>
yay obscure bugs

[09:40:14.0000] <dglazkov>
good morning, Whatwg!

[10:16:21.0000] <JonathanNeal>
yay

[10:24:15.0000] <JonathanNeal>
Hixie: it's pretty impressive how much documentation is out there that gets : and :: wrong. Oh, and do they have syntax names (outside of colon and doublecolon)?

[10:47:49.0000] <Hixie>
JonathanNeal: "pseudo-class" and "pseudo-element", probably. the main problem i think is that we changed the syntax after most of the pesudo-elements used ':', so it's very confusing.

[10:48:24.0000] <JonathanNeal>
Yea, I just came across a lot of posts about css3 using the css2 understanding.

[11:34:47.0000] <gsnedders>
16 failures in both Py2 and Py3 in one codebase.

[11:34:51.0000] <gsnedders>
jgraham: ^^

[12:36:52.0000] <zewt>
gar

[12:40:08.0000] <zewt>
ios safari sends onscroll continually while the user is dragging to scroll, but in a -webkit-overflow-scrolling: touch box, it stops sending scroll if the user flings to scroll until it completely finishes scrolling :|

[12:40:53.0000] <zewt>
making it very hard to tell if scrollTop can be changed without colliding with native scrolling

[12:50:28.0000] <zewt>
guess a workaround is to unset webkitOverflowScrolling, flush style and reset touch before changing scrollTop, which kills any fling-scroll that's in progress

[14:18:59.0000] <gsnedders>
jgraham: FWIW, I now have all of Python (2/3) in one git repo, and another with tests.

[14:24:10.0000] <gsnedders>
https://github.com/gsnedders/html5lib-tests is the current attempt

[15:11:32.0000] <annevk>
Hixie: so fwiw, data:// would not fail to parse as a URL, it would fail at the data: handler level

[15:11:41.0000] <annevk>
Hixie: that's the tentative plan anyway

[15:14:17.0000] <Hixie>
ah ok


2013-02-09
[17:49:13.0000] <gavinc>
Out of curiosity is it by spec that browsers don't return text from CSS content: ""; with ^F search?

[17:54:26.0000] <Hixie>
gavinc: no

[18:03:43.0000] <gavinc>
So they all just chose to suck together :( Damn.

[18:04:09.0000] <Hixie>
it's much easier to do it that way

[22:12:57.0000] <Hixie>
cwilso: is http://w3cmemes.tumblr.com/post/42577087199/chris-wilson-has-a-plan-for-eme public anywhere?

[22:15:05.0000] <othermaciej>
is that meme serious?

[22:19:38.0000] <Hixie>
that's pretty much my question :-)

[22:19:49.0000] <Hixie>
if it was that'd be pretty awesome

[22:25:57.0000] <JonathanNeal>
template element, gsnedders?

[22:41:21.0000] <JonathanNeal>
So, do you folks generally agree or disagree with my thoughts @ http://www.jonathantneal.com/blog/thoughts-on-media-queries-for-elements/ ?

[00:02:37.0000] <annevk>
Hixie: you'll need to do some kind of password reset for @whatwg on Twitter

[01:03:32.0000] <AQuestion>
Am I here in the right place to ask a question about WebSockets?

[01:58:47.0000] <cwilso>
Hixie: It's a secret plan.  :)

[08:29:04.0000] <nvartolomei>
traceroute 216.81.59.173

[08:37:52.0000] <zewt>
i don't want to

[14:05:13.0000] <Hixie>
hsivonen, abarth: ping on https://www.w3.org/Bugs/Public/show_bug.cgi?id=17845

[14:13:09.0000] <Hixie>
can someone remind me what the difference between |interface A {}; partial interface A {};| and |interface A {}; [NoInterfaceObject] interface B {}; A implements B;| is?


2013-02-10
[19:07:08.0000] <zewt>
:last-child loses some value with no way of saying "last child that isn't [hidden]"...

[03:00:18.0000] <jgraham>
annevk: Do you mind getting minor editorial feedback about DOM here, or should I file bugs?

[03:00:41.0000] <annevk>
jgraham: I don't mind getting it here

[03:01:00.0000] <annevk>
jgraham: maybe I can fix some now

[03:02:09.0000] <jgraham>
"Just like most programming paradigms the Web platform has finite hierarchical tree structures, simply named trees." - I don't think of programming paradigms as things that have tree structures. Couldn't you just say that "A fundamental data stucture of the web platform is a finite heirachical data structure, called a tree."?

[03:02:35.0000] <jgraham>
Or something

[03:03:07.0000] <jgraham>
(I did say minor, editorial)

[03:03:55.0000] <jgraham>
Also the following sentence should probably explicitly say preorder, depth-first, traversal *of the tree*.

[03:06:59.0000] <jgraham>
The follwoing list of definitions don't make it clear that if A is the parent of B, B is a child of A

[03:07:24.0000] <annevk>
how about

[03:07:29.0000] <jgraham>
Also, it's not clear that having a parent of null is equivalent to having no parent

[03:07:30.0000] <annevk>
<p>A <dfn title=concept-tree>tree</dfn> is a finite hierarchical tree structures. In

[03:07:30.0000] <annevk>
<dfn title=concept-tree-order>tree order</dfn> is preorder, depth-first

[03:07:30.0000] <annevk>
traversal of a <span title=concept-tree>tree</span>.

[03:08:05.0000] <jgraham>
annevk: s/structures/structure/ and it sounds good to me.

[03:08:17.0000] <annevk>
k

[03:12:16.0000] <jgraham>
First child and last child have rather circular definitions

[03:12:46.0000] <jgraham>
The first child should be defined as the child which has no preceding siblings

[03:13:09.0000] <jgraham>
(and similarly for last child and following siblings)

[03:13:30.0000] <annevk>
hmm nah

[03:13:40.0000] <annevk>
children are defined as a list

[03:14:02.0000] <annevk>
so first and last in that list is clear

[03:14:44.0000] <annevk>
I added

[03:14:47.0000] <annevk>
An object <var title>A</var> whose

[03:14:47.0000] <annevk>
<span title=concept-tree-parent>parent</span> is object <var title>B</var> is a

[03:14:47.0000] <annevk>
<span title=concept-tree-child>child</span> of <var title>B</var>.

[03:14:54.0000] <annevk>
to the participates paragraph

[03:15:11.0000] <annevk>
and changed the definition of root to talk about parent being null

[03:15:56.0000] <jgraham>
Great, thanks

[03:16:32.0000] <jgraham>
I guess you are right about first/last child. But the definition reads like it is circular :)

[03:16:58.0000] <annevk>
the definition is done for nullability

[03:17:08.0000] <annevk>
otherwise it would not be there

[03:17:29.0000] <jgraham>
Sure

[03:19:14.0000] <jgraham>
I guess you could explicitly say "the first child of an object is the first object in its list of child objects, or null if there is no such object", or something

[03:19:34.0000] <jgraham>
Also, very pedantically, you haven't defined what "null" means anywhere

[03:20:30.0000] <annevk>
I have not defined "object" either in that sense

[03:24:13.0000] <annevk>
At some point we can probably get to the point where we can have a draft that defines terminology that can be used across specifications

[03:24:23.0000] <annevk>
Including the very low-level nitty gritty

[03:24:29.0000] <jgraham>
But object can be taken as a common English word that just means "thing"

[03:26:03.0000] <annevk>
So null is a non-existing object? :)

[03:26:18.0000] <annevk>
Anyway, that problem is larger than DOM

[03:28:54.0000] <jgraham>
I actually don't know how to define null :)

[03:45:19.0000] <gsnedders>
jgraham: "null represents the absense of a value"

[03:46:28.0000] <gsnedders>
But really, defining terms that low-level? You may as well define a Turing machine while you're at it.

[03:52:57.0000] <Philip`>
null is just an opaque value that happens to be handled specially by various algorithms, and that is commonly used by unioning {null} with the set of all objects of some particular class to make a nullable type

[03:53:33.0000] <Philip`>
You can't define it by itself - it's defined by how other things use it

[03:57:49.0000] <Philip`>
gsnedders: Surely part of the point of a Turing machine is that you don't have to define it again, you can use a higher-level model that's provably equivalent to a Turing machine but much more convenient to use but still defined formally and unambiguously (i.e. not English)

[05:13:01.0000] <jgraham>
Philip`: Makes sense. I was thinking in terms of option types which I think is basically equivalent.

[05:15:38.0000] <jgraham>
gsnedders: ECMAScript manages to define "null value" and "null type", so it is clearly possible. Also we can't have TC39 being better than us ;)

[05:44:19.0000] <karlcow>
http://www.sewingandembroiderywarehouse.com/embtrb.htm pretty impressive

[06:28:39.0000] <zewt>
python does null nicely--python has no value types, so None is just an global instance of a class NoneType, and there's no magic

[07:37:53.0000] <annevk>
https://twitter.com/jonathan_robie/status/300629459244044288 James Clark is at XML Prague?

[07:39:03.0000] <annevk>
If that's true I wish I'd been there

[07:50:53.0000] <annevk>
I wonder why the British 2 amp 3 round pin plug is not listed on Wikipedia or is only listed as "previously" used in http://en.wikipedia.org/wiki/BS_1363#Origins referring to the forties, while clearly they are still around

[07:51:20.0000] <annevk>
And by clearly still around I mean I can 1) order such plugs from the internet and 2) live in an apartment that has such plugs for lights

[07:51:41.0000] <annevk>
s/plugs for/plug sockets for/

[07:53:46.0000] <jgraham>
Woah

[07:55:14.0000] <jgraham>
Although maybe "just for lights" isn't so surprising?

[07:56:33.0000] <jgraham>
OK. Wikipedia claims that is pretty much the only current usage and is designed to prevent people attaching non-lights

[07:56:39.0000] <annevk>
I have current standard plugs too for home appliances and such

[07:56:55.0000] <jgraham>
But I don't think I have ever seen a building with such plugs for lighting

[07:56:56.0000] <annevk>
jgraham: did you find a different page or did I not read carefully enough?

[07:57:14.0000] <jgraham>
http://en.wikipedia.org/wiki/BS_546 is what I'm reading

[07:57:45.0000] <annevk>
Aaah

[07:58:28.0000] <jgraham>
(I have seen old/disused sockets from when those were still the normal plug type. Dunno if they were still connected to anything)

[07:59:34.0000] <annevk>
2 A three-pin "It is sometimes still used to connect lamps to a lighting circuit."

[07:59:58.0000] <annevk>
That is what I have, although I'm not employing it as such now. (The central light works just fine.)

[08:03:32.0000] <jgraham>
So where are you living now?

[08:06:34.0000] <annevk>
W1, London

[08:13:48.0000] <zewt>
ugh

[08:14:16.0000] <zewt>
func.bind() breaks the location field in osx safari's events logger when attached to ios

[08:14:27.0000] <zewt>
which means it's something to encourage the horrible "that" pattern :|

[08:48:15.0000] <zewt>
joy

[08:48:48.0000] <zewt>
i seem to have hit a case where preventDefault on a click event has a different effect when the listener is on window than on an element, somehow

[08:51:05.0000] <annevk>
sounds like a bug

[08:51:11.0000] <zewt>
yep

[08:51:24.0000] <zewt>
(it's more complex than that and I'm still pretty far from really knowing what the heck is going on)

[09:48:57.0000] <Raymondo>
recently overheard on the interwebs: "I'm willing to bet my left nut that parser time-complexity, code size, and security bugs could be decreased by at least 30% if well-formedness were a prerequisite to rendering."

[09:49:08.0000] <Raymondo>
anyone have a use for a left nut?

[09:53:29.0000] <zewt>
strange: cancelling mousedown on inputs doesn't stop ios safari from opening the keyboard--only cancelling touchstart works

[09:57:16.0000] <jgraham>
Raymondo: There is very little point in noting that things could be different if the web platform were based on some entirely different technology.

[09:57:42.0000] <jgraham>
Certainly the HTML parser is rather complicated

[09:58:52.0000] <jgraham>
But if it hadn't been, maybe the platform would have failed entirely

[09:59:28.0000] <Raymondo>
jgraham: that was what I argued, but the rage goes on

[09:59:29.0000] <zewt>
jgraham: well, his point, i think, is that well-formedness has close to nothing to do with those things

[10:00:09.0000] <Raymondo>
zewt: that's not my point, because I don't know. but is that the case?

[10:02:48.0000] <jgraham>
zewt: Little to do with which things? Certianly an XML-style parser (but without all the crap that makes XML hard to parse) would avoid the kind of N**2 behaviour that you can get out of the HTML parser (and which we have to have artificial limits to prevent becoming problematic)

[10:02:50.0000] <zewt>
well, i didn't see "parser"--30% fewer bugs overall with a fairly superficial change would be a pretty silly claim

[10:03:39.0000] <jgraham>
YEah, 30% bugs overall would be wildly wrong

[10:03:55.0000] <jgraham>
It's not the most complicated part of the platform

[10:04:42.0000] <zewt>
i often suspect people who get overly caught-up in "well-formedness" are also the sort of people who compile code with -Werror

[10:23:33.0000] <gsnedders>
Raymondo: time-complexity certainly could be improved, and so could code-size (but it'd be irrelevantly small compared with the rest of the browser!), but security bugs? Unlikely. Beyond the parser, there's no difference between well-formed and ill-formed content, so unless there are security bugs in the parser (and I haven't seen one in a long *long* time) it gains nothing.

[10:24:15.0000] <Raymondo>
'could be improved' how dramatically?

[10:24:31.0000] <gsnedders>
Well, from O(n^2) to O(n), I'd presume.

[10:24:46.0000] <gsnedders>
But note that the n is bounded, so can never exceed 5.

[10:25:34.0000] <gsnedders>
The time-complexity of the parser isn't a practical issue, because it is bounded.

[10:26:56.0000] <Raymondo>
interesting

[10:27:27.0000] <Raymondo>
what does being 'bounded' mean? the work still has to be done...

[10:27:28.0000] <gsnedders>
Code-size is obvious, because instead of having state x: do a, b, c; you have state x: goto error.

[10:27:54.0000] <Raymondo>
sure

[10:28:03.0000] <Raymondo>
at the expense of a secondary parser

[10:28:28.0000] <gsnedders>
Raymondo: The parser changes behaviour to be linear instead of quadratic beyond a certain point, basically.

[10:29:07.0000] <gsnedders>
Basically as a trade-off between retaining compatibility with existing content without making it viable to DoS the parser with a relatively small amount of input.

[10:30:22.0000] <Raymondo>
I probably don't know enough about this stuff to understand how that's done

[10:31:49.0000] <gsnedders>
Raymondo: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#tree-construction â search for adoption

[10:32:12.0000] <gsnedders>
Raymondo: Note just above: "Inner loop: If inner loop counter is greater than or equal to three, then go to the next step in the overall algorithm."

[10:32:25.0000] <gsnedders>
That's the only quadratic part of the parser.

[10:32:33.0000] <gsnedders>
And that's where it breaks out if n >= 3

[10:32:55.0000] <gsnedders>
Yes, it had a black-box observable effect on the parsing.

[10:33:31.0000] <Raymondo>
so effectively there is a well-formedness check, just for a definition of well-formed that means 'not completely irretrievably fucked up'

[10:34:14.0000] <gsnedders>
Basically you hit it in a case like <i><b><b><b><b><b></i>

[10:34:48.0000] <Raymondo>
what's the prescribed behaviour then, strip the tags?

[10:35:37.0000] <gsnedders>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2093

[10:35:51.0000] <gsnedders>
Note how g is still within three b elements.

[10:36:13.0000] <gsnedders>
As opposed to being in five.

[10:37:03.0000] <gsnedders>
So yeah, they basically get dropped on the floor

[10:37:21.0000] <Raymondo>
that's actually pretty neat

[10:41:17.0000] <Raymondo>
thanks for taking the time :)

[11:20:59.0000] <gsnedders>
Today's wonder: do some people do anything but write email?

[11:21:46.0000] <zewt>
this ios webkit bug where setTimeout calls are just silently discarded is probably the most evil scripting bug i've seen in a long time

[11:22:48.0000] <zewt>
guess i'll try to monkey patch setTimeout to fix it

[11:23:29.0000] <zewt>
but the only workaround i know is requestAnimationFrame, which means making every setTimeout have a minimum delay of 16ms :|

[11:27:15.0000] <zewt>
https://gist.github.com/ronkorving/3755461 i think all of the workarounds for this are gross

[11:31:29.0000] <zewt>
guessing it's something dumb like "scroll_started = { saved_timers = timers; timers = []; } scroll_ended = { timers = saved_timers; }", so timers added during the scroll get wiped out

[11:41:22.0000] <zewt>
... incidentally, can anyone give some explanation for the weird pass-window-into-the-function thing in that link?

[11:43:57.0000] <jgraham>
gsnedders: Yes, some peole do anything but write email.

[11:49:37.0000] <Ms2ger>
Interesting, WebKit doesn't implement the stringifier on HTMLAreaElement

[13:16:56.0000] <gsnedders>
jgraham: I've just given up on so many W3C mailing lists now.

[13:53:49.0000] <zewt>
and the least horrible workaround for horrible setTimeout bug is: proxying timeouts through a worker

[15:45:54.0000] <zewt>
i can't remember if i'm on my third or fourth mobile safari bug of the day


2013-02-11
[01:53:11.0000] <annevk>
Hixie: still awake by any chance?

[01:53:26.0000] <annevk>
Hixie: I think the time might have come to write Fetch

[01:53:37.0000] <annevk>
Hixie: not sure if this is years early or not, prolly is

[01:55:16.0000] <annevk>
It seems likely we'll get a new API for XMLHttpRequest that uses Promises/Futures and given the changes suggested around application cache by Mozilla/Google having requests better architecturally defined seems like a good thing. Mostly because I don't like all the monkeypatching that others seem fine with.

[02:10:11.0000] <odinho>
Yeah, fetch ftw :-)

[02:11:04.0000] <jgraham>
So, did someone make the appcache proposal public yet, or are we still supposed to join a private club?

[02:11:59.0000] <annevk>
jgraham: slightlyoff's controller thing is still private I believe, mostly to make it somewhat coherent as I understand it

[02:12:34.0000] <annevk>
Personally I don't think there'd be much backslash against just having it public from the start, but I guess his experience differs from mine

[02:12:57.0000] <annevk>
If you give him your GitHub ID though you should be fine

[02:13:49.0000] <odinho>
That's the joining of the private club-part is about :]

[02:14:30.0000] <jgraham>
I have no idea how being private helps make it coherent. He is of course welcome to ignore other people's input until the proposal is in a state that he is happy with, if he choses

[02:16:23.0000] <jgraham>
(my experience is that "too much feedback" is the opposite of the normal problem)

[02:17:44.0000] <annevk>
jgraham: so is mine, but maybe things are different in TC39 land

[02:38:01.0000] <annevk>
http://wiki.whatwg.org/wiki/Fetch#Model

[02:49:16.0000] <darobin>
annevk: I was thinking about the "Fetch results in a network error response unless the scheme is one of..." bit in Fetch that we were chatting about

[02:49:45.0000] <darobin>
I reckon that if there's a controller that's not the default one it should decide whether to honour those itself

[02:50:10.0000] <annevk>
That's an interesting idea for sure

[02:50:17.0000] <darobin>
where by "those" I mean those not in that list

[02:50:43.0000] <darobin>
it's not that I have a super strong use case for that, but it introduces the possibility of a soft transition to a new scheme should one be needed

[02:50:47.0000] <darobin>
and it seems "sane"

[02:51:58.0000] <annevk>
It still leaves navigation as an open issue. Do you want to dispatch to an external application, or should that too defer to Fetch?

[02:53:10.0000] <annevk>
So e.g. navigation handles javascript and for Fetch schemes it defers to Fetch, and for anything else it's OS/browser-specific

[02:53:26.0000] <darobin>
ideally you want to be able to say "if I don't handle this, defer to whatever the default is" which could well be an external app if there is one

[02:54:49.0000] <jgraham>
/me wonders how register*Handler fits into this

[02:55:49.0000] <darobin>
yeah I was wondering as well

[02:56:02.0000] <darobin>
I'm guessing that it is part of the default handling

[02:56:29.0000] <darobin>
there are two distinct paths though

[02:56:35.0000] <darobin>
one is navigation, then fetch; the other is just fetch

[02:56:50.0000] <darobin>
r*H only wire into navigation

[02:56:55.0000] <darobin>
(unless I've missed something)

[03:38:32.0000] <annevk>
That is correct

[03:39:13.0000] <annevk>
I think we may have defined some of those features too quickly given the underlying architecture is not fully fleshed out.

[03:39:32.0000] <annevk>
Of course the same is bound to happen with this Controller proposal

[03:39:35.0000] <hsivonen>
who is the expected audience for Glenn Adams' TLS analogy?

[03:39:52.0000] <hsivonen>
the W3C Team?

[03:41:22.0000] <Ms2ger>
He still has an audience?

[03:43:42.0000] <annevk>
Is this on public-html?

[03:43:54.0000] <hsivonen>
annevk: -admin, I think

[03:44:29.0000] <annevk>
Why does that still have an audience? :-)

[03:50:41.0000] <Ms2ger>
Or public-html itself, for that matter

[03:57:41.0000] <hsivonen>
/me wonders if real end users actually use the DLNA stuff

[04:08:43.0000] <annevk>
The amount of variables that go into fetching a resource is kinda bloated: http://wiki.whatwg.org/wiki/Fetch#Request

[04:09:25.0000] <annevk>
slightlyoff: ^^ at some point you might want to reconcile the controller stuff with that

[04:13:02.0000] <Stevef>
Ms2ger: hehe

[04:17:33.0000] <annevk>
odinho: can you take a look to see it's about right?

[04:17:55.0000] <annevk>
(anyone else is welcome to do that too, of course)

[04:26:01.0000] <darobin>
hahahahaha "<annevk> I think we may have defined some of those features too quickly given the underlying architecture is not fully fleshed out.

[04:26:07.0000] <darobin>
isn't that What We Do?

[04:26:58.0000] <darobin>
hsivonen: people use DLNA stuff a little bit here and there when well constrained to a usable UI; so not much

[04:27:12.0000] <darobin>
I reckon Opera's proposal can actually help there

[04:27:29.0000] <annevk>
Well personally I have mostly been defining the underlying architecture and have not created many new features. And the features I did create were not that great (e.g. CORS).

[04:29:36.0000] <darobin>
/me fidgets around annevk to find the button to turn sardonic humour back on

[04:29:46.0000] <annevk>
URL is new of course, but I first figured out how they work. I will probably still have messed up though :-)

[04:30:12.0000] <annevk>
darobin: I see :-)

[04:31:23.0000] <annevk>
darobin: The problem is that I largely think that is what people are doing. They create all these APIs on top of something they do not actually comprehend, to solve a couple of use cases to some approximation.

[04:31:51.0000] <odinho>
annevk: Looks about right, although why do you say CORS is special in that it also needs this: <blabla>, and not just list it with everything else?

[04:32:42.0000] <annevk>
odinho: yeah, that should be merged in too in the big ugly blob that is Request

[04:33:03.0000] <odinho>
Won't win a beauty contest.

[04:33:17.0000] <annevk>
uhuh

[04:39:45.0000] <darobin>
annevk: you are entirely right, it's what we've all been doing for too long

[04:39:56.0000] <darobin>
that's why fixing the plumbing and not just working on the porcelain is useful

[04:40:20.0000] <darobin>
it's also why I think the general approach (warts nonwithstanding) taken for IDB was actually correct

[04:41:19.0000] <annevk>
Well if it was, we wouldn't be discussing Cache objects and such I think...

[04:42:26.0000] <annevk>
Storage is kind a different though, it's a new thing and there's not really any existing architecture it would hook into. That's different for navigation timing and APIs like that.

[06:08:31.0000] <MikeSmith>
fwiw there's a W3C ebooks workshop in New York today. I assume it'll have an IRC channel

[06:16:12.0000] <slightlyoff>
MikeSmith: adding you

[06:16:27.0000] <slightlyoff>
annevk: thanks

[06:16:29.0000] <MikeSmith>
thanks make

[06:16:35.0000] <MikeSmith>
thanks *man

[06:25:01.0000] <hsivonen>
hmm. I the BBC rep the first one to state that it's their requirement that the CDM behind EME constitude an effective technical protection measure for legal purposes?

[06:25:35.0000] <hsivonen>
not that anyone would be surprised by that being a requirement, but did it really take this long for someone who wants EME to say it?

[06:27:49.0000] <hsivonen>
*costitute

[06:28:10.0000] <hsivonen>
s/I/Is/

[06:31:35.0000] <slightlyoff>
can someone unpack the "EME" acronym for me?

[06:32:55.0000] <hsivonen>
slightlyoff: Encrypted Media Extensions

[06:33:13.0000] <hsivonen>
slightlyoff: It's the Microsoft/Google/Netflix API for bootstrapping DRM

[06:34:49.0000] <slightlyoff>
thanks

[06:34:59.0000] <slightlyoff>
got it...I know the API, didn't have the acronym

[06:38:05.0000] <jgraham>
hsivonen: Where did the BBC person say that?

[06:41:54.0000] <hsivonen>
jgraham: public-html-admin

[06:42:42.0000] <annevk>
slightlyoff: so I'm getting the sense that Future is more or less complete at this point, before adding it to DOM however, I think we should fly it by TC39 to see how much they'll change it because ending up with 2 APIs (on top of DOMRequest which is already going around) would be bad

[06:43:38.0000] <slightlyoff>
annevk: DOMRequest needs to be re-worked as a simple sub-class

[06:44:07.0000] <annevk>
slightlyoff: if we keep DOMRequest, is it really worth it to also have DOMFuture?

[06:44:38.0000] <slightlyoff>
I'm assuming that there will be many DOMFuture subclasses to fill in semantics for specific APIs that aren't in DOMFuture

[06:44:45.0000] <slightlyoff>
annevk: see what I did with the ProgressFuture

[06:44:57.0000] <slightlyoff>
annevk: also, what do you think about the name "EventedFuture" isntead of "DOMFuture"?

[06:45:00.0000] <annevk>
sure, but DOMRequest is what DOMFuture is

[06:45:22.0000] <slightlyoff>
where's the spec for that?

[06:45:26.0000] <annevk>
slightlyoff: EventFuture then

[06:45:37.0000] <slightlyoff>
/me hangs ignorance out to dry for everyone else to see

[06:45:45.0000] <annevk>
slightlyoff: dunno where DOMRequest's spec is, mounir might know

[06:46:19.0000] <darobin>
I thought DOMRequest was just specified as a comment in a bugzilla somewhere...

[06:46:51.0000] <annevk>
Yeah could be. It's Mozilla's currently somewhat crappy version of promises

[06:47:13.0000] <annevk>
But per mounir it could be elevated to the feature set of DOMFuture

[06:47:25.0000] <darobin>
ah, no, it's been "formalised" https://developer.mozilla.org/en-US/docs/DOM/DOMRequest

[06:48:03.0000] <darobin>
last I checked they'd just designed it on a napkin, I don't think they'd mind having an improved version

[06:48:06.0000] <slightlyoff>
readyState needs to die in a fire

[06:48:17.0000] <darobin>
a slow, painful one, please

[06:48:29.0000] <slightlyoff>
ok, so yeah...I think we can supplant this if we have spec author buy-in

[06:48:35.0000] <slightlyoff>
who do I need to talk to about DOMRequest?

[06:48:51.0000] <darobin>
Jonas or Mounir I would guess

[06:49:23.0000] <darobin>
annevk: how about EventfulFuture? :)

[06:49:36.0000] <annevk>
slightlyoff: mounir

[06:49:37.0000] <slightlyoff>
darobin: Evented says "this is a future with events"

[06:49:40.0000] <jgraham>
May you live in Eventful times?

[06:49:41.0000] <annevk>
darobin: yes they mind

[06:49:48.0000] <annevk>
darobin: otherwise I wouldn't be raising this

[06:49:49.0000] <slightlyoff>
darobin: "Eventful" is a value judgement ;-)

[06:50:07.0000] <darobin>
jgraham: I was precisely thinking of it as something to put in a cookie

[06:50:34.0000] <darobin>
annevk: ah, I got the opposite impression, but that was from a while back â I guess they've started using it in more places now

[06:50:53.0000] <darobin>
and I also guess I should s/they/you/ :)

[06:51:56.0000] <annevk>
darobin: it also depends on who you talk to, since Mozilla, you know, yadayada

[06:52:36.0000] <annevk>
I personally don't care that much, but I don't really know the Firefox OS space that well; I just noticed that mounir does really care

[06:53:19.0000] <darobin>
well that's also our opening: right now it's only in FxOS

[06:53:36.0000] <darobin>
and is only returned by mozPrefixed things (I would fucking hope)

[06:53:45.0000] <darobin>
so there's still time to change it

[06:54:53.0000] <annevk>
We don't prefix everything anymore. I suggest you read up on hsivonen's writing on the matter.

[06:58:26.0000] <annevk>
slightlyoff: yeah, it was so weird that people kept naming state readyState

[06:58:48.0000] <annevk>
slightlyoff: I argued a few times against it, and people were like "but readyState is there..."

[06:59:10.0000] <annevk>
slightlyoff: not to mention the horrible integer-based constants

[06:59:21.0000] <zewt>
how ready are you? 71!

[06:59:50.0000] <annevk>
over 9000!

[07:00:08.0000] <zewt>
my favorite is how even this last year i still had to define readystate constants since opera apparently didn't have them

[07:00:24.0000] <zewt>
(for xhr)

[07:01:57.0000] <volkmar>
darobin, annevk, slightlyoff: there is kind of a spec for DOMRequest here: http://mounirlamouri.github.com/sysapps/proposals/RunTime-Security/Overview.html#domrequest-interface

[07:02:04.0000] <volkmar>
quickly written though

[07:02:46.0000] <zewt>
"However, this callback mechanism makes the code barely readable"? really? heh

[07:04:00.0000] <zewt>
a common interface would make it easier to write a wrapper that says "call this callback when all of these things have finished", which currently takes per-interface work

[07:04:19.0000] <volkmar>
darobin, annevk, slightlyoff: regarding DOMRequest vs DOMFuture, my feeling is that the main advantage of DOMFuture compared to a Future type in ECMAScript is that DOMFuture could be used by current APIs that have a similar mechanism

[07:04:19.0000] <darobin>
annevk: I thought that the API stuff in FxOS was prefixed (early looks certainly seemed to indicate so)

[07:04:33.0000] <volkmar>
like IndexedDB

[07:05:29.0000] <volkmar>
the main differences between IDBRequest/DOMRequest and DOMFuture are some names (result vs value, success vs accept, error vs reject)

[07:05:33.0000] <annevk>
volkmar: so now you're volkmar again; do you have the same confusing policy as odinho?

[07:06:08.0000] <volkmar>
?

[07:06:10.0000] <annevk>
darobin: most of it might be, sure, but there's no guarantees

[07:06:32.0000] <annevk>
volkmar: I thought started using mounir as nick

[07:06:37.0000] <annevk>
you /\

[07:07:02.0000] <volkmar>
annevk: I'm using volkmar on freenode, mostly for historical reasons, I should change though

[07:07:44.0000] <jgraham>
You're mounir?

[07:07:50.0000] <volkmar>
yes, I am

[07:07:52.0000] <jgraham>
Every day is a new surprise

[07:08:10.0000] <jgraham>
(usually bad)

[07:08:17.0000] <jgraham>
(so this was quite OK by comparison)

[07:15:27.0000] <annevk>
MikeSmith: can you create a Fetch component inside WHATWG on W3C Bugzilla?

[07:19:11.0000] <MikeSmith>
yup

[07:19:32.0000] <annevk>
grand

[07:20:16.0000] <MikeSmith>
annevk: you the assignee?

[07:20:31.0000] <annevk>
afraid so

[07:20:46.0000] <annevk>
Unless anyone else here wants to volunteer to maintain CORS and HTML fetch for the next decade?

[07:21:38.0000] <MikeSmith>
/me doesn't raise his hand

[07:21:47.0000] <MikeSmith>
annevk: you got a draft yet?

[07:22:06.0000] <annevk>
no, just bugs :)

[07:22:15.0000] <annevk>
actually

[07:22:27.0000] <annevk>
it'll replace fetch.spec.whatwg.org if you meant to get a URL for the thing

[07:22:49.0000] <MikeSmith>
I just need a URL for now, so that's fine

[07:35:07.0000] <odinho>
annevk: Since I got a laptop, I'm always odinho_home now. :P

[07:35:42.0000] <odinho>
annevk: So to reduce the confusion of Ms2ger who thought I was always at home (Velmont on freenode), I renamed the home account to odinho now.

[07:45:55.0000] <annevk>
odinho: certainly helps having a single nick

[07:55:13.0000] <odinho>
annevk: I had a single nick back in the olden' days before University :-)

[08:01:25.0000] <jgraham>
darobin: Nice, but you should have included unapproved tests

[08:01:55.0000] <jgraham>
That would give you 200-ish microdata tests, among others

[08:01:56.0000] <Ms2ger>
jgraham, no, you guys should submit them ;)

[08:02:17.0000] <Ms2ger>
/me wanders off

[08:02:46.0000] <jgraham>
Ms2ger: I'm really not that excited about spending time rearranging tests when darobin already has a script to help

[08:03:30.0000] <jgraham>
(and Opera won't pay me to do it :( )

[08:04:44.0000] <darobin>
jgraham: I don't want to take unapproved tests into account, taking those into account involves submitting them properly :)

[08:05:00.0000] <jgraham>
That is very silly

[08:05:12.0000] <darobin>
jgraham: I have a script to help, but it needs human guidance

[08:05:14.0000] <jgraham>
]The "approved" tests were no better than the unapproved ones

[08:05:24.0000] <darobin>
yes but they're not in the right places

[08:05:33.0000] <darobin>
I want to get them in the right places

[08:05:42.0000] <jgraham>
The *only* real distinction was that Kris had copied some of them over to approved/ but not others

[08:06:05.0000] <darobin>
jgraham: if you can go through the submissions from Opera and tell me which of those tests go where, I'm happy to do the grunt work with my scripts and all

[08:06:24.0000] <darobin>
yeah, but we're moving away from that way of doing things â now we have a review process :)

[08:06:54.0000] <darobin>
if you tell me "all in that dir go with that section, all those there go yonder, etc." I'll do the work

[08:07:05.0000] <darobin>
it's figuring out where to move stuff that takes me time

[08:07:22.0000] <darobin>
I want to kill that "submissions" directory eventually

[08:07:26.0000] <darobin>
please help me kill it!

[08:07:36.0000] <darobin>
and tell Lars-Erik that you should be paid to do that

[08:08:23.0000] <darobin>
paid extra time even

[08:08:29.0000] <darobin>
and fed with those delicious Ikea cookies

[08:08:31.0000] <jgraham>
Hah

[08:08:59.0000] <darobin>
he did say he was going to task you guys on this

[08:09:10.0000] <darobin>
just pretend he told you by way of me :)

[08:09:17.0000] <jgraham>
Dude, those aren't cookies, they're essential components of the furniture

[08:09:41.0000] <jgraham>
https://github.com/w3c/html-testsuite/tree/master/old-tests/submission/Opera/microdata is fairly straightforward to place

[08:09:46.0000] <jgraham>
Since there is one file

[08:09:52.0000] <jgraham>
and it covers "microdata"

[08:10:11.0000] <darobin>
ok, that much I can manage

[08:11:26.0000] <jgraham>
annevk: https://github.com/w3c/html-testsuite/tree/master/old-tests/submission/Opera/classList looks like one for you?

[08:12:09.0000] <annevk>
I would never have used tabs

[08:12:17.0000] <annevk>
or linked to TR/

[08:12:27.0000] <annevk>
or used type=""

[08:12:36.0000] <jgraham>
annevk: I know you didn't *write* it

[08:12:41.0000] <annevk>
oh

[08:12:52.0000] <jgraham>
I mean it's for the DOM spec, not HTML

[08:13:12.0000] <annevk>
I see, Ms2ger handles that

[08:13:15.0000] <darobin>
jgraham: that microdata test, does it cover just the DOM stuff or the whole spec?

[08:13:32.0000] <annevk>
I'm in the camp that thinks all tests should be in one repo

[08:13:45.0000] <darobin>
/me agrees with annevk

[08:14:03.0000] <jgraham>
Well I am happy for them to all be in one repo

[08:14:09.0000] <darobin>
ms2ger should just create a dom directory there and put all the DOM tests in there

[08:14:15.0000] <jgraham>
But at the moment if you are collecting DOM tests you should take that one

[08:14:23.0000] <jgraham>
and if you are not, you should be

[08:14:26.0000] <darobin>
just move it in the repo!

[08:14:42.0000] <darobin>
/me points jgraham at his question from above

[08:15:24.0000] <jgraham>
darobin: I don't see how it would work without also depending on 5.2

[08:15:36.0000] <jgraham>
(in the WhatWG spec ofc)

[08:15:48.0000] <darobin>
I'm just asking because I don't want to bother reading them if I don't have to :)

[08:15:56.0000] <darobin>
so I'll take that as "Yes"

[08:16:59.0000] <annevk>
jgraham: I should be managing tests?

[08:17:04.0000] <annevk>
jgraham: hmm

[08:17:18.0000] <jgraham>
annevk: Well someone should be

[08:17:32.0000] <annevk>
Can I use the I'm not paid to do that card?

[08:17:51.0000] <annevk>
jgraham: Ms2ger is managing tests afaik

[08:17:56.0000] <annevk>
jgraham: and actively creating new tests

[08:18:06.0000] <jgraham>
I have no idea why https://github.com/w3c/html-testsuite/tree/master/old-tests/submission/Opera/documentwrite has a few random tests

[08:18:28.0000] <jgraham>
annevk: Oh well then you should tell Ms2ger about that test when he's around ;)

[08:18:29.0000] <darobin>
Ms2ger: review for you: https://github.com/w3c/html-testsuite/pull/24

[08:18:45.0000] <darobin>
jgraham: you see why it's taking a while to move these things around?

[08:20:28.0000] <jgraham>
darobin: I believe everything in https://github.com/w3c/html-testsuite/tree/master/old-tests/submission/Opera/historyinterface is for #the-history-interface

[08:23:06.0000] <jgraham>
https://github.com/w3c/html-testsuite/tree/master/old-tests/submission/Opera/html5lib/tests goes in the obvious place, but note that some/all of those already seem to be there

[08:23:37.0000] <darobin>
ms2ger: and https://github.com/w3c/html-testsuite/pull/25 (you can blame jgraham for these)

[08:23:37.0000] <annevk>
When should we add new Text() and such?

[08:23:47.0000] <darobin>
now?

[08:23:54.0000] <annevk>
Yeah, now seems about right

[08:24:04.0000] <jgraham>
Also those html5lib tests run in 3 different modes

[08:24:06.0000] <annevk>
the only one that's problematic is new Element and I'll just defer that

[08:24:09.0000] <jgraham>
No idea how to represent that

[08:24:25.0000] <darobin>
isn't new Node() a problem?

[08:24:57.0000] <annevk>
darobin: oh yes, I'm not going up the chain; there won't be new CharacterData either

[08:25:04.0000] <darobin>
ah, good to hear

[08:25:15.0000] <darobin>
I was afraid there'd be all that new stuff

[08:25:26.0000] <annevk>
are you punning?

[08:25:31.0000] <darobin>
haha

[08:25:33.0000] <darobin>
actually I wasn't

[08:25:41.0000] <jgraham>
#htmloptionscollection-0 for https://github.com/w3c/html-testsuite/tree/master/old-tests/submission/Opera/htmloptionscollection

[08:26:04.0000] <darobin>
at some point slightlyoff was arguing that all should be constructible â I was concerned that he may have convinced you

[08:26:16.0000] <darobin>
jgraham: may I introduce you to a few nice git commands that I know of?

[08:26:32.0000] <slightlyoff>
darobin: wait, what *shouldn't* be constructable?

[08:26:32.0000] <jgraham>
darobin: I am happily using git over irc :p

[08:26:42.0000] <slightlyoff>
darobin: non-constructable is insane from a JS perspective

[08:26:42.0000] <jgraham>
Oh no

[08:26:44.0000] <jgraham>
/me hides

[08:26:52.0000] <annevk>
slightlyoff: Node, CharacterData

[08:26:56.0000] <annevk>
slightlyoff: Element prolly too

[08:27:08.0000] <slightlyoff>
ok, so those are like Mixins

[08:27:09.0000] <darobin>
oh dear me, I should never have awakened that debate again

[08:27:10.0000] <jgraham>
slightlyoff: In this case abstract base classes

[08:27:11.0000] <slightlyoff>
or abstract classes

[08:27:15.0000] <annevk>
slightlyoff: yup

[08:27:16.0000] <slightlyoff>
but if it's a concrete class....

[08:27:29.0000] <annevk>
slightlyoff: the concrete ones I'm gonna work on right now

[08:27:29.0000] <slightlyoff>
and anyway, in JS, even your "abstract" classes are constructable

[08:27:35.0000] <slightlyoff>
even if they don't return anything sane

[08:27:43.0000] <slightlyoff>
annevk: +1 to that

[08:28:05.0000] <jgraham>
darobin: https://github.com/w3c/html-testsuite/tree/master/old-tests/submission/Opera/loading_web_pages/browsing_the_web/unloading_documents/document_open is conveniently arranged by spec section already :)

[08:28:06.0000] <annevk>
the abstract ones I rather not as it would require changes all over DOM code to not break existing assumptions

[08:28:30.0000] <darobin>
jgraham: if you're going through the entire list at some point I'd appreciate that being dumped in email rather than IRC

[08:29:08.0000] <jgraham>
darobin: No, I was doing the easy cases

[08:29:26.0000] <jgraham>
I have absolutely no idea how the dnd tests should be arranged for example

[08:29:51.0000] <jgraham>
Or media tests

[08:31:00.0000] <darobin>
well, let me rephrase

[08:31:21.0000] <jgraham>
darobin: #custom-handlers for https://github.com/w3c/html-testsuite/tree/master/old-tests/submission/Opera/registerhandler/js

[08:31:22.0000] <darobin>
if you see a longerish list of ones that you know the answer to, at some point please switch to email :)

[08:31:29.0000] <darobin>
not necessarily *all* of them

[08:32:33.0000] <jgraham>
script_scheduling: each test covers about 3 different sections of the spec and cvarious other specs and some things that are unspecified :)

[08:33:40.0000] <jgraham>
https://github.com/w3c/html-testsuite/tree/master/old-tests/submission/Opera/timeelement #the-time-element

[08:34:35.0000] <annevk>
Hmm, DocumentType?

[08:34:39.0000] <annevk>
DocumentType is useless

[08:35:44.0000] <jgraham>
darobin: I guess the onerror ones are something like #runtime-script-errors but I'm not sure

[08:35:52.0000] <jgraham>
That's all the ones that are easy

[08:36:02.0000] <darobin>
jgraham: thanks!

[08:46:14.0000] <darobin>
jgraham: while you're around, could you prod people internally at Opera to get the remaining mappings?

[08:46:22.0000] <darobin>
e.g. prodding some internal list or whatnot

[08:46:26.0000] <darobin>
it would be most helpful

[08:46:33.0000] <darobin>
just the mappings like you've given me is enough

[08:48:01.0000] <annevk>
ProcessingInstruction? Erring on it being useless too

[08:49:28.0000] <dglazkov>
good morning, Whatwg!

[08:51:07.0000] <slightlyoff>
OH HAI dglazkov

[08:51:49.0000] <jgraham>
There is no actual evidence that's anything more than a bot :)

[09:04:20.0000] <darobin>
annevk: only PHP hackers use PIs; I reckon that's a good reason not to support them :)

[09:13:48.0000] <MikeSmith>
yeah I think it's not possible to break php any further than it has already broken itself

[09:19:32.0000] <annevk>
Next: Range

[09:28:52.0000] <darobin>
ooh, there are nice things to do with Range

[09:36:57.0000] <annevk>
Nobody replied to my request for argument versions so it's just a simple one for now

[09:37:19.0000] <jgraham>
argument versions?

[09:38:14.0000] <annevk>
E.g. new Range(node, offset, node2, offset2)

[09:38:37.0000] <annevk>
Or new Range(rangeInit), or ...

[09:43:49.0000] <slightlyoff>
annevk: sorry, didn't see the thread

[09:43:57.0000] <slightlyoff>
annevk: what do the editing libraries do now?

[09:44:27.0000] <annevk>
don't know, Range hasn't really been my terrain

[09:44:41.0000] <slightlyoff>
(also, would offset allow a "-" prefix to offset backwards from the end?)

[09:44:55.0000] <slightlyoff>
i.e., new Range(node, 10, node2, -5);

[09:45:11.0000] <annevk>
currently setEnd() does not allow such a thing

[09:45:26.0000] <slightlyoff>
...also terribly awkward

[09:45:35.0000] <annevk>
all range offsets are unsigned

[09:46:07.0000] <annevk>
oh yeah, I'm sure we'd do most of this better today :)

[09:48:29.0000] <annevk>
Not saying btw that we could not make those kind of changes, but we should probably fix the larger problems with editing first before tackling API convenience

[09:50:49.0000] <annevk>
http://www.bullettrain.com/express.html looks kinda ugly. Does it exist, but then nice?

[09:56:43.0000] <Raymondo>
"It is a complete Game Changer."

[09:58:06.0000] <annevk>
I wish Apple would just sell them. Like a laptop without most of the other hardware :-)

[09:58:11.0000] <MikeSmith>
Raymondo: yeah, agreed about Windows 8

[10:00:11.0000] <smaug____>
annevk: should range ctor take a dictionary

[10:00:25.0000] <smaug____>
so that one could initialize start/end points

[10:00:59.0000] <annevk>
smaug____: maybe, see also slightlyoff's comments above about supporting negative offsets

[10:01:38.0000] <annevk>
smaug____: if you have a concrete idea I can add it, spec-wise it's all rather trivial

[10:01:55.0000] <smaug____>
annevk: I don't see slightlyoff's comments in the bug

[10:01:58.0000] <smaug____>
nor in the mailing list

[10:02:47.0000] <smaug____>
negative offsets... hmm, odd idea

[10:02:52.0000] <smaug____>
but perhaps there is some use case

[10:11:59.0000] <annevk>
smaug____: I said above, as in this channel

[10:12:48.0000] <smaug____>
annevk: oops, I missed "above" :)

[10:17:47.0000] <smaug____>
annevk: so, if there is no good usecase for negative, let's not do that now

[10:18:34.0000] <annevk>
smaug____: well the use case is a more convenient API, no?

[10:18:40.0000] <annevk>
smaug____: if you want to count from the end

[10:19:00.0000] <smaug____>
at least we could start with some dictionary which { startContainer: foo, startOffset: 123, ...}

[10:19:43.0000] <annevk>
I wish we could have something shorter

[10:19:46.0000] <smaug____>
annevk: negative offset handling is separate feature

[10:19:59.0000] <annevk>
start : node, offset somehow

[10:20:00.0000] <smaug____>
annevk: why? I prefer consistency

[10:20:36.0000] <annevk>
smaug____: what you have there is way more typing than setStart(node, offset)

[10:27:09.0000] <JonathanNeal>
hiya

[10:40:03.0000] <TabAtkins>
Morning, WHATWG!  Anybody try to say anything to me the last week?

[10:53:23.0000] <JonathanNeal>
TabAtkins: we discussed media queries for elements.

[10:54:16.0000] <JonathanNeal>
And I know at one point we pinged you.

[10:54:58.0000] <JonathanNeal>
necolas fired me up with a tweet, and I wrote up a little blog about it http://www.jonathantneal.com/blog/thoughts-on-media-queries-for-elements/

[10:55:02.0000] <TabAtkins>
I've been at a mix of Tucson, Tahoe, and videogames.

[10:55:29.0000] <JonathanNeal>
That's a great mix.

[10:55:50.0000] <JonathanNeal>
Official business or vacation?

[11:27:05.0000] <TabAtkins>
Official business, official business vacation, weekend.

[11:29:57.0000] <JonathanNeal>
:)

[11:31:55.0000] <jgraham>
I hop you only played games beginning with "T"

[11:50:01.0000] <annevk>
jobcentreplus mailed this letter about my NINo and basically suggested to type this URL: http://www.direct.gov.uk/en/MoneyTaxAndBeneifts/Taxes/BeginnersGuideToTax/NationalInsurance/IntroductiontoNationalInsurance/DG_190057

[11:50:51.0000] <annevk>
It apparently redirects these days, so the paper is out of date with reality (doh), but the usability of typing such a thing leaves a lot to be desired.

[11:51:36.0000] <annevk>
Long, uppercase, lowercase, underscores, confusion between l and I... I guess that's why they made the new site.

[12:05:12.0000] <TabAtkins>
annevk: Holy shit.

[12:05:56.0000] <gsnedders>
annevk: How complex is it to get one?

[12:06:17.0000] <gsnedders>
(Advantage of being British: one appears through the door shortly after turning 16.)

[12:09:22.0000] <annevk>
gsnedders: surprisingly easy. I called last Monday as is required. Got an appoint for Tuesday morning. Walked 40 min Tuesday morning to get to the nearest jobcentreplus. Answered the questions and let them copy my passport, employment contract, and tenancy agreement, and then today I got mail even though they said it would take two to three weeks.

[12:09:33.0000] <annevk>
appointment*

[12:10:37.0000] <gsnedders>
annevk: You need an appointment!?

[12:10:53.0000] <gsnedders>
/me is honestly surprised it's that complicated

[12:11:23.0000] <gsnedders>
(And why the hell do they need employment contract and tenancy agreement? I guess the latter they take as proof of address, but the former?)

[12:11:32.0000] <annevk>
gsnedders: and wait a bit and talk to a person and such :-)

[12:13:15.0000] <gsnedders>
annevk: I'm just honestly surprised there's that much to it. I'd expect it to be one form + photocopy of ID document, and possibly proof of address.

[12:13:41.0000] <gsnedders>
I mean, it's not like you can do much with it.

[12:17:56.0000] <annevk>
All I know is my employer needs it and that it's the only interaction that's required for me with the UK government so from that perspective it's all relatively easy.

[12:18:47.0000] <gsnedders>
It's a number to identify you for tax purposes. That's all.

[12:26:38.0000] <jgraham>
Yup, should be much easier than moving to Sweden for example (and it sounds like it is, pretty much)

[12:27:18.0000] <Ms2ger>
People want to move to Sweden? :)

[12:29:55.0000] <gsnedders>
jgraham: Really? I had a single form to fill out, albeit only for a samordingsnummer.

[12:30:11.0000] <gsnedders>
*samordningsnummer

[12:44:30.0000] <volkmar>
gsnedders: they require a proof of employement or a proof of willing to find a job

[12:44:53.0000] <volkmar>
I guess it's mostly to not waste time on creating files for ppl that will never use their number

[12:45:00.0000] <volkmar>
might be for other purpose though

[12:45:10.0000] <gsnedders>
volkmar: Yeah, that was my only guess as to why it could be.

[13:09:43.0000] <annevk>
dglazkov: btw, discussed this with sicking the other day

[13:09:59.0000] <annevk>
dglazkov: the idea of changing ShadowRoot to HTMLShadowElement

[13:10:11.0000] <jgraham>
OK, I am officially living in a bizzaro parallel universe. Apparently the Romainian government have denied *on facebook* that any rogue horsemeat masqurading as beef has come from their country.

[13:10:15.0000] <annevk>
dglazkov: it would just mimic <shadow> at that point

[13:10:36.0000] <annevk>
dglazkov: which you'd clone and add to hosts as appropriate

[13:10:49.0000] <annevk>
dglazkov: and when appended to the DOM it would simply render nothing

[13:11:09.0000] <annevk>
dglazkov: prolly better as discussion on public-webapps, dunno if sicking has the time to take it there

[13:12:26.0000] <annevk>
gsnedders: volkmar: isn't it also a number for benefits? I believe you can use it to claim some stuff if you can't find income or some such

[13:13:05.0000] <jgraham>
/me has never used a NI number for anything other than paying tax

[13:13:21.0000] <jgraham>
But if you get them from jobcentreplus, I guess, maybe?

[13:13:52.0000] <annevk>
https://www.gov.uk/national-insurance

[13:13:59.0000] <annevk>
if you make less you don't pay I suppose

[13:27:55.0000] <gsnedders>
annevk: Right

[13:28:07.0000] <gsnedders>
annevk: Practically most people just count NI contributions as tax.

[13:31:25.0000] <esprehn_>
wow, the gov.uk website uses html5

[13:31:51.0000] <annevk>
new gov.uk site is generally awesome

[13:32:04.0000] <esprehn_>
yeah this is nicely done

[13:33:05.0000] <annevk>
information on immigration has been extremely easy to find

[13:42:04.0000] <jgraham>
I feel like I ought to know who did the gov.uk site

[13:42:11.0000] <jgraham>
But I don't think I actually do

[13:43:14.0000] <jgraham>
But it's pretty obvious that it wasn't some design-by-committee-and-people-that-don't-know-what-they're-doing job

[13:45:14.0000] <jgraham>
http://digital.cabinetoffice.gov.uk/team-alpha/

[13:45:55.0000] <jgraham>
(turns out that I hadn'theard of them)

[14:39:25.0000] <JonathanNeal>
TabAtkins: what are you thoughts on element media queries, like the kind I blogged about?

[14:40:21.0000] <TabAtkins>
Same as I've explained many times before - dealing with the self-reference is way too hard, and restricting it such that it would be less hard would make the feature too weak.

[15:17:53.0000] <JonathanNeal>
TabAtkins: so you didn't like my error handling then?

[15:19:34.0000] <TabAtkins>
JonathanNeal: I haven't read your blog post yet.


2013-02-12
[16:03:24.0000] <TabAtkins>
zewt: "I am sorry for both", hahaha

[16:15:28.0000] <zewt>
TabAtkins: even ratcheting up second-language leniency, this guy is ... trying

[20:53:06.0000] <MikeSmith>
https://bugs.webkit.org/show_bug.cgi?id=22339#c24

[20:53:51.0000] <MikeSmith>
from Jungshik

[20:53:54.0000] <MikeSmith>
"there are two 'pseudo-Unicode/font-based encodings' widely used for Burmese/Myanmar. In a sense, it's even worse because the pages are apparently in UTF-8 but Unicode code points are interpreted differently than what's specified by Unicode."

[21:26:54.0000] <kochi>
MikeSmith: hi

[21:27:22.0000] <kochi>
MikeSmith: sorry for not updating the status, but we are still discussing details...

[21:28:16.0000] <kochi>
but I've updated the IME API draft in mercurial with some changes which are being discussed.

[21:30:03.0000] <MikeSmith>
kochi: no worries, man. Stuff takes time.

[21:31:41.0000] <kochi>
MikeSmith: thanks.  I would like to post the draft as early as possible to start discussion.

[21:32:05.0000] <MikeSmith>
ok

[21:34:04.0000] <kochi>
MikeSmith: i missed you at the office last week :)

[21:46:30.0000] <MikeSmith>
kochi: yeah, had a fun lunch with Kenji and Zack and Dominic

[00:09:22.0000] <MikeSmith>
is slightlyoff's DOM Futures stuff something that's a potential candidate for standardization? (eventually, I mean)

[00:09:26.0000] <MikeSmith>
https://github.com/slightlyoff/DOMFuture

[00:11:52.0000] <MikeSmith>
oh, I guess it is, for standardization in JavaScript

[00:11:54.0000] <MikeSmith>
eventual subsetting by

[00:12:24.0000] <MikeSmith>
https://github.com/slightlyoff/DOMFuture/blob/master/DOMFuture.idl#L27

[00:12:38.0000] <MikeSmith>
"eventual subsetting by TC39 for adding Futures to the language directly"

[00:52:53.0000] <annevk>
MikeSmith: yeah, will prolly add that to DOM at some point

[00:53:19.0000] <MikeSmith>
ah OK

[00:53:20.0000] <annevk>
MikeSmith: once it's stable enough

[00:58:07.0000] <jgraham>
annevk: Saying 'throw a "SyntaxError"' reads weirdly to me. I was expecting the word "exception" and had to backtrack when I didn't find it.

[00:58:44.0000] <annevk>
you mean there's no "exception" after that?

[00:59:04.0000] <annevk>
because I think that's a bug, unless I changed conventions

[00:59:52.0000] <jgraham>
I was looking at http://dom.spec.whatwg.org/#dom-mutationobserver-observe

[01:01:31.0000] <annevk>
Yeah that text was not from me and I didn't catch it

[01:24:44.0000] <slightlyoff>
MikeSmith: so The Plan (TM) is that we get the event-loving version into DOM and get a version without events into JS, lining one up as the superclass and the other as the subclass

[01:35:36.0000] <MikeSmith>
ah OK, that's what you mean by "eventual subsetting", I guess

[01:45:01.0000] <annevk>
slightlyoff: looks I'll be missing yet another TAG telcon

[01:45:17.0000] <annevk>
not that the minutes made them look appealing...

[01:46:35.0000] <slightlyoff>
Sorry to hear that.

[02:15:19.0000] <annevk>
Ms2ger: what happened to https://bugzilla.mozilla.org/show_bug.cgi?id=660660 ?

[02:16:31.0000] <Ms2ger>
Other stuff taking up my time

[02:20:32.0000] <jgraham>
Nice bug number

[02:26:04.0000] <Ms2ger>
Not an accident :)

[02:31:06.0000] <jgraham>
You only file in cute bug numbers? "Have a remote code exploit, but waiting for bug 654321 to file it"

[02:41:41.0000] <annevk>
The custom element interaction with createElement is really ugly :/

[02:42:07.0000] <annevk>
dglazkov: slightlyoff: if we don't like createElement, why are we trying to make it work?

[02:52:09.0000] <annevk>
Ms2ger: that's too bad

[02:52:39.0000] <annevk>
Ms2ger: DOM is still riddled with comments regarding both Attr and that

[02:52:44.0000] <annevk>
Ms2ger: and a couple of other things

[02:58:42.0000] <annevk>
Wait, custom names only have to match Name?

[02:59:18.0000] <annevk>
So you can have <xml:troll-:::> or some such?

[02:59:54.0000] <annevk>
or even :-:

[03:00:21.0000] <annevk>
I wish ) was allowed

[03:00:52.0000] <annevk>
:-P

[03:00:57.0000] <Ms2ger>
<:)>

[03:02:04.0000] <annevk>
you're lacking a dash

[03:02:07.0000] <annevk>
it's required

[03:02:21.0000] <odinho>
<:-)>  cool tag

[03:03:15.0000] <jgraham>
But the correct match would be <:-(></:-)>

[03:04:11.0000] <annevk>
again, ) is not a valid code point

[03:04:15.0000] <annevk>
anyway, filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=20973

[03:04:18.0000] <slightlyoff>
annevk: its actually not that bad. We have a solution on the JS side for the worst bits.

[03:04:32.0000] <slightlyoff>
As for why...because reality and legacy

[03:04:35.0000] <jgraham>
annevk: We know :p

[03:04:42.0000] <annevk>
slightlyoff: what legacy?

[03:05:10.0000] <annevk>
slightlyoff: and it's pretty bad

[03:06:39.0000] <annevk>
https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/custom/index.html#monkeypatch-create-element is no good

[03:10:25.0000] <slightlyoff>
/me looks

[03:11:25.0000] <slightlyoff>
I don't understand what's wrong about formalizing the "your shadow tree creation and finalization methods will be called"?

[03:11:41.0000] <slightlyoff>
unless the argument is that the lifecycle should be internally driven, e.g., from the ctor

[03:12:04.0000] <slightlyoff>
(which was the case in one of my early designs)

[03:12:05.0000] <annevk>
What's wrong is monkeypatching createElement() with magic

[03:12:16.0000] <slightlyoff>
so

[03:12:18.0000] <slightlyoff>
1.) it's not magic

[03:12:26.0000] <slightlyoff>
it's an explanation of something that already happens in elements

[03:12:39.0000] <slightlyoff>
e.g., if I create a new <input> type, a shadow dom is created...when? how? MAGIC!

[03:12:44.0000] <slightlyoff>
this says "it happens here"

[03:12:51.0000] <slightlyoff>
and we can explain existing stuff better

[03:12:53.0000] <slightlyoff>
so that's anti-magic

[03:13:01.0000] <slightlyoff>
2.) it's not monkey-patching per-sae

[03:13:04.0000] <annevk>
I wonder if what you state there is actually true.

[03:13:06.0000] <slightlyoff>
it's outlining the extensibility point

[03:13:26.0000] <slightlyoff>
there's a debate about if these things happen inside our outside of constructors

[03:13:31.0000] <annevk>
Typically existing stuff has weird requirements that are not well understood.

[03:13:37.0000] <slightlyoff>
e.g., if createElement("textarea") de-sugars to:

[03:13:41.0000] <annevk>
And we haven't exactly flushed that out yet.

[03:13:51.0000] <slightlyoff>
var ta = new HTMLTextAreaElement();

[03:13:55.0000] <slightlyoff>
the question is:

[03:14:04.0000] <slightlyoff>
does the constructor itself call the appropriate lifecycle methods?

[03:14:15.0000] <slightlyoff>
or does createElement also do:

[03:14:24.0000] <slightlyoff>
ta.initializeShadowRoot();

[03:14:29.0000] <slightlyoff>
ta.finalize();

[03:14:40.0000] <slightlyoff>
i.e., who drives the lifecycle

[03:14:44.0000] <slightlyoff>
*that* is the debate

[03:14:51.0000] <annevk>
The constructor should.

[03:14:55.0000] <slightlyoff>
and I could go both ways on it

[03:14:57.0000] <annevk>
Otherwise new Image() doesn't work the way it does now.

[03:15:01.0000] <annevk>
Or new Audio()

[03:15:14.0000] <annevk>
We already have element constructors that are equivalent to their createElement call

[03:16:53.0000] <slightlyoff>
ok, so I think that's a strong argument

[03:17:00.0000] <slightlyoff>
we should go have this debate with dglazkov then = )

[03:17:22.0000] <annevk>
I guess I can post to public-webapps

[03:17:43.0000] <slightlyoff>
I don't know that the "new Image()" pun was part of my design thinking for the early drafts, but it does make a nice case

[03:17:58.0000] <slightlyoff>
my early designs had a superclass ctor and/or public initialization method

[03:18:14.0000] <slightlyoff>
the objections to the latter is that it clutters the public API of the component with lifecycle gunk

[03:18:31.0000] <slightlyoff>
the objection to the former is that not calling super() is now hazardous to an element's health

[03:20:59.0000] <slightlyoff>
the objection to an external lifecycle driver is that it requires that elements be robust against lifecycle extensions and that you now have what might appear to be 'magic' if you're just sitting there looking at the code for a class

[03:21:19.0000] <slightlyoff>
i.e., you need to understand what some other system you're interacting with will do to/with you

[03:23:07.0000] <slightlyoff>
moving locations...back in a bit

[03:24:19.0000] <annevk>
slightlyoff: http://lists.w3.org/Archives/Public/public-webapps/2013JanMar/0371.html

[03:24:36.0000] <annevk>
slightlyoff: might be better to elaborate there

[03:31:50.0000] <annevk>
Hmm, <template><script> has magic too

[03:31:59.0000] <annevk>
euh

[03:32:04.0000] <annevk>
<element><script>

[03:32:14.0000] <annevk>
but <element><b><script> does not...

[03:34:22.0000] <slightlyoff>
annevk: not sure I understand...you mean <element> script invokes the script with special expectations?

[03:34:37.0000] <slightlyoff>
annevk: I think I had argued that it should have some distinguishing attribute

[03:34:38.0000] <slightlyoff>
but I'm not fussed

[03:34:38.0000] <annevk>
it ignores async/defer

[03:34:46.0000] <slightlyoff>
ahhh

[03:34:49.0000] <slightlyoff>
good point

[03:34:54.0000] <annevk>
but only if it's a child

[03:35:18.0000] <annevk>
so <element><shadow><script> would be different, but maybe <shadow> has its own set of rules

[03:35:51.0000] <slightlyoff>
so the the seemingly strange thing is that it modifies script to be context aware

[03:35:57.0000] <slightlyoff>
I think that's what we should fix

[03:36:15.0000] <slightlyoff>
<script constructorFor="elementId">

[03:36:16.0000] <jgraham>
Oh wow, monkeypatch heaven

[03:36:18.0000] <slightlyoff>
or similar

[03:36:32.0000] <Ms2ger>
jgraham, can you deal with https://github.com/w3c/html-testsuite/pull/26#issuecomment-13428637 ?

[03:36:34.0000] <annevk>
It's also probably because I've not been part of the design phase, so I've no idea what the considerations were and it all looks kinda funky

[03:36:45.0000] <annevk>
I've had the same looking at the font loading proposal this morning

[03:36:49.0000] <slightlyoff>
annevk: it's good to get these things aired

[03:37:12.0000] <slightlyoff>
annevk: and even if it's just replaying the arguments from our perspective to get everyone on board, it's still a good thing

[03:37:42.0000] <slightlyoff>
if only because it gives me the chance to argue against soem magic I didn't vote for the first time around = )

[03:37:58.0000] <jgraham>
Ms2ger: So I really should be getting notifications on that repo. I guess darobin needs to add me to it or something though

[03:38:06.0000] <annevk>
slightlyoff: cunning

[03:38:08.0000] <jgraham>
Ms2ger: I guess I can fix that today sometime

[04:51:04.0000] <annevk>
Hmm, given http://www.whatwg.org/specs/web-apps/current-work/#the-element's-base-url maybe DOM should define xml:base

[04:59:01.0000] <Ms2ger>
jgraham, ta

[05:36:51.0000] <karlcow>
http://relogo.org/

[05:37:06.0000] <karlcow>
>rel="logo" is a proposed standard for serving and maintaining up-to-date logos for use in various media.

[05:37:15.0000] <karlcow>
proposed where?

[05:37:34.0000] <Ms2ger>
Right there

[05:37:40.0000] <Ms2ger>
And probably nowhere else

[05:43:12.0000] <annevk>
euhm icon?

[05:59:17.0000] <MikeSmith>
hmm I find that Vine videos don't display at all in Chromium that I build from sources but do display in Chrome Canary and normal Chrome. I wonder they wouldn't work in my local build. I can view other videos just find. What's different about Vide videos?

[05:59:35.0000] <jgraham>
MikeSmith: Sounds like a feature

[05:59:44.0000] <MikeSmith>
heh

[06:00:00.0000] <MikeSmith>
I wanna see the cats man

[06:01:29.0000] <annevk>
MikeSmith: Chrome comes with Flash

[06:03:06.0000] <MikeSmith>
ah Flash

[06:03:23.0000] <MikeSmith>
dinnet know

[06:04:31.0000] <MikeSmith>
wait but if it's Flash that means you can't view Vine videos in the i0S browser either

[06:05:07.0000] <jgraham>
Unless they UA switch or summat

[06:08:46.0000] <MikeSmith>
hmm it's not Flash in Chrome. it's HTML video. But .mp4. So I guess it must be that Chromium doesn't do H.264

[06:25:52.0000] <jgraham>
MikeSmith: It doesn't

[06:26:03.0000] <jgraham>
But it's OK, Google are going to remove that!

[06:26:12.0000] <jgraham>
(is that joke even funny anymore?)

[06:26:23.0000] <Ms2ger>
Well, Opera had it first

[06:26:45.0000] <MikeSmith>
heh

[06:26:56.0000] <jgraham>
Ms2ger: A sense of humor?

[06:27:42.0000] <Ms2ger>
Hah: http://w3cmemes.tumblr.com/post/42864050694/dept-of-epiphanies-benedict-realizes-where

[06:29:29.0000] <MikeSmith>
so the user experience sucks as far as making it clear that it doesn't support it. All you get is black. No "You're browser can't display this video." But I guess for the 0.0001% of the people in the universe who are running Chromium it's not big whoop.

[06:31:00.0000] <Ms2ger>
"You're"?

[06:31:34.0000] <zewt>
awooga awooga

[06:33:11.0000] <MikeSmith>
good catch, lemme correct that

[06:33:13.0000] <MikeSmith>
""You're browser can't  display this video."

[06:33:16.0000] <MikeSmith>
oops

[06:33:42.0000] <MikeSmith>
"You're a browser that can't display this video."

[06:33:59.0000] <MikeSmith>
it's a message to the browser, not to the user

[06:34:17.0000] <MikeSmith>
that's kind of the way they llike to do things in Chromium

[06:34:34.0000] <MikeSmith>
they find it easier to talk to the machines than the people

[06:34:43.0000] <jgraham>
You're a little browser short and stout?

[06:35:00.0000] <zewt>
at least the machines might listen

[06:35:13.0000] <MikeSmith>
HEY BROWSER YU NO CANT DISPLAY THIS VIDEO??

[06:35:42.0000] <zewt>
they should put a button that randomly appears in chrome with big red text "clicking this button will delete all your stuff", just to do stats on how many people click it

[06:35:51.0000] <MikeSmith>
machines like to be spoken to in all caps, from early on in computing history. Lowercase is a fad.

[06:37:05.0000] <MikeSmith>
zewt: I would click just out of curiosity, to see if there's any bugs in their delete-all-my-stuff implementation

[06:37:27.0000] <darobin>
I always said we needed Uppercase XHTML

[06:37:51.0000] <darobin>
the content type for which would of course simply be APPLICATION/XHTML+XML

[06:40:49.0000] <MikeSmith>
that makes me think for polyglot we should have a content-type with mixed case -- text/pOLyGloT

[06:42:13.0000] <MikeSmith>
or something more descriptive like text/IamPolYgLotPleAseLoVeMeAnDtReatWithCaRe

[06:43:41.0000] <annevk>
A MIME type for polyglot? What universe is this?

[06:45:07.0000] <MikeSmith>
it's called the Good Times Universe. It's kind of like the Marvel Universe, except with Good Times instead of costumed superheros

[06:45:16.0000] <jgraham>
annevk: As I said yesterday, this is bizzaroverse in which governments make annoucements on Facebook and polyglot is not only a fabulous idea but needs its own MIME type

[06:45:28.0000] <MikeSmith>
hah

[06:45:37.0000] <annevk>
Can I have a pet hippo?

[06:49:02.0000] <jgraham>
No, but you can have a pet hippie. Will that do?

[06:49:39.0000] <MikeSmith>
annevk: speaking of Good Times I hope you guys that are part of the incoming Papal regime end up doing your own brand of hobbyhorse lobbying for stuff the way the previous Pope was so fond of stuff like Polyglot and making us create a separate language-without-UA-requirements HTML spec and that kind of stuff

[06:50:05.0000] <annevk>
MikeSmith is enough pet hippie for me jgraham. I'd much rather have a pet hippo. And come to think of it, some place to put it, because my studio is not a good fit for a hippo :-)

[06:50:13.0000] <MikeSmith>
cause that's the kind of stuff I love spending my time on, for years and years and years

[06:50:46.0000] <annevk>
MikeSmith: we'd hate to disappoint

[06:51:07.0000] <MikeSmith>
get a tiny hippo. They make them in different sizes these days. pygmy hippo is one size that's a good for London studio apartments

[06:52:00.0000] <darobin>
annevk: they make smaller sizes precisely for the likes of you: http://en.wikipedia.org/wiki/Pygmy_hippopotamus

[06:52:41.0000] <darobin>
see what happens when you get MikeSmith and I working together? inside of a few months we're both suggesting pygmy hippos

[06:52:45.0000] <MikeSmith>
or just get a bulldog. It's almost the same as a tiny hippo. Especially if you shave all the hair off.

[06:52:51.0000] <MikeSmith>
heh

[06:52:56.0000] <MikeSmith>
Good Times

[06:53:29.0000] <zewt>
but whatever you do, don't shave a bear http://thewholegardenwillbow.files.wordpress.com/2011/06/img001862.jpg

[06:53:30.0000] <MikeSmith>
W3C got Mr Toad driving this bus

[06:54:54.0000] <MikeSmith>
zewt wtf wow

[06:55:26.0000] <zewt>
that's probably what the bear was thinking

[06:57:16.0000] <MikeSmith>
heh

[06:58:31.0000] <darobin>
wtf, that's ugly

[06:59:52.0000] <darobin>
also, don't comb your lion http://www.makemybeauty.com/wp-content/uploads/2011/01/timotei-lion.jpg

[07:29:13.0000] <annevk>
HTML needs event parent / cross-boundary event parent

[07:29:46.0000] <annevk>
Shadow DOM needs event parent, but along with that it also wants to store a target and a relatedTarget (not in Shadow DOM yet because of a bug)

[07:34:36.0000] <annevk>
So you ask for the event parent. On that object you ask for a override target and possibly an relatedTarget?

[07:34:45.0000] <annevk>
s/an/a/

[07:37:01.0000] <annevk>
Of course Shadow DOM is weird. dglazkov, what gets me answers quicker, email or bugs?

[07:55:23.0000] <annevk>
slightlyoff: I guess you're not going to tell me what BIS means now? :)

[07:58:10.0000] <annevk>
Hixie: Shadow DOM is why DOM and HTML should probably just merge.

[08:32:57.0000] <annevk>
slightlyoff: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20913 it seems the other behavior that's weird is that createElement would return an element with an is="" attribute

[08:33:03.0000] <annevk>
slightlyoff: that's completely new

[08:33:28.0000] <slightlyoff>
annevk: I want the "is" attribute to die in a fire, so that's not me ;-)

[08:33:29.0000] <annevk>
slightlyoff: but the whole is="" thing does not appear to be defined so you miss it if you just read the drafts :/

[08:33:36.0000] <slightlyoff>
/me summons dglazkov

[08:49:55.0000] <dglazkov>
good morning, Whatwg!

[08:50:20.0000] <annevk>
slightlyoff: dglazkov: commented here: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20913#c24

[08:50:37.0000] <annevk>
dglazkov: left you with various bug reports and questions

[08:50:53.0000] <dglazkov>
annevk: I saw that! Thanks!

[08:51:05.0000] <annevk>
dglazkov: oh, and when I seem frustrated, just ignore that bit ;)

[08:51:30.0000] <dglazkov>
annevk: why do you seem frustrated? :)

[08:51:43.0000] <annevk>
because Shadow DOM? :p

[08:52:06.0000] <annevk>
I like the concept, I'm not a fan of the spec

[08:52:58.0000] <dglazkov>
/me sulks

[08:54:50.0000] <dglazkov>
annevk: well, the good news is that I am not done with the spec

[08:55:22.0000] <annevk>
I tend to think that eventually most of it will be either part of HTML or DOM

[08:55:48.0000] <annevk>
With what's left integrated into CSS's box model generation algorithm (if they ever define that)

[08:55:49.0000] <dglazkov>
annevk: yep

[08:56:21.0000] <annevk>
but I can see how the monkeypatching is a nice start to figure things out first

[08:56:27.0000] <annevk>
since it's such a big thing

[09:21:41.0000] <dglazkov>
annevk: you can already do document.createElement(":-P") today

[09:24:54.0000] <annevk>
dglazkov: yes, but not createElementNS

[09:25:22.0000] <annevk>
dglazkov: and you cannot write <:-P> in XML either

[09:28:01.0000] <dglazkov>
annevk: I see

[09:29:51.0000] <smaug____>
hmm, web components becoming more and more like XTF+XBL

[09:29:59.0000] <smaug____>
which is good, I think

[09:30:36.0000] <annevk>
smaug____: you would say that

[09:34:53.0000] <annevk>
dglazkov: so is http://www.w3.org/TR/components-intro/ information that is missing elsewhere, but also wrong?

[09:34:58.0000] <annevk>
dglazkov: should I read it?

[09:35:23.0000] <dglazkov>
annevk: it's just old, I need to update it to reflect all the latest changes. What I was pointing to is the callbacks.

[09:35:35.0000] <annevk>
sure, I got that

[09:35:47.0000] <annevk>
just wondering about the rest :)

[09:36:18.0000] <dglazkov>
the rest is handwavy right (for web devs), but is obsolete

[09:38:35.0000] <annevk>
dglazkov: so the spec missing right now is decorators?

[09:38:42.0000] <annevk>
dglazkov: everything else is available?

[09:38:58.0000] <dglazkov>
annevk: and packaging: <link rel=components>

[09:39:37.0000] <annevk>
ah yeah, some external stuff to complicate matters

[09:40:54.0000] <annevk>
hmm, why wouldn't <template><html> work?

[09:40:56.0000] <annevk>
that's too bad

[09:41:29.0000] <marcosc>
annevk: what's the deal with http://notifications.spec.whatwg.org/ ? dead?

[09:41:54.0000] <Ms2ger>
marcosc, being implemented, why?

[09:42:16.0000] <annevk>
marcosc: why do you assume it's dead given it's last updated two weeks ago?

[09:42:26.0000] <annevk>
marcosc: and hey, welcome to IRC!

[09:42:31.0000] <marcosc>
just wonderingâ¦ I'm looking at the Alarm stuff from SysApps and it seems that many of the use cases could be covered if Notifications were timed

[09:42:53.0000] <marcosc>
annevk: I was not sure, as the WG shut down

[09:43:32.0000] <marcosc>
annevk: so I was a bit confused

[09:43:47.0000] <annevk>
marcosc: WHATWG != W3C

[09:44:07.0000] <marcosc>
different logo, same Â£@$t :)

[09:44:08.0000] <annevk>
marcosc: also, last I heard W3C reopened with a chair from Apple, not sure who they lined up as editor

[09:44:33.0000] <annevk>
marcosc: not really, we don't close down WGs and our stuff can be forked

[09:44:38.0000] <marcosc>
annevk: ah, ok. I checked the mailing list which pointed me to the WHATWG version

[09:44:56.0000] <marcosc>
annevk: I know, just teasing :)

[09:45:21.0000] <marcosc>
annevk: ok, good to know that they are not dead.

[09:46:29.0000] <marcosc>
annevk: I'm wondering if the group discussed time-dependent notifications (reminders)? That would trigger many even after the use leaves the page.

[09:46:36.0000] <annevk>
marcosc: well dunno, the W3C WG might not be dead in theory, but in practice... In any event, the WHATWG stuff is being implemented afaik

[09:47:12.0000] <annevk>
marcosc: no, but that could be added

[09:47:40.0000] <annevk>
though someone should look at the security implications of that

[09:47:45.0000] <marcosc>
annevk: cool. I'll see if I can discuss the use cases a bit more with the SysApps group and bounce it over this way

[09:48:08.0000] <marcosc>
annevk: yeah, absolutely. There are a lot of issues with all this stuff

[09:48:34.0000] <marcosc>
Right now, I'm just trying to get the use cases straight

[09:49:03.0000] <annevk>
dglazkov: thanks for unrolling that :)

[09:49:18.0000] <annevk>
dglazkov: might have to wait with reviewing that until tomorrow

[09:49:52.0000] <dglazkov>
annevk: another person to ping about this is hayatoâco

[09:50:30.0000] <dglazkov>
he actually wrote most of this code in WebKit and contributed heavily to the algorithm. Also, check out the test suite. These guys have gone through the same exercise.

[09:50:53.0000] <dglazkov>
http://w3c-test.org/webapps/ShadowDOM/tests/submissions/Google/

[09:53:57.0000] <annevk>
ta

[10:32:23.0000] <volkmar>
win 16

[10:40:51.0000] <roidelapluie>
hello

[10:40:53.0000] <roidelapluie>
I am translating a call for paper webform from english to dutch

[10:41:02.0000] <roidelapluie>
I am looking for some dutch-speaking people to help me

[10:41:05.0000] <roidelapluie>
https://pad.rmll.info/7vvOtOvwBQ

[10:41:08.0000] <roidelapluie>
thank you in advance :)

[11:29:56.0000] <Hixie>
man i hate twitter. such a disaster of an interfce.

[11:40:02.0000] <annevk>
Hixie: Twitter is opt-in, even more so than bureaucracy ;-)

[11:42:05.0000] <Ms2ger>
Zing

[11:43:08.0000] <jgraham>
It would just improve the universe a little if everyone else opted out

[11:44:19.0000] <Hixie>
annevk: people keep asking me questiosn there

[11:44:22.0000] <Hixie>
annevk: so, not really

[11:44:48.0000] <Hixie>
annevk: ah, also, since you're here

[11:44:49.0000] <Ms2ger>
Well, people keep asking you to deal with bureaucracy too :)

[11:44:53.0000] <Hixie>
annevk: twitter reset the whatwg password

[11:45:00.0000] <Hixie>
annevk: because they got hacked or some nonsense

[11:45:43.0000] <Hixie>
annevk: also, re dom and html -- i think _all_ the web platform specs should be merged into one big spec. The only reason IMHO we have to split the specs is to make sure each part is only edited by one person, who has exclusive blame for any mistakes.

[11:46:21.0000] <Hixie>
Ms2ger: yeah but there is a higher net benefit to me answering people's questions than to anyone doing pointless bureaucracy.

[11:46:27.0000] <annevk>
Hixie: can you pm me the new password?

[11:46:36.0000] <annevk>
Hixie: or check it into GitHub

[11:47:16.0000] <Hixie>
checking it into github seems like a spectacularily bad idea :-P

[11:47:31.0000] <annevk>
Hixie: we have a private repo mostly for Twitter passwords

[11:47:39.0000] <Hixie>
ah ok

[11:47:53.0000] <Hixie>
yeah let me get it and i'll /msg you hold on

[11:48:28.0000] <annevk>
Hixie: as for specs, as long as they can be sensibly layered I think it makes some sense to do so

[11:48:49.0000] <annevk>
Hixie: once they get intertwined without clear separation it's bad

[11:51:24.0000] <Ms2ger>
/me kicks whatwg.org

[11:51:34.0000] <Ms2ger>
Anyone else having issues connection?

[11:51:37.0000] <Ms2ger>
connecting, even

[11:51:51.0000] <Hixie>
whatwg.org is working fine for me, but other things on the same host are giving me issues

[11:51:54.0000] <Hixie>
so i'm glad it's not just me

[11:52:24.0000] <Hixie>
load average: 0.08, 0.06, 0.22 so it's not that...

[11:52:38.0000] <Hixie>
half a gig of RAM free...

[11:52:47.0000] <Hixie>
what the heck

[11:55:45.0000] <Hixie>
Ms2ger: try now?

[11:56:21.0000] <Ms2ger>
Doesn't look better

[11:57:13.0000] <Hixie>
are you failing at dns, routing, or http?

[12:08:48.0000] <Ms2ger>
Hixie, fine now

[12:09:00.0000] <Hixie>
k

[12:09:05.0000] <Hixie>
no idea what that was about

[13:13:01.0000] <annevk>
Hixie: btw, http://wiki.whatwg.org/wiki/Fetch

[13:13:21.0000] <roc>
I'm unable to subscribe to public-html-media. Anyone know who I should contact to sort that out?

[13:14:31.0000] <annevk>
roc: iirc sysreqâwo, they're on W3C IRC too

[13:15:44.0000] <annevk>
roc: MikeSmith is responsible for the list

[13:16:34.0000] <annevk>
roc: maybe you should try again though or check your spam box? plenty of people managed to subscribe

[13:16:52.0000] <roc>
I've tried twice. The email may be dropped by some spam filter somewhere but I can't find it.

[13:18:54.0000] <annevk>
so I'm guessing MikeSmith is asleep for another couple of hours, so your best bet would probably be to ask on W3C IRC and failing that the email address

[13:24:10.0000] <darobin>
roc: lemme look into that

[13:24:26.0000] <roc>
let me just do a bit more digging :-)

[13:26:23.0000] <darobin>
roc: you're subscribed now

[13:26:32.0000] <roc>
ok

[13:26:34.0000] <roc>
thanks!!!

[13:26:52.0000] <darobin>
I'm not sure you should thank me for it, but hey, no problem ;)

[13:27:22.0000] <darobin>
and with this evil deed done, I'm off to bed

[13:36:05.0000] <annevk>
Hixie: my plan is to start working on that to somewhat contain the CORS / Fetch mess and make it more concrete how various URL schemes are actually dealt with

[14:05:43.0000] <annevk>
TabAtkins: interested in seeing if the URL parser can be rewritten too?

[14:06:03.0000] <annevk>
TabAtkins: it doesn't really have a separate tokenization step though, so I guess it might be tricky

[14:09:57.0000] <annevk>
http://lists.w3.org/Archives/Public/www-style/2013Feb/0278.html seems relevant to my interests

[14:13:19.0000] <Hixie>
annevk: k. if you could keep the spec hook API identical to what we have now that would be most awesome as it would make it easier to merge. The encoding and URL merges were quite painful. :-(

[14:15:18.0000] <annevk>
Hixie: I'll try to keep changes to a minimum, but I suspect there'll be some as move towards one algorithm

[14:15:25.0000] <annevk>
we*

[14:21:57.0000] <annevk>
"Television is generally a more expensive medium than music to produce due to the amount of labour involved"

[14:21:58.0000] <annevk>
uhuh

[14:22:28.0000] <annevk>
and fonts are different from graphics because they're special and such

[14:23:06.0000] <annevk>
each industry seems to have found their own unique reason why they need DRM as opposed to the rest of the planet

[14:29:01.0000] <Philip`>
/me wonders if annevk is disagreeing that TV is significantly more expensive, or just disagreeing that that's a relevant factor for DRM

[14:29:12.0000] <Hixie>
annevk: the argument would be more convincing if DRM had any effect on that

[14:29:35.0000] <Philip`>
(It seems TV can easily cost a million dollars per hour, and a large orchestra is probably a couple of orders of magnitude less than that)

[14:29:48.0000] <annevk>
Philip`: the latter

[14:36:09.0000] <Philip`>
Music has been broadcast over the airwaves to anybody who wants to listen, entirely free, for decades, and managed a commercially viable business model, so the internet isn't much of a change - but clearly TV is nothing like that

[14:37:50.0000] <Hixie>
true, nobody has ever broadcast TV to anyone with a receiver

[14:39:16.0000] <gsnedders>
/me notes there are plenty of places where TVs are not free, unlike radios

[14:44:36.0000] <Hixie>
gsnedders: wait, what? radios are free?

[14:47:21.0000] <gsnedders>
Hixie: Well, I meant in the sentence of the British TV license and similar around the world.

[14:48:20.0000] <Hixie>
well that can apply online as well (indeed, it does for iPlayer)

[14:48:40.0000] <Hixie>
not like Channel 5 gets that money

[14:59:12.0000] <Philip`>
/me wonders if you're allowed to watch iPlayer live if you've only got a black-and-white TV licence

[15:09:57.0000] <gsnedders>
Philip`: If you watch it on a black-and-white monitor, I think is the answer.

[15:17:40.0000] <Hixie>
hsivonen, abarth: ping https://www.w3.org/Bugs/Public/show_bug.cgi?id=17845

[15:17:47.0000] <abarth>
hi

[15:18:10.0000] <abarth>
reading

[15:19:58.0000] <abarth>
we haven't run into any compatibility problems with webkit's current behavior

[15:21:43.0000] <abarth>
I don't see any explicit code in the adoption agency implementation in webkit that mentions the form

[15:21:55.0000] <abarth>
but its possible that there's something happening implicitly in the DOM machinery

[15:22:18.0000] <abarth>
I'll copy the above into the bug

[15:31:02.0000] <Hixie>
abarth: pretty sure you've no special case code, you're doing what the spec says to do

[15:31:24.0000] <abarth>
ok, great.  :)

[15:31:41.0000] <abarth>
I generally prefer the spec to be stable, we we'll change to match the spec if it changes

[15:33:05.0000] <Hixie>
yeah

[15:33:17.0000] <Hixie>
wish microsoft would give us steps to reproduce

[15:33:41.0000] <Hixie>
/me curses anne for using "set" as the variable name for an ordered list in DOM


2013-02-13
[16:01:23.0000] <rillian>
setSet(getSet(jet.set))

[16:26:12.0000] <zewt>
gar, photoshop is another one of those things where each update fixes some stuff you really need fixed, while simultaneously breaking a bunch of things in horrible ways, making every upgrade a nightmare

[16:28:35.0000] <zewt>
cs6 removed the zoom panel, so now I can't find any way to quickly zoom to 50%, which i have to do constantly due to retina stuff

[16:47:22.0000] <GPHemsley>
zewt: It seems that's how you do things nowadays.

[16:48:07.0000] <zewt>
indeed

[16:48:18.0000] <zewt>
gotta introduce new bugs so you can sell n+1

[16:48:43.0000] <GPHemsley>
that theory doesn't really work for free software/websites ;)

[16:49:04.0000] <zewt>
doesn't make it seem any less so for commercial ones :P

[16:49:26.0000] <GPHemsley>
I think it's more that people forget that you don't need to fix things that ain't broke

[16:49:44.0000] <zewt>
seriously, i can't figure out how to zoom to 50% in cs6

[16:49:58.0000] <GPHemsley>
well, that I can't help you with :P

[16:50:00.0000] <zewt>
did they really go "nobody needs to do that!"

[16:50:18.0000] <GPHemsley>
is there a menu option that'll point you to a keyboard shortcut or something?

[16:50:22.0000] <GPHemsley>
</obvious suggestions>

[16:50:36.0000] <zewt>
can't even find it in the menu, heh

[16:50:50.0000] <GPHemsley>
aha!

[16:50:53.0000] <zewt>
(i'm not really expecting to find a solution in here :)

[16:50:55.0000] <GPHemsley>
no more zoom!

[16:51:28.0000] <GPHemsley>
/me shrugs

[16:51:29.0000] <zewt>
(though I suspect there are more than a few people in here whose jobs involve translating PSDs to websites, so perhaps there are at least people here who share my pain)

[16:52:10.0000] <GPHemsley>
maybe give GIMP a shot? there's a native Mac version now

[16:52:28.0000] <zewt>
"now you have two problems"

[16:52:33.0000] <GPHemsley>
heh

[16:52:59.0000] <GPHemsley>
I have to admit, I'm not a photo editing expert

[16:53:07.0000] <jsbell>
They ditched the X11 requirement so focus now mostly behaves, but it's still barely a Mac app. :P

[16:53:26.0000] <zewt>
every time i've tried gimp, it feels very ... 90s

[16:53:36.0000] <GPHemsley>
it's now early '00s ;)

[16:53:39.0000] <zewt>
granted it's been several years (even if I learn to use it, the artists giving me assets won't)

[16:54:26.0000] <GPHemsley>
actually, maybe even late '00s

[16:54:32.0000] <GPHemsley>
(I forget what year it is sometimes)

[16:54:55.0000] <zewt>
is it still a mess of separate windows, or do they finally have a usable docking ui?

[16:55:15.0000] <GPHemsley>
there's even a single-window version!

[16:55:26.0000] <GPHemsley>
and by "version" I mean, a simple menu click

[16:55:53.0000] <GPHemsley>
it still has a few kinks, but it's leaps ahead of where it used to be

[16:56:08.0000] <GPHemsley>
(as in, I can actually stand to use it now)

[16:56:21.0000] <GPHemsley>
but again, not a photo editing expert

[16:59:24.0000] <zewt>
i don't do much photo editing, i use ps for ui work

[17:02:01.0000] <GPHemsley>
s/photo editor/graphic designer/

[17:02:24.0000] <GPHemsley>
oh, uh

[17:02:31.0000] <GPHemsley>
s/photo editing/graphic design/

[17:10:10.0000] <zewt>
wonder if webkit optimizes the case of opacity: 0; pointer-events: none; position: absolute; or if it's useful to listen for transitionend and set display: none explicitly

[17:10:22.0000] <esprehn>
zewt: optimizes how?

[17:11:05.0000] <zewt>
if i have a lot of them in the same place, eg. blocks of text that i'm fading across, whether it's beneficial to explicitly remove it from rendering or if it figures that out on its own

[17:12:02.0000] <zewt>
would be easier if there was a :not-animating selector, so i don't have to jump event hoops

[17:12:27.0000] <zewt>
guess i can just stick a few thousand of them on top of one another and test it

[17:14:01.0000] <jamesr>
opacity: 0 is magic, but it's not as magic as display:none

[17:14:03.0000] <jamesr>
(in WebKit)

[17:14:06.0000] <esprehn>
opacity: 0 is skipped for painting, p-e: none is skipped for hit testing

[17:14:50.0000] <esprehn>
for some definition of skipped. If you have thousands of these things we still check every one for pointer-events to see if we could have hit it since each one has a layer and we walk the while layer tree

[17:14:59.0000] <esprehn>
position: absolute doesn't matter

[17:15:08.0000] <jamesr>
display:none takes them out of the box tree completely

[17:15:14.0000] <esprehn>
(in this case, since you already have a layer from opacity)

[17:15:21.0000] <jamesr>
at the cost of having to regenerate them when display goes back to non-none

[17:16:10.0000] <esprehn>
whole layer tree*

[17:23:22.0000] <esprehn>
zewt: if you need better perf you should display: none them. we still need to do layout on the opacity: 0 things

[17:23:57.0000] <esprehn>
I guess we could do it lazily, but no one has taken the time to implement that kind of optimization

[17:24:10.0000] <zewt>
does that tend to have a nontrivial cost, even when the box isn't changing and has no effect on other content?

[17:24:24.0000] <esprehn>
not usually

[17:24:49.0000] <zewt>
i'll probably just need to benchmark it and see if it'll matter (this isn't a huge page, but it does have to run smoothly on mobile)

[17:28:25.0000] <jamesr>
data >> guesses

[17:28:49.0000] <zewt>
yep

[17:29:03.0000] <zewt>
does help to have a picture of what's actually going on, too, of course

[18:04:20.0000] <miketaylr>
back

[18:11:59.0000] <miketaylr>
>_<

[18:12:18.0000] <miketaylr>
(no thanks to my clients spammy auto-back in every channel message....)

[18:15:03.0000] <zewt>
photoshop also taking a horrifyling google-esque ui turn, with a big list that now has no separating lines to anchor it, making it headachy

[23:02:01.0000] <annevk>
Hixie: thanks for responding so quickly!

[23:04:46.0000] <annevk>
Hixie: I take that back, I see you cursed me last night :p

[23:30:13.0000] <annevk>
Hixie: I

[23:30:42.0000] <annevk>
Hixie: assuming this is about DOMTokenList, I picked set rather than ordered list, because the items are guaranteed to be unique with the new definitions

[00:13:06.0000] <MikeSmith>
well well well seems it's official http://my.opera.com/ODIN/blog/300-million-users-and-move-to-webkit

[00:19:09.0000] <heycam>
well there you go

[00:38:08.0000] <jamesr_>
heycam: did you see that thread about RAF's WebIDL use?

[00:38:21.0000] <heycam>
jamesr_, oh yes, sorry I'll get to that

[00:38:23.0000] <jamesr_>
need to s/something/partial interface/

[00:38:26.0000] <jamesr_>
great! thanks

[00:47:14.0000] <heycam>
jamesr, fixed

[00:47:27.0000] <MikeSmith>
[[Wium Lie says that it is jumping aboard at the right time, as âthe industry moves to make it the de facto Web rendering engineâ.]]

[00:47:42.0000] <jamesr_>
heycam: cool! thanks

[00:47:56.0000] <MikeSmith>
call an exorcist, that doesn't sound like the Haakon I know

[00:48:25.0000] <heycam>
how does that quote gel with the "We hope to work with you to further strengthen the open web that we

[00:48:25.0000] <heycam>
all believe in" quote from the webkit-dev mail

[00:48:59.0000] <MikeSmith>
heycam: I'm pretty sure Haakon didn't write that message either

[00:49:17.0000] <MikeSmith>
seriously

[00:51:22.0000] <jgraham>
MikeSmith: Where is that quote from?

[00:51:36.0000] <MikeSmith>
hey jgraham

[00:51:39.0000] <MikeSmith>
from http://thenextweb.com/insider/2013/02/13/opera-300-million-users-webkit/

[00:55:02.0000] <MikeSmith>
so I've yet to hear anything about what the plans are for the Presto code. What happens? It just .. disappears?

[00:55:48.0000] <MikeSmith>
I mean outside of maintenance on it for patche updates to existing products (for security fixes or whatever)

[00:56:22.0000] <MikeSmith>
it seems like it could be open-sourced, eventually at least

[00:56:26.0000] <MikeSmith>
and should be

[00:58:33.0000] <jgraham>
MikeSmith: I believe that Presto won't be open sourced

[00:58:48.0000] <MikeSmith>
ok

[00:58:53.0000] <MikeSmith>
that's too bad

[00:59:00.0000] <sangwhan>
No, condemned folks (read: me) are destined to work on it until nobody else wants it. It won't be open sourced.

[00:59:17.0000] <sangwhan>
...as in, Presto.

[00:59:59.0000] <jgraham>
The reasoning is that doing a big code dump with no documentation or people tasked to work on it isn't helpful to anyone

[01:00:34.0000] <MikeSmith>
I suppose so

[01:01:36.0000] <MikeSmith>
god Haavard is nauseating

[01:02:03.0000] <MikeSmith>
I wish I had some screen to avoid ever seeing his tweets

[01:02:15.0000] <sangwhan>
MikeSmith: Unfollow him?

[01:02:26.0000] <MikeSmith>
I don't follow him

[01:02:42.0000] <doublec>
how are you seeing his tweets?

[01:03:14.0000] <MikeSmith>
I follow other people whose tweets he replies to, in conversations

[01:04:24.0000] <doublec>
oh right. need better twitter clients to manage conversions and 'kill files'.

[01:04:40.0000] <MikeSmith>
I really get the sense that dude would do any kind of 180 switch that might be required by his masters, in order to remain cheerleader #1

[01:05:07.0000] <doublec>
I wonder if there are any

[01:06:18.0000] <sangwhan>
Greasemonkey to the rescue

[01:06:25.0000] <MikeSmith>
doublec: none that I know of

[01:07:56.0000] <MikeSmith>
hmm I guess if you block somebody on twitter you never see their tweets

[01:12:03.0000] <MikeSmith>
anyway I guess he's just doing his job, like the rest of us

[01:17:07.0000] <roc>
I dunno, he could probably find a job that isn't nauseating. Most of us have that luxury

[01:17:19.0000] <roc>
whether we choose to exercise it or not

[01:26:03.0000] <roc>
"Our first patch to WebKit (so for all WK browsers) is to bring CSS multi-col to Presto levels http://bit.ly/14RHGux" ... and the patch is like half a line. OK that is dumb.

[01:35:17.0000] <doublec>
It'll suck if their first ever patch ends up with a huge comment discussion and an r-

[01:35:41.0000] <doublec>
at least a small one is safer in that regard

[01:36:55.0000] <roc>
I guess so

[01:38:34.0000] <gsnedders>
And it's probably easier to post something small, eh.

[01:42:19.0000] <roc>
the tweet drastically oversold it, is all.

[01:42:56.0000] <darobin>
is the Presto code going anywhere?

[01:43:09.0000] <roc>
yes, into the void

[01:44:45.0000] <doublec>
sad. Where's wikileaks for abandoned code when you need it.

[01:45:16.0000] <Philip`>
Github would probably work well enough for that

[01:45:56.0000] <darobin>
it would be a crying shame for it to just vanish :(

[01:48:19.0000] <odinho>
:-)

[02:02:50.0000] <MikeSmith>
...and just when I think Haarvard couldn't say anything more obnoxious

[02:02:55.0000] <MikeSmith>
what a knob

[02:03:37.0000] <MikeSmith>
and this one somebody I follow retweeted

[02:03:56.0000] <darobin>
MikeSmith: where?

[02:04:21.0000] <MikeSmith>
https://twitter.com/opvard/status/301624575882575872

[02:04:50.0000] <MikeSmith>
he "predicts" .. Now he's a sage

[02:05:40.0000] <MikeSmith>
he should write a book, "The Wise Musings of Haavard"

[02:08:21.0000] <roc>
tweet this back at him: http://robert.ocallahan.org/2013/02/and-then-there-were-three.html

[02:10:13.0000] <darobin>
what roc said

[02:12:57.0000] <MikeSmith>
thanks roc

[02:12:59.0000] <MikeSmith>
https://twitter.com/sideshowbarker/status/301635273291341825

[02:13:21.0000] <roc>
thanks

[02:20:52.0000] <annevk>
MikeSmith: kind of an odd message to come from howcome indeed

[02:21:28.0000] <annevk>
I never really liked Jon, but in hindsight it's pretty clear that replacing him with a sales guy was the wrong move

[02:22:52.0000] <roc>
it may well turn out to be the best thing for Opera-the-company

[02:24:37.0000] <MikeSmith>
roc: maybe so, for what's left of it

[02:24:51.0000] <MikeSmith>
and I mean that un-bitterly

[02:24:57.0000] <asmodai>
/me grins

[02:25:10.0000] <MikeSmith>
it's just going to be a different company

[02:25:31.0000] <MikeSmith>
already has become a different one really

[02:26:23.0000] <MikeSmith>
what really made everything go to hell was when Thomas Ford left :)

[02:26:26.0000] <MikeSmith>
that was the sign

[02:26:44.0000] <asmodai>
So is there agreement that one rendering engine will be beneficial in the long run? ;)

[02:26:58.0000] <asmodai>
(assuming MS and/or Mozilla would ever switch)

[02:27:33.0000] <roc>
did you read my post?

[02:27:54.0000] <asmodai>
roc: No sorry, is it higher up in the chatlog?

[02:28:02.0000] <roc>
http://robert.ocallahan.org/2013/02/and-then-there-were-three.html

[02:28:33.0000] <MikeSmith>
annevk: I never really disliked Jon but .. he was a real person and he had his heart in the right place. But I guess that's not what a company wants in a CEO. It wants Steve Jobs.

[02:28:49.0000] <asmodai>
roc: Fair points.

[02:30:57.0000] <MikeSmith>
along with roc's post, https://plus.google.com/116237864387312784020/posts/iRRPVaaPQvo from jaffathecake

[02:31:37.0000] <Stevef_>
roc: thanks for the post makes issues clear for those such as myself who have no idea

[02:35:11.0000] <asmodai>
MikeSmith: domo

[02:36:01.0000] <asmodai>
Maybe Opera can show Chrome how to do proper anti-aliased fonts with Webkit :P

[02:52:16.0000] <MikeSmith>
On the plus side, I guess Opera devs are all gonna get new machines to build on.

[02:53:08.0000] <MikeSmith>
Because they're going to need them. With more RAM and big(ger) SSDs.

[02:53:19.0000] <annevk>
MikeSmith: trololol

[02:53:48.0000] <MikeSmith>
sorry for party rocking

[02:56:17.0000] <annevk>
This makes Firefox OS harder, makes Windows Phone harder, and worst case will further enshrine WebKit bugs as part of the web platform, complicating projects for new browser engines such as Servo

[02:57:06.0000] <odinho>
MikeSmith: We did get it. :-)

[02:57:12.0000] <odinho>
Reeeaaally powerful

[02:57:24.0000] <odinho>
/me happy

[02:57:28.0000] <MikeSmith>
annevk: yeah

[02:59:01.0000] <MikeSmith>
odinho: and you can look forward to a year from now you'll probably get a new one that's twice as powerful. Because you'll need it.

[02:59:35.0000] <MikeSmith>
du --si on my Chromium+WebKit build directory = 26GB. The WebKit part is only 8GB of that, and 1.4GB of other third-party stuff.

[02:59:55.0000] <MikeSmith>
implied scare quotes around the word /only/

[03:00:30.0000] <odinho>
It's no secret that the code bases are very different. :-)

[03:00:41.0000] <annevk>
Servo is probably the coolest thing right now when it comes to browsers and web platform architecture.

[03:00:59.0000] <annevk>
At least from the browser projects that are public.

[03:01:22.0000] <annevk>
odinho: what happens to the Presto code?

[03:02:05.0000] <MikeSmith>
meanwhile in the tab next door, all of Nightly in my built mozilla-central directory is 4.9GB

[03:06:43.0000] <MikeSmith>
so does this mean Opera is (eventually) going to be added a new port in the WebKit trunk?

[03:12:22.0000] <sangwhan>
annevk: Some people will continue to work on it, but it won't be open sourced from what I heard so far

[03:12:52.0000] <annevk>
sangwhan: ta

[03:14:15.0000] <sangwhan>
/me is not particularly excited about several hour long compile runs

[03:16:32.0000] <asmodai>
http://www.xkcd.com/303/ <-- appropriate

[03:21:35.0000] <sangwhan>
https://dl.dropbox.com/u/7479257/Photo%20Feb%2013%2C%2020%2020%2018.jpg <-- way ahead of you

[03:22:40.0000] <jgraham>
In the days of CVS, someone had printed that out and s/compiling/waiting for locks in DOM/ or somesuch

[03:23:24.0000] <sangwhan>
and/or tagging/branching

[03:24:03.0000] <annevk>
slightlyoff: http://dev.w3.org/csswg/css3-fonts/#font-load-events

[03:24:10.0000] <annevk>
slightlyoff: we need to get Future out there

[03:24:27.0000] <annevk>
slightlyoff: how is that going to work with TC39?

[03:24:43.0000] <annevk>
slightlyoff: I can add it to DOM any day, but I'd like to not change it around to much

[03:31:37.0000] <rniwa>
roc: sadly, webkit is new ie6 :/

[03:31:58.0000] <roc>
that's not fair

[03:32:08.0000] <rniwa>
roc: i know :(

[03:32:19.0000] <rniwa>
roc: just as we thought we got rid of ie6...

[03:32:21.0000] <roc>
at least it's open source, and good

[03:32:44.0000] <rniwa>
roc: yeah, at least you can read the code.

[03:32:52.0000] <roc>
and contribute. You've got a good community.

[03:33:00.0000] <rniwa>
roc: right.

[03:33:13.0000] <rniwa>
roc: but now that webkit is really popular on mobile

[03:33:24.0000] <roc>
don't be sad. You've got job security :-)

[03:33:46.0000] <rniwa>
roc: job security is good and i'm excited that webkit is getting more momentum.

[03:34:36.0000] <rniwa>
roc: but with great market share, comes great responsibility

[03:35:06.0000] <roc>
indeed

[03:36:23.0000] <rniwa>
roc: but really, the web has gotten to the point where writing a browser from scratch is not an option.

[03:36:53.0000] <darobin>
ie6 was good when it came out, too

[03:36:54.0000] <roc>
it's certainly very difficult, and that is a major problem

[03:36:59.0000] <rniwa>
roc: yeah.

[03:37:25.0000] <darobin>
well, this ups the incentive to do it

[03:37:25.0000] <roc>
darobin: it was good compared to the competition, but it wasn't as close to the standards of its day as we are to ours

[03:37:26.0000] <rniwa>
roc: even just parsing html properly involves significant undertaking.

[03:37:48.0000] <darobin>
roc: sure, but to be fair to them the standards of back then were pretty damn hard to implement in that they were largely underspecified

[03:38:15.0000] <darobin>
I wonder what's the first component you write if you create a new browser

[03:38:20.0000] <roc>
that didn't help, but they weren't even close to the parts that were specified.

[03:38:33.0000] <darobin>
I'm not trying to defend ie6

[03:39:09.0000] <roc>
JS engine, DOM bindings and a basic DOM I think. Check out Servo :-)

[03:39:15.0000] <darobin>
just saying that it wouldn't be remembered in infamy if it hadn't stayed around for a decade

[03:39:37.0000] <darobin>
oh, I was assuming one would have the JS engine

[03:39:55.0000] <rniwa>
darobin: js engine & parser & DOM

[03:39:55.0000] <darobin>
yeah, Servo does look cool indeed

[03:40:06.0000] <darobin>
those parts are (relatively) easy

[03:40:26.0000] <rniwa>
not too sure if i like the idea of using an entirely new programming language for it thoughâ¦

[03:40:59.0000] <darobin>
if I were to write a browser, I'd do it in JS ;-)

[03:43:02.0000] <wilhelm>
Watching this slow decline to irrelevance has been heartbreaking. There have been so many stupid decisions done by Opera management over the years. This switch is merely the inevitable nail in the coffin.

[03:43:29.0000] <wilhelm>
You reap what you sow. )c:

[03:43:56.0000] <wilhelm>
I'm glad I jumped ship when I did. /c:

[03:45:54.0000] <rniwa>
wilhelm: it's sad because Opera does have top-notch good engineers.

[03:46:27.0000] <rniwa>
wilhelm: but then running any company, let alone a company that sells browser, is really hard.

[03:46:49.0000] <wilhelm>
rniwa: Yes. Although the last two rounds of layoffs have more than decimated the team.

[03:47:08.0000] <wilhelm>
And morale is at rock bottom.

[03:48:23.0000] <wilhelm>
(I'm just observing this from the outside now.)

[03:48:35.0000] <MikeSmith>
rniwa: especially when most all of the company's (or organization's...) revenue comes from the browser

[03:50:00.0000] <MikeSmith>
wilhelm: you make it sound too grim man

[03:51:55.0000] <wilhelm>
MikeSmith: It is pretty grim. On the positive side - now is a good time to hire great engineers. (c;

[03:52:06.0000] <wilhelm>
/me has done so already.

[03:59:22.0000] <darobin>
business seems brisk wilhelm :)

[04:00:06.0000] <wilhelm>
I can't complain. (c:

[04:00:08.0000] <darobin>
I know several companies who've been looking for good browser engineers for a while, I know they're happy about this

[04:04:02.0000] <annevk>
So I guess I messed up the setup of GitHub.app this time around. Why are https://github.com/whatwg/url/commit/b4598abb5c83d4f394344ead62fa5200d1158f45 and such not attributed to me?

[04:04:36.0000] <darobin>
annevk: it says "Anne van Kesteren authored a minute ago"

[04:05:04.0000] <annevk>
darobin: contrast with https://github.com/whatwg/url/commit/724f4989fef387efeefe7ed0e8d7490b60ea3abf

[04:05:05.0000] <darobin>
is there another Anne van Kesteren

[04:05:08.0000] <jgraham>
It looks like you maybe didn't set your emaila ddress

[04:05:25.0000] <darobin>
ah, interesting

[04:06:06.0000] <jgraham>
(dunno how you do that in github.app ofc but on the command line it is something like git config global.email)

[04:06:16.0000] <jgraham>
(that is from memory though and so wrong)

[04:06:16.0000] <Raymondo>
wilhelm: what should opera have done differently as a company?

[04:06:52.0000] <darobin>
make money

[04:07:06.0000] <Raymondo>
darobin: like everyone else?

[04:07:23.0000] <darobin>
they have a goldmine with Mini that they haven't mined

[04:07:48.0000] <darobin>
they also had a chance to build up the Opera Platform about 8 years ago

[04:08:09.0000] <darobin>
they could've been in the OS game, and made huge inroads

[04:08:15.0000] <annevk>
jgraham: .gitconfig has the right email

[04:08:17.0000] <darobin>
but they dropped the ball completely and on purpose

[04:08:30.0000] <darobin>
annevk: was the previous commit from the app as well?

[04:08:37.0000] <annevk>
darobin: yeah

[04:08:45.0000] <annevk>
darobin: different laptop though

[04:08:54.0000] <annevk>
and not restored from backup or anything

[04:09:03.0000] <darobin>
ah, so maybe different setup

[04:09:51.0000] <annevk>
I suspect so, just wondering what it is, as GitHub.app does require you to login and all so they bloody well know!

[04:10:42.0000] <jgraham>
But are the email addresses on the commits right?

[04:11:03.0000] <jgraham>
I don't really see what it could use other than the author information on the commit

[04:11:35.0000] <wilhelm>
Raymondo: A lot. A brief summary would be: 1) Focus. 2) Focus. 3) Avoid all the friction that kills productivity.

[04:11:43.0000] <darobin>
this seems like a bug to me

[04:11:48.0000] <darobin>
maybe you switch to hg

[04:12:17.0000] <darobin>
ah â no Ms2ger. Sad.

[04:13:26.0000] <Raymondo>
wilhelm: interesting that you and darobin seem to be saying opposite things. 'make an os, develop your non-browser proxy service' vs. 'focus (on the desktop browser?)'

[04:13:48.0000] <darobin>
Raymondo: wilhelm said focus, he didn't say on what

[04:13:54.0000] <wilhelm>
Raymondo: They are not neccessarily opposites.

[04:14:08.0000] <darobin>
I agree with him â pick a project, focus on it

[04:14:18.0000] <darobin>
don't ship stuff like a web server in your browser

[04:16:05.0000] <wilhelm>
Raymondo: Opera tried to be all things for all people for too long. While we (heh, I still say "we") wasted time on getting the browser engine to compile on the most braindead compilers out there, the competition shipped.

[04:16:23.0000] <annevk>
jgraham: how do I get the raw commits?

[04:16:46.0000] <MikeSmith>
well, Opera takes chances, including some nutty ones. That's a big part of what has made it the great thing it is. I hope it keeps taking some crazy chances.

[04:17:24.0000] <annevk>
I guess I'll try once more

[04:17:56.0000] <Raymondo>
agreed. opera's leaps weren't always successful but were always interesting and often influencial

[04:18:19.0000] <Raymondo>
must not talk in past tense

[04:18:26.0000] <MikeSmith>
Opera was the first browser project to ship a real full browser preinstalled on a mobile phone (here in Japan). At a time when others thought that was just plain not practical to do.

[04:19:57.0000] <MikeSmith>
And Opera shipped a browser on the original Nintendo DS. Which had the computing power of a sewing machine. 66MHz CPU!

[04:20:29.0000] <roc>
haha

[04:20:38.0000] <roc>
blog commenter claims "Opera isn't a big company like Mozilla"

[04:20:50.0000] <rniwa>
roc: lol.

[04:21:03.0000] <roc>
(Opera has more employees than Mozilla, FWIW)

[04:21:23.0000] <wilhelm>
MikeSmith: Yep. I remember shipping a full browser on Qtopia in 2004. It was amazing that thing even worked.

[04:21:25.0000] <rniwa>
roc: for starters, mozilla isn't a company.

[04:21:26.0000] <wilhelm>
But it did.

[04:21:56.0000] <MikeSmith>
roc: you need to count productive employees at Opera. Then the count is closer, I think :)

[04:22:05.0000] <roc>
don't be so sure :-)

[04:22:15.0000] <MikeSmith>
touche

[04:22:22.0000] <rniwa>
soâ¦ if you're in the business of making a web browser, where do you compete?

[04:22:38.0000] <rniwa>
it seems like all web browsers are going to implement every single API ever invented on the web

[04:22:47.0000] <MikeSmith>
rniwa: user experience

[04:22:52.0000] <rniwa>
with a flavor of various bugs

[04:22:53.0000] <MikeSmith>
simple

[04:24:32.0000] <MikeSmith>
btw I guess Opera did most of the really crazy stuff in the days when Jon was running the show, and I guess for better or worse those days have already been long gone for quite a while now.

[04:25:44.0000] <wilhelm>
Yes.

[04:28:28.0000] <smaug____>
rniwa: hopefully not every single API.

[04:28:37.0000] <smaug____>
need to fight against bad APIs

[04:29:02.0000] <rniwa>
smaug____: I wanna delete them all.

[04:29:16.0000] <smaug____>
rniwa: yes, you could start with Filesystem API ;)

[04:29:46.0000] <smaug____>
/me is trying to kill MutationEvents

[04:29:48.0000] <rniwa>
smaug____: fwiw, we've deleted web intents

[04:29:59.0000] <rniwa>
smaug____: and safari has never shipped file system API

[04:30:08.0000] <rniwa>
smaug____: chrome might be the only browser that ships filesystem api

[04:30:17.0000] <roc>
that didn't stop Mega from using it :-(

[04:31:48.0000] <rniwa>
smaug____, roc: http://caniuse.com/filesystem

[04:32:22.0000] <rniwa>
you might as well as consider it as a proprietary api...

[04:33:20.0000] <roc>
like I said...

[04:33:43.0000] <rniwa>
roc, smaug____: didn't Microsoft & Mozilla publicly stated that they won't implement the file system API as is?

[04:33:45.0000] <smaug____>
random note, don't try to open emscripten created huge .js file in a syntax highlighting editor

[04:33:59.0000] <smaug____>
rniwa: and Apple and Opera, pretty much

[04:34:05.0000] <rniwa>
smaug____: yeah.

[04:34:06.0000] <smaug____>
the old Opera

[04:34:17.0000] <roc>
oh yeah

[04:34:22.0000] <roc>
Opera supports Filesystem API now!

[04:34:25.0000] <rniwa>
smaug____: i don't think opera has to ship file system api even if they used webkit/chromium

[04:34:48.0000] <roc>
why wouldn't they, though? There's no incentive to diverge

[04:35:10.0000] <roc>
rniwa: all these things are true, yet Mega used the API anyway and dissed other browsers :-)

[04:35:24.0000] <roc>
well, until we sent a man around to their office to sort them out

[04:35:52.0000] <rniwa>
roc: it doesn't really matter though

[04:36:11.0000] <rniwa>
roc: there will always be some websites that use proprietary apis

[04:36:14.0000] <rniwa>
it's their choice

[04:36:18.0000] <doublec>
heh, I wonder if we'll see Opera's entry changed on Mega

[04:37:06.0000] <roc>
rniwa: it does matter when sites like Mega think other browsers should be implementing those APIs

[04:37:17.0000] <roc>
note: doublec was that man

[04:38:37.0000] <rniwa>
roc: is Mega that popular?

[04:38:43.0000] <roc>
yes

[04:38:55.0000] <rniwa>
roc: huh, i didn't know that.

[04:38:55.0000] <roc>
well, it had a spurt of popularity at least

[04:38:59.0000] <roc>
it's new

[04:43:12.0000] <doublec>
it's still in the top 200 or so of web sites iirc

[04:43:48.0000] <doublec>
so it sucks when they say "Use Chrome, other browsers are all outdated"

[04:44:47.0000] <MikeSmith>
I like the image of doublec being the man you send around to offices to sort people out. It makes hime sounds pretty intimidating.

[04:44:54.0000] <doublec>
rniwa: technically I'm not sure you'd call their use of the filesystem api proprietary. it was a w3 draft spec, implemented by chrome and there's even an o'reilly book about it.

[04:44:57.0000] <MikeSmith>
doublec the Enforcer

[04:45:01.0000] <doublec>
haha

[04:45:27.0000] <rniwa>
doublec: it seems like Mega lets you select file or drag & drop it?

[04:45:44.0000] <doublec>
rniwa: yes. You can select directories and it will upload that.

[04:45:55.0000] <smaug____>
doublec: doesn't matter. It is still google only API

[04:46:10.0000] <smaug____>
draft spec somewhere in w3 doesn't mean much

[04:46:24.0000] <doublec>
I don't think it's much different from people that were using Mozilla's audio api to be honest

[04:46:26.0000] <rniwa>
smaug____: yup.

[04:46:51.0000] <rniwa>
it's somewhat dubious to claim that API is open & standard just because you've sent it to w3c.

[04:46:59.0000] <doublec>
they just lost the bet that others would implement the spec

[04:47:05.0000] <smaug____>
problem is to know whether a draft spec is something everyone agrees (like DOM and such) or just effectively a proposal

[04:47:14.0000] <doublec>
right

[04:47:39.0000] <rniwa>
right.

[04:47:51.0000] <doublec>
that said, the Mega people were very open and friendly and are doing a indexeddb version to replace the filesystem api usage where they can for non-chrome browsres.

[04:47:58.0000] <rniwa>
alsoâ¦ it could be a proposal if you can modify them to address other vendors' concenrs

[04:47:59.0000] <rniwa>


[04:48:02.0000] <rniwa>
concerns*

[04:48:49.0000] <doublec>
of course, indexeddb is a working draft too I guess :)

[04:49:13.0000] <smaug____>
yes, but implemented by everyone

[04:51:00.0000] <rniwa>
smaug____: and that's a big difference.

[04:57:06.0000] <MikeSmith>
interesting... David Hasather tweet "The switch to WebKit unfortunately means that Opera Dragonfly is no more." now deleted

[04:57:46.0000] <MikeSmith>
interesting because he being one who would know

[04:57:57.0000] <hasather>
MikeSmith: ;)

[04:58:10.0000] <MikeSmith>
hey man :)

[04:58:35.0000] <MikeSmith>
so I imagine you got asked (told) to delete that

[04:58:47.0000] <hasather>
yep

[04:58:57.0000] <smaug____>
too late ;)

[04:58:59.0000] <MikeSmith>
yeah I figured

[04:59:02.0000] <MikeSmith>
sigh

[04:59:04.0000] <hasather>
:D

[05:00:19.0000] <MikeSmith>
hasather: they gotta figure it would sorta be obvious, about the future for Dragonfly

[05:00:31.0000] <MikeSmith>
anyway you did some great work on that

[05:00:43.0000] <MikeSmith>
glad that part is OSS at least :)

[05:00:52.0000] <hasather>
MikeSmith: it's pretty tightly coupled to Presto, so yea. And thanks!

[05:07:38.0000] <MikeSmith>
heh, leave it to Chris: "I will miss the Douglas Crockford of browsers" http://christianheilmann.com/2013/02/13/i-will-miss-the-douglas-crockford-of-browsers/

[05:12:51.0000] <jgraham>
annevk: git log on the commandline

[05:13:22.0000] <MikeSmith>
"Opera was my linting tool"

[05:13:29.0000] <jgraham>
Your username/email in the earlier commits was annevk <annevkâan> and its now Anne van Kesteren <annevkâ5l>

[05:13:55.0000] <annevk>
jgraham: brilliant

[05:14:22.0000] <annevk>
jgraham: so I guess the key setup went less than okay

[05:14:54.0000] <jgraham>
annevk: Well it should just be the local git config

[05:15:22.0000] <jgraham>
$ git config --global user.name

[05:15:23.0000] <jgraham>
and

[05:15:33.0000] <jgraham>
$ git config --global user.email

[05:16:17.0000] <annevk>
jgraham: that gives the right results

[05:21:04.0000] <jgraham>
Cool

[05:23:18.0000] <annevk>
well no, because the commits go wrong :)

[05:23:18.0000] <darobin>
annevk: to look at raw commits, you can try git show deadbeef...

[05:23:22.0000] <annevk>
but I'll try again

[05:23:31.0000] <darobin>
(I think there's a --pretty=raw option to get it more raw)

[05:24:46.0000] <darobin>
note that the committer and author can be different, so that might be the source of your weird issue â GH.app has you log in as committer, but you may have a different author

[05:25:48.0000] <Philip`>
Given that one of the goals of HTML5 was to encourage competition by documenting the platform well enough to let new people build a new browser engine from scratch without it being prohibitively expensive, and now Opera has decided it's prohibitively expensive even though they've already got a mostly-working engine, is that goal anything other than a pointless fantasy?

[05:29:42.0000] <darobin>
Philip`: I don't know, let's build a browser from scratch and see if it works :)

[05:34:12.0000] <slightlyoff>
annevk: oy, yeah, that font load thing is pretty terrible

[05:40:55.0000] <darobin>
fantasai: can you forward your ruby comments to public-i18n-cjk please?

[05:44:48.0000] <MikeSmith>
Let's do darobin idea about writing a browser engine completely in JavaScript. And then let's use that to build an OS...

[05:45:03.0000] <darobin>
MikeSmith: that's what I have in mind :)

[05:45:13.0000] <darobin>
I just need to find someone crazy enough to pay me for it

[05:45:22.0000] <darobin>
the Inception Engine

[05:46:07.0000] <MikeSmith>
Jon von Tetzschner has money, and he's crazy too

[05:46:17.0000] <MikeSmith>
so, perfect combination

[05:46:26.0000] <darobin>
sounds like a plan

[05:46:29.0000] <darobin>
I already did ruby: https://github.com/darobin/inception/blob/master/lib/elements/ruby.js

[05:46:40.0000] <darobin>
so the rest is just a SMOP

[05:47:50.0000] <darobin>
or we could call it Amaya.JS

[05:48:11.0000] <darobin>
the EU is always worrying about there being enough competition in the browser space, maybe they could grant us a few millions

[05:48:59.0000] <MikeSmith>
oh man naming any new Web thing Amaya and having it stick, that'd be fun

[05:50:05.0000] <MikeSmith>
anyway, I think you're nuts enough to even be working on Servo. And writing stuff in Rust. And even _liking_ to write stuff in Rust.

[05:50:24.0000] <jgraham>
Javascript is nice, but a browser written in Javascript seems unlikely to be fast enough for anyone to actually use

[05:50:25.0000] <MikeSmith>
too bad there is only one of you

[05:50:59.0000] <darobin>
jgraham: that's the kind of pronouncement that people read ten years later when the project is successful and make fun of you for :)

[05:52:05.0000] <jgraham>
darobin: I'm not feeling very threatend by that :)

[05:52:11.0000] <MikeSmith>
jgraham: plus it would be be a browser doing garbage collection. which makes about as much sense as writing an OS in a language that has GC instead of requiring old-school memory housekeeping

[05:54:03.0000] <MikeSmith>
anyway, psd++ for pithiest tweet of the day: https://twitter.com/psd/status/301626612724690944 "Browser wars part 3: The Quickening"

[05:56:07.0000] <MikeSmith>
slightlyoff: I dig your new ride, man.

[05:56:15.0000] <slightlyoff>
MikeSmith: hah

[06:08:23.0000] <MikeSmith>
hey so is Peter Beverloo not going to do his Last Week in WebKit writeups any more?

[06:12:20.0000] <beverloo>
Lack of time, MikeSmith

[06:12:24.0000] <beverloo>
I'm hoping to publish something today

[06:13:29.0000] <MikeSmith>
hey it's beverloo

[06:13:51.0000] <MikeSmith>
good to hear you're still at it

[06:14:21.0000] <MikeSmith>
you left an information vacuum there for a while

[06:15:04.0000] <beverloo>
I'd almost consider saying sorry for being busy :)

[06:38:04.0000] <annevk>
slightlyoff: from what I hear they consider that API pretty a much done deal

[06:38:18.0000] <slightlyoff>
annevk: will discuss with Tab

[06:38:46.0000] <annevk>
slightlyoff: what's still blocking Future atm?

[06:39:51.0000] <slightlyoff>
annevk: I need to do the polyfill and respond to one of the internal questions about it by one of our TC39 folks

[06:39:59.0000] <annevk>
k

[06:41:12.0000] <MikeSmith>
beverloo: wasn't trying to make you feel guilty :) Whatever you been busy on I expect it's probably awesome

[07:16:19.0000] <annevk>
Philip`: it has helped Safari and is helping Servo

[07:16:51.0000] <annevk>
Philip`: and helped Opera through numerous rewrites, but yeah, it's not entirely clear

[07:24:05.0000] <annevk>
GitHub now uses /annevk again, maybe because I changed the login to be my email address...

[07:25:21.0000] <sangwhan>
I'm going to throw out a pretty silly question here - are political r-(s) common?

[07:28:47.0000] <Ms2ger>
darobin, yeah, HG fixes everything :)

[07:29:42.0000] <jgraham>
Can lead to mercurial poisoning though

[07:30:39.0000] <annevk>
beverloo: do another one of those tweets for WHATWG

[07:30:54.0000] <annevk>
beverloo: even howcome gets it wrong!

[07:31:31.0000] <annevk>
sangwhan: hmm?

[07:32:03.0000] <sangwhan>
annevk: just wondering if crap code  is the only way to get a r-

[07:32:43.0000] <annevk>
sangwhan: well not in line with project goals is another

[07:32:49.0000] <annevk>
sangwhan: and those are vague of course

[07:33:21.0000] <annevk>
e.g. Mozilla let some XForms stuff happen for a while, but now most of that is gone

[07:33:35.0000] <annevk>
don't really know the entire story around that though, just know that it happened

[07:33:42.0000] <sangwhan>
annevk: Project goals sounds like it has a lot of potential to get political

[07:33:48.0000] <annevk>
uhuh

[07:33:53.0000] <Ms2ger>
We used to take pretty much everything, AIUI

[07:34:10.0000] <Ms2ger>
Remember, we used to support python

[07:34:23.0000] <annevk>
I didn't :p

[07:34:55.0000] <jgraham>
I knew that!

[07:35:01.0000] <sangwhan>
Dunno, I just got this impression by comparing rejects on bugs.webkit.org and bugzilla.mozilla.org

[07:35:05.0000] <jgraham>
Mark Hammond did it, right?

[07:35:19.0000] <Ms2ger>
I dunno

[07:35:35.0000] <Ms2ger>
This was landed in CVS without authorship information, IIRC

[07:35:45.0000] <Ms2ger>
/me had some fun removing that code

[07:35:55.0000] <sangwhan>
Could be that I'm looking at it subjectively because so far I'm not uber happy

[07:36:02.0000] <Ms2ger>
Anyway, I guess I should mention Mozilla is hiring :)

[07:36:05.0000] <Ms2ger>
Hi sangwhan!

[07:36:15.0000] <sangwhan>
/me waves back to Ms2ger 

[07:36:55.0000] <sangwhan>
Especially, the absolute code size of Webkit is overwhelming

[07:38:13.0000] <Ms2ger>
A lot bigger than Gecko ;)

[07:40:42.0000] <sangwhan>
No more having the entire source history on my laptop at least :)

[07:51:35.0000] <annevk>
jgraham: I knew it, but I didn't support it (was my lame joke)

[07:52:38.0000] <beverloo>
annevk, related: https://twitter.com/littlecalculist/status/301717526465896448

[07:53:05.0000] <annevk>
beverloo: oh he is joking

[07:53:14.0000] <annevk>
beverloo: took me long enough :)

[07:53:25.0000] <beverloo>
:)

[08:51:38.0000] <annevk>
"I never understood the implicit assumption that 'open-source' makes monopolies good for you."

[08:51:46.0000] <annevk>
https://twitter.com/sgalineau/status/301733367324504065

[08:55:49.0000] <Ms2ger>
/me was surprised to see email about a Bacon API

[08:56:14.0000] <jgraham>
?!

[08:57:25.0000] <Ms2ger>
Turned out to read "Beacon", unfortunately

[08:59:46.0000] <marcosc>
oh :(

[09:00:34.0000] <marcosc>
bacon.crispy(); â¦. mmmm baconâ¦.

[09:01:26.0000] <jgraham>
I see it as a good use case for the async API

[09:01:32.0000] <jgraham>
I mean DOMFuture

[09:01:50.0000] <jgraham>
Because making good bacon is seriously async

[09:02:10.0000] <jgraham>
Like, you probably want to start with the part where you get the pig

[09:02:15.0000] <Hixie>
sigh, a sad day for the web today

[09:02:25.0000] <jgraham>
and a pig is really a promise that will one day return bacon

[09:02:33.0000] <Hixie>
annevk: "set" is by definition unordered, imho

[09:03:15.0000] <marcosc>
jgraham: :)

[09:03:57.0000] <MikeSmith>
jgraham: solid gold, man :)

[09:11:11.0000] <jgraham>
annevk: I tend to agree with Hixie fwiw. I think ordered set would be clearer

[09:11:38.0000] <slightlyoff>
I, for one, am enjoying watching people trip over their poorly-thought-through piles of preferences

[09:12:01.0000] <slightlyoff>
it's like nobody has ever asked anyone on the web to stack-rank what they want, most to least

[09:13:44.0000] <annevk>
still waiting for my pet hippo

[09:14:00.0000] <jgraham>
slightlyoff: huh?

[09:14:48.0000] <slightlyoff>
jgraham: nevermind.

[09:15:51.0000] <GPHemsley>
/me wonders what the sad-inducer-of-the-day is

[09:16:01.0000] <Ms2ger>
GPHemsley, Opera

[09:16:15.0000] <GPHemsley>
?

[09:16:56.0000] <Ms2ger>
http://my.opera.com/ODIN/blog/300-million-users-and-move-to-webkit

[09:19:01.0000] <GPHemsley>
"a browser is much more than just a renderer and a JS engine" barely

[09:19:27.0000] <miketaylr>
it has a few buttons too

[09:19:55.0000] <Ms2ger>
Not particularly nice ones, in their case

[09:20:06.0000] <GPHemsley>
even the buttons are all starting to look the same at this point

[09:20:27.0000] <darobin>
/me read that as the Bacon API too

[09:20:35.0000] <GPHemsley>
aren't they essentially obsoleting themselves?

[09:20:48.0000] <GPHemsley>
now there will be zero reason to use Opera

[09:20:53.0000] <GPHemsley>
just like there is zero reason to use Safari

[09:21:07.0000] <GPHemsley>
(except by accident)

[09:21:42.0000] <annevk>
https://o.twimg.com/1/proxy.jpg?t=FQQVBBheaHR0cDovLzI1Lm1lZGlhLnR1bWJsci5jb20vYzMxNDkzY2NjZmJjYzAwNzc3YWYxYTRkYjRjZmYyOTEvdHVtYmxyX21pNjRxcHMxRkgxcnF2eTEybzFfNDAwLmpwZxQCFgASAA&s=CX4Z-zv4t9SbB8nIo-4fXADqLJwsdyun9Xju4GWAP-s

[09:21:46.0000] <annevk>
beautiful

[09:22:56.0000] <GPHemsley>
/me seems to recall some chatter a few years ago about Firefox doing the same

[09:23:05.0000] <Ms2ger>
There's always chatter

[09:23:18.0000] <Ms2ger>
We just have competent CEOs

[09:23:25.0000] <GPHemsley>
ah

[09:23:44.0000] <GPHemsley>
so it's back to Firefox vs. the World again, huh?

[09:23:55.0000] <GPHemsley>
with IE just... there

[09:25:11.0000] <Ms2ger>
Sounds right

[09:25:34.0000] <GPHemsley>
or maybe it will be Firefox + IE vs Google

[09:25:40.0000] <annevk>
Hixie: so we're agreed it's different from a list?

[09:25:40.0000] <GPHemsley>
that could be fun

[09:26:02.0000] <annevk>
Hixie: oh the spec calls it an ordered set even

[09:26:13.0000] <annevk>
Hixie: I guess I could rename the algorithms to also say ordered set

[09:26:42.0000] <annevk>
Hixie: you're talking about the "set parser" and "set serializer" right?

[09:27:17.0000] <GPHemsley>
Ms2ger: Oh, interesting. A commenter on that post invoked the rumor as if it were present-day.

[09:28:17.0000] <annevk>
Yeah, Opera's Asa Dotzler tweeted about it too

[09:28:46.0000] <GPHemsley>
https://bugzilla.mozilla.org/show_bug.cgi?id=840928

[09:31:05.0000] <GPHemsley>
(but then again, Ms2ger already knew about that)

[09:33:10.0000] <sangwhan>
Can't wait to see what Asa Dotzler is going to write regarding this

[09:33:15.0000] <sangwhan>
/me gets the popcorn bag

[09:34:10.0000] <Hixie>
annevk: i would not name the variables after their type. You don't call a loop index variable "integer", you call it "index". You don't call a string that contains the user's name "string", you call it "username"

[09:34:47.0000] <annevk>
oh variables

[09:34:53.0000] <annevk>
but that's something else

[09:34:57.0000] <annevk>
where's that?

[09:35:25.0000] <annevk>
aaah HTMLCollection

[09:36:16.0000] <Hixie>
yeah, collection

[09:36:22.0000] <annevk>
Hixie: suggestion?

[09:36:28.0000] <Hixie>
not "Let set be an empty list" :-)

[09:36:34.0000] <annevk>
oh you

[09:36:39.0000] <Hixie>
how about "let elements be an empty list"

[09:36:44.0000] <Hixie>
or "let result be"

[09:37:05.0000] <annevk>
that's good, elements would be confusing with element in the next paragraph

[09:37:09.0000] <annevk>
ty!

[09:40:09.0000] <tantek>
Hixie, do you have a grammar for HixieScript? (all the pseudocode written in "let â¦ " etc. in the spec(s)) ?

[09:40:33.0000] <Hixie>
tantek: yeah. http://ian.hixie.ch/bible/english

[09:41:45.0000] <tantek>
"let" is not found on that page :P

[09:42:32.0000] <annevk>
when you introduce a variable use let, when you reuse it use set

[09:42:49.0000] <annevk>
Let x be y. Set x to z.

[09:43:10.0000] <Hixie>
tantek: it defers to regular english :-)

[09:43:25.0000] <annevk>
Hixie: not for filename!

[09:43:30.0000] <Hixie>
yeah i generally try to use "let" when i'm introducing and "set" when i'm changing things

[09:43:43.0000] <tantek>
HixieScript seems far more constrained than "regular english" and certainly has a particular style/feel to it.

[09:43:47.0000] <Hixie>
annevk: the actual reason i used "file name" was that there were numerous places where i had things like "name of the file" and so forth

[09:43:55.0000] <Hixie>
annevk: and "filename of the file" read really weird

[09:44:06.0000] <Hixie>
tantek: the feel is just because i'm always copy/pasting

[09:44:08.0000] <annevk>
Hixie: reading through the diff I thought that might have been it

[09:44:09.0000] <tantek>
and also documenting conventions like: "not name the variables after their type"

[09:44:26.0000] <Hixie>
"not name the variables after their type" is just good programming practice

[09:45:11.0000] <tantek>
[citation]

[09:45:24.0000] <Hixie>
- Hixie, 2013

[09:45:25.0000] <annevk>
tantek: feel free to add to http://wiki.whatwg.org/wiki/Howto_spec

[09:46:54.0000] <annevk>
I try to write my specs somewhat consistently so once you grasp one you get the others, but things change over time...

[09:47:11.0000] <marcosc>
/me wonders [picture of velociraptor]  â¦ what's more important: interop or ease of use of APIs? 

[09:48:48.0000] <Ms2ger>
marcosc, WebKit

[09:48:57.0000] <tantek>
Hixie, I can't put that in a <cite> according to your spec text on <cite> :P

[09:49:10.0000] <Hixie>
tantek: yup :-)

[09:49:11.0000] <marcosc>
Ms2ger: correct! :)

[09:49:37.0000] <annevk>
marcosc: I think the contrast is between ease of use and exposing low enough primitives for the really hard cases

[09:51:39.0000] <tantek>
thanks annevk - http://wiki.whatwg.org/wiki/Howto_spec#Defining_an_attribute and latter in the page covers a lot of HixieScript - I might create a separate page for it with known constructs as a summary.

[09:51:47.0000] <marcosc>
sure, but if you were to take a platform wholesale warts and all (e.g., say WebOS) and "standardize it" (i.e., provide specs, tests, and two conforming imps), would that be enough?

[09:52:36.0000] <Hixie>
tantek: honestly i wouldn't focus too much on the exact constructs we use, it's more the concept of "write prose like you would write code" and "cover every eventuality" that matters

[09:52:47.0000] <Hixie>
like, my style vs the ecma style, who cares, both are fine

[09:52:55.0000] <Hixie>
ecma's might even be better

[09:53:03.0000] <Hixie>
i just don't have the discipline for it

[09:53:47.0000] <marcosc>
Do developers really case about good API design? Like people still code for iOS in objective-câ¦ and that stuff looks pretty uglyâ¦ and java is also extremely successful

[09:53:48.0000] <marcosc>
but it's also hella ugly

[09:53:48.0000] <marcosc>
So I'm left wondering, like a velociraptor, should we give a crap about API design? And if so, to what extent?

[09:53:49.0000] <Ms2ger>
marcosc, two independent implementations? That's what the web is, surely

[09:54:12.0000] <marcosc>
Ms2ger: well, three now :)

[09:54:42.0000] <Ms2ger>
On another note, anybody here feel like writing a new browser?

[09:55:00.0000] <marcosc>
/me crickets 

[09:55:16.0000] <Ms2ger>
I promise we won't have any pesky users

[09:55:36.0000] <Hixie>
marcosc: we need to care about good api design on the web because we've sacrificed so many other things that the other platforms rely on to get where they got

[09:55:40.0000] <marcosc>
/me puts his hand a little way upâ¦ then quickly puts it down again before anyone sees

[09:55:54.0000] <Ms2ger>
Too late

[09:55:55.0000] <tantek>
Ms2ger, been there, done that.

[09:56:10.0000] <Ms2ger>
tantek, excellent, I was hoping to recruit you :)

[09:56:41.0000] <tantek>
Ms2ger, just get MSFT to open source Tasman and we can have some fun. ;)

[09:56:45.0000] <Ms2ger>
Heh

[09:57:00.0000] <Ms2ger>
I think I'd prefer Presto at this point, if we're open-sourcing :)

[09:57:06.0000] <tantek>
Tasman is smaller ;)

[09:57:14.0000] <Ms2ger>
Exactly :)

[09:58:06.0000] <tantek>
But yes, Opera should open source Presto regardless.

[09:58:15.0000] <marcosc>
Hixie: I feel like caringâ¦ but I'm looking at the SysApps API stuff and I feel like crying. I don't know if I want to get into a shit fight about those APIs or if it would be better to just let those things be standardized (it's basically the B2G APIs, which feel very rushed).

[09:58:41.0000] <Ms2ger>
Hah

[09:58:47.0000] <Hixie>
marcosc: are any other browsers going to implement them? if yes, then you should care.

[09:58:47.0000] <sangwhan>
tantek: If you put it that way, Dillo is small (but may need a lot of work to bring up to the game) too :)

[09:58:49.0000] <annevk>
Hixie: is your todo list public these days?

[09:58:59.0000] <Hixie>
annevk: bugs, e-mail

[09:59:02.0000] <annevk>
Hixie: also, do update http://wiki.whatwg.org/wiki/Specs_todo ?

[09:59:13.0000] <Hixie>
annevk: to say what?

[09:59:39.0000] <annevk>
Hixie: I'm wondering if there's anything more important than Fetch and spec maintenance to be worked on

[09:59:46.0000] <Hixie>
ah

[10:00:22.0000] <annevk>
I plan to work on DOMFuture, and spec on(), and fix your DOM event thingie eventually (once I figure out the shadow DOM story), but that's all relatively minor

[10:00:50.0000] <marcosc>
It would be good to find a home quickly for DOMFuture

[10:01:01.0000] <annevk>
there's a home: DOM

[10:01:10.0000] <annevk>
just need to settle on the details

[10:01:28.0000] <marcosc>
ok, if there is anything I can do

[10:01:37.0000] <marcosc>
review or whatever, let me know

[10:02:29.0000] <smaug____>
annevk: fix event thingie? I'd say add something on top of the current stuff

[10:02:32.0000] <annevk>
review Alex's GitHub page?

[10:02:51.0000] <marcosc>
I guess that will do for now

[10:02:51.0000] <annevk>
smaug____: right, that's on(), unless you mean something else?

[10:03:08.0000] <annevk>
marcosc: my plan is to just write out that design

[10:05:15.0000] <smaug____>
/me would still like to see how Presto handles cycles between native and JS code

[10:05:43.0000] <marcosc>
be cool if Opera released their code â¦ for historical reasons or whatever

[10:06:16.0000] <marcosc>
or just because it would be cool :)

[10:07:16.0000] <smaug____>
and to possibly learn new ways to implement certain things

[10:07:29.0000] <marcosc>
yep

[10:08:42.0000] <TabAtkins>
annevk: What's this about rewriting the URL parser?  Are you asking me to or something?

[10:09:39.0000] <annevk>
TabAtkins: since you said it was so easy for CSS and fantasai called state-machines assembly, I figured I could ask you to take a look at the URL Standard to see if it was possible

[10:10:15.0000] <annevk>
TabAtkins: given that there's not much tokens I suspect not really, but who knows, maybe we can do better :)

[10:11:40.0000] <MikeSmith>
annevk: meaning state-machine algorithms in specs?

[10:12:00.0000] <annevk>
MikeSmith: uhuh

[10:15:12.0000] <MikeSmith>
well ... that's an interesting way of looking at things I guess

[10:16:54.0000] <MikeSmith>
though I reckon the she must just mean they're like imperative code

[10:17:28.0000] <gsnedders>
smaug____: Native code as in the rest of the browser, UI, etc., or as in DOM objects?

[10:17:47.0000] <jgraham>
gsnedders: DOM objects

[10:17:48.0000] <gsnedders>
Assume you mean the former.

[10:17:59.0000] <annevk>
I think my Twitter feed might be an echo chamber. It has a lot of people talking about bad stuff they read elsewhere, but none of that is in my feed.

[10:18:12.0000] <gsnedders>
jgraham: Was that obvious if I read more context? :)

[10:18:49.0000] <jgraham>
gsnedders: Well, if by "more context" you mean like "the conversation for like one year ago"

[10:18:56.0000] <smaug____>
gsnedders: DOM object <-> JS

[10:19:03.0000] <jgraham>
s/ like//

[10:19:10.0000] <jgraham>
s/for/from/

[10:19:17.0000] <smaug____>
gsnedders: the thing which webkit doesn't really handle at all ;)

[10:20:00.0000] <gsnedders>
smaug____: Provided we don't end up with a stupid web API because of one implâ¦ :)

[10:20:11.0000] <jgraham>
smaug____: It's a pity that none of [sof|jl|bratell] are around since they probably actually understand this stuff

[10:21:00.0000] <gsnedders>
The basic answer is "we don't, really". The long answer is it happens to nicely fall out of how other things work. :)

[10:22:07.0000] <jgraham>
(I suppose some others do as well, but they also aren't on irc, so that still doesn't help)

[10:22:36.0000] <gsnedders>
(I have a reasonable idea of how this all works, at least.)

[10:23:48.0000] <gsnedders>
Anyhow, supper time for me.

[10:28:31.0000] <MikeSmith>
jgraham: what you mean by jl not being around? you mean just at the moment, today?

[10:28:55.0000] <gsnedders>
MikeSmith: In #whatwg, I was presuming?

[10:29:19.0000] <MikeSmith>
ah ok

[10:34:33.0000] <jgraham>
MikeSmith: Right, we didn't take them out and shoot them or anything

[10:34:55.0000] <jgraham>
But they aren't really avaliable on any channel where smaug____ can cross-question them :)

[10:37:18.0000] <MikeSmith>
I see

[10:37:52.0000] <MikeSmith>
everybody should just be on this channel

[10:38:47.0000] <smaug____>
:)

[10:42:56.0000] <jacobolus>
g'morning

[10:42:57.0000] <gsnedders>
smaug____: The very short detailed answer is marking everything reachable from JS scopes, and let host objects have their own mark-phase callbacks (which can mark more). This means that such cycles aren't a problem, because they're just instantly out-of-scope. However, it makes things like XHR objects hard because they can call a callback which is unreachable from any JS scope.

[10:43:17.0000] <gsnedders>
And the hacks for XHR and the like are ugly.

[10:43:51.0000] <smaug____>
gsnedders: ok, so it is about tracing everything?

[10:44:08.0000] <smaug____>
somewhat similar to Trident, I guess

[10:44:21.0000] <smaug____>
I mean, effectively use GC for everything

[10:44:34.0000] <gsnedders>
smaug____: Yeah, indeed

[10:45:33.0000] <smaug____>
gsnedders: and for cycles within C++ code something manual is used

[10:45:45.0000] <gsnedders>
smaug____: Relatedly, we still use a very naÃ¯ve mark/sweep GC.

[10:46:01.0000] <gsnedders>
smaug____: Yeah. I don't know too much about how except "it's ugly" :)

[10:47:37.0000] <sangwhan>
gsnedders: It's not _that_ ugly, it "could use improvements". There are uglier bits in Opera.

[10:47:54.0000] <Ms2ger>
sangwhan, I'd love to see them :)

[10:47:54.0000] <gsnedders>
sangwhan: I'm just quoting bratell here :)

[10:48:36.0000] <gsnedders>
sangwhan: And I avoid this stuff enough, yet alone touching the really bad parts.

[10:49:05.0000] <sangwhan>
gsnedders: Consider yourself lucky :-)

[10:49:32.0000] <sangwhan>
Ms2ger: Yeah, let's see what Opera management wants to do with Presto in a couple years.

[10:49:49.0000] <Ms2ger>
Bury it deeper

[10:50:24.0000] <sangwhan>
Part of me hopes that someone disgruntled employee leaks it, but that probably won't be me

[10:51:30.0000] <sangwhan>
Would be a shame to see it buried away. Even if every web developer hated Presto, I still have way more love than hate for that code.

[10:51:36.0000] <Ms2ger>
Probably, excellent

[10:53:02.0000] <TabAtkins>
annevk: I can take a look, I suppose.

[10:54:00.0000] <Philip`>
/me wonders how the code compares in quality to the original open-sourced Netscape code

[10:54:54.0000] <jgraham>
My impression is that Presto is like the opposite of Gecko (in some sense)

[10:55:19.0000] <jgraham>
Most things are implemented in a very minimalist way

[10:55:38.0000] <jgraham>
(I am totally not a good person to judge of course)

[10:56:37.0000] <TabAtkins>
annevk: You're already using a state machine for parsing, so I assume you mean you're looking if it can be simplified by running a tokenization step first?

[10:57:30.0000] <Ms2ger>
jgraham, minimalist?

[10:57:46.0000] <TabAtkins>
It's possible, though I'd need to understand more of the structure of URLs first.  If there are higher-level constructs that you can infer locally, such as "alphanumeric sequence" and "/" and "." or whatever, that would help.

[11:44:54.0000] <JonathanNeal>
This could have been titled "quirks mode" http://imgs.xkcd.com/comics/workflow.png

[11:55:10.0000] <annevk>
TabAtkins: yeah, don't think so really

[11:55:23.0000] <annevk>
TabAtkins: it's highly contextual

[11:55:51.0000] <annevk>
TabAtkins: maybe if you switch on things like : / \ @ etc. you might be able to get somewhere I suppose

[11:56:14.0000] <annevk>
TabAtkins: though I guess the other thing is that for URLs a state machine makes a lot of sense so you can implement them as a single-pass

[11:56:29.0000] <annevk>
TabAtkins: which is good for perf

[11:59:46.0000] <Hixie>
annevk: updated relative url bug

[12:03:30.0000] <annevk>
Hixie: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20926#c4 wouldn't navigate (it would just update the URL), but I guess you're right that we should initialize url if input is given hmm

[12:03:49.0000] <Hixie>
er right, my bad

[12:03:57.0000] <Hixie>
but yeah, the point is the same

[12:04:19.0000] <Hixie>
i would have thought the same was true of new URL('...') btw

[12:04:30.0000] <Hixie>
you could drop .href entirely and the API would still work fine

[12:04:33.0000] <Hixie>
in principle

[12:04:36.0000] <Hixie>
(not as specced)

[12:07:34.0000] <annevk>
Hixie: I guess my thought was that when creating an <a> you'd parse the URL and such

[12:07:41.0000] <annevk>
Hixie: as is e.g. done for <img>

[12:08:08.0000] <annevk>
Hixie: and then set the result pieces on the object

[12:08:13.0000] <Hixie>
well for <img> we have to do something to parse the url because we need to hit the network

[12:08:22.0000] <Hixie>
for <a> we don't need to do anything unless the API is used

[12:08:41.0000] <Hixie>
i'd rather not have to copy and paste the same logic for <a> and <area> and everywhere else that does this

[12:08:56.0000] <Hixie>
would be better for just URLUtils to have all the logic and just to have the minimum number of hooks

[12:09:19.0000] <Hixie>
which is basically just an algorithm to get the current value, and algorithm to get the current base url, and an algorithm to set the value

[12:09:32.0000] <Hixie>
note that you can't preparse <a href=""> anyway, since if the base url changes, the output changes too

[12:09:44.0000] <Hixie>
you have to reparse it each time

[12:10:29.0000] <annevk>
yeah you're right, new URL doesn't have that particular problem

[12:10:41.0000] <annevk>
which is prolly why stuff is somewhat broken

[12:10:47.0000] <annevk>
I'll fix tomorrow

[12:18:46.0000] <annevk>
The people across the street are making my free WiFi slow :(

[12:19:32.0000] <Hixie>
so, nobody magically came up with an algorithm for me in https://www.w3.org/Bugs/Public/show_bug.cgi?id=20524 while i was slacking, huh

[12:19:46.0000] <Hixie>
bummer

[12:26:00.0000] <TabAtkins>
annevk42: Tokenization steps are usually done inline with the parser anyway (you implement it as a generator that pops out the next token when you ask for it, as the parser runs), so the perf isn't significant.

[12:26:12.0000] <TabAtkins>
But yeah, I'm thinking URLs are too contextual to benefit from a tokenization pass.

[12:33:53.0000] <marcosc>
/me tries to embroil annevk42 and slightlyoff in a discussion about DOMFuture vs DOMRequest â¦. wish there was a way to get Ms2ger into the mix :) http://lists.w3.org/Archives/Public/public-sysapps/2013Feb/0048.html

[12:34:12.0000] <Ms2ger>
Hah, sysapps

[12:34:21.0000] <zewt>
what a hell is sysapps

[12:34:42.0000] <marcosc>
zewt: widgets 2.0 :)

[12:34:47.0000] <marcosc>
http://www.w3.org/2012/sysapps/

[12:35:30.0000] <Ms2ger>
B2G

[12:35:36.0000] <marcosc>
WIDGETS!

[12:35:40.0000] <marcosc>
:)

[12:36:05.0000] <zewt>
discussions about that sort of thing should be on webapps or whatwg, doing it on some obscure list guarantees less input

[12:36:39.0000] <marcosc>
zewt: the discussion is happening there because all the APIs are using the DOMRequest pattern from B2G

[12:37:10.0000] <marcosc>
And given that SysApps is really a standardization B2G, then it doesn't make sense to have it anywhere else

[12:37:14.0000] <zewt>
if it's an api with general application, at least (which iirc those may)

[12:37:42.0000] <zewt>
... what the heck is b2g? smells buzzwordy

[12:37:42.0000] <marcosc>
right now, it ain't â¦ but hopefully it will be.

[12:37:57.0000] <marcosc>
zewt: quit trollin

[12:37:59.0000] <marcosc>
:)

[12:38:27.0000] <zewt>
i can't help smelling whag I'm smelling :P

[12:38:31.0000] <Ms2ger>
Firefox OS

[12:38:44.0000] <zewt>
also touchscreen typoing

[12:39:19.0000] <zewt>
two words that never belong aside one another

[12:39:29.0000] <marcosc>
heh

[12:39:31.0000] <zewt>
technically three, i suppose

[12:45:16.0000] <volkmar>
marcosc: I think neither sicking or I want to make sysapps a B2G WG

[12:46:07.0000] <volkmar>
(argh, I should really change that nickname...)

[12:48:23.0000] <marcosc>
volkmar: Ms2ger and I were just messing around :)

[12:49:07.0000] <volkmar>
marcosc: that's all Ms2ger does ;)

[12:52:12.0000] <volkmar>
marcosc: btw, how does DOMRequest would require things to be wrapped up in functions while DOMFuture wouldn't?

[12:53:47.0000] <marcosc>
Depends on .then()â¦ if .then() understands that that is means after whatever "you are doing or did" finishes, then it should work.

[12:54:15.0000] <marcosc>
like:

[12:55:24.0000] <marcosc>
var promise = something.then(function(){}); setTimeout(function(){doSomething(); promise.then(doSomethingElse)})

[12:56:53.0000] <volkmar>
how is that behaviour related to DOMRequest interface?

[12:57:33.0000] <volkmar>
I mean, that behaviour working or not working

[12:57:47.0000] <anon>
hi

[12:57:58.0000] <marcosc>
well, in IDBRequest, you need to do everything in one go:

[12:59:07.0000] <marcosc>
(function()(var request = indexedDB.open("todos", version);

[12:59:07.0000] <marcosc>
request.onsuccess = function(e) {â¦}()}

[12:59:26.0000] <volkmar>
in IDB, you can do:

[12:59:31.0000] <volkmar>
var r = idb.open();

[12:59:38.0000] <volkmar>
r.onsuccess = function() {};

[12:59:44.0000] <volkmar>
but that's just an event handler

[12:59:50.0000] <volkmar>
that should also exist with DOMFuture

[12:59:55.0000] <volkmar>
just named accept instead of success

[13:00:12.0000] <marcosc>
the problem is that you are opening before setting the listener

[13:00:13.0000] <volkmar>
(according to what slightlyoff told me, .onaccept should work in DOMFuture)

[13:00:41.0000] <marcosc>
that's counter intuitive. You've started an operation before you set listeners for it

[13:01:06.0000] <volkmar>
marcosc: that behaviour is because of DOM events

[13:01:13.0000] <volkmar>
and DOMFuture keeps DOM events

[13:01:36.0000] <marcosc>
It's not related to DOM events. Consider XHR.

[13:01:37.0000] <volkmar>
based on that, DOMFuture is simply DOMRequest with renamed attributes and events

[13:02:00.0000] <marcosc>
XHR is the counter example. You need to explicitly call .send() for anything to happen

[13:02:05.0000] <volkmar>
(and .then(), .done() and other additions)

[13:02:32.0000] <volkmar>
marcosc: sure

[13:02:39.0000] <volkmar>
but DOMFuture works the same way though

[13:02:43.0000] <marcosc>
so, IndexedDB should not have been requests, they should have been tasks

[13:02:45.0000] <volkmar>
or I misunderstood you

[13:02:53.0000] <volkmar>
with DOMFuture you have to do:

[13:03:06.0000] <marcosc>
volkmar: maybe they do, and then we are going to have the same problem :)

[13:03:17.0000] <marcosc>
That's why we need lots of people looking at them

[13:03:21.0000] <volkmar>
doSomethingAsync().done(function() { \o/; }, function() { :(; });

[13:04:15.0000] <marcosc>
Sometimes that makes senseâ¦ sometimes not. It has to be looked at on a case by case basis

[13:04:22.0000] <volkmar>
marcosc: the promise idea is that when an action happen, it returns an object telling you that the result of the action will be found there

[13:04:44.0000] <volkmar>
by design, you can't set listeners before getting that objects

[13:04:51.0000] <volkmar>
or I'm missing something

[13:05:29.0000] <marcosc>
no, you are probably right. Butt, like I said, it might not be the right pattern for what we are trying to do. It depends on the use case.

[13:05:35.0000] <marcosc>
The use case for each API, that is

[13:05:52.0000] <volkmar>
marcosc: what developers are asking is a promise-like object

[13:05:56.0000] <marcosc>
We should not just say "DOMFuture ALL THE THINGS!" :)

[13:06:03.0000] <Ms2ger>
We should not?

[13:06:11.0000] <volkmar>
I feel like ppl say that already ;)

[13:06:20.0000] <TabAtkins>
(Those people are right.)

[13:06:20.0000] <marcosc>
volkmar: no, we should totally resist that

[13:06:51.0000] <volkmar>
having a promise design is great

[13:07:03.0000] <volkmar>
promise designed object

[13:07:10.0000] <volkmar>
anyway... I'm starving

[13:07:12.0000] <marcosc>
volkmar: we should look at each API and evaluate the best way to do something. If it fits a promise, then yayâ¦ if not, then, we use something else.

[13:07:52.0000] <marcosc>
volkmar: lets chat on the list. But thanks for chatting about this.

[13:08:31.0000] <volkmar>
marcosc: sure

[13:08:41.0000] <volkmar>
I will write some emails tomorrow I guess

[13:08:48.0000] <volkmar>
ttyl

[13:18:54.0000] <annevk42>
marcosc: yes we should DOMFuture all the things

[13:18:59.0000] <annevk42>
marcosc: that's the whole point

[13:19:50.0000] <TabAtkins>
Futures are roughly a superset of events anyway, no?

[13:20:26.0000] <annevk>
no

[13:20:35.0000] <annevk>
events are still needed

[13:20:44.0000] <annevk>
Futures are useful for all yes/no operations

[13:21:13.0000] <annevk>
async yes/no operations

[13:21:38.0000] <annevk>
such as geolocation / XHR / <canvas>.getBlob() / ...

[13:22:38.0000] <nimbu>
MikeSmith: !!!!

[13:22:44.0000] <nimbu>
do not despair!!

[13:22:49.0000] <nimbu>
the web is not dead!

[13:22:53.0000] <nimbu>
there is something to cheer for!

[13:27:48.0000] <TabAtkins>
nimbu: I dunno what you're talking about, I'm just designing iOS apps now.

[13:28:44.0000] <nimbu>
:)))))))))))))))

[13:28:50.0000] <odinho>
At least I'm dead X)

[13:28:51.0000] <nimbu>
TabAtkins: that would be hilarious.

[13:28:59.0000] <nimbu>
/me slaps odinho

[13:29:14.0000] <odinho>
/me at work 09-22, that's... 13 hours. No wonder I feel bad.

[13:29:28.0000] <odinho>
So I'll go home now.

[13:29:34.0000] <nimbu>
:||

[13:29:43.0000] <odinho>
nimbu: Thanks, now I'm dead AND got slapped :-O

[13:29:59.0000] <nimbu>
TabAtkins: you should do a 'what i will be working on for the new year post' which basically lists 10 app ideas for April fool's joke

[13:30:09.0000] <nimbu>
odinho: yeah the slap was not useful.

[13:30:26.0000] <odinho>
A little bit maybe :]

[13:36:27.0000] <MikeSmith>
nimbu: :-)

[13:37:04.0000] <MikeSmith>
but I'm switching to i0S apps along with TabAtkins

[14:45:48.0000] <nimbu>
ahahahah MikeSmith

[14:45:50.0000] <nimbu>
NOOOOOOOOOO

[14:46:08.0000] <nimbu>
i cannot imagine that future.

[15:11:15.0000] <Hixie>
ok how does multicol work

[15:11:18.0000] <Hixie>
/me gets out the spec

[15:11:24.0000] <Hixie>
and does anyone implement this yet? (prefixes don't count)

[15:12:20.0000] <Hixie>
what i really want is column-width: shrink-wrap

[15:12:33.0000] <gsnedders>
Well, I believe Presto has the most complete implâ¦

[15:12:46.0000] <TabAtkins>
Hixie: That'll be column-width:fit-content when everyone supports that value.

[15:13:22.0000] <gsnedders>
Hixie: Unprefixed in Presto and Trident, I believe.

[15:13:27.0000] <Hixie>
TabAtkins: would that actually work? what's the intrinsic size of an element with a variable number of columns?

[15:13:37.0000] <TabAtkins>
Hixie: We'd have to magic it up when used there.

[15:13:40.0000] <Hixie>
gsnedders: d'oh

[15:13:50.0000] <Hixie>
TabAtkins: k, lgtm. make it so.

[15:13:58.0000] <Hixie>
ok

[15:14:00.0000] <Hixie>
i have http://software.hixie.ch/utilities/js/sorter/index.html

[15:14:02.0000] <TabAtkins>
We already do some significant magic with multicol intrinsic sizing.

[15:14:05.0000] <Hixie>
now to come up with an algorithm

[15:14:28.0000] <Hixie>
also if anyone sees anything else that i should make sure we support in table sorting autosort, let me know

[15:14:33.0000] <Hixie>
(see the "input" part of that)

[15:15:07.0000] <Hixie>
(i think the input is in the order i want)

[15:15:13.0000] <Hixie>
(so check that too)

[15:16:10.0000] <TabAtkins>
Hixie: How are the short space-separated things sorting after?  space is u+20, well before all the letters and numbers.

[15:16:25.0000] <Hixie>
in the input?

[15:16:28.0000] <TabAtkins>
Yes.

[15:16:31.0000] <Hixie>
the sort order in the input is not perfect

[15:16:36.0000] <Hixie>
it's locally sorted

[15:16:42.0000] <TabAtkins>
Oh, okay.

[15:16:45.0000] <Hixie>
which ones should i fix?

[15:16:53.0000] <Hixie>
i'd like it to be what we all agree we want

[15:17:05.0000] <Hixie>
but i don't really know what that is at a global level

[15:17:12.0000] <TabAtkins>
Wait, I'm confused.  So you want the *input* to already be sorted?

[15:18:10.0000] <Hixie>
i want to know what output i want, and i am at this point putting the input in that order, so that i can then trivially check if my function is working

[15:18:25.0000] <Hixie>
(i'll run it at least twice, with different permutations of the input)

[15:18:31.0000] <Hixie>
(including at least the input, and the input reversed)

[15:18:36.0000] <Hixie>
(to make sure they agree)

[15:19:46.0000] <Hixie>
that make sense?

[15:21:25.0000] <TabAtkins>
Yeah.

[15:22:10.0000] <Hixie>
ok reload, i think the input order is right now

[15:25:39.0000] <Hixie>
moving IPs around...

[15:26:39.0000] <Hixie>
ok

[15:27:04.0000] <Hixie>
so that would give an order of: 1; 1.1.1; 1.1.1.1; 1.1

[15:27:17.0000] <Hixie>
(sort by first number, then next number, etc)

[15:27:39.0000] <TabAtkins>
Huh?  That's a weird order.

[15:27:45.0000] <Hixie>
(so here 1 and 1.0 sort first, then 1.1.1 and 1.1.1.1 sort next because they're sorting on the first number "1", and then 1.1 goes last because it's bigger than 1.0)

[15:28:01.0000] <Hixie>
yeah, it being weird is why i'm raising it here

[15:28:06.0000] <Hixie>
not sure how else to do it though

[15:28:17.0000] <Hixie>
unless we say that if you have a number followed by another, it sorts after infinity

[15:28:20.0000] <TabAtkins>
Don't split "numbers" on periods?

[15:28:39.0000] <TabAtkins>
/me wasn't aware that we were doing natural sorting of lists of things in the first place.  He may have missed the relevant discussion.

[15:28:39.0000] <Hixie>
so then you'd have 1, 1.1, 2, 1.1.1, 1.1.1.1

[15:28:56.0000] <Hixie>
this is for <table><th sorted>

[15:29:05.0000] <Hixie>
see https://www.w3.org/Bugs/Public/show_bug.cgi?id=20524

[15:29:23.0000] <Hixie>
the problem is we need to support IP addresses, version numbers, and regular reals

[15:29:30.0000] <Hixie>
but we have to define how they sort relative to each other

[15:29:37.0000] <Hixie>
(they're each easy to do alone)

[15:30:22.0000] <Hixie>
do we prefer 1, 1.1.1, 1.1.1.1, 1.1, 2; or 1, 1.1, 2, 1.1.1, 1.1.1.1 ?

[15:30:24.0000] <TabAtkins>
Ah, I wasn't aware of this bug.  Okay, that justifies a lot of this.

[15:30:54.0000] <Hixie>
it's basically the hard bit of the <table sortable> feature that i did a few weeks ago, i had bailed on this one hard part :-)

[15:31:04.0000] <TabAtkins>
The concept of natural sorting has been done before.  Sorting 1.1 and 1.1.1 at the same time, though, is tricky.

[15:31:07.0000] <Hixie>
hoped someone else would solve it for me, but as usual, my lazyness fails to bear fruit :-P

[15:31:15.0000] <TabAtkins>
Hmmm

[15:31:27.0000] <Hixie>
yeah a lot of this is based on stuart's work with sortable.js

[15:31:44.0000] <Hixie>
unfortunately he bailed on some of these harder questions :-P

[15:32:00.0000] <Hixie>
i think i prefer 1, 1.1, 2, 1.1.1, 1.1.1.1

[15:32:50.0000] <TabAtkins>
Actually, I think it's impossible to always accurately sort both version numbers and reals.

[15:32:59.0000] <TabAtkins>
Because in version numbers, 1.1 and 1.01 are the same thing.

[15:33:00.0000] <Hixie>
certainly

[15:33:03.0000] <TabAtkins>
Okay.

[15:33:16.0000] <Hixie>
if people are actually mixing these, they're being silly

[15:33:28.0000] <TabAtkins>
And worse, 1.1 and 1.10 are different versions.

[15:33:31.0000] <Hixie>
though the v1.01 vs 1.10 thing is hard

[15:33:50.0000] <TabAtkins>
Yeah, 1.1 vs 1.01 vs. 1.10 = :/

[15:34:21.0000] <Hixie>
but it's obvious that 1.0 < 1.01 < 1.1 = 1.10, so, sorry version people

[15:34:25.0000] <TabAtkins>
It's not even a question of mixing them.  It's just that the *way* you sort them are different.

[15:34:28.0000] <Hixie>
yeah

[15:34:53.0000] <Hixie>
anyway we solve that by having <data value="1 10">1.10</data>

[15:35:01.0000] <Hixie>
so that's a separate problem

[15:35:02.0000] <TabAtkins>
It looks, though, like if you use a separate other than ., or if you include at least three values, that they'll sort correctly as a list of numbers.

[15:35:21.0000] <Hixie>
yeah

[15:35:38.0000] <Hixie>
but should "1 1" sort before or after "2"?

[15:35:45.0000] <TabAtkins>
Okay, well, I'd sort list of numbers after single numbers.

[15:36:09.0000] <Hixie>
that means you get  1; 2; 1 1; 1 2; 2 1; 2 2

[15:36:15.0000] <TabAtkins>
Yes.

[15:36:23.0000] <Hixie>
seems consistent with what i prefer above for IPs

[15:36:24.0000] <Hixie>
ok

[15:36:39.0000] <TabAtkins>
It causes some confusion if you're using . to separate two numbers in a list, but other than that it's very natural.

[15:37:24.0000] <TabAtkins>
Are you handling this just by splitting the strings into digit/non-digit groups, and sorting them lexicographically?

[15:37:33.0000] <Hixie>
is "2 2 2" less than or greater than "1 1 1 1"?

[15:37:44.0000] <Hixie>
i'm not handling this at all so far

[15:37:50.0000] <Hixie>
so far i just want to know what result i want

[15:37:52.0000] <TabAtkins>
Lack of something sorts before existence.  So less.

[15:38:28.0000] <TabAtkins>
Oh, but hm.

[15:38:40.0000] <Hixie>
so 1 2 3; 1 2 4; 1 2 5; 1 2 3 4; 1 2 3 4 5; ?

[15:38:41.0000] <TabAtkins>
Sorry, greater than.  Wasn't thinking.

[15:38:46.0000] <Hixie>
k

[15:38:47.0000] <TabAtkins>
The first 2 loses.

[15:39:02.0000] <TabAtkins>
Sorting is always eager with comparisons.

[15:41:04.0000] <Hixie>
so we're sorting "one number" before "more than one number", but "2 numbers" and "3 numbers" get sorted based on their numbers

[15:41:22.0000] <Hixie>
i.e. 1; 9; 1 1; 1 1 1; 1 2

[15:41:24.0000] <TabAtkins>
...yes?

[15:41:28.0000] <TabAtkins>
Hm.

[15:41:36.0000] <Hixie>
i think that's right, but it's weird

[15:41:39.0000] <TabAtkins>
Why are my preferences inconsistent?

[15:41:48.0000] <Hixie>
hehe

[15:41:55.0000] <Hixie>
i do think that's the right answer

[15:42:03.0000] <Hixie>
it's just a bit weird when you mix all these things together

[15:42:06.0000] <TabAtkins>
I think I can justify it by saying that "one number" and "a list of numbers" are different categories, and we sort categories whole.

[15:42:16.0000] <Hixie>
and lists can't have just one number :-P

[15:42:17.0000] <Hixie>
yeah

[15:42:33.0000] <TabAtkins>
Without an explicit indicator, no, lists cant' have one value. ^_^

[15:43:02.0000] <Hixie>
of course this means 0 1; 0 1.1.1; 0 1.1

[15:43:15.0000] <TabAtkins>
Why?

[15:43:33.0000] <Hixie>
because 1.1.1 turns into the same as [0, 1, 1, 1], but 0 1.1 turns into [0, 1.1]

[15:43:45.0000] <TabAtkins>
I would think that each item in the list is sorted recursively, so

[15:43:47.0000] <TabAtkins>
Oh...

[15:44:15.0000] <Hixie>
could do a recursive sort saying it's a list within a list, though

[15:44:22.0000] <Hixie>
that would be... special to specify :-)

[15:44:26.0000] <TabAtkins>
Hm, I was thinking of different separators living at different levels, but I don't think I can justify my concept of "separator" without human thought.

[15:45:03.0000] <TabAtkins>
We could just create a list of separators - " ", "-", ".", ",".

[15:45:12.0000] <Hixie>
unless you want to be a very busy man, i don't think i can specify that the UA texts you a question each time it wants to compare numbers

[15:45:35.0000] <TabAtkins>
First one encountered makes it a list, and splits the value.  You then type each value recursively.

[15:45:38.0000] <TabAtkins>
Then sort.

[15:46:06.0000] <TabAtkins>
I don't think people use different separators in the same list.

[15:46:59.0000] <Hixie>
so 0 1.1.1 becomes [0, [1, 1, 1]] and 0 1.1 becomes [0, 1.1] ?

[15:47:46.0000] <Hixie>
i think that is aesthetically pleasing but in reality the resulting complexity wouldn't be justified by the real world applications

[15:49:46.0000] <TabAtkins>
I'm just thinking of lists of the same type.  It seems weird that "1.1 2.0 1.2" sorts correctly (as a list of real numbers), but "1.1.1 2.0.1 1.2.0" doesn't (because it turns into a list of 9 integers).

[15:50:07.0000] <Hixie>
hm, interesting point

[15:50:53.0000] <Hixie>
this would only break when sorting lists of variable length lists, right

[15:51:04.0000] <TabAtkins>
On the other hand, the way I described it would break anyway unless we established a hierarchy among separators.  (Which might be justifiable, if we just put . above the others, due to ip addresses and versions.)

[15:51:23.0000] <TabAtkins>
Hm, maybe.

[15:51:48.0000] <TabAtkins>
(Well, - should probably be above space and comma too, though perhaps below .)

[15:51:55.0000] <TabAtkins>
SORTING IS HARD

[15:51:57.0000] <TabAtkins>
LET'S GO SHOPPING

[15:52:06.0000] <Hixie>
i admitedly lack imagination sometimes, but i can't think of any cases of lists of variable length lists in sortable tables

[15:52:17.0000] <Hixie>
so i'm happy to bail on that one :-P

[15:54:23.0000] <TabAtkins>
True that.

[15:54:59.0000] <TabAtkins>
Yeah, I guess that as long as the sub-lists are of the same type and length, you can treat it like a big list for sorting.

[15:55:44.0000] <Hixie>
how should "-2-4-7" sort?

[15:56:01.0000] <Hixie>
as ["-", 2, 4, 7], or as [-2, 4, 7] ?

[15:56:50.0000] <TabAtkins>
On the argument that "-2a-4" shoudl sort as [-2, a, -4], I say as [-2, -4, -7].


2013-02-14
[16:00:00.0000] <TabAtkins>
Basically, just tokenize things as numbers or non-numeric strings, with a special check for the 1.1.1 case that forces it to tokenize as three numbers and two strings.

[16:00:09.0000] <TabAtkins>
(etc for longer lists)

[16:05:47.0000] <Hixie>
well the problem with that is phone numbers are often of the form 1-2-3

[16:06:34.0000] <Hixie>
wouldn't want 555-555-5555 to sort before 555-555-5554

[16:08:15.0000] <TabAtkins>
Urf, you're right.

[16:08:41.0000] <TabAtkins>
What's your working definition of a "separator" here?

[16:10:11.0000] <Hixie>
i have yet to figure that out

[16:10:25.0000] <Hixie>
the sum total of my work on a solution here is "return b-a"

[16:10:29.0000] <TabAtkins>
Heh.  Well, the resolution of that case depends entirely on how you're determining separators.

[16:10:42.0000] <Hixie>
my work has been purely focused on the problem side of the equation :-)

[16:11:27.0000] <Hixie>
i think i might not determine separators. That is, treat "0,1" the same as "0a1". basically anything that i can't get to parse into a number is a separator.

[16:11:44.0000] <Hixie>
so "e" and "." would be special, and "-" special before a number

[16:12:04.0000] <Hixie>
but with special rules for what happens if you're parsing a number and come across something weird, like 1e2e3

[16:12:07.0000] <Hixie>
or -1-2-3

[16:12:09.0000] <Hixie>
or 1.2.3

[16:12:29.0000] <Hixie>
i'm thinking -2-4-7 is -2 4 7 though

[16:12:52.0000] <Hixie>
it'd be weird to treat -2.4,7 as anything but -2.4 followed by something

[16:12:56.0000] <TabAtkins>
Yeah.  Hmm, to be consistent with how we want to treat 1.1 vs 1.1.1, I think you're right - [-2, 4, 7]

[16:13:06.0000] <TabAtkins>
Yes.

[16:14:49.0000] <Hixie>
should i trim leading spaces. i'm thinking yes.

[16:14:53.0000] <TabAtkins>
Yes.

[16:15:13.0000] <TabAtkins>
Or perhaps just collapsible whitespace?

[16:15:25.0000] <TabAtkins>
Non-collapsed whitespace is usually significant.

[16:15:37.0000] <Hixie>
i meant leading U+0020

[16:15:48.0000] <Hixie>
and U+000A and U+0009 i'll treat as U+0020

[16:16:24.0000] <TabAtkins>
I know, but I'm saying that there's a sematnic distinction between spaces that are collapsed and those that are preserved.

[16:16:33.0000] <TabAtkins>
Though that's at the CSS level, so probably not usable here. :/

[16:16:57.0000] <Hixie>
yeah i'm definitely not looking at the white-space property here

[16:17:17.0000] <TabAtkins>
Okay, in that case, yeah, just trim all the ascii whitespace or whatever.

[16:18:27.0000] <JonathanNeal>
if anyone here runs webkit memes, i humbly submit http://i.imgur.com/LVjcEdD.jpg

[16:18:55.0000] <Hixie>
stdin.value.split('\n').reverse().sort(sorter).join('\n') is sane JS right?

[16:19:04.0000] <Hixie>
or am i smoking something

[16:20:24.0000] <TabAtkins>
I forget whether sort() returns something or does it in-place.

[16:21:07.0000] <TabAtkins>
Oh, it's in-place, but it returns itself for chaining.

[16:21:24.0000] <Hixie>
oh god, stupid api

[16:21:29.0000] <Hixie>
don't return something if you're mutating it

[16:21:30.0000] <Hixie>
gah

[16:21:44.0000] <Hixie>
makes it look like i'm doing functional stuff but then mutates stuff underneath it!

[16:21:46.0000] <TabAtkins>
That part's fine - it enables chaining.

[16:22:02.0000] <TabAtkins>
But it's bad that some parts of the API are functional and others mutate.

[16:22:25.0000] <TabAtkins>
Oh wait, never mind, reverse() also mutates.

[16:22:49.0000] <Hixie>
apis should look like they do what they do

[16:22:57.0000] <Hixie>
and should do what they look like they do

[16:22:59.0000] <TabAtkins>
Needs more bangs.

[16:23:14.0000] <TabAtkins>
stdin.value.split('\n').reverse!().sort!(sorter).join('\n')

[16:23:26.0000] <TabAtkins>
(Scheme idiom for mutating functions.)

[16:23:56.0000] <Hixie>
heh

[16:27:00.0000] <Hixie>
what's the js equivalent of the default JavaScript sorter?

[16:27:08.0000] <Hixie>
comparator, i guess i should say

[16:27:43.0000] <Hixie>
"If comparefn is not undefined and is not a consistent comparison function for the elements of this array (see below), the behaviour of sort is implementation-defined."

[16:27:46.0000] <Hixie>
sigh

[16:27:59.0000] <Hixie>
oh, that's for when your comparator is dumb

[16:28:01.0000] <Hixie>
not when it's null

[16:28:02.0000] <Hixie>
nevermind

[16:28:17.0000] <TabAtkins>
undefined, not null.

[16:55:55.0000] <Hixie>
i seem to be pretty good about making the problem smaller and smaller without actually making the problem easier.

[16:56:19.0000] <Hixie>
http://software.hixie.ch/utilities/js/sorter/index.html

[16:56:47.0000] <Hixie>
i have now reduced the problem to "just" tokenisation.

[17:25:39.0000] <zewt>
Hixie: maybe that page has changed since, but it never seems to set currentTokenAsNumber

[18:53:48.0000] <Hixie>
zewt: it's only 5% done :-)

[19:35:35.0000] <MikeSmith>
have the html5lib parser tests been merged into the html testsuite? If not doesn't it make sense they should be?

[23:16:45.0000] <MikeSmith>
the polyglot community is growing

[23:16:51.0000] <annevk>
http://lists.w3.org/Archives/Public/www-tag/2013Feb/0060.html really, the parser argument survives all the way into 2013?

[23:17:03.0000] <annevk>
Man, what a way to wake up.

[23:17:18.0000] <MikeSmith>
polyglot community now has four members: http://lists.w3.org/Archives/Public/pubclic-html/2013Feb/0121.html

[23:17:38.0000] <MikeSmith>
annevk: yeah I just now replied to that message

[23:19:55.0000] <annevk>
MikeSmith: you accidentally a word in the last sentence

[23:20:27.0000] <MikeSmith>
oh

[23:20:39.0000] <MikeSmith>
ah thanks

[23:21:33.0000] <MikeSmith>
/me sends the correction

[23:21:47.0000] <MikeSmith>
I really should just quit reading that thread

[23:22:05.0000] <annevk>
The argument also doesn't make sense. In the HTML case you just keep going. In the XML case you actively have to check if the grammar is correct. The whole notion of calling it "error correction" is wrong.

[23:22:42.0000] <MikeSmith>
I wonder if that guy even understands that

[23:22:57.0000] <MikeSmith>
from his messages, I guess he actually doesn't

[23:23:01.0000] <annevk>
MikeSmith: Not really sure how to deal with that either. I'm on the TAG, but I've decided long ago that my 386-time is used and I'll do other things instead.

[23:23:38.0000] <MikeSmith>
heh 386-time

[23:24:13.0000] <MikeSmith>
yeah I think you're wise to spend it on other problems that have a community of more than 4 people on record as caring about them

[23:24:43.0000] <MikeSmith>
there are bigger wrongs to right with that 386 time

[00:16:56.0000] <MikeSmith>
we have today's winner https://twitter.com/hsivonen/status/301940538171596801

[00:17:42.0000] <MikeSmith>
I wish you could give votes to tweets the way you can to bugs in bugzilla

[00:18:11.0000] <MikeSmith>
that on would get all my votes

[00:34:38.0000] <jgraham>
MikeSmith: Yeah, the html5lib tests are submitted to the testsuite

[00:38:30.0000] <jgraham>
https://github.com/w3c/html-testsuite/tree/master/old-tests/submission/Opera/html5lib

[00:38:31.0000] <MikeSmith>
jgraham: ah great, thanks

[00:38:43.0000] <jgraham>
They just need to be moved to the correct place

[00:39:01.0000] <jgraham>
(and perhaps regenersated with the newest test data)

[00:39:05.0000] <jgraham>
*regenerated

[00:39:50.0000] <MikeSmith>
yeah I guess Robin and Ms2ger have been working on moving the test

[00:39:55.0000] <MikeSmith>
s

[00:44:11.0000] <MikeSmith>
jgraham: do we have any existing tests that check whether the correct HTML*Element interface is exposed for an element?

[00:44:36.0000] <MikeSmith>
if not, would it be worth adding tests for that?

[00:53:43.0000] <jgraham>
MikeSmith: I can't think of any. You could just write idlharness.js tests for all elements. That would produce a lot of fails :)

[00:54:31.0000] <jgraham>
In unrelated thoughts, have we attempted to get jQuery and others to make it policy to submit tests when they find themselves working around browser bugs?

[00:55:28.0000] <jgraham>
http://blog.methvin.com/2013/02/tragedy-of-webkit-commons.html whines about the fact that it's hard to get bugs fixed

[00:56:18.0000] <jgraham>
But having public failing tests is one way to put pressure on vendors to fix things

[00:56:39.0000] <jgraham>
So it seems like a win for jQuery and a win for the web

[00:57:07.0000] <darobin>
jgraham: that's a very good idea

[00:57:21.0000] <darobin>
I believe there's been talk about it but no action

[00:57:24.0000] <odinho>
jgraham: We do have Julian Auborg. And now another jQuerist in TAG.

[00:57:55.0000] <jgraham>
odinho: In the nicest possible way "in the TAG" and "helping the Open Web" are not really the same thing

[00:57:56.0000] <darobin>
Julian has definitely been interested in testing, he was at TestTWF Paris and has asked several questions about the testing framework

[00:58:05.0000] <odinho>
Yeah

[00:58:06.0000] <darobin>
(some of which I still need to answer I'm afraid :()

[00:58:14.0000] <jgraham>
Yup

[00:58:15.0000] <odinho>
He's cool. And very interested in testing.

[00:58:23.0000] <darobin>
yeah he's cool

[00:58:29.0000] <jgraham>
Sure, I met him in Paris/Lyon too :)

[00:59:04.0000] <odinho>
He's test facilitator for XHR. And did the test with putting test status in the XHR spec.

[00:59:14.0000] <jgraham>
But while it's still at the level of "a few individuals are interested" it's not really good enough

[00:59:29.0000] <darobin>
I think he was a bit annoyed with someone here saying that he didn't understand the web platform well enough to use XHR (because he was using jQuery for some spec stuff)

[00:59:34.0000] <odinho>
Yeah, -- but I guess it's also to do with process.

[00:59:38.0000] <darobin>
(or maybe I'm mixing that up with someone else)

[00:59:57.0000] <jgraham>
We have to leverage their interest to make it something that happens by default

[01:00:16.0000] <jgraham>
darobin: I think annevk might have said that?

[01:00:27.0000] <jgraham>
But I could be wrong

[01:01:13.0000] <darobin>
"Never doubt that a few individuals who are interested can write some tests; indeed, it is the only thing that ever has."

[01:01:31.0000] <darobin>
-- Margaret Mead, at TestTWF

[01:01:41.0000] <darobin>
jgraham: might be possible

[01:01:49.0000] <darobin>
not a very smart comment whoever it came from

[01:03:11.0000] <jgraham>
darobin: It is hard to disagree that individuals write tests. But it is much more likely that they will write tests when they are in an environment where writing tests is normal and expected

[01:03:42.0000] <jgraham>
At the moment, for the OWP, there aren't so many environments like that

[01:03:50.0000] <darobin>
jgraham: I know, I was just having fun introducing anthropology completely gratuitously

[01:04:22.0000] <jgraham>
(at least for the case of browser-neutral, public tests)

[01:04:23.0000] <darobin>
in general, without worrying about getting the jQuery project involved directly, it would be a good idea to trawl through the jQ code and spot everything weird it does to work around a bug

[01:04:39.0000] <darobin>
I want write access to tobie's todo list :)

[01:05:04.0000] <darobin>
we should track these ideas as bugs

[01:05:13.0000] <darobin>
whoever wants to set it up gets to pick the bug tracker

[01:05:34.0000] <jgraham>
"it would be a good idea [...] to trawl through the jQuery code" /me phones the blood testing people to check for illicit substances in darobin's system

[01:05:52.0000] <darobin>
jgraham: it's something I've done before â it's actually not that long and pretty readable

[01:05:55.0000] <jgraham>
s/[...] //

[01:05:59.0000] <annevk>
darobin: just seemed wrong

[01:06:11.0000] <darobin>
annevk: what did?

[01:06:29.0000] <annevk>
darobin: using some ajax() abstraction instead of XHR in the XHR spec

[01:06:37.0000] <darobin>
ah :)

[01:06:43.0000] <darobin>
well, I expect people to dogfood

[01:06:44.0000] <annevk>
Though admittedly I'm not very impressed thus far with my three counterparts at the W3C

[01:07:13.0000] <darobin>
also, there's a reason why ajax() is popular, and it's not because people don't understand XHR!

[01:07:26.0000] <darobin>
well, that's another issue altogether

[01:08:10.0000] <darobin>
I'm pretty sure that Julian, who's in charge of ajax(), understands XHR pretty damn well in practice

[01:08:25.0000] <jgraham>
darobin: Anyway, I think my point is that us going through the jQuery code trying to look for weirdness doesn't scale

[01:08:46.0000] <darobin>
jgraham: I'm not disagreeing that we should get more people involved

[01:09:04.0000] <darobin>
but I was thinking of this as a project that could encourage participation

[01:09:14.0000] <darobin>
sort of like what Brackets does

[01:09:30.0000] <jgraham>
Brackets?

[01:09:31.0000] <darobin>
whenever they have a simple bug that's not critical, instead of solving it they add it to an "easy" list

[01:09:46.0000] <darobin>
so that people who want to get involved can find an easy entry point

[01:09:59.0000] <darobin>
http://brackets.io/

[01:10:03.0000] <jgraham>
[goodfirstbug]

[01:10:08.0000] <jgraham>
Or something

[01:10:08.0000] <darobin>
exactly

[01:10:30.0000] <darobin>
a lot of people know the jQ code, and/or are interested in it, and understand what a given part does

[01:10:56.0000] <darobin>
spot a bug, submit a test, make jQ smaller and faster over time can be an enticing avenue of action

[01:11:11.0000] <darobin>
I think it feels more concrete than "write a test against a spec"

[01:11:16.0000] <darobin>
anyway, just a thought

[01:11:36.0000] <darobin>
cat log >> tobie.todo

[01:13:16.0000] <jgraham>
Well whichever path we take to get there I am happy, as long as the destination is a culture where people that depend on the web, and benefit from a high degree of interoperability, are engaged in behaviours that actively improve interoperability, rather than assuming it is someone else's problem

[01:13:42.0000] <darobin>
you mean as opposed to only testing for WebKit?

[01:14:24.0000] <jgraham>
Well in the case of jQuery, I mean as opposed to hacking around any bugs they find and then years later moaning that no one fixed the bugs

[01:14:51.0000] <jgraham>
jQuery are relatively good about testing in lots of engines

[01:15:33.0000] <jgraham>
Although "relatively good" is quite a low bar here

[01:16:26.0000] <darobin>
they're actually pretty damn good

[01:16:41.0000] <jgraham>
Sure

[01:16:53.0000] <jgraham>
they could be a lot less good and still re relatively good though

[01:16:57.0000] <jgraham>
*be

[01:17:15.0000] <darobin>
heh, yeah

[01:17:29.0000] <darobin>
I've also been wondering if it would make sense to collaborate with http://swarm.jquery.org/

[01:18:30.0000] <darobin>
browserstack has run 272 million tests through that interface

[01:18:32.0000] <darobin>
it's not bad

[01:35:41.0000] <Ms2ger>
MikeSmith, I've written tests to check the HTML*Element interfaces

[01:40:36.0000] <jgraham>
Ms2ger++

[01:41:41.0000] <Ms2ger>
./html/semantics/interfaces.html I think

[01:44:10.0000] <Ms2ger>
"The polyglot feature represents, to me, its value proposition."

[01:44:12.0000] <Ms2ger>
/me snorts

[01:49:26.0000] <MikeSmith>
Ms2ger: thanks

[01:49:51.0000] <MikeSmith>
(for the tests not for the snorts)

[01:50:45.0000] <Ms2ger>
Hmm, do we still have a data element?

[01:51:46.0000] <MikeSmith>
far as I know

[01:52:03.0000] <Ms2ger>
/me puts reviewing that test on his todo list

[02:01:04.0000] <Ms2ger>
darobin, hey, feel like reviewing a test of mine? :)

[02:02:16.0000] <darobin>
Ms2ger: sure :)

[02:02:39.0000] <Ms2ger>
darobin, https://github.com/w3c/html-testsuite/pull/22

[02:04:36.0000] <darobin>
ta, I'll look

[02:11:53.0000] <annevk>
Got to love how http://www.brucelawson.co.uk/2012/vendor-prefixes-mobile-monoculture/ contrasts with http://www.brucelawson.co.uk/2013/opera-and-webkit-a-personal-perspective/

[02:14:35.0000] <sangwhan>
annevk: :P

[02:16:02.0000] <othermaciej>
I think Opera using WebKit is bad for the Web because WebKit has the least creative name of the major browser engines

[02:16:14.0000] <othermaciej>
compared to Gecko, Presto, Trident, it sounds so boring

[02:16:31.0000] <Ms2ger>
othermaciej, Gecko is hiring ;)

[02:16:50.0000] <othermaciej>
Ms2ger: if I could have the code name without having to touch the codeâ¦.

[02:17:24.0000] <jgraham>
othermaciej: Sure you can

[02:17:28.0000] <jgraham>
Go into PR

[02:17:57.0000] <Ms2ger>
Why do I have a libjs-jquery package installed?

[02:17:59.0000] <othermaciej>
me working for Mozilla PR would be a brilliant plan for destroying Mozilla

[02:18:39.0000] <Ms2ger>
I'd suggest joining Opera PR, but it's too late to do anything to them :)

[02:19:35.0000] <annevk>
othermaciej: if that's the only reason why it's bad it doesn't seem so bad

[02:19:44.0000] <annevk>
othermaciej: the web is already full of bad names and doing just fine

[02:19:54.0000] <othermaciej>
they managed to get a lot more press this week than they have for a while

[02:20:37.0000] <jgraham>
See, you are ideal for PR

[02:22:28.0000] <othermaciej>
based on this week, Iâd recommend changing engines once a month

[02:23:40.0000] <sangwhan>
Everyone should take turns and swap engines every once in a while. Ensures job security for browser engineers.

[02:25:50.0000] <darobin>
oooh, now there's an idea

[02:25:57.0000] <darobin>
it would also keep developers on their toes

[02:26:29.0000] <Ms2ger>
But then we'd all have to work on WebKit at times...

[02:27:02.0000] <jgraham>
Ms2ger: Not really

[02:27:30.0000] <jgraham>
Just mandate that every browser must have a short release cycle and each release must use a different engine in a fixed order

[02:27:49.0000] <jgraham>
The people working on the engines could keep working on one product at a time

[02:27:53.0000] <sangwhan>
...and you carefully schedule your vacations

[02:28:16.0000] <jgraham>
But the frontsends would all have to be engine-independent

[02:28:21.0000] <jgraham>
*frontends

[02:28:45.0000] <jgraham>
Also annevk would get a hippo

[02:32:59.0000] <annevk>
I'm in!

[02:36:11.0000] <MikeSmith>
so I had a mail problem  and lost most my unread list mail and bugmail from yesterday

[02:36:30.0000] <MikeSmith>
I'm wondering if I should feel bad about that

[02:39:50.0000] <annevk>
Sound wonderful :-)

[02:40:20.0000] <annevk>
Although I guess even if I lost email, I could still figure out what to work on by looking through the long lists of open bugs :/

[02:49:14.0000] <annevk>
Ugh, rewriting low-level bits of URL is no fun

[02:53:53.0000] <MikeSmith>
darobin: for generating the test-case numbers in http://w3c-test.org/html-testsuite/master/tools/coverage/ do you look for test-cases in the top-level dirs?

[02:54:10.0000] <darobin>
MikeSmith: you mean above depth 3?

[02:54:16.0000] <MikeSmith>
it seems like not because it'd otherwise be catching the tests in semantics/interfaces.html

[02:54:29.0000] <darobin>
/me looks

[02:54:32.0000] <MikeSmith>
I mean like that semantics/interfaces.html case

[02:55:10.0000] <darobin>
    "/html/semantics/interfaces.html": 131,

[02:55:43.0000] <darobin>
so they get detected â if they get lost it's later in the process

[02:56:16.0000] <darobin>
        "semantics": 1129,

[02:56:23.0000] <jgraham>
darobin: Why does that script think that "navigating across documents" has zero testable words in it? It's a giant, confusing, normative, algorithm

[02:56:29.0000] <darobin>
MikeSmith: well they seem to be listed?

[02:56:39.0000] <jgraham>
Which is unimplemeneted in all browsers

[02:56:51.0000] <MikeSmith>
darobin: hmm I guess there's no separatee row where they're listed?

[02:57:10.0000] <jgraham>
It's like the most desirable section of the spec to get tests for

[02:57:11.0000] <MikeSmith>
they're just added to the total but not listed separately?

[02:57:15.0000] <darobin>
MikeSmith: if a test file is right under semantics/ it goes into semantics

[02:57:27.0000] <MikeSmith>
ah

[02:57:32.0000] <MikeSmith>
ok, I see

[02:57:35.0000] <darobin>
if you want it in a subsection, you need to put it in a subsection dir

[02:57:51.0000] <MikeSmith>
ok

[02:57:53.0000] <darobin>
I treat the file names as meaningless

[02:57:57.0000] <darobin>
because, mostly, they are

[02:58:00.0000] <MikeSmith>
sure

[02:58:00.0000] <darobin>
jgraham: lemme look

[02:58:25.0000] <darobin>
it's very much possible that there are bugs with the spec analysis code â analysing the HTML spec is a FPITA

[03:00:55.0000] <darobin>
jgraham: yeah I confirm that's a bug

[03:01:16.0000] <darobin>
/me sighs

[03:02:24.0000] <darobin>
I wish I could use XPath for this, but it just causes PhantomJS to go crazy

[03:08:02.0000] <annevk>
same for application cache stuff

[03:08:24.0000] <annevk>
downloading-or-updating-an-application-cache is definitely stuff that requires tests (if we keep it long term that is, otherwise, care)

[03:08:43.0000] <annevk>
not doing tests for rendering also seems somewhat wrong

[03:15:00.0000] <Ms2ger>
annevk, want to review my rendering test? :)

[03:16:07.0000] <annevk>
Ms2ger: I'm on the TAG man, got more important things to do

[03:16:13.0000] <annevk>
Ms2ger: j/k, pointer?

[03:16:19.0000] <Ms2ger>
https://github.com/w3c/html-testsuite/pull/22

[03:16:49.0000] <annevk>
Hmm, that does look kinda painful to review

[03:17:23.0000] <Ms2ger>
Heh

[03:19:10.0000] <annevk>
Okay, so this is mostly about border attribute parsing?

[03:19:13.0000] <Ms2ger>
Yeah

[03:19:21.0000] <annevk>
Is there no reflecting attribute for that?

[03:19:48.0000] <Ms2ger>
https://bugs.webkit.org/show_bug.cgi?id=102112 fwiw

[03:23:27.0000] <annevk>
Oh, so the spec says that if the algorithm generates an error, it's fine

[03:23:40.0000] <annevk>
"is also found to have a value other than zero or to generate an error" was confusing me

[03:24:22.0000] <annevk>
is -0 less than 0?

[03:24:42.0000] <Ms2ger>
-0 is 0

[03:25:13.0000] <annevk>
okay, commented on the pull

[03:25:30.0000] <annevk>
is that the correct procedure?

[03:25:33.0000] <Ms2ger>
Sure

[03:25:43.0000] <Ms2ger>
Now I get to figure out how to merge this :)

[03:28:00.0000] <annevk>
And I can try to find something else to postpone rewriting fragile URL algorithms

[03:29:15.0000] <Ms2ger>
:D

[03:33:17.0000] <annevk>
Hmm if someone sets .href, do we just want to blow the previous query object away or do we want to update it?

[03:33:23.0000] <annevk>
I guess we want to update it.

[04:03:58.0000] <annevk>
Hmm, now URL terminology... I guess I can curse Hixie back while he's not around.

[04:09:57.0000] <smaug____>
annevk: curious, has anyone collected use cases for the new event listener registration thing. And also list of ways to add listeners in various script libraries

[04:10:24.0000] <annevk>
smaug____: mostly just looked at a bunch of libraries

[04:10:56.0000] <annevk>
smaug____: plus feedback from developers here and there

[04:11:08.0000] <smaug____>
but not written all that to a wiki or anything like that?

[04:12:01.0000] <annevk>
no

[04:13:27.0000] <annevk>
Nobody ever asks me for my wiki pages :-)

[04:16:20.0000] <annevk>
smaug____: jQuery has on()/off(); Dart has on.eventName.add()/remove(); X? has obj = on()

[04:17:02.0000] <annevk>
smaug____: then they have "event delegation" (wrong name yadayada) via selectors and given that default bubbling would be good

[04:17:37.0000] <annevk>
smaug____: the other use case that came up recently was only receiving trusted events

[04:17:58.0000] <annevk>
smaug____: which seems reasonable once we have a dictionary for registration options

[04:19:32.0000] <smaug____>
s/X/Prototype.js/ ?

[04:19:45.0000] <smaug____>
Dart isn't too relevant

[04:20:14.0000] <smaug____>
ah, yeah, Gecko has a way to receive only trusted events

[04:37:26.0000] <annevk>
smaug____: not sure when I'll get to specifying them though

[04:38:02.0000] <smaug____>
well, before specifying them it is better to know what to specify :)

[04:38:27.0000] <smaug____>
I mean, the feature set we want

[04:38:32.0000] <smaug____>
and syntax to use etc

[05:21:27.0000] <marcosc>
/me wishes WebIDL was on GitHub (*hint hint, heycam|away*)â¦ I'm just putting that out there. 

[05:35:27.0000] <zewt>
annevk: event delegation is the word everyone uses, so it's de facto the right name :P

[05:36:17.0000] <zewt>
what was the use case for receiving trusted events? i've never actually found a purpose of that flag (seems like a relic from the past, back when people visualized the "default action" as part of event dispatch rather than part of the caller)

[05:40:41.0000] <annevk>
I forgot, I don't store all that

[05:42:54.0000] <MikeSmith>
Ms2ger: are not the tests in dzenana-trenutak pull requests redundant with the existing semantics/interfaces.html tests?

[05:43:05.0000] <zewt>
know where it was actually requested? don't see "trusted" in the thread anywhere

[05:43:14.0000] <zewt>
would be nice to know the actual use case

[05:43:18.0000] <zewt>
afk

[05:48:02.0000] <annevk>
Probably the same use case why we have isTrusted in the first place. I think it relates to components.

[06:04:59.0000] <zewt>
the trusted flag predates components by about a century, right? heh

[06:05:23.0000] <Ms2ger>
MikeSmith, some of them probably are

[06:05:25.0000] <annevk>
Not really. XBL is pretty much the same thing

[06:05:46.0000] <Ms2ger>
idl.spec.whatwg.org? Mmmm

[06:05:50.0000] <annevk>
Well, century, that could be true I suppose if we're not too specific

[06:05:55.0000] <annevk>
Ms2ger: want

[06:08:46.0000] <zewt>
i don't really even know what xbl is, heh, other than it's something that isn't

[06:17:44.0000] <annevk>
The comments on http://robert.ocallahan.org/2013/02/and-then-there-were-three.html o_O

[06:22:34.0000] <zewt>
ultimately i suspect the diversity opera gives us doesn't actually benefit us that much, just because their market share is too small

[06:25:35.0000] <darobin>
it's not the market share that matters

[06:25:39.0000] <darobin>
it's the possibility

[06:26:07.0000] <annevk>
And it's getting feedback from a different set of implementation assumptions.

[06:26:16.0000] <annevk>
And a bunch more

[06:26:20.0000] <darobin>
what's more 2% market share isn't small

[06:26:25.0000] <darobin>
give me 2% of the web any day

[06:26:28.0000] <darobin>
I'll take that

[06:26:46.0000] <Ms2ger>
darobin, go move that repo instead of taking my market share

[06:26:58.0000] <darobin>
Ms2ger: tobie said no move it, so I no move it

[06:43:31.0000] <zewt>
it's small to authors :) 2% market share doesn't correspond to 2% development effort and testing to make our stuff work in it

[06:46:27.0000] <darobin>
well, turning away 1 person out of every fifty at your shop is hardly the key to success

[06:47:01.0000] <zewt>
depends on what your shop is, eg. what your resources are

[06:47:14.0000] <karlcow>
would 17% of mobile worldwide enough? http://gs.statcounter.com/#mobile_browser-ww-monthly-201112-201212

[06:47:15.0000] <karlcow>
or 41% mobile in Bangladesh enough? http://gs.statcounter.com/#mobile_browser-BD-monthly-201112-201212

[06:48:15.0000] <zewt>
that doesn't seem to distinguish opera mobile from opera mini, which from what i understand are very different beasts

[06:49:53.0000] <jgraham>
I would be interested to see numbers to back up the assertion that supporting WebKit + Gecko + Trident + Presto is significantly more expensive than supporting WebKit + Gecko + Trident

[06:50:24.0000] <karlcow>
14.6% Desktop in Russian Federation http://gs.statcounter.com/#browser-RU-monthly-201112-201212

[06:50:30.0000] <karlcow>
not enough market share?

[06:51:47.0000] <karlcow>
jgraham: specifically when most of the time, the interop issue was coming for the absence of the codepath more than the incompatibility (blocking through user agent sniffing, forgetting the prefixes in css and JS, not having unprefixed fallbacks)

[06:55:11.0000] <jgraham>
karlcow: Indeed, that matches my experience too. There are *lots* of sites that would have worked OK with trivial fixes << 2% of the cost of building the site.

[06:55:35.0000] <jgraham>
Just not blocking Opera would take negative effort, for example

[06:55:47.0000] <jgraham>
That doesn't apply to all cases of course

[07:00:45.0000] <Ms2ger>
Wait, track.readyState is an integer?

[07:01:59.0000] <jgraham>
An unsigned short, in fact

[07:02:09.0000] <jgraham>
readyState always is, so it's consistent

[07:02:27.0000] <jgraham>
Even if that's not how we do things these days

[07:20:15.0000] <Ms2ger>
jgraham, except it isn't; IDB and WebRTC use strings

[07:20:25.0000] <Ms2ger>
As do some of the B2G APIs

[07:41:58.0000] <MikeSmith>
jgraham: so looking at the outline algorithm I don't see that there's anything testable in it

[07:42:36.0000] <MikeSmith>
because it doesn't state that UAs are actually required to expose it, or how

[07:44:00.0000] <MikeSmith>
wouldn't it make sense to just have a document.outline?

[07:44:16.0000] <MikeSmith>
so that is actually gets exposed to Web content?

[07:44:38.0000] <MikeSmith>
and the Web developers could actually do something with it

[07:44:56.0000] <MikeSmith>
e.g., use it to generate a ToC

[07:45:18.0000] <Ms2ger>
No, then we'd have to implement it ;)

[07:45:27.0000] <jgraham>
MikeSmith: Well

[07:45:41.0000] <jgraham>
I think that browsers are not the intended conformance class

[07:45:59.0000] <MikeSmith>
maybe they should be

[07:46:07.0000] <jgraham>
Interesting idea

[07:46:20.0000] <jgraham>
One problem is that the algorithm is too heavyweight to use in style

[07:46:30.0000] <MikeSmith>
exposing an outline for Web devs to use seems like a potenally pretty useful thing to do

[07:46:40.0000] <jgraham>
So the obvious idea of ::heading(n) doesn't really work

[07:47:19.0000] <jgraham>
I could go with that

[07:48:33.0000] <MikeSmith>
go with it meaning you don't think it's a bad idea?

[07:48:50.0000] <jgraham>
Not until hsivonen explains to me that it is ;)

[07:48:52.0000] <Ms2ger>
"Last, nothing motivates most of us to act than seeing something wrong on the Internet."

[07:48:59.0000] <Ms2ger>
All too true

[07:50:23.0000] <jgraham>
MikeSmith: One concern might be that it would be slow to generate

[07:50:35.0000] <MikeSmith>
yeah

[07:51:17.0000] <MikeSmith>
so we deal with that by having it only generated on demand

[07:51:50.0000] <MikeSmith>
I wonder if there's any similar precedent

[07:51:57.0000] <jgraham>
Right, but the class to document.outline would block the UI thread

[07:52:09.0000] <MikeSmith>
right so we can't do it that way

[07:52:13.0000] <jgraham>
MikeSmith: Lots of things are generated lazilly inside UAs

[07:52:36.0000] <jgraham>
Although, maybe it is no worse than querySelector

[07:52:40.0000] <jgraham>
Or something

[07:52:48.0000] <jgraham>
In which case it is fast enough

[08:00:09.0000] <Ms2ger>
annevk, shouldn't DOM say (Mozilla Foundation) for the three of us now? :)

[08:02:31.0000] <MikeSmith>
jgraham: so no document.outline but instead created with document.createOutline(Element element)

[08:03:05.0000] <MikeSmith>
so you could do document.createOutline(document.documentElement) if you wanted an outline for the whole document

[08:03:35.0000] <MikeSmith>
or you could create an outline for whatever portion of the document you wanted one for

[08:43:01.0000] <jgraham>
MikeSmith: Is there a use case for a partial outline?

[08:43:25.0000] <Ms2ger>
TOCs for individual posts on blogs?

[08:44:29.0000] <MikeSmith>
yeah

[08:44:50.0000] <MikeSmith>
TOCs per section, in a long single-page doc

[08:45:10.0000] <Ms2ger>
Hell, the HTML spec

[08:45:38.0000] <MikeSmith>
hah yeah

[08:45:58.0000] <MikeSmith>
plus that's a nice general statement

[08:46:50.0000] <MikeSmith>
curse

[08:47:04.0000] <MikeSmith>
like Khaaaaaan!!

[08:48:53.0000] <MikeSmith>
jgraham: could still make it so that document.createOutline() does it for the whole document

[08:48:57.0000] <MikeSmith>
I guess

[08:49:36.0000] <MikeSmith>
or add .createOutline() to Element :)

[08:49:54.0000] <MikeSmith>
but I think that would not be so popular

[08:50:57.0000] <dglazkov>
good morning, Whatwg!

[08:50:59.0000] <MikeSmith>
or HTMLELement

[08:51:07.0000] <MikeSmith>
rather

[08:51:10.0000] <dglazkov>
I was on vacation yesterday. Did anything interesting happen?

[08:51:20.0000] <MikeSmith>
though still not likely be popular

[08:51:24.0000] <jgraham>
MikeSmith: Or Object :p

[08:51:29.0000] <MikeSmith>
dglazkov: the Quickening

[08:51:39.0000] <dglazkov>
again?!

[08:51:41.0000] <MikeSmith>
plus webkitmemes

[08:51:44.0000] <dglazkov>
I thought we cancelled that

[08:52:27.0000] <MikeSmith>
dglazkov: nope, you're on the way to top, Highlander

[08:52:47.0000] <MikeSmith>
it'll just be you and Sean Connery in the end

[08:53:01.0000] <dglazkov>
I'll yield to Sean. He seems like a cool dude

[08:53:21.0000] <jgraham>
I have never seen Highlander, but I am imagining dglazkov on top of a Scottish mountain, shirtless, screaming "I am the only one"

[08:53:33.0000] <jgraham>
It is quite distressing

[08:54:22.0000] <dglazkov>
when did I lose the shirt?

[08:54:30.0000] <jgraham>
Quite early on

[08:54:39.0000] <dglazkov>
hmm.

[08:54:45.0000] <MikeSmith>
this picture of dglazkov evens looks a lot like Sean Connery: http://media.weirdworm.com/img/misc/6-reasons-highlander-is-awesome/connery.jpg

[08:54:51.0000] <dglazkov>
that does seem distressing

[08:55:50.0000] <MikeSmith>
oh man this dglazkov picture even more so http://www.danvelazquez.com/wp-content/uploads/2012/06/zardoz.jpg

[08:56:31.0000] <dglazkov>
red underwear. Never could resist that.

[08:57:32.0000] <MikeSmith>
then there's the new WebKit logo that's been proposed http://www.retronaut.com/wp-content/uploads/2012/12/zardoz-12.jpg

[08:58:04.0000] <dglazkov>
stop, stop. You're bringing back memories of that terrible, terrible movie. I give up.

[09:00:40.0000] <MikeSmith>
dglazkov: "the rudeness with which you made your demand is a sign of dirty conscious"

[09:01:36.0000] <dglazkov>
<_<

[11:19:35.0000] <wilhelm>
MikeSmith: You're right. Reading Haavard's tweets is a bad idea. Infuriating stuff. :P

[11:19:57.0000] <othermaciej>
why is it infuriating?

[11:23:55.0000] <MikeSmith>
wilhelm: yeah, whatever universe he lives in, it ain't ours

[11:25:15.0000] <MikeSmith>
othermaciej: he's the Asa Dotzler of Opera

[11:25:29.0000] <wilhelm>
Pretty much.

[11:25:44.0000] <othermaciej>
yeah but heâs always been, hasnât he?

[11:26:34.0000] <wilhelm>
Yes, but always towards some other browser vendor. Not against former co-workers. (c:

[11:28:08.0000] <othermaciej>
ah

[11:28:33.0000] <othermaciej>
well, if heâs going to be reflexively pro-opera, I guess he has to be against anyone who is against operaâs current position

[11:29:06.0000] <wilhelm>
Yes. I just realized the same thing.

[11:29:25.0000] <wilhelm>
We've always been at war with Eurasia.

[11:29:53.0000] <MikeSmith>
othermaciej: yeah true. but it has always baffled me why he's kept on at Opera while massively more productive people are given an invite to work elsewhere

[11:29:57.0000] <othermaciej>
has Asa ever jumped on ex-Mozilla people?

[11:30:43.0000] <othermaciej>
I do not know what Haavardâs official day job is or how good he is at it so I canât comment

[11:32:51.0000] <othermaciej>
I think Operaâs choice is reasonable under the circumstances though itâs regrettable to have fewer serious browser engines

[11:33:18.0000] <MikeSmith>
I'll bite my tongue on that at this point (about dude)

[11:35:04.0000] <wilhelm>
Yes, Opera has been on a collision course with that iceberg for years. And the captain was asleep. My frustration is about the poor decisions that made this inevitable, not the switch itself.

[11:35:10.0000] <MikeSmith>
othermaciej: outside of the opera thing there are pretty obviously some serious challenges here with this code

[11:35:12.0000] <tantek>
"Support -webkit- prefixes? Why not all of WebKit?"

[11:36:36.0000] <MikeSmith>
othermaciej: this is not 2001 or whatever or even 2008

[11:37:39.0000] <othermaciej>
WebKit: it

[11:37:43.0000] <othermaciej>
âs not just a prefix

[11:40:20.0000] <tantek>
â¦ it's several prefixes (-webkit-, -khtml-, â¦ )

[11:43:17.0000] <Philip`>
Opera should submit a patch to WebKit to add support for -o- prefixes, since there's probably a few sites that rely on that

[11:48:13.0000] <wilhelm>
Stock markets are funny. "We missed our projected earnings." -10%! "Someone said Facebook may buy us!" +20%! "It's Tuesday!" +5%! ... "18 years of development - and our codebase is worthless." -2%!

[11:51:17.0000] <marcosc>
LOL

[13:08:35.0000] <freedrull>
are there any efforts being made to make <audio> aware of icecast/shoutcast metadata updates?

[14:23:40.0000] <doublec>
freedrull: there's been discussion on the mailing list about changes to metadata but I'm not aware of anything specific happening

[14:52:59.0000] <volkmar>
how should CORS behave from localhost (ie. not really from another origin)

[14:59:41.0000] <roc>
I wish Webkit leaders would come out for or against the "screw Web standards, we want a Webkit monoculture" movement

[15:00:05.0000] <TabAtkins>
A lot of high WebKit people aren't on the Twitters. :/

[15:00:35.0000] <TabAtkins>
(I havent' written anything myself, but I've been RTing like mad.)

[15:00:50.0000] <roc>
Anything in public would do

[15:04:45.0000] <jamesr>
roc, what sort of statement would you want to see?

[15:05:57.0000] <jamesr>
"we don't want a monoculture, thus XXXXXX". what's the XXXXXX you want to read?

[15:09:55.0000] <roc>
I just want to know who in Webkit wants a monoculture, and who doesn't

[15:10:35.0000] <roc>
partly for my own curiosity, and partly so when people advocate a monoculture I can say, among other things, "and these Webkit people agree with me"

[15:10:46.0000] <jamesr>
who's advocating a monoculture?

[15:11:07.0000] <roc>
because whenever *I* say a monoculture is bad, people who disagree say that that's just because I'm not part of the monoculture

[15:11:22.0000] <roc>
jamesr: John Resig

[15:11:36.0000] <jamesr>
he's not part of the WebKit leadership (or the community in general AFAIK)

[15:11:37.0000] <roc>
people commenting on my blog post

[15:11:43.0000] <roc>
right

[15:12:01.0000] <nimbu>
why is this such an 'us vs them' discussion?

[15:12:11.0000] <nimbu>
its not 'with us or against us'

[15:12:21.0000] <roc>
I didn't say the "screw Web standards, we want a Webkit monoculture" movement is actually coming from the Webkit community

[15:12:41.0000] <jamesr>
i think that would be fairly obvious

[15:12:44.0000] <nimbu>
idiotis are uniformly distributed

[15:12:48.0000] <nimbu>
-i

[15:12:53.0000] <nimbu>
(clearly i am an idiot)

[15:13:14.0000] <jamesr>
for the record, i'm also against smallpox, terrorism, and that nasty feeling you get when your sock gets wet inside your shoe

[15:13:15.0000] <roc>
jamesr: it's not obvious to John Resig at least, and he's no idiot

[15:13:19.0000] <jamesr>
is he?

[15:13:34.0000] <jamesr>
is he implying that the WebKit leaders want a monoculture, or that *he* wants a monoculture?

[15:14:11.0000] <nimbu>
and i dont think he has ever advocated 'screw other browsers' theory

[15:14:30.0000] <roc>
he does, or at least, he doesn't care if there is one

[15:14:32.0000] <jamesr>
if the answer is that *he* wants a monoculture, then the inclinations of WebKit leaders is kind of irrelevant

[15:14:41.0000] <jamesr>
we don't have any control over what he thinks or wants

[15:15:30.0000] <karlcow>
/me doesn't understand this IRC exchange. :)

[15:15:36.0000] <jamesr>
things that are bad for WebKit or the web community in general may very well be good for jresig

[15:15:58.0000] <karlcow>
but I agree with nimbu on "idiotis are uniformly distributed"

[15:16:22.0000] <karlcow>
even on keeping the i in idiotis, it is kind of cute and make it like a disease

[15:16:33.0000] <nimbu>
:P

[15:16:41.0000] <karlcow>
;)

[15:17:31.0000] <jamesr>
roc, to be clear, i think a monoculture is bad. othermaciej, to pick a "WebKit leader" who has spoken about this topic, has expressed the same sentiment consistently for years

[15:18:05.0000] <roc>
jamesr: the problem is that anyone who's not a Webkit person arguing against a Webkit monoculture is easily seen as biased

[15:18:12.0000] <jamesr>
so implying that the folks commenting on your blog are pulling support from an implicit or explicit advocacy for monoculture from WebKit leaders seems highly disingenuous

[15:18:22.0000] <roc>
I'm not implying that at all

[15:19:36.0000] <jamesr>
but you feel that WebKit community members have an obligation to argue with people on the internet?

[15:19:38.0000] <roc>
there's a big discussion going on and I haven't seen Webkit leaders say anything and I'd like to. That's all.

[15:19:38.0000] <roc>
Have you got something on the record I can link to at least?

[15:20:20.0000] <jamesr>
i'm pretty sure this channel is logged, maciej was discussing this earlier

[15:22:45.0000] <roc>
When something blows up like this I think it's helpful to reiterate positions. We don't lose a major browser engine all that often.

[15:23:11.0000] <roc>
that doesn't translate into an obligation to argue with people on the Internet.

[15:23:33.0000] <jamesr>
but i'm not sure what sort of statement you are trying to get. a general sentiment that monoculture is bad, or some sort of condemnation of Opera's actions?

[15:23:45.0000] <roc>
the former.

[15:24:20.0000] <hober>
roc: see http://krijnhoetmer.nl/irc-logs/whatwg/20130214#l-990

[15:24:25.0000] <roc>
I don't expect anyone to condemn Opera's actions ... I don't. They're doing what they need to do to survive.

[15:25:02.0000] <jamesr>
certainly. they're in a tough spot

[15:25:04.0000] <roc>
hober: thanks

[15:25:27.0000] <roc>
that'll do for now.

[15:46:31.0000] <karlcow>
/me is curious to know what roc is calling a WebKit leader? Reviewers?

[15:48:55.0000] <roc>
Maciej, Adam Barth, James himself, Hyatt, Ollie ... the old-timers, the great and the good :-)

[15:51:19.0000] <karlcow>
ah âº ok thanks.


2013-02-15
[16:36:25.0000] <Hixie>
i guess i shouldn't support fractional exponents in this sorting thing

[16:36:31.0000] <Hixie>
as in 4e0.5

[16:37:18.0000] <Hixie>
since that's pretty weird

[16:38:06.0000] <Hixie>
4e1.5 => 4, e, 1.5

[16:38:44.0000] <TabAtkins>
Yes.  CSS and JS don't support fractional exponents.

[17:39:27.0000] <Hixie>
hm, i want 4.4e2e2 => 4.4, e, 2, e, 2

[17:39:40.0000] <Hixie>
but that means keeping state between stages of tokenisation

[17:39:42.0000] <Hixie>
sigh

[17:41:26.0000] <zewt>
does it know that s1e2 < s2e2

[17:41:38.0000] <Hixie>
"it"?

[17:41:50.0000] <zewt>
whatever sorting monster you're contriving :P

[17:41:59.0000] <Hixie>
it is my goal that s1e2 < s2e2, yes, because they tokeniser to ["s", 1, "e", 2]

[17:42:04.0000] <zewt>
("it" may be a future-tense thing)

[17:42:16.0000] <Hixie>
tokenise, even

[17:42:29.0000] <zewt>
tokenize :)

[17:42:54.0000] <othermaciej>
roc: I expect the vast majority of people hacking on WebKit would not want it to be the only browser engine in the world, but on the other hand most of us probably donât care to make public statements on wacky things people say about WebKit on the internet

[17:42:59.0000] <zewt>
just checking that it wouldn't treat season/episode notation as "s", 1e2

[17:43:15.0000] <othermaciej>
also I doubt opinions will have much effect on how many viable browser engines actually exist

[17:43:56.0000] <roc>
I think the number of people telling Web developers to not bother testing on anything other than Webkit has some effect

[17:43:57.0000] <Hixie>
true dat

[17:44:05.0000] <Hixie>
and true dat also

[17:44:43.0000] <Hixie>
though i imagine the market share of non-webkit mobile browsers (or lack thereof) has more of an impact on what people test, than what people say people should test.

[17:44:59.0000] <roc>
sure

[17:45:59.0000] <Hixie>
zewt: "s 1e2" => "s, 100" though

[17:46:48.0000] <zewt>
personally i think supporting sorting exponential notations is sort of weird and unneeded and i'd much rather have some form of natural sorting (but we've had that conversation)

[17:47:28.0000] <Hixie>
stuart (of sortable.js) apparently gets feedback asking for exponent support.

[17:47:32.0000] <Hixie>
so we're supporting it.

[17:47:46.0000] <Hixie>
(my opinion is the same as yours though)

[17:47:55.0000] <Hixie>
(seems unintuitive that this would actually occur.)

[17:48:53.0000] <zewt>
(i'd question the frequency of those requests vs. the complexity, but I assume you've already done that)

[17:49:42.0000] <zewt>
are they actually requests for sorting exponents mid-string, and not just as isolated strings?

[17:50:04.0000] <zewt>
(may not matter in the design you're going for, just trying to get a picture)

[17:50:30.0000] <Hixie>
the complexity isn't much

[17:50:36.0000] <zewt>
i think you and i are going to run the internet out of parentheses

[17:50:47.0000] <Hixie>
i expect the requests are for isolated

[17:52:12.0000] <zewt>
maybe i'm getting towards contrived, but what if you're sorting "%04x", say a table of Unicode codepoints in hex, where "2e10" is a hex value, not an exponent

[17:54:20.0000] <Hixie>
zewt: come again?

[17:54:35.0000] <Hixie>
oh like hte string "2e10" meaning "2e 10"?

[17:54:45.0000] <zewt>
yeah

[17:54:48.0000] <Hixie>
dunno, are there pages on the web that do this?

[17:54:53.0000] <zewt>
vs. 0x2e10/U+2E10

[17:55:36.0000] <zewt>
don't know

[17:56:02.0000] <zewt>
suppose if it became an issue, you could set a separate explicit sort key like "U+2E10" to prevent it from being sorted as a number

[17:56:14.0000] <Hixie>
well at a minimum right now i'm expecting 20a1 to sort as being after 3aa1, which is something to consider

[17:57:00.0000] <zewt>
or a sort key of the same number in decimal

[18:09:16.0000] <roc>
sigh. I just reflexively went to test something in Opera.

[18:09:34.0000] <zewt>
i suggest pointer-events

[18:19:36.0000] <zewt>
holy shit

[18:19:44.0000] <zewt>
paypal won't let you copy and paste a password in when changing password

[18:19:56.0000] <zewt>
dear browsers: sites should not have the ability to do this

[18:20:37.0000] <zewt>
for sites like paypal i use random passwords from pwgen that i always copy and paste because they're pretty much untypable, unimpressed by paypal preventing security

[18:27:23.0000] <Hixie>
zewt: disable js for the site

[18:28:28.0000] <zewt>
quicker to edit the inputs in chrome inspector

[18:44:21.0000] <zewt>
(of course, the site also prevented the context menu from opening--another thing browsers should never allow)_

[18:46:25.0000] <zewt>
(granted I don't know the general case for that, at least for things like games, but it's really abusive most of the time)

[19:58:32.0000] <MikeSmith>
didn't know Rust backend uses LLVM

[19:59:50.0000] <doublec>
it used to be a custom generator way back when, but is LLVM now.

[20:00:23.0000] <MikeSmith>
doublec: ok

[20:00:47.0000] <MikeSmith>
roc: thanks for http://people.mozilla.com/~roc/Samsung/MozillaRustAndServo.pdf

[20:00:49.0000] <MikeSmith>
nice read

[20:01:13.0000] <MikeSmith>
other interesting stuff as well in http://people.mozilla.com/~roc/Samsung

[20:01:28.0000] <MikeSmith>
dunno why that directory is named Samsung but I can guess

[20:02:12.0000] <roc>
hehe

[20:02:39.0000] <roc>
http://robert.ocallahan.org/2012/04/korea.html

[20:04:33.0000] <MikeSmith>
ah cool

[20:04:45.0000] <MikeSmith>
I remember reading that now at the time

[20:14:12.0000] <MikeSmith>
oh boy the online kindle reader, https://read.amazon.com/, it uses a separate canvas element for each word on the page

[20:16:27.0000] <MikeSmith>
https://gist.github.com/sideshowbarker/4958566

[20:22:09.0000] <zewt>
sounds like a jr. high school kid's idea of DRM

[20:23:33.0000] <MikeSmith>
zewt: yeah

[20:24:03.0000] <zewt>
meanwhile forcing browsers to optimize for a completely imbecilic usage pattern

[20:24:47.0000] <MikeSmith>
I'd like the meet the people who dreamed this up

[20:24:54.0000] <MikeSmith>
man everything possible about the ebook/epub user experience is FUBAR

[20:26:10.0000] <MikeSmith>
copy/paste of a sentence or paragraph from a book is a sane world something you'd really want to help your users do

[20:26:16.0000] <zewt>
sounds like management going "we want web delivery, how can we secure it" and developers knowing it's impossible go "well uh ... how about (something ridiculous)" and management going "that sounds impenetrable!"

[20:26:24.0000] <MikeSmith>
heh

[20:28:26.0000] <MikeSmith>
I bet somebody has already written a greasemonkey script for thi

[20:29:24.0000] <zewt>
mental image of book publishers going "we want to make sure nobody can copy our books" and printing houses offering to print books with barbed wire down the spine and the blade of a knife pointing out of the page

[20:29:28.0000] <MikeSmith>
if not I should write one myself and host on w3.org and announce it on the w3c home page

[20:29:57.0000] <MikeSmith>
zewt: heh yeah that's the UX equivalent here

[20:30:06.0000] <zewt>
greasemonkey is pretty much my instinctive response to idiot webpages

[20:31:37.0000] <MikeSmith>
I really should do this. Amazon is not even a W3C member

[20:32:06.0000] <zewt>
sites being dicks do give me the urge to thwart them

[20:32:13.0000] <zewt>
not that that's limited to websites

[20:32:53.0000] <zewt>
i've actually seen captchas that were separate letters in different images positioned randomly with css

[20:32:54.0000] <MikeSmith>
yeah that's the reaction that I think most people have

[20:33:13.0000] <zewt>
captchas are a pretty hilarious category of really bad homebrew stuff

[20:33:50.0000] <MikeSmith>
yep another massive eff-the-user fail

[20:33:52.0000] <zewt>
static black and white text on top of CRAAAAZY random color noise--clearly filtering out colorful content from monochrome content is something only a human can reasonably do

[20:34:03.0000] <MikeSmith>
heh

[20:34:12.0000] <MikeSmith>
ah yeah I see what you mean

[20:34:27.0000] <zewt>
https://zewt.org/~glenn/recaptcha%20WHAT.png

[20:34:48.0000] <zewt>
vvvvvv

[20:38:08.0000] <MikeSmith>
zewt: what's this image telling me?

[20:38:19.0000] <zewt>
that's a recaptcha, heh

[20:38:27.0000] <zewt>
assuming you know how recaptcha works

[20:43:39.0000] <MikeSmith>
yeah OK

[20:48:13.0000] <zewt>
yeah seriously, OK

[20:50:44.0000] <MikeSmith>
zewt: your sorted-by-awesomeness list is interesting but I can't tell if it's in descending order or ascending

[20:52:02.0000] <zewt>
that's movies reviewed by capalert.com, movies he hated the most at the top

[20:52:18.0000] <zewt>
one of those "if this guy really hates a movie, it must be worth something" sites

[20:53:17.0000] <MikeSmith>
roc, doublec : "Eich: We hired somebody a while ago. He met a guy who was working for us and they're both OCaml hackers, and he was doing his own OCaml hacking on the side. And he was thinking about problems that we were seeing in my static analysis. he knows not just the source language, but the runtime, and he's hacked native methods and he was writing an OCaml operating system. we needed somebody different, and this guy was different."

[20:53:24.0000] <MikeSmith>
zewt: :)

[20:53:48.0000] <MikeSmith>
zewt: I like Mary Poppins man. You not giving it enough credit.

[20:53:50.0000] <zewt>
sounds like a reason to never ever hire someone

[20:53:55.0000] <MikeSmith>
heh

[20:54:24.0000] <MikeSmith>
roc, doublec : that's talking about Graydon Hoare?

[20:54:48.0000] <roc>
perhaps. I don't know.

[20:55:13.0000] <zewt>
making ice cream out of bacon and macaroni salad is different, but nevertheless probably an unwise hire

[20:57:00.0000] <roc>
Graydon is in fact a great guy and a great hire, at least for what he's currently working on.

[20:57:55.0000] <MikeSmith>
roc: yeah seems like he must be

[20:57:56.0000] <zewt>
possible, so long as it has nothing to do with "(word) operating system"

[20:58:24.0000] <roc>
Mozilla wouldn't build an operating system. That's crazy.

[20:58:25.0000] <roc>
oh wait

[20:59:24.0000] <MikeSmith>
haha

[20:59:55.0000] <zewt>
bacon macaroni ice cream OS

[21:01:17.0000] <MikeSmith>
btw I think it's a misnomer to call b2g and ChromeOS operating systems. I think there more runtime environments or desktop environments.

[21:01:28.0000] <MikeSmith>
like Qt+KDE

[21:01:41.0000] <zewt>
where? there

[21:03:59.0000] <roc>
maybe, but you take away the Linux desktop environment you can still have a kind of usable system

[21:04:10.0000] <roc>
for B2G and chromeOS, not so much.

[21:04:38.0000] <zewt>
i can't think of anything of the form "letter 2 letter" as anything but a horrible 90s buzzword

[21:05:35.0000] <zewt>
granted, "2 noun 1 noun" might be seen as significantly worse

[21:12:08.0000] <MikeSmith>
well it's called Firefox OS now isn't it?

[21:13:48.0000] <roc>
yes but it's still pronounced B2G

[21:15:24.0000] <MikeSmith>
heh

[21:19:16.0000] <zewt>
the g is silent

[21:29:30.0000] <MikeSmith>
so another result of Amazon's every-word-in-a-canvas-element thing is that when you try to read a book using voiceover, the voice pauses unnaturally after every single word

[21:37:18.0000] <zewt>
if it includes a machine-parsable equivalent of each word ... what possible point does it have

[22:48:04.0000] <MikeSmith>
Hixie: I think the spec should explicitly make browsers a conformance class for the outline algorithm

[22:48:32.0000] <MikeSmith>
and should define some means for exposing the outline to Web content

[22:48:47.0000] <MikeSmith>
so that Web developers could actually do something with it

[22:49:33.0000] <MikeSmith>
document.createOutline(Element element)

[22:50:14.0000] <MikeSmith>
so you could do document.createOutline(document.documentElement) if you wanted the outline for the whole document

[22:51:00.0000] <MikeSmith>
or whatever other element if you wanted to create an outline for some part of the document

[22:53:30.0000] <MikeSmith>
a use case for a partial outline would be if you have a long document (like the HTML spec) as a single page and, e.g., you want to generate TOCs for each section, with its subsections in the TOC

[22:55:59.0000] <MikeSmith>
maybe along with it have a no-arg document.createDocumentOutline() as a convenience

[23:24:38.0000] <Hixie>
MikeSmith: the algorithm is too prohibitively expensive to expose, imho

[23:24:56.0000] <Hixie>
MikeSmith: (to expose in an environment where you can change the entire outline every 10ms)

[23:31:03.0000] <MikeSmith>
Hixie: is it worth me taking it to the list, to get some implementor feedback?

[23:32:24.0000] <MikeSmith>
or you think it's too much of a non-starter as far as the performance issue not being practically addressable in implementations?

[23:34:13.0000] <MikeSmith>
Hixie: but wait wouldn't the behavior just be that the outline from document.createOutline is not live

[23:34:51.0000] <MikeSmith>
just a static documentFragment (or whatever kind of tree of nodes)

[23:36:28.0000] <MikeSmith>
and if an application is changing the DOM in way that would cause the (abstract) outline(s) to change, then it's just up to them to regenerate the outline(s) if they want

[23:37:25.0000] <MikeSmith>
anyway for a lot of document cases the outline is not actually going to be changing so it's  not a problem anyway

[23:38:02.0000] <MikeSmith>
for typical documents as opposed to dynamic applications

[23:39:05.0000] <MikeSmith>
and anyway I would wonder how much a dynamically changing Web application would want to be using headings much

[23:39:55.0000] <MikeSmith>
or how many developers of such applications would want to include some kind of generated outline in them

[01:51:59.0000] <Stevef_>
mikesmith: how does the outline algorithm handle hidden sections?

[01:53:52.0000] <wilhelm>
Opera buys Skyfire. Heh.

[01:54:55.0000] <MikeSmith>
wilhelm: for 155 million USD

[01:55:21.0000] <MikeSmith>
of which I guess /only/ 50 million is cash, and the rest is some kind of bonus thing

[01:55:29.0000] <wilhelm>
Equal to three years of profits.

[01:55:45.0000] <wilhelm>
OK, between 1 and 3 years of profits.

[01:57:51.0000] <MikeSmith>
so why did they buy it? I was chatting with somebody earlier today who pointed out that Opera has some devs that are well-know for doing some insanely great stuff around compression

[01:58:51.0000] <MikeSmith>
and it sure would have cost less than 50 million to build whatever they bought in-house instead

[02:00:26.0000] <wilhelm>
Synergy, I'm sure!

[02:01:46.0000] <MikeSmith>
heh

[02:02:13.0000] <MikeSmith>
maybe the existing partner deals that Skyfire has

[02:02:30.0000] <MikeSmith>
but still I can't see that being worth that much

[02:02:46.0000] <MikeSmith>
not like I have any insight into it though

[02:03:55.0000] <Philip`>
""Opera and Skyfire are a natural fit," said Lars Boilesen, CEO, Opera Software. "Both companies have evolved far beyond their browser roots. [...]" - death is a necessary part of natural selection so I suppose it does count as evolution, but I thought you usually wanted your competitors to die, not yourself

[02:05:29.0000] <wilhelm>
(c:

[02:22:37.0000] <JonathanNeal>
How does the whatwg plan to address the russian meteor? I don't think current spec accounts for it. Typical.

[02:27:33.0000] <karlcow>
garbage collector?

[02:34:50.0000] <JonathanNeal>
Excellent. You thought of everything. </blink>

[03:28:07.0000] <annevk>
MikeSmith: oops, replied on that www-tag thread

[03:47:27.0000] <karlcow>
/me polyburns annevk in hell

[03:47:59.0000] <annevk>
Is that different from normal burning?

[03:48:04.0000] <karlcow>
or is it burns annevk in polyhell

[03:48:12.0000] <karlcow>
I wonder which serializations

[03:48:14.0000] <karlcow>
:p

[03:49:03.0000] <annevk>
By replying to that thread I pretty sure I burned myself, although thus far nobody has bitten on me calling it a waste of time in http://lists.w3.org/Archives/Public/www-tag/2013Feb/0055.html

[03:49:18.0000] <annevk>
s/I pretty/I'm pretty/

[03:49:48.0000] <jgraham>
"i'm pretty" - annevk

[03:50:11.0000] <jgraham>
Just need an occasion to quote you on that ;)

[03:50:39.0000] <annevk>
Could be a nice caption for those nice photos of my floating around on the web...

[04:02:05.0000] <karlcow>
heh

[04:06:02.0000] <karlcow>
annevk is trying to compete with "Right Said Fred"

[04:06:29.0000] <annevk>
man, s/my/me/

[04:07:14.0000] <annevk>
oh this is great, because I'm in Switzerland Google gives me German search results

[04:46:15.0000] <MikeSmith>
annevk: the TAG rules are that you now own that thread

[04:46:21.0000] <MikeSmith>
or it now owns you

[04:46:34.0000] <MikeSmith>
in for a penny, in for pound

[04:48:44.0000] <Ms2ger>
/me steals MikeSmith's pennies

[04:51:09.0000] <MikeSmith>
/me sees the space where all his missing pennies were, and repurposes the space to stash some more dope

[04:51:25.0000] <Ms2ger>
/me steals that too

[05:02:56.0000] <karlcow>
/me sees the sky fire.

[05:12:14.0000] <darobin>
karlcow?

[05:13:44.0000] <karlcow>
darobin: that's the theme of the day it seems. Russia Sky fire, 500 injured. Opera xx fired Skyfire 57 hired. :)

[05:14:56.0000] <darobin>
ooooh

[05:15:20.0000] <darobin>
the Russia pics are scary

[05:30:31.0000] <MikeSmith>
I like the back story of some of the Russia videos, the fact that they're from dashboard-mounted cameras, and the fact that the reason so many people have dashboard-mounted cameras is that it's so common for people to jump in front of cars to fake accidents and scam money

[05:33:44.0000] <wilhelm>
That explains why there is enough material for those "driving in Russia" videos. Yikes.

[05:34:15.0000] <MikeSmith>
so when I asked Hixie about the idea of exposing an outline mechanism to Web content, he said, "the algorithm is too prohibitively expensive to expose, imho. (to expose in an environment where you can change the entire outline every 10ms)"

[05:35:52.0000] <MikeSmith>
which I can understand, that would be the case if we were talking about it as a property of the document object, document.outline, that needs to get updated

[05:37:08.0000] <MikeSmith>
but what I was asking about isn't that but instead just something like "var outline = document.createDocumentOutline()"

[05:37:57.0000] <annevk>
MikeSmith: what would it return?

[05:38:15.0000] <annevk>
MikeSmith: a tree of sorts?

[05:38:22.0000] <MikeSmith>
yeah

[05:38:44.0000] <MikeSmith>
could just be a DocumentFragment couldn't it?

[05:39:17.0000] <MikeSmith>
hmm no

[05:39:50.0000] <MikeSmith>
just an Outline object that is a tree of Section objects that are just nodes

[05:41:47.0000] <MikeSmith>
anyway unless I'm misunderstanding something, doing it as var outline = document.createDocumentOutline() is not going to cost anything unless/until you actually call it

[05:43:14.0000] <MikeSmith>
and it only costs once when you call it because it just builds a static outline

[05:48:34.0000] <annevk>
Just noticed Brendan does not spell WHATWG correctly either

[05:48:48.0000] <annevk>
howcome uses WHAT WG, Brendan WHAT-WG

[05:49:08.0000] <karlcow>
what:wg

[05:49:18.0000] <karlcow>
the namespaced version

[05:51:01.0000] <karlcow>
/me is trying to visualize what document.createDocumentOutline() would return. I would love a gist.

[05:59:41.0000] <darobin>
createDocumentOutline would be really nice

[06:04:04.0000] <annevk>
Doesn't seem like people are clamoring for that

[06:05:41.0000] <Ms2ger>
darobin isn't a person?

[06:06:18.0000] <karlcow>
he is a dahu

[06:13:13.0000] <annevk>
Reading http://lists.w3.org/Archives/Public/public-webapps/2013JanMar/thread.html#msg408 is somewhat painful unless you skip certain emails

[06:19:04.0000] <MikeSmith>
annevk: people weren't clamoring for a lot of things that made it into the spec and that have actually been implemented and shipped

[06:19:32.0000] <annevk>
Have they seen adoption?

[06:20:04.0000] <MikeSmith>
sure

[06:20:17.0000] <MikeSmith>
sometimes people use stuff just because it's there

[06:20:38.0000] <MikeSmith>
example: the semantic/structural elements

[06:20:43.0000] <annevk>
You're not making a convincing case :-)

[06:21:40.0000] <MikeSmith>
anyway in this case we already have the outline algorithm in the spec

[06:22:03.0000] <MikeSmith>
I'm to really proposing a new feature

[06:22:32.0000] <MikeSmith>
I'm just proposing that what's already in the spec should actually be made usable

[06:23:18.0000] <MikeSmith>
right now the spec for the outline algorithm pretty much has zero actual conformance requirements

[06:24:00.0000] <MikeSmith>
so I can claim that dbaron's old desk is a conforming implementation of the spec for the outline algorithm

[06:25:07.0000] <Ms2ger>
How about his new desk?

[06:26:28.0000] <Stevef>
some developers are deeply invested in in the outline algorithm even though it doesn't currently do anything

[06:26:42.0000] <MikeSmith>
Ms2ger: I haven't seen it so I can't vouch for it

[06:27:09.0000] <MikeSmith>
Stevef: yeah that part baffles me a bit

[06:27:17.0000] <Stevef>
and many not ever do much if the brwosers don't implement

[06:27:40.0000] <MikeSmith>
but I guess it does show that there's some interest, if not clamoring

[06:28:00.0000] <Stevef>
MikeSmith: its semantics its the beauty of the theoretical construction

[06:28:55.0000] <MikeSmith>
somebody would only find it beautiful if they hadn't written code to implement it :)

[06:29:05.0000] <jgraham>
Hmm? It is used every time the spec is generated

[06:29:12.0000] <jgraham>
That seems like "doing something"

[06:30:29.0000] <MikeSmith>
jgraham: you saying that anolis implements it?

[06:30:35.0000] <Stevef>
jgraham: yeah thats true, now if that something was replicated in many places then...

[06:30:35.0000] <jgraham>
Yes

[06:30:40.0000] <MikeSmith>
ah

[06:30:48.0000] <marcosc>
yeah, anolis and respec too

[06:30:51.0000] <marcosc>
I think

[06:30:57.0000] <MikeSmith>
well I agree that's doing something

[06:31:05.0000] <marcosc>
you need to ask darobin

[06:31:11.0000] <MikeSmith>
marcosc: pretty sure that respec does not

[06:31:16.0000] <Ms2ger>
Anolis does?

[06:31:47.0000] <MikeSmith>
respec expect you to mark up the source with <section>s, and if you don't you won't get any TOC

[06:31:55.0000] <marcosc>
I thought gsnedders said it did at some point

[06:32:07.0000] <Ms2ger>
It has something...

[06:32:18.0000] <darobin>
ReSpec doesn't use that, it uses good markup practices instead

[06:32:23.0000] <MikeSmith>
jgraham just said anolis does

[06:32:29.0000] <MikeSmith>
darobin: :)

[06:32:42.0000] <darobin>
I'm serious actually :)

[06:32:47.0000] <MikeSmith>
well

[06:32:55.0000] <darobin>
the outline algorithm is great because it saves horrible content

[06:33:03.0000] <marcosc>
heh, fu and your sections, darobin

[06:33:07.0000] <Ms2ger>
Looks like it does

[06:33:09.0000] <darobin>
but if you can get nice content to start with it's so much better

[06:33:26.0000] <Ms2ger>
I see a lot of "outlinee" in the code, at least

[06:33:43.0000] <gsnedders>
Do what?

[06:33:56.0000] <gsnedders>
The outlining algorithm? Yeah.

[06:34:01.0000] <MikeSmith>
well, would that all tools we work on could be for a use case where you can actually enforce good markup practices

[06:34:03.0000] <marcosc>
oh yeah! :)

[06:34:24.0000] <marcosc>
Anolis, the conformance queen! Take that, Respec!

[06:35:17.0000] <MikeSmith>
Hixie changed that word outlinee so all you alls code is now internally out of conformance with Hixie's terminology

[06:35:40.0000] <MikeSmith>
it's not "outline target" I think

[06:35:54.0000] <Ms2ger>
It is, I think

[06:36:00.0000] <jgraham>
heh

[06:36:12.0000] <darobin>
hey, at least ReSpec uses HTML

[06:36:22.0000] <jgraham>
I think I eventually complained enough that outlinee looked like a typo

[06:36:24.0000] <MikeSmith>
I tried to get him to throw some "palpable" in there but he said he thought he had already taken the "palpable" joke too far

[06:36:24.0000] <darobin>
it's not HTML 3.2 + some server-side language like Anolis

[06:36:38.0000] <marcosc>
heh

[06:37:13.0000] <MikeSmith>
darobin: right now somebody here is making a meme for "at least ReSpec uses HTML"

[06:37:39.0000] <darobin>
lol

[06:38:20.0000] <MikeSmith>
Anolis has a Web service you can use and there's the word "Web" there so that makes it good

[06:38:53.0000] <Ms2ger>
I'll rename it XAnolis, maybe then darobin will like it

[06:39:13.0000] <jgraham>
SaaS is the future

[06:39:14.0000] <darobin>
MikeSmith: oh, a web service you say? I had no idea it also used SOAP

[06:39:46.0000] <jgraham>
My plan is to get people hooked and then start charing $5/spec generation or ad adverts to the generated spec

[06:39:47.0000] <darobin>
Ms2ger: heh, I bet Anolis uses XPath :)

[06:39:50.0000] <jgraham>
*add

[06:40:10.0000] <jgraham>
Although right now

[06:40:15.0000] <Stevef>
I am still unclear how much the outline helps when realw rold web pages get thrown at it some the example here http://www.html5accessibility.com/HTML5data/article/index.html

[06:40:22.0000] <jgraham>
That business plan would make me < $5 / day

[06:40:26.0000] <Stevef>
even real world

[06:40:49.0000] <MikeSmith>
darobin: I said "Web" with the word "service" arranged after it. If I meant SOAP I would have said "clusterfuck"

[06:41:03.0000] <Stevef>
the outlines for complex pages seem like barf

[06:41:11.0000] <darobin>
MikeSmith: well you *were* talk about Anolis, so I assumed...

[06:41:22.0000] <darobin>
Stevef: yay, another feature!

[06:41:24.0000] <MikeSmith>
hah

[06:42:32.0000] <Stevef>
darobin: what feature? a barfinator?

[06:42:38.0000] <MikeSmith>
Stevef: nothing can help most of those pages, nor the people who made them. They are beyond redemption.

[06:43:06.0000] <darobin>
a barfinator for crappy HTML strikes me as a great addition to our utility belts

[06:43:18.0000] <annevk>
Ms2ger: sanity check, sicking is wrong in https://www.w3.org/Bugs/Public/show_bug.cgi?id=16491#c10 right?

[06:43:29.0000] <annevk>
Ms2ger: capture includes target afaict

[06:43:39.0000] <Stevef>
MikeSmith: weel those are the edge cutters who work on multi million dollar sites...

[06:44:11.0000] <Ms2ger>
I, er, dunno?

[06:44:14.0000] <Ms2ger>
smaug____?

[06:44:27.0000] <smaug____>
Ms2ger: ?

[06:44:40.0000] <Stevef>
the HTML5 standard bearers leading us into a new golden age of markup

[06:44:41.0000] <smaug____>
yes, capture includes target

[06:44:43.0000] <jgraham>
Argh, loop detected

[06:45:04.0000] <annevk>
someone should slap sicking

[06:45:44.0000] <zewt>
(confirm)

[06:45:48.0000] <smaug____>
per D2E capture didn't include target

[06:45:55.0000] <Ms2ger>
Poor sicking

[06:45:59.0000] <zewt>
(... confirming capture includes target, not slapping sicking)

[06:46:08.0000] <smaug____>
but it was too late to fix implementations already 2006

[06:46:38.0000] <smaug____>
...so spec was changed

[06:47:15.0000] <MikeSmith>
darobin: actually I sense that somebody elsee here is making a meme, "You designed the WebIDL otput in Respec / Your argument is invalid."

[06:48:24.0000] <marcosc>
where is sicking?

[06:48:56.0000] <sbp>
http://wiki.whatwg.org/wiki/FAQ#Which_group_has_authority_in_the_event_of_a_dispute.3F has a broken link: http://www.whatwg.org/specs/web-apps/current-work/multipage/introduction.html#how-do-the-whatwg-and-w3c-specifications-differ? doesn't exist anymore. I didn't find a reasonable updated destination yet

[06:49:45.0000] <sbp>
(only result for "differ" in the whole ToC is "4.10.1.7 The difference between the field type, the autofill field name, and the input modality")

[06:51:01.0000] <annevk>
smaug____: interesting anecdote

[06:51:54.0000] <smaug____>
annevk: are you said... I am old :)

[06:53:40.0000] <smaug____>
s/are/as/

[06:53:42.0000] <smaug____>
huh

[06:53:58.0000] <smaug____>
don't try to make food and write at the same time

[07:29:36.0000] <sangwhan>
German search results reminds me of this crazy Coca-cola ad

[07:41:55.0000] <volkmar>
marcosc: you pinged me on #sysapps, does your ping still apply?

[07:51:27.0000] <darobin>
volkmar: thanks for answering my Persona question btw

[07:52:18.0000] <volkmar>
darobin: yw

[08:02:56.0000] <MikeSmith>
"the latency of sending all that HTML templating with every request is still higher than caching it in the browser as XSLT, and transforming XML on the fly"

[08:03:26.0000] <MikeSmith>
the architect speaks

[08:03:45.0000] <MikeSmith>
all of our problems are now solved friends

[08:03:55.0000] <MikeSmith>
time to close up shop

[08:05:08.0000] <MikeSmith>
annevk, slightlyoff, marcosc : your mission is to ensure that www-tag keeps continuing to provide that kind of entertainment value^W^Wwisdom

[08:05:18.0000] <annevk>
MikeSmith: on it

[08:05:51.0000] <marcosc>
MikeSmith: did I miss something?

[08:07:04.0000] <marcosc>
oh, I see. I don't read the tag emails that contain the the word XML

[08:07:21.0000] <marcosc>
I leave those to annevk

[08:07:38.0000] <jgraham>
marcosc: Pretty sure that's cheating

[08:07:45.0000] <marcosc>
it is :)

[08:07:53.0000] <wilhelm>
I can tolerate XML, but XSLT is clearly the spawn of the devil.

[08:08:32.0000] <MikeSmith>
memebot, { text: "pwned by the polyglot thread", image: annevk }

[08:08:39.0000] <marcosc>
heh

[08:08:55.0000] <marcosc>
someone should so create that

[08:10:57.0000] <annevk>
MikeSmith: you should post that one you emailed me :)

[08:11:52.0000] <jgraham>
MikeSmith: pressure sure you mean <meme><?xml-stylesheet type="text/xsl" href="http://example.org/meme/mem2html.xslt"?><text>pwned by the polyglot thread</text><image href="annevk"/></meme>

[08:11:57.0000] <jgraham>
*pretty

[08:12:06.0000] <MikeSmith>
annevk: Really? If you say so I will

[08:12:14.0000] <annevk>
MikeSmith: do it :)

[08:12:45.0000] <annevk>
Have to keep w3cmemes alive

[08:12:57.0000] <MikeSmith>
jgraham: yeah sorry I forgot to hit myself on the head with the XML brick first

[08:13:16.0000] <MikeSmith>
/me looks for his XML brick

[08:13:54.0000] <MikeSmith>
fuck, it seems Ms2ger stole my stole my XML brick along with my pennies and my dope

[08:15:24.0000] <MikeSmith>
I bet right now right not Ms2ger is writing some code to do caching in the browser as XSLT, transform XML on the flay

[08:15:35.0000] <MikeSmith>
while he smokes my dope

[08:16:46.0000] <jgraham>
"on the flay"? I guess self-flagellation is about right

[08:26:14.0000] <MikeSmith>
Ms2ger can't spell words right while he's clambaking

[08:28:35.0000] <Ms2ger>
gsnedders, hmm, looks like html5lib's python 3 installed code uses setuptools, but that isn't available for 3

[08:30:55.0000] <gsnedders>
Ms2ger: I haven't tried installing it :P

[08:31:08.0000] <Ms2ger>
gsnedders, apparently :)

[08:31:16.0000] <gsnedders>
Ms2ger: Patches welcome :)

[08:31:24.0000] <Ms2ger>
Bah :)

[08:35:00.0000] <sangwhan>
All browsers should implement JIT XSLT

[08:35:58.0000] <sangwhan>
...and native SCXML support.

[08:38:23.0000] <MikeSmith>
I'll EMMA that

[08:41:06.0000] <smaug____>
/me designed a variant of SCXML 9 years ago... using XForms datamodels and EMMA and what not... all the super cool technologies :p

[08:43:44.0000] <sangwhan>
smaug____: How many pounds of cocaine did you need?

[08:44:27.0000] <MikeSmith>
smaug____: smart man you've done your penance ahead of time and now can sin freely

[08:45:05.0000] <sangwhan>
I'm still thinking of a nice way to say "No" to SCXML

[08:45:38.0000] <smaug____>
Certain Finnish mobile phone company didn't give any cocaine as bonus

[08:46:05.0000] <sangwhan>
The Finnish mobile phone company that shall remain anonymous

[10:54:06.0000] <Hixie>
MikeSmith: i guess if we had a method that was allowed to take non-zero time and returned a static copy that might be ok

[10:55:23.0000] <MikeSmith>
well man it don't gonna be non-zero

[10:55:42.0000] <MikeSmith>
can't tell if you're trollin

[10:55:47.0000] <Hixie>
not trolling

[10:55:52.0000] <MikeSmith>
ok

[10:55:55.0000] <Hixie>
how long does it take to work out the outline for the html spec?

[10:56:09.0000] <Hixie>
i am just worried people are gonna be doing this stuff in a tight loop or something

[10:56:19.0000] <MikeSmith>
milliseconds

[10:56:23.0000] <MikeSmith>
i think

[10:56:31.0000] <Hixie>
that's what i mean

[10:56:34.0000] <Hixie>
it's slow

[10:57:24.0000] <MikeSmith>
so we make the show opt in

[10:57:55.0000] <Hixie>
The kind of thing I'm worried about is things like a library checking this on startup

[10:57:57.0000] <Philip`>
Need an async createDocumentOutlinePromise, clearly

[10:58:06.0000] <Hixie>
Philip`: can't be async, it depends on the dom tree

[10:58:13.0000] <Hixie>
MikeSmith: like people did with webgl construction

[10:58:26.0000] <Ms2ger>
createVerySlowDocumentISaidSlowOutline()

[10:58:32.0000] <Philip`>
It'd take an instantaneous copy-on-write snapshot of the current DOM tree, and then compute the outline asynchronously

[10:58:51.0000] <Hixie>
Philip`: for a 5mb file, that can be a lot of ram or a lot of time

[10:59:05.0000] <Hixie>
MikeSmith: or people running it in a tight loop, like they did with getElementsByTagName

[10:59:14.0000] <Philip`>
Copy-on-write doesn't take any memory or time (unless you write)

[10:59:40.0000] <gsnedders>
Hixie: When JS can already take arbitrary time, why's this an issue?

[10:59:42.0000] <gsnedders>
/me is confused

[11:00:04.0000] <Hixie>
Philip`: well it takes at least a bit to track that you need to copy on write, but sure

[11:00:24.0000] <Hixie>
gsnedders: because UA vendors will be tempted to "optimise" the algorithm

[11:00:50.0000] <Ms2ger>
Hixie, tests ;)

[11:00:51.0000] <gsnedders>
Hixie: Won't that happen whatever you spec?

[11:01:11.0000] <gsnedders>
Hixie: Also just make sure people impl it correctly. :P

[11:01:35.0000] <Hixie>
gsnedders: given that you already didn't implement it correctly... :-P

[11:01:51.0000] <gsnedders>
Hixie: Bugs happen, and nobody wrote TCs for me!

[11:01:58.0000] <gsnedders>
Hixie: Obviously I need a QA department :)

[11:02:08.0000] <Philip`>
If you're just worried about someone benchmarking the function, design it so it computes the outline synchronously (which makes the implementation easy) and then asynchronously sleeps for 500+Math.random()*100 msecs before returning the outline to a callback

[11:02:12.0000] <Hixie>
gsnedders: anyway i'm just saying that there are costs and it's just not a trivial matter; i'm not saying we shouldn't expose it

[11:02:18.0000] <Hixie>
Philip`: hah

[11:03:49.0000] <Hixie>
gsnedders: (btw, there are "tests" in the spec now, if you do want some)

[11:03:55.0000] <Hixie>
gsnedders: (they cover the interesting cases i'm aware of)

[11:04:14.0000] <gsnedders>
Hixie: (It's abandonware from my POV now, pretty much)

[11:04:17.0000] <Hixie>
k

[11:14:32.0000] <MikeSmith>
Hixie: I can write up a message to the list asking for implementor assessments, if you want

[11:15:40.0000] <Hixie>
if there's author demand or implementation demand, that certainly makes the decisions easier

[11:15:53.0000] <MikeSmith>
ok

[11:17:49.0000] <MikeSmith>
so I'll write up a message to try to present the case, we see if we get any bites

[11:48:30.0000] <GPHemsley>
Hixie: Any chance of <time datetime="2001" approximate>c. 2001</time>?

[11:48:53.0000] <GPHemsley>
(that's: LOWERCASE C, PERIOD, SPACE)

[11:49:10.0000] <Hixie>
what's the use case?

[11:49:22.0000] <GPHemsley>
approximate dates

[11:49:43.0000] <Hixie>
i figured that, thanks :-P. i mean, what software is going to process it and what will it do with it

[11:50:21.0000] <GPHemsley>
well, say I have a collection of photos, and I list the date that each one was taken

[11:50:30.0000] <GPHemsley>
but for a particular photo, I don't know the exact date

[11:50:46.0000] <GPHemsley>
I only know enough to say "circa 2001"

[11:51:06.0000] <GPHemsley>
and of course I mark up all these photo's dates in <time>

[11:51:12.0000] <GPHemsley>
so now what do I do?

[11:52:50.0000] <GPHemsley>
so the machine aspect would be the collection of metadata

[11:53:01.0000] <GPHemsley>
s/collection/act of collecting/

[12:02:40.0000] <Hixie>
GPHemsley: that doesn't answer my question: what software is going to process it and what will it do with it?

[12:05:59.0000] <Hixie>
GPHemsley: that doesn't answer my question: what software is going to process it and what will it do with it?

[12:06:21.0000] <GPHemsley>
Hixie: What do they do with <time> now?

[12:06:58.0000] <Hixie>
the current use cases are about future css automatic restyling, and microdata processing.

[12:07:19.0000] <Hixie>
afk for a bit, will resume after lunch

[12:07:31.0000] <GPHemsley>
Hixie: What kind of microdata processing? (I'm not too familiar with it.)

[12:07:39.0000] <tantek>
<time> is currently used for microformats quite a bit

[12:07:44.0000] <tantek>
hCalendar in particular

[12:08:31.0000] <GPHemsley>
Hixie: But I imagine this could fall into both of those usecases.

[12:09:18.0000] <tantek>
GPHemsley - there wasn't enough use-cases / support for circa year to get it into the <time> element definition

[12:09:31.0000] <GPHemsley>
tantek: Oh, it's been suggested before?

[12:09:47.0000] <tantek>
GPHemsley - yes, see and please (I encourage you!) add to: http://wiki.whatwg.org/wiki/Time#Fuzzy_dates

[12:10:25.0000] <GPHemsley>
/me wonders what "flourished 1580" means

[12:10:26.0000] <tantek>
(actually that whole wiki page is good background reading on what features we've added to the time element and why)

[12:10:54.0000] <GPHemsley>
oh, like, it built up to then?

[12:11:06.0000] <GPHemsley>
that's kinda iffy

[12:11:07.0000] <tantek>
GPHemsley - I think it's missing the end date, e.g. see here: http://en.wikipedia.org/wiki/Basawan

[12:11:35.0000] <GPHemsley>
ah

[12:11:45.0000] <GPHemsley>
not sure that's a good usecase for approximate dates

[12:11:57.0000] <GPHemsley>
that's just "we only know about him for this period)

[12:12:01.0000] <GPHemsley>
s/)/"/

[12:12:59.0000] <tantek>
GPHemsley - I agree - I think the "Fuzzy Dates" section needs some work

[12:13:10.0000] <GPHemsley>
yeah, I was considering that myself

[12:13:13.0000] <tantek>
to split uncertain dates (circa) from uncertain date ranges (flourished)

[12:13:32.0000] <tantek>
I just added the citation for "flourished" (since you asked what it meant :) )

[12:14:23.0000] <tantek>
BTW - note the comments section on Fuzzy Dates

[12:16:30.0000] <GPHemsley>
will do

[12:16:52.0000] <tantek>
any questions - I'm happy to help with documenting further potential <time> improvements

[12:17:28.0000] <GPHemsley>
ick, this whole page could do with a cleanup

[12:17:28.0000] <tantek>
It's been an important area of improvement in HTML in particular for microformats use cases that have needed it for years.

[12:17:37.0000] <GPHemsley>
/me tries to put blinders on

[12:18:10.0000] <tantek>
Indeed I tried to cluster similar sets of problems/proposals, and then sort by rough utility / use-cases.

[12:18:51.0000] <tantek>
It might be worth taking the time to move all the accepted proposals to an Accepted section at the bottom.

[12:19:23.0000] <tantek>
but for a while, it wasn't clear what was going forward and what wasn't so we tried to keep the page structure fairly stable so folks could easily re-find things when they came back to it.

[12:19:48.0000] <GPHemsley>
For future reference: 1st-level headers (1 =) are reserved for page titles

[12:19:58.0000] <tantek>
citation?

[12:20:17.0000] <tantek>
(not that I disagree, just would be handy to know the reasoning)

[12:20:26.0000] <tantek>
and is that for MediaWiki or Wikipedia only?

[12:20:28.0000] <GPHemsley>
well, look at the styling of the page header ;)

[12:20:51.0000] <GPHemsley>
it may be inspired by Wikipedia, but I prefer to carry it through to all MediaWiki implementations

[12:21:02.0000] <GPHemsley>
given how it is marked up and/or styled

[12:21:08.0000] <tantek>
I've used later 1st-level headers when it's too much of a pain (and looks bad stylistically) to increase heading levels when moving from one section to another

[12:21:39.0000] <GPHemsley>
that's not exactly the greatest justification ;)

[12:21:45.0000] <GPHemsley>
/me wonders how you code in Python

[12:22:09.0000] <tantek>
I don't code in Python :)

[12:22:18.0000] <GPHemsley>
http://en.wikipedia.org/wiki/Wikipedia:MOSHEAD#Section_headings

[12:22:29.0000] <GPHemsley>
"(The highest heading level technically possible is =Title=; but do not use it in articles, because it is reserved for the automatically generated top-level heading at the top of the page containing the title of the whole article.)"

[12:22:38.0000] <GPHemsley>
so that's what Wikipedia says

[12:24:07.0000] <GPHemsley>
given the resulting markup generated, there may also be accessibility concerns

[12:24:18.0000] <GPHemsley>
(because they are literally translated to <h1>)

[12:24:41.0000] <Ms2ger>
Heh: http://24.media.tumblr.com/9c78b3d6ddce1292a889a977667f10cb/tumblr_mi9sc0oIXi1rvsbh9o1_500.jpg

[12:24:42.0000] <tantek>
so I think I used the level 1 headings because I wanted to a way to group the feature proposals without losing the stylistic heading underline for each specific proposal

[12:24:54.0000] <tantek>
the next level of heading disappears too easily among the prose

[12:25:01.0000] <tantek>
especially in a long page

[12:26:05.0000] <tantek>
nah, multiple h1s doesn't hurt accessibility as long as the first h1 is done correctly

[12:26:29.0000] <tantek>
same thing for WP too - the argument against using =heading= doesn't hold up because the first <h1> is just fine (and works with the page title as well)

[12:26:56.0000] <GPHemsley>
tantek: What does it mean to be "done correctly"? All the subsequent <h1>s would be at the same level as the first one.

[12:27:29.0000] <GPHemsley>
But anyway, with this many sections and this length of a page, it could probably do with being split into multiple pages

[12:28:06.0000] <tantek>
yeah that's a good point. I'll move the accepted proposals to a new page to start with

[12:28:54.0000] <tantek>
also the intro is out-dated now that a lot of the proposals have made it into specs

[12:28:58.0000] <tantek>
yeah I need to give this page some time

[12:28:59.0000] <tantek>
;)

[12:29:46.0000] <GPHemsley>
yeah, I was gonna ask, is this information still current?

[12:30:17.0000] <tantek>
most of it is yes. I added various status lines accordingly.

[12:30:21.0000] <tantek>
just fixing the intro now

[12:31:56.0000] <GPHemsley>
Hixie: I see annevk recently had to delete a spam page created by a user ;)

[12:32:42.0000] <GPHemsley>
(and from a sleeper user, no less)

[12:33:27.0000] <tantek>
how old a user? perhaps before sign-ups were gated?

[12:33:59.0000] <Ms2ger>
gsnedders, do you know if there is a particular reason [DATE] uses UTC?

[12:34:08.0000] <GPHemsley>
tantek: Yeah, it was during that brief period after the upgrade that user registrations were open.

[12:34:29.0000] <GPHemsley>
tantek: But Hixie recently asked me to remove a restriction that would have prevented this. ;)

[12:34:30.0000] <gsnedders>
Ms2ger: No. But I expect there was one.

[12:34:56.0000] <Ms2ger>
Alright :)

[12:35:19.0000] <Ms2ger>
It's not even five years ago you wrote that code, though...

[12:35:38.0000] <gsnedders>
Four years ago is long enough :)

[12:36:16.0000] <GPHemsley>
four years is two lifetimes!

[12:37:23.0000] <tantek>
GPHemsley, ok cleanup started (first iteration).

[12:37:28.0000] <GPHemsley>
k

[12:37:33.0000] <tantek>
off to lunch now, will do more when I get back.

[12:37:41.0000] <tantek>
and I'll try to reduce the extra h1s ;)

[12:37:46.0000] <GPHemsley>
I see just removing the accepted ones will cut the page length in half

[12:37:58.0000] <GPHemsley>
but yeah, that'd be much appreciated :)

[12:41:28.0000] <GPHemsley>
tantek, Hixie: But anyway, I think just have a binary way to say that a date is approximate would be enough to cover a lot of the usecases, even with ranges (durations?).

[12:42:22.0000] <jgraham>
"14:37 < GPHemsley> four years is two lifetimes!" - gsnedders is a bit older than that now

[12:42:32.0000] <GPHemsley>
Hixie: Is it possible to have an attribute that can be both binary (present/absent) and have a value?

[12:43:10.0000] <GPHemsley>
jgraham: Not by much! ;)

[12:43:10.0000] <jgraham>
GPHemsley: That is possible of course. But it doesn't sound like a good idea :)

[12:43:25.0000] <GPHemsley>
jgraham: Why not?

[12:44:02.0000] <jgraham>
Because most attributes don't work like that

[12:44:24.0000] <GPHemsley>
these are attributes 2.0!

[12:44:39.0000] <GPHemsley>
(or is it attributes5?)

[12:47:50.0000] <gsnedders>
GPHemsley: 10x seems like a fair bit :P

[12:48:22.0000] <GPHemsley>
gsnedders: Oh, but the first few don't count. They're throwaways.

[12:49:21.0000] <GPHemsley>
tantek: How about <time datetime="2001" approximate within="3y">? @approximate is boolean, @within is duration.

[12:49:50.0000] <GPHemsley>
tantek: (Perhaps @approximate is implied by the presence of @within?)

[12:50:52.0000] <GPHemsley>
tantek: Oh, no, wait. Durations are calculated in no more than hours?

[12:51:17.0000] <GPHemsley>
tantek: Or weeks.

[13:04:36.0000] <GPHemsley>
tantek: The full period syntax of ISO8601 would allow years and months, though.

[13:07:21.0000] <GPHemsley>
I suppose we could have separate comparable and incomparable duration types.

[13:07:35.0000] <GPHemsley>
Or, rather, have differing degrees of comparability

[13:08:26.0000] <GPHemsley>
Like, one type is only comparable down to 1 month; the other would be as it is now, from weeks to seconds.

[13:08:29.0000] <GPHemsley>
/me shrugs

[13:09:12.0000] <GPHemsley>
Ah, and then granularity would be tied to how specific @datetime is.

[13:09:42.0000] <GPHemsley>
So, you can't have datetime="2001" and then have within="1s"

[13:10:25.0000] <GPHemsley>
<time datetime="2001" within="3y">

[13:10:52.0000] <GPHemsley>
<time datetime="2001-03" within="2M">

[13:11:15.0000] <GPHemsley>
<time datetime="2001-03-07" within="5d">

[13:12:05.0000] <GPHemsley>
/me wanders off

[13:37:05.0000] <jgraham>
odinho: I see Mozilla gave you a monkey

[13:37:33.0000] <jgraham>
And still no hippo for annevk

[14:10:33.0000] <GPHemsley>
tantek: Another possibility is to add to the syntax of @datetime: 2001?3y, 2001-03?3M, 2001-03-07?5d

[14:11:24.0000] <GPHemsley>
tantek: That way, you can show "circa" by having a lone question mark, and no older parser would mistake it for an exact date (since they'd treat it as invalid).

[14:15:21.0000] <Hixie>
back

[14:21:08.0000] <GPHemsley>
front

[14:24:02.0000] <Hixie>
who was the account of the guy who created the page created by?

[14:24:10.0000] <Hixie>
i'm curious to see how he asked for the account

[14:24:15.0000] <Hixie>
(re wiki spam)

[14:24:20.0000] <Hixie>
23 October 2012

[14:24:23.0000] <GPHemsley>
he was a self-registration

[14:24:30.0000] <GPHemsley>
back during that small period where it was open

[14:24:31.0000] <Hixie>
aah

[14:24:45.0000] <Hixie>
ok then i'm still fine with our policy of letting new users create pages

[14:24:47.0000] <Hixie>
:-)

[14:24:57.0000] <Hixie>
thanks for you and anne keeping eyes peeled

[14:24:59.0000] <GPHemsley>
who knows how many sleeper agents there are!

[14:25:02.0000] <GPHemsley>
;)

[14:25:07.0000] <Hixie>
well, one per three months is fine

[14:25:08.0000] <Hixie>
:-)

[14:25:34.0000] <Hixie>
some level of spam is manageable

[14:25:34.0000] <GPHemsley>
/me activates all the sleeper agents he secretly registered in October

[14:25:50.0000] <Hixie>
dude if the guy who has admin rights to our wiki is a sleeper agent, we're screwed :-P

[14:25:55.0000] <GPHemsley>
hah

[14:26:24.0000] <wilhelm>
He's probably a cylon.

[14:26:42.0000] <GPHemsley>
if the only thing the guy who has admin rights to the wiki does is create spam articles, I'd say you're OK ;)

[14:41:47.0000] <Hixie>
GPHemsley: knowing you you'd delete them yourself too...

[14:42:44.0000] <Hixie>
should "2rd chapter, part 3" sort between "1" and "3" or between "2 2" and "2 4"?

[14:42:56.0000] <Hixie>
TabAtkins: (^ since you may care)

[14:43:16.0000] <Hixie>
also pretend i wrote "2nd", not "3rd"

[14:43:35.0000] <Hixie>
and definitely don't assume i wrote "2rd", that would be stoopid

[14:54:53.0000] <Hixie>
well if y'all are lacking in opinions on this, i'm gonna say it goes between "2 2" and "2 4".

[14:55:16.0000] <Hixie>
basically, if after parsing the first number, i detect another number later, then the first number will sort after any string that only contains one number.

[14:55:27.0000] <Hixie>
(and has the same prefix)

[14:59:24.0000] <GPHemsley>
/me has to admit that he isn't following what the proposal is

[14:59:50.0000] <GPHemsley>
can haz more examples plz?

[15:01:18.0000] <GPHemsley>
oh, hmm

[15:01:25.0000] <GPHemsley>
http://www.loc.gov/standards/datetime/pre-submission.html

[15:01:39.0000] <GPHemsley>
(this just coincidentally showed up in my Twitter stream)

[15:04:57.0000] <GPHemsley>
I'm not sure I agree with the splitting of uncertain vs. approximate, or how to handle it

[15:05:16.0000] <GPHemsley>
and I'd previously considered using 'X' where they use 'u'

[15:05:25.0000] <GPHemsley>
(for unspecified)

[15:06:29.0000] <GPHemsley>
and the handling of seasons seems rather arbitrary and ambiguous

[15:07:57.0000] <GPHemsley>
oh, hmm... actually, my use of 'X' would coincide more with their use of 'x'

[15:07:59.0000] <GPHemsley>
interesting

[15:08:19.0000] <GPHemsley>
(not that I'd really intended to distinguish precision)

[15:10:37.0000] <GPHemsley>
FYI, the homepage is here: http://www.loc.gov/standards/datetime/

[15:11:49.0000] <Hixie>
GPHemsley: examples are under "input" in http://software.hixie.ch/utilities/js/sorter/index.html

[15:11:55.0000] <Hixie>
GPHemsley: ignore the code for now

[15:12:22.0000] <Hixie>
and this is for what order table rows should be sorted by if a column contains those values

[15:13:22.0000] <GPHemsley>
right

[15:13:33.0000] <GPHemsley>
so, why would it sort between "1" and "3"?

[15:13:50.0000] <Hixie>
"it"?

[15:13:54.0000] <GPHemsley>
oh, wait

[15:14:02.0000] <GPHemsley>
you confused me with all your typo corrections

[15:14:03.0000] <GPHemsley>
hang on

[15:14:16.0000] <Hixie>
heh

[15:14:25.0000] <Hixie>
the "input" list on that page is in the order i'm advocating

[15:15:00.0000] <GPHemsley>
so, you prioritize numbers over letters?

[15:15:20.0000] <GPHemsley>
e.g., why is 2nd chapter, part 4 > 2-4-5 ?

[15:15:38.0000] <Hixie>
it should be <

[15:15:45.0000] <GPHemsley>
(or <, depending on how you see things)

[15:16:03.0000] <Hixie>
because [2,4]<[2,4,0]

[15:16:04.0000] <GPHemsley>
I meant higher up on the list

[15:16:09.0000] <GPHemsley>
ah

[15:16:12.0000] <Hixie>
higher is lower, the list is ascending

[15:16:20.0000] <GPHemsley>
yeah, we're in agreement here :P

[15:16:37.0000] <Hixie>
i just wrote "higher is lower", i should not be allowed to work today

[15:16:43.0000] <GPHemsley>
heh

[15:16:54.0000] <Hixie>
but putting that aside...

[15:17:26.0000] <GPHemsley>
and why is "2 4 6" < "2nd and 4th and 6th"?

[15:17:42.0000] <Hixie>
because " "<"nd and "

[15:18:11.0000] <GPHemsley>
ah, alphabetically?

[15:18:23.0000] <Hixie>
(just to clarify, that's just the reasoning i used in constructing the list; i'm eager to consider other answers)

[15:18:26.0000] <Hixie>
lexically, yeah

[15:18:27.0000] <GPHemsley>
so, sort numerically, then sort alphabetically?

[15:18:33.0000] <Hixie>
sort of

[15:18:37.0000] <Hixie>
except leading strings are sorted first

[15:18:46.0000] <GPHemsley>
ah, ok

[15:18:55.0000] <Hixie>
so "1"<"a0"

[15:19:08.0000] <Hixie>
and single numbers are < lists of numbers

[15:19:32.0000] <GPHemsley>
so what is the order of "1", "3", "2 2", "2 4"?

[15:19:40.0000] <Hixie>
so "2"<"1 0"<"a1"<"a0 0"

[15:19:45.0000] <GPHemsley>
"1", "2 2", "2 4", "3"?

[15:19:55.0000] <Hixie>
in your case, 1;2;2 2;2 4

[15:20:10.0000] <Hixie>
er

[15:20:13.0000] <Hixie>
1;3;2 2;2 4

[15:20:26.0000] <GPHemsley>
oh

[15:20:27.0000] <GPHemsley>
hmm

[15:20:45.0000] <Hixie>
the reasoning being you don't want IP addresses and numbers sorting mixed

[15:20:52.0000] <Hixie>
you want IP addresses to end up after the numbers

[15:21:11.0000] <Hixie>
(arguably)

[15:22:20.0000] <GPHemsley>
IP address with spaces?

[15:22:29.0000] <GPHemsley>
hmm

[15:22:33.0000] <Hixie>
"1.1.1.1" should sort after "2"

[15:22:46.0000] <Hixie>
(is the argument that defends the current list)

[15:23:02.0000] <GPHemsley>
how do you differentiate between an IP address and a version number?

[15:23:26.0000] <Hixie>
you don't

[15:23:42.0000] <GPHemsley>
but that would mean that version 2.2 sorts after version 3

[15:23:43.0000] <Hixie>
the real question is how do you differentiate between a two-part version number and a floating point number

[15:24:03.0000] <Hixie>
(or between a hex string and a string with an exponent)

[15:24:07.0000] <GPHemsley>
hmm

[15:24:16.0000] <Hixie>
2.2 is a single floating point number, so it sorts before 3

[15:24:24.0000] <GPHemsley>
2.2.2, then

[15:24:31.0000] <Hixie>
2.2.2 sorts after 3, yes

[15:24:39.0000] <Hixie>
write it 3.0.0 if you want it to sort in the other order

[15:25:16.0000] <GPHemsley>
but if you have a table where versions are listed for software from different vendors..

[15:25:45.0000] <Hixie>
yeah, dunno what you do in that case

[15:25:51.0000] <GPHemsley>
consider http://www.php.net/manual/en/function.version-compare.php

[15:26:47.0000] <GPHemsley>
I think "1 0" < "2"

[15:27:19.0000] <GPHemsley>
most people think of an IP address in terms of its blocks

[15:27:28.0000] <GPHemsley>
so they might expect 10.0.0.1 to be after 10

[15:27:34.0000] <GPHemsley>
e.g.

[15:27:58.0000] <Hixie>
yeah, that can certainly be argued as well

[15:28:22.0000] <GPHemsley>
anyway, I'm gonna go eat, and let that ponder

[15:28:33.0000] <Hixie>
but that would give an order of: 1; 1.1.1; 1.1.1.1; 1.1

[15:28:44.0000] <GPHemsley>
would it?

[15:29:01.0000] <Hixie>
1 and 1.0 sort first, then 1.1.1 and 1.1.1.1 sort next because they're sorting on the first number "1", and then 1.1 goes last because it's bigger than 1.0

[15:29:02.0000] <GPHemsley>
$ < *

[15:29:12.0000] <GPHemsley>
(regexp)

[15:29:26.0000] <GPHemsley>
or $ < .

[15:29:27.0000] <GPHemsley>
if you prefer

[15:29:50.0000] <Hixie>
the problem is 1.1.1.1 is a list of four "1.0"s, whereas "1.1" is a single number between 1.05 and 1.15.

[15:30:11.0000] <GPHemsley>
ah, there's your problem, then, maybe

[15:30:15.0000] <GPHemsley>
treating integers as floats

[15:30:38.0000] <GPHemsley>
1 < 1.1 < 1.1.1 < 1.1.1.1

[15:31:16.0000] <GPHemsley>
the real question is 1.1 ? 1.10 ? 1.11 ? 1.1.1

[15:31:36.0000] <GPHemsley>
/me shrugs

[15:31:38.0000] <GPHemsley>
gotta eat

[15:31:41.0000] <Hixie>
ok but we need 1 < 1e0 < 1.01 < 1.1 < 1.10 < 1.2 < 1.3 < 14e-1 < 9 < 1e2

[15:31:58.0000] <Hixie>
(http://krijnhoetmer.nl/irc-logs/whatwg/20130214 covers some of this)

[15:49:37.0000] <zewt>
part of it is that you're probably not going to find a single collation that suits all purposes (eg. the hex/exponent thing), so at some point it'll have to be "if you want this or that you have to use an alternate sort key"

[15:50:08.0000] <zewt>
eg. for ip addresses, just have a sort key of the ip address in decimal

[15:51:11.0000] <zewt>
not that I know which things it should and shouldn't handle, or which things are mutually incompatible with which other things

[15:58:17.0000] <GPHemsley>
yeah, I mean, how often are you going to be sorting all of these things at the same time?

[15:58:49.0000] <GPHemsley>
(and if you are, you might not want to do all this fancy parsing)


2013-02-16
[16:00:18.0000] <Hixie>
zewt: yeah. i'm trying to make the default handle the most cases in isolation (e.g. ip addresses alone, floating point numbers alone)

[16:01:00.0000] <Hixie>
zewt: the hard ones are when two identical sets of strings should sort differently, and that i have no way to solve, obviously

[16:01:03.0000] <GPHemsley>
it seems to me you might want to have an adaptive algorithm that decides between 1.0 < 1.1 = 1.10 < 1.11 < 1.9 and 1.0 < 1.1 < 1.9 < 1.10 < 1.11

[16:01:25.0000] <Hixie>
that's an interesting idea

[16:01:40.0000] <Hixie>
kind of score the suitability of various algorithms along all the values, and pick the one that scores highest?

[16:01:47.0000] <GPHemsley>
basically

[16:01:58.0000] <Hixie>
not sure how i'd tell the difference between those two that you listed if those were the values

[16:02:01.0000] <GPHemsley>
because 95% of the time, you're be sorting things all of the same type

[16:02:05.0000] <Hixie>
but hex you could detect

[16:02:24.0000] <GPHemsley>
well, if those were the only values, do float sort

[16:02:32.0000] <GPHemsley>
but if there's a 1.0.1 in there, do version sort

[16:02:33.0000] <Hixie>
this is an interesting idea

[16:03:36.0000] <GPHemsley>
"<gsnedders> Well, I believe Presto has the most complete implâ¦"

[16:04:19.0000] <Hixie>
i think on reflection that changing algorithm is probably too surprising, but it's definitely an interesting idea i hadn't considered

[16:04:25.0000] <Hixie>
/me ponders it further while getting a snack

[16:05:01.0000] <GPHemsley>
and version sort handles IP addresses, too

[16:05:25.0000] <GPHemsley>
it's basically the difference between treating the string as a single float or multiple ints separated by a .

[16:06:16.0000] <GPHemsley>
a possible outcome with this method (if you take it this far) is allowing further algorithm extensions for new types

[16:06:19.0000] <GPHemsley>
in the future

[16:07:45.0000] <zewt>
heuristic sorts? sounds really confusing

[16:08:08.0000] <GPHemsley>
also, you want to make sure that when someone sees the output of a sort, they're not like "why did it sort like this?"

[16:08:18.0000] <zewt>
better to pick a default and give the author a way to pick a different collation method than be magic and have something that changes out from under you seemingly randomly

[16:08:40.0000] <GPHemsley>
i.e. no one should have to track Hixie down to find out the justification

[16:09:13.0000] <GPHemsley>
zewt: Well, it's only the most basic heuristic, I think

[16:10:41.0000] <GPHemsley>
to be clear, 1.2e3 should never be [1, "2e3"]

[16:10:53.0000] <zewt>
i mean, i don't think any kind of adaptive sort that picks between "1.10" being [1,10] and [1.1] depending on other values in the list would ever be not weird

[16:11:34.0000] <GPHemsley>
zewt: In >95% of the cases, you wouldn't even know the difference

[16:11:45.0000] <zewt>
especially since changing the value in row 10 might cause the sort to "re-adapt", and suddenly the order of rows 1 and 2 switch places

[16:12:08.0000] <zewt>
being confusing 5% of the time is a lot

[16:12:09.0000] <GPHemsley>
basically, it'd be [1.1] unless "1.0.1" is encountered

[16:12:41.0000] <GPHemsley>
if it does change, it'd likely change in a more intuitive direction

[16:13:12.0000] <GPHemsley>
meaning, if you have a list of version numbers, you wouldn't want them sorted such that 1.1 < 1.11 < 1.9

[16:13:26.0000] <zewt>
so if i have rows "1.0", "1.10", "1.2", they'd sort that way, then if i add another row "1.3.4", suddenly rows 1 and 2 switch positions

[16:13:39.0000] <GPHemsley>
that to me is a good thing

[16:13:48.0000] <zewt>
if you want 1.10 to sort as [1,10], then you probably *always* want it to do that for that column, not only if there happens to be a 1.3.4 item somewhere else

[16:14:01.0000] <zewt>
otherwise it'd be wrong when you don't happen to have that 1.3.4 row

[16:14:30.0000] <GPHemsley>
but the problem is determining between 1.1 = 1.10 and 1.1 < 1.10

[16:15:03.0000] <GPHemsley>
in some cases, it'll be the former; in others, the latter

[16:15:05.0000] <zewt>
right, and you simply can't decide if there doesn't happen to be a 3rd row saying "1.2.3"--when that row isn't there, you'll guess wrong

[16:15:15.0000] <GPHemsley>
exactly

[16:15:23.0000] <zewt>
which is why i'm saying adaptive is bad :)

[16:15:24.0000] <GPHemsley>
but you have to a have default

[16:15:38.0000] <GPHemsley>
which essentially means you have to "decide" without any information

[16:16:13.0000] <zewt>
right, i mean the sorting shouldn't be adaptive and it should just pick one

[16:16:15.0000] <GPHemsley>
then when you get (more) information, you can re-decide

[16:16:29.0000] <zewt>
if that isn't what you want for a particular case, you use explicit sort keys to get what you want

[16:16:59.0000] <GPHemsley>
perhaps

[16:17:00.0000] <GPHemsley>
but how?

[16:17:14.0000] <zewt>
eg. if you have a release table with a version column, containing versions 1.0, 1.2 and 1.10, and you want them sorted in that order, then you'd provide alternate sort keys (forget the attribute name) containing eg. "1 1", "1 2" and "1 10"

[16:17:28.0000] <GPHemsley>
oh

[16:17:32.0000] <GPHemsley>
IDK about that

[16:17:33.0000] <zewt>
if you provide the alt sort key, it sorts based on that rather than the text of the field

[16:17:55.0000] <GPHemsley>
that's a lot of extra work

[16:18:01.0000] <zewt>
not really

[16:18:03.0000] <GPHemsley>
and that extra work isn't always possible

[16:18:06.0000] <zewt>
and you're going to need it no matter what you do

[16:18:16.0000] <GPHemsley>
who is the "you" in this case?

[16:18:39.0000] <GPHemsley>
the author shouldn't have to specify two values for each cell

[16:18:51.0000] <zewt>
the browser vendor and the api

[16:19:12.0000] <zewt>
the author is going to have to, any time he wants a sort order we didn't think of already

[16:19:35.0000] <zewt>
trying to minimize where it's needed is fine, of course

[16:19:41.0000] <Hixie>
i'm with zewt on the larger point of the confusion caused by dynamically picking the sort algorithm here being too great, i think. it's an interesting idea though.

[16:20:17.0000] <GPHemsley>
what I'm saying is, we should give the author the ability to specify which algorithm to use with e.g. an attribute

[16:20:27.0000] <GPHemsley>
rather than forcing them to specify two values for each cell

[16:20:43.0000] <GPHemsley>
if you want to avoid that dynamic sorting change

[16:20:44.0000] <Hixie>
yeah, a feature to pick a specific algorithm is a fine idea

[16:20:51.0000] <Hixie>
(not one i'd do in v1, but in general)

[16:20:56.0000] <GPHemsley>
(though I wonder how often you're adding rows and sorting at the same time)

[16:21:00.0000] <zewt>
i don't mind there being different sort modes (you're going to have to fall back on sort keys at some point, though)

[16:22:18.0000] <GPHemsley>
Hixie: Any time you do anything but lexical sort, you're gonna wind up with situations where the sorting is wrong, and perhaps in an unexpected way.

[16:22:30.0000] <GPHemsley>
Hixie: Which suggests to me that you might not want to put it off until v2

[16:22:38.0000] <Hixie>
nah, it's definitely not "any time"

[16:22:49.0000] <GPHemsley>
Hixie: At least not for the issue of how to handle numbers

[16:23:06.0000] <Hixie>
the only common cases that will fail that i can think of cases where you have version numbers in different styles, or only two-part version numbers.

[16:23:17.0000] <Hixie>
well, that and hex in certain unlucky cases

[16:23:21.0000] <zewt>
unexpected isn't catastrophic, unpredictable or hard to understand are much worse

[16:23:30.0000] <Hixie>
both of which are pretty rare in the cosmic scale of things

[16:25:12.0000] <GPHemsley>
I am concerned about a situation were the integers in a hex value cause hex values to be sorted non-alphabetically

[16:25:49.0000] <Hixie>
yeah i wish there was a good way to handle hex

[16:26:04.0000] <Hixie>
non-base-ten numbers just aren't going to work with what i have so far

[16:26:07.0000] <GPHemsley>
and I do think it'd be weird to have 1 < 1.10 < 1.9 < 1.10.1

[16:26:19.0000] <zewt>
personally i'd prefer to not support 1e10 in favor of hex sorting intuitively, personally i just don't see any value in it

[16:26:35.0000] <GPHemsley>
I'm inclined to agree

[16:26:50.0000] <zewt>
it's an easy thing to work around (specify a sort key of the value in decimal)

[16:27:10.0000] <GPHemsley>
yeah, I think that's an acceptable/appropriate usecase for having 2 values

[16:27:35.0000] <GPHemsley>
because it's not just a hack that is essentially having the information twice

[16:27:47.0000] <GPHemsley>
instead, the e notation is a shortcut of the decimal version

[16:28:23.0000] <zewt>
well, i meant you can specify the hex value in decimal

[16:28:36.0000] <GPHemsley>
oh

[16:28:44.0000] <GPHemsley>
that'd be kind of silly for, e.g. a hash

[16:28:49.0000] <zewt>
if you have 10e500000 (an extreme example) you can't reasonably specify a sort key in decimal

[16:29:23.0000] <GPHemsley>
true

[16:29:27.0000] <zewt>
(though iirc in a previous discussion there was a clever workaround for that, don't remember what it was off hand)

[16:29:29.0000] <GPHemsley>
but I think a hash is more likely than that

[16:30:15.0000] <GPHemsley>
and a hash isn't commonly considered an integer

[16:30:33.0000] <GPHemsley>
by which I mean, it'd be unintuitive to represent it as a decimal

[16:30:43.0000] <zewt>
a hash is just a number, the point of formatting as an integer is simply so it won't be sorted as a float

[16:31:18.0000] <GPHemsley>
I don't think everyone will see it that way

[16:31:28.0000] <GPHemsley>
(perception is reality)

[16:31:54.0000] <zewt>
people can be wrong, i'm not too concerned :)

[16:33:29.0000] <GPHemsley>
I think the number of people confused by a sort order changing when adding new rows to the table is smaller than the number of people who don't see a hash as an integer

[16:33:51.0000] <zewt>
i think it's orders of magnitude smaller

[16:34:01.0000] <zewt>
it's not only confusing, it's wrong

[16:34:21.0000] <GPHemsley>
"wrong" or not, perception is reality

[16:34:24.0000] <zewt>
it would actively choose the wrong sort order, then "fix" itself when you add more rows--that's just wrong

[16:34:27.0000] <zewt>
... what?

[16:34:30.0000] <GPHemsley>
oh

[16:34:37.0000] <GPHemsley>
maybe we're not talking about the same thing?

[16:35:00.0000] <GPHemsley>
which "it" are you referring to?

[16:35:29.0000] <zewt>
adaptive sorting would give the wrong sort until you happen to give it a new row that makes it switch

[16:36:10.0000] <GPHemsley>
it is my understanding that it'd be wrong all the time without the adaptive sorting

[16:36:15.0000] <zewt>
if i have 1.1 1.2 1.10 2.1.5, and it sorts in that order (because the 2.1.5 kicks it into "version number mode"), if i then remove 2.1.5 it would drop back into "floating-point mode", which isn't (in this example) the sort order i want

[16:36:58.0000] <zewt>
wrong all the time is much better than being right only if you happen to have "2.1.5" in the list somewhere, then you'll have people going <td hidden>1.1.1.1</td><!-- trick the weird sort --> or something like that

[16:37:43.0000] <GPHemsley>
I'm not sure I follow you

[16:37:53.0000] <GPHemsley>
why would they do that? what would be their intention?

[16:38:41.0000] <zewt>
because if the list happens to not contain 2.1.5, and they still want 1.1 1.2 1.10 ordering, they'd have to somehow get the sort back into that ordering

[16:38:57.0000] <GPHemsley>
oh, I see

[16:39:09.0000] <zewt>
if the logic is "sort like a version number if at least one row contains three or more integers separated by periods"

[16:39:16.0000] <GPHemsley>
right

[16:39:26.0000] <GPHemsley>
I thought you meant going the other way

[16:39:34.0000] <GPHemsley>
that's why I was confused

[16:39:37.0000] <zewt>
it'd be fine to have a sort order attribute somewhere to toggle it explicitly

[16:39:48.0000] <GPHemsley>
that was my argument

[16:41:15.0000] <zewt>
(personally i'd be more interested in a natural sort, but that's also something you can mostly do with sort keys, so not too concerned)

[16:42:01.0000] <zewt>
though it might be that a natural sort and a version sort would turn out to be the same thing (or could, with some effort)

[16:42:20.0000] <GPHemsley>
I do think it's weird to have "1.0" < "4.4e2e2" < "0.9e1" < "1000" < "10000.0" < "1.1.1" < "1.1.1.1"

[16:43:15.0000] <zewt>
i think a little weirdness isn't the end of the world, if it does well at a lot of realistic cases, though

[16:43:57.0000] <Hixie>
clearly '1a' < '1b', and clearly ' 1'<'1'. But should ' 1b' be < or > than '1a'?

[16:44:02.0000] <Hixie>
i'm thinking >

[16:45:04.0000] <zewt>
in principle you could say that a number is only parsed as a float if it isn't followed by a period followed by non-whitespace (or something like that), so "Cost: $1.1." is a float but "1.1.A" is not; but not sure in the general case

[16:46:27.0000] <GPHemsley>
Hixie: '1' < ' 1' < ' 1b' < '1a' < '1b' ?

[16:46:42.0000] <GPHemsley>
oh no

[16:46:47.0000] <Hixie>
' 1'<'1'

[16:46:59.0000] <GPHemsley>
Hixie: ' 1' < ' 1b' < '1' < '1a' < '1b' ?

[16:47:19.0000] <Hixie>
you don't think leading spaces should be second class citizens?

[16:47:44.0000] <GPHemsley>
whatever they are, I think they should be treated equally in all cases, no?

[16:48:24.0000] <Hixie>
i'm thinking with one number you sort first by the prefix if it's not whitespace, then by the number, then by the suffix, then by the whitespace

[16:50:12.0000] <GPHemsley>
so you're saying ' 1' < '1' < '1a' < ' 1b' < '1b' ?

[16:50:29.0000] <Hixie>
yeah

[16:50:50.0000] <GPHemsley>
hmm, yeah, I guess that works

[16:51:19.0000] <Hixie>
how about ' 1.00' vs '1.0'? does the space win, or does the sorter string representing the number win?

[16:51:37.0000] <Hixie>
normally 1.0<1.00 and normally ' 1'<'1'

[16:52:05.0000] <GPHemsley>
'1.0' < ' 1.00'

[16:52:18.0000] <GPHemsley>
the space only works as a tie-breaker

[16:52:45.0000] <Hixie>
so no-WS-prefix, then number, then suffix, then number-as-string, then WS-prefix.

[16:52:45.0000] <GPHemsley>
'use case' < 'usecase'

[16:52:49.0000] <GPHemsley>
(maybe?)

[16:53:04.0000] <Hixie>
where one of non-WS-prefix and WS-prefix is going to be the empty string

[16:54:16.0000] <GPHemsley>
so, '3rd' </> '3rd'?

[16:54:20.0000] <GPHemsley>
ugh

[16:54:26.0000] <GPHemsley>
so, '3.0rd' </> '3rd'?

[16:54:39.0000] <Hixie>
>

[16:55:10.0000] <Hixie>
because 3.0==3, 'rd'=='rd', but '3.0'>'3'.

[16:55:14.0000] <GPHemsley>
when does number-as-string come into play?

[16:55:24.0000] <Hixie>
after you've exhausted all other options

[16:55:29.0000] <GPHemsley>
example?

[16:55:30.0000] <Hixie>
except meaningless prefix whitespace

[16:55:44.0000] <Hixie>
the case you gave is a perfect example

[16:55:50.0000] <GPHemsley>
oh, great

[16:55:55.0000] <GPHemsley>
so part of my brain understands

[16:55:59.0000] <Hixie>
hah

[16:56:19.0000] <Hixie>
i feel like i have made a poor career choice somewhere, for me to have ended up having to make the decisions i'm making today

[16:56:25.0000] <GPHemsley>
heh

[16:56:41.0000] <Hixie>
ah well, monday hixie can figure it out

[16:56:42.0000] <Hixie>
bbl

[16:57:32.0000] <GPHemsley>
so, '3nd' < '3rd' < '3.0rd' < ' 3nd' < ' 3rd' < ' 3.0rd'

[16:57:50.0000] <GPHemsley>
or

[16:58:41.0000] <GPHemsley>
' 3nd' < '3nd' < ' 3rd' < '3rd' < ' 3.0rd' < '3.0rd'

[16:59:03.0000] <GPHemsley>
/me has no idea

[16:59:23.0000] <GPHemsley>
my brain hurts

[17:17:17.0000] <tantek>
GPHemsley, rather than worry about the syntax (for circa dates) let's keep collecting real world examples. syntax-shedding can always come later. that being said, feel free to post such syntax brainstorms in the comments for the proposal so we can at least collect them.

[20:44:15.0000] <karlcow>
http://www.quickmeme.com/meme/3t0ltf/

[21:15:41.0000] <MikeSmith>
haha

[21:15:44.0000] <MikeSmith>
nice

[22:12:45.0000] <MikeSmith>
is b2g multi-process?

[00:58:27.0000] <Ms2ger>
MikeSmith, yes, b2g has multiple processes

[00:59:01.0000] <MikeSmith>
Ms2ger: for content?

[00:59:35.0000] <Ms2ger>
At least one parent/one child; I'm not clear on the details

[00:59:39.0000] <MikeSmith>
ok

[01:00:16.0000] <MikeSmith>
wondering why that couldn't be reused to provide per-tab processes for Firefox

[01:00:28.0000] <Ms2ger>
Ah

[01:00:31.0000] <Ms2ger>
Extensions

[01:00:47.0000] <MikeSmith>
oh

[01:01:01.0000] <Ms2ger>
That's one issue, at least

[01:01:16.0000] <sangwhan>
Is it a process per "application" on B2G?

[01:01:46.0000] <Ms2ger>
See above :)

[01:02:22.0000] <sangwhan>
I decipher that as one for the OS UI and one for the applications

[01:03:07.0000] <othermaciej>
MikeSmith: it's harder to convert an existing browser to multi-process than to do it for a new one

[01:03:09.0000] <sangwhan>
/me has been down the road of HTML powered mobile apps before, we used to call them widgets

[01:03:49.0000] <othermaciej>
(IMO anyway; I only have direct experience with the latter)

[01:03:57.0000] <othermaciej>
(er, the former I mean)

[01:04:08.0000] <MikeSmith>
in other news I'm trying to build Servo but the mozjs part of the build is failing with an "indirect goto might cross protected scopes" that appears to be the exactly the same bug as https://bugzilla.mozilla.org/show_bug.cgi?id=664252 which was resolved=fixed in 2011... :(

[01:04:24.0000] <MikeSmith>
othermaciej: yeah I can imagine

[01:04:52.0000] <MikeSmith>
you guys did it for WebKit2 and Safari though, right?

[01:05:18.0000] <sangwhan>
Making a existing browser sensibly multi-process isn't easy. There are ultra dirty ways to do it though...

[01:05:42.0000] <MikeSmith>
I guess for Safari you don't have the Extensions problem to deal with

[01:05:56.0000] <othermaciej>
Safari has extensions

[01:06:02.0000] <MikeSmith>
oh

[01:06:17.0000] <othermaciej>
some of our extensions APIs were not designed well for multiprocess

[01:06:33.0000] <othermaciej>
but there is more of a defined API than for Firefox extensions

[01:07:50.0000] <MikeSmith>
I guess the other thing is that Firefox extensions seem to be allowed to do just about anything

[01:08:00.0000] <MikeSmith>
I mean they can get pretty deep down

[01:08:26.0000] <Ms2ger>
Rather too deep :/

[01:09:20.0000] <MikeSmith>
"decisions that seem incredibly clear in the near termâ¦ donât always seem so clear several years later"

[01:09:33.0000] <MikeSmith>
https://blog.mozilla.org/gen/2013/02/15/john-lillys-thoughts-on-opera-moving-to-webkit/

[01:09:37.0000] <MikeSmith>
seems apt

[01:12:45.0000] <othermaciej>
is this the best reference for mime sniffing?

[01:13:02.0000] <MikeSmith>
hmm maybe the Servo build is meant to be run with gcc instead of clang?

[01:13:04.0000] <othermaciej>
yes, Safari's extensions, like Chrome's are more shallow

[01:13:39.0000] <MikeSmith>
shallow seems prudent

[01:28:57.0000] <sangwhan>
MikeSmith: You naive person, you default to clang?

[01:29:43.0000] <Ms2ger>
Spidermonkey should build just fine with clang...

[01:32:29.0000] <MikeSmith>
filed a Servo bug

[01:36:28.0000] <sangwhan>
not up to date with www-style, is css3 generated content a dumped spec?

[01:38:10.0000] <sangwhan>
/me found some testcases that depend on the content property to visually display a pass

[01:38:47.0000] <Ms2ger>
element { content: "foo" }?

[01:38:55.0000] <Ms2ger>
Nobody supports that

[01:40:29.0000] <sangwhan>
...with a exception of Presto.

[01:40:40.0000] <Ms2ger>
As I said :)

[01:42:31.0000] <sangwhan>
I don't quite see any negative effects of supporting it though

[01:43:04.0000] <sangwhan>
...although being able to do insane stuff like what's defined in css3 generated content doesn't sound fun to implement

[01:43:31.0000] <Ms2ger>
The usual, lack of engineering recourses and compat issues

[03:55:28.0000] <Ms2ger>
> document.createElement("image").localName

[03:55:31.0000] <Ms2ger>
"img"

[03:55:34.0000] <Ms2ger>
Yay, Chrome.

[06:42:10.0000] <gsnedders>
No, no, I will not bitch at people talking about asm.js cluelessly.

[06:42:26.0000] <gsnedders>
PEOPLE, STOP BEING WRONG ON THE INTERNET!

[08:28:35.0000] <MikeSmith>
slightlyoff: wtf are you talking about with the wpa2 tweet who even knows what wpa2 is

[08:33:42.0000] <slightlyoff>
MikeSmith: uhhh....some people, I guess?

[08:39:52.0000] <MikeSmith>
well I understood it but I don't think I count

[08:40:54.0000] <MikeSmith>
anyway, 140 chars

[10:56:16.0000] <Ms2ger>
/me loves that the CSSWG preprocessor uses ul instead of ol for its tocs

[11:00:19.0000] <boogyman>
TOCs do not imply a specific order

[11:14:18.0000] <zewt>
they don't? heh


2013-02-17
[16:50:40.0000] <Jasper>
http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#drawing-images

[16:50:49.0000] <Jasper>
"

[16:50:50.0000] <Jasper>
When the source rectangle is outside the source image, it must be clipped to the source image, and the destination rectangle must be clipped in the same proportion.

[16:50:50.0000] <Jasper>
"

[16:51:27.0000] <Jasper>
(whoops, didn't mean to paste line breaks). Is it possible to specify how this clipping is done? Firefox w/out acceleration, Firefox w/ acceleration and Chrome all seem to do different things.

[16:51:54.0000] <Jasper>
See: http://magcius.github.com/xserver.js/copyimage.html (press any key repeatedly)

[16:53:18.0000] <Jasper>
Firefox w/ acceleration seems to do naive clipping and stretches the image. Chrome doesn't seem to draw anything, it just aborts the request, and Firefox w/out acceleration smartly clips the source and destination so that it's as if you just drew on a larger canvas, and then clipped it.

[18:51:23.0000] <Hixie>
Jasper: not possible to specify what it should be exactly but iirc we do specify what it should be

[18:52:38.0000] <Jasper>
Hixie, as far as I can tell, it doesn't specify how things should be clipped anywhere.

[18:53:27.0000] <Hixie>
what rendering do you disagree with that you think the spec allows?

[18:55:10.0000] <Jasper>
Hixie, well, let's assume a 50x50 canvas and we do drawImage(20, 20, 20, 20, 40, 40, 20, 20);

[18:55:42.0000] <Jasper>
It might be interpreted as drawImage(20, 20, 20, 20, 40, 40, 10, 10);, which basically clips the extents

[18:55:52.0000] <Hixie>
with the drawImage image being that canvas, or another image? i'm confused, what are we drawing on what

[18:56:23.0000] <Jasper>
Hixie, does it matter what the source is?

[18:57:01.0000] <Jasper>
My demo above uses the same canvas as the source, but that really doesn't matter, I think.

[18:57:03.0000] <Hixie>
the part of the spec you quoted is all about the source, so yes :-)

[18:57:55.0000] <Jasper>
Hixie, ah, right. Just assume that the source is big enough. It's the destination I care about.

[18:58:20.0000] <Hixie>
then the part you quoted is of no relevance :-)

[18:58:22.0000] <Hixie>
/me looks at the spec

[18:58:37.0000] <Jasper>
"and the destination rectangle must be clipped in the same proportion"

[18:58:42.0000] <Jasper>
I'm assuming that means "to the destination image"

[18:58:47.0000] <Jasper>
not "to the source image"

[18:58:52.0000] <Hixie>
what's only "When the source rectangle is outside the source image"

[18:59:22.0000] <Jasper>
Hixie, it's very ambiguous

[18:59:35.0000] <Hixie>
how is that ambiguous?

[19:00:29.0000] <Jasper>
I initially read it as "and the destination rectangle must be clipped in the same proportion" as expanding to "... When the destination rectangle is outside the destination image, it must be clipped to the destination image"

[19:00:34.0000] <Hixie>
anyway, to answer your original question, looks like the spec doesn't say anything special about what happens when you paint outside the dest, so you're just required to do it, and the pixels that land outside the scratch bitmap are never used

[19:00:46.0000] <Hixie>
ah, ok

[19:00:51.0000] <Hixie>
yeah that wasn't intended

[19:00:57.0000] <Hixie>
let me fix that

[19:01:58.0000] <Jasper>
I think it would be useful to specify a behavior for what happens when you paint outside the dest, and I think the render being the same as if you had an infinite canvas.

[19:02:14.0000] <Hixie>
yes, that's what the spec intends

[19:02:35.0000] <Jasper>
Right. Only Firefox w/out acceleration does that correctly for going past the width/height.

[19:02:50.0000] <Jasper>
None of the browsers handle negative destination coordinates well.

[19:03:45.0000] <Jasper>
At least, none that I tested (Chrome Dev Channel, Firefox Nightly w/ and w/out acceleration, IE10 Preview Release)

[19:03:59.0000] <Hixie>
what do they do?

[19:04:25.0000] <Jasper>
Chrome just aborts the drawImage.

[19:04:33.0000] <Hixie>
o_O

[19:04:45.0000] <Jasper>
Yeah.

[19:05:22.0000] <Hixie>
you sure? works for me...

[19:05:34.0000] <Hixie>
e.g. http://software.hixie.ch/utilities/js/canvas/?c.clearRect(0%2C%200%2C%20640%2C%20480)%3B%0Ac.save()%3B%0Atry%20%7B%0A%20%20c.drawImage(img1%2C%2010%2C10%2C50%2C50%2C%20-20%2C-20%2C50%2C50)%3B%0A%7D%20finally%20%7B%0A%20%20c.restore()%3B%0A%7D%0A

[19:05:44.0000] <Jasper>
http://magcius.github.com/xserver.js/copyimage.html

[19:05:48.0000] <Jasper>
Hold down any key.

[19:06:00.0000] <Jasper>
No idea if that's a special code path.

[19:06:09.0000] <Hixie>
i don't understand what that page is doing

[19:06:17.0000] <Hixie>
can you make a simpler test case?

[19:06:23.0000] <Jasper>
I can try.

[19:06:40.0000] <Hixie>
(you can use http://software.hixie.ch/utilities/js/canvas/ to save time)

[19:06:45.0000] <Hixie>
(it makes writing canvas tests much easier)

[19:07:28.0000] <Jasper>
Thanks.

[19:07:31.0000] <Jasper>
That's really neat.

[19:08:00.0000] <Hixie>
i just checked in http://html5.org/tools/web-apps-tracker?from=7723&to=7724 to the spec to try to clarify the requirement

[19:08:07.0000] <Hixie>
i gotta go eat dinner, bbiab

[19:27:27.0000] <Jasper>
Hixie, OK, so it seems to be weird interaction coming from the source rect going beyond the source image. So, it's intended, it's just not what I expected.

[19:31:39.0000] <Jasper>
http://software.hixie.ch/utilities/js/canvas/?c.clearRect%280%2C%200%2C%20640%2C%20480%29%3B%0Ac.save%28%29%3B%0Atry%20{%0A%20%20var%20posX%20%3D%20c.canvas.width%20-%20img2.width%20%2B%2030%3B%0A%20%20var%20posY%20%3D%20c.canvas.height%20-%20img2.height%20%2B%2030%3B%0A%20%20c.drawImage%28img2%2C%20posX%2C%20posY%29%3B%0A%20%20c.drawImage%28c.canvas%2C%20posX%2C%20posY%2C%20img2.width%2C%20img2.height%2C%20posX%2B20%2C%20posY%2B20%2C%20img2.width%2C

[19:31:39.0000] <Jasper>
%20img2.height%29%3B%0A}%20finally%20{%0A%20%20c.restore%28%29%3B%0A}%0A

[19:31:44.0000] <Jasper>
yikes, IRC doesn't like that

[19:32:06.0000] <Jasper>
the cat grows larger, which isn't really what I expected for something where we're only modifying the position

[19:32:28.0000] <Jasper>
that's in Firefox w/ acceleration. In Chrome, it doesn't like it at all, and draws one cat.

[19:32:44.0000] <Jasper>
Similar cases happen for negative coordiantes as well.

[19:33:07.0000] <Jasper>
Perhaps there should be a special case for the source and destination being the same?

[21:01:10.0000] <Hixie>
Jasper: weird, i don't understand why chrome doesn't render the cat in that one

[21:01:43.0000] <Jasper>
Hixie, do you think that Firefox stretching the image is correct?

[21:02:02.0000] <Jasper>
I'd have to work out the math of how the source and destination rectangle combine.

[21:02:07.0000] <Hixie>
it should look exactly like it would with -30 instead of +30, except shifted over

[21:03:36.0000] <Jasper>
Hixie, OK, so should I file browser bugs?

[21:04:06.0000] <Hixie>
yeah

[21:04:09.0000] <Hixie>
cc me if you do? ianâhc

[21:04:18.0000] <Jasper>
OK.

[21:04:46.0000] <Hixie>
test case at http://goo.gl/VFSGn

[21:04:48.0000] <Hixie>
shows the problem well

[21:10:10.0000] <Jasper>
Hixie, I don't know how to CC you on the Chromium issues tracker, so here: https://code.google.com/p/chromium/issues/detail?id=176714

[21:10:18.0000] <Hixie>
thanks

[21:10:35.0000] <Jasper>
That's a great testcase. I'll use it for the Firefox bug as well.

[21:10:57.0000] <Hixie>
thanks a ton for filing the bugs, btw

[21:11:03.0000] <Hixie>
much appreciated

[21:14:18.0000] <Jasper>
I work on a big open-source project as well -- I know how it feels to not get bugs reported.

[21:14:18.0000] <Jasper>
Thanks for being patient.

[21:18:47.0000] <Jasper>
Hixie, filed FF bug, CC'd you at https://bugzilla.mozilla.org/show_bug.cgi?id=842110

[21:19:00.0000] <Hixie>
ta

[22:48:14.0000] <dbaron>
Jasper, what are the upload / download buttons and the textarea supposed to do?

[22:48:31.0000] <dbaron>
Jasper, are they testcase-writing tools or part of the actual testcase?

[22:48:37.0000] <Jasper>
dbaron, I didn't write the harness, Hixie did.

[22:48:49.0000] <dbaron>
Jasper, when filing bugs, it's really useful to just have the testcase

[22:48:49.0000] <Jasper>
dbaron, they're not part of the testcaews

[22:50:00.0000] <Jasper>
They apparently POST something to clipboard.cgi. I don't know what that does.

[01:34:05.0000] <Philip`>
Jasper: It's uploading/downloading to/from a global shared clipboard

[01:34:28.0000] <Philip`>
which is quite useful if you're trying to develop a test on multiple devices

[01:35:35.0000] <Philip`>
though obviously it's totally non-scalable and in theory it can't possibly work (though in practice it does work, like a lot of Hixie's crazy ideas)

[07:45:08.0000] <zewt>
sort of wish indexeddb followed mongo's data model; it works well, and is very simple (especially since it essentially needs no explicit transactions at all)

[09:15:40.0000] <GPHemsley>
2004 is dead. Long live 2004! https://brendaneich.com/2004/06/the-non-world-non-wide-non-web/


2013-02-18
[22:13:57.0000] <roc>
am I right to conclude that http://www.w3.org/html/wg/drafts/html/master/rendering.html#frames-and-framesets suggests CSS borders and padding don't apply to <frame> and <frameset> elements?

[22:50:28.0000] <JonathanNeal>
why matches instead of is?

[22:50:37.0000] <JonathanNeal>
"matches" instead of "is", rather?

[00:58:42.0000] <jgraham>
darobin: Please sir, I have a complaint

[00:58:58.0000] <Ms2ger>
Here you have your fish license already

[00:59:30.0000] <darobin>
hmmmm?

[00:59:33.0000] <jgraham>
Ms2ger: Well you are the cause of the complaint (sort of) :p

[00:59:36.0000] <jgraham>
https://github.com/w3c/html-testsuite/pull/26

[00:59:36.0000] <Ms2ger>
:D

[00:59:43.0000] <darobin>
a complaint?

[00:59:52.0000] <jgraham>
I fixed that

[01:00:01.0000] <jgraham>
But I can't push to that repo

[01:00:03.0000] <darobin>
is it the sort of complaint that can be addressed by making someone editor for polyglot?

[01:00:20.0000] <jgraham>
I suggets making annevk editor for polyglot

[01:00:31.0000] <Ms2ger>
jgraham, try again

[01:00:53.0000] <darobin>
jgraham: you're "jgraham" on GitHub, right?

[01:01:05.0000] <jgraham>
darobin: Yes

[01:01:13.0000] <jgraham>
Ms2ger: I hadn't tried yet

[01:01:26.0000] <darobin>
you're now part of team HTML

[01:01:27.0000] <jgraham>
I chose to believe it when it said "read only access" :)

[01:01:40.0000] <jgraham>
Is there a special handshake?

[01:01:46.0000] <darobin>
welcome to the HTML WG!!!!

[01:01:58.0000] <darobin>
moar srsly, you should be able to push

[01:02:29.0000] <Ms2ger>
On another note, I guess we need a tester group for the new web-platform-tests repo

[01:02:36.0000] <Ms2ger>
Good morning, polyglot editor

[01:02:50.0000] <jgraham>
Pushed

[01:03:10.0000] <darobin>
Ms2ger: yeah, I'll do that all together

[01:03:28.0000] <jgraham>
Thanks

[01:04:41.0000] <annevk>
Wearing my DocXS t-shirt today

[01:05:01.0000] <annevk>
Sort of apt it's black in hindsight

[01:06:45.0000] <jgraham>
Yeah, I like that shirt

[01:08:13.0000] <annevk>
Ms2ger: more like destroyer

[01:26:48.0000] <annevk>
Ms2ger: DOM says Mozilla now; okay?

[01:26:56.0000] <annevk>
Ms2ger: will update the rest as I get to them

[01:27:16.0000] <Ms2ger>
Sure :)

[01:31:59.0000] <Ms2ger>
jgraham, ping

[01:39:40.0000] <Ms2ger>
/me comments instead

[01:41:51.0000] <jgraham>
Ms2ger: Ooh iterative review

[01:42:38.0000] <Ms2ger>
I think I'm done now ;)

[01:43:43.0000] <jgraham>
I wonder if the spec changed or if these tests were always wrong

[01:44:40.0000] <Ms2ger>
The spec changed

[01:45:10.0000] <Ms2ger>
Somewhere after r7000

[03:07:37.0000] <annevk>
Hmm, how hard can it be to find an Apple plug compatible with Switzerland

[03:12:39.0000] <karlcow>
http://www.w3.org/QA/2008/07/html5-parsing-howto.html#c4009627

[03:14:07.0000] <annevk>
Can you pretty please do my homework?

[03:16:39.0000] <annevk>
Well that's great, the cycle club I signed up for does not support last names that contain a space

[03:16:54.0000] <annevk>
Guess I'm now an i18n victim

[03:17:15.0000] <karlcow>
heh. annevk I had not read it like this. âº but that could be a reading, indeed.

[03:18:03.0000] <annevk>
"Are you sure you want to update this details?" The IT infrastructure from the cycle club is not very impressive

[03:18:13.0000] <karlcow>
Schmidt, ex-Google: "people who are concerned can just change their names."

[03:18:19.0000] <karlcow>
ok it was about privacy :p

[03:19:17.0000] <karlcow>
take a generic nameâ¦ likeâ¦ hmmâ¦ Mike Smith ?

[03:20:11.0000] <annevk>
My brother and I have been discussing to change our last name to Van Kesteren (without contextual lowercase v) as that might work better internationally. But maybe we should make it VanKesteren as that would work even better.

[03:20:37.0000] <doublec>
try <script>alert('johnsmith')</script> as your name. Sounds like it might work.

[03:21:10.0000] <karlcow>
ah doublec might have the solution.  van%20Kestern

[03:21:19.0000] <SimonSapin>
http://xkcd.com/327/ Bobby Tables

[03:21:22.0000] <karlcow>
van%20Kesteren

[03:22:09.0000] <annevk>
doublec: so I have Mr Anne <script>alert(&#39;johnsmith&#39;)</script> in the source now but no alert...

[03:22:44.0000] <doublec>
So <script> is unescaped?

[03:22:52.0000] <annevk>
<script>alert(1)</script> works :-)

[03:22:56.0000] <doublec>
hahaha

[03:23:34.0000] <doublec>
now try sql injection that actually updates the table to include your correct name ;)

[03:23:37.0000] <karlcow>
This cycling club seems to do stuff with injections. No good! think about Lance Armstrong. no good.

[03:23:51.0000] <jgraham>
Haha

[03:23:55.0000] <annevk>
Oh fuck

[03:24:11.0000] <annevk>
I can no longer change it because I added a space...

[03:24:23.0000] <annevk>
And since <script> is not escaped it eats the rest of the page

[03:24:30.0000] <doublec>
oops

[03:24:34.0000] <annevk>
(they strip everything after a space in the last name)

[03:24:35.0000] <karlcow>
sweet

[03:24:46.0000] <jgraham>
And now I am giggling like a lunatic in my office

[03:25:19.0000] <karlcow>
I imagine at the deskâ¦ "but what the fuck did you do that?" "I'm  just a geek m'dam"

[03:26:05.0000] <annevk>
Fuck, now I need to "hack" this thing via the inspector

[03:26:18.0000] <annevk>
/me hopes that works

[03:26:25.0000] <doublec>
I feel sorry for the admin who next gets the list of cycle club members

[03:26:47.0000] <karlcow>
/me is keeping an eye on BBC homepage about a hacker who tried to steal the data of a cycling club.

[03:26:48.0000] <jgraham>
I think annevk should say sorry by offering to run their website :)

[03:27:20.0000] <annevk>
Ah great, I found the edit personal details URL and they're not echoing my last name there, except in an <input value> thingie which is somewhat properly escaped

[03:27:48.0000] <annevk>
(probably more due to how HTML works than anything on their part)

[03:27:50.0000] <doublec>
using <img src=http://xkcd.com/327/> would have made a fun last name

[03:28:23.0000] <annevk>
if only it did not require a space

[03:28:31.0000] <doublec>
oh true

[03:28:54.0000] <annevk>
oh maybe via document.write() we can avoid that

[03:29:06.0000] <doublec>
that'd need a ' or " though

[03:29:15.0000] <doublec>
which looks like they escape at least '

[03:29:54.0000] <doublec>
there's probably some fancy encoding scheme with a script to decode it and document.write it without using spaces

[03:30:05.0000] <doublec>
the JS equivalent of shell code

[03:31:56.0000] <jgraham>
You could always provide an array of ascii codepoints

[03:32:06.0000] <jgraham>
I think you could avoid space and quotes that way

[03:34:22.0000] <annevk>
Oooh, String.fromCharCode

[03:34:48.0000] <annevk>
document.write(String.fromCharCode(...)) with ... being <img src=http://xkcd.com/327/>

[03:34:57.0000] <annevk>
as a sequence of code points

[03:35:00.0000] <doublec>
nice

[03:35:11.0000] <annevk>
I'll try that, for science

[03:38:18.0000] <doublec>
that 'src' would need to be the actual image file

[03:38:33.0000] <annevk>
oh doh

[03:38:37.0000] <doublec>
http://imgs.xkcd.com/comics/exploits_of_a_mom.png

[03:38:46.0000] <jgraham>
Yup

[03:38:58.0000] <jgraham>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2105

[03:39:28.0000] <doublec>
nifty :)

[03:39:58.0000] <annevk>
damnit

[03:40:06.0000] <annevk>
they have a fixed limit on last names

[03:40:17.0000] <annevk>
need to tinyurl it first

[03:40:19.0000] <doublec>
they might escape ; to

[03:40:32.0000] <annevk>
you don't need a ;

[03:42:45.0000] <doublec>
you can get rid of http: to

[03:42:47.0000] <jgraham>
while loop and multiple scripts?

[03:43:10.0000] <doublec>
for a protocol less url

[03:43:10.0000] <annevk>
success

[03:43:16.0000] <doublec>
\0/

[03:43:16.0000] <annevk>
I'll put proof on twitter

[03:44:14.0000] <annevk>
<script>document.write(String.fromCharCode(60,105,109,103,32,115,114,99,61,104,116,116,112,58,47,47,103,111,111,46,103,108,47,87,107,81,49,51,62))</script> is what I used btw

[03:44:51.0000] <jgraham>
Oh, fromCharCode accepts multiple arguments?

[03:45:16.0000] <jgraham>
Hah, I forgot that. Makes to so easy as to be not fun :(

[03:49:42.0000] <annevk>
Using a loop would probably have hit the length limit

[03:52:27.0000] <MikeSmith>
hsivonen: bugzilla.validator.nu seems to be hurting

[03:53:43.0000] <annevk>
So could also document.write a <script src> using this technique I suppose and do evil stuff

[03:53:48.0000] <annevk>
Oh well

[04:00:59.0000] <sedovsek>
annevk: <script>document.write(Strinâ¦    Thumbs up! :)

[04:04:15.0000] <annevk>
Ms2ger: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20925 ?

[04:05:01.0000] <Ms2ger>
I tend to agree with Hixie on this one

[04:06:29.0000] <jgraham>
Ms2ger: test review?

[04:06:55.0000] <Ms2ger>
?

[04:07:11.0000] <Ms2ger>
I'm trying to also follow this class, so expect some lag :)

[04:08:25.0000] <annevk>
Ms2ger: meh

[05:05:48.0000] <MikeSmith>
Servo uses hubbub

[05:05:53.0000] <MikeSmith>
parser

[05:06:27.0000] <MikeSmith>
or did at least

[05:06:54.0000] <MikeSmith>
seems like it still does, a far as I can tell

[05:12:29.0000] <jgraham>
hsivonen was writing a servo backend for his parser transpiler at one point

[05:13:08.0000] <jgraham>
Seems to me that just writing a parser in servo wouldn't be all that much work. Or at least all the effort would be document.write

[05:13:15.0000] <jgraham>
s/servo/rust/

[05:13:26.0000] <jgraham>
with the global flag set

[05:14:07.0000] <odinho>
I had a friend trying Hubbub, -- but it was not good enough for his use.

[05:15:25.0000] <smaug____>
I believe hsivonen is still converting his parser to rust

[05:20:16.0000] <jgraham>
I am using "was" in the Swedish sense ;)

[05:21:25.0000] <Ms2ger>
Damn Swedes

[05:22:17.0000] <smaug____>
my Swedish is very Rust-y :)

[05:22:37.0000] <jgraham>
Heh

[05:24:30.0000] <Ms2ger>
/me reads backscroll, joins jgraham in giggling like a lunatic

[05:24:39.0000] <jgraham>
(the point, which I guess wasn't obvious, is that a common mistake that Swedes make when speaking English is to use "was" for things that are still ongoing. For example if you are eating a meal and want to comment on its deliciousness, in English you would say "this is nice", but often here you hear people say "this was nice")

[05:30:07.0000] <odinho>
Not only Swedish, it's like than in Norwegian too.

[05:30:38.0000] <payman>
jgraham: I think that's the only place they use past tense (i.e. meal).

[05:31:26.0000] <odinho>
payman: In .no it's used all over the place.

[05:31:59.0000] <payman>
odinho: my Swedish is rusty too, so might be the case there as well.

[05:33:53.0000] <hsivonen>
MikeSmith: bugzilla.validator.nu should be a bit better now

[05:35:08.0000] <MikeSmith>
hsivonen: thanks

[05:35:37.0000] <MikeSmith>
was trying to respond to Jukka bug

[05:36:23.0000] <MikeSmith>
dude is such a pest

[05:37:11.0000] <MikeSmith>
I wish he'd find a different hobby

[05:43:28.0000] <hsivonen>
I'm not sure what bug you are referring to. I thought Jukka was contributing more constructively these days.

[06:19:19.0000] <MikeSmith>
hsivonen: bug filed today http://bugzilla.validator.nu/show_bug.cgi?id=964 about the validator not reporting an error for <body><link rel="stylesheet" href="foo.css">

[06:19:42.0000] <MikeSmith>
which I agree ain't great but thanks to RDFa we're stuck with it

[06:22:31.0000] <annevk>
Making RDF opt-in is not easy?

[06:36:00.0000] <MikeSmith>
we include RDFa checking by default intentionally, because so many pages have Facebook <meta property="og:title" content="foo"> stuff

[06:37:39.0000] <MikeSmith>
annevk: â

[06:38:21.0000] <annevk>
>sad panda<

[06:38:42.0000] <jgraham>
/me blames tobie ;)

[06:45:01.0000] <annevk>
slightlyoff: you around today?

[06:45:20.0000] <annevk>
slightlyoff: I think sicking's proposal of not doing events in Futures for now makes sense

[06:45:27.0000] <annevk>
slightlyoff: to just have "Future" as it were

[07:49:32.0000] <annevk>
Oh, Sylvain is leaving Microsoft. I guess he has been hinting at that for a while now...

[07:52:58.0000] <smaug____>
going where?

[07:54:14.0000] <Ms2ger>
Undisclosed, it seems

[07:54:25.0000] <annevk>
Yeah, afaict.

[07:55:37.0000] <darobin>
I guess Microsoft is slashing as part of its move to WebKit

[07:56:18.0000] <jgraham>
Microsoft slash fiction, you say?

[07:58:14.0000] <annevk>
http://news.ycombinator.com/item?id=5237967 I suspect that does not include jl / bratell, but I hope they leave anyway to do bigger things.

[07:58:36.0000] <annevk>
s/bratell/bratell \/ et al/

[08:15:11.0000] <sangwhan>
It doesn't include jl or bratell

[08:16:27.0000] <sangwhan>
...although it is still a mystery why I am still here

[08:17:13.0000] <annevk>
sangwhan: maybe you should post something inappropriate to nonsense

[08:17:32.0000] <sangwhan>
annevk: tried that

[08:17:50.0000] <sangwhan>
annevk: several times :)

[08:19:03.0000] <annevk>
Clearly you need to up the ante

[08:58:11.0000] <jgraham>
Why does someone at github think that putting a fixed width and overflow:scroll on code blocks is a good idea? It is just possible that if I have my browser window open on a large monitor I will find it immensely irritating to have to horizontally scroll all the time to read code when ~50% of the width of my display is unused

[08:58:23.0000] <jgraham>
s/open/maximized/

[08:59:34.0000] <Philip`>
Code that is wide than 72 characters is not worth reading anyway

[08:59:41.0000] <zewt>
heh

[08:59:51.0000] <zewt>
<- wraps to ~120

[09:08:53.0000] <annevk>
zewt: hey you have some time?

[09:09:11.0000] <annevk>
zewt: that is, if you commented on some XHR stuff a while back, otherwise I'm talking to the wrong guy :)

[09:10:05.0000] <Philip`>
/me recently looked at some code like https://github.com/raspberrypi/linux/blob/rpi-3.6.y/drivers/char/broadcom/vc_cma/vc_cma.c#L703 which got auto-formatted with 80-character wrapping and 8-space tabs and had a high level of nesting, which ends up making the code pretty much entirely unreadable

[09:10:52.0000] <zewt>
annevk: i've commented on a lot of xhr stuff, you'll have to be more specific :)

[09:11:07.0000] <zewt>
yeah i'll be around for a while

[09:11:16.0000] <annevk>
zewt: so my here's my idea to replace the silly terminate send() / abort() thing

[09:11:39.0000] <annevk>
zewt: abort() and open() set the error flag; abort() will no longer do all the event dispatching stuff it does now

[09:12:04.0000] <annevk>
zewt: under the "request steps" in send() where it says what to do if the user aborts we add a check for whether the "error flag" is set

[09:12:18.0000] <zewt>
Philip`: my favorite thing about PEP-8, which recommends hard wrapping at 79 characters, is the example immediately following it which, due to being wrapped at 79 characters, is utterly unreadable: http://www.python.org/dev/peps/pep-0008/#tabs-or-spaces

[09:12:36.0000] <annevk>
zewt: and then we remove all stuff about algorithms being able to be terminated as the error flag will take care of that

[09:13:10.0000] <zewt>
annevk: one sec, need to refresh my memory of those algorithms

[09:15:12.0000] <annevk>
I think this is basically the right approach and I'm kinda sad I never thought of it in the seven years or so of maintaining this text

[09:16:45.0000] <annevk>
hmm, almost seven

[09:20:19.0000] <zewt>
does that deal with abort()'s events being fired synchronously?

[09:21:16.0000] <annevk>
argh, are they?

[09:21:42.0000] <zewt>
yeah (per spec, and just tested to confirm)

[09:25:13.0000] <annevk>
hmm so instead we should have a separate entry for "error flag" that just cancels send() without doing anything else

[09:25:26.0000] <annevk>
abort() keeps its own event thingie

[09:27:50.0000] <annevk>
yeah that should work I think

[09:42:19.0000] <zewt>
http://msdn.microsoft.com/en-us/library/windows/apps/hh781216.aspx this page hurts my head

[09:42:49.0000] <zewt>
down below they go "release your blob urls!" ... but right at the very top they have "img.src = URL.createObjectURL" in an example

[09:43:52.0000] <zewt>
(and what the heck is "false" doing as the second argument to createObjectURL?)

[09:51:07.0000] <jgraham>
(fun but irrelevant fact: on the way home the bus driver decided to stop the bus's engine, and restart it, causing the computer system displaying the time and the next stop to reboot. Apart from a linux penguin, the boot screen also had a red lizard and claimed to be "powered by gecko")

[09:51:20.0000] <annevk>
this is what you get when people just make up APIs as they go without thinking shit through :/

[09:53:53.0000] <annevk>
zewt: I still don't like using the URL parser for this though

[09:54:00.0000] <annevk>
zewt: can't we do better?

[09:54:10.0000] <annevk>
zewt: it's such a massive hack

[10:06:31.0000] <annevk>
zewt: in other news, I committed a fix for that XHR thing

[10:26:09.0000] <GPHemsley>
Thoughts on minifying?

[11:13:41.0000] <annevk>
GPHemsley: what do you mean?

[11:14:10.0000] <GPHemsley>
annevk: Open request for opinions on the act of minifying for the Web.

[11:14:26.0000] <annevk>
But what is minifying?

[11:15:52.0000] <GPHemsley>
Oh

[11:16:54.0000] <GPHemsley>
The act of removine whitespace and other characters that aren't crucial to the execution of a file.

[11:17:04.0000] <GPHemsley>
(HTML/CSS/JS/etc.)

[11:17:22.0000] <GPHemsley>
s/removine/removing/

[11:17:47.0000] <zewt>
annevk: it doesn't necessarily have to be part of the parser as such

[11:18:30.0000] <annevk>
zewt: in my mental model either the parser touches the URL object, or it's touched much later on (e.g. during navigation or fetch)

[11:18:43.0000] <annevk>
(that'll become the platform model once I've written it all out)

[11:18:44.0000] <zewt>
could equivalently have a step after parsing eg. "if url is a blob URL, associate the underlying blob data with parsed url", it should just be something concise

[11:20:05.0000] <zewt>
or, could have a separate algorithm eg. "parse with blob association", which both calls the url parser (which would know nothing about blobs) and handles blob capture

[11:21:22.0000] <zewt>
annevk: not quite sure what you mean by touches

[11:23:43.0000] <zewt>
(eg. not sure how navigation relates here)

[11:28:43.0000] <annevk>
zewt: the URL is parsed at some point and then the URL object is stored somewhere until it's needed again (typically only when navigating or fetching)

[11:37:20.0000] <zewt>
right

[11:37:31.0000] <zewt>
like XHR does now

[11:39:18.0000] <zewt>
the idea is that the blob data assocaited with the url (if any) is stashed in the URL object (and follows it around, ultimately to the fetch algorithm), but that doesn't necessarily have to live in the core url parse algorithm

[11:44:17.0000] <annevk>
it wouldn't make sense for new URL() I think

[11:46:13.0000] <zewt>
this wouldn't touch the user-visible URL object, it's only for specs to define when their API calls grab blobs associated with urls they receive

[11:47:16.0000] <zewt>
eg. an XHR object would grab a reference to the blob when you call open(url), which is visible to scripts since the URL itself might be revoked by the time send() is called

[11:48:02.0000] <annevk>
sure sure

[11:48:09.0000] <zewt>
(just making sure we're talking about the same thing)

[11:53:31.0000] <zewt>
so, having new URL() do this wouldn't be harmful (it wouldn't have any visible effects), but yeah, having something like "parse url with base, capturing blobs" be a nested algorithm probably makes sense

[11:54:47.0000] <zewt>
and new URL wouldn't use that (and the "capturing" algorithm might want to live in HTML, next to fetch, instead of in the url spec, since that's what it's for and so the url spec doesn't have to depend on file api)

[11:55:04.0000] <zewt>
(wow that was a terrible sentence)

[11:55:11.0000] <annevk>
HTML fetch will move to Fetch

[11:55:25.0000] <annevk>
dunno about the File API stuff, maybe that'll move to Fetch too

[11:57:35.0000] <annevk>
Man, banks close early :/

[12:03:00.0000] <zewt>
it's what they do

[13:01:47.0000] <annevk>
tobie: if you use OH, don't attribute it ;-)

[13:02:03.0000] <annevk>
tobie: or alternatively, if you attribute a quote, don't OH it

[13:02:09.0000] <annevk>
or maybe it doesn't matter


2013-02-19
[16:24:15.0000] <zewt>
a "json working group"?

[17:04:24.0000] <GPHemsley>
are there things json is missing?

[17:05:10.0000] <hober>
technically the json rfc is informational; i guess a wg could re-publish it with no changes except to put it on the standards track.

[17:18:13.0000] <zewt>
doesn't seem like there are actually any problems to solve, heh

[17:46:17.0000] <GPHemsley>
Process sure is silly sometimes.

[23:06:38.0000] <annevk>
https://twitter.com/sgalineau/status/303641007151525888 hehe

[00:29:27.0000] <jgraham>
darobin: Just heard from the guy that wrote much of our DnD testsuite

[00:29:57.0000] <darobin>
/me can't help thinking he should roll some dice when it's put that way

[00:30:01.0000] <jgraham>
He described reorganising it to fit with the structure in the DND folder as "unrealistic"

[00:30:18.0000] <darobin>
with some justification, or just because?

[00:30:39.0000] <jgraham>
darobin: Indeed, roll 2 d20 and if they land you hit a bug in an implementation

[00:31:13.0000] <jgraham>
I think because of the sheer number of tests

[00:31:27.0000] <darobin>
mmmmm

[00:31:29.0000] <darobin>
lemme look

[00:32:52.0000] <darobin>
I see

[00:33:20.0000] <darobin>
jgraham: well, dnd is a rather coherent feature

[00:33:37.0000] <darobin>
I have no problem with its subsections being empty, and the whole TS being under html/editing/dnd/

[00:33:47.0000] <darobin>
(with the subdirs from your friend)

[00:35:07.0000] <jgraham>
And leave the empty structure for people to use if they add new tests?

[00:37:35.0000] <jgraham>
In other news, I think that there must be some comedy mileage to get out of hsivonen being mistaken for a TAG member

[00:38:00.0000] <jgraham>
I'm just not sure what it is

[00:38:15.0000] <marcosc>
I don't know why hsivonen isn't a TAG member, really.

[00:38:30.0000] <marcosc>
(apart from his time having value :) )

[00:39:21.0000] <marcosc>
Question: would it be a bad thing to attempt to describe a JSON structure using a WebIDL dictionary?

[00:39:54.0000] <jgraham>
Probably, yes

[00:41:01.0000] <marcosc>
The type conversion from WebIDL seems like a nice thing... I guess I could describe the structure using JSON schema, but I'm having NIH syndrome :)

[00:41:57.0000] <marcosc>
Otherwise, there is always that prose gibberish :)

[00:43:20.0000] <jgraham>
Well I guess if the JSON is sufficiently simple and regular it could work

[00:51:46.0000] <marcosc>
jgraham: it's mostly strings and a couple of numbers. I figure, then authors can have the freedom to write, for example: {"height": "200"} or {"height": 200} without being yelled at.

[00:53:32.0000] <marcosc>
dictionary{ unsinged short height; } could then handle the string to number conversion

[01:00:38.0000] <annevk>
https://www.google.co.uk/search?q=You+may+not+create+a+link+to+this+website+from+another+website+or+document+without+prior+written+consent&ie=UTF-8&oe=UTF-8&hl=en&client=safari&safe=on holy shit

[01:00:41.0000] <annevk>
people be crazy

[01:01:51.0000] <marcosc>
scary!

[01:02:21.0000] <marcosc>
We should link to all those sites :)

[01:17:32.0000] <a-ja>
<img longdesc="https://www.google.co.uk/search?q=You+may+not+create+a+link+to+this+website+from+another+website+or+document+without+prior+written+consent&ie=UTF-8&oe=UTF-8&hl=en&client=safari&safe=on"/>

[01:24:56.0000] <marcosc>
a-ja, please don't link to that link, as they don't want you linking to google that contains the link to their site :P

[01:25:12.0000] <marcosc>
I hope google got prior written consent from all those people

[01:31:31.0000] <a-ja>
/me adds rel=nofollow

[01:52:17.0000] <annevk>
darobin: Editing requires a ton of research? I thought you already had a fulltime job?

[01:52:39.0000] <darobin>
annevk: my fulltime job is to make this whole pile of crap better

[01:53:08.0000] <darobin>
I focused a fair bit on testing over the past weeks, but now that there's tobie I can probably take on something extra

[01:53:16.0000] <annevk>
I'm just saying, fixing editing is a fulltime job by itself

[01:53:25.0000] <darobin>
yeah, I know it's a long-haul issue

[01:53:39.0000] <darobin>
but it's not like people are rushing in the volunteer

[01:53:46.0000] <darobin>
s/the/to/

[01:54:14.0000] <darobin>
and it's a feature I care about

[01:54:27.0000] <Ms2ger>
It's mostly implementing now, isn't it?

[01:54:38.0000] <darobin>
there are still discrepancies

[01:54:41.0000] <darobin>
and they tend to be ugly

[01:54:58.0000] <darobin>
but Aryeh's done a great job moving it forward

[01:55:30.0000] <annevk>
Ms2ger: well and the wave of maintenance that creates, plus maybe adding new things? I haven't followed the work in detail at all though :(

[01:55:51.0000] <Ms2ger>
Sure

[01:56:14.0000] <Ms2ger>
But with nobody actively implementing, I don't think there's a whole lot of useful work to do on editing right now

[01:56:31.0000] <darobin>
actually the thread started because Microsoft is implementing

[01:56:52.0000] <annevk>
Is Alex still on the IE Team though?

[01:57:18.0000] <darobin>
"I am working on editing in IE, have issues of various scale"

[01:57:40.0000] <annevk>
heh oops

[01:57:49.0000] <annevk>
I guess he just stopped being chief layout

[01:58:01.0000] <darobin>
well as you said editing is a big chunk

[01:58:08.0000] <darobin>
so maybe he's chief editing now :)

[01:58:27.0000] <annevk>
Alex uses interesting email software

[01:58:37.0000] <annevk>
He emails to annevkâan, but inline it says Â± From: annevankesterenâgc

[01:58:40.0000] <Ms2ger>
I thought he was smarter than letting someone make him chief editing ;)

[01:58:55.0000] <a-ja>
Scorecards! Get your scorecards...

[01:59:01.0000] <jgraham>
Isn't being made cheif of editing like being fired, but more subtle?

[01:59:21.0000] <annevk>
Ms2ger: looks like maybe you should define DocumentFragment.innerHTML after all

[01:59:29.0000] <Ms2ger>
Fun

[01:59:44.0000] <Ms2ger>
Let me know when Hixie's defined how it parses :)

[01:59:44.0000] <jgraham>
*chief

[02:00:20.0000] <annevk>
Ms2ger: at some point we should just merge domparsing into dom

[02:00:20.0000] <Ms2ger>
brb

[03:29:00.0000] <JibberJim>
Does Safari have a public bug repo?

[03:30:25.0000] <JibberJim>
I'm guessing not, got a video element bug on iOS and I suspect it's been raised as it's trivially obvious.

[03:30:36.0000] <darobin>
JibberJim: https://bugreport.apple.com/

[03:31:15.0000] <darobin>
you won't like it though :)

[03:32:40.0000] <JibberJim>
yeah - non public though right...

[03:33:00.0000] <JibberJim>
If they want bug reports, showing the listed ones would be helpful.

[03:33:48.0000] <darobin>
well if they don't want to help you not submit dupes, it's their problem to sort that out

[03:34:09.0000] <darobin>
if it's a WebKit bug you can use the WebKit tracker, of course

[03:34:56.0000] <JibberJim>
Or I just won't submit it :)

[03:36:41.0000] <JibberJim>
javascript, cookies, apple id...  recommend me use a browser I don't even have.

[03:37:33.0000] <darobin>
yeah, it's all a lovely process

[03:38:40.0000] <darobin>
you have iOS though, maybe it works on Mobile Safari

[03:38:45.0000] <darobin>
I'm sure it's a great experience

[03:39:51.0000] <annevk>
whoa, I'm in for two years on the TAG?

[03:44:38.0000] <darobin>
annevk: no, I think you're in for one year

[03:45:45.0000] <jgraham>
But don't worry you can always go for re-election!

[03:46:09.0000] <darobin>
actually there's an error on http://www.w3.org/2001/tag/

[03:46:21.0000] <darobin>
all of the four horsemen are listed as having a two year term

[03:46:35.0000] <darobin>
but one of them got my seat, which was only up for one year

[04:17:15.0000] <annevk>
darobin: yeah, I was looking at that page

[04:18:26.0000] <darobin>
annevk: I reported the presumed bug, I'll let you know how long you'll actually spend in the salt mines

[04:47:18.0000] <annevk>
hsivonen: What in particular strikes me as weird is that we had Appendix C and that MIME type guidance document. And they utterly failed. And now there's Polyglot, which is more complex, and people expect it to succeed?

[04:51:18.0000] <darobin>
people expect polyglot to succeed?

[04:51:20.0000] <annevk>
Oh that thread is great. Jonas Sicking rallying for pouring resources into XHTML :-)

[04:54:04.0000] <annevk>
http://www.clinet.fi/~henris/ Ah, at one point hsivonen also used first-name-first-last-name-letter...

[05:01:50.0000] <MikeSmith>
Zach Kuznia implementing Streams API https://lists.webkit.org/pipermail/webkit-dev/2013-February/023928.html

[05:01:57.0000] <hsivonen>
I like brucel's lorem ipsum: <div>Bob Smith said at <a href="#permalink1">9.55 on 31 Febtember</a>: Can I use DRM in Polyglot documents?</div>

[05:02:00.0000] <hsivonen>
<div>Hixie said at <a href="#permalink2">9.57 on 1 June</a>: What's your use case?</div>

[05:04:06.0000] <Ms2ger>
Clearly those should be p's, though

[05:59:10.0000] <MikeSmith>
so I finally managed to get Servo to build but when I try to view the ../src/test/about-mozilla.html page I just get moji bake

[05:59:27.0000] <MikeSmith>
garbage text

[06:00:21.0000] <annevk>
MikeSmith: maybe ask in #developers on irc.mozilla.org?

[06:01:02.0000] <MikeSmith>
annevk: ok

[06:01:38.0000] <MikeSmith>
or actually I guess I should just complain in the #servo channel there

[06:01:47.0000] <annevk>
ah

[06:04:10.0000] <MikeSmith>
also never did manage to get mozjs to compile with clang. but maybe that's because I was pointing it at the clang from Chromium, and it detected that and failed on purpose

[06:05:50.0000] <MikeSmith>
is the format of Mozilla .manifest files documented somewhere?

[06:06:16.0000] <MikeSmith>
nm I'll ask on #developers

[06:17:47.0000] <annevk>
Hixie: you still want seamless <iframe> event thingies right?

[06:17:53.0000] <annevk>
/me takes another look at https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#event-retargeting

[06:44:25.0000] <annevk>
So how does http://trac.webkit.org/browser/trunk/Source/WebCore/dom/EventTarget.cpp#L150 walk the tree?

[06:49:30.0000] <annevk>
I guess that logic is in http://trac.webkit.org/browser/trunk/Source/WebCore/dom/EventDispatcher.cpp

[06:51:52.0000] <bijan>
Hi ho, I have an MSc student who's project is to independently implement the HTML5 parsing algorithm. We've gotten a bit confused by character reference tokenization. For data character references, such as: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#character-reference-in-data-state

[06:52:06.0000] <bijan>
The first step is to switch back to the Data state.

[06:52:32.0000] <bijan>
Whereas in attribute values switching back to the calling state is the last step: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#character-reference-in-attribute-value-state

[06:52:54.0000] <bijan>
Is this meaningful? We were having trouble making the machine work in the first case.

[06:53:13.0000] <bijan>
(I.e., since switching back to the data state seems to interrupt the reference consumption.)

[06:53:32.0000] <jgraham>
bijan: Switching states doesn't do anything until you return to the main loop

[06:54:22.0000] <bijan>
Is this documented somewhere per se?

[06:54:25.0000] <jgraham>
So you switch the state that will be used for processing when the tokenizer is next call, but proceed with the remainder of the steps in the current state

[06:54:35.0000] <bijan>
Why then the "finally" in the attribute value?

[06:55:16.0000] <bijan>
Yeah, that's the only thing that made sense, but the attribute value state suggested otherwise :)

[06:55:26.0000] <jgraham>
I don't know why the style is different in the two cases, but I don't think it's meaningful

[06:55:53.0000] <bijan>
Ok. Thanks.

[06:57:16.0000] <jgraham>
What kind of implementation are you doing (i.e. which language, will it be Open Source, etc.)?

[06:57:36.0000] <volkmar>
marcosc: the intent of your app: URI scheme spec is to have it integrated in the runtime spec or keep it outside of it?

[06:57:37.0000] <jgraham>
Oh well, I guess I'll never know

[07:02:10.0000] <annevk>
And http://trac.webkit.org/browser/trunk/Source/WebCore/dom/EventRetargeter.cpp#L75 seems to contain stuff now in the Shadow DOM spec...

[07:03:01.0000] <annevk>
bijan: feel free to file bugs on stylistic differences though

[07:03:11.0000] <darobin>
bijan: did you see jgraham's question before... oh damn

[07:06:25.0000] <jgraham>
Heh

[07:09:19.0000] <odinho>
bijan: Did you see jgraham's question?

[07:09:32.0000] <annevk>
And with "now" above I meant "not"

[07:09:51.0000] <annevk>
E.g. checking whether a node's an SVG element does not happen

[07:10:01.0000] <bijan>
I did, but my reply got eated: At the moment they are doing an initial prototype in Java to learn the algorithm. Then they'll select a language which doesn't have a native parser and supply one.

[07:10:02.0000] <bijan>
15:04

[07:10:02.0000] <bijan>
Open source, yes. I hope

[07:10:17.0000] <jgraham>
bijan: Cool

[07:10:36.0000] <odinho>
I know some people that'd be happy to get a nice one in C. :-)

[07:11:13.0000] <jgraham>
Yeah, the greatest benefit to humanity would be one written in C using the libxml2 infrastructure

[07:11:25.0000] <jgraham>
But of course the project might have different goals

[07:11:32.0000] <odinho>
Hububb didn't embed easily, and had too many errors, - python-html5lib worked very well, but was way too slow.

[07:12:15.0000] <odinho>
jgraham: Yeah, good point. Absolutely.

[07:12:16.0000] <marcosc>
volkmar, I don't mind

[07:12:59.0000] <marcosc>
mounir ^^

[07:13:19.0000] <marcosc>
Having separate docs is easier for me to edit

[07:13:37.0000] <marcosc>
(they could then be all combined into one big mama doc)

[07:13:55.0000] <marcosc>
Less overhead when there are multiple editors, etc.

[07:17:47.0000] <bijan>
Well, C is a possibility, but the current leader is Smalltalk :)

[07:20:25.0000] <annevk>
bijan: no wonder people keep bringing up the university-industry mismatch :-)

[07:21:41.0000] <bijan>
Well, pedagogic reasons

[07:22:23.0000] <darobin>
JavaScript would be sweet :)

[07:22:52.0000] <jgraham>
darobin: Write it in C am emscripten will give you a js one for free :)

[07:22:56.0000] <jgraham>
*and

[07:23:18.0000] <darobin>
jgraham: how about write it in JS and asm.js will give you C speed free? :)

[07:23:19.0000] <jgraham>
(also, I think js has been done)

[07:23:31.0000] <darobin>
you're thinking of jsdom or another one?

[07:23:44.0000] <jgraham>
That's not really how asm.js worksâ¦

[07:23:45.0000] <mounir>
marcosc: I also prefer separated docs but it seems hard in that case to have app: making sense will fully separated from packaged apps definition

[07:23:58.0000] <darobin>
jgraham: I know, but a girl can dream right?

[07:24:11.0000] <jgraham>
It depends which girl, I guess?

[07:24:36.0000] <darobin>
not all girls dream of asm.js?

[07:24:42.0000] <jgraham>
annevk: Dude they are starting in Java. How much more "industry" can you get?

[07:24:56.0000] <darobin>
I thought I heard that 50 Shades of Grey made asm so popular and all

[07:25:00.0000] <annevk>
jgraham: hehe

[07:25:14.0000] <marcosc>
mounir: where do you see potential conflicts?

[07:25:19.0000] <darobin>
"prototyping in Java" â hadn't heard that one before :)

[07:26:11.0000] <jgraham>
A proper academic implementation would be in Coq and would be accompanied by a proof of correctness

[07:26:11.0000] <mounir>
marcosc: not conflicts just that "app:" scheme will be strongly liked with the app spec and the app spec with the "app:" scheme

[07:26:44.0000] <annevk>
http://trac.webkit.org/browser/trunk/Source/WebCore/dom/EventRetargeter.cpp#L41 o_O

[07:26:45.0000] <mounir>
marcosc: anyway, we will see, I would be fine with including the document in the behemoth spec and having the work being done separatedly and synchronized

[07:26:54.0000] <annevk>
Man this Shadow DOM code is full of hacks

[07:27:15.0000] <marcosc>
mounir: that sounds good. I can put in the appropriate hooks as we need to.

[07:27:43.0000] <mounir>
marcosc: will likely include the current version in my draft though if you don't mind (manually for the moment)

[07:28:04.0000] <marcosc>
mounir: not at all. Go for it :)

[07:32:04.0000] <bijan>
"prototyping in Java"  â> the student knows Java but will have to get comfy with the target language

[07:32:20.0000] <darobin>
jgraham: re HTML parser in JS though, do you know which one you're thinking of?

[07:32:30.0000] <marcosc>
mounir: it would be nice if we could do the same thing with the manifest format and definition. I wouldn't mind spec'ing that part out.

[07:32:33.0000] <darobin>
because I don't believe that node-htmlparser is anywhere near the spec

[07:32:41.0000] <darobin>
and jsdom is flaky at best

[07:32:50.0000] <jgraham>
darobin: No, it was just a feeling

[07:32:53.0000] <darobin>
it does weird things with /> for instance

[07:33:01.0000] <darobin>
I don't think there's a compliant one

[07:33:04.0000] <jgraham>
Could have been one of those

[07:33:34.0000] <mounir>
marcosc: what do you want to change here?

[07:33:41.0000] <mounir>
we had a standalone spec for that in the past

[07:34:04.0000] <mounir>
but as we said in the mailing list, it's hard to make this independ

[07:34:11.0000] <marcosc>
mounir: want to lay out all the JSON members into their own sections. Want to add processing model.

[07:34:12.0000] <mounir>
independent from the rest of the spec

[07:34:36.0000] <mounir>
marcosc: processing model?

[07:34:58.0000] <marcosc>
mounir: you JSON.parse(), but then you need to do all type checking.

[07:35:22.0000] <marcosc>
like, what happens if "height": "200px" ?

[07:35:49.0000] <marcosc>
or height: "         200      "

[07:35:54.0000] <marcosc>
and so on

[07:36:58.0000] <marcosc>
mounir: there are also some funny things, like: "Icons must be square"

[07:37:01.0000] <marcosc>
:)

[07:37:12.0000] <mounir>
oh

[07:37:13.0000] <annevk>
don't be a square

[07:37:46.0000] <slightlyoff>
OH HAI annevk

[07:38:02.0000] <annevk>
hey hey

[07:38:26.0000] <slightlyoff>
sorry for being seemingly AWOL...detour on Future design...sigh

[07:38:46.0000] <annevk>
no worries, I'm sure it won't be a matter of days

[07:39:35.0000] <marcosc>
/me notes that the recent meteor in Russia was God's anger towards delays on DOMFuture

[07:40:03.0000] <sangwhan>
any sane reason to use eval() in favor of JSON.parse()? been trying to think of a good reason

[07:40:18.0000] <annevk>
sangwhan: only insane

[07:40:18.0000] <jgraham>
No

[07:40:58.0000] <sangwhan>
i'll go ahead and assume it's human stupidity

[07:45:35.0000] <sangwhan>
https://github.com/glow/glow1/blob/master/src/data/data.js#L356

[07:46:22.0000] <zewt>
(really hoping this "futures" stuff doesn't end up in the platform; it's so ugly and unnecessary)

[07:47:04.0000] <darobin>
/me thought the meteor in Russia was God's anger with NavCon not being public yet

[07:47:21.0000] <MikeSmith>
haha

[07:47:41.0000] <zewt>
https://github.com/slightlyoff/DOMFuture/blob/master/reworked_APIs/WebCrytpo/example/after.html <- this is pretty horrifying

[07:48:33.0000] <slightlyoff>
zewt: I take it you saw the before?

[07:48:36.0000] <slightlyoff>
zewt: it's better

[07:48:48.0000] <slightlyoff>
there's no implicit end-of-turn oriented control flow

[07:49:10.0000] <darobin>
sangwhan: actually, at a quick scan, it's looking like that "glow" code (whatever that is) is using the old school JSON-regex trick

[07:49:13.0000] <zewt>
assumed "before" was just a traditional API, so didn't look at it

[07:49:21.0000] <darobin>
which is what was done for browsers that don't support JSON

[07:50:11.0000] <zewt>
yeah, that's just a regular event model, much more in line with the platform

[07:50:14.0000] <sangwhan>
darobin: i was just wondering why JSON.parse() isn't the default and that being the fallback

[07:50:28.0000] <darobin>
sangwhan: is it possible this was written a while ago?

[07:50:44.0000] <darobin>
without looking closely it looks like best practice from some years ago

[07:51:03.0000] <darobin>
there's a regex you can use on JSON to validate that it's sane, after which eval() is safe

[07:51:17.0000] <zewt>
darobin: not that it makes it feel safe

[07:51:18.0000] <zewt>
heh

[07:51:24.0000] <darobin>
so it might be old rather than stupid

[07:51:29.0000] <zewt>
(bruce schneier wouldn't be happy with me for saying that)

[07:52:43.0000] <sangwhan>
darobin: looks like the last update was 4 years ago

[07:53:16.0000] <darobin>
sangwhan: there you go

[07:53:48.0000] <zewt>
i've actually had to write JSON serializers in the last year :|

[07:53:59.0000] <zewt>
(in c#, iirc, for Unity)

[07:54:17.0000] <zewt>
seems strange to be in any environment today that doesn't provide it

[07:55:23.0000] <marcosc>
mounir: the problem with the way the current manifest side of things is written is that it mixes a lot (vendor specific) authoring requirements with the definition of the JSON members.

[07:55:43.0000] <zewt>
also I couldn't find any good, freely-licensed code to do it, which was even stranger (there were like 10 implementations I found, all of which er were either "no commercial use", gpl, or catastrophically bad code)

[07:57:18.0000] <mounir>
marcosc: any example?

[07:57:41.0000] <marcosc>
mounir: well, the MUST be square was one... there is also:

[07:58:18.0000] <marcosc>
stuff in there about length of names, and descriptions

[07:58:56.0000] <mounir>
marcosc: TBH, I have no idea if that's vendor specific

[07:59:20.0000] <mounir>
I took that part of the spec from anant who might have done it this way beacuse of our implementation (I really have no idea)

[07:59:30.0000] <mounir>
but I guess having some limits is a good thing

[07:59:37.0000] <marcosc>
mounir: I'm happy to check that stuff

[07:59:49.0000] <mounir>
saying "the description SHOULD NOT be too long" isn't ideal

[08:00:01.0000] <mounir>
putting a limit might help authors

[08:00:13.0000] <mounir>
though, we can also expect the UA to deal with long descriptions

[08:00:25.0000] <mounir>
I do not really care

[08:00:30.0000] <marcosc>
mounir: I'm mostly interested in runtime behaviour

[08:01:52.0000] <marcosc>
otherwise, we have a whole bunch of arbitrary enforcement points in the spec that shouldn't be there. Long descriptions should be trimmed down elsewhere (or there may be a valid reason for the long description).

[08:01:56.0000] <marcosc>
same with the name

[08:01:58.0000] <marcosc>
etc.

[08:02:41.0000] <marcosc>
mounir: it's kinda like saying in HTML, paragraphs SHOULD NOT be over 1000 characters

[08:03:08.0000] <marcosc>
reasonable, but o_O :)

[08:07:22.0000] <marcosc>
moj

[08:07:28.0000] <SimonSapin>
marcosc: 1000 is a bit small, but 640K ought to be enough for anybody

[08:07:38.0000] <marcosc>
exactly :)

[08:09:38.0000] <sangwhan>
i share that pain of not being able to find good, freely licensed code to do a certain thing, i had that problem with mersenne twister a while ago

[08:10:42.0000] <mounir>
marcosc: we need a ticketing system

[08:10:48.0000] <mounir>
I would gladly fix that

[08:10:52.0000] <marcosc>
mounir: I'd like to define the members of the manifest more like it's done in HTML. More like this (without the silly blue background, of course): http://jsbin.com/izewal/1/

[08:11:22.0000] <mounir>
marcosc: and have another part defining the behaviour I guess

[08:11:57.0000] <marcosc>
right, or we can define the processing algorithms for each member as part of their definition.

[08:12:43.0000] <hsivonen>
bijan: unfortunately, the spec takes shortcuts with CDATA sections and entities. Splitting those into states is left as an exercise to the reader.

[08:13:52.0000] <marcosc>
mounir: like, with default_locale, there needs to be a check that the value is a valid language tag.

[08:16:04.0000] <marcosc>
mounir: regarding ticketing, we should just use GH issues

[08:18:23.0000] <mounir>
GH issues are terrible

[08:18:44.0000] <mounir>
I would prefer bugzilla

[08:19:00.0000] <mounir>
but I guess the group seems to be enclined to use GH

[08:19:37.0000] <jgraham>
I have no idea what you are talking about, but I concur that GH issues are terrible

[08:23:22.0000] <marcosc>
mounir, jgraham, I agree. There are some "limitations" :)

[08:23:44.0000] <marcosc>
some of which are easy to work around

[08:26:47.0000] <MikeSmith>
bugzilla sucks but GH issues sucks way more

[08:28:53.0000] <sangwhan>
GH issues is better than Google Code, although that doesn't say much

[08:30:07.0000] <MikeSmith>
rubbing two sticks together to make fire is better than Google Code

[08:30:14.0000] <sangwhan>
although haven't seen anything that's as pleasant to use as JIRA

[08:30:35.0000] <sangwhan>
one downside is that you possibly need a monster server to run it

[08:30:36.0000] <marcosc>
/me writes "Github issues VS Bugzilla" into his little book of religious wars. 

[08:33:11.0000] <bijan>
hsivonen, thanks for the heads up.

[08:33:26.0000] <jgraham>
Woah, Jira and "pleasant to use" in the same sentence, without negation?

[08:33:45.0000] <karlcow>
"<darobin> without looking closely it looks like best practice from some years ago" hmmm Interesting statement to keep in mind. :)

[08:33:48.0000] <jgraham>
/me guesses sangwhan used eval() to parse JSON

[08:33:54.0000] <jgraham>
;)

[08:33:59.0000] <jgraham>
*uses

[08:34:13.0000] <dglazkov>
good morning, WhatWg!

[08:34:33.0000] <darobin>
JIRA???

[08:34:35.0000] <darobin>
hahahahahahahaha

[08:34:40.0000] <sangwhan>
/me likes JIRA

[08:34:49.0000] <slightlyoff>
howdy dglazkov

[08:35:48.0000] <darobin>
bugzilla could be okay if it weren't so slow

[08:35:53.0000] <darobin>
and a little CSS wouldn't hurt either

[08:36:00.0000] <sangwhan>
Bugzilla is nice too, but there are some annoyances when you try to customize the workflow

[08:36:15.0000] <jgraham>
I hate all issue trackers

[08:36:18.0000] <darobin>
you are very polite sangwhan

[08:36:22.0000] <darobin>
I'm with jgraham

[08:36:27.0000] <jgraham>
Or, at least, all the ones I have ever used

[08:36:43.0000] <sangwhan>
JIRA is a pain to customize (the admin ui is not that great) but you _can_ get it done

[08:36:54.0000] <sangwhan>
without having to hack the code, which becomes a massive pain to maintain later

[08:37:04.0000] <darobin>
issue trackers, mail clients, and a long list of other pieces of software that everyone seems to get wrong

[08:37:37.0000] <sangwhan>
there is only one true mail client, and it's alpine. i just happen to not use it.

[08:37:41.0000] <darobin>
all I recall from JIRA was the long list of bookmarklets I had just to work around its UI bugs

[08:38:26.0000] <karlcow>
the back of my bank statement envelop is my best issues tracker, though not practical for sharing with others.

[08:38:57.0000] <jgraham>
Jira really hates you changing issues. The default view is read-only, yhou have to go to a special "edit" page. Unless you want to make certain changes, which require a different page

[08:39:00.0000] <karlcow>
It is working also with electricity bills envelops

[08:39:06.0000] <jgraham>
At least in our rather old Jira

[08:39:32.0000] <sangwhan>
jgraham: sadly, that hasn't changed in JIRA 4 at least

[08:39:58.0000] <sangwhan>
jgraham: and yes, it's annoying. i don't notice it that much because i only comment and resolve :)

[08:40:27.0000] <jgraham>
Oh and the search UI is a <redacted>

[08:40:38.0000] <karlcow>
:)

[08:40:50.0000] <jgraham>
And it periodically forgets your search results

[08:40:58.0000] <jgraham>
and you can't search by URI

[08:41:02.0000] <sangwhan>
i don't think bugzilla's search ui is that much better though.

[08:41:02.0000] <marcosc>
mounir: any idea why the manifest format has "appcache_path"? Why not use the one in the HTML file?

[08:41:05.0000] <jgraham>
Or even by URL

[08:41:11.0000] <karlcow>
may I add theâ¦ <redacted> SOAP API for creating non browser clients.

[08:41:12.0000] <MikeSmith>
is Jira 4 the new BTS 3?

[08:41:13.0000] <jgraham>
/me should stop now

[08:41:19.0000] <sangwhan>
BTS3 = JIRA3

[08:41:40.0000] <mounir>
marcosc: this is for hosted applications

[08:41:50.0000] <mounir>
so we can install the appcache data while installing the application

[08:41:55.0000] <mounir>
to give a better offline e

[08:41:57.0000] <mounir>
experience

[08:42:21.0000] <sangwhan>
JIRA4 i've dealt with in other projects (apache/skype/adobe uses it)

[08:42:48.0000] <mounir>
marcosc: we have plans to have a new appcache manifest in JSON and that would allow to have the full manifest description here (but that's not really a short term goal)

[08:43:06.0000] <marcosc>
mounir: I see

[08:43:13.0000] <sangwhan>
karlcow: i recall giving up with soap and parsing the html for my non-browser client :P

[08:43:23.0000] <karlcow>
heh

[08:43:46.0000] <darobin>
annevk: I can confirm that you're only on the TAG for one year

[08:44:03.0000] <darobin>
at the end of this year, I suggest you rerun with Henry on a Polyglot ticket

[08:44:11.0000] <marcosc>
heh

[08:44:35.0000] <mounir>
darobin: I've heard that the change of affiliation would have that effect anyway

[08:44:47.0000] <darobin>
mounir: huh?

[08:45:38.0000] <marcosc>
annevk's change of affiliation basically makes him a polyglot

[08:45:54.0000] <marcosc>
I think that is what mounir means

[08:46:57.0000] <MikeSmith>
sangwhan: wait Jira is not same BTS code that Jesper was working on for 25 years at Opera, right? He wrote it after he left

[08:47:04.0000] <mounir>
for me polyglot is someone speaking many languages, not sure about annevk ;)

[08:47:41.0000] <jgraham>
Maybe zcorpan should run on a polygot html/javascript ticket (see e.g. https://dvcs.w3.org/hg/webapps/file/0a4f622868eb/Workers/tests/submissions/Opera/constructors/Worker/AbstractWorker.onerror.html). Pretty sure slightlyoff would approve of the coming together of W3C/TC39 that would imply :)

[08:47:51.0000] <sangwhan>
MikeSmith: I have my suspicions that code is now with the same company that wrote JIRA, but possibly not in the form of JIRA.

[08:48:20.0000] <sangwhan>
http://software.intel.com/en-us/articles/technical-reference-intel-html5-app-porter-tool-beta

[08:48:44.0000] <sangwhan>
Interesting idea, probably wouldn't use it myself

[08:52:20.0000] <MikeSmith>
sangwhan: the best feature of the html5 tool is the part where it converts Xcode projects in Visual Studio projects

[08:52:22.0000] <slightlyoff>
jgraham: I enjoy that you put real work into trolling. zewt just tells you that new stuff isn't what he's used to...you really sink your teeth into it.

[08:52:52.0000] <sangwhan>
MikeSmith: because who wouldn't love to write HTML in visual studio

[08:54:59.0000] <slightlyoff>
sangwhan: actually...it's quite good for that these days.

[08:55:03.0000] <bijan>
Hmm. Are these documents really polyglot or are they expressed in a pidgin.

[08:55:23.0000] <marcosc>
MikeSmith: I knew a dude that did that. All the Opera standards support docs were done that way :)

[08:55:41.0000] <jgraham>
That counts as trolling now? Either internet standards are slipping or I badly need to recalibrate my "lighthearted satire" mode.

[08:55:46.0000] <sangwhan>
slightlyoff: I still have to use VS2005/VS2008, as the EVC compiler was nuked in 2010+

[08:56:07.0000] <bijan>
Polyglot applies to people, right? I.e., multilingual speakers that speak more than 3 languages (typically)

[08:56:10.0000] <slightlyoff>
you can side-by-side that, right?

[08:56:32.0000] <sangwhan>
if you have a license, yes :)

[08:56:56.0000] <marcosc>
bijan: sure. But that sense of the word is no fun to make fun of.

[08:56:59.0000] <sangwhan>
/me is a stone age caveman, still uses textmate 1 for any html/css/js code

[08:57:38.0000] <bijan>
I guess "Pidgin XHTML" doesn't sound so very cool.

[08:58:12.0000] <marcosc>
heh, that sounds way better than polyglot!

[08:58:28.0000] <bijan>
/me wonders who miscoined it and if they regret polluting the meaning

[08:58:53.0000] <marcosc>
a polyglot sounds like something I would chew to throw a math teacher

[08:59:08.0000] <sangwhan>
/me is looking at vs2012 in the meanwhile, just not to be biased

[08:59:23.0000] <bijan>
That's a "polysnot", i.e., what your parrot sneezed on you

[08:59:33.0000] <jgraham>
Surely if you take a pigin and make a standard, it become a creole?

[08:59:34.0000] <marcosc>
:)

[09:00:01.0000] <marcosc>
/me slowly backs away from this now... 

[09:00:06.0000] <sangwhan>
http://www.microsoft.com/visualstudio/eng/ is a blank page in Opera(Presto). Joy.

[09:00:14.0000] <bijan>
Hmm. I guess. But I thought creoles were independent languages

[09:00:37.0000] <bijan>
"Polyglot" HTML is always parasitic on the parent languages

[09:01:06.0000] <jgraham>
I guess

[09:01:19.0000] <jgraham>
But once you have a standard you have "native speakers"

[09:01:29.0000] <bijan>
I guess if people "speak it" nativity then it's a creole

[09:01:39.0000] <bijan>
But that could happen pre standard

[09:01:42.0000] <darobin>
now let's round up this discussion of language variations by digging into how to capture their media types properly

[09:02:05.0000] <bijan>
text/html+pidginxml

[09:02:31.0000] <darobin>
I like that one

[09:02:50.0000] <darobin>
text/html+pidginxml;version=whatwg-creole works too

[09:03:06.0000] <darobin>
(I forgot I also wanted to bring version indicators into the chat)

[09:04:29.0000] <bijan>
Interesting, polyglot documents suggest use of non-polyglot parsers

[09:04:42.0000] <MikeSmith>
polyglot is an elaborate troll conceived by the TAG consigliere in collusion with a faction within the HTML WG chairs

[09:04:43.0000] <Ms2ger>
There are no polyglot parsers

[09:04:55.0000] <bijan>
I.e., either HTML5 native or XTHML5/XML based parsers, but not something that could consume either

[09:05:01.0000] <Ms2ger>
And that's my limit of one sentence about polyglot a week

[09:05:15.0000] <bijan>
Sure there are, at least easily bolted together

[09:05:30.0000] <bijan>
Depends on where you put the parser boundary :)

[09:15:03.0000] <MikeSmith>
somebody needs to provide the punchline for dude's "Many sites use conneg to treat mobile as a completely separate problem" comment

[09:17:10.0000] <MikeSmith>
"I develop for the long haul, not what works best today"

[09:18:22.0000] <MikeSmith>
I think that proves this guy in on the troll

[09:32:17.0000] <karlcow>
ahaha

[09:32:40.0000] <karlcow>
first reference on w3c mailing list with regards to html is made byâ¦Â drumâ¦ hixie.

[09:32:42.0000] <karlcow>
http://lists.w3.org/Archives/Public/public-html/2008Aug/0301.html

[09:33:06.0000] <karlcow>
We could, if people really want to continue the ridiculous practice of

[09:33:07.0000] <karlcow>
writing polyglot documents, allow lang="" in HTML documents, thus

[09:33:07.0000] <karlcow>
providing a conforming way to set the language that is allowed in both

[09:33:07.0000] <karlcow>
forms.

[09:33:35.0000] <karlcow>
Date: Tue, 12 Aug 2008 10:12:39 +0000 (UTC)

[09:35:16.0000] <Ms2ger>
zewt, so did you write a high-quality, freely licensed JSON serializer library for C#? ;)

[09:42:33.0000] <zewt>
Ms2ger: unfortunately I needed it for work, so it was only one of those things

[09:42:45.0000] <Ms2ger>
"for C#"? ;)

[09:43:13.0000] <zewt>
i will destroy you

[09:46:07.0000] <Ms2ger>
In case people haven't heard where Sylvain is going and have member access: http://www.w3.org/mid/3C4041FF83E1E04A986B6DC50F0178291BF6E264âTrcmc

[10:39:54.0000] <annevk>
hober: sudo make me sando

[10:39:59.0000] <annevk>
hober: sounds weird

[10:42:30.0000] <Ms2ger>
OH: "W3C Invites Implementations of Turtle"

[10:42:51.0000] <wilhelm>
Is that some semantic web thing?

[10:44:42.0000] <Philip`>
It's one of the myriad serialisations of RDF

[10:45:24.0000] <charl_>
i have actually never seen it implemented personally

[10:46:01.0000] <charl_>
oh wait, this is a new one, i was thinking of another serialisation

[10:46:49.0000] <charl_>
found it: n-triples

[10:46:58.0000] <Ms2ger>
Aren't those just tuples?

[10:47:22.0000] <wilhelm>
I've actually come into contact with RDF on a real project for the first time. It's even more horrible than I had imagined.

[10:47:32.0000] <Ms2ger>
My condolences

[10:48:07.0000] <charl_>
ah, n-triples is a subset of turtle indeed

[10:50:56.0000] <marcosc>
I'm going to punch darobin for every time I have to write a <section> tag because of stupid Respec.js.

[10:51:47.0000] <sangwhan>
/me noticed that WebGL 1.0.2 ratification started, and of course non-khronos members aren't even allowed to see it

[10:52:30.0000] <charl_>
no wait, i was wrong again, i was thinking of notation3 :D

[10:52:48.0000] <charl_>
forgot what it was called; was way too long ago

[10:53:25.0000] <marcosc>
mounir: oh crap. I was working off the samsung document :{

[10:53:41.0000] <marcosc>
I fixed a bunch of typos

[10:54:01.0000] <mounir>
marcosc: sorry for you :)

[10:54:18.0000] <mounir>
marcosc: though, we still don't know what is going to be the FPWD

[10:54:38.0000] <mounir>
I genuinly not understood what their email about our proposal "merge" was trying to say

[10:55:22.0000] <marcosc>
mounir: I read it as "we took your stuff and built onto of it ... and took out the bits we didn't quite agree with"

[10:55:42.0000] <marcosc>
mounir: too many chefs in the kitchen

[10:58:07.0000] <marcosc>
mounir: I've mostly rewritten the manifest props descriptions. Will you consider it for integration.

[10:58:08.0000] <marcosc>
?

[10:59:04.0000] <marcosc>
It will take me a few more days to complete it. But it will make the manifest part of the document easier to implement.

[11:02:26.0000] <mounir>
marcosc: do you have a preview?

[11:02:46.0000] <marcosc>
early preview: http://jsbin.com/enohit/1/edit

[11:05:02.0000] <mounir>
marcosc: feel free to do a pull request when you are done (on my github fork)

[11:05:12.0000] <marcosc>
mounir: I've fixed up some of the textual descriptions, and started describing the structure of the manifest in terms of object types where it is appropriate. Then those objects can be processed accordingly. Have not started on any of the processing stuff yet.

[11:05:15.0000] <marcosc>
ok, will do.

[11:07:21.0000] <marcosc>
mounir: also, can we change application/x-web-app-manifest+json to application/webapp-manifest+json ?

[11:07:53.0000] <marcosc>
If this is going to be the "real deal" we can drop the x-, and the "web-app" is ugly.

[11:15:37.0000] <mounir>
marcosc: I would prefer this to be asked in the mailing list but I have nothing against

[11:17:37.0000] <marcosc>
mounir: ok, np.

[11:28:13.0000] <tantek>
application/webapp-* does seem redundant

[11:29:08.0000] <tantek>
marcosc do you mean something like application/manifest+json ?

[12:04:45.0000] <tobie>
marcosc: you know I added a markdown mode to ReSpec, right. Wouldn't want darobin hurt.

[12:11:09.0000] <karlcow>
arf

[12:13:15.0000] <miketaylr>
moo

[12:39:12.0000] <wilhelm>
marcosc: Thanks fot the kind words. After it was retweeted by some journalists, I was a little worried I was too open. I still love that little browser vendor, despite my disappointment. (c;

[12:39:38.0000] <wilhelm>
s/fot/for

[13:07:24.0000] <jamesr>
tantek, you there?

[13:07:34.0000] <jamesr>
or anyone who knows 'bout fullscreen?

[13:34:39.0000] <karlcow>
http://blog.python.org/2013/02/announcing-defusedxml-fixes-for-xml.html

[13:57:21.0000] <SimonSapin>
Nice! http://w3cmemes.tumblr.com/post/43499115162/simon-sapin-laughs-at-your-weak-timid-requests

[14:05:25.0000] <TabAtkins>
SimonSapin: Hahaha


2013-02-20
[17:57:32.0000] <TabAtkins>
Achievement unlocked: wrote a CSS spec pre-preprocessor, so I can preprocess before I preprocess.

[18:02:25.0000] <zewt>
keep this up and i'm going to :set expandtabs and you'll cease to exist

[18:02:44.0000] <TabAtkins>
Or I'll just get fatter.

[18:02:58.0000] <nimbu>
ahahaha

[20:23:07.0000] <SimonSapin>
TabAtkins: itâs pre-processors all the way down!

[21:16:00.0000] <SimonSapin>
TabAtkins: http://dev.w3.org/csswg/css-variables/ is apparently not "pre-processed"

[01:33:14.0000] <cousteau>
what's the support for the <a rel=noreferrer> attribute?  (is it standard?  when was it introduced?  what browsers and versions support it?)

[02:09:54.0000] <MikeSmith>
cousteau: it's standard. It was introduced at least 5 years ago. I think only WebKit supports it

[02:10:25.0000] <cousteau>
"5 years ago" means HTML 4.01 or so?

[02:10:37.0000] <cousteau>
or was it already HTML 5?

[02:12:46.0000] <MikeSmith>
cousteau: it was added to the current HTML spec back when it was still just called Web Applications 1.0

[02:12:59.0000] <MikeSmith>
and so it's a new feature in HTML5

[02:13:06.0000] <MikeSmith>
it wasn't in HTML4

[02:15:19.0000] <MikeSmith>
http://html5.org/tools/web-apps-tracker?from=1118&to=1119

[02:19:06.0000] <gsnedders>
cousteau: HTML4 was 15 years ago :P

[02:19:24.0000] <cousteau>
gsnedders, no HTML4, HTML4.01!

[02:19:37.0000] <cousteau>
which would be...  let me calculate it

[02:19:59.0000] <cousteau>
interpolating, I calculate HTML4.01 was 14.85 years ago

[02:20:14.0000] <cousteau>
(that's not how version numbers work, right?)

[02:21:14.0000] <Raymondo>
http://blog.whatwg.org/html-is-the-new-html5

[02:21:56.0000] <cousteau>
is there a page that can tell me whether my browser supports the rel=noreferrer thing?  either a list of browsers or a page with a noreferrer link that links to another page that shows me the http request

[02:22:32.0000] <cousteau>
a page that displays the whole http request would be enough

[02:27:08.0000] <Raymondo>
http://jsbin.com/etotur

[02:30:02.0000] <marcosc>
annevk: when referring to a path component of a URI that needs to be checked for validity, should I use path from RFC3986 or ipath from RFC3987?

[02:32:31.0000] <annevk>
you should use path from the URL Standard

[02:33:04.0000] <annevk>
although checked for validity sounds like a spurious concept

[02:34:25.0000] <cousteau>
hm, both show referrer

[02:34:51.0000] <Raymondo>
not in chrome

[02:34:54.0000] <MikeSmith>
cousteau: http://darklaunch.com/tools/test-referer

[02:35:07.0000] <cousteau>
Raymondo, that's what I was checking

[02:35:31.0000] <Garbee>
cousteau, I see Mozilla still has an open bug for it to be added. So it at least doesn't work there. https://bugzilla.mozilla.org/show_bug.cgi?id=530396

[02:36:20.0000] <Raymondo>
that's interesting. I'm on 25/mac and noreferrer works on that jsbin test

[02:36:41.0000] <marcosc>
annevk: I need to check if "\u0000!Â£@$%!$Â£@!!Â£!Â£@Â£124!23412" is ok to use, it's what I mean by validity

[02:37:04.0000] <annevk>
marcosc: it'll parse, but you won't get the same in return

[02:37:29.0000] <marcosc>
that's ok:) Looking at the URL spec

[02:37:55.0000] <annevk>
also, if you have custom scheme like app:// there might not be path parsing

[02:38:08.0000] <annevk>
we'd have to add it to the whitelist of relative schemes

[02:38:17.0000] <cousteau>
Raymondo, btw, thanks for the link

[02:38:26.0000] <Raymondo>
no prob

[02:38:37.0000] <annevk>
and then make sure it doesn't invoke host parsing I suppose

[02:39:13.0000] <cousteau>
Garbee, damn, some Firefox bugs really take their time to get fixed

[02:39:53.0000] <marcosc>
annevk: in FireFox OS, there is a launch_path, which is the path that represents the first resource to load. The origin can be either http:// based or app:// based

[02:40:59.0000] <annevk>
origin is unrelated to URL parsing

[02:41:21.0000] <annevk>
URL parsing requires input and optionally a base

[02:57:55.0000] <marcosc>
annevk: thanks for the guidance.

[02:58:11.0000] <annevk>
anytime

[03:04:53.0000] <annevk>
"As only mutating the prototype chain" Can't wait for TC39 to find out :p

[03:09:13.0000] <beverloo>
annevk, any ideas about potential compatibility impact given http://crbug.com/177176?  Should it be filed as a DOM4 bug for reference?

[03:12:05.0000] <annevk>
beverloo: well we know this can be an issue

[03:12:25.0000] <annevk>
beverloo: that's why they're all tentatively added to figure out if we can keep them

[03:12:49.0000] <beverloo>
I recall them being rolled back in WebKit previously because of a compatibility issue

[03:12:56.0000] <beverloo>
While this seems minor, there may be more out there.  I'd be a shame

[03:12:59.0000] <beverloo>
but good that it's known!

[03:13:25.0000] <annevk>
event handlers are a big problem with introducing any new method :(

[03:13:37.0000] <annevk>
if they're rolled back from WebKit... that news hadn't reached me yet

[03:14:13.0000] <annevk>
I'll give up when arv_ / slightlyoff give up

[03:15:32.0000] <beverloo>
They were rolled in again as well, I think we shipped them with Chrome 23 or Chrome 24 (i.e. out on stable for at least a month or two)

[03:15:48.0000] <annevk>
ah okay

[03:57:24.0000] <marcosc>
mounir: ping me when you are around

[03:58:37.0000] <annevk>
he's around

[04:07:27.0000] <mounir>
yeah, I am

[04:07:35.0000] <marcosc>
mounir: hi

[04:08:20.0000] <marcosc>
mounir: required_features and the permissions members in the manifest... I'm a bit confused by them

[04:09:10.0000] <marcosc>
If an author writes the permissions in English, what is the value of them to a Chinese user?

[04:09:18.0000] <marcosc>
Or are permissions used somewhere else?

[04:09:42.0000] <mounir>
marcosc: permissions are keywords

[04:09:46.0000] <mounir>
not user facing strings

[04:10:05.0000] <mounir>
some APIs are linked to some permissions

[04:10:19.0000] <mounir>
the runtime spec do some links

[04:10:22.0000] <mounir>
like "geolocation"

[04:10:44.0000] <marcosc>
shouldn't web platform features just be available by default?

[04:10:51.0000] <marcosc>
like geo

[04:11:18.0000] <mounir>
marcosc: no

[04:11:38.0000] <mounir>
marcosc: I mean, depends what you mean

[04:11:44.0000] <marcosc>
mounir: if we start adding things like that, then it means that you freeze the API access to the platform and everything from the point of release becomes frozen

[04:12:17.0000] <marcosc>
mounir: if you add an Ice Cream API tomorrow, and it's "Web safe", how will one vendor know to make it available and another not?

[04:12:52.0000] <marcosc>
vendor A might think, oh, I don't know if we should allow that on the runtime, but vendor B allows it by default

[04:13:29.0000] <marcosc>
Developers targeting Vendor B's runtime won't do any permission checks, so when their app is run on Vendor A's runtime, the app will fail

[04:15:14.0000] <annevk>
marcosc: if it's web safe the question won't come up

[04:15:24.0000] <mounir>
marcosc: I do not know what Firefox OS is doing but how I see it is that stuff like "geolocation" could be a way for the application to say upfront they want to use a permission

[04:15:39.0000] <mounir>
so the implementation can have a UI that asks the user if he/she wants to give that permission at install time

[04:15:41.0000] <annevk>
mounir: which is a terrible model btw

[04:15:43.0000] <mounir>
but that's an implementation detail

[04:15:50.0000] <mounir>
annevk: sure...

[04:16:00.0000] <mounir>
but that shouldn't make the app not able to use the permission

[04:16:12.0000] <marcosc>
mounir: it's not really an implementation detail if it could mean apps run on some platforms and not on others

[04:16:33.0000] <mounir>
I don't exactly know what FxOS is doing because they kept changing that all the time and it has not really been done in the open...

[04:17:40.0000] <mounir>
marcosc: if we make a requirement for apps to ask for permissions upfront, there is no incompatibility there

[04:18:07.0000] <mounir>
we could also make some permissions required to be asked upfront depending on the application privilege

[04:18:24.0000] <mounir>
I think the first model is simpler but not very fault tolerant

[04:18:33.0000] <marcosc>
mounir: there might be, if one app supports and API and another doesn't (but the developer has built in some kind of fallback for it)

[04:18:58.0000] <mounir>
marcosc: that is true

[04:19:06.0000] <mounir>
but there is error callbacks for that

[04:19:15.0000] <mounir>
like currently, geolocation can be rejected all the time

[04:19:22.0000] <mounir>
not having the permission would work the same way

[04:19:35.0000] <marcosc>
Sure, right now I'm only thinking of the installation step

[04:19:51.0000] <marcosc>
I'm worried apps will not install across runtimes

[04:20:07.0000] <marcosc>
and that permissions ()

[04:20:11.0000] <marcosc>
woops

[04:20:15.0000] <marcosc>
let me try that again

[04:20:40.0000] <marcosc>
and that permissions (read, readwrite, etc) won't map cleanly to all APIs

[04:21:11.0000] <marcosc>
Like, for example, that maps ok to contacts, but not too sure about Bluetooth

[04:21:25.0000] <marcosc>
or to NFC

[04:21:37.0000] <marcosc>
or even raw sockets

[04:21:38.0000] <mounir>
marcosc: it doesn't apply to all permissions

[04:23:27.0000] <marcosc>
mounir: ok, going to think about it. I'll see what some other FxOS apps are doing/declaring.

[04:25:27.0000] <marcosc>
/me also worries about having to capability-tests all APIs for read, rewrite, readcreate, and createonly modes. And define what is available when.

[04:29:10.0000] <mounir>
marcosc: all of those things should send error events on the DOMRequest if it fails

[04:29:26.0000] <mounir>
so, instead of capability testing, developers can handle errors

[04:30:23.0000] <marcosc>
mounir: sure, but I'm thinking from an implementation perspective. If I'm going to publish and API, I now need to define how the API behaves under the four different rules above.

[04:31:17.0000] <marcosc>
(and then the developer needs to deal with all the different restrictions).

[04:31:26.0000] <mounir>
marcosc: if there is no read-write aspects (like in most APIs), I guess not

[04:31:59.0000] <marcosc>
/me checks... 

[04:32:46.0000] <marcosc>
so, could be contacts, calendar, media storage, network

[04:33:02.0000] <marcosc>
system settings

[04:34:55.0000] <marcosc>
mounir: as a developer, I would just set "give me access to everything" to avoid any potential pain

[05:15:39.0000] <Lachy>
selectors api is finally going to REC :-)

[05:15:51.0000] <Lachy>
should be published by tomorrow.

[05:16:11.0000] <jgraham>
Oh, am I allowed to use it now?

[05:16:36.0000] <wilhelm>
\o/

[05:17:05.0000] <Lachy>
jgraham, not yet. It's best to wait till a few errata have been filed first to ensure stability.

[05:21:04.0000] <odinho>
:-D I was adventurous and used it today 8)

[05:22:09.0000] <SimonSapin>
Lachy: is it time to rename it?

[05:22:34.0000] <jgraham>
/me votes CSSPath

[05:23:34.0000] <sangwhan>
/me is waiting for someone to come up with a name that contains the prefix "poly"

[05:23:35.0000] <odinho>
jgraham: Since there's a CSS global object, it could even be  CSS.path()

[05:25:42.0000] <jgraham>
odinho: That seems quite long. CSS.sel()

[05:26:03.0000] <jgraham>
Or CSS.me()

[05:26:17.0000] <jgraham>
as in "Now I will CSS.me() some elements"

[05:26:43.0000] <darobin>
or CSS()

[05:27:18.0000] <darobin>
oh, hey, how about we think of "$" as S for selector?

[05:27:22.0000] <darobin>
then we could have $()

[05:28:15.0000] <gsnedders>
SimonSapin thinks REC is time to rename something!?

[05:28:17.0000] <gsnedders>
Really!?

[05:28:29.0000] <gsnedders>
Can he not hold off till it's RECIND!?

[05:28:52.0000] <Krinkle>
Hi

[05:29:16.0000] <Krinkle>
I'm trying to figure out whether browsers are supposed to dynamically re-resolve images/links and stuff when a <base> tag is introduced or document.baseURI otherwise modified.

[05:29:18.0000] <Krinkle>
http://codepen.io/anon/pen/fshFd

[05:29:25.0000] <Krinkle>
From reading the spec I think they're supposed to

[05:29:29.0000] <Krinkle>
but this codepen shows that they don't

[05:29:52.0000] <jgraham>
Krinkle: Here be dragons

[05:30:04.0000] <Krinkle>
After the first callback image 2 and 3 remain broken, only after I reresolve it explicitly and set the properties do they render

[05:30:11.0000] <jgraham>
I'm pretty sure you aren't supposed to reresolve

[05:30:14.0000] <Krinkle>
even a reflow or accessing .src or .outerHTML doesn't trigger it

[05:30:44.0000] <Krinkle>
of course I'm not going to reresolve them in production, that's to show the expected result (browsers are supposed to)

[05:31:10.0000] <jgraham>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=18459

[05:31:15.0000] <jgraham>
Krinkle: ^

[05:31:47.0000] <Krinkle>
I don't really care much about <base>, it's an old thing as far as I'm concerned, but I'm in this thing where we capture the DOM and log it for later. But the show-later is from a different domain, so I'm thinking of inserting a <base> tag on the client side right before we capture the DOM and save it.

[05:31:59.0000] <Krinkle>
would be nice if the preview while that is happening is actually correct and not broken

[05:32:35.0000] <Krinkle>
e.g. that inserting <base> live has the same affect as inserting it, serializing to html, saving it, and parsing that.

[05:32:40.0000] <jgraham>
Krinkle: IIRC the spec doesn't say that the mere act of inserting or chaging <base> does anything with existing URLs

[05:32:59.0000] <gsnedders>
jgraham: It does.

[05:33:38.0000] <Krinkle>
http://www.whatwg.org/specs/web-apps/current-work/multipage/urls.html#dynamic-changes-to-base-urls

[05:33:43.0000] <Krinkle>
^

[05:33:54.0000] <jgraham>
Oh, right

[05:34:07.0000] <jgraham>
So <a> is affected but <img> is not

[05:35:33.0000] <jgraham>
Anyway, as I was saying, after the base changes, not all things actually resolve against the new base

[05:35:56.0000] <jgraham>
In particular pushState

[05:42:06.0000] <jgraham>
Krinkle: http://software.hixie.ch/utilities/js/live-dom-viewer/?saved=2108

[05:42:27.0000] <jgraham>
AFAICT Gecko and WebKit follow the spec in that simple case

[05:47:51.0000] <karlcow>
http://homakov.blogspot.fr/2013/02/hacking-facebook-with-oauth2-and-chrome.html

[05:54:30.0000] <annevk>
<img> is affected too actually

[05:58:52.0000] <jgraham>
In what sense?

[05:59:17.0000] <jgraham>
src is a reflecting attribute so accessing img.src will change the value of src you get back

[05:59:40.0000] <jgraham>
But it doesn't actually cause any change to happen

[06:01:16.0000] <annevk>
sure, loading and changing the URL are different things, but in that respect the same happens to <a> and <img>

[06:02:19.0000] <jgraham>
Right, I guess the point of that spec section is just that UI should be updated

[06:02:35.0000] <karlcow>
what is happening when we set the browser to not download images, then load a page with a <base>, change dynamically the <base> and finally ask to see images.

[06:03:34.0000] <jgraham>
karlcow: YOu should get the image resolved against the base URL

[06:03:47.0000] <jgraham>
s/base/final base/

[06:03:48.0000] <karlcow>
the new base url?

[06:03:52.0000] <jgraham>
Yes

[06:03:52.0000] <karlcow>
:)

[06:13:56.0000] <Krinkle>
And what if we're a regular user that always shows images, and then the base is dynamically changed, should the browser fetch/render the new images if the urls are different now?

[06:14:29.0000] <Krinkle>
Interestingly, the property accessor does immediately yield the updated value against the new base

[06:15:15.0000] <Krinkle>
so from that point in time onwards, the src property will return a url that does not match the rendered image

[06:15:27.0000] <Krinkle>
could be a completely different image, different dimensions, reflow etc. all that stuff

[06:15:49.0000] <Krinkle>
I wonder what'll happen when trying to capture the image data for base64 or canvas at that point

[06:15:55.0000] <Krinkle>
e.g. when trying to snapshot the image

[06:15:57.0000] <Krinkle>
the page*

[06:16:28.0000] <jgraham>
Krinkle: No, the browser shouldn't try to re-fetch the image after changing the base

[06:16:43.0000] <jgraham>
The spec is clear on this (and implementations seem to agree)

[06:17:04.0000] <Krinkle>
jgraham: Can you point me to that point in the spec?

[06:17:27.0000] <Krinkle>
"For example, the CSS :link/:visited pseudo-classes might have been affected."

[06:17:54.0000] <Krinkle>
So it does specifify that rendering should change to some degree, at least in the case of css styling towards visit status of links.

[06:18:12.0000] <Krinkle>
ah "otherwise"

[06:18:14.0000] <Krinkle>
there it is

[06:18:22.0000] <Krinkle>
"For instance, changing the base URL doesn't affect the image displayed by img elements"

[06:18:23.0000] <jgraham>
Yes

[06:18:52.0000] <jgraham>
Note that that is non-normative, but it correctly describes the lack of a normative requirement to do anything

[06:18:54.0000] <Krinkle>
that sounds like a case of "specify status quo browser behavior" not the other way around. What do you think?

[06:19:29.0000] <jgraham>
I think that way round has a great deal of merit :) I also think this is the sane behaviour in this case

[06:19:34.0000] <Krinkle>
Would it be a good idea to propose a change to the spec that would make it do that?

[06:19:45.0000] <jgraham>
I don't think so

[06:20:19.0000] <Krinkle>
k

[06:20:28.0000] <jgraham>
Refetching images when <base> changes seems like at least a minor compat risk

[06:20:54.0000] <jgraham>
Plus, I don't really know why you'd want to do that

[06:58:14.0000] <hsivonen>
/me almost faints. a table on the IANA site: https://www.iana.org/assignments/character-sets/character-sets.xml

[06:58:44.0000] <hsivonen>
also: IANA is not making it harder to get rid of XSLT

[06:58:50.0000] <hsivonen>
s/not/now/

[06:59:38.0000] <zewt>
jgraham: though it looks like there might be some weirdness associated with changing the base url, setting img.src and changing base.href ... guess i'll file a bug

[07:00:32.0000] <annevk>
hsivonen: well that page is pretty much obsolete, I reckon we could do with the raw view

[07:00:57.0000] <hsivonen>
annevk: yeah. pretty sad bocu-1 and scsu made it to the registry, though

[07:01:06.0000] <hsivonen>
such a bad idea to use either for interchange

[07:01:40.0000] <annevk>
Although perceived as such, I'm no longer sure that registry is intended to serve as a guide for what you should actually implement

[07:01:53.0000] <annevk>
Especially given how they go about managing it

[07:02:08.0000] <hsivonen>
annevk: it serves as a reminder of what to blacklist for XSS :-)

[07:02:56.0000] <annevk>
hsivonen: why wouldn't we just emit a single U+FFFD btw and terminate?

[07:11:44.0000] <hsivonen>
annevk: that would work, too, conceptually, but I wasn't sure if it violated Gecko's assuptions about how decoders behave.

[07:12:15.0000] <annevk>
I see

[07:38:18.0000] <annevk>
hsivonen: FWIW, I think I'll wait a couple of days to see what the response is to the various proposals before changing the specification

[08:01:47.0000] <marcosc>
jgraham: you know how I was saying that treating JSON as a WebIDL dictionary might be um, interesting ... looks like Moz is basically doing that with their FxOS manifest format. They disregard the data type adherence in their JSON format, and just cast everything as if it's an WebIDL dictionary.

[08:04:16.0000] <marcosc>
It's neat, because you get all the error handling and type conversion goodness of WebIDL.

[08:04:58.0000] <marcosc>
of course, they are not explicitly using WebIDL.

[08:05:05.0000] <marcosc>
But the effect is the same

[08:05:38.0000] <jgraham>
I see

[08:06:55.0000] <marcosc>
sorry, if I pretend someone cares, then it doesn't sound like I'm always talking to myself :)

[08:10:05.0000] <darobin>
marcosc: are you sure they're not using WebIDL? Gecko has the infrastructure for IDL stuff

[08:10:34.0000] <marcosc>
darobin: I'm pretty sure, I just looked at the code for the processor. https://mxr.mozilla.org/mozilla-central/source/dom/apps/src/AppsUtils.jsm#180

[08:33:36.0000] <Ms2ger>
Anyone feel like telling me what the 2^1024 thing is for in http://www.whatwg.org/html/#rules-for-parsing-floating-point-number-values ?

[08:39:29.0000] <annevk>
http://lists.w3.org/Archives/Public/public-xml-core-wg/2013Feb/0025.html hmm

[08:39:53.0000] <annevk>
Ms2ger: you're the second person to bring that up

[08:40:05.0000] <annevk>
Ms2ger: I think it's to establish infinity

[08:43:54.0000] <annevk>
So question. Which version of FTP is implemented by browsers? http://tools.ietf.org/html/rfc959

[08:51:38.0000] <dglazkov>
good morning, Whatwg

[08:51:40.0000] <dglazkov>
!

[08:53:17.0000] <gsnedders>
Ms2ger: The important thing is they're closer to +/-INF than anything else.

[08:56:07.0000] <annevk>
hey dglazkov

[08:56:41.0000] <annevk>
dglazkov: I didn't find the inDocument and isSVGElement checks from http://trac.webkit.org/browser/trunk/Source/WebCore/dom/EventRetargeter.cpp#L75 in the spec

[08:57:21.0000] <annevk>
dglazkov: and I think the spec should probably also have the bit about Mouse/Focus vs other Events to make it clear not all events have relatedTarget

[08:57:58.0000] <annevk>
dglazkov: tried to catch hayato on #webkit but I think he might not be online there

[08:58:45.0000] <dglazkov>
annevk: emailing him is probably best. He's in Tokyo, so timezone gap...

[08:59:34.0000] <dglazkov>
annevk: I have this phrase "Some events have a relatedTarget" in https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#retargeting-related-target. Is this enough?

[09:00:19.0000] <dglazkov>
annevk: SVG is slightly weird in WebKit. I wouldn't worry about that particular check.

[09:00:51.0000] <dglazkov>
as for inDocument check, that's in DOM core, right?

[09:00:59.0000] <annevk>
Your terminology is kinda wrong. It's not called a property. mouseover is not an event but an event type and not all events with a mouseover type will therefore have a relatedTarget attribute

[09:01:09.0000] <annevk>
dglazkov: is it?

[09:01:23.0000] <dglazkov>
annevk: I agree on terminology being wrong

[09:01:26.0000] <annevk>
dglazkov: I don't think the DOM cares where your node is

[09:01:54.0000] <dglazkov>
annevk: well, yeah. If node is not in tree, it usually doesn't have an event path.

[09:02:07.0000] <annevk>
dglazkov: I think it would be clearer if we scoped it to MouseEvent and FocusEvent or whatever those interfaces are called and also explicitly dealt with the case when the event does not inherit or implement those interfaces

[09:02:10.0000] <dglazkov>
at least, that's how web works.

[09:02:16.0000] <annevk>
dglazkov: uuuh

[09:02:18.0000] <dglazkov>
annevk: yep. That sounds good.

[09:02:32.0000] <annevk>
dglazkov: you can have a tree outside of a document...

[09:02:56.0000] <annevk>
dglazkov: e.g. var x= document.createElement("x") ; x.appendChild(document.createElement("z"))

[09:03:17.0000] <annevk>
dglazkov: afaik event dispatch should just work there

[09:03:23.0000] <annevk>
smaug____ can confirm

[09:03:36.0000] <dglazkov>
annevk: well... it won't in webkit :) That check has been there for a long time.

[09:03:57.0000] <dglazkov>
in other words, it's not related to shadow dom

[09:04:14.0000] <annevk>
dglazkov: so inDocument() means the node has a Document ancestor right?

[09:04:22.0000] <dglazkov>
annevk: yup

[09:04:37.0000] <annevk>
dglazkov: okay, so if it doesn't the event is still dispatched in WebKit but won't go up or down any tree?

[09:04:52.0000] <dglazkov>
annevk: yep.

[09:05:34.0000] <annevk>
okay, you're right that's unrelated to what you're doing

[09:05:39.0000] <annevk>
Ms2ger: we should test that

[09:05:44.0000] <smaug____>
annevk: ?

[09:06:04.0000] <smaug____>
event propagation has nothing to do with elements being in document

[09:06:27.0000] <annevk>
smaug____: right, so in WebKit it does...

[09:06:53.0000] <smaug____>
that is a bug in webkit

[09:06:57.0000] <smaug____>
and rather odd one

[09:07:04.0000] <smaug____>
let's not add that bug to specs

[09:07:42.0000] <annevk>
I wonder why there's no test that catches that

[09:08:40.0000] <Ms2ger>
We've got tests? ;)

[09:08:46.0000] <smaug____>
I wonder why webkit has such odd behavior

[09:09:26.0000] <annevk>
http://trac.webkit.org/browser/trunk/Source/WebCore/dom/EventRetargeter.cpp#L91

[09:09:37.0000] <annevk>
Found it while reading the code today to understand Shadow DOM

[09:11:01.0000] <smaug____>
last time I checked Gecko's event re-retargeting (which is used for XBL for example) is quite similar. http://mxr.mozilla.org/mozilla-central/source/content/events/src/nsEventDispatcher.cpp#265

[09:11:07.0000] <dglazkov>
let me see...

[09:11:30.0000] <smaug____>
though XBL doesn't handle relatedTarget as consistently as shadow dom

[09:15:37.0000] <GPHemsley>
annevk: Do you remember what we decided about the license for the wiki? It's MIT now, but I recall it was something else before that. (Is that the case?)

[09:16:55.0000] <annevk>
GPHemsley: no, I wanted to transition from MIT to CC0

[09:17:05.0000] <GPHemsley>
annevk: Oh, and that never happened?

[09:17:27.0000] <annevk>
GPHemsley: well I wasn't sure how to do it so I kinda left that for you to do at some point if you could

[09:17:34.0000] <GPHemsley>
oh

[09:17:36.0000] <GPHemsley>
oops

[09:17:43.0000] <annevk>
GPHemsley: actually remembered that earlier today and wanted to bug you about it

[09:18:19.0000] <GPHemsley>
Well, I don't know if there's any way built in to MediaWiki that automatically licenses old content under one license and new content under another.

[09:18:46.0000] <GPHemsley>
Would there be legal ramifications if we just did it all in one fell swoop?

[09:20:26.0000] <annevk>
We'd have to add some kind of disclaimer on existing pages I suppose and only remove that once we clarified with all contributors of that page they're okay with CC0

[09:20:53.0000] <annevk>
tantek: you around? How did you do this for microformats?

[09:22:57.0000] <GPHemsley>
Oh, well, http://wiki.whatwg.org/wiki/WHATWG_Wiki:Copyrights would actually allow us to explicitly state whatever we wanted

[09:23:08.0000] <GPHemsley>
including, "before date X, things were under another license"

[09:23:51.0000] <dglazkov>
annevk, smaug____: http://trac.webkit.org/changeset/19897

[09:25:17.0000] <annevk>
dglazkov: that looks wrong

[09:26:07.0000] <dglazkov>
annevk: we build our castles on mistakes of our past. Where were you 6 years ago with your awesome DOM spec!? :)

[09:26:40.0000] <annevk>
prolly trying to understand the DOM specs of that age

[09:26:53.0000] <GPHemsley>
annevk: You want me to change the license effective today?

[09:26:57.0000] <dglazkov>
time machine pls

[09:27:11.0000] <annevk>
GPHemsley: please

[09:27:20.0000] <GPHemsley>
annevk: You're the only one who's edited today, so that shouldn't be a problem.

[09:27:45.0000] <dglazkov>
coming to a theater near you... Anne van Kesteren is THE LOOPER

[09:29:00.0000] <smaug____>
/me kicks Antti hard

[09:29:12.0000] <annevk>
smaug____: ?

[09:29:28.0000] <dglazkov>
hey, hey, no violence.

[09:29:35.0000] <annevk>
oh it was his patch?

[09:29:42.0000] <smaug____>
yup

[09:30:02.0000] <smaug____>
dglazkov: just gentle kick

[09:30:24.0000] <annevk>
weird that they didn't get compat issues

[09:30:28.0000] <annevk>
i guess nobody uses events

[09:30:38.0000] <annevk>
also, I don't understand how this fix works

[09:30:55.0000] <smaug____>
I think https://bugs.webkit.org/show_bug.cgi?id=12918#c2 is about Firefox < 3.0

[09:30:58.0000] <annevk>
if the node is disconnected from the tree when you dispatch the event, how could it ever reach the parents?

[09:31:25.0000] <annevk>
oh Firefox had a bug too?

[09:31:31.0000] <smaug____>
event dispatching was rewritten 2006, so it ended up to FF3 which was released IIRC spring 2007

[09:31:53.0000] <smaug____>
Gecko < 1.9 had odd event dispatching

[09:32:18.0000] <annevk>
nice digging dglazkov

[09:32:31.0000] <smaug____>
(my 3rd big contribution to Gecko was to rewrite the whole DOM event dispatching :) )

[09:32:47.0000] <dglazkov>
annevk: oh it's nothing, just a hundred clicks on trac.webkit.org

[09:33:28.0000] <Ms2ger>
dglazkov, anything takes a hundred clicks there

[09:33:35.0000] <smaug____>
oh, 3.0 was released 2008

[09:36:09.0000] <annevk>
dglazkov: will you file a bug?

[09:37:55.0000] <dglazkov>
annevk: WebKit bug? I don't think there's much hope for it ever being fixed. We usually don't change a behavior that's been around for over 6 years.

[09:38:14.0000] <annevk>
o_O

[09:39:32.0000] <hober>
O_o

[09:39:41.0000] <dglazkov>
<_<

[09:39:57.0000] <dglazkov>
/me is filing bug

[09:40:32.0000] <smaug____>
dglazkov: o_O

[09:40:41.0000] <smaug____>
not changing behavior

[09:40:46.0000] <smaug____>
that is odd

[09:41:02.0000] <dglazkov>
don't break the web, right?

[09:41:59.0000] <annevk>
and don't violate the specs

[09:42:13.0000] <MikeSmith>
bend the Web

[09:42:32.0000] <tantek>
/me scrolls up

[09:43:07.0000] <tantek>
/me agrees with transitioning the wiki license to CC0.

[09:44:10.0000] <tantek>
GPHemsley: you can flip the license for all edits as of today and later.

[09:44:23.0000] <GPHemsley>
tantek: In the process. :)

[09:44:48.0000] <tantek>
annevk, with microformats we took the approach of flipping the license, and *also* have a template for user pages where individual users could place all their contributions (for all time) into public domain / CC0.

[09:45:13.0000] <tantek>
then we asked contributors to do so, and as they did, more and more pages full entered the public domain

[09:45:43.0000] <annevk>
I guess we can see how far that gets us

[09:45:58.0000] <annevk>
should work pretty well for the pages I author mostly by myself :)

[09:46:02.0000] <tantek>
see here for details on how we addressed the transitions: http://microformats.org/wiki/Microformats_Wiki:Copyrights

[09:46:28.0000] <tantek>
(that page itself is of course CC-PD/0 so feel free to copy from it as you feel is useful for the WHATWG wiki :) )

[09:47:21.0000] <tantek>
note: this is also why I put the public domain release template on the WHATWG wiki and used it on my user page ages ago: http://wiki.whatwg.org/wiki/User:Tantek

[09:47:42.0000] <tantek>
note the phrasing: "or any later version published by Creative Commons; with either a waiver of rights, or an assertion that no rights attach to a particular work."

[09:48:09.0000] <GPHemsley>
annevk, tantek: http://wiki.whatwg.org/wiki/WHATWG_Wiki:Copyrights

[09:48:10.0000] <tantek>
that made the declaration CC0 compatible even before CC0 was done being launched (I had that phrasing checked by Lessig at the time)

[09:48:58.0000] <tantek>
GPHemsley - that's a good start.

[09:49:10.0000] <dglazkov>
annevk: https://bugs.webkit.org/show_bug.cgi?id=110353

[09:49:25.0000] <GPHemsley>
tantek: Yeah, I didn't read what you'd written until after.

[09:49:40.0000] <tantek>
I'd add an encouragement for contributors to add a public domain / CC0 template to their user page to place more of the wiki into CC0.

[09:49:48.0000] <tantek>
thanks GPHemsley - appreciate this.

[09:51:20.0000] <annevk>
GPHemsley: sweet, also need to update the footer

[09:51:37.0000] <GPHemsley>
annevk: One step at a time. ;)

[09:51:42.0000] <annevk>
thanks dglazkov!

[10:04:11.0000] <GPHemsley>
annevk, tantek: You can now go ahead and add {{CC0 user}} to your user page.

[10:04:36.0000] <tantek>
CPHemsely - awesome

[10:05:43.0000] <tantek>
done.

[10:06:07.0000] <tantek>
not as pretty as http://wiki.whatwg.org/wiki/Template:Cc-public-domain-release but it will do ;)

[10:07:36.0000] <GPHemsley>
/me shrugs

[10:23:29.0000] <MikeSmith>
ok ok I'm pretty sure kripken is the same that The Story of Mel, a Real Programmer is about

[10:24:02.0000] <MikeSmith>
same guy

[10:24:24.0000] <MikeSmith>
or at least a reincarnation

[10:39:13.0000] <GPHemsley>
Is anyone else suddenly having trouble accessing wiki.whatwg.org ?

[10:40:55.0000] <GPHemsley>
ah, there we go

[10:45:42.0000] <GPHemsley>
annevk, tantek, et al.: If you want to release a pre-existing page under CC0 (provided you have consent from all editors involved), you can use {{CC0 page}}.

[10:46:21.0000] <tantek>
nice

[10:54:35.0000] <GPHemsley>
http://wiki.whatwg.org/wiki/WHATWG_Wiki:Copyrights has been updated to be more explicit and helpful.

[10:54:46.0000] <GPHemsley>
tantek: ^

[10:56:24.0000] <tantek>
GPHemsley - see my previous attempt at PD here: http://wiki.whatwg.org/wiki/Category:Public_domain_license

[10:56:28.0000] <tantek>
(encouraging people)

[10:56:47.0000] <tantek>
we can probably get hober to also add {{cc0 user}}

[10:59:03.0000] <GPHemsley>
tantek: I see your point about encouraging users, but I don't think the category page is the place to do it. In fact, I would prefer to deprecate the framework surrounding {{cc-public-domain-release}} in favor of the new templates, if you don't mind. (We don't want to create more confusion than there already is.)

[10:59:35.0000] <GPHemsley>
tantek: I'll send a message to the mailing list later about the changes.

[10:59:49.0000] <tantek>
Yes that makes sense. Perhaps deprecate it once the one user (hober) of PD but not CC0 has updated their user page?

[11:00:11.0000] <tantek>
I figured every change to encourage people was worth doing

[11:00:18.0000] <tantek>
just to try to get more people to do it

[11:00:47.0000] <tantek>
like if/when people find the category page from a person's user page, and then wonder how they can get themselves added to that category page.

[11:00:47.0000] <GPHemsley>
tantek: Well, if the chatter here and the announcement on the mailing list doesn't do it, then probably nothing will. ;)

[11:01:04.0000] <tantek>
well it's the initial burst vs. long term

[11:01:10.0000] <GPHemsley>
sure

[11:01:23.0000] <GPHemsley>
but we can deal with that later

[11:01:34.0000] <GPHemsley>
/me wanders off to eat.

[11:07:44.0000] <annevk>
hober: please fix your wiki page per above kthxbai :)

[11:11:03.0000] <divya>
so vague annevk

[11:12:01.0000] <jamesr>
\angry_simcity_advisor{You can't public GCPM in this state! You will regret this!}

[11:14:56.0000] <Ms2ger>
Can't, eh

[11:17:51.0000] <dglazkov>
annevk: you still there?

[11:18:16.0000] <dglazkov>
annevk: what is a good error to throw when author attempts to register a custom element that is already registered?

[11:19:16.0000] <dglazkov>
1) NotSupportedError, as in you can register more than one element with the same name

[11:19:28.0000] <dglazkov>
can->can't

[11:20:02.0000] <dglazkov>
2) InvalidAccessError, as in document.register does not support more than one registration with the same name

[11:20:15.0000] <annevk>
I guess 1)

[11:20:18.0000] <dglazkov>
3) DglazkovError, as in blame dglazkov for this mess

[11:20:19.0000] <annevk>
or something new

[11:20:27.0000] <annevk>
3) works

[11:20:32.0000] <dglazkov>
:)

[11:20:41.0000] <annevk>
that table is expandable

[11:21:09.0000] <dglazkov>
I think I'll go with 1) for now, and we can tweak later

[11:21:17.0000] <annevk>
sounds good

[11:21:22.0000] <annevk>
though boring

[11:23:28.0000] <dglazkov>
:P

[11:34:38.0000] <GPHemsley>
FYI: I just turned on subpages for the main namespace, so that using a slash in a page name will create a breadcrumbs navigation hierarchy

[11:34:45.0000] <GPHemsley>
(on the wiki)

[11:42:29.0000] <GPHemsley>
annevk: Do you suppose it would be a good idea to tag pre-existing pages with {{CC0 page}} if all of their editors have used {{CC0 user}}?

[11:42:48.0000] <GPHemsley>
i.e. for clarity's sake

[11:42:54.0000] <annevk>
GPHemsley: yeah think so

[11:43:03.0000] <annevk>
GPHemsley: avoids having to check

[11:44:02.0000] <GPHemsley>
annevk: OK, I did [[Fetch]].

[11:54:27.0000] <GPHemsley>
Hixie: Wanna get in on the CC0 party?

[11:58:51.0000] <Hixie>
i'm an MIT guy

[11:59:10.0000] <Ms2ger>
I thought you were more of a Bath one

[11:59:54.0000] <Hixie>
to my knowledge, my alma mater never invented their own license, luckily

[12:03:01.0000] <jgraham>
Hixie: It looks like they will come up with a custom one if you pay them http://www.bath.ac.uk/bathventures/forbusiness/ip-licensing.html

[12:03:11.0000] <Hixie>
fantastic

[12:03:44.0000] <GPHemsley>
Hixie: In that case, is it alright if I tag this as CC0? http://wiki.whatwg.org/wiki/HTML_derivatives

[12:05:42.0000] <Hixie>
sure

[12:05:55.0000] <Hixie>
you guys spent way too much time worrying about licenses :-P

[12:09:29.0000] <GPHemsley>
/me shrugs

[12:11:02.0000] <GPHemsley>
annevk: I've updated the fine print in the footer, but I need to find some icon that suggests a hybrid license.

[12:14:08.0000] <annevk>
Hixie: about as much time as you worry about Twitter ;-P

[12:14:28.0000] <GPHemsley>
Hixie: So, wait, does that mean you object to the CC0 switch?

[12:15:43.0000] <jgraham>
/me thinks fiddling with the licenses seems rather pointless

[12:16:20.0000] <annevk>
jgraham: just makes it clearer if some text from the wiki ends up in a spec

[12:25:53.0000] <GPHemsley>
Hixie: Speak now or forever hold your peace. (I'm about to message the list.)

[12:34:22.0000] <annevk>
he's fine with it

[12:37:05.0000] <nimbu>
srsly wtf is this compromise? https://www.w3.org/Bugs/Public/show_bug.cgi?id=18669

[12:37:15.0000] <nimbu>
dglazkov: what is this HYPHEN BZNSS?!

[12:38:03.0000] <GPHemsley>
annevk: Alright, message sent. Wrath is on you now. ;)

[12:39:25.0000] <annevk>
/me braces for impact

[12:41:35.0000] <annevk>
nimbu: your English is totes weird

[12:42:57.0000] <TabAtkins>
nimbu: Um, the hell are you going on about?  Previously we needed an x- prefix on element names.  Now we've reduced it to just a - in the name somewhere.

[12:43:07.0000] <nimbu>
ughhh complicated

[12:43:12.0000] <TabAtkins>
?????

[12:43:14.0000] <nimbu>
x- was at least clear

[12:43:17.0000] <nimbu>
it was custom

[12:43:21.0000] <nimbu>
now who knows

[12:43:25.0000] <Ms2ger>
is="" is much nicer

[12:43:26.0000] <TabAtkins>
x- was super unpopular.

[12:43:35.0000] <nimbu>
only with the vocal trolls TabAtkins

[12:43:44.0000] <TabAtkins>
nimbu: No, with plenty of people.

[12:44:19.0000] <nimbu>
ughhhhhhhhh

[12:44:25.0000] <Ms2ger>
nimbu, calling me a vocal troll, eh? ;)

[12:44:29.0000] <nimbu>
more fine print!!!!

[12:44:35.0000] <nimbu>
Ms2ger: only by inference

[12:44:44.0000] <nimbu>
so good for open web standards!!

[12:45:14.0000] <nimbu>
/me is very very disappoint

[12:45:21.0000] <TabAtkins>
nimbu: You're weird.  A - is really easy, and will be used commonly anyway - libraries should preface their element names with a prefix to avoid conflicts.

[12:45:38.0000] <TabAtkins>
Basically, this is just letting you use your own prefix, rather than forcing it to be an x- prefix.

[12:45:51.0000] <Ms2ger>
"Content Feature Schema for Internet Fax"

[12:45:55.0000] <TabAtkins>
If you feel like using x-, go crazy - it's totally valid.

[12:47:39.0000] <esprehn_>
In practice everyone was going to prefix anyway, so we were going to end up with x-jq-button, x-ext-menulist, x-ng-tabpane so the x- was just noise

[12:47:46.0000] <nimbu>
own prefix for greater conflicts.

[12:48:07.0000] <nimbu>
so we cannot repurpose namespaces for this

[12:48:10.0000] <astearns>
nimbu-feedback-button

[12:48:14.0000] <nimbu>
we just gotta reinvent the wheel

[12:48:20.0000] <nimbu>
:)

[12:48:29.0000] <nimbu>
it would just be great screaming WTF asdf`

[12:48:30.0000] <nimbu>
err

[12:48:32.0000] <nimbu>
astearns:

[12:48:38.0000] <esprehn_>
astearns: I'm sure adobe will jump on mx ;)

[12:48:56.0000] <esprehn_>
<mx-vbox>

[12:49:08.0000] <nimbu>
<wtf-h1>

[12:49:14.0000] <nimbu>
<-h2>

[12:49:24.0000] <astearns>
esprehn_: I think we'd switched to spark-

[12:49:54.0000] <nimbu>
bah some day this pile of wood called a house is gonna fall crashing down

[12:50:00.0000] <TabAtkins>
nimbu: If you actually suggest namespaces, you're trolling.

[12:50:15.0000] <nimbu>
it was invented to solve this problem no?

[12:50:19.0000] <nimbu>
maybe in a different context

[12:50:24.0000] <esprehn_>
nimbu: dash isn't valid at the start

[12:50:27.0000] <Ms2ger>
Mm, namespaces

[12:50:29.0000] <TabAtkins>
That was the intention, yes.  It failed really badly for well-known reasons.

[12:50:39.0000] <nimbu>
and why are we assuming this custom element thing wont

[12:50:44.0000] <TabAtkins>
It was a terrible implementation of a solution.

[12:51:02.0000] <Ms2ger>
nimbu, you're making an assumption there...

[12:51:07.0000] <nimbu>
o k thanks esprehn_

[12:51:13.0000] <nimbu>
Ms2ger: valid point.

[12:51:23.0000] <TabAtkins>
nimbu: Because we know why namespaces failed, we know that self-selected short prefixes *don't* fail (they're very successful in lots of things on the web, including large libraries), so it seems we have history on our side?

[12:51:36.0000] <nimbu>
but i am just wondering why we keep reinventing wheel assuming its just gonna get betterâ¢

[12:51:48.0000] <nimbu>
i merely liked that : syntax

[12:51:57.0000] <TabAtkins>
We're actually copying the wheel.  It's just a better wheel, but everyone keeps suggesting the shitty broken wheel.

[12:51:58.0000] <nimbu>
not that uri at the beginning and other nonsense

[12:52:14.0000] <TabAtkins>
nimbu: Then you're not suggesting namespaces, so you shouldn't say that. ^_^

[12:52:18.0000] <Ms2ger>
Heh, http://dev.w3.org/csswg/css3-preslev/Overview.src.html

[12:52:27.0000] <nimbu>
ok : syntax then

[12:52:35.0000] <nimbu>
hyphen is just way out there.

[12:52:48.0000] <nimbu>
so easy to make mistakes with.

[12:52:53.0000] <TabAtkins>
Colon doesn't work for other reasons - it parses differently in HTML and XML, and in XML it's already used by Namespaces (and invalid in tag names).

[12:53:04.0000] <TabAtkins>
I have no clue what you're going on about with hyphens being hard.

[12:53:18.0000] <TabAtkins>
Ms2ger: What's the "heh" about?

[12:53:27.0000] <nimbu>
<h1class=hi-there>

[12:53:42.0000] <Ms2ger>
I just saw it for the first time in years

[12:53:51.0000] <TabAtkins>
nimbu: ...?

[12:54:12.0000] <nimbu>
wont be an error coz hyphens just mean custom elements?

[12:54:24.0000] <TabAtkins>
nimbu: That's an element with name "h1class", and an attribute called "hi-there".

[12:54:36.0000] <nimbu>
o k

[12:54:49.0000] <nimbu>
and = is assumed as?

[12:55:02.0000] <TabAtkins>
A syntax error, and ignored (if i recall the parser correctly).

[12:55:24.0000] <Ms2ger>
That's actually an element with local name "h1class=hi-there"

[12:55:35.0000] <TabAtkins>
I didn't think = was a valid character in names.

[12:55:48.0000] <Ms2ger>
Names?

[12:55:50.0000] <Ms2ger>
This is HTML

[12:55:59.0000] <nimbu>
http://html5.validator.nu/

[12:56:01.0000] <TabAtkins>
...and?

[12:56:02.0000] <nimbu>
tells me it is an element name

[12:57:37.0000] <nimbu>
SIGHHH

[12:57:42.0000] <nimbu>
whatever

[12:57:58.0000] <TabAtkins>
Indeed.

[13:00:27.0000] <esprehn_>
equals is valid, so is a bunch of unicode

[13:01:09.0000] <esprehn_>
<jqÏwidget>

[13:01:35.0000] <nimbu>
that wont be valid custom elm

[13:24:10.0000] <JonathanNeal>
If any of you have an interest in haml, jade, or sass, I'd dig feedback on a markup I'm experimenting with, something like jade and zen meet sass https://gist.github.com/jonathantneal/4998574

[14:11:12.0000] <JonathanNeal>
Hixie: I loved your 2003 pitch for ::outside, whatever happened?

[15:31:03.0000] <GPHemsley>
...did I just get BitBucket spam?


2013-02-21
[20:35:38.0000] <JonathanNeal>
Why did $ become ! http://www.w3.org/TR/2011/WD-selectors4-20110929/ http://www.w3.org/TR/selectors4/ ?

[21:08:11.0000] <zewt>
"an E element whose foo attribute value is exactly equal to any (ASCII-range) case-permutation of bar" is this just willfully refusing to use the terminology that everyone else uses? heh

[21:16:10.0000] <JonathanNeal>
Yea, the language as very confusing.

[22:49:43.0000] <JonathanNeal>
zewt: does this make more sense, https://gist.github.com/jonathantneal/5002284 ?

[00:28:53.0000] <hsivonen>
whoa. there has been a release of Amaya in 2012.

[00:33:48.0000] <jgraham>
It is a mystery to me why more browsers don't provide an option to change the socket buffer size

[00:34:06.0000] <othermaciej>
a release of Amaya? why bother?

[00:34:21.0000] <othermaciej>
jgraham: I hope you're kidding...

[00:35:44.0000] <jgraham>
othermaciej: Which part? Amaya apparently adding that option or it being a good idea? The former seems to be true, the latter not so much :)

[00:36:07.0000] <othermaciej>
ah, didn't realize that was a follow-up to hsivonen's comment

[00:36:32.0000] <jgraham>
Oh yeah, just taken as a random comment, that wouldn't make much sense :)

[00:37:10.0000] <othermaciej>
it's kind of awesome to have a browser/editor that supports XPointer but not JavaScript

[00:48:21.0000] <marcosc>
othermaciej: we need a good open source browser to save us from the "webkit ie6 monoculture"! This is why Amaya had to be released! :P

[00:49:09.0000] <othermaciej>
wait, IE6 is switching to WebKit?!?!

[00:49:13.0000] <marcosc>
heh

[00:50:04.0000] <marcosc>
I liked @sgalineau's tweet the other day: "BREAKING: Amaya switching to WebKit".

[01:00:58.0000] <othermaciej>
I'd like to see emacs w3-mode switch to WebKit

[01:10:21.0000] <othermaciej>
I read the www-tag archives and was shocked to discover that I accidentally posted to www-tag

[01:26:15.0000] <darobin>
I think Amaya still has a thriving community of a few people

[01:26:29.0000] <darobin>
most people I know who use it actually use it as an editor

[01:44:57.0000] <Ms2ger>
OH: "CSS 2.1 can be a bit sloppy at times."

[02:00:25.0000] <gsnedders>
Yeah, I've used Amaya in the past year â as an editor.

[02:01:50.0000] <Ms2ger>
I've used Amaya once in the last decade, I think

[02:09:44.0000] <darobin>
IIRC glazou made a BlueGriffon extension that copies Amaya's features around PUT and stuff

[02:09:58.0000] <darobin>
to help people switch, because there actually is a user base

[02:10:08.0000] <darobin>
mostly people editing HTML over DAV it would seem

[02:10:48.0000] <Ms2ger>
But glazou also does polyglot, so I dunno if that says much

[02:51:21.0000] <slightlyoff>
gsnedders: on what OS?

[02:51:51.0000] <slightlyoff>
darobin: can anyone quantify the size of that usebase?

[02:52:01.0000] <slightlyoff>
I'm intensely curious

[02:52:04.0000] <darobin>
slightlyoff: for Amaya?

[02:52:16.0000] <darobin>
or people editing HTML over DAV?

[02:52:16.0000] <slightlyoff>
yep

[02:52:29.0000] <slightlyoff>
HTML-over-DAV might be anyone with Office

[02:52:33.0000] <slightlyoff>
(and Windows)

[02:52:35.0000] <darobin>
I can probably get some download numbers

[02:52:39.0000] <slightlyoff>
interesting

[02:52:54.0000] <slightlyoff>
well, don't do pointless work to satisfy my curiosity

[02:53:10.0000] <slightlyoff>
if there was a 7DA dashboard, that'd be one thing, but write no scripts on my behalf = )

[02:53:28.0000] <darobin>
slightlyoff: the mailing list gets some messages http://lists.w3.org/Archives/Public/www-amaya/index.html

[02:54:09.0000] <slightlyoff>
I see...26 messages in the last 2 months, a handful of individual posters

[02:54:20.0000] <darobin>
OMG it's on GITHUB

[02:54:20.0000] <slightlyoff>
I think I have the measure of it now = )

[02:54:30.0000] <annevk>
The only user I know is Chaals and he might have switched to BlueGriffon

[02:54:53.0000] <darobin>
it's read-only though, the *real* repo is in CVS

[02:55:12.0000] <slightlyoff>
I tried it a couple of months back and was amazed at how efficiently it turned spare CPU cores into lap-heaters

[02:56:22.0000] <darobin>
I wonder if it still includes an SVG editor

[03:03:51.0000] <gsnedders>
slightlyoff: On OS X.

[03:04:17.0000] <slightlyoff>
same here...astonishing it even started...was super crashy for me

[03:04:30.0000] <gsnedders>
Worked for me fine. Couldn't get BlueGriffon working. :)

[03:10:47.0000] <darobin>
bah, Firefox really sucks at stepping in when a script hits 100% and stays there :(

[03:11:47.0000] <gsnedders>
They should just solve the halting problem!

[03:12:13.0000] <darobin>
gsnedders: hehe

[03:12:30.0000] <darobin>
you *can* detect that something fishy is going on by monitoring the process

[03:12:39.0000] <darobin>
heuristics don't have to suck

[03:12:55.0000] <gsnedders>
Or you can just not block the UI. ;P

[03:14:12.0000] <Ms2ger>
gsnedders, you mean, like Opera-on-webkit will do? ;)

[03:16:20.0000] <darobin>
gsnedders: that would be sweet too, yes â especially if the UI had a feature to kill scripts

[03:18:32.0000] <karlcow>
Amaya is also very practical to translate an HTML document in wysiwyg mode. The UI is horrendous. It is a only a research project from INRIA. Also very practical for people who want to edit Rendered HTML on a server allowing PUT.

[03:26:10.0000] <jgraham>
Ms2ger: https://github.com/w3c/html-testsuite/pull/26 (hint) ;-)

[03:26:31.0000] <Ms2ger>
Oh, right

[03:27:10.0000] <Ms2ger>
jgraham, done

[03:27:20.0000] <jgraham>
Ms2ger: Thanks!

[03:28:35.0000] <jgraham>
/me only got notified of that in 3 different ways, probably need to add a few more

[03:38:22.0000] <jgraham>
I hate to propose renaming things

[03:38:24.0000] <jgraham>
But

[03:38:34.0000] <jgraham>
Calling something "FontLoader"

[03:38:39.0000] <jgraham>
Does sort of suggest

[03:38:43.0000] <jgraham>
It can name fonts

[03:38:49.0000] <jgraham>
s/name/load

[03:38:54.0000] <jgraham>
Which it can't

[03:39:03.0000] <jgraham>
Apparently.

[03:44:13.0000] <annevk>
FontLoaderManager would be too Java

[03:44:34.0000] <annevk>
in any event, that can still be renamed

[03:48:47.0000] <karlcow>
FontControlTower, Fontitude (French joke inside), Fondue, FontHome(Opera)

[03:49:10.0000] <karlcow>
/me obviously needs a morning cafe.

[04:04:56.0000] <smaug____>
jgraham: what does FontLoader do if it doesn't load fonts?

[04:06:10.0000] <Ms2ger>
Get load events for @font-face fonts

[04:19:17.0000] <annevk>
Looks like jd nuked it from http://dev.w3.org/csswg/css3-fonts/

[04:19:23.0000] <annevk>
Or am I missing something?

[04:20:57.0000] <smaug____>
can't see it there, no

[04:23:20.0000] <jgraham>
It seems to have its own spec now

[04:23:37.0000] <jgraham>
http://dev.w3.org/csswg/css3-font-load-events/FontLoadEvents.html

[04:34:02.0000] <SimonSapin>
annevk: itâs moving to a separate spec

[04:34:25.0000] <SimonSapin>
because we want to advance css3-fonts, but that part is not quite ready

[04:53:31.0000] <smaug____>
odd interface

[04:53:40.0000] <smaug____>
EventTarget and also using callbacks

[05:21:14.0000] <darobin>
whoa weird

[05:21:21.0000] <darobin>
any reason this isn't just using Progress Events?

[05:21:48.0000] <darobin>
which would also make it possible to rename as FontProgress or some such that isn't as confusing

[05:23:09.0000] <darobin>
smaug____: I think that notifyWhenFontsReady(cb) is there so that you can know when all required fonts have loaded, rather than track the loading of each font individually

[05:23:24.0000] <darobin>
of course, that doesn't mean there couldn't be an allfontsloaded event

[05:23:48.0000] <annevk>
they're not progress events

[05:24:26.0000] <annevk>
SimonSapin: ah yeah, CSS WG's silly game

[05:25:30.0000] <darobin>
annevk: hence my question

[05:26:49.0000] <annevk>
darobin: I meant it wouldn't make sense for them to be

[05:26:58.0000] <darobin>
ah, maybe I read it too fast

[05:27:19.0000] <annevk>
sounds like you read it like I read it the first time

[05:27:52.0000] <darobin>
annevk: onloadstart and friends for individual font loads could be PE, no?

[05:28:07.0000] <darobin>
/me should probably actually read the prose too

[05:28:31.0000] <Ms2ger>
darobin, I hope you like the prose, I wrote it ;)

[05:28:40.0000] <annevk>
if you only have start and load, it doesn't make sense to use a complicated interface

[05:28:43.0000] <darobin>
ah, that's why it's so confusing :)

[05:28:55.0000] <annevk>
Ms2ger: really?

[05:29:17.0000] <darobin>
sure, but I reckon that this is wired into the same underlying resource loading code, so I would expect it to be possible to just wire this to existing PE support

[05:29:23.0000] <annevk>
Ms2ger: that would explain why it's somewhat better text than I expected

[05:29:29.0000] <Ms2ger>
:D

[05:29:48.0000] <annevk>
darobin: but what's the point?

[05:30:07.0000] <annevk>
darobin: and how would you distinguish individual fonts

[05:30:10.0000] <Ms2ger>
http://lists.w3.org/Archives/Public/www-style/2012Nov/0305.html

[05:30:12.0000] <darobin>
annevk: well, simpler implementation, and can be plugged into whatever code/libs you have that get PE

[05:30:33.0000] <annevk>
I can assure you the implementation would be more complex

[05:31:00.0000] <darobin>
fair enough, I admit I'm just skimming

[05:41:29.0000] <SimonSapin>
annevk: do you mean everything should just be living standards without stabilization status?

[05:41:40.0000] <annevk>
SimonSapin: yes

[05:41:52.0000] <annevk>
SimonSapin: wait, not necessarily without that

[05:42:24.0000] <annevk>
SimonSapin: having a little thingie on the side that says "this is new, there might be dragons" seems like a good idea

[05:43:32.0000] <SimonSapin>
yes, we need some way to signal "this is mostly done, go ahead and expose it to the web" vs. "WIP, weâre gonna change it completely a few more times"

[05:46:06.0000] <Ms2ger>
SimonSapin, and in the CSSWG, that's LC? ;)

[05:46:55.0000] <SimonSapin>
Ms2ger: Renaming Period? Yes indeed

[05:49:44.0000] <jgraham>
You don't need a way to signal that

[05:49:48.0000] <jgraham>
Really

[05:49:54.0000] <jgraham>
At least not to authors

[05:50:08.0000] <SimonSapin>
I meant to implementors

[05:50:16.0000] <jgraham>
To authors "done" is "implemented in a browser I care about"

[05:50:37.0000] <jgraham>
Implementors are in the group and should theoretically have a clue

[05:50:51.0000] <jgraham>
Although there is evidence that isn't the case

[05:51:15.0000] <SimonSapin>
Iâve been implementing WeasyPrint for 1.5 year before joining the group

[05:51:42.0000] <jgraham>
That's not very long :)

[05:51:47.0000] <SimonSapin>
that I could is the point of having specs, IMO

[05:52:15.0000] <jgraham>
Also, I guess it doens't have the same lock-in potential as others implementing half baked things

[05:53:27.0000] <jgraham>
The point of specs is to make interoperability possible.

[05:53:50.0000] <jgraham>
As a new implemnentor you are very unlikely to be chasing the bleeding edge

[05:54:11.0000] <jgraham>
Once you are chasing the bleeding edge you should be actively involved with the standards body

[05:54:28.0000] <jgraham>
(I don't think that having stability markers is a bad thing btw)

[05:54:38.0000] <jgraham>
(indeed, I have advocated them)

[05:54:54.0000] <jgraham>
(but it is important to be aware of who the target market for them is)

[05:55:37.0000] <jgraham>
(another target market is evangelists)

[05:56:00.0000] <jgraham>
(they might be less willing to promote the heck out of things marked unstable)

[05:56:04.0000] <jgraham>
(although)

[05:56:16.0000] <jgraham>
(probably again if implementors ship they will promote)

[05:56:50.0000] <darobin>
the target for stability markers in a spec is really implementers

[05:57:04.0000] <darobin>
they're the only ones I've ever heard serious, motivated requests on this from

[05:58:07.0000] <darobin>
jgraham: "Once you are chasing the bleeding edge you should be actively involved with the standards body"

[05:58:21.0000] <darobin>
but how do you know that you're chasing the bleeding edge if you don't have stability markers? :)

[05:58:45.0000] <darobin>
and in fact I think that new implementers are likely to be chasing the bleeding edge in one way or another

[05:58:58.0000] <darobin>
because it's more likely that they're taking the spec to some new place it wasn't going before

[05:59:30.0000] <darobin>
e.g. I reckon WeasyPrint has some bleeding edge stuff compared to what browsers support for instance for printing :)

[06:00:47.0000] <jgraham>
You are chasing the bleeding edge if you are implementing stuff that some others (in your area) don't have.

[06:01:04.0000] <jgraham>
e.g. Prince might be a more reasonable comparison for WeasyPrint

[06:01:43.0000] <darobin>
the whole of print is bleeding edge when it comes to the web

[06:01:49.0000] <SimonSapin>
WeasyPrint is not really bleeding edge (yet) compared to PrinceXML or others, but the spec *was* behind all of them

[06:08:06.0000] <gsnedders>
jgraham: On the other hand, if you're implementing the document loading from HTML5, even in a brand new browsers, you're bleeding edge :)

[06:16:30.0000] <marcosc>
annevk: if I have a JSON file encoded in ISO-8859-1, and I need to parse an URL from it (e.g., {"path": "Â¢?dfsa"}) using the URL spec. Would I say, "let url be the result of parsing /path/ with the encoding override set to ISO-8859-1"?

[06:17:27.0000] <Ms2ger>
I would say "All manifest files MUST use UTF-8."

[06:17:46.0000] <marcosc>
Ms2ger: B2G don't :(

[06:17:52.0000] <marcosc>
Just tested it

[06:17:57.0000] <Ms2ger>
Boo, mounir

[06:17:58.0000] <marcosc>
I can force it

[06:18:00.0000] <annevk>
marcosc: if this is not a legacy JSON format, doesn't sound like a good idea

[06:18:14.0000] <marcosc>
ok, I wanted to check.

[06:18:32.0000] <marcosc>
I can say that if the JSON is not UTF-8, then cook the user's device

[06:18:34.0000] <annevk>
marcosc: from what I heard Mozilla is okay with changes due to standardization

[06:18:50.0000] <annevk>
marcosc: more like burn the server ;)

[06:18:52.0000] <mounir>
yes we are ;)

[06:19:08.0000] <annevk>
there you go, mounir, voice of Mozilla

[06:19:12.0000] <marcosc>
ok, cook the server and the device it is

[06:35:32.0000] <annevk>
marcosc: btw, even in the case you'd support legacy encodings, you'd still not use that with the URL parser

[06:36:12.0000] <marcosc>
annevk: nah, it's better I just ban non-UTF-8

[06:36:14.0000] <annevk>
marcosc: e.g. CSS is an example of that

[06:36:48.0000] <jgraham>
Wasn't JSON utf8-by-definition?

[06:36:56.0000] <marcosc>
jgraham: yes, it was

[06:37:01.0000] <marcosc>
or is

[06:37:12.0000] <annevk>
marcosc: if you have url(Ã©) in CSS and the file is encoded using some iso-blah it will encode that character per utf-8 for fetching

[06:37:37.0000] <annevk>
marcosc: which is the default behavior of the URL parser; just HTML needs some weird stuff

[06:38:06.0000] <marcosc>
annevk: ok. If possible, it would be great if you can add a few examples in the URL spec around this stuff.

[06:39:00.0000] <annevk>
marcosc: well it does say "The associated query encoding is a legacy concept only relevant for HTML." so I guess I'd play back the question first and ask why you thought it was relevant :)

[06:39:52.0000] <marcosc>
annevk: I thought it was relevant because when I read the start of the algorithm I say that I could provide an optional encoding.

[06:40:39.0000] <marcosc>
And I was checking what FxOS would do with ISO-8859-1 JSON files, even though they were non conforming

[06:41:08.0000] <marcosc>
(and then I started testing URLs, and thought I would ask because I was unsure)

[06:42:23.0000] <marcosc>
annevk: note that I was not using the API itself, I was invoking the parsing algorithm from another spec.

[06:42:59.0000] <annevk>
I see

[06:43:34.0000] <annevk>
Okay, I will expand the note under URL parser

[06:43:38.0000] <annevk>
thanks marcosc

[06:44:11.0000] <annevk>
marcosc: I hear you about examples btw, but for that I'd like to see this spec become implemented and accepted

[06:44:31.0000] <annevk>
for some reason I find good examples hard to do

[06:45:01.0000] <marcosc>
annevk: understood. I'm happy to throw you some questions that could turn into examples.

[06:46:05.0000] <marcosc>
Like: given the string "  ?abc=123#123   " what comes out the other end of the parsing algorithm?

[06:46:18.0000] <marcosc>
it's pretty simple, but useful.

[06:46:31.0000] <marcosc>
like, the white space gets trimmed,

[06:46:36.0000] <marcosc>
etc.

[06:46:43.0000] <annevk>
marcosc: so is it Marcos CÃ¡ceres  or Marcos Caceres?

[06:46:52.0000] <annevk>
marcosc: you're not being consistent :p

[06:47:32.0000] <SimonSapin>
marcosc: isnât whitespace in a[href] trimmed by HTML before the URL is parsed? Or does URL trim it too?

[06:47:32.0000] <marcosc>
heh, true. Should standardise that... It used to be hard to do accents on computers, now it's not too bad

[06:48:05.0000] <marcosc>
SimonSapin: I'm just talking about http://url.spec.whatwg.org/#parsing right now

[06:48:11.0000] <annevk>
SimonSapin: URL trims it

[06:48:12.0000] <marcosc>
SimonSapin: just generically, I mean

[06:48:50.0000] <annevk>
SimonSapin: I guess we could move that requirement to <a>, CSS url(), etc. but that seems less optimal somehow, but maybe more clean?

[06:49:14.0000] <annevk>
marcosc: so you prefer with the accent?

[06:49:28.0000] <marcosc>
yep

[06:49:31.0000] <annevk>
thanks

[06:49:43.0000] <SimonSapin>
CSS already trims whitespace for unquoted url() or for attr(foo url), but itâs fine if URL does it too

[06:49:46.0000] <annevk>
marcosc: a bug with a list of such questions would be excellent btw

[06:50:00.0000] <SimonSapin>
maybe better, even

[06:50:21.0000] <marcosc>
annevk, ok, no probs.

[06:50:25.0000] <annevk>
SimonSapin: I guess the only problem might be if whitespace is not an agreed upon concept

[06:50:39.0000] <annevk>
SimonSapin: I haven't really checked that

[06:50:50.0000] <marcosc>
annevk: I'll file it

[06:50:55.0000] <annevk>
ta

[06:51:01.0000] <marcosc>
Will add more to the comments as new questions come up

[06:53:13.0000] <annevk>
marcosc: http://url.spec.whatwg.org/#concept-url-parser has a better note now

[06:53:31.0000] <SimonSapin>
annevk: http://www.w3.org/TR/CSS21/syndata.html#whitespace \t\n\r\f and the space

[06:54:02.0000] <annevk>
is \f U+000D?

[06:54:09.0000] <SimonSapin>
btw, "white space" or "whitespace"?

[06:54:27.0000] <annevk>
I'm standardizing all my specs on whitespace

[06:54:52.0000] <annevk>
as over time in English contractions originally written with a space, will then get a hyphen, and then lose the hyphen

[06:55:12.0000] <annevk>
and I don't really want to play that game so I'll just move to where it ends up

[06:55:19.0000] <SimonSapin>
U+0020 space, U+0009 \t, U+000A \n, U+000D \r, U+000C \f

[06:55:28.0000] <annevk>
okay so that matches URL

[06:55:34.0000] <annevk>
and Encoding

[06:55:35.0000] <annevk>
http://encoding.spec.whatwg.org/#ascii-whitespace

[06:55:40.0000] <SimonSapin>
good

[06:55:52.0000] <annevk>
yeah :)

[06:56:07.0000] <annevk>
I believe there might have been some difference at one point between HTML and CSS, but maybe hsivonen got that fixed

[06:56:25.0000] <annevk>
prolly U+000C

[06:59:07.0000] <jre>
Hi there. Has anybody seen IE 10's FormData produce a broken request body, such as in http://jira.icesoft.org/browse/MOBI-567?focusedCommentId=43372&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-43372 ?

[07:02:09.0000] <zewt>
("white space" sounds like a wall with nothing on it)

[07:03:47.0000] <annevk>
(the annoying thing of course is that CSS has white-space)

[07:04:18.0000] <annevk>
(I tried preventing this problem with fullscreen, but not everyone is happy with that because browsers had prefixed versions of fullScreen)

[07:04:40.0000] <annevk>
(filename is another one, but apparently that is exposed as filename though not always written as such)

[07:05:20.0000] <annevk>
maybe at some point this stuff becomes important enough for a dictionary, but for now looking at prior art seems sufficient

[07:05:44.0000] <SimonSapin>
css21 has white space, css3-syntax white space, css3-value has both, I donât see white-space

[07:06:03.0000] <annevk>
SimonSapin: I meant the property

[07:06:08.0000] <SimonSapin>
css3-syntax whitespace, even

[07:06:09.0000] <SimonSapin>
oh ok

[07:50:35.0000] <annevk>
http://wiki.whatwg.org/wiki/Fetch#Fetch am I missing anything?

[07:50:45.0000] <annevk>
oh yes, Cookies at least

[07:56:46.0000] <Ms2ger>
Set-Cookie2

[07:57:16.0000] <annevk>
Ms2ger: what year is this?

[07:57:25.0000] <Ms2ger>
1997

[07:58:04.0000] <Ms2ger>
Oh, it was actually defined in 2000

[08:04:07.0000] <annevk>
Meh, nobody ever has opinions on the stuff I write

[08:04:47.0000] <annevk>
Although maybe that's preferable over the army of pitchforks that's chasing Hixie

[08:05:18.0000] <darobin>
/me has some pitchforks he could use if you want

[08:05:27.0000] <darobin>
annevk: will you be in London on 15/03?

[08:05:51.0000] <annevk>
My magic eight ball says almost definitely

[08:05:57.0000] <jgraham>
Is there a party?

[08:05:58.0000] <darobin>
I'm thinking of maybe hitting a pub there for my birthday

[08:06:05.0000] <jgraham>
Oh there is!

[08:06:10.0000] <Ms2ger>
jgraham, with pitchforks

[08:06:43.0000] <annevk>
darobin: sounds like I'll be buying you a beer

[08:06:49.0000] <darobin>
annevk: great!

[08:06:57.0000] <darobin>
then I'll buy you beer too :)

[08:07:11.0000] <annevk>
find a few more people and Saturday is going to be terrible

[08:07:12.0000] <jgraham>
/me wonders why darobin would rather drink in England than France

[08:07:29.0000] <darobin>
I do have a few more people

[08:07:31.0000] <wilhelm>
/me wonders this too.

[08:07:40.0000] <darobin>
jgraham: well, I'll happen to be in London, so that's a factor

[08:07:48.0000] <Ms2ger>
Getting completely wasted is more acceptable in England

[08:08:17.0000] <darobin>
also, London has beer, whereas France only has bubbly piss

[08:08:34.0000] <jgraham>
But it's bubbly *French* piss

[08:08:49.0000] <darobin>
actually it's mostly bubbly Alsacian piss

[08:08:49.0000] <jgraham>
And therefore you are supposed to think it probably the finest piss in the world

[08:09:02.0000] <darobin>
there's a derogation for Alsace

[08:09:06.0000] <darobin>
it's not really France

[08:09:18.0000] <darobin>
we just took it from the Germans to piss them off

[08:09:35.0000] <darobin>
and they can't even make proper German beer

[08:09:36.0000] <annevk>
more Cookies, less piss please

[08:09:39.0000] <wilhelm>
It did piss them off pretty bad. Well done.

[08:09:41.0000] <darobin>
:)

[08:13:06.0000] <annevk>
wilhelm: nice

[08:19:10.0000] <dglazkov>
good morning, Whatwg!

[08:21:20.0000] <annevk>
good afternoon dglazkov, just missed tea time

[08:21:45.0000] <dglazkov>
tea time sounds excellent.

[08:22:12.0000] <dglazkov>
unless it's an euphemism for something horrible

[08:22:43.0000] <dglazkov>
like "we tea-timed slightlyoff so bad last night, I don't think he's coming back to #whatwg anymore"

[08:23:00.0000] <wilhelm>
darobin: Those fake French have some of the best rieslings, though. I approve.

[08:23:35.0000] <darobin>
wilhelm: indeed

[08:23:42.0000] <darobin>
got to have something to save them :)

[08:23:54.0000] <annevk>
dglazkov: I'm not sure I want to know what that might mean

[08:24:06.0000] <dglazkov>
:D

[08:27:22.0000] <jgraham>
Pretty sure it involves scones though

[08:28:06.0000] <Ms2ger>
"scones", eh

[08:33:49.0000] <karlcow>
hmm going through the bugs of the week and seeing so many bugs opened/commented/reopened by Fred Andrews

[08:34:10.0000] <karlcow>
with the same message "The architecture of the CDM is not defined."

[08:34:39.0000] <karlcow>
not sure what to do with it

[08:34:47.0000] <Ms2ger>
Ignore

[08:34:52.0000] <Ms2ger>
That works for me

[08:34:54.0000] <karlcow>
ok thanks Ms2ger

[08:35:03.0000] <annevk>
Is the architecture defined?

[08:35:13.0000] <Ms2ger>
/me is good at ignoring

[08:35:20.0000] <karlcow>
/me is in the process of writing OpenWeb weekly

[08:36:53.0000] <annevk>
dglazkov: Event.path cannot be exposed differently to Shadow DOM and normal DOM I think

[08:37:06.0000] <dglazkov>
why not? Event.target is

[08:37:07.0000] <annevk>
dglazkov: well, I guess if you change it like target is changed maybe?

[08:37:11.0000] <annevk>
hmm

[08:37:12.0000] <dglazkov>
right

[08:37:42.0000] <dglazkov>
we should probably make it a copy, like Event.getPath() or something

[08:38:24.0000] <annevk>
it can be path, since the list will not change anyway

[08:38:55.0000] <dglazkov>
oh right

[08:39:31.0000] <annevk>
well that's not quite right

[08:39:40.0000] <annevk>
it will change if you dispatch the same object again

[08:40:06.0000] <karlcow>
darobin: ? "<p>Three constructor is provided for creating" â https://github.com/w3c/html/commit/8b5904d3aa72da763905165df7d4b5d8bf268c93

[08:41:53.0000] <annevk>
dglazkov: I'm sort of thinking we should move about half of Shadow DOM into DOM

[08:42:06.0000] <dglazkov>
annevk: let's do it

[08:42:09.0000] <dglazkov>
/me grabs a shovel

[08:42:27.0000] <dglazkov>
annevk: do you want to VC to discuss a plan of action?

[08:43:02.0000] <annevk>
I guess we should maybe wait a little longer for implementors to catch up?

[08:43:16.0000] <dglazkov>
who cares about implementors

[08:43:18.0000] <annevk>
And settle on some of the important questions. Like DocumentFragment versus Element

[08:43:18.0000] <dglazkov>
screw them

[08:43:21.0000] <annevk>
heh

[08:43:53.0000] <annevk>
And then TabAtkins should patch CSS to not just take into account the DOM tree, but also its shadows

[08:43:58.0000] <darobin>
karlcow: huwah?

[08:44:06.0000] <darobin>
oh, yeah thanks

[08:46:20.0000] <karlcow>
with luv from the cow

[08:47:34.0000] <annevk>
dglazkov: Sorry for sending mixed messages. I'll let you fix the bugs first and then once I have a coherent plan and everything is a bit further along we can discuss it.

[08:47:53.0000] <dglazkov>
annevk: <phelpsmom>

[08:47:59.0000] <annevk>
dglazkov: Lets stick to coordinated monkeypatching for now.

[08:48:09.0000] <annevk>
dglazkov: I do not know what that means, but I'll assume it's friendly :)

[08:49:43.0000] <dglazkov>
annevk: http://wac.450f.edgecastcdn.net/80450F/thefw.com/files/2012/08/michael-phelps-mom-cheers-200-meter-butterfly-silver-medal.gif

[08:50:18.0000] <annevk>
dglazkov: I guess that's kinda appropriate :-)

[08:50:27.0000] <dglazkov>
:D

[08:52:13.0000] <karlcow>
That's hypnotic

[08:54:56.0000] <dglazkov>
karlcow: no, that's hypnotic: http://2.bp.blogspot.com/-oMnwAgkQl1Y/TZMGsa0PQ3I/AAAAAAAAAX4/8dVNBTkcQlI/s1600/2.gif

[08:55:42.0000] <karlcow>
is it supposed to move? It doesn't at all with me. Not sure why.

[08:56:17.0000] <dglazkov>
maybe you're not susceptible to hypnotism. Superspy qualified.

[08:56:33.0000] <karlcow>
I doubtâ¦ :p

[08:56:48.0000] <karlcow>
I guess I'm too much into the illusion

[09:36:03.0000] <JonathanNeal>
hello

[09:36:51.0000] <karlcow>
TabAtkins: http://lists.w3.org/Archives/Public/www-style/2013Feb/0322.html

[09:37:06.0000] <karlcow>
"Please review and let me know if anything looks wrong."

[09:37:22.0000] <karlcow>
this document? http://dev.w3.org/csswg/css3-syntax/

[09:41:44.0000] <annevk>
oh look

[09:41:54.0000] <annevk>
I published another REC, thanks to Lachy this time around

[09:41:57.0000] <annevk>
http://www.w3.org/TR/2013/REC-selectors-api-20130221/

[09:42:14.0000] <annevk>
affiliation is kinda messed up, but who cares

[09:42:36.0000] <Lachy>
Oh, oops. I forgot to fix that.

[09:42:38.0000] <Lachy>
nevermind.

[09:42:48.0000] <Lachy>
It's wrong for me too now.

[09:43:01.0000] <annevk>
Lachy: you can ask the W3C to edit in place

[09:43:08.0000] <tantek>
time for a PER!

[09:43:12.0000] <annevk>
Lachy: especially if your email address changed that might be a good idea

[09:43:24.0000] <Lachy>
my email address hasn't changed

[09:43:30.0000] <annevk>
/me is happy for the email on that particular topic to go to /dev/null

[09:43:33.0000] <Lachy>
since I was never using my @opera.com address

[09:43:45.0000] <annevk>
Lachy: smart man

[09:47:09.0000] <Lachy>
I have to start looking for a new job soon. Though, it's been fun working on  my own stuff for the past few weeks.

[09:49:13.0000] <Ms2ger>
We're hiring ;)

[09:49:30.0000] <mounir>
Ms2ger: you?

[09:49:39.0000] <Ms2ger>
Ms2ger Inc.

[09:50:08.0000] <MikeSmith>
annevk, Lachy - I can edit the affiliation info on that right now if you want

[09:50:27.0000] <Lachy>
Ms2ger, what company?

[09:50:36.0000] <Lachy>
MikeSmith, thanks.

[09:50:36.0000] <Ms2ger>
MoCo

[09:50:42.0000] <Lachy>
what is MoCo?

[09:50:53.0000] <Ms2ger>
Or probably Mozilla Denmark if you're staying in Europe

[09:51:15.0000] <Lachy>
yeah, I'd like to stay in Norway for a little longer

[09:51:41.0000] <annevk>
MikeSmith: that'd be great http://dom.spec.whatwg.org/ has my preferred affiliation

[09:51:44.0000] <Lachy>
only to stay with my girlfriend, who isn't ready to move just yet.

[09:52:21.0000] <Lachy>
MikeSmith, I guess you can set my affiliation to none or invited expert or whatever is conventional.

[09:52:39.0000] <annevk>
prolly just deleting the company is easiest in that case

[09:54:38.0000] <karlcow>
:)

[09:54:48.0000] <Lachy>
Ms2ger, I guess it's worth a shot trying at Mozilla. Who should I send my resume to?

[09:55:24.0000] <tantek>
Lachy - I think you know a few of us ;)

[09:55:24.0000] <Ms2ger>
I believe annevk has better access to that information now :)

[09:55:25.0000] <karlcow>
https://careers.mozilla.org/ but â¦ fear the HR wall

[09:55:56.0000] <tantek>
Mozilla employees typically put "Mozilla" as their affiliation on specs, e.g.: http://dev.w3.org/csswg/css3-transitions/

[09:56:42.0000] <MikeSmith>
Lachy, annevk done

[09:56:45.0000] <annevk>
tantek: for WHATWG DOM it was Mozilla Foundation for a while until I changed it to just Mozilla

[09:56:54.0000] <karlcow>
/me would be happy if there was no name, no company at all, but that's unlikely :)

[09:57:08.0000] <Lachy>
thanks MikeSmith

[09:57:19.0000] <annevk>
ta MikeSmith

[09:57:50.0000] <annevk>
karlcow: maybe, making someone responsible can work reasonably well

[09:58:21.0000] <karlcow>
annevk: I don't understand. âº try again

[09:58:39.0000] <annevk>
karlcow: it's not important

[09:58:51.0000] <karlcow>
/me likes the irony of Opera being on top of the spec and suddenly disappearing http://www.w3.org/TR/2013/REC-selectors-api-20130221/

[09:58:57.0000] <karlcow>
for the Rec spec

[09:59:52.0000] <karlcow>
New whizbang marketing opportunity for companies, hire the employee just before Rec for the Press Releases :)

[10:16:30.0000] <SimonSapin>
TabAtkins: you can not set the type flag of hash tokens after the fact by just looking at the value, because at that point you donât know if an hypen or a digit was escaped in the source or not

[10:18:58.0000] <SimonSapin>
TabAtkins: #\- and #\31 are valid ID selectors

[10:20:47.0000] <SimonSapin>
TabAtkins: also, a note saying that this is for ID selectors would help

[10:26:10.0000] <MikeSmith>
wow now there's a console.table ?

[10:26:13.0000] <annevk>
Are we banning #x#y in CSS yet?

[10:26:17.0000] <annevk>
SimonSapin: ^

[10:26:25.0000] <MikeSmith>
https://plus.google.com/115133653231679625609/posts/PmTC5wwJVEc

[10:26:42.0000] <Ms2ger>
MikeSmith, spec it! :)

[10:27:13.0000] <karlcow>
ahah

[10:28:15.0000] <karlcow>
approaching little by little what iPython Notebook does

[10:29:41.0000] <MikeSmith>
Ms2ger: I see that honza already specced it

[10:29:43.0000] <MikeSmith>
http://www.softwareishard.com/blog/firebug/tabular-logs-in-firebug/

[10:30:00.0000] <MikeSmith>
we should just start making specs by linking to blog postings

[10:31:00.0000] <SimonSapin>
annevk: sorry, what?

[10:31:15.0000] <SimonSapin>
thatâs a valid selector which never matches anything â¦ but whatâs your point?

[10:31:16.0000] <SimonSapin>
the above is about the syntax of IDÂ selectors being more restrictive than that of HASH tokens â¦ and the difference is only detectable at tokenization time

[10:31:19.0000] <zewt>
doesn't look like a good api, loses the log priority entirely

[10:31:36.0000] <annevk>
SimonSapin: #b#c is valid in CSS

[10:31:42.0000] <karlcow>
+1 to what MikeSmith with a minor change. Link to the web.archive.org of the web posting

[10:31:55.0000] <SimonSapin>
annevk: yes â¦ what about it?

[10:32:06.0000] <annevk>
SimonSapin: I think it should be invalid

[10:32:20.0000] <SimonSapin>
why?

[10:32:23.0000] <zewt>
better off with console.log(new LogTable(x)) or something like that

[10:32:43.0000] <GPHemsley>
/me still thinks there should be support for multiple IDs on a single element

[10:33:04.0000] <annevk>
SimonSapin: because it can never match an element

[10:33:57.0000] <annevk>
SimonSapin: there used to be a theoretical possibility, but that's gone now

[10:36:43.0000] <SimonSapin>
should :nth-child(odd):nth-child(even)  *>:root or :not(*|*) all be invalid too?

[10:37:16.0000] <zewt>
anne: doesn't mean it should be illegal

[10:38:25.0000] <zewt>
something  validators might point out, sure, but not illegal syntactically

[10:38:44.0000] <SimonSapin>
[foo=a][foo=b]  :last-child~* :empty>*

[10:38:49.0000] <SimonSapin>
we have tons of these

[10:38:58.0000] <MikeSmith>
zewt: console.O(log n)

[10:38:59.0000] <SimonSapin>
I dontât thing they should be invalid

[10:39:26.0000] <jamesr>
.tobe:not(.tobe)

[10:39:27.0000] <zewt>
mike: what? heb

[10:40:01.0000] <zewt>
(my crappy android keyboard is showing)

[10:41:12.0000] <SimonSapin>
annevk: ^

[10:47:10.0000] <karlcow>
200 mails to goâ¦

[10:49:09.0000] <annevk>
SimonSapin: those are not unique

[10:49:40.0000] <annevk>
SimonSapin: so it's different from #

[10:50:29.0000] <annevk>
but then again, #test is not like getElementById("test") ...

[10:51:05.0000] <SimonSapin>
annevk: isnât #a#b the same as [id=a][id=b] ?

[10:51:24.0000] <annevk>
SimonSapin: theoretically not

[10:51:24.0000] <Ms2ger>
Different specificity

[10:51:43.0000] <annevk>
SimonSapin: these days it might be, but before DTD assigned IDs and xml:id could also be matched by #test

[10:51:46.0000] <SimonSapin>
"same" as in matches the same elements

[10:52:55.0000] <GPHemsley>
TabAtkins: Runaway element? http://www.w3.org/TR/2013/WD-css-counter-styles-3-20130221/#override-system

[10:54:23.0000] <SimonSapin>
anyway, my point is that there are many selectors that can never match anything, and that doesnât mean they should be invalid

[10:57:59.0000] <zewt>
and making things that can't match anything invalid doesn't help anyone (they don't have to be invalid for validators/linters to point them out)

[11:06:39.0000] <karlcow>
is the "Beacon API" what I think it is?

[11:07:11.0000] <karlcow>
http://lists.w3.org/Archives/Public/public-webapps/2013JanMar/0391.html

[11:07:45.0000] <karlcow>
Yes it isâ¦ "Frankly, analytics donât have many good options"

[11:08:08.0000] <karlcow>
I wonder if MikeSmith can spare a bit of his bottle.

[11:23:25.0000] <GPHemsley>
TabAtkins: I'm not sure that 'width' should include the value of 'negative' in its calculations...

[11:26:17.0000] <GPHemsley>
TabAtkins: Also, the 'fallback' explanation is somewhat contradictory with regard to loops. A loop can't be both good and bad.

[11:26:26.0000] <GPHemsley>
/me hopes it's OK that I'm writing all this in here.

[11:28:14.0000] <GPHemsley>
TabAtkins: It would be good to explain in a note what kind of systems do not use a negative sign.

[11:30:19.0000] <GPHemsley>
TabAtkins: Â§3.8, Â¶2: "counter style" should be "â@counter-styleâ"

[11:31:28.0000] <GPHemsley>
TabAtkins: Similarly, the following paragraph needs a link.


2013-02-22
[16:06:27.0000] <Garbee>
There is this bug in the webplatform.org bugzilla project that looks like it belongs in the WHATWG project somewhere. Location is: https://www.w3.org/Bugs/Public/show_bug.cgi?id=18702

[16:16:12.0000] <Hixie>
weird

[16:16:31.0000] <Hixie>
oh, i see, somebody just vandalised the bug

[16:17:02.0000] <Hixie>
MikeSmith: looks like you want to ban kaissar11âgc and undo anything they did, based on what they did in https://www.w3.org/Bugs/Public/show_bug.cgi?id=18702

[16:17:35.0000] <MikeSmith>
Hixie: will do

[22:40:25.0000] <MikeSmith>
Hixie: btw the above is the only bug I could find which that guy touched

[22:40:49.0000] <MikeSmith>
but anyway I have banned the address now

[23:00:50.0000] <Hixie>
MikeSmith: k

[23:00:58.0000] <Hixie>
MikeSmith: thanks

[23:14:29.0000] <MikeSmith>
Hixie: I wonder if it might make sense to change the name of the "Offline Web applications" section

[23:14:57.0000] <MikeSmith>
to "Cached Web applications" or "Locally installed Web applications" or something

[23:15:22.0000] <MikeSmith>
I think part of the confusion people have with it is because of that title

[23:15:23.0000] <Hixie>
why?

[23:15:34.0000] <MikeSmith>
I think the body of the spec makes it clear

[23:15:57.0000] <MikeSmith>
why is because they think the app gets served from the cache only when the user is offline

[23:16:13.0000] <Hixie>
what people want is "Cached Web applications", but it's not what that section provides, what it provides is applications that act as if they are always offline

[23:16:21.0000] <MikeSmith>
not that it's the Web app itself that is actually offline

[23:16:44.0000] <Hixie>
maybe i should rename it to "always-offline web applications"? but that's not quite true either

[23:16:55.0000] <MikeSmith>
well then someting that conveys 2applications that act as if  they are always offline

[23:16:58.0000] <MikeSmith>
oops

[23:17:35.0000] <MikeSmith>
something that conveys "applications that act as if they are always offline" would be better

[23:17:48.0000] <MikeSmith>
I think the title as-is is ambiguous

[23:18:24.0000] <MikeSmith>
"Offline-by-default Web applications"

[23:18:35.0000] <MikeSmith>
though that's not really accurate either

[23:18:41.0000] <Hixie>
yeah, i dunno

[23:19:15.0000] <Hixie>
if you think of a title that's accurate and better than what we have now, file a bug. so far, i think what we have now is the least inaccurate, though i entirely agree that it's misleading.

[23:19:22.0000] <Hixie>
i think the real problem isn't the title, though

[23:19:22.0000] <MikeSmith>
ok well I'll make a bug for it. Maybe somebody else will see it a suggest soemthing celve.

[23:19:33.0000] <Hixie>
i think the real problem is just that the spec doesn't solve people's problems

[23:19:39.0000] <MikeSmith>
yep

[23:19:41.0000] <Hixie>
they see the title, think that it's what they want

[23:19:45.0000] <Hixie>
and then get confused

[23:19:54.0000] <Hixie>
so when we fix that, this title will become less of an issue

[23:20:05.0000] <MikeSmith>
ok

[23:20:32.0000] <MikeSmith>
yeah I guess just changing the title would be papering over the mismatch

[23:25:06.0000] <MikeSmith>
"The implementors of Appendix C failed to implement it correctly"... I wonder who he has in mind as the "implementors" of Appendix C

[00:18:49.0000] <hsivonen>
MikeSmith: who is talking about implementors of Appendix C?

[00:19:15.0000] <hsivonen>
does one implement Appendix C by publishing documents that adhere to it?

[00:19:26.0000] <MikeSmith>
hsivonen: http://lists.w3.org/Archives/Public/www-tag/2013Feb/0113.html

[00:19:33.0000] <MikeSmith>
hsivonen: no clue

[00:19:47.0000] <MikeSmith>
but that would be my only guess too

[00:20:19.0000] <MikeSmith>
which isn't implementing it of course

[00:20:27.0000] <MikeSmith>
it's just conforming to it

[00:24:26.0000] <tantek>
I think "implementing" in that context referred to browsers.

[00:28:38.0000] <othermaciej>
the context seems to refer to browsers

[00:28:54.0000] <othermaciej>
but the things he says implementors "should" do are what they in fact didâ¦

[00:29:53.0000] <othermaciej>
or is he complaining about Mozilla's early implementation which did something else when the intent was less clear?

[01:32:07.0000] <darobin>
it's Friday, let's have fun with the TAG!

[01:32:08.0000] <darobin>
http://lists.w3.org/Archives/Public/www-tag/2013Feb/0114.html

[01:33:52.0000] <jgraham>
Or "Play TAG" as the kids say

[01:42:31.0000] <MikeSmith>
hah

[01:42:52.0000] <MikeSmith>
Playground TAGtics

[01:43:17.0000] <MikeSmith>
darobin is becoming a TAG-baiter

[01:45:57.0000] <darobin>
hehehe

[01:48:44.0000] <annevk>
the new TAG is certainly supportive of that

[01:48:58.0000] <annevk>
certainly is what we've been doing

[01:51:30.0000] <MikeSmith>
annevk: I think that's called "self abuse"

[01:51:52.0000] <darobin>
aka onannevk

[01:52:13.0000] <MikeSmith>
and I'm pretty sure the previous TAGs pioneered architectural "self abuse"

[01:54:24.0000] <MikeSmith>
http://goo.gl/kKwqi

[01:55:57.0000] <jgraham>
MikeSmith: You suggesting getting the TAG to the dictionary as an example of "self-abuse"?

[01:57:20.0000] <MikeSmith>
*snort*

[01:57:24.0000] <MikeSmith>
not me, no

[01:57:43.0000] <MikeSmith>
gotta like that way somebody thinks who would suggest that

[02:00:00.0000] <MikeSmith>
the current TAG so far has not delivered enough humor in return for the votes I bought

[02:00:36.0000] <MikeSmith>
I paid for humor. I paid for "The Standards Suck Team Joins the TAG"

[02:01:01.0000] <jgraham>
Oh man

[02:01:09.0000] <jgraham>
Why are we not making a movie of this

[02:01:23.0000] <jgraham>
"Standards Suck does TAG"

[02:02:10.0000] <MikeSmith>
someday the chronicle of this journey will be written

[02:02:22.0000] <jgraham>
Hmm

[02:02:28.0000] <jgraham>
"chronicle"

[02:02:43.0000] <jgraham>
sounds like Peter Jackson will turn it into a 9 hour snooze-fest

[02:03:25.0000] <MikeSmith>
nah this will probably be written on a roll of toilet paper like Kerouac did

[02:03:51.0000] <MikeSmith>
and I will play the part of William S Burroughs

[02:05:01.0000] <MikeSmith>
like he was in Drugstore Cowboy

[02:06:25.0000] <jgraham>
I like it better already

[02:33:21.0000] <Stevef_>
MikeSmtih: play the part? you live it

[02:34:07.0000] <jgraham>
Stevef_: It's method acting

[02:34:16.0000] <Stevef_>
:-)

[02:34:20.0000] <jgraham>
The real MikeSmith is a stay-at-home sober type

[02:34:49.0000] <Stevef_>
jgarham: LOL right

[02:35:12.0000] <Stevef_>
me/ my spelling

[02:35:21.0000] <Stevef_>
/me my spelling

[02:35:48.0000] <Stevef_>
/me and ability to use IRC commands is woeful

[02:38:37.0000] <jgraham>
Me complaining about other people's spelling would be like Pollock berating Klein for being too slapdash

[02:46:22.0000] <annevk>
You guys make me feel bad for pointing out typos in specs

[02:47:55.0000] <jgraham>
Typos in specs != typos on IRC

[02:49:18.0000] <hsivonen>
In the last two weeks or so, I reviewed a patch that only added punctuation to comments in code.

[02:50:03.0000] <Stevef_>
"Typos in specs != typos on IRC" agreed

[02:52:15.0000] <smaug____>
annevk: so any reason why to not add the default values to EventInit ?

[02:52:32.0000] <smaug____>
just for readability

[02:56:47.0000] <annevk>
your argument was different

[02:58:08.0000] <annevk>
smaug____: what's the point for readability?

[02:58:22.0000] <annevk>
hmm

[02:58:28.0000] <annevk>
sorry, is that the only point now?

[02:58:53.0000] <annevk>
I intentionally did not do that because people think they define the defaults and think they don't have to define the defaults therefore

[02:58:54.0000] <hsivonen>
I always become unhappy when I see how localized builds of Firefox make the charset menu even worse than it is by default in en-US

[02:59:29.0000] <Stevef_>
annevk: which part of london you living in?

[02:59:36.0000] <annevk>
We should really not leave that in the control of l10n.

[02:59:48.0000] <annevk>
Stevef_: W1

[02:59:51.0000] <hsivonen>
annevk: I intend to file bugs to that effect after lunch.

[03:00:26.0000] <Stevef_>
annevk: city boy

[03:00:32.0000] <annevk>
hsivonen: I'd vote for them if I felt that'd have an effect, but please cc me to back you up in case there's pushback :-)

[03:00:44.0000] <hsivonen>
annevk: ok

[03:00:45.0000] <annevk>
Stevef_: quite :-)

[03:01:35.0000] <Stevef_>
annevk: I'll wait for an invite to Mozilla HQ ;-)

[03:03:04.0000] <annevk>
Stevef_: you can drop by pretty much anytime :-) there's a sort of open space to work from too, it's semi-restricted but since you know me it should be okay

[03:03:51.0000] <Stevef_>
annevk: cool, will ping you sometime when i can bring myself to venure out of the burbs

[03:03:57.0000] <annevk>
heh

[03:04:45.0000] <Stevef_>
i find that the only time i leave kingston is to go overseas, very rarely go to london proper

[03:05:28.0000] <Stevef_>
glad I don't need to, commuting is crap

[03:09:54.0000] <annevk>
I'm not a big fan of the tube either, glad to walk

[03:11:16.0000] <Stevef_>
it's OK if its off peak for a joy ride, but having to use it sucks

[03:14:56.0000] <gsnedders>
annevk: W1? Rich boy. :P

[03:18:05.0000] <SimonSapin>
annevk: are you within walking distance of the Mozilla office?

[03:18:30.0000] <smaug____>
annevk: "don't have to define the defaults therefore" ?

[03:18:35.0000] <smaug____>
what you mean with that

[03:20:29.0000] <gsnedders>
SimonSapin: If he lives in W1, then yeah, he will be.

[03:20:38.0000] <SimonSapin>
nice

[03:21:17.0000] <gsnedders>
On a related note, why the hell do I know about London postcodes?

[03:22:04.0000] <annevk>
smaug____: new people designing events might think they don't need to define the default values via prose

[03:22:09.0000] <annevk>
SimonSapin: yup

[03:23:19.0000] <smaug____>
annevk: well, new events shouldn't use createEvent anyway

[03:23:35.0000] <annevk>
smaug____: is that implemented?

[03:24:09.0000] <smaug____>
"that"?

[03:24:25.0000] <annevk>
smaug____: do browsers not support new events via createEvent?

[03:24:48.0000] <smaug____>
at least in Gecko we don't put new events to the list of stuff you can create using createEvent

[03:25:34.0000] <gsnedders>
On an unrelated note: Anybody got any ideas for a 200 hour final year project for uni next year that they think might interest me?

[03:25:45.0000] <smaug____>
though, there are plenty of un-spec

[03:25:53.0000] <smaug____>
'ed events in createEvent..

[03:26:04.0000] <annevk>
hmm

[03:26:16.0000] <Ms2ger>
gsnedders, a HTML parser in Haskell

[03:26:21.0000] <smaug____>
hmm, or not so many after all

[03:26:35.0000] <gsnedders>
Ms2ger: To what end?

[03:26:40.0000] <annevk>
http://dom.spec.whatwg.org/#dom-document-createevent has a very short list

[03:26:46.0000] <annevk>
might be too short

[03:26:53.0000] <Ms2ger>
gsnedders, a degree, I presume ;)

[03:27:08.0000] <smaug____>
all the old stuff is there in gecko

[03:27:15.0000] <gsnedders>
Ms2ger: But what makes it interesting from an academic POV, I meant?

[03:27:16.0000] <Ms2ger>
If you want something useful... One in C?

[03:27:17.0000] <smaug____>
I mean stuff before event constructors

[03:27:17.0000] <annevk>
smaug____: pointer?

[03:27:19.0000] <Ms2ger>
Oh

[03:27:25.0000] <Ms2ger>
Haskell ;)

[03:27:32.0000] <gsnedders>
XD

[03:28:35.0000] <smaug____>
annevk: http://mxr.mozilla.org/mozilla-central/source/content/events/src/nsEventDispatcher.cpp?rev=3b05660cbdd2&mark=821-910#819

[03:29:14.0000] <jgraham>
I thought we decided Coq was the right implementation language for an academic parser

[03:29:32.0000] <Ms2ger>
/me has never heard of Coq

[03:29:44.0000] <Ms2ger>
I think I'd like to keep it that way :)

[03:30:00.0000] <gsnedders>
Theorem prover that can export Haskell/ML impls of the functions.

[03:30:14.0000] <annevk>
gsnedders: IDNA?

[03:30:28.0000] <gsnedders>
annevk: Certainly academic enough. :P

[03:30:58.0000] <jgraham>
Also, if annevk was really a city boy he would live in EC1

[03:31:22.0000] <gsnedders>
Pedant.

[03:31:46.0000] <annevk>
jgraham: so close

[03:31:48.0000] <gsnedders>
Wait, EC1 isn't the city quite, is it?

[03:32:49.0000] <jgraham>
Wikipedia says it is

[03:32:53.0000] <jgraham>
I think

[03:32:57.0000] <gsnedders>
Yeah, it is.

[03:33:10.0000] <gsnedders>
Okay. I thought it was too far west looking it up, but obviously not.

[03:34:19.0000] <annevk>
smaug____: so I think I'm moderately convinced it's a good idea to go down this route

[03:34:40.0000] <annevk>
smaug____: any chance we're going to trim that list in the future?

[03:35:08.0000] <smaug____>
not very likely

[03:35:33.0000] <smaug____>
there are some gecko specific events there which ofc should be removed

[03:38:40.0000] <Stevef_>
gsnedders: didn't mean city in the bowler hat sense...

[03:38:53.0000] <Ms2ger>
And mutation events :)

[03:40:10.0000] <gsnedders>
Things I love: waiting for parcels to appear.

[03:41:53.0000] <annevk>
WebKit has a long list too http://trac.webkit.org/browser/trunk/Source/WebCore/dom/EventNames.in

[03:42:10.0000] <annevk>
And their infrastructure seems geared towards making it ever longer

[03:42:30.0000] <jgraham>
gsnedders: If you calculate the probabilities, it is *highly* unlikely that parcels will just appear

[03:42:58.0000] <jgraham>
Even if you already have the parcel the other side of some energy barrier like, say, a wall

[03:43:01.0000] <gsnedders>
jgraham: When they were dispatched yesterday on next day delivery going to my flat?

[03:43:11.0000] <jgraham>
Quantum tunneling just isn't going to happen

[03:47:43.0000] <hsivonen>
annevk: https://mxr.mozilla.org/l10n-central/source/zh-CN/toolkit/chrome/global/intl.properties#54 does that look like a Web-compatible default or like political activism?

[03:47:58.0000] <hsivonen>
shouldn't that be gbk?

[03:48:53.0000] <hsivonen>
I'm unhappy that the HTML spec just parrots what happened to be in Mozilla's repos one day without checking if IE agrees

[03:48:56.0000] <annevk>
It has been argued we might be able to merge them, but until that is done I'd expect gbk to be more prevalent

[03:49:14.0000] <annevk>
Merge gbk and gb18030 that is

[03:49:54.0000] <hsivonen>
ok

[04:14:26.0000] <annevk>
smaug____: so we expect document.createEvent("customevent") to not be removable?

[04:16:19.0000] <annevk>
well yeah, if we have initCustomEvent we should have that too

[04:16:34.0000] <smaug____>
customevent has been there quite awhile

[04:17:32.0000] <smaug____>
and supporting createEvent for it doesn't make the platform that much worse

[04:19:27.0000] <smaug____>
but, I don't have any data about customevent usage

[04:31:59.0000] <annevk>
added it

[04:37:18.0000] <annevk>
https://lists.webkit.org/pipermail/webkit-dev/2013-February/023943.html o_O

[04:37:28.0000] <annevk>
That seems kinda weird

[05:00:46.0000] <hsivonen>
annevk: did you find the actual regulation? the spec links to a summary of the regulation

[05:01:33.0000] <hsivonen>
annevk: anyway, live TV in the U.S. traditionally uses captioning where text scrolls up when more text appears instead of the previous caption disappearing

[05:02:07.0000] <hsivonen>
annevk: and the regulation requires programming that has been shown on TV to retain the captions on the Web

[05:02:15.0000] <annevk>
hsivonen: I did not investigate. I merely find it odd it would not be in the proper draft.

[05:02:27.0000] <hsivonen>
annevk: unclear if the exact scrolling behavior needs to be retained per regulation

[05:02:44.0000] <hsivonen>
annevk: oh right

[05:02:53.0000] <annevk>
And that this coordination happens on webkit-dev rather than whatwg

[05:03:03.0000] <hsivonen>
yeah, that sucks

[05:03:18.0000] <annevk>
Or maybe the coordination also happened on the WebVTT list? I'm not on that...

[05:04:00.0000] <annevk>
http://lists.w3.org/Archives/Public/public-texttracks/2013Feb/ doesn't look like it

[05:05:28.0000] <annevk>
http://lists.w3.org/Archives/Public/public-texttracks/2012Dec/0000.html is where the discussion starts hsivonen if you're interested

[05:20:24.0000] <hsivonen>
annevk: thanks

[05:39:54.0000] <karlcow>
"due to several FCC regulations"â¦ but no links to these regulations

[05:40:17.0000] <karlcow>
maybe maciej knows

[05:41:37.0000] <Stevef_>
Karlcow: this may be helpful http://lists.w3.org/Archives/Public/public-texttracks/2012Dec/0066.html

[05:43:02.0000] <karlcow>
ah thanks Stevef_ that helps understanding

[05:43:09.0000] <karlcow>
was missing context

[06:08:31.0000] <hsivonen>
sigh. so many bugs to file about this encoding stuff

[06:09:22.0000] <hsivonen>
maybe I should suggest that changes to these prefs that affect the behavior of the HTML parser should need review from the HTML parser module owner (i.e. me)

[06:10:16.0000] <Ms2ger>
What's next, getting build system changes reviewed by build system peers? :)

[06:10:26.0000] <annevk>
hsivonen: yes you should

[06:14:31.0000] <jgraham>
Is this the point where I start the "if you used critic, it would automagically pick the right reviewers based on the file path" pitch?

[06:19:14.0000] <karlcow>
:)

[06:23:23.0000] <jgraham>
I wonder if there is money to be made marketing critic so it becomes popular, selling hosted critic installs, and eventually being bought by github. Or whether they would eventually just take advantage of the licesning and integrate it with github directly

[06:36:31.0000] <hsivonen>
annevk: OK. suggested

[06:38:24.0000] <marcosc_>
GPHemsley: any chance of a status update on MIME sniffing spec?

[06:38:35.0000] <marcosc_>
anything I can do to help?

[06:59:02.0000] <hsivonen>
/me finds https://bugzilla.mozilla.org/show_bug.cgi?id=536506

[07:32:34.0000] <sedovsek>
An odd question. Is it or would it be possible to perform some sort of automated UI test with the emphasis on visual appearance of our websites/apps?

[07:34:04.0000] <karlcow>
sedovsek: such as taking a screenshot to see if it's conform to a reference image?

[07:35:40.0000] <karlcow>
you can use selenium Web driver to take screenshots http://la-grange.net/2012/05/04/webdriver-kiwi-talk/?full#screencode

[07:35:50.0000] <karlcow>
then make a diff of the image

[07:35:52.0000] <karlcow>
http://la-grange.net/2012/05/04/webdriver-kiwi-talk/?full#compare

[07:36:09.0000] <karlcow>
The idea is not from me but from a Mozilla bug report

[07:36:12.0000] <karlcow>
quite cool.

[07:37:09.0000] <sedovsek>
@karlcow: Thanks for pointing that out.

[07:37:28.0000] <sedovsek>
I think https://mogotest.com/ does something similar.

[07:38:11.0000] <sedovsek>
It's perhaps even cooler, because it does not take reference image, but it takes a website in predefined browser as a reference.

[07:38:37.0000] <sedovsek>
And afterwards compares rendered result from other browsers to this one.

[07:38:49.0000] <karlcow>
yup just a matter of what you define as a reference. :)

[07:39:48.0000] <sedovsek>
It's less work that way.

[07:41:49.0000] <hsivonen>
annevk: gotta love the rationale for adding stuff like autodetection support for GB18030: https://bugzilla.mozilla.org/show_bug.cgi?id=92806

[07:42:11.0000] <hsivonen>
it seems that most of the time, CJK detections were not added out of need but just for completeness

[07:42:34.0000] <hsivonen>
I wish I could go back in time and r-

[07:43:09.0000] <annevk>
:)

[07:45:13.0000] <annevk>
hsivonen: the name invites those kind of patches

[07:46:02.0000] <hsivonen>
annevk: yes.

[07:46:21.0000] <hsivonen>
annevk: the name invites to enable it, too

[07:46:34.0000] <hsivonen>
who wouldn't want universal detection, right?

[07:46:53.0000] <annevk>
uhuh

[07:46:53.0000] <gsnedders>
I know a guy who wouldn't. He's called Henri.

[07:47:05.0000] <annevk>
oh gsnedders

[07:47:25.0000] <annevk>
gsnedders: are you ever in London?

[07:47:29.0000] <gsnedders>
I know a girl, too. Called Anne. ;P

[07:47:39.0000] <gsnedders>
annevk: Occasionally. I was last month. :P

[07:48:00.0000] <annevk>
gsnedders: ah, but I wasn't; next time gimme a ping

[07:48:17.0000] <gsnedders>
annevk: I always intend to go to London more than I ever do.

[07:49:45.0000] <MikeSmith>
drunk or troll? https://twitter.com/anttikoivisto/status/304962127653912576 "The biggest problem with C++ is the lack of features."

[07:49:57.0000] <zewt>
heh

[07:58:48.0000] <hsivonen>
I wonder if the CJK combo detector has users

[08:21:08.0000] <MikeSmith>
so I guess the Chrome CDM-related stuff is at https://src.chromium.org/viewvc/chrome/trunk/src/webkit/media/crypto/ppapi/

[08:33:43.0000] <dglazkov>
good morning, Whatwg!

[08:35:26.0000] <tantek>
good morning dglazkov!

[08:48:56.0000] <annevk>
so all these web app stores?

[08:49:01.0000] <annevk>
are they global or local?

[08:52:02.0000] <marcosc>
annevk: I also got screwed when I moved from Australia to Norway to Portugal.

[08:52:12.0000] <marcosc>
It's pretty stupid

[08:52:20.0000] <marcosc>
I lost a whole bunch of software

[08:52:42.0000] <marcosc>
that was associated with the norwegian credit card I had

[08:52:56.0000] <annevk>
Does Android do this?

[08:53:08.0000] <marcosc>
I have not had any issue with Android

[08:53:26.0000] <annevk>
They don't care about copyright law or did they manage to solve it?

[08:53:29.0000] <gsnedders>
annevk: The Play Store is global, as are accounts, and you can always just grab the .apk

[08:53:53.0000] <gsnedders>
annevk: What they sell you depends on the locale of your address, I believe.

[08:55:22.0000] <annevk>
arv_: is there a WebKit bug that matches https://bugzilla.mozilla.org/show_bug.cgi?id=844134 ?

[08:55:32.0000] <annevk>
arv_: would be nice to link 'm

[08:55:36.0000] <annevk>
gsnedders: that sounds reasonable

[08:55:45.0000] <arv_>
annevk: https://bugs.webkit.org/show_bug.cgi?id=110510

[08:55:56.0000] <annevk>
thanks!

[08:56:44.0000] <annevk>
also, nice :)

[08:57:34.0000] <annevk>
that'll help remove some source comments from the spec

[09:10:29.0000] <GPHemsley>
Not sure if this is the right audience, but FYI: http://tools.ietf.org/html/draft-gellens-negotiating-human-language ("Negotiating Human Language Using SDP")

[09:15:21.0000] <TabAtkins>
GPHemsley: Yeah, runaway element. :/  This is why you shouldn't use unidirectional chars as pairs.

[09:16:19.0000] <TabAtkins>
GPHemsley: Follow the "negative-capable" link.  It defines which systems use a negative sign.

[09:18:27.0000] <TabAtkins>
GPHemsley: I'm somewhat inconsistent in whether I refer to the @counter-style rule or the "counter style" so defined, so shrug.  I should do a fixup in general.

[09:28:42.0000] <GPHemsley>
TabAtkins: Not sure what you mean re negative-capabale. I'm referring to this paragraph: " Not all âsystemâ values use a negative sign. In particular, a counter style is negative-capable is one where its âsystemâ value is âsymbolicâ, âalphabeticâ, ânumericâ, âadditiveâ, or âoverrideâ if the overridden counter style is itself negative-capable. If a counter style is not negative-capable, it ignores the nega

[09:28:43.0000] <GPHemsley>
tive sign when generating a counter representation. "

[09:35:12.0000] <GPHemsley>
marcosc: I haven't really been working on mimesniff, because there hasn't seemed to have been much interest, and I don't have any other motivation. I don't have any particular vested interest in it.

[09:50:02.0000] <MikeSmith>
CAQGBgoFD1YaHA4ZH1AIBwIOBR8ADhJWU1pcXlADBBgfBQoGDlYDCgUeDgcORgkIXVtcWVtQ

[09:51:44.0000] <TabAtkins>
GPHemsley: I don't understand what you mean, then.

[09:52:09.0000] <TabAtkins>
GPHemsley: Oh!  You want a non-normative example of what kind of systems aren't negative-capable?

[09:52:20.0000] <GPHemsley>
TabAtkins: Yup! :)

[09:52:45.0000] <TabAtkins>
Ah, sure, I can do that.  Email www-style to remind me?  I'm in the middle of Syntax edits right now, so I'll forget by next Monday.

[09:55:19.0000] <annevk>
mounir: https://github.com/slightlyoff/DOMFuture/

[09:57:36.0000] <marcosc>
GPHemsley: It's kinda central to some of the SysApps WG work (but not sure if that means much).

[09:58:12.0000] <marcosc>
I guess it's mostly a documentation task... or did you find some interop issues?

[09:58:51.0000] <GPHemsley>
marcosc: I didn't really get that far.

[09:59:14.0000] <marcosc>
I noticed a few times you were doing a bit of testing here an there

[09:59:41.0000] <marcosc>
GPHemsley: if I was to help with it, what would you advise me to do?

[09:59:50.0000] <marcosc>
(theoretically speaking(

[09:59:51.0000] <marcosc>
)

[09:59:54.0000] <GPHemsley>
Yeah, but it was all preliminary, and I didn't record the results (except insofar as I mentioned them in here).

[10:00:46.0000] <GPHemsley>
marcosc: I honestly don't know. It'd probably be more helpful to me if I knew what exactly your usecases were.

[10:01:25.0000] <GPHemsley>
Right now the spec is more what browsers should do, rather than what they actually do.

[10:01:42.0000] <marcosc>
In FxOS, they've defined an app:// URI that reads files from a zip achieve. The browser then user heuristics to try to work out what the mime type is for those files.

[10:02:06.0000] <marcosc>
(well, the URI does not read, but you know what I mean)

[10:02:34.0000] <marcosc>
So, I assume the heuristics are basically based on file extensions and magic numbers

[10:02:39.0000] <GPHemsley>
So, heuristics for detecting the type after they've been unzipped?

[10:02:45.0000] <marcosc>
exactly

[10:02:59.0000] <marcosc>
soo, given a file with no extension foo...

[10:03:00.0000] <GPHemsley>
Are there types that aren't on the list that should be?

[10:03:20.0000] <marcosc>
Probably not, I think the list covers the main types

[10:04:05.0000] <marcosc>
s/list/spec

[10:04:41.0000] <GPHemsley>
Alright, so, where is the spec lacking, then?

[10:05:08.0000] <marcosc>
GPHemsley: that's my initial question to you about status update? :)

[10:05:17.0000] <GPHemsley>
Oh. Heh.

[10:05:30.0000] <GPHemsley>
Yeah, I don't really know.

[10:05:30.0000] <marcosc>
and if you needed any help with finishing it :)

[10:05:47.0000] <GPHemsley>
The contents of the lists were mostly written by abarth, from a security standpoint.

[10:06:10.0000] <marcosc>
I know that either Mark Pilgrim or Mark Baker had written a reference implementation of it

[10:06:16.0000] <GPHemsley>
Oh?

[10:06:24.0000] <marcosc>
Yeah, this was a few years back

[10:06:28.0000] <GPHemsley>
Ah

[10:06:32.0000] <marcosc>
If it was Mark Pilgrim ... then we might be out of luck

[10:06:55.0000] <GPHemsley>
Yeah... I never heard about it, so I wouldn't know

[10:08:06.0000] <marcosc>
GPHemsley: no probs.

[10:08:18.0000] <marcosc>
/me reading https://bugzilla.mozilla.org/show_bug.cgi?id=808593

[10:10:47.0000] <marcosc>
GPHemsley: thanks for the info. This was useful :)

[10:11:03.0000] <GPHemsley>
I'm surprised, but glad. :)

[10:27:54.0000] <Hixie>
annevk: it's because i think it's a dumb feature and haven't specced it

[10:28:15.0000] <Hixie>
annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=20348

[10:31:01.0000] <annevk>
Hixie: what a mess

[10:31:12.0000] <Hixie>
not that much of a mess, at least they wrote a spec

[10:40:29.0000] <Hixie>
hmmm

[10:40:42.0000] <Hixie>
maybe TextTrackCue should be WebVTTCue

[10:42:49.0000] <annevk>
hsivonen: you still online?

[10:43:00.0000] <annevk>
hsivonen: can we support an encoding name that is not one of its labels?

[10:43:06.0000] <annevk>
hsivonen: going to assume yes for now

[10:43:49.0000] <annevk>
Hixie: so UAs are implementing multiple formats? :/

[10:44:13.0000] <Hixie>
are firefox and IE doing anything at all?

[10:45:02.0000] <annevk>
no idea what we are doing

[10:45:13.0000] <zewt>
basically it seems like they've given up arguing that roll-up captions are actually good, and are just falling back on "our lawyers say you have to do this and we expect you to take our word for it" (and I've since stopped paying attention)

[10:46:36.0000] <Hixie>
zewt: yeah but when i pointed out that the best way to handle the FCC requirements was just to implement CEA-708 natively, nessy's response was basically just "no, we want X" with no rationale at all

[10:46:38.0000] <annevk>
so I'm an idiot

[10:46:48.0000] <annevk>
I had these tools to process various bits for the Encoding Standard

[10:47:01.0000] <annevk>
and they are not in the repository, and with multiple computer switches, they're likely gone

[10:49:09.0000] <Hixie>
no backups?

[10:49:11.0000] <GPHemsley>
Hixie, annevk: AFAIK, Mozilla is working on WebVTT support

[10:50:09.0000] <annevk>
Hixie: I just found something from October 2012 from when I tried out Google Drive

[10:50:25.0000] <GPHemsley>
See https://bugzilla.mozilla.org/show_bug.cgi?id=629350 and dependencies

[10:50:35.0000] <annevk>
so teehee Google Drive

[10:50:44.0000] <annevk>
maybe I should enable that again

[10:50:53.0000] <annevk>
or just put more stuff on GH

[10:51:25.0000] <rillian>
GPHemsley: yep. It's actually a studen group implementing it right now

[10:51:43.0000] <GPHemsley>
rillian: Well, I knew that, but I didn't think it was relevant. ;)

[10:53:46.0000] <rillian>
Hixie: I still don't understand the rollup argument. Is it that we should provide native roll up so authors can use it to comply with these regulations, or do people believe the user agent itself is subject to the regulations?

[10:54:34.0000] <Hixie>
rillian: i think the argument is that the browsers are subject to the regulations in certain cases if they're made by US companies that also publish US made-for-TV content? i dunno.

[10:54:49.0000] <rillian>
aha

[10:54:53.0000] <rillian>
charming

[10:55:43.0000] <Hixie>
this is the kind of stuff we can expect to be entirely covered by if the ITU were to take over btw

[10:55:55.0000] <GPHemsley>
/me wonders if mimesniff stuff is still needed if it was only requested by Opera.

[10:56:10.0000] <Hixie>
GPHemsley: mimesniff is required by everyone as far as i can tell

[10:56:35.0000] <GPHemsley>
Hixie: Yeah, but there were a few things where only Opera spoke up and said "we want this"

[10:56:42.0000] <GPHemsley>
Hixie: But also, I was mostly joking

[10:56:43.0000] <Hixie>
ah, like what?

[10:56:45.0000] <Hixie>
heh ok

[10:57:01.0000] <GPHemsley>
certain context-specific sniffing algorithms

[10:57:10.0000] <Hixie>
/me gets bored of going through the e-mail from when he was afk and goes back to the sorting algorithm

[10:57:16.0000] <GPHemsley>
hah

[10:57:23.0000] <GPHemsley>
how much of your life have you devoted to that?

[10:57:46.0000] <Hixie>
e-mail, or the sorting algorithm? :-)

[10:57:52.0000] <Hixie>
too much, in both cases, i'm sure :-)

[10:57:56.0000] <GPHemsley>
oh, I know better to ask about e-mail ;)

[10:58:00.0000] <GPHemsley>
+than

[10:58:46.0000] <GPHemsley>
Hixie: What is your primary concern in https://www.w3.org/Bugs/Public/show_bug.cgi?id=20867 ? That the algorithm references the value it's defining?

[10:59:21.0000] <Hixie>
you're invoking the algorithm recursively

[10:59:32.0000] <Hixie>
due to the way you defined the variable you're using

[10:59:56.0000] <GPHemsley>
hmm

[11:00:01.0000] <Hixie>
e.g. in step 7, "If the sniffed media type is not undefined, abort these steps"

[11:00:04.0000] <GPHemsley>
right

[11:00:14.0000] <Hixie>
just use a local scratch variable

[11:00:24.0000] <Hixie>
and when you exit, return that variable

[11:00:25.0000] <GPHemsley>
I see what you're saying, but I'm not sure everyone would read it that way

[11:00:27.0000] <Hixie>
rather than using "is"

[11:00:31.0000] <GPHemsley>
but OK

[11:00:48.0000] <Hixie>
well, if you have a spec, and not everyone is reading it the same way, you have a bug, regardless :-)

[11:01:17.0000] <GPHemsley>
oh, I've got a bug alright ;)

[11:01:26.0000] <GPHemsley>
/me gets out his bug squasher

[11:01:31.0000] <Hixie>
i have had to change many sentences over the years because silly people didn't understand what i meant :-P

[11:02:13.0000] <Hixie>
a lot of the stiltedness of the spec prose comes from avoiding colloquially understood yet strictly ambiguous phrasing

[11:02:35.0000] <Hixie>
("or" is a big offender in this)

[11:03:08.0000] <GPHemsley>
ah, yeah

[11:03:12.0000] <GPHemsley>
had a bunch of that

[11:03:21.0000] <GPHemsley>
if x and y or x and z

[11:03:29.0000] <GPHemsley>
etc.

[11:04:01.0000] <Hixie>
also people start getting _really_ irked when my sentences span more than a few lines

[11:06:32.0000] <GPHemsley>
now I have to remember how to edit this spec

[11:06:46.0000] <GPHemsley>
(it's been ~3 months)

[11:09:58.0000] <GPHemsley>
Hixie: I keep meaning to ask you: What is the reason/motivation for allowing modern browsers to accept '--' in comments while having the validator reject them?

[11:11:30.0000] <Philip`>
GPHemsley: I think they're invalid because of a desire to minimise the differences between valid HTML and XML

[11:11:45.0000] <Philip`>
(and you can't have -- in a comment in XML)

[11:11:47.0000] <Hixie>
they're invalid because they can't be reserialised in xml mode

[11:11:58.0000] <GPHemsley>
I'm actually more concerned with the former part of the question ;)

[11:12:01.0000] <Hixie>
they're parsed for sanity/compat iirc

[11:12:25.0000] <Hixie>
we can't end the comment at the first "--0"

[11:12:28.0000] <Hixie>
er "--"

[11:12:41.0000] <Hixie>
and doing the full sgml thing like acid2 originally required was not popular with vendors

[11:12:44.0000] <GPHemsley>
I ask because, when I use Firefox 3.6, a lot of pages that would work in modern Firefox go completely blank, because they have -- in their comments

[11:12:45.0000] <Hixie>
to put it mildly

[11:12:51.0000] <Hixie>
/me is still in therapy from that

[11:13:08.0000] <Hixie>
yeah, firefox did that for acid2

[11:13:22.0000] <Hixie>
before i was... convinced to change it

[11:13:25.0000] <GPHemsley>
argh

[11:13:37.0000] <Hixie>
hey, in my defense, that's what sgml requires!

[11:13:38.0000] <GPHemsley>
so who should I be mad at, then/

[11:13:42.0000] <Hixie>
goldfarb

[11:13:58.0000] <Hixie>
http://en.wikipedia.org/wiki/Charles_Goldfarb

[11:14:18.0000] <Hixie>
but he's already paid the cost

[11:14:33.0000] <Hixie>
his two colleagues' names survive in "HTML", whereas he was dropped

[11:14:34.0000] <Hixie>
poor guy

[11:14:35.0000] <GPHemsley>
But I thought -- wasn't allowed in SGML comments?

[11:14:45.0000] <Hixie>
SGML comments are started by -- and ended by --

[11:14:57.0000] <Hixie>
but can only occur inside whatever a <!...> thing is called

[11:15:01.0000] <Hixie>
declaration or something

[11:15:02.0000] <GPHemsley>
heh

[11:15:09.0000] <GPHemsley>
but somebody convinced you to allow them

[11:15:13.0000] <GPHemsley>
I want to be mad at that person

[11:15:18.0000] <Hixie>
allow what?

[11:15:21.0000] <Hixie>
i'm confused

[11:15:33.0000] <GPHemsley>
<!-- this is a -- comment -->

[11:15:47.0000] <Hixie>
in sgml, <!-- this is a comment -- but this is not --> this is a comment --> this is not

[11:15:59.0000] <GPHemsley>
that would be fine in a modern browser, but would blank the rest of the page in Firefox 3.6

[11:16:10.0000] <GPHemsley>
so I want to know who to blame for it being allowed in a modern browser

[11:16:16.0000] <jamesr>
Firefox 3.6 is not a modern browser

[11:16:18.0000] <jamesr>
it's ancient

[11:16:23.0000] <GPHemsley>
thank you

[11:16:28.0000] <Hixie>
what is "it"

[11:16:32.0000] <Hixie>
that is "allowd"

[11:16:43.0000] <Hixie>
you mean why is "<!-- this is a comment -- but this is not --> this is a comment --> this is not" not the standard?

[11:16:51.0000] <GPHemsley>
"<!-- this is a -- comment -->"

[11:17:00.0000] <GPHemsley>
would not cause a problem for modern browsers

[11:17:14.0000] <Philip`>
Are you arguing that it *should* cause a problem?

[11:17:18.0000] <GPHemsley>
yes

[11:17:20.0000] <GPHemsley>
^_^

[11:17:22.0000] <Hixie>
ah

[11:17:30.0000] <Hixie>
then the person you should "blame" is "all the sane people in web standards"

[11:17:42.0000] <Hixie>
which is to say, not me

[11:17:45.0000] <GPHemsley>
ah, that's a long thing to yell while shaking my fist...

[11:17:59.0000] <Hixie>
but we're wrong to want what you want

[11:18:11.0000] <Hixie>
well, i was wrong. i'm not any more, as i have since seen the light

[11:18:21.0000] <wilhelm>
Things that cause problems are problematic, m'kay.

[11:18:23.0000] <Hixie>
though firefox 3.6 remains as the legacy of my mistake, apparently

[11:18:39.0000] <GPHemsley>
so, I can blame you after all?

[11:19:14.0000] <Philip`>
Supporting -- in comments makes it much easier to embed hidden ASCII art in web pages

[11:19:36.0000] <GPHemsley>
Philip`: Yeah, but it makes it much harder for me to browse the Web with Firefox 3.6 ;)

[11:19:44.0000] <GPHemsley>
I mean, come on, weigh the value

[11:19:56.0000] <Hixie>
GPHemsley: changing modern parsers wouldn't affect legacy content

[11:20:02.0000] <Hixie>
GPHemsley: so it wouldn't make that much difference

[11:20:12.0000] <Hixie>
GPHemsley: other than making it harder for anyone to browse the web

[11:20:22.0000] <GPHemsley>
Hixie: Ah, but it would. Because people would suddenly wonder why all their pages are blank.

[11:20:29.0000] <GPHemsley>
And then they'd fix them.

[11:20:49.0000] <GPHemsley>
As it stands, they have no idea what they're doing to me.

[11:20:54.0000] <Philip`>
GPHemsley: Firefox is open source, so you can fork the Firefox 3.6 code and glue hsivonen's parser onto it (surely that can't be too hard) and then it'll all work nicely

[11:21:07.0000] <GPHemsley>
Philip`: That sounds hard.

[11:21:14.0000] <Hixie>
GPHemsley: most pages are not maintained

[11:21:32.0000] <GPHemsley>
Hixie: It's the modern and maintained pages that I'm trying to read ;)

[11:21:46.0000] <Hixie>
then use a modern and maintained browser

[11:21:56.0000] <GPHemsley>
I can't, because I'm not using a modern and maintained OS

[11:22:14.0000] <Hixie>
then use a modern and maintained OS

[11:22:27.0000] <Philip`>
Hmm, actually I think the new parser was probably included in FF3.6 (but disabled by default)

[11:22:55.0000] <GPHemsley>
Hixie: That costs money and/or time and/or effort.

[11:23:08.0000] <GPHemsley>
Philip`: Hmm, i think you're right. But it was preffed off because it was buggy.

[11:23:14.0000] <Hixie>
GPHemsley: so does using 3.6 apparently

[11:23:29.0000] <GPHemsley>
Philip`: But I don't know what the bugs were or how important they were.

[11:23:35.0000] <GPHemsley>
Hixie: Meh.

[11:23:55.0000] <GPHemsley>
Philip`: But you raise a valid point. Might be worth a shot.

[11:24:15.0000] <Philip`>
GPHemsley: Just keep about:config open and toggle html5.enable whenever you find a page that doesn't look right

[11:24:21.0000] <Philip`>
since probably one of the parsers will work okay

[11:24:29.0000] <GPHemsley>
hmm...

[11:24:46.0000] <GPHemsley>
anyway... back to mimesniff

[11:25:04.0000] <Hixie>
i hope you're not doing anything you care about on that machine, since you're basically begging to get owned :-)

[11:25:20.0000] <Philip`>
Anyway, surely your old unmaintained OS will be supported by a reasonably recent version of Opera, so you could use that instead

[11:26:21.0000] <marcosc>
/me starts port scanning GPHemsley.... 

[11:26:40.0000] <marcosc>
... what do we have here... :)

[11:29:42.0000] <GPHemsley>
/me notes he is not currently on that computer. ;)

[11:41:11.0000] <GPHemsley>
Hixie: Fixed?

[11:41:45.0000] <Hixie>
reassign the bug to me if you want me to review it -- i gotta go

[11:43:15.0000] <GPHemsley>
Hixie: I just resolved it, so you should have bugmail

[11:44:21.0000] <WeirdAl>
!seen mano

[11:44:31.0000] <WeirdAl>
oh, wrong channel

[12:14:39.0000] <GPHemsley>
so... video/avi or video/x-msvideo ?

[12:15:00.0000] <GPHemsley>
it looks like WebKit aliases the former to the latter

[12:15:20.0000] <GPHemsley>
Gecko doesn't seem to support AVI

[12:17:55.0000] <GPHemsley>
...but only on Blackberry? o_0

[12:18:00.0000] <GPHemsley>
(WebKit)

[12:21:06.0000] <GPHemsley>
other options include video/msvideo and video/vnd.avi (from RFC 2361)

[12:21:21.0000] <GPHemsley>
naturally, I'm inclined to prefer video/avi, for simplicitiy

[12:21:36.0000] <GPHemsley>
but video/x-msvideo may be more common

[12:21:51.0000] <GPHemsley>
(not that it necessarily matters for mimesniff, as I believe the intent is for internal use only)

[12:21:54.0000] <jwalden>
random mostly-unimportant question motivated by https://twitter.com/dolske/status/304829324656275456 is iframe/frame/subdocument-support-in-general recursion prevention specified at all in HTML?  I didn't see anything in http://www.whatwg.org/specs/web-apps/current-work/multipage/history.html#navigate skimming, but it might have been elsewhere

[12:23:17.0000] <jwalden>
the Gecko rule is that recursion's cut off if the URL being navigated to, minus the hash-component, is the same as the URL of any parent window, fwiw

[12:25:09.0000] <jamesr>
jwalden, to prevent an iframe from iframing itself somehow?

[12:26:27.0000] <jwalden>
jamesr: yeah; for example http://johnathpointing.com/#johnathpointing.com/#bringinthecats.com/ fails because http://johnathpointing.com/ tries to haven an iframe with src="http://johnathpointing.com/#bringinthecats.com", but since that's the URL of the outer window, Gecko just keeps you at (presumably) about:blank

[12:26:35.0000] <jwalden>
s/haven/have/

[12:27:02.0000] <jamesr>
do you know why?

[12:27:18.0000] <jamesr>
and if other browsers have this? (in chrome i see what i think i expect which is bringinthecats.com on the inside

[12:27:42.0000] <jwalden>
jamesr: when you load a URL in Gecko, if any parent frame has the same URL ignoring the hash, it doesn't load; I have no idea what other browsers do at all

[12:27:48.0000] <jamesr>
yeah, but why?

[12:28:18.0000] <jwalden>
jamesr: so as not to get infinite regress, I'm guessing for easier debuggability than iterating to the max-nested-depth (whatever that is)

[12:28:30.0000] <jamesr>
chrome seems to stop at http://johnathpointing.com/#johnathpointing.com/#johnathpointing.com/#bringinthecats.com/

[12:29:23.0000] <jwalden>
we have #define MAX_SAME_URL_CONTENT_FRAMES 1 right now, so the same URL twice cuts off; sounds like for you it's 2 or 3

[12:30:40.0000] <jamesr>
sounds like something that should be tested + specced if browsers are behaving differently

[12:30:54.0000] <jwalden>
yeah

[12:31:30.0000] <jwalden>
the max-nested depth seems like something that should be impl-defined, perhaps with a minimum value, but same-URL recursion cutoff seems a bit different

[12:31:36.0000] <jwalden>
https://bugzilla.mozilla.org/show_bug.cgi?id=136580 seems to have been the original bug

[12:31:56.0000] <jwalden>
I imagine back in 2002 there wasn't much thought about specs for this :-)

[12:39:40.0000] <jgraham>
jwalden: Pretty sure I filed a bug about that at some point

[12:39:50.0000] <jwalden>
interesting

[12:39:51.0000] <jgraham>
I don't remember what happened to it though

[12:40:00.0000] <jgraham>
(spec bug that is)

[12:41:19.0000] <jwalden>
not obviously finding anything at https://www.w3.org/Bugs/Public/buglist.cgi?query_format=specific&order=relevance%20desc&bug_status=__all__&product=HTML%20WG&content=nest&list_id=5594

[12:42:14.0000] <jgraham>
Me neither

[12:42:22.0000] <jgraham>
But I remember filing the bug!

[12:42:34.0000] <jgraham>
(searching email isn't going to happen at the moment)

[12:43:34.0000] <jwalden>
no worries, this is curiosity-slash-thinking it should be specified at some point, no importance to it timewise

[12:45:46.0000] <jwalden>
for posterity, http://mxr.mozilla.org/mozilla-central/source/content/base/src/nsFrameLoader.cpp#1711 is Gecko's algorithm for checking for recursive loads, gist of which is you can't load a URL in a sub(sub-)*frame, and max frame nesting depth is 10

[14:40:22.0000] <GPHemsley>
FTW, added signatures for AVI, AIFF, MIDI, and basic audio (AU).

[15:04:12.0000] <jarek>
Hi

[15:04:37.0000] <jarek>
is this an identifier or a location: "url(#gradient1")

[15:04:59.0000] <Hixie>
depends on your definitions of "identifier" and "location"

[15:05:13.0000] <rillian>
is there a standard file format for CEA 708 we could just support?

[15:05:14.0000] <Hixie>
and on whether you're talking about the whole thing or just the bit between the ()s

[15:05:26.0000] <jarek>
Hixie: by identifier I mean URI, by location I mean URL

[15:05:29.0000] <Hixie>
rillian: that was my suggestion, yeah

[15:05:39.0000] <Hixie>
jarek: what's the difference?

[15:05:51.0000] <Hixie>
jarek: isn't URI just an old term for URL?

[15:06:05.0000] <Hixie>
jarek: (http://url.spec.whatwg.org/ being the new spec)

[15:06:24.0000] <jarek>
Hixie: ahh, interesting

[15:06:30.0000] <rillian>
Hixie: I was worried it was only defined in terms of broadcast video standards

[15:06:41.0000] <jarek>
Hixie: so e.g. SVG spec will be updated to use this new definition instead of IRI?

[15:07:03.0000] <Hixie>
rillian: it's bytes, as i understand it. i don't see why it wouldn't be possible to store the bytes in a file.

[15:07:10.0000] <Hixie>
jarek: dunno, you'd have to ask the svg guys

[15:07:19.0000] <jarek>
nope... it's still uses IRI... https://svgwg.org/svg2-draft/intro.html#TermIRIReference

[15:07:23.0000] <rillian>
Hixie: it doesn't rely on the frame boundaries for timing?

[15:07:37.0000] <Hixie>
rillian: if so, that would be problematic, certainly.

[15:07:48.0000] <rillian>
too bad it costs money to find out

[15:08:27.0000] <rillian>
region isn't over the line for me in terms of complexity, especially if we have to implement roll-up display anyway

[15:08:45.0000] <rillian>
but then I think the positioning attributes are more complexity that webvtt should have

[15:08:51.0000] <rillian>
*than

[15:41:50.0000] <Samuel_Roldan>
are there any articles on how to style web components? more precisely, (and if possible) styling the element itself not using classes or inline styles.


2013-02-23
[16:27:19.0000] <Yuhong>
 /msg NickServ identify asdasd

[16:27:26.0000] <odinho>
ouch

[16:27:32.0000] <Yuhong>
Already changed password.

[16:27:35.0000] <Yuhong>
 /msg NickServ identify asdfasdf

[16:27:45.0000] <odinho>
^_^

[16:27:53.0000] <Yuhong>
Changing password again

[16:28:13.0000] <odinho>
asdfasdfa maybe now?

[16:28:16.0000] <TabAtkins>
Yuhong: Those are the worst passwords ever.

[16:28:22.0000] <Yuhong>
I know.

[16:28:28.0000] <Yuhong>
Back on topic.

[16:28:36.0000] <TabAtkins>
We have no topic.

[16:28:46.0000] <TabAtkins>
Anyway, you should use a password like mine: "hunter2"

[16:28:52.0000] <odinho>
Think of all the scary hackers who want to identify as you on freenode! :O  Oh noes the drama.

[16:29:11.0000] <odinho>
TabAtkins: Oooh, minus one from hunter3, sneaky. Noone will ever try that one.

[16:29:24.0000] <Yuhong>
AFAIK, Gecko 1.9.2 eventually disabled the HTML5 parser completely.

[16:29:46.0000] <odinho>
TabAtkins: Hmm. But you were actually right. Always remembered it as 3, but it's 2...

[16:29:51.0000] <Hixie>
damnit tab, how do you always use the same password as me!

[16:30:14.0000] <odinho>
/me changes his password in light of the recent discovery

[16:30:52.0000] <Yuhong>
And actually Mozilla's SGML comment parsing dates before Acid2.

[16:31:57.0000] <Hixie>
yeah, but it doesn't predate my convincing them to do it :-(

[16:32:36.0000] <Yuhong>
And to be honest on IE7 and the BASE element, the Acid2 requiring SGML comment parsing wasn't that long ago.

[16:38:22.0000] <Yuhong>
I read that Arjun Ray was talking about it even in 1995 or so.

[17:08:04.0000] <Yuhong>
"it" referring to SGML comment parsing.

[17:55:58.0000] <zewt>
dear google: stop fuzzing "disassembly" to "repair"

[20:32:32.0000] <MikeSmith>
the time element introduced changes to the parsing algorithm?

[20:32:47.0000] <MikeSmith>
/me checks

[20:34:43.0000] <MikeSmith>
no

[21:11:13.0000] <Guest19025>
fyi, http://en.wikipedia.org/wiki/Microdata_%28HTML%29 was saying @itemref contained itemids.  I fixed that.  But it might be worth someone knowledgable checking the rest of the page.

[21:17:37.0000] <Guest19025>
/me now tries to find a schema for user curated lists of itemids.  Eg, Bob defines new item (itemid L9), which is a list of itemids, defined as his Item0, plus all iids in Alice's list L1, and Jim's L2, except for ItemBlech.

[00:22:03.0000] <rniwa>
annevk: is setAttribute supposed to be case insensitive when looking for an attribute?

[00:22:30.0000] <annevk>
rniwa: in HTML, yes

[00:22:43.0000] <annevk>
rniwa: http://dom.spec.whatwg.org/#dom-element-setattribute

[00:23:02.0000] <rniwa>
annevk: ah, now I see that we're lower-casing the name.

[00:23:25.0000] <rniwa>
annevk: but don't we want to preserve the case for non-HTML elements in a HTML document?

[00:23:49.0000] <annevk>
yes

[00:24:07.0000] <annevk>
that's why it checks the namespace of the context object

[00:24:13.0000] <rniwa>
ah i see.

[00:24:26.0000] <rniwa>
so we do this only in a html document for a html element.

[00:24:27.0000] <rniwa>
annevk: thanks :)

[00:24:52.0000] <annevk>
np

[01:41:37.0000] <gnarf>
So, I'm wondering if there are any proposals/discussions out there for a CSS query on selectors... I.E, i'm developing a widget, and I want to do something like @query( max-width: 12em ) > .my-widget { }  where the @query would match agains .my-widget's container

[01:52:13.0000] <SimonSapin>
gnarf: there was some requests for this on www-style but I donât see it happening: CSS a pretty strong "layering": selector matching happens well before layout

[01:52:38.0000] <SimonSapin>
and something like "the container is at most 12em" is very much layout

[01:53:10.0000] <SimonSapin>
which itself depends a lot on selector matching of course

[01:54:14.0000] <SimonSapin>
gnarf: but if you has a specific use case in mind, do send it to www-style, there might be another way to solve it

[01:55:04.0000] <SimonSapin>
but be sure to include why you want this and how you would use it

[02:09:51.0000] <gnarf>
SimonSapin: i was just inspired by toodmparker's talk on responsive and problems they faced with jquery-mobile

[02:10:17.0000] <gnarf>
because they don't know for instance if you are using a left sidebar, so media query is kinda impossible for a "library" to be using

[02:10:28.0000] <gnarf>
because its not at all about screen width, its about container width

[02:11:24.0000] <gnarf>
was just trying to come up with solutions and dig around in the Working Group drafts

[02:11:35.0000] <gnarf>
maybe constraint style stuff would improve this

[02:11:35.0000] <gnarf>
but

[02:11:39.0000] <gnarf>
hard to say

[02:12:10.0000] <gnarf>
SimonSapin: I'll write up more info about it and send to www-style

[02:13:11.0000] <SimonSapin>
gnarf: cool

[05:55:28.0000] <GPHemsley>
Two somewhat mutually exclusive questions:

[05:56:32.0000] <GPHemsley>
Would it be useful to spec that an 'Accept' header should list all supported image(/audio/video) formats except the common ones?

[05:56:44.0000] <GPHemsley>
(where common = listed in spec)

[05:57:16.0000] <GPHemsley>
Would it be useful to define a new 'Accept-Images'(/Audio/Video) header to do a similar job?

[06:09:08.0000] <wilhelm>
History shows that both clients and servers use headers all wrong. I'm not sure any of those headers will make any positive difference.

[06:12:22.0000] <wilhelm>
I've used the accept header once. To, thanks to some dogmatic ideal, serve XHTML instead of HTML to UAs that understand XML. That was a waste of time. And the header is mostly a waste of bytes.

[06:15:12.0000] <GPHemsley>
wilhelm: But why was it a waste of time? Because serving XHTML over HTML proved not to be important?

[06:15:27.0000] <GPHemsley>
(over = instead of)

[06:16:16.0000] <wilhelm>
It didn't solve any problems for anyone. It _created_ problems for my users when I screwed up instead.

[06:16:33.0000] <wilhelm>
And I did screw up. Repeately.

[06:19:24.0000] <GPHemsley>
But again, the source of these problems was what? The header? or XHTML?

[06:20:14.0000] <wilhelm>
I messed up the markup somehow, somewhere, and the draconic error handling kicked in on page load.

[06:21:13.0000] <wilhelm>
But my point is that this entire exercise was futile. It had no use.

[06:23:30.0000] <GPHemsley>
But the point here is that XHTML was the source of your problems, not the header.

[06:24:28.0000] <wilhelm>
That - and the unneccessay content negotiation. I've never used those headers anywhere, for anything.

[06:24:47.0000] <GPHemsley>
Yes, because they do not currently carry any useful information.

[06:25:15.0000] <wilhelm>
Well, except when I built browsers instead of web sites. Then I learned that the headers sent by servers cannot be trusted, and you have to guess instead.

[06:39:34.0000] <GPHemsley>
Anyone need XBM support? No? Good.

[06:47:11.0000] <Samuel_Roldan>
hi all, are there any articles on how to style web components? more precisely, (and if possible) styling the element itself not using classes or inline styles.

[06:50:25.0000] <Garbee>
Samuel_Roldan, Questions like that are probably best asked in a room like #web.

[06:50:51.0000] <Samuel_Roldan>
Garbee. Understood. Thank you for clearing that up.

[06:51:14.0000] <Garbee>
I'm just not sure if general help like that is done in this channel.

[06:51:53.0000] <Samuel_Roldan>
Right. I wasn't sure myself. Figured, web components is fairly new so there would be more info here.

[06:55:39.0000] <annevk>
Anything goes in this channel. Styling the host element is still under discussing I believe.

[07:58:45.0000] <Philip`>
GPHemsley: The source of the wilhelm's problem was serving different content to different users, which means there's much more chance to get things wrong and much less chance of noticing

[08:00:07.0000] <Philip`>
You'd get the same difficulties if you're trying to use request headers to choose between serving HTML vs XHTML, PNG vs SVG, WebM vs H264, or whatever

[08:23:53.0000] <gsnedders>
And in the case of XHTML vs HTML, you cannot be using any feature of XHTML that HTML does not have (i.e., namespaces) because you must keep an HTML compatible copy.

[08:45:23.0000] <GPHemsley>
Philip`: But XHTML vs. HTML is not the same as the other issues, because it involves serving the same document as two different things.

[08:45:39.0000] <GPHemsley>
Philip`: And the PNG vs. SVG issue is one which is already old/grandfathered/common/etc.

[08:46:11.0000] <GPHemsley>
Philip`: The question is more geared towards preventing the PNG vs. SVG issue from being repeated in the future.

[08:46:36.0000] <GPHemsley>
(I'm not sure what the status of WebM vs. H.264 is)

[11:37:05.0000] <SimonSapin>
TabAtkins: {} and ; should end all at-rules. Consider: data:text/html,<style>@media;body{background:green  data:text/html,<style>@import{}body{background:green

[12:31:28.0000] <Ms2ger>
Ah, Sweden

[12:31:29.0000] <Ms2ger>
http://imgur.com/iXrEYOd

[12:48:43.0000] <GPHemsley>
free aspirin?

[14:46:11.0000] <wilhelm>
GPHemsley: Actually, in the PNG-vs-SVG case, I've used a client-side script to replace the images in older browsers. That was less complex than header-based content negotiation.

[14:46:20.0000] <wilhelm>
Not very pretty, but it got the job done quickly.

[15:23:01.0000] <zewt>
more generally, things tend towards complexity in the client and having servers be as stupid and generic as possible; i imagine if file format negotiation was being designed today, it would be more like srcset


2013-02-24
[16:25:23.0000] <SimonSapin>
TabAtkins: can I assume a single "root box" generated by the root element?

[16:31:51.0000] <wilhelm>
zewt: I agree.

[16:57:54.0000] <gotwig>
hello folks

[16:58:20.0000] <gotwig>
What about a more hierachic selector model support for CSS 4?

[16:58:37.0000] <gotwig>
for relative paths..?

[16:59:08.0000] <gotwig>
and I also have a problem. Well, I do not know how to realize it properly but here is my idea:

[16:59:24.0000] <gotwig>
I want to make a dropdown slider window thing, that only happens when I press on a specific button

[16:59:44.0000] <gotwig>
now you can do that in CSS with different methods, but IMHO there is no method that fulfills the goal to 100%

[17:00:28.0000] <gotwig>
http://tympanus.net/Tutorials/CSSClickEvents/index.html

[17:01:13.0000] <gotwig>
I realized in my case the thing with a transform loop that is nearly endless

[17:01:40.0000] <gotwig>
the problem here is, you can't cancel that loop without a web scripting language. You can't cancel it with css, or apply other styles

[17:02:16.0000] <gotwig>
focus doesn't work for me as well, because when I focus a textbox in the div, the focus gets lost and I am back.

[17:02:30.0000] <gotwig>
target is ofcourse not a good idea as well.

[17:03:16.0000] <gotwig>
oh, there is the first one :X

[17:04:37.0000] <gotwig>
but with the first one, its hard to apply something like a blur out

[17:04:49.0000] <gotwig>
maybe I want to lose the focus when I leave that div

[17:05:04.0000] <gotwig>
oh, I can use the NOT right?

[02:55:16.0000] <Ms2ger>
annevk: please add a note to http://annevankesteren.nl/2011/06/creating-events that the old example doesn't work anymore

[03:03:46.0000] <Ms2ger>
annevk: and we should probably spec the untouchables from https://bugs.webkit.org/show_bug.cgi?id=68791#c14

[05:16:46.0000] <annevk>
Hopefully MutationEvent can be avoided...

[05:38:17.0000] <annevk>
Ms2ger: fixed the blog post

[05:45:32.0000] <gsnedders>
Firefox blocking third party cookies? Huh. Wonder if they'll manage to do so without breaking too much. (Opera 10.50 did â most of the broken sites were Russian.)

[05:47:14.0000] <annevk>
I wonder if for XMLHttpRequest we should stop distinguishing user terminates request from network error... It's such a small special case and browsers typically don't have UI for it.

[06:01:38.0000] <annevk>
CORS-enabled fetch in HTML seems buggy with respect to redirects

[06:02:12.0000] <annevk>
E.g. cross-origin to data URL...

[06:30:12.0000] <gotwig>
hey ho

[06:30:24.0000] <gotwig>
so you talk about html5+ ?

[06:30:43.0000] <Philip`>
Occasionally

[06:31:05.0000] <gotwig>
I would be pleased to get your help :X

[06:31:22.0000] <gotwig>
so... why is :after not a property, but  a pseudo class

[06:31:57.0000] <gotwig>
oh, eh, I can combine it with other pseudoclasses, right?

[06:32:00.0000] <gotwig>
I forgot that

[06:32:16.0000] <gotwig>
e.g p:hover:after{content: "Text" }

[06:32:18.0000] <gotwig>
right?

[06:33:36.0000] <gotwig>
^css

[06:34:39.0000] <Badreddin>
yes

[06:34:51.0000] <Badreddin>
I just did it

[06:35:28.0000] <gotwig>
meaning the text only appers after I do a hoverï¿½

[06:35:30.0000] <gotwig>
?

[06:35:38.0000] <Philip`>
gotwig: Do you mean why is it not "p:hover { after: "Text" }" or something?

[06:35:47.0000] <gotwig>
Philip`, yeah

[06:35:54.0000] <Badreddin>
yes, only on hover

[06:35:57.0000] <gotwig>
but I forgot that I can combine pseudo classes

[06:36:12.0000] <gotwig>
:after and :before are godlike features...

[06:36:16.0000] <Philip`>
I guess it's so you can do p:after { content: "Text"; color: #f0f; } etc, and apply arbitrary CSS to the aftered content

[06:37:29.0000] <gotwig>
works like ice cream ;D

[06:39:34.0000] <gotwig>
can you help me a bit here?

[06:39:35.0000] <gotwig>
http://bbm3h11bgo.bplaced.net/project/index.php

[06:39:58.0000] <gotwig>
I want that if the checkbox is checked, there should be Close before the label Test

[06:40:19.0000] <gotwig>
I used #toggle:checked:before label{

[06:40:19.0000] <gotwig>
	content: "Close";

[06:40:19.0000] <gotwig>
	color: white;

[06:40:20.0000] <gotwig>
} for that

[06:40:23.0000] <gotwig>
sry..

[06:41:12.0000] <Philip`>
I'd expect it to be more like "#toggle:checked label:before"

[06:41:26.0000] <gotwig>
oh yeah

[06:41:28.0000] <gotwig>
I try that

[06:42:17.0000] <gotwig>
but It still doesnt work :X

[06:43:30.0000] <gotwig>
label:before works as expected, btw

[06:44:04.0000] <ronaldmansveld>
it's because label isn't a decendant, but a sibling of #toggle

[06:44:14.0000] <ronaldmansveld>
so use the sibling selector between the two ;)

[06:44:47.0000] <annevk>
gotwig: ::before/::after are pseudo-elements

[06:44:56.0000] <ronaldmansveld>
#toggle:checked + label:before

[06:45:02.0000] <annevk>
gotwig: they are not -classes and can only appear at the end of a selector

[06:45:12.0000] <gotwig>
why is it a sibling

[06:45:25.0000] <gotwig>
its a seperate tag, under the other, not inherited or what ever :X

[06:45:41.0000] <ronaldmansveld>
because they are next to each other in the sourcecode, the label is'nt contained by the input

[06:45:47.0000] <annevk>
if elements have the same parent they are siblings

[06:45:55.0000] <ronaldmansveld>
thanks annevk

[06:45:57.0000] <gotwig>
Works

[06:46:02.0000] <gotwig>
thX

[06:46:07.0000] <ronaldmansveld>
that was indeed the definition I was looking for :P

[06:46:33.0000] <annevk>
gotwig: see http://dom.spec.whatwg.org/#trees for more platform tree terminology

[06:46:39.0000] <gotwig>
thx

[06:46:45.0000] <gotwig>
do you see what I want to do?

[06:46:55.0000] <gotwig>
I want to realize a click > panel come down thing

[06:47:07.0000] <annevk>
use <details>

[06:47:24.0000] <gotwig>
can I replace content with css?

[06:47:55.0000] <annevk>
I think it's styleable to some extent

[06:48:39.0000] <gotwig>
hm, what ever, for now its enough

[06:48:48.0000] <gotwig>
* gives me all context right?

[06:49:03.0000] <gotwig>
so I've got #toggle:checked * #toppanel

[06:49:27.0000] <gotwig>
but that does nothing for me :/ I want that I can influence #toppanel, after toggle is checked

[06:49:49.0000] <gotwig>
toppanel is a grandparent of toggle

[06:50:40.0000] <annevk>
not without scripting

[06:50:44.0000] <gotwig>
why

[06:50:50.0000] <gotwig>
because I can't access the parent?

[06:50:51.0000] <ronaldmansveld>
it's not (yet) possible to style (grand)parents with CSS

[06:50:53.0000] <annevk>
there's no parent selector

[06:51:04.0000] <gotwig>
but I tought * would give me control over the whole css tree?

[06:51:08.0000] <annevk>
no

[06:51:14.0000] <annevk>
* matches any element

[06:51:16.0000] <ronaldmansveld>
I believe CSS4 will introduce a parentselector though, but that will take some time to be available

[06:51:24.0000] <gotwig>
any element in context of the current level or what?

[06:51:33.0000] <annevk>
yes

[06:51:41.0000] <annevk>
:checked and *:checked are equivalent

[06:51:43.0000] <gotwig>
and I also read about that with css4, the parent thing

[06:51:49.0000] <annevk>
#test and *#test are too

[06:52:12.0000] <gotwig>
that is sad ;/

[06:52:17.0000] <gotwig>
I tought I could do it in css only

[06:52:34.0000] <gotwig>
but well, I add it maybe on the same div leve

[06:52:35.0000] <gotwig>
l

[06:52:46.0000] <gotwig>
and then positionate a bit

[06:53:12.0000] <gotwig>
labels for="" does not work on the whole tree, right?

[06:53:30.0000] <annevk>
it does

[06:53:50.0000] <ronaldmansveld>
it does, because the for will match on ID

[06:54:05.0000] <gotwig>
thats great

[06:54:10.0000] <gotwig>
so the user does not have to see the checkbox

[06:54:11.0000] <gotwig>
:>

[06:54:20.0000] <gotwig>
and I still can use good positions

[06:55:42.0000] <annevk>
it sounds like you're not solving this in entirely the right way, but have fun tinkering

[06:56:18.0000] <gotwig>
annevk, how would you do it in css only?

[06:56:32.0000] <gotwig>
I saw that here http://tympanus.net/Tutorials/CSSClickEvents/index.html

[06:58:04.0000] <gotwig>
do you can tell me on which level the checkbox has to be..?

[07:03:09.0000] <gotwig>
does that here work? https://github.com/Idered/cssParentSelector

[07:07:38.0000] <gotwig>
what about having to focuses?

[07:07:44.0000] <gotwig>
*two

[07:12:10.0000] <annevk>
gotwig: for general development questions #html5 is prolly a better channel

[07:12:39.0000] <gotwig>
ok.

[07:13:11.0000] <annevk>
it's fine to ask questions here, but people here are generally more focused on developing standards

[07:35:30.0000] <annevk>
Hmm, merging Fetch and CORS gets interesting...

[07:37:00.0000] <annevk>
The problem being that Fetch ignores origin completely. So e.g. if we want to support <script> but also allow the response to be annotated with CORS, we need to keep track of that during the request, but not fail if CORS fails...

[07:37:58.0000] <annevk>
But, that does not work if the request is something that CORS cannot do without preflight. But I guess we don't have such requests currently as that would kinda defeat the point of CORS.

[07:38:56.0000] <gotwig>
annevk, can you help me with CSS4?

[07:40:12.0000] <annevk>
gotwig: http://www.xanthir.com/b4Ko0

[07:40:43.0000] <annevk>
gotwig: I don't really know much about the checkbox tricks people employ these days I'm afraid

[07:40:51.0000] <gotwig>
 the following #toppanel! > #toggle:checked {  top:0px }   I use http://demo.idered.pl/jQuery.cssParentSelector/

[07:41:11.0000] <gotwig>
I want that if the user checks toggle, toppanel should change its property to top:0px

[07:42:16.0000] <gotwig>
is that in theory, the right code?

[07:42:34.0000] <annevk>
are you including the script as that page instructs?

[07:43:00.0000] <annevk>
I believe I told you before that without script there's no selecting of parents

[07:46:40.0000] <gotwig>
I included the script

[07:46:52.0000] <gotwig>
in the .html page, where I also load the css fie

[07:46:54.0000] <gotwig>
*file

[07:47:39.0000] <annevk>
and jQuery?

[07:47:51.0000] <gotwig>
yes

[07:48:14.0000] <annevk>
well should work then I suppose

[07:48:15.0000] <gotwig>
on the html page, not on the css file... I dont know if I have to load it somehow first, load it into an object or so..

[07:48:52.0000] <gotwig>
I grab the tests.

[07:48:53.0000] <annevk>
nah, looks like the script fetches external style sheets

[07:49:24.0000] <annevk>
which seems like a waste, but I guess that's webdev these days

[07:50:10.0000] <gotwig>
not good enough for a web browser implementation ;) is there more work being done on the subject thing, or on the parent selector?

[07:50:24.0000] <gotwig>
I heard that with a subject pseudo class thingy you would be able to do more then with just a parent selector

[07:53:01.0000] <annevk>
I don't follow www-style closely

[08:17:23.0000] <gotwig>
annevk, I got it working

[08:17:45.0000] <gotwig>
and I am very depressed now... important is not able to handle a property line that does not contain an ; as a charachter?

[08:20:53.0000] <annevk>
So I'm sketching out the Fetch logic in some pseudo-Python, and it's complicated :-(

[08:22:53.0000] <zewt>
wow, pretty terrible firefox console window bug: it's collapsing lines even when they aren't the last line

[08:23:24.0000] <zewt>
in fact, it's collapsing them when they aren't even on screen, so i thought something was fixed (because i didn't see the warning) wasn't

[08:26:02.0000] <GPHemsley>
/me recalls experiencing that a lot

[08:26:10.0000] <GPHemsley>
It also collapses any line that is identical

[08:26:19.0000] <GPHemsley>
which can be confusing

[08:27:01.0000] <zewt>
pretty broken behavior, imo (but anyway I'm back in Chrome which is much saner)

[08:28:37.0000] <zewt>
wow this parent selector code is ...

[08:28:45.0000] <zewt>
j && (parsed += ',');

[08:28:50.0000] <zewt>
i smell a perl programmer

[08:30:14.0000] <zewt>
also all variables var'd at the top of the block, somebody with some really bad habits left over from old C as well it seems

[08:33:04.0000] <zewt>
not sure this is a hack i'd ever want to actually use--don't think i trust anything that parses my CSS with a bunch of unreadable regexes and modifies them

[08:33:59.0000] <zewt>
/[\w\s\.\-\:\=\'\*\|\?\^\+\/\\;#%]+\}{1}/ \i\ \c\a\n\'\t\ \r\e\a\d\ \t\h\i\s

[08:38:44.0000] <zewt>
https://dvcs.w3.org/hg/d4e/raw-file/tip/source_respec.htm#keyboard-101 wow this is ... a bit insane

[08:43:18.0000] <annevk>
http://wiki.whatwg.org/wiki/Fetch#Python_pseudo-code for those interested

[08:43:25.0000] <annevk>
main bit is def fetch()

[08:44:22.0000] <zewt>
(whew, looks like none of those keyboard pictures are normative)

[08:44:26.0000] <annevk>
zewt: JavaScript hoists variables to the top of the block so you might as well declare them there

[08:44:52.0000] <zewt>
no way, that makes a mess of code

[08:45:17.0000] <zewt>
have a bunch of declarations at the top (where you have no idea what they're all for), and variables below where you can't tell if they're actually declared as locals (because it's all up top)

[08:48:03.0000] <zewt>
(i definitely wish strict had fixed that design screwup, though, and made vars local to the enclosing block)

[08:51:35.0000] <zewt>
annevk: file: is usually a hard error for xhr, but for things like <img> it just taints, right?

[08:52:05.0000] <annevk>
afaik file does not work cross-origin

[08:53:15.0000] <zewt>
<img src=foo.jpg> works for me on file:

[08:53:20.0000] <zewt>
(in chrome and FF)

[08:53:31.0000] <zewt>
it's just tainted so you can't use it with canvas, etc

[08:53:55.0000] <annevk>
that's same-origin though

[08:54:07.0000] <zewt>
all file: requests are cross-origin, right?

[08:54:11.0000] <zewt>
(each file is its own origin)

[08:55:13.0000] <zewt>
pretty sure that xhr would fail for the same url

[08:55:15.0000] <annevk>
ah yeah, maybe file requires a bit more special casing then

[08:55:53.0000] <annevk>
I think some browsers might scope origin to a directory, but I'm not sure

[08:57:10.0000] <gsnedders>
annevk: directory or its children is what WebKit does, IIRC

[08:57:33.0000] <zewt>
chrome is per-file i'm pretty sure

[08:57:40.0000] <annevk>
but anyway, file: is the least important

[08:57:49.0000] <zewt>
since they don't want a script in the root directory to be able to access the whole HDD

[08:57:51.0000] <annevk>
it's going to be by and large platform-dependent

[08:58:18.0000] <annevk>
and implementation

[08:58:22.0000] <gsnedders>
zewt: It's the document path, not the script path, that matters.

[08:58:37.0000] <zewt>
not following

[08:58:47.0000] <zewt>
(they're the same for an html file with a <script>)

[08:59:03.0000] <annevk>
just assume s/NetworkError()/ImplementationSpecific()/ for that line

[08:59:23.0000] <zewt>
also you can't access stuff even in the same directory, eg. so if you drop foo.html into ~ it can't read .wgetrc and read passwords or whatever

[09:01:40.0000] <gsnedders>
Some browser has that behaviour, at least :P

[09:02:37.0000] <zewt>
i don't think any current desktop browser allows xhr on file: at all

[09:02:59.0000] <zewt>
i think chrome used to, since I vaguely remember being irritated when it stopped working

[09:05:27.0000] <zewt>
annevk: file: aside, it looks like Chrome, at least, doesn't allow cross-origin xhr for anything at all except http/https

[09:06:07.0000] <zewt>
XMLHttpRequest cannot load file:///E:/temp/foo. Cross origin requests are only supported for HTTP.

[09:06:34.0000] <zewt>
it can't even load about:blank, which seems lame

[09:07:35.0000] <zewt>
or data:

[09:08:17.0000] <annevk>
zewt: that's a new feature

[09:08:36.0000] <annevk>
kinda

[09:08:41.0000] <zewt>
data: isn't exactly new, heh

[09:09:07.0000] <annevk>
well that you can load it through XHR was only added recently

[09:09:12.0000] <annevk>
this is adding about:blank

[09:09:17.0000] <annevk>
and about:unicorn

[10:00:07.0000] <annevk>
So if you do a request to a cross-origin URL for which the response is a redirect (that opts into CORS) to a data: URL. Should we expose the data: URL given that the redirected opted in?

[10:11:28.0000] <GPHemsley>
/me misses the 'Alternate "101" Keyboard Layout'

[10:24:40.0000] <GPHemsley>
I take it UI Events is a No Scroogling Zone?

[10:31:49.0000] <annevk>
What does that mean?

[10:49:35.0000] <GPHemsley>
annevk: It's a reference to commercials Outlook is running against Google in the U.S.

[10:49:40.0000] <GPHemsley>
annevk: You might not have seen them.

[10:50:30.0000] <GPHemsley>
annevk: http://www.computerworld.com/s/article/9236916/Microsoft_adopts_advocacy_tactics_to_scroogle_Google_in_attack_campaign

[11:04:11.0000] <annevk>
GPHemsley: https://dvcs.w3.org/hg/d4e/raw-file/tip/source_respec.htm is the location anyway

[12:12:16.0000] <SimonSapin>
So, @page inherits from the root, and viewport units are based on the page size. How do we resolve this without breaking some use cases? :root { font-size: 1vw } @pageÂ { width: 50em }

[12:17:05.0000] <GPHemsley>
SimonSapin: Does it make sense to use viewport lengths for font-size?

[12:17:16.0000] <GPHemsley>
/me gets dÃ©jÃ  vu.

[12:18:12.0000] <SimonSapin>
GPHemsley: some people like it, for slides: http://css-tricks.com/viewport-sized-typography/

[12:18:31.0000] <SimonSapin>
I think the use case is interesting

[12:18:39.0000] <SimonSapin>
but so is em for page margins

[12:18:49.0000] <SimonSapin>
and so is @page inheriting from root

[12:19:11.0000] <GPHemsley>
"For use with font-size, I guess it's one "letter" that takes on that size, but as we know, in non-mono-spaced fonts the width of a letter is rather arbitrary. I find you just need to tweak around with the values to get it how you want it. Which is basically what we do anyway, right?"

[12:19:51.0000] <GPHemsley>
That seems like it opens things up to be really complicated.

[12:20:38.0000] <SimonSapin>
on screen itâs fine, you know the size of the viewport before looking at anything CSS

[12:21:05.0000] <SimonSapin>
on Paged Media we defined the "viewport" to be the content area of the first page, â¦ whose size can be controlled in CSS

[12:21:32.0000] <SimonSapin>
and now we are so screwed :)

[12:21:36.0000] <GPHemsley>
and what happens with fallback fonts?

[12:21:51.0000] <GPHemsley>
IDK, it just seems like it'd be easier for everyone if they were just disallowed

[12:22:03.0000] <SimonSapin>
font-size is just a length, independant of the face

[12:23:07.0000] <GPHemsley>
and it also makes things impossible to read on really small windows

[12:23:35.0000] <GPHemsley>
sure, it fits in the frame, but to what end?

[12:24:22.0000] <GPHemsley>
http://css-tricks.com/examples/ViewportTypography/

[12:24:27.0000] <GPHemsley>
try resizing the window

[12:24:32.0000] <SimonSapin>
maybe we could have defined this differently, but that ship has sailed

[12:24:40.0000] <GPHemsley>
meh

[12:24:48.0000] <GPHemsley>
/me doesn't own a boat

[12:25:33.0000] <SimonSapin>
these issues are all valid, but the behavior is still well-defined

[12:25:47.0000] <SimonSapin>
not so on Paged Media :/

[12:27:23.0000] <GPHemsley>
So... why does @page inherit from :root?

[12:27:41.0000] <GPHemsley>
shouldn't @page = viewport?

[12:29:08.0000] <SimonSapin>
Page-margin boxes (that contain text) inherit from @page, so itâs useful to get the rootâs font "for free"

[12:29:41.0000] <SimonSapin>
Also 'direction' and 'writing-modes' affect some stuff of left vs. right page, again nice to get the values from the root

[12:32:17.0000] <GPHemsley>
Perhaps there needs to be some distinction between "paper" and "page"

[12:33:34.0000] <GPHemsley>
Or, actually

[12:34:11.0000] <GPHemsley>
shouldn't it be @page > :root > page-margin box ?

[12:34:44.0000] <SimonSapin>
there only one root element, but multiple page boxes

[12:35:06.0000] <GPHemsley>
there should be some distinction between what the physical page requirements are and what the contents of the page are

[12:35:14.0000] <SimonSapin>
when painting it somewhat like @page > { :root, page-margin boxes }

[12:35:35.0000] <SimonSapin>
but the cascade is :root element > @page > page-margin boxes

[12:36:06.0000] <SimonSapin>
maybe @page inheriting from the root is what weâll end up removing

[12:36:32.0000] <SimonSapin>
which, by the way, is well defined as long as you donât have viewport units

[12:36:36.0000] <GPHemsley>
Yeah, I think :root should inherit from @page

[12:36:50.0000] <GPHemsley>
which should not preclude page-margin boxes from inheriting from :root

[12:37:44.0000] <GPHemsley>
it's best to think about it physically, I think

[12:38:08.0000] <GPHemsley>
most fundamentally, you have a sheet of paper whose dimensions and properties do not change, no matter what is printed on it

[12:39:16.0000] <GPHemsley>
maybe page-margin boxes shouldn't inherit from :root

[12:39:17.0000] <SimonSapin>
page dimensions do change: table { page: wide } @page wide { size: A4 landscape } @page { size: A4 portrait /* default */ }

[12:39:23.0000] <SimonSapin>
different pages can have different styles

[12:39:44.0000] <GPHemsley>
well

[12:40:03.0000] <GPHemsley>
that changes the sheet of paper, too, doesn't it?

[12:40:22.0000] <GPHemsley>
that is, tables will get a new sheet with that style, won't they?

[12:40:28.0000] <SimonSapin>
it could, thatâs undefined

[12:40:38.0000] <SimonSapin>
although in this case itâs expected to only rotate

[12:40:47.0000] <GPHemsley>
how do you rotate only part of a page?

[12:41:02.0000] <SimonSapin>
no, changing page type causes a forced page break

[12:41:07.0000] <GPHemsley>
right, exactly

[12:41:19.0000] <GPHemsley>
so dimensions may change from page to page

[12:41:25.0000] <GPHemsley>
but they don't change within the page

[12:43:06.0000] <GPHemsley>
also, in that case, wouldn't that mean that the text size would change because the width/height would change?

[12:43:17.0000] <GPHemsley>
the text size in the table, that is

[12:43:52.0000] <GPHemsley>
(if you used viewport units to size the font)

[12:45:21.0000] <GPHemsley>
and what happens if multiple pages are printed on a single sheet?

[12:45:28.0000] <GPHemsley>
(that may be an orthogonal question)

[12:46:43.0000] <SimonSapin>
viewport units in paged media are only based on the first page

[12:46:52.0000] <GPHemsley>
ah, right

[12:46:54.0000] <GPHemsley>
you said that

[12:46:54.0000] <SimonSapin>
implementations donât want a set of computed value per page

[12:47:52.0000] <SimonSapin>
another option would have been to make them like percentages, only resolved during layout. But we resolved on the first one

[12:48:23.0000] <GPHemsley>
what document(s) can I use as reference in this discussion?

[12:49:39.0000] <GPHemsley>
how do you determine what the first page is?

[12:49:44.0000] <GPHemsley>
what if a table is on the first page?

[12:49:59.0000] <SimonSapin>
eh â¦ its a bit scattered on www-style and conf call minutes

[12:50:00.0000] <GPHemsley>
does that mean that all the subsequent pages use text sized on landscape instead of portrait?

[12:50:06.0000] <GPHemsley>
ah

[12:50:30.0000] <GPHemsley>
what's the background document (spec)?

[12:51:03.0000] <SimonSapin>
after the table you go to the parentâs or next siblingâs page type

[12:51:04.0000] <SimonSapin>
http://dev.w3.org/csswg/css3-page/

[12:51:33.0000] <SimonSapin>
if there is no content before the table (roughly), the first page is wide

[12:51:35.0000] <GPHemsley>
for the "first page" calculation?

[12:51:45.0000] <GPHemsley>
for the viewport, I mean

[12:52:21.0000] <SimonSapin>
http://dev.w3.org/csswg/css3-values/#viewport-relative-lengths

[12:52:52.0000] <SimonSapin>
"initial containing block" is defined in http://dev.w3.org/csswg/css3-page/#page-box-page-rule

[12:53:29.0000] <SimonSapin>
interactions of viewport units and @page are not yet defined (thatâs my issue list)

[12:54:25.0000] <GPHemsley>
page box = printable area?

[12:55:20.0000] <SimonSapin>
hum, mostly

[12:57:29.0000] <GPHemsley>
OK, so, each sheet of paper has a single page box?

[12:57:45.0000] <GPHemsley>
(assuming one page per sheet)

[12:57:54.0000] <SimonSapin>
yes

[12:58:24.0000] <SimonSapin>
although other transfer types are allowed: http://dev.w3.org/csswg/css3-page/#transfer-possibilities

[12:58:53.0000] <GPHemsley>
@page > @page :left, @page :right ?

[13:02:16.0000] <SimonSapin>
@page {} applies to all pages, but with weaker specificity than @page :left {} which applies only to left pages

[13:02:50.0000] <GPHemsley>
is that different from inheritance?

[13:04:15.0000] <GPHemsley>
does the "initial containing block" take on the properties of whichever of :left and :right is first?

[13:04:17.0000] <SimonSapin>
I guess you could view it kind of like inheritance â¦ but it is more like different selectors matching the same element

[13:04:28.0000] <SimonSapin>
the usual cascading rules apply

[13:05:00.0000] <GPHemsley>
...which question was that a response to?

[13:05:09.0000] <SimonSapin>
with source, order specificity, !important, stylesheet origin, etc.

[13:05:18.0000] <SimonSapin>
response to "is that different from inheritance"

[13:05:22.0000] <GPHemsley>
ah, ok

[13:06:01.0000] <SimonSapin>
ICB is basically the used values of the 'width' and 'height' properties of the first page, after cascading and resolving 'auto' values

[13:07:49.0000] <GPHemsley>
so, if :left and :right wind up having different widths/heights, then the width/height of the "first page" (and, thus, the ICB) would depend on whether the "first page" was :left or :right?

[13:08:40.0000] <SimonSapin>
yes

[13:08:50.0000] <SimonSapin>
which depends on writing mode and direction

[13:08:58.0000] <GPHemsley>
hmm

[13:09:05.0000] <SimonSapin>
http://dev.w3.org/csswg/css3-page/#progression

[13:09:16.0000] <SimonSapin>
at least the default depends on that

[13:09:41.0000] <SimonSapin>
authors can switch with eg. :root { break-before: left }

[13:09:56.0000] <SimonSapin>
(there is no printed page before that "page break")

[13:11:43.0000] <GPHemsley>
right

[13:11:44.0000] <GPHemsley>
hmm

[13:12:33.0000] <GPHemsley>
but what does that mean if you have: table { page: wide } @page wide { size: A4 landscape } @page { size: A4 portrait /* default */ }

[13:13:23.0000] <GPHemsley>
and then :root > table:first-child ?

[13:13:50.0000] <SimonSapin>
then the first page is A4 landscape

[13:13:52.0000] <GPHemsley>
does that mean the "first page" is now @page wide ?

[13:13:56.0000] <SimonSapin>
yes

[13:15:10.0000] <GPHemsley>
is it a good idea to allow that to control how the viewport units are calculated?

[13:15:22.0000] <GPHemsley>
or is that part of the question we're trying to answer?

[13:15:55.0000] <SimonSapin>
interesting point

[13:16:15.0000] <SimonSapin>
"ICB = first page" is somewhat arbitrary

[13:16:23.0000] <GPHemsley>
so, we always have @page :left and @page :right

[13:16:32.0000] <GPHemsley>
oftentimes they are the same

[13:16:36.0000] <GPHemsley>
sometimes they are different

[13:16:44.0000] <GPHemsley>
page progression determines which one is "first"

[13:17:08.0000] <SimonSapin>
viewport units being based on the first page makes the feature somewhat useless when page size varies. But anything else has too much implementation cost

[13:17:10.0000] <GPHemsley>
I think that's about as far as you should go before you determine viewport units

[13:17:34.0000] <GPHemsley>
oh

[13:17:44.0000] <GPHemsley>
too much of an exception to the rule?

[13:18:36.0000] <SimonSapin>
the ICB is based on 'width' and 'height' in @page. But if that is 'auto', itâs based on margin-*, border-*-width, padding-*, and size

[13:18:50.0000] <SimonSapin>
do you mean not inherit from :root?

[13:20:35.0000] <GPHemsley>
would there ever be a time when :root differs from whatever the first element is?

[13:20:47.0000] <GPHemsley>
e.g. on an HTML page, where :root differs from html

[13:21:14.0000] <SimonSapin>
:root is short for "the root element"

[13:21:20.0000] <GPHemsley>
so no?

[13:21:27.0000] <SimonSapin>
in HTML, thatâs always <html> AFAIK

[13:22:17.0000] <GPHemsley>
which parts of determining what the "first page" is are set in stone?

[13:23:33.0000] <SimonSapin>
none, I guess

[13:23:44.0000] <SimonSapin>
set in clay that has not completely dried yet, maybe? :p

[13:24:12.0000] <GPHemsley>
ah, so what implementation cost are you referring to?

[13:27:14.0000] <SimonSapin>
cost of treating viewport units like percentages so that they can have a different value on each page

[13:27:39.0000] <GPHemsley>
oh

[13:27:48.0000] <GPHemsley>
I'm not arguing to allow their value to change per page

[13:27:59.0000] <SimonSapin>
yeah, the WG resolved against that

[13:28:07.0000] <GPHemsley>
just to allow their value to be based on a sane page

[13:29:25.0000] <GPHemsley>
I'm thinking it should be based on the size of whichever of :left or :right is first

[13:29:29.0000] <GPHemsley>
but before :first

[13:29:50.0000] <SimonSapin>
like, based on an hypothetical "unnamed" page that does not match any pseudo-class?

[13:29:56.0000] <GPHemsley>
sort of, yeah

[13:30:25.0000] <GPHemsley>
kind of, based on whatever :first is inheriting from

[13:30:26.0000] <SimonSapin>
"whichever of :left or :right is first" that depends on the 'direction' property on :root

[13:30:35.0000] <GPHemsley>
is that a problem?

[13:30:48.0000] <SimonSapin>
itâs not really inheriting

[13:30:55.0000] <SimonSapin>
not sure yet if that would work

[13:31:30.0000] <GPHemsley>
well, :left and :right both get their default values from @page, right?

[13:31:49.0000] <SimonSapin>
hum, not really

[13:31:53.0000] <GPHemsley>
then page progression and whatnot decides which of :left and :right becaomes :first

[13:31:53.0000] <GPHemsley>
oh

[13:32:20.0000] <GPHemsley>
specificity

[13:32:56.0000] <GPHemsley>
that's involved in here somewhere

[13:33:39.0000] <SimonSapin>
declarations for pages are qualified by a page selector which as specificity. The cascade picks a "winning" declaration for every property of every page based on a combination of stylesheet "origin" (UA, author, user), !important, specificity, and source order

[13:33:43.0000] <SimonSapin>
for selectors that match

[13:33:56.0000] <SimonSapin>
itâs the same cascade as on elements

[13:34:39.0000] <GPHemsley>
well, I'm thinking viewport units are determined at (0,0,x), where x is the highest number in context

[13:34:56.0000] <GPHemsley>
(if that even makes sense in the terminology)

[13:35:15.0000] <SimonSapin>
highest number?

[13:35:55.0000] <GPHemsley>
yeah, maybe it doesn't make sense

[13:36:32.0000] <SimonSapin>
Not sure what you mean

[13:38:35.0000] <GPHemsley>
can g or h every be >1 ?

[13:39:31.0000] <GPHemsley>
/me is not sure where "This is 0 or 1. " applies

[13:39:55.0000] <SimonSapin>
no

[13:40:00.0000] <GPHemsley>
ok

[13:40:03.0000] <SimonSapin>
the syntax only allows zero or one page name per selector

[13:40:07.0000] <SimonSapin>
is the note unclear?

[13:40:11.0000] <GPHemsley>
yeah, a little

[13:40:19.0000] <SimonSapin>
how would you phrase it?

[13:40:24.0000] <GPHemsley>
the first few times I read it, I thought it applied to f, not g and h

[13:40:47.0000] <SimonSapin>
oh, sorry I misread you

[13:40:52.0000] <SimonSapin>
it applies to f, not g or h

[13:40:55.0000] <GPHemsley>
oh

[13:41:03.0000] <GPHemsley>
so, wait

[13:41:22.0000] <GPHemsley>
when would you have, e.g., (0,0,2)?

[13:42:58.0000] <SimonSapin>
"Given the syntax of page seletors, <var>f</var> can only ever be 0 or 1." Better?

[13:43:35.0000] <GPHemsley>
Sure, but now I still don't have an answer to the question I was really looking to answer. :P

[13:43:38.0000] <SimonSapin>
(0,0,2) with @page :left:left (which is silly) or @page :left:right (which never matches.) But they are allowed

[13:44:02.0000] <SimonSapin>
maybe in the future weâll add more pseudo-classes

[13:44:12.0000] <SimonSapin>
:blank was added recently

[13:44:13.0000] <GPHemsley>
so, @page :left:left will override @page :left ?

[13:44:17.0000] <SimonSapin>
yes

[13:44:22.0000] <SimonSapin>
stronger specificity

[13:44:22.0000] <GPHemsley>
that seems strange

[13:44:37.0000] <GPHemsley>
but not really the issue at hand

[13:44:39.0000] <SimonSapin>
table:first-child:first-child does the same

[13:45:03.0000] <GPHemsley>
also strange

[13:45:14.0000] <GPHemsley>
but anyway

[13:46:00.0000] <GPHemsley>
viewport units should be calculated according to (0,0,x-1), where x is the specificity of the highest on the page

[13:46:40.0000] <GPHemsley>
so, @page :first { font-size: 1vw } should be 1% of the width of @page :left:left

[13:47:08.0000] <GPHemsley>
(assuming @page :left:left specified)

[13:47:42.0000] <GPHemsley>
which is perhaps still an abuse of the terminology

[13:47:47.0000] <GPHemsley>
but hopefully it makes sense this time

[13:47:53.0000] <SimonSapin>
Iâm still not sure how you determine X

[13:48:53.0000] <GPHemsley>
ok, hmm

[13:49:13.0000] <GPHemsley>
a page with a higher specificity inherits the properties of the lower specificities that also match, correct?

[13:49:29.0000] <GPHemsley>
(and then can override them)

[13:49:51.0000] <SimonSapin>
"inherit" is not the right word, but I see what you mean

[13:51:36.0000] <SimonSapin>
the proposal Iâm writing up for www-style is more like: only consider @page rules without a selector for determining the viewport units.

[13:52:34.0000] <GPHemsley>
but aren't pseudo-classes selectors?

[13:52:49.0000] <GPHemsley>
s/classes/pages/ if you like

[13:52:56.0000] <SimonSapin>
"without a selector" is @page {} only

[13:53:24.0000] <GPHemsley>
so, no difference/dependence on :left vs. :right ?

[13:53:38.0000] <SimonSapin>
and pages donât have specificity, selectors do. AÂ given page *matches* a subset of all selectors. We get a bunch of declarations sorted by specificity of the matched selector

[13:53:45.0000] <SimonSapin>
yes

[13:53:55.0000] <GPHemsley>
yeah, I like that better

[13:54:05.0000] <GPHemsley>
but I thought that was bogged down by interactions with :root or something?

[13:54:22.0000] <GPHemsley>
(surely there was a reason I was led away from that proposal in my thinking...)

[13:55:07.0000] <SimonSapin>
that helps with part of the issue that you pointed out (and I hadnât seen before:) the size of the actual first page depends on a lot of stuff, including named pages

[13:55:26.0000] <SimonSapin>
We want something like a "default" page

[13:55:29.0000] <GPHemsley>
right

[13:55:49.0000] <SimonSapin>
but that doesnât change the circular definition of viewport units vs. page size

[13:56:40.0000] <GPHemsley>
remind me, why not?

[13:56:46.0000] <SimonSapin>
for that , sanest way out I see is change @page to not inherit from the root. Which is sad, but I donât see better

[13:57:00.0000] <GPHemsley>
yeah, I still think that'd be more intuitive

[13:57:05.0000] <SimonSapin>
consider @page { width: 50vw }

[13:57:14.0000] <SimonSapin>
the width is 50% of itself

[13:57:27.0000] <GPHemsley>
what about size?

[13:58:01.0000] <SimonSapin>
when width is 'auto', its used value is size minus margins, borders and paddings

[13:58:26.0000] <SimonSapin>
(size is the default containing block of page boxes)

[13:58:30.0000] <GPHemsley>
what does that have to do with viewport? :P

[13:58:51.0000] <GPHemsley>
oh

[13:59:07.0000] <SimonSapin>
viewport units are proportional to the "initial containing block" which is effectively the used 'width' and 'height' of some page box

[14:00:10.0000] <SimonSapin>
so what we can do is declare that such units are invalid in 'width' and some other properties in @page

[14:00:16.0000] <SimonSapin>
the declarations are ignored

[14:00:59.0000] <SimonSapin>
but if font-size is based of viewport units, then em and other font-based units also indirectly depend on the ICB

[14:01:01.0000] <GPHemsley>
what would happen if @page viewport units were declared in reference to size?

[14:01:29.0000] <GPHemsley>
(or can you only have one definition of viewport units?)

[14:01:31.0000] <SimonSapin>
they would behave very differently than on screen

[14:01:41.0000] <GPHemsley>
ah

[14:02:02.0000] <GPHemsley>
would they, though?

[14:02:06.0000] <SimonSapin>
we want 100vw to be the same as `width: 100%` on the root

[14:02:14.0000] <GPHemsley>
what happens for :root { width: 50vw } ?

[14:02:14.0000] <SimonSapin>
(module scrollbars on screen â¦)

[14:02:26.0000] <SimonSapin>
then the root is smaller than the ICB

[14:02:50.0000] <GPHemsley>
right

[14:02:50.0000] <SimonSapin>
the ICB is the rootâs own containing block

[14:03:44.0000] <GPHemsley>
size > @page > :root

[14:04:59.0000] <GPHemsley>
screen resolution > browser window > :root

[14:06:37.0000] <SimonSapin>
as in "bigger than"?

[14:06:45.0000] <SimonSapin>
yes, unless you have negative margins :)

[14:06:48.0000] <GPHemsley>
yeah, and also "contains"

[14:06:59.0000] <GPHemsley>
so what if you do?

[14:07:16.0000] <SimonSapin>
you could have :root wider than the page box

[14:07:23.0000] <SimonSapin>
width: 120%

[14:07:30.0000] <GPHemsley>
but then it overflows

[14:07:32.0000] <SimonSapin>
yes

[14:07:56.0000] <SimonSapin>
anyway, yes itâs conceptually contained that way

[14:08:12.0000] <GPHemsley>
but I mean, if you have :root { width: 120vw }

[14:08:23.0000] <GPHemsley>
what happens on screen?

[14:08:43.0000] <SimonSapin>
scrollbars, I suppose

[14:08:46.0000] <GPHemsley>
right

[14:08:56.0000] <GPHemsley>
because it overflows

[14:08:59.0000] <SimonSapin>
same with 120%

[14:09:01.0000] <GPHemsley>
but that doesn't redefine vw

[14:09:03.0000] <SimonSapin>
yes

[14:09:32.0000] <GPHemsley>
the difference between screen and page in this case is that you can't style "browser window" like you can with @page

[14:09:39.0000] <SimonSapin>
nothing in CSS can change the viewport on screen

[14:09:44.0000] <GPHemsley>
exactly

[14:10:07.0000] <GPHemsley>
but if you could, you'd predict @viewport { width: 100vw } to be relative to the screen resolution, wouldn't you?

[14:10:20.0000] <SimonSapin>
oh, wait, http://dev.w3.org/csswg/css-device-adapt/

[14:10:25.0000] <GPHemsley>
(perhaps @window would be better)

[14:10:36.0000] <SimonSapin>
@viewport is a thing

[14:11:25.0000] <GPHemsley>
does it fall into this analogy? (I hope)

[14:11:55.0000] <SimonSapin>
@viewport is described as similar to @page

[14:12:24.0000] <GPHemsley>
does it handle viewport units?

[14:12:28.0000] <GPHemsley>
(I'm not seeing that it does)

[14:12:57.0000] <GPHemsley>
<viewport-length> = auto | device-width | device-height | <length> | <percentage>

[14:13:03.0000] <GPHemsley>
<length>

[14:13:03.0000] <GPHemsley>
    A positive absolute or relative length.

[14:13:21.0000] <SimonSapin>
"Viewport    lengths (vw, vh, vmin, vmax) are relative to the initial viewport."

[14:13:49.0000] <GPHemsley>
initial viewport

[14:13:50.0000] <GPHemsley>
    This refers to the viewport before any UA or author styles have overridden the viewport given by the window or viewing area of the UA. Note that the initial viewport size will change with the size of the window or viewing area.

[14:14:08.0000] <GPHemsley>
aka @page without selectors

[14:14:42.0000] <SimonSapin>
we could have viewport units inside @page be based on the default page size, like media queries

[14:14:56.0000] <GPHemsley>
wasn't that what I was saying? :P

[14:15:05.0000] <SimonSapin>
yeah, I just noticed :p

[14:15:44.0000] <SimonSapin>
except default without considering stylesheets at all, even @page without a selector

[14:15:50.0000] <GPHemsley>
right

[14:16:11.0000] <SimonSapin>
be vw can still "leak" from :root through inheritance

[14:16:31.0000] <GPHemsley>
remind me what the inheritance is now?

[14:17:21.0000] <SimonSapin>
the default font-size in an element is that of its parent

[14:17:57.0000] <SimonSapin>
:root is considered the "parent" of page boxes for the purpose of the cascade (determining computed values of properties)

[14:18:24.0000] <GPHemsley>
so viewport units in :root would be based on the size of the paper?

[14:18:37.0000] <GPHemsley>
that doesn't seem so bad

[14:19:47.0000] <SimonSapin>
hum, not quite

[14:20:41.0000] <SimonSapin>
the point is that vw inside @page would be based of the UAâs default (eg. always A4Â portrait minus 2cm margins, in WeasyPrint) even if stylesheets specify something else

[14:20:53.0000] <GPHemsley>
ah

[14:21:40.0000] <GPHemsley>
is that bad?

[14:22:47.0000] <GPHemsley>
(consider that the viewport is not equal to the browser window, because of toolbars and the like)

[14:24:02.0000] <SimonSapin>
no, thatâs actually better than making the declarations invalid

[14:24:15.0000] <GPHemsley>
yeah

[14:24:16.0000] <SimonSapin>
well, I think so

[14:24:20.0000] <GPHemsley>
I agree

[14:24:24.0000] <GPHemsley>
I never wanted to do that ;)

[14:24:37.0000] <GPHemsley>
oh, except in the beginning

[14:24:42.0000] <SimonSapin>
invalid is what CSS WG kind of agreed on so far

[14:24:42.0000] <GPHemsley>
where I was throwing them all away

[14:24:48.0000] <GPHemsley>
oh

[14:24:49.0000] <GPHemsley>
well

[14:24:55.0000] <SimonSapin>
but not a formal resolution

[14:24:57.0000] <GPHemsley>
they didn't spend the last two hours thinking it through

[14:24:58.0000] <SimonSapin>
that can be changed

[14:24:59.0000] <GPHemsley>
:P

[14:25:23.0000] <SimonSapin>
(although even resolutions can be changed by another resolution :p)

[14:25:44.0000] <GPHemsley>
so... did we settle it all?

[14:26:15.0000] <SimonSapin>
I raised this issue months ago, and I just had to ideas that I didnât see before ;)

[14:26:31.0000] <GPHemsley>
:)

[14:26:57.0000] <SimonSapin>
erf, I meant *you* just had *two* ideas

[14:27:07.0000] <GPHemsley>
it's easy to think outside the box when you have no idea where the box is

[14:27:11.0000] <GPHemsley>
(no pun intended)

[14:27:14.0000] <SimonSapin>
hehe

[14:29:01.0000] <SimonSapin>
one point remains, though:

[14:29:31.0000] <SimonSapin>
does @page never inherit properties from the root element, or is that only for the purpose of determining viewport units?

[14:30:20.0000] <GPHemsley>
I think it would be more intuitive if it were never

[14:30:48.0000] <GPHemsley>
because, to me, the root element is a child of the page

[14:30:54.0000] <GPHemsley>
contained within the page

[14:30:57.0000] <GPHemsley>
however you want to phrase it

[14:33:02.0000] <SimonSapin>
each fragment of the root box is inside the page box, yes

[14:33:11.0000] <SimonSapin>
but there is only one root element

[14:33:13.0000] <SimonSapin>
(to rule them all)

[14:33:39.0000] <GPHemsley>
root element > root boxes?

[14:33:56.0000] <SimonSapin>
And the cascade (where inheritance happens) needs to happen before layout (where page breaks happen)

[14:34:27.0000] <SimonSapin>
elements generate boxes based on the 'display' property, and these boxes are "fragmented" at line breaks, page breaks, column breaks, etc.

[14:35:20.0000] <GPHemsley>
and remind me, what kind of stuff would get inherited from :root by @page?

[14:36:56.0000] <SimonSapin>
potentially any properties

[14:37:02.0000] <SimonSapin>
some like font-size are inherited by default

[14:37:27.0000] <SimonSapin>
any property can accept the 'inherit' keyword

[14:37:40.0000] <GPHemsley>
ah, right

[14:37:48.0000] <SimonSapin>
so this is valid, although crazy: :root { margin: 10vw } @page { margin: inherit }

[14:38:26.0000] <GPHemsley>
and according to our new definition, what is that vw relative to?

[14:39:07.0000] <GPHemsley>
or is it invalid?

[14:39:18.0000] <GPHemsley>
/me hopes you have this all written down already

[14:39:34.0000] <SimonSapin>
yes, Iâm about to send it to www-style

[14:40:22.0000] <SimonSapin>
with what we discussed: `margin: inherit` has no inherited value, so the initial value is used. That is 0, for margin.

[14:40:44.0000] <SimonSapin>
10vw is based on an hypothetical "default" page

[14:40:49.0000] <GPHemsley>
given that I think we wrote defined viewport units without reference to inheritance, it's probably OK to leave the :root/@page inheritance as is for now

[14:40:54.0000] <GPHemsley>
-wrote

[14:41:05.0000] <SimonSapin>
if you specify a page size on both :left and :right, no page will have the "default" size

[14:41:17.0000] <GPHemsley>
but the viewport units still will

[14:44:18.0000] <SimonSapin>
Sent: http://lists.w3.org/Archives/Public/www-style/2013Feb/0668.html

[14:45:58.0000] <GPHemsley>
Geez, that whole discussion distilled into that little e-mail?

[14:46:01.0000] <GPHemsley>
But cool

[14:46:07.0000] <GPHemsley>
/me should probably get on www-style

[14:46:24.0000] <GPHemsley>
anyway, I'm gonna head out

[14:46:31.0000] <GPHemsley>
if anything interesting happens, let me know

[14:46:41.0000] <GPHemsley>
(I'll let you know if/when I subscribe to www-style)

[14:46:53.0000] <SimonSapin>
thanks again GPHemsley

[14:46:58.0000] <GPHemsley>
sure thing :)


2013-02-25
[02:10:28.0000] <jgraham>
darobin: So, how much would you object to trying my *highly* experimental github/critic integration with the html-testsuite repo?

[02:11:36.0000] <jgraham>
So far all it can do is authenticate users against github and create a critic review from a github pr. It never tries to write any data back to github

[02:12:08.0000] <Ms2ger>
As long as it can't break anything, why not?

[02:12:25.0000] <jgraham>
(that should change; it should at least comment on the pull request to indicate the corresponding critic review, and allow the PR to be merged directly when the review is approved)

[02:12:34.0000] <jgraham>
(but that doesn't work yet)

[02:12:56.0000] <jgraham>
(and by "doesn't work" I mean "doesn't have a single line of code written")

[02:13:33.0000] <darobin>
jgraham: so basically you're saying that you have something that might greatly enhance using the repo but that won't break anything if it doesn't work?

[02:13:48.0000] <darobin>
I can't see why I'd object to that :)

[02:13:55.0000] <jgraham>
I can't think of any way it could break anything at least :)

[02:14:01.0000] <darobin>
that's good enough for me

[02:14:23.0000] <darobin>
so long as it doesn't force itself on unsuspecting users and doesn't break anything, go go go!

[02:32:17.0000] <jgraham>
OK, well I added it. Just need someone to make a pull request now :)

[02:33:05.0000] <jgraham>
(also I found something (that I expect I caused to be) broken in critic. Need to fix that)

[02:33:22.0000] <Ms2ger>
Can I use it for the section tests?

[02:33:47.0000] <jgraham>
Perhaps. Try closing and reopeneing the pull request and see what happens

[02:35:14.0000] <jgraham>
Although I don't think I tried it with branches containing multiple commits, so I guess that is more than usually likely to not work.

[02:36:14.0000] <jgraham>
And it won't preserve the exisiting comments yet

[02:36:22.0000] <jgraham>
So if you care about those don't use it

[02:36:45.0000] <jgraham>
(I mean, they won't get copied across. They will of course not be altered)

[02:39:58.0000] <Ms2ger>
I think I do care about those :)

[02:58:28.0000] <annevk>
Hmm, this fetching stuff needs some kind of different model than simply returning the response

[03:04:19.0000] <hsivonen>
I wish objectors to DRM were a bit better about making conclusions and paid more attention to what Mark Watson has said in terms of the assumptions that go into those conclusions

[03:29:52.0000] <hsivonen>
annevk: what's the legacy IE API for reading the character encoding of a document?

[03:30:02.0000] <hsivonen>
document.characterSet is not working for me

[03:30:39.0000] <annevk>
charset maybe?

[03:30:43.0000] <annevk>
/me forgot :/

[03:31:05.0000] <annevk>
yeah, looks like it should be charset

[03:31:35.0000] <hsivonen>
I tried that. not working, either

[03:31:48.0000] <hsivonen>
is it empty for script-created docs?

[03:32:06.0000] <hsivonen>
shouldn't it be "unicode" in script-created docs in legacy IE?

[03:35:36.0000] <hsivonen>
annevk: thanks. Looks like it's different for script-created docs

[03:35:45.0000] <hsivonen>
document.charset works in a normal doc

[03:39:13.0000] <hsivonen>
does browser stack support checking a site in a particular language version of IE?

[03:45:15.0000] <annevk>
prolly not

[03:56:53.0000] <hsivonen>
So I need to locate user with Arabic, Persian, Welsh and Vietnamese Windows localizations to load http://hsivonen.iki.fi/test/moz/check-charset.htm in IE and report the result

[03:57:01.0000] <hsivonen>
*users

[03:58:40.0000] <jgraham>
Welsh?!

[03:59:49.0000] <hsivonen>
jgraham: yeah. I'm not sure if Welsh is available as the main language of Windows, though. However, it is listed at http://www.science.co.il/language/locale-codes.asp

[04:01:56.0000] <hsivonen>
interesting. there are distinct entries for sv-se and sv-fi.

[04:02:44.0000] <jgraham>
http://www.microsoft.com/downloads/details.aspx?FamilyID=a1a48de1-e264-48d6-8439-ab7139c9c14d&displaylang=cy exists

[04:02:55.0000] <annevk>
o_O

[04:02:59.0000] <jgraham>
But something said it had to be installed on English language windows

[04:03:33.0000] <annevk>
HTML crossorigin="anonymous" is different from new XMLHttpRequest({anon:true})

[04:04:06.0000] <annevk>
We designed this poorly :-(

[04:04:36.0000] <hsivonen>
jgraham: thanks. If there exist Welsh Windows install discs, the result might be different.

[04:05:12.0000] <annevk>
hsivonen: error console messages have an effect

[04:05:21.0000] <jgraham>
hsivonen: I couldn't see any evidence those exist

[04:05:23.0000] <hsivonen>
annevk: ok

[04:05:25.0000] <annevk>
hsivonen: e.g. Facebook stopped using Attr-related methods after they got console warnings

[04:05:30.0000] <hsivonen>
jgraham: thanks

[04:05:32.0000] <jgraham>
But I might have missed something of course

[04:27:32.0000] <tommorris>
can someone set me up an account on wiki.whatwg.org?

[04:27:53.0000] <annevk>
darobin: I recommend citing http://intertwingly.net/slides/2004/devcon/69.html

[04:27:59.0000] <annevk>
tommorris: pm me email and username

[04:28:31.0000] <darobin>
annevk: thanks, that's a good one!

[04:28:56.0000] <darobin>
annevk: I was also looking for that zcorpan test that can be interpreted as JS or HTML, do you have the link handy? can't seem to find it

[04:31:21.0000] <hsivonen>
huh. Installing the Welsh language pack on en-US Windows 7 changed Windows Explorer to Welsh but Internet Explorer remained in English

[04:31:28.0000] <hsivonen>
so much for IE being a part of Windows

[04:31:59.0000] <annevk>
darobin: http://w3c-test.org/webapps/Workers/tests/submissions/Opera/constructors/Worker/AbstractWorker.onerror.html

[04:32:08.0000] <annevk>
darobin: I think there are many within the workers test suite

[04:32:16.0000] <darobin>
ah, thanks, you're a star

[04:34:42.0000] <annevk>
darobin: are we gonna remove the whole submissions/ stuff from those tests too?

[04:34:50.0000] <darobin>
damn yes

[04:35:04.0000] <annevk>
ah, you're a star

[04:42:00.0000] <annevk>
So you do a request, you have received all the headers and start receiving the response, can you still get a detectable network error at that point?

[04:42:56.0000] <annevk>
My going theory at the moment is that a network error can only be detected if you never got the response or only part of the headers.

[04:43:07.0000] <annevk>
Because Content-Length is not reliable.

[04:45:37.0000] <annevk>
slightlyoff: ^^ see also http://wiki.whatwg.org/wiki/Fetch#Pseudo-code

[04:46:06.0000] <annevk>
slightlyoff: ideally we design these Request and Response classes somewhat consistently

[04:51:43.0000] <annevk>
slightlyoff: between the low-level Fetch architecture that is and the Controller thingie; might even want to define the Controller thingie as part of this, haven't really thought that far yet

[04:53:24.0000] <marcosc>
/me wants to standardize a feature where if an email client sees that you are cross posting to lists, it slaps you. 

[04:54:00.0000] <mounir>
marcosc: please!

[04:55:19.0000] <Ms2ger>
Also, if they top-post

[04:57:57.0000] <jgraham>
Or don't send text/plain. Or don't use > to prefix quoted lines. Or have one of the several varieties of irritating signature (adverts for their mobile phone and/or mail client, pseudo-legal disclaimers)

[04:59:35.0000] <darobin>
ok, enough TAG trolling for one day

[05:00:39.0000] <annevk>
haha, that last one

[05:00:56.0000] <darobin>
it's a bit low, but I couldn't resist :)

[05:01:50.0000] <wilhelm>
My responses are marked in RED below.

[05:02:17.0000] <karlcow>
/me wonders if TAG trolling is part of the email client redesigned by marcosc ;)

[05:02:23.0000] <Ms2ger>
Or use " >" instead of ">"

[05:03:11.0000] <Ms2ger>
/me glares at howcome

[05:05:08.0000] <annevk>
So what if you pass Fetch both a Request object and a ResponseNotifier object

[05:05:42.0000] <annevk>
Fetch doesn't actually return anything (unless maybe when sync? hmm) and ResponseNotifier tells you what's going on

[05:07:19.0000] <annevk>
I guess you'd either pass the ResponseNotifier or the sync flag

[05:08:36.0000] <annevk>
FetchNotifier is prolly better for uplaod events...

[05:08:42.0000] <annevk>
load*

[05:08:54.0000] <jgraham>
annevk: I am confused. Are you trying to make a public API? Or an internal API?

[05:09:02.0000] <jgraham>
(maybe the wiki page says this)

[05:09:32.0000] <annevk>
jgraham: mostly for specs, but a lot of it will be exposed at some point too

[05:09:40.0000] <annevk>
(and already is, e.g. by XHR)

[05:11:10.0000] <jgraham>
Right, but XHR already has an API

[05:11:33.0000] <annevk>
Some goals I have: centralize redirect handling, centralize CORS, make it possible for a resource to opt into CORS without the request being initiated as such

[05:12:18.0000] <annevk>
jgraham: oh sure, feel free to read "FetchNotifier object" as "FetchNotifier concept"

[05:12:19.0000] <Ms2ger>
Are those goals on the wiki? :)

[05:12:36.0000] <annevk>
Ms2ger: I'm making this up as I go :)

[05:12:55.0000] <annevk>
well not entirely, but it's hard to do a brain dump

[05:15:06.0000] <annevk>
also, lunch

[06:29:54.0000] <hsivonen>
annevk: do you know whether IE defaults to ISO-8859-2 or Windows-1250 in locales where the traditional Windows system encoding is Windows-1250 (Central European)?

[06:40:27.0000] <annevk>
hsivonen: no sorry

[06:42:12.0000] <hsivonen>
annevk: I guess it's best to fix en-US before trying to rally localizers to check if the localization agrees with IE

[06:45:28.0000] <MikeSmith>
should navigator.plugins and navigator.mimetypes be part of the DOM spec?

[06:45:32.0000] <hsivonen>
in the countries whose language localizations default to ISO-8859-2, Firefox is more popular than IE, so probably best not to touch those defaults even if they disagreed with IE

[06:45:33.0000] <MikeSmith>
https://plus.google.com/111523616060404197347/posts/LG3SknZdamB

[06:48:49.0000] <jgraham>
Just hope he never finds out about all the different properties on the window object that are identical to "window"

[06:49:52.0000] <hsivonen>
hmm. Firefox is more popular than IE in Vietnam, too

[06:50:49.0000] <Ms2ger>
Or something as weird as element.firstChild.parentNode

[06:51:40.0000] <hsivonen>
someone should do a study to see if Polish Web content declares its encoding more often than Russian or Japanese Web content

[06:54:56.0000] <annevk>
zewt: thanks

[06:55:27.0000] <annevk>
hsivonen: yeah I guess that's fair

[06:55:27.0000] <marcosc>
hsivonen: might be something to ask http://www.webfoundation.org/ to look into.

[06:55:37.0000] <annevk>
hsivonen: localizers have enough other things to worry about as it is I suppose

[06:56:01.0000] <annevk>
MikeSmith: we cannot remove them from the platform?

[06:56:15.0000] <hsivonen>
annevk: it's also plausible that in some locale Firefox market share is low because of wrong encoding default

[06:56:18.0000] <annevk>
MikeSmith: I haven't really studied them, but vague recollection suggests they're not particular brilliant

[06:56:43.0000] <Ms2ger>
Maybe we should decode non-declared content with a random charset to encourage people to declare their stuff

[06:56:43.0000] <annevk>
hsivonen: I suspect Taiwan

[06:58:28.0000] <MikeSmith>
annevk: yeah don't seem like. I'd wonder what kinds of scripts would be using them and why

[06:58:36.0000] <hsivonen>
Ms2ger: or the replacement encoding :-)

[06:58:42.0000] <Ms2ger>
MikeSmith, fingerprinting

[06:58:55.0000] <annevk>
MikeSmith: presumably detecting if Flash works

[06:58:58.0000] <Ms2ger>
And https://www.mozilla.org/en-US/plugincheck/

[06:59:16.0000] <MikeSmith>
Ms2ger: :)

[06:59:20.0000] <MikeSmith>
http://www.howtocreate.co.uk/wrongWithIE/?chapter=navigator.plugins

[06:59:32.0000] <annevk>
gsnedders: student project: https://twitter.com/hsivonen/status/306055125699551233 ;)

[07:02:07.0000] <jgraham>
annevk: And there I was thinking that would be "seek out web developers that don't declare their content encodings and slap them"

[07:06:19.0000] <annevk>
Not necessarily a bad idea

[07:06:27.0000] <zewt>
doesn't that mean having to slap the entire population of Japan

[07:07:01.0000] <annevk>
Nah, loads of pages there use utf-8 these days

[07:07:23.0000] <jgraham>
gsnedders: And this you *could* bill as travelling salesman

[07:09:00.0000] <Ms2ger>
jgraham, do explain how you're going to bill that as tsp

[07:09:02.0000] <zewt>
incidentally, if any developer i work with has the urge to have a server redirect to data:, i'm allowed to slap *him*, i hope

[07:10:53.0000] <jgraham>
Ms2ger: I imagine you want to find an efficient route between all the people deserving of a slap

[07:11:42.0000] <zewt>
really it's hard to blame regular joe authors missing charset declarations, when everything works for them without it :|

[07:12:18.0000] <zewt>
need to go back in time and slap whoever it was that made the encoding default to the locale

[07:13:37.0000] <jgraham>
zewt: If I really blamed them, I would suggest someone that could slap harder to undertake the project

[07:13:40.0000] <annevk>
zewt: another case I'm considering is a redirect to a blob URL

[07:14:07.0000] <annevk>
zewt: which has the potential to never work I suppose, depending on how that auto-revoking thing works

[07:14:59.0000] <annevk>
http://hg.mozilla.org/integration/mozilla-inbound/rev/e9e4dab21e79 teehee

[07:31:53.0000] <zewt>
annevk: i'm sort of wondering if blob URLs should be implemented by binding to the blob at resolve time (or with a slightly higher-level resolve wrapper, like we talked about), then having fetch just grab the data from the bound blob

[07:32:20.0000] <zewt>
so they would actually *only* work for APIs that (in one way or another) cause the parsed url to be bound to the blob

[07:32:48.0000] <annevk>
it seems kinda silly that you wouldn't be able to pass the blob around though

[07:32:51.0000] <zewt>
though that would mean that weirder things like blob URLs in stylesheets probably wouldn't work (which they possibly shouldn't for autorevoking URLs, but probably should for explicit ones)

[07:33:07.0000] <zewt>
(if only because afaik they do today)

[07:33:19.0000] <annevk>
CSS has to work

[07:33:29.0000] <annevk>
it's the number one reason we have these as URLs to begin with

[07:33:42.0000] <annevk>
I'm not convinced by that use case much, but sicking is

[07:34:54.0000] <zewt>
assigning to element.style.backgroundImage is reasonable, but saying style.textContent = ".foo { background-image: url(" + blobURL + ");"; would be terrible (that's the case that seems harder)

[07:35:24.0000] <zewt>
at least, hard for autorevoke (though I know little to nothing about css in the details, which makes everything look harder)

[07:36:23.0000] <zewt>
hmm, curious about the latter evil case, going to try a couple things...

[07:37:12.0000] <annevk>
even if you assign to backgroundImage you still have to wrap it in url() so you still invoke the CSS parser first

[07:37:34.0000] <annevk>
and again, the case sicking stressed was where you wouldn't have an API and indeed did the string building thing

[07:39:22.0000] <SimonSapin>
annevk: we had comment on CSS encoding detection: http://lists.w3.org/Archives/Public/www-style/2013Feb/0402.html

[07:39:23.0000] <SimonSapin>
"As a security precaution, UAs should skip steps 3 and 4 of the algorithm to determine the fallback encoding when the referring stylesheet or document is not _same-origin_ with the stylesheet.  See <https://www.w3.org/Bugs/Public/show_bug.cgi?id=20886>."

[07:40:05.0000] <SimonSapin>
steps 3 and 4 being using link[charset] or the referring documenâs encoding

[07:41:22.0000] <annevk>
SimonSapin: It's not entirely clear whether that is necessary yet

[07:41:39.0000] <annevk>
SimonSapin: hsivonen and to a lesser extent, I, are on the case

[07:41:52.0000] <SimonSapin>
annevk: good

[07:42:03.0000] <zewt>
annevk: the case i'm wondering about is where images defer image loads until a style actually matches

[07:42:14.0000] <zewt>
eg. div:hover { background-image } doesn't load the image in Chrome until you actually hover

[07:42:38.0000] <zewt>
i don't know if that's a style resolution thing (eg. they never even parse the background-image until something matches, which seems like a likely optimization) or something later

[07:43:05.0000] <zewt>
but i'm just wondering if it's specified what happens if a blob URL is valid when the style is set, but no longer exists when the style later matches

[07:43:56.0000] <annevk>
you have to parse background-image

[07:44:37.0000] <annevk>
for CSSOM purposes but also e.g. if there's a later background-image declaration

[07:45:04.0000] <zewt>
i mean, if nothing actually matches the selector, you don't care about the background-image until something does

[07:46:20.0000] <zewt>
https://zewt.org/~glenn/test-hover-blob-url.html <- if (and only if) you hover the div before the timeout happens, the image works (and keeps working forever)

[07:46:23.0000] <zewt>
(in chrome)

[07:47:16.0000] <annevk>
sure, but that doesn't mean the URL isn't parsed

[07:47:31.0000] <annevk>
I think that more likely indicates the model where the content is not fetched

[07:48:12.0000] <zewt>
but that's the issue, really: blob URLs are dependent on when the fetch actually happens

[07:48:36.0000] <zewt>
same as the problem i mentioned on the list recently, with <img> updates that per spec can begin either sync or async

[07:52:20.0000] <annevk>
Kind a  troubling that none of the implementors seem to care much

[07:55:59.0000] <zewt>
annevk: was redirecting to a blob URL something you were thinking of as possibly useful, or just as something that needs to be defined

[07:58:28.0000] <annevk>
latter

[07:58:53.0000] <annevk>
in particular, I wonder if we should just do what Chrome does, which is to only allow redirecting to http/https

[07:59:14.0000] <annevk>
or if it should be more broad, where you could redirect to about/blob/data/ftp too

[07:59:31.0000] <gsnedders>
What, HTTP redirects, or what are we talking about?

[07:59:40.0000] <annevk>
are there other redirects?

[07:59:45.0000] <gsnedders>
meta?

[08:00:11.0000] <annevk>
<meta> navigates I think, so it's not quite the same

[08:02:13.0000] <gsnedders>
annevk: There's certainly a security argument for Opera's behaviour of not allowing redirects from public network to private networks.

[08:02:21.0000] <zewt>
i don't think navigating to blob urls is meant to be allowed, redirecting say images is weird but I suppose it doesn't matter if it works (as long as the cause is well-defined)

[08:02:24.0000] <gsnedders>
e.g., from the internet to my local network

[08:02:59.0000] <annevk>
without Yngve, I wonder if that survives when Opera's engine is Chromium

[08:03:17.0000] <gsnedders>
zewt: I don't like the idea of navigating to blob URLs, just as principle.

[08:03:35.0000] <SimonSapin>
whatâs a blob URL?

[08:03:45.0000] <gsnedders>
SimonSapin: One referring to a Blob object.

[08:03:45.0000] <jgraham>
What's a principle?

[08:03:51.0000] <annevk>
What's a jgraham?

[08:04:07.0000] <annevk>
Pretty sure the  answer is 17

[08:04:33.0000] <jgraham>
So

[08:04:33.0000] <gsnedders>
Nah, my dice roll was 4.

[08:05:23.0000] <jgraham>
I'm not sure why you couldn't navigate to a blob URL really. I mean if img.src = blob_url works, why wouldn't it for iframe?

[08:07:37.0000] <zewt>
gsnedders: pretty sure it's meant to not work, but I don't know off-hand what stops it

[08:09:03.0000] <gsnedders>
jgraham: It just seems like it should make it harder to GC blobs

[08:10:55.0000] <jgraham>
gsnedders: Is it any harder than what we have currently with document.open?

[08:12:05.0000] <gsnedders>
I don't know, it's not Old Norse. I don't have it swapped in.

[08:12:17.0000] <gsnedders>
And I don't know where I left my web platform page files.

[08:12:53.0000] <zewt>
gsnedders: blob URLs are revoked during "unloading document cleanup steps", though I don't know whether that happens early enough to prevent navigation to it

[08:12:54.0000] <jgraham>
I don't realy have web platform swapped in either :(

[08:13:24.0000] <zewt>
(no idea about navigating an iframe)

[08:13:52.0000] <gsnedders>
An iframe problabbly isn't that bad. window.open is probably the evil case, though.

[08:13:58.0000] <gsnedders>
As then it can outlive the parent.

[08:14:08.0000] <zewt>
yeah.

[08:14:17.0000] <jgraham>
Or location.href

[08:14:21.0000] <zewt>
and navigating the same context (^)

[08:14:37.0000] <gsnedders>
jgraham: But navigating allows discarding the old context, right?

[08:14:49.0000] <gsnedders>
jgraham: Or you mean to a blob?

[08:14:56.0000] <jgraham>
gsnedders: I mean to a blob

[08:15:12.0000] <gsnedders>
I think this is why I think it shouldn't be allowed.

[08:15:28.0000] <gsnedders>
But we already have to allow it for img, don't we?

[08:15:40.0000] <gsnedders>
And I don't really want to introduce inconsistency.

[08:16:10.0000] <zewt>
well, putting blob URLs in <img> is the #1 use for it

[08:16:38.0000] <zewt>
do you mean server redirects to a blob: url in <img>?

[08:17:21.0000] <gsnedders>
I think that's definitely bad, as that's going from public network to some per-machine.

[08:17:38.0000] <zewt>
i don't think it's definitely bad, i just think it's useless and it should do whatever's easiest

[08:18:04.0000] <jgraham>
zewt: "After creating the Document object, but before any script execution, certainly before the parser stops, the user agent must update the session history with the new page." Updating the session history calls "unload"

[08:18:21.0000] <jgraham>
Which calls "unloading document cleanup steps"

[08:18:31.0000] <jgraham>
So it seems like the blob should start loading

[08:18:37.0000] <zewt>
jgraham: but that's still after the new document ahs been fetched

[08:18:38.0000] <jgraham>
and then be revoked half-way thorugh

[08:19:05.0000] <zewt>
revoking a URL definitely shouldn't cause halfway-done fetches to fail

[08:19:19.0000] <zewt>
(that's exposing async behavior)

[08:19:31.0000] <jgraham>
Well it's pretty clear this part of the spec didn't account for the idea of revokable urls

[08:20:01.0000] <zewt>
sure, there's a lot of that I think

[08:20:39.0000] <annevk>
I also wonder how navigate accounts for a sequence of redirects

[08:20:46.0000] <jgraham>
I think the whole idea is very unsound and is likely to lead to interop failures

[08:21:37.0000] <jgraham>
Because each implementation will do whatever's easy and by the time we fix all the plumbing in the spec, the web will depend on specific, hard to spec/implement (in other engines) behaviour

[08:22:06.0000] <annevk>
No shit

[08:22:21.0000] <jgraham>
Well, not everything's like that

[08:22:52.0000] <jgraham>
But this seems to be taking something that is a fairly low-level assumption and ripping it up

[08:23:46.0000] <jgraham>
(of course there are other cases where urls can just stop working, but those are typically error conditions, not part of the required behaviour)

[08:25:44.0000] <gsnedders>
The big problem is that you have URLs that are very short temporarily. I'd rather never have introduced such URLs. :(

[08:26:13.0000] <annevk>
Yeah, where was everyone when I argued that position on the list?

[08:27:15.0000] <gsnedders>
Feeling like I didn't have the time to follow what mailing lists I was already on? :)

[08:27:26.0000] <jgraham>
annevk: Dunno, when was this?

[08:27:37.0000] <annevk>
Year ago or so

[08:28:09.0000] <zewt>
i don't think blob URLs are necessarily a mistake (though there are a lot of loose ends); but non-auto-revoking ones were

[08:28:36.0000] <zewt>
putting manual resource management into a language and platform entirely designed for automatic resource management is a bit hopeless

[08:29:52.0000] <annevk>
We should have started out with object-only. Assigning blob objects to img.src. And then expand from there

[08:32:11.0000] <jgraham>
annevk: Agreed, but looking back, it seems the reason I didn't say anything was that the argument was about CSSOM

[08:32:51.0000] <jgraham>
And I didn't think clearly enough about how bad this kind of url would be

[08:33:24.0000] <annevk>
I would have argued harder if my foresight would've been better.

[08:34:48.0000] <gsnedders>
Damn it, annevk! I thought we had a clairvoyant!

[08:35:48.0000] <annevk>
The future is now, but tomorrow is designed via handwavery and uneducated guesses

[08:36:15.0000] <zewt>
i don't think it's that bad, or that there are problems that hard to solve (or even any problems that we don't seem to already have solutions for, though I don't know about the CSS details)

[08:46:50.0000] <annevk>
Hmm, I wonder if there's some way in which HTML can change so it doesn't need the manual redirect flag

[08:46:53.0000] <annevk>
In navigate

[08:47:36.0000] <marcosc>
LOL: Well you know, software is hard. Let's go shopping!

[08:55:10.0000] <annevk>
Maybe the answer to "manual redirect flag" is to use basic_fetch...

[08:55:19.0000] <annevk>
Meh

[09:27:20.0000] <annevk>
zewt: so I did notice CORS has some slightly different behavior between user abort and network errors around preflight caches

[09:27:35.0000] <annevk>
zewt: see the Fetch wiki page algorithms if you don't want to read CORS

[09:30:09.0000] <annevk>
I'm loving the wiki page algorithms myself. So much better than the spec

[09:30:22.0000] <annevk>
But then I think the consensus was that CORS was a terrible spec

[09:38:17.0000] <cwilso>
annevk: Aren't all specs terrible in retrospect?

[09:39:21.0000] <annevk>
cwilso: some are better than others, maybe? But I guess it's like with code. When you look at what you did a year ago, you don't like it anymore...

[09:40:00.0000] <annevk>
Having said that, I'm still relatively pleased with the DOM Standard and the Encoding Standard

[09:40:53.0000] <dglazkov>
good morning, Whatwg!

[09:41:36.0000] <GPHemsley>
/me wonders what the surprise about Welsh is. It's the most commonly-spoken of the 6 Celtic languages, 2 of which went extinct.

[09:41:52.0000] <cwilso>
Good morning dglazkov!

[09:43:10.0000] <annevk>
So hey, can someone explain why XHR has two states for the same thing? (HEADERS_RECEIVED and LOADING)

[09:44:34.0000] <GPHemsley>
/me recalls complaining about the lack of a DOM0 spec, too.

[09:45:02.0000] <annevk>
DOM0 is specced

[09:58:28.0000] <Hixie>
annevk: i said no api changes :-P

[09:58:41.0000] <Hixie>
annevk: the manual redirect flag is fine :-P

[09:59:30.0000] <annevk>
Hixie: I will write you a patch if it comes to that

[09:59:40.0000] <Hixie>
nooooooooo

[09:59:50.0000] <Hixie>
then i won't understand what's going on anymore

[09:59:56.0000] <Hixie>
it's not writing the patch that takes my time up

[10:00:01.0000] <Hixie>
it's understanding it and reviewing it

[10:00:08.0000] <annevk>
Hixie: fair enough

[10:00:56.0000] <annevk>
So there will be some changes as I want to have a single CORS algorithm rather than a couple and I want to change/obsolete "No CORS"

[10:01:13.0000] <Hixie>
why?

[10:01:21.0000] <annevk>
A single fetch algorithm, sorry...

[10:01:33.0000] <Hixie>
i mean why for the "no cors" thing

[10:01:44.0000] <GPHemsley>
How do people handle being subscribed to both whatwg and www-style? Don't you drown in e-mail?

[10:01:47.0000] <Hixie>
but why for the other thing too for that matter

[10:02:17.0000] <annevk>
So we want to do <script src=http://cross-origin.example/></script> and use the script and if CORS happened to be used we can also report errors, but we don't require opt-in on the requesting side

[10:02:40.0000] <annevk>
That sort of requires a single fetch algorithm and the result will be either tainted or not

[10:02:53.0000] <Hixie>
you can't do that

[10:03:01.0000] <Hixie>
sites break if you include Origin headers unexpectedly

[10:03:07.0000] <Hixie>
that's why we have the crossorigin attribute in the first place

[10:03:31.0000] <annevk>
o_O

[10:04:09.0000] <annevk>
I thought the Origin header was included for a bunch of requests to aid with XSS-protection?

[10:04:31.0000] <Hixie>
only the ones where it's ok to do so

[10:04:46.0000] <Hixie>
we're very careful about defining which that happens for

[10:05:00.0000] <annevk>
Is that only CORS and navigation or some such?

[10:05:51.0000] <Hixie>
off-hand i do not recall

[10:06:06.0000] <Hixie>
every mention of fetch either specifies on Origin or doesn't send one

[10:06:26.0000] <annevk>
So I guess we need a mode for <script crossorigin> then that says to fetch the resource using CORS and have it tainted if there's no opt-in, but apply it anyway...

[10:07:57.0000] <Hixie>
we have that already

[10:08:14.0000] <Hixie>
it's what the spec says :-)

[10:08:25.0000] <Hixie>
i really don't want to touch any of the call sites here

[10:08:30.0000] <Hixie>
we should keep the api exactly the same

[10:08:48.0000] <Hixie>
we don't advance the web by repeatedly changing how we describe things

[10:09:01.0000] <annevk>
Hixie: we don't have that already

[10:09:24.0000] <annevk>
Hixie: mode is either anonymous or use-credentials if you specify crossorigin=""

[10:09:31.0000] <Hixie>
right

[10:09:32.0000] <annevk>
Hixie: and that results in either success or a network error

[10:09:35.0000] <Hixie>
right

[10:09:49.0000] <Hixie>
oh wait, you mean to have it not be a network error even though the cors stuff was denied?

[10:09:54.0000] <Hixie>
why would we do that?

[10:11:05.0000] <annevk>
Hixie: you don't always know if the script you're including has opted in or not and you might not care

[10:11:23.0000] <Hixie>
if you're not debugging it, you don't care anyway, just don't bother setting the attribute

[10:11:46.0000] <annevk>
Hixie: crossorigin also has the side effect of not including credentials which can be nice

[10:12:02.0000] <Hixie>
*shrug*

[10:12:32.0000] <annevk>
I'm just channeling repeated requests here

[10:13:21.0000] <Hixie>
oh. i haven't seen these requests. what are the use cases?

[10:14:08.0000] <annevk>
I think it's basically easy of development. It would be nice to get better debugging, but if it's not there you still want scripts to run and you don't know in advance

[10:15:22.0000] <annevk>
And with large sites with scripts being run on several independent CDNs headers might not be accurate all the time but you still want the site to function even if debugging the end user's setup becomes more complicated because some script comes with the wrong set of headers

[10:15:58.0000] <Hixie>
if it's purely debugging, we should probably just have the debuggers enable a mode where they report exceptions ignoring origin

[10:16:52.0000] <Hixie>
the use cases for <script crossorigin> were about needing to get crash data from deployed stuff, essentially, and for those you can just go and make sure the scripts you care about are setting the cors headers.

[10:16:53.0000] <annevk>
That doesn't address the case of catching errors on the end user's machine using window.onerror and sending those back to the mothership

[10:17:35.0000] <annevk>
I just explained why that's not always the case in more complicated setups, as was explained to me.

[10:18:31.0000] <Hixie>
i wouldn't recommend paying a cdn that can't even get its cors headers straight

[10:18:32.0000] <Hixie>
but ok

[10:19:10.0000] <Hixie>
anyway, sure, we can change things for <script>

[10:19:17.0000] <Hixie>
let's do that separate from the fetch/cors merge though :-)

[10:20:55.0000] <annevk>
Yeah okay, I'll pull that stuff out and align a bit more with the HTML infrastructure as apparently there's more justification than I thought.

[10:21:12.0000] <Hixie>
heh

[10:21:37.0000] <annevk>
I forgot I argued that when crossorigin got added and then someone explained it to me.

[10:22:16.0000] <Hixie>
i know that for <img> chrome guys actually ran into high profile sites that broke, at least

[10:32:53.0000] <TabAtkins>
GPHemsley: I survive by spending at least 4 hours of each day reading and responding to email.

[10:33:04.0000] <TabAtkins>
Also: doing email during the weekend.  And at night.  And in the morning before I go to work.

[10:33:40.0000] <Hixie>
and also while working

[10:33:46.0000] <TabAtkins>
Sometimes, yes.

[10:33:49.0000] <TabAtkins>
If I can't avoid it.

[10:33:56.0000] <Hixie>
/me can't avoid it :-(

[10:34:05.0000] <Hixie>
i just spontaneously look at my e-mail half-way through a sentence

[10:34:07.0000] <Hixie>
it's terrible

[10:34:21.0000] <TabAtkins>
I have the same problem, except for me it's email *and* Twitter.

[10:34:27.0000] <Hixie>
also, by ruthlessly filtering and scanning subject lines

[10:34:32.0000] <Hixie>
man, twitter also?

[10:34:34.0000] <Hixie>
:-/

[10:34:35.0000] <GPHemsley>
Growl helps with Twitter

[10:34:52.0000] <TabAtkins>
::closes twitter:: ::returns to writing a paragraph of spec text:: ::15 seconds later, opens twitter again::

[10:35:00.0000] <GPHemsley>
ah

[10:35:19.0000] <GPHemsley>
if you have a Twitter app with Growl notifications, you won't have to actively monitor Twitter

[10:35:24.0000] <Hixie>
checking my e-mail for me while editing is ^P ^P

[10:35:31.0000] <Hixie>
which i do far too much

[10:35:33.0000] <GPHemsley>
(the same probably goes for e-mail, but I don't have that)

[10:35:40.0000] <GPHemsley>
Cmd+Tab is used a lot :)

[10:35:42.0000] <Hixie>
and checking irc is just hitting the tidle key

[10:35:52.0000] <Hixie>
uh, sorry, not tilde. vertical bar.

[10:36:48.0000] <Hixie>
ok, time to head to work to read more e-mail

[10:39:50.0000] <annevk>
time to stop reading www-tag

[10:40:14.0000] <GPHemsley>
hmm... does anybody ever look at this page?

[10:40:15.0000] <GPHemsley>
https://dvcs.w3.org/hg/csswg/summary

[10:40:30.0000] <GPHemsley>
clearly some template recursion going on somewhere

[10:43:16.0000] <SimonSapin>
GPHemsley: I only ever use https://dvcs.w3.org/hg/csswg/ and https://dvcs.w3.org/hg/csswg/shortlog

[10:43:34.0000] <TabAtkins>
I've never even seen that page.

[10:43:38.0000] <GPHemsley>
Heh

[10:43:48.0000] <GPHemsley>
just click the "csswg" link at the top of the page

[10:44:00.0000] <GPHemsley>
fairly obvious to navigate to :P

[10:47:33.0000] <annevk>
Would it be bad if I expired http://webforms2.org/ ?

[10:48:13.0000] <annevk>
/me doesn't like obsoleting URLs

[10:52:25.0000] <GPHemsley>
AFAICT, it was never even used for anything.

[10:52:56.0000] <GPHemsley>
http://web.archive.org/web/*/http://webforms2.org/*

[10:54:35.0000] <annevk>
It's used for what I use it for. A page in memory of Web Forms 2.0. That's it :-)

[10:55:00.0000] <annevk>
The question is whether I want to keep paying 5-10 bucks a year for that.

[10:55:23.0000] <GPHemsley>
But before that, it wasn't anything either.

[10:55:30.0000] <GPHemsley>
So, yeah, IDK that it's worth it.

[10:55:35.0000] <GPHemsley>
But it's your money :)

[10:58:20.0000] <wilhelm>
annevk: I'm doing some spring cleaning too. I registered html5.no in 2007, but never used it for anything.

[11:15:55.0000] <miketaylr>
wilhelm: html5.no sounds like a great site for naysayers :)

[11:16:07.0000] <Ms2ger>
HTML5?

[11:16:11.0000] <miketaylr>
NO

[11:16:12.0000] <Ms2ger>
[Grumpy cat]

[11:16:14.0000] <Ms2ger>
NO

[11:16:19.0000] <miketaylr>
:))

[11:16:32.0000] <Ms2ger>
Someone make that

[11:16:56.0000] <wilhelm>
... This is a great idea.

[11:17:59.0000] <annevk>
I've tentatively canceled webforms2.org. Let me know if you want it or think I should keep it.

[11:36:56.0000] <jgraham>
Funny things the W3C does #539: Ask testsuite submitters "do you think that the testsuite derived from the intersection of the tests you wrote and the tests that your implementation passes is good enough to demonstrate interop?"

[11:37:19.0000] <jgraham>
I wouldn't care if good testsuites weren't so important

[11:37:45.0000] <jgraham>
And it wasn't *even*harder* to get people to contibute with no process carrot

[11:37:52.0000] <jgraham>
(need to fix that somehow)

[11:38:48.0000] <odinho>
/me like carrots

[11:39:09.0000] <Hixie>
wait, what?

[11:39:19.0000] <Hixie>
jgraham: please tell me you're kidding?

[11:39:35.0000] <Ms2ger>
Well, that's just MS

[11:40:14.0000] <jgraham>
Hixie: Well they don't *say* the bit about "only the tests that pass"

[11:40:34.0000] <jgraham>
That bit is implied by people being bad at releasing tests they fail

[11:41:44.0000] <Hixie>
ah

[12:30:19.0000] <Hixie>
well -. is a pain

[12:30:22.0000] <Hixie>
have to lookahead twice

[12:31:03.0000] <Hixie>
oh i guess that's ok

[12:31:04.0000] <Hixie>
nevermind

[12:31:06.0000] <Hixie>
la la la

[12:31:17.0000] <GPHemsley>
is there a master list of CSS properties?

[12:31:48.0000] <GPHemsley>
(and which spec they're defined in)

[12:32:48.0000] <GPHemsley>
oh, I guess MDN will be an OK substitute

[12:52:34.0000] <GPHemsley>
hmm... Opera's gonna lose a lot of functionality when it switches to WebKit...

[12:57:42.0000] <karlcow>
GPHemsley: such as?

[12:58:32.0000] <GPHemsley>
I'm not keeping a list; it was just a passing remark based on caniuse.com

[12:58:40.0000] <GPHemsley>
looks like one may be feature queries

[12:59:19.0000] <GPHemsley>
hmm, maybe "a lot" was hyperbolic

[13:02:13.0000] <karlcow>
ah yes from the point of view of specs implementation, there will be gain and loss

[13:16:35.0000] <esprehn_>
hem when is anne when I need him :/

[13:16:40.0000] <esprehn_>
hrm*

[13:30:30.0000] <dglazkov>
esprehn_: asleep at the wheel

[13:32:22.0000] <dglazkov>
aha!

[13:34:33.0000] <annevk>
esprehn_: I have returned, though briefly

[13:37:43.0000] <esprehn_>
annevk: why does xhr.response return null for ArrayBuffer and Blob when state is LOADING?

[13:37:56.0000] <esprehn_>
why not return a partial data in an ArrayBuffer

[13:38:29.0000] <esprehn_>
annevk: we had a team ask for it to support streaming binary data, thinking us returning null was a bug (but the spec is clear here)

[13:39:22.0000] <annevk>
esprehn_: Blob has synchronous size attribute

[13:40:12.0000] <GPHemsley>
Argh, the validators have not been updated to include <main>?

[13:40:18.0000] <annevk>
esprehn_: dunno how it would work with ArrayBuffer, I guess you'd have to return a new one each time?

[13:40:27.0000] <GPHemsley>
(Which wouldn't be so bad, except "(Suppressing further errors from this subtree.)")

[13:40:38.0000] <esprehn_>
annevk: yeah, same thing with Blob

[13:40:52.0000] <annevk>
esprehn_: I suppose even with synchronous size we could still expose it, it would just expose what's available thus far...

[13:41:11.0000] <esprehn_>
annevk: exactly, we have the knowledge in Webkit, but we do if (m_state != DONE) return 0

[13:41:27.0000] <annevk>
esprehn_: if that's cheap in implementations we could do it I suppose pending agreement from Gecko / IE

[13:41:36.0000] <annevk>
(one of those being sufficient for me)

[13:44:54.0000] <annevk>
esprehn_: http://xhr.spec.whatwg.org/ file a bug maybe? I can ask someone from Mozilla to comment

[13:51:22.0000] <esprehn_>
annevk: okay

[13:51:55.0000] <annevk>
smaug____: yt?

[13:52:08.0000] <smaug____>
annevk: yup

[13:52:22.0000] <annevk>
smaug____: do you think we should expose ArrayBuffer / Blob during XHR.LOADING as new objects each time you get .response?

[13:52:40.0000] <annevk>
smaug____: reflecting whatever is loaded thus far

[13:52:52.0000] <smaug____>
hmm, what do we do now?

[13:53:17.0000] <annevk>
smaug____: we return null

[13:54:10.0000] <smaug____>
good

[13:54:25.0000] <smaug____>
I think that is good behavior

[13:54:29.0000] <smaug____>
less error prone

[13:54:38.0000] <annevk>
smaug____: so esprehn_ is asking for incremental data

[13:54:57.0000] <smaug____>
we need chunked data for the other case?

[13:55:25.0000] <annevk>
I guess there's chunked and also Stream too

[13:55:36.0000] <smaug____>
I'm worried that people end up accessing .response all the time and create tons of memory garbage by accident

[13:55:53.0000] <annevk>
with the spec only acknowledging "stream" as sicking thought chunked was obsoleted by that

[13:55:54.0000] <smaug____>
if we create new ArrayBuffer/Blob all the time

[13:56:02.0000] <annevk>
k

[13:56:44.0000] <annevk>
smaug____: well Blob / ArrayBuffer are readonly so they could point to the same data all those times...

[13:57:21.0000] <smaug____>
I thought truly new objects

[13:58:47.0000] <smaug____>
annevk: why wouldn't you then return the same Blob all the time?

[13:59:04.0000] <smaug____>
/me must be missing something here

[13:59:22.0000] <annevk>
smaug____: because Blob's are immutable

[13:59:26.0000] <annevk>
afaik

[13:59:37.0000] <annevk>
.size is supposed to be fixed

[14:00:12.0000] <smaug____>
oh, the earlier Blobs would refer only to some parts of the data.

[14:00:14.0000] <smaug____>
right

[14:00:29.0000] <smaug____>
hmm, what if such Blob is transfered to a worker

[14:00:37.0000] <smaug____>
or something like that

[14:01:10.0000] <annevk>
you'd have a growing buffer, but the blob's size restricts what it can access from that buffer

[14:01:18.0000] <annevk>
doesn't matter where it goes I'd think

[14:01:33.0000] <annevk>
but maybe this case is better addressed via the Stream API

[14:02:49.0000] <smaug____>
implementation might just get tricky if same data could be accessed on multiple threads

[14:06:11.0000] <annevk>
smaug____: btw, another question

[14:06:29.0000] <annevk>
smaug____: once you hit HEADERS_RECEIVED, you also hit LOADING right?

[14:06:41.0000] <annevk>
smaug____: there's not really any meaningful distinction between the two :(

[14:07:18.0000] <annevk>
smaug____: so little distinction in fact that the transition is prolly done on a single networking task

[14:08:39.0000] <smaug____>
so HEADERS_RECEIVED happens before LOADING

[14:08:57.0000] <smaug____>
I guess you could abort when you get headers

[14:09:16.0000] <smaug____>
if you just want to check existence of some resource

[14:09:20.0000] <annevk>
the thing is, LOADING starts when the headers are received

[14:09:50.0000] <annevk>
you hit CRLF CRLF in the stream, you know HEADERS_RECEIVED is true, you know LOADING starts

[14:10:09.0000] <smaug____>
right

[14:10:11.0000] <annevk>
and likely your buffer contains something more like CR LF CR LF XX XX XX

[14:10:23.0000] <annevk>
so you know you have to switch straight away

[14:10:58.0000] <annevk>
I never quite realized that before

[14:16:42.0000] <annevk>
so XHR does not expose state for when fetching starts (send() is invoked) and has two states for when headers are received and two states for when the object is uninitialized

[14:16:51.0000] <annevk>
great stuff

[14:26:14.0000] <dgorbik>
Hixie: hello! One small question about webvtt: "properties corresponding to the 'background' shorthand must be applied to the WebVTT cue background box rather than the List of WebVTT Node Objects." Why can't we apply all properties to cue background box?

[14:28:05.0000] <Hixie>
so long as there's no difference, doesn't matter

[14:29:14.0000] <scott_gonzalez>
Hixie: If an element that is currently not visible becomes visible directly under the cursor, do you think mouseover should be fired for that element?

[14:29:26.0000] <dgorbik>
Hixie: thanks

[14:29:26.0000] <scott_gonzalez>
Here's a page showing what I mean: http://dev-test.code.dev/behavior/mouseover-when-element-is-shown.html

[14:29:41.0000] <Hixie>
scott_gonzalez: dunno, there's no spec for mouseover as far as i know

[14:30:47.0000] <scott_gonzalez>
Hixie: Ok, that's what smaug____ thought you would say.

[14:30:50.0000] <Hixie>
heh

[14:31:11.0000] <scott_gonzalez>
So there's nowhere to get this standardized? Just talk to the browser vendors individually?

[14:31:22.0000] <Hixie>
lots of places to get it standardised, just noone doing it

[14:31:43.0000] <scott_gonzalez>
Well, would it be a new spec or added to an existing spec?

[14:32:29.0000] <Hixie>
depends if the person whom you find to spec it has a spec alreayd or not

[14:32:55.0000] <Hixie>
/me is of the opinion that there should be as many specs as editors, and only because it's bad to have multiple editors per spec

[14:33:09.0000] <Hixie>
(otherwise i'd say we should just have one spec, total, for the entire web platform)

[14:35:11.0000] <scott_gonzalez>
That brings me to the obvious next question: Would you spec it?

[14:35:19.0000] <Hixie>
i'd love to

[14:35:26.0000] <Hixie>
but i'm oversubscribed currently

[14:38:31.0000] <scott_gonzalez>
Ok, I'll start with browser vendors.

[15:11:58.0000] <Hixie>
1.2.3. => [1, 2, 3]

[15:12:02.0000] <Hixie>
.1.2.3 => ?

[15:12:25.0000] <Hixie>
[0.1, 2, 3] ?

[15:13:41.0000] <Hixie>
similarly, -1-2-3 => [-1, 2, 3]; what should -.1-.2-.3 go to?

[15:13:58.0000] <Hixie>
[-0.1, 2, 3] ? [-0.1, 0.2, 0.3] ?

[15:17:12.0000] <esprehn_>
Which algorithm is this?

[15:17:57.0000] <TabAtkins>
Hixie: Yes to the first question.  The latter to the second question.

[15:23:13.0000] <Hixie>
TabAtkins: k, i agree

[15:23:20.0000] <Hixie>
esprehn_: the parser for table magical sort

[15:23:42.0000] <esprehn_>
ah

[15:24:06.0000] <esprehn_>
having worked on a large number of business apps, whatever you choose is going to be wrong anyway :)

[15:25:51.0000] <esprehn_>
inevitably someone will file a bug about a cell in the wrong order, and you'll have to hack it up

[15:35:13.0000] <Hixie>
esprehn_: yeah

[15:35:18.0000] <Hixie>
esprehn_: but we can get the basics right at least

[15:36:06.0000] <Hixie>
if 1e1 and 1.0e1 are both the same as 10

[15:36:11.0000] <Hixie>
what should 1.e1 be?

[15:36:38.0000] <TabAtkins>
Ask JS.

[15:37:12.0000] <TabAtkins>
Apparently, the same as 1.0e1

[15:37:33.0000] <TabAtkins>
Unfortunately, that's different from CSS, which requires a digit after the ..

[15:41:34.0000] <Hixie>
--1--2 => ['-1', '-2'] ?

[15:41:44.0000] <Hixie>
---1---2 => ['-1', '-2'] ?

[15:41:45.0000] <Hixie>
no

[15:41:54.0000] <Hixie>
[-1, 2] maybe

[15:41:59.0000] <Hixie>
but even that, probably not

[15:42:06.0000] <esprehn_>
those should just be strings

[15:42:10.0000] <esprehn_>
'--1', '--2'

[15:42:45.0000] <esprehn_>
TabAtkins: The next counters spec needs to call the counter name the "name" not the "identifier"

[15:42:47.0000] <Hixie>
---10---2 should clearly sort as greater than ---2---2

[15:42:51.0000] <esprehn_>
/me is getting really tired of typing identifier

[15:42:58.0000] <Hixie>
so there's definitely numbers involved

[15:43:09.0000] <Hixie>
or maybe i should say, ---1---2 < ---1---10

[15:43:16.0000] <Hixie>
since the first number might be arguably negative

[15:43:19.0000] <esprehn_>
Hixie: you want credit card sort there

[15:43:28.0000] <Hixie>
what is that?

[15:43:32.0000] <esprehn_>
those aren't negative, it's an ascii sort

[15:44:01.0000] <esprehn_>
sort as if all those dashes were 0's

[15:44:12.0000] <Hixie>
why?

[15:44:17.0000] <Hixie>
that seems no less weird

[15:44:32.0000] <esprehn_>
because when you have dashes interspersed with numbers it's usually an obfuscation of a value

[15:44:45.0000] <esprehn_>
or it's a phone number I guess, but not when you have repeated dashes

[15:45:10.0000] <esprehn_>
---1---2 is not < ---1---10 unless it has fewer digits, That's not 10, it's 1 and then 0

[15:45:42.0000] <Hixie>
that seems like an equally wild guess to me

[15:45:56.0000] <esprehn_>
What's your use case where those are real numbers?

[15:46:11.0000] <esprehn_>
I'm talking about the real use case of the many tables I've seen with data like that, not guessing

[15:46:17.0000] <Hixie>
urls?

[15:46:21.0000] <esprehn_>
credit cards, account numbers, etc.

[15:46:23.0000] <Hixie>
i haven't got any use cases with multiple hyphens currently

[15:46:48.0000] <Hixie>
do you have an example of such a table i could study?

[15:47:01.0000] <esprehn_>
unfortunately not

[15:47:23.0000] <esprehn_>
it's not uncommon to show the first digit of some number, and then the last 4 though, or something vaguely like that

[15:48:14.0000] <esprehn_>
Consider something like amazon that shows Saved Credit Card: ******1234

[15:48:28.0000] <esprehn_>
So then ------10 and ------12

[15:48:29.0000] <Hixie>
seems like that would sort fine regardless

[15:50:14.0000] <esprehn_>
Hixie: hmm

[15:50:51.0000] <Hixie>
i agree that it means we should sort them as not negative

[15:50:59.0000] <Hixie>
but other than that, still seems best to sort numerically

[15:56:33.0000] <TabAtkins>
Hixie: Empty elements after separation are discarded?

[15:57:09.0000] <Hixie>
no, it's rather more involved than that

[15:57:17.0000] <Hixie>
right now i'm just trying to work out how to take numbers out of strings

[15:57:27.0000] <Hixie>
the rest is a separate problem (mostly already solved)

[15:58:37.0000] <esprehn_>
I might suggest looking at COBOL and ColdFusion's magical sorting and list operations

[15:59:39.0000] <Hixie>
will do, thanks


2013-02-26
[19:31:15.0000] <karlcow>
MikeSmith: I guess it is not Anne's version https://dvcs.w3.org/hg/url/raw-file/tip/Overview.html

[19:31:54.0000] <karlcow>
ah found http://url.spec.whatwg.org/

[21:00:26.0000] <Hixie>
what should 1.2a3.4a5.6 be treated like?

[21:00:58.0000] <Hixie>
1,2,3,4,5,6 and some strings? 1.2,3.4,5.6 and some strings? 1.2,3,4,5,6 and some strings?

[23:07:06.0000] <MikeSmith>
Hixie: I guess 1.2,3.4,5.6 would seem like the most intuitive

[23:07:11.0000] <MikeSmith>
unsurprising

[01:22:45.0000] <jgraham>
Argh. Where is zcorpan when you need him?

[01:24:35.0000] <jgraham>
gsnedders: yt?

[01:37:14.0000] <annevk5>
smaug____: so we have moz-blob which is incremental...

[01:45:35.0000] <smaug____>
yes

[01:45:45.0000] <smaug____>
which is why it is very different to the new proposal

[01:51:57.0000] <annevk>
I don't follow

[01:52:02.0000] <annevk>
smaug____: how is it different?

[01:53:07.0000] <smaug____>
oh, wait, you say incremental as latter Blobs containing all the data

[01:53:13.0000] <smaug____>
from the beginning

[01:53:59.0000] <annevk>
all I meant was available during LOADING

[01:54:03.0000] <smaug____>
sorry, I was thinking about the chunked thing

[01:54:26.0000] <smaug____>
/me checks who added moz-blob

[01:54:42.0000] <smaug____>
sounds like sicking-ish thing

[01:54:55.0000] <annevk>
yes

[02:01:20.0000] <smaug____>
I guess I need to change my mind

[02:02:00.0000] <smaug____>
the .iso usecase is quite valid one

[02:05:24.0000] <annevk>
smaug____: so we do the semantics we discussed yesterday?

[02:05:44.0000] <smaug____>
yeah

[02:05:49.0000] <smaug____>
but then, if we get incremental blobs and typedarrays, shouldn't we have partial data to

[02:05:55.0000] <smaug____>
I mean chunked data

[02:06:35.0000] <smaug____>
what was the original bug report

[02:06:46.0000] <smaug____>
w3c bug report

[02:06:55.0000] <smaug____>
is it about incremental or chunked

[02:06:59.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=21111 is for blob/arraybuffer during LOADING

[02:07:16.0000] <annevk>
The discussion about chunked resulted in the addition of stream

[02:07:26.0000] <annevk>
That discussion was mailing-list only

[02:07:32.0000] <smaug____>
so

[02:07:54.0000] <smaug____>
with incremental we're getting close to a stream like anyway

[02:08:30.0000] <annevk>
I'll ask why Stream is no good.

[02:10:10.0000] <smaug____>
because it is not implemented ?

[02:10:37.0000] <smaug____>
but really, incremental and chunked are so close to each others

[02:10:51.0000] <smaug____>
scripts can use incremental as chunked

[02:11:00.0000] <smaug____>
but memory usage would be just higher that way

[02:11:04.0000] <smaug____>
in some cases

[02:12:05.0000] <annevk>
smaug____: neither is blob during LOADING in WebKit...

[02:12:13.0000] <annevk>
smaug____: or in Gecko for the keyword "blob"

[02:12:49.0000] <annevk>
smaug____: and the Streams API is about incremental the way it is currently set up

[02:13:11.0000] <smaug____>
how is Stream better?

[02:13:29.0000] <smaug____>
(other than better name)

[02:13:46.0000] <annevk>
It's an object that incrementally expands and does not have a fixed .size

[02:14:09.0000] <smaug____>
eh

[02:14:17.0000] <annevk>
Arguably Blob should have been designed that way...

[02:14:46.0000] <smaug____>
/me re-reads the spec

[02:15:09.0000] <annevk>
I wonder how Streams API got published including StreamBuilder :-(

[02:15:15.0000] <smaug____>
I meant s/Stream/Stream API/

[02:15:45.0000] <smaug____>
so yes, are we talking about Stream interface or API

[02:16:01.0000] <annevk>
Stream is defined in the Streams API

[02:16:01.0000] <smaug____>
since I asked about API, but I guess you're talking about the interface

[02:16:16.0000] <annevk>
There's not much more to the spec...

[02:18:55.0000] <smaug____>
so, you'd get Stream from XHR , and then read it separate ?

[02:19:18.0000] <smaug____>
separately

[02:19:22.0000] <smaug____>
and not care about XHR

[02:19:29.0000] <annevk>
That's the same with Blob

[02:21:23.0000] <annevk>
I'm not entirely sure StreamReader has the correct design though :-(

[02:23:00.0000] <Ms2ger`>
Sounds like a good web API, then

[02:23:14.0000] <smaug____>
does it allow incremental and chunked...

[02:23:18.0000] <smaug____>
I don't quite see that

[02:24:06.0000] <annevk>
I think only incremental

[02:28:10.0000] <smaug____>
well, then adding something similar to moz-blob to XHR wouldn't make sense

[02:29:07.0000] <smaug____>
I would expect an API called Stream to deal with chunked data

[02:30:05.0000] <annevk>
Could we design it to handle both?

[02:31:41.0000] <smaug____>
well, what if there are two StreamReaders. First one reading chunked data, and then another reading incremental

[02:31:54.0000] <smaug____>
the latter would like to get all the data since the beginning

[02:32:13.0000] <smaug____>
but I'd like to be able to discard the already read data

[02:32:38.0000] <smaug____>
(that is a reason for moz-chunked-* in XHR)

[02:32:49.0000] <annevk>
I understand

[02:33:46.0000] <smaug____>
back in few minutes

[02:34:50.0000] <annevk>
smaug____: one question, does moz-blob create a new Blob object each time you access it?

[02:35:10.0000] <annevk>
I'll draft an email to public-webapps to sort this out

[02:49:33.0000] <annevk>
Oh smaug just left. How rude. Well I figured it out via testing anyway

[02:51:09.0000] <smaug____>
annevk: looks like moz-blob does not create a new object each time

[02:51:13.0000] <smaug____>
only if there is some new data

[02:51:24.0000] <annevk>
ah good to know

[02:51:52.0000] <smaug____>
and sorry being so rude :)

[02:52:26.0000] <smaug____>
so, will we need Stream and IncrementalStream. Though the latter sounds odd. It is more like IncrementalBlob

[02:56:42.0000] <annevk>
smaug____: oh, I reached the opposite conclusion :-)

[02:56:56.0000] <annevk>
smaug____: see public-webapps

[02:58:06.0000] <smaug____>
it wasn't really my conclusion :)

[02:58:11.0000] <annevk>
smaug____: given that an incremental Blob can be done via masquerade, all the additional API complexity of Stream does not seem worth it

[02:58:17.0000] <smaug____>
helsinki.fi, could you be a bit faster today

[02:58:44.0000] <smaug____>
ah

[02:59:59.0000] <annevk>
Hmm strange. Feras Moussa is listed as Invited Expert. Is he no longer at Microsoft?

[03:00:54.0000] <smaug____>
as of now, I'd like to have incremental and chunked in XHR

[03:00:59.0000] <smaug____>
but need to get more comments

[03:01:11.0000] <smaug____>
since I thought Stream was about chunked data

[03:01:28.0000] <smaug____>
but the spec doesn't say that

[03:01:38.0000] <smaug____>
or I can't find it

[03:01:57.0000] <smaug____>
s/Stream/StreamReader/

[03:02:02.0000] <MikeSmith>
annevk: Feras is no longer at Microsoft. But he intends to continue editing the Streams spec

[03:02:38.0000] <annevk>
smaug____: the API does not look like it's chunked, although maxSize does suggest that I suppose...

[03:02:53.0000] <annevk>
MikeSmith: I see

[03:12:00.0000] <gsnedders>
jgraham: Here now

[03:12:48.0000] <jgraham>
gsnedders: I was looking for Opera's postMessage tests

[03:12:51.0000] <jgraham>
But I found them

[03:13:01.0000] <jgraham>
They all need conversion though :(

[03:13:02.0000] <gsnedders>
Okay. I don't where to look anyway. :)

[03:14:07.0000] <jgraham>
It seems we are going to do that farcical thing where we ask Microsoft "are your tests good enough to take this spec forward?" And they say "yes of course they are, after all we pass them all".

[03:14:35.0000] <jgraham>
For messaging as well as web sockets

[03:14:48.0000] <gsnedders>
What about zcorpan's web sockets tests?

[03:15:06.0000] <jgraham>
gsnedders: They are still partially unconverted to testharness format

[03:16:44.0000] <jgraham>
I guess this is what I need to spend my evenings doing

[03:17:11.0000] <jgraham>
Rather than working on critic

[03:44:16.0000] <marcosc>
The JSON spec says that JSON text shall be Unicode (i.e., UTF-8 to 32). Chrome fails to parse UTF-16, big endian, no BOM. OTOH, FireFox refuse to parse any UTF-16, except UTF-16-LE with no BOM. Have not tested UTF-32.

[03:44:47.0000] <annevk>
marcosc: parse where?

[03:44:56.0000] <marcosc>
annevk: JSON.parse()

[03:45:07.0000] <annevk>
marcosc: that takes a JavaScript string

[03:45:18.0000] <marcosc>
ah

[03:45:48.0000] <annevk>
XMLHttpRequest only supports JSON encoded as utf-8

[03:46:07.0000] <marcosc>
annevk: I'm pulling in the JSON text through XHR

[03:46:40.0000] <annevk>
marcosc: it's already decoded at that point depending your server configuration and the specifics of how you're using XMLHttpRequest...

[04:01:07.0000] <marcosc>
annevk: in the XHR, when open() is called, what's the reason for dropping the <fragment> component from the URL?

[04:01:34.0000] <annevk>
marcosc: that's how HTTP works

[04:02:02.0000] <annevk>
marcosc: sounds like you're not reading http://xhr.spec.whatwg.org/ though which is much better

[04:02:15.0000] <annevk>
marcosc: and defers for that particular thing to Fetch

[04:02:18.0000] <marcosc>
ah! I'm not

[04:02:35.0000] <annevk>
(which I'm trying to work out now...)

[04:03:45.0000] <marcosc>
In the manifest spec, I really just want to say: behave as if performing an XHR open() request with URL set to bla, and method set to GET.

[04:04:14.0000] <marcosc>
Otherwise, I'm going to end up cloning a bunch of stuff from the XHR spec

[04:04:20.0000] <marcosc>
which sucks

[04:04:36.0000] <annevk>
marcosc: oh no, you want to use fetch

[04:04:49.0000] <marcosc>
fetch from HTML?

[04:04:52.0000] <annevk>
marcosc: yes

[04:04:56.0000] <marcosc>
ok

[04:05:05.0000] <annevk>
marcosc: until I've written Fetch and then everyone can use that

[04:05:19.0000] <annevk>
it will be glorious

[04:05:24.0000] <marcosc>
I can imagine! :)

[04:06:38.0000] <marcosc>
ok, so http://www.whatwg.org/specs/web-apps/current-work/#fetch is currently incomplete then.

[04:08:32.0000] <marcosc>
/me lunch

[04:16:01.0000] <annevk>
marcosc: nah it's complete, just not detailed (imo)

[04:16:25.0000] <annevk>
I wish Hixie was around

[04:34:45.0000] <odinho>
And not with a nice URL and its own easy hookpoint :]

[05:14:03.0000] <SteveF_>
marcosc: johnny kannis was probably before your time ;-)

[05:14:48.0000] <marcosc>
SteveF_: yep :)

[05:14:57.0000] <marcosc>
but I don't mind :)

[05:15:29.0000] <SteveF_>
marcosc: was following odd trains of thought and music while suffering from stomach cramps hitme were a great sydney pub rock band btw

[05:15:37.0000] <SteveF_>
hitmen

[05:16:31.0000] <SteveF_>
marcosc: wasn't meaning to make a wog connection...

[05:16:48.0000] <marcosc>
heh, now you have :)

[05:18:03.0000] <marcosc>
/me throws SteveF_ a rope out of the hole. Funky tunes: http://www.youtube.com/watch?v=TnjuGYU-gCA

[05:19:10.0000] <SteveF_>
/me ;-)

[05:19:53.0000] <marcosc>
/me gets all in the mood for some bad 80's rock 

[05:20:17.0000] <SteveF_>
/me seeing them drinking longnecks in that vid really took me back

[05:23:49.0000] <marcosc>
me too, I was 12 again :)

[05:23:55.0000] <SteveF_>
/me remember seeing the angels as an underager out in the western sydney beerbarns http://www.youtube.com/watch?v=RiOQzWTz3cM

[05:25:06.0000] <SteveF_>
marcosc: where did you live in oz?

[05:25:13.0000] <marcosc>
Brisbane

[05:26:04.0000] <SteveF_>
say no more

[05:29:39.0000] <SteveF_>
/me I'm a bankstown boy myself

[05:31:02.0000] <jgraham>
Are we supposed to hum that to the tune of uptown girl?

[05:31:18.0000] <annevk>
Please record if you do

[05:34:06.0000] <annevk>
aaah

[05:34:14.0000] <smaug____>
does anyone actually use microdata thing

[05:34:44.0000] <annevk>
smaug____: you'd have to elaborate on thing

[05:34:59.0000] <annevk>
smaug____: but e.g. http://schema.org/ backed by the search engines recommends using it to people

[05:35:15.0000] <smaug____>
"recommends" does mean anyone actually uses it

[05:35:20.0000] <smaug____>
er

[05:35:22.0000] <smaug____>
doesn't

[05:35:28.0000] <SteveF_>
/me context of 'bansktown boys boys don't cry' statement made by the honourable Paul Keating PM http://www.thepunch.com.au/articles/an-ode-to-paul-keating/

[05:36:07.0000] <annevk>
smaug____: if nobody is using it I wish they'd stop discussing it

[05:36:36.0000] <SteveF_>
his observation of marcosc's buddy John Howard "What we have got is a dead carcass, swinging in the breeze, but nobody will cut it down to replace him. "

[05:37:09.0000] <marcosc>
Oh lolz, slightlyoff! The comments here are hilarious: https://github.com/slightlyoff/async-local-storage/blob/master/src/async-local-storage.js

[05:38:58.0000] <jgraham>
They might be funny

[05:39:05.0000] <jgraham>
But they are not all on-base

[05:39:18.0000] <jgraham>
I have no idea why .length implied "ordered" for example

[05:39:32.0000] <marcosc>
oh, they are spot on

[05:39:57.0000] <marcosc>
Just a little out of character for the oh ever so eloquent slightlyoff

[05:40:02.0000] <jgraham>
(certainly in python it doesn't)

[05:40:35.0000] <jgraham>
(where len(set([1,2,1])) == 2, just like you would expect)

[05:41:17.0000] <jgraham>
(and you can't index a set by number there either)

[05:41:43.0000] <jgraham>
(or indeed a dict, which *also* has a __len__)

[05:46:28.0000] <jgraham>
Also, navigator??

[06:05:17.0000] <marcosc>
jgraham: yeah, navigator is that's a strange place to put that

[08:13:42.0000] <slightlyoff>
marcosc: dude, LS + IDB is enough to make anyone swear like a sailor

[08:38:18.0000] <annevk>
jgraham: I suggested navigator I think, where would you put it?

[08:43:06.0000] <marcosc>
slightlyoff: amen to that :)

[08:43:20.0000] <slightlyoff>
marcosc: i honestly don't understand transactions in IDB

[08:43:28.0000] <slightlyoff>
and I think I made a serious attempt to understand them

[08:43:45.0000] <slightlyoff>
I'm currently digging through chromium code to grok why FF and Chrome differ in timing/end-of-turn behavior

[08:43:51.0000] <zewt>
jgraham: yeah, "length", "count" and "size" mean exactly the same thing, and it's nonsensical to not use the same term for all data structures

[08:43:57.0000] <marcosc>
I haven't even gotten that far. I lost the plot and started swearing long even before getting the object store going

[08:43:58.0000] <slightlyoff>
not true

[08:44:09.0000] <slightlyoff>
zewt: length is a 1-dimensional measure

[08:44:20.0000] <slightlyoff>
it implies ordering

[08:44:26.0000] <zewt>
length does not imply ordering

[08:44:45.0000] <marcosc>
slightlyoff: I'm currently playing around with Q to get a better understanding of promises, so I can contribute a bit

[08:44:54.0000] <slightlyoff>
I will leave basic number theory as an exercise to the reader.

[08:44:55.0000] <tantek>
/me gets the popcorn and grabs a seat.

[08:45:01.0000] <zewt>
...

[08:45:19.0000] <slightlyoff>
tantek: sorry man, have go to do real work...no time for this = )

[08:45:27.0000] <zewt>
we're talking about "length" as a property of a data set, which has nothing to do with the length of a vector or a line in space

[08:45:29.0000] <tantek>
slightlyoff :)

[08:45:41.0000] <Ms2ger>
Clearly it should be "norm"

[08:45:51.0000] <slightlyoff>
tantek: but you know...if you think zewt isn't *just* a troll, I invite you to try

[08:45:53.0000] <jgraham>
"cardinality"

[08:46:08.0000] <jgraham>
slightlyoff: zewt isn't a troll

[08:46:12.0000] <zewt>
i don't care if it's "length" or "size" or "count" or "elephants", all i care is that it be the same term for all of arrays, maps, sets

[08:46:23.0000] <jgraham>
But you two rub each other up the wrong way something chronic

[08:46:41.0000] <karlcow>
love to hate

[08:46:46.0000] <tantek>
jgraham, you have to pay extra for that in SF.

[08:48:05.0000] <zewt>
(and since .length is what's already used by JS strings, it wins by default)

[08:48:39.0000] <karlcow>
/me is now diving into https://en.wikipedia.org/wiki/Countable_set

[08:49:29.0000] <annevk>
Map uses size

[08:49:47.0000] <zewt>
then map made a dumb mistake

[08:50:10.0000] <annevk>
zewt: it's not settled yet, you could argue it on es-discuss

[08:51:20.0000] <karlcow>
in my mind, `length` has a unit after it. When `count` does not have.

[08:51:57.0000] <jgraham>
karlcow: Then lenght is equally wrong for strings and arrays :)

[08:52:00.0000] <jgraham>
*length

[08:52:04.0000] <karlcow>
that said programming languages used mostly len()

[08:52:14.0000] <zewt>
karlcow: it sounds like you're thinking of "length" as a physical unit--that's simply a different concept of length

[08:52:25.0000] <annevk>
DOMTokenList uses .length

[08:52:41.0000] <karlcow>
zewt: Pardon my physics ;) that's my academic background.

[08:52:43.0000] <annevk>
but the tokens are ordered there iirc

[08:53:23.0000] <karlcow>
/me creates .howmany

[08:55:06.0000] <jgraham>
annevk: It would be super surprising if you had a Set and a SortedSet and they didn't implement the same API

[08:55:30.0000] <Ms2ger>
Sounds like something Java would do

[08:55:57.0000] <annevk>
jgraham: are you going to do something about it?

[08:56:09.0000] <zewt>
heh, also one of the sillier things C++'s STL does: it only exposes a method for something if it can be computed efficiently

[08:56:25.0000] <zewt>
so (iirc) you have .size on strings, but not linked lists; to get that you have to use a count method

[08:56:40.0000] <zewt>
which is the worst sort of academic API design

[08:57:00.0000] <jgraham>
annevk: By "do something" you mean "join es-discuss and argue about naming"?

[08:57:37.0000] <karlcow>
hmmm http://twitter.com/FakeOpvard/

[08:57:52.0000] <annevk>
jgraham: yes

[08:58:11.0000] <annevk>
Also, Blob.size

[08:58:44.0000] <annevk>
ProgressEvent.total

[08:58:49.0000] <annevk>
We're all over the map already.

[08:59:05.0000] <karlcow>
sweet, all the million ways of counting

[09:01:42.0000] <jgraham>
annevk: I'm going with "I probably have more valuable things to do than argue with slightlyoff that he is making the platform harder to learn for no good reason"

[09:04:07.0000] <tantek>
count: more a verb (method) than a noun (property) "Let me count the waysâ¦". length: physical 1-dimensional measure thus implying it depends on the thing you're measuring and how you're measuring it. size: could be arbitrary, but for some reason I associate strongly with "number of bytes this thing takes up in memory".

[09:04:40.0000] <annevk>
jgraham: pretty sure he doesn't follow es-discuss closely

[09:04:43.0000] <jgraham>
(I would argue that non-native speakers wouldn't get the slight semantic difference between "length" and "size", but since I am a native speaker and I have no idea where the idea that "length" implies "ordered" comes from, I don't think I even need that argument)

[09:05:21.0000] <jgraham>
(I can only imagine it comes from exposure to some other programming language (Java?) that makes that distinction)

[09:06:09.0000] <jgraham>
tantek: That "some reason" is presumably sizeof(t)

[09:06:28.0000] <zewt>
it smells like something taught by a well-intentioned college professor, then internalized and never properly questioned

[09:07:05.0000] <tantek>
we leave all the proper questioning to #whatwg naturally

[09:07:39.0000] <tantek>
jgraham - yes, that sounds right. from years of C(++) programming.

[09:08:05.0000] <zewt>
i have more years of C and C++ than any other language and I've never even heard of that distinction

[09:17:57.0000] <annevk>
Hixie: so, how is potential CORS fetch with "No CORS" different from fetch?

[09:18:07.0000] <karlcow>
jgraham: for size, I imagine volume, in my head. Maybe because of the French "taille".

[09:18:20.0000] <karlcow>
oh we didn't touch yet to quantity :p

[09:22:26.0000] <karlcow>
.vastness, .immensity, .magnitude if at least the naming could be more poetic

[09:24:34.0000] <dglazkov>
good morning, Whatwg!

[09:24:40.0000] <annevk>
karlcow: we don't want to make it worse

[09:24:46.0000] <annevk>
dglazkov: good afternoon

[09:25:09.0000] <annevk>
dglazkov: you used to hit tea time :p

[09:25:21.0000] <karlcow>
annevk: heh. But that would be more fun. :)

[09:25:44.0000] <annevk>
karlcow: only the perverse kind of fun, but I can see how that makes sense to you

[09:26:11.0000] <karlcow>
at least that would give "left to interpretation" a meaning.

[09:39:41.0000] <Hixie>
annevk: regular fetch doesn't label the thing as cross-origin

[09:53:02.0000] <annevk>
Hixie: sure, but is that a feature in some way?

[09:56:13.0000] <Hixie>
annevk: how do you mean?

[09:56:32.0000] <Hixie>
it's a feature for the spec, in that it needs to know for every <img> whether it's cors-same-origin or not

[09:56:50.0000] <annevk>
Hixie: is it a feature of "fetch" that you don't know the label?

[09:57:52.0000] <annevk>
Hixie: cause otherwise we could make it one algorithm

[09:58:02.0000] <annevk>
(might go offline for a minute or so, will read the minutes)

[09:58:10.0000] <annevk>
logs*

[10:01:07.0000] <odinho>
lol, minutes.

[10:01:22.0000] <odinho>
Too much W3C for you Anne.

[10:01:45.0000] <odinho>
Or formalized meetings I guess.

[10:07:04.0000] <Hixie>
annevk: well i don't really care how you implement it, so long as the API doesn't change :-)

[10:07:29.0000] <Hixie>
annevk: the key is that when calling this algorithm, i don't know what the mode is

[10:07:47.0000] <Hixie>
annevk: i just "Do a potentially CORS-enabled fetch of the resulting absolute URL, with the mode being the state of the element's crossorigin content attribute, the origin being the origin of the script element's Document, and the default origin behaviour set to taint" or similar

[10:08:06.0000] <Hixie>
annevk: and then that returns a resource that is "either CORS-same-origin or CORS-cross-origin"

[10:08:20.0000] <Hixie>
annevk: i think it would be confusing to have the regular fetch algorithm returning CORS states

[10:08:35.0000] <Hixie>
annevk: since every caller would ignore it

[10:09:59.0000] <annevk>
but I think at some point every caller will turn into a potential CORS-caller

[10:10:28.0000] <annevk>
but yeah, not knowing the CORS-mode makes sense, and we should have "No CORS"

[10:10:53.0000] <annevk>
I was just wondering whether there's a material difference between the two which I didn't see

[10:17:44.0000] <annevk>
Hixie: also see email about Anonymous mode

[10:19:18.0000] <annevk>
odinho: actually surprisingly few these days, WHATWG ftw

[10:19:47.0000] <Hixie>
how do you set Origin: to a unique origin?

[10:20:00.0000] <Hixie>
and does Referer: really gets set to about:blank?

[10:20:04.0000] <annevk>
Hixie: Origin: null

[10:20:17.0000] <annevk>
Hixie: I think that makes Referer omitted

[10:21:07.0000] <Hixie>
so wait, why isn't CORS just doing all this automatically when one sets the flag?

[10:28:36.0000] <zewt>
hmm, something that seems like it should be easy but i'm drawing a blank

[10:29:11.0000] <zewt>
i have some CSS drawing a thing (gradient background, rounded corners), used in one UI; i need to export that rendering (with alpha) to a PNG for use in a non-HTML element with similar styles

[10:30:40.0000] <annevk>
Hixie: XHR has both anonymous and without credentials

[10:30:53.0000] <annevk>
Hixie: anonymous is an extremer variant

[10:31:00.0000] <zewt>
bleh, guess it's easier to recreate it in photoshop than to figure out a way to do this

[10:31:23.0000] <Hixie>
annevk: confoosing

[10:31:39.0000] <Hixie>
annevk: why so many?

[10:31:39.0000] <annevk>
sorry, if I would design this now it'd be way different

[10:31:50.0000] <Hixie>
hehe

[10:31:53.0000] <Hixie>
i know that feeling

[10:31:57.0000] <Hixie>
bbiab

[10:32:01.0000] <annevk>
initially we just had withCredentials

[10:32:10.0000] <annevk>
and then people wanted a mode without Origin or Referer

[10:32:18.0000] <annevk>
without any identifying information

[10:32:31.0000] <annevk>
and they got enough backing from silly implementors

[10:32:51.0000] <odinho>
Silly!

[10:34:16.0000] <Ms2ger>
/me never designs anything for that reason

[10:34:44.0000] <annevk>
Ms2ger: was Text.serializeXXX not you?

[10:35:29.0000] <Ms2ger>
Never got implemented, did it? ;)

[10:36:20.0000] <annevk>
Ms2ger: "never designs" is clearly false though

[10:43:36.0000] <TabAtkins>
zewt: That's what screenshots are for.

[10:54:16.0000] <zewt>
no alpha

[10:54:31.0000] <TabAtkins>
Ah, that's true.  Darn.

[10:54:42.0000] <TabAtkins>
No way, then, since you can't draw DOM into <canvas> yet.

[12:40:25.0000] <JonathanNeal>
hello

[13:00:12.0000] <rillian>
howdy

[13:02:48.0000] <JonathanNeal>
So, how does <template> get around not having any logic, say for if statements or loops?

[13:04:21.0000] <TabAtkins>
JonathanNeal: It has loops.  I think we have a way to avoid generating things, as well, which is basically an if.

[13:04:31.0000] <TabAtkins>
(Don't know if that's in the current revision of the spec.)

[13:08:09.0000] <JonathanNeal>
Is there a draft of the spec that you think might address these things?

[13:13:03.0000] <jamesr>
anyone have a good readymade rant about linking to /TR/ ?

[13:13:17.0000] <jamesr>
JonathanNeal, https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/templates/index.html

[13:13:30.0000] <Hixie>
jamesr: "it's out of date"

[13:14:45.0000] <jamesr>
JonathanNeal, that's pretty heavy on technical detail and light on explanations it seems

[13:15:16.0000] <JonathanNeal>
Yea, I'm trying to extrapolate an example.

[13:16:28.0000] <JonathanNeal>
> Just after the step labeled "Loop" in the algorithm to reset the insertion mode appropriately, add the following step: If node is a template element, then switch the insertion mode to the current template insertion mode and abort these steps. Modify the step which begins "If node is a head element..." to be â¦

[13:48:59.0000] <JonathanNeal>
https://twitter.com/jon_neal/status/306521507784445952

[13:49:11.0000] <JonathanNeal>
IE10 is out for Windows 7.

[14:07:41.0000] <ronaldmansveld>
Does any of you happen to have experience with the w3c community groups?

[14:08:04.0000] <ronaldmansveld>
As in: has any of you been part of one?

[14:13:39.0000] <jgraham>
Yes

[14:16:52.0000] <ronaldmansveld>
jgraham, what I take from it, these groups create reports that may or may not be used by the w3c to use as the foundation for a working draft, right? So it's like the very first stage of creating specs

[14:17:37.0000] <TabAtkins>
ronaldmansveld: Basically, yes.  They're not WGs, so can't produce specs themselves, but it gives a nice gathering-place for interested parties to hash out early ideas into something presentable.

[14:18:14.0000] <ronaldmansveld>
jgraham, and secondly, how do these groups work, cause for what I can see some have been created, have contributors, but seem to be doing nothing for like a year

[14:18:59.0000] <ronaldmansveld>
TabAtkins, thanks :) That was basically my idea of what they would be doing

[14:37:38.0000] <jgraham>
ronaldmansveld: Well it's not really clear that they work :)

[14:37:45.0000] <jgraham>
Creating a group is easy

[14:38:15.0000] <jgraham>
Creating a critical mass of interested, and relevant, parties actually working on a problem in a meaningful way is hard

[14:38:50.0000] <jgraham>
e.g. if you want to suggest something new for browsers you really want browser vendors on board

[14:39:05.0000] <jgraham>
So you are much better off using WHATWG since they are already there

[14:39:08.0000] <ronaldmansveld>
hmm, i see

[14:39:33.0000] <ronaldmansveld>
cause in this case there's one group I'm interested in working with, since it touches what I deal with on a daily base

[14:40:13.0000] <ronaldmansveld>
but it seems like nothing happened since they started almost a year ago

[14:40:57.0000] <jgraham>
Which group?

[14:41:22.0000] <ronaldmansveld>
multilingual web site

[14:41:28.0000] <ronaldmansveld>
http://www.w3.org/community/mws/

[14:46:19.0000] <jgraham>
Well the good news is that's nothing browser related

[14:46:44.0000] <jgraham>
So I guess just try sending mail to the group list and see if you can get some momentum going?

[14:47:16.0000] <ronaldmansveld>
I'll wait for my application to come through, and then I will, thanks :)

[14:47:59.0000] <ronaldmansveld>
(and even though the start-up document does mention browser-related changes, I disagree with that, but that's something to discuss with the group)

[15:23:21.0000] <JonathanNeal>
All web developers should rejoice! https://twitter.com/jon_neal/status/306544841641308160 Automatic updates in IE10 are enabled by default on first run http://i.imgur.com/j5jFjUa.png

[15:46:08.0000] <TabAtkins>
\o/


2013-02-27
[16:12:28.0000] <aklein>
hsivonen: hey there. I'd ask Hixie too, but he seems to be away, so I'm going to ask your opinion first. when the HTML parser spec says to look in the stack of open elements for an element with the "same tag name as that of the token", is it supposed to imply a namespace check as well as localName (the token, naturally, has no namespace)?

[16:17:57.0000] <gsnedders>
aklein: If it doesn't that's a spec bug.

[16:18:35.0000] <gsnedders>
(Regardless, is there any way to create a case where the namespaces differ?)

[16:18:39.0000] <gsnedders>
(I can't think of any)

[16:20:02.0000] <gsnedders>
(Becuase I think it assumes they cannot differ.)

[16:20:12.0000] <gsnedders>
(But it'd be nice to have the assumption explicit)

[16:20:19.0000] <aklein>
gsnedders: foreign content allows non-HTML elements onto the stack, and MathML (at least; may apply to SVG too) has cases that go back to HTML mode

[16:20:44.0000] <gsnedders>
aklein: But when can you hit any of the same-tag-name-as-that-of-the-token cases like that?

[16:22:13.0000] <gsnedders>
Given you break out of foreign content when you hit anything that causes that?

[16:22:40.0000] <aklein>
sadly not everything breaks out of foreign content

[16:22:53.0000] <gsnedders>
But what of things that search the stack?

[16:22:56.0000] <aklein>
thead, tbody, and tfoot, for example, are allowed in foreign content

[16:23:23.0000] <gsnedders>
But closing any of them merely pops the item off the top of the stack, if it is the top of the stack.

[16:23:36.0000] <gsnedders>
And if it's the top of the stack, they'll be handled as a foregin content element anyway.

[16:23:44.0000] <gsnedders>
s/element/tag/

[16:24:29.0000] <aklein>
http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#parsing-main-intbody is one case where this comes up

[16:25:27.0000] <gsnedders>
Oh, the "clear the stack back to a table body content".

[16:25:48.0000] <aklein>
yeah, there's more than just closing that element

[16:26:23.0000] <gsnedders>
Well, if it's comparing with the current node I'd assume it's namespace, localName tuple.

[16:26:26.0000] <gsnedders>
/me wonders what UAs do.

[16:26:42.0000] <aklein>
but tokens don't have any namespace

[16:27:10.0000] <gsnedders>
The stack of open elements isn't tokens, though

[16:27:16.0000] <zewt>
does anybody actually implement the stream API (StreamBuilder, StreamReader), or is that still just a proposal spec?

[16:27:45.0000] <aklein>
right, the stack clearly has elements in it

[16:28:05.0000] <gsnedders>
aklein: And it's clear it back to one of these elements (as named, per xref in HTML NS)

[16:28:07.0000] <jamesr>
zewt, is that this? https://bugs.webkit.org/showdependencytree.cgi?id=110194&hide_resolved=1

[16:28:23.0000] <gsnedders>
aklein: On the other hand, the "same tag name as that of the token" case is ambiguious

[16:28:24.0000] <jamesr>
(i'm not sure, haven't looked at those patches)

[16:28:57.0000] <jamesr>
and there's a link to a public-webapps discussion

[16:28:59.0000] <zewt>
(mostly curious about whether that spec is actually going anywhere, not trying to use it)

[16:29:08.0000] <jamesr>
zewt, that's a good question!

[16:29:21.0000] <jamesr>
somebody cares enough to post patches to WK

[16:30:48.0000] <aklein>
gsnedders: yup, it's that ambiguity I'm wondering about. it seems totally reasonable to assume it means "in the html namespace", just want to make sure there's not some case where comparing only tag names is important

[16:31:32.0000] <Hixie>
aklein: pretty sure the namespace can't matter, but do you have a sample string input that i can work through to see the problem?

[16:31:53.0000] <gsnedders>
Hixie: http://software.hixie.ch/utilities/js/live-dom-viewer/saved/2114

[16:32:26.0000] <gsnedders>
Everybody ignores namespaces, which seems bad

[16:32:32.0000] <gsnedders>
Except IE.

[16:32:35.0000] <gsnedders>
Not tested that.

[16:34:41.0000] <gsnedders>
IE10/Win8 ignores namespaces too.

[16:35:15.0000] <gsnedders>
/me would much rather change behaviour everywhere, FWIW

[16:35:57.0000] <Hixie>
well that input is obviously bogus, right? not clear what the obvious answer is; what the spec says seems reasonable on the face of it.

[16:36:20.0000] <aklein>
I definitely can't think of any non-bogus inputs :)

[16:37:12.0000] <aklein>
Hixie: I think the bad thing is to have a mismatch between the "is this in scope?" check and the further manipulation of the stack/tree

[16:37:16.0000] <gsnedders>
Hixie: Sometimes you're compared a token name with an element name, and sometimes an element name with an element name. Does the latter imply a namespace check? The former cannot have one.

[16:37:31.0000] <gsnedders>
Hixie: That seems bad.

[16:37:45.0000] <Hixie>
the spec never implies anything.

[16:38:49.0000] <gsnedders>
"Search through the stack of open elements till you reach [xref'd] html element". That has a namespace check, right?

[16:39:04.0000] <gsnedders>
As that xref is to the http://www.w3.org/1999/xhtml html element

[16:39:20.0000] <Hixie>
well if it says to reach an actual specific kind of element from a specific vocabulary, sure, but then that's not comparing element names

[16:39:24.0000] <Hixie>
it's comparing element type identity

[16:39:58.0000] <gsnedders>
Then we're also searching through it comparing token name to element name.

[16:40:03.0000] <aklein>
the algorithm says "If node is the target node, terminate in a match state."

[16:40:07.0000] <gsnedders>
What's the element's name? Where's is the term element name.

[16:40:14.0000] <gsnedders>
*term element name defined?

[16:40:24.0000] <Hixie>
i don't understand any of the last four lines :-)

[16:40:25.0000] <aklein>
so I think it's that "is the target node" check that's important here

[16:40:54.0000] <aklein>
Hixie: I'm looking at http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#has-an-element-in-the-specific-scope

[16:41:13.0000] <gsnedders>
/me looks more closely at the spec

[16:41:26.0000] <gsnedders>
/me votes for adding this as a TC to html5lib regardless :)

[16:42:13.0000] <Hixie>
i guess it's weird that <svg><tbody><foreignobject></tbody> is different than <svg><tbody><foreignobject><div></tbody>

[16:42:20.0000] <gsnedders>
Hixie: The spec refers to "tag name" for element. This is undefined.

[16:42:26.0000] <gsnedders>
Hixie: How is that different?

[16:42:33.0000] <Hixie>
aklein: in gsnedders' test case, that doesn't come up

[16:42:44.0000] <Hixie>
gsnedders: </tbody> in the second check aborts at <foreignobject>

[16:42:51.0000] <Hixie>
gsnedders: so it gets ignored

[16:42:58.0000] <gsnedders>
Hixie: Where does it abort?

[16:43:00.0000] <aklein>
Hixie: ah, it does in the MathML Text Integration Point cases I've been dealing with

[16:43:15.0000] <Hixie>
gsnedders: "in body" any other end tag, because foreignobject is special

[16:43:43.0000] <Hixie>
file bugs or send mail to the whatwg list

[16:43:45.0000] <Hixie>
i have to go

[16:44:42.0000] <aklein>
Hixie: will do

[16:45:40.0000] <gsnedders>
Is <svg><foreignobject><div> a parse error?

[16:46:40.0000] <gsnedders>
(Am I being stupid here, where does opening foreignobject do any magic?)

[16:47:01.0000] <gsnedders>
Oh, at the top of the Tree construction section.

[16:49:15.0000] <gsnedders>
aklein: CC me on bug/email, plz?

[16:54:24.0000] <gsnedders>
Oh, my TC hits a different case to what I thought it did!

[16:54:25.0000] <gsnedders>
Gah!

[16:57:14.0000] <aklein>
gsnedders: may take me a few days, I stumbled onto this quite by accident while working on something else

[16:57:38.0000] <gsnedders>
aklein: I'm unlikely to look at it any time at all soon :)

[16:58:27.0000] <aklein>
gsnedders: sounds like a plan :)

[16:58:48.0000] <gsnedders>
(currently at ~9k unread emails on whatwg :))

[18:10:22.0000] <muyyatin>
What's the best way to submit a comment/bug about the Canvas HTML5 spec that isn't a 1-line description? In the inline "Submit Review Comment" part?

[18:36:57.0000] <zewt>
comments on the whatwg mailing list, bug -> w3 bug tracker, whatwg component (or the list)

[18:51:45.0000] <zewt>
why is every calculator since after XP garbage

[18:52:50.0000] <zewt>
i guess osx's is a bit less terrible than win7's, since it doesn't clear the value when you switch from "programmer" to "math"

[18:53:09.0000] <zewt>
converting 0xA0 from hex to decimal then dividing by 255 in win7's calc is an adventure

[18:54:22.0000] <muyyatin>
No clue, I generally switch out to Python for simple things like that, or Mathematica if I really need it. Haven't actually opened up the 'calculator' on this computer ever.

[18:54:58.0000] <jamesr>
zewt, http://lmgtfy.com/?q=0xa0+%2F+255

[18:57:06.0000] <zewt>
osx's unicode mode is cute, if a bit weird in a calculator

[18:57:36.0000] <zewt>
xp's calc was pretty efficient, but it follows the usual software development pattern: once something is done well, the next few years of development are dedicated to ruining it

[19:38:31.0000] <zewt>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=21134 there are like 10 of these bugs and am i the only one that thinks there's something fundamentally crazy going on

[19:38:50.0000] <GPHemsley>
/me keeps a graphic calculator on his desk

[19:39:04.0000] <GPHemsley>
s/graphic/graphing/ perhaps

[19:39:30.0000] <zewt>
i had one in a box from highschool, i think i tossed it at some point

[19:39:48.0000] <zewt>
ti-85 i think, heh

[19:40:12.0000] <zewt>
if i can't find software to do a better job than a piece of plastic from the mid-90s, i need to find a new line of work

[19:40:20.0000] <GPHemsley>
:)

[19:40:29.0000] <GPHemsley>
mine's a TI-83 Plus

[19:40:33.0000] <GPHemsley>
from circa 2003

[19:40:35.0000] <GPHemsley>
so, yeah

[23:11:21.0000] <Hixie>
1e3.1 => [1,3,1], [1000,1], [1, 3.1], [1259], something else ?

[23:13:15.0000] <annevk>
Hixie: defer to @sil

[23:13:24.0000] <Hixie>
heh

[23:13:37.0000] <Hixie>
i'll go with [1, 3.1] for now

[23:37:01.0000] <Hixie>
how do you do a js switch statement case label that matches a range of characters?

[23:37:04.0000] <Hixie>
e.g. 'a' .. 'z' ?

[23:37:52.0000] <Hixie>
i guess there's just no way to do that with switch

[23:37:53.0000] <Hixie>
oh well

[23:40:44.0000] <annevk>
if/else ftw

[23:41:24.0000] <annevk>
if only JavaScript had elif

[23:41:33.0000] <Hixie>
(perl and pascal can both do the switch on a range thing)

[23:42:00.0000] <Hixie>
(though in perl's case it's because it's switch statement is the most ridiculous over-engineered monstrosity ever)

[23:42:05.0000] <Hixie>
its

[23:42:19.0000] <Hixie>
what's special about elif?

[23:42:27.0000] <Hixie>
isn't that just a different way to spell else if?

[23:43:14.0000] <Hixie>
ok, my algorithm is complete

[23:43:15.0000] <Hixie>
http://software.hixie.ch/utilities/js/sorter/

[23:43:18.0000] <annevk>
yeah, it makes the construct more readable I think

[23:43:21.0000] <Hixie>
just need to turn that into prose

[23:43:32.0000] <Hixie>
"elif" is more readable than "else if"? o_O

[23:44:00.0000] <annevk>
that's a lot of code

[23:44:17.0000] <Hixie>
yeah

[23:44:30.0000] <Hixie>
it's not particularly optimised for anything

[23:46:31.0000] <Hixie>
nn

[23:47:11.0000] <annevk>
g'night!

[23:47:18.0000] <Hixie>
(if you come up with anything that the algorithm doesn't handle, other than hex and two-part version numbers, let me know)

[23:47:34.0000] <Hixie>
(anything that actually comes up in real tables, that is)

[01:16:44.0000] <MikeSmith>
jgraham: jetty servers on w3c-test.org are running again

[01:16:57.0000] <MikeSmith>
so those tests should be able to connect

[01:28:54.0000] <jgraham>
MikeSmith: Thanks

[01:36:54.0000] <jgraham>
/me verifies that IE passes all tests Microsoft released

[01:37:04.0000] <jgraham>
In related news: sky blue

[01:37:33.0000] <MikeSmith>
heh

[01:38:15.0000] <gsnedders>
jgraham: Are you sure? Looks gray here.

[01:39:07.0000] <jgraham>
In related news: Weather in Scotland miserable

[01:44:14.0000] <MikeSmith>
>>The first Proposed Recommendation for XHTML 1.0 had to be sent back to the HTML Working Group because it defined different names for the <img> element depending on whether it appears in a "Strict", "Transitional", or "Frameset" document<<

[01:44:42.0000] <MikeSmith>
I don't understand what "defined different names for the <img> element" means

[01:44:58.0000] <MikeSmith>
http://lists.w3.org/Archives/Public/www-tag/2013Feb/0166.html

[01:45:45.0000] <darobin>
I think various XHTML products are the only ones ever to get kicked back at PR stage

[01:46:16.0000] <darobin>
mention kicking stuff at PR stage and SimonSapin show up

[01:46:22.0000] <darobin>
it's spooky

[01:47:12.0000] <gsnedders>
MikeSmith: Nor I, not even going all the way back to the oldest WD, through the first PRâ¦

[01:47:16.0000] <SimonSapin>
Hi :)

[01:48:07.0000] <gsnedders>
SimonSapin: Have you been renaming stuff in XHTML 1.0 after first PR?

[01:48:41.0000] <SimonSapin>
gsnedders: I was not born yet

[01:49:21.0000] <Ms2ger`>
I find that hard to believe

[01:51:04.0000] <gsnedders>
Even /I/ was born then.

[01:51:25.0000] <Ms2ger`>
And you're what, 15 now?

[01:51:53.0000] <gsnedders>
Ms2ger`: I'd be 15 in I was born the year before XHTML 1.0's first PR.

[01:51:58.0000] <gsnedders>
s/in/if/

[01:52:10.0000] <Ms2ger`>
And were you?

[01:52:35.0000] <gsnedders>
No.

[01:53:04.0000] <gsnedders>
I was born seven years prior.

[01:53:22.0000] <Ms2ger`>
/me counts

[01:53:23.0000] <Ms2ger`>
22?

[01:53:39.0000] <hsivonen>
I wish we had the locale-sensitive HTML parser behavior-affecting prefs in one file instead of being spead out across a zillion localization repos...

[01:53:51.0000] <gsnedders>
Ms2ger`: 20, turn 21 in April.

[01:54:03.0000] <gsnedders>
14+7 = 21.

[01:54:17.0000] <Ms2ger`>
Ah, prior to the RP

[01:54:18.0000] <Ms2ger`>
PR

[01:54:26.0000] <jgraham>
RIP?

[01:54:32.0000] <SimonSapin>
My previous sentence was not true. But I barely knew what a Working Group was when CSS 2.1 went to PR.

[01:54:48.0000] <Ms2ger`>
Which PR? ;)

[01:54:56.0000] <SimonSapin>
I think that darobin was talking about this: https://lists.w3.org/Archives/Member/w3c-ac-forum/2013JanMar/0056.html renaming Page Visibility

[01:55:08.0000] <SimonSapin>
the last one

[01:55:27.0000] <darobin>
SimonSapin: actually we were talking about another

[01:55:28.0000] <darobin>
<MikeSmith> >>The first Proposed Recommendation for XHTML 1.0 had to be sent back to the HTML Working Group because it defined different names for the <img> element depending on whether it appears in a "Strict", "Transitional", or "Frameset" document<<

[01:55:34.0000] <Ms2ger`>
http://ln.hixie.ch/?start=1063663989&count=1

[01:55:36.0000] <darobin>
and then you show up :)

[01:55:59.0000] <SimonSapin>
yeah, but I had nothing to do with XHTML

[01:56:50.0000] <hsivonen>
SimonSapin: not trolling at all in the first sentence of that ac-forum post. :-)

[01:56:51.0000] <darobin>
so you claim, sir

[01:57:13.0000] <SimonSapin>
hsivonen: I donât know what you mean ;)

[01:57:46.0000] <darobin>
hsivonen: yeah, I thought the same â it's good to have trolling AC reps around

[01:58:17.0000] <Ms2ger`>
Sad that tobie isn't one anymore ;)

[01:58:44.0000] <odinho>
Yeah, who took over for fb?

[01:58:50.0000] <Ms2ger`>
Simon Stewart

[01:59:50.0000] <odinho>
Ms2ger`: okay thanks :-)

[02:04:32.0000] <annevk>
It's a good day today. I once again think I know everything I need to know to work out the fetch algorithm.

[02:05:37.0000] <jgraham>
Days when you are all set up for crushing disappointment are good days?

[02:09:12.0000] <annevk>
jgraham: I'm eager to learn

[02:10:16.0000] <annevk>
And if it all goes to shit it's still good as I'll meet beverloo at the bar tonight

[02:10:25.0000] <darobin>
the crowd goes wild

[02:10:33.0000] <darobin>
/me go annevk! go annevk!

[02:11:06.0000] <darobin>
annevk: are you covering non-GET in fetch as well?

[02:11:14.0000] <darobin>
(or planning to at some point)

[02:11:29.0000] <annevk>
darobin: it covers all HTTP requests basically

[02:11:39.0000] <annevk>
darobin: from whatever API endpoint

[02:11:53.0000] <annevk>
(conceptually, implementations are quite a mess still)

[02:11:53.0000] <darobin>
good, there are some interesting discrepancies with some methods

[02:32:12.0000] <annevk>
I wish Gmail had Opera Mail's "ignore thread" feature

[02:32:38.0000] <hasather>
annevk: http://support.google.com/mail/bin/answer.py?hl=en&answer=47787

[02:34:11.0000] <annevk>
hasather: it seems that does not work for auto-archived messages?

[02:35:22.0000] <othermaciej>
ac-forum trolling? this I must see

[02:36:43.0000] <annevk>
hasather: Yeah, so www-archive is automatically archived already. What I want I suppose is to mark any new messages in certain threads as read if the thread is of no interest to me.

[02:40:30.0000] <SimonSapin>
http://w3cmemes.tumblr.com/post/44133608152/the-most-interesting-man-in-the-world-is-shifting almost sounds like other discussions

[02:55:22.0000] <marcosc>
Is there some way in JS to get what the browser is sending as the "Accept-Language:" (without doing gymnastics)?

[02:58:03.0000] <marcosc>
/me puts on his gym outfit, and chalks up his hands, just in case

[02:59:41.0000] <annevk>
marcosc: you have to be more specific

[02:59:47.0000] <annevk>
marcosc: also, the answer is likely "no"

[02:59:58.0000] <marcosc>
yeah, I think I remember the answer being no

[03:05:39.0000] <darobin>
marcosc: it depends on what you mean by "gymnastics"

[03:05:50.0000] <darobin>
you can make a request to a header echo service

[03:06:25.0000] <darobin>
(sorry to hear about Joey man :( I hope things won't be too bad)

[03:08:41.0000] <marcosc>
darobin: gymnastics = basically pulling them from the server. Or somehow coercing them out of XHR, which doesn't seem possible.

[03:09:04.0000] <darobin>
yeah you can't do that

[03:09:12.0000] <darobin>
well

[03:09:19.0000] <darobin>
maybe you could with NavigationController :)

[03:09:22.0000] <marcosc>
darobin: thanks, re: Joey. He's a tough bastard... little cancer won't slow him down :)

[03:09:23.0000] <darobin>
but not yet for sure

[03:09:31.0000] <darobin>
yeah, keep going Joey!

[03:10:02.0000] <marcosc>
:)

[03:10:29.0000] <marcosc>
darobin: is there any rough draft of NavigatorController?

[03:11:30.0000] <darobin>
/me shakes fist at slightlyoff

[03:11:48.0000] <darobin>
slightlyoff: can you please add marcosc to the NavCon repo? Or make it public :)

[03:13:30.0000] <annevk>
slightlyoff is off

[03:13:59.0000] <annevk>
try again in seven days

[03:19:45.0000] <hsivonen>
annevk: I'd appreciate your review of https://developer.mozilla.org/en-US/docs/Localizations_and_character_encodings

[03:21:51.0000] <annevk>
/me looks

[03:22:59.0000] <annevk>
hsivonen: it should establish context at the beginning a bit clearer, since some might mistakenly think this applies to localization files

[03:23:23.0000] <annevk>
hsivonen: well it does, but the title does not

[03:26:51.0000] <hsivonen>
annevk: what title would you suggest?

[03:27:18.0000] <annevk>
sorry, I tried to think of something better but couldn't

[03:28:20.0000] <annevk>
hsivonen: encoding names are not consistently cased

[03:28:25.0000] <annevk>
hsivonen: Encoding Standard is not linked

[03:28:31.0000] <annevk>
hsivonen: other than that looks good to me

[03:29:25.0000] <hsivonen>
annevk: reload for linkification

[03:29:27.0000] <hsivonen>
annevk: thanks

[03:30:48.0000] <hsivonen>
annevk: made casing Gecko-canonical

[03:31:18.0000] <annevk>
hsivonen: k, I wonder if we should introduce "display name" as a property of encodings that does the non-lowercase thing

[03:31:27.0000] <annevk>
(in the standard)

[03:31:46.0000] <annevk>
oh well, maybe some day

[03:54:32.0000] <SimonSapin>
Is U+00AD  SOFT HYPHEN (SHY) the only character that suggests line breaks?

[04:00:20.0000] <annevk>
there's also a zero-width space of sorts

[04:00:33.0000] <annevk>
and prolly others, because you know, Unicode

[04:03:04.0000] <annevk>
SimonSapin: http://www.unicode.org/reports/tr14/ (although I believe people have issues with this document)

[04:03:33.0000] <annevk>
SimonSapin: (but my recollection is from 3-7 years ago so that may have changed)

[04:11:41.0000] <SimonSapin>
Weâre implementing http://www.w3.org/TR/css3-text/#hyphens in WeasyPrint

[04:11:48.0000] <SimonSapin>
(0.17 should be released today)

[05:02:47.0000] <annevk>
I think http://wiki.whatwg.org/wiki/Fetch#Pseudo-code now reflects the new requirements. I guess next I should make the whole thing async.

[05:42:15.0000] <marcosc>
MikeSmith: when I go to http://lists.w3.org/Archives/Public/public-html/ I don't see the [subscribe] option?

[05:42:39.0000] <MikeSmith>
hmm

[05:42:48.0000] <MikeSmith>
dunno why

[05:43:07.0000] <jgraham>
marcosc: Can't you take a hint?

[05:43:50.0000] <MikeSmith>
/me sends a not to sysreq

[05:44:17.0000] <marcosc>
jgraham: hehe

[05:52:08.0000] <annevk>
isn't the idea that you have to join the WG?

[05:52:51.0000] <annevk>
that way your patented inventions can only go in via one of the many side channels

[05:56:59.0000] <SimonSapin>
public-html: "DB-Backed : yes (40318 <https://www.w3.org/2000/09/dbwg/details?group=40318>)"

[06:00:29.0000] <annevk>
also https://www.w3.org/services/list-audit/query?queryList=public-html

[06:01:13.0000] <MikeSmith>
it can be DB-backed and still open to self-subscribing I think

[06:01:36.0000] <MikeSmith>
I do know at least that anybody is free to post to it

[06:01:59.0000] <MikeSmith>
as long as they have gone through the archive-approval step at some point

[06:03:05.0000] <MikeSmith>
I wonder what auto_unsubscribe means

[06:03:27.0000] <MikeSmith>
what does or auto_subscribe

[06:03:38.0000] <MikeSmith>
/me asks on sysreq channel

[06:19:23.0000] <MikeSmith>
so yeah anybody can subscribe to public-html by sending "subscribe" to public-html-requestâwo

[06:19:48.0000] <MikeSmith>
dunno why [subscribe] button isn't shown for it on http://lists.w3.org/Archives/Public/

[06:41:26.0000] <annevk>
SteveF: it means you might have to wait several months for a reply

[06:41:33.0000] <annevk>
SteveF: sometimes longer, depending on backlog, etc.

[06:41:51.0000] <annevk>
SteveF: this is explained every now and then on the list by Hixie

[06:42:42.0000] <annevk>
SteveF: see e.g. http://lists.w3.org/Archives/Public/public-whatwg-archive/2013Feb/0121.html for the last such reminder

[06:45:32.0000] <SteveF>
annevk: OK I get that

[06:47:14.0000] <annevk>
SteveF: if someone is unclear on Twitter please just ask me here instead, going back and forth there is such a hassle

[06:47:21.0000] <annevk>
something* doh

[06:48:13.0000] <SteveF>
annevk: sure, wasn't asking for a reply on any particular time scale only noting that a fork of main was added to whatwg spec without any rationale/uses cases or support data provided

[06:48:44.0000] <annevk>
well presumably there was at least a commit message

[06:49:38.0000] <SteveF>
yeah it think it was 'matching reality'

[06:49:58.0000] <SteveF>
yeah it was

[06:53:06.0000] <karlcow>
/me suddenly wonders if he still subscribe to whatwg listâ¦ and I guess not. Since the opera address died. Doh!

[06:53:34.0000] <SteveF>
annevk: while not overly concerned as all the articles about the use of main reference the W3C spec and general sentiment is for use of W3C definition, it is still problematic we have 2 starkly contradictory definitions of it.

[06:54:50.0000] <annevk>
SteveF: I doubt it matters much in practice. Certainly not something I get excited about.

[06:55:05.0000] <annevk>
SteveF: Anyway, I don't work on HTML

[06:55:53.0000] <SteveF>
annevk: and use as per whawtg definition could undermine benefit to users, but yeah its not something that I am prepared to spend much time on.

[06:56:33.0000] <SteveF>
annevk: "Anyway, I don't work on HTML" good to know

[06:56:53.0000] <karlcow>
/me subscribed again. poetic reading/insanity is back

[06:57:41.0000] <annevk>
SteveF: well I suppose I do, but not the whole sectioning element rathole or other such debates

[06:57:55.0000] <annevk>
/me works on fetch

[06:58:58.0000] <SteveF>
yeah get your drift I work primarily on author advice and requirements aspect which is not the main game for implementers

[06:59:54.0000] <karlcow>
Is there a specified limit of HTTP redirects in browsers?

[07:01:08.0000] <karlcow>
301/302/307/308

[07:01:18.0000] <annevk>
karlcow: prolly lower than that

[07:01:55.0000] <karlcow>
hmm? ahâ¦ no no these are the HTTP code for redirect not the number of redirects. Sorry for the confusion

[07:02:08.0000] <annevk>
/me was joking

[07:02:50.0000] <MikeSmith>
301/302/307/308 = 0.00001054072

[07:02:54.0000] <karlcow>
/me has hard time with annevk jokes. I miss your smile. :D sorry again

[07:03:37.0000] <annevk>
MikeSmith: heh

[07:04:07.0000] <annevk>
CORS also lists 303

[07:04:09.0000] <annevk>
fwiw

[07:04:25.0000] <karlcow>
http://stackoverflow.com/questions/9384474/in-chrome-how-many-redirects-are-too-many#9384732

[07:04:34.0000] <karlcow>
"Google Chrome 17.0.963.56 allows a maximum of 20 redirects"

[07:04:47.0000] <annevk>
And infinite loop precautions are not defined, but I've been thinking of adding that

[07:05:32.0000] <karlcow>
I wonder if Steve Souders has gathered data about this topic on what's done out there

[07:06:35.0000] <karlcow>
/me is sending an email to steve

[07:08:45.0000] <karlcow>
"Internet Explorer is 10"

[07:09:54.0000] <SimonSapin>
IE allows as many redirects as its version number?

[07:13:20.0000] <karlcow>
according to the stackoverflow it seems a bit weird

[07:13:46.0000] <karlcow>
"Only 10 redirects for IE 7 and 8, but 110 for IE 9 and 102 for IE 6. Also, IE 9 refreshes after every 10th redirect and IE 6 refreshes after the 100th. "

[07:39:36.0000] <karlcow>
http://www.techinasia.com/baidu-launches-developers-tools-in-english/

[07:43:33.0000] <Ms2ger>
krijn_, down again?

[07:45:34.0000] <krijn_>
No!

[07:45:36.0000] <krijn_>
Am I/

[07:47:11.0000] <Ms2ger>
http://downforeveryoneorjustme.com/krijnhoetmer.nl/ says yes

[07:48:51.0000] <MikeSmith>
krijn_ needs to check http://amidownforeveryoneorjustme.com/

[07:55:00.0000] <krijn_>
I'll let my mom know!

[07:55:00.0000] <krijn_>
Hrhr

[08:11:28.0000] <nimbu>
TERRIBLE JOKE krijn_

[08:12:07.0000] <krijn_>
Not really

[08:12:23.0000] <krijn_>
That server is in her house

[08:12:50.0000] <nimbu>
lololol

[08:12:57.0000] <nimbu>
/me is ashamed

[08:13:15.0000] <Ms2ger>
I already told her, krijn_

[08:13:20.0000] <nimbu>
HAHAHHAa

[08:16:14.0000] <jgraham>
ALL I CAN SEE ARE CAPS

[08:19:03.0000] <wilhelm>
krijn_: Oh, just a moment. I'll reboot it.

[08:19:53.0000] <krijn_>
wilhelm: the server? Or my mom?

[08:20:11.0000] <wilhelm>
The server!

[08:25:07.0000] <nimbu>
SORRY JGRAHAM

[08:25:14.0000] <nimbu>
MAYBE GOOGLE GLASS WILL HELP YOU WITH THAT

[08:30:38.0000] <annevk>
So there's one thing I still quite haven't figured out yet. What if I split up an algorithm in several subalgorithms in a specification but I want to share variables across them.

[08:31:06.0000] <MikeSmith>
hsivonen: bugzilla.validator.nu is in slowpoke mood today

[08:31:10.0000] <annevk>
Should I just pass the variables around all the time or is there some better style to accomplish that which does not confuse people?

[08:33:09.0000] <MikeSmith>
annevk: just make them properties of the window object

[08:33:19.0000] <MikeSmith>
then you don't have to pass them around

[08:33:24.0000] <MikeSmith>
problem solved

[08:33:24.0000] <marcosc>
heh

[08:33:36.0000] <marcosc>
annevk: I'm wondering the same thing too

[08:56:29.0000] <annevk>
:-(

[08:56:46.0000] <annevk>
http://tools.ietf.org/html/draft-ietf-httpbis-p2-semantics-22#section-7.1.2 neither deals with multiple Location headers or the Location header value failing to parse

[09:03:40.0000] <GPHemsley>
annevk: I generally call the subalgorithms with those values as parameters

[09:14:57.0000] <TabAtkins>
Hixie: 1e3.1 => [1000, 1].  Greedily consume the first number, and 1e3 is a number.

[10:28:12.0000] <karlcow>
annevk: I summarized what I know/understand of the issue. https://gist.github.com/karlcow/5050288

[10:28:31.0000] <karlcow>
about "Location:" HTTP header

[10:42:18.0000] <Hixie>
TabAtkins: the reason i didn't go with that is that 1e2e3e4 is definitely not 100 30000, it's 1 2 3 4

[10:42:54.0000] <TabAtkins>
I'd actually expect that to become [100 3 4]

[10:43:26.0000] <TabAtkins>
That is, "1e2" gets consumed, then the next "e" gets interpreted as a separator.

[10:43:35.0000] <TabAtkins>
This is the same as the treatment of 1.2.3.4, right?

[10:43:47.0000] <TabAtkins>
Or do you special-case that kind of thing?

[10:43:56.0000] <Hixie>
1.2.3.4 is 1 2 3 4

[10:44:01.0000] <Hixie>
otherwise IPs fail

[10:44:13.0000] <TabAtkins>
Do you do that by looking after the number, and seeing if the . is the next character?

[10:44:22.0000] <TabAtkins>
If so, then treating "e" the same way is reasonable.

[10:44:39.0000] <Hixie>
the algorithm is basically done, you can take a look :-)  (i forget the details, gonna prose it up later today)  software.hixie.ch/utilities/js/sorter/

[11:17:12.0000] <ronaldmansveld>
anyone here that has been working on CORS?

[11:18:09.0000] <Ms2ger>
annevk

[11:19:30.0000] <ronaldmansveld>
thnx, I'll just wait for him to come online then :)

[11:27:24.0000] <scott_gonzalez>
TabAtkins: What's the status of CSS Variables? Is it in flux or fairly stable?

[11:28:26.0000] <Ms2ger>
Not implemented, hence in flux

[11:32:16.0000] <scott_gonzalez>
Ms2ger: Do you know if there are any browsers planning to implement it soon?

[11:32:28.0000] <Ms2ger>
I'm not aware of any

[11:32:32.0000] <Ms2ger>
WebKit might, though

[11:34:21.0000] <scott_gonzalez>
I haven't been following this at all. Do you know if other browser vendors have showed interest in it long term?

[11:34:49.0000] <Ms2ger>
Long term, probably

[11:35:09.0000] <Ms2ger>
I don't follow closely, myself

[11:39:37.0000] <scott_gonzalez>
I've been waiting on this spec instead of using SASS/LESS/Stylus/whatever for jQuery UI. I'm at the point where I'm considering writing a parser for this in node...

[14:19:34.0000] <JonathanNeal>
Put this together, could be fun http://viewsource.in/whatwg.org#L11

[14:42:21.0000] <Hixie>
so y'all occasionally ask me to use fewer gotos and more structured constructs in my algorithms

[14:42:29.0000] <Hixie>
how do i do a "while" loop in english prose without a goto?

[14:46:19.0000] <jamesr>
use a better programming language :P

[14:46:47.0000] <Hixie>
you mean stop writing a spec and just write a reference implementation instead?

[14:47:57.0000] <jgraham>
Hixie: "9. Repeat while x > 1: 9.1 (do something) 9.2 let x = x-1"

[14:48:13.0000] <Hixie>
that doesn't work

[14:48:15.0000] <jgraham>
http://www.ecma-international.org/ecma-262/5.1/#sec-10.6 for example

[14:48:29.0000] <Hixie>
in english, "while" evaluates continuously, not just at the top of the loop.

[14:48:36.0000] <Hixie>
(or at least, it is ambiguous whether it does or not)

[14:48:55.0000] <jamesr>
maybe invent a new word for hixie-en

[14:49:05.0000] <jgraham>
Well I have never had that problem when reading ECMAScript

[14:49:23.0000] <jgraham>
So I'm filing it under "not a real issue"

[14:49:24.0000] <jamesr>
i've used goto

[14:49:28.0000] <jamesr>
not sure what the problem with that is

[14:49:33.0000] <tomasf>
URl standard uses "4. While c is not the EOF code point, run these substeps: 1â¦ 2â¦ 3..."

[14:49:36.0000] <Hixie>
so 8. x = 0; 9. while x < 1: 9.1 print x; 9.2 increment x; 9.3 print x;  would print 0, not 0, 1.

[14:49:43.0000] <tomasf>
*URL

[14:50:03.0000] <Hixie>
jgraham: i've had to field feedback of that nature.

[14:50:10.0000] <Hixie>
jgraham: in the few instances where i tried doing that.

[14:50:50.0000] <Hixie>
jgraham: (in the ecma example you cite, the ambiguity doesn't matter because nothing happens after the decrement)

[14:52:35.0000] <jgraham>
Well I imagine you can set it up so that the same is true

[14:54:30.0000] <Hixie>
yeah but then months later i forget and make the change and the months later people are like "what did you mean here?" and i have to spend hours figuring it out again

[14:54:46.0000] <jgraham>
Well

[14:54:55.0000] <jgraham>
Assuming this is the sort order thing

[14:55:04.0000] <Hixie>
i just meant in general

[14:55:08.0000] <jgraham>
I am already quite scared that this is going to be insanely complex

[14:55:31.0000] <jgraham>
So in this case the answer might be "solve a simpler problem"

[14:57:01.0000] <Hixie>
well sure, but this is orthogonal to that :)

[14:57:19.0000] <jgraham>
Anyway, if you know that Repeat ... while constructs have to have a loop variable that's only updated at the end of the loop, you are quite unlikey to forget

[14:58:00.0000] <Hixie>
what i'm likely to forget is that it's a repeat...while construct

[14:58:30.0000] <jgraham>
Even though it will say it right there?

[14:58:57.0000] <jgraham>
I mean, I guess I can't really argue with you here since you are the one that actually does this

[14:59:11.0000] <Hixie>
typically the cases where this is a problem, and the cases where people complain about gotos as well, are cases where it's not "right there" because the algorithm is long

[14:59:34.0000] <Hixie>
and therefore the implications of changes aren't always obvious

[14:59:41.0000] <Hixie>
anyway i'm not trying to argue against different wording

[14:59:44.0000] <Hixie>
just against using "while"

[14:59:58.0000] <Hixie>
i'm looking for wording that isn't ambiguous yet doesn't get called a goto

[15:00:16.0000] <Hixie>
(i almost always actually write structured loops, they just aren't labeled as such)

[15:44:11.0000] <zewt>
Hixie: re your original question, one way is to say "repeat the following steps until instructed to terminate", then step 1 is "if condition is false, terminate"

[15:44:30.0000] <zewt>
instead of while(f) { ... }0, it becomes while(true) { if(!f) break; ... }

[15:46:13.0000] <zewt>
then the point the condition is checked clearly can't be interpreted as a continuous thing

[15:54:41.0000] <Hixie>
yeah, that could work

[15:54:42.0000] <Hixie>
good call

[15:55:14.0000] <Hixie>
maybe "repeatedly run" rather than "repeat" so that nobody tries to repeat each step or something

[15:56:10.0000] <zewt>
until someone walks up to them and demands that they terminate? :)

[15:57:01.0000] <zewt>
sometimes i do have the urge to just yell "stop that"


2013-02-28
[16:05:47.0000] <Hixie>
in my experience, if the weird interpretation of the spec leads to something that isn't OBVIOUSLY bad, then someone will attempt to argue it's the way to interpret the spec

[17:29:00.0000] <zewt>
is there a name for the discussion pattern that goes: "a doesn't seem useful, because we can do a1 in an easier way" "but you can do a2, too" "why would you want to do a2?" "why are you so fixated on a2, it's also useful for a1"

[17:29:11.0000] <zewt>
seems like a cousin of the bait-and-switch

[17:34:51.0000] <karlcow>
:D

[17:35:23.0000] <zewt>
D:

[17:38:25.0000] <karlcow>
another pattern is: 1. we have an issue, we would like to add this feature

[17:38:25.0000] <karlcow>
2. No no don't touch the core

[17:38:25.0000] <karlcow>
3. But we still need to solve our issue

[17:38:26.0000] <karlcow>
4. Ah do for you own class of products, it's not our business

[17:38:26.0000] <karlcow>
5. ok we are fixing the issue ourselves

[17:38:26.0000] <karlcow>
6. Oh my god but you changed the core architecture

[18:27:21.0000] <MikeSmith>
is Encrypted Media Extensions support already enabled in Chrome?

[18:27:44.0000] <MikeSmith>
watching https://developers.google.com/live/shows/38132276-1/

[18:28:19.0000] <MikeSmith>
in that video John Luther seems to be saying it is

[18:28:38.0000] <MikeSmith>
Chrome video PM

[18:43:13.0000] <MikeSmith>
/me finds https://src.chromium.org/chrome/trunk/src/third_party/widevine/cdm/

[18:43:59.0000] <MikeSmith>
"This directory contains build files for integrating the Widevine CDM into Chrome."

[21:12:30.0000] <Hixie>
any whatwg blog people around?

[21:34:42.0000] <MikeSmith>
Hixie: dunno what you mean by blog people but I got blog perms of some kind

[22:33:32.0000] <SteveF>
Mikesmith: just arrived via google alert http://gigaom.com/2013/02/27/google-webm-video-rentals/

[22:39:11.0000] <othermaciej>
SteveF: does that use EME?

[22:39:50.0000] <SteveF>
unsure, but he did talk about EME in video

[22:40:35.0000] <SteveF>
"Luther went on to explain that Google did a lot of work on the security layer that delivers the videos encrypted to an HTML5 player. âAs far as I know, we are the first to ever do that,â he said."

[22:51:50.0000] <MikeSmith>
thanks SteveF

[22:51:57.0000] <MikeSmith>
othermaciej: yeah it does

[22:52:16.0000] <MikeSmith>
I assume with Widevine

[22:52:52.0000] <MikeSmith>
so EME is now not only implemented, it's deployed in a production service

[22:53:05.0000] <MikeSmith>
oh MSE too

[22:53:45.0000] <MikeSmith>
he mentions that too in the video

[22:54:28.0000] <MikeSmith>
in the context of using it for adaptive streaming

[22:54:35.0000] <MikeSmith>
he says "like DASH"

[23:22:25.0000] <hsivonen>
MikeSmith: any info on whether Chrome's CDM supports ISO Common Encryption, too?

[23:23:29.0000] <MikeSmith>
dunno but I think the code is in the chromium svn repo

[23:25:25.0000] <MikeSmith>
hsivonen: http://src.chromium.org/svn/trunk/src/webkit/media/crypto/ppapi/

[00:07:38.0000] <MikeSmith>
hmm there's a submodule under that in my working directory

[00:08:17.0000] <MikeSmith>
with an 18KB content_decryption_module.h header file in it

[01:38:34.0000] <hsivonen>
so did HTTP 1.1 bis address othermaciej's comments yet?

[02:51:43.0000] <MikeSmith>
so apparently the EME stuff is already enabled in current desktop Chrome

[02:51:48.0000] <MikeSmith>
23+

[02:52:04.0000] <MikeSmith>
http://downloads.webmproject.org/adaptive-encrypted-demo/adaptive/index.html

[02:52:08.0000] <MikeSmith>
is a demo

[02:52:26.0000] <MikeSmith>
the Key Exchange Info part there doesn't show anything

[02:52:38.0000] <MikeSmith>
but a bunch of stuff is logged to the console

[02:53:51.0000] <MikeSmith>
doNeedKey() .. adding key for the following session

[02:54:06.0000] <MikeSmith>
webkit-org.w3.clearkey

[02:54:48.0000] <MikeSmith>
hsivonen: they have implemented support for ISO Common Encryption

[02:54:59.0000] <MikeSmith>
https://code.google.com/p/chromium/issues/detail?id=132351

[02:56:01.0000] <MikeSmith>
and see the Encrypted Media Extensions section of http://www.chromium.org/developers/web-platform-status

[02:56:30.0000] <annevk>
morning

[02:57:59.0000] <MikeSmith>
hi annevk

[02:58:14.0000] <MikeSmith>
also http://wiki.webmproject.org/encryption/webm-encryption-rfc

[02:58:34.0000] <ronaldmansveld>
morning annevk

[02:58:53.0000] <annevk>
ronaldmansveld: I saw you had a question about CORS?

[02:59:02.0000] <ronaldmansveld>
yeps, indeed

[03:00:54.0000] <ronaldmansveld>
I don't have the resources i found open atm (not at home), so I have to do this from the top of my head, but shouldn't CORS and CSP be related?

[03:02:04.0000] <ronaldmansveld>
since I don't feel that the security should be handled completely by the server when doing cross-domain requests, but also by the original content

[03:02:47.0000] <ronaldmansveld>
after all, it's easy for a browser plugin to inject some JS, which will then contact a malicious server. that malicious server will always respond with Allowed-Origin: *

[03:03:30.0000] <ronaldmansveld>
(if you want to, i can make a more complete story out of this on email)

[03:04:04.0000] <annevk>
You can already transmit data to a malicious server without CORS

[03:04:51.0000] <annevk>
The only case where that is made somewhat easier is XMLHttpRequest (it used to never do a cross-origin request), but we cannot change that now.

[03:04:55.0000] <annevk>
ronaldmansveld: ^

[03:05:40.0000] <ronaldmansveld>
but doesn't that mean that CORS will actually open up a security hole? (which then can be closed by implementing CSP)

[03:07:43.0000] <annevk>
ronaldmansveld: Only if your application allows arbitrary URLs to be passed to XMLHttpRequest, which would be a silly thing to do to begin with...

[03:08:01.0000] <annevk>
ronaldmansveld: And only if that's the only place the code would leak, and not say you could inject an image request somewhere...

[03:08:42.0000] <ronaldmansveld>
maybe my application doesn't, but a malicious browser-plugin might inject code that triggers a cross-domain XHR

[03:10:13.0000] <annevk>
ronaldmansveld: I don't know CSP specifics unfortunately, but I assume it can control outgoing requests, yes

[03:10:28.0000] <annevk>
ronaldmansveld: dude, if your software is malicious you are already lost

[03:10:30.0000] <ronaldmansveld>
and true, there are many other ways to leak, but it feels like CORS is incomplete without mentioning CSP to implement security in the application, instead of relying on the cross-domain server and checking the result

[03:10:40.0000] <ronaldmansveld>
CSP spec: http://www.w3.org/TR/CSP/

[03:10:55.0000] <ronaldmansveld>
and yes, CSP controls outgoing requests

[03:11:00.0000] <annevk>
CORS is not about security, it's just about making cross-origin fetching possible

[03:12:27.0000] <annevk>
Hmm, I don't want to stonewall you. So apologies if it came off as that.

[03:12:48.0000] <ronaldmansveld>
no, that's OK, I just felt that the security aspect was missing in some way

[03:13:02.0000] <ronaldmansveld>
but now I understand that that wasn't the intention of CORS

[03:13:13.0000] <ronaldmansveld>
so CORS and CSP are in fact complimentary

[03:13:18.0000] <darobin>
indeed

[03:13:29.0000] <annevk>
XMLHttpRequest had a change in behavior, that might have been a bad choice in retrospect, but it's been deployed across browsers for many years now. CORS did incite that change in behavior, but CORS is mostly about making sharing cross-origin resources possible.

[03:13:49.0000] <annevk>
ronaldmansveld: yes they are

[03:14:11.0000] <ronaldmansveld>
in that case: wouldn't it be a good idea to at least mention CSP in the CORS-spec?

[03:15:18.0000] <darobin>
well, a lot of things are complementary

[03:15:25.0000] <darobin>
doesn't mean we should mention them all :)

[03:20:41.0000] <ronaldmansveld>
True, but since the CORS-spec has 4 parts on security (4, 6.3, 7.3, 8.4) it felt to me it was incomplete by not mentioning CSP. And indeed no need to mention them all, but I thought this would indeed make a good case

[03:23:43.0000] <annevk>
CORS concerns with respect to security are about protecting the contents of cross-origin resources that are not meant to be shared.

[03:24:10.0000] <annevk>
Those are very different concerns from protecting the data of the application that might initiate a CORS request.

[03:24:49.0000] <ronaldmansveld>
I see, then I might have had different expectations from the CORS-spec

[03:25:52.0000] <ronaldmansveld>
I'm gonna grab a quick lunch in the meantime, brb

[03:40:22.0000] <hsivonen>
annevk: thanks for the quick WONTFIX on making the set of encodings open-ended

[03:40:57.0000] <annevk>
hsivonen: Norbert mentions that to me every now and then, I tell him it's a bad idea, not sure why it now went through a bug

[03:55:17.0000] <hsivonen>
annevk: fwiw, my understanding is that the Indian pages in question rely on being decoded as windows-1252

[03:55:32.0000] <hsivonen>
annevk: so the semantics of the characters are all wrong in browsers

[03:55:45.0000] <hsivonen>
annevk: but can't change that without breaking the font dependency

[03:56:05.0000] <hsivonen>
annevk: so adding encodings to a browser spec is unlikely to be a good idea

[03:56:45.0000] <hsivonen>
annevk: it's understandable why Googlebot might want to get seachable characters out of the mess, though

[03:57:20.0000] <hsivonen>
annevk: but OTOH, it's pretty uncool for Google to point users to pages of that level of bogosity

[03:59:04.0000] <hsivonen>
anyway, the right fix to avoid making Googlebot conforming would be "if you are a search engine bot, you may decode Indian legacy pages in a way that violates this spec"

[03:59:14.0000] <hsivonen>
not making it open-ended for browsers

[04:00:01.0000] <hsivonen>
(I had thought those legacy pages went away with Netscape 4.)

[04:01:56.0000] <annevk>
Reportedly there are some Firefox extensions that do the same thing as Googlebot. I guess you might get searchable results in such pages then? I haven't studied the details.

[04:04:47.0000] <annevk>
I wonder if I should go to WebApps...

[04:05:05.0000] <gsnedders>
hsivonen: Carakan (as in the script) has the same font-dependencies.

[04:06:03.0000] <gsnedders>
(Probably in part because it was only just added to Unicode in 5.2)

[04:06:55.0000] <annevk>
Oh that's easy. I can't attend because I'm not a member of the group.

[04:07:38.0000] <jgraham>
?

[04:08:48.0000] <annevk>
jgraham: registration is mandatory and you can't use the registration form if you're not a member.

[04:09:35.0000] <hsivonen>
annevk: https://addons.mozilla.org/en-us/firefox/addon/padma/ might be worth investigating

[04:11:28.0000] <annevk>
hsivonen: I rather not get into that unless we get more serious about doing something like that

[04:11:37.0000] <annevk>
(I suspect we won't ever.)

[04:11:47.0000] <hsivonen>
that's so sad considering that those languages have been in Unicode for a long time

[04:12:05.0000] <hsivonen>
"that" referring to what the extension does

[04:12:07.0000] <hsivonen>
not what you said

[04:12:57.0000] <annevk>
Yeah, I don't really understand what the problem is. I guess lack of OS support.

[04:13:17.0000] <gsnedders>
Legacy, as well, I expect. "This is how you do it".

[04:13:24.0000] <Ms2ger>
What this guy said

[04:13:33.0000] <hsivonen>
gsnedders: sounds right

[04:13:54.0000] <gsnedders>
"If you want to use the web, you set this font as the default"

[04:17:09.0000] <hsivonen>
Devanagari seems to have been in Unicode since 1.0

[04:17:15.0000] <gsnedders>
Given it's a SBCS, is there any reason we cannot just define a new charset for it?

[04:17:15.0000] <hsivonen>
i.e. for two decades

[04:17:45.0000] <hsivonen>
gsnedders: there seems to be a bewildering number of themânot just âitâ

[04:17:58.0000] <hsivonen>
For how long has Windows supported Devanagari?

[04:18:06.0000] <gsnedders>
hsivonen: How many are we talking about?

[04:18:15.0000] <gsnedders>
hsivonen: (And how long in all locales?)

[04:19:17.0000] <hsivonen>
gsnedders: around 60, it seems, but I didn't look carefully and might have miscounted or misunderstood

[04:19:54.0000] <gsnedders>
hsivonen: Just for the Indian subcontinent?

[04:20:03.0000] <hsivonen>
gsnedders: right

[04:20:26.0000] <hsivonen>
see http://padma.mozdev.org/

[04:20:32.0000] <gsnedders>
Because there's certainly such things elsewhere too.

[04:22:07.0000] <jgraham>
annevk: I totally missed what you're not registering for

[04:22:18.0000] <jgraham>
Hence my "?"

[04:26:20.0000] <gsnedders>
hsivonen: Still tempted to say we should define themâ¦

[04:27:27.0000] <hsivonen>
are the pages involved labeling their encoding in any sane way? (I'm guessing no.)

[04:27:38.0000] <gsnedders>
I'm similarly guessing no.

[04:28:03.0000] <annevk>
jgraham: I see

[04:30:19.0000] <gsnedders>
hsivonen: Random things on the Padma list seem to explicitly declare types, and work fine without fonts.

[04:32:16.0000] <gsnedders>
http://www.rajasthanpatrika.com/ seems to be text/html per HTTP, and has multiple meta elements. Uses UTF-8, ultimately, declared.

[04:32:48.0000] <gsnedders>
Changing charset after parsing has startd.

[04:32:52.0000] <gsnedders>
Most seem to be like that.

[04:33:18.0000] <gsnedders>
http://www.andhrabharati.com/ relies on fonts, on the other hand

[04:33:49.0000] <jgraham_>
annevk: Well at least one of us does :)

[04:34:05.0000] <gsnedders>
HTTP text/html, meta text/html; charset=x-user-defined

[04:34:27.0000] <annevk>
heh

[04:34:53.0000] <gsnedders>
Uses EOT to support IE in general.

[04:35:34.0000] <MikeSmith>
what's Hixie up to with that â character in the algorithms for srcset in the spec?

[04:35:48.0000] <MikeSmith>
what does it indicate?

[04:36:17.0000] <MikeSmith>
are there other algorithms in the spec that have that?

[04:36:18.0000] <gsnedders>
hsivonen: Problem is how to switch to right encoding, really

[04:37:50.0000] <MikeSmith>
my chromium/chrome don't actually display the hourglass glyph for it

[04:37:58.0000] <MikeSmith>
though Firefox does

[04:38:36.0000] <jgraham_>
MikeSmith: File a bug report and submit a testcase? :)

[04:40:17.0000] <MikeSmith>
well I don't care so much of it displaying, I'm just wondering what it's supposed to mean

[04:41:19.0000] <MikeSmith>
"This step takes a lot of time"? "There's a sleep here"?

[04:42:16.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/current-work/multipage/introduction.html#typographic-conventions provides no clues

[04:43:23.0000] <MikeSmith>
oh

[04:43:26.0000] <MikeSmith>
nm

[04:43:28.0000] <MikeSmith>
found it

[04:44:06.0000] <MikeSmith>
"Steps in synchronous sections are marked with â."

[04:54:24.0000] <Ms2ger>
Oh, wow, xchat found a character for that

[04:56:42.0000] <odinho>
WTF. The hourglass has colors here! :|

[05:06:11.0000] <hsivonen>
odinho: Emoji font outside Emoji range?

[05:11:07.0000] <MikeSmith>
has colors on OSX at least I guess

[05:11:39.0000] <MikeSmith>
maybe not emoji but repurposing some platform UI widget thing?

[05:25:06.0000] <odinho>
Yeah, I'm currently on OS X for a short while.

[05:30:52.0000] <MikeSmith>
http://homakov.blogspot.fr/2013/02/url-detection-with-hash-history-i-know.html

[05:38:49.0000] <annevk>
hsivonen: http://wiki.whatwg.org/wiki/Encrypted_Media_Extensions_Impact

[05:40:08.0000] <annevk>
hsivonen: Yeah, Apple has done that for a number of Emoji that were already present in Unicode

[05:52:45.0000] <annevk>
karlcow: can you test Location: /lo1, /loc2 as well?

[05:52:55.0000] <annevk>
karlcow: theoretically headers can be combined in that way

[05:53:37.0000] <jgraham>
odinho: s/hourglass/spinning beachball of death/

[05:53:38.0000] <annevk>
karlcow: I doubt it actually works in practice that way, but that's how the HTTP guys have it modelled still

[05:54:19.0000] <jgraham>
Oh wait, I am confused

[05:54:38.0000] <odinho>
jgraham: You are, you are...

[05:54:49.0000] <jgraham>
Therefore I think?

[05:55:13.0000] <karlcow>
annevk: yup. I'll do that now

[06:04:46.0000] <karlcow>
annevk: http://lists.w3.org/Archives/Public/www-archive/2013Feb/0093.html

[06:07:19.0000] <annevk>
karlcow: yeah, as expected

[06:07:27.0000] <annevk>
so easy to find bugs

[06:07:38.0000] <annevk>
thanks

[06:07:43.0000] <karlcow>
my pleasure

[06:15:40.0000] <karlcow>
â no color for me on XChat on MacOSX âº but I guess it is not using WebKit for rendering it

[06:16:54.0000] <karlcow>
ââââ hmm

[06:39:33.0000] <manu-db>
annevk, hsivonen: The PING (privacy WG) has invited me to come and discuss privacy implications of the EME spec with them today (12pm EST) - I was going to cover DNT and backdoor implications in CDMs, any other material that you think is worth covering?

[06:41:50.0000] <annevk>
manu-db: The notion of privacy and DRM at the same time seems kind of ironic

[06:42:43.0000] <manu-db>
annevk: Well yeah, there's that - I mean, there are the obvious "mathematical impossibility" arguments here... just wondering if there are specific browser concerns you wanted me to point out.

[06:43:15.0000] <manu-db>
It was going to be just me outlining the EME spec during the call, but the EME editors caught wind of it and instead offered to lead the discussion, bumping me to just comment on what they're saying.

[06:44:06.0000] <manu-db>
so, if there are browser manufacturer concerns (either official, or personal opinion), I thought I'd ask to see if anyone on here would want me to convey those concerns to the PING group.

[06:44:34.0000] <annevk>
manu-db: o_O The main problem I see is making this feasible in a way that works across browsers and platforms. But I'm not sure that has much baring on privacy.

[06:44:45.0000] <manu-db>
there's the concern that Mozilla wouldn't be able to do an open CDM implementation, there the DNT concerns, the backdoor concerns... anything else?

[06:44:50.0000] <annevk>
(The o_O was for the EME editor intervention thingie.)

[06:44:58.0000] <manu-db>
/me figured. :)

[06:46:46.0000] <manu-db>
annevk, hsivonen: Did you see this suggestion? http://www.brucelawson.co.uk/2013/more-on-drm-in-html5/#comment-1314315 -- has that approach been gaining any traction w/ Mozilla/browser manufacturers?

[06:46:58.0000] <zewt>
well, this sounds a bit pointless :)

[06:47:21.0000] <annevk>
manu-db: I think the main concern is that there is some kind of closed system outside the browser's control. I.e. we got rid of plugins but we introduce them again for DRM meaning the web does achieve its full potential and whatnot (as it's not cross-platform).

[06:47:28.0000] <zewt>
i mean, i can't imagine anyone implementing these closed-web drm things to be influenced by what any WG says

[06:47:31.0000] <annevk>
manu-db: but you mentioned that

[06:48:37.0000] <manu-db>
zewt: Well yes... but somebody has to go in and balance the conversation... lots of folks don't understand the implications of the EME spec, so we have to do some grassroots education on the matter. If we can get PING commenting about privacy implications, that's less work that the rest of us have to do on that front. (that's the theory, anyway)

[06:48:54.0000] <zewt>
it pretty much kills any pretense of the w3 being about an open web, that they're allowing a spec like that under their name

[06:49:15.0000] <zewt>
manu-db: but anyone implementing it in a real production browser does understand it

[06:49:41.0000] <zewt>
and regular users don't care--and there aren't many other parties with any influence on the situation, i would think

[06:49:53.0000] <rcombs>
could element.scrollIntoView be given a second argument that enables animating the scroll?

[06:49:59.0000] <zewt>
not to say don't try, just call me skeptical :)

[06:50:26.0000] <zewt>
rcombs: android scroll* already does animate :( or it did at some point, maybe they fixed that

[06:51:09.0000] <manu-db>
zewt: I think regular users do care once it's explained to them. I'm skeptical as well, but we have to try our best to explain what's at stake here. We can have enough of an impact on the W3C process if there are enough people commenting on the broken-ness of some of the stuff in EME.

[06:52:16.0000] <zewt>
rcombs: animation is tricky, and there are a lot of half-designed, brittle animation things already (css transitions and animations, which have lots of weirdness), so I'd suggest not adding any more animation stuff without doing a more thorough design

[06:52:45.0000] <rcombs>
zewt: well, in that case, a more thorough design is in order

[06:53:02.0000] <rcombs>
zewt: because scrollIntoView is pretty jarring at the moment

[06:54:48.0000] <Ms2ger>
XHR1 is back, eh

[06:55:53.0000] <annevk>
Ms2ger: is it?

[06:57:03.0000] <annevk>
manu-db: FWIW, roc from Mozilla I think brought forward the constraints "the web" has at some point

[06:57:22.0000] <zewt>
tired of asking "what's the use case for this big, complex thing" and all i can get is "it seems convenient"

[06:57:30.0000] <rcombs>
manu-db + zewt: my $0.02: I think the web standards should leave out DRM and wait for web devs to be forced to drop it altogether when plugins stop being as widely installed

[06:57:57.0000] <Ms2ger>
That would certainly work for me...

[07:02:47.0000] <annevk>
manu-db: http://lists.w3.org/Archives/Public/public-html-admin/2013Feb/0117.html and the email referenced therein are probably good to read

[07:02:58.0000] <annevk>
manu-db: I've not kept up to speed myself

[07:03:09.0000] <manu-db>
/me thanks annevk. (afk to chair RDFa WG call)

[07:03:35.0000] <odinho>
I like the XHR: The attorney edition name.

[07:03:58.0000] <rcombs>
DRM introduces o9k problems, it goes against open web principles, and it doesn't seem worth implementing

[07:04:18.0000] <zewt>
"worth implementing" is something that can only be decided by implementors

[07:04:32.0000] <odinho>
netflix and microsoft and google is pushing hard though. It's business business.

[07:05:01.0000] <Ms2ger>
odinho, maybe we should call webapps "WHATWG: The attorney edition" ;

[07:05:02.0000] <Ms2ger>
)

[07:05:35.0000] <zewt>
Ms2ger: "feat. Microsoft"

[07:05:53.0000] <rcombs>
zewt: II: Electric Boogaloo

[07:06:09.0000] <annevk>
"excl annevk for copyright reasons."

[07:06:29.0000] <annevk>
"incl x, y, z to replace annevk."

[07:06:47.0000] <annevk>
(they do a much better impression of me anyway)

[07:27:19.0000] <SteveF_>
zewt: "it pretty much kills any pretense of the w3 being about an open web, that they're allowing a spec like that under their name" pretty much kills pretense of Google being about the open web as well then right

[07:27:41.0000] <Ms2ger>
Google isn't about the open web

[07:28:35.0000] <SteveF_>
Ms2ger: so who is?

[07:28:43.0000] <Ms2ger>
Mozilla, duh!

[07:28:52.0000] <gavinc>
Mozilla ;)

[07:29:02.0000] <SteveF_>
apart from Mozilla?

[07:29:14.0000] <darobin>
where does Mozilla's money come from?

[07:29:32.0000] <SteveF_>
closed web sources

[07:30:20.0000] <gavinc>
No see if you launder the money first then it's fine... or something

[07:30:28.0000] <SteveF_>
all seems a bit simplistic to claim w3c is not about open web

[07:31:32.0000] <darobin>
I'm too lazy to scroll back â are we talking about DRM?

[07:32:18.0000] <SteveF_>
so only browser vendor that is about open web is mozilla the rest are in it for the money and self interest

[07:33:03.0000] <Ms2ger>
Do you disagree?

[07:33:10.0000] <SteveF_>
no

[07:33:39.0000] <SteveF_>
but I am a simpleton

[07:35:32.0000] <SteveF_>
whatwg, w3c etc are all in same boat , the good ship Kapital!

[07:41:37.0000] <marcosc>
I hear there is good money to be made in this internets thing! where do I sign up?

[07:44:58.0000] <SteveF_>
profit's the noose of the open web

[07:46:36.0000] <annevk>
Afaict Google has many interests, not all of them good for the web

[07:58:19.0000] <SteveF_>
annevk: probably the same for any organization to a lesser or greater degree, somebody should write a book about it '50 shades of Open Web'

[08:28:21.0000] <Ms2ger>
https://twitter.com/sgalineau/status/306805978135924736

[08:31:46.0000] <miketaylr>
sylvain loves opera

[08:32:16.0000] <marcosc>
if you are going to mention Opera on twitter, you are going to have a bad time :)

[08:33:40.0000] <jgraham>
Yeah, that miketaylr will be right in your face

[08:33:44.0000] <miketaylr>
but it will be fun to tease him about UX when he's working for [redacted]

[08:33:57.0000] <Ms2ger>
Adobe

[08:34:12.0000] <Ms2ger>
It's in the CSSWG conf call minutes

[08:34:25.0000] <miketaylr>
ok, un-redact that then

[08:34:39.0000] <miketaylr>
dact it? O_o

[08:34:53.0000] <Ms2ger>
/me duct-tapes MikeSmith 

[08:35:21.0000] <jgraham>
Is that usually how you treat sleeping men?

[08:35:41.0000] <Ms2ger>
/me tears it off, attaches to miketaylr instead

[08:35:48.0000] <zewt>
:|

[08:35:54.0000] <miketaylr>
he should be awake after that

[08:40:30.0000] <darobin>
MikeSmith: can sleep quite soundly

[08:43:17.0000] <jgraham>
Probably Ms2ger drugged him before duct taping him

[08:44:07.0000] <MikeSmith>
I'm using the extra duct tape to patch the carburetor on my browser engine

[08:45:49.0000] <annevk>
The web could use some duct tape

[08:46:05.0000] <annevk>
Also, for the longest time I thought it was duck tape

[08:46:10.0000] <annevk>
And I didn't get it

[08:47:10.0000] <darobin>
hahaha

[08:47:17.0000] <darobin>
lovely Mondegreen

[08:48:35.0000] <jgraham>
But it *is* duck tape

[08:49:00.0000] <jgraham>
I think duct tape is the newer term

[08:49:14.0000] <Ms2ger>
Would you rather fight a tape-sized duck or a hundred duck-sized tapes?

[08:50:24.0000] <miketaylr>
"In 1942 Revolite, then a division of Johnson & Johnson, originally developed an adhesive tape made from a rubber-based adhesive applied to a durable duck cloth backing." huh

[08:50:34.0000] <miketaylr>
TIL duck isn't just some brand

[08:52:25.0000] <marcosc>
/me wants a leisure suit made out of duck cloth 

[08:52:44.0000] <marcosc>
make that "durable" duck cloth... none of that cheap stuff!

[08:53:25.0000] <darobin>
wtf is duck cloth

[08:54:13.0000] <darobin>
btw if you're French you want to share the love: https://twitter.com/LesAutruches/status/307140744764858369 :)

[08:54:28.0000] <darobin>
/me prods SimonSapin --^

[08:55:05.0000] <SimonSapin>
aprÃ¨s les pigeons, les autruches ?

[08:55:17.0000] <darobin>
c'est mieux, lis le texte :)

[08:56:28.0000] <marcosc>
"Faced with the absurdity of the IHR, URSSAF et al: The Manifesto Ostriches" ?

[08:56:39.0000] <darobin>
hey, not so bad

[09:01:14.0000] <dglazkov>
good morning, Whatwg!

[09:01:43.0000] <dglazkov>
the scrollback looks dangerously nsfw

[09:02:41.0000] <marcosc>
dglazkov: you will love it. It involves a lot of duck tape, MikeSmith, and leisure suits

[09:03:26.0000] <dglazkov>
just another day in the Web standards community

[09:46:29.0000] <annevk>
marcosc: so the TAG thing is 60min from now?

[09:46:48.0000] <annevk>
/me just realized he hasn't set up W3C IRC

[09:46:50.0000] <marcosc>
aww. God. That... I guess .

[09:47:01.0000] <marcosc>
oh, CVS

[09:47:10.0000] <marcosc>
DONT FORGET THE CVS annevk!

[09:47:12.0000] <annevk>
I don't want to go there really

[09:47:18.0000] <marcosc>
I nearly lost it

[09:47:49.0000] <annevk>
I think the public key I gave the W3C once has long been obsoleted

[09:48:02.0000] <marcosc>
I hit reply, ... started typing... closed the window.... hit reply again... started typing... deleted the draft again.

[09:48:04.0000] <annevk>
Also, CVS

[09:48:10.0000] <marcosc>
yeah, same happened to me

[09:48:16.0000] <marcosc>
I'm not going through that mess again

[09:49:04.0000] <marcosc>
I think I once wasted 2 hours trying to get CVS working with the w3c server + 24 hour wait for them to install my key

[09:50:33.0000] <marcosc>
anyway, yeah... call in one hour

[09:50:49.0000] <annevk>
I have instructions for W3C CVS on my blog somewhere, but I really rather not

[09:51:24.0000] <marcosc>
lets get slightlyoff to say we are using GitHub

[10:10:33.0000] <annevk>
odinho: fwiw, it'd be interesting to know if IE fails for e.g. 203 or 299

[10:11:00.0000] <annevk>
odinho: given that just allowing 200/204 is one of the paths forward

[10:18:09.0000] <manu-db>
annevk, zewt, rcombs, SteveF_: DRM in HTML5 (EME) discussion in Privacy Working Group - http://www.w3.org/2013/02/28-privacy-minutes.html#item01 (glad to see hsivonen on that call as well - good job on the network-access-knowability comments, btw)

[10:19:38.0000] <annevk>
"Less use ofd plugins is good, more use of HTML is good." So we'll give you some new plugins!

[10:19:55.0000] <annevk>
Flawless victory!

[10:20:18.0000] <annevk>
(I'm not helping, I know.)

[10:23:36.0000] <annevk>
It seems we did not move anywhere though. The story is still that the CDM is a black box.

[10:24:02.0000] <marcosc>
ridicule is the best form of medicine

[10:27:06.0000] <annevk>
"<adrianba> hsivonen, yes, i see your comments - i think this is the key thing we will need to address but i think mostly what we can do is call out considerations for CDM implementers"

[10:27:29.0000] <annevk>
That's the spec language equivalent of "Fuck you"

[10:51:31.0000] <TabAtkins>
scott_gonzalez: Spec is done.  I'm doing editorial tweaks and inviting final review before we hit LC and then CR.  WebKit already has an impl (hidden behind a flag, and bizarrely prefixed), and FF is working on one as well.

[10:52:31.0000] <TabAtkins>
scott_gonzalez: Also, if you need a CSS parser in JS, try mine: https://github.com/tabatkins/css-parser It matches the Syntax spec (well, now a slightly older revision of the spec, but I pick it up and sync the code every once in a while).

[11:26:28.0000] <scott_gonzalez>
TabAtkins: Thanks. I'll check out the css-parser :-)

[12:52:50.0000] <annevk>
What I really miss in Gmail is "edit the filters for this label"

[12:53:00.0000] <annevk>
Or am I overlooking that?

[12:53:57.0000] <zewt>
i always have to dig through the filters to find the one for a label

[12:59:45.0000] <annevk>
also, editing filters is confusing and basic stuff like "list:a list:b" does not work...

[13:00:46.0000] <Hixie>
woot, the spec and firefox are secure http://feross.org/fill-disk/ :-)

[13:01:15.0000] <zewt>
also as far as i know the only way to have one filter eg. "from:address", and a bunch of other filters like "from:address something", without the latter falling into the first, is to encapsulate every single filter into the first giving "from:addres -something -somethingelse"

[13:01:33.0000] <annevk>
Hixie: prolly not against entities that have loads of domains ;-)

[13:01:38.0000] <zewt>
which is terrible, since i want work email to go to one box, unless it's from our bug tracker or release notifications or whatever in which case i want it in a sublabel

[13:05:11.0000] <Hixie>
annevk: they cost money, so i'm not so worried about those

[13:05:40.0000] <Hixie>
annevk: a million subdomains costs the same as a hundred, but a million domains costs ten thousand times more than a hundred.

[13:05:59.0000] <annevk>
unless you get your domain on publicsuffix.org somehow

[13:06:31.0000] <annevk>
and there's stuff like dyndns on there iirc, not sure what their policies are

[13:06:47.0000] <annevk>
but yeah, it's a lot better than just checking the origin

[13:12:14.0000] <jgraham>
annevk: You could, you know, not use gmail?

[13:12:29.0000] <jgraham>
Or at least not use the web ui

[13:12:49.0000] <zewt>
if you change software every time you find something stupid in them, you won't have any software left to use

[13:13:00.0000] <annevk>
jgraham: I haven't found a good client for it

[13:13:46.0000] <jgraham>
Isn't any imap client a potential client?

[13:14:01.0000] <zewt>
in my experience, everything imap is terrible

[13:15:06.0000] <jgraham>
zewt: Yeah, but in this case moving from a frontend that you like to one that you don't because the backend changed, even though the frontends both work seems weird

[13:15:37.0000] <zewt>
parse error

[13:17:43.0000] <annevk>
jgraham: sure, but none of them quite match Gmail I've found. Though M2 was pretty good

[13:19:11.0000] <SimonSapin>
zewt: whatâs wrong with imap?

[13:20:17.0000] <zewt>
been a while, but i just remember it being slow and clumsy

[13:36:05.0000] <odinho>
Hixie: Don't think that works as well in Opera.

[13:45:48.0000] <Simon______>
hi

[13:47:38.0000] <Simon______>
I was wondering would allow to cache the current page be possible ? Something like window.cache.save("a-new-etag");

[13:50:27.0000] <Simon______>
In application cache we can ask the browser to get updates from the server, but is it difficult/bad to ask the browser to cache the current computed page ?

[13:58:17.0000] <Simon______>
I rephrase : why HTML5's applicationCache doesn't allow to cache the current (computed) page (with no request to the server) ?

[14:00:05.0000] <annevk>
Simon______: you can already cache a page via HTTP

[14:01:34.0000] <Simon______>
yep but after some AJAX calls & DOM updates the cache is obsolete

[14:02:04.0000] <Simon______>
now if the user goes offline, the cached version will be obsolete

[14:04:11.0000] <annevk>
Oh, so you want the DOM serialized to disk? That seems unlikely to happen as that would require a lot of difficult changes.

[14:04:22.0000] <Simon______>
Oh ok

[14:04:27.0000] <Simon______>
I guessed so

[14:04:46.0000] <annevk>
You could store the changes via Indexed DB and apply them at onload or some such...

[14:05:13.0000] <Simon______>
I was asking myself that question :)

[14:05:18.0000] <Simon______>
Thank you

[14:06:15.0000] <annevk>
FWIW, there are some plans to design a better application cache, if you check back in a month or so there should be some proposals out there. Though serializing the DOM to disk will still not be covered I'm afraid ;-)

[14:23:31.0000] <Simon______>
@annevk I have other worries about appCache, I hope the future updates will cover them

[14:24:05.0000] <Simon______>
For example appCache doesn't seem great for "mixed data & logic" sites

[14:27:38.0000] <Simon______>
Applying updates with the help of indexedDB is nice, but still the user see the old data for a fraction of second

[14:28:32.0000] <Simon______>
What would be great would be able to specify another page for the offline.

[14:29:22.0000] <Simon______>
So when online you get a page "logic + data", and when offline you get a page login only

[14:29:42.0000] <Simon______>
(and then you can load the data from indexedDB)

[14:30:40.0000] <Simon______>
err I meant 'when offline you get a page of "logic" only'

[15:30:43.0000] <JonathanNeal>
http://www.w3.org/TR/css3-values/#attr-notation want want want want want

[15:31:02.0000] <JonathanNeal>
content: attr(src, url)

[15:56:54.0000] <Hixie>
do we prefer the spec to have obvious optimisations in its algorithms, or do we prefer to the spec to be extremely consistent to the point of being inefficient in its algorithms?

[15:59:09.0000] <Hixie>
e.g. do i prefer    mode 1: if (A) { do X, then back up and go to mode 2 } else { back up then go to mode 2 };  mode 2: if (B) { ... } else { do Y }

[15:59:38.0000] <Hixie>
or do I prefer mode 1: if (A) { do X, do Y, go to mode 2 } else { back up then go to mode 2 };  mode 2: if (B) { ... } else { do Y }

