2011-12-01
[16:33:00.0000] <zewt>
rniwa: i just wish that if Japanese authors are going to dig in their heels and keep using SJIS (or EUC-JP or ISO-2022-JP), they'd at least get their charset declarations correct

[16:33:01.0000] <rniwa>
zewt: I think so.

[16:34:00.0000] <rniwa>
zewt: although Shift_JIS is never really used

[16:34:01.0000] <zewt>
instead of the current nonsense where japanese pages very often end up broken on all non-japanese systems

[16:34:02.0000] <rniwa>
zewt: what we call Shift_JIS is almost always Code Page 932

[16:35:00.0000] <zewt>
windows's "extensions"--yet another reason to use utf-8 :P

[16:36:00.0000] <rniwa>
zewt: the problem is that utf-8 didn't get right either

[16:36:01.0000] <zewt>
what's frustrating is how the current situation leads to pages working for their authors, and most of their viewers (eg. users in japan see japanese pages OK), but are broken for the rest of the world

[16:36:02.0000] <rniwa>
zewt: a lot of japanese/chinese scholars are really upset about how UCS-2 assignes the same code point for completely different characters

[16:36:03.0000] <rniwa>
zewt: right.

[16:37:00.0000] <rniwa>
zewt: on the other hand, it's pretty insulting to be imposed upon an encoding that can't encode your character properly

[16:37:01.0000] <zewt>
eh, utf-8 round-trips other encodings, so i don't know how there could be anything sjis (etc) could represent that utf-8 can not

[16:37:02.0000] <rniwa>
zewt: how would you feel if your bank switched to start using utf-8 text encoding so that it starts using wrong characters for your names?

[16:38:00.0000] <zewt>
i'm not convinced that's possible :)

[16:39:00.0000] <zewt>
(with the caveat that you have to get your lang declarations right, to avoid rendering eg. japanese characters with chinese fonts)

[16:39:01.0000] <gavinc>
rniwa: Eh? UTF-8 got it wrong? You mean Unicode got it wrong? as another encoding for Unicode won't have different characters

[16:40:00.0000] <zewt>
if there's any character in SJIS that doesn't have a direct round-trip equivalent in utf-8, that'd be a major unicode bug, afaik

[16:40:01.0000] <rniwa>
gavinc: I meant unicode

[16:41:00.0000] <zewt>
if there's any character that isn't displayed identically in utf-8 (with the correct language selected) as in sjis, i'd be interested in knowing what it is, and why it's different

[16:41:01.0000] <gavinc>
so there exist japanese characters for which there is no unicode code point?

[16:41:02.0000] <gavinc>
Kanji yes?

[16:41:03.0000] <rniwa>
gavinc: well, they probably have all code points but the problem is that it's shared with chinese characters

[16:41:04.0000] <rniwa>
gavinc: yes

[16:41:05.0000] <rniwa>
zewt: even shift_jis doesn't contain all characters we need.

[16:42:00.0000] <zewt>
rniwa: sharing with chinese characters is okay, again you just have to make sure the browser is picking the right language

[16:42:01.0000] <gavinc>
rniwa: Ah yes, the character is the same but two cultures define different meanings

[16:42:02.0000] <zewt>
gavinc: it's the weird clash between "character" and "glyph"

[16:42:03.0000] <rniwa>
gavinc: they're different chracters

[16:42:04.0000] <rniwa>
gavinc: do you suppose greek alpha is identical to latin a because they share the same origin?

[16:42:05.0000] <zewt>
rniwa: again, i'd like an example

[16:43:00.0000] <gavinc>
sorry, glyph

[16:43:01.0000] <gavinc>
meant glyph!

[16:43:02.0000] <rniwa>
anyways, i'm not in a position to discuss about this :)

[16:43:03.0000] <gavinc>
/me puts on encoding unicode brain

[16:43:04.0000] <zewt>
rniwa: i think you're wrong :)

[16:43:05.0000] <rniwa>
there are much more qualified people to talk about it

[16:43:06.0000] <gavinc>
Yeah, pulling bits of it out my memory

[16:43:07.0000] <gavinc>
Greek has in fact some of the same political issues in unicode :(

[16:44:00.0000] <zewt>
if you take sjis/euc-jp/iso-2022-jp text, convert to utf-8 and set lang=jp, it should always be rendered the same; if there are examples where this isn't the case, then I'd really like to know what they are

[16:44:01.0000] <gavinc>
Ah! Wikipedia will help you zewt http://en.wikipedia.org/wiki/Han_unification ;)

[16:44:02.0000] <zewt>
gavinc: i know what han unification is; my point is that lang is the disambiguator

[16:46:00.0000] <rniwa>
zewt: http://www.shuiren.org/chuden/teach/code/main8.htm#AdvantageDisadvantage

[16:48:00.0000] <rniwa>
the problem with unicode is that they assigned characters with different shapes, lines, etc... to the same code point

[16:48:01.0000] <rniwa>
even though they're not just aesthetic issues

[16:49:00.0000] <rniwa>
e.g. you can't interchange them in handwriting because they're different characters

[16:50:00.0000] <zewt>
rniwa: but the language attribute of the content tells it which glyph to use.

[16:50:01.0000] <rniwa>
zewt: that would mean that you can't mix chinese names and japanese names in the same context

[16:50:02.0000] <rniwa>
zewt: you have to specify the language to make any sense

[16:51:00.0000] <zewt>
sure you can: <span lang="jp">text</span> <span lang="zh">text2</span>

[16:51:01.0000] <zewt>
and besides, you can't do that *at all* with legacy encodings

[16:52:00.0000] <zewt>
http://zewt.org/~glenn/encoding%20utf-8.html http://zewt.org/~glenn/encoding%20sjis.html http://zewt.org/~glenn/encoding%20big5.html works fine

[16:52:01.0000] <zewt>
(used zh-TW since the glyph difference is more pronounced)

[16:52:02.0000] <AryehGregor>
Could we define non-BMP characters that mirror all the BMP CJK glyphs but with the language predetermined?

[16:52:03.0000] <AryehGregor>
That would probably just confuse everyone even more . . .

[16:53:00.0000] <rniwa>
zewt: apparently chrome doesn't support it :( it looks all the same

[16:53:01.0000] <rniwa>
/me is annoyed

[16:53:02.0000] <AryehGregor>
Likewise.

[16:53:03.0000] <zewt>
that'd be a massive chrome bug, unless I'm specifying something wrong

[16:53:04.0000] <zewt>
(or both could be true)

[16:54:00.0000] <zewt>
works fine in IE *8*

[16:54:01.0000] <rniwa>
zewt: firefox doesn't get it right either

[16:54:02.0000] <zewt>
(and FF8, which I tested with first)

[16:54:03.0000] <gavinc>
is there an img reference too?

[16:54:04.0000] <rniwa>
zewt: this might be a bug on Mac...

[16:54:05.0000] <zewt>
rniwa: you may not have both Japanese and Chinese fonts installed, in which case it'll probably fall back to the one you do have

[16:54:06.0000] <zewt>
however, i can confirm it's not working for me in Chrome

[16:55:00.0000] <zewt>
(windows, with both font sets installed)

[16:55:01.0000] <rniwa>
zewt: I have both Japanese / Chinese IMEs installed so that's hard to believe

[16:55:02.0000] <gavinc>
zewt: screen shot of what it -should- look like?

[16:55:03.0000] <zewt>
one sec

[16:55:04.0000] <rniwa>
gavinc: the box inside the upper box should be on the different sides

[16:56:00.0000] <rniwa>
gavinc: see http://www.shuiren.org/chuden/teach/code/main8.htm#AdvantageDisadvantage

[16:56:01.0000] <zewt>
http://zewt.org/~glenn/encoding%20expected.png

[16:56:02.0000] <rniwa>
gavinc: in JIS, it should be on the right.

[16:56:03.0000] <rniwa>
gavinc: in GB, it should be on the left.

[16:56:04.0000] <rniwa>
gavinc: in BIG5 it should be on the right but the bottom part should be simplified

[16:57:00.0000] <gavinc>
heh, so anyone else have the box in the top box on the LEFT? and not even on the right at all?

[16:57:01.0000] <rniwa>
gavinc: need traditional chinese font.

[16:57:02.0000] <rniwa>
gavinc: and I don't think zewt specified it to be traditional

[16:57:03.0000] <rniwa>
zewt: he probably used simplified chinese

[16:58:00.0000] <zewt>
i used zh-TW, because it's easier to distinguish from the JP glyph

[16:58:01.0000] <rniwa>
zewt, gavinc: see, the problem is that it's so hard to use this thing.

[16:58:02.0000] <zewt>
rniwa: oddly, I see the JP glyph on all three on the shuiren.org page

[16:58:03.0000] <rniwa>
zewt, gavinc: if we had a different code point, it just works fine.

[16:58:04.0000] <gavinc>
rniwa: yeah, I've been convinced.

[16:58:05.0000] <rniwa>
zewt: hehe, it's probably a browser bug

[16:59:00.0000] <rniwa>
I feel like this is a simialr issue to bidi

[16:59:01.0000] <zewt>
rniwa: "see" but you're changing the argument :) these are browser issues (bad ones, to be sure; this should be working reliably years and years ago), but it's not unicode's fault

[16:59:02.0000] <rniwa>
it's possible in theory but impossible in practice

[16:59:03.0000] <zewt>
uh, no, not at all

[17:00:00.0000] <rniwa>
zewt: the fact you're the only one seeing the correct glyph suggests to me that it's not working, is it?

[17:00:01.0000] <zewt>
for authors there's exactly one step: stick lang=ja (or zh-TW or zh-CN) around your content (probably on <body>)

[17:00:02.0000] <rniwa>
zewt: but the problem is that it doesn't work in many cases.

[17:00:03.0000] <zewt>
so it should be fixed; it's always worked for me

[17:01:00.0000] <rniwa>
zewt: what's the point of a spec. if it doesn't work on most implementations

[17:01:01.0000] <zewt>
works fine in FF8 and IE

[17:01:02.0000] <gavinc>
On Windows

[17:01:03.0000] <rniwa>
zewt: maybe this is an issue with mac then

[17:01:04.0000] <gavinc>
FF8 does not look right on Linux

[17:01:05.0000] <zewt>
and Opera

[17:03:00.0000] <zewt>
hmm, Chrome does render the suiren.org page correctly

[17:03:01.0000] <rniwa>
zewt, gavinc: similarly, we have the opposite problem as pointed on http://www.shuiren.org/chuden/teach/code/main8.htm#AdvantageDisadvantage

[17:03:02.0000] <zewt>
i bet that's because of the separate font specifier, though

[17:03:03.0000] <zewt>
rniwa: executive summary would be helpful; it would take me several minutes to read this :)

[17:03:04.0000] <rniwa>
gavinc, zewt: 為  and 爲 are just new/old glyphs for the same character but they're assigned to different code points

[17:04:00.0000] <gavinc>
骨 does look right on shuiren btw

[17:04:01.0000] <zewt>
<- can struggle through gradeschool spoken JP, but reading it isn't going to happen

[17:04:02.0000] <rniwa>
I'll leave the rest to unicode experts from tokyo

[17:04:03.0000] <rniwa>
but i'm bitter about UCS-2 in general.

[17:05:00.0000] <zewt>
chrome getting this wrong makes me upset; it's the sort of bug that'll set unicode-in-CJK-countries back by years

[17:06:00.0000] <rniwa>
zewt: yeah, I should probably file a bug about this.

[17:06:01.0000] <gavinc>
zewt: Chrome shows the WRONG thing for me on shuiren, where FF does the right thing

[17:06:02.0000] <rniwa>
it's super annoying

[17:07:00.0000] <zewt>
rniwa: please do (I would, but I expect a webkit report will get more attention)

[17:07:01.0000] <zewt>
also I wonder if this is a Chrome problem or a WebKit problem

[17:07:02.0000] <rniwa>
zewt: are you on windows?

[17:07:03.0000] <zewt>
yeah

[17:07:04.0000] <rniwa>
zewt: because it works perfectly fine on mac.

[17:07:05.0000] <zewt>
in chrome or safari?

[17:07:06.0000] <rniwa>
zewt: both

[17:08:00.0000] <rniwa>
zewt: it'll be super helpful if you could check safari as well

[17:08:01.0000] <zewt>
will need to fire up my VM with safari in it; one sec

[17:16:00.0000] <zewt>
eh, nothing is working right in my VM, not even the big5-encoded one

[17:16:01.0000] <zewt>
they're all showing the JP glyph

[17:16:02.0000] <zewt>
(XP, same on every browser I've tried)

[17:16:03.0000] <rniwa>
zewt: :(

[17:17:00.0000] <rniwa>
zewt: sounds like you don't have Eastern Asian language support on your Windows?

[17:17:01.0000] <zewt>
it looks like XP installs all CJK languages as a unit ("install files for east asian languages"), so installed fonts should be a problem

[17:17:02.0000] <zewt>
rniwa: if they weren't installed then the JP glyph wouldn't work either

[17:17:03.0000] <rniwa>
zewt: oh they all defaults to JP font?

[17:18:00.0000] <zewt>
yeah, even big5 shows the top one in http://zewt.org/~glenn/encoding%20expected.png

[17:18:01.0000] <zewt>
the fonts are there; i can see one of the ZH ones if I select the NSimSun font in Notepad

[17:19:00.0000] <zewt>
i guess i'll install safari natively instead of in this old XP VM

[17:19:01.0000] <zewt>
strange, though

[17:20:00.0000] <zewt>
(and so nobody's confused, this is unrelated--the problem happens with the legacy encodings, too)

[17:21:00.0000] <zewt>
this is fascinating: the Safari installer gave me the option to not auto-updated in XP, but that option seems to be mysteriously not present in 7

[17:22:00.0000] <zewt>
WHAT THE HELL

[17:22:01.0000] <zewt>
okay safari is on my software blacklist (it just played loud music when it launched)

[17:23:00.0000] <zewt>
that is not okay

[17:25:00.0000] <zewt>
rniwa: safari is showing the JP glyph in all cases, as far as I can see

[17:26:00.0000] <zewt>
including big5

[17:26:01.0000] <rniwa>
zewt: okay, it's probably webkit issue then

[17:26:02.0000] <zewt>
rniwa: does big5 look wrong to you, too?

[17:27:00.0000] <zewt>
that is, http://zewt.org/~glenn/encoding%20big5.html, which shows the zh-TW glyph for me

[17:27:01.0000] <zewt>
(in FF)

[17:34:00.0000] <rniwa>
zewt: it doesn't properly on mac either

[17:34:01.0000] <rniwa>
odd. it appears to use simplified font on windows :(

[17:35:00.0000] <zewt>
looks to use MS Gothic always for me

[17:35:01.0000] <rniwa>
zewt: filed https://bugs.webkit.org/show_bug.cgi?id=73507

[17:37:00.0000] <zewt>
rniwa: fwiw, you can probably remove the lang attribute there

[17:37:01.0000] <zewt>
since it seems to happen without it

[17:39:00.0000] <rniwa>
zewt: http://www.shuiren.org/chuden/teach/code/main8.htm renders correctly on Chrome on Windows for me

[17:40:00.0000] <zewt>
rniwa: it seems to have some xhtml-related problem for me

[17:40:01.0000] <zewt>
if I s/xml:lang/lang/, it works

[17:41:00.0000] <zewt>
er, no, that was in FF

[17:41:01.0000] <zewt>
(overjuggling)

[17:42:00.0000] <rniwa>
zewt: ?

[17:42:01.0000] <zewt>
(it renders wrong in FF8 for me, because of something to do with xhtml)

[17:43:00.0000] <zewt>
rniwa: it renders correctly in Chrome only because of the font-family style

[17:43:01.0000] <zewt>
<td><span xml:lang="zh-cn" style="font-size: 140%; font-family: SimSun">œ</span></td>

[17:43:02.0000] <rniwa>
:(

[17:43:03.0000] <zewt>
it's not actually using the language there

[17:43:04.0000] <rniwa>
that's quite stupid

[17:44:00.0000] <zewt>
so i'm guessing it shares whatever safari's problem is with lang

[17:47:00.0000] <zewt>
rniwa: do you at least agree that, if browsers iron this stuff out (which should have happened long ago), language tagging + UTF-8 is a workable approach for authors to deal with han unification?

[17:47:01.0000] <zewt>
(that is, all you do is add lang=jp to <body>)

[17:47:02.0000] <zewt>
(for the vast majority of cases)

[17:48:00.0000] <rniwa>
zewt: not really. I still think it's broken in many ways. but I'd agree that we should fix it.

[17:48:01.0000] <zewt>
why?

[17:48:02.0000] <rniwa>
zewt: so that we can at least get the functionality UCS-2 provides.

[17:48:03.0000] <rniwa>
zewt: I've already pointed out the code point issues.

[17:49:00.0000] <zewt>
which language tagging fixes (and that's how CJK unicode rendering was intended to work from the beginning)

[17:50:00.0000] <rniwa>
zewt: not really

[17:50:01.0000] <zewt>
...

[17:50:02.0000] <rniwa>
zewt: some characters are assinged to two different code points even though they're the same character

[17:50:03.0000] <rniwa>
of different styles

[17:50:04.0000] <zewt>
so?

[17:50:05.0000] <rniwa>
zewt: that would mean that changing fonts don't work

[17:50:06.0000] <rniwa>
zewt: you need to edit the html to use different styles of characters

[17:50:07.0000] <rniwa>
etc...

[17:51:00.0000] <zewt>
there are multiple codepoints for "A" (full-width latin); it's a little weird but not a real problem

[17:53:00.0000] <zewt>
(when I see it I wish people wouldn't use it, but it's not nearly annoying enough to not use UTF-8 for)

[18:18:00.0000] <roc>
I assume you guys know about UVS

[18:22:00.0000] <zewt>
(not off-hand)

[18:24:00.0000] <roc>
a Unicode feature that uses supplemental codepoints to encode glyph variations

[18:25:00.0000] <roc>
I believe it's partly intended to address the complaints about Han unification

[18:26:00.0000] <roc>
language markup works too, although it's confusing because language often affects font choice as well as shaping

[18:26:01.0000] <zewt>
well, shaping is just part of the font in most systems

[18:26:02.0000] <roc>
E.g. your language attributes might fix the problem by causing a suitable font to be selected

[18:27:00.0000] <roc>
but if you explicitly set the "wrong" font (or the user does, maybe), you'd lose

[18:27:01.0000] <zewt>
japanese fonts generally don't have chinese glyphs in them to begin with (putting aside that ttf fonts probably have no way to express that; don't know)

[18:28:00.0000] <roc>
right, so if someone forced use of a Japanese font, then your Chinese text won't display properly

[18:28:01.0000] <roc>
Opentype fonts can use language-specific shaping tables, and Gecko supports that, but I don't know how many fonts do

[18:28:02.0000] <zewt>
that could be fixed in time, of course, though i suspect mixing japanese and chinese glyphs is too much of an edge case for the cost

[18:28:03.0000] <roc>
so a font could support both Japanese and Chinese correctly

[18:30:00.0000] <zewt>
but this isn't actually a problem with the lang markup approach (eg. I doubt encoding it with Unicode features would change it)

[18:30:01.0000] <zewt>
it's just limitations of the fonts and font engines

[18:31:00.0000] <roc>
true

[18:59:00.0000] <dglazkov>
wg what?

[19:02:00.0000] <divya>
wow thg

[19:02:01.0000] <divya>
/me fails at anagrams

[20:02:00.0000] <dbaron>
roc, you mean IVS?  (Ideographic Variation Sequences)

[20:13:00.0000] <roc>
yes

[22:59:00.0000] <hsivonen>
where do I see the system requirements for Opera Next?

[23:44:00.0000] <hsivonen>
categorizing elliptical arcs and elliptical curves as graphics or crypto could be a CAPTCHA question

[23:52:00.0000] <annevk>
hsivonen: the same as http://www.opera.com/browser/download/requirements/ prolly

[23:52:01.0000] <annevk>
hsivonen: not sure if we have that stated somewhere

[23:57:00.0000] <annevk>
I don't get the XPath thread, why don't the proponents simply write a spec and get it implemented?

[23:57:01.0000] <zcorpan>
so there's discussion about incremental XHR, but no discussion about incremental HTML/XML parsing APIs

[23:58:00.0000] <annevk>
Is that even needed though?

[00:00:00.0000] <annevk>
whatwg.org slow?

[00:01:00.0000] <zcorpan>
consider a page that inserts new content fetched from xhr

[00:01:01.0000] <zcorpan>
currently people wait for everything to download, and then assign innerHTML or so

[00:02:00.0000] <zcorpan>
with chunked XHR, they still need to wait for everything before assigning to innerHTML

[00:02:01.0000] <annevk>
so some new kind of document.write() API?

[00:03:00.0000] <zcorpan>
yeah

[00:03:01.0000] <annevk>
o_O

[00:03:02.0000] <zcorpan>
element.write() :)

[00:07:00.0000] <hsivonen>
annevk: ok. Re: requirements

[00:08:00.0000] <hsivonen>
annevk: Re: XPath: it's not just an issue of the proponents getting it implemented. patches might not be welcome if they are perceived as a slippery slope to having to get on the XPath 2 maintenance treadmill

[00:09:00.0000] <hsivonen>
annevk: IIRC, some WebKit/Qt hacker tried to contrib XPath 2 (or was it XSLT 2) support, but the wider WebKit stakeholders wisely rejected it

[00:09:01.0000] <annevk>
Okay, but e.g. EXSLT has been implemented by some browsers...

[00:09:02.0000] <annevk>
From what I remember anyway, it's been a while

[00:10:00.0000] <hsivonen>
annevk: yeah, at the time when Mozilla accepted patches for pretty much anything than looked stardardish

[00:12:00.0000] <hsivonen>
fortunately for math, MathML got in the codebase, too, during that era

[00:22:00.0000] <annevk>
hsivonen: I asked and our system requirements are so low that nobody has really cared to put that amount of detail into experimental releases

[00:22:01.0000] <annevk>
hsivonen: runs on => W2K and we only just ditched W9x support if that means anything to you

[00:22:02.0000] <annevk>
/me has a fast Mac, doesn't care

[00:26:00.0000] <annevk>
3PM ET == 9PM CET?

[00:26:01.0000] <annevk>
MikeSmith, ^^

[00:26:02.0000] <annevk>
/me might not make that

[00:27:00.0000] <MikeSmith>
annevk: no problem

[00:27:01.0000] <MikeSmith>
that was the only time it seems we could get everybody on

[00:27:02.0000] <annevk>
yeah, have fun :)

[00:27:03.0000] <MikeSmith>
well, not everybody, obviously

[00:27:04.0000] <MikeSmith>
I honestly don't know what's left to say about that, anyway

[00:28:00.0000] <MikeSmith>
I thought my last message in the thread made it all pretty clear

[00:28:01.0000] <annevk>
some people like to talk to talk

[00:28:02.0000] <annevk>
or something

[00:28:03.0000] <MikeSmith>
yeah

[00:28:04.0000] <MikeSmith>
for three years

[00:28:05.0000] <MikeSmith>
saying the same things without actually doing much of anything concrete

[00:29:00.0000] <MikeSmith>
anyway, I need to step out for food and drink

[00:30:00.0000] <MikeSmith>
long evening of late-night telcons to look forward to

[00:31:00.0000] <annevk>
go to the fancy sushi place :)

[00:33:00.0000] <jgraham>
annevk: Yeah, someone should write a spec for teh XPath thing. I can't really do it though as either bratell or Katie would kill me. Maybe João should do it.

[00:37:00.0000] <annevk>
zcorpan: fwiw, until queue a task moves to DOM4, it's the wrong place to spec APIs around it imo

[00:38:00.0000] <annevk>
jgraham: you should write notifications already :p

[00:38:01.0000] <jgraham>
annevk: I know :)

[00:38:02.0000] <annevk>
jgraham: why would Katie kill you though? you'd do it in your free time?

[00:38:03.0000] <annevk>
jgraham: didn't realize the Xpath-love was so strong with you :p

[00:39:00.0000] <jgraham>
Well yeah, the two options would be use work time -> death by bratell, use free time -> death by Katie. Both options  end in death. I don't like XPath *that* much

[00:39:01.0000] <annevk>
it would be nice though if there finally was a spec that said how //text() works with DOM-based environments

[00:40:00.0000] <zcorpan>
annevk: moved the bug

[00:41:00.0000] <annevk>
thanks

[00:41:01.0000] <zcorpan>
jgraham: what happens if you use half the time on work time and the other half on free time?

[00:42:00.0000] <annevk>
coma

[00:43:00.0000] <jgraham>
Isn't that how you unleash the special 2 v 1 mode that leads to quick, but painful, death?

[00:43:01.0000] <jgraham>
*unlock

[00:44:00.0000] <jgraham>
Anyway, seriously, not going to happen at the moment

[00:49:00.0000] <rniwa>
annevk: so about setAttributeNS / setAttribute difference,

[00:49:01.0000] <rniwa>
annevk: the problem is that setAttributeNS does more than just setting the value

[00:49:02.0000] <rniwa>
annevk: it also modifies the namespace prefix

[00:50:00.0000] <rniwa>
annevk: so I'd have to special-case that :(

[00:50:01.0000] <zcorpan>
modifying prefix seems annoying

[00:51:00.0000] <annevk>
rniwa: ideally we remove that

[00:51:01.0000] <annevk>
rniwa: it currently does not do that in WebKit or Opera

[00:51:02.0000] <annevk>
rniwa: Gecko does do it, but then mutation observers does not take it into account

[00:51:03.0000] <rniwa>
annevk: how about IE?

[00:52:00.0000] <annevk>
I cannot test IE :(

[00:52:01.0000] <rniwa>
i didn't even know about namespace prefix stuff 'til I read the spec

[00:52:02.0000] <rniwa>
it's super annoying

[00:52:03.0000] <annevk>
if you paste http://lists.w3.org/Archives/Public/www-dom/2011OctDec/0214.html in the live dom viewer you can find out what IE does

[00:52:04.0000] <rniwa>
/me boots his windows machine

[00:52:05.0000] <annevk>
rniwa: say so in the www-dom thread!

[00:53:00.0000] <annevk>
rniwa: if everyone but sicking finds it annoying, we're just going to not do it

[00:53:01.0000] <annevk>
as it's a super edge case not worth caring much about

[00:53:02.0000] <rniwa>
annevk: i'm waiting 'til my spec goes on public-webapps

[00:54:00.0000] <rniwa>
I highly doubt that any author understands this behavior

[00:54:01.0000] <rniwa>
but then.. very few people use setAttributeNS anyway

[00:54:02.0000] <sicking>
annevk: finds what annoying?

[00:54:03.0000] <rniwa>
so maybe those people get annoyed ?

[00:54:04.0000] <sicking>
annevk: i find prefixes annoying in all forms :)

[00:54:05.0000] <annevk>
sicking: setAttributeNS doing more than setting the value

[00:54:06.0000] <sicking>
node prefixes that is

[00:54:07.0000] <rniwa>
sicking: namespace prefix changes in setAttributeNS

[00:55:00.0000] <sicking>
annevk: oh, I don't believe I said anything on that topic at all

[00:55:01.0000] <rniwa>
sicking: it makes undo manager / DOM4 spec more complicated :(

[00:55:02.0000] <sicking>
annevk: other than that i'd like to get rid of namespaced attributes

[00:55:03.0000] <annevk>
am I confusing sicking and bz again

[00:55:04.0000] <annevk>
:(

[00:55:05.0000] <annevk>
sorry sicking

[00:55:06.0000] <sicking>
annevk: bz has a much nicer beard than me

[00:56:00.0000] <annevk>
heh, I'd love to meet him one day

[00:56:01.0000] <sicking>
i thought you met him in MV once

[00:56:02.0000] <sicking>
but maybe you weren't there

[00:56:03.0000] <annevk>
ooh maybe a long time ago

[00:57:00.0000] <rniwa>
annevk: as I've suspected, IE supports it

[00:57:01.0000] <rniwa>
annevk: live DOM viewer shows e:a="b"

[00:57:02.0000] <annevk>
kk

[00:59:00.0000] <annevk>
I think http://lists.w3.org/Archives/Public/www-dom/2011OctDec/0222.html is a very compelling argument though and therefore I think I will just remove it

[00:59:01.0000] <annevk>
and I'll file a bug on Gecko to see if they are willing to match the spec

[01:02:00.0000] <rniwa>
alright

[01:02:01.0000] <rniwa>
my spec just got real :D

[01:02:02.0000] <rniwa>
all pending issues have been resolved

[01:03:00.0000] <annevk>
you mean the first 80%?

[01:03:01.0000] <annevk>
the remaining 80% takes half a decade :p

[01:03:02.0000] <rniwa>
annevk: basically, I don't have anything to add at this point except clarifying details (which is going to take another 2 years to finish)

[01:03:03.0000] <rniwa>
annevk: yeah, the first 80%.

[01:03:04.0000] <rniwa>
annevk: the remaining 20% will take 2 years + 10 years for writing tests

[01:04:00.0000] <rniwa>
well at least in my optimistic estimate

[01:04:01.0000] <annevk>
congratulations though, still pretty sweet :)

[01:04:02.0000] <rniwa>
annevk: yeah, i'm super excited about it

[01:04:03.0000] <rniwa>
/me needs to update the date and push it to rniwa.com

[01:05:00.0000] <jgraham>
You probably also need to get implementations ;)

[01:05:01.0000] <rniwa>
jgraham: yeah...

[01:05:02.0000] <rniwa>
jgraham: I was hoping to get an intern do it

[01:05:03.0000] <rniwa>
jgraham: but apparently people want it before next summer

[01:06:00.0000] <rniwa>
so i guess i'll do it in Q1

[01:08:00.0000] <rniwa>
jgraham: I hear sicking had an intern start implementing it for gecko

[01:08:01.0000] <sicking>
rniwa: yeah, he got far but didn't finish it. Don't know when we'll be able to do the remaining parts :(

[01:09:00.0000] <rniwa>
sicking: sounds like he has a full-time offer?

[01:09:01.0000] <sicking>
rniwa: oh, there's one part that i notcied that you're missing

[01:09:02.0000] <rniwa>
sicking: ?

[01:09:03.0000] <sicking>
rniwa: you only have info on how to revert changes

[01:09:04.0000] <sicking>
rniwa: not how to reapply them

[01:09:05.0000] <rniwa>
sicking: right

[01:09:06.0000] <rniwa>
sicking: oh, so reapply will be reverts of reverts

[01:10:00.0000] <sicking>
rniwa: hmm... is that always true

[01:10:01.0000] <rniwa>
sicking: I think so.

[01:10:02.0000] <sicking>
could be

[01:11:00.0000] <rniwa>
sicking: if there are cases where that's not the case, then let me know

[01:11:01.0000] <rniwa>
sicking: but I haven't been able to come up with a case yet.

[01:11:02.0000] <sicking>
still needs to be defined. But if it's that simple i might have missed it.

[01:11:03.0000] <rniwa>
sicking: so in http://rniwa.com/editing/undomanager.html#automatic-dom-transactions

[01:12:00.0000] <rniwa>
sicking: I say "When an automatic DOM transaction is reapplied, the user agent must revert DOM changes made inside the undo scope of the the UndoManager while unapplying the transation."

[01:12:01.0000] <rniwa>
sicking: whereas for unapply, I said "When an automatic DOM transaction is unapplied, the user agent must revert DOM changes made inside the undo scope of the the UndoManager while *applying* the transation"

[01:15:00.0000] <hsivonen>
What's the best workflow for going from .ttf to a subsetted .woff these days in a way that doesn't break ligatures and contextual alternative glyphs?

[01:15:01.0000] <hsivonen>
is it Philip`'s subsetter plus a separate .ttf to .woff converter?

[01:15:02.0000] <rniwa>
sicking: does that make sense? or should I clarify more?

[01:19:00.0000] <sicking>
rniwa: that means that the implementation must continuously update it's automatic transaction though, is that good?

[01:19:01.0000] <sicking>
rniwa: currently in gecko we just store information when the transaction is created, and that information remains constant as we apply/unapply

[01:20:00.0000] <rniwa>
!?

[01:20:01.0000] <rniwa>
sicking: right.

[01:21:00.0000] <rniwa>
sicking: I don't really follow your continuously updating part.

[01:21:01.0000] <sicking>
rniwa: say that you create an automatic transaction which inserts a node

[01:21:02.0000] <rniwa>
sicking: I'm not saying that you should implement each mutation inside undo/redo as an automatic transaction

[01:22:00.0000] <sicking>
rniwa: a transaction-object is created which stores a reference to that node (and maybe other information)

[01:22:01.0000] <sicking>
rniwa: say that the page the removes the node from the DOM

[01:22:02.0000] <sicking>
rniwa: and then calls unapply

[01:22:03.0000] <sicking>
rniwa: at this point unapply can't remove the node since it no longer has a parent

[01:22:04.0000] <rniwa>
sicking: right

[01:22:05.0000] <sicking>
rniwa: in other words, unapply doesn't do anything

[01:22:06.0000] <rniwa>
sicking: sure.

[01:23:00.0000] <rniwa>
sicking: so it didn't make any DOM changes

[01:23:01.0000] <rniwa>
sicking: if you do reapply at that point, reapply doesn't do anything

[01:23:02.0000] <sicking>
rniwa: per spec, that means that the transaction has to update it's internal information to now represent nothing

[01:23:03.0000] <rniwa>
hm....

[01:23:04.0000] <rniwa>
sicking: would that be an issue?

[01:23:05.0000] <sicking>
rniwa: in other words, the transaction doesn't hold constant data

[01:23:06.0000] <sicking>
rniwa: seems harder implementation wise. To no benefit as far as i can see

[01:23:07.0000] <hsivonen>
Philip`: do you happen to know of an up-to-date .ttf to .woff converter that runs on Linux?

[01:24:00.0000] <rniwa>
hm...

[01:24:01.0000] <sicking>
rniwa: in fact, it's probably good if the implementation holds the data so that it can try to re-insert the node if you reapply

[01:24:02.0000] <rniwa>
sicking: ok, I think you're right.

[01:24:03.0000] <rniwa>
sicking: i guess I'll just change the spec then

[01:25:00.0000] <sicking>
rniwa: thanks. I do think that'll make implementation a good bit simpler

[01:25:01.0000] <zcorpan>
hsivonen: is fontsquirrel broken?

[01:27:00.0000] <hsivonen>
zcorpan: do you mean this: http://www.fontsquirrel.com/fontface/generator

[01:27:01.0000] <hsivonen>
zcorpan: it's not something I can automate on Linux

[01:27:02.0000] <hsivonen>
zcorpan: is that the best that's available?

[01:27:03.0000] <zcorpan>
no idea

[01:27:04.0000] <hsivonen>
(Flash-based file upload. boo.)

[01:28:00.0000] <zcorpan>
ugh

[01:31:00.0000] <rniwa>
sicking: yeah, I guess I wasn't thinking through

[01:31:01.0000] <rniwa>
/me replies some random email about Arabizi

[01:32:00.0000] <rniwa>
I don't quite understand what they're trying to propose though

[01:34:00.0000] <annevk>
should the DOM specification have these kind of anal definitions:

[01:35:00.0000] <annevk>
X attribute: An attribute whose local name is X and namespace and namespace prefix are null

[01:35:01.0000] <annevk>
has an X attribute: An element that has an X attribute in its attribute list

[01:36:00.0000] <annevk>
s/has an X attribute/has an attribute/

[01:39:00.0000] <annevk>
I'm just going to go with it

[01:39:01.0000] <annevk>
someone can tell me otherwise later

[01:41:00.0000] <rniwa>
annevk: that sounds fine

[01:41:01.0000] <rniwa>
annevk: although "has an X attribute: An element that has an X attribute in its attribute list" sounds like a recursive definition

[01:48:00.0000] <rniwa>
sicking: I suppose there's no sanity check required for reapplying DOM changes?

[01:49:00.0000] <rniwa>
hm... i guess there's some.

[01:49:01.0000] <annevk>
if you just say element has an attribute, where do you look?

[01:49:02.0000] <annevk>
it's commonly assumed you look in its attribute list and in fact it's the only logical thing to do

[01:49:03.0000] <annevk>
but it's not written down

[01:49:04.0000] <rniwa>
annevk: right.

[01:49:05.0000] <annevk>
at least not so far

[01:50:00.0000] <annevk>
:)

[01:50:01.0000] <rniwa>
annevk: I'd say that an element E has an attribute A if an attribute A is in E's attribute list.

[01:51:00.0000] <rniwa>
annevk: we should really kill attribute nodes

[01:51:01.0000] <annevk>
yeah, that's the definition

[01:51:02.0000] <annevk>
rniwa: already done spec-wise...

[01:51:03.0000] <rniwa>
annevk: oh really?

[01:51:04.0000] <rniwa>
hm... we just need to kill the ones in the wild i guess?

[01:51:05.0000] <annevk>
rniwa: Gecko is trying that for us

[01:52:00.0000] <rniwa>
annevk: great!

[01:52:01.0000] <annevk>
rniwa: they give plenty of warnings if you try to do Attr node related stuff

[01:52:02.0000] <rniwa>
annevk: I think we can improve the DOM perf. a lot once we get rid of attr nodes

[01:52:03.0000] <annevk>
made Facebook stop using it

[01:52:04.0000] <rniwa>
annevk: that's very nice

[01:53:00.0000] <annevk>
attribute nodes are DTD legacy :(

[01:54:00.0000] <annevk>
so in a way we can blame Dan Connolly for convincing Tim HTML had to be SGML-based

[01:54:01.0000] <annevk>
(rather than just inspired, as HTML 1 was)

[02:03:00.0000] <sicking>
annevk: really? I didn't know that history, that's very interesting

[02:10:00.0000] <annevk>
sicking: e.g. in http://www.w3.org/People/Raggett/book4/ch02.html search for "July 1994"

[02:11:00.0000] <annevk>
sicking: or http://infomesh.net/html/history/early/

[02:12:00.0000] <annevk>
Dan told me in person, too :)

[03:10:00.0000] <malydok>
I've got a weird problem with firefox recently: almost everywhere I click appears a blinking vertical text bar. Wut?

[03:11:00.0000] <jgraham>
Press F7

[03:12:00.0000] <malydok>
Wow, thanks.

[03:12:01.0000] <malydok>
What's that option anyway?

[03:12:02.0000] <malydok>
Found it, nvm.

[03:13:00.0000] <jgraham>
It's caret browsing mode; supposed to help keyboard navigate web pages iirc

[03:14:00.0000] <malydok>
"Allow text to be selected with the keyboard"

[03:22:00.0000] <opalepatrick>
looking for a place to ask simple questions related to html5 etc. Like "is header img {}" acceptable?

[03:23:00.0000] <zcorpan>
here might work. or #html5

[03:26:00.0000] <opalepatrick>
Cheers - I suppose my question is does <header> respond to normal block level css - so I could center a log iusing margin, etc?

[03:26:01.0000] <opalepatrick>
logo*

[03:27:00.0000] <jgraham>
Generally HTML elements are entirely independent of CSS

[03:27:01.0000] <jgraham>
In the sense that any CSS rule can be applied to any element

[03:27:02.0000] <jgraham>
The only exception is replaced content including forms

[03:29:00.0000] <opalepatrick>
thanks jgraham - it is probably just me having difficulty centering a logo in a header.

[03:49:00.0000] <Philip`>
hsivonen: I know almost precisely nothing about WOFF

[04:13:00.0000] <zcorpan>
opalepatrick: in browsers that don't support <header>, it's an inline element, so you need to set it to display:block to work as you expect

[04:38:00.0000] <opalepatrick>
thanks very much for that zcorpan - worked perfectly - I am surprised that firefox 8 doesnt actually support header like that

[04:46:00.0000] <hsivonen>
I find it a bit unintuitive that overflow: -o-paged-x; is declared inside an @media -o-paged {} at-rule

[04:46:01.0000] <hsivonen>
so the media is somehow considered paged before paging is enabled

[04:47:00.0000] <zcorpan>
iirc annevk suggested the at-rule could be dropped

[04:52:00.0000] <hsivonen>
also, -o-paged-x-controls is uglyish and doesn't work nicely when set on an element that has rounded corners.

[04:52:01.0000] <hsivonen>
furthermore, on Linux, height: 100% on the root means 100% of the screen height

[04:52:02.0000] <hsivonen>
which makes no sense when the browser chrome takes part of the screen height

[04:53:00.0000] <hsivonen>
so I get both paging and a vertical scrollbar

[04:53:01.0000] <jgraham>
Sounds like a bug

[04:53:02.0000] <hsivonen>
sure

[04:55:00.0000] <hsivonen>
in other news, having three consecutive elements two first ones of which have page-break-after:avoid; allows a page break between the first and the second instead of moving all three to the next page

[05:04:00.0000] <hsivonen>
so I have a floating image with a negative margin right. When it's on a column on the left, it gets clipped by the column to the right

[05:05:00.0000] <hsivonen>
Opera Reader bug or a CSS multicol feature?

[05:05:01.0000] <hsivonen>
do I need some z-index trick to make an image that pokes out of its column paint on top of the next column?

[05:16:00.0000] <hsivonen>
looks like break-inside: avoid-column; is not supported :-(

[05:20:00.0000] <hsivonen>
even more curious than the Linux case of height: 100% referring to screen height, on Honeycomb, it also refers to the screen height instead of the height left to the app after the system has taken the actionbar space

[05:21:00.0000] <jgraham>
hsivonen: If you file [a|some] bug[s], can you point me at [it|them] and I will try to make sure they reach the right people

[05:26:00.0000] <jgraham>
Oh, mailman day again

[06:30:00.0000] <zcorpan>
/me notices that transfer of .nu domain name from loopia costs 2,387.50 SEK

[06:30:01.0000] <zcorpan>
.mobi is free to transfer

[06:51:00.0000] <MikeSmith>
heh

[06:51:01.0000] <MikeSmith>
 telnet miku.acm.uiuc.edu

[06:55:00.0000] <zcorpan>
/me has never used telnet

[06:55:01.0000] <jgraham>
Things that are weird: In Dave Raggett's book he talks about himself in the third person

[07:08:00.0000] <StewieG>
Hello

[07:11:00.0000] <StewieG>
maybe someone has experience with Video conferencing and peer-to-peer communication ?

[07:13:00.0000] <AryehGregor>
StewieG, if you have a question, best to just ask it.

[07:13:01.0000] <AryehGregor>
Then hang around and wait.

[07:13:02.0000] <AryehGregor>
Someone might get back to you after a while.

[07:14:00.0000] <AryehGregor>
There are definitely people here who are familiar with those parts of HTML, yes.

[07:32:00.0000] <jgraham>
AryehGregor: Not good enough it seems

[07:33:00.0000] <AryehGregor>
What's not good enough?

[07:41:00.0000] <Velmont>
I did live video streaming from a "conference" early this morning using html5 et al. :-)

[07:45:00.0000] <TabAtkins_>
Hixie: How do I upload files to the whatwg wiki?  I've got some screenshots for the text-input-mode page.

[07:53:00.0000] <jgraham>
AryehGregor: Ask a question and wait

[08:23:00.0000] <zewt>
seem to recall having a discussion about callback-based blobs for providing data sources, but can't remember where...

[08:24:00.0000] <zewt>
found it, "File API Streaming Blobs"

[08:57:00.0000] <nick5437>
hi

[09:00:00.0000] <nick5437>
Philip`: the code you suggested yesteday to emulate the useful "copy" is not working because the "crop" does not consider the width of a single line as a path

[09:04:00.0000] <nick5437>
anyone here?

[09:06:00.0000] <nick5437>
Is it possible to change the spec about "copy" of globalCompositeOperation in canvas to make it like the current chrome implementation or to add a new globalCompositeOperation to have the same result?

[09:06:01.0000] <AryehGregor>
nick5437, you might want to file a spec bug.

[09:06:02.0000] <AryehGregor>
Noting how all the different browsers behave would be useful.

[09:07:00.0000] <AryehGregor>
If other major browsers also behave that way, then you could probably make a good case for it.

[09:08:00.0000] <nick5437>
firefox used to do the "copy" in that way too but they changed idea only to be with spec, not because the spec "copy" is useful in real uses. there is an interesting conversation in the bug fix about that in firefox

[09:08:01.0000] <Philip`>
nick5437: The compositing behaviour has been discussed several times, about making it only apply to pixels that are drawn and not to any outside the shapes, but it seems unlikely to change unless someone can at least define precisely how to determine what pixels are drawn (in a way that can be interoperably implemented)

[09:09:00.0000] <Philip`>
(including interaction with shadows etc)

[09:13:00.0000] <nick5437>
is it possible to add a new globalCompositeOperation that do the same? browsers like firefox already have the code to do both "copy" so it could become real in a realistic time, right?

[09:14:00.0000] <nick5437>
i think the old firefox copy and current chrome

[09:14:01.0000] <Philip`>
It's only possible if someone can define precisely how it should work :-)

[09:14:02.0000] <Philip`>
/me doesn't know how well the old implementations matched each other

[09:17:00.0000] <nick5437>
is it ok for the spec an image with about 5 examples about the way it should work with shadows and opacity? A picture is worth a thousand words sometimes. to avoid browser confusion on implementation like now

[09:18:00.0000] <AryehGregor>
nick5437, I'm pretty sure a precise definition is needed, not just examples.

[09:18:01.0000] <Philip`>
Pictures are too ambiguous to specify behaviour, though they can be very useful when trying to figure out what behaviour to write down

[09:19:00.0000] <nick5437>
the actual specs using text only have generated lots of confusion in my opinion

[09:19:01.0000] <nick5437>
http://www.rekim.com/2011/02/11/html5-canvas-globalcompositeoperation-browser-handling/

[09:20:00.0000] <nick5437>
or the browser creators are not able to read the specs

[09:21:00.0000] <Philip`>
I believe all implementors agree on the understanding of what the spec specifies

[09:21:01.0000] <Hixie>
what's the service that runs under the username lhunt on whatwg.org?

[09:21:02.0000] <Hixie>
the blog?

[09:21:03.0000] <Philip`>
(though they haven't all got around to implementing it that way)

[09:22:00.0000] <Hixie>
looks like it's the blog, the forum is under whatforum and the wiki under whatwiki

[09:22:01.0000] <Hixie>
assuming it's the blog, the blog is getting hit hard at the moment, wtf

[09:29:00.0000] <nick5437>
My english is not so good to create a detailed spec (I'm not a native). Could I post an image with examples about the "goodcopy" and let others on the review process to formulate a good text spec?

[09:34:00.0000] <AryehGregor>
nick5437, writing good specs is very hard.  It's not just about phrasing it, it's about figuring out all the corner cases.

[09:34:01.0000] <AryehGregor>
In this case, good performance might be essential too.

[09:36:00.0000] <nick5437>
the code of what I'm proposing is already there on firefox and chrome. I'm just proposing to call "goodcopy" the actual chrome implementation of "copy" and "copy" the actual implementation of "copy" on firefox

[09:36:01.0000] <AryehGregor>
Are you assuming they're actually interoperable in corner cases?

[09:41:00.0000] <nick5437>
i tried it with different opacities and the implementation looks fine. The whole stuff I'm talking about creating lines with different opacities, size and blur in drawing apps using tablet pressure

[09:43:00.0000] <tantek>
Hixie, I'm iterating on the change proposals for time/data to include responses to issues/alternatives raised and I wanted to get your opinion on a few things

[09:44:00.0000] <nick5437>
I think tablet pressure + html5 is something interesting and the "goodcopy" an easy way to use it without changing all the line specs or adding a new line type

[09:59:00.0000] <tantek>
Hixie, in particular, for <time> element, what do you think of allowing the datetime syntax with a space (U+0020) instead of 'T' between the date and time?

[09:59:01.0000] <tantek>
my opinion is that it would be helpful

[10:03:00.0000] <tantek>
there has also been a proposal to add a "tz" attribute to the <time> element to provide separate timezone information

[10:03:01.0000] <tantek>
I have mixed feelings about it

[10:04:00.0000] <tantek>
on the one hand I appreciate the seemingly cleaner design by separating timezone into a separate attribute

[10:04:01.0000] <tantek>
on the other hand I think it may actually *worse* data quality

[10:05:00.0000] <tantek>
and potentially (even worse) cause us to consider incorporating Olsen - which is a huge mistake for any data format (basing on something that is politically in flux over time)

[10:05:01.0000] <tantek>
e.g. I can see people seeing the "tz" attribute, and instead of writing tz="-0800", writing something like tz="PST"

[10:06:00.0000] <tantek>
and if enough people make that mistake - we'd have to consider incorporating some sort of named time zone database etc.

[10:06:01.0000] <tantek>
so since I'm unsure about it - I'd rather leave out a dedicated "tz" attribute for now

[10:06:02.0000] <tantek>
anybody else have any thoughts on that?

[10:07:00.0000] <tantek>
btw this is all regarding Marat's alternate time element proposals: http://www.w3.org/wiki/User:Mtanalin/time_element

[10:11:00.0000] <tantek>
Sam has asked me to address the issues and counter proposals (such as that) that have been raised as part of my time/data element change proposals: http://www.w3.org/wiki/User:Tantekelik#time_element_issues

[10:11:01.0000] <tantek>
I believe the goal is to reach some sort of consensus with alternatives/issues for the sake of the HTMLWG.

[10:15:00.0000] <tantek>
Also, I'm opposed to renaming datetime to value/content etc. Given the constrained microsyntax(es), it makes sense to have a specific attribute name.

[10:16:00.0000] <tantek>
Also, web authors work better with specific attribute names like datetime which provide a hint as to what the attribute is about, rather than abstract attribute names like "value" which seem like they can take anything (which it can't in the time element).

[10:16:01.0000] <tantek>
Also, "value" collides with the existing semantics of say <input> value

[10:16:02.0000] <tantek>
defining an attribute with the same name but completely different meaning will only confuse web authors

[10:17:00.0000] <tantek>
if anyone has any other reasons against renaming datetime to value/content etc.  please feel free to chime in

[10:22:00.0000] <nick5437>
is the timezone considering something related to the daylight saving time too?

[10:22:01.0000] <nick5437>
or it is not a problem at all

[10:33:00.0000] <TabAtkins_>
tantek: You're a whatwg wiki admin, right?  Do I need special permissions to upload images or something?

[10:36:00.0000] <Hixie>
tantek: a single space instead of the T? or just any whitespace?

[10:37:00.0000] <Hixie>
TabAtkins_: we can make you an admin too

[10:37:01.0000] <tantek>
hixie - just a single space

[10:37:02.0000] <tantek>
instead of the T

[10:38:00.0000] <Hixie>
so <time datetime="9901-01-01 00:00:00"></time> would be value, but

[10:38:01.0000] <Hixie>
so <time datetime="9901-01-01

[10:38:02.0000] <Hixie>
00:00:00"></time> would not?

[10:38:03.0000] <Hixie>
s/value/value/

[10:38:04.0000] <Hixie>
geez

[10:38:05.0000] <Hixie>
s/value/valid/

[10:38:06.0000] <tantek>
right

[10:38:07.0000] <tantek>
just U+0020

[10:39:00.0000] <tantek>
and I would allow that for <ins>/<del> datetime also

[10:39:01.0000] <Hixie>
seems like a bit of a gratuitous departure from ISO8601... i mean, if the use case is "make it easy to read and write", why stop there?

[10:40:00.0000] <tantek>
because the use of " " instead is already a common convention

[10:40:01.0000] <tantek>
basically, we're not innovating, we're only adopting something that's been in use for a while

[10:40:02.0000] <Hixie>
in <time>, or in general?

[10:40:03.0000] <tantek>
it's been a mod on ISO8601 in general

[10:40:04.0000] <Hixie>
i would posit that in general, arbitrary whitespace is the convention

[10:40:05.0000] <Hixie>
not just a single space

[10:41:00.0000] <Hixie>
and that there's a bunch of other looseness that's a general convention too

[10:41:01.0000] <tantek>
not in the docs I've seen

[10:41:02.0000] <Hixie>
e.g. a space before the timezone, or not using +hh:mm for the timezone but using "PDT" etc

[10:41:03.0000] <tantek>
it's always been recommended and used as a single space

[10:41:04.0000] <tantek>
as a replacement for 'T'

[10:41:05.0000] <tantek>
since datetime with the 'T' is particularly human unfriendly it seems

[10:41:06.0000] <Hixie>
i guess we should look at data

[10:42:00.0000] <Hixie>
not sure what the right way to check this one way or another would be

[10:42:01.0000] <tantek>
/me is looking for references

[10:42:02.0000] <tantek>
I've seen this before, I just can't remember the URLs at the moment.

[10:43:00.0000] <tantek>
well here's a rough mention: http://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations

[10:43:01.0000] <tantek>
"The date and time representations may appear in proximity to each other, often separated by a space or sometimes by other characters."

[10:44:00.0000] <tantek>
note that "a space" is the only specific alternative separator mentioned

[10:44:01.0000] <Hixie>
yeah but that says they're two fields, not that it's one U+0020 character in a single field

[10:44:02.0000] <tantek>
in my opinion that gives it more weight than other hypothetical separators (arbitrary whitespace etc.)

[10:44:03.0000] <Hixie>
just searching for "date time format" on google doesn't support your thesis. the examples all have widely different forms when you move away from ISO8601, there doesn't seem to be a consistent move from ISO8601 to s/T/ /

[10:44:04.0000] <tantek>
yeah - not sure how much we can rely on such details in a WIkipedia page anyway

[10:45:00.0000] <tantek>
Hixie - insufficiently specific search :)

[10:45:01.0000] <Hixie>
it's not like people are going to be able to use ISO8601-with-space as a human-readable format anyway

[10:45:02.0000] <Hixie>
different locales need different punctuation, e.g.

[10:46:00.0000] <Hixie>
even if the order is y-m-d

[10:46:01.0000] <Hixie>
and some locales need AM/PM, others need 24h clocks

[10:46:02.0000] <Hixie>
i'd just keep it simple and have one format

[10:46:03.0000] <Hixie>
our "one format" already has like 8 variants

[10:46:04.0000] <Hixie>
no need to double it :-)

[10:48:00.0000] <tantek>
ok I can be convinced of that

[10:48:01.0000] <tantek>
I will write up your arguments accordingly.

[10:48:02.0000] <tantek>
does our current datetime permit more than 4 digit years?

[10:48:03.0000] <Hixie>
yeah

[10:48:04.0000] <Hixie>
4+

[10:48:05.0000] <tantek>
ok cool

[10:48:06.0000] <Hixie>
as far as the other things you mentioned, i think i agree with all your comments

[10:48:07.0000] <Hixie>
for tz="", remember we now allow timezone separately

[10:49:00.0000] <Hixie>
so they can use two <time> elements

[10:49:01.0000] <TabAtkins_>
Hixie: If that's what's needed to upload images to the wiki, then yes please.

[10:49:02.0000] <Hixie>
TabAtkins_: no idea if that's what's needed. if you need somewhere to upload files, though, http://software.hixie.ch/utilities/cgi/uploader/uploader w643kJ6Gv43q3

[10:49:03.0000] <tantek>
just noticed this while searching for deviations from ISO: http://www.w3.org/TR/xmlschema-2/#morethan9999years (the more than 4 digits for years thing)

[10:50:00.0000] <tantek>
I love that in the Y2K update of ISO8601 they decided to fix the Y10K problem in ISO8601.

[10:50:01.0000] <Hixie>
tantek: what's your username?

[10:50:02.0000] <tantek>
Hixie re: tz - they can't quite use two timezone elements

[10:50:03.0000] <Hixie>
er

[10:50:04.0000] <nick3264>
I'm interested about writing a globalCompositeOperation proposal. is the wiki a good place for it?

[10:50:05.0000] <Hixie>
TabAtkins_: what's your username

[10:50:06.0000] <tantek>
because time elements don't combine semantics

[10:50:07.0000] <Hixie>
tantek: no?

[10:51:00.0000] <Hixie>
hmm

[10:51:01.0000] <Hixie>
well

[10:51:02.0000] <tantek>
that was a separate proposal

[10:51:03.0000] <tantek>
for which there wasn't sufficient support

[10:51:04.0000] <Hixie>
the combined semantics thing basically depends on the vocab you're using it with

[10:51:05.0000] <tantek>
http://wiki.whatwg.org/wiki/Time_element#composite_nested_time_elements

[10:51:06.0000] <Hixie>
if the vocab says "put time and date here and tz here and combine them like so", then that's what it is

[10:51:07.0000] <tantek>
sure - you can do that too

[10:52:00.0000] <tantek>
I meant in a vocab independent way

[10:52:01.0000] <tantek>
that just worked with the time element

[10:52:02.0000] <Hixie>
ah yeah i dunno what the use case for that would be

[10:52:03.0000] <Hixie>
TabAtkins_: nm got it

[10:52:04.0000] <tantek>
Hixie, no new use cases, just improved data quality of existing use cases

[10:52:05.0000] <tantek>
but then this is something we can add later

[10:52:06.0000] <tantek>
so I'm not in a rush to add it now

[10:52:07.0000] <tantek>
happy to wait until more people are convinced

[10:53:00.0000] <Hixie>
TabAtkins_: ok you're marked as admin and bureaucrat, whatever that means

[10:53:01.0000] <Hixie>
tantek: k

[10:53:02.0000] <tantek>
Tabatkins, remember the saying

[10:53:03.0000] <Hixie>
afk for a bit, bbl

[10:54:00.0000] <tantek>
http://en.wikipedia.org/wiki/Uncle_Ben#.22With_great_power_comes_great_responsibility.22

[10:55:00.0000] <nick3264>
also http://en.wikipedia.org/wiki/Quis_custodiet_ipsos_custodes%3F :)

[11:02:00.0000] <tantek>
also afk for a bit, bbl

[11:03:00.0000] <nick3264>
cya. dinner time

[11:04:00.0000] <kennyluck>
Hixie, tantek. The date time python module output " " instead of "T" for str(aDatetime). I haven't checked libraries in other languages.Though some ISO8601 parsers don't parse " ".

[11:04:01.0000] <kennyluck>
But in this case, I think we should optimize for the authors.

[11:08:00.0000] <tantek>
kennyluck - do you have a URL for that? "date time python module output " " instead of "T" for str(aDatetime)"

[11:09:00.0000] <kennyluck>
tantek, http://docs.python.org/dev/library/datetime.html#datetime.datetime.__str__

[11:11:00.0000] <kennyluck>
my guess is that people would rely more on "%s" % aDatetime than something like aDatetime.isoformat(), which uses "T" as the default separator, though I can't be sure.

[11:14:00.0000] <kennyluck>
In any case, I hate the "T". It's too machine-like and doesn't look friendly.

[11:18:00.0000] <mkanat>
All ISO-8601 parsers should parse the space; it's valid.

[11:23:00.0000] <kennyluck>
Hixie, re. "it's not like people are going to be able to use ISO8601-with-space as a human-readable format anyway". I disagree with you, I think this is the most  i18n-wise human-readable format. Everytime I see timezone abbrevs like "PDT" instead of UTC-5, I whine. English months are not so bad but still.

[11:25:00.0000] <mkanat>
Yeah, I've used that as a human-readable format all the time.

[11:27:00.0000] <tantek>
mkanat - do you have a URL that explains how it's valid that all ISO-8601 parsers should parse the space?

[11:27:01.0000] <mkanat>
tantek: I'll see what I can find.

[11:27:02.0000] <tantek>
thanks, appreciated.

[11:28:00.0000] <mkanat>
tantek: Ahh, it's not that everybody should accept space--it's that those are two separate representations.

[11:28:01.0000] <mkanat>
tantek: I'm just so used to parsers accepting a space.

[11:29:00.0000] <tantek>
mkanat - even URLs to parser documentation that shows that they accept a space there instead of a 'T' would be handy.

[11:30:00.0000] <tantek>
basically, it's very different if we're just adopting an established precedent / extension to ISO8601 than addressing the general problem of creatively making ISO8601 datetimes more human friendly.

[11:33:00.0000] <mkanat>
tantek: This isn't perfect, but one example is that MySQL takes and sends all its dates in that format: http://dev.mysql.com/doc/refman/5.1/en/datetime.html

[11:33:01.0000] <mkanat>
tantek: As does almost every other DBMS I've ever used (with a few exceptions--I believe Sybase doesn't).

[11:33:02.0000] <kennyluck>
nice!

[11:35:00.0000] <mkanat>
Perl's Date::Parse also takes dates in that format, although it's not int he documentation.

[11:36:00.0000] <mkanat>
But we've been relying on it doing so, for years, in Bugzilla.

[11:40:00.0000] <Velmont>
I also dislike the T.

[11:41:00.0000] <mkanat>
I believe every Date.parse implementation also supports it in browsers, although I haven't checked and it's not what the standard says.

[11:41:01.0000] <mkanat>
Or at least, it's not the "subset of ISO 8601" from http://www.w3.org/TR/NOTE-datetime

[11:42:00.0000] <kennyluck>
mkanat, that's unfortunately wrong, at least for FF8.

[11:42:01.0000] <mkanat>
kennyluck: Drat.

[11:42:02.0000] <mkanat>
Well, Chrome can parse it.

[11:43:00.0000] <mkanat>
Probably the standard should say something about contexts where input is only a datetime.

[11:44:00.0000] <mkanat>
Since yes, in a string of text, "2011-11-11 11:11:11" could logically be two separate representations, in a call to Date.parse, from the developer's perspective, it's obviously one representation.

[11:44:01.0000] <Velmont>
Opera handles it as well.

[11:46:00.0000] <zewt>
as does IE8, at least (would have to load a VM to test 9)

[12:13:00.0000] <Hixie>
kennyluck: i agree and use the same format myself, but we are in a woefully small minority

[12:14:00.0000] <Hixie>
tantek: if we can collect evidence e.g. showing that there are common parsers that support a nicer format, i'm certainly all for it, fwiw

[12:14:01.0000] <Hixie>
tantek: my reluctance is just to forging new ground here

[12:21:00.0000] <kennyluck>
Hixie, common parsers or generators?

[12:23:00.0000] <TabAtkins>
tantek: What saying?

[12:24:00.0000] <Phae>
Hixie: thanks for the link to your microdata usability testing. sorry for not seeing it sooner.

[12:24:01.0000] <TabAtkins>
tantek: Ah, I see it now.  I didn't connect the link following your comment to what you were saying.

[12:24:02.0000] <TabAtkins>
tantek: Also, I already deleted the entire wiki and devoted it to crochet pornography, so, um, I guess I failed Uncle Ben.

[12:24:03.0000] <Hixie>
kennyluck: well both, but parsers are more important, since publishers with no parsers is just a waste of time and bandwidth for a lot of people

[12:25:00.0000] <Hixie>
Phae: no worries

[12:29:00.0000] <timeless>
zewt: i could test ie9/ie10pp4 if you wanted

[12:30:00.0000] <kennyluck>
ECMAScript5 pretty much says you could do whatever you want beyond a subset of ISO8601. I would be very surprised if ie changes this behavior, but I guess it's still worth checking.

[12:31:00.0000] <Hixie>
ES5 doesn't define the parsing?

[12:33:00.0000] <kennyluck>
Hixie, isn't that the reason why we have → http://wiki.whatwg.org/wiki/Web_ECMAScript#Date_Parsing ?

[12:33:01.0000] <zewt>
timeless: if they want (not involved in the time stuff, just giving a data point)

[12:34:00.0000] <Hixie>
kennyluck: hah

[12:34:01.0000] <Hixie>
kennyluck: i guess so

[12:53:00.0000] <timeless>
zewt: someone would have to tell me what they want me to do

[12:54:00.0000] <zewt>
don't know if anyone actually needs it, but i just did javascript:alert(Date.parse("2011-11-11 11:11:11"))

[12:55:00.0000] <timeless>
NaN in my default ie here in w8

[12:56:00.0000] <timeless>
which is some flavor of ie10

[12:58:00.0000] <timeless>
ie9:f12 says Date.parse("2011-11-11 11:11:11") = NaN

[12:59:00.0000] <kennyluck>
wow, that's surprising, given that IE8 supports this.

[13:07:00.0000] <zewt>
odd--now neither of them are working. not sure what I'm doing differently

[13:07:01.0000] <zewt>
maybe I switched browser windows before without realizing? dunno.

[13:07:02.0000] <zewt>
also, fascinating chrome utter braindamage: it strips javascript: when i paste into the address bar.

[13:07:03.0000] <kennyluck>
oh, my.

[13:07:04.0000] <zewt>
special thanks to chrome for making the address bar more and more horrible

[13:08:00.0000] <zewt>
ie8 only seems to be accepting the format it outputs from toString ("Thu Dec 1 16:10:18 EST 2011").

[13:10:00.0000] <kennyluck>
zewt, yeah, that's another requirement from ECMAScript, namely, toString and then Date.parse needs go back to the original.

[13:11:00.0000] <timeless>
zewt: IE seems to do that too

[13:11:01.0000] <timeless>
my guess is it's a security feature

[13:11:02.0000] <timeless>
to prevent Facebook attacks

[13:11:03.0000] <timeless>
and if that's its goal, i'm happy

[13:12:00.0000] <zewt>
kennyluck: i don't think any implementation does that, since toString loses milliseconds

[13:12:01.0000] <timeless>
kennyluck: should i ask how dare something require roundtripping? :)

[13:13:00.0000] <zewt>
timeless: i'm of the stance that if a user is going to follow steps like "please copy this mysterious block of letters and paste it into your address bar", no amount of babysitting is going to protect them :)

[13:13:01.0000] <kennyluck>
I guess I am just missing the details.

[13:13:02.0000] <Velmont>
zewt: Maybe  data:text/html,<!doctype html><script>alert(Date.parse("2011-11-11 11:11:11"))</script>   will work?

[13:15:00.0000] <timeless>
Velmont: historically, ie's support for data: urls was spotty

[13:15:01.0000] <timeless>
it doesn't seem to have improved

[13:15:02.0000] <zewt>
Velmont: nope (after copying to a file to avoid data:)

[13:16:00.0000] <timeless>
i think the right approach is hixie's kitchen

[13:16:01.0000] <timeless>
which lets you test out dom results of pages you compose

[13:17:00.0000] <Velmont>
zewt: huh? Doesn't chromium support data:?

[13:17:01.0000] <zewt>
talking about IE here

[13:17:02.0000] <zewt>
(re: formats supported by Date.parse)

[13:17:03.0000] <Velmont>
22:10 < zewt> also, fascinating chrome utter braindamage: it strips javascript: when i paste into the address bar. <<<

[13:18:00.0000] <zewt>
eh, that's a huge amount of typing for pasting things across browsers to test, heh

[13:18:01.0000] <zewt>
let me try it, out of curiosity

[13:18:02.0000] <zewt>
heh yeah, so stripping javascript: does absolutely nothing (security-wise)

[13:18:03.0000] <zewt>
unless there's some weird corner case i'm not thinking of, anyway

[13:21:00.0000] <timeless>
it does

[13:22:00.0000] <timeless>
it requires users to be convinced to take 3 extra steps to do something they really shouldn't be doing

[13:22:01.0000] <timeless>
but yes, facebook has millions of sheep

[13:23:00.0000] <zewt>
oh, the difference is that data:html is run in a separate page, where javascript: is run in the existing page

[13:23:01.0000] <miketaylr>
heh, type in j then copy-paste avascript:alert(1) to see a secret message!

[13:23:02.0000] <timeless>
zewt: yep

[13:23:03.0000] <zewt>
alt-faxmachine

[13:23:04.0000] <timeless>
the attacks only work when they're same origin against stupid users in facebook (or similar)

[13:24:00.0000] <zewt>
"attacks" :P

[13:24:01.0000] <timeless>
miketaylr: i think it's "copy <avascript,....>; click urlbar, press j, paste, enter"

[13:25:00.0000] <timeless>
zewt: they happen often enough that my eyes glaze over when i see reports

[13:25:01.0000] <miketaylr>
timeless: sorry, i'm new at pwning facebook users ;)

[13:26:00.0000] <timeless>
you're a fast learner, you'll get the hang of it :)

[13:26:01.0000] <miketaylr>
:D

[13:26:02.0000] <timeless>
├──3,360.63 MB (91.95%) -- heap-unclassified

[13:26:03.0000] <timeless>
/me sighs

[13:27:00.0000] <timeless>
/me needs to make an Xgb file to cause firefox to crash already

[13:27:01.0000] <timeless>
Local Disk (C:) 1.70 GB free

[13:27:02.0000] <timeless>
Swap (Z:)

[13:27:03.0000] <zewt>
"view image" on a big canvas is a fun one

[13:27:04.0000] <timeless>
2.51 GB free of 4.08 GB

[13:28:00.0000] <timeless>
zewt: err, the goal is to cause firefox not to have memory to allocate space for the irc client

[13:28:01.0000] <timeless>
not to just arbitrarily kill firefox

[13:29:00.0000] <timeless>
/me tries to remember how to create a 2.5gb file on windows

[13:29:01.0000] <timeless>
preferably a sparse file

[13:29:02.0000] <zewt>
dd from linux over cifs

[13:29:03.0000] <zewt>
heh

[13:29:04.0000] <timeless>
ss64.com/nt/fsutil.html

[13:30:00.0000] <timeless>
fsutil file setvaliddata sparse number-that-means-2.5gb

[13:36:00.0000] <timeless>
Z:\>fsutil file createnew z:\limitswap3 1073741824

[13:36:01.0000] <timeless>
File z:\limitswap3 is created

[13:39:00.0000] <timeless>
ok, now i have <10mb of swap available

[13:39:01.0000] <timeless>
/me prepares to die

[13:40:00.0000] <zewt>
timeless.exe

[13:50:00.0000] <jgraham>
Just saw The Nutcrasked. Had a man in a Fez. Remined me of shepazu. Decided we need a ballet about the W3C.

[13:50:01.0000] <jgraham>
You might think an opera would be more obvious, but clearly if I propose that people would just think I'm biased.

[13:52:00.0000] <astearns>
/me is shuddering at the thought of a bikeshedding aria

[13:56:00.0000] <kennyluck>
paul_irish, comment on http://h5bp.github.com/igotmybeanie/ . I think you might want to mention the input box at the bottom of the HTML Living Standard. As far as I can tell, that's the simplest way how you send feedback.

[13:58:00.0000] <annevk>
I wish someone else could write these emails for me: http://lists.w3.org/Archives/Public/public-webapps/2011OctDec/1312.html

[14:00:00.0000] <annevk>
I like Adrian, but I also wish I didn't have to do his homework

[14:03:00.0000] <divya>
kennyluck: thnx will add that in.

[14:06:00.0000] <annevk>
TabAtkins: you cannot upload images I think, you have to upload them to imgur or some such and link them

[14:06:01.0000] <annevk>
TabAtkins: see e.g. http://wiki.whatwg.org/wiki/Use_cases_for_timed_tracks_rendered_over_video_by_the_UA

[14:07:00.0000] <zewt>
depending on free services like imgur long-term always makes me nervous

[14:08:00.0000] <TabAtkins>
annevk: Ah, ok.

[14:09:00.0000] <Luck>
hiya , can anybody tell me , do you use the new data element or still keep the <time>?

[14:09:01.0000] <TabAtkins>
zewt: Yeah, that's why I wanted to upload to the wiki - then the images have a better chance of staying around as long as the page itself.

[14:09:02.0000] <annevk>
I guess you can use http://junkyard.damowmow.com/

[14:09:03.0000] <annevk>
and get the password from Hixie

[14:09:04.0000] <TabAtkins>
I can just put it on my own site I guess.

[14:10:00.0000] <TabAtkins>
Luck: What are you using it for?  (If you don't already have a data-consumer in mind, don't bother with it.)

[14:11:00.0000] <annevk>
There's probably some way to upload images, it has file search and things like that...

[14:11:01.0000] <TabAtkins>
annevk: No, Special:Upload explicitly says that uploading is disabled.

[14:11:02.0000] <TabAtkins>
I was hoping it would change when I got admin powers.

[14:11:03.0000] <TabAtkins>
But no luck.

[14:12:00.0000] <divya>
kennyluck: is this you? https://github.com/kennyluck

[14:13:00.0000] <annevk>
TabAtkins: aah, maybe Lachy can change that

[14:13:01.0000] <TabAtkins>
annevk: That would be cool.

[14:13:02.0000] <divya>
o it is.

[14:14:00.0000] <Lachy>
TabAtkins, do you know how to change it?

[14:14:01.0000] <Luck>
k

[14:14:02.0000] <Lachy>
does it require modifying LocalSettings.php?

[14:14:03.0000] <kennyluck>
divya, yeah.

[14:14:04.0000] <AryehGregor>
Lachy, yes.  Should be $wgEnableUploads or something.

[14:14:05.0000] <divya>
added it here kennyluck https://github.com/h5bp/movethewebforward/commit/dd946130fb69ba8d7a0631ba7861f15107a164e4

[14:14:06.0000] <kennyluck>
divya, not being a web developer, I am not using github often though.

[14:14:07.0000] <Lachy>
AryehGregor, can you do it?

[14:14:08.0000] <AryehGregor>
Lachy, http://www.mediawiki.org/wiki/Manual:$wgEnableUploads

[14:14:09.0000] <AryehGregor>
/me pokes

[14:14:10.0000] <kennyluck>
divya, OK.

[14:15:00.0000] <divya>
ha okay :)

[14:15:01.0000] <divya>
it was easy to ref in the commit tho :D

[14:15:02.0000] <Lachy>
AryehGregor, btw, did you set up an SVN server for the wiki? I was wondering why I saw some .svn folders in there

[14:15:03.0000] <AryehGregor>
Lachy, it's an SVN checkout.

[14:15:04.0000] <kennyluck>
divya, thanks for attributing that to me :p

[14:15:05.0000] <AryehGregor>
Because I wanted some feature from the trunk version at some point.

[14:15:06.0000] <AryehGregor>
I can't remember what.

[14:15:07.0000] <AryehGregor>
It should be safe to overwrite it with a downloaded tarball.

[14:15:08.0000] <AryehGregor>
(if no one has already)

[14:16:00.0000] <jgraham>
Didnt you want your html5ified version?

[14:16:01.0000] <jgraham>
Or am I imagining things?

[14:16:02.0000] <Lachy>
ok. I thought maybe you'd started maintaining it in SVN. I didn't think that you'd checked it out directly from wikimedia's server

[14:16:03.0000] <paul_irish>
kennyluck: thank you. will do https://github.com/h5bp/movethewebforward/issues/41

[14:17:00.0000] <AryehGregor>
What user does the web server run as?

[14:17:01.0000] <AryehGregor>
Not whatwikiuser, I guess?

[14:17:02.0000] <Lachy>
AryehGregor, I haven't overwritten it. But I did make some minor changes to LocalSettings.php to disable user registrations, and to update the ConfirmEdit extension

[14:17:03.0000] <paul_irish>
kennyluck: oops divya did it already. i see now

[14:17:04.0000] <AryehGregor>
TabAtkins, try now.

[14:17:05.0000] <Lachy>
yes, it's whatwikiuser

[14:17:06.0000] <AryehGregor>
Oh, okay.

[14:17:07.0000] <AryehGregor>
No need for chmod, then.

[14:18:00.0000] <Lachy>
oh. wait, maybe it's not.

[14:18:01.0000] <Lachy>
it's the same server as the blog and all of Hixie's other stuff

[14:18:02.0000] <TabAtkins>
AryehGregor: Yup, seems to work.  Or at least, it brings up an upload form now.

[14:19:00.0000] <TabAtkins>
The files I want to upload are at home, though, so I'll wait to actually try it out.

[14:19:01.0000] <TabAtkins>
Thanks, you two.

[14:19:02.0000] <AryehGregor>
/me chmods to 777, so it should theoretically work

[14:19:03.0000] <AryehGregor>
The reason it's disabled by default is because directory permissions are usually wrong by default, so it will just give an error.

[14:21:00.0000] <kennyluck>
Nice, I am glad that Mozilla's "mentored bugs" are mentioned on http://movethewebforward.org/ .

[14:29:00.0000] <kennyluck>
paul_irish, I personally think subscribing to certain HTML5 features of interest in Bugzilla (Mozilla/WebKit) would be something nice if you care about a subset of HTML5 features but not all. Though I am not sure if it's too advanced to put into the "learn" section. (and perhaps voting in Bugizlla, which is supposed to help browser vendors prioritize features, but I am not sure if browser vendors actually look at that)

[14:31:00.0000] <kennyluck>
I quite like http://en.wikipedia.org/wiki/Comparison_of_layout_engines_%28HTML5%29 for this aspect.

[15:01:00.0000] <Hixie>
in case anyone tried filing spec bugs and found it didn't work, i've fixed the script

[15:10:00.0000] <timeless>
AryehGregor: coming in late to an already dead study, i think the key is that poorer people tend to die sooner, so even if families had the same number of children initially, the number of surviving children was probably likely to be higher among the wealthier clans :)

[15:11:00.0000] <timeless>
you're right in that generally one didn't have control over the birth rate, but the survival rate is a different story :)

[15:17:00.0000] <reuben_>
I'm trying to understand the reasoning behind http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html#dom-media-defaultmuted

[15:18:00.0000] <reuben_>
isn't it the same thing as the muted attribute itself?

[15:19:00.0000] <reuben_>
maybe I just don't understand the difference between IDL and content attributes

[15:19:01.0000] <Hixie>
annevk: ping

[15:19:02.0000] <Hixie>
reuben_: bar="" is a content attribute in <foo bar="">

[15:19:03.0000] <Hixie>
reuben_: or in element.getAttribute('bar')

[15:20:00.0000] <Hixie>
reuben_: an IDL attribute is something like element.textContent

[15:20:01.0000] <Hixie>
reuben_: or element.title

[15:20:02.0000] <reuben_>
Hixie, ah, as I suspected! thanks!

[15:20:03.0000] <reuben_>
/me continues writing this test

[15:21:00.0000] <Hixie>
reuben_: often the two are so closely related that you can treat them as the same thing, but in practice the fact that they are distinct is important

[15:21:01.0000] <Hixie>
reuben_: so e.g. element.className is the idl attribute for <element class="">

[15:21:02.0000] <Hixie>
reuben_: but so is element.classList

[15:21:03.0000] <Hixie>
reuben_: one is a string, but the other is an object with its own members

[15:22:00.0000] <Hixie>
reuben_: both of these IDL attributes "reflect" the class="" content attribute

[15:22:01.0000] <Hixie>
reuben_: but they do it in different ways

[15:22:02.0000] <Hixie>
reuben_: sometimes, a content attribute has no IDL attribute, e.g. <html manifest="">

[15:24:00.0000] <reuben_>
Hixie, very interesting. I didn't know about classList by the way. so why do some content attributes lack a IDL attribute?

[15:24:01.0000] <Hixie>
doesn't make any sense to touch manifest="" from script

[15:24:02.0000] <Hixie>
so there's no point giving it an IDL attribute

[15:25:00.0000] <Hixie>
<meta charset=""> similarly has no corresponding IDL attribute

[15:25:01.0000] <Hixie>
(though Document has a bunch of charset-related stuff)

[15:27:00.0000] <reuben_>
I see. thanks for the info

[15:45:00.0000] <paul_irish>
kennyluck: i actually dont know how how to subscribe to a component or area in bugzilla.. are there docs on this?

[15:45:01.0000] <Hixie>
add a watch for the QA contact of the component

[15:45:02.0000] <kennyluck>
paul_irish, I am not talking about subscribing a component. I think master bugs are good enough.

[15:46:00.0000] <kennyluck>
Hixie, good idea!

[15:46:01.0000] <paul_irish>
Nice. is there a good technique for finding master bugs ?

[15:46:02.0000] <kennyluck>
Hixie, not something the WebKit bugillza instance supports :(

[15:47:00.0000] <Hixie>
kennyluck: watching, or qa contacts?

[15:47:01.0000] <Hixie>
kennyluck: both can be enabled by the admin, if you know who that is

[15:47:02.0000] <kennyluck>
Hixie, qa contacts.

[15:47:03.0000] <Hixie>
kennyluck: ah

[15:47:04.0000] <kennyluck>
paul_irish, the way I did it is find what bugs Peter Beverloo and Paul Rouget are tracing. :) I actually have links for that.

[15:48:00.0000] <Peter`>
I'm subscribed to pretty much every bug on WebKit :)

[15:48:01.0000] <Peter`>
Bugs I'm specifically CC'ed one are either ones I'm involved in as part of my job, or ones that really interest me (as these end up in my inbox)

[15:49:00.0000] <Hixie>
i'm subscribed (through watches) to an ungodly number of bugs in both webkit and mozilla, but with heavy filtering on my end :-)

[15:49:01.0000] <Peter`>
Dito, filters are the best thing since e-mail

[15:51:00.0000] <kennyluck>
paul_irish, here you go https://bugs.webkit.org/buglist.cgi?&emailcc1=1&emailtype1=exact&email1=peter%40chromium.org

[15:51:01.0000] <kennyluck>
https://bugzilla.mozilla.org/buglist.cgi?emailcc1=1&emailtype1=exact&email1=paul%40mozilla.com

[15:52:00.0000] <kennyluck>
perhaps not something effective, then I guess you just search "implement" or something...

[15:56:00.0000] <kennyluck>
Hixie, you mean the admin needs to upgrade my privilege so that I can watch components or see who the qa contact is?

[15:56:01.0000] <Hixie>
kennyluck: no, i mean the admin needs to enable qa contacts for the whole bugzilla instance

[15:56:02.0000] <kennyluck>
Oh ok.


2011-12-02
[16:00:00.0000] <paul_irish>
kennyluck: know who to contact to ask for that? cc Peter`

[16:00:01.0000] <kennyluck>
paul_irish, no idea.

[16:00:02.0000] <Peter`>
For WebKit?

[16:00:03.0000] <paul_irish>
ya

[16:00:04.0000] <Peter`>
I'd try webkit-dev (the mailing list)

[16:00:05.0000] <Peter`>
But bugs at WebKit are a big mess

[16:00:06.0000] <Peter`>
the component/OS/platform/etc fields are rarely accurate

[16:01:00.0000] <kennyluck>
Peter`, that's true.

[16:05:00.0000] <boblet>
HEY PPLZ, what was your most “mind = blown” website for 2011 for use of HTML5?

[16:20:00.0000] <zewt>
"ip-based security"? really?

[17:22:00.0000] <rniwa>
sicking: have you had a chance to look at algorithms to reapply DOM changes?

[17:32:00.0000] <zewt>
who came up with this terrible idea of having separate mailing lists for "CGs"? i don't want to subscribe to lots of tiny one-spec mailing lists

[17:41:00.0000] <zewt>
Hixie: i'm confused; of course @lang has an effect on rendering ("User agents may use the element's language to determine proper processing or rendering"), and most browsers implement that (everyone but WebKit, it seems)

[17:41:01.0000] <zewt>
(asking in here rather than mail since I'm assuming I'm misunderstanding you)

[17:44:00.0000] <zewt>
by the way, your thesis-emails are causing gmail's editor to hang Firefox :|

[17:46:00.0000] <rniwa>
zewt: I agree.

[17:46:01.0000] <rniwa>
zewt: I don't want to end up subscribing to 20+ mailing list

[17:46:02.0000] <rniwa>
zewt: and having to create a filter for each one of them

[17:48:00.0000] <zewt>
the end result is going to be fewer interested parties contributing to specs, which is a very bad thing

[17:49:00.0000] <TabAtkins>
Just add them all to one big filter for "webapps" or something.

[17:49:01.0000] <TabAtkins>
A tiny effort for each, and it lets you pretend they're all the same.

[18:03:00.0000] <rniwa>
TabAtkins: just having to add 'em all is quite annoying

[18:03:01.0000] <rniwa>
zewt: right...

[18:04:00.0000] <rniwa>
my gmail inbox is already spammed by www-* mailing lists :(

[18:04:01.0000] <rniwa>
don't want to add more mailing lists

[18:04:02.0000] <zewt>
er, that's what filters are for

[18:05:00.0000] <zewt>
set a label, enable "skip inbox"

[18:05:01.0000] <rniwa>
zewt: you never know which ones are important

[18:05:02.0000] <zewt>
doesn't mean they should go into inbox

[18:05:03.0000] <zewt>
also if you explicitly want a thread in inbox, move to -> inbox

[18:05:04.0000] <rniwa>
zewt: maybe

[18:06:00.0000] <zewt>
i can't imagine having mailing lists in my inbox :)

[18:06:01.0000] <rniwa>
zewt: I might just unsubscribe myself from www-style...

[18:06:02.0000] <rniwa>
that mailing list gets too many emails per day

[18:10:00.0000] <zewt>
i've been on lkml and other high-volume lists (though I'm not right now); as long as it's stuffed away into a label, i can selectively ignore it when I feel like it, without having to unsubscrube

[18:14:00.0000] <rniwa>
zewt: I guess.

[18:14:01.0000] <rniwa>
zewt: though my problem is that it's consuming a lot of my inbox space.

[18:16:00.0000] <zewt>
well, you can delete mails by date, though in my experience even high-volume mailing lists don't do much of a dent to gmail's ~7gb

[18:42:00.0000] <zewt>
heh, @microsoft quoting ancient out-of-date text from DOM2 on www-dom

[18:43:00.0000] <zewt>
heres to versioned specs still causing confusion in 2011

[18:44:00.0000] <michaelw>
hi! looking at HTML5 sec 4.3.1/15, 4 item, which scripts end up in the "list of scripts that will execute in order ASAP"?  Created by JS with an defer attribute?

[18:45:00.0000] <michaelw>
s/4 item/4th item/

[18:54:00.0000] <zewt>
search for that string

[19:17:00.0000] <zewt>
wow, didn't know alert() throws an exception sometimes in FF (if the user navigates away while a prompt is shown)

[20:30:00.0000] <zewt>
highly troubling for an @microsoft to claim that something isn't an interop problem because it's "poor design of the page itself"

[23:06:00.0000] <hsivonen>
whoa. USA is now at 1.0% on http://www.ie6countdown.com/#list

[00:35:00.0000] <annevk>
Hixie: it is fixed now, for some reason I had to run svn cleanup on html5.org

[00:35:01.0000] <annevk>
Hixie: do you know anything about that?

[00:47:00.0000] <annevk>
Can someone write up a Bugzilla quoting etiquette? One that frowns upon excessive quoting in Bugzilla?

[00:47:01.0000] <annevk>
Or maybe on that suggests to have email conversations on a mailing list and not in Bugzilla...

[00:48:00.0000] <annevk>
one*

[00:48:01.0000] <roc>
it's hard to move conversations from one medium to another

[00:49:00.0000] <kennyluck>
+1

[00:50:00.0000] <kennyluck>
though I really hope people don't use medium like twitter for technical discussions.

[00:51:00.0000] <annevk>
heh, you must be new here :p

[00:52:00.0000] <smaug____>
kennyluck: unfortunately people do you twitter and G+ for technical discussions

[00:52:01.0000] <smaug____>
s/you/use/

[00:53:00.0000] <woef>
We need a forum revival.

[01:21:00.0000] <jgraham>
smaug____: Surprisignly some of the technical discussion on G+ has been quite good. Of course it has other problems with closedness and archiving

[01:21:01.0000] <jgraham>
Tryign to have technical discussions as a series of tweets isn't something I can comprehend however

[01:22:00.0000] <smaug____>
/me isn't reading any G+, so just misses or doesn't care about discussions happening there

[01:23:00.0000] <jgraham>
Well it seems like mostly people stopped using it for that purpose

[01:23:01.0000] <jgraham>
Or I stopped noticing

[01:23:02.0000] <jgraham>
But just after it launched it was used reasonably often and the quakity was quite high

[01:23:03.0000] <jgraham>
That's why I bothered to join

[02:22:00.0000] <zcorpan>
hmm. what's https://www.w3.org/Bugs/Public/show_bug.cgi?id=15007#c7 ? sounds a bit like "await a stable state"

[02:22:01.0000] <kennyluck>
social network without interoperable standard simply sucks.

[02:25:00.0000] <zcorpan>
hey guys! anyone volunteer to hack on http://html5.org/tools/web-apps-tracker to support the topics thing? (http://code.google.com/p/html5/source/browse/#svn%2Ftrunk%2Fweb-apps-tracker )

[02:27:00.0000] <annevk>
suggested UI?

[02:27:01.0000] <jgraham>
kennyluck: For some definition of "simply sucks", yes. I just can't think of any reasonable process that would get a social network built on an interoperable standard

[02:27:02.0000] <annevk>
zcorpan: just a column?

[02:27:03.0000] <jgraham>
The value to the providers is all in the lock-in

[02:27:04.0000] <jgraham>
annevk: Filter by topic

[02:28:00.0000] <zcorpan>
annevk: yeah ability to filter would be nice

[02:30:00.0000] <erlehmann>
kennyluck, social networks suck. they are built on lies, on of which is “just click here and your information will stay private”

[02:30:01.0000] <erlehmann>
one

[02:31:00.0000] <annevk>
filters again?

[02:31:01.0000] <annevk>
nobody used that last time

[02:31:02.0000] <kennyluck>
I am so glad that at least we have mailing lists, IRC, and well… newsgroup. These belong to some definition of social network, although these don't work so well with the Web I guess.

[02:31:03.0000] <jgraham>
I did

[02:31:04.0000] <erlehmann>
jgraham is absolutely spot-on regarding the lock-in. just compare google+ with the rest of googles offerings. hell, you could get your email via ATOM last time i checked.

[02:31:05.0000] <jgraham>
Until you took it away

[02:31:06.0000] <annevk>
interesting

[02:32:00.0000] <annevk>
what did you use it for?

[02:33:00.0000] <erlehmann>
kennyluck, mailing lists, blogs and feedreaders can do most of the things social networks are used for. but then people start to complain that no one ever reads their blog. in a related note, my girlfriend recently deleted facebook friends until she was definitely under dunbar's number.

[02:34:00.0000] <jgraham>
… filtering?

[02:36:00.0000] <jgraham>
Although I guess I mainly used the editorial/non editorial bit, which is still there

[02:36:01.0000] <jgraham>
Pretty sure I did use the other thing sometimes though

[02:36:02.0000] <jgraham>
I would use topics for sure

[02:37:00.0000] <erlehmann>
jgraham, i think the notion of a “social network” should be overcome, if people want to overcome the lock-in. sadly, few developers realize that – just look at diaspora, whose paramount achievement is being a less usable facebook.

[02:38:00.0000] <annevk>
jgraham: yeah I remember you saying you mostly used the editorial thing, which is why kept that

[02:38:01.0000] <zcorpan>
/me uses the editorial filter too

[02:39:00.0000] <annevk>
so what are people doing with Growl? paying for it?

[02:39:01.0000] <erlehmann>
wat

[02:40:00.0000] <annevk>
it keeps notifying me I need to buy it

[02:40:01.0000] <erlehmann>
annevk, i was of the impression that growl was the (lib)notify thingy OS X uses. so it is not part of the base system?

[02:40:02.0000] <annevk>
no it's not

[02:40:03.0000] <annevk>
it's a download

[02:41:00.0000] <zcorpan>
it's fucked that OS X still doesn't have a native notification system

[02:42:00.0000] <erlehmann>
annevk, i suggest you use something built on libnotify/notifyd then?

[02:42:01.0000] <erlehmann>
in before OS X does not have something like DBUS

[02:42:02.0000] <erlehmann>
i seriously do not know

[02:42:03.0000] <jgraham>
Seems that growl is pretty standard on OSX

[02:42:04.0000] <erlehmann>
but i am always amazed when people – geeks – say they want something that *just works* and then it doesn't.

[02:43:00.0000] <erlehmann>
jgraham, wouldn't it be easy to hook into the growl message bus and make a simple notification replacement?

[02:43:01.0000] <erlehmann>
or does something prevent that?

[02:43:02.0000] <jgraham>
I am not sure how the arch works

[02:45:00.0000] <erlehmann>
annevk, what benefits do you get upon purchase? i mean … popups. can there be a premium popup?

[02:46:00.0000] <jgraham>
Maybe you get a valet who brings you the messages on a silver platter

[02:46:01.0000] <tomasf>
http://growl.info/documentation/developer/gntp.php

[02:46:02.0000] <annevk>
erlehmann: no idea

[02:47:00.0000] <annevk>
erlehmann: maintained software I guess

[02:47:01.0000] <erlehmann>
jgraham, i chuckled a mit.

[02:48:00.0000] <erlehmann>
annevk, it is open source. patch the nag screen away.

[02:50:00.0000] <annevk>
you can't tell end users that

[02:50:01.0000] <annevk>
it's open source, it doesn't do what you want, but you can make it so and feel special

[02:51:00.0000] <annevk>
that might work for some people, but not me

[02:51:01.0000] <erlehmann>
annevk, that is true. however, i use an operating system having a) a software repository b) a notification system. but i know it would not be considered helping if i told you to switch to that.

[02:53:00.0000] <annevk>
Ubuntu is cool, whenever someone writes hardware that's better than a MacBook Pro I'll happily switch back

[02:53:01.0000] <erlehmann>
in the absence of repositories of curated software, patching remains the only option. it is what people do, even non-programmers occasionally.

[02:53:02.0000] <annevk>
as long as the OS has a somewhat decent terminal by default I'm good

[02:54:00.0000] <erlehmann>
well, i use debian. ubuntu breaks every 6 months ;)

[02:54:01.0000] <erlehmann>
though recently i accidentally installed gnome 3. but the debian gods had mercy and the default session had been magically switched to XFCE.

[02:55:00.0000] <erlehmann>
can't you run stuff on mac books? on hacker conferences i see lots of people running something with proper X11 (i suspecd gnu/linux or *BSD) on their shiny metal devices.

[02:56:00.0000] <zcorpan>
Hixie: i hit the 40kb limit on whatwg⊙wo

[02:56:01.0000] <zcorpan>
"Reason: Message body is too big: 66449 bytes with a limit of 40 KB"

[02:57:00.0000] <zcorpan>
/me sends part of it to www-archive

[02:57:01.0000] <erlehmann>
>40kb

[02:57:02.0000] <erlehmann>
wat

[02:57:03.0000] <zcorpan>
i pasted in some SRT timing lines

[02:58:00.0000] <zcorpan>
hmm, it went through to public-texttracks

[02:59:00.0000] <zcorpan>
hmm. http://www.w3.org/mid/op.v5uwpvvtidj3kv⊙sl says 404. has Archived-At stopped working?

[02:59:01.0000] <annevk>
no

[02:59:02.0000] <zcorpan>
MikeSmith?

[02:59:03.0000] <annevk>
it usually takes a couple of minutes

[02:59:04.0000] <annevk>
sometimes more

[02:59:05.0000] <zcorpan>
ah

[03:00:00.0000] <annevk>
"This may mean that the message-id you have entered was not valid, or that the message has not yet been added to the database."

[03:01:00.0000] <annevk>
heh, could point on "language" :)

[03:01:01.0000] <annevk>
good*

[03:02:00.0000] <annevk>
hmm

[03:04:00.0000] <zcorpan>
maybe i should disable the "send" shortcut in opera...

[03:05:00.0000] <annevk>
WHATWG should use W3C mailing list software

[03:05:01.0000] <annevk>
if we could somehow

[03:05:02.0000] <annevk>
it's much nicer

[03:06:00.0000] <kennyluck>
+1

[03:06:01.0000] <annevk>
kennyluck: can't you fix that for us? :)

[03:07:00.0000] <kennyluck>
annevk, what exactly is the problem why WHATWG can't use the W3C mailing list software?

[03:07:01.0000] <erlehmann>
would W3C mailing list software mean i could finally sent GPG signed messages?

[03:12:00.0000] <annevk>
kennyluck: I think we use the default setup from Dreamhost

[03:12:01.0000] <annevk>
kennyluck: and I guess doing anything more complicated than that is too much work

[03:14:00.0000] <kennyluck>
:(

[03:20:00.0000] <annevk>
kennyluck: maybe someone at the W3C can be convinced to create an alternative archive? e.g. something like whatwg⊙wo ?

[03:20:01.0000] <annevk>
kennyluck: import all the old stuff and subscribe whatwg⊙wo to whatwg⊙wo and make that a readonly list

[03:23:00.0000] <kennyluck>
annevk, that sounds quite interesting.

[03:23:01.0000] <kennyluck>
/me will write to site-comments⊙wo

[03:24:00.0000] <annevk>
thanks man

[03:25:00.0000] <zcorpan>
does the webrtc group use bugzilla?

[03:26:00.0000] <eli__>
hello, Can I ask about develop.opera this channel?

[03:29:00.0000] <annevk>
eli__: dev.opera.com ? maybe

[03:30:00.0000] <eli__>
thank you. I hope to ask about video and stream.

[03:31:00.0000] <annevk>
it's best to just ask a question in this channel

[03:31:01.0000] <erlehmann>
ask ask!

[03:31:02.0000] <erlehmann>
ASK

[03:31:03.0000] <erlehmann>
DO IT

[03:31:04.0000] <erlehmann>
NOW DO IT

[03:31:05.0000] <eli__>
:) thank you

[03:32:00.0000] <eli__>
in first, please this URL (http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2011-July/032417.html)

[03:33:00.0000] <eli__>
I try "video user"

[03:33:01.0000] <eli__>
i tried "video user"

[03:34:00.0000] <eli__>
but my opera browser catch "video environment" always.

[03:35:00.0000] <eli__>
this is it. (http://dev.0-0a.me/test.php)

[03:36:00.0000] <annevk>
mpt: where is your blog?

[03:37:00.0000] <eli__>
do you know reason about opera cannot catch "face-view-camera"?

[03:37:01.0000] <mpt>
annevk, on an HD waiting for me to put it online again

[03:38:00.0000] <annevk>
mpt: I wanted to point out your "perfection is" post to someone

[03:38:01.0000] <annevk>
mpt: it's not even on Google anymore

[03:38:02.0000] <annevk>
mpt: I can offer you mpt.html5.org or some such if you need a domain and some space

[03:39:00.0000] <mpt>
annevk, <http://web.archive.org/web/20100711072841/http://mpt.net.nz/archive/2006/11/27/perfection>?

[03:40:00.0000] <annevk>
sweet

[03:41:00.0000] <mpt>
annevk, thanks for the offer, but I have a domain and space, I just need to hook them together

[03:42:00.0000] <annevk>
eli__: richt can maybe help you

[03:43:00.0000] <eli__>
please help me.

[03:43:01.0000] <richt>
eli__: just reading back on the logs... :)

[03:43:02.0000] <eli__>
where logs?

[03:44:00.0000] <eli__>
is this bug?

[03:55:00.0000] <eli__>
please help me..

[03:58:00.0000] <richt>
eli__: camera hints are coming to the Opera implementation soon with UI stuff. Currently, mobile implementations select the back-facing camera by default.

[03:58:01.0000] <richt>
eli__: We will implement hints though. There's a reason this stuff is released in Opera Labs :)

[03:59:00.0000] <eli__>
yet I can not use it?

[04:02:00.0000] <eli__>
richt: Can I not use it yet?

[04:06:00.0000] <MikeSmith>
zcorpan: yeah, seems not to be working laterly

[04:06:01.0000] <MikeSmith>
dunno why

[04:09:00.0000] <zcorpan>
it's still 404

[04:09:01.0000] <MikeSmith>
yeah

[04:23:00.0000] <jgraham>
Sigh, device orienation points to DOM 2 events

[04:23:01.0000] <jgraham>
*orientation

[04:24:00.0000] <jgraham>
And uses init*Event

[04:24:01.0000] <annevk>
I pointed that out to them during TPAC :(

[04:24:02.0000] <annevk>
they said they would fix it

[04:25:00.0000] <jgraham>
Oh, so I don't need to send feedback? good :)

[04:25:01.0000] <eli__>
richt?

[04:26:00.0000] <zcorpan>
does orientation events still say to fire an event when a listener is registered instead of having the information available on navigator or so?

[04:27:00.0000] <annevk>
jgraham: yes you should

[04:27:01.0000] <jgraham>
It says to fire an event if you think the page's data isn't fresh

[04:27:02.0000] <jgraham>
I think the event based design is a mistake :(

[04:27:03.0000] <annevk>
jgraham: by queuing a task?

[04:27:04.0000] <jgraham>
annevk: It doesn't mention tasks anywhere afaict

[04:28:00.0000] <annevk>
o_O

[04:29:00.0000] <annevk>
<3 vacuum groups

[04:33:00.0000] <jgraham>
Yeah, I hate the fact that every time I have to look at this spec it sucks up a bunch of my time on stuff that people familar with other specs would just get right

[04:39:00.0000] <richt>
eli__: I popped out for lunch. You can't use hints yet. I'll follow up to see if we can get it in a build soon.

[04:39:01.0000] <richt>
eli__: so no, you can't get the front-facing camera on mobile. Desktop provides the web cam which is front-facing though.

[04:39:02.0000] <annevk>
jgraham: turns out that's true for most specs developed outside WebApps / WHATWG

[04:39:03.0000] <annevk>
jgraham: see e.g. the battery API stuff

[04:40:00.0000] <jgraham>
Do I have to? I think it will just make me sad :(

[04:40:01.0000] <jgraham>
I thought sicking was involved with that stuff

[04:40:02.0000] <jgraham>
Does it also use events?

[04:43:00.0000] <richt>
s/ you can't get the front-facing camera on mobile./ you can't get the front-facing camera on mobile...yet.

[04:44:00.0000] <jgraham>
annevk: What's the best example to point them to for the queue as task to fire an event stuff?

[04:44:01.0000] <zcorpan>
hmm. i'm not too happy with webvtt being axed from the html spec.

[04:45:00.0000] <zcorpan>
now i can't conveniently file bugs on it, and the xrefs are broken

[04:45:01.0000] <zcorpan>
Hixie: ^

[04:47:00.0000] <annevk>
jgraham: WebSocket API maybe?

[04:48:00.0000] <zcorpan>
i was going to suggest websocket, too

[04:49:00.0000] <zcorpan>
<video> also queues events, but it updates some stuff sync but queues events, which causes raciness

[04:50:00.0000] <jgraham>
WebSocket might be good. I found http://www.whatwg.org/specs/web-apps/current-work/#common-event-behaviors which is pretty OK

[04:50:01.0000] <jgraham>
/me checks websocket

[04:56:00.0000] <bga>
heh. to avoid wait when github's 300k css will load and 5 sec rendering w/ cpu & browser freeze will end just add github's css to urlfilter.ini

[04:56:01.0000] <bga>
annoying modern web

[05:09:00.0000] <hsivonen>
\o/ responseType == "json"

[05:09:01.0000] <hsivonen>
annevk: does it differ from "moz-json" except for the prefix?

[05:09:02.0000] <annevk>
maybe

[05:09:03.0000] <annevk>
I went with fighting encoding proliferation

[05:09:04.0000] <annevk>
enforcing UTF-8

[05:10:00.0000] <annevk>
not sure if I can get agreement on that, but it really seems better if we can get everyone on board with UTF-8

[05:10:01.0000] <bga>
XHR?

[05:11:00.0000] <hsivonen>
bga: yes

[05:12:00.0000] <zcorpan>
annevk: just prepare to be laughed at by bjoern

[05:12:01.0000] <Ms2ger>
News at ten

[05:13:00.0000] <jgraham>
I thought json was designed to work with utf8 only

[05:13:01.0000] <jgraham>
anyway

[05:13:02.0000] <hsivonen>
jgraham: the spec even requires UTF-32, IIRC!

[05:14:00.0000] <jgraham>
"JSON text shall be encoded in unicode"

[05:14:01.0000] <hsivonen>
jgraham: yay. IETF spec writingg

[05:14:02.0000] <hsivonen>
s/g//

[05:15:00.0000] <hsivonen>
jgraham: yeah, not clear if the spec requires UTF-32 from impls

[05:15:01.0000] <hsivonen>
annevk: I'm OK with UTF-8-only, FWIW.

[05:15:02.0000] <jgraham>
You would have thought the IETF people would be super picky about the difference between a characterset and an encoding

[05:16:00.0000] <hsivonen>
annevk: looks like Gecko supports the charset parameter on the HTTP level for "moz-json"

[05:17:00.0000] <zcorpan>
hsivonen: is there a bug about forcing utf-8 for workers in gecko?

[05:19:00.0000] <hsivonen>
zcorpan: I don't know

[05:21:00.0000] <zcorpan>
speaking of which, i should get around to converting our worker tests to testharness and get them released...

[05:23:00.0000] <zcorpan>
my favorite test is a windows-1252 text/html page that opens a worker to itself and checks that the worker is interpreted as utf-8

[05:23:01.0000] <gsnedders>
hsivonen: Practically everyone bases their JSON impl for ES5.1

[05:23:02.0000] <gsnedders>
*from

[05:28:00.0000] <jgraham>
For the benefit of relevant authorities: 07:26 < zcorpan> my favorite test is a windows-1252 text/html page that opens a worker to itself <-- this is the proof that zcorpan is evil, if you ever want him locked up for any reason

[05:29:00.0000] <gsnedders>
jgraham: Were there not more evil things in his testsuite than that?

[05:29:01.0000] <zcorpan>
probably, that was just my favorite

[05:30:00.0000] <jgraham>
Note how he takes pleasure from the pain

[05:31:00.0000] <hsivonen>
this is interesting: https://bugzilla.mozilla.org/show_bug.cgi?id=707108

[05:31:01.0000] <hsivonen>
I wonder how Apple's Mail and Opera's mail client deal

[05:32:00.0000] <gsnedders>
What. Just what.

[05:35:00.0000] <wilhelm>
That attachment is priceless.

[05:36:00.0000] <Ms2ger>
<DIV dir=3Dltr align=3Dleft><FONT face=3DVerdana></FONT>&nbsp;</DIV>

[05:36:01.0000] <Ms2ger>
\o/

[05:36:02.0000] <jgraham>
I like my emails in 3D!

[05:39:00.0000] <erlehmann>
hahaha oh wow

[05:40:00.0000] <zcorpan>
i doubt opera deals with that

[05:52:00.0000] <annevk>
classic: http://torrentfreak.com/copyright-corruption-scandal-surrounds-anti-piracy-campaign-111201/

[05:54:00.0000] <Ms2ger>
Also, typical

[06:02:00.0000] <hsivonen>
yay UA sniffing https://bugzilla.mozilla.org/show_bug.cgi?id=699289

[06:03:00.0000] <gsnedders>
hsivonen: Well, we already know that Opera only makes a mobile browser.

[06:10:00.0000] <hsivonen>
is Opera 11.60 going to ship Ragnarök?

[06:10:01.0000] <hsivonen>
/me is too lazy to get the release candidate before the release makes it to the .deb repo

[06:11:00.0000] <hsivonen>
first it seemed to be an Opera 12 feature. then it looked like it was going into 11.60

[06:12:00.0000] <jgraham>
Yes

[06:12:01.0000] <jgraham>
At least it is in the snapshots I believe

[06:12:02.0000] <jgraham>
I suppose things could change before release

[06:12:03.0000] <hsivonen>
jgraham: it was in 11.60 beta

[06:13:00.0000] <jgraham>
Right, that's the same information I have more or less

[06:13:01.0000] <hsivonen>
I'm slightly annoyed that 11.60 beta hasn't autoupdated to RC via the repo

[06:14:00.0000] <hsivonen>
but I realize that this is a glass house I'm in, considering that Mozilla doesn't even have a .deb repo

[06:14:01.0000] <jgraham>
Well there is a PPA fro Mozilla.

[06:15:00.0000] <jgraham>
The Opera builds typically aren't pushed to autoupdate for a little while after release in case there are horrible problems

[06:15:01.0000] <jgraham>
The deb counts as autoupdate in this case I believe

[06:16:00.0000] <jgraham>
/me doesn't really know much about desktop

[06:18:00.0000] <hsivonen>
the PPA for Firefox contains Canonical's builds--not Mozilla Corporation's builds, though

[06:18:01.0000] <gsnedders>
hsivonen: First there wasn't an 11.60 :)

[06:18:02.0000] <hsivonen>
gsnedders: ooh. agile release management

[06:19:00.0000] <hsivonen>
/me wonders if it's true that the major version of Opera is the year of the final release

[06:19:01.0000] <jgraham>
Haha, I wish\

[06:19:02.0000] <gsnedders>
10 was 2009

[06:19:03.0000] <hsivonen>
OK

[06:20:00.0000] <gsnedders>
No, the major version is arbitrary.

[06:20:01.0000] <jgraham>
Afaict all elemnts of the Opera version number are arbitary apart from the core id

[06:20:02.0000] <hsivonen>
I wonder if Opera users complain about version number decisions

[06:20:03.0000] <gsnedders>
11.60 and 12 are basically identical with the exception of 12 having hardware acceleration

[06:20:04.0000] <zcorpan>
it's not arbitrary! it's always greater than the previous version

[06:21:00.0000] <miketaylr>
and CORS

[06:21:01.0000] <jgraham>
It can be monotonically increasing and arbitary!

[06:21:02.0000] <hsivonen>
jgraham: what's the logic in the core id?

[06:21:03.0000] <zcorpan>
except, of course, between mobile and desktop

[06:21:04.0000] <gsnedders>
miketaylr: Right, 11.60 has now branched off

[06:21:05.0000] <Ms2ger>
/me points at the topic

[06:21:06.0000] <gsnedders>
miketaylr: But for a while they were almost identical

[06:21:07.0000] <hsivonen>
It seems that there's a build number and a Presto number

[06:21:08.0000] <miketaylr>
gsnedders: yeah

[06:22:00.0000] <jgraham>
hsivonen: The build number is a desktop thing that gets reset every so often

[06:22:01.0000] <jgraham>
So that is both arbitary and non monotonic

[06:22:02.0000] <jgraham>
the X.YY.ZZZ is the important number

[06:22:03.0000] <jgraham>
Specifically the ZZZ is the core version

[06:22:04.0000] <hsivonen>
jgraham: it's slightly unfair if your users aren't complaining at least about non-monotonic numbers :-)

[06:23:00.0000] <gsnedders>
hsivonen: It's basically x.y.z, x is a constant (2), y relates to API stability (at a platform-interface level), and z is just an ever increasing integer which is the revision, more or less

[06:23:01.0000] <zcorpan>
/me -> gym

[06:23:02.0000] <hsivonen>
gsnedders: so after 2.9.x there will be 2.10.y?

[06:23:03.0000] <gsnedders>
hsivonen: After 2.9.100 there will be 2.10.101

[06:23:04.0000] <Ms2ger>
Or 2.X.y?

[06:24:00.0000] <jgraham>
In theory 2 isn't constant

[06:24:01.0000] <gsnedders>
"In theory".

[06:24:02.0000] <gsnedders>
Very much in theory, though.

[06:24:03.0000] <jgraham>
Well gecko changed to version 2 eventually

[06:24:04.0000] <hsivonen>
gsnedders: umm. it's already at 2.9.220

[06:24:05.0000] <gsnedders>
hsivonen: I just took 100/101 as a random example

[06:24:06.0000] <hsivonen>
gsnedders: ah

[06:25:00.0000] <gsnedders>
hsivonen: The point is it increments regardless of the rest of it

[06:26:00.0000] <jgraham>
Everything is irrelevent apart from the last number which is a monotonically increasing integer

[06:26:01.0000] <jgraham>
This is the basic rule of thumb

[06:26:02.0000] <hsivonen>
yay for putting irrelevant numbers in the UA string

[06:26:03.0000] <jgraham>
Yeah :(

[06:27:00.0000] <gsnedders>
Indeed, there is actually 2.10.229 and 2.11.229, which differ in terms of whether new code can land which introduces breakage in the platform interfaces.

[06:28:00.0000] <gsnedders>
So they can differ, both in a black-box observable way and in a non-black-box observable way

[06:29:00.0000] <gsnedders>
(and for example, even something major such as Carakan had no affect, and went into both 2.4.17 and 2.5.17)

[06:29:01.0000] <gsnedders>
/me blinks realizing he can still remember that version

[06:30:00.0000] <gsnedders>
Oh, no, that was before we changed the release number format, so was 2.5.28

[06:30:01.0000] <gsnedders>
(where all three numbers are essentially arbitary)

[06:31:00.0000] <gsnedders>
(the only difference from what we have now is that the final number just incremented every fortnight, bsaically)

[06:49:00.0000] <karlcow>
/me wants UA string becomes from arcane poetry to "Hey I'm a browser", "Hey I'm a bot" :)

[06:49:01.0000] <karlcow>
or something along that

[06:49:02.0000] <karlcow>
"Yo man, browser here"

[06:50:00.0000] <karlcow>
hmm maybe it should include a fortune too.

[06:50:01.0000] <karlcow>
and the weather forecast for the day.

[06:51:00.0000] <karlcow>
That would trigger not that much more errors than we have now

[06:51:01.0000] <jgraham>
HTTP should be done in haiku. I am a browser / Visiting your nice web site / So give me the page

[06:51:02.0000] <jgraham>
(pedants will note this is not a haiku)

[06:54:00.0000] <erlehmann>
karlcow, i use program/version for my own projects.

[06:54:01.0000] <erlehmann>
like redokast/11-22-3333

[07:07:00.0000] <Workshiva>
jgraham: It would feel a bit weird if my browser started talking about the seasons and weather

[07:09:00.0000] <Philip`>
/me wonders to what extent the simplistic syllable-counting understanding of haiku in English is caused by schools using them as a way to teach people how to count syllables

[07:20:00.0000] <karlcow>
luv https://gist.github.com/1410787

[07:21:00.0000] <karlcow>
Philip`: Haikus are complicated even in Japanese :)

[07:22:00.0000] <karlcow>
one kanji != one syllabus

[07:32:00.0000] <annevk>
http://jena.sourceforge.net/iri/javadoc/com/hp/hpl/jena/iri/IRIFactory.html hahahaha

[07:47:00.0000] <annevk>
I guess I should step up on my encoding work again...

[07:47:01.0000] <annevk>
I fear the multi-byte encodings...

[07:47:02.0000] <Velmont>
It is fear inducing, I agree.

[08:03:00.0000] <hsivonen>
I can tell that annevk is reading my emails

[08:16:00.0000] <Hixie>
just got an e-mail from someone who wanted to register on the wiki but couldn't

[08:16:01.0000] <Hixie>
do we have plans for reopening the wiki?

[08:19:00.0000] <annevk>
TIL: https://www.w3.org/2011/12/01-tag-nominations

[08:19:01.0000] <annevk>
(W3C member-only btw)

[08:19:02.0000] <annevk>
Hixie: we don't have good anti-spam measures :(

[08:20:00.0000] <Hixie>
not having a wiki at all seems a bit drastic as a solution :-)

[08:21:00.0000] <annevk>
it's a non-starter really, but I got tired of deleting a lot of pages and users

[08:21:01.0000] <annevk>
Lachy and AryehGregor have access and can maybe patch it somehow

[08:21:02.0000] <annevk>
but AryehGregor is occupied for the next two-three weeks I think

[08:21:03.0000] <annevk>
not sure about Lachy

[08:22:00.0000] <annevk>
I think I may have access too, but I no next to nothing about wiki software and there's other things I can be doing

[08:22:01.0000] <annevk>
know*

[08:22:02.0000] <Hixie>
yeah, join the club :-/

[08:23:00.0000] <annevk>
I can look into it on Monday

[08:23:01.0000] <annevk>
tonight and weekend is somewhat occupied

[08:28:00.0000] <AryehGregor>
You can always create accounts manually for the time being.

[08:29:00.0000] <AryehGregor>
While logged in, go to Special:Userlogin.

[08:29:01.0000] <AryehGregor>
You might need to be an admin.

[08:29:02.0000] <AryehGregor>
Alternatively, enable some kind of confirmation for account creation, if there isn't already.

[08:33:00.0000] <Hixie>
hm, that's not too hard

[08:33:01.0000] <Hixie>
i guess we can do that like we do with the blog

[08:33:02.0000] <Hixie>
i'll put some notes on the wiki to say to contact us for an account

[08:34:00.0000] <Hixie>
I'll put in my e-mail for now, if it gets too much traffic I'll start rotating y'all in ;-)

[08:48:00.0000] <AryehGregor>
agraragarf.  Typed Arrays as implemented in browsers are seriously not architecture-independent?

[08:49:00.0000] <AryehGregor>
W? T? F?

[08:49:01.0000] <AryehGregor>
I can understand the Khronos Group not getting web compat requirements, but is that how browsers actually implemented it?

[08:54:00.0000] <jgraham>
I guess that people wanted to follow the spec and get the perf benefits

[08:54:01.0000] <jgraham>
Not least because aiui Khronos does some sort of certification

[08:55:00.0000] <AryehGregor>
Right, perf benefits.  It's really nice to have your code run as fast as possible when it isn't going to work anyway.

[08:57:00.0000] <jgraham>
Well how many browser vendors care about BE systems?

[08:58:00.0000] <AryehGregor>
How many browser vendors support BE systems?

[08:58:01.0000] <jgraham>
All I know is >= 1

[08:58:02.0000] <AryehGregor>
That one being what, Opera?

[08:58:03.0000] <jgraham>
Yup

[08:59:00.0000] <AryehGregor>
I assume Gecko and WebKit at least compile on big-endian platforms, for their use as rendering libraries if nothing else.

[08:59:01.0000] <zewt>
well, if (read: when) code starts assuming the LE architecture-dependant choice, BE browser(s) will end up implementing it as LE for compat anyway; if/when that happens, we can point at it and go "see, this is why you were being silly, now fix your spec"

[09:00:00.0000] <AryehGregor>
Assuming there's such a thing as a BE browser, to within standard margins of error.

[09:00:01.0000] <zewt>
obscure mobile stuff, i suspect

[09:01:00.0000] <jgraham>
TVs mostly afaik

[09:01:01.0000] <jgraham>
Gecko seems to run on BE systems

[09:01:02.0000] <zewt>
at least, rare enough that it's highly unlikely that we'll end up with a silo of BE-dependant code

[09:01:03.0000] <zewt>
(which would be the "bad end" outcome)

[09:02:00.0000] <AryehGregor>
It's self-evident any BE browsers that want to support TypedArray will have to emulate LE, it's just really annoying that people are even pretending otherwise.  It confuses people.

[09:02:01.0000] <AryehGregor>
Message to world: TypedArray is LE.  Ignore the spec.

[09:03:00.0000] <zewt>
i've gradually been trying to nudge the WebGL guys towards something resembling modern web API design

[09:03:01.0000] <zewt>
only so much I can do alone, though. heh

[09:03:02.0000] <AryehGregor>
Oh well, not my problem.

[09:03:03.0000] <AryehGregor>
I've seen WebGL.  It's horrifying.  It looks like a straight port of a C API to JS.  That's what it is, yes?

[09:03:04.0000] <zewt>
(trying to convince them to use prefixing in the Web way, not the OpenGL way; suggesting--without much hope on this one--that versioning their specs is not a good idea)

[09:04:00.0000] <zewt>
not exactly, but it definitely mimics OpenGL too directly

[09:04:01.0000] <AryehGregor>
That's what happens when we let non-web standards group make up web standards, I guess.

[09:04:02.0000] <AryehGregor>
Oh well.

[09:04:03.0000] <zewt>
that's mostly just a style issue, though, the API is perfectly usable despite that

[09:05:00.0000] <zewt>
the more fundamental problems are related to interop (hardware differences) and context loss

[09:06:00.0000] <zewt>
it doesn't abstract that stuff away like other APIs (because it basically can't, especially for context loss)

[09:09:00.0000] <jgraham>
To be fair, given my experience with smaller groups at W3C, it is not even slightly clear that Web Standards groups are much good at coming up with good web apis

[09:09:01.0000] <jgraham>
Or at least they typically have a ton of issues that someone needs to fix

[09:10:00.0000] <zewt>
i don't think webgl is horrifying; it definitely doesn't follow all of the same guidelines as other web APIs, which is unfortunate, but they're intrinsic to trying to expose something like OpenGL without inventing something entirely new (which is orders of magnitude harder)

[09:20:00.0000] <zewt>
am i the only one that find the concept of using language tags in WebVTT to allow correct TTS amusing

[09:21:00.0000] <zewt>
(the real use case is narrating translations, but it makes me think of people transcribing a voice track, then TTSing the transcription of something they just transcribed)

[09:24:00.0000] <zewt>
(i'm probably just easily amused)

[09:25:00.0000] <Hixie>
zewt: audio descriptions are a valid use case for VTT

[09:25:01.0000] <Hixie>
zewt: (for blind users)

[09:25:02.0000] <Hixie>
zewt: (or users like me, who are listening to a tv show on their ipod while cycling)

[09:26:00.0000] <zewt>
yeah, I get it, but my first mental image was listening to TV with the voices replaced with dr sbaitso

[09:29:00.0000] <zewt>
anyone know if any browsers actually vary their word wrapping based on @lang, out of curiosity?

[09:30:00.0000] <zewt>
wow, someone posting messages with a 90s BEGIN PHP SIGNATURE, heh

[09:30:01.0000] <zewt>
nostalgia

[09:31:00.0000] <michaelw>
zewt: closure implements TeX's paragraph formatting, IIRC, including hyphenation, which would be language dependent

[09:32:00.0000] <zewt>
michaelw: i mean actually using @lang, though, not just heuristic language detection

[09:32:01.0000] <michaelw>
zewt: ah

[09:33:00.0000] <zewt>
i know (most) browsers use it for font selection, i'm just not sure what else, if anything

[09:35:00.0000] <zewt>
("most" seems to be everyone except webkit)

[11:24:00.0000] <mikenson>
Hello. Is this a good place to ask a question about parsing HTML5? I'm not sure on something in the spec.

[11:24:01.0000] <AryehGregor>
mikenson, yes, exactly the right place.

[11:24:02.0000] <mikenson>
Cool, thank you.

[11:25:00.0000] <mikenson>
The WHATWG spec, section 12.2.4.69 (Tokenizing character references) "Anything else" is confusing me.

[11:27:00.0000] <mikenson>
Are the named characters without semicolons in the table (12.5) the only characters accepted without semicolons?

[11:28:00.0000] <mikenson>
For example the spec uses "I'm &notit; " which is parsed as "I'm &not;it;" (and a parse error).

[11:29:00.0000] <mikenson>
But would "I'm &neever;" be parsed as "I'm &ne;ever;" (with a parse error)?

[11:29:01.0000] <mikenson>
I'm asking because the table doesn't have an entry for &ne (without the semicolon) but it does for &not (also without the semicolon).

[11:34:00.0000] <jgraham>
mikenson: Right. You just use the table verbatium

[11:37:00.0000] <mikenson>
jgraham: Thanks. That clears things up.

[11:38:00.0000] <mikenson>
Is there an explanation anywhere for which named characters don't require semicolons?

[11:50:00.0000] <jgraham>
Not as far as I know. It is basically just the list of things that browsers accepted without semicolons

[12:03:00.0000] <kennyluck>
Where is this list from then?

[12:04:00.0000] <zewt>
(i'd imagine by testing browsers)

[12:08:00.0000] <mikenson>
Another question: The 3rd from last paragraph says, "If the characters after the & consist of one or more characters … followed by a semicolon then this is a parse error." But what if they don't? For example, &alpha (no semicolon) -- not in the table, not consumed, and no parse error?

[12:22:00.0000] <Hixie>
mikenson: correct

[12:22:01.0000] <Hixie>
mikenson: if there's no semicolon, then there's no risk of there being ambiguity in the future

[12:23:00.0000] <Hixie>
mikenson: since we'll never add any without semicolons

[12:24:00.0000] <mikenson>
Hixie: Ok. That makes sense.

[12:29:00.0000] <mikenson>
Just to be sure I've got it, ""One &alpha; One &beta" (missing semicolon at the end) gets parsed as "One α One &beta" with the literal text & b e t a, and a parse error. Is that correct?

[12:30:00.0000] <Hixie>
no parse error, unless i'm mistaken

[12:31:00.0000] <mikenson>
Right. Because no match can be made, and it doesn't end in a semicolon.

[12:31:01.0000] <bga>
somebody should say web developers to not make json sites :/

[12:32:00.0000] <martndemus>
any particular reason why?

[12:32:01.0000] <Hixie>
hsivonen: btw, looks like validator.nu does show an error in that case

[12:33:00.0000] <bga>
macpherson no indexing, not accesebility from old browsers

[12:34:00.0000] <zewt>
so everyone should stick to static pages forever

[12:34:01.0000] <bga>
yes

[12:34:02.0000] <martndemus>
ah, that's not jsons fault, thats the fault of the devs not making indexable fallbacks

[12:34:03.0000] <zewt>
no.

[12:34:04.0000] <bga>
grasefull degradation

[12:34:05.0000] <karlcow>
zewt: defines static pages ;)

[12:35:00.0000] <zewt>
pages that navigate to new URLs rather than updating in-place, in this context :)

[12:35:01.0000] <karlcow>
I think bga is talking about server rendered pages which is orthogonal to static pages

[12:36:00.0000] <Philip`>
Given that Google employs zillions of people, why haven't they solved the problem of indexing JS-generated pages yet?

[12:36:01.0000] <Philip`>
(assuming they haven't)

[12:36:02.0000] <bga>
zewt i mean sites which consist of whole js and json

[12:36:03.0000] <bga>
0% html

[12:36:04.0000] <martndemus>
it should be static pages and json with pushState, not or

[12:37:00.0000] <zewt>
basically you'll need to get over the fact that different pages have different needs and priorities

[12:37:01.0000] <Philip`>
Surely you could just run a headless Chrome and simulate clicking on every link and seeing where you end up - how hard can it be?

[12:37:02.0000] <zewt>
making server-rendered indexable pages in addition to a dynamic JSON interface can be a *lot* of work; whether it's worth it is entirely up to the developer

[12:38:00.0000] <zewt>
all you can do is make sure developers are aware of the costs in both directions and make an informed choice

[12:38:01.0000] <bga>
i guess its break idea of acceseble web

[12:38:02.0000] <karlcow>
zewt: it is more complex than that. It's not only the choice of the developer

[12:38:03.0000] <karlcow>
because we live in society and some sites do not have the same social requirements

[12:38:04.0000] <zewt>
it's always entirely up to the developer.

[12:38:05.0000] <martndemus>
its not a lot of work  when your back end is set up right (RoR works pretty awesome with the concept)

[12:39:00.0000] <zewt>
("developer" being "the owner of the page"; obviously the choice may be management rather than a programmer)

[12:39:01.0000] <karlcow>
ahah 180º ;)

[12:39:02.0000] <zewt>
no? heh

[12:40:00.0000] <bga>
finally we will have webgl web. everything will be draw by webgl and no dom, html, css

[12:41:00.0000] <bga>
i dont see any differences between this future and Flash

[12:41:01.0000] <zewt>
you don't see any difference between open standards and closed, proprietary browser plugins?

[12:41:02.0000] <zewt>
i'm not sure i can help you then :)

[12:41:03.0000] <bga>
dont troll me plz

[12:41:04.0000] <zewt>
uh, i'm not

[12:41:05.0000] <zewt>
you're saying silly things, so I'm pointing them out

[12:42:00.0000] <karlcow>
nah the plug behind the head directly into the cortex. cortexJson

[12:42:01.0000] <bga>
zewt i mean who need dom, css when i can make 'awesome' site fully based of canvas?

[12:43:00.0000] <bga>
and ok no user text selection

[12:43:01.0000] <bga>
tab stop

[12:43:02.0000] <bga>
etc

[12:43:03.0000] <zewt>
again that's up to the developer; all you can do is make sure people know the costs

[12:43:04.0000] <martndemus>
you can, but not everyone owns pc/phones/we that can render those sites that fast

[12:44:00.0000] <bga>
zewt my idea thatstandards should limit developer, not give freedom to make silly things

[12:44:01.0000] <zewt>
you want sites to be restricted to doing things that *you* think are important

[12:45:00.0000] <bga>
yeah

[12:45:01.0000] <zewt>
it's imposing your priorities on everyone else

[12:45:02.0000] <zewt>
people have different priorities and needs and resources and goals

[12:45:03.0000] <bga>
zewt look at Java politics

[12:45:04.0000] <bga>
thay restict users

[12:46:00.0000] <zewt>
java is one of the worst languages I've ever used

[12:46:01.0000] <karlcow>
ThoughI mean it's amazing to see how much time companies spend to develop useless web sites just to sell ads

[12:46:02.0000] <martndemus>
all i wanna say, the web is not java

[12:47:00.0000] <bga>
but you restrict semanic of tags

[12:47:01.0000] <bga>
dont allow costom tags

[12:47:02.0000] <bga>
you restrict users

[12:47:03.0000] <bga>
restrict more plz

[12:47:04.0000] <zewt>
actually, you can create custom tags, it's just handwavingly "invalid" (which is completely meaningless, since it works)

[12:48:00.0000] <bga>
else web will binary

[12:48:01.0000] <martndemus>
see using html5 tags in ie6, you are creating elements

[12:48:02.0000] <bga>
and clicking 'view-source' you will see minified json

[12:48:03.0000] <bga>
or binary code

[12:49:00.0000] <bga>
it will be death of web

[12:49:01.0000] <zewt>
http://zewt.org/~glenn/gross.html blink is back, baby

[12:49:02.0000] <bga>
and html

[12:49:03.0000] <karlcow>
different models of society

[12:49:04.0000] <bga>
Ж.

[12:49:05.0000] <karlcow>
free market, social market, etc. :) old debate

[12:49:06.0000] <bga>
* :/

[12:51:00.0000] <martndemus>
ooooh, thanks for the on = !on, never thought of that possibility =D

[12:51:01.0000] <bga>
zewt it will end by inventing 'new' web

[12:51:02.0000] <bga>
text based again

[12:51:03.0000] <bga>
new fidonet

[12:51:04.0000] <bga>
but ok

[12:51:05.0000] <bga>
if you want

[12:52:00.0000] <zewt>
these levels of hyperbole very rarely convince people of much, fyi

[12:52:01.0000] <bga>
but currently less and less sited available for me in lynx

[12:52:02.0000] <bga>
*sites

[12:52:03.0000] <martndemus>
why would you want to use lynx as your main browser?

[12:53:00.0000] <martndemus>
unless your browsing on a i368

[12:53:01.0000] <martndemus>
or macII

[12:54:00.0000] <bga>
lynx is good browser, i dont need bloated chrome or ff

[12:54:01.0000] <zewt>
telling people you use lynx is also a bad idea if you're trying to convince people to change their authoring habits. heh

[12:55:00.0000] <bga>
zewt i just try ti remember that main idea of web is accesebility

[12:55:01.0000] <zewt>
no, it isn't.

[12:55:02.0000] <bga>
css is option

[12:55:03.0000] <bga>
js is option

[12:56:00.0000] <bga>
only html is required

[12:56:01.0000] <zewt>
it's one goal of the web. it's not the driving one, or the only one.

[12:56:02.0000] <zewt>
and if you think css or javascript are optional, you're way too far out of touch from the web in the real world today. it's nice to say that these things should be optional, but in practice, they just aren't.

[12:57:00.0000] <martndemus>
css is optional, but a hell lot of people choose to use it, same goes for js

[12:57:01.0000] <zewt>
you can disable css and javascript, and if you do, you'll break a massive number of sites

[12:57:02.0000] <bga>
zewt second is make html is new OS?

[12:58:00.0000] <zewt>
okay?

[12:58:01.0000] <bga>
zewt authors should use 'graseful degadation'

[12:58:02.0000] <bga>
its important

[12:58:03.0000] <zewt>
in the real world, "don't" trumps "should"

[12:58:04.0000] <martndemus>
no website authors can do whatever the fuck they want

[12:59:00.0000] <zewt>
s/no/all/

[12:59:01.0000] <martndemus>
^

[12:59:02.0000] <zewt>
lots of people make sites that only work with css and javascript; the HTML Police aren't coming to take them away :)

[12:59:03.0000] <zewt>
we can shake our Fists of Principle at them all day, but it won't change it

[12:59:04.0000] <martndemus>
its up to the people to browse to the site or not

[12:59:05.0000] <zewt>
martndemus: and that's exactly it

[13:00:00.0000] <zewt>
everyone doesn't stop using a site because it requires css

[13:00:01.0000] <zewt>
99.99% don't care or notice

[13:00:02.0000] <zewt>
thus there's no real pressure for sites to work without css

[13:00:03.0000] <zewt>
(abbreviating "css and javascript" to "css" because repetitive)

[13:01:00.0000] <bga>
i happy that some sites still have 'mobile' version

[13:02:00.0000] <bga>
but web way is disappointing me

[13:02:01.0000] <martndemus>
well, i would say, that the future of mobile is even more xHr/json

[13:04:00.0000] <martndemus>
well bga, with that opinion, you are the 1%.

[13:04:01.0000] <bga>
heh

[13:04:02.0000] <bga>
ok

[13:05:00.0000] <zewt>
as a lynx user, you need to move the decimal point many places further :)

[13:05:01.0000] <martndemus>
yeah

[13:05:02.0000] <martndemus>
its propably far less then 1%, but I always wanted to make a OWS like reference ;)

[13:05:03.0000] <bga>
macpherson i read same opinion every day

[13:06:00.0000] <bga>
in forims, chats etc

[13:06:01.0000] <martndemus>
sources?

[13:06:02.0000] <bga>
many ppl want html4 back

[13:06:03.0000] <bga>
michaelrtm mostly linux forums

[13:08:00.0000] <martndemus>
well, as you can see, the general opinion is different then theirs

[13:08:01.0000] <bga>
macpherson main reason that web browsers become bigger and bigger, slower and slower, eat more RAM but web content quality not better

[13:08:02.0000] <martndemus>
correction

[13:08:03.0000] <martndemus>
browsers are becoming faster

[13:08:04.0000] <zewt>
(it's rather more complicated than that, heh)

[13:09:00.0000] <martndemus>
and the RAM consumptions is neglegible

[13:09:01.0000] <zewt>
(that's just incorrect; FF regularly uses 1.5GB of my 8GB system, which is substantial)

[13:10:00.0000] <martndemus>
well, there is still 6,5 gb of ram doing nothing

[13:10:01.0000] <zewt>
um

[13:10:02.0000] <zewt>
somehow you've assumed that my computer is dedicated entirely to firefox :)

[13:11:00.0000] <gnarf>
sounds like thats a firefox problem :)

[13:11:01.0000] <martndemus>
nah

[13:11:02.0000] <zewt>
chrome isn't better, from what I've heard

[13:11:03.0000] <martndemus>
my chrome is using 1.1gb atm

[13:11:04.0000] <zewt>
(i suspect Opera is; no idea about IE)

[13:11:05.0000] <martndemus>
about 10-15 tabs open

[13:11:06.0000] <gnarf>
it really isn't but responsible browsing helps ( closing tabs ) - and tbh, plugins like flash hurt a lot more than JS engines

[13:12:00.0000] <zewt>
gnarf: i object to the idea that i have to close tabs to be "responsible" to work around browser leaks

[13:12:01.0000] <zewt>
i have ~80 tabs open right now; that's how I use the browser

[13:12:02.0000] <gnarf>
its not even about leaks, its about caching that much content in memory for display

[13:12:03.0000] <zewt>
that's how I've used browsers for many many years

[13:12:04.0000] <gnarf>
80 tabs is insanity

[13:12:05.0000] <zewt>
no, not at all

[13:13:00.0000] <gnarf>
your mobile phone must hate you

[13:13:01.0000] <gnarf>
:)

[13:13:02.0000] <martndemus>
the browsers just scale up with what the general pc specs

[13:13:03.0000] <martndemus>
do

[13:13:04.0000] <zewt>
what does my mobile phone have to do with my desktop browsing patterns? heh

[13:13:05.0000] <martndemus>
but eh 1,5gb for 80 tabs

[13:13:06.0000] <martndemus>
thats impressive

[13:13:07.0000] <gnarf>
just saying... 80 tabs = 80 documents in memory

[13:13:08.0000] <zewt>
the same number of tabs was around 300mb around FF3

[13:13:09.0000] <gnarf>
and prolly ~200 images

[13:14:00.0000] <roc>
zewt: but did the content of the tabs change since FF3?

[13:14:01.0000] <gnarf>
how many flash objects?

[13:14:02.0000] <zewt>
browsers discard decompressed images in idle tabs (from what I recall)

[13:14:03.0000] <zewt>
roc: i distinctly recall noticing memory usage jumping massively between a couple versions

[13:14:04.0000] <zewt>
i think 3 -> 3.5 doubled memory usage, and then it doubled again at some "upgrade" after that (4 maybe)

[13:15:00.0000] <roc>
there have been regressions, but we've fixed most of them

[13:15:01.0000] <zewt>
it's at 1.1GB right now, but I havn't had the browser open that long (few days)

[13:15:02.0000] <zewt>
(at least it caps out; it doesn't OOM or anything)

[13:15:03.0000] <zewt>
(or out-of-address-space; same thing)

[13:15:04.0000] <roc>
unless you have unusual browsing habits, the content of those tabs has certainly changed since FF3, so at the least some analysis would be required to make memory comparisions "against FF3"

[13:16:00.0000] <martndemus>
bottomline: this isnt the time anymore where computers had 32mb of RAM and the browser used less then 1mb, get real

[13:16:01.0000] <zewt>
roc: i'm comparing memory usage at the time of the upgrade

[13:16:02.0000] <gnarf>
or installing FF3 and testing

[13:16:03.0000] <zewt>
when I upgraded from 3 to 3.5, memory usage jumped way up

[13:16:04.0000] <zewt>
(too long ago to remember details)

[13:16:05.0000] <bga>
macpherson i have 512mb

[13:16:06.0000] <zewt>
i'm inclined to write bga off as a troll. heh

[13:17:00.0000] <gnarf>
most people have that on their video card nowadays

[13:17:01.0000] <martndemus>
yeah i figured you were on some very old pc

[13:17:02.0000] <roc>
yeah, there have been regressions, but we've fixed many of them

[13:17:03.0000] <roc>
so it's hard to tell

[13:18:00.0000] <martndemus>
Just remember this: if you use old tech, dont expect that all the new stuff works on your dinosaur tech

[13:18:01.0000] <roc>
also, like someone else said earlier, some increased memory usage is directly related to improving performance

[13:18:02.0000] <martndemus>
it just isnt made for your dinosaur pc

[13:18:03.0000] <roc>
this is very clear for JS and graphics

[13:19:00.0000] <zewt>
firefox has always had a tendency to get slower over time, leading to me restarting it eventually; there's always the sense that that's tied to memory usage, but I have no idea if there's actually any relationship (and subjective UI performance is very hard to diagnose, especially when it only happens after a week of use and goes away if I restart it to add diagnostics)

[13:19:01.0000] <bga>
macpherson as result i will use opera mini servers to browse web

[13:20:00.0000] <kennyluck>
bga, I think I know what you are saying. The Web I would like to see is the Web where there are lots of nice, xrefed textbooks like the HTML LS, but I don't want HTML4 back and I know the only I can make this happen is to solicit permission from textbook authors or to hack WebKit for better MathML support.

[13:20:01.0000] <roc>
yes, sluggishness is often tied to GC pauses which is tied ot memory usage

[13:20:02.0000] <roc>
zewt: BTW in response to your earlier question, Gecko uses language information to control auto-hyphenation, but other than that doesn't use it for line-breaking

[13:21:00.0000] <zewt>
roc: does it actually use @lang, or is "language information" just language heuristics?

[13:21:01.0000] <roc>
it actually uses @lang

[13:21:02.0000] <zewt>
k

[13:23:00.0000] <bga>
kennyluck yeah. dynamic is option. plain html, svg and other markup formats

[13:24:00.0000] <bga>
web for me is info, i dont need nice css3 animations to read info

[13:26:00.0000] <kennyluck>
bga, well, you can think this way. You need css3 animations to make people happy to use html instead of ppt.

[13:26:01.0000] <kennyluck>
or pdf.

[13:26:02.0000] <bga>
if author instead show me info what i need, require js support just for get info via XHR - i will read info somewhere else

[13:27:00.0000] <bga>
kennyluck if ppl want animation - its ok. but, again, its just option

[13:27:01.0000] <martndemus>
bga you are a statistical 0.0001% which most authors tend to not care about. It might sound harsh, but it is

[13:32:00.0000] <annevk>
ah, glad we found a solution for the wiki

[13:32:01.0000] <annevk>
not ideal, but definitely better than no signups

[13:46:00.0000] <annevk>
AryehGregor: is there some way to find out all users for a MediaWiki installation and then all the users that have never contributed? And maybe a list of those that made a single contribution?

[13:46:01.0000] <annevk>
AryehGregor: I'm wondering if I can do some cleanup as there are still some spam accounts activated

[13:46:02.0000] <annevk>
(that have not spammed yet, but probably will at some point in the future)

[14:16:00.0000] <jgraham>
zewt: It turns out that running a JITing javascript engine takes more memory than a bytecode interpreter. So probably all browsers regressed memory usage as they introduced those

[14:17:00.0000] <jgraham>
What roc says about X tabs is tremendously important though

[14:18:00.0000] <jgraham>
Comparing memory usage for unspecified hetrogenous pages is useless

[14:21:00.0000] <zewt>
jgraham: i'd be very surprised if the memory usage of compiled JIT data is on that order of magnitude

[14:21:01.0000] <jgraham>
I wouldn't

[14:21:02.0000] <jgraham>
It's not just compiled code, it's the datastructures that people adopted

[14:21:03.0000] <zewt>
a gig of memory for (say) 80 pages worth of JIT'd javascript? highly doubtful

[14:22:00.0000] <zewt>
anyway, i'm not that worried about memory usage; the progressive slowness of firefox is more bothersome

[14:22:01.0000] <jgraham>
Well sure it's not the only thing on those pages

[14:22:02.0000] <zewt>
(using more memory is annoying, but memory is cheap; I'll probably jump to 16 GB soon)

[14:23:00.0000] <zewt>
also, i'd expect browsers to discard regeneratable data from idle pages (like they do--from what I understand--with decompressed images)

[14:24:00.0000] <zewt>
(of course, some pages just never go idle, but plenty do)

[14:52:00.0000] <Hixie>
any bash mavens know what i'm doing wrong here?

[14:52:01.0000] <Hixie>
if [ ( ! -s cldr.inc ) -o ( "`svn info -r HEAD .cldr-data | grep -i "Last Changed Rev"`" != "`svn info .cldr-data | grep -i "Last Changed Rev"`" ) ]; then

[14:52:02.0000] <Hixie>
i get "bash: syntax error near unexpected token `!'"

[14:53:00.0000] <Hixie>
seems to work fine (though inefficiently) if i reverse it and remove the ()s:

[14:53:01.0000] <Hixie>
if [ "`svn info -r HEAD .cldr-data | grep -i "Last Changed Rev"`" != "`svn info .cldr-data | grep -i "Last Changed Rev"`" -o ! -s cldr.inc ]; then

[15:01:00.0000] <gavinc>
Best commit message of the day in python web app "[solon/feature/admin-tool] Fixing W3C errors in HTML."

[15:05:00.0000] <jgraham>
Hixie: I believe what you're doing wrong is trying to write scripts in bash

[15:06:00.0000] <Hixie>
no argument from me there

[15:06:01.0000] <Hixie>
unfortunately hte bulk of this is just running other apps

[15:11:00.0000] <bga>
zewt btw i guess opening donateware project 'accesable web' which is proxy servers that run requested site in phantomjs, generate links for js actions ala webtoolkit.eu and serve plain html to client is good solution

[15:12:00.0000] <bga>
same as opera mini

[15:12:01.0000] <bga>
may be bit different


2011-12-03
[16:17:00.0000] <L04f3r>
I found this quite amusing. Ars writes that IE6 market share "has grown, from 7.5 percent to 8.33" during november 2011, from here: http://arstechnica.com/business/news/2011/12/internet-explorer-stops-its-slide-as-chrome-nears-firefox.ars

[16:17:01.0000] <L04f3r>
Could it be that we have just got another Asian country connected to the internet

[17:48:00.0000] <TabAtkins>
L04f3r: It seems more likely that whatever detection their stats come from is broken, and some Asian browser suddenly started detecting as IE6.

[17:50:00.0000] <L04f3r>
Well, IE6 countdown (http://www.ie6countdown.com/#chart) also reflects an increase of users worldwide,

[18:15:00.0000] <erlehmann>
more like IE6 countup

[18:15:01.0000] <erlehmann>
hhehe

[22:18:00.0000] <dbaron>
Hixie, did you mean https://www.w3.org/Bugs/Public/show_bug.cgi?id=15048 to be RESOLVED **LATER** ?

[22:18:01.0000] <Hixie>
oops, no. sorry about that. fixed. or wontfixed, i guess. :-)

[22:33:00.0000] <dbaron>
(Hooray for not disabling silly resolutions that come in the default install, or something.)

[22:39:00.0000] <Hixie>
actually i use LATER and REMIND quite a bit

[22:39:01.0000] <Hixie>
but that's another story :-)

[22:44:00.0000] <dbaron>
you were probably the only user in bugzilla.mozilla.org too

[01:49:00.0000] <annevk>
I sort of wonder if we should make "text" UTF-8-only too in XMLHttpRequest

[01:49:01.0000] <annevk>
send(string) is limited to UTF-8

[01:49:02.0000] <annevk>
receiving should be too

[03:07:00.0000] <Ms2ger>
Someone backup cssom/cssomview at whatwg, please?

[11:52:00.0000] <Philip`>
/me wonders what the UA "Mozilla/5.0 (X11; Linux i686) AppleWebKit/534.34 (KHTML, like Gecko) Qt/4.7.4 Safari/534.34" is

[11:52:01.0000] <Philip`>
It seems to be very common in some access logs I'm looking at, but surely it's not really Safari on Linux

[11:52:02.0000] <Ms2ger>
Konqi?

[11:53:00.0000] <Philip`>
(It's like 30% of all visitors to the site)

[11:55:00.0000] <espadrine>
or rekonq

[11:58:00.0000] <Philip`>
I thought they both added their names into the UA string

[11:58:01.0000] <erlehmann>
it really is just lying

[11:59:00.0000] <erlehmann>
say, what happens when someone uses a sane UA string?

[11:59:01.0000] <Philip`>
The web breaks

[12:00:00.0000] <erlehmann>
like Vendor/Version (Windowing Environment, Kernel)

[12:00:01.0000] <erlehmann>
what happens then?

[12:00:02.0000] <erlehmann>
yeah, but where?

[12:01:00.0000] <erlehmann>
i have experienced more breakage with assuming HTTP HEAD works than with weird UA strings.

[12:02:00.0000] <Philip`>
You get sent content that's designed for the wrong browser, as far as I'm aware

[12:02:01.0000] <Philip`>
(You'd only notice when running scripts)

[12:02:02.0000] <erlehmann>
can you show me specific sites that do that?

[12:02:03.0000] <Ms2ger>
Google search didn't like "Gecko/2.0" as a UA string last time I tried

[12:03:00.0000] <erlehmann>
wat

[12:11:00.0000] <gsnedders>
Ms2ger: For Google Instant, or more generlaly?

[12:11:01.0000] <Ms2ger>
Instant, probably? I don't remember

[12:11:02.0000] <Ms2ger>
Maybe we got Opera's version :)

[12:26:00.0000] <gsnedders>
Ms2ger: We get Instant, now.

[12:37:00.0000] <erlehmann>
so, Ms2ger, why do even people at google do browser detection if they can do feature detection?

[12:38:00.0000] <Ms2ger>
Because those people are not as smart as you seem to think they are? :)

[12:56:00.0000] <zewt>
Ms2ger: it's become pretty clear that google is a big company, and has its ... variety of employees, like any big company :)

[12:56:01.0000] <Ms2ger>
Yeah

[12:58:00.0000] <zewt>
(of course, there could be reasons for it, too--despite a lot of, uh, really questionable changes to google search lately, i still assume they're smart enough to put competent developers on *that* product)

[12:58:01.0000] <zewt>
(they're completely removed literal phrase searches, which is just unbelievable)

[12:59:00.0000] <Hixie>
there's also the matter that a developer who might be an expert at, say, UI design, might not be an expert at writing browser-agnostic JS

[13:00:00.0000] <zewt>
well, i'd hope that google, at least, would know the difference between a UI developer and a JS developer, and put the right people to the right tasks (at least for their more important products, like search)

[13:01:00.0000] <zewt>
the mysterious and utterly out of place "Change background image" on google's main front page makes me unsure, though. heh

[13:03:00.0000] <Philip`>
/me thought double-quotes still worked fine for literal searches

[13:03:01.0000] <zewt>
double-quotes are still fuzzed

[13:03:02.0000] <zewt>
you used to be able to say +"phrase" but they removed +

[13:03:03.0000] <zewt>
(another unbelievable change)

[13:03:04.0000] <zewt>
(they changed +foo to "foo", which means there's no equivalent to +"foo")

[13:04:00.0000] <Hixie>
there's a "verbatim" mode now actually

[13:04:01.0000] <zewt>
i +do +a +lot +of +searches +like +this so "having" "to" "type" "like" "this" really sucks

[13:05:00.0000] <zewt>
Hixie: is there another way to do a literal +"phrase" search now?

[13:05:01.0000] <Hixie>
/me points to what he just said

[13:06:00.0000] <zewt>
i have no idea what "verbatim" mode is, heh

[13:06:01.0000] <Hixie>
google it :-P

[13:06:02.0000] <zewt>
if i have to google google features to figure out what they are, that points to a problem in and of itself :P

[13:07:00.0000] <zewt>
eh that affects the whole search

[13:08:00.0000] <zewt>
anyway, food

[13:24:00.0000] <erlehmann>
google is becoming a worse filter.


2011-12-04
[19:17:00.0000] <linclark>
I see that the microdata dom api is being considered for removal?

[19:17:01.0000] <linclark>
is there a link with the reasoning?

[19:19:00.0000] <kennyluck>
huh? never heard of this info...

[19:20:00.0000] <linclark>
http://www.whatwg.org/specs/web-apps/current-work/multipage/microdata.html#microdata-dom-api

[19:23:00.0000] <Hixie>
linclark: not being considered for removal by me, but no idea if anyone else is considering arguing to remove it

[19:23:01.0000] <linclark>
Hixie: ah, ok, good to know... thanks!

[19:23:02.0000] <Hixie>
linclark: at this point there's little chance it'll be removed from the whatwg html standard unless someone has a really good argument, e.g. "we tried implementing it in a browser and nobody used it"

[19:24:00.0000] <linclark>
yeah, it seemed strange that the rest of microdata was still yellow but that the API for doing anything with it was red

[19:26:00.0000] <xylron>
Hey, quick note: in the latest complete WHATWG editors draft, in the references section, the WebVTT reference has a heading that reads "[WEBWORKERS]". That looks like a copy and paste issue.

[19:26:01.0000] <Hixie>
linclark: oh is it marked as such in the spec?

[19:27:00.0000] <Hixie>
so it is

[19:27:01.0000] <Hixie>
apparently "lpeng564" changed it

[19:27:02.0000] <Hixie>
wonder who that is

[19:29:00.0000] <Hixie>
looks like that's the only change that account made

[19:29:01.0000] <Hixie>
weird

[19:30:00.0000] <zewt>
hacked by microdata haters

[19:31:00.0000] <Hixie>
the way the database is set up makes it pretty trivial for vandalism to be fixed on the backend

[19:31:01.0000] <Hixie>
(i never implemented the frontend since it's never been an issue)

[19:31:02.0000] <Hixie>
literally every change ever made is logged, i don't just change the state

[19:31:03.0000] <Hixie>
and to get the current state i just ask for the last change

[19:35:00.0000] <linclark>
Hixie: yeah, after I saw that it wasn't your email address, I thought it might be something like that

[19:36:00.0000] <Hixie>
i fixed it

[06:12:00.0000] <annevk>
http://www.youtube.com/watch?v=YXh9RQCvxmg#t=6m30s is so awesome

[06:12:01.0000] <annevk>
I should extract some part to use as an example somewhere

[07:39:00.0000] <Ms2ger>
<biesi> why is it that way?

[07:39:01.0000] <Ms2ger>
<Hixie> i don't understand the question

[07:39:02.0000] <Ms2ger>
<Hixie> it almost sounded like you were trying to obtain some sort of logical explanation for browser behaviour

[07:39:03.0000] <annevk>
that's an old one; still funny :)

[07:40:00.0000] <Ms2ger>
Yeah, 2006 :)

[08:11:00.0000] <annevk>
Ms2ger: do you think it would be fine to define the new methods as if they passed a DocumentFragment to our existing methods?

[08:11:01.0000] <Ms2ger>
Sure

[08:11:02.0000] <annevk>
Ms2ger: e.g. append("test", node) passes a DocumentFragment consisting of a Text node "test" and a node to concept-node-append

[08:12:00.0000] <annevk>
The alternative would be to rewrite cocnept-node-append and friends to deal with lists, but this model seems somewhat clearer

[08:12:01.0000] <annevk>
At least, to the extent I managed to think about it

[08:12:02.0000] <Ms2ger>
Yeah, DocumentFragments are little more than lists anyway

[08:13:00.0000] <annevk>
never mind, it does not work for DocumentType and such :(

[08:13:01.0000] <Ms2ger>
Sounds like a positive effect :)

[08:14:00.0000] <annevk>
I'm not sure why we should support document.append(DocumentType), but some people think we should

[08:14:01.0000] <annevk>
of course it also means document.append(DocumentType, Element) should work (if document does not have them), but that requires changes to the existing algorithm

[08:18:00.0000] <annevk>
maybe it should be like

[08:18:01.0000] <annevk>
* one argument: pass it on

[08:19:00.0000] <annevk>
* more than one argument: DocumentFragment it or throw "HierarchyRequestError" if it does not fit in a DocumentFragment

[08:19:01.0000] <annevk>
(and then if it did not throw, pass it on)

[08:19:02.0000] <annevk>
so you have the same limitations, just a cooler API

[08:21:00.0000] <annevk>
making algorithms more complex to support ancient legacy bestowed upon us by SGML seems overkill

[08:34:00.0000] <annevk>
so given that

[08:35:00.0000] <annevk>
node.prepend(x) -> concept-node-pre-insert x into node before node's first child

[08:35:01.0000] <annevk>
node.append(x) -> concept-node-append

[08:36:00.0000] <annevk>
node.before(x) -> concept-node-pre-insert x into node's parent before node

[08:37:00.0000] <annevk>
node.after(x) -> concept-node-pre-insert x into node's parent before node's next sibling

[08:38:00.0000] <annevk>
node.replace(x) -> concept-node-replace node with x within node's parent

[08:38:01.0000] <annevk>
node.remove() -> concept-node-remove node from node's parent

[08:39:00.0000] <annevk>
plus the appropriate null checks for parent

[11:36:00.0000] <AryehGregor>
annevk, SELECT user_name FROM user WHERE user_edit_count < 2 or similar.

[11:38:00.0000] <AryehGregor>
Hixie, BTW, "if [ ( !" is wrong because ( initiates a subshell.  You probably want "if [ \( !" (if the [ command even allows grouping, never tried).

[11:38:01.0000] <Hixie>
aaah

[11:38:02.0000] <Hixie>
thanks

[11:38:03.0000] <AryehGregor>
Hmm, maybe not.

[11:38:04.0000] <AryehGregor>
[ in bash is a builtin.

[11:39:00.0000] <AryehGregor>
But I think it follows the same escaping rules as real commands.

[11:41:00.0000] <AryehGregor>
Yeah, seems to.

[13:38:00.0000] <bencc>
is the client required to send a UserAgent string when establishing a websocket connection?

[13:38:01.0000] <Hixie>
when i was writing the spec, it was required not to

[13:39:00.0000] <Hixie>
no idea what the spec says now though

[13:39:01.0000] <bencc>
why not to?

[13:39:02.0000] <bencc>
if you only send it once, why not send it?

[13:39:03.0000] <Hixie>
because it hurts small browsers

[13:40:00.0000] <bencc>
firefox sends the UseAgent while chrome doesn't

[13:40:01.0000] <bencc>
so if I need the user agent, I should send it myself after the connection?

[13:40:02.0000] <Hixie>
you should not need the user agent

[13:41:00.0000] <bencc>
if there is a bug, I want to know what browser cause it

[13:41:01.0000] <Hixie>
is there a bug?

[13:41:02.0000] <bencc>
there are always bugs

[13:42:00.0000] <bencc>
not with the websocket implementation but anything

[13:42:01.0000] <Hixie>
then file the bug with the browser vendor and have them fix it

[13:42:02.0000] <bencc>
:)

[13:42:03.0000] <Hixie>
working around the bug will just make matters worse

[13:42:04.0000] <Hixie>
on the long run

[13:42:05.0000] <bencc>
that's not what I meant

[13:43:00.0000] <Hixie>
but it's what i meant :-)

[13:43:01.0000] <bencc>
I want to have statistics about my users, to know what browsers they use

[13:43:02.0000] <Hixie>
why?

[13:43:03.0000] <Hixie>
it shouldn't make any difference to you

[13:43:04.0000] <bencc>
are you serious?

[13:43:05.0000] <Hixie>
yes

[13:43:06.0000] <bencc>
all browsers work 100% ?

[13:43:07.0000] <bencc>
no bugs? no missing features?

[13:44:00.0000] <Hixie>
missing features you can feature-test for, you don't need to know which browser it is

[13:44:01.0000] <Hixie>
bugs, you should ignore, and let the browser vendors fix it, instead of hacking around them

[13:44:02.0000] <Hixie>
certainly shouldn't sniff for the browser to work around them

[13:44:03.0000] <Hixie>
if you do that you will make it harder for them to fix the bug

[13:44:04.0000] <Hixie>
not to mention that it means you are prioritising certain browsers over others

[13:45:00.0000] <Hixie>
which gives smaller browsers a competitive disadvantage

[13:45:01.0000] <bencc>
I don't care about politics

[13:45:02.0000] <bencc>
I want my app to work

[13:46:00.0000] <Hixie>
this isn't politics, it's the good of the human race

[13:46:01.0000] <Hixie>
anyway, we're talking about hypotheticals here

[13:46:02.0000] <Hixie>
it's easier to discuss concrete cases

[13:47:00.0000] <Hixie>
hence my question:

[13:47:01.0000] <Hixie>
is there a bug?

[13:47:02.0000] <bencc>
so if a plane crash, the model is not important

[13:47:03.0000] <bencc>
just let the company fix it

[13:47:04.0000] <bencc>
they should guess it happened

[13:47:05.0000] <Hixie>
if you're building a plane on WebSocket then you need your head examined :-)

[13:47:06.0000] <smaug____>
:)

[13:48:00.0000] <bencc>
no, I'm building a web app and I put most of my time making it compatible with opera

[13:48:01.0000] <wilhelm>
Which of our many bugs are causing you trouble?

[13:48:02.0000] <bencc>
because most of the users in the world use it

[13:48:03.0000] <Hixie>
bencc: you shouldn't put your time into making your web app compatible with _any_ browser

[13:48:04.0000] <Hixie>
bencc: write to the spec, and if the browsers are buggy, file bugs with the browsers

[13:50:00.0000] <bencc>
that's exactly how gmail work

[13:50:01.0000] <Hixie>
i would definitely not recommend taking gmail as an example for how to build a web app

[13:50:02.0000] <bencc>
they implemented the chat and video with html5 5 years ago

[13:55:00.0000] <bencc>
should the browser show a warning when using secure websocket with self signed certificate?

[13:55:01.0000] <Hixie>
no, it should just disallow it from connecting

[13:56:00.0000] <bencc>
but browsers allow pages of self signed certificates with a warning

[13:57:00.0000] <Hixie>
yeah, that's dubious too. but at least they can put up an interstitial to explain to the user that they're about to have their identity stolen.

[13:58:00.0000] <bencc>
about feature detection, can I detect the websocket version on the client?

[13:58:01.0000] <bencc>
I know I can see the version on the server

[13:59:00.0000] <Hixie>
aw man, did they add a version to the protocol?

[13:59:01.0000] <bencc>
?

[13:59:02.0000] <Hixie>
back when i was editing the spec, the protocol was not versioned

[13:59:03.0000] <bencc>
why not?

[13:59:04.0000] <Hixie>
because versioning on the web is even worse than user agent sniffing

[14:00:00.0000] <bencc>
wow.

[14:00:01.0000] <bencc>
this is a lost cause :)

[14:00:02.0000] <Hixie>
versioning is unnecessary on the web

[14:00:03.0000] <Hixie>
html, css, js... they all work fine without versioning

[14:02:00.0000] <Ms2ger>
Why did we implement the stupid version of websockets again?

[14:02:01.0000] <Philip`>
Version numbers are useful when you spend two years tweaking fundamental aspects of the protocol and make everyone end up implementing different revisions of the specification

[14:04:00.0000] <Hixie>
Philip`: yeah, don't do that :-P

[14:05:00.0000] <bencc>
Philip`: thank you

[14:05:01.0000] <Philip`>
Not everyone has enough self-control to avoid doing that :-)

[14:16:00.0000] <jgraham_>
I believe websokets tells you the version number in the header, doesn't it?

[14:17:00.0000] <bencc>
yes but the client doesn't know its version

[14:18:00.0000] <jgraham_>
?

[14:19:00.0000] <jgraham>
Anyway ignore all versions that aren't -17

[14:19:01.0000] <jgraham>
I imagine everyone will fix their implementations to the RFC soon enough

[14:20:00.0000] <jgraham>
(I think -17 is indicated by 13 in the version field or something stupid)

[14:20:01.0000] <jgraham>
(yeah it is)

[14:21:00.0000] <jgraham>
Anyway, I can't work out why you care about the protocol version on the client

[14:22:00.0000] <jgraham>
I mean obviously if you *do* care it is trivial to find out, assuming you control oth ends of the wire; just send it as part of your subprotocol e.g. in the first message

[14:24:00.0000] <bencc>
jgraham: but if the client doesn't support the required version, why send the first request anyway?

[14:24:01.0000] <bencc>
than you should use long-polling or something else instead

[14:25:00.0000] <jgraham>
I don't understand what situation you are worried about

[14:25:01.0000] <bencc>
a situation where the client has websockets but not the required version

[14:26:00.0000] <bencc>
how come Philip` understood me and you and Hixie don't?

[14:26:01.0000] <jgraham>
What case is there where you are able to establish a websocket connection, but you can't actually use that connection?

[14:26:02.0000] <bencc>
why should you try to establish a connection if it's won't work?

[14:27:00.0000] <bencc>
I forgot

[14:27:01.0000] <jgraham>
It seems like a reasonably good way of telling that it won't work

[14:27:02.0000] <bencc>
yes

[14:27:03.0000] <bencc>
do I have air bag in this car?

[14:27:04.0000] <bencc>
wait, just crash against the wall

[14:27:05.0000] <bencc>
no, I don't

[14:27:06.0000] <bencc>
are you serious?

[14:28:00.0000] <bencc>
are you the guys that writing the specs?

[14:28:01.0000] <bencc>
that's scary :)

[14:29:00.0000] <jgraham>
I am rally trying to be helpful here...

[14:29:01.0000] <jgraham>
*really

[14:29:02.0000] <jgraham>
What is the concrete problem you are trying to solve?

[14:30:00.0000] <jgraham>
Is it "I need to work with outdated versions of chrome"?

[14:30:01.0000] <jgraham>
(and safari, maybe? I don't know if they shipped the insecure stuff too)

[14:30:02.0000] <bencc>
I shouldn't try to connect with the client if the websocket on it are "broken"

[14:30:03.0000] <bencc>
or with an old version

[14:30:04.0000] <bencc>
what's complicated about it?

[14:30:05.0000] <jgraham>
No, that's not a problem

[14:31:00.0000] <bencc>
how come it's not a problem?

[14:31:01.0000] <jgraham>
That's a statement of something you want, but you didn't explain why you want that beyond some irrelevent metaphor about safety critical systems like airbags

[14:31:02.0000] <bencc>
because it's stupid to first try to use websocket and than if it fails use long-polling

[14:31:03.0000] <bencc>
you are wasting requests

[14:32:00.0000] <bencc>
and the connection takes more time

[14:32:01.0000] <bencc>
so the user experience your client have is bad

[14:32:02.0000] <bencc>
do you understand this?

[14:32:03.0000] <bencc>
or maybe not?

[14:32:04.0000] <jgraham>
Yes, but on the other hand it will also cover situations where websockets fail for some other reason e.g. due o special proxies or firewalls or wahtever

[14:33:00.0000] <bencc>
those are two different cases

[14:33:01.0000] <jgraham>
I agree that the latency could be a problem for some aplications. Is your application hihly sensitive to the initial latency?

[14:33:02.0000] <bencc>
not it's not

[14:33:03.0000] <bencc>
my users like to wait

[14:34:00.0000] <bencc>
it's a website for s&m so they like to suffer

[14:34:01.0000] <Philip`>
bencc: I wasn't trying to agree with you, I was just trying to be unhelpfully snarky about the IETF

[14:34:02.0000] <bencc>
ok

[14:34:03.0000] <jgraham>
Well with my approach you can cover them with one codepath for the short-term need (old versions of frequently updated browsers) and the long term case (intermediaries that block websockets)

[14:35:00.0000] <jgraham>
bencc: It is entirely non-obvious that your particular use of websockets depends on being able to establish a connection wih minimum latency

[14:36:00.0000] <bencc>
forget it

[14:36:01.0000] <bencc>
this idiotic discussion is a waste of time

[14:36:02.0000] <jgraham>
Consider something where the page loads and then one has to have user interaction before establishing the real conenction

[14:37:00.0000] <jgraham>
The time for the user to interact with the page is going to be way longer than the time to set up a connection, so you can create a trial connection during page load

[14:37:01.0000] <jgraham>
and then already know if it will work when the actual connection is needed

[14:39:00.0000] <jgraham>
OTOH if you are trying to build a search engine that pulls the results over websokets than that delay might be undesirable (although I note that you will get it in the "broken intermediary" case anyway, and that in the other case it will only persist until browsers fix their implemenations to the latest spec)

[14:40:00.0000] <jgraham>
(for that example I assume that the search engine tries to pull the results on page load)

[14:43:00.0000] <jgraham>
(oh it seems that gecko haven't updated to -17 yet but chrome has. Still I guess the server should support both)

[14:43:01.0000] <jgraham>
(bth -10 and -17 that is)

[14:43:02.0000] <jgraham>
bencc: I am sorry you think it has been a waste of time. I have really tried to help you solve your problem. I'm sorry if my suggestions didn't match the solution you had in mind.

[15:22:00.0000] <AryehGregor>
jgraham, I think what bencc would like is something JS-visible that says what version of WebSockets the client implements.

[15:22:01.0000] <AryehGregor>
So you can do if (WebSocket.version < 17) { fallback() }

[15:22:02.0000] <AryehGregor>
This seems reasonable when the protocol is undergoing so many iterations.

[15:22:03.0000] <AryehGregor>
I guess no one thought it would be this many, though.

[15:23:00.0000] <AryehGregor>
And we'd have to keep it around forever as a meaningless legacy constant.

[15:24:00.0000] <AryehGregor>
bencc, so basically I think we're just saying we're okay with annoying people in the short term because a) anything else would make the APIs or protocol more complicated in the long term, even though it will eventually serve no purpose; and b) nobody thought the protocol would take this long to stabilize, so it didn't seem necessary.

[15:24:01.0000] <AryehGregor>
And now, of course, we've *definitely* arrived at the final protocol version, right?

[15:24:02.0000] <AryehGregor>
So it's still not necessary.

[15:30:00.0000] <zewt>
*cough*

[15:33:00.0000] <bencc>
ok


2011-12-05
[17:42:00.0000] <roc>
hmm

[21:26:00.0000] <zewt>
youtube is using onmouseup events for link clicks in search results instead of onclick : |

[21:27:00.0000] <zewt>
inspires something less than hope when major sites can get something so basic so horribly wrong

[22:23:00.0000] <heycam>
when was svg/mathml support first added to the html parser?

[23:02:00.0000] <nessy>
zewt: I think they are simple <a> tags around the clickable text - I don't quite follow what the problem is

[23:03:00.0000] <zewt>
select text in the search results; release the mouse and it treats it as a click

[23:39:00.0000] <zcorpan>
heycam|away: somewhere between 2007-10-26 and 2009-10-27

[23:40:00.0000] <zcorpan>
heycam|away: http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2008-April/014372.html

[00:03:00.0000] <hsivonen>
Are IANA registries versioned?

[00:08:00.0000] <heycam>
zcorpan, thanks

[00:19:00.0000] <tantek>
hsivonen, you mean like wiki pages? not that I've ever seen.

[00:53:00.0000] <hsivonen>
/me disagrees with Hixie characterizing transparent content models by "simply"

[01:04:00.0000] <nessy>
zewt: that's not what happens to me, strange. What browser version and platform are you on?

[02:10:00.0000] <annevk>
zewt: the problem with UTF-16 is that it is ingrained in many APIs (which I suppose is not really UTF-16 per se, but rather the 16bit code unit system we have)

[02:10:01.0000] <annevk>
zewt: so it comes up all the time

[02:10:02.0000] <annevk>
zewt: whereas legacy encodings is not really an implementation issue, it is a platform issue

[02:11:00.0000] <annevk>
both are bad and like you I don't think we can fix the 16bit code unit mess

[02:11:01.0000] <jgraham>
/me doesn't see the value of arguing whether UTF16 or legacy encodings are the worse issue when everyone involved thinks they are both bad

[02:12:00.0000] <annevk>
the point is that one is worse for the platform and the other is worse for implementors

[02:12:01.0000] <annevk>
hsivonen was arguing the implementor point, zewt the platform point

[02:16:00.0000] <hsivonen>
jgraham: there's really no point arguing which is worse. my main point was that when someone implies UTF-16 is OK for interchange, the credibility of what they otherwise say about encoding problems goes down

[02:18:00.0000] <michel_v_>
imho, utf16 was a naive solution, like "extended ascii" sets

[02:23:00.0000] <zcorpan>
now why hasn't firefox implemented MessageChannel yet?

[02:24:00.0000] <annevk>
smaug____ thinks it's too complicated

[02:24:01.0000] <annevk>
not sure if that's the actual reason

[02:25:00.0000] <zcorpan>
-_-

[02:25:01.0000] <zcorpan>
i'd say, too late to bikeshed that api

[02:29:00.0000] <hsivonen>
creepy. I can see my what I've searched on Android Market in the logs Android keeps on my device

[02:30:00.0000] <hsivonen>
seems like a bad idea to dump request URLs in a log file

[02:30:01.0000] <annevk>
kennyluck: thanks for sending that email btw, if I hadn't thanked you already; lets hope site-comments agrees :)

[02:47:00.0000] <annevk>
AryehGregor: so there's no special pages for such operations on the wiki?

[02:47:01.0000] <annevk>
AryehGregor: mkay

[02:56:00.0000] <smaug____>
MessageChannel and ports etc are horrible

[02:56:01.0000] <smaug____>
but that isn't the reason why it hasn't been implemented in FF

[02:56:02.0000] <smaug____>
bent might know more about the implementation

[02:57:00.0000] <smaug____>
or the reasons to not implement it

[03:00:00.0000] <zcorpan>
i agree that ports are confusing

[03:01:00.0000] <jgraham>
Why are they confusing? Or what's the better solution?

[03:01:01.0000] <jgraham>
/me is curious because he used a port-like API for something unrelated

[03:02:00.0000] <zcorpan>
i couldn't think of a better solution when we implemented ports (and workers) in opera, and i haven't come up with a better solution now, either

[03:04:00.0000] <zcorpan>
not sure why, maybe it's unnatural to have stuff going on in multiple places (windows or workers), and it's not always clear in the spec what's happening where

[03:04:01.0000] <smaug____>
and some ports aren't working etc

[03:04:02.0000] <smaug____>
(I mean if the port has been sent to elsewhere)

[04:01:00.0000] <annevk>
http://blog.whatwg.org/weekly-encoding-woes

[05:07:00.0000] <annevk>
we should have a shorthand for "If this throws an exception, re-throw the exception and terminate these steps." or make it the default somehow

[05:08:00.0000] <jgraham>
Ecmascript just makes it the default

[05:09:00.0000] <jgraham>
I mean that is how exceptions work in general so it is very surprising that it is not like that by default in specs

[05:09:01.0000] <jgraham>
"If an algorithm is defined to “throw an exception”, execution of the algorithm is terminated and no result is returned. The calling algorithms are also terminated, until an algorithm step is reached that explicitly deals with the exception, using terminology such as “If an exception was thrown…”. Once such an algorithm step has been encountered the exception is no longer considered to have occurred."

[05:30:00.0000] <hsivonen>
hmm. why do Opera Mobile and Opera Mini disagree about the viewport width in em on the same device?

[05:31:00.0000] <hsivonen>
more curiously still, why does Opera Mobile disagree with Opera Mobile Emulator launched with the profile for the device in question?

[05:31:01.0000] <hsivonen>
kinda defeats the point of the emulator

[05:32:00.0000] <Velmont>
hsivonen: They are quite different though. Maybe it's because presto version is different, or because Mini is just quite different.

[05:32:01.0000] <Velmont>
Wow, that was a bad sentence. :-)

[05:33:00.0000] <annevk>
http://blog.mozilla.com/dherman/2011/12/01/now-thats-a-nice-stache/ is kind of interesting in the context of whether we should have chaining in our APIs

[05:33:01.0000] <annevk>
I'm flip flopping again I think to "no"

[05:34:00.0000] <hsivonen>
whoever does QA on Opera Mobile Emulator might be interested in comparing http://hsivonen.iki.fi/test/width-in-em.html with Opera Mobile on the actual devices that the emulator claims to emulate

[05:35:00.0000] <hsivonen>
I see a discrepancy between Galaxy Tab 10.1 on the emulator vs. real device

[05:36:00.0000] <hsivonen>
(I tested portrait mode)

[05:38:00.0000] <hsivonen>
Velmont: there's no inherent reason why Opera Mini and Opera Mobile on a given device should consider the view port to have a different width measured in ems by default

[05:38:01.0000] <hsivonen>
sure, Mini and Mobile could simply have a different default font size

[05:38:02.0000] <hsivonen>
or a different device pixel to CSS px ratio

[05:39:00.0000] <hsivonen>
but neither of those needs to arise from the architecture differences

[05:52:00.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#mutation-methods

[05:52:01.0000] <annevk>
and e.g. the end of http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#element IDL if you want to see the IDL syntax

[05:53:00.0000] <jgraham>
annevk: You need to explain wht a macro is

[05:54:00.0000] <jgraham>
Also, it isn't yet clear why it needs to be a macro rather than a function that returns node

[05:54:01.0000] <annevk>
that bit doesn't really matter

[05:54:02.0000] <annevk>
I suspect it will change over time

[05:55:00.0000] <jgraham>
Fair enough, but you introduced a new and confusing spec construct :)

[05:55:01.0000] <annevk>
well you grasped what it did within 1 minute

[05:56:00.0000] <annevk>
and I'm targeting you with this text, so I'm not too worried

[05:56:01.0000] <annevk>
I need to write some domintro boxes too

[05:56:02.0000] <hsivonen>
When Galaxy Tab 10.1 is in the portrait mode, Firefox Aurora, the default browser and Opera emulator think it's 50em wide. Opera Mobile think it's 40em wide and Mini thinks it's 30em wide

[05:57:00.0000] <hsivonen>
big differences in defaults

[05:57:01.0000] <jgraham>
Well in this case yeah. But only because it was so simple that it wasn't really needed :)

[05:57:02.0000] <jgraham>
hsivonen: Sounds like it could be a bug, but I'm not really sure who to talk to

[05:57:03.0000] <zcorpan>
annevk: webidl is confusing as it is. don't make it worse. :)

[05:57:04.0000] <annevk>
<dfn> names are just names

[05:57:05.0000] <annevk>
zcorpan: suggestion?

[05:58:00.0000] <zcorpan>
annevk: use overloading

[05:58:01.0000] <annevk>
we have used this construct before, just with other names, not sure what works best

[05:58:02.0000] <annevk>
zcorpan: doesn't work

[05:58:03.0000] <hsivonen>
jgraham: the Mobile vs. Mobile Emulator discrepancy intuitively has to be a bug

[05:59:00.0000] <annevk>
m(X...); m(A...); != m(X | A...)

[05:59:01.0000] <annevk>
;

[06:00:00.0000] <zcorpan>
annevk: what's the difference?

[06:02:00.0000] <zcorpan>
the latter can mix X and A ?

[06:02:01.0000] <annevk>
zcorpan: correct

[06:02:02.0000] <annevk>
zcorpan: see https://www.w3.org/Bugs/Public/show_bug.cgi?id=14188

[06:03:00.0000] <annevk>
I'd be happy with better syntax

[06:03:01.0000] <annevk>
A | X... is not especially clear

[06:03:02.0000] <annevk>
I guess you could do (A | X)... but that's even worse

[06:08:00.0000] <zcorpan>
void append(Node or DOMString... nodes)

[06:10:00.0000] <annevk>
Document or DocumentType or DOMString

[06:10:01.0000] <annevk>
I guess that could work

[06:10:02.0000] <annevk>
suggest it in the bug

[06:12:00.0000] <zcorpan>
done

[06:33:00.0000] <annevk>
http://wasteaguid.info/ haha

[06:36:00.0000] <jarek>
is there any way to have the same DOM node displayed in two different places?

[06:37:00.0000] <jarek>
in javascript objects are copied always by reference, it would make sense if we could have several elements on the screen that reference to the same DOM object

[06:38:00.0000] <jarek>
s/it would make sense/it could make sense

[06:39:00.0000] <annevk>
that would have to be a CSS feature

[06:39:01.0000] <annevk>
CSS creates the render tree, not the DOM

[06:39:02.0000] <jarek>
annevk: yeah, I have already told about -moz-element()

[06:40:00.0000] <smaug____>
you can use an element as a background

[06:40:01.0000] <jarek>
s/have/was

[06:40:02.0000] <jarek>
sorry for typos

[06:40:03.0000] <smaug____>
yes, -moz-element

[06:40:04.0000] <jarek>
but there is nothing like this on other browsers

[06:41:00.0000] <smaug____>
jarek: if the element itself would have two representations, element.style would be strange

[06:41:01.0000] <smaug____>
or computedStyle

[06:41:02.0000] <smaug____>
jarek: file bugs to get -moz-element like functionality to other browsers

[06:42:00.0000] <smaug____>
/me doesn't remember if CSS WG is spec'ing -moz-element

[06:48:00.0000] <david_carlisle>
annevk: "My collegae Karl "

[06:52:00.0000] <annevk>
thanks

[06:52:01.0000] <annevk>
there's so many red in technical posts it's hard to spot the real mistakes sometimes

[06:55:00.0000] <jgraham>
You obviously meant to write collage, reflecting him as the sum of many pieces of his environment

[06:57:00.0000] <annevk>
heh, Karl would approve of that

[06:58:00.0000] <annevk>
next time I'll just go with friend

[06:58:01.0000] <annevk>
much easier to spell

[07:25:00.0000] <zewt>
annevk: we were talking about utf-16 as an interchange format, not about utf-16 as an API format, FWIW; anyway yeah both cases suck :)

[07:37:00.0000] <bga>
http://stackoverflow.com/questions/1257818/javascript-distributed-computing

[07:37:01.0000] <annevk>
/me wonders where ms2ger is

[07:38:00.0000] <annevk>
/me will patch the innerHTML spec

[07:48:00.0000] <jgraham>
annevk: Maybe Ms2ger is having unplanned downtime

[07:55:00.0000] <hober>
miketaylr: ok, we're at bocoup; thanks! :)

[07:55:01.0000] <miketaylr>
hober: cool! say hi to rick et al.

[07:55:02.0000] <hober>
will do

[08:09:00.0000] <annevk>
do we need to say something about this (UTF-32) in HTML: http://lists.w3.org/Archives/Public/public-webapps/2011OctDec/1370.html

[08:09:01.0000] <annevk>
though I suspect that if nobody supports UTF-32 it's more likely the content is mislabeled

[08:11:00.0000] <Hixie>
as far as HTML is concerned, UTF-32 is a myth

[08:12:00.0000] <annevk>
more and more browsers treat it as such too these days

[08:12:01.0000] <annevk>
I guess I'm not going to worry about it

[08:20:00.0000] <zewt>
oh god, is the "other glenn" really trying to insist that browsers should support utf-32

[08:24:00.0000] <annevk>
I wish it was public who ran for the TAG

[08:25:00.0000] <jgraham>
It's funny-sad that it isn't

[08:26:00.0000] <annevk>
every time people come up with some supposedly never changing technology it either has changed already or is going to change in the future

[08:26:01.0000] <Hixie>
who does the voting?

[08:26:02.0000] <annevk>
so funny

[08:27:00.0000] <annevk>
last example: UTF-8

[08:27:01.0000] <annevk>
Hixie: AC

[08:27:02.0000] <Hixie>
k

[08:36:00.0000] <annevk>
zewt: I wonder if you're just replying to him to make it clear there's a different saner Glenn too :p

[08:38:00.0000] <jgraham>
Hehe, I wondered the same :)

[08:39:00.0000] <Philip`>
Or they'll think he's talking to himself and clearly even more insane

[08:41:00.0000] <jgraham>
Maybe he is insane and the two Glenns are different parts of his personality. Insane, but not creative enough to invent unique names.

[08:43:00.0000] <zewt>
believe me, if I was saying the things this guy did, I'd use a different name

[08:43:01.0000] <zewt>
did/does

[08:54:00.0000] <Hixie>
where is this?

[08:55:00.0000] <annevk>
"json" thread

[10:29:00.0000] <rniwa>
annevk: are you still there?

[10:40:00.0000] <bga>
http://mobile.twitter.com/bga_/status/143761739056553984

[11:37:00.0000] <AryehGregor>
araghhahgh.  I cannot believe how broken Google Docs' text selection implementation is.

[11:37:01.0000] <AryehGregor>
/me is glad he never tried to spec Selection.modify()

[12:19:00.0000] <Ms2ger>
jgraham, s/unplanned downtime/life/, sorry

[12:20:00.0000] <Ms2ger>
Also, s/#orthogonalApi/#uselessAcademia/

[12:30:00.0000] <zewt>
gross, IE also supports utf-32, not just webkit

[12:31:00.0000] <zewt>
it's just a bit pickier (doesn't work if there's no doctype)

[12:35:00.0000] <zewt>
(ff8 interprets it as utf-16, in a sort of confusing way--the intervening nulls aren't rendered as a replacement character, so it looks like it's being rendered as plaintext)

[13:02:00.0000] <zewt>
(apparently ie and webkit will also autodetect utf-32; sometimes I hate the web)

[13:02:01.0000] <Velmont>
But do anyone really use it...

[13:03:00.0000] <zewt>
no idea (but it seems like everything that can be used, gets used)

[13:04:00.0000] <Velmont>
zewt: Well, but Mozilla is killing sync xhr2, and breaking a ton in that.

[13:04:01.0000] <zewt>
er, what?

[13:04:02.0000] <zewt>
"you can't do that" heh

[13:04:03.0000] <Velmont>
zewt: Can't do what?

[13:04:04.0000] <jgraham>
I doubt they are planning to kill sync ahr

[13:04:05.0000] <jgraham>
*xhr

[13:04:06.0000] <zewt>
yeah i seriously doubt it

[13:05:00.0000] <jgraham>
Just in new contexts

[13:05:01.0000] <zewt>
blocking new features from sync xhr, but not breaking existing support

[13:05:02.0000] <jgraham>
i.e. when you want xhr 2 features suddenly the sync options doesn't work

[13:05:03.0000] <zewt>
(rather, sync-xhr-in-the-ui-thread)

[13:05:04.0000] <jgraham>
right

[13:05:05.0000] <zewt>
(an important distinction)

[13:05:06.0000] <jgraham>
Killing UTF-32 seems relatively easy

[13:05:07.0000] <jgraham>
by comparison

[13:06:00.0000] <Velmont>
jgraham: sync xhr2, - not sync xhr. :-)

[13:06:01.0000] <zewt>
jgraham: maybe, but IE and WebKit both have their niche sets of effectively-browser-specific pages that might make those vendors hesitant to remove it

[13:06:02.0000] <zewt>
well, by comparison, yes

[13:06:03.0000] <jgraham>
I can even sort of imagine microsoft doing it in their standards more

[13:06:04.0000] <jgraham>
*mode

[13:06:05.0000] <jgraham>
I can't iamgine apple agreeing to it though

[13:07:00.0000] <jgraham>
Velmont: right, but that won't break a ton of pages I expect

[13:07:01.0000] <zewt>
but not autodetecting UTF-32 might be easier to do (than removing it outright)

[13:07:02.0000] <jgraham>
If it does they won't do it

[13:07:03.0000] <jgraham>
They have market forces just like everyone else

[13:07:04.0000] <Velmont>
jgraham: Don't you think? Well, I've used sync xhr with cors a looot :-)

[13:07:05.0000] <zewt>
currently, the spec doesn't actually allow autodetecting UTF-32, but two browsers do it, which means there's currently a mismatch

[13:08:00.0000] <jgraham>
Velmont: Breaking a ton of TCs is not like breaking a ton of websites

[13:08:01.0000] <zewt>
(OtherGlenn made a useful observation--UTF-32 will trigger UTF-16 detection before it gets anywhere near the heuristic detection later)

[13:08:02.0000] <Velmont>
jgraham: Hrmf.

[13:08:03.0000] <jgraham>
Unless they are acid tests. And even then we eventually manage to get people to change the test :)

[13:10:00.0000] <zewt>
i'm not personally worried about browsers being off-spec with utf-32 detection, since real utf-16 files don't begin with U+0000, just a nice thing to get settled some day

[13:24:00.0000] <gsnedders>
I'd rather we detected UTF-32 properly and then failed

[13:24:01.0000] <gsnedders>
Like, gets treated the same as any other unknwon encoding, instead of trying to treat it as UTF-16

[13:26:00.0000] <zewt>
i don't really care either way, only about the spec/implementation mismatch

[14:09:00.0000] <Hixie>
i wonder why kris is asking about html4 things on www-html

[14:10:00.0000] <Ms2ger>
Because it's stable?

[14:11:00.0000] <Hixie>
i mean, what is he using the answers for

[14:12:00.0000] <Ms2ger>
I don't think I want to know

[14:12:01.0000] <karlcow>
TMI

[14:14:00.0000] <tantek>
historical research?

[14:15:00.0000] <karlcow>
biologist?

[14:28:00.0000] <zewt>
i suppose i deserve my time being wasted when i violate my own waste-of-time-thread guidelines

[14:35:00.0000] <tantek>
self-correcting feedback loops are appreciated. :)

[14:45:00.0000] <annevk>
rniwa: am now

[14:48:00.0000] <annevk>
rniwa: main benefit would be smaller mutation record objects I suppose, but that is probably not much of an issue anyway if you store them in a smart way

[15:05:00.0000] <rniwa>
annevk: hm... but it's just some IDL attributes, right?

[15:05:01.0000] <rniwa>
annevk: doesn't seem like a big deal to have a few extra properties

[15:07:00.0000] <annevk>
just doesn't seem very clean

[15:20:00.0000] <annevk>
zewt: we're gonna solve the problem by not making UTF-32 an encoding label

[15:21:00.0000] <annevk>
zewt: i.e. "utf-32" is the same as "abacadabra"

[15:22:00.0000] <zewt>
annevk: that doesn't help unless WebKit and IE are willing to drop UTF-32 support (whether at the autodetect level or entirely)

[15:23:00.0000] <zewt>
if they are, then it's easy

[15:24:00.0000] <annevk>
there's not much we can do about proprietary extensions

[15:26:00.0000] <zewt>
but if they won't remove that, then there's not much point to the spec shaking its fist more loudly at utf-32

[15:26:01.0000] <zewt>
either way the spec and implementations will differ

[15:28:00.0000] <annevk>
the spec just makes some recommendations because we're in a transition

[15:28:01.0000] <annevk>
and because encodings are poorly defined at best

[15:28:02.0000] <annevk>
I have some ideas on how to do better, but I haven't written down an actual spec yet

[15:29:00.0000] <zewt>
i mean, currently ie and webkit differ from the spec at step 4 (step 4--if you get there--says utf-32 must be detected as utf-16, those browsers don't do that); explicitly forbidding utf-32 as a supported encoding would just change where those browsers differ from the spec

[15:29:01.0000] <zewt>
(step 4 being the BOM header step)

[15:30:00.0000] <zewt>
nothing wrong with being more explicit, of course (it's a lateral move, not a step back)

[15:32:00.0000] <annevk>
UTF-32 is pretty much forbidden

[15:32:01.0000] <annevk>
unless you have a very good reason to support

[15:32:02.0000] <zewt>
but in practice, that's not the case :(

[15:33:00.0000] <zewt>
(webkit + ie)

[15:33:01.0000] <annevk>
I don't really expect implementations to catch up with all the details of the specification within a couple of years after it was introduced

[15:33:02.0000] <annevk>
that almost never happens

[15:34:00.0000] <annevk>
it took half a decade for the HTML5 parser to gain some support

[15:34:01.0000] <zewt>
sure, if you think that they'll eventually be willing to remove utf-32 outright, that's fine (even if it takes a few years)

[15:34:02.0000] <annevk>
pretty close to a decade now for <input type=date> and that's still in its infancy

[15:35:00.0000] <annevk>
oh yeah, I expect them to remove support for it eventually

[15:35:01.0000] <zewt>
i don't know if the utf-32 support is purely "we implemented it with everything else and don't really need it" or actual legacy compat

[15:35:02.0000] <zewt>
which is the real question there, of course

[15:36:00.0000] <annevk>
just like I thought in 2008 that Microsoft would turn around eventually and implement XHR + CORS

[15:36:01.0000] <zewt>
eventually implementing something and eventually removing something are different beasts, though, as you know better than I :P

[15:37:00.0000] <Philip`>
Or "we don't know if there's actual legacy compat, but the tiny possibility of problems outweighs the tinier gains of removing support"

[15:39:00.0000] <erlehmann>
gains of removing support?

[15:39:01.0000] <annevk>
in the end Microsoft will want to comply with the standards of the platform

[15:39:02.0000] <annevk>
and if the standards say that "utf-32" does not mean shit, they will play

[15:39:03.0000] <erlehmann>
you are a very optimistic fellow.

[15:39:04.0000] <zewt>
interop, closer to consistency of encoding detection between browsers (as long as you don't hit the heuristic/locale steps), helping utf-32 die

[15:40:00.0000] <AryehGregor>
Is *anyone* trying to implement the encoding detection spec?  Does anyone know if it's actually implementable?

[15:40:01.0000] <annevk>
erlehmann: it's what has happened in the decade I've been involved time and again, but sure, nothing is certain

[15:40:02.0000] <annevk>
AryehGregor: Opera implemented it, I believe

[15:41:00.0000] <erlehmann>
annevk, i'm looking forward to vorbis support then. in 2017, when i don't need it anymore, because the mp3 patents … hmm. probably are still going to be out there somewhere, lurking.

[15:42:00.0000] <zewt>
time for mickey mp3 laws

[15:42:01.0000] <annevk>
in the end Microsoft ships a browser like anyone else, and browsers are driven a lot by what developers want, and they want browsers to work the same way

[15:42:02.0000] <erlehmann>
annevk, if large inconsistencies like CSS weirdness and media formats happen to work for them, i do not believe small inconsistencies have any chance unless they actually drive it.

[15:43:00.0000] <annevk>
they might not move as fast as the others, but they have <canvas> now, they have full CSS 2.1 support, etc.

[15:43:01.0000] <zewt>
well, at least there's some evidence that they're willing to make breaking changes to their own legacy compat (eg. read-only event objects)

[15:43:02.0000] <erlehmann>
funny, developers i know constantly tell me browsers are driven by what browser companies want. that is some nice loop ;D

[15:43:03.0000] <annevk>
all the things we thought were not going to happen back when we started with the WHATWG in 2004

[15:43:04.0000] <erlehmann>
IE has <canvas>? wow. long time no see.

[15:43:05.0000] <annevk>
so maybe I'm pretty optimistic, but there's some history to support it

[15:44:00.0000] <zewt>
annevk: supporting new features and breaking existing ones are different classes, though; i don't think adding support for Canvas is evidence for making breaking changes (though as I said, there's at least some evidence for that)

[15:44:01.0000] <erlehmann>
annevk, you may be right after all, because killing off UTF-32 slowly is almost as good as killing it off fast.

[15:45:00.0000] <WeirdAl>
it's been 7 years of WHATWG?  That deserves a "wow" of its own. :)

[15:45:01.0000] <erlehmann>
so it might not matter if they care much, if they do at all.

[15:45:02.0000] <annevk>
zewt: the HTML parser was a breaking change

[15:45:03.0000] <annevk>
zewt: CSS 2.1 was a breaking change

[15:45:04.0000] <annevk>
zewt: a lot of things were breaking changes, for pretty much every browser we've had those

[15:46:00.0000] <zewt>
modulo quirks mode, though (though I pretty much ignore the details of that, being fortunate enough to not have horrible legacy stuff to maintain)

[15:46:01.0000] <annevk>
ah yeah, IE10 breaks its own quirks mode!

[15:46:02.0000] <annevk>
to be more compatible with the other browsers

[15:46:03.0000] <annevk>
that should be a good sign that UTF-32 will go away :)

[15:47:00.0000] <zewt>
dunno, as always we'll see :)

[15:47:01.0000] <zewt>
far from the biggest problem plaguing charsets, so I'm not chewing my fingernails over it either way

[15:47:02.0000] <AryehGregor>
IE10 implements appcache?  I thought that was broken and no one wants to use it.

[15:51:00.0000] <annevk>
I think everyone just wants more out of it

[15:51:01.0000] <annevk>
(to put it somewhat simply)

[15:57:00.0000] <bga>
http://code.google.com/chrome/extensions/trunk/experimental.socket.html

[15:58:00.0000] <AryehGregor>
:( http://src.chromium.org/viewvc/chrome/trunk/src/webkit/glue/webkit_glue.cc?r1=111877&r2=111876&pathrev=111877


2011-12-06
[16:01:00.0000] <AryehGregor>
I love open-source: https://bugs.webkit.org/show_bug.cgi?id=73182

[16:02:00.0000] <zewt>
would spoofing as "User-Agent: you're an idiot" be acceptable

[16:02:01.0000] <zewt>
perhaps it would help get the message across

[16:05:00.0000] <erlehmann>
zewt, i like your style and wish to subscribe to your newsletter.

[16:06:00.0000] <annevk>
I think it's right here, in #whatwg :)

[16:07:00.0000] <erlehmann>
// Pretend to be Firefox. Silverlight doesn't support Win Safari.

[16:07:01.0000] <annevk>
someone please patch WebKit to remove UTF-32 for me tonight

[16:07:02.0000] <erlehmann>
ahaha oh wow

[16:07:03.0000] <annevk>
nn

[16:08:00.0000] <Hixie>
nn

[16:08:01.0000] <erlehmann>
nn?

[16:09:00.0000] <AryehGregor>
Two nymphs next to a scroll.

[16:09:01.0000] <AryehGregor>
/me uses magic missile to knock them both off from a distance

[16:09:02.0000] <Hixie>
erlehmann: "night night"

[16:09:03.0000] <AryehGregor>
Those things can be really annoying.

[16:10:00.0000] <AryehGregor>
/me used to play NetHack a bunch, and sometimes still randomly associates strings of characters with monsters and treasure

[16:10:01.0000] <AryehGregor>
Particularly in fixed-width fonts.

[16:13:00.0000] <erlehmann>
i use variable width

[16:13:01.0000] <erlehmann>
you insensitive clod

[16:13:02.0000] <erlehmann>
(p.s. hot grits)

[18:16:00.0000] <jcranmer>
sigh @ the UTF-8 thread

[20:02:00.0000] <JonathanNeal>
Is this style still relevant? http://www.iecss.com/whatwg.css - I compiled it from the spec, but I think it had imaginary properties like :any(dl, menu, ol, ul) :any(dl, menu, ul) etc

[20:43:00.0000] <zewt>
commending boris's endurance in the utf-8 thread

[20:46:00.0000] <zewt>
will i be strung and quartered if i point out that missing language declarations have the exact same problem as missing encoding declarations (even if the cases it matters are fewer)

[20:46:01.0000] <zewt>
also drawn (need a refresher on my midieval execution methods)

[20:47:00.0000] <zewt>
(also medieval; striking out tonight)

[21:39:00.0000] <mendota>
can i ask a question about arcs in canvas?

[21:46:00.0000] <Hixie>
mendota: sure

[22:28:00.0000] <abarth>
Hixie: do you know how to subscribe to public-html ?  I used to be subscribed, but I don't seem to be anymore.  http://lists.w3.org/Archives/Public/public-html/ doesn't have the usual subscription instructions

[22:29:00.0000] <Hixie>
as a googler you have to go through tv

[22:29:01.0000] <abarth>
ah, thanks

[22:29:02.0000] <Hixie>
but frankly i would count your blessings

[22:30:00.0000] <abarth>
ok.  i've been encouraging the web intents folks to come to public-html to talk about <intent>

[22:30:01.0000] <abarth>
but i guess I can read it in the archives

[22:41:00.0000] <abarth>
Hixie: do you have a moment to tell me how nutty this text about sandbox flags is?  http://dvcs.w3.org/hg/content-security-policy/raw-file/tip/csp-specification.dev.html#sandbox

[22:41:01.0000] <abarth>
"When enforcing the sandbox directive, the user agent must set the sandbox flags for the protected document as if the document where contained in a nested browsing context within a document with sandbox flags given by the the directive-value."

[22:43:00.0000] <Hixie>
hrm

[22:43:01.0000] <abarth>
i don't think its quite right

[22:43:02.0000] <abarth>
i couldn't find a good hook in HTML for this

[22:44:00.0000] <Hixie>
what you probably want to do is set some hook that i can then do the right magic with

[22:44:01.0000] <Hixie>
rather than try to poke the html spec flags

[22:44:02.0000] <abarth>
ok

[22:44:03.0000] <Hixie>
because the flags you have to set are pretty complex and subtle

[22:44:04.0000] <Hixie>
and involve the navigation algorithm, etc

[22:44:05.0000] <abarth>
how about the "CSP sandbox flags" as a property of a Document

[22:44:06.0000] <abarth>
which will be a string like you'd get in the iframe attribute?

[22:44:07.0000] <abarth>
so HTML handles the parsing

[22:44:08.0000] <Hixie>
has to be on a browsing context, not a document

[22:44:09.0000] <Hixie>
doesn't make sense to sandbox a document

[22:45:00.0000] <abarth>
why not?

[22:45:01.0000] <abarth>
sorry, let me ask a different question

[22:45:02.0000] <abarth>
is a browsing context preserved across navigations?

[22:45:03.0000] <Hixie>
yes

[22:46:00.0000] <Hixie>
but the flags can change during the lifetime of the browsing context

[22:46:01.0000] <abarth>
ah

[22:46:02.0000] <abarth>
ok

[22:46:03.0000] <Hixie>
what matters to all teh security stuff is the state when the browsing context was last navigated

[22:47:00.0000] <Hixie>
e.g. "if... its browsing context had its sandboxed forms browsing context flag set when the Document was created ..."

[22:47:01.0000] <abarth>
i see

[22:47:02.0000] <Hixie>
but the net result is that you have to set the flags before the document is created

[22:47:03.0000] <abarth>
do we have the response headers when the document is created?

[22:47:04.0000] <Hixie>
er, before the Document is created

[22:47:05.0000] <Hixie>
sure

[22:47:06.0000] <Hixie>
assuming it came over HTTP

[22:48:00.0000] <abarth>
ok, so when the document is created, HTML needs to ask about the CSP policy for the document

[22:48:01.0000] <abarth>
or for the response

[22:48:02.0000] <Hixie>
we get the headers by navigate step 19 or so (type sniffing step), we create the document as a side-effect of step 20 (the switch statement that relies on the sniffed type)

[22:49:00.0000] <abarth>
Upon receiving an HTTP response containing ...

[22:49:01.0000] <abarth>
that's when the CSP policy starts getting enforced

[22:49:02.0000] <abarth>
"Upon receiving an HTTP response containing at least one Content-Security-Policy header field, the user agent must enforce the combination of all the policies contained in these header fields."

[22:50:00.0000] <Hixie>
so... what happens if the page navigates itself to a page without the CSP?

[22:50:01.0000] <Hixie>
or does a history.back() to a accomplice page that isn't sandboxed?

[22:50:02.0000] <abarth>
that's fine

[22:51:00.0000] <abarth>
consider the unique-origin sandbox bits

[22:51:01.0000] <abarth>
or the disable-script

[22:51:02.0000] <Hixie>
k

[22:51:03.0000] <abarth>
those make sense on a per-document basisi

[22:51:04.0000] <Hixie>
so when do we reset the flags?

[22:51:05.0000] <abarth>
each navigation

[22:52:00.0000] <abarth>
what actually happens in the implementation is that we copy the sandbox flags from the Frame to the Document when the document is created

[22:52:01.0000] <abarth>
because we're supposed to freeze the sandbox flags

[22:52:02.0000] <abarth>
we enquire about the CSP policy at that time

[22:52:03.0000] <abarth>
that happens each time a new document is loaded into a Frame

[22:52:04.0000] <Hixie>
hmm... the document is created before the session history change happens

[22:53:00.0000] <Hixie>
so we'd have to reset the flags before the old document is removed...

[22:53:01.0000] <Hixie>
might make sense to just set the flags temporarily while the document is being created or something

[22:53:02.0000] <Hixie>
how is this supposed to interact with the sandbox attribute? union?

[22:53:03.0000] <abarth>
can we not just set them on the document when we copy the state to the document?

[22:54:00.0000] <abarth>
Hixie: its the same combination operator that happens when you have nested iframes

[22:54:01.0000] <abarth>
that each contribute a sandbox attribute

[22:55:00.0000] <Hixie>
hmmm

[22:56:00.0000] <Hixie>
so the way it works for nested iframes is that setting the flag on an iframe just forces it on for all descendants iframes

[22:56:01.0000] <abarth>
yeah, so the union

[22:56:02.0000] <abarth>
(assuming the items are things like "sandboxed scripts browsing context flag")

[22:57:00.0000] <Hixie>
the precise text right now is "In addition, any browsing contexts nested within an iframe, either directly or indirectly, must have all the flags set on them as were set on the iframe's Document's browsing context when the iframe's Document was created."

[22:57:01.0000] <Hixie>
so i guess i'd just change that to "nested within a browsing context"

[22:57:02.0000] <Hixie>
and change the other "iframe"s to "browsing context"

[22:57:03.0000] <abarth>
yes

[22:58:00.0000] <abarth>
"iframe's Document's browsing context when the iframe's Document was created"

[22:58:01.0000] <abarth>
that state gets represented in the implementation

[22:58:02.0000] <abarth>
explicitly as a property of the document

[22:58:03.0000] <Hixie>
sigh, probably makes sense to just hoist all this stuff up to a generic section

[22:58:04.0000] <Hixie>
and then invoke it from iframe creation and from navigation

[22:58:05.0000] <Hixie>
or something

[22:58:06.0000] <Hixie>
and maybe do your "freeze on document" thing at the same time

[22:58:07.0000] <Hixie>
for clarity

[22:58:08.0000] <abarth>
sorry to make work for you :(

[22:58:09.0000] <Hixie>
no worries

[22:59:00.0000] <Hixie>
tis my job

[22:59:01.0000] <Hixie>
can you file a bug or send mail about it? reference this irc log if you can

[22:59:02.0000] <abarth>
sure

[22:59:03.0000] <Hixie>
probably won't happen until early next year

[22:59:04.0000] <abarth>
yeah, there's no rush

[22:59:05.0000] <Hixie>
k

[22:59:06.0000] <abarth>
thanks

[23:02:00.0000] <Hixie>
my pleasure

[23:19:00.0000] <zewt>
ew, IVS characters are outside of the BMP, so if they were ever actually supported and used, they'd never work reliably in JS (since nobody pays attention to surrogate pairs)

[23:22:00.0000] <jamesr>
what's IVS?

[23:22:01.0000] <zewt>
combining characters for glyph variations in unicode

[23:22:02.0000] <zewt>
(an alternate approach to language tagging for the han unification problem)

[23:23:00.0000] <zewt>
never heard of it actually being used, though

[23:23:01.0000] <zewt>
(and it doesn't seem very practical, in general)

[23:24:00.0000] <jamesr>
/me wonders if non-BMP chars are something we'll ever address on the web

[23:25:00.0000] <jamesr>
and if the people cooking up unicode are aware of the issues

[23:25:01.0000] <Hixie>
the people cooking up unicode don't have much choice in the matter

[23:25:02.0000] <Hixie>
the BMP is close to full

[23:26:00.0000] <jamesr>
so they shouldn't wait for us, obviously, unicode solves problems for things other than the web

[23:27:00.0000] <jamesr>
but at some point we have to deal with this, or just say that there are types of content that you can't use 99% of the web platform and libraries for

[23:27:01.0000] <zewt>
a set of content that will grow to less trivial levels over time

[23:28:00.0000] <zcorpan>
have somebody extracted IDLs from specs and put them somewhere?

[23:28:01.0000] <Hixie>
dom's widl checker can extract idls from spec

[23:28:02.0000] <jamesr>
either the world ignores that content (unlikely and seems bad), we extend the platform, or platforms other than the web grow to deal with this content

[23:30:00.0000] <zewt>
platforms other than the web don't need to grow--they already deal with it (well, some of them)

[23:31:00.0000] <zewt>
so it'll become "everyone can display these characters except for the web" (or rather, "it'll display on the web but things will break randomly")

[23:31:01.0000] <zewt>
(we're not *that* far off; win32 is UTF-16 too and I'm sure lots of Windows software doesn't deal with it at all)

[23:55:00.0000] <zcorpan>
http://widl.webvm.net/ is .... unhelpful

[23:57:00.0000] <zcorpan>
/me gives up

[00:03:00.0000] <jgraham>
/me wonders what zcorpan is trying to do

[00:04:00.0000] <jgraham>
Also, it seems like we shipped the HTML5 parser in an actual final release build

[00:04:01.0000] <jgraham>
Take that site-compatibility bugs!

[00:06:00.0000] <Hixie>
no more weird text nodes with css?

[00:07:00.0000] <zcorpan>
jgraham: i just wanted to find examples of overloading to form an opinion on what the conversion behavior should be

[00:07:01.0000] <Hixie>
nn

[00:07:02.0000] <zcorpan>
jgraham: turned out to be simpler to search for "};"

[00:07:03.0000] <jgraham>
gn

[00:08:00.0000] <jgraham>
zcorpan: Ah :)

[00:08:01.0000] <zcorpan>
first example is options.add()

[00:21:00.0000] <jamesr>
hmm

[00:21:01.0000] <jamesr>
any opera peeps here? i'm looking at http://dev.opera.com/articles/view/efficient-javascript/?page=3#stylechanges and scratching my head

[00:23:00.0000] <jamesr>
it seems like either opera's doing things that are definitely invalid or there's some interaction here that escapes me. how could you have intermediate repaints in that example?

[00:26:00.0000] <jgraham>
jamesr: Haven'tlooked at the article (have to go), but we repaint on a timer during script execution. It is supposed to help on slow devices where script might take a long time

[00:26:01.0000] <jamesr>
so you paint while script is still running?

[00:26:02.0000] <jgraham>
If that's not what it's about, I will have to read the article

[00:26:03.0000] <jamesr>
yes that's what it's about

[00:26:04.0000] <jamesr>
or this section, anyway

[00:26:05.0000] <jamesr>
and you're OK with painting intermediate results?

[00:27:00.0000] <jgraham>
Well it depends who you ask :)

[00:27:01.0000] <jgraham>
There is a tradeoff

[00:28:00.0000] <zcorpan>
the article says "That approach could mean multiple reflows and repaints.". this is not the case (anymore, at least)

[00:28:01.0000] <zcorpan>
unless the script takes a very long time

[00:28:02.0000] <jamesr>
well, if opera decides to repaint after every .style assignment it will

[00:28:03.0000] <jgraham>
On desktop if your script is so long running that it will paint intermediate results in Opera it will block the UI thread in other browsers

[00:28:04.0000] <jgraham>
So it's not a good UX anywhere

[00:29:00.0000] <jamesr>
if the script is replacing a significant part of the UI with something different then it's much better to not show a half-built thing

[00:29:01.0000] <jamesr>
unless you're talking about hung script dialog sorts of delays

[00:29:02.0000] <jamesr>
there's also standards language around this behavior, although it is somewhat weak

[00:30:00.0000] <zcorpan>
right, we don't conform to the html spec

[00:30:01.0000] <jamesr>
anyway, if you feel that's the UX you want i'll try to keep it in mind when advising web devs on what to do (probably by telling them to ignore opera since there is no way for them to build a reasonable experience with that going on)

[00:31:00.0000] <zcorpan>
jamesr: i hope you don't advice web devs to block the UI thread :)

[00:32:00.0000] <jamesr>
well, i do advise them not to write any javascript to avoid doing that

[00:32:01.0000] <jamesr>
but sometimes they don't listen and write some script anyway

[00:33:00.0000] <jamesr>
and authors don't have much control over how much wall clock time their JS takes given GC pauses, thread preemption, and native code choices

[00:57:00.0000] <jgraham>
jamesr_: Code that takes hundreds of ms to run is bad any way you cut it

[01:13:00.0000] <oal>
Shouldn't the section tag be styled in any way? And are there other tags that should be treated the same way?

[01:15:00.0000] <jgraham>
Giving tags default styling often makes people unhappy

[01:19:00.0000] <oal>
jgraham: http://www.aniketpant.com/article/html5-semantics-and-good-coding-practices says "Not: The section element should not be used for styling. A div should be preferred." Why is that?

[01:21:00.0000] <zcorpan>
oal: same reason you shouldn't use <h1> if you want big text but don't mean heading

[01:22:00.0000] <zcorpan>
oal: <section> means section, not fancy box with rounded corners and drop shadow :)

[01:22:01.0000] <oal>
Yeah, but I mean, if you have a section, isn't it ok to set a width, color and background color for it? Or should there be an <article> or <div> inside with those set?

[01:23:00.0000] <zcorpan>
sure, it's fine to style sections

[01:24:00.0000] <zcorpan>
it's fine to style any element

[01:24:01.0000] <zcorpan>
it's not fine to use any element *for styling*

[01:26:00.0000] <jgraham>
Right. That sentence is a bit misleading. It means you shouldn't use <section> if the only reason you need an element is as a wrapper to hook some styling on. You should only use <section> if you are actually marking up a section of content. But if you are using <section> correctly, it is fine to apply any style you like to it

[01:26:01.0000] <jgraham>
If you just need a styling hook, use a <div> element instead

[01:27:00.0000] <oal>
That makes sense. Thanks jgraham and zcorpan :-)

[02:30:00.0000] <annevk>
heycam|away: did you add the warning to const?

[03:25:00.0000] <annevk>
geez HTTP WG is taking its time

[03:25:01.0000] <annevk>
and forgetting about my issues after saying they'll handle it

[03:52:00.0000] <annevk>
Hixie: in r6843 you updated WebVTT but http://dev.w3.org/html5/webvtt/ is not updated

[06:12:00.0000] <annevk>
Live WebVTT Validator should match the specification again

[06:12:01.0000] <annevk>
https://bitbucket.org/annevk/webvtt

[06:12:02.0000] <annevk>
http://quuz.org/webvtt/

[06:13:00.0000] <annevk>
hsivonen: is it an idea to host an instance on webvtt.validator.nu?

[06:37:00.0000] <DrewBarfield>
Hello everyone! I'm interested in writing demos for the WHATWG site (HTML living standard) and need suggestions. What kinds of demos would you like to see?

[06:38:00.0000] <annevk>
DrewBarfield: did you look at http://www.whatwg.org/demos/ ?

[06:39:00.0000] <annevk>
DrewBarfield: it can basically be anything that's defined in the HTML standard

[06:41:00.0000] <DrewBarfield>
Are there topics that are lacking demos or could use them more than others? If not, I can just iterate over the topics at http://www.whatwg.org/specs/web-apps/current-work/multipage/

[06:43:00.0000] <jgraham>
I don't recall seeing any EventSource demos

[06:43:01.0000] <annevk>
DrewBarfield: I think currently we lack demos for most things, but there are other sites that have created demos too, such as http://html5demos.com/

[06:44:00.0000] <annevk>
DrewBarfield: basically though, everything is welcome; start with what you know best I'd say :)

[06:44:01.0000] <jgraham>
Yes

[06:46:00.0000] <annevk>
DrewBarfield: Hixie can probably help set you up, but depending on your timezone you might have to email him

[06:47:00.0000] <DrewBarfield>
Thank you all. I think I will start with the Communication chapter and work my way out from there.

[06:47:01.0000] <DrewBarfield>
I have emailed Ian and he suggested that I ask everyone here for suggestions.

[06:47:02.0000] <annevk>
ah okay, cool

[07:27:00.0000] <Wilto>
I heard someone in this joint was using the phrase “responsive images,” which summons me like saying “Beetlejuice” three times.

[07:30:00.0000] <Wilto>
Hm, maybe not. You’ve broken my heart once again, miketaylr.

[07:30:01.0000] <miketaylr>
</3

[07:43:00.0000] <JonathanNeal>
Goodmorning!

[09:44:00.0000] <JonathanNeal>
howdy

[10:00:00.0000] <Wilto>
How goes, JonathanNeal?

[10:01:00.0000] <JonathanNeal>
I'm looking to update https://github.com/jonathantneal/html5css Wilto. It's been almost a year!

[10:02:00.0000] <JonathanNeal>
It's a css document of the presentation guidelines from the html5 spec.

[10:03:00.0000] <JonathanNeal>
basically it's the user agent style sheet the spec recommends.

[10:04:00.0000] <Wilto>
Huh, interesting.

[10:09:00.0000] <JonathanNeal>
I think so. I think it's important to maintain a document like this.

[11:11:00.0000] <zewt>
in principle, it's possible for a busy-looping task queue to starve out all events in other task queues, right?

[11:12:00.0000] <zewt>
since the event loop doesn't require any kind of fairness across queues

[11:13:00.0000] <jamesr_>
zewt, it's organized by task source

[11:13:01.0000] <jamesr_>
a UA can schedule from any task source

[11:13:02.0000] <zewt>
right, but if one queue is busy looping, there's no requirement that other task queues are able to run

[11:13:03.0000] <dglazkov>
good morning, Whatwg!

[11:13:04.0000] <jamesr_>
no, i think that'd fall into QoI

[11:14:00.0000] <zewt>
right

[11:14:01.0000] <zewt>
was wondering, since it seems like a wrong assumption that https://dvcs.w3.org/hg/webperf/raw-file/tip/specs/setImmediate/Overview.html is making

[11:14:02.0000] <zewt>
(if you use this, in principle things like MessageChannels might get starved out)

[11:14:03.0000] <jamesr_>
oh, hah

[11:15:00.0000] <jamesr_>
yeah that spec is full of poo-brain

[11:15:01.0000] <zewt>
(though I suspect there are deeper issues with the UI being able to run)

[11:15:02.0000] <zewt>
i suppose that's a more blunt way of putting it :P

[11:15:03.0000] <jamesr_>
i don't think anyone will implement it

[11:15:04.0000] <zewt>
given that you can do that with just MessageChannel already, there's really no need (re: https://www.w3.org/Bugs/Public/show_bug.cgi?id=15007)

[11:15:05.0000] <jamesr_>
(i mean i think IE did in a PP)

[11:16:00.0000] <jamesr_>
right, we told them that

[11:16:01.0000] <zewt>
also although being able to queue a task without setTimeout's delays is nice, I don't like the basic premise of how that's written (as if it's meant to be used to allow CPU-intensive work in the UI thread--ugh no)

[11:28:00.0000] <jamesr_>
the only reason we clamp setTimeout is because pages are dumb and flood it

[11:28:01.0000] <jamesr_>
if authors weren't abusive, we wouldn't need any clamp

[11:30:00.0000] <Ms2ger>
And there's only clamping inside nested setTimeouts, so you can queue a task without delays already

[11:35:00.0000] <jamesr_>
also if you're doing non-trivial work you can avoid the clamp by calling setTimeout() before the work rather than at the end

[11:42:00.0000] <catphive>
does anyone know if there are any planned standards for browser based presence?

[11:43:00.0000] <tantek_>
which meaning of "presence"?

[11:43:01.0000] <catphive>
like for an IM client

[11:43:02.0000] <catphive>
detecting if the user is available

[11:48:00.0000] <tantek>
catphive - sounds like a useful WebAPI

[11:56:00.0000] <martndemus>
doesnt chrome have something that keeps track if the actual tab the app is in is active?

[12:03:00.0000] <bencc>
in websocket who should send pings to keep the connection alive, the client or the server?

[12:03:01.0000] <bencc>
or maybe the browser does this automatically for me?

[12:21:00.0000] <jgraham>
bencc: The browser should send the ping frames AIUI

[12:22:00.0000] <jgraham>
Bu I haven't read the spec text there closely so I don't know if there are any hard requirements

[12:22:01.0000] <bencc>
AIUI?

[12:23:00.0000] <jgraham>
"As I Understand It"

[12:23:01.0000] <jgraham>
Nope, jut meaningless gloop

[12:23:02.0000] <bencc>
jgraham: so when I'm creating a websocket in FF or Chrome, the application shouldn't worry about it?

[12:23:03.0000] <jgraham>
Well the spec says

[12:23:04.0000] <jgraham>
"An endpoint MAY send a Ping frame any time after the connection is established and before the connection is closed.  NOTE: A ping frame may serve either as a keepalive, or to verify that the remote endpoint is still responsive.

[12:23:05.0000] <bencc>
and also the server shouldn't worry about it?

[12:23:06.0000] <jgraham>
"

[12:24:00.0000] <jgraham>
Well the server is required to respond to a ping frame with a pong frame

[12:24:01.0000] <bencc>
I don't see ping function in the websocket object

[12:24:02.0000] <annevk>
oh lol

[12:24:03.0000] <jgraham>
Sure, it isn't API exposed

[12:24:04.0000] <annevk>
did they just propose the <intent> tag using DTD syntax

[12:24:05.0000] <Hixie>
the browser will take care of ping from the client if it's needed

[12:24:06.0000] <jgraham>
The browser is supposed to do it

[12:24:07.0000] <Hixie>
the server should take care of ping from the server if the server needs it

[12:24:08.0000] <annevk>
that's pretty funny considering it's 2011

[12:24:09.0000] <jgraham>
But it's conforming to never send one

[12:24:10.0000] <jgraham>
So it's a QoI issue

[12:25:00.0000] <jgraham>
One hopes there will not be any braindead implementations

[12:25:01.0000] <Hixie>
in some situations, sending pings is actually really bad

[12:25:02.0000] <jgraham>
But that is not a safe assumption

[12:25:03.0000] <Hixie>
e.g. if you have a flaky network connection, every ping is a chance of the connection dropping

[12:25:04.0000] <Hixie>
whereas if you just didnt' send anything it might survive fine

[12:25:05.0000] <Hixie>
e.g. sometimes at home i'm on wifi and the neighbours turn their microwave on and the wifi goes down for 3 minutes

[12:25:06.0000] <jgraham>
If you have a really flaky connection you are probably screwed anyway

[12:26:00.0000] <Hixie>
if i notice this happen, i can just stop using the network, and all the apps i use that don't do keepalive survive with no probelms whatsoever

[12:26:01.0000] <Hixie>
but the apps that think they're clever and do keepalive all die

[12:26:02.0000] <bencc>
but sending a ping is the only way the server can check if the client is alive, isn't it?

[12:26:03.0000] <jgraham>
I mean I don't imagine that web authors are going to design with your neighbourgh's microwave in mind

[12:26:04.0000] <Hixie>
jgraham: it's just an example, the problem is far worse e.g. on mobile

[12:26:05.0000] <bencc>
in a chat, you want users to know if someone is offline

[12:27:00.0000] <Hixie>
jgraham: where you might be going past a big building that blocks the signal, or whatever

[12:27:01.0000] <bencc>
without pings, you can have zombie sessions

[12:27:02.0000] <jgraham>
Right, I understand that the connection can be flaky. But authors are going to assume that it isn't

[12:27:03.0000] <jgraham>
So it's not at all clear that pings make it worse

[12:28:00.0000] <bencc>
in the server the logic is a bit tricky

[12:28:01.0000] <Hixie>
well it seems clear that in the two examples i gave, pings are worse than no pings

[12:28:02.0000] <Hixie>
but i agree that there are use cases for pings

[12:29:00.0000] <bencc>
Let's that if the client is idle for 1 mintue, I'm sending a ping

[12:29:01.0000] <Hixie>
i'm just saying it's not a given that sending a ping is better than not sending one

[12:29:02.0000] <bencc>
now, the first response might not be the pong but a new message

[12:29:03.0000] <jgraham>
In any case the protocol-level pings are not something that the author can control

[12:29:04.0000] <jgraham>
But you can always build something identical into your application

[12:29:05.0000] <bencc>
the server author should implement it

[12:30:00.0000] <jgraham>
If you need it for some reason

[12:30:01.0000] <bencc>
I want to know if the user is offline in a 1 minute window

[12:30:02.0000] <bencc>
for a chat app

[12:30:03.0000] <Hixie>
define "offline"

[12:30:04.0000] <bencc>
dead

[12:30:05.0000] <bencc>
wolfs eating his body

[12:30:06.0000] <Hixie>
am i offline if i happen to be in the middle of a conversation but the car i'm in goes through a tunnel for 61 seconds?

[12:30:07.0000] <bencc>
eagles are circling in the skies

[12:31:00.0000] <bencc>
if that's the case, increase the window to 3 minutes

[12:31:01.0000] <Hixie>
am i offline if i happen to be in the middle of a conversation but the car i'm in goes through a tunnel for 181 seconds?

[12:31:02.0000] <bencc>
are you familiar with tunnels that long?

[12:31:03.0000] <bencc>
yes

[12:31:04.0000] <Hixie>
yes

[12:32:00.0000] <bencc>
am I offline if I'm dead and suddenly a miracle happened and I'm alive again?

[12:32:01.0000] <Hixie>
are you offline if you're dead at all?

[12:32:02.0000] <bencc>
good question

[12:33:00.0000] <bencc>
so it's 1 minute for 99.99% of the people

[12:33:01.0000] <bencc>
and 3 minutes for you because of the washing machine and your long tunnel

[12:34:00.0000] <annevk>
why would you use ping for that at all...

[12:35:00.0000] <bencc>
now I need to handle users without a computer...

[12:35:01.0000] <annevk>
if the other person doesn't say anything, clearly he's away

[12:35:02.0000] <annevk>
doesn't really matter what the reason is

[12:35:03.0000] <bencc>
in IM you can be online but quiet

[12:36:00.0000] <annevk>
you can also be offline but still appear online

[12:36:01.0000] <annevk>
Gmail seems to work that way

[12:36:02.0000] <annevk>
Gmail chat that is

[12:37:00.0000] <annevk>
doesn't really matter

[12:37:01.0000] <bencc>
in Gmail you suppose to appear online only if you are logged in

[12:37:02.0000] <bencc>
if you see someone is online and send him a message he is supposed to see the message right away

[12:46:00.0000] <jgraham>
bencc: That is such a bad assumption. e.g. my connection here is maintained all the time. Sometimes I am asleep or not at a computer

[12:46:01.0000] <Hixie>
same here

[12:47:00.0000] <Hixie>
same with all my IM clients actually. I proxy them all through a computer that is always online, regardless of where I am, and I connect to that proxy remotely when I'm really online, to collect my messages.

[12:47:01.0000] <bencc>
that's a question of user experience

[12:48:00.0000] <jgraham>
annevk: Yeah, presenting stuff with a DTD in 2011 is very funny

[12:48:01.0000] <jgraham>
It's like the last 10 years didn't happen

[12:48:02.0000] <bencc>
you might turn the user to 'busy' if he is not using the UI for 10 mintues

[12:48:03.0000] <jgraham>
/me just finds the busy/away/etc stuff confusing

[12:49:00.0000] <Hixie>
my /away status rarely has any bearing on my actual status

[12:49:01.0000] <bencc>
that's a question of user experience

[12:49:02.0000] <bencc>
you are still "online"

[12:49:03.0000] <jgraham>
I never know if the person is really busy or if they are really around but the computer decided that they were budy for some reason

[12:49:04.0000] <bencc>
gmail chat works perfect for me

[12:49:05.0000] <bencc>
when I see a friend online he is available to chat with me

[12:56:00.0000] <Hixie>
does anyone actually implement nested workers and message channels yet?

[12:56:01.0000] <annevk>
you mean shared workers?

[12:56:02.0000] <annevk>
Opera and WebKit I believe

[12:56:03.0000] <Hixie>
no, not shared workers

[12:57:00.0000] <Hixie>
the Worker() and MessageChannel() constructors, in a worker

[12:59:00.0000] <Hixie>
looks like firefox doesn't implement MessageChannel

[13:01:00.0000] <Hixie>
opera throws an INVALID_STATE_ERR exception from postMessage(), which is impossible per spec as far as i can tell

[13:01:01.0000] <Hixie>
webkit doesn't support Worker() inside workers

[13:05:00.0000] <tantek_>
Hixie - what would that be, the middle management feature?

[13:05:01.0000] <Hixie>
-_-

[13:05:02.0000] <tantek_>
or would you need more than one level of hierarchy for that

[13:06:00.0000] <Hixie>
more like the subcontractor feature, if we're going to go with this metaphor

[13:06:01.0000] <Hixie>
anyone actually got IE10 around?

[13:06:02.0000] <tantek_>
subcontractor would mean cross-origin though

[13:07:00.0000] <zewt>
bencc: sounds like false negatives; gmail knows the user is around if he's moving the mouse around a gmail tab, but if the user isn't using gmail it has no idea whether the user is there or not

[13:08:00.0000] <zewt>
eg. if it says the user is there he probably is, but if it says he isn't, it doesn't actually know at all

[13:08:01.0000] <tantek_>
so presence is tab-specific? that seems to make sense

[13:08:02.0000] <tantek_>
as, in you'd want to know if the user is present in the page's context, not just on the machine somewhere

[13:08:03.0000] <zewt>
i'm just talking about gmail in browsers; certainly it should not be able to tell whether i'm active in another tab (privacy)

[13:08:04.0000] <jgraham>
tantek_: It means that G+ tells me that annevk is away when he is talking here

[13:09:00.0000] <tantek_>
I suppose both could be useful

[13:09:01.0000] <tantek_>
is the user active on the machine

[13:09:02.0000] <tantek_>
is the user active on this page

[13:09:03.0000] <annevk>
I'd rather not reveal any of that

[13:09:04.0000] <annevk>
as a user

[13:09:05.0000] <jgraham>
Me too, but it isn't really possible to stop

[13:10:00.0000] <zewt>
how so?

[13:10:01.0000] <tantek_>
annevk - that's why it makes sense as a WebAPI - it's a permissions like thing similar to Geo etc

[13:10:02.0000] <jgraham>
zewt: Well the "on this machine" thing is since that doesn't work at all at present

[13:10:03.0000] <jgraham>
but the "on this page" isn't

[13:11:00.0000] <zewt>
i don't care if pages know i'm using the page, but they shouldn't be able to tell that I'm active otherwise (without extra permission)

[13:11:01.0000] <jgraham>
Or "on any page that has the same user identifier"

[13:11:02.0000] <jgraham>
(so facebook could know that you are active on any site that uses facebook login for example)

[13:12:00.0000] <zewt>
i was just responding to above <bencc> gmail chat works perfect for me

[13:12:01.0000] <zewt>
his "perfect" seemed to be flawed

[13:12:02.0000] <jgraham>
Yeah, I agree. It's not possible to make it perfect

[13:13:00.0000] <zewt>
i mean, his evaluation of "perfect"

[13:13:01.0000] <jgraham>
"do I want to chat right now" isn't realy something that you can infer automatically

[13:13:02.0000] <zewt>
<bencc> when I see a friend online he is available to chat with me

[13:13:03.0000] <annevk>
jgraham: fwiw, I'm permanently marked "Away", but usually when the music track changes I'm actually there :)

[13:13:04.0000] <zewt>
my point was that the reverse is not going to be true--people are available to chat, even though gmail says they're not (i expect)

[13:13:05.0000] <jgraham>
annevk: It's OK I never intend to contact you through google plus. And don't really have that much interest in stalking you

[13:14:00.0000] <jgraham>
Although people do think you're a girl so maybe you will get stalkers

[13:14:01.0000] <jgraham>
s/plus/chat/

[13:15:00.0000] <annevk>
only girls get stalkers?

[13:15:01.0000] <zewt>
not exclusively, but i expect there's a great bias in that direction

[13:15:02.0000] <annevk>
anyway, not going to add anyone to Google Chat I don't like :)

[13:16:00.0000] <zewt>
at least in technical corners of the internet, with the usual gender ratios :P

[13:17:00.0000] <jgraham>
In the technical corners of the internet p(man|called anne) > p(woman|called anne)

[13:17:01.0000] <jgraham>
:(

[13:17:02.0000] <jgraham>
(note: this is almost certianly not true)

[13:17:03.0000] <zewt>
yeah, it says something that i just assumed from the start that anne was probably a guy

[13:19:00.0000] <zewt>
i couldn't quite make that leap with Silvia, though

[13:20:00.0000] <wilhelm>
How do Safari / WebKit version numbers work? What does 534.51.22, 7534.48.3 or 6533.18.5 correspond to? (Those numbers are from UA strings.)

[13:20:01.0000] <zewt>
magic

[13:21:00.0000] <zewt>
am I the only person in the world that Firefox save dialogs ignore? heh

[13:21:01.0000] <zewt>
for years, over endless versions of FF and different versions of Windows, i've had to hit alt-s 2-3 times to get the save dialog to go

[13:23:00.0000] <sicking>
annevk: ping

[13:23:01.0000] <annevk>
hey sicking

[13:23:02.0000] <sicking>
annevk: I'm really interested to hear your take on supporting non UTF8 encoded HTML documents in XHR

[13:24:00.0000] <annevk>
I actually think that maybe we should limit that to UTF-8 too

[13:24:01.0000] <sicking>
annevk: HUH?!?

[13:25:00.0000] <sicking>
annevk: that excludes some 50% of the worlds HTML

[13:25:01.0000] <zewt>
annevk: I'm really interested to hear your take on supporting non UTF8 encoded HTML documents in XHR, as long as you agree with me

[13:25:02.0000] <sicking>
zewt: no, i was very intersted in hearing dissenting opinions too. That doesn't mean i agree with them

[13:25:03.0000] <zewt>
i know :P

[13:26:00.0000] <zewt>
sicking: what about only supporting validly-tagged HTML documents, rejecting the fuzzy parts (heuristics and locale-specific defaults)? that's where the *real* evil is

[13:26:01.0000] <sicking>
annevk: have you talked to anyone in CJK countries about this?

[13:26:02.0000] <annevk>
sicking: not sure existing documents will be the primary use case, but I'm happy with what hsivonen implemented

[13:26:03.0000] <sicking>
annevk: have you talked to anyone in CJK countries about this?

[13:27:00.0000] <sicking>
annevk: and why do you think new content is the primary use case?

[13:27:01.0000] <zewt>
people in cjk countries (especially japan) seem to live under serious misunderstandings of utf-8 (not that saying that changes it)

[13:27:02.0000] <annevk>
sicking: I haven't, though I did suggest pinging myakura last time you brought this up

[13:28:00.0000] <sicking>
annevk: sigh, ok

[13:28:01.0000] <annevk>
sicking: I'm not really worried about shipping a more restrictive feature and then have people complain and we adapt

[13:28:02.0000] <annevk>
sicking: I'm more worried about getting in the same mess we got in with CORS

[13:28:03.0000] <sicking>
annevk: we get basically no feedback from that part of the world. I wouldn't take a lack of complaint to mean anything

[13:28:04.0000] <annevk>
where we have something very complex that's hard to use for people

[13:28:05.0000] <annevk>
sicking: this feature is not really deployed

[13:28:06.0000] <sicking>
annevk: yeah, the fact that it's header based is a bigger problem than I had thought

[13:29:00.0000] <annevk>
sicking: when I'm next in Tokyo I'll ask

[13:29:01.0000] <sicking>
annevk: the deployment cycle is probably at least a year or two for something like this. Waiting for deployment before we see what the use cases are will create a 4 year cycle

[13:30:00.0000] <sicking>
annevk: i'll email some of our mozilla-japan people and cc you

[13:30:01.0000] <annevk>
just let them email public-webapps

[13:30:02.0000] <annevk>
that seems better

[13:31:00.0000] <zewt>
annevk: i don't think it needs to be complex; take "determining the character encoding" and throw away the last three steps (replace with utf-8)

[13:31:01.0000] <annevk>
the use case to me is primarily that it's easy to get a DOM out of some HTML on the server

[13:31:02.0000] <zewt>
(or rather, any new complexity)

[13:31:03.0000] <sicking>
annevk: we're still really bad at getting the community to speak up on that list

[13:31:04.0000] <sicking>
annevk: and that's the english speaking community

[13:31:05.0000] <annevk>
that you have to maybe fix that HTML first is not really a big concern to me, things need to adapt over time to meet new requirements

[13:32:00.0000] <sicking>
annevk: i didn't understand that

[13:32:01.0000] <annevk>
sicking: myakura chairs a Japenese interest group and is involved in the Japenese HTML5 user group (or some such) with over 2000 developers involved

[13:35:00.0000] <sicking>
annevk: is this myakura.web⊙gc?

[13:36:00.0000] <sicking>
annevk: i see very little feedback from him

[13:36:01.0000] <sicking>
annevk: which either means that the user group is happy with everything we do, or that the communication channel isn't working that great yet

[13:38:00.0000] <annevk>
I very much doubt this is a big problem; if you run the kind of site that uses XMLHttpRequest you will very soon run into encodings and adapt appropriately

[13:39:00.0000] <annevk>
e.g. most things transmitted towards the server will be in UTF-8

[13:39:01.0000] <zewt>
a lot of people in japan don't "like" utf-8 and use sjis on purpose

[13:39:02.0000] <sicking>
annevk: if you're submitting stuff yeah

[13:40:00.0000] <annevk>
if you're reading with responseText too

[13:40:01.0000] <annevk>
it's fairly limited what responseText does

[13:40:02.0000] <annevk>
(more broad than I'd like, but still limited)

[13:43:00.0000] <annevk>
zewt: not really sure that's still the case

[13:44:00.0000] <jgraham>
I heard it was still the case recently, but I don't think I have data

[13:44:01.0000] <zewt>
hard to gather real data on, it's a social/perception thing

[13:44:02.0000] <annevk>
anyway, using shift_jis is not really problematic

[13:47:00.0000] <zewt>
(... as long as it's declared correctly)

[13:47:01.0000] <annevk>
the only problem with shift_jis is that we haven't really defined all its details

[13:48:00.0000] <annevk>
IE that "shift_jis" actually maps to Microsoft Code Page 932 with error handling that is probably not even defined in that Code Page

[13:48:01.0000] <annevk>
s/IE/i.e./

[13:50:00.0000] <zewt>
trying to fully specify the legacy encodings doesn't exactly seem worth it

[13:51:00.0000] <annevk>
every now and then we still hit compat issues and it makes it harder for people writing software that interprets legacy content

[13:51:01.0000] <annevk>
seems totally worth it

[13:52:00.0000] <annevk>
it's a bit of work, but a lot can be automated

[13:52:01.0000] <zewt>
seems like another lever to get more people to stop perpetuating legacy encodings :P

[13:53:00.0000] <zewt>
at least most encodings are simpler and tiny compared to the CJK ones

[13:53:01.0000] <annevk>
I did a bunch of work on the 8bit encodings already http://annevankesteren.nl/2010/8-bit-labels

[13:54:00.0000] <annevk>
just need to make some decisions on who is right, and update everything for today's implementations

[13:54:01.0000] <annevk>
Opera and Gecko made a few changes

[14:05:00.0000] <sicking>
annevk: by the way, we can totally "fix" CORS though

[14:06:00.0000] <sicking>
annevk: adding back the in-document access indicator that we used to have for XML would do the trick

[14:06:01.0000] <sicking>
annevk: but not for XML of course

[14:07:00.0000] <sicking>
annevk: adding a in-line for JSON would be huge

[14:07:01.0000] <zewt>
but images :(

[14:07:02.0000] <sicking>
s/in-line/in-line access descriptor/

[14:07:03.0000] <sicking>
zewt: i don't see how you could do those without using headers

[14:07:04.0000] <zewt>
(not *personally* worried; I'd never willingly work in an environment where I can't set headers)

[14:08:00.0000] <jgraham>
Hmm, how would one add it to JSON?

[14:08:01.0000] <zewt>
though I guess that's not enough, since what matters is whether the service I'm using can set it, not what I can do :(

[14:08:02.0000] <jgraham>
/me might be misunderstanding

[14:09:00.0000] <zewt>
you could add it in a non-conforming-to-JSON way with a Javascript header, though that'd be evil

[14:09:01.0000] <annevk>
sicking: your definition of fixing it is adding yet more bloat; I'm intrigued :)

[14:09:02.0000] <sicking>
annevk: i think we would have needed the headers no matter what

[14:10:00.0000] <sicking>
annevk: features != bloat

[14:10:01.0000] <sicking>
annevk: unused features == bloat

[14:10:02.0000] <sicking>
or "unneeded" more accurately

[14:12:00.0000] <zewt>
wonder if there are security implications to inline declarations (eg. upload file to github or a pastebin or something, use the "raw text" link to serve remote files with the access grant inline)

[14:13:00.0000] <tantek>
Hixie, per our discussion a few days ago on permit space instead of "T" in the date-and-time microsyntax, where you said "tantek: if we can collect evidence e.g. showing that there are common parsers that support a nicer format, i'm certainly all for it, fwiw" - I've now collected that evidence and think we have enough to go on.

[14:13:01.0000] <tantek>
http://wiki.whatwg.org/wiki/Time_element#permit_space_instead_of_T_in_datetimes

[14:14:00.0000] <tantek>
cc: TabAtkins, mkanat, kennyluck

[14:15:00.0000] <zewt>
tantek: fyi, i think i was mistaken about IE8 (may have mixed up my browser windows or something)

[14:15:01.0000] <tantek>
zewt - noted in the research :)

[14:15:02.0000] <zewt>
so you may as well remove the reference :)

[14:16:00.0000] <tantek>
well it helps to say if it supports it or not one way or the other

[14:16:01.0000] <tantek>
do you have it in front of you?

[14:16:02.0000] <tantek>
can you check:

[14:16:03.0000] <tantek>
data:text/html,<!doctype html><script>alert(Date.parse("2011-11-11 11:11:11"))</script>

[14:16:04.0000] <zewt>
pretty sure the second half of that sentence is the correct one (its own toString format)

[14:16:05.0000] <tantek>
if we can say for sure it returns NaN - that's another useful data point

[14:16:06.0000] <zewt>
ie8 != data:

[14:16:07.0000] <tantek>
ah thanks

[14:17:00.0000] <zewt>
and yes, returns NaN

[14:17:01.0000] <zewt>
returns NaN for "2011-11-11T11:11:11" as well--useful to include both (if an implementation doesn't support *T*, it doesn't matter if it doesn't support * * either)

[14:19:00.0000] <tantek>
oh that's interesting, yes.

[14:19:01.0000] <tantek>
I wonder if that's the same for IE9 and IE10 also

[14:20:00.0000] <zewt>
"it does help readability, incrementally" i think it's at least marginally stronger than that; it's a natural, human format, where *T* really isn't

[14:20:01.0000] <zewt>
fwiw, anyway

[14:23:00.0000] <heycam>
annevk, I did not add a warning about const, but I am happy to. wording suggestions welcome.

[14:25:00.0000] <annevk>
heycam: I added something in the bug

[14:25:01.0000] <heycam>
thanks

[14:25:02.0000] <annevk>
heycam: preferably .warning has a red border and such :)

[14:25:03.0000] <heycam>
that's perhaps a good idea

[14:25:04.0000] <zewt>
tantek, fyi postgresql also accepts that format, and its commandline omits T by default as well (2011-12-06 15:27:00.706385-07)

[14:26:00.0000] <zewt>
(minor data point)

[14:30:00.0000] <Hixie>
tantek: k, i'll update the proposal in the spec

[14:54:00.0000] <Hixie>
tantek: ok, i'll commit the patch to the whatwg copy; can you let the htmlwg know of it?

[14:58:00.0000] <Hixie>
tantek: it's checked in

[14:59:00.0000] <tantek>
thanks much!

[15:00:00.0000] <Hixie>
diff url is http://html5.org/r/6845

[15:01:00.0000] <Hixie>
heycam: yt?

[15:02:00.0000] <heycam>
Hixie, hi

[15:02:01.0000] <Hixie>
heycam: so people don't like that DedicatedWorkerGlobalScope and SharedWorkerGlobalScope both seem to be WorkerGlobalScopes

[15:03:00.0000] <Hixie>
heycam: so i'm changing the spec so that dedicated workers have a global scope that's a DedicatedWorkerGlobalScope, and similarly for shared workers

[15:03:01.0000] <heycam>
let me open the spec and remind myself how they're currently specced

[15:03:02.0000] <Hixie>
heycam: but it'd be nice if i could hide that they really inherit from WorkerGlobalScope

[15:03:03.0000] <Hixie>
heycam: so my question is, is there some way i can have an inheritance hierarchy in the spec but flatten it in implementations?

[15:04:00.0000] <Hixie>
heycam: so that the result is the same as if i had specced it with some copy-and-paste

[15:04:01.0000] <heycam>
is that not what you were intending to use the [Supplemental] in the spec currently for?

[15:04:02.0000] <heycam>
and can you clarify what you mean about people not liking that they "both seem to be WorkerGlobalScopes"?

[15:04:03.0000] <Hixie>
the current spec text is trying to get the flattening but with the name of hte interface being the ancestor interface

[15:05:00.0000] <Hixie>
whereas i now want to flatten them so that the interfaces have their derived names

[15:05:01.0000] <Hixie>
and the ancestor name is a spec detail

[15:05:02.0000] <Hixie>
so you can't tell in the prototype chain that the global scope is defined as two interfaces

[15:06:00.0000] <heycam>
I feel like this has come up before and I've wondered why it is important not to be able to observe the inheritance

[15:06:01.0000] <Hixie>
the reasoning here being that there's no point splitting the interface in two, since a script in a worker can only ever get one instance of this interface anyway, so why waste the author's time having the author remember which interface they have to poke to override something

[15:07:00.0000] <Hixie>
it looks silly to have a singleton defined by a hierarchy of unique interface prototype objects

[15:07:01.0000] <heycam>
ok, i can see that

[15:07:02.0000] <annevk>
Hixie: use implements + NoInterfaceObject

[15:07:03.0000] <heycam>
yes just what I was going to say

[15:07:04.0000] <Hixie>
aha, that works, cool

[15:08:00.0000] <heycam>
but in more words :)

[15:08:01.0000] <Hixie>
and don't inherit

[15:08:02.0000] <Hixie>
ok

[15:08:03.0000] <annevk>
nn

[15:08:04.0000] <heycam>
bb

[15:08:05.0000] <Hixie>
nn

[15:08:06.0000] <ap_>
Hixie: is <li value="-1"> actually supposed to work now?

[15:09:00.0000] <heycam>
/me wonders if that is the final instance of [Supplemental] which will now be disappearing

[15:09:01.0000] <Hixie>
heycam: i believe so, it's why i'm poking at this. will let you know.

[15:09:02.0000] <ap_>
as in, the browser will display "-1."

[15:09:03.0000] <heycam>
cool cool

[15:09:04.0000] <Hixie>
ap_: yes

[15:10:00.0000] <heycam>
so before when you said "so people don't …" you actually meant "you don't like" ;)

[15:10:01.0000] <Hixie>
heycam: not just you, but any means

[15:10:02.0000] <heycam>
k

[15:10:03.0000] <ap_>
Hixie: do you happen to know if there are any list-style-type that cannot express negative numbers in print, or use something other than a "-"?

[15:10:04.0000] <Hixie>
heycam: the actual e-mail i had in my pile to remind me of this was from sicking

[15:11:00.0000] <Hixie>
ap_: lots don't have negative numbers (e.g. roman, alphabetic), no idea if any don't use -

[15:11:01.0000] <Hixie>
TabAtkins: ping ^

[15:11:02.0000] <Hixie>
ap_: (those that don't support the range defer to decimal for unsupported numbers)

[15:12:00.0000] <ap_>
Hixie: thanks. where is the "defer to decimal" part specced?

[15:12:01.0000] <heycam>
single, busy mailing lists better than multiple, quieter ones: http://grep.codeconsult.ch/2011/12/06/stefanos-mazzocchis-busy-list-pattern/

[15:12:02.0000] <zewt>
heycam: a fact that's been basic knowledge for years :P

[15:12:03.0000] <Hixie>
ap_: looks like css3 lists supports the negative punctuation being explicitly set for a counter, e.g. to use parentheses: http://www.w3.org/TR/css3-lists/#descdef-negative

[15:13:00.0000] <Hixie>
ap_: looks like there's a whole descriptor thing for lists, and fallback is specified by http://www.w3.org/TR/css3-lists/#descdef-fallback

[15:13:01.0000] <heycam>
zewt, I should probably merge some mail folders and not just have a single folder per list, now that I have to vertically scroll in thunderbird to see them all...

[15:13:02.0000] <Hixie>
no idea what the non-TR/ link is for this, i don't see a link at the top

[15:14:00.0000] <zewt>
heycam: it's really lame that gmail's label grouping doesn't let you view the group and see all of the sub-labels

[15:14:01.0000] <heycam>
oh, that does sound a bit lame

[15:14:02.0000] <heycam>
still, "all email clients suck"

[15:14:03.0000] <zewt>
it does nothing but gruop them visually in the label list ( = who cares)

[15:15:00.0000] <ap_>
Hixie: thanks

[15:16:00.0000] <zewt>
also group

[15:23:00.0000] <Hixie>
heycam: i have this paragraph for the three interfaces that define the interface of global scope objects:

[15:23:01.0000] <Hixie>
  <p>The <code>DedicatedWorkerGlobalScope</code> interface must not

[15:23:02.0000] <Hixie>
  exist if the interface's <span>relevant namespace object</span> is

[15:23:03.0000] <Hixie>
  not a <code>DedicatedWorkerGlobalScope</code> object. <a

[15:23:04.0000] <Hixie>
  href="#refsWEBIDL">[WEBIDL]</a></p>

[15:23:05.0000] <Hixie>
heycam: does it make sense to ahve an attribute for that? [GlobalScopeInterface] or something?

[15:25:00.0000] <heycam>
good question, I am not sure just yet what's the best way of describing this

[15:25:01.0000] <Hixie>
k. i'll leave it with that paragraph for now.

[15:26:00.0000] <heycam>
ok. "relevant namespace object" as a term will likely disappear soon, since we're going to drop modules from Web IDL.

[15:26:01.0000] <heycam>
I'll have a think about whether it makes sense to talk about globals in the spec

[15:29:00.0000] <Hixie>
heycam: ah ok. let me know if/when you do that so i can update this accordingly (or i can update it now if you have any idea what it should say instead?)

[15:29:01.0000] <heycam>
Hixie, leave it for now and I'll let you know how to update it once I've figured it out :)

[15:29:02.0000] <Hixie>
maybe "the ThisBinding of the global execution context" or something

[15:30:00.0000] <Hixie>
(that's the terminology we use to talk about WindowProxy's effects)

[15:45:00.0000] <tantek>
zewt - I added your additional opinion and data point to the proposal

[15:46:00.0000] <tantek>
Hixie - status updated in the proposal to reflect its inclusion in the spec. http://wiki.whatwg.org/wiki/Time_element#permit_space_instead_of_T_in_datetimes

[15:46:01.0000] <tantek>
one bit of consensus at a time. I'll follow-up on public-html.

[15:47:00.0000] <Hixie>
tantek: cool, tanks

[15:47:01.0000] <Hixie>
thanks even


2011-12-07
[16:39:00.0000] <tantek>
ok email to public-html sent. onto the next issue. yay.

[17:39:00.0000] <AryehGregor>
Okay, I seriously feel Google Docs has regressed in functionality sometime over the last few weeks.  Yet another minor thing that' drives me crazy:

[17:40:00.0000] <AryehGregor>
Yet another minor thing that's been driving me crazy: have one line that starts with an LTR word followed by one that starts with an RTL word.  Go to start of line beginning with LTR word.  Hit down arrow.  The cursor is now visually at the beginning of the next line, but logically in the middle -- any new text you insert will be logically after the RTL word at the start of the line.

[17:40:01.0000] <AryehGregor>
Argh.

[17:40:02.0000] <AryehGregor>
/me is going to look for places to officially complain soon

[17:41:00.0000] <tantek>
now try combining that LTR / RTL mixing with text-overflow:ellipsis for extra good times.

[18:44:00.0000] <roc>
jamesr: Gecko handles non-BMP characters pretty well

[18:44:01.0000] <roc>
zewt: IVS too

[18:45:00.0000] <jamesr>
roc: in the native code?

[18:46:00.0000] <roc>
what do you mean "native code"?

[18:46:01.0000] <jamesr>
c++

[18:46:02.0000] <zewt>
yeah, the native part is easy, it's the user scripts part that's hard

[18:46:03.0000] <jamesr>
i'm interested in how you would handle this from javascript, if you do

[18:46:04.0000] <jamesr>
do you roll your own length / slice / etc functions?

[18:47:00.0000] <zewt>
well, usually you don't actually "need" the length (for definitions of "length" more complicated than "the number of codepoints")

[18:47:01.0000] <roc>
It's sort of like UTF-8

[18:47:02.0000] <roc>
a lot of the things you do with strings just work

[18:47:03.0000] <zewt>
it's exactly like utf-8 (except you need more data to handle it correctly, eg. knowing which codepoints are combining)

[18:47:04.0000] <zewt>
er

[18:47:05.0000] <zewt>
+ surrogates of course

[18:47:06.0000] <roc>
editing and selection are interesting

[18:47:07.0000] <zewt>
(sorry, multitasking too much)

[18:47:08.0000] <jamesr>
yeah - mapping selection ranges to strings and such can be very tricky

[18:48:00.0000] <jamesr>
or questions like "what's the first letter"

[18:48:01.0000] <zewt>
or just avoiding splitting surrogates in half

[18:48:02.0000] <zewt>
i havn't tried dealing with it myself either, so i don't really know what the practical issues are

[18:48:03.0000] <roc>
A lot of Web pages, even apps, should work fine with non-BMP chars

[18:48:04.0000] <zewt>
if code is simple, yeah

[18:49:00.0000] <zewt>
"accidentally" :)

[18:49:01.0000] <jamesr>
most of the time

[18:49:02.0000] <jamesr>
but something like this: https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/slice#Example:_Using_slice_to_create_a_new_string

[18:49:03.0000] <jamesr>
will fail if str1 has non-BMP chars at unexpected places

[18:49:04.0000] <roc>
depends on why you're using slice ... where the offsets came from

[18:49:05.0000] <jamesr>
by creating str2 with unmatched surrogate pairs

[18:50:00.0000] <jamesr>
right, so how do you get offsets that respect surrogate pairs? ecmascript doesn't provide any APIs for dealing

[18:50:01.0000] <roc>
if you searched for some substring and you slice at the start or end of the substring, you're probably OK

[18:50:02.0000] <zewt>
jamesr: well, technically combining characters also hit that too (even with utf-32), though that's a slightly lower level of breakage than splitting surrogates (the results are comprehensible, even if weird)

[18:50:03.0000] <jamesr>
are you checking the high bits of each char in JS?

[18:50:04.0000] <roc>
right, combining chars have basically the same set of problems

[18:50:05.0000] <jamesr>
let's say you wanted to truncate a long string if it's more than 30 letters long

[18:50:06.0000] <zewt>
jamesr: offsets should always be literal offsets into the string, not "number of codepoints after surrogate decoding"...

[18:50:07.0000] <zewt>
yeah, that's where it becomes trickier

[18:50:08.0000] <roc>
jamesr: use text-overflow:ellipsis!

[18:51:00.0000] <jamesr>
/me isn't fully confident that webkit will get that right

[18:51:01.0000] <roc>
I am very confident Gecko gets that right :-)

[18:51:02.0000] <roc>
it's basically just part of the clusterization problem

[18:51:03.0000] <jamesr>
we probably do, i'm not familiar with this part of wk

[18:51:04.0000] <roc>
that's not really a BMP-related issue at all

[18:54:00.0000] <zewt>
basically it's a bigger problem with utf-16 because if you get it wrong, you don't just end up with a weird string, you end up with a corrupt one

[18:55:00.0000] <zewt>
i think you can paste in mismatched surrogates into pages from other sources anyway, so it's not like it's the only way that can be introduced

[18:57:00.0000] <roc>
yes

[18:57:01.0000] <roc>
although strings that start with combining chars aren't technically illegal, they're a real pain to deal with :-)

[18:58:00.0000] <zewt>
more a pain for implementors than users, i think :P

[18:58:01.0000] <zewt>
as a user i'd just expect them to act as a non-combining character when there's nothing to combine with (in general)

[19:11:00.0000] <rniwa>
oh man... did I miss yet-another unicode goodness discussion?

[19:11:01.0000] <zewt>
several :)

[19:12:00.0000] <rniwa>
/me is glad he missed it

[19:12:01.0000] <rniwa>
I don't wanna know weird webkit unicode bugs

[19:13:00.0000] <zewt>
Your search - site:*.w3.org "ExtendedAttributeNoArgs" - did not match any documents.

[19:13:01.0000] <zewt>
"???"

[19:15:00.0000] <heycam>
zewt, problem in my grammar?

[19:16:00.0000] <zewt>
searching for instances of that string in specs other than webidl

[19:16:01.0000] <heycam>
should be ExtendedAttributeNoArg btw, no "s" on the end

[19:16:02.0000] <zewt>
(not familiar with webidl at all; was surprised that it didn't even find webidl itself)

[19:16:03.0000] <heycam>
but it's just a symbol in the grammar, i wouldn't expect other specs to use that word

[19:16:04.0000] <zewt>
http://dev.w3.org/2006/webapi/WebIDL/#idl-extended-attributes <- NoArgs

[19:16:05.0000] <zewt>
figuring that out is why i was searching for it :)

[19:17:00.0000] <heycam>
zewt, ah so it is. oh that's right, i think i renamed it. probably after the last TR publication. :)

[19:17:01.0000] <heycam>
it used to say something-or-other "takes no argument", but somebody found that wording a bit weird

[19:18:00.0000] <zewt>
google's cache is up to date, but for some reason it doesn't find that keyword

[19:18:01.0000] <heycam>
oh that is weird, because if I do site:dev.w3.org then it does find it

[19:19:00.0000] <zewt>
was trying to figure out if there's any way to mark up "flags" on functions (sort of like Python decorators), but that's not really a language binding issue, so

[19:19:01.0000] <zewt>
yeah, smells like a rare "provable google search bug" :)

[19:20:00.0000] <zewt>
site:dev.w3.org works, site:*.w3.org doesn't (which normally does)

[19:21:00.0000] <heycam>
(btw I tend to use just site:w3.org, which includes subdomains too)

[22:22:00.0000] <zcorpan>
woah. i thought importScripts() was same-origin, too. no idea how i could have missed that

[22:33:00.0000] <zcorpan>
wait, wait, wait, wait. people write DTD fragments when proposing a new element?

[22:42:00.0000] <MikeSmith_>
yeah, somebody should have given the waved off to that before they sent it

[23:57:00.0000] <jgraham>
zcorpan: After thinking a bit I decided to be glad they didn't send in XSD for the new element

[00:02:00.0000] <zcorpan>
touche

[00:06:00.0000] <hsivonen>
using DTD fragment to propose new elements is a bit like implying that UTF-16 is OK when proposing solutions to the encoding problem

[00:15:00.0000] <zcorpan>
hmm, <hr> in <select> is supported in some browsers (on some OSes)? http://forums.whatwg.org/bb3/viewtopic.php?f=1&t=4948

[00:20:00.0000] <hsivonen>
zcorpan: could be a difference between WebKit's old parser and the HTML5 parser

[00:21:00.0000] <zcorpan>
seems like a nice feature to me

[00:26:00.0000] <zcorpan>
hsivonen: we have four ways to opt in to utf-8

[00:27:00.0000] <hsivonen>
zcorpan: do you count the two meta syntaxes separately?

[00:28:00.0000] <zcorpan>
yeah

[00:43:00.0000] <annevk>
oh yes

[00:43:01.0000] <annevk>
I "won" the media type parameter debate on EventSource

[00:44:00.0000] <annevk>
with data

[00:51:00.0000] <MikeSmith>
been very quiet so far this week

[00:52:00.0000] <annevk>
MikeSmith: you have been?

[00:53:00.0000] <MikeSmith>
lists

[00:53:01.0000] <MikeSmith>
but now I remember I've got about 800 unread message in my inbox

[00:53:02.0000] <annevk>
ah, just about the ask what you were plotting and scheming

[00:53:03.0000] <MikeSmith>
I've been in Seoul

[00:54:00.0000] <MikeSmith>
though I did manage to get some plotting and scheming in while here

[00:55:00.0000] <annevk>
even now we closed account registration the wiki still gets daily spam

[01:01:00.0000] <MikeSmith>
annevk: visited the opera korea office

[01:01:01.0000] <MikeSmith>
and incidentally also finally figured out how to get my mutt to display some korean e-mail messages it wouldn't before

[01:03:00.0000] <MikeSmith>
mostly

[01:04:00.0000] <annevk>
sounds like a good time :)

[01:04:01.0000] <MikeSmith>
heh

[01:05:00.0000] <MikeSmith>
mail UAs here use ks_c_5601-1987 for some reason

[01:05:01.0000] <MikeSmith>
which as far as I can see is effectively the same as euc-kr

[01:06:00.0000] <MikeSmith>
at least all I ended up needing to do for mutt was to alias ks_c_5601-1987 to euc-kr

[01:07:00.0000] <jgraham>
Is plotting and scheming when you draw graphs in lisp?

[01:14:00.0000] <MikeSmith>
heh

[01:15:00.0000] <MikeSmith>
chrome WebRequest API is interesting

[01:16:00.0000] <MikeSmith>
annevk: "Apple seems to be working on bringing Web Notification support to Safari"

[01:17:00.0000] <MikeSmith>
http://peter.sh/2011/12/reverse-flexible-rows-and-columns-socket-api-and-panels/

[01:26:00.0000] <annevk>
MikeSmith: read that, sounds cool

[01:27:00.0000] <annevk>
MikeSmith: hopefully it will get jgraham to do some work on the spec o_O

[01:29:00.0000] <jgraham>
I know, I know

[01:48:00.0000] <MikeSmith>
annevk: "No blank line after the signature." is ambiguous and kind of confusing

[01:48:01.0000] <MikeSmith>
to me at least

[01:49:00.0000] <MikeSmith>
I first took it to mean, "A blank line after the signature is not allowed."

[01:49:01.0000] <MikeSmith>
when I tried typing in text in that first line

[01:53:00.0000] <annevk>
I'm not that great with error messages I'm afraid

[03:52:00.0000] <gsnedders>
Why am I unsurprised at olliej arguing like crazy against multi-vm bindings in WebKit?

[03:52:01.0000] <gsnedders>
(well, multi-language-vm bindings)

[03:54:00.0000] <annevk>
ohunt is great

[04:05:00.0000] <hsivonen>
gsnedders: whoa. I didn't read the thread carefully enough. I thought it was multi-vm bindings. is V8 becoming a bi-language VM?

[04:06:00.0000] <gsnedders>
hsivonen: No.

[04:06:01.0000] <jgraham>
Which thread?

[04:06:02.0000] <gsnedders>
hsivonen: My point is WebKit already has multi-VM bindings: JSC and V8

[04:06:03.0000] <gsnedders>
hsivonen: Multiple VMs for the same language, yes, but multiple VMs.

[04:07:00.0000] <gsnedders>
https://lists.webkit.org/pipermail/webkit-dev/2011-December/018775.html

[04:10:00.0000] <smaug____>
support for multi-vm has been actively tried to get rid of from Gecko

[04:12:00.0000] <hsivonen>
annevk: do you have a test suite for responseType == "json" already?

[04:12:01.0000] <gsnedders>
Presto supported futhark and Carakan for a while concurrently, though that was little work.

[04:13:00.0000] <jgraham>
So, is it me or is that thread a relic of a poor VCS? I mean there are obviously technical reasons why multi-VM is bad for the web, but the idea of having to ask to create a branch seems weird

[04:14:00.0000] <gsnedders>
jgraham: They want control over what branches they have in the official repo

[04:14:01.0000] <annevk>
hsivonen: no

[04:14:02.0000] <gsnedders>
jgraham: There is no objection to creating a branch elsewhere

[04:14:03.0000] <hsivonen>
jgraham: they are using SVN, so of course they have a poor VCS :-)

[04:14:04.0000] <jgraham>
hsivonen: I know

[04:15:00.0000] <karlcow>
http://lucumr.pocoo.org/2011/12/7/thoughts-on-python3/

[04:15:01.0000] <gsnedders>
(and there is an official git clone, and I think the recommendation is basically to create a clone of that)

[04:15:02.0000] <karlcow>
Because as it stands, Python 3 is the XHTML of the programming language world. It's incompatible to what it tries to replace but does not offer much besides being more “correct”.

[04:16:00.0000] <jgraham>
karlcow: I entirely disagree

[04:16:01.0000] <karlcow>
that was a quick answer to a looooong blog post

[04:19:00.0000] <jgraham>
karlcow: Not to the blogpost, to you

[04:20:00.0000] <jgraham>
Which was one sentence from the blogpost

[04:20:01.0000] <hsivonen>
jgraham: what karlcow said is a quote from the post

[04:20:02.0000] <hsivonen>
nevermind

[04:20:03.0000] <jgraham>
Right, I know that after reading the post :)

[04:20:04.0000] <karlcow>
hsivonen: poork markup from me

[04:20:05.0000] <jgraham>
Right, some quotation marks would have helped

[04:20:06.0000] <jgraham>
(the conclusion of the blogpost is actually very reasonable)

[04:20:07.0000] <hsivonen>
I haven't really had a good look at Python 3, but from a distance it sure looks XHTML2-ish

[04:22:00.0000] <Philip`>
/me thought it was obvious that karlcow was quoting, because the sentence started with a capital letter :-p

[04:23:00.0000] <karlcow>
Philip`: and there was no sex-related comments, no approximate English or silly poetic license

[04:23:01.0000] <karlcow>
which I just achieved in that last sentence

[04:52:00.0000] <jgraham>
"LLVM is turning into a real

[04:52:01.0000] <jgraham>
option for the web."

[04:54:00.0000] <jgraham>
Maybe someone should read http://lists.cs.uiuc.edu/pipermail/llvmdev/2011-October/043719.html

[05:09:00.0000] <annevk>
hsivonen: warning for non-labeled content we should definitely do for HTML I think

[05:10:00.0000] <annevk>
hsivonen: not sure whether I paid attention at the time, but if Hixie still feels that way I would disagree with him now

[05:21:00.0000] <jgraham>
Is it me or is roc's blog dead?

[05:23:00.0000] <MikeSmith>
jgraham: don't working for me either

[05:24:00.0000] <MikeSmith>
お探しのブログは見つかりませんでした。

[08:00:00.0000] <zewt>
hmm, this is fairly bizarre

[08:01:00.0000] <zewt>
ff8, in zh-TW Windows (CP950), loading zh-TW HTML with no @lang, is defaulting to a Japanese font

[08:01:01.0000] <zewt>
it only uses a zh-TW font if I explicitly set @lang, or use Big5 instead of UTF-8

[08:02:00.0000] <hsivonen>
zewt: is CP950 an exclusively Traditional Chinese encoding?

[08:02:01.0000] <zewt>
it's windows's equivalent of Big5, which is what it picks if you select "Chinese (Taiwan)"

[08:03:00.0000] <zewt>
it has a separate encoding for simplified chinese

[08:03:01.0000] <hsivonen>
zewt: so is the page using CP950 or UTF-8?

[08:03:02.0000] <zewt>
but it's even more bizarre to pick a *japanese* font, I'd be less surprised if it mixed up zh-TW and zh-CN

[08:03:03.0000] <zewt>
hsivonen: http://zewt.org/~glenn/test-zh-TW-utf-8.html

[08:03:04.0000] <hsivonen>
zewt: absent @lang, Unihan in Firefox defaults to Japanese

[08:04:00.0000] <zewt>
that's very surprising

[08:04:01.0000] <hsivonen>
zewt: boo. that page doesn't declare its encoding

[08:04:02.0000] <zewt>
(not to say a bad thing, not depending on the locale like charsets do is a plus, just not what I'd ever expect)

[08:04:03.0000] <hsivonen>
zewt: having Web content behavior depend on browser locale is evil

[08:04:04.0000] <zewt>
it does, or it did a minute ago

[08:05:00.0000] <zewt>
but now apache is being stupid, apparently

[08:05:01.0000] <zewt>
hsivonen: yes, but a very common evil

[08:06:00.0000] <zewt>
gave apache a kick and my content-type header is back

[08:07:00.0000] <hsivonen>
/me mumbles about apache not updating etag when headers change

[08:07:01.0000] <zewt>
i suppose that so long as in practice, every chinese system also has japanese fonts installed, then that's okay

[08:07:02.0000] <zewt>
which is the case in Windows, i believe (all asian fonts are installed as a unit)

[08:21:00.0000] <hsivonen>
annevk: fwiw, I think I have an implementation of spec-compliant responseType "json"

[08:24:00.0000] <zewt>
okay, now i'm confused: what about Chrome? it also appears to default to Japanese for UTF-8, and it doesn't support @lang at all as far as I know

[08:25:00.0000] <zewt>
... so, other than setting a zh-TW font by name (evil), how does anyone display zh-TW in chrome?

[08:25:01.0000] <zewt>
(i expect I'm doing something silly)

[08:26:00.0000] <hsivonen>
zewt: please file a bug on Chrome

[08:27:00.0000] <zewt>
saying what? no doubt they already know they don't support @lang, but I'm not sure what the expected path is supposed to be currently

[08:27:01.0000] <hsivonen>
zewt: saying they should consider @lang when doing font selection

[08:27:02.0000] <zewt>
they (chrome + webkit) must already know that :)

[08:28:00.0000] <hsivonen>
zewt: they might not. also, they might not know that someone cares

[08:28:01.0000] <zewt>
but how's it supposed to work today? are a billion people just hacking around it with explicit font names?

[08:28:02.0000] <hsivonen>
these newfangled browsers trying to get away without doing stuff that Gecko has done for a decade

[08:29:00.0000] <hsivonen>
zewt: dunno. possibly.

[08:29:01.0000] <hsivonen>
zewt: or using parochial encodings

[08:29:02.0000] <zewt>
if they don't know by now that every Chinese speaker doesn't want pages displayed in a Japanese font, then I don't think I could convince them

[08:29:03.0000] <hsivonen>
zewt: or does Chrome not vary the font for Chinese legacy encodings?

[08:30:00.0000] <zewt>
i expect it does for those, though my big5 test is mojibake at the moment; let me see why

[08:30:01.0000] <erlehmann>
zewt, dont misunderestimate the chromium team!

[08:31:00.0000] <zewt>
heh

[08:31:01.0000] <zewt>
well, webkit, really

[08:31:02.0000] <zewt>
i sort of feel bad for all the blame the chrome guys get for things that are webkit's fault :P

[08:34:00.0000] <zewt>
ah, hold on, it's rendering as zn-CN

[08:34:01.0000] <zewt>
(which is hard for my weak western eyes to distinguish from jp)

[08:35:00.0000] <erlehmann>
gajin baka!

[08:35:01.0000] <zewt>
確かに

[08:35:02.0000] <zewt>
i'm an american; i take *pride* in not being able to read other languages!

[08:35:03.0000] <hsivonen>
zewt: huh? aren't Japanese glyph designs generally closer to Traditional Chinese designs than Simplified Chinese designs?

[08:35:04.0000] <erlehmann>
western font culture is pig disgusting!

[08:36:00.0000] <zewt>
hsivonen: i need to pick a test case with bigger character differences

[08:37:00.0000] <erlehmann>
hsivonen, japanese glyph designs are most closely resembled by pokemans, see 🐭 🐮 🐯 🐵

[08:37:01.0000] <erlehmann>
emoji are the new fancy shit!

[08:38:00.0000] <erlehmann>
though i question the need for U+1F5FE SILHOUETTE OF JAPAN

[08:38:01.0000] <zewt>
unicode jumped the shark with PILE OF POO

[08:38:02.0000] <erlehmann>
or U+1F5FC TOKYO TOWER

[08:38:03.0000] <erlehmann>
zewt, i heard the poop has eyes on ios!

[08:39:00.0000] <erlehmann>
however i cannot confirm due to not running non-free operating systems. *strokes his neckbeard*

[08:39:01.0000] <hsivonen>
interesting. accoding to the comments at http://my.opera.com/ODIN/blog/2011/08/09/introducing-oupeng-a-chinese-opera Opera has a Mini server farm behind the Great Firewall

[08:39:02.0000] <karlcow>
http://www.fileformat.info/info/unicode/block/miscellaneous_symbols_and_pictographs/list.htm

[08:40:00.0000] <erlehmann>
a mini server farm! likea beowulf cluster of wall warts!

[08:40:01.0000] <erlehmann>
karlcow, know any other font besides symbola that can do that?

[08:40:02.0000] <erlehmann>
i have symbola installed

[08:40:03.0000] <erlehmann>
but it looks weird

[08:41:00.0000] <erlehmann>
how does the apple do it? do they have SVG fonts for emoji?

[08:41:01.0000] <erlehmann>
hi, cowboy.

[08:42:00.0000] <karlcow>
hmmm good question not sure what apple installed on the system I haven't checked

[08:43:00.0000] <erlehmann>
the apple confounds me.

[08:44:00.0000] <zewt>
okay, found the source of my confusion

[08:44:01.0000] <zewt>
http://zewt.org/~glenn/encoding%20utf-8.html renders correctly in FF8 in Win7 (my desktop), but incorrectly in XP (my test VM; zh-TW shows the jp glyph)

[08:46:00.0000] <zewt>
chrome on http://zewt.org/~glenn/enc/big5.html shows the zh-CN glyph (which is weird--it should be zh-TW, right?)

[08:49:00.0000] <hsivonen>
zewt: did you test zh-Hant and zh-Hans?

[08:49:01.0000] <zewt>
nope, don't know anything about those

[08:49:02.0000] <zewt>
(not that I know a great deal about zh-anything)

[08:49:03.0000] <erlehmann>
zsh!

[09:28:00.0000] <zewt>
fyi, probably not surprisingly, ie8 does use the locale to pick the font

[09:28:01.0000] <zewt>
(for utf-8)

[09:44:00.0000] <Ms2ger>
Are there any websocket api tests already?

[09:46:00.0000] <jgraham>
Ms2ger: I don't know of any public ones

[09:47:00.0000] <jgraham>
We had some but they also tested the protocol so they need to be updated

[09:47:01.0000] <jgraham>
(in general testing websockets is pretty hrad)

[09:47:02.0000] <jgraham>
*hard

[09:48:00.0000] <jgraham>
Because you need a server component that can give you arbitary bits on the wire in response to your messages

[09:48:01.0000] <Ms2ger>
Oh, MS has some

[09:48:02.0000] <jgraham>
to check that the implementaion does the right thing API wise when it hits various edge cases

[09:49:00.0000] <jgraham>
Ms2ger: Just "WebSocket in window" type tests?

[09:49:01.0000] <Ms2ger>
new WebSocket(>2 arguments)

[09:50:00.0000] <Ms2ger>
(Which happens to throw in Gecko)

[09:51:00.0000] <jgraham>
Hmm, these tests do require a server

[09:52:00.0000] <jgraham>
http://html5labs-interop.cloudapp.net/

[09:52:01.0000] <jgraham>
http://html5labs-interop.cloudapp.net/wsdemo.html ... "To view this content please install Silverlight"

[09:53:00.0000] <Ms2ger>
\o/

[09:53:01.0000] <jgraham>
/me will look slighly confused for a bit and then get on with something more useful

[09:55:00.0000] <zewt>
please install a proprietary browser plugin like it's 1999

[09:56:00.0000] <Ms2ger>
Interesting, MS's W3C-submitted tests support MozWebSocket

[10:06:00.0000] <Ms2ger>
"Undefined variable: WebSocket"

[10:06:01.0000] <Ms2ger>
/me glares towards Opera

[10:55:00.0000] <jgraham>
Ms2ger: Didn't your moher teach you it is rude to glare?

[10:56:00.0000] <Ms2ger>
My moher didn't, no

[10:59:00.0000] <jgraham>
What about your mother? did she teach you that it's rude to mock people's typos?

[11:01:00.0000] <shepazu>
or did you teach her how to suck eggs?

[11:01:01.0000] <Ms2ger>
She taught that it's fair game to laugh at doctors in astrophysics

[11:05:00.0000] <jgraham>
Dammit.

[11:06:00.0000] <jgraham>
I somehow ended up in a ridiculed minority.

[11:06:01.0000] <JonathanNeal>
Were any of you guys able to check this out? https://github.com/jonathantneal/html5css/blob/master/style.css it's the ua css i wrote up based on the html5 spec.

[11:26:00.0000] <Hixie>
annevk: btw, looks like your multipage generator script isn't deleting old sections

[11:26:01.0000] <Hixie>
annevk: e.g. we still have content-models.html and apis-in-html-documents.html and even video.html which haven't been updated in months

[11:27:00.0000] <Hixie>
(pretty sure that's not a problem on my end because i delete the entire directory when regenerating it)

[11:32:00.0000] <Ms2ger>
Hixie, there's a bug about that

[11:32:01.0000] <Ms2ger>
(At least for the W3C copy

[11:32:02.0000] <Ms2ger>
)

[11:40:00.0000] <zewt>
starting to see somewhat more pages catching and breaking major browser hotkeys

[11:40:01.0000] <zewt>
twitter and now AWS's console

[12:06:00.0000] <zewt>
http://zewt.org/~glenn/encoding%20utf-8.html strange; IE9 shows zh-CN in the lang=jp case (firefox shows all three fine, and IE9 does get zh-TW and zh-CN right)

[12:11:00.0000] <zewt>
but it gets it right with shift-jis (or else all of Japan would be yelling at them)

[12:11:01.0000] <zewt>
it feels like some browser vendors are actively trying to prevent asia (especially Japan) from using UTF-8

[12:15:00.0000] <zewt>
aha, it wants lang=ja (other browsers accept lang=jp, so that's what I ended up typing)

[12:16:00.0000] <smaug____>
annevk: ping

[12:45:00.0000] <Hixie>
heycam|away: does SVG have path objects?

[12:46:00.0000] <Hixie>
it's ridiculous how many people are asking for ellipses suddenly

[12:54:00.0000] <Philip`>
Maybe they thought that asking for ellipses is the most effective way to get a non-terrible API for drawing circles

[12:55:00.0000] <Philip`>
/me thinks APIs that require you to remember to use the argument 2*Math.PI don't count as non-terrible

[12:58:00.0000] <TobiX>
Philip`: As long as you don't have to use LOGO to draw a circle ;)

[13:22:00.0000] <TabAtkins>
tantek: You still need me for anything? (Returning the ping from a while ago without reading anything from near it.)

[13:24:00.0000] <zewt>
did the unsubscribed-poster setting change on the list? curious how that spam got through

[13:24:01.0000] <TabAtkins>
It happens occasionally.

[13:28:00.0000] <gavinc>
are there any standalone implementations of the UTF-8, with error handling decoding?

[13:31:00.0000] <tantek>
TabAtkins - I think it may have been about the my documentation of the proposal to allow space instead of t in date-and-time microsyntaxes

[13:31:01.0000] <tantek>
it appears to be resolved now in WHATWG

[13:32:00.0000] <TabAtkins>
kk

[13:32:01.0000] <tantek>
however you're still encouraged to review and edit/improve the research documentation: http://wiki.whatwg.org/wiki/Time_element#permit_space_instead_of_T_in_datetimes

[13:35:00.0000] <tantek>
/me is proceeding with attempting to grow consensus on time enhancements across WHATWG and HTMLWG specs.

[13:44:00.0000] <jgraham>
gavinc: What do you mean by "implementation" in this case? A C library that will take UTF8 and give you back (some string format)?

[13:45:00.0000] <jgraham>
(not that I know the answer in any case, but...)

[13:45:01.0000] <zewt>
i assume he means the particular rules defined by http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#utf-8

[13:45:02.0000] <gavinc>
zewt: Yes

[13:45:03.0000] <gavinc>
jgraham: or even just an example that isn't stuck way way down inside a browser

[13:46:00.0000] <zewt>
i'd imagine the utf8-to-codepoints code is probably not very complex ... maybe check webkit?

[13:46:01.0000] <zewt>
(webkit tends to have code which is easier to read in isolation than gecko, in my brief experiences with both)

[13:47:00.0000] <gavinc>
zewt: well, most languages have UTF-8 parsers for reading byte streams. I guess I was wondering if anyone had already implemented utf-8 with error recovery as one of those

[13:47:01.0000] <zewt>
well, they might implement error recovery, but in different ways

[13:47:02.0000] <zewt>
i assume you want those particular rules

[13:48:00.0000] <gavinc>
zewt: Right, so specifically THOSE rules

[13:48:01.0000] <gavinc>
Java, Python and Ruby don't do any error recovery, they just explode on invalid utf-8

[13:49:00.0000] <gkellogg>
gavinc: I can't say that for sure about Ruby, as the case I'm looking at doesn't actually look like UTF-8

[13:53:00.0000] <Philip`>
/me uses the code at http://trac.wildfiregames.com/browser/ps/trunk/source/lib/utf8.cpp , which can either abort and report errors or else replace invalid stuff (for some value of 'stuff') with U+FFFD

[13:53:01.0000] <zewt>
here's (some version of) webkit's utf-8 decoding: http://gitorious.org/webkit/sedkit/blobs/94b6ef65ee422c62fb91ca9be76ee2fa5310d718/Source/WebCore/platform/text/TextCodecUTF8.cpp

[13:54:00.0000] <zewt>
not as simple as an "example code" standalone might be, but not complex

[13:55:00.0000] <zewt>
(i don't know if webkit actually implements utf-8 error handling exactly per spec, but I'd hope so)

[13:55:01.0000] <zewt>
also I don't know what version that is (I just googled for the source file of whatever WebKit source version is lying around in my ~)

[13:56:00.0000] <gavinc>
zewt: yeah, specifically line 169 http://gitorious.org/webkit/sedkit/blobs/94b6ef65ee422c62fb91ca9be76ee2fa5310d718/Source/WebCore/platform/text/TextCodecUTF8.cpp#line169

[13:56:01.0000] <zewt>
decodeNonASCIISequence looks like the fast path with no error handling, check TextCodecUTF8::decode below it

[13:57:00.0000] <gavinc>
No, it's still doing the error handling as specified

[13:58:00.0000] <zewt>
it's the asserts that make it look dubious

[13:59:00.0000] <zewt>
havn't squinted very hard at it

[14:00:00.0000] <zewt>
there's still enough platform stuff in there that it may be more work to extract it to use it independently than to just rewrite it

[14:00:01.0000] <Velmont>
gavinc: chardet python library is using charset sniffing code/algorithm from browsers at least.

[14:02:00.0000] <gkellogg>
ww: so, it seems that the problem is specific to Ruby 1.9. Running on a different version, I seem to be able to parse (without actually generating triples) in about 22 secs. I'll try making triples next

[14:02:01.0000] <gavinc>
gkellogg: mischan ;)

[14:03:00.0000] <gkellogg>
:)

[14:03:01.0000] <gavinc>
of course chardet 410s... sigh, yeah

[14:05:00.0000] <gavinc>
Velmont: chardet just does the detection, not the bytes-> chars :(

[14:07:00.0000] <zewt>
->codepoints :)

[14:07:01.0000] <Wilto>
annevk: Ping.

[14:15:00.0000] <gavinc>
zewt: yes those :P

[14:22:00.0000] <jgraham>
Hmm, I'm pretty sure the python codecs module has some possibility for error recovery, but I doubt it matches this spec

[14:22:01.0000] <gavinc>
reading now, it's C with goto, may take a few passes at reading

[14:23:00.0000] <jgraham>
errors='replace': replace malformed data with a suitable replacement marker, such as '?' or '\ufffd'

[14:23:01.0000] <gavinc>
yeah, I think gets darn close of what HTML5 says

[14:23:02.0000] <zewt>
jgraham: would be interesting if they could be convinced to converge on html's rules

[14:24:00.0000] <gavinc>
Was also looking if there were any test cases yet for that algorithm

[14:24:01.0000] <jgraham>
zewt: I don't know how or if it is different

[14:24:02.0000] <zewt>
i don't either

[14:25:00.0000] <gavinc>
one example, it doesn't replace surrogates

[14:25:01.0000] <zewt>
or if they're prevented from changing it for compat, add an errors='html' mode

[14:26:00.0000] <gavinc>
exactly :D

[14:27:00.0000] <gavinc>
was hoping that it could be done by registering a new codex, but it looks like that would be staggeringly slower

[14:30:00.0000] <jgraham>
gavinc: Where is the actual decoder in python?

[14:31:00.0000] <jgraham>
I mean actual python decoder

[14:31:01.0000] <jgraham>
in c

[14:31:02.0000] <jgraham>
Well I mean something. I'm not sure either way round was clear

[14:33:00.0000] <zewt>
PyUnicode_DecodeUTF8Stateful, I think

[14:33:01.0000] <zewt>
at least in 3.1.3

[14:34:00.0000] <gavinc>
PyUnicode_DecodeUTF8Stateful

[14:34:01.0000] <gavinc>
yeah

[14:34:02.0000] <zewt>
i win

[14:34:03.0000] <gavinc>
I was reading it :P

[14:39:00.0000] <gavinc>
http://hg.python.org/cpython/file/17ceebc61b65/Objects/unicodeobject.c#l2555

[14:54:00.0000] <gavinc>
Well, the example in HTML comes out as A��B�C☺�... so perhaps some test cases are in order :D

[15:00:00.0000] <gavinc>
https://gist.github.com/1445180

[15:02:00.0000] <annevk>
Wilto: ?

[15:03:00.0000] <annevk>
hsivonen: cool

[15:03:01.0000] <Wilto>
Hey man, Mike Taylor mentioned I might want to get ahold of you—I’ve been working with Scott Jehl et al. on the whole “responsive images” problem.

[15:03:02.0000] <annevk>
Hixie: that can be fixed, I'm currently just overwriting files

[15:03:03.0000] <Wilto>
We whipped up that canvas-based demo the other day.

[15:03:04.0000] <Wilto>
( http://scottjehl.com/imgwithfallback.html )

[15:04:00.0000] <annevk>
ah cool

[15:04:01.0000] <annevk>
yeah brucel keeps bugging me about it

[15:04:02.0000] <Wilto>
He doesn’t know it, but he might have just become my hero.

[15:04:03.0000] <Wilto>
I’ve been obsessing over this stuff for months.

[15:04:04.0000] <annevk>
so personally I'm not sure the requirements from authors are quite clear enough for a new markup feature

[15:04:05.0000] <annevk>
that's my a

[15:05:00.0000] <annevk>
my b is that I sort of feel that long term bandwidth will be less of an issue and everything will be 300ppi

[15:05:01.0000] <annevk>
and new markup only hits long term

[15:05:02.0000] <Hixie>
annevk: if you would that'd be great. i had someone send me a link to the webrtc section today, without them realising it was dead

[15:05:03.0000] <annevk>
Hixie: so probably tomorrow around this time it will be fixed

[15:06:00.0000] <annevk>
Hixie: unless I get to it before going to bed somehow

[15:06:01.0000] <Hixie>
annevk: roger, thanks

[15:09:00.0000] <annevk>
Wilto: both a and b might be false; there's not really sufficient information imo other than that some people are hitting this problem today

[15:10:00.0000] <Wilto>
annevk: Granted, yeah. And believe me, I have in no way been banking on “we need a new element”—I assume that’s a phrase that’s thrown around a lot when people first run into an issue like this.

[15:10:01.0000] <annevk>
Wilto: that's the brucel stance :)

[15:10:02.0000] <Wilto>
Thing is—and again, not something I say easily—this just doesn’t feel solvable on the front end.

[15:11:00.0000] <Wilto>
I would absolutely love to write up the history of the issue. I’m sure you guys have been getting it in fits and starts.

[15:12:00.0000] <Wilto>
It is a sordid tale of cookies and dynamically-injected base tags.

[15:13:00.0000] <zewt>
gar, quotostrophes

[15:14:00.0000] <Wilto>
The general thinking is that a reliable fallback pattern already exists in video/audio/canvas.

[15:15:00.0000] <zewt>
but that's a different pattern

[15:15:01.0000] <heycam>
Hixie, yes SVG does have path objects. but they, like much of the SVG DOM, suck. :)

[15:15:02.0000] <annevk>
Wilto: yeah I know, but that is mostly for different formats, although admittedly media queries are there (not sure if they are implemented though)

[15:15:03.0000] <Wilto>
Well, in terms of not breaking things that already exist.

[15:16:00.0000] <heycam>
Hixie, so we (SVGWG) want to improve the SVG DOM in the SVG2 timeframe (so some time over the next year)

[15:16:01.0000] <Hixie>
heycam: Are these the DOM nodes for some sort of path element, or are they separate Path objects?

[15:16:02.0000] <heycam>
Hixie, no, separate path objects

[15:16:03.0000] <heycam>
Hixie, however unlike say SVGPoint/SVGMatrix you can't create a disconnected SVGPath

[15:16:04.0000] <heycam>
Hixie, they only exist to reflect path data on elements at the moment

[15:16:05.0000] <Hixie>
k

[15:16:06.0000] <Hixie>
i'm gonna guess i'll be coming up with a new interface, but i'll take a look to see what can be reused...

[15:17:00.0000] <heycam>
Hixie, ok if you get to it before we do (which sounds likely) I'll take a look at what you come up with and see where to go from there

[15:17:01.0000] <Hixie>
i'm expecting to do work on canvas early next year

[15:18:00.0000] <Hixie>
one of the things is adding the path primitives

[15:18:01.0000] <Hixie>
would be great to have your feedback when i do, of course

[15:18:02.0000] <heycam>
yep sure

[15:18:03.0000] <Wilto>
annevk: So, in your opinion, is this idea a total non-starter?

[15:18:04.0000] <annevk>
Wilto: no, all I have is some thoughts

[15:18:05.0000] <Hixie>
heycam: i dunno how much similar they'll be. I mean, some of the stuff I'm looking at doing is the focus ring stuff, hit testing, etc.

[15:19:00.0000] <Wilto>
Or would it help if I wrote up, uh, anything. Like I said: desperate times.

[15:19:01.0000] <annevk>
Wilto: what we need for standards is mostly data

[15:19:02.0000] <annevk>
Wilto: which indeed usually starts with someone outlining the problem and such

[15:19:03.0000] <Hixie>
heycam: explicit stroking and filling, adding text to a path, create a path with text along another path

[15:19:04.0000] <heycam>
Hixie, but these'll be methods on the canvas rather than the path object I would expect?

[15:19:05.0000] <annevk>
Wilto: in this case someone might have already done something in that direction, I forgot, but not recently

[15:19:06.0000] <Hixie>
heycam: dunno

[15:19:07.0000] <annevk>
Wilto: you can take a few hints from http://wiki.whatwg.org/wiki/FAQ#Is_there_a_process_for_adding_new_features_to_a_specification.3F

[15:20:00.0000] <heycam>
Hixie, create a path with text along another path eh :) yes we're interested in a "convert text to its outline paths" too (probably including text along a path)

[15:20:01.0000] <annevk>
Wilto: it's not a literal process, but it contains the steps we usually go through

[15:20:02.0000] <Wilto>
annevk: No—we’ve got lots of notes on the subject, but the official documentation is pretty much “ask me.” I just wanted to check in with you to see if I was completely off the rails, y’know?

[15:20:03.0000] <annevk>
Wilto: okay

[15:21:00.0000] <annevk>
Wilto: so no, you're not, a write up would be great

[15:21:01.0000] <Wilto>
Excellent. I appreciate you taking the time, man!

[15:21:02.0000] <annevk>
Wilto: we can't really promise anything, but it's valuable to have that information

[15:21:03.0000] <Wilto>
Oh, no, no promises expected. It doesn’t hurt to have it all down on paper somewhere anyway.

[15:22:00.0000] <annevk>
Wilto: even if we decide not to do it in the end, at least it's more reasoned than a hunch from someone

[15:22:01.0000] <gavinc>
The over long utf-8 sequence \xC0\xAF (/) should produce a SINGLE U+FFFD character is that the correct reading of http://www.whatwg.org/specs/web-apps/current-work/multipage/infrastructure.html#utf-8 ?

[15:22:02.0000] <annevk>
Wilto: right; cool!

[15:22:03.0000] <annevk>
and with that I'm gonna get some sleep :)

[15:22:04.0000] <Wilto>
Have a good one!

[15:22:05.0000] <annevk>
nn

[15:23:00.0000] <zewt>
gavinc: yep; a whole overlong sequence is replaced with a single replacement character

[15:24:00.0000] <gavinc>
zewt: Guess what Java and Python don't do? ;)

[15:24:01.0000] <zewt>
lots of software don't deal with overlong sequences adequately

[15:24:02.0000] <zewt>
i don't think vim does

[15:25:00.0000] <gavinc>
yeah, iconv doesn't seem to :\

[15:25:01.0000] <gavinc>
Not sure I'm calling it correctly however

[15:25:02.0000] <zewt>
it's not always wanted--in some cases faster performance with less checks is the goal

[15:26:00.0000] <zewt>
python seems to throw an error on that sequence

[15:26:01.0000] <gavinc>
print '\xc0\xaf'.decode('utf-8', 'replace')

[15:26:02.0000] <zewt>
>>> '\xc0\xaf'.decode("utf-8")

[15:26:03.0000] <zewt>
in replace mode i'm not sure

[15:26:04.0000] <zewt>
though

[15:26:05.0000] <gavinc>
�� :D

[15:26:06.0000] <zewt>
ah right, that's legal, just a different recovery mode

[15:27:00.0000] <gavinc>
close, seems to meet all the other HTML5 rules

[15:28:00.0000] <zewt>
vim doesn't detect it and converts it directly :(

[15:29:00.0000] <gavinc>
bad vim!

[15:29:01.0000] <zewt>
well

[15:29:02.0000] <zewt>
vim keeps the original binary sequence unchanged; what's wrong is that it renders it

[15:29:03.0000] <gavinc>
as a slash?

[15:29:04.0000] <zewt>
yeah

[15:30:00.0000] <zewt>
probably just a naive utf-8 decoder

[15:40:00.0000] <Hixie>
kennyluck: I need more context for some of your bugs! :-) (e.g. bug 14890)

[15:41:00.0000] <Hixie>
haha

[15:42:00.0000] <Hixie>
bug 15051 ends with "omg, you wannbe w3c"

[15:42:01.0000] <Hixie>
i'm pretty sure if there's one thing i don't want to be, it's the w3c. :-P

[15:42:02.0000] <Hixie>
dunno about you guys. :-P

[15:42:03.0000] <zewt>
hixietf


2011-12-08
[16:09:00.0000] <dbaron>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=15033 and https://www.w3.org/Bugs/Public/show_bug.cgi?id=15035 got put in "other Hixie specs" instead of "HTML5 spec" for some reason

[16:09:01.0000] <dbaron>
(they both came from the whatwg spec comment form, I think)

[17:33:00.0000] <MikeSmith>
man, the hover behavior and popups in the Firefox built-in Inspect tool are way awesome

[17:34:00.0000] <paul_irish>
so hot

[17:35:00.0000] <MikeSmith>
yeah

[17:35:01.0000] <MikeSmith>
nice clean simple UI

[17:36:00.0000] <MikeSmith>
responsiveness is great

[17:36:01.0000] <MikeSmith>
the way that inspectors in other browsers have been doing it now seems backwards

[17:37:00.0000] <MikeSmith>
I think you more often want to go from the rendered view and find the part of the HTML source that corresponds to that

[17:37:01.0000] <MikeSmith>
rather than the other way around

[17:38:00.0000] <MikeSmith>
definitely much better if all you need to do is, say, just see if a particular part of the page has an id, and what the id is

[17:40:00.0000] <MikeSmith>
wondering if the plan is for this to ship in Firefox 10

[17:41:00.0000] <TabAtkins>
Ooh, it has improved!

[17:41:01.0000] <MikeSmith>
yeah

[17:42:00.0000] <MikeSmith>
I said Firefox but I meant Minefield of course

[17:42:01.0000] <MikeSmith>
er, Nightly now I guess

[17:47:00.0000] <MikeSmith>
really nice to have built-in debugging tools in Firefox

[17:58:00.0000] <zewt>
hmm

[17:59:00.0000] <zewt>
how would a spec go about interpreting the first argument (if any) of an "any..." argument as a particular WebIDL dictionary type

[18:01:00.0000] <zewt>
eg. getContext("webgl", { alpha: true })

[18:03:00.0000] <heycam>
zewt, good question. you at least want to invoke the conversion steps for JS value to IDL dictionary value.

[18:04:00.0000] <heycam>
there's nothing in the spec currently that lets you say to do this conversion without saying "take the JS value that was passed as the second argument and _convert_ it to an IDL value of type MyDictionary".

[18:04:01.0000] <zewt>
been poking around looking for prior art

[18:04:02.0000] <heycam>
yeah I'm not sure there is any

[18:04:03.0000] <zewt>
(not to dictionary--it's too new--but to any type)

[18:05:00.0000] <heycam>
any… is probably just used for setTimeout and friends?

[18:05:01.0000] <heycam>
where it doesn't do any explicit conversion of JS to IDL values of those any… things

[18:05:02.0000] <zewt>
canvas.getContext uses it

[18:05:03.0000] <zewt>
because the arguments are context-type-specific

[18:05:04.0000] <heycam>
but does it actually use it for '2d'?

[18:05:05.0000] <zewt>
nope, it ignores any arguments

[18:06:00.0000] <zewt>
(i'm trying to get this cleaned up in webgl; it's a bit ad hoc right now)

[18:07:00.0000] <heycam>
so the quoted sentence I give above would be ok. it is language specific (but who cares).

[18:07:01.0000] <zewt>
can "JS" just be dropped? "take the value ..."

[18:08:00.0000] <heycam>
yeah maybe. you want it to be clear though that it's a particular language value, and not an IDL value.

[18:09:00.0000] <heycam>
also if you want _convert_ to go somewhere useful you've only got specific language binding conversions in web idl. there's no generic "convert" definition that says "if the value is JS, follow the steps in this section. if it's java, follow these other steps."

[18:09:01.0000] <zewt>
there's also the error case (TypeError)...

[18:10:00.0000] <heycam>
on my todo list is to add IDL-level exceptions with those names, and map them to the same things in JS

[18:11:00.0000] <zewt>
might be hard to market this as an improvement if i have to do that, plus "if the conversion is illegal, throw this exception and terminate these steps", starts to get bloaty

[18:12:00.0000] <heycam>
if you do link _convert_ to the relevant steps, then you get the exception thrown automatically

[18:12:01.0000] <zewt>
hmm

[18:12:02.0000] <heycam>
so you shouldn't need to mention it

[18:13:00.0000] <zewt>
are there any calls-out-to-algorithms where the algorithm throws an exception and terminates the caller algorithm?

[18:13:01.0000] <zewt>
don't think i've ever seen that

[18:13:02.0000] <heycam>
in other specs? I am not too sure, but the rules I use for the algorithms within Web IDL is that exceptions propagate out of algorithms and can terminate them.

[18:14:00.0000] <zewt>
i'd be surprised by that, since if I'm reading an algorithm in isolation I'm not expecting that any call to another algorithm might terminate it (unless the algorithm says so explicitly)

[18:15:00.0000] <zewt>
("do this thing, and terminate these steps on failure" or something)

[18:15:01.0000] <heycam>
is that what the html spec does?

[18:15:02.0000] <zewt>
i've never seen called-algorithms-terminating-the-caller in html

[18:16:00.0000] <heycam>
ok

[18:16:01.0000] <heycam>
does html have called algorithms throw particular exceptions?

[18:17:00.0000] <zewt>
i don't remember seeing it, but ping @ hixie

[18:22:00.0000] <jamesr_>
how much work does webidl do to support non-js impls?

[18:22:01.0000] <heycam>
jamesr_, there's a whole java binding appendix. but it's going to get ripped out. :o

[18:22:02.0000] <jamesr_>
and that's the only other binding?

[18:22:03.0000] <heycam>
yes

[18:23:00.0000] <jamesr_>
i guess it's time for the java bindings to be... (puts on csi:miami sunglasses) .... garbage collected

[18:23:01.0000] <heycam>
ha

[18:23:02.0000] <zewt>
found one example, the "XML fragment serialization algorithm" can throw an exception, and the place it's used explicitly mentions that it might throw (havn't found one like this that's part of a list of steps, though)

[18:25:00.0000] <heycam>
zewt, ok, yeah I want to see when an algorithm is invoked whether it notes that an exception might come out of it

[18:25:01.0000] <Hixie>
i hope that every time i throw an exception in a child algorithm, i catch it / say to propagate it

[18:25:02.0000] <Hixie>
file bugs if i screwed that up anywhere

[18:26:00.0000] <Hixie>
i do have some algorithms that (without exceptions) explicitly abort their caller

[18:26:01.0000] <Hixie>
media resource loading or whatever it's called may be one of them

[18:26:02.0000] <heycam>
Hixie, and you mention that in the calling algorithm

[18:27:00.0000] <heycam>
?

[18:27:01.0000] <zewt>
Hixie: having trouble finding an algorithm that does that--anything off-hand to search for?

[18:27:02.0000] <Hixie>
heycam: i wouldn't guarantee it

[18:28:00.0000] <Hixie>
zewt: try looking for "abort the"

[18:29:00.0000] <zewt>
ah here's one, in structured clone

[18:30:00.0000] <zewt>
(for exceptions from user code rather than an algorithm, but close enough)

[18:32:00.0000] <heycam>
sounds like maybe I should do it then

[18:32:01.0000] <heycam>
zewt, if you're on the list would you mind mailing public-script-coord requesting it?

[18:32:02.0000] <zewt>
i'm not on that one

[18:35:00.0000] <heycam>
ok nm i'll just note it locally

[18:35:01.0000] <zewt>
how big is the difference between [Callback] interface and a dictionary? (have to weigh how much time to spend in convincing people to make changes, heh)

[18:36:00.0000] <zewt>
webgl has "[Callback] interface WebGLContextAttributes", where similar stuff with event constructors has a dictionary for the data passed from the user and an interface for the resulting class

[18:36:01.0000] <heycam>
zewt, if it's just for taking in an argument to a function, then not that different. dictionary members can be "not present" though, which might be useful.

[18:36:02.0000] <heycam>
and you can specify default values in the idl

[18:36:03.0000] <zewt>
webgl definitely intends for arguments to be omitted

[18:37:00.0000] <heycam>
with hard coded defaults?

[18:37:01.0000] <zewt>
they specify the defaults in prose

[18:37:02.0000] <heycam>
but yeah if some can be omitted and the defaults aren't just the result of converting undefined to the right type, you'll need to use a dictionary

[18:38:00.0000] <heycam>
i think that's not valid then, you can't say what happens if there's no property for [Callback] objects

[18:39:00.0000] <zewt>
if the properties were nullable (which they're not, but putting that aside) i'd have guessed that the properties would read as null

[18:39:01.0000] <heycam>
yes

[18:39:02.0000] <zewt>
though i don't think they want those to be nullable anyway, so it'd want to be a separate type anyway

[18:40:00.0000] <zewt>
i like programming better; if i don't know how something works, I just try it and see what blows up

[18:41:00.0000] <heycam>
this is more like try something, wait a few months and see if i blow up

[18:42:00.0000] <zewt>
heh

[18:42:01.0000] <zewt>
thanks to both; will think about it some more

[18:42:02.0000] <heycam>
kcool

[18:53:00.0000] <zewt>
erg, another thing is that this is part of a sub-algorithm itself (the context creation called by getContext in step 6)

[18:53:01.0000] <zewt>
getContext itself is not defined as throwing an exception in that step

[18:54:00.0000] <zewt>
(@ hixie)

[19:01:00.0000] <zewt>
heycam: so, "Convert" would ref http://dev.w3.org/2006/webapi/WebIDL/#es-dictionary ?

[19:04:00.0000] <heycam>
zewt, yes

[19:05:00.0000] <heycam>
or http://dev.w3.org/2006/webapi/WebIDL/#dfn-convert-ecmascript-to-idl-value

[19:05:01.0000] <heycam>
the latter is where all "convert"s within the spec link to actually

[19:06:00.0000] <heycam>
either would be fine

[19:07:00.0000] <Hixie>
zewt: file bugs (using the widget thing)

[19:13:00.0000] <zewt>
ok

[23:24:00.0000] <hsivonen>
aargh. MTWF FAIL: http://paulirish.com/2011/moving-the-web-forward/#comment-96808

[01:02:00.0000] <zcorpan>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=15095 - how do you check the origin of a worker?

[01:05:00.0000] <zcorpan>
event.origin

[01:06:00.0000] <hsivonen>
writing character encoding related UI strings is hard

[01:06:01.0000] <hsivonen>
particularly for a browser

[01:07:00.0000] <hsivonen>
where for perf reasons you don't want to check if the page actually contains non-ASCII

[01:07:01.0000] <hsivonen>
and where you can't be sure whether the page author or a user ends up reading the UI string

[01:09:00.0000] <zcorpan>
i guess xhr/websocket/eventsource can expose the origin in a worker, too

[04:41:00.0000] <codeho>
blergh.. this new mouse lock api is going to be hell

[05:03:00.0000] <hsivonen>
codeho: in what way?

[05:03:01.0000] <codeho>
i fear its gonna be abused

[05:04:00.0000] <codeho>
ad-blocks that trap your mouse

[05:04:01.0000] <codeho>
whole pages that trap your mouse

[05:04:02.0000] <codeho>
ect..

[05:04:03.0000] <hsivonen>
codeho: aren't there safeguards against that?

[05:06:00.0000] <codeho>
in the current spec i don't see any

[05:07:00.0000] <codeho>
it'll need the same approach as for pop-ups

[05:07:01.0000] <jgraham>
No one is going to implement it without safeguards

[05:07:02.0000] <codeho>
fullscreen and geoloc

[05:07:03.0000] <jgraham>
irre3spective of what the spec says

[05:07:04.0000] <jgraham>
I'm also rather sure this has been discussed

[05:07:05.0000] <codeho>
ost likely

[05:07:06.0000] <codeho>
+m

[05:09:00.0000] <codeho>
current chromium only allows it in fullscreen mode

[05:09:01.0000] <codeho>
thats good :)

[05:19:00.0000] <hsivonen>
https://twitter.com/#!/MattWilcox/status/144765119203774464

[05:33:00.0000] <smaug____>
codeho: I think also Firefox implementation allows it only in fullscreen mode

[05:34:00.0000] <smaug____>
(I'm more worried about misusing fullscreen mode, since it doesn't require any permission )

[05:42:00.0000] <smaug____>
codeho: if you're testing mouse lock, feel free to test FF builds http://vocamus.net/dave/?p=1388

[05:43:00.0000] <codeho>
smaug____: thanks! currently i'm just interested in the code, looking' at your repo if thats ok :)

[05:47:00.0000] <smaug____>
codeho: not my code :)

[05:47:01.0000] <codeho>
i know

[05:47:02.0000] <codeho>
 :)

[05:48:00.0000] <codeho>
(now) :)

[06:08:00.0000] <smaug____>
does webkit support event ctors for other than Event and CustomEvent

[06:08:01.0000] <smaug____>
/me has never understood why DOM4 has CustomEvent

[06:14:00.0000] <zcorpan>
Hixie: hmm. now it's non-trivial to find the partial Document interface (previously HTMLDocument) by following xrefs

[06:15:00.0000] <zcorpan>
/me filed a bug

[06:36:00.0000] <bga>
http://funkyimg.com/u2/1081/563/9373757.png

[06:36:01.0000] <bga>
mozilla^

[06:38:00.0000] <hsivonen>
bga: looks like Content-Disposition in action

[06:38:01.0000] <hsivonen>
bga: and the user having set Opera as the default app for .xhtml

[06:39:00.0000] <bga>
m

[06:39:01.0000] <bga>
only opera open this url

[06:40:00.0000] <bga>
stupid browsers

[06:43:00.0000] <bga>
anyway this svg demo does not work even in FF

[06:43:01.0000] <bga>
ah

[06:44:00.0000] <bga>
saving, rename to .xhtml and now work

[06:45:00.0000] <bga>
works only FF heh

[06:45:01.0000] <bga>
* +in

[07:23:00.0000] <bfrohs>
Is it allowed to specify multiply [type] values for a form <input>? Or is there a less specific date value that allows for choosing a month or a day? Usage: Published Date for book. Publishers sometimes only specify a month (esp. if it's released on multiple days in different areas of the world), but allow for a specific day (e.g. released same day across timezones)

[07:24:00.0000] <zcorpan>
use two inputs

[07:27:00.0000] <bfrohs>
If you mean a Month and Date input, that has the downside of requiring a script to check for validation (having required on both would lock the form), as well as possible user confusion when selecting a date (when multiple fields are present, people want to fill both out, even if they're for the same thing)

[07:27:01.0000] <bfrohs>
The other possibility is using [pattern], but that removes the date picker

[07:29:00.0000] <zcorpan>
what UI do you want? a date picker that can select either a month or a date?

[07:30:00.0000] <bfrohs>
Yes, that would be great. Even if it could choose a year as well (date, with every part excluding year optional). And requiring the month could be taken care of with [pattern] (however, without a 'date-optional' [type], this is not possible without a script)

[07:31:00.0000] <zcorpan>
i guess you should list the use cases for such a thing in a bug

[07:31:01.0000] <bfrohs>
Where would be the best place to submit it?

[07:32:00.0000] <zcorpan>
the comment form in the spec files a bug

[07:32:01.0000] <zcorpan>
you need an account on w3c bugzilla if you want to comment on the bug further

[07:32:02.0000] <zcorpan>
alternatively, send an email to whatwg⊙wo (need to subscribe)

[07:34:00.0000] <bfrohs>
Thank ya

[08:08:00.0000] <smaug____>
does anyone know which all event ctors webkit supports

[08:08:01.0000] <smaug____>
I haven't manage to install any latest webkit builds to this machine, so I can't test

[08:08:02.0000] <smaug____>
though, I think only Event and CustomEvent has ctor mentioned in any spec

[08:11:00.0000] <zewt>
webgl has one, which I doubt is implemented anywhere yet

[08:12:00.0000] <zewt>
there was a thread about using it with indexeddb months ago, but I guess that hasn't happened yet

[08:13:00.0000] <zewt>
and other noise about updating dom3 events, which I guess also hasn't happened

[08:14:00.0000] <zewt>
is webgl really the only spec outside of dom4 itself using it yet? heh

[08:30:00.0000] <annevk5>
smaug____: they implemented most I think

[08:30:01.0000] <annevk5>
smaug____: I mean for most event interfaces they have

[08:30:02.0000] <annevk5>
smaug____: and then filed bugs on the specs

[08:30:03.0000] <annevk5>
smaug____: the HTML spec has event constructors defined for all its event interfaces

[08:30:04.0000] <smaug____>
well, one needs to know the order of stuff in the dictionaries

[08:31:00.0000] <smaug____>
ah

[08:31:01.0000] <smaug____>
/me looks at HTML  spec

[08:38:00.0000] <SIDKID87>
Question surrounding the MetaExtensions. When I include these (i.e. HandheldFriendly) in my HTML document I get validation errors. How do I avoid this?

[08:43:00.0000] <karlcow>
<annevk> my b is that I sort of feel that long term bandwidth will be less of an issue and everything will be 300ppi

[08:43:01.0000] <karlcow>
maybe the issue is slightly different for the b case

[08:44:00.0000] <karlcow>
it's not that much the absolute bandwidth of cell networks

[08:44:01.0000] <karlcow>
but the different between cables and wireless networks.

[08:44:02.0000] <karlcow>
if wireless gets higher speed, but cables go on a trend of super high speed

[08:44:03.0000] <annevk5>
smaug____: the order should not be important...

[08:44:04.0000] <karlcow>
there will still be the issue

[08:45:00.0000] <annevk5>
karlcow: not if you not go beyond 300ppi

[08:45:01.0000] <karlcow>
annevk5: bigger size images :) if people can 10Mb they will, no?

[08:45:02.0000] <annevk5>
karlcow: or do you expect us to transmit raw camera images from a Canon 1D or some such?

[08:45:03.0000] <karlcow>
* can use

[08:46:00.0000] <karlcow>
annevk5: people will

[08:46:01.0000] <jgraham>
(1D images are way bigger than that)

[08:46:02.0000] <jgraham>
(at least my 7D images are like 20Mb each and I guess the 1D is even bigger)

[08:47:00.0000] <annevk5>
karlcow: maybe reasonable, unless cables to home go away entirely

[08:47:01.0000] <karlcow>
so basically the speed difference in between different type of user experiences/networks.

[08:47:02.0000] <annevk5>
is a compressed JPEG for 300ppi much much larger than one for 150ppi today?

[08:47:03.0000] <smaug____>
annevk5: order is important

[08:47:04.0000] <smaug____>
because of getters

[08:48:00.0000] <annevk5>
smaug____: ah right

[08:48:01.0000] <annevk5>
smaug____: hopefully the dictionaries are interface order

[08:48:02.0000] <annevk5>
I wonder if Web IDL makes that crystal clear to everyone

[08:49:00.0000] <smaug____>
IIRC it does

[08:50:00.0000] <smaug____>
but I need to re-review

[08:51:00.0000] <SIDKID87>
<meta name="HandheldFriendly" content="True"> breaks validation, what's up with that?

[08:51:01.0000] <karlcow>
annevk5: already the case for some regions of the world. Or more exactly the cable was never the main delivery channel

[08:51:02.0000] <karlcow>
"Most people on #Internet in #Africa access thru mobile web - 85m of 110m web users - #IsisNyong'o of #InMobi at #ConvergenceAfrica #Nairobi" — http://twitter.com/tamihultman/status/144757444575375361

[08:52:00.0000] <annevk5>
SIDKID87: per http://wiki.whatwg.org/wiki/MetaExtensions it's only a proposal and might not be implemented yet in the validator

[08:52:01.0000] <annevk5>
karlcow: I know

[08:53:00.0000] <annevk5>
karlcow: and there's claims of 80mbit mobile, which is pretty close to the 120mbit I get at home

[08:53:01.0000] <annevk5>
(via cable)

[08:53:02.0000] <annevk5>
and everyone hates cables

[08:54:00.0000] <jgraham>
It is not really clear if you will get that in rural areas though

[08:54:01.0000] <jgraham>
The range will be very short

[08:54:02.0000] <jgraham>
Still, maybe it will happen eventually

[08:54:03.0000] <SIDKID87>
annevk5: Thanks - that makes sense. :)

[08:54:04.0000] <karlcow>
/me doesn't hate cables, but that is another topic :)

[08:55:00.0000] <jgraham>
In any case being able to select on screen size can be good even if both images are the same number of pixels

[08:55:01.0000] <jgraham>
But speculative prefetching with <picture> or similar solutions could be interesting

[08:55:02.0000] <jgraham>
/me wonders what happens with <video> roday

[08:55:03.0000] <jgraham>
*today

[09:07:00.0000] <zewt>
heh, i've sort of wondered about tighter integration with progressive JPEGs and resource fetching, though I'm certain it'll never happen (and not sure it would work well anyway)

[09:08:00.0000] <zewt>
for example, if you have a 300 DPI, 3-pass interlaced JPEG and you're on a much lower-resolution display, request just the first two passes from the server

[09:09:00.0000] <zewt>
then you have a single file with no waste serving multiple resource sizes (but of course the server-side complexity is way too high)

[09:10:00.0000] <karlcow>
http://pypi.python.org/pypi/NodeTree

[09:11:00.0000] <zewt>
well, I suppose all you *really* need is an index file ("1 pass: 10000 bytes; 2 passes: 30000 bytes; 3 passes: 100000 bytes"), then the client can use Content-Range (still too complex)

[09:13:00.0000] <zewt>
annevk5: another thing to consider: no matter how much bandwidth you have, waste on mobile costs

[09:14:00.0000] <zewt>
downloading 10x the amount of data and then decoding a much larger file will *always* mean, at the least, more battery use

[09:19:00.0000] <karlcow>
was trying to find more information about nodetree not quite ready yet http://arcriley.blogspot.com/2011/12/nodetree-02-released.html

[09:22:00.0000] <annevk5>
zewt: so far though the images that use more bandwidth make the most sense on phones

[09:23:00.0000] <annevk5>
there's no desktop nearing 300ppi yet in wide use

[09:23:01.0000] <ZXY>
is there any at all?

[09:23:02.0000] <ZXY>
consumer/pro grade

[09:23:03.0000] <annevk5>
I thought IBM had made something at one point

[09:23:04.0000] <annevk5>
well some company

[09:24:00.0000] <ZXY>
that's not really ibm's thing

[09:24:01.0000] <ZXY>
they really don't make any consumer products anymore

[09:33:00.0000] <smaug____>
I hope my event ctor implementation is somewhat compatible what chromium has

[09:36:00.0000] <TabAtkins_>
smaug____: Ask about it in #webkit

[09:36:01.0000] <smaug____>
I'd rather test

[09:36:02.0000] <smaug____>
but I have no idea where to get "nightly" chromium

[09:36:03.0000] <smaug____>
even the dev version doesn't seem to run on this machine

[09:36:04.0000] <smaug____>
s/run/install/

[09:36:05.0000] <zewt>
chrome's prerelease stuff is a big pain, because (last I tried it) it doesn't let you install them side-by-side

[09:36:06.0000] <zewt>
and it took a bit of digging to figure out how to go *back* to production when I was done

[09:37:00.0000] <zewt>
(iirc, going to prerelease builds was one click, going back not so much)

[09:37:01.0000] <smaug____>
but, I declare my implementation correct and if webkit does something else, I'll file webkit bugs :p

[09:37:02.0000] <zewt>
cage match

[09:39:00.0000] <zewt>
i suppose it's the usual neverending question: "do tests exist yet" :P

[09:39:01.0000] <jgraham>
Why would anyone ever run a production browser?

[09:40:00.0000] <zewt>
why would anyone ever run a prerelease browser, when everything we do these days depend son it :)

[09:40:01.0000] <annevk5>
ZXY: I thought "pro" was acceptable too

[09:40:02.0000] <annevk5>
ZXY: I was thinking of http://en.wikipedia.org/wiki/IBM_T220/T221_LCD_monitors

[09:41:00.0000] <ZXY>
ah nice

[09:41:01.0000] <annevk5>
ZXY: still only 200ppi though

[09:41:02.0000] <ZXY>
I meant to say prosumer actually

[09:41:03.0000] <ZXY>
but this is really cool

[09:43:00.0000] <zewt>
then go for it http://www.ebay.com/itm/290642425026

[09:43:01.0000] <jgraham>
Well people have been talking about 200ppi monitors for years. It shows no sign of going mainstream though

[09:43:02.0000] <zewt>
heh 48hz, ouch

[09:44:00.0000] <ZXY>
they go for like 2-4 k it looks like

[09:44:01.0000] <zewt>
and I'm sure it's really poor by other modern standards (ghosting, view angle, color accuracy, black level, etc)

[09:44:02.0000] <ZXY>
plus I think you'd need two dvi connections

[09:45:00.0000] <ZXY>
everyone knows it's just for cramming more irc windows on your screen

[09:45:01.0000] <zewt>
i just maximize irc on my side monitor, heh

[09:46:00.0000] <jgraham>
Anyway if anyone is claiming that we don't need something because this tech will be ubiquitous RSN, I will take it with an ocean full of salt

[09:49:00.0000] <smaug____>
/me uses http://html5labs.interoperabilitybridges.com/dom4events/

[09:52:00.0000] <smaug____>
Ms2ger: what is the expected behavior for  bubbles: get () { throw foo } ? :)

[09:52:01.0000] <annevk5>
jgraham: after iPad3, I expect my laptop to get a similar treatment

[09:52:02.0000] <Ms2ger>
I was hoping you'd figure that out ;)

[09:52:03.0000] <Ms2ger>
Let me check

[09:53:00.0000] <smaug____>
Ms2ger: currently the patch does what the spec say (no exceptions)

[09:53:01.0000] <smaug____>
I mean DOM4 spec

[09:53:02.0000] <smaug____>
WebIDL may hint something else

[09:53:03.0000] <Ms2ger>
Hrm, WebIDL doesn't seem clear

[09:55:00.0000] <Ms2ger>
"None of the algorithms or processing requirements in the ECMAScript language binding catch ECMAScript exceptions. Whenever an ECMAScript Function is invoked due to requirements in this section and that Function ends due to an exception being thrown, that exception MUST propagate to the caller, and if not caught there, to its caller, and so on."

[09:56:00.0000] <smaug____>
aha, so exception should propagate

[09:56:01.0000] <Ms2ger>
Sounds like it

[09:59:00.0000] <jgraham>
annevk5: I would wait and see about that. Making that kind of screen that size is going to be hugely expensive (due to low yield). I wouldn't expect it in laptops overnight or on desktops for even longer

[10:00:00.0000] <annevk5>
there's not much else I can do

[10:00:01.0000] <annevk5>
but if they put that kind of screen on a MacBook Air, yield is going to be high

[10:01:00.0000] <smaug____>
Ms2ger: thanks, fixed

[10:01:01.0000] <Ms2ger>
Thank you!

[10:07:00.0000] <zewt>
i wouldn't expect high dpi desktop/laptop monitors, because there isn't, as far as i know, much demand

[10:07:01.0000] <zewt>
you need a high dpi display for a phone because the screen's small, but for the vast majority of people (short of perhaps artists, print editors, that narrow category of users), 1920x1200 @ 24" is plenty

[10:09:00.0000] <TobiX>
/me wants to get rid of sub-pixel-AA, because it's ugly for people with good eyes...

[10:10:00.0000] <zewt>
having an lcd with the text quality of eink would be great, but I wouldn't put my money on it...

[10:13:00.0000] <karlcow>
hmmm transparent HTTP negotiation

[10:13:01.0000] <karlcow>
maybe time to implement it after all

[10:14:00.0000] <karlcow>
http://tools.ietf.org/html/rfc2295

[10:15:00.0000] <zewt>
ew

[10:15:01.0000] <Ms2ger>
Ew at ietf.org?

[10:15:02.0000] <annevk5>
oh right

[10:15:03.0000] <annevk5>
I should fix /complete/

[10:15:04.0000] <zewt>
if the idea is picking different image sizes at the HTTP level

[10:16:00.0000] <TabAtkins_>
zewt, smaug____: You can install Chrome Canary side-by-side with normal Chrome.

[10:19:00.0000] <karlcow>
zewt: the RFC is need. it disclose the choices. I will write about it. It certainly needs reediting because it is an old spec.

[10:19:01.0000] <karlcow>
but it is a spec which solves also a lot of issues

[10:19:02.0000] <zewt>
karlcow: maybe it has its uses (only skimmed the intro)--just "ew" if you were suggesting its use for the "responsive images" discussion

[10:19:03.0000] <karlcow>
for SEO, search engines in multi-lingual contexts

[10:19:04.0000] <smaug____>
TabAtkins_: where do I get Canary for linux?

[10:20:00.0000] <smaug____>
and actually, installing even dev failed for some reason

[10:22:00.0000] <zewt>
tab: looks like that's new since i looked at it last; looks like beta and dev still replace stable

[10:23:00.0000] <zewt>
new Event(1) should throw TypeError, right?

[10:24:00.0000] <annevk5>
Hixie: http://www.whatwg.org/specs/web-apps/current-work/multipage/video.html is a 404 now but I think it should return some kind of document Philip`  made at one point, no?

[10:24:01.0000] <zewt>
(doesn't in Chrome)

[10:24:02.0000] <annevk5>
zewt: no

[10:24:03.0000] <annevk5>
zewt: first argument is a string

[10:24:04.0000] <zewt>
eh yeah

[10:24:05.0000] <zewt>
new Event("", 1) then :)

[10:24:06.0000] <zewt>
(same)

[10:25:00.0000] <Ms2ger>
Yes

[10:26:00.0000] <Philip`>
annevk5: It should return a 404 with a script that redirects to whatever page has #video

[10:26:01.0000] <TobiX>
Hmm. I was wondering. GreaseMonkey added a finalUrl attribute to XMLHttpRequest responses. Would this be useful for regular XHR beside my narrow use case?

[10:28:00.0000] <zewt>
heh, two spams in two days leaking to the list

[10:28:01.0000] <zewt>
(don't really care, just unusual)

[10:30:00.0000] <Hixie>
annevk5: try regenning again, it should be fixed

[10:30:01.0000] <Hixie>
annevk5: the .htaccess file was still pointing at the complete/ 404

[10:30:02.0000] <Hixie>
annevk5: so it got a 301 while trying to serve the 404

[10:31:00.0000] <TobiX>
zewt: There is http://crportable.sourceforge.net/ for following dev-builds...

[10:31:01.0000] <annevk5>
Hixie: it's perfect now

[10:32:00.0000] <annevk5>
Hixie: it also deletes all files each time around so this problem should be gone in theory

[10:32:01.0000] <Hixie>
annevk5: cool

[10:34:00.0000] <annevk5>
hsivonen: just saw your "json" patch got landed, sweet

[10:35:00.0000] <annevk5>
hsivonen: we have implemented spec-compliant responseType "json" too

[10:35:01.0000] <annevk5>
hsivonen: in the next version we release

[10:39:00.0000] <karlcow>
zewt: what I meant with the RFC 2295 http://my.opera.com/karlcow/blog/2011/12/08/responsive-images-and-transparent-content-negotiation-in-http

[10:41:00.0000] <zewt>
it requires a blocking round-trip? that'll hurt responsiveness a lot in and of itself...

[10:42:00.0000] <zewt>
(2g is nothing if not latent)

[10:42:01.0000] <karlcow>
zewt

[10:43:00.0000] <karlcow>
not necessary

[10:43:01.0000] <karlcow>
but it could

[10:43:02.0000] <karlcow>
it depends on how you handle it.

[10:45:00.0000] <TabAtkins_>
smaug____: search for "chrome canary", or just go to http://tools.google.com/dlpage/chromesxs

[10:45:01.0000] <TabAtkins_>
zewt: Yes, beta and dev still replace stable; they don't easily coexist.

[10:47:00.0000] <TabAtkins_>
smaug____: I forget exactly how up-to-date Canary is.  I think it's a daily build off of the last green configuration.

[10:48:00.0000] <zewt>
annevk5: i wonder if the event ctor "for each dictionary member..." should be a separate, referencable algorithm, if this pattern is likely to happen more and more

[10:48:01.0000] <zewt>
(converting a webidl dictionary parameter to an interface)

[10:48:02.0000] <smaug____>
TabAtkins that page gives "Your operating system is not supported. "

[10:48:03.0000] <zewt>
(suggesting the same text for some webgl stuff)

[10:50:00.0000] <zewt>
heycam: ^ more for you I guess, since I suppose it'd go in webidl rather than dom4

[11:10:00.0000] <TabAtkins_>
smaug____: It's possible that Canary is only for windows.

[11:10:01.0000] <TabAtkins_>
smaug____: In that case, build from the tree yourself?

[11:11:00.0000] <TabAtkins_>
It's not overly difficult if you follow the Chromium instructions.

[11:11:01.0000] <smaug____>
TabAtkins: my machine is busy enough compiling Gecko

[11:12:00.0000] <annevk5>
zewt: file a bug on Web IDL?

[11:12:01.0000] <annevk5>
zewt: might be a nice construct to have if it turns out to be shorter and clearer

[11:13:00.0000] <TobiX>
smaug____: http://build.chromium.org/f/chromium/snapshots/

[11:19:00.0000] <smaug____>
annevk5: shouldn't nullable DOMStrings have '?'

[11:20:00.0000] <smaug____>
or Ms2ger

[11:20:01.0000] <smaug____>
/me is lazy to verify from WebIDL

[11:21:00.0000] <Ms2ger>
Yeah

[11:21:01.0000] <smaug____>
k

[11:21:02.0000] <smaug____>
/me should file a spec bug

[11:24:00.0000] <annevk5>
back tomorrow most likely

[11:24:01.0000] <Ms2ger>
/me waves

[12:14:00.0000] <zewt>
"Web Storage is now a Candidate Recommendation and as such, a Call for Implementations was made [CfI]" ... really?

[12:14:01.0000] <zewt>
sometimes The Process(tm) is just comic

[12:36:00.0000] <karlcow>
zewt: note that it was not mandatory

[12:36:01.0000] <karlcow>
I don't know why people still think it is mandatory per se

[12:40:00.0000] <karlcow>
"Call for Implementations. Note: The Director MAY permit the Working Group to skip this step if the entrance criteria for the next step have already been satisfied." — http://www.w3.org/2005/10/Process-20051014/tr.html#rec-advance

[12:40:01.0000] <karlcow>
the steps in the process are entrance criterias

[12:40:02.0000] <karlcow>
if you demonstrate that you met all the requirements for the targeted step

[12:40:03.0000] <zewt>
just force of habit? heh

[12:40:04.0000] <karlcow>
you are fine.

[12:41:00.0000] <karlcow>
zewt: yes!

[12:41:01.0000] <karlcow>
it's not the process which is comics

[12:41:02.0000] <Ms2ger>
Well, we don't have tests, of course

[12:41:03.0000] <karlcow>
it is the people using the process ;)

[12:41:04.0000] <zewt>
karlcow: well, i feel more comfortable making fun of the process on irc than particular individuals :)

[12:41:05.0000] <karlcow>
The process is just a tool.

[12:41:06.0000] <Ms2ger>
Art can handle it :)

[12:41:07.0000] <karlcow>
hehe

[12:43:00.0000] <karlcow>
but as a group it is perfectly reasonable that people develop tests and produce an interop report which shows that everything is implemented reasonably according to the group.

[12:43:01.0000] <karlcow>
and then move on

[12:43:02.0000] <karlcow>
and this can be done BEFORE entering CR

[12:43:03.0000] <karlcow>
:)

[12:43:04.0000] <Ms2ger>
Sure

[12:43:05.0000] <Ms2ger>
It is perfectly reasonable for people to write tests

[12:43:06.0000] <karlcow>
heh

[12:43:07.0000] <Ms2ger>
They just happen not to

[12:46:00.0000] <karlcow>
Ms2ger: hehe… I. know. that. :) I spent 5 years on trying to convince groups that it was good to prove interops. There is a huge leap compared to what was done before pre-2000. We are still not there yet.

[12:46:01.0000] <Ms2ger>
We're convinced

[12:46:02.0000] <Ms2ger>
And lazy

[12:46:03.0000] <karlcow>
lazy is the definition of a good developer. no? :)

[12:46:04.0000] <jgraham>
The process is a tool, or the people are tools? :p

[12:47:00.0000] <zewt>
Ms2ger: i wish we had a webapp for writing tests for webapp apis :P

[12:47:01.0000] <jgraham>
Surely iPhone has an app for that?

[12:47:02.0000] <Ms2ger>
Just Android

[12:47:03.0000] <karlcow>
jgraham: it depends on the circumstances and the quantity of alcohool you drunk before and how many clothes… [redacted]

[12:47:04.0000] <zewt>
there would be some irony in that

[12:47:05.0000] <Ms2ger>
Standards and iPhone? You must be kidding

[12:49:00.0000] <zewt>
Ms2ger: sure, it works like this: "we'll do what we want. then you guys can make a standard out of it"

[12:49:01.0000] <jgraham>
In other news http://www.youtube.com/watch?v=EhkxDIr0y2U is very very odd. As one would expect.

[12:50:00.0000] <jgraham>
karlcow: Redacting people's clothes?

[12:50:01.0000] <karlcow>
where's the emperor

[12:51:00.0000] <Ms2ger>
Hixie's over there

[12:54:00.0000] <karlcow>
is he naked

[13:00:00.0000] <karlcow>
http://www.w3.org/community/autowebtest/

[13:00:01.0000] <karlcow>
the group has been created

[13:03:00.0000] <zewt>
does everything take a community group now? heh

[13:11:00.0000] <karlcow>
zewt: yup it seems. At least people create groups, but it doesn't mean they are active. Some do, some have a flat ECG

[13:12:00.0000] <zewt>
karlcow: smells like the usual "i want this to happen but can't/won't do it myself, so i'll create a [forum|mailing list|sourceforge project] and hope somebody will do it for me"

[13:12:01.0000] <zewt>
aka, noise

[13:12:02.0000] <karlcow>
yup… silent freedom

[13:13:00.0000] <zewt>
in this case, i think if someone wanted to create a webapp like this, they'd just ... do it, and mailing lists and CGs and whatever would come after there's something to show

[13:14:00.0000] <zewt>
(it's not like something that needs buy-in from vendors or anything like that)

[13:14:01.0000] <karlcow>
the Test automation thing has been started, if I understood correctly, to have a more formal TestAutomation API based on http://code.google.com/p/selenium/wiki/JsonWireProtocol

[13:15:00.0000] <karlcow>
which is now implemented for most browsers

[13:15:01.0000] <karlcow>
with at least two officially supported driver Chrome and Opera

[13:16:00.0000] <zewt>
that's a bit more low-level, yeah that would need UA work

[13:16:01.0000] <jgraham>
There is already a WG for that

[13:16:02.0000] <jgraham>
There is a WG to standardise webdriver

[13:17:00.0000] <jgraham>
and an IG for other testing concerns

[13:17:01.0000] <jgraham>
Adding a CG isn't obviously helpful unless it supercedes one of the other groups

[13:17:02.0000] <jgraham>
(and I don't see why it would in this case)

[13:18:00.0000] <karlcow>
ah jgraham I might have mixed the two, my bad.

[13:18:01.0000] <zewt>
a page where I could just enter some code, have the code run in a bunch of browsers running in VMs somewhere, and have the results spat back at me would be cool

[13:18:02.0000] <karlcow>
crossing information with space-time warps and emperor's clothes

[13:18:03.0000] <zewt>
perhaps with the results being flaggable if they come back inconsistent

[13:18:04.0000] <karlcow>
long week^W year

[13:19:00.0000] <zewt>
now i want to hack something like this together

[13:21:00.0000] <karlcow>
/me sees http://lists.w3.org/Archives/Public/public-test-infra/

[13:21:01.0000] <karlcow>
and http://lists.w3.org/Archives/Public/public-test-infra/2011OctDec/0031.html

[13:21:02.0000] <karlcow>
and http://www.w3.org/2011/08/browser-testing-charter.html

[13:22:00.0000] <jgraham>
Yeah. Mike is also going to use it to standardise the console object

[13:22:01.0000] <zewt>
eg. let me type in "new Event("", "dogs");</script>", and show the various results (throws "not a constructor" vs. throws TypeError vs. returns an Event) in lots of browsers and browser versions

[13:23:00.0000] <zewt>
s-</script>--

[13:23:01.0000] <jgraham>
zewt: Like the live dom viewer but distributed

[13:23:02.0000] <zewt>
right

[13:23:03.0000] <jgraham>
That sounds nice to use and nighmarish to run

[13:23:04.0000] <zewt>
combined with being able to save lists of cases, to auto-construct test tables, etc

[13:24:00.0000] <zewt>
yeah, integrating with vms running test browsers would be the annoying part

[13:24:01.0000] <zewt>
especially when some jerk tries while(1);

[13:29:00.0000] <zewt>
similarly useful would be rendering HTML in each and returning screenshots and DOM trees

[13:32:00.0000] <jgraham>
There are services that will do screenshots. I guess you could send them a live dom viewer URL

[13:46:00.0000] <heycam>
annevk5, yes dictionary members are required to be got from the js object in the order they appear on the dictionary

[14:38:00.0000] <jamesr>
Hixie: yt?

[14:38:01.0000] <Hixie>
here

[14:38:02.0000] <jamesr>
Hixie: potentially dumb question. in http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#list-of-active-timeouts , what removes timer that have fired from the 'list of active timeouts'?

[14:39:00.0000] <jamesr>
i would expect step 1 of http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#get-the-timed-task to do it

[14:39:01.0000] <jamesr>
or possibly step 10 of http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#list-of-active-timeouts

[14:39:02.0000] <jamesr>
but i don't see it

[14:39:03.0000] <jamesr>
(my real motive here is to figure out how to spec similar behavior in the RAF spec)

[14:40:00.0000] <Hixie>
um

[14:41:00.0000] <Hixie>
it would appear that not only is the task never removed from the list of active timeouts

[14:41:01.0000] <Hixie>
but that the task's presence on the list of active timeouts has no effect

[14:41:02.0000] <Hixie>
that's embarassing

[14:41:03.0000] <jamesr>
it's used for lookups in cleartimeout()

[14:41:04.0000] <jamesr>
if nothing matching that ID is in the list of active timeouts, clearTimeout() does nothing

[14:41:05.0000] <jamesr>
ok i guess i won't cargo cult this particular mechanism :)

[14:42:00.0000] <Hixie>
yeah, it seems clearTimeout() as specced does nothing black-box detectable

[14:42:01.0000] <Hixie>
"oops"

[14:42:02.0000] <Hixie>
there should be a step before step 10 that checks if the task is still in the list

[14:42:03.0000] <Hixie>
and if not aborts

[14:42:04.0000] <jamesr>
also, anyone know what "&#x2002;" is?

[14:43:00.0000] <Hixie>
en space

[14:43:01.0000] <Hixie>
http://software.hixie.ch/utilities/cgi/unicode-decoder/character-identifier?keywords=2002

[14:43:02.0000] <Hixie>
i'll file a bug on the timeout thing

[14:44:00.0000] <Hixie>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=15120

[14:45:00.0000] <jamesr>
fun fun

[14:45:01.0000] <jamesr>
dammit, someone edited my spec to reference http://www.w3.org/TR/2010/WD-html5-20100624 as its HTML reference :/

[14:45:02.0000] <Hixie>
edit it back

[14:46:00.0000] <Hixie>
and put a comment next to it saying not to edit your spec without speaking to you

[14:46:01.0000] <Hixie>
/me has a number of such comments in his specs

[14:46:02.0000] <Hixie>
for similar reasons

[14:58:00.0000] <jamesr>
Hixie: another question - with regards to http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#top-level-browsing-context, is a window.open()'d document a nested browsing context or a separate top-level browsing context?

[14:59:00.0000] <Hixie>
it's an auxiliary one iirc

[14:59:01.0000] <Hixie>
why would it be a nested one?

[15:00:00.0000] <jamesr>
i didn't think it would be, but i can't find window.open()

[15:00:01.0000] <jamesr>
just want to verify that top level browsing contexts are 1:1 with window/tabs

[15:01:00.0000] <jamesr>
ah there it is. ok cool

[15:02:00.0000] <Hixie>
top level browsing contexts are 1:1 with window/tabs to a first approximation

[15:02:01.0000] <Hixie>
there have been browsers with multiple top-level browsing contexts per window, e.g. in sidebars

[15:03:00.0000] <jamesr>
right. they're separate enough for my concerns here, i think

[15:03:01.0000] <jamesr>
i think chromium extension popups are also their own top-level browsing contexts

[15:04:00.0000] <Hixie>
modulo sandboxing, a top-level browsing context is one where window.top===window

[15:04:01.0000] <Hixie>
sandboxing makes that harder to guarantee

[15:35:00.0000] <jamesr>
Hixie: how come http://www.whatwg.org/specs/web-apps/current-work/multipage/browsers.html#list-of-the-descendant-browsing-contexts works but http://www.whatwg.org/html#list-of-the-descendant-browsing-contexts does not?

[15:35:01.0000] <jamesr>
i was under the impression the latter format should work

[15:36:00.0000] <Hixie>
jamesr: bug in webkit

[15:36:01.0000] <jamesr>
><

[15:36:02.0000] <jamesr>
bug #?

[15:36:03.0000] <Hixie>
wait

[15:36:04.0000] <Hixie>
no

[15:36:05.0000] <Hixie>
the bug i was referring to was that we lost the frag id on a redirect

[15:36:06.0000] <jamesr>
http://www.w3.org/TR/html5/browsers.html#active-document works

[15:36:07.0000] <jamesr>
well, it still links you to a TR

[15:36:08.0000] <Hixie>
my bad

[15:36:09.0000] <Hixie>
hold on

[15:38:00.0000] <Hixie>
looks like anne no longer includes link-fixup.js in his upload

[15:38:01.0000] <Hixie>
i wonder why

[15:38:02.0000] <Hixie>
jamesr: minor temporary problem; anne will fix it when he gets back on i imagine

[15:39:00.0000] <jamesr>
Hixie: ok cool. i'll leave links in place and assume they'll start working via magicks

[15:39:01.0000] <Hixie>
jamesr: looks like the recent fix to blow away old page in the multipage thing also dropped the link-fixup script

[15:39:02.0000] <Hixie>
annevk5: ping ^

[15:40:00.0000] <Hixie>
in the meantime i can yank it from svn

[15:40:01.0000] <Hixie>
jamesr: try now

[15:40:02.0000] <jamesr>
Hixie: wfm!

[15:40:03.0000] <jamesr>
thanks

[15:44:00.0000] <Hixie>
ok i made my script put in the link-fixup.js file in itself

[15:44:01.0000] <Hixie>
so anne doesn't have to do anything


2011-12-09
[16:45:00.0000] <ZXY>
hey guys, I seem to be getting a different result for when I use line-height:1.5 vs 1.5em on headings

[16:46:00.0000] <ZXY>
on normal text it seems to work the same

[16:47:00.0000] <TabAtkins>
Yes, the two are quite different.

[16:47:01.0000] <TabAtkins>
1.5em computes to a length, and inherits as such.

[16:47:02.0000] <TabAtkins>
1.5 stays as a number, so it's always 1.5 times the current font-size, even when inherited.

[16:47:03.0000] <ZXY>
ah, that makes sense, thanks

[16:48:00.0000] <TabAtkins>
no problem

[17:09:00.0000] <ZXY>
http://www.w3.org/Style/CSS/specs#css3-marquee

[17:09:01.0000] <ZXY>
awe come on now, really?

[17:13:00.0000] <heycam>
  r

[17:13:01.0000] <heycam>
 re

[17:13:02.0000] <heycam>
rea

[17:13:03.0000] <heycam>
eal

[17:13:04.0000] <heycam>
all

[17:13:05.0000] <heycam>
lly

[17:14:00.0000] <heycam>
ly!

[17:14:01.0000] <heycam>
y!

[17:14:02.0000] <heycam>
!

[17:14:03.0000] <rillian_>
<marquee>

[17:15:00.0000] <erlehmann>
i hate every single one of you

[19:29:00.0000] <zewt>
heycam: fyi, what i have so far based on last night (a bit on the clumsy side): http://pastebin.com/C57S0Th6

[19:29:01.0000] <zewt>
not sure about that first step (meant to pull in the dictionary with defaults when omitted)

[19:30:00.0000] <zewt>
(various pieces of that pulled from html and dom4, refs lost in the paste)

[19:31:00.0000] <heycam>
zewt, I think that's ok

[19:31:01.0000] <heycam>
rather than say "for each dictionary member defined" you should probaly say "for each dictionary member present"

[19:31:02.0000] <heycam>
and link that present to the web idl definition

[19:31:03.0000] <zewt>
that's pulled verbatim from dom4 event init, iirc

[19:31:04.0000] <heycam>
ok

[19:31:05.0000] <heycam>
i haven't reviewed that ;)

[19:31:06.0000] <zewt>
i mentioned earlier, that particular step might be something to give its own algorithm in webidl

[19:31:07.0000] <heycam>
ah right

[19:32:00.0000] <zewt>
since this seems like a pattern that'll come up a lot

[19:32:01.0000] <heycam>
like "assign this dictionary to this object"

[19:32:02.0000] <zewt>
yeah

[19:32:03.0000] <heycam>
still, it's not many words

[19:36:00.0000] <zewt>
yeah

[19:36:01.0000] <zewt>
has a bunch of refs though

[19:37:00.0000] <zewt>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#constructing-events

[19:37:01.0000] <zewt>
(the "if there is an argument" prefix only makes sense when the dictionary has no defaults)

[19:39:00.0000] <heycam>
yeah. ok, you've convinced me, I'll add a definition for it.

[19:55:00.0000] <zewt>
technically, the "empty dictionary" part in the first step is funny (it really should be the object type in the bound language, since it's the input to the conversion in the next step), but I guess it's good enough

[20:00:00.0000] <heycam>
zewt, oh yeah

[20:01:00.0000] <zewt>
or alternatively, it could say (abbreviated) "if invoked with a second argument, convert the argument; otherwise let options be a new value of type X with all members not present"

[20:01:01.0000] <zewt>
or something like that

[00:47:00.0000] <rniwa>
anyone familiar with attribute nodes?

[01:01:00.0000] <jgraham>
rniwa: Not really. What was the question?

[01:01:01.0000] <rniwa>
jgraham: oh I was about to ask if you can nest attribute nodes

[01:01:02.0000] <rniwa>
jgraham: but clearly not

[01:01:03.0000] <rniwa>
jgraham: we only allow text nodes and entities

[01:02:00.0000] <rniwa>
i guess we were sane enough not to allow that :)

[01:02:01.0000] <rniwa>
jgraham: thanks for pong though.

[01:02:02.0000] <rniwa>
/me wants to kill attribute nodes altogether.

[01:03:00.0000] <rniwa>
jgraham: i've been making some perf. improvements in dom, and we had some serious design flaw in the way child node lists are cached

[01:03:01.0000] <rniwa>
jgraham: in fact, those cache were making our node insertion algorithm O(n) where n is the depth of DOM

[01:03:02.0000] <rniwa>
well, it still is O(n)

[01:04:00.0000] <rniwa>
until I land the patch i'm working on now and then land a subsequent patch that make it O(1)

[01:04:01.0000] <jgraham>
Cool

[01:04:02.0000] <rniwa>
jgraham: yeah, it's good to make something O(1) :D

[01:04:03.0000] <rniwa>
jgraham: node removal appears to be tricker

[01:05:00.0000] <rniwa>
jgraham: due to ranges :(

[01:05:01.0000] <rniwa>
auto-updates are so expensive

[01:05:02.0000] <rniwa>
and for historical reasons, we have 4 rangeboundarypoint-like objects for selection

[01:06:00.0000] <rniwa>
jgraham: I've learned that we want to avoid having to decide whether a node X belongs in the subtree of another node Y at all cost.

[01:07:00.0000] <rniwa>
it's super expensive!

[01:08:00.0000] <jgraham>
Yeah, that makes sense :)

[02:25:00.0000] <annevk5>
heycam|away: so is the overloading/defaulting only a problem for primitive ECMAScript types?

[02:25:01.0000] <annevk5>
heycam|away: I mean if you have Document or DocumentFragment it does not much matter as far as I can tell

[02:58:00.0000] <silentimp>
Hi all

[03:00:00.0000] <silentimp>
I want to ask: is there any polyfill based on JavaScript implementation of HTML Editing APIs specification created? (http://blog.whatwg.org/html-editing-apis-specification-ready-for-implementer-feedback)

[03:00:01.0000] <silentimp>
Or perhaps editor based on that script?

[04:49:00.0000] <FlorianX>
Hixie annevk5: It's done! Here you can find my thesis: http://post.ly/4CtMI  The official Thanksgiving you can find on page IV :-)

[05:26:00.0000] <annevk5>
cool

[05:43:00.0000] <annevk5>
wiki still gets some spam each day :(

[05:44:00.0000] <annevk5>
but slowly all those users will be blocked

[05:44:01.0000] <silentimp>
nya Ж3

[05:44:02.0000] <silentimp>
:3   *

[05:45:00.0000] <Hypah>
I motion for the direct integration of ActionScript 3.0 into HTML6

[05:45:01.0000] <hsivonen>
the "json" responseType found its way to mozilla-central. still a little while before it gets into actual Nightly channel builds

[05:45:02.0000] <Ms2ger>
How about Java?

[05:46:00.0000] <hsivonen>
/me has learned not to say there's an implementation before the nightlies have spun

[05:46:01.0000] <hsivonen>
on public-webapps that is

[05:51:00.0000] <annevk5>
FlorianX: if you want you can write something about it on the WHATWG blog

[05:52:00.0000] <annevk5>
FlorianX: either in German or English

[05:52:01.0000] <annevk5>
hsivonen: still cool :)

[05:56:00.0000] <hsivonen>
FlorianX: why is the Scribd embed Flash? Didn't they "switch to HTML5" a while ago?

[06:00:00.0000] <hsivonen>
FlorianX: did the professor complain about the references not pointing to scientific journals?

[06:02:00.0000] <hsivonen>
(I'm totally OK with pointing to where the interesting information is. When I was writing my master's thesis, the professor did bring up the issue of scientific references.)

[06:09:00.0000] <silentimp>
Is there any polyfill of HTML Editing APIs specification (http://dvcs.w3.org/hg/editing/raw-file/tip/editing.html) based on (http://dvcs.w3.org/hg/editing/raw-file/tip/implementation.js) ?

[06:22:00.0000] <Ms2ger>
No

[06:24:00.0000] <FlorianX>
hsivonen: I think he has no problem with this

[06:24:01.0000] <hsivonen>
FlorianX: cool

[06:25:00.0000] <FlorianX>
hsivonen: posterous embed it automatically

[06:25:01.0000] <FlorianX>
so i cant choose in which way

[06:26:00.0000] <FlorianX>
annevk5: could i post the text of the other Blog? ^^

[06:28:00.0000] <silentimp>
Ms2ger: is there any sense to try write one? Or spec will change so seriously that writing somesing make no sense at the moment?

[06:29:00.0000] <Ms2ger>
Dunno, most of it is implemented in browsers already

[06:30:00.0000] <Ms2ger>
Hrm

[06:30:01.0000] <Ms2ger>
http://w3c-test.org/webapps/DOMCore/tests/submissions/AryehGregor/interfaces.html doesn't seem to log anything

[06:39:00.0000] <silentimp>
Ms2ger: at the moment in all 4 main browser engines contenteditable блок generate different code and this code had anything to do with specification. We need polyfill to have standard suport in older browsers also.

[06:39:01.0000] <Ms2ger>
Then go for it :)

[06:40:00.0000] <silentimp>
Yep :)

[06:40:01.0000] <silentimp>
I just hope that someone already do something ))))

[07:30:00.0000] <AryehGregor>
Ms2ger, I forgot to push my changes to make it work with idlharness.js changes.

[07:30:01.0000] <AryehGregor>
Fixed now.

[07:30:02.0000] <Ms2ger>
Ah, great

[07:41:00.0000] <zewt>
anyone have a notion off-hand of how common UTF-8 is in Chinese pages?

[07:42:00.0000] <zewt>
and/or whether Chinese UTF-8 pages actually tend to set @lang?

[07:43:00.0000] <zewt>
curious about the fact that Firefox defaults to Japanese fonts (which I think is a good thing, encouraging people to set @lang, but I'm surprised it doesn't cause compat problems)

[07:56:00.0000] <kennyluck>
zewt, I think there's been discussions about the Japanese font issues in the Mozilla Taiwan community which handles the l10n for zh-TW.

[07:58:00.0000] <kennyluck>
zewt, I am pretty sure the answer to the @lang question is no. Although Google actually sends it...

[07:59:00.0000] <kennyluck>
(the Google part doesn't seem to hold anymore although I am not sure…)

[07:59:01.0000] <zewt>
it seems like either 1: firefox is broken for chinese users on lots of utf-8 pages, 2: chinese users don't use utf-8 much, or 3: chinese users set @lang

[08:00:00.0000] <kennyluck>
zewt, when you say Chinese users, do you mean zh-CN or zh-TW or both?

[08:01:00.0000] <zewt>
both (to the extent that they both use different glyphs than Japanese)

[08:02:00.0000] <kennyluck>
Well, I think Japanese and Traditional Chinese share quite a few characters/glyphs. I am not sure though.

[08:02:01.0000] <zewt>
i think they share a lot more, but still differ

[08:03:00.0000] <zewt>
i'm wondering because it would be great if other browsers could follow suit in this, encouraging CJK users to set @lang

[08:04:00.0000] <zewt>
(as opposed to heuristics, etc)

[08:05:00.0000] <kennyluck>
zewt, I just randomly view the source of three pages and see no @lang set.

[08:05:01.0000] <zewt>
are they utf-8?

[08:06:00.0000] <kennyluck>
I am using ja-i18n browsers by the way, and I see nothing broken.

[08:06:01.0000] <kennyluck>
l10n

[08:06:02.0000] <kennyluck>
yes

[08:07:00.0000] <zewt>
well, if you can't read chinese, you probably wouldn't notice if it's using the wrong glyphs :)

[08:08:00.0000] <kennyluck>
zewt, I read Chinese and I am a Chinese, I just happen to use a ja laptop so all my softwares are in ja.

[08:09:00.0000] <zewt>
kennyluck: -CN or -TW?

[08:09:01.0000] <zewt>
(identifying people by language codes; welcome to the future)

[08:09:02.0000] <kennyluck>
zh-Hant :p

[08:10:00.0000] <zewt>
now you're just not being fair :P

[08:14:00.0000] <zewt>
is it using a JA font for those pages for you?

[08:15:00.0000] <kennyluck>
zewt, I always want a API to let me know what font the page is showing me T__T. That is, I really can't tell.

[08:16:00.0000] <zewt>
yeah. though, i sort of prefer pages not being able to tell, so long as the default handling is so wildly different across browsers

[08:17:00.0000] <zewt>
it's one less thing causing backwards-compat problems that would prevent browsers from converging

[08:57:00.0000] <kennyluck>
zewt, OK, in MacOSX, those pages indeed give me JA font, HiraKakuPro, which has 20317 glyphs. I think this number is big enough to cover common Chinese uses. There's also HiraginoSansGB, which has 29064 glyphs, which covers all Chinese characters, but these two are very similar to the point that I probably can't tell if a page uses both.

[08:58:00.0000] <kennyluck>
They are both in the Hiragino family.

[09:07:00.0000] <ebwise1>
hello world,

[09:07:01.0000] <ebwise1>
when using input type=number, is there a way to preserve a leading zero?

[09:12:00.0000] <zewt>
kennyluck: the problem is where the glyphs differ between languages, not just having the codepoints at all

[09:14:00.0000] <zewt>
i've heard vague mentions that Japanese users seem to be more sensitive to this than Chinese users; perhaps that's why Japanese is the detail (squeaky wheel)

[09:15:00.0000] <zewt>
default

[09:17:00.0000] <kennyluck>
zewt, yeah, if you are talking about this → http://en.wikipedia.org/wiki/Han_Unification#Examples_of_language_dependent_characters , I would say it really wouldn't be an incentive for people to use lang at all.

[09:17:01.0000] <zewt>
kennyluck: i think it is for Japanese users, at least

[09:18:00.0000] <zewt>
and more generally: if the results of choosing the wrong language font bothers the actual users, they'll use it; otherwise it doesn't matter (as much) if they don't

[09:20:00.0000] <zewt>
(which at least for the font problem, I think is OK)

[09:23:00.0000] <zewt>
fyi, IE uses the user's locale to choose (which is *bad*), and Opera apparently uses heuristics

[09:27:00.0000] <kennyluck>
agreed that using locale to make the choice is ultimate evil (ex. default encoding)

[09:27:01.0000] <zewt>
yep, the problems are almost 1:1

[09:30:00.0000] <zewt>
(perhaps worse, in a sense, because it causes problems that are very hard for non-readers to notice)

[10:01:00.0000] <Hixie>
ebwise1: in the rendering or in the submission?

[10:35:00.0000] <AryehGregor>
Oh, no.  Now Gmail's rich-text editor also has the broken RTL handling of Google Docs.

[10:36:00.0000] <zewt>
google likes to break things badly, then propagate the badness one by one to each of their other products

[10:36:01.0000] <zewt>
so you see one product to go hell, and you know it'll be just a short time until the horrors reach something you actually use

[10:36:02.0000] <AryehGregor>
Protip: "left" means "visual left", not "logical left".  It's an arrow, it points left.  That's a visual direction.  People who read RTL languages do not think a leftward-pointing arrow means "move cursor right".

[10:36:03.0000] <AryehGregor>
Ugh.

[10:36:04.0000] <AryehGregor>
Fortunately, I use plaintext e-mail almost exclusively.

[10:37:00.0000] <TabAtkins>
Oh jeezus.

[10:37:01.0000] <AryehGregor>
No, wait.

[10:37:02.0000] <AryehGregor>
Hmm.

[10:37:03.0000] <AryehGregor>
Maybe it's erratic.

[10:37:04.0000] <AryehGregor>
Now it seems to work.

[10:37:05.0000] <AryehGregor>
In Gmail, at least.

[10:37:06.0000] <zewt>
gmail's editor is nothing if not erratic

[10:37:07.0000] <AryehGregor>
In Docs, no.

[10:37:08.0000] <zewt>
editing quotes in it is an adventure

[10:37:09.0000] <AryehGregor>
Test-case: paste a Hebrew word like קידושין into Docs, try navigating with arrow keys.

[10:37:10.0000] <zewt>
by which i mean i feel like I'm playing Shadowgate, and if I touch the wrong thing I'll get sucked out into space

[10:37:11.0000] <AryehGregor>
Repeat in any sane editor.

[10:38:00.0000] <AryehGregor>
Observe different results.

[10:38:01.0000] <AryehGregor>
Also, it puts the cursor in the wrong place sometimes when there are two possible places to put it (which happens when you mix LTR and RTL).

[10:38:02.0000] <zewt>
AryehGregor: navigating right works for me (currently...), though navigating right and then left is broken

[10:39:00.0000] <AryehGregor>
Like if you have abcABC, and the cursor is logically between "c" and "A", visually it will look like abcCBA, and the cursor could visually be to the right of A or to the right of c.

[10:39:01.0000] <AryehGregor>
There are conventions here, and Docs gets it wrong sometimes.

[10:39:02.0000] <zewt>
eg. if I hit right until I go to the next line, it works; but if I then press left, it goes to the leftmost edge of the previous line, instead of undoing the previous right press

[10:39:03.0000] <AryehGregor>
zewt, what does "it works" mean?  The cursor moves visually right when you press right, even in RTL?

[10:39:04.0000] <AryehGregor>
That's not what I see.

[10:40:00.0000] <zewt>
yeah

[10:40:01.0000] <AryehGregor>
Weird.

[10:40:02.0000] <kennyluck>
Do people find whatwg⊙lwo more open than www-style? And if so, why?

[10:40:03.0000] <zewt>
(bear in mind that google regularly gives different versions of code to different users)

[10:40:04.0000] <zewt>
also, FWIW, i'm testing in FF8

[10:40:05.0000] <TabAtkins>
kennyluck: I would assume that asking in a room full of standards wonks and browser devs won't give you a very useful audience for the question. ^_^

[10:41:00.0000] <zewt>
who else regularly posts on those lists? heh

[10:42:00.0000] <kennyluck>
TabAtkins, hmm.. OK. I am just curious. I wonder if it Is this channel that makes the difference.

[10:43:00.0000] <AryehGregor>
/me found www-style pretty open when he used to frequent it

[10:43:01.0000] <zewt>
i've rarely found any list particularly less open than others

[10:43:02.0000] <zewt>
(never followed that particular one)

[10:46:00.0000] <TabAtkins>
kennyluck: I started following both lists at the same time, very early in my web dev career.  I found them similar.

[11:08:00.0000] <ebwise>
Hixie: in the rendering and submission the leading zero is removed. it seems to happen when the field loses focus after entry

[11:12:00.0000] <Ms2ger>
ebwise, well yes, it doesn't mean anything

[11:13:00.0000] <ebwise>
Ms2ger: leading zeros are significant when you are working with things like zip codes

[11:13:01.0000] <Ms2ger>
ZIP codes aren't numbers

[11:14:00.0000] <Ms2ger>
Use <input pattern=[0-9]{4}> or whatever

[11:14:01.0000] <TabAtkins>
Yes, they're numeric text.  You want the number keypad on a phone, but not the numeric behavior.

[11:14:02.0000] <TabAtkins>
This is a job for the input_mode or whatever attribute on text inputs, which is getting evidence collected for it on the whatwg wiki.

[11:14:03.0000] <zewt>
Ms2ger: stabbing people who lock zip codes to 5 digits, because i have to use 9, heh

[11:15:00.0000] <TabAtkins>
zewt: You

[11:15:01.0000] <zewt>
me.

[11:15:02.0000] <TabAtkins>
zewt: You're actually forced to?

[11:15:03.0000] <zewt>
well it's a little more complex than that

[11:15:04.0000] <zewt>
if someone uses USPS, i either have to use 9-digit, or specify my po box

[11:15:05.0000] <hober>
I thought we disabled wiki account creation?

[11:15:06.0000] <zewt>
i prefer not to specify a po box, because for a lot of shippers that'll either 1: force them to use usps instead of ups/fedex, or 2: trigger a "we don't support po boxes" error

[11:16:00.0000] <zewt>
much simpler to use my street address and 9-digit zip, which works everywhere

[11:16:01.0000] <TabAtkins>
Hm, interesting.

[11:16:02.0000] <zewt>
... except with incompetent shippers, who read my 9-digit, and then truncate it to 5

[11:16:03.0000] <zewt>
gotta save on ink, I guess?

[11:16:04.0000] <TabAtkins>
Man, those pens are expensive.

[11:17:00.0000] <TabAtkins>
Like, 50 cents.

[11:17:01.0000] <TabAtkins>
I'm not made out of cash!

[11:18:00.0000] <zewt>
(it doesn't make stuff not get delivered, at this point; but it does make postal employees give me angry looks)

[11:19:00.0000] <gsnedders>
More users complaining about sites using WebKit prefixed CSS properties not working as well as in WebKit-based browsers. :(

[11:20:00.0000] <ebwise>
so, it seems like the input type attribute is specific to the uses of "numbers" as data input, where number is strictly for INT/FLOAT type data, where month is just for month(and year), tel is just for telephone, and the solution for zip codes is "text" -- even though these can all essentially be reflected by numeric data? is that right?

[11:20:01.0000] <gsnedders>
ebwise: Right

[11:20:02.0000] <zewt>
ebwise: zip codes in the US--the equivalents for other countries, not necessarily

[11:21:00.0000] <gsnedders>
Surprisingly China appears to be quite bad for relying upon -webkit-

[11:21:01.0000] <zewt>
(more generally, "postal codes")

[11:21:02.0000] <TabAtkins>
ebwise: All of those can get different input UIs, too.  Numbers get a different keypad than phone numbers (which may allow address-book to be easily used), while month may expose month names.

[11:24:00.0000] <ebwise>
ok, i guess that clarifies the semantics for me, thanks

[11:24:01.0000] <zewt>
(9-digit zip codes typically contain a hyphen, too)

[11:28:00.0000] <ebwise>
zewt: true, but many US forms are designed to require the first 5 digits and make the last 4 optional by breaking the sections into two input fields. i am not saying that is the right way of doing things, but pointing out that hyphens are not always part of the input.  anyway, wouldnt "3-2" be a number? ^_^ (jokes)

[11:30:00.0000] <zewt>
breaking zip codes into two fields is another thing that makes me want to stab people with a pen (thereby wasting yet more ink)

[11:31:00.0000] <ebwise>
use a pencil?

[11:35:00.0000] <astearns>
zewt: is breaking up phone numbers into 3-4 digit fields also pen-stabbing-worthy?

[11:35:01.0000] <zewt>
even more so

[11:36:00.0000] <zewt>
it's outright obnoxious

[11:37:00.0000] <zewt>
annoying to type, prevents my browser from autocompleting, prevents pasting

[11:37:01.0000] <gsnedders>
Do people in the US know their phone numbers in 3/4 digit segments?

[11:37:02.0000] <zewt>
yes

[11:38:00.0000] <zewt>
i mean, they're grouped as 3-3-4 to make it easier to remember

[11:38:01.0000] <ebwise>
gsnedders: very much so

[11:41:00.0000] <TabAtkins>
astearns: Omigod, yes, it's horribad.

[11:42:00.0000] <TabAtkins>
The correct telephone interface is to accept whatever the hell, then strip out everything but digits for storage.

[11:42:01.0000] <TabAtkins>
Then format as desired on output.

[11:42:02.0000] <astearns>
TabAtkins: oh yes, I agree. I was just curious about the perimeter is zewt's pen-stabbing zone

[11:42:03.0000] <zewt>
i had a lot of *cough* fun trying to ship something to Korea once

[11:42:04.0000] <astearns>
s/is/of/

[11:43:00.0000] <zewt>
where the shipping company (don't remember which) wanted me to split the address apart into its tiny component sections

[11:43:01.0000] <zewt>
and of course, korea has utterly different conventions for that than the US; took like half an hour of searching to figure it all out

[11:45:00.0000] <zewt>
Changhang-Dong, Ilsandong-Gu, Koyang-Si, 410-837 Kyonggi

[11:45:01.0000] <zewt>
D:

[11:46:00.0000] <jgraham>
I would like to claim that US sites are particularly bad about not realising the rest of the world exists. But I am pretty sure that I have had European airlines ell me that I can only use "lette characters" in my address if I enter Linköping

[11:46:01.0000] <jgraham>
+r

[11:47:00.0000] <smaug____>
åäö are hard

[11:47:01.0000] <jgraham>
Although I say airlines and I am reasnably sure I mean Ryanair which is more like mobile torture services

[11:48:00.0000] <zewt>
i'd hope that international shipping services, at least, would know about the rest of the world

[11:48:01.0000] <zewt>
(but i'm pretty sure this was USPS, so ...)

[11:49:00.0000] <gsnedders>
jgraham: Lkpg? That's a place? Oh, I never heard of anything that happened there.

[11:49:01.0000] <gsnedders>
Must be really dull.

[11:49:02.0000] <Ms2ger>
I hear they have their own IRC

[11:50:00.0000] <gsnedders>
Wow, I wonder if it supports Unicode.

[11:50:01.0000] <gsnedders>
Or declares any encoding.

[11:50:02.0000] <jgraham>
It is more like their own NNTP

[11:50:03.0000] <gsnedders>
Wait, the rest of the world might have heard of it if it did that.

[11:50:04.0000] <gsnedders>
jgraham: I sent you an inline reply, did you not see it?

[11:50:05.0000] <gsnedders>
Oh, wait, you're not using the elisp client.

[11:51:00.0000] <jgraham>
I am also told that Judas Priest are the forthcoming local attraction

[11:52:00.0000] <gsnedders>
jgraham: Waitwhat, a band people might have actually heard of playing in Lkpg?

[11:52:01.0000] <gsnedders>
Is the end of the world coming soon?

[11:52:02.0000] <jgraham>
A band that people from the 70s might have heard of

[11:52:03.0000] <gsnedders>
Woah. The Cloetta Center can hold 11.5k, I'm surprised, given nothing ever happens in Lkpg.

[11:53:00.0000] <gsnedders>
"Some other notable music acts include Deep Purple, Europe, John Fogerty, Toto, W.A.S.P. and Whitesnake."

[11:54:00.0000] <gsnedders>
Of those I have only heard of Deep Purple.

[11:54:01.0000] <gsnedders>
Just… okay.

[11:55:00.0000] <jgraham>
Seriously? You must have heard of the others

[11:55:01.0000] <gsnedders>
Seriously.

[11:56:00.0000] <jgraham>
Even I have heard of several of the others and I spent ll afternoon listening to waht could only be described as lesbian swing-pop (yes, I made that genre up. But it is awesome nonetheless)

[11:56:01.0000] <zewt>
that sounds like a pop'n'music "genre"

[11:56:02.0000] <zewt>
not that the odds of anyone knowing what that is in here are very high

[11:56:03.0000] <gsnedders>
jgraham: You listen to weird music. But you'd say the same of me.

[11:56:04.0000] <jgraham>
Europe were responsible for "The Final Countdown"

[11:56:05.0000] <gsnedders>
jgraham: Oh, okay

[11:57:00.0000] <jgraham>
Toto for "Africa" and "Hold the Line"

[11:57:01.0000] <gsnedders>
jgraham: You will now have me listening to 80s music for the rest of the evening >_>

[11:57:02.0000] <smaug____>
Whitesnake... I so much wish I had seen it when Steve Vai was playing in the band.

[11:57:03.0000] <jgraham>
Whitesnake were a popular metal band

[11:58:00.0000] <jgraham>
I've never heard of the other two

[11:58:01.0000] <Ms2ger>
/me doesn't know any

[12:00:00.0000] <jgraham>
Oh, John Fogerty was in Creedence Clearwater Revival

[12:00:01.0000] <jgraham>
W.A.S.P appear to be YAIMB

[12:00:02.0000] <gsnedders>
Yet Another [I?] Metal Band?

[12:00:03.0000] <jgraham>
Identikit

[12:01:00.0000] <gsnedders>
You'd claim all metal bands are identical.

[12:01:01.0000] <jgraham>
Well I think it is generally the amount that I want to listen to them that is identical

[12:01:02.0000] <gsnedders>
And I think we've had enough arguments in this vain, so I'm going back to trying to relearn what symbols are used for what in relational algebra

[12:03:00.0000] <gsnedders>
jgraham: Oh, Toto are *that* band.

[12:05:00.0000] <jgraham>
Yes. Yes they are.

[12:06:00.0000] <Ms2ger>
Pff, symbols are interchangeable

[12:10:00.0000] <gsnedders>
Ms2ger: If you can convince my lecturer, great!

[12:10:01.0000] <gsnedders>
(Sadly my lecturer is a terrible teacher — though brilliant at the main part of what he teaches)

[12:28:00.0000] <Hixie>
is hallvord the one working on clipboard events still these days?

[12:32:00.0000] <jgraham>
yes, I think so

[12:35:00.0000] <Hixie>
looks like the spec has matured a lot since i last saw it

[12:35:01.0000] <Hixie>
cool

[12:35:02.0000] <Hixie>
anyone know what the situation is with respect to the mutation stuff?

[12:36:00.0000] <Hixie>
did we ever work out whether I needed to provide a hook in the event loop, or script dispatch, or something?

[12:36:01.0000] <smaug____>
script dispatch probably

[12:37:00.0000] <Hixie>
is it pending my doing something, or is it not yet fixed?

[12:37:01.0000] <Hixie>
s/fixed/ready for me to do something/

[12:37:02.0000] <smaug____>
DOM4 has (a bit wrong) interfaces for mutation observer stuff

[12:37:03.0000] <smaug____>
but no text written

[12:38:00.0000] <Hixie>
k

[12:38:01.0000] <Hixie>
i guess i'll wait for a bug to be filed or something

[12:38:02.0000] <smaug____>
yeah, I'll file some bugs

[12:38:03.0000] <Hixie>
cool

[12:38:04.0000] <Hixie>
thanks

[12:38:05.0000] <smaug____>
I had to take a break from implementation.

[12:38:06.0000] <smaug____>
but will finalize it in the next coming days

[12:39:00.0000] <smaug____>
webkit has some support but haven't tested it at all (since I can't figure out how to run nightly webkit on this machine)

[12:39:01.0000] <Hixie>
can you run canary chromium?

[12:39:02.0000] <zewt>
heh, when i tried running webkit nightly it was sort of confusing

[12:39:03.0000] <Hixie>
or is that not up to date enough

[12:40:00.0000] <zewt>
because it only changes the backend, so there was no indication in the ui (without knowing where to look) that it was actually using it

[12:40:01.0000] <smaug____>
Hixie: I haven't figured out where to download canary for linux

[12:40:02.0000] <Hixie>
smaug____: ah, dunno

[12:52:00.0000] <gsnedders>
smaug____: You build it yourself, or download it off buildbot, AFAIK

[12:54:00.0000] <smaug____>
sounds too hard :)

[12:54:01.0000] <smaug____>
I just don't care about it for now

[12:56:00.0000] <gsnedders>
smaug____: Either that or there's an Ubuntu PPA of Chromium, but that's about it

[12:56:01.0000] <gsnedders>
Sucky situation :(

[12:56:02.0000] <jamesr_>
google doesn't provide a canary channel build for linux

[12:57:00.0000] <jamesr_>
you can get ToT builds from various sources

[12:57:01.0000] <gsnedders>
jamesr_: Not quite the same when you're trying to test how it interacts with Flash, for example, though :(

[13:42:00.0000] <MrOpposite>
/me test

[13:44:00.0000] <jamesr_>
gsnedders, depends on which flash you're talking about

[13:45:00.0000] <jamesr_>
but yes that can be an issue

[14:15:00.0000] <Hixie>
kennyluck: ping

[14:18:00.0000] <Hixie>
kennyluck: see https://www.w3.org/Bugs/Public/show_bug.cgi?id=14890

[14:29:00.0000] <bga>
http://blog.jquery.com/2011/12/08/what-is-happening-to-the-jquery-plugins-site/

[14:37:00.0000] <TabAtkins>
bga: Heh, they deleted the entire database by accident.  Nice.

[14:39:00.0000] <tantek>
databases are overrated.

[14:44:00.0000] <Hixie>
speaking of which i should make sure i'm still backing up all our databases

[14:46:00.0000] <Hixie>
looks like the blog, forums, wiki, and the status database are all still being backed up

[14:46:01.0000] <Hixie>
issues database backup seems broken though... odd...

[14:49:00.0000] <Hixie>
aha, fixed.

[14:49:01.0000] <Hixie>
ok, i can confirm out databases are being backed up

[14:49:02.0000] <Hixie>
:-)

[14:55:00.0000] <paul_irish>
\o/

[15:32:00.0000] <Hixie>
can anyone work out what is being said here? https://www.w3.org/Bugs/Public/show_bug.cgi?id=14235

[15:39:00.0000] <TabAtkins>
I have no idea.


2011-12-10
[18:05:00.0000] <jamesr_>
man. i really vividly remember a fairly long email thread with some mozillians about the element parameter in requestAnimationFrame but can't find it

[18:08:00.0000] <jamesr_>
ah! found it. had a pretty bad thread title

[18:09:00.0000] <paul_irish>
http://lists.w3.org/Archives/Public/public-web-perf/2011May/0015.html ?

[19:36:00.0000] <ZXY>
sorry to ask this here, but on certain sites, the font for forms seems to have changed to my browser's serif font

[19:36:01.0000] <ZXY>
Trying to look for firefox's default css file but can't seem to find it/them

[19:45:00.0000] <MikeSmith>
http://www.robglidden.com/2011/12/royalty-free-mpeg-proposals-announced/

[19:48:00.0000] <MikeSmith>
http://www.robglidden.com/2011/12/mpeg-plus-or-patent-pool-lite-mpeg-mulls-royalty-free-proposals/

[19:48:01.0000] <MikeSmith>
Rob Glidden hath awakened

[19:53:00.0000] <zewt>
because clearly "royalty free" is basically the same as "open standard", right? *cough*

[20:02:00.0000] <MikeSmith>
“It seems every few months a patent pool or some one manages to spin up wishful thinking that there will soon be a “new deal” that will answer the needs of royalty free communities, only to cleverly leave the hopeful twisting in the wind."

[20:17:00.0000] <MikeSmith>
earthshake

[20:18:00.0000] <MikeSmith>
Chiba

[21:25:00.0000] <Hixie>
is there a sane way of seeing if a variable is an integer (in JS) without doing string manipulation? sites seem to suggest using parseInt(), which as far as i can tell is silly.

[21:27:00.0000] <zewt>
Math.floor(i) == i?

[21:29:00.0000] <Hixie>
yeah i guess that's as good as anything

[21:29:01.0000] <Hixie>
thanks

[21:30:00.0000] <zewt>
though it's true for Infinity

[21:30:01.0000] <Hixie>
not an issue here

[21:30:02.0000] <Hixie>
i just want to find where in my !$#@%$#@& code i'm passing a fraction for something that much later gets used as an array index

[05:12:00.0000] <gsnedders>
Hixie: If you only care about int32, i | 0 === i, uint32 i >>> 0 === i, otherwise round and compare works.

[05:46:00.0000] <annevk>
oh

[05:46:01.0000] <annevk>
2d context spec is unforked now

[12:25:00.0000] <Ms2ger>
annevk5, I figured out why web-apps-tracker was broken

[12:25:01.0000] <Ms2ger>
The editorial changes checkbox got turned off somehow

[14:22:00.0000] <smaug____>
it is sad what Google is doing to the web :(

[14:39:00.0000] <Taggnostr>
smaug____, what is Google doing?

[14:40:00.0000] <bga>
making web binary

[14:41:00.0000] <fjkeorjer>
You mean this: http://www.google.com/support/forum/p/Chrome/thread?tid=062b5ce9408431aa&hl=en ???

[14:44:00.0000] <smaug____>
I was thinking about NaCl, Dash, and making some of their services available only to their client software etc..

[14:47:00.0000] <fjkeorjer>
You mean you cannot hook-up an app written in Dash to a php backend?

[14:50:00.0000] <gsnedders>
Dart, if it makes it into Chrome, will give a better UX than in any other browser.

[14:51:00.0000] <smaug____>
Dash, Dart, whatever

[14:52:00.0000] <fjkeorjer>
So what's different between the two?

[14:52:01.0000] <gsnedders>
They're the same.

[14:52:02.0000] <gsnedders>
Dash was the internal code name pre-launch, announced as Dart.

[14:53:00.0000] <fjkeorjer>
So how does it work with server software?

[14:53:01.0000] <gsnedders>
It doesn't.

[14:53:02.0000] <gsnedders>
It's no different to JS, it doesn't.

[14:54:00.0000] <fjkeorjer>
That sucks, this makes it useless for me

[14:56:00.0000] <Dashiva>
Damn Dash, I'm going to have to change my highlights

[14:58:00.0000] <smaug____>
Sorry Dashiva  :)

[14:59:00.0000] <fjkeorjer>
Indian goddess Dashiva?

[15:00:00.0000] <bga>
gsnedders ppl want native types and syntax for classes

[15:00:01.0000] <bga>
thay tired to invent class sugar for js

[15:00:02.0000] <bga>
thay want real private fields

[15:01:00.0000] <bga>
etc

[15:01:01.0000] <Ms2ger>
Those are coming to JS, obviously

[15:01:02.0000] <bga>
those was in js

[15:01:03.0000] <bga>
as es4

[15:03:00.0000] <Dashiva>
fjkeorjer: If you're referring to Shiva, god not goddess

[15:03:01.0000] <Dashiva>
Square has a lot to answer for there

[15:05:00.0000] <bga>
Ms2ger anyway in future nobody will use js in web. js's jit allow write erlang/jvm/... vm over js

[15:05:01.0000] <bga>
ppl now have choose

[15:07:00.0000] <bga>
as result js will outdated thechnology and web will switch to NaCl

[15:07:01.0000] <bga>
only node.js same some community

[15:07:02.0000] <bga>
*save


2011-12-12
[16:53:00.0000] <heycam>
Hixie, I've allowed typedefs to specify extended attributes as part of their definition now. you might like to use that for event listener attributes to avoid duplicating [TreatNonCallableAsNone] everywhere

[16:54:00.0000] <heycam>
Hixie, e.g. `typedef [TreatNonCallableAsNone] Function EventListener; … interface Whatever { attribute EventListener onfoo; }`

[17:26:00.0000] <Hixie>
heycam|away: nice

[20:30:00.0000] <MikeSmith>
looking at http://caniuse.com/#feat=fileapi

[20:31:00.0000] <MikeSmith>
what is partial about File API support in current Firefox?

[20:38:00.0000] <zewt>
no filesystem API, iirc

[01:42:00.0000] <annevk>
IE9 has responseType?

[02:20:00.0000] <annevk>
how does the chunked-text stuff relate to the stream stuff?

[02:20:01.0000] <annevk>
do we really need chunked-text if we have stream?

[02:20:02.0000] <annevk>
related keyword: XMLHttpRequest

[02:41:00.0000] <dating>
http://netdate.dk/ :-)

[02:42:00.0000] <annevk>
krijn: should we nuke that kind of spam from the logs?

[02:42:01.0000] <krijn>
Happens a lot?

[02:43:00.0000] <annevk>
not sure, but maybe once they realize it can work

[03:03:00.0000] <jgraham>
http://www.rfc-editor.org/rfc/rfc6455.txt

[03:07:00.0000] <annevk>
http://tools.ietf.org/html/rfc6455

[03:07:01.0000] <jgraham>
annevk: But that's not a Real Not-Standard

[03:08:00.0000] <annevk>
is rfc-editor really the preferred address?

[03:08:01.0000] <annevk>
doubt that somewhat

[03:09:00.0000] <annevk>
but tools.ietf.org is by far the most useful imo

[03:09:01.0000] <annevk>
and I encourage everyone to link to that one from standards

[03:14:00.0000] <jgraham>
It's the one that gets linked in the announcement email at least

[03:14:01.0000] <jgraham>
I agree the other one is better in every way

[03:15:00.0000] <jgraham>
One day we might even get past the whole "but what if I want to print it on my daisy wheel printer from 1970?" thing

[03:15:01.0000] <jgraham>
(sigh)

[03:16:00.0000] <annevk>
just need to stop doing things at the IETF

[03:22:00.0000] <jgraham>
That would route around the damage of course

[03:23:00.0000] <annevk>
aah, no mike

[03:44:00.0000] <annevk>
fwiw

[03:44:01.0000] <annevk>
I started drafting some text on the encoding stuff

[03:45:00.0000] <annevk>
at this point it's labels and the definition

[03:45:01.0000] <annevk>
e.g. "iso-8859-1", "windows-1252", and the mapping table for them

[05:49:00.0000] <annevk>
https://twitter.com/stevefaulkner/status/146204630831996929 maybe Anolis should strip out the <dfn> related title attributes?

[06:03:00.0000] <zcorpan>
i find the tooltips useful, but then i don't use AT

[06:05:00.0000] <annevk>
yeah me too

[06:05:01.0000] <annevk>
I somewhat doubt they disable it because of how standards make use of tooltips

[06:05:02.0000] <annevk>
at least, I would expect the typical AT user not to read standards

[06:06:00.0000] <zcorpan>
just like the typical non-AT user doesn't read standards? or more so for AT users?

[06:08:00.0000] <annevk>
not sure if that's relevant

[06:52:00.0000] <zcorpan>
ah, so that's how we should deal with feature requests. "just relax during the coming weekend. if you still care about the use case on monday, get back to us"

[06:53:00.0000] <annevk>
where is that from?

[06:55:00.0000] <miketaylr>
heh

[06:55:01.0000] <miketaylr>
xhr responseType json thread

[06:55:02.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html

[06:55:03.0000] <zcorpan>
http://lists.w3.org/Archives/Public/public-webapps/2011OctDec/1460.html

[06:55:04.0000] <annevk>
Encoding Standard ^^

[06:56:00.0000] <annevk>
very much work in progress

[06:56:01.0000] <annevk>
and feedback wanted, too

[06:56:02.0000] <zcorpan>
oooh. annevk++

[07:02:00.0000] <zcorpan>
annevk: it's not clear what the missing rows should be

[07:02:01.0000] <zcorpan>
oh wait

[07:03:00.0000] <zcorpan>
"Unless stated otherwise, in an 8-bit encoding the octet's hexadecimal value maps to a code point of the same hexadecimal value."

[07:03:01.0000] <annevk>
those things can be tidied up somewhat

[07:03:02.0000] <annevk>
for now I just wanted to get the basics out there

[07:04:00.0000] <zcorpan>
yep. looks nice

[07:14:00.0000] <MikeSmith>
it would be great if caniuse.com provided a number to indicate how many browser engines support a particular feature

[07:15:00.0000] <MikeSmith>
and then expose an API for getting just that number

[07:16:00.0000] <MikeSmith>
the percentages it currently lists don't really seem very useful in practice

[08:42:00.0000] <ksweeney>
what's the best way to inform spec author of a typo?

[08:42:01.0000] <ksweeney>
this room?

[08:42:02.0000] <Ms2ger>
Which spec?

[08:43:00.0000] <ksweeney>
html5

[08:43:01.0000] <Ms2ger>
File a bug with the widget

[08:44:00.0000] <ksweeney>
thanks

[09:33:00.0000] <dglazkov>
good morning, Whatwg!

[09:35:00.0000] <Ms2ger>
Morning dglazkov

[10:00:00.0000] <divya>
dglazkov: can I trouble you with my queries over understanding http://dvcs.w3.org/hg/webcomponents/raw-file/tip/explainer/index.html

[10:10:00.0000] <david_carlisle>
annevk: do you know whetehr there are differences from the mappings on the unicode site, eg http://unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP1254.TXT

[10:10:01.0000] <david_carlisle>
spelling:-(

[10:13:00.0000] <divya>
i guess dglazkov has a script running to chime in good morning every morning :|

[10:14:00.0000] <zewt>
it's annoying that this window gets highlighted for a null message every day, heh

[10:17:00.0000] <Ms2ger>
/ignore dglazkov

[10:20:00.0000] <zewt>
david_carlisle: well, 0x8D (and so on) are undefined according to unicode, but to U+008D in that page aaaaaand where'd he go

[10:23:00.0000] <zewt>
annevk: fwiw, isn't the U+FFFD mapping correct in those cases, and the unity mapping the one that's wrong?

[10:24:00.0000] <zewt>
(no idea if there's content expecting it; i guess if IE does it then it's likely)

[10:59:00.0000] <jgraham>
divya: Maybe you should just ask the room and we can puzzle it out together. Then dglazkov can tell us how wrong we were later on

[10:59:01.0000] <divya>
woot then let me do just that jgraham

[11:00:00.0000] <divya>
so here is the early draft i am reading http://dvcs.w3.org/hg/webcomponents/raw-file/tip/explainer/index.html

[11:00:01.0000] <divya>
there is this sentence "If the document changes so that the decorate property no longer applies, the decorator is unapplied, returning the rendering of the element back to the pre-decoration state."

[11:01:00.0000] <divya>
I am wondering why does it simply not say if the selectors no longer match rather than document changes so that…

[11:05:00.0000] <jgraham>
Are the two not equivalent?

[11:06:00.0000] <divya>
that is what I wanted clarification on.

[11:07:00.0000] <divya>
I assumed as much, but the wording seems to imply more at play than typical css selector matching? maybe its just me.

[11:10:00.0000] <divya>
"The script is run once when the decorator element is parsed or inserted into the document."

[11:12:00.0000] <divya>
nvm that quote, just ignorant me.

[11:20:00.0000] <divya>
dglazkov: pardon me and my flood of bugs

[11:21:00.0000] <Ms2ger>
annevk, did you retest Gecko for your encoding work?

[11:22:00.0000] <Ms2ger>
I thought I fixed the 7F-9F stuff...

[11:26:00.0000] <TabAtkins>
divya: They're equivalent.  File a bug on the document to make him change the language, as your wording is more natural.

[11:27:00.0000] <divya>
k done that TabAtkins

[11:30:00.0000] <dglazkov>
divya: no, this is great!

[11:30:01.0000] <dglazkov>
divya++

[11:30:02.0000] <dglazkov>
sorry, I was absent. irccloud makes me feel omnipresent

[11:30:03.0000] <divya>
haha okay dglazkov expect more!!

[11:31:00.0000] <dglazkov>
divya: this is great stuff

[11:31:01.0000] <divya>
i assumed you were putting out fires else where as per your godly duties.

[11:32:00.0000] <dglazkov>
well. I got the flu. so duties are a bit ... mucousey.

[11:32:01.0000] <divya>
was that what seattle was the recipient of this morning then

[11:33:00.0000] <dglazkov>
divya: but please do file bugs. I will go through them and edit the 'splainer. This is great stuff.

[11:33:01.0000] <divya>
k awesomes doing that now dl

[11:33:02.0000] <divya>
err dglazkov

[11:33:03.0000] <TabAtkins>
Hm, I wonder if I can construct a timing attack using feComponentTransfer and <foreignElement>.

[11:33:04.0000] <dglazkov>
/me parades divya and tells everyone that they should be like her and read the 'splainer and file bugs.

[11:34:00.0000] <divya>
/me hides from everyone

[11:34:01.0000] <dglazkov>
:)

[11:44:00.0000] <TabAtkins>
Philip`: I can't find a link to your demonstration of a timing-channel attack on canvas to extract font data.

[11:44:01.0000] <Ms2ger>
foreignContent?

[11:44:02.0000] <TabAtkins>
Ms2ger: Yes.

[12:00:00.0000] <tantek>
TabAtkins - everytime I see <foreignElement> I hear the character "Mo" from Wall•E saying "FOREIGN ELEMENT" (in the same tone of voice that it said "FOREIGN CONTAMINANT"[1]) [1] http://www.youtube.com/embed/l6gZ9Sf_0HU

[12:01:00.0000] <TabAtkins>
Hehe

[12:09:00.0000] <Philip`>
TabAtkins: http://philip.html5.org/demos/canvas/font-timing.html

[12:09:01.0000] <Philip`>
TabAtkins: (Also related: http://philip.html5.org/demos/canvas/img-timing-1.html http://philip.html5.org/demos/canvas/img-timing-2.html http://philip.html5.org/demos/canvas/img-timing-3.html )

[12:10:00.0000] <Philip`>
(Some only work in some browsers)

[12:12:00.0000] <Philip`>
/me wonders if anyone has tried fixing canvas timing attacks yet, or at least filed bugs about it

[12:12:01.0000] <Ms2ger>
Mozilla has a bug, at least

[13:17:00.0000] <zewt>
http://meobets.com/~bai/google-font-fail.png really, google?

[13:19:00.0000] <TabAtkins>
TEXT SO TINY

[13:19:01.0000] <Ms2ger>
"Dismiss" is clearly the right response

[13:19:02.0000] <zewt>
should say "dismiss angrily"

[13:22:00.0000] <miketaylr>
i get that warning on my wife's chromebook too, at 100%

[13:22:01.0000] <Ms2ger>
That's why you shouldn't get chromebooks

[13:23:00.0000] <zewt>
google products not working well on google products is ... heh

[13:23:01.0000] <zewt>
very corporate?

[14:05:00.0000] <gsnedders>
/me blinks

[14:05:01.0000] <gsnedders>
A new XSLT bug report.

[14:05:02.0000] <gsnedders>
Wow.

[14:06:00.0000] <divya>
from who

[14:06:01.0000] <gsnedders>
No idea.

[14:11:00.0000] <jgraham>
They reported XSLT as a bug?

[14:13:00.0000] <miketaylr>
:D

[14:14:00.0000] <divya>
:D

[14:15:00.0000] <hober>
jgraham++

[14:30:00.0000] <gsnedders>
jgraham: Sadly not.

[14:30:01.0000] <gsnedders>
jgraham: On the face of it an HTML5 parser bug, so I'm blaming you.

[14:33:00.0000] <jgraham>
You could do something more constructive and CC me on the bug instead :)

[14:34:00.0000] <gsnedders>
jgraham: I was in the process of doing so

[14:39:00.0000] <jgraham>
Oh, that's totally a HTML parser bug, yes

[14:39:01.0000] <gsnedders>
Presumably caused by namespacing HTML elements now

[14:42:00.0000] <jgraham>
Hmm, I'm not sure why you think that

[14:43:00.0000] <Philip`>
When in doubt, blame namespaces

[14:44:00.0000] <jgraham>
Who is to blame for XSLT in the platform anyway?

[14:44:01.0000] <gsnedders>
Oh, I'm being stupid.

[14:47:00.0000] <gsnedders>
annevk5: Or html5 should use data-anolis-xref or whatever the attribute is called

[14:50:00.0000] <jgraham>
It seems Peter Van der Beken did the Mozilla implementation in 2000. Dunno if they were first or not

[14:51:00.0000] <jgraham>
Oh, IE had it in 1998

[14:51:01.0000] <gsnedders>
Yeah, IE was first.

[14:51:02.0000] <gsnedders>
Mozilla was still too busy, well, rewritting the whole browser.

[14:51:03.0000] <gsnedders>
*rewriting

[14:52:00.0000] <jgraham>
This isn't a prize you want to *win*

[14:59:00.0000] <Hixie>
oh hey i didn't know about [ArrayClass]

[14:59:01.0000] <Hixie>
can i sprinkle that about?

[15:08:00.0000] <heycam>
Hixie, feel free -- but you have to do the work of index getters and a length attribute yourself

[15:27:00.0000] <heycam>
Hixie, the term "relevant namespace object" is gone now that modules have been removed

[15:27:01.0000] <Hixie>
heycam: well i'm doing that work already anyway

[15:28:00.0000] <Hixie>
heycam: can you file a bug on me to fix the use of the term?

[15:28:01.0000] <heycam>
ok

[15:28:02.0000] <Hixie>
thanks


2011-12-13
[16:52:00.0000] <erlehmann>
is there a good way to discourage someone to invent a new scheme for a use case that can be appropriately handled by data URIs?

[16:53:00.0000] <zewt>
i suggest http://image.made-in-china.com/2f0j00tMsaevNhAPcl/Rubber-Mallet-Wood-Hande-1lb-TSH0902-.jpg

[18:01:00.0000] <abarth>
Hixie: do you have a couple minutes for an HTML parser question?

[18:12:00.0000] <erlehmann>
abarth, JUST ASK

[18:12:01.0000] <abarth>
yeah?

[18:12:02.0000] <abarth>
i'm writing it up in an email to whatwg

[18:16:00.0000] <erlehmann>
abarth, YOU ARE A VERY CLEVER MAN

[18:16:01.0000] <abarth>
:)

[18:16:02.0000] <zewt>
caffeine

[20:14:00.0000] <Hixie>
abarth: yeah, that's on my radar

[20:14:01.0000] <Hixie>
abarth: see if you can get henri to comment :-)

[20:14:02.0000] <abarth>
Hixie: thanks

[20:15:00.0000] <abarth>
what's the point of going through the HTML states for the text integration points?

[20:15:01.0000] <abarth>
to get the formatting elements reconstructed?

[20:17:00.0000] <Hixie>
off the top of my head i can't recall, but probably

[20:17:01.0000] <Hixie>
also to enter things like select mode for <select>s in cells, etc

[20:17:02.0000] <abarth>
for the time being, i'm probably going to implement what flangagan suggests in http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-October/033542.html

[20:18:00.0000] <abarth>
i'm trying to update the webkit impl to match the changes to the spec that happened after we did the first iteration

[20:18:01.0000] <abarth>
and this would be a regression

[20:18:02.0000] <Hixie>
i can't tell off the top of my head if that's the right thing, but i can try to prioritise it tomorrow if you like

[20:18:03.0000] <abarth>
if that's not too much trouble, it would be helpful

[20:19:00.0000] <abarth>
i'd rather fix it the right way :)

[20:19:01.0000] <Hixie>
abarth: yeah

[20:19:02.0000] <Hixie>
abarth: can you work out what gecko does?

[20:19:03.0000] <abarth>
i'll investigate and email the list if I figure it out

[20:19:04.0000] <Hixie>
abarth: (i haven't tried, but that info would be useful. i'll try to reverse-engineer it if neither you nor hsivonen comment before i get to it)

[20:19:05.0000] <Hixie>
cool

[20:20:00.0000] <abarth>
wow, they're still auto generating their parser from java

[20:27:00.0000] <abarth>
so, the control flow in the moz parser is really far from the spec

[20:27:01.0000] <abarth>
they have a bunch of branches all over the place for inforiegncontent

[20:27:02.0000] <abarth>
it looks like they call flushCharacters unconditionally

[20:27:03.0000] <Hixie>
i thought the spec had been changed specifially to be more like gecko :-)

[20:27:04.0000] <Hixie>
they might have the branches backwards from what the spec does, but i imagine the basic idea is the same

[20:28:00.0000] <Hixie>
or rather, inside out

[20:28:01.0000] <Hixie>
i.e. instead of if (foo) { switch } else { switch }, have switch { case: if (foo) else; case: if (foo) else; }

[20:28:02.0000] <abarth>
http://mxr.mozilla.org/mozilla-central/source/parser/html/javasrc/TreeBuilder.java#3161

[20:29:00.0000] <abarth>
as an example

[20:29:01.0000] <abarth>
the if (isInForeign()) comes after the flushCharacters call

[20:30:00.0000] <abarth>
or, consider the passage that starts http://mxr.mozilla.org/mozilla-central/source/parser/html/javasrc/TreeBuilder.java#1186

[20:30:01.0000] <abarth>
the if (!isInForeignButNotHtmlIntegrationPoint()) has been pushed into the states

[20:34:00.0000] <abarth>
yeah, so we just need to flush right away

[20:34:01.0000] <abarth>
rather than holding onto the pending characters until we get the </table>

[20:34:02.0000] <abarth>
let me try in code and then I'll send some spec text to the list

[20:36:00.0000] <Hixie>
abarth: this would be a generic change, not just for foreign content?

[20:37:00.0000] <abarth>
oh, i mean just for foreign content

[20:37:01.0000] <abarth>
basically, http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#parsing-main-inforeign

[20:37:02.0000] <abarth>
would check whether we're in the table text mode

[20:37:03.0000] <abarth>
and processing a non-character token

[20:38:00.0000] <abarth>
and then invoke the "anything else" clause of http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#parsing-main-intabletext

[20:38:01.0000] <abarth>
i guess an easier way

[20:39:00.0000] <abarth>
would be to force the HTML path when in the "in table text"

[20:39:01.0000] <abarth>
but have the "reprocess the token" in http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#parsing-main-intabletext

[20:39:02.0000] <abarth>
check whether it should go down the foreign content path

[20:39:03.0000] <Hixie>
abarth: it scares me to hardcode the table mode specifically there

[20:39:04.0000] <Hixie>
abarth: what about cell mode? select mode? etc

[20:39:05.0000] <abarth>
hum...

[20:40:00.0000] <Hixie>
abarth: i feel a more generic solution would be something i'd feel more confident was solid

[20:40:01.0000] <Hixie>
abarth: this is just a gut feeling though

[20:40:02.0000] <Hixie>
abarth: i'll have to look closer tomorrow

[20:41:00.0000] <abarth>
i guess the real strangeness is that we're in the "in table" model when the current node isn't a <table>

[20:41:01.0000] <abarth>
normally we'd get moved to another insertion mode

[20:41:02.0000] <abarth>
rather than staying in the table mode

[20:42:00.0000] <Hixie>
right; like i said in one of the mails in the earlier thread about this, this is a result of moving foreign content out of being a node

[20:42:01.0000] <Hixie>
er

[20:42:02.0000] <Hixie>
mode

[20:42:03.0000] <Hixie>
which was hsivonen's idea

[20:42:04.0000] <Hixie>
hence wanting his input :-)

[20:42:05.0000] <abarth>
yes, which is why i'm running into this problem in my patch that deletes the "in foreign content" mode :)

[20:45:00.0000] <Hixie>
indeed

[20:45:01.0000] <Hixie>
i think the change makes sense in general

[20:45:02.0000] <Hixie>
but this was an unexpected sideeffect and i'm worried there are others i've missed too

[23:02:00.0000] <zcorpan>
so the next XSS thing will be injecting <intent> tags

[23:29:00.0000] <webben>
may I please have an account on the WHATWG wiki? (creating new accounts is restricted to administrators)

[00:18:00.0000] <hsivonen>
I wonder if Glenn Adams is aware of http://en.wikipedia.org/wiki/Sega_v._Accolade#Trademark

[00:24:00.0000] <hsivonen>
webben: what user id and email would you like to use?

[00:40:00.0000] <abarth>
hsivonen: any thoughts on that parsing issue?

[00:41:00.0000] <abarth>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-December/034155.html

[00:41:01.0000] <abarth>
hsivonen: i need to go to sleep now, but any insight you can provide on the list would be appriciated

[00:41:02.0000] <abarth>
thx

[00:50:00.0000] <webben>
hsivonen: benjaminhawkeslewis , bhawkeslewis⊙gc - please

[00:50:01.0000] <webben>
hsivonen: oh - BenjaminHawkesLewis - sorry

[00:51:00.0000] <webben>
oh wait you can have spaces can't yo

[00:51:01.0000] <webben>
if hyphens are allowed Benjamin Hawkes-Lewis otherwise just BenjaminHawkesLewis

[00:51:02.0000] <webben>
/me is difficult.

[00:56:00.0000] <hsivonen>
webben: mediawiki claims to have sent you email

[00:57:00.0000] <hsivonen>
webben: the user id is BenjaminHawkesLewis

[01:29:00.0000] <annevk>
david_carlisle: there are certainly differences (that's the whole reason for this spec)

[01:30:00.0000] <annevk>
zewt: "correct" has never been defined for encodings, and since this is about legacy, it makes more sense to match the majority of implementations I think

[01:30:01.0000] <annevk>
ms2ger: I haven't, I probably should

[01:50:00.0000] <hsivonen>
hmm. http://blogs.adobe.com/jd/ has been quiet lately

[01:54:00.0000] <david_carlisle>
annevk: on differences, Guessed as much:-) there are other things in your spec unique to that (such as the various way implementations alias) but it would be good I think in a final version to be able to highlight any differences from the unicode site.. 'twould be easier for the reader to diff them  if your tables were in an easier to process form such as XML :-)

[01:55:00.0000] <annevk>
I was planning on exposing at least JSON mapping for all the single-octet encodings

[01:55:01.0000] <annevk>
also useful for tests

[01:56:00.0000] <david_carlisle>
annevk: thanks

[02:12:00.0000] <annevk>
Ms2ger: just generated the tables again, does look cleaner now

[02:58:00.0000] <webben>
hsivonen: That works. Cheers :)

[03:35:00.0000] <annevk>
Ms2ger: updated spec

[03:35:01.0000] <annevk>
seems Opera fixed a few things too

[03:36:00.0000] <annevk>
this encoding alignment might actually work :)

[03:52:00.0000] <annevk>
Ms2ger: btw, you did not fix it for all encodings

[03:52:01.0000] <annevk>
Ms2ger: e.g. "macintosh" still has it

[04:01:00.0000] <annevk>
Ms2ger: nevermind

[04:15:00.0000] <Ms3ger>
annevk: good, I was confused why my change to the macintosh decoder didn't work out :)

[04:22:00.0000] <hsivonen>
where is encoding name comparison specced these days?

[04:22:01.0000] <hsivonen>
reality-based comparison, that is

[04:26:00.0000] <annevk>
that is still HTML5

[04:26:01.0000] <annevk>
it's trim leading and trailing whitespace, ASCII case-insensitive compare

[04:26:02.0000] <annevk>
iirc

[04:26:03.0000] <annevk>
it will become part of the Encoding Standard

[04:27:00.0000] <annevk>
Ms3ger: Opera apparently tackled a similar issue for the windows-* encodings which has not yet made it into a release

[04:27:01.0000] <annevk>
Ms3ger: you might want to do the same

[04:28:00.0000] <annevk>
Ms3ger: see e.g. http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#windows-1255

[04:32:00.0000] <annevk>
http://annevankesteren.nl/2010/8-bit-labels#ibm864 is kind of interesting

[04:32:01.0000] <annevk>
Firefox and IE versus WebKit and Chrome

[04:32:02.0000] <annevk>
seems like something WebKit did wrong

[04:32:03.0000] <annevk>
Opera has not implemented that one at all...

[04:37:00.0000] <Ms3ger>
annevk: oh, Opera changed those already? I'll have a look

[04:42:00.0000] <annevk>
Ms3ger: well, for the next public release

[04:42:01.0000] <Ms3ger>
Yeah

[04:53:00.0000] <Ms3ger>
Hmm, it doesn't seem terribly clear in DOM4 that you need to call EventListener.handleEvent

[05:01:00.0000] <Ms3ger>
Looks like I'll have to learn more about this file format than I'd like...

[05:05:00.0000] <annevk>
Ms3ger: not changing octet 25 in ibm864 would also be good

[05:17:00.0000] <annevk>
why is ibm864 such a mess?

[05:17:01.0000] <annevk>
meh, I'll just make some choices and let people complain

[05:30:00.0000] <woef>
If I want to use the itemscope in xhtml5 (or whatever I should call it), do I write itemscope="itemscope" ?

[05:30:01.0000] <woef>
("xml serialization of html5" I believe)

[05:31:00.0000] <gsnedders>
woef: yes

[05:31:01.0000] <gsnedders>
woef: either that or itemscope=""

[05:31:02.0000] <woef>
okay, cool :)

[05:32:00.0000] <woef>
Is there a place where I can verify how Google/others will read this data (to verify if I implemented it well?)

[05:34:00.0000] <annevk>
validator.nu ?

[05:39:00.0000] <annevk>
so JSON can be just be a [] literal right?

[05:41:00.0000] <woef>
http://www.google.com/webmasters/tools/richsnippets

[05:41:01.0000] <woef>
No idea if validator.nu does something similar.

[05:43:00.0000] <gsnedders>
annevk: yes

[05:44:00.0000] <gsnedders>
annevk: JSON can be an object literal or an array literal

[05:59:00.0000] <bga>
gsnedders can you recomend me sources of hight order stuff? Programming langs, modern math. Some ppl in twitter, blogs etc

[06:01:00.0000] <gsnedders>
bga: What are you actually looking for?

[06:02:00.0000] <smaug____>
heycam|away: what should happen if non-object is passed as dictionary

[06:02:01.0000] <smaug____>
say new Event("foo", 1)

[06:04:00.0000] <bga>
gsnedders new papers, researches

[06:04:01.0000] <gsnedders>
bga: For that sort of stuff, I'm the wrong person to ask.

[06:04:02.0000] <bga>
tired to grep forums to find something new

[06:04:03.0000] <bga>
heh

[06:19:00.0000] <annevk>
david_carlisle: http://dvcs.w3.org/hg/encoding/raw-file/tip/single-octet-encodings.json

[06:19:01.0000] <annevk>
david_carlisle: it's also linked from the specification

[06:20:00.0000] <annevk>
david_carlisle: from now I'll generate new tables from that source to make sure they stay in sync

[06:20:01.0000] <annevk>
not entirely sure I want to automate the entire specification, does not seem worth it

[06:20:02.0000] <annevk>
and it will not work nicely when non single-octet encodings are added to the list of encodings

[06:25:00.0000] <david_carlisle>
annevk: thanks

[06:26:00.0000] <david_carlisle>
can't you just have a bigger array for the two byte encodings? or do you mean you'd want some kind of sparse format

[06:29:00.0000] <annevk>
david_carlisle: they're not two byte, they're multi

[06:35:00.0000] <david_carlisle>
annevk: yes sure but they can all be thought of as a mapping from some finite range of integers to a the codepoint range so can all be represented by an array of integers as you have so far, can;t they? (admittedly that doesn't capture how the bytes represent the encoding number but) so for example utf-8 would just be an idenity as the numeric part is an identity map, the actual utf-8 bit...

[06:35:01.0000] <david_carlisle>
...layout wouldn't fit the layout in your current json, perhaps that's what you meant originally

[06:38:00.0000] <hsivonen>
woef: Validator.nu doesn't check for suitability for consumption by Google

[06:48:00.0000] <annevk>
david_carlisle: I think some of the multi octet encodings have state

[06:48:01.0000] <annevk>
david_carlisle: also not sure error handling works for them, e.g. for UTF-8

[06:48:02.0000] <annevk>
david_carlisle: but I need to look at them more closely basically

[06:48:03.0000] <annevk>
david_carlisle: for now I'm happy with just doing the single-octet stuff

[07:08:00.0000] <annevk>
where did Ms2ger go?

[07:08:01.0000] <annevk>
or Ms3ger for that matter

[07:09:00.0000] <jgraham>
Maybe he is metamorphosing into Ms4ger

[07:09:01.0000] <jgraham>
On the internet, no one knows you're a butterfly

[07:59:00.0000] <zewt>
annevk: well, there's often no majority (gecko+presto vs. trident+webkit), it's existing content that matters, of course ... anyway, i'm guessing at least the windows-* discrepencies should be easy to get fixed

[08:00:00.0000] <zewt>
seems pretty obvious to treat IE as the authority on those mappings

[08:02:00.0000] <annevk>
if the four others did the same I opted for following them instead

[08:03:00.0000] <zewt>
smaug____: new Event("foo", 1) throws TypeError, step 1 of http://dev.w3.org/2006/webapi/WebIDL/#es-dictionary

[08:03:01.0000] <smaug____>
yup

[08:03:02.0000] <smaug____>
just adding that to the implementation

[08:04:00.0000] <annevk>
zewt: I did favor trident/webkit over presto/gecko; same for trident/gecko

[08:04:01.0000] <annevk>
zewt: and WebKit is not quite the same when it comes to this

[08:04:02.0000] <annevk>
so I have both Chromium and WebKit

[08:04:03.0000] <zewt>
fun stuff

[08:05:00.0000] <zewt>
i wonder if there really isn't much content on "arabic" on those codepoints trident assigns mappings to

[08:06:00.0000] <annevk>
for multi-octet encodings it seems I should define algorithms for encode and decode

[08:06:01.0000] <annevk>
and then cleverly test them

[08:07:00.0000] <zewt>
(why do people randomly like to call bytes "octets"? heh)

[08:07:01.0000] <zewt>
they're multibyte encodings, damn it :P

[08:07:02.0000] <annevk>
zewt: http://en.wikipedia.org/wiki/Octet_(computing)

[08:07:03.0000] <zewt>
i know what the word means; in the real world we call them bytes

[08:07:04.0000] <hober>
zewt: because on older architectures byte length differed

[08:07:05.0000] <zewt>
hober: doesn't matter in 2011 (or 2001)

[08:08:00.0000] <annevk>
zewt: see http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#notes for general rules I used

[08:08:01.0000] <annevk>
zewt: it might be worth going with byte and defining that as eight bits

[08:08:02.0000] <annevk>
zewt: email WHATWG?

[08:09:00.0000] <zewt>
annevk: i'm guessing data will be wanted about the contentious mappings (if lots of pages are using those trident arabic mappings, that's probably what should be used, even if it's currently the minority...)

[08:10:00.0000] <zewt>
as long as there's data to back it, i'd be surprised if there was much pushback from browsers for adding them

[08:10:01.0000] <annevk>
yeah

[08:10:02.0000] <gsnedders>
zewt: If you're dealing with mainframes it does sometimes still matter.

[08:12:00.0000] <annevk>
zewt: that's one of the things mentioned

[08:12:01.0000] <zewt>
gsnedders: (i leave that to that field to translate terminology; the rest of the world has moved on)

[08:14:00.0000] <zewt>
mapping ascii to windows-1252 makes me sad inside

[08:58:00.0000] <gsnedders>
WTF? Thunderbird has started using Chrome for https links, though nowhere is Chrome set as the default.

[09:00:00.0000] <jgraham>
Google's marketing has become so agrressive that they now have Mozilla promoting them? :p

[09:00:01.0000] <martndemus>
Thunderbird knows whats best =D

[10:35:00.0000] <TabAtkins>
Hm.  I'm not sure what mailing list to talk about this on.

[10:35:01.0000] <TabAtkins>
So, I'm in a discussion with our spreadsheet team.

[10:35:02.0000] <TabAtkins>
Spreadsheets are, in essence, a giant <table>.  This is, predictably, absolutely shit for performance.  They're trying to find ways around it, to the point of considering implementing all their rendering in WebGL instead.

[10:37:00.0000] <TabAtkins>
I'd like to discuss ways to fix this in HTML/CSS/JS.  Possibilities include: a "just trust me" table layout mode that uses less constraints (allows overflow, etc.) to bring performance back down from quadratic+; a "virtual table" object that draws a simplistic rendering of empty cells and calls you to fill them in with real DOM when users stop scrolling.

[10:37:01.0000] <TabAtkins>
Possibly other ideas.

[10:37:02.0000] <TabAtkins>
So, where to bring this up?

[10:37:03.0000] <TabAtkins>
I'm thinking whatwg might be the best place.

[10:38:00.0000] <gsnedders>
TabAtkins: SVG might work decently — but Fx doesn't support selection of SVG, does it?

[10:38:01.0000] <TabAtkins>
gsnedders: I don't know if SVG would work.  If we support the same spreadsheet size as Excel, that's 2^8 columns and 2^16 rows.

[10:38:02.0000] <TabAtkins>
Excel can do fast scrolling on that because it just cheats for the most part until you stop scrollilng.

[10:39:00.0000] <TabAtkins>
But 2^24 DOM nodes will kill a browser regardless of whether it's HTML or SVG, I think.

[10:40:00.0000] <Ms2ger>
table-layout: fixed?

[10:41:00.0000] <TabAtkins>
I'm pretty sure table-layout:fixed isn't "fixed" enough.

[10:41:01.0000] <TabAtkins>
You still need to do layout to determine the height of rows, for example.

[10:41:02.0000] <Ms2ger>
I guess we need table-layout: fixedforrealthistime

[10:41:03.0000] <TabAtkins>
table-layout:static

[10:42:00.0000] <Ms2ger>
But you only get to add that if you spec normal tables first :)

[10:42:01.0000] <TabAtkins>
I REFUSE

[10:42:02.0000] <Ms2ger>
Then I REFUSE to implement it

[10:43:00.0000] <Ms2ger>
Which shouldn't bother you, I wouldn't implement it anyway

[10:43:01.0000] <gsnedders>
Children, no fighting.

[10:43:02.0000] <Ms2ger>
gsnedders, remind me, are you younger or older than me? :)

[10:43:03.0000] <gsnedders>
Ms2ger: I believe I am still the youngest active person in this channel.

[10:43:04.0000] <gsnedders>
Ms2ger: (19)

[10:44:00.0000] <Ms2ger>
Good

[10:44:01.0000] <Ms2ger>
So be quiet when adults talk ;)

[10:44:02.0000] <gsnedders>
Ms2ger: Pfff.

[10:44:03.0000] <gsnedders>
Ms2ger: I've been an adult since I was 16!

[10:45:00.0000] <Ms2ger>
Scot?

[10:45:01.0000] <gsnedders>
Ms2ger: Yup.

[10:45:02.0000] <gsnedders>
(I then regressed and became a child for a while again while in Sweden)

[10:45:03.0000] <Ms2ger>
Heh

[10:46:00.0000] <gsnedders>
It was quite amusing going from an adult to being a child. Don't get to do that often. :)

[10:57:00.0000] <Ms2ger>
annevk5, why would not changing octet 25 in ibm864 be good?

[11:30:00.0000] <zewt>
changing the ASCII overlap is never good

[11:34:00.0000] <Ms2ger>
Firefox is outnumbered 3-to-1

[11:46:00.0000] <zewt>
all browsers are outnumbered, they're all doing different things

[11:47:00.0000] <jcranmer>
/me wonders why he remains in this channel

[11:47:01.0000] <zewt>
are you asking us?

[11:48:00.0000] <gsnedders>
jcranmer: Because we're cool?

[11:48:01.0000] <zewt>
Ms2ger: if IE is handling the ASCII range for that encoding sanely, then I'd hope other browsers could align at least for those

[11:48:02.0000] <jcranmer>
I only passively follow HTML development, and even that is beginning to wear thin

[11:48:03.0000] <jcranmer>
/me settles for "inertia"

[11:48:04.0000] <Ms2ger>
/me whacks jcranmer 

[11:49:00.0000] <zewt>
(i don't really care about the others for such an obscure encoding, but having as close to everything as possible align for ASCII is big)

[11:49:01.0000] <Ms2ger>
zewt, did you look at the data?

[11:49:02.0000] <jcranmer>
let's go to EBCIDIC?

[11:50:00.0000] <zewt>
i've only looked at the tables

[11:50:01.0000] <Ms2ger>
http://annevankesteren.nl/2010/8-bit-labels#ibm864

[11:50:02.0000] <Ms2ger>
So what would you recommend for 0x25?

[11:51:00.0000] <zewt>
according to http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#ibm864, trident maps [0,7f] to identity for that encoding

[11:51:01.0000] <zewt>
which is what all mbcs and 8bit encodings should do, so that's what I'd recommend

[11:51:02.0000] <zewt>
/me squints at funkytable

[11:52:00.0000] <zewt>
looks like it (unsurprisingly) says the same thing

[11:56:00.0000] <zewt>
based on those tables, it should be possible to align all of these encodings that way

[11:56:01.0000] <zewt>
assuming other browsers don't dig in their heels for some obscure reason

[11:56:02.0000] <zewt>
(and ignoring multibyte encodings for now, of course)

[12:02:00.0000] <zewt>
how could anyone ever use 864 in Firefox, with it remapping %?

[12:03:00.0000] <zewt>
that's well into crazyland

[12:11:00.0000] <karega|aniasis>
does anyone know any good design examples of horizontal accordions

[12:12:00.0000] <Ms2ger>
Are there any?

[12:14:00.0000] <karlcow>
yeah a few karega|aniasis http://www.fallonemusic.com/images/Hohner_accordeons_2_XL.jpg

[12:15:00.0000] <karlcow>
also http://www.skripta-paris.com/810-9621-large/japanese-album-accordion-moleskine-pocket-a6.jpg

[12:15:01.0000] <karega|aniasis>
accordions for web content

[12:16:00.0000] <erlehmann>
are those not http?

[12:16:01.0000] <karega|aniasis>
yes, but I mean accordions for web based content layout

[12:17:00.0000] <karega|aniasis>
not the instrument

[12:17:01.0000] <karlcow>
erlehmann: those are http pipes(lining) ;)

[12:17:02.0000] <karega|aniasis>
no links to instruments

[12:17:03.0000] <erlehmann>
a web accordion seems like a weird instrument

[12:17:04.0000] <karlcow>
karega|aniasis: yes we are being saccarstic :)

[12:18:00.0000] <karega|aniasis>
it does, and that's why I'm not talking referring to it.

[12:18:01.0000] <karlcow>
karega|aniasis: I have no answer more than would you get on DuckDuckGo

[12:18:02.0000] <karega|aniasis>
karlcow, yes I know and I am going along with your sarcasm.

[12:18:03.0000] <karlcow>
karega|aniasis: you would have better chances I guess in #html5

[12:24:00.0000] <bga>
too many questions about webkit's console.log

[12:24:01.0000] <bga>
plz do deep copy

[13:34:00.0000] <Hixie>
TabAtkins: yt?

[13:34:01.0000] <Hixie>
TabAtkins: can you take a look at http://lists.whatwg.org/htdig.cgi/help-whatwg.org/2011-December/000966.html ?

[13:34:02.0000] <jgraham>
Disadvantages of using Google as a calculator: inch to cm conversions lead to lots of penis-related search results

[13:35:00.0000] <jgraham>
In other news, bein able to do mental arithmetic is still good

[13:35:01.0000] <Hixie>
(or anyone else who is up to date on table model rendering rules)

[13:35:02.0000] <gsnedders>
jgraham: multiplying by 2.54 have that affect as well?

[13:36:00.0000] <zewt>
then you have to remember 2.54 :)

[13:37:00.0000] <jgraham>
Hixie: (I don't know what the spec says but the behaviour he wants seems very magical)

[13:37:01.0000] <Hixie>
well my real question is whether he should file the bug on gecko or webkit

[13:38:00.0000] <jgraham>
In particular http://btrem.com/tests/table1 seems like it much be the wrong expectation

[13:38:01.0000] <jgraham>
*must

[13:39:00.0000] <jgraham>
The other one I don't know. And I would give even odds that CSS doesn't know either :)

[13:39:01.0000] <Ms2ger>
gtalbot would probably be able to say something about those tests

[13:40:00.0000] <jgraham>
Or dbaron

[13:40:01.0000] <Ms2ger>
/me curses annevk5 

[13:54:00.0000] <Hixie>
hsivonen: ping

[13:56:00.0000] <jgraham>
Pretty sure that if you look at the distribution of when hsivonen is in the channel the probability he is around is tiny. Unless he is abroad or something.

[14:00:00.0000] <Hixie>
jgraham: always worth a try

[14:01:00.0000] <Hixie>
i guess i'll just have to work out this parser thing myself :-P

[14:02:00.0000] <gsnedders>
Hixie: You wrote it! :P

[14:02:01.0000] <Hixie>
yeah but that was months ago

[14:02:02.0000] <Hixie>
i've offloaded all my knowledge to off-site storage

[14:02:03.0000] <Hixie>
(the spec)

[14:03:00.0000] <Hixie>
any html5lib people here?

[14:04:00.0000] <gsnedders>
Myself and jgraham?

[14:04:01.0000] <gsnedders>
(Though certainly my knowledge of the parser isn't as great as it was a year ago…)

[14:05:00.0000] <gsnedders>
But jgraham's should be, if he's been doing his work properly. :P

[14:05:01.0000] <Hixie>
do you know if it's up to date with the spec?

[14:05:02.0000] <Hixie>
in particular the foreign content stuff

[14:07:00.0000] <gsnedders>
Not for any changes in the past six months

[14:08:00.0000] <Hixie>
k

[14:09:00.0000] <TabAtkins>
Hixie: His "test1" (using the separated border model) is wrong.  There is no cell in the lower-right corner, so there's nothing for CSS to target and apply a border to.

[14:10:00.0000] <TabAtkins>
In the "test2" (using the collapsed border model, and applying border to <tr>), it's a WebKit bug.

[14:10:01.0000] <TabAtkins>
Which I believe is already filed.

[14:10:02.0000] <gsnedders>
Yeah, that's an ancient bug/

[14:10:03.0000] <Hixie>
TabAtkins: k. i'll reply to the mail, unless you'd like to

[14:10:04.0000] <Hixie>
TabAtkins: (and thanks)

[14:10:05.0000] <TabAtkins>
I'm not subscribed to that list, so go ahead.

[14:10:06.0000] <Hixie>
k

[14:15:00.0000] <astearns>
TabAtkins: then what does "the end of that row should be padded with empty cells" mean for his test1?

[14:17:00.0000] <TabAtkins>
It doesn't mean anything, because HTML4 has no conformance criteria in it.

[14:19:00.0000] <Ms2ger>
Sure does

[14:19:01.0000] <Ms2ger>
It requires quote marks for q

[14:19:02.0000] <TabAtkins>
Yup.

[14:19:03.0000] <TabAtkins>
That rounds to zero.

[14:25:00.0000] <Ms2ger>
annevk5, you'll need to help me reverse engineer our file format for encodings if you want me to fix anything in Gecko :)

[14:32:00.0000] <Hixie>
ok how the heck do you escape a ! in a ""-quoted string in bash

[14:32:01.0000] <Hixie>
\! turns into a literal backslash-bang

[14:33:00.0000] <zewt>
i usually just give up and use '

[14:33:01.0000] <Hixie>
me too

[14:34:00.0000] <Hixie>
but sometimes i want inner single quotes

[14:34:01.0000] <zewt>
"a"'!'"b"

[14:34:02.0000] <jgraham>
I really hate bash

[14:34:03.0000] <jgraham>
That is all

[14:34:04.0000] <zewt>
(more important when you want expansions)

[14:34:05.0000] <Hixie>
zewt: oh you can do that? interesting

[14:34:06.0000] <Hixie>
funky

[14:34:07.0000] <Hixie>
zewt: thanks!

[14:35:00.0000] <zewt>
a rare universal among programmers; everyone hates bash, and uses it anyway

[14:36:00.0000] <Hixie>
i don't hate bash

[14:36:01.0000] <zewt>
you should

[14:47:00.0000] <heycam>
smaug____, a TypeError is thrown if the value passed in isn't an object: http://dev.w3.org/2006/webapi/WebIDL/#es-dictionary

[14:47:01.0000] <heycam>
smaug____, (oh I see zewt answered for you)

[14:47:02.0000] <heycam>
(I process my scrollback as I scroll!)

[14:47:03.0000] <zewt>
(since I asked the same thing yesterday or so :)

[14:48:00.0000] <heycam>
TabAtkins, you're right that Firefox doesn't support selection of SVG text; being worked on though https://bugzilla.mozilla.org/show_bug.cgi?id=655877

[14:52:00.0000] <TabAtkins>
That was gsnedders, but OK.

[14:59:00.0000] <wiz-dumb>
Hello!  Are there any developers from the html5lib project around?

[15:00:00.0000] <jgraham>
Yes, but I soon won't be

[15:00:01.0000] <jgraham>
(but please go ahead)

[15:00:02.0000] <wiz-dumb>
Just wanted to see if I could get a status check on an open issue regarding test/ directory missing from the 0.90 release

[15:01:00.0000] <wiz-dumb>
https://code.google.com/p/html5lib/issues/detail?id=134#c2

[15:01:01.0000] <jgraham>
The status is that we need to make a new release

[15:01:02.0000] <wiz-dumb>
Trying to upgrade the version we have at the office to .90, but this is blocking

[15:01:03.0000] <jgraham>
but have utterly failed to do that

[15:02:00.0000] <wiz-dumb>
Ok, would it be possible to have the .90 release .zip updated to simply include the tests which existed when it was packaged?

[15:02:01.0000] <jgraham>
OK. Well I have to sleep now but if you are blocking on this that provides some motivation to actually get a new release together

[15:03:00.0000] <wiz-dumb>
ok. I added myself to the issue with the same comment. I look forward to an update. Good night!

[15:03:01.0000] <jgraham>
I don't want to spend time on that. But it is all in hg so you can get the tests yourself if you need them. That doesn't work so well if you depend on PyPI ofc

[15:05:00.0000] <wiz-dumb>
Ok, thanks for the help

[15:13:00.0000] <MikeSmith>
http://ariya.ofilabs.com/2011/12/introducing-esprima.html

[15:13:01.0000] <MikeSmith>
bravo Ariya

[15:13:02.0000] <MikeSmith>
http://www.esprima.org/demo/parse.html

[15:18:00.0000] <TabAtkins>
MikeSmith: That's pretty cool!

[15:18:01.0000] <MikeSmith>
yeah

[15:19:00.0000] <MikeSmith>
Ariya's a mad scientist

[15:21:00.0000] <MikeSmith>
incidentally, I didn't know about the Mozilla parser API

[15:21:01.0000] <MikeSmith>
but looking at that, it's pretty cool too

[15:21:02.0000] <MikeSmith>
https://developer.mozilla.org/en/SpiderMonkey/Parser_API


2011-12-14
[16:17:00.0000] <TabAtkins>
Hixie: I'm not sure what you find hard to understand about the appcache use-case in https://www.w3.org/Bugs/Public/show_bug.cgi?id=14702

[16:17:01.0000] <TabAtkins>
The desired behavior is basically:

[16:17:02.0000] <TabAtkins>
(1) If you're online, proceed as normal.  Fetch everything from online or the HTTP cache as appropriate, and update appcached resources as appropriate.

[16:18:00.0000] <TabAtkins>
(2) If you're offline, use the appcache.

[16:18:01.0000] <TabAtkins>
And that's it.

[16:19:00.0000] <TabAtkins>
This is desirable over http caching because (1) http cache doesn't reliably work offline, and (2) http cache entries can disappear non-atomically, creating a broken app.

[16:19:01.0000] <TabAtkins>
Whereas the appcache for a site expires all at once, so it's easy to tell why the page is "broken", since it doesn't work offline at all.

[16:20:00.0000] <TabAtkins>
You even allude to precisely the benefit being sought ("other than making the file available offline") in comment #24, but don't seem to understand that's all that's desired.

[16:28:00.0000] <Hixie>
TabAtkins: everyone i've spoken to about this says "it's easy, the desired behaviour is just X" with a different value of X each time :-P

[16:29:00.0000] <Hixie>
TabAtkins: what i don't understand about the description you just gave, though, is why people so desperately want to avoid restructuring their page to separate their data from their structure

[16:29:01.0000] <TabAtkins>
Because it's a *very significant* restructuring.

[16:29:02.0000] <Hixie>
TabAtkins: sure, it's not cheap to do, but it has such radical benefits that i don't understand the reluctance

[16:30:00.0000] <Hixie>
TabAtkins: it's nowhere near as hard as people seem to make out

[16:30:01.0000] <Hixie>
TabAtkins: you can even do it incrementally, where initially your "data" is just the whole page which you innerHTML in

[16:30:02.0000] <TabAtkins>
And it's not all rainbows and sunshine.  Sending an empty <body> and filling it with script is bad for spiders and accessibility generally.

[16:30:03.0000] <Hixie>
i don't see why it's bad for a11y

[16:31:00.0000] <TabAtkins>
I don't know what the effects of filling in the body from script are to common a11y tools.

[16:48:00.0000] <heycam>
Hixie, apart from onerror, do all of the remaining event listener attributes only ever get called with a single Event object?

[16:49:00.0000] <Hixie>
i believe so

[16:49:01.0000] <Hixie>
but wouldn't be willing to stake money on it

[16:49:02.0000] <Hixie>
MikeSmith: cvs lock issue

[16:49:03.0000] <Hixie>
MikeSmith: nevermind

[16:49:04.0000] <heycam>
Hixie, ok thanks

[16:49:05.0000] <Hixie>
bbiab

[16:49:06.0000] <MikeSmith>
Hixie: ok, but if the lock problem happens again lemme know

[16:49:07.0000] <Hixie>
roger

[16:50:00.0000] <zewt>
cvsin' like it's 1995

[16:53:00.0000] <MikeSmith>
anybody round here on the Google+ dev team?

[16:53:01.0000] <MikeSmith>
I could use help with something...

[16:57:00.0000] <divya>
MikeSmith: on twitter @codedread  is there.

[17:10:00.0000] <MikeSmith>
/me pings Malte Ubl

[21:33:00.0000] <Hixie>
in XML, <p/>x means an empty <p> with an "x" after it

[21:33:01.0000] <Hixie>
in HTML, <p/>x means a <p> that contains an "x" (and is invalid)

[21:35:00.0000] <mikenton>
:)

[21:35:01.0000] <mikenton>
Thank you.

[01:52:00.0000] <asmodai>
Anyone happen to know Firefox/Mozilla's timeframe on the Web Audio API?

[01:55:00.0000] <annevk>
heycam|away: +1 for the new callback syntax

[01:55:01.0000] <annevk>
guess I'll email that to the list

[02:05:00.0000] <jgraham>
asmodai: Do people even think that API's a good idea? Last time I looked it seemed super-complex

[02:06:00.0000] <jgraham>
I tought roc had an alternative suggestion which looked (to my untrained eye) much nicer

[02:08:00.0000] <asmodai>
jgraham: I got some gamedevs asking about when firefox will implement it.

[02:08:01.0000] <asmodai>
I guess the recent port of Bastion to NaCL for Chrome also helped act as a catalyst.

[02:09:00.0000] <asmodai>
But let me ask them about the complexity of that API.

[02:32:00.0000] <annevk>
Web IDL updates excite me

[02:32:01.0000] <annevk>
#weird

[02:32:02.0000] <jgraham>
That's one hell of a fetish you've got going there

[02:33:00.0000] <Ms2ger>
^

[02:33:01.0000] <annevk>
I think the Encoding Standard is a weirder one

[02:36:00.0000] <zcorpan>
/me doesn't want to know what annevk does together with the Encoding Standard at night

[02:36:01.0000] <Ms2ger>
"Think" about it

[02:36:02.0000] <annevk>
/me doesn't want to tell

[02:38:00.0000] <hendry>
can the help list please be moderated? http://lists.whatwg.org/pipermail/help-whatwg.org/2011-December/000969.html is junk

[02:39:00.0000] <annevk>
email Hixie

[02:44:00.0000] <annevk>
http://dev.chromium.org/developers/how-tos/make-a-web-standards-proposal

[02:48:00.0000] <MikeSmith>
annevk: abarth wrote that I guess

[02:50:00.0000] <jgraham>
MikeSmith: Yep

[02:52:00.0000] <annevk>
so single-octet encodings works

[02:52:01.0000] <Ms2ger>
Automated tests please? :)

[02:52:02.0000] <annevk>
it seems putting multi-octet encodings inline might be problematic

[02:53:00.0000] <annevk>
some are gigantic

[02:53:01.0000] <annevk>
Ms2ger: yes I should make those

[02:54:00.0000] <annevk>
Ms2ger: but it's fairly trivial for anyone to do so

[02:57:00.0000] <zcorpan>
annevk: how gigantic?

[03:00:00.0000] <zcorpan>
/me finds a table for big5

[03:03:00.0000] <gsnedders>
annevk: Nothing is as gigantic as GB18030.

[03:24:00.0000] <asmodai>
jgraham: response:

[03:24:01.0000] <asmodai>
I found it pretty straight forward. At least for just playing a simple sound. Problem is getting same behaviour from FF and Chrme

[03:30:00.0000] <jgraham>
asmodai: (I like to think that getting proper cross-browser support would be the problem not just "FF and Chrome")

[03:39:00.0000] <asmodai>
jgraham: IE is not interesting enough to develop on

[03:39:01.0000] <asmodai>
and Opera, pardon me saying it, just doesn't have the market share as target

[03:39:02.0000] <asmodai>
so that leaves FF and Chrome.

[03:40:00.0000] <asmodai>
At least, that's my interpretation on what I am seeing from these dev folks.

[03:50:00.0000] <asmodai>
response: Pretty much, Opera support would be nice, but not a huge

[03:50:01.0000] <asmodai>
       issue for me right now. IE: Chrome Frame makes it works as Chrome.

[03:51:00.0000] <bga>
khtml!

[03:51:01.0000] <asmodai>
jgraham: Does that help? :)

[03:53:00.0000] <annevk>
argh expenses

[03:53:01.0000] <bga>
asmodai btw chrome will get 70+% in 2013

[03:53:02.0000] <annevk>
hate hate hate

[03:53:03.0000] <bga>
=> chrome only dev

[03:54:00.0000] <asmodai>
bga: market share? Time will tell how it will go.

[03:54:01.0000] <asmodai>
If there's one thing that the last 15 years have shown is that browsers and their market share come and go. :)

[03:54:02.0000] <bga>
http://en.wikipedia.org/wiki/File:Usage_share_of_web_browsers_(December_2011,_Source_StatCounter).jpg

[03:55:00.0000] <bga>
extrapolate that :)

[03:56:00.0000] <asmodai>
Sure, and time has the uncanny effect of changing charts like that as well. :)

[03:56:01.0000] <asmodai>
I'll just stick to as much cross-platform as I can.

[03:57:00.0000] <asmodai>
It's a bit funny. When people were IE-only devs they got called names, but when you do chrome-only it should suddenly be alright? :-P

[03:57:01.0000] <bga>
chrome is new IE

[03:58:00.0000] <bga>
tons of features

[03:58:01.0000] <asmodai>
That statement in and of itself is scary :)

[03:58:02.0000] <bga>
activex!

[03:58:03.0000] <bga>
aka nacl

[03:59:00.0000] <jgraham>
OMG! By 2020 Chrome will have 200% market share!

[04:00:00.0000] <bga>
99% :)

[04:00:01.0000] <bga>
and 1% - lynx

[04:00:02.0000] <asmodai>
jgraham: Anyway, did those responses help you a bit? :)

[04:01:00.0000] <jgraham>
Alternative theory: linear extrapolation without regrad for the actual dynamics is bad

[04:01:01.0000] <jgraham>
asmodai: Well sort of. I don't kow much about the audio work

[04:01:02.0000] <jgraham>
I just know that the chrome API looks really complicated

[04:01:03.0000] <asmodai>
jgraham: Ah ok

[04:01:04.0000] <asmodai>
I haven't played with it yet.

[04:02:00.0000] <beverloo>
It's a much more declarative approach

[04:02:01.0000] <asmodai>
But I know many gamedevs are looking at the webbrowser for implementing more involved games than the social ones available now

[04:02:02.0000] <asmodai>
and also to build their tools in

[04:02:03.0000] <jgraham>
Possibly all that complexity is needed, but my expectation is that it's not

[04:02:04.0000] <asmodai>
IIRC Insomniac Games already deployed some tools to browser-only.

[04:02:05.0000] <beverloo>
First steps are harder than usual, as you have to get used to the concept behind the nodes

[04:02:06.0000] <beverloo>
but after that it's really easy to work with

[04:03:00.0000] <asmodai>
I was just curious if and when FF will support Web Audio API as well :)

[04:03:01.0000] <beverloo>
An umbrella draft was published about a week ago

[04:03:02.0000] <beverloo>
The Audio Working Group is still in flux about which proposal they're going to pursue

[04:04:00.0000] <asmodai>
So is Chrome a bit too early with their implementation?

[04:04:01.0000] <beverloo>
no earlier than Mozilla is

[04:05:00.0000] <Ms2ger>
Which are prefixed?

[04:05:01.0000] <asmodai>
beverloo: Sorry, not up to date on all implementation details, so bear with me please :)   Mozilla/Gecko already has it in Nightly or so?

[04:05:02.0000] <beverloo>
Ms2ger, yes, both are.

[04:06:00.0000] <beverloo>
asmodai, Mozilla has the Audio Data API, which provides similar (though through a more imperative way) functionality

[04:06:01.0000] <beverloo>
https://wiki.mozilla.org/Audio_Data_API

[04:07:00.0000] <beverloo>
The umbrella document is here: http://www.w3.org/2011/audio/drafts/1WD/

[04:07:01.0000] <asmodai>
beverloo: thanks, forwarding and adding to my own reading list

[04:11:00.0000] <erlehmann>
is there any abstraction for all that?

[04:11:01.0000] <erlehmann>
i am thinking about porting libglitch

[05:18:00.0000] <asmodai>
wrt that Mozilla implementation of Audio API, I got told:

[05:18:01.0000] <asmodai>
Yep, I've been using the two specs. I prefer the web audio one over mozilla. Using xhr to fetch buffer seems to offer more ctrl

[05:50:00.0000] <hsivonen>
next time Mozilla proposes an API, it needs to be named "Web [noun]"

[05:54:00.0000] <annevk>
Ms2ger: if you can change Gecko for ibm864 that works for me

[05:54:01.0000] <annevk>
Ms2ger: our encoding guy claims that the encoding is not usable for Arabic anyway because it's in visual order rather than the way HTML works

[05:55:00.0000] <annevk>
Ms2ger: and therefore we don't support it and because there's no page out there using it (at least as far as we know)

[05:55:01.0000] <hsivonen>
annevk: Gecko has (used to have) special magic for visual Arabic and visual Hebrew

[05:55:02.0000] <hsivonen>
annevk: maybe the magic is just an implicit bidi override

[05:56:00.0000] <hsivonen>
annevk: dunno how relevant visual Arabic and visual Hebrew are on the Web today

[05:56:01.0000] <annevk>
I wonder why nobody ever bothered to more formally standardize the rules

[05:56:02.0000] <hsivonen>
s/(used to have)/(used to have?)/

[05:57:00.0000] <hsivonen>
annevk: support was contributed by IBM in the early days when people thought information flows from the W3C to vendors but not back

[05:58:00.0000] <annevk>
fair enough

[05:58:01.0000] <annevk>
hopefully I can fix some of that

[06:31:00.0000] <hsivonen>
it's sad that stuff like this has happened this year https://bugzilla.mozilla.org/show_bug.cgi?id=673680

[06:32:00.0000] <gsnedders>
hsivonen: Sad, but not surprising.

[06:34:00.0000] <Ms2ger>
And Google is to blame, once more

[07:26:00.0000] <bga>
ppl want analogs of opera.collect() in other browsers to wakeup GC

[07:34:00.0000] <hsivonen>
Is GB18030 the only CJK-oriented encoding that can encode all of Unicode?

[07:34:01.0000] <hsivonen>
can Shift_JIS encode everything?

[07:36:00.0000] <zewt>
no

[07:37:00.0000] <zewt>
(to SJIS)

[07:49:00.0000] <abarth>
annevk5, MikeSmith: i'm open to feedback on that "how to" if you think we should be doing things differently

[08:44:00.0000] <smaug____>
hmm

[08:44:01.0000] <smaug____>
does some spec define VoidCallback ?

[08:46:00.0000] <smaug____>
apparently no

[08:46:01.0000] <zewt>
is that an old (removed) webidl thing?

[08:47:00.0000] <smaug____>
or it is in some File system API

[08:47:01.0000] <smaug____>
but it is buggy even there

[08:47:02.0000] <smaug____>
and copied to Mouse Lock

[08:47:03.0000] <zewt>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2008-July/015239.html

[08:47:04.0000] <smaug____>
but MouseLock is still very buggy

[08:48:00.0000] <zewt>
not a fan of the fs-api spec, personally... too much an old-style listing of requirements and too few clear algorithms

[08:48:01.0000] <zewt>
(not to say I don't like the features it defines; I do)

[08:49:00.0000] <smaug____>
file system APi is rather bad, and not reviewed

[08:51:00.0000] <smaug____>
/me is always so positive :)

[08:52:00.0000] <zewt>
i really want to see the use cases it addresses implemented (being able to drag a directory to a page to let a page access native files would be *really* useful)

[08:57:00.0000] <zewt>
i don't know which is worse, people who send emails in gigantic fonts, or people who completely ignore requests to reset their font

[08:58:00.0000] <smaug____>
zewt: or people who send html email

[08:58:01.0000] <zewt>
eh it's too late for that

[08:58:02.0000] <smaug____>
given we're actively trying to break the web, we can try to change email handling too :)

[08:58:03.0000] <zewt>
raging over html mail is like raging over cookies, the world has moved on :)

[08:59:00.0000] <erlehmann>
zewt, send emails back using a big U+1F438 FROG FACE

[08:59:01.0000] <zewt>
if ever there was a valid use case for PILE OF POO

[09:01:00.0000] <erlehmann>
🔰 𝙴𝚇𝙿𝙴𝚁𝚃 𝙿𝚁𝙾𝙶𝚁𝙰𝙼𝙼𝙴𝚁𝚂

[09:02:00.0000] <zewt>
default glyph ahoy

[09:28:00.0000] <dglazkov>
good morning, Whatwg!

[09:30:00.0000] <jhawkins>
good morning dglazkov!

[09:35:00.0000] <bga>
http://img716.imageshack.us/img716/8493/fatfox.png

[09:37:00.0000] <rillian>
looks more like pregnantfox

[09:38:00.0000] <Ms2ger>
Did you know Chrome has been using 64bit machines for a few years because they're way past the limit Firefox is hitting?

[09:46:00.0000] <zewt>
off-hand, can anyone name an API that performs a resource fetch from a queued task, other than server-sent events? seems like there'd be a lot, but I can't find any others

[09:46:01.0000] <zewt>
(most fetches are started from synchronous sections, not tasks)

[09:47:00.0000] <zewt>
(rather, with "run the rest of this stuff asynchronously" sections)

[09:50:00.0000] <zewt>
"ilhan y" with the most nonsequitur mail I've seen in a while

[10:25:00.0000] <zewt>
yuck, chrome seems to reload the page when you hit enter on the address bar with a fragment id

[10:26:00.0000] <zewt>
i do that a lot in FF to quickly jump back to where I started and it doesn't reload anything (which matters with the single-page HTML spec) ... i guess it's better in other cases

[11:13:00.0000] <rniwa>
question: don't we want to remove SVG font support?

[11:13:01.0000] <shepazu>
rniwa: depends on who "we" are?

[11:13:02.0000] <rniwa>
shepazu: major browser vendors

[11:14:00.0000] <rniwa>
shepazu: I thought we are going to remove that from acid3 even

[11:14:01.0000] <rniwa>
annevk5: ?

[11:14:02.0000] <smaug____>
I thought we want to have sane spec for SVG fonts first, and then decide whether it is good for the web

[11:14:03.0000] <smaug____>
rniwa: acid3 doesn't test svg fonts anymore

[11:14:04.0000] <rniwa>
smaug____: so we want to keep SVG fonts?

[11:14:05.0000] <rniwa>
smaug____: yeah

[11:14:06.0000] <smaug____>
I didn't say we want to keep svg fonts

[11:15:00.0000] <smaug____>
I said there should be a sane spec

[11:15:01.0000] <rniwa>
smaug____: ok.

[11:15:02.0000] <rniwa>
smaug____: https://bugs.webkit.org/show_bug.cgi?id=68179

[11:15:03.0000] <smaug____>
spec which someone might implement

[11:15:04.0000] <smaug____>
but I'm sure roc has more to say about svg fonts

[11:15:05.0000] <rniwa>
smaug____: I'd rather not enable the feature on webkit by default if we're either removing or changing the spec radically

[11:15:06.0000] <shepazu>
I think SVG fonts are given short shrift, they are actually quite useful

[11:16:00.0000] <rniwa>
shepazu: usefulness things are good only if they're also sane

[11:16:01.0000] <rniwa>
for implementors

[11:17:00.0000] <rniwa>
e.g. deadlock free operating system is useful but nobody wants to implement that.

[11:17:01.0000] <Ms2ger>
I read "deadlocking the operating system is useful"

[11:17:02.0000] <Ms2ger>
And was rather confused

[11:18:00.0000] <rniwa>
Ms2ger: hehe. deadlocking the operating system might indeed be useful if you're an attacker ;)

[11:18:01.0000] <rniwa>
Ms2ger: deadlocking the OS will be one perfect DoS attack indeed.

[11:45:00.0000] <annevk>
where is sicking?

[11:45:01.0000] <annevk>
http://test.s0.no/cors/status.htm should not throw

[12:12:00.0000] <annevk>
rniwa: my understanding is that those that have implemented SVG fonts implemented a subset

[12:12:01.0000] <annevk>
rniwa: so I suspect that if they are to stay someone has to write a spec on how they actually should work

[12:13:00.0000] <annevk>
rniwa: and if that spec has sufficient implementor feedback it might be something that's useful to have

[12:13:01.0000] <annevk>
sicking: http://test.s0.no/cors/status.htm

[12:13:02.0000] <annevk>
sicking: fix bugs!

[12:13:03.0000] <annevk>
;)

[12:14:00.0000] <smaug____>
annevk: please file a bug and assign it to sicking :)

[12:15:00.0000] <sicking>
annevk: how do i find the actual tests

[12:15:01.0000] <annevk>
sicking: view source?

[12:15:02.0000] <sicking>
annevk: also, you seem to be missing redirect tests since I know we don't use the correct "Origin" header for those

[12:16:00.0000] <annevk>
these are not mine

[12:16:01.0000] <annevk>
and these are not what Opera's going to submit when we get around to that

[12:16:02.0000] <annevk>
I'm sure there's more bugs, this one just seemed quite weird :)

[12:17:00.0000] <sicking>
ugh, these tests are hard to read

[12:18:00.0000] <annevk>
http://mediamatters.org/blog/201112120005 o_O

[12:19:00.0000] <annevk>
newnewtwitter so slow

[12:19:01.0000] <annevk>
meh

[12:21:00.0000] <sicking>
annevk: oh, it's because we have a special exception for "X-Custom". We always allow that header to be set and read

[12:22:00.0000] <annevk>
proprietary extensions?

[12:23:00.0000] <annevk>
we can standardize that if you want...

[12:23:01.0000] <annevk>
will get the web littered with x-custom I guess

[12:23:02.0000] <sicking>
naah, just kidding, we don't have anything like that

[12:23:03.0000] <annevk>
/me is getting confused

[12:24:00.0000] <sicking>
i suspect that would introduce CSRF everywhere :)

[12:24:01.0000] <annevk>
TabAtkins: MutationObserverInit is a dictionary, not an interface

[12:24:02.0000] <sicking>
i have no idea why these tests fail

[12:24:03.0000] <sicking>
because i still don't understand what they do

[12:24:04.0000] <TabAtkins>
annevk: Ah, I didn't realize there was a significant difference.

[12:24:05.0000] <annevk>
sicking: because you throw on .status I guess

[12:25:00.0000] <annevk>
sicking: they give back custom status codes for either preflight or response

[12:25:01.0000] <sicking>
annevk: but we only throw when people would otherwise return 0, right?

[12:25:02.0000] <annevk>
sicking: see the table above

[12:25:03.0000] <annevk>
sicking: I think per spec you should return the actual response code

[12:25:04.0000] <annevk>
as happens in WebKit

[12:26:00.0000] <annevk>
WebKit fails 5, because it doesn't fail preflight requests that have a non-200 status

[12:26:01.0000] <sicking>
i thought we returned the real code as soon as it's available

[12:26:02.0000] <sicking>
tests that don't give any feedback other than pass/fail sort of suck :(

[12:27:00.0000] <sicking>
oh, i guess there's the message thing

[12:27:01.0000] <sicking>
but it doesn't tell me everything that the real exception contains, like line number

[12:27:02.0000] <annevk>
seems pretty clear why it fails to me

[12:27:03.0000] <annevk>
TabAtkins: yeah, dictionaries are not exposed

[12:28:00.0000] <annevk>
TabAtkins: not sure if that's a feature or not, maybe we should have something to inspect dictionaries

[12:28:01.0000] <sicking>
annevk: so yeah, 1,2,5 probably fail because we throw rather than return 0. File a bug on smaug for that :)

[12:29:00.0000] <zewt>
annevk: the general pattern of interfaces + dictionaries that look almost identical is sort of annoying...

[12:29:01.0000] <smaug____>
no no, sicking,  cors is yours

[12:29:02.0000] <zewt>
i think it would be more annoying if it exposed two very similar objects, though

[12:29:03.0000] <zewt>
(to scripts, I mean)

[12:29:04.0000] <sicking>
smaug____: this isn't cors specific. Our XHR implementation always throws for .status when it should return 0

[12:29:05.0000] <zewt>
at least right now the repetition is only internal

[12:29:06.0000] <sicking>
smaug____: i.e. when the channel failed

[12:29:07.0000] <smaug____>
though, I did change status handling at some point to be closer to what the spec wanted

[12:34:00.0000] <annevk>
per spec status should work from 2

[12:35:00.0000] <rniwa>
sicking, annevk: would you care to comment on https://bugs.webkit.org/show_bug.cgi?id=68179 ?

[12:36:00.0000] <rniwa>
eric wants some clarification on the state of SVG fonts

[12:36:01.0000] <WeirdAl>
Ms2ger: ping re DOM4 spec

[12:36:02.0000] <sicking>
rniwa: https://plus.google.com/107429617152575897589/posts/JdHnqpuUER4

[12:36:03.0000] <sicking>
rniwa: that's the announcement for SVG fonts being dropped from ACID3

[12:36:04.0000] <rniwa>
sicking: thanks!

[12:37:00.0000] <sicking>
rniwa: http://robert.ocallahan.org/2010/06/not-implementing-features-is-hard_03.html

[12:37:01.0000] <sicking>
rniwa: that's the context of mozilla pushing back against svg fonts

[12:37:02.0000] <annevk>
rniwa: done

[12:38:00.0000] <sicking>
rniwa: there's also been discussions on the SVG lists regarding dropping them from future versions of the SVG spec, but i don't have links for that

[12:38:01.0000] <rniwa>
sicking: thanks!

[12:38:02.0000] <rniwa>
sicking: I've added a comment with those URLs

[12:39:00.0000] <rniwa>
sicking: do you know where what SVG WG discussion is?

[12:39:01.0000] <rniwa>
is webkit currently the only engine that supports SVG fonts?

[12:39:02.0000] <rniwa>
or do other engines support it?

[12:39:03.0000] <sicking>
rniwa: i don't know no. I would imagine on the svg list

[12:40:00.0000] <sicking>
rniwa: i know microsoft is pushing back against them too.

[12:40:01.0000] <sicking>
rniwa: i believe they are not in IE9 or IE10

[12:40:02.0000] <smaug____>
Opera supports SVG fonts

[12:40:03.0000] <smaug____>
some of it

[12:40:04.0000] <rniwa>
smaug____: ah, ok.

[12:40:05.0000] <smaug____>
webkit supports also some subset of svg fonts

[12:40:06.0000] <rniwa>
smaug____: is that "some" same as what webkit implements?

[12:40:07.0000] <smaug____>
and IIRC Opera and webkit don't support the same subset

[12:40:08.0000] <rniwa>
smaug____: or their symmetric different non-empty?

[12:41:00.0000] <rniwa>
difference*

[12:41:01.0000] <smaug____>
but it is probably quite close

[12:41:02.0000] <gsnedders>
rniwa: I'm pretty certain that what WebKit implemented isn't the same as what Opera implements

[12:41:03.0000] <rniwa>
:(

[12:41:04.0000] <gsnedders>
I believe Opera implements quite a lot more than WebKit.

[12:41:05.0000] <rniwa>
that's horrible

[12:41:06.0000] <gsnedders>
It's possibly WebKit is mostly a subset of what Opera supports

[12:41:07.0000] <gsnedders>
*popssible

[12:41:08.0000] <rniwa>
gsnedders: so Opera implements a superset of what WebKit implements, I hope?

[12:41:09.0000] <gsnedders>
*possible

[12:42:00.0000] <gsnedders>
rniwa: More or less, I believe. There are a few things I think you support that we don't, though.

[12:43:00.0000] <gsnedders>
My understanding is WebKit supports not that much more than what Acid3 tested.

[12:43:01.0000] <rniwa>
sicking: found: http://lists.w3.org/Archives/Public/www-svg/2011Oct/0124.html

[12:43:02.0000] <WeirdAl>
bah, once again I have to remind myself that a good idea for me isn't always a good idea for the Web

[12:44:00.0000] <smaug____>
sicking: annevk: did you file that XHR bug?

[12:45:00.0000] <WeirdAl>
annevk: spec question on XHR timeout:  is it possible / permitted for the user to write the following

[12:46:00.0000] <WeirdAl>
var xhr = new XMLHttpRequest(); xhr.timeout = 1200; xhr.open(url, "GET", false) /* signifying sync */;

[12:46:01.0000] <WeirdAl>
the order of calls on XHR is what I'm concerned about

[12:47:00.0000] <WeirdAl>
ah, the spec covers that, never mind

[12:47:01.0000] <rniwa>
/me flees from XHR discussion

[12:48:00.0000] <gsnedders>
Trying to find out on Google how much of SVG Fonts WebKit supports is just showing up loads of cases of bz's article which claims that both WebKit and Opera only support the subset needed to pass Acid3, which isn't really helpful.

[12:48:01.0000] <smaug____>
WeirdAl: I thought your patch handled that

[12:48:02.0000] <gsnedders>
(Our implementation goes back to 2005 or so, so predates Acid3, and supports way more than Acid3 requires)

[12:49:00.0000] <WeirdAl>
no, I think I missed that particular case

[12:49:01.0000] <WeirdAl>
it handles the reverse, for sure

[12:49:02.0000] <smaug____>
WeirdAl: my bad

[12:49:03.0000] <WeirdAl>
mine too :p

[12:49:04.0000] <smaug____>
WeirdAl: but I did ask for tests for sync xhr

[12:49:05.0000] <WeirdAl>
right, that's why I started thinking about it

[12:50:00.0000] <annevk>
WeirdAl: open() throws

[12:51:00.0000] <sicking>
smaug____: yeah, the problem is that .status is throwing when accessed in readyState === 1

[12:51:01.0000] <annevk>
smaug____: I haven't filed it

[12:51:02.0000] <smaug____>
I just filed

[12:51:03.0000] <annevk>
during readyState 1 .status should not be available

[12:51:04.0000] <annevk>
maybe testcase bug?

[12:51:05.0000] <smaug____>
WeirdAl: hmm, did rest of the sync XHR changes land already

[12:51:06.0000] <annevk>
but it should not throw either

[12:51:07.0000] <smaug____>
maybe hsivonen did land them

[12:52:00.0000] <WeirdAl>
dunno, my tree's out of date anyway

[12:55:00.0000] <sicking>
annevk: yeah, the test sets  up a readystatechange listener which checks that .status is the expected value before calling .send

[12:55:01.0000] <sicking>
annevk: so the first thing it'll do is to check .status during readystate 1

[12:55:02.0000] <sicking>
annevk: don't know why this doesn't make the test fail everywhere

[12:56:00.0000] <sicking>
annevk: shouldn't assert_equals make the test fail if the two values are different?

[12:57:00.0000] <sicking>
annevk: i.e. looks to me that tests 3,4 should fail everywhere

[12:58:00.0000] <sicking>
annevk: fix bugs!

[12:58:01.0000] <sicking>
:)

[13:02:00.0000] <smaug____>
sicking: so never-throwing passes 1, 2, 5

[13:02:01.0000] <smaug____>
3 and 4 expect 400, but we'd give 0

[13:02:02.0000] <sicking>
smaug____: as we should

[13:02:03.0000] <sicking>
smaug____: the test is just wrong

[13:02:04.0000] <smaug____>
k

[13:03:00.0000] <smaug____>
who wrote those tests?

[13:03:01.0000] <sicking>
smaug____: at least the first time it gets .status

[13:03:02.0000] <sicking>
smaug____: possibly all other times when it gets .status should we return 400

[13:04:00.0000] <sicking>
smaug____: ask annevk

[13:04:01.0000] <smaug____>
er, what?

[13:04:02.0000] <smaug____>
first time 0 then 400 o_O

[13:11:00.0000] <sicking>
smaug____: we should return 0 when .readystate is 1

[13:11:01.0000] <sicking>
smaug____: and 400 once readystate is 2 and we've received the http head

[13:11:02.0000] <sicking>
smaug____: it gets .status from the readystatechange handler

[13:17:00.0000] <Ms2ger>
WeirdAl, ack

[13:17:01.0000] <WeirdAl>
Ms2ger: never mind... I had an idea for an ElementWalker, but then I realized:  who needs that besides me?  On the Web?  Nobody.

[13:18:00.0000] <Ms2ger>
I won't argue with that :)

[13:21:00.0000] <zewt>
annevk: just out of curiosity, in async XHR2, is there any point to setting the synchronous flag in send() step 9, since 8.5 makes all of step 9 async already?

[13:22:00.0000] <Velmont>
annevk: lol, I see you're an effective test user :P

[13:50:00.0000] <Ms2ger>
\o/ Event constructors!

[13:52:00.0000] <smaug____>
Ms2ger: some. We need spec changes to add support for more event ctors

[13:52:01.0000] <Ms2ger>
smaug____, you saw the D4E proposal?

[13:52:02.0000] <smaug____>
yeah

[13:52:03.0000] <smaug____>
it has some

[13:52:04.0000] <smaug____>
UIEvent

[13:52:05.0000] <smaug____>
and MouseEvent

[13:52:06.0000] <smaug____>
ah, I could add still compositionevent

[13:53:00.0000] <smaug____>
oh, also progress event

[13:54:00.0000] <smaug____>
Ms2ger: if you find any specs for event init dictionaries which Gecko doesn't support, please file bugs

[13:54:01.0000] <Ms2ger>
Will do

[13:54:02.0000] <Ms2ger>
Touch events?

[13:54:03.0000] <zewt>
(havn't checked, but I'd guess WebGLContextEventInit, FWIW)

[13:55:00.0000] <smaug____>
I don't know what will happen to touch events :(

[13:55:01.0000] <smaug____>
Apple isn't playing nicely

[13:55:02.0000] <Ms2ger>
As usual

[13:58:00.0000] <zewt>
how do mails like this get sent by @google users in 2011? http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-December/034185.html

[13:58:01.0000] <zewt>
it is

[13:58:02.0000] <zewt>
somewhat

[13:58:03.0000] <zewt>
hard to read

[13:59:00.0000] <timeless>
oh

[13:59:01.0000] <timeless>
that's easy

[13:59:02.0000] <timeless>
you have two different apps "helping" you do word wrapping

[14:00:00.0000] <timeless>
one of them is gmail, the other is whatever you composed your letter in

[14:00:01.0000] <timeless>
it bites me often enough

[14:03:00.0000] <timeless>
anyone know how to get gmail /mu/ to flush its pending tasks?

[14:16:00.0000] <heycam>
rniwa, also not sure you're aware but there's an effort underway to allow SVG glyphs inside OpenType fonts

[14:16:01.0000] <heycam>
rniwa, so that's not the SVG Fonts format per se; it's using all the normal OT tables to do glyph substitution etc., but just using SVG content inside a table for the glyph

[14:27:00.0000] <jwalden>
/me thinks of XML, and two problems

[14:27:01.0000] <Ms2ger>
Now you've got a dozen

[14:36:00.0000] <rniwa>
heycam: interesting

[14:37:00.0000] <heycam>
rniwa, http://lists.w3.org/Archives/Public/public-svgopentype/ if you're interested

[14:40:00.0000] <rniwa>
heycam: we probably need to limit the SVG features we can use there?

[14:41:00.0000] <heycam>
rniwa, yes. definitely no external resources, at least. :)

[14:41:01.0000] <heycam>
rniwa, also script. but animation should be allowed.

[14:41:02.0000] <shepazu>
yes, probably only shapes would be reasonable

[14:41:03.0000] <heycam>
shepazu, just rectangles

[14:41:04.0000] <shepazu>
heycam: SVGPoint

[14:42:00.0000] <shepazu>
(yes, the object, not the element)

[14:42:01.0000] <shepazu>
ONLY CATMULL-ROM CURVES!!

[14:48:00.0000] <rniwa>
heycam: also.. it probably doesn't make sense for it have text inside

[14:48:01.0000] <rniwa>
heycam: i don't want my glyph to contain letters of some other font

[14:49:00.0000] <zewt>
infinite font recursion D:

[14:49:01.0000] <heycam>
rniwa, certainly doesn't make sense to have the same font being used inside. but text in general?

[14:49:02.0000] <heycam>
rniwa, what do we gain from disallowing it

[14:49:03.0000] <rniwa>
heycam: how do you detect recursions then?

[14:49:04.0000] <heycam>
rniwa, you'd have to do some work for that, sure

[14:49:05.0000] <rniwa>
heycam: e.g. if you have font1 -> font2 -> font1

[14:49:06.0000] <heycam>
(yeah for mutually recursive fonts)

[14:49:07.0000] <zewt>
any number of ways (check the stack explicitly; limit the stack depth; etc)

[14:50:00.0000] <Ms2ger>
So, given the document "<img id=foo><img id=foo>"

[14:50:01.0000] <Ms2ger>
What does document.body.children.item("foo") return?

[14:50:02.0000] <rniwa>
Ms2ger: it could be the first element, no?

[14:50:03.0000] <rniwa>
s/could/should/

[14:50:04.0000] <Ms2ger>
Why? :)

[14:52:00.0000] <Ms2ger>
And how about if the document is "<img><img id=foo><img id=foo>"?

[14:53:00.0000] <rniwa>
Ms2ger: oh wait... neither DOM3 nor DOM4 appear to specify the behavior for looking up children via id.

[14:54:00.0000] <Ms2ger>
Hint: item takes an unsigned long

[14:54:01.0000] <rniwa>
oh wait it does: http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#htmlcollection

[14:54:02.0000] <rniwa>
Ms2ger: "Returns the first item with ID or name name from the collection."

[14:54:03.0000] <Ms2ger>
That's namedItem

[14:55:00.0000] <rniwa>
oh..

[14:55:01.0000] <rniwa>
Ms2ger: good point.

[14:55:02.0000] <rniwa>
should probably throw in that case?

[14:55:03.0000] <Ms2ger>
Another hint: ToUint32("foo") is 0

[14:55:04.0000] <rniwa>
Ms2ger: huh. we'll get the first element anyway huh?

[14:55:05.0000] <rniwa>
Ms2ger: that might be confusing.

[14:56:00.0000] <Ms2ger>
That's what should happen, indeed

[14:56:01.0000] <Ms2ger>
Now test in Chrome :)

[14:56:02.0000] <rniwa>
Ms2ger: it's broken?

[14:56:03.0000] <Ms2ger>
It returns a nodelist with the two last imgs

[14:56:04.0000] <rniwa>
Ms2ger: I happen to be refactoring the code implementing all of that

[14:56:05.0000] <rniwa>
Ms2ger: so I'm more than happy to fix that

[14:56:06.0000] <Ms2ger>
\o/

[14:56:07.0000] <rniwa>
Ms2ger: huh odd

[14:57:00.0000] <Ms2ger>
Code is here, fwiw: http://www.google.com/codesearch#OAMlx_jo-ck/src/third_party/WebKit/Source/WebCore/bindings/js/JSHTMLCollectionCustom.cpp&exact_package=chromium&q=HTMLCollection&l=74

[14:57:01.0000] <rniwa>
Ms2ger: could you file a bug on bugs.webkit.org?

[14:57:02.0000] <Ms2ger>
Sure

[14:58:00.0000] <Ms2ger>
HTML DOM?

[14:58:01.0000] <rniwa>
Ms2ger: yup

[14:58:02.0000] <rniwa>
Ms2ger: cc me (rniwa⊙wo)

[14:58:03.0000] <Ms2ger>
Will do, thanks

[14:59:00.0000] <rniwa>
Ms2ger: to begin with, I don't think item() should be returning a list of item

[14:59:01.0000] <rniwa>
of nodes*

[14:59:02.0000] <rniwa>
Ms2ger: it should be returning a node

[14:59:03.0000] <rniwa>
wtf...

[15:01:00.0000] <zewt>
// FIXME: HTML5 specifies that non-HTMLOptionsCollection collections should return

[15:01:01.0000] <zewt>
// the first matching item instead of a NodeList.

[15:01:02.0000] <zewt>
seems strange to release code with that big of a FIXME

[15:01:03.0000] <Ms2ger>
HTML5 probably didn't exist when the code was written

[15:02:00.0000] <rniwa>
zewt: it's funny how we do it correctly for html option element

[15:03:00.0000] <rniwa>
zewt: which is probably like 0.01% of usage of that API

[15:03:01.0000] <annevk>
zewt: different synchronous flags

[15:03:02.0000] <annevk>
zewt: one is tied to XMLHttpRequest, one is tied to fetch

[15:03:03.0000] <zewt>
but the fetch is happening within an algorithm that itself is already async

[15:04:00.0000] <annevk>
zewt: only if the asynchronous flag is unset

[15:04:01.0000] <annevk>
euh synchronous flag

[15:04:02.0000] <annevk>
8.5 does not happen if the synchronous flag is set

[15:05:00.0000] <zewt>
i mean, if the synchronous flag is unset, then you go async, then run fetch and tell it to go async when it's already async

[15:05:01.0000] <zewt>
(i don't think this breaks anything, which is why it was just a curiosity, just seems redundant)

[15:06:00.0000] <annevk>
it matters for the case where the synchronous flag is set I think

[15:06:01.0000] <zewt>
but step 9 could just always set the fetch synchronous flag

[15:06:02.0000] <annevk>
no

[15:07:00.0000] <zewt>
for async xhr, step 9 itself is already async (due to 8.5), and the fetch is part of that

[15:07:01.0000] <annevk>
and the fetch needs to happen async

[15:07:02.0000] <annevk>
because other things happen during the fetch

[15:07:03.0000] <annevk>
in the async case

[15:07:04.0000] <zewt>
but it is, since the calling algorithm is already async

[15:07:05.0000] <annevk>
right

[15:07:06.0000] <annevk>
and in the sync case, the fetch needs to be sync

[15:07:07.0000] <annevk>
because nothing should happen during the fetch

[15:08:00.0000] <zewt>
which it also is (since 8.5 doesn't happen)

[15:08:01.0000] <annevk>
send() returning has no effect on how the message loop works per se

[15:09:00.0000] <zewt>
well

[15:09:01.0000] <zewt>
i read step 8.5 as "return the send() call, and continue running this algorithm asynchronously" (since there's no other way you can keep running the algorithm)

[15:10:00.0000] <zewt>
(it doesn't actually say "asynchronously", but if that's not what's intended I'm not sure what it means)

[15:11:00.0000] <zewt>
eg. step 8.5 causes step 9 itself to happen asynchronously, so anything it does (eg. the fetch) is asynchronous, so the fetch algorithm doesn't need to do that again

[15:14:00.0000] <annevk>
so you say the fetch algorithm should not have a synchronous flag because it is implied?

[15:14:01.0000] <zewt>
no (because other things use it--I assume)

[15:14:02.0000] <annevk>
e.g. you think the way http://www.whatwg.org/specs/web-apps/current-work/#dom-xmldocument-load is defined is wrong?

[15:14:03.0000] <zewt>
i just mean that XHR can always set the synchronous flag

[15:14:04.0000] <zewt>
because it's redundant with 8.5 which already makes the fetch async

[15:15:00.0000] <annevk>
if you set the synchronous flag fetch will not update you intermediately

[15:15:01.0000] <annevk>
so switching states and such breaks

[15:15:02.0000] <zewt>
ah k

[15:16:00.0000] <annevk>
there's probably a better way to define this and we'll figure it out in a decade or so

[15:16:01.0000] <zewt>
heh

[15:16:02.0000] <annevk>
this is the first iteration of defining fetching and it's not always awesome

[15:17:00.0000] <annevk>
defining HTML properly took twenty years or so

[15:17:01.0000] <annevk>
encodings: ongoing

[15:17:02.0000] <zewt>
seems like it's also pretty hard to find the boundary of where it's worth banging your head trying to clean up and tighten a spec, and where it really is "good enough"

[15:17:03.0000] <annevk>
URLs: ew

[15:17:04.0000] <annevk>
zewt: I think the boundary is "good enough for now"

[15:17:05.0000] <Ms2ger>
DOM: ew

[15:17:06.0000] <zewt>
which I guess comes down to how much you trust implementors

[15:17:07.0000] <annevk>
where "for now" means the next five years

[15:18:00.0000] <Ms2ger>
Not at all

[15:18:01.0000] <zewt>
if you don't trust them *at all* then you try to turn specs into legal documents and everyone wants to kill themselves

[15:18:02.0000] <annevk>
and then we'll find a better way and maybe five-ten years later someone will write it up that way

[15:18:03.0000] <annevk>
Ms2ger: hey, DOM is becoming pretty decent

[15:18:04.0000] <annevk>
good idea about nn

[15:18:05.0000] <zewt>
you missed

[15:19:00.0000] <annevk>
I do appreciate you taking a close look

[15:19:01.0000] <annevk>
you are one of the rare few that do :)

[15:19:02.0000] <zewt>
don't want to waste your time on stuff that works, i do want to figure out why things are the way they are though :)

[15:19:03.0000] <annevk>
and imo it's definitely worth it

[15:21:00.0000] <annevk>
oh hey, for those who care, I wrote something somewhat "lenghty" (compared to my usual posts) in Dutch: http://fronteers.nl/blog/2011/12/het-platform-bouwen

[15:22:00.0000] <annevk>
it's rambling on building the platform

[15:24:00.0000] <zewt>
gaah

[15:25:00.0000] <zewt>
i just typed "document.body.children" into the chrome console ... in a tools window attached to the single-page html spec

[15:25:01.0000] <zewt>
quite possibly the worst idea imaginable

[15:25:02.0000] <annevk>
we spec editors love not using anything but <hx> and <p> inside <body> :)

[15:25:03.0000] <zewt>
well, the problem being that the console froze :P

[15:26:00.0000] <gsnedders>
zewt: Surprising. :P

[15:26:01.0000] <gsnedders>
zewt: File a perf bug. :P

[15:26:02.0000] <zewt>
yeah i'll get riiiight on that

[15:27:00.0000] <annevk>
HTML has perf bugs. Film at 11.

[15:27:01.0000] <annevk>
if reddit was not mainstream I'm sure it would be a meme :p

[15:30:00.0000] <zewt>
fwiw, IE9 agrees with Chrome about document.body.children[string] returning a collection rather than the first item

[15:30:01.0000] <zewt>
re earlier conversation

[15:33:00.0000] <Hixie>
anyone know if anyone implements dropzone="" yet?

[15:33:01.0000] <zewt>
(looks like Opera returns a collection, too)

[15:35:00.0000] <zewt>
rniwa: ^

[15:35:01.0000] <rniwa>
zewt: pong

[15:36:00.0000] <MikeSmith>
yall dutch MCs got a nice language to work with

[15:36:01.0000] <rniwa>
zewt: wait, so children returns a collection?

[15:36:02.0000] <rniwa>
on IE9?

[15:36:03.0000] <MikeSmith>
/me reading http://fronteers.nl/blog/2011/12/het-platform-bouwen

[15:39:00.0000] <MikeSmith>
rniwa: hey, you have a test suite of any kind started for undomanager?

[15:39:01.0000] <rniwa>
MikeSmith: not yet

[15:39:02.0000] <MikeSmith>
ok

[15:39:03.0000] <MikeSmith>
would be a bit premature, I guess

[15:40:00.0000] <rniwa>
MikeSmith: my plan is to start implementing it in webkit and write test suites as I do

[15:40:01.0000] <MikeSmith>
cool

[15:40:02.0000] <rniwa>
s/test suite/tests/

[15:40:03.0000] <zewt>
rniwa: one sec, making a quick test page

[15:40:04.0000] <rniwa>
MikeSmith: it's hard to write good tests without any implementation

[15:40:05.0000] <MikeSmith>
I'm in the process now of looking at specs in development and figuring out which are priorities for testing

[15:40:06.0000] <MikeSmith>
rniwa: yeah, sure

[15:41:00.0000] <smaug____>
priorities for testing? all of them?

[15:41:01.0000] <zewt>
http://zewt.org/~glenn/test-htmlcollection.html

[15:41:02.0000] <zewt>
rniwa: IE returns an HTMLCollection containing both items for both children["x"] and children.item("x")

[15:42:00.0000] <MikeSmith>
smaug____: well, more in terms of "what are we lacking any test suites at all for right now but that we could have tests for if somebody were to write test cases"

[15:42:01.0000] <rniwa>
zewt: that seems wrong

[15:42:02.0000] <zewt>
chrome returns an array containing the same (but it's not an HTMLCollection)

[15:42:03.0000] <rniwa>
zewt: :(

[15:42:04.0000] <zewt>
(but they're both similar--they're both arrays of results)

[15:42:05.0000] <zewt>
only Firefox actually returns a single result for both of those

[15:42:06.0000] <rniwa>
zewt: that sucks

[15:42:07.0000] <zewt>
basically, IE (and almost Chrome) treats those functions as filters instead of getters

[15:42:08.0000] <rniwa>
zewt: maybe there are some web contents that depend on this behavior then

[15:43:00.0000] <zewt>
in IE9 you can say document.body.children["x"]["x"]["x"]["x"]["x"] since each returns another HTMLCollection

[15:43:01.0000] <rniwa>
zewt: that's funny

[15:44:00.0000] <zewt>
/me hunts around opera trying to find the console, which seems to be quite well-hidden now

[15:44:01.0000] <zewt>
gaaaaah, opera is yet different, heh

[15:44:02.0000] <zewt>
let me dump the results into a static page

[15:46:00.0000] <zewt>
gah, copying text from ff8's console and pasting into notepad is doing something evil

[15:47:00.0000] <smaug____>
zewt: what does it do?

[15:47:01.0000] <smaug____>
on FF9 it seems to work just fine

[15:47:02.0000] <smaug____>
(linux)

[15:47:03.0000] <zewt>
not entirely sure, i ended up with some kind of non-printing characters at the end of the line which confused it

[15:47:04.0000] <zewt>
i jumped to gvim, i'll poke at it in a few

[15:49:00.0000] <Velmont>
zewt: CTRL+ALT+I for DragonFly, then you can either ESC to get a console, or click it. -- Or Error Console, CTRL ALT O. I think :-)

[15:50:00.0000] <annevk>
whoa

[15:50:01.0000] <annevk>
data:text/html,<style>input:hover{background:lime}</style><label>hover this text<input></label>

[15:50:02.0000] <sicking>
zewt: wait, wht does body.children.x return?

[15:50:03.0000] <annevk>
in WebKit/Gecko

[15:50:04.0000] <annevk>
that's pretty wild

[15:50:05.0000] <sicking>
zewt: all elements with name <x> in the children list?

[15:51:00.0000] <zewt>
sicking: one sec

[15:51:01.0000] <zewt>
http://zewt.org/~glenn/test-htmlcollection-results.txt

[15:51:02.0000] <zewt>
for those three, literally every implementation is significantly different, heh

[15:51:03.0000] <sicking>
annevk: ugh, gecko has a pretty nasty bug there

[15:51:04.0000] <sicking>
annevk: hover the label, then the <input> and then the label again

[15:52:00.0000] <TabAtkins>
annevk: Yeah, exposing dictionaries somehow would be good, so you can trivially feature-test.

[15:52:01.0000] <annevk>
sicking: oops

[15:52:02.0000] <sicking>
annevk: nice, webkit has the same bug

[15:52:03.0000] <annevk>
sicking: prolly because of the magic

[15:52:04.0000] <sicking>
annevk: harder to trigger, but it's still there

[15:53:00.0000] <rniwa>
zewt: seems like IE9's behavior is most sane

[15:53:01.0000] <rniwa>
zewt: of course FF8's behavior matches the spec but is inconsistent with the rest.

[15:54:00.0000] <rniwa>
zewt: I think we should just change the spec to always return HTMLCollection

[15:54:01.0000] <rniwa>
zewt: given that IE, WebKit, and Opera all returns array-like objects for [] and namedItem, I don't think it makes sense for us to match the spec.

[15:55:00.0000] <Hixie>
anyone know if making atob() skip spaces has broken anything?

[15:55:01.0000] <Hixie>
gsnedders said that opera not throwing exceptions in atob was causing compat issues

[15:55:02.0000] <Hixie>
but i don't seem to have any up to date info on atob() compat for opera since it was updated to throw exceptions but not for whitespace

[15:55:03.0000] <zewt>
sicking: added children.x to http://zewt.org/~glenn/test-htmlcollection-results.txt

[15:55:04.0000] <zewt>
rniwa: agreed (odd-looking api but oh well)

[15:56:00.0000] <rniwa>
zewt: well but I suppose FF8 also returns HTMLCollection for option element

[15:56:01.0000] <rniwa>
zewt: so this change makes things more consistent across the board

[15:56:02.0000] <zewt>
http://zewt.org/~glenn/test-htmlcollection.html in case anyone wants to stupid-check my test

[15:57:00.0000] <rniwa>
zewt: can we also test IE6/IE7?

[15:57:01.0000] <zewt>
need to dig out my vms

[15:57:02.0000] <zewt>
(i dream of distributed browser code testing~~~)

[15:57:03.0000] <annevk>
nn

[15:58:00.0000] <zewt>
later

[15:58:01.0000] <sicking>
zewt: ugh! .children shouldn't be a HTML collection

[15:58:02.0000] <sicking>
zewt: it might be worth trying FF10. I think we turned a lot of HTMLCollections into NodeLists there

[15:59:00.0000] <rniwa>
sicking: oh dear...

[15:59:01.0000] <rniwa>
sicking: we're improving engines too fast  LOL

[15:59:02.0000] <sicking>
rniwa: i disagree, we're not doing it fast enough :)


2011-12-15
[16:00:00.0000] <zewt>
sicking: it's an HTMLCollection in DOM4, and in that all four implementations agree

[16:00:01.0000] <rniwa>
sicking: hopefully we don't end up ping-pong each other's behavior

[16:00:02.0000] <rniwa>
zewt: wait but webkit doesn't return HTMLCollection, right?

[16:00:03.0000] <zewt>
according to "document.body.children instanceof HTMLCollection"

[16:01:00.0000] <zewt>
rniwa: it doesn't return it--talking about children *itself* being an HTMLCollection

[16:01:01.0000] <rniwa>
zewt: we just return an array

[16:01:02.0000] <rniwa>
zewt: ah, I see. right.

[16:01:03.0000] <sicking>
zewt: if by "all four" you exclude FF10 :)

[16:02:00.0000] <zewt>
sicking: all four production releases

[16:02:01.0000] <rniwa>
/me insists on us needing data for IE6, 7, & 8

[16:02:02.0000] <zewt>
i don't have VMs for all of those it seems, testing 6 now

[16:02:03.0000] <rniwa>
zewt: thanks

[16:02:04.0000] <sicking>
zewt: hmm.. it appears to be in FF10 as well.. bummer

[16:03:00.0000] <rniwa>
sicking: that's good though

[16:03:01.0000] <rniwa>
sicking: that means all browsers agree on that

[16:03:02.0000] <sicking>
zewt: ouch, we even still make getElementsByTagName return a HTMLCollection :(

[16:04:00.0000] <sicking>
rniwa: HTMLCollection is a very messy API. I almost think it's strictly worse than NodeList

[16:05:00.0000] <zewt>
2011 and i'm debugging code to make it work in ie6

[16:05:01.0000] <zewt>
kill me

[16:05:02.0000] <Hixie>
just let it break, man

[16:05:03.0000] <rniwa>
sicking: you make it sound as if NodeList is a good API :P

[16:05:04.0000] <zewt>
Hixie: the point is testing code for the above :)

[16:07:00.0000] <bga>
infinite redirect on facebook :/

[16:07:01.0000] <rniwa>
sicking: caching nodes for NodeList is just a nightmare

[16:07:02.0000] <rniwa>
sicking: it's the reason inserting a node is O(depth of tree) in WebKit at the moment

[16:08:00.0000] <zewt>
rniwa: ie6 doesn't have HTMLCollection at all, and all four cases return an array-like object with two items

[16:08:01.0000] <rniwa>
zewt: ah I see

[16:08:02.0000] <rniwa>
zewt: but still consistent with being it array-like

[16:08:03.0000] <zewt>
right

[16:08:04.0000] <rniwa>
zewt: so I think we have a clear compat. issue here

[16:10:00.0000] <zewt>
also, namedItem is less clear

[16:11:00.0000] <zewt>
in IE6 it returned an array, in IE9 it returns a single item (matching FF); Chrome and Opera still return arrays

[16:11:01.0000] <rniwa>
zewt: :(

[16:11:02.0000] <zewt>
smells like IE changing to match the spec but the spec was wrong

[16:11:03.0000] <rniwa>
zewt: yeah...

[16:11:04.0000] <rniwa>
zewt: they might need to play a ping-pong here.

[16:12:00.0000] <zewt>
it's odd that IE9 *only* changed to match the spec for namedItem and not the others, though

[16:12:01.0000] <zewt>
maybe that was the only one they could change without breaking lots of pages

[16:14:00.0000] <rniwa>
zewt: could be.

[16:14:01.0000] <rniwa>
zewt: i mean they should be told us it won't work

[16:14:02.0000] <rniwa>
zewt: then we didn't have to wait 'til now to figure this out :(

[16:14:03.0000] <rniwa>
should have*

[16:15:00.0000] <zewt>
rniwa: and not inconsistently changing one part of a tightly-related API and just confusing things further

[16:15:01.0000] <rniwa>
or that spec authors should have paid more attention..

[16:15:02.0000] <rniwa>
zewt: yeah,

[16:15:03.0000] <rniwa>
zewt: just changing the behavior of namedItem is way too confusing

[16:15:04.0000] <zewt>
if the implementors aren't giving back feedback (I wouldn't know either way) then there's only so much the editors can do

[16:16:00.0000] <zewt>
(MS people--not all of them--seem to be in that group of people who wait until LC then give two years of withheld feedback all at once)

[16:17:00.0000] <sicking>
rniwa: that's not a NodeList problem

[16:17:01.0000] <sicking>
rniwa: you'd have the same problem if .childNodes was a HTMLCollection

[16:17:02.0000] <rniwa>
sicking: right.

[16:17:03.0000] <rniwa>
sicking: so I think all of those are bad APIs

[16:17:04.0000] <Hixie>
zewt: your definition of "two years of withheld feedback" is much smaller than mine...

[16:18:00.0000] <sicking>
rniwa: additionally, lots of things will force you to walk the parent chain when inserting nodes

[16:18:01.0000] <sicking>
rniwa: so it's not a .childNodes problem either really

[16:18:02.0000] <sicking>
rniwa: MutationObservers will force you to do the same

[16:18:03.0000] <zewt>
well, i seem to recall seeing them dump feedback in response to CfC's (making me think: why did you wait?)

[16:18:04.0000] <sicking>
rniwa: as do ranges likely

[16:19:00.0000] <rniwa>
sicking: sure. but we should be able to insert nodes in O(1) as long as there are no ranges and no observers

[16:19:01.0000] <zewt>
(or whatever magic TLA it is they use when calling for updating drafts)

[16:19:02.0000] <rniwa>
sicking: which is fairly common

[16:20:00.0000] <rniwa>
sicking: we're thinking to have some hash map for selection, focus, etc...

[16:20:01.0000] <rniwa>
sicking: but most of those things need to happen at removal

[16:20:02.0000] <rniwa>
sicking: e.g. inserting a node shouldn't require DOM traversal for ranges

[16:21:00.0000] <zewt>
anyway just my impression from the outside, i'm not an editor tearing out my hair at this stuff :)

[16:21:01.0000] <rniwa>
zewt: we just need to split spec into smaller pieces

[16:21:02.0000] <rniwa>
zewt: and push them into LC as soon as possible

[16:22:00.0000] <sicking>
rniwa: shrug. I don't think that walking the parent chain would be a big deal in most cases

[16:22:01.0000] <rniwa>
sicking: it actually is.

[16:22:02.0000] <rniwa>
sicking: I've found that most trees have depths of 5-20

[16:22:03.0000] <rniwa>
sicking: but walking all those nodes on every node insertion is quite expensive

[16:22:04.0000] <sicking>
rniwa: it's just a linked list

[16:23:00.0000] <sicking>
and 20 is pretty short

[16:23:01.0000] <rniwa>
sicking: simply because loading the node into memory may invalidate L1/L2 caches in the CPU

[16:23:02.0000] <zewt>
linked lists are notoriously troublesome for cache...

[16:23:03.0000] <sicking>
you'll likely have to access the node anyway when laying it out

[16:23:04.0000] <rniwa>
sicking: sure.

[16:23:05.0000] <rniwa>
sicking: layout is super duper slow

[16:23:06.0000] <zewt>
(though that can be alleviated with some/a lot of work)

[16:24:00.0000] <rniwa>
sicking: but we should make DOM operation as fast as possible nonetheless

[16:24:01.0000] <sicking>
i don't actually know if walking the parent chain shows up in profile for us. I think most of the time it doesn't

[16:24:02.0000] <sicking>
but i'm not fully sure

[16:24:03.0000] <sicking>
bz would know

[16:26:00.0000] <rniwa>
sicking: in most pages it doesn't.

[16:26:01.0000] <rniwa>
sicking: but gmail, for example, spends 80-90% of its loading time in making DOM mutations

[16:27:00.0000] <zewt>
heh, gmail being the only web app i've ever used that actually takes so long to start up it needs a progress bar for it

[16:28:00.0000] <sicking>
haha

[16:29:00.0000] <rniwa>
anyway, I think making DOM operations faster is a good thing

[16:30:00.0000] <rniwa>
and we should make sure we don't introduce new APIs that makes everything slower

[16:31:00.0000] <zewt>
rniwa: are you going to file a bug about changing HTMLCollection in dom4?

[16:31:01.0000] <zewt>
don't know whether to recommend the results be NodeList or HTMLCollection

[16:32:00.0000] <zewt>
(that's the lesser problem, though)

[16:32:01.0000] <rniwa>
zewt: I think you should file one since you have a test

[16:33:00.0000] <zewt>
k

[16:39:00.0000] <zewt>
anyone have FF8 to test?

[16:39:01.0000] <zewt>
(to narrow where the namedItem change was made)

[16:41:00.0000] <rniwa>
zewt: I have FF7...

[16:42:00.0000] <zewt>
that'd get closer...

[16:43:00.0000] <rniwa>
document.body.children is an HTMLCollection: true

[16:43:01.0000] <rniwa>
document.body.children["x"]: [object XrayWrapper [object HTMLDivElement]] undefined HTMLElement

[16:43:02.0000] <rniwa>
document.body.children.item("x"): [object XrayWrapper [object HTMLDivElement]] undefined HTMLElement

[16:43:03.0000] <rniwa>
document.body.children.namedItem("x"): [object XrayWrapper [object HTMLDivElement]] undefined HTMLElement

[16:43:04.0000] <rniwa>
document.body.children.x: [object XrayWrapper [object HTMLDivElement]] undefined HTMLElement

[16:43:05.0000] <rniwa>
(FF7)

[16:43:06.0000] <rniwa>
now onto FF8

[16:43:07.0000] <zewt>
err

[16:43:08.0000] <zewt>
sorry, I meant IE7

[16:44:00.0000] <rniwa>
zewt: oh IE7

[16:44:01.0000] <zewt>
to narrow where IE made the namedItem change we talked about before

[16:44:02.0000] <zewt>
(not a huge data point, but worth noting)

[16:44:03.0000] <rniwa>
no i don't...

[16:46:00.0000] <rniwa>
zewt: if you have a windows machine, you can download these images: http://www.microsoft.com/download/en/details.aspx?id=11575

[16:46:01.0000] <zewt>
yuck, trying to undo a lot in gmail's editor is *painful*

[16:46:02.0000] <zewt>
hold down ^Z, go get a sandwich

[16:46:03.0000] <zewt>
like 1/3 second per undo

[16:47:00.0000] <rniwa>
zewt: oh dear...

[16:47:01.0000] <rniwa>
ojan: ^

[16:47:02.0000] <rniwa>
zewt: on which UA?

[16:47:03.0000] <zewt>
(started typing a mail, decided to copy my text and undo to get the original quotes back)

[16:48:00.0000] <ojan>
rniwa: ?

[16:48:01.0000] <zewt>
FF8, html editor

[16:48:02.0000] <rniwa>
ojan: zewt tells me undo on gmail is super slow (takes 1/3 second)

[16:48:03.0000] <zewt>
slow enough that i held ^Z for a while, came here to grumble about it, and it was still going when I tabbed back :)

[16:49:00.0000] <rniwa>
zewt: I think gmail recently switched not to use iframes for editors

[16:49:01.0000] <rniwa>
zewt: in "new look"

[16:49:02.0000] <rniwa>
zewt: so that might be theculprit.

[16:49:03.0000] <zewt>
(replying to hixie's 100-page mails is seriously painful in gmail's editor, but this is just two paragraphs)

[16:49:04.0000] <zewt>
rniwa: havn't switched to "new look" (since google "new looks" are always ... not good)

[16:49:05.0000] <Hixie>
pine baby

[16:50:00.0000] <zewt>
Hixie: given the choice of pains... :)

[17:02:00.0000] <zewt>
rniwa: sort of funny to see Microsoft distributing tools as RARs

[17:02:01.0000] <gsnedders>
Hixie: you want to know if skipping whitespace in atob causes issues?

[17:02:02.0000] <Hixie>
gsnedders: i did a search of the bts without seeing any problems

[17:03:00.0000] <Hixie>
gsnedders: so i'm guessing the answer is that it was fine in practice

[17:03:01.0000] <gsnedders>
Hixie: That's about all I can do

[17:03:02.0000] <gsnedders>
Hixie: So I guess so

[17:03:03.0000] <Hixie>
well i updated the spec

[17:03:04.0000] <Hixie>
to match opera

[17:04:00.0000] <Hixie>
i'm amused by the e-mail i just sent that mentions a bug that i wontfixed back in 2000

[17:04:01.0000] <Hixie>
while interning at netscape

[17:04:02.0000] <gsnedders>
Hixie: You're aware of CORE-38656?

[17:04:03.0000] <gsnedders>
I presume you found that.

[17:05:00.0000] <gsnedders>
Which was the original change based upon your proposal to not throw for whitespace.

[17:05:01.0000] <gsnedders>
But yeah, nothing seems to break.

[17:05:02.0000] <Hixie>
yeah zcorpan posted that to the whatwg list which is what led me to have the question

[17:06:00.0000] <gsnedders>
I can't even find the prior evidence for not throwing breaking stuff, though I remember seeing bug reports about it

[17:07:00.0000] <Hixie>
my evidence was you saying so :-P

[17:08:00.0000] <gsnedders>
Yeah, I know that was your evidence.

[17:08:01.0000] <zewt>
heh, i've talked to someone on mailing lists, gone "uh where have I seen this name before", and realized that it was someone I had talked to on some other mailing list literally exactly one decade earlier

[17:08:02.0000] <gsnedders>
I just can't find the bugs. :P

[17:08:03.0000] <Hixie>
oh well

[17:10:00.0000] <Hixie>
bbl.

[17:10:01.0000] <gsnedders>
see ya

[17:19:00.0000] <gsnedders>
Hixie: Oh, throwing for non-ASCII chars? That's CORE-36226 and all of the dupes

[17:19:01.0000] <gsnedders>
/me is blatantly too tired

[17:35:00.0000] <zewt>
geeh

[17:36:00.0000] <zewt>
rniwa: the result type of these methods depends on whether there's one result or more than one

[17:36:01.0000] <rniwa>
hehehe. great.

[17:36:02.0000] <zewt>
i'd go with D:

[17:37:00.0000] <zewt>
opera doesn't change behaviors

[17:37:01.0000] <rniwa>
zewt: maybe IE behaves differently depending on whether it's on strict mode or not LOL

[17:37:02.0000] <zewt>
well IE6 probably behaves differently depending on if you fed it after midnight

[17:37:03.0000] <zewt>
okay that's a bad comparison because IE6 isn't normally cute and fuzzy

[17:38:00.0000] <zewt>
i think the weird changing return type is isolated to old IE

[17:38:01.0000] <zewt>
waiting for giganto images to finish downloading to find out how isolated

[17:54:00.0000] <zewt>
rniwa: ... sorry, no, looks like the difference is pretty common

[17:54:01.0000] <zewt>
(opera, chrome)

[17:56:00.0000] <MikeSmith>
http://tools.ietf.org/html/draft-carpenter-6man-uri-zoneid-00

[17:56:01.0000] <MikeSmith>
"Representing IPv6 Zone Identifiers in Uniform Resource Identifiers"

[18:00:00.0000] <zewt>
rniwa: https://zewt.org/~glenn/test-htmlcollection-results.html so looks like the only differences are when there are duplicate ids, which is a much smaller problem (nonconforming anyway)

[18:12:00.0000] <heycam>
AryehGregor, ping

[18:34:00.0000] <zewt>
bugzilla bitching at me for using the same form to file two bugs. heh

[19:22:00.0000] <heycam>
AryehGregor, when are you around, would you mind commenting on https://www.w3.org/Bugs/Public/show_bug.cgi?id=14887#c3 please.

[19:26:00.0000] <heycam>
annevk, in your reply http://www.w3.org/mid/op.v6g563va64w2qv⊙al does that mean I should not bother with making non-Array and Array objects distinguishable for now?

[19:26:01.0000] <heycam>
annevk, (as well as not worrying about defining dictionary<DOMString>?)

[23:51:00.0000] <annevk>
heycam|away: yeah

[00:33:00.0000] <annevk>
http://twitter.com/bz_moz/status/147229432275415041 context?

[00:38:00.0000] <hsivonen>
annevk: probably http://groups.google.com/group/mozilla.dev.platform/msg/6000e4ce6d744531

[00:38:01.0000] <hsivonen>
annevk: and some German news site writing a story about that thread

[00:38:02.0000] <hsivonen>
annevk: my guess about context could be wrong

[00:38:03.0000] <hsivonen>
but unlikely

[00:40:00.0000] <hsivonen>
annevk: http://www.golem.de/1112/88347.html

[00:41:00.0000] <hsivonen>
annevk: contrast with https://twitter.com/#!/eevee/status/147018826712756225

[00:45:00.0000] <annevk>
good times

[01:16:00.0000] <MikeSmith>
very cool to see responseType=json going into Firefox 10

[01:17:00.0000] <MikeSmith>
hsivonen: you got bugs left to fix on View Source?

[02:41:00.0000] <hsivonen>
MikeSmith: one regression left in View Source

[02:41:01.0000] <hsivonen>
MikeSmith: plus a bunch of features that it logically should have but doesn't

[02:41:02.0000] <MikeSmith>
OK

[02:42:00.0000] <hsivonen>
if you aren't using the built-in View Source viewer and are using an external app via a hidden pref, clicking links from the Error Console doesn't work

[02:42:01.0000] <MikeSmith>
oh

[02:43:00.0000] <hsivonen>
yay hidden prefs that I had no idea existed when I was developing the new View Source

[02:43:01.0000] <MikeSmith>
heh

[03:04:00.0000] <hsivonen>
how does one get to activate New New Twitter?

[03:10:00.0000] <MikeSmith>
hsivonen: I don't think you can

[03:10:01.0000] <MikeSmith>
you must wait to be chosen

[03:11:00.0000] <MikeSmith>
what's a "threaded web application"?

[03:11:01.0000] <hsivonen>
MikeSmith: ok

[03:11:02.0000] <hsivonen>
MikeSmith: any context for "threaded web application"?

[03:12:00.0000] <hsivonen>
MikeSmith: a Web app that uses Workers maybe?

[03:12:01.0000] <MikeSmith>
http://dvcs.w3.org/hg/streams-api/raw-file/tip/Overview.htm

[03:18:00.0000] <hsivonen>
MikeSmith: seems to me it means Workers

[03:18:01.0000] <MikeSmith>
hmm, OK

[03:18:02.0000] <MikeSmith>
they should say "workers" then

[03:18:03.0000] <hsivonen>
it would be clearer if it just said "Workers"

[03:18:04.0000] <MikeSmith>
yeah

[03:18:05.0000] <hsivonen>
yeah

[03:19:00.0000] <MikeSmith>
especially since workers are not threads...

[03:19:01.0000] <hsivonen>
depends on implementation

[03:21:00.0000] <MikeSmith>
I mean as far as the API exposed to Web apps

[03:22:00.0000] <MikeSmith>
at the JS level

[04:01:00.0000] <annevk>
oops

[04:02:00.0000] <hsivonen>
annevk: ?

[04:04:00.0000] <annevk>
had a bug in my encoding source data

[04:07:00.0000] <annevk>
added http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#preface

[04:30:00.0000] <matjas>
was `doctype` technically allowed to be lowercase in previous versions of HTML?

[04:40:00.0000] <zcorpan>
yes

[04:42:00.0000] <smaug____>
is it invocation or invokation ?

[04:42:01.0000] <smaug____>
I would assume with c

[04:42:02.0000] <smaug____>
websocket spec has invokation

[04:42:03.0000] <zcorpan>
the protocol?

[04:42:04.0000] <smaug____>
api

[04:42:05.0000] <zcorpan>
ah

[04:42:06.0000] <zcorpan>
yeah it's with c

[04:43:00.0000] <zcorpan>
unless the spec wanted to hotswap to swedish for one word

[04:50:00.0000] <smaug____>
websocket::send is bad

[04:50:01.0000] <smaug____>
it is strange to close the connection so easily

[04:59:00.0000] <zcorpan>
you mean when the buffer is full?

[05:08:00.0000] <smaug____>
yeah

[05:08:01.0000] <smaug____>
I think that handling should be different

[05:09:00.0000] <smaug____>
filed https://www.w3.org/Bugs/Public/show_bug.cgi?id=15209

[05:19:00.0000] <zcorpan>
it also says to increase bufferedAmount even if the connection is closed

[05:20:00.0000] <zcorpan>
since it doesn't throw

[05:20:01.0000] <hsivonen>
matjas: HTML that pretended to be SGML allowed lower case. HTML that pretended to be XML didn't.

[05:56:00.0000] <annevk>
*summon Ms2ger*

[05:56:01.0000] <annevk>
/me wonders what the typical response time is for "summon"

[06:09:00.0000] <annevk>
renamed the encodings to just use the iso- names http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html

[06:09:01.0000] <annevk>
8858-9 and -11 are missing as they are actually a windows- encoding

[06:09:02.0000] <annevk>
oh, and -1 is too

[06:09:03.0000] <annevk>
and -12 does not exist

[06:17:00.0000] <smaug____>
has anyone reviewed "File API: Directories and System" ?

[06:17:01.0000] <smaug____>
and, btw, is any of that implemented elsewhere than in Chrome

[06:18:00.0000] <annevk>
I think sicking objected to that

[06:18:01.0000] <annevk>
Apple did not seem interested either

[06:18:02.0000] <annevk>
(sicking wanted to use Indexed DB instead)

[06:18:03.0000] <annevk>
dunno about Opera, we have something similar so I guess there's some interest

[06:18:04.0000] <smaug____>
yeah

[06:19:00.0000] <smaug____>
but no one has reviewed the spec? I don't recall much discussion about that spec in web apps wg

[06:19:01.0000] <annevk>
it was discussed during some of the meetings, but mostly on the level of, "do we actually want to go there"

[06:21:00.0000] <matjas>
HTML5 doesn’t seem to allow `<p//` instead of `<p></p>` anymore — anyone got a spec link for that? or is that hidden away in the parsing algo?

[06:22:00.0000] <annevk>
matjas: http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html#start-tags

[06:24:00.0000] <matjas>
annevk: thanks

[06:38:00.0000] <MikeSmith>
annevk: do the following look like what we need?

[06:38:01.0000] <MikeSmith>
http://trac.webkit.org/browser/trunk/LayoutTests/fast/url

[06:39:00.0000] <MikeSmith>
e.g., http://trac.webkit.org/export/102933/trunk/LayoutTests/fast/url/anchor.html

[06:47:00.0000] <annevk>
MikeSmith: yeah

[06:47:01.0000] <annevk>
MikeSmith: those combined with abarth's sketch might go a long way towards defining URLs

[06:47:02.0000] <MikeSmith>
excellent

[06:47:03.0000] <MikeSmith>
so I'll ping abarth later

[07:08:00.0000] <kuya>
can i ask something about validator.nu here?

[07:13:00.0000] <MikeSmith>
kuya: yes

[07:13:01.0000] <MikeSmith>
so, for ES6, seems that engines are going to need to need to do mode-switching

[07:13:02.0000] <MikeSmith>
https://lists.webkit.org/pipermail/webkit-dev/2011-December/018903.html

[07:13:03.0000] <matjas>
what’s the correct name for the “URL part” after the formal public identifier in <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML Basic 1.0//EN" "http://www.w3.org/TR/xhtml-basic/xhtml-basic10.dtd">?

[07:14:00.0000] <bga>
or embed different engines

[07:14:01.0000] <bga>
but single bytecode

[07:14:02.0000] <kuya>
im sending a multipart/form request with a field called content to validator.nu but whatever i do cant get it to return anything but html output. iv tried adding it to the url and to the form data but no joy - does it actually work?

[07:14:03.0000] <zcorpan>
matjas: transitional doesn't need <p>

[07:15:00.0000] <matjas>
zcorpan: i know, just want to learn the correct technical name

[07:15:01.0000] <matjas>
oooh no i didn’t know that

[07:16:00.0000] <matjas>
zcorpan: http://validator.w3.org/#validate_by_input says <!DOCTYPE html PUBLIC"-//W3C//DTD HTML 4.01 Transitional//EN"><title// is invalid

[07:16:01.0000] <MikeSmith>
matjas: I think you mean the "system ID"?

[07:16:02.0000] <MikeSmith>
kuya: yeah, it works

[07:16:03.0000] <MikeSmith>
gimme a minute to fine an example

[07:16:04.0000] <kuya>
MikeSmith: i just read the bit i was doing wrong!

[07:16:05.0000] <matjas>
MikeSmith: it is still called “System ID” if it’s a PUBLIC identifier?

[07:17:00.0000] <matjas>
zcorpan: I suppose that’s a bug in the W3C Validator then?

[07:17:01.0000] <MikeSmith>
the public ID is the non-URL part

[07:17:02.0000] <kuya>
MikeSmith: it didnt work in the url but i was specifying out=json after the content=<whatever>

[07:17:03.0000] <matjas>
MikeSmith: oh, i see

[07:17:04.0000] <zcorpan>
matjas: it needs body content

[07:17:05.0000] <MikeSmith>
kuya: I see. So you ahve it working now?

[07:17:06.0000] <kuya>
"The content field must be the last field in the submission. " was what i was missing

[07:17:07.0000] <kuya>
what a strange prerequisite

[07:18:00.0000] <matjas>
zcorpan: gotcha. <!DOCTYPE html PUBLIC"-//W3C//DTD HTML 4.01 Transitional//EN"><title//x it is

[07:18:01.0000] <matjas>
zcorpan: thanks!

[07:21:00.0000] <MikeSmith>
kuya: fwiw, when I test the REST API with curl, I run it like this: curl --data-binary @foo.html -H "Content-Type: text/html" "http://localhost:8888/?out=gnu"

[07:22:00.0000] <zcorpan>
matjas: are you sure iso html doesn't allow omitting tags etc?

[07:22:01.0000] <annevk>
I think I created a test of some sorts

[07:22:02.0000] <kuya>
iv been trying to validate bits of html via a browser in some sort of automated way

[07:23:00.0000] <kuya>
which turns out to be quite a pita with jquery

[07:23:01.0000] <hsivonen>
sigh. <!DOCTYPE html><math><mtext><p><i></p>a

[07:23:02.0000] <matjas>
zcorpan: not sure at all, but validator.w3.org says it’s invalid

[07:24:00.0000] <hsivonen>
matjas: system identifier

[07:25:00.0000] <matjas>
thanks

[07:25:01.0000] <zcorpan>
matjas: Note that the xmlns attribute on the root <html> element isn’t required in this version of XHTML. [citation needed]

[07:26:00.0000] <matjas>
zcorpan: no citation, just the result of trial and error using validator.w3.org :')

[07:26:01.0000] <zcorpan>
i see

[07:26:02.0000] <hsivonen>
kuya: the validator wants to ingest the form data in a streaming way in case the document is huge. it doesn't reorder fields on the server, so it wants to see the fields that set up the validation options before it seess the document

[07:27:00.0000] <matjas>
zcorpan: is it a validator bug?

[07:27:01.0000] <hsivonen>
matjas: xmlns is required if the recipient isn't processing external entities

[07:27:02.0000] <hsivonen>
matjas: it's an XML design bug

[07:27:03.0000] <matjas>
hah

[07:27:04.0000] <hsivonen>
matjas: or a design bug in the XHTML 1.0 DTD, depending on your world view

[07:28:00.0000] <zcorpan>
matjas: dunno, i try not to spend my time on reading XHTML2 WG deliverables these days

[07:28:01.0000] <hsivonen>
matjas: the DTD, if processed, implies the attribute on the XML 1.0 layer before the XMLNS layer does its thing

[07:29:00.0000] <hsivonen>
matjas: but XML doesn't guaranteed DTD processing

[07:29:01.0000] <kuya>
hsivonen: i see, fair enuff. it was there in the docs so its my own fault :)

[07:29:02.0000] <hsivonen>
s/d//

[07:30:00.0000] <hsivonen>
Opera is more compliant than Firefox with <!DOCTYPE html><math><mtext><p><i></p>a

[07:30:01.0000] <matjas>
i ♥ these hardcore write-up reviews

[07:30:02.0000] <annevk>
not exactly fast... http://dump.testsuite.org/encoding/single-octet-test.html

[07:30:03.0000] <annevk>
dreamhost latency

[07:51:00.0000] <hsivonen>
MikeSmith: an out of band mode switch for JS seems like a bad thing

[07:59:00.0000] <MikeSmith>
hsivonen: yeah

[07:59:01.0000] <MikeSmith>
but sounds like that's where things are headed

[08:04:00.0000] <zewt>
isn't the script type effectively deprecated, given that you can't even specify it with worker ctors, importScripts, etc

[08:05:00.0000] <zewt>
i guess you could restrict to importing scripts of the same version, but that would be pretty nasty

[08:05:01.0000] <annevk>
someone should inform TC39 how ECMAScript is used in a browser...

[08:05:02.0000] <zewt>
the mere idea of having to specify @type to <script> again would make me want to throw food

[08:05:03.0000] <annevk>
vacuum dev--

[08:08:00.0000] <annevk>
is anyone going to take that up with es-discuss?

[08:09:00.0000] <matjas>
omg, forgot that doctype is optional in XHTML

[08:10:00.0000] <annevk>
matjas: not cool

[08:11:00.0000] <matjas>
ლ(ಠ益ಠლ) y u no tell me‽

[08:14:00.0000] <zewt>
having one person suggest mislabelling caption tracks in webvtt as metadata tracks (and write your own cue renderer in javascript) and having someone@microsoft nod agreement makes me sad for the world

[08:18:00.0000] <ksweeney>
yeah i saw that :-/

[08:32:00.0000] <annevk>
zewt: filed https://bugs.webkit.org/show_bug.cgi?id=74610 on removing UTF-7 and UTF-32 from Webkit/Chromium

[08:33:00.0000] <zewt>
cool, see how it goes

[08:34:00.0000] <annevk>
I wonder if I should first start defining multi-octet encodings by reference with rules on top

[08:34:01.0000] <zewt>
annevk: obscure as it is, trying to get them to either fix or remove ibm864 would be nice, since it's the only encoding here that screws with the ASCII range

[08:34:02.0000] <annevk>
zewt: you mean Gecko?

[08:34:03.0000] <zewt>
anything else come to mind (outside of wide encodings) that breaks the "all encodings are supersets of ascii" rule?

[08:35:00.0000] <zewt>
actually, both, i guess :(

[08:35:01.0000] <annevk>
ooh yes

[08:35:02.0000] <annevk>
WebKit/Chromium has some weird shit going on for all IBM encodings

[08:35:03.0000] <zewt>
that's such an insanely noninteroperable encoding (remapping %? really?) that it seems to strongly suggest no to "is this encoding in use"

[08:36:00.0000] <zewt>
oh yeah didn't notice the one in ibm866

[08:36:01.0000] <annevk>
but Chromium only supports ibm864 and I think it is only because of WebKit, not because they want to

[08:36:02.0000] <annevk>
and Gecko supports a whole lot of IBM encodings

[08:37:00.0000] <zewt>
muh

[08:37:01.0000] <zewt>
doesn't seem worth spending a lot of time pushing uphill for those encodings, but nailing down the ASCII range would be a nice win

[08:37:02.0000] <annevk>
but that does not seem needed for interoperability

[08:38:00.0000] <annevk>
given that Chrome does not support ibm866 and Opera does not support ibm864 I think we can get all IBM stuff removed

[08:47:00.0000] <annevk>
kind of weird

[08:47:01.0000] <annevk>
whenever you file a bug on WebKit it's like it goes into a void unless you find some people to cc

[08:47:02.0000] <annevk>
whenever you file a bug on Gecko a whole bunch of people are paying attention

[08:48:00.0000] <zewt>
though that doesn't necessarily mean anyone who can do anything with it :P

[08:49:00.0000] <Velmont>
annevk: People have a similar WebKit experience with Opera and IE, I guess.

[08:49:01.0000] <annevk>
yeah :(

[08:49:02.0000] <zewt>
well, you'll have that with any large project; how often is more the question

[08:50:00.0000] <annevk>
after I saw what happened with the bugs zcorpan submitted to IE I stopped bothering

[08:50:01.0000] <Velmont>
annevk: What happened?

[08:54:00.0000] <annevk>
Velmont: resolved WONTFIX because they didn't make it for the release...

[08:54:01.0000] <zewt>
very... stereotypically microsoft

[08:55:00.0000] <Velmont>
... :|

[08:55:01.0000] <MikeSmith>
Velmont, hey, you got my message about the W3C mercurial repo?

[08:55:02.0000] <MikeSmith>
you should be set up with perms to push to that repo now

[08:56:00.0000] <MikeSmith>
can't remember now which one it was

[08:56:01.0000] <MikeSmith>
but whatever one you asked about

[08:56:02.0000] <Velmont>
MikeSmith: Yep! I moved webkit tests into submissions/.  I've been stalled on other stuff now. :-) But I'm actually looking through them now.

[08:56:03.0000] <MikeSmith>
cool

[08:56:04.0000] <Velmont>
MikeSmith: I'm a bit too afraid to just push, -- but, well, release early and often, can iterate and fix stuff later I guess ,-)

[08:56:05.0000] <MikeSmith>
yep

[08:57:00.0000] <MikeSmith>
that's what the submissions area's for, anyway

[08:58:00.0000] <smaug____>
filing Opera bugs has been really difficult. Few times the form has just failed (giving some server errors), and other times I've got some emails asking more information, but that is quite annoying way to handle bugs

[08:59:00.0000] <smaug____>
Opera should just open their bug database ;)

[08:59:01.0000] <zewt>
no browser's bug handling makes me very inclined to file bugs

[09:00:00.0000] <zewt>
i do from time to time but they're all ... unmotivating

[09:00:01.0000] <MikeSmith>
we clearly need to gamify bug-filing

[09:00:02.0000] <zewt>
heh

[09:00:03.0000] <MikeSmith>
badges..

[09:01:00.0000] <MikeSmith>
achievements unlocked

[09:01:01.0000] <smaug____>
there should be some common bug database for browser bugs, at least for cases when browsers don't implement some API

[09:02:00.0000] <smaug____>
the bug could have fields for different browser engines.

[09:03:00.0000] <zewt>
sounds more like a reference registry than a bug tracker

[09:04:00.0000] <smaug____>
well, whatever it is called

[09:04:01.0000] <smaug____>
Mozilla uses bugzilla for everything

[09:04:02.0000] <Velmont>
Sooo... When we have a nice big w3c-test.org with a cool test runner and all, that can be a nice reference :-)

[09:05:00.0000] <annevk>
I guess at some point I should tell whatwg⊙wo about the encoding standard...

[09:05:01.0000] <zewt>
shhh

[09:06:00.0000] <annevk>
it's not exactly a secret, but still :)

[09:06:01.0000] <zewt>
i'm afraid to find out what error handling interop looks like for multibyte encodings

[09:07:00.0000] <zewt>
at least most encodings don't have as many error cases as utf-8, so there aren't quite so many ways they can differ

[09:24:00.0000] <kennyluck>
annevk5, that's pretty much my experience submitting patches to Mozilla/WebKit. I guess the following data might explain this somehow.

[09:26:00.0000] <kennyluck>
Summarizing 175 emails randomly selected from www-style: 31.4% Unkown Affliation, 24.6% Mozilla (5 people), 22.9% Google (1 people, that is TabAtkins), 13.7% Opera (3 people), 2.3% Microsoft (2 people), 1.1% Apple (1 person).

[09:28:00.0000] <kennyluck>
I guess you get similar figures if you count mails from whatwg⊙wo too.

[09:28:01.0000] <kennyluck>
Well, except Micorsoft.

[09:30:00.0000] <smaug____>
I'd guess Opera gets higher numbers in WhatWG

[09:35:00.0000] <Ms2ger>
annevk5, in this case about 3h30

[09:53:00.0000] <Velmont>
annevk5: http://dvcs.w3.org/hg/webappsec/rev/8a0775f6d0eb

[10:03:00.0000] <annevk>
Velmont: sweet

[10:04:00.0000] <annevk>
Velmont: did you tweet it?

[10:04:01.0000] <Velmont>
Will do, -- but sending email first.

[10:04:02.0000] <annevk>
way to set your priorities :p

[10:12:00.0000] <annevk>
Ms2ger: what was the problem with patching Gecko for the encoding stuff?

[10:12:01.0000] <annevk>
Ms2ger: you said something earlier about a table that was hard to comprehend

[10:13:00.0000] <Ms2ger>
http://mxr.mozilla.org/mozilla-central/source/intl/uconv/ucvlatin/cp874.ut

[10:14:00.0000] <annevk>
Ms2ger: also, what about http://krijnhoetmer.nl/irc-logs/whatwg/20111215#l-1037 ?

[10:14:01.0000] <Ms2ger>
Don't know anything about multi-byte encodings

[10:16:00.0000] <annevk>
Ms2ger: that is a weird table

[10:18:00.0000] <annevk>
Ms2ger: it does seem like you should simply replace the FFFDs in that table with the code points from the standard

[10:18:01.0000] <zewt>
weird but understandable, with a bit of squinting

[10:18:02.0000] <annevk>
Ms2ger: but then it says that file is generated so maybe you should fix the source file

[10:19:00.0000] <Ms2ger>
That's what it says, yes

[10:19:01.0000] <Ms2ger>
I've never found a source file

[10:20:00.0000] <annevk>
I guess you should ask smontagu

[10:20:01.0000] <Ms2ger>
Yeah

[10:20:02.0000] <smaug____>
that file was added to cvs 1999

[10:21:00.0000] <Ms2ger>
smaug____, you don't have up-to-date contact details for ftang? :)

[10:21:01.0000] <zewt>
better contact Netscape Client International Team, then

[10:21:02.0000] <Ms2ger>
Well

[10:22:00.0000] <Ms2ger>
ftang may still be alive, I'm pretty sure NSIT isn't

[10:22:01.0000] <annevk>
it seems last time around you patched the source file Ms2ger

[10:23:00.0000] <annevk>
e.g. looking at the change log of http://mxr.mozilla.org/mozilla-central/source/intl/uconv/ucvlatin/8859-13.ut

[10:23:01.0000] <Ms2ger>
Eh?

[10:24:00.0000] <smaug____>
haa, Ms2ger owns the file then !

[10:24:01.0000] <Ms2ger>
In that case...

[10:24:02.0000] <Ms2ger>
Want to submit a patch to remove it? smaug____ claims I own it :)

[10:25:00.0000] <annevk>
see e.g. https://bug577945.bugzilla.mozilla.org/attachment.cgi?id=521559

[10:25:01.0000] <annevk>
I cannot write the spec, the test, and the implementation

[10:25:02.0000] <annevk>
well I can

[10:25:03.0000] <annevk>
but I'm afraid of being called a monopoly

[10:25:04.0000] <smaug____>
Ms2ger has too many personalities, they can't keep up with what each others have been doing. :)

[10:26:00.0000] <annevk>
smaug____: sounds like http://thebjoernhoehrmannproject.org/ :p

[10:26:01.0000] <Ms2ger>
I know I changed the ut/uf files, yes

[10:27:00.0000] <zewt>
heh, the scripts in there refer to files that google's never even heard of ... except in the scripts

[10:27:01.0000] <zewt>
that's what happens when people make the mistake of committing generated files to version control

[10:28:00.0000] <smaug____>
and that is also an example what happens when commit message doesn't have bug number

[10:29:00.0000] <annevk>
I like how encodings are backed by probably four distinct implementations and how Google and Apple use ICU with different settings too, so maybe 4.5

[10:29:01.0000] <zewt>
(... that = you lose the source file and everyone gives up and just starts modifying the output)

[10:29:02.0000] <bga>
var i = 10; while(i --> 0);

[10:30:00.0000] <annevk>
oh actually, iconv is ICU too I guess

[10:31:00.0000] <zewt>
i wonder how much microsoft's big CJK codepage tables have changed over the years

[10:45:00.0000] <timeless>
zewt: i think "sorting it all out" could tell you

[10:46:00.0000] <timeless>
http://blogs.msdn.com/b/michkap/

[10:58:00.0000] <Velmont>
annevk: So, dented (and identi.ca will probably send it to twitter automatically soonish IIRC).

[11:31:00.0000] <Ms2ger>
annevk, any chance you could generate http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/PC/CP864.TXT-style tables? :)

[11:32:00.0000] <zewt>
The requested URL /Public/MAPPINGS/VENDORS/MICSFT/PC/CP864.TXT-style was not found on this server. :P

[11:33:00.0000] <ojan>
what's the right spec to look at for figuring out the correct return values for getComputedStyle?

[11:34:00.0000] <ojan>
mdn claims to use used value from css2.1

[11:34:01.0000] <Ms2ger>
cssom or -view

[11:34:02.0000] <ojan>
Ms2ger: ah, thanks

[11:35:00.0000] <zewt>
Ms2ger: you know you're looking at stuff from a prior era when a text file actually ends with a ^Z

[11:35:01.0000] <Ms2ger>
Well

[11:35:02.0000] <ojan>
Ms2ger. annevk: http://dev.w3.org/csswg/cssom/#resolved-value doesn't say what to do with shorthands

[11:35:03.0000] <Ms2ger>
That or the IETF is involved

[11:36:00.0000] <zewt>
that's what I said

[11:36:01.0000] <zewt>
(roundabout ietf burn)

[11:37:00.0000] <ojan>
annevk: also, "computed value" is not defined anywhere in the spec...presumably it needs to link to the appropriate CSS spec

[11:44:00.0000] <timeless>
heh

[11:45:00.0000] <timeless>
zewt: have you read sorting it all out?

[11:48:00.0000] <Ms2ger>
annevk, also, can you please update https://bitbucket.org/annevk/webencodings?

[11:54:00.0000] <timeless>
oh, zewt, if you're looking for disasters

[11:54:01.0000] <timeless>
i have one for you

[11:55:00.0000] <zewt>
timeless: havn't read much of it

[12:28:00.0000] <jgraham>
smaug____: I think it is generally accepted that we would like an open bug tracker but there are significant technical challenges

[12:32:00.0000] <Velmont>
We were joking about maybe getting it as the company provided xmas gift this year. <3

[12:33:00.0000] <jgraham>
That would be even weirder than the year that everyone got a whole Norwegian salmon

[12:33:01.0000] <jgraham>
which had to be taken on the train to Sweden

[12:34:00.0000] <jgraham>
(this was long before I joined though)

[12:34:01.0000] <karlcow>
jgraham: was it alive?

[12:38:00.0000] <smaug____>
jgraham: is setting up a bugzilla really that difficult ;)

[12:39:00.0000] <karlcow>
smaug____: setting is never hard

[12:39:01.0000] <annevk>
Ms2ger: what do you want to have there?

[12:39:02.0000] <annevk>
ojan: I gave up on CSS

[12:39:03.0000] <timeless>
> For the record, I replaced the word he used with freaking there. He used 𝓕𝓾𝓬𝓴𝓲𝓷𝓰 only he didn't do something clever with Unicode to avoid the publish filters.

[12:39:04.0000] <karlcow>
fitting into a context and managing on a long term is always the issue.

[12:39:05.0000] <Ms2ger>
The things I fixed in Gecko last year

[12:39:06.0000] <timeless>
/me chuckles

[12:40:00.0000] <timeless>
Velmont: if you're in Norway, i think the best company gift would be butter :)

[12:40:01.0000] <annevk>
Ms2ger: okay

[12:40:02.0000] <annevk>
Ms2ger: for the Unicode-style tables, is it okay without the third column?

[12:41:00.0000] <annevk>
Ms2ger: and what is the use case?

[12:41:01.0000] <Velmont>
timeless: lol, Opera gave us loads of butter yesterday for the «risgraut» (rice porridge) we were having.

[12:41:02.0000] <Ms2ger>
smontagu pointed me at the tool that generates those tables

[12:41:03.0000] <Ms2ger>
And that's what they take

[12:41:04.0000] <jgraham>
smaug____: What karlcow said, mostly. The problem is more how to synchronise with our existing bugtracker which has some mix of stuff that anyone could know and internal-only stuff

[12:41:05.0000] <Ms2ger>
*it takes

[12:42:00.0000] <zewt>
jgraham: fork the "security bug" (hidden) flag to "private bug", and just set it to true for existing bugs?

[12:42:01.0000] <annevk>
Velmont: what's your twitter?

[12:42:02.0000] <jgraham>
The butter crisis is evidence that Sweden is ahead of Norway; we had that months ago

[12:42:03.0000] <Ms2ger>
I think leaving out the last column should work

[12:42:04.0000] <Ms2ger>
     if(buf[0]=='0' && buf[1] == 'x')

[12:42:05.0000] <Ms2ger>
        {

[12:42:06.0000] <Ms2ger>
          sscanf(buf,"%hx %hx",&c,&u);

[12:43:00.0000] <zewt>
then they can be unhidden on a case-by-case basis and reporters can decide as they want for future bugs

[12:43:01.0000] <Velmont>
annevk: I'm Velmont on identi.ca and my ghosting twitter-account.

[12:43:02.0000] <timeless>
Velmont: sorry, it was just a hilarious news article to encounter

[12:43:03.0000] <jgraham>
zewt: Of course solutions exist but you know how it is, you need to decide waht works and then get lots of buy in

[12:43:04.0000] <annevk>
Ms2ger: I can also put #PLACEHOLDER there or some such if that is better

[12:43:05.0000] <timeless>
zewt: fwiw, bugzilla bug groups are a lot more than "security bug"

[12:43:06.0000] <annevk>
Ms2ger: rather not make things too fancy

[12:43:07.0000] <Ms2ger>
Yeah

[12:43:08.0000] <timeless>
it's trivial to make all old bugs "opera confidential"

[12:44:00.0000] <zewt>
timeless: yes, bugzilla is notoriously massively overcomplicated :P

[12:44:01.0000] <Ms2ger>
Having just 0xab 0xcdef should work, I think

[12:44:02.0000] <timeless>
and then let users file bugs as "public" (no group), "security" (security group), or "private" (another group)

[12:44:03.0000] <Ms2ger>
Or the "timeless" group, of course

[12:45:00.0000] <timeless>
Ms2ger: bugzilla has an Asa group

[12:45:01.0000] <zewt>
jgraham: but that's not a technical challenge at all, just a political one

[12:45:02.0000] <timeless>
err s/has/had/

[12:45:03.0000] <jgraham>
Right, this is the sort of thing where it sounds like it ought to be easy in principle but in practice there are a lot of details that get in the way

[12:45:04.0000] <timeless>
getting security and private to work requires a bit of trickery, the easiest way is 3 public products:

[12:45:05.0000] <Ms2ger>
Well, you say "had", but how can I know that? :)

[12:45:06.0000] <timeless>
Normal

[12:45:07.0000] <timeless>
Security

[12:45:08.0000] <timeless>
Private

[12:45:09.0000] <timeless>
where the Security group has a mandatory mark for the security group

[12:45:10.0000] <timeless>
and similar for private

[12:46:00.0000] <timeless>
and normal users aren't in either group

[12:46:01.0000] <timeless>
then you allow the various products to have bugs from Opera-confi, and Security/Private

[12:46:02.0000] <timeless>
Ms2ger: i'm too lazy to check to see if the group is still present

[12:46:03.0000] <timeless>
remember that i have at times had editproducts/editgroupaccess controls

[12:46:04.0000] <timeless>
my favorite group was a group w/ 5 bugs

[12:54:00.0000] <timeless>
of course i can't actually look things up right now, mozilla.org is having issues

[12:54:01.0000] <Ms2ger>
Yeah, the PHX datacenter broke down

[12:57:00.0000] <annevk>
Ms2ger: should I just check them into dcvs?

[12:57:01.0000] <annevk>
I guess I will

[12:58:00.0000] <Ms2ger>
That works too

[12:58:01.0000] <annevk>
Ms2ger: http://dvcs.w3.org/hg/encoding/rev/3bf01afcf6e5

[12:59:00.0000] <Ms2ger>
Thanks

[13:00:00.0000] <annevk>
I guess I should check my Python scripts in too at some point

[13:00:01.0000] <annevk>
maybe when I feel I can handle the embarrassment

[13:00:02.0000] <ojan>
annevk: oh right...forgot. someone else volunteered to take over cssom, right?

[13:01:00.0000] <annevk>
yes glenn and shane

[13:01:01.0000] <annevk>
I think

[13:01:02.0000] <annevk>
glenn asked a bunch of questions, but I'm not sure anything happened

[13:01:03.0000] <annevk>
your issue about computed style is probably already in http://lists.w3.org/Archives/Public/www-archive/2011Dec/0010.html

[13:01:04.0000] <annevk>
but I'm not sure if they will go through that

[13:06:00.0000] <Hixie>
sicking: when you argue that if people do things on the web it means they think it's the better thing... are you taking into account that they might not have any idea what they're doing? :-)

[13:06:01.0000] <sicking>
Hixie: sure, it's not a great argument

[13:06:02.0000] <sicking>
Hixie: but at least we can be informed by looking at how they used it

[13:07:00.0000] <sicking>
Hixie: i think saying that only functions is the better way of doing callbacks, you are saying that people shouldn't use object-oriented programming style

[13:07:01.0000] <sicking>
/me should point that out

[13:07:02.0000] <annevk>
Ms2ger: the problem with updating webencodings is that I don't have up to date information for Opera on Windows

[13:07:03.0000] <Velmont>
sicking: I fixed the status checked on state OPENED test problem, btw, so gecko's all green on it now.

[13:08:00.0000] <annevk>
Ms2ger: maybe I should just remove that and hope we get it straight at some point

[13:08:01.0000] <sicking>
Velmont: sweet

[13:09:00.0000] <TabAtkins>
sicking: No, that's a silly point.  Object-oriented doesn't necessarily include using a JS Object.

[13:09:01.0000] <TabAtkins>
Using closures to encapsulate data in a function is OO as well.

[13:10:00.0000] <sicking>
TabAtkins: it functions, by wrapping your OO code in non-oo

[13:12:00.0000] <TabAtkins>
You have a pretty restricted view of what OO means.

[13:13:00.0000] <sicking>
TabAtkins: i know that I'm annoyed any time I have to do that when I'm writing code in C++

[13:14:00.0000] <sicking>
TabAtkins: i.e. any time i'm interacting with c-style APIs that take a closure

[13:14:01.0000] <TabAtkins>
Sure, because C++ is really crappy for functional code, so using functional OO style is also really crappy.

[13:14:02.0000] <sicking>
i'm not sure what you mean by "functional OO"

[13:14:03.0000] <sicking>
i take it you don't mean functional in the sense of programming languages that don't modify state

[13:15:00.0000] <TabAtkins>
No, I mean in terms of functions being first-class objects.  Sorry for these terms having multiple meaning. ;_;

[13:15:01.0000] <TabAtkins>
My point is that data-hiding with a Function object is just as OO as doing the same with an Object object.

[13:17:00.0000] <Ms2ger>
So, should we expose canvas' children when scripting is disabled?

[13:17:01.0000] <Ms2ger>
Philip`? :)

[13:18:00.0000] <TabAtkins>
That might make sense, yeah.

[13:20:00.0000] <Ms2ger>
Oh, the spec actually suggests that

[13:23:00.0000] <jgraham>
Oh the flamewar about programming styles failed to get going, I see. Probably all the rain making everything damp.

[13:23:01.0000] <Ms2ger>
Obviously python is the best language ever

[13:24:00.0000] <Ms2ger>
But only if written with emacs

[13:24:01.0000] <ojan>
sicking: i don't want to add more noise to that thread...

[13:24:02.0000] <sicking>
hang on, on phone

[13:24:03.0000] <ojan>
sicking: i guess i don't feel super strongly about this...we have bigger fish to fry wit the web platform

[13:25:00.0000] <ojan>
sicking: the whole thing just smells of useless bloat to me

[13:25:01.0000] <zewt>
do I even want to know

[13:27:00.0000] <smaug____>
/me doesn't understand why "useless"

[13:27:01.0000] <smaug____>
callback objects are very handy in some cases

[13:27:02.0000] <smaug____>
that is why they are used as event listeners

[13:29:00.0000] <zewt>
anyone mind giving me some context here?

[13:29:01.0000] <TabAtkins>
Yes.

[13:30:00.0000] <zewt>
:|

[13:32:00.0000] <jgraham>
zewt: It's about things that can take either a function or an object {handleEvent:function(){}}

[13:32:01.0000] <zewt>
i've never really understood the purpose of that (the latter)

[13:32:02.0000] <jgraham>
There are people who want to allow more of the latter, but with different names

[13:32:03.0000] <zewt>
much cleaner to do eg. addEventListener("event", obj.func.bind(obj), false)

[13:32:04.0000] <jgraham>
depending on the type of thing

[13:32:05.0000] <zewt>
(which I do all the time)

[13:33:00.0000] <sicking>
i think we have different definitions of "cleaner"

[13:33:01.0000] <jgraham>
There are people who want to make both forms work everywhere just as stated

[13:33:02.0000] <zewt>
possible

[13:33:03.0000] <sicking>
obj.func.bind(obj)  seems more messy than  obj  to me

[13:33:04.0000] <zewt>
it's nice how python basically does that for you, but doing the binding manually i've never found to be a big deal

[13:33:05.0000] <jgraham>
and there are people who want to pretend that the second form doesn't exist and stop adding new instances of it

[13:34:00.0000] <jgraham>
I think the binding thing is something that you have to live with in javascript

[13:34:01.0000] <zewt>
the only negative to binding manually in javascript is it makes unbinding harder (but that can be solved in other ways)

[13:34:02.0000] <zewt>
(removeEventListener, I mean)

[13:35:00.0000] <jgraham>
I don't think changing this one thing is going to make it so that people don't have to understand how binding works in general

[13:35:01.0000] <zewt>
sicking: i find passing in an object and having to know that some magically-named member function will be called to be fairly unpleasant, FWIW

[13:35:02.0000] <sicking>
zewt: so you don't like the UndoManager API then?

[13:36:00.0000] <zewt>
i havn't looked at it

[13:38:00.0000] <zewt>
jgraham: understanding how the bind() method works is something I consider basic, mandatory knowledge--maybe just because I use it so much to work around JS's crappy basic behavior for member functions, but just the same

[13:39:00.0000] <zewt>
(i think python's method binding is one of its greatest features--too bad that doesn't help us at all)

[13:39:01.0000] <smaug____>
zewt: how is anything "magically-named" ?

[13:39:02.0000] <smaug____>
it is defined in the API

[13:39:03.0000] <smaug____>
addEventListener is "magically-named"

[13:40:00.0000] <zewt>
if I call addEventListener(..., foo.func, false), it's very clear and immediate what's going to be called; much less so for passing in an object

[13:40:01.0000] <jgraham>
sicking: I think the design is way more defensible if you have a group of things that you have to pass together

[13:40:02.0000] <annevk>
Ms2ger: pushed an update to bitbucket

[13:40:03.0000] <zewt>
expanding that to other types of callbacks, with different names, would seem a very bad way forward (feels Ruby-ish)

[13:41:00.0000] <Ms2ger>
Thanks

[13:41:01.0000] <zewt>
(or Java-ish, if you like)

[13:41:02.0000] <annevk>
Ms2ger: I guess I should host the new table somewhere

[13:41:03.0000] <Ms2ger>
I'll have another look later

[13:41:04.0000] <sicking>
jgraham: which it would be if the functions had different names and you listened for several things, no?

[13:41:05.0000] <zewt>
jgraham: if it's a complex interface where you have to pass in a tightly-coupled set of callbacks, then yeah, I might buy that more

[13:42:00.0000] <annevk>
Ms2ger: I guess one more thing I can do is to make the spec definitions a "browser"

[13:42:01.0000] <annevk>
Ms2ger: for comparison purposes

[13:42:02.0000] <Ms2ger>
That would be nice, if it isn't too hard

[13:42:03.0000] <annevk>
shouldn't be in theory

[13:42:04.0000] <jgraham>
sicking: That isn't how it works in the event case though. And it isn't really clear why that would be a logical way to group things

[13:43:00.0000] <jgraham>
Maybe if the API was addEventListener({click:function(){}, mouseover:function(){}) etc.

[13:44:00.0000] <smaug____>
the object allows one to store state easily

[13:44:01.0000] <jgraham>
(and in that case we would probably want the whole jQuery-style delegates thing)

[13:44:02.0000] <jgraham>
smaug____: Well, state is evil ;)

[13:45:00.0000] <jgraham>
(but seriously, if you need to store state there is no difficulty)

[13:45:01.0000] <smaug____>
some states only :)

[13:46:00.0000] <Ms2ger>
Arizona?

[13:46:01.0000] <zewt>
while i don't buy into it *too* much, there's also something to be said for python's "only have one way to do things" philosophy--i don't see benefits to eg. handleEvent to offset splitting users down the middle and having everyone using basic APIs in two very different ways, in what seems mostly a style difference

[13:47:00.0000] <zewt>
(eat run-on sentence, IRC)

[13:47:01.0000] <zewt>
dashes are the new period

[13:52:00.0000] <zewt>
jgraham: in the blob reader callback api briefly discussed recently, i had suggested an interface like that, actually; it made sense there, since it was implementing an interface with several different tightly-related callbacks

[13:53:00.0000] <zewt>
since it was reduced down to one function I was going to suggest dropping that and just using a simple callback (don't think I bothered, since iirc we agreed the api probably wasn't worth it)

[14:18:00.0000] <annevk>
sweet I think I made it work

[14:25:00.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/single-octet-research.html

[14:25:01.0000] <Ms2ger>
Nice

[14:40:00.0000] <kennyluck>
I am curious again about how much difference there is between the Chromium and WebKit trunk regarding Web standards. This one didn't get into WebKit trunk it seems → http://code.google.com/p/chromium/issues/detail?id=69594

[14:41:00.0000] <TabAtkins>
WebKit trunk is explicitly the Chromium trunk + a few things that are restricted by licenses/patents/etc.

[14:43:00.0000] <zewt>
seems rather odd for a bug to go "this is explicitly disallowed for security reasons" and then "okay, implemented anyway"

[14:43:01.0000] <zewt>
"???"

[14:43:02.0000] <zewt>
(havn't touched appcache myself so not going to dig at it)

[14:44:00.0000] <Hixie>
sicking: i don't see how passing an object that has a function is any more "object orientated" than passing a function whose closure has that object

[14:44:01.0000] <annevk>
zewt: the security concern already applied

[14:44:02.0000] <ap_>
kennyluck: Chromium has an separate private implementation of AppCache

[14:45:00.0000] <annevk>
zewt: to prevent the attack you need a header and that also prevents app cache

[14:45:01.0000] <sicking>
Hixie: so would you say that c-style structs are as object oriented as c++ classes?

[14:45:02.0000] <Hixie>
sicking: but in any case, while i think the "pass an object with a function" mechanism is pointless given that we have closures, i am not arguing against it. I'm just arguing against having lots of callbacks with lots of different names.

[14:45:03.0000] <zewt>
Hixie: (it's not at all)

[14:45:04.0000] <ap_>
kennyluck: https://bugs.webkit.org/show_bug.cgi?id=60571 tracks making this change for WebKit

[14:45:05.0000] <annevk>
hey ap_

[14:46:00.0000] <ap_>
hey Anne

[14:46:01.0000] <Hixie>
sicking: a c-style struct containing a c++ class instance is as object-orientated as a c++ class instance containing a c-style struct, which would be the equivalent analogy

[14:46:02.0000] <zewt>
sicking: what do C or C++ have to do with it? neither has first-class functions or closures (well, ignoring insane new C++ stuff)

[14:46:03.0000] <kennyluck>
ap_, well then that contradicts what TabAtkins said then.

[14:46:04.0000] <kennyluck>
ap_, thanks for the link!

[14:46:05.0000] <annevk>
ap_: other reason for removing UTF-32 is reducing encoding proliferation and making it less likely for content to start depending on one user agent

[14:46:06.0000] <TabAtkins>
kennyluck: Believe ap_

[14:46:07.0000] <sicking>
Hixie: the whole point is having functions on the object

[14:47:00.0000] <Hixie>
sicking: functions in JS _are_ objects.

[14:47:01.0000] <ap_>
annevk: I guess I'm a bit allergic to ideas about limiting encoding support, because it often means special cases and more work

[14:47:02.0000] <ap_>
annevk: UTF-32 is not really one of those cases

[14:47:03.0000] <zewt>
as far as i'm concerned, the idea of passing an object containing a function when you really want to say "call this function" is just a nasty echo of java Runnable

[14:47:04.0000] <ap_>
annevk: text formats that HTML5 limits to UTF-8 definitely is more work for questionable benefit (at best)

[14:48:00.0000] <annevk>
ap_: guess that depends on the implementation, I can see how it's true for ICU

[14:48:01.0000] <sicking>
Hixie: i don't see how that's relevant

[14:48:02.0000] <sicking>
Hixie: no-one is arguing that you can't do this with only function callbacks

[14:48:03.0000] <sicking>
Hixie: it's a question of developer ergonomics

[14:48:04.0000] <Hixie>
sicking: instead of  var o = { handleEvent: function () { ... }, state: 0 }; callback(o);  you can just do  var f = function () { ... }; f.state = 0; callback(f);

[14:48:05.0000] <smaug____>
zewt: it is not about "call this function". It is about call the function of this object.

[14:49:00.0000] <sicking>
Hixie: indeed. Objects are totally unneccesary

[14:49:01.0000] <Hixie>
sicking: anyway my argument isn't against objects. my argument is against having the callbacks have different names from each other.

[14:49:02.0000] <sicking>
Hixie: basic is just as turing complete as C++ and Java

[14:50:00.0000] <TabAtkins>
I don't understand what imaginary position you're attempting to argue against, sicking.

[14:51:00.0000] <sicking>
TabAtkins: the question is what programming syntaxes we want to support

[14:51:01.0000] <smaug____>
is sicking arguing against something?

[14:51:02.0000] <TabAtkins>
sicking: I understand that.  I'm wondering why the word "BASIC" got into the argument.

[14:51:03.0000] <smaug____>
I thought he is arguing why object callbacks are a nice feature

[14:51:04.0000] <zewt>
smaug____: it's "do this thing"; passing in a function (possibly created via function.bind) is much more direct than passing in an object containing a method to do the thing

[14:51:05.0000] <TabAtkins>
I suspect you're badly trying to make a reductio ad absurdum

[14:51:06.0000] <sicking>
TabAtkins: basic doesn't have objects

[14:52:00.0000] <sicking>
TabAtkins: well.. it didn't used to

[14:52:01.0000] <smaug____>
zewt: how is that "much more direct" ?

[14:52:02.0000] <zewt>
how is it not?

[14:52:03.0000] <zewt>
"here's the thing. do it"

[14:52:04.0000] <sicking>
look at how people like google, facebook, jquery etc write their code. There's tons of objects and "classes"

[14:53:00.0000] <smaug____>
"here is the callback object, use it"

[14:53:01.0000] <sicking>
anyhow, i'd rather argue on the mailing list than here

[14:53:02.0000] <sicking>
to allow broader participation

[14:53:03.0000] <Hixie>
you haven't argued here at all :-)

[14:53:04.0000] <Hixie>
at least, not against the point i was making

[14:53:05.0000] <zewt>
smaug____: no, it's "here's the object, call the function with the implicit name XXX on it"

[14:53:06.0000] <sicking>
Hixie: then you're not understanding my argument

[14:54:00.0000] <zewt>
i think a lot of us aren't :)

[14:54:01.0000] <Hixie>
sicking: of that i am sure

[14:54:02.0000] <smaug____>
I certainly can't understand Hixie's argument why handleEvent should be the method name everywhere.

[14:55:00.0000] <annevk>
what is wrong with that?

[14:55:01.0000] <zewt>
the only argument I've seen for eg. handleEvent instead of passing a function is so you don't have to tack ".bind(obj)" on the end of the object (which seems trivial to me)

[14:55:02.0000] <zewt>
er, end of the function name

[14:56:00.0000] <zewt>
(actually, I often just pre-bind my functions, eg. this.mousemove = this.mousemove.bind(this), all in one block in the ctor)

[14:56:01.0000] <smaug____>
annevk: if you're not handling any kind of "event", why the function name should be handleEvent? Also, different handleEvent functions would need to handle different kinds of parameters

[14:56:02.0000] <annevk>
you always handle some kind of "event"

[14:56:03.0000] <annevk>
in the broad sense of "event"

[14:57:00.0000] <Hixie>
smaug____: i've given several reasons. to summarise: authors would have to remember the names if it wasn't consistent, and can't rely on autocomplete in IDEs to do it for them, nor would it be easy to look up in documentation. Having multiple names would make using objects to do generic proxies harder as you've have to pass the callback name. Having different names would mean migrating from function-style to object-style in an environment that used proxies would me

[14:57:01.0000] <smaug____>
in the broad sense yes, but not in web api sense, I'd say

[14:57:02.0000] <annevk>
that's what a callback is after all

[14:57:03.0000] <annevk>
an event

[14:57:04.0000] <smaug____>
where else in web apis is "event" use than in dom events

[14:57:05.0000] <zewt>
smaug____: my question is: if handleEvent is to be used for things other than DOM events (for legacy compatibility): why should it be used instead of (or in addition to) the API accepting a function? what's the benefit, weighed against complicating the API and adding avoidable style variances?

[14:58:00.0000] <Hixie>
smaug____: [...] would mean migrating from function-style to object-style in an environment that used proxies would mean changing all the call sites as well. And finally, the main reason put forward for having different names -- being able to use one object for multiple callbacks -- is unrealistic as in practice you'd likely be needing multiple functions for the same callback type, not different callback types.

[14:59:00.0000] <heycam>
Hixie, at least if you are handling the same callback type it means you have the same argument list passed in -- and with DOM Events you can switch based on event.target/type

[14:59:01.0000] <smaug____>
zewt: consistency with event listeners, and also, apparently developers like callback objects, since it is used quite often

[14:59:02.0000] <heycam>
if you have different callback types handled by the same function, that's going to be impossible

[15:00:00.0000] <Hixie>
heycam: if you're doing a proxy thing that just e.g. counts accesses, you'd just be forwarding all the arguments to the "real" handler

[15:00:01.0000] <Hixie>
heycam: so it doesn't matter what the arguments are

[15:01:00.0000] <zewt>
smaug____: 1: event listeners do this (from my perspective) for legacy compatibility; "consistency with legacy APIs" is not interesting (if this was taken as an argument, it would lead to very, very ugly APIs); 2: but I'd like to know *why* they like it, what the rational reason for doing/supporting this is

[15:01:01.0000] <heycam>
Hixie, I think that is not nearly going to be the common case, where you want the same function to handle all different kinds of callbacks

[15:01:02.0000] <Hixie>
heycam: using this at all is not going to be the common case

[15:03:00.0000] <heycam>
Hixie, my argument is that if you are going to support the object style, and one of the reasons being so that you can have a single object with state, that you should have different names otherwise its usefulness is diminished

[15:03:01.0000] <Hixie>
heycam: being able to dispatch based on the argument is a rarity -- only applies to DOM Event callbacks

[15:04:00.0000] <Hixie>
heycam: so i argue that having different names does basically nothing to help with that

[15:04:01.0000] <Hixie>
heycam: e.g. if i have many canvases and i call toBlob() on lots of them -- can't use the same object

[15:04:02.0000] <smaug____>
zewt: I would assume people like callback objects since it allows developer to encapsulate the needed functions and properties to an object easily

[15:04:03.0000] <zewt>
but you can do that with functions very easily too

[15:04:04.0000] <Hixie>
heycam: or if i use DataTransferItem's getAsString() on lots of DataTransferItems, can't use the same callback object

[15:04:05.0000] <smaug____>
zewt: you need bind explicitly

[15:04:06.0000] <zewt>
big deal

[15:04:07.0000] <smaug____>
need to

[15:05:00.0000] <Hixie>
heycam: JS functions can have state, so you don't need to use the object style to have a single object with state

[15:05:01.0000] <zewt>
one line of code per function, at most

[15:05:02.0000] <heycam>
Hixie, can't because of the semantics of your application? and because they don't pass an argument identifying the canvas/transferitem?

[15:05:03.0000] <smaug____>
zewt: it is, if you have simpler way to do it

[15:05:04.0000] <Hixie>
heycam: can't because there's no context in the argumentsl ist

[15:05:05.0000] <zewt>
this is not simpler, it's making the whole API more complex by having multiple ways to do things (which now everyone has to know)

[15:05:06.0000] <zewt>
that's not even in the ballpark of being worth it, for eliminating "this.func = this.func.bind(this)"

[15:07:00.0000] <heycam>
Hixie, I think that is a reasonable point. with DOM Events it is easy to have the one handleEvent function handle different sources of the event. but with other callback APIs we have, that is not possible.

[15:07:01.0000] <heycam>
Hixie, so we already have some limitation in the set of handlers you can put on a single object because of that

[15:08:00.0000] <zewt>
also that doesn't help with events at all (since events all use the same callback name), so it doesn't seem to explain why people use it

[15:08:01.0000] <smaug____>
(there is a reason why mutationobserver callback has mutationobserver as a parameter)

[15:08:02.0000] <heycam>
Hixie, and you have to be "lucky" that you want to handle either only a single source per callback method name

[15:08:03.0000] <heycam>
s/either//

[15:09:00.0000] <Hixie>
heycam: i have yet to see a single realistic example of a time where you would be so lucky. all the cases i've looked at are cases where you'd be using multiple callbacks of the same type.

[15:09:01.0000] <Hixie>
heycam: (e.g. DOM Events, toBlob(), etc)

[15:12:00.0000] <heycam>
Hixie, yeah so I'm saying that with DOM Events (and apparently as smaug____ says with mutation observers) you get a parameter that lets you differentiate the source of the callback

[15:12:01.0000] <heycam>
I would say then that to avoid this problem of using the same callback method for different sources, all these other callback APIs signatures should grow an argument to indicate the source

[15:12:02.0000] <Hixie>
heycam: and i'm arguing that this means that the argument saying that we need different names so one object can be used with different callback types is too weak to consider, especially against all the other points raised against having multiple names.

[15:12:03.0000] <heycam>
(if you did indeed want to ensure that your single object can handle all kinds of different sources and callback types)

[15:12:04.0000] <zewt>
heycam: i've never found that to be a problem in practice (not one worth bloating every callback API for, certainly)

[15:12:05.0000] <Hixie>
i'm not convinced it's an interesting use case. just use closures.

[15:12:06.0000] <heycam>
Hixie, I would agree it is weaker. (weak enough? not sure. maybe.)

[15:14:00.0000] <zewt>
is "calling bind() is sort of annoying" the only argument?

[15:14:01.0000] <zewt>
or did I miss others

[15:15:00.0000] <heycam>
zewt, let's say you have a single object with multiple callback methods on it. you at least have to duplicate the method names on each callback registration function call, too.

[15:15:01.0000] <heycam>
so intead of addEventListener(type, obj, false) you need to do addEventlistener(type, obj.functionname.bind(obj), false)

[15:16:00.0000] <zewt>
heycam: let's back up a step, you're talking about two separate things there

[15:16:01.0000] <heycam>
(not saying that is strong, just pointing out it's not only ".bind()")

[15:16:02.0000] <zewt>
1: having to say obj.functionname instead of obj, and 2: having to tack on bind(obj)

[15:16:03.0000] <heycam>
zewt, it's the same thing. you need both, right? :)

[15:16:04.0000] <zewt>
1: i think is perfectly fine and a good API, in a language with first-class functions

[15:16:05.0000] <Hixie>
it is unrealistic to expect that someone will magically have a perfect mapping of types of callbacks to actuall callback functions

[15:16:06.0000] <Hixie>
even if one did use objects one would _still_ have to pick the right callback

[15:17:00.0000] <zewt>
i mean, i think foo(obj.functionName) is a much much cleaner, more obvious API than foo(obj) where "functionName" is baked into the API, at least when there's only one callback involved

[15:17:01.0000] <heycam>
Hixie, "pick the right callback"? didn't quite follow that.

[15:17:02.0000] <Hixie>
e.g. addEventListener('load', callbackObjects.myLoadCallbackObject); addEventListener('click', callbackObjects.myClickCallbackObject);

[15:17:03.0000] <zewt>
2: bind(obj)--yeah it's "sort of annoying" but that's about it

[15:19:00.0000] <heycam>
Hixie, it is true you would still need to switch based on say the .type of the event object

[15:20:00.0000] <heycam>
Hixie, (though you could do that in your handleEvent pretty simply by looking up a property based on the type, and calling that function if it exists.)

[15:20:01.0000] <annevk>
heycam: https://bugs.webkit.org/show_bug.cgi?id=74648

[15:20:02.0000] <annevk>
heycam: would prolly be good to decide on "|" or "or"

[15:20:03.0000] <heycam>
zewt, I think the clarity is a good point, where you don't have the functionName listed in your registration function call so it is less obvious exactly what is going to get called

[15:20:04.0000] <zewt>
i don't think this.handleEvent = function(e) { switch(e.type) { case "load": this.onLoad(); break; case "click": this.onClick(); } } is a win over a couple bind() calls :)

[15:21:00.0000] <annevk>
heycam: oh, and define unions :)

[15:21:01.0000] <Hixie>
you're arguing that encouraging a style where all event handling goes through one method that dispatches on target and type is better than encouraging a style where the browser just sends the event to the right code itself?

[15:21:02.0000] <heycam>
annevk, don't you mean we have to decide whether to include unions or not first? :)

[15:21:03.0000] <heycam>
annevk, I'm going to have to treat unions, overrides, [AllowAny] all at once

[15:21:04.0000] <heycam>
since they all interrelate

[15:21:05.0000] <zewt>
(unions? in javascript? whaaaat)

[15:21:06.0000] <annevk>
heycam: yeah

[15:22:00.0000] <heycam>
Hixie, I am not arguing that. I am just saying there that it doesn't matter so much that all DOM Events are smushed into the one handleEvent, because you can easily discriminate based on type/target and dispatch to the specific handler function based on that.

[15:23:00.0000] <zewt>
http://zewt.org/curves/draggable.js i do this a lot; it's a little annoying to have to, but none of this is better

[15:23:01.0000] <annevk>
zewt: in IDL so not every function will implement its own rudimentary argument checks

[15:23:02.0000] <zewt>
annevk: hmm

[15:23:03.0000] <Hixie>
heycam: I am saying that it is terrible if all DOM Events are smushed into one method, because you have to discriminate based on type/target and dispatch to the specific handler function based on that.

[15:24:00.0000] <Hixie>
heycam: instead of just registering them in the first place and not having to do any of that work at event handling time.

[15:24:01.0000] <Hixie>
heycam: seems like a pretty strong example of why you would not want to use an object here

[15:24:02.0000] <annevk>
obviously you would use one object per event type

[15:25:00.0000] <smaug____>
AFAIK, it is pretty common to have an object with handleEvent to handle different event types and event targets

[15:25:01.0000] <heycam>
Hixie, the reason you use an object is to get simple access to your state shared across multiple handlers

[15:26:00.0000] <Hixie>
heycam: the reason you use a closure is to get simple access to your state shared across multiple handlers too

[15:26:01.0000] <zewt>
... but that's what objects are for (and we've looped the conversation)

[15:27:00.0000] <zewt>
(er, what hixie said, of course)

[15:27:01.0000] <zewt>
i mean using bind() gives you an object to share state on in exactly the same way

[15:27:02.0000] <heycam>
so that comes back to zewt's question from before

[15:27:03.0000] <annevk>
Velmont: heh, just noticed you reused some of the code of my tests

[15:27:04.0000] <Hixie>
you don't need bind() even

[15:28:00.0000] <heycam>
about whether avoiding bind() is the real difference

[15:28:01.0000] <heycam>
Hixie, sure

[15:28:02.0000] <Hixie>
just have the state in scope

[15:28:03.0000] <heycam>
Hixie, just closed over variables

[15:28:04.0000] <heycam>
right

[15:28:05.0000] <zewt>
Hixie: that's just a stylistic difference

[15:28:06.0000] <zewt>
but yes

[15:28:07.0000] <annevk>
Velmont: HTTP status "699 WAY OUTTA RANGE" :)

[15:28:08.0000] <zewt>
both ways work

[15:28:09.0000] <Hixie>
zewt: the whole discussion is about stylistic differences

[15:28:10.0000] <Hixie>
zewt: all of these ways work

[15:28:11.0000] <heycam>
yes

[15:28:12.0000] <zewt>
i don't like writing large blocks of code as closures; i prefer member functions

[15:28:13.0000] <heycam>
I think that's why I dislike this issue, it's pretty much only style :)

[15:28:14.0000] <heycam>
in fact that's most of the difficult to resolve web idl issues :/

[15:29:00.0000] <Hixie>
i'm not arguing that we shouldn't allow authors to use objects (though i certainly wouldn't be sad if we only allowed functions)

[15:29:01.0000] <Hixie>
i'm just saying that if we do allow objects, we should make them consistent so you know it's always handleEvent()

[15:29:02.0000] <Hixie>
and don't have to look it up each time

[15:29:03.0000] <heycam>
Hixie, I am arguing that we shouldn't allow authors to use objects if we use the same name, since it makes them less useful. (but I did say that before.)

[15:29:04.0000] <zewt>
i'd argue that the handleEvent thing shouldn't be propagated to new APIs

[15:29:05.0000] <Hixie>
and don't have to pass the method name around when you're making proxies

[15:29:06.0000] <Hixie>
heycam: i'd be fine with that too

[15:29:07.0000] <heycam>
Hixie, and not only less useful, but definitely not useful enough to support

[15:29:08.0000] <zewt>
(i mean, APIs other than DOM event listeners)

[15:30:00.0000] <Hixie>
heycam: i'm not sure the object style is useful enough to support at all, modulo compat needs

[15:30:01.0000] <heycam>
(btw I did mention on the list previously that I am mostly on the side of "only allow functions", but I am interested in teasing out the arguments here)

[15:30:02.0000] <smaug____>
consistency in APIs is important

[15:30:03.0000] <zewt>
the entire handleEvent thing feels like an API designed by a Java programmer, who's only ever used java Runnable objects and didn't understand first-class functiosn at all

[15:30:04.0000] <Hixie>
heycam: but if we did have it, i think it'd be more useful to have them all the same name than have different names

[15:31:00.0000] <Hixie>
zewt: it _is_ a java thing

[15:31:01.0000] <Hixie>
zewt: the DOM was originally designed for Java

[15:31:02.0000] <zewt>
i try to avoid actually knowing about java things; it's one of the worst, most painful languages I've ever spent time in

[15:31:03.0000] <heycam>
is that true? or is it just that it was designed with OMG IDL which doesn't allow non-Java-like interfaces to be designed?

[15:31:04.0000] <zewt>
my conclusion is always: Java Hates Programmers, And Wants To Hurt You

[15:34:00.0000] <Hixie>
heycam: as far as i can tell, it was designed for Java implementations, with JS as a secondary concern.

[15:34:01.0000] <Hixie>
heycam: or at least, was designed to have Java as at least as important a concern as JS

[15:44:00.0000] <smaug____>
class attribute uses space separated class names

[15:44:01.0000] <smaug____>
in which case are some names separated using , ?

[15:47:00.0000] <smaug____>
nm, found

[15:47:01.0000] <Hixie>
smaug____: <input accept> <input type=email multiple value>, <meta name=keywords content>

[15:48:00.0000] <Hixie>
i think that's it

[15:48:01.0000] <Hixie>
<area coords> maybe also

[15:49:00.0000] <smaug____>
I was just thinking to change allowfullscreen to allow="fullscreen pointerlock"

[15:49:01.0000] <smaug____>
and whether it should use space or comma

[15:49:02.0000] <smaug____>
not that it matters much

[15:49:03.0000] <smaug____>
but apparently space is used more often

[15:50:00.0000] <Hixie>
definitely space

[15:50:01.0000] <Hixie>
and yeah, that would make much more sense than allowfullscreen allowpointerlock

[15:50:02.0000] <Hixie>
and would go well with the sandbox="" attribute

[15:52:00.0000] <smaug____>
annevk: ^^

[15:54:00.0000] <annevk>
wfm

[15:57:00.0000] <zewt>
i sure wish the whole "your download will start in *pointless delay*" would die


2011-12-16
[16:05:00.0000] <roc>
smaug____: wfm too

[16:06:00.0000] <smaug____>
k

[16:08:00.0000] <roc>
actually I think it would be slightly neater to have "sandbox" be a boolean attribute and have allow="forms same-origin" etc

[16:08:01.0000] <roc>
but maybe it's too late for that

[16:09:00.0000] <annevk>
Opera does not have sandbox

[16:09:01.0000] <annevk>
does IE?

[16:10:00.0000] <roc>
I believe IE10 does

[16:11:00.0000] <smaug____>
yes, IE10 has http://msdn.microsoft.com/en-us/library/hh673561%28v=VS.85%29.aspx

[16:11:01.0000] <annevk>
guess there goes the idea for a better syntax

[16:12:00.0000] <roc>
well, IE10's not out yet

[16:12:01.0000] <zewt>
roc: is there really much benefit to that over just having regular attributes? since that's how everything else does it...

[16:12:02.0000] <annevk>
yeah, and we could transition from one to the other somehow

[16:13:00.0000] <roc>
a browser could easily support both syntaxes

[16:13:01.0000] <smaug____>
yeah

[16:13:02.0000] <zewt>
but why have two syntaxes?

[16:13:03.0000] <annevk>
zewt: currently it's sandbox=allow-scripts

[16:13:04.0000] <annevk>
zewt: or sandbox="allow-scripts allow-forms"

[16:13:05.0000] <annevk>
if we are going to have an allow attribute

[16:13:06.0000] <annevk>
letting that take "scripts" and "forms" seems way better

[16:14:00.0000] <annevk>
(and other values)

[16:14:01.0000] <roc>
zewt: it seems cleaner and easier to use to have all the permission-granting following the same pattern instead of some permissions only working in the sandbox attribute and others working in the "allow" attribute

[16:14:02.0000] <Hixie>
i prefer keeping the things that sandbox="" turns off separate from the things that allow="" turns on

[16:14:03.0000] <Hixie>
but i think that ship has sailed, anyway

[16:14:04.0000] <roc>
sandbox doesn't turn things off, it turns things on

[16:14:05.0000] <roc>
the things in its attribute value

[16:15:00.0000] <roc>
so now you have to know, for each thing you want to turn on, whether it belongs with sandbox or not

[16:15:01.0000] <Hixie>
sandbox="" turns things off, its value can then turn things back on

[16:15:02.0000] <annevk>
which it first disables

[16:15:03.0000] <Hixie>
as opposed to allow="", which turns things on that are by default off

[16:17:00.0000] <roc>
as an author, if I've got a sandboxed iframe and I want to add fullscreen permission and forms permission, say, I have to know that the former doesn't belong in "sandbox" and the latter does. It's no biggie, but it's unnecessary complexity

[16:19:00.0000] <zewt>
requesting fullscreen permission in markup would be bizarre anyway

[16:19:01.0000] <zewt>
and way outside the general permissions model that's been used so far (ask when you need it, don't bundle up permission requests and ask at the start)

[16:20:00.0000] <roc>
this is different

[16:20:01.0000] <smaug____>
(this has nothing to do with requesting permission)

[16:20:02.0000] <roc>
this is about the outer page allowing the content in an <iframe> to go fullscreen

[16:21:00.0000] <roc>
it's about granting permission, not requesting it

[16:24:00.0000] <zewt>
Hixie: fwiw, if there's both sandbox="allow-things" and allow="other-things", i'd change one "allow" or the other (to "permit" or something)

[16:26:00.0000] <Hixie>
i don't think it'd be wise to change sandbox="" at this stage

[16:26:01.0000] <Hixie>
churn in specs just pisses people off

[16:26:02.0000] <Hixie>
especially once they've implement it

[16:27:00.0000] <Hixie>
and pissing off implementors is not a good way to get interoperability in the future

[16:27:01.0000] <zewt>
two ways to go though--is @allow newer?

[16:27:02.0000] <Hixie>
allow="" doesn't exist yet

[16:27:03.0000] <zewt>
then that'd be the one to change

[16:29:00.0000] <annevk>
I do think though that if a feature is not deployed everywhere yet changing it should be acceptable even though not ideal

[16:30:00.0000] <annevk>
If you look at the kind of relatively minor details that trip people up... If we can simplify, we should

[16:44:00.0000] <zewt>
uhh, what? javascript:alert("foo") in FF8 is ... not finding alert()

[16:45:00.0000] <gavin>
javascript: URLs entered into the lcoation bar in Firefox 6 and later don't inherit the context of the current page

[16:45:01.0000] <zewt>
braaaaaaaindamage

[16:45:02.0000] <gavin>
they are also unfortunately not run in a DOM context at all, so no window.alert

[16:45:03.0000] <gavin>
javascript:1+1 works, though!

[16:45:04.0000] <zewt>
"we can't remove this! let's just utterly break it, because that's okay"

[16:45:05.0000] <zewt>
ugh.

[16:46:00.0000] <gavin>
we broke it because users were getting pwned on facebook

[16:46:01.0000] <zewt>
no, really. ugh.

[16:46:02.0000] <smaug____>
I thought other browsers will do the same

[16:46:03.0000] <gavin>
they did (some in less effective ways)

[16:46:04.0000] <zewt>
(trying to write some test instrumentation dumping javascript: stuff into the address bar to avoid having to modify the page directly, which should work just fine)

[16:46:05.0000] <smaug____>
and yes, it is really annoying, though I use javascript: mainly as a calculator

[16:47:00.0000] <roc>
shift-ctrl-K, go crazy in the Web Console

[16:47:01.0000] <roc>
it's actually less to type than "javascript:"

[16:47:02.0000] <zewt>
that'll be different in every browser (vs. automating alt-d + type stuff)

[16:48:00.0000] <zewt>
no, i was trying to automate keystrokes to run diagnostic code on different browsers; javascript: in the address bar is one approach that shouldn't have been massively different in each browser

[16:50:00.0000] <roc>
various Firefox extensions let you remap keys

[16:51:00.0000] <zewt>
this is automation from an external script

[16:51:01.0000] <kbrosnan>
javascript: is an attack vector

[16:53:00.0000] <zewt>
not a reason to not have an about:config to revert this nonsense for the people who are 1: not stupid enough to copy and paste whatever people tell them to and 2: actually do use browser features that have been around forever

[16:54:00.0000] <zewt>
guess i'll just need more browser special cases; oh well

[18:02:00.0000] <MikeSmith>
hmm

[18:02:01.0000] <MikeSmith>
http://www.securityweek.com/ca-industry-group-creates-new-standard-issuance-ssltls-certificates

[18:02:02.0000] <MikeSmith>
http://cabforum.org/Baseline_Requirements_V1.pdf

[18:02:03.0000] <MikeSmith>
Are browser vendors actually still participating the CA/Browser Forum?

[18:03:00.0000] <zewt>
/me clicks link, gets a "subscribe to us" nag and hits control-f4

[22:15:00.0000] <MikeSmith>
/me reads

[22:15:01.0000] <MikeSmith>
/me reads http://www.w3.org/2011/webtv/wiki/MPTF/Netflix_Content_Protection

[22:16:00.0000] <zewt>
is anyone actually taking that seriously? heh

[22:18:00.0000] <zewt>
drm being fundamentally and irreconcilably incompatible with open source browsers, apis specifically to support pieces of it seem completely useless (unless browsers become less open, and anything encouraging that is bad)

[22:20:00.0000] <Hixie>
not to mention it being user-hostile

[22:20:01.0000] <Hixie>
i don't understand how any engineer who works on drm tech can live with themselves

[22:21:00.0000] <zewt>
i've worked on drm :( (but for turnkey arcade systems, not consumer stuff)

[22:23:00.0000] <zewt>
(and given that the underlying game engine was, for the most part, released open source, I can live with that)

[22:24:00.0000] <Hixie>
the vast majority of arcade machines i see these days are privately owned

[22:24:01.0000] <Hixie>
so it's still "consumer stuff"

[22:25:00.0000] <zewt>
$5000+ machines aren't consumer products, no matter who ends up buying them in the end

[22:26:00.0000] <Hixie>
cars aren't consumer products? :-)

[22:26:01.0000] <Hixie>
houses aren't consumer products? :-)

[22:26:02.0000] <zewt>
different scale of product :)

[22:26:03.0000] <Hixie>
i don't see how

[22:26:04.0000] <zewt>
consumer games are $50, not $5000

[22:27:00.0000] <Hixie>
my point is that if it's privately owned, the drm would stop someone from making private modifications to their property

[22:27:01.0000] <zewt>
also vastly different scale (we'd have been happy to sell a thousand units)

[22:28:00.0000] <zewt>
i know all the arguments; at least in that case (the one I happen to have direct experience with), the practicalities had to come before principle

[22:28:01.0000] <Hixie>
(and if it's not a consumer product, why bother with drm? a commercial competitor who is so beyond the law that the legal system is not a sufficient recourse is certainly not gonna have any trouble reverse-engineering some obfuscation)

[22:29:00.0000] <zewt>
because the variables don't work out that way

[22:29:01.0000] <Hixie>
(in fact such a competitior is far more likely to just steal the code/assets/designs/whatever straight from the source repository than bother with buying an actual product)

[22:29:02.0000] <Hixie>
(just look at how movies get redistributed before they're even commercially available)

[22:29:03.0000] <zewt>
there are plenty of people who would pirate our game if it was easy to do (just a new HDD), but nobody with the expertese to break it was actually trying

[22:30:00.0000] <Hixie>
and how many of those people actually bought copies instead?

[22:30:01.0000] <zewt>
versions of our game where the encryption was broken sold significantly less than the ones where it wasn't (don't have exact numbers, probably couldn't say them if I did)

[22:31:00.0000] <zewt>
also, enforcing copyright internationally takes a lot more resources than domestically

[22:32:00.0000] <Hixie>
should've just paid for a security guard for each unit to stand there with a cane and beat anyone who tried to open the box, instead

[22:32:01.0000] <zewt>
then we'd need our own legal defense team. heh

[22:32:02.0000] <Hixie>
anyway

[22:32:03.0000] <Hixie>
the ends don't justify the means

[22:32:04.0000] <Hixie>
consumer or not

[22:33:00.0000] <zewt>
when the lack of DRM means there will be no future product, they can

[22:33:01.0000] <Hixie>
better to have no products than to have drm, imho

[22:34:00.0000] <Hixie>
(luckily, that isn't even close to the actual result of not having drm)

[22:34:01.0000] <zewt>
it definitely was in our case (i'm not saying it is in *all* cases)

[22:35:00.0000] <Hixie>
i'm skeptical, but i don't have all the data so can't comment one way or the other on your specific case

[22:35:01.0000] <Hixie>
generally when i've seen people make those claims though they tend to forget to account for all the factors, e.g. the opportunity cost of working on drm

[22:36:00.0000] <zewt>
what?

[22:36:01.0000] <zewt>
(i know the cost to us in implementing the drm, since i did it all myself--took 3-4 weeks)

[22:37:00.0000] <Hixie>
3-4 weeks total, or 3-4 weeks on the ones that got broken, or 3-4 weeks on one game that didn't get broken?L

[22:38:00.0000] <zewt>
as far as I know it was never broken so long as I worked there, at least (at least based on the fact that bootlegs didn't show up in the wild)

[22:38:01.0000] <zewt>
(forget how long; well over a year)

[22:38:02.0000] <Hixie>
i thought you just said "versions of our game where the encryption was broken sold significantly less than the ones where it wasn't"

[22:39:00.0000] <zewt>
that was a much older system (written maybe 6-7 years earlier)

[22:39:01.0000] <Hixie>
so 3-4 weeks per game then

[22:39:02.0000] <zewt>
it was much weaker and used on too many products without changing

[22:39:03.0000] <Hixie>
how much more would you have made if you'd spent those 3-4 weeks e.g. working on a system where they could buy the disks to put new games in for very little instead of requiring that they buy an entirely new unit? (i'm guessing as to the mechanics here since i don't know what you did exactly)

[22:40:00.0000] <zewt>
3-4 weeks initially; that system was used on two products while I was there

[22:40:01.0000] <zewt>
we actually did have a system for in-place upgrades; the market wasn't really set up to use it, so we didn't make much use of it

[22:40:02.0000] <zewt>
(insert USB drive with upgrade, push button, wait a minute)

[22:40:03.0000] <Hixie>
but the market was set up to do it without you if they broke the drm?

[22:41:00.0000] <zewt>
the market is always set up to copy games for free if they can

[22:41:01.0000] <zewt>
(at least in some countries)

[22:42:00.0000] <Hixie>
not at all, e.g. valve has found that by making buying games actually easier than copying them, they sell more games than they would if they had drm

[22:42:01.0000] <zewt>
that's for consumers buying games online; it doesn't translate to $500+ upgrade packs for arcade games

[22:43:00.0000] <zewt>
(eg. many arcades can't get internet access to machines)

[22:43:01.0000] <Hixie>
so maybe the problem isn't that your market isn't set up for it but that you were charging rates the market wasn't ready to support without using artifical tactics like drm

[22:44:00.0000] <zewt>
the market isn't prepared to pay anything whatsoever, if it can get stuff for $0 (or $30 or whatever the cost of a tiny HDD is)

[22:44:01.0000] <Hixie>
again, valve has shown that to not be true

[22:44:02.0000] <Hixie>
iTunes has also shown that to not be true (for music)

[22:44:03.0000] <zewt>
again, steam has no comparative value to arcade machines

[22:45:00.0000] <zewt>
buying a song on iTunes is "push button, spend $1, get a song"; arcade owners don't spend hundreds of dollars on an upgrade on a one-click whim purchase

[22:45:01.0000] <Hixie>
i see no reason to believe that any particular market would be any mare special than another here

[22:45:02.0000] <Hixie>
again, maybe the problem is that you were charging too much to make it sustainable

[22:45:03.0000] <zewt>
it's completely different, because upgrading an arcade machine is a financial investment, buying a game on steam is not

[22:46:00.0000] <Hixie>
all purchases boil down to investments

[22:46:01.0000] <zewt>
not in comparable notions of the word

[22:46:02.0000] <Hixie>
when you buy a game on steam, you're return is going to be in entertainment per hour instead of dollars per hour

[22:46:03.0000] <zewt>
i buy a $40 game if I think I'll have $40 of fun with it; an arcade owner buys a $500 upgrade if he thinks he'll make $500 more money from coin drops as a result

[22:46:04.0000] <Hixie>
but at the end of the day, what are dollars if not a way to get entertainment?

[22:47:00.0000] <Hixie>
sounds the same to me

[22:47:01.0000] <zewt>
sounds unrelated to me

[22:47:02.0000] <Hixie>
whatever lets you sleep at night :-)

[22:48:00.0000] <hsivonen>
RDFa continues to live in a time warp where HTML and XHTML are developed separately: http://www.w3.org/News/2011.html#entry-9301

[22:48:01.0000] <zewt>
our engine was almost all released as open-source, so I have no trouble sleeping at night :)

[22:49:00.0000] <zewt>
http://sourceforge.net/projects/stepmania/

[23:19:00.0000] <roc>
there are different kinds of DRM

[02:13:00.0000] <annevk>
thanks Hixie for picking up on the callback stuff

[02:13:01.0000] <annevk>
/me had given up

[03:13:00.0000] <annevk>
can someone explain to me what I did wrong here:

[03:13:01.0000] <annevk>
http://validator.nu/?doc=http%3A%2F%2Fdvcs.w3.org%2Fhg%2Fencoding%2Fraw-file%2Ftip%2FOverview.html

[03:14:00.0000] <annevk>
ooh, this goes for a lot on dvcs

[03:14:01.0000] <annevk>
maybe it says charset="utf-8" in the HTTP header and validator.nu has the same bug Gecko once had?

[03:20:00.0000] <hsivonen>
annevk: yeah. is it a v.nu bug or a W3C server config bug?

[03:26:00.0000] <annevk>
per HTTP v.nu

[03:27:00.0000] <annevk>
but HTTP is not defined in a pragmatic way, so "unclear" :(

[03:33:00.0000] <annevk>
hsivonen: ideas on how to make http://dvcs.w3.org/hg/encoding/raw-file/tip/single-octet-research.html more readable?

[03:33:01.0000] <annevk>
hsivonen: pull not supported before the table I guess and maybe give the "other labels" bit a heading of some sorts?

[03:33:02.0000] <annevk>
it needs to stay fairly compact because there's so much information

[03:34:00.0000] <hsivonen>
annevk: first of all, you could separate the encoding tables from the browser support data instead of interleaving them

[03:35:00.0000] <hsivonen>
annevk: then maybe have a table of with browsers as columns and encodings as rows and markers in the cells and cell bg colors that communicate the same info as the markers

[03:36:00.0000] <annevk>
ooh that sounds pretty good

[04:25:00.0000] <smaug____>
/me kicks sicking

[04:25:01.0000] <sicking>
huh?

[04:26:00.0000] <Echoes2>
o_O

[04:26:01.0000] <smaug____>
I strongly disagree your idea that if websocket buffer is full, let's just cut it

[04:27:00.0000] <smaug____>
it is like "hey, we have little problem, and we don't want to handle it at all, so please re-start everything"

[04:28:00.0000] <sicking>
smaug____: you should check archives, this discussion has been had at least a dozen times

[04:28:01.0000] <smaug____>
where?

[04:28:02.0000] <smaug____>
I do recall this discussed few times

[04:28:03.0000] <sicking>
webapi list i would think

[04:29:00.0000] <sicking>
smaug____: the thing is, running out of buffer space should never happen. It's equivalent to OOM

[04:29:01.0000] <smaug____>
your point about data integrity is valid, but that just means that error handling is now forced to happen in error event listener

[04:29:02.0000] <sicking>
smaug____: error handling *should* happen in the error handler

[04:29:03.0000] <sicking>
that's what it's for

[04:30:00.0000] <sicking>
what else woudl you do there?

[04:30:01.0000] <smaug____>
er, error or close handler, whatever

[04:31:00.0000] <smaug____>
well, we could for example change send() so that you can't send more stuff before the previous trial has succeeded

[04:31:01.0000] <smaug____>
closing the connection is really overkill

[04:31:02.0000] <sicking>
smaug____: is it overkill to throw an uncatchable exception on OOM

[04:32:00.0000] <sicking>
smaug____: and that in JS. In C++ if you run out of OOM we quit firefox

[04:32:01.0000] <sicking>
err.. if you OOM (not run out of OOM)

[04:32:02.0000] <smaug____>
I don't know what OOM has to do with this

[04:32:03.0000] <sicking>
smaug____: the buffer is memory, running out of buffer is running out of memory

[04:33:00.0000] <smaug____>
yes, but you know before putting anything to the buffer that hey, there is no room there atm

[04:34:00.0000] <sicking>
who knows that, and how?

[04:35:00.0000] <smaug____>
well, in our impl, when we try to copy the data to the buffer

[04:35:01.0000] <smaug____>
if allocation doesn't work, there would be OOM

[04:35:02.0000] <sicking>
yes, the implementaiton knows that

[04:35:03.0000] <smaug____>
which could be reported in a meaning full way to JS

[04:35:04.0000] <sicking>
same thing when allocating a C++ or JS object

[04:36:00.0000] <sicking>
when spidermonkey is asked to allocate a JS object we know we won't be able to honor it

[04:36:01.0000] <sicking>
but we don't report an error in the normal fashion, we simply abort JS execution ("uncatchable exception")

[04:36:02.0000] <smaug____>
this is about quite a bit different case

[04:37:00.0000] <sicking>
we really shouldn't be running out of websocket buffer any more than running out of JS-heap

[04:37:01.0000] <sicking>
so i don't see how they are different

[04:38:00.0000] <smaug____>
you don't create JS object of size 100s of MBs

[04:38:01.0000] <smaug____>
there is a reason why Gecko doesn't use infallible malloc always

[04:39:00.0000] <hsivonen>
smaug____: as I understand it, infallible malloc is avoided when Web content can directly control the allocation size

[04:40:00.0000] <smaug____>
hsivonen: which is the case here

[04:40:01.0000] <sicking>
hsivonen: the problem is in the definition "directly"

[04:40:02.0000] <sicking>
there's plenty of things that we store in nsTArrays which come from web content

[04:41:00.0000] <hsivonen>
sicking: yeah. It's rather annoying that OOM crashes from the infallible malloc are treated as bugs. as if those crashes weren't an expected feature. though sometimes it really makes sense to "fix" those by using fallible malloc

[04:42:00.0000] <sicking>
hsivonen: yeah, i don't agree that those are always bugs

[04:42:01.0000] <sicking>
malicious content has always been able to crash any browser

[04:43:00.0000] <smaug____>
in this case it is quite clear that web content can easily control the buffer size. JS data is converted to UTF8, and that UTF8 data is buffered

[04:45:00.0000] <sicking>
smaug____: so here's an idea

[04:45:01.0000] <sicking>
smaug____: we could fire an event when running out-of-websocket-buffer

[04:45:02.0000] <sicking>
the default action of the event would be to close the connection

[04:46:00.0000] <sicking>
but the page can call .preventDefault and do its own error handling

[04:46:01.0000] <smaug____>
that sounds better :)

[04:46:02.0000] <sicking>
however

[04:46:03.0000] <sicking>
we really should only be running out of websocket buffer when running oom

[04:46:04.0000] <sicking>
so it'll be hard to fire an event

[04:46:05.0000] <smaug____>
not true

[04:47:00.0000] <sicking>
which part?

[04:47:01.0000] <smaug____>
if someone is sending jssrtring.length == 100000000

[04:47:02.0000] <smaug____>
converting that to utf8 certainly would take lots of memory

[04:48:00.0000] <smaug____>
so if reserving memory for that utf8 OOMs, we can easily fire the event

[04:48:01.0000] <sicking>
true

[04:48:02.0000] <sicking>
but

[04:48:03.0000] <sicking>
if that's the concern, is it really worth adding a feature for people that sends strings that are 100MB in size?

[04:49:00.0000] <smaug____>
if browser/OS is really OOMing, then there isn't much to do

[04:49:01.0000] <smaug____>
people do send huge files

[04:49:02.0000] <smaug____>
they may have modified the file

[04:49:03.0000] <sicking>
using strings?

[04:49:04.0000] <smaug____>
and send arraybuffers

[04:49:05.0000] <sicking>
as a single arraybuffer?

[04:49:06.0000] <smaug____>
why not?

[04:50:00.0000] <sicking>
if you have that much data you should be using Blobs

[04:50:01.0000] <sicking>
otherwise you risk running OOM no matter what

[04:50:02.0000] <smaug____>
people do use XHR for file transfer

[04:50:03.0000] <sicking>
sure, they should send Blobs there too

[04:52:00.0000] <smaug____>
or could

[06:46:00.0000] <annevk>
can anyone think of a good way to black box test multi-byte encodings?

[06:46:01.0000] <annevk>
kind of seems like you should test on a per encoding basis

[06:47:00.0000] <zewt>
wouldn't it just be dumping a bunch of test data into HTML and examining the resulting DOM?

[06:47:01.0000] <wilhelm>
Which software will you test? Browsers interpreting something from the web?

[06:48:00.0000] <annevk>
wilhelm: yeah

[06:48:01.0000] <zewt>
what the test data looks like would be very encoding-specific, for the most part, i think

[06:48:02.0000] <annevk>
zewt: I can't really think of a magic bullet

[06:48:03.0000] <annevk>
zewt: right

[06:49:00.0000] <annevk>
I heard some horror stories from our encoding guy; not sure I want to put that much time into defining these encodings

[06:49:01.0000] <zewt>
hmm

[06:50:00.0000] <annevk>
there's a few things I could do that would improve the current situation somewhat

[06:50:01.0000] <zewt>
one question i'd have first off: is <span>any text</span> guaranteed in all browsers to actually parse as a span, no matter what "any text" is (assuming it doesn't contain "<")

[06:50:02.0000] <wilhelm>
Yes. Encoding-specific test data, look at DOM?

[06:50:03.0000] <annevk>
which is define the labels and such to the extent HTML does

[06:50:04.0000] <annevk>
so HTML no longer needs encoding specific stuff

[06:50:05.0000] <annevk>
and all languages can do the same for these encodings

[06:50:06.0000] <zewt>
for example, if you have just one initial byte of SJIS in there, does the decoder reliably break out of it and parse out the </span>

[06:51:00.0000] <wilhelm>
annevk: You should take a look at t/imported/kaz, by the way.

[06:51:01.0000] <annevk>
zewt: I think shift_jis is HTML-safe

[06:51:02.0000] <wilhelm>
annevk: Lots of legacy encoding tests.

[06:51:03.0000] <zewt>
this matters because it'd be nice to write the tests as <span id=test1>X</span> and each test as a separate span, so you can pull out each span to look precisely at that one test

[06:51:04.0000] <wilhelm>
Maybe it can be reused.

[06:51:05.0000] <wilhelm>
(Lots as in several hundred thousand.)

[06:51:06.0000] <zewt>
but if there are cases where (intentional, here) encoding breakage within "X" might cause the span to not be closed, it'd get messier

[06:53:00.0000] <annevk>
zewt: HTML has this vague note

[06:53:01.0000] <annevk>
"An ASCII-compatible character encoding is a single-byte or variable-length encoding in which the bytes 0x09, 0x0A, 0x0C, 0x0D, 0x20 - 0x22, 0x26, 0x27, 0x2C - 0x3F, 0x41 - 0x5A, and 0x61 - 0x7A, ignoring bytes that are the second and later bytes of multibyte sequences, all correspond to single-byte sequences that map to the same Unicode characters as those bytes in ANSI_X3.4-1968 (US-ASCII)."

[06:53:02.0000] <annevk>
"An ASCII-compatible character encoding is a single-byte or variable-length encoding in which the bytes 0x09, 0x0A, 0x0C, 0x0D, 0x20 - 0x22, 0x26, 0x27, 0x2C - 0x3F, 0x41 - 0x5A, and 0x61 - 0x7A, ignoring bytes that are the second and later bytes of multibyte sequences, all correspond to single-byte sequences that map to the same Unicode characters as those bytes in ANSI_X3.4-1968 (US-ASCII)."

[06:53:03.0000] <annevk>
oops

[06:53:04.0000] <Ms2ger>
wilhelm, I sure hope these are becoming public ;)

[06:53:05.0000] <annevk>
"This includes such encodings as Shift_JIS, HZ-GB-2312, and variants of ISO-2022, even though it is possible in these encodings for bytes like 0x70 to be part of longer sequences that are unrelated to their interpretation as ASCII. It excludes such encodings as UTF-7, UTF-16, GSM03.38, and EBCDIC variants."

[06:53:06.0000] <annevk>
wilhelm: I think I looked at those

[06:53:07.0000] <zewt>
annevk: well, the issue here is what browsers *really* do today...

[06:54:00.0000] <wilhelm>
Ms2ger: Indeed. But as of last week, I am no longer an Opera employee. So apart from prodding, I can't do much about it. |c:

[06:55:00.0000] <zewt>
though I suppose if that sort of thing breaks the test, then it'd show up fairly quickly (and once you've tracked that sort of thing down, they can be moved to their own test files)

[06:57:00.0000] <annevk>
I wonder how browsers will cope with > 65000 <span> elements

[06:58:00.0000] <zewt>
well, better off breaking tests into blocks

[06:58:01.0000] <Ms2ger>
Well, how do they deal with the HTML spec?

[06:58:02.0000] <zewt>
sticking them in spans just makes it easier to batch them, so tests aren't split across thousands of tiny files

[06:59:00.0000] <wilhelm>
annevk: They cope moderately well wit kaz' tests. SPARTAN, however... (c:

[06:59:01.0000] <zewt>
could use other ways of dealing with it, like sticking each test between ASCII framing ("XXX 1 test YYY") and picking it apart in scripts

[07:00:00.0000] <zewt>
(uglier, of course)

[07:03:00.0000] <zewt>
iso-2022 makes me sad

[07:05:00.0000] <zewt>
at least most crappy legacy encodings aren't *modal*

[07:06:00.0000] <annevk>
what does that mean in this context?

[07:06:01.0000] <Ms2ger>
That ISO-2022 pops up an alert, obviously

[07:06:02.0000] <zewt>
it has escape codes that change the meaning of future sequences

[07:07:00.0000] <zewt>
(modal in the sense of having multiple modes, eg. vim is a modal editor)

[07:08:00.0000] <Ms2ger>
Isn't the latter usage just a synonym of "horrible"? :)

[07:08:01.0000] <zewt>
trooooll :P

[07:09:00.0000] <Ms2ger>
Yeah :)

[07:09:01.0000] <zewt>
apparently in iso-2022 you can have *both* 1: multiple ways to encode the same codepoint and 2: multiple codepoints represented by a particular sequence

[07:09:02.0000] <zewt>
so it's evil in both directions

[07:10:00.0000] <Ms2ger>
(I troll vim and emacs just as much, though)

[07:10:01.0000] <zewt>
i use notepad.exe as often as vim these days, so *shrug* :P

[07:11:00.0000] <zewt>
"sometimes an editor's just an editor"

[07:11:01.0000] <annevk>
TextWrangler and nano

[07:11:02.0000] <Ms2ger>
gedit/jedit/nano

[07:11:03.0000] <annevk>
but that does sound evil

[07:11:04.0000] <annevk>
ooh gedit

[07:11:05.0000] <annevk>
when I was still on Ubuntu, I used that

[07:12:00.0000] <annevk>
Notepad++ in the Windows days

[07:12:01.0000] <annevk>
they're all more or less the same to me :)

[07:12:02.0000] <zewt>
i think you can trace a clear path from utf-8's design directly to iso-2022

[07:12:03.0000] <zewt>
"here's iso-2022. here are a bunch of ways it sucks. let's not do any of those things"

[07:14:00.0000] <zewt>
data point: technically iso-2022 can remap the ASCII range; doing so would violate the abovementioned vague note

[07:18:00.0000] <annevk>
there's also problems with using those encodings

[07:18:01.0000] <annevk>
as Philip` once explained on the WHATWG list

[07:18:02.0000] <annevk>
"The string "숍訊昱穿" encoded as ISO-2022-KR is the bytes 0e 3c 73  63 72 69 70 74 3e. A UA that doesn't support ISO-2022-KR (e.g. Chrome, when I last checked) will decode it as Windows-1252 and get the string "<script>", which is bad."

[07:19:00.0000] <wilhelm>
That's beautiful.

[07:19:01.0000] <Ms2ger>
Yeah, that's the kind of thing Philip` would tell us about

[07:19:02.0000] <zewt>
hacked by chinese?

[07:19:03.0000] <zewt>
... literally

[07:19:04.0000] <divya>
hahaha

[07:19:05.0000] <Ms2ger>
Koreans?

[07:20:00.0000] <divya>
annevk: sounds like a good intro if you were gonna write about your encodings spec

[07:20:01.0000] <divya>
on your blog

[07:20:02.0000] <divya>
/me throws hints

[07:23:00.0000] <annevk>
nah, my blog is reserved for those who wrote books I enjoyed :p

[07:24:00.0000] <Ms2ger>
Murakami?

[07:24:01.0000] <annevk>
I kid, mostly, I think you are right

[07:24:02.0000] <annevk>
Ms2ger: you wouldn't say, but I'm a big fan

[07:26:00.0000] <Ms2ger>
I would say, actually :)

[07:27:00.0000] <zewt>
same thing happens with iso-2022-jp

[07:29:00.0000] <zewt>
wonder how common it is for web content (does japan *really* need three legacy encodings?)

[07:30:00.0000] <zewt>
i'd expect it to be more common for mail (don't really know, though)

[07:31:00.0000] <zewt>
(three major legacy encodings, i should say--you'd get more if you start picking apart sjis, cp932, etc)

[07:42:00.0000] <hsivonen>
why is the Web Intents work proceeding based on Google's proposal at the W3C instead of proceeding based on Mozilla's Web Activities or Microsoft's Contracts?

[07:42:01.0000] <Ms2ger>
Because Google is pushing at the W3C and we don't, I guess

[07:47:00.0000] <hsivonen>
Ms2ger: :-(

[07:48:00.0000] <Ms2ger>
Most Mozillians don't seem to have a habit to get things specified

[07:49:00.0000] <hsivonen>
<code agents="" but="" can="" have="" historically="" implement="" implemented="" indeed="" others="" title="javascript:</code>" user="">

[07:49:01.0000] <hsivonen>
awesome spec markup

[07:49:02.0000] <Ms2ger>
Hah

[07:51:00.0000] <erlehmann>
hsivonen, WTF IS THIS SHIT

[07:51:01.0000] <erlehmann>
i've never seen it before

[07:57:00.0000] <timeless>
yeah, mozillans seem to be incredibly anti standards in certain areas

[07:57:01.0000] <timeless>
"not going to bother spending time working with others"

[07:58:00.0000] <timeless>
hsivonen: where's that one?

[07:58:01.0000] <smaug____>
hsivonen: I thought Mozilla is working with Google to get Web Intents spec'ed

[07:58:02.0000] <timeless>
smaug____: not on the list

[07:58:03.0000] <timeless>
they might have done some hand waving about it

[07:58:04.0000] <smaug____>
timeless: not sure anyone else is better with standards

[07:58:05.0000] <timeless>
but they haven't spoken

[07:58:06.0000] <timeless>
smaug____: oddly microsoft is

[07:58:07.0000] <Ms2ger>
Well, Google isn't too good at standards

[07:59:00.0000] <timeless>
(and opera)

[07:59:01.0000] <hsivonen>
timeless: it's a recent change to the HTML spec

[07:59:02.0000] <Ms2ger>
But they are good at getting W3C stamps

[07:59:03.0000] <smaug____>
timeless: not in general

[07:59:04.0000] <smaug____>
timeless: they have all sorts of non-standard stuff coming

[07:59:05.0000] <timeless>
smaug____: in the last year or two

[07:59:06.0000] <hsivonen>
smaug____: Opera seem to be pretty good at standards

[07:59:07.0000] <smaug____>
Opera is pretty good indeed

[08:00:00.0000] <timeless>
smaug____: anyway, i'm not saying ms is perfect

[08:00:01.0000] <timeless>
but at least they're trying

[08:00:02.0000] <timeless>
the only thing i can point to that mozilla has done recently is requestAnimationFrame or whatever that was

[08:01:00.0000] <timeless>
i can point to a number of things where mozilla has diverged impls, impl experience, and no interest in helping

[08:01:01.0000] <Ms2ger>
(Also, browser API)

[08:08:00.0000] <timeless>
hsivonen: got a link for your <code> ? i'm lazy :)

[08:09:00.0000] <zewt>
annevk: fwiw, the only solution i can think of to that weirdness (other than everyone removing 2022 encodings) is making them not fall back--if a document is iso-2022-*, browsers that don't want to implement it should refuse to load it at all, not fall back on something else

[08:11:00.0000] <hsivonen>
timeless: post-process of http://html5.org/tools/web-apps-tracker?from=6874&to=6875

[08:12:00.0000] <zewt>
i wish google results on the html spec would put the full-page and multipage results next to each other

[08:12:01.0000] <zewt>
single-page rather

[08:12:02.0000] <zewt>
it always ends up putting the single-page result way at the top, and i have to scan through a bunch of other noise to find the multipage result to avoid destroying my browser

[08:15:00.0000] <timeless>
+     example is "<code title="javascript:</code>", but user agents can

[08:15:01.0000] <Ms2ger>
And then it goes through parser+serializer at least once

[08:15:02.0000] <timeless>
/me can't figure out if that markup is intentionally screwy or accidentally screwy

[08:16:00.0000] <annevk>
Mozilla is doing Web IDL these days

[08:16:01.0000] <annevk>
fwiw

[08:16:02.0000] <annevk>
I think that's pretty awesome

[08:17:00.0000] <Ms2ger>
And I guess we can claim tantek

[08:17:01.0000] <zewt>
is it possible for a browser that implements prescan to execute an inline script twice if the encoding has to be changed?

[08:17:02.0000] <annevk>
I do wish I would not have to extract feedback from bugzilla.mozilla.org every now and then...

[08:17:03.0000] <annevk>
zewt: yes

[08:17:04.0000] <zewt>
<script>alert("%")</script><META http-equiv="Content-Type" content="text/html; charset=ibm864">

[08:18:00.0000] <annevk>
zewt: but you have to put the encoding declaration prolly after 1024 bytes

[08:18:01.0000] <annevk>
zewt: so I guess not because of the prescan, but because of the parser

[08:19:00.0000] <zewt>
well, it's a side-effect of the prescan

[08:19:01.0000] <zewt>
was just wondering if there was any magic to prevent things with side-effects from happening until the prescan finished

[08:20:00.0000] <annevk>
content-type header :)

[08:20:01.0000] <zewt>
fwiw, firefox doesn't execute the script above twice, just once (with the charset applied)

[08:20:02.0000] <annevk>
yes that's what I said

[08:21:00.0000] <annevk>
needs to be after 1024 octets

[08:21:01.0000] <annevk>
prescan goes over 1024 octets

[08:21:02.0000] <annevk>
after that the parser starts going

[08:21:03.0000] <annevk>
and then the parser finds the declaration, and boom

[08:21:04.0000] <zewt>
eh, i thought content-type metas had to be in the prescan; that's lame

[08:21:05.0000] <timeless>
annevk: you're not alone re extracting feedback

[08:22:00.0000] <timeless>
to be fair though, bugs.webkit seems to be just as annoying

[08:22:01.0000] <timeless>
(as a place where people leave comments that don't get upstreamed to w3)

[08:22:02.0000] <annevk>
zewt: I think hsivonen wanted that but I'm not sure it happened

[08:24:00.0000] <gsnedders>
annevk: What happens if the parser changed the encoding post pre-scan?

[08:24:01.0000] <zewt>
http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#changing-the-encoding-while-parsing happens

[08:25:00.0000] <zewt>
/me takes a breath and loads the singlepage version

[08:25:01.0000] <gsnedders>
zewt: Did you hit a sarcasm end tag?

[08:25:02.0000] <gsnedders>
(in the "in body" state)

[08:25:03.0000] <timeless>
hsivonen: seriously is that code line intentionally screwy or accidentally screwy?

[08:26:00.0000] <zewt>
hmm? i'm loading the singlepage version to get working references, heh

[08:29:00.0000] <zewt>
hmm, odd

[08:30:00.0000] <zewt>
<meta charset> seems to be allowed anywhere in head, whether in prescan or not (this isn't the "odd" part)

[08:30:01.0000] <zewt>
but the http-equiv=content-type method seems to only be mentioned in prescan

[08:32:00.0000] <zewt>
(the prescan seems to be designed under the assumption that if the prescan misses something, it'll always be fixed by the reparse, but that seems to only be the case for the former, not the latter?)

[08:48:00.0000] <annevk>
hsivonen: it was pretty difficult to make that table :(

[08:49:00.0000] <annevk>
hsivonen: I submitted something to www-archive now, hopefully it is of some value

[08:49:01.0000] <annevk>
hsivonen: http://lists.w3.org/Archives/Public/www-archive/2011Dec/att-0020/encoding-labels.html

[08:49:02.0000] <annevk>
hsivonen: unfortunately it does not list spec in relation to the browsers

[08:49:03.0000] <annevk>
hsivonen: maybe at some point

[08:50:00.0000] <zewt>
annevk: by the way, the references script seems broken on dom4

[08:51:00.0000] <annevk>
oh shit, it excludes encodings supported by less than all four browsers

[08:51:01.0000] <annevk>
euh five

[08:51:02.0000] <annevk>
zewt: the script or the style sheet?

[08:52:00.0000] <zewt>
didn't look that closely, could be the css

[08:52:01.0000] <zewt>
don't know how that stuff is implemented

[08:52:02.0000] <zewt>
This interface is called HTMLCollection for historical reasons. The namedItem method returns an object for interfaces that inherit from this interface, which return other objects for historical reasons.

[08:52:03.0000] <Ms2ger>
It's been for a while, I think

[08:52:04.0000] <zewt>
^ what interfaces inherit from HTMLCollection? hard to search for that

[08:53:00.0000] <Ms2ger>
HTMLAllCollection

[08:53:01.0000] <zewt>
(search engines are notoriously bad at searching for ": HTMLCollection")

[08:53:02.0000] <Ms2ger>
And various others in HTML

[08:54:00.0000] <zewt>
huh, I searched for it in HTML and it didn't come up (and I'm not even accidentally in case-sensitive mode); thanks

[09:07:00.0000] <zewt>
uhh, what? ie9 only defines window.console after the console has been opened?

[09:09:00.0000] <zewt>
aside from being seriously annoying and pointless, it also lets sites detect that the f12 window has been opened and go "error, browser debuggers are not allowed", heh

[10:06:00.0000] <dglazkov>
good morning, Whatwg!

[10:06:01.0000] <divya>
hai dglazkov

[10:07:00.0000] <dglazkov>
for your viewing pleasure: http://vimeo.com/33692624

[10:25:00.0000] <annevk>
hsivonen: try http://lists.w3.org/Archives/Public/www-archive/2011Dec/att-0021/encoding-labels.html instead

[10:27:00.0000] <annevk>
also shows that maybe we should add certain labels

[10:27:01.0000] <annevk>
e.g. iso_8859-6

[10:27:02.0000] <annevk>
there's a WebKit bug to that effect too (to add them for all iso- stuff)

[10:27:03.0000] <hsivonen>
annevk: thanks

[10:32:00.0000] <rillian_lime>
foolip: what do you think about (a) adding the IETF Opus audio codec to WebM and/or (b) adding a new, audio-only format using Opus as a baseline for <audio>?

[10:35:00.0000] <erlehmann>
rillian_lime, you can bet your gonads that will not fly with apple.

[10:36:00.0000] <hsivonen>
annevk: encoding stuff would suck slightly less if each encoding had exactly one label

[10:37:00.0000] <rillian_lime>
erlehmann: perhaps. I'm wondering if it's worth trying again.

[10:37:01.0000] <erlehmann>
rillian_lime, they haven't implemented support for *vorbis* even though it is in cheap chinese mp3 players.

[10:37:02.0000] <zewt>
hsivonen: the labels seem like the smallest problem, though, heh

[10:37:03.0000] <zewt>
though the huge variance in that table is pretty gross

[10:38:00.0000] <rillian_lime>
Opus is suffiently better for audio books that there might be some interest in adopting it as a separate format for <audio>, and it had a more "respectable" standarization process than Vorbis did

[10:39:00.0000] <erlehmann>
>implying its all about the process

[10:39:01.0000] <erlehmann>
>implying ALAC was necessary

[10:39:02.0000] <rillian_lime>
erlehmann: are you saying we shouldn't try again?

[10:40:00.0000] <erlehmann>
rillian_lime, i am not against trying. i am just saying that if apple engineers had any change of mind or command, they'd surely have come out of the woodwork and announced something.

[10:40:01.0000] <erlehmann>
well, actually they had a change of command.

[10:40:02.0000] <erlehmann>
or didn't they?

[10:41:00.0000] <erlehmann>
rillian_lime, also, “your multimedia codec is almost certainly patented” is a meme now.

[10:41:01.0000] <rillian_lime>
now? that's been a meme for years.

[10:41:02.0000] <erlehmann>
then it's an old meme now.

[10:41:03.0000] <erlehmann>
:3

[10:41:04.0000] <zewt>
making the phrase "patent reform" actually mean "making patents stronger" was a genius move by whoever thought it up. heh

[10:43:00.0000] <rillian_lime>
anyway, I wanted to know what browser folks thought of the idea, not what they thought apple would think of the idea :/

[10:44:00.0000] <rillian_lime>
zewt: a general problem with "reform" I think

[10:44:01.0000] <rillian_lime>
let's reform HTML!

[10:44:02.0000] <zewt>
(to mean what we want it to mean!)

[10:45:00.0000] <zewt>
i'd like to reform the money in your wallet into my wallet. sound ok?

[10:45:01.0000] <rillian_lime>
:)

[10:46:00.0000] <erlehmann>
rillian_lime, i am of the impression that any browser folks caring about the web already have wav and vorbis. those who don't let out one or both. also, since the spec is more descriptive than normative in regards to that, it makes at least some sence to think about what apple engineers would do.

[10:47:00.0000] <erlehmann>
sense

[10:58:00.0000] <annevk>
hsivonen: totally

[12:18:00.0000] <Velmont>
annevk: Yup, I had very little overview, and started with something known. :-)

[12:57:00.0000] <roc>
timeless: dbaron, bz, fantasai, heycam and tantek all spend a lot of time on spec feedback and editing

[12:57:01.0000] <roc>
timeless: fullscreen is a big thing that we initiated and specced (and annevk took over, bless him)

[12:57:02.0000] <Ms2ger>
And smaug complains a lot about specs :)

[12:59:00.0000] <roc>
Opus is a big spec effort

[13:00:00.0000] <Ms2ger>
And it's all over my newsgroups

[13:01:00.0000] <roc>
jonas and bent have been super-engaged evolving IndexedDB

[13:01:01.0000] <roc>
we have done a lot of WebGL spec work

[13:02:00.0000] <dbaron>
also other stuff in https://wiki.mozilla.org/Standards

[13:02:01.0000] <roc>
ha, there's a whole lot of stuff on that list that I'd forgotten about

[13:03:00.0000] <roc>
media fragments (I think we're the only browser vendor doing anything there, maybe that's not a good thing)

[13:03:01.0000] <Ms2ger>
Indie UI?

[13:04:00.0000] <hober>
Ms2ger: yes?

[13:05:00.0000] <Ms2ger>
What's that?

[13:05:01.0000] <roc>
let's not forget all the work Henri did to provide feedback to ensure the HTML parsing spec is Web-compatible

[13:05:02.0000] <TabAtkins>
roc: I wish we had someone doing Media Fragments work. ;_;

[13:05:03.0000] <hober>
Ms2ger: let me dig up a link for you

[13:06:00.0000] <hober>
Ms2ger: http://www.w3.org/2011/11/indie-ui-charter

[13:06:01.0000] <roc>
timeless: I sense you have some gripe about some specific group or project(s), in which case, let's hear it, but a blanket statement that Mozilla people aren't interested in standards is just ridiculous

[13:06:02.0000] <Ms2ger>
hober, that's what I was looking at

[13:07:00.0000] <Ms2ger>
I think

[13:07:01.0000] <zewt>
"indie" ui? randomly-chosen word? heh

[13:07:02.0000] <Ms2ger>
Yeah

[13:07:03.0000] <Ms2ger>
Bi-weekly telcons

[13:07:04.0000] <zewt>
i guess that's better than calling it "Web User Intents" ...

[13:08:00.0000] <Ms2ger>
/me doesn't expect much useful to come out of it, then

[13:10:00.0000] <TabAtkins>
...I can only guess that it comes from INput-mode DEpendent

[13:10:01.0000] <TabAtkins>
Or, wait, duh, input method INDEpendent.

[13:10:02.0000] <zewt>
Ms2ger: well, telecons on top of list activity doesn't make a group less useful (though it definitely makes things less open)

[13:10:03.0000] <zewt>
i can't tell if there's a list attached to this, since half of the links point at "http://www.w3.org/2011/11/@@"

[13:10:04.0000] <zewt>
(not that i'm especially interested in reading it anyway)

[13:10:05.0000] <Ms2ger>
IME, people spend more time on telcons and administrivia than on work

[13:10:06.0000] <zewt>
well i mean

[13:11:00.0000] <zewt>
nothing's more frustrating on spec lists than a reply that says "we talked about this in our telecon and here's the decision"

[13:11:01.0000] <zewt>
heh

[13:11:02.0000] <zewt>
(... or on any lists)

[13:11:03.0000] <TabAtkins>
Unfortunately, that interaction mode is easier for handling some types of things.

[13:12:00.0000] <zewt>
easier than lists, sometimes; easier than IRC or other realtime comms, no (not for me, ever)

[13:12:01.0000] <TabAtkins>
Does it make things better if the call it well-minuted and you can participate via IRC as well?

[13:12:02.0000] <zewt>
(well, face-to-face can be, of course, but comparing distributed comms)

[13:13:00.0000] <erlehmann>
i only do face-to-face with protocol or email.

[13:13:01.0000] <zewt>
whenever voice meetings are happening, everyone who isn't or can't actually be on the call becomes a second-class participant at best

[13:13:02.0000] <erlehmann>
only when i agree with someone and we have both similar targets, phone or chat becomes worthwile.

[13:13:03.0000] <Ms2ger>
That's true for all sync communication, though

[13:14:00.0000] <TabAtkins>
I find that sync comm can help resolve confusion/misunderstandings faster than async.

[13:14:01.0000] <zewt>
and text communications (eg. this) is a lot easier for people like me (interested parties but not implementors) to participate

[13:42:00.0000] <jamesr_>
i've found some w3c telecons favor abusive personalities over technical goodness

[13:42:01.0000] <jamesr_>
so i kind of hate them

[13:42:02.0000] <zewt>
they always favor loud people who talk over everyone else, heh

[13:42:03.0000] <jamesr_>
exactly

[13:42:04.0000] <zewt>
https://adblockplus.org/development-builds/allowing-acceptable-ads-in-adblock-plus aaand abp loses all of its credibility overnight

[13:44:00.0000] <jamesr_>
can you pay ABP to get on the acceptable list?

[13:45:00.0000] <zewt>
dunno, seems a thoroughly tempting thing for them to do though, heh

[14:10:00.0000] <Ms2ger>
Don't you love the integer constants in webrtc?

[14:11:00.0000] <TabAtkins>
Oh god, seriously?  Man, that means I gotta yell at someone.

[14:11:01.0000] <Ms2ger>
Please do

[14:11:02.0000] <Ms2ger>
Then I don't have to

[14:19:00.0000] <TabAtkins>
I'm confused as to why the PeerConnection constants aren't all sequential.

[14:19:01.0000] <TabAtkins>
Is it meant to allow someone to compose them all into a bitfield?

[14:20:00.0000] <TabAtkins>
Also: Hm, I appear to have gained AC permissions in the W3C.

[14:21:00.0000] <TabAtkins>
Or this page is badly permissioned, and has horrible UI.

[14:21:01.0000] <TabAtkins>
(It thinks I'm T.V. Raman.)

[14:21:02.0000] <zewt>
i always have trouble finding PeerConnection-related specs; searches never find anything but lists

[14:22:00.0000] <TabAtkins>
The webrtc homepage has useful links.

[14:24:00.0000] <zewt>
what's the deal with these giganto parameter tables? what possible use are they?

[14:27:00.0000] <zewt>
TabAtkins: maybe the numbers map to protocol numbers, in a (somewhat strange) attempt to avoid having to translate?

[14:27:01.0000] <zewt>
(don't recall anything about the underlying protocol)

[14:27:02.0000] <TabAtkins>
Argh, I'm going to compromise my principles and send an HTML email so I can get decent ins/del-like formatting.

[14:27:03.0000] <TabAtkins>
zewt: I suspect that's the case.  It's lazy design, though.

[14:29:00.0000] <zewt>
http://dev.w3.org/2011/webrtc/editor/images/media-stream-1.png random image in spec is ... somewhat startling (and not terribly enlightening)

[14:30:00.0000] <TabAtkins>
Agree.  Also, somewhat fuzzy, indicating poor scaling.

[14:30:01.0000] <TabAtkins>
Which is odd, since the check marks are well-scaled.

[14:30:02.0000] <zewt>
TabAtkins: it smells like this spec was made by someone who's only recently read the filesystem API spec, which is in much the same style (both the spec style, and the use of constant ints)

[14:31:00.0000] <Ms2ger>
TabAtkins, usually it shows AC-member-only forms as if you were the AC rep, with a note saying "you can't do this"

[14:31:01.0000] <TabAtkins>
zewt: The use of int constants is very common among anyone who primarily programs in C++ or Java (that is, most browser devs).

[14:32:00.0000] <TabAtkins>
Ms2ger: Yeah, that's usual.  I *appear* to have the ability, though, to make Google leave the WebRTC group.  The checkboxes and submit button are all enabled.

[14:32:01.0000] <Ms2ger>
Interesting

[14:33:00.0000] <zewt>
give it a shot, what could possibly go wrong? :P

[14:33:01.0000] <zewt>
what's the worst that could happen (two weeks later Google withdraws from the w3c and an asteroid strikes the planet)

[14:34:00.0000] <jamesr_>
a wild pack of lawyers appear! they use beatdown on TabAtkins. it's super effective!

[14:34:01.0000] <zewt>
TabAtkins: one would hope that anyone designing a web API would have a good deal of experience with existing APIs and current design practices, though

[14:34:02.0000] <TabAtkins>
zewt: One would hope, yes.

[14:34:03.0000] <zewt>
(for whatever vain level of "hope")

[14:34:04.0000] <TabAtkins>
zewt: One would be very, very disappointed.

[14:35:00.0000] <zewt>
TabAtkins: on the other hand, the editors list on this spec reduces one's hope

[14:35:01.0000] <zewt>
(nothing personal to those names; referring to the company list, except for Mozilla)

[14:36:00.0000] <zewt>
(i assume those constants weren't in there when hixie wrote the initial draft?)

[14:36:01.0000] <zewt>
(never mind the fs-api-ization of the whole thing)

[14:37:00.0000] <zewt>
at least where it really matters (eg. method algorithms), it hasn't gone that way

[14:40:00.0000] <zewt>
(i'm meaning to compare to the "file api: directories and system" spec, not File API; i suppose i should refer to the former as "file-system" or something)

[14:41:00.0000] <zewt>
roman numeral hostnames? heh

[14:42:00.0000] <TabAtkins>
All right, complaint about constants sent.

[14:48:00.0000] <MikeSmith>
https://twitter.com/#!/jarrednicholls/status/147804488848261120

[14:48:01.0000] <MikeSmith>
"I just added support for XMLHttpRequest.responseXML to handle HTML documents http://t.co/HaRiuLoa http://t.co/wipNrLVu #WebKit"

[14:49:00.0000] <TabAtkins>
Yessssssss

[14:49:01.0000] <MikeSmith>
so already landed in Firefox and shipping in FF10

[14:49:02.0000] <MikeSmith>
and now Webkit too

[14:49:03.0000] <MikeSmith>
annevk: ↑

[14:49:04.0000] <MikeSmith>
oh

[14:49:05.0000] <TabAtkins>
With that in place, it's finally easy to do an easy upgrade to ajax-based navigation by swapping out sections.

[14:50:00.0000] <MikeSmith>
this doesn't add support for json yet, I don't think

[15:10:00.0000] <Hixie>
huh

[15:11:00.0000] <Hixie>
someone points out that the <input type=""> sections don't actually include the keyword needed to trigger them

[15:11:01.0000] <Hixie>
that's kinda silly of me

[15:11:02.0000] <Hixie>
i wonder where to put them

[15:12:00.0000] <Hixie>
in the heading? ("Text state (type=text) and Search state (type=search)") In the first paragraph? In examples?

[15:12:01.0000] <Hixie>
wouldn't be bad to add examples in general, i guess

[15:12:02.0000] <TabAtkins>
I like the headings.

[15:12:03.0000] <TabAtkins>
So you can see them in the TOC easily.

[15:12:04.0000] <Hixie>
yeah, that's probably reasonable

[15:12:05.0000] <Hixie>
curses

[15:13:00.0000] <TabAtkins>
Why curses?

[15:13:01.0000] <Hixie>
means work

[15:13:02.0000] <TabAtkins>
Come here and I'll pat you on the head.  Specs is hard.

[15:13:03.0000] <Hixie>
don't i know it

[15:14:00.0000] <Hixie>
"(type=hidden)" or "(type="hidden")"?

[15:14:01.0000] <TabAtkins>
The first.

[15:14:02.0000] <Hixie>
k

[15:14:03.0000] <Hixie>
(type=hidden) or ("type=hidden") ?

[15:15:00.0000] <TabAtkins>
Hm.  I think the first.

[15:15:01.0000] <Hixie>
k


2011-12-17
[18:07:00.0000] <zewt>
http://lists.w3.org/Archives/Public/public-texttracks/2011Dec/0073.html gah, now gmail is apparently screwing up plaintext quote formatting, badly, when you send mails in the rich text editor

[19:52:00.0000] <Yuhong>
"hsivonen wonders if document.write was considered a simple feature in the Netscape 2 design phase"

[19:53:00.0000] <Yuhong>
I think it has a lot to do with tags as commands (which older browsers like Netscape 2 used) vs actually creating a parse tree (which later browsers like for example IE4 and later used).

[21:03:00.0000] <MikeSmith>
http://trac.webkit.org/changeset/103115

[21:04:00.0000] <MikeSmith>
"Cache and reuse HTMLCollections exposed by Document." ... "This reduces memory consumption by ~800 kB (on 64-bit) when loading

[21:04:01.0000] <MikeSmith>
the full HTML5 spec."

[21:17:00.0000] <zewt>
that seems somewhat minor, for that case, heh

[21:20:00.0000] <roc>
We've been doing that for a long time, I'm surprised they weren't

[22:45:00.0000] <MikeSmith>
http://msujaws.wordpress.com/2011/12/16/more-enhancements-for-html5-video-and-audio-in-firefox/

[22:45:01.0000] <MikeSmith>
"The loop attribute has been implemented"

[22:46:00.0000] <MikeSmith>
Features planned: "Add detection of H.264 videos and custom error UI" sounds interesting

[22:49:00.0000] <JonathanNeal>
hello

[22:53:00.0000] <MikeSmith>
JonathanNeal: hola

[22:54:00.0000] <JonathanNeal>
What's happenin'?

[22:54:01.0000] <JonathanNeal>
Everybody have a good week?

[23:05:00.0000] <MikeSmith>
Saturday afternoon here for me

[23:05:01.0000] <MikeSmith>
W3C published drafts of Audio APIs this week

[23:05:02.0000] <MikeSmith>
also, news this week that IE will start doing user auto-updates next year is pretty cool

[23:06:00.0000] <JonathanNeal>
Yea, I thought it was next month, must have been too happy to notice.

[23:06:01.0000] <MikeSmith>
and the RFC for the WebSockets protocol was finally published

[23:07:00.0000] <MikeSmith>
and news that responseType=json for XHR will ship Firefox 10

[23:08:00.0000] <JonathanNeal>
woot.

[23:08:01.0000] <JonathanNeal>
responseType json allows for what? I can just google it I guess.

[23:09:00.0000] <MikeSmith>
http://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#json-response-entity-body

[23:10:00.0000] <MikeSmith>
and in "dog bites man" non-news, the MPEG group has issued one of their periodic announcements suggesting they are on the verge of releasing some royalty-free MPEG codec

[23:11:00.0000] <MikeSmith>
that was a couple of weeks ago

[23:11:01.0000] <MikeSmith>
"It seems every few months a patent pool or some one manages to spin up wishful thinking that there will soon be a “new deal” that will answer the needs of royalty free communities, only to cleverly leave the hopeful twisting in the wind. "

[23:11:02.0000] <MikeSmith>
http://www.robglidden.com/2011/12/mpeg-plus-or-patent-pool-lite-mpeg-mulls-royalty-free-proposals/

[23:12:00.0000] <JonathanNeal>
I'm sorry, I have trouble reading that description from the w3

[23:13:00.0000] <JonathanNeal>
So, would you weigh in your thoughts on mpeg? Are you hoping webm takes off?

[23:35:00.0000] <MikeSmith>
oh my

[23:36:00.0000] <JonathanNeal>
oh your

[23:36:01.0000] <MikeSmith>
Y U not let us make own web browser??

[23:37:00.0000] <JonathanNeal>
MikeSmith: I'm sorry for stopping you. Stopping redacted.

[23:37:01.0000] <MikeSmith>
heh

[23:39:00.0000] <JonathanNeal>
One of my co-workers is writing a javascript library that he hopes will make writing webapps more like writing iphone apps. His previous job was writing iPhone apps. I saw the code. It looked mighty scary.

[23:39:01.0000] <MikeSmith>
seems like there's a few people been doing that for a while now..

[23:40:00.0000] <JonathanNeal>
I can't say if it was good or bad, but there was a lot of prototyping going on, and it looked awfully complicated.

[23:40:01.0000] <MikeSmith>
but I'm sure there are better ways to do it

[23:40:02.0000] <MikeSmith>
(better than what we already have, I mean)

[23:42:00.0000] <JonathanNeal>
For sure, I've been obsessing over a better events delegator all evening.

[23:45:00.0000] <JonathanNeal>
i want an easy way to listen for an event with multiple parts, like mousedown+mousemove, so it only fires on a mousemove after a mousedown.

[23:46:00.0000] <JonathanNeal>
i want an easy way to delegate by a selector contained by the currentTarget or containing the currentTarget.

[23:49:00.0000] <JonathanNeal>
Well, I'm glad to hear the internet is doing well. From my court, the new html5shim is being tested and will be released very soon. I hope it convinces more people to use html5 which ultimately rid us of ie<9.

[03:41:00.0000] <annevk>
Why is publishing stuff like http://allthis.com/u10838 okay and why is there no clear opt out?

[03:41:01.0000] <annevk>
Nobody needs to buy my time, I'm on IRC

[04:12:00.0000] <annevk>
http://mxr.mozilla.org/mozilla/source/intl/uconv/src/charsetalias.properties#515 :)

[04:28:00.0000] <annevk>
I guess nobody makes errors in shift_jis

[04:29:00.0000] <annevk>
3C 6D 65 74 61 20 63 68 61 72 73 65 74 3D 73 68 69 66 74 5F 6A 69 73 3E E0 3C 74 65 73 74 3E gives different results all over

[04:29:01.0000] <annevk>
(they key being the E0 byte)

[04:29:02.0000] <annevk>
in Gecko you get a replacement character, Chrome displays nothing, Opera gives �test>

[04:30:00.0000] <annevk>
in Gecko you also get the <test> element in the DOM

[04:31:00.0000] <annevk>
if however the E0 is followed by an EOF, all browsers display nothing

[04:33:00.0000] <annevk>
actually, Chrome inserts an empty Text node followed by a an element node <test> (like Gecko)

[04:33:01.0000] <annevk>
so I guess they are a little closer to each other than Opera is to either

[04:37:00.0000] <annevk>
does that mean that in Opera shift_jis is not actually ASCII-compatible?

[04:40:00.0000] <annevk>
btw, for those interested in ECMAScript versioning: https://lists.webkit.org/pipermail/webkit-dev/2011-December/018924.html

[04:54:00.0000] <Philip`>
So you get to write either

[04:54:01.0000] <Philip`>
  "use strict";

[04:54:02.0000] <Philip`>
or

[04:54:03.0000] <Philip`>
  use version 6;

[04:55:00.0000] <Philip`>
Isn't that going to be a little confusing?

[04:56:00.0000] <annevk>
trying out random shift_jis stuff is fun...

[04:56:01.0000] <bga>
es3 was good

[04:56:02.0000] <annevk>
81 B0 undefined per 932, gives ・in Gecko

[04:57:00.0000] <annevk>
replacement character in Chrome/Presto

[04:58:00.0000] <Philip`>
/me wonders if there has been an attempt to enumerate every 2-byte string and see what character comes out

[04:59:00.0000] <annevk>
there will have been one soonish

[05:02:00.0000] <annevk>
it does seem like putting multi-octet encodings directly in the specification is going to be a bad idea

[05:02:01.0000] <annevk>
as for shift_jis that's a little over 16k potential code points

[05:03:00.0000] <annevk>
(~64 * 256)

[05:04:00.0000] <annevk>
heh, even simple things like 80

[05:05:00.0000] <annevk>
U+FFFD in Opera, U+0080 in Gecko, nothing in Chrome

[05:05:01.0000] <Philip`>
Do implementations just have giant byte-sequence tables, or do they do the arithmetic instead?

[05:05:02.0000] <annevk>
you need a table to map it to Unicode

[05:05:03.0000] <annevk>
see http://msdn.microsoft.com/en-us/goglobal/cc305152.aspx for a pretty nice overview

[05:06:00.0000] <annevk>
with math you can go from shift_jis to some other Japanese standard, but then you still don't have code points (but you could do that to reduce memory footprint I guess)

[05:28:00.0000] <annevk>
Ms2ger: fixing xref

[05:30:00.0000] <annevk>
fixed

[07:08:00.0000] <annevk>
oh yes

[07:09:00.0000] <annevk>
inbox < 500

[07:09:01.0000] <Ms2ger>
Wow :)

[07:12:00.0000] <Ms2ger>
Inbox < 70

[07:17:00.0000] <gsnedders>
annevk: Can you make your encoding testsuite output codepoints in base 16? seing them in base 10 is weird.

[07:18:00.0000] <annevk>
what's the easiest way to do that?

[07:18:01.0000] <annevk>
I can figure it out, but if you know

[07:19:00.0000] <Ms2ger>
Number.prototype.toString ( [ radix ] )?

[07:21:00.0000] <gsnedders>
yeah, exactly

[07:23:00.0000] <MikeSmith>
annevk: I'm inclined to just turn on the notifications to www-dom now and ask for forgiveness later

[07:23:01.0000] <MikeSmith>
if anybody actually complains

[07:24:00.0000] <Ms2ger>
So, did we make WebIDL forbid overloading methods in subclasses?

[07:25:00.0000] <annevk>
MikeSmith: go ahead

[07:26:00.0000] <annevk>
MikeSmith: we'll find out quickly enough if it's problematic

[07:26:01.0000] <MikeSmith>
yup

[07:26:02.0000] <annevk>
and www-dom is relatively low traffic

[07:26:03.0000] <MikeSmith>
sou da na

[07:29:00.0000] <annevk>
Ms2ger: gsnedders, thanks and done

[07:29:01.0000] <Ms2ger>
Np

[07:33:00.0000] <annevk>
also put the source code in https://bitbucket.org/annevk/webencodings in case anyone wants to use it

[07:34:00.0000] <annevk>
it seems Opera treats unrecognized as only bytes 00-7F are okay

[07:35:00.0000] <annevk>
not sure that's a good fallback

[07:49:00.0000] <zewt>
Ms2ger: isn't that used? (HTMLAllCollection, etc)

[07:49:01.0000] <zewt>
annevk: sorry, parse error on that last

[07:51:00.0000] <annevk>
oops

[07:52:00.0000] <annevk>
with unrecognized labels only 00-7F work, the rest gets FFFD'd

[07:52:01.0000] <annevk>
rather than falling back to say windows-1252

[07:52:02.0000] <zewt>
so unrecognized = true ASCII

[07:52:03.0000] <zewt>
would be nice if everyone did that to begin with, but since they don't ...

[07:52:04.0000] <zewt>
though

[07:53:00.0000] <zewt>
everyone else i'm sure falls back on locale-dependencies, right?

[07:53:01.0000] <annevk>
"true ascii"

[07:53:02.0000] <annevk>
"ascii" is windows-1252 as it should be :)

[07:53:03.0000] <zewt>
yeah I hate that I have to distinguish between "no, really, ASCII" and other crap :P

[07:54:00.0000] <annevk>
should just talk about 00-7F and U+0000-U+007F rather than ASCII

[07:54:01.0000] <annevk>
ASCII is ambiguous

[07:55:00.0000] <zewt>
"The results for windows-1252 (and friends) is confusing because this is a common fallback encoding." in windows, at least, change your system language to something else to distinguish

[07:55:01.0000] <zewt>
also, opera uses heuristics for unspecified encodings, right?

[07:55:02.0000] <zewt>
(according to recent discussions on webvtt)

[07:56:00.0000] <zewt>
not sure what other weird variables there are surrounding fallbacks

[07:58:00.0000] <annevk>
I think everyone uses heuristics

[07:58:01.0000] <annevk>
but webvtt should be utf-8 only

[07:58:02.0000] <annevk>
are they changing that?

[07:58:03.0000] <zewt>
er wait

[07:58:04.0000] <zewt>
those discussions were about language detection

[07:59:00.0000] <zewt>
(another big mess, with a lot of the same problems, but separate)

[07:59:01.0000] <annevk>
that sounds like the unicode layer

[07:59:02.0000] <annevk>
someone should fix that

[07:59:03.0000] <Ms2ger>
I read that as "the unicorn layer"

[07:59:04.0000] <annevk>
that's above all, not quite there yet :)

[08:01:00.0000] <zewt>
(the question was that since Firefox always, apparently, defaults to Japanese for CJK text unless @lang or a language-specific encoding says otherwise--since it does that, could Opera remove its special heuristics and do the same)

[08:02:00.0000] <zewt>
(among other things)

[08:03:00.0000] <annevk>
"for CJK text" is defined?

[08:03:01.0000] <zewt>
for text using chinese characters, where you need to pick the right font for the actual language

[08:03:02.0000] <annevk>
yeah but does that mean one such code point?

[08:03:03.0000] <annevk>
and within how many code points does it need to occur from the start?

[08:04:00.0000] <zewt>
not sure what you mean

[08:04:01.0000] <zewt>
do you know about han unification?

[08:04:02.0000] <annevk>
yes

[08:04:03.0000] <zewt>
well that's why you need to pick the font--can you rephrase the question?

[08:04:04.0000] <annevk>
the algorithm for determining CJK text is not defined

[08:04:05.0000] <zewt>
right

[08:05:00.0000] <zewt>
it's opera-specific (I don't know if any other browsers have anything like it, I'm guessing not)

[08:05:01.0000] <annevk>
you just said

[08:05:02.0000] <annevk>
Firefox defaults to Japanese for CJK text

[08:05:03.0000] <zewt>
right

[08:05:04.0000] <annevk>
presumably it somehow knows it's dealing with CJK text

[08:05:05.0000] <annevk>
based on some algorithm

[08:05:06.0000] <zewt>
for text in codepoint ranges representing chinese characters

[08:05:07.0000] <EvanR>
if you are ok with proportional fonts pango will layout and pick fonts for you when rendering

[08:05:08.0000] <zewt>
(how *exactly* it defines that I don't know offhand)

[08:06:00.0000] <annevk>
I don't think that's defined

[08:06:01.0000] <EvanR>
which is what many browsers use

[08:06:02.0000] <zewt>
(might be "if the default font doesn't have it and we go looking for a fallback")

[08:06:03.0000] <zewt>
(or rather "the current font")

[08:06:04.0000] <annevk>
zewt: but if you first have say 1024 western code points and then your CJK text starts?

[08:07:00.0000] <annevk>
oh well

[08:07:01.0000] <annevk>
got to go

[08:07:02.0000] <zewt>
heh later

[08:07:03.0000] <zewt>
and no I don't know the fine details

[08:07:04.0000] <zewt>
(or all of the coarse ones, for that matter)

[09:10:00.0000] <bga>
http://groups.google.com/group/jsmentors/browse_thread/thread/390477bfc89f9058

[10:09:00.0000] <zewt>
annevk5: do you know whether all of the aliases in this table actually really map to the same thing?

[10:11:00.0000] <zewt>
eg. x-user-defined and iso8859-1 seem to be separate items in IE9 (they may have the same table, but they show up separately in the menu)

[10:16:00.0000] <Philip`>
Maybe x-user-defined is only equivalent to iso8859-1 when the user defines it to be?

[10:16:01.0000] <zewt>
i define it to be unicorns

[10:23:00.0000] <Philip`>
(http://msdn.microsoft.com/en-us/library/aa752010(v=vs.85).aspx indicates x-user-defined is code page 50000, and http://blogs.msdn.com/b/shawnste/archive/2007/03/17/hacking-code-pages-or-how-to-totally-hose-your-machine-and-your-data.aspx indicates you can write a DLL to provide a custom implementation of code pages >50000 (which might really mean ">=50000"))

[14:23:00.0000] <WeirdAl>
annevk: spec suggestion for XHR2, the open method, section 4.7.1.  Step 11 (the timeout check) comes after the URL resolving.  I think it might be better to move that to before resolving the URL (step 5, 6).

[14:24:00.0000] <WeirdAl>
resolving the URL would be more expensive than checking for the timeout not equalling zero

[14:24:01.0000] <WeirdAl>
and we'd throw an exception anyway

[14:53:00.0000] <smaug____>
WeirdAl: does that matter?

[14:57:00.0000] <WeirdAl>
eh, I'd like to save a few operations :)

[15:01:00.0000] <zewt>
note that either failing is usually a programming error, so in practice both should always succeed--so i doubt it makes a difference

[15:02:00.0000] <zewt>
(on a quick look)

[15:04:00.0000] <smaug____>
yeah, doesn't make sense to optimize the usually non-failing cases

[15:06:00.0000] <zewt>
not in deployed apis, anyway

[15:09:00.0000] <WeirdAl>
/me shrugs and removes a snippy comment

[15:21:00.0000] <zewt>
uh, okay, heh

[15:45:00.0000] <WeirdAl>
dammit, it ate my commit message


2011-12-18
[19:33:00.0000] <Yuhong>
FYI, on DBCS character encodings, here is a good test: http://ha.ckers.org/weird/variable-width-encoding.cgi

[21:23:00.0000] <WeirdAl>
annevk: ping, spec conflict with implementations on XHR.open(), responseType != ""

[21:23:01.0000] <WeirdAl>
not just Mozilla, allegedly Chrome & Safari too

[21:23:02.0000] <WeirdAl>
https://bugzilla.mozilla.org/show_bug.cgi?id=680816#c18

[21:24:00.0000] <WeirdAl>
I'm wondering if the spec should be changed.

[06:08:00.0000] <annevk>
weirdal: please file bugs (not sure what the problem is with the spec in the second case though)

[08:38:00.0000] <annevk>
can you say "A tell of tales"?

[08:38:01.0000] <annevk>
I rather like the sound of it, but I'm not sure if it makes any sense

[08:41:00.0000] <gsnedders>
annevk: no

[08:41:01.0000] <annevk>
aah :(

[08:48:00.0000] <zewt>
maybe in poker? heh

[09:18:00.0000] <annevk>
http://www.luxetveritas.nl/blog/?p=1291 local politics o_O

[09:19:00.0000] <annevk>
whenever I look at other social systems, I'm pretty pleased with the WHATWG/W3C environment I'm in

[09:57:00.0000] <smaug____>
interesting, Finland has that much higher trade union membership% (if I trust the translation)

[10:05:00.0000] <annevk>
smaug____: will fix the async thingie now

[10:06:00.0000] <annevk>
smaug____: yeah, quite high

[10:06:01.0000] <smaug____>
great, thanks

[10:08:00.0000] <smaug____>
annevk: where should I file fullscreen spec bugs ?

[10:09:00.0000] <annevk>
dunno

[10:09:01.0000] <annevk>
email whatwg⊙wo at this point I think

[10:12:00.0000] <annevk>
smaug____: should abort() unset the synchronous flag

[10:12:01.0000] <annevk>
?

[10:15:00.0000] <zewt>
should it just be cleared by open()? (eg. "if async is false, set the synchronous flag, otherwise clear it")

[10:16:00.0000] <smaug____>
annevk: I think so

[10:16:01.0000] <annevk>
zewt: no

[10:17:00.0000] <annevk>
smaug____: okay, so just like abort() always sets the error flag, always unset the synchronous flag

[10:18:00.0000] <annevk>
zewt: in particular, now you change things during UNSENT that depend on that flag, it needs to be cleared when things are UNSENT/DONE

[10:18:01.0000] <zewt>
mmm

[10:24:00.0000] <annevk>
food \o/

[10:45:00.0000] <annevk>
heh http://news.bbcimg.co.uk/media/images/57217000/jpg/_57217771_la-grande-divergenceweb2.jpg

[12:50:00.0000] <annevk>
great, the charset related attributes of Document are not interoperable

[12:51:00.0000] <annevk>
hmm

[12:51:01.0000] <annevk>
document.defaultCharset is only supported in Chrome

[12:51:02.0000] <annevk>
oh and WebKit, but casing is different

[12:51:03.0000] <annevk>
seems to me that feature can be nuked

[12:54:00.0000] <annevk>
Gecko also does not support document.charset

[12:54:01.0000] <annevk>
characterSet

[12:54:02.0000] <annevk>
only ^^

[12:54:03.0000] <annevk>
so maybe Mozilla should encourage others to drop theirs...

[12:57:00.0000] <kennyluck>
Yeah, I noticed that too. Very annoying. Can we at least pick one and make the rest obsolete? I mean, in the sense that the obsoleted ones go into the Obsolete chapter. (which doesn't mean browsers don't need to implement them)

[12:58:00.0000] <annevk>
in DOM4 the obsolete chapter means they get killed from browsers

[12:58:01.0000] <annevk>
but it's not called obsolete

[12:58:02.0000] <Ms2ger>
It's called Historical

[12:58:03.0000] <kennyluck>
annevk, that certainly doesn't apply to HTML LS.

[12:58:04.0000] <annevk>
getting rid of document.charset would definitely be good, because it allows changing the encoding of a document

[12:59:00.0000] <annevk>
(which affects URLs and form submission I think)

[12:59:01.0000] <annevk>
return values are also not very consistent

[12:59:02.0000] <kennyluck>
yuck!

[13:00:00.0000] <annevk>
e.g. "ascii" yields "windows-1252" in some, "US-ASCII" in others, and "us-ascii" in others again

[13:00:01.0000] <annevk>
browsers are so much fun

[13:01:00.0000] <Ms2ger>
https://bugzilla.mozilla.org/show_bug.cgi?id=647621

[13:01:01.0000] <annevk>
guaranteed job security with the mess that is the platform

[13:02:00.0000] <annevk>
Hixie: why did you add .charset and .defaultCharset?

[13:04:00.0000] <annevk>
http://html5.org/tools/web-apps-tracker?from=1459&to=1460 looks like an attempt at defining WebKit's IDL

[13:05:00.0000] <annevk>
Ms2ger: remove from DOM?

[13:06:00.0000] <Ms2ger>
Oh, these are ours now?

[13:06:01.0000] <Ms2ger>
wfm

[13:08:00.0000] <annevk>
"please take care of this" "ok dropped from the platform"

[13:08:01.0000] <annevk>
I guess I should first file a bug on WebKit

[13:09:00.0000] <annevk>
angel spec writer

[13:11:00.0000] <Ms2ger>
I believe Hixie's thesis was that there are no angels

[13:13:00.0000] <annevk>
https://bugs.webkit.org/show_bug.cgi?id=74819

[13:15:00.0000] <kennyluck>
annevk, how do you know there's no site relying on document.charset? Not I am against removing it. Just curious.

[13:16:00.0000] <Ms2ger>
kennyluck, it would be broken in Firefox?

[13:16:01.0000] <annevk>
Gecko would have open bugs and Opera would have had more bugs too

[13:17:00.0000] <annevk>
we had exactly one bug where we implemented both charset and characterSet, but we actually only needed characterSet

[13:17:01.0000] <kennyluck>
Ms2ger, I would guess when people see junk, they don't file a bug because are used to turning charset already.

[13:17:02.0000] <annevk>
I filed a bug to remove .charset

[13:18:00.0000] <annevk>
kennyluck: you cannot use these attributes for re-encoding something...

[13:18:01.0000] <annevk>
re-decoding*

[13:36:00.0000] <annevk>
Ms2ger: you should ping someone regarding https://bugzilla.mozilla.org/show_bug.cgi?id=623610

[13:36:01.0000] <annevk>
Ms2ger: also, you might want to patch http://mxr.mozilla.org/mozilla/source/intl/uconv/src/charsetalias.properties#515

[13:38:00.0000] <Ms2ger>
Oh, by the way, I was looking at fixing cp1258 earlier, the unicode-style file was really helpful

[13:39:00.0000] <annevk>
cool

[13:39:01.0000] <Ms2ger>
Haven't filed yet, I'll get to it soonish, I think

[14:54:00.0000] <annevk>
fwiw, at some point someone said governments need stable standards or some such

[14:54:01.0000] <annevk>
they do, but they also adapt

[14:55:00.0000] <annevk>
e.g. Webrichtlijnen 1.0 referenced HTML 4.01, XHTML 1.0, etc. The second edition stayed away from making such specific requirements

[14:56:00.0000] <annevk>
and just phrased the requirements in a different way, but thereby allowing <canvas> etc.

[14:56:01.0000] <zewt>
that adobe guy seems to be trying to say "everything everyone is doing is wrong"

[14:56:02.0000] <annevk>
(I'm not sure if it was actually ever a problem in practice, as many sites that did not conform to the letter of Webrichtlijnen 1.0 were nevertheless considered compliant...)

[14:57:00.0000] <annevk>
(At least a sample I looked through at some point.)


2011-12-19
[18:09:00.0000] <zewt>
gar i hate when i forget to switch to the rich editor before sending mails; mails look ridiculously long when formatted to 80 columns instead of flowed properly

[23:41:00.0000] <annevk>
given consistent window.onerror implementations it seems you can actually introduce parse-error inducing syntax errors in ecmascript

[23:41:01.0000] <annevk>
just requires two <script> elements for fallback, which does not seem too bad

[23:43:00.0000] <annevk>
I wonder how abarth got convinced that CSP is a good idea now

[23:43:01.0000] <annevk>
still looks waaaaaayyyy complex

[23:43:02.0000] <annevk>
and more so over time

[00:25:00.0000] <hsivonen>
Does http://msdn.microsoft.com/en-us/library/ms890014.aspx predate Apple's <meta name=viewport>?

[00:31:00.0000] <hsivonen>
people suck at registering meta keywords

[00:32:00.0000] <annevk>
and sending feedback to you know, standards bodies

[00:35:00.0000] <hsivonen>
in fairness, some of these keywords might lack documentation but still be real

[00:36:00.0000] <hsivonen>
/me is just following the Process like any IANA Designated Expert would

[00:36:01.0000] <annevk>
for whether or not they're valid?

[00:40:00.0000] <hsivonen>
annevk: yeah

[00:42:00.0000] <annevk>
I don't think that has really been the problem with IANA, it's just that the registries lacked everything else that was out there

[00:42:01.0000] <annevk>
but I do think having IANA is overkill

[00:42:02.0000] <annevk>
maybe they do some other things, but for maintaining some lists for which you could simply put a piece of software somewhere it seems rather elaborate

[00:44:00.0000] <hsivonen>
speaking of overkills: http://tools.ietf.org/html/draft-yevstifeyev-disclosure-relation-00

[00:45:00.0000] <annevk>
hahaha

[00:46:00.0000] <annevk>
one paragraph and two list items of normative text

[00:46:01.0000] <wilhelm>
Beautiful.

[00:47:00.0000] <annevk>
I'm glad I never got sucked into doing things the IETF way, because it's quite horrible

[00:52:00.0000] <smaug____>
/me notices that WoW is being advertised heavily, even more than Chrome.

[00:52:01.0000] <hsivonen>
the person who creates a single-page Google Site for each of his/her meta keyword suggestions knows how to play the game Hixie set up

[00:56:00.0000] <annevk>
maybe there should be some level before fully registered, where fully registered means it's clearly an important and relatively widely used value

[00:56:01.0000] <annevk>
I guess if we take the approach where we put registered values into HTML after some time, that might work

[00:57:00.0000] <annevk>
oh lol, I feel sorry for Marcos

[00:57:01.0000] <annevk>
re: http://lists.w3.org/Archives/Public/public-webapps/2011OctDec/1613.html

[01:08:00.0000] <hsivonen>
annevk: someone should remind the "OMG, unversioned normative reference" folks that all specs rely on Unicode and implementations support the latest Unicode that they happen to support instead of artificially hiding the characters that have been defined after whatever spec uses Unicode was finalized

[01:11:00.0000] <Ms2ger>
Do you think they'll listen?

[01:11:01.0000] <annevk>
telling someone who's been having this idea since before '98 that he's actually wrong will not lead to much I think

[01:12:00.0000] <hsivonen>
Ms2ger: no. Hence, "someone"--not "I"

[01:12:01.0000] <annevk>
in 2007 we had http://annevankesteren.nl/2007/04/html-red-pill

[01:12:02.0000] <annevk>
now we have the Standards Red Pill

[01:13:00.0000] <annevk>
which comes down to pretty much the same re-reading that post :)

[02:04:00.0000] <remysharp>
hi there, EventSource - I'm using onerror to detect when the connection is dropped

[02:04:01.0000] <remysharp>
but that's not perfect - as it doesn't always fire when the connection is closed

[02:04:02.0000] <remysharp>
(I closed my laptop, reopened it hours later and the EventSource had readyState=2 but hadn't fired error - correctly I think)

[02:05:00.0000] <remysharp>
is there any reason why there's no close event - or is there a better way of detecting?

[02:07:00.0000] <smaug____>
remysharp: file a bug

[02:07:01.0000] <smaug____>
it is an implementation bug

[02:07:02.0000] <remysharp>
so you're saying it should fire then?

[02:08:00.0000] <remysharp>
(as in it's a browser bug?)

[02:08:01.0000] <smaug____>
ye

[02:08:02.0000] <smaug____>
yes, error event should fire

[02:08:03.0000] <remysharp>
and the error is simply to say "the connection has gone", right?

[02:08:04.0000] <remysharp>
I guess "close" would be, it's closed, and we're not reopening

[02:09:00.0000] <smaug____>
error even is used also in case there is reconnection happening

[02:09:01.0000] <smaug____>
but state is then different

[02:10:00.0000] <smaug____>
s/even/event/

[02:12:00.0000] <remysharp>
perfect, then I'm using error correct. Now the hard part: replicating the bug ;-)

[02:12:01.0000] <remysharp>
cheers for the feedback smaug____

[02:13:00.0000] <smaug____>
remysharp: I'm assuming your code doesn't explicitly call close()

[02:13:01.0000] <remysharp>
smaug____ correct

[02:14:00.0000] <remysharp>
and yeah, if it called .close() - I *wouldn't* expect the error event

[02:14:01.0000] <remysharp>
and wouldn't need an event as I triggered it myself

[02:55:00.0000] <annevk>
seems there's still some discussion going on regarding adaptive images

[02:55:01.0000] <annevk>
I replied regarding the content negotiation suggestion

[02:55:02.0000] <annevk>
http://www.brucelawson.co.uk/2011/notes-on-adaptive-images-yet-again/

[03:50:00.0000] <bga>
lol setTimeout(function () { alert(123); }, Math.pow(2, 32))

[03:50:01.0000] <bga>
<=> setTimeout(_, 0)

[04:18:00.0000] <annevk>
gsnedders: how does the versioning actually work in ECMAScript though? won't you get an error in older browsers either way?

[04:19:00.0000] <annevk>
/me doesn't get it

[04:19:01.0000] <gsnedders>
annevk: Either way you get an error in older browsers. Having modes allows us to finally change some of the ugliness that blocks a lot of JS performance optimizations

[04:20:00.0000] <beverloo>
"use strict" introduces behavioral changes, "use version 6" syntactical changes. There will by syntax errors

[04:20:01.0000] <beverloo>
But I imagine that "version 6" will also include behavioral changes

[04:20:02.0000] <beverloo>
s/by/be/

[04:21:00.0000] <annevk>
oh, so the syntax is effectively changed

[04:21:01.0000] <annevk>
sounds pretty bad

[04:21:02.0000] <annevk>
making things simpler while still allowing the old syntax seems better

[04:22:00.0000] <annevk>
e.g. allowing if count > 4 { ... }

[04:26:00.0000] <gsnedders>
annevk: The global scope is no longer in the scope change is the biggest breaking change

[04:27:00.0000] <gsnedders>
*chain

[04:29:00.0000] <annevk>
o_O

[04:29:01.0000] <annevk>
"use version 6" and learn to program again?

[04:30:00.0000] <annevk>
use <!doctype html> and delimit your tags with [ and ] now; it's better, promise

[04:30:01.0000] <annevk>
(not quite the same, true true, but this does not really sound like a good idea)

[04:31:00.0000] <gsnedders>
annevk: Also there are in general problems with adding new keywords

[04:31:01.0000] <gsnedders>
annevk: As that will easily break things

[04:33:00.0000] <annevk>
well yes, we have the same problem with adding new members to nodes

[04:33:01.0000] <gsnedders>
annevk: Not really

[04:33:02.0000] <annevk>
not really sure that justifies versioning though

[04:33:03.0000] <gsnedders>
annevk: This causes syntax errors in existing scripts, what that does depends on behaviour of the new member

[04:34:00.0000] <annevk>
it typically causes existing scripts to break

[04:34:01.0000] <annevk>
e.g. when we added .min and .max that happened

[04:35:00.0000] <gsnedders>
I mean, extensions to ES that are where there are currently syntax errors and no vendor implements anything in the same extension space are pretty damned safe.

[05:10:00.0000] <annevk>
so Mac OS X remembers state of programs so you can sort of reboot and continue (for when they offer a Safari update or something), but it completely breaks history in Terminal

[05:10:01.0000] <annevk>
which sucks

[05:11:00.0000] <annevk>
anyone from Apple here who can tell me if that is reported and if not, how I go about that?

[05:11:01.0000] <annevk>
(this is why I ignore software updates from Apple for weeks on end, I don't like rebooting)

[05:17:00.0000] <annevk>
zcorpan: do you have an algorithm for decoding UTF-8 encoded text combined with the HTML-defined error handling?

[05:32:00.0000] <hsivonen>
http://news.cnet.com/8301-30685_3-57342776-264/the-web-in-2012-five-predictions-starting-with-ie10/ wow. an article about browsers that has 5 browser icons and all of them are up to date!

[05:33:00.0000] <annevk>
Stephen Shankland is the only reporter I know that is follows the browser and standards sphere somewhat actively and closely

[05:35:00.0000] <annevk>
though I don't pay much attention to journalism related to browsers/standards

[05:36:00.0000] <hsivonen>
annevk: I'm not surprised that if one reporter gets the icons right, it's stshank

[05:36:01.0000] <hsivonen>
but getting all the icons right is still rare in journalism

[05:43:00.0000] <zcorpan>
annevk: nope

[05:47:00.0000] <zcorpan>
hsivonen: i think the opera logo is still the wrong one. there's one logo for the company name and one for the browser product

[05:51:00.0000] <hsivonen>
zcorpan: whoa. you are right. You guys are making it hard to do the right thing.

[05:51:01.0000] <hasather>
zcorpan: correct, there is the logo, and the icon: http://www.opera.com/press/resources/

[05:51:02.0000] <hsivonen>
/me hangs head in shame; was just looking for non-toilet seat

[05:54:00.0000] <Ms2ger>
That would be a nice slogan

[05:54:01.0000] <Ms2ger>
"Opera - No longer a toilet seat"

[05:55:00.0000] <hsivonen>
the right set is http://paulirish.com/lovesyou/new-browser-logos/all-browser_logos/browser_logos-256.png

[05:56:00.0000] <hsivonen>
/me wonders if the Safari icon has stayed constant or had subtle refreshes

[06:14:00.0000] <hsivonen>
gsnedders: if ES6 takes the global object out of the scope chain, what about the document object? what about Element?

[06:14:01.0000] <hsivonen>
for inline event handlers that is

[06:17:00.0000] <bga>
pythonic js

[06:33:00.0000] <annevk>
is there some kind of preference for specifying strings in standards?

[06:34:00.0000] <annevk>
I sometimes find myself using "..." and sometimes ...

[06:34:01.0000] <annevk>
e.g. the name of an encoding is a string too, but I'd like to just refer to it without code

[06:34:02.0000] <annevk>
whereas for a label it might make sense to use <code>?

[06:34:03.0000] <annevk>
or maybe not

[06:48:00.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#encodings

[06:49:00.0000] <Ms2ger>
"The encoding"

[06:49:01.0000] <Ms2ger>
/me likes

[06:54:00.0000] <gsnedders>
hsivonen: I believe the window object will be accessable from the global object, just not the global object

[07:30:00.0000] <hsivonen>
annevk: I hope you will put UTF-16 under a heading "legacy multi-octet encodings"

[08:09:00.0000] <erlehmann>
this is 404? http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2010-December/029459.htm

[08:09:01.0000] <erlehmann>
no, it is 200 ok

[08:09:02.0000] <erlehmann>
it may be lying?

[08:18:00.0000] <miketaylr>
ah, erlehmann add an l to the end :)

[08:18:01.0000] <miketaylr>
that confused me a little bit ago too

[08:18:02.0000] <erlehmann>
this is 404? http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2010-December/029459.html

[08:18:03.0000] <miketaylr>
wfm

[08:22:00.0000] <Ms2ger>
Ah, isn't the web fun

[08:22:01.0000] <Ms2ger>
Removing navigator.taintEnabled(): at least 3 broken sites

[08:41:00.0000] <smaug____>
Ms2ger: did anyone else but Gecko have taintEnabled()

[08:41:01.0000] <Ms2ger>
No idea

[09:15:00.0000] <dglazkov>
good morning, Whatwg!

[09:16:00.0000] <jwalden>
good afternoon, dglazkov

[09:16:01.0000] <jwalden>
;-)

[09:17:00.0000] <dglazkov>
timezones are irrelevant. They are just clever marketing ploys invented by clock companies.

[09:18:00.0000] <jwalden>
gotta watch out for those companies...

[09:32:00.0000] <annevk>
hsivonen: very much the plan

[09:32:01.0000] <annevk>
hsivonen: I think I will work on that now, to at least make it clear what all the allowed labels are, so people can start complaining about those

[09:32:02.0000] <annevk>
and then work out the various difficult encodings, one by one

[09:50:00.0000] <annevk>
man these people in the document.characterSet bug don't make much sense

[09:51:00.0000] <annevk>
euh, document.charset bug

[09:52:00.0000] <Ms2ger>
They don't

[10:01:00.0000] <annevk>
http://parislemon.com/post/14330528072/over-the-next-few-weeks-well-figure-it-out sounds like the disabling H264 in Chrome story

[10:12:00.0000] <annevk>
oooh

[10:12:01.0000] <annevk>
that Jean-Claude

[10:12:02.0000] <annevk>
from my very early standards stint in the CDF WG

[10:26:00.0000] <annevk>
pretty cool these links from mattur

[10:27:00.0000] <annevk>
how standards were developed in '94 http://www.w3.org/People/Connolly/events/www94/trip-report.html

[10:27:01.0000] <annevk>
with workshops given by the editor

[10:29:00.0000] <Ms2ger>
<hr>Dinner On the Boat<hr>

[10:29:01.0000] <smaug____>
CDF...

[10:30:00.0000] <smaug____>
I never quite understood CDF

[10:30:01.0000] <smaug____>
although Lasse was my colleague

[10:31:00.0000] <annevk>
if you view CDF as a group that made sure cross-language barriers were better defined in CSS/SVG/HTML, they were somewhat successful

[10:31:01.0000] <annevk>
but they did much more, which was rather questionable (and people did not like me for saying so)

[11:04:00.0000] <annevk>
how do you tell whether a UTF-16 label is supported and there's no heuristics going on?

[11:05:00.0000] <Yuhong>
annevk: BTW, here is a good test for multi-octet encodings: http://ha.ckers.org/weird/variable-width-encoding.cgi

[11:06:00.0000] <annevk>
It seems to just show you need to have certain error handling otherwise you run into issues

[11:07:00.0000] <annevk>
presumably that with a two-level octet you should not replace the first octet with U+FFFD and then match the second one again...

[11:08:00.0000] <Yuhong>
While most browsers fixed their decoding long time ago, IE only fixed it in August: http://technet.microsoft.com/en-us/security/bulletin/MS11-057

[11:09:00.0000] <annevk>
this is why we need this standard

[11:23:00.0000] <annevk>
does anyone know if big5-hkscs is a superset of big5?

[11:23:01.0000] <annevk>
looks like at least some people want them to map to the same thing: http://www.google.com/support/forum/p/Chrome/thread?tid=466c210af3fb6d08

[11:28:00.0000] <annevk>
http://en.wikipedia.org/wiki/HKSCS mess

[11:29:00.0000] <Ms2ger>
http://en.wikipedia.org/wiki/World_Wide_Web mess

[11:29:01.0000] <annevk>
new meme \o/

[11:33:00.0000] <annevk>
Ms2ger: you guys make some sweet beer :)

[11:33:01.0000] <Ms2ger>
/me isn't into beer

[11:33:02.0000] <annevk>
(or the guys running your proxy)

[11:36:00.0000] <annevk>
the Web Encodings wiki page claims Microsoft simply makes big5-hkscs  a label for big5, but Mozilla and Opera have it as a distinct encoding

[11:36:01.0000] <annevk>
and then you have those users complaining...

[11:37:00.0000] <Ms2ger>
http://mxr.mozilla.org/mozilla-central/source/intl/uconv/tools/gen-big5hkscs-2001-mozilla.pl

[11:39:00.0000] <annevk>
euh

[11:43:00.0000] <annevk>
so http://coq.no/character-tables/mime/locale-specific/en suggests it is indeed a superset

[11:43:01.0000] <annevk>
combined with the support thread above it seems that might be somewhat of an issue for Gecko / Chrome / Opera adoption in that area...

[11:52:00.0000] <annevk>
so it seems there are some differences

[11:53:00.0000] <annevk>
but IE does not seem to care and win

[11:53:01.0000] <annevk>
quote I can prolly share: "For instance, =C6BF..=C6C2 get converted to U+2F02..U+2F07 (⼂⼃⼅⼇) in the -2003 table, and to U+4E36..U+4EA0 (丶丿亅亠) in the -HKSCS table (look-alike mappings, apparently). The differences seem to range up to =C6D9 (with =C6D8 being mapped to U+00A8 (¨) in both tables) (＾ vs ˆ for =C6D9)."

[12:12:00.0000] <annevk>
I thought the single-octet stuff was sad

[12:31:00.0000] <annevk>
Most Firefox' utf-16 labels are for utf-16be, but HTML states "When a user agent is to use the self-describing UTF-16 encoding but no BOM has been found, user agents must default to little-endian UTF-16."

[12:32:00.0000] <annevk>
Either Firefox has not been updated to take HTML into account, or Web Encodings is out of date with what Firefox does... (Probably both.)

[12:32:01.0000] <gsnedders>
Well, Firefox is right per normal Unicode behaviour.

[12:33:00.0000] <annevk>
Per normal behavior utf-16 has no other labels than utf-16

[12:34:00.0000] <Ms2ger>
There is no normal behaviour on the web

[12:34:01.0000] <annevk>
You don't trust IANA? Come on!

[12:34:02.0000] <gsnedders>
Normal behaviour is there are three labels: UTF-16, UTF-16LE, and UTF-16BE. The latter two, if the first codepoint is U+FFEF, it represents a ZWNBSP and is not a BOM.

[12:34:03.0000] <annevk>
those are considered separate encodings

[12:34:04.0000] <annevk>
three separate encodings that is

[12:34:05.0000] <gsnedders>
Given UTF-16, if it starts with a BOM, then it is whatever endian that is. Otherwise, it is big endian.

[12:35:00.0000] <gsnedders>
That's what the Unicode spec says, at lesat.

[12:35:01.0000] <annevk>
yeah, HTML points out it violates that

[12:35:02.0000] <annevk>
apparently all of Windows prefers LE

[12:35:03.0000] <annevk>
hello Microsoft \o/

[12:35:04.0000] <gsnedders>
annevk: I'll bet that's because x86 is LE

[12:36:00.0000] <annevk>
the new encoding standard will attempt to correct the nonsense

[12:37:00.0000] <gsnedders>
annevk: Any idea how far UTF-16 being LE by default spreads?

[12:38:00.0000] <annevk>
I have not done any testing yet on UTF-16

[12:38:01.0000] <annevk>
just looked at a bunch of information

[12:41:00.0000] <smaug____>
"jquery 1.6 uses navigator.taintEnabled for browser detection" o_O

[12:41:01.0000] <smaug____>
I knew jQuery is strange...

[12:47:00.0000] <annevk>
I sort of expected that since encodings are in a way somewhat trivial there would not be this clusterfuck

[12:53:00.0000] <Ms2ger>
annevk, dunno if you saw the xmlVersion bug? That one is fun too :)

[13:18:00.0000] <annevk>
Ms2ger: did :)

[13:18:01.0000] <annevk>
I checked in some legacy multi-octet stuff, but there's not much there now

[13:19:00.0000] <annevk>
as evidenced by the log I mostly studied the various encodings a bit and then wrote up some labels based on IE/Gecko/HTML

[13:19:01.0000] <annevk>
I think tomorrow I'll define label -> encoding (including the trimming of leading and trailing whitespace and case-insensitive stuff)

[13:20:00.0000] <annevk>
and maybe ping whatwg and iana charsets lists

[13:40:00.0000] <lmarcetic>
mic check.

[13:49:00.0000] <lmarcetic>
Question about DOM events: How hard would it be to construct an event logger? Must one create and add handlers for each and every event? How complex would a js library have to be to be able to record and replay events?

[13:49:01.0000] <annevk>
yes, there's no *

[13:50:00.0000] <annevk>
and euh, somewhat complex I reckon

[13:50:01.0000] <lmarcetic>
how about a few basic ones, like point, click and scroll? would that be easy enough?

[13:51:00.0000] <lmarcetic>
pointing/dragging would probably be complex (alternatively, jittery)

[13:51:01.0000] <annevk>
I'd just try it out :)

[13:52:00.0000] <annevk>
prolly with capture event listeners on window or some such so you are before everyone else and then create some synthetic events

[13:53:00.0000] <annevk>
the problem you'll run into is that a synthetic event does not always have the same privileges (e.g. cannot open a new window); not sure if that's a big problem

[13:55:00.0000] <lmarcetic>
annevk, oh it's you Anne! Didn't even notice :-) I was the one who bugged you about this via e-mail. Anyway, not being able to open windows is understandable. Is there anything else?

[13:57:00.0000] <annevk>
oh, http://www.iana.org/assignments/charset-reg/CP50220 mentions http://wiki.whatwg.org/wiki/Web_Encodings

[13:58:00.0000] <annevk>
lmarcetic: I suspect stuff like :hover will not work

[13:59:00.0000] <annevk>
lmarcetic: I have not really played with hit testing and such much

[14:00:00.0000] <annevk>
and I should really do something else before I start dreaming about encodings again

[14:01:00.0000] <lmarcetic>
annevk, hover is important, that's too bad.

[14:05:00.0000] <lmarcetic>
annevk, thanks. afk.

[14:16:00.0000] <Danny_Joris>
hi all - I'm trying to figure out if this is valid html? http://jsfiddle.net/Danny_Joris/sc96c/ I used thead twice in html. If there's an alternative available I'd love to learn: http://jsfiddle.net/Danny_Joris/sc96c/

[14:16:01.0000] <Danny_Joris>
hmm pasted that twice

[14:18:00.0000] <Danny_Joris>
I'm working on a site which I have to theme this page for: http://dl.dropbox.com/u/12905785/DGI/ceacs%20subpage-author.png

[14:18:01.0000] <Danny_Joris>
in the rest of the site where you see 'authors' this is themed with the caption

[14:20:00.0000] <Danny_Joris>
I probably gave a few of you a heart attack by showing that snippet.

[14:36:00.0000] <smaug____>
Alac in JS

[14:36:01.0000] <smaug____>
http://codecs.ofmlabs.org/

[14:54:00.0000] <Danny_Joris>
ok - fear not! This is how I'm going to solve it: http://jsfiddle.net/Danny_Joris/sc96c/2/

[15:16:00.0000] <Danny_Joris>
actually this might be better: http://jsfiddle.net/Danny_Joris/sc96c/3/ Just had a facepalm moment.

[15:58:00.0000] <bencc>
in websockets, why does the client sends origin header while the server responds with Sec-WebSocket-Origin header?


2011-12-20
[17:47:00.0000] <zewt>
i hate when conversations become two-headed simultaneous "should we do this" and "how might we do this", heh

[17:52:00.0000] <crocket>
hi

[17:53:00.0000] <crocket>
Is there a website for testing web browser's conformance to HTML 4?

[18:01:00.0000] <Philip`>
crocket: HTML4 was never defined with enough precision to be testable for conformance

[18:01:01.0000] <crocket>
How can I explain that to others?

[18:02:00.0000] <Philip`>
What are you trying to convince them of?

[18:02:01.0000] <crocket>
I need to explain that a web browser is better at displaying HTML4 than others.

[18:03:00.0000] <crocket>
I have to find the web browser that renders HTML4 best.

[18:03:01.0000] <crocket>
But

[18:03:02.0000] <crocket>
HTML4 was last published in Dec 1999.

[18:04:00.0000] <crocket>
I guess all web browsers don't really differ in their capacity to render HTML4.

[18:04:01.0000] <crocket>
Philip`, How do you think?

[18:05:00.0000] <crocket>
nothing?

[18:05:01.0000] <Philip`>
A web browser that implements what HTML4 specified will be worse in any real-world situations than one that doesn't (but that implements what HTML5 specifies instead)

[18:05:02.0000] <crocket>
huh?

[18:05:03.0000] <Philip`>
so HTML4 conformance is not a desirable quality (nor a well-defined one)

[18:05:04.0000] <crocket>
How about HTML4 rendering capacity?

[18:05:05.0000] <Philip`>
HTML4 defines lots of stuff that is incompatible with how real web pages work

[18:06:00.0000] <Philip`>
so browsers don't try to implement it

[18:06:01.0000] <crocket>
What the hell

[18:06:02.0000] <crocket>
What did the browsers render actually?

[18:06:03.0000] <crocket>
If it wasn't HTML4, what was it?

[18:06:04.0000] <zewt>
magic

[18:06:05.0000] <Philip`>
It was much more like what HTML5 now specifies

[18:06:06.0000] <crocket>
ok

[18:07:00.0000] <Philip`>
(since HTML5 is largely based on reverse-engineering what web browsers did)

[18:07:01.0000] <crocket>
Things were close to HTML5 since 10 years ago

[18:07:02.0000] <crocket>
Philip`, Are you a member of whatwg?

[18:08:00.0000] <Philip`>
"member" doesn't really mean anything in the WHATWG

[18:08:01.0000] <crocket>
Philip`, Have you participated in whatwg activities?

[18:08:02.0000] <Philip`>
Anyone can join the mailing list or IRC etc and join discussions

[18:08:03.0000] <Philip`>
Yes

[18:08:04.0000] <crocket>
IRC and mailing list are everything in whatwg?

[18:09:00.0000] <erlehmann>
crocket, the WHATWG is an adhocracy, only formally governed by the surpreme leader.

[18:09:01.0000] <Philip`>
That's where almost all communication occurs

[18:09:02.0000] <crocket>
ok

[18:09:03.0000] <erlehmann>
IRC is for tasteless jokes and wonkery, mailing list for tasteless specs and wonkery.

[18:09:04.0000] <crocket>
ha

[18:10:00.0000] <erlehmann>
i have no idea what wonkery means, btw.

[18:10:01.0000] <erlehmann>
but it sounds nice.

[18:10:02.0000] <erlehmann>
let me look it up

[18:10:03.0000] <crocket>
I already looked it up

[18:11:00.0000] <erlehmann>
wonkery (uncountable)

[18:11:01.0000] <erlehmann>
    The quality or activities associated with being a wonk

[18:11:02.0000] <erlehmann>
sounds. nice.

[18:11:03.0000] <Philip`>
/me hopes our supreme leader is careful to avoid over-work while on trains

[18:11:04.0000] <erlehmann>
wonk (plural wonks)

[18:11:05.0000] <erlehmann>
    (derogatory) An overly studious person, particularly student; a nerd.

[18:11:06.0000] <erlehmann>
    (by extension) A policy wonk or other intellectual expert.

[18:11:07.0000] <erlehmann>
lol

[18:11:08.0000] <erlehmann>
that seems exactly right.

[18:12:00.0000] <erlehmann>
TabAtkins, your explanation on premultiplied color spaces was fine, btw. i had to dig it out again to show someone four-dimensional thinking ^_^

[18:12:01.0000] <crocket>
overwork?

[18:12:02.0000] <crocket>
Does the leader have a job apart from being a leader?

[18:14:00.0000] <crocket>
Does whatwg make HTML standard?

[18:16:00.0000] <crocket>
"The WHATWG has a small, invitation-only steering committee called "Members", which has the power to impeach the editor of the specifications."

[18:16:01.0000] <crocket>
Which group among whatwg and W3C made HTML5?

[18:16:02.0000] <Philip`>
crocket: The editor is employed by Google to work on this stuff

[18:18:00.0000] <Philip`>
The "Members" have never done anything (since the editor hasn't needed impeaching yet) so they're not a particularly important group

[18:19:00.0000] <Philip`>
Have you seen http://www.whatwg.org/specs/web-apps/current-work/multipage/introduction.html#history-1 ?

[18:19:01.0000] <crocket>
Philip`, Did W3C participate in making HTML5?

[18:21:00.0000] <Philip`>
Yes, a few years after the WHATWG started work on it

[18:23:00.0000] <crocket>
ok

[18:23:01.0000] <crocket>
I guess whatwg is the main contributor to HTML5.

[18:23:02.0000] <crocket>
W3C wasn't really interested in HTML5.

[18:24:00.0000] <crocket>
ok

[18:24:01.0000] <crocket>
Now they are working together.

[18:25:00.0000] <Philip`>
The main contributors to HTML5 are individuals, who either use the WHATWG processes (mailing list and IRC etc) or W3C processes (mailing list and bug tracker and issue tracker and decision process etc) or both

[18:26:00.0000] <crocket>
thanks

[18:26:01.0000] <Philip`>
(The organisations don't really do anything by themselves, they just provide methods of communication)

[18:27:00.0000] <crocket>
ok

[18:28:00.0000] <crocket>
So

[18:28:01.0000] <crocket>
people made HTML5 via whatwg and W3C chanels

[18:35:00.0000] <jamesr_>
some organizations provide money to individuals in exchange for them working on specs

[19:45:00.0000] <Yuhong>
On quirks mode: http://www.reddit.com/r/web_design/comments/njb2r/im_a_newbie_and_made_a_website_that_i_think_is/

[00:20:00.0000] <hsivonen>
hmm. Microsoft seems to be paying to advertise on the StackOverflow html5 tag

[00:44:00.0000] <bga>
http://evilbrainjono.net/pages/startup-or-pokemon.py

[01:06:00.0000] <annevk>
https://bugzilla.mozilla.org/show_bug.cgi?id=600715 oh sweet, encoding and decoding are different

[01:49:00.0000] <zcorpan>
heycam: for nullable types, i take it that null is considered to match the type in the overload resolution algorithm

[01:50:00.0000] <heycam>
zcorpan, ah yeah, I didn't mention nullable types did I

[01:51:00.0000] <heycam>
zcorpan, I would start assuming that it matches in the same way as currently and see if that works :)

[01:51:01.0000] <heycam>
/me will verify tomorrow

[01:53:00.0000] <zcorpan>
i'll reply on the list

[01:53:01.0000] <heycam>
/me heads off now

[02:05:00.0000] <zcorpan>
come to think of it, there was an example already with the null problem (options.add)

[02:05:01.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#encodings

[02:06:00.0000] <annevk>
"The table below lists all encodings and their labels user agents must support. User agents must not support any other encodings or labels."

[02:06:01.0000] <annevk>
also defines "get an encoding" now

[02:07:00.0000] <zcorpan>
"The Encoding"?

[02:08:00.0000] <annevk>
more like: http://krijnhoetmer.nl/irc-logs/whatwg/20111219#l-507

[02:09:00.0000] <annevk>
couldn't really think of a better title

[02:13:00.0000] <annevk>
so basically all ISO-2022 encodings are as dangerous as UTF-7?!

[02:18:00.0000] <annevk>
zcorpan: why does null matter?

[02:19:00.0000] <zcorpan>
annevk: the overload resolution ends up with several candidates if null matches

[02:20:00.0000] <zcorpan>
and we clearly need null to match, or nullable types can't be used with overload

[02:21:00.0000] <annevk>
I think picking one of them at random should always yield the same outcome

[02:47:00.0000] <annevk>
anyone time to review an email for me?

[02:52:00.0000] <zcorpan>
is it long?

[02:53:00.0000] <annevk>
5 short paragraphs

[02:53:01.0000] <zcorpan>
then sure

[02:53:02.0000] <annevk>
just want to know if I should include more info or if it's okay

[02:53:03.0000] <annevk>
you got it

[02:55:00.0000] <zcorpan>
looks good

[02:56:00.0000] <annevk>
thanks

[03:24:00.0000] <annevk>
argh

[03:24:01.0000] <annevk>
try to contribute to MDN

[03:24:02.0000] <Ms2ger>
MikeSmith, can has a webapps testsuite component in bugzilla?

[03:25:00.0000] <annevk>
recover password, try to edit profile to change it, starts redirecting me to some /nl/ URL

[03:26:00.0000] <Ms2ger>
We all hate it :)

[03:27:00.0000] <annevk>
how does it even know I want a /nl/ profile?

[03:27:01.0000] <annevk>
I only contributed to /en/

[03:27:02.0000] <Ms2ger>
And somebody remind me later that I fix the WebSocket testsuite for Mozilla's unprefixing?

[03:27:03.0000] <annevk>
bah

[03:28:00.0000] <annevk>
still no idea on how to change the password

[03:28:01.0000] <annevk>
:/

[03:44:00.0000] <hsivonen>
hmm. looks like the ICU team at IBM discovered HTML5. calendar systems ahead.

[03:45:00.0000] <annevk>
what do you mean?

[03:47:00.0000] <hsivonen>
annevk: it seems that they don't believe in the Gregorian calendar being the only one relevant to the use cases for calendar <input>s

[03:48:00.0000] <annevk>
UI or submission?

[03:48:01.0000] <hsivonen>
we'll see

[03:48:02.0000] <annevk>
is there some discussion somewhere?

[03:49:00.0000] <hsivonen>
annevk: https://www.w3.org/Bugs/Public/show_bug.cgi?id=15278

[03:50:00.0000] <hsivonen>
comes with a Word file that suggests adding new input types

[03:53:00.0000] <annevk>
and the word "business needs" as use case

[03:53:01.0000] <annevk>
s*

[03:53:02.0000] <hsivonen>
annevk: that's a very specific use case

[03:55:00.0000] <hsivonen>
How did the Web Socket API manage to get to CR already at the W3C?

[03:58:00.0000] <annevk>
just like that

[03:59:00.0000] <jgraham>
Is there a testsuite?

[03:59:01.0000] <jgraham>
I know one isn't needed for CR…

[04:01:00.0000] <annevk>
I think some people submitted tests

[04:02:00.0000] <hsivonen>
if a test suite isn't needed for CR, we should take more things to CR in order to get them unprefixed

[04:03:00.0000] <jgraham>
Per the Process a testsuite is only neede for PR I think

[04:03:01.0000] <jgraham>
Since you have to demonstrate interoperability

[04:03:02.0000] <jgraham>
Of course the Process is a lie

[04:04:00.0000] <annevk>
it's a cake!

[04:05:00.0000] <annevk>
hsivonen: lots of DOM/XHR stuff goes in without prefix

[04:05:01.0000] <annevk>
also HTML stuff

[04:05:02.0000] <annevk>
it's just CSS that has the dated policy

[04:05:03.0000] <annevk>
and frankly harmful to non-WebKit browsers

[04:06:00.0000] <hsivonen>
hmm. TAG help sought for fixing the broken CA system

[04:10:00.0000] <annevk>
hsivonen: brucel wonders if validator.nu supports GET requests for Text field input

[04:13:00.0000] <hsivonen>
annevk: It doesn't

[04:13:01.0000] <hsivonen>
annevk: it support GET requests with the input document as a data: URL

[04:18:00.0000] <zcorpan>
hmm. my w3c-bug-links.js userjs broke.

[04:26:00.0000] <hsivonen>
sigh. the TAG minutes refer to Crockford on HTML and Security

[04:27:00.0000] <annevk>
run for the TAG next year?

[04:27:01.0000] <annevk>
I have contemplated it just to give it a chance (if I manage to get elected that is)

[04:29:00.0000] <wilhelm>
What's the worst thing that can happen? Go for it. (c:

[04:29:01.0000] <jgraham>
It is not clear that having a TAG with more of an on-the-ground experience of the web as it is understood by browser makers/users would be a bad thing

[04:30:00.0000] <jgraham>
wilhelm: I imagine the worst thing that can happen is that timbl turns into a zombie and eats your brains. Second worst is probably years of frustrating and ineffectual meetings

[04:30:01.0000] <annevk>
I am mostly worried about second worst

[04:31:00.0000] <jgraham>
Right, that was ordered by absolute badness not by expected badness (i.e. absolute badness of event x risk of event happening)

[04:57:00.0000] <MikeSmith>
/me looks around for Ms2ger

[04:57:01.0000] <MikeSmith>
Test suite component added for Webapps WG https://www.w3.org/Bugs/Public/describecomponents.cgi?product=WebAppsWG

[04:58:00.0000] <hsivonen>
http://lists.w3.org/Archives/Public/wai-xtech/2011Dec/0008.html

[05:00:00.0000] <Ms2ger>
MikeSmith, thanks

[05:13:00.0000] <MikeSmith>
annevk: you can get MDN help on #devmo on irc.freenode.net

[05:13:01.0000] <Ms2ger>
On irc.mozilla.org

[05:33:00.0000] <annevk>
http://dump.testsuite.org/encoding/label-test.html

[06:15:00.0000] <hsivonen>
aargh. UMP still showing up in a thread about advancing CORS

[06:17:00.0000] <MikeSmith>
yeah

[06:46:00.0000] <annevk>
so error handling does indeed differ in decoding shift_jis

[06:47:00.0000] <annevk>
e.g. for bytes in the series lead byte 84, second byte 00-FF, WebKit/Gecko will treat each byte individually until the second byte hits 40, whereas Opera always treat two octets identical when there's a lead byte

[06:49:00.0000] <annevk>
I mean Opera treats them as one, and as such 84 33 for instance gets turned into U+FFFD rather than U+FFFD U+0033

[06:49:01.0000] <annevk>
I wonder what IE does

[06:56:00.0000] <hsivonen>
it's so sad every time that someone says that fingerprinting isn't a problem because the user can modify he UA string

[06:56:01.0000] <annevk>
reminds of "UI isn't a problem, you can customize it!"

[06:57:00.0000] <zewt>
it's not like it'll ever be possible to mask which browser you're using if scripting is enabled. heh

[06:57:01.0000] <hsivonen>
annevk: except in the fingerprinting case, saying that you can modify it is missing the point even more

[06:57:02.0000] <annevk>
but I guess you mean that changing the UA string will make it worse

[06:57:03.0000] <hsivonen>
annevk: yes

[06:58:00.0000] <jgraham>
Much worse I presume

[06:58:01.0000] <Ms2ger>
hsivonen, you can just submit the reftests, the tools will save us later

[06:58:02.0000] <jgraham>
The number of people running something that looks like foo browser with a bar browser UA string is tiny

[06:59:00.0000] <jgraham>
So you can fingerprint people almost uniquely just from that

[06:59:01.0000] <hsivonen>
jgraham: righht

[06:59:02.0000] <jgraham>
Ms2ger, hsivonen: what tests?

[07:00:00.0000] <hsivonen>
Ms2ger: do I just put the files and their references to the submission directory and leave them there until the tools save us

[07:00:01.0000] <Ms2ger>
jgraham, document.write, p-html-testsuite

[07:00:02.0000] <Ms2ger>
hsivonen, yeah

[07:00:03.0000] <hsivonen>
jgraham: http://lists.w3.org/Archives/Public/public-html-testsuite/2011Dec/0008.html

[07:01:00.0000] <jgraham>
Oh, I have email :)

[07:01:01.0000] <hsivonen>
jgraham: I'm mainly hoping that Kris forwards that to their HTML parser person, because I have no faith in Microsoft's official bug report channel

[07:02:00.0000] <hsivonen>
jgraham: I figured you'd see it as a side effect so I don't need to file a bug on Opera

[07:02:01.0000] <jgraham>
hsivonen: Some style points: could you rename bug{bmo-id}.js to something else? Can you make the expected text the word PASS or similar?

[07:03:00.0000] <jgraham>
I haven't looked too closely to see if the second part is practical)

[07:03:01.0000] <hsivonen>
jgraham: I need a 6-letter synonym for pass that does not have duplicate letters

[07:04:00.0000] <zewt>
some kind of crossword? heh

[07:04:01.0000] <zewt>
SUPERB

[07:04:02.0000] <jgraham>
hsivonen: At the very least put in the test file "you should see the string "CcBbAa" below"

[07:04:03.0000] <hsivonen>
zewt: thanks

[07:04:04.0000] <hsivonen>
jgraham: ok

[07:05:00.0000] <jgraham>
/me wonders how "SUPERB" is a synonym of PASS

[07:05:01.0000] <jgraham>
hsivonen: Thanks

[07:06:00.0000] <zewt>
passing is superb!

[07:06:01.0000] <zewt>
failing not so much

[07:06:02.0000] <zcorpan>
ravine

[07:07:00.0000] <jgraham>
zcorpan: Isn't the ravine waht you avoid by taking the pass? So ravine is more like fail :p

[07:07:01.0000] <zewt>
これは正解だ

[07:08:00.0000] <zcorpan>
plight

[07:08:01.0000] <zcorpan>
jgraham: i'm just checking my synonym dictionary :)

[07:11:00.0000] <jgraham>
zcorpan: It sounds more like an atonyms dictionary :)

[07:12:00.0000] <zcorpan>
cruise depart linger travel answer muster convey demise depart vanish ordain ratify

[07:12:01.0000] <Ms2ger>
I guess depart works

[07:13:00.0000] <zcorpan>
oh i got depart twice

[07:13:01.0000] <zewt>
doesn't sound like "pass" to me

[07:13:02.0000] <jgraham>
I think I have just learnt that there are no six letter synonyms for the correct sense of pass that don't repeat letters

[07:13:03.0000] <jgraham>
English needs more words

[07:14:00.0000] <zcorpan>
zewt: it was the most common synonym that matched the constraints for all meanings of 'pass' in my dictionary!

[07:14:01.0000] <jgraham>
zewt: It does match pass as in "passed out of town"

[07:14:02.0000] <zewt>
i've never heard "pass" used that way

[07:14:03.0000] <zewt>
the only meaning I can think of for both is "died"

[07:14:04.0000] <jgraham>
or "passed away"

[07:15:00.0000] <zewt>
which I suppose would be an entertaining way of reading test reports

[07:15:01.0000] <zewt>
congratulations, all of your tests died

[07:15:02.0000] <zcorpan>
now i should go to the gym before i pass

[07:15:03.0000] <zcorpan>
sorry, i should pass to the gym before i pass

[07:16:00.0000] <Philip`>
"alrite"

[07:16:01.0000] <zewt>
ew

[07:16:02.0000] <Philip`>
"worked"

[07:17:00.0000] <Philip`>
"IsOkay"

[07:17:01.0000] <zcorpan>
is mixing uppercase and lowercase ok? pasSed

[07:18:00.0000] <jgraham>
PaSsEd is quite nice

[07:18:01.0000] <hsivonen>
"worked" works

[07:18:02.0000] <Philip`>
pas5ed

[07:18:03.0000] <hsivonen>
thanks

[07:19:00.0000] <zcorpan>
do you need one for "fail" too? "fucked"?

[07:19:01.0000] <zcorpan>
/me really goes now

[07:20:00.0000] <annevk>
I wonder if this is a serious problem

[07:20:01.0000] <Philip`>
"failed" would probably cause less offence, and therefore be inferior

[07:20:02.0000] <annevk>
in shift_jis

[07:20:03.0000] <annevk>
84 3C 73 63 72 69 70 74 20 84 3E

[07:21:00.0000] <aleph>
Hi, why in HTML5 http-equiv value is case sensitive? IN HTTP headers it case-insensitive! Example 'content-type'

[07:21:01.0000] <annevk>
gives <script> in Gecko/Chrome, but "�script �" in Opera

[07:21:02.0000] <annevk>
abarth: ^^

[07:24:00.0000] <annevk>
aleph: it's case-insensitive

[07:24:01.0000] <aleph>
http://bit.ly/shbUFq

[07:24:02.0000] <annevk>
aleph: see http://www.whatwg.org/C#enumerated-attribute

[07:24:03.0000] <aleph>
well, in HTML5 spec, it says for example, "content-type", and doesn't say it is case insensitive, so "Content-Type" becomes invalid

[07:24:04.0000] <annevk>
aleph: I gave you a pointer to the HTML spec, where it says it's an enumerated attribute, which are case-insensitive

[07:24:05.0000] <annevk>
aleph: the document you pointed to is non-normative and might require some clarification

[07:25:00.0000] <zewt>
annevk: i'd expect the only safe way to output user-entered text in a particular encoding is to ensure that it's a valid sequence in that encoding

[07:26:00.0000] <zewt>
(eg. convert to UTF-8 then back to the source encoding, or something like that)

[07:26:01.0000] <aleph>
annevk: Thanks you! :)

[07:26:02.0000] <aleph>
everything is clear now

[07:27:00.0000] <annevk>
zewt: sure, but that wasn't really what I was asking for

[07:27:01.0000] <zewt>
i wonder if anyone really is trying to do escaping without that encoding normalization/sanitization first

[07:28:00.0000] <annevk>
well an attacker

[07:28:01.0000] <Philip`>
annevk: I expect anything that's attempting to output safely-escaped text will either work on bytes, so 0x84 0x3C will become 0x84 "&lt;" which is hopefully safe, or else will decode to Unicode characters then escape then re-encode (giving validly-encoded output)

[07:29:00.0000] <annevk>
https://bugzilla.mozilla.org/show_bug.cgi?id=593338 explains the middle dot in Gecko, seems hsivonen ran into it too

[07:30:00.0000] <zewt>
Philip`: the spec allows multibyte encodings where < appears in the middle of a multibyte sequence, though, so escaping bytewise would break text

[07:30:01.0000] <Philip`>
Seems very unlikely anyone would e.g. decode the user input, check the decoded version has no forbidden characters, then output the original user input (so it may have forbidden characters when decoded differently)

[07:30:02.0000] <zewt>
(i wish that could be prohibited, but iso-2022 ...)

[07:31:00.0000] <zewt>
(iso-2022 is more evil than anything utf-16 could ever contemplate)

[07:31:01.0000] <Philip`>
zewt: That's just an encoding bug, which is not a security problem - if people want to fix that bug they'll decode to Unicode before escaping and it'll be fine

[07:32:00.0000] <annevk>
Philip`: you could have a cp932 pipeline that goes through the incoming bytes, skips bytes after lead byte and checks everything else, and outputs straight away

[07:32:01.0000] <zewt>
Philip`: i mean, doing it bytewise is just an incorrect way to do it (if you want to support generic encodings); you have to use the convert-to-unicode method

[07:33:00.0000] <hsivonen>
http://w3c-test.org/html/tests/submission/Mozilla/nested-document-write-1.html

[07:33:01.0000] <hsivonen>
http://w3c-test.org/html/tests/submission/Mozilla/nested-document-write-2.html

[07:35:00.0000] <Ms2ger>
Thanks

[07:36:00.0000] <jgraham>
hsivonen: Thanks

[07:36:01.0000] <zewt>
are there any multibyte encodings that alias the ASCII range (especially < or %) other than iso-2022?

[07:36:02.0000] <zewt>
i'm not familiar with chinese and korean encodings

[07:37:00.0000] <annevk>
there was utf-7 which got killed

[07:37:01.0000] <annevk>
for this very reason

[07:37:02.0000] <zewt>
well plus "nobody anywhere uses it" ... which unfortunately isn't the case with iso-2022 :(

[07:38:00.0000] <zewt>
pretty sure i've seen iso-2022-jp in the wild...

[07:38:01.0000] <annevk>
damnit I need IE if I want to test cp932 properly

[07:39:00.0000] <zewt>
i wonder if most iso-2022 pages only change the upper mapping and leave the low ASCII-overlap one alone; if "iso-2022 for the web" could be profiled to require that, it would at least put a dent in the evilness (and the security issues)

[07:39:01.0000] <zewt>
(eg. ignore requests to change the "GL" mapping)

[07:40:00.0000] <Philip`>
zewt: JOHAB, I think

[07:40:01.0000] <zewt>
wow. never even seen that sequence of letters before

[07:40:02.0000] <jgraham>
hsivonen: I wasn't expecting you to not submit a ref at all

[07:40:03.0000] <Philip`>
(plus obviously EBCDICs but they're not multi-byte)

[07:40:04.0000] <annevk>
zewt: see http://coq.no/character-tables/mime/iso-2022/en for some info

[07:41:00.0000] <jgraham>
/me actually has some similar tests somewhere

[07:41:01.0000] <Philip`>
(I think the list near the end of http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#charset is reasonably comprehensive)

[07:44:00.0000] <annevk>
Gecko supports x-johab according to Web Encodings...

[07:45:00.0000] <zewt>
at least 2022 doesn't allow setting GR to ASCII, apparently

[07:55:00.0000] <Philip`>
It's unfortunate that with all of these ASCII-conflicting encodings, they're mainly a security problem when the server supports the encoding and the browser doesn't

[07:55:01.0000] <Philip`>
and it's much easier to update browsers than servers

[07:55:02.0000] <Philip`>
so the result is more encoding proliferation

[07:56:00.0000] <Philip`>
(and even if nobody actually uses the encodings in practice, browsers can't remove them without introducing XSS vulnerabilities on other people's sites)

[07:57:00.0000] <annevk>
can you actually do something sensible with the page though if you cannot read it?

[07:57:01.0000] <Philip`>
/me doesn't understand the question

[07:58:00.0000] <annevk>
maybe I don't understand the attack scenario

[07:59:00.0000] <annevk>
actually, nm

[07:59:01.0000] <annevk>
I do now :)

[07:59:02.0000] <Philip`>
/me is thinking of the scenario in http://zaynar.co.uk/docs/charset-encoding-xss.html

[08:03:00.0000] <annevk>
you got a home page now? :)

[08:03:01.0000] <annevk>
/me only knew about http://philip.html5.org/

[08:03:02.0000] <Philip`>
(Chrome added support for iso-2022-kr after Yahoo notified them that it triggered the vulnerability in Yahoo search)

[08:04:00.0000] <Philip`>
It's not really a home page; it's just another page in a random location with a random collection of stuff on it :-p

[08:04:01.0000] <divya>
Philip`: is this tweetableeee

[08:05:00.0000] <annevk>
Philip`: nice article btw

[08:05:01.0000] <Philip`>
divya: If that word means what I think it means, then I guess so

[08:06:00.0000] <divya>
yes it does!

[08:06:01.0000] <annevk>
Philip`: and too bad about Chrome, what's next, EBCDIC?

[08:06:02.0000] <divya>
thnx

[08:06:03.0000] <Philip`>
(though it is a couple of years old now and the Ultraseek example doesn't work because Ultraseek died)

[08:07:00.0000] <divya>
:))

[08:07:01.0000] <divya>
Philip`: are you on twitter?

[08:08:00.0000] <beverloo>
@foolip

[08:08:01.0000] <annevk>
no that's a different philip

[08:09:00.0000] <divya>
for shame beverloo

[08:09:01.0000] <beverloo>
ah, then I've been mixing them up for a while now :-)

[08:09:02.0000] <beverloo>
sorry

[08:09:03.0000] <annevk>
this is Philip lowercase Taylor

[08:09:04.0000] <annevk>
the other is Jägenstedt

[08:09:05.0000] <Philip`>
Hmm, I remember finding the same bug in Google Groups later, but Chrome supported iso-2022-kr by that point so it could only trigger XSS in Konqueror

[08:09:06.0000] <Philip`>
/me had forgotten about that

[08:09:07.0000] <annevk>
there's also Philip TAYLOR, but I haven't seen him in a while

[08:10:00.0000] <Philip`>
divya: I'm not

[08:10:01.0000] <jgraham>
Pretty sure Philip` isn't on twitter. Unless he is a pro footballer in disguise

[08:10:02.0000] <divya>
hahahaha

[08:22:00.0000] <zewt>
Philip`: they could have (once upon a time) made it so scripts don't execute if the encoding isn't known; too late now...

[08:22:01.0000] <zewt>
or just blacklist scripts for known problem encodings like 2022

[08:23:00.0000] <zewt>
(if the <script> security bug was really the only thing that made them implement it)

[08:27:00.0000] <Philip`>
zewt: That would confuse people who write "content-type: text/html;charset=iso-8559-1" (sic) and find that everything looks fine but their scripts stop working, which may not be ideal

[08:27:01.0000] <zewt>
Philip`: googlable confusion would have been an improvement over this mess

[08:28:00.0000] <zewt>
maybe hard to google, i guess; still better

[08:28:01.0000] <zewt>
(and I guess "googlable" may be an anachronism for when this problem really started)

[08:28:02.0000] <zewt>
Philip`: but that's also fixable

[08:28:03.0000] <Philip`>
Blacklisting just 2022/etc could work, I suppose - if Chrome got away with not supporting iso-2022-kr for years then presumably it's not needed for compatibility, and they could decide to decode it bogusly and disable scripts (or pretend it's text/plain or whatever), instead of using a proper 2022 decoder

[08:28:04.0000] <zewt>
it wouldn't have disabled scripts for all unrecognized encodings; just for an known blacklist

[08:29:00.0000] <zewt>
(sorry, off writing an email and losing my train of thought here; damn you, day job)

[08:31:00.0000] <annevk>
you cannot really say much about iso-2022-kr because that market used to be predominantly IE

[08:31:01.0000] <annevk>
and still is probably

[08:31:02.0000] <annevk>
so other browsers get likely way less feedback

[08:32:00.0000] <Philip`>
zewt: If we can go back in time, I suppose we should just require HTML to be UTF-8 and not accept anything else

[08:32:01.0000] <zewt>
i'm still curious whether Firefox defaulting to Japanese for CJK is really okay, or if it's just a lack of C/K feedback

[08:32:02.0000] <zewt>
that makes it look okay

[08:32:03.0000] <zewt>
Philip`: so many things we could do if we could do that :)

[08:33:00.0000] <dglazkov>
good morning, Whatwg!

[08:38:00.0000] <kennyluck>
zewt, there are Mozilla communities in all three C, J and K so I don't think lack of feedback is an issue.

[08:38:01.0000] <Philip`>
zewt: Hmm, yeah, if we could go back in time I suppose we should prioritise things like killing Hitler over improving the HTML character encoding situation

[08:38:02.0000] <kennyluck>
FWIW, zh-tw ships UTF-8 as the default language regardless of what the spec says and what IE does…

[08:38:03.0000] <zewt>
encoding

[08:38:04.0000] <kennyluck>
which was quite shocking to me when I heard this.

[08:39:00.0000] <zewt>
kennyluck: i hope you're right; it just seems hard to believe that nobody in China would complain about fonts defaulting to Japanese

[08:39:01.0000] <kennyluck>
zewt, yeah *encoding.

[08:39:02.0000] <zewt>
(I'm not objecting--I'd be very happy if all browsers would do that)

[08:40:00.0000] <zewt>
just pessimisting :)

[08:40:01.0000] <kennyluck>
zewt, Firefox has marginal market share in China, so.

[08:43:00.0000] <zewt>
kennyluck: seems like you're pointing in two directions, so I'm confused

[08:43:01.0000] <zewt>
either defaulting to Japanese is okay, it's not okay (but nobody's getting feedback complaining about it), or ... something else that I havn't thought of

[08:44:00.0000] <kennyluck>
zewt, you are right.

[08:44:01.0000] <zewt>
which *should* be largely a question of existing content, though politics could enter into it as well

[08:45:00.0000] <kennyluck>
It's OK to me. (it's just not distinguishable to me). I can't speak for people who are picky though I know whom to ask this question.

[08:46:00.0000] <zewt>
my sense (and it's just a vague sense; I'm neither C nor J) is that Chinese people are less sensitive to the font issue than Japanese; so Japanese fonts are a less objectionable default (even when it's wrong for existing content that lacks @lang)

[08:48:00.0000] <kennyluck>
zewt, let me ask again. You are referring to this difference right? http://en.wikipedia.org/wiki/Han_unification#Examples_of_language_dependent_characters

[08:48:01.0000] <kennyluck>
zewt, that's possible.

[08:49:00.0000] <zewt>
kennyluck: well, that's the underlying problem, but what I"m really asking about is whether Firefox's particular behavior is okay and could be (maybe, hopefully, with some pushing and convincing) done by other browsers

[08:49:01.0000] <zewt>
which is: no language heuristics (as Opera does), no locale sensitivity (as IE does); if text is UTF-8 and has no @lang, CJK just uses Japanese fonts; no magic

[08:50:00.0000] <zewt>
i had just automatically assumed that sort of thing would never be accepted, until I found out that Firefox apparently does just that

[08:52:00.0000] <kennyluck>
zewt, I guess I can ask people. Although that's really less a problem to me. Do you have test cases for this?

[08:53:00.0000] <zewt>
http://zewt.org/~glenn/encoding%20utf-8.html

[08:53:01.0000] <kennyluck>
or perhaps I should just hack the table in the wiki to include one for @lang=en

[08:53:02.0000] <zewt>
kennyluck: note that it's actually a little more complicated than that

[08:53:03.0000] <zewt>
since you can have CJK characters inside lang=en

[08:53:04.0000] <zewt>
in which case you again have to pick a default somehow

[08:54:00.0000] <zewt>
hold on I'll add a lang=en to that

[08:54:01.0000] <zewt>
just for completeness

[08:54:02.0000] <kennyluck>
Does @lang="" gives you the default or it's ignored?

[08:54:03.0000] <kennyluck>
/me is checking the spec

[08:54:04.0000] <zewt>
i havn't tested what an explicitly blank @lang does (I forget if that's even allowed)

[08:56:00.0000] <zewt>
added en-US (and zh-CN, while I was there)

[08:57:00.0000] <annevk>
basing in-page UI on the user's locale is an antipattern Lachy

[08:57:01.0000] <annevk>
I wonder if someone has written an article on that yet

[08:58:00.0000] <zewt>
annevk: sure, but that doesn't make IE stop being IE :(

[08:58:01.0000] <zewt>
heuristics are also bad (but less bad, since at least in *theory* they could be made interoperable)

[08:58:02.0000] <annevk>
wait what?

[08:59:00.0000] <annevk>
was that in reply to in-page UI?

[08:59:01.0000] <annevk>
or the stuff about Korea?

[08:59:02.0000] <zewt>
i mean, IE's default languages and encodings depends on the user's locale

[08:59:03.0000] <zewt>
depend

[08:59:04.0000] <annevk>
oh, I was talking about stuff like <input type=date>

[09:00:00.0000] <annevk>
or e.g. data:text/html,<input type=submit>

[09:00:01.0000] <zewt>
in-page UI seems okay *if* it has no detectable effect on scripts

[09:01:00.0000] <zewt>
(or submissions to the server, etc., of course)

[09:35:00.0000] <annevk>
inbox < 400 \o/

[09:37:00.0000] <jgraham>
Putting productivity gurus to shame there

[09:37:01.0000] <annevk>
MikeSmith: not sure if you're around, but can we merge XHR 1.0 and XHR 2.0 in Bugzilla? (just XHR will do)

[09:38:00.0000] <annevk>
smaug____: has Gecko disabled cross-origin synchronous requests already for XMLHttpRequest?

[09:39:00.0000] <annevk>
jgraham: it's going fairly well I think, I haven't addressed this many problems in quite a while

[09:39:01.0000] <annevk>
and I'm generating a new class of problems as I go of course (encodings aaaah)

[09:40:00.0000] <kennyluck>
zewt, did you ever test Firefox on Windows about this CJK glyph issue? I got some… madness

[09:40:01.0000] <zewt>
i'm in windows

[09:40:02.0000] <zewt>
can you narrow "madness"? :P

[09:40:03.0000] <zewt>
(the entire topic is madness)

[09:40:04.0000] <smaug____>
annevk: looking...

[09:40:05.0000] <kennyluck>
So let me say this. I have a zh-TW Windows, specifically Windows 7.

[09:41:00.0000] <smaug____>
annevk: er, hmm, I don't think cors has been disabled yet

[09:41:01.0000] <zewt>
i'm in win7, set to JP; also tested in a ZH codepage (forget whether it was TW or CN, TW I think)

[09:42:00.0000] <kennyluck>
For zh-TW FF nightly, the default @lang gives the glyph for zh-TW and zh-CN (they are the same), so does @lang=en. The @lang=ja one is different.

[09:42:01.0000] <annevk>
ooh you're on windows?

[09:42:02.0000] <smaug____>
annevk: actually I didn't remember that cors should be disabled

[09:42:03.0000] <zewt>
zh-TW and zh-CN should not be the same (they're very visually discernable)

[09:42:04.0000] <smaug____>
that is a bit risky

[09:42:05.0000] <smaug____>
comparing to other changes

[09:42:06.0000] <smaug____>
cors is old stuff

[09:43:00.0000] <zewt>
testing in FF8 (don't know if this has changed since nightly)

[09:43:01.0000] <kennyluck>
For ja FF nightly (on a zh-TW Windows, remember), the default @gives the glyph for zh-TW and the glyph for zh-CN is different from the one for zh-TW. And @lang=en gives the @lang-ja glyph, which is another glyph.

[09:43:02.0000] <zewt>
i'm going to have to draw a chart to figure out all the things you just said :)

[09:44:00.0000] <zewt>
(first impression: i agree with "madness")

[09:44:01.0000] <zewt>
http://zewt.org/~glenn/encoding%20expected.png is what I see

[09:44:02.0000] <annevk>
smaug____: yeah, sicking wanted that

[09:44:03.0000] <kennyluck>
But in any case, OS-dependent seems weird.

[09:44:04.0000] <zewt>
and I think the jp/tw/cn glyph choices are correct

[09:44:05.0000] <zewt>
in that png

[09:45:00.0000] <annevk>
smaug____: and you said it was risky then too http://www.w3.org/Bugs/Public/show_bug.cgi?id=14773

[09:45:01.0000] <zewt>
... though my impression of "correct" may have come from incorrect browsers, so I should recheck

[09:45:02.0000] <zewt>
err, hold on--what does "ja FF nightly" mean?

[09:46:00.0000] <kennyluck>
zewt, firefox-11.0a1-ja.win32.install.exe is what I installed on a zh-TW Windows7.

[09:47:00.0000] <zewt>
why would there be different language installers? that's insane.

[09:47:01.0000] <zewt>
and having that affect rendering: even more insane

[09:47:02.0000] <kennyluck>
zewt, so when you say locale-dependent. You mean OS-locale?

[09:48:00.0000] <zewt>
in the case of IE, yes

[09:48:01.0000] <kennyluck>
hmm…. OK.

[09:48:02.0000] <zewt>
i had no idea Firefox had dependencies on which language installer you used

[09:48:03.0000] <zewt>
if true, i lose much hope for humanity's future

[09:50:00.0000] <zewt>
(all testing I've done has been with the default FF8 installer, "Firefox Setup 8.0.1.exe" (or maybe 8.0.0 at the time)

[09:50:01.0000] <kennyluck>
zewt, I didn't set OS-locale as you did, so. But the normal zh-TW on a zh-TW machine is respecting the locale…

[09:50:02.0000] <jgraham>
Does anyone know someone that works on jQuery?

[09:51:00.0000] <jgraham>
Their documentation seems to be broken

[09:51:01.0000] <kennyluck>
for defalult @lang

[09:51:02.0000] <jgraham>
Everything is uncategorised

[09:51:03.0000] <kennyluck>
and not giving @lang=ja glyph.

[09:51:04.0000] <zewt>
let me figure out which VM I was using

[09:54:00.0000] <zewt>
kennyluck: fwiw, also http://krijnhoetmer.nl/irc-logs/whatwg/20111207#l-575

[09:58:00.0000] <zewt>
kennyluck: oddly, in FF8 in XP in zh-TW, I don't see the TW glyph at all (zh-TW shows the JP glyph) ... maybe XP's fonts didn't have that variant

[09:59:00.0000] <zewt>
loading clunky win7 vm so I can change codepages...

[10:03:00.0000] <kennyluck>
/me is now sending pictures to www-archive

[10:05:00.0000] <zewt>
i changed the locale, it goes "you have to restart", i click restart

[10:06:00.0000] <zewt>
it reboots. i log in. "now you have to restart"

[10:06:01.0000] <zewt>
rage.

[10:13:00.0000] <kennyluck>
zewt, I think hsivonen's statement is perhaps referring to the result on Mac OSX, which I can reproduce.

[10:13:01.0000] <zewt>
kennyluck: i get the same results in "Chiense (Traditional, Taiwan)" (CP950) as Japanese (CP932) in FF8.0.1 using Firefox Setup 8.0.1.exe

[10:13:02.0000] <zewt>
his statement holds in my testing, at least

[10:17:00.0000] <zewt>
is Firefox really doing the same horrible thing as IE (except using the installer as the locale selection, instead of the system codepage)? :|

[10:22:00.0000] <zewt>
if that's the case I'm probably just going to give up on this, since there's no sane precedent to move towards at all

[10:34:00.0000] <gsnedders>
Man, Peacekeeper is such a ridiculous, useless benchmark

[10:35:00.0000] <gsnedders>
(it tests everything in a loop: a lot of the tests are effectively no-ops after the first iteration)

[10:49:00.0000] <kennyluck>
zewt, ok, got some pictures on the Web finally → http://lists.w3.org/Archives/Public/www-archive/2011Dec/0024

[11:04:00.0000] <zewt>
what is www-archive, exactly? the description on lists.w3.org is useless

[11:06:00.0000] <othermaciej>
zewt: it's for when you have an off-list message that you want to be archived and visible for the record, or to send random stuff simply to insert it into mailing list archives, or to complain about people supposedly privately but actually publicly

[11:07:00.0000] <zewt>
can I post on it without subscribing? because it sounds like a useless list to subscribe to, but I'm replying to a message CC'd there

[11:07:01.0000] <zewt>
(the "subscriber-post-only" vs. "spam" dilemma is endlessly annoying)

[11:07:02.0000] <kennyluck>
sane people won't subscribe to that list.

[11:08:00.0000] <zewt>
i don't want to, but lots of lists will bounce messages to non-subscribers (or annoy some moderator somewhere)

[11:08:01.0000] <zewt>
so ... just checking

[11:08:02.0000] <kennyluck>
so yeah, you can post on it without subscribing.

[11:09:00.0000] <kennyluck>
the first-time-manual check for W3C seems to work quite well. I don't know why though.

[11:37:00.0000] <MikeSmith>
Philip`: if you have time to look into https://www.w3.org/Bugs/Public/show_bug.cgi?id=12539 would appreciate it

[11:38:00.0000] <MikeSmith>
otherwise I will hack something into the script that generates the W3C version

[11:40:00.0000] <annevk>
hey MikeSmith

[11:40:01.0000] <MikeSmith>
hey

[11:40:02.0000] <annevk>
did you see my question about merging XHR 1.0 and 2.0 components?

[11:40:03.0000] <annevk>
can we rename components at all?

[11:41:00.0000] <MikeSmith>
yeah, we can rename them

[11:41:01.0000] <annevk>
MikeSmith: I could move all XHR 1.0 bugs to XHR 2.0

[11:41:02.0000] <annevk>
and then we can rename XHR 2.0 and nuke XHR 1.0

[11:41:03.0000] <MikeSmith>
yeah, could do that

[11:41:04.0000] <MikeSmith>
that's what I've done on some other cases

[11:42:00.0000] <annevk>
working on it

[11:43:00.0000] <annevk>
okay

[11:43:01.0000] <annevk>
MikeSmith: XHR 1.0 is empty and can be removed, XHR 2.0 can be renamed to XHR

[11:46:00.0000] <MikeSmith>
annevk: OK, done

[11:46:01.0000] <annevk>
thanks!

[11:46:02.0000] <annevk>
we can maybe do some more cleanup

[11:47:00.0000] <annevk>
/me checks how much work it would be to obsolete the DOM Range component

[11:48:00.0000] <annevk>
ok that looks like it might be worth it

[11:48:01.0000] <annevk>
MikeSmith: DOM Range can be removed too

[11:49:00.0000] <annevk>
and DOM Core could be named DOM I guess

[11:49:01.0000] <smaug____>
will fullscreen spec be done in webapps?

[11:50:00.0000] <smaug____>
if so, would be nice to get a component for it

[11:50:01.0000] <MikeSmith>
annevk: ok, done and done

[11:50:02.0000] <jamesr>
how do people typically check for concepts across the whatwg html spec (for example i want to see who, if anyone, defines pre-click activation behaviors). do you load up the single-page version and ctrl-f find, scrape a local copy, pull the source?

[11:51:00.0000] <annevk>
smaug____: dunno

[11:51:01.0000] <zewt>
i end up loading the full-page version (always after some hesitation, of course)

[11:51:02.0000] <zewt>
browser crush

[11:52:00.0000] <jamesr>
it's behaving pretty reasonably for me so far in chrome 16

[11:52:01.0000] <annevk>
thanks again MikeSmith

[11:52:02.0000] <MikeSmith>
cheers

[11:52:03.0000] <zewt>
it still takes a few seconds to settle down ... everyone dreams of working xrefs in multipage, of course

[11:53:00.0000] <smaug____>
jamesr: usually I load the fullpage version (which takes time in all the browsers, but after loading behaves ok) and then ctrlf-f

[11:53:01.0000] <zewt>
chrome's doing a lot better than ff8, to be sure

[11:54:00.0000] <zewt>
at least it doesn't trigger the "slow, ain't it?" overlay

[11:54:01.0000] <annevk>
jamesr: full page, and you can click on the definitions then

[11:54:02.0000] <jamesr>
annevk: can click the definition, but you still have to ctrl-f to find references (like which elements define pre-click activation behaviors), right?

[11:54:03.0000] <annevk>
jamesr: e.g. if you click on "enumerated attributes" where it is defined it lists all the places that reference it

[11:55:00.0000] <jamesr>
ooh

[11:55:01.0000] <smaug____>
zewt: chrome does trigger the "slow" warning

[11:55:02.0000] <jamesr>
wait where can i see references?

[11:55:03.0000] <zewt>
smaug____: doesn't for me ... depends on your processor, of course

[11:55:04.0000] <annevk>
jamesr: click on the bold term

[11:55:05.0000] <smaug____>
zewt: and actually during slow one can't even really scroll the page on chrome, and resizing the window takes lots of time

[11:56:00.0000] <smaug____>
s/slow/load/

[11:56:01.0000] <jamesr>
oh, the bold black non-underlined things are links?

[11:56:02.0000] <jamesr>
nice

[11:56:03.0000] <annevk>
they're definitions with special behavior

[11:56:04.0000] <zewt>
resizing (horizontally) takes about 1-2s for me

[11:56:05.0000] <smaug____>
which is a lot

[11:57:00.0000] <zewt>
jamesr: bold black and bold orange, at least

[11:57:01.0000] <zewt>
eg. "pre" in the section header in http://www.whatwg.org/specs/web-apps/current-work/#the-pre-element

[11:57:02.0000] <jamesr>
very interesting

[11:58:00.0000] <annevk>
http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html has it too

[11:59:00.0000] <annevk>
e.g. you can click the encoding headings to see from where they are referenced

[11:59:01.0000] <zewt>
annevk: btw, something still broken in dom4

[12:00:00.0000] <zewt>
not sure if you repro'd that

[12:00:01.0000] <zewt>
(with xrefs, I mean, not just "something")

[12:00:02.0000] <zewt>
everyone's favorite bug report. "something is broken"

[12:00:03.0000] <annevk>
they work for me

[12:01:00.0000] <zewt>
doesn't work for me in FF8 or Chrome

[12:01:01.0000] <annevk>
works in Chrome too

[12:01:02.0000] <zewt>
https://zewt.org/~glenn/temp.png

[12:01:03.0000] <annevk>
also Gecko

[12:02:00.0000] <annevk>
so your problem is the CSS?

[12:02:01.0000] <zewt>
missing css?

[12:02:02.0000] <annevk>
well yes

[12:02:03.0000] <annevk>
but that doesn't seem so important

[12:02:04.0000] <annevk>
feel free to figure out a patch if you care

[12:02:05.0000] <zewt>
huh? it's dumping text in the middle of a line, instead of doing what the other specs do

[12:03:00.0000] <annevk>
it still works

[12:04:00.0000] <zewt>
is this stuff reinvented for each spec? heh

[12:06:00.0000] <annevk>
zewt: it just doesn't use the WHATWG style sheet

[12:06:01.0000] <annevk>
zewt: and since I haven't really found it a problem, I haven't tried figuring out the details

[12:07:00.0000] <annevk>
MikeSmith: https://www.w3.org/Bugs/Public/show_bug.cgi?id=10694 should be moved to the browser testing group but I cannot find that :)

[12:07:01.0000] <MikeSmith>
annevk: OK, will fix that

[12:07:02.0000] <annevk>
MikeSmith: and https://www.w3.org/Bugs/Public/show_bug.cgi?id=14569 needs a URL component somewhere

[12:07:03.0000] <annevk>
but that can wait

[12:08:00.0000] <MikeSmith>
k

[12:12:00.0000] <jamesr>
somewhat dumb spec question: is the list here http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#interactive-content-0 supposed to be an example or exhaustive?

[12:12:01.0000] <jamesr>
i'm pretty sure that's what you run through when clicking on a <div> with an onclick handler, but if that list is supposed to be exhaustive i'm not sure if that div counts as 'interactive content'

[12:12:02.0000] <annevk>
exhaustive

[12:13:00.0000] <jamesr>
so what blesses the div with activation behavior?

[12:13:01.0000] <jamesr>
registering the onclick handler in DOM?

[12:14:00.0000] <annevk>
nothing I think

[12:14:01.0000] <annevk>
oh sorry

[12:14:02.0000] <jamesr>
ok, so if it doesn't have activation behavior then according to that part of the text click events shouldn't fire on it

[12:15:00.0000] <jamesr>
or does the click event propagation still happen, just not via this algorithm?

[12:15:01.0000] <annevk>
it does have activation behavior, but which elements have activation behavior the spec does not define

[12:15:02.0000] <jamesr>
ok, so someone somewhere else (presumably dom events) is supposed to say that the element has activation behavior

[12:15:03.0000] <jamesr>
when such a handler is registered

[12:15:04.0000] <jamesr>
right?

[12:16:00.0000] <annevk>
dunno really what the exact plan for that is

[12:17:00.0000] <annevk>
but yeah ideally some spec would define that

[12:17:01.0000] <annevk>
because currently it's a big guessing game when implementing a UA for mobile phone and you lack a mouse...

[12:17:02.0000] <annevk>
or if you want to make a site keyboard accessible

[12:18:00.0000] <annevk>
Opera's spatial navigation is a pretty good attempt at that I think and I tried documenting the heuristics once, but it was complicated

[12:20:00.0000] <smaug____>
jamesr: btw, I think activation behavior is largely non-reviewed in the spec, since it isn't implemented in any browser

[12:21:00.0000] <smaug____>
(unless it has been implemented in some browser during last month or so)

[12:53:00.0000] <annevk>
re Chrome and ISO-2022-KR, it seems they supported windows-949 already and just use that?

[13:01:00.0000] <annevk>
http://codereview.chromium.org/6010003/diff/6001/icu46/source/data/mappings/noop-cns-11643.ucm is interesting

[13:02:00.0000] <annevk>
http://codereview.chromium.org/6010003/diff/6001/icu46/source/data/mappings/noop-iso-ir-165.ucm

[13:02:01.0000] <annevk>
there's a couple of those

[13:02:02.0000] <annevk>
I guess they are for the issue Philip` mentioned earlier

[13:06:00.0000] <annevk>
MikeSmith: would having a "WHATWG" product go too far? so we can have Encoding / URL / Fullscreen as components there for now?

[13:06:01.0000] <annevk>
MikeSmith: or maybe WGLESS if we want something neutral

[13:08:00.0000] <kennyluck>
or COMMUNITY

[13:09:00.0000] <zewt>
*COUGH*WG

[13:09:01.0000] <annevk>
Community works, or "Platform" :)

[14:16:00.0000] <jamesr>
TabAtkins: you've lied, svg is at least slightly retarded

[14:16:01.0000] <hober>
annevk: re: https://www.w3.org/Bugs/Public/show_bug.cgi?id=15213 per the layering argument you make there, would you say that https://bugs.webkit.org/show_bug.cgi?id=73237 should be WONTFIXed?

[14:16:02.0000] <TabAtkins_>
I didn't say it wasn't completely retarded.  Just that doing basic diagrams with it shouldn't be troublesome cross-browser.

[14:17:00.0000] <shepazu>
SVG is not retarded, it's just… special.

[14:17:01.0000] <jamesr>
ok, so i have a simple diagram with some <rect>s

[14:17:02.0000] <heycam>
TabAtkins_, needs more layout!

[14:18:00.0000] <jamesr>
i'm using colors (fill) to represent different types of things

[14:20:00.0000] <annevk>
hober: yes, that's exactly the same problem

[14:20:01.0000] <annevk>
hober: the point of ARIA was a low-level accessibility API

[14:20:02.0000] <annevk>
hober: not one which has semantics tied to it

[14:20:03.0000] <annevk>
is*

[14:22:00.0000] <jamesr>
for the curious, tab solved my problem offline. answer = use CSS for indirection, don't use SVG's indirection mechanisms

[14:23:00.0000] <shepazu>
jamesr: what was the question? too many answers, not enough questions...

[14:24:00.0000] <zewt>
svg jeopardy

[14:24:01.0000] <TabAtkins_>
james didn't understand the dependency graph that SVG uses.

[14:24:02.0000] <jamesr>
ah, didn't type it out. question was i want a group of <rects> that are style the same way (solid color), but i want an easy way to toggle them all to a different type of display (pattern)

[14:25:00.0000] <jamesr>
so i can have a color and color-blind-friendly diagram with the same SVG DOM

[14:25:01.0000] <heycam>
jamesr, CSS sounds like the right answer there!

[14:25:02.0000] <shepazu>
yup

[14:25:03.0000] <roc>
I'm not sure why you would try anything other than CSS for that

[14:25:04.0000] <TabAtkins_>
^_^

[14:26:00.0000] <jamesr>
well, i didn't know you could reference SVG patterns, etc, from CSS

[14:26:01.0000] <roc>
ah

[14:28:00.0000] <hober>
annevk: *nod*

[14:30:00.0000] <TabAtkins_>
heycam, annevk: in the webrtc list, I complained about the use of numeric constants, and asked them to change to strings.  They've pushed back, and are asking for the arguments behind the change in webidl, and any official resolution.

[14:30:01.0000] <TabAtkins_>
I'm not sure what to search for to find them myself.

[14:30:02.0000] <hober>
annevk: thanks

[14:30:03.0000] <zewt>
TabAtkins: always nice to have to repeat every. single. decision., every single time

[14:31:00.0000] <TabAtkins_>
zewt: Indeed.

[14:31:01.0000] <zewt>
seems like a corollary of NIH

[14:32:00.0000] <heycam>
TabAtkins_, numeric constants don't buy you anything, they're longer to type (assuming you use the constants and not just "0"!), they require properties to exist (where strings do not)

[14:33:00.0000] <heycam>
TabAtkins_, they are just as self descriptive

[14:33:01.0000] <zewt>
they needlessly create two ways to do everything (by naming the constant, or by hardcoding the property)

[14:33:02.0000] <zewt>
(value)

[14:33:03.0000] <zewt>
eg. creating a "bad" way to do things in addition to a "good" way

[14:33:04.0000] <TabAtkins_>
Why is requiring properties to exist a bad thing?  Just more memory to maintain?

[14:34:00.0000] <annevk>
the bad thing is that people will use numbers instead

[14:34:01.0000] <heycam>
TabAtkins_, yeah, it's a very slight negative

[14:34:02.0000] <annevk>
and constants are more verbose in actual usage

[14:34:03.0000] <TabAtkins_>
heycam: Can you find the email where you resolved on it, too?

[14:35:00.0000] <heycam>
TabAtkins_, there was no official resolution, since it's more of a style/design issue

[14:35:01.0000] <zewt>
annevk: yeah, creating a "bad" way that's less typing than the "good"--which is an incentive for inexperienced programmers

[14:35:02.0000] <zewt>
(to choose the bad way)

[14:35:03.0000] <TabAtkins_>
heycam: Ok.

[14:35:04.0000] <heycam>
TabAtkins_, there's also: http://scriptlib-cg.github.com/api-design-cookbook/#don-t-use-numerical-constants

[14:36:00.0000] <zewt>
named symbols that don't have a visible integer value wouldn't be as evil, but we don't have those

[14:36:01.0000] <TabAtkins_>
zewt: We do, but they're called "strings".

[14:36:02.0000] <zewt>
those aren't symbols

[14:37:00.0000] <TabAtkins_>
Close enough. ^_^

[14:37:01.0000] <annevk>
number (very bad); constants (verbose); strings (perfect)

[14:37:02.0000] <zewt>
referring to eg. "feature = object()" in Python

[14:37:03.0000] <annevk>
it's not very hard

[14:37:04.0000] <TabAtkins_>
And they're likely the same as symbols underneath - atomic strings or something.

[14:37:05.0000] <annevk>
yeah you can intern them

[14:37:06.0000] <zewt>
and i'd expect that they'd be interned anyway, since they're constants in the code

[14:37:07.0000] <annevk>
and once heycam adds string enum you can even have them natively in IDL

[14:38:00.0000] <zewt>
(lua does that, I think Python does too)

[14:38:01.0000] <zewt>
(well, lua interns all strings, so I guess that's not interesting)

[14:38:02.0000] <TabAtkins_>
Yeah, I don't know how modern JS engines intern string constants in code.

[14:40:00.0000] <zewt>
i don't know how interning works in JS anyway, since it's transparent in JS (as far as I know?), where you can tell the difference if you want to in Python (is)

[14:40:01.0000] <TabAtkins_>
Yeah.

[14:41:00.0000] <zewt>
(eg. it's more useful to know the low-level details in Python than JS)

[14:41:01.0000] <jamesr>
in JS strings are value types, not object types

[14:41:02.0000] <jamesr>
so you can't tell

[14:42:00.0000] <sythe>
Hey

[14:42:01.0000] <sythe>
<audio loop autoplay> <source src="up.wav"> </audio>

[14:42:02.0000] <sythe>
I'm using that to play an audio file

[14:42:03.0000] <sythe>
Why doesn't it loop?

[14:47:00.0000] <TabAtkins_>
It should.  Example page?

[14:59:00.0000] <sythe>
TabAtkins, http://openzest.com/s/game/game3.html

[15:21:00.0000] <TabAtkins_>
sythe: Works just fine for me, as far as I can tell.

[15:21:01.0000] <sythe>
TabAtkins, Ah, yes

[15:21:02.0000] <sythe>
It doesn't, TabAtkins

[15:21:03.0000] <sythe>
I cheated, and used a 10 minute sound file

[15:21:04.0000] <TabAtkins_>
I know.

[15:21:05.0000] <TabAtkins_>
When I opened one of the files myself and added loop, it looped correctly.

[15:21:06.0000] <sythe>
Just try it in a real-time html editor

[15:21:07.0000] <sythe>
Really?

[15:21:08.0000] <sythe>
It doesn't work at all

[15:22:00.0000] <TabAtkins_>
Yes.  Chrome tries to open .ogg in <video> rather than <audio>, but still.

[15:22:01.0000] <sythe>
In Firefox and/or Chrome/Safari

[15:22:02.0000] <smaug____>
TabAtkins_: hey, when will Chrome finally drop h264 ?

[15:23:00.0000] <TabAtkins_>
sythe: I just set up a proper <audio> pointing to the mp3, and it also worked fine in Chrome.

[15:23:01.0000] <TabAtkins_>
smaug____: No comment.  We're talking with roc about details.

[15:24:00.0000] <sythe>
TabAtkins, With autoplay?

[15:24:01.0000] <smaug____>
ah, ok, understood

[15:25:00.0000] <TabAtkins_>
sythe: Yes.

[15:25:01.0000] <TabAtkins_>
<audio controls autoplay loop src="whatever-your-mp3-file-was"></audio>

[15:26:00.0000] <sythe>
Well

[15:26:01.0000] <sythe>
It doesn't work in Safari, does it?

[15:26:02.0000] <TabAtkins_>
http://software.hixie.ch/utilities/js/live-dom-viewer/saved/1286

[15:27:00.0000] <TabAtkins_>
No idea.  I don't have Safari on hand.

[15:27:01.0000] <sythe>
TabAtkins, Is the "preload" attribute messing it up

[15:27:02.0000] <sythe>
?

[15:27:03.0000] <sythe>
I've tried it with Chrome, Safari and FF

[15:27:04.0000] <sythe>
None of them loop it

[15:27:05.0000] <sythe>
(On Linux, BTW)

[15:28:00.0000] <roc>
we only added "loop" support in FF11

[15:28:01.0000] <smaug____>
and we don't support mp3

[15:29:00.0000] <roc>
that too

[15:29:01.0000] <sythe>
roc, Really?

[15:29:02.0000] <TabAtkins_>
sythe: preload doesn't affect anything on my computer.  I'm running Chrome 16 on Linux.

[15:30:00.0000] <roc>
yes

[15:30:01.0000] <sythe>
TabAtkins, Does it loop?  In Chrome 16 on Linux?

[15:30:02.0000] <TabAtkins_>
sythe: Yes.

[15:30:03.0000] <sythe>
Lemme double-check

[15:31:00.0000] <sythe>
It doesn't even play for me, actually

[15:31:01.0000] <sythe>
In Chromium

[15:31:02.0000] <TabAtkins_>
sythe: then you're doing something exceedingly wrong, I guess.  ^_^

[15:31:03.0000] <sythe>
TabAtkins, I had other testers

[15:31:04.0000] <sythe>
The only person who had it looping was on OSX

[15:31:05.0000] <sythe>
And he said that it made a beeping noise between loops

[15:32:00.0000] <TabAtkins_>
All I know is that duplicating the element in live dom viewer and skipping to the end makes it loop.  And it played in the original page (though I don't think I was on it long enough to hear if it looped).

[15:32:01.0000] <TabAtkins_>
There was a small skip between loops, but no beep for me to hear.

[15:32:02.0000] <TabAtkins_>
(That skip is possibly a bug - it should be seamless if the sounds are.)

[15:35:00.0000] <sythe>
Hmm

[15:35:01.0000] <sythe>
So...will it loop in Firefox?

[15:36:00.0000] <sythe>
"we only added "loop" support in FF11...and we don't support mp3"

[15:36:01.0000] <sythe>
That's a bit of a fail

[15:37:00.0000] <sythe>
If true, it basically makes it unable for me to loop audio, or perhaps even use HTML5 audio, at all, ATM

[15:39:00.0000] <sythe>
Right?

[15:39:01.0000] <TabAtkins_>
Nah, you can use script to catch when the audio ends, and start it again.

[15:39:02.0000] <TabAtkins_>
Not supporting mp3 is actually rather reasonable, given the licensing issues.

[15:40:00.0000] <sythe>
TabAtkins, Link...to this fabled script?

[15:40:01.0000] <TabAtkins_>
Restarting it with script isn't as good as the "loop" attribute (you're guaranteed a small skip), but it'll work.

[15:40:02.0000] <sythe>
None of the ones I tried seemed to work

[15:41:00.0000] <TabAtkins_>
sythe: A trivial one would be to create a setInterval with the same delay as the length of the audio that resets its time to 0.

[15:43:00.0000] <jamesr>
is there an event fired when the playing ends?

[15:43:01.0000] <TabAtkins_>
I think so, but I can't recall its name and can't find it in the spec right now.


2011-12-21
[16:09:00.0000] <jamesr>
TabAtkins_: does CSSOM return used values, or actual values?

[16:11:00.0000] <jamesr>
mdc claims getComputedStyle() always returns used values, but i'm not sure if i trust it

[16:15:00.0000] <kennyluck>
jamesr, resolved value maybe? http://dev.w3.org/csswg/cssom/#resolved-value

[16:15:01.0000] <jamesr>
woah

[16:16:00.0000] <jamesr>
so resolved = computed, except sometimes used

[16:16:01.0000] <jamesr>
does anything return actual values or is that supposed to be hidden away?

[16:25:00.0000] <TabAtkins_>
jamesr: It returns computed or used, depending on the property.

[16:25:01.0000] <TabAtkins_>
actual values are hidden away.

[16:25:02.0000] <jamesr>
cool

[16:26:00.0000] <TabAtkins_>
The reason for the "computed or used" is that "computed value" used to mean something different in CSS1 and 2, before 2.1.

[16:55:00.0000] <MikeSmith>
annevk5: about bugzilla for the Fullscreen and Encoding specs, I created a "Web Platform (other)" product

[16:55:01.0000] <MikeSmith>
and added those as components

[16:55:02.0000] <MikeSmith>
about the URL spec, we already have a "URL spec" component under the HTML WG product

[17:03:00.0000] <smaug____>
"The event must not be retargeted during the default phase of event dispatch." ?

[17:04:00.0000] <smaug____>
dglazkov: what is that?

[17:04:01.0000] <smaug____>
"default phase"

[17:23:00.0000] <roc>
TabAtkins: no browsers have manged to implement skip-free looping yet

[17:24:00.0000] <roc>
we were waiting to implement "loop" until we could implement it skip-free, then noticed that all other browsers had done the trivial skippy implementation, so why bother waiting

[17:24:01.0000] <roc>
scripted looping is as simple as <audio onended="event.target.play()">

[17:38:00.0000] <zewt>
kennyluck: what's your intlfont.language.group ff pref? curious if that's what's triggering the difference

[17:43:00.0000] <kennyluck>
zewt, ja for the ja installer, zh-TW for the zh-TW. They are both initial vaue.

[17:43:01.0000] <zewt>
right. was wondering if that was the setting the installers were changing

[17:44:00.0000] <zewt>
at least it's easier to test that way than hanging off the system locale (don't have to reboot)

[17:46:00.0000] <zewt>
(taking what consolations I can get? heh)

[17:49:00.0000] <zewt>
changing that value from x-western to zh-TW doesn't change the output, though.

[17:50:00.0000] <kennyluck>
Well, since it depends on OS-locale, which probably isn't in any ff pref.

[17:50:01.0000] <zewt>
but you had different output with different FF installer languages, regardless of locale

[17:51:00.0000] <zewt>
(your output from JA and ZH installers wasn't the same as mine with an English installer)

[17:51:01.0000] <kennyluck>
zewt, than's true. I think that's related to default font setting.

[17:51:02.0000] <zewt>
the default font is per-language, though

[17:52:00.0000] <zewt>
mine is SimSun for simplified chinese, ... Taiwan is weird (only Monospace is set to MingLiU, the others are just generic fonts), Japanese is ms mincho/gothic

[17:52:01.0000] <TabAtkins>
roc: Ah, that's the event.  I'd forgotten.

[17:53:00.0000] <zewt>
(and "allow pages to choose fonts" is turned off)

[17:53:01.0000] <kennyluck>
zewt, I think zh-TW l10n people do tune, say, the default font for @zh-CN lang.

[17:53:02.0000] <zewt>
that's pretty evil.

[17:54:00.0000] <zewt>
this whole thing is evil wrapped in nastiness tied up in horror

[17:54:01.0000] <kennyluck>
i don't know if that's real evil as OS can always switches their default font.

[17:54:02.0000] <zewt>
the OS doesn't pick browser fonts

[17:56:00.0000] <zewt>
well... i sure hope browsers aren't letting OS font renderers get their fingers into that ...

[17:56:01.0000] <zewt>
heh

[17:56:02.0000] <zewt>
but font selection is a destroyer of hope :)

[17:58:00.0000] <kennyluck>
It is. Though I won't consider zh pages with ja glyph as broken, but #whatwg seems to have the culture to want to standardize every single non-UI browser behavior :)

[17:59:00.0000] <zewt>
but Japanese users do seem to consider Japanese pages with Chinese glyphs as broken

[17:59:01.0000] <kennyluck>
zewt, any source about that statement?

[18:00:00.0000] <zewt>
kennyluck: no, just a sentiment I've heard many times--maybe ask rniwa when he's around, i've talked to him about the issue

[18:03:00.0000] <dglazkov>
smaug____: afk, can you file a bug?

[18:03:01.0000] <smaug____>
dglazkov: will do

[18:21:00.0000] <smaug____>
dglazkov: though, the spec seems to lack all the declarative part

[18:21:01.0000] <smaug____>
no way to use external components

[18:21:02.0000] <smaug____>
I guess I'll read the document once those are added. hard to judge anything before that

[18:22:00.0000] <smaug____>
hmm, or is there some other document explaining more...

[18:46:00.0000] <cartes9>
hello

[18:47:00.0000] <cartes9>
http://www.w3.org/QA/2008/01/html5-is-html-and-xml.html

[18:47:01.0000] <cartes9>
http://www.la-grange.net/2009/07/05/html5-xhtml5/

[18:47:02.0000] <cartes9>
are these documents still valid?

[18:53:00.0000] <MikeSmith>
cartes9: yeah

[18:53:01.0000] <MikeSmith>
in that they are describing what the spec says is valid

[18:54:00.0000] <cartes9>
i see... that is what i was wondering.. too

[18:54:01.0000] <cartes9>
i told one member in the group that i'm trying to translate this

[18:54:02.0000] <cartes9>
document.

[18:55:00.0000] <cartes9>
and he was pointing out how old these are.

[18:56:00.0000] <cartes9>
i thought it didn't matter because core parts usually don't change even it's after a couple years

[19:00:00.0000] <cartes9>
MikeSmith thanks

[19:49:00.0000] <MikeSmith>
there's no way to link to specific comments in G+, I guess

[19:50:00.0000] <MikeSmith>
wanted to directly link to a clarifying comment that Joel Webber made to his G+ posting about the Shadow DOM spec

[19:54:00.0000] <smaug____>
ugh, is there some spec discussion happening in G+

[19:55:00.0000] <jamesr>
you can't talk about that there! talk about it over here or shut up! #freespeech

[19:59:00.0000] <MikeSmith>
heh

[20:00:00.0000] <MikeSmith>
https://plus.google.com/111111598146968769323/posts/4L2voQVzswx

[20:01:00.0000] <MikeSmith>
«The way things work right now, there's absolutely no way to create, e.g., a single "LabeledInput" element that's comprised of multiple existing elements, then treat it as a single logical element.»

[20:01:01.0000] <MikeSmith>
etc.

[20:07:00.0000] <jamesr>
yeah, replied on that thread

[20:07:01.0000] <jamesr>
i'm really happy people are talking about this stuff

[20:09:00.0000] <MikeSmith>
jamesr: good clarification

[20:09:01.0000] <MikeSmith>
dglazkov should mine those comments for text to put into the intro of the document

[23:29:00.0000] <annevk>
MikeSmith: ah, didn't know about that component (URL spec)!

[23:29:01.0000] <annevk>
MikeSmith: moved the bug there

[23:29:02.0000] <annevk>
guess I'll now add a reference to the bug database from each spec

[23:30:00.0000] <kennyluck>
that would be nice indeed

[23:32:00.0000] <annevk>
I like this "participate" box I added to all specs, I wonder if people make use of it or just skip it not knowing it's there

[23:35:00.0000] <erlehmann>
BE PART OF THE CREW

[23:35:01.0000] <erlehmann>
LIKE THIS ON GOOGLITTER

[23:35:02.0000] <erlehmann>
:3

[23:37:00.0000] <annevk>
morning erlehmann

[23:37:01.0000] <erlehmann>
ohai

[23:37:02.0000] <kennyluck>
People who are here certainly don't need it but it seems useful to newcomers.

[23:37:03.0000] <erlehmann>
:3

[23:45:00.0000] <kennyluck>
annevk, why does public-webapps⊙wo link to a mailto: URI instead of http://lists.w3.org/Archives/Public/public-webbapps/ by the way? I never find mailto: URI  useful but I can't speak for others. And ?subject= does serve a use case.

[23:49:00.0000] <annevk>
you mean in DOM?

[23:49:01.0000] <annevk>
I can add an archives link there

[23:50:00.0000] <annevk>
whatwg links to mailing-list because you need to subscribe and such

[23:50:01.0000] <kennyluck>
I am looking at dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html

[23:50:02.0000] <annevk>
does it help if I add (archives) after the mailto: links?

[23:50:03.0000] <annevk>
with "archives" being a link

[23:50:04.0000] <kennyluck>
annevk, I think so.

[23:51:00.0000] <annevk>
k will do

[23:53:00.0000] <kennyluck>
Though before starting to use a offline mail client I used to moan everytime I misclicked a mailto: URI.

[23:55:00.0000] <annevk>
ah right

[23:56:00.0000] <annevk>
most browsers implement registerProtocolHandler now

[00:02:00.0000] <annevk>
whoa, back in the days W3C got a lot of spam: http://lists.w3.org/Archives/Public/ietf-charsets/2004JanMar/

[00:14:00.0000] <annevk>
kennyluck: so if I list you in the acknowledgment section, how do I go about that?

[00:15:00.0000] <kennyluck>
annevk, "Kang-Hao Lu" I guess. Thanks by the way.

[00:16:00.0000] <annevk>
kennyluck: I can try Unicode if you prefer

[00:17:00.0000] <kennyluck>
annevk, well, "呂康豪（Kang-Hao Lu）" then.

[00:18:00.0000] <kennyluck>
Not sure if that's too many characters :p

[00:18:01.0000] <heycam>
/me steals those characters for his spec's acknowledgements section too! :)

[00:19:00.0000] <annevk>
kennyluck: is that sorted after Z? :)

[00:19:01.0000] <annevk>
I guess I'll sort you under K to keep it "simple"

[00:20:00.0000] <kennyluck>
that makes sense.

[00:20:01.0000] <heycam>
I'm using romanisation of family name as the sorting position

[00:20:02.0000] <annevk>
heycam: how do you deal with Ms2ger?

[00:21:00.0000] <heycam>
just sorted under M

[00:21:01.0000] <kennyluck>
good question.

[00:21:02.0000] <annevk>
/me likes first name

[00:21:03.0000] <annevk>
well, "name"

[00:21:04.0000] <annevk>
kennyluck: seems somewhere along the line the characters got converted into character references, but should still be okay

[00:22:00.0000] <annevk>
http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#acknowledgments

[00:40:00.0000] <annevk>
kennyluck: maybe I should use non-Kanji (is it Kanji?) parenthesis?

[00:42:00.0000] <annevk>
thanks zcorpan for writing in the enum bug what I didn't do

[00:43:00.0000] <kennyluck>
annevk, you could. (My habit is to use ideograph parenthesis as much as possible but I don't particularly care about this). And yeah, it's Kanji or Han character.

[00:44:00.0000] <annevk>
kennyluck: it looks kind of weird with the comma following it

[00:44:01.0000] <kennyluck>
ok

[00:44:02.0000] <annevk>
kennyluck: but if it's semantically more correct, I'm fine with letting it stay and have font designers take care of it some day

[00:45:00.0000] <annevk>
s/semantically//

[00:45:01.0000] <kennyluck>
annevk, I know nothing about semantics.

[00:45:02.0000] <kennyluck>
no it's not.

[00:45:03.0000] <annevk>
k

[00:52:00.0000] <erlehmann>
annevk, what about the font designers?

[00:52:01.0000] <erlehmann>
looks correct to me here

[00:52:02.0000] <annevk>
I just changed it

[00:53:00.0000] <annevk>
mostly about "）," vs "),"

[00:55:00.0000] <erlehmann>
but unicode was developed by 🔰 𝗧𝗬𝗣𝗢𝗚𝗥𝗔𝗣𝗛𝗬 𝗘𝗫𝗣𝗘𝗥𝗧𝗦

[00:58:00.0000] <kennyluck>
What is 🔰? lol

[00:58:01.0000] <erlehmann>
kennyluck, 🔰 U+1F530 JAPANESE SYMBOL FOR BEGINNER

[01:00:00.0000] <kennyluck>
huh, I do remember this symbol from an episode of Doraemon. I think that was Nobita driving as a beginner.

[01:01:00.0000] <erlehmann>
i use it to denote that something is sarcastic. when i talk about 🔰 𝗘𝗫𝗣𝗘𝗥𝗧 𝗣𝗥𝗢𝗚𝗥𝗔𝗠𝗠𝗘𝗥𝗦 it is probably useful to have a symbol like that prefix the statement.

[01:03:00.0000] <woef>
spec developers talking about special font characters in anime.

[01:03:01.0000] <woef>
There is no known geek scale to measure such activity.

[01:04:00.0000] <erlehmann>
http://en.wikipedia.org/wiki/Bamboo-copter

[01:05:00.0000] <annevk>
woef: lol

[01:09:00.0000] <erlehmann>
woef, slightly related, it is uncanny sometimes how i fit a cliche: i was at a friend's birthday last night. as everyone left or slept, he explained to me the inner workings of his wiki and we proceeded to find out how to best implement focus stealing prevention for the window manager he wrote. turns out chromium does weird stuff with windows. if i had a sense of fashion, i could be a great nerdy hipster!

[01:10:00.0000] <woef>
I'm never going to invite you to one of my birthdays :p

[01:11:00.0000] <erlehmann>
woef, but don't you want to know … ABOUT THE XLIB?

[01:12:00.0000] <woef>
Usually I like things preceded by X- ... geek-territory is an exception I'm afraid.

[01:12:01.0000] <zcorpan>
X-mas?

[01:13:00.0000] <erlehmann>
i predict you will never become an 🔰 𝗘𝗫𝗣𝗘𝗥𝗧 𝗣𝗥𝗢𝗚𝗥𝗔𝗠𝗠𝗘𝗥 if you continue on this path!

[01:13:01.0000] <woef>
Sure, why not. As long as there's presents

[01:13:02.0000] <woef>
Oh, but I am not a programmer! html is not even a proper language :D

[01:13:03.0000] <woef>
I'm just a semantics-buff.

[01:14:00.0000] <zcorpan>
why is it not a language?

[01:14:01.0000] <woef>
I get angry when people use .news on overview page and .article on the detail page.

[01:14:02.0000] <woef>
*programming language

[01:14:03.0000] <zcorpan>
ah

[01:14:04.0000] <woef>
Or not propper code.

[01:14:05.0000] <woef>
I dunno, there was a fuss about that 5 or 10 years ago.

[01:15:00.0000] <woef>
We couldn't call ourselves coders :)

[01:15:01.0000] <zcorpan>
of course not. it's not a programming language. you're AUTHORS :-)

[01:16:00.0000] <woef>
I'm a "Front-end Developer" now.

[01:16:01.0000] <woef>
I'm quite happy with that.

[01:17:00.0000] <woef>
Front-end author ... sounds quite artistic.

[01:17:01.0000] <zcorpan>
heh

[01:17:02.0000] <woef>
It could improve my hipster rating.

[01:19:00.0000] <erlehmann>
today in tasteless fun: read the breivik manifesto, replace „cultural marxism“ with „hipsterisation“. corollary: search and replace makes even the most despicable reactionaries kind-of-funny at times.

[01:32:00.0000] <Ms2ger>
annevk, setcapture is an IEism

[01:35:00.0000] <annevk>
Ms2ger: so proprietary to two browsers

[01:35:01.0000] <annevk>
ugh :(

[01:59:00.0000] <annevk>
MikeSmith: updated specs to make use of the new bug components

[01:59:01.0000] <MikeSmith>
cool

[02:23:00.0000] <annevk>
zewt: https://www.w3.org/Bugs/Public/show_bug.cgi?id=13408 is about what I meant the other day

[02:23:01.0000] <annevk>
MikeSmith: I'm going through the LC bugs but I cannot really find anything bad, most bugs seem valid thus far

[02:23:02.0000] <annevk>
MikeSmith: or have such a long argument that I gave up

[02:24:00.0000] <MikeSmith>
ok

[02:29:00.0000] <annevk>
feel free to ping me if the situation changes, but I'll try to monitor it every now and then

[02:53:00.0000] <annevk>
foolip: when I try to commit a change to the spec-splitter on html5.org I get

[02:53:01.0000] <annevk>
svn: Server sent unexpected return value (405 Method Not Allowed) in response to MKACTIVITY request for '/svn/!svn/act/cea8c09a-d6dc-4c98-821c-70215e3ba403'

[02:53:02.0000] <david_carlisle>
annevk: v.nu still unhappy about normal forms

[02:53:03.0000] <david_carlisle>
http://validator.nu/?doc=http%3A%2F%2Fwww.whatwg.org%2Fspecs%2Fweb-apps%2Fcurrent-work%2Fmultipage%2Fnamed-character-references.html

[02:54:00.0000] <annevk>
david_carlisle: oh

[02:54:01.0000] <annevk>
I wonder how this goes wrong then

[02:55:00.0000] <annevk>
parser maybe :(

[02:55:01.0000] <david_carlisle>
annevk: I'd look but the office is shutting down around me, closing for some holiday or other

[02:56:00.0000] <annevk>
heh

[02:56:01.0000] <annevk>
guess I should study the input

[02:59:00.0000] <annevk>
so the input to the parser is &#x027E8;

[02:59:01.0000] <jgraham>
annevk: I think svn is telling you to use another version control system

[03:00:00.0000] <annevk>
which yields ⟨

[03:00:01.0000] <annevk>
which is correct

[03:00:02.0000] <annevk>
so somehow that is mangled :(

[03:03:00.0000] <annevk>
why would those be mangled and nothing else?

[03:07:00.0000] <annevk>
oh, maybe because in Python they have some kind of meaning http://en.wikipedia.org/wiki/Bracket ?

[04:24:00.0000] <foolip>
annevk, did you fix it?

[04:25:00.0000] <annevk>
no

[04:25:01.0000] <annevk>
bug is here: https://www.w3.org/Bugs/Public/show_bug.cgi?id=12539

[04:30:00.0000] <foolip>
annevk, so was the problem that I forgot some file?

[04:30:01.0000] <foolip>
and now you can't commit it?

[04:31:00.0000] <annevk>
oh that was a different issue

[04:31:01.0000] <annevk>
I tried to change spec-splitter.py to fix an issue and I could not commit my change to svn

[04:31:02.0000] <annevk>
but my fix was not a fix so it doesn't really matter

[04:31:03.0000] <foolip>
I don't think the SVN problem is my fault, it's Google code's SVN server, right?

[04:32:00.0000] <annevk>
yeah

[04:32:01.0000] <annevk>
could be my fault

[04:33:00.0000] <annevk>
but I think I followed the instructions

[04:45:00.0000] <annevk>
MikeSmith: can we move http://dev.w3.org/2006/webapi/progress/ to dvcs?

[04:45:01.0000] <annevk>
MikeSmith: I think that's my last dev.w3.org draft now I quit CSS

[04:45:02.0000] <annevk>
MikeSmith: saying goodbye to dev.w3.org would be nice

[05:08:00.0000] <woef>
could itemscope be implied when itemtype is added to an element?

[05:09:00.0000] <woef>
microdata is quite verbose

[05:11:00.0000] <jgraham>
I believe that was tried when we did a user study with microdata and people found this design easier to comprehend

[05:12:00.0000] <jgraham>
Even though it is clearly more verbose

[05:27:00.0000] <webben>
annevk: Who (if anyone) has taken over CSSOM work?

[05:29:00.0000] <annevk>
glenn adams / shane stephens

[05:29:01.0000] <annevk>
jgraham: woef: maybe we should do another study though

[05:29:02.0000] <annevk>
this is a pretty consistent piece of feedback

[05:31:00.0000] <woef>
Also (but this might be google's implementation) ... i don't seem to be able to nest itemprops

[05:32:00.0000] <annevk>
http://blog.whatwg.org/weekly-shadow-encoding-fun

[05:32:01.0000] <woef>
<div itemprop="name"><span itemprop="givenName">Niels</span> <span itemprop="familyName">Matthijs</span></div>

[05:32:02.0000] <woef>
This ain't working for Google.

[05:35:00.0000] <wilhelm>
I like how W3C stores my member password as plain text.

[05:42:00.0000] <annevk>
"congratulations your paper 8 - What XML can learn from HTML; also known as XML5 was accepted for XML Prague 2012 conference."

[05:43:00.0000] <jgraham>
You are throwing yourself to the wolves?

[05:43:01.0000] <annevk>
seems I'm gonna explain XML5 one more time :)

[05:45:00.0000] <jgraham>
wilhelm: Yeah, I never felt that "we failed web security 101" was a great advert for W3C's credentials to lead the web to it's full potential

[05:46:00.0000] <annevk>
jgraham: I'm curious, mostly

[05:47:00.0000] <annevk>
jgraham: they've been quite upset with us, so maybe it helps if they can yell at someone in person

[05:47:01.0000] <annevk>
preferably over a nice Chech beer

[06:03:00.0000] <MikeSmith>
annevk: https://dvcs.w3.org/hg/progress

[06:03:01.0000] <MikeSmith>
didn't copy the spec over but can do that too if you want

[06:25:00.0000] <Philip`>
annevk: Do you know if the input to spec-splitter script says "&lang;" or "&#x27E9;"?

[06:25:01.0000] <Philip`>
(or 27E8 or whatever)

[06:26:00.0000] <Philip`>
I'd guess it's the former, and lxml is parsing into a U+9001, in which case maybe the most robust solution is for Hixie's scripts to generate the numeric code instead of the name

[06:29:00.0000] <Philip`>
Ah, single-page version says

[06:29:01.0000] <Philip`>
  <tr id=entity-LeftAngleBracket><td> <code title="">LeftAngleBracket;</code> </td> <td> U+027E8 </td> <td> <span class=glyph title="">&lang;</span> </td>

[06:30:00.0000] <Philip`>
and similar when defining entity-lang

[06:31:00.0000] <MikeSmith>
Philip`: yeah

[06:31:01.0000] <Philip`>
The glyphs are explicitly non-normative but it still seems a bit circular to use &lang; in the spec's definition of &lang;

[06:31:02.0000] <MikeSmith>
but I'm not sure using the numeric code will fix it

[06:32:00.0000] <Philip`>
Why not?

[06:32:01.0000] <MikeSmith>
I think I might have tried that already

[06:32:02.0000] <MikeSmith>
dunno

[06:32:03.0000] <MikeSmith>
hmm

[06:32:04.0000] <MikeSmith>
that would certainly be the easiest fix though

[06:32:05.0000] <Philip`>
As far as I'm aware, there's no code that attempts any fancy normalisation or anything - the only way the U+9001 could get introduced is via lxml's entity table, probably

[06:32:06.0000] <MikeSmith>
OK

[06:33:00.0000] <Philip`>
(But I could be wrong)

[06:33:01.0000] <gsnedders>
Philip`: How much does the spec-splitter depend on lxml?

[06:33:02.0000] <MikeSmith>
well, easy enough to test

[06:33:03.0000] <gsnedders>
Philip`: If not that much, you can probably get good enough perf with PyPy

[06:33:04.0000] <Philip`>
annevk: Re 405 Method Not Allowed: Are you behind some kind of HTTP proxy? (They often dislike SVN's special HTTP methods)

[06:34:00.0000] <Philip`>
gsnedders: It works with the html5lib parser, but I'm not aware of anything that can make html5lib magically go fast

[06:35:00.0000] <Philip`>
though "good enough" just depends on whether whoever's running the script can spare the CPU time

[06:35:01.0000] <annevk>
Philip`: it says the latter

[06:35:02.0000] <annevk>
Philip`: ooh

[06:35:03.0000] <gsnedders>
Philip`: PyPy is about twice the speed as CPython as parsing the spec, at least

[06:35:04.0000] <Philip`>
gsnedders: Twice as fast as "extremely slow" is not fast :-(

[06:35:05.0000] <annevk>
Philip`: http://svn.whatwg.org/webapps/entities-unicode.inc suggests the latter

[06:36:00.0000] <annevk>
Philip`: but it would make sense if it was &lang;

[06:36:01.0000] <annevk>
Philip`: I mean given the historical mappings

[06:36:02.0000] <Philip`>
Maybe something like Anolis outputs named entities instead?

[06:36:03.0000] <Philip`>
(given that numeric input)

[06:36:04.0000] <Ms2ger>
Probably

[06:37:00.0000] <gsnedders>
Philip`: Dunno, it depends on what serializer you use

[06:37:01.0000] <gsnedders>
IIRC html5lib does that

[06:38:00.0000] <annevk>
html5.org does not have html5lib

[06:38:01.0000] <Philip`>
Maybe the html5lib serializer shouldn't emit &lang;/&rang; since they're not backward compatible

[06:38:02.0000] <annevk>
html5.org uses the default settings of spec-splitter

[06:39:00.0000] <Philip`>
Who's running Anolis on the spec (before the spec-splitter sees it)?

[06:39:01.0000] <annevk>
it uses etree.HTMLParser and etree.tostring

[06:39:02.0000] <annevk>
good point

[06:39:03.0000] <annevk>
that's jgraham

[06:39:04.0000] <annevk>
maybe he's the culprit

[06:40:00.0000] <annevk>
hadn't thought of that

[06:40:01.0000] <Philip`>
If he can configure it to output numeric entities, that should minimise problems

[06:40:02.0000] <Philip`>
(It's a problem for anybody using an old HTML parser on the single-page spec, as well as for the multi-page spec)

[06:41:00.0000] <gsnedders>
Philip`: It should be exposed as an option, so it's whatever URL Hixie uses

[06:43:00.0000] <annevk>
Philip`: on the other hand, the main spec does not have this problem? or does it?

[06:44:00.0000] <Philip`>
annevk: The single-page spec says "&lang;" in it, so old parsers will parse into U+9001 or whatever it was

[06:44:01.0000] <Philip`>
but validator.nu will parse it into the newer U+27E8 so it won't cause validation errors

[06:45:00.0000] <annevk>
oh I see

[06:45:01.0000] <annevk>
so jgraham needs to fix it then

[06:45:02.0000] <Philip`>
Oh, I'm getting confused by decimals

[06:45:03.0000] <annevk>
thanks Philip`

[06:47:00.0000] <Philip`>
(U+2329, not U+9001)

[06:47:01.0000] <Philip`>
(although I'm mixing up lang and rang anyway, but the details don't really matter)

[06:47:02.0000] <jgraham>
Hmm, should I have been paying attention?

[06:48:00.0000] <Philip`>
jgraham: Summary: Are you running the spec's Anolis? If so, can you make it emit numeric character references instead of named?

[06:50:00.0000] <jgraham>
Hmm, html5lib doesn't support that? So yes, but I guess html5lib needs a patch. Or that option needs to be exposed in anolis if it isn't already

[06:50:01.0000] <jgraham>
/me quite likes just using UTF8 really

[06:51:00.0000] <Philip`>
UTF-8 will probably mess up diffs etc

[06:52:00.0000] <Philip`>
Can't you use the html5lib serializer with resolve_entities=False ?

[06:52:01.0000] <jgraham>
Why would it mess up diffs?

[06:52:02.0000] <Ms2ger>
resolve_entities=True|False?

[06:53:00.0000] <annevk>
jgraham: &lang; emits the wrong code point in a number of implementations

[06:53:01.0000] <Philip`>
Diffs get posted to mailing lists etc, and I wouldn't be surprised if something in the chain wasn't UTF-8-aware and messed it all up, so it's safer if the spec is purely ASCII

[06:53:02.0000] <annevk>
jgraham: and since the input is not &lang; but a numeric character reference (which does work) it breaks down the line

[06:53:03.0000] <annevk>
ooh

[06:53:04.0000] <annevk>
personally I'm fine with UTF-8

[06:54:00.0000] <annevk>
I changed multipage to UTF-8

[06:54:01.0000] <jgraham>
Philip`: I'm pretty sure the Hixie approach is to do the right thing and say other people should fix their processors to deal with UTF8

[06:54:02.0000] <Philip`>
Also, it's hard to visually read the diff between e.g. "〈 and "⟨", and easier if they're "&#....;" instead

[06:56:00.0000] <Philip`>
and it's hard to read HTML source that uses U+00A0 instead of "&nbsp;" etc

[06:58:00.0000] <annevk>
anyone interested in becoming a manager on the +WHATWG page?

[07:00:00.0000] <annevk>
jgraham: given that Hixie usually writes ASCII-compatible documents, I wouldn't be so sure of that

[07:02:00.0000] <gsnedders>
Hixie's position has been that ASCII-compatible documents are less hassle.

[07:03:00.0000] <jgraham>
Well it's not my fault if he has one standard for HTML and another for text

[07:04:00.0000] <jgraham>
Anyway, resolve_entities might possibly be exposed in the HTTP frontend now

[07:05:00.0000] <annevk>
jgraham: can you update https://www.w3.org/Bugs/Public/show_bug.cgi?id=12539 with status on this issue?

[07:09:00.0000] <Philip`>
jgraham: Does that mean Hixie needs to change how he calls it?

[07:09:01.0000] <annevk>
WHATWG Blog has 6999 subscribers in Google Reader now

[07:10:00.0000] <Philip`>
This spec-generation process seems to require cooperation between absurdly many people :-/

[07:10:01.0000] <Philip`>
(including people like me who are rubbish at responding to bugmail or at getting around to doing anything in general, so it takes forever to fix trivial issues)

[07:11:00.0000] <annevk>
I think your server is no longer used

[07:11:01.0000] <Ms2ger>
Philip`, speaking of bugmail...

[07:11:02.0000] <Ms2ger>
Happen to have time for canvas?

[07:11:03.0000] <annevk>
but it's still 3 distinct people which is a bit much

[07:16:00.0000] <zewt>
Philip`: your arguments against UTF-8 feel a bit contrived to me, FWIW

[07:17:00.0000] <jgraham>
Philip`: Well it isn't very clever and treats missing values as False due to the slightly retarded HTML form submission algorithm

[07:18:00.0000] <jgraham>
So, I guess he will pick up the change next time he generates the spec

[07:18:01.0000] <zewt>
sure it's hard to tell similar-looking characters apart, but numeric references are essentially *impossible* to read at all, unless you happen to have a savant-level rote memorization ability

[07:18:02.0000] <jgraham>
/me feels kind of bad about just switching the default like that

[07:19:00.0000] <Philip`>
Ms2ger: Hmm, I suppose I no longer have the excuse of PhD-related work distracting me, though Christmas might be a sufficiently believable distraction

[07:19:01.0000] <Ms2ger>
/me glares towards Philip` 

[07:19:02.0000] <jgraham>
You could claim to be santa claus

[07:19:03.0000] <Ms2ger>
And hand out test failures

[07:20:00.0000] <Philip`>
I suppose it would be technically feasible to spend more time on canvas-related stuff and less time on witchering

[07:20:01.0000] <jgraham>
"witchering"?

[07:22:00.0000] <Philip`>
http://www.gog.com/en/gamecard/the_witcher

[07:29:00.0000] <annevk>
Ms2ger: I don't get https://bitbucket.org/ms2ger/dom-core/changeset/c3ae3775d5d3

[07:30:00.0000] <annevk>
oh now I do

[07:30:01.0000] <Ms2ger>
Yeah, it's awful

[07:30:02.0000] <annevk>
Ms2ger: how is that first <style> element magically removed?

[07:30:03.0000] <Ms2ger>
title + style

[07:30:04.0000] <Ms2ger>
Because style can't have class in HTML4

[07:31:00.0000] <annevk>
oh, but now it's HTML

[07:31:01.0000] <annevk>
so maybe we kill that hack

[07:31:02.0000] <annevk>
should kill*

[07:31:03.0000] <Ms2ger>
Can we get away with that already?

[07:32:00.0000] <annevk>
someone told me that changed, yes

[07:32:01.0000] <Ms2ger>
That would certainly be nice

[07:32:02.0000] <annevk>
I think it was shepazu and/or MikeSmith

[07:50:00.0000] <billyjack>
radio check

[07:51:00.0000] <Ms2ger>
Can hear you loud and clear

[07:51:01.0000] <billyjack>
heh

[07:51:02.0000] <billyjack>
android irc client

[08:17:00.0000] <dglazkov>
good morning, Whatwg!

[08:46:00.0000] <JonathanNeal>
hiya

[09:25:00.0000] <EricInBNE>
when do ppl expect postMessage to be finalised?

[09:26:00.0000] <EricInBNE>
Hixie, any thoughts?

[09:28:00.0000] <zewt>
define "finalized"

[09:29:00.0000] <EricInBNE>
zewt, like how websockets was just blessed. This url http://dev.w3.org/html5/postmsg/ implies it's a draft.

[09:30:00.0000] <EricInBNE>
before websockets got the tick it seemed like there were quite a few changes

[09:30:01.0000] <zewt>
i doubt postMessage will see backwards-incompatible changes, since it's deployed and in use, but it could see new features in the future, so it's not "finalized" per se--no web API is

[09:31:00.0000] <EricInBNE>
ive written some postMessage code and it works in chrome but not firefox. I havent tested it in IE 10.

[09:31:01.0000] <zewt>
(also, which "postMessage"--there are different related APIs with that method name)

[09:31:02.0000] <zewt>
window.postMessage? port.postMessage?

[09:31:03.0000] <EricInBNE>
really?

[09:32:00.0000] <EricInBNE>
yeah ive been using window.postMessage. what's port.postMessage?

[09:32:01.0000] <zewt>
http://dev.w3.org/html5/postmsg/#channel-messaging

[09:33:00.0000] <EricInBNE>
oh awesome. thats what i want

[09:33:01.0000] <zewt>
(i don't know the status of window.postMessage; i've only used ports, for workers)

[09:34:00.0000] <Ms2ger>
<doron> html is garbage no matter what!

[09:34:01.0000] <zewt>
okay?

[09:34:02.0000] <EricInBNE>
zewt, so if the user opens two browser windows (say example.org and google.com) ports can pass messages even if their is no parent child relationship?

[09:34:03.0000] <zewt>
you have to have a way to get a port from one to the other

[09:35:00.0000] <zewt>
for that, you're looking for cross-document messaging, not port messaging

[09:35:01.0000] <zewt>
which it sounds like you've been using

[09:36:00.0000] <EricInBNE>
zewt, yeah, ive been using window.open, but the popup blocker somewhat ruins the situation

[09:36:01.0000] <zewt>
i havn't tried using it, but if you pastebin some code that works in one browser and not another, somebody might tell you why (the answer may simply be "stuff not yet implemented in some browser")

[09:36:02.0000] <EricInBNE>
i imagine that is the case (not yet implemented)

[09:37:00.0000] <EricInBNE>
caniuse.com should come with a guide - caniuse caniuse.com? (the answer would be a resounding no) v unreliable.

[09:38:00.0000] <zewt>
apis generally are going to have subsets of implemented features you can use, and new features you probably can't yet, so it's not a simple API-wide yes or no once you get into the details

[09:41:00.0000] <zewt>
(for example, iirc FF8 doesn't implement MessageChannel; you get the port messaging that's attached to workers, but you can't yet create new channels)

[11:45:00.0000] <smaug____>
/me is starting to think that sync APIs should be removed also from workers, just to keep APIs simple and consistent

[11:46:00.0000] <zewt>
that'd defeat a major purpose of workers

[11:46:01.0000] <zewt>
being able to write linear code

[11:46:02.0000] <smaug____>
not sure that is a major purpose of workers

[11:47:00.0000] <zewt>
i am

[11:47:01.0000] <smaug____>
the major purpose is to move stuff out from the main thread

[11:47:02.0000] <zewt>
i did say "a"

[11:47:03.0000] <zewt>
not "the"

[11:47:04.0000] <ap>
/me thinks that the nice (albeit nearly useless) idea of not adding new functionality to sync requests in document has been blown way, way out of proportion

[11:47:05.0000] <Ms2ger>
ap, well, we care about a clean web

[11:48:00.0000] <zewt>
doesn't seem useless to me

[11:48:01.0000] <ap>
Ms2ger: there is step 2 missing between "disable" and "get a clean web", I'm afraid

[11:48:02.0000] <zewt>
if it convinces people to not write sync code in the main thread when they otherwise would have

[11:49:00.0000] <zewt>
i wouldn't call it a *huge* benefit, but it does seem like a win

[11:49:01.0000] <ap>
people were making sync XHR 5 years ago, before there was CORS or responseType. They won't stop doing that because we remove CORS or responseType from sync requests now

[11:50:00.0000] <ap>
so yes, not supporting new features is nice, slightly helpful and cheap

[11:50:01.0000] <zewt>
but if they want to use new features, they'll have to take a step back and notice that what they're doing is wrong

[11:50:02.0000] <smaug____>
yeah, that is the point

[11:50:03.0000] <zewt>
if they decide they'd rather make crappy pages, well, not much we can do about that in the end

[11:52:00.0000] <zewt>
if it was a huge pain to implement then yeah it might not be worth it

[11:52:01.0000] <ap>
wanting to support new features is more in library author domain. When you've been making your sync XHR request to your SAP server since the last ice age, you're not going to notice CORS

[11:52:02.0000] <ap>
(and library authors don't appear to be in need of convincing)

[11:52:03.0000] <zewt>
people who are using old APIs to do old things simply aren't affected either way; nothing we can do about them

[11:53:00.0000] <zewt>
i just don't know what your objection is

[11:53:01.0000] <zewt>
do you think it's hard to implement?

[11:53:02.0000] <zewt>
the cost and the benefits seem about at par

[11:53:03.0000] <ap>
no, not very hard (although that's also a consideration)

[11:54:00.0000] <ap>
I just don't want to take any risk of breaking existing content when the benefit is so tiny and unlikely to materialize

[11:54:01.0000] <zewt>
i wonder if snipy webkit guy is going to clarify what he means by calling me "self-conflicted". heh

[11:54:02.0000] <ap>
what jQuery already did appears to be an order of magnitude more important than what engines can achieve

[11:54:03.0000] <ap>
"self-conflicted"?

[11:57:00.0000] <ap>
/me assumes that there is another snipy webkit guy somewhere, and this comment wasn't about himself :)

[11:57:01.0000] <zewt>
not you :)

[11:58:00.0000] <zewt>
(sorry, I don't really know who you are :)

[11:58:01.0000] <smaug____>
ap: benefits of getting rid of sync XHR small?

[11:58:02.0000] <smaug____>
well, ofc these are the first steps

[11:58:03.0000] <Ms2ger>
zewt, meet Alexey Proskuryakov, other snipy webkit guy :)

[11:58:04.0000] <ap>
zewt: I'm the guy who intends to prevent disabling already shipping sync XHR functionality in WebKit

[11:59:00.0000] <smaug____>
I hope we could start adding warnings about using sync xhr in window context

[11:59:01.0000] <zewt>
(FYI: i do make the allowance that everyone's allowed to be snipy once in a while, for the selfish reason that it allows me to be from time to time)

[11:59:02.0000] <Ms2ger>
*Intends to stop any attempts to improve the web

[11:59:03.0000] <smaug____>
and then finally, maybe in one or two years, get rid of it

[11:59:04.0000] <Ms2ger>
ftfy

[11:59:05.0000] <smaug____>
we're trying to get rid of other bad APIs

[11:59:06.0000] <ap>
smaug____: that's what I allude to by saying that I don't see step 2. Warning for every use seem meaningful, but then I don't see how disabling withCredentials helps

[11:59:07.0000] <smaug____>
(like Attrs as Nodes)

[12:00:00.0000] <zewt>
smaug____: it'd be nice, but if there was a betting pool I'd put my money squarely on the other side

[12:00:01.0000] <zewt>
("good luck, but I doubt it")

[12:00:02.0000] <smaug____>
also, we're trying to get rid of Mutation events

[12:00:03.0000] <smaug____>
they are used surprisingly often

[12:01:00.0000] <ap>
smaug____: as far as Attrs as nodes are concerned - did someone come up with a plan for XPath?

[12:01:01.0000] <smaug____>
Ms2ger: ^^

[12:02:00.0000] <smaug____>
though, I'm not sure why you'd need Attrs as nodes  for XPath

[12:02:01.0000] <smaug____>
are there some common use cases ?

[12:03:00.0000] <TabAtkins>
Xpath needs attrs as "nodes" for its selection model.  They dont' need to be real Nodes, though, in the DOM sense.

[12:03:01.0000] <TabAtkins>
They just need to be on equal footing with elements and namespaces in the XPath data model.

[12:04:00.0000] <ap>
smaug____: XPath can return found attributes as nodes. If the plan is to filter those out from result node set before exposing it to a JavaScript caller, that's a valid plan that can be investigated

[12:05:00.0000] <ap>
smaug____: as TabAtkins explains, XPath totally needs to treat attributes on equal footing with other nodes internally, but that doesn't really affect whether we can get rid of Attr in DOM

[12:06:00.0000] <smaug____>
yes, that is what I was saying. I don't know why Attrs would need to be nodes for XPath

[12:06:01.0000] <smaug____>
need to change some APIs though

[12:06:02.0000] <smaug____>
to support both Nodes and Attrs

[12:06:03.0000] <ap>
smaug____: I can easily suggest some use cases, but I don't know if they are actually encountered in real life

[12:07:00.0000] <ap>
smaug____: e.g. change all "class=foo" attributes in a subtree to "class=bar"

[12:07:01.0000] <ap>
smaug____: XPath will find them for you, and you'll iterate

[12:08:00.0000] <ap>
smaug____: in addition to filtering attributes out, another plan is to return non-homogenous node sets, having both node and non-node objects. I don't think that I like this option

[12:10:00.0000] <TabAtkins>
ap: Of course, you can also use XPath to return the *elements* with those attributes, then iterate and change them.  (Or use Selectors to do the same.)

[12:12:00.0000] <ap>
TabAtkins: that's somewhat less efficient, but probably negligibly so. Arguably more complicated for authors, too

[12:13:00.0000] <ap>
TabAtkins: it's hard to find _any_ use case for XPath that couldn't be served by Selectors pretty much as well :)

[12:13:01.0000] <TabAtkins>
Yes, it's slightly more complicated in XPath to write such a query.

[12:13:02.0000] <annevk>
authors never ever deal with Attr nodes

[12:13:03.0000] <ap>
TabAtkins: same goes in opposite direction too

[12:13:04.0000] <annevk>
so I'm not sure if they suddenly have to deal with them it'd be simpler

[12:13:05.0000] <TabAtkins>
Agreed on Selectors/XPath equivalency.  I recall writing a thread to that effect.  ^_^

[12:14:00.0000] <smaug____>
ap: selectors don't handle textnodes

[12:15:00.0000] <ap>
smaug____: good point

[12:15:01.0000] <TabAtkins>
...yet

[12:15:02.0000] <TabAtkins>
(Probably never, for CSS's subset of Selectors.  But there's no good reason to disallow it from JS's Selectors.)

[12:16:00.0000] <ap>
Need to run an errand now. Thanks everyone for a useful discussion!

[12:17:00.0000] <ap>
annevk: (one last notice - may I use your comment that "authors never ever deal with Attr nodes" as an argument against removing them? ;-) )

[12:18:00.0000] <Ms2ger>
No

[12:18:01.0000] <Ms2ger>
Only as one in favour

[12:18:02.0000] <annevk>
heh, I guess I meant they shouldn't have to deal with them; some probably do anyway because they are there and well, look, features

[12:18:03.0000] <annevk>
like Facebook was using them, but not because they had a reason

[12:19:00.0000] <annevk>
Ms2ger: btw, having include support in Anolis

[12:20:00.0000] <annevk>
Ms2ger: like <!--something.tmpl--> would be sweet

[12:20:01.0000] <Ms2ger>
It would

[12:20:02.0000] <Ms2ger>
Does html5lib support fragment parsing?

[12:20:03.0000] <annevk>
Ms2ger: I generate some stuff for the Encoding Standard and end op copy and pasting things

[12:20:04.0000] <annevk>
Ms2ger: I'd be happy with a pre-processing step

[12:21:00.0000] <annevk>
but I think it implements that, yes

[12:21:01.0000] <Ms2ger>
Then it shouldn't be too hard

[12:22:00.0000] <annevk>
I'm changing the way I deal with undefined code points

[12:22:01.0000] <Ms2ger>
I'll get to it at some point, I guess

[12:22:02.0000] <annevk>
set them to null rather than U+FFFD

[12:22:03.0000] <annevk>
also makes more sense when you want to encode using a legacy encoding

[12:28:00.0000] <zewt>
annevk: what happens if a UA wants to suspend scripts when backgrounded (mobile), but keep XHR downloads going? wouldn't that cause tons of onprogress events to back up in the event queue? can't find any sort of "progress events might be delayed arbitrarily by the browser" escape clause that allows not doing that

[12:30:00.0000] <annevk>
hardware limitation?

[12:31:00.0000] <zewt>
battery

[12:32:00.0000] <zewt>
i'd think it would be better to allow this explicitly than force browsers to use that particular clause...

[12:32:01.0000] <kennyluck>
are browses following per 50ms by the way?

[12:33:00.0000] <zewt>
for example, perhaps say that when a new progress event task is queued, any progress event tasks still in the queue on the same object are removed

[12:33:01.0000] <zewt>
that would also have the nice property (i think) that if an onprogress takes too long, they'll never back up more than one deep

[12:33:02.0000] <zewt>
(well, at least for a single XHR)

[12:37:00.0000] <jgraham>
That sounds good to me

[12:37:01.0000] <jgraham>
Aslo, I seem to be writing perl again

[12:37:02.0000] <jgraham>
Where id my life go wrong :(

[12:37:03.0000] <jgraham>
*did

[12:38:00.0000] <Ms2ger>
jgraham, interested in a job at Mozilla? We hate perl as well :)

[12:38:01.0000] <zewt>
i hate perl, php, java and ruby, do I get to be the boss

[12:40:00.0000] <jgraham>
Heh

[12:40:01.0000] <jgraham>
/me is just glad it isn't Pike

[12:41:00.0000] <jgraham>
(although strictly speaking it isn't clear which is worse)

[12:42:00.0000] <jgraham>
That's http://en.wikipedia.org/wiki/Pike_%28programming_language%29 in case you aren't a scholar of obscure Swedish programming languages

[12:43:00.0000] <zewt>
there are lots of really bad, really obscure languages; i save my energy for hating the really bad languages that I actually have to deal with now and again :P

[12:44:00.0000] <jgraham>
So do I :(

[12:46:00.0000] <jgraham>
Note to future self: if you ever think "hey I could store this structured data as a blob of text and process it in an adhoc way using regexps", don't.

[12:47:00.0000] <jgraham>
(for posterity, I point out that I didn't do that this time either)

[12:57:00.0000] <annevk>
zewt: send email I guess

[12:58:00.0000] <Ms2ger>
jgraham, HTML?

[13:08:00.0000] <annevk>
Ms2ger: the tables now omit bytes that map to U+FFFD

[13:08:01.0000] <annevk>
Ms2ger: might be better

[13:09:00.0000] <jgraham>
Ms2ger: No, key-value pairs, basically. I wouldn't mind if it was parsed with regexp once into a data structure of some sort. But it isn't; the big blob of text is stored and every time some data is needed, it's out with the regexp

[13:10:00.0000] <Ms2ger>
Nice

[13:10:01.0000] <gsnedders>
Ms2ger: html5lib has fragment parsing support

[13:11:00.0000] <gsnedders>
jgraham: Pike isn't bad. It just has horrible debug tools.

[13:11:01.0000] <annevk>
I guess I should also link to the tables from the spec

[13:11:02.0000] <annevk>
oh well, later

[13:21:00.0000] <jgraham>
gsnedders: And three different values of zero

[13:22:00.0000] <jgraham>
Also, the last person I heard say "Pike isn't so bad" then used it for two *more* weeks and hated it passionately

[13:24:00.0000] <gsnedders>
jgraham: Gerald always claimed the language wasn't so bad, just the tools.

[13:27:00.0000] <jgraham>
gsnedders: See if Kevin agrees :)

[13:31:00.0000] <gsnedders>
Man, I should come to Lkpg sometime and see people again.

[13:47:00.0000] <TabAtkins>
Hahaha, "Strunk & White?  More like Bunk & Trite, amirite?"

[13:48:00.0000] <Ms2ger>
As long as you don't start about Strunk/White

[13:49:00.0000] <TabAtkins>
Nothing wrong with literary slash.

[14:04:00.0000] <TabAtkins>
matijsb: I've totally borked the css-commits RSS feed.  I've got all the necessary data to regenerate it properly, but it'll take some time (and testing) to make sure it's all correct.

[14:04:01.0000] <TabAtkins>
So it may be a good idea to turn off your @csscommits script until you can be sure you're not going to attempt to send a thousand tweets at once.

[14:05:00.0000] <jgraham>
TabAtkins: Is that "literary slash" as in "Fan fiction in which Strunk/White hook up"?

[14:06:00.0000] <TabAtkins>
Yes.

[14:07:00.0000] <TabAtkins>
What else would it be?

[14:07:01.0000] <jgraham>
Who knows the depths of depravity to which the human mind might sink

[14:08:00.0000] <Ms2ger>
s/human/TabAtkins/

[14:08:01.0000] <jgraham>
Also, that genre of book in general, and Strunk & White in particular, is known to be, to use the technical term, utter bollocks

[14:08:02.0000] <jamesr_>
oh? how so?

[14:10:00.0000] <TabAtkins>
jamesr_: Most of it is, to be blunt, made up bullshit based on their own predilections and their hardons for Latin.

[14:10:01.0000] <jgraham>
The advice generally assumes a prescriptionist model of grammar which doesn't match that of modern linguists.

[14:10:02.0000] <jgraham>
And S/W has advice that is both contradicatory or, as TabAtkins didn't put it, wrong

[14:11:00.0000] <jgraham>
s/or/and/

[14:11:01.0000] <jgraham>
http://chronicle.com/article/50-Years-of-Stupid-Grammar/25497 for example

[14:12:00.0000] <zewt>
jgraham: prescriptionist grammar also doesn't match ... common sense

[14:13:00.0000] <zewt>
if i see one more stupid sentence twisted around like a pretzel because some clueless elementary teacher brainwashed YOU CAN'T PUT PREPOSITIONS AT THE END OF A SENTENCE into someone's head

[14:13:01.0000] <TabAtkins>
That's the kind of nonsense up with which I'll not put!

[14:14:00.0000] <jgraham>
(TabAtkins now sounds like Dr Seuss)

[14:14:01.0000] <TabAtkins>
But I avoid a final preposition!

[14:14:02.0000] <TabAtkins>
(Or rather, Imaginary Churchill did.)

[14:16:00.0000] <dglazkov>
/me is now convinced that the Big Bang Theory show was conceived as a result of observing #whatwg discussions.

[14:17:00.0000] <zewt>
(i havn't seen that show, so I can't tell if that's complimentary, backhanded-complimentary or derogatory)

[14:17:01.0000] <zewt>
(or perhaps it depends on one's opinion of the show)

[14:18:00.0000] <dglazkov>
does it have to be any of those? Can it be just a musing?

[14:18:01.0000] <zewt>
prohibited!

[14:18:02.0000] <Ms2ger>
Objection, your honour! Alleged prohibition!

[14:20:00.0000] <jgraham>
zewt: Well it would suggest that we were all rather bright, except for the most prominent female. It would also suggest we had surprisingly active social lives given our supposed characters

[14:21:00.0000] <zewt>
if we're on a tv show, does that mean we're all unusually good looking, too?

[14:21:01.0000] <jgraham>
OTOH I assume that dglazkov is really refering to the need for a "SARCASM" sign

[14:23:00.0000] <jgraham>
(I guess in defense of BBT, I should say that many of the other female characters are at least the intellectual equals of the boys)

[14:23:01.0000] <TabAtkins>
Yes, virtually every major character besides Penny, male or female, is a roughly-equivalent genius.

[14:25:00.0000] <TabAtkins>
jgraham: Ah, I should have realized that article would be written by one of the Language Log regulars.

[14:26:00.0000] <jgraham>
/me hasn't actually seen season 4 but never understood how one was supposed to understand Bernadette.

[14:26:01.0000] <zewt>
can we all be on TV-show-actor salaries, too?

[14:27:00.0000] <dglazkov>
jgraham: don't spoil it! I am on season 2 at the moment.

[14:27:01.0000] <annevk>
dglazkov: me too!

[14:27:02.0000] <zewt>
spoiler: the show doesn't end with the big crunch

[14:27:03.0000] <TabAtkins>
I think me three, too.

[14:27:04.0000] <TabAtkins>
zewt: Big Rip, or just heat death?

[14:28:00.0000] <TabAtkins>
Or *gasp* steady-state?

[14:28:01.0000] <zewt>
make a Choose Your Own Galaxy End-game Adventure out of it

[14:28:02.0000] <jgraham>
Isn't the steady state ending what The Simpsons has achieved

[14:28:03.0000] <jgraham>
You just keep churning out mostly indistigguishable episodes for an indefinite amount of time?

[14:29:00.0000] <zewt>
don't they just have an episode-generating machine by now?

[14:29:01.0000] <zewt>
with a big red lever, of course

[14:32:00.0000] <TabAtkins>
I actually wouldn't put it past BBT to go steady-state.  Have Sheldon invent a time-machine, and stumble into one of the previous episodes in a believable way.

[14:32:01.0000] <TabAtkins>
Perhaps the one with a time machine.

[14:33:00.0000] <zewt>
invent a time machine and travel to another episode that also has a time machine? that seems a recipe for an unpleasant loop

[14:33:01.0000] <TabAtkins>
Yes, that's the point.

[14:33:02.0000] <zewt>
mobius tv

[14:34:00.0000] <TabAtkins>
It turns a series finale into just another episode of the infinite show.

[14:47:00.0000] <matijsb>
TabAtkins: I'm sure you mean matjas :)

[14:47:01.0000] <matijsb>
/me matjas: what TabAtkins said :)

[14:47:02.0000] <matijsb>
(fkin cmd-enter)

[14:49:00.0000] <TabAtkins>
Dammit, people.  Get more different names!

[14:52:00.0000] <roc>
isn't BBT reasonably hard-science?

[15:01:00.0000] <TabAtkins>
roc: Reasonably so, considering the audience is the general public.

[15:02:00.0000] <jgraham>
Right, the science is generally accurate; http://thebigblogtheory.wordpress.com/

[15:02:01.0000] <roc>
so time travel is right out

[15:07:00.0000] <jamesr_>
outside of perhaps some neutrinos, yeah


2011-12-22
[16:01:00.0000] <zewt>
ick, wow, some 101 ugliness on google somehow

[16:02:00.0000] <TabAtkins>
zewt: ?

[16:02:01.0000] <zewt>
opened google's front page, started typing, and while I was typing, it moved the cursor to the beginning of the input box

[16:02:02.0000] <zewt>
had the feel of an onload race

[16:02:03.0000] <TabAtkins>
Ah, yeah, almost certainly was.

[16:02:04.0000] <zewt>
unpleasant to see mistakes like that in a google flagship product

[16:03:00.0000] <zewt>
eg. if even google is making that mistake (if that's what happened; I doubt I can repro it) ...

[16:26:00.0000] <erlehmann>
zewt, this is why i use noscript ;)

[16:27:00.0000] <zewt>
having the form not focused at all would not be an improvement :)

[16:27:01.0000] <zewt>
(it doesn't set autofocus)

[16:29:00.0000] <erlehmann>
fail :3

[16:31:00.0000] <erlehmann>
well, since google employs 🔰 𝗘𝗫𝗣𝗘𝗥𝗧 𝗣𝗥𝗢𝗚𝗥𝗔𝗠𝗠𝗘𝗥𝗦 there should be a perfect logical explanation for that.

[16:36:00.0000] <TabAtkins>
Is that "JAPANESE SYMBOL FOR BEGINNER"?

[16:39:00.0000] <kennyluck>
Seriously, it means beginner driver in Japan.

[16:40:00.0000] <TabAtkins>
kk ^_^

[16:40:01.0000] <zewt>
defaultglyph defaultglyphdefaultglyphdefaultglyphdefaultglyphdefaultglyphdefaultglyph

[16:43:00.0000] <kennyluck>
huh, it actually has a wiki entry → http://en.wikipedia.org/wiki/Shoshinsha_mark

[16:44:00.0000] <zewt>
seems like a strange concept that someone can be deemed a poor enough driver to have to announce it to the world, while still being allowed to drive

[16:44:01.0000] <TabAtkins>
I presume it's like a learner's permit in the US.

[16:44:02.0000] <kennyluck>
"A driver must display this mark on the front and back of the car for one year after they obtain a standard driver's licence."

[16:44:03.0000] <TabAtkins>
That also marks you as a "beginner driver".

[16:44:04.0000] <zewt>
permit is more than that ("needs a chaperone")

[16:46:00.0000] <zewt>
which at least is somewhat preventative, versus a stick that says "WATCH OUT, I'M NEW AT THIS"

[16:46:01.0000] <zewt>
sticker

[16:47:00.0000] <zewt>
if people did that in the US, I'd half expect it to invite people to screw with new drivers

[16:51:00.0000] <zewt>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=15292 o_O

[16:52:00.0000] <TabAtkins>
Ooh, quick, someone come up with an appropriate server response and use that as the closing comment!

[16:52:01.0000] <heycam>
TabAtkins, how do I get lists to look like (a) … (b) … ?

[16:52:02.0000] <zewt>
wouldn't an inappropriate server response be more appropriate?

[16:52:03.0000] <TabAtkins>
heycam: Theoretically, or practically?

[16:52:04.0000] <zewt>
someone files a bug as a websocket request; close the bug with "NO CARRIER" or something

[16:53:00.0000] <heycam>
TabAtkins, practically… I guess theoretically is defining a @counter-style?

[16:53:01.0000] <TabAtkins>
Yes.

[16:53:02.0000] <TabAtkins>
Practically, by putting "(a)" in the text of your document.

[16:53:03.0000] <heycam>
ok :)

[16:54:00.0000] <TabAtkins>
Theoretically, @counter-style parenthesized-alphabetic { type: alphabetic; symbols: a b c d e f g h i j k l m n o p q r s t u v w x y z; prefix: "("; suffix: ") "; }

[16:54:01.0000] <heycam>
yow

[16:54:02.0000] <zewt>
; }

[16:55:00.0000] <TabAtkins>
Or, shorter, @counter-style parenthesized-alphabetic { type: override alphabetic; prefix: "("; suffix: ") "; }

[16:55:01.0000] <heycam>
better!

[16:55:02.0000] <TabAtkins>
I mean, "override lower-alpha".

[16:56:00.0000] <TabAtkins>
So I guess the name should be "parenthesized-lower-alpha" as well.

[16:57:00.0000] <TabAtkins>
heycam: Why do you ask?

[16:57:01.0000] <heycam>
TabAtkins, oh I just wanted such a list

[16:58:00.0000] <heycam>
but I will just stick "(a)" in my document or live with "a."

[16:59:00.0000] <TabAtkins>
If you want, you can wrap the (a) in a <span> so that, later, you can apply "position:marker" to it and make it look like an outside list marker.

[16:59:01.0000] <heycam>
TabAtkins, ooh, I didn't know about position:marker. will that do the indentation of the list item body too?

[17:00:00.0000] <TabAtkins>
No, that's handled by padding on the <ol>, like normal.

[17:01:00.0000] <TabAtkins>
position:marker just makes an element use the same position scheme as a ::marker, relative to its nearest list-item ancestor.

[18:03:00.0000] <MikeSmith>
heycam|away: you already know about http://shapecatcher.com/ I guess

[18:03:01.0000] <MikeSmith>
no vim digraphs, but still...

[18:05:00.0000] <erlehmann>
Sorry, shapecatcher couldn't complete the request at the moment. (Error: Internal Server Error)

[18:05:01.0000] <erlehmann>
MikeSmith, vim digraphs? vim can into unicode surely it must have?

[18:06:00.0000] <MikeSmith>
digraphs are shortcut keys for particular characters

[18:07:00.0000] <MikeSmith>
key combinations

[18:07:01.0000] <MikeSmith>
^k plus some key combo

[18:08:00.0000] <MikeSmith>
:digraph shows you what the know digraphs are

[18:08:01.0000] <zewt>
or menukey, in the case of putty

[18:09:00.0000] <zewt>
the sort of thing that really belongs at the OS IME layer, not in the applications...

[18:13:00.0000] <MikeSmith>
"The TAG will publish analyses explaining the areas in which use of Mime on the Web is proving problematic, and will suggest concrete steps for resolving problems where they are found"

[18:13:01.0000] <MikeSmith>
http://www.w3.org/2001/tag/products/mimeweb.html

[18:13:02.0000] <zewt>
oh joy

[18:14:00.0000] <zewt>
does anything useful *ever* come out of that?

[18:15:00.0000] <zewt>
all I've seen was that nonsense about web storage recently, which makes me suspect not

[18:16:00.0000] <MikeSmith>
http://www.w3.org/2001/tag/doc/IdentifyingApplicationState-20111201 also

[18:18:00.0000] <heycam>
MikeSmith, I did not know about that site, no

[18:18:01.0000] <MikeSmith>
oh

[18:18:02.0000] <MikeSmith>
well, now you do :)

[18:18:03.0000] <heycam>
MikeSmith, it's neat :)

[18:18:04.0000] <heycam>
I can at least draw the character and copy/pastei t

[18:18:05.0000] <erlehmann>
zewt, i use the neo2 keyboard layout. it does away with caps lock and replaces it with an additional modificator. i think everyone should do that.

[18:19:00.0000] <erlehmann>
shift + capsmod + m → μ

[18:19:01.0000] <erlehmann>
shit + capsmod + a → α

[18:19:02.0000] <erlehmann>
etc. pp.

[18:19:03.0000] <zewt>
keyboards already have quite a lot of meta keys, more than most people can handle :)

[18:20:00.0000] <erlehmann>
regardless, that kkind of stuff has nothing to do in a text editor.

[18:20:01.0000] <zewt>
menukey is rarely used in non-windows-programs like gvim and terminals

[18:21:00.0000] <zewt>
er, non-windowy (damn you, muscle-memory autocorrect)

[19:41:00.0000] <MikeSmith>
http://channel9.msdn.com/Blogs/Charles/YOW-2011-Allen-Wirfs-Brock-and-Rob-Manson-Ambient-Computing-Augmented-Reality-and-JavaScript is fun

[20:21:00.0000] <JonathanNeal>
hello

[22:59:00.0000] <matjas>
TabAtkins: ok, disabled @csscommits for now. ping me when it’s back up again

[23:01:00.0000] <zewt>
o/~ quotostrophies

[23:02:00.0000] <MikeSmith>
hsivonen: if you're around, wanted to chat a bit about the W3C validator.nu-based validation service

[23:04:00.0000] <MikeSmith>
specifically, how we should handle checking of markup features that are not in the W3C version of the spec

[23:04:01.0000] <MikeSmith>
JonathanNeal: hola

[23:16:00.0000] <GPHemsley>
annevk: Taking a look at the Encoding Standard, it seems like you should be careful to distinguish between a mutiple-to-one mapping and a multiple-to-multiple (respective) mapping of codepoints.

[23:16:01.0000] <GPHemsley>
...oh, wait, you say "respectively"

[23:17:00.0000] <GPHemsley>
ah, not in the one I was looking at

[23:18:00.0000] <GPHemsley>
windows-1255: "Gecko and Presto map 81, 8A, 8C-90, 9A, and 9C-9F to U+FFFD. Trident maps CA, D9-DF, FB-FC, and FF to U+05BA, U+F88D-U+F893, U+F894-U+F895, and U+F896."

[23:18:01.0000] <GPHemsley>
similarly for windows-1257

[23:19:00.0000] <GPHemsley>
(perhaps you started to forget to add "respectively" as you worked your way down the page)

[23:20:00.0000] <GPHemsley>
IMO, it'd be clearer to just say "X to Y and W to Z" rather than "X and W to Y and Z, respectively"

[00:50:00.0000] <zcorpan>
matjas: <!DOCTYPE html PUBLIC"-//W3C//DTD HTML 4.01 Frameset//EN"><title//<frameset/<frame>/

[00:51:00.0000] <matjas>
zcorpan: duh, thanks!

[00:51:01.0000] <zcorpan>
annoying that the validator whines about <></>

[00:53:00.0000] <zcorpan>
matjas: for xhtml basic, i'm pretty sure you can't omit both the doctype and xmlns. the reason for xmlns to be optional is that is inferred by the dtd for xml processors that process the external subset

[00:54:00.0000] <zcorpan>
(which is optional to do, so it is bogus to omit it)

[00:55:00.0000] <matjas>
is there an easy way to confirm this? i believe you, but it’d be useful if there was a working validator that i could use to play around with this

[00:58:00.0000] <annevk>
GPHemsley: yeah maybe

[00:59:00.0000] <annevk>
GPHemsley: on the other hand, the goal is to remove those notes, I don't plan to keep them indefinitely

[00:59:01.0000] <zcorpan>
well it's kind of like schrodinger's cat. if you validate against a dtd (which you'd have to choose in the validator if you omit the doctype), you need an xml processor that processes the external subset, and then the dtd implies the attribute, and everything's fine

[00:59:02.0000] <annevk>
GPHemsley: both Gecko and Presto are in the process of being fixed

[00:59:03.0000] <zcorpan>
if you don't use a validator or use one that doesn't process a dtd that infers the attribute, then the elements aren't in the xhtml namespace, so it's not xhtml at all

[01:01:00.0000] <zcorpan>
best thing is to not use doctypes in production, not process external entities in consumption, and use xmlns

[01:01:01.0000] <jgraham>
For a definition of "best" that assumes XML

[01:04:00.0000] <matjas>
ZING

[01:05:00.0000] <matjas>
zcorpan: so why does this only apply to XHTML Basic?

[01:06:00.0000] <Ms2ger>
Hah, XHTML Basic

[01:06:01.0000] <zcorpan>
matjas: it doesn't

[01:06:02.0000] <zcorpan>
it applies to all xhtmls

[01:07:00.0000] <annevk>
can one define an enum inside an interface?

[01:07:01.0000] <zcorpan>
but some versions have a bogus requirement saying "there must be an xmlns="http://www.w3.org/1999/xhtml" declaration on the root element"

[01:07:02.0000] <zcorpan>
which is unclear if it is satisfied by using a doctype since the dtd infers that declaration...

[01:07:03.0000] <zcorpan>
anyway

[01:07:04.0000] <GPHemsley>
annevk: Ah, OK.

[01:08:00.0000] <matjas>
zcorpan: would you mind leaving a quick comment with that information?

[01:08:01.0000] <GPHemsley>
annevk: BTW, could you elaborate on what the issue is with Gecko and the aliases for windows-1254?

[01:08:02.0000] <annevk>
GPHemsley: I think Gecko does not treat ISO-8859-9 and windows-1254 as identical

[01:08:03.0000] <zcorpan>
matjas: sorry, have work to do. this channel is logged :)

[01:09:00.0000] <annevk>
GPHemsley: iirc

[01:09:01.0000] <matjas>
zcorpan: fair enough, thanks!

[01:09:02.0000] <GPHemsley>
annevk: OK, that's what I thought. It appears to have all those aliases mapped to ISO-8859-9, except windows-1254, which is treated separately.

[01:10:00.0000] <annevk>
yeah

[01:10:01.0000] <GPHemsley>
FYI, I filed a bug on it: https://bugzilla.mozilla.org/show_bug.cgi?id=712876

[01:10:02.0000] <annevk>
we recently merged them in Opera

[01:10:03.0000] <annevk>
ah sweet

[01:10:04.0000] <annevk>
didn't know you hang out in this channel btw, only see you on twitter :)

[01:10:05.0000] <GPHemsley>
:)

[01:11:00.0000] <GPHemsley>
I don't usually have much to say

[01:16:00.0000] <MikeSmith>
zcorpan: what should the validator do differently for <></> ?

[01:16:01.0000] <GPHemsley>
annevk: BTW, Gecko also has the alias 'iso_8859-9'

[01:19:00.0000] <annevk>
GPHemsley: yeah, I think some other browsers might not have had that as alias

[01:19:01.0000] <annevk>
label I mean

[01:19:02.0000] <annevk>
but maybe we should be liberal with adding labels

[01:20:00.0000] <GPHemsley>
ah, well, I noted it merely for consistency

[01:21:00.0000] <annevk>
it's a known issue

[01:21:01.0000] <annevk>
I put up some data here the other day http://lists.w3.org/Archives/Public/www-archive/2011Dec/att-0021/encoding-labels.html

[01:21:02.0000] <annevk>
full with grammar errors :(

[01:22:00.0000] <annevk>
most browsers also have "asmo-708" as label for "iso-8859-6" despite it being a completely different encoding in IE

[01:22:01.0000] <annevk>
kind of weird

[01:24:00.0000] <Ms2ger>
-> Topic

[01:24:01.0000] <zcorpan>
MikeSmith: dunno

[01:24:02.0000] <zcorpan>
MikeSmith: previously it allowed it (since it's allowed per html4 proper)

[01:25:00.0000] <zcorpan>
MikeSmith: now it gives an error saying browsers don't support it or some such

[01:25:01.0000] <zcorpan>
MikeSmith: given the direction it's going, it should probably just use an html5 parser

[01:25:02.0000] <zcorpan>
but then people would get upset

[01:26:00.0000] <MikeSmith>
yeah

[01:26:01.0000] <MikeSmith>
some people are already upset

[01:26:02.0000] <zcorpan>
no shit

[01:26:03.0000] <MikeSmith>
heh

[01:26:04.0000] <Ms2ger>
Upset surely is the default state of people at the W3C

[01:27:00.0000] <MikeSmith>
some yes

[01:27:01.0000] <MikeSmith>
some not so much so

[01:27:02.0000] <MikeSmith>
e.g., Tim's pretty good about not being  upset

[01:28:00.0000] <MikeSmith>
Dan Connolly was pretty good about it too

[01:28:01.0000] <jgraham>
Maybe the distribution of upsetness is bimodal

[01:29:00.0000] <jgraham>
If we could just breed the populations we would get a nice bell curve from their children

[01:29:01.0000] <jgraham>
(I know what you're thinking, genetics doesn't really work like that)

[01:29:02.0000] <Ms2ger>
No, what I was thinking is "disturbing"

[01:30:00.0000] <Ms2ger>
I don't want to breed upset W3C people

[01:30:01.0000] <MikeSmith>
for me when I started working with the HTML WG, DanC was like K from Men in Black -- the part where he says, "There's always an Arquillian Battle Cruiser, or a Corillian Death Ray, or an intergalactic plague that is about to wipe out all life"

[01:30:02.0000] <Philip`>
I guess it must be tricky to remain upbeat when working with a community that is denigrating and/or disregarding what you spent the last fifteen years of your life working on

[01:31:00.0000] <Ms2ger>
Philip`, so, Christmas or canvas today? :)

[01:32:00.0000] <Philip`>
Nah, got some other urgent stuff to do first that I've been putting off for weeks :-p

[01:32:01.0000] <Ms2ger>
Why doesn't that surprise me? :)

[01:33:00.0000] <MikeSmith>
what I meant about Dan is that's the outlook Dan took on crises. He doesn't panic, he doesn't let the "the sky is falling" ranters get him panicked. He doesn't let anything get under his skin

[01:34:00.0000] <MikeSmith>
The sky is always falling.

[01:35:00.0000] <Philip`>
That just means he'll be unprepared when the sky really *does* fall

[01:35:01.0000] <MikeSmith>
heh

[01:35:02.0000] <jgraham>
Maybe he is prepared and that's why he's not worried

[01:35:03.0000] <Philip`>
and he'll look back and think "I really should have panicked for that one"

[01:35:04.0000] <jgraham>
Perhaps he has a secret lair under a volcano, for example

[01:36:00.0000] <MikeSmith>
anyway, Dan was always upbeat about HTML5. I would think he still is.

[01:37:00.0000] <MikeSmith>
I think part of thing is, it quit being fun.

[01:37:01.0000] <MikeSmith>
the working-group work, I mean

[01:39:00.0000] <Philip`>
He should have quit the HTML WG and joined the WHATWG, which seems to put a greater value on entertainment

[01:39:01.0000] <jgraham>
/me remembers at TPAC 2007 Dan scheduled one timeslot on one track to be a sort of bonding session. Afterwards he got crticised by some people for not being serious enough

[01:40:00.0000] <MikeSmith>
yeah

[01:40:01.0000] <MikeSmith>
he started the first HTML WG f2f playing his guitar

[01:40:02.0000] <MikeSmith>
that was fun

[01:41:00.0000] <jgraham>
Which is kind of ironic because it is generally agreed that about 90% of the value of F2F meetings is in the metting *people* not in the "sitting in a room wile about 3 people talk about something vaugely technical and about 147 check their email"

[01:41:01.0000] <Philip`>
Surely bonding at a F2F is unfair on people who can't attend

[01:41:02.0000] <Philip`>
Someone should set up a WG to develop an asynchronous bonding protocol

[01:45:00.0000] <wilhelm>
Are you sure someone hasn't specced that already?

[01:45:01.0000] <jgraham>
Isn't it just transport tycoon?

[01:48:00.0000] <wilhelm>
Good point.

[01:48:01.0000] <wilhelm>
Y'all should join next time.

[01:58:00.0000] <annevk>
thanks kennyluck

[02:15:00.0000] <annevk>
whoa

[02:15:01.0000] <annevk>
no spam on the wiki for a few days now

[02:15:02.0000] <sh00p>
schema: http://pastie.org/3056523

[02:15:03.0000] <annevk>
(we still got spam after accounts were disabled because we probably have a large number of sleeping spam accounts)

[02:16:00.0000] <sh00p>
http://pastie.org/3056528

[02:16:01.0000] <sh00p>
and thats my xml

[02:16:02.0000] <sh00p>
how can i refer to team_two in my observer at the bottom?

[02:17:00.0000] <annevk>
might want to try a channel focused on XML (not sure which one that is though, sorry)

[02:17:01.0000] <sh00p>
there's one called xml but it's not very lively

[02:17:02.0000] <sh00p>
isn't this w3c's channeL?

[02:18:00.0000] <annevk>
it's called #whatwg, not #w3c ;)

[02:18:01.0000] <annevk>
there's sometimes someone here who likes XML Schema and things, but he seems to be out

[02:28:00.0000] <MikeSmith>
sh00p: maybe try Ankh on #w3c

[02:28:01.0000] <MikeSmith>
that's Liam Quin

[02:28:02.0000] <MikeSmith>
who's responsible for all things XMLish at W3C

[02:29:00.0000] <MikeSmith>
but don't think he's going to be awake yet

[02:29:01.0000] <MikeSmith>
he lives in Canada

[02:29:02.0000] <MikeSmith>
and unlike most people, he actually likes XML Schema

[02:32:00.0000] <MikeSmith>
wow, xsi:noNamespaceSchemaLocation

[02:32:01.0000] <annevk>
of the subset of people that have an opinion :p

[02:32:02.0000] <MikeSmith>
heh

[02:37:00.0000] <MikeSmith>
does the bugzilla voting feature allow you to vote against bugs?

[02:37:01.0000] <Ms2ger>
No

[02:37:02.0000] <MikeSmith>
oh

[02:37:03.0000] <MikeSmith>
it would be great to have a way to mod down nuisance bugs

[02:38:00.0000] <Ms2ger>
MikeSmith, assign to comtributor⊙wo? :)

[02:42:00.0000] <MikeSmith>
Allen Wirfs-Brock looks different from what I imagined he looked like

[02:42:01.0000] <MikeSmith>
(having never met him before or seen a photo)

[02:42:02.0000] <MikeSmith>
http://channel9.msdn.com/Blogs/Charles/YOW-2011-Allen-Wirfs-Brock-and-Rob-Manson-Ambient-Computing-Augmented-Reality-and-JavaScript

[03:43:00.0000] <annevk>
MikeSmith: are you getting empty emails as well?

[03:44:00.0000] <annevk>
MikeSmith: subject "RE: CfC: Publish eight heartbeat drafts as WDs"

[03:44:01.0000] <annevk>
MikeSmith: second time now

[03:44:02.0000] <MikeSmith>
yeah

[03:44:03.0000] <MikeSmith>
from hp.com address

[03:44:04.0000] <annevk>
kk, so not my problem

[03:51:00.0000] <zcorpan>
annevk: about that, i still haven't set up anolis

[03:51:01.0000] <zcorpan>
annevk: although i have a newer computer available now so i might have better success installing xcode and what not

[04:03:00.0000] <MikeSmith>
the new GLCI thing in Firefox Nightly is very interesting

[04:03:01.0000] <MikeSmith>
Firefox devtools team is doing some really innovative stuff

[04:04:00.0000] <MikeSmith>
will be nice to see how it progresses

[04:16:00.0000] <annevk>
zcorpan: ah, have fun :)

[04:23:00.0000] <ernini>
hellu

[04:24:00.0000] <ernini>
using flexget which uses html5lib, but have a problem which i think is related to html5lib

[04:24:01.0000] <ernini>
http://pastebin.com/Rs9erQmK

[04:25:00.0000] <ernini>
using html5lib 0.90

[04:26:00.0000] <annevk>
you might want to try trunk

[04:26:01.0000] <annevk>
but jgraham knows more

[04:26:02.0000] <ernini>
annevk: oke can i upgrade to that with easy_install?

[04:27:00.0000] <jgraham>
ernini: I don't remember that bug. If you could try trunk that would be good

[04:28:00.0000] <jgraham>
No easy_install (also: in general you might want to use pip instead), but you can check it out of mercurial and it should be quite stable

[04:29:00.0000] <ernini>
oke, and can i fetch the trunk version with pip?

[04:32:00.0000] <jgraham>
maybe pip install -e hg+http://code.google.com/p/html5lib/#egg=html5lib

[04:33:00.0000] <jgraham>
(I haven't tried that ofc)

[04:35:00.0000] <ernini>
works

[04:35:01.0000] <ernini>
was already onto installing mercurial

[04:38:00.0000] <annevk>
lol https://www.w3.org/Bugs/Public/show_bug.cgi?id=15304 removed myself

[04:39:00.0000] <MikeSmith>
heh

[04:40:00.0000] <MikeSmith>
annevk the lulz are from the last comment, right?

[04:40:01.0000] <MikeSmith>
"100% backwards-compatible way"

[04:41:00.0000] <ernini>
getting the same error

[04:41:01.0000] <ernini>
with trunk

[04:42:00.0000] <jgraham>
ernini: Oh, interesting. Can you file a bug report with the source that is producing the error?

[04:42:01.0000] <ernini>
jgraham: yeh think so, will do it tonight after checking some more

[04:42:02.0000] <jgraham>
OK, thanks

[04:51:00.0000] <annevk>
MikeSmith: when certain people start commenting there's usually too much traffic to bother

[04:51:01.0000] <MikeSmith>
roger that

[05:02:00.0000] <annevk>
hsivonen: fwiw, I think the UTF-16 stuff should be normalized

[05:02:01.0000] <annevk>
hsivonen: you perform file://localhost/Users/annevk/Work/w3c-dvcs/encoding/Overview.html#concept-encoding-get and if that returns "utf-16" use "utf-8" instead

[05:03:00.0000] <annevk>
hsivonen: I haven't filed bugs on HTML yet to use the Encoding Standard instead because I think it should become a bit more complete

[05:03:01.0000] <Ms2ger>
404

[05:03:02.0000] <annevk>
hsivonen: meant http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#concept-encoding-get doh

[05:06:00.0000] <annevk>
http://shop.oreilly.com/product/9780596514471.do might be interesting

[05:09:00.0000] <Philip`>
TabAtkins: "a third unknown element with a tagname of "/meta"" - that doesn't sound right

[05:10:00.0000] <Philip`>
(except perhaps in IE6 and similar)

[05:10:01.0000] <Philip`>
The tokeniser returns an end tag token with name "meta", and the tree constructor ignores it since it's not an expected token

[05:12:00.0000] <MikeSmith>
annevk: I have a copy of that book that I could send you

[05:12:01.0000] <MikeSmith>
I'm not using it

[05:13:00.0000] <annevk>
oh sweet

[05:14:00.0000] <MikeSmith>
it's at the office though

[05:14:01.0000] <MikeSmith>
so couldn't get it til next week

[05:14:02.0000] <annevk>
there's no hurry

[05:14:03.0000] <MikeSmith>
hai

[05:14:04.0000] <MikeSmith>
remind me next week if I forget

[05:14:05.0000] <annevk>
just want to look through it for obvious omissions

[05:14:06.0000] <annevk>
on my part

[05:14:07.0000] <annevk>
kk

[05:20:00.0000] <annevk>
I wonder why http://unicode.org/Public/MAPPINGS/VENDORS/MICSFT/ misses code pages mentioned on the wiki

[05:20:01.0000] <annevk>
wiki being http://wiki.whatwg.org/wiki/Web_Encodings

[05:46:00.0000] <annevk>
GPHemsley: any reason you did not use http://dvcs.w3.org/hg/encoding/raw-file/tip/Overview.html#windows-1254 in the bug report?

[05:47:00.0000] <annevk>
GPHemsley: you used as specific version rather than "tip"

[05:50:00.0000] <annevk>
euhm, https://bugs.webkit.org/show_bug.cgi?id=74819 ... :/

[06:31:00.0000] <davidb_>
ygoat

[06:32:00.0000] <jgraham>
Presumably because evolution gave them the right fitness to survive in their environment

[06:54:00.0000] <Philip`>
jgraham: Maybe they're unfit and evolution just hasn't got around to killing them off yet?

[06:56:00.0000] <Philip`>
Based on historical evidence, almost all species fail and go extinct, so extant species are probably just as bad and ought to die out soon - it's not like evolution has actually found a good design for organisms yet

[06:57:00.0000] <jgraham>
Often extinctions, at least major ones, are associated with environmental change

[06:58:00.0000] <jgraham>
Species that haven't experienced dramatic environmental change have often survived largely unchanged for a surprisingly long time

[06:58:01.0000] <Philip`>
Humans have made major environmental changes, so those goats are living on borrowed time

[06:59:00.0000] <zcorpan>
major but not dramatic. yet.

[06:59:01.0000] <jgraham>
Well that might be the case for many species. Although in the specific case of goats, domestication has given them a short term advantage

[07:00:00.0000] <wilhelm>
/me scrolls up to figure out WTF this conversation is about.

[07:00:01.0000] <Philip`>
Of course the real danger for goats is that we will reintroduce predators like T-rexes into the ecosystem

[07:00:02.0000] <zcorpan>
my wife bought a goat today. though a plastic one.

[07:00:03.0000] <jgraham>
I am not sure that is better

[07:01:00.0000] <jgraham>
I mean I can understand why one might own a real goat

[07:01:01.0000] <jgraham>
Cheese, milk, meat

[07:01:02.0000] <zcorpan>
this one she'll give away as christmas present

[07:01:03.0000] <jgraham>
Does a plastic goat make those cheese squares?

[07:01:04.0000] <jgraham>
Like the ones they have at McDonalds

[07:01:05.0000] <jgraham>
Oh, I can understand the desire to give away a plastic goat

[07:02:00.0000] <Ms2ger>
jgraham, just hope you'll like it :)

[08:34:00.0000] <dglazkov>
good morning, Whatwg!

[08:35:00.0000] <smaug____>
annevk: do you know if other features than the ones related to sync xhr are actively being removed from webkit? (features that DOM4 removes)

[08:37:00.0000] <Ms2ger>
document.width/height?

[08:37:01.0000] <Ms2ger>
But that's it, afaik

[08:37:02.0000] <smaug____>
webkit still supports isSameNode etc?

[08:37:03.0000] <smaug____>
or perhaps it has never supported that

[09:04:00.0000] <crassus>
does IE8 have localStorage?

[10:49:00.0000] <GPHemsley>
annevk: I wanted to make sure that what I was referring to stayed constant. I also linked to the tip version below.

[12:47:00.0000] <TabAtkins>
Philip`: Ah, yeah, you're right.

[13:44:00.0000] <bga>
http://www.youtube.com/watch?v=8vDLb3Nq824

[13:44:01.0000] <bga>
:)

[13:58:00.0000] <BenoitRen>
Hi there.

[13:59:00.0000] <BenoitRen>
I don't have a W3 BugZilla account. Is it all right if I respond to a comment in a bug that I filed here?

[14:00:00.0000] <Ms2ger>
Please create a bugzilla account

[14:00:01.0000] <kennyluck>
Yeah, anyone can do that.

[14:40:00.0000] <BenoitRen>
Still no confirmation e-mail message. Damn it.

[14:41:00.0000] <zewt>
nothing like useless email confirmations to make people mailinator

[15:04:00.0000] <BenoitRen>
Okay, comment posted. Bye!

[15:10:00.0000] <dglazkov>
what's the hottest multi-player game nowadays

[15:10:01.0000] <TabAtkins>
WOW

[15:10:02.0000] <TabAtkins>
Still.

[15:11:00.0000] <bga>
/me want img { tabIndex: 0 } for usercss

[15:12:00.0000] <dglazkov>
excellent

[15:12:01.0000] <dglazkov>
/me aims to be the first to mention WoW in a spec

[15:12:02.0000] <bga>
for selecting images w/o mouse in opera

[15:12:03.0000] <heycam>
dglazkov, http://www.wowwiki.com/Shadow_priest

[15:12:04.0000] <bga>
ok dglazkov :)

[15:13:00.0000] <TabAtkins>
bga: nav-index (not well-implemented)

[15:16:00.0000] <bga>
thanks

[15:18:00.0000] <bga>
TabAtkins btw is still no plans to include better UI into html. is still css apearence and emulating using plain html?

[15:18:01.0000] <bga>
XUL will be nice

[15:18:02.0000] <TabAtkins>
bga: I don't understand what you're asking.

[15:19:00.0000] <bga>
native UI

[15:19:01.0000] <bga>
sorry

[15:20:00.0000] <TabAtkins>
I still don't understand the question.  Can you rephrase it?

[15:20:01.0000] <bga>
TabAtkins current way is emulate tabs using plain html and css apearance property

[15:21:00.0000] <bga>
via <ul> <li> for example

[15:21:01.0000] <bga>
understand?

[15:21:02.0000] <TabAtkins>
Yes.

[15:22:00.0000] <bga>
css way is good but forse authors reinvent wheel is bad

[15:26:00.0000] <bga>
TabAtkins and when we will get <tabs> <tab> <tree-item> <vsplit> <hsplit> etc ? :)

[15:27:00.0000] <bga>
and <grid> of course

[15:27:01.0000] <TabAtkins>
Never, because CSS is the proper layer for that.

[15:27:02.0000] <bga>
:(

[15:27:03.0000] <TabAtkins>
In some cases, we can use CSS to make it easy to do those kinds of UI things.

[15:28:00.0000] <TabAtkins>
Flexbox makes tabs easier.  Grid Layout does grids.  Lists 4 might handle tree lists.  No clue yet how to handle splitters (especially resizable splitters), but it's something I want to think about at some point.

[15:28:01.0000] <bga>
=> extjs will live and other 1000 ui libs

[15:29:00.0000] <bga>
TabAtkins but its swing way. bad way. slow way

[15:30:00.0000] <TabAtkins>
I don't understand why it's bad or slow.

[15:30:01.0000] <bga>
'i can paint pixels, ok, i can make ui!'

[15:31:00.0000] <bga>
TabAtkins as author i want just write <tabs> in html. NET, XUL, QT gives me this ability

[15:32:00.0000] <TabAtkins>
bga: None of those are the web, with the web's particular separation of concerns.

[15:32:01.0000] <TabAtkins>
Rarely, it makes sense to add UI paradigms into HTML - look at <details>, which was a great addition.

[15:33:00.0000] <bga>
TabAtkins ok, you split webapp and webpage

[15:33:01.0000] <bga>
webapp need ui stuff

[15:33:02.0000] <TabAtkins>
Which is why I'm working on stuff that helps webapps build UI.

[15:33:03.0000] <TabAtkins>
Like Flexbox.

[15:34:00.0000] <bga>
build from scratch each time

[15:35:00.0000] <TabAtkins>
That's fine.  Webapps dont' actually want native OS styles.

[15:35:01.0000] <kennyluck>
Is Firefox gradually deprecating XUL?

[15:35:02.0000] <zewt>
TabAtkins: who knows if they don't want it, since there's no way to get it, heh

[15:36:00.0000] <bga>
TabAtkins thats is not fine. user want native look of ui

[15:36:01.0000] <zewt>
practically speaking, it's very difficult to get native-behaving OS widgets generically

[15:36:02.0000] <TabAtkins>
zewt: Asking people, and also noting that almost no one attempts to emulate OS styles with CSS.

[15:36:03.0000] <zewt>
(in a cross-platform way)

[15:36:04.0000] <TabAtkins>
Plus lots of people use appearance:none and styles to make the few controls that *are* OS-native look different.

[15:37:00.0000] <zewt>
TabAtkins: well, it's hard, and anything short of near-perfect emulation is ugly and embarrassing

[15:37:01.0000] <TabAtkins>
bga: If we give authors something that they dont' want, they won't use it.

[15:37:02.0000] <zewt>
native-looking widgets floating in the middle of non-native stuff look out of place

[15:37:03.0000] <TabAtkins>
Yup.

[15:37:04.0000] <hober>
beware the uncanny valley

[15:38:00.0000] <TabAtkins>
In some cases it's worth it (like getting a single consistent datepicker from <input type=date>, or consistent controls from <video>) but usually authors want to theme it with their website.

[15:38:01.0000] <zewt>
realistically speaking, whatever the initial reasons, people are definitely now in the habit of making their own custom UIs, so it's probably too late to change the momentum, even if they would have gone for it at one point

[15:39:00.0000] <bga>
heh

[15:40:00.0000] <bga>
chaos of themes. each app has own theme. hell

[15:40:01.0000] <bga>
but ok

[15:40:02.0000] <zewt>
theme != ui

[15:40:03.0000] <bga>
i still can write usercss

[15:40:04.0000] <bga>
:)

[15:40:05.0000] <zewt>
in lynx?

[15:41:00.0000] <bga>
:)

[15:47:00.0000] <dglazkov>
re: WoW, done: dvcs.w3.org/hg/webcomponents/rev/a3e6d321e899

[15:47:01.0000] <dglazkov>
probably easier to read here: dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#shadow-dom-example

[15:49:00.0000] <TabAtkins>
dglazkov: You realize that <a href="example.com/stories/1"> does not make a link to example.com, right?

[15:49:01.0000] <dglazkov>
dur

[15:49:02.0000] <dglazkov>
lemme fix

[15:49:03.0000] <TabAtkins>
Use the protocol-relative url!

[15:49:04.0000] <TabAtkins>
 //example.com

[15:50:00.0000] <dglazkov>
too clever

[15:50:01.0000] <dglazkov>
:)

[15:50:02.0000] <TabAtkins>
More people need to know about this.

[15:50:03.0000] <dglazkov>
alright

[15:51:00.0000] <TabAtkins>
Also, ugh, you capitalize your color keywords?  SO UGLY

[15:51:01.0000] <TabAtkins>
^_^

[15:51:02.0000] <dglazkov>
it's not me, it's bob

[15:52:00.0000] <TabAtkins>
I hate Bob.

[15:52:01.0000] <dglazkov>
well, he's at a comiccon, you should tell him that when he comes bacck


2011-12-23
[20:30:00.0000] <kennyluck>
there's been no mail for two days on www-style. That made me think I was kicked off the list.

[00:42:00.0000] <zcorpan>
dglazkov: bob made two links to the same article

[00:44:00.0000] <zcorpan>
dglazkov: also, the <pre>s have pretty small font i think

[00:46:00.0000] <zcorpan>
dglazkov: imho, the reference to WoW should be a lot more subtle, such that only actual WoW players would get the reference

[01:07:00.0000] <erlehmann>
zcorpan, which reference?

[01:14:00.0000] <zcorpan>
http://krijnhoetmer.nl/irc-logs/whatwg/20111223#l-84

[03:38:00.0000] <annevk>
fwiw, the WebKit bug on removing document.charset / defaultCharset was wontfixed suggesting I file a bug on removing document.defaultCharset

[03:38:01.0000] <annevk>
not sure I'm gonna file those bugs anymore

[03:54:00.0000] <annevk>
heycam|away: there's no undefined in IDL?

[03:54:01.0000] <annevk>
heycam|away: because then I could write DOMString or undefined

[03:58:00.0000] <Ms2ger>
No

[03:59:00.0000] <annevk>
meh

[03:59:01.0000] <annevk>
I'm not even sure if undefined is handled the same way for open() everywhere

[04:12:00.0000] <Ms2ger>
* gavin thought OMG IDL was a joke

[04:12:01.0000] <Ms2ger>
<shaver> gavin: in some ways, it is

[04:13:00.0000] <annevk>
hehe

[04:13:01.0000] <annevk>
most certainly

[04:13:02.0000] <annevk>
also: http://www.youtube.com/watch?v=F4zEAPZxtBA

[04:13:03.0000] <annevk>
highly relevant

[04:27:00.0000] <annevk>
ah http://mxr.mozilla.org/mozilla-central/source/intl/uconv/ucvja/nsJapaneseToUnicode.cpp#174

[04:27:01.0000] <annevk>
that pretty much matches my testing

[04:27:02.0000] <annevk>
but no rationale

[04:27:03.0000] <annevk>
(Opera always consumes both)

[04:34:00.0000] <Ms2ger>
annevk, https://bugzilla.mozilla.org/show_bug.cgi?id=690225, which I can't access

[04:34:01.0000] <annevk>
same here, I'm not in the secret club

[04:37:00.0000] <smaug____>
why is bug 690225 still closed :/

[04:40:00.0000] <annevk>
there's a similar bug for EUC-JP https://bugzilla.mozilla.org/show_bug.cgi?id=563618

[04:40:01.0000] <annevk>
but the changes all seem kind of sketchy

[04:41:00.0000] <smaug____>
bug 690225  is not a crasher

[04:42:00.0000] <Ms2ger>
3.6?

[04:42:01.0000] <annevk>
 https://bugzilla.mozilla.org/show_bug.cgi?id=25037 and https://bugzilla.mozilla.org/show_bug.cgi?id=64235 seem like the actual culprits

[04:42:02.0000] <smaug____>
Ms2ger: what is the latest 3.6.  the bug has  .24-fixed

[04:43:00.0000] <Ms2ger>
.25

[04:44:00.0000] <annevk>
so Gecko had sensible error handling and then had to change that :(

[05:03:00.0000] <freechelmimi>
Ping hsivonen

[05:04:00.0000] <freechelmimi>
Was reading the great http://webm.html5.org

[05:04:01.0000] <freechelmimi>
I think for IE 678

[05:04:02.0000] <freechelmimi>
We could tell users to install chromeFrame

[05:05:00.0000] <freechelmimi>
as it even works without admin rights

[05:15:00.0000] <ernini>
with chrome frame that site still reports that the browser doesn't support it

[05:15:01.0000] <freechelmimi>
ernini: Does it ? we should modify it then

[05:16:00.0000] <freechelmimi>
Are you sure chrome frame is used ?

[05:16:01.0000] <ernini>
yeh just installed it, restarted the browser

[05:16:02.0000] <freechelmimi>
because the javascript webm support test should succeed

[05:16:03.0000] <freechelmimi>
Let me test

[05:18:00.0000] <freechelmimi>
You're right ernini

[05:18:01.0000] <freechelmimi>
ha ok , I'm dumb :-)

[05:19:00.0000] <freechelmimi>
yeah the website has to force whrome Frame usage

[05:19:01.0000] <freechelmimi>
So it's quite tricky to say actually that installing chrome frame is gonna make IE6 playing webm

[05:19:02.0000] <freechelmimi>
But I'll force my users anyway :-)

[05:20:00.0000] <freechelmimi>
hsivonen: forget my proposal for now then ....

[05:22:00.0000] <ernini>
freechelmimi: oke cool :)

[05:22:01.0000] <ernini>
was just thinking of adding google chrome frame in our winxp base image

[05:23:00.0000] <ernini>
so was kinda testing with that page :D

[05:23:01.0000] <freechelmimi>
It's a great idea to integrate chrome frame

[05:23:02.0000] <freechelmimi>
and activate it for specific intranet pages for exemple

[05:24:00.0000] <freechelmimi>
like youtube did

[05:24:01.0000] <ernini>
yeh got some intranet sites that won't with google chrome, so only needs to be used when tested with

[05:29:00.0000] <ernini>
but now i see indeed that only sites that explicitly opt-in will use it

[05:29:01.0000] <ernini>
so thats good

[07:18:00.0000] <Huvet>
Hi! Can i request a new PyPi release?

[07:19:00.0000] <annevk>
probably not here

[07:19:01.0000] <Huvet>
ah, html5lib.

[07:20:00.0000] <Huvet>
important info :)

[07:20:01.0000] <Huvet>
It's a mess installing from source, and this bug is blocking: normal usage of it: http://code.google.com/p/html5lib/issues/detail?id=138&q=etree

[07:20:02.0000] <annevk>
I think the problem with releasing it is that trunk does not pass all the tests

[07:20:03.0000] <annevk>
jgraham / gsnedders might know more

[07:23:00.0000] <Huvet>
also, the wiki seems down: http://wiki.whatwg.org/

[11:03:00.0000] <gsnedders>
Huvet: Eh, yeah, jgraham should do that.

[13:16:00.0000] <annevk>
so godaddy just reversed their position (somewhat)

[13:16:01.0000] <annevk>
wikipedia still gonna move?

[13:18:00.0000] <zewt>
not fickle at all

[13:28:00.0000] <annevk>
dropping a paypal account is btw incredibly hard

[13:28:01.0000] <annevk>
there were about four confirmation screens after I found the tiny link in submenu of submenu etc.

[13:29:00.0000] <annevk>
searching for "opzeggen" / "afmelden" / "annuleren" on the Dutch paypal site yields no results

[13:29:01.0000] <annevk>
had to search on Google first to find another site to tell me how to go about it

[13:32:00.0000] <zewt>
not as bad as godaddy's autorenewal evil, heh

[13:33:00.0000] <zewt>
they'll automatically bill you full price to renew ssl certs by default, without telling you in advance (except i assume buried in some 100-page "agreement", which doesn't qualify)

[13:34:00.0000] <gsnedders>
But they are one of the few domains registers that allowed me to renew a domain while not in the same country as my credit card is registered to.

[14:19:00.0000] <zewt>
gross, html mail that sets the whole thing as background-color: #FFFFFF

[14:20:00.0000] <zewt>
the amount of eyes-clenched-shut-nobody-does-things-in-any-other-way-but-ours in software development is still staggering, even today

[14:22:00.0000] <Lirodon>
Hixie, oh good. phpbb 3. finally :>


2011-12-24
[03:32:00.0000] <annevk>
I wonder what I did to upset :emk

[04:24:00.0000] <kennyluck>
annevk, because you close the bug he filed as INVALID?

[04:24:01.0000] <kennyluck>
(not sure I am getting the right context)

[04:33:00.0000] <bga>
https://developer.mozilla.org/en/CSS/-webkit-mask

[04:42:00.0000] <annevk>
this was

[04:42:01.0000] <annevk>
https://bugzilla.mozilla.org/show_bug.cgi?id=712876

[04:42:02.0000] <annevk>
but maybe that was all it took :)

[04:48:00.0000] <annevk>
bga: heh

[04:54:00.0000] <bga>
expansion of webkit

[05:08:00.0000] <annevk>
interesting how Chrome just renders passed the point where it was supposed to stop displaying things

[05:08:01.0000] <annevk>
http://www.w3.org/TR/2010/PR-MathML3-20100810/chapter2.xml

[05:09:00.0000] <annevk>
same in Safari

[05:09:01.0000] <annevk>
only browser that cannot render that page is Gecko

[05:10:00.0000] <annevk>
XML interoperability just took a nose dive?

[05:25:00.0000] <annevk>
browser market is pretty healthy these days: http://en.wikipedia.org/wiki/Usage_share_of_web_browsers

[05:26:00.0000] <annevk>
pretty optimal for aligning browsers (if they're willing)

[08:12:00.0000] <GPHemsley>
/me was wondering the same thing, annevk

[08:15:00.0000] <Ms2ger>
GPHemsley++

[08:15:01.0000] <Ms2ger>
btw

[08:32:00.0000] <GPHemsley>
/me made a comment that he homes makes things better

[14:16:00.0000] <annevk>
oh hey, thanks GPHemsley


2011-12-25
[21:52:00.0000] <JonathanNeal>
Merry Christmas!

[00:54:00.0000] <matjas>
https://plus.google.com/113127438179392830442/posts/T615Md5JPQG harmony in chrome canary — anyone know how to opt-in to harmony?

[00:54:01.0000] <matjas>
"use even moar strict"?

[02:47:00.0000] <Druid_>
so mal rebootzen

[05:23:00.0000] <bga>
http://www.wagon-bertrand.fr/southParkCSS3/

[10:25:00.0000] <dglazkov>
Merry Christmas, Whatwg!

[10:28:00.0000] <gsnedders>
Wow, dglazkov changed what he said.

[10:28:01.0000] <gsnedders>
I wonder if he's ill.

[10:31:00.0000] <bga>
he have if(date == 25 && month == 12) echo 'Merry Christmas' else 'Good Morning'; echo ', Whatwg'

[10:31:01.0000] <bga>
smart script!

[13:54:00.0000] <jgraham>
Probably at least one of those numbers is zero-based :)

[14:15:00.0000] <bga>
should both :P


2011-12-26
[19:45:00.0000] <MikeSmith>
http://mpeg.chiariglione.org/working_documents/mpeg-04/part29/WVC.zip

[19:47:00.0000] <MikeSmith>
the "WebVC" profile of H.264 that Apple and Cisco and others want to make royalty-free

[19:53:00.0000] <zewt>
zero confidence in anything "free" related to the MPEG-LA

[19:55:00.0000] <zewt>
the *most* benign motive i can think of for them doing anything like that is keeping more resources from going into genuinely-free competing tech

[20:18:00.0000] <MikeSmith>
zewt: yeah

[20:19:00.0000] <MikeSmith>
as Rob Glidden has put it, "It seems every few months a patent pool or some one manages to spin up wishful thinking that there will soon be a “new deal” that will answer the needs of royalty free communities, only to cleverly leave the hopeful twisting in the wind."

[20:21:00.0000] <MikeSmith>
but WebVC is a bit different in that it's not an effort from MPEG overall, but instead a proposal from Apple and others that they are trying to convince the other MPEG members to make royalty free

[20:21:01.0000] <MikeSmith>
so it seems good that they are trying at least

[20:47:00.0000] <zewt>
doesn't seem terribly good that they're trying to arrange for the web to use a format that's "free" in some particular (presumably limited profile) state, whose other features and future development have no promise of following suit

[20:48:00.0000] <zewt>
(call me cynical; with anything involving organizations like the MPEG-LA, it's usually the safest default)

[02:43:00.0000] <MikeSmith>
anybody aware of Selectors API test suites other than http://dev.w3.org/2006/webapi/selectors-api-testsuite/ and http://ejohn.org/apps/selectortest/ ?

[02:43:01.0000] <annevk>
Gecko removed support for UTF-32 right? I wonder why it's still in http://mxr.mozilla.org/mozilla/source/intl/uconv/src/charsetalias.properties

[02:45:00.0000] <annevk>
Quite a few cases in http://mxr.mozilla.org/mozilla/source/intl/uconv/src/charsetalias.properties have uppercase characters in the key

[02:45:01.0000] <annevk>
e.g. "csMacintosh" and "csIBM864"...

[02:46:00.0000] <Ms2ger>
Those may be bugs, actually

[02:47:00.0000] <Ms2ger>
Or not

[02:47:01.0000] <annevk>
At some point bugs become features :)

[02:48:00.0000] <annevk>
Gecko also still has the three Thai encodings as distinct

[02:49:00.0000] <Ms2ger>
I thought I remembered that those weren't picked up, but I don't find code to back that up

[02:49:01.0000] <annevk>
I believe that's true

[02:50:00.0000] <annevk>
aah https://bugzilla.mozilla.org/show_bug.cgi?id=235090

[02:51:00.0000] <annevk>
UTF-16 is as recent as 2004

[02:51:01.0000] <annevk>
well part of it

[02:51:02.0000] <annevk>
I guess back then there still was a chance to get rid of it

[02:53:00.0000] <MikeSmith>
annevk: do you know of XHR test suite other than http://tc.labs.opera.com/apis/XMLHttpRequest/ ?

[02:54:00.0000] <annevk>
the CORS tests uploaded recently have XHR tests in them

[02:54:01.0000] <MikeSmith>
uploaded to where?

[02:54:02.0000] <MikeSmith>
dvcs?

[02:54:03.0000] <annevk>
http://dvcs.w3.org/hg/webappsec/

[02:55:00.0000] <MikeSmith>
hai

[02:55:01.0000] <MikeSmith>
thanks

[03:56:00.0000] <annevk>
never really thought about this http://www.reddit.com/r/IAmA/comments/nqerr/i_am_a_totally_blind_redditer/c3b6z7a that's kind of a major fail

[04:00:00.0000] <MikeSmith>
annevk: does anybody support the From-Origin header yet?

[04:00:01.0000] <annevk>
don't think so

[04:00:02.0000] <MikeSmith>
k

[04:01:00.0000] <MikeSmith>
know if there are any test suites for data URL support?

[04:02:00.0000] <annevk>
http://hixie.ch/tests/adhoc/data/

[04:02:01.0000] <MikeSmith>
thanks

[06:56:00.0000] <MikeSmith>
hmm, seeing some odd behavior with http://platform.html5.org/ in Opera

[06:57:00.0000] <MikeSmith>
try any of the links after the Server-Sent Events ones

[07:05:00.0000] <annevk>
works here...

[07:06:00.0000] <annevk>
ooh

[07:06:01.0000] <annevk>
a bit further on I do notice something odd

[07:06:02.0000] <smaug____>
Hixie: ping

[09:58:00.0000] <zewt>
wow. firefox with the single worst browser slogan I've ever seen: "Different by Design"

[10:12:00.0000] <zewt>
heh ff9 fullscreen api is seriously buggy ... no wonder it's disabled by default (but they shouldn't have mentioned it in the changelog)

[11:59:00.0000] <Yuhong>
I wonder about how much of the CSS2 recommendation from 1998 turned out to be implementable.

[12:00:00.0000] <gsnedders>
I don't there was that much that was, if only because it is so vague.

[12:00:01.0000] <gsnedders>
The vagueness leads to contradictions in edge-cases, though, to be fair.

[12:01:00.0000] <Yuhong>
Can anyone estimate a percentage?

[12:35:00.0000] <tantek>
Yuhong, Gsnedders, most of it was implementable.

[12:36:00.0000] <tantek>
even if vague

[12:37:00.0000] <Yuhong>
tantek: Yea, text-shadow in particular was I read implemented by Tasman, while it is only IE10 that finally implemented it in Trident.

[12:37:01.0000] <tantek>
gsnedders, on the contrary, vagueness leads to being able to resolve apparent contradictions by selective interpretation of said vagueness.

[12:37:02.0000] <tantek>
It's excessive precision (duplicated across sections/chapters) that lead to most contradictions.

[12:37:03.0000] <gsnedders>
tantek: Yeah, I know

[12:37:04.0000] <Yuhong>
tantek: I bitched in Chris Wilson's blog about Tasman not being ported to Windows. You worked at MS doing it, right?

[12:38:00.0000] <tantek>
Yuhong, yes, I was the dev lead for Tasman

[12:38:01.0000] <gsnedders>
I was under the impression that Tasman was ported to Windows, albeit never shipped

[12:38:02.0000] <tantek>
gsnedders, that's right.

[12:38:03.0000] <annevk>
what's the difference between http://mxr.mozilla.org/mozilla-central/source/intl/uconv/src/ and http://mxr.mozilla.org/mozilla/source/intl/uconv/src/

[12:38:04.0000] <gsnedders>
tantek: Not for IE, though, right?

[12:38:05.0000] <tantek>
and ported to numerous other OS's/processors (mostly embedded systems like set top boxes etc.)

[12:39:00.0000] <gsnedders>
tantek: Or was it intented that IE would use it eventually?

[12:39:01.0000] <tantek>
gsnedders - there was a Win32 Tasman Shell that ran the Tasman engine.

[12:39:02.0000] <tantek>
There was a possibility of using Tasman to do XHTML rendering.

[12:39:03.0000] <tantek>
But then it turned out that XHTML didn't matter.

[12:39:04.0000] <Yuhong>
tantek: Has hooking Tasman via X-UA-Compatible been considered?

[12:40:00.0000] <tantek>
Yuhong, since the latter years of the 2000s, browser engines long since eclipsed Tasman.

[12:41:00.0000] <Yuhong>
tantek: But it might have a good starting point. I know it is too late for it now though.

[12:41:01.0000] <tantek>
except perhaps in size/speed (we got it down to being smaller than Opera, less memory requirements, and much faster)

[12:42:00.0000] <Ms2ger`>
annevk, the latter is Firefox 3.0

[12:42:01.0000] <gsnedders>
tantek: How many people did you have working on it the time of IE/Mac's cancelation?

[12:43:00.0000] <Yuhong>
tantek: But what about back in 2007-2008?

[12:43:01.0000] <Yuhong>
tantek: When X-UA-Compatible was being considered during IE8 development.

[12:44:00.0000] <gsnedders>
I doubt Tasman would be a better base than Trident as-of-IE8 for what has been implemented CSS-wise in IE9/10.

[12:45:00.0000] <gsnedders>
IE8 gave them a layout engine that's probably a decent advantage over everyone else for a lot of the more radical CSS3 modules.

[12:45:01.0000] <Yuhong>
gsnedders: I know by the time of IE9 it was too late, but I am talking about during *IE8* development.

[12:46:00.0000] <gsnedders>
Yuhong: I expect regardless of choice of Trident/Tasman you're gonna have to rewrite a lot of it for make up for years of non-development.

[12:46:01.0000] <gsnedders>
When you're rewriting it, it won't make much difference as to which you choose.

[12:51:00.0000] <Yuhong>
gsnedders: but note for example Tasman already implemented XHTML, while IE8 didn't.

[12:52:00.0000] <Yuhong>
gsnedders: And IE6/7 lack of support for XHTML was already bad enough.

[12:53:00.0000] <gsnedders>
True, but plenty of people don't view lack of XHTML support as a major concern.

[12:53:01.0000] <gsnedders>
(Though I was led to believe Trident had major architectural issues that made it difficult)

[12:57:00.0000] <annevk>
Ms2ger`: interesting, so where did charsetalias.properties move?

[13:00:00.0000] <annevk>
Ms2ger`: is that http://mxr.mozilla.org/mozilla-central/source/intl/uconv/src/nsUConvModule.cpp now?

[13:00:01.0000] <Ms2ger`>
intl/locale/src/charsetalias.properties

[13:00:02.0000] <Ms2ger`>
(Bug 637599)

[13:01:00.0000] <Yuhong>
So can anyone estimate the percentage of CSS2 recommendation that was implementable?

[13:01:01.0000] <Yuhong>
So can anyone estimate the percentage of the CSS2 recommendation from 1998 that was implementable?

[13:01:02.0000] <Ms2ger`>
Sure

[13:01:03.0000] <Ms2ger`>
About 142%, I'd say

[13:05:00.0000] <annevk>
thanks Ms2ger`

[13:06:00.0000] <annevk>
Ms2ger`: that file looks more reasonable than the one I have been looking at

[13:06:01.0000] <Ms2ger`>
Np

[13:09:00.0000] <Yuhong>
gsnedders: Yea, IE9 had to rewrite the XML support.

[13:09:01.0000] <Yuhong>
gsnedders: Before IE9, XML parsing in IE used the external MSXML library.

[13:10:00.0000] <Yuhong>
(in IE6 and later, MSXML3)

[13:35:00.0000] <Yuhong>
I wonder if there is a way to fool sites into thinking that document.all exists.

[13:35:01.0000] <Yuhong>
I wonder if there is a way to fool sites into thinking that document.all exists in Mozilla.

[13:37:00.0000] <Yuhong>
(I want to play with this: http://grox.net/doc/web/javascript/dynduo/)

[13:38:00.0000] <Yuhong>
Funny thing that Mozilla only now is completing their support for the IE4 DOM.

[15:51:00.0000] <Yuhong>
Trivia: You can set contentEditable in IE8 and later's Developer Tools.

[15:51:01.0000] <Yuhong>
I am using that to play around.


2011-12-27
[16:43:00.0000] <MikeSmith>
http://www.w3.org/2005/Incubator/htmlspeech/XGR-htmlspeech-20111206/ is actually a really interesting document

[16:44:00.0000] <smaug____>
MikeSmith: comments welcome :)

[16:44:01.0000] <MikeSmith>
smaug____: you participated in that XG?

[16:45:00.0000] <smaug____>
yup

[16:45:01.0000] <MikeSmith>
oh cool

[16:45:02.0000] <MikeSmith>
I see your name in the editors list

[16:51:00.0000] <MikeSmith>
smaug____: the intro at http://www.w3.org/2005/Incubator/htmlspeech/XGR-htmlspeech-20111206/#introduction is the clearest high-level overview as far as explaining to Web-app developers what the proposed features would enable

[16:52:00.0000] <MikeSmith>
I think I'll point people to that part to read first

[16:53:00.0000] <smaug____>
yeah

[16:54:00.0000] <smaug____>
Google wants to do a smaller API first

[16:54:01.0000] <smaug____>
probably in WebApps WG if possible

[16:55:00.0000] <smaug____>
and I agree, smaller API first would be good

[16:55:01.0000] <smaug____>
implementing everything from the XG report is a huge task

[17:13:00.0000] <MikeSmith>
smaug____: yeah, it's pretty ambitious

[17:13:01.0000] <MikeSmith>
I would like to see a proposal for that smaller API

[01:37:00.0000] <webben>
what spec should i be looking at for the replacement for mutation events?

[01:42:00.0000] <Ms2ger>
DOM4

[01:45:00.0000] <webben>
Ms2ger: Ah, cheers.

[02:14:00.0000] <MikeSmith>
Ms2ger: on http://platform.html5.org/ yesterday, I added links to test suites/test cases where I could find any

[02:14:01.0000] <MikeSmith>
including to "submitted" tests, not just to approved ones

[02:14:02.0000] <MikeSmith>
the ⓣ links

[02:15:00.0000] <MikeSmith>
if you see anything missing that I should add links for, lemme know

[02:15:01.0000] <MikeSmith>
or fork https://github.com/sideshowbarker/platform.html5.org and make a pull request

[02:18:00.0000] <MikeSmith>
annevk: all links after Server-Sent Events ones still not working in my Opera

[02:19:00.0000] <MikeSmith>
and still I have no clue why

[02:19:01.0000] <MikeSmith>
looked at DOM and it's as expected

[02:19:02.0000] <MikeSmith>
and no errors logged to console

[02:20:00.0000] <zcorpan>
wfm

[02:24:00.0000] <MikeSmith>
zcorpan: weird

[02:25:00.0000] <MikeSmith>
I see the same problem in both Opera.next and 11.60

[02:41:00.0000] <Ms2ger>
Does HTML5 still have classList?

[02:41:01.0000] <MikeSmith>
did last time I checked

[02:42:00.0000] <MikeSmith>
http://www.whatwg.org/specs/web-apps/current-work/multipage/elements.html#dom-classlist

[02:42:01.0000] <Ms2ger>
/me files a bug

[02:45:00.0000] <MikeSmith>
Ms2ger: was it meant to be dropped?

[02:45:01.0000] <Ms2ger>
smaug____, were you working on a ProgressEvent constructor already?

[02:45:02.0000] <Ms2ger>
MikeSmith, it's moved to DOM

[02:45:03.0000] <MikeSmith>
ah

[02:45:04.0000] <smaug____>
Ms2ger: there is a bug open for that

[02:45:05.0000] <Ms2ger>
Good

[02:45:06.0000] <smaug____>
Ms2ger: bug 710882

[02:47:00.0000] <Ms2ger>
MikeSmith, http://w3c-test.org/html/, http://test.csswg.org/harness/

[02:47:01.0000] <Ms2ger>
http://hg.ecmascript.org/tests/test262/

[02:48:00.0000] <Ms2ger>
SVG also has tests somewhere

[02:48:01.0000] <MikeSmith>
yeah, I'll ask Doug about those

[02:50:00.0000] <MikeSmith>
thanks for the other links -- added

[02:50:01.0000] <Ms2ger>
https://dvcs.w3.org/hg/webevents/raw-file/6c149e83cd5d/test/touchevents/single-touch.html is apparently the only touch events test

[02:51:00.0000] <smaug____>
there is another for multitouch

[02:51:01.0000] <smaug____>
a simple one

[02:51:02.0000] <smaug____>
somewhere in pettay.fi. Art should move it to w3.org

[02:51:03.0000] <MikeSmith>
/me adds that one for now

[02:52:00.0000] <MikeSmith>
/me finds http://w3c.pettay.fi/webevents/tests/touchevents/

[02:55:00.0000] <smaug____>
MikeSmith: yeah, the single-touch.html should be the same as what is now in w3.org

[02:55:01.0000] <MikeSmith>
ah, OK

[03:29:00.0000] <Velmont>
zcorpan, MikeSmith: I have the same problem with links after SSE not working on http://platform.html5.org/

[03:30:00.0000] <MikeSmith>
Velmont: oh, cool

[03:30:01.0000] <MikeSmith>
well, not cool

[03:30:02.0000] <MikeSmith>
but at least we know it's reproducible

[03:30:03.0000] <MikeSmith>
and not a figment of my imagination

[03:30:04.0000] <MikeSmith>
oh

[03:30:05.0000] <MikeSmith>
it's Velmont

[03:30:06.0000] <Velmont>
MikeSmith: lol :P -- Yes, some bug with links and columns then I guess. I'll see if I can make a reduced TC.

[03:30:07.0000] <MikeSmith>
file a but please man

[03:31:00.0000] <MikeSmith>
thanks (about making reduced test case)

[03:33:00.0000] <annevk>
ah shit

[03:33:01.0000] <annevk>
I need a bigger harddisk

[03:33:02.0000] <annevk>
I wonder how much a 256 goes for these days

[03:34:00.0000] <MikeSmith>
Velmont: hmm, yeah, I see now if I switch from 3-column to 2-column or single-column, the problem goes away

[03:34:01.0000] <Ms2ger>
TB?

[03:34:02.0000] <zcorpan>
SSD?

[03:34:03.0000] <MikeSmith>
Velmont: oh, actually I see it doesn't -- it just moves

[03:36:00.0000] <MikeSmith>
Ms2ger: thanks for moving those tests

[03:36:01.0000] <Ms2ger>
Np

[03:36:02.0000] <MikeSmith>
I had actually been planning to do that but you are far lazier than me

[03:36:03.0000] <annevk>
yeah SSD

[03:36:04.0000] <MikeSmith>
Ms2ger: I should send you a copy of my TODO list

[03:37:00.0000] <annevk>
I'm on 128 now and with this new Windows 7 installation within VMWare it's beginning to crack down

[03:37:01.0000] <Ms2ger>
I'd been planning to do that for months as well :)

[03:38:00.0000] <MikeSmith>
heh

[03:38:01.0000] <MikeSmith>
/me adds some more test links

[03:39:00.0000] <MikeSmith>
sweet

[03:39:01.0000] <MikeSmith>
those tests even use testharness.js

[03:42:00.0000] <annevk>
I guess I'll call the shop that ordered my MacBook, see if they can do something

[03:42:01.0000] <Velmont>
It's seemingly affected by the height of the browser window...

[03:42:02.0000] <annevk>
hah, I do have 8GiB of memory

[03:43:00.0000] <MikeSmith>
Velmont: I see

[03:43:01.0000] <zcorpan>
/me also has 128 and 8

[03:43:02.0000] <Velmont>
Less height = less linky goodness, more height = more linky goodness.

[03:43:03.0000] <MikeSmith>
aha

[03:44:00.0000] <Velmont>
Smells optimization.

[03:44:01.0000] <MikeSmith>
devs getting too smart for their own good

[03:45:00.0000] <MikeSmith>
it is great to have proper column-break support, though (outside of the link bug)

[03:46:00.0000] <MikeSmith>
things don't look so great if a browser breaks the column right after a <dt> instead of before it

[03:48:00.0000] <MikeSmith>
anybody know if Hallvord has tests for Clipboard API and events?

[03:48:01.0000] <MikeSmith>
also, any tests somewhere for requestAnimationFrame

[03:48:02.0000] <annevk>
zcorpan: does platform.html5.org also work for you on the second column?

[03:48:03.0000] <zcorpan>
yes

[03:48:04.0000] <annevk>
Ms2ger: Gecko did remove initCustomEvent, right?

[03:48:05.0000] <annevk>
zcorpan: oh

[03:49:00.0000] <Velmont>
zcorpan: What screen size?

[03:50:00.0000] <Ms2ger>
Not sure

[03:51:00.0000] <Ms2ger>
Doesn't look like it

[03:52:00.0000] <MikeSmith>
and still haven't found any Web Messaging tests

[03:59:00.0000] <smaug____>
annevk: I'm not removing any init*Event methods from gecko

[04:00:00.0000] <smaug____>
I mean, not right now

[04:00:01.0000] <zcorpan>
Velmont: worked with various zoom levels

[04:01:00.0000] <MikeSmith>
heh "I still can't believe javascript - the f**ing backbone-language of the web - doesn't offer an API for mutating URLs."

[04:01:01.0000] <Ms2ger>
It does now, doesn't it?

[04:12:00.0000] <annevk>
I wonder what Marat wants the DOM4 editors to say

[04:12:01.0000] <annevk>
smaug____: kk

[04:12:02.0000] <Ms2ger>
"bz is right"

[04:12:03.0000] <smaug____>
:)

[04:17:00.0000] <MikeSmith>
is the URL API actually supported already?

[04:18:00.0000] <Ms2ger>
smaug____, do you remember if we landed the Gecko patch?

[04:18:01.0000] <MikeSmith>
oh, it is in Gecko

[04:19:00.0000] <annevk>
meh

[04:20:00.0000] <annevk>
not exactly cheap

[04:20:01.0000] <MikeSmith>
how do I get an actual console with completion in Dragonfly?

[04:21:00.0000] <bga>
lol http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html

[04:21:01.0000] <smaug____>
Ms2ger: which gecko patch?

[04:21:02.0000] <smaug____>
Ms2ger: for URLs?

[04:21:03.0000] <Ms2ger>
Yeah

[04:21:04.0000] <smaug____>
I don't think so

[04:22:00.0000] <Ms2ger>
/me checks

[04:23:00.0000] <annevk>
bga: what?

[04:23:01.0000] <bga>
do you want standardize all things in the world?

[04:24:00.0000] <Ms2ger>
Nope

[04:24:01.0000] <Ms2ger>
bga, yes.

[04:24:02.0000] <bga>
anyway api is bad

[04:24:03.0000] <annevk>
send feedback!

[04:24:04.0000] <bga>
sec

[04:33:00.0000] <Velmont>
MikeSmith: ...? Go to the console tab? It should have tab completion.

[04:34:00.0000] <MikeSmith>
Velmont: don't seem to do completion for me the way it used to.. Maybe I need to upgrade my Dragonfly

[04:35:00.0000] <MikeSmith>
oh

[04:35:01.0000] <MikeSmith>
working as expected in my Opera.next

[04:35:02.0000] <MikeSmith>
weird

[04:36:00.0000] <Velmont>
It works here in 11.60. But then again, -- you can run any other DragonFly in the browser, -- Opera doesn't really bundle DragonFly but downloads it from the web and uses appcache to store it. AFAIR.

[04:42:00.0000] <MikeSmith>
Velmont: yeah, I knew that and thought it also auto-updated

[04:43:00.0000] <MikeSmith>
how do I tell what version of Dragonfly I have?

[04:46:00.0000] <MikeSmith>
oh, found it

[04:46:01.0000] <MikeSmith>
Settings > About in Dragonfly

[04:59:00.0000] <kennyluck>
webben, (re. what spec should i be looking at for the replacement for mutation events?) and the undomanager spec maybe?

[05:01:00.0000] <bga>
annevk beta version :) http://pastie.org/3079269

[05:02:00.0000] <bga>
full decomposition

[05:04:00.0000] <annevk>
bga: URIs are called URLs in APIs

[05:05:00.0000] <annevk>
no opinion other than that really, emailing whatwg⊙wo seems best

[05:05:01.0000] <bga>
fixed

[05:08:00.0000] <annevk>
for people with opinions on encodings and conformance checkers: https://www.w3.org/Bugs/Public/show_bug.cgi?id=15332

[05:08:01.0000] <annevk>
(already added hsivonen)

[05:31:00.0000] <AryehGregor>
/me gloomily contemplates 427 unread conversations in his spec inbox

[05:33:00.0000] <annevk>
I was gonna say that it's not a lot of email, but I guess it's a bit more email than 427 if that's conversations

[05:34:00.0000] <annevk>
MikeSmith: what would r12a want?

[05:34:01.0000] <MikeSmith>
dunno

[05:34:02.0000] <Ms2ger>
Is wwrw the new wwjd?

[05:35:00.0000] <MikeSmith>
annevk: he's already not happy about the reporting that v.nu does for UTF-16

[05:35:01.0000] <gsnedders>
Oh, I guess it's Merry Hixieday today!

[05:36:00.0000] <MikeSmith>
annevk: actually, I think he's not happy about what the spec says about use of UTF-16

[05:36:01.0000] <Ms2ger>
Indeed it is

[05:36:02.0000] <annevk>
wwrw?

[05:37:00.0000] <annevk>
AryehGregor: I guess you're married now, so congratulations again!

[05:37:01.0000] <AryehGregor>
Thanks.

[05:37:02.0000] <gsnedders>
AryehGregor: Congrats!

[05:38:00.0000] <Ms2ger>
^What they said

[05:38:01.0000] <annevk>
MikeSmith: we could make an exception for UTF-16, though everyone tells me it's a world of hurt

[05:38:02.0000] <annevk>
MikeSmith: making an exception for tis-620 and such though... dunno

[05:38:03.0000] <MikeSmith>
yeah

[05:40:00.0000] <MikeSmith>
about conformance-checking tools, Richard has an online tool that he's put a lot of work into and that represents what he thinks the proper type/level of reporting should be, so he kind of uses that a benchmark

[05:41:00.0000] <MikeSmith>
http://validator.w3.org/i18n-checker/

[05:44:00.0000] <MikeSmith>
oh hey

[05:44:01.0000] <MikeSmith>
for non-UTF8 docs, it does actually report "Non-UTF-8 character encoding declared"

[05:44:02.0000] <MikeSmith>
so maybe I need to STFU

[05:45:00.0000] <Ms2ger>
That certainly would make life less interesting

[05:45:01.0000] <MikeSmith>
heh

[05:45:02.0000] <annevk>
so if serve "7A 00" as utf-16be only IE outputs "z"

[05:45:03.0000] <MikeSmith>
and expanding that message shows among others things "UTF-16 is also a character encoding based on Unicode, but is little used on the Web, and generally best avoided."

[05:45:04.0000] <annevk>
everyone else gives "稀"

[05:46:00.0000] <annevk>
if I serve it up as utf-16 (without BOM) everyone defaults to utf-16le

[05:47:00.0000] <MikeSmith>
man, Richard puts a lot of work into this stuff -- he's added more since the last time I checked: "Using non-UTF-8 encodings can also have unexpected results on form submission and URL encodings... It is not a requirement to use UTF-8, but the HTML5 specification recommends its use, and you should consider it."

[05:48:00.0000] <MikeSmith>
and also "What to do: Replace the http-equiv and content attributes in your meta tag with a charset attribute"

[05:48:01.0000] <annevk>
utf-16le with FE FF 7A 00 results in "稀" in WebKit/IE

[05:48:02.0000] <annevk>
Gecko gives "�竿" and Opera "�z"...

[05:49:00.0000] <gsnedders>
Oh nice. :\

[05:51:00.0000] <annevk>
for utf-16be with le BOM it's kind of the same

[05:51:01.0000] <annevk>
conclusions: BOM is more important

[05:51:02.0000] <annevk>
utf-16le == utf-16 in WebKit/Trident

[05:51:03.0000] <annevk>
(afaict)

[05:56:00.0000] <annevk>
gsnedders: just to be sure, PHP just looks at octets right?

[05:56:01.0000] <gsnedders>
annevk: yup

[05:56:02.0000] <annevk>
gsnedders: that is I can write PHP using ASCII octets and follow the ?> with utf-16 octets

[05:57:00.0000] <annevk>
/me uses PHP to set a header

[05:57:01.0000] <gsnedders>
annevk: PHP has no concept of anything except ASCII

[05:57:02.0000] <annevk>
and it also doesn't mangle anything right?

[05:57:03.0000] <annevk>
in that sense it's kind of neat

[05:57:04.0000] <annevk>
maybe also vulnerable and what not, but neat

[05:58:00.0000] <gsnedders>
annevk: indeed

[05:59:00.0000] <annevk>
thanks

[06:51:00.0000] <annevk>
emailed utf-16 research to the WHATWG list

[06:51:01.0000] <annevk>
took a while to write it all out

[06:56:00.0000] <zewt>
annevk: using html mail set to a fixed-width font for tables makes them more readable for a lot of people, fyi

[06:58:00.0000] <annevk>
wait I'm using html email?

[06:58:01.0000] <divya>
ouch

[06:59:00.0000] <annevk>
I'm writing plain text as far as I know

[06:59:01.0000] <annevk>
http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-December/034260.html confirms

[06:59:02.0000] <zewt>
no, i mean if you have stuff that needs to be viewed as fixed-width, it's best to include an html version so you can set that

[06:59:03.0000] <zewt>
else you get the default of "whatever the user's viewer is set to", which will often be proportional

[07:00:00.0000] <zewt>
setting fonts in email has few legitimate use cases, but this is one of them

[07:00:01.0000] <annevk>
AryehGregor: please read IDL before filing a bug

[07:00:02.0000] <annevk>
AryehGregor: in particular (Node or DOMString) is valid

[07:00:03.0000] <annevk>
afaik

[07:00:04.0000] <AryehGregor>
You mean WebIDL?

[07:00:05.0000] <AryehGregor>
/me looks

[07:01:00.0000] <AryehGregor>
Is that a recent change?

[07:01:01.0000] <annevk>
yes

[07:01:02.0000] <AryehGregor>
Oh, I see.

[07:01:03.0000] <annevk>
in any event, I disagree with the premise of your bug

[07:02:00.0000] <annevk>
I'm not going to define experimental IDL in prose if I expect IDL to define it at some point in the near future

[07:02:01.0000] <AryehGregor>
Well, as long as there's at least a concrete proposal for the syntax that's expected to be looked at soon.

[07:03:00.0000] <AryehGregor>
Then I don't have an issue with it, if it's going to be resolved soon.  No need to have strict ordering in that case.

[09:55:00.0000] <AryehGregor>
Is there any JS-visible difference between "interface Foo { void foo(); }; interface Bar { void bar(); }; Foo implements Bar;" and "interface Foo { void foo(); void bar(); };"?

[09:56:00.0000] <AryehGregor>
I mean, does "implements" just mean "pretend all the interface members are really on the other interface too"?

[09:57:00.0000] <bga>
depends how you implement OOP

[09:58:00.0000] <AryehGregor>
How so?

[09:58:01.0000] <bga>
var Bar = { bar:  }; var Foo = { __proto__: Bar, foo: }

[09:58:02.0000] <bga>
1st case

[09:59:00.0000] <AryehGregor>
I'm asking what the WebIDL spec requires.

[10:01:00.0000] <smaug____>
AryehGregor: there is certainly difference. In the latter case "Bar" in window would be false

[10:02:00.0000] <smaug____>
(but I don't recall what WebIDL says about prototypes)

[10:02:01.0000] <Ms2ger>
AryehGregor, if you add [NoInterfaceObject], I think not

[10:02:02.0000] <AryehGregor>
Alternatively, is it the same as "interface Foo { void foo(); void bar(); }; interface Bar { void bar(); };"?

[10:03:00.0000] <smaug____>
hmm, what does WebIDL say about instanceof

[10:04:00.0000] <Ms2ger>
Read it :)

[10:04:01.0000] <AryehGregor>
I don't think it says anything.

[10:04:02.0000] <AryehGregor>
It just uses the ES5 definition, doesn't it?

[10:04:03.0000] <Ms2ger>
Anyway, you probably shouldn't use implements without [NoInterfaceObject]

[10:15:00.0000] <AryehGregor>
The IDLs for CSSOM and HTML have circular dependencies.  :(

[10:15:01.0000] <AryehGregor>
(well, not exactly, but an IDL for CSSOM depends on one from HTML and vice versa)

[10:18:00.0000] <Philip`>
Solution: put all web technologies into a single spec

[10:18:01.0000] <GPHemsley>
Is there a reason that WHATWG specs exclude <head> and <body> in their source?

[10:19:00.0000] <GPHemsley>
oh, wait, they

[10:19:01.0000] <GPHemsley>
're not WHATWG

[10:19:02.0000] <GPHemsley>
I'm looking specifically at this: http://dvcs.w3.org/hg/url/raw-file/tip/Overview.html

[10:19:03.0000] <AryehGregor>
New WebIDL question: is there any difference between "interface Foo {}; partial interface Foo { void foo(); };" and "interface Foo {}; [NoInterfaceObject] interface Bar { void foo(); }; Foo implements Bar;"?  Except that the former doesn't work if you want multiple interfaces to get the member?

[10:20:00.0000] <AryehGregor>
GPHemsley, the <head> and <body> tags are optional in text/html.  No reason to include them unless you want attributes on them, usually (there are some other possible reasons).

[10:20:01.0000] <GPHemsley>
/me never likes the "it's optional, so I leave it out" <s>excuse</s> explanation

[10:21:00.0000] <GPHemsley>
also, why not take advantage of <header>?

[10:21:01.0000] <zewt>
typically the burden is to explain why to include something that's optional, not why to exclude it

[10:21:02.0000] <GPHemsley>
(etc.)

[10:22:00.0000] <GPHemsley>
zewt: Something like the difference between <head> and <body> seems pretty fundamental to me

[10:22:01.0000] <GPHemsley>
structurally/mentally-speaking

[10:22:02.0000] <webben>
GPHemsley: Wot?

[10:23:00.0000] <GPHemsley>
"just because you CAN do something doesn't mean you SHOULD"

[10:23:01.0000] <webben>
GPHemsley: Can you describe what the advantage of including redundant syntax would be in this case?

[10:23:02.0000] <TabAtkins>
I assume we're talking about nested-microdata-in-head?

[10:23:03.0000] <GPHemsley>
webben: legibility, at least

[10:24:00.0000] <GPHemsley>
TabAtkins: No, something much less complex.

[10:24:01.0000] <webben>
GPHemsley: Legibility to whom?

[10:24:02.0000] <GPHemsley>
me :)

[10:24:03.0000] <webben>
GPHemsley: Why do you need to be able to read the spec's source?

[10:25:00.0000] <GPHemsley>
Shouldn't one have the ability to read any page's source...? Otherwise, why aren't the elements just named <1> <2> <3> etc.?

[10:25:01.0000] <Ms2ger>
GPHemsley, that file is generated, there's no point in optimizing its legibility

[10:25:02.0000] <zewt>
seems more like "i'm used to doing this so I think it's weird not to simply due to habit"

[10:26:00.0000] <GPHemsley>
zewt: I'm sure that's part of it, but I think it's more than that.

[10:26:01.0000] <webben>
GPHemsley: 1) No, why? 2) Because good names makes it easier to know how to use them.

[10:27:00.0000] <webben>
GPHemsley: Particularly, with respect to 1) if WHATWG should be optimising for anything you could argue it should be performance.

[10:27:01.0000] <GPHemsley>
Well, thinking out loud, what is the burden on the parser to have determine where the <head> stuff ends?

[10:27:02.0000] <GPHemsley>
heh

[10:27:03.0000] <webben>
GPHemsley: There's no special burden on the parser.

[10:28:00.0000] <GPHemsley>
that's interesting

[10:28:01.0000] <webben>
GPHemsley: It knows it's left <head> as soon it see a start tag that cannot exist in <head>.

[10:29:00.0000] <Ms2ger>
The parser has to handle this anyway, so that's not a particularly compelling argument

[10:29:01.0000] <GPHemsley>
So then the <head> and <body> tags are vestigial and irrelevant now?

[10:29:02.0000] <TabAtkins>
Basically, yeah.

[10:30:00.0000] <GPHemsley>
interesting

[10:30:01.0000] <Ms2ger>
Well, now

[10:30:02.0000] <TabAtkins>
If by "now" you mean "since at least the last decade, and probably the decade before that".

[10:30:03.0000] <Ms2ger>
What TabAtkins said

[10:30:04.0000] <webben>
GPHemsley: I agree if you're trying to optimize for least surprise for fellow developers, then you might want to be explicit about implied elements.

[10:30:05.0000] <zewt>
since afaik no new tags can ever be added to <head> (because it would cause incompat between browsers that know the tag and those that don't), it sort of dead-ends <head> as a concept anyway

[10:30:06.0000] <webben>
GPHemsley: But that's not the only possible dimension around which to optimize (esp. production) source code.

[10:31:00.0000] <GPHemsley>
zewt: Yeah, I'd just read something to that effect.

[10:31:01.0000] <zewt>
leading to weirdness like people trying to wedge <intent> into <link>

[10:31:02.0000] <webben>
GPHemsley: (Also, in practice people generally don't remember all the implicit elements. Few people add implied TBODY for example.

[10:32:00.0000] <zewt>
also, having less boilerplate for simple documents is an overall win

[10:32:01.0000] <webben>
GPHemsley: Also, people generally don't complain when JS and CSS get minified.

[10:32:02.0000] <GPHemsley>
ack, ok

[10:32:03.0000] <GPHemsley>
sheesh

[10:32:04.0000] <zewt>
webben: i despise minifiers

[10:32:05.0000] <webben>
(This does have an effect on the web of course - less learning by C+P. But everything involves a tradeoff.)

[10:32:06.0000] <zewt>
they need to die in a ditch (on fire)

[10:32:07.0000] <webben>
zewt: "generally" ;)

[10:33:00.0000] <zewt>
(nothing's worse than trying to greasemonkey around a dumb site bug, to find that everything's a mess because somebody doesn't believe in deflate)

[10:33:01.0000] <TabAtkins>
Heh, I hate minifiers too.  Squeezing a few extra bytes out (most of which will be removed by compression anyway) at the near-total cost of readability is a bad tradeoff to me.

[10:33:02.0000] <GPHemsley>
yeah... I think the discussion really comes down to who you're optimizing for: a human or a parser

[10:33:03.0000] <webben>
zewt: People are right not to believe in deflate - because of misconfigured proxies etc a lot of people won't get compressed content.

[10:33:04.0000] <zewt>
it's basically tossing the benefits of a textual format down the toilet

[10:34:00.0000] <webben>
Not really. GM has to interact with the DOM, and the DOM is implied.

[10:35:00.0000] <webben>
(I'm not in favour of minification that alters class names/ids or whatever.)

[10:35:01.0000] <webben>
i.e. I'm not in favour of minification that breaks the API.

[10:35:02.0000] <zewt>
i have to interact with the page source, in order to write a script in the first place

[10:35:03.0000] <webben>
zewt: GM interacts with the DOM not the raw markup, doesn't it?

[10:36:00.0000] <zewt>
yes, but a human (me) has to write the greasemonkey script in the first place, which requires understanding what the page is doing

[10:36:01.0000] <webben>
yes, but that requires looking at the DOM not the source.

[10:36:02.0000] <zewt>
eg. minification doubles as obfuscation (not always unintentionally)

[10:36:03.0000] <webben>
if you're talking about JS, that's a different story.

[10:37:00.0000] <zewt>
looking at the DOM doesn't help me read minifuscated javascript source

[10:37:01.0000] <TabAtkins>
I super-abhore packed JS, though luckily that's much less common these days.

[10:37:02.0000] <Ms2ger>
Is it?

[10:37:03.0000] <webben>
there's a case for preserving names in JS minification so when you re-beautify it's easier to read.

[10:38:00.0000] <webben>
I'm not sure whether the JS constitutes part of the public API of the page or not.

[10:38:01.0000] <zewt>
... most pages don't have a "public API"

[10:38:02.0000] <TabAtkins>
Ms2ger: I used to see it a lot when viewing people's source.  Now I very rarely see it.

[10:38:03.0000] <webben>
zewt: Depends what you mean.

[10:38:04.0000] <TabAtkins>
Ms2ger: Also, it doesn't seem to figure into people's tutorials these days.

[10:39:00.0000] <webben>
zewt: I think a lot (most? probably not) of pages do have a public API.

[10:39:01.0000] <zewt>
if a page has an obnoxious javascript tooltip fade-in, and I want to remove it or make it not fade, i can't say I've ever seen a single page where that would be considered "public API"

[10:40:00.0000] <GPHemsley>
/me silently backs away

[10:41:00.0000] <webben>
e.g. use of odd bits of semantic HTML, attempts to make pages search-engine/AT friendly

[10:41:01.0000] <webben>
semantic naming

[10:42:00.0000] <webben>
zewt: Yeah. I don't think people generally see JS effects as part of the API.

[10:42:01.0000] <webben>
rather than an implementation detail

[10:42:02.0000] <zewt>
most of the JS implementation of pages is just considered internals

[10:42:03.0000] <webben>
exactly

[10:42:04.0000] <zewt>
and that's usually the sort of thing I end up GM'ing

[10:43:00.0000] <zewt>
i need to write a script to make twitter stop swallowing browser-owned keystrokes. heh

[10:43:01.0000] <webben>
I think the solution there is better HTML and CSS features so more of this is declarative rather than imperative.

[10:43:02.0000] <webben>
declarative and overrideable

[10:43:03.0000] <zewt>
it's not really okay to preventDefault on alt-t

[10:43:04.0000] <webben>
And more fine-grained UA control over what sites can do

[10:44:00.0000] <zewt>
webben: not holding my breath

[10:44:01.0000] <webben>
Sure.

[10:44:02.0000] <webben>
Probably wise ;)

[10:44:03.0000] <zewt>
at least twitter isn't eating alt-d anymore, which iirc it used to

[10:45:00.0000] <webben>
We do sometimes discuss better features for binding keyboard shortcuts to commands so that UA features can remap user actions to commands.

[10:45:01.0000] <webben>
I think TV Raman filed some bugs along these lines

[10:46:00.0000] <webben>
although I have feeling Hixie is punting to HTML.Next

[10:46:01.0000] <zewt>
twitter's oddly been the only notable site I've ever seen that breaks basic browser hotkeys

[10:46:02.0000] <webben>
Twitter's web frontend leaves much to be desired.

[10:46:03.0000] <zewt>
it's a lot better than most high-profile sites

[10:46:04.0000] <webben>
e.g. hash-bang URL nonsense

[10:46:05.0000] <zewt>
nothing wrong with that (get over it :)

[10:46:06.0000] <zewt>
well, caveat

[10:46:07.0000] <webben>
(No! ;) )

[10:47:00.0000] <zewt>
last I looked at that closely, it wasn't particularly optimized and regularly took many extra round-trips for a simple single-message page; that's dumb

[10:47:01.0000] <webben>
the history api allows you to set arbitrary URLs

[10:48:00.0000] <zewt>
sure, once it's widely-deployed, which it isn't quite yet

[10:48:01.0000] <webben>
Yeah, I think it's better to use it where available and use normal URLs where it's not.

[10:48:02.0000] <zewt>
(not in IE9)

[10:48:03.0000] <webben>
yeah it being left out of IE9 is regrettable

[10:51:00.0000] <zewt>
personally i find the ability to control history entries (replace vs. push) in history api to be much more interesting

[10:51:01.0000] <zewt>
allowing storing more fine-grained state in the URL without spamming history

[10:52:00.0000] <zewt>
(as well as things that can't be stored in the URL, like open files, though nobody implements that yet)

[10:52:01.0000] <zewt>
(afaik)

[11:20:00.0000] <zewt>
annevk: does encoding *to* legacy encodings need to be specified? i'm not even sure how that works for POST data

[11:20:01.0000] <annevk>
yes

[11:20:02.0000] <annevk>
for <form>

[11:20:03.0000] <annevk>
for URL

[11:20:04.0000] <zewt>
if I POST CJK through a shift-jis page the data is urlescaped Shift-JIS; if I POST CJK through iso-8859-1, the data is UTF-8 (wtf?)

[11:21:00.0000] <annevk>
POST CJK how?

[11:21:01.0000] <annevk>
using accept-charset?

[11:21:02.0000] <zewt>
enter CJK into a form in a page that was served as shift-jis

[11:21:03.0000] <zewt>
nothing special

[11:22:00.0000] <annevk>
that's some interesting behavior for windows-1252

[11:22:01.0000] <annevk>
I don't think that's correct per HTML

[11:22:02.0000] <zewt>
er

[11:22:03.0000] <annevk>
however I don't plan to define how to deal with out of range characters

[11:23:00.0000] <zewt>
sorry, apache is fucking with me

[11:23:01.0000] <annevk>
I just plan to define how to go from in-range characters to octets

[11:23:02.0000] <annevk>
if you have out-of-range characters you will need to do some pre-processing

[11:23:03.0000] <zewt>
it's taking what I'm giving to AddType and ... changing it, apparently

[11:23:04.0000] <annevk>
I think <form> does turns them into ? or some such

[11:24:00.0000] <zewt>
yeah, i've never heard of a standard placeholder like U-FFFD in legacy encodings

[11:24:01.0000] <zewt>
afk

[11:56:00.0000] <gsnedders>
annevk: I thought HTML5 already defined it for form, at lesat

[11:56:01.0000] <annevk>
yeah

[11:58:00.0000] <annevk>
"For each character in the entry's name and value that cannot be expressed using the selected character encoding, replace the character by a string consisting of a U+0026 AMPERSAND character (&), a U+0023 NUMBER SIGN character (#), one or more characters in the range U+0030 DIGIT ZERO (0) to U+0039 DIGIT NINE (9) representing the Unicode code point of the character in base ten, and finally a U+003B SEMICOLON character (;)."

[11:58:01.0000] <annevk>
and after that it encodes

[11:58:02.0000] <annevk>
that's exactly the kind of pre-processing I meant :)

[12:31:00.0000] <annevk>
AryehGregor: will look in IE tomorrow unless someone beats me to it

[12:31:01.0000] <AryehGregor>
annevk, thanks.

[12:31:02.0000] <AryehGregor>
/me has an AWS VM somewhere he can use, but is too tired to remember how right now

[13:32:00.0000] <TabAtkins>
Dammit, I can't find my list of necessary commands for webkit hacking. ;_;

[13:33:00.0000] <TabAtkins>
That thing took a few hours of wiki-diving and messing around (and two people helping me out) to accumulate.

[14:10:00.0000] <zewt>
<div style="display: block;" hidden>foo</div> is rendered? :|

[14:10:01.0000] <Ms2ger>
Yeah

[14:10:02.0000] <zewt>
lame

[14:10:03.0000] <Ms2ger>
style attributes override the UA style sheet

[14:11:00.0000] <TabAtkins>
Everything overrides the UA style sheet.

[14:11:01.0000] <zewt>
hidden should override display; that's the entire point, as far as I've ever used it

[14:11:02.0000] <TabAtkins>
Solution: put "[hidden] { display: none !important; }" in your stylesheet.

[14:11:03.0000] <zewt>
(to show/hide elements without having to stash and restore the original display style)

[14:13:00.0000] <zewt>
yeah, but doing that manually sort of partially defeats the idea of having it as a standard feature to begin with

[14:13:01.0000] <TabAtkins>
Kinda, yeah.  Unfortunately, CSS doesn't define a notion of UA-important.

[14:14:00.0000] <TabAtkins>
Which we *should* do, because everyone that uses an explicit UA stylesheet implements it, and in the same way.

[14:14:01.0000] <zewt>
and it'd be especially annoying if some bits of a page ended up depending on the behavior of hidden *without* that CSS

[15:22:00.0000] <bencc>
is it possible that a browser will send only part of a websocket package even if the fin bit is 1?

[15:22:01.0000] <bencc>
maybe if the user closed the browser window


2011-12-28
[00:31:00.0000] <annevk>
new callback syntax

[00:31:01.0000] <annevk>
yay

[00:49:00.0000] <annevk>
DOM updated to use new callback syntax

[01:07:00.0000] <zcorpan>
note to forums.whatwg.org users - if you have 0 posts then it's likely that your account has been deactivated. if you want it activated again, ping me

[01:09:00.0000] <annevk>
can you format that into a tweet?

[01:20:00.0000] <zcorpan>
0-post forums.whatwg.org accounts have been deactivated (to kill sleeping spam accounts). Ask @zcorpan if you want yours activated again.

[01:22:00.0000] <annevk>
thanks

[01:23:00.0000] <zcorpan>
cheers

[01:40:00.0000] <Ms2ger>
No tests for FileAPI yet?

[01:55:00.0000] <MikeSmith>
Ms2ger: none that I could find

[02:06:00.0000] <annevk>
if someone has an idea for http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#interface-nodefilter

[02:06:01.0000] <annevk>
let me know

[02:07:00.0000] <annevk>
could split out acceptNode into a callback interface and leave the rest an interface

[02:07:01.0000] <annevk>
that's not what UAs do today though

[02:55:00.0000] <Ms2ger>
annevk, seems like you only semi-updated EventListener

[03:18:00.0000] <zcorpan>
annevk: https://bitbucket.org/annevk/webvtt needs a better name

[03:36:00.0000] <root_op>
I couldn't find a more suiting channel for SVG questions so I decided to make an attempt here;

[03:37:00.0000] <root_op>
Basically I have five path elements with some coordinates to note my points. I then have five use elements that use these path elements to mirror them.

[03:37:01.0000] <root_op>
Together they make an anagram that I've been sketching on for some time.

[03:38:00.0000] <root_op>
Although I need an easy way to resize the entire group of objects, something I just can't seem to pull through with. Any ideas?

[03:38:01.0000] <root_op>
I intend to use the graphic inline on an HTML5 page, so it would be swell if I could have it's size decided dynamically by the CSS I link with.

[03:39:00.0000] <root_op>
Also, if anybody knows of a better suiting channel please let me know.

[04:47:00.0000] <root_op>
Nevermind, I found the solution being preserveAspectRatio="xMinYMin meet" viewBox="0 0 580.17876 228.1876"

[06:47:00.0000] <annevk>
zcorpan: like?

[06:49:00.0000] <zcorpan>
dunno, i'm not good at naming :-P

[06:50:00.0000] <annevk>
thanks Lachy

[06:51:00.0000] <annevk>
I think if I change the name the URL changes as well

[06:51:01.0000] <annevk>
anyway it's just source code

[06:51:02.0000] <annevk>
http://quuz.org/webvtt/ is the public facing site

[06:56:00.0000] <annevk>
I guess NodeFilter can just become a callback interface as well

[06:56:01.0000] <annevk>
actually, that would prevent NodeFilter.XXX from working

[06:56:02.0000] <annevk>
hmm

[06:59:00.0000] <annevk>
Ms2ger: what did I miss?

[07:00:00.0000] <annevk>
anyone an idea what's wrong with http://dvcs.w3.org/hg/domcore/raw-file/tip/Overview.html#eventtarget ?

[07:08:00.0000] <zcorpan>
callback interface

[07:09:00.0000] <annevk>
yeah that exists now

[07:11:00.0000] <zcorpan>
you're using the wrong syntax

[07:12:00.0000] <zcorpan>
s/interface//

[07:13:00.0000] <annevk>
hmm

[07:13:01.0000] <annevk>
heycam suggested this syntax

[07:13:02.0000] <annevk>
and http://dev.w3.org/2006/webapi/WebIDL/#dfn-callback-interface defines it

[07:17:00.0000] <zcorpan>
oh, i thought heycam used "callback EventListener { ... }" in email

[07:23:00.0000] <smaug____>
nothing in the web platform is stable, not even the language used for defining the APIs :)

[07:46:00.0000] <annevk>
/me files a bug on the NodeFilter stuff

[08:10:00.0000] <annevk>
it's so hard to read Leif's email

[08:10:01.0000] <annevk>
I almost missed he actually pointed out something new

[08:10:02.0000] <annevk>
well new to me

[08:10:03.0000] <annevk>
Trident/WebKit look for a BOM before paying attention to the encoding label

[08:30:00.0000] <annevk>
so if you buy into those implementations, should the BOM then be handled before you hit the encoding layer?

[08:30:01.0000] <annevk>
pretty much any steps that involve determining the encoding of a resource already deal with a BOM

[08:30:02.0000] <zewt>
be good to know just how many sites it actually matters for...

[08:31:00.0000] <annevk>
so they might as well pick the appropriate encoding to decode the resource with and remove the BOM before passing it on

[08:32:00.0000] <annevk>
I don't know, but the current divergence is not good

[08:33:00.0000] <annevk>
the longer this continues the more likely it is you get some situation where you have to pick between two sets of resources authored in different ways

[08:33:01.0000] <zewt>
i'm still in favor of utf-16 triggering comic sans

[08:35:00.0000] <annevk>
out of scope :p

[08:35:01.0000] <zewt>
as are most dreams

[08:35:02.0000] <annevk>
only pipe dreams

[08:36:00.0000] <zewt>
puff puff

[08:38:00.0000] <annevk>
I should add the remaining multi-octet encodings, got an email about a missing one

[08:44:00.0000] <AryehGregor>
annevk, for insertNode in a Comment, IE9 throws a HierarchyRequestError or some other exception?

[08:45:00.0000] <AryehGregor>
/me hopes to get a monitor today so he can move back to using his familiar old desktop and remember how to do stuff like connect to EC2

[08:46:00.0000] <annevk>
AryehGregor: hierarchy

[08:46:01.0000] <annevk>
AryehGregor: I thought I mentioned that

[08:46:02.0000] <AryehGregor>
(and, like, stay on IRC and not get disconnected when my laptop sleeps)

[08:46:03.0000] <AryehGregor>
annevk, you did, but I wasn't totally sure that's what you meant.  Thanks.

[08:46:04.0000] <annevk>
coolio

[08:47:00.0000] <annevk>
btw, your tests are being used

[08:47:01.0000] <annevk>
that's what got me to pay attention to those Range issues again :)

[08:48:00.0000] <annevk>
so thanks for making them and keeping them up to date

[08:48:01.0000] <AryehGregor>
:)

[08:48:02.0000] <AryehGregor>
The mutation ones should probably be split up among tests for the various relevant methods.

[08:48:03.0000] <AryehGregor>
You mean used at Opera?

[08:51:00.0000] <annevk>
yeah

[08:51:01.0000] <annevk>
mutations needs a lot of work :(

[08:52:00.0000] <annevk>
that it's pretty difficult doesn't help :(

[08:54:00.0000] <annevk>
hopefully there's a lot more text about it at the end of Q1

[08:54:01.0000] <annevk>
and if not I should really start planning to do it

[09:00:00.0000] <AryehGregor>
None of my test ranges started in a non-detached comment, so there was actually no test coverage for insertNode into a comment.

[09:01:00.0000] <AryehGregor>
/me needs a JS code coverage analyzer

[09:02:00.0000] <gsnedders>
Surely you just care about DOM code coverage?

[09:02:01.0000] <gsnedders>
Which you should be able to get with any code coverage tool and browser source.

[09:02:02.0000] <gsnedders>
Time to play around with AryehGregor's WebIDL test framework thing.

[09:03:00.0000] <AryehGregor>
gsnedders, oh, well, *browser* source.  Yes, that's valid too.

[09:03:01.0000] <AryehGregor>
I was thinking of cases where I write spec implementations in JS.

[09:04:00.0000] <AryehGregor>
Browser source coverage would be interesting to know also, but there would likely be more false positives, since there are lots of non-spec-related things going on.

[09:05:00.0000] <AryehGregor>
Whereas my JS implementations tend to have one or a few lines of code for every spec line, so code coverage more closely corresponds to spec coverage.

[09:07:00.0000] <gsnedders>
AryehGregor: Bugs in idlharness.js, want emails or just other to patch it?

[09:07:01.0000] <AryehGregor>
gsnedders, feel free to patch it yourself.  An e-mail or Bugzilla bug about it would be nice, though.

[09:08:00.0000] <AryehGregor>
/me really wishes we used Bitbucket or github or something so we could do forks and pull requests instead of having this "commit access" idea

[09:09:00.0000] <AryehGregor>
jgraham, by the way, did you ever think of using hg-git+Gerrit for code review for the W3C stuff in Mercurial?

[09:11:00.0000] <gsnedders>
AryehGregor: On a related topic, I wonder if we should include Typed Array support right in it, along with the basic DOM stuff it includes.

[09:12:00.0000] <AryehGregor>
What basic DOM stuff does it include?

[09:12:01.0000] <gsnedders>
AryehGregor: create_suitable_object has Node in it

[09:13:00.0000] <AryehGregor>
Oh, it does?

[09:14:00.0000] <AryehGregor>
Seems so.

[09:14:01.0000] <AryehGregor>
I forgot that was even used anywhere, but I guess it is.

[09:25:00.0000] <annevk>
hmm, somewhat less useful view than I hoped http://www.delicious.com/stacks/view/EwV9c8

[09:27:00.0000] <annevk>
AryehGregor: http://dvcs.w3.org/hg/domcore/rev/2bab24def8d9 seems to be losing some markup

[09:27:01.0000] <AryehGregor>
Where?

[09:28:00.0000] <annevk>
Comment is no longer linked

[09:28:01.0000] <AryehGregor>
Oh, bleh.

[09:29:00.0000] <annevk>
also, I try to stick to 76 characters a line for useful diffing

[09:32:00.0000] <zewt>
---

[09:32:01.0000] <zewt>
death to pretending the world is 80x25

[09:37:00.0000] <annevk>
until someone invents a better diff, 76 is rather nice

[09:37:01.0000] <AryehGregor>
Surely 79 characters is fine for diffing?

[09:38:00.0000] <zewt>
hmm? diff doesn't care about line length

[09:38:01.0000] <AryehGregor>
That's what I normally use.

[09:38:02.0000] <AryehGregor>
zewt, if you're using an 80-character-wide terminal, 80-char lines will wrap when you prefix them with + or -.

[09:38:03.0000] <zewt>
so?

[09:38:04.0000] <annevk>
less readable

[09:38:05.0000] <zewt>
if you're using an 80-column terminal then you need to get out of 1992 and make your terminal bigger

[09:39:00.0000] <annevk>
the point is you need a fixed width

[09:39:01.0000] <annevk>
might as well be around 80

[09:39:02.0000] <zewt>
wrapping code to <80 columns is invariably a recipe for gross code

[09:39:03.0000] <zewt>
i use around 120-150

[09:39:04.0000] <annevk>
this is prose and it reads rather well at 80

[09:39:05.0000] <AryehGregor>
annevk, pushed a fix.

[09:39:06.0000] <annevk>
AryehGregor: oh, it seems fine actually, looked at the wrong file

[09:40:00.0000] <annevk>
AryehGregor: though if I can make a request, I'd prefer no line-breaks in element usage

[09:40:01.0000] <AryehGregor>
What do you mean?

[09:40:02.0000] <annevk>
AryehGregor: having <span\ntitle=...> is annoying when doing straightforward search & replace

[09:40:03.0000] <annevk>
I likewise try to avoid breaking on terms

[09:41:00.0000] <AryehGregor>
I don't break my lines manually, so . . .

[09:41:01.0000] <AryehGregor>
How do you break lines?  What editor do you use?

[09:41:02.0000] <annevk>
I break them manually

[09:41:03.0000] <annevk>
because I don't really trust my editor :)

[09:42:00.0000] <annevk>
TextWrangler at the moment

[09:43:00.0000] <AryehGregor>
/me uses vim and has it break lines automatically

[09:44:00.0000] <AryehGregor>
That's part of why I developed my macro system for the editing spec source, so that it wouldn't break tags onto multiple lines and mess up search-and-replace.  Although it was mostly because the anolis syntax is infuriatingly wordy, especially if most of the refs are cross-spec.

[09:44:01.0000] <AryehGregor>
(not as bad for DOM, very bad for editing)

[09:45:00.0000] <annevk>
yeah maybe we should get someone hired somehow to fix that

[09:46:00.0000] <annevk>
better spec tools would be nice

[09:54:00.0000] <AryehGregor>
/me kicks compiz and/or Unity and/or lightdm and/or Ubuntu

[09:54:01.0000] <AryehGregor>
At least I only have to restart the window manager and not the computer, right?

[09:54:02.0000] <AryehGregor>
Anyway, as I was going to say before my window manager got borked: annevk, how does my proposed normalize() algorithm replace when there's no need, any more than the current one does?

[09:56:00.0000] <annevk>
oh

[09:56:01.0000] <annevk>
the current one is far from perfect

[09:57:00.0000] <annevk>
maybe we should start paying attention to the mutation observer stuff once we actually start writing that text

[09:57:01.0000] <annevk>
but since I know it's coming I sort of want new text to take it into account

[10:00:00.0000] <AryehGregor>
Mm.

[10:00:01.0000] <annevk>
that's how I usually feel about it too

[10:05:00.0000] <AryehGregor>
annevk, is there some reason we don't want splitting a text node to add the new text node before replacing data?  If we did that, it would be easy to avoid the problems caused by both splitting and replacing data modifying ranges.

[10:05:01.0000] <AryehGregor>
Just modify them in the split algorithm before removing the data.

[10:06:00.0000] <AryehGregor>
Then when you do the replace data, there will be no boundary points in the replaced data, so nothing will change.

[10:07:00.0000] <AryehGregor>
Is there a reason why we do "For each range whose start is X, do Y.  For each range whose end is X, do Y." instead of "For each boundary point that's X, do Y."?

[10:07:01.0000] <AryehGregor>
Practically speaking UAs are probably going to implement it the first way, but it's longer, and you have to look closely to verify that the same thing is being done to starts and ends.

[10:08:00.0000] <annevk>
I guess the MutationRecord order would change

[10:09:00.0000] <annevk>
But basically I do not know

[10:09:01.0000] <AryehGregor>
I think I cheated when I did it by saying "except when called by splitText", but that's lame.

[10:09:02.0000] <AryehGregor>
Should I change the split algorithm accordingly?

[10:09:03.0000] <annevk>
As for describing ranges, the reason I changed it this way was because this seemed more in line with how ranges are described (and prolly implemented)

[10:10:00.0000] <AryehGregor>
It's twice as long and involves copy-pasting, though, although I agree it's definitely more in line with how it will be implemented.

[10:10:01.0000] <annevk>
AryehGregor: yeah we can change it for now, but add a note that this needs to be tested when the new world order arrives

[10:10:02.0000] <AryehGregor>
Anyway, doesn't matter much to me.

[10:10:03.0000] <AryehGregor>
Okay, will do.

[10:14:00.0000] <AryehGregor>
annevk, why do you use </p>?  It's longer markup and creates more text nodes.

[10:16:00.0000] <annevk>
usually I try not to, but force of habit when I do

[10:16:01.0000] <AryehGregor>
k.

[10:17:00.0000] <volkmar>
annevk: regarding mozilla bug 673922, do you know if the conversation went to a list?

[10:17:01.0000] <volkmar>
I doubt it went to www-style (at least, I haven't seen it)

[10:18:00.0000] <volkmar>
but I wonder for public-geolocation

[10:18:01.0000] <AryehGregor>
Do we really need a note here?  I mean, do we have any reason to think implementations followed the spec's order to start with?

[10:18:02.0000] <annevk>
volkmar: haven't seen it on geolocation, don't follow www-style

[10:18:03.0000] <annevk>
AryehGregor: i meant in the form of <!-- dragon potential -->

[10:18:04.0000] <annevk>
AryehGregor: if you feel that's overkill, fine

[10:19:00.0000] <AryehGregor>
I'll add a comment saying why we order it that way and pointing to the bug, how about that?

[10:19:01.0000] <annevk>
sounds good

[10:20:00.0000] <volkmar>
annevk: and why do you think geolocation is appropriate?

[10:20:01.0000] <volkmar>
I would have pick the DAP WG instead...

[10:20:02.0000] <annevk>
/me opens bug again

[10:20:03.0000] <annevk>
volkmar: they define orientationchange

[10:21:00.0000] <annevk>
oh

[10:21:01.0000] <volkmar>
really?

[10:21:02.0000] <annevk>
or is that called deviceorientation

[10:21:03.0000] <annevk>
http://dev.w3.org/geo/api/spec-source-orientation.html

[10:21:04.0000] <annevk>
/me thinks this is confusing

[10:22:00.0000] <volkmar>
this is a bit different from orientation given that it's much more the screen orientation instead of the device

[10:23:00.0000] <annevk>
oh right, my bad

[10:23:01.0000] <volkmar>
though, that spec would be more appropriate in DAP I believe

[10:23:02.0000] <annevk>
I'd say CSS but then CSS is pretty poor when it comes to APIs

[10:24:00.0000] <annevk>
anyway if you're going to add a comment to that bug say I had deviceorientation and orientation confused

[10:26:00.0000] <volkmar>
ok

[10:28:00.0000] <AryehGregor>
annevk, can I go ahead with the insertNode changes to match non-Gecko browsers?

[10:28:01.0000] <annevk>
I think so

[10:29:00.0000] <annevk>
smaug____'s case was pretty weak

[10:29:01.0000] <annevk>
imo of course

[10:31:00.0000] <AryehGregor>
I see his point, but I think it's mostly "we shouldn't punish Gecko for adhering to DOM 2 Range when other browsers only deviated because Acid3 was wrong".  That's fair enough, but pragmatically I agree we want to follow the majority of browsers regardless of history, and this way probably makes more sense anyway.

[10:37:00.0000] <annevk>
we should add the domintro boxes at some point

[10:37:01.0000] <annevk>
last time I added a whole lot while traveling

[10:37:02.0000] <annevk>
should do that again :)

[10:45:00.0000] <AryehGregor>
/me discovers he can't use EC2 because it requires a key pair that's only on his nonfunctional desktop, sigh

[10:45:01.0000] <AryehGregor>
/me just doesn't test in IE for now

[10:48:00.0000] <annevk>
if you have live dom viewer URLs it's very easy for me to test

[10:49:00.0000] <annevk>
or stuff that works in the live dom viewer, or an actual test online

[10:49:01.0000] <annevk>
using vmware at the moment and it's pretty sweet

[10:53:00.0000] <AryehGregor>
I don't really *need* to test anything right now.

[10:53:01.0000] <AryehGregor>
I'd use VMWare, but then I'd have to give Microsoft a nontrivial amount of money.

[10:54:00.0000] <AryehGregor>
(EC2 presumably forwards some money to MS, but not nearly as much given how little I use it.)

[10:55:00.0000] <annevk>
Google presumably has some kind of unlimited use license

[10:56:00.0000] <AryehGregor>
That doesn't help me.

[10:57:00.0000] <annevk>
too bad

[10:57:01.0000] <annevk>
maybe you can get one with compliments from the IE Team?

[10:58:00.0000] <annevk>
doesn't seem like a totally insane idea to give away Windows to people who write standards for it

[10:59:00.0000] <AryehGregor>
It's not a big deal, EC2 works fine.

[11:07:00.0000] <AryehGregor>
annevk, if you download in Live DOM Viewer right now, what does IE say?

[11:07:01.0000] <AryehGregor>
Chrome says "[object Text],2,[object HTMLHeadElement],2", which is simplest, so I'll probably go with that.

[11:07:02.0000] <AryehGregor>
Just want to check that IE says the same.

[11:07:03.0000] <annevk>
[object Text],2,[object Text],2

[11:08:00.0000] <zewt>
ms has those VMs for testing IE, though I didn't quite manage to get them running in vmware

[11:08:01.0000] <AryehGregor>
Bleh.

[11:09:00.0000] <zewt>
they loaded, but iirc the mouse didn't work

[11:09:01.0000] <AryehGregor>
I'll go with Chrome since it's easiest and this is a silly corner case.

[11:09:02.0000] <AryehGregor>
This is IE9 you're testing?

[11:09:03.0000] <zewt>
(which is strange; that's something that normally just works, even without magic vmware drivers)

[11:10:00.0000] <annevk>
AryehGregor: yes

[11:10:01.0000] <AryehGregor>
Thanks.

[11:11:00.0000] <AryehGregor>
Opera is interesting: [object Text],2,[object Text],0.

[11:11:01.0000] <AryehGregor>
That's pretty neat, actually.

[11:11:02.0000] <AryehGregor>
Maybe I'll go with that.

[11:12:00.0000] <AryehGregor>
Actually, probably not, since it will prevent us from matching IE or Chrome in non-corner cases.

[11:18:00.0000] <AryehGregor>
The non-Gecko behavior for insertNode() is actually surprisingly nontrivial to spec.

[11:18:01.0000] <AryehGregor>
/me just hit a second corner case he has to handle

[11:20:00.0000] <AryehGregor>
annevk, now what does IE say in Live DOM Viewer?

[11:20:01.0000] <AryehGregor>
WebKit and Opera both say "[object HTMLHeadElement],0,[object HTMLHeadElement],1", so I suspect I'll have to change the spec.  Actually, I definitely need to if I want insertNode to always make the range contain the inserted node.  Bleh.

[11:23:00.0000] <annevk>
[object Text],2,[object Text],2

[11:23:01.0000] <annevk>
hmm

[11:23:02.0000] <annevk>
[object HTMLHeadElement],0,[object HTMLHeadElement],1

[11:23:03.0000] <AryehGregor>
Thanks.

[11:23:04.0000] <annevk>
IE does some weird ass caching

[11:23:05.0000] <AryehGregor>
/me takes a different tack

[11:24:00.0000] <AryehGregor>
Yeah, "download" only works the first time.  You have to restart to get it to work again.

[11:24:01.0000] <AryehGregor>
Annoying.

[11:24:02.0000] <annevk>
oh, all browsers?

[11:24:03.0000] <AryehGregor>
No, IE9.

[11:24:04.0000] <AryehGregor>
Works fine in non-IE.

[11:29:00.0000] <annevk>
"fixed"

[11:30:00.0000] <annevk>
internet options -> "browsing history" settings -> "every time i visit the website"

[11:32:00.0000] <AryehGregor>
/me wishes he had known about that like a year ago

[11:40:00.0000] <AryehGregor>
Looks like WebKit now has only about two distinct insertNode() bugs.

[11:40:01.0000] <AryehGregor>
Per spec.

[11:40:02.0000] <AryehGregor>
As does Gecko, one of them newly added.

[11:45:00.0000] <annevk>
so I just found a site with a BOM and a HTTP charset that says something else

[11:46:00.0000] <annevk>
reported as a bug against Opera; works fine in WebKit/Trident

[11:46:01.0000] <Velmont>
MikeSmith: Your bug is most probably fixed in next release.

[11:48:00.0000] <annevk>
broken in Gecko too, but in a more subtle way as Gecko has different error handling

[11:48:01.0000] <annevk>
though the characters are incorrect as far as I can tell

[11:51:00.0000] <annevk>
there's this quote (from Sam Ruby I think) about the closer the data is to the resource the better it gets

[11:51:01.0000] <annevk>
but it doesn't go at all like that

[11:51:02.0000] <annevk>
anyone?

[11:53:00.0000] <annevk>
found it

[11:53:01.0000] <annevk>
"I have a theory that, in general, the accuracy of metadata is inversely proportional to the distance between the metadata and the data which it proports to describe."

[11:53:02.0000] <annevk>
http://intertwingly.net/blog/2004/09/23/Copy-and-Paste

[11:54:00.0000] <annevk>
combined with Trident/WebKit giving that piece (BOM) more authority in this case, it seems it would apply

[11:56:00.0000] <zewt>
but it's very ugly for a BOM marker (in-file metadata) to take priority over external metadata (HTTP), while having <meta> lower priority

[11:56:01.0000] <zewt>
that is, meta < http headers < BOM

[11:57:00.0000] <zewt>
(personally I find meta charset being lower priority than HTTP headers really annoying, but we're stuck with it...)

[12:00:00.0000] <zewt>
i suppose being able to completely disable prescan is a plus, it's just annoying that I have to explicitly fiddle with .htaccess to remove charset for others

[12:00:01.0000] <AryehGregor>
Hmm.  Testing range mutation for normalize() would actually require work, since my pre-fab DOMs are already normalized and not very interesting to test.

[12:01:00.0000] <annevk>
AryehGregor: please also push to bitbucket

[12:01:01.0000] <AryehGregor>
Oops, forgot.

[12:01:02.0000] <annevk>
that's the one I pull from

[12:02:00.0000] <annevk>
and I think Ms2ger too

[12:02:01.0000] <AryehGregor>
There should be some way to automate that so I don't have to run two pushes every time.

[12:02:02.0000] <AryehGregor>
Otherwise I'll forget.

[12:02:03.0000] <annevk>
thanks

[12:02:04.0000] <annevk>
you could write a commit script

[12:03:00.0000] <annevk>
or push or whatever you want

[12:03:01.0000] <annevk>
or just use bitbucket and let us update the other one

[12:04:00.0000] <annevk>
zewt: not sure it matters much what takes precedence in implementations

[12:04:01.0000] <annevk>
zewt: it's all error handling

[12:05:00.0000] <zewt>
don't follow; if the precedence is wrong then you end up on the wrong encoding and mojibake away

[12:06:00.0000] <annevk>
I mean with respect to "ugly"

[12:07:00.0000] <zewt>
it's only "error handling" for parts of the charset detection which are "deprecated" (in the loose web sense of "you shouldn't be using this anymore")

[12:07:01.0000] <annevk>
the order is important, but it only comes into play if the author does something wrong

[12:08:00.0000] <zewt>
not necessarily

[12:09:00.0000] <zewt>
for example, in the ideal world that we don't live in, if HTTP < META < BOM, then it could be logical to say "charset=utf-8" in the HTTP header, and then override it with UTF-16LE using the BOM

[12:09:01.0000] <zewt>
even though they say different things, whether that's actually wrong or ugly or not is arguable

[12:09:02.0000] <annevk>
ideal world -> no legacy encodings exist

[12:10:00.0000] <zewt>
(so long as the result is interoperable and properly defined)

[12:10:01.0000] <zewt>
that's a higher level of idealism :)

[12:13:00.0000] <zewt>
anyway, since the only time I'd ever use legacy encodings is for testing, i'd just shrug and go with whatever is easiest to get interop on

[12:14:00.0000] <annevk>
this is a fairly invasive change for non-WebKit/Trident browsers

[12:14:01.0000] <annevk>
and for standards too

[12:15:00.0000] <annevk>
File API / XHR / HTML

[12:17:00.0000] <annevk>
I guess I'll file a bug tomorrow on HTML and maybe XHR, cc a bunch of people and see what they say

[12:19:00.0000] <mkanat>
I suppose the advantage is that BOMs are almost always authoritative, but that when they're not, it's going to confuse the heck out of developers what's going on with their pages.

[12:20:00.0000] <zewt>
it's hard for the BOM to be wrong, since that's what editors pick up

[12:20:01.0000] <mkanat>
Yeah, that was my thought as well.

[12:20:02.0000] <zewt>
meta could do that too, but doesn't in practice

[12:20:03.0000] <mkanat>
But it's impossible to predict every situation a developer is going to be in.

[12:20:04.0000] <annevk>
my hex editor is fairly agnostic :p

[12:20:05.0000] <zewt>
(i'm sort of surprised Vim doesn't pick up meta charsets, though)

[12:24:00.0000] <annevk>
kind of weird how such a fundamental difference has been largely overlooked

[12:24:01.0000] <annevk>
thanks to Leif Halvard Silli for pointing it out

[12:29:00.0000] <mkanat>
Probably it's because so few text editors actually add BOMs to their UTF files.

[12:30:00.0000] <mkanat>
And in the ones that don't understand it, it looks like strange garbage, so developers have become averse to them.

[12:30:01.0000] <annevk>
didn't work well with PHP either

[12:31:00.0000] <annevk>
{BOM}<?php header(... would fail

[12:31:01.0000] <annevk>
not sure if that changed

[12:32:00.0000] <zewt>
BOMs are pretty heinously evil, since text files are fundamentally streaming data

[12:34:00.0000] <zewt>
they're common enough that it's a big stream for php to not discard them for utf-8, though

[12:34:01.0000] <zewt>
uh

[12:34:02.0000] <zewt>
strange

[12:34:03.0000] <zewt>
(damn you muscle autocomplete)

[13:01:00.0000] <AryehGregor>
Yay, the spec for compareBoundaryPoints gets START_TO_END and END_TO_START backwards.

[13:01:01.0000] <AryehGregor>
I think.

[13:01:02.0000] <AryehGregor>
To be investigated further tomorrow.

[13:22:00.0000] <annevk>
AryehGregor: if you fix that, also define the constants more similarly to compareDocumentPosition

[13:22:01.0000] <annevk>
(or change compareDocumentPosition I guess)

[13:32:00.0000] <TabAtkins>
volkmar: orientation locking has never come up in CSS.  It might make sense, but as Anne says, the csswg is bad at APIs.  However, we do have the @viewport spec, where it might be appropriate.  But a pure-JS api, as discussed in bug, might be better.  I dunno.

[13:35:00.0000] <annevk>
btw

[13:35:01.0000] <annevk>
my plan is to put the tables outside the text

[13:36:00.0000] <annevk>
also for the single-octet stuff for consistency

[13:36:01.0000] <annevk>
I think will simply reuse the format Unicode.org has so people can easily compare

[13:36:02.0000] <volkmar>
TabAtkins: I would prefer a pure JS API

[13:36:03.0000] <TabAtkins>
Given the use-cases, I suspect a pure JS api would probably be best as well.

[13:37:00.0000] <TabAtkins>
Static pages generally shouldn't be caring about their orientation.

[13:37:01.0000] <volkmar>
yes, that was my idea too

[13:37:02.0000] <volkmar>
and I don't see any reason why a page want to change it's stylesheet depending on the orientation

[13:37:03.0000] <TabAtkins>
In other words, I want a normal site to take whatever orientation I put my phone in.  I'm okay with apps forcing a particular orientation when they need to.

[13:37:04.0000] <volkmar>
there are already ways to do that depending on the size

[13:37:05.0000] <TabAtkins>
Yeah.

[13:38:00.0000] <TabAtkins>
(Where "app" is defined as "something with functionality largely driven through JS", or something like that.)

[13:39:00.0000] <volkmar>
actually, regarding this API, the proposal of .preventDefault() had some support but it doesn't seem very good to me

[13:40:00.0000] <volkmar>
there might be use cases of an app who wants to know of orientation changes (though, I don't see them)

[13:41:00.0000] <TabAtkins>
There's already a device orientation api for that, no?

[13:41:01.0000] <volkmar>
yes

[13:41:02.0000] <TabAtkins>
Then that's good enough.

[13:41:03.0000] <TabAtkins>
(Presumably - I haven't looked at that api.)

[14:07:00.0000] <annevk>
https://www.w3.org/Bugs/Public/show_bug.cgi?id=12897#c18 (BOM thing was already filed and rejected by hsivonen)

[14:07:01.0000] <annevk>
I think I will file a new bug on the subject though to make it somewhat clearer


2011-12-29
[00:34:00.0000] <annevk>
heycam|away: isn't EventListener the wrong name as that clashes with DOM where it means something else?

[00:35:00.0000] <annevk>
heycam|away: other than that I guess it's okay

[04:39:00.0000] <asmodai>
Using canvas to remake old Amiga demos: http://www.abyss-online.de/cruisin/

[04:41:00.0000] <bga_>
hehe const

[05:21:00.0000] <annevk>
http://lists.w3.org/Archives/Public/www-style/2011Dec/0482.html Plan B :)

[05:31:00.0000] <Ms2ger>
Isn't it like Plan M by now?

[05:34:00.0000] <annevk>
yeah maybe

[06:00:00.0000] <bga_>
usecase of FileSystem and native ui

[06:00:01.0000] <bga_>
http://i5.pixs.ru/storage/5/8/9/Snimok2011_1083103_3655589.png

[06:00:02.0000] <bga_>
:(

[06:01:00.0000] <bga_>
pseudo antivirus

[06:24:00.0000] <zcorpan>
annevk: one site is not enough data to make a decision on BOM, i think

[06:26:00.0000] <annevk>
zcorpan: WebKit/Trident is I think

[06:29:00.0000] <zcorpan>
/me is still not convinced

[06:30:00.0000] <gsnedders>
/me isn't convinced either

[06:31:00.0000] <gsnedders>
Avoiding layering violations is preferable. If Gecko/Presto can get away without violating it, all the better.

[06:31:01.0000] <gsnedders>
s/all the better/that implies it is feasible/

[06:31:02.0000] <zcorpan>
hmm, BOM wins over content-type for <script src>

[08:21:00.0000] <AryehGregor>
annevk, I don't see how to define the constants more similarly to compareDocumentPosition.  compareDocumentPosition uses the constants for its return value, compareBoundaryPoints uses them for a parameter.

[08:23:00.0000] <AryehGregor>
Also, can you or someone else tell me if IE9 fails any tests here?  Gecko and WebKit both pass everything (yay).  http://aryeh.name/tmp/webapps/DOMCore/tests/submissions/AryehGregor/Range-compareBoundaryPoints.html

[08:24:00.0000] <Philip`>
AryehGregor: My IE9 gets 11994 pass, 2646 fail

[08:25:00.0000] <AryehGregor>
Hmm.

[08:25:01.0000] <Philip`>
(Lots of "assert_not_equals: Creating argument range threw an exception got disallowed value null" and some others)

[08:25:02.0000] <AryehGregor>
Ah, okay.

[08:26:00.0000] <AryehGregor>
So it's failing on the range creation, not the compareDocumentPosition results, probably.

[08:26:01.0000] <AryehGregor>
I'll look later if I remember.

[08:26:02.0000] <AryehGregor>
But I'm probably not going to go with IE against Gecko+WebKit anyway, so it's unlikely I actually need to look at the results.

[08:26:03.0000] <Philip`>
There's some others like "assert_equals: Wrong return value expected 1 but got -1"

[08:27:00.0000] <annevk>
AryehGregor: that somehow the <dfn> end up in prose and not the IDL

[08:27:01.0000] <annevk>
AryehGregor: but I don't really know how that should be done either

[08:27:02.0000] <annevk>
so it's fine to leave it until we think of something

[08:27:03.0000] <AryehGregor>
Oh.

[08:27:04.0000] <AryehGregor>
/me looks

[08:27:05.0000] <AryehGregor>
Philip`, oh, that sounds more interesting.  Could you give me an example of the test name for one of those?

[08:27:06.0000] <AryehGregor>
/me should get his IE9 working again sometime today, if all goes well . . .

[08:28:00.0000] <AryehGregor>
Maybe IE9 matches the current spec instead of Gecko/WebKit? . . .

[08:28:01.0000] <annevk>
I wonder if Jacob is responsible

[08:29:00.0000] <annevk>
can probably ask him

[08:29:01.0000] <annevk>
dunno if he works today though

[08:29:02.0000] <Philip`>
AryehGregor: "1,39,2" (is that a sufficiently unique part of the name?)

[08:29:03.0000] <AryehGregor>
Yes.

[08:29:04.0000] <AryehGregor>
That's why I put the identifier there.  :)

[08:29:05.0000] <Philip`>
Ah, good, so I don't have to type it all out onto this computer :-)

[08:31:00.0000] <AryehGregor>
That seems weird.  Might be a test bug.

[08:31:01.0000] <AryehGregor>
I'll try to remember to look into it.

[08:34:00.0000] <annevk>
I wish it was not the end of December

[08:35:00.0000] <annevk>
it's making it hard to make progress on work

[08:36:00.0000] <AryehGregor>
If I just made a commit in hg and want to tweak the commit message, is there any easy way to do that, like git commit --amend?  Or do I have to hg rollback and retype the whole message?

[08:37:00.0000] <annevk>
unless you have extensions, I think the latter

[08:38:00.0000] <annevk>
but I don't really know a lot about Mercurial

[08:38:01.0000] <annevk>
or git

[08:38:02.0000] <annevk>
or svn or cvs

[08:38:03.0000] <annevk>
:)

[08:39:00.0000] <AryehGregor>
:(

[08:39:01.0000] <Philip`>
/me doesn't remember hearing of anything better than "hg qimport -r tip -n somename; hg qref -e; hg qfinish"

[08:39:02.0000] <AryehGregor>
Figures.

[08:39:03.0000] <Philip`>
(which should allow incremental editing of the current message)

[08:40:00.0000] <Philip`>
(but is a weird way to do it)

[08:41:00.0000] <Philip`>
(Hg seems to generally assume that commits imply some kind of commitment to the change, whereas git seems to avoid any commitment until you push)

[08:41:01.0000] <AryehGregor>
The latter is kind of logical, given that it's normally private until you push . . .

[08:41:02.0000] <Philip`>
The former is kind of logical given that it's called "commit", though

[08:56:00.0000] <zewt>
i'm not touching hg or "bzr" or any of the other zillion versioning systems; there's been an unreasonable proliferation of them in the last few years and everyone seems to just expect people to learn all of them

[08:56:01.0000] <zewt>
i just stick to svn and git

[08:57:00.0000] <AryehGregor>
I am starting to get severely annoyed by compiz messing up regularly on my laptop.

[08:57:01.0000] <AryehGregor>
Sigh.

[08:57:02.0000] <AryehGregor>
zewt, I stick to git when I can, but the W3C insists on hg . . .

[08:57:03.0000] <michel_v>
zewt: it's annoying when you want to check a project's code and you have to install yet another VC system...

[08:58:00.0000] <zewt>
someone actually got offended when i told him that sorry, no, i'm not learning to use bzr to test a patch for his obscure project, sorry

[09:02:00.0000] <AryehGregor>
wtf, this laptop is unusable.  Argh.

[09:02:01.0000] <AryehGregor>
/me stabs Linux

[09:02:02.0000] <zewt>
linux on a laptop? heh

[09:02:03.0000] <AryehGregor>
Oh, now Alt-Tab started working again.

[09:02:04.0000] <AryehGregor>
Sometimes it stops, and Chrome doesn't respond to clicks . . . grr.

[09:03:00.0000] <AryehGregor>
To be fair, I should stab Ubuntu.  I'm sure this is a Unity bug.

[09:03:01.0000] <zewt>
i gave up on ubuntu, but i only used it for servers

[09:05:00.0000] <AryehGregor>
I know.

[09:11:00.0000] <annevk>
the short term for the thing I mentioned yesterday is apparently "Ruby's postulate"

[09:11:01.0000] <annevk>
per http://www.comp.leeds.ac.uk/roger/Famous/eponymy_content.html

[09:29:00.0000] <AryehGregor>
Can someone with IE9 access tell me whether it passes the tests 0,0,{4,5,6,7,9,10,11,16,etc.} here?  Or does it give a whole bunch of "IndexSizeError required" errors?  http://aryeh.name/tmp/webapps/DOMCore/tests/submissions/AryehGregor/Range-compareBoundaryPoints.html

[09:30:00.0000] <AryehGregor>
It seems like Gecko, WebKit, and Opera all throw InvalidStateError rather than IndexSizeError if both are applicable.

[09:30:01.0000] <AryehGregor>
I want to check if IE does the same thing.

[09:33:00.0000] <AryehGregor>
I just changed the test, so my previous question is invalid now.

[09:47:00.0000] <AryehGregor>
gwicke, didn't know you hung out here.  Are you active in MediaWiki development these days?

[09:48:00.0000] <gwicke>
AryehGregor: yes, I am working on a parser for the visual editor effort

[09:48:01.0000] <AryehGregor>
Nice.

[09:48:02.0000] <gwicke>
https://www.mediawiki.org/wiki/Future/Parser_development

[09:49:00.0000] <AryehGregor>
I was an active MW developer from like 2007 to 2010, so I guess we didn't overlap, but obviously I saw your name all over the skin code.

[09:49:01.0000] <AryehGregor>
Now I work on specs.

[09:50:00.0000] <gwicke>
not a bad thing to work on

[09:50:01.0000] <gwicke>
especially as things move towards html again

[09:53:00.0000] <gwicke>
I really hope that contenteditable and dom transactions become usable some day

[09:59:00.0000] <AryehGregor>
gwicke, contenteditable is the primary thing I'm paid to work on, as it happens.  I wrote a mostly-complete spec, but now it's up to implementers to implement it.

[09:59:01.0000] <AryehGregor>
(I also follow DOM transactions, but rniwa does the actual spec work there)

[09:59:02.0000] <gwicke>
heh- nice!

[10:00:00.0000] <gwicke>
is there some interest in implementing it?

[10:01:00.0000] <AryehGregor>
Ehsan Akhgari of Mozilla and Ryosuke Niwa of Google (for WebKit) are very interested, but it will require major rewrites with significant compat risk, so they're proceeding very cautiously in actually doing it.

[10:01:01.0000] <AryehGregor>
Only Gecko and WebKit have anyone working on their editing code at all, AFAICT.

[10:01:02.0000] <AryehGregor>
Although if they start converging on the spec, I expect MS to follow suit.

[10:02:00.0000] <gwicke>
that is good to hear, and I really hope that they push it through

[10:02:01.0000] <AryehGregor>
Anyway, my editing spec work is basically blocked waiting for implementer feedback, so I spend most of my time on other things.  (Like right now, making the definition of Range.compareBoundaryPoints more precise and writing lots of tests for it.)

[10:03:00.0000] <gwicke>
the visual editor we are working on tries to do without contenteditable, but of course that is a lot of work

[10:04:00.0000] <AryehGregor>
What do you use instead?  Canvas?  A regular DOM where you try to intercept all keystrokes?

[10:04:01.0000] <gwicke>
regular DOM

[10:05:00.0000] <gwicke>
and a hidden textarea behind it for pasting

[10:05:01.0000] <zewt>
every manual gui editor ever implemented in javascript sucks in some nontrivial way :|

[10:05:02.0000] <AryehGregor>
The problem with that is that you then lose all the platform features users expect, like platform-specific (perhaps customized!) text navigation, and IMEs, and things like that.

[10:05:03.0000] <gwicke>
but I am mostly working on the parser, so I only know some stuff at the periphery

[10:05:04.0000] <AryehGregor>
Google Docs mostly pulls it off, but only because they have Google's resources, and they still have lots of problems.

[10:05:05.0000] <zewt>
even gmail's editor has its serious annoyances

[10:06:00.0000] <zewt>
probably the highest-profile editor of its type in existance

[10:06:01.0000] <AryehGregor>
Most of the successful WYSIWYG editors (TinyMCE, CKEditor, etc.) use contenteditable and then hack around browser incompatibilities, AFAIK.

[10:07:00.0000] <AryehGregor>
zewt, Gmail's editor uses contenteditable.

[10:07:01.0000] <gwicke>
I try to stay compatible with contenteditable, as I am not that convinced of the manual DOM approach either

[10:07:02.0000] <gwicke>
the parser produces an HTML DOM first, and only converts that to an editor-specific WikiDom format at the end before passing that to the editor

[10:07:03.0000] <zewt>
it's pretty bad about undo and cursor positions, which is a day-to-day irritant

[10:08:00.0000] <zewt>
(the cursor position after undo seems to be selected via a cryptographically-secure prng)

[10:08:01.0000] <AryehGregor>
Manual DOM will seem to work okay in development, because it will work with all the keyboard shortcuts and things that the developers are used to.  Then you expose it to your users and find that it's completely unusable for CJK, doesn't respect OS preferences you never heard of, undo breaks in a million cases you didn't think of, . . .

[10:09:00.0000] <AryehGregor>
Can someone tell me how IE9 does on the tests here starting with "3,3,"?  http://aryeh.name/tmp/webapps/DOMCore/tests/submissions/AryehGregor/Range-compareBoundaryPoints.html

[10:09:01.0000] <AryehGregor>
I really need to get IE9 working again.  Blech.

[10:09:02.0000] <zewt>
you really need to be able to run IE. heh

[10:09:03.0000] <zewt>
^

[10:10:00.0000] <AryehGregor>
/me is considering whether to change IndexSizeError to NotSupportedError, since Opera throws that, Gecko throws some non-DOMException, and WebKit doesn't throw

[10:10:01.0000] <AryehGregor>
But if IE throws IndexSizeError, of course, I should keep it.

[10:12:00.0000] <AryehGregor>
/me realizes his wife's Vista laptop is sitting five feet behind him

[10:13:00.0000] <AryehGregor>
But a) I don't have a login and b) I think she prefers IE8.  Blech.

[10:14:00.0000] <AryehGregor>
annevk, Philip`, can you tell me how IE9 does on the tests here starting with "3,3,"?  http://aryeh.name/tmp/webapps/DOMCore/tests/submissions/AryehGregor/Range-compareBoundaryPoints.html

[10:20:00.0000] <Philip`>
AryehGregor: 3,3,(4|5|6) says it threw object "Error: Invalid argument."

[10:21:00.0000] <Philip`>
Also 3,3,(11|16|17|22|23|28|34|35) and like half the rest but I got bored of counting

[10:21:01.0000] <Philip`>
The others pass

[10:22:00.0000] <kennyluck>
Does anyone have a list of pages with <base> elements in real use?

[10:24:00.0000] <AryehGregor>
Philip`, great, thanks.

[10:25:00.0000] <AryehGregor>
Philip`, it says something like 'threw object "Error: Invalid argument." that is not a DOMException INDEX_SIZE_ERR: property "code" is equal to undefined, expected 1' or similar?

[10:26:00.0000] <Philip`>
AryehGregor: Exactly that

[10:26:01.0000] <AryehGregor>
Great, thanks.

[10:26:02.0000] <Philip`>
(...prefixed by the "assert_throws: blah blah function "..."")

[10:28:00.0000] <AryehGregor>
Right.

[10:28:01.0000] <AryehGregor>
So I'm actually making the spec such that Opera is the only one that passes certain tests.  Yay Opera.

[10:28:02.0000] <AryehGregor>
(that only happens when all other browsers behave in some way I can't standardize, like throwing nonstandard exception types)

[10:29:00.0000] <Philip`>
(You could always standardise nonstandard exception types)

[10:30:00.0000] <AryehGregor>
Of course, Opera fails 11,012 tests total, as opposed to 544 for Gecko and 616 for WebKit.  But at least it passes 3,3,4!

[10:30:01.0000] <AryehGregor>
Philip`, I'm not likely to standardize an exception type called NS_ERROR_ILLEGAL_VALUE.

[10:30:02.0000] <AryehGregor>
The NS_ is a bit of a giveaway.

[10:35:00.0000] <Philip`>
HTML5 already standardises the handling of strings like "-//Netscape Comm. Corp.//DTD HTML//", so why not?

[10:38:00.0000] <zewt>
if lots of people inadvertently depend on one and not the other, then there's a pretty big difference

[10:43:00.0000] <AryehGregor>
Philip`, if the web actually depended on it, okay . . .

[10:44:00.0000] <AryehGregor>
Okay, now what should I work on?

[10:44:01.0000] <AryehGregor>
/me scrutinizes Range methods

[10:45:00.0000] <AryehGregor>
commonAncestorContainer!

[10:45:01.0000] <annevk>
browsers are going to change their exception types anyway

[10:46:00.0000] <annevk>
at least that's been the assumption thus far

[10:50:00.0000] <Philip`>
Does anyone ever depend on exception types at all?

[10:50:01.0000] <AryehGregor>
Well, my tests do.

[10:50:02.0000] <AryehGregor>
So if browsers don't interoperate, they'll fail my tests.

[10:50:03.0000] <AryehGregor>
:)

[10:50:04.0000] <Philip`>
Anyone other than you :-)

[10:51:00.0000] <Ms2ger>
My tests :)

[10:55:00.0000] <AryehGregor>
Okay, commonAncestorContainer tests were pretty quick to write.

[11:06:00.0000] <Ms2ger>
I think I had a couple already, though probably not up to your standards

[11:07:00.0000] <AryehGregor>
Oh, right, I remember that.

[11:07:01.0000] <AryehGregor>
/me looks

[11:08:00.0000] <AryehGregor>
I don't think I test exactly the same cases as you, because my document fragments are all empty.

[11:09:00.0000] <AryehGregor>
I only actually test 60 different ranges.

[11:09:01.0000] <AryehGregor>
I need to write a testRangesExtended with a couple thousand ranges for things like this where we're only running one test per range, probably.

[11:10:00.0000] <Ms2ger>
Uh-oh :)

[11:10:01.0000] <AryehGregor>
Presumably I'd generate it programmatically from testNodes.

[11:10:02.0000] <AryehGregor>
Just take the Cartesian product with itself and then knock out all the ones that aren't valid Ranges.

[11:11:00.0000] <AryehGregor>
Not entirely trivial to do, so I'll put it off for later.

[11:14:00.0000] <gsnedders>
AryehGregor: You mean our handling of Ranges has a few more bugs than other browsers? Colour me surprised!

[11:14:01.0000] <AryehGregor>
gsnedders, I know, shocking.

[11:15:00.0000] <AryehGregor>
I think some of them are actually DOM bugs that make the tests give incorrect expected values.

[11:16:00.0000] <gsnedders>
Eh, that would surprise me a bit more.

[11:22:00.0000] <AryehGregor>
It's mostly not that, though.

[11:22:01.0000] <AryehGregor>
I think there are only a handful of those.

[15:26:00.0000] <divya>
dglazkov: (reading the spec again) http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html "A valid selector fragment fragment may contain" what is the criteria for it?

[15:27:00.0000] <divya>
dglazkov: is it just not having pseudo-elements and :hovers? basically any selectable element?


2011-12-30
[01:18:00.0000] <JPeterMugaas>
I'm curious, has someone added "msapplication-window" to the meta tag registration?  It has to do with pinned websites in Internet Explorer 9.0.

[01:21:00.0000] <Philip`>
JPeterMugaas: It's not listed on http://wiki.whatwg.org/wiki/MetaExtensions so it seems nobody has added it yet

[01:23:00.0000] <JPeterMugaas>
I think someone needs to do this but I don't have a wiki account.   It is described at http://msdn.microsoft.com/en-us/library/gg491732(v=vs.85).aspx#msapplication-window .

[01:39:00.0000] <zcorpan>
JPeterMugaas: if you leave your desired user name and email, maybe someone here will create an account for you

[01:47:00.0000] <JPeterMugaas>
Sure.  My desired username is "JPeterMugaas" and my E-Mail is jpmugaas⊙sn .

[02:38:00.0000] <annevk>
JPeterMugaas: I'll create one for you

[02:38:01.0000] <JPeterMugaas>
Thanks.

[02:39:00.0000] <annevk>
should have an email

[02:41:00.0000] <JPeterMugaas>
I saw it.

[02:42:00.0000] <JPeterMugaas>
What password do I use to login?

[02:43:00.0000] <JPeterMugaas>
Nevermind.

[03:25:00.0000] <JPeterMugaas>
Okay.  I've added that tag to http://wiki.whatwg.org/wiki/MetaExtensions

[06:24:00.0000] <AryehGregor>
/me tries to remember what he thought he should do today

[06:30:00.0000] <AryehGregor>
/me writes some tests for comparePoint, if no one else has any suggestions

[06:33:00.0000] <annevk>
couple of range bits still have XXX comments

[06:37:00.0000] <AryehGregor>
/me will look if he has time

[06:46:00.0000] <AryehGregor>
The only interesting one I see is in intersectsNode(), which I suppose I'll get to after comparePoint().

[06:46:01.0000] <AryehGregor>
I think it's the last Range thing that's untested.

[06:49:00.0000] <annevk>
the recursion stuff will prolly come up with mutations

[06:49:01.0000] <annevk>
and there's the bug on removing detach()

[06:49:02.0000] <AryehGregor>
Yeah, the recursion stuff needs to be looked at at some point, but it's not terribly important, more of a technical fix.

[06:50:00.0000] <AryehGregor>
To be honest, if we look at the exact mutations that each method causes instead of just the final DOM, we're going to find about twenty billion inconsistencies between browsers.

[06:50:01.0000] <AryehGregor>
Range.extractContents() will be the least of our worries.

[06:50:02.0000] <AryehGregor>
So I'm not terribly concerned about that for now.

[06:50:03.0000] <AryehGregor>
The removing detach() stuff I don't think we should do anything about until we have a browser that's actually willing to remove it.

[06:50:04.0000] <AryehGregor>
And tries.

[06:51:00.0000] <annevk>
I don't think it should be too bad, but we'll see

[06:51:01.0000] <AryehGregor>
Add an XXX to the spec, I'd say.

[06:52:00.0000] <AryehGregor>
For simple stuff like Node methods, no, but Range methods like extractContents do a whole bunch of mutations, and I wouldn't expect them to match exactly between browsers.

[06:53:00.0000] <AryehGregor>
execCommand() will be a nightmare with mutation observers, because I didn't actually pay the slightest bit of attention to the precise order of insertion and removal, and probably it's completely irrational in most cases.  But interop for execCommand is completely nonexistent for even the most basic use-cases, so I'm really not worried about that.

[06:57:00.0000] <annevk>
is execCommand() mostly defined in terms of range mutations?

[06:57:01.0000] <annevk>
range mutations should cause several MutationRecords basically, but the order indeed, dunno

[06:57:02.0000] <smaug____>
AryehGregor: why does the order matter. Things should be collapsed to one mutationrecord when execCommand is used

[06:57:03.0000] <smaug____>
at least I hope so

[06:57:04.0000] <smaug____>
though, it is not possible in all the cases

[06:57:05.0000] <smaug____>
hmm

[06:57:06.0000] <AryehGregor>
smaug____, I dunno.

[06:57:07.0000] <annevk>
MutationRecord cannot do complex stuff

[06:57:08.0000] <AryehGregor>
But if you follow my algorithm step-by-step, one execCommand() could easily result in hundreds of different mutations.

[06:57:09.0000] <annevk>
you'll have several for range mutations

[06:57:10.0000] <smaug____>
/me doesn't know what is range mutation

[06:57:11.0000] <AryehGregor>
Order has to matter if you're doing any nontrivial sequence of related mutations.

[06:58:00.0000] <AryehGregor>
Or so I'd imagine.

[06:58:01.0000] <zewt->
is anyone willing to try to move towards interop on execCommand, or is every site using it with browser sniffing and making that impossible?

[06:58:02.0000] <AryehGregor>
zewt-, a mix.  Gecko and WebKit are interested in more interop, but it will take vast amounts of work and has to be done very carefully to avoid breaking sites.

[06:58:03.0000] <smaug____>
AryehGregor: yeah. it doesn't matter if mutations are happening to same element, but with execCommand that is not the case

[06:58:04.0000] <zewt->
(feature sniffing instead of browser sniffing would make fixing execCommand more possible, but people unfortunately probably tend towards browser sniffing instead)

[06:59:00.0000] <zewt->
which might honestly be the only sane thing to do if the differences are too wide and strange to try to work around them as if they're feature differences

[07:00:00.0000] <AryehGregor>
zewt-, have you actually tried using execCommand()?  Different browsers' implementations are practically unrelated a lot of the time.  There are like a zillion differences in how every command is implemented.  Sniffing each one separately would be pointless.

[07:00:01.0000] <AryehGregor>
Especially since if browsers change, odds are good that any particular thing will change to something incompatible with how all browsers did it.

[07:00:02.0000] <AryehGregor>
If you're talking about stuff like details of how tag nesting winds up.

[07:01:00.0000] <AryehGregor>
Oh, you already said something like that.

[07:01:01.0000] <AryehGregor>
Yeah, basically it's a total trainwreck and in real life anyone sane just doesn't use it.

[07:01:02.0000] <AryehGregor>
It's masochistic enough to try working around differences in contenteditable, let alone execCommand().

[07:02:00.0000] <bga>
hm

[07:04:00.0000] <bga>
is Doc#elementFromPoint one native fn to access to UA's dom quadtree?

[07:05:00.0000] <AryehGregor>
"quadtree"?

[07:05:01.0000] <bga>
i want get list of dom elements which are inside rect and inside + intersect rect

[07:05:02.0000] <bga>
AryehGregor http://en.wikipedia.org/wiki/Quadtree

[07:07:00.0000] <smaug____>
Gecko has nodesFromRect, but that is currently only for privileged scripts

[07:08:00.0000] <annevk>
hmm lists.whatwg.org times out?

[07:09:00.0000] <zewt->
works here

[07:09:01.0000] <zewt->
archives anyway

[07:13:00.0000] <AryehGregor>
Ms2ger, any specific reason you specced Range.intersectsNode(), as opposed to other WebKit extensions?

[07:13:01.0000] <Ms2ger>
Yes

[07:13:02.0000] <Ms2ger>
I've got a bug assigned to me to implement it in Gecko

[07:14:00.0000] <AryehGregor>
Ah.

[07:14:01.0000] <Ms2ger>
(That's why I started on DOM Range, actually)

[07:14:02.0000] <AryehGregor>
Okay, good enough for me.

[07:14:03.0000] <AryehGregor>
/me writes some tests

[07:14:04.0000] <bga>
smaug____ i will be good to have standard public method

[07:14:05.0000] <Ms2ger>
I wrote a couple, IIRC

[07:15:00.0000] <AryehGregor>
Only assert_throws() tests, though.

[07:15:01.0000] <smaug____>
bga: File a CSSOM spec bug

[07:15:02.0000] <Ms2ger>
Sounds right

[07:39:00.0000] <AryehGregor>
Weird -- WebKit and Opera don't throw if you call intersectsNode() on a detached range.

[07:40:00.0000] <AryehGregor>
. . . except sometimes.

[07:40:01.0000] <AryehGregor>
/me specs it to throw anyway

[07:46:00.0000] <gsnedders>
iframe.contentWindow.history.back(); takes the parent window back? gah.

[07:47:00.0000] <gsnedders>
Unless the history isn't what I think it is...

[07:56:00.0000] <AryehGregor>
Okay, I think every single Range attribute and operation that's specced has tests now.

[08:02:00.0000] <AryehGregor>
Feedback on the XXX here would be appreciated: http://dvcs.w3.org/hg/domcore/raw-file/tip/dom-core.html#dom-range-intersectsnode

[13:02:00.0000] <annevk>
seems my email made it to the list finally

[13:06:00.0000] <gsnedders>
/me tries to improve the HTML5 Wikipedia page

[13:07:00.0000] <gsnedders>
The history section entirely omits the lead up to the formation of WHATWG.

[13:10:00.0000] <gsnedders>
http://en.wikipedia.org/w/index.php?title=HTML5&action=historysubmit&diff=468660119&oldid=468655632

[13:13:00.0000] <gsnedders>
/me wonders how long until someone reverts that

[13:22:00.0000] <annevk>
http://en.wikipedia.org/wiki/HTML is also quite out of date...

[13:22:01.0000] <annevk>
"The last HTML specification published by the W3C is the HTML 4.01 Recommendation, published in late 1999. Its issues and errors were last acknowledged by errata published in 2001."

[13:23:00.0000] <annevk>
oh well, only so many problems I can solve

[15:53:00.0000] <annevk>
about six months for http://annevankesteren.nl/2011/06/creating-events

[15:53:01.0000] <annevk>
not bad


2011-12-31
[16:19:00.0000] <Yuhong>
On the history of CSS3 multicol

[16:20:00.0000] <Yuhong>
http://lists.w3.org/Archives/Public/www-html/1996Jun/0234.html

[16:20:01.0000] <Yuhong>
http://www.w3.org/Style/CSS/multi-column.html

[16:21:00.0000] <Yuhong>
And IE10 finally implements this!

[18:53:00.0000] <gsnedders>
So I would appear to have Hixie's buisness card. Why on earth?

[18:54:00.0000] <gsnedders>
/me also just came across 18th birthday card from jgraham, complete with quote from Romeo and Juliet on the front. Heh.

[18:54:01.0000] <gsnedders>
So many memory.

[18:54:02.0000] <gsnedders>
*memories.

