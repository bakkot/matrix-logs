2018-12-01
[20:00:59.0000] <curtisl>
Hi! I'm the author of a standard that's broadly applicable, and I would like to get an account to be able to add this as an extension proposal to https://wiki.whatwg.org/wiki/MetaExtensions

[20:05:48.0000] <curtisl>
For background, the standard is the app-ads.txt security protocol for in-app advertising, published by the Interactive Advertising Bureau (online advertising trade group), and the specification outlines three <meta> tags to be published by app stores as structured metadata about the app store listings.  The specification can be found here (https://iabtechlab.com/wp-content/uploads/2018/11/IABTechLab_PUBLIC_DRAFT_Authorized_Sellers_fo

[20:06:50.0000] <curtisl>
Posting again, since URL may be truncated....

[20:06:53.0000] <curtisl>
https://iabtechlab.com/wp-content/uploads/2018/11/IABTechLab_PUBLIC_DRAFT_Authorized_Sellers_for_Apps_app-ads.txt_Specs.pdf

[20:07:04.0000] <curtisl>
(meta details on p.8)

[22:10:36.0000] <annevk>
curtisl: pm me username/email please. Might take some time for me to get to it though.


2018-12-04
[18:40:29.0000] <MikeSmith>
https://www.windowscentral.com/microsoft-building-chromium-powered-web-browser-windows-10

[18:40:36.0000] <MikeSmith>
> I'm told that Microsoft is throwing in the towel with EdgeHTML and is instead building a new web browser powered by Chromium, a rendering engine first popularized by Google's Chrome browser. Codenamed Anaheim, this new web browser for Windows 10 will replace Edge as the default browser on the platform.

[03:50:10.0000] <jgraham>
MikeSmith: Yeah, really hoping that turns out to be misleading and they're actually not replacing Edge but some other HTML-rendering component. OTOH the fact that it seems so plausible even when unconfirmed should be very worrying to everyone.

[03:54:39.0000] <MikeSmith>
jgraham: We‚Äôll see, but I‚Äôm guessing it‚Äôs gonna turn out to not be misleading. It aligns with some hearsay somebody shared with me last month but that I was a lot more skeptical about til today.

[03:56:20.0000] <Ms2ger>
Might still be the same hearsay

[04:19:31.0000] <jgraham>
MikeSmith: Oh, don't mistake me for an optimist. It's certainly a "is 7am too early to start drinking" kind of story. Just trying to apply some basic critical thinking even so.

[05:13:46.0000] <gsnedders>
For various circumstancial reasons, I'm inclined to believe this. :/

[05:14:30.0000] <gsnedders>
That said, I still think the commits could be unrelated (and likely are, given MS wouldn't do such a thing without considering what might happen first): Chrome running on Win/ARM64 is pretty easy to argue as essential for the success for Win/ARM64.

[08:46:17.0000] <nox>
Does anyone have details about https://twitter.com/stubbornella/status/1069097850770870272?

[08:48:04.0000] <nox>
Domenic: Are "built-in JS modules" related to implementing DOM as JS?

[09:08:24.0000] <Domenic>
nox: nah, just putting new features in modules instead of globals.

[11:29:45.0000] <nox>
Domenic: Ack, thanks for the answer.

[14:44:06.0000] <domfarolino>
Domenic: https://html.spec.whatwg.org/multipage/semantics.html#processing-link-headers defers to the Web Linking RFC for Link header processing, and https://tools.ietf.org/html/rfc5988#section-5 describes that Link headers are semantically equivalent to the <link> element, but there's no explicit fetching of Link headers anywhere right?


2018-12-05
[16:30:48.0000] <annevk>
domfarolino: that prolly fall between the cracks, but yeah, needs to be defined somwhere

[16:32:21.0000] <domfarolino>
I‚Äôll file an issue. Seems like something good to take care of alongside all the link processing refactoring and what not

[23:40:15.0000] <annevk>
domfarolino: yeah, it‚Äôs also highly relevant for this import maps proposal that‚Äôs floating around

[23:40:58.0000] <annevk>
Ta


2018-12-06
[16:56:20.0000] <MikeSmith>
For Constructable Stylesheet Objects, has there been discussion of use cases other than Shadow DOM use case it was designed for?

[16:57:21.0000] <MikeSmith>
(I don‚Äôt think the Shadow DOM use case is compelling enough on its own „Éº just curious what else the feature might be useful for)

[16:57:53.0000] <MikeSmith>
s/don‚Äôt think/think/

[09:07:01.0000] <jgraham>
https://blogs.windows.com/windowsexperience/2018/12/06/microsoft-edge-making-the-web-better-through-more-open-source-collaboration/

[09:29:11.0000] <innovati>
I look forward to the day that I can read the source of all major browser engines to get a clue what might be going on <3

[09:29:58.0000] <ato>
Where all = Blink + Gecko.

[09:49:45.0000] <innovati>
Did you forget about https://github.com/WebKit/webkit ?


2018-12-07
[03:16:44.0000] <MikeSmith>
about https://stackoverflow.com/questions/53666880/can-window-console-be-overwritten-is-it-read-only ..

[03:17:03.0000] <MikeSmith>
is it even possible in WebIDL to annotate a namespace as ready-only?

[03:20:38.0000] <MikeSmith>
hmm OK I see https://heycam.github.io/webidl/#es-namespaces says The property has the attributes { [[Writable]]: true, [[Enumerable]]: false, [[Configurable]]: true }.

[08:27:06.0000] <innovati>
overwriting window.console is how I get speaking console messages in the browser üòá https://gist.github.com/tomhodgins/71bd6ae8bf1219448cba414891257163


2018-12-10
[01:00:07.0000] <Domenic>
Ping for re-review https://github.com/whatwg/html/pull/4183

[01:12:43.0000] <annevk>
hsivonen: shall we resolve https://github.com/whatwg/encoding/issues/115 in favor of users, per our own analysis?

[01:52:24.0000] <hsivonen>
annevk: I'll ping the Unicode list first, but I think we should likely resolve it to remove the U+FFFD generation

[01:56:49.0000] <annevk>
hsivonen: okay, seems like that will be a rather nice simplification


2018-12-11
[01:35:19.0000] <hsivonen>
where do I find the review snapshots of the WHATWG specs?

[02:41:57.0000] <MikeSmith>
hsivonen: at, e.g., https://html.spec.whatwg.org/commit-snapshots/

[03:06:13.0000] <annevk>
hsivonen: or https://html.spec.whatwg.org/review-drafts/ if you meant Review Drafts

[03:06:29.0000] <annevk>
hsivonen: we thus far haven't kept a central registry

[03:07:07.0000] <hsivonen>
annevk: thanks

[03:07:14.0000] <hsivonen>
MikeSmith: I meant what annevk linked to

[03:07:24.0000] <hsivonen>
styling is broken for https://encoding.spec.whatwg.org/review-drafts/2018-06/

[03:07:45.0000] <annevk>
hsivonen: that's intentional

[03:07:54.0000] <hsivonen>
annevk: ok

[03:08:31.0000] <annevk>
Thanks for reminding me of this, I guess I should prepare some more RDs as we haven't automated them yet and it's been six months

[03:09:05.0000] <hsivonen>
my use case is having a URL to refer to in feedback to the Unicode Consortium such that the content at that URL won't get bug fixes applied but shows past bugs

[03:09:14.0000] <hsivonen>
and to have an URL that doesn't line-wrap in PDF

[03:09:32.0000] <hsivonen>
so the RD URL is sufficiently short while the ones with git hashes wrap

[03:10:39.0000] <annevk>
hsivonen: FWIW, today or tomorrow we'll likely have a new Encoding snapshot out now that I'm reminded we need to do that

[03:10:58.0000] <hsivonen>
annevk: ok

[03:57:45.0000] <annevk>
https://github.com/whatwg/sg/issues/86 has a list of RD PRs

[06:08:06.0000] <annevk>
hsivonen: how is inputEmpty from https://github.com/whatwg/encoding/issues/69#issuecomment-435016213 not redundant?

[06:10:19.0000] <annevk>
hsivonen: never mind

[07:49:29.0000] <miketaylr>
annevk: re: https://github.com/whatwg/compat/pull/109, is it helpful for me to take any action here? merge? do nothing?

[07:49:42.0000] <miketaylr>
i can also add a heart emoji

[07:50:13.0000] <annevk>
miketaylr: I'm hoping Domenic will take care of it

[07:50:38.0000] <annevk>
miketaylr: the end goal is to automate these things so nobody has to worry, so we might as well keep doing it until then

[07:50:47.0000] <annevk>
we being Domenic and I

[07:56:22.0000] <miketaylr>
sweet

[07:56:22.0000] <miketaylr>
thanks

[07:56:34.0000] <miketaylr>
i retract of my offer of emoji heart then

[08:00:37.0000] <gsnedders>
have a üíú from me instead

[08:09:16.0000] <miketaylr>
:)~

[08:46:51.0000] <XhmikosR>
does anybody know why w3.org redirects IE 11 to non http?

[08:47:43.0000] <XhmikosR>
https://gist.github.com/XhmikosR/c39683c411bde70c849209f4649ead69

[08:48:20.0000] <XhmikosR>
@MikeSmith: this is what I wanted to ask yesterday but I thought the tool I was using was wrong. Apparently they use the IE11 UA which redirected the w3.org pages


2018-12-12
[16:37:04.0000] <MikeSmith>
XhmikosR: dunno, but I‚Äôve pinged the systems team to ask

[01:29:13.0000] <MikeSmith>
XhmikosR: ‚Äúdue to  IE support of HSTS but not of UIR‚Äù

[01:30:57.0000] <XhmikosR>
MikeSmith: I don't quite follow

[01:31:22.0000] <XhmikosR>
IE 11 supports HSTS IIRC

[01:31:28.0000] <MikeSmith>
yeah

[01:31:54.0000] <MikeSmith>
but it doesn‚Äôt support Upgrade-Insecure-Requests

[01:32:17.0000] <XhmikosR>
ok I guess I will tell them to switch to another UA

[01:34:34.0000] <MikeSmith>
yeah the issue is that the w3.org site has tens of thousands or whatever documents with <img> and <a> etc elements with insecure http URLs

[01:35:02.0000] <MikeSmith>
so the site relies on Upgrade-Insecure-Requests support

[01:35:18.0000] <MikeSmith>
otherwise all those pages would be mixed content

[01:35:34.0000] <MikeSmith>
if they are served as https

[04:52:33.0000] <foolip>
annevk: did you notice https://travis-ci.org/whatwg/notifications/builds/413968774? it seems like the change was deployed, but maybe the failure is still bad?

[04:56:25.0000] <annevk>
foolip: I think I forgot about it

[05:05:35.0000] <annevk>
foolip: I didn't, but I never got review from Domenic in https://github.com/whatwg/notifications/pull/141

[05:05:41.0000] <annevk>
foolip: I guess I'll just land my fix

[05:06:20.0000] <foolip>
annevk: thanks!

[05:06:33.0000] <foolip>
there are two more red things in https://travis-ci.org/whatwg. MikeSmith do you know about the wattsi one?

[05:08:03.0000] <annevk>
foolip: did you change the key of the WHATWG server?

[05:08:24.0000] <annevk>
foolip: see https://travis-ci.org/whatwg/notifications/builds/466987961

[05:08:42.0000] <foolip>
annevk: not intentionally, I did redirect traffic to a clone of marquee in order to upgrade it though. I'll revert and check.

[05:10:07.0000] <foolip>
annevk: I've restarted the job and will see if that fixes the problem.

[05:10:41.0000] <foolip>
I assumed that a perfect clone with the same external IP would be indistinguishable

[05:11:00.0000] <foolip>
Deploy worked, but since I restarted the job I can't read the old one :(

[05:11:54.0000] <annevk>
foolip: the old one claimed a key mismatch of sorts

[05:12:23.0000] <annevk>
foolip: and actually recommended clearing the existing set of hosts...

[05:13:10.0000] <foolip>
annevk: I don't quite understand how that could happen, but OK. Perhaps a machine knows its IP and includes that in its key somehow, dynamically as opposed to just serving the bits on disk?

[05:13:57.0000] <annevk>
I wouldn't know

[05:15:52.0000] <foolip>
annevk: the clone was serving traffic correctly, however. I'll give it another try now, just need to restart the machine without dropping traffic. if something is deployed during the switch I'll restart those after.

[05:16:53.0000] <foolip>
/me wonders how real sysadmins do this, other than building on stuff like AWS and GCP

[05:22:00.0000] <foolip>
alright, marquee is updated!

[09:05:48.0000] <TabAtkins>
foolip: These days a lot of "real" sysadmins do just build stuff on AWS. ^_^

[09:40:03.0000] <nox>
/me is sad about Amazon and other monopolies.

[13:04:32.0000] <TimothyGu>
Hmm, could someone point me to where URL list got added to request?

[13:04:47.0000] <TimothyGu>
just trying to understand what it's for

[13:49:03.0000] <Mek>
TimothyGu: https://github.com/whatwg/fetch/commit/1d8173afffcffad2587f2922381878939c9cebea added URL list supposedly because CSP needs it

[13:50:15.0000] <TimothyGu>
Mek: thx

[13:50:51.0000] <TimothyGu>
Ooh this is old, thought it was a recent change


2018-12-13
[22:54:42.0000] <annevk>
TimothyGu: various places need to know about redirects, they're tracked on request, because the response is thrown away if it's a redirect (they are ultimately copied to the response though)

[22:55:45.0000] <TimothyGu>
annevk: got it, I see that there hasn't been any movement on https://github.com/w3c/webappsec/issues/227 for quite a while so do you know if the proposals end up getting implemented?

[23:56:18.0000] <annevk>
TimothyGu: I haven‚Äôt kept track tbh, it does seem weird that is not addressed

[23:56:39.0000] <annevk>
TimothyGu: might be too late at some point, if not already

[00:30:53.0000] <Ms2ger>
Is https://html.spec.whatwg.org/multipage/indices.html#all-interfaces supposed to have content?

[01:00:15.0000] <annevk>
Ms2ger: yeah, it seems that regressed and wasn't noticed because we trust the build process...

[01:31:17.0000] <Domenic>
:(

[01:31:25.0000] <Domenic>
Probably more fallout from the syntax highlighting switch to <pre><code>

[01:32:57.0000] <annevk>
Domenic: that sounds likely

[01:42:22.0000] <annevk>
Sigh, https://github.com/whatwg/meta/pull/120

[02:04:20.0000] <nox>
Am reading https://html.spec.whatwg.org/multipage/xhtml.html#serialising-xhtml-fragments because /xhr/send-entity-body-document.htm fails in Servo because it serialises <√ø/> as <√ø></√ø>, where are the rules for serialising empty tags these days?

[02:05:54.0000] <annevk>
nox: XML serialization isn't defined in great detail, though maybe https://w3c.github.io/DOM-Parsing/ has something

[02:06:22.0000] <annevk>
nox: I don't think I even considered the alternative when writing that test

[02:06:56.0000] <nox>
annevk: Heh, classic. :)

[02:08:10.0000] <nox>
annevk: I assume step 15 applies? 'If ns is not the HTML namespace, and the node's list of children is empty, then append "/" (U+002F SOLIDUS) to markup and set the skip end tag flag to true.'

[02:09:06.0000] <annevk>
nox: yeah maybe, I wouldn't try to implement that algorithm though

[02:09:15.0000] <nox>
annevk: Yeah was just being curious.

[02:09:34.0000] <annevk>
nox: it was written by Edge and as far as I can tell it didn't have the normal amount of WHATWG rigor applied to it

[02:09:45.0000] <nox>
Hah.

[02:09:52.0000] <nox>
annevk: Sorry I don't know about Edge,

[02:10:00.0000] <nox>
is that a weird version of Chrome? ü§°

[02:10:52.0000] <annevk>
uhuh

[02:30:56.0000] <Domenic>
nox: annevk: this seems related to the very recent https://github.com/whatwg/html/pull/4238 ? Maybe that's how you got here.

[02:31:20.0000] <MikeSmith>
When was the last time we had only three major browser engines? Before WebKit? (IE, Gecko, Presto)

[02:31:52.0000] <annevk>
Domenic: per above nox was looking at an xhr test failure in Servo and is looking at the XML serialization, not HTML

[02:32:01.0000] <Domenic>
Ah OK

[02:32:08.0000] <Domenic>
Yeah we should do the DOM Parsing -> HTML merge some time

[02:32:14.0000] <Domenic>
And fix the bugs along the way

[02:58:37.0000] <MikeSmith>
https://github.com/whatwg/html-build/pull/188 restores the https://html.spec.whatwg.org/multipage/indices.html#all-interfaces index (thanks Ms2ger)

[09:10:52.0000] <hsivonen>
I'm bad at searching the Web. Is there documentation about impossible katakana and hiragana 2-grams? (i.e. pair of kana immediately followed by another kana that can never occur in the Japanese language)

[09:12:10.0000] <hsivonen>
(running a program over a Wikipedia dump would probably discover these.)

[09:25:07.0000] <hsivonen>
a comment in Gecko's Japanese detector says that there are impossible pairs

[09:25:36.0000] <hsivonen>
anyway, it seems that there any easier-to-check EUC-JP vs. Shift_JIS signals anyway

[12:37:46.0000] <bkardell>
hmm, apparently I asked a question meant for here in the w3c css channel... no wonder nobody answered :)

[12:38:10.0000] <bkardell>
So, I am having trouble parsing some spec text - it seems actively confusing... here's a better explanation maybe https://gist.github.com/bkardell/8daecac220d2d504e9eb7e05ead917c0

[12:39:33.0000] <annevk>
bkardell: pretty sure it's talking about the case where you modify the children through script

[12:39:44.0000] <annevk>
bkardell: as that's the only way you can end up with non-Text children

[12:39:53.0000] <bkardell>
ahhhhhhhhhhhhh

[12:39:53.0000] <annevk>
bkardell: or children, plural, even

[12:40:06.0000] <bkardell>
that could be clearer

[12:40:16.0000] <bkardell>
let me think how

[12:40:29.0000] <annevk>
bed time for me now üòÉ

[12:40:36.0000] <bkardell>
night anne

[12:40:42.0000] <annevk>
nn

[12:40:43.0000] <bkardell>
ty


2018-12-14
[11:09:08.0000] <tobie>
^ Domenic, annevk, others.

[11:10:07.0000] <annevk>
tobie: I don't see anything above?

[11:10:24.0000] <tobie>
oh

[11:11:25.0000] <tobie>
Turns out my irc client is dumb.

[11:11:45.0000] <tobie>
 hey‚Äîjust found out today, quite by accident, that PR Preview was broken for HTML. (Next time, ping me on twitter or via email, I'll be more responsive.)

[11:11:57.0000] <tobie>
 I fixed it, plus surfaced errors directly to the GitHub interface. (Let me know if those are over the top.)

[11:12:10.0000] <tobie>
Finally, I re-ran PR-preview for all the issues created on HTML since early October.

[11:12:19.0000] <tobie>
annevk: better?

[11:12:22.0000] <annevk>
thanks, will do, though likely next year

[11:12:26.0000] <annevk>
yes!

[11:12:30.0000] <tobie>
:)

[11:13:29.0000] <tobie>
annevk: happy new year, then!

[11:15:39.0000] <annevk>
likewise \o/


2018-12-16
[16:36:41.0000] <domfarolino>
annevk: is the origin of a CORS-cross-origin response considered to be opaque? (https://html.spec.whatwg.org/multipage/origin.html#concept-origin-opaque)

[22:23:58.0000] <annevk>
domfarolino: no


2018-12-17
[08:42:33.0000] <hsivonen>
Where does the ECMAScript spec say what the valid range for String and ArrayBuffer .length property is?

[08:43:07.0000] <hsivonen>
ah. 6.1.4

[08:43:39.0000] <hsivonen>
Does V8 or JSC actually allow strings whose length doesn't fit in uint32_t?

[08:44:26.0000] <gsnedders>
I don't think V8 does, at least.

[08:44:47.0000] <gsnedders>
Because the heap limit is smaller than that.

[09:00:49.0000] <hsivonen>
ok. I guess strings longer 32-bit length are theoretical

[09:01:04.0000] <hsivonen>
it'll be fun to see what breaks when actually trying to go past the limit in the future

[09:01:36.0000] <hsivonen>
but I guess it's technically correct to use WebIDL unsigned long long for values that might have to hold string max length

[09:01:41.0000] <hsivonen>
in theory at least

[15:07:26.0000] <TabAtkins>
Jeezus, I'm incapable of wording right now. What's the term for a site that holds a lot of libraries people might want to load, so you can just load scripts from there rather than loading them from your own server?

[15:12:57.0000] <MikeSmith>
TabAtkins: CDN?

[15:13:06.0000] <TabAtkins>
THANK YOU, yes, that's it

[15:13:30.0000] <MikeSmith>
cheers :)

[15:13:38.0000] <astearns>
(I was going to go with a Single Point Vulnerability)


2018-12-18
[21:48:45.0000] <falken>
How does CSS background-image hook into the Fetch spec? I'm trying to determine what the spec says the referrer should be for those requests (the document or the stylesheet?). The closest I can find is https://drafts.csswg.org/css-backgrounds-3/#background-image which  leads to https://www.w3.org/TR/CSS21/syndata.html#value-def-uri which doesn't seem to hook into Fetch.

[21:54:23.0000] <falken>
Browsers look all over the place here https://wpt.fyi/results/service-workers/service-worker/fetch-request-css-base-url.https.html?label=stable&aligned

[22:16:23.0000] <astearns>
falken: we need to work on that. I think this issue is the placeholder: https://github.com/w3c/csswg-drafts/issues/904

[22:16:55.0000] <astearns>
and/or this one: https://github.com/w3c/csswg-drafts/issues/562

[22:18:23.0000] <falken>
Thanks! Do you know off-hand what the "correct" expectations should be for referrer of a subresource request from a stylesheet? It looks like Chrome/Firefox use the stylesheet URL after stripping the query, and Edge/Safari use the document URL. (at least for the referrer seen by a service worker)

[22:18:48.0000] <falken>
If there's no CSS test for this without service workers, maybe this is an over enthusiastic test...

[22:19:09.0000] <astearns>
I think we discussed something in that area recently, let me look

[22:20:15.0000] <falken>
great thanks

[22:25:33.0000] <astearns>
bah - I can't find it. ping TabAtkins about this (probably tomorrow during PST working hours)

[22:38:08.0000] <falken>
OK thanks, np

[04:24:12.0000] <annevk>
falken: style sheet URL is the referrer

[06:17:32.0000] <annevk>
(also seems fine to test)

[13:57:37.0000] <Domenic>
annevk: ping on https://github.com/whatwg/html/pull/4234 ? I think it's good to go but would be ideal to have your sign-off.

[13:58:10.0000] <Domenic>
Oh hmm I guess no multi-implementer interest yet.

[14:36:28.0000] <gsnedders>
anyone know off-hand what browser first limited window.open to user-initated clicks?

[14:47:09.0000] <Domenic>
I would guess Firefox

[14:47:22.0000] <Domenic>
I feel like they were the first to advertise "built in popup blocker"

[14:48:52.0000] <gsnedders>
was it really that late? geez! I know I remember the days before it being commonplace, but still, wow.

[15:00:31.0000] <falken>
annevk: all right. do you know what the referrer policy is expected to be? Chrome and Firefox use the stylesheet URL after stripping the query. Tracing where referrer gets set in Fetch, looks like the default is "no-referrer-when-downgrade" which wouldn't strip the query.

[15:09:26.0000] <Domenic>
falken: https://w3c.github.io/webappsec-referrer-policy/#integration-with-css

[15:18:12.0000] <falken>
Domenic: nice thanks


2018-12-19
[07:30:50.0000] <annevk>
Domenic: doesn‚Äôt seem to have two impl signed up yet?

[07:31:16.0000] <annevk>
Ah

[07:31:26.0000] <annevk>
Also needs documentation


2018-12-20
[18:29:41.0000] <domfarolino>
annevk: https://github.com/whatwg/html/pull/4031 is ready for a closer review now I think

[05:21:09.0000] <yoav>
Hey folks! I'm looking at reload-trigger navigation and having trouble finding where it is actually defined https://html.spec.whatwg.org/multipage/browsing-the-web.html#reload-triggered-navigation

[05:21:42.0000] <yoav>
(trying to understand if it includes user-triggered reloads or not, e.g. clicking the reload button)

[05:53:02.0000] <annevk>
domfarolino: I‚Äôm more or less out until 2019

[05:53:27.0000] <annevk>
yoav: mostly undefined iirc

[05:55:55.0000] <yoav>
OK...

[06:00:32.0000] <yoav>
annevk: are there objections to defining it? Or just something that haven't happened?

[07:51:41.0000] <domfarolino>
Sounds good I‚Äôll leave a note on the PR for next year

[11:21:20.0000] <annevk>
yoav: defining it sounds good, user-triggered navigation in general could use some love

[11:22:31.0000] <annevk>
yoav: can at best make should requirements of course

[11:50:11.0000] <yoav>
annevk: cool,  thanks

[12:22:01.0000] <gsnedders>
we don't have any public `git blame` view of HTML, do we?

[13:08:43.0000] <annevk>
gsnedders: see README of whatwg/html

[13:12:43.0000] <gsnedders>
annevk: oh, I should've thought to look at GitHub :)

[13:29:35.0000] <annevk>
üòä


2018-12-21
[21:04:13.0000] <MikeSmith>
for Github PRs and Travis, has anybody ever run into a problem where Travis is green but Github doesn‚Äôt recognize it‚Äôs green?

[21:04:36.0000] <MikeSmith>
https://github.com/w3c/webdriver/pull/1382

[21:05:10.0000] <MikeSmith>
/me tries restarting the Travis build

[21:07:10.0000] <MikeSmith>
nm, just restarting the build fixed it

[06:35:12.0000] <jgraham>
MikeSmith: Yeah, the API is not infallible

[06:45:57.0000] <annevk>
hsivonen: in https://github.com/whatwg/encoding/issues/115#issuecomment-447773485 I'm not sure what the non-committal middle ground is given that the document lists two alternatives

[06:46:22.0000] <annevk>
hsivonen: anyway, both of those seem reasonable to me

[11:46:24.0000] <domfarolino>
Domenic: First, thanks for the review. WRT to providing a rel="stylesheet" override for concept-link-obtain, my plan is to also do this for preload too, since there will be more preload-specific logic w/ image{srcset, sizes}.

[11:46:37.0000] <domfarolino>
With these complete overrides, I think there will be nothing left referring to the non-override steps, and some duplication in each. That‚Äôs why I was originally doing some delegating, but do you think it is fine to just have separate algorithms specifically?

[11:50:13.0000] <Domenic>
domfarolino: I'm not sure I quite see your vision; could you explain more? All the other link types (besides preload, stylesheet, and modulepreload) would still use the default link-obtain algorithm, right?

[11:53:40.0000] <domfarolino>
Domenic: Oh geez, yeah, I guess I was just looking at cross-links, but I guess any link type that creates an "external resource link" sorta implicitly uses concept-link-obtain, though I think it is only linked to from preload, stylesheet, and one or two other places

[11:54:58.0000] <domfarolino>
Ok so providing those obtain overrides seems good

[12:29:46.0000] <Domenic>
domfarolino: Yeah I'm not sure on the exact best strategy, in particular for avoiding too much duplication. modulepreload and default link-obtain are different enough that a complete override makes sense, but the others may be very similar...

[12:30:13.0000] <Domenic>
Maybe the simplest thing is to just write out 4 separate algorithms, duplication be damned, and then consider refactoring to remove duplication afterward.

[12:53:10.0000] <domfarolino>
Domenic: Yeah that's what I was thinking. Now I'm just trying to figure out the best way to coordinate creating/adding CSS style sheets in a way such that scripts don't get unblocked before the style sheet fire/load event gets fired (hence some of the acrobatics in that PR)

[12:54:14.0000] <Domenic>
Yeah. I wonder if just a counter on the document would suffice.

[12:56:11.0000] <domfarolino>
Right, seems to be similar to Chrome's impl.

[14:13:47.0000] <domfarolino>
Domenic: So setting the ready/done flag, or equivalently decrementing a counter, will indeed well-specify the order between link load/error events and pending parsing-blocking script execution (https://github.com/whatwg/html/issues/4020). The benefit of "adding" the sheet in the queued task though well-specifies the order of the sheet becoming "available to scripts" and the load/error event

[14:14:06.0000] <domfarolino>
For example: https://script-blocking-styles.glitch.me is sometimes inconsistent in Chrome, but the opposite of Firefox's result

[14:14:15.0000] <Domenic>
Ah OK, that makes sense

[14:14:26.0000] <Domenic>
I guess "adding" is the right formalization of "available to scripts", indeed

[14:14:39.0000] <Domenic>
But it still seems possible to do the create and add atomically, right?

[14:15:36.0000] <domfarolino>
As long as you did both either before the queued task (and make Chrome change), or in the task (and make FF change) right?

[14:16:39.0000] <Domenic>
What would before the queued task mean?

[14:22:10.0000] <domfarolino>
Before the queued task executes. Oh shoot so the steps here (https://html.spec.whatwg.org/multipage/links.html#link-type-stylesheet:external-resource-link-9) run _after_ the queued task (the one that gets queued in concept-link-obtain) executes right?

[14:23:33.0000] <Domenic>
Ehhhhh I wouldn't say the spec is clear on that point -_-

[14:24:03.0000] <Domenic>
I think the ideal flow though is as annevk outlined. In parallel, fetch, parse, then queue a task to do everything else (= fire events, create/add)

[14:24:11.0000] <Domenic>
The question is what order the everything-else goes in, I guess

[14:24:36.0000] <Domenic>
I guess everything else = fire events, create/add, decrement the counter

[14:36:49.0000] <domfarolino>
Domenic: ^Indeed. Ok, what do you think of defining "post-obtain" steps to essentially be the current paragraph under concept-link-obtain (that queues a task), and having rel="stylesheet" defer to the concept-link-obtain algorithm (for generic loading), but then run its own specific post-obtain steps, which fires events, creates/adds the sheet, and decrements the counter

[14:38:57.0000] <domfarolino>
Alternatively I'm OK with an entirely separate loading algorithm too, however it just seems the biggest difference will be in the steps after the resource is obtained (hence the sketchy "an optional styleSheet", in my PR)

[14:40:27.0000] <Domenic>
That makes sense as a general direction. Specifically, what structure were you thinking? One idea would be to have "obtain the resource" and "post-obtain steps" both be algorithms with default definitions, where the default "obtain the resource" calls the (polymorphic) "post-obtain steps". Then rel="stylesheet" only overrides "post-obtain steps".

[14:41:04.0000] <Domenic>
(Whereas rel="modulepreload" overrides "obtain the resource", so it reuses none of the shared infrastructure.)

[14:47:40.0000] <Domenic>
I'm writing something up real quick...

[14:51:52.0000] <domfarolino>
That's quite close to what I was thinking. I am also writing up something lol

[14:58:31.0000] <Domenic>
domfarolino: https://gist.github.com/domenic/8758cd7b8feeb8034996b9f13090dc34

[15:00:02.0000] <Domenic>
(refresh, some Markdown errors)

[15:01:41.0000] <Domenic>
(refresh, added handling of content type)

[15:02:03.0000] <domfarolino>
Ok at first glance it seems pretty similar in concept to what I did: https://docs.google.com/document/d/15plRAvijIkk4ZIcXR2_VI8Ut7lQsSOjCZnlSQOcoJzk/edit?usp=sharing, btw I used a "drawing" because I thought I was going to have more arrows lol

[15:02:33.0000] <domfarolino>
Everything in bold is a dfn. Will check out the gist in more detail now

[15:03:42.0000] <Domenic>
Ah yeah pretty similar. I guess the main difference is I went away from having everyone define their own "obtain the resource" if they don't have to.

[15:03:52.0000] <Domenic>
(even though that's what I advised you to do earlier ;) )

[15:07:17.0000] <domfarolino>
Haha right. I'm fine with either, though I tend to lean towards more <dfn>s when possible.

[15:07:38.0000] <domfarolino>
Cool, I think I can take what we came up with and run with it

[15:07:42.0000] <Domenic>
\o/

[15:08:20.0000] <Domenic>
I'm probably signing off for the night, and not working next week, but I'll still be around if there's any specific questions or thoughts you have

[15:08:37.0000] <Domenic>
Thanks for taking this on; it's a big mess but I see the light. Really appreciated.

[15:09:16.0000] <domfarolino>
Sure, yeah we'll see when/if time permits and all. Thanks for the help and insight! Equally appreciated


2018-12-22
[20:30:06.0000] <cluelessperson>
!topic

[09:41:35.0000] <domfarolino>
Domenic: Looking over the gist, I definitely now think the algorithm overrides are a much cleaner approach than a bunch of separate dfns, many thanks

[09:41:46.0000] <Domenic>
\o/


2018-12-23
[11:29:18.0000] <domfarolino>
Domenic: Should "process the linked resource" link to or somehow include Fetch's dfn of "process the response"?

[11:30:12.0000] <Domenic>
That gets in to the "should we formalize this better" discussion... also maybe the task sources thing, since IIRC fetch queues on the networking task source to do the process the response steps

[11:30:24.0000] <Domenic>
My earlier attempt tried to use "process the response", let me find it

[11:30:58.0000] <Domenic>
https://github.com/whatwg/html/pull/3544/files#diff-36cd38f49b9afa08222c0dc9ebfe35ebR13646

[11:31:28.0000] <Domenic>
So TLDR, I think the answer is ultimately yes, but whether you go that far in this initial patch is up to you; it seems easy to scope-creep into something that gets stuck like 3544 did.

[11:35:03.0000] <domfarolino>
Ah, yeah that diff is actually what prompted the question :) Yeah, seems best to eventually do, however I may just get this stuff cleaned up before tackling that as a whole. ta


2018-12-31
[16:58:47.0000] <devsnek>
does mathias bynens ever hang around around here

[18:12:01.0000] <domfarolino>
Sometimes IIRC

